

HI-TECH Software LITE Macro Assembler (PIC18) V9.66 build 8870 
                                                       Thu Aug 29 18:48:41 2019

HI-TECH Software Omniscient Code Generator build 8870
     1  000000                     opt subtitle "HI-TECH Software Omniscient Code G
                                 enerator build 8870"
     2                           
     3                           	processor	18F252
     4  000000                     porta	equ	0F80h
     5  000000                     portb	equ	0F81h
     6  000000                     portc	equ	0F82h
     7  000000                     portd	equ	0F83h
     8  000000                     porte	equ	0F84h
     9  000000                     lata	equ	0F89h
    10  000000                     latb	equ	0F8Ah
    11  000000                     latc	equ	0F8Bh
    12  000000                     latd	equ	0F8Ch
    13  000000                     late	equ	0F8Dh
    14  000000                     trisa	equ	0F92h
    15  000000                     trisb	equ	0F93h
    16  000000                     trisc	equ	0F94h
    17  000000                     trisd	equ	0F95h
    18  000000                     trise	equ	0F96h
    19  000000                     pie1	equ	0F9Dh
    20  000000                     pir1	equ	0F9Eh
    21  000000                     ipr1	equ	0F9Fh
    22  000000                     pie2	equ	0FA0h
    23  000000                     pir2	equ	0FA1h
    24  000000                     ipr2	equ	0FA2h
    25  000000                     t3con	equ	0FB1h
    26  000000                     tmr3l	equ	0FB2h
    27  000000                     tmr3h	equ	0FB3h
    28  000000                     ccp1con	equ	0FBDh
    29  000000                     ccpr1l	equ	0FBEh
    30  000000                     ccpr1h	equ	0FBFh
    31  000000                     adcon1	equ	0FC1h
    32  000000                     adcon0	equ	0FC2h
    33  000000                     adresl	equ	0FC3h
    34  000000                     adresh	equ	0FC4h
    35  000000                     sspcon2	equ	0FC5h
    36  000000                     sspcon1	equ	0FC6h
    37  000000                     sspstat	equ	0FC7h
    38  000000                     sspadd	equ	0FC8h
    39  000000                     sspbuf	equ	0FC9h
    40  000000                     t2con	equ	0FCAh
    41  000000                     pr2	equ	0FCBh
    42  000000                     tmr2	equ	0FCCh
    43  000000                     t1con	equ	0FCDh
    44  000000                     tmr1l	equ	0FCEh
    45  000000                     tmr1h	equ	0FCFh
    46  000000                     rcon	equ	0FD0h
    47  000000                     wdtcon	equ	0FD1h
    48  000000                     lvdcon	equ	0FD2h
    49  000000                     osccon	equ	0FD3h
    50  000000                     t0con	equ	0FD5h
    51  000000                     tmr0l	equ	0FD6h
    52  000000                     tmr0h	equ	0FD7h
    53  000000                     status	equ	0FD8h
    54  000000                     fsr2	equ	0FD9h
    55  000000                     fsr2l	equ	0FD9h
    56  000000                     fsr2h	equ	0FDAh
    57  000000                     plusw2	equ	0FDBh
    58  000000                     preinc2	equ	0FDCh
    59  000000                     postdec2	equ	0FDDh
    60  000000                     postinc2	equ	0FDEh
    61  000000                     indf2	equ	0FDFh
    62  000000                     bsr	equ	0FE0h
    63  000000                     fsr1	equ	0FE1h
    64  000000                     fsr1l	equ	0FE1h
    65  000000                     fsr1h	equ	0FE2h
    66  000000                     plusw1	equ	0FE3h
    67  000000                     preinc1	equ	0FE4h
    68  000000                     postdec1	equ	0FE5h
    69  000000                     postinc1	equ	0FE6h
    70  000000                     indf1	equ	0FE7h
    71  000000                     wreg	equ	0FE8h
    72  000000                     fsr0	equ	0FE9h
    73  000000                     fsr0l	equ	0FE9h
    74  000000                     fsr0h	equ	0FEAh
    75  000000                     plusw0	equ	0FEBh
    76  000000                     preinc0	equ	0FECh
    77  000000                     postdec0	equ	0FEDh
    78  000000                     postinc0	equ	0FEEh
    79  000000                     indf0	equ	0FEFh
    80  000000                     intcon3	equ	0FF0h
    81  000000                     intcon2	equ	0FF1h
    82  000000                     intcon	equ	0FF2h
    83  000000                     prod	equ	0FF3h
    84  000000                     prodl	equ	0FF3h
    85  000000                     prodh	equ	0FF4h
    86  000000                     tablat	equ	0FF5h
    87  000000                     tblptr	equ	0FF6h
    88  000000                     tblptrl	equ	0FF6h
    89  000000                     tblptrh	equ	0FF7h
    90  000000                     tblptru	equ	0FF8h
    91  000000                     pcl	equ	0FF9h
    92  000000                     pclat	equ	0FFAh
    93  000000                     pclath	equ	0FFAh
    94  000000                     pclatu	equ	0FFBh
    95  000000                     stkptr	equ	0FFCh
    96  000000                     tosl	equ	0FFDh
    97  000000                     tosh	equ	0FFEh
    98  000000                     tosu	equ	0FFFh
    99                           	global	__ramtop
   100                           	global	__accesstop
   101                           	GLOBAL	__activetblptr
   102  000000                     __activetblptr	EQU	2
   103                           	GLOBAL	__smallconst,__Lsmallconst
   104  000000                     __smallconst	EQU	__Lsmallconst
   105                           	GLOBAL	__mediumconst,__Lmediumconst
   106  000000                     __mediumconst	EQU	__Lmediumconst
   107                           	GLOBAL	__Ldata
   108  000000                     __Ldata	EQU	76
   109                           	FNALIGN	_output_putch,_ser_putch,_format_putcha
                                 r
   110  000000                     indicator@indicate	equ	?_indicator+0
   111                           	global	indicator@indicate
   112  000000                     _measure_capacitance$1281	equ	??_measure_capacit
                                 ance+0
   113                           	global	_measure_capacitance$1281
   114  000000                     measure_capacitance@unit	equ	??_measure_capacita
                                 nce+4
   115                           	global	measure_capacitance@unit
   116  000000                     measure_capacitance@var	equ	??_measure_capacitan
                                 ce+5
   117                           	global	measure_capacitance@var
   118  000000                     measure_capacitance@Cin	equ	??_measure_capacitan
                                 ce+7
   119                           	global	measure_capacitance@Cin
   120  000000                     _measure_inductance$1300	equ	??_measure_inductan
                                 ce+0
   121                           	global	_measure_inductance$1300
   122  000000                     _measure_inductance$1301	equ	??_measure_inductan
                                 ce+4
   123                           	global	_measure_inductance$1301
   124  000000                     _measure_inductance$1302	equ	??_measure_inductan
                                 ce+8
   125                           	global	_measure_inductance$1302
   126  000000                     _measure_inductance$1303	equ	??_measure_inductan
                                 ce+12
   127                           	global	_measure_inductance$1303
   128  000000                     measure_inductance@unit	equ	??_measure_inductanc
                                 e+16
   129                           	global	measure_inductance@unit
   130  000000                     measure_inductance@var	equ	??_measure_inductance
                                 +17
   131                           	global	measure_inductance@var
   132  000000                     measure_inductance@denominator	equ	??_measure_in
                                 ductance+19
   133                           	global	measure_inductance@denominator
   134  000000                     measure_inductance@numerator	equ	??_measure_indu
                                 ctance+23
   135                           	global	measure_inductance@numerator
   136  000000                     measure_inductance@Lin	equ	??_measure_inductance
                                 +27
   137                           	global	measure_inductance@Lin
   138  000000                     timer2_init@ps	equ	??_timer2_init+0
   139                           	global	timer2_init@ps
   140  000000                     timer2_init@postscaler	equ	??_timer2_init+1
   141                           	global	timer2_init@postscaler
   142  000000                     timer2_init@ps_mode	equ	?_timer2_init+0
   143                           	global	timer2_init@ps_mode
   144  000000                     format_xint32@x	equ	?_format_xint32+0
   145                           	global	format_xint32@x
   146  000000                     _format_double$1332	equ	??_format_double+0
   147                           	global	_format_double$1332
   148  000000                     _format_double$1333	equ	??_format_double+4
   149                           	global	_format_double$1333
   150  000000                     format_double@digit	equ	??_format_double+8
   151                           	global	format_double@digit
   152  000000                     format_double@m	equ	??_format_double+10
   153                           	global	format_double@m
   154  000000                     format_double@weight	equ	??_format_double+12
   155                           	global	format_double@weight
   156  000000                     format_double@num	equ	?_format_double+0
   157                           	global	format_double@num
   158  000000                     print_unit@unit	equ	?_print_unit+0
   159                           	global	print_unit@unit
   160  000000                     print_reading@measurement	equ	?_print_reading+0
   161                           	global	print_reading@measurement
   162  000000                     ___lwtofl@f1	equ	??___lwtofl+0
   163                           	global	___lwtofl@f1
   164  000000                     ___lwtofl@c	equ	?___lwtofl+0
   165                           	global	___lwtofl@c
   166  000000                     measure_freq@prev	equ	??_measure_freq+0
   167                           	global	measure_freq@prev
   168  000000                     measure_freq@count	equ	??_measure_freq+1
   169                           	global	measure_freq@count
   170  000000                     measure_freq@i	equ	??_measure_freq+3
   171                           	global	measure_freq@i
   172  000000                     delay10ms@run	equ	??_delay10ms+0
   173                           	global	delay10ms@run
   174  000000                     delay10ms@ms	equ	??_delay10ms+1
   175                           	global	delay10ms@ms
   176  000000                     delay10ms@period_10ms	equ	?_delay10ms+0
   177                           	global	delay10ms@period_10ms
   178  000000                     ser_puts@s	equ	?_ser_puts+0
   179                           	global	ser_puts@s
   180  000000                     ___wmul@product	equ	??___wmul+0
   181                           	global	___wmul@product
   182  000000                     ___wmul@multiplier	equ	?___wmul+0
   183                           	global	___wmul@multiplier
   184  000000                     ___wmul@multiplicand	equ	?___wmul+2
   185                           	global	___wmul@multiplicand
   186  000000                     log10@x	equ	?_log10+0
   187                           	global	log10@x
   188  000000                     _format_number$1343	equ	??_format_number+0
   189                           	global	_format_number$1343
   190  000000                     format_number@padchar	equ	??_format_number+2
   191                           	global	format_number@padchar
   192  000000                     format_number@di	equ	??_format_number+3
   193                           	global	format_number@di
   194  000000                     format_number@i	equ	??_format_number+4
   195                           	global	format_number@i
   196  000000                     format_number@buf	equ	??_format_number+5
   197                           	global	format_number@buf
   198  000000                     format_number@n	equ	?_format_number+0
   199                           	global	format_number@n
   200  000000                     format_number@base	equ	?_format_number+2
   201                           	global	format_number@base
   202  000000                     format_number@pad	equ	?_format_number+3
   203                           	global	format_number@pad
   204  000000                     pow@sign	equ	??_pow+0
   205                           	global	pow@sign
   206  000000                     pow@yi	equ	??_pow+1
   207                           	global	pow@yi
   208  000000                     pow@x	equ	?_pow+0
   209                           	global	pow@x
   210  000000                     pow@y	equ	?_pow+4
   211                           	global	pow@y
   212  000000                     _exp$1357	equ	??_exp+0
   213                           	global	_exp$1357
   214  000000                     exp@sign	equ	??_exp+4
   215                           	global	exp@sign
   216  000000                     exp@exp	equ	??_exp+5
   217                           	global	exp@exp
   218  000000                     exp@x	equ	?_exp+0
   219                           	global	exp@x
   220  000000                     ___lltofl@exp	equ	??___lltofl+0
   221                           	global	___lltofl@exp
   222  000000                     ___lltofl@f1	equ	??___lltofl+1
   223                           	global	___lltofl@f1
   224  000000                     ___lltofl@c	equ	?___lltofl+0
   225                           	global	___lltofl@c
   226  000000                     ___lwdiv@counter	equ	??___lwdiv+0
   227                           	global	___lwdiv@counter
   228  000000                     ___lwdiv@quotient	equ	??___lwdiv+1
   229                           	global	___lwdiv@quotient
   230  000000                     ___lwdiv@dividend	equ	?___lwdiv+0
   231                           	global	___lwdiv@dividend
   232  000000                     ___lwdiv@divisor	equ	?___lwdiv+2
   233                           	global	___lwdiv@divisor
   234  000000                     ___lwmod@counter	equ	??___lwmod+0
   235                           	global	___lwmod@counter
   236  000000                     ___lwmod@dividend	equ	?___lwmod+0
   237                           	global	___lwmod@dividend
   238  000000                     ___lwmod@divisor	equ	?___lwmod+2
   239                           	global	___lwmod@divisor
   240  000000                     output_putch@c	equ	?_output_putch+0
   241                           	global	output_putch@c
   242  000000                     log@exp	equ	??_log+0
   243                           	global	log@exp
   244  000000                     log@x	equ	?_log+0
   245                           	global	log@x
   246  000000                     format_putchar@c	equ	?_format_putchar+0
   247                           	global	format_putchar@c
   248  000000                     ___asflsub@f1p	equ	?___asflsub+0
   249                           	global	___asflsub@f1p
   250  000000                     ___asflsub@f2	equ	?___asflsub+2
   251                           	global	___asflsub@f2
   252  000000                     floor@expon	equ	??_floor+0
   253                           	global	floor@expon
   254  000000                     floor@i	equ	??_floor+2
   255                           	global	floor@i
   256  000000                     floor@x	equ	?_floor+0
   257                           	global	floor@x
   258  000000                     ___asflmul@mp	equ	?___asflmul+0
   259                           	global	___asflmul@mp
   260  000000                     ___asflmul@multiplicand	equ	?___asflmul+2
   261                           	global	___asflmul@multiplicand
   262  000000                     ser_putch@c	equ	?_ser_putch+0
   263                           	global	ser_putch@c
   264  000000                     eval_poly@res	equ	??_eval_poly+0
   265                           	global	eval_poly@res
   266  000000                     eval_poly@x	equ	?_eval_poly+0
   267                           	global	eval_poly@x
   268  000000                     eval_poly@d	equ	?_eval_poly+4
   269                           	global	eval_poly@d
   270  000000                     eval_poly@n	equ	?_eval_poly+6
   271                           	global	eval_poly@n
   272  000000                     ___fldiv@exp2	equ	??___fldiv+0
   273                           	global	___fldiv@exp2
   274  000000                     ___fldiv@sign1	equ	??___fldiv+1
   275                           	global	___fldiv@sign1
   276  000000                     ___fldiv@exp1	equ	??___fldiv+2
   277                           	global	___fldiv@exp1
   278  000000                     ___fldiv@sign2	equ	??___fldiv+3
   279                           	global	___fldiv@sign2
   280  000000                     ___fldiv@f3	equ	??___fldiv+4
   281                           	global	___fldiv@f3
   282  000000                     ___fldiv@f1	equ	?___fldiv+0
   283                           	global	___fldiv@f1
   284  000000                     ___fldiv@f2	equ	?___fldiv+4
   285                           	global	___fldiv@f2
   286  000000                     ___awtofl@f1	equ	??___awtofl+0
   287                           	global	___awtofl@f1
   288  000000                     ___awtofl@c	equ	?___awtofl+0
   289                           	global	___awtofl@c
   290  000000                     ldexp@value	equ	?_ldexp+0
   291                           	global	ldexp@value
   292  000000                     ldexp@newexp	equ	?_ldexp+4
   293                           	global	ldexp@newexp
   294  000000                     ___flsub@f1	equ	?___flsub+0
   295                           	global	___flsub@f1
   296  000000                     ___flsub@f2	equ	?___flsub+4
   297                           	global	___flsub@f2
   298  000000                     ___altofl@exp	equ	??___altofl+0
   299                           	global	___altofl@exp
   300  000000                     ___altofl@sign	equ	??___altofl+1
   301                           	global	___altofl@sign
   302  000000                     ___altofl@f1	equ	??___altofl+2
   303                           	global	___altofl@f1
   304  000000                     ___altofl@c	equ	?___altofl+0
   305                           	global	___altofl@c
   306  000000                     frexp@value	equ	?_frexp+0
   307                           	global	frexp@value
   308  000000                     frexp@eptr	equ	?_frexp+4
   309                           	global	frexp@eptr
   310  000000                     ___flmul@sign1	equ	??___flmul+0
   311                           	global	___flmul@sign1
   312  000000                     ___flmul@exp1	equ	??___flmul+1
   313                           	global	___flmul@exp1
   314  000000                     ___flmul@cntr	equ	??___flmul+2
   315                           	global	___flmul@cntr
   316  000000                     ___flmul@f3	equ	??___flmul+3
   317                           	global	___flmul@f3
   318  000000                     ___flmul@f1	equ	?___flmul+0
   319                           	global	___flmul@f1
   320  000000                     ___flmul@f2	equ	?___flmul+4
   321                           	global	___flmul@f2
   322  000000                     ___flge@ff1	equ	?___flge+0
   323                           	global	___flge@ff1
   324  000000                     ___flge@ff2	equ	?___flge+4
   325                           	global	___flge@ff2
   326  000000                     ___fltol@sign1	equ	??___fltol+0
   327                           	global	___fltol@sign1
   328  000000                     ___fltol@exp1	equ	??___fltol+1
   329                           	global	___fltol@exp1
   330  000000                     ___fltol@lval	equ	??___fltol+2
   331                           	global	___fltol@lval
   332  000000                     ___fltol@f1	equ	?___fltol+0
   333                           	global	___fltol@f1
   334  000000                     ___flneg@f1	equ	?___flneg+0
   335                           	global	___flneg@f1
   336  000000                     ___fladd@sign2	equ	??___fladd+0
   337                           	global	___fladd@sign2
   338  000000                     ___fladd@cntr	equ	??___fladd+1
   339                           	global	___fladd@cntr
   340  000000                     ___fladd@sign1	equ	??___fladd+2
   341                           	global	___fladd@sign1
   342  000000                     ___fladd@exp2	equ	??___fladd+3
   343                           	global	___fladd@exp2
   344  000000                     ___fladd@exp1	equ	??___fladd+4
   345                           	global	___fladd@exp1
   346  000000                     ___fladd@f1	equ	?___fladd+0
   347                           	global	___fladd@f1
   348  000000                     ___fladd@f2	equ	?___fladd+4
   349                           	global	___fladd@f2
   350  000000                     ___flpack@l_arg	equ	??___flpack+0
   351                           	global	___flpack@l_arg
   352  000000                     ___flpack@arg	equ	?___flpack+0
   353                           	global	___flpack@arg
   354  000000                     ___flpack@exp	equ	?___flpack+2
   355                           	global	___flpack@exp
   356  000000                     ___flunpack@sign	equ	??___flunpack+0
   357                           	global	___flunpack@sign
   358  000000                     ___flunpack@l_arg	equ	??___flunpack+1
   359                           	global	___flunpack@l_arg
   360  000000                     ___flunpack@arg	equ	?___flunpack+0
   361                           	global	___flunpack@arg
   362  000000                     ___flunpack@exp	equ	?___flunpack+2
   363                           	global	___flunpack@exp
   364                           ;Data sizes: Strings 42, constant 76, data 3, bs
                                 s 0, persistent 0 stack 115
   365                           	global	_main
   366                           	global	??_main
   367                           	global	?_main
   368                           
   369                           ; *************** function _main ***************
                                 **
   370                           ; Defined at:
   371                           ;		line 115 in file "../../../src/LC-meter.c"
   372                           ; Parameters:
   373                           ;		None
   374                           ; Auto variables:
   375                           ;		None
   376                           ; Return value:
   377                           ;		type: void 
   378                           ;		size: 0
   379                           ; Registers used:
   380                           ;		wreg, fsr0l, fsr0h, status,2, status,0, pclat
                                 , tosl, tblptrl, tblptrh, tblptru, tablat, cstac
                                 k
   381                           ; Tracked objects:
   382                           ;		On entry : 0/0
   383                           ;		On exit  : 0/0
   384                           ;		Unchanged: 0/0
   385                           ; Data sizes:
   386                           ;		Autos:    0
   387                           ;		Params:   0
   388                           ;		Temp:     1
   389                           ;		Total:    1
   390                           ; This function calls:
   391                           ;		_timer2_init
   392                           ;		_delay10ms
   393                           ;		_ser_init
   394                           ;		_calibrate
   395                           ;		_ser_puts
   396                           ;		_measure_capacitance
   397                           ;		_measure_inductance
   398                           ;		_indicator
   399                           ; This function is called by:
   400                           ;		Startup code after reset
   401                           ; This function uses a non-reentrant model
   402                           ; 
   403                                   psect   text0,class=CODE,space=0,reloc=2
   404                           
   405                           	opt lm
   406                           	file	"../../../src/LC-meter.c"
   407                           	line	115
   408  000000                     	__size_of_main	equ	__end_of_main-_main
   409                           ;LC-meter.c: 114: void
   410                           ;LC-meter.c: 115: main() {
   411                           	
   412  000000'                    _main:		; BSR set to: ?
   413                           
   414                           	opt stack 30
   415  000000' FFFF               	dw	0FFFFh
   416                           	line	116
   417                           ;LC-meter.c: 116: bres = msecpart = msecs = seco
                                 nds = 0;
   418  000002' 0E00               	movlw	low(0)
   419  000004' 6E43               	movwf	((c:67)),c	;volatile
   420  000006' 0E00               	movlw	high(0)
   421  000008' 6E44               	movwf	((c:67+1)),c	;volatile
   422  00000A' 0E00               	movlw	low highword(0)
   423  00000C' 6E45               	movwf	((c:67+2)),c	;volatile
   424  00000E' 0E00               	movlw	high highword(0)
   425  000010' 6E46               	movwf	((c:67+3)),c	;volatile
   426  000012' C043 F034          	movff	(c:67),(c:52)	;volatile
   427  000016' C044 F035          	movff	(c:67+1),(c:52+1)	;volatile
   428  00001A' C045 F036          	movff	(c:67+2),(c:52+2)	;volatile
   429  00001E' C046 F037          	movff	(c:67+3),(c:52+3)	;volatile
   430  000022' C034 F004          	movff	(c:52),(c:4)	;volatile
   431  000026' C035 F005          	movff	(c:52+1),(c:4+1)	;volatile
   432  00002A' C004 F006          	movff	(c:4),(c:6)	;volatile
   433  00002E' C005 F007          	movff	(c:4+1),(c:6+1)	;volatile
   434                           	line	118
   435                           ;LC-meter.c: 118: CCal = 1000;
   436  000032' 0E00               	movlw	low(1000.0000000000000)
   437  000034' 6E00               	movwf	((c:0)),c
   438  000036' 0E00               	movlw	high(1000.0000000000000)
   439  000038' 6E01               	movwf	((c:0+1)),c
   440  00003A' 0E7A               	movlw	low highword(1000.0000000000000)
   441  00003C' 6E02               	movwf	((c:0+2)),c
   442  00003E' 0E44               	movlw	high highword(1000.0000000000000)
   443  000040' 6E03               	movwf	((c:0+3)),c
   444                           	line	127
   445                           ;LC-meter.c: 127: TRISA = 0b11001111;
   446  000042' 0ECF               	movlw	low(0CFh)
   447  000044' 6E92               	movwf	((c:3986)),c	;volatile
   448                           	line	129
   449                           ;LC-meter.c: 129: T0CS = 1;
   450  000046' 8AD5               	bsf	c:(32429/8),(32429)&7	;volatile
   451                           	line	130
   452                           ;LC-meter.c: 130: T0SE = 1;
   453  000048' 88D5               	bsf	c:(32428/8),(32428)&7	;volatile
   454                           	line	139
   455                           ;LC-meter.c: 139: RBPU = 1;
   456  00004A' 8EF1               	bsf	c:(32655/8),(32655)&7	;volatile
   457                           	line	144
   458                           ;LC-meter.c: 144: TRISC3 = 0;
   459  00004C' 9694               	bcf	c:(31907/8),(31907)&7	;volatile
   460                           	line	145
   461                           ;LC-meter.c: 145: LATC3 = ((1) == 0);
   462  00004E' 968B               	bcf	c:(31835/8),(31835)&7	;volatile
   463                           	line	147
   464                           ;LC-meter.c: 147: SSPEN = 0;
   465  000050' 9AC6               	bcf	c:(32309/8),(32309)&7	;volatile
   466                           	line	152
   467                           ;LC-meter.c: 152: timer2_init(0b000 | 0x80);
   468  000052' 0101               	movlb	1	; () banked
   469  000054' 6F00'              	movwf	(??_main+0+0)&0ffh
   470  000056' 0E80               	movlw	low(080h)
   471  000058' 0101               	movlb	1	; () banked
   472  00005A' 0101               	movlb	1	; () banked
   473  00005C' 6F00'              	movwf	((?_timer2_init))&0ffh
   474  00005E' 0101               	movlb	1	; () banked
   475  000060' 5100'              	movf	(??_main+0+0)&0ffh,w
   476  000062' EC00' F000'        	call	_timer2_init	;wreg free
   477                           	line	157
   478                           ;LC-meter.c: 157: TRISC1 = 0;
   479  000066' 9294               	bcf	c:(31905/8),(31905)&7	;volatile
   480                           	line	160
   481                           ;LC-meter.c: 160: TRISC3 = 0;
   482  000068' 9694               	bcf	c:(31907/8),(31907)&7	;volatile
   483                           	line	162
   484                           ;LC-meter.c: 162: TRISC0 = 1;
   485  00006A' 8094               	bsf	c:(31904/8),(31904)&7	;volatile
   486                           	line	163
   487                           ;LC-meter.c: 163: TRISC2 = 1;
   488  00006C' 8494               	bsf	c:(31906/8),(31906)&7	;volatile
   489                           	line	173
   490                           ;LC-meter.c: 173: TRISC4 = 1;
   491  00006E' 8894               	bsf	c:(31908/8),(31908)&7	;volatile
   492                           	line	174
   493                           ;LC-meter.c: 174: TRISC5 = 0;
   494  000070' 9A94               	bcf	c:(31909/8),(31909)&7	;volatile
   495                           	line	176
   496                           ;LC-meter.c: 176: LATC5 = 0;
   497  000072' 9A8B               	bcf	c:(31837/8),(31837)&7	;volatile
   498                           	line	177
   499                           ;LC-meter.c: 177: delay10ms(50);
   500  000074' 0E32               	movlw	low(032h)
   501  000076' 0101               	movlb	1	; () banked
   502  000078' 0101               	movlb	1	; () banked
   503  00007A' 6F00'              	movwf	((?_delay10ms))&0ffh
   504  00007C' 0E00               	movlw	high(032h)
   505  00007E' 0101               	movlb	1	; () banked
   506  000080' 6F00'              	movwf	((?_delay10ms+1))&0ffh
   507  000082' EC00' F000'        	call	_delay10ms	;wreg free
   508                           	line	178
   509                           ;LC-meter.c: 178: LATC5 = 1;
   510  000086' 8A8B               	bsf	c:(31837/8),(31837)&7	;volatile
   511                           	line	179
   512                           ;LC-meter.c: 179: delay10ms(50);
   513  000088' 0E32               	movlw	low(032h)
   514  00008A' 0101               	movlb	1	; () banked
   515  00008C' 0101               	movlb	1	; () banked
   516  00008E' 6F00'              	movwf	((?_delay10ms))&0ffh
   517  000090' 0E00               	movlw	high(032h)
   518  000092' 0101               	movlb	1	; () banked
   519  000094' 6F00'              	movwf	((?_delay10ms+1))&0ffh
   520  000096' EC00' F000'        	call	_delay10ms	;wreg free
   521                           	line	180
   522                           ;LC-meter.c: 180: LATC5 = 0;
   523  00009A' 9A8B               	bcf	c:(31837/8),(31837)&7	;volatile
   524                           	line	181
   525                           ;LC-meter.c: 181: delay10ms(50);
   526  00009C' 0E32               	movlw	low(032h)
   527  00009E' 0101               	movlb	1	; () banked
   528  0000A0' 0101               	movlb	1	; () banked
   529  0000A2' 6F00'              	movwf	((?_delay10ms))&0ffh
   530  0000A4' 0E00               	movlw	high(032h)
   531  0000A6' 0101               	movlb	1	; () banked
   532  0000A8' 6F00'              	movwf	((?_delay10ms+1))&0ffh
   533  0000AA' EC00' F000'        	call	_delay10ms	;wreg free
   534                           	line	182
   535                           ;LC-meter.c: 182: LATC5 = 1;
   536  0000AE' 8A8B               	bsf	c:(31837/8),(31837)&7	;volatile
   537                           	line	183
   538                           ;LC-meter.c: 183: delay10ms(50);
   539  0000B0' 0E32               	movlw	low(032h)
   540  0000B2' 0101               	movlb	1	; () banked
   541  0000B4' 0101               	movlb	1	; () banked
   542  0000B6' 6F00'              	movwf	((?_delay10ms))&0ffh
   543  0000B8' 0E00               	movlw	high(032h)
   544  0000BA' 0101               	movlb	1	; () banked
   545  0000BC' 6F00'              	movwf	((?_delay10ms+1))&0ffh
   546  0000BE' EC00' F000'        	call	_delay10ms	;wreg free
   547                           	line	184
   548                           ;LC-meter.c: 184: LATC5 = 0;
   549  0000C2' 9A8B               	bcf	c:(31837/8),(31837)&7	;volatile
   550                           	line	187
   551                           ;LC-meter.c: 187: ser_init();
   552  0000C4' EC00' F000'        	call	_ser_init	;wreg free
   553                           	line	192
   554                           ;LC-meter.c: 192: TRISC &= ~0b01000000;
   555  0000C8' 9C94               	bcf	(0+(6/8)+(c:3988)),c,(6)&7	;volatile
   556                           	line	194
   557                           ;LC-meter.c: 194: PEIE = 1;
   558  0000CA' 8CF2               	bsf	c:(32662/8),(32662)&7	;volatile
   559                           	line	195
   560                           ;LC-meter.c: 195: GIE = 1;
   561  0000CC' 8EF2               	bsf	c:(32663/8),(32663)&7	;volatile
   562                           	line	214
   563                           ;LC-meter.c: 214: delay10ms(200);
   564  0000CE' 0EC8               	movlw	low(0C8h)
   565  0000D0' 0101               	movlb	1	; () banked
   566  0000D2' 0101               	movlb	1	; () banked
   567  0000D4' 6F00'              	movwf	((?_delay10ms))&0ffh
   568  0000D6' 0E00               	movlw	high(0C8h)
   569  0000D8' 0101               	movlb	1	; () banked
   570  0000DA' 6F00'              	movwf	((?_delay10ms+1))&0ffh
   571  0000DC' EC00' F000'        	call	_delay10ms	;wreg free
   572                           	line	217
   573                           ;LC-meter.c: 217: calibrate();
   574  0000E0' EC00' F000'        	call	_calibrate	;wreg free
   575                           	line	228
   576                           ;LC-meter.c: 228: for(;;) {
   577                           	
   578  0000E4'                    l838:		; BSR set to: ?
   579                           
   580                           	line	230
   581                           ;LC-meter.c: 230: ser_puts("...\r\n");
   582  0000E6' 0E00'              	movlw	low(STR_1)
   583  0000E8' 0101               	movlb	1	; () banked
   584  0000EA' 0101               	movlb	1	; () banked
   585  0000EC' 6F00'              	movwf	((?_ser_puts))&0ffh
   586  0000EE' 0E00'              	movlw	high(STR_1)
   587  0000F0' 0101               	movlb	1	; () banked
   588  0000F2' 6F00'              	movwf	((?_ser_puts+1))&0ffh
   589  0000F4' EC00' F000'        	call	_ser_puts	;wreg free
   590                           	line	231
   591                           ;LC-meter.c: 231: if(LATC4)
   592  0000F8' A88B               	btfss	c:(31836/8),(31836)&7	;volatile
   593  0000FA' EF00' F000'        	goto	u2991
   594  0000FE' EF00' F000'        	goto	u2990
   595  000102'                    u2991:
   596  000104' EF00' F000'        	goto	l841
   597  000108'                    u2990:
   598                           	line	232
   599                           ;LC-meter.c: 232: measure_capacitance();
   600  00010A' EC00' F000'        	call	_measure_capacitance	;wreg free
   601  00010E' EF00' F000'        	goto	l842
   602                           	line	233
   603                           	
   604  000112'                    l841:		; BSR set to: ?
   605                           
   606                           	line	234
   607                           ;LC-meter.c: 233: else
   608                           ;LC-meter.c: 234: measure_inductance();
   609  000114' EC00' F000'        	call	_measure_inductance	;wreg free
   610                           	
   611  000118'                    l842:		; BSR set to: ?
   612                           
   613                           	line	236
   614                           ;LC-meter.c: 236: indicator(1);
   615  00011A' 0101               	movlb	1	; () banked
   616  00011C' 6F00'              	movwf	(??_main+0+0)&0ffh
   617  00011E' 0E01               	movlw	low(01h)
   618  000120' 0101               	movlb	1	; () banked
   619  000122' 0101               	movlb	1	; () banked
   620  000124' 6F00'              	movwf	((?_indicator))&0ffh
   621  000126' 0101               	movlb	1	; () banked
   622  000128' 5100'              	movf	(??_main+0+0)&0ffh,w
   623  00012A' EC00' F000'        	call	_indicator	;wreg free
   624                           	line	237
   625                           ;LC-meter.c: 237: delay10ms(30);
   626  00012E' 0E1E               	movlw	low(01Eh)
   627  000130' 0101               	movlb	1	; () banked
   628  000132' 0101               	movlb	1	; () banked
   629  000134' 6F00'              	movwf	((?_delay10ms))&0ffh
   630  000136' 0E00               	movlw	high(01Eh)
   631  000138' 0101               	movlb	1	; () banked
   632  00013A' 6F00'              	movwf	((?_delay10ms+1))&0ffh
   633  00013C' EC00' F000'        	call	_delay10ms	;wreg free
   634                           	line	238
   635                           ;LC-meter.c: 238: indicator(0);
   636  000140' 0101               	movlb	1	; () banked
   637  000142' 6F00'              	movwf	(??_main+0+0)&0ffh
   638  000144' 0E00               	movlw	low(0)
   639  000146' 0101               	movlb	1	; () banked
   640  000148' 0101               	movlb	1	; () banked
   641  00014A' 6F00'              	movwf	((?_indicator))&0ffh
   642  00014C' 0101               	movlb	1	; () banked
   643  00014E' 5100'              	movf	(??_main+0+0)&0ffh,w
   644  000150' EC00' F000'        	call	_indicator	;wreg free
   645                           	line	239
   646                           ;LC-meter.c: 239: delay10ms(20);
   647  000154' 0E14               	movlw	low(014h)
   648  000156' 0101               	movlb	1	; () banked
   649  000158' 0101               	movlb	1	; () banked
   650  00015A' 6F00'              	movwf	((?_delay10ms))&0ffh
   651  00015C' 0E00               	movlw	high(014h)
   652  00015E' 0101               	movlb	1	; () banked
   653  000160' 6F00'              	movwf	((?_delay10ms+1))&0ffh
   654  000162' EC00' F000'        	call	_delay10ms	;wreg free
   655                           	line	240
   656                           ;LC-meter.c: 240: }
   657  000166' EF00' F000'        	goto	l838
   658                           	global	start
   659  00016A' EF00' F000'        	goto	start
   660                           	opt stack 0
   661                           GLOBAL __end_of_main
   662  00016E'                    	__end_of_main:
   663                           	FNSIZE	_main,1,0
   664                           ; =============== function _main ends ==========
                                 ==
   665                           
   666                                   psect   text1,class=CODE,space=0,reloc=2
   667                           	line	241
   668                           
   669                           	opt lm
   670                           	signat	_main,88
   671                           	global	_calibrate
   672                           	global	??_calibrate
   673                           	global	?_calibrate
   674                           
   675                           ; *************** function _calibrate **********
                                 *******
   676                           ; Defined at:
   677                           ;		line 347 in file "../../../src/LC-meter.c"
   678                           ; Parameters:
   679                           ;		None
   680                           ; Auto variables:
   681                           ;		i           	       	type: unsigned char 
   682                           ; Return value:
   683                           ;		type: void 
   684                           ;		size: 0
   685                           ; Registers used:
   686                           ;		wreg, fsr0l, fsr0h, status,2, status,0, tblpt
                                 rl, tblptrh, tblptru, tablat, cstack
   687                           ; Tracked objects:
   688                           ;		On entry : 0/0
   689                           ;		On exit  : 0/0
   690                           ;		Unchanged: 0/0
   691                           ; Data sizes:
   692                           ;		Autos:    0
   693                           ;		Params:   0
   694                           ;		Temp:     0
   695                           ;		Total:    0
   696                           ; This function calls:
   697                           ;		_measure_freq
   698                           ;		___lwtofl
   699                           ;		_delay10ms
   700                           ;		_ser_puts
   701                           ; This function is called by:
   702                           ;		_main
   703                           ; This function uses a non-reentrant model
   704                           ; 
   705                           	file	"../../../src/LC-meter.c"
   706                           	line	347
   707  000000                     	__size_of_calibrate	equ	__end_of_calibrate-_cal
                                 ibrate
   708                           ;LC-meter.c: 346: void
   709                           ;LC-meter.c: 347: calibrate() {
   710                           	
   711  000000'                    _calibrate:		; BSR set to: ?
   712                           
   713                           	opt stack 29
   714  000000' FFFF               	dw	0FFFFh
   715                           	line	361
   716                           ;LC-meter.c: 348: unsigned char i;
   717                           ;LC-meter.c: 361: LATC5 = 0;
   718  000002' 9A8B               	bcf	c:(31837/8),(31837)&7	;volatile
   719                           	line	363
   720                           ;LC-meter.c: 363: F1 = (double)measure_freq();
   721  000004' EC00' F000'        	call	_measure_freq	;wreg free
   722  000008' C000' F000'        	movff	0+?_measure_freq,(?___lwtofl)
   723  00000C' C001' F001'        	movff	1+?_measure_freq,(?___lwtofl+1)
   724  000010' EC00' F000'        	call	___lwtofl	;wreg free
   725  000014' C000' F008         	movff	0+?___lwtofl,(c:8)
   726  000018' C001' F009         	movff	1+?___lwtofl,(c:8+1)
   727  00001C' C002' F00A         	movff	2+?___lwtofl,(c:8+2)
   728  000020' C003' F00B         	movff	3+?___lwtofl,(c:8+3)
   729                           	line	364
   730                           ;LC-meter.c: 364: delay10ms(50);
   731  000024' 0E32               	movlw	low(032h)
   732  000026' 0101               	movlb	1	; () banked
   733  000028' 0101               	movlb	1	; () banked
   734  00002A' 6F00'              	movwf	((?_delay10ms))&0ffh
   735  00002C' 0E00               	movlw	high(032h)
   736  00002E' 0101               	movlb	1	; () banked
   737  000030' 6F00'              	movwf	((?_delay10ms+1))&0ffh
   738  000032' EC00' F000'        	call	_delay10ms	;wreg free
   739                           	line	366
   740                           ;LC-meter.c: 366: F1 = (double)measure_freq();
   741  000036' EC00' F000'        	call	_measure_freq	;wreg free
   742  00003A' C000' F000'        	movff	0+?_measure_freq,(?___lwtofl)
   743  00003E' C001' F001'        	movff	1+?_measure_freq,(?___lwtofl+1)
   744  000042' EC00' F000'        	call	___lwtofl	;wreg free
   745  000046' C000' F008         	movff	0+?___lwtofl,(c:8)
   746  00004A' C001' F009         	movff	1+?___lwtofl,(c:8+1)
   747  00004E' C002' F00A         	movff	2+?___lwtofl,(c:8+2)
   748  000052' C003' F00B         	movff	3+?___lwtofl,(c:8+3)
   749                           	line	367
   750                           ;LC-meter.c: 367: LATC5 = 1;
   751  000056' 8A8B               	bsf	c:(31837/8),(31837)&7	;volatile
   752                           	line	369
   753                           ;LC-meter.c: 369: F2 = (double)measure_freq();
   754  000058' EC00' F000'        	call	_measure_freq	;wreg free
   755  00005C' C000' F000'        	movff	0+?_measure_freq,(?___lwtofl)
   756  000060' C001' F001'        	movff	1+?_measure_freq,(?___lwtofl+1)
   757  000064' EC00' F000'        	call	___lwtofl	;wreg free
   758  000068' C000' F010         	movff	0+?___lwtofl,(c:16)
   759  00006C' C001' F011         	movff	1+?___lwtofl,(c:16+1)
   760  000070' C002' F012         	movff	2+?___lwtofl,(c:16+2)
   761  000074' C003' F013         	movff	3+?___lwtofl,(c:16+3)
   762                           	line	370
   763                           ;LC-meter.c: 370: delay10ms(50);
   764  000078' 0E32               	movlw	low(032h)
   765  00007A' 0101               	movlb	1	; () banked
   766  00007C' 0101               	movlb	1	; () banked
   767  00007E' 6F00'              	movwf	((?_delay10ms))&0ffh
   768  000080' 0E00               	movlw	high(032h)
   769  000082' 0101               	movlb	1	; () banked
   770  000084' 6F00'              	movwf	((?_delay10ms+1))&0ffh
   771  000086' EC00' F000'        	call	_delay10ms	;wreg free
   772                           	line	372
   773                           ;LC-meter.c: 372: F2 = (double)measure_freq();
   774  00008A' EC00' F000'        	call	_measure_freq	;wreg free
   775  00008E' C000' F000'        	movff	0+?_measure_freq,(?___lwtofl)
   776  000092' C001' F001'        	movff	1+?_measure_freq,(?___lwtofl+1)
   777  000096' EC00' F000'        	call	___lwtofl	;wreg free
   778  00009A' C000' F010         	movff	0+?___lwtofl,(c:16)
   779  00009E' C001' F011         	movff	1+?___lwtofl,(c:16+1)
   780  0000A2' C002' F012         	movff	2+?___lwtofl,(c:16+2)
   781  0000A6' C003' F013         	movff	3+?___lwtofl,(c:16+3)
   782                           	line	373
   783                           ;LC-meter.c: 373: LATC5 = 0;
   784  0000AA' 9A8B               	bcf	c:(31837/8),(31837)&7	;volatile
   785                           	line	385
   786                           ;LC-meter.c: 385: ser_puts("\r\n");
   787  0000AC' 0E00'              	movlw	low(STR_3)
   788  0000AE' 0101               	movlb	1	; () banked
   789  0000B0' 0101               	movlb	1	; () banked
   790  0000B2' 6F00'              	movwf	((?_ser_puts))&0ffh
   791  0000B4' 0E00'              	movlw	high(STR_3)
   792  0000B6' 0101               	movlb	1	; () banked
   793  0000B8' 6F00'              	movwf	((?_ser_puts+1))&0ffh
   794  0000BA' EC00' F000'        	call	_ser_puts	;wreg free
   795                           	line	386
   796                           ;LC-meter.c: 386: }
   797  0000BE'                    l852:
   798                           			; BSR set to: ?
   799                           
   800  0000BE' 0012               	return
   801  0000C0' FFFF               	dw	0FFFFh; errata NOP
   802                           	opt stack 0
   803                           GLOBAL __end_of_calibrate
   804  0000C2'                    	__end_of_calibrate:
   805                           	FNSIZE	_calibrate,0,0
   806                           ; =============== function _calibrate ends =====
                                 =======
   807                           
   808                           	signat	_calibrate,88
   809                           	global	_indicator
   810                           	global	??_indicator
   811                           	global	?_indicator
   812                           
   813                           ; *************** function _indicator **********
                                 *******
   814                           ; Defined at:
   815                           ;		line 469 in file "../../../src/print.c"
   816                           ; Parameters:
   817                           ;		indicate       size:   1offs:   0	type: unsig
                                 ned char 
   818                           ; Auto variables:
   819                           ;		None
   820                           ; Return value:
   821                           ;		type: void 
   822                           ;		size: 0
   823                           ; Registers used:
   824                           ;		None
   825                           ; Tracked objects:
   826                           ;		On entry : 0/0
   827                           ;		On exit  : 0/0
   828                           ;		Unchanged: 0/0
   829                           ; Data sizes:
   830                           ;		Autos:    0
   831                           ;		Params:   1
   832                           ;		Temp:     0
   833                           ;		Total:    1
   834                           ; This function calls:
   835                           ;		Nothing
   836                           ; This function is called by:
   837                           ;		_main
   838                           ; This function uses a non-reentrant model
   839                           ; 
   840                                   psect   text2,class=CODE,space=0,reloc=2
   841                           
   842                           	opt lm
   843                           	file	"../../../src/print.c"
   844                           	line	469
   845  000000                     	__size_of_indicator	equ	__end_of_indicator-_ind
                                 icator
   846                           ;print.c: 468: void
   847                           ;print.c: 469: indicator(unsigned char indicate)
                                  {
   848                           	
   849  000000'                    _indicator:		; BSR set to: ?
   850                           
   851                           	opt stack 29
   852  000000' FFFF               	dw	0FFFFh
   853                           	line	490
   854  000002'                    l165:
   855                           			; BSR set to: ?
   856                           
   857  000002' 0012               	return
   858  000004' FFFF               	dw	0FFFFh; errata NOP
   859                           	opt stack 0
   860                           GLOBAL __end_of_indicator
   861  000006'                    	__end_of_indicator:
   862                           	FNSIZE	_indicator,0,1
   863                           ; =============== function _indicator ends =====
                                 =======
   864                           
   865                           	signat	_indicator,4216
   866                           	global	_measure_capacitance
   867                           	global	??_measure_capacitance
   868                           	global	?_measure_capacitance
   869                           
   870                           ; *************** function _measure_capacitance 
                                 *****************
   871                           ; Defined at:
   872                           ;		line 392 in file "../../../src/LC-meter.c"
   873                           ; Parameters:
   874                           ;		None
   875                           ; Auto variables:
   876                           ;		unit        	       	type: unsigned char 
   877                           ;		var         	       	type: unsigned short 
   878                           ;		Cin         	       	type: unsigned short 
   879                           ; Return value:
   880                           ;		type: void 
   881                           ;		size: 0
   882                           ; Registers used:
   883                           ;		wreg, fsr0l, fsr0h, status,2, status,0, pclat
                                 , tosl, tblptrl, tblptrh, tblptru, tablat, cstac
                                 k
   884                           ; Tracked objects:
   885                           ;		On entry : 0/0
   886                           ;		On exit  : 0/0
   887                           ;		Unchanged: 0/0
   888                           ; Data sizes:
   889                           ;		Autos:   11
   890                           ;		Params:   0
   891                           ;		Temp:     1
   892                           ;		Total:   12
   893                           ; This function calls:
   894                           ;		_measure_freq
   895                           ;		___lwtofl
   896                           ;		_ser_puts
   897                           ;		_format_xint32
   898                           ;		_format_double
   899                           ;		_ser_putch
   900                           ;		___flge
   901                           ;		___flmul
   902                           ;		___flsub
   903                           ;		___fldiv
   904                           ;		___fltol
   905                           ;		_print_reading
   906                           ;		_print_unit
   907                           ; This function is called by:
   908                           ;		_main
   909                           ; This function uses a non-reentrant model
   910                           ; 
   911                                   psect   text3,class=CODE,space=0,reloc=2
   912                           
   913                           	opt lm
   914                           	file	"../../../src/LC-meter.c"
   915                           	line	392
   916  000000                     	__size_of_measure_capacitance	equ	__end_of_meas
                                 ure_capacitance-_measure_capacitance
   917                           ;LC-meter.c: 391: void
   918                           ;LC-meter.c: 392: measure_capacitance() {
   919                           	
   920  000000'                    _measure_capacitance:		; BSR set to: ?
   921                           
   922                           	opt stack 29
   923  000000' FFFF               	dw	0FFFFh
   924                           	line	403
   925  000002' EC00' F000'        	call	_measure_freq	;wreg free
   926  000006' C000' F005'        	movff	0+?_measure_freq,(measure_capacitance@var
                                 )
   927  00000A' C001' F006'        	movff	1+?_measure_freq,(measure_capacitance@var
                                 +1)
   928                           	line	405
   929                           ;LC-meter.c: 405: F3 = (double)var;
   930  00000E' C005' F000'        	movff	(measure_capacitance@var),(?___lwtofl)
   931  000012' C006' F001'        	movff	(measure_capacitance@var+1),(?___lwtofl+1
                                 )
   932  000016' EC00' F000'        	call	___lwtofl	;wreg free
   933  00001A' C000' F00C         	movff	0+?___lwtofl,(c:12)
   934  00001E' C001' F00D         	movff	1+?___lwtofl,(c:12+1)
   935  000022' C002' F00E         	movff	2+?___lwtofl,(c:12+2)
   936  000026' C003' F00F         	movff	3+?___lwtofl,(c:12+3)
   937                           	line	407
   938                           ;LC-meter.c: 407: putchar_ptr = &ser_putch;
   939  00002A' 0100               	movlb	0	; () banked
   940  00002C' 0E00'              	movlw	low(_ser_putch)
   941  00002E' 6E4C               	movwf	((c:76)),c
   942  000030' 0100               	movlb	0	; () banked
   943  000032' 0E00'              	movlw	high(_ser_putch)
   944  000034' 6E4D               	movwf	((c:76+1)),c
   945                           	line	408
   946                           ;LC-meter.c: 408: ser_puts("var=");
   947  000036' 0E00'              	movlw	low(STR_4)
   948  000038' 0101               	movlb	1	; () banked
   949  00003A' 0101               	movlb	1	; () banked
   950  00003C' 6F00'              	movwf	((?_ser_puts))&0ffh
   951  00003E' 0E00'              	movlw	high(STR_4)
   952  000040' 0101               	movlb	1	; () banked
   953  000042' 6F00'              	movwf	((?_ser_puts+1))&0ffh
   954  000044' EC00' F000'        	call	_ser_puts	;wreg free
   955                           	line	409
   956                           ;LC-meter.c: 409: format_xint32( var);
   957  000048' 0101               	movlb	1	; () banked
   958  00004A' 0101               	movlb	1	; () banked
   959  00004C' C005' F000'        	movff	(measure_capacitance@var),(?_format_xint3
                                 2)
   960  000050' 0101               	movlb	1	; () banked
   961  000052' 0101               	movlb	1	; () banked
   962  000054' C006' F001'        	movff	(measure_capacitance@var+1),(?_format_xin
                                 t32+1)
   963  000058' 0101               	movlb	1	; () banked
   964  00005A' 0101               	movlb	1	; () banked
   965  00005C' 6B00'              	clrf	((?_format_xint32+2))&0ffh
   966  00005E' 0101               	movlb	1	; () banked
   967  000060' 6B00'              	clrf	((?_format_xint32+3))&0ffh
   968                           
   969  000062' EC00' F000'        	call	_format_xint32	;wreg free
   970                           	line	410
   971                           ;LC-meter.c: 410: ser_puts("\r\nF1=");
   972  000066' 0E00'              	movlw	low(STR_5)
   973  000068' 0101               	movlb	1	; () banked
   974  00006A' 0101               	movlb	1	; () banked
   975  00006C' 6F00'              	movwf	((?_ser_puts))&0ffh
   976  00006E' 0E00'              	movlw	high(STR_5)
   977  000070' 0101               	movlb	1	; () banked
   978  000072' 6F00'              	movwf	((?_ser_puts+1))&0ffh
   979  000074' EC00' F000'        	call	_ser_puts	;wreg free
   980                           	line	411
   981                           ;LC-meter.c: 411: format_double( F1);
   982  000078' C008 F000'         	movff	(c:8),(?_format_double)
   983  00007C' C009 F001'         	movff	(c:8+1),(?_format_double+1)
   984  000080' C00A F002'         	movff	(c:8+2),(?_format_double+2)
   985  000084' C00B F003'         	movff	(c:8+3),(?_format_double+3)
   986  000088' EC00' F000'        	call	_format_double	;wreg free
   987                           	line	412
   988                           ;LC-meter.c: 412: ser_putch(' ');
   989  00008C' 0101               	movlb	1	; () banked
   990  00008E' 6F00'              	movwf	(??_measure_capacitance+11+0)&0ffh
   991  000090' 0E20               	movlw	low(020h)
   992  000092' 0101               	movlb	1	; () banked
   993  000094' 0101               	movlb	1	; () banked
   994  000096' 6F00'              	movwf	((?_ser_putch))&0ffh
   995  000098' 0101               	movlb	1	; () banked
   996  00009A' 5100'              	movf	(??_measure_capacitance+11+0)&0ffh,w
   997  00009C' EC00' F000'        	call	_ser_putch	;wreg free
   998                           	line	413
   999                           ;LC-meter.c: 413: format_xint32( *(unsigned long
                                  int*)&F1);
  1000  0000A0' C008 F000'         	movff	(c:8),(?_format_xint32)
  1001  0000A4' C009 F001'         	movff	(c:8+1),(?_format_xint32+1)
  1002  0000A8' C00A F002'         	movff	(c:8+2),(?_format_xint32+2)
  1003  0000AC' C00B F003'         	movff	(c:8+3),(?_format_xint32+3)
  1004  0000B0' EC00' F000'        	call	_format_xint32	;wreg free
  1005                           	line	414
  1006                           ;LC-meter.c: 414: ser_puts("\r\nF2=");
  1007  0000B4' 0E00'              	movlw	low(STR_6)
  1008  0000B6' 0101               	movlb	1	; () banked
  1009  0000B8' 0101               	movlb	1	; () banked
  1010  0000BA' 6F00'              	movwf	((?_ser_puts))&0ffh
  1011  0000BC' 0E00'              	movlw	high(STR_6)
  1012  0000BE' 0101               	movlb	1	; () banked
  1013  0000C0' 6F00'              	movwf	((?_ser_puts+1))&0ffh
  1014  0000C2' EC00' F000'        	call	_ser_puts	;wreg free
  1015                           	line	415
  1016                           ;LC-meter.c: 415: format_double( F2);
  1017  0000C6' C010 F000'         	movff	(c:16),(?_format_double)
  1018  0000CA' C011 F001'         	movff	(c:16+1),(?_format_double+1)
  1019  0000CE' C012 F002'         	movff	(c:16+2),(?_format_double+2)
  1020  0000D2' C013 F003'         	movff	(c:16+3),(?_format_double+3)
  1021  0000D6' EC00' F000'        	call	_format_double	;wreg free
  1022                           	line	416
  1023                           ;LC-meter.c: 416: ser_putch(' ');
  1024  0000DA' 0101               	movlb	1	; () banked
  1025  0000DC' 6F00'              	movwf	(??_measure_capacitance+11+0)&0ffh
  1026  0000DE' 0E20               	movlw	low(020h)
  1027  0000E0' 0101               	movlb	1	; () banked
  1028  0000E2' 0101               	movlb	1	; () banked
  1029  0000E4' 6F00'              	movwf	((?_ser_putch))&0ffh
  1030  0000E6' 0101               	movlb	1	; () banked
  1031  0000E8' 5100'              	movf	(??_measure_capacitance+11+0)&0ffh,w
  1032  0000EA' EC00' F000'        	call	_ser_putch	;wreg free
  1033                           	line	417
  1034                           ;LC-meter.c: 417: format_xint32( *(unsigned long
                                  int*)&F2);
  1035  0000EE' C010 F000'         	movff	(c:16),(?_format_xint32)
  1036  0000F2' C011 F001'         	movff	(c:16+1),(?_format_xint32+1)
  1037  0000F6' C012 F002'         	movff	(c:16+2),(?_format_xint32+2)
  1038  0000FA' C013 F003'         	movff	(c:16+3),(?_format_xint32+3)
  1039  0000FE' EC00' F000'        	call	_format_xint32	;wreg free
  1040                           	line	418
  1041                           ;LC-meter.c: 418: ser_puts("\r\nF3=");
  1042  000102' 0E00'              	movlw	low(STR_7)
  1043  000104' 0101               	movlb	1	; () banked
  1044  000106' 0101               	movlb	1	; () banked
  1045  000108' 6F00'              	movwf	((?_ser_puts))&0ffh
  1046  00010A' 0E00'              	movlw	high(STR_7)
  1047  00010C' 0101               	movlb	1	; () banked
  1048  00010E' 6F00'              	movwf	((?_ser_puts+1))&0ffh
  1049  000110' EC00' F000'        	call	_ser_puts	;wreg free
  1050                           	line	419
  1051                           ;LC-meter.c: 419: format_double( F3);
  1052  000114' C00C F000'         	movff	(c:12),(?_format_double)
  1053  000118' C00D F001'         	movff	(c:12+1),(?_format_double+1)
  1054  00011C' C00E F002'         	movff	(c:12+2),(?_format_double+2)
  1055  000120' C00F F003'         	movff	(c:12+3),(?_format_double+3)
  1056  000124' EC00' F000'        	call	_format_double	;wreg free
  1057                           	line	420
  1058                           ;LC-meter.c: 420: ser_putch(' ');
  1059  000128' 0101               	movlb	1	; () banked
  1060  00012A' 6F00'              	movwf	(??_measure_capacitance+11+0)&0ffh
  1061  00012C' 0E20               	movlw	low(020h)
  1062  00012E' 0101               	movlb	1	; () banked
  1063  000130' 0101               	movlb	1	; () banked
  1064  000132' 6F00'              	movwf	((?_ser_putch))&0ffh
  1065  000134' 0101               	movlb	1	; () banked
  1066  000136' 5100'              	movf	(??_measure_capacitance+11+0)&0ffh,w
  1067  000138' EC00' F000'        	call	_ser_putch	;wreg free
  1068                           	line	421
  1069                           ;LC-meter.c: 421: format_xint32( *(unsigned long
                                  int*)&F3);
  1070  00013C' C00C F000'         	movff	(c:12),(?_format_xint32)
  1071  000140' C00D F001'         	movff	(c:12+1),(?_format_xint32+1)
  1072  000144' C00E F002'         	movff	(c:12+2),(?_format_xint32+2)
  1073  000148' C00F F003'         	movff	(c:12+3),(?_format_xint32+3)
  1074  00014C' EC00' F000'        	call	_format_xint32	;wreg free
  1075                           	line	422
  1076                           ;LC-meter.c: 422: ser_puts("\r\nCCal=");
  1077  000150' 0E00'              	movlw	low(STR_8)
  1078  000152' 0101               	movlb	1	; () banked
  1079  000154' 0101               	movlb	1	; () banked
  1080  000156' 6F00'              	movwf	((?_ser_puts))&0ffh
  1081  000158' 0E00'              	movlw	high(STR_8)
  1082  00015A' 0101               	movlb	1	; () banked
  1083  00015C' 6F00'              	movwf	((?_ser_puts+1))&0ffh
  1084  00015E' EC00' F000'        	call	_ser_puts	;wreg free
  1085                           	line	423
  1086                           ;LC-meter.c: 423: format_double( CCal);
  1087  000162' C000 F000'         	movff	(c:0),(?_format_double)
  1088  000166' C001 F001'         	movff	(c:0+1),(?_format_double+1)
  1089  00016A' C002 F002'         	movff	(c:0+2),(?_format_double+2)
  1090  00016E' C003 F003'         	movff	(c:0+3),(?_format_double+3)
  1091  000172' EC00' F000'        	call	_format_double	;wreg free
  1092                           	line	424
  1093                           ;LC-meter.c: 424: ser_putch(' ');
  1094  000176' 0101               	movlb	1	; () banked
  1095  000178' 6F00'              	movwf	(??_measure_capacitance+11+0)&0ffh
  1096  00017A' 0E20               	movlw	low(020h)
  1097  00017C' 0101               	movlb	1	; () banked
  1098  00017E' 0101               	movlb	1	; () banked
  1099  000180' 6F00'              	movwf	((?_ser_putch))&0ffh
  1100  000182' 0101               	movlb	1	; () banked
  1101  000184' 5100'              	movf	(??_measure_capacitance+11+0)&0ffh,w
  1102  000186' EC00' F000'        	call	_ser_putch	;wreg free
  1103                           	line	425
  1104                           ;LC-meter.c: 425: format_xint32( *(unsigned long
                                  int*)&CCal);
  1105  00018A' C000 F000'         	movff	(c:0),(?_format_xint32)
  1106  00018E' C001 F001'         	movff	(c:0+1),(?_format_xint32+1)
  1107  000192' C002 F002'         	movff	(c:0+2),(?_format_xint32+2)
  1108  000196' C003 F003'         	movff	(c:0+3),(?_format_xint32+3)
  1109  00019A' EC00' F000'        	call	_format_xint32	;wreg free
  1110                           	line	426
  1111                           ;LC-meter.c: 426: ser_puts("\r\n");
  1112  00019E' 0E00'              	movlw	low(STR_9)
  1113  0001A0' 0101               	movlb	1	; () banked
  1114  0001A2' 0101               	movlb	1	; () banked
  1115  0001A4' 6F00'              	movwf	((?_ser_puts))&0ffh
  1116  0001A6' 0E00'              	movlw	high(STR_9)
  1117  0001A8' 0101               	movlb	1	; () banked
  1118  0001AA' 6F00'              	movwf	((?_ser_puts+1))&0ffh
  1119  0001AC' EC00' F000'        	call	_ser_puts	;wreg free
  1120                           	line	428
  1121                           ;LC-meter.c: 428: putchar_ptr = &output_putch;
  1122  0001B0' 0100               	movlb	0	; () banked
  1123  0001B2' 0E00'              	movlw	low(_output_putch)
  1124  0001B4' 6E4C               	movwf	((c:76)),c
  1125  0001B6' 0100               	movlb	0	; () banked
  1126  0001B8' 0E00'              	movlw	high(_output_putch)
  1127  0001BA' 6E4D               	movwf	((c:76+1)),c
  1128                           	line	430
  1129                           ;LC-meter.c: 430: if(F3 > F1)
  1130  0001BC' C00C F004'         	movff	(c:12),0+(?___flge+04h)
  1131  0001C0' C00D F005'         	movff	(c:12+1),1+(?___flge+04h)
  1132  0001C4' C00E F006'         	movff	(c:12+2),2+(?___flge+04h)
  1133  0001C8' C00F F007'         	movff	(c:12+3),3+(?___flge+04h)
  1134  0001CC' C008 F000'         	movff	(c:8),(?___flge)
  1135  0001D0' C009 F001'         	movff	(c:8+1),(?___flge+1)
  1136  0001D4' C00A F002'         	movff	(c:8+2),(?___flge+2)
  1137  0001D8' C00B F003'         	movff	(c:8+3),(?___flge+3)
  1138  0001DC' EC00' F000'        	call	___flge	;wreg free
  1139  0001E0' B0D8               	btfsc	status,0
  1140  0001E2' EF00' F000'        	goto	u2951
  1141  0001E6' EF00' F000'        	goto	u2950
  1142  0001EA'                    u2951:
  1143  0001EC' EF00' F000'        	goto	l854
  1144  0001F0'                    u2950:
  1145                           	line	431
  1146                           ;LC-meter.c: 431: F3 = F1;
  1147  0001F2' C008 F00C          	movff	(c:8),(c:12)
  1148  0001F6' C009 F00D          	movff	(c:8+1),(c:12+1)
  1149  0001FA' C00A F00E          	movff	(c:8+2),(c:12+2)
  1150  0001FE' C00B F00F          	movff	(c:8+3),(c:12+3)
  1151                           	
  1152  000202'                    l854:		; BSR set to: ?
  1153                           
  1154                           	line	433
  1155                           ;LC-meter.c: 433: Cin = F2 * F2 * (F1 * F1 - F3 
                                 * F3) * CCal;
  1156  000204' C008 F004'         	movff	(c:8),0+(?___flmul+04h)
  1157  000208' C009 F005'         	movff	(c:8+1),1+(?___flmul+04h)
  1158  00020C' C00A F006'         	movff	(c:8+2),2+(?___flmul+04h)
  1159  000210' C00B F007'         	movff	(c:8+3),3+(?___flmul+04h)
  1160  000214' C008 F000'         	movff	(c:8),(?___flmul)
  1161  000218' C009 F001'         	movff	(c:8+1),(?___flmul+1)
  1162  00021C' C00A F002'         	movff	(c:8+2),(?___flmul+2)
  1163  000220' C00B F003'         	movff	(c:8+3),(?___flmul+3)
  1164  000224' EC00' F000'        	call	___flmul	;wreg free
  1165  000228' C000' F000'        	movff	0+?___flmul,(_measure_capacitance$1281)
  1166  00022C' C001' F001'        	movff	1+?___flmul,(_measure_capacitance$1281+1)
  1167  000230' C002' F002'        	movff	2+?___flmul,(_measure_capacitance$1281+2)
  1168  000234' C003' F003'        	movff	3+?___flmul,(_measure_capacitance$1281+3)
  1169  000238' C00C F004'         	movff	(c:12),0+(?___flmul+04h)
  1170  00023C' C00D F005'         	movff	(c:12+1),1+(?___flmul+04h)
  1171  000240' C00E F006'         	movff	(c:12+2),2+(?___flmul+04h)
  1172  000244' C00F F007'         	movff	(c:12+3),3+(?___flmul+04h)
  1173  000248' C00C F000'         	movff	(c:12),(?___flmul)
  1174  00024C' C00D F001'         	movff	(c:12+1),(?___flmul+1)
  1175  000250' C00E F002'         	movff	(c:12+2),(?___flmul+2)
  1176  000254' C00F F003'         	movff	(c:12+3),(?___flmul+3)
  1177  000258' EC00' F000'        	call	___flmul	;wreg free
  1178  00025C' C000' F004'        	movff	0+?___flmul,0+(?___flsub+04h)
  1179  000260' C001' F005'        	movff	1+?___flmul,1+(?___flsub+04h)
  1180  000264' C002' F006'        	movff	2+?___flmul,2+(?___flsub+04h)
  1181  000268' C003' F007'        	movff	3+?___flmul,3+(?___flsub+04h)
  1182  00026C' C000' F000'        	movff	(_measure_capacitance$1281),(?___flsub)
  1183  000270' C001' F001'        	movff	(_measure_capacitance$1281+1),(?___flsub+
                                 1)
  1184  000274' C002' F002'        	movff	(_measure_capacitance$1281+2),(?___flsub+
                                 2)
  1185  000278' C003' F003'        	movff	(_measure_capacitance$1281+3),(?___flsub+
                                 3)
  1186  00027C' EC00' F000'        	call	___flsub	;wreg free
  1187  000280' C000' F000'        	movff	0+?___flsub,(?___flmul)
  1188  000284' C001' F001'        	movff	1+?___flsub,(?___flmul+1)
  1189  000288' C002' F002'        	movff	2+?___flsub,(?___flmul+2)
  1190  00028C' C003' F003'        	movff	3+?___flsub,(?___flmul+3)
  1191  000290' C010 F004'         	movff	(c:16),0+(?___flmul+04h)
  1192  000294' C011 F005'         	movff	(c:16+1),1+(?___flmul+04h)
  1193  000298' C012 F006'         	movff	(c:16+2),2+(?___flmul+04h)
  1194  00029C' C013 F007'         	movff	(c:16+3),3+(?___flmul+04h)
  1195  0002A0' EC00' F000'        	call	___flmul	;wreg free
  1196  0002A4' C000' F000'        	movff	0+?___flmul,(?___flmul)
  1197  0002A8' C001' F001'        	movff	1+?___flmul,(?___flmul+1)
  1198  0002AC' C002' F002'        	movff	2+?___flmul,(?___flmul+2)
  1199  0002B0' C003' F003'        	movff	3+?___flmul,(?___flmul+3)
  1200  0002B4' C010 F004'         	movff	(c:16),0+(?___flmul+04h)
  1201  0002B8' C011 F005'         	movff	(c:16+1),1+(?___flmul+04h)
  1202  0002BC' C012 F006'         	movff	(c:16+2),2+(?___flmul+04h)
  1203  0002C0' C013 F007'         	movff	(c:16+3),3+(?___flmul+04h)
  1204  0002C4' EC00' F000'        	call	___flmul	;wreg free
  1205  0002C8' C000' F000'        	movff	0+?___flmul,(?___flmul)
  1206  0002CC' C001' F001'        	movff	1+?___flmul,(?___flmul+1)
  1207  0002D0' C002' F002'        	movff	2+?___flmul,(?___flmul+2)
  1208  0002D4' C003' F003'        	movff	3+?___flmul,(?___flmul+3)
  1209  0002D8' C000 F004'         	movff	(c:0),0+(?___flmul+04h)
  1210  0002DC' C001 F005'         	movff	(c:0+1),1+(?___flmul+04h)
  1211  0002E0' C002 F006'         	movff	(c:0+2),2+(?___flmul+04h)
  1212  0002E4' C003 F007'         	movff	(c:0+3),3+(?___flmul+04h)
  1213  0002E8' EC00' F000'        	call	___flmul	;wreg free
  1214  0002EC' C000' F007'        	movff	0+?___flmul,(measure_capacitance@Cin)
  1215  0002F0' C001' F008'        	movff	1+?___flmul,(measure_capacitance@Cin+1)
  1216  0002F4' C002' F009'        	movff	2+?___flmul,(measure_capacitance@Cin+2)
  1217  0002F8' C003' F00A'        	movff	3+?___flmul,(measure_capacitance@Cin+3)
  1218                           	line	437
  1219                           ;LC-meter.c: 437: ser_puts("Cin=");
  1220  0002FC' 0E00'              	movlw	low(STR_10)
  1221  0002FE' 0101               	movlb	1	; () banked
  1222  000300' 0101               	movlb	1	; () banked
  1223  000302' 6F00'              	movwf	((?_ser_puts))&0ffh
  1224  000304' 0E00'              	movlw	high(STR_10)
  1225  000306' 0101               	movlb	1	; () banked
  1226  000308' 6F00'              	movwf	((?_ser_puts+1))&0ffh
  1227  00030A' EC00' F000'        	call	_ser_puts	;wreg free
  1228                           	line	438
  1229                           ;LC-meter.c: 438: format_double( Cin);
  1230  00030E' C007' F000'        	movff	(measure_capacitance@Cin),(?_format_doubl
                                 e)
  1231  000312' C008' F001'        	movff	(measure_capacitance@Cin+1),(?_format_dou
                                 ble+1)
  1232  000316' C009' F002'        	movff	(measure_capacitance@Cin+2),(?_format_dou
                                 ble+2)
  1233  00031A' C00A' F003'        	movff	(measure_capacitance@Cin+3),(?_format_dou
                                 ble+3)
  1234  00031E' EC00' F000'        	call	_format_double	;wreg free
  1235                           	line	439
  1236                           ;LC-meter.c: 439: ser_putch(' ');
  1237  000322' 0101               	movlb	1	; () banked
  1238  000324' 6F00'              	movwf	(??_measure_capacitance+11+0)&0ffh
  1239  000326' 0E20               	movlw	low(020h)
  1240  000328' 0101               	movlb	1	; () banked
  1241  00032A' 0101               	movlb	1	; () banked
  1242  00032C' 6F00'              	movwf	((?_ser_putch))&0ffh
  1243  00032E' 0101               	movlb	1	; () banked
  1244  000330' 5100'              	movf	(??_measure_capacitance+11+0)&0ffh,w
  1245  000332' EC00' F000'        	call	_ser_putch	;wreg free
  1246                           	line	440
  1247                           ;LC-meter.c: 440: format_xint32( *(unsigned long
                                  int*)&Cin);
  1248  000336' C007' F000'        	movff	(measure_capacitance@Cin),(?_format_xint3
                                 2)
  1249  00033A' C008' F001'        	movff	(measure_capacitance@Cin+1),(?_format_xin
                                 t32+1)
  1250  00033E' C009' F002'        	movff	(measure_capacitance@Cin+2),(?_format_xin
                                 t32+2)
  1251  000342' C00A' F003'        	movff	(measure_capacitance@Cin+3),(?_format_xin
                                 t32+3)
  1252  000346' EC00' F000'        	call	_format_xint32	;wreg free
  1253                           	line	441
  1254                           ;LC-meter.c: 441: ser_puts("\r\n");
  1255  00034A' 0E00'              	movlw	low(STR_11)
  1256  00034C' 0101               	movlb	1	; () banked
  1257  00034E' 0101               	movlb	1	; () banked
  1258  000350' 6F00'              	movwf	((?_ser_puts))&0ffh
  1259  000352' 0E00'              	movlw	high(STR_11)
  1260  000354' 0101               	movlb	1	; () banked
  1261  000356' 6F00'              	movwf	((?_ser_puts+1))&0ffh
  1262  000358' EC00' F000'        	call	_ser_puts	;wreg free
  1263                           	line	443
  1264                           ;LC-meter.c: 443: if(Cin > 999) {
  1265  00035C' C007' F004'        	movff	(measure_capacitance@Cin),0+(?___flge+04h
                                 )
  1266  000360' C008' F005'        	movff	(measure_capacitance@Cin+1),1+(?___flge+0
                                 4h)
  1267  000364' C009' F006'        	movff	(measure_capacitance@Cin+2),2+(?___flge+0
                                 4h)
  1268  000368' C00A' F007'        	movff	(measure_capacitance@Cin+3),3+(?___flge+0
                                 4h)
  1269  00036C' 0E00               	movlw	low(999.00000000000000)
  1270  00036E' 0101               	movlb	1	; () banked
  1271  000370' 0101               	movlb	1	; () banked
  1272  000372' 6F00'              	movwf	((?___flge))&0ffh
  1273  000374' 0EC0               	movlw	high(999.00000000000000)
  1274  000376' 0101               	movlb	1	; () banked
  1275  000378' 6F00'              	movwf	((?___flge+1))&0ffh
  1276  00037A' 0E79               	movlw	low highword(999.00000000000000)
  1277  00037C' 0101               	movlb	1	; () banked
  1278  00037E' 6F00'              	movwf	((?___flge+2))&0ffh
  1279  000380' 0E44               	movlw	high highword(999.00000000000000)
  1280  000382' 0101               	movlb	1	; () banked
  1281  000384' 6F00'              	movwf	((?___flge+3))&0ffh
  1282  000386' EC00' F000'        	call	___flge	;wreg free
  1283  00038A' B0D8               	btfsc	status,0
  1284  00038C' EF00' F000'        	goto	u2961
  1285  000390' EF00' F000'        	goto	u2960
  1286  000394'                    u2961:
  1287  000396' EF00' F000'        	goto	l855
  1288  00039A'                    u2960:
  1289                           	line	444
  1290                           ;LC-meter.c: 444: if(Cin > (999e+03l)) {
  1291  00039C' C007' F004'        	movff	(measure_capacitance@Cin),0+(?___flge+04h
                                 )
  1292  0003A0' C008' F005'        	movff	(measure_capacitance@Cin+1),1+(?___flge+0
                                 4h)
  1293  0003A4' C009' F006'        	movff	(measure_capacitance@Cin+2),2+(?___flge+0
                                 4h)
  1294  0003A8' C00A' F007'        	movff	(measure_capacitance@Cin+3),3+(?___flge+0
                                 4h)
  1295  0003AC' 0E80               	movlw	low(999000.00000000000)
  1296  0003AE' 0101               	movlb	1	; () banked
  1297  0003B0' 0101               	movlb	1	; () banked
  1298  0003B2' 6F00'              	movwf	((?___flge))&0ffh
  1299  0003B4' 0EE5               	movlw	high(999000.00000000000)
  1300  0003B6' 0101               	movlb	1	; () banked
  1301  0003B8' 6F00'              	movwf	((?___flge+1))&0ffh
  1302  0003BA' 0E73               	movlw	low highword(999000.00000000000)
  1303  0003BC' 0101               	movlb	1	; () banked
  1304  0003BE' 6F00'              	movwf	((?___flge+2))&0ffh
  1305  0003C0' 0E49               	movlw	high highword(999000.00000000000)
  1306  0003C2' 0101               	movlb	1	; () banked
  1307  0003C4' 6F00'              	movwf	((?___flge+3))&0ffh
  1308  0003C6' EC00' F000'        	call	___flge	;wreg free
  1309  0003CA' B0D8               	btfsc	status,0
  1310  0003CC' EF00' F000'        	goto	u2971
  1311  0003D0' EF00' F000'        	goto	u2970
  1312  0003D4'                    u2971:
  1313  0003D6' EF00' F000'        	goto	l856
  1314  0003DA'                    u2970:
  1315                           	line	445
  1316                           ;LC-meter.c: 445: if(Cin > (999e+06l)) {
  1317  0003DC' C007' F004'        	movff	(measure_capacitance@Cin),0+(?___flge+04h
                                 )
  1318  0003E0' C008' F005'        	movff	(measure_capacitance@Cin+1),1+(?___flge+0
                                 4h)
  1319  0003E4' C009' F006'        	movff	(measure_capacitance@Cin+2),2+(?___flge+0
                                 4h)
  1320  0003E8' C00A' F007'        	movff	(measure_capacitance@Cin+3),3+(?___flge+0
                                 4h)
  1321  0003EC' 0E1F               	movlw	low(999000000.00000000)
  1322  0003EE' 0101               	movlb	1	; () banked
  1323  0003F0' 0101               	movlb	1	; () banked
  1324  0003F2' 6F00'              	movwf	((?___flge))&0ffh
  1325  0003F4' 0E2E               	movlw	high(999000000.00000000)
  1326  0003F6' 0101               	movlb	1	; () banked
  1327  0003F8' 6F00'              	movwf	((?___flge+1))&0ffh
  1328  0003FA' 0E6E               	movlw	low highword(999000000.00000000)
  1329  0003FC' 0101               	movlb	1	; () banked
  1330  0003FE' 6F00'              	movwf	((?___flge+2))&0ffh
  1331  000400' 0E4E               	movlw	high highword(999000000.00000000)
  1332  000402' 0101               	movlb	1	; () banked
  1333  000404' 6F00'              	movwf	((?___flge+3))&0ffh
  1334  000406' EC00' F000'        	call	___flge	;wreg free
  1335  00040A' B0D8               	btfsc	status,0
  1336  00040C' EF00' F000'        	goto	u2981
  1337  000410' EF00' F000'        	goto	u2980
  1338  000414'                    u2981:
  1339  000416' EF00' F000'        	goto	l857
  1340  00041A'                    u2980:
  1341                           	line	446
  1342                           ;LC-meter.c: 446: Cin = Cin / (1e+09l);
  1343  00041C' 0E28               	movlw	low(1000000000.0000000)
  1344  00041E' 0101               	movlb	1	; () banked
  1345  000420' 0101               	movlb	1	; () banked
  1346  000422' 6F00'              	movwf	(0+(?___fldiv+04h))&0ffh
  1347  000424' 0E6B               	movlw	high(1000000000.0000000)
  1348  000426' 0101               	movlb	1	; () banked
  1349  000428' 6F00'              	movwf	(1+(?___fldiv+04h))&0ffh
  1350  00042A' 0E6E               	movlw	low highword(1000000000.0000000)
  1351  00042C' 0101               	movlb	1	; () banked
  1352  00042E' 6F00'              	movwf	(2+(?___fldiv+04h))&0ffh
  1353  000430' 0E4E               	movlw	high highword(1000000000.0000000)
  1354  000432' 0101               	movlb	1	; () banked
  1355  000434' 6F00'              	movwf	(3+(?___fldiv+04h))&0ffh
  1356  000436' C007' F000'        	movff	(measure_capacitance@Cin),(?___fldiv)
  1357  00043A' C008' F001'        	movff	(measure_capacitance@Cin+1),(?___fldiv+1)
  1358  00043E' C009' F002'        	movff	(measure_capacitance@Cin+2),(?___fldiv+2)
  1359  000442' C00A' F003'        	movff	(measure_capacitance@Cin+3),(?___fldiv+3)
  1360  000446' EC00' F000'        	call	___fldiv	;wreg free
  1361  00044A' C000' F007'        	movff	0+?___fldiv,(measure_capacitance@Cin)
  1362  00044E' C001' F008'        	movff	1+?___fldiv,(measure_capacitance@Cin+1)
  1363  000452' C002' F009'        	movff	2+?___fldiv,(measure_capacitance@Cin+2)
  1364  000456' C003' F00A'        	movff	3+?___fldiv,(measure_capacitance@Cin+3)
  1365                           	line	447
  1366                           ;LC-meter.c: 447: unit = 4;
  1367  00045A' 0101               	movlb	1	; () banked
  1368  00045C' 6F00'              	movwf	(??_measure_capacitance+11+0)&0ffh
  1369  00045E' 0E04               	movlw	low(04h)
  1370  000460' 0101               	movlb	1	; () banked
  1371  000462' 0101               	movlb	1	; () banked
  1372  000464' 6F00'              	movwf	((measure_capacitance@unit))&0ffh
  1373  000466' 0101               	movlb	1	; () banked
  1374  000468' 5100'              	movf	(??_measure_capacitance+11+0)&0ffh,w
  1375                           	line	448
  1376                           ;LC-meter.c: 448: } else {
  1377  00046A' EF00' F000'        	goto	l858
  1378                           	
  1379  00046E'                    l857:		; BSR set to: ?
  1380                           
  1381                           	line	449
  1382                           ;LC-meter.c: 449: Cin = Cin / (1e+06l);
  1383  000470' 0E00               	movlw	low(1000000.0000000000)
  1384  000472' 0101               	movlb	1	; () banked
  1385  000474' 0101               	movlb	1	; () banked
  1386  000476' 6F00'              	movwf	(0+(?___fldiv+04h))&0ffh
  1387  000478' 0E24               	movlw	high(1000000.0000000000)
  1388  00047A' 0101               	movlb	1	; () banked
  1389  00047C' 6F00'              	movwf	(1+(?___fldiv+04h))&0ffh
  1390  00047E' 0E74               	movlw	low highword(1000000.0000000000)
  1391  000480' 0101               	movlb	1	; () banked
  1392  000482' 6F00'              	movwf	(2+(?___fldiv+04h))&0ffh
  1393  000484' 0E49               	movlw	high highword(1000000.0000000000)
  1394  000486' 0101               	movlb	1	; () banked
  1395  000488' 6F00'              	movwf	(3+(?___fldiv+04h))&0ffh
  1396  00048A' C007' F000'        	movff	(measure_capacitance@Cin),(?___fldiv)
  1397  00048E' C008' F001'        	movff	(measure_capacitance@Cin+1),(?___fldiv+1)
  1398  000492' C009' F002'        	movff	(measure_capacitance@Cin+2),(?___fldiv+2)
  1399  000496' C00A' F003'        	movff	(measure_capacitance@Cin+3),(?___fldiv+3)
  1400  00049A' EC00' F000'        	call	___fldiv	;wreg free
  1401  00049E' C000' F007'        	movff	0+?___fldiv,(measure_capacitance@Cin)
  1402  0004A2' C001' F008'        	movff	1+?___fldiv,(measure_capacitance@Cin+1)
  1403  0004A6' C002' F009'        	movff	2+?___fldiv,(measure_capacitance@Cin+2)
  1404  0004AA' C003' F00A'        	movff	3+?___fldiv,(measure_capacitance@Cin+3)
  1405                           	line	450
  1406                           ;LC-meter.c: 450: unit = 5;
  1407  0004AE' 0101               	movlb	1	; () banked
  1408  0004B0' 6F00'              	movwf	(??_measure_capacitance+11+0)&0ffh
  1409  0004B2' 0E05               	movlw	low(05h)
  1410  0004B4' 0101               	movlb	1	; () banked
  1411  0004B6' 0101               	movlb	1	; () banked
  1412  0004B8' 6F00'              	movwf	((measure_capacitance@unit))&0ffh
  1413  0004BA' 0101               	movlb	1	; () banked
  1414  0004BC' 5100'              	movf	(??_measure_capacitance+11+0)&0ffh,w
  1415                           	line	451
  1416                           	
  1417  0004BE'                    l858:		; BSR set to: ?
  1418                           
  1419                           	line	452
  1420                           ;LC-meter.c: 451: }
  1421                           ;LC-meter.c: 452: } else {
  1422  0004C0' EF00' F000'        	goto	l859
  1423                           	
  1424  0004C4'                    l856:		; BSR set to: ?
  1425                           
  1426                           	line	453
  1427                           ;LC-meter.c: 453: Cin = Cin / 1e+03l;
  1428  0004C6' 0E00               	movlw	low(1000.0000000000000)
  1429  0004C8' 0101               	movlb	1	; () banked
  1430  0004CA' 0101               	movlb	1	; () banked
  1431  0004CC' 6F00'              	movwf	(0+(?___fldiv+04h))&0ffh
  1432  0004CE' 0E00               	movlw	high(1000.0000000000000)
  1433  0004D0' 0101               	movlb	1	; () banked
  1434  0004D2' 6F00'              	movwf	(1+(?___fldiv+04h))&0ffh
  1435  0004D4' 0E7A               	movlw	low highword(1000.0000000000000)
  1436  0004D6' 0101               	movlb	1	; () banked
  1437  0004D8' 6F00'              	movwf	(2+(?___fldiv+04h))&0ffh
  1438  0004DA' 0E44               	movlw	high highword(1000.0000000000000)
  1439  0004DC' 0101               	movlb	1	; () banked
  1440  0004DE' 6F00'              	movwf	(3+(?___fldiv+04h))&0ffh
  1441  0004E0' C007' F000'        	movff	(measure_capacitance@Cin),(?___fldiv)
  1442  0004E4' C008' F001'        	movff	(measure_capacitance@Cin+1),(?___fldiv+1)
  1443  0004E8' C009' F002'        	movff	(measure_capacitance@Cin+2),(?___fldiv+2)
  1444  0004EC' C00A' F003'        	movff	(measure_capacitance@Cin+3),(?___fldiv+3)
  1445  0004F0' EC00' F000'        	call	___fldiv	;wreg free
  1446  0004F4' C000' F007'        	movff	0+?___fldiv,(measure_capacitance@Cin)
  1447  0004F8' C001' F008'        	movff	1+?___fldiv,(measure_capacitance@Cin+1)
  1448  0004FC' C002' F009'        	movff	2+?___fldiv,(measure_capacitance@Cin+2)
  1449  000500' C003' F00A'        	movff	3+?___fldiv,(measure_capacitance@Cin+3)
  1450                           	line	454
  1451                           ;LC-meter.c: 454: unit = 6;
  1452  000504' 0101               	movlb	1	; () banked
  1453  000506' 6F00'              	movwf	(??_measure_capacitance+11+0)&0ffh
  1454  000508' 0E06               	movlw	low(06h)
  1455  00050A' 0101               	movlb	1	; () banked
  1456  00050C' 0101               	movlb	1	; () banked
  1457  00050E' 6F00'              	movwf	((measure_capacitance@unit))&0ffh
  1458  000510' 0101               	movlb	1	; () banked
  1459  000512' 5100'              	movf	(??_measure_capacitance+11+0)&0ffh,w
  1460                           	line	455
  1461                           	
  1462  000514'                    l859:		; BSR set to: ?
  1463                           
  1464                           	line	456
  1465                           ;LC-meter.c: 455: }
  1466                           ;LC-meter.c: 456: } else
  1467  000516' EF00' F000'        	goto	l860
  1468                           	
  1469  00051A'                    l855:		; BSR set to: ?
  1470                           
  1471                           	line	457
  1472                           ;LC-meter.c: 457: unit = 7;
  1473  00051C' 0101               	movlb	1	; () banked
  1474  00051E' 6F00'              	movwf	(??_measure_capacitance+11+0)&0ffh
  1475  000520' 0E07               	movlw	low(07h)
  1476  000522' 0101               	movlb	1	; () banked
  1477  000524' 0101               	movlb	1	; () banked
  1478  000526' 6F00'              	movwf	((measure_capacitance@unit))&0ffh
  1479  000528' 0101               	movlb	1	; () banked
  1480  00052A' 5100'              	movf	(??_measure_capacitance+11+0)&0ffh,w
  1481                           	
  1482  00052C'                    l860:		; BSR set to: ?
  1483                           
  1484                           	line	459
  1485                           ;LC-meter.c: 459: Cin = Cin * 100;
  1486  00052E' 0E00               	movlw	low(100.00000000000000)
  1487  000530' 0101               	movlb	1	; () banked
  1488  000532' 0101               	movlb	1	; () banked
  1489  000534' 6F00'              	movwf	(0+(?___flmul+04h))&0ffh
  1490  000536' 0E00               	movlw	high(100.00000000000000)
  1491  000538' 0101               	movlb	1	; () banked
  1492  00053A' 6F00'              	movwf	(1+(?___flmul+04h))&0ffh
  1493  00053C' 0EC8               	movlw	low highword(100.00000000000000)
  1494  00053E' 0101               	movlb	1	; () banked
  1495  000540' 6F00'              	movwf	(2+(?___flmul+04h))&0ffh
  1496  000542' 0E42               	movlw	high highword(100.00000000000000)
  1497  000544' 0101               	movlb	1	; () banked
  1498  000546' 6F00'              	movwf	(3+(?___flmul+04h))&0ffh
  1499  000548' C007' F000'        	movff	(measure_capacitance@Cin),(?___flmul)
  1500  00054C' C008' F001'        	movff	(measure_capacitance@Cin+1),(?___flmul+1)
  1501  000550' C009' F002'        	movff	(measure_capacitance@Cin+2),(?___flmul+2)
  1502  000554' C00A' F003'        	movff	(measure_capacitance@Cin+3),(?___flmul+3)
  1503  000558' EC00' F000'        	call	___flmul	;wreg free
  1504  00055C' C000' F007'        	movff	0+?___flmul,(measure_capacitance@Cin)
  1505  000560' C001' F008'        	movff	1+?___flmul,(measure_capacitance@Cin+1)
  1506  000564' C002' F009'        	movff	2+?___flmul,(measure_capacitance@Cin+2)
  1507  000568' C003' F00A'        	movff	3+?___flmul,(measure_capacitance@Cin+3)
  1508                           	line	460
  1509                           ;LC-meter.c: 460: var = (unsigned short int)Cin;
  1510  00056C' C007' F000'        	movff	(measure_capacitance@Cin),(?___fltol)
  1511  000570' C008' F001'        	movff	(measure_capacitance@Cin+1),(?___fltol+1)
  1512  000574' C009' F002'        	movff	(measure_capacitance@Cin+2),(?___fltol+2)
  1513  000578' C00A' F003'        	movff	(measure_capacitance@Cin+3),(?___fltol+3)
  1514  00057C' EC00' F000'        	call	___fltol	;wreg free
  1515  000580' C000' F005'        	movff	0+?___fltol,(measure_capacitance@var)
  1516  000584' C001' F006'        	movff	1+?___fltol,(measure_capacitance@var+1)
  1517                           	line	462
  1518                           ;LC-meter.c: 462: print_reading(var);
  1519  000588' C005' F000'        	movff	(measure_capacitance@var),(?_print_readin
                                 g)
  1520  00058C' C006' F001'        	movff	(measure_capacitance@var+1),(?_print_read
                                 ing+1)
  1521  000590' EC00' F000'        	call	_print_reading	;wreg free
  1522                           	line	463
  1523                           ;LC-meter.c: 463: print_unit(unit);
  1524  000594' C004' F000'        	movff	(measure_capacitance@unit),(?_print_unit)
  1525  000598' EC00' F000'        	call	_print_unit	;wreg free
  1526                           	line	464
  1527                           ;LC-meter.c: 464: }
  1528  00059C'                    l853:
  1529                           			; BSR set to: ?
  1530                           
  1531  00059C' 0012               	return
  1532  00059E' FFFF               	dw	0FFFFh; errata NOP
  1533                           	opt stack 0
  1534                           GLOBAL __end_of_measure_capacitance
  1535  0005A0'                    	__end_of_measure_capacitance:
  1536                           	FNSIZE	_measure_capacitance,12,0
  1537                           ; =============== function _measure_capacitance 
                                 ends ============
  1538                           
  1539                           	signat	_measure_capacitance,88
  1540                           	global	_ser_init
  1541                           	global	??_ser_init
  1542                           	global	?_ser_init
  1543                           
  1544                           ; *************** function _ser_init ***********
                                 ******
  1545                           ; Defined at:
  1546                           ;		line 125 in file "../../../lib/ser.c"
  1547                           ; Parameters:
  1548                           ;		None
  1549                           ; Auto variables:
  1550                           ;		None
  1551                           ; Return value:
  1552                           ;		type: void 
  1553                           ;		size: 0
  1554                           ; Registers used:
  1555                           ;		wreg, status,2
  1556                           ; Tracked objects:
  1557                           ;		On entry : 0/0
  1558                           ;		On exit  : 0/0
  1559                           ;		Unchanged: 0/0
  1560                           ; Data sizes:
  1561                           ;		Autos:    0
  1562                           ;		Params:   0
  1563                           ;		Temp:     0
  1564                           ;		Total:    0
  1565                           ; This function calls:
  1566                           ;		Nothing
  1567                           ; This function is called by:
  1568                           ;		_main
  1569                           ; This function uses a non-reentrant model
  1570                           ; 
  1571                                   psect   text4,class=CODE,space=0,reloc=2
  1572                           
  1573                           	opt lm
  1574                           	file	"../../../lib/ser.c"
  1575                           	line	125
  1576  000000                     	__size_of_ser_init	equ	__end_of_ser_init-_ser_i
                                 nit
  1577                           ;ser.c: 124: void
  1578                           ;ser.c: 125: ser_init(void) {
  1579                           	
  1580  000000'                    _ser_init:		; BSR set to: ?
  1581                           
  1582                           	opt stack 29
  1583  000000' FFFF               	dw	0FFFFh
  1584                           	line	128
  1585  000002' 8C94               	bsf	c:(31910/8),(31910)&7	;volatile
  1586                           	line	129
  1587                           ;ser.c: 129: LATC7 = 1;
  1588  000004' 8E8B               	bsf	c:(31839/8),(31839)&7	;volatile
  1589                           	line	131
  1590                           ;ser.c: 131: BRGH = 1;
  1591  000006' 84AC               	bsf	c:(32098/8),(32098)&7	;volatile
  1592                           	line	136
  1593                           ;ser.c: 136: SPBRG = ser_brg;
  1594  000008' C04E FFAF          	movff	(c:78),(c:4015)	;volatile
  1595                           	line	139
  1596                           ;ser.c: 139: TX9 = 0;
  1597  00000C' 9CAC               	bcf	c:(32102/8),(32102)&7	;volatile
  1598                           	line	140
  1599                           ;ser.c: 140: RX9 = 0;
  1600  00000E' 9CAB               	bcf	c:(32094/8),(32094)&7	;volatile
  1601                           	line	142
  1602                           ;ser.c: 142: SYNC = 0;
  1603  000010' 98AC               	bcf	c:(32100/8),(32100)&7	;volatile
  1604                           	line	143
  1605                           ;ser.c: 143: SPEN = 1;
  1606  000012' 8EAB               	bsf	c:(32095/8),(32095)&7	;volatile
  1607                           	line	144
  1608                           ;ser.c: 144: CREN = 1;
  1609  000014' 88AB               	bsf	c:(32092/8),(32092)&7	;volatile
  1610                           	line	145
  1611                           ;ser.c: 145: TXIE = 0;
  1612  000016' 989D               	bcf	c:(31980/8),(31980)&7	;volatile
  1613                           	line	147
  1614                           ;ser.c: 147: TXEN = 1;
  1615  000018' 8AAC               	bsf	c:(32101/8),(32101)&7	;volatile
  1616                           	line	148
  1617                           ;ser.c: 148: PEIE = 1;
  1618  00001A' 8CF2               	bsf	c:(32662/8),(32662)&7	;volatile
  1619                           	line	150
  1620                           ;ser.c: 150: rxiptr = rxoptr = txiptr = txoptr =
                                  0;
  1621  00001C' 0E00               	movlw	low(0)
  1622  00001E' 6E3B               	movwf	((c:59)),c	;volatile
  1623  000020' C03B F03A          	movff	(c:59),(c:58)	;volatile
  1624  000024' C03A F03D          	movff	(c:58),(c:61)	;volatile
  1625  000028' C03D F03C          	movff	(c:61),(c:60)	;volatile
  1626                           	line	151
  1627                           ;ser.c: 151: }
  1628  00002C'                    l345:
  1629                           			; BSR set to: ?
  1630                           
  1631  00002C' 0012               	return
  1632  00002E' FFFF               	dw	0FFFFh; errata NOP
  1633                           	opt stack 0
  1634                           GLOBAL __end_of_ser_init
  1635  000030'                    	__end_of_ser_init:
  1636                           	FNSIZE	_ser_init,0,0
  1637                           ; =============== function _ser_init ends ======
                                 ======
  1638                           
  1639                           	signat	_ser_init,88
  1640                           	global	_measure_inductance
  1641                           	global	??_measure_inductance
  1642                           	global	?_measure_inductance
  1643                           
  1644                           ; *************** function _measure_inductance *
                                 ****************
  1645                           ; Defined at:
  1646                           ;		line 470 in file "../../../src/LC-meter.c"
  1647                           ; Parameters:
  1648                           ;		None
  1649                           ; Auto variables:
  1650                           ;		unit        	       	type: unsigned char 
  1651                           ;		var         	       	type: unsigned short 
  1652                           ;		denominator 	       	type: unsigned short 
  1653                           ;		numerator   	       	type: unsigned short 
  1654                           ;		Lin         	       	type: unsigned short 
  1655                           ; Return value:
  1656                           ;		type: void 
  1657                           ;		size: 0
  1658                           ; Registers used:
  1659                           ;		wreg, fsr0l, fsr0h, status,2, status,0, cstac
                                 k
  1660                           ; Tracked objects:
  1661                           ;		On entry : 0/0
  1662                           ;		On exit  : 0/0
  1663                           ;		Unchanged: 0/0
  1664                           ; Data sizes:
  1665                           ;		Autos:   31
  1666                           ;		Params:   0
  1667                           ;		Temp:     1
  1668                           ;		Total:   32
  1669                           ; This function calls:
  1670                           ;		_measure_freq
  1671                           ;		___lwtofl
  1672                           ;		___flge
  1673                           ;		___flmul
  1674                           ;		___flsub
  1675                           ;		___fldiv
  1676                           ;		___fltol
  1677                           ;		_print_reading
  1678                           ;		_print_unit
  1679                           ; This function is called by:
  1680                           ;		_main
  1681                           ; This function uses a non-reentrant model
  1682                           ; 
  1683                                   psect   text5,class=CODE,space=0,reloc=2
  1684                           
  1685                           	opt lm
  1686                           	file	"../../../src/LC-meter.c"
  1687                           	line	470
  1688  000000                     	__size_of_measure_inductance	equ	__end_of_measu
                                 re_inductance-_measure_inductance
  1689                           ;LC-meter.c: 469: void
  1690                           ;LC-meter.c: 470: measure_inductance() {
  1691                           	
  1692  000000'                    _measure_inductance:		; BSR set to: ?
  1693                           
  1694                           	opt stack 29
  1695  000000' FFFF               	dw	0FFFFh
  1696                           	line	480
  1697  000002' EC00' F000'        	call	_measure_freq	;wreg free
  1698  000006' C000' F011'        	movff	0+?_measure_freq,(measure_inductance@var)
  1699  00000A' C001' F012'        	movff	1+?_measure_freq,(measure_inductance@var+
                                 1)
  1700                           	line	482
  1701                           ;LC-meter.c: 482: F3 = (double)var;
  1702  00000E' C011' F000'        	movff	(measure_inductance@var),(?___lwtofl)
  1703  000012' C012' F001'        	movff	(measure_inductance@var+1),(?___lwtofl+1)
  1704  000016' EC00' F000'        	call	___lwtofl	;wreg free
  1705  00001A' C000' F00C         	movff	0+?___lwtofl,(c:12)
  1706  00001E' C001' F00D         	movff	1+?___lwtofl,(c:12+1)
  1707  000022' C002' F00E         	movff	2+?___lwtofl,(c:12+2)
  1708  000026' C003' F00F         	movff	3+?___lwtofl,(c:12+3)
  1709                           	line	483
  1710                           ;LC-meter.c: 483: if(F3 > F1)
  1711  00002A' C00C F004'         	movff	(c:12),0+(?___flge+04h)
  1712  00002E' C00D F005'         	movff	(c:12+1),1+(?___flge+04h)
  1713  000032' C00E F006'         	movff	(c:12+2),2+(?___flge+04h)
  1714  000036' C00F F007'         	movff	(c:12+3),3+(?___flge+04h)
  1715  00003A' C008 F000'         	movff	(c:8),(?___flge)
  1716  00003E' C009 F001'         	movff	(c:8+1),(?___flge+1)
  1717  000042' C00A F002'         	movff	(c:8+2),(?___flge+2)
  1718  000046' C00B F003'         	movff	(c:8+3),(?___flge+3)
  1719  00004A' EC00' F000'        	call	___flge	;wreg free
  1720  00004E' B0D8               	btfsc	status,0
  1721  000050' EF00' F000'        	goto	u3001
  1722  000054' EF00' F000'        	goto	u3000
  1723  000058'                    u3001:
  1724  00005A' EF00' F000'        	goto	l862
  1725  00005E'                    u3000:
  1726                           	line	484
  1727                           ;LC-meter.c: 484: F3 = F1;
  1728  000060' C008 F00C          	movff	(c:8),(c:12)
  1729  000064' C009 F00D          	movff	(c:8+1),(c:12+1)
  1730  000068' C00A F00E          	movff	(c:8+2),(c:12+2)
  1731  00006C' C00B F00F          	movff	(c:8+3),(c:12+3)
  1732                           	
  1733  000070'                    l862:		; BSR set to: ?
  1734                           
  1735                           	line	486
  1736                           ;LC-meter.c: 486: numerator = ((F1 * F1) - (F3 *
                                  F3)) * ((F1 * F1) - (F2 - F2)) * (100 * 100);
  1737  000072' C008 F004'         	movff	(c:8),0+(?___flmul+04h)
  1738  000076' C009 F005'         	movff	(c:8+1),1+(?___flmul+04h)
  1739  00007A' C00A F006'         	movff	(c:8+2),2+(?___flmul+04h)
  1740  00007E' C00B F007'         	movff	(c:8+3),3+(?___flmul+04h)
  1741  000082' C008 F000'         	movff	(c:8),(?___flmul)
  1742  000086' C009 F001'         	movff	(c:8+1),(?___flmul+1)
  1743  00008A' C00A F002'         	movff	(c:8+2),(?___flmul+2)
  1744  00008E' C00B F003'         	movff	(c:8+3),(?___flmul+3)
  1745  000092' EC00' F000'        	call	___flmul	;wreg free
  1746  000096' C000' F000'        	movff	0+?___flmul,(_measure_inductance$1300)
  1747  00009A' C001' F001'        	movff	1+?___flmul,(_measure_inductance$1300+1)
  1748  00009E' C002' F002'        	movff	2+?___flmul,(_measure_inductance$1300+2)
  1749  0000A2' C003' F003'        	movff	3+?___flmul,(_measure_inductance$1300+3)
  1750  0000A6' C008 F004'         	movff	(c:8),0+(?___flmul+04h)
  1751  0000AA' C009 F005'         	movff	(c:8+1),1+(?___flmul+04h)
  1752  0000AE' C00A F006'         	movff	(c:8+2),2+(?___flmul+04h)
  1753  0000B2' C00B F007'         	movff	(c:8+3),3+(?___flmul+04h)
  1754  0000B6' C008 F000'         	movff	(c:8),(?___flmul)
  1755  0000BA' C009 F001'         	movff	(c:8+1),(?___flmul+1)
  1756  0000BE' C00A F002'         	movff	(c:8+2),(?___flmul+2)
  1757  0000C2' C00B F003'         	movff	(c:8+3),(?___flmul+3)
  1758  0000C6' EC00' F000'        	call	___flmul	;wreg free
  1759  0000CA' C000' F004'        	movff	0+?___flmul,(_measure_inductance$1301)
  1760  0000CE' C001' F005'        	movff	1+?___flmul,(_measure_inductance$1301+1)
  1761  0000D2' C002' F006'        	movff	2+?___flmul,(_measure_inductance$1301+2)
  1762  0000D6' C003' F007'        	movff	3+?___flmul,(_measure_inductance$1301+3)
  1763  0000DA' C00C F004'         	movff	(c:12),0+(?___flmul+04h)
  1764  0000DE' C00D F005'         	movff	(c:12+1),1+(?___flmul+04h)
  1765  0000E2' C00E F006'         	movff	(c:12+2),2+(?___flmul+04h)
  1766  0000E6' C00F F007'         	movff	(c:12+3),3+(?___flmul+04h)
  1767  0000EA' C00C F000'         	movff	(c:12),(?___flmul)
  1768  0000EE' C00D F001'         	movff	(c:12+1),(?___flmul+1)
  1769  0000F2' C00E F002'         	movff	(c:12+2),(?___flmul+2)
  1770  0000F6' C00F F003'         	movff	(c:12+3),(?___flmul+3)
  1771  0000FA' EC00' F000'        	call	___flmul	;wreg free
  1772  0000FE' C000' F008'        	movff	0+?___flmul,(_measure_inductance$1302)
  1773  000102' C001' F009'        	movff	1+?___flmul,(_measure_inductance$1302+1)
  1774  000106' C002' F00A'        	movff	2+?___flmul,(_measure_inductance$1302+2)
  1775  00010A' C003' F00B'        	movff	3+?___flmul,(_measure_inductance$1302+3)
  1776  00010E' C008' F004'        	movff	(_measure_inductance$1302),0+(?___flsub+0
                                 4h)
  1777  000112' C009' F005'        	movff	(_measure_inductance$1302+1),1+(?___flsub
                                 +04h)
  1778  000116' C00A' F006'        	movff	(_measure_inductance$1302+2),2+(?___flsub
                                 +04h)
  1779  00011A' C00B' F007'        	movff	(_measure_inductance$1302+3),3+(?___flsub
                                 +04h)
  1780  00011E' C004' F000'        	movff	(_measure_inductance$1301),(?___flsub)
  1781  000122' C005' F001'        	movff	(_measure_inductance$1301+1),(?___flsub+1
                                 )
  1782  000126' C006' F002'        	movff	(_measure_inductance$1301+2),(?___flsub+2
                                 )
  1783  00012A' C007' F003'        	movff	(_measure_inductance$1301+3),(?___flsub+3
                                 )
  1784  00012E' EC00' F000'        	call	___flsub	;wreg free
  1785  000132' C000' F00C'        	movff	0+?___flsub,(_measure_inductance$1303)
  1786  000136' C001' F00D'        	movff	1+?___flsub,(_measure_inductance$1303+1)
  1787  00013A' C002' F00E'        	movff	2+?___flsub,(_measure_inductance$1303+2)
  1788  00013E' C003' F00F'        	movff	3+?___flsub,(_measure_inductance$1303+3)
  1789  000142' C010 F004'         	movff	(c:16),0+(?___flsub+04h)
  1790  000146' C011 F005'         	movff	(c:16+1),1+(?___flsub+04h)
  1791  00014A' C012 F006'         	movff	(c:16+2),2+(?___flsub+04h)
  1792  00014E' C013 F007'         	movff	(c:16+3),3+(?___flsub+04h)
  1793  000152' C010 F000'         	movff	(c:16),(?___flsub)
  1794  000156' C011 F001'         	movff	(c:16+1),(?___flsub+1)
  1795  00015A' C012 F002'         	movff	(c:16+2),(?___flsub+2)
  1796  00015E' C013 F003'         	movff	(c:16+3),(?___flsub+3)
  1797  000162' EC00' F000'        	call	___flsub	;wreg free
  1798  000166' C000' F004'        	movff	0+?___flsub,0+(?___flsub+04h)
  1799  00016A' C001' F005'        	movff	1+?___flsub,1+(?___flsub+04h)
  1800  00016E' C002' F006'        	movff	2+?___flsub,2+(?___flsub+04h)
  1801  000172' C003' F007'        	movff	3+?___flsub,3+(?___flsub+04h)
  1802  000176' C000' F000'        	movff	(_measure_inductance$1300),(?___flsub)
  1803  00017A' C001' F001'        	movff	(_measure_inductance$1300+1),(?___flsub+1
                                 )
  1804  00017E' C002' F002'        	movff	(_measure_inductance$1300+2),(?___flsub+2
                                 )
  1805  000182' C003' F003'        	movff	(_measure_inductance$1300+3),(?___flsub+3
                                 )
  1806  000186' EC00' F000'        	call	___flsub	;wreg free
  1807  00018A' C000' F004'        	movff	0+?___flsub,0+(?___flmul+04h)
  1808  00018E' C001' F005'        	movff	1+?___flsub,1+(?___flmul+04h)
  1809  000192' C002' F006'        	movff	2+?___flsub,2+(?___flmul+04h)
  1810  000196' C003' F007'        	movff	3+?___flsub,3+(?___flmul+04h)
  1811  00019A' C00C' F000'        	movff	(_measure_inductance$1303),(?___flmul)
  1812  00019E' C00D' F001'        	movff	(_measure_inductance$1303+1),(?___flmul+1
                                 )
  1813  0001A2' C00E' F002'        	movff	(_measure_inductance$1303+2),(?___flmul+2
                                 )
  1814  0001A6' C00F' F003'        	movff	(_measure_inductance$1303+3),(?___flmul+3
                                 )
  1815  0001AA' EC00' F000'        	call	___flmul	;wreg free
  1816  0001AE' C000' F000'        	movff	0+?___flmul,(?___flmul)
  1817  0001B2' C001' F001'        	movff	1+?___flmul,(?___flmul+1)
  1818  0001B6' C002' F002'        	movff	2+?___flmul,(?___flmul+2)
  1819  0001BA' C003' F003'        	movff	3+?___flmul,(?___flmul+3)
  1820  0001BE' 0E00               	movlw	low(10000.000000000000)
  1821  0001C0' 0101               	movlb	1	; () banked
  1822  0001C2' 0101               	movlb	1	; () banked
  1823  0001C4' 6F00'              	movwf	(0+(?___flmul+04h))&0ffh
  1824  0001C6' 0E40               	movlw	high(10000.000000000000)
  1825  0001C8' 0101               	movlb	1	; () banked
  1826  0001CA' 6F00'              	movwf	(1+(?___flmul+04h))&0ffh
  1827  0001CC' 0E1C               	movlw	low highword(10000.000000000000)
  1828  0001CE' 0101               	movlb	1	; () banked
  1829  0001D0' 6F00'              	movwf	(2+(?___flmul+04h))&0ffh
  1830  0001D2' 0E46               	movlw	high highword(10000.000000000000)
  1831  0001D4' 0101               	movlb	1	; () banked
  1832  0001D6' 6F00'              	movwf	(3+(?___flmul+04h))&0ffh
  1833  0001D8' EC00' F000'        	call	___flmul	;wreg free
  1834  0001DC' C000' F017'        	movff	0+?___flmul,(measure_inductance@numerator
                                 )
  1835  0001E0' C001' F018'        	movff	1+?___flmul,(measure_inductance@numerator
                                 +1)
  1836  0001E4' C002' F019'        	movff	2+?___flmul,(measure_inductance@numerator
                                 +2)
  1837  0001E8' C003' F01A'        	movff	3+?___flmul,(measure_inductance@numerator
                                 +3)
  1838                           	line	488
  1839                           ;LC-meter.c: 488: denominator = 4 * 3.1415926535
                                 8979323846l * 3.14159265358979323846l * F1 * F1 
                                 * F2 * F2 * F3 * F3 * CCal;
  1840  0001EC' C008 F004'         	movff	(c:8),0+(?___flmul+04h)
  1841  0001F0' C009 F005'         	movff	(c:8+1),1+(?___flmul+04h)
  1842  0001F4' C00A F006'         	movff	(c:8+2),2+(?___flmul+04h)
  1843  0001F8' C00B F007'         	movff	(c:8+3),3+(?___flmul+04h)
  1844  0001FC' C008 F000'         	movff	(c:8),(?___flmul)
  1845  000200' C009 F001'         	movff	(c:8+1),(?___flmul+1)
  1846  000204' C00A F002'         	movff	(c:8+2),(?___flmul+2)
  1847  000208' C00B F003'         	movff	(c:8+3),(?___flmul+3)
  1848  00020C' EC00' F000'        	call	___flmul	;wreg free
  1849  000210' C000' F000'        	movff	0+?___flmul,(?___flmul)
  1850  000214' C001' F001'        	movff	1+?___flmul,(?___flmul+1)
  1851  000218' C002' F002'        	movff	2+?___flmul,(?___flmul+2)
  1852  00021C' C003' F003'        	movff	3+?___flmul,(?___flmul+3)
  1853  000220' C010 F004'         	movff	(c:16),0+(?___flmul+04h)
  1854  000224' C011 F005'         	movff	(c:16+1),1+(?___flmul+04h)
  1855  000228' C012 F006'         	movff	(c:16+2),2+(?___flmul+04h)
  1856  00022C' C013 F007'         	movff	(c:16+3),3+(?___flmul+04h)
  1857  000230' EC00' F000'        	call	___flmul	;wreg free
  1858  000234' C000' F000'        	movff	0+?___flmul,(?___flmul)
  1859  000238' C001' F001'        	movff	1+?___flmul,(?___flmul+1)
  1860  00023C' C002' F002'        	movff	2+?___flmul,(?___flmul+2)
  1861  000240' C003' F003'        	movff	3+?___flmul,(?___flmul+3)
  1862  000244' C010 F004'         	movff	(c:16),0+(?___flmul+04h)
  1863  000248' C011 F005'         	movff	(c:16+1),1+(?___flmul+04h)
  1864  00024C' C012 F006'         	movff	(c:16+2),2+(?___flmul+04h)
  1865  000250' C013 F007'         	movff	(c:16+3),3+(?___flmul+04h)
  1866  000254' EC00' F000'        	call	___flmul	;wreg free
  1867  000258' C000' F000'        	movff	0+?___flmul,(?___flmul)
  1868  00025C' C001' F001'        	movff	1+?___flmul,(?___flmul+1)
  1869  000260' C002' F002'        	movff	2+?___flmul,(?___flmul+2)
  1870  000264' C003' F003'        	movff	3+?___flmul,(?___flmul+3)
  1871  000268' C00C F004'         	movff	(c:12),0+(?___flmul+04h)
  1872  00026C' C00D F005'         	movff	(c:12+1),1+(?___flmul+04h)
  1873  000270' C00E F006'         	movff	(c:12+2),2+(?___flmul+04h)
  1874  000274' C00F F007'         	movff	(c:12+3),3+(?___flmul+04h)
  1875  000278' EC00' F000'        	call	___flmul	;wreg free
  1876  00027C' C000' F000'        	movff	0+?___flmul,(?___flmul)
  1877  000280' C001' F001'        	movff	1+?___flmul,(?___flmul+1)
  1878  000284' C002' F002'        	movff	2+?___flmul,(?___flmul+2)
  1879  000288' C003' F003'        	movff	3+?___flmul,(?___flmul+3)
  1880  00028C' C00C F004'         	movff	(c:12),0+(?___flmul+04h)
  1881  000290' C00D F005'         	movff	(c:12+1),1+(?___flmul+04h)
  1882  000294' C00E F006'         	movff	(c:12+2),2+(?___flmul+04h)
  1883  000298' C00F F007'         	movff	(c:12+3),3+(?___flmul+04h)
  1884  00029C' EC00' F000'        	call	___flmul	;wreg free
  1885  0002A0' C000' F000'        	movff	0+?___flmul,(?___flmul)
  1886  0002A4' C001' F001'        	movff	1+?___flmul,(?___flmul+1)
  1887  0002A8' C002' F002'        	movff	2+?___flmul,(?___flmul+2)
  1888  0002AC' C003' F003'        	movff	3+?___flmul,(?___flmul+3)
  1889  0002B0' C000 F004'         	movff	(c:0),0+(?___flmul+04h)
  1890  0002B4' C001 F005'         	movff	(c:0+1),1+(?___flmul+04h)
  1891  0002B8' C002 F006'         	movff	(c:0+2),2+(?___flmul+04h)
  1892  0002BC' C003 F007'         	movff	(c:0+3),3+(?___flmul+04h)
  1893  0002C0' EC00' F000'        	call	___flmul	;wreg free
  1894  0002C4' C000' F000'        	movff	0+?___flmul,(?___flmul)
  1895  0002C8' C001' F001'        	movff	1+?___flmul,(?___flmul+1)
  1896  0002CC' C002' F002'        	movff	2+?___flmul,(?___flmul+2)
  1897  0002D0' C003' F003'        	movff	3+?___flmul,(?___flmul+3)
  1898  0002D4' 0EE6               	movlw	low(39.478417604357432)
  1899  0002D6' 0101               	movlb	1	; () banked
  1900  0002D8' 0101               	movlb	1	; () banked
  1901  0002DA' 6F00'              	movwf	(0+(?___flmul+04h))&0ffh
  1902  0002DC' 0EE9               	movlw	high(39.478417604357432)
  1903  0002DE' 0101               	movlb	1	; () banked
  1904  0002E0' 6F00'              	movwf	(1+(?___flmul+04h))&0ffh
  1905  0002E2' 0E1D               	movlw	low highword(39.478417604357432)
  1906  0002E4' 0101               	movlb	1	; () banked
  1907  0002E6' 6F00'              	movwf	(2+(?___flmul+04h))&0ffh
  1908  0002E8' 0E42               	movlw	high highword(39.478417604357432)
  1909  0002EA' 0101               	movlb	1	; () banked
  1910  0002EC' 6F00'              	movwf	(3+(?___flmul+04h))&0ffh
  1911  0002EE' EC00' F000'        	call	___flmul	;wreg free
  1912  0002F2' C000' F013'        	movff	0+?___flmul,(measure_inductance@denominat
                                 or)
  1913  0002F6' C001' F014'        	movff	1+?___flmul,(measure_inductance@denominat
                                 or+1)
  1914  0002FA' C002' F015'        	movff	2+?___flmul,(measure_inductance@denominat
                                 or+2)
  1915  0002FE' C003' F016'        	movff	3+?___flmul,(measure_inductance@denominat
                                 or+3)
  1916                           	line	490
  1917                           ;LC-meter.c: 490: Lin = (numerator / denominator
                                 ) * 1e+15l;
  1918  000302' C013' F004'        	movff	(measure_inductance@denominator),0+(?___f
                                 ldiv+04h)
  1919  000306' C014' F005'        	movff	(measure_inductance@denominator+1),1+(?__
                                 _fldiv+04h)
  1920  00030A' C015' F006'        	movff	(measure_inductance@denominator+2),2+(?__
                                 _fldiv+04h)
  1921  00030E' C016' F007'        	movff	(measure_inductance@denominator+3),3+(?__
                                 _fldiv+04h)
  1922  000312' C017' F000'        	movff	(measure_inductance@numerator),(?___fldiv
                                 )
  1923  000316' C018' F001'        	movff	(measure_inductance@numerator+1),(?___fld
                                 iv+1)
  1924  00031A' C019' F002'        	movff	(measure_inductance@numerator+2),(?___fld
                                 iv+2)
  1925  00031E' C01A' F003'        	movff	(measure_inductance@numerator+3),(?___fld
                                 iv+3)
  1926  000322' EC00' F000'        	call	___fldiv	;wreg free
  1927  000326' C000' F000'        	movff	0+?___fldiv,(?___flmul)
  1928  00032A' C001' F001'        	movff	1+?___fldiv,(?___flmul+1)
  1929  00032E' C002' F002'        	movff	2+?___fldiv,(?___flmul+2)
  1930  000332' C003' F003'        	movff	3+?___fldiv,(?___flmul+3)
  1931  000336' 0EA9               	movlw	low(1000000000000000.0)
  1932  000338' 0101               	movlb	1	; () banked
  1933  00033A' 0101               	movlb	1	; () banked
  1934  00033C' 6F00'              	movwf	(0+(?___flmul+04h))&0ffh
  1935  00033E' 0E5F               	movlw	high(1000000000000000.0)
  1936  000340' 0101               	movlb	1	; () banked
  1937  000342' 6F00'              	movwf	(1+(?___flmul+04h))&0ffh
  1938  000344' 0E63               	movlw	low highword(1000000000000000.0)
  1939  000346' 0101               	movlb	1	; () banked
  1940  000348' 6F00'              	movwf	(2+(?___flmul+04h))&0ffh
  1941  00034A' 0E58               	movlw	high highword(1000000000000000.0)
  1942  00034C' 0101               	movlb	1	; () banked
  1943  00034E' 6F00'              	movwf	(3+(?___flmul+04h))&0ffh
  1944  000350' EC00' F000'        	call	___flmul	;wreg free
  1945  000354' C000' F01B'        	movff	0+?___flmul,(measure_inductance@Lin)
  1946  000358' C001' F01C'        	movff	1+?___flmul,(measure_inductance@Lin+1)
  1947  00035C' C002' F01D'        	movff	2+?___flmul,(measure_inductance@Lin+2)
  1948  000360' C003' F01E'        	movff	3+?___flmul,(measure_inductance@Lin+3)
  1949                           	line	492
  1950                           ;LC-meter.c: 492: if(Lin > 999) {
  1951  000364' C01B' F004'        	movff	(measure_inductance@Lin),0+(?___flge+04h)
  1952  000368' C01C' F005'        	movff	(measure_inductance@Lin+1),1+(?___flge+04
                                 h)
  1953  00036C' C01D' F006'        	movff	(measure_inductance@Lin+2),2+(?___flge+04
                                 h)
  1954  000370' C01E' F007'        	movff	(measure_inductance@Lin+3),3+(?___flge+04
                                 h)
  1955  000374' 0E00               	movlw	low(999.00000000000000)
  1956  000376' 0101               	movlb	1	; () banked
  1957  000378' 0101               	movlb	1	; () banked
  1958  00037A' 6F00'              	movwf	((?___flge))&0ffh
  1959  00037C' 0EC0               	movlw	high(999.00000000000000)
  1960  00037E' 0101               	movlb	1	; () banked
  1961  000380' 6F00'              	movwf	((?___flge+1))&0ffh
  1962  000382' 0E79               	movlw	low highword(999.00000000000000)
  1963  000384' 0101               	movlb	1	; () banked
  1964  000386' 6F00'              	movwf	((?___flge+2))&0ffh
  1965  000388' 0E44               	movlw	high highword(999.00000000000000)
  1966  00038A' 0101               	movlb	1	; () banked
  1967  00038C' 6F00'              	movwf	((?___flge+3))&0ffh
  1968  00038E' EC00' F000'        	call	___flge	;wreg free
  1969  000392' B0D8               	btfsc	status,0
  1970  000394' EF00' F000'        	goto	u3011
  1971  000398' EF00' F000'        	goto	u3010
  1972  00039C'                    u3011:
  1973  00039E' EF00' F000'        	goto	l863
  1974  0003A2'                    u3010:
  1975                           	line	493
  1976                           ;LC-meter.c: 493: if(Lin > (999e+03l)) {
  1977  0003A4' C01B' F004'        	movff	(measure_inductance@Lin),0+(?___flge+04h)
  1978  0003A8' C01C' F005'        	movff	(measure_inductance@Lin+1),1+(?___flge+04
                                 h)
  1979  0003AC' C01D' F006'        	movff	(measure_inductance@Lin+2),2+(?___flge+04
                                 h)
  1980  0003B0' C01E' F007'        	movff	(measure_inductance@Lin+3),3+(?___flge+04
                                 h)
  1981  0003B4' 0E80               	movlw	low(999000.00000000000)
  1982  0003B6' 0101               	movlb	1	; () banked
  1983  0003B8' 0101               	movlb	1	; () banked
  1984  0003BA' 6F00'              	movwf	((?___flge))&0ffh
  1985  0003BC' 0EE5               	movlw	high(999000.00000000000)
  1986  0003BE' 0101               	movlb	1	; () banked
  1987  0003C0' 6F00'              	movwf	((?___flge+1))&0ffh
  1988  0003C2' 0E73               	movlw	low highword(999000.00000000000)
  1989  0003C4' 0101               	movlb	1	; () banked
  1990  0003C6' 6F00'              	movwf	((?___flge+2))&0ffh
  1991  0003C8' 0E49               	movlw	high highword(999000.00000000000)
  1992  0003CA' 0101               	movlb	1	; () banked
  1993  0003CC' 6F00'              	movwf	((?___flge+3))&0ffh
  1994  0003CE' EC00' F000'        	call	___flge	;wreg free
  1995  0003D2' B0D8               	btfsc	status,0
  1996  0003D4' EF00' F000'        	goto	u3021
  1997  0003D8' EF00' F000'        	goto	u3020
  1998  0003DC'                    u3021:
  1999  0003DE' EF00' F000'        	goto	l864
  2000  0003E2'                    u3020:
  2001                           	line	494
  2002                           ;LC-meter.c: 494: if(Lin > (999e+06l)) {
  2003  0003E4' C01B' F004'        	movff	(measure_inductance@Lin),0+(?___flge+04h)
  2004  0003E8' C01C' F005'        	movff	(measure_inductance@Lin+1),1+(?___flge+04
                                 h)
  2005  0003EC' C01D' F006'        	movff	(measure_inductance@Lin+2),2+(?___flge+04
                                 h)
  2006  0003F0' C01E' F007'        	movff	(measure_inductance@Lin+3),3+(?___flge+04
                                 h)
  2007  0003F4' 0E1F               	movlw	low(999000000.00000000)
  2008  0003F6' 0101               	movlb	1	; () banked
  2009  0003F8' 0101               	movlb	1	; () banked
  2010  0003FA' 6F00'              	movwf	((?___flge))&0ffh
  2011  0003FC' 0E2E               	movlw	high(999000000.00000000)
  2012  0003FE' 0101               	movlb	1	; () banked
  2013  000400' 6F00'              	movwf	((?___flge+1))&0ffh
  2014  000402' 0E6E               	movlw	low highword(999000000.00000000)
  2015  000404' 0101               	movlb	1	; () banked
  2016  000406' 6F00'              	movwf	((?___flge+2))&0ffh
  2017  000408' 0E4E               	movlw	high highword(999000000.00000000)
  2018  00040A' 0101               	movlb	1	; () banked
  2019  00040C' 6F00'              	movwf	((?___flge+3))&0ffh
  2020  00040E' EC00' F000'        	call	___flge	;wreg free
  2021  000412' B0D8               	btfsc	status,0
  2022  000414' EF00' F000'        	goto	u3031
  2023  000418' EF00' F000'        	goto	u3030
  2024  00041C'                    u3031:
  2025  00041E' EF00' F000'        	goto	l865
  2026  000422'                    u3030:
  2027                           	line	495
  2028                           ;LC-meter.c: 495: Lin = Lin / (1e+09l);
  2029  000424' 0E28               	movlw	low(1000000000.0000000)
  2030  000426' 0101               	movlb	1	; () banked
  2031  000428' 0101               	movlb	1	; () banked
  2032  00042A' 6F00'              	movwf	(0+(?___fldiv+04h))&0ffh
  2033  00042C' 0E6B               	movlw	high(1000000000.0000000)
  2034  00042E' 0101               	movlb	1	; () banked
  2035  000430' 6F00'              	movwf	(1+(?___fldiv+04h))&0ffh
  2036  000432' 0E6E               	movlw	low highword(1000000000.0000000)
  2037  000434' 0101               	movlb	1	; () banked
  2038  000436' 6F00'              	movwf	(2+(?___fldiv+04h))&0ffh
  2039  000438' 0E4E               	movlw	high highword(1000000000.0000000)
  2040  00043A' 0101               	movlb	1	; () banked
  2041  00043C' 6F00'              	movwf	(3+(?___fldiv+04h))&0ffh
  2042  00043E' C01B' F000'        	movff	(measure_inductance@Lin),(?___fldiv)
  2043  000442' C01C' F001'        	movff	(measure_inductance@Lin+1),(?___fldiv+1)
  2044  000446' C01D' F002'        	movff	(measure_inductance@Lin+2),(?___fldiv+2)
  2045  00044A' C01E' F003'        	movff	(measure_inductance@Lin+3),(?___fldiv+3)
  2046  00044E' EC00' F000'        	call	___fldiv	;wreg free
  2047  000452' C000' F01B'        	movff	0+?___fldiv,(measure_inductance@Lin)
  2048  000456' C001' F01C'        	movff	1+?___fldiv,(measure_inductance@Lin+1)
  2049  00045A' C002' F01D'        	movff	2+?___fldiv,(measure_inductance@Lin+2)
  2050  00045E' C003' F01E'        	movff	3+?___fldiv,(measure_inductance@Lin+3)
  2051                           	line	496
  2052                           ;LC-meter.c: 496: unit = 0;
  2053  000462' 0101               	movlb	1	; () banked
  2054  000464' 6F00'              	movwf	(??_measure_inductance+31+0)&0ffh
  2055  000466' 0E00               	movlw	low(0)
  2056  000468' 0101               	movlb	1	; () banked
  2057  00046A' 0101               	movlb	1	; () banked
  2058  00046C' 6F00'              	movwf	((measure_inductance@unit))&0ffh
  2059  00046E' 0101               	movlb	1	; () banked
  2060  000470' 5100'              	movf	(??_measure_inductance+31+0)&0ffh,w
  2061                           	line	497
  2062                           ;LC-meter.c: 497: } else {
  2063  000472' EF00' F000'        	goto	l866
  2064                           	
  2065  000476'                    l865:		; BSR set to: ?
  2066                           
  2067                           	line	498
  2068                           ;LC-meter.c: 498: Lin = Lin / (1e+06l);
  2069  000478' 0E00               	movlw	low(1000000.0000000000)
  2070  00047A' 0101               	movlb	1	; () banked
  2071  00047C' 0101               	movlb	1	; () banked
  2072  00047E' 6F00'              	movwf	(0+(?___fldiv+04h))&0ffh
  2073  000480' 0E24               	movlw	high(1000000.0000000000)
  2074  000482' 0101               	movlb	1	; () banked
  2075  000484' 6F00'              	movwf	(1+(?___fldiv+04h))&0ffh
  2076  000486' 0E74               	movlw	low highword(1000000.0000000000)
  2077  000488' 0101               	movlb	1	; () banked
  2078  00048A' 6F00'              	movwf	(2+(?___fldiv+04h))&0ffh
  2079  00048C' 0E49               	movlw	high highword(1000000.0000000000)
  2080  00048E' 0101               	movlb	1	; () banked
  2081  000490' 6F00'              	movwf	(3+(?___fldiv+04h))&0ffh
  2082  000492' C01B' F000'        	movff	(measure_inductance@Lin),(?___fldiv)
  2083  000496' C01C' F001'        	movff	(measure_inductance@Lin+1),(?___fldiv+1)
  2084  00049A' C01D' F002'        	movff	(measure_inductance@Lin+2),(?___fldiv+2)
  2085  00049E' C01E' F003'        	movff	(measure_inductance@Lin+3),(?___fldiv+3)
  2086  0004A2' EC00' F000'        	call	___fldiv	;wreg free
  2087  0004A6' C000' F01B'        	movff	0+?___fldiv,(measure_inductance@Lin)
  2088  0004AA' C001' F01C'        	movff	1+?___fldiv,(measure_inductance@Lin+1)
  2089  0004AE' C002' F01D'        	movff	2+?___fldiv,(measure_inductance@Lin+2)
  2090  0004B2' C003' F01E'        	movff	3+?___fldiv,(measure_inductance@Lin+3)
  2091                           	line	499
  2092                           ;LC-meter.c: 499: unit = 1;
  2093  0004B6' 0101               	movlb	1	; () banked
  2094  0004B8' 6F00'              	movwf	(??_measure_inductance+31+0)&0ffh
  2095  0004BA' 0E01               	movlw	low(01h)
  2096  0004BC' 0101               	movlb	1	; () banked
  2097  0004BE' 0101               	movlb	1	; () banked
  2098  0004C0' 6F00'              	movwf	((measure_inductance@unit))&0ffh
  2099  0004C2' 0101               	movlb	1	; () banked
  2100  0004C4' 5100'              	movf	(??_measure_inductance+31+0)&0ffh,w
  2101                           	line	500
  2102                           	
  2103  0004C6'                    l866:		; BSR set to: ?
  2104                           
  2105                           	line	501
  2106                           ;LC-meter.c: 500: }
  2107                           ;LC-meter.c: 501: } else {
  2108  0004C8' EF00' F000'        	goto	l867
  2109                           	
  2110  0004CC'                    l864:		; BSR set to: ?
  2111                           
  2112                           	line	502
  2113                           ;LC-meter.c: 502: Lin = Lin / 1e+03l;
  2114  0004CE' 0E00               	movlw	low(1000.0000000000000)
  2115  0004D0' 0101               	movlb	1	; () banked
  2116  0004D2' 0101               	movlb	1	; () banked
  2117  0004D4' 6F00'              	movwf	(0+(?___fldiv+04h))&0ffh
  2118  0004D6' 0E00               	movlw	high(1000.0000000000000)
  2119  0004D8' 0101               	movlb	1	; () banked
  2120  0004DA' 6F00'              	movwf	(1+(?___fldiv+04h))&0ffh
  2121  0004DC' 0E7A               	movlw	low highword(1000.0000000000000)
  2122  0004DE' 0101               	movlb	1	; () banked
  2123  0004E0' 6F00'              	movwf	(2+(?___fldiv+04h))&0ffh
  2124  0004E2' 0E44               	movlw	high highword(1000.0000000000000)
  2125  0004E4' 0101               	movlb	1	; () banked
  2126  0004E6' 6F00'              	movwf	(3+(?___fldiv+04h))&0ffh
  2127  0004E8' C01B' F000'        	movff	(measure_inductance@Lin),(?___fldiv)
  2128  0004EC' C01C' F001'        	movff	(measure_inductance@Lin+1),(?___fldiv+1)
  2129  0004F0' C01D' F002'        	movff	(measure_inductance@Lin+2),(?___fldiv+2)
  2130  0004F4' C01E' F003'        	movff	(measure_inductance@Lin+3),(?___fldiv+3)
  2131  0004F8' EC00' F000'        	call	___fldiv	;wreg free
  2132  0004FC' C000' F01B'        	movff	0+?___fldiv,(measure_inductance@Lin)
  2133  000500' C001' F01C'        	movff	1+?___fldiv,(measure_inductance@Lin+1)
  2134  000504' C002' F01D'        	movff	2+?___fldiv,(measure_inductance@Lin+2)
  2135  000508' C003' F01E'        	movff	3+?___fldiv,(measure_inductance@Lin+3)
  2136                           	line	503
  2137                           ;LC-meter.c: 503: unit = 2;
  2138  00050C' 0101               	movlb	1	; () banked
  2139  00050E' 6F00'              	movwf	(??_measure_inductance+31+0)&0ffh
  2140  000510' 0E02               	movlw	low(02h)
  2141  000512' 0101               	movlb	1	; () banked
  2142  000514' 0101               	movlb	1	; () banked
  2143  000516' 6F00'              	movwf	((measure_inductance@unit))&0ffh
  2144  000518' 0101               	movlb	1	; () banked
  2145  00051A' 5100'              	movf	(??_measure_inductance+31+0)&0ffh,w
  2146                           	line	504
  2147                           	
  2148  00051C'                    l867:		; BSR set to: ?
  2149                           
  2150                           	line	505
  2151                           ;LC-meter.c: 504: }
  2152                           ;LC-meter.c: 505: } else
  2153  00051E' EF00' F000'        	goto	l868
  2154                           	
  2155  000522'                    l863:		; BSR set to: ?
  2156                           
  2157                           	line	506
  2158                           ;LC-meter.c: 506: unit = 3;
  2159  000524' 0101               	movlb	1	; () banked
  2160  000526' 6F00'              	movwf	(??_measure_inductance+31+0)&0ffh
  2161  000528' 0E03               	movlw	low(03h)
  2162  00052A' 0101               	movlb	1	; () banked
  2163  00052C' 0101               	movlb	1	; () banked
  2164  00052E' 6F00'              	movwf	((measure_inductance@unit))&0ffh
  2165  000530' 0101               	movlb	1	; () banked
  2166  000532' 5100'              	movf	(??_measure_inductance+31+0)&0ffh,w
  2167                           	
  2168  000534'                    l868:		; BSR set to: ?
  2169                           
  2170                           	line	508
  2171                           ;LC-meter.c: 508: Lin = Lin * 100;
  2172  000536' 0E00               	movlw	low(100.00000000000000)
  2173  000538' 0101               	movlb	1	; () banked
  2174  00053A' 0101               	movlb	1	; () banked
  2175  00053C' 6F00'              	movwf	(0+(?___flmul+04h))&0ffh
  2176  00053E' 0E00               	movlw	high(100.00000000000000)
  2177  000540' 0101               	movlb	1	; () banked
  2178  000542' 6F00'              	movwf	(1+(?___flmul+04h))&0ffh
  2179  000544' 0EC8               	movlw	low highword(100.00000000000000)
  2180  000546' 0101               	movlb	1	; () banked
  2181  000548' 6F00'              	movwf	(2+(?___flmul+04h))&0ffh
  2182  00054A' 0E42               	movlw	high highword(100.00000000000000)
  2183  00054C' 0101               	movlb	1	; () banked
  2184  00054E' 6F00'              	movwf	(3+(?___flmul+04h))&0ffh
  2185  000550' C01B' F000'        	movff	(measure_inductance@Lin),(?___flmul)
  2186  000554' C01C' F001'        	movff	(measure_inductance@Lin+1),(?___flmul+1)
  2187  000558' C01D' F002'        	movff	(measure_inductance@Lin+2),(?___flmul+2)
  2188  00055C' C01E' F003'        	movff	(measure_inductance@Lin+3),(?___flmul+3)
  2189  000560' EC00' F000'        	call	___flmul	;wreg free
  2190  000564' C000' F01B'        	movff	0+?___flmul,(measure_inductance@Lin)
  2191  000568' C001' F01C'        	movff	1+?___flmul,(measure_inductance@Lin+1)
  2192  00056C' C002' F01D'        	movff	2+?___flmul,(measure_inductance@Lin+2)
  2193  000570' C003' F01E'        	movff	3+?___flmul,(measure_inductance@Lin+3)
  2194                           	line	509
  2195                           ;LC-meter.c: 509: var = (unsigned short int)Lin;
  2196  000574' C01B' F000'        	movff	(measure_inductance@Lin),(?___fltol)
  2197  000578' C01C' F001'        	movff	(measure_inductance@Lin+1),(?___fltol+1)
  2198  00057C' C01D' F002'        	movff	(measure_inductance@Lin+2),(?___fltol+2)
  2199  000580' C01E' F003'        	movff	(measure_inductance@Lin+3),(?___fltol+3)
  2200  000584' EC00' F000'        	call	___fltol	;wreg free
  2201  000588' C000' F011'        	movff	0+?___fltol,(measure_inductance@var)
  2202  00058C' C001' F012'        	movff	1+?___fltol,(measure_inductance@var+1)
  2203                           	line	511
  2204                           ;LC-meter.c: 511: print_reading(var);
  2205  000590' C011' F000'        	movff	(measure_inductance@var),(?_print_reading
                                 )
  2206  000594' C012' F001'        	movff	(measure_inductance@var+1),(?_print_readi
                                 ng+1)
  2207  000598' EC00' F000'        	call	_print_reading	;wreg free
  2208                           	line	512
  2209                           ;LC-meter.c: 512: print_unit(unit);
  2210  00059C' C010' F000'        	movff	(measure_inductance@unit),(?_print_unit)
  2211  0005A0' EC00' F000'        	call	_print_unit	;wreg free
  2212                           	line	513
  2213                           ;LC-meter.c: 513: }
  2214  0005A4'                    l861:
  2215                           			; BSR set to: ?
  2216                           
  2217  0005A4' 0012               	return
  2218  0005A6' FFFF               	dw	0FFFFh; errata NOP
  2219                           	opt stack 0
  2220                           GLOBAL __end_of_measure_inductance
  2221  0005A8'                    	__end_of_measure_inductance:
  2222                           	FNSIZE	_measure_inductance,32,0
  2223                           ; =============== function _measure_inductance e
                                 nds ============
  2224                           
  2225                           	signat	_measure_inductance,88
  2226                           	global	_timer2_init
  2227                           	global	??_timer2_init
  2228                           	global	?_timer2_init
  2229                           
  2230                           ; *************** function _timer2_init ********
                                 *********
  2231                           ; Defined at:
  2232                           ;		line 81 in file "../../../lib/timer.c"
  2233                           ; Parameters:
  2234                           ;		ps_mode        size:   1offs:   0	type: unsig
                                 ned char 
  2235                           ; Auto variables:
  2236                           ;		ps          	       	type: unsigned char 
  2237                           ;		postscaler  	       	type: unsigned char 
  2238                           ; Return value:
  2239                           ;		type: void 
  2240                           ;		size: 0
  2241                           ; Registers used:
  2242                           ;		wreg, status,2, status,0
  2243                           ; Tracked objects:
  2244                           ;		On entry : 0/0
  2245                           ;		On exit  : 0/0
  2246                           ;		Unchanged: 0/0
  2247                           ; Data sizes:
  2248                           ;		Autos:    2
  2249                           ;		Params:   1
  2250                           ;		Temp:     1
  2251                           ;		Total:    4
  2252                           ; This function calls:
  2253                           ;		Nothing
  2254                           ; This function is called by:
  2255                           ;		_main
  2256                           ; This function uses a non-reentrant model
  2257                           ; 
  2258                                   psect   text6,class=CODE,space=0,reloc=2
  2259                           
  2260                           	opt lm
  2261                           	file	"../../../lib/timer.c"
  2262                           	line	81
  2263  000000                     	__size_of_timer2_init	equ	__end_of_timer2_init-
                                 _timer2_init
  2264                           ;timer.c: 80: void
  2265                           ;timer.c: 81: timer2_init(unsigned char ps_mode)
                                  {
  2266                           	
  2267  000000'                    _timer2_init:		; BSR set to: ?
  2268                           
  2269                           	opt stack 29
  2270  000000' FFFF               	dw	0FFFFh
  2271                           	line	82
  2272  000002' 0101               	movlb	1	; () banked
  2273  000004' 0101               	movlb	1	; () banked
  2274  000006' 5100'              	movf	((timer2_init@ps_mode))&0ffh,w
  2275  000008' 0B0F               	andlw	low(0Fh)
  2276  00000A' 0101               	movlb	1	; () banked
  2277  00000C' 0101               	movlb	1	; () banked
  2278  00000E' 6F00'              	movwf	((timer2_init@ps))&0ffh
  2279                           	line	83
  2280                           ;timer.c: 83: unsigned char postscaler = 0;
  2281  000010' 0101               	movlb	1	; () banked
  2282  000012' 6F00'              	movwf	(??_timer2_init+2+0)&0ffh
  2283  000014' 0E00               	movlw	low(0)
  2284  000016' 0101               	movlb	1	; () banked
  2285  000018' 0101               	movlb	1	; () banked
  2286  00001A' 6F00'              	movwf	((timer2_init@postscaler))&0ffh
  2287  00001C' 0101               	movlb	1	; () banked
  2288  00001E' 5100'              	movf	(??_timer2_init+2+0)&0ffh,w
  2289                           	line	86
  2290                           ;timer.c: 86: TOUTPS0 = postscaler & 1;
  2291  000020' 0101               	movlb	1	; () banked
  2292  000022' 0101               	movlb	1	; () banked
  2293  000024' A100'              	btfss	((timer2_init@postscaler))&0ffh,0
  2294  000026' D001               	bra	u1335
  2295  000028' 86CA               	bsf	c:(32339/8),(32339)&7	;volatile
  2296  00002A'                    	u1335:
  2297  00002A' 0101               	movlb	1	; () banked
  2298  00002C' 0101               	movlb	1	; () banked
  2299  00002E' B100'              	btfsc	((timer2_init@postscaler))&0ffh,0
  2300  000030' D001               	bra	u1336
  2301  000032' 96CA               	bcf	c:(32339/8),(32339)&7	;volatile
  2302  000034'                    	u1336:
  2303                           	line	87
  2304                           ;timer.c: 87: TOUTPS1 = (postscaler >> 1) & 1;
  2305  000034' C001' F002'        	movff	(timer2_init@postscaler),??_timer2_init+2
                                 +0
  2306  000038' 90D8               	bcf	status,0
  2307  00003A' 0101               	movlb	1	; () banked
  2308  00003C' 3300'              	rrcf	(??_timer2_init+2+0)&0ffh
  2309                           
  2310  00003E' 0101               	movlb	1	; () banked
  2311  000040' 3100'              	rrcf	(??_timer2_init+2+0)&0ffh,w
  2312  000042' A0D8               	btfss	status,0
  2313  000044' D001               	bra	u1345
  2314  000046' 88CA               	bsf	c:(32340/8),(32340)&7	;volatile
  2315  000048'                    	u1345:
  2316  000048' B0D8               	btfsc	status,0
  2317  00004A' D001               	bra	u1346
  2318  00004C' 98CA               	bcf	c:(32340/8),(32340)&7	;volatile
  2319  00004E'                    	u1346:
  2320                           	line	88
  2321                           ;timer.c: 88: TOUTPS2 = (postscaler >> 2) & 1;
  2322  00004E' C001' F002'        	movff	(timer2_init@postscaler),??_timer2_init+2
                                 +0
  2323  000052' 90D8               	bcf	status,0
  2324  000054' 0101               	movlb	1	; () banked
  2325  000056' 3300'              	rrcf	(??_timer2_init+2+0)&0ffh
  2326  000058' 90D8               	bcf	status,0
  2327  00005A' 0101               	movlb	1	; () banked
  2328  00005C' 3300'              	rrcf	(??_timer2_init+2+0)&0ffh
  2329                           
  2330  00005E' 0101               	movlb	1	; () banked
  2331  000060' 3100'              	rrcf	(??_timer2_init+2+0)&0ffh,w
  2332  000062' A0D8               	btfss	status,0
  2333  000064' D001               	bra	u1355
  2334  000066' 8ACA               	bsf	c:(32341/8),(32341)&7	;volatile
  2335  000068'                    	u1355:
  2336  000068' B0D8               	btfsc	status,0
  2337  00006A' D001               	bra	u1356
  2338  00006C' 9ACA               	bcf	c:(32341/8),(32341)&7	;volatile
  2339  00006E'                    	u1356:
  2340                           	line	90
  2341                           ;timer.c: 90: T2CKPS0 = (ps >> 1) & 1;
  2342  00006E' C000' F002'        	movff	(timer2_init@ps),??_timer2_init+2+0
  2343  000072' 90D8               	bcf	status,0
  2344  000074' 0101               	movlb	1	; () banked
  2345  000076' 3300'              	rrcf	(??_timer2_init+2+0)&0ffh
  2346                           
  2347  000078' 0101               	movlb	1	; () banked
  2348  00007A' 3100'              	rrcf	(??_timer2_init+2+0)&0ffh,w
  2349  00007C' A0D8               	btfss	status,0
  2350  00007E' D001               	bra	u1365
  2351  000080' 80CA               	bsf	c:(32336/8),(32336)&7	;volatile
  2352  000082'                    	u1365:
  2353  000082' B0D8               	btfsc	status,0
  2354  000084' D001               	bra	u1366
  2355  000086' 90CA               	bcf	c:(32336/8),(32336)&7	;volatile
  2356  000088'                    	u1366:
  2357                           	line	91
  2358                           ;timer.c: 91: T2CKPS1 = (ps >> 2) & 1;
  2359  000088' C000' F002'        	movff	(timer2_init@ps),??_timer2_init+2+0
  2360  00008C' 90D8               	bcf	status,0
  2361  00008E' 0101               	movlb	1	; () banked
  2362  000090' 3300'              	rrcf	(??_timer2_init+2+0)&0ffh
  2363  000092' 90D8               	bcf	status,0
  2364  000094' 0101               	movlb	1	; () banked
  2365  000096' 3300'              	rrcf	(??_timer2_init+2+0)&0ffh
  2366                           
  2367  000098' 0101               	movlb	1	; () banked
  2368  00009A' 3100'              	rrcf	(??_timer2_init+2+0)&0ffh,w
  2369  00009C' A0D8               	btfss	status,0
  2370  00009E' D001               	bra	u1375
  2371  0000A0' 82CA               	bsf	c:(32337/8),(32337)&7	;volatile
  2372  0000A2'                    	u1375:
  2373  0000A2' B0D8               	btfsc	status,0
  2374  0000A4' D001               	bra	u1376
  2375  0000A6' 92CA               	bcf	c:(32337/8),(32337)&7	;volatile
  2376  0000A8'                    	u1376:
  2377                           	line	93
  2378                           ;timer.c: 93: TMR2 = 0;
  2379  0000A8' 0E00               	movlw	low(0)
  2380  0000AA' 6ECC               	movwf	((c:4044)),c	;volatile
  2381                           	line	95
  2382                           ;timer.c: 95: TMR2ON = 1;
  2383  0000AC' 84CA               	bsf	c:(32338/8),(32338)&7	;volatile
  2384                           	line	97
  2385                           ;timer.c: 97: TMR2IF = 0;
  2386  0000AE' 929E               	bcf	c:(31985/8),(31985)&7	;volatile
  2387                           	line	98
  2388                           ;timer.c: 98: TMR2IE = !!(ps_mode & 0x80);
  2389  0000B0' 0101               	movlb	1	; () banked
  2390                           	
  2391  0000B2' 0101               	movlb	1	; () banked
  2392  0000B4' BF00'              	btfsc	((timer2_init@ps_mode))&0ffh,(7)&7
  2393  0000B6' EF00' F000'        	goto	u1381
  2394  0000BA' EF00' F000'        	goto	u1380
  2395  0000BE'                    u1381:
  2396  0000C0' 829D               	bsf	c:(31977/8),(31977)&7	;volatile
  2397  0000C2' EF00' F000'        	goto	u1395
  2398  0000C6'                    u1380:
  2399  0000C8' 929D               	bcf	c:(31977/8),(31977)&7	;volatile
  2400  0000CA'                    u1395:
  2401                           	line	99
  2402                           ;timer.c: 99: }
  2403  0000CC'                    l498:
  2404                           			; BSR set to: ?
  2405                           
  2406  0000CC' 0012               	return
  2407  0000CE' FFFF               	dw	0FFFFh; errata NOP
  2408                           	opt stack 0
  2409                           GLOBAL __end_of_timer2_init
  2410  0000D0'                    	__end_of_timer2_init:
  2411                           	FNSIZE	_timer2_init,3,1
  2412                           ; =============== function _timer2_init ends ===
                                 =========
  2413                           
  2414                           	signat	_timer2_init,4216
  2415                           	global	_format_xint32
  2416                           	global	??_format_xint32
  2417                           	global	?_format_xint32
  2418                           
  2419                           ; *************** function _format_xint32 ******
                                 ***********
  2420                           ; Defined at:
  2421                           ;		line 48 in file "../../../lib/format.c"
  2422                           ; Parameters:
  2423                           ;		x              size:   4offs:   0	type: unsig
                                 ned long 
  2424                           ; Auto variables:
  2425                           ;		None
  2426                           ; Return value:
  2427                           ;		type: void 
  2428                           ;		size: 0
  2429                           ; Registers used:
  2430                           ;		wreg, fsr0l, fsr0h, status,2, status,0, pclat
                                 , tosl, cstack
  2431                           ; Tracked objects:
  2432                           ;		On entry : 0/0
  2433                           ;		On exit  : 0/0
  2434                           ;		Unchanged: 0/0
  2435                           ; Data sizes:
  2436                           ;		Autos:    0
  2437                           ;		Params:   4
  2438                           ;		Temp:     2
  2439                           ;		Total:    6
  2440                           ; This function calls:
  2441                           ;		_format_number
  2442                           ;		_output_putch
  2443                           ;		_ser_putch
  2444                           ;		_format_putchar
  2445                           ; This function is called by:
  2446                           ;		_measure_capacitance
  2447                           ; This function uses a non-reentrant model
  2448                           ; 
  2449                                   psect   text7,class=CODE,space=0,reloc=2
  2450                           
  2451                           	opt lm
  2452                           	file	"../../../lib/format.c"
  2453                           	line	48
  2454  000000                     	__size_of_format_xint32	equ	__end_of_format_xin
                                 t32-_format_xint32
  2455                           ;format.c: 47: void
  2456                           ;format.c: 48: format_xint32( unsigned long int 
                                 x) {
  2457                           	
  2458  000000'                    _format_xint32:		; BSR set to: ?
  2459                           
  2460                           	opt stack 28
  2461  000000' FFFF               	dw	0FFFFh
  2462                           	line	49
  2463  000002' 0101               	movlb	1	; () banked
  2464  000004' 6F00'              	movwf	(??_format_xint32+0+0)&0ffh
  2465  000006' 0E30               	movlw	low(030h)
  2466  000008' 0101               	movlb	1	; () banked
  2467  00000A' 0101               	movlb	1	; () banked
  2468  00000C' 6F00'              	movwf	((?_output_putch))&0ffh
  2469  00000E' 0101               	movlb	1	; () banked
  2470  000010' 5100'              	movf	(??_format_xint32+0+0)&0ffh,w
  2471  000012' D802               	call	u3098
  2472  000014' EF00' F000'        	goto	u3099
  2473  000018'                    u3098:
  2474  00001A' 0005               	push
  2475                           	
  2476  00001C' 6EFA               	movwf	pclath
  2477  00001E' 504C               	movf	((c:76)),c,w
  2478  000020' 6EFD               	movwf	tosl
  2479  000022' 504D               	movf	((c:76+1)),c,w
  2480  000024' 6EFE               	movwf	tosl+1
  2481  000026' 50F8               	movf	tblptru,w
  2482  000028' 6EFF               	movwf	tosl+2
  2483  00002A' 50FA               	movf	pclath,w
  2484                           	
  2485  00002C' 0012               	return
  2486  00002E' FFFF               		dw	0FFFFh; errata NOP
  2487  000030'                    u3099:
  2488                           	line	50
  2489                           ;format.c: 50: putchar_ptr('x');
  2490  000032' 0101               	movlb	1	; () banked
  2491  000034' 6F00'              	movwf	(??_format_xint32+0+0)&0ffh
  2492  000036' 0E78               	movlw	low(078h)
  2493  000038' 0101               	movlb	1	; () banked
  2494  00003A' 0101               	movlb	1	; () banked
  2495  00003C' 6F00'              	movwf	((?_output_putch))&0ffh
  2496  00003E' 0101               	movlb	1	; () banked
  2497  000040' 5100'              	movf	(??_format_xint32+0+0)&0ffh,w
  2498  000042' D802               	call	u3108
  2499  000044' EF00' F000'        	goto	u3109
  2500  000048'                    u3108:
  2501  00004A' 0005               	push
  2502                           	
  2503  00004C' 6EFA               	movwf	pclath
  2504  00004E' 504C               	movf	((c:76)),c,w
  2505  000050' 6EFD               	movwf	tosl
  2506  000052' 504D               	movf	((c:76+1)),c,w
  2507  000054' 6EFE               	movwf	tosl+1
  2508  000056' 50F8               	movf	tblptru,w
  2509  000058' 6EFF               	movwf	tosl+2
  2510  00005A' 50FA               	movf	pclath,w
  2511                           	
  2512  00005C' 0012               	return
  2513  00005E' FFFF               		dw	0FFFFh; errata NOP
  2514  000060'                    u3109:
  2515                           	line	51
  2516                           ;format.c: 51: format_number((unsigned short int
                                 )(x >> 16), 16, -4);
  2517  000062' 0101               	movlb	1	; () banked
  2518  000064' 6F00'              	movwf	(??_format_xint32+0+0)&0ffh
  2519  000066' 0EFC               	movlw	low(-4)
  2520  000068' 0101               	movlb	1	; () banked
  2521  00006A' 0101               	movlb	1	; () banked
  2522  00006C' 6F00'              	movwf	(0+(?_format_number+03h))&0ffh
  2523  00006E' 0101               	movlb	1	; () banked
  2524  000070' 5100'              	movf	(??_format_xint32+0+0)&0ffh,w
  2525  000072' 0101               	movlb	1	; () banked
  2526  000074' 6F00'              	movwf	(??_format_xint32+1+0)&0ffh
  2527  000076' 0E10               	movlw	low(010h)
  2528  000078' 0101               	movlb	1	; () banked
  2529  00007A' 0101               	movlb	1	; () banked
  2530  00007C' 6F00'              	movwf	(0+(?_format_number+02h))&0ffh
  2531  00007E' 0101               	movlb	1	; () banked
  2532  000080' 5100'              	movf	(??_format_xint32+1+0)&0ffh,w
  2533  000082' C002' F000'        	movff	0+2+(format_xint32@x),(?_format_number)
  2534  000086' C003' F001'        	movff	1+2+(format_xint32@x),(?_format_number+1)
  2535  00008A' EC00' F000'        	call	_format_number	;wreg free
  2536                           	line	52
  2537                           ;format.c: 52: format_number((unsigned short int
                                 )(x & 0xffff), 16, -4);
  2538  00008E' 0101               	movlb	1	; () banked
  2539  000090' 6F00'              	movwf	(??_format_xint32+0+0)&0ffh
  2540  000092' 0EFC               	movlw	low(-4)
  2541  000094' 0101               	movlb	1	; () banked
  2542  000096' 0101               	movlb	1	; () banked
  2543  000098' 6F00'              	movwf	(0+(?_format_number+03h))&0ffh
  2544  00009A' 0101               	movlb	1	; () banked
  2545  00009C' 5100'              	movf	(??_format_xint32+0+0)&0ffh,w
  2546  00009E' 0101               	movlb	1	; () banked
  2547  0000A0' 6F00'              	movwf	(??_format_xint32+1+0)&0ffh
  2548  0000A2' 0E10               	movlw	low(010h)
  2549  0000A4' 0101               	movlb	1	; () banked
  2550  0000A6' 0101               	movlb	1	; () banked
  2551  0000A8' 6F00'              	movwf	(0+(?_format_number+02h))&0ffh
  2552  0000AA' 0101               	movlb	1	; () banked
  2553  0000AC' 5100'              	movf	(??_format_xint32+1+0)&0ffh,w
  2554  0000AE' C000' F000'        	movff	(format_xint32@x),(?_format_number)
  2555  0000B2' C001' F001'        	movff	(format_xint32@x+1),(?_format_number+1)
  2556  0000B6' EC00' F000'        	call	_format_number	;wreg free
  2557                           	line	53
  2558                           ;format.c: 53: }
  2559  0000BA'                    l663:
  2560                           			; BSR set to: ?
  2561                           
  2562  0000BA' 0012               	return
  2563  0000BC' FFFF               	dw	0FFFFh; errata NOP
  2564                           	opt stack 0
  2565                           GLOBAL __end_of_format_xint32
  2566  0000BE'                    	__end_of_format_xint32:
  2567                           	FNSIZE	_format_xint32,2,4
  2568                           ; =============== function _format_xint32 ends =
                                 ===========
  2569                           
  2570                           	signat	_format_xint32,4216
  2571                           	global	_format_double
  2572                           	global	??_format_double
  2573                           	global	?_format_double
  2574                           
  2575                           ; *************** function _format_double ******
                                 ***********
  2576                           ; Defined at:
  2577                           ;		line 74 in file "../../../lib/format.c"
  2578                           ; Parameters:
  2579                           ;		num            size:   4offs:   0	type: void 
  2580                           ; Auto variables:
  2581                           ;		digit       	       	type: short 
  2582                           ;		m           	       	type: short 
  2583                           ;		weight      	       	type: short 
  2584                           ; Return value:
  2585                           ;		type: void 
  2586                           ;		size: 0
  2587                           ; Registers used:
  2588                           ;		wreg, fsr0l, fsr0h, status,2, status,0, pclat
                                 , tosl, tblptrl, tblptrh, tblptru, tablat, cstac
                                 k
  2589                           ; Tracked objects:
  2590                           ;		On entry : 0/0
  2591                           ;		On exit  : 0/0
  2592                           ;		Unchanged: 0/0
  2593                           ; Data sizes:
  2594                           ;		Autos:   16
  2595                           ;		Params:   4
  2596                           ;		Temp:     1
  2597                           ;		Total:   21
  2598                           ; This function calls:
  2599                           ;		_log10
  2600                           ;		___fltol
  2601                           ;		___awtofl
  2602                           ;		_pow
  2603                           ;		___fldiv
  2604                           ;		_floor
  2605                           ;		___flmul
  2606                           ;		___asflsub
  2607                           ;		___flge
  2608                           ;		_output_putch
  2609                           ;		_ser_putch
  2610                           ;		_format_putchar
  2611                           ; This function is called by:
  2612                           ;		_measure_capacitance
  2613                           ; This function uses a non-reentrant model
  2614                           ; 
  2615                                   psect   text8,class=CODE,space=0,reloc=2
  2616                           
  2617                           	opt lm
  2618                           	file	"../../../lib/format.c"
  2619                           	line	74
  2620  000000                     	__size_of_format_double	equ	__end_of_format_dou
                                 ble-_format_double
  2621                           ;format.c: 73: void
  2622                           ;format.c: 74: format_double(double num) {
  2623                           	
  2624  000000'                    _format_double:		; BSR set to: ?
  2625                           
  2626                           	opt stack 28
  2627  000000' FFFF               	dw	0FFFFh
  2628                           	line	75
  2629  000002' C000' F000'        	movff	(format_double@num),(?_log10)
  2630  000006' C001' F001'        	movff	(format_double@num+1),(?_log10+1)
  2631  00000A' C002' F002'        	movff	(format_double@num+2),(?_log10+2)
  2632  00000E' C003' F003'        	movff	(format_double@num+3),(?_log10+3)
  2633  000012' EC00' F000'        	call	_log10	;wreg free
  2634  000016' C000' F000'        	movff	0+?_log10,(?___fltol)
  2635  00001A' C001' F001'        	movff	1+?_log10,(?___fltol+1)
  2636  00001E' C002' F002'        	movff	2+?_log10,(?___fltol+2)
  2637  000022' C003' F003'        	movff	3+?_log10,(?___fltol+3)
  2638  000026' EC00' F000'        	call	___fltol	;wreg free
  2639  00002A' C000' F00A'        	movff	0+?___fltol,(format_double@m)
  2640  00002E' C001' F00B'        	movff	1+?___fltol,(format_double@m+1)
  2641                           	line	79
  2642                           ;format.c: 76: short digit;
  2643                           ;format.c: 79: while(num > 0 + 1.19209290e-07) {
  2644  000032' EF00' F000'        	goto	l670
  2645                           	
  2646  000036'                    l671:		; BSR set to: ?
  2647                           
  2648                           	line	80
  2649                           ;format.c: 80: double weight = pow(10.0l, m);
  2650  000038' C00A' F000'        	movff	(format_double@m),(?___awtofl)
  2651  00003C' C00B' F001'        	movff	(format_double@m+1),(?___awtofl+1)
  2652  000040' EC00' F000'        	call	___awtofl	;wreg free
  2653  000044' C000' F004'        	movff	0+?___awtofl,0+(?_pow+04h)
  2654  000048' C001' F005'        	movff	1+?___awtofl,1+(?_pow+04h)
  2655  00004C' C002' F006'        	movff	2+?___awtofl,2+(?_pow+04h)
  2656  000050' C003' F007'        	movff	3+?___awtofl,3+(?_pow+04h)
  2657  000054' 0E00               	movlw	low(10.000000000000000)
  2658  000056' 0101               	movlb	1	; () banked
  2659  000058' 0101               	movlb	1	; () banked
  2660  00005A' 6F00'              	movwf	((?_pow))&0ffh
  2661  00005C' 0E00               	movlw	high(10.000000000000000)
  2662  00005E' 0101               	movlb	1	; () banked
  2663  000060' 6F00'              	movwf	((?_pow+1))&0ffh
  2664  000062' 0E20               	movlw	low highword(10.000000000000000)
  2665  000064' 0101               	movlb	1	; () banked
  2666  000066' 6F00'              	movwf	((?_pow+2))&0ffh
  2667  000068' 0E41               	movlw	high highword(10.000000000000000)
  2668  00006A' 0101               	movlb	1	; () banked
  2669  00006C' 6F00'              	movwf	((?_pow+3))&0ffh
  2670  00006E' EC00' F000'        	call	_pow	;wreg free
  2671  000072' C000' F00C'        	movff	0+?_pow,(format_double@weight)
  2672  000076' C001' F00D'        	movff	1+?_pow,(format_double@weight+1)
  2673  00007A' C002' F00E'        	movff	2+?_pow,(format_double@weight+2)
  2674  00007E' C003' F00F'        	movff	3+?_pow,(format_double@weight+3)
  2675                           	line	81
  2676                           ;format.c: 81: digit = (short)floor(num / weight
                                 );
  2677  000082' C00C' F004'        	movff	(format_double@weight),0+(?___fldiv+04h)
  2678  000086' C00D' F005'        	movff	(format_double@weight+1),1+(?___fldiv+04h
                                 )
  2679  00008A' C00E' F006'        	movff	(format_double@weight+2),2+(?___fldiv+04h
                                 )
  2680  00008E' C00F' F007'        	movff	(format_double@weight+3),3+(?___fldiv+04h
                                 )
  2681  000092' C000' F000'        	movff	(format_double@num),(?___fldiv)
  2682  000096' C001' F001'        	movff	(format_double@num+1),(?___fldiv+1)
  2683  00009A' C002' F002'        	movff	(format_double@num+2),(?___fldiv+2)
  2684  00009E' C003' F003'        	movff	(format_double@num+3),(?___fldiv+3)
  2685  0000A2' EC00' F000'        	call	___fldiv	;wreg free
  2686  0000A6' C000' F000'        	movff	0+?___fldiv,(?_floor)
  2687  0000AA' C001' F001'        	movff	1+?___fldiv,(?_floor+1)
  2688  0000AE' C002' F002'        	movff	2+?___fldiv,(?_floor+2)
  2689  0000B2' C003' F003'        	movff	3+?___fldiv,(?_floor+3)
  2690  0000B6' EC00' F000'        	call	_floor	;wreg free
  2691  0000BA' C000' F000'        	movff	0+?_floor,(?___fltol)
  2692  0000BE' C001' F001'        	movff	1+?_floor,(?___fltol+1)
  2693  0000C2' C002' F002'        	movff	2+?_floor,(?___fltol+2)
  2694  0000C6' C003' F003'        	movff	3+?_floor,(?___fltol+3)
  2695  0000CA' EC00' F000'        	call	___fltol	;wreg free
  2696  0000CE' C000' F008'        	movff	0+?___fltol,(format_double@digit)
  2697  0000D2' C001' F009'        	movff	1+?___fltol,(format_double@digit+1)
  2698                           	line	82
  2699                           ;format.c: 82: num -= (digit * weight);
  2700  0000D6' C008' F000'        	movff	(format_double@digit),(?___awtofl)
  2701  0000DA' C009' F001'        	movff	(format_double@digit+1),(?___awtofl+1)
  2702  0000DE' EC00' F000'        	call	___awtofl	;wreg free
  2703  0000E2' C000' F000'        	movff	0+?___awtofl,(_format_double$1332)
  2704  0000E6' C001' F001'        	movff	1+?___awtofl,(_format_double$1332+1)
  2705  0000EA' C002' F002'        	movff	2+?___awtofl,(_format_double$1332+2)
  2706  0000EE' C003' F003'        	movff	3+?___awtofl,(_format_double$1332+3)
  2707  0000F2' C000' F000'        	movff	(_format_double$1332),(?___flmul)
  2708  0000F6' C001' F001'        	movff	(_format_double$1332+1),(?___flmul+1)
  2709  0000FA' C002' F002'        	movff	(_format_double$1332+2),(?___flmul+2)
  2710  0000FE' C003' F003'        	movff	(_format_double$1332+3),(?___flmul+3)
  2711  000102' C00C' F004'        	movff	(format_double@weight),0+(?___flmul+04h)
  2712  000106' C00D' F005'        	movff	(format_double@weight+1),1+(?___flmul+04h
                                 )
  2713  00010A' C00E' F006'        	movff	(format_double@weight+2),2+(?___flmul+04h
                                 )
  2714  00010E' C00F' F007'        	movff	(format_double@weight+3),3+(?___flmul+04h
                                 )
  2715  000112' EC00' F000'        	call	___flmul	;wreg free
  2716  000116' C000' F004'        	movff	0+?___flmul,(_format_double$1333)
  2717  00011A' C001' F005'        	movff	1+?___flmul,(_format_double$1333+1)
  2718  00011E' C002' F006'        	movff	2+?___flmul,(_format_double$1333+2)
  2719  000122' C003' F007'        	movff	3+?___flmul,(_format_double$1333+3)
  2720  000126' C004' F002'        	movff	(_format_double$1333),0+(?___asflsub+02h)
  2721  00012A' C005' F003'        	movff	(_format_double$1333+1),1+(?___asflsub+02
                                 h)
  2722  00012E' C006' F004'        	movff	(_format_double$1333+2),2+(?___asflsub+02
                                 h)
  2723  000132' C007' F005'        	movff	(_format_double$1333+3),3+(?___asflsub+02
                                 h)
  2724  000136' 0101               	movlb	1	; () banked
  2725  000138' 0E00'              	movlw	low(format_double@num)
  2726  00013A' 0101               	movlb	1	; () banked
  2727  00013C' 0101               	movlb	1	; () banked
  2728  00013E' 6F00'              	movwf	((?___asflsub))&0ffh
  2729  000140' 0101               	movlb	1	; () banked
  2730  000142' 0E00'              	movlw	high(format_double@num)
  2731  000144' 0101               	movlb	1	; () banked
  2732  000146' 6F00'              	movwf	((?___asflsub+1))&0ffh
  2733  000148' EC00' F000'        	call	___asflsub	;wreg free
  2734                           	line	83
  2735                           ;format.c: 83: putchar_ptr((char)('0' + digit));
  2736  00014C' 0101               	movlb	1	; () banked
  2737  00014E' 0101               	movlb	1	; () banked
  2738  000150' 5100'              	movf	((format_double@digit))&0ffh,w
  2739  000152' 0F30               	addlw	low(030h)
  2740  000154' 0101               	movlb	1	; () banked
  2741  000156' 0101               	movlb	1	; () banked
  2742  000158' 6F00'              	movwf	((?_output_putch))&0ffh
  2743  00015A' D802               	call	u3058
  2744  00015C' EF00' F000'        	goto	u3059
  2745  000160'                    u3058:
  2746  000162' 0005               	push
  2747                           	
  2748  000164' 6EFA               	movwf	pclath
  2749  000166' 504C               	movf	((c:76)),c,w
  2750  000168' 6EFD               	movwf	tosl
  2751  00016A' 504D               	movf	((c:76+1)),c,w
  2752  00016C' 6EFE               	movwf	tosl+1
  2753  00016E' 50F8               	movf	tblptru,w
  2754  000170' 6EFF               	movwf	tosl+2
  2755  000172' 50FA               	movf	pclath,w
  2756                           	
  2757  000174' 0012               	return
  2758  000176' FFFF               		dw	0FFFFh; errata NOP
  2759  000178'                    u3059:
  2760                           	line	84
  2761                           ;format.c: 84: if(m == 0)
  2762  00017A' 0101               	movlb	1	; () banked
  2763  00017C' 0101               	movlb	1	; () banked
  2764  00017E' 5100'              	movf	((format_double@m+1))&0ffh,w
  2765  000180' 1100'              	iorwf ((format_double@m))&0ffh,w
  2766                           
  2767  000182' A4D8               	btfss	status,2
  2768  000184' EF00' F000'        	goto	u3061
  2769  000188' EF00' F000'        	goto	u3060
  2770  00018C'                    u3061:
  2771  00018E' EF00' F000'        	goto	l673
  2772  000192'                    u3060:
  2773                           	line	85
  2774                           ;format.c: 85: putchar_ptr('.');
  2775  000194' 0101               	movlb	1	; () banked
  2776  000196' 6F00'              	movwf	(??_format_double+16+0)&0ffh
  2777  000198' 0E2E               	movlw	low(02Eh)
  2778  00019A' 0101               	movlb	1	; () banked
  2779  00019C' 0101               	movlb	1	; () banked
  2780  00019E' 6F00'              	movwf	((?_output_putch))&0ffh
  2781  0001A0' 0101               	movlb	1	; () banked
  2782  0001A2' 5100'              	movf	(??_format_double+16+0)&0ffh,w
  2783  0001A4' D802               	call	u3078
  2784  0001A6' EF00' F000'        	goto	u3079
  2785  0001AA'                    u3078:
  2786  0001AC' 0005               	push
  2787                           	
  2788  0001AE' 6EFA               	movwf	pclath
  2789  0001B0' 504C               	movf	((c:76)),c,w
  2790  0001B2' 6EFD               	movwf	tosl
  2791  0001B4' 504D               	movf	((c:76+1)),c,w
  2792  0001B6' 6EFE               	movwf	tosl+1
  2793  0001B8' 50F8               	movf	tblptru,w
  2794  0001BA' 6EFF               	movwf	tosl+2
  2795  0001BC' 50FA               	movf	pclath,w
  2796                           	
  2797  0001BE' 0012               	return
  2798  0001C0' FFFF               		dw	0FFFFh; errata NOP
  2799  0001C2'                    u3079:
  2800                           	
  2801  0001C2'                    l673:		; BSR set to: ?
  2802                           
  2803                           	line	86
  2804                           ;format.c: 86: m--;
  2805  0001C4' 0101               	movlb	1	; () banked
  2806  0001C6' 0101               	movlb	1	; () banked
  2807  0001C8' 0700'              	decf	((format_double@m))&0ffh
  2808  0001CA' A0D8               	btfss	status,0
  2809  0001CC' 0700'              	decf	((format_double@m+1))&0ffh
  2810                           	line	87
  2811                           	
  2812  0001CE'                    l670:		; BSR set to: ?
  2813                           
  2814                           	line	79
  2815  0001D0' C000' F004'        	movff	(format_double@num),0+(?___flge+04h)
  2816  0001D4' C001' F005'        	movff	(format_double@num+1),1+(?___flge+04h)
  2817  0001D8' C002' F006'        	movff	(format_double@num+2),2+(?___flge+04h)
  2818  0001DC' C003' F007'        	movff	(format_double@num+3),3+(?___flge+04h)
  2819  0001E0' 0E00               	movlw	low(1.1920929000000001e-07)
  2820  0001E2' 0101               	movlb	1	; () banked
  2821  0001E4' 0101               	movlb	1	; () banked
  2822  0001E6' 6F00'              	movwf	((?___flge))&0ffh
  2823  0001E8' 0E00               	movlw	high(1.1920929000000001e-07)
  2824  0001EA' 0101               	movlb	1	; () banked
  2825  0001EC' 6F00'              	movwf	((?___flge+1))&0ffh
  2826  0001EE' 0E00               	movlw	low highword(1.1920929000000001e-07)
  2827  0001F0' 0101               	movlb	1	; () banked
  2828  0001F2' 6F00'              	movwf	((?___flge+2))&0ffh
  2829  0001F4' 0E34               	movlw	high highword(1.1920929000000001e-07)
  2830  0001F6' 0101               	movlb	1	; () banked
  2831  0001F8' 6F00'              	movwf	((?___flge+3))&0ffh
  2832  0001FA' EC00' F000'        	call	___flge	;wreg free
  2833  0001FE' A0D8               	btfss	status,0
  2834  000200' EF00' F000'        	goto	u3081
  2835  000204' EF00' F000'        	goto	u3080
  2836  000208'                    u3081:
  2837  00020A' EF00' F000'        	goto	l671
  2838  00020E'                    u3080:
  2839                           	
  2840  000210'                    l672:		; BSR set to: ?
  2841                           
  2842                           	line	88
  2843                           ;format.c: 87: }
  2844                           ;format.c: 88: }
  2845  000210'                    l669:
  2846                           			; BSR set to: ?
  2847                           
  2848  000210' 0012               	return
  2849  000212' FFFF               	dw	0FFFFh; errata NOP
  2850                           	opt stack 0
  2851                           GLOBAL __end_of_format_double
  2852  000214'                    	__end_of_format_double:
  2853                           	FNSIZE	_format_double,17,4
  2854                           ; =============== function _format_double ends =
                                 ===========
  2855                           
  2856                           	signat	_format_double,4216
  2857                           	global	_print_unit
  2858                           	global	??_print_unit
  2859                           	global	?_print_unit
  2860                           
  2861                           ; *************** function _print_unit *********
                                 ********
  2862                           ; Defined at:
  2863                           ;		line 408 in file "../../../src/print.c"
  2864                           ; Parameters:
  2865                           ;		unit           size:   1offs:   0	type: unsig
                                 ned char 
  2866                           ; Auto variables:
  2867                           ;		None
  2868                           ; Return value:
  2869                           ;		type: void 
  2870                           ;		size: 0
  2871                           ; Registers used:
  2872                           ;		None
  2873                           ; Tracked objects:
  2874                           ;		On entry : 0/0
  2875                           ;		On exit  : 0/0
  2876                           ;		Unchanged: 0/0
  2877                           ; Data sizes:
  2878                           ;		Autos:    0
  2879                           ;		Params:   1
  2880                           ;		Temp:     0
  2881                           ;		Total:    1
  2882                           ; This function calls:
  2883                           ;		Nothing
  2884                           ; This function is called by:
  2885                           ;		_measure_capacitance
  2886                           ;		_measure_inductance
  2887                           ; This function uses a non-reentrant model
  2888                           ; 
  2889                                   psect   text9,class=CODE,space=0,reloc=2
  2890                           
  2891                           	opt lm
  2892                           	file	"../../../src/print.c"
  2893                           	line	408
  2894  000000                     	__size_of_print_unit	equ	__end_of_print_unit-_p
                                 rint_unit
  2895                           ;print.c: 407: void
  2896                           ;print.c: 408: print_unit(unsigned char unit) {
  2897                           	
  2898  000000'                    _print_unit:		; BSR set to: ?
  2899                           
  2900                           	opt stack 28
  2901  000000' FFFF               	dw	0FFFFh
  2902                           	line	426
  2903  000002'                    l163:
  2904                           			; BSR set to: ?
  2905                           
  2906  000002' 0012               	return
  2907  000004' FFFF               	dw	0FFFFh; errata NOP
  2908                           	opt stack 0
  2909                           GLOBAL __end_of_print_unit
  2910  000006'                    	__end_of_print_unit:
  2911                           	FNSIZE	_print_unit,0,1
  2912                           ; =============== function _print_unit ends ====
                                 ========
  2913                           
  2914                           	signat	_print_unit,4216
  2915                           	global	_print_reading
  2916                           	global	??_print_reading
  2917                           	global	?_print_reading
  2918                           
  2919                           ; *************** function _print_reading ******
                                 ***********
  2920                           ; Defined at:
  2921                           ;		line 429 in file "../../../src/print.c"
  2922                           ; Parameters:
  2923                           ;		measurement    size:   2offs:   0	type: unsig
                                 ned short 
  2924                           ; Auto variables:
  2925                           ;		None
  2926                           ; Return value:
  2927                           ;		type: void 
  2928                           ;		size: 0
  2929                           ; Registers used:
  2930                           ;		None
  2931                           ; Tracked objects:
  2932                           ;		On entry : 0/0
  2933                           ;		On exit  : 0/0
  2934                           ;		Unchanged: 0/0
  2935                           ; Data sizes:
  2936                           ;		Autos:    0
  2937                           ;		Params:   2
  2938                           ;		Temp:     0
  2939                           ;		Total:    2
  2940                           ; This function calls:
  2941                           ;		Nothing
  2942                           ; This function is called by:
  2943                           ;		_measure_capacitance
  2944                           ;		_measure_inductance
  2945                           ; This function uses a non-reentrant model
  2946                           ; 
  2947                                   psect   text10,class=CODE,space=0,reloc=
                                 2
  2948                           
  2949                           	opt lm
  2950                           	file	"../../../src/print.c"
  2951                           	line	429
  2952  000000                     	__size_of_print_reading	equ	__end_of_print_read
                                 ing-_print_reading
  2953                           ;print.c: 428: void
  2954                           ;print.c: 429: print_reading(unsigned short int 
                                 measurement) {
  2955                           	
  2956  000000'                    _print_reading:		; BSR set to: ?
  2957                           
  2958                           	opt stack 28
  2959  000000' FFFF               	dw	0FFFFh
  2960                           	line	465
  2961  000002'                    l164:
  2962                           			; BSR set to: ?
  2963                           
  2964  000002' 0012               	return
  2965  000004' FFFF               	dw	0FFFFh; errata NOP
  2966                           	opt stack 0
  2967                           GLOBAL __end_of_print_reading
  2968  000006'                    	__end_of_print_reading:
  2969                           	FNSIZE	_print_reading,0,2
  2970                           ; =============== function _print_reading ends =
                                 ===========
  2971                           
  2972                           	signat	_print_reading,4216
  2973                           	global	___lwtofl
  2974                           	global	??___lwtofl
  2975                           	global	?___lwtofl
  2976                           
  2977                           ; *************** function ___lwtofl ***********
                                 ******
  2978                           ; Defined at:
  2979                           ;		line 16 in file "/opt/hitech/picc-18/9.66/sou
                                 rces/lwtofl.c"
  2980                           ; Parameters:
  2981                           ;		c              size:   2offs:   0	type: unsig
                                 ned int 
  2982                           ; Auto variables:
  2983                           ;		f1          	       	type: unsigned int 
  2984                           ; Return value:
  2985                           ;		type: unsigned int 
  2986                           ;		size: 4
  2987                           ; Registers used:
  2988                           ;		wreg, fsr0l, fsr0h, status,2, status,0, cstac
                                 k
  2989                           ; Tracked objects:
  2990                           ;		On entry : 0/0
  2991                           ;		On exit  : 0/0
  2992                           ;		Unchanged: 0/0
  2993                           ; Data sizes:
  2994                           ;		Autos:    4
  2995                           ;		Params:   4
  2996                           ;		Temp:     1
  2997                           ;		Total:    9
  2998                           ; This function calls:
  2999                           ;		___flpack
  3000                           ; This function is called by:
  3001                           ;		_calibrate
  3002                           ;		_measure_capacitance
  3003                           ;		_measure_inductance
  3004                           ; This function uses a non-reentrant model
  3005                           ; 
  3006                                   psect   text11,class=CODE,space=0,reloc=
                                 2
  3007                           
  3008                           	opt lm
  3009                           	file	"/opt/hitech/picc-18/9.66/sources/lwtofl.c
                                 "
  3010                           	line	16
  3011  000000                     	__size_of___lwtofl	equ	__end_of___lwtofl-___lwt
                                 ofl
  3012                           	
  3013  000000'                    ___lwtofl:		; BSR set to: ?
  3014                           
  3015                           	opt stack 28
  3016  000000' FFFF               	dw	0FFFFh
  3017                           	line	19
  3018  000002' 0101               	movlb	1	; () banked
  3019  000004' 0101               	movlb	1	; () banked
  3020  000006' 5100'              	movf	((___lwtofl@c+1))&0ffh,w
  3021  000008' 1100'              	iorwf ((___lwtofl@c))&0ffh,w
  3022                           
  3023  00000A' A4D8               	btfss	status,2
  3024  00000C' EF00' F000'        	goto	u3151
  3025  000010' EF00' F000'        	goto	u3150
  3026  000014'                    u3151:
  3027  000016' EF00' F000'        	goto	l1236
  3028  00001A'                    u3150:
  3029                           	line	20
  3030  00001C' 0E00               	movlw	low(0.0000000000000000)
  3031  00001E' 0101               	movlb	1	; () banked
  3032  000020' 0101               	movlb	1	; () banked
  3033  000022' 6F00'              	movwf	((?___lwtofl))&0ffh
  3034  000024' 0E00               	movlw	high(0.0000000000000000)
  3035  000026' 0101               	movlb	1	; () banked
  3036  000028' 6F00'              	movwf	((?___lwtofl+1))&0ffh
  3037  00002A' 0E00               	movlw	low highword(0.0000000000000000)
  3038  00002C' 0101               	movlb	1	; () banked
  3039  00002E' 6F00'              	movwf	((?___lwtofl+2))&0ffh
  3040  000030' 0E00               	movlw	high highword(0.0000000000000000)
  3041  000032' 0101               	movlb	1	; () banked
  3042  000034' 6F00'              	movwf	((?___lwtofl+3))&0ffh
  3043  000036' EF00' F000'        	goto	l1235
  3044                           	
  3045  00003A'                    l1236:		; BSR set to: ?
  3046                           
  3047                           	line	21
  3048  00003C' 0101               	movlb	1	; () banked
  3049  00003E' 0101               	movlb	1	; () banked
  3050  000040' C000' F000'        	movff	(___lwtofl@c),(___lwtofl@f1)
  3051  000044' 0101               	movlb	1	; () banked
  3052  000046' 0101               	movlb	1	; () banked
  3053  000048' C001' F001'        	movff	(___lwtofl@c+1),(___lwtofl@f1+1)
  3054  00004C' 0101               	movlb	1	; () banked
  3055  00004E' 0101               	movlb	1	; () banked
  3056  000050' 6B00'              	clrf	((___lwtofl@f1+2))&0ffh
  3057  000052' 0101               	movlb	1	; () banked
  3058  000054' 6B00'              	clrf	((___lwtofl@f1+3))&0ffh
  3059                           
  3060                           	line	22
  3061  000056' 0101               	movlb	1	; () banked
  3062  000058' 6F00'              	movwf	(??___lwtofl+4+0)&0ffh
  3063  00005A' 0E96               	movlw	low(096h)
  3064  00005C' 0101               	movlb	1	; () banked
  3065  00005E' 0101               	movlb	1	; () banked
  3066  000060' 6F00'              	movwf	(0+(?___flpack+02h))&0ffh
  3067  000062' 0101               	movlb	1	; () banked
  3068  000064' 5100'              	movf	(??___lwtofl+4+0)&0ffh,w
  3069  000066' 0101               	movlb	1	; () banked
  3070  000068' 0E00'              	movlw	low(___lwtofl@f1)
  3071  00006A' 0101               	movlb	1	; () banked
  3072  00006C' 0101               	movlb	1	; () banked
  3073  00006E' 6F00'              	movwf	((?___flpack))&0ffh
  3074  000070' 0101               	movlb	1	; () banked
  3075  000072' 0E00'              	movlw	high(___lwtofl@f1)
  3076  000074' 0101               	movlb	1	; () banked
  3077  000076' 6F00'              	movwf	((?___flpack+1))&0ffh
  3078  000078' EC00' F000'        	call	___flpack	;wreg free
  3079                           	line	23
  3080  00007C' C000' F000'        	movff	(___lwtofl@f1),(?___lwtofl)
  3081  000080' C001' F001'        	movff	(___lwtofl@f1+1),(?___lwtofl+1)
  3082  000084' C002' F002'        	movff	(___lwtofl@f1+2),(?___lwtofl+2)
  3083  000088' C003' F003'        	movff	(___lwtofl@f1+3),(?___lwtofl+3)
  3084  00008C' EF00' F000'        	goto	l1235
  3085                           	line	24
  3086  000090'                    l1235:
  3087                           			; BSR set to: ?
  3088                           
  3089  000092' 0012               	return
  3090  000094' FFFF               	dw	0FFFFh; errata NOP
  3091                           	opt stack 0
  3092                           GLOBAL __end_of___lwtofl
  3093  000096'                    	__end_of___lwtofl:
  3094                           	FNSIZE	___lwtofl,5,4
  3095                           ; =============== function ___lwtofl ends ======
                                 ======
  3096                           
  3097                           	signat	___lwtofl,4220
  3098                           	global	_measure_freq
  3099                           	global	??_measure_freq
  3100                           	global	?_measure_freq
  3101                           
  3102                           ; *************** function _measure_freq *******
                                 **********
  3103                           ; Defined at:
  3104                           ;		line 299 in file "../../../src/LC-meter.c"
  3105                           ; Parameters:
  3106                           ;		None
  3107                           ; Auto variables:
  3108                           ;		prev        	       	type: unsigned char 
  3109                           ;		count       	       	type: unsigned short 
  3110                           ;		i           	       	type: unsigned char 
  3111                           ; Return value:
  3112                           ;		type: unsigned short 
  3113                           ;		size: 2
  3114                           ; Registers used:
  3115                           ;		wreg, status,2, status,0
  3116                           ; Tracked objects:
  3117                           ;		On entry : 0/0
  3118                           ;		On exit  : 0/0
  3119                           ;		Unchanged: 0/0
  3120                           ; Data sizes:
  3121                           ;		Autos:    4
  3122                           ;		Params:   2
  3123                           ;		Temp:     4
  3124                           ;		Total:   10
  3125                           ; This function calls:
  3126                           ;		__delay
  3127                           ; This function is called by:
  3128                           ;		_calibrate
  3129                           ;		_measure_capacitance
  3130                           ;		_measure_inductance
  3131                           ; This function uses a non-reentrant model
  3132                           ; 
  3133                                   psect   text12,class=CODE,space=0,reloc=
                                 2
  3134                           
  3135                           	opt lm
  3136                           	file	"../../../src/LC-meter.c"
  3137                           	line	299
  3138  000000                     	__size_of_measure_freq	equ	__end_of_measure_fre
                                 q-_measure_freq
  3139                           ;LC-meter.c: 298: unsigned short int
  3140                           ;LC-meter.c: 299: measure_freq() {
  3141                           	
  3142  000000'                    _measure_freq:		; BSR set to: ?
  3143                           
  3144                           	opt stack 28
  3145  000000' FFFF               	dw	0FFFFh
  3146                           	line	303
  3147  000002' 94F2               	bcf	c:(32658/8),(32658)&7	;volatile
  3148                           	line	305
  3149                           ;LC-meter.c: 305: TRISA &= ~0b00010000;
  3150  000004' 9892               	bcf	(0+(4/8)+(c:3986)),c,(4)&7	;volatile
  3151                           	line	308
  3152                           ;LC-meter.c: 308: _delay((unsigned long)((20)*(2
                                 0000000/4000.0)));
  3153  000006' 0E62               	movlw	98
  3154  000008' 0101               	movlb	1	; () banked
  3155  00000A' 6F00'              movwf	(??_measure_freq+4+0)&0ffh,f
  3156  00000C' 0E76               	movlw	118
  3157  00000E'                    u4187:
  3158  000010' 2EE8               	decfsz	wreg,f
  3159  000012' EF00' F000'        	goto	u4187
  3160  000016' 2F00'              	decfsz	(??_measure_freq+4+0)&0ffh,f
  3161  000018' EF00' F000'        	goto	u4187
  3162  00001C' 0004               	clrwdt
  3163                           
  3164                           	line	310
  3165                           ;LC-meter.c: 310: TMR0 = 0x00;
  3166  00001E' 0E00               	movlw	low(0)
  3167  000020' 6ED6               	movwf	((c:4054)),c	;volatile
  3168  000022' 0E00               	movlw	high(0)
  3169  000024' 6ED7               	movwf	((c:4054+1)),c	;volatile
  3170                           	line	312
  3171                           ;LC-meter.c: 312: for(char i = 0; i < 10; i++)
  3172  000026' 0101               	movlb	1	; () banked
  3173  000028' 6F00'              	movwf	(??_measure_freq+4+0)&0ffh
  3174  00002A' 0E00               	movlw	low(0)
  3175  00002C' 0101               	movlb	1	; () banked
  3176  00002E' 0101               	movlb	1	; () banked
  3177  000030' 6F00'              	movwf	((measure_freq@i))&0ffh
  3178  000032' 0101               	movlb	1	; () banked
  3179  000034' 5100'              	movf	(??_measure_freq+4+0)&0ffh,w
  3180  000036' 0E09               	movlw	(0Ah-1)
  3181  000038' 0101               	movlb	1	; () banked
  3182  00003A' 0101               	movlb	1	; () banked
  3183  00003C' 6500'              	cpfsgt	((measure_freq@i))&0ffh
  3184  00003E' EF00' F000'        	goto	u3111
  3185  000042' EF00' F000'        	goto	u3110
  3186  000046'                    u3111:
  3187  000048' EF00' F000'        	goto	l846
  3188  00004C'                    u3110:
  3189  00004E' EF00' F000'        	goto	l847
  3190                           	line	313
  3191                           	
  3192  000052'                    l846:		; BSR set to: ?
  3193                           
  3194                           ;LC-meter.c: 313: _delay((unsigned long)((10)*(2
                                 0000000/4000.0)));
  3195  000054' 0E31               	movlw	49
  3196  000056' 0101               	movlb	1	; () banked
  3197  000058' 6F00'              movwf	(??_measure_freq+4+0)&0ffh,f
  3198  00005A' 0EBA               	movlw	186
  3199  00005C'                    u4197:
  3200  00005E' 2EE8               	decfsz	wreg,f
  3201  000060' EF00' F000'        	goto	u4197
  3202  000064' 2F00'              	decfsz	(??_measure_freq+4+0)&0ffh,f
  3203  000066' EF00' F000'        	goto	u4197
  3204  00006A' D000               	nop2
  3205  00006C' 0004               	clrwdt
  3206                           
  3207                           	line	312
  3208  00006E' 0101               	movlb	1	; () banked
  3209  000070' 0101               	movlb	1	; () banked
  3210  000072' 2B00'              	incf	((measure_freq@i))&0ffh
  3211  000074' 0E09               	movlw	(0Ah-1)
  3212  000076' 0101               	movlb	1	; () banked
  3213  000078' 0101               	movlb	1	; () banked
  3214  00007A' 6500'              	cpfsgt	((measure_freq@i))&0ffh
  3215  00007C' EF00' F000'        	goto	u3121
  3216  000080' EF00' F000'        	goto	u3120
  3217  000084'                    u3121:
  3218  000086' EF00' F000'        	goto	l846
  3219  00008A'                    u3120:
  3220                           	
  3221  00008A'                    l847:		; BSR set to: ?
  3222                           
  3223                           	line	315
  3224                           ;LC-meter.c: 315: TRISA |= 0b00010000;
  3225  00008C' 8892               	bsf	(0+(4/8)+(c:3986)),c,(4)&7	;volatile
  3226                           	line	317
  3227                           ;LC-meter.c: 317: prev = TMR0;
  3228  00008E' CFD6 F000'         	movff	(c:4054),(measure_freq@prev)	;volatile
  3229                           	line	318
  3230                           ;LC-meter.c: 318: count = 0;
  3231  000092' 0E00               	movlw	low(0)
  3232  000094' 0101               	movlb	1	; () banked
  3233  000096' 0101               	movlb	1	; () banked
  3234  000098' 6F00'              	movwf	((measure_freq@count))&0ffh
  3235  00009A' 0E00               	movlw	high(0)
  3236  00009C' 0101               	movlb	1	; () banked
  3237  00009E' 6F00'              	movwf	((measure_freq@count+1))&0ffh
  3238                           	line	320
  3239                           ;LC-meter.c: 320: do {
  3240                           	
  3241  0000A0'                    l851:		; BSR set to: ?
  3242                           
  3243                           	line	322
  3244                           ;LC-meter.c: 322: T0SE = 1;
  3245  0000A2' 88D5               	bsf	c:(32428/8),(32428)&7	;volatile
  3246                           	line	323
  3247                           # 323 "../../../src/LC-meter.c"
  3248  0000A4' F000                nop ;#
  3249                           	line	324
  3250                           # 324 "../../../src/LC-meter.c"
  3251  0000A6' F000                nop ;#
  3252                                   psect   text12
  3253                           	line	326
  3254                           ;LC-meter.c: 323: asm(" nop");
  3255                           ;LC-meter.c: 324: asm(" nop");
  3256                           ;LC-meter.c: 326: T0SE = 0;
  3257  0000A8' 98D5               	bcf	c:(32428/8),(32428)&7	;volatile
  3258                           	line	327
  3259                           # 327 "../../../src/LC-meter.c"
  3260  0000AA' F000                nop ;#
  3261                           	line	328
  3262                           # 328 "../../../src/LC-meter.c"
  3263  0000AC' F000                nop ;#
  3264                                   psect   text12
  3265                           	line	329
  3266                           ;LC-meter.c: 327: asm(" nop");
  3267                           ;LC-meter.c: 328: asm(" nop");
  3268                           ;LC-meter.c: 329: count++;
  3269  0000AE' 0101               	movlb	1	; () banked
  3270  0000B0' 0101               	movlb	1	; () banked
  3271  0000B2' 4B00'              	infsnz	((measure_freq@count))&0ffh
  3272  0000B4' 2B00'              	incf	((measure_freq@count+1))&0ffh
  3273                           	line	330
  3274                           ;LC-meter.c: 330: } while(prev == TMR0 && count 
                                 <= 255);
  3275  0000B6' 0101               	movlb	1	; () banked
  3276  0000B8' C000' F004'        	movff	(measure_freq@prev),??_measure_freq+4+0
  3277  0000BC' 0101               	movlb	1	; () banked
  3278  0000BE' 6B00'              	clrf	(??_measure_freq+4+0+1)&0ffh
  3279  0000C0' 50D7               	movf	((c:4054+1)),c,w	;volatile
  3280  0000C2' 0101               	movlb	1	; () banked
  3281  0000C4' 1900'              	xorwf	(??_measure_freq+4+1)&0ffh,w
  3282  0000C6' E103               	bnz	u3135
  3283  0000C8' 50D6               	movf	((c:4054)),c,w	;volatile
  3284  0000CA' 0101               	movlb	1	; () banked
  3285  0000CC' 1900'              	xorwf	(??_measure_freq+4+0)&0ffh,w
  3286  0000CE'                    u3135:
  3287                           
  3288  0000CE' A4D8               	btfss	status,2
  3289  0000D0' EF00' F000'        	goto	u3131
  3290  0000D4' EF00' F000'        	goto	u3130
  3291  0000D8'                    u3131:
  3292  0000DA' EF00' F000'        	goto	l850
  3293  0000DE'                    u3130:
  3294  0000E0' 0E00               	movlw	0
  3295  0000E2' 0101               	movlb	1	; () banked
  3296  0000E4' 0101               	movlb	1	; () banked
  3297  0000E6' 5D00'              	subwf	((measure_freq@count))&0ffh,w
  3298  0000E8' 0E01               	movlw	01h
  3299  0000EA' 0101               	movlb	1	; () banked
  3300  0000EC' 5900'              	subwfb	((measure_freq@count+1))&0ffh,w
  3301  0000EE' A0D8               	btfss	status,0
  3302  0000F0' EF00' F000'        	goto	u3141
  3303  0000F4' EF00' F000'        	goto	u3140
  3304  0000F8'                    u3141:
  3305  0000FA' EF00' F000'        	goto	l851
  3306  0000FE'                    u3140:
  3307                           	
  3308  0000FE'                    l600000709:		; BSR set to: ?
  3309                           
  3310                           	
  3311  0000FE'                    l850:		; BSR set to: ?
  3312                           
  3313                           	line	333
  3314                           ;LC-meter.c: 333: count = ((prev << 8) + (256 - 
                                 count));
  3315  000100' 0E00               	movlw	low(0100h)
  3316  000102' 0101               	movlb	1	; () banked
  3317  000104' 6F00'              	movwf	(??_measure_freq+4+0)&0ffh
  3318  000106' 0E01               	movlw	high(0100h)
  3319  000108' 6F00'              	movwf	(??_measure_freq+4+0+1)&0ffh
  3320  00010A' 0101               	movlb	1	; () banked
  3321  00010C' 0101               	movlb	1	; () banked
  3322  00010E' 5100'              	movf	((measure_freq@count))&0ffh,w
  3323  000110' 0101               	movlb	1	; () banked
  3324  000112' 5F00'              	subwf	(??_measure_freq+4+0)&0ffh
  3325  000114' 0101               	movlb	1	; () banked
  3326  000116' 0101               	movlb	1	; () banked
  3327  000118' 5100'              	movf	((measure_freq@count+1))&0ffh,w
  3328  00011A' 0101               	movlb	1	; () banked
  3329  00011C' 5B00'              	subwfb	(??_measure_freq+4+1)&0ffh
  3330  00011E' 0101               	movlb	1	; () banked
  3331  000120' 0101               	movlb	1	; () banked
  3332  000122' 5100'              	movf	((measure_freq@prev))&0ffh,w
  3333  000124' 0101               	movlb	1	; () banked
  3334  000126' 6F00'              	movwf	(??_measure_freq+6+0+1)&0ffh
  3335  000128' 6B00'              	clrf	(??_measure_freq+6+0)&0ffh
  3336  00012A' 0101               	movlb	1	; () banked
  3337  00012C' 5100'              	movf	(??_measure_freq+4+0)&0ffh,w
  3338  00012E' 0101               	movlb	1	; () banked
  3339  000130' 2500'              	addwf	(??_measure_freq+6+0)&0ffh,w
  3340  000132' 0101               	movlb	1	; () banked
  3341                           	
  3342  000134' 0101               	movlb	1	; () banked
  3343  000136' 6F00'              	movwf	((measure_freq@count))&0ffh
  3344  000138' 0101               	movlb	1	; () banked
  3345  00013A' 5100'              	movf	(??_measure_freq+4+1)&0ffh,w
  3346  00013C' 0101               	movlb	1	; () banked
  3347  00013E' 2100'              	addwfc	(??_measure_freq+6+1)&0ffh,w
  3348  000140' 0101               	movlb	1	; () banked
  3349  000142' 6F00'              	movwf	1+((measure_freq@count))&0ffh
  3350                           	line	340
  3351  000144' C001' F000'        	movff	(measure_freq@count),(?_measure_freq)
  3352  000148' C002' F001'        	movff	(measure_freq@count+1),(?_measure_freq+1)
  3353  00014C' EF00' F000'        	goto	l845
  3354                           	line	341
  3355                           ;LC-meter.c: 341: }
  3356  000150'                    l845:
  3357                           			; BSR set to: ?
  3358                           
  3359  000152' 0012               	return
  3360  000154' FFFF               	dw	0FFFFh; errata NOP
  3361                           	opt stack 0
  3362                           GLOBAL __end_of_measure_freq
  3363  000156'                    	__end_of_measure_freq:
  3364                           	FNSIZE	_measure_freq,8,2
  3365                           ; =============== function _measure_freq ends ==
                                 ==========
  3366                           
  3367                           	signat	_measure_freq,90
  3368                           	global	_delay10ms
  3369                           	global	??_delay10ms
  3370                           	global	?_delay10ms
  3371                           
  3372                           ; *************** function _delay10ms **********
                                 *******
  3373                           ; Defined at:
  3374                           ;		line 533 in file "../../../src/LC-meter.c"
  3375                           ; Parameters:
  3376                           ;		period_10ms    size:   2offs:   0	type: unsig
                                 ned short 
  3377                           ; Auto variables:
  3378                           ;		run         	       	type: unsigned char 
  3379                           ;		ms          	       	type: unsigned long 
  3380                           ; Return value:
  3381                           ;		type: void 
  3382                           ;		size: 0
  3383                           ; Registers used:
  3384                           ;		wreg, status,2, status,0, cstack
  3385                           ; Tracked objects:
  3386                           ;		On entry : 0/0
  3387                           ;		On exit  : 0/0
  3388                           ;		Unchanged: 0/0
  3389                           ; Data sizes:
  3390                           ;		Autos:    5
  3391                           ;		Params:   2
  3392                           ;		Temp:     1
  3393                           ;		Total:    8
  3394                           ; This function calls:
  3395                           ;		___wmul
  3396                           ; This function is called by:
  3397                           ;		_main
  3398                           ;		_calibrate
  3399                           ; This function uses a non-reentrant model
  3400                           ; 
  3401                                   psect   text13,class=CODE,space=0,reloc=
                                 2
  3402                           
  3403                           	opt lm
  3404                           	file	"../../../src/LC-meter.c"
  3405                           	line	533
  3406  000000                     	__size_of_delay10ms	equ	__end_of_delay10ms-_del
                                 ay10ms
  3407                           ;LC-meter.c: 532: void
  3408                           ;LC-meter.c: 533: delay10ms(unsigned short int p
                                 eriod_10ms) {
  3409                           	
  3410  000000'                    _delay10ms:		; BSR set to: ?
  3411                           
  3412                           	opt stack 28
  3413  000000' FFFF               	dw	0FFFFh
  3414                           	line	538
  3415                           ;LC-meter.c: 537: unsigned long int ms;
  3416                           ;LC-meter.c: 538: BOOL run = 1;
  3417  000002' 0101               	movlb	1	; () banked
  3418  000004' 6F00'              	movwf	(??_delay10ms+5+0)&0ffh
  3419  000006' 0E01               	movlw	low(01h)
  3420  000008' 0101               	movlb	1	; () banked
  3421  00000A' 0101               	movlb	1	; () banked
  3422  00000C' 6F00'              	movwf	((delay10ms@run))&0ffh
  3423  00000E' 0101               	movlb	1	; () banked
  3424  000010' 5100'              	movf	(??_delay10ms+5+0)&0ffh,w
  3425                           	line	540
  3426                           ;LC-meter.c: 540: GIE = 0, ms = msecs, GIE = 1;
  3427  000012' 9EF2               	bcf	c:(32663/8),(32663)&7	;volatile
  3428  000014' C034 F001'         	movff	(c:52),(delay10ms@ms)	;volatile
  3429  000018' C035 F002'         	movff	(c:52+1),(delay10ms@ms+1)	;volatile
  3430  00001C' C036 F003'         	movff	(c:52+2),(delay10ms@ms+2)	;volatile
  3431  000020' C037 F004'         	movff	(c:52+3),(delay10ms@ms+3)	;volatile
  3432  000024' 8EF2               	bsf	c:(32663/8),(32663)&7	;volatile
  3433                           	line	545
  3434                           ;LC-meter.c: 545: ms += period_10ms * 10;
  3435  000026' 0E0A               	movlw	low(0Ah)
  3436  000028' 0101               	movlb	1	; () banked
  3437  00002A' 0101               	movlb	1	; () banked
  3438  00002C' 6F00'              	movwf	(0+(?___wmul+02h))&0ffh
  3439  00002E' 0E00               	movlw	high(0Ah)
  3440  000030' 0101               	movlb	1	; () banked
  3441  000032' 6F00'              	movwf	(1+(?___wmul+02h))&0ffh
  3442  000034' C000' F000'        	movff	(delay10ms@period_10ms),(?___wmul)
  3443  000038' C001' F001'        	movff	(delay10ms@period_10ms+1),(?___wmul+1)
  3444  00003C' EC00' F000'        	call	___wmul	;wreg free
  3445  000040' 0101               	movlb	1	; () banked
  3446  000042' 0101               	movlb	1	; () banked
  3447  000044' 5100'              	movf	(0+?___wmul)&0ffh,w
  3448  000046' 0101               	movlb	1	; () banked
  3449  000048' 0101               	movlb	1	; () banked
  3450  00004A' 2700'              	addwf	((delay10ms@ms))&0ffh
  3451  00004C' 0101               	movlb	1	; () banked
  3452  00004E' 0101               	movlb	1	; () banked
  3453  000050' 5100'              	movf	(1+?___wmul)&0ffh,w
  3454  000052' 0101               	movlb	1	; () banked
  3455  000054' 0101               	movlb	1	; () banked
  3456  000056' 2300'              	addwfc	((delay10ms@ms+1))&0ffh
  3457  000058' 0E00               	movlw	0
  3458  00005A' 0101               	movlb	1	; () banked
  3459  00005C' 0101               	movlb	1	; () banked
  3460  00005E' 2300'              	addwfc	((delay10ms@ms+2))&0ffh
  3461  000060' 0E00               	movlw	0
  3462  000062' 0101               	movlb	1	; () banked
  3463  000064' 0101               	movlb	1	; () banked
  3464  000066' 2300'              	addwfc	((delay10ms@ms+3))&0ffh
  3465                           
  3466                           	line	548
  3467                           ;LC-meter.c: 548: do {
  3468                           	
  3469  000068'                    l872:		; BSR set to: ?
  3470                           
  3471                           	line	549
  3472                           ;LC-meter.c: 549: GIE = 0;
  3473  00006A' 9EF2               	bcf	c:(32663/8),(32663)&7	;volatile
  3474                           	line	550
  3475                           ;LC-meter.c: 550: if(ms <= msecs)
  3476  00006C' 0101               	movlb	1	; () banked
  3477  00006E' 0101               	movlb	1	; () banked
  3478  000070' 5100'              	movf	((delay10ms@ms))&0ffh,w
  3479  000072' 5C34               	subwf	((c:52)),c,w	;volatile
  3480  000074' 0101               	movlb	1	; () banked
  3481  000076' 0101               	movlb	1	; () banked
  3482  000078' 5100'              	movf	((delay10ms@ms+1))&0ffh,w
  3483  00007A' 5835               	subwfb	((c:52+1)),c,w	;volatile
  3484  00007C' 0101               	movlb	1	; () banked
  3485  00007E' 0101               	movlb	1	; () banked
  3486  000080' 5100'              	movf	((delay10ms@ms+2))&0ffh,w
  3487  000082' 5836               	subwfb	((c:52+2)),c,w	;volatile
  3488  000084' 0101               	movlb	1	; () banked
  3489  000086' 0101               	movlb	1	; () banked
  3490  000088' 5100'              	movf	((delay10ms@ms+3))&0ffh,w
  3491  00008A' 5837               	subwfb	((c:52+3)),c,w	;volatile
  3492  00008C' A0D8               	btfss	status,0
  3493  00008E' EF00' F000'        	goto	u4131
  3494  000092' EF00' F000'        	goto	u4130
  3495  000096'                    u4131:
  3496  000098' EF00' F000'        	goto	l873
  3497  00009C'                    u4130:
  3498                           	line	551
  3499                           ;LC-meter.c: 551: run = 0;
  3500  00009E' 0101               	movlb	1	; () banked
  3501  0000A0' 6F00'              	movwf	(??_delay10ms+5+0)&0ffh
  3502  0000A2' 0E00               	movlw	low(0)
  3503  0000A4' 0101               	movlb	1	; () banked
  3504  0000A6' 0101               	movlb	1	; () banked
  3505  0000A8' 6F00'              	movwf	((delay10ms@run))&0ffh
  3506  0000AA' 0101               	movlb	1	; () banked
  3507  0000AC' 5100'              	movf	(??_delay10ms+5+0)&0ffh,w
  3508                           	
  3509  0000AE'                    l873:		; BSR set to: ?
  3510                           
  3511                           	line	552
  3512                           ;LC-meter.c: 552: GIE = 1;
  3513  0000B0' 8EF2               	bsf	c:(32663/8),(32663)&7	;volatile
  3514                           	line	553
  3515                           ;LC-meter.c: 553: } while(run);
  3516  0000B2' 0101               	movlb	1	; () banked
  3517  0000B4' 0101               	movlb	1	; () banked
  3518  0000B6' 6700'              	tstfsz	((delay10ms@run))&0ffh
  3519  0000B8' EF00' F000'        	goto	u4141
  3520  0000BC' EF00' F000'        	goto	u4140
  3521  0000C0'                    u4141:
  3522  0000C2' EF00' F000'        	goto	l872
  3523  0000C6'                    u4140:
  3524                           	
  3525  0000C8'                    l871:		; BSR set to: ?
  3526                           
  3527                           	line	554
  3528                           ;LC-meter.c: 554: }
  3529  0000C8'                    l869:
  3530                           			; BSR set to: ?
  3531                           
  3532  0000C8' 0012               	return
  3533  0000CA' FFFF               	dw	0FFFFh; errata NOP
  3534                           	opt stack 0
  3535                           GLOBAL __end_of_delay10ms
  3536  0000CC'                    	__end_of_delay10ms:
  3537                           	FNSIZE	_delay10ms,6,2
  3538                           ; =============== function _delay10ms ends =====
                                 =======
  3539                           
  3540                           	signat	_delay10ms,4216
  3541                           	global	_ser_puts
  3542                           	global	??_ser_puts
  3543                           	global	?_ser_puts
  3544                           
  3545                           ; *************** function _ser_puts ***********
                                 ******
  3546                           ; Defined at:
  3547                           ;		line 92 in file "../../../lib/ser.c"
  3548                           ; Parameters:
  3549                           ;		s              size:   2offs:   0	type: PTR c
                                 onst unsigned char ; Largest target is 8
  3550                           ;		 -> STR_11(3), STR_10(5), STR_9(3), STR_8(8),
                                  
  3551                           ;		 -> STR_7(6), STR_6(6), STR_5(6), STR_4(5), 
  3552                           ;		 -> STR_3(3), STR_2(3), STR_1(6), 
  3553                           ; Auto variables:
  3554                           ;		None
  3555                           ; Return value:
  3556                           ;		type: void 
  3557                           ;		size: 0
  3558                           ; Registers used:
  3559                           ;		wreg, fsr0l, fsr0h, status,2, status,0, tblpt
                                 rl, tblptrh, tblptru, tablat, cstack
  3560                           ; Tracked objects:
  3561                           ;		On entry : 0/0
  3562                           ;		On exit  : 0/0
  3563                           ;		Unchanged: 0/0
  3564                           ; Data sizes:
  3565                           ;		Autos:    0
  3566                           ;		Params:   2
  3567                           ;		Temp:     0
  3568                           ;		Total:    2
  3569                           ; This function calls:
  3570                           ;		_ser_putch
  3571                           ; This function is called by:
  3572                           ;		_main
  3573                           ;		_calibrate
  3574                           ;		_measure_capacitance
  3575                           ; This function uses a non-reentrant model
  3576                           ; 
  3577                                   psect   text14,class=CODE,space=0,reloc=
                                 2
  3578                           
  3579                           	opt lm
  3580                           	file	"../../../lib/ser.c"
  3581                           	line	92
  3582  000000                     	__size_of_ser_puts	equ	__end_of_ser_puts-_ser_p
                                 uts
  3583                           ;ser.c: 91: void
  3584                           ;ser.c: 92: ser_puts(const char* s) {
  3585                           	
  3586  000000'                    _ser_puts:		; BSR set to: ?
  3587                           
  3588                           	opt stack 28
  3589  000000' FFFF               	dw	0FFFFh
  3590                           	line	93
  3591  000002' EF00' F000'        	goto	l329
  3592                           	
  3593  000006'                    l330:		; BSR set to: ?
  3594                           
  3595  000008' 0101               	movlb	1	; () banked
  3596  00000A' C000' FFF6         	movff	(ser_puts@s),tblptrl
  3597  00000E' 0101               	movlb	1	; () banked
  3598  000010' C001' FFF7         	movff	(ser_puts@s+1),tblptrh
  3599  000014' 0008               	tblrd	*
  3600  000016' FFFF               		dw	0FFFFh; errata NOP
  3601                           
  3602  000018' 0101               	movlb	1	; () banked
  3603  00001A' CFF5 F000'         	movff	tablat,(?_ser_putch)
  3604  00001E' EC00' F000'        	call	_ser_putch	;wreg free
  3605  000022' 0101               	movlb	1	; () banked
  3606  000024' 0101               	movlb	1	; () banked
  3607  000026' 4B00'              	infsnz	((ser_puts@s))&0ffh
  3608  000028' 2B00'              	incf	((ser_puts@s+1))&0ffh
  3609                           	
  3610  00002A'                    l329:		; BSR set to: ?
  3611                           
  3612  00002C' 0101               	movlb	1	; () banked
  3613  00002E' C000' FFF6         	movff	(ser_puts@s),tblptrl
  3614  000032' 0101               	movlb	1	; () banked
  3615  000034' C001' FFF7         	movff	(ser_puts@s+1),tblptrh
  3616  000038' 0008               	tblrd	*
  3617  00003A' FFFF               		dw	0FFFFh; errata NOP
  3618                           
  3619  00003C' 50F5               	movf	tablat,w
  3620                           
  3621  00003E' 0900               	iorlw	0
  3622  000040' A4D8               	btfss	status,2
  3623  000042' EF00' F000'        	goto	u3041
  3624  000046' EF00' F000'        	goto	u3040
  3625  00004A'                    u3041:
  3626  00004C' EF00' F000'        	goto	l330
  3627  000050'                    u3040:
  3628                           	
  3629  000052'                    l331:		; BSR set to: ?
  3630                           
  3631                           	line	94
  3632                           ;ser.c: 94: }
  3633  000052'                    l328:
  3634                           			; BSR set to: ?
  3635                           
  3636  000052' 0012               	return
  3637  000054' FFFF               	dw	0FFFFh; errata NOP
  3638                           	opt stack 0
  3639                           GLOBAL __end_of_ser_puts
  3640  000056'                    	__end_of_ser_puts:
  3641                           	FNSIZE	_ser_puts,0,2
  3642                           ; =============== function _ser_puts ends ======
                                 ======
  3643                           
  3644                           	signat	_ser_puts,4216
  3645                           	global	___wmul
  3646                           	global	??___wmul
  3647                           	global	?___wmul
  3648                           
  3649                           ; *************** function ___wmul *************
                                 ****
  3650                           ; Defined at:
  3651                           ;		line 3 in file "/opt/hitech/picc-18/9.66/sour
                                 ces/wmul.c"
  3652                           ; Parameters:
  3653                           ;		multiplier     size:   2offs:   0	type: unsig
                                 ned int 
  3654                           ;		multiplicand   size:   2offs:   2	type: unsig
                                 ned int 
  3655                           ; Auto variables:
  3656                           ;		product     	       	type: unsigned int 
  3657                           ; Return value:
  3658                           ;		type: unsigned int 
  3659                           ;		size: 2
  3660                           ; Registers used:
  3661                           ;		wreg, status,2, status,0
  3662                           ; Tracked objects:
  3663                           ;		On entry : 0/0
  3664                           ;		On exit  : 0/0
  3665                           ;		Unchanged: 0/0
  3666                           ; Data sizes:
  3667                           ;		Autos:    2
  3668                           ;		Params:   4
  3669                           ;		Temp:     0
  3670                           ;		Total:    6
  3671                           ; This function calls:
  3672                           ;		Nothing
  3673                           ; This function is called by:
  3674                           ;		_delay10ms
  3675                           ; This function uses a non-reentrant model
  3676                           ; 
  3677                                   psect   text15,class=CODE,space=0,reloc=
                                 2
  3678                           
  3679                           	opt lm
  3680                           	file	"/opt/hitech/picc-18/9.66/sources/wmul.c"
  3681                           	line	3
  3682  000000                     	__size_of___wmul	equ	__end_of___wmul-___wmul
  3683                           	
  3684  000000'                    ___wmul:		; BSR set to: ?
  3685                           
  3686                           	opt stack 27
  3687  000000' FFFF               	dw	0FFFFh
  3688                           	line	4
  3689  000002' 0E00               	movlw	low(0)
  3690  000004' 0101               	movlb	1	; () banked
  3691  000006' 0101               	movlb	1	; () banked
  3692  000008' 6F00'              	movwf	((___wmul@product))&0ffh
  3693  00000A' 0E00               	movlw	high(0)
  3694  00000C' 0101               	movlb	1	; () banked
  3695  00000E' 6F00'              	movwf	((___wmul@product+1))&0ffh
  3696                           	line	6
  3697                           	
  3698  000010'                    l1242:		; BSR set to: ?
  3699                           
  3700                           	line	7
  3701  000012' 0101               	movlb	1	; () banked
  3702                           	
  3703  000014' 0101               	movlb	1	; () banked
  3704  000016' A100'              	btfss	((___wmul@multiplier))&0ffh,(0)&7
  3705  000018' EF00' F000'        	goto	u4151
  3706  00001C' EF00' F000'        	goto	u4150
  3707  000020'                    u4151:
  3708  000022' EF00' F000'        	goto	l1243
  3709  000026'                    u4150:
  3710                           	line	8
  3711  000028' 0101               	movlb	1	; () banked
  3712  00002A' 0101               	movlb	1	; () banked
  3713  00002C' 5100'              	movf	((___wmul@multiplicand))&0ffh,w
  3714  00002E' 0101               	movlb	1	; () banked
  3715  000030' 0101               	movlb	1	; () banked
  3716  000032' 2700'              	addwf	((___wmul@product))&0ffh
  3717  000034' 0101               	movlb	1	; () banked
  3718  000036' 0101               	movlb	1	; () banked
  3719  000038' 5100'              	movf	((___wmul@multiplicand+1))&0ffh,w
  3720  00003A' 0101               	movlb	1	; () banked
  3721  00003C' 0101               	movlb	1	; () banked
  3722  00003E' 2300'              	addwfc	((___wmul@product+1))&0ffh
  3723                           
  3724                           	
  3725  000040'                    l1243:		; BSR set to: ?
  3726                           
  3727                           	line	9
  3728  000042' 0101               	movlb	1	; () banked
  3729  000044' 90D8               	bcf	status,0
  3730  000046' 0101               	movlb	1	; () banked
  3731  000048' 3700'              	rlcf	((___wmul@multiplicand))&0ffh
  3732  00004A' 0101               	movlb	1	; () banked
  3733  00004C' 3700'              	rlcf	((___wmul@multiplicand+1))&0ffh
  3734                           	line	10
  3735  00004E' 0101               	movlb	1	; () banked
  3736  000050' 90D8               	bcf	status,0
  3737  000052' 0101               	movlb	1	; () banked
  3738  000054' 3300'              	rrcf	((___wmul@multiplier+1))&0ffh
  3739  000056' 0101               	movlb	1	; () banked
  3740  000058' 3300'              	rrcf	((___wmul@multiplier))&0ffh
  3741                           	line	11
  3742  00005A' 0101               	movlb	1	; () banked
  3743  00005C' 0101               	movlb	1	; () banked
  3744  00005E' 5100'              	movf	((___wmul@multiplier+1))&0ffh,w
  3745  000060' 1100'              	iorwf ((___wmul@multiplier))&0ffh,w
  3746                           
  3747  000062' A4D8               	btfss	status,2
  3748  000064' EF00' F000'        	goto	u4161
  3749  000068' EF00' F000'        	goto	u4160
  3750  00006C'                    u4161:
  3751  00006E' EF00' F000'        	goto	l1242
  3752  000072'                    u4160:
  3753                           	
  3754  000074'                    l1241:		; BSR set to: ?
  3755                           
  3756                           	line	12
  3757  000074' C000' F000'        	movff	(___wmul@product),(?___wmul)
  3758  000078' C001' F001'        	movff	(___wmul@product+1),(?___wmul+1)
  3759  00007C' EF00' F000'        	goto	l1239
  3760                           	line	13
  3761  000080'                    l1239:
  3762                           			; BSR set to: ?
  3763                           
  3764  000082' 0012               	return
  3765  000084' FFFF               	dw	0FFFFh; errata NOP
  3766                           	opt stack 0
  3767                           GLOBAL __end_of___wmul
  3768  000086'                    	__end_of___wmul:
  3769                           	FNSIZE	___wmul,2,4
  3770                           ; =============== function ___wmul ends ========
                                 ====
  3771                           
  3772                           	signat	___wmul,8314
  3773                           	global	_log10
  3774                           	global	??_log10
  3775                           	global	?_log10
  3776                           
  3777                           ; *************** function _log10 **************
                                 ***
  3778                           ; Defined at:
  3779                           ;		line 40 in file "/opt/hitech/picc-18/9.66/sou
                                 rces/log.c"
  3780                           ; Parameters:
  3781                           ;		x              size:   4offs:   0	type: unsig
                                 ned int 
  3782                           ; Auto variables:
  3783                           ;		None
  3784                           ; Return value:
  3785                           ;		type: unsigned int 
  3786                           ;		size: 4
  3787                           ; Registers used:
  3788                           ;		wreg, fsr0l, fsr0h, status,2, status,0, tblpt
                                 rl, tblptrh, tblptru, tablat, cstack
  3789                           ; Tracked objects:
  3790                           ;		On entry : 0/0
  3791                           ;		On exit  : 0/0
  3792                           ;		Unchanged: 0/0
  3793                           ; Data sizes:
  3794                           ;		Autos:    0
  3795                           ;		Params:   4
  3796                           ;		Temp:     0
  3797                           ;		Total:    4
  3798                           ; This function calls:
  3799                           ;		_log
  3800                           ;		___flmul
  3801                           ; This function is called by:
  3802                           ;		_format_double
  3803                           ; This function uses a non-reentrant model
  3804                           ; 
  3805                                   psect   text16,class=CODE,space=0,reloc=
                                 2
  3806                           
  3807                           	opt lm
  3808                           	file	"/opt/hitech/picc-18/9.66/sources/log.c"
  3809                           	line	40
  3810  000000                     	__size_of_log10	equ	__end_of_log10-_log10
  3811                           	
  3812  000000'                    _log10:		; BSR set to: ?
  3813                           
  3814                           	opt stack 27
  3815  000000' FFFF               	dw	0FFFFh
  3816                           	line	41
  3817  000002' C000' F000'        	movff	(log10@x),(?_log)
  3818  000006' C001' F001'        	movff	(log10@x+1),(?_log+1)
  3819  00000A' C002' F002'        	movff	(log10@x+2),(?_log+2)
  3820  00000E' C003' F003'        	movff	(log10@x+3),(?_log+3)
  3821  000012' EC00' F000'        	call	_log	;wreg free
  3822  000016' C000' F000'        	movff	0+?_log,(?___flmul)
  3823  00001A' C001' F001'        	movff	1+?_log,(?___flmul+1)
  3824  00001E' C002' F002'        	movff	2+?_log,(?___flmul+2)
  3825  000022' C003' F003'        	movff	3+?_log,(?___flmul+3)
  3826  000026' 0ED9               	movlw	low(0.43429448189999997)
  3827  000028' 0101               	movlb	1	; () banked
  3828  00002A' 0101               	movlb	1	; () banked
  3829  00002C' 6F00'              	movwf	(0+(?___flmul+04h))&0ffh
  3830  00002E' 0E5B               	movlw	high(0.43429448189999997)
  3831  000030' 0101               	movlb	1	; () banked
  3832  000032' 6F00'              	movwf	(1+(?___flmul+04h))&0ffh
  3833  000034' 0EDE               	movlw	low highword(0.43429448189999997)
  3834  000036' 0101               	movlb	1	; () banked
  3835  000038' 6F00'              	movwf	(2+(?___flmul+04h))&0ffh
  3836  00003A' 0E3E               	movlw	high highword(0.43429448189999997)
  3837  00003C' 0101               	movlb	1	; () banked
  3838  00003E' 6F00'              	movwf	(3+(?___flmul+04h))&0ffh
  3839  000040' EC00' F000'        	call	___flmul	;wreg free
  3840  000044' C000' F000'        	movff	0+?___flmul,(?_log10)
  3841  000048' C001' F001'        	movff	1+?___flmul,(?_log10+1)
  3842  00004C' C002' F002'        	movff	2+?___flmul,(?_log10+2)
  3843  000050' C003' F003'        	movff	3+?___flmul,(?_log10+3)
  3844  000054' EF00' F000'        	goto	l887
  3845                           	line	42
  3846  000058'                    l887:
  3847                           			; BSR set to: ?
  3848                           
  3849  00005A' 0012               	return
  3850  00005C' FFFF               	dw	0FFFFh; errata NOP
  3851                           	opt stack 0
  3852                           GLOBAL __end_of_log10
  3853  00005E'                    	__end_of_log10:
  3854                           	FNSIZE	_log10,0,4
  3855                           ; =============== function _log10 ends =========
                                 ===
  3856                           
  3857                           	signat	_log10,4220
  3858                           	global	_format_number
  3859                           	global	??_format_number
  3860                           	global	?_format_number
  3861                           
  3862                           ; *************** function _format_number ******
                                 ***********
  3863                           ; Defined at:
  3864                           ;		line 14 in file "../../../lib/format.c"
  3865                           ; Parameters:
  3866                           ;		n              size:   2offs:   0	type: unsig
                                 ned short 
  3867                           ;		base           size:   1offs:   2	type: unsig
                                 ned char 
  3868                           ;		pad            size:   1offs:   3	type: char 
  3869                           ; Auto variables:
  3870                           ;		padchar     	       	type: unsigned char 
  3871                           ;		di          	       	type: unsigned char 
  3872                           ;		i           	       	type: char 
  3873                           ;		buf         	       	type: unsigned char [32]
  3874                           ; Return value:
  3875                           ;		type: void 
  3876                           ;		size: 0
  3877                           ; Registers used:
  3878                           ;		wreg, fsr0l, fsr0h, status,2, status,0, pclat
                                 , tosl, cstack
  3879                           ; Tracked objects:
  3880                           ;		On entry : 0/0
  3881                           ;		On exit  : 0/0
  3882                           ;		Unchanged: 0/0
  3883                           ; Data sizes:
  3884                           ;		Autos:   37
  3885                           ;		Params:   4
  3886                           ;		Temp:     1
  3887                           ;		Total:   42
  3888                           ; This function calls:
  3889                           ;		___lwmod
  3890                           ;		___lwdiv
  3891                           ;		_output_putch
  3892                           ;		_ser_putch
  3893                           ;		_format_putchar
  3894                           ; This function is called by:
  3895                           ;		_format_xint32
  3896                           ; This function uses a non-reentrant model
  3897                           ; 
  3898                                   psect   text17,class=CODE,space=0,reloc=
                                 2
  3899                           
  3900                           	opt lm
  3901                           	file	"../../../lib/format.c"
  3902                           	line	14
  3903  000000                     	__size_of_format_number	equ	__end_of_format_num
                                 ber-_format_number
  3904                           ;format.c: 10: putchar_fn* putchar_ptr = &format
                                 _putchar;
  3905                           ;format.c: 13: void
  3906                           ;format.c: 14: format_number( unsigned short int
                                  n, unsigned char base, signed char pad ) {
  3907                           	
  3908  000000'                    _format_number:		; BSR set to: ?
  3909                           
  3910                           	opt stack 27
  3911  000000' FFFF               	dw	0FFFFh
  3912                           	line	17
  3913  000002' 0101               	movlb	1	; () banked
  3914  000004' 6F00'              	movwf	(??_format_number+37+0)&0ffh
  3915  000006' 0E00               	movlw	low(0)
  3916  000008' 0101               	movlb	1	; () banked
  3917  00000A' 0101               	movlb	1	; () banked
  3918  00000C' 6F00'              	movwf	((format_number@i))&0ffh
  3919  00000E' 0101               	movlb	1	; () banked
  3920  000010' 5100'              	movf	(??_format_number+37+0)&0ffh,w
  3921                           	line	18
  3922                           ;format.c: 18: char padchar = ' ';
  3923  000012' 0101               	movlb	1	; () banked
  3924  000014' 6F00'              	movwf	(??_format_number+37+0)&0ffh
  3925  000016' 0E20               	movlw	low(020h)
  3926  000018' 0101               	movlb	1	; () banked
  3927  00001A' 0101               	movlb	1	; () banked
  3928  00001C' 6F00'              	movwf	((format_number@padchar))&0ffh
  3929  00001E' 0101               	movlb	1	; () banked
  3930  000020' 5100'              	movf	(??_format_number+37+0)&0ffh,w
  3931                           	line	20
  3932                           ;format.c: 20: if(pad < 0) {
  3933  000022' 0101               	movlb	1	; () banked
  3934  000024' 0101               	movlb	1	; () banked
  3935  000026' AF00'              	btfss	((format_number@pad))&0ffh,7
  3936  000028' EF00' F000'        	goto	u3221
  3937  00002C' EF00' F000'        	goto	u3220
  3938  000030'                    u3221:
  3939  000032' EF00' F000'        	goto	l656
  3940  000036'                    u3220:
  3941                           	line	21
  3942                           ;format.c: 21: pad = -pad;
  3943  000038' 0101               	movlb	1	; () banked
  3944  00003A' 0101               	movlb	1	; () banked
  3945  00003C' 6D00'              	negf	((format_number@pad))&0ffh
  3946                           	line	22
  3947                           ;format.c: 22: padchar = '0';
  3948  00003E' 0101               	movlb	1	; () banked
  3949  000040' 6F00'              	movwf	(??_format_number+37+0)&0ffh
  3950  000042' 0E30               	movlw	low(030h)
  3951  000044' 0101               	movlb	1	; () banked
  3952  000046' 0101               	movlb	1	; () banked
  3953  000048' 6F00'              	movwf	((format_number@padchar))&0ffh
  3954  00004A' 0101               	movlb	1	; () banked
  3955  00004C' 5100'              	movf	(??_format_number+37+0)&0ffh,w
  3956                           	line	23
  3957                           	
  3958  00004E'                    l653:		; BSR set to: ?
  3959                           
  3960                           	line	30
  3961                           ;format.c: 23: }
  3962                           ;format.c: 30: do {
  3963                           	
  3964  00004E'                    l656:		; BSR set to: ?
  3965                           
  3966                           	line	34
  3967                           ;format.c: 34: di = n % base;
  3968  000050' 0101               	movlb	1	; () banked
  3969  000052' 0101               	movlb	1	; () banked
  3970  000054' C002' F002'        	movff	(format_number@base),0+(?___lwmod+02h)
  3971  000058' 0101               	movlb	1	; () banked
  3972  00005A' 0101               	movlb	1	; () banked
  3973  00005C' 6B00'              	clrf	(1+(?___lwmod+02h))&0ffh
  3974  00005E' C000' F000'        	movff	(format_number@n),(?___lwmod)
  3975  000062' C001' F001'        	movff	(format_number@n+1),(?___lwmod+1)
  3976  000066' EC00' F000'        	call	___lwmod	;wreg free
  3977  00006A' 0101               	movlb	1	; () banked
  3978  00006C' 0101               	movlb	1	; () banked
  3979  00006E' 5100'              	movf	(0+?___lwmod)&0ffh,w
  3980  000070' 0101               	movlb	1	; () banked
  3981  000072' 0101               	movlb	1	; () banked
  3982  000074' 6F00'              	movwf	((format_number@di))&0ffh
  3983                           	line	35
  3984                           ;format.c: 35: buf[i++] = (di < 10 ? (unsigned c
                                 har)'0' + di : (unsigned char)'A' + di - 10);
  3985  000076' 0E37               	movlw	low(037h)
  3986  000078' 0101               	movlb	1	; () banked
  3987  00007A' 0101               	movlb	1	; () banked
  3988  00007C' 2500'              	addwf	((format_number@di))&0ffh,w
  3989  00007E' 0101               	movlb	1	; () banked
  3990                           	
  3991  000080' 0101               	movlb	1	; () banked
  3992  000082' 6F00'              	movwf	((_format_number$1343))&0ffh
  3993  000084' 0101               	movlb	1	; () banked
  3994  000086' 6B00'              	clrf	1+((_format_number$1343))&0ffh
  3995  000088' 0E00               	movlw	high(037h)
  3996  00008A' 0101               	movlb	1	; () banked
  3997  00008C' 2300'              	addwfc	1+((_format_number$1343))&0ffh
  3998  00008E' 0E0A               	movlw	(0Ah)&0ffh
  3999  000090' 0101               	movlb	1	; () banked
  4000  000092' 0101               	movlb	1	; () banked
  4001  000094' 6100'              	cpfslt	((format_number@di))&0ffh
  4002  000096' EF00' F000'        	goto	u3231
  4003  00009A' EF00' F000'        	goto	u3230
  4004  00009E'                    u3231:
  4005  0000A0' EF00' F000'        	goto	l500000718
  4006  0000A4'                    u3230:
  4007  0000A6' 0E30               	movlw	low(030h)
  4008  0000A8' 0101               	movlb	1	; () banked
  4009  0000AA' 0101               	movlb	1	; () banked
  4010  0000AC' 2500'              	addwf	((format_number@di))&0ffh,w
  4011  0000AE' 0101               	movlb	1	; () banked
  4012                           	
  4013  0000B0' 0101               	movlb	1	; () banked
  4014  0000B2' 6F00'              	movwf	((_format_number$1343))&0ffh
  4015  0000B4' 0101               	movlb	1	; () banked
  4016  0000B6' 6B00'              	clrf	1+((_format_number$1343))&0ffh
  4017  0000B8' 0E00               	movlw	high(030h)
  4018  0000BA' 0101               	movlb	1	; () banked
  4019  0000BC' 2300'              	addwfc	1+((_format_number$1343))&0ffh
  4020                           	
  4021  0000BE'                    l500000718:		; BSR set to: ?
  4022                           
  4023  0000C0' 0101               	movlb	1	; () banked
  4024  0000C2' 0E00'              	movlw	low(format_number@buf)
  4025  0000C4' 0101               	movlb	1	; () banked
  4026  0000C6' 0101               	movlb	1	; () banked
  4027  0000C8' 2500'              	addwf	((format_number@i))&0ffh,w
  4028  0000CA' 6EE9               	movwf	c:fsr0l
  4029  0000CC' 6AEA               	clrf	1+c:fsr0l
  4030  0000CE' 0101               	movlb	1	; () banked
  4031  0000D0' 0E00'              	movlw	high(format_number@buf)
  4032  0000D2' 22EA               	addwfc	1+c:fsr0l
  4033  0000D4' 0101               	movlb	1	; () banked
  4034  0000D6' C000' FFEF         	movff	(_format_number$1343),indf0
  4035                           
  4036  0000DA' 0101               	movlb	1	; () banked
  4037  0000DC' 0101               	movlb	1	; () banked
  4038  0000DE' 2B00'              	incf	((format_number@i))&0ffh
  4039                           	line	37
  4040                           ;format.c: 37: n /= base;
  4041  0000E0' 0101               	movlb	1	; () banked
  4042  0000E2' 0101               	movlb	1	; () banked
  4043  0000E4' C002' F002'        	movff	(format_number@base),0+(?___lwdiv+02h)
  4044  0000E8' 0101               	movlb	1	; () banked
  4045  0000EA' 0101               	movlb	1	; () banked
  4046  0000EC' 6B00'              	clrf	(1+(?___lwdiv+02h))&0ffh
  4047  0000EE' C000' F000'        	movff	(format_number@n),(?___lwdiv)
  4048  0000F2' C001' F001'        	movff	(format_number@n+1),(?___lwdiv+1)
  4049  0000F6' EC00' F000'        	call	___lwdiv	;wreg free
  4050  0000FA' C000' F000'        	movff	0+?___lwdiv,(format_number@n)
  4051  0000FE' C001' F001'        	movff	1+?___lwdiv,(format_number@n+1)
  4052                           	line	38
  4053                           ;format.c: 38: } while(n > 0);
  4054  000102' 0101               	movlb	1	; () banked
  4055  000104' 0101               	movlb	1	; () banked
  4056  000106' 5100'              	movf	((format_number@n+1))&0ffh,w
  4057  000108' 1100'              	iorwf ((format_number@n))&0ffh,w
  4058                           
  4059  00010A' A4D8               	btfss	status,2
  4060  00010C' EF00' F000'        	goto	u3241
  4061  000110' EF00' F000'        	goto	u3240
  4062  000114'                    u3241:
  4063  000116' EF00' F000'        	goto	l656
  4064  00011A'                    u3240:
  4065                           	
  4066  00011C'                    l655:		; BSR set to: ?
  4067                           
  4068                           	line	40
  4069                           ;format.c: 40: while(pad-- > i) putchar_ptr(padc
                                 har);
  4070  00011C' EF00' F000'        	goto	l657
  4071                           	
  4072  000120'                    l658:		; BSR set to: ?
  4073                           
  4074  000122' C002' F000'        	movff	(format_number@padchar),(?_output_putch)
  4075  000126' D802               	call	u3258
  4076  000128' EF00' F000'        	goto	u3259
  4077  00012C'                    u3258:
  4078  00012E' 0005               	push
  4079                           	
  4080  000130' 6EFA               	movwf	pclath
  4081  000132' 504C               	movf	((c:76)),c,w
  4082  000134' 6EFD               	movwf	tosl
  4083  000136' 504D               	movf	((c:76+1)),c,w
  4084  000138' 6EFE               	movwf	tosl+1
  4085  00013A' 50F8               	movf	tblptru,w
  4086  00013C' 6EFF               	movwf	tosl+2
  4087  00013E' 50FA               	movf	pclath,w
  4088                           	
  4089  000140' 0012               	return
  4090  000142' FFFF               		dw	0FFFFh; errata NOP
  4091  000144'                    u3259:
  4092                           	
  4093  000144'                    l657:		; BSR set to: ?
  4094                           
  4095  000146' 0101               	movlb	1	; () banked
  4096  000148' 0101               	movlb	1	; () banked
  4097  00014A' 5100'              	movf	((format_number@i))&0ffh,w
  4098  00014C' 0A80               	xorlw	80h
  4099  00014E' 0101               	movlb	1	; () banked
  4100  000150' 6F00'              	movwf	(??_format_number+37+0)&0ffh
  4101  000152' 0101               	movlb	1	; () banked
  4102  000154' 0101               	movlb	1	; () banked
  4103  000156' 0700'              	decf	((format_number@pad))&0ffh
  4104  000158' 0101               	movlb	1	; () banked
  4105  00015A' 2900'              	incf	((format_number@pad))&0ffh,w
  4106  00015C' 0A80               	xorlw	80h
  4107  00015E' 0101               	movlb	1	; () banked
  4108  000160' 5D00'              	subwf	(??_format_number+37+0)&0ffh,w
  4109  000162' A0D8               	btfss	status,0
  4110  000164' EF00' F000'        	goto	u3261
  4111  000168' EF00' F000'        	goto	u3260
  4112  00016C'                    u3261:
  4113  00016E' EF00' F000'        	goto	l658
  4114  000172'                    u3260:
  4115                           	
  4116  000174'                    l659:		; BSR set to: ?
  4117                           
  4118                           	line	42
  4119                           ;format.c: 42: for(; i > 0; i--) putchar_ptr((ch
                                 ar)buf[(signed short int)i - 1]);
  4120  000174' 0101               	movlb	1	; () banked
  4121  000176' 0101               	movlb	1	; () banked
  4122  000178' 5100'              	movf	((format_number@i))&0ffh,w
  4123  00017A' 0A80               	xorlw	80h
  4124  00017C' 0F7F               	addlw	-((01h)^80h)
  4125  00017E' B0D8               	btfsc	status,0
  4126  000180' EF00' F000'        	goto	u3271
  4127  000184' EF00' F000'        	goto	u3270
  4128  000188'                    u3271:
  4129  00018A' EF00' F000'        	goto	l660
  4130  00018E'                    u3270:
  4131  000190' EF00' F000'        	goto	l661
  4132                           	
  4133  000194'                    l660:		; BSR set to: ?
  4134                           
  4135  000196' C004' F025'        	movff	(format_number@i),??_format_number+37+0
  4136  00019A' 0EFF               	movlw	-1
  4137  00019C' 0101               	movlb	1	; () banked
  4138  00019E' 2700'              	addwf	(??_format_number+37+0)&0ffh
  4139  0001A0' 0101               	movlb	1	; () banked
  4140  0001A2' 0E00'              	movlw	low(format_number@buf)
  4141  0001A4' 0101               	movlb	1	; () banked
  4142  0001A6' 2500'              	addwf	(??_format_number+37+0)&0ffh,w
  4143  0001A8' 6EE9               	movwf	c:fsr0l
  4144  0001AA' 6AEA               	clrf	1+c:fsr0l
  4145  0001AC' 0101               	movlb	1	; () banked
  4146  0001AE' 0E00'              	movlw	high(format_number@buf)
  4147  0001B0' 22EA               	addwfc	1+c:fsr0l
  4148  0001B2' 50EF               	movf	indf0,w
  4149  0001B4' 0101               	movlb	1	; () banked
  4150  0001B6' 0101               	movlb	1	; () banked
  4151  0001B8' 6F00'              	movwf	((?_output_putch))&0ffh
  4152  0001BA' D802               	call	u3288
  4153  0001BC' EF00' F000'        	goto	u3289
  4154  0001C0'                    u3288:
  4155  0001C2' 0005               	push
  4156                           	
  4157  0001C4' 6EFA               	movwf	pclath
  4158  0001C6' 504C               	movf	((c:76)),c,w
  4159  0001C8' 6EFD               	movwf	tosl
  4160  0001CA' 504D               	movf	((c:76+1)),c,w
  4161  0001CC' 6EFE               	movwf	tosl+1
  4162  0001CE' 50F8               	movf	tblptru,w
  4163  0001D0' 6EFF               	movwf	tosl+2
  4164  0001D2' 50FA               	movf	pclath,w
  4165                           	
  4166  0001D4' 0012               	return
  4167  0001D6' FFFF               		dw	0FFFFh; errata NOP
  4168  0001D8'                    u3289:
  4169  0001DA' 0101               	movlb	1	; () banked
  4170  0001DC' 0101               	movlb	1	; () banked
  4171  0001DE' 0700'              	decf	((format_number@i))&0ffh
  4172  0001E0' 0101               	movlb	1	; () banked
  4173  0001E2' 0101               	movlb	1	; () banked
  4174  0001E4' 5100'              	movf	((format_number@i))&0ffh,w
  4175  0001E6' 0A80               	xorlw	80h
  4176  0001E8' 0F7F               	addlw	-((01h)^80h)
  4177  0001EA' B0D8               	btfsc	status,0
  4178  0001EC' EF00' F000'        	goto	u3291
  4179  0001F0' EF00' F000'        	goto	u3290
  4180  0001F4'                    u3291:
  4181  0001F6' EF00' F000'        	goto	l660
  4182  0001FA'                    u3290:
  4183                           	
  4184  0001FA'                    l661:		; BSR set to: ?
  4185                           
  4186                           	line	44
  4187                           ;format.c: 44: }
  4188  0001FC'                    l652:
  4189                           			; BSR set to: ?
  4190                           
  4191  0001FC' 0012               	return
  4192  0001FE' FFFF               	dw	0FFFFh; errata NOP
  4193                           	opt stack 0
  4194                           GLOBAL __end_of_format_number
  4195  000200'                    	__end_of_format_number:
  4196                           	FNSIZE	_format_number,38,4
  4197                           ; =============== function _format_number ends =
                                 ===========
  4198                           
  4199                           	signat	_format_number,12408
  4200                           	global	_pow
  4201                           	global	??_pow
  4202                           	global	?_pow
  4203                           
  4204                           ; *************** function _pow ****************
                                 *
  4205                           ; Defined at:
  4206                           ;		line 6 in file "/opt/hitech/picc-18/9.66/sour
                                 ces/pow.c"
  4207                           ; Parameters:
  4208                           ;		x              size:   4offs:   0	type: void 
  4209                           ;		y              size:   4offs:   4	type: void 
  4210                           ; Auto variables:
  4211                           ;		sign        	       	type: unsigned char 
  4212                           ;		yi          	       	type: unsigned long 
  4213                           ; Return value:
  4214                           ;		type: unsigned long 
  4215                           ;		size: 4
  4216                           ; Registers used:
  4217                           ;		wreg, fsr0l, fsr0h, status,2, status,0, tblpt
                                 rl, tblptrh, tblptru, tablat, cstack
  4218                           ; Tracked objects:
  4219                           ;		On entry : 0/0
  4220                           ;		On exit  : 0/0
  4221                           ;		Unchanged: 0/0
  4222                           ; Data sizes:
  4223                           ;		Autos:    5
  4224                           ;		Params:   8
  4225                           ;		Temp:     1
  4226                           ;		Total:   14
  4227                           ; This function calls:
  4228                           ;		___flge
  4229                           ;		___fltol
  4230                           ;		___lltofl
  4231                           ;		___flneg
  4232                           ;		_log
  4233                           ;		___flmul
  4234                           ;		_exp
  4235                           ; This function is called by:
  4236                           ;		_format_double
  4237                           ; This function uses a non-reentrant model
  4238                           ; 
  4239                                   psect   text18,class=CODE,space=0,reloc=
                                 2
  4240                           
  4241                           	opt lm
  4242                           	file	"/opt/hitech/picc-18/9.66/sources/pow.c"
  4243                           	line	6
  4244  000000                     	__size_of_pow	equ	__end_of_pow-_pow
  4245                           	
  4246  000000'                    _pow:		; BSR set to: ?
  4247                           
  4248                           	opt stack 27
  4249  000000' FFFF               	dw	0FFFFh
  4250                           	line	7
  4251  000002' 0101               	movlb	1	; () banked
  4252  000004' 6F00'              	movwf	(??_pow+5+0)&0ffh
  4253  000006' 0E00               	movlw	low(0)
  4254  000008' 0101               	movlb	1	; () banked
  4255  00000A' 0101               	movlb	1	; () banked
  4256  00000C' 6F00'              	movwf	((pow@sign))&0ffh
  4257  00000E' 0101               	movlb	1	; () banked
  4258  000010' 5100'              	movf	(??_pow+5+0)&0ffh,w
  4259                           	line	10
  4260  000012' 0101               	movlb	1	; () banked
  4261  000014' EE00' F000'        	lfsr	0,(pow@x)
  4262  000018' 50EE               	movf	postinc0,w
  4263  00001A' 10EE               	iorwf	postinc0,w
  4264  00001C' 10EE               	iorwf	postinc0,w
  4265  00001E' 10EE               	iorwf	postinc0,w
  4266  000020' A4D8               	btfss	status,2
  4267  000022' EF00' F000'        	goto	u3161
  4268  000026' EF00' F000'        	goto	u3160
  4269  00002A'                    u3161:
  4270  00002C' EF00' F000'        	goto	l889
  4271  000030'                    u3160:
  4272                           	line	11
  4273  000032' C004' F004'        	movff	(pow@y),0+(?___flge+04h)
  4274  000036' C005' F005'        	movff	(pow@y+1),1+(?___flge+04h)
  4275  00003A' C006' F006'        	movff	(pow@y+2),2+(?___flge+04h)
  4276  00003E' C007' F007'        	movff	(pow@y+3),3+(?___flge+04h)
  4277  000042' 0E00               	movlw	low(0.0000000000000000)
  4278  000044' 0101               	movlb	1	; () banked
  4279  000046' 0101               	movlb	1	; () banked
  4280  000048' 6F00'              	movwf	((?___flge))&0ffh
  4281  00004A' 0E00               	movlw	high(0.0000000000000000)
  4282  00004C' 0101               	movlb	1	; () banked
  4283  00004E' 6F00'              	movwf	((?___flge+1))&0ffh
  4284  000050' 0E00               	movlw	low highword(0.0000000000000000)
  4285  000052' 0101               	movlb	1	; () banked
  4286  000054' 6F00'              	movwf	((?___flge+2))&0ffh
  4287  000056' 0E00               	movlw	high highword(0.0000000000000000)
  4288  000058' 0101               	movlb	1	; () banked
  4289  00005A' 6F00'              	movwf	((?___flge+3))&0ffh
  4290  00005C' EC00' F000'        	call	___flge	;wreg free
  4291  000060' A0D8               	btfss	status,0
  4292  000062' EF00' F000'        	goto	u3171
  4293  000066' EF00' F000'        	goto	u3170
  4294  00006A'                    u3171:
  4295  00006C' EF00' F000'        	goto	l890
  4296  000070'                    u3170:
  4297                           	line	12
  4298  000072' 0E21               	movlw	low(021h)
  4299  000074' 6E4A               	movwf	((c:74)),c
  4300  000076' 0E00               	movlw	high(021h)
  4301  000078' 6E4B               	movwf	((c:74+1)),c
  4302                           	line	13
  4303                           	
  4304  00007A'                    l890:		; BSR set to: ?
  4305                           
  4306                           	line	14
  4307  00007C' 0E00               	movlw	low(0.0000000000000000)
  4308  00007E' 0101               	movlb	1	; () banked
  4309  000080' 0101               	movlb	1	; () banked
  4310  000082' 6F00'              	movwf	((?_pow))&0ffh
  4311  000084' 0E00               	movlw	high(0.0000000000000000)
  4312  000086' 0101               	movlb	1	; () banked
  4313  000088' 6F00'              	movwf	((?_pow+1))&0ffh
  4314  00008A' 0E00               	movlw	low highword(0.0000000000000000)
  4315  00008C' 0101               	movlb	1	; () banked
  4316  00008E' 6F00'              	movwf	((?_pow+2))&0ffh
  4317  000090' 0E00               	movlw	high highword(0.0000000000000000)
  4318  000092' 0101               	movlb	1	; () banked
  4319  000094' 6F00'              	movwf	((?_pow+3))&0ffh
  4320  000096' EF00' F000'        	goto	l888
  4321                           	line	15
  4322                           	
  4323  00009A'                    l889:		; BSR set to: ?
  4324                           
  4325                           	line	16
  4326  00009C' 0101               	movlb	1	; () banked
  4327  00009E' EE00' F000'        	lfsr	0,(pow@y)
  4328  0000A2' 50EE               	movf	postinc0,w
  4329  0000A4' 10EE               	iorwf	postinc0,w
  4330  0000A6' 10EE               	iorwf	postinc0,w
  4331  0000A8' 10EE               	iorwf	postinc0,w
  4332  0000AA' A4D8               	btfss	status,2
  4333  0000AC' EF00' F000'        	goto	u3181
  4334  0000B0' EF00' F000'        	goto	u3180
  4335  0000B4'                    u3181:
  4336  0000B6' EF00' F000'        	goto	l891
  4337  0000BA'                    u3180:
  4338                           	line	17
  4339  0000BC' 0E00               	movlw	low(1.0000000000000000)
  4340  0000BE' 0101               	movlb	1	; () banked
  4341  0000C0' 0101               	movlb	1	; () banked
  4342  0000C2' 6F00'              	movwf	((?_pow))&0ffh
  4343  0000C4' 0E00               	movlw	high(1.0000000000000000)
  4344  0000C6' 0101               	movlb	1	; () banked
  4345  0000C8' 6F00'              	movwf	((?_pow+1))&0ffh
  4346  0000CA' 0E80               	movlw	low highword(1.0000000000000000)
  4347  0000CC' 0101               	movlb	1	; () banked
  4348  0000CE' 6F00'              	movwf	((?_pow+2))&0ffh
  4349  0000D0' 0E3F               	movlw	high highword(1.0000000000000000)
  4350  0000D2' 0101               	movlb	1	; () banked
  4351  0000D4' 6F00'              	movwf	((?_pow+3))&0ffh
  4352  0000D6' EF00' F000'        	goto	l888
  4353                           	
  4354  0000DA'                    l891:		; BSR set to: ?
  4355                           
  4356                           	line	18
  4357  0000DC' 0101               	movlb	1	; () banked
  4358  0000DE' 0101               	movlb	1	; () banked
  4359  0000E0' AF00'              	btfss	((pow@x+3))&0ffh,7
  4360  0000E2' EF00' F000'        	goto	u3191
  4361  0000E6' EF00' F000'        	goto	u3190
  4362  0000EA'                    u3191:
  4363  0000EC' EF00' F000'        	goto	l892
  4364  0000F0'                    u3190:
  4365                           	line	19
  4366  0000F2' C004' F000'        	movff	(pow@y),(?___fltol)
  4367  0000F6' C005' F001'        	movff	(pow@y+1),(?___fltol+1)
  4368  0000FA' C006' F002'        	movff	(pow@y+2),(?___fltol+2)
  4369  0000FE' C007' F003'        	movff	(pow@y+3),(?___fltol+3)
  4370  000102' EC00' F000'        	call	___fltol	;wreg free
  4371  000106' C000' F001'        	movff	0+?___fltol,(pow@yi)
  4372  00010A' C001' F002'        	movff	1+?___fltol,(pow@yi+1)
  4373  00010E' C002' F003'        	movff	2+?___fltol,(pow@yi+2)
  4374  000112' C003' F004'        	movff	3+?___fltol,(pow@yi+3)
  4375                           	line	20
  4376  000116' C001' F000'        	movff	(pow@yi),(?___lltofl)
  4377  00011A' C002' F001'        	movff	(pow@yi+1),(?___lltofl+1)
  4378  00011E' C003' F002'        	movff	(pow@yi+2),(?___lltofl+2)
  4379  000122' C004' F003'        	movff	(pow@yi+3),(?___lltofl+3)
  4380  000126' EC00' F000'        	call	___lltofl	;wreg free
  4381  00012A' 0101               	movlb	1	; () banked
  4382  00012C' 0101               	movlb	1	; () banked
  4383  00012E' 5100'              	movf	((pow@y+3))&0ffh,w
  4384  000130' 0101               	movlb	1	; () banked
  4385  000132' 0101               	movlb	1	; () banked
  4386  000134' 1900'              	xorwf	(3+?___lltofl)&0ffh,w
  4387  000136' E114               	bnz	u3205
  4388  000138' 0101               	movlb	1	; () banked
  4389  00013A' 0101               	movlb	1	; () banked
  4390  00013C' 5100'              	movf	((pow@y+2))&0ffh,w
  4391  00013E' 0101               	movlb	1	; () banked
  4392  000140' 0101               	movlb	1	; () banked
  4393  000142' 1900'              	xorwf	(2+?___lltofl)&0ffh,w
  4394  000144' E10D               	bnz	u3205
  4395  000146' 0101               	movlb	1	; () banked
  4396  000148' 0101               	movlb	1	; () banked
  4397  00014A' 5100'              	movf	((pow@y+1))&0ffh,w
  4398  00014C' 0101               	movlb	1	; () banked
  4399  00014E' 0101               	movlb	1	; () banked
  4400  000150' 1900'              	xorwf	(1+?___lltofl)&0ffh,w
  4401  000152' E106               	bnz	u3205
  4402  000154' 0101               	movlb	1	; () banked
  4403  000156' 0101               	movlb	1	; () banked
  4404  000158' 5100'              	movf	((pow@y))&0ffh,w
  4405  00015A' 0101               	movlb	1	; () banked
  4406  00015C' 0101               	movlb	1	; () banked
  4407  00015E' 1900'              	xorwf	(0+?___lltofl)&0ffh,w
  4408  000160'                    u3205:
  4409  000160' B4D8               	btfsc	status,2
  4410  000162' EF00' F000'        	goto	u3201
  4411  000166' EF00' F000'        	goto	u3200
  4412  00016A'                    u3201:
  4413  00016C' EF00' F000'        	goto	l893
  4414  000170'                    u3200:
  4415                           	line	21
  4416  000172' 0E21               	movlw	low(021h)
  4417  000174' 6E4A               	movwf	((c:74)),c
  4418  000176' 0E00               	movlw	high(021h)
  4419  000178' 6E4B               	movwf	((c:74+1)),c
  4420                           	line	22
  4421  00017A' 0E00               	movlw	low(0.0000000000000000)
  4422  00017C' 0101               	movlb	1	; () banked
  4423  00017E' 0101               	movlb	1	; () banked
  4424  000180' 6F00'              	movwf	((?_pow))&0ffh
  4425  000182' 0E00               	movlw	high(0.0000000000000000)
  4426  000184' 0101               	movlb	1	; () banked
  4427  000186' 6F00'              	movwf	((?_pow+1))&0ffh
  4428  000188' 0E00               	movlw	low highword(0.0000000000000000)
  4429  00018A' 0101               	movlb	1	; () banked
  4430  00018C' 6F00'              	movwf	((?_pow+2))&0ffh
  4431  00018E' 0E00               	movlw	high highword(0.0000000000000000)
  4432  000190' 0101               	movlb	1	; () banked
  4433  000192' 6F00'              	movwf	((?_pow+3))&0ffh
  4434  000194' EF00' F000'        	goto	l888
  4435                           	line	23
  4436                           	
  4437  000198'                    l893:		; BSR set to: ?
  4438                           
  4439                           	line	24
  4440  00019A' 0101               	movlb	1	; () banked
  4441  00019C' 0101               	movlb	1	; () banked
  4442  00019E' 5100'              	movf	((pow@yi))&0ffh,w
  4443  0001A0' 0B01               	andlw	low(01h)
  4444  0001A2' 0101               	movlb	1	; () banked
  4445  0001A4' 0101               	movlb	1	; () banked
  4446  0001A6' 6F00'              	movwf	((pow@sign))&0ffh
  4447                           	line	25
  4448  0001A8' C000' F000'        	movff	(pow@x),(?___flneg)
  4449  0001AC' C001' F001'        	movff	(pow@x+1),(?___flneg+1)
  4450  0001B0' C002' F002'        	movff	(pow@x+2),(?___flneg+2)
  4451  0001B4' C003' F003'        	movff	(pow@x+3),(?___flneg+3)
  4452  0001B8' EC00' F000'        	call	___flneg	;wreg free
  4453  0001BC' C000' F000'        	movff	0+?___flneg,(pow@x)
  4454  0001C0' C001' F001'        	movff	1+?___flneg,(pow@x+1)
  4455  0001C4' C002' F002'        	movff	2+?___flneg,(pow@x+2)
  4456  0001C8' C003' F003'        	movff	3+?___flneg,(pow@x+3)
  4457                           	line	26
  4458                           	
  4459  0001CC'                    l892:		; BSR set to: ?
  4460                           
  4461                           	line	27
  4462  0001CE' C000' F000'        	movff	(pow@x),(?_log)
  4463  0001D2' C001' F001'        	movff	(pow@x+1),(?_log+1)
  4464  0001D6' C002' F002'        	movff	(pow@x+2),(?_log+2)
  4465  0001DA' C003' F003'        	movff	(pow@x+3),(?_log+3)
  4466  0001DE' EC00' F000'        	call	_log	;wreg free
  4467  0001E2' C000' F000'        	movff	0+?_log,(?___flmul)
  4468  0001E6' C001' F001'        	movff	1+?_log,(?___flmul+1)
  4469  0001EA' C002' F002'        	movff	2+?_log,(?___flmul+2)
  4470  0001EE' C003' F003'        	movff	3+?_log,(?___flmul+3)
  4471  0001F2' C004' F004'        	movff	(pow@y),0+(?___flmul+04h)
  4472  0001F6' C005' F005'        	movff	(pow@y+1),1+(?___flmul+04h)
  4473  0001FA' C006' F006'        	movff	(pow@y+2),2+(?___flmul+04h)
  4474  0001FE' C007' F007'        	movff	(pow@y+3),3+(?___flmul+04h)
  4475  000202' EC00' F000'        	call	___flmul	;wreg free
  4476  000206' C000' F000'        	movff	0+?___flmul,(?_exp)
  4477  00020A' C001' F001'        	movff	1+?___flmul,(?_exp+1)
  4478  00020E' C002' F002'        	movff	2+?___flmul,(?_exp+2)
  4479  000212' C003' F003'        	movff	3+?___flmul,(?_exp+3)
  4480  000216' EC00' F000'        	call	_exp	;wreg free
  4481  00021A' C000' F000'        	movff	0+?_exp,(pow@x)
  4482  00021E' C001' F001'        	movff	1+?_exp,(pow@x+1)
  4483  000222' C002' F002'        	movff	2+?_exp,(pow@x+2)
  4484  000226' C003' F003'        	movff	3+?_exp,(pow@x+3)
  4485                           	line	28
  4486  00022A' 0101               	movlb	1	; () banked
  4487  00022C' 0101               	movlb	1	; () banked
  4488  00022E' 5100'              	movf	((pow@sign))&0ffh,w
  4489  000230' B4D8               	btfsc	status,2
  4490  000232' EF00' F000'        	goto	u3211
  4491  000236' EF00' F000'        	goto	u3210
  4492  00023A'                    u3211:
  4493  00023C' EF00' F000'        	goto	l894
  4494  000240'                    u3210:
  4495                           	line	29
  4496  000242' C000' F000'        	movff	(pow@x),(?___flneg)
  4497  000246' C001' F001'        	movff	(pow@x+1),(?___flneg+1)
  4498  00024A' C002' F002'        	movff	(pow@x+2),(?___flneg+2)
  4499  00024E' C003' F003'        	movff	(pow@x+3),(?___flneg+3)
  4500  000252' EC00' F000'        	call	___flneg	;wreg free
  4501  000256' C000' F000'        	movff	0+?___flneg,(?_pow)
  4502  00025A' C001' F001'        	movff	1+?___flneg,(?_pow+1)
  4503  00025E' C002' F002'        	movff	2+?___flneg,(?_pow+2)
  4504  000262' C003' F003'        	movff	3+?___flneg,(?_pow+3)
  4505  000266' EF00' F000'        	goto	l888
  4506                           	
  4507  00026A'                    l894:		; BSR set to: ?
  4508                           
  4509                           	line	30
  4510  00026C' C000' F000'        	movff	(pow@x),(?_pow)
  4511  000270' C001' F001'        	movff	(pow@x+1),(?_pow+1)
  4512  000274' C002' F002'        	movff	(pow@x+2),(?_pow+2)
  4513  000278' C003' F003'        	movff	(pow@x+3),(?_pow+3)
  4514  00027C' EF00' F000'        	goto	l888
  4515                           	line	31
  4516  000280'                    l888:
  4517                           			; BSR set to: ?
  4518                           
  4519  000282' 0012               	return
  4520  000284' FFFF               	dw	0FFFFh; errata NOP
  4521                           	opt stack 0
  4522                           GLOBAL __end_of_pow
  4523  000286'                    	__end_of_pow:
  4524                           	FNSIZE	_pow,6,8
  4525                           ; =============== function _pow ends ===========
                                 =
  4526                           
  4527                           	signat	_pow,8316
  4528                           	global	_exp
  4529                           	global	??_exp
  4530                           	global	?_exp
  4531                           
  4532                           ; *************** function _exp ****************
                                 *
  4533                           ; Defined at:
  4534                           ;		line 13 in file "/opt/hitech/picc-18/9.66/sou
                                 rces/exp.c"
  4535                           ; Parameters:
  4536                           ;		x              size:   4offs:   0	type: unsig
                                 ned long 
  4537                           ; Auto variables:
  4538                           ;		sign        	       	type: unsigned char 
  4539                           ;		exp         	       	type: int 
  4540                           ; Return value:
  4541                           ;		type: int 
  4542                           ;		size: 4
  4543                           ; Registers used:
  4544                           ;		wreg, fsr0l, fsr0h, status,2, status,0, tblpt
                                 rl, tblptrh, tblptru, tablat, cstack
  4545                           ; Tracked objects:
  4546                           ;		On entry : 0/0
  4547                           ;		On exit  : 0/0
  4548                           ;		Unchanged: 0/0
  4549                           ; Data sizes:
  4550                           ;		Autos:    7
  4551                           ;		Params:   4
  4552                           ;		Temp:     0
  4553                           ;		Total:   11
  4554                           ; This function calls:
  4555                           ;		___flge
  4556                           ;		___flneg
  4557                           ;		___asflmul
  4558                           ;		_floor
  4559                           ;		___fltol
  4560                           ;		___awtofl
  4561                           ;		___asflsub
  4562                           ;		_eval_poly
  4563                           ;		_ldexp
  4564                           ;		___fldiv
  4565                           ; This function is called by:
  4566                           ;		_pow
  4567                           ; This function uses a non-reentrant model
  4568                           ; 
  4569                                   psect   text19,class=CODE,space=0,reloc=
                                 2
  4570                           
  4571                           	opt lm
  4572                           	file	"/opt/hitech/picc-18/9.66/sources/exp.c"
  4573                           	line	13
  4574  000000                     	__size_of_exp	equ	__end_of_exp-_exp
  4575                           	
  4576  000000'                    _exp:		; BSR set to: ?
  4577                           
  4578                           	opt stack 26
  4579  000000' FFFF               	dw	0FFFFh
  4580                           	line	31
  4581  000002' 0101               	movlb	1	; () banked
  4582  000004' EE00' F000'        	lfsr	0,(exp@x)
  4583  000008' 50EE               	movf	postinc0,w
  4584  00000A' 10EE               	iorwf	postinc0,w
  4585  00000C' 10EE               	iorwf	postinc0,w
  4586  00000E' 10EE               	iorwf	postinc0,w
  4587  000010' A4D8               	btfss	status,2
  4588  000012' EF00' F000'        	goto	u3321
  4589  000016' EF00' F000'        	goto	u3320
  4590  00001A'                    u3321:
  4591  00001C' EF00' F000'        	goto	l1306
  4592  000020'                    u3320:
  4593                           	line	32
  4594  000022' 0E00               	movlw	low(1.0000000000000000)
  4595  000024' 0101               	movlb	1	; () banked
  4596  000026' 0101               	movlb	1	; () banked
  4597  000028' 6F00'              	movwf	((?_exp))&0ffh
  4598  00002A' 0E00               	movlw	high(1.0000000000000000)
  4599  00002C' 0101               	movlb	1	; () banked
  4600  00002E' 6F00'              	movwf	((?_exp+1))&0ffh
  4601  000030' 0E80               	movlw	low highword(1.0000000000000000)
  4602  000032' 0101               	movlb	1	; () banked
  4603  000034' 6F00'              	movwf	((?_exp+2))&0ffh
  4604  000036' 0E3F               	movlw	high highword(1.0000000000000000)
  4605  000038' 0101               	movlb	1	; () banked
  4606  00003A' 6F00'              	movwf	((?_exp+3))&0ffh
  4607  00003C' EF00' F000'        	goto	l1305
  4608                           	
  4609  000040'                    l1306:		; BSR set to: ?
  4610                           
  4611                           	line	34
  4612  000042' C000' F004'        	movff	(exp@x),0+(?___flge+04h)
  4613  000046' C001' F005'        	movff	(exp@x+1),1+(?___flge+04h)
  4614  00004A' C002' F006'        	movff	(exp@x+2),2+(?___flge+04h)
  4615  00004E' C003' F007'        	movff	(exp@x+3),3+(?___flge+04h)
  4616  000052' 0E18               	movlw	low(709.78271289338397)
  4617  000054' 0101               	movlb	1	; () banked
  4618  000056' 0101               	movlb	1	; () banked
  4619  000058' 6F00'              	movwf	((?___flge))&0ffh
  4620  00005A' 0E72               	movlw	high(709.78271289338397)
  4621  00005C' 0101               	movlb	1	; () banked
  4622  00005E' 6F00'              	movwf	((?___flge+1))&0ffh
  4623  000060' 0E31               	movlw	low highword(709.78271289338397)
  4624  000062' 0101               	movlb	1	; () banked
  4625  000064' 6F00'              	movwf	((?___flge+2))&0ffh
  4626  000066' 0E44               	movlw	high highword(709.78271289338397)
  4627  000068' 0101               	movlb	1	; () banked
  4628  00006A' 6F00'              	movwf	((?___flge+3))&0ffh
  4629  00006C' EC00' F000'        	call	___flge	;wreg free
  4630  000070' B0D8               	btfsc	status,0
  4631  000072' EF00' F000'        	goto	u3331
  4632  000076' EF00' F000'        	goto	u3330
  4633  00007A'                    u3331:
  4634  00007C' EF00' F000'        	goto	l1307
  4635  000080'                    u3330:
  4636                           	line	35
  4637  000082' 0E22               	movlw	low(022h)
  4638  000084' 6E4A               	movwf	((c:74)),c
  4639  000086' 0E00               	movlw	high(022h)
  4640  000088' 6E4B               	movwf	((c:74+1)),c
  4641                           	line	36
  4642  00008A' 0EFF               	movlw	low(3.4028234699999998e+38)
  4643  00008C' 0101               	movlb	1	; () banked
  4644  00008E' 0101               	movlb	1	; () banked
  4645  000090' 6F00'              	movwf	((?_exp))&0ffh
  4646  000092' 0EFF               	movlw	high(3.4028234699999998e+38)
  4647  000094' 0101               	movlb	1	; () banked
  4648  000096' 6F00'              	movwf	((?_exp+1))&0ffh
  4649  000098' 0E7F               	movlw	low highword(3.4028234699999998e+38)
  4650  00009A' 0101               	movlb	1	; () banked
  4651  00009C' 6F00'              	movwf	((?_exp+2))&0ffh
  4652  00009E' 0E7F               	movlw	high highword(3.4028234699999998e+38)
  4653  0000A0' 0101               	movlb	1	; () banked
  4654  0000A2' 6F00'              	movwf	((?_exp+3))&0ffh
  4655  0000A4' EF00' F000'        	goto	l1305
  4656                           	line	37
  4657                           	
  4658  0000A8'                    l1307:		; BSR set to: ?
  4659                           
  4660                           	line	38
  4661  0000AA' 0E87               	movlw	low(-745.13321910194111)
  4662  0000AC' 0101               	movlb	1	; () banked
  4663  0000AE' 0101               	movlb	1	; () banked
  4664  0000B0' 6F00'              	movwf	(0+(?___flge+04h))&0ffh
  4665  0000B2' 0E48               	movlw	high(-745.13321910194111)
  4666  0000B4' 0101               	movlb	1	; () banked
  4667  0000B6' 6F00'              	movwf	(1+(?___flge+04h))&0ffh
  4668  0000B8' 0E3A               	movlw	low highword(-745.13321910194111)
  4669  0000BA' 0101               	movlb	1	; () banked
  4670  0000BC' 6F00'              	movwf	(2+(?___flge+04h))&0ffh
  4671  0000BE' 0EC4               	movlw	high highword(-745.13321910194111)
  4672  0000C0' 0101               	movlb	1	; () banked
  4673  0000C2' 6F00'              	movwf	(3+(?___flge+04h))&0ffh
  4674  0000C4' C000' F000'        	movff	(exp@x),(?___flge)
  4675  0000C8' C001' F001'        	movff	(exp@x+1),(?___flge+1)
  4676  0000CC' C002' F002'        	movff	(exp@x+2),(?___flge+2)
  4677  0000D0' C003' F003'        	movff	(exp@x+3),(?___flge+3)
  4678  0000D4' EC00' F000'        	call	___flge	;wreg free
  4679  0000D8' B0D8               	btfsc	status,0
  4680  0000DA' EF00' F000'        	goto	u3341
  4681  0000DE' EF00' F000'        	goto	u3340
  4682  0000E2'                    u3341:
  4683  0000E4' EF00' F000'        	goto	l1308
  4684  0000E8'                    u3340:
  4685                           	line	39
  4686  0000EA' 0E22               	movlw	low(022h)
  4687  0000EC' 6E4A               	movwf	((c:74)),c
  4688  0000EE' 0E00               	movlw	high(022h)
  4689  0000F0' 6E4B               	movwf	((c:74+1)),c
  4690                           	line	40
  4691  0000F2' 0E00               	movlw	low(0.0000000000000000)
  4692  0000F4' 0101               	movlb	1	; () banked
  4693  0000F6' 0101               	movlb	1	; () banked
  4694  0000F8' 6F00'              	movwf	((?_exp))&0ffh
  4695  0000FA' 0E00               	movlw	high(0.0000000000000000)
  4696  0000FC' 0101               	movlb	1	; () banked
  4697  0000FE' 6F00'              	movwf	((?_exp+1))&0ffh
  4698  000100' 0E00               	movlw	low highword(0.0000000000000000)
  4699  000102' 0101               	movlb	1	; () banked
  4700  000104' 6F00'              	movwf	((?_exp+2))&0ffh
  4701  000106' 0E00               	movlw	high highword(0.0000000000000000)
  4702  000108' 0101               	movlb	1	; () banked
  4703  00010A' 6F00'              	movwf	((?_exp+3))&0ffh
  4704  00010C' EF00' F000'        	goto	l1305
  4705                           	line	41
  4706                           	
  4707  000110'                    l1308:		; BSR set to: ?
  4708                           
  4709                           	line	43
  4710  000112' 0101               	movlb	1	; () banked
  4711  000114' 0101               	movlb	1	; () banked
  4712  000116' BF00'              	btfsc	((exp@x+3))&0ffh,7
  4713  000118' EF00' F000'        	goto	u3351
  4714  00011C' EF00' F000'        	goto	u3350
  4715  000120'                    u3351:
  4716  000122' 0E01               	movlw	1
  4717  000124' EF00' F000'        	goto	u3356
  4718  000128'                    u3350:
  4719  00012A' 0E00               	movlw	0
  4720  00012C'                    u3356:
  4721  00012E' 0101               	movlb	1	; () banked
  4722  000130' 0101               	movlb	1	; () banked
  4723  000132' 6F00'              	movwf	((exp@sign))&0ffh
  4724                           	line	44
  4725  000134' 0101               	movlb	1	; () banked
  4726  000136' 0101               	movlb	1	; () banked
  4727  000138' 5100'              	movf	((exp@sign))&0ffh,w
  4728  00013A' B4D8               	btfsc	status,2
  4729  00013C' EF00' F000'        	goto	u3361
  4730  000140' EF00' F000'        	goto	u3360
  4731  000144'                    u3361:
  4732  000146' EF00' F000'        	goto	l1309
  4733  00014A'                    u3360:
  4734                           	line	45
  4735  00014C' C000' F000'        	movff	(exp@x),(?___flneg)
  4736  000150' C001' F001'        	movff	(exp@x+1),(?___flneg+1)
  4737  000154' C002' F002'        	movff	(exp@x+2),(?___flneg+2)
  4738  000158' C003' F003'        	movff	(exp@x+3),(?___flneg+3)
  4739  00015C' EC00' F000'        	call	___flneg	;wreg free
  4740  000160' C000' F000'        	movff	0+?___flneg,(exp@x)
  4741  000164' C001' F001'        	movff	1+?___flneg,(exp@x+1)
  4742  000168' C002' F002'        	movff	2+?___flneg,(exp@x+2)
  4743  00016C' C003' F003'        	movff	3+?___flneg,(exp@x+3)
  4744                           	
  4745  000170'                    l1309:		; BSR set to: ?
  4746                           
  4747                           	line	46
  4748  000172' 0E3B               	movlw	low(1.4426950408999999)
  4749  000174' 0101               	movlb	1	; () banked
  4750  000176' 0101               	movlb	1	; () banked
  4751  000178' 6F00'              	movwf	(0+(?___asflmul+02h))&0ffh
  4752  00017A' 0EAA               	movlw	high(1.4426950408999999)
  4753  00017C' 0101               	movlb	1	; () banked
  4754  00017E' 6F00'              	movwf	(1+(?___asflmul+02h))&0ffh
  4755  000180' 0EB8               	movlw	low highword(1.4426950408999999)
  4756  000182' 0101               	movlb	1	; () banked
  4757  000184' 6F00'              	movwf	(2+(?___asflmul+02h))&0ffh
  4758  000186' 0E3F               	movlw	high highword(1.4426950408999999)
  4759  000188' 0101               	movlb	1	; () banked
  4760  00018A' 6F00'              	movwf	(3+(?___asflmul+02h))&0ffh
  4761  00018C' 0101               	movlb	1	; () banked
  4762  00018E' 0E00'              	movlw	low(exp@x)
  4763  000190' 0101               	movlb	1	; () banked
  4764  000192' 0101               	movlb	1	; () banked
  4765  000194' 6F00'              	movwf	((?___asflmul))&0ffh
  4766  000196' 0101               	movlb	1	; () banked
  4767  000198' 0E00'              	movlw	high(exp@x)
  4768  00019A' 0101               	movlb	1	; () banked
  4769  00019C' 6F00'              	movwf	((?___asflmul+1))&0ffh
  4770  00019E' EC00' F000'        	call	___asflmul	;wreg free
  4771                           	line	47
  4772  0001A2' C000' F000'        	movff	(exp@x),(?_floor)
  4773  0001A6' C001' F001'        	movff	(exp@x+1),(?_floor+1)
  4774  0001AA' C002' F002'        	movff	(exp@x+2),(?_floor+2)
  4775  0001AE' C003' F003'        	movff	(exp@x+3),(?_floor+3)
  4776  0001B2' EC00' F000'        	call	_floor	;wreg free
  4777  0001B6' C000' F000'        	movff	0+?_floor,(?___fltol)
  4778  0001BA' C001' F001'        	movff	1+?_floor,(?___fltol+1)
  4779  0001BE' C002' F002'        	movff	2+?_floor,(?___fltol+2)
  4780  0001C2' C003' F003'        	movff	3+?_floor,(?___fltol+3)
  4781  0001C6' EC00' F000'        	call	___fltol	;wreg free
  4782  0001CA' C000' F005'        	movff	0+?___fltol,(exp@exp)
  4783  0001CE' C001' F006'        	movff	1+?___fltol,(exp@exp+1)
  4784                           	line	48
  4785  0001D2' C005' F000'        	movff	(exp@exp),(?___awtofl)
  4786  0001D6' C006' F001'        	movff	(exp@exp+1),(?___awtofl+1)
  4787  0001DA' EC00' F000'        	call	___awtofl	;wreg free
  4788  0001DE' C000' F000'        	movff	0+?___awtofl,(_exp$1357)
  4789  0001E2' C001' F001'        	movff	1+?___awtofl,(_exp$1357+1)
  4790  0001E6' C002' F002'        	movff	2+?___awtofl,(_exp$1357+2)
  4791  0001EA' C003' F003'        	movff	3+?___awtofl,(_exp$1357+3)
  4792  0001EE' C000' F002'        	movff	(_exp$1357),0+(?___asflsub+02h)
  4793  0001F2' C001' F003'        	movff	(_exp$1357+1),1+(?___asflsub+02h)
  4794  0001F6' C002' F004'        	movff	(_exp$1357+2),2+(?___asflsub+02h)
  4795  0001FA' C003' F005'        	movff	(_exp$1357+3),3+(?___asflsub+02h)
  4796  0001FE' 0101               	movlb	1	; () banked
  4797  000200' 0E00'              	movlw	low(exp@x)
  4798  000202' 0101               	movlb	1	; () banked
  4799  000204' 0101               	movlb	1	; () banked
  4800  000206' 6F00'              	movwf	((?___asflsub))&0ffh
  4801  000208' 0101               	movlb	1	; () banked
  4802  00020A' 0E00'              	movlw	high(exp@x)
  4803  00020C' 0101               	movlb	1	; () banked
  4804  00020E' 6F00'              	movwf	((?___asflsub+1))&0ffh
  4805  000210' EC00' F000'        	call	___asflsub	;wreg free
  4806                           	line	49
  4807  000214' 0E09               	movlw	low(09h)
  4808  000216' 0101               	movlb	1	; () banked
  4809  000218' 0101               	movlb	1	; () banked
  4810  00021A' 6F00'              	movwf	(0+(?_eval_poly+06h))&0ffh
  4811  00021C' 0E00               	movlw	high(09h)
  4812  00021E' 0101               	movlb	1	; () banked
  4813  000220' 6F00'              	movwf	(1+(?_eval_poly+06h))&0ffh
  4814  000222' 0E00'              	movlw	low(F65)
  4815  000224' 0101               	movlb	1	; () banked
  4816  000226' 0101               	movlb	1	; () banked
  4817  000228' 6F00'              	movwf	(0+(?_eval_poly+04h))&0ffh
  4818  00022A' 0E00'              	movlw	high(F65)
  4819  00022C' 0101               	movlb	1	; () banked
  4820  00022E' 6F00'              	movwf	(1+(?_eval_poly+04h))&0ffh
  4821  000230' C000' F000'        	movff	(exp@x),(?_eval_poly)
  4822  000234' C001' F001'        	movff	(exp@x+1),(?_eval_poly+1)
  4823  000238' C002' F002'        	movff	(exp@x+2),(?_eval_poly+2)
  4824  00023C' C003' F003'        	movff	(exp@x+3),(?_eval_poly+3)
  4825  000240' EC00' F000'        	call	_eval_poly	;wreg free
  4826  000244' C000' F000'        	movff	0+?_eval_poly,(?_ldexp)
  4827  000248' C001' F001'        	movff	1+?_eval_poly,(?_ldexp+1)
  4828  00024C' C002' F002'        	movff	2+?_eval_poly,(?_ldexp+2)
  4829  000250' C003' F003'        	movff	3+?_eval_poly,(?_ldexp+3)
  4830  000254' C005' F004'        	movff	(exp@exp),0+(?_ldexp+04h)
  4831  000258' C006' F005'        	movff	(exp@exp+1),1+(?_ldexp+04h)
  4832  00025C' EC00' F000'        	call	_ldexp	;wreg free
  4833  000260' C000' F000'        	movff	0+?_ldexp,(exp@x)
  4834  000264' C001' F001'        	movff	1+?_ldexp,(exp@x+1)
  4835  000268' C002' F002'        	movff	2+?_ldexp,(exp@x+2)
  4836  00026C' C003' F003'        	movff	3+?_ldexp,(exp@x+3)
  4837                           	line	50
  4838  000270' 0101               	movlb	1	; () banked
  4839  000272' 0101               	movlb	1	; () banked
  4840  000274' 5100'              	movf	((exp@sign))&0ffh,w
  4841  000276' B4D8               	btfsc	status,2
  4842  000278' EF00' F000'        	goto	u3371
  4843  00027C' EF00' F000'        	goto	u3370
  4844  000280'                    u3371:
  4845  000282' EF00' F000'        	goto	l1310
  4846  000286'                    u3370:
  4847                           	line	52
  4848  000288' 0101               	movlb	1	; () banked
  4849  00028A' EE00' F000'        	lfsr	0,(exp@x)
  4850  00028E' 0EFF               	movlw	low((3.4028234699999998e+38))
  4851  000290' 18EE               	xorwf	postinc0,w
  4852  000292' 0EFF               	movlw	high((3.4028234699999998e+38))
  4853  000294' B4D8               	btfsc	status,2
  4854  000296' 18EE               	xorwf	postinc0,w
  4855  000298' 0E7F               	movlw	low highword((3.4028234699999998e+38))
  4856  00029A' B4D8               	btfsc	status,2
  4857  00029C' 18EE               	xorwf	postinc0,w
  4858  00029E' 0E7F               	movlw	high highword((3.4028234699999998e+38))
  4859  0002A0' B4D8               	btfsc	status,2
  4860  0002A2' 18EE               	xorwf	postinc0,w
  4861  0002A4' A4D8               	btfss	status,2
  4862  0002A6' EF00' F000'        	goto	u3381
  4863  0002AA' EF00' F000'        	goto	u3380
  4864  0002AE'                    u3381:
  4865  0002B0' EF00' F000'        	goto	l1311
  4866  0002B4'                    u3380:
  4867                           	line	53
  4868  0002B6' 0E00               	movlw	low(0.0000000000000000)
  4869  0002B8' 0101               	movlb	1	; () banked
  4870  0002BA' 0101               	movlb	1	; () banked
  4871  0002BC' 6F00'              	movwf	((?_exp))&0ffh
  4872  0002BE' 0E00               	movlw	high(0.0000000000000000)
  4873  0002C0' 0101               	movlb	1	; () banked
  4874  0002C2' 6F00'              	movwf	((?_exp+1))&0ffh
  4875  0002C4' 0E00               	movlw	low highword(0.0000000000000000)
  4876  0002C6' 0101               	movlb	1	; () banked
  4877  0002C8' 6F00'              	movwf	((?_exp+2))&0ffh
  4878  0002CA' 0E00               	movlw	high highword(0.0000000000000000)
  4879  0002CC' 0101               	movlb	1	; () banked
  4880  0002CE' 6F00'              	movwf	((?_exp+3))&0ffh
  4881  0002D0' EF00' F000'        	goto	l1305
  4882                           	
  4883  0002D4'                    l1311:		; BSR set to: ?
  4884                           
  4885                           	line	54
  4886  0002D6' C000' F004'        	movff	(exp@x),0+(?___fldiv+04h)
  4887  0002DA' C001' F005'        	movff	(exp@x+1),1+(?___fldiv+04h)
  4888  0002DE' C002' F006'        	movff	(exp@x+2),2+(?___fldiv+04h)
  4889  0002E2' C003' F007'        	movff	(exp@x+3),3+(?___fldiv+04h)
  4890  0002E6' 0E00               	movlw	low(1.0000000000000000)
  4891  0002E8' 0101               	movlb	1	; () banked
  4892  0002EA' 0101               	movlb	1	; () banked
  4893  0002EC' 6F00'              	movwf	((?___fldiv))&0ffh
  4894  0002EE' 0E00               	movlw	high(1.0000000000000000)
  4895  0002F0' 0101               	movlb	1	; () banked
  4896  0002F2' 6F00'              	movwf	((?___fldiv+1))&0ffh
  4897  0002F4' 0E80               	movlw	low highword(1.0000000000000000)
  4898  0002F6' 0101               	movlb	1	; () banked
  4899  0002F8' 6F00'              	movwf	((?___fldiv+2))&0ffh
  4900  0002FA' 0E3F               	movlw	high highword(1.0000000000000000)
  4901  0002FC' 0101               	movlb	1	; () banked
  4902  0002FE' 6F00'              	movwf	((?___fldiv+3))&0ffh
  4903  000300' EC00' F000'        	call	___fldiv	;wreg free
  4904  000304' C000' F000'        	movff	0+?___fldiv,(?_exp)
  4905  000308' C001' F001'        	movff	1+?___fldiv,(?_exp+1)
  4906  00030C' C002' F002'        	movff	2+?___fldiv,(?_exp+2)
  4907  000310' C003' F003'        	movff	3+?___fldiv,(?_exp+3)
  4908  000314' EF00' F000'        	goto	l1305
  4909                           	line	55
  4910                           	
  4911  000318'                    l1310:		; BSR set to: ?
  4912                           
  4913                           	line	56
  4914  00031A' C000' F000'        	movff	(exp@x),(?_exp)
  4915  00031E' C001' F001'        	movff	(exp@x+1),(?_exp+1)
  4916  000322' C002' F002'        	movff	(exp@x+2),(?_exp+2)
  4917  000326' C003' F003'        	movff	(exp@x+3),(?_exp+3)
  4918  00032A' EF00' F000'        	goto	l1305
  4919                           	line	57
  4920  00032E'                    l1305:
  4921                           			; BSR set to: ?
  4922                           
  4923  000330' 0012               	return
  4924  000332' FFFF               	dw	0FFFFh; errata NOP
  4925                           	opt stack 0
  4926                           GLOBAL __end_of_exp
  4927  000334'                    	__end_of_exp:
  4928                           	FNSIZE	_exp,7,4
  4929                           ; =============== function _exp ends ===========
                                 =
  4930                           
  4931                           	signat	_exp,4220
  4932                           	global	___lltofl
  4933                           	global	??___lltofl
  4934                           	global	?___lltofl
  4935                           
  4936                           ; *************** function ___lltofl ***********
                                 ******
  4937                           ; Defined at:
  4938                           ;		line 16 in file "/opt/hitech/picc-18/9.66/sou
                                 rces/lltofl.c"
  4939                           ; Parameters:
  4940                           ;		c              size:   4offs:   0	type: unsig
                                 ned long 
  4941                           ; Auto variables:
  4942                           ;		exp         	       	type: unsigned char 
  4943                           ;		f1          	       	type: unsigned char 
  4944                           ; Return value:
  4945                           ;		type: unsigned char 
  4946                           ;		size: 4
  4947                           ; Registers used:
  4948                           ;		wreg, fsr0l, fsr0h, status,2, status,0, cstac
                                 k
  4949                           ; Tracked objects:
  4950                           ;		On entry : 0/0
  4951                           ;		On exit  : 0/0
  4952                           ;		Unchanged: 0/0
  4953                           ; Data sizes:
  4954                           ;		Autos:    5
  4955                           ;		Params:   4
  4956                           ;		Temp:     1
  4957                           ;		Total:   10
  4958                           ; This function calls:
  4959                           ;		___flpack
  4960                           ; This function is called by:
  4961                           ;		_pow
  4962                           ; This function uses a non-reentrant model
  4963                           ; 
  4964                                   psect   text20,class=CODE,space=0,reloc=
                                 2
  4965                           
  4966                           	opt lm
  4967                           	file	"/opt/hitech/picc-18/9.66/sources/lltofl.c
                                 "
  4968                           	line	16
  4969  000000                     	__size_of___lltofl	equ	__end_of___lltofl-___llt
                                 ofl
  4970                           	
  4971  000000'                    ___lltofl:		; BSR set to: ?
  4972                           
  4973                           	opt stack 26
  4974  000000' FFFF               	dw	0FFFFh
  4975                           	line	20
  4976  000002' 0101               	movlb	1	; () banked
  4977  000004' 5100'              	movf	((___lltofl@c+3))&0ffh,w
  4978  000006' 1100'              	iorwf ((___lltofl@c))&0ffh,w
  4979  000008' 1100'              	iorwf ((___lltofl@c+1))&0ffh,w
  4980  00000A' 1100'              	iorwf ((___lltofl@c+2))&0ffh,w
  4981                           
  4982  00000C' A4D8               	btfss	status,2
  4983  00000E' EF00' F000'        	goto	u3391
  4984  000012' EF00' F000'        	goto	u3390
  4985  000016'                    u3391:
  4986  000018' EF00' F000'        	goto	l1205
  4987  00001C'                    u3390:
  4988                           	line	21
  4989  00001E' 0E00               	movlw	low(0.0000000000000000)
  4990  000020' 0101               	movlb	1	; () banked
  4991  000022' 0101               	movlb	1	; () banked
  4992  000024' 6F00'              	movwf	((?___lltofl))&0ffh
  4993  000026' 0E00               	movlw	high(0.0000000000000000)
  4994  000028' 0101               	movlb	1	; () banked
  4995  00002A' 6F00'              	movwf	((?___lltofl+1))&0ffh
  4996  00002C' 0E00               	movlw	low highword(0.0000000000000000)
  4997  00002E' 0101               	movlb	1	; () banked
  4998  000030' 6F00'              	movwf	((?___lltofl+2))&0ffh
  4999  000032' 0E00               	movlw	high highword(0.0000000000000000)
  5000  000034' 0101               	movlb	1	; () banked
  5001  000036' 6F00'              	movwf	((?___lltofl+3))&0ffh
  5002  000038' EF00' F000'        	goto	l1204
  5003                           	
  5004  00003C'                    l1205:		; BSR set to: ?
  5005                           
  5006                           	line	22
  5007  00003E' 0101               	movlb	1	; () banked
  5008  000040' 6F00'              	movwf	(??___lltofl+5+0)&0ffh
  5009  000042' 0E96               	movlw	low(096h)
  5010  000044' 0101               	movlb	1	; () banked
  5011  000046' 0101               	movlb	1	; () banked
  5012  000048' 6F00'              	movwf	((___lltofl@exp))&0ffh
  5013  00004A' 0101               	movlb	1	; () banked
  5014  00004C' 5100'              	movf	(??___lltofl+5+0)&0ffh,w
  5015                           	line	23
  5016  00004E' C000' F001'        	movff	(___lltofl@c),(___lltofl@f1)
  5017  000052' C001' F002'        	movff	(___lltofl@c+1),(___lltofl@f1+1)
  5018  000056' C002' F003'        	movff	(___lltofl@c+2),(___lltofl@f1+2)
  5019  00005A' C003' F004'        	movff	(___lltofl@c+3),(___lltofl@f1+3)
  5020                           	line	24
  5021  00005E' C000' F002'        	movff	(___lltofl@exp),0+(?___flpack+02h)
  5022  000062' 0101               	movlb	1	; () banked
  5023  000064' 0E00'              	movlw	low(___lltofl@f1)
  5024  000066' 0101               	movlb	1	; () banked
  5025  000068' 0101               	movlb	1	; () banked
  5026  00006A' 6F00'              	movwf	((?___flpack))&0ffh
  5027  00006C' 0101               	movlb	1	; () banked
  5028  00006E' 0E00'              	movlw	high(___lltofl@f1)
  5029  000070' 0101               	movlb	1	; () banked
  5030  000072' 6F00'              	movwf	((?___flpack+1))&0ffh
  5031  000074' EC00' F000'        	call	___flpack	;wreg free
  5032                           	line	25
  5033  000078' C001' F000'        	movff	(___lltofl@f1),(?___lltofl)
  5034  00007C' C002' F001'        	movff	(___lltofl@f1+1),(?___lltofl+1)
  5035  000080' C003' F002'        	movff	(___lltofl@f1+2),(?___lltofl+2)
  5036  000084' C004' F003'        	movff	(___lltofl@f1+3),(?___lltofl+3)
  5037  000088' EF00' F000'        	goto	l1204
  5038                           	line	26
  5039  00008C'                    l1204:
  5040                           			; BSR set to: ?
  5041                           
  5042  00008E' 0012               	return
  5043  000090' FFFF               	dw	0FFFFh; errata NOP
  5044                           	opt stack 0
  5045                           GLOBAL __end_of___lltofl
  5046  000092'                    	__end_of___lltofl:
  5047                           	FNSIZE	___lltofl,6,4
  5048                           ; =============== function ___lltofl ends ======
                                 ======
  5049                           
  5050                           	signat	___lltofl,4220
  5051                           	global	___lwdiv
  5052                           	global	??___lwdiv
  5053                           	global	?___lwdiv
  5054                           
  5055                           ; *************** function ___lwdiv ************
                                 *****
  5056                           ; Defined at:
  5057                           ;		line 5 in file "/opt/hitech/picc-18/9.66/sour
                                 ces/lwdiv.c"
  5058                           ; Parameters:
  5059                           ;		dividend       size:   2offs:   0	type: unsig
                                 ned int 
  5060                           ;		divisor        size:   2offs:   2	type: unsig
                                 ned int 
  5061                           ; Auto variables:
  5062                           ;		counter     	       	type: unsigned char 
  5063                           ;		quotient    	       	type: unsigned int 
  5064                           ; Return value:
  5065                           ;		type: unsigned int 
  5066                           ;		size: 2
  5067                           ; Registers used:
  5068                           ;		wreg, status,2, status,0
  5069                           ; Tracked objects:
  5070                           ;		On entry : 0/0
  5071                           ;		On exit  : 0/0
  5072                           ;		Unchanged: 0/0
  5073                           ; Data sizes:
  5074                           ;		Autos:    3
  5075                           ;		Params:   4
  5076                           ;		Temp:     1
  5077                           ;		Total:    8
  5078                           ; This function calls:
  5079                           ;		Nothing
  5080                           ; This function is called by:
  5081                           ;		_format_number
  5082                           ; This function uses a non-reentrant model
  5083                           ; 
  5084                                   psect   text21,class=CODE,space=0,reloc=
                                 2
  5085                           
  5086                           	opt lm
  5087                           	file	"/opt/hitech/picc-18/9.66/sources/lwdiv.c"
  5088                           	line	5
  5089  000000                     	__size_of___lwdiv	equ	__end_of___lwdiv-___lwdiv
  5090                           	
  5091  000000'                    ___lwdiv:		; BSR set to: ?
  5092                           
  5093                           	opt stack 26
  5094  000000' FFFF               	dw	0FFFFh
  5095                           	line	9
  5096  000002' 0E00               	movlw	low(0)
  5097  000004' 0101               	movlb	1	; () banked
  5098  000006' 0101               	movlb	1	; () banked
  5099  000008' 6F00'              	movwf	((___lwdiv@quotient))&0ffh
  5100  00000A' 0E00               	movlw	high(0)
  5101  00000C' 0101               	movlb	1	; () banked
  5102  00000E' 6F00'              	movwf	((___lwdiv@quotient+1))&0ffh
  5103                           	line	10
  5104  000010' 0101               	movlb	1	; () banked
  5105  000012' 0101               	movlb	1	; () banked
  5106  000014' 5100'              	movf	((___lwdiv@divisor+1))&0ffh,w
  5107  000016' 1100'              	iorwf ((___lwdiv@divisor))&0ffh,w
  5108                           
  5109  000018' B4D8               	btfsc	status,2
  5110  00001A' EF00' F000'        	goto	u3401
  5111  00001E' EF00' F000'        	goto	u3400
  5112  000022'                    u3401:
  5113  000024' EF00' F000'        	goto	l1218
  5114  000028'                    u3400:
  5115                           	line	11
  5116  00002A' 0101               	movlb	1	; () banked
  5117  00002C' 6F00'              	movwf	(??___lwdiv+3+0)&0ffh
  5118  00002E' 0E01               	movlw	low(01h)
  5119  000030' 0101               	movlb	1	; () banked
  5120  000032' 0101               	movlb	1	; () banked
  5121  000034' 6F00'              	movwf	((___lwdiv@counter))&0ffh
  5122  000036' 0101               	movlb	1	; () banked
  5123  000038' 5100'              	movf	(??___lwdiv+3+0)&0ffh,w
  5124                           	line	12
  5125  00003A' EF00' F000'        	goto	l1219
  5126                           	
  5127  00003E'                    l1220:		; BSR set to: ?
  5128                           
  5129                           	line	13
  5130  000040' 0101               	movlb	1	; () banked
  5131  000042' 90D8               	bcf	status,0
  5132  000044' 0101               	movlb	1	; () banked
  5133  000046' 3700'              	rlcf	((___lwdiv@divisor))&0ffh
  5134  000048' 0101               	movlb	1	; () banked
  5135  00004A' 3700'              	rlcf	((___lwdiv@divisor+1))&0ffh
  5136                           	line	14
  5137  00004C' 0101               	movlb	1	; () banked
  5138  00004E' 0101               	movlb	1	; () banked
  5139  000050' 2B00'              	incf	((___lwdiv@counter))&0ffh
  5140                           	line	15
  5141                           	
  5142  000052'                    l1219:		; BSR set to: ?
  5143                           
  5144                           	line	12
  5145  000054' 0101               	movlb	1	; () banked
  5146                           	
  5147  000056' 0101               	movlb	1	; () banked
  5148  000058' AF00'              	btfss	((___lwdiv@divisor+1))&0ffh,(15)&7
  5149  00005A' EF00' F000'        	goto	u3411
  5150  00005E' EF00' F000'        	goto	u3410
  5151  000062'                    u3411:
  5152  000064' EF00' F000'        	goto	l1220
  5153  000068'                    u3410:
  5154                           	
  5155  00006A'                    l1221:		; BSR set to: ?
  5156                           
  5157                           	line	16
  5158                           	
  5159  00006A'                    l1224:		; BSR set to: ?
  5160                           
  5161                           	line	17
  5162  00006C' 0101               	movlb	1	; () banked
  5163  00006E' 90D8               	bcf	status,0
  5164  000070' 0101               	movlb	1	; () banked
  5165  000072' 3700'              	rlcf	((___lwdiv@quotient))&0ffh
  5166  000074' 0101               	movlb	1	; () banked
  5167  000076' 3700'              	rlcf	((___lwdiv@quotient+1))&0ffh
  5168                           	line	18
  5169  000078' 0101               	movlb	1	; () banked
  5170  00007A' 0101               	movlb	1	; () banked
  5171  00007C' 5100'              	movf	((___lwdiv@divisor))&0ffh,w
  5172  00007E' 0101               	movlb	1	; () banked
  5173  000080' 0101               	movlb	1	; () banked
  5174  000082' 5D00'              	subwf	((___lwdiv@dividend))&0ffh,w
  5175  000084' 0101               	movlb	1	; () banked
  5176  000086' 0101               	movlb	1	; () banked
  5177  000088' 5100'              	movf	((___lwdiv@divisor+1))&0ffh,w
  5178  00008A' 0101               	movlb	1	; () banked
  5179  00008C' 0101               	movlb	1	; () banked
  5180  00008E' 5900'              	subwfb	((___lwdiv@dividend+1))&0ffh,w
  5181  000090' A0D8               	btfss	status,0
  5182  000092' EF00' F000'        	goto	u3421
  5183  000096' EF00' F000'        	goto	u3420
  5184  00009A'                    u3421:
  5185  00009C' EF00' F000'        	goto	l1225
  5186  0000A0'                    u3420:
  5187                           	line	19
  5188  0000A2' 0101               	movlb	1	; () banked
  5189  0000A4' 0101               	movlb	1	; () banked
  5190  0000A6' 5100'              	movf	((___lwdiv@divisor))&0ffh,w
  5191  0000A8' 0101               	movlb	1	; () banked
  5192  0000AA' 0101               	movlb	1	; () banked
  5193  0000AC' 5F00'              	subwf	((___lwdiv@dividend))&0ffh
  5194  0000AE' 0101               	movlb	1	; () banked
  5195  0000B0' 0101               	movlb	1	; () banked
  5196  0000B2' 5100'              	movf	((___lwdiv@divisor+1))&0ffh,w
  5197  0000B4' 0101               	movlb	1	; () banked
  5198  0000B6' 0101               	movlb	1	; () banked
  5199  0000B8' 5B00'              	subwfb	((___lwdiv@dividend+1))&0ffh
  5200                           
  5201                           	line	20
  5202  0000BA' 0101               	movlb	1	; () banked
  5203  0000BC' 0101               	movlb	1	; () banked
  5204  0000BE' 8100'              	bsf	(0+(0/8)+(___lwdiv@quotient))&0ffh,(0)&7
  5205                           	line	21
  5206                           	
  5207  0000C0'                    l1225:		; BSR set to: ?
  5208                           
  5209                           	line	22
  5210  0000C2' 0101               	movlb	1	; () banked
  5211  0000C4' 90D8               	bcf	status,0
  5212  0000C6' 0101               	movlb	1	; () banked
  5213  0000C8' 3300'              	rrcf	((___lwdiv@divisor+1))&0ffh
  5214  0000CA' 0101               	movlb	1	; () banked
  5215  0000CC' 3300'              	rrcf	((___lwdiv@divisor))&0ffh
  5216                           	line	23
  5217  0000CE' 0101               	movlb	1	; () banked
  5218  0000D0' 0101               	movlb	1	; () banked
  5219  0000D2' 2F00'              	decfsz	((___lwdiv@counter))&0ffh
  5220                           	
  5221  0000D4' EF00' F000'        	goto	l1224
  5222                           	
  5223  0000D8'                    l1223:		; BSR set to: ?
  5224                           
  5225                           	line	24
  5226                           	
  5227  0000D8'                    l1218:		; BSR set to: ?
  5228                           
  5229                           	line	25
  5230  0000DA' C001' F000'        	movff	(___lwdiv@quotient),(?___lwdiv)
  5231  0000DE' C002' F001'        	movff	(___lwdiv@quotient+1),(?___lwdiv+1)
  5232  0000E2' EF00' F000'        	goto	l1217
  5233                           	line	26
  5234  0000E6'                    l1217:
  5235                           			; BSR set to: ?
  5236                           
  5237  0000E8' 0012               	return
  5238  0000EA' FFFF               	dw	0FFFFh; errata NOP
  5239                           	opt stack 0
  5240                           GLOBAL __end_of___lwdiv
  5241  0000EC'                    	__end_of___lwdiv:
  5242                           	FNSIZE	___lwdiv,4,4
  5243                           ; =============== function ___lwdiv ends =======
                                 =====
  5244                           
  5245                           	signat	___lwdiv,8314
  5246                           	global	___lwmod
  5247                           	global	??___lwmod
  5248                           	global	?___lwmod
  5249                           
  5250                           ; *************** function ___lwmod ************
                                 *****
  5251                           ; Defined at:
  5252                           ;		line 5 in file "/opt/hitech/picc-18/9.66/sour
                                 ces/lwmod.c"
  5253                           ; Parameters:
  5254                           ;		dividend       size:   2offs:   0	type: unsig
                                 ned int 
  5255                           ;		divisor        size:   2offs:   2	type: unsig
                                 ned int 
  5256                           ; Auto variables:
  5257                           ;		counter     	       	type: unsigned char 
  5258                           ; Return value:
  5259                           ;		type: unsigned int 
  5260                           ;		size: 2
  5261                           ; Registers used:
  5262                           ;		wreg, status,2, status,0
  5263                           ; Tracked objects:
  5264                           ;		On entry : 0/0
  5265                           ;		On exit  : 0/0
  5266                           ;		Unchanged: 0/0
  5267                           ; Data sizes:
  5268                           ;		Autos:    1
  5269                           ;		Params:   4
  5270                           ;		Temp:     1
  5271                           ;		Total:    6
  5272                           ; This function calls:
  5273                           ;		Nothing
  5274                           ; This function is called by:
  5275                           ;		_format_number
  5276                           ; This function uses a non-reentrant model
  5277                           ; 
  5278                                   psect   text22,class=CODE,space=0,reloc=
                                 2
  5279                           
  5280                           	opt lm
  5281                           	file	"/opt/hitech/picc-18/9.66/sources/lwmod.c"
  5282                           	line	5
  5283  000000                     	__size_of___lwmod	equ	__end_of___lwmod-___lwmod
  5284                           	
  5285  000000'                    ___lwmod:		; BSR set to: ?
  5286                           
  5287                           	opt stack 26
  5288  000000' FFFF               	dw	0FFFFh
  5289                           	line	8
  5290  000002' 0101               	movlb	1	; () banked
  5291  000004' 0101               	movlb	1	; () banked
  5292  000006' 5100'              	movf	((___lwmod@divisor+1))&0ffh,w
  5293  000008' 1100'              	iorwf ((___lwmod@divisor))&0ffh,w
  5294                           
  5295  00000A' B4D8               	btfsc	status,2
  5296  00000C' EF00' F000'        	goto	u3431
  5297  000010' EF00' F000'        	goto	u3430
  5298  000014'                    u3431:
  5299  000016' EF00' F000'        	goto	l1227
  5300  00001A'                    u3430:
  5301                           	line	9
  5302  00001C' 0101               	movlb	1	; () banked
  5303  00001E' 6F00'              	movwf	(??___lwmod+1+0)&0ffh
  5304  000020' 0E01               	movlw	low(01h)
  5305  000022' 0101               	movlb	1	; () banked
  5306  000024' 0101               	movlb	1	; () banked
  5307  000026' 6F00'              	movwf	((___lwmod@counter))&0ffh
  5308  000028' 0101               	movlb	1	; () banked
  5309  00002A' 5100'              	movf	(??___lwmod+1+0)&0ffh,w
  5310                           	line	10
  5311  00002C' EF00' F000'        	goto	l1228
  5312                           	
  5313  000030'                    l1229:		; BSR set to: ?
  5314                           
  5315                           	line	11
  5316  000032' 0101               	movlb	1	; () banked
  5317  000034' 90D8               	bcf	status,0
  5318  000036' 0101               	movlb	1	; () banked
  5319  000038' 3700'              	rlcf	((___lwmod@divisor))&0ffh
  5320  00003A' 0101               	movlb	1	; () banked
  5321  00003C' 3700'              	rlcf	((___lwmod@divisor+1))&0ffh
  5322                           	line	12
  5323  00003E' 0101               	movlb	1	; () banked
  5324  000040' 0101               	movlb	1	; () banked
  5325  000042' 2B00'              	incf	((___lwmod@counter))&0ffh
  5326                           	line	13
  5327                           	
  5328  000044'                    l1228:		; BSR set to: ?
  5329                           
  5330                           	line	10
  5331  000046' 0101               	movlb	1	; () banked
  5332                           	
  5333  000048' 0101               	movlb	1	; () banked
  5334  00004A' AF00'              	btfss	((___lwmod@divisor+1))&0ffh,(15)&7
  5335  00004C' EF00' F000'        	goto	u3441
  5336  000050' EF00' F000'        	goto	u3440
  5337  000054'                    u3441:
  5338  000056' EF00' F000'        	goto	l1229
  5339  00005A'                    u3440:
  5340                           	
  5341  00005C'                    l1230:		; BSR set to: ?
  5342                           
  5343                           	line	14
  5344                           	
  5345  00005C'                    l1233:		; BSR set to: ?
  5346                           
  5347                           	line	15
  5348  00005E' 0101               	movlb	1	; () banked
  5349  000060' 0101               	movlb	1	; () banked
  5350  000062' 5100'              	movf	((___lwmod@divisor))&0ffh,w
  5351  000064' 0101               	movlb	1	; () banked
  5352  000066' 0101               	movlb	1	; () banked
  5353  000068' 5D00'              	subwf	((___lwmod@dividend))&0ffh,w
  5354  00006A' 0101               	movlb	1	; () banked
  5355  00006C' 0101               	movlb	1	; () banked
  5356  00006E' 5100'              	movf	((___lwmod@divisor+1))&0ffh,w
  5357  000070' 0101               	movlb	1	; () banked
  5358  000072' 0101               	movlb	1	; () banked
  5359  000074' 5900'              	subwfb	((___lwmod@dividend+1))&0ffh,w
  5360  000076' A0D8               	btfss	status,0
  5361  000078' EF00' F000'        	goto	u3451
  5362  00007C' EF00' F000'        	goto	u3450
  5363  000080'                    u3451:
  5364  000082' EF00' F000'        	goto	l1234
  5365  000086'                    u3450:
  5366                           	line	16
  5367  000088' 0101               	movlb	1	; () banked
  5368  00008A' 0101               	movlb	1	; () banked
  5369  00008C' 5100'              	movf	((___lwmod@divisor))&0ffh,w
  5370  00008E' 0101               	movlb	1	; () banked
  5371  000090' 0101               	movlb	1	; () banked
  5372  000092' 5F00'              	subwf	((___lwmod@dividend))&0ffh
  5373  000094' 0101               	movlb	1	; () banked
  5374  000096' 0101               	movlb	1	; () banked
  5375  000098' 5100'              	movf	((___lwmod@divisor+1))&0ffh,w
  5376  00009A' 0101               	movlb	1	; () banked
  5377  00009C' 0101               	movlb	1	; () banked
  5378  00009E' 5B00'              	subwfb	((___lwmod@dividend+1))&0ffh
  5379                           
  5380                           	
  5381  0000A0'                    l1234:		; BSR set to: ?
  5382                           
  5383                           	line	17
  5384  0000A2' 0101               	movlb	1	; () banked
  5385  0000A4' 90D8               	bcf	status,0
  5386  0000A6' 0101               	movlb	1	; () banked
  5387  0000A8' 3300'              	rrcf	((___lwmod@divisor+1))&0ffh
  5388  0000AA' 0101               	movlb	1	; () banked
  5389  0000AC' 3300'              	rrcf	((___lwmod@divisor))&0ffh
  5390                           	line	18
  5391  0000AE' 0101               	movlb	1	; () banked
  5392  0000B0' 0101               	movlb	1	; () banked
  5393  0000B2' 2F00'              	decfsz	((___lwmod@counter))&0ffh
  5394                           	
  5395  0000B4' EF00' F000'        	goto	l1233
  5396                           	
  5397  0000B8'                    l1232:		; BSR set to: ?
  5398                           
  5399                           	line	19
  5400                           	
  5401  0000B8'                    l1227:		; BSR set to: ?
  5402                           
  5403                           	line	20
  5404  0000BA' C000' F000'        	movff	(___lwmod@dividend),(?___lwmod)
  5405  0000BE' C001' F001'        	movff	(___lwmod@dividend+1),(?___lwmod+1)
  5406  0000C2' EF00' F000'        	goto	l1226
  5407                           	line	21
  5408  0000C6'                    l1226:
  5409                           			; BSR set to: ?
  5410                           
  5411  0000C8' 0012               	return
  5412  0000CA' FFFF               	dw	0FFFFh; errata NOP
  5413                           	opt stack 0
  5414                           GLOBAL __end_of___lwmod
  5415  0000CC'                    	__end_of___lwmod:
  5416                           	FNSIZE	___lwmod,2,4
  5417                           ; =============== function ___lwmod ends =======
                                 =====
  5418                           
  5419                           	signat	___lwmod,8314
  5420                           	global	_output_putch
  5421                           	global	??_output_putch
  5422                           	global	?_output_putch
  5423                           
  5424                           ; *************** function _output_putch *******
                                 **********
  5425                           ; Defined at:
  5426                           ;		line 48 in file "../../../src/LC-meter.c"
  5427                           ; Parameters:
  5428                           ;		c              size:   1offs:   0	type: unsig
                                 ned char 
  5429                           ; Auto variables:
  5430                           ;		None
  5431                           ; Return value:
  5432                           ;		type: void 
  5433                           ;		size: 0
  5434                           ; Registers used:
  5435                           ;		wreg, fsr0l, fsr0h, status,2, status,0, cstac
                                 k
  5436                           ; Tracked objects:
  5437                           ;		On entry : 0/0
  5438                           ;		On exit  : 0/0
  5439                           ;		Unchanged: 0/0
  5440                           ; Data sizes:
  5441                           ;		Autos:    0
  5442                           ;		Params:   1
  5443                           ;		Temp:     0
  5444                           ;		Total:    1
  5445                           ; This function calls:
  5446                           ;		_ser_putch
  5447                           ; This function is called by:
  5448                           ;		_measure_capacitance
  5449                           ; This function uses a non-reentrant model
  5450                           ; 
  5451                                   psect   text23,class=CODE,space=0,reloc=
                                 2
  5452                           
  5453                           	opt lm
  5454                           	file	"../../../src/LC-meter.c"
  5455                           	line	48
  5456  000000                     	__size_of_output_putch	equ	__end_of_output_putc
                                 h-_output_putch
  5457                           ;LC-meter.c: 47: void
  5458                           ;LC-meter.c: 48: output_putch(char c) {
  5459                           	
  5460  000000'                    _output_putch:		; BSR set to: ?
  5461                           
  5462                           	opt stack 26
  5463  000000' FFFF               	dw	0FFFFh
  5464                           	line	54
  5465  000002' C000' F000'        	movff	(output_putch@c),(?_ser_putch)
  5466  000006' EC00' F000'        	call	_ser_putch	;wreg free
  5467                           	line	56
  5468                           ;LC-meter.c: 56: }
  5469  00000A'                    l827:
  5470                           			; BSR set to: ?
  5471                           
  5472  00000A' 0012               	return
  5473  00000C' FFFF               	dw	0FFFFh; errata NOP
  5474                           	opt stack 0
  5475                           GLOBAL __end_of_output_putch
  5476  00000E'                    	__end_of_output_putch:
  5477                           	FNSIZE	_output_putch,0,1
  5478                           ; =============== function _output_putch ends ==
                                 ==========
  5479                           
  5480                           	signat	_output_putch,4216
  5481                           	global	_log
  5482                           	global	??_log
  5483                           	global	?_log
  5484                           
  5485                           ; *************** function _log ****************
                                 *
  5486                           ; Defined at:
  5487                           ;		line 6 in file "/opt/hitech/picc-18/9.66/sour
                                 ces/log.c"
  5488                           ; Parameters:
  5489                           ;		x              size:   4offs:   0	type: void 
  5490                           ; Auto variables:
  5491                           ;		exp         	       	type: int 
  5492                           ; Return value:
  5493                           ;		type: int 
  5494                           ;		size: 4
  5495                           ; Registers used:
  5496                           ;		wreg, fsr0l, fsr0h, status,2, status,0, tblpt
                                 rl, tblptrh, tblptru, tablat, cstack
  5497                           ; Tracked objects:
  5498                           ;		On entry : 0/0
  5499                           ;		On exit  : 0/0
  5500                           ;		Unchanged: 0/0
  5501                           ; Data sizes:
  5502                           ;		Autos:    2
  5503                           ;		Params:   4
  5504                           ;		Temp:     0
  5505                           ;		Total:    6
  5506                           ; This function calls:
  5507                           ;		_frexp
  5508                           ;		___flmul
  5509                           ;		___fladd
  5510                           ;		_eval_poly
  5511                           ;		___awtofl
  5512                           ; This function is called by:
  5513                           ;		_log10
  5514                           ;		_pow
  5515                           ; This function uses a non-reentrant model
  5516                           ; 
  5517                                   psect   text24,class=CODE,space=0,reloc=
                                 2
  5518                           
  5519                           	opt lm
  5520                           	file	"/opt/hitech/picc-18/9.66/sources/log.c"
  5521                           	line	6
  5522  000000                     	__size_of_log	equ	__end_of_log-_log
  5523                           	
  5524  000000'                    _log:		; BSR set to: ?
  5525                           
  5526                           	opt stack 26
  5527  000000' FFFF               	dw	0FFFFh
  5528                           	line	24
  5529  000002' 0101               	movlb	1	; () banked
  5530  000004' 0101               	movlb	1	; () banked
  5531  000006' AF00'              	btfss	((log@x+3))&0ffh,7
  5532  000008' EF00' F000'        	goto	u3301
  5533  00000C' EF00' F000'        	goto	u3300
  5534  000010'                    u3301:
  5535  000012' EF00' F000'        	goto	l885
  5536  000016'                    u3300:
  5537                           	line	25
  5538  000018' 0E21               	movlw	low(021h)
  5539  00001A' 6E4A               	movwf	((c:74)),c
  5540  00001C' 0E00               	movlw	high(021h)
  5541  00001E' 6E4B               	movwf	((c:74+1)),c
  5542                           	line	26
  5543  000020' 0E00               	movlw	low(0.0000000000000000)
  5544  000022' 0101               	movlb	1	; () banked
  5545  000024' 0101               	movlb	1	; () banked
  5546  000026' 6F00'              	movwf	((?_log))&0ffh
  5547  000028' 0E00               	movlw	high(0.0000000000000000)
  5548  00002A' 0101               	movlb	1	; () banked
  5549  00002C' 6F00'              	movwf	((?_log+1))&0ffh
  5550  00002E' 0E00               	movlw	low highword(0.0000000000000000)
  5551  000030' 0101               	movlb	1	; () banked
  5552  000032' 6F00'              	movwf	((?_log+2))&0ffh
  5553  000034' 0E00               	movlw	high highword(0.0000000000000000)
  5554  000036' 0101               	movlb	1	; () banked
  5555  000038' 6F00'              	movwf	((?_log+3))&0ffh
  5556  00003A' EF00' F000'        	goto	l884
  5557                           	line	27
  5558                           	
  5559  00003E'                    l885:		; BSR set to: ?
  5560                           
  5561                           	line	28
  5562  000040' 0101               	movlb	1	; () banked
  5563  000042' EE00' F000'        	lfsr	0,(log@x)
  5564  000046' 50EE               	movf	postinc0,w
  5565  000048' 10EE               	iorwf	postinc0,w
  5566  00004A' 10EE               	iorwf	postinc0,w
  5567  00004C' 10EE               	iorwf	postinc0,w
  5568  00004E' A4D8               	btfss	status,2
  5569  000050' EF00' F000'        	goto	u3311
  5570  000054' EF00' F000'        	goto	u3310
  5571  000058'                    u3311:
  5572  00005A' EF00' F000'        	goto	l886
  5573  00005E'                    u3310:
  5574                           	line	29
  5575  000060' 0E22               	movlw	low(022h)
  5576  000062' 6E4A               	movwf	((c:74)),c
  5577  000064' 0E00               	movlw	high(022h)
  5578  000066' 6E4B               	movwf	((c:74+1)),c
  5579                           	line	30
  5580  000068' 0E00               	movlw	low(0.0000000000000000)
  5581  00006A' 0101               	movlb	1	; () banked
  5582  00006C' 0101               	movlb	1	; () banked
  5583  00006E' 6F00'              	movwf	((?_log))&0ffh
  5584  000070' 0E00               	movlw	high(0.0000000000000000)
  5585  000072' 0101               	movlb	1	; () banked
  5586  000074' 6F00'              	movwf	((?_log+1))&0ffh
  5587  000076' 0E00               	movlw	low highword(0.0000000000000000)
  5588  000078' 0101               	movlb	1	; () banked
  5589  00007A' 6F00'              	movwf	((?_log+2))&0ffh
  5590  00007C' 0E00               	movlw	high highword(0.0000000000000000)
  5591  00007E' 0101               	movlb	1	; () banked
  5592  000080' 6F00'              	movwf	((?_log+3))&0ffh
  5593  000082' EF00' F000'        	goto	l884
  5594                           	line	31
  5595                           	
  5596  000086'                    l886:		; BSR set to: ?
  5597                           
  5598                           	line	32
  5599  000088' 0101               	movlb	1	; () banked
  5600  00008A' 0E00'              	movlw	low(log@exp)
  5601  00008C' 0101               	movlb	1	; () banked
  5602  00008E' 0101               	movlb	1	; () banked
  5603  000090' 6F00'              	movwf	(0+(?_frexp+04h))&0ffh
  5604  000092' 0101               	movlb	1	; () banked
  5605  000094' 0E00'              	movlw	high(log@exp)
  5606  000096' 0101               	movlb	1	; () banked
  5607  000098' 6F00'              	movwf	(1+(?_frexp+04h))&0ffh
  5608  00009A' C000' F000'        	movff	(log@x),(?_frexp)
  5609  00009E' C001' F001'        	movff	(log@x+1),(?_frexp+1)
  5610  0000A2' C002' F002'        	movff	(log@x+2),(?_frexp+2)
  5611  0000A6' C003' F003'        	movff	(log@x+3),(?_frexp+3)
  5612  0000AA' EC00' F000'        	call	_frexp	;wreg free
  5613  0000AE' C000' F000'        	movff	0+?_frexp,(?___flmul)
  5614  0000B2' C001' F001'        	movff	1+?_frexp,(?___flmul+1)
  5615  0000B6' C002' F002'        	movff	2+?_frexp,(?___flmul+2)
  5616  0000BA' C003' F003'        	movff	3+?_frexp,(?___flmul+3)
  5617  0000BE' 0E00               	movlw	low(2.0000000000000000)
  5618  0000C0' 0101               	movlb	1	; () banked
  5619  0000C2' 0101               	movlb	1	; () banked
  5620  0000C4' 6F00'              	movwf	(0+(?___flmul+04h))&0ffh
  5621  0000C6' 0E00               	movlw	high(2.0000000000000000)
  5622  0000C8' 0101               	movlb	1	; () banked
  5623  0000CA' 6F00'              	movwf	(1+(?___flmul+04h))&0ffh
  5624  0000CC' 0E00               	movlw	low highword(2.0000000000000000)
  5625  0000CE' 0101               	movlb	1	; () banked
  5626  0000D0' 6F00'              	movwf	(2+(?___flmul+04h))&0ffh
  5627  0000D2' 0E40               	movlw	high highword(2.0000000000000000)
  5628  0000D4' 0101               	movlb	1	; () banked
  5629  0000D6' 6F00'              	movwf	(3+(?___flmul+04h))&0ffh
  5630  0000D8' EC00' F000'        	call	___flmul	;wreg free
  5631  0000DC' C000' F000'        	movff	0+?___flmul,(?___fladd)
  5632  0000E0' C001' F001'        	movff	1+?___flmul,(?___fladd+1)
  5633  0000E4' C002' F002'        	movff	2+?___flmul,(?___fladd+2)
  5634  0000E8' C003' F003'        	movff	3+?___flmul,(?___fladd+3)
  5635  0000EC' 0E00               	movlw	low(-1.0000000000000000)
  5636  0000EE' 0101               	movlb	1	; () banked
  5637  0000F0' 0101               	movlb	1	; () banked
  5638  0000F2' 6F00'              	movwf	(0+(?___fladd+04h))&0ffh
  5639  0000F4' 0E00               	movlw	high(-1.0000000000000000)
  5640  0000F6' 0101               	movlb	1	; () banked
  5641  0000F8' 6F00'              	movwf	(1+(?___fladd+04h))&0ffh
  5642  0000FA' 0E80               	movlw	low highword(-1.0000000000000000)
  5643  0000FC' 0101               	movlb	1	; () banked
  5644  0000FE' 6F00'              	movwf	(2+(?___fladd+04h))&0ffh
  5645  000100' 0EBF               	movlw	high highword(-1.0000000000000000)
  5646  000102' 0101               	movlb	1	; () banked
  5647  000104' 6F00'              	movwf	(3+(?___fladd+04h))&0ffh
  5648  000106' EC00' F000'        	call	___fladd	;wreg free
  5649  00010A' C000' F000'        	movff	0+?___fladd,(log@x)
  5650  00010E' C001' F001'        	movff	1+?___fladd,(log@x+1)
  5651  000112' C002' F002'        	movff	2+?___fladd,(log@x+2)
  5652  000116' C003' F003'        	movff	3+?___fladd,(log@x+3)
  5653                           	line	33
  5654  00011A' 0101               	movlb	1	; () banked
  5655  00011C' 0101               	movlb	1	; () banked
  5656  00011E' 0700'              	decf	((log@exp))&0ffh
  5657  000120' A0D8               	btfss	status,0
  5658  000122' 0700'              	decf	((log@exp+1))&0ffh
  5659                           	line	34
  5660  000124' 0E08               	movlw	low(08h)
  5661  000126' 0101               	movlb	1	; () banked
  5662  000128' 0101               	movlb	1	; () banked
  5663  00012A' 6F00'              	movwf	(0+(?_eval_poly+06h))&0ffh
  5664  00012C' 0E00               	movlw	high(08h)
  5665  00012E' 0101               	movlb	1	; () banked
  5666  000130' 6F00'              	movwf	(1+(?_eval_poly+06h))&0ffh
  5667  000132' 0E00'              	movlw	low(F64)
  5668  000134' 0101               	movlb	1	; () banked
  5669  000136' 0101               	movlb	1	; () banked
  5670  000138' 6F00'              	movwf	(0+(?_eval_poly+04h))&0ffh
  5671  00013A' 0E00'              	movlw	high(F64)
  5672  00013C' 0101               	movlb	1	; () banked
  5673  00013E' 6F00'              	movwf	(1+(?_eval_poly+04h))&0ffh
  5674  000140' C000' F000'        	movff	(log@x),(?_eval_poly)
  5675  000144' C001' F001'        	movff	(log@x+1),(?_eval_poly+1)
  5676  000148' C002' F002'        	movff	(log@x+2),(?_eval_poly+2)
  5677  00014C' C003' F003'        	movff	(log@x+3),(?_eval_poly+3)
  5678  000150' EC00' F000'        	call	_eval_poly	;wreg free
  5679  000154' C000' F000'        	movff	0+?_eval_poly,(log@x)
  5680  000158' C001' F001'        	movff	1+?_eval_poly,(log@x+1)
  5681  00015C' C002' F002'        	movff	2+?_eval_poly,(log@x+2)
  5682  000160' C003' F003'        	movff	3+?_eval_poly,(log@x+3)
  5683                           	line	35
  5684  000164' C000' F000'        	movff	(log@exp),(?___awtofl)
  5685  000168' C001' F001'        	movff	(log@exp+1),(?___awtofl+1)
  5686  00016C' EC00' F000'        	call	___awtofl	;wreg free
  5687  000170' C000' F000'        	movff	0+?___awtofl,(?___flmul)
  5688  000174' C001' F001'        	movff	1+?___awtofl,(?___flmul+1)
  5689  000178' C002' F002'        	movff	2+?___awtofl,(?___flmul+2)
  5690  00017C' C003' F003'        	movff	3+?___awtofl,(?___flmul+3)
  5691  000180' 0E18               	movlw	low(0.69314718055994995)
  5692  000182' 0101               	movlb	1	; () banked
  5693  000184' 0101               	movlb	1	; () banked
  5694  000186' 6F00'              	movwf	(0+(?___flmul+04h))&0ffh
  5695  000188' 0E72               	movlw	high(0.69314718055994995)
  5696  00018A' 0101               	movlb	1	; () banked
  5697  00018C' 6F00'              	movwf	(1+(?___flmul+04h))&0ffh
  5698  00018E' 0E31               	movlw	low highword(0.69314718055994995)
  5699  000190' 0101               	movlb	1	; () banked
  5700  000192' 6F00'              	movwf	(2+(?___flmul+04h))&0ffh
  5701  000194' 0E3F               	movlw	high highword(0.69314718055994995)
  5702  000196' 0101               	movlb	1	; () banked
  5703  000198' 6F00'              	movwf	(3+(?___flmul+04h))&0ffh
  5704  00019A' EC00' F000'        	call	___flmul	;wreg free
  5705  00019E' C000' F000'        	movff	0+?___flmul,(?___fladd)
  5706  0001A2' C001' F001'        	movff	1+?___flmul,(?___fladd+1)
  5707  0001A6' C002' F002'        	movff	2+?___flmul,(?___fladd+2)
  5708  0001AA' C003' F003'        	movff	3+?___flmul,(?___fladd+3)
  5709  0001AE' C000' F004'        	movff	(log@x),0+(?___fladd+04h)
  5710  0001B2' C001' F005'        	movff	(log@x+1),1+(?___fladd+04h)
  5711  0001B6' C002' F006'        	movff	(log@x+2),2+(?___fladd+04h)
  5712  0001BA' C003' F007'        	movff	(log@x+3),3+(?___fladd+04h)
  5713  0001BE' EC00' F000'        	call	___fladd	;wreg free
  5714  0001C2' C000' F000'        	movff	0+?___fladd,(?_log)
  5715  0001C6' C001' F001'        	movff	1+?___fladd,(?_log+1)
  5716  0001CA' C002' F002'        	movff	2+?___fladd,(?_log+2)
  5717  0001CE' C003' F003'        	movff	3+?___fladd,(?_log+3)
  5718  0001D2' EF00' F000'        	goto	l884
  5719                           	line	36
  5720  0001D6'                    l884:
  5721                           			; BSR set to: ?
  5722                           
  5723  0001D8' 0012               	return
  5724  0001DA' FFFF               	dw	0FFFFh; errata NOP
  5725                           	opt stack 0
  5726                           GLOBAL __end_of_log
  5727  0001DC'                    	__end_of_log:
  5728                           	FNSIZE	_log,2,4
  5729                           ; =============== function _log ends ===========
                                 =
  5730                           
  5731                           	signat	_log,4220
  5732                           	global	_format_putchar
  5733                           	global	??_format_putchar
  5734                           	global	?_format_putchar
  5735                           
  5736                           ; *************** function _format_putchar *****
                                 ************
  5737                           ; Defined at:
  5738                           ;		line 6 in file "../../../lib/format.c"
  5739                           ; Parameters:
  5740                           ;		c              size:   1offs:   0	type: unsig
                                 ned char 
  5741                           ; Auto variables:
  5742                           ;		None
  5743                           ; Return value:
  5744                           ;		type: void 
  5745                           ;		size: 0
  5746                           ; Registers used:
  5747                           ;		None
  5748                           ; Tracked objects:
  5749                           ;		On entry : 0/0
  5750                           ;		On exit  : 0/0
  5751                           ;		Unchanged: 0/0
  5752                           ; Data sizes:
  5753                           ;		Autos:    0
  5754                           ;		Params:   1
  5755                           ;		Temp:     0
  5756                           ;		Total:    1
  5757                           ; This function calls:
  5758                           ;		Nothing
  5759                           ; This function is called by:
  5760                           ; This function uses a non-reentrant model
  5761                           ; 
  5762                                   psect   text25,class=CODE,space=0,reloc=
                                 2
  5763                           
  5764                           	opt lm
  5765                           	file	"../../../lib/format.c"
  5766                           	line	6
  5767  000000                     	__size_of_format_putchar	equ	__end_of_format_pu
                                 tchar-_format_putchar
  5768                           ;format.c: 5: static void
  5769                           ;format.c: 6: format_putchar(char c) {
  5770                           	
  5771  000000'                    _format_putchar:		; BSR set to: ?
  5772                           
  5773                           	opt stack 26
  5774  000000' FFFF               	dw	0FFFFh
  5775                           	line	7
  5776  000002' EF00' F000'        	goto	l651
  5777                           	line	8
  5778                           ;format.c: 8: }
  5779  000006'                    l651:
  5780                           			; BSR set to: ?
  5781                           
  5782  000008' 0012               	return
  5783  00000A' FFFF               	dw	0FFFFh; errata NOP
  5784                           	opt stack 0
  5785                           GLOBAL __end_of_format_putchar
  5786  00000C'                    	__end_of_format_putchar:
  5787                           	FNSIZE	_format_putchar,0,1
  5788                           ; =============== function _format_putchar ends 
                                 ============
  5789                           
  5790                           	signat	_format_putchar,4216
  5791                           	global	___asflsub
  5792                           	global	??___asflsub
  5793                           	global	?___asflsub
  5794                           
  5795                           ; *************** function ___asflsub **********
                                 *******
  5796                           ; Defined at:
  5797                           ;		line 5 in file "/opt/hitech/picc-18/9.66/sour
                                 ces/asflsub.c"
  5798                           ; Parameters:
  5799                           ;		f1p            size:   2offs:   0	type: PTR ;
                                  Largest target is 4
  5800                           ;		 -> exp@x(4), format_double@num(4), 
  5801                           ;		f2             size:   4offs:   2	type: PTR 
  5802                           ; Auto variables:
  5803                           ;		None
  5804                           ; Return value:
  5805                           ;		type: PTR 
  5806                           ;		size: 4
  5807                           ; Registers used:
  5808                           ;		wreg, fsr0l, fsr0h, status,2, status,0, cstac
                                 k
  5809                           ; Tracked objects:
  5810                           ;		On entry : 0/0
  5811                           ;		On exit  : 0/0
  5812                           ;		Unchanged: 0/0
  5813                           ; Data sizes:
  5814                           ;		Autos:    0
  5815                           ;		Params:   6
  5816                           ;		Temp:     0
  5817                           ;		Total:    6
  5818                           ; This function calls:
  5819                           ;		___flsub
  5820                           ; This function is called by:
  5821                           ;		_format_double
  5822                           ;		_exp
  5823                           ; This function uses a non-reentrant model
  5824                           ; 
  5825                                   psect   text26,class=CODE,space=0,reloc=
                                 2
  5826                           
  5827                           	opt lm
  5828                           	file	"/opt/hitech/picc-18/9.66/sources/asflsub.
                                 c"
  5829                           	line	5
  5830  000000                     	__size_of___asflsub	equ	__end_of___asflsub-___a
                                 sflsub
  5831                           	
  5832  000000'                    ___asflsub:		; BSR set to: ?
  5833                           
  5834                           	opt stack 25
  5835  000000' FFFF               	dw	0FFFFh
  5836                           	line	6
  5837  000002' C002' F004'        	movff	(___asflsub@f2),0+(?___flsub+04h)
  5838  000006' C003' F005'        	movff	(___asflsub@f2+1),1+(?___flsub+04h)
  5839  00000A' C004' F006'        	movff	(___asflsub@f2+2),2+(?___flsub+04h)
  5840  00000E' C005' F007'        	movff	(___asflsub@f2+3),3+(?___flsub+04h)
  5841  000012' C000' FFE9         	movff	(___asflsub@f1p),fsr0l
  5842  000016' C001' FFEA         	movff	(___asflsub@f1p+1),fsr0h
  5843  00001A' 0101               	movlb	1	; () banked
  5844  00001C' CFEE F000'         	movff	postinc0,(?___flsub)
  5845  000020' 0101               	movlb	1	; () banked
  5846  000022' CFEE F001'         	movff	postinc0,(?___flsub+1)
  5847  000026' 0101               	movlb	1	; () banked
  5848  000028' CFEE F002'         	movff	postinc0,(?___flsub+2)
  5849  00002C' 0101               	movlb	1	; () banked
  5850  00002E' CFEE F003'         	movff	postinc0,(?___flsub+3)
  5851  000032' EC00' F000'        	call	___flsub	;wreg free
  5852  000036' C000' FFE9         	movff	(___asflsub@f1p),fsr0l
  5853  00003A' C001' FFEA         	movff	(___asflsub@f1p+1),fsr0h
  5854  00003E' 0101               	movlb	1	; () banked
  5855  000040' C000' FFEE         	movff	0+?___flsub,postinc0
  5856  000044' 0101               	movlb	1	; () banked
  5857  000046' C001' FFEE         	movff	1+?___flsub,postinc0
  5858  00004A' 0101               	movlb	1	; () banked
  5859  00004C' C002' FFEE         	movff	2+?___flsub,postinc0
  5860  000050' 0101               	movlb	1	; () banked
  5861  000052' C003' FFED         	movff	3+?___flsub,postdec0
  5862  000056' 52ED               	movf	postdec0
  5863  000058' 52ED               	movf	postdec0
  5864  00005A' EF00' F000'        	goto	l1088
  5865                           	line	7
  5866  00005E'                    l1088:
  5867                           			; BSR set to: ?
  5868                           
  5869  000060' 0012               	return
  5870  000062' FFFF               	dw	0FFFFh; errata NOP
  5871                           	opt stack 0
  5872                           GLOBAL __end_of___asflsub
  5873  000064'                    	__end_of___asflsub:
  5874                           	FNSIZE	___asflsub,0,6
  5875                           ; =============== function ___asflsub ends =====
                                 =======
  5876                           
  5877                           	signat	___asflsub,8316
  5878                           	global	_floor
  5879                           	global	??_floor
  5880                           	global	?_floor
  5881                           
  5882                           ; *************** function _floor **************
                                 ***
  5883                           ; Defined at:
  5884                           ;		line 14 in file "/opt/hitech/picc-18/9.66/sou
                                 rces/floor.c"
  5885                           ; Parameters:
  5886                           ;		x              size:   4offs:   0	type: PTR 
  5887                           ; Auto variables:
  5888                           ;		expon       	       	type: int 
  5889                           ;		i           	       	type: int 
  5890                           ; Return value:
  5891                           ;		type: int 
  5892                           ;		size: 4
  5893                           ; Registers used:
  5894                           ;		wreg, fsr0l, fsr0h, status,2, status,0, cstac
                                 k
  5895                           ; Tracked objects:
  5896                           ;		On entry : 0/0
  5897                           ;		On exit  : 0/0
  5898                           ;		Unchanged: 0/0
  5899                           ; Data sizes:
  5900                           ;		Autos:    6
  5901                           ;		Params:   4
  5902                           ;		Temp:     0
  5903                           ;		Total:   10
  5904                           ; This function calls:
  5905                           ;		_frexp
  5906                           ;		___fltol
  5907                           ;		___altofl
  5908                           ;		___flge
  5909                           ;		___fladd
  5910                           ; This function is called by:
  5911                           ;		_format_double
  5912                           ;		_exp
  5913                           ; This function uses a non-reentrant model
  5914                           ; 
  5915                                   psect   text27,class=CODE,space=0,reloc=
                                 2
  5916                           
  5917                           	opt lm
  5918                           	file	"/opt/hitech/picc-18/9.66/sources/floor.c"
  5919                           	line	14
  5920  000000                     	__size_of_floor	equ	__end_of_floor-_floor
  5921                           	
  5922  000000'                    _floor:		; BSR set to: ?
  5923                           
  5924                           	opt stack 25
  5925  000000' FFFF               	dw	0FFFFh
  5926                           	line	18
  5927  000002' 0101               	movlb	1	; () banked
  5928  000004' 0E00'              	movlw	low(floor@expon)
  5929  000006' 0101               	movlb	1	; () banked
  5930  000008' 0101               	movlb	1	; () banked
  5931  00000A' 6F00'              	movwf	(0+(?_frexp+04h))&0ffh
  5932  00000C' 0101               	movlb	1	; () banked
  5933  00000E' 0E00'              	movlw	high(floor@expon)
  5934  000010' 0101               	movlb	1	; () banked
  5935  000012' 6F00'              	movwf	(1+(?_frexp+04h))&0ffh
  5936  000014' C000' F000'        	movff	(floor@x),(?_frexp)
  5937  000018' C001' F001'        	movff	(floor@x+1),(?_frexp+1)
  5938  00001C' C002' F002'        	movff	(floor@x+2),(?_frexp+2)
  5939  000020' C003' F003'        	movff	(floor@x+3),(?_frexp+3)
  5940  000024' EC00' F000'        	call	_frexp	;wreg free
  5941                           	line	19
  5942  000028' 0101               	movlb	1	; () banked
  5943  00002A' 0101               	movlb	1	; () banked
  5944  00002C' AF00'              	btfss	((floor@expon+1))&0ffh,7
  5945  00002E' EF00' F000'        	goto	u3461
  5946  000032' EF00' F000'        	goto	u3460
  5947  000036'                    u3461:
  5948  000038' EF00' F000'        	goto	l880
  5949  00003C'                    u3460:
  5950                           	line	20
  5951  00003E' 0101               	movlb	1	; () banked
  5952  000040' 0101               	movlb	1	; () banked
  5953  000042' AF00'              	btfss	((floor@x+3))&0ffh,7
  5954  000044' EF00' F000'        	goto	u3471
  5955  000048' EF00' F000'        	goto	u3470
  5956  00004C'                    u3471:
  5957  00004E' EF00' F000'        	goto	l881
  5958  000052'                    u3470:
  5959                           	line	21
  5960  000054' 0E00               	movlw	low(-1.0000000000000000)
  5961  000056' 0101               	movlb	1	; () banked
  5962  000058' 0101               	movlb	1	; () banked
  5963  00005A' 6F00'              	movwf	((?_floor))&0ffh
  5964  00005C' 0E00               	movlw	high(-1.0000000000000000)
  5965  00005E' 0101               	movlb	1	; () banked
  5966  000060' 6F00'              	movwf	((?_floor+1))&0ffh
  5967  000062' 0E80               	movlw	low highword(-1.0000000000000000)
  5968  000064' 0101               	movlb	1	; () banked
  5969  000066' 6F00'              	movwf	((?_floor+2))&0ffh
  5970  000068' 0EBF               	movlw	high highword(-1.0000000000000000)
  5971  00006A' 0101               	movlb	1	; () banked
  5972  00006C' 6F00'              	movwf	((?_floor+3))&0ffh
  5973  00006E' EF00' F000'        	goto	l879
  5974                           	
  5975  000072'                    l881:		; BSR set to: ?
  5976                           
  5977                           	line	22
  5978  000074' 0E00               	movlw	low(0.0000000000000000)
  5979  000076' 0101               	movlb	1	; () banked
  5980  000078' 0101               	movlb	1	; () banked
  5981  00007A' 6F00'              	movwf	((?_floor))&0ffh
  5982  00007C' 0E00               	movlw	high(0.0000000000000000)
  5983  00007E' 0101               	movlb	1	; () banked
  5984  000080' 6F00'              	movwf	((?_floor+1))&0ffh
  5985  000082' 0E00               	movlw	low highword(0.0000000000000000)
  5986  000084' 0101               	movlb	1	; () banked
  5987  000086' 6F00'              	movwf	((?_floor+2))&0ffh
  5988  000088' 0E00               	movlw	high highword(0.0000000000000000)
  5989  00008A' 0101               	movlb	1	; () banked
  5990  00008C' 6F00'              	movwf	((?_floor+3))&0ffh
  5991  00008E' EF00' F000'        	goto	l879
  5992                           	line	23
  5993                           	
  5994  000092'                    l880:		; BSR set to: ?
  5995                           
  5996                           	line	24
  5997  000094' 0E1D               	movlw	01Dh
  5998  000096' 0101               	movlb	1	; () banked
  5999  000098' 0101               	movlb	1	; () banked
  6000  00009A' 5D00'              	subwf	((floor@expon))&0ffh,w
  6001  00009C' 0E00               	movlw	0
  6002  00009E' 0101               	movlb	1	; () banked
  6003  0000A0' 5900'              	subwfb	((floor@expon+1))&0ffh,w
  6004  0000A2' A0D8               	btfss	status,0
  6005  0000A4' EF00' F000'        	goto	u3481
  6006  0000A8' EF00' F000'        	goto	u3480
  6007  0000AC'                    u3481:
  6008  0000AE' EF00' F000'        	goto	l882
  6009  0000B2'                    u3480:
  6010                           	line	25
  6011  0000B4' C000' F000'        	movff	(floor@x),(?_floor)
  6012  0000B8' C001' F001'        	movff	(floor@x+1),(?_floor+1)
  6013  0000BC' C002' F002'        	movff	(floor@x+2),(?_floor+2)
  6014  0000C0' C003' F003'        	movff	(floor@x+3),(?_floor+3)
  6015  0000C4' EF00' F000'        	goto	l879
  6016                           	
  6017  0000C8'                    l882:		; BSR set to: ?
  6018                           
  6019                           	line	26
  6020  0000CA' C000' F000'        	movff	(floor@x),(?___fltol)
  6021  0000CE' C001' F001'        	movff	(floor@x+1),(?___fltol+1)
  6022  0000D2' C002' F002'        	movff	(floor@x+2),(?___fltol+2)
  6023  0000D6' C003' F003'        	movff	(floor@x+3),(?___fltol+3)
  6024  0000DA' EC00' F000'        	call	___fltol	;wreg free
  6025  0000DE' C000' F000'        	movff	0+?___fltol,(?___altofl)
  6026  0000E2' C001' F001'        	movff	1+?___fltol,(?___altofl+1)
  6027  0000E6' C002' F002'        	movff	2+?___fltol,(?___altofl+2)
  6028  0000EA' C003' F003'        	movff	3+?___fltol,(?___altofl+3)
  6029  0000EE' EC00' F000'        	call	___altofl	;wreg free
  6030  0000F2' C000' F002'        	movff	0+?___altofl,(floor@i)
  6031  0000F6' C001' F003'        	movff	1+?___altofl,(floor@i+1)
  6032  0000FA' C002' F004'        	movff	2+?___altofl,(floor@i+2)
  6033  0000FE' C003' F005'        	movff	3+?___altofl,(floor@i+3)
  6034                           	line	27
  6035  000102' C002' F004'        	movff	(floor@i),0+(?___flge+04h)
  6036  000106' C003' F005'        	movff	(floor@i+1),1+(?___flge+04h)
  6037  00010A' C004' F006'        	movff	(floor@i+2),2+(?___flge+04h)
  6038  00010E' C005' F007'        	movff	(floor@i+3),3+(?___flge+04h)
  6039  000112' C000' F000'        	movff	(floor@x),(?___flge)
  6040  000116' C001' F001'        	movff	(floor@x+1),(?___flge+1)
  6041  00011A' C002' F002'        	movff	(floor@x+2),(?___flge+2)
  6042  00011E' C003' F003'        	movff	(floor@x+3),(?___flge+3)
  6043  000122' EC00' F000'        	call	___flge	;wreg free
  6044  000126' B0D8               	btfsc	status,0
  6045  000128' EF00' F000'        	goto	u3491
  6046  00012C' EF00' F000'        	goto	u3490
  6047  000130'                    u3491:
  6048  000132' EF00' F000'        	goto	l883
  6049  000136'                    u3490:
  6050                           	line	28
  6051  000138' 0E00               	movlw	low(-1.0000000000000000)
  6052  00013A' 0101               	movlb	1	; () banked
  6053  00013C' 0101               	movlb	1	; () banked
  6054  00013E' 6F00'              	movwf	(0+(?___fladd+04h))&0ffh
  6055  000140' 0E00               	movlw	high(-1.0000000000000000)
  6056  000142' 0101               	movlb	1	; () banked
  6057  000144' 6F00'              	movwf	(1+(?___fladd+04h))&0ffh
  6058  000146' 0E80               	movlw	low highword(-1.0000000000000000)
  6059  000148' 0101               	movlb	1	; () banked
  6060  00014A' 6F00'              	movwf	(2+(?___fladd+04h))&0ffh
  6061  00014C' 0EBF               	movlw	high highword(-1.0000000000000000)
  6062  00014E' 0101               	movlb	1	; () banked
  6063  000150' 6F00'              	movwf	(3+(?___fladd+04h))&0ffh
  6064  000152' C002' F000'        	movff	(floor@i),(?___fladd)
  6065  000156' C003' F001'        	movff	(floor@i+1),(?___fladd+1)
  6066  00015A' C004' F002'        	movff	(floor@i+2),(?___fladd+2)
  6067  00015E' C005' F003'        	movff	(floor@i+3),(?___fladd+3)
  6068  000162' EC00' F000'        	call	___fladd	;wreg free
  6069  000166' C000' F000'        	movff	0+?___fladd,(?_floor)
  6070  00016A' C001' F001'        	movff	1+?___fladd,(?_floor+1)
  6071  00016E' C002' F002'        	movff	2+?___fladd,(?_floor+2)
  6072  000172' C003' F003'        	movff	3+?___fladd,(?_floor+3)
  6073  000176' EF00' F000'        	goto	l879
  6074                           	
  6075  00017A'                    l883:		; BSR set to: ?
  6076                           
  6077                           	line	29
  6078  00017C' C002' F000'        	movff	(floor@i),(?_floor)
  6079  000180' C003' F001'        	movff	(floor@i+1),(?_floor+1)
  6080  000184' C004' F002'        	movff	(floor@i+2),(?_floor+2)
  6081  000188' C005' F003'        	movff	(floor@i+3),(?_floor+3)
  6082  00018C' EF00' F000'        	goto	l879
  6083                           	line	30
  6084  000190'                    l879:
  6085                           			; BSR set to: ?
  6086                           
  6087  000192' 0012               	return
  6088  000194' FFFF               	dw	0FFFFh; errata NOP
  6089                           	opt stack 0
  6090                           GLOBAL __end_of_floor
  6091  000196'                    	__end_of_floor:
  6092                           	FNSIZE	_floor,6,4
  6093                           ; =============== function _floor ends =========
                                 ===
  6094                           
  6095                           	signat	_floor,4220
  6096                           	global	___asflmul
  6097                           	global	??___asflmul
  6098                           	global	?___asflmul
  6099                           
  6100                           ; *************** function ___asflmul **********
                                 *******
  6101                           ; Defined at:
  6102                           ;		line 5 in file "/opt/hitech/picc-18/9.66/sour
                                 ces/asflmul.c"
  6103                           ; Parameters:
  6104                           ;		mp             size:   2offs:   0	type: PTR ;
                                  Largest target is 4
  6105                           ;		 -> exp@x(4), 
  6106                           ;		multiplicand   size:   4offs:   2	type: PTR 
  6107                           ; Auto variables:
  6108                           ;		None
  6109                           ; Return value:
  6110                           ;		type: PTR 
  6111                           ;		size: 4
  6112                           ; Registers used:
  6113                           ;		wreg, fsr0l, fsr0h, status,2, status,0, cstac
                                 k
  6114                           ; Tracked objects:
  6115                           ;		On entry : 0/0
  6116                           ;		On exit  : 0/0
  6117                           ;		Unchanged: 0/0
  6118                           ; Data sizes:
  6119                           ;		Autos:    0
  6120                           ;		Params:   6
  6121                           ;		Temp:     0
  6122                           ;		Total:    6
  6123                           ; This function calls:
  6124                           ;		___flmul
  6125                           ; This function is called by:
  6126                           ;		_exp
  6127                           ; This function uses a non-reentrant model
  6128                           ; 
  6129                                   psect   text28,class=CODE,space=0,reloc=
                                 2
  6130                           
  6131                           	opt lm
  6132                           	file	"/opt/hitech/picc-18/9.66/sources/asflmul.
                                 c"
  6133                           	line	5
  6134  000000                     	__size_of___asflmul	equ	__end_of___asflmul-___a
                                 sflmul
  6135                           	
  6136  000000'                    ___asflmul:		; BSR set to: ?
  6137                           
  6138                           	opt stack 25
  6139  000000' FFFF               	dw	0FFFFh
  6140                           	line	6
  6141  000002' C002' F004'        	movff	(___asflmul@multiplicand),0+(?___flmul+04
                                 h)
  6142  000006' C003' F005'        	movff	(___asflmul@multiplicand+1),1+(?___flmul+
                                 04h)
  6143  00000A' C004' F006'        	movff	(___asflmul@multiplicand+2),2+(?___flmul+
                                 04h)
  6144  00000E' C005' F007'        	movff	(___asflmul@multiplicand+3),3+(?___flmul+
                                 04h)
  6145  000012' C000' FFE9         	movff	(___asflmul@mp),fsr0l
  6146  000016' C001' FFEA         	movff	(___asflmul@mp+1),fsr0h
  6147  00001A' 0101               	movlb	1	; () banked
  6148  00001C' CFEE F000'         	movff	postinc0,(?___flmul)
  6149  000020' 0101               	movlb	1	; () banked
  6150  000022' CFEE F001'         	movff	postinc0,(?___flmul+1)
  6151  000026' 0101               	movlb	1	; () banked
  6152  000028' CFEE F002'         	movff	postinc0,(?___flmul+2)
  6153  00002C' 0101               	movlb	1	; () banked
  6154  00002E' CFEE F003'         	movff	postinc0,(?___flmul+3)
  6155  000032' EC00' F000'        	call	___flmul	;wreg free
  6156  000036' C000' FFE9         	movff	(___asflmul@mp),fsr0l
  6157  00003A' C001' FFEA         	movff	(___asflmul@mp+1),fsr0h
  6158  00003E' 0101               	movlb	1	; () banked
  6159  000040' C000' FFEE         	movff	0+?___flmul,postinc0
  6160  000044' 0101               	movlb	1	; () banked
  6161  000046' C001' FFEE         	movff	1+?___flmul,postinc0
  6162  00004A' 0101               	movlb	1	; () banked
  6163  00004C' C002' FFEE         	movff	2+?___flmul,postinc0
  6164  000050' 0101               	movlb	1	; () banked
  6165  000052' C003' FFED         	movff	3+?___flmul,postdec0
  6166  000056' 52ED               	movf	postdec0
  6167  000058' 52ED               	movf	postdec0
  6168  00005A' EF00' F000'        	goto	l1067
  6169                           	line	7
  6170  00005E'                    l1067:
  6171                           			; BSR set to: ?
  6172                           
  6173  000060' 0012               	return
  6174  000062' FFFF               	dw	0FFFFh; errata NOP
  6175                           	opt stack 0
  6176                           GLOBAL __end_of___asflmul
  6177  000064'                    	__end_of___asflmul:
  6178                           	FNSIZE	___asflmul,0,6
  6179                           ; =============== function ___asflmul ends =====
                                 =======
  6180                           
  6181                           	signat	___asflmul,8316
  6182                           	global	_ser_putch
  6183                           	global	??_ser_putch
  6184                           	global	?_ser_putch
  6185                           
  6186                           ; *************** function _ser_putch **********
                                 *******
  6187                           ; Defined at:
  6188                           ;		line 82 in file "../../../lib/ser.c"
  6189                           ; Parameters:
  6190                           ;		c              size:   1offs:   0	type: unsig
                                 ned char 
  6191                           ; Auto variables:
  6192                           ;		None
  6193                           ; Return value:
  6194                           ;		type: void 
  6195                           ;		size: 0
  6196                           ; Registers used:
  6197                           ;		wreg, fsr0l, fsr0h, status,2, status,0
  6198                           ; Tracked objects:
  6199                           ;		On entry : 0/0
  6200                           ;		On exit  : 0/0
  6201                           ;		Unchanged: 0/0
  6202                           ; Data sizes:
  6203                           ;		Autos:    0
  6204                           ;		Params:   1
  6205                           ;		Temp:     2
  6206                           ;		Total:    3
  6207                           ; This function calls:
  6208                           ;		Nothing
  6209                           ; This function is called by:
  6210                           ;		_ser_puts
  6211                           ;		_output_putch
  6212                           ;		_measure_capacitance
  6213                           ; This function uses a non-reentrant model
  6214                           ; 
  6215                                   psect   text29,class=CODE,space=0,reloc=
                                 2
  6216                           
  6217                           	opt lm
  6218                           	file	"../../../lib/ser.c"
  6219                           	line	82
  6220  000000                     	__size_of_ser_putch	equ	__end_of_ser_putch-_ser
                                 _putch
  6221                           ;ser.c: 81: void
  6222                           ;ser.c: 82: ser_putch(char c) {
  6223                           	
  6224  000000'                    _ser_putch:		; BSR set to: ?
  6225                           
  6226                           	opt stack 25
  6227  000000' FFFF               	dw	0FFFFh
  6228                           	line	83
  6229  000002' EF00' F000'        	goto	l325
  6230                           	
  6231  000006'                    l326:		; BSR set to: ?
  6232                           
  6233  000008' EF00' F000'        	goto	l325
  6234                           	
  6235  00000C'                    l325:		; BSR set to: ?
  6236                           
  6237  00000E' C03A F000'         	movff	(c:58),??_ser_putch+0+0	;volatile
  6238  000012' 0101               	movlb	1	; () banked
  6239  000014' 6B00'              	clrf	(??_ser_putch+0+0+1)&0ffh
  6240  000016' 0E01               	movlw	01h
  6241  000018' 0101               	movlb	1	; () banked
  6242  00001A' 2700'              	addwf	(??_ser_putch+0+0)&0ffh
  6243  00001C' 0E00               	movlw	0
  6244  00001E' 2300'              	addwfc	(??_ser_putch+0+1)&0ffh
  6245  000020' 0E0F               	movlw	0Fh
  6246  000022' 0101               	movlb	1	; () banked
  6247  000024' 1700'              	andwf	(??_ser_putch+0+0)&0ffh
  6248  000026' 0E00               	movlw	0
  6249  000028' 1700'              	andwf	(??_ser_putch+0+1)&0ffh
  6250  00002A' 503B               	movf	((c:59)),c,w	;volatile
  6251  00002C' 0101               	movlb	1	; () banked
  6252  00002E' 1900'              	xorwf	(??_ser_putch+0+0)&0ffh,w
  6253  000030' 1100'              	iorwf	(??_ser_putch+0+1)&0ffh,w
  6254                           
  6255  000032' B4D8               	btfsc	status,2
  6256  000034' EF00' F000'        	goto	u3611
  6257  000038' EF00' F000'        	goto	u3610
  6258  00003C'                    u3611:
  6259  00003E' EF00' F000'        	goto	l326
  6260  000042'                    u3610:
  6261                           	
  6262  000044'                    l327:		; BSR set to: ?
  6263                           
  6264                           	line	84
  6265                           ;ser.c: 84: GIE = 0;
  6266  000044' 9EF2               	bcf	c:(32663/8),(32663)&7	;volatile
  6267                           	line	85
  6268                           ;ser.c: 85: txfifo[txiptr] = c;
  6269  000046' 0E14               	movlw	low((c:20))
  6270  000048' 243A               	addwf	((c:58)),c,w	;volatile
  6271  00004A' 6EE9               	movwf	c:fsr0l
  6272  00004C' 6AEA               	clrf	1+c:fsr0l
  6273  00004E' 0E00               	movlw	high((c:20))
  6274  000050' 22EA               	addwfc	1+c:fsr0l
  6275  000052' 0101               	movlb	1	; () banked
  6276  000054' C000' FFEF         	movff	(ser_putch@c),indf0
  6277                           
  6278                           	line	86
  6279                           ;ser.c: 86: txiptr = (txiptr + 1) & ((unsigned c
                                 har)16 - 1);
  6280  000058' 283A               	incf	((c:58)),c,w	;volatile
  6281  00005A' 0B0F               	andlw	low(0Fh)
  6282  00005C' 6E3A               	movwf	((c:58)),c	;volatile
  6283                           	line	87
  6284                           ;ser.c: 87: TXIE = 1;
  6285  00005E' 889D               	bsf	c:(31980/8),(31980)&7	;volatile
  6286                           	line	88
  6287                           ;ser.c: 88: GIE = 1;
  6288  000060' 8EF2               	bsf	c:(32663/8),(32663)&7	;volatile
  6289                           	line	89
  6290                           ;ser.c: 89: }
  6291  000062'                    l324:
  6292                           			; BSR set to: ?
  6293                           
  6294  000062' 0012               	return
  6295  000064' FFFF               	dw	0FFFFh; errata NOP
  6296                           	opt stack 0
  6297                           GLOBAL __end_of_ser_putch
  6298  000066'                    	__end_of_ser_putch:
  6299                           	FNSIZE	_ser_putch,2,1
  6300                           ; =============== function _ser_putch ends =====
                                 =======
  6301                           
  6302                           	signat	_ser_putch,4216
  6303                           	global	_eval_poly
  6304                           	global	??_eval_poly
  6305                           	global	?_eval_poly
  6306                           
  6307                           ; *************** function _eval_poly **********
                                 *******
  6308                           ; Defined at:
  6309                           ;		line 5 in file "/opt/hitech/picc-18/9.66/sour
                                 ces/evalpoly.c"
  6310                           ; Parameters:
  6311                           ;		x              size:   4offs:   0	type: void 
  6312                           ;		d              size:   2offs:   4	type: PTR c
                                 onst ; Largest target is 40
  6313                           ;		 -> F65(40), F64(36), 
  6314                           ;		n              size:   2offs:   6	type: int 
  6315                           ; Auto variables:
  6316                           ;		res         	       	type: int 
  6317                           ; Return value:
  6318                           ;		type: int 
  6319                           ;		size: 4
  6320                           ; Registers used:
  6321                           ;		wreg, fsr0l, fsr0h, status,2, status,0, tblpt
                                 rl, tblptrh, tblptru, tablat, cstack
  6322                           ; Tracked objects:
  6323                           ;		On entry : 0/0
  6324                           ;		On exit  : 0/0
  6325                           ;		Unchanged: 0/0
  6326                           ; Data sizes:
  6327                           ;		Autos:    4
  6328                           ;		Params:   8
  6329                           ;		Temp:     3
  6330                           ;		Total:   15
  6331                           ; This function calls:
  6332                           ;		___flmul
  6333                           ;		___fladd
  6334                           ; This function is called by:
  6335                           ;		_log
  6336                           ;		_exp
  6337                           ; This function uses a non-reentrant model
  6338                           ; 
  6339                                   psect   text30,class=CODE,space=0,reloc=
                                 2
  6340                           
  6341                           	opt lm
  6342                           	file	"/opt/hitech/picc-18/9.66/sources/evalpoly
                                 .c"
  6343                           	line	5
  6344  000000                     	__size_of_eval_poly	equ	__end_of_eval_poly-_eva
                                 l_poly
  6345                           	
  6346  000000'                    _eval_poly:		; BSR set to: ?
  6347                           
  6348                           	opt stack 25
  6349  000000' FFFF               	dw	0FFFFh
  6350                           	line	8
  6351  000002' C006' F004'        	movff	(eval_poly@n),??_eval_poly+4+0
  6352  000006' 90D8               	bcf	status,0
  6353  000008' 0101               	movlb	1	; () banked
  6354  00000A' 3700'              	rlcf	(??_eval_poly+4+0)&0ffh
  6355  00000C' 90D8               	bcf	status,0
  6356  00000E' 0101               	movlb	1	; () banked
  6357  000010' 3700'              	rlcf	(??_eval_poly+4+0)&0ffh
  6358                           
  6359  000012' 0101               	movlb	1	; () banked
  6360  000014' 5100'              	movf	(??_eval_poly+4+0)&0ffh,w
  6361  000016' 0101               	movlb	1	; () banked
  6362  000018' 0101               	movlb	1	; () banked
  6363  00001A' 2500'              	addwf	((eval_poly@d))&0ffh,w
  6364  00001C' 0101               	movlb	1	; () banked
  6365  00001E' 6F00'              	movwf	(??_eval_poly+5+0)&0ffh
  6366  000020' 6AE8               	clrf	wreg
  6367  000022' 0101               	movlb	1	; () banked
  6368  000024' BF00'              	btfsc	(??_eval_poly+4+0)&0ffh,7
  6369  000026' 68E8               	setf	wreg
  6370  000028' 0101               	movlb	1	; () banked
  6371  00002A' 0101               	movlb	1	; () banked
  6372  00002C' 2100'              	addwfc	((eval_poly@d+1))&0ffh,w
  6373  00002E' 0101               	movlb	1	; () banked
  6374  000030' 6F00'              	movwf	(??_eval_poly+5+0+1)&0ffh
  6375  000032' C005' FFF6         	movff	??_eval_poly+5+0,tblptrl
  6376  000036' C006' FFF7         	movff	??_eval_poly+5+1,tblptrh
  6377  00003A' 0009               	tblrd*+
  6378  00003C' FFFF               		dw	0FFFFh; errata NOP
  6379                           
  6380  00003E' 0101               	movlb	1	; () banked
  6381  000040' CFF5 F000'         	movff	tablat,(eval_poly@res)
  6382  000044' 0009               	tblrd*+
  6383  000046' FFFF               		dw	0FFFFh; errata NOP
  6384                           
  6385  000048' 0101               	movlb	1	; () banked
  6386  00004A' CFF5 F001'         	movff	tablat,(eval_poly@res+1)
  6387  00004E' 0009               	tblrd*+
  6388  000050' FFFF               		dw	0FFFFh; errata NOP
  6389                           
  6390  000052' 0101               	movlb	1	; () banked
  6391  000054' CFF5 F002'         	movff	tablat,(eval_poly@res+2)
  6392  000058' 000A               	tblrd*-
  6393  00005A' FFFF               		dw	0FFFFh; errata NOP
  6394                           
  6395  00005C' 0101               	movlb	1	; () banked
  6396  00005E' CFF5 F003'         	movff	tablat,(eval_poly@res+3)
  6397                           	line	9
  6398  000062' EF00' F000'        	goto	l1302
  6399                           	
  6400  000066'                    l1303:		; BSR set to: ?
  6401                           
  6402                           	line	10
  6403  000068' C000' F004'        	movff	(eval_poly@res),0+(?___flmul+04h)
  6404  00006C' C001' F005'        	movff	(eval_poly@res+1),1+(?___flmul+04h)
  6405  000070' C002' F006'        	movff	(eval_poly@res+2),2+(?___flmul+04h)
  6406  000074' C003' F007'        	movff	(eval_poly@res+3),3+(?___flmul+04h)
  6407  000078' C000' F000'        	movff	(eval_poly@x),(?___flmul)
  6408  00007C' C001' F001'        	movff	(eval_poly@x+1),(?___flmul+1)
  6409  000080' C002' F002'        	movff	(eval_poly@x+2),(?___flmul+2)
  6410  000084' C003' F003'        	movff	(eval_poly@x+3),(?___flmul+3)
  6411  000088' EC00' F000'        	call	___flmul	;wreg free
  6412  00008C' C000' F000'        	movff	0+?___flmul,(?___fladd)
  6413  000090' C001' F001'        	movff	1+?___flmul,(?___fladd+1)
  6414  000094' C002' F002'        	movff	2+?___flmul,(?___fladd+2)
  6415  000098' C003' F003'        	movff	3+?___flmul,(?___fladd+3)
  6416  00009C' 0101               	movlb	1	; () banked
  6417  00009E' 0101               	movlb	1	; () banked
  6418  0000A0' 0700'              	decf	((eval_poly@n))&0ffh
  6419  0000A2' A0D8               	btfss	status,0
  6420  0000A4' 0700'              	decf	((eval_poly@n+1))&0ffh
  6421  0000A6' C006' F004'        	movff	(eval_poly@n),??_eval_poly+4+0
  6422  0000AA' 90D8               	bcf	status,0
  6423  0000AC' 0101               	movlb	1	; () banked
  6424  0000AE' 3700'              	rlcf	(??_eval_poly+4+0)&0ffh
  6425  0000B0' 90D8               	bcf	status,0
  6426  0000B2' 0101               	movlb	1	; () banked
  6427  0000B4' 3700'              	rlcf	(??_eval_poly+4+0)&0ffh
  6428                           
  6429  0000B6' 0101               	movlb	1	; () banked
  6430  0000B8' 5100'              	movf	(??_eval_poly+4+0)&0ffh,w
  6431  0000BA' 0101               	movlb	1	; () banked
  6432  0000BC' 0101               	movlb	1	; () banked
  6433  0000BE' 2500'              	addwf	((eval_poly@d))&0ffh,w
  6434  0000C0' 0101               	movlb	1	; () banked
  6435  0000C2' 6F00'              	movwf	(??_eval_poly+5+0)&0ffh
  6436  0000C4' 6AE8               	clrf	wreg
  6437  0000C6' 0101               	movlb	1	; () banked
  6438  0000C8' BF00'              	btfsc	(??_eval_poly+4+0)&0ffh,7
  6439  0000CA' 68E8               	setf	wreg
  6440  0000CC' 0101               	movlb	1	; () banked
  6441  0000CE' 0101               	movlb	1	; () banked
  6442  0000D0' 2100'              	addwfc	((eval_poly@d+1))&0ffh,w
  6443  0000D2' 0101               	movlb	1	; () banked
  6444  0000D4' 6F00'              	movwf	(??_eval_poly+5+0+1)&0ffh
  6445  0000D6' C005' FFF6         	movff	??_eval_poly+5+0,tblptrl
  6446  0000DA' C006' FFF7         	movff	??_eval_poly+5+1,tblptrh
  6447  0000DE' 0009               	tblrd*+
  6448  0000E0' FFFF               		dw	0FFFFh; errata NOP
  6449                           
  6450  0000E2' 0101               	movlb	1	; () banked
  6451  0000E4' CFF5 F004'         	movff	tablat,0+(?___fladd+04h)
  6452  0000E8' 0009               	tblrd*+
  6453  0000EA' FFFF               		dw	0FFFFh; errata NOP
  6454                           
  6455  0000EC' 0101               	movlb	1	; () banked
  6456  0000EE' CFF5 F005'         	movff	tablat,1+(?___fladd+04h)
  6457  0000F2' 0009               	tblrd*+
  6458  0000F4' FFFF               		dw	0FFFFh; errata NOP
  6459                           
  6460  0000F6' 0101               	movlb	1	; () banked
  6461  0000F8' CFF5 F006'         	movff	tablat,2+(?___fladd+04h)
  6462  0000FC' 000A               	tblrd*-
  6463  0000FE' FFFF               		dw	0FFFFh; errata NOP
  6464                           
  6465  000100' 0101               	movlb	1	; () banked
  6466  000102' CFF5 F007'         	movff	tablat,3+(?___fladd+04h)
  6467  000106' EC00' F000'        	call	___fladd	;wreg free
  6468  00010A' C000' F000'        	movff	0+?___fladd,(eval_poly@res)
  6469  00010E' C001' F001'        	movff	1+?___fladd,(eval_poly@res+1)
  6470  000112' C002' F002'        	movff	2+?___fladd,(eval_poly@res+2)
  6471  000116' C003' F003'        	movff	3+?___fladd,(eval_poly@res+3)
  6472                           	
  6473  00011A'                    l1302:		; BSR set to: ?
  6474                           
  6475                           	line	9
  6476  00011C' 0101               	movlb	1	; () banked
  6477  00011E' 0101               	movlb	1	; () banked
  6478  000120' 5100'              	movf	((eval_poly@n+1))&0ffh,w
  6479  000122' 1100'              	iorwf ((eval_poly@n))&0ffh,w
  6480                           
  6481  000124' A4D8               	btfss	status,2
  6482  000126' EF00' F000'        	goto	u3621
  6483  00012A' EF00' F000'        	goto	u3620
  6484  00012E'                    u3621:
  6485  000130' EF00' F000'        	goto	l1303
  6486  000134'                    u3620:
  6487                           	
  6488  000136'                    l1304:		; BSR set to: ?
  6489                           
  6490                           	line	11
  6491  000136' C000' F000'        	movff	(eval_poly@res),(?_eval_poly)
  6492  00013A' C001' F001'        	movff	(eval_poly@res+1),(?_eval_poly+1)
  6493  00013E' C002' F002'        	movff	(eval_poly@res+2),(?_eval_poly+2)
  6494  000142' C003' F003'        	movff	(eval_poly@res+3),(?_eval_poly+3)
  6495  000146' EF00' F000'        	goto	l1301
  6496                           	line	12
  6497  00014A'                    l1301:
  6498                           			; BSR set to: ?
  6499                           
  6500  00014C' 0012               	return
  6501  00014E' FFFF               	dw	0FFFFh; errata NOP
  6502                           	opt stack 0
  6503                           GLOBAL __end_of_eval_poly
  6504  000150'                    	__end_of_eval_poly:
  6505                           	FNSIZE	_eval_poly,7,8
  6506                           ; =============== function _eval_poly ends =====
                                 =======
  6507                           
  6508                           	signat	_eval_poly,12412
  6509                           	global	___fldiv
  6510                           	global	??___fldiv
  6511                           	global	?___fldiv
  6512                           
  6513                           ; *************** function ___fldiv ************
                                 *****
  6514                           ; Defined at:
  6515                           ;		line 19 in file "/opt/hitech/picc-18/9.66/sou
                                 rces/fldiv.c"
  6516                           ; Parameters:
  6517                           ;		f1             size:   4offs:   0	type: int 
  6518                           ;		f2             size:   4offs:   4	type: int 
  6519                           ; Auto variables:
  6520                           ;		exp2        	       	type: unsigned char 
  6521                           ;		sign1       	       	type: unsigned char 
  6522                           ;		exp1        	       	type: unsigned char 
  6523                           ;		sign2       	       	type: unsigned char 
  6524                           ;		f3          	       	type: unsigned char 
  6525                           ; Return value:
  6526                           ;		type: unsigned char 
  6527                           ;		size: 4
  6528                           ; Registers used:
  6529                           ;		wreg, fsr0l, fsr0h, status,2, status,0, cstac
                                 k
  6530                           ; Tracked objects:
  6531                           ;		On entry : 0/0
  6532                           ;		On exit  : 0/0
  6533                           ;		Unchanged: 0/0
  6534                           ; Data sizes:
  6535                           ;		Autos:    8
  6536                           ;		Params:   8
  6537                           ;		Temp:     1
  6538                           ;		Total:   17
  6539                           ; This function calls:
  6540                           ;		___flunpack
  6541                           ;		___flpack
  6542                           ; This function is called by:
  6543                           ;		_format_double
  6544                           ;		_measure_capacitance
  6545                           ;		_measure_inductance
  6546                           ;		_exp
  6547                           ; This function uses a non-reentrant model
  6548                           ; 
  6549                                   psect   text31,class=CODE,space=0,reloc=
                                 2
  6550                           
  6551                           	opt lm
  6552                           	file	"/opt/hitech/picc-18/9.66/sources/fldiv.c"
  6553                           	line	19
  6554  000000                     	__size_of___fldiv	equ	__end_of___fldiv-___fldiv
  6555                           	
  6556  000000'                    ___fldiv:		; BSR set to: ?
  6557                           
  6558                           	opt stack 25
  6559  000000' FFFF               	dw	0FFFFh
  6560                           	line	23
  6561  000002' 0E00               	movlw	low(0)
  6562  000004' 0101               	movlb	1	; () banked
  6563  000006' 0101               	movlb	1	; () banked
  6564  000008' 6F00'              	movwf	((___fldiv@f3))&0ffh
  6565  00000A' 0E00               	movlw	high(0)
  6566  00000C' 0101               	movlb	1	; () banked
  6567  00000E' 6F00'              	movwf	((___fldiv@f3+1))&0ffh
  6568  000010' 0E00               	movlw	low highword(0)
  6569  000012' 0101               	movlb	1	; () banked
  6570  000014' 6F00'              	movwf	((___fldiv@f3+2))&0ffh
  6571  000016' 0E00               	movlw	high highword(0)
  6572  000018' 0101               	movlb	1	; () banked
  6573  00001A' 6F00'              	movwf	((___fldiv@f3+3))&0ffh
  6574                           	line	24
  6575  00001C' 0101               	movlb	1	; () banked
  6576  00001E' 0E00'              	movlw	low(___fldiv@exp1)
  6577  000020' 0101               	movlb	1	; () banked
  6578  000022' 0101               	movlb	1	; () banked
  6579  000024' 6F00'              	movwf	(0+(?___flunpack+02h))&0ffh
  6580  000026' 0101               	movlb	1	; () banked
  6581  000028' 0E00'              	movlw	high(___fldiv@exp1)
  6582  00002A' 0101               	movlb	1	; () banked
  6583  00002C' 6F00'              	movwf	(1+(?___flunpack+02h))&0ffh
  6584  00002E' 0101               	movlb	1	; () banked
  6585  000030' 0E00'              	movlw	low(___fldiv@f1)
  6586  000032' 0101               	movlb	1	; () banked
  6587  000034' 0101               	movlb	1	; () banked
  6588  000036' 6F00'              	movwf	((?___flunpack))&0ffh
  6589  000038' 0101               	movlb	1	; () banked
  6590  00003A' 0E00'              	movlw	high(___fldiv@f1)
  6591  00003C' 0101               	movlb	1	; () banked
  6592  00003E' 6F00'              	movwf	((?___flunpack+1))&0ffh
  6593  000040' EC00' F000'        	call	___flunpack	;wreg free
  6594  000044' 0101               	movlb	1	; () banked
  6595  000046' 0101               	movlb	1	; () banked
  6596  000048' 6F00'              	movwf	((___fldiv@sign1))&0ffh
  6597                           	line	25
  6598  00004A' 0101               	movlb	1	; () banked
  6599  00004C' 0101               	movlb	1	; () banked
  6600  00004E' 6700'              	tstfsz	((___fldiv@exp1))&0ffh
  6601  000050' EF00' F000'        	goto	u3571
  6602  000054' EF00' F000'        	goto	u3570
  6603  000058'                    u3571:
  6604  00005A' EF00' F000'        	goto	l1048
  6605  00005E'                    u3570:
  6606                           	line	26
  6607  000060' C004' F000'        	movff	(___fldiv@f3),(?___fldiv)
  6608  000064' C005' F001'        	movff	(___fldiv@f3+1),(?___fldiv+1)
  6609  000068' C006' F002'        	movff	(___fldiv@f3+2),(?___fldiv+2)
  6610  00006C' C007' F003'        	movff	(___fldiv@f3+3),(?___fldiv+3)
  6611  000070' EF00' F000'        	goto	l1047
  6612                           	
  6613  000074'                    l1048:		; BSR set to: ?
  6614                           
  6615                           	line	27
  6616  000076' 0101               	movlb	1	; () banked
  6617  000078' 0E00'              	movlw	low(___fldiv@exp2)
  6618  00007A' 0101               	movlb	1	; () banked
  6619  00007C' 0101               	movlb	1	; () banked
  6620  00007E' 6F00'              	movwf	(0+(?___flunpack+02h))&0ffh
  6621  000080' 0101               	movlb	1	; () banked
  6622  000082' 0E00'              	movlw	high(___fldiv@exp2)
  6623  000084' 0101               	movlb	1	; () banked
  6624  000086' 6F00'              	movwf	(1+(?___flunpack+02h))&0ffh
  6625  000088' 0101               	movlb	1	; () banked
  6626  00008A' 0E00'              	movlw	low(___fldiv@f2)
  6627  00008C' 0101               	movlb	1	; () banked
  6628  00008E' 0101               	movlb	1	; () banked
  6629  000090' 6F00'              	movwf	((?___flunpack))&0ffh
  6630  000092' 0101               	movlb	1	; () banked
  6631  000094' 0E00'              	movlw	high(___fldiv@f2)
  6632  000096' 0101               	movlb	1	; () banked
  6633  000098' 6F00'              	movwf	((?___flunpack+1))&0ffh
  6634  00009A' EC00' F000'        	call	___flunpack	;wreg free
  6635  00009E' 0101               	movlb	1	; () banked
  6636  0000A0' 0101               	movlb	1	; () banked
  6637  0000A2' 6F00'              	movwf	((___fldiv@sign2))&0ffh
  6638                           	line	28
  6639  0000A4' 0101               	movlb	1	; () banked
  6640  0000A6' 0101               	movlb	1	; () banked
  6641  0000A8' 6700'              	tstfsz	((___fldiv@exp2))&0ffh
  6642  0000AA' EF00' F000'        	goto	u3581
  6643  0000AE' EF00' F000'        	goto	u3580
  6644  0000B2'                    u3581:
  6645  0000B4' EF00' F000'        	goto	l1049
  6646  0000B8'                    u3580:
  6647                           	line	29
  6648  0000BA' C004' F000'        	movff	(___fldiv@f3),(?___fldiv)
  6649  0000BE' C005' F001'        	movff	(___fldiv@f3+1),(?___fldiv+1)
  6650  0000C2' C006' F002'        	movff	(___fldiv@f3+2),(?___fldiv+2)
  6651  0000C6' C007' F003'        	movff	(___fldiv@f3+3),(?___fldiv+3)
  6652  0000CA' EF00' F000'        	goto	l1047
  6653                           	
  6654  0000CE'                    l1049:		; BSR set to: ?
  6655                           
  6656                           	line	30
  6657  0000D0' 0101               	movlb	1	; () banked
  6658  0000D2' 0101               	movlb	1	; () banked
  6659  0000D4' 5100'              	movf	((___fldiv@exp2))&0ffh,w
  6660  0000D6' 0F89               	addlw	low(089h)
  6661  0000D8' 0101               	movlb	1	; () banked
  6662  0000DA' 0101               	movlb	1	; () banked
  6663  0000DC' 5F00'              	subwf	((___fldiv@exp1))&0ffh
  6664                           	line	31
  6665  0000DE' 0101               	movlb	1	; () banked
  6666  0000E0' 0101               	movlb	1	; () banked
  6667  0000E2' 5100'              	movf	((___fldiv@sign2))&0ffh,w
  6668  0000E4' 0101               	movlb	1	; () banked
  6669  0000E6' 0101               	movlb	1	; () banked
  6670  0000E8' 1B00'              	xorwf	((___fldiv@sign1))&0ffh
  6671                           	line	32
  6672  0000EA' 0101               	movlb	1	; () banked
  6673  0000EC' 6F00'              	movwf	(??___fldiv+8+0)&0ffh
  6674  0000EE' 0E20               	movlw	low(020h)
  6675  0000F0' 0101               	movlb	1	; () banked
  6676  0000F2' 0101               	movlb	1	; () banked
  6677  0000F4' 6F00'              	movwf	((___fldiv@sign2))&0ffh
  6678  0000F6' 0101               	movlb	1	; () banked
  6679  0000F8' 5100'              	movf	(??___fldiv+8+0)&0ffh,w
  6680                           	line	33
  6681                           	
  6682  0000FA'                    l1052:		; BSR set to: ?
  6683                           
  6684                           	line	34
  6685  0000FC' 0101               	movlb	1	; () banked
  6686  0000FE' 90D8               	bcf	status,0
  6687  000100' 0101               	movlb	1	; () banked
  6688  000102' 3700'              	rlcf	((___fldiv@f3))&0ffh
  6689  000104' 0101               	movlb	1	; () banked
  6690  000106' 3700'              	rlcf	((___fldiv@f3+1))&0ffh
  6691  000108' 0101               	movlb	1	; () banked
  6692  00010A' 3700'              	rlcf	((___fldiv@f3+2))&0ffh
  6693  00010C' 0101               	movlb	1	; () banked
  6694  00010E' 3700'              	rlcf	((___fldiv@f3+3))&0ffh
  6695                           	line	35
  6696  000110' 0101               	movlb	1	; () banked
  6697  000112' 0101               	movlb	1	; () banked
  6698  000114' 5100'              	movf	((___fldiv@f2))&0ffh,w
  6699  000116' 0101               	movlb	1	; () banked
  6700  000118' 0101               	movlb	1	; () banked
  6701  00011A' 5D00'              	subwf	((___fldiv@f1))&0ffh,w
  6702  00011C' 0101               	movlb	1	; () banked
  6703  00011E' 0101               	movlb	1	; () banked
  6704  000120' 5100'              	movf	((___fldiv@f2+1))&0ffh,w
  6705  000122' 0101               	movlb	1	; () banked
  6706  000124' 0101               	movlb	1	; () banked
  6707  000126' 5900'              	subwfb	((___fldiv@f1+1))&0ffh,w
  6708  000128' 0101               	movlb	1	; () banked
  6709  00012A' 0101               	movlb	1	; () banked
  6710  00012C' 5100'              	movf	((___fldiv@f2+2))&0ffh,w
  6711  00012E' 0101               	movlb	1	; () banked
  6712  000130' 0101               	movlb	1	; () banked
  6713  000132' 5900'              	subwfb	((___fldiv@f1+2))&0ffh,w
  6714  000134' 0101               	movlb	1	; () banked
  6715  000136' 0101               	movlb	1	; () banked
  6716  000138' 5100'              	movf	((___fldiv@f2+3))&0ffh,w
  6717  00013A' 0101               	movlb	1	; () banked
  6718  00013C' 0101               	movlb	1	; () banked
  6719  00013E' 5900'              	subwfb	((___fldiv@f1+3))&0ffh,w
  6720  000140' A0D8               	btfss	status,0
  6721  000142' EF00' F000'        	goto	u3591
  6722  000146' EF00' F000'        	goto	u3590
  6723  00014A'                    u3591:
  6724  00014C' EF00' F000'        	goto	l1053
  6725  000150'                    u3590:
  6726                           	line	36
  6727  000152' 0101               	movlb	1	; () banked
  6728  000154' 0101               	movlb	1	; () banked
  6729  000156' 5100'              	movf	((___fldiv@f2))&0ffh,w
  6730  000158' 0101               	movlb	1	; () banked
  6731  00015A' 0101               	movlb	1	; () banked
  6732  00015C' 5F00'              	subwf	((___fldiv@f1))&0ffh
  6733  00015E' 0101               	movlb	1	; () banked
  6734  000160' 0101               	movlb	1	; () banked
  6735  000162' 5100'              	movf	((___fldiv@f2+1))&0ffh,w
  6736  000164' 0101               	movlb	1	; () banked
  6737  000166' 0101               	movlb	1	; () banked
  6738  000168' 5B00'              	subwfb	((___fldiv@f1+1))&0ffh
  6739  00016A' 0101               	movlb	1	; () banked
  6740  00016C' 0101               	movlb	1	; () banked
  6741  00016E' 5100'              	movf	((___fldiv@f2+2))&0ffh,w
  6742  000170' 0101               	movlb	1	; () banked
  6743  000172' 0101               	movlb	1	; () banked
  6744  000174' 5B00'              	subwfb	((___fldiv@f1+2))&0ffh
  6745  000176' 0101               	movlb	1	; () banked
  6746  000178' 0101               	movlb	1	; () banked
  6747  00017A' 5100'              	movf	((___fldiv@f2+3))&0ffh,w
  6748  00017C' 0101               	movlb	1	; () banked
  6749  00017E' 0101               	movlb	1	; () banked
  6750  000180' 5B00'              	subwfb	((___fldiv@f1+3))&0ffh
  6751                           	line	37
  6752  000182' 0101               	movlb	1	; () banked
  6753  000184' 0101               	movlb	1	; () banked
  6754  000186' 8100'              	bsf	(0+(0/8)+(___fldiv@f3))&0ffh,(0)&7
  6755                           	line	38
  6756                           	
  6757  000188'                    l1053:		; BSR set to: ?
  6758                           
  6759                           	line	39
  6760  00018A' 0101               	movlb	1	; () banked
  6761  00018C' 90D8               	bcf	status,0
  6762  00018E' 0101               	movlb	1	; () banked
  6763  000190' 3700'              	rlcf	((___fldiv@f1))&0ffh
  6764  000192' 0101               	movlb	1	; () banked
  6765  000194' 3700'              	rlcf	((___fldiv@f1+1))&0ffh
  6766  000196' 0101               	movlb	1	; () banked
  6767  000198' 3700'              	rlcf	((___fldiv@f1+2))&0ffh
  6768  00019A' 0101               	movlb	1	; () banked
  6769  00019C' 3700'              	rlcf	((___fldiv@f1+3))&0ffh
  6770                           	line	40
  6771  00019E' 0101               	movlb	1	; () banked
  6772  0001A0' 0101               	movlb	1	; () banked
  6773  0001A2' 2F00'              	decfsz	((___fldiv@sign2))&0ffh
  6774                           	
  6775  0001A4' EF00' F000'        	goto	l1052
  6776                           	
  6777  0001A8'                    l1051:		; BSR set to: ?
  6778                           
  6779                           	line	41
  6780  0001A8' C002' F002'        	movff	(___fldiv@exp1),0+(?___flpack+02h)
  6781  0001AC' 0101               	movlb	1	; () banked
  6782  0001AE' 0E00'              	movlw	low(___fldiv@f3)
  6783  0001B0' 0101               	movlb	1	; () banked
  6784  0001B2' 0101               	movlb	1	; () banked
  6785  0001B4' 6F00'              	movwf	((?___flpack))&0ffh
  6786  0001B6' 0101               	movlb	1	; () banked
  6787  0001B8' 0E00'              	movlw	high(___fldiv@f3)
  6788  0001BA' 0101               	movlb	1	; () banked
  6789  0001BC' 6F00'              	movwf	((?___flpack+1))&0ffh
  6790  0001BE' EC00' F000'        	call	___flpack	;wreg free
  6791                           	line	42
  6792  0001C2' 0101               	movlb	1	; () banked
  6793  0001C4' 0101               	movlb	1	; () banked
  6794  0001C6' 5100'              	movf	((___fldiv@sign1))&0ffh,w
  6795  0001C8' B4D8               	btfsc	status,2
  6796  0001CA' EF00' F000'        	goto	u3601
  6797  0001CE' EF00' F000'        	goto	u3600
  6798  0001D2'                    u3601:
  6799  0001D4' EF00' F000'        	goto	l1054
  6800  0001D8'                    u3600:
  6801                           	line	43
  6802  0001DA' 0101               	movlb	1	; () banked
  6803  0001DC' 0101               	movlb	1	; () banked
  6804  0001DE' 8F00'              	bsf	(0+(31/8)+(___fldiv@f3))&0ffh,(31)&7
  6805                           	
  6806  0001E0'                    l1054:		; BSR set to: ?
  6807                           
  6808                           	line	44
  6809  0001E2' C004' F000'        	movff	(___fldiv@f3),(?___fldiv)
  6810  0001E6' C005' F001'        	movff	(___fldiv@f3+1),(?___fldiv+1)
  6811  0001EA' C006' F002'        	movff	(___fldiv@f3+2),(?___fldiv+2)
  6812  0001EE' C007' F003'        	movff	(___fldiv@f3+3),(?___fldiv+3)
  6813  0001F2' EF00' F000'        	goto	l1047
  6814                           	line	45
  6815  0001F6'                    l1047:
  6816                           			; BSR set to: ?
  6817                           
  6818  0001F8' 0012               	return
  6819  0001FA' FFFF               	dw	0FFFFh; errata NOP
  6820                           	opt stack 0
  6821                           GLOBAL __end_of___fldiv
  6822  0001FC'                    	__end_of___fldiv:
  6823                           	FNSIZE	___fldiv,9,8
  6824                           ; =============== function ___fldiv ends =======
                                 =====
  6825                           
  6826                           	signat	___fldiv,8316
  6827                           	global	___awtofl
  6828                           	global	??___awtofl
  6829                           	global	?___awtofl
  6830                           
  6831                           ; *************** function ___awtofl ***********
                                 ******
  6832                           ; Defined at:
  6833                           ;		line 16 in file "/opt/hitech/picc-18/9.66/sou
                                 rces/awtofl.c"
  6834                           ; Parameters:
  6835                           ;		c              size:   2offs:   0	type: int 
  6836                           ; Auto variables:
  6837                           ;		f1          	       	type: int 
  6838                           ; Return value:
  6839                           ;		type: int 
  6840                           ;		size: 4
  6841                           ; Registers used:
  6842                           ;		wreg, fsr0l, fsr0h, status,2, status,0, cstac
                                 k
  6843                           ; Tracked objects:
  6844                           ;		On entry : 0/0
  6845                           ;		On exit  : 0/0
  6846                           ;		Unchanged: 0/0
  6847                           ; Data sizes:
  6848                           ;		Autos:    4
  6849                           ;		Params:   4
  6850                           ;		Temp:     1
  6851                           ;		Total:    9
  6852                           ; This function calls:
  6853                           ;		___flpack
  6854                           ;		___flneg
  6855                           ; This function is called by:
  6856                           ;		_format_double
  6857                           ;		_log
  6858                           ;		_exp
  6859                           ; This function uses a non-reentrant model
  6860                           ; 
  6861                                   psect   text32,class=CODE,space=0,reloc=
                                 2
  6862                           
  6863                           	opt lm
  6864                           	file	"/opt/hitech/picc-18/9.66/sources/awtofl.c
                                 "
  6865                           	line	16
  6866  000000                     	__size_of___awtofl	equ	__end_of___awtofl-___awt
                                 ofl
  6867                           	
  6868  000000'                    ___awtofl:		; BSR set to: ?
  6869                           
  6870                           	opt stack 25
  6871  000000' FFFF               	dw	0FFFFh
  6872                           	line	19
  6873  000002' 0101               	movlb	1	; () banked
  6874  000004' 0101               	movlb	1	; () banked
  6875  000006' 5100'              	movf	((___awtofl@c+1))&0ffh,w
  6876  000008' 1100'              	iorwf ((___awtofl@c))&0ffh,w
  6877                           
  6878  00000A' A4D8               	btfss	status,2
  6879  00000C' EF00' F000'        	goto	u3501
  6880  000010' EF00' F000'        	goto	u3500
  6881  000014'                    u3501:
  6882  000016' EF00' F000'        	goto	l991
  6883  00001A'                    u3500:
  6884                           	line	20
  6885  00001C' 0E00               	movlw	low(0.0000000000000000)
  6886  00001E' 0101               	movlb	1	; () banked
  6887  000020' 0101               	movlb	1	; () banked
  6888  000022' 6F00'              	movwf	((?___awtofl))&0ffh
  6889  000024' 0E00               	movlw	high(0.0000000000000000)
  6890  000026' 0101               	movlb	1	; () banked
  6891  000028' 6F00'              	movwf	((?___awtofl+1))&0ffh
  6892  00002A' 0E00               	movlw	low highword(0.0000000000000000)
  6893  00002C' 0101               	movlb	1	; () banked
  6894  00002E' 6F00'              	movwf	((?___awtofl+2))&0ffh
  6895  000030' 0E00               	movlw	high highword(0.0000000000000000)
  6896  000032' 0101               	movlb	1	; () banked
  6897  000034' 6F00'              	movwf	((?___awtofl+3))&0ffh
  6898  000036' EF00' F000'        	goto	l990
  6899                           	
  6900  00003A'                    l991:		; BSR set to: ?
  6901                           
  6902                           	line	21
  6903  00003C' 0101               	movlb	1	; () banked
  6904  00003E' 0101               	movlb	1	; () banked
  6905  000040' C000' F000'        	movff	(___awtofl@c),(___awtofl@f1)
  6906  000044' 0101               	movlb	1	; () banked
  6907  000046' 0101               	movlb	1	; () banked
  6908  000048' C001' F001'        	movff	(___awtofl@c+1),(___awtofl@f1+1)
  6909  00004C' 0101               	movlb	1	; () banked
  6910  00004E' 0E00               	movlw	0
  6911  000050' 0101               	movlb	1	; () banked
  6912  000052' BF00'              	btfsc	((___awtofl@f1+1))&0ffh,7
  6913  000054' 0EFF               	movlw	-1
  6914  000056' 0101               	movlb	1	; () banked
  6915  000058' 6F00'              	movwf	((___awtofl@f1+2))&0ffh
  6916  00005A' 0101               	movlb	1	; () banked
  6917  00005C' 6F00'              	movwf	((___awtofl@f1+3))&0ffh
  6918                           	line	22
  6919  00005E' 0101               	movlb	1	; () banked
  6920  000060' 0101               	movlb	1	; () banked
  6921  000062' AF00'              	btfss	((___awtofl@c+1))&0ffh,7
  6922  000064' EF00' F000'        	goto	u3511
  6923  000068' EF00' F000'        	goto	u3510
  6924  00006C'                    u3511:
  6925  00006E' EF00' F000'        	goto	l992
  6926  000072'                    u3510:
  6927                           	line	23
  6928  000074' 0101               	movlb	1	; () banked
  6929  000076' 0101               	movlb	1	; () banked
  6930  000078' 1F00'              	comf	((___awtofl@f1+3))&0ffh
  6931  00007A' 0101               	movlb	1	; () banked
  6932  00007C' 1F00'              	comf	((___awtofl@f1+2))&0ffh
  6933  00007E' 0101               	movlb	1	; () banked
  6934  000080' 1F00'              	comf	((___awtofl@f1+1))&0ffh
  6935  000082' 0101               	movlb	1	; () banked
  6936  000084' 6D00'              	negf	((___awtofl@f1))&0ffh
  6937  000086' 0E00               	movlw	0
  6938  000088' 0101               	movlb	1	; () banked
  6939  00008A' 2300'              	addwfc	((___awtofl@f1+1))&0ffh
  6940  00008C' 0101               	movlb	1	; () banked
  6941  00008E' 2300'              	addwfc	((___awtofl@f1+2))&0ffh
  6942  000090' 0101               	movlb	1	; () banked
  6943  000092' 2300'              	addwfc	((___awtofl@f1+3))&0ffh
  6944                           	
  6945  000094'                    l992:		; BSR set to: ?
  6946                           
  6947                           	line	24
  6948  000096' 0101               	movlb	1	; () banked
  6949  000098' 6F00'              	movwf	(??___awtofl+4+0)&0ffh
  6950  00009A' 0E96               	movlw	low(096h)
  6951  00009C' 0101               	movlb	1	; () banked
  6952  00009E' 0101               	movlb	1	; () banked
  6953  0000A0' 6F00'              	movwf	(0+(?___flpack+02h))&0ffh
  6954  0000A2' 0101               	movlb	1	; () banked
  6955  0000A4' 5100'              	movf	(??___awtofl+4+0)&0ffh,w
  6956  0000A6' 0101               	movlb	1	; () banked
  6957  0000A8' 0E00'              	movlw	low(___awtofl@f1)
  6958  0000AA' 0101               	movlb	1	; () banked
  6959  0000AC' 0101               	movlb	1	; () banked
  6960  0000AE' 6F00'              	movwf	((?___flpack))&0ffh
  6961  0000B0' 0101               	movlb	1	; () banked
  6962  0000B2' 0E00'              	movlw	high(___awtofl@f1)
  6963  0000B4' 0101               	movlb	1	; () banked
  6964  0000B6' 6F00'              	movwf	((?___flpack+1))&0ffh
  6965  0000B8' EC00' F000'        	call	___flpack	;wreg free
  6966                           	line	25
  6967  0000BC' 0101               	movlb	1	; () banked
  6968  0000BE' 0101               	movlb	1	; () banked
  6969  0000C0' AF00'              	btfss	((___awtofl@c+1))&0ffh,7
  6970  0000C2' EF00' F000'        	goto	u3521
  6971  0000C6' EF00' F000'        	goto	u3520
  6972  0000CA'                    u3521:
  6973  0000CC' EF00' F000'        	goto	l993
  6974  0000D0'                    u3520:
  6975                           	line	26
  6976  0000D2' C000' F000'        	movff	(___awtofl@f1),(?___flneg)
  6977  0000D6' C001' F001'        	movff	(___awtofl@f1+1),(?___flneg+1)
  6978  0000DA' C002' F002'        	movff	(___awtofl@f1+2),(?___flneg+2)
  6979  0000DE' C003' F003'        	movff	(___awtofl@f1+3),(?___flneg+3)
  6980  0000E2' EC00' F000'        	call	___flneg	;wreg free
  6981  0000E6' C000' F000'        	movff	0+?___flneg,(___awtofl@f1)
  6982  0000EA' C001' F001'        	movff	1+?___flneg,(___awtofl@f1+1)
  6983  0000EE' C002' F002'        	movff	2+?___flneg,(___awtofl@f1+2)
  6984  0000F2' C003' F003'        	movff	3+?___flneg,(___awtofl@f1+3)
  6985                           	
  6986  0000F6'                    l993:		; BSR set to: ?
  6987                           
  6988                           	line	27
  6989  0000F8' C000' F000'        	movff	(___awtofl@f1),(?___awtofl)
  6990  0000FC' C001' F001'        	movff	(___awtofl@f1+1),(?___awtofl+1)
  6991  000100' C002' F002'        	movff	(___awtofl@f1+2),(?___awtofl+2)
  6992  000104' C003' F003'        	movff	(___awtofl@f1+3),(?___awtofl+3)
  6993  000108' EF00' F000'        	goto	l990
  6994                           	line	28
  6995  00010C'                    l990:
  6996                           			; BSR set to: ?
  6997                           
  6998  00010E' 0012               	return
  6999  000110' FFFF               	dw	0FFFFh; errata NOP
  7000                           	opt stack 0
  7001                           GLOBAL __end_of___awtofl
  7002  000112'                    	__end_of___awtofl:
  7003                           	FNSIZE	___awtofl,5,4
  7004                           ; =============== function ___awtofl ends ======
                                 ======
  7005                           
  7006                           	signat	___awtofl,4220
  7007                           	global	_ldexp
  7008                           	global	??_ldexp
  7009                           	global	?_ldexp
  7010                           
  7011                           ; *************** function _ldexp **************
                                 ***
  7012                           ; Defined at:
  7013                           ;		line 278 in file "/opt/hitech/picc-18/9.66/so
                                 urces/frexp.c"
  7014                           ; Parameters:
  7015                           ;		value          size:   4offs:   0	type: int 
  7016                           ;		newexp         size:   2offs:   4	type: int 
  7017                           ; Auto variables:
  7018                           ;		None
  7019                           ; Return value:
  7020                           ;		type: int 
  7021                           ;		size: 4
  7022                           ; Registers used:
  7023                           ;		wreg, fsr0l, fsr0h, status,2, status,0
  7024                           ; Tracked objects:
  7025                           ;		On entry : 0/0
  7026                           ;		On exit  : 0/0
  7027                           ;		Unchanged: 0/0
  7028                           ; Data sizes:
  7029                           ;		Autos:    0
  7030                           ;		Params:   6
  7031                           ;		Temp:     3
  7032                           ;		Total:    9
  7033                           ; This function calls:
  7034                           ; This function is called by:
  7035                           ;		_exp
  7036                           ; This function uses a non-reentrant model
  7037                           ; 
  7038                                   psect   text33,class=CODE,space=0,reloc=
                                 2
  7039                           
  7040                           	opt lm
  7041                           	file	"/opt/hitech/picc-18/9.66/sources/frexp.c"
  7042                           	line	278
  7043  000000                     	__size_of_ldexp	equ	__end_of_ldexp-_ldexp
  7044                           	
  7045  000000'                    _ldexp:		; BSR set to: ?
  7046                           
  7047                           	opt stack 25
  7048  000000' FFFF               	dw	0FFFFh
  7049                           	line	279
  7050  000002' 0101               	movlb	1	; () banked
  7051  000004' EE00' F000'        	lfsr	0,(ldexp@value)
  7052  000008' 50EE               	movf	postinc0,w
  7053  00000A' 10EE               	iorwf	postinc0,w
  7054  00000C' 10EE               	iorwf	postinc0,w
  7055  00000E' 10EE               	iorwf	postinc0,w
  7056  000010' A4D8               	btfss	status,2
  7057  000012' EF00' F000'        	goto	u3531
  7058  000016' EF00' F000'        	goto	u3530
  7059  00001A'                    u3531:
  7060  00001C' EF00' F000'        	goto	l900
  7061  000020'                    u3530:
  7062                           	line	280
  7063  000022' 0E00               	movlw	low(0.0000000000000000)
  7064  000024' 0101               	movlb	1	; () banked
  7065  000026' 0101               	movlb	1	; () banked
  7066  000028' 6F00'              	movwf	((?_ldexp))&0ffh
  7067  00002A' 0E00               	movlw	high(0.0000000000000000)
  7068  00002C' 0101               	movlb	1	; () banked
  7069  00002E' 6F00'              	movwf	((?_ldexp+1))&0ffh
  7070  000030' 0E00               	movlw	low highword(0.0000000000000000)
  7071  000032' 0101               	movlb	1	; () banked
  7072  000034' 6F00'              	movwf	((?_ldexp+2))&0ffh
  7073  000036' 0E00               	movlw	high highword(0.0000000000000000)
  7074  000038' 0101               	movlb	1	; () banked
  7075  00003A' 6F00'              	movwf	((?_ldexp+3))&0ffh
  7076  00003C' EF00' F000'        	goto	l899
  7077                           	
  7078  000040'                    l900:		; BSR set to: ?
  7079                           
  7080                           	line	282
  7081  000042' 0101               	movlb	1	; () banked
  7082  000044' 5100'              	movf	(0+(ldexp@value+03h))&0ffh,w
  7083  000046' 0B7F               	andlw	(1<<7)-1
  7084  000048' 0101               	movlb	1	; () banked
  7085  00004A' 6F00'              	movwf	(??_ldexp+0+0)&0ffh
  7086  00004C' 90D8               	bcf	status,0
  7087  00004E' 0101               	movlb	1	; () banked
  7088  000050' 3500'              	rlcf	((??_ldexp+0+0))&0ffh,w
  7089  000052' 0101               	movlb	1	; () banked
  7090  000054' 6F00'              	movwf	(??_ldexp+1+0)&0ffh
  7091  000056' 0101               	movlb	1	; () banked
  7092  000058' 6B00'              	clrf	1+(??_ldexp+1+0)&0ffh
  7093  00005A' 0101               	movlb	1	; () banked
  7094  00005C' 3700'              	rlcf	1+(??_ldexp+1+0)&0ffh
  7095  00005E' 0101               	movlb	1	; () banked
  7096  000060' 5100'              	movf	(??_ldexp+1+0)&0ffh,w
  7097  000062' 0101               	movlb	1	; () banked
  7098  000064' 0101               	movlb	1	; () banked
  7099  000066' 2700'              	addwf	((ldexp@newexp))&0ffh
  7100  000068' 0101               	movlb	1	; () banked
  7101  00006A' 5100'              	movf	(??_ldexp+1+1)&0ffh,w
  7102  00006C' 0101               	movlb	1	; () banked
  7103  00006E' 0101               	movlb	1	; () banked
  7104  000070' 2300'              	addwfc	((ldexp@newexp+1))&0ffh
  7105                           
  7106                           	line	283
  7107  000072' 0101               	movlb	1	; () banked
  7108  000074' 3500'              	rlcf	(0+(ldexp@value+02h))&0ffh,w
  7109  000076' 36E8               	rlcf	wreg,f
  7110  000078' 0B01               	andlw	1
  7111  00007A' 0101               	movlb	1	; () banked
  7112  00007C' 6F00'              	movwf	(??_ldexp+0+0)&0ffh
  7113  00007E' 0101               	movlb	1	; () banked
  7114  000080' 5100'              	movf	((??_ldexp+0+0))&0ffh,w
  7115  000082' 0101               	movlb	1	; () banked
  7116  000084' 0101               	movlb	1	; () banked
  7117  000086' 2700'              	addwf	((ldexp@newexp))&0ffh
  7118  000088' 0E00               	movlw	0
  7119  00008A' 0101               	movlb	1	; () banked
  7120  00008C' 2300'              	addwfc	((ldexp@newexp+1))&0ffh
  7121                           	line	287
  7122  00008E' 0101               	movlb	1	; () banked
  7123  000090' 0101               	movlb	1	; () banked
  7124  000092' AF00'              	btfss	((ldexp@newexp+1))&0ffh,7
  7125  000094' EF00' F000'        	goto	u3541
  7126  000098' EF00' F000'        	goto	u3540
  7127  00009C'                    u3541:
  7128  00009E' EF00' F000'        	goto	l901
  7129  0000A2'                    u3540:
  7130                           	line	288
  7131  0000A4' 0E22               	movlw	low(022h)
  7132  0000A6' 6E4A               	movwf	((c:74)),c
  7133  0000A8' 0E00               	movlw	high(022h)
  7134  0000AA' 6E4B               	movwf	((c:74+1)),c
  7135                           	line	289
  7136  0000AC' 0E00               	movlw	low(0.0000000000000000)
  7137  0000AE' 0101               	movlb	1	; () banked
  7138  0000B0' 0101               	movlb	1	; () banked
  7139  0000B2' 6F00'              	movwf	((?_ldexp))&0ffh
  7140  0000B4' 0E00               	movlw	high(0.0000000000000000)
  7141  0000B6' 0101               	movlb	1	; () banked
  7142  0000B8' 6F00'              	movwf	((?_ldexp+1))&0ffh
  7143  0000BA' 0E00               	movlw	low highword(0.0000000000000000)
  7144  0000BC' 0101               	movlb	1	; () banked
  7145  0000BE' 6F00'              	movwf	((?_ldexp+2))&0ffh
  7146  0000C0' 0E00               	movlw	high highword(0.0000000000000000)
  7147  0000C2' 0101               	movlb	1	; () banked
  7148  0000C4' 6F00'              	movwf	((?_ldexp+3))&0ffh
  7149  0000C6' EF00' F000'        	goto	l899
  7150                           	line	291
  7151                           	
  7152  0000CA'                    l901:		; BSR set to: ?
  7153                           
  7154  0000CC' 0101               	movlb	1	; () banked
  7155  0000CE' 0101               	movlb	1	; () banked
  7156  0000D0' 5100'              	movf	((ldexp@newexp+1))&0ffh,w
  7157  0000D2' 0A80               	xorlw	80h
  7158  0000D4' 0F7F               	addlw	-((01h)^80h)
  7159  0000D6' 0E00               	movlw	0
  7160  0000D8' B4D8               	btfsc	status,2
  7161  0000DA' 5D00'              	subwf	((ldexp@newexp))&0ffh,w
  7162  0000DC' A0D8               	btfss	status,0
  7163  0000DE' EF00' F000'        	goto	u3551
  7164  0000E2' EF00' F000'        	goto	u3550
  7165  0000E6'                    u3551:
  7166  0000E8' EF00' F000'        	goto	l903
  7167  0000EC'                    u3550:
  7168                           	line	292
  7169  0000EE' 0E22               	movlw	low(022h)
  7170  0000F0' 6E4A               	movwf	((c:74)),c
  7171  0000F2' 0E00               	movlw	high(022h)
  7172  0000F4' 6E4B               	movwf	((c:74+1)),c
  7173                           	line	293
  7174  0000F6' 0101               	movlb	1	; () banked
  7175  0000F8' 0101               	movlb	1	; () banked
  7176  0000FA' AF00'              	btfss	((ldexp@value+3))&0ffh,7
  7177  0000FC' EF00' F000'        	goto	u3561
  7178  000100' EF00' F000'        	goto	u3560
  7179  000104'                    u3561:
  7180  000106' EF00' F000'        	goto	l904
  7181  00010A'                    u3560:
  7182                           	line	294
  7183  00010C' 0EFF               	movlw	low(-3.4028234699999998e+38)
  7184  00010E' 0101               	movlb	1	; () banked
  7185  000110' 0101               	movlb	1	; () banked
  7186  000112' 6F00'              	movwf	((?_ldexp))&0ffh
  7187  000114' 0EFF               	movlw	high(-3.4028234699999998e+38)
  7188  000116' 0101               	movlb	1	; () banked
  7189  000118' 6F00'              	movwf	((?_ldexp+1))&0ffh
  7190  00011A' 0E7F               	movlw	low highword(-3.4028234699999998e+38)
  7191  00011C' 0101               	movlb	1	; () banked
  7192  00011E' 6F00'              	movwf	((?_ldexp+2))&0ffh
  7193  000120' 0EFF               	movlw	high highword(-3.4028234699999998e+38)
  7194  000122' 0101               	movlb	1	; () banked
  7195  000124' 6F00'              	movwf	((?_ldexp+3))&0ffh
  7196  000126' EF00' F000'        	goto	l899
  7197                           	line	295
  7198                           	
  7199  00012A'                    l904:		; BSR set to: ?
  7200                           
  7201                           	line	296
  7202  00012C' 0EFF               	movlw	low(3.4028234699999998e+38)
  7203  00012E' 0101               	movlb	1	; () banked
  7204  000130' 0101               	movlb	1	; () banked
  7205  000132' 6F00'              	movwf	((?_ldexp))&0ffh
  7206  000134' 0EFF               	movlw	high(3.4028234699999998e+38)
  7207  000136' 0101               	movlb	1	; () banked
  7208  000138' 6F00'              	movwf	((?_ldexp+1))&0ffh
  7209  00013A' 0E7F               	movlw	low highword(3.4028234699999998e+38)
  7210  00013C' 0101               	movlb	1	; () banked
  7211  00013E' 6F00'              	movwf	((?_ldexp+2))&0ffh
  7212  000140' 0E7F               	movlw	high highword(3.4028234699999998e+38)
  7213  000142' 0101               	movlb	1	; () banked
  7214  000144' 6F00'              	movwf	((?_ldexp+3))&0ffh
  7215  000146' EF00' F000'        	goto	l899
  7216                           	line	298
  7217                           	
  7218  00014A'                    l903:		; BSR set to: ?
  7219                           
  7220                           	line	300
  7221  00014C' 0101               	movlb	1	; () banked
  7222  00014E' 0101               	movlb	1	; () banked
  7223  000150' 3500'              	rlcf	((ldexp@newexp+1))&0ffh,w
  7224  000152' 0101               	movlb	1	; () banked
  7225  000154' 3100'              	rrcf	((ldexp@newexp+1))&0ffh,w
  7226  000156' 0101               	movlb	1	; () banked
  7227  000158' 6F00'              	movwf	(??_ldexp+0+0+1)&0ffh
  7228  00015A' 0101               	movlb	1	; () banked
  7229  00015C' 0101               	movlb	1	; () banked
  7230  00015E' 3100'              	rrcf	((ldexp@newexp))&0ffh,w
  7231  000160' 0101               	movlb	1	; () banked
  7232  000162' 6F00'              	movwf	(??_ldexp+0+0)&0ffh
  7233  000164' 0101               	movlb	1	; () banked
  7234  000166' 5100'              	movf	(0+(ldexp@value+03h))&0ffh,w
  7235  000168' 0101               	movlb	1	; () banked
  7236  00016A' 1900'              	xorwf	(??_ldexp+0+0)&0ffh,w
  7237  00016C' 0B80               	andlw	not ((1<<7)-1)
  7238  00016E' 1900'              	xorwf	(??_ldexp+0+0)&0ffh,w
  7239  000170' 0101               	movlb	1	; () banked
  7240  000172' 6F00'              	movwf	(0+(ldexp@value+03h))&0ffh
  7241                           	line	301
  7242  000174' C004' F000'        	movff	(ldexp@newexp),??_ldexp+0+0
  7243  000178' 0E01               	movlw	01h
  7244  00017A' 0101               	movlb	1	; () banked
  7245  00017C' 1700'              	andwf	(??_ldexp+0+0)&0ffh
  7246  00017E' 0101               	movlb	1	; () banked
  7247  000180' 3300'              	rrcf	(??_ldexp+0+0)&0ffh
  7248  000182' 3300'              	rrcf	(??_ldexp+0+0)&0ffh
  7249  000184' 0101               	movlb	1	; () banked
  7250  000186' 5100'              	movf	(0+(ldexp@value+02h))&0ffh,w
  7251  000188' 0101               	movlb	1	; () banked
  7252  00018A' 1900'              	xorwf	(??_ldexp+0+0)&0ffh,w
  7253  00018C' 0B7F               	andlw	not (((1<<1)-1)<<7)
  7254  00018E' 1900'              	xorwf	(??_ldexp+0+0)&0ffh,w
  7255  000190' 0101               	movlb	1	; () banked
  7256  000192' 6F00'              	movwf	(0+(ldexp@value+02h))&0ffh
  7257                           	line	305
  7258                           	
  7259  000194'                    l906:		; BSR set to: ?
  7260                           
  7261                           	
  7262  000194'                    l902:		; BSR set to: ?
  7263                           
  7264                           	line	306
  7265  000194' C000' F000'        	movff	(ldexp@value),(?_ldexp)
  7266  000198' C001' F001'        	movff	(ldexp@value+1),(?_ldexp+1)
  7267  00019C' C002' F002'        	movff	(ldexp@value+2),(?_ldexp+2)
  7268  0001A0' C003' F003'        	movff	(ldexp@value+3),(?_ldexp+3)
  7269  0001A4' EF00' F000'        	goto	l899
  7270                           	line	307
  7271  0001A8'                    l899:
  7272                           			; BSR set to: ?
  7273                           
  7274  0001AA' 0012               	return
  7275  0001AC' FFFF               	dw	0FFFFh; errata NOP
  7276                           	opt stack 0
  7277                           GLOBAL __end_of_ldexp
  7278  0001AE'                    	__end_of_ldexp:
  7279                           	FNSIZE	_ldexp,3,6
  7280                           ; =============== function _ldexp ends =========
                                 ===
  7281                           
  7282                           	signat	_ldexp,8316
  7283                           	global	___flsub
  7284                           	global	??___flsub
  7285                           	global	?___flsub
  7286                           
  7287                           ; *************** function ___flsub ************
                                 *****
  7288                           ; Defined at:
  7289                           ;		line 17 in file "/opt/hitech/picc-18/9.66/sou
                                 rces/flsub.c"
  7290                           ; Parameters:
  7291                           ;		f1             size:   4offs:   0	type: int 
  7292                           ;		f2             size:   4offs:   4	type: int 
  7293                           ; Auto variables:
  7294                           ;		None
  7295                           ; Return value:
  7296                           ;		type: int 
  7297                           ;		size: 4
  7298                           ; Registers used:
  7299                           ;		wreg, fsr0l, fsr0h, status,2, status,0, cstac
                                 k
  7300                           ; Tracked objects:
  7301                           ;		On entry : 0/0
  7302                           ;		On exit  : 0/0
  7303                           ;		Unchanged: 0/0
  7304                           ; Data sizes:
  7305                           ;		Autos:    0
  7306                           ;		Params:   8
  7307                           ;		Temp:     0
  7308                           ;		Total:    8
  7309                           ; This function calls:
  7310                           ;		___fladd
  7311                           ; This function is called by:
  7312                           ;		_measure_capacitance
  7313                           ;		_measure_inductance
  7314                           ;		___asflsub
  7315                           ; This function uses a non-reentrant model
  7316                           ; 
  7317                                   psect   text34,class=CODE,space=0,reloc=
                                 2
  7318                           
  7319                           	opt lm
  7320                           	file	"/opt/hitech/picc-18/9.66/sources/flsub.c"
  7321                           	line	17
  7322  000000                     	__size_of___flsub	equ	__end_of___flsub-___flsub
  7323                           	
  7324  000000'                    ___flsub:		; BSR set to: ?
  7325                           
  7326                           	opt stack 24
  7327  000000' FFFF               	dw	0FFFFh
  7328                           	line	18
  7329  000002' 0E00               	movlw	0
  7330  000004' 0101               	movlb	1	; () banked
  7331  000006' 0101               	movlb	1	; () banked
  7332  000008' 1B00'              	xorwf	((___flsub@f2))&0ffh
  7333  00000A' 0E00               	movlw	0
  7334  00000C' 0101               	movlb	1	; () banked
  7335  00000E' 1B00'              	xorwf	((___flsub@f2+1))&0ffh
  7336  000010' 0E00               	movlw	0
  7337  000012' 0101               	movlb	1	; () banked
  7338  000014' 1B00'              	xorwf	((___flsub@f2+2))&0ffh
  7339  000016' 0E80               	movlw	080h
  7340  000018' 0101               	movlb	1	; () banked
  7341  00001A' 1B00'              	xorwf	((___flsub@f2+3))&0ffh
  7342                           	line	19
  7343  00001C' C004' F004'        	movff	(___flsub@f2),0+(?___fladd+04h)
  7344  000020' C005' F005'        	movff	(___flsub@f2+1),1+(?___fladd+04h)
  7345  000024' C006' F006'        	movff	(___flsub@f2+2),2+(?___fladd+04h)
  7346  000028' C007' F007'        	movff	(___flsub@f2+3),3+(?___fladd+04h)
  7347  00002C' C000' F000'        	movff	(___flsub@f1),(?___fladd)
  7348  000030' C001' F001'        	movff	(___flsub@f1+1),(?___fladd+1)
  7349  000034' C002' F002'        	movff	(___flsub@f1+2),(?___fladd+2)
  7350  000038' C003' F003'        	movff	(___flsub@f1+3),(?___fladd+3)
  7351  00003C' EC00' F000'        	call	___fladd	;wreg free
  7352  000040' C000' F000'        	movff	0+?___fladd,(?___flsub)
  7353  000044' C001' F001'        	movff	1+?___fladd,(?___flsub+1)
  7354  000048' C002' F002'        	movff	2+?___fladd,(?___flsub+2)
  7355  00004C' C003' F003'        	movff	3+?___fladd,(?___flsub+3)
  7356  000050' EF00' F000'        	goto	l1087
  7357                           	line	20
  7358  000054'                    l1087:
  7359                           			; BSR set to: ?
  7360                           
  7361  000056' 0012               	return
  7362  000058' FFFF               	dw	0FFFFh; errata NOP
  7363                           	opt stack 0
  7364                           GLOBAL __end_of___flsub
  7365  00005A'                    	__end_of___flsub:
  7366                           	FNSIZE	___flsub,0,8
  7367                           ; =============== function ___flsub ends =======
                                 =====
  7368                           
  7369                           	signat	___flsub,8316
  7370                           	global	___altofl
  7371                           	global	??___altofl
  7372                           	global	?___altofl
  7373                           
  7374                           ; *************** function ___altofl ***********
                                 ******
  7375                           ; Defined at:
  7376                           ;		line 16 in file "/opt/hitech/picc-18/9.66/sou
                                 rces/altofl.c"
  7377                           ; Parameters:
  7378                           ;		c              size:   4offs:   0	type: long 
  7379                           ; Auto variables:
  7380                           ;		exp         	       	type: unsigned char 
  7381                           ;		sign        	       	type: unsigned char 
  7382                           ;		f1          	       	type: unsigned char 
  7383                           ; Return value:
  7384                           ;		type: unsigned char 
  7385                           ;		size: 4
  7386                           ; Registers used:
  7387                           ;		wreg, fsr0l, fsr0h, status,2, status,0, cstac
                                 k
  7388                           ; Tracked objects:
  7389                           ;		On entry : 0/0
  7390                           ;		On exit  : 0/0
  7391                           ;		Unchanged: 0/0
  7392                           ; Data sizes:
  7393                           ;		Autos:    6
  7394                           ;		Params:   4
  7395                           ;		Temp:     1
  7396                           ;		Total:   11
  7397                           ; This function calls:
  7398                           ;		___flpack
  7399                           ;		___flneg
  7400                           ; This function is called by:
  7401                           ;		_floor
  7402                           ; This function uses a non-reentrant model
  7403                           ; 
  7404                                   psect   text35,class=CODE,space=0,reloc=
                                 2
  7405                           
  7406                           	opt lm
  7407                           	file	"/opt/hitech/picc-18/9.66/sources/altofl.c
                                 "
  7408                           	line	16
  7409  000000                     	__size_of___altofl	equ	__end_of___altofl-___alt
                                 ofl
  7410                           	
  7411  000000'                    ___altofl:		; BSR set to: ?
  7412                           
  7413                           	opt stack 24
  7414  000000' FFFF               	dw	0FFFFh
  7415                           	line	20
  7416  000002' 0101               	movlb	1	; () banked
  7417  000004' 5100'              	movf	((___altofl@c+3))&0ffh,w
  7418  000006' 1100'              	iorwf ((___altofl@c))&0ffh,w
  7419  000008' 1100'              	iorwf ((___altofl@c+1))&0ffh,w
  7420  00000A' 1100'              	iorwf ((___altofl@c+2))&0ffh,w
  7421                           
  7422  00000C' A4D8               	btfss	status,2
  7423  00000E' EF00' F000'        	goto	u3631
  7424  000012' EF00' F000'        	goto	u3630
  7425  000016'                    u3631:
  7426  000018' EF00' F000'        	goto	l956
  7427  00001C'                    u3630:
  7428                           	line	21
  7429  00001E' 0E00               	movlw	low(0.0000000000000000)
  7430  000020' 0101               	movlb	1	; () banked
  7431  000022' 0101               	movlb	1	; () banked
  7432  000024' 6F00'              	movwf	((?___altofl))&0ffh
  7433  000026' 0E00               	movlw	high(0.0000000000000000)
  7434  000028' 0101               	movlb	1	; () banked
  7435  00002A' 6F00'              	movwf	((?___altofl+1))&0ffh
  7436  00002C' 0E00               	movlw	low highword(0.0000000000000000)
  7437  00002E' 0101               	movlb	1	; () banked
  7438  000030' 6F00'              	movwf	((?___altofl+2))&0ffh
  7439  000032' 0E00               	movlw	high highword(0.0000000000000000)
  7440  000034' 0101               	movlb	1	; () banked
  7441  000036' 6F00'              	movwf	((?___altofl+3))&0ffh
  7442  000038' EF00' F000'        	goto	l955
  7443                           	
  7444  00003C'                    l956:		; BSR set to: ?
  7445                           
  7446                           	line	22
  7447  00003E' 0101               	movlb	1	; () banked
  7448  000040' 6F00'              	movwf	(??___altofl+6+0)&0ffh
  7449  000042' 0E00               	movlw	low(0)
  7450  000044' 0101               	movlb	1	; () banked
  7451  000046' 0101               	movlb	1	; () banked
  7452  000048' 6F00'              	movwf	((___altofl@sign))&0ffh
  7453  00004A' 0101               	movlb	1	; () banked
  7454  00004C' 5100'              	movf	(??___altofl+6+0)&0ffh,w
  7455                           	line	23
  7456  00004E' 0101               	movlb	1	; () banked
  7457  000050' 0101               	movlb	1	; () banked
  7458  000052' AF00'              	btfss	((___altofl@c+3))&0ffh,7
  7459  000054' EF00' F000'        	goto	u3641
  7460  000058' EF00' F000'        	goto	u3640
  7461  00005C'                    u3641:
  7462  00005E' EF00' F000'        	goto	l957
  7463  000062'                    u3640:
  7464                           	line	24
  7465  000064' 0101               	movlb	1	; () banked
  7466  000066' 0101               	movlb	1	; () banked
  7467  000068' 1F00'              	comf	((___altofl@c+3))&0ffh
  7468  00006A' 0101               	movlb	1	; () banked
  7469  00006C' 1F00'              	comf	((___altofl@c+2))&0ffh
  7470  00006E' 0101               	movlb	1	; () banked
  7471  000070' 1F00'              	comf	((___altofl@c+1))&0ffh
  7472  000072' 0101               	movlb	1	; () banked
  7473  000074' 6D00'              	negf	((___altofl@c))&0ffh
  7474  000076' 0E00               	movlw	0
  7475  000078' 0101               	movlb	1	; () banked
  7476  00007A' 2300'              	addwfc	((___altofl@c+1))&0ffh
  7477  00007C' 0101               	movlb	1	; () banked
  7478  00007E' 2300'              	addwfc	((___altofl@c+2))&0ffh
  7479  000080' 0101               	movlb	1	; () banked
  7480  000082' 2300'              	addwfc	((___altofl@c+3))&0ffh
  7481                           	line	25
  7482  000084' 0101               	movlb	1	; () banked
  7483  000086' 6F00'              	movwf	(??___altofl+6+0)&0ffh
  7484  000088' 0E01               	movlw	low(01h)
  7485  00008A' 0101               	movlb	1	; () banked
  7486  00008C' 0101               	movlb	1	; () banked
  7487  00008E' 6F00'              	movwf	((___altofl@sign))&0ffh
  7488  000090' 0101               	movlb	1	; () banked
  7489  000092' 5100'              	movf	(??___altofl+6+0)&0ffh,w
  7490                           	line	26
  7491                           	
  7492  000094'                    l957:		; BSR set to: ?
  7493                           
  7494                           	line	27
  7495  000096' 0101               	movlb	1	; () banked
  7496  000098' 6F00'              	movwf	(??___altofl+6+0)&0ffh
  7497  00009A' 0E96               	movlw	low(096h)
  7498  00009C' 0101               	movlb	1	; () banked
  7499  00009E' 0101               	movlb	1	; () banked
  7500  0000A0' 6F00'              	movwf	((___altofl@exp))&0ffh
  7501  0000A2' 0101               	movlb	1	; () banked
  7502  0000A4' 5100'              	movf	(??___altofl+6+0)&0ffh,w
  7503                           	line	28
  7504  0000A6' C000' F002'        	movff	(___altofl@c),(___altofl@f1)
  7505  0000AA' C001' F003'        	movff	(___altofl@c+1),(___altofl@f1+1)
  7506  0000AE' C002' F004'        	movff	(___altofl@c+2),(___altofl@f1+2)
  7507  0000B2' C003' F005'        	movff	(___altofl@c+3),(___altofl@f1+3)
  7508                           	line	29
  7509  0000B6' C000' F002'        	movff	(___altofl@exp),0+(?___flpack+02h)
  7510  0000BA' 0101               	movlb	1	; () banked
  7511  0000BC' 0E00'              	movlw	low(___altofl@f1)
  7512  0000BE' 0101               	movlb	1	; () banked
  7513  0000C0' 0101               	movlb	1	; () banked
  7514  0000C2' 6F00'              	movwf	((?___flpack))&0ffh
  7515  0000C4' 0101               	movlb	1	; () banked
  7516  0000C6' 0E00'              	movlw	high(___altofl@f1)
  7517  0000C8' 0101               	movlb	1	; () banked
  7518  0000CA' 6F00'              	movwf	((?___flpack+1))&0ffh
  7519  0000CC' EC00' F000'        	call	___flpack	;wreg free
  7520                           	line	30
  7521  0000D0' 0101               	movlb	1	; () banked
  7522  0000D2' 0101               	movlb	1	; () banked
  7523  0000D4' 5100'              	movf	((___altofl@sign))&0ffh,w
  7524  0000D6' B4D8               	btfsc	status,2
  7525  0000D8' EF00' F000'        	goto	u3651
  7526  0000DC' EF00' F000'        	goto	u3650
  7527  0000E0'                    u3651:
  7528  0000E2' EF00' F000'        	goto	l958
  7529  0000E6'                    u3650:
  7530                           	line	31
  7531  0000E8' C002' F000'        	movff	(___altofl@f1),(?___flneg)
  7532  0000EC' C003' F001'        	movff	(___altofl@f1+1),(?___flneg+1)
  7533  0000F0' C004' F002'        	movff	(___altofl@f1+2),(?___flneg+2)
  7534  0000F4' C005' F003'        	movff	(___altofl@f1+3),(?___flneg+3)
  7535  0000F8' EC00' F000'        	call	___flneg	;wreg free
  7536  0000FC' C000' F002'        	movff	0+?___flneg,(___altofl@f1)
  7537  000100' C001' F003'        	movff	1+?___flneg,(___altofl@f1+1)
  7538  000104' C002' F004'        	movff	2+?___flneg,(___altofl@f1+2)
  7539  000108' C003' F005'        	movff	3+?___flneg,(___altofl@f1+3)
  7540                           	
  7541  00010C'                    l958:		; BSR set to: ?
  7542                           
  7543                           	line	32
  7544  00010E' C002' F000'        	movff	(___altofl@f1),(?___altofl)
  7545  000112' C003' F001'        	movff	(___altofl@f1+1),(?___altofl+1)
  7546  000116' C004' F002'        	movff	(___altofl@f1+2),(?___altofl+2)
  7547  00011A' C005' F003'        	movff	(___altofl@f1+3),(?___altofl+3)
  7548  00011E' EF00' F000'        	goto	l955
  7549                           	line	33
  7550  000122'                    l955:
  7551                           			; BSR set to: ?
  7552                           
  7553  000124' 0012               	return
  7554  000126' FFFF               	dw	0FFFFh; errata NOP
  7555                           	opt stack 0
  7556                           GLOBAL __end_of___altofl
  7557  000128'                    	__end_of___altofl:
  7558                           	FNSIZE	___altofl,7,4
  7559                           ; =============== function ___altofl ends ======
                                 ======
  7560                           
  7561                           	signat	___altofl,4220
  7562                           	global	_frexp
  7563                           	global	??_frexp
  7564                           	global	?_frexp
  7565                           
  7566                           ; *************** function _frexp **************
                                 ***
  7567                           ; Defined at:
  7568                           ;		line 255 in file "/opt/hitech/picc-18/9.66/so
                                 urces/frexp.c"
  7569                           ; Parameters:
  7570                           ;		value          size:   4offs:   0	type: unsig
                                 ned char 
  7571                           ;		eptr           size:   2offs:   4	type: PTR i
                                 nt ; Largest target is 2
  7572                           ;		 -> log@exp(2), floor@expon(2), 
  7573                           ; Auto variables:
  7574                           ;		None
  7575                           ; Return value:
  7576                           ;		type: PTR int 
  7577                           ;		size: 4
  7578                           ; Registers used:
  7579                           ;		wreg, fsr0l, fsr0h, status,2, status,0
  7580                           ; Tracked objects:
  7581                           ;		On entry : 0/0
  7582                           ;		On exit  : 0/0
  7583                           ;		Unchanged: 0/0
  7584                           ; Data sizes:
  7585                           ;		Autos:    0
  7586                           ;		Params:   6
  7587                           ;		Temp:     3
  7588                           ;		Total:    9
  7589                           ; This function calls:
  7590                           ;		Nothing
  7591                           ; This function is called by:
  7592                           ;		_floor
  7593                           ;		_log
  7594                           ; This function uses a non-reentrant model
  7595                           ; 
  7596                                   psect   text36,class=CODE,space=0,reloc=
                                 2
  7597                           
  7598                           	opt lm
  7599                           	file	"/opt/hitech/picc-18/9.66/sources/frexp.c"
  7600                           	line	255
  7601  000000                     	__size_of_frexp	equ	__end_of_frexp-_frexp
  7602                           	
  7603  000000'                    _frexp:		; BSR set to: ?
  7604                           
  7605                           	opt stack 24
  7606  000000' FFFF               	dw	0FFFFh
  7607                           	line	256
  7608  000002' 0101               	movlb	1	; () banked
  7609  000004' EE00' F000'        	lfsr	0,(frexp@value)
  7610  000008' 50EE               	movf	postinc0,w
  7611  00000A' 10EE               	iorwf	postinc0,w
  7612  00000C' 10EE               	iorwf	postinc0,w
  7613  00000E' 10EE               	iorwf	postinc0,w
  7614  000010' A4D8               	btfss	status,2
  7615  000012' EF00' F000'        	goto	u3661
  7616  000016' EF00' F000'        	goto	u3660
  7617  00001A'                    u3661:
  7618  00001C' EF00' F000'        	goto	l898
  7619  000020'                    u3660:
  7620                           	line	257
  7621  000022' C004' FFE9         	movff	(frexp@eptr),fsr0l
  7622  000026' C005' FFEA         	movff	(frexp@eptr+1),fsr0h
  7623  00002A' 0E00               	movlw	low(0)
  7624  00002C' 6EEE               	movwf	postinc0
  7625  00002E' 0E00               	movlw	high(0)
  7626  000030' 6EED               	movwf	postdec0
  7627                           	line	258
  7628  000032' 0E00               	movlw	low(0.0000000000000000)
  7629  000034' 0101               	movlb	1	; () banked
  7630  000036' 0101               	movlb	1	; () banked
  7631  000038' 6F00'              	movwf	((?_frexp))&0ffh
  7632  00003A' 0E00               	movlw	high(0.0000000000000000)
  7633  00003C' 0101               	movlb	1	; () banked
  7634  00003E' 6F00'              	movwf	((?_frexp+1))&0ffh
  7635  000040' 0E00               	movlw	low highword(0.0000000000000000)
  7636  000042' 0101               	movlb	1	; () banked
  7637  000044' 6F00'              	movwf	((?_frexp+2))&0ffh
  7638  000046' 0E00               	movlw	high highword(0.0000000000000000)
  7639  000048' 0101               	movlb	1	; () banked
  7640  00004A' 6F00'              	movwf	((?_frexp+3))&0ffh
  7641  00004C' EF00' F000'        	goto	l897
  7642                           	line	259
  7643                           	
  7644  000050'                    l898:		; BSR set to: ?
  7645                           
  7646                           	line	261
  7647  000052' 0101               	movlb	1	; () banked
  7648  000054' 5100'              	movf	(0+(frexp@value+03h))&0ffh,w
  7649  000056' 0B7F               	andlw	(1<<7)-1
  7650  000058' 0101               	movlb	1	; () banked
  7651  00005A' 6F00'              	movwf	(??_frexp+0+0)&0ffh
  7652  00005C' 90D8               	bcf	status,0
  7653  00005E' 0101               	movlb	1	; () banked
  7654  000060' 3500'              	rlcf	((??_frexp+0+0))&0ffh,w
  7655  000062' 0101               	movlb	1	; () banked
  7656  000064' 6F00'              	movwf	(??_frexp+1+0)&0ffh
  7657  000066' 0101               	movlb	1	; () banked
  7658  000068' 6B00'              	clrf	1+(??_frexp+1+0)&0ffh
  7659  00006A' 0101               	movlb	1	; () banked
  7660  00006C' 3700'              	rlcf	1+(??_frexp+1+0)&0ffh
  7661  00006E' C004' FFE9         	movff	(frexp@eptr),fsr0l
  7662  000072' C005' FFEA         	movff	(frexp@eptr+1),fsr0h
  7663  000076' C001' FFEE         	movff	??_frexp+1+0,postinc0
  7664  00007A' C002' FFED         	movff	??_frexp+1+1,postdec0
  7665                           
  7666                           	line	262
  7667  00007E' 0101               	movlb	1	; () banked
  7668  000080' 3500'              	rlcf	(0+(frexp@value+02h))&0ffh,w
  7669  000082' 36E8               	rlcf	wreg,f
  7670  000084' 0B01               	andlw	1
  7671  000086' 0101               	movlb	1	; () banked
  7672  000088' 6F00'              	movwf	(??_frexp+0+0)&0ffh
  7673  00008A' 0101               	movlb	1	; () banked
  7674  00008C' 5100'              	movf	((??_frexp+0+0))&0ffh,w
  7675  00008E' C004' FFE9         	movff	(frexp@eptr),fsr0l
  7676  000092' C005' FFEA         	movff	(frexp@eptr+1),fsr0h
  7677  000096' 12EE               	iorwf	postinc0
  7678  000098' 0E00               	movlw	0
  7679  00009A' 12ED               	iorwf	postdec0
  7680                           	line	263
  7681  00009C' C004' FFE9         	movff	(frexp@eptr),fsr0l
  7682  0000A0' C005' FFEA         	movff	(frexp@eptr+1),fsr0h
  7683  0000A4' 0E82               	movlw	low(-126)
  7684  0000A6' 26EE               	addwf	postinc0
  7685  0000A8' 0EFF               	movlw	high(-126)
  7686  0000AA' 22ED               	addwfc	postdec0
  7687                           	line	268
  7688  0000AC' 0101               	movlb	1	; () banked
  7689  0000AE' 8100'              		bsf	(0+(frexp@value+03h))&0ffh, 0+0
  7690  0000B0' 0101               	movlb	1	; () banked
  7691  0000B2' 8300'              	bsf	(0+(frexp@value+03h))&0ffh, 0+1
  7692  0000B4' 0101               	movlb	1	; () banked
  7693  0000B6' 8500'              	bsf	(0+(frexp@value+03h))&0ffh, 0+2
  7694  0000B8' 0101               	movlb	1	; () banked
  7695  0000BA' 8700'              	bsf	(0+(frexp@value+03h))&0ffh, 0+3
  7696  0000BC' 0101               	movlb	1	; () banked
  7697  0000BE' 8900'              	bsf	(0+(frexp@value+03h))&0ffh, 0+4
  7698  0000C0' 0101               	movlb	1	; () banked
  7699  0000C2' 8B00'              	bsf	(0+(frexp@value+03h))&0ffh, 0+5
  7700  0000C4' 0101               	movlb	1	; () banked
  7701  0000C6' 9D00'              	bcf	(0+(frexp@value+03h))&0ffh, 0+6
  7702  0000C8' 000B               	tblrd+*
  7703  0000CA' FFFF               	dw	0FFFFh; errata NOP
  7704  0000CC' 000E               	tblwt*-
  7705                           	line	269
  7706  0000CE' 0101               	movlb	1	; () banked
  7707  0000D0' 9F00'              	bcf	(0+(frexp@value+02h))&0ffh,7
  7708                           	line	273
  7709  0000D2' C000' F000'        	movff	(frexp@value),(?_frexp)
  7710  0000D6' C001' F001'        	movff	(frexp@value+1),(?_frexp+1)
  7711  0000DA' C002' F002'        	movff	(frexp@value+2),(?_frexp+2)
  7712  0000DE' C003' F003'        	movff	(frexp@value+3),(?_frexp+3)
  7713  0000E2' EF00' F000'        	goto	l897
  7714                           	line	274
  7715  0000E6'                    l897:
  7716                           			; BSR set to: ?
  7717                           
  7718  0000E8' 0012               	return
  7719  0000EA' FFFF               	dw	0FFFFh; errata NOP
  7720                           	opt stack 0
  7721                           GLOBAL __end_of_frexp
  7722  0000EC'                    	__end_of_frexp:
  7723                           	FNSIZE	_frexp,3,6
  7724                           ; =============== function _frexp ends =========
                                 ===
  7725                           
  7726                           	signat	_frexp,8316
  7727                           	global	___flmul
  7728                           	global	??___flmul
  7729                           	global	?___flmul
  7730                           
  7731                           ; *************** function ___flmul ************
                                 *****
  7732                           ; Defined at:
  7733                           ;		line 18 in file "/opt/hitech/picc-18/9.66/sou
                                 rces/flmul.c"
  7734                           ; Parameters:
  7735                           ;		f1             size:   4offs:   0	type: PTR i
                                 nt 
  7736                           ;		f2             size:   4offs:   4	type: PTR i
                                 nt 
  7737                           ; Auto variables:
  7738                           ;		sign1       	       	type: unsigned char 
  7739                           ;		exp1        	       	type: unsigned char 
  7740                           ;		cntr        	       	type: unsigned char 
  7741                           ;		f3          	       	type: unsigned char 
  7742                           ; Return value:
  7743                           ;		type: unsigned char 
  7744                           ;		size: 4
  7745                           ; Registers used:
  7746                           ;		wreg, fsr0l, fsr0h, status,2, status,0, cstac
                                 k
  7747                           ; Tracked objects:
  7748                           ;		On entry : 0/0
  7749                           ;		On exit  : 0/0
  7750                           ;		Unchanged: 0/0
  7751                           ; Data sizes:
  7752                           ;		Autos:    7
  7753                           ;		Params:   8
  7754                           ;		Temp:     1
  7755                           ;		Total:   16
  7756                           ; This function calls:
  7757                           ;		___flunpack
  7758                           ;		___flpack
  7759                           ; This function is called by:
  7760                           ;		_format_double
  7761                           ;		_measure_capacitance
  7762                           ;		_measure_inductance
  7763                           ;		_log
  7764                           ;		_log10
  7765                           ;		_pow
  7766                           ;		___asflmul
  7767                           ;		_eval_poly
  7768                           ; This function uses a non-reentrant model
  7769                           ; 
  7770                                   psect   text37,class=CODE,space=0,reloc=
                                 2
  7771                           
  7772                           	opt lm
  7773                           	file	"/opt/hitech/picc-18/9.66/sources/flmul.c"
  7774                           	line	18
  7775  000000                     	__size_of___flmul	equ	__end_of___flmul-___flmul
  7776                           	
  7777  000000'                    ___flmul:		; BSR set to: ?
  7778                           
  7779                           	opt stack 24
  7780  000000' FFFF               	dw	0FFFFh
  7781                           	line	22
  7782  000002' 0E00               	movlw	low(0)
  7783  000004' 0101               	movlb	1	; () banked
  7784  000006' 0101               	movlb	1	; () banked
  7785  000008' 6F00'              	movwf	((___flmul@f3))&0ffh
  7786  00000A' 0E00               	movlw	high(0)
  7787  00000C' 0101               	movlb	1	; () banked
  7788  00000E' 6F00'              	movwf	((___flmul@f3+1))&0ffh
  7789  000010' 0E00               	movlw	low highword(0)
  7790  000012' 0101               	movlb	1	; () banked
  7791  000014' 6F00'              	movwf	((___flmul@f3+2))&0ffh
  7792  000016' 0E00               	movlw	high highword(0)
  7793  000018' 0101               	movlb	1	; () banked
  7794  00001A' 6F00'              	movwf	((___flmul@f3+3))&0ffh
  7795                           	line	23
  7796  00001C' 0101               	movlb	1	; () banked
  7797  00001E' 0E00'              	movlw	low(___flmul@exp1)
  7798  000020' 0101               	movlb	1	; () banked
  7799  000022' 0101               	movlb	1	; () banked
  7800  000024' 6F00'              	movwf	(0+(?___flunpack+02h))&0ffh
  7801  000026' 0101               	movlb	1	; () banked
  7802  000028' 0E00'              	movlw	high(___flmul@exp1)
  7803  00002A' 0101               	movlb	1	; () banked
  7804  00002C' 6F00'              	movwf	(1+(?___flunpack+02h))&0ffh
  7805  00002E' 0101               	movlb	1	; () banked
  7806  000030' 0E00'              	movlw	low(___flmul@f1)
  7807  000032' 0101               	movlb	1	; () banked
  7808  000034' 0101               	movlb	1	; () banked
  7809  000036' 6F00'              	movwf	((?___flunpack))&0ffh
  7810  000038' 0101               	movlb	1	; () banked
  7811  00003A' 0E00'              	movlw	high(___flmul@f1)
  7812  00003C' 0101               	movlb	1	; () banked
  7813  00003E' 6F00'              	movwf	((?___flunpack+1))&0ffh
  7814  000040' EC00' F000'        	call	___flunpack	;wreg free
  7815  000044' 0101               	movlb	1	; () banked
  7816  000046' 0101               	movlb	1	; () banked
  7817  000048' 6F00'              	movwf	((___flmul@sign1))&0ffh
  7818                           	line	24
  7819  00004A' 0101               	movlb	1	; () banked
  7820  00004C' 0E00'              	movlw	low(___flmul@cntr)
  7821  00004E' 0101               	movlb	1	; () banked
  7822  000050' 0101               	movlb	1	; () banked
  7823  000052' 6F00'              	movwf	(0+(?___flunpack+02h))&0ffh
  7824  000054' 0101               	movlb	1	; () banked
  7825  000056' 0E00'              	movlw	high(___flmul@cntr)
  7826  000058' 0101               	movlb	1	; () banked
  7827  00005A' 6F00'              	movwf	(1+(?___flunpack+02h))&0ffh
  7828  00005C' 0101               	movlb	1	; () banked
  7829  00005E' 0E00'              	movlw	low(___flmul@f2)
  7830  000060' 0101               	movlb	1	; () banked
  7831  000062' 0101               	movlb	1	; () banked
  7832  000064' 6F00'              	movwf	((?___flunpack))&0ffh
  7833  000066' 0101               	movlb	1	; () banked
  7834  000068' 0E00'              	movlw	high(___flmul@f2)
  7835  00006A' 0101               	movlb	1	; () banked
  7836  00006C' 6F00'              	movwf	((?___flunpack+1))&0ffh
  7837  00006E' EC00' F000'        	call	___flunpack	;wreg free
  7838  000072' 0101               	movlb	1	; () banked
  7839  000074' 0101               	movlb	1	; () banked
  7840  000076' 1B00'              	xorwf	((___flmul@sign1))&0ffh
  7841                           	line	25
  7842  000078' 0101               	movlb	1	; () banked
  7843  00007A' 0101               	movlb	1	; () banked
  7844  00007C' 5100'              	movf	((___flmul@cntr))&0ffh,w
  7845  00007E' B4D8               	btfsc	status,2
  7846  000080' EF00' F000'        	goto	u3671
  7847  000084' EF00' F000'        	goto	u3670
  7848  000088'                    u3671:
  7849  00008A' EF00' F000'        	goto	l600000741
  7850  00008E'                    u3670:
  7851  000090' 0101               	movlb	1	; () banked
  7852  000092' 0101               	movlb	1	; () banked
  7853  000094' 6700'              	tstfsz	((___flmul@exp1))&0ffh
  7854  000096' EF00' F000'        	goto	u3681
  7855  00009A' EF00' F000'        	goto	u3680
  7856  00009E'                    u3681:
  7857  0000A0' EF00' F000'        	goto	l1057
  7858  0000A4'                    u3680:
  7859                           	
  7860  0000A4'                    l600000741:		; BSR set to: ?
  7861                           
  7862                           	line	26
  7863  0000A6' C003' F000'        	movff	(___flmul@f3),(?___flmul)
  7864  0000AA' C004' F001'        	movff	(___flmul@f3+1),(?___flmul+1)
  7865  0000AE' C005' F002'        	movff	(___flmul@f3+2),(?___flmul+2)
  7866  0000B2' C006' F003'        	movff	(___flmul@f3+3),(?___flmul+3)
  7867  0000B6' EF00' F000'        	goto	l1056
  7868                           	
  7869  0000BA'                    l1057:		; BSR set to: ?
  7870                           
  7871                           	line	27
  7872  0000BC' 0101               	movlb	1	; () banked
  7873  0000BE' 0101               	movlb	1	; () banked
  7874  0000C0' 5100'              	movf	((___flmul@cntr))&0ffh,w
  7875  0000C2' 0F7B               	addlw	low(07Bh)
  7876  0000C4' 0101               	movlb	1	; () banked
  7877  0000C6' 0101               	movlb	1	; () banked
  7878  0000C8' 2700'              	addwf	((___flmul@exp1))&0ffh
  7879                           	line	28
  7880  0000CA' 0101               	movlb	1	; () banked
  7881  0000CC' 6F00'              	movwf	(??___flmul+7+0)&0ffh
  7882  0000CE' 0E07               	movlw	low(07h)
  7883  0000D0' 0101               	movlb	1	; () banked
  7884  0000D2' 0101               	movlb	1	; () banked
  7885  0000D4' 6F00'              	movwf	((___flmul@cntr))&0ffh
  7886  0000D6' 0101               	movlb	1	; () banked
  7887  0000D8' 5100'              	movf	(??___flmul+7+0)&0ffh,w
  7888                           	line	29
  7889                           	
  7890  0000DA'                    l1060:		; BSR set to: ?
  7891                           
  7892                           	line	30
  7893  0000DC' 0101               	movlb	1	; () banked
  7894                           	
  7895  0000DE' 0101               	movlb	1	; () banked
  7896  0000E0' A100'              	btfss	((___flmul@f1))&0ffh,(0)&7
  7897  0000E2' EF00' F000'        	goto	u3691
  7898  0000E6' EF00' F000'        	goto	u3690
  7899  0000EA'                    u3691:
  7900  0000EC' EF00' F000'        	goto	l1061
  7901  0000F0'                    u3690:
  7902                           	line	31
  7903  0000F2' 0101               	movlb	1	; () banked
  7904  0000F4' 0101               	movlb	1	; () banked
  7905  0000F6' 5100'              	movf	((___flmul@f2))&0ffh,w
  7906  0000F8' 0101               	movlb	1	; () banked
  7907  0000FA' 0101               	movlb	1	; () banked
  7908  0000FC' 2700'              	addwf	((___flmul@f3))&0ffh
  7909  0000FE' 0101               	movlb	1	; () banked
  7910  000100' 0101               	movlb	1	; () banked
  7911  000102' 5100'              	movf	((___flmul@f2+1))&0ffh,w
  7912  000104' 0101               	movlb	1	; () banked
  7913  000106' 0101               	movlb	1	; () banked
  7914  000108' 2300'              	addwfc	((___flmul@f3+1))&0ffh
  7915  00010A' 0101               	movlb	1	; () banked
  7916  00010C' 0101               	movlb	1	; () banked
  7917  00010E' 5100'              	movf	((___flmul@f2+2))&0ffh,w
  7918  000110' 0101               	movlb	1	; () banked
  7919  000112' 0101               	movlb	1	; () banked
  7920  000114' 2300'              	addwfc	((___flmul@f3+2))&0ffh
  7921  000116' 0101               	movlb	1	; () banked
  7922  000118' 0101               	movlb	1	; () banked
  7923  00011A' 5100'              	movf	((___flmul@f2+3))&0ffh,w
  7924  00011C' 0101               	movlb	1	; () banked
  7925  00011E' 0101               	movlb	1	; () banked
  7926  000120' 2300'              	addwfc	((___flmul@f3+3))&0ffh
  7927                           	
  7928  000122'                    l1061:		; BSR set to: ?
  7929                           
  7930                           	line	32
  7931  000124' 0101               	movlb	1	; () banked
  7932  000126' 90D8               	bcf	status,0
  7933  000128' 0101               	movlb	1	; () banked
  7934  00012A' 3300'              	rrcf	((___flmul@f1+3))&0ffh
  7935  00012C' 0101               	movlb	1	; () banked
  7936  00012E' 3300'              	rrcf	((___flmul@f1+2))&0ffh
  7937  000130' 0101               	movlb	1	; () banked
  7938  000132' 3300'              	rrcf	((___flmul@f1+1))&0ffh
  7939  000134' 0101               	movlb	1	; () banked
  7940  000136' 3300'              	rrcf	((___flmul@f1))&0ffh
  7941                           	line	33
  7942  000138' 0101               	movlb	1	; () banked
  7943  00013A' 90D8               	bcf	status,0
  7944  00013C' 0101               	movlb	1	; () banked
  7945  00013E' 3700'              	rlcf	((___flmul@f2))&0ffh
  7946  000140' 0101               	movlb	1	; () banked
  7947  000142' 3700'              	rlcf	((___flmul@f2+1))&0ffh
  7948  000144' 0101               	movlb	1	; () banked
  7949  000146' 3700'              	rlcf	((___flmul@f2+2))&0ffh
  7950  000148' 0101               	movlb	1	; () banked
  7951  00014A' 3700'              	rlcf	((___flmul@f2+3))&0ffh
  7952                           	line	34
  7953  00014C' 0101               	movlb	1	; () banked
  7954  00014E' 0101               	movlb	1	; () banked
  7955  000150' 2F00'              	decfsz	((___flmul@cntr))&0ffh
  7956                           	
  7957  000152' EF00' F000'        	goto	l1060
  7958                           	
  7959  000156'                    l1059:		; BSR set to: ?
  7960                           
  7961                           	line	35
  7962  000156' 0101               	movlb	1	; () banked
  7963  000158' 6F00'              	movwf	(??___flmul+7+0)&0ffh
  7964  00015A' 0E11               	movlw	low(011h)
  7965  00015C' 0101               	movlb	1	; () banked
  7966  00015E' 0101               	movlb	1	; () banked
  7967  000160' 6F00'              	movwf	((___flmul@cntr))&0ffh
  7968  000162' 0101               	movlb	1	; () banked
  7969  000164' 5100'              	movf	(??___flmul+7+0)&0ffh,w
  7970                           	line	36
  7971                           	
  7972  000166'                    l1064:		; BSR set to: ?
  7973                           
  7974                           	line	37
  7975  000168' 0101               	movlb	1	; () banked
  7976                           	
  7977  00016A' 0101               	movlb	1	; () banked
  7978  00016C' A100'              	btfss	((___flmul@f1))&0ffh,(0)&7
  7979  00016E' EF00' F000'        	goto	u3701
  7980  000172' EF00' F000'        	goto	u3700
  7981  000176'                    u3701:
  7982  000178' EF00' F000'        	goto	l1065
  7983  00017C'                    u3700:
  7984                           	line	38
  7985  00017E' 0101               	movlb	1	; () banked
  7986  000180' 0101               	movlb	1	; () banked
  7987  000182' 5100'              	movf	((___flmul@f2))&0ffh,w
  7988  000184' 0101               	movlb	1	; () banked
  7989  000186' 0101               	movlb	1	; () banked
  7990  000188' 2700'              	addwf	((___flmul@f3))&0ffh
  7991  00018A' 0101               	movlb	1	; () banked
  7992  00018C' 0101               	movlb	1	; () banked
  7993  00018E' 5100'              	movf	((___flmul@f2+1))&0ffh,w
  7994  000190' 0101               	movlb	1	; () banked
  7995  000192' 0101               	movlb	1	; () banked
  7996  000194' 2300'              	addwfc	((___flmul@f3+1))&0ffh
  7997  000196' 0101               	movlb	1	; () banked
  7998  000198' 0101               	movlb	1	; () banked
  7999  00019A' 5100'              	movf	((___flmul@f2+2))&0ffh,w
  8000  00019C' 0101               	movlb	1	; () banked
  8001  00019E' 0101               	movlb	1	; () banked
  8002  0001A0' 2300'              	addwfc	((___flmul@f3+2))&0ffh
  8003  0001A2' 0101               	movlb	1	; () banked
  8004  0001A4' 0101               	movlb	1	; () banked
  8005  0001A6' 5100'              	movf	((___flmul@f2+3))&0ffh,w
  8006  0001A8' 0101               	movlb	1	; () banked
  8007  0001AA' 0101               	movlb	1	; () banked
  8008  0001AC' 2300'              	addwfc	((___flmul@f3+3))&0ffh
  8009                           	
  8010  0001AE'                    l1065:		; BSR set to: ?
  8011                           
  8012                           	line	39
  8013  0001B0' 0101               	movlb	1	; () banked
  8014  0001B2' 90D8               	bcf	status,0
  8015  0001B4' 0101               	movlb	1	; () banked
  8016  0001B6' 3300'              	rrcf	((___flmul@f1+3))&0ffh
  8017  0001B8' 0101               	movlb	1	; () banked
  8018  0001BA' 3300'              	rrcf	((___flmul@f1+2))&0ffh
  8019  0001BC' 0101               	movlb	1	; () banked
  8020  0001BE' 3300'              	rrcf	((___flmul@f1+1))&0ffh
  8021  0001C0' 0101               	movlb	1	; () banked
  8022  0001C2' 3300'              	rrcf	((___flmul@f1))&0ffh
  8023                           	line	40
  8024  0001C4' 0101               	movlb	1	; () banked
  8025  0001C6' 90D8               	bcf	status,0
  8026  0001C8' 0101               	movlb	1	; () banked
  8027  0001CA' 3300'              	rrcf	((___flmul@f3+3))&0ffh
  8028  0001CC' 0101               	movlb	1	; () banked
  8029  0001CE' 3300'              	rrcf	((___flmul@f3+2))&0ffh
  8030  0001D0' 0101               	movlb	1	; () banked
  8031  0001D2' 3300'              	rrcf	((___flmul@f3+1))&0ffh
  8032  0001D4' 0101               	movlb	1	; () banked
  8033  0001D6' 3300'              	rrcf	((___flmul@f3))&0ffh
  8034                           	line	41
  8035  0001D8' 0101               	movlb	1	; () banked
  8036  0001DA' 0101               	movlb	1	; () banked
  8037  0001DC' 2F00'              	decfsz	((___flmul@cntr))&0ffh
  8038                           	
  8039  0001DE' EF00' F000'        	goto	l1064
  8040                           	
  8041  0001E2'                    l1063:		; BSR set to: ?
  8042                           
  8043                           	line	42
  8044  0001E2' C001' F002'        	movff	(___flmul@exp1),0+(?___flpack+02h)
  8045  0001E6' 0101               	movlb	1	; () banked
  8046  0001E8' 0E00'              	movlw	low(___flmul@f3)
  8047  0001EA' 0101               	movlb	1	; () banked
  8048  0001EC' 0101               	movlb	1	; () banked
  8049  0001EE' 6F00'              	movwf	((?___flpack))&0ffh
  8050  0001F0' 0101               	movlb	1	; () banked
  8051  0001F2' 0E00'              	movlw	high(___flmul@f3)
  8052  0001F4' 0101               	movlb	1	; () banked
  8053  0001F6' 6F00'              	movwf	((?___flpack+1))&0ffh
  8054  0001F8' EC00' F000'        	call	___flpack	;wreg free
  8055                           	line	43
  8056  0001FC' 0101               	movlb	1	; () banked
  8057  0001FE' 0101               	movlb	1	; () banked
  8058  000200' 5100'              	movf	((___flmul@sign1))&0ffh,w
  8059  000202' B4D8               	btfsc	status,2
  8060  000204' EF00' F000'        	goto	u3711
  8061  000208' EF00' F000'        	goto	u3710
  8062  00020C'                    u3711:
  8063  00020E' EF00' F000'        	goto	l1066
  8064  000212'                    u3710:
  8065                           	line	44
  8066  000214' 0101               	movlb	1	; () banked
  8067  000216' 0101               	movlb	1	; () banked
  8068  000218' 8F00'              	bsf	(0+(31/8)+(___flmul@f3))&0ffh,(31)&7
  8069                           	
  8070  00021A'                    l1066:		; BSR set to: ?
  8071                           
  8072                           	line	45
  8073  00021C' C003' F000'        	movff	(___flmul@f3),(?___flmul)
  8074  000220' C004' F001'        	movff	(___flmul@f3+1),(?___flmul+1)
  8075  000224' C005' F002'        	movff	(___flmul@f3+2),(?___flmul+2)
  8076  000228' C006' F003'        	movff	(___flmul@f3+3),(?___flmul+3)
  8077  00022C' EF00' F000'        	goto	l1056
  8078                           	line	46
  8079  000230'                    l1056:
  8080                           			; BSR set to: ?
  8081                           
  8082  000232' 0012               	return
  8083  000234' FFFF               	dw	0FFFFh; errata NOP
  8084                           	opt stack 0
  8085                           GLOBAL __end_of___flmul
  8086  000236'                    	__end_of___flmul:
  8087                           	FNSIZE	___flmul,8,8
  8088                           ; =============== function ___flmul ends =======
                                 =====
  8089                           
  8090                           	signat	___flmul,8316
  8091                           	global	___flge
  8092                           	global	??___flge
  8093                           	global	?___flge
  8094                           
  8095                           ; *************** function ___flge *************
                                 ****
  8096                           ; Defined at:
  8097                           ;		line 5 in file "/opt/hitech/picc-18/9.66/sour
                                 ces/flge.c"
  8098                           ; Parameters:
  8099                           ;		ff1            size:   4offs:   0	type: unsig
                                 ned char 
  8100                           ;		ff2            size:   4offs:   4	type: unsig
                                 ned char 
  8101                           ; Auto variables:
  8102                           ;		None
  8103                           ; Return value:
  8104                           ;		type: bit 
  8105                           ;		size: 0
  8106                           ; Registers used:
  8107                           ;		wreg, status,2, status,0
  8108                           ; Tracked objects:
  8109                           ;		On entry : 0/0
  8110                           ;		On exit  : 0/0
  8111                           ;		Unchanged: 0/0
  8112                           ; Data sizes:
  8113                           ;		Autos:    0
  8114                           ;		Params:   8
  8115                           ;		Temp:     0
  8116                           ;		Total:    8
  8117                           ; This function calls:
  8118                           ;		Nothing
  8119                           ; This function is called by:
  8120                           ;		_format_double
  8121                           ;		_measure_capacitance
  8122                           ;		_measure_inductance
  8123                           ;		_floor
  8124                           ;		_pow
  8125                           ;		_exp
  8126                           ; This function uses a non-reentrant model
  8127                           ; 
  8128                                   psect   text38,class=CODE,space=0,reloc=
                                 2
  8129                           
  8130                           	opt lm
  8131                           	file	"/opt/hitech/picc-18/9.66/sources/flge.c"
  8132                           	line	5
  8133  000000                     	__size_of___flge	equ	__end_of___flge-___flge
  8134                           	
  8135  000000'                    ___flge:		; BSR set to: ?
  8136                           
  8137                           	opt stack 24
  8138  000000' FFFF               	dw	0FFFFh
  8139                           	line	6
  8140  000002' 0101               	movlb	1	; () banked
  8141                           	
  8142  000004' 0101               	movlb	1	; () banked
  8143  000006' AF00'              	btfss	((___flge@ff1+3))&0ffh,(31)&7
  8144  000008' EF00' F000'        	goto	u3721
  8145  00000C' EF00' F000'        	goto	u3720
  8146  000010'                    u3721:
  8147  000012' EF00' F000'        	goto	l1252
  8148  000016'                    u3720:
  8149                           	line	7
  8150  000018' 0101               	movlb	1	; () banked
  8151  00001A' 0101               	movlb	1	; () banked
  8152  00001C' 6D00'              	negf	((___flge@ff1))&0ffh
  8153  00001E' 1F00'              	comf	((___flge@ff1+1))&0ffh
  8154  000020' B0D8               	btfsc	status,0
  8155  000022' 2B00'              	incf	((___flge@ff1+1))&0ffh
  8156  000024' 1F00'              	comf	((___flge@ff1+2))&0ffh
  8157  000026' B0D8               	btfsc	status,0
  8158  000028' 2B00'              	incf	((___flge@ff1+2))&0ffh
  8159  00002A' 0E80               	movlw	high highword(-2147483648)
  8160  00002C' 0101               	movlb	1	; () banked
  8161  00002E' 5700'              	subfwb	((___flge@ff1+3))&0ffh
  8162                           	
  8163  000030'                    l1252:		; BSR set to: ?
  8164                           
  8165                           	line	8
  8166  000032' 0101               	movlb	1	; () banked
  8167                           	
  8168  000034' 0101               	movlb	1	; () banked
  8169  000036' AF00'              	btfss	((___flge@ff2+3))&0ffh,(31)&7
  8170  000038' EF00' F000'        	goto	u3731
  8171  00003C' EF00' F000'        	goto	u3730
  8172  000040'                    u3731:
  8173  000042' EF00' F000'        	goto	l1253
  8174  000046'                    u3730:
  8175                           	line	9
  8176  000048' 0101               	movlb	1	; () banked
  8177  00004A' 0101               	movlb	1	; () banked
  8178  00004C' 6D00'              	negf	((___flge@ff2))&0ffh
  8179  00004E' 1F00'              	comf	((___flge@ff2+1))&0ffh
  8180  000050' B0D8               	btfsc	status,0
  8181  000052' 2B00'              	incf	((___flge@ff2+1))&0ffh
  8182  000054' 1F00'              	comf	((___flge@ff2+2))&0ffh
  8183  000056' B0D8               	btfsc	status,0
  8184  000058' 2B00'              	incf	((___flge@ff2+2))&0ffh
  8185  00005A' 0E80               	movlw	high highword(-2147483648)
  8186  00005C' 0101               	movlb	1	; () banked
  8187  00005E' 5700'              	subfwb	((___flge@ff2+3))&0ffh
  8188                           	
  8189  000060'                    l1253:		; BSR set to: ?
  8190                           
  8191                           	line	10
  8192  000062' 0E00               	movlw	0
  8193  000064' 0101               	movlb	1	; () banked
  8194  000066' 0101               	movlb	1	; () banked
  8195  000068' 1B00'              	xorwf	((___flge@ff1))&0ffh
  8196  00006A' 0E00               	movlw	0
  8197  00006C' 0101               	movlb	1	; () banked
  8198  00006E' 1B00'              	xorwf	((___flge@ff1+1))&0ffh
  8199  000070' 0E00               	movlw	0
  8200  000072' 0101               	movlb	1	; () banked
  8201  000074' 1B00'              	xorwf	((___flge@ff1+2))&0ffh
  8202  000076' 0E80               	movlw	080h
  8203  000078' 0101               	movlb	1	; () banked
  8204  00007A' 1B00'              	xorwf	((___flge@ff1+3))&0ffh
  8205                           	line	11
  8206  00007C' 0E00               	movlw	0
  8207  00007E' 0101               	movlb	1	; () banked
  8208  000080' 0101               	movlb	1	; () banked
  8209  000082' 1B00'              	xorwf	((___flge@ff2))&0ffh
  8210  000084' 0E00               	movlw	0
  8211  000086' 0101               	movlb	1	; () banked
  8212  000088' 1B00'              	xorwf	((___flge@ff2+1))&0ffh
  8213  00008A' 0E00               	movlw	0
  8214  00008C' 0101               	movlb	1	; () banked
  8215  00008E' 1B00'              	xorwf	((___flge@ff2+2))&0ffh
  8216  000090' 0E80               	movlw	080h
  8217  000092' 0101               	movlb	1	; () banked
  8218  000094' 1B00'              	xorwf	((___flge@ff2+3))&0ffh
  8219                           	line	12
  8220  000096' 0101               	movlb	1	; () banked
  8221  000098' 0101               	movlb	1	; () banked
  8222  00009A' 5100'              	movf	((___flge@ff2))&0ffh,w
  8223  00009C' 0101               	movlb	1	; () banked
  8224  00009E' 0101               	movlb	1	; () banked
  8225  0000A0' 5D00'              	subwf	((___flge@ff1))&0ffh,w
  8226  0000A2' 0101               	movlb	1	; () banked
  8227  0000A4' 0101               	movlb	1	; () banked
  8228  0000A6' 5100'              	movf	((___flge@ff2+1))&0ffh,w
  8229  0000A8' 0101               	movlb	1	; () banked
  8230  0000AA' 0101               	movlb	1	; () banked
  8231  0000AC' 5900'              	subwfb	((___flge@ff1+1))&0ffh,w
  8232  0000AE' 0101               	movlb	1	; () banked
  8233  0000B0' 0101               	movlb	1	; () banked
  8234  0000B2' 5100'              	movf	((___flge@ff2+2))&0ffh,w
  8235  0000B4' 0101               	movlb	1	; () banked
  8236  0000B6' 0101               	movlb	1	; () banked
  8237  0000B8' 5900'              	subwfb	((___flge@ff1+2))&0ffh,w
  8238  0000BA' 0101               	movlb	1	; () banked
  8239  0000BC' 0101               	movlb	1	; () banked
  8240  0000BE' 5100'              	movf	((___flge@ff2+3))&0ffh,w
  8241  0000C0' 0101               	movlb	1	; () banked
  8242  0000C2' 0101               	movlb	1	; () banked
  8243  0000C4' 5900'              	subwfb	((___flge@ff1+3))&0ffh,w
  8244  0000C6' EF00' F000'        	goto	l1251
  8245                           	line	13
  8246  0000CA'                    l1251:
  8247                           			; BSR set to: ?
  8248                           
  8249  0000CC' 0012               	return
  8250  0000CE' FFFF               	dw	0FFFFh; errata NOP
  8251                           	opt stack 0
  8252                           GLOBAL __end_of___flge
  8253  0000D0'                    	__end_of___flge:
  8254                           	FNSIZE	___flge,0,8
  8255                           ; =============== function ___flge ends ========
                                 ====
  8256                           
  8257                           	signat	___flge,8312
  8258                           	global	___fltol
  8259                           	global	??___fltol
  8260                           	global	?___fltol
  8261                           
  8262                           ; *************** function ___fltol ************
                                 *****
  8263                           ; Defined at:
  8264                           ;		line 16 in file "/opt/hitech/picc-18/9.66/sou
                                 rces/fltol.c"
  8265                           ; Parameters:
  8266                           ;		f1             size:   4offs:   0	type: bit 
  8267                           ; Auto variables:
  8268                           ;		sign1       	       	type: unsigned char 
  8269                           ;		exp1        	       	type: unsigned char 
  8270                           ;		lval        	       	type: unsigned long 
  8271                           ; Return value:
  8272                           ;		type: long 
  8273                           ;		size: 4
  8274                           ; Registers used:
  8275                           ;		wreg, fsr0l, fsr0h, status,2, status,0, cstac
                                 k
  8276                           ; Tracked objects:
  8277                           ;		On entry : 0/0
  8278                           ;		On exit  : 0/0
  8279                           ;		Unchanged: 0/0
  8280                           ; Data sizes:
  8281                           ;		Autos:    6
  8282                           ;		Params:   4
  8283                           ;		Temp:     0
  8284                           ;		Total:   10
  8285                           ; This function calls:
  8286                           ;		___flunpack
  8287                           ; This function is called by:
  8288                           ;		_format_double
  8289                           ;		_measure_capacitance
  8290                           ;		_measure_inductance
  8291                           ;		_floor
  8292                           ;		_pow
  8293                           ;		_exp
  8294                           ; This function uses a non-reentrant model
  8295                           ; 
  8296                                   psect   text39,class=CODE,space=0,reloc=
                                 2
  8297                           
  8298                           	opt lm
  8299                           	file	"/opt/hitech/picc-18/9.66/sources/fltol.c"
  8300                           	line	16
  8301  000000                     	__size_of___fltol	equ	__end_of___fltol-___fltol
  8302                           	
  8303  000000'                    ___fltol:		; BSR set to: ?
  8304                           
  8305                           	opt stack 24
  8306  000000' FFFF               	dw	0FFFFh
  8307                           	line	20
  8308  000002' 0101               	movlb	1	; () banked
  8309  000004' 0E00'              	movlw	low(___fltol@exp1)
  8310  000006' 0101               	movlb	1	; () banked
  8311  000008' 0101               	movlb	1	; () banked
  8312  00000A' 6F00'              	movwf	(0+(?___flunpack+02h))&0ffh
  8313  00000C' 0101               	movlb	1	; () banked
  8314  00000E' 0E00'              	movlw	high(___fltol@exp1)
  8315  000010' 0101               	movlb	1	; () banked
  8316  000012' 6F00'              	movwf	(1+(?___flunpack+02h))&0ffh
  8317  000014' 0101               	movlb	1	; () banked
  8318  000016' 0E00'              	movlw	low(___fltol@f1)
  8319  000018' 0101               	movlb	1	; () banked
  8320  00001A' 0101               	movlb	1	; () banked
  8321  00001C' 6F00'              	movwf	((?___flunpack))&0ffh
  8322  00001E' 0101               	movlb	1	; () banked
  8323  000020' 0E00'              	movlw	high(___fltol@f1)
  8324  000022' 0101               	movlb	1	; () banked
  8325  000024' 6F00'              	movwf	((?___flunpack+1))&0ffh
  8326  000026' EC00' F000'        	call	___flunpack	;wreg free
  8327  00002A' 0101               	movlb	1	; () banked
  8328  00002C' 0101               	movlb	1	; () banked
  8329  00002E' 6F00'              	movwf	((___fltol@sign1))&0ffh
  8330                           	line	21
  8331  000030' C000' F002'        	movff	(___fltol@f1),(___fltol@lval)
  8332  000034' C001' F003'        	movff	(___fltol@f1+1),(___fltol@lval+1)
  8333  000038' C002' F004'        	movff	(___fltol@f1+2),(___fltol@lval+2)
  8334  00003C' C003' F005'        	movff	(___fltol@f1+3),(___fltol@lval+3)
  8335                           	line	22
  8336  000040' 0E96               	movlw	(096h)&0ffh
  8337  000042' 0101               	movlb	1	; () banked
  8338  000044' 0101               	movlb	1	; () banked
  8339  000046' 5F00'              	subwf	((___fltol@exp1))&0ffh
  8340                           	line	23
  8341  000048' 0101               	movlb	1	; () banked
  8342  00004A' 0101               	movlb	1	; () banked
  8343  00004C' AF00'              	btfss	((___fltol@exp1))&0ffh,7
  8344  00004E' EF00' F000'        	goto	u3741
  8345  000052' EF00' F000'        	goto	u3740
  8346  000056'                    u3741:
  8347  000058' EF00' F000'        	goto	l1090
  8348  00005C'                    u3740:
  8349                           	line	24
  8350  00005E' 0101               	movlb	1	; () banked
  8351  000060' 0101               	movlb	1	; () banked
  8352  000062' 5100'              	movf	((___fltol@exp1))&0ffh,w
  8353  000064' 0A80               	xorlw	80h
  8354  000066' 0F97               	addlw	-((-23)^80h)
  8355  000068' B0D8               	btfsc	status,0
  8356  00006A' EF00' F000'        	goto	u3751
  8357  00006E' EF00' F000'        	goto	u3750
  8358  000072'                    u3751:
  8359  000074' EF00' F000'        	goto	l1094
  8360  000078'                    u3750:
  8361                           	line	25
  8362  00007A' 0E00               	movlw	low(0)
  8363  00007C' 0101               	movlb	1	; () banked
  8364  00007E' 0101               	movlb	1	; () banked
  8365  000080' 6F00'              	movwf	((?___fltol))&0ffh
  8366  000082' 0E00               	movlw	high(0)
  8367  000084' 0101               	movlb	1	; () banked
  8368  000086' 6F00'              	movwf	((?___fltol+1))&0ffh
  8369  000088' 0E00               	movlw	low highword(0)
  8370  00008A' 0101               	movlb	1	; () banked
  8371  00008C' 6F00'              	movwf	((?___fltol+2))&0ffh
  8372  00008E' 0E00               	movlw	high highword(0)
  8373  000090' 0101               	movlb	1	; () banked
  8374  000092' 6F00'              	movwf	((?___fltol+3))&0ffh
  8375  000094' EF00' F000'        	goto	l1089
  8376                           	line	26
  8377                           	
  8378  000098'                    l1094:		; BSR set to: ?
  8379                           
  8380                           	line	27
  8381  00009A' 0101               	movlb	1	; () banked
  8382  00009C' 90D8               	bcf	status,0
  8383  00009E' 0101               	movlb	1	; () banked
  8384  0000A0' 3300'              	rrcf	((___fltol@lval+3))&0ffh
  8385  0000A2' 0101               	movlb	1	; () banked
  8386  0000A4' 3300'              	rrcf	((___fltol@lval+2))&0ffh
  8387  0000A6' 0101               	movlb	1	; () banked
  8388  0000A8' 3300'              	rrcf	((___fltol@lval+1))&0ffh
  8389  0000AA' 0101               	movlb	1	; () banked
  8390  0000AC' 3300'              	rrcf	((___fltol@lval))&0ffh
  8391                           	line	28
  8392  0000AE' 0101               	movlb	1	; () banked
  8393  0000B0' 0101               	movlb	1	; () banked
  8394  0000B2' 3F00'              	incfsz	((___fltol@exp1))&0ffh
  8395                           	
  8396  0000B4' EF00' F000'        	goto	l1094
  8397                           	
  8398  0000B8'                    l1093:		; BSR set to: ?
  8399                           
  8400                           	line	29
  8401  0000B8' EF00' F000'        	goto	l1095
  8402                           	
  8403  0000BC'                    l1090:		; BSR set to: ?
  8404                           
  8405                           	line	30
  8406  0000BE' 0E1F               	movlw	(020h-1)
  8407  0000C0' 0101               	movlb	1	; () banked
  8408  0000C2' 0101               	movlb	1	; () banked
  8409  0000C4' 6500'              	cpfsgt	((___fltol@exp1))&0ffh
  8410  0000C6' EF00' F000'        	goto	u3761
  8411  0000CA' EF00' F000'        	goto	u3760
  8412  0000CE'                    u3761:
  8413  0000D0' EF00' F000'        	goto	l1096
  8414  0000D4'                    u3760:
  8415                           	line	31
  8416  0000D6' 0E00               	movlw	low(0)
  8417  0000D8' 0101               	movlb	1	; () banked
  8418  0000DA' 0101               	movlb	1	; () banked
  8419  0000DC' 6F00'              	movwf	((?___fltol))&0ffh
  8420  0000DE' 0E00               	movlw	high(0)
  8421  0000E0' 0101               	movlb	1	; () banked
  8422  0000E2' 6F00'              	movwf	((?___fltol+1))&0ffh
  8423  0000E4' 0E00               	movlw	low highword(0)
  8424  0000E6' 0101               	movlb	1	; () banked
  8425  0000E8' 6F00'              	movwf	((?___fltol+2))&0ffh
  8426  0000EA' 0E00               	movlw	high highword(0)
  8427  0000EC' 0101               	movlb	1	; () banked
  8428  0000EE' 6F00'              	movwf	((?___fltol+3))&0ffh
  8429  0000F0' EF00' F000'        	goto	l1089
  8430                           	
  8431  0000F4'                    l1096:		; BSR set to: ?
  8432                           
  8433                           	line	32
  8434  0000F6' EF00' F000'        	goto	l1097
  8435                           	
  8436  0000FA'                    l1098:		; BSR set to: ?
  8437                           
  8438                           	line	33
  8439  0000FC' 0101               	movlb	1	; () banked
  8440  0000FE' 90D8               	bcf	status,0
  8441  000100' 0101               	movlb	1	; () banked
  8442  000102' 3700'              	rlcf	((___fltol@lval))&0ffh
  8443  000104' 0101               	movlb	1	; () banked
  8444  000106' 3700'              	rlcf	((___fltol@lval+1))&0ffh
  8445  000108' 0101               	movlb	1	; () banked
  8446  00010A' 3700'              	rlcf	((___fltol@lval+2))&0ffh
  8447  00010C' 0101               	movlb	1	; () banked
  8448  00010E' 3700'              	rlcf	((___fltol@lval+3))&0ffh
  8449                           	line	34
  8450  000110' 0101               	movlb	1	; () banked
  8451  000112' 0101               	movlb	1	; () banked
  8452  000114' 0700'              	decf	((___fltol@exp1))&0ffh
  8453                           	line	35
  8454                           	
  8455  000116'                    l1097:		; BSR set to: ?
  8456                           
  8457                           	line	32
  8458  000118' 0101               	movlb	1	; () banked
  8459  00011A' 0101               	movlb	1	; () banked
  8460  00011C' 6700'              	tstfsz	((___fltol@exp1))&0ffh
  8461  00011E' EF00' F000'        	goto	u3771
  8462  000122' EF00' F000'        	goto	u3770
  8463  000126'                    u3771:
  8464  000128' EF00' F000'        	goto	l1098
  8465  00012C'                    u3770:
  8466                           	
  8467  00012C'                    l1099:		; BSR set to: ?
  8468                           
  8469                           	line	36
  8470                           	
  8471  00012C'                    l1095:		; BSR set to: ?
  8472                           
  8473                           	line	37
  8474  00012E' 0101               	movlb	1	; () banked
  8475  000130' 0101               	movlb	1	; () banked
  8476  000132' 5100'              	movf	((___fltol@sign1))&0ffh,w
  8477  000134' B4D8               	btfsc	status,2
  8478  000136' EF00' F000'        	goto	u3781
  8479  00013A' EF00' F000'        	goto	u3780
  8480  00013E'                    u3781:
  8481  000140' EF00' F000'        	goto	l1100
  8482  000144'                    u3780:
  8483                           	line	38
  8484  000146' 0101               	movlb	1	; () banked
  8485  000148' 0101               	movlb	1	; () banked
  8486  00014A' 1F00'              	comf	((___fltol@lval+3))&0ffh
  8487  00014C' 0101               	movlb	1	; () banked
  8488  00014E' 1F00'              	comf	((___fltol@lval+2))&0ffh
  8489  000150' 0101               	movlb	1	; () banked
  8490  000152' 1F00'              	comf	((___fltol@lval+1))&0ffh
  8491  000154' 0101               	movlb	1	; () banked
  8492  000156' 6D00'              	negf	((___fltol@lval))&0ffh
  8493  000158' 0E00               	movlw	0
  8494  00015A' 0101               	movlb	1	; () banked
  8495  00015C' 2300'              	addwfc	((___fltol@lval+1))&0ffh
  8496  00015E' 0101               	movlb	1	; () banked
  8497  000160' 2300'              	addwfc	((___fltol@lval+2))&0ffh
  8498  000162' 0101               	movlb	1	; () banked
  8499  000164' 2300'              	addwfc	((___fltol@lval+3))&0ffh
  8500                           	
  8501  000166'                    l1100:		; BSR set to: ?
  8502                           
  8503                           	line	39
  8504  000168' C002' F000'        	movff	(___fltol@lval),(?___fltol)
  8505  00016C' C003' F001'        	movff	(___fltol@lval+1),(?___fltol+1)
  8506  000170' C004' F002'        	movff	(___fltol@lval+2),(?___fltol+2)
  8507  000174' C005' F003'        	movff	(___fltol@lval+3),(?___fltol+3)
  8508  000178' EF00' F000'        	goto	l1089
  8509                           	line	40
  8510  00017C'                    l1089:
  8511                           			; BSR set to: ?
  8512                           
  8513  00017E' 0012               	return
  8514  000180' FFFF               	dw	0FFFFh; errata NOP
  8515                           	opt stack 0
  8516                           GLOBAL __end_of___fltol
  8517  000182'                    	__end_of___fltol:
  8518                           	FNSIZE	___fltol,6,4
  8519                           ; =============== function ___fltol ends =======
                                 =====
  8520                           
  8521                           	signat	___fltol,4220
  8522                           	global	___flneg
  8523                           	global	??___flneg
  8524                           	global	?___flneg
  8525                           
  8526                           ; *************** function ___flneg ************
                                 *****
  8527                           ; Defined at:
  8528                           ;		line 16 in file "/opt/hitech/picc-18/9.66/sou
                                 rces/flneg.c"
  8529                           ; Parameters:
  8530                           ;		f1             size:   4offs:   0	type: long 
  8531                           ; Auto variables:
  8532                           ;		None
  8533                           ; Return value:
  8534                           ;		type: long 
  8535                           ;		size: 4
  8536                           ; Registers used:
  8537                           ;		wreg, fsr0l, fsr0h, status,2, status,0
  8538                           ; Tracked objects:
  8539                           ;		On entry : 0/0
  8540                           ;		On exit  : 0/0
  8541                           ;		Unchanged: 0/0
  8542                           ; Data sizes:
  8543                           ;		Autos:    0
  8544                           ;		Params:   4
  8545                           ;		Temp:     0
  8546                           ;		Total:    4
  8547                           ; This function calls:
  8548                           ;		Nothing
  8549                           ; This function is called by:
  8550                           ;		_pow
  8551                           ;		___altofl
  8552                           ;		___awtofl
  8553                           ;		_exp
  8554                           ; This function uses a non-reentrant model
  8555                           ; 
  8556                                   psect   text40,class=CODE,space=0,reloc=
                                 2
  8557                           
  8558                           	opt lm
  8559                           	file	"/opt/hitech/picc-18/9.66/sources/flneg.c"
  8560                           	line	16
  8561  000000                     	__size_of___flneg	equ	__end_of___flneg-___flneg
  8562                           	
  8563  000000'                    ___flneg:		; BSR set to: ?
  8564                           
  8565                           	opt stack 23
  8566  000000' FFFF               	dw	0FFFFh
  8567                           	line	17
  8568  000002' 0101               	movlb	1	; () banked
  8569  000004' EE00' F000'        	lfsr	0,(___flneg@f1)
  8570  000008' 50EE               	movf	postinc0,w
  8571  00000A' 10EE               	iorwf	postinc0,w
  8572  00000C' 10EE               	iorwf	postinc0,w
  8573  00000E' 10EE               	iorwf	postinc0,w
  8574  000010' B4D8               	btfsc	status,2
  8575  000012' EF00' F000'        	goto	u3791
  8576  000016' EF00' F000'        	goto	u3790
  8577  00001A'                    u3791:
  8578  00001C' EF00' F000'        	goto	l1247
  8579  000020'                    u3790:
  8580                           	line	18
  8581  000022' 0E00               	movlw	0
  8582  000024' 0101               	movlb	1	; () banked
  8583  000026' 0101               	movlb	1	; () banked
  8584  000028' 1B00'              	xorwf	((___flneg@f1))&0ffh
  8585  00002A' 0E00               	movlw	0
  8586  00002C' 0101               	movlb	1	; () banked
  8587  00002E' 1B00'              	xorwf	((___flneg@f1+1))&0ffh
  8588  000030' 0E00               	movlw	0
  8589  000032' 0101               	movlb	1	; () banked
  8590  000034' 1B00'              	xorwf	((___flneg@f1+2))&0ffh
  8591  000036' 0E80               	movlw	080h
  8592  000038' 0101               	movlb	1	; () banked
  8593  00003A' 1B00'              	xorwf	((___flneg@f1+3))&0ffh
  8594                           	
  8595  00003C'                    l1247:		; BSR set to: ?
  8596                           
  8597                           	line	19
  8598  00003E' C000' F000'        	movff	(___flneg@f1),(?___flneg)
  8599  000042' C001' F001'        	movff	(___flneg@f1+1),(?___flneg+1)
  8600  000046' C002' F002'        	movff	(___flneg@f1+2),(?___flneg+2)
  8601  00004A' C003' F003'        	movff	(___flneg@f1+3),(?___flneg+3)
  8602  00004E' EF00' F000'        	goto	l1246
  8603                           	line	20
  8604  000052'                    l1246:
  8605                           			; BSR set to: ?
  8606                           
  8607  000054' 0012               	return
  8608  000056' FFFF               	dw	0FFFFh; errata NOP
  8609                           	opt stack 0
  8610                           GLOBAL __end_of___flneg
  8611  000058'                    	__end_of___flneg:
  8612                           	FNSIZE	___flneg,0,4
  8613                           ; =============== function ___flneg ends =======
                                 =====
  8614                           
  8615                           	signat	___flneg,4220
  8616                           	global	___fladd
  8617                           	global	??___fladd
  8618                           	global	?___fladd
  8619                           
  8620                           ; *************** function ___fladd ************
                                 *****
  8621                           ; Defined at:
  8622                           ;		line 17 in file "/opt/hitech/picc-18/9.66/sou
                                 rces/fladd.c"
  8623                           ; Parameters:
  8624                           ;		f1             size:   4offs:   0	type: long 
  8625                           ;		f2             size:   4offs:   4	type: long 
  8626                           ; Auto variables:
  8627                           ;		sign2       	       	type: unsigned char 
  8628                           ;		cntr        	       	type: unsigned char 
  8629                           ;		sign1       	       	type: unsigned char 
  8630                           ;		exp2        	       	type: unsigned char 
  8631                           ;		exp1        	       	type: unsigned char 
  8632                           ; Return value:
  8633                           ;		type: unsigned char 
  8634                           ;		size: 4
  8635                           ; Registers used:
  8636                           ;		wreg, fsr0l, fsr0h, status,2, status,0, cstac
                                 k
  8637                           ; Tracked objects:
  8638                           ;		On entry : 0/0
  8639                           ;		On exit  : 0/0
  8640                           ;		Unchanged: 0/0
  8641                           ; Data sizes:
  8642                           ;		Autos:    5
  8643                           ;		Params:   8
  8644                           ;		Temp:     1
  8645                           ;		Total:   14
  8646                           ; This function calls:
  8647                           ;		___flunpack
  8648                           ;		___flpack
  8649                           ; This function is called by:
  8650                           ;		_floor
  8651                           ;		_log
  8652                           ;		___flsub
  8653                           ;		_eval_poly
  8654                           ; This function uses a non-reentrant model
  8655                           ; 
  8656                                   psect   text41,class=CODE,space=0,reloc=
                                 2
  8657                           
  8658                           	opt lm
  8659                           	file	"/opt/hitech/picc-18/9.66/sources/fladd.c"
  8660                           	line	17
  8661  000000                     	__size_of___fladd	equ	__end_of___fladd-___fladd
  8662                           	
  8663  000000'                    ___fladd:		; BSR set to: ?
  8664                           
  8665                           	opt stack 23
  8666  000000' FFFF               	dw	0FFFFh
  8667                           	line	20
  8668  000002' EF00' F000'        	goto	l1020
  8669                           	line	21
  8670                           	
  8671  000006'                    l1020:		; BSR set to: ?
  8672                           
  8673                           	line	22
  8674  000008' 0101               	movlb	1	; () banked
  8675  00000A' 0E00'              	movlw	low(___fladd@exp1)
  8676  00000C' 0101               	movlb	1	; () banked
  8677  00000E' 0101               	movlb	1	; () banked
  8678  000010' 6F00'              	movwf	(0+(?___flunpack+02h))&0ffh
  8679  000012' 0101               	movlb	1	; () banked
  8680  000014' 0E00'              	movlw	high(___fladd@exp1)
  8681  000016' 0101               	movlb	1	; () banked
  8682  000018' 6F00'              	movwf	(1+(?___flunpack+02h))&0ffh
  8683  00001A' 0101               	movlb	1	; () banked
  8684  00001C' 0E00'              	movlw	low(___fladd@f1)
  8685  00001E' 0101               	movlb	1	; () banked
  8686  000020' 0101               	movlb	1	; () banked
  8687  000022' 6F00'              	movwf	((?___flunpack))&0ffh
  8688  000024' 0101               	movlb	1	; () banked
  8689  000026' 0E00'              	movlw	high(___fladd@f1)
  8690  000028' 0101               	movlb	1	; () banked
  8691  00002A' 6F00'              	movwf	((?___flunpack+1))&0ffh
  8692  00002C' EC00' F000'        	call	___flunpack	;wreg free
  8693  000030' 0101               	movlb	1	; () banked
  8694  000032' 0101               	movlb	1	; () banked
  8695  000034' 6F00'              	movwf	((___fladd@sign1))&0ffh
  8696                           	line	23
  8697  000036' 0101               	movlb	1	; () banked
  8698  000038' 0101               	movlb	1	; () banked
  8699  00003A' 6700'              	tstfsz	((___fladd@exp1))&0ffh
  8700  00003C' EF00' F000'        	goto	u3801
  8701  000040' EF00' F000'        	goto	u3800
  8702  000044'                    u3801:
  8703  000046' EF00' F000'        	goto	l1021
  8704  00004A'                    u3800:
  8705                           	line	24
  8706  00004C' C004' F000'        	movff	(___fladd@f2),(?___fladd)
  8707  000050' C005' F001'        	movff	(___fladd@f2+1),(?___fladd+1)
  8708  000054' C006' F002'        	movff	(___fladd@f2+2),(?___fladd+2)
  8709  000058' C007' F003'        	movff	(___fladd@f2+3),(?___fladd+3)
  8710  00005C' EF00' F000'        	goto	l1019
  8711                           	
  8712  000060'                    l1021:		; BSR set to: ?
  8713                           
  8714                           	line	25
  8715  000062' 0101               	movlb	1	; () banked
  8716  000064' 0E00'              	movlw	low(___fladd@exp2)
  8717  000066' 0101               	movlb	1	; () banked
  8718  000068' 0101               	movlb	1	; () banked
  8719  00006A' 6F00'              	movwf	(0+(?___flunpack+02h))&0ffh
  8720  00006C' 0101               	movlb	1	; () banked
  8721  00006E' 0E00'              	movlw	high(___fladd@exp2)
  8722  000070' 0101               	movlb	1	; () banked
  8723  000072' 6F00'              	movwf	(1+(?___flunpack+02h))&0ffh
  8724  000074' 0101               	movlb	1	; () banked
  8725  000076' 0E00'              	movlw	low(___fladd@f2)
  8726  000078' 0101               	movlb	1	; () banked
  8727  00007A' 0101               	movlb	1	; () banked
  8728  00007C' 6F00'              	movwf	((?___flunpack))&0ffh
  8729  00007E' 0101               	movlb	1	; () banked
  8730  000080' 0E00'              	movlw	high(___fladd@f2)
  8731  000082' 0101               	movlb	1	; () banked
  8732  000084' 6F00'              	movwf	((?___flunpack+1))&0ffh
  8733  000086' EC00' F000'        	call	___flunpack	;wreg free
  8734  00008A' 0101               	movlb	1	; () banked
  8735  00008C' 0101               	movlb	1	; () banked
  8736  00008E' 6F00'              	movwf	((___fladd@sign2))&0ffh
  8737                           	line	26
  8738  000090' 0101               	movlb	1	; () banked
  8739  000092' 0101               	movlb	1	; () banked
  8740  000094' 5100'              	movf	((___fladd@exp2))&0ffh,w
  8741  000096' B4D8               	btfsc	status,2
  8742  000098' EF00' F000'        	goto	u3811
  8743  00009C' EF00' F000'        	goto	u3810
  8744  0000A0'                    u3811:
  8745  0000A2' EF00' F000'        	goto	l1022
  8746  0000A6'                    u3810:
  8747                           	line	27
  8748  0000A8' 0101               	movlb	1	; () banked
  8749  0000AA' 6F00'              	movwf	(??___fladd+5+0)&0ffh
  8750  0000AC' 0E06               	movlw	low(06h)
  8751  0000AE' 0101               	movlb	1	; () banked
  8752  0000B0' 0101               	movlb	1	; () banked
  8753  0000B2' 6F00'              	movwf	((___fladd@cntr))&0ffh
  8754  0000B4' 0101               	movlb	1	; () banked
  8755  0000B6' 5100'              	movf	(??___fladd+5+0)&0ffh,w
  8756                           	line	29
  8757  0000B8' 0101               	movlb	1	; () banked
  8758  0000BA' 0101               	movlb	1	; () banked
  8759  0000BC' 5100'              	movf	((___fladd@exp2))&0ffh,w
  8760  0000BE' 0101               	movlb	1	; () banked
  8761  0000C0' 0101               	movlb	1	; () banked
  8762  0000C2' 6100'              	cpfslt	((___fladd@exp1))&0ffh
  8763  0000C4' EF00' F000'        	goto	u3821
  8764  0000C8' EF00' F000'        	goto	u3820
  8765  0000CC'                    u3821:
  8766  0000CE' EF00' F000'        	goto	l1023
  8767  0000D2'                    u3820:
  8768                           	line	30
  8769  0000D4' 0101               	movlb	1	; () banked
  8770  0000D6' 0101               	movlb	1	; () banked
  8771  0000D8' 5100'              	movf	((___fladd@exp1))&0ffh,w
  8772  0000DA' 0101               	movlb	1	; () banked
  8773  0000DC' 0101               	movlb	1	; () banked
  8774  0000DE' 5D00'              	subwf	((___fladd@exp2))&0ffh,w
  8775  0000E0' 0101               	movlb	1	; () banked
  8776  0000E2' 6F00'              	movwf	(??___fladd+5+0)&0ffh
  8777  0000E4' 0E21               	movlw	(021h)&0ffh
  8778  0000E6' 0101               	movlb	1	; () banked
  8779  0000E8' 5D00'              	subwf	((??___fladd+5+0))&0ffh,w
  8780  0000EA' A0D8               	btfss	status,0
  8781  0000EC' EF00' F000'        	goto	u3831
  8782  0000F0' EF00' F000'        	goto	u3830
  8783  0000F4'                    u3831:
  8784  0000F6' EF00' F000'        	goto	l1028
  8785  0000FA'                    u3830:
  8786                           	line	32
  8787  0000FC' 0E00               	movlw	low(0)
  8788  0000FE' 0101               	movlb	1	; () banked
  8789  000100' 0101               	movlb	1	; () banked
  8790  000102' 6F00'              	movwf	((___fladd@f1))&0ffh
  8791  000104' 0E00               	movlw	high(0)
  8792  000106' 0101               	movlb	1	; () banked
  8793  000108' 6F00'              	movwf	((___fladd@f1+1))&0ffh
  8794  00010A' 0E00               	movlw	low highword(0)
  8795  00010C' 0101               	movlb	1	; () banked
  8796  00010E' 6F00'              	movwf	((___fladd@f1+2))&0ffh
  8797  000110' 0E00               	movlw	high highword(0)
  8798  000112' 0101               	movlb	1	; () banked
  8799  000114' 6F00'              	movwf	((___fladd@f1+3))&0ffh
  8800                           	line	33
  8801  000116' C003' F004'        	movff	(___fladd@exp2),(___fladd@exp1)
  8802                           	line	34
  8803  00011A' C000' F002'        	movff	(___fladd@sign2),(___fladd@sign1)
  8804                           	line	35
  8805  00011E' EF00' F000'        	goto	l1025
  8806                           	line	38
  8807                           	
  8808  000122'                    l1028:		; BSR set to: ?
  8809                           
  8810                           	line	39
  8811  000124' 0101               	movlb	1	; () banked
  8812  000126' 90D8               	bcf	status,0
  8813  000128' 0101               	movlb	1	; () banked
  8814  00012A' 3700'              	rlcf	((___fladd@f2))&0ffh
  8815  00012C' 0101               	movlb	1	; () banked
  8816  00012E' 3700'              	rlcf	((___fladd@f2+1))&0ffh
  8817  000130' 0101               	movlb	1	; () banked
  8818  000132' 3700'              	rlcf	((___fladd@f2+2))&0ffh
  8819  000134' 0101               	movlb	1	; () banked
  8820  000136' 3700'              	rlcf	((___fladd@f2+3))&0ffh
  8821                           	line	40
  8822  000138' 0101               	movlb	1	; () banked
  8823  00013A' 0101               	movlb	1	; () banked
  8824  00013C' 0700'              	decf	((___fladd@exp2))&0ffh
  8825                           	line	41
  8826  00013E' 0101               	movlb	1	; () banked
  8827  000140' 0101               	movlb	1	; () banked
  8828  000142' 5100'              	movf	((___fladd@exp2))&0ffh,w
  8829  000144' 0101               	movlb	1	; () banked
  8830  000146' 0101               	movlb	1	; () banked
  8831  000148' 1900'              	xorwf	((___fladd@exp1))&0ffh,w
  8832  00014A' B4D8               	btfsc	status,2
  8833  00014C' EF00' F000'        	goto	u3841
  8834  000150' EF00' F000'        	goto	u3840
  8835  000154'                    u3841:
  8836  000156' EF00' F000'        	goto	l1027
  8837  00015A'                    u3840:
  8838  00015C' 0101               	movlb	1	; () banked
  8839  00015E' 0101               	movlb	1	; () banked
  8840  000160' 2F00'              	decfsz	((___fladd@cntr))&0ffh
  8841                           	
  8842  000162' EF00' F000'        	goto	l1028
  8843                           	
  8844  000166'                    l600000742:		; BSR set to: ?
  8845                           
  8846                           	
  8847  000166'                    l1027:		; BSR set to: ?
  8848                           
  8849                           	line	42
  8850  000168' EF00' F000'        	goto	l1029
  8851                           	
  8852  00016C'                    l1030:		; BSR set to: ?
  8853                           
  8854                           	line	43
  8855  00016E' 0101               	movlb	1	; () banked
  8856  000170' 90D8               	bcf	status,0
  8857  000172' 0101               	movlb	1	; () banked
  8858  000174' 3300'              	rrcf	((___fladd@f1+3))&0ffh
  8859  000176' 0101               	movlb	1	; () banked
  8860  000178' 3300'              	rrcf	((___fladd@f1+2))&0ffh
  8861  00017A' 0101               	movlb	1	; () banked
  8862  00017C' 3300'              	rrcf	((___fladd@f1+1))&0ffh
  8863  00017E' 0101               	movlb	1	; () banked
  8864  000180' 3300'              	rrcf	((___fladd@f1))&0ffh
  8865                           	line	44
  8866  000182' 0101               	movlb	1	; () banked
  8867  000184' 0101               	movlb	1	; () banked
  8868  000186' 2B00'              	incf	((___fladd@exp1))&0ffh
  8869                           	line	45
  8870                           	
  8871  000188'                    l1029:		; BSR set to: ?
  8872                           
  8873                           	line	42
  8874  00018A' 0101               	movlb	1	; () banked
  8875  00018C' 0101               	movlb	1	; () banked
  8876  00018E' 5100'              	movf	((___fladd@exp2))&0ffh,w
  8877  000190' 0101               	movlb	1	; () banked
  8878  000192' 0101               	movlb	1	; () banked
  8879  000194' 6300'              	cpfseq	((___fladd@exp1))&0ffh
  8880  000196' EF00' F000'        	goto	u3851
  8881  00019A' EF00' F000'        	goto	u3850
  8882  00019E'                    u3851:
  8883  0001A0' EF00' F000'        	goto	l1030
  8884  0001A4'                    u3850:
  8885                           	
  8886  0001A4'                    l1031:		; BSR set to: ?
  8887                           
  8888                           	line	46
  8889                           	
  8890  0001A4'                    l1025:		; BSR set to: ?
  8891                           
  8892                           	line	47
  8893  0001A6' EF00' F000'        	goto	l1032
  8894                           	
  8895  0001AA'                    l1023:		; BSR set to: ?
  8896                           
  8897  0001AC' 0101               	movlb	1	; () banked
  8898  0001AE' 0101               	movlb	1	; () banked
  8899  0001B0' 5100'              	movf	((___fladd@exp1))&0ffh,w
  8900  0001B2' 0101               	movlb	1	; () banked
  8901  0001B4' 0101               	movlb	1	; () banked
  8902  0001B6' 1900'              	xorwf	((___fladd@exp2))&0ffh,w
  8903  0001B8' B4D8               	btfsc	status,2
  8904  0001BA' EF00' F000'        	goto	u3861
  8905  0001BE' EF00' F000'        	goto	u3860
  8906  0001C2'                    u3861:
  8907  0001C4' EF00' F000'        	goto	l1032
  8908  0001C8'                    u3860:
  8909                           	line	48
  8910  0001CA' 0101               	movlb	1	; () banked
  8911  0001CC' 0101               	movlb	1	; () banked
  8912  0001CE' 5100'              	movf	((___fladd@exp2))&0ffh,w
  8913  0001D0' 0101               	movlb	1	; () banked
  8914  0001D2' 0101               	movlb	1	; () banked
  8915  0001D4' 5D00'              	subwf	((___fladd@exp1))&0ffh,w
  8916  0001D6' 0101               	movlb	1	; () banked
  8917  0001D8' 6F00'              	movwf	(??___fladd+5+0)&0ffh
  8918  0001DA' 0E21               	movlw	(021h)&0ffh
  8919  0001DC' 0101               	movlb	1	; () banked
  8920  0001DE' 5D00'              	subwf	((??___fladd+5+0))&0ffh,w
  8921  0001E0' A0D8               	btfss	status,0
  8922  0001E2' EF00' F000'        	goto	u3871
  8923  0001E6' EF00' F000'        	goto	u3870
  8924  0001EA'                    u3871:
  8925  0001EC' EF00' F000'        	goto	l1038
  8926  0001F0'                    u3870:
  8927                           	line	49
  8928  0001F2' 0E00               	movlw	low(0)
  8929  0001F4' 0101               	movlb	1	; () banked
  8930  0001F6' 0101               	movlb	1	; () banked
  8931  0001F8' 6F00'              	movwf	((___fladd@f2))&0ffh
  8932  0001FA' 0E00               	movlw	high(0)
  8933  0001FC' 0101               	movlb	1	; () banked
  8934  0001FE' 6F00'              	movwf	((___fladd@f2+1))&0ffh
  8935  000200' 0E00               	movlw	low highword(0)
  8936  000202' 0101               	movlb	1	; () banked
  8937  000204' 6F00'              	movwf	((___fladd@f2+2))&0ffh
  8938  000206' 0E00               	movlw	high highword(0)
  8939  000208' 0101               	movlb	1	; () banked
  8940  00020A' 6F00'              	movwf	((___fladd@f2+3))&0ffh
  8941  00020C' EF00' F000'        	goto	l1032
  8942                           	line	53
  8943                           	
  8944  000210'                    l1038:		; BSR set to: ?
  8945                           
  8946                           	line	54
  8947  000212' 0101               	movlb	1	; () banked
  8948  000214' 90D8               	bcf	status,0
  8949  000216' 0101               	movlb	1	; () banked
  8950  000218' 3700'              	rlcf	((___fladd@f1))&0ffh
  8951  00021A' 0101               	movlb	1	; () banked
  8952  00021C' 3700'              	rlcf	((___fladd@f1+1))&0ffh
  8953  00021E' 0101               	movlb	1	; () banked
  8954  000220' 3700'              	rlcf	((___fladd@f1+2))&0ffh
  8955  000222' 0101               	movlb	1	; () banked
  8956  000224' 3700'              	rlcf	((___fladd@f1+3))&0ffh
  8957                           	line	55
  8958  000226' 0101               	movlb	1	; () banked
  8959  000228' 0101               	movlb	1	; () banked
  8960  00022A' 0700'              	decf	((___fladd@exp1))&0ffh
  8961                           	line	56
  8962  00022C' 0101               	movlb	1	; () banked
  8963  00022E' 0101               	movlb	1	; () banked
  8964  000230' 5100'              	movf	((___fladd@exp2))&0ffh,w
  8965  000232' 0101               	movlb	1	; () banked
  8966  000234' 0101               	movlb	1	; () banked
  8967  000236' 1900'              	xorwf	((___fladd@exp1))&0ffh,w
  8968  000238' B4D8               	btfsc	status,2
  8969  00023A' EF00' F000'        	goto	u3881
  8970  00023E' EF00' F000'        	goto	u3880
  8971  000242'                    u3881:
  8972  000244' EF00' F000'        	goto	l1037
  8973  000248'                    u3880:
  8974  00024A' 0101               	movlb	1	; () banked
  8975  00024C' 0101               	movlb	1	; () banked
  8976  00024E' 2F00'              	decfsz	((___fladd@cntr))&0ffh
  8977                           	
  8978  000250' EF00' F000'        	goto	l1038
  8979                           	
  8980  000254'                    l600000743:		; BSR set to: ?
  8981                           
  8982                           	
  8983  000254'                    l1037:		; BSR set to: ?
  8984                           
  8985                           	line	57
  8986  000256' EF00' F000'        	goto	l1039
  8987                           	
  8988  00025A'                    l1040:		; BSR set to: ?
  8989                           
  8990                           	line	58
  8991  00025C' 0101               	movlb	1	; () banked
  8992  00025E' 90D8               	bcf	status,0
  8993  000260' 0101               	movlb	1	; () banked
  8994  000262' 3300'              	rrcf	((___fladd@f2+3))&0ffh
  8995  000264' 0101               	movlb	1	; () banked
  8996  000266' 3300'              	rrcf	((___fladd@f2+2))&0ffh
  8997  000268' 0101               	movlb	1	; () banked
  8998  00026A' 3300'              	rrcf	((___fladd@f2+1))&0ffh
  8999  00026C' 0101               	movlb	1	; () banked
  9000  00026E' 3300'              	rrcf	((___fladd@f2))&0ffh
  9001                           	line	59
  9002  000270' 0101               	movlb	1	; () banked
  9003  000272' 0101               	movlb	1	; () banked
  9004  000274' 2B00'              	incf	((___fladd@exp2))&0ffh
  9005                           	line	60
  9006                           	
  9007  000276'                    l1039:		; BSR set to: ?
  9008                           
  9009                           	line	57
  9010  000278' 0101               	movlb	1	; () banked
  9011  00027A' 0101               	movlb	1	; () banked
  9012  00027C' 5100'              	movf	((___fladd@exp2))&0ffh,w
  9013  00027E' 0101               	movlb	1	; () banked
  9014  000280' 0101               	movlb	1	; () banked
  9015  000282' 6300'              	cpfseq	((___fladd@exp1))&0ffh
  9016  000284' EF00' F000'        	goto	u3891
  9017  000288' EF00' F000'        	goto	u3890
  9018  00028C'                    u3891:
  9019  00028E' EF00' F000'        	goto	l1040
  9020  000292'                    u3890:
  9021                           	
  9022  000292'                    l1041:		; BSR set to: ?
  9023                           
  9024                           	line	61
  9025                           	
  9026  000292'                    l1035:		; BSR set to: ?
  9027                           
  9028                           	line	62
  9029                           	
  9030  000292'                    l1033:		; BSR set to: ?
  9031                           
  9032                           	line	63
  9033                           	
  9034  000292'                    l1032:		; BSR set to: ?
  9035                           
  9036  000294' 0101               	movlb	1	; () banked
  9037  000296' 0101               	movlb	1	; () banked
  9038  000298' 5100'              	movf	((___fladd@sign1))&0ffh,w
  9039  00029A' B4D8               	btfsc	status,2
  9040  00029C' EF00' F000'        	goto	u3901
  9041  0002A0' EF00' F000'        	goto	u3900
  9042  0002A4'                    u3901:
  9043  0002A6' EF00' F000'        	goto	l1042
  9044  0002AA'                    u3900:
  9045                           	line	65
  9046  0002AC' 0EFF               	movlw	0FFh
  9047  0002AE' 0101               	movlb	1	; () banked
  9048  0002B0' 0101               	movlb	1	; () banked
  9049  0002B2' 1B00'              	xorwf	((___fladd@f1))&0ffh
  9050  0002B4' 0EFF               	movlw	0FFh
  9051  0002B6' 0101               	movlb	1	; () banked
  9052  0002B8' 1B00'              	xorwf	((___fladd@f1+1))&0ffh
  9053  0002BA' 0EFF               	movlw	0FFh
  9054  0002BC' 0101               	movlb	1	; () banked
  9055  0002BE' 1B00'              	xorwf	((___fladd@f1+2))&0ffh
  9056  0002C0' 0EFF               	movlw	0FFh
  9057  0002C2' 0101               	movlb	1	; () banked
  9058  0002C4' 1B00'              	xorwf	((___fladd@f1+3))&0ffh
  9059                           	line	66
  9060  0002C6' 0E01               	movlw	01h
  9061  0002C8' 0101               	movlb	1	; () banked
  9062  0002CA' 0101               	movlb	1	; () banked
  9063  0002CC' 2700'              	addwf	((___fladd@f1))&0ffh
  9064  0002CE' 0E00               	movlw	0
  9065  0002D0' 0101               	movlb	1	; () banked
  9066  0002D2' 2300'              	addwfc	((___fladd@f1+1))&0ffh
  9067  0002D4' 0E00               	movlw	0
  9068  0002D6' 0101               	movlb	1	; () banked
  9069  0002D8' 2300'              	addwfc	((___fladd@f1+2))&0ffh
  9070  0002DA' 0E00               	movlw	0
  9071  0002DC' 0101               	movlb	1	; () banked
  9072  0002DE' 2300'              	addwfc	((___fladd@f1+3))&0ffh
  9073                           	line	67
  9074                           	
  9075  0002E0'                    l1042:		; BSR set to: ?
  9076                           
  9077                           	line	68
  9078  0002E2' 0101               	movlb	1	; () banked
  9079  0002E4' 0101               	movlb	1	; () banked
  9080  0002E6' 5100'              	movf	((___fladd@sign2))&0ffh,w
  9081  0002E8' B4D8               	btfsc	status,2
  9082  0002EA' EF00' F000'        	goto	u3911
  9083  0002EE' EF00' F000'        	goto	u3910
  9084  0002F2'                    u3911:
  9085  0002F4' EF00' F000'        	goto	l1043
  9086  0002F8'                    u3910:
  9087                           	line	70
  9088  0002FA' 0EFF               	movlw	0FFh
  9089  0002FC' 0101               	movlb	1	; () banked
  9090  0002FE' 0101               	movlb	1	; () banked
  9091  000300' 1B00'              	xorwf	((___fladd@f2))&0ffh
  9092  000302' 0EFF               	movlw	0FFh
  9093  000304' 0101               	movlb	1	; () banked
  9094  000306' 1B00'              	xorwf	((___fladd@f2+1))&0ffh
  9095  000308' 0EFF               	movlw	0FFh
  9096  00030A' 0101               	movlb	1	; () banked
  9097  00030C' 1B00'              	xorwf	((___fladd@f2+2))&0ffh
  9098  00030E' 0EFF               	movlw	0FFh
  9099  000310' 0101               	movlb	1	; () banked
  9100  000312' 1B00'              	xorwf	((___fladd@f2+3))&0ffh
  9101                           	line	71
  9102  000314' 0E01               	movlw	01h
  9103  000316' 0101               	movlb	1	; () banked
  9104  000318' 0101               	movlb	1	; () banked
  9105  00031A' 2700'              	addwf	((___fladd@f2))&0ffh
  9106  00031C' 0E00               	movlw	0
  9107  00031E' 0101               	movlb	1	; () banked
  9108  000320' 2300'              	addwfc	((___fladd@f2+1))&0ffh
  9109  000322' 0E00               	movlw	0
  9110  000324' 0101               	movlb	1	; () banked
  9111  000326' 2300'              	addwfc	((___fladd@f2+2))&0ffh
  9112  000328' 0E00               	movlw	0
  9113  00032A' 0101               	movlb	1	; () banked
  9114  00032C' 2300'              	addwfc	((___fladd@f2+3))&0ffh
  9115                           	line	72
  9116                           	
  9117  00032E'                    l1043:		; BSR set to: ?
  9118                           
  9119                           	line	73
  9120  000330' 0101               	movlb	1	; () banked
  9121  000332' 6F00'              	movwf	(??___fladd+5+0)&0ffh
  9122  000334' 0E00               	movlw	low(0)
  9123  000336' 0101               	movlb	1	; () banked
  9124  000338' 0101               	movlb	1	; () banked
  9125  00033A' 6F00'              	movwf	((___fladd@sign1))&0ffh
  9126  00033C' 0101               	movlb	1	; () banked
  9127  00033E' 5100'              	movf	(??___fladd+5+0)&0ffh,w
  9128                           	line	74
  9129  000340' 0101               	movlb	1	; () banked
  9130  000342' 0101               	movlb	1	; () banked
  9131  000344' 5100'              	movf	((___fladd@f2))&0ffh,w
  9132  000346' 0101               	movlb	1	; () banked
  9133  000348' 0101               	movlb	1	; () banked
  9134  00034A' 2700'              	addwf	((___fladd@f1))&0ffh
  9135  00034C' 0101               	movlb	1	; () banked
  9136  00034E' 0101               	movlb	1	; () banked
  9137  000350' 5100'              	movf	((___fladd@f2+1))&0ffh,w
  9138  000352' 0101               	movlb	1	; () banked
  9139  000354' 0101               	movlb	1	; () banked
  9140  000356' 2300'              	addwfc	((___fladd@f1+1))&0ffh
  9141  000358' 0101               	movlb	1	; () banked
  9142  00035A' 0101               	movlb	1	; () banked
  9143  00035C' 5100'              	movf	((___fladd@f2+2))&0ffh,w
  9144  00035E' 0101               	movlb	1	; () banked
  9145  000360' 0101               	movlb	1	; () banked
  9146  000362' 2300'              	addwfc	((___fladd@f1+2))&0ffh
  9147  000364' 0101               	movlb	1	; () banked
  9148  000366' 0101               	movlb	1	; () banked
  9149  000368' 5100'              	movf	((___fladd@f2+3))&0ffh,w
  9150  00036A' 0101               	movlb	1	; () banked
  9151  00036C' 0101               	movlb	1	; () banked
  9152  00036E' 2300'              	addwfc	((___fladd@f1+3))&0ffh
  9153                           	line	75
  9154  000370' 0101               	movlb	1	; () banked
  9155                           	
  9156  000372' 0101               	movlb	1	; () banked
  9157  000374' AF00'              	btfss	((___fladd@f1+3))&0ffh,(31)&7
  9158  000376' EF00' F000'        	goto	u3921
  9159  00037A' EF00' F000'        	goto	u3920
  9160  00037E'                    u3921:
  9161  000380' EF00' F000'        	goto	l1022
  9162  000384'                    u3920:
  9163                           	line	76
  9164  000386' 0EFF               	movlw	0FFh
  9165  000388' 0101               	movlb	1	; () banked
  9166  00038A' 0101               	movlb	1	; () banked
  9167  00038C' 1B00'              	xorwf	((___fladd@f1))&0ffh
  9168  00038E' 0EFF               	movlw	0FFh
  9169  000390' 0101               	movlb	1	; () banked
  9170  000392' 1B00'              	xorwf	((___fladd@f1+1))&0ffh
  9171  000394' 0EFF               	movlw	0FFh
  9172  000396' 0101               	movlb	1	; () banked
  9173  000398' 1B00'              	xorwf	((___fladd@f1+2))&0ffh
  9174  00039A' 0EFF               	movlw	0FFh
  9175  00039C' 0101               	movlb	1	; () banked
  9176  00039E' 1B00'              	xorwf	((___fladd@f1+3))&0ffh
  9177                           	line	77
  9178  0003A0' 0E01               	movlw	01h
  9179  0003A2' 0101               	movlb	1	; () banked
  9180  0003A4' 0101               	movlb	1	; () banked
  9181  0003A6' 2700'              	addwf	((___fladd@f1))&0ffh
  9182  0003A8' 0E00               	movlw	0
  9183  0003AA' 0101               	movlb	1	; () banked
  9184  0003AC' 2300'              	addwfc	((___fladd@f1+1))&0ffh
  9185  0003AE' 0E00               	movlw	0
  9186  0003B0' 0101               	movlb	1	; () banked
  9187  0003B2' 2300'              	addwfc	((___fladd@f1+2))&0ffh
  9188  0003B4' 0E00               	movlw	0
  9189  0003B6' 0101               	movlb	1	; () banked
  9190  0003B8' 2300'              	addwfc	((___fladd@f1+3))&0ffh
  9191                           	line	78
  9192  0003BA' 0101               	movlb	1	; () banked
  9193  0003BC' 6F00'              	movwf	(??___fladd+5+0)&0ffh
  9194  0003BE' 0E01               	movlw	low(01h)
  9195  0003C0' 0101               	movlb	1	; () banked
  9196  0003C2' 0101               	movlb	1	; () banked
  9197  0003C4' 6F00'              	movwf	((___fladd@sign1))&0ffh
  9198  0003C6' 0101               	movlb	1	; () banked
  9199  0003C8' 5100'              	movf	(??___fladd+5+0)&0ffh,w
  9200                           	line	79
  9201                           	
  9202  0003CA'                    l1044:		; BSR set to: ?
  9203                           
  9204                           	line	80
  9205                           	
  9206  0003CA'                    l1022:		; BSR set to: ?
  9207                           
  9208                           	line	81
  9209  0003CC' C004' F002'        	movff	(___fladd@exp1),0+(?___flpack+02h)
  9210  0003D0' 0101               	movlb	1	; () banked
  9211  0003D2' 0E00'              	movlw	low(___fladd@f1)
  9212  0003D4' 0101               	movlb	1	; () banked
  9213  0003D6' 0101               	movlb	1	; () banked
  9214  0003D8' 6F00'              	movwf	((?___flpack))&0ffh
  9215  0003DA' 0101               	movlb	1	; () banked
  9216  0003DC' 0E00'              	movlw	high(___fladd@f1)
  9217  0003DE' 0101               	movlb	1	; () banked
  9218  0003E0' 6F00'              	movwf	((?___flpack+1))&0ffh
  9219  0003E2' EC00' F000'        	call	___flpack	;wreg free
  9220                           	line	82
  9221  0003E6' 0101               	movlb	1	; () banked
  9222  0003E8' 0101               	movlb	1	; () banked
  9223  0003EA' 5100'              	movf	((___fladd@sign1))&0ffh,w
  9224  0003EC' B4D8               	btfsc	status,2
  9225  0003EE' EF00' F000'        	goto	u3931
  9226  0003F2' EF00' F000'        	goto	u3930
  9227  0003F6'                    u3931:
  9228  0003F8' EF00' F000'        	goto	l1045
  9229  0003FC'                    u3930:
  9230                           	line	83
  9231  0003FE' 0E00               	movlw	0
  9232  000400' 0101               	movlb	1	; () banked
  9233  000402' 0101               	movlb	1	; () banked
  9234  000404' 1B00'              	xorwf	((___fladd@f1))&0ffh
  9235  000406' 0E00               	movlw	0
  9236  000408' 0101               	movlb	1	; () banked
  9237  00040A' 1B00'              	xorwf	((___fladd@f1+1))&0ffh
  9238  00040C' 0E00               	movlw	0
  9239  00040E' 0101               	movlb	1	; () banked
  9240  000410' 1B00'              	xorwf	((___fladd@f1+2))&0ffh
  9241  000412' 0E80               	movlw	080h
  9242  000414' 0101               	movlb	1	; () banked
  9243  000416' 1B00'              	xorwf	((___fladd@f1+3))&0ffh
  9244                           	
  9245  000418'                    l1045:		; BSR set to: ?
  9246                           
  9247                           	line	84
  9248  00041A' C000' F000'        	movff	(___fladd@f1),(?___fladd)
  9249  00041E' C001' F001'        	movff	(___fladd@f1+1),(?___fladd+1)
  9250  000422' C002' F002'        	movff	(___fladd@f1+2),(?___fladd+2)
  9251  000426' C003' F003'        	movff	(___fladd@f1+3),(?___fladd+3)
  9252  00042A' EF00' F000'        	goto	l1019
  9253                           	line	85
  9254  00042E'                    l1019:
  9255                           			; BSR set to: ?
  9256                           
  9257  000430' 0012               	return
  9258  000432' FFFF               	dw	0FFFFh; errata NOP
  9259                           	opt stack 0
  9260                           GLOBAL __end_of___fladd
  9261  000434'                    	__end_of___fladd:
  9262                           	FNSIZE	___fladd,6,8
  9263                           ; =============== function ___fladd ends =======
                                 =====
  9264                           
  9265                           	signat	___fladd,8316
  9266                           	global	___flpack
  9267                           	global	??___flpack
  9268                           	global	?___flpack
  9269                           
  9270                           ; *************** function ___flpack ***********
                                 ******
  9271                           ; Defined at:
  9272                           ;		line 36 in file "/opt/hitech/picc-18/9.66/sou
                                 rces/double.c"
  9273                           ; Parameters:
  9274                           ;		arg            size:   2offs:   0	type: PTR u
                                 nsigned long ; Largest target is 4
  9275                           ;		 -> __lwtofl@f1(4), __lltofl@f1(4), __lbtofl@
                                 f1(4), __abtofl@f1(4), 
  9276                           ;		 -> __flmul@f3(4), __fldiv@f3(4), __fladd@f1(
                                 4), __awtofl@f1(4), 
  9277                           ;		 -> __altofl@f1(4), 
  9278                           ;		exp            size:   1offs:   2	type: unsig
                                 ned char 
  9279                           ; Auto variables:
  9280                           ;		l_arg       	       	type: unsigned long 
  9281                           ; Return value:
  9282                           ;		type: void 
  9283                           ;		size: 0
  9284                           ; Registers used:
  9285                           ;		wreg, fsr0l, fsr0h, status,2, status,0
  9286                           ; Tracked objects:
  9287                           ;		On entry : 0/0
  9288                           ;		On exit  : 0/0
  9289                           ;		Unchanged: 0/0
  9290                           ; Data sizes:
  9291                           ;		Autos:    4
  9292                           ;		Params:   3
  9293                           ;		Temp:     4
  9294                           ;		Total:   11
  9295                           ; This function calls:
  9296                           ;		Nothing
  9297                           ; This function is called by:
  9298                           ;		___altofl
  9299                           ;		___awtofl
  9300                           ;		___fladd
  9301                           ;		___fldiv
  9302                           ;		___flmul
  9303                           ;		___lltofl
  9304                           ;		___lwtofl
  9305                           ; This function uses a non-reentrant model
  9306                           ; 
  9307                                   psect   text42,class=CODE,space=0,reloc=
                                 2
  9308                           
  9309                           	opt lm
  9310                           	file	"/opt/hitech/picc-18/9.66/sources/double.c
                                 "
  9311                           	line	36
  9312  000000                     	__size_of___flpack	equ	__end_of___flpack-___flp
                                 ack
  9313                           	
  9314  000000'                    ___flpack:		; BSR set to: ?
  9315                           
  9316                           	opt stack 22
  9317  000000' FFFF               	dw	0FFFFh
  9318                           	line	39
  9319  000002' C000' FFE9         	movff	(___flpack@arg),fsr0l
  9320  000006' C001' FFEA         	movff	(___flpack@arg+1),fsr0h
  9321  00000A' 0101               	movlb	1	; () banked
  9322  00000C' CFEE F000'         	movff	postinc0,(___flpack@l_arg)
  9323  000010' 0101               	movlb	1	; () banked
  9324  000012' CFEE F001'         	movff	postinc0,(___flpack@l_arg+1)
  9325  000016' 0101               	movlb	1	; () banked
  9326  000018' CFEE F002'         	movff	postinc0,(___flpack@l_arg+2)
  9327  00001C' 0101               	movlb	1	; () banked
  9328  00001E' CFEE F003'         	movff	postinc0,(___flpack@l_arg+3)
  9329                           	line	40
  9330  000022' 0101               	movlb	1	; () banked
  9331  000024' 0101               	movlb	1	; () banked
  9332  000026' 5100'              	movf	((___flpack@exp))&0ffh,w
  9333  000028' B4D8               	btfsc	status,2
  9334  00002A' EF00' F000'        	goto	u3941
  9335  00002E' EF00' F000'        	goto	u3940
  9336  000032'                    u3941:
  9337  000034' EF00' F000'        	goto	l600000744
  9338  000038'                    u3940:
  9339  00003A' 0101               	movlb	1	; () banked
  9340  00003C' 5100'              	movf	((___flpack@l_arg+3))&0ffh,w
  9341  00003E' 1100'              	iorwf ((___flpack@l_arg))&0ffh,w
  9342  000040' 1100'              	iorwf ((___flpack@l_arg+1))&0ffh,w
  9343  000042' 1100'              	iorwf ((___flpack@l_arg+2))&0ffh,w
  9344                           
  9345  000044' A4D8               	btfss	status,2
  9346  000046' EF00' F000'        	goto	u3951
  9347  00004A' EF00' F000'        	goto	u3950
  9348  00004E'                    u3951:
  9349  000050' EF00' F000'        	goto	l1008
  9350  000054'                    u3950:
  9351                           	
  9352  000054'                    l600000744:		; BSR set to: ?
  9353                           
  9354                           	line	41
  9355  000056' C000' FFE9         	movff	(___flpack@arg),fsr0l
  9356  00005A' C001' FFEA         	movff	(___flpack@arg+1),fsr0h
  9357  00005E' 0E00               	movlw	low(0)
  9358  000060' 6EEE               	movwf	postinc0
  9359  000062' 0E00               	movlw	high(0)
  9360  000064' 6EEE               	movwf	postinc0
  9361  000066' 0E00               	movlw	low highword(0)
  9362  000068' 6EEE               	movwf	postinc0
  9363  00006A' 0E00               	movlw	high highword(0)
  9364  00006C' 6EED               	movwf	postdec0
  9365  00006E' 52ED               	movf	postdec0
  9366  000070' 52ED               	movf	postdec0
  9367                           	line	42
  9368  000072' EF00' F000'        	goto	l1007
  9369                           	line	43
  9370                           	
  9371  000076'                    l1008:		; BSR set to: ?
  9372                           
  9373                           	line	44
  9374  000078' EF00' F000'        	goto	l1009
  9375                           	
  9376  00007C'                    l1010:		; BSR set to: ?
  9377                           
  9378                           	line	45
  9379  00007E' 0101               	movlb	1	; () banked
  9380  000080' 0101               	movlb	1	; () banked
  9381  000082' 2B00'              	incf	((___flpack@exp))&0ffh
  9382                           	line	46
  9383  000084' 0101               	movlb	1	; () banked
  9384  000086' 90D8               	bcf	status,0
  9385  000088' 0101               	movlb	1	; () banked
  9386  00008A' 3300'              	rrcf	((___flpack@l_arg+3))&0ffh
  9387  00008C' 0101               	movlb	1	; () banked
  9388  00008E' 3300'              	rrcf	((___flpack@l_arg+2))&0ffh
  9389  000090' 0101               	movlb	1	; () banked
  9390  000092' 3300'              	rrcf	((___flpack@l_arg+1))&0ffh
  9391  000094' 0101               	movlb	1	; () banked
  9392  000096' 3300'              	rrcf	((___flpack@l_arg))&0ffh
  9393                           	line	47
  9394                           	
  9395  000098'                    l1009:		; BSR set to: ?
  9396                           
  9397                           	line	44
  9398  00009A' 0E00               	movlw	0
  9399  00009C' 0101               	movlb	1	; () banked
  9400  00009E' 0101               	movlb	1	; () banked
  9401  0000A0' 1500'              	andwf	((___flpack@l_arg))&0ffh,w
  9402  0000A2' 0101               	movlb	1	; () banked
  9403  0000A4' 6F00'              	movwf	(??___flpack+4+0)&0ffh
  9404  0000A6' 0E00               	movlw	0
  9405  0000A8' 0101               	movlb	1	; () banked
  9406  0000AA' 0101               	movlb	1	; () banked
  9407  0000AC' 1500'              	andwf	((___flpack@l_arg+1))&0ffh,w
  9408  0000AE' 0101               	movlb	1	; () banked
  9409  0000B0' 6F00'              	movwf	1+(??___flpack+4+0)&0ffh
  9410  0000B2' 0E00               	movlw	0
  9411  0000B4' 0101               	movlb	1	; () banked
  9412  0000B6' 0101               	movlb	1	; () banked
  9413  0000B8' 1500'              	andwf	((___flpack@l_arg+2))&0ffh,w
  9414  0000BA' 0101               	movlb	1	; () banked
  9415  0000BC' 6F00'              	movwf	2+(??___flpack+4+0)&0ffh
  9416  0000BE' 0EFE               	movlw	0FEh
  9417  0000C0' 0101               	movlb	1	; () banked
  9418  0000C2' 0101               	movlb	1	; () banked
  9419  0000C4' 1500'              	andwf	((___flpack@l_arg+3))&0ffh,w
  9420  0000C6' 0101               	movlb	1	; () banked
  9421  0000C8' 6F00'              	movwf	3+(??___flpack+4+0)&0ffh
  9422  0000CA' 0101               	movlb	1	; () banked
  9423  0000CC' 5100'              	movf	(??___flpack+4+3)&0ffh,w
  9424  0000CE' 1100'              	iorwf (??___flpack+4+0)&0ffh,w
  9425  0000D0' 1100'              	iorwf (??___flpack+4+1)&0ffh,w
  9426  0000D2' 1100'              	iorwf (??___flpack+4+2)&0ffh,w
  9427                           
  9428  0000D4' A4D8               	btfss	status,2
  9429  0000D6' EF00' F000'        	goto	u3961
  9430  0000DA' EF00' F000'        	goto	u3960
  9431  0000DE'                    u3961:
  9432  0000E0' EF00' F000'        	goto	l1010
  9433  0000E4'                    u3960:
  9434                           	
  9435  0000E6'                    l1011:		; BSR set to: ?
  9436                           
  9437                           	line	48
  9438  0000E6' EF00' F000'        	goto	l1012
  9439                           	
  9440  0000EA'                    l1013:		; BSR set to: ?
  9441                           
  9442                           	line	49
  9443  0000EC' 0101               	movlb	1	; () banked
  9444  0000EE' 0101               	movlb	1	; () banked
  9445  0000F0' 2B00'              	incf	((___flpack@exp))&0ffh
  9446                           	line	50
  9447  0000F2' 0E01               	movlw	01h
  9448  0000F4' 0101               	movlb	1	; () banked
  9449  0000F6' 0101               	movlb	1	; () banked
  9450  0000F8' 2700'              	addwf	((___flpack@l_arg))&0ffh
  9451  0000FA' 0E00               	movlw	0
  9452  0000FC' 0101               	movlb	1	; () banked
  9453  0000FE' 2300'              	addwfc	((___flpack@l_arg+1))&0ffh
  9454  000100' 0E00               	movlw	0
  9455  000102' 0101               	movlb	1	; () banked
  9456  000104' 2300'              	addwfc	((___flpack@l_arg+2))&0ffh
  9457  000106' 0E00               	movlw	0
  9458  000108' 0101               	movlb	1	; () banked
  9459  00010A' 2300'              	addwfc	((___flpack@l_arg+3))&0ffh
  9460                           	line	51
  9461  00010C' 0101               	movlb	1	; () banked
  9462  00010E' 90D8               	bcf	status,0
  9463  000110' 0101               	movlb	1	; () banked
  9464  000112' 3300'              	rrcf	((___flpack@l_arg+3))&0ffh
  9465  000114' 0101               	movlb	1	; () banked
  9466  000116' 3300'              	rrcf	((___flpack@l_arg+2))&0ffh
  9467  000118' 0101               	movlb	1	; () banked
  9468  00011A' 3300'              	rrcf	((___flpack@l_arg+1))&0ffh
  9469  00011C' 0101               	movlb	1	; () banked
  9470  00011E' 3300'              	rrcf	((___flpack@l_arg))&0ffh
  9471                           	line	52
  9472                           	
  9473  000120'                    l1012:		; BSR set to: ?
  9474                           
  9475                           	line	48
  9476  000122' 0E00               	movlw	0
  9477  000124' 0101               	movlb	1	; () banked
  9478  000126' 0101               	movlb	1	; () banked
  9479  000128' 1500'              	andwf	((___flpack@l_arg))&0ffh,w
  9480  00012A' 0101               	movlb	1	; () banked
  9481  00012C' 6F00'              	movwf	(??___flpack+4+0)&0ffh
  9482  00012E' 0E00               	movlw	0
  9483  000130' 0101               	movlb	1	; () banked
  9484  000132' 0101               	movlb	1	; () banked
  9485  000134' 1500'              	andwf	((___flpack@l_arg+1))&0ffh,w
  9486  000136' 0101               	movlb	1	; () banked
  9487  000138' 6F00'              	movwf	1+(??___flpack+4+0)&0ffh
  9488  00013A' 0E00               	movlw	0
  9489  00013C' 0101               	movlb	1	; () banked
  9490  00013E' 0101               	movlb	1	; () banked
  9491  000140' 1500'              	andwf	((___flpack@l_arg+2))&0ffh,w
  9492  000142' 0101               	movlb	1	; () banked
  9493  000144' 6F00'              	movwf	2+(??___flpack+4+0)&0ffh
  9494  000146' 0EFF               	movlw	0FFh
  9495  000148' 0101               	movlb	1	; () banked
  9496  00014A' 0101               	movlb	1	; () banked
  9497  00014C' 1500'              	andwf	((___flpack@l_arg+3))&0ffh,w
  9498  00014E' 0101               	movlb	1	; () banked
  9499  000150' 6F00'              	movwf	3+(??___flpack+4+0)&0ffh
  9500  000152' 0101               	movlb	1	; () banked
  9501  000154' 5100'              	movf	(??___flpack+4+3)&0ffh,w
  9502  000156' 1100'              	iorwf (??___flpack+4+0)&0ffh,w
  9503  000158' 1100'              	iorwf (??___flpack+4+1)&0ffh,w
  9504  00015A' 1100'              	iorwf (??___flpack+4+2)&0ffh,w
  9505                           
  9506  00015C' A4D8               	btfss	status,2
  9507  00015E' EF00' F000'        	goto	u3971
  9508  000162' EF00' F000'        	goto	u3970
  9509  000166'                    u3971:
  9510  000168' EF00' F000'        	goto	l1013
  9511  00016C'                    u3970:
  9512                           	
  9513  00016E'                    l1014:		; BSR set to: ?
  9514                           
  9515                           	line	53
  9516  00016E' EF00' F000'        	goto	l1015
  9517                           	
  9518  000172'                    l1016:		; BSR set to: ?
  9519                           
  9520                           	line	54
  9521  000174' 0101               	movlb	1	; () banked
  9522  000176' 0101               	movlb	1	; () banked
  9523  000178' 0700'              	decf	((___flpack@exp))&0ffh
  9524                           	line	55
  9525  00017A' 0101               	movlb	1	; () banked
  9526  00017C' 90D8               	bcf	status,0
  9527  00017E' 0101               	movlb	1	; () banked
  9528  000180' 3700'              	rlcf	((___flpack@l_arg))&0ffh
  9529  000182' 0101               	movlb	1	; () banked
  9530  000184' 3700'              	rlcf	((___flpack@l_arg+1))&0ffh
  9531  000186' 0101               	movlb	1	; () banked
  9532  000188' 3700'              	rlcf	((___flpack@l_arg+2))&0ffh
  9533  00018A' 0101               	movlb	1	; () banked
  9534  00018C' 3700'              	rlcf	((___flpack@l_arg+3))&0ffh
  9535                           	line	56
  9536                           	
  9537  00018E'                    l1015:		; BSR set to: ?
  9538                           
  9539                           	line	53
  9540  000190' 0101               	movlb	1	; () banked
  9541                           	
  9542  000192' 0101               	movlb	1	; () banked
  9543  000194' AF00'              	btfss	((___flpack@l_arg+2))&0ffh,(23)&7
  9544  000196' EF00' F000'        	goto	u3981
  9545  00019A' EF00' F000'        	goto	u3980
  9546  00019E'                    u3981:
  9547  0001A0' EF00' F000'        	goto	l1016
  9548  0001A4'                    u3980:
  9549                           	
  9550  0001A6'                    l1017:		; BSR set to: ?
  9551                           
  9552                           	line	57
  9553  0001A6' 0101               	movlb	1	; () banked
  9554                           	
  9555  0001A8' 0101               	movlb	1	; () banked
  9556  0001AA' B100'              	btfsc	((___flpack@exp))&0ffh,(0)&7
  9557  0001AC' EF00' F000'        	goto	u3991
  9558  0001B0' EF00' F000'        	goto	u3990
  9559  0001B4'                    u3991:
  9560  0001B6' EF00' F000'        	goto	l1018
  9561  0001BA'                    u3990:
  9562                           	line	58
  9563  0001BC' 0EFF               	movlw	0FFh
  9564  0001BE' 0101               	movlb	1	; () banked
  9565  0001C0' 0101               	movlb	1	; () banked
  9566  0001C2' 1700'              	andwf	((___flpack@l_arg))&0ffh
  9567  0001C4' 0EFF               	movlw	0FFh
  9568  0001C6' 0101               	movlb	1	; () banked
  9569  0001C8' 1700'              	andwf	((___flpack@l_arg+1))&0ffh
  9570  0001CA' 0E7F               	movlw	07Fh
  9571  0001CC' 0101               	movlb	1	; () banked
  9572  0001CE' 1700'              	andwf	((___flpack@l_arg+2))&0ffh
  9573  0001D0' 0EFF               	movlw	0FFh
  9574  0001D2' 0101               	movlb	1	; () banked
  9575  0001D4' 1700'              	andwf	((___flpack@l_arg+3))&0ffh
  9576                           	
  9577  0001D6'                    l1018:		; BSR set to: ?
  9578                           
  9579                           	line	59
  9580  0001D8' 0101               	movlb	1	; () banked
  9581  0001DA' 90D8               	bcf status,0
  9582  0001DC' 3300'              	rrcf	((___flpack@exp))&0ffh
  9583                           
  9584                           	line	60
  9585  0001DE' 0101               	movlb	1	; () banked
  9586  0001E0' C002' F004'        	movff	(___flpack@exp),??___flpack+4+0
  9587  0001E4' 0101               	movlb	1	; () banked
  9588  0001E6' 6B00'              	clrf	(??___flpack+4+0+1)&0ffh
  9589  0001E8' 6B00'              	clrf	(??___flpack+4+0+2)&0ffh
  9590  0001EA' 6B00'              	clrf	(??___flpack+4+0+3)&0ffh
  9591  0001EC' C004' F007'        	movff	??___flpack+4+0,??___flpack+4+3
  9592  0001F0' 0101               	movlb	1	; () banked
  9593  0001F2' 6B00'              	clrf	(??___flpack+4+2)&0ffh
  9594  0001F4' 6B00'              	clrf	(??___flpack+4+1)&0ffh
  9595  0001F6' 6B00'              	clrf	(??___flpack+4+0)&0ffh
  9596  0001F8' 0101               	movlb	1	; () banked
  9597  0001FA' 5100'              	movf	(??___flpack+4+0)&0ffh,w
  9598  0001FC' 0101               	movlb	1	; () banked
  9599  0001FE' 0101               	movlb	1	; () banked
  9600  000200' 1300'              	iorwf	((___flpack@l_arg))&0ffh
  9601  000202' 0101               	movlb	1	; () banked
  9602  000204' 5100'              	movf	(??___flpack+4+1)&0ffh,w
  9603  000206' 0101               	movlb	1	; () banked
  9604  000208' 0101               	movlb	1	; () banked
  9605  00020A' 1300'              	iorwf	((___flpack@l_arg+1))&0ffh
  9606  00020C' 0101               	movlb	1	; () banked
  9607  00020E' 5100'              	movf	(??___flpack+4+2)&0ffh,w
  9608  000210' 0101               	movlb	1	; () banked
  9609  000212' 0101               	movlb	1	; () banked
  9610  000214' 1300'              	iorwf	((___flpack@l_arg+2))&0ffh
  9611  000216' 0101               	movlb	1	; () banked
  9612  000218' 5100'              	movf	(??___flpack+4+3)&0ffh,w
  9613  00021A' 0101               	movlb	1	; () banked
  9614  00021C' 0101               	movlb	1	; () banked
  9615  00021E' 1300'              	iorwf	((___flpack@l_arg+3))&0ffh
  9616                           
  9617                           	line	61
  9618  000220' C000' FFE9         	movff	(___flpack@arg),fsr0l
  9619  000224' C001' FFEA         	movff	(___flpack@arg+1),fsr0h
  9620  000228' 0101               	movlb	1	; () banked
  9621  00022A' C000' FFEE         	movff	(___flpack@l_arg),postinc0
  9622  00022E' 0101               	movlb	1	; () banked
  9623  000230' C001' FFEE         	movff	(___flpack@l_arg+1),postinc0
  9624  000234' 0101               	movlb	1	; () banked
  9625  000236' C002' FFEE         	movff	(___flpack@l_arg+2),postinc0
  9626  00023A' 0101               	movlb	1	; () banked
  9627  00023C' C003' FFEE         	movff	(___flpack@l_arg+3),postinc0
  9628                           	line	62
  9629  000240'                    l1007:
  9630                           			; BSR set to: ?
  9631                           
  9632  000242' 0012               	return
  9633  000244' FFFF               	dw	0FFFFh; errata NOP
  9634                           	opt stack 0
  9635                           GLOBAL __end_of___flpack
  9636  000246'                    	__end_of___flpack:
  9637                           	FNSIZE	___flpack,8,3
  9638                           ; =============== function ___flpack ends ======
                                 ======
  9639                           
  9640                           	signat	___flpack,8312
  9641                           	global	___flunpack
  9642                           	global	??___flunpack
  9643                           	global	?___flunpack
  9644                           
  9645                           ; *************** function ___flunpack *********
                                 ********
  9646                           ; Defined at:
  9647                           ;		line 13 in file "/opt/hitech/picc-18/9.66/sou
                                 rces/double.c"
  9648                           ; Parameters:
  9649                           ;		arg            size:   2offs:   0	type: PTR u
                                 nsigned long ; Largest target is 4
  9650                           ;		 -> __fltol@f1(4), __flmul@f2(4), __flmul@f1(
                                 4), __fldiv@f2(4), 
  9651                           ;		 -> __fldiv@f1(4), __fladd@f2(4), __fladd@f1(
                                 4), 
  9652                           ;		exp            size:   2offs:   2	type: PTR u
                                 nsigned char ; Largest target is 1
  9653                           ;		 -> __fltol@exp1(1), __flmul@cntr(1), __flmul
                                 @exp1(1), __fldiv@exp2(1), 
  9654                           ;		 -> __fldiv@exp1(1), __fladd@exp2(1), __fladd
                                 @exp1(1), 
  9655                           ; Auto variables:
  9656                           ;		sign        	       	type: unsigned char 
  9657                           ;		l_arg       	       	type: unsigned long 
  9658                           ; Return value:
  9659                           ;		type: unsigned char 
  9660                           ;		size: 1
  9661                           ; Registers used:
  9662                           ;		wreg, fsr0l, fsr0h, status,2, status,0
  9663                           ; Tracked objects:
  9664                           ;		On entry : 0/0
  9665                           ;		On exit  : 0/0
  9666                           ;		Unchanged: 0/0
  9667                           ; Data sizes:
  9668                           ;		Autos:    5
  9669                           ;		Params:   4
  9670                           ;		Temp:     1
  9671                           ;		Total:   10
  9672                           ; This function calls:
  9673                           ;		Nothing
  9674                           ; This function is called by:
  9675                           ;		___fladd
  9676                           ;		___fldiv
  9677                           ;		___flmul
  9678                           ;		___fltol
  9679                           ; This function uses a non-reentrant model
  9680                           ; 
  9681                                   psect   text43,class=CODE,space=0,reloc=
                                 2
  9682                           
  9683                           	opt lm
  9684                           	file	"/opt/hitech/picc-18/9.66/sources/double.c
                                 "
  9685                           	line	13
  9686  000000                     	__size_of___flunpack	equ	__end_of___flunpack-__
                                 _flunpack
  9687                           	
  9688  000000'                    ___flunpack:		; BSR set to: ?
  9689                           
  9690                           	opt stack 22
  9691  000000' FFFF               	dw	0FFFFh
  9692                           	line	17
  9693  000002' C000' FFE9         	movff	(___flunpack@arg),fsr0l
  9694  000006' C001' FFEA         	movff	(___flunpack@arg+1),fsr0h
  9695  00000A' 0101               	movlb	1	; () banked
  9696  00000C' CFEE F001'         	movff	postinc0,(___flunpack@l_arg)
  9697  000010' 0101               	movlb	1	; () banked
  9698  000012' CFEE F002'         	movff	postinc0,(___flunpack@l_arg+1)
  9699  000016' 0101               	movlb	1	; () banked
  9700  000018' CFEE F003'         	movff	postinc0,(___flunpack@l_arg+2)
  9701  00001C' 0101               	movlb	1	; () banked
  9702  00001E' CFEE F004'         	movff	postinc0,(___flunpack@l_arg+3)
  9703                           	line	18
  9704  000022' 0101               	movlb	1	; () banked
  9705  000024' 3500'              	rlcf	((___flunpack@l_arg+2))&0ffh,w
  9706  000026' 0101               	movlb	1	; () banked
  9707  000028' 3500'              	rlcf	((___flunpack@l_arg+3))&0ffh,w
  9708  00002A' 0101               	movlb	1	; () banked
  9709  00002C' 0101               	movlb	1	; () banked
  9710  00002E' 6F00'              	movwf	((___flunpack@sign))&0ffh
  9711  000030' C002' FFE9         	movff	(___flunpack@exp),fsr0l
  9712  000034' C003' FFEA         	movff	(___flunpack@exp+1),fsr0h
  9713  000038' 0101               	movlb	1	; () banked
  9714  00003A' C000' FFEF         	movff	(___flunpack@sign),indf0
  9715                           
  9716                           	line	19
  9717  00003E' 0101               	movlb	1	; () banked
  9718  000040' 0101               	movlb	1	; () banked
  9719  000042' 6700'              	tstfsz	((___flunpack@sign))&0ffh
  9720  000044' EF00' F000'        	goto	u4001
  9721  000048' EF00' F000'        	goto	u4000
  9722  00004C'                    u4001:
  9723  00004E' EF00' F000'        	goto	l1004
  9724  000052'                    u4000:
  9725                           	line	20
  9726  000054' 0E00               	movlw	low(0)
  9727  000056' 0101               	movlb	1	; () banked
  9728  000058' 0101               	movlb	1	; () banked
  9729  00005A' 6F00'              	movwf	((___flunpack@l_arg))&0ffh
  9730  00005C' 0E00               	movlw	high(0)
  9731  00005E' 0101               	movlb	1	; () banked
  9732  000060' 6F00'              	movwf	((___flunpack@l_arg+1))&0ffh
  9733  000062' 0E00               	movlw	low highword(0)
  9734  000064' 0101               	movlb	1	; () banked
  9735  000066' 6F00'              	movwf	((___flunpack@l_arg+2))&0ffh
  9736  000068' 0E00               	movlw	high highword(0)
  9737  00006A' 0101               	movlb	1	; () banked
  9738  00006C' 6F00'              	movwf	((___flunpack@l_arg+3))&0ffh
  9739                           	line	21
  9740  00006E' EF00' F000'        	goto	l1005
  9741                           	
  9742  000072'                    l1004:		; BSR set to: ?
  9743                           
  9744                           	line	22
  9745  000074' 0101               	movlb	1	; () banked
  9746  000076' 6F00'              	movwf	(??___flunpack+5+0)&0ffh
  9747  000078' 0E00               	movlw	low(0)
  9748  00007A' 0101               	movlb	1	; () banked
  9749  00007C' 0101               	movlb	1	; () banked
  9750  00007E' 6F00'              	movwf	((___flunpack@sign))&0ffh
  9751  000080' 0101               	movlb	1	; () banked
  9752  000082' 5100'              	movf	(??___flunpack+5+0)&0ffh,w
  9753                           	line	23
  9754  000084' 0101               	movlb	1	; () banked
  9755  000086' 0101               	movlb	1	; () banked
  9756  000088' 8F00'              	bsf	(0+(23/8)+(___flunpack@l_arg))&0ffh,(23)&7
  9757                           	line	24
  9758  00008A' 0101               	movlb	1	; () banked
  9759                           	
  9760  00008C' 0101               	movlb	1	; () banked
  9761  00008E' AF00'              	btfss	((___flunpack@l_arg+3))&0ffh,(31)&7
  9762  000090' EF00' F000'        	goto	u4011
  9763  000094' EF00' F000'        	goto	u4010
  9764  000098'                    u4011:
  9765  00009A' EF00' F000'        	goto	l1006
  9766  00009E'                    u4010:
  9767                           	line	25
  9768  0000A0' 0101               	movlb	1	; () banked
  9769  0000A2' 0101               	movlb	1	; () banked
  9770  0000A4' 2B00'              	incf	((___flunpack@sign))&0ffh
  9771                           	
  9772  0000A6'                    l1006:		; BSR set to: ?
  9773                           
  9774                           	line	26
  9775  0000A8' 0EFF               	movlw	0FFh
  9776  0000AA' 0101               	movlb	1	; () banked
  9777  0000AC' 0101               	movlb	1	; () banked
  9778  0000AE' 1700'              	andwf	((___flunpack@l_arg))&0ffh
  9779  0000B0' 0EFF               	movlw	0FFh
  9780  0000B2' 0101               	movlb	1	; () banked
  9781  0000B4' 1700'              	andwf	((___flunpack@l_arg+1))&0ffh
  9782  0000B6' 0EFF               	movlw	0FFh
  9783  0000B8' 0101               	movlb	1	; () banked
  9784  0000BA' 1700'              	andwf	((___flunpack@l_arg+2))&0ffh
  9785  0000BC' 0E00               	movlw	0
  9786  0000BE' 0101               	movlb	1	; () banked
  9787  0000C0' 1700'              	andwf	((___flunpack@l_arg+3))&0ffh
  9788                           	line	27
  9789                           	
  9790  0000C2'                    l1005:		; BSR set to: ?
  9791                           
  9792                           	line	28
  9793  0000C4' C000' FFE9         	movff	(___flunpack@arg),fsr0l
  9794  0000C8' C001' FFEA         	movff	(___flunpack@arg+1),fsr0h
  9795  0000CC' 0101               	movlb	1	; () banked
  9796  0000CE' C001' FFEE         	movff	(___flunpack@l_arg),postinc0
  9797  0000D2' 0101               	movlb	1	; () banked
  9798  0000D4' C002' FFEE         	movff	(___flunpack@l_arg+1),postinc0
  9799  0000D8' 0101               	movlb	1	; () banked
  9800  0000DA' C003' FFEE         	movff	(___flunpack@l_arg+2),postinc0
  9801  0000DE' 0101               	movlb	1	; () banked
  9802  0000E0' C004' FFEE         	movff	(___flunpack@l_arg+3),postinc0
  9803                           	line	29
  9804  0000E4' 0101               	movlb	1	; () banked
  9805  0000E6' 0101               	movlb	1	; () banked
  9806  0000E8' 5100'              	movf	((___flunpack@sign))&0ffh,w
  9807  0000EA' EF00' F000'        	goto	l1003
  9808                           	line	30
  9809  0000EE'                    l1003:
  9810                           			; BSR set to: ?
  9811                           
  9812  0000F0' 0012               	return
  9813  0000F2' FFFF               	dw	0FFFFh; errata NOP
  9814                           	opt stack 0
  9815                           GLOBAL __end_of___flunpack
  9816  0000F4'                    	__end_of___flunpack:
  9817                           	FNSIZE	___flunpack,6,4
  9818                           ; =============== function ___flunpack ends ====
                                 ========
  9819                           
  9820                           	signat	___flunpack,8313
  9821                           	global	_isr
  9822                           	global	??_isr
  9823                           	global	?_isr
  9824                           
  9825                           ; *************** function _isr ****************
                                 *
  9826                           ; Defined at:
  9827                           ;		line 79 in file "../../../src/LC-meter.c"
  9828                           ; Parameters:
  9829                           ;		None
  9830                           ; Auto variables:
  9831                           ;		None
  9832                           ; Return value:
  9833                           ;		type: int 
  9834                           ;		size: 2
  9835                           ; Registers used:
  9836                           ;		wreg, fsr0l, fsr0h, status,2, status,0
  9837                           ; Tracked objects:
  9838                           ;		On entry : 0/0
  9839                           ;		On exit  : 0/0
  9840                           ;		Unchanged: 0/0
  9841                           ; Data sizes:
  9842                           ;		Autos:    0
  9843                           ;		Params:   0
  9844                           ;		Temp:    14
  9845                           ;		Total:   14
  9846                           ; This function calls:
  9847                           ;		Nothing
  9848                           ; This function is called by:
  9849                           ;		Interrupt level 2
  9850                           ; This function uses a non-reentrant model
  9851                           ; 
  9852                                   psect   text44,class=CODE,space=0,reloc=
                                 2
  9853                           
  9854                           	opt lm
  9855                           	file	"../../../src/LC-meter.c"
  9856                           	line	79
  9857  000000                     	__size_of_isr	equ	__end_of_isr-_isr
  9858                           ;LC-meter.c: 60: double F1, F2, F3, CCal;
  9859                           ;LC-meter.c: 61: void main();
  9860                           ;LC-meter.c: 62: void loop();
  9861                           ;LC-meter.c: 63: void testloop();
  9862                           ;LC-meter.c: 64: void initialize();
  9863                           ;LC-meter.c: 65: unsigned short int measure_freq
                                 ();
  9864                           ;LC-meter.c: 66: void calibrate();
  9865                           ;LC-meter.c: 67: void measure_capacitance();
  9866                           ;LC-meter.c: 68: void measure_inductance();
  9867                           ;LC-meter.c: 69: unsigned long int milliseconds(
                                 );
  9868                           ;LC-meter.c: 70: void delay10ms(unsigned short i
                                 nt period_10ms);
  9869                           ;LC-meter.c: 72: void put_str(const char*);
  9870                           ;LC-meter.c: 74: void put_number(void (*putchar)
                                 (char), unsigned short int n, unsigned char base
                                 , signed char pad );
  9871                           	
  9872  000000'                    _isr:		; BSR set to: ?
  9873                           
  9874                           	opt stack 31
  9875                                   psect   intcode,class=CODE,space=0,reloc
                                 =2
  9876                           	global	int_func
  9877  000000'                    int_func:
  9878                                   psect   intcode
  9879  000000' FFFF               	dw	0FFFFh
  9880  000002' CFFA F000'         	movff	pclat+0,??_isr+0
  9881  000006' CFFB F001'         	movff	pclat+1,??_isr+1
  9882  00000A' EF00' F000'        	goto	_isr
  9883                                   psect   text44
  9884  000000' FFFF               	dw	0FFFFh
  9885  000002' CFE9 F002'         	movff	fsr0l+0,??_isr+2
  9886  000006' CFEA F003'         	movff	fsr0h+0,??_isr+3
  9887  00000A' CFE1 F004'         	movff	fsr1l+0,??_isr+4
  9888  00000E' CFE2 F005'         	movff	fsr1h+0,??_isr+5
  9889  000012' CFD9 F006'         	movff	fsr2l+0,??_isr+6
  9890  000016' CFDA F007'         	movff	fsr2h+0,??_isr+7
  9891  00001A' CFF3 F008'         	movff	prodl+0,??_isr+8
  9892  00001E' CFF4 F009'         	movff	prodh+0,??_isr+9
  9893  000022' CFF6 F00A'         	movff	tblptrl+0,??_isr+10
  9894  000026' CFF7 F00B'         	movff	tblptrh+0,??_isr+11
  9895  00002A' CFF8 F00C'         	movff	tblptru+0,??_isr+12
  9896  00002E' CFF5 F00D'         	movff	tablat+0,??_isr+13
  9897  000032' FFFF               	dw	0FFFFh
  9898                           	line	81
  9899                           ;LC-meter.c: 81: if(TMR2IF) {
  9900  000034' A29E               	btfss	c:(31985/8),(31985)&7	;volatile
  9901  000036' EF00' F000'        	goto	i2u4021
  9902  00003A' EF00' F000'        	goto	i2u4020
  9903  00003E'                    i2u4021:
  9904  000040' EF00' F000'        	goto	i2l829
  9905  000044'                    i2u4020:
  9906                           	line	83
  9907                           ;LC-meter.c: 83: bres += 256;
  9908  000046' 0E01               	movlw	(0100h >> 8)
  9909  000048' 2607               	addwf	((c:6+1)),c	;volatile
  9910                           	line	85
  9911                           ;LC-meter.c: 85: if(bres >= 5000) {
  9912  00004A' 0E88               	movlw	088h
  9913  00004C' 5C06               	subwf	((c:6)),c,w	;volatile
  9914  00004E' 0E13               	movlw	013h
  9915  000050' 5807               	subwfb	((c:6+1)),c,w	;volatile
  9916  000052' A0D8               	btfss	status,0
  9917  000054' EF00' F000'        	goto	i2u4031
  9918  000058' EF00' F000'        	goto	i2u4030
  9919  00005C'                    i2u4031:
  9920  00005E' EF00' F000'        	goto	i2l830
  9921  000062'                    i2u4030:
  9922                           	line	86
  9923                           ;LC-meter.c: 86: bres -= 5000;
  9924  000064' 0E88               	movlw	low(01388h)
  9925  000066' 5E06               	subwf	((c:6)),c	;volatile
  9926  000068' 0E13               	movlw	high(01388h)
  9927  00006A' 5A07               	subwfb	((c:6+1)),c	;volatile
  9928                           	line	87
  9929                           ;LC-meter.c: 87: msecpart++;
  9930  00006C' 4A04               	infsnz	((c:4)),c	;volatile
  9931  00006E' 2A05               	incf	((c:4+1)),c	;volatile
  9932                           	line	88
  9933                           ;LC-meter.c: 88: msecs++;
  9934  000070' 0E01               	movlw	01h
  9935  000072' 2634               	addwf	((c:52)),c	;volatile
  9936  000074' 0E00               	movlw	0
  9937  000076' 2235               	addwfc	((c:52+1)),c	;volatile
  9938  000078' 0E00               	movlw	0
  9939  00007A' 2236               	addwfc	((c:52+2)),c	;volatile
  9940  00007C' 0E00               	movlw	0
  9941  00007E' 2237               	addwfc	((c:52+3)),c	;volatile
  9942                           	line	90
  9943                           ;LC-meter.c: 90: LATC3 = (((blink > 200)) == 0);
  9944  000080' 0EC9               	movlw	0C9h
  9945  000082' 5C38               	subwf	((c:56)),c,w
  9946  000084' 0E00               	movlw	0
  9947  000086' 5839               	subwfb	((c:56+1)),c,w
  9948  000088' A0D8               	btfss	status,0
  9949  00008A' EF00' F000'        	goto	i2u4041
  9950  00008E' EF00' F000'        	goto	i2u4040
  9951  000092'                    i2u4041:
  9952  000094' 868B               	bsf	c:(31835/8),(31835)&7	;volatile
  9953  000096' EF00' F000'        	goto	i2u4055
  9954  00009A'                    i2u4040:
  9955  00009C' 968B               	bcf	c:(31835/8),(31835)&7	;volatile
  9956  00009E'                    i2u4055:
  9957                           	line	91
  9958                           ;LC-meter.c: 91: if(blink >= 400)
  9959  0000A0' 0E90               	movlw	090h
  9960  0000A2' 5C38               	subwf	((c:56)),c,w
  9961  0000A4' 0E01               	movlw	01h
  9962  0000A6' 5839               	subwfb	((c:56+1)),c,w
  9963  0000A8' A0D8               	btfss	status,0
  9964  0000AA' EF00' F000'        	goto	i2u4061
  9965  0000AE' EF00' F000'        	goto	i2u4060
  9966  0000B2'                    i2u4061:
  9967  0000B4' EF00' F000'        	goto	i2l831
  9968  0000B8'                    i2u4060:
  9969                           	line	92
  9970                           ;LC-meter.c: 92: blink -= 400;
  9971  0000BA' 0E90               	movlw	low(0190h)
  9972  0000BC' 5E38               	subwf	((c:56)),c
  9973  0000BE' 0E01               	movlw	high(0190h)
  9974  0000C0' 5A39               	subwfb	((c:56+1)),c
  9975                           	
  9976  0000C2'                    i2l831:		; BSR set to: ?
  9977                           
  9978                           	line	93
  9979                           ;LC-meter.c: 93: ++blink;
  9980  0000C4' 4A38               	infsnz	((c:56)),c
  9981  0000C6' 2A39               	incf	((c:56+1)),c
  9982                           	line	96
  9983                           ;LC-meter.c: 96: if(msecpart >= 1000) {
  9984  0000C8' 0EE8               	movlw	0E8h
  9985  0000CA' 5C04               	subwf	((c:4)),c,w	;volatile
  9986  0000CC' 0E03               	movlw	03h
  9987  0000CE' 5805               	subwfb	((c:4+1)),c,w	;volatile
  9988  0000D0' A0D8               	btfss	status,0
  9989  0000D2' EF00' F000'        	goto	i2u4071
  9990  0000D6' EF00' F000'        	goto	i2u4070
  9991  0000DA'                    i2u4071:
  9992  0000DC' EF00' F000'        	goto	i2l830
  9993  0000E0'                    i2u4070:
  9994                           	line	98
  9995                           ;LC-meter.c: 98: seconds++;
  9996  0000E2' 0E01               	movlw	01h
  9997  0000E4' 2643               	addwf	((c:67)),c	;volatile
  9998  0000E6' 0E00               	movlw	0
  9999  0000E8' 2244               	addwfc	((c:67+1)),c	;volatile
 10000  0000EA' 0E00               	movlw	0
 10001  0000EC' 2245               	addwfc	((c:67+2)),c	;volatile
 10002  0000EE' 0E00               	movlw	0
 10003  0000F0' 2246               	addwfc	((c:67+3)),c	;volatile
 10004                           	line	99
 10005                           ;LC-meter.c: 99: msecpart -= 1000;
 10006  0000F2' 0EE8               	movlw	low(03E8h)
 10007  0000F4' 5E04               	subwf	((c:4)),c	;volatile
 10008  0000F6' 0E03               	movlw	high(03E8h)
 10009  0000F8' 5A05               	subwfb	((c:4+1)),c	;volatile
 10010                           	line	100
 10011                           	
 10012  0000FA'                    i2l832:		; BSR set to: ?
 10013                           
 10014                           	line	101
 10015                           	
 10016  0000FA'                    i2l830:		; BSR set to: ?
 10017                           
 10018                           	line	103
 10019                           ;LC-meter.c: 100: }
 10020                           ;LC-meter.c: 101: }
 10021                           ;LC-meter.c: 103: TMR2IF = 0;
 10022  0000FC' 929E               	bcf	c:(31985/8),(31985)&7	;volatile
 10023                           	line	104
 10024                           	
 10025  0000FE'                    i2l829:		; BSR set to: ?
 10026                           
 10027                           	line	106
 10028                           ;LC-meter.c: 104: }
 10029                           ;LC-meter.c: 106: if(RCIF) { rxfifo[rxiptr] = RC
                                 REG; ser_tmp = (rxiptr + 1) & ((unsigned char)16
                                  - 1); if(ser_tmp != rxoptr) rxiptr = ser_tmp; }
                                 ; if(TXIF && TXIE) { TXREG = txfifo[txoptr]; ++t
                                 xoptr; txoptr &= ((unsigned char)16 - 1); if(txo
                                 ptr == txiptr) { TXIE = 0; }
 10030  000100' AA9E               	btfss	c:(31989/8),(31989)&7	;volatile
 10031  000102' EF00' F000'        	goto	i2u4081
 10032  000106' EF00' F000'        	goto	i2u4080
 10033  00010A'                    i2u4081:
 10034  00010C' EF00' F000'        	goto	i2l833
 10035  000110'                    i2u4080:
 10036  000112' 0E24               	movlw	low((c:36))
 10037  000114' 243C               	addwf	((c:60)),c,w	;volatile
 10038  000116' 6EE9               	movwf	c:fsr0l
 10039  000118' 6AEA               	clrf	1+c:fsr0l
 10040  00011A' 0E00               	movlw	high((c:36))
 10041  00011C' 22EA               	addwfc	1+c:fsr0l
 10042  00011E' CFAE FFEF          	movff	(c:4014),indf0	;volatile
 10043                           
 10044  000122' 283C               	incf	((c:60)),c,w	;volatile
 10045  000124' 0B0F               	andlw	low(0Fh)
 10046  000126' 6E3E               	movwf	((c:62)),c
 10047  000128' 503E               	movf	((c:62)),c,w
 10048  00012A' 183D               	xorwf	((c:61)),c,w	;volatile
 10049  00012C' B4D8               	btfsc	status,2
 10050  00012E' EF00' F000'        	goto	i2u4091
 10051  000132' EF00' F000'        	goto	i2u4090
 10052  000136'                    i2u4091:
 10053  000138' EF00' F000'        	goto	i2l833
 10054  00013C'                    i2u4090:
 10055  00013E' C03E F03C          	movff	(c:62),(c:60)	;volatile
 10056                           	
 10057  000142'                    i2l834:		; BSR set to: ?
 10058                           
 10059                           	
 10060  000142'                    i2l833:		; BSR set to: ?
 10061                           
 10062  000144' A89E               	btfss	c:(31988/8),(31988)&7	;volatile
 10063  000146' EF00' F000'        	goto	i2u4101
 10064  00014A' EF00' F000'        	goto	i2u4100
 10065  00014E'                    i2u4101:
 10066  000150' EF00' F000'        	goto	i2l835
 10067  000154'                    i2u4100:
 10068  000156' A89D               	btfss	c:(31980/8),(31980)&7	;volatile
 10069  000158' EF00' F000'        	goto	i2u4111
 10070  00015C' EF00' F000'        	goto	i2u4110
 10071  000160'                    i2u4111:
 10072  000162' EF00' F000'        	goto	i2l835
 10073  000166'                    i2u4110:
 10074  000168' 0E14               	movlw	low((c:20))
 10075  00016A' 243B               	addwf	((c:59)),c,w	;volatile
 10076  00016C' 6EE9               	movwf	c:fsr0l
 10077  00016E' 6AEA               	clrf	1+c:fsr0l
 10078  000170' 0E00               	movlw	high((c:20))
 10079  000172' 22EA               	addwfc	1+c:fsr0l
 10080  000174' 50EF               	movf	indf0,w
 10081  000176' 6EAD               	movwf	((c:4013)),c	;volatile
 10082  000178' 2A3B               	incf	((c:59)),c	;volatile
 10083  00017A' 0E0F               	movlw	(0Fh)&0ffh
 10084  00017C' 163B               	andwf	((c:59)),c	;volatile
 10085  00017E' 503A               	movf	((c:58)),c,w	;volatile
 10086  000180' 623B               	cpfseq	((c:59)),c	;volatile
 10087  000182' EF00' F000'        	goto	i2u4121
 10088  000186' EF00' F000'        	goto	i2u4120
 10089  00018A'                    i2u4121:
 10090  00018C' EF00' F000'        	goto	i2l836
 10091  000190'                    i2u4120:
 10092  000192' 989D               	bcf	c:(31980/8),(31980)&7	;volatile
 10093                           	
 10094  000194'                    i2l836:		; BSR set to: ?
 10095                           
 10096  000196' 989E               	bcf	c:(31988/8),(31988)&7	;volatile
 10097                           	
 10098  000198'                    i2l835:		; BSR set to: ?
 10099                           
 10100                           	line	111
 10101                           ;LC-meter.c: 111: }
 10102  00019A'                    i2l828:
 10103                           			; BSR set to: ?
 10104                           
 10105  00019A' C00D' FFF5         	movff	??_isr+13,tablat+0
 10106  00019E' C00C' FFF8         	movff	??_isr+12,tblptru+0
 10107  0001A2' C00B' FFF7         	movff	??_isr+11,tblptrh+0
 10108  0001A6' C00A' FFF6         	movff	??_isr+10,tblptrl+0
 10109  0001AA' C009' FFF4         	movff	??_isr+9,prodh+0
 10110  0001AE' C008' FFF3         	movff	??_isr+8,prodl+0
 10111  0001B2' C007' FFDA         	movff	??_isr+7,fsr2h+0
 10112  0001B6' C006' FFD9         	movff	??_isr+6,fsr2l+0
 10113  0001BA' C005' FFE2         	movff	??_isr+5,fsr1h+0
 10114  0001BE' C004' FFE1         	movff	??_isr+4,fsr1l+0
 10115  0001C2' C003' FFEA         	movff	??_isr+3,fsr0h+0
 10116  0001C6' C002' FFE9         	movff	??_isr+2,fsr0l+0
 10117  0001CA' C001' FFFB         	movff	??_isr+1,pclat+1
 10118  0001CE' C000' FFFA         	movff	??_isr+0,pclat+0
 10119  0001D2' 0011               	retfie f
 10120  0001D4' FFFF               	dw	0FFFFh; errata NOP
 10121                           	opt stack 0
 10122                           GLOBAL __end_of_isr
 10123  0001D6'                    	__end_of_isr:
 10124                           	FNSIZE	_isr,14,0
 10125                           ; =============== function _isr ends ===========
                                 =
 10126                           
 10127                           	signat	_isr,90
 10128                           	FNCALL	_main,_timer2_init
 10129                           	FNCALL	_main,_delay10ms
 10130                           	FNCALL	_main,_ser_init
 10131                           	FNCALL	_main,_calibrate
 10132                           	FNCALL	_main,_ser_puts
 10133                           	FNCALL	_main,_measure_capacitance
 10134                           	FNCALL	_main,_measure_inductance
 10135                           	FNCALL	_main,_indicator
 10136                           	FNCALL	_calibrate,_measure_freq
 10137                           	FNCALL	_calibrate,___lwtofl
 10138                           	FNCALL	_calibrate,_delay10ms
 10139                           	FNCALL	_calibrate,_ser_puts
 10140                           	FNCALL	_measure_capacitance,_measure_freq
 10141                           	FNCALL	_measure_capacitance,___lwtofl
 10142                           	FNCALL	_measure_capacitance,_ser_puts
 10143                           	FNCALL	_measure_capacitance,_format_xint32
 10144                           	FNCALL	_measure_capacitance,_format_double
 10145                           	FNCALL	_measure_capacitance,_ser_putch
 10146                           	FNCALL	_measure_capacitance,___flge
 10147                           	FNCALL	_measure_capacitance,___flmul
 10148                           	FNCALL	_measure_capacitance,___flsub
 10149                           	FNCALL	_measure_capacitance,___fldiv
 10150                           	FNCALL	_measure_capacitance,___fltol
 10151                           	FNCALL	_measure_capacitance,_print_reading
 10152                           	FNCALL	_measure_capacitance,_print_unit
 10153                           	FNCALL	_measure_inductance,_measure_freq
 10154                           	FNCALL	_measure_inductance,___lwtofl
 10155                           	FNCALL	_measure_inductance,___flge
 10156                           	FNCALL	_measure_inductance,___flmul
 10157                           	FNCALL	_measure_inductance,___flsub
 10158                           	FNCALL	_measure_inductance,___fldiv
 10159                           	FNCALL	_measure_inductance,___fltol
 10160                           	FNCALL	_measure_inductance,_print_reading
 10161                           	FNCALL	_measure_inductance,_print_unit
 10162                           	FNCALL	_format_xint32,_format_number
 10163                           	FNCALL	_format_xint32,_output_putch
 10164                           	FNCALL	_format_xint32,_ser_putch
 10165                           	FNCALL	_format_xint32,_format_putchar
 10166                           	FNCALL	_format_double,_log10
 10167                           	FNCALL	_format_double,___fltol
 10168                           	FNCALL	_format_double,___awtofl
 10169                           	FNCALL	_format_double,_pow
 10170                           	FNCALL	_format_double,___fldiv
 10171                           	FNCALL	_format_double,_floor
 10172                           	FNCALL	_format_double,___flmul
 10173                           	FNCALL	_format_double,___asflsub
 10174                           	FNCALL	_format_double,___flge
 10175                           	FNCALL	_format_double,_output_putch
 10176                           	FNCALL	_format_double,_ser_putch
 10177                           	FNCALL	_format_double,_format_putchar
 10178                           	FNCALL	___lwtofl,___flpack
 10179                           	FNCALL	_delay10ms,___wmul
 10180                           	FNCALL	_ser_puts,_ser_putch
 10181                           	FNCALL	_log10,_log
 10182                           	FNCALL	_log10,___flmul
 10183                           	FNCALL	_format_number,___lwmod
 10184                           	FNCALL	_format_number,___lwdiv
 10185                           	FNCALL	_format_number,_output_putch
 10186                           	FNCALL	_format_number,_ser_putch
 10187                           	FNCALL	_format_number,_format_putchar
 10188                           	FNCALL	_pow,___flge
 10189                           	FNCALL	_pow,___fltol
 10190                           	FNCALL	_pow,___lltofl
 10191                           	FNCALL	_pow,___flneg
 10192                           	FNCALL	_pow,_log
 10193                           	FNCALL	_pow,___flmul
 10194                           	FNCALL	_pow,_exp
 10195                           	FNCALL	_exp,___flge
 10196                           	FNCALL	_exp,___flneg
 10197                           	FNCALL	_exp,___asflmul
 10198                           	FNCALL	_exp,_floor
 10199                           	FNCALL	_exp,___fltol
 10200                           	FNCALL	_exp,___awtofl
 10201                           	FNCALL	_exp,___asflsub
 10202                           	FNCALL	_exp,_eval_poly
 10203                           	FNCALL	_exp,_ldexp
 10204                           	FNCALL	_exp,___fldiv
 10205                           	FNCALL	___lltofl,___flpack
 10206                           	FNCALL	_output_putch,_ser_putch
 10207                           	FNCALL	_log,_frexp
 10208                           	FNCALL	_log,___flmul
 10209                           	FNCALL	_log,___fladd
 10210                           	FNCALL	_log,_eval_poly
 10211                           	FNCALL	_log,___awtofl
 10212                           	FNCALL	___asflsub,___flsub
 10213                           	FNCALL	_floor,_frexp
 10214                           	FNCALL	_floor,___fltol
 10215                           	FNCALL	_floor,___altofl
 10216                           	FNCALL	_floor,___flge
 10217                           	FNCALL	_floor,___fladd
 10218                           	FNCALL	___asflmul,___flmul
 10219                           	FNCALL	_eval_poly,___flmul
 10220                           	FNCALL	_eval_poly,___fladd
 10221                           	FNCALL	___fldiv,___flunpack
 10222                           	FNCALL	___fldiv,___flpack
 10223                           	FNCALL	___awtofl,___flpack
 10224                           	FNCALL	___awtofl,___flneg
 10225                           	FNCALL	___flsub,___fladd
 10226                           	FNCALL	___altofl,___flpack
 10227                           	FNCALL	___altofl,___flneg
 10228                           	FNCALL	___flmul,___flunpack
 10229                           	FNCALL	___flmul,___flpack
 10230                           	FNCALL	___fltol,___flunpack
 10231                           	FNCALL	___fladd,___flunpack
 10232                           	FNCALL	___fladd,___flpack
 10233                           	FNROOT	_main
 10234                           	FNCALL	intlevel2,_isr
 10235                           	global	intlevel2
 10236                           	FNROOT	intlevel2
 10237                           ;	FNARG	___flmul,_frexp
 10238                           ;	FNARG	___flmul,___awtofl
 10239                           ;	FNARG	___flmul,___flneg
 10240                           ;	FNARG	___flmul,___flsub
 10241                           ;	FNARG	___flmul,___fldiv
 10242                           ;	FNARG	_ldexp,_eval_poly
 10243                           ;	FNARG	_ldexp,___flpack
 10244                           ;	FNARG	_ldexp,___flunpack
 10245                           ;	FNARG	_ldexp,___fladd
 10246                           ;	FNARG	_ldexp,___flmul
 10247                           ;	FNARG	___fladd,___flmul
 10248                           ;	FNARG	___fladd,_frexp
 10249                           ;	FNARG	___fladd,___awtofl
 10250                           ;	FNARG	___fladd,___flneg
 10251                           	global	_putchar_ptr
 10252                           	global	_putchar_ptr
 10253                                   psect   text45,class=CODE,space=0,reloc=
                                 2
 10254  000000                     _putchar_ptr  equ     76
 10255                           
 10256                           	opt lm
 10257                           
 10258                           	DABS	1,76,2	;_putchar_ptr
 10259                           	global	_ser_brg
 10260                           	global	_ser_brg
 10261  000000                     _ser_brg  equ     78
 10262                           
 10263                           	DABS	1,78,1	;_ser_brg
 10264                                   psect   idata,class=CODE,space=0
 10265                           	file	"../../../lib/format.c"
 10266                           	line	10
 10267                           
 10268                           ;initializer for _putchar_ptr
 10269  000000' 0000'              	dw	(_format_putchar)&0ffffh
 10270                           	file	"../../../lib/ser.c"
 10271                           	line	49
 10272                           
 10273                           ;initializer for _ser_brg
 10274  000002' 1F                 	db	low(01Fh)
 10275                                   psect   smallconst,class=SMALLCONST,spac
                                 e=0,reloc=2
 10276  000000' 00                 	db	0	;reserve
 10277                           	global	F65
 10278                           	file	"/opt/hitech/picc-18/9.66/sources/exp.c"
 10279                           	line	17
 10280  000001'                    F65:
 10281  000001' 0000               	dw	(1.0000000000000000 & 0ffffh)
 10282  000003' 3F80               	dw	highword (1.0000000000000000)
 10283  000005' 7218               	dw	(0.69314718056000002 & 0ffffh)
 10284  000007' 3F31               	dw	highword (0.69314718056000002)
 10285  000009' FDF0               	dw	(0.24022650695000000 & 0ffffh)
 10286  00000B' 3E75               	dw	highword (0.24022650695000000)
 10287  00000D' 5847               	dw	(0.055504108944999998 & 0ffffh)
 10288  00000F' 3D63               	dw	highword (0.055504108944999998)
 10289  000011' 9558               	dw	(0.0096181261778999997 & 0ffffh)
 10290  000013' 3C1D               	dw	highword (0.0096181261778999997)
 10291  000015' C482               	dw	(0.0013333710529000000 & 0ffffh)
 10292  000017' 3AAE               	dw	highword (0.0013333710529000000)
 10293  000019' 78A8               	dw	(0.00015399104432000000 & 0ffffh)
 10294  00001B' 3921               	dw	highword (0.00015399104432000000)
 10295  00001D' 93EF               	dw	(1.5327675256999998e-05 & 0ffffh)
 10296  00001F' 3780               	dw	highword (1.5327675256999998e-05)
 10297  000021' 92A0               	dw	(1.2485143336000000e-06 & 0ffffh)
 10298  000023' 35A7               	dw	highword (1.2485143336000000e-06)
 10299  000025' 5646               	dw	(1.3908092220999999e-07 & 0ffffh)
 10300  000027' 3415               	dw	highword (1.3908092220999999e-07)
 10301                           	global	F64
 10302                           	file	"/opt/hitech/picc-18/9.66/sources/log.c"
 10303                           	line	9
 10304  000029'                    F64:
 10305  000029' 0000               	dw	(0.0000000000000000 & 0ffffh)
 10306  00002B' 0000               	dw	highword (0.0000000000000000)
 10307  00002D' FFC4               	dw	(0.99999642389999999 & 0ffffh)
 10308  00002F' 3F7F               	dw	highword (0.99999642389999999)
 10309  000031' EF80               	dw	(-0.49987412380000001 & 0ffffh)
 10310  000033' BEFF               	dw	highword (-0.49987412380000001)
 10311  000035' E190               	dw	(0.33179902579999998 & 0ffffh)
 10312  000037' 3EA9               	dw	highword (0.33179902579999998)
 10313  000039' 82EC               	dw	(-0.24073380840000000 & 0ffffh)
 10314  00003B' BE76               	dw	highword (-0.24073380840000000)
 10315  00003D' AD82               	dw	(0.16765407110000000 & 0ffffh)
 10316  00003F' 3E2B               	dw	highword (0.16765407110000000)
 10317  000041' 3C0E               	dw	(-0.095329389700000003 & 0ffffh)
 10318  000043' BDC3               	dw	highword (-0.095329389700000003)
 10319  000045' D187               	dw	(0.036088493700000002 & 0ffffh)
 10320  000047' 3D13               	dw	highword (0.036088493700000002)
 10321  000049' 7841               	dw	(-0.0064535442000000004 & 0ffffh)
 10322  00004B' BBD3               	dw	highword (-0.0064535442000000004)
 10323                           	global	F65
 10324                           	global	F64
 10325                           	global	_rxfifo
 10326                           	global	_rxfifo
 10327  000000                     _rxfifo  equ     36
 10328                           
 10329                           	DABS	1,36,16	;_rxfifo
 10330                           	global	_txfifo
 10331                           	global	_txfifo
 10332  000000                     _txfifo  equ     20
 10333                           
 10334                           	DABS	1,20,16	;_txfifo
 10335                           	global	_F1
 10336                           	global	_F1
 10337  000000                     _F1  equ     8
 10338                           
 10339                           	DABS	1,8,4	;_F1
 10340                           	global	_F2
 10341                           	global	_F2
 10342  000000                     _F2  equ     16
 10343                           
 10344                           	DABS	1,16,4	;_F2
 10345                           	global	_F3
 10346                           	global	_F3
 10347  000000                     _F3  equ     12
 10348                           
 10349                           	DABS	1,12,4	;_F3
 10350                           	global	_msecs
 10351                           	global	_msecs
 10352  000000                     _msecs  equ     52
 10353                           
 10354                           	DABS	1,52,4	;_msecs
 10355                           	global	_seconds
 10356                           	global	_seconds
 10357  000000                     _seconds  equ     67
 10358                           
 10359                           	DABS	1,67,4	;_seconds
 10360                           	global	_timer1of
 10361                           	global	_timer1of
 10362  000000                     _timer1of  equ     63
 10363                           
 10364                           	DABS	1,63,4	;_timer1of
 10365                           	global	F1925
 10366  000000                     F1925  equ     71
 10367                           
 10368                           	DABS	1,71,2	;F1925
 10369                           	global	_blink
 10370  000000                     _blink  equ     56
 10371                           
 10372                           	DABS	1,56,2	;_blink
 10373                           	global	_errno
 10374                           	global	_errno
 10375  000000                     _errno  equ     74
 10376                           
 10377                           	DABS	1,74,2	;_errno
 10378                           	global	F1924
 10379  000000                     F1924  equ     73
 10380                           
 10381                           	DABS	1,73,1	;F1924
 10382                           	global	_rxiptr
 10383                           	global	_rxiptr
 10384  000000                     _rxiptr  equ     60
 10385                           
 10386                           	DABS	1,60,1	;_rxiptr
 10387                           	global	_rxoptr
 10388                           	global	_rxoptr
 10389  000000                     _rxoptr  equ     61
 10390                           
 10391                           	DABS	1,61,1	;_rxoptr
 10392                           	global	_ser_tmp
 10393                           	global	_ser_tmp
 10394  000000                     _ser_tmp  equ     62
 10395                           
 10396                           	DABS	1,62,1	;_ser_tmp
 10397                           	global	_txiptr
 10398                           	global	_txiptr
 10399  000000                     _txiptr  equ     58
 10400                           
 10401                           	DABS	1,58,1	;_txiptr
 10402                           	global	_txoptr
 10403                           	global	_txoptr
 10404  000000                     _txoptr  equ     59
 10405                           
 10406                           	DABS	1,59,1	;_txoptr
 10407                           	global	_CCal
 10408                           	global	_CCal
 10409  000000                     _CCal  equ     0
 10410                           
 10411                           	DABS	1,0,4	;_CCal
 10412                           	global	_TMR0
 10413  000000                     _TMR0	equ	0xFD6
 10414                           	global	_bres
 10415                           	global	_bres
 10416  000000                     _bres  equ     6
 10417                           
 10418                           	DABS	1,6,2	;_bres
 10419                           	global	_msecpart
 10420                           	global	_msecpart
 10421  000000                     _msecpart  equ     4
 10422                           
 10423                           	DABS	1,4,2	;_msecpart
 10424                           	global	_RCREG
 10425  000000                     _RCREG	equ	0xFAE
 10426                           	global	_SPBRG
 10427  000000                     _SPBRG	equ	0xFAF
 10428                           	global	_TMR2
 10429  000000                     _TMR2	equ	0xFCC
 10430                           	global	_TRISA
 10431  000000                     _TRISA	equ	0xF92
 10432                           	global	_TRISC
 10433  000000                     _TRISC	equ	0xF94
 10434                           	global	_TXREG
 10435  000000                     _TXREG	equ	0xFAD
 10436                           	global	_BRGH
 10437  000000                     _BRGH	equ	0x7D62
 10438                           	global	_CREN
 10439  000000                     _CREN	equ	0x7D5C
 10440                           	global	_GIE
 10441  000000                     _GIE	equ	0x7F97
 10442                           	global	_LATC3
 10443  000000                     _LATC3	equ	0x7C5B
 10444                           	global	_LATC4
 10445  000000                     _LATC4	equ	0x7C5C
 10446                           	global	_LATC5
 10447  000000                     _LATC5	equ	0x7C5D
 10448                           	global	_LATC7
 10449  000000                     _LATC7	equ	0x7C5F
 10450                           	global	_OERR
 10451  000000                     _OERR	equ	0x7D59
 10452                           	global	_PEIE
 10453  000000                     _PEIE	equ	0x7F96
 10454                           	global	_RBPU
 10455  000000                     _RBPU	equ	0x7F8F
 10456                           	global	_RCIF
 10457  000000                     _RCIF	equ	0x7CF5
 10458                           	global	_RX9
 10459  000000                     _RX9	equ	0x7D5E
 10460                           	global	_SPEN
 10461  000000                     _SPEN	equ	0x7D5F
 10462                           	global	_SSPEN
 10463  000000                     _SSPEN	equ	0x7E35
 10464                           	global	_SYNC
 10465  000000                     _SYNC	equ	0x7D64
 10466                           	global	_T0CS
 10467  000000                     _T0CS	equ	0x7EAD
 10468                           	global	_T0SE
 10469  000000                     _T0SE	equ	0x7EAC
 10470                           	global	_T2CKPS0
 10471  000000                     _T2CKPS0	equ	0x7E50
 10472                           	global	_T2CKPS1
 10473  000000                     _T2CKPS1	equ	0x7E51
 10474                           	global	_TMR0IF
 10475  000000                     _TMR0IF	equ	0x7F92
 10476                           	global	_TMR2IE
 10477  000000                     _TMR2IE	equ	0x7CE9
 10478                           	global	_TMR2IF
 10479  000000                     _TMR2IF	equ	0x7CF1
 10480                           	global	_TMR2ON
 10481  000000                     _TMR2ON	equ	0x7E52
 10482                           	global	_TOUTPS0
 10483  000000                     _TOUTPS0	equ	0x7E53
 10484                           	global	_TOUTPS1
 10485  000000                     _TOUTPS1	equ	0x7E54
 10486                           	global	_TOUTPS2
 10487  000000                     _TOUTPS2	equ	0x7E55
 10488                           	global	_TRISC0
 10489  000000                     _TRISC0	equ	0x7CA0
 10490                           	global	_TRISC1
 10491  000000                     _TRISC1	equ	0x7CA1
 10492                           	global	_TRISC2
 10493  000000                     _TRISC2	equ	0x7CA2
 10494                           	global	_TRISC3
 10495  000000                     _TRISC3	equ	0x7CA3
 10496                           	global	_TRISC4
 10497  000000                     _TRISC4	equ	0x7CA4
 10498                           	global	_TRISC5
 10499  000000                     _TRISC5	equ	0x7CA5
 10500                           	global	_TRISC6
 10501  000000                     _TRISC6	equ	0x7CA6
 10502                           	global	_TX9
 10503  000000                     _TX9	equ	0x7D66
 10504                           	global	_TXEN
 10505  000000                     _TXEN	equ	0x7D65
 10506                           	global	_TXIE
 10507  000000                     _TXIE	equ	0x7CEC
 10508                           	global	_TXIF
 10509  000000                     _TXIF	equ	0x7CF4
 10510                           	
 10511  00004D'                    STR_8:		; BSR set to: ?
 10512                           
 10513  00004D' 0D                 	db	13
 10514  00004E' 0A                 	db	10
 10515  00004F' 43                 	db	67	;'C'
 10516  000050' 43                 	db	67	;'C'
 10517  000051' 61                 	db	97	;'a'
 10518  000052' 6C                 	db	108	;'l'
 10519  000053' 3D                 	db	61	;'='
 10520  000054' 00                 	db	0
 10521                           	
 10522  000055'                    STR_5:		; BSR set to: ?
 10523                           
 10524  000055' 0D                 	db	13
 10525  000056' 0A                 	db	10
 10526  000057' 46                 	db	70	;'F'
 10527  000058' 31                 	db	49	;'1'
 10528  000059' 3D                 	db	61	;'='
 10529  00005A' 00                 	db	0
 10530                           	
 10531  00005B'                    STR_7:		; BSR set to: ?
 10532                           
 10533  00005B' 0D                 	db	13
 10534  00005C' 0A                 	db	10
 10535  00005D' 46                 	db	70	;'F'
 10536  00005E' 33                 	db	51	;'3'
 10537  00005F' 3D                 	db	61	;'='
 10538  000060' 00                 	db	0
 10539                           	
 10540  000061'                    STR_6:		; BSR set to: ?
 10541                           
 10542  000061' 0D                 	db	13
 10543  000062' 0A                 	db	10
 10544  000063' 46                 	db	70	;'F'
 10545  000064' 32                 	db	50	;'2'
 10546  000065' 3D                 	db	61	;'='
 10547  000066' 00                 	db	0
 10548                           	
 10549  000067'                    STR_1:		; BSR set to: ?
 10550                           
 10551  000067' 2E                 	db	46
 10552  000068' 2E                 	db	46
 10553  000069' 2E                 	db	46
 10554  00006A' 0D                 	db	13
 10555  00006B' 0A                 	db	10
 10556  00006C' 00                 	db	0
 10557                           	
 10558  00006D'                    STR_10:		; BSR set to: ?
 10559                           
 10560  00006D' 43                 	db	67	;'C'
 10561  00006E' 69                 	db	105	;'i'
 10562  00006F' 6E                 	db	110	;'n'
 10563  000070' 3D                 	db	61	;'='
 10564  000071' 00                 	db	0
 10565                           	
 10566  000072'                    STR_4:		; BSR set to: ?
 10567                           
 10568  000072' 76                 	db	118	;'v'
 10569  000073' 61                 	db	97	;'a'
 10570  000074' 72                 	db	114	;'r'
 10571  000075' 3D                 	db	61	;'='
 10572  000076' 00                 	db	0
 10573  000000                     STR_3	equ	STR_1+3
 10574  000000                     STR_2	equ	STR_1+3
 10575  000000                     STR_11	equ	STR_1+3
 10576  000000                     STR_9	equ	STR_1+3
 10577  000077' 00                 	db 0	; dummy byte at the end
 10578                           	psect	intsave_regs,class=BIGRAM,space=1
 10579                           	file ""
 10580                           	line	0
 10581                                   psect   text45
 10582  000000'                    fp__output_putch:
 10583                           	file ""
 10584                           	line	0
 10585                                   psect   text45
 10586  000000'                    fp__format_putchar:
 10587                           	file ""
 10588                           	line	0
 10589                                   psect   text45
 10590  000000'                    fp__ser_putch:
 10591                           	PSECT	param1,class=BANK1,space=1
 10592                           	GLOBAL	__Lparam1
 10593                           	FNCONF	param1,??,?
 10594                           	GLOBAL	__Labsbss0
 10595  000000                     __Labsbss0	EQU	0
 10596                           	GLOBAL	__Habsbss0
 10597  000000                     __Habsbss0	EQU	76
 10598                           	GLOBAL	__Ldata0
 10599  000000                     __Ldata0	EQU	76
 10600                           	GLOBAL	__Hdata0
 10601  000000                     __Hdata0	EQU	79
 10602                           GLOBAL	__Lparam, __Hparam
 10603                           GLOBAL	__Lparam1, __Hparam1
 10604  000000                     __Lparam	EQU	__Lparam1
 10605  000000                     __Hparam	EQU	__Hparam1
 10606  000102' FFFF               


HI-TECH Software PICC-18 Macro Assembler V9.66 build 8870 
Symbol Table                                           Thu Aug 29 18:48:41 2019

                                                              ___altofl@exp 000000  
                                                             ___altofl@sign 000001  
                                                              ___fldiv@exp1 000002  
                                                              ___fldiv@exp2 000000  
                                                              ___asflmul@mp 000000  
                                                                        F64 000029  
                                                                        F65 000001  
                                                              ___asflsub@f2 000002  
                                                                        _F1 000008  
                                                                        _F2 000010  
                                                                        _F3 00000C  
                                                       ___wmul@multiplicand 000002  
                                                             ___fldiv@sign1 000001  
                                                             ___fldiv@sign2 000003  
                                                             ___asflsub@f1p 000000  
                                                              ___flpack@arg 000000  
                                                              ___flpack@exp 000002  
                                                               _putchar_ptr 00004C  
                                                                       l330 000006  
                                                                       l331 000052  
                                                                       l163 000002  
                                                                       l324 000062  
                                                                       l164 000002  
                                                                       l325 00000C  
                                                                       l165 000002  
                                                                       l326 000006  
                                                                       l327 000044  
                                                                       l328 000052  
                                                                       l329 00002A  
                                                                       l345 00002C  
                                                                       l651 000006  
                                                                       l900 000040  
                                                                       l652 0001FC  
                                                                       l660 000194  
                                                                       l901 0000CA  
                                                                       l661 0001FA  
                                                                       l653 00004E  
                                                                       l902 000194  
                                                                       l670 0001CE  
                                                                       l903 00014A  
                                                                       l655 00011C  
                                                                       l671 000036  
                                                                       l663 0000BA  
                                                                       l904 00012A  
                                                                       l656 00004E  
                                                                       l672 000210  
                                                                       l657 000144  
                                                                       l673 0001C2  
                                                                       l841 000112  
                                                                       l906 000194  
                                                                       l658 000120  
                                                                       l850 0000FE  
                                                                       l498 0000CC  
                                                                       l842 000118  
                                                                       l827 00000A  
                                                                       l659 000174  
                                                                       l851 0000A0  
                                                                       l860 00052C  
                                                                       l852 0000BE  
                                                                       l845 000150  
                                                                       l669 000210  
                                                                       l861 0005A4  
                                                                       l853 00059C  
                                                                       l846 000052  
                                                                       l862 000070  
                                                                       l854 000202  
                                                                       l838 0000E4  
                                                                       l871 0000C8  
                                                                       l847 00008A  
                                                                       l863 000522  
                                                                       l855 00051A  
                                                                       l880 000092  
                                                                       l872 000068  
                                                                       l864 0004CC  
                                                                       l856 0004C4  
                                                                       l881 000072  
                                                                       l873 0000AE  
                                                                       l865 000476  
                                                                       l857 00046E  
                                                                       l882 0000C8  
                                                                       l890 00007A  
                                                                       l866 0004C6  
                                                                       l858 0004BE  
                                                                       l955 000122  
                                                                       l883 00017A  
                                                                       l891 0000DA  
                                                                       l867 00051C  
                                                                       l859 000514  
                                                                       l956 00003C  
                                                                       l884 0001D6  
                                                                       l892 0001CC  
                                                                       l868 000534  
                                                                       l957 000094  
                                                                       l885 00003E  
                                                                       l893 000198  
                                                                       l869 0000C8  
                                                                       l958 00010C  
                                                                       l990 00010C  
                                                                       l886 000086  
                                                                       l894 00026A  
                                                                       l991 00003A  
                                                                       l879 000190  
                                                                       l887 000058  
                                                                       l992 000094  
                                                                       l888 000280  
                                                                       l897 0000E6  
                                                                       l993 0000F6  
                                                                       l889 00009A  
                                                                       l898 000050  
                                                                       _GIE 007F97  
                                                                       l899 0001A8  
                                                                       _RX9 007D5E  
                                                                       _TX9 007D66  
                                                                       _exp 000000  
                                                                       _log 000000  
                                                                       _isr 000000  
                                                                       _pow 000000  
                                                                       tosl 000FFD  
                                                                       wreg 000FE8  
                                                                      F1924 000049  
                                                                      F1925 000047  
                                                              ___flmul@exp1 000001  
                                                              ___flmul@cntr 000002  
                                                              fp__ser_putch 000000  
                                                              ___fltol@exp1 000001  
                                                                      l1010 00007C  
                                                                      l1003 0000EE  
                                                                      l1011 0000E6  
                                                                      l1004 000072  
                                                                      l1012 000120  
                                                                      l1020 000006  
                                                                      l1100 000166  
                                                                      l1005 0000C2  
                                                                      l1013 0000EA  
                                                                      l1021 000060  
                                                                      l1006 0000A6  
                                                                      l1014 00016E  
                                                                      l1030 00016C  
                                                                      l1022 0003CA  
                                                                      l1015 00018E  
                                                                      l1007 000240  
                                                                      l1031 0001A4  
                                                                      l1023 0001AA  
                                                                      l1016 000172  
                                                                      l1008 000076  
                                                                      l1040 00025A  
                                                                      l1032 000292  
                                                                      l1017 0001A6  
                                                                      l1009 000098  
                                                                      l1033 000292  
                                                                      l1041 000292  
                                                                      l1025 0001A4  
                                                                      l1018 0001D6  
                                                                      l1042 0002E0  
                                                                      l1043 00032E  
                                                                      l1035 000292  
                                                                      l1027 000166  
                                                                      l1019 00042E  
                                                                      l1051 0001A8  
                                                                      l1044 0003CA  
                                                                      l1028 000122  
                                                                      l1060 0000DA  
                                                                      l1052 0000FA  
                                                                      l1220 00003E  
                                                                      l1204 00008C  
                                                                      l1045 000418  
                                                                      l1037 000254  
                                                                      l1029 000188  
                                                                      l1061 000122  
                                                                      l1053 000188  
                                                                      l1301 00014A  
                                                                      l1221 00006A  
                                                                      l1205 00003C  
                                                                      l1038 000210  
                                                                      l1054 0001E0  
                                                                      l1302 00011A  
                                                                      l1230 00005C  
                                                                      l1310 000318  
                                                                      l1039 000276  
                                                                      l1063 0001E2  
                                                                      l1047 0001F6  
                                                                      l1303 000066  
                                                                      l1223 0000D8  
                                                                      l1311 0002D4  
                                                                      l1064 000166  
                                                                      l1056 000230  
                                                                      l1048 000074  
                                                                      l1304 000136  
                                                                      l1232 0000B8  
                                                                      l1224 00006A  
                                                                      l1065 0001AE  
                                                                      l1057 0000BA  
                                                                      l1049 0000CE  
                                                                      l1233 00005C  
                                                                      l1217 0000E6  
                                                                      l1225 0000C0  
                                                                      l1305 00032E  
                                                                      l1241 000074  
                                                                      l1090 0000BC  
                                                                      l1066 00021A  
                                                                      l1226 0000C6  
                                                                      l1234 0000A0  
                                                                      l1218 0000D8  
                                                                      l1306 000040  
                                                                      l1242 000010  
                                                                      l1251 0000CA  
                                                                      l1059 000156  
                                                                      l1067 00005E  
                                                                      l1227 0000B8  
                                                                      l1219 000052  
                                                                      l1307 0000A8  
                                                                      l1243 000040  
                                                                      l1235 000090  
                                                                      l1252 000030  
                                                                      l1228 000044  
                                                                      l1308 000110  
                                                                      l1236 00003A  
                                                                      l1093 0000B8  
                                                                      l1253 000060  
                                                                      l1229 000030  
                                                                      l1309 000170  
                                                                      l1246 000052  
                                                                      l1094 000098  
                                                                      l1247 00003C  
                                                                      l1095 00012C  
                                                                      l1087 000054  
                                                                      l1239 000080  
                                                                      l1096 0000F4  
                                                                      l1088 00005E  
                                                                      l1097 000116  
                                                                      l1089 00017C  
                                                                      l1098 0000FA  
                                                                      l1099 00012C  
                                                              ___fltol@lval 000002  
                                                                      ?_exp 000000* 
                                                                      ?_log 000000* 
                                                                      ?_isr 000000* 
                                                                      ?_pow 000000* 
                                                                      STR_1 000067  
                                                                      STR_3 000003  
                                                                      STR_4 000072  
                                                                      STR_5 000055  
                                                                      STR_6 000061  
                                                                      STR_7 00005B  
                                                                      STR_8 00004D  
                                                                      STR_9 000003  
                                                                      _BRGH 007D62  
                                                                      _CREN 007D5C  
                                                                      _T0CS 007EAD  
                                                                      u3000 00005E  
                                                                      u3001 000058  
                                                                      u3010 0003A2  
                                                                      _T0SE 007EAC  
                                                                      u3011 00039C  
                                                                      u3020 0003E2  
                                                                      u3021 0003DC  
                                                                      u3110 00004C  
                                                                      u3030 000422  
                                                                      u3111 000046  
                                                                      u1335 00002A  
                                                                      u3031 00041C  
                                                                      u4000 000052  
                                                                      u3200 000170  
                                                                      u3040 000050  
                                                                      u3120 00008A  
                                                                      u1336 000034  
                                                                      u4001 00004C  
                                                                      u3201 00016A  
                                                                      u3041 00004A  
                                                                      u3121 000084  
                                                                      u1345 000048  
                                                                      _CCal 000000  
                                                                      u4010 00009E  
                                                                      u3210 000240  
                                                                      u3130 0000DE  
                                                                      u1346 00004E  
                                                                      u4011 000098  
                                                                      u3211 00023A  
                                                                      u3131 0000D8  
                                                                      u1355 000068  
                                                                      u3300 000016  
                                                                      u3220 000036  
                                                                      u3140 0000FE  
                                                                      u3060 000192  
                                                                      u3108 000048  
                                                                      u1380 0000C6  
                                                                      u1356 00006E  
                                                                      u3301 000010  
                                                                      u3205 000160  
                                                                      u3221 000030  
                                                                      u3141 0000F8  
                                                                      u3061 00018C  
                                                                      u3109 000060  
                                                                      u1381 0000BE  
                                                                      u1365 000082  
                                                                      u3310 00005E  
                                                                      u3230 0000A4  
                                                                      u3150 00001A  
                                                                      u1366 000088  
                                                                      u3311 000058  
                                                                      u3231 00009E  
                                                                      u3135 0000CE  
                                                                      u3151 000014  
                                                                      u1375 0000A2  
                                                                      u3400 000028  
                                                                      u3320 000020  
                                                                      u3160 000030  
                                                                      u3240 00011A  
                                                                      u3080 00020E  
                                                                      u1376 0000A8  
                                                                      u3401 000022  
                                                                      u3321 00001A  
                                                                      u3161 00002A  
                                                                      u3241 000114  
                                                                      u3081 000208  
                                                                      u3410 000068  
                                                                      u3330 000080  
                                                                      u3170 000070  
                                                                      u4130 00009C  
                                                                      u3058 000160  
                                                                      u3411 000062  
                                                                      u3331 00007A  
                                                                      u3171 00006A  
                                                                      u4131 000096  
                                                                      u3059 000178  
                                                                      u1395 0000CA  
                                                                      u3500 00001A  
                                                                      u3420 0000A0  
                                                                      u3340 0000E8  
                                                                      u3180 0000BA  
                                                                      u3260 000172  
                                                                      u4140 0000C6  
                                                                      u3501 000014  
                                                                      u3421 00009A  
                                                                      u3341 0000E2  
                                                                      u3181 0000B4  
                                                                      u3261 00016C  
                                                                      u4141 0000C0  
                                                                      u3510 000072  
                                                                      u3430 00001A  
                                                                      u3350 000128  
                                                                      u3190 0000F0  
                                                                      u3270 00018E  
                                                                      u4150 000026  
                                                                      u3078 0001AA  
                                                                      u3511 00006C  
                                                                      u3431 000014  
                                                                      u3351 000120  
                                                                      u3191 0000EA  
                                                                      u3271 000188  
                                                                      u4151 000020  
                                                                      u3079 0001C2  
                                                                      u3520 0000D0  
                                                                      u3600 0001D8  
                                                                      u3440 00005A  
                                                                      u3360 00014A  
                                                                      u4160 000072  
                                                                      u3521 0000CA  
                                                                      u3601 0001D2  
                                                                      u3441 000054  
                                                                      u3361 000144  
                                                                      u4161 00006C  
                                                                      u3530 000020  
                                                                      u3610 000042  
                                                                      u3450 000086  
                                                                      u3370 000286  
                                                                      u3290 0001FA  
                                                                      u3258 00012C  
                                                                      u3098 000018  
                                                                      u3531 00001A  
                                                                      u3611 00003C  
                                                                      u3451 000080  
                                                                      u3371 000280  
                                                                      u3291 0001F4  
                                                                      u3259 000144  
                                                                      u3099 000030  
                                                                      u3700 00017C  
                                                                      u3540 0000A2  
                                                                      u3620 000134  
                                                                      u3460 00003C  
                                                                      u3380 0002B4  
                                                                      u3356 00012C  
                                                                      u3701 000176  
                                                                      u3541 00009C  
                                                                      u3621 00012E  
                                                                      u3461 000036  
                                                                      u3381 0002AE  
                                                                      u3710 000212  
                                                                      u3630 00001C  
                                                                      u3550 0000EC  
                                                                      u3470 000052  
                                                                      u3390 00001C  
                                                                      u3711 00020C  
                                                                      u3631 000016  
                                                                      u3551 0000E6  
                                                                      u3471 00004C  
                                                                      u3391 000016  
                                                                      u3800 00004A  
                                                                      u3720 000016  
                                                                      u3640 000062  
                                                                      u3560 00010A  
                                                                      u3480 0000B2  
                                                                      u3288 0001C0  
                                                                      u3801 000044  
                                                                      u3721 000010  
                                                                      u3641 00005C  
                                                                      u3561 000104  
                                                                      u3481 0000AC  
                                                                      u3289 0001D8  
                                                                      u3810 0000A6  
                                                                      u3730 000046  
                                                                      u3650 0000E6  
                                                                      u3570 00005E  
                                                                      u3490 000136  
                                                                      _PEIE 007F96  
                                                                      u3811 0000A0  
                                                                      u3731 000040  
                                                                      u3651 0000E0  
                                                                      u3571 000058  
                                                                      u3491 000130  
                                                                      u4187 00000E  
                                                                      u3900 0002AA  
                                                                      u3820 0000D2  
                                                                      u3740 00005C  
                                                                      u3660 000020  
                                                                      u3580 0000B8  
                                                                      u3901 0002A4  
                                                                      u3821 0000CC  
                                                                      u3741 000056  
                                                                      u3661 00001A  
                                                                      u3581 0000B2  
                                                                      u4197 00005C  
                                                                      u3910 0002F8  
                                                                      u3830 0000FA  
                                                                      u3750 000078  
                                                                      u3670 00008E  
                                                                      u3590 000150  
                                                                      u2950 0001F0  
                                                                      u3911 0002F2  
                                                                      u3831 0000F4  
                                                                      u3751 000072  
                                                                      u3671 000088  
                                                                      u3591 00014A  
                                                                      u2951 0001EA  
                                                                      u3920 000384  
                                                                      u3840 00015A  
                                                                      u3760 0000D4  
                                                                      u3680 0000A4  
                                                                      u2960 00039A  
                                                                      u3921 00037E  
                                                                      u3841 000154  
                                                                      u3761 0000CE  
                                                                      u3681 00009E  
                                                                      u2961 000394  
                                                                      u3930 0003FC  
                                                                      u3850 0001A4  
                                                                      u3770 00012C  
                                                                      u3690 0000F0  
                                                                      u2970 0003DA  
                                                                      u3931 0003F6  
                                                                      u3851 00019E  
                                                                      u3771 000126  
                                                                      u3691 0000EA  
                                                                      u2971 0003D4  
                                                                      _RCIF 007CF5  
                                                                      u3940 000038  
                                                                      u3860 0001C8  
                                                                      u3780 000144  
                                                                      u2980 00041A  
                                                                      u3941 000032  
                                                                      u3861 0001C2  
                                                                      u3781 00013E  
                                                                      u2981 000414  
                                                                      u3950 000054  
                                                                      u3870 0001F0  
                                                                      u3790 000020  
                                                                      u2990 000108  
                                                                      u3951 00004E  
                                                                      u3871 0001EA  
                                                                      u3791 00001A  
                                                                      u2991 000102  
                                                                      u3960 0000E4  
                                                                      u3880 000248  
                                                                      u3961 0000DE  
                                                                      u3881 000242  
                                                                      u3970 00016C  
                                                                      u3890 000292  
                                                                      u3971 000166  
                                                                      u3891 00028C  
                                                                      u3980 0001A4  
                                                                      u3981 00019E  
                                                                      u3990 0001BA  
                                                                      u3991 0001B4  
                                                                      _OERR 007D59  
                                                                      _RBPU 007F8F  
                                                                      _TMR0 000FD6  
                                                                      _TMR2 000FCC  
                                                                      _SPEN 007D5F  
                                                                      _TXIE 007CEC  
                                                                      _TXIF 007CF4  
                                                                      _TXEN 007D65  
                                                                      _SYNC 007D64  
                                                                      _bres 000006  
                                                                      _main 000000  
                                                                      fsr0h 000FEA  
                                                                      fsr1h 000FE2  
                                                                      indf0 000FEF  
                                                                      fsr0l 000FE9  
                                                                      fsr2h 000FDA  
                                                                      fsr1l 000FE1  
                                                                      fsr2l 000FD9  
                                                                      exp@x 000000  
                                                                      log@x 000000  
                                                                      pclat 000FFA  
                                                                      pow@x 000000  
                                                                      pow@y 000004  
                                                                      prodh 000FF4  
                                                                      prodl 000FF3  
                                                __end_of_measure_inductance 0005A8  
                                                                      start 000000* 
                                                             ___flmul@sign1 000000  
                                                                     ??_exp 000000* 
                                                                     ??_log 000000* 
                                                                     ??_isr 000000* 
                                                                     ??_pow 000000* 
                                                            ___flpack@l_arg 000000  
                                                             ___fltol@sign1 000000  
                                                           __end_of___fladd 000434  
                                                                     ?_main 000000* 
                                                           __end_of___fldiv 0001FC  
                                                           __end_of___flneg 000058  
                                                                     STR_10 00006D  
                                                                     STR_11 000003  
                                                           __end_of___flmul 000236  
                                                           __end_of___flsub 00005A  
                                                           __end_of___fltol 000182  
                                                                     _LATC3 007C5B  
                                                                     _LATC4 007C5C  
                                                                     _LATC5 007C5D  
                                                                     _LATC7 007C5F  
                                                           __end_of___lwdiv 0000EC  
                                                           __end_of___lwmod 0000CC  
                                                                     i2l830 0000FA  
                                                                     i2l831 0000C2  
                                                                     i2l832 0000FA  
                                                                     i2l833 000142  
                                                                     i2l834 000142  
                                                                     i2l835 000198  
                                                                     i2l828 00019A  
                                                                     i2l836 000194  
                                                                     i2l829 0000FE  
                                                                     _RCREG 000FAE  
                                                                     _SPBRG 000FAF  
                                                                     _TRISA 000F92  
                                                                     _TRISC 000F94  
                                                                     _SSPEN 007E35  
                                                                     _TXREG 000FAD  
                                                              ___lltofl@exp 000000  
                                                                     _log10 000000  
                                                                     _blink 000038  
                                                                     _floor 000000  
                                                                     _ldexp 000000  
                                                                     _frexp 000000  
                                                              _output_putch 000000  
                                                                     _errno 00004A  
                                                                     _msecs 000034  
                                                                     pclath 000FFA  
                                                                     tablat 000FF5  
                                                                     pow@yi 000001  
                                                           format_number@di 000003  
                                                                     status 000FD8  
                                                           ??_print_reading 000000* 
                                                        _format_number$1343 000000  
                                                               ldexp@newexp 000004  
                                                           format_putchar@c 000000  
                                                              __end_of_main 00016E  
                                                          format_double@num 000000  
                                                             ?_measure_freq 000000* 
                                                                    ??_main 000000* 
                                                       format_double@weight 00000C  
                                                             __activetblptr 000002  
                                                                    ?_log10 000000* 
                                                                    ?_floor 000000* 
                                                                    ?_ldexp 000000* 
                                                                    ?_frexp 000000* 
                                                          __end_of___altofl 000128  
                                                          __end_of___flpack 000246  
                                                          __end_of___awtofl 000112  
                                                          __end_of___lltofl 000092  
                                                          __end_of___lwtofl 000096  
                                                                    i2u4100 000154  
                                                                    i2u4020 000044  
                                                                    i2u4101 00014E  
                                                                    i2u4021 00003E  
                                                                    i2u4110 000166  
                                                                    i2u4030 000062  
                                                                    i2u4111 000160  
                                                                    i2u4031 00005C  
                                                                    i2u4120 000190  
                                                                    i2u4040 00009A  
                                                                    i2u4121 00018A  
                                                                    i2u4041 000092  
                                                                    i2u4060 0000B8  
                                                                    i2u4061 0000B2  
                                                                    i2u4070 0000E0  
                                                                    i2u4071 0000DA  
                                                                    i2u4055 00009E  
                                                                    i2u4080 000110  
                                                                    i2u4081 00010A  
                                                                    i2u4090 00013C  
                                                                    i2u4091 000136  
                                                                    _TMR0IF 007F92  
                                                                    _TMR2IE 007CE9  
                                                                    _TMR2IF 007CF1  
                                                                    _TMR2ON 007E52  
                                                                    _TRISC0 007CA0  
                                                                    _TRISC1 007CA1  
                                                                    _TRISC2 007CA2  
                                                                    _TRISC3 007CA3  
                                                                    _TRISC4 007CA4  
                                                                    _TRISC5 007CA5  
                                                                    _TRISC6 007CA6  
                                                                    __Ldata 00004C  
                                                                    ___flge 000000  
                                                                 ??___fladd 000000* 
                                                                    ___wmul 000000  
                                                                 ??___fldiv 000000* 
                                                            ___flunpack@arg 000000  
                                                                 ??___flneg 000000* 
                                                                 ??___flmul 000000* 
                                                            ___flunpack@exp 000002  
                                                                 ??___flsub 000000* 
                                                                 ??___fltol 000000* 
                                                            ??_measure_freq 000000* 
                                                                 ??___lwdiv 000000* 
                                                              ?_timer2_init 000000* 
                                                                 ??___lwmod 000000* 
                                                                    log10@x 000000  
                                                                    _rxfifo 000024  
                                                                    _txfifo 000014  
                                                                    _rxiptr 00003C  
                                                                    _rxoptr 00003D  
                                                                    floor@i 000002  
                                                                    _txiptr 00003A  
                                                                    floor@x 000000  
                                                                    exp@exp 000005  
                                                                    log@exp 000000  
                                                                    _txoptr 00003B  
                                                          __end_of_ser_init 000030  
                                                          __end_of_ser_puts 000056  
                                                        timer2_init@ps_mode 000000  
                                                              __mediumconst 000000  
                                                                    tblptrh 000FF7  
                                                                    tblptrl 000FF6  
                                                                    tblptru 000FF8  
                                                          format_number@buf 000005  
                                                          format_number@pad 000003  
                                                   _measure_inductance$1300 000000  
                                                   _measure_inductance$1301 000004  
                                                   _measure_inductance$1302 000008  
                                                   _measure_inductance$1303 00000C  
                                                                ___fladd@f1 000000  
                                                                ___fladd@f2 000004  
                                                                ___flge@ff1 000000  
                                                                ___flge@ff2 000004  
                                                             _format_double 000000  
                                                                ___altofl@c 000000  
                                                                ___fldiv@f1 000000  
                                                                ___fldiv@f2 000004  
                                                                ___fldiv@f3 000004  
                                                                __accesstop 000000* 
                                                                ___flneg@f1 000000  
                                                             _format_number 000000  
                                                             _format_xint32 000000  
                                                                ___flmul@f1 000000  
                                                                ___flmul@f2 000004  
                                                                ___flmul@f3 000003  
                                                              eval_poly@res 000000  
                                                                ___flsub@f1 000000  
                                                                ___flsub@f2 000004  
                                                                ___fltol@f1 000000  
                                                                ___awtofl@c 000000  
                                                    measure_capacitance@Cin 000007  
                                                                ___flunpack 000000  
                                                    measure_capacitance@var 000005  
                                                    ___asflmul@multiplicand 000002  
                                                                ___lltofl@c 000000  
                                                             __end_of_log10 00005E  
                                                             __end_of_floor 000196  
                                                             __end_of_ldexp 0001AE  
                                                             __end_of_frexp 0000EC  
                                                                ___lwtofl@c 000000  
                                                                   ??_log10 000000* 
                                                                   ??_floor 000000* 
                                                                   ??_ldexp 000000* 
                                                                   ??_frexp 000000* 
                                                            ?_format_double 000000* 
                                                         fp__format_putchar 000000  
                                                            ?_format_number 000000* 
                                                            ?_format_xint32 000000* 
                                                            print_unit@unit 000000  
                                                                   ?___flge 000000* 
                                                                   ?___wmul 000000* 
                                                                 l500000718 0000BE  
                                                                 ?___altofl 000000* 
                                                         __end_of___asflmul 000064  
                                                         __end_of___asflsub 000064  
                                                                 l600000741 0000A4  
                                                                 l600000709 0000FE  
                                                                 ?___flpack 000000* 
                                                                 l600000742 000166  
                                                                 l600000743 000254  
                                                                 l600000744 000054  
                                                                 ?___awtofl 000000* 
                                                                 ?___lltofl 000000* 
                                                        _measure_inductance 000000  
                                                                   _T2CKPS0 007E50  
                                                                   _T2CKPS1 007E51  
                                                                 ?___lwtofl 000000* 
                                                       ?_measure_inductance 000000* 
                                                         __end_of_calibrate 0000C2  
                                                                   _TOUTPS0 007E53  
                                                                   _TOUTPS1 007E54  
                                                                   _TOUTPS2 007E55  
                                                         __end_of_delay10ms 0000CC  
                                                      __end_of_measure_freq 000156  
                                                                   __Hdata0 00004F  
                                                                   __Ldata0 00004C  
                                                               ?___flunpack 000000* 
                                                                   __Hparam 000000  
                                                                   __Lparam 000000  
                                                                 ?_ser_init 000000* 
                                                      ??_measure_inductance 000000* 
                                                                 ?_ser_puts 000000* 
                                                                   ___fladd 000000  
                                                                   ___fldiv 000000  
                                                                   ___flneg 000000  
                                                                   ___flmul 000000  
                                                                   ___flsub 000000  
                                                                   ___fltol 000000  
                                                                   ___lwdiv 000000  
                                                                   ___lwmod 000000  
                                                                ??___altofl 000000* 
                                                                ??___flpack 000000* 
                                                                ??___awtofl 000000* 
                                                           ___flunpack@sign 000000  
                                                         __end_of_eval_poly 000150  
                                                                   __ramtop 000000* 
                                                         __end_of_indicator 000006  
                                                                ??___lltofl 000000* 
                                                                ??___lwtofl 000000* 
                                                                   _seconds 000043  
                                                                   _ser_brg 00004E  
                                                                   _ser_tmp 00003E  
                                                           ??_format_double 000000* 
                                                           ??_format_number 000000* 
                                                           ??_format_xint32 000000* 
                                                                   exp@sign 000004  
                                                             __Lmediumconst 000000* 
                                                                   int_func 000000  
                                                         __end_of_ser_putch 000066  
                                                                   pow@sign 000000  
                                             measure_inductance@denominator 000013  
                                                     __end_of_print_reading 000006  
                                                                ??_ser_init 000000* 
                                                                ??_ser_puts 000000* 
                                                         format_number@base 000002  
                                                                   postdec0 000FED  
                                                                   postinc0 000FEE  
                                                                _print_unit 000000  
                                                       _measure_capacitance 000000  
                                                               ___altofl@f1 000002  
                                                            _format_putchar 000000  
                                                               ___awtofl@f1 000000  
                                                      ?_measure_capacitance 000000* 
                                                   measure_capacitance@unit 000004  
                                                            format_double@m 00000A  
                                                    measure_inductance@unit 000010  
                                                            __end_of___flge 0000D0  
                                                            __end_of___wmul 000086  
                                                               ___lltofl@f1 000001  
                                                                floor@expon 000000  
                                                           fp__output_putch 000000  
                                                            format_number@i 000004  
                                                            format_number@n 000000  
                                                            format_xint32@x 000000  
                                                                eval_poly@d 000004  
                                                                eval_poly@n 000006  
                                                                eval_poly@x 000000  
                                                                ldexp@value 000000  
                                                               __end_of_exp 000334  
                                                               __end_of_log 0001DC  
                                                               __end_of_isr 0001D6  
                                                               __end_of_pow 000286  
                                                               ___lwtofl@f1 000000  
                                                                 __Habsbss0 00004C  
                                                    __end_of_format_putchar 00000C  
                                                        format_double@digit 000008  
                                                                 __Labsbss0 000000  
                                                                frexp@value 000000  
                                                     ??_measure_capacitance 000000* 
                                                                  ??___flge 000000* 
                                                                  ??___wmul 000000* 
                                                              _measure_freq 000000  
                                                              delay10ms@run 000000  
                                                  print_reading@measurement 000000  
                                                               ?_print_unit 000000* 
                                                                 ___asflmul 000000  
                                                                 ___asflsub 000000  
                                                             ?_output_putch 000000* 
                                                           ?_format_putchar 000000* 
                                                         measure_freq@count 000001  
                                                                 _calibrate 000000  
                                                                 _delay10ms 000000  
                                                              ??___flunpack 000000* 
                                                          ___lwdiv@dividend 000000  
                                                                  ?___fladd 000000* 
                                                                  ?___fldiv 000000* 
                                                                  ?___flneg 000000* 
                                                                  ?___flmul 000000* 
                                                                  ?___flsub 000000* 
                                                                  ?___fltol 000000* 
                                                                  ?___lwdiv 000000* 
                                                                  ?___lwmod 000000* 
                                                               __smallconst 000000  
                                                                ?___asflmul 000000* 
                                                                ?___asflsub 000000* 
                                                                 _eval_poly 000000  
                                                             output_putch@c 000000  
                                                                 _indicator 000000  
                                                            ??_output_putch 000000* 
                                                        __end_of___flunpack 0000F4  
                                                          ___lwdiv@quotient 000001  
                                                                ?_calibrate 000000* 
                                                            ___wmul@product 000000  
                                                                ser_putch@c 000000  
                                                                ?_delay10ms 000000* 
                                                             measure_freq@i 000003  
                                                                 _ser_putch 000000  
                                                             ??_timer2_init 000000* 
                                                         indicator@indicate 000000  
                                                         ___wmul@multiplier 000000  
                                                                ?_eval_poly 000000* 
                                                                ?_indicator 000000* 
                                                     measure_inductance@Lin 00001B  
                                                     measure_inductance@var 000011  
                                                     __end_of_format_double 000214  
                                                      format_number@padchar 000002  
                                                     __end_of_format_number 000200  
                                                     __end_of_format_xint32 0000BE  
                                                                 frexp@eptr 000004  
                                                                  __Hparam1 000000* 
                                                                  __Lparam1 000000* 
                                                                ?_ser_putch 000000* 
                                                              __Lsmallconst 000000* 
                                                               delay10ms@ms 000001  
                                                                  ___altofl 000000  
                                                                  ___flpack 000000  
                                                                  ___awtofl 000000  
                                                                  ___lltofl 000000  
                                                             timer2_init@ps 000000  
                                                                  ___lwtofl 000000  
                                                          measure_freq@prev 000000  
                                                                  _exp$1357 000000  
                                                               ??___asflmul 000000* 
                                                               ??___asflsub 000000* 
                                                       __end_of_timer2_init 0000D0  
                                                          ___flunpack@l_arg 000001  
                                                           ___lwdiv@divisor 000002  
                                                           ___lwdiv@counter 000000  
                                                               ??_calibrate 000000* 
                                                               ??_delay10ms 000000* 
                                                                 ser_puts@s 000000  
                                                                  _msecpart 000004  
                                                     timer2_init@postscaler 000001  
                                                                  _ser_init 000000  
                                                                  _ser_puts 000000  
                                                                  _timer1of 00003F  
                                                      __end_of_output_putch 00000E  
                                               measure_inductance@numerator 000017  
                                                          ??_format_putchar 000000* 
                                                              ??_print_unit 000000* 
                                                               ??_eval_poly 000000* 
                                                               ??_indicator 000000* 
                                                                  intlevel2 000000* 
                                               __end_of_measure_capacitance 0005A0  
                                                          ___lwmod@dividend 000000  
                                                               ??_ser_putch 000000* 
                                                        __end_of_print_unit 000006  
                                                             _print_reading 000000  
                                                      delay10ms@period_10ms 000000  
                                                               _timer2_init 000000  
                                                        _format_double$1332 000000  
                                                        _format_double$1333 000004  
                                                  _measure_capacitance$1281 000000  
                                                           ___lwmod@divisor 000002  
                                                           ___lwmod@counter 000000  
                                                             ___fladd@sign1 000002  
                                                             ___fladd@sign2 000000  
                                                              ___fladd@exp1 000004  
                                                              ___fladd@exp2 000003  
                                                              ___fladd@cntr 000001  
                                                            ?_print_reading 000000* 
