

HI-TECH Software PRO Macro Assembler (PIC18) V9.66 build 8870 
                                                       Thu Sep 05 08:41:32 2019

HI-TECH Software Omniscient Code Generator build 8870
     1                           	processor	18F2550
     2                           	fnconf	param1,??,?,0
     3                           	opt	pw 80
     4                           	opt	pm
     5                           	psect	text0,global,reloc=2,class=CODE,delta=1
     6                           	psect	text1,global,reloc=2,class=CODE,delta=1
     7                           	psect	text2,global,reloc=2,class=CODE,delta=1
     8                           	psect	text3,global,reloc=2,class=CODE,delta=1
     9                           	psect	text4,global,reloc=2,class=CODE,delta=1
    10                           	psect	text5,global,reloc=2,class=CODE,delta=1
    11                           	psect	text6,global,reloc=2,class=CODE,delta=1
    12                           	psect	text7,global,reloc=2,class=CODE,delta=1
    13                           	psect	text8,global,reloc=2,class=CODE,delta=1
    14                           	psect	text9,global,reloc=2,class=CODE,delta=1
    15                           	psect	text10,global,reloc=2,class=CODE,delta=1
    16                           	psect	text11,global,reloc=2,class=CODE,delta=1
    17                           	psect	text12,global,reloc=2,class=CODE,delta=1
    18                           	psect	text13,global,reloc=2,class=CODE,delta=1
    19                           	psect	text14,global,reloc=2,class=CODE,delta=1
    20                           	psect	text15,global,reloc=2,class=CODE,delta=1
    21                           	psect	text16,global,reloc=2,class=CODE,delta=1
    22                           	psect	text17,global,reloc=2,class=CODE,delta=1
    23                           	psect	text18,global,reloc=2,class=CODE,delta=1
    24                           	psect	text19,global,reloc=2,class=CODE,delta=1
    25                           	psect	text20,global,reloc=2,class=CODE,delta=1
    26                           	psect	text21,global,reloc=2,class=CODE,delta=1
    27                           	psect	text22,global,reloc=2,class=CODE,delta=1
    28                           	psect	text23,global,reloc=2,class=CODE,delta=1
    29                           	psect	text24,global,reloc=2,class=CODE,delta=1
    30                           	psect	text25,global,reloc=2,class=CODE,delta=1
    31                           	psect	text26,global,reloc=2,class=CODE,delta=1
    32                           	psect	text27,global,reloc=2,class=CODE,delta=1
    33                           	psect	text28,global,reloc=2,class=CODE,delta=1
    34                           	psect	text29,global,reloc=2,class=CODE,delta=1
    35                           	psect	text30,global,reloc=2,class=CODE,delta=1
    36                           	psect	text31,global,reloc=2,class=CODE,delta=1
    37                           	psect	text32,global,reloc=2,class=CODE,delta=1
    38                           	psect	text33,global,reloc=2,class=CODE,delta=1
    39                           	psect	text34,global,reloc=2,class=CODE,delta=1
    40                           	psect	text35,global,reloc=2,class=CODE,delta=1
    41                           	psect	text36,global,reloc=2,class=CODE,delta=1
    42                           	psect	text37,global,reloc=2,class=CODE,delta=1
    43                           	psect	text38,global,reloc=2,class=CODE,delta=1
    44                           	psect	text39,global,reloc=2,class=CODE,delta=1
    45                           	psect	text40,global,reloc=2,class=CODE,delta=1
    46                           	psect	text41,global,reloc=2,class=CODE,delta=1
    47                           	psect	text42,global,reloc=2,class=CODE,delta=1
    48                           	psect	text43,global,reloc=2,class=CODE,delta=1
    49                           	psect	text44,global,reloc=2,class=CODE,delta=1
    50                           	psect	text45,global,reloc=2,class=CODE,delta=1
    51                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    52                           	psect	text46,global,reloc=2,class=CODE,delta=1
    53                           	psect	idata,global,class=CODE,delta=1
    54                           	psect	smallconst,global,reloc=2,class=SMALLCONS
      +                          T,delta=1
    55                           	psect	intsave_regs,global,class=BIGRAM,space=1,
      +                          delta=1
    56                           	psect	param1,global,class=BANK1,space=1,delta=1
    57                           	dabs	1,0x47,2
    58                           	dabs	1,0x49,1
    59                           	dabs	1,0x24,16
    60                           	dabs	1,0x14,16
    61                           	dabs	1,0x8,4
    62                           	dabs	1,0x10,4
    63                           	dabs	1,0xC,4
    64                           	dabs	1,0x34,4
    65                           	dabs	1,0x3F,4
    66                           	dabs	1,0x43,4
    67                           	dabs	1,0x38,2
    68                           	dabs	1,0x3B,1
    69                           	dabs	1,0x3E,1
    70                           	dabs	1,0x3D,1
    71                           	dabs	1,0x3A,1
    72                           	dabs	1,0x3C,1
    73                           	dabs	1,0x400,256
    74                           	dabs	1,0x0,4
    75                           	dabs	1,0x6,2
    76                           	dabs	1,0x4,2
    77  000000                     
    78  000000                     
    79  000000                     
    80  000000                     
    81  000000                     
    82  000000                     
    83  000000                     
    84  000000                     
    85  000000                     
    86  000000                     
    87  000000                     
    88  000000                     
    89  000000                     
    90  000000                     
    91  000000                     
    92  000000                     
    93  000000                     
    94  000000                     
    95  000000                     
    96  000000                     
    97  000000                     
    98  000000                     
    99  000000                     
   100  000000                     
   101  000000                     
   102  000000                     
   103  000000                     
   104  000000                     
   105  000000                     
   106  000000                     
   107  000000                     
   108  000000                     
   109  000000                     
   110  000000                     
   111  000000                     
   112  000000                     
   113  000000                     
   114  000000                     
   115  000000                     
   116  000000                     
   117  000000                     
   118  000000                     
   119  000000                     
   120  000000                     
   121  000000                     
   122  000000                     
   123  000000                     
   124  000000                     
   125  000000                     
   126  000000                     
   127  000000                     
   128  000000                     
   129  000000                     
   130  000000                     
   131  000000                     
   132  000000                     
   133  000000                     
   134  000000                     
   135  000000                     
   136  000000                     
   137  000000                     
   138  000000                     
   139  000000                     
   140  000000                     
   141  000000                     
   142  000000                     
   143  000000                     
   144  000000                     
   145  000000                     
   146  000000                     
   147  000000                     
   148  000000                     
   149  000000                     
   150  000000                     
   151  000000                     
   152  000000                     
   153  000000                     
   154  000000                     
   155  000000                     
   156  000000                     
   157  000000                     
   158  000000                     
   159  000000                     
   160  000000                     
   161  000000                     
   162  000000                     
   163  000000                     
   164  000000                     
   165  000000                     
   166  000000                     
   167  000000                     
   168  000000                     
   169  000000                     
   170  000000                     
   171  000000                     
   172  000000                     
   173  000000                     
   174  000000                     
   175  000000                     
   176  000000                     
   177  000000                     
   178  000000                     
   179  000000                     
   180  000000                     
   181  000000                     
   182  000000                     
   183  000000                     
   184  000000                     
   185  000000                     
   186  000000                     
   187  000000                     
   188  000000                     
   189  000000                     
   190  000000                     
   191  000000                     
   192  000000                     
   193  000000                     
   194  000000                     
   195  000000                     
   196  000000                     
   197  000000                     
   198  000000                     
   199  000000                     
   200  000000                     
   201  000000                     
   202  000000                     
   203  000000                     
   204  000000                     
   205  000000                     
   206  000000                     
   207  000000                     
   208  000000                     
   209  000000                     
   210  000000                     
   211  000000                     
   212  000000                     
   213  000000                     
   214  000000                     
   215  000000                     
   216  000000                     
   217  000000                     
   218  000000                     
   219  000000                     
   220  000000                     
   221  000000                     
   222  000000                     
   223  000000                     
   224  000000                     
   225  000000                     
   226  000000                     
   227  000000                     
   228  000000                     
   229  000000                     
   230  000000                     
   231  000000                     
   232  000000                     
   233  000000                     
   234  000000                     
   235  000000                     
   236  000000                     
   237  000000                     
   238  000000                     
   239  000000                     
   240  000000                     
   241  000000                     
   242  000000                     
   243  000000                     
   244  000000                     
   245  000000                     
   246  000000                     
   247  000000                     
   248  000000                     
   249  000000                     
   250  000000                     
   251  000000                     
   252  000000                     
   253  000000                     
   254  000000                     
   255  000000                     
   256  000000                     
   257  000000                     
   258  000000                     
   259  000000                     
   260  000000                     
   261  000000                     
   262  000000                     
   263  000000                     
   264  000000                     
   265  000000                     
   266  000000                     
   267  000000                     
   268  000000                     
   269  000000                     
   270  000000                     
   271  000000                     
   272  000000                     
   273  000000                     
   274  000000                     
   275  000000                     
   276  000000                     
   277  000000                     
   278  000000                     
   279  000000                     
   280                           
   281                           	psect	text0
   282                           ;Data sizes: Strings 42, constant 76, data 3, bs
      +                          s 0, persistent 0 stack 112
   283                           ; *************** function _main ***************
      +                          **
   284                           ; Defined at:
   285                           ;		line 115 in file "../../../src/LC-meter.c"
   286                           ; Parameters:
   287                           ;		None
   288                           ; Auto variables:
   289                           ;		None
   290                           ; Return value:
   291                           ;		type: void 
   292                           ;		size: 0
   293                           ; Registers used:
   294                           ;		wreg, fsr0l, fsr0h, fsr1l, fsr2l, status,2, s
      +                          tatus,0, pclat, tosl, tblptrl, tblptrh, tblptru,
      +                           tablat, prodl, prodh, cstack
   295                           ; Tracked objects:
   296                           ;		On entry : 0/0
   297                           ;		On exit  : 0/0
   298                           ;		Unchanged: 0/0
   299                           ; Data sizes:
   300                           ;		Autos:    0
   301                           ;		Params:   0
   302                           ;		Temp:     0
   303                           ;		Total:    0
   304                           ; This function calls:
   305                           ;		_timer2_init
   306                           ;		_delay10ms
   307                           ;		_ser_init
   308                           ;		_calibrate
   309                           ;		_ser_puts
   310                           ;		_measure_capacitance
   311                           ;		_measure_inductance
   312                           ;		_indicator
   313                           ; This function is called by:
   314                           ;		Startup code after reset
   315                           ; This function uses a non-reentrant model
   316                           ; 
   317  000000                     
   318                           ;LC-meter.c: 114: void
   319                           ;LC-meter.c: 115: main() {
   320  001840                     _main:
   321                           	opt stack 30
   322                           ; BSR set to: ?
   323  001840  6A3F               	clrf	63,c	;volatile
   324  001842  6A40               	clrf	64,c	;volatile
   325  001844  6A41               	clrf	65,c	;volatile
   326  001846  6A42               	clrf	66,c	;volatile
   327  001848  C03F F034          	movff	63,52	;volatile
   328  00184C  C040 F035          	movff	64,53	;volatile
   329  001850  C041 F036          	movff	65,54	;volatile
   330  001854  C042 F037          	movff	66,55	;volatile
   331  001858  C034 F004          	movff	52,4	;volatile
   332  00185C  C035 F005          	movff	53,5	;volatile
   333  001860  C004 F006          	movff	4,6	;volatile
   334  001864  C005 F007          	movff	5,7	;volatile
   335                           ;LC-meter.c: 118: CCal = 1000;
   336  001868  6A00               	clrf	0,c
   337  00186A  6A01               	clrf	1,c
   338  00186C  0E7A               	movlw	122
   339  00186E  6E02               	movwf	2,c
   340  001870  0E44               	movlw	68
   341  001872  6E03               	movwf	3,c
   342                           ;LC-meter.c: 127: TRISA = 0b11001111;
   343  001874  0ECF               	movlw	207
   344  001876  6E92               	movwf	3986,c	;volatile
   345                           ;LC-meter.c: 129: T0CS = 1;
   346  001878  8AD5               	bsf	4053,5,c	;volatile
   347                           ;LC-meter.c: 130: T0SE = 1;
   348  00187A  88D5               	bsf	4053,4,c	;volatile
   349                           ;LC-meter.c: 139: RBPU = 1;
   350  00187C  8EF1               	bsf	intcon2,7,c	;volatile
   351                           ;LC-meter.c: 144: TRISC1 = 0;
   352  00187E  9294               	bcf	3988,1,c	;volatile
   353                           ;LC-meter.c: 145: RC1 = ((1) == 0);
   354  001880  9282               	bcf	3970,1,c	;volatile
   355                           ;LC-meter.c: 147: SSPEN = 0;
   356  001882  9AC6               	bcf	4038,5,c	;volatile
   357                           ;LC-meter.c: 152: timer2_init(0b000 | 0x80);
   358  001884  0E80               	movlw	128
   359  001886  EC67  F011         	call	_timer2_init
   360                           ;LC-meter.c: 157: TRISC1 = 0;
   361  00188A  9294               	bcf	3988,1,c	;volatile
   362                           ;LC-meter.c: 162: TRISC0 = 1;
   363  00188C  8094               	bsf	3988,0,c	;volatile
   364                           ;LC-meter.c: 163: TRISC2 = 1;
   365  00188E  8494               	bsf	3988,2,c	;volatile
   366                           ;LC-meter.c: 173: TRISC |= (1 << 4);
   367  001890  8894               	bsf	3988,4,c	;volatile
   368                           ;LC-meter.c: 174: TRISC &= ~(1 << 5);
   369  001892  9A94               	bcf	3988,5,c	;volatile
   370                           ;LC-meter.c: 176: PORTC &= ~(1 << 5);
   371  001894  9A82               	bcf	3970,5,c	;volatile
   372                           ;LC-meter.c: 177: delay10ms(50);
   373  001896  0E32               	movlw	50
   374  001898  0101               	movlb	1	; () banked
   375  00189A  6F00               	movwf	?_delay10ms& (0+255),b
   376  00189C  0E00               	movlw	0
   377  00189E  6B01               	clrf	(?_delay10ms+1)& (0+255),b
   378  0018A0  EC0F  F011         	call	_delay10ms	;wreg free
   379                           ;LC-meter.c: 178: PORTC |= (1 << 5);
   380  0018A4  8A82               	bsf	3970,5,c	;volatile
   381                           ;LC-meter.c: 179: delay10ms(50);
   382  0018A6  0E32               	movlw	50
   383  0018A8  6F00               	movwf	?_delay10ms& (0+255),b
   384  0018AA  0E00               	movlw	0
   385  0018AC  6B01               	clrf	(?_delay10ms+1)& (0+255),b
   386  0018AE  EC0F  F011         	call	_delay10ms	;wreg free
   387                           ;LC-meter.c: 180: PORTC &= ~(1 << 5);
   388  0018B2  9A82               	bcf	3970,5,c	;volatile
   389                           ;LC-meter.c: 181: delay10ms(50);
   390  0018B4  0E32               	movlw	50
   391  0018B6  6F00               	movwf	?_delay10ms& (0+255),b
   392  0018B8  0E00               	movlw	0
   393  0018BA  6B01               	clrf	(?_delay10ms+1)& (0+255),b
   394  0018BC  EC0F  F011         	call	_delay10ms	;wreg free
   395                           ;LC-meter.c: 182: PORTC |= (1 << 5);
   396  0018C0  8A82               	bsf	3970,5,c	;volatile
   397                           ;LC-meter.c: 183: delay10ms(50);
   398  0018C2  0E32               	movlw	50
   399  0018C4  6F00               	movwf	?_delay10ms& (0+255),b
   400  0018C6  0E00               	movlw	0
   401  0018C8  6B01               	clrf	(?_delay10ms+1)& (0+255),b
   402  0018CA  EC0F  F011         	call	_delay10ms	;wreg free
   403                           ;LC-meter.c: 184: PORTC &= ~(1 << 5);
   404  0018CE  9A82               	bcf	3970,5,c	;volatile
   405                           ;LC-meter.c: 187: ser_init();
   406  0018D0  EC21  F013         	call	_ser_init	;wreg free
   407                           ;LC-meter.c: 192: TRISC &= ~0b01000000;
   408  0018D4  9C94               	bcf	3988,6,c	;volatile
   409                           ;LC-meter.c: 194: PEIE = 1;
   410  0018D6  8CF2               	bsf	intcon,6,c	;volatile
   411                           ;LC-meter.c: 195: GIE = 1;
   412  0018D8  8EF2               	bsf	intcon,7,c	;volatile
   413                           ;LC-meter.c: 214: delay10ms(200);
   414  0018DA  0EC8               	movlw	200
   415  0018DC  6F00               	movwf	?_delay10ms& (0+255),b
   416  0018DE  0E00               	movlw	0
   417  0018E0  6B01               	clrf	(?_delay10ms+1)& (0+255),b
   418  0018E2  EC0F  F011         	call	_delay10ms	;wreg free
   419                           ;LC-meter.c: 217: calibrate();
   420  0018E6  ECF7  F00E         	call	_calibrate	;wreg free
   421                           ;LC-meter.c: 228: for(;;) {
   422  0018EA                     l1699:
   423                           ; BSR set to: 1
   424                           ;LC-meter.c: 230: ser_puts("...\r\n");
   425  0018EA  0E67               	movlw	STR_1& (0+255)
   426  0018EC  ECFA  F012         	call	_ser_puts
   427                           ;LC-meter.c: 231: if(RC4)
   428  0018F0  A882               	btfss	3970,4,c	;volatile
   429  0018F2  D003               	goto	l1702
   430                           ;LC-meter.c: 232: measure_capacitance();
   431  0018F4  EC28  F006         	call	_measure_capacitance	;wreg free
   432  0018F8  D002               	goto	l1703
   433  0018FA                     l1702:
   434                           ; BSR set to: 1
   435                           ;LC-meter.c: 233: else
   436                           ;LC-meter.c: 234: measure_inductance();
   437  0018FA  EC3E  F004         	call	_measure_inductance	;wreg free
   438  0018FE                     l1703:
   439                           ; BSR set to: 1
   440                           ;LC-meter.c: 236: indicator(1);
   441  0018FE  0E01               	movlw	1
   442  001900  EC43  F013         	call	_indicator
   443                           ;LC-meter.c: 237: delay10ms(30);
   444  001904  0E1E               	movlw	30
   445  001906  6F00               	movwf	?_delay10ms& (0+255),b
   446  001908  0E00               	movlw	0
   447  00190A  6B01               	clrf	(?_delay10ms+1)& (0+255),b
   448  00190C  EC0F  F011         	call	_delay10ms	;wreg free
   449                           ;LC-meter.c: 238: indicator(0);
   450  001910  0E00               	movlw	0
   451  001912  EC43  F013         	call	_indicator
   452                           ;LC-meter.c: 239: delay10ms(20);
   453  001916  0E14               	movlw	20
   454  001918  6F00               	movwf	?_delay10ms& (0+255),b
   455  00191A  0E00               	movlw	0
   456  00191C  6B01               	clrf	(?_delay10ms+1)& (0+255),b
   457  00191E  EC0F  F011         	call	_delay10ms	;wreg free
   458                           ;LC-meter.c: 240: }
   459  001922  D7E3               	goto	l1699
   460  001924                     __end_of_main:
   461                           	opt stack 0
   462                           
   463                           	psect	text1
   464                           ; =============== function _main ends ==========
      +                          ==
   465                           ; *************** function _indicator **********
      +                          *******
   466                           ; Defined at:
   467                           ;		line 469 in file "../../../src/print.c"
   468                           ; Parameters:
   469                           ;		indicate       size:   1reg:   wre	type: unsi
      +                          gned char 
   470                           ; Auto variables:
   471                           ;		None
   472                           ; Return value:
   473                           ;		type: void 
   474                           ;		size: 0
   475                           ; Registers used:
   476                           ;		wreg
   477                           ; Tracked objects:
   478                           ;		On entry : F/1
   479                           ;		On exit  : F/1
   480                           ;		Unchanged: FFFFFFFF/0
   481                           ; Data sizes:
   482                           ;		Autos:    0
   483                           ;		Params:   0
   484                           ;		Temp:     0
   485                           ;		Total:    0
   486                           ; This function calls:
   487                           ;		Nothing
   488                           ; This function is called by:
   489                           ;		_main
   490                           ; This function uses a non-reentrant model
   491                           ; 
   492  000000                     
   493                           ;print.c: 468: void
   494                           ;print.c: 469: indicator(unsigned char indicate)
      +                           {
   495  002686                     _indicator:
   496                           	opt stack 29
   497                           ; BSR set to: 1
   498                           ; BSR set to: 1
   499  002686  0012               	return	
   500  002688                     __end_of_indicator:
   501                           	opt stack 0
   502                           
   503                           	psect	text2
   504                           ; =============== function _indicator ends =====
      +                          =======
   505                           ; *************** function _calibrate **********
      +                          *******
   506                           ; Defined at:
   507                           ;		line 346 in file "../../../src/LC-meter.c"
   508                           ; Parameters:
   509                           ;		None
   510                           ; Auto variables:
   511                           ;		None
   512                           ; Return value:
   513                           ;		type: void 
   514                           ;		size: 0
   515                           ; Registers used:
   516                           ;		wreg, fsr0l, fsr0h, fsr1l, fsr2l, status,2, s
      +                          tatus,0, tblptrl, tblptrh, tblptru, tablat, prod
      +                          l, prodh, cstack
   517                           ; Tracked objects:
   518                           ;		On entry : F/1
   519                           ;		On exit  : F/1
   520                           ;		Unchanged: 0/0
   521                           ; Data sizes:
   522                           ;		Autos:    0
   523                           ;		Params:   0
   524                           ;		Temp:     0
   525                           ;		Total:    0
   526                           ; This function calls:
   527                           ;		_measure_freq
   528                           ;		___lwtofl
   529                           ;		_delay10ms
   530                           ;		_ser_puts
   531                           ; This function is called by:
   532                           ;		_main
   533                           ; This function uses a non-reentrant model
   534                           ; 
   535  000000                     
   536                           ;LC-meter.c: 345: void
   537                           ;LC-meter.c: 346: calibrate() {
   538  001DEE                     _calibrate:
   539                           	opt stack 29
   540                           ; BSR set to: 1
   541                           ;LC-meter.c: 347: unsigned char i;
   542                           ;LC-meter.c: 360: PORTC &= ~(1 << 5);
   543  001DEE  9A82               	bcf	3970,5,c	;volatile
   544                           ;LC-meter.c: 362: F1 = (double)measure_freq();
   545  001DF0  EC1F  F010         	call	_measure_freq	;wreg free
   546  001DF4  C11E  F11E         	movff	?_measure_freq,?___lwtofl
   547  001DF8  C11F  F11F         	movff	?_measure_freq+1,?___lwtofl+1
   548  001DFC  EC8D  F012         	call	___lwtofl	;wreg free
   549  001E00  C11E  F008         	movff	?___lwtofl,8
   550  001E04  C11F  F009         	movff	?___lwtofl+1,9
   551  001E08  C120  F00A         	movff	?___lwtofl+2,10
   552  001E0C  C121  F00B         	movff	?___lwtofl+3,11
   553                           ;LC-meter.c: 363: delay10ms(50);
   554  001E10  0E32               	movlw	50
   555  001E12  6F00               	movwf	?_delay10ms& (0+255),b
   556  001E14  0E00               	movlw	0
   557  001E16  6B01               	clrf	(?_delay10ms+1)& (0+255),b
   558  001E18  EC0F  F011         	call	_delay10ms	;wreg free
   559                           ;LC-meter.c: 365: F1 = (double)measure_freq();
   560  001E1C  EC1F  F010         	call	_measure_freq	;wreg free
   561  001E20  C11E  F11E         	movff	?_measure_freq,?___lwtofl
   562  001E24  C11F  F11F         	movff	?_measure_freq+1,?___lwtofl+1
   563  001E28  EC8D  F012         	call	___lwtofl	;wreg free
   564  001E2C  C11E  F008         	movff	?___lwtofl,8
   565  001E30  C11F  F009         	movff	?___lwtofl+1,9
   566  001E34  C120  F00A         	movff	?___lwtofl+2,10
   567  001E38  C121  F00B         	movff	?___lwtofl+3,11
   568                           ;LC-meter.c: 366: PORTC |= (1 << 5);
   569  001E3C  8A82               	bsf	3970,5,c	;volatile
   570                           ;LC-meter.c: 368: F2 = (double)measure_freq();
   571  001E3E  EC1F  F010         	call	_measure_freq	;wreg free
   572  001E42  C11E  F11E         	movff	?_measure_freq,?___lwtofl
   573  001E46  C11F  F11F         	movff	?_measure_freq+1,?___lwtofl+1
   574  001E4A  EC8D  F012         	call	___lwtofl	;wreg free
   575  001E4E  C11E  F010         	movff	?___lwtofl,16
   576  001E52  C11F  F011         	movff	?___lwtofl+1,17
   577  001E56  C120  F012         	movff	?___lwtofl+2,18
   578  001E5A  C121  F013         	movff	?___lwtofl+3,19
   579                           ;LC-meter.c: 369: delay10ms(50);
   580  001E5E  0E32               	movlw	50
   581  001E60  6F00               	movwf	?_delay10ms& (0+255),b
   582  001E62  0E00               	movlw	0
   583  001E64  6B01               	clrf	(?_delay10ms+1)& (0+255),b
   584  001E66  EC0F  F011         	call	_delay10ms	;wreg free
   585                           ;LC-meter.c: 371: F2 = (double)measure_freq();
   586  001E6A  EC1F  F010         	call	_measure_freq	;wreg free
   587  001E6E  C11E  F11E         	movff	?_measure_freq,?___lwtofl
   588  001E72  C11F  F11F         	movff	?_measure_freq+1,?___lwtofl+1
   589  001E76  EC8D  F012         	call	___lwtofl	;wreg free
   590  001E7A  C11E  F010         	movff	?___lwtofl,16
   591  001E7E  C11F  F011         	movff	?___lwtofl+1,17
   592  001E82  C120  F012         	movff	?___lwtofl+2,18
   593  001E86  C121  F013         	movff	?___lwtofl+3,19
   594                           ;LC-meter.c: 372: PORTC &= ~(1 << 5);
   595  001E8A  9A82               	bcf	3970,5,c	;volatile
   596                           ;LC-meter.c: 384: ser_puts("\r\n");
   597  001E8C  0E6A               	movlw	(STR_1+3)& (0+255)
   598  001E8E  EFFA  F012         	goto	_ser_puts
   599                           ;LC-meter.c: 385: }
   600                           ; BSR set to: 1
   601  001E92                     __end_of_calibrate:
   602                           	opt stack 0
   603                           
   604                           	psect	text3
   605                           ; =============== function _calibrate ends =====
      +                          =======
   606                           ; *************** function _measure_inductance *
      +                          ****************
   607                           ; Defined at:
   608                           ;		line 469 in file "../../../src/LC-meter.c"
   609                           ; Parameters:
   610                           ;		None
   611                           ; Auto variables:
   612                           ;		unit        	       	type: unsigned char 
   613                           ;		var         	       	type: unsigned short 
   614                           ;		denominator 	       	type: unsigned short 
   615                           ;		numerator   	       	type: unsigned short 
   616                           ;		Lin         	       	type: unsigned short 
   617                           ; Return value:
   618                           ;		type: void 
   619                           ;		size: 0
   620                           ; Registers used:
   621                           ;		wreg, fsr0l, fsr0h, fsr1l, fsr2l, status,2, s
      +                          tatus,0, prodl, prodh, cstack
   622                           ; Tracked objects:
   623                           ;		On entry : F/1
   624                           ;		On exit  : F/1
   625                           ;		Unchanged: 0/0
   626                           ; Data sizes:
   627                           ;		Autos:   30
   628                           ;		Params:   0
   629                           ;		Temp:     0
   630                           ;		Total:   30
   631                           ; This function calls:
   632                           ;		_measure_freq
   633                           ;		___lwtofl
   634                           ;		___flge
   635                           ;		___flmul
   636                           ;		___flsub
   637                           ;		___fldiv
   638                           ;		___asfldiv
   639                           ;		___asflmul
   640                           ;		___fltol
   641                           ;		_print_reading
   642                           ;		_print_unit
   643                           ; This function is called by:
   644                           ;		_main
   645                           ; This function uses a non-reentrant model
   646                           ; 
   647  000000                     
   648                           ;LC-meter.c: 468: void
   649                           ;LC-meter.c: 469: measure_inductance() {
   650  00087C                     _measure_inductance:
   651                           	opt stack 29
   652                           ; BSR set to: 1
   653  00087C  EC1F  F010         	call	_measure_freq	;wreg free
   654  000880  C11E  F110         	movff	?_measure_freq,??_measure_inductance+16
   655  000884  C11F  F111         	movff	?_measure_freq+1,??_measure_inductance+17
   656                           ;LC-meter.c: 481: F3 = (double)var;
   657  000888  C110  F11E         	movff	??_measure_inductance+16,?___lwtofl
   658  00088C  C111  F11F         	movff	??_measure_inductance+17,?___lwtofl+1
   659  000890  EC8D  F012         	call	___lwtofl	;wreg free
   660  000894  C11E  F00C         	movff	?___lwtofl,12
   661  000898  C11F  F00D         	movff	?___lwtofl+1,13
   662  00089C  C120  F00E         	movff	?___lwtofl+2,14
   663  0008A0  C121  F00F         	movff	?___lwtofl+3,15
   664                           ;LC-meter.c: 482: if(F3 > F1)
   665  0008A4  C00C F147          	movff	12,?___flge+4
   666  0008A8  C00D F148          	movff	13,?___flge+5
   667  0008AC  C00E F149          	movff	14,?___flge+6
   668  0008B0  C00F F14A          	movff	15,?___flge+7
   669  0008B4  C008 F143          	movff	8,?___flge
   670  0008B8  C009 F144          	movff	9,?___flge+1
   671  0008BC  C00A F145          	movff	10,?___flge+2
   672  0008C0  C00B F146          	movff	11,?___flge+3
   673  0008C4  EC01  F012         	call	___flge	;wreg free
   674  0008C8  E208               	bc	l1723
   675                           ;LC-meter.c: 483: F3 = F1;
   676  0008CA  C008 F00C          	movff	8,12
   677  0008CE  C009 F00D          	movff	9,13
   678  0008D2  C00A F00E          	movff	10,14
   679  0008D6  C00B F00F          	movff	11,15
   680  0008DA                     l1723:
   681                           ; BSR set to: 1
   682                           ;LC-meter.c: 485: numerator = ((F1 * F1) - (F3 *
      +                           F3)) * ((F1 * F1) - (F2 - F2)) * (100 * 100);
   683  0008DA  C008 F159          	movff	8,?___flmul+4
   684  0008DE  C009 F15A          	movff	9,?___flmul+5
   685  0008E2  C00A F15B          	movff	10,?___flmul+6
   686  0008E6  C00B F15C          	movff	11,?___flmul+7
   687  0008EA  C008 F155          	movff	8,?___flmul
   688  0008EE  C009 F156          	movff	9,?___flmul+1
   689  0008F2  C00A F157          	movff	10,?___flmul+2
   690  0008F6  C00B F158          	movff	11,?___flmul+3
   691  0008FA  ECDC  F00D         	call	___flmul	;wreg free
   692  0008FE  C155  F100         	movff	?___flmul,??_measure_inductance
   693  000902  C156  F101         	movff	?___flmul+1,??_measure_inductance+1
   694  000906  C157  F102         	movff	?___flmul+2,??_measure_inductance+2
   695  00090A  C158  F103         	movff	?___flmul+3,??_measure_inductance+3
   696  00090E  C00C F159          	movff	12,?___flmul+4
   697  000912  C00D F15A          	movff	13,?___flmul+5
   698  000916  C00E F15B          	movff	14,?___flmul+6
   699  00091A  C00F F15C          	movff	15,?___flmul+7
   700  00091E  C00C F155          	movff	12,?___flmul
   701  000922  C00D F156          	movff	13,?___flmul+1
   702  000926  C00E F157          	movff	14,?___flmul+2
   703  00092A  C00F F158          	movff	15,?___flmul+3
   704  00092E  ECDC  F00D         	call	___flmul	;wreg free
   705  000932  C155  F104         	movff	?___flmul,??_measure_inductance+4
   706  000936  C156  F105         	movff	?___flmul+1,??_measure_inductance+5
   707  00093A  C157  F106         	movff	?___flmul+2,??_measure_inductance+6
   708  00093E  C158  F107         	movff	?___flmul+3,??_measure_inductance+7
   709  000942  C008 F159          	movff	8,?___flmul+4
   710  000946  C009 F15A          	movff	9,?___flmul+5
   711  00094A  C00A F15B          	movff	10,?___flmul+6
   712  00094E  C00B F15C          	movff	11,?___flmul+7
   713  000952  C008 F155          	movff	8,?___flmul
   714  000956  C009 F156          	movff	9,?___flmul+1
   715  00095A  C00A F157          	movff	10,?___flmul+2
   716  00095E  C00B F158          	movff	11,?___flmul+3
   717  000962  ECDC  F00D         	call	___flmul	;wreg free
   718  000966  C155  F108         	movff	?___flmul,??_measure_inductance+8
   719  00096A  C156  F109         	movff	?___flmul+1,??_measure_inductance+9
   720  00096E  C157  F10A         	movff	?___flmul+2,??_measure_inductance+10
   721  000972  C158  F10B         	movff	?___flmul+3,??_measure_inductance+11
   722  000976  C104  F143         	movff	??_measure_inductance+4,?___flsub+4
   723  00097A  C105  F144         	movff	??_measure_inductance+5,?___flsub+5
   724  00097E  C106  F145         	movff	??_measure_inductance+6,?___flsub+6
   725  000982  C107  F146         	movff	??_measure_inductance+7,?___flsub+7
   726  000986  C108  F13F         	movff	??_measure_inductance+8,?___flsub
   727  00098A  C109  F140         	movff	??_measure_inductance+9,?___flsub+1
   728  00098E  C10A  F141         	movff	??_measure_inductance+10,?___flsub+2
   729  000992  C10B  F142         	movff	??_measure_inductance+11,?___flsub+3
   730  000996  ECAC  F012         	call	___flsub	;wreg free
   731  00099A  C13F  F10C         	movff	?___flsub,??_measure_inductance+12
   732  00099E  C140  F10D         	movff	?___flsub+1,??_measure_inductance+13
   733  0009A2  C141  F10E         	movff	?___flsub+2,??_measure_inductance+14
   734  0009A6  C142  F10F         	movff	?___flsub+3,??_measure_inductance+15
   735  0009AA  C010 F143          	movff	16,?___flsub+4
   736  0009AE  C011 F144          	movff	17,?___flsub+5
   737  0009B2  C012 F145          	movff	18,?___flsub+6
   738  0009B6  C013 F146          	movff	19,?___flsub+7
   739  0009BA  C010 F13F          	movff	16,?___flsub
   740  0009BE  C011 F140          	movff	17,?___flsub+1
   741  0009C2  C012 F141          	movff	18,?___flsub+2
   742  0009C6  C013 F142          	movff	19,?___flsub+3
   743  0009CA  ECAC  F012         	call	___flsub	;wreg free
   744  0009CE  C13F  F143         	movff	?___flsub,?___flsub+4
   745  0009D2  C140  F144         	movff	?___flsub+1,?___flsub+5
   746  0009D6  C141  F145         	movff	?___flsub+2,?___flsub+6
   747  0009DA  C142  F146         	movff	?___flsub+3,?___flsub+7
   748  0009DE  C100  F13F         	movff	??_measure_inductance,?___flsub
   749  0009E2  C101  F140         	movff	??_measure_inductance+1,?___flsub+1
   750  0009E6  C102  F141         	movff	??_measure_inductance+2,?___flsub+2
   751  0009EA  C103  F142         	movff	??_measure_inductance+3,?___flsub+3
   752  0009EE  ECAC  F012         	call	___flsub	;wreg free
   753  0009F2  C13F  F159         	movff	?___flsub,?___flmul+4
   754  0009F6  C140  F15A         	movff	?___flsub+1,?___flmul+5
   755  0009FA  C141  F15B         	movff	?___flsub+2,?___flmul+6
   756  0009FE  C142  F15C         	movff	?___flsub+3,?___flmul+7
   757  000A02  C10C  F155         	movff	??_measure_inductance+12,?___flmul
   758  000A06  C10D  F156         	movff	??_measure_inductance+13,?___flmul+1
   759  000A0A  C10E  F157         	movff	??_measure_inductance+14,?___flmul+2
   760  000A0E  C10F  F158         	movff	??_measure_inductance+15,?___flmul+3
   761  000A12  ECDC  F00D         	call	___flmul	;wreg free
   762  000A16  6B59               	clrf	(?___flmul+4)& (0+255),b
   763  000A18  0E40               	movlw	64
   764  000A1A  6F5A               	movwf	(?___flmul+5)& (0+255),b
   765  000A1C  0E1C               	movlw	28
   766  000A1E  6F5B               	movwf	(?___flmul+6)& (0+255),b
   767  000A20  0E46               	movlw	70
   768  000A22  6F5C               	movwf	(?___flmul+7)& (0+255),b
   769  000A24  ECDC  F00D         	call	___flmul	;wreg free
   770  000A28  C155  F116         	movff	?___flmul,??_measure_inductance+22
   771  000A2C  C156  F117         	movff	?___flmul+1,??_measure_inductance+23
   772  000A30  C157  F118         	movff	?___flmul+2,??_measure_inductance+24
   773  000A34  C158  F119         	movff	?___flmul+3,??_measure_inductance+25
   774                           ;LC-meter.c: 487: denominator = 4 * 3.1415926535
      +                          8979323846l * 3.14159265358979323846l * F1 * F1 
      +                          * F2 * F2 * F3 * F3 * CCal;
   775  000A38  C008 F159          	movff	8,?___flmul+4
   776  000A3C  C009 F15A          	movff	9,?___flmul+5
   777  000A40  C00A F15B          	movff	10,?___flmul+6
   778  000A44  C00B F15C          	movff	11,?___flmul+7
   779  000A48  C008 F155          	movff	8,?___flmul
   780  000A4C  C009 F156          	movff	9,?___flmul+1
   781  000A50  C00A F157          	movff	10,?___flmul+2
   782  000A54  C00B F158          	movff	11,?___flmul+3
   783  000A58  ECDC  F00D         	call	___flmul	;wreg free
   784  000A5C  C010 F159          	movff	16,?___flmul+4
   785  000A60  C011 F15A          	movff	17,?___flmul+5
   786  000A64  C012 F15B          	movff	18,?___flmul+6
   787  000A68  C013 F15C          	movff	19,?___flmul+7
   788  000A6C  ECDC  F00D         	call	___flmul	;wreg free
   789  000A70  C010 F159          	movff	16,?___flmul+4
   790  000A74  C011 F15A          	movff	17,?___flmul+5
   791  000A78  C012 F15B          	movff	18,?___flmul+6
   792  000A7C  C013 F15C          	movff	19,?___flmul+7
   793  000A80  ECDC  F00D         	call	___flmul	;wreg free
   794  000A84  C00C F159          	movff	12,?___flmul+4
   795  000A88  C00D F15A          	movff	13,?___flmul+5
   796  000A8C  C00E F15B          	movff	14,?___flmul+6
   797  000A90  C00F F15C          	movff	15,?___flmul+7
   798  000A94  ECDC  F00D         	call	___flmul	;wreg free
   799  000A98  C00C F159          	movff	12,?___flmul+4
   800  000A9C  C00D F15A          	movff	13,?___flmul+5
   801  000AA0  C00E F15B          	movff	14,?___flmul+6
   802  000AA4  C00F F15C          	movff	15,?___flmul+7
   803  000AA8  ECDC  F00D         	call	___flmul	;wreg free
   804  000AAC  C000 F159          	movff	0,?___flmul+4
   805  000AB0  C001 F15A          	movff	1,?___flmul+5
   806  000AB4  C002 F15B          	movff	2,?___flmul+6
   807  000AB8  C003 F15C          	movff	3,?___flmul+7
   808  000ABC  ECDC  F00D         	call	___flmul	;wreg free
   809  000AC0  0EE6               	movlw	230
   810  000AC2  6F59               	movwf	(?___flmul+4)& (0+255),b
   811  000AC4  0EE9               	movlw	233
   812  000AC6  6F5A               	movwf	(?___flmul+5)& (0+255),b
   813  000AC8  0E1D               	movlw	29
   814  000ACA  6F5B               	movwf	(?___flmul+6)& (0+255),b
   815  000ACC  0E42               	movlw	66
   816  000ACE  6F5C               	movwf	(?___flmul+7)& (0+255),b
   817  000AD0  ECDC  F00D         	call	___flmul	;wreg free
   818  000AD4  C155  F112         	movff	?___flmul,??_measure_inductance+18
   819  000AD8  C156  F113         	movff	?___flmul+1,??_measure_inductance+19
   820  000ADC  C157  F114         	movff	?___flmul+2,??_measure_inductance+20
   821  000AE0  C158  F115         	movff	?___flmul+3,??_measure_inductance+21
   822                           ;LC-meter.c: 489: Lin = (numerator / denominator
      +                          ) * 1e+15l;
   823  000AE4  C112  F13D         	movff	??_measure_inductance+18,?___fldiv+4
   824  000AE8  C113  F13E         	movff	??_measure_inductance+19,?___fldiv+5
   825  000AEC  C114  F13F         	movff	??_measure_inductance+20,?___fldiv+6
   826  000AF0  C115  F140         	movff	??_measure_inductance+21,?___fldiv+7
   827  000AF4  C116  F139         	movff	??_measure_inductance+22,?___fldiv
   828  000AF8  C117  F13A         	movff	??_measure_inductance+23,?___fldiv+1
   829  000AFC  C118  F13B         	movff	??_measure_inductance+24,?___fldiv+2
   830  000B00  C119  F13C         	movff	??_measure_inductance+25,?___fldiv+3
   831  000B04  EC9E  F00E         	call	___fldiv	;wreg free
   832  000B08  C139  F155         	movff	?___fldiv,?___flmul
   833  000B0C  C13A  F156         	movff	?___fldiv+1,?___flmul+1
   834  000B10  C13B  F157         	movff	?___fldiv+2,?___flmul+2
   835  000B14  C13C  F158         	movff	?___fldiv+3,?___flmul+3
   836  000B18  0EA9               	movlw	169
   837  000B1A  6F59               	movwf	(?___flmul+4)& (0+255),b
   838  000B1C  0E5F               	movlw	95
   839  000B1E  6F5A               	movwf	(?___flmul+5)& (0+255),b
   840  000B20  0E63               	movlw	99
   841  000B22  6F5B               	movwf	(?___flmul+6)& (0+255),b
   842  000B24  0E58               	movlw	88
   843  000B26  6F5C               	movwf	(?___flmul+7)& (0+255),b
   844  000B28  ECDC  F00D         	call	___flmul	;wreg free
   845  000B2C  C155  F11A         	movff	?___flmul,??_measure_inductance+26
   846  000B30  C156  F11B         	movff	?___flmul+1,??_measure_inductance+27
   847  000B34  C157  F11C         	movff	?___flmul+2,??_measure_inductance+28
   848  000B38  C158  F11D         	movff	?___flmul+3,??_measure_inductance+29
   849                           ;LC-meter.c: 491: if(Lin > 999) {
   850  000B3C  C11A  F147         	movff	??_measure_inductance+26,?___flge+4
   851  000B40  C11B  F148         	movff	??_measure_inductance+27,?___flge+5
   852  000B44  C11C  F149         	movff	??_measure_inductance+28,?___flge+6
   853  000B48  C11D  F14A         	movff	??_measure_inductance+29,?___flge+7
   854  000B4C  6B43               	clrf	?___flge& (0+255),b
   855  000B4E  0EC0               	movlw	192
   856  000B50  6F44               	movwf	(?___flge+1)& (0+255),b
   857  000B52  0E79               	movlw	121
   858  000B54  6F45               	movwf	(?___flge+2)& (0+255),b
   859  000B56  0E44               	movlw	68
   860  000B58  6F46               	movwf	(?___flge+3)& (0+255),b
   861  000B5A  EC01  F012         	call	___flge	;wreg free
   862  000B5E  E253               	bc	l1724
   863                           ;LC-meter.c: 492: if(Lin > (999e+03l)) {
   864  000B60  C11A  F147         	movff	??_measure_inductance+26,?___flge+4
   865  000B64  C11B  F148         	movff	??_measure_inductance+27,?___flge+5
   866  000B68  C11C  F149         	movff	??_measure_inductance+28,?___flge+6
   867  000B6C  C11D  F14A         	movff	??_measure_inductance+29,?___flge+7
   868  000B70  0E80               	movlw	128
   869  000B72  6F43               	movwf	?___flge& (0+255),b
   870  000B74  0EE5               	movlw	229
   871  000B76  6F44               	movwf	(?___flge+1)& (0+255),b
   872  000B78  0E73               	movlw	115
   873  000B7A  6F45               	movwf	(?___flge+2)& (0+255),b
   874  000B7C  0E49               	movlw	73
   875  000B7E  6F46               	movwf	(?___flge+3)& (0+255),b
   876  000B80  EC01  F012         	call	___flge	;wreg free
   877  000B84  E232               	bc	l1725
   878                           ;LC-meter.c: 493: if(Lin > (999e+06l)) {
   879  000B86  C11A  F147         	movff	??_measure_inductance+26,?___flge+4
   880  000B8A  C11B  F148         	movff	??_measure_inductance+27,?___flge+5
   881  000B8E  C11C  F149         	movff	??_measure_inductance+28,?___flge+6
   882  000B92  C11D  F14A         	movff	??_measure_inductance+29,?___flge+7
   883  000B96  0E1F               	movlw	31
   884  000B98  6F43               	movwf	?___flge& (0+255),b
   885  000B9A  0E2E               	movlw	46
   886  000B9C  6F44               	movwf	(?___flge+1)& (0+255),b
   887  000B9E  0E6E               	movlw	110
   888  000BA0  6F45               	movwf	(?___flge+2)& (0+255),b
   889  000BA2  0E4E               	movlw	78
   890  000BA4  6F46               	movwf	(?___flge+3)& (0+255),b
   891  000BA6  EC01  F012         	call	___flge	;wreg free
   892  000BAA  E210               	bc	l1726
   893                           ;LC-meter.c: 494: Lin = Lin / (1e+09l);
   894  000BAC  0E28               	movlw	40
   895  000BAE  6F20               	movwf	(?___asfldiv+2)& (0+255),b
   896  000BB0  0E6B               	movlw	107
   897  000BB2  6F21               	movwf	(?___asfldiv+3)& (0+255),b
   898  000BB4  0E6E               	movlw	110
   899  000BB6  6F22               	movwf	(?___asfldiv+4)& (0+255),b
   900  000BB8  0E4E               	movlw	78
   901  000BBA  6F23               	movwf	(?___asfldiv+5)& (0+255),b
   902  000BBC  0E1A               	movlw	low (??_measure_inductance+26)
   903  000BBE  6F1E               	movwf	?___asfldiv& (0+255),b
   904  000BC0  0E01               	movlw	high (??_measure_inductance+26)
   905  000BC2  6F1F               	movwf	(?___asfldiv+1)& (0+255),b
   906  000BC4  EC6A  F012         	call	___asfldiv	;wreg free
   907                           ;LC-meter.c: 495: unit = 0;
   908  000BC8  6AE1               	clrf	fsr1l,c
   909                           ;LC-meter.c: 496: } else {
   910  000BCA  D01F               	goto	l1729
   911  000BCC                     l1726:
   912                           ; BSR set to: 1
   913                           ;LC-meter.c: 497: Lin = Lin / (1e+06l);
   914  000BCC  6B20               	clrf	(?___asfldiv+2)& (0+255),b
   915  000BCE  0E24               	movlw	36
   916  000BD0  6F21               	movwf	(?___asfldiv+3)& (0+255),b
   917  000BD2  0E74               	movlw	116
   918  000BD4  6F22               	movwf	(?___asfldiv+4)& (0+255),b
   919  000BD6  0E49               	movlw	73
   920  000BD8  6F23               	movwf	(?___asfldiv+5)& (0+255),b
   921  000BDA  0E1A               	movlw	low (??_measure_inductance+26)
   922  000BDC  6F1E               	movwf	?___asfldiv& (0+255),b
   923  000BDE  0E01               	movlw	high (??_measure_inductance+26)
   924  000BE0  6F1F               	movwf	(?___asfldiv+1)& (0+255),b
   925  000BE2  EC6A  F012         	call	___asfldiv	;wreg free
   926                           ;LC-meter.c: 498: unit = 1;
   927  000BE6  0E01               	movlw	1
   928  000BE8  D00F               	goto	L2
   929                           ; BSR set to: 1
   930                           ;LC-meter.c: 499: }
   931                           ;LC-meter.c: 500: } else {
   932  000BEA                     l1725:
   933                           ; BSR set to: 1
   934                           ;LC-meter.c: 501: Lin = Lin / 1e+03l;
   935  000BEA  6B20               	clrf	(?___asfldiv+2)& (0+255),b
   936  000BEC  6B21               	clrf	(?___asfldiv+3)& (0+255),b
   937  000BEE  0E7A               	movlw	122
   938  000BF0  6F22               	movwf	(?___asfldiv+4)& (0+255),b
   939  000BF2  0E44               	movlw	68
   940  000BF4  6F23               	movwf	(?___asfldiv+5)& (0+255),b
   941  000BF6  0E1A               	movlw	low (??_measure_inductance+26)
   942  000BF8  6F1E               	movwf	?___asfldiv& (0+255),b
   943  000BFA  0E01               	movlw	high (??_measure_inductance+26)
   944  000BFC  6F1F               	movwf	(?___asfldiv+1)& (0+255),b
   945  000BFE  EC6A  F012         	call	___asfldiv	;wreg free
   946                           ;LC-meter.c: 502: unit = 2;
   947  000C02  0E02               	movlw	2
   948  000C04  D001               	goto	L2
   949                           ; BSR set to: 1
   950                           ;LC-meter.c: 503: }
   951                           ;LC-meter.c: 504: } else
   952  000C06                     l1724:
   953                           ; BSR set to: 1
   954                           ;LC-meter.c: 505: unit = 3;
   955  000C06  0E03               	movlw	3
   956  000C08                     L2:
   957  000C08  6EE1               	movwf	fsr1l,c
   958  000C0A                     l1729:
   959                           ; BSR set to: 1
   960                           ;LC-meter.c: 507: Lin = Lin * 100;
   961  000C0A  6B3B               	clrf	(?___asflmul+2)& (0+255),b
   962  000C0C  6B3C               	clrf	(?___asflmul+3)& (0+255),b
   963  000C0E  0EC8               	movlw	200
   964  000C10  6F3D               	movwf	(?___asflmul+4)& (0+255),b
   965  000C12  0E42               	movlw	66
   966  000C14  6F3E               	movwf	(?___asflmul+5)& (0+255),b
   967  000C16  0E1A               	movlw	low (??_measure_inductance+26)
   968  000C18  6F39               	movwf	?___asflmul& (0+255),b
   969  000C1A  0E01               	movlw	high (??_measure_inductance+26)
   970  000C1C  6F3A               	movwf	(?___asflmul+1)& (0+255),b
   971  000C1E  EC24  F012         	call	___asflmul	;wreg free
   972                           ;LC-meter.c: 508: var = (unsigned short int)Lin;
   973  000C22  C11A  F143         	movff	??_measure_inductance+26,?___fltol
   974  000C26  C11B  F144         	movff	??_measure_inductance+27,?___fltol+1
   975  000C2A  C11C  F145         	movff	??_measure_inductance+28,?___fltol+2
   976  000C2E  C11D  F146         	movff	??_measure_inductance+29,?___fltol+3
   977  000C32  ECD9  F00F         	call	___fltol	;wreg free
   978  000C36  C143  F110         	movff	?___fltol,??_measure_inductance+16
   979  000C3A  C144  F111         	movff	?___fltol+1,??_measure_inductance+17
   980                           ;LC-meter.c: 510: print_reading(var);
   981  000C3E  C110  F11E         	movff	??_measure_inductance+16,?_print_reading
   982  000C42  C111  F11F         	movff	??_measure_inductance+17,?_print_reading+
      +                          1
   983  000C46  EC44  F013         	call	_print_reading	;wreg free
   984                           ;LC-meter.c: 511: print_unit(unit);
   985  000C4A  50E1               	movf	fsr1l,w,c
   986  000C4C  EF45  F013         	goto	_print_unit
   987                           ;LC-meter.c: 512: }
   988                           ; BSR set to: 1
   989  000C50                     __end_of_measure_inductance:
   990                           	opt stack 0
   991                           
   992                           	psect	text4
   993                           ; =============== function _measure_inductance e
      +                          nds ============
   994                           ; *************** function _measure_capacitance 
      +                          *****************
   995                           ; Defined at:
   996                           ;		line 391 in file "../../../src/LC-meter.c"
   997                           ; Parameters:
   998                           ;		None
   999                           ; Auto variables:
  1000                           ;		unit        	       	type: unsigned char 
  1001                           ;		var         	       	type: unsigned short 
  1002                           ;		Cin         	       	type: unsigned short 
  1003                           ; Return value:
  1004                           ;		type: void 
  1005                           ;		size: 0
  1006                           ; Registers used:
  1007                           ;		wreg, fsr0l, fsr0h, fsr1l, fsr2l, status,2, s
      +                          tatus,0, pclat, tosl, tblptrl, tblptrh, tblptru,
      +                           tablat, prodl, prodh, cstack
  1008                           ; Tracked objects:
  1009                           ;		On entry : F/1
  1010                           ;		On exit  : F/1
  1011                           ;		Unchanged: 0/0
  1012                           ; Data sizes:
  1013                           ;		Autos:   14
  1014                           ;		Params:   0
  1015                           ;		Temp:     0
  1016                           ;		Total:   14
  1017                           ; This function calls:
  1018                           ;		_measure_freq
  1019                           ;		___lwtofl
  1020                           ;		_ser_puts
  1021                           ;		_format_xint32
  1022                           ;		_format_double
  1023                           ;		_ser_putch
  1024                           ;		___flge
  1025                           ;		___flmul
  1026                           ;		___flsub
  1027                           ;		___asfldiv
  1028                           ;		___asflmul
  1029                           ;		___fltol
  1030                           ;		_print_reading
  1031                           ;		_print_unit
  1032                           ; This function is called by:
  1033                           ;		_main
  1034                           ; This function uses a non-reentrant model
  1035                           ; 
  1036  000000                     
  1037                           ;LC-meter.c: 390: void
  1038                           ;LC-meter.c: 391: measure_capacitance() {
  1039  000C50                     _measure_capacitance:
  1040                           	opt stack 29
  1041                           ; BSR set to: 1
  1042  000C50  EC1F  F010         	call	_measure_freq	;wreg free
  1043  000C54  C11E  F108         	movff	?_measure_freq,??_measure_capacitance+8
  1044  000C58  C11F  F109         	movff	?_measure_freq+1,??_measure_capacitance+9
  1045                           ;LC-meter.c: 404: F3 = (double)var;
  1046  000C5C  C108  F11E         	movff	??_measure_capacitance+8,?___lwtofl
  1047  000C60  C109  F11F         	movff	??_measure_capacitance+9,?___lwtofl+1
  1048  000C64  EC8D  F012         	call	___lwtofl	;wreg free
  1049  000C68  C11E  F00C         	movff	?___lwtofl,12
  1050  000C6C  C11F  F00D         	movff	?___lwtofl+1,13
  1051  000C70  C120  F00E         	movff	?___lwtofl+2,14
  1052  000C74  C121  F00F         	movff	?___lwtofl+3,15
  1053                           ;LC-meter.c: 406: putchar_ptr = &ser_putch;
  1054  000C78  0100               	movlb	0	; () banked
  1055  000C7A  0E1C               	movlw	low _ser_putch
  1056  000C7C  6E47               	movwf	71,c
  1057  000C7E  0E26               	movlw	high _ser_putch
  1058  000C80  6E48               	movwf	72,c
  1059                           ;LC-meter.c: 407: ser_puts("var=");
  1060  000C82  0E72               	movlw	STR_4& (0+255)
  1061  000C84  ECFA  F012         	call	_ser_puts
  1062                           ;LC-meter.c: 408: format_xint32( var);
  1063  000C88  0101               	movlb	1	; () banked
  1064  000C8A  C108  F10E         	movff	??_measure_capacitance+8,?_format_xint32
  1065  000C8E  C109  F10F         	movff	??_measure_capacitance+9,?_format_xint32+
      +                          1
  1066  000C92  6B10               	clrf	(?_format_xint32+2)& (0+255),b
  1067  000C94  6B11               	clrf	(?_format_xint32+3)& (0+255),b
  1068  000C96  EC3B  F011         	call	_format_xint32	;wreg free
  1069                           ;LC-meter.c: 409: ser_puts("\r\nF1=");
  1070  000C9A  0E55               	movlw	STR_5& (0+255)
  1071  000C9C  ECFA  F012         	call	_ser_puts
  1072                           ;LC-meter.c: 410: format_double( F1);
  1073  000CA0  C008 F10E          	movff	8,?_format_double
  1074  000CA4  C009 F10F          	movff	9,?_format_double+1
  1075  000CA8  C00A F110          	movff	10,?_format_double+2
  1076  000CAC  C00B F111          	movff	11,?_format_double+3
  1077  000CB0  ECDC  F008         	call	_format_double	;wreg free
  1078                           ;LC-meter.c: 411: ser_putch(' ');
  1079  000CB4  0E20               	movlw	32
  1080  000CB6  EC0E  F013         	call	_ser_putch
  1081                           ;LC-meter.c: 412: format_xint32( *(unsigned long
      +                           int*)&F1);
  1082  000CBA  C008 F10E          	movff	8,?_format_xint32
  1083  000CBE  C009 F10F          	movff	9,?_format_xint32+1
  1084  000CC2  C00A F110          	movff	10,?_format_xint32+2
  1085  000CC6  C00B F111          	movff	11,?_format_xint32+3
  1086  000CCA  EC3B  F011         	call	_format_xint32	;wreg free
  1087                           ;LC-meter.c: 413: ser_puts("\r\nF2=");
  1088  000CCE  0E61               	movlw	STR_6& (0+255)
  1089  000CD0  ECFA  F012         	call	_ser_puts
  1090                           ;LC-meter.c: 414: format_double( F2);
  1091  000CD4  C010 F10E          	movff	16,?_format_double
  1092  000CD8  C011 F10F          	movff	17,?_format_double+1
  1093  000CDC  C012 F110          	movff	18,?_format_double+2
  1094  000CE0  C013 F111          	movff	19,?_format_double+3
  1095  000CE4  ECDC  F008         	call	_format_double	;wreg free
  1096                           ;LC-meter.c: 415: ser_putch(' ');
  1097  000CE8  0E20               	movlw	32
  1098  000CEA  EC0E  F013         	call	_ser_putch
  1099                           ;LC-meter.c: 416: format_xint32( *(unsigned long
      +                           int*)&F2);
  1100  000CEE  C010 F10E          	movff	16,?_format_xint32
  1101  000CF2  C011 F10F          	movff	17,?_format_xint32+1
  1102  000CF6  C012 F110          	movff	18,?_format_xint32+2
  1103  000CFA  C013 F111          	movff	19,?_format_xint32+3
  1104  000CFE  EC3B  F011         	call	_format_xint32	;wreg free
  1105                           ;LC-meter.c: 417: ser_puts("\r\nF3=");
  1106  000D02  0E5B               	movlw	STR_7& (0+255)
  1107  000D04  ECFA  F012         	call	_ser_puts
  1108                           ;LC-meter.c: 418: format_double( F3);
  1109  000D08  C00C F10E          	movff	12,?_format_double
  1110  000D0C  C00D F10F          	movff	13,?_format_double+1
  1111  000D10  C00E F110          	movff	14,?_format_double+2
  1112  000D14  C00F F111          	movff	15,?_format_double+3
  1113  000D18  ECDC  F008         	call	_format_double	;wreg free
  1114                           ;LC-meter.c: 419: ser_putch(' ');
  1115  000D1C  0E20               	movlw	32
  1116  000D1E  EC0E  F013         	call	_ser_putch
  1117                           ;LC-meter.c: 420: format_xint32( *(unsigned long
      +                           int*)&F3);
  1118  000D22  C00C F10E          	movff	12,?_format_xint32
  1119  000D26  C00D F10F          	movff	13,?_format_xint32+1
  1120  000D2A  C00E F110          	movff	14,?_format_xint32+2
  1121  000D2E  C00F F111          	movff	15,?_format_xint32+3
  1122  000D32  EC3B  F011         	call	_format_xint32	;wreg free
  1123                           ;LC-meter.c: 421: ser_puts("\r\nCCal=");
  1124  000D36  0E4D               	movlw	STR_8& (0+255)
  1125  000D38  ECFA  F012         	call	_ser_puts
  1126                           ;LC-meter.c: 422: format_double( CCal);
  1127  000D3C  C000 F10E          	movff	0,?_format_double
  1128  000D40  C001 F10F          	movff	1,?_format_double+1
  1129  000D44  C002 F110          	movff	2,?_format_double+2
  1130  000D48  C003 F111          	movff	3,?_format_double+3
  1131  000D4C  ECDC  F008         	call	_format_double	;wreg free
  1132                           ;LC-meter.c: 423: ser_putch(' ');
  1133  000D50  0E20               	movlw	32
  1134  000D52  EC0E  F013         	call	_ser_putch
  1135                           ;LC-meter.c: 424: format_xint32( *(unsigned long
      +                           int*)&CCal);
  1136  000D56  C000 F10E          	movff	0,?_format_xint32
  1137  000D5A  C001 F10F          	movff	1,?_format_xint32+1
  1138  000D5E  C002 F110          	movff	2,?_format_xint32+2
  1139  000D62  C003 F111          	movff	3,?_format_xint32+3
  1140  000D66  EC3B  F011         	call	_format_xint32	;wreg free
  1141                           ;LC-meter.c: 425: ser_puts("\r\n");
  1142  000D6A  0E6A               	movlw	(STR_1+3)& (0+255)
  1143  000D6C  ECFA  F012         	call	_ser_puts
  1144                           ;LC-meter.c: 427: putchar_ptr = &output_putch;
  1145  000D70  0100               	movlb	0	; () banked
  1146  000D72  0E7A               	movlw	low _output_putch
  1147  000D74  6E47               	movwf	71,c
  1148  000D76  0E26               	movlw	high _output_putch
  1149  000D78  6E48               	movwf	72,c
  1150                           ;LC-meter.c: 429: if(F3 > F1)
  1151  000D7A  C00C F147          	movff	12,?___flge+4
  1152  000D7E  C00D F148          	movff	13,?___flge+5
  1153  000D82  C00E F149          	movff	14,?___flge+6
  1154  000D86  C00F F14A          	movff	15,?___flge+7
  1155  000D8A  C008 F143          	movff	8,?___flge
  1156  000D8E  C009 F144          	movff	9,?___flge+1
  1157  000D92  C00A F145          	movff	10,?___flge+2
  1158  000D96  C00B F146          	movff	11,?___flge+3
  1159  000D9A  EC01  F012         	call	___flge	;wreg free
  1160  000D9E  E208               	bc	l1715
  1161                           ;LC-meter.c: 430: F3 = F1;
  1162  000DA0  C008 F00C          	movff	8,12
  1163  000DA4  C009 F00D          	movff	9,13
  1164  000DA8  C00A F00E          	movff	10,14
  1165  000DAC  C00B F00F          	movff	11,15
  1166  000DB0                     l1715:
  1167                           ; BSR set to: 1
  1168                           ;LC-meter.c: 432: Cin = F2 * F2 * (F1 * F1 - F3 
      +                          * F3) * CCal;
  1169  000DB0  C00C F159          	movff	12,?___flmul+4
  1170  000DB4  C00D F15A          	movff	13,?___flmul+5
  1171  000DB8  C00E F15B          	movff	14,?___flmul+6
  1172  000DBC  C00F F15C          	movff	15,?___flmul+7
  1173  000DC0  C00C F155          	movff	12,?___flmul
  1174  000DC4  C00D F156          	movff	13,?___flmul+1
  1175  000DC8  C00E F157          	movff	14,?___flmul+2
  1176  000DCC  C00F F158          	movff	15,?___flmul+3
  1177  000DD0  ECDC  F00D         	call	___flmul	;wreg free
  1178  000DD4  C155  F100         	movff	?___flmul,??_measure_capacitance
  1179  000DD8  C156  F101         	movff	?___flmul+1,??_measure_capacitance+1
  1180  000DDC  C157  F102         	movff	?___flmul+2,??_measure_capacitance+2
  1181  000DE0  C158  F103         	movff	?___flmul+3,??_measure_capacitance+3
  1182  000DE4  C008 F159          	movff	8,?___flmul+4
  1183  000DE8  C009 F15A          	movff	9,?___flmul+5
  1184  000DEC  C00A F15B          	movff	10,?___flmul+6
  1185  000DF0  C00B F15C          	movff	11,?___flmul+7
  1186  000DF4  C008 F155          	movff	8,?___flmul
  1187  000DF8  C009 F156          	movff	9,?___flmul+1
  1188  000DFC  C00A F157          	movff	10,?___flmul+2
  1189  000E00  C00B F158          	movff	11,?___flmul+3
  1190  000E04  ECDC  F00D         	call	___flmul	;wreg free
  1191  000E08  C155  F104         	movff	?___flmul,??_measure_capacitance+4
  1192  000E0C  C156  F105         	movff	?___flmul+1,??_measure_capacitance+5
  1193  000E10  C157  F106         	movff	?___flmul+2,??_measure_capacitance+6
  1194  000E14  C158  F107         	movff	?___flmul+3,??_measure_capacitance+7
  1195  000E18  C100  F143         	movff	??_measure_capacitance,?___flsub+4
  1196  000E1C  C101  F144         	movff	??_measure_capacitance+1,?___flsub+5
  1197  000E20  C102  F145         	movff	??_measure_capacitance+2,?___flsub+6
  1198  000E24  C103  F146         	movff	??_measure_capacitance+3,?___flsub+7
  1199  000E28  C104  F13F         	movff	??_measure_capacitance+4,?___flsub
  1200  000E2C  C105  F140         	movff	??_measure_capacitance+5,?___flsub+1
  1201  000E30  C106  F141         	movff	??_measure_capacitance+6,?___flsub+2
  1202  000E34  C107  F142         	movff	??_measure_capacitance+7,?___flsub+3
  1203  000E38  ECAC  F012         	call	___flsub	;wreg free
  1204  000E3C  C13F  F155         	movff	?___flsub,?___flmul
  1205  000E40  C140  F156         	movff	?___flsub+1,?___flmul+1
  1206  000E44  C141  F157         	movff	?___flsub+2,?___flmul+2
  1207  000E48  C142  F158         	movff	?___flsub+3,?___flmul+3
  1208  000E4C  C010 F159          	movff	16,?___flmul+4
  1209  000E50  C011 F15A          	movff	17,?___flmul+5
  1210  000E54  C012 F15B          	movff	18,?___flmul+6
  1211  000E58  C013 F15C          	movff	19,?___flmul+7
  1212  000E5C  ECDC  F00D         	call	___flmul	;wreg free
  1213  000E60  C010 F159          	movff	16,?___flmul+4
  1214  000E64  C011 F15A          	movff	17,?___flmul+5
  1215  000E68  C012 F15B          	movff	18,?___flmul+6
  1216  000E6C  C013 F15C          	movff	19,?___flmul+7
  1217  000E70  ECDC  F00D         	call	___flmul	;wreg free
  1218  000E74  C000 F159          	movff	0,?___flmul+4
  1219  000E78  C001 F15A          	movff	1,?___flmul+5
  1220  000E7C  C002 F15B          	movff	2,?___flmul+6
  1221  000E80  C003 F15C          	movff	3,?___flmul+7
  1222  000E84  ECDC  F00D         	call	___flmul	;wreg free
  1223  000E88  C155  F10A         	movff	?___flmul,??_measure_capacitance+10
  1224  000E8C  C156  F10B         	movff	?___flmul+1,??_measure_capacitance+11
  1225  000E90  C157  F10C         	movff	?___flmul+2,??_measure_capacitance+12
  1226  000E94  C158  F10D         	movff	?___flmul+3,??_measure_capacitance+13
  1227                           ;LC-meter.c: 436: ser_puts("Cin=");
  1228  000E98  0E6D               	movlw	STR_10& (0+255)
  1229  000E9A  ECFA  F012         	call	_ser_puts
  1230                           ;LC-meter.c: 437: format_double( Cin);
  1231  000E9E  C10A  F10E         	movff	??_measure_capacitance+10,?_format_double
  1232  000EA2  C10B  F10F         	movff	??_measure_capacitance+11,?_format_double
      +                          +1
  1233  000EA6  C10C  F110         	movff	??_measure_capacitance+12,?_format_double
      +                          +2
  1234  000EAA  C10D  F111         	movff	??_measure_capacitance+13,?_format_double
      +                          +3
  1235  000EAE  ECDC  F008         	call	_format_double	;wreg free
  1236                           ;LC-meter.c: 438: ser_putch(' ');
  1237  000EB2  0E20               	movlw	32
  1238  000EB4  EC0E  F013         	call	_ser_putch
  1239                           ;LC-meter.c: 439: format_xint32( *(unsigned long
      +                           int*)&Cin);
  1240  000EB8  C10A  F10E         	movff	??_measure_capacitance+10,?_format_xint32
  1241  000EBC  C10B  F10F         	movff	??_measure_capacitance+11,?_format_xint32
      +                          +1
  1242  000EC0  C10C  F110         	movff	??_measure_capacitance+12,?_format_xint32
      +                          +2
  1243  000EC4  C10D  F111         	movff	??_measure_capacitance+13,?_format_xint32
      +                          +3
  1244  000EC8  EC3B  F011         	call	_format_xint32	;wreg free
  1245                           ;LC-meter.c: 440: ser_puts("\r\n");
  1246  000ECC  0E6A               	movlw	(STR_1+3)& (0+255)
  1247  000ECE  ECFA  F012         	call	_ser_puts
  1248                           ;LC-meter.c: 442: if(Cin > 999) {
  1249  000ED2  C10A  F147         	movff	??_measure_capacitance+10,?___flge+4
  1250  000ED6  C10B  F148         	movff	??_measure_capacitance+11,?___flge+5
  1251  000EDA  C10C  F149         	movff	??_measure_capacitance+12,?___flge+6
  1252  000EDE  C10D  F14A         	movff	??_measure_capacitance+13,?___flge+7
  1253  000EE2  6B43               	clrf	?___flge& (0+255),b
  1254  000EE4  0EC0               	movlw	192
  1255  000EE6  6F44               	movwf	(?___flge+1)& (0+255),b
  1256  000EE8  0E79               	movlw	121
  1257  000EEA  6F45               	movwf	(?___flge+2)& (0+255),b
  1258  000EEC  0E44               	movlw	68
  1259  000EEE  6F46               	movwf	(?___flge+3)& (0+255),b
  1260  000EF0  EC01  F012         	call	___flge	;wreg free
  1261  000EF4  E253               	bc	l1716
  1262                           ;LC-meter.c: 443: if(Cin > (999e+03l)) {
  1263  000EF6  C10A  F147         	movff	??_measure_capacitance+10,?___flge+4
  1264  000EFA  C10B  F148         	movff	??_measure_capacitance+11,?___flge+5
  1265  000EFE  C10C  F149         	movff	??_measure_capacitance+12,?___flge+6
  1266  000F02  C10D  F14A         	movff	??_measure_capacitance+13,?___flge+7
  1267  000F06  0E80               	movlw	128
  1268  000F08  6F43               	movwf	?___flge& (0+255),b
  1269  000F0A  0EE5               	movlw	229
  1270  000F0C  6F44               	movwf	(?___flge+1)& (0+255),b
  1271  000F0E  0E73               	movlw	115
  1272  000F10  6F45               	movwf	(?___flge+2)& (0+255),b
  1273  000F12  0E49               	movlw	73
  1274  000F14  6F46               	movwf	(?___flge+3)& (0+255),b
  1275  000F16  EC01  F012         	call	___flge	;wreg free
  1276  000F1A  E232               	bc	l1717
  1277                           ;LC-meter.c: 444: if(Cin > (999e+06l)) {
  1278  000F1C  C10A  F147         	movff	??_measure_capacitance+10,?___flge+4
  1279  000F20  C10B  F148         	movff	??_measure_capacitance+11,?___flge+5
  1280  000F24  C10C  F149         	movff	??_measure_capacitance+12,?___flge+6
  1281  000F28  C10D  F14A         	movff	??_measure_capacitance+13,?___flge+7
  1282  000F2C  0E1F               	movlw	31
  1283  000F2E  6F43               	movwf	?___flge& (0+255),b
  1284  000F30  0E2E               	movlw	46
  1285  000F32  6F44               	movwf	(?___flge+1)& (0+255),b
  1286  000F34  0E6E               	movlw	110
  1287  000F36  6F45               	movwf	(?___flge+2)& (0+255),b
  1288  000F38  0E4E               	movlw	78
  1289  000F3A  6F46               	movwf	(?___flge+3)& (0+255),b
  1290  000F3C  EC01  F012         	call	___flge	;wreg free
  1291  000F40  E210               	bc	l1718
  1292                           ;LC-meter.c: 445: Cin = Cin / (1e+09l);
  1293  000F42  0E28               	movlw	40
  1294  000F44  6F20               	movwf	(?___asfldiv+2)& (0+255),b
  1295  000F46  0E6B               	movlw	107
  1296  000F48  6F21               	movwf	(?___asfldiv+3)& (0+255),b
  1297  000F4A  0E6E               	movlw	110
  1298  000F4C  6F22               	movwf	(?___asfldiv+4)& (0+255),b
  1299  000F4E  0E4E               	movlw	78
  1300  000F50  6F23               	movwf	(?___asfldiv+5)& (0+255),b
  1301  000F52  0E0A               	movlw	low (??_measure_capacitance+10)
  1302  000F54  6F1E               	movwf	?___asfldiv& (0+255),b
  1303  000F56  0E01               	movlw	high (??_measure_capacitance+10)
  1304  000F58  6F1F               	movwf	(?___asfldiv+1)& (0+255),b
  1305  000F5A  EC6A  F012         	call	___asfldiv	;wreg free
  1306                           ;LC-meter.c: 446: unit = 4;
  1307  000F5E  0E04               	movlw	4
  1308  000F60  D01E               	goto	L4
  1309                           ;LC-meter.c: 447: } else {
  1310  000F62                     l1718:
  1311                           ; BSR set to: 1
  1312                           ;LC-meter.c: 448: Cin = Cin / (1e+06l);
  1313  000F62  6B20               	clrf	(?___asfldiv+2)& (0+255),b
  1314  000F64  0E24               	movlw	36
  1315  000F66  6F21               	movwf	(?___asfldiv+3)& (0+255),b
  1316  000F68  0E74               	movlw	116
  1317  000F6A  6F22               	movwf	(?___asfldiv+4)& (0+255),b
  1318  000F6C  0E49               	movlw	73
  1319  000F6E  6F23               	movwf	(?___asfldiv+5)& (0+255),b
  1320  000F70  0E0A               	movlw	low (??_measure_capacitance+10)
  1321  000F72  6F1E               	movwf	?___asfldiv& (0+255),b
  1322  000F74  0E01               	movlw	high (??_measure_capacitance+10)
  1323  000F76  6F1F               	movwf	(?___asfldiv+1)& (0+255),b
  1324  000F78  EC6A  F012         	call	___asfldiv	;wreg free
  1325                           ;LC-meter.c: 449: unit = 5;
  1326  000F7C  0E05               	movlw	5
  1327  000F7E  D00F               	goto	L4
  1328                           ; BSR set to: 1
  1329                           ;LC-meter.c: 450: }
  1330                           ;LC-meter.c: 451: } else {
  1331  000F80                     l1717:
  1332                           ; BSR set to: 1
  1333                           ;LC-meter.c: 452: Cin = Cin / 1e+03l;
  1334  000F80  6B20               	clrf	(?___asfldiv+2)& (0+255),b
  1335  000F82  6B21               	clrf	(?___asfldiv+3)& (0+255),b
  1336  000F84  0E7A               	movlw	122
  1337  000F86  6F22               	movwf	(?___asfldiv+4)& (0+255),b
  1338  000F88  0E44               	movlw	68
  1339  000F8A  6F23               	movwf	(?___asfldiv+5)& (0+255),b
  1340  000F8C  0E0A               	movlw	low (??_measure_capacitance+10)
  1341  000F8E  6F1E               	movwf	?___asfldiv& (0+255),b
  1342  000F90  0E01               	movlw	high (??_measure_capacitance+10)
  1343  000F92  6F1F               	movwf	(?___asfldiv+1)& (0+255),b
  1344  000F94  EC6A  F012         	call	___asfldiv	;wreg free
  1345                           ;LC-meter.c: 453: unit = 6;
  1346  000F98  0E06               	movlw	6
  1347  000F9A  D001               	goto	L4
  1348                           ; BSR set to: 1
  1349                           ;LC-meter.c: 454: }
  1350                           ;LC-meter.c: 455: } else
  1351  000F9C                     l1716:
  1352                           ; BSR set to: 1
  1353                           ;LC-meter.c: 456: unit = 7;
  1354  000F9C  0E07               	movlw	7
  1355  000F9E                     L4:
  1356  000F9E  6EE1               	movwf	fsr1l,c
  1357                           ; BSR set to: 1
  1358                           ;LC-meter.c: 458: Cin = Cin * 100;
  1359  000FA0  6B3B               	clrf	(?___asflmul+2)& (0+255),b
  1360  000FA2  6B3C               	clrf	(?___asflmul+3)& (0+255),b
  1361  000FA4  0EC8               	movlw	200
  1362  000FA6  6F3D               	movwf	(?___asflmul+4)& (0+255),b
  1363  000FA8  0E42               	movlw	66
  1364  000FAA  6F3E               	movwf	(?___asflmul+5)& (0+255),b
  1365  000FAC  0E0A               	movlw	low (??_measure_capacitance+10)
  1366  000FAE  6F39               	movwf	?___asflmul& (0+255),b
  1367  000FB0  0E01               	movlw	high (??_measure_capacitance+10)
  1368  000FB2  6F3A               	movwf	(?___asflmul+1)& (0+255),b
  1369  000FB4  EC24  F012         	call	___asflmul	;wreg free
  1370                           ;LC-meter.c: 459: var = (unsigned short int)Cin;
  1371  000FB8  C10A  F143         	movff	??_measure_capacitance+10,?___fltol
  1372  000FBC  C10B  F144         	movff	??_measure_capacitance+11,?___fltol+1
  1373  000FC0  C10C  F145         	movff	??_measure_capacitance+12,?___fltol+2
  1374  000FC4  C10D  F146         	movff	??_measure_capacitance+13,?___fltol+3
  1375  000FC8  ECD9  F00F         	call	___fltol	;wreg free
  1376  000FCC  C143  F108         	movff	?___fltol,??_measure_capacitance+8
  1377  000FD0  C144  F109         	movff	?___fltol+1,??_measure_capacitance+9
  1378                           ;LC-meter.c: 461: print_reading(var);
  1379  000FD4  C108  F11E         	movff	??_measure_capacitance+8,?_print_reading
  1380  000FD8  C109  F11F         	movff	??_measure_capacitance+9,?_print_reading+
      +                          1
  1381  000FDC  EC44  F013         	call	_print_reading	;wreg free
  1382                           ;LC-meter.c: 462: print_unit(unit);
  1383  000FE0  50E1               	movf	fsr1l,w,c
  1384  000FE2  EF45  F013         	goto	_print_unit
  1385                           ;LC-meter.c: 463: }
  1386                           ; BSR set to: 1
  1387  000FE6                     __end_of_measure_capacitance:
  1388                           	opt stack 0
  1389                           
  1390                           	psect	text5
  1391                           ; =============== function _measure_capacitance 
      +                          ends ============
  1392                           ; *************** function _timer2_init ********
      +                          *********
  1393                           ; Defined at:
  1394                           ;		line 81 in file "../../../lib/timer.c"
  1395                           ; Parameters:
  1396                           ;		ps_mode        size:   1reg:   wre	type: unsi
      +                          gned char 
  1397                           ; Auto variables:
  1398                           ;		postscaler  	       	type: unsigned char 
  1399                           ;		ps          	       	type: unsigned char 
  1400                           ; Return value:
  1401                           ;		type: void 
  1402                           ;		size: 0
  1403                           ; Registers used:
  1404                           ;		wreg, fsr0l, fsr1l, fsr2l, status,2, status,0
  1405                           ; Tracked objects:
  1406                           ;		On entry : 0/0
  1407                           ;		On exit  : 0/0
  1408                           ;		Unchanged: FFFFFFF0/0
  1409                           ; Data sizes:
  1410                           ;		Autos:    0
  1411                           ;		Params:   0
  1412                           ;		Temp:     1
  1413                           ;		Total:    1
  1414                           ; This function calls:
  1415                           ;		Nothing
  1416                           ; This function is called by:
  1417                           ;		_main
  1418                           ; This function uses a non-reentrant model
  1419                           ; 
  1420  000000                     
  1421                           ;timer.c: 80: void
  1422                           ;timer.c: 81: timer2_init(unsigned char ps_mode)
      +                           {
  1423  0022CE                     _timer2_init:
  1424                           	opt stack 29
  1425                           ; BSR set to: ?
  1426                           ; timer2_init@ps_mode loaded to fsr1l
  1427  0022CE  CFE8 FFE1          	movff	wreg,fsr1l
  1428  0022D2  50E1               	movf	fsr1l,w,c
  1429  0022D4  0B0F               	andlw	15
  1430  0022D6  6ED9               	movwf	fsr2l,c
  1431                           ;timer.c: 83: unsigned char postscaler = 0;
  1432  0022D8  6AE9               	clrf	fsr0l,c
  1433                           ;timer.c: 86: TOUTPS0 = postscaler & 1;
  1434  0022DA  96CA               	bcf	4042,3,c	;volatile
  1435                           ;timer.c: 87: TOUTPS1 = (postscaler >> 1) & 1;
  1436  0022DC  98CA               	bcf	4042,4,c	;volatile
  1437                           ;timer.c: 88: TOUTPS2 = (postscaler >> 2) & 1;
  1438  0022DE  9ACA               	bcf	4042,5,c	;volatile
  1439                           ;timer.c: 90: T2CKPS0 = (ps >> 1) & 1;
  1440  0022E0  CFD9 F100          	movff	fsr2l,??_timer2_init
  1441  0022E4  90D8               	bcf	status,0,c
  1442  0022E6  0101               	movlb	1	; () banked
  1443  0022E8  3300               	rrcf	??_timer2_init& (0+255),f,b
  1444  0022EA  3100               	rrcf	??_timer2_init& (0+255),w,b
  1445  0022EC  A0D8               	btfss	status,0,c
  1446  0022EE  D001               	bra	u1505
  1447  0022F0  80CA               	bsf	4042,0,c	;volatile
  1448  0022F2                     u1505:
  1449  0022F2  B0D8               	btfsc	status,0,c
  1450  0022F4  D001               	bra	u1506
  1451  0022F6  90CA               	bcf	4042,0,c	;volatile
  1452  0022F8                     u1506:
  1453                           ;timer.c: 91: T2CKPS1 = (ps >> 2) & 1;
  1454  0022F8  CFD9 F100          	movff	fsr2l,??_timer2_init
  1455  0022FC  90D8               	bcf	status,0,c
  1456  0022FE  3300               	rrcf	??_timer2_init& (0+255),f,b
  1457  002300  90D8               	bcf	status,0,c
  1458  002302  3300               	rrcf	??_timer2_init& (0+255),f,b
  1459  002304  3100               	rrcf	??_timer2_init& (0+255),w,b
  1460  002306  A0D8               	btfss	status,0,c
  1461  002308  D001               	bra	u1515
  1462  00230A  82CA               	bsf	4042,1,c	;volatile
  1463  00230C                     u1515:
  1464  00230C  B0D8               	btfsc	status,0,c
  1465  00230E  D001               	bra	u1516
  1466  002310  92CA               	bcf	4042,1,c	;volatile
  1467  002312                     u1516:
  1468                           ;timer.c: 93: TMR2 = 0;
  1469  002312  6ACC               	clrf	4044,c	;volatile
  1470                           ;timer.c: 95: TMR2ON = 1;
  1471  002314  84CA               	bsf	4042,2,c	;volatile
  1472                           ;timer.c: 97: TMR2IF = 0;
  1473  002316  929E               	bcf	3998,1,c	;volatile
  1474                           ;timer.c: 98: TMR2IE = !!(ps_mode & 0x80);
  1475  002318  AEE1               	btfss	fsr1l,7,c
  1476  00231A  D002               	goto	u1520
  1477  00231C  829D               	bsf	3997,1,c	;volatile
  1478  00231E  D001               	goto	u1535
  1479  002320                     u1520:
  1480  002320  929D               	bcf	3997,1,c	;volatile
  1481  002322                     u1535:
  1482                           ;timer.c: 99: }
  1483                           ; BSR set to: ?
  1484  002322  0012               	return	
  1485  002324                     __end_of_timer2_init:
  1486                           	opt stack 0
  1487                           
  1488                           	psect	text6
  1489                           ; =============== function _timer2_init ends ===
      +                          =========
  1490                           ; *************** function _ser_init ***********
      +                          ******
  1491                           ; Defined at:
  1492                           ;		line 125 in file "../../../lib/ser.c"
  1493                           ; Parameters:
  1494                           ;		None
  1495                           ; Auto variables:
  1496                           ;		None
  1497                           ; Return value:
  1498                           ;		type: void 
  1499                           ;		size: 0
  1500                           ; Registers used:
  1501                           ;		wreg, status,2
  1502                           ; Tracked objects:
  1503                           ;		On entry : F/1
  1504                           ;		On exit  : F/1
  1505                           ;		Unchanged: FFFFFFFF/0
  1506                           ; Data sizes:
  1507                           ;		Autos:    0
  1508                           ;		Params:   0
  1509                           ;		Temp:     0
  1510                           ;		Total:    0
  1511                           ; This function calls:
  1512                           ;		Nothing
  1513                           ; This function is called by:
  1514                           ;		_main
  1515                           ; This function uses a non-reentrant model
  1516                           ; 
  1517  000000                     
  1518                           ;ser.c: 124: void
  1519                           ;ser.c: 125: ser_init(void) {
  1520  002642                     _ser_init:
  1521                           	opt stack 29
  1522                           ; BSR set to: 1
  1523  002642  8C94               	bsf	3988,6,c	;volatile
  1524                           ;ser.c: 129: RC7 = 1;
  1525  002644  8E82               	bsf	3970,7,c	;volatile
  1526                           ;ser.c: 131: BRGH = 1;
  1527  002646  84AC               	bsf	4012,2,c	;volatile
  1528                           ;ser.c: 136: SPBRG = ser_brg;
  1529  002648  0E1F               	movlw	31
  1530  00264A  6EAF               	movwf	4015,c	;volatile
  1531                           ;ser.c: 139: TX9 = 0;
  1532  00264C  9CAC               	bcf	4012,6,c	;volatile
  1533                           ;ser.c: 140: RX9 = 0;
  1534  00264E  9CAB               	bcf	4011,6,c	;volatile
  1535                           ;ser.c: 142: SYNC = 0;
  1536  002650  98AC               	bcf	4012,4,c	;volatile
  1537                           ;ser.c: 143: SPEN = 1;
  1538  002652  8EAB               	bsf	4011,7,c	;volatile
  1539                           ;ser.c: 144: CREN = 1;
  1540  002654  88AB               	bsf	4011,4,c	;volatile
  1541                           ;ser.c: 145: TXIE = 0;
  1542  002656  989D               	bcf	3997,4,c	;volatile
  1543                           ;ser.c: 147: TXEN = 1;
  1544  002658  8AAC               	bsf	4012,5,c	;volatile
  1545                           ;ser.c: 148: PEIE = 1;
  1546  00265A  8CF2               	bsf	intcon,6,c	;volatile
  1547                           ;ser.c: 150: rxiptr = rxoptr = txiptr = txoptr =
      +                           0;
  1548  00265C  6A3C               	clrf	60,c	;volatile
  1549  00265E  6A3A               	clrf	58,c	;volatile
  1550  002660  6A3E               	clrf	62,c	;volatile
  1551  002662  6A3B               	clrf	59,c	;volatile
  1552                           ;ser.c: 151: }
  1553                           ; BSR set to: 1
  1554  002664  0012               	return	
  1555  002666                     __end_of_ser_init:
  1556                           	opt stack 0
  1557                           
  1558                           	psect	text7
  1559                           ; =============== function _ser_init ends ======
      +                          ======
  1560                           ; *************** function _print_reading ******
      +                          ***********
  1561                           ; Defined at:
  1562                           ;		line 429 in file "../../../src/print.c"
  1563                           ; Parameters:
  1564                           ;		measurement    size:   2offs:   0	type: unsig
      +                          ned short 
  1565                           ; Auto variables:
  1566                           ;		None
  1567                           ; Return value:
  1568                           ;		type: void 
  1569                           ;		size: 0
  1570                           ; Registers used:
  1571                           ;		None
  1572                           ; Tracked objects:
  1573                           ;		On entry : F/1
  1574                           ;		On exit  : F/1
  1575                           ;		Unchanged: FFFFFFFF/0
  1576                           ; Data sizes:
  1577                           ;		Autos:    0
  1578                           ;		Params:   2
  1579                           ;		Temp:     0
  1580                           ;		Total:    2
  1581                           ; This function calls:
  1582                           ;		Nothing
  1583                           ; This function is called by:
  1584                           ;		_measure_capacitance
  1585                           ;		_measure_inductance
  1586                           ; This function uses a non-reentrant model
  1587                           ; 
  1588  000000                     
  1589                           ;print.c: 428: void
  1590                           ;print.c: 429: print_reading(unsigned short int 
      +                          measurement) {
  1591  002688                     _print_reading:
  1592                           	opt stack 28
  1593                           ; BSR set to: 1
  1594                           ; BSR set to: 1
  1595  002688  0012               	return	
  1596  00268A                     __end_of_print_reading:
  1597                           	opt stack 0
  1598                           
  1599                           	psect	text8
  1600                           ; =============== function _print_reading ends =
      +                          ===========
  1601                           ; *************** function _format_double ******
      +                          ***********
  1602                           ; Defined at:
  1603                           ;		line 74 in file "../../../lib/format.c"
  1604                           ; Parameters:
  1605                           ;		num            size:   4offs:   0	type: void 
  1606                           ; Auto variables:
  1607                           ;		digit       	       	type: short 
  1608                           ;		m           	       	type: short 
  1609                           ;		weight      	       	type: short 
  1610                           ; Return value:
  1611                           ;		type: void 
  1612                           ;		size: 0
  1613                           ; Registers used:
  1614                           ;		wreg, fsr0l, fsr0h, fsr1l, fsr2l, status,2, s
      +                          tatus,0, pclat, tosl, tblptrl, tblptrh, tblptru,
      +                           tablat, prodl, prodh, cstack
  1615                           ; Tracked objects:
  1616                           ;		On entry : F/1
  1617                           ;		On exit  : F/1
  1618                           ;		Unchanged: FFFFFFF0/0
  1619                           ; Data sizes:
  1620                           ;		Autos:   16
  1621                           ;		Params:   4
  1622                           ;		Temp:     0
  1623                           ;		Total:   20
  1624                           ; This function calls:
  1625                           ;		_log10
  1626                           ;		___fltol
  1627                           ;		___awtofl
  1628                           ;		_pow
  1629                           ;		___fldiv
  1630                           ;		_floor
  1631                           ;		___flmul
  1632                           ;		___asflsub
  1633                           ;		___flge
  1634                           ;		_output_putch
  1635                           ;		_ser_putch
  1636                           ;		_format_putchar
  1637                           ; This function is called by:
  1638                           ;		_measure_capacitance
  1639                           ; This function uses a non-reentrant model
  1640                           ; 
  1641  000000                     
  1642                           ;format.c: 73: void
  1643                           ;format.c: 74: format_double(double num) {
  1644  0011B8                     _format_double:
  1645                           	opt stack 28
  1646                           ; BSR set to: 1
  1647  0011B8  C10E  F122         	movff	?_format_double,?_log10
  1648  0011BC  C10F  F123         	movff	?_format_double+1,?_log10+1
  1649  0011C0  C110  F124         	movff	?_format_double+2,?_log10+2
  1650  0011C4  C111  F125         	movff	?_format_double+3,?_log10+3
  1651  0011C8  EC92  F011         	call	_log10	;wreg free
  1652  0011CC  C122  F143         	movff	?_log10,?___fltol
  1653  0011D0  C123  F144         	movff	?_log10+1,?___fltol+1
  1654  0011D4  C124  F145         	movff	?_log10+2,?___fltol+2
  1655  0011D8  C125  F146         	movff	?_log10+3,?___fltol+3
  1656  0011DC  ECD9  F00F         	call	___fltol	;wreg free
  1657  0011E0  C143  F11C         	movff	?___fltol,??_format_double+10
  1658  0011E4  C144  F11D         	movff	?___fltol+1,??_format_double+11
  1659                           ;format.c: 76: short digit;
  1660                           ;format.c: 79: while(num > 0 + 1.19209290e-07) {
  1661  0011E8                     l983:
  1662                           ; BSR set to: 1
  1663  0011E8  C10E  F147         	movff	?_format_double,?___flge+4
  1664  0011EC  C10F  F148         	movff	?_format_double+1,?___flge+5
  1665  0011F0  C110  F149         	movff	?_format_double+2,?___flge+6
  1666  0011F4  C111  F14A         	movff	?_format_double+3,?___flge+7
  1667  0011F8  6B43               	clrf	?___flge& (0+255),b
  1668  0011FA  6B44               	clrf	(?___flge+1)& (0+255),b
  1669  0011FC  6B45               	clrf	(?___flge+2)& (0+255),b
  1670  0011FE  0E34               	movlw	52
  1671  001200  6F46               	movwf	(?___flge+3)& (0+255),b
  1672  001202  EC01  F012         	call	___flge
  1673  001206  E301 D09F          	bc	u3090
  1674                           ; BSR set to: 1
  1675                           ;format.c: 80: double weight = pow(10.0l, m);
  1676  00120A  C11C  F145         	movff	??_format_double+10,?___awtofl
  1677  00120E  C11D  F146         	movff	??_format_double+11,?___awtofl+1
  1678  001212  EC63  F010         	call	___awtofl	;wreg free
  1679  001216  C145  F126         	movff	?___awtofl,?_pow+4
  1680  00121A  C146  F127         	movff	?___awtofl+1,?_pow+5
  1681  00121E  C147  F128         	movff	?___awtofl+2,?_pow+6
  1682  001222  C148  F129         	movff	?___awtofl+3,?_pow+7
  1683  001226  6B22               	clrf	?_pow& (0+255),b
  1684  001228  6B23               	clrf	(?_pow+1)& (0+255),b
  1685  00122A  0E20               	movlw	32
  1686  00122C  6F24               	movwf	(?_pow+2)& (0+255),b
  1687  00122E  0E41               	movlw	65
  1688  001230  6F25               	movwf	(?_pow+3)& (0+255),b
  1689  001232  EC55  F00A         	call	_pow	;wreg free
  1690  001236  C122  F11E         	movff	?_pow,??_format_double+12
  1691  00123A  C123  F11F         	movff	?_pow+1,??_format_double+13
  1692  00123E  C124  F120         	movff	?_pow+2,??_format_double+14
  1693  001242  C125  F121         	movff	?_pow+3,??_format_double+15
  1694                           ;format.c: 81: digit = (short)floor(num / weight
      +                          );
  1695  001246  C11E  F13D         	movff	??_format_double+12,?___fldiv+4
  1696  00124A  C11F  F13E         	movff	??_format_double+13,?___fldiv+5
  1697  00124E  C120  F13F         	movff	??_format_double+14,?___fldiv+6
  1698  001252  C121  F140         	movff	??_format_double+15,?___fldiv+7
  1699  001256  C10E  F139         	movff	?_format_double,?___fldiv
  1700  00125A  C10F  F13A         	movff	?_format_double+1,?___fldiv+1
  1701  00125E  C110  F13B         	movff	?_format_double+2,?___fldiv+2
  1702  001262  C111  F13C         	movff	?_format_double+3,?___fldiv+3
  1703  001266  EC9E  F00E         	call	___fldiv	;wreg free
  1704  00126A  C139  F139         	movff	?___fldiv,?_floor
  1705  00126E  C13A  F13A         	movff	?___fldiv+1,?_floor+1
  1706  001272  C13B  F13B         	movff	?___fldiv+2,?_floor+2
  1707  001276  C13C  F13C         	movff	?___fldiv+3,?_floor+3
  1708  00127A  ECAB  F00B         	call	_floor	;wreg free
  1709  00127E  C139  F143         	movff	?_floor,?___fltol
  1710  001282  C13A  F144         	movff	?_floor+1,?___fltol+1
  1711  001286  C13B  F145         	movff	?_floor+2,?___fltol+2
  1712  00128A  C13C  F146         	movff	?_floor+3,?___fltol+3
  1713  00128E  ECD9  F00F         	call	___fltol	;wreg free
  1714  001292  C143  F11A         	movff	?___fltol,??_format_double+8
  1715  001296  C144  F11B         	movff	?___fltol+1,??_format_double+9
  1716                           ;format.c: 82: num -= (digit * weight);
  1717  00129A  C11A  F145         	movff	??_format_double+8,?___awtofl
  1718  00129E  C11B  F146         	movff	??_format_double+9,?___awtofl+1
  1719  0012A2  EC63  F010         	call	___awtofl	;wreg free
  1720  0012A6  C145  F112         	movff	?___awtofl,??_format_double
  1721  0012AA  C146  F113         	movff	?___awtofl+1,??_format_double+1
  1722  0012AE  C147  F114         	movff	?___awtofl+2,??_format_double+2
  1723  0012B2  C148  F115         	movff	?___awtofl+3,??_format_double+3
  1724  0012B6  C112  F155         	movff	??_format_double,?___flmul
  1725  0012BA  C113  F156         	movff	??_format_double+1,?___flmul+1
  1726  0012BE  C114  F157         	movff	??_format_double+2,?___flmul+2
  1727  0012C2  C115  F158         	movff	??_format_double+3,?___flmul+3
  1728  0012C6  C11E  F159         	movff	??_format_double+12,?___flmul+4
  1729  0012CA  C11F  F15A         	movff	??_format_double+13,?___flmul+5
  1730  0012CE  C120  F15B         	movff	??_format_double+14,?___flmul+6
  1731  0012D2  C121  F15C         	movff	??_format_double+15,?___flmul+7
  1732  0012D6  ECDC  F00D         	call	___flmul	;wreg free
  1733  0012DA  C155  F116         	movff	?___flmul,??_format_double+4
  1734  0012DE  C156  F117         	movff	?___flmul+1,??_format_double+5
  1735  0012E2  C157  F118         	movff	?___flmul+2,??_format_double+6
  1736  0012E6  C158  F119         	movff	?___flmul+3,??_format_double+7
  1737  0012EA  C116  F13B         	movff	??_format_double+4,?___asflsub+2
  1738  0012EE  C117  F13C         	movff	??_format_double+5,?___asflsub+3
  1739  0012F2  C118  F13D         	movff	??_format_double+6,?___asflsub+4
  1740  0012F6  C119  F13E         	movff	??_format_double+7,?___asflsub+5
  1741  0012FA  0E0E               	movlw	low ?_format_double
  1742  0012FC  6F39               	movwf	?___asflsub& (0+255),b
  1743  0012FE  0E01               	movlw	high ?_format_double
  1744  001300  6F3A               	movwf	(?___asflsub+1)& (0+255),b
  1745  001302  EC47  F012         	call	___asflsub	;wreg free
  1746                           ;format.c: 83: putchar_ptr((char)('0' + digit));
  1747  001306  D801               	call	u3068
  1748  001308  D00C               	goto	u3069
  1749  00130A                     u3068:
  1750  00130A  0005               	push	
  1751  00130C  6EFA               	movwf	pclath,c
  1752  00130E  5047               	movf	71,w,c
  1753  001310  6EFD               	movwf	tosl,c
  1754  001312  5048               	movf	72,w,c
  1755  001314  6EFE               	movwf	tosh,c
  1756  001316  50F8               	movf	tblptru,w,c
  1757  001318  6EFF               	movwf	tosu,c
  1758  00131A  50FA               	movf	pclath,w,c
  1759  00131C  511A               	movf	(??_format_double+8)& (0+255),w,b
  1760  00131E  0F30               	addlw	48
  1761  001320  0012               	return	
  1762  001322                     u3069:
  1763                           ;format.c: 84: if(m == 0)
  1764  001322  511D               	movf	(??_format_double+11)& (0+255),w,b
  1765  001324  111C               	iorwf	(??_format_double+10)& (0+255),w,b
  1766  001326  E10C               	bnz	l986
  1767                           ;format.c: 85: putchar_ptr('.');
  1768  001328  D801               	call	u3088
  1769  00132A  D00A               	goto	l986
  1770  00132C                     u3088:
  1771  00132C  0005               	push	
  1772  00132E  6EFA               	movwf	pclath,c
  1773  001330  5047               	movf	71,w,c
  1774  001332  6EFD               	movwf	tosl,c
  1775  001334  5048               	movf	72,w,c
  1776  001336  6EFE               	movwf	tosh,c
  1777  001338  50F8               	movf	tblptru,w,c
  1778  00133A  6EFF               	movwf	tosu,c
  1779  00133C  50FA               	movf	pclath,w,c
  1780  00133E  0C2E               	retlw	46
  1781  001340                     l986:
  1782                           ; BSR set to: 1
  1783                           ;format.c: 86: m--;
  1784  001340  071C               	decf	(??_format_double+10)& (0+255),f,b
  1785  001342  A0D8               	btfss	status,0,c
  1786  001344  071D               	decf	(??_format_double+11)& (0+255),f,b
  1787  001346  D750               	goto	l983
  1788  001348                     u3090:
  1789                           ; BSR set to: 1
  1790                           ;format.c: 87: }
  1791                           ;format.c: 88: }
  1792                           ; BSR set to: 1
  1793  001348  0012               	return	
  1794  00134A                     __end_of_format_double:
  1795                           	opt stack 0
  1796                           
  1797                           	psect	text9
  1798                           ; =============== function _format_double ends =
      +                          ===========
  1799                           ; *************** function ___asfldiv **********
      +                          *******
  1800                           ; Defined at:
  1801                           ;		line 5 in file "C:\Program Files (x86)\HI-TEC
      +                          H Software\PICC-18\PRO\9.66\sources\asfldiv.c"
  1802                           ; Parameters:
  1803                           ;		f1p            size:   2offs:   0	type: PTR ;
      +                           Largest target is 4
  1804                           ;		 -> measure_inductance@Lin(4), measure_capaci
      +                          tance@Cin(4), 
  1805                           ;		f2             size:   4offs:   2	type: PTR 
  1806                           ; Auto variables:
  1807                           ;		None
  1808                           ; Return value:
  1809                           ;		type: PTR 
  1810                           ;		size: 4
  1811                           ; Registers used:
  1812                           ;		wreg, fsr0l, fsr0h, fsr2l, status,2, status,0
      +                          , prodl, prodh, cstack
  1813                           ; Tracked objects:
  1814                           ;		On entry : F/1
  1815                           ;		On exit  : F/1
  1816                           ;		Unchanged: FFFFFFF0/0
  1817                           ; Data sizes:
  1818                           ;		Autos:    0
  1819                           ;		Params:   6
  1820                           ;		Temp:     0
  1821                           ;		Total:    6
  1822                           ; This function calls:
  1823                           ;		___fldiv
  1824                           ; This function is called by:
  1825                           ;		_measure_capacitance
  1826                           ;		_measure_inductance
  1827                           ; This function uses a non-reentrant model
  1828                           ; 
  1829  000000                     
  1830  0024D4                     ___asfldiv:
  1831                           	opt stack 28
  1832                           ; BSR set to: 1
  1833  0024D4  C120  F13D         	movff	?___asfldiv+2,?___fldiv+4
  1834  0024D8  C121  F13E         	movff	?___asfldiv+3,?___fldiv+5
  1835  0024DC  C122  F13F         	movff	?___asfldiv+4,?___fldiv+6
  1836  0024E0  C123  F140         	movff	?___asfldiv+5,?___fldiv+7
  1837  0024E4  C11E  FFE9         	movff	?___asfldiv,fsr0l
  1838  0024E8  C11F  FFEA         	movff	?___asfldiv+1,fsr0h
  1839  0024EC  CFEE F139          	movff	postinc0,?___fldiv
  1840  0024F0  CFEE F13A          	movff	postinc0,?___fldiv+1
  1841  0024F4  CFEE F13B          	movff	postinc0,?___fldiv+2
  1842  0024F8  CFEE F13C          	movff	postinc0,?___fldiv+3
  1843  0024FC  EC9E  F00E         	call	___fldiv	;wreg free
  1844  002500  C11E  FFE9         	movff	?___asfldiv,fsr0l
  1845  002504  C11F  FFEA         	movff	?___asfldiv+1,fsr0h
  1846  002508  C139  FFEE         	movff	?___fldiv,postinc0
  1847  00250C  C13A  FFEE         	movff	?___fldiv+1,postinc0
  1848  002510  C13B  FFEE         	movff	?___fldiv+2,postinc0
  1849  002514  C13C  FFED         	movff	?___fldiv+3,postdec0
  1850                           ; BSR set to: 1
  1851  002518  0012               	return	
  1852  00251A                     __end_of___asfldiv:
  1853                           	opt stack 0
  1854                           
  1855                           	psect	text10
  1856                           ; =============== function ___asfldiv ends =====
      +                          =======
  1857                           ; *************** function _print_unit *********
      +                          ********
  1858                           ; Defined at:
  1859                           ;		line 408 in file "../../../src/print.c"
  1860                           ; Parameters:
  1861                           ;		unit           size:   1reg:   wre	type: unsi
      +                          gned char 
  1862                           ; Auto variables:
  1863                           ;		None
  1864                           ; Return value:
  1865                           ;		type: void 
  1866                           ;		size: 0
  1867                           ; Registers used:
  1868                           ;		wreg
  1869                           ; Tracked objects:
  1870                           ;		On entry : F/1
  1871                           ;		On exit  : F/1
  1872                           ;		Unchanged: FFFFFFFF/0
  1873                           ; Data sizes:
  1874                           ;		Autos:    0
  1875                           ;		Params:   0
  1876                           ;		Temp:     0
  1877                           ;		Total:    0
  1878                           ; This function calls:
  1879                           ;		Nothing
  1880                           ; This function is called by:
  1881                           ;		_measure_capacitance
  1882                           ;		_measure_inductance
  1883                           ; This function uses a non-reentrant model
  1884                           ; 
  1885  000000                     
  1886                           ;print.c: 407: void
  1887                           ;print.c: 408: print_unit(unsigned char unit) {
  1888  00268A                     _print_unit:
  1889                           	opt stack 28
  1890                           ; BSR set to: 1
  1891                           ;print.c: 426: }
  1892                           ; BSR set to: 1
  1893  00268A  0012               	return	
  1894  00268C                     __end_of_print_unit:
  1895                           	opt stack 0
  1896                           
  1897                           	psect	text11
  1898                           ; =============== function _print_unit ends ====
      +                          ========
  1899                           ; *************** function _format_xint32 ******
      +                          ***********
  1900                           ; Defined at:
  1901                           ;		line 48 in file "../../../lib/format.c"
  1902                           ; Parameters:
  1903                           ;		x              size:   4offs:   0	type: unsig
      +                          ned long 
  1904                           ; Auto variables:
  1905                           ;		None
  1906                           ; Return value:
  1907                           ;		type: void 
  1908                           ;		size: 0
  1909                           ; Registers used:
  1910                           ;		wreg, fsr0l, fsr0h, fsr1l, fsr2l, status,2, s
      +                          tatus,0, pclat, tosl, prodl, prodh, cstack
  1911                           ; Tracked objects:
  1912                           ;		On entry : F/1
  1913                           ;		On exit  : F/1
  1914                           ;		Unchanged: FFFFFFF0/0
  1915                           ; Data sizes:
  1916                           ;		Autos:    0
  1917                           ;		Params:   4
  1918                           ;		Temp:     0
  1919                           ;		Total:    4
  1920                           ; This function calls:
  1921                           ;		_format_number
  1922                           ;		_output_putch
  1923                           ;		_ser_putch
  1924                           ;		_format_putchar
  1925                           ; This function is called by:
  1926                           ;		_measure_capacitance
  1927                           ; This function uses a non-reentrant model
  1928                           ; 
  1929  000000                     
  1930                           ;format.c: 47: void
  1931                           ;format.c: 48: format_xint32( unsigned long int 
      +                          x) {
  1932  002276                     _format_xint32:
  1933                           	opt stack 28
  1934                           ; BSR set to: 1
  1935                           ;format.c: 49: putchar_ptr('0');
  1936  002276  D801               	call	u3008
  1937  002278  D00A               	goto	u3009
  1938  00227A                     u3008:
  1939  00227A  0005               	push	
  1940  00227C  6EFA               	movwf	pclath,c
  1941  00227E  5047               	movf	71,w,c
  1942  002280  6EFD               	movwf	tosl,c
  1943  002282  5048               	movf	72,w,c
  1944  002284  6EFE               	movwf	tosh,c
  1945  002286  50F8               	movf	tblptru,w,c
  1946  002288  6EFF               	movwf	tosu,c
  1947  00228A  50FA               	movf	pclath,w,c
  1948  00228C  0C30               	retlw	48
  1949  00228E                     u3009:
  1950                           ;format.c: 50: putchar_ptr('x');
  1951  00228E  D801               	call	u3018
  1952  002290  D00A               	goto	u3019
  1953  002292                     u3018:
  1954  002292  0005               	push	
  1955  002294  6EFA               	movwf	pclath,c
  1956  002296  5047               	movf	71,w,c
  1957  002298  6EFD               	movwf	tosl,c
  1958  00229A  5048               	movf	72,w,c
  1959  00229C  6EFE               	movwf	tosh,c
  1960  00229E  50F8               	movf	tblptru,w,c
  1961  0022A0  6EFF               	movwf	tosu,c
  1962  0022A2  50FA               	movf	pclath,w,c
  1963  0022A4  0C78               	retlw	120
  1964  0022A6                     u3019:
  1965                           ;format.c: 51: format_number((unsigned short int
      +                          )(x >> 16), 16, -4);
  1966  0022A6  0EFC               	movlw	252
  1967  0022A8  6F15               	movwf	(?_format_number+3)& (0+255),b
  1968  0022AA  0E10               	movlw	16
  1969  0022AC  6F14               	movwf	(?_format_number+2)& (0+255),b
  1970  0022AE  C110  F112         	movff	?_format_xint32+2,?_format_number
  1971  0022B2  C111  F113         	movff	?_format_xint32+3,?_format_number+1
  1972  0022B6  EC04  F00D         	call	_format_number
  1973                           ;format.c: 52: format_number((unsigned short int
      +                          )(x & 0xffff), 16, -4);
  1974  0022BA  0EFC               	movlw	252
  1975  0022BC  6F15               	movwf	(?_format_number+3)& (0+255),b
  1976  0022BE  0E10               	movlw	16
  1977  0022C0  6F14               	movwf	(?_format_number+2)& (0+255),b
  1978  0022C2  C10E  F112         	movff	?_format_xint32,?_format_number
  1979  0022C6  C10F  F113         	movff	?_format_xint32+1,?_format_number+1
  1980  0022CA  EF04  F00D         	goto	_format_number	;wreg free
  1981                           ;format.c: 53: }
  1982                           ; BSR set to: 1
  1983  0022CE                     __end_of_format_xint32:
  1984                           	opt stack 0
  1985                           
  1986                           	psect	text12
  1987                           ; =============== function _format_xint32 ends =
      +                          ===========
  1988                           ; *************** function _measure_freq *******
      +                          **********
  1989                           ; Defined at:
  1990                           ;		line 299 in file "../../../src/LC-meter.c"
  1991                           ; Parameters:
  1992                           ;		None
  1993                           ; Auto variables:
  1994                           ;		prev        	       	type: unsigned char 
  1995                           ;		count       	       	type: unsigned short 
  1996                           ;		i           	       	type: unsigned char 
  1997                           ; Return value:
  1998                           ;		type: unsigned short 
  1999                           ;		size: 2
  2000                           ; Registers used:
  2001                           ;		wreg, fsr1l, fsr2l, status,2, status,0, prodl
      +                          , prodh
  2002                           ; Tracked objects:
  2003                           ;		On entry : F/1
  2004                           ;		On exit  : F/1
  2005                           ;		Unchanged: 0/0
  2006                           ; Data sizes:
  2007                           ;		Autos:    0
  2008                           ;		Params:   2
  2009                           ;		Temp:     2
  2010                           ;		Total:    4
  2011                           ; This function calls:
  2012                           ;		__delay
  2013                           ; This function is called by:
  2014                           ;		_calibrate
  2015                           ;		_measure_capacitance
  2016                           ;		_measure_inductance
  2017                           ; This function uses a non-reentrant model
  2018                           ; 
  2019  000000                     
  2020                           ;LC-meter.c: 298: unsigned short int
  2021                           ;LC-meter.c: 299: measure_freq() {
  2022  00203E                     _measure_freq:
  2023                           	opt stack 28
  2024                           ; BSR set to: 1
  2025                           ;LC-meter.c: 300: unsigned char prev;
  2026                           ;LC-meter.c: 301: unsigned short int count;
  2027                           ;LC-meter.c: 303: TMR0IF = 0;
  2028  00203E  94F2               	bcf	intcon,2,c	;volatile
  2029                           ;LC-meter.c: 305: TRISA &= ~0b00010000;
  2030  002040  9892               	bcf	3986,4,c	;volatile
  2031                           ;LC-meter.c: 308: _delay((unsigned long)((20)*(2
      +                          0000000/4000.0)));
  2032  002042  0E82               	movlw	130
  2033  002044  6F20               	movwf	??_measure_freq& (0+255),b
  2034  002046  0EDD               	movlw	221
  2035  002048                     u4187:
  2036  002048  2EE8               	decfsz	wreg,f,c
  2037  00204A  D7FE               	goto	u4187
  2038  00204C  2F20               	decfsz	??_measure_freq& (0+255),f,b
  2039  00204E  D7FC               	goto	u4187
  2040  002050  D000               	nop2	
  2041                           ;LC-meter.c: 310: TMR0 = 0x00;
  2042  002052  6AD6               	clrf	4054,c	;volatile
  2043  002054  6AD7               	clrf	4055,c	;volatile
  2044                           ;LC-meter.c: 312: for(char i = 0; i < 10; i++) _
      +                          delay((unsigned long)((10)*(20000000/4000.0)));
  2045  002056  6AD9               	clrf	fsr2l,c
  2046  002058                     l1707:
  2047                           ; BSR set to: ?
  2048  002058  0E41               	movlw	65
  2049  00205A  0101               	movlb	1	; () banked
  2050  00205C  6F20               	movwf	??_measure_freq& (0+255),b
  2051  00205E  0EEE               	movlw	238
  2052  002060                     u4197:
  2053  002060  2EE8               	decfsz	wreg,f,c
  2054  002062  D7FE               	goto	u4197
  2055  002064  2F20               	decfsz	??_measure_freq& (0+255),f,b
  2056  002066  D7FC               	goto	u4197
  2057  002068  0004               	clrwdt	
  2058  00206A  2AD9               	incf	fsr2l,f,c
  2059  00206C  0E09               	movlw	9
  2060  00206E  64D9               	cpfsgt	fsr2l,c
  2061  002070  D7F3               	goto	l1707
  2062                           ; BSR set to: ?
  2063                           ;LC-meter.c: 314: TRISA |= 0b00010000;
  2064  002072  8892               	bsf	3986,4,c	;volatile
  2065                           ;LC-meter.c: 316: prev = TMR0;
  2066  002074  CFD6 FFE1          	movff	4054,fsr1l	;volatile
  2067                           ;LC-meter.c: 317: count = 0;
  2068  002078  6AF3               	clrf	prodl,c
  2069  00207A  6AF4               	clrf	prodh,c
  2070  00207C  D005               	goto	l1712
  2071  00207E                     u3130:
  2072  00207E  0E00               	movlw	0
  2073  002080  5CF3               	subwf	prodl,w,c
  2074  002082  0E01               	movlw	1
  2075  002084  58F4               	subwfb	prodh,w,c
  2076  002086  E20C               	bc	l1711
  2077                           ;LC-meter.c: 319: do {
  2078  002088                     l1712:
  2079                           ; BSR set to: ?
  2080                           ;LC-meter.c: 321: T0SE = 1;
  2081  002088  88D5               	bsf	4053,4,c	;volatile
  2082  00208A  F000               	nop		;#
  2083  00208C  F000               	nop		;#
  2084                           ;LC-meter.c: 322: asm(" nop");
  2085                           ;LC-meter.c: 323: asm(" nop");
  2086                           ;LC-meter.c: 325: T0SE = 0;
  2087  00208E  98D5               	bcf	4053,4,c	;volatile
  2088  002090  F000               	nop		;#
  2089  002092  F000               	nop		;#
  2090                           ;LC-meter.c: 326: asm(" nop");
  2091                           ;LC-meter.c: 327: asm(" nop");
  2092                           ;LC-meter.c: 328: count++;
  2093  002094  4AF3               	infsnz	prodl,f,c
  2094  002096  2AF4               	incf	prodh,f,c
  2095                           ;LC-meter.c: 329: } while(prev == TMR0 && count 
      +                          <= 255);
  2096  002098  50E1               	movf	fsr1l,w,c
  2097  00209A  18D6               	xorwf	4054,w,c	;volatile
  2098  00209C  10D7               	iorwf	4055,w,c	;volatile
  2099  00209E  E0EF               	bz	u3130
  2100                           ; BSR set to: ?
  2101  0020A0                     l1711:
  2102                           ; BSR set to: ?
  2103                           ;LC-meter.c: 332: count = ((prev << 8) + (256 - 
      +                          count));
  2104  0020A0  50E1               	movf	fsr1l,w,c
  2105  0020A2  0101               	movlb	1	; () banked
  2106  0020A4  6F21               	movwf	(??_measure_freq+1)& (0+255),b
  2107  0020A6  6B20               	clrf	??_measure_freq& (0+255),b
  2108  0020A8  50F3               	movf	prodl,w,c
  2109  0020AA  5F20               	subwf	??_measure_freq& (0+255),f,b
  2110  0020AC  50F4               	movf	prodh,w,c
  2111  0020AE  5B21               	subwfb	(??_measure_freq+1)& (0+255),f,b
  2112  0020B0  0E00               	movlw	0
  2113  0020B2  2520               	addwf	??_measure_freq& (0+255),w,b
  2114  0020B4  6EF3               	movwf	prodl,c
  2115  0020B6  0E01               	movlw	1
  2116  0020B8  2121               	addwfc	(??_measure_freq+1)& (0+255),w,b
  2117  0020BA  6EF4               	movwf	prodh,c
  2118  0020BC  CFF3 F11E          	movff	prodl,?_measure_freq
  2119  0020C0  CFF4 F11F          	movff	prodh,?_measure_freq+1
  2120                           ;LC-meter.c: 340: }
  2121                           ; BSR set to: 1
  2122  0020C4  0012               	return	
  2123  0020C6                     __end_of_measure_freq:
  2124                           	opt stack 0
  2125                           
  2126                           	psect	text13
  2127                           ; =============== function _measure_freq ends ==
      +                          ==========
  2128                           ; *************** function _delay10ms **********
      +                          *******
  2129                           ; Defined at:
  2130                           ;		line 532 in file "../../../src/LC-meter.c"
  2131                           ; Parameters:
  2132                           ;		period_10ms    size:   2offs:   0	type: unsig
      +                          ned short 
  2133                           ; Auto variables:
  2134                           ;		run         	       	type: unsigned char 
  2135                           ;		ms          	       	type: unsigned long 
  2136                           ; Return value:
  2137                           ;		type: void 
  2138                           ;		size: 0
  2139                           ; Registers used:
  2140                           ;		wreg, fsr2l, status,2, status,0, prodl, prodh
      +                          , cstack
  2141                           ; Tracked objects:
  2142                           ;		On entry : F/1
  2143                           ;		On exit  : F/1
  2144                           ;		Unchanged: FFFFFFF0/0
  2145                           ; Data sizes:
  2146                           ;		Autos:    4
  2147                           ;		Params:   2
  2148                           ;		Temp:     0
  2149                           ;		Total:    6
  2150                           ; This function calls:
  2151                           ;		___wmul
  2152                           ; This function is called by:
  2153                           ;		_main
  2154                           ;		_calibrate
  2155                           ; This function uses a non-reentrant model
  2156                           ; 
  2157  000000                     
  2158                           ;LC-meter.c: 531: void
  2159                           ;LC-meter.c: 532: delay10ms(unsigned short int p
      +                          eriod_10ms) {
  2160  00221E                     _delay10ms:
  2161                           	opt stack 28
  2162                           ; BSR set to: 1
  2163  00221E  0E01               	movlw	1
  2164  002220  6ED9               	movwf	fsr2l,c
  2165                           ;LC-meter.c: 539: GIE = 0, ms = msecs, GIE = 1;
  2166  002222  9EF2               	bcf	intcon,7,c	;volatile
  2167  002224  C034 F102          	movff	52,??_delay10ms	;volatile
  2168  002228  C035 F103          	movff	53,??_delay10ms+1	;volatile
  2169  00222C  C036 F104          	movff	54,??_delay10ms+2	;volatile
  2170  002230  C037 F105          	movff	55,??_delay10ms+3	;volatile
  2171  002234  8EF2               	bsf	intcon,7,c	;volatile
  2172                           ;LC-meter.c: 544: ms += period_10ms * 10;
  2173  002236  0E0A               	movlw	10
  2174  002238  6F08               	movwf	(?___wmul+2)& (0+255),b
  2175  00223A  0E00               	movlw	0
  2176  00223C  6B09               	clrf	(?___wmul+3)& (0+255),b
  2177  00223E  C100  F106         	movff	?_delay10ms,?___wmul
  2178  002242  C101  F107         	movff	?_delay10ms+1,?___wmul+1
  2179  002246  ECE4  F012         	call	___wmul	;wreg free
  2180  00224A  5106               	movf	?___wmul& (0+255),w,b
  2181  00224C  2702               	addwf	??_delay10ms& (0+255),f,b
  2182  00224E  5107               	movf	(?___wmul+1)& (0+255),w,b
  2183  002250  2303               	addwfc	(??_delay10ms+1)& (0+255),f,b
  2184  002252  0E00               	movlw	0
  2185  002254  2304               	addwfc	(??_delay10ms+2)& (0+255),f,b
  2186  002256  2305               	addwfc	(??_delay10ms+3)& (0+255),f,b
  2187                           ;LC-meter.c: 547: do {
  2188  002258                     l1733:
  2189                           ; BSR set to: 1
  2190                           ;LC-meter.c: 548: GIE = 0;
  2191  002258  9EF2               	bcf	intcon,7,c	;volatile
  2192                           ;LC-meter.c: 549: if(ms <= msecs)
  2193  00225A  5102               	movf	??_delay10ms& (0+255),w,b
  2194  00225C  5C34               	subwf	52,w,c	;volatile
  2195  00225E  5103               	movf	(??_delay10ms+1)& (0+255),w,b
  2196  002260  5835               	subwfb	53,w,c	;volatile
  2197  002262  5104               	movf	(??_delay10ms+2)& (0+255),w,b
  2198  002264  5836               	subwfb	54,w,c	;volatile
  2199  002266  5105               	movf	(??_delay10ms+3)& (0+255),w,b
  2200  002268  5837               	subwfb	55,w,c	;volatile
  2201  00226A  B0D8               	btfsc	status,0,c
  2202                           ;LC-meter.c: 550: run = 0;
  2203  00226C  6AD9               	clrf	fsr2l,c
  2204                           ; BSR set to: 1
  2205                           ;LC-meter.c: 551: GIE = 1;
  2206  00226E  8EF2               	bsf	intcon,7,c	;volatile
  2207                           ;LC-meter.c: 552: } while(run);
  2208  002270  66D9               	tstfsz	fsr2l,c
  2209  002272  D7F2               	goto	l1733
  2210                           ; BSR set to: 1
  2211                           ;LC-meter.c: 553: }
  2212                           ; BSR set to: 1
  2213  002274  0012               	return	
  2214  002276                     __end_of_delay10ms:
  2215                           	opt stack 0
  2216                           
  2217                           	psect	text14
  2218                           ; =============== function _delay10ms ends =====
      +                          =======
  2219                           ; *************** function _ser_puts ***********
      +                          ******
  2220                           ; Defined at:
  2221                           ;		line 92 in file "../../../lib/ser.c"
  2222                           ; Parameters:
  2223                           ;		s              size:   1reg:   wre	type: PTR 
      +                          const unsigned char ; Largest target is 8
  2224                           ;		 -> STR_11(3), STR_10(5), STR_9(3), STR_8(8),
      +                           
  2225                           ;		 -> STR_7(6), STR_6(6), STR_5(6), STR_4(5), 
  2226                           ;		 -> STR_3(3), STR_2(3), STR_1(6), 
  2227                           ; Auto variables:
  2228                           ;		None
  2229                           ; Return value:
  2230                           ;		type: void 
  2231                           ;		size: 0
  2232                           ; Registers used:
  2233                           ;		wreg, fsr0l, fsr0h, fsr1l, fsr2l, status,2, s
      +                          tatus,0, tblptrl, tblptrh, tblptru, tablat, csta
      +                          ck
  2234                           ; Tracked objects:
  2235                           ;		On entry : E/1
  2236                           ;		On exit  : E/1
  2237                           ;		Unchanged: FFFFFFFF/0
  2238                           ; Data sizes:
  2239                           ;		Autos:    0
  2240                           ;		Params:   0
  2241                           ;		Temp:     0
  2242                           ;		Total:    0
  2243                           ; This function calls:
  2244                           ;		_ser_putch
  2245                           ; This function is called by:
  2246                           ;		_main
  2247                           ;		_calibrate
  2248                           ;		_measure_capacitance
  2249                           ; This function uses a non-reentrant model
  2250                           ; 
  2251  000000                     
  2252                           ;ser.c: 91: void
  2253                           ;ser.c: 92: ser_puts(const char* s) {
  2254  0025F4                     _ser_puts:
  2255                           	opt stack 28
  2256                           ; BSR set to: ?
  2257                           ; ser_puts@s loaded to fsr1l
  2258  0025F4  CFE8 FFE1          	movff	wreg,fsr1l
  2259  0025F8                     l486:
  2260                           ; BSR set to: ?
  2261  0025F8  CFE1 FFF6          	movff	fsr1l,tblptrl
  2262  0025FC  0E08               	movlw	high __Lsmallconst
  2263  0025FE  6EF7               	movwf	tblptrh,c
  2264  002600  0008               	tblrd		*
  2265  002602  50F5               	movf	tablat,w,c
  2266  002604  E00A               	bz	u3100
  2267                           ; BSR set to: ?
  2268  002606  CFE1 FFF6          	movff	fsr1l,tblptrl
  2269  00260A  0E08               	movlw	high __Lsmallconst
  2270  00260C  6EF7               	movwf	tblptrh,c
  2271  00260E  0008               	tblrd		*
  2272  002610  50F5               	movf	tablat,w,c
  2273  002612  EC0E  F013         	call	_ser_putch
  2274  002616  2AE1               	incf	fsr1l,f,c
  2275  002618  D7EF               	goto	l486
  2276  00261A                     u3100:
  2277                           ; BSR set to: ?
  2278                           ;ser.c: 94: }
  2279                           ; BSR set to: ?
  2280  00261A  0012               	return	
  2281  00261C                     __end_of_ser_puts:
  2282                           	opt stack 0
  2283                           
  2284                           	psect	text15
  2285                           ; =============== function _ser_puts ends ======
      +                          ======
  2286                           ; *************** function ___lwtofl ***********
      +                          ******
  2287                           ; Defined at:
  2288                           ;		line 16 in file "C:\Program Files (x86)\HI-TE
      +                          CH Software\PICC-18\PRO\9.66\sources\lwtofl.c"
  2289                           ; Parameters:
  2290                           ;		c              size:   2offs:   0	type: unsig
      +                          ned int 
  2291                           ; Auto variables:
  2292                           ;		f1          	       	type: unsigned int 
  2293                           ; Return value:
  2294                           ;		type: unsigned int 
  2295                           ;		size: 4
  2296                           ; Registers used:
  2297                           ;		wreg, fsr0l, fsr0h, status,2, status,0, cstac
      +                          k
  2298                           ; Tracked objects:
  2299                           ;		On entry : F/1
  2300                           ;		On exit  : F/1
  2301                           ;		Unchanged: FFFFFFF0/0
  2302                           ; Data sizes:
  2303                           ;		Autos:    4
  2304                           ;		Params:   4
  2305                           ;		Temp:     0
  2306                           ;		Total:    8
  2307                           ; This function calls:
  2308                           ;		___flpack
  2309                           ; This function is called by:
  2310                           ;		_calibrate
  2311                           ;		_measure_capacitance
  2312                           ;		_measure_inductance
  2313                           ; This function uses a non-reentrant model
  2314                           ; 
  2315  000000                     
  2316  00251A                     ___lwtofl:
  2317                           	opt stack 28
  2318                           ; BSR set to: 1
  2319  00251A  511F               	movf	(?___lwtofl+1)& (0+255),w,b
  2320  00251C  111E               	iorwf	?___lwtofl& (0+255),w,b
  2321  00251E  E105               	bnz	l2097
  2322  002520  6B1E               	clrf	?___lwtofl& (0+255),b
  2323  002522  6B1F               	clrf	(?___lwtofl+1)& (0+255),b
  2324  002524  6B20               	clrf	(?___lwtofl+2)& (0+255),b
  2325  002526  6B21               	clrf	(?___lwtofl+3)& (0+255),b
  2326  002528  D016               	goto	l2096
  2327  00252A                     l2097:
  2328                           ; BSR set to: 1
  2329  00252A  C11E  F122         	movff	?___lwtofl,??___lwtofl
  2330  00252E  C11F  F123         	movff	?___lwtofl+1,??___lwtofl+1
  2331  002532  6B24               	clrf	(??___lwtofl+2)& (0+255),b
  2332  002534  6B25               	clrf	(??___lwtofl+3)& (0+255),b
  2333  002536  0E96               	movlw	150
  2334  002538  6F65               	movwf	(?___flpack+2)& (0+255),b
  2335  00253A  0E22               	movlw	low ??___lwtofl
  2336  00253C  6F63               	movwf	?___flpack& (0+255),b
  2337  00253E  0E01               	movlw	high ??___lwtofl
  2338  002540  6F64               	movwf	(?___flpack+1)& (0+255),b
  2339  002542  EC92  F00C         	call	___flpack	;wreg free
  2340  002546  C122  F11E         	movff	??___lwtofl,?___lwtofl
  2341  00254A  C123  F11F         	movff	??___lwtofl+1,?___lwtofl+1
  2342  00254E  C124  F120         	movff	??___lwtofl+2,?___lwtofl+2
  2343  002552  C125  F121         	movff	??___lwtofl+3,?___lwtofl+3
  2344  002556                     l2096:
  2345                           ; BSR set to: 1
  2346  002556  0012               	return	
  2347  002558                     __end_of___lwtofl:
  2348                           	opt stack 0
  2349                           
  2350                           	psect	text16
  2351                           ; =============== function ___lwtofl ends ======
      +                          ======
  2352                           ; *************** function ___wmul *************
      +                          ****
  2353                           ; Defined at:
  2354                           ;		line 3 in file "C:\Program Files (x86)\HI-TEC
      +                          H Software\PICC-18\PRO\9.66\sources\wmul.c"
  2355                           ; Parameters:
  2356                           ;		multiplier     size:   2offs:   0	type: unsig
      +                          ned int 
  2357                           ;		multiplicand   size:   2offs:   2	type: unsig
      +                          ned int 
  2358                           ; Auto variables:
  2359                           ;		product     	       	type: unsigned int 
  2360                           ; Return value:
  2361                           ;		type: unsigned int 
  2362                           ;		size: 2
  2363                           ; Registers used:
  2364                           ;		wreg, status,2, status,0, prodl, prodh
  2365                           ; Tracked objects:
  2366                           ;		On entry : F/1
  2367                           ;		On exit  : F/1
  2368                           ;		Unchanged: FFFFFFF0/0
  2369                           ; Data sizes:
  2370                           ;		Autos:    0
  2371                           ;		Params:   4
  2372                           ;		Temp:     0
  2373                           ;		Total:    4
  2374                           ; This function calls:
  2375                           ;		Nothing
  2376                           ; This function is called by:
  2377                           ;		_delay10ms
  2378                           ; This function uses a non-reentrant model
  2379                           ; 
  2380  000000                     
  2381  0025C8                     ___wmul:
  2382                           	opt stack 27
  2383                           ; BSR set to: 1
  2384  0025C8  6AF3               	clrf	prodl,c
  2385  0025CA  6AF4               	clrf	prodh,c
  2386  0025CC                     l2103:
  2387                           ; BSR set to: 1
  2388  0025CC  A106               	btfss	?___wmul& (0+255),0,b
  2389  0025CE  D004               	goto	l2104
  2390  0025D0  5108               	movf	(?___wmul+2)& (0+255),w,b
  2391  0025D2  26F3               	addwf	prodl,f,c
  2392  0025D4  5109               	movf	(?___wmul+3)& (0+255),w,b
  2393  0025D6  22F4               	addwfc	prodh,f,c
  2394  0025D8                     l2104:
  2395                           ; BSR set to: 1
  2396  0025D8  90D8               	bcf	status,0,c
  2397  0025DA  3708               	rlcf	(?___wmul+2)& (0+255),f,b
  2398  0025DC  3709               	rlcf	(?___wmul+3)& (0+255),f,b
  2399  0025DE  90D8               	bcf	status,0,c
  2400  0025E0  3307               	rrcf	(?___wmul+1)& (0+255),f,b
  2401  0025E2  3306               	rrcf	?___wmul& (0+255),f,b
  2402  0025E4  5107               	movf	(?___wmul+1)& (0+255),w,b
  2403  0025E6  1106               	iorwf	?___wmul& (0+255),w,b
  2404  0025E8  E1F1               	bnz	l2103
  2405                           ; BSR set to: 1
  2406  0025EA  CFF3 F106          	movff	prodl,?___wmul
  2407  0025EE  CFF4 F107          	movff	prodh,?___wmul+1
  2408                           ; BSR set to: 1
  2409  0025F2  0012               	return	
  2410  0025F4                     __end_of___wmul:
  2411                           	opt stack 0
  2412                           
  2413                           	psect	text17
  2414                           ; =============== function ___wmul ends ========
      +                          ====
  2415                           ; *************** function _log10 **************
      +                          ***
  2416                           ; Defined at:
  2417                           ;		line 40 in file "C:\Program Files (x86)\HI-TE
      +                          CH Software\PICC-18\PRO\9.66\sources\log.c"
  2418                           ; Parameters:
  2419                           ;		x              size:   4offs:   0	type: unsig
      +                          ned int 
  2420                           ; Auto variables:
  2421                           ;		None
  2422                           ; Return value:
  2423                           ;		type: unsigned int 
  2424                           ;		size: 4
  2425                           ; Registers used:
  2426                           ;		wreg, fsr0l, fsr0h, fsr2l, status,2, status,0
      +                          , tblptrl, tblptrh, tblptru, tablat, prodl, prod
      +                          h, cstack
  2427                           ; Tracked objects:
  2428                           ;		On entry : F/1
  2429                           ;		On exit  : F/1
  2430                           ;		Unchanged: FFFFFFF0/0
  2431                           ; Data sizes:
  2432                           ;		Autos:    0
  2433                           ;		Params:   4
  2434                           ;		Temp:     0
  2435                           ;		Total:    4
  2436                           ; This function calls:
  2437                           ;		_log
  2438                           ;		___flmul
  2439                           ; This function is called by:
  2440                           ;		_format_double
  2441                           ; This function uses a non-reentrant model
  2442                           ; 
  2443  000000                     
  2444  002324                     _log10:
  2445                           	opt stack 27
  2446                           ; BSR set to: 1
  2447  002324  C122  F12F         	movff	?_log10,?_log
  2448  002328  C123  F130         	movff	?_log10+1,?_log+1
  2449  00232C  C124  F131         	movff	?_log10+2,?_log+2
  2450  002330  C125  F132         	movff	?_log10+3,?_log+3
  2451  002334  ECA5  F009         	call	_log	;wreg free
  2452  002338  C12F  F155         	movff	?_log,?___flmul
  2453  00233C  C130  F156         	movff	?_log+1,?___flmul+1
  2454  002340  C131  F157         	movff	?_log+2,?___flmul+2
  2455  002344  C132  F158         	movff	?_log+3,?___flmul+3
  2456  002348  0ED9               	movlw	217
  2457  00234A  6F59               	movwf	(?___flmul+4)& (0+255),b
  2458  00234C  0E5B               	movlw	91
  2459  00234E  6F5A               	movwf	(?___flmul+5)& (0+255),b
  2460  002350  0EDE               	movlw	222
  2461  002352  6F5B               	movwf	(?___flmul+6)& (0+255),b
  2462  002354  0E3E               	movlw	62
  2463  002356  6F5C               	movwf	(?___flmul+7)& (0+255),b
  2464  002358  ECDC  F00D         	call	___flmul	;wreg free
  2465  00235C  C155  F122         	movff	?___flmul,?_log10
  2466  002360  C156  F123         	movff	?___flmul+1,?_log10+1
  2467  002364  C157  F124         	movff	?___flmul+2,?_log10+2
  2468  002368  C158  F125         	movff	?___flmul+3,?_log10+3
  2469                           ; BSR set to: 1
  2470  00236C  0012               	return	
  2471  00236E                     __end_of_log10:
  2472                           	opt stack 0
  2473                           
  2474                           	psect	text18
  2475                           ; =============== function _log10 ends =========
      +                          ===
  2476                           ; *************** function _format_number ******
      +                          ***********
  2477                           ; Defined at:
  2478                           ;		line 14 in file "../../../lib/format.c"
  2479                           ; Parameters:
  2480                           ;		n              size:   2offs:   0	type: unsig
      +                          ned short 
  2481                           ;		base           size:   1offs:   2	type: unsig
      +                          ned char 
  2482                           ;		pad            size:   1offs:   3	type: char 
  2483                           ; Auto variables:
  2484                           ;		padchar     	       	type: unsigned char 
  2485                           ;		di          	       	type: unsigned char 
  2486                           ;		i           	       	type: char 
  2487                           ;		buf         	       	type: unsigned char [32]
  2488                           ; Return value:
  2489                           ;		type: void 
  2490                           ;		size: 0
  2491                           ; Registers used:
  2492                           ;		wreg, fsr0l, fsr0h, fsr1l, fsr2l, status,2, s
      +                          tatus,0, pclat, tosl, prodl, prodh, cstack
  2493                           ; Tracked objects:
  2494                           ;		On entry : F/1
  2495                           ;		On exit  : F/1
  2496                           ;		Unchanged: FFFFFFF0/0
  2497                           ; Data sizes:
  2498                           ;		Autos:   36
  2499                           ;		Params:   4
  2500                           ;		Temp:     1
  2501                           ;		Total:   41
  2502                           ; This function calls:
  2503                           ;		___lwmod
  2504                           ;		___lwdiv
  2505                           ;		_output_putch
  2506                           ;		_ser_putch
  2507                           ;		_format_putchar
  2508                           ; This function is called by:
  2509                           ;		_format_xint32
  2510                           ; This function uses a non-reentrant model
  2511                           ; 
  2512  000000                     
  2513                           ;format.c: 10: putchar_fn* putchar_ptr = &format
      +                          _putchar;
  2514                           ;format.c: 13: void
  2515                           ;format.c: 14: format_number( unsigned short int
      +                           n, unsigned char base, signed char pad ) {
  2516  001A08                     _format_number:
  2517                           	opt stack 27
  2518                           ; BSR set to: 1
  2519  001A08  6B19               	clrf	(??_format_number+3)& (0+255),b
  2520                           ;format.c: 18: char padchar = ' ';
  2521  001A0A  0E20               	movlw	32
  2522  001A0C  6F18               	movwf	(??_format_number+2)& (0+255),b
  2523                           ;format.c: 20: if(pad < 0) {
  2524  001A0E  AF15               	btfss	(?_format_number+3)& (0+255),7,b
  2525  001A10  D003               	goto	l969
  2526                           ;format.c: 21: pad = -pad;
  2527  001A12  6D15               	negf	(?_format_number+3)& (0+255),b
  2528                           ;format.c: 22: padchar = '0';
  2529  001A14  0E30               	movlw	48
  2530  001A16  6F18               	movwf	(??_format_number+2)& (0+255),b
  2531                           ; BSR set to: 1
  2532                           ;format.c: 23: }
  2533                           ;format.c: 30: do {
  2534  001A18                     l969:
  2535                           ; BSR set to: 1
  2536                           ;format.c: 34: di = n % base;
  2537  001A18  C114  F13D         	movff	?_format_number+2,?___lwmod+2
  2538  001A1C  6B3E               	clrf	(?___lwmod+3)& (0+255),b
  2539  001A1E  C112  F13B         	movff	?_format_number,?___lwmod
  2540  001A22  C113  F13C         	movff	?_format_number+1,?___lwmod+1
  2541  001A26  ECC9  F012         	call	___lwmod	;wreg free
  2542  001A2A  513B               	movf	?___lwmod& (0+255),w,b
  2543  001A2C  6EE1               	movwf	fsr1l,c
  2544                           ;format.c: 35: buf[i++] = (di < 10 ? (unsigned c
      +                          har)'0' + di : (unsigned char)'A' + di - 10);
  2545  001A2E  0F37               	addlw	55
  2546  001A30  6F16               	movwf	??_format_number& (0+255),b
  2547  001A32  6B17               	clrf	(??_format_number+1)& (0+255),b
  2548  001A34  0E00               	movlw	0
  2549  001A36  2317               	addwfc	(??_format_number+1)& (0+255),f,b
  2550  001A38  0E0A               	movlw	10
  2551  001A3A  60E1               	cpfslt	fsr1l,c
  2552  001A3C  D006               	goto	l500000737
  2553  001A3E  0E30               	movlw	48
  2554  001A40  24E1               	addwf	fsr1l,w,c
  2555  001A42  6F16               	movwf	??_format_number& (0+255),b
  2556  001A44  6B17               	clrf	(??_format_number+1)& (0+255),b
  2557  001A46  0E00               	movlw	0
  2558  001A48  2317               	addwfc	(??_format_number+1)& (0+255),f,b
  2559  001A4A                     l500000737:
  2560                           ; BSR set to: 1
  2561  001A4A  0E1A               	movlw	low (??_format_number+4)
  2562  001A4C  2519               	addwf	(??_format_number+3)& (0+255),w,b
  2563  001A4E  6EE9               	movwf	fsr0l,c
  2564  001A50  6AEA               	clrf	fsr0h,c
  2565  001A52  0E01               	movlw	high (??_format_number+4)
  2566  001A54  22EA               	addwfc	fsr0h,f,c
  2567  001A56  C116  FFEF         	movff	??_format_number,indf0
  2568  001A5A  2B19               	incf	(??_format_number+3)& (0+255),f,b
  2569                           ;format.c: 37: n /= base;
  2570  001A5C  C114  F13D         	movff	?_format_number+2,?___lwdiv+2
  2571  001A60  6B3E               	clrf	(?___lwdiv+3)& (0+255),b
  2572  001A62  C112  F13B         	movff	?_format_number,?___lwdiv
  2573  001A66  C113  F13C         	movff	?_format_number+1,?___lwdiv+1
  2574  001A6A  ECB7  F011         	call	___lwdiv	;wreg free
  2575  001A6E  C13B  F112         	movff	?___lwdiv,?_format_number
  2576  001A72  C13C  F113         	movff	?___lwdiv+1,?_format_number+1
  2577                           ;format.c: 38: } while(n > 0);
  2578  001A76  5113               	movf	(?_format_number+1)& (0+255),w,b
  2579  001A78  1112               	iorwf	?_format_number& (0+255),w,b
  2580  001A7A  E00E               	bz	l970
  2581  001A7C  D7CD               	goto	l969
  2582                           ; BSR set to: 1
  2583                           ;format.c: 40: while(pad-- > i) putchar_ptr(padc
      +                          har);
  2584  001A7E                     l971:
  2585                           ; BSR set to: 1
  2586  001A7E  D801               	call	u3258
  2587  001A80  D00B               	goto	l970
  2588  001A82                     u3258:
  2589  001A82  0005               	push	
  2590  001A84  6EFA               	movwf	pclath,c
  2591  001A86  5047               	movf	71,w,c
  2592  001A88  6EFD               	movwf	tosl,c
  2593  001A8A  5048               	movf	72,w,c
  2594  001A8C  6EFE               	movwf	tosh,c
  2595  001A8E  50F8               	movf	tblptru,w,c
  2596  001A90  6EFF               	movwf	tosu,c
  2597  001A92  50FA               	movf	pclath,w,c
  2598  001A94  5118               	movf	(??_format_number+2)& (0+255),w,b
  2599  001A96  0012               	return	
  2600  001A98                     l970:
  2601                           ; BSR set to: 1
  2602  001A98  5119               	movf	(??_format_number+3)& (0+255),w,b
  2603  001A9A  0A80               	xorlw	128
  2604  001A9C  6F3A               	movwf	(??_format_number+36)& (0+255),b
  2605  001A9E  0715               	decf	(?_format_number+3)& (0+255),f,b
  2606  001AA0  2915               	incf	(?_format_number+3)& (0+255),w,b
  2607  001AA2  0A80               	xorlw	128
  2608  001AA4  5D3A               	subwf	(??_format_number+36)& (0+255),w,b
  2609  001AA6  E3EB               	bnc	l971
  2610                           ; BSR set to: 1
  2611                           ;format.c: 42: for(; i > 0; i--) putchar_ptr((ch
      +                          ar)buf[(signed short int)i - 1]);
  2612  001AA8  5119               	movf	(??_format_number+3)& (0+255),w,b
  2613  001AAA  0A80               	xorlw	128
  2614  001AAC  0F7F               	addlw	-129
  2615  001AAE  E31C               	bnc	l974
  2616  001AB0                     l973:
  2617                           ; BSR set to: 1
  2618  001AB0  D801               	call	u3288
  2619  001AB2  D015               	goto	u3289
  2620  001AB4                     u3288:
  2621  001AB4  0005               	push	
  2622  001AB6  6EFA               	movwf	pclath,c
  2623  001AB8  5047               	movf	71,w,c
  2624  001ABA  6EFD               	movwf	tosl,c
  2625  001ABC  5048               	movf	72,w,c
  2626  001ABE  6EFE               	movwf	tosh,c
  2627  001AC0  50F8               	movf	tblptru,w,c
  2628  001AC2  6EFF               	movwf	tosu,c
  2629  001AC4  50FA               	movf	pclath,w,c
  2630  001AC6  C119  F13A         	movff	??_format_number+3,??_format_number+36
  2631  001ACA  0EFF               	movlw	-1
  2632  001ACC  273A               	addwf	(??_format_number+36)& (0+255),f,b
  2633  001ACE  0E1A               	movlw	low (??_format_number+4)
  2634  001AD0  253A               	addwf	(??_format_number+36)& (0+255),w,b
  2635  001AD2  6EE9               	movwf	fsr0l,c
  2636  001AD4  6AEA               	clrf	fsr0h,c
  2637  001AD6  0E01               	movlw	high (??_format_number+4)
  2638  001AD8  22EA               	addwfc	fsr0h,f,c
  2639  001ADA  50EF               	movf	indf0,w,c
  2640  001ADC  0012               	return	
  2641  001ADE                     u3289:
  2642  001ADE  0719               	decf	(??_format_number+3)& (0+255),f,b
  2643  001AE0  5119               	movf	(??_format_number+3)& (0+255),w,b
  2644  001AE2  0A80               	xorlw	128
  2645  001AE4  0F7F               	addlw	-129
  2646  001AE6  E2E4               	bc	l973
  2647  001AE8                     l974:
  2648                           ; BSR set to: 1
  2649                           ;format.c: 44: }
  2650                           ; BSR set to: 1
  2651  001AE8  0012               	return	
  2652  001AEA                     __end_of_format_number:
  2653                           	opt stack 0
  2654                           
  2655                           	psect	text19
  2656                           ; =============== function _format_number ends =
      +                          ===========
  2657                           ; *************** function _pow ****************
      +                          *
  2658                           ; Defined at:
  2659                           ;		line 6 in file "C:\Program Files (x86)\HI-TEC
      +                          H Software\PICC-18\PRO\9.66\sources\pow.c"
  2660                           ; Parameters:
  2661                           ;		x              size:   4offs:   0	type: void 
  2662                           ;		y              size:   4offs:   4	type: void 
  2663                           ; Auto variables:
  2664                           ;		sign        	       	type: unsigned char 
  2665                           ;		yi          	       	type: unsigned long 
  2666                           ; Return value:
  2667                           ;		type: unsigned long 
  2668                           ;		size: 4
  2669                           ; Registers used:
  2670                           ;		wreg, fsr0l, fsr0h, fsr1l, fsr2l, status,2, s
      +                          tatus,0, tblptrl, tblptrh, tblptru, tablat, prod
      +                          l, prodh, cstack
  2671                           ; Tracked objects:
  2672                           ;		On entry : F/1
  2673                           ;		On exit  : F/1
  2674                           ;		Unchanged: FFFFFFF0/0
  2675                           ; Data sizes:
  2676                           ;		Autos:    5
  2677                           ;		Params:   8
  2678                           ;		Temp:     0
  2679                           ;		Total:   13
  2680                           ; This function calls:
  2681                           ;		___flge
  2682                           ;		___fltol
  2683                           ;		___lltofl
  2684                           ;		___flneg
  2685                           ;		_log
  2686                           ;		___flmul
  2687                           ;		_exp
  2688                           ; This function is called by:
  2689                           ;		_format_double
  2690                           ; This function uses a non-reentrant model
  2691                           ; 
  2692  000000                     
  2693  0014AA                     _pow:
  2694                           	opt stack 27
  2695                           ; BSR set to: 1
  2696  0014AA  6B2A               	clrf	??_pow& (0+255),b
  2697  0014AC  EE01  F022         	lfsr	0,?_pow
  2698  0014B0  50EE               	movf	postinc0,w,c
  2699  0014B2  10EE               	iorwf	postinc0,w,c
  2700  0014B4  10EE               	iorwf	postinc0,w,c
  2701  0014B6  10EE               	iorwf	postinc0,w,c
  2702  0014B8  E110               	bnz	l1750
  2703  0014BA  C126  F147         	movff	?_pow+4,?___flge+4
  2704  0014BE  C127  F148         	movff	?_pow+5,?___flge+5
  2705  0014C2  C128  F149         	movff	?_pow+6,?___flge+6
  2706  0014C6  C129  F14A         	movff	?_pow+7,?___flge+7
  2707  0014CA  0E00               	movlw	0
  2708  0014CC  6B43               	clrf	?___flge& (0+255),b
  2709  0014CE  6B44               	clrf	(?___flge+1)& (0+255),b
  2710  0014D0  6B45               	clrf	(?___flge+2)& (0+255),b
  2711  0014D2  6B46               	clrf	(?___flge+3)& (0+255),b
  2712  0014D4  EC01  F012         	call	___flge
  2713  0014D8  D038               	goto	u3200
  2714                           ; BSR set to: 1
  2715  0014DA                     l1750:
  2716                           ; BSR set to: 1
  2717  0014DA  EE01  F026         	lfsr	0,?_pow+4
  2718  0014DE  50EE               	movf	postinc0,w,c
  2719  0014E0  10EE               	iorwf	postinc0,w,c
  2720  0014E2  10EE               	iorwf	postinc0,w,c
  2721  0014E4  10EE               	iorwf	postinc0,w,c
  2722  0014E6  E107               	bnz	l1752
  2723  0014E8  6B22               	clrf	?_pow& (0+255),b
  2724  0014EA  6B23               	clrf	(?_pow+1)& (0+255),b
  2725  0014EC  0E80               	movlw	128
  2726  0014EE  6F24               	movwf	(?_pow+2)& (0+255),b
  2727  0014F0  0E3F               	movlw	63
  2728  0014F2  6F25               	movwf	(?_pow+3)& (0+255),b
  2729  0014F4  D086               	goto	l1749
  2730  0014F6                     l1752:
  2731                           ; BSR set to: 1
  2732  0014F6  AF25               	btfss	(?_pow+3)& (0+255),7,b
  2733  0014F8  D042               	goto	l1753
  2734  0014FA  C126  F143         	movff	?_pow+4,?___fltol
  2735  0014FE  C127  F144         	movff	?_pow+5,?___fltol+1
  2736  001502  C128  F145         	movff	?_pow+6,?___fltol+2
  2737  001506  C129  F146         	movff	?_pow+7,?___fltol+3
  2738  00150A  ECD9  F00F         	call	___fltol	;wreg free
  2739  00150E  C143  F12B         	movff	?___fltol,??_pow+1
  2740  001512  C144  F12C         	movff	?___fltol+1,??_pow+2
  2741  001516  C145  F12D         	movff	?___fltol+2,??_pow+3
  2742  00151A  C146  F12E         	movff	?___fltol+3,??_pow+4
  2743  00151E  C12B  F12F         	movff	??_pow+1,?___lltofl
  2744  001522  C12C  F130         	movff	??_pow+2,?___lltofl+1
  2745  001526  C12D  F131         	movff	??_pow+3,?___lltofl+2
  2746  00152A  C12E  F132         	movff	??_pow+4,?___lltofl+3
  2747  00152E  ECDC  F011         	call	___lltofl	;wreg free
  2748  001532  5129               	movf	(?_pow+7)& (0+255),w,b
  2749  001534  1932               	xorwf	(?___lltofl+3)& (0+255),w,b
  2750  001536  E108               	bnz	u3205
  2751  001538  5128               	movf	(?_pow+6)& (0+255),w,b
  2752  00153A  1931               	xorwf	(?___lltofl+2)& (0+255),w,b
  2753  00153C  E105               	bnz	u3205
  2754  00153E  5127               	movf	(?_pow+5)& (0+255),w,b
  2755  001540  1930               	xorwf	(?___lltofl+1)& (0+255),w,b
  2756  001542  E102               	bnz	u3205
  2757  001544  5126               	movf	(?_pow+4)& (0+255),w,b
  2758  001546  192F               	xorwf	?___lltofl& (0+255),w,b
  2759  001548                     u3205:
  2760  001548  E005               	bz	l1754
  2761  00154A                     u3200:
  2762  00154A  6B22               	clrf	?_pow& (0+255),b
  2763  00154C  6B23               	clrf	(?_pow+1)& (0+255),b
  2764  00154E  6B24               	clrf	(?_pow+2)& (0+255),b
  2765  001550  6B25               	clrf	(?_pow+3)& (0+255),b
  2766  001552  D057               	goto	l1749
  2767  001554                     l1754:
  2768                           ; BSR set to: 1
  2769  001554  512B               	movf	(??_pow+1)& (0+255),w,b
  2770  001556  0B01               	andlw	1
  2771  001558  6F2A               	movwf	??_pow& (0+255),b
  2772  00155A  C122  F14D         	movff	?_pow,?___flneg
  2773  00155E  C123  F14E         	movff	?_pow+1,?___flneg+1
  2774  001562  C124  F14F         	movff	?_pow+2,?___flneg+2
  2775  001566  C125  F150         	movff	?_pow+3,?___flneg+3
  2776  00156A  EC33  F013         	call	___flneg	;wreg free
  2777  00156E  C14D  F122         	movff	?___flneg,?_pow
  2778  001572  C14E  F123         	movff	?___flneg+1,?_pow+1
  2779  001576  C14F  F124         	movff	?___flneg+2,?_pow+2
  2780  00157A  C150  F125         	movff	?___flneg+3,?_pow+3
  2781  00157E                     l1753:
  2782                           ; BSR set to: 1
  2783  00157E  C122  F12F         	movff	?_pow,?_log
  2784  001582  C123  F130         	movff	?_pow+1,?_log+1
  2785  001586  C124  F131         	movff	?_pow+2,?_log+2
  2786  00158A  C125  F132         	movff	?_pow+3,?_log+3
  2787  00158E  ECA5  F009         	call	_log	;wreg free
  2788  001592  C12F  F155         	movff	?_log,?___flmul
  2789  001596  C130  F156         	movff	?_log+1,?___flmul+1
  2790  00159A  C131  F157         	movff	?_log+2,?___flmul+2
  2791  00159E  C132  F158         	movff	?_log+3,?___flmul+3
  2792  0015A2  C126  F159         	movff	?_pow+4,?___flmul+4
  2793  0015A6  C127  F15A         	movff	?_pow+5,?___flmul+5
  2794  0015AA  C128  F15B         	movff	?_pow+6,?___flmul+6
  2795  0015AE  C129  F15C         	movff	?_pow+7,?___flmul+7
  2796  0015B2  ECDC  F00D         	call	___flmul	;wreg free
  2797  0015B6  C155  F12F         	movff	?___flmul,?_exp
  2798  0015BA  C156  F130         	movff	?___flmul+1,?_exp+1
  2799  0015BE  C157  F131         	movff	?___flmul+2,?_exp+2
  2800  0015C2  C158  F132         	movff	?___flmul+3,?_exp+3
  2801  0015C6  ECF3  F007         	call	_exp	;wreg free
  2802  0015CA  C12F  F122         	movff	?_exp,?_pow
  2803  0015CE  C130  F123         	movff	?_exp+1,?_pow+1
  2804  0015D2  C131  F124         	movff	?_exp+2,?_pow+2
  2805  0015D6  C132  F125         	movff	?_exp+3,?_pow+3
  2806  0015DA  512A               	movf	??_pow& (0+255),w,b
  2807  0015DC  E012               	bz	l1755
  2808  0015DE  C122  F14D         	movff	?_pow,?___flneg
  2809  0015E2  C123  F14E         	movff	?_pow+1,?___flneg+1
  2810  0015E6  C124  F14F         	movff	?_pow+2,?___flneg+2
  2811  0015EA  C125  F150         	movff	?_pow+3,?___flneg+3
  2812  0015EE  EC33  F013         	call	___flneg	;wreg free
  2813  0015F2  C14D  F122         	movff	?___flneg,?_pow
  2814  0015F6  C14E  F123         	movff	?___flneg+1,?_pow+1
  2815  0015FA  C14F  F124         	movff	?___flneg+2,?_pow+2
  2816  0015FE  C150  F125         	movff	?___flneg+3,?_pow+3
  2817  001602                     l1755:
  2818                           ; BSR set to: 1
  2819  001602                     l1749:
  2820                           ; BSR set to: 1
  2821  001602  0012               	return	
  2822  001604                     __end_of_pow:
  2823                           	opt stack 0
  2824                           
  2825                           	psect	text20
  2826                           ; =============== function _pow ends ===========
      +                          =
  2827                           ; *************** function _exp ****************
      +                          *
  2828                           ; Defined at:
  2829                           ;		line 13 in file "C:\Program Files (x86)\HI-TE
      +                          CH Software\PICC-18\PRO\9.66\sources\exp.c"
  2830                           ; Parameters:
  2831                           ;		x              size:   4offs:   0	type: unsig
      +                          ned long 
  2832                           ; Auto variables:
  2833                           ;		sign        	       	type: unsigned char 
  2834                           ;		exp         	       	type: int 
  2835                           ; Return value:
  2836                           ;		type: int 
  2837                           ;		size: 4
  2838                           ; Registers used:
  2839                           ;		wreg, fsr0l, fsr0h, fsr1l, fsr2l, status,2, s
      +                          tatus,0, tblptrl, tblptrh, tblptru, tablat, prod
      +                          l, prodh, cstack
  2840                           ; Tracked objects:
  2841                           ;		On entry : F/1
  2842                           ;		On exit  : F/1
  2843                           ;		Unchanged: FFFFFFF0/0
  2844                           ; Data sizes:
  2845                           ;		Autos:    6
  2846                           ;		Params:   4
  2847                           ;		Temp:     0
  2848                           ;		Total:   10
  2849                           ; This function calls:
  2850                           ;		___flge
  2851                           ;		___flneg
  2852                           ;		___asflmul
  2853                           ;		_floor
  2854                           ;		___fltol
  2855                           ;		___awtofl
  2856                           ;		___asflsub
  2857                           ;		_eval_poly
  2858                           ;		_ldexp
  2859                           ;		___fldiv
  2860                           ; This function is called by:
  2861                           ;		_pow
  2862                           ; This function uses a non-reentrant model
  2863                           ; 
  2864  000000                     
  2865  000FE6                     _exp:
  2866                           	opt stack 26
  2867                           ; BSR set to: 1
  2868  000FE6  EE01  F02F         	lfsr	0,?_exp
  2869  000FEA  50EE               	movf	postinc0,w,c
  2870  000FEC  10EE               	iorwf	postinc0,w,c
  2871  000FEE  10EE               	iorwf	postinc0,w,c
  2872  000FF0  10EE               	iorwf	postinc0,w,c
  2873  000FF2  E106               	bnz	l2167
  2874  000FF4  6B2F               	clrf	?_exp& (0+255),b
  2875  000FF6  6B30               	clrf	(?_exp+1)& (0+255),b
  2876  000FF8  0E80               	movlw	128
  2877  000FFA  6F31               	movwf	(?_exp+2)& (0+255),b
  2878  000FFC  0E3F               	movlw	63
  2879  000FFE  D017               	goto	L5
  2880  001000                     l2167:
  2881                           ; BSR set to: 1
  2882  001000  C12F  F147         	movff	?_exp,?___flge+4
  2883  001004  C130  F148         	movff	?_exp+1,?___flge+5
  2884  001008  C131  F149         	movff	?_exp+2,?___flge+6
  2885  00100C  C132  F14A         	movff	?_exp+3,?___flge+7
  2886  001010  0E18               	movlw	24
  2887  001012  6F43               	movwf	?___flge& (0+255),b
  2888  001014  0E72               	movlw	114
  2889  001016  6F44               	movwf	(?___flge+1)& (0+255),b
  2890  001018  0E31               	movlw	49
  2891  00101A  6F45               	movwf	(?___flge+2)& (0+255),b
  2892  00101C  0E44               	movlw	68
  2893  00101E  6F46               	movwf	(?___flge+3)& (0+255),b
  2894  001020  EC01  F012         	call	___flge	;wreg free
  2895  001024  E206               	bc	l2168
  2896  001026  692F               	setf	?_exp& (0+255),b
  2897  001028  6930               	setf	(?_exp+1)& (0+255),b
  2898  00102A  0E7F               	movlw	127
  2899  00102C  6F31               	movwf	(?_exp+2)& (0+255),b
  2900  00102E                     L5:
  2901  00102E  6F32               	movwf	(?_exp+3)& (0+255),b
  2902  001030  D0C2               	goto	l2166
  2903  001032                     l2168:
  2904                           ; BSR set to: 1
  2905  001032  0E87               	movlw	135
  2906  001034  6F47               	movwf	(?___flge+4)& (0+255),b
  2907  001036  0E48               	movlw	72
  2908  001038  6F48               	movwf	(?___flge+5)& (0+255),b
  2909  00103A  0E3A               	movlw	58
  2910  00103C  6F49               	movwf	(?___flge+6)& (0+255),b
  2911  00103E  0EC4               	movlw	196
  2912  001040  6F4A               	movwf	(?___flge+7)& (0+255),b
  2913  001042  C12F  F143         	movff	?_exp,?___flge
  2914  001046  C130  F144         	movff	?_exp+1,?___flge+1
  2915  00104A  C131  F145         	movff	?_exp+2,?___flge+2
  2916  00104E  C132  F146         	movff	?_exp+3,?___flge+3
  2917  001052  EC01  F012         	call	___flge	;wreg free
  2918  001056  E201 D091          	bnc	u3360
  2919                           ; BSR set to: 1
  2920  00105A  AF32               	btfss	(?_exp+3)& (0+255),7,b
  2921  00105C  D002               	goto	u3330
  2922  00105E  0E01               	movlw	1
  2923  001060  D001               	goto	u3336
  2924  001062                     u3330:
  2925  001062  0E00               	movlw	0
  2926  001064                     u3336:
  2927  001064  6EE1               	movwf	fsr1l,c
  2928  001066  50E1               	movf	fsr1l,w,c
  2929  001068  E012               	bz	l2170
  2930  00106A  C12F  F14D         	movff	?_exp,?___flneg
  2931  00106E  C130  F14E         	movff	?_exp+1,?___flneg+1
  2932  001072  C131  F14F         	movff	?_exp+2,?___flneg+2
  2933  001076  C132  F150         	movff	?_exp+3,?___flneg+3
  2934  00107A  EC33  F013         	call	___flneg	;wreg free
  2935  00107E  C14D  F12F         	movff	?___flneg,?_exp
  2936  001082  C14E  F130         	movff	?___flneg+1,?_exp+1
  2937  001086  C14F  F131         	movff	?___flneg+2,?_exp+2
  2938  00108A  C150  F132         	movff	?___flneg+3,?_exp+3
  2939  00108E                     l2170:
  2940                           ; BSR set to: 1
  2941  00108E  0E3B               	movlw	59
  2942  001090  6F3B               	movwf	(?___asflmul+2)& (0+255),b
  2943  001092  0EAA               	movlw	170
  2944  001094  6F3C               	movwf	(?___asflmul+3)& (0+255),b
  2945  001096  0EB8               	movlw	184
  2946  001098  6F3D               	movwf	(?___asflmul+4)& (0+255),b
  2947  00109A  0E3F               	movlw	63
  2948  00109C  6F3E               	movwf	(?___asflmul+5)& (0+255),b
  2949  00109E  0E2F               	movlw	low ?_exp
  2950  0010A0  6F39               	movwf	?___asflmul& (0+255),b
  2951  0010A2  0E01               	movlw	high ?_exp
  2952  0010A4  6F3A               	movwf	(?___asflmul+1)& (0+255),b
  2953  0010A6  EC24  F012         	call	___asflmul	;wreg free
  2954  0010AA  C12F  F139         	movff	?_exp,?_floor
  2955  0010AE  C130  F13A         	movff	?_exp+1,?_floor+1
  2956  0010B2  C131  F13B         	movff	?_exp+2,?_floor+2
  2957  0010B6  C132  F13C         	movff	?_exp+3,?_floor+3
  2958  0010BA  ECAB  F00B         	call	_floor	;wreg free
  2959  0010BE  C139  F143         	movff	?_floor,?___fltol
  2960  0010C2  C13A  F144         	movff	?_floor+1,?___fltol+1
  2961  0010C6  C13B  F145         	movff	?_floor+2,?___fltol+2
  2962  0010CA  C13C  F146         	movff	?_floor+3,?___fltol+3
  2963  0010CE  ECD9  F00F         	call	___fltol	;wreg free
  2964  0010D2  C143  F137         	movff	?___fltol,??_exp+4
  2965  0010D6  C144  F138         	movff	?___fltol+1,??_exp+5
  2966  0010DA  C137  F145         	movff	??_exp+4,?___awtofl
  2967  0010DE  C138  F146         	movff	??_exp+5,?___awtofl+1
  2968  0010E2  EC63  F010         	call	___awtofl	;wreg free
  2969  0010E6  C145  F133         	movff	?___awtofl,??_exp
  2970  0010EA  C146  F134         	movff	?___awtofl+1,??_exp+1
  2971  0010EE  C147  F135         	movff	?___awtofl+2,??_exp+2
  2972  0010F2  C148  F136         	movff	?___awtofl+3,??_exp+3
  2973  0010F6  C133  F13B         	movff	??_exp,?___asflsub+2
  2974  0010FA  C134  F13C         	movff	??_exp+1,?___asflsub+3
  2975  0010FE  C135  F13D         	movff	??_exp+2,?___asflsub+4
  2976  001102  C136  F13E         	movff	??_exp+3,?___asflsub+5
  2977  001106  0E2F               	movlw	low ?_exp
  2978  001108  6F39               	movwf	?___asflsub& (0+255),b
  2979  00110A  0E01               	movlw	high ?_exp
  2980  00110C  6F3A               	movwf	(?___asflsub+1)& (0+255),b
  2981  00110E  EC47  F012         	call	___asflsub	;wreg free
  2982  001112  0E09               	movlw	9
  2983  001114  6F4A               	movwf	(?_eval_poly+5)& (0+255),b
  2984  001116  6B4B               	clrf	(?_eval_poly+6)& (0+255),b
  2985  001118  0E01               	movlw	low F65
  2986  00111A  6F49               	movwf	(?_eval_poly+4)& (0+255),b
  2987  00111C  C12F  F145         	movff	?_exp,?_eval_poly
  2988  001120  C130  F146         	movff	?_exp+1,?_eval_poly+1
  2989  001124  C131  F147         	movff	?_exp+2,?_eval_poly+2
  2990  001128  C132  F148         	movff	?_exp+3,?_eval_poly+3
  2991  00112C  EC75  F00D         	call	_eval_poly	;wreg free
  2992  001130  C145  F139         	movff	?_eval_poly,?_ldexp
  2993  001134  C146  F13A         	movff	?_eval_poly+1,?_ldexp+1
  2994  001138  C147  F13B         	movff	?_eval_poly+2,?_ldexp+2
  2995  00113C  C148  F13C         	movff	?_eval_poly+3,?_ldexp+3
  2996  001140  C137  F13D         	movff	??_exp+4,?_ldexp+4
  2997  001144  C138  F13E         	movff	??_exp+5,?_ldexp+5
  2998  001148  EC49  F00F         	call	_ldexp	;wreg free
  2999  00114C  C139  F12F         	movff	?_ldexp,?_exp
  3000  001150  C13A  F130         	movff	?_ldexp+1,?_exp+1
  3001  001154  C13B  F131         	movff	?_ldexp+2,?_exp+2
  3002  001158  C13C  F132         	movff	?_ldexp+3,?_exp+3
  3003  00115C  50E1               	movf	fsr1l,w,c
  3004  00115E  E02B               	bz	l2171
  3005  001160  EE01  F02F         	lfsr	0,?_exp
  3006  001164  0EFF               	movlw	255
  3007  001166  18EE               	xorwf	postinc0,w,c
  3008  001168  0EFF               	movlw	255
  3009  00116A  B4D8               	btfsc	status,2,c
  3010  00116C  18EE               	xorwf	postinc0,w,c
  3011  00116E  0E7F               	movlw	127
  3012  001170  B4D8               	btfsc	status,2,c
  3013  001172  18EE               	xorwf	postinc0,w,c
  3014  001174  0E7F               	movlw	127
  3015  001176  B4D8               	btfsc	status,2,c
  3016  001178  18EE               	xorwf	postinc0,w,c
  3017  00117A  E105               	bnz	l2172
  3018  00117C                     u3360:
  3019  00117C  6B2F               	clrf	?_exp& (0+255),b
  3020  00117E  6B30               	clrf	(?_exp+1)& (0+255),b
  3021  001180  6B31               	clrf	(?_exp+2)& (0+255),b
  3022  001182  6B32               	clrf	(?_exp+3)& (0+255),b
  3023  001184  D018               	goto	l2166
  3024  001186                     l2172:
  3025                           ; BSR set to: 1
  3026  001186  C12F  F13D         	movff	?_exp,?___fldiv+4
  3027  00118A  C130  F13E         	movff	?_exp+1,?___fldiv+5
  3028  00118E  C131  F13F         	movff	?_exp+2,?___fldiv+6
  3029  001192  C132  F140         	movff	?_exp+3,?___fldiv+7
  3030  001196  6B39               	clrf	?___fldiv& (0+255),b
  3031  001198  6B3A               	clrf	(?___fldiv+1)& (0+255),b
  3032  00119A  0E80               	movlw	128
  3033  00119C  6F3B               	movwf	(?___fldiv+2)& (0+255),b
  3034  00119E  0E3F               	movlw	63
  3035  0011A0  6F3C               	movwf	(?___fldiv+3)& (0+255),b
  3036  0011A2  EC9E  F00E         	call	___fldiv	;wreg free
  3037  0011A6  C139  F12F         	movff	?___fldiv,?_exp
  3038  0011AA  C13A  F130         	movff	?___fldiv+1,?_exp+1
  3039  0011AE  C13B  F131         	movff	?___fldiv+2,?_exp+2
  3040  0011B2  C13C  F132         	movff	?___fldiv+3,?_exp+3
  3041  0011B6                     l2171:
  3042                           ; BSR set to: 1
  3043  0011B6                     l2166:
  3044                           ; BSR set to: 1
  3045  0011B6  0012               	return	
  3046  0011B8                     __end_of_exp:
  3047                           	opt stack 0
  3048                           
  3049                           	psect	text21
  3050                           ; =============== function _exp ends ===========
      +                          =
  3051                           ; *************** function ___lltofl ***********
      +                          ******
  3052                           ; Defined at:
  3053                           ;		line 16 in file "C:\Program Files (x86)\HI-TE
      +                          CH Software\PICC-18\PRO\9.66\sources\lltofl.c"
  3054                           ; Parameters:
  3055                           ;		c              size:   4offs:   0	type: unsig
      +                          ned long 
  3056                           ; Auto variables:
  3057                           ;		exp         	       	type: unsigned char 
  3058                           ;		f1          	       	type: unsigned char 
  3059                           ; Return value:
  3060                           ;		type: unsigned char 
  3061                           ;		size: 4
  3062                           ; Registers used:
  3063                           ;		wreg, fsr0l, fsr0h, fsr2l, status,2, status,0
      +                          , cstack
  3064                           ; Tracked objects:
  3065                           ;		On entry : F/1
  3066                           ;		On exit  : F/1
  3067                           ;		Unchanged: FFFFFFF0/0
  3068                           ; Data sizes:
  3069                           ;		Autos:    4
  3070                           ;		Params:   4
  3071                           ;		Temp:     0
  3072                           ;		Total:    8
  3073                           ; This function calls:
  3074                           ;		___flpack
  3075                           ; This function is called by:
  3076                           ;		_pow
  3077                           ; This function uses a non-reentrant model
  3078                           ; 
  3079  000000                     
  3080  0023B8                     ___lltofl:
  3081                           	opt stack 26
  3082                           ; BSR set to: 1
  3083  0023B8  5132               	movf	(?___lltofl+3)& (0+255),w,b
  3084  0023BA  112F               	iorwf	?___lltofl& (0+255),w,b
  3085  0023BC  1130               	iorwf	(?___lltofl+1)& (0+255),w,b
  3086  0023BE  1131               	iorwf	(?___lltofl+2)& (0+255),w,b
  3087  0023C0  E105               	bnz	l2066
  3088  0023C2  6B2F               	clrf	?___lltofl& (0+255),b
  3089  0023C4  6B30               	clrf	(?___lltofl+1)& (0+255),b
  3090  0023C6  6B31               	clrf	(?___lltofl+2)& (0+255),b
  3091  0023C8  6B32               	clrf	(?___lltofl+3)& (0+255),b
  3092  0023CA  D01A               	goto	l2065
  3093  0023CC                     l2066:
  3094                           ; BSR set to: 1
  3095  0023CC  0E96               	movlw	150
  3096  0023CE  6ED9               	movwf	fsr2l,c
  3097  0023D0  C12F  F133         	movff	?___lltofl,??___lltofl
  3098  0023D4  C130  F134         	movff	?___lltofl+1,??___lltofl+1
  3099  0023D8  C131  F135         	movff	?___lltofl+2,??___lltofl+2
  3100  0023DC  C132  F136         	movff	?___lltofl+3,??___lltofl+3
  3101  0023E0  CFD9 F165          	movff	fsr2l,?___flpack+2
  3102  0023E4  0E33               	movlw	low ??___lltofl
  3103  0023E6  6F63               	movwf	?___flpack& (0+255),b
  3104  0023E8  0E01               	movlw	high ??___lltofl
  3105  0023EA  6F64               	movwf	(?___flpack+1)& (0+255),b
  3106  0023EC  EC92  F00C         	call	___flpack	;wreg free
  3107  0023F0  C133  F12F         	movff	??___lltofl,?___lltofl
  3108  0023F4  C134  F130         	movff	??___lltofl+1,?___lltofl+1
  3109  0023F8  C135  F131         	movff	??___lltofl+2,?___lltofl+2
  3110  0023FC  C136  F132         	movff	??___lltofl+3,?___lltofl+3
  3111  002400                     l2065:
  3112                           ; BSR set to: 1
  3113  002400  0012               	return	
  3114  002402                     __end_of___lltofl:
  3115                           	opt stack 0
  3116                           
  3117                           	psect	text22
  3118                           ; =============== function ___lltofl ends ======
      +                          ======
  3119                           ; *************** function ___lwmod ************
      +                          *****
  3120                           ; Defined at:
  3121                           ;		line 5 in file "C:\Program Files (x86)\HI-TEC
      +                          H Software\PICC-18\PRO\9.66\sources\lwmod.c"
  3122                           ; Parameters:
  3123                           ;		dividend       size:   2offs:   0	type: unsig
      +                          ned int 
  3124                           ;		divisor        size:   2offs:   2	type: unsig
      +                          ned int 
  3125                           ; Auto variables:
  3126                           ;		counter     	       	type: unsigned char 
  3127                           ; Return value:
  3128                           ;		type: unsigned int 
  3129                           ;		size: 2
  3130                           ; Registers used:
  3131                           ;		wreg, fsr2l, status,2, status,0
  3132                           ; Tracked objects:
  3133                           ;		On entry : F/1
  3134                           ;		On exit  : F/1
  3135                           ;		Unchanged: FFFFFFF0/0
  3136                           ; Data sizes:
  3137                           ;		Autos:    0
  3138                           ;		Params:   4
  3139                           ;		Temp:     0
  3140                           ;		Total:    4
  3141                           ; This function calls:
  3142                           ;		Nothing
  3143                           ; This function is called by:
  3144                           ;		_format_number
  3145                           ; This function uses a non-reentrant model
  3146                           ; 
  3147  000000                     
  3148  002592                     ___lwmod:
  3149                           	opt stack 26
  3150                           ; BSR set to: 1
  3151  002592  513E               	movf	(?___lwmod+3)& (0+255),w,b
  3152  002594  113D               	iorwf	(?___lwmod+2)& (0+255),w,b
  3153  002596  E017               	bz	l2088
  3154  002598  0E01               	movlw	1
  3155  00259A  6ED9               	movwf	fsr2l,c
  3156  00259C                     l2089:
  3157                           ; BSR set to: 1
  3158  00259C  BF3E               	btfsc	(?___lwmod+3)& (0+255),7,b
  3159  00259E  D005               	goto	l2094
  3160                           ; BSR set to: 1
  3161  0025A0  90D8               	bcf	status,0,c
  3162  0025A2  373D               	rlcf	(?___lwmod+2)& (0+255),f,b
  3163  0025A4  373E               	rlcf	(?___lwmod+3)& (0+255),f,b
  3164  0025A6  2AD9               	incf	fsr2l,f,c
  3165  0025A8  D7F9               	goto	l2089
  3166                           ; BSR set to: 1
  3167  0025AA                     l2094:
  3168                           ; BSR set to: 1
  3169  0025AA  513D               	movf	(?___lwmod+2)& (0+255),w,b
  3170  0025AC  5D3B               	subwf	?___lwmod& (0+255),w,b
  3171  0025AE  513E               	movf	(?___lwmod+3)& (0+255),w,b
  3172  0025B0  593C               	subwfb	(?___lwmod+1)& (0+255),w,b
  3173  0025B2  E304               	bnc	l2095
  3174  0025B4  513D               	movf	(?___lwmod+2)& (0+255),w,b
  3175  0025B6  5F3B               	subwf	?___lwmod& (0+255),f,b
  3176  0025B8  513E               	movf	(?___lwmod+3)& (0+255),w,b
  3177  0025BA  5B3C               	subwfb	(?___lwmod+1)& (0+255),f,b
  3178  0025BC                     l2095:
  3179                           ; BSR set to: 1
  3180  0025BC  90D8               	bcf	status,0,c
  3181  0025BE  333E               	rrcf	(?___lwmod+3)& (0+255),f,b
  3182  0025C0  333D               	rrcf	(?___lwmod+2)& (0+255),f,b
  3183  0025C2  2ED9               	decfsz	fsr2l,f,c
  3184  0025C4  D7F2               	goto	l2094
  3185                           ; BSR set to: 1
  3186  0025C6                     l2088:
  3187                           ; BSR set to: 1
  3188                           ; BSR set to: 1
  3189  0025C6  0012               	return	
  3190  0025C8                     __end_of___lwmod:
  3191                           	opt stack 0
  3192                           
  3193                           	psect	text23
  3194                           ; =============== function ___lwmod ends =======
      +                          =====
  3195                           ; *************** function ___lwdiv ************
      +                          *****
  3196                           ; Defined at:
  3197                           ;		line 5 in file "C:\Program Files (x86)\HI-TEC
      +                          H Software\PICC-18\PRO\9.66\sources\lwdiv.c"
  3198                           ; Parameters:
  3199                           ;		dividend       size:   2offs:   0	type: unsig
      +                          ned int 
  3200                           ;		divisor        size:   2offs:   2	type: unsig
      +                          ned int 
  3201                           ; Auto variables:
  3202                           ;		counter     	       	type: unsigned char 
  3203                           ;		quotient    	       	type: unsigned int 
  3204                           ; Return value:
  3205                           ;		type: unsigned int 
  3206                           ;		size: 2
  3207                           ; Registers used:
  3208                           ;		wreg, fsr2l, status,2, status,0, prodl, prodh
  3209                           ; Tracked objects:
  3210                           ;		On entry : F/1
  3211                           ;		On exit  : F/1
  3212                           ;		Unchanged: FFFFFFF0/0
  3213                           ; Data sizes:
  3214                           ;		Autos:    0
  3215                           ;		Params:   4
  3216                           ;		Temp:     0
  3217                           ;		Total:    4
  3218                           ; This function calls:
  3219                           ;		Nothing
  3220                           ; This function is called by:
  3221                           ;		_format_number
  3222                           ; This function uses a non-reentrant model
  3223                           ; 
  3224  000000                     
  3225  00236E                     ___lwdiv:
  3226                           	opt stack 26
  3227                           ; BSR set to: 1
  3228  00236E  6AF3               	clrf	prodl,c
  3229  002370  6AF4               	clrf	prodh,c
  3230  002372  513E               	movf	(?___lwdiv+3)& (0+255),w,b
  3231  002374  113D               	iorwf	(?___lwdiv+2)& (0+255),w,b
  3232  002376  E01B               	bz	l2079
  3233  002378  0E01               	movlw	1
  3234  00237A  6ED9               	movwf	fsr2l,c
  3235  00237C                     l2080:
  3236                           ; BSR set to: 1
  3237  00237C  90D8               	bcf	status,0,c
  3238                           ; BSR set to: 1
  3239  00237E  BF3E               	btfsc	(?___lwdiv+3)& (0+255),7,b
  3240  002380  D005               	goto	L6
  3241  002382  373D               	rlcf	(?___lwdiv+2)& (0+255),f,b
  3242  002384  373E               	rlcf	(?___lwdiv+3)& (0+255),f,b
  3243  002386  2AD9               	incf	fsr2l,f,c
  3244  002388  D7F9               	goto	l2080
  3245                           ; BSR set to: 1
  3246  00238A                     l2085:
  3247                           ; BSR set to: 1
  3248  00238A  90D8               	bcf	status,0,c
  3249  00238C                     L6:
  3250  00238C  36F3               	rlcf	prodl,f,c
  3251  00238E  36F4               	rlcf	prodh,f,c
  3252  002390  513D               	movf	(?___lwdiv+2)& (0+255),w,b
  3253  002392  5D3B               	subwf	?___lwdiv& (0+255),w,b
  3254  002394  513E               	movf	(?___lwdiv+3)& (0+255),w,b
  3255  002396  593C               	subwfb	(?___lwdiv+1)& (0+255),w,b
  3256  002398  E305               	bnc	l2086
  3257  00239A  513D               	movf	(?___lwdiv+2)& (0+255),w,b
  3258  00239C  5F3B               	subwf	?___lwdiv& (0+255),f,b
  3259  00239E  513E               	movf	(?___lwdiv+3)& (0+255),w,b
  3260  0023A0  5B3C               	subwfb	(?___lwdiv+1)& (0+255),f,b
  3261  0023A2  80F3               	bsf	prodl,0,c
  3262  0023A4                     l2086:
  3263                           ; BSR set to: 1
  3264  0023A4  90D8               	bcf	status,0,c
  3265  0023A6  333E               	rrcf	(?___lwdiv+3)& (0+255),f,b
  3266  0023A8  333D               	rrcf	(?___lwdiv+2)& (0+255),f,b
  3267  0023AA  2ED9               	decfsz	fsr2l,f,c
  3268  0023AC  D7EE               	goto	l2085
  3269                           ; BSR set to: 1
  3270  0023AE                     l2079:
  3271                           ; BSR set to: 1
  3272  0023AE  CFF3 F13B          	movff	prodl,?___lwdiv
  3273  0023B2  CFF4 F13C          	movff	prodh,?___lwdiv+1
  3274                           ; BSR set to: 1
  3275  0023B6  0012               	return	
  3276  0023B8                     __end_of___lwdiv:
  3277                           	opt stack 0
  3278                           
  3279                           	psect	text24
  3280                           ; =============== function ___lwdiv ends =======
      +                          =====
  3281                           ; *************** function _output_putch *******
      +                          **********
  3282                           ; Defined at:
  3283                           ;		line 48 in file "../../../src/LC-meter.c"
  3284                           ; Parameters:
  3285                           ;		c              size:   1reg:   wre	type: unsi
      +                          gned char 
  3286                           ; Auto variables:
  3287                           ;		None
  3288                           ; Return value:
  3289                           ;		type: void 
  3290                           ;		size: 0
  3291                           ; Registers used:
  3292                           ;		wreg, fsr0l, fsr0h, fsr1l, fsr2l, status,2, s
      +                          tatus,0, cstack
  3293                           ; Tracked objects:
  3294                           ;		On entry : F/1
  3295                           ;		On exit  : F/1
  3296                           ;		Unchanged: FFFFFFFF/0
  3297                           ; Data sizes:
  3298                           ;		Autos:    0
  3299                           ;		Params:   0
  3300                           ;		Temp:     0
  3301                           ;		Total:    0
  3302                           ; This function calls:
  3303                           ;		_ser_putch
  3304                           ; This function is called by:
  3305                           ;		_measure_capacitance
  3306                           ; This function uses a non-reentrant model
  3307                           ; 
  3308  000000                     
  3309                           ;LC-meter.c: 47: void
  3310                           ;LC-meter.c: 48: output_putch(char c) {
  3311  00267A                     _output_putch:
  3312                           	opt stack 26
  3313                           ; BSR set to: 1
  3314                           ; output_putch@c loaded to fsr1l
  3315  00267A  CFE8 FFE1          	movff	wreg,fsr1l
  3316  00267E  50E1               	movf	fsr1l,w,c
  3317  002680  EF0E  F013         	goto	_ser_putch
  3318                           ;LC-meter.c: 56: }
  3319                           ; BSR set to: 1
  3320  002684                     __end_of_output_putch:
  3321                           	opt stack 0
  3322                           
  3323                           	psect	text25
  3324                           ; =============== function _output_putch ends ==
      +                          ==========
  3325                           ; *************** function _log ****************
      +                          *
  3326                           ; Defined at:
  3327                           ;		line 6 in file "C:\Program Files (x86)\HI-TEC
      +                          H Software\PICC-18\PRO\9.66\sources\log.c"
  3328                           ; Parameters:
  3329                           ;		x              size:   4offs:   0	type: void 
  3330                           ; Auto variables:
  3331                           ;		exp         	       	type: int 
  3332                           ; Return value:
  3333                           ;		type: int 
  3334                           ;		size: 4
  3335                           ; Registers used:
  3336                           ;		wreg, fsr0l, fsr0h, fsr2l, status,2, status,0
      +                          , tblptrl, tblptrh, tblptru, tablat, prodl, prod
      +                          h, cstack
  3337                           ; Tracked objects:
  3338                           ;		On entry : F/1
  3339                           ;		On exit  : F/1
  3340                           ;		Unchanged: FFFFFFF0/0
  3341                           ; Data sizes:
  3342                           ;		Autos:   18
  3343                           ;		Params:   4
  3344                           ;		Temp:     0
  3345                           ;		Total:   22
  3346                           ; This function calls:
  3347                           ;		_frexp
  3348                           ;		___flmul
  3349                           ;		___fladd
  3350                           ;		_eval_poly
  3351                           ;		___awtofl
  3352                           ; This function is called by:
  3353                           ;		_log10
  3354                           ;		_pow
  3355                           ; This function uses a non-reentrant model
  3356                           ; 
  3357  000000                     
  3358  00134A                     _log:
  3359                           	opt stack 26
  3360                           ; BSR set to: 1
  3361  00134A  BF32               	btfsc	(?_log+3)& (0+255),7,b
  3362  00134C  D007               	goto	u3450
  3363                           ; BSR set to: 1
  3364  00134E  EE01  F02F         	lfsr	0,?_log
  3365  001352  50EE               	movf	postinc0,w,c
  3366  001354  10EE               	iorwf	postinc0,w,c
  3367  001356  10EE               	iorwf	postinc0,w,c
  3368  001358  10EE               	iorwf	postinc0,w,c
  3369  00135A  E105               	bnz	l1747
  3370  00135C                     u3450:
  3371  00135C  6B2F               	clrf	?_log& (0+255),b
  3372  00135E  6B30               	clrf	(?_log+1)& (0+255),b
  3373  001360  6B31               	clrf	(?_log+2)& (0+255),b
  3374  001362  6B32               	clrf	(?_log+3)& (0+255),b
  3375  001364  D0A1               	goto	l1745
  3376  001366                     l1747:
  3377                           ; BSR set to: 1
  3378  001366  0E43               	movlw	low (??_log+16)
  3379  001368  6F49               	movwf	(?_frexp+4)& (0+255),b
  3380  00136A  0E01               	movlw	high (??_log+16)
  3381  00136C  6F4A               	movwf	(?_frexp+5)& (0+255),b
  3382  00136E  C12F  F145         	movff	?_log,?_frexp
  3383  001372  C130  F146         	movff	?_log+1,?_frexp+1
  3384  001376  C131  F147         	movff	?_log+2,?_frexp+2
  3385  00137A  C132  F148         	movff	?_log+3,?_frexp+3
  3386  00137E  ECA3  F010         	call	_frexp	;wreg free
  3387  001382  C145  F133         	movff	?_frexp,??_log
  3388  001386  C146  F134         	movff	?_frexp+1,??_log+1
  3389  00138A  C147  F135         	movff	?_frexp+2,??_log+2
  3390  00138E  C148  F136         	movff	?_frexp+3,??_log+3
  3391  001392  6B59               	clrf	(?___flmul+4)& (0+255),b
  3392  001394  6B5A               	clrf	(?___flmul+5)& (0+255),b
  3393  001396  6B5B               	clrf	(?___flmul+6)& (0+255),b
  3394  001398  0E40               	movlw	64
  3395  00139A  6F5C               	movwf	(?___flmul+7)& (0+255),b
  3396  00139C  C133  F155         	movff	??_log,?___flmul
  3397  0013A0  C134  F156         	movff	??_log+1,?___flmul+1
  3398  0013A4  C135  F157         	movff	??_log+2,?___flmul+2
  3399  0013A8  C136  F158         	movff	??_log+3,?___flmul+3
  3400  0013AC  ECDC  F00D         	call	___flmul	;wreg free
  3401  0013B0  C155  F137         	movff	?___flmul,??_log+4
  3402  0013B4  C156  F138         	movff	?___flmul+1,??_log+5
  3403  0013B8  C157  F139         	movff	?___flmul+2,??_log+6
  3404  0013BC  C158  F13A         	movff	?___flmul+3,??_log+7
  3405  0013C0  6B59               	clrf	(?___fladd+4)& (0+255),b
  3406  0013C2  6B5A               	clrf	(?___fladd+5)& (0+255),b
  3407  0013C4  0E80               	movlw	128
  3408  0013C6  6F5B               	movwf	(?___fladd+6)& (0+255),b
  3409  0013C8  0EBF               	movlw	191
  3410  0013CA  6F5C               	movwf	(?___fladd+7)& (0+255),b
  3411  0013CC  C137  F155         	movff	??_log+4,?___fladd
  3412  0013D0  C138  F156         	movff	??_log+5,?___fladd+1
  3413  0013D4  C139  F157         	movff	??_log+6,?___fladd+2
  3414  0013D8  C13A  F158         	movff	??_log+7,?___fladd+3
  3415  0013DC  EC02  F00B         	call	___fladd	;wreg free
  3416  0013E0  C155  F12F         	movff	?___fladd,?_log
  3417  0013E4  C156  F130         	movff	?___fladd+1,?_log+1
  3418  0013E8  C157  F131         	movff	?___fladd+2,?_log+2
  3419  0013EC  C158  F132         	movff	?___fladd+3,?_log+3
  3420  0013F0  0743               	decf	(??_log+16)& (0+255),f,b
  3421  0013F2  A0D8               	btfss	status,0,c
  3422  0013F4  0744               	decf	(??_log+17)& (0+255),f,b
  3423  0013F6  0E08               	movlw	8
  3424  0013F8  6F4A               	movwf	(?_eval_poly+5)& (0+255),b
  3425  0013FA  6B4B               	clrf	(?_eval_poly+6)& (0+255),b
  3426  0013FC  0E29               	movlw	low F64
  3427  0013FE  6F49               	movwf	(?_eval_poly+4)& (0+255),b
  3428  001400  C12F  F145         	movff	?_log,?_eval_poly
  3429  001404  C130  F146         	movff	?_log+1,?_eval_poly+1
  3430  001408  C131  F147         	movff	?_log+2,?_eval_poly+2
  3431  00140C  C132  F148         	movff	?_log+3,?_eval_poly+3
  3432  001410  EC75  F00D         	call	_eval_poly	;wreg free
  3433  001414  C145  F12F         	movff	?_eval_poly,?_log
  3434  001418  C146  F130         	movff	?_eval_poly+1,?_log+1
  3435  00141C  C147  F131         	movff	?_eval_poly+2,?_log+2
  3436  001420  C148  F132         	movff	?_eval_poly+3,?_log+3
  3437  001424  C143  F145         	movff	??_log+16,?___awtofl
  3438  001428  C144  F146         	movff	??_log+17,?___awtofl+1
  3439  00142C  EC63  F010         	call	___awtofl	;wreg free
  3440  001430  C145  F13B         	movff	?___awtofl,??_log+8
  3441  001434  C146  F13C         	movff	?___awtofl+1,??_log+9
  3442  001438  C147  F13D         	movff	?___awtofl+2,??_log+10
  3443  00143C  C148  F13E         	movff	?___awtofl+3,??_log+11
  3444  001440  C13B  F155         	movff	??_log+8,?___flmul
  3445  001444  C13C  F156         	movff	??_log+9,?___flmul+1
  3446  001448  C13D  F157         	movff	??_log+10,?___flmul+2
  3447  00144C  C13E  F158         	movff	??_log+11,?___flmul+3
  3448  001450  0E18               	movlw	24
  3449  001452  6F59               	movwf	(?___flmul+4)& (0+255),b
  3450  001454  0E72               	movlw	114
  3451  001456  6F5A               	movwf	(?___flmul+5)& (0+255),b
  3452  001458  0E31               	movlw	49
  3453  00145A  6F5B               	movwf	(?___flmul+6)& (0+255),b
  3454  00145C  0E3F               	movlw	63
  3455  00145E  6F5C               	movwf	(?___flmul+7)& (0+255),b
  3456  001460  ECDC  F00D         	call	___flmul	;wreg free
  3457  001464  C155  F13F         	movff	?___flmul,??_log+12
  3458  001468  C156  F140         	movff	?___flmul+1,??_log+13
  3459  00146C  C157  F141         	movff	?___flmul+2,??_log+14
  3460  001470  C158  F142         	movff	?___flmul+3,??_log+15
  3461  001474  C12F  F159         	movff	?_log,?___fladd+4
  3462  001478  C130  F15A         	movff	?_log+1,?___fladd+5
  3463  00147C  C131  F15B         	movff	?_log+2,?___fladd+6
  3464  001480  C132  F15C         	movff	?_log+3,?___fladd+7
  3465  001484  C13F  F155         	movff	??_log+12,?___fladd
  3466  001488  C140  F156         	movff	??_log+13,?___fladd+1
  3467  00148C  C141  F157         	movff	??_log+14,?___fladd+2
  3468  001490  C142  F158         	movff	??_log+15,?___fladd+3
  3469  001494  EC02  F00B         	call	___fladd	;wreg free
  3470  001498  C155  F12F         	movff	?___fladd,?_log
  3471  00149C  C156  F130         	movff	?___fladd+1,?_log+1
  3472  0014A0  C157  F131         	movff	?___fladd+2,?_log+2
  3473  0014A4  C158  F132         	movff	?___fladd+3,?_log+3
  3474  0014A8                     l1745:
  3475                           ; BSR set to: 1
  3476  0014A8  0012               	return	
  3477  0014AA                     __end_of_log:
  3478                           	opt stack 0
  3479                           
  3480                           	psect	text26
  3481                           ; =============== function _log ends ===========
      +                          =
  3482                           ; *************** function _format_putchar *****
      +                          ************
  3483                           ; Defined at:
  3484                           ;		line 6 in file "../../../lib/format.c"
  3485                           ; Parameters:
  3486                           ;		c              size:   1reg:   wre	type: unsi
      +                          gned char 
  3487                           ; Auto variables:
  3488                           ;		None
  3489                           ; Return value:
  3490                           ;		type: void 
  3491                           ;		size: 0
  3492                           ; Registers used:
  3493                           ;		wreg
  3494                           ; Tracked objects:
  3495                           ;		On entry : F/1
  3496                           ;		On exit  : F/1
  3497                           ;		Unchanged: FFFFFFFF/0
  3498                           ; Data sizes:
  3499                           ;		Autos:    0
  3500                           ;		Params:   0
  3501                           ;		Temp:     0
  3502                           ;		Total:    0
  3503                           ; This function calls:
  3504                           ;		Nothing
  3505                           ; This function is called by:
  3506                           ; This function uses a non-reentrant model
  3507                           ; 
  3508  000000                     
  3509                           ;format.c: 5: static void
  3510                           ;format.c: 6: format_putchar(char c) {
  3511  002684                     _format_putchar:
  3512                           	opt stack 26
  3513                           ; BSR set to: 1
  3514                           ;format.c: 8: }
  3515                           ; BSR set to: 1
  3516  002684  0012               	return	
  3517  002686                     __end_of_format_putchar:
  3518                           	opt stack 0
  3519                           
  3520                           	psect	text27
  3521                           ; =============== function _format_putchar ends 
      +                          ============
  3522                           ; *************** function _ser_putch **********
      +                          *******
  3523                           ; Defined at:
  3524                           ;		line 82 in file "../../../lib/ser.c"
  3525                           ; Parameters:
  3526                           ;		c              size:   1reg:   wre	type: unsi
      +                          gned char 
  3527                           ; Auto variables:
  3528                           ;		None
  3529                           ; Return value:
  3530                           ;		type: void 
  3531                           ;		size: 0
  3532                           ; Registers used:
  3533                           ;		wreg, fsr0l, fsr0h, fsr2l, status,2, status,0
  3534                           ; Tracked objects:
  3535                           ;		On entry : 0/1
  3536                           ;		On exit  : 0/1
  3537                           ;		Unchanged: FFFFFFFF/0
  3538                           ; Data sizes:
  3539                           ;		Autos:    0
  3540                           ;		Params:   0
  3541                           ;		Temp:     0
  3542                           ;		Total:    0
  3543                           ; This function calls:
  3544                           ;		Nothing
  3545                           ; This function is called by:
  3546                           ;		_ser_puts
  3547                           ;		_output_putch
  3548                           ;		_measure_capacitance
  3549                           ; This function uses a non-reentrant model
  3550                           ; 
  3551  000000                     
  3552                           ;ser.c: 81: void
  3553                           ;ser.c: 82: ser_putch(char c) {
  3554  00261C                     _ser_putch:
  3555                           	opt stack 25
  3556                           ; BSR set to: ?
  3557                           ; ser_putch@c loaded to fsr2l
  3558  00261C  CFE8 FFD9          	movff	wreg,fsr2l
  3559  002620                     l483:
  3560                           ; BSR set to: ?
  3561                           ; BSR set to: ?
  3562  002620  283A               	incf	58,w,c	;volatile
  3563  002622  0B0F               	andlw	15
  3564  002624  183C               	xorwf	60,w,c	;volatile
  3565  002626  E0FC               	bz	l483
  3566                           ; BSR set to: ?
  3567                           ;ser.c: 84: GIE = 0;
  3568  002628  9EF2               	bcf	intcon,7,c	;volatile
  3569                           ;ser.c: 85: txfifo[txiptr] = c;
  3570  00262A  503A               	movf	58,w,c	;volatile
  3571  00262C  0F14               	addlw	20
  3572  00262E  6EE9               	movwf	fsr0l,c
  3573  002630  6AEA               	clrf	fsr0h,c
  3574  002632  CFD9 FFEF          	movff	fsr2l,indf0
  3575                           ;ser.c: 86: txiptr = (txiptr + 1) & ((unsigned c
      +                          har)16 - 1);
  3576  002636  283A               	incf	58,w,c	;volatile
  3577  002638  0B0F               	andlw	15
  3578  00263A  6E3A               	movwf	58,c	;volatile
  3579                           ;ser.c: 87: TXIE = 1;
  3580  00263C  889D               	bsf	3997,4,c	;volatile
  3581                           ;ser.c: 88: GIE = 1;
  3582  00263E  8EF2               	bsf	intcon,7,c	;volatile
  3583                           ;ser.c: 89: }
  3584                           ; BSR set to: ?
  3585  002640  0012               	return	
  3586  002642                     __end_of_ser_putch:
  3587                           	opt stack 0
  3588                           
  3589                           	psect	text28
  3590                           ; =============== function _ser_putch ends =====
      +                          =======
  3591                           ; *************** function ___asflsub **********
      +                          *******
  3592                           ; Defined at:
  3593                           ;		line 5 in file "C:\Program Files (x86)\HI-TEC
      +                          H Software\PICC-18\PRO\9.66\sources\asflsub.c"
  3594                           ; Parameters:
  3595                           ;		f1p            size:   2offs:   0	type: PTR ;
      +                           Largest target is 4
  3596                           ;		 -> exp@x(4), format_double@num(4), 
  3597                           ;		f2             size:   4offs:   2	type: PTR 
  3598                           ; Auto variables:
  3599                           ;		None
  3600                           ; Return value:
  3601                           ;		type: PTR 
  3602                           ;		size: 4
  3603                           ; Registers used:
  3604                           ;		wreg, fsr0l, fsr0h, fsr2l, status,2, status,0
      +                          , prodl, prodh, cstack
  3605                           ; Tracked objects:
  3606                           ;		On entry : F/1
  3607                           ;		On exit  : F/1
  3608                           ;		Unchanged: FFFFFFF0/0
  3609                           ; Data sizes:
  3610                           ;		Autos:    0
  3611                           ;		Params:   6
  3612                           ;		Temp:     0
  3613                           ;		Total:    6
  3614                           ; This function calls:
  3615                           ;		___flsub
  3616                           ; This function is called by:
  3617                           ;		_format_double
  3618                           ;		_exp
  3619                           ; This function uses a non-reentrant model
  3620                           ; 
  3621  000000                     
  3622  00248E                     ___asflsub:
  3623                           	opt stack 25
  3624                           ; BSR set to: 1
  3625  00248E  C13B  F143         	movff	?___asflsub+2,?___flsub+4
  3626  002492  C13C  F144         	movff	?___asflsub+3,?___flsub+5
  3627  002496  C13D  F145         	movff	?___asflsub+4,?___flsub+6
  3628  00249A  C13E  F146         	movff	?___asflsub+5,?___flsub+7
  3629  00249E  C139  FFE9         	movff	?___asflsub,fsr0l
  3630  0024A2  C13A  FFEA         	movff	?___asflsub+1,fsr0h
  3631  0024A6  CFEE F13F          	movff	postinc0,?___flsub
  3632  0024AA  CFEE F140          	movff	postinc0,?___flsub+1
  3633  0024AE  CFEE F141          	movff	postinc0,?___flsub+2
  3634  0024B2  CFEE F142          	movff	postinc0,?___flsub+3
  3635  0024B6  ECAC  F012         	call	___flsub	;wreg free
  3636  0024BA  C139  FFE9         	movff	?___asflsub,fsr0l
  3637  0024BE  C13A  FFEA         	movff	?___asflsub+1,fsr0h
  3638  0024C2  C13F  FFEE         	movff	?___flsub,postinc0
  3639  0024C6  C140  FFEE         	movff	?___flsub+1,postinc0
  3640  0024CA  C141  FFEE         	movff	?___flsub+2,postinc0
  3641  0024CE  C142  FFED         	movff	?___flsub+3,postdec0
  3642                           ; BSR set to: 1
  3643  0024D2  0012               	return	
  3644  0024D4                     __end_of___asflsub:
  3645                           	opt stack 0
  3646                           
  3647                           	psect	text29
  3648                           ; =============== function ___asflsub ends =====
      +                          =======
  3649                           ; *************** function _floor **************
      +                          ***
  3650                           ; Defined at:
  3651                           ;		line 14 in file "C:\Program Files (x86)\HI-TE
      +                          CH Software\PICC-18\PRO\9.66\sources\floor.c"
  3652                           ; Parameters:
  3653                           ;		x              size:   4offs:   0	type: PTR 
  3654                           ; Auto variables:
  3655                           ;		expon       	       	type: int 
  3656                           ;		i           	       	type: int 
  3657                           ; Return value:
  3658                           ;		type: int 
  3659                           ;		size: 4
  3660                           ; Registers used:
  3661                           ;		wreg, fsr0l, fsr0h, fsr2l, status,2, status,0
      +                          , prodl, prodh, cstack
  3662                           ; Tracked objects:
  3663                           ;		On entry : F/1
  3664                           ;		On exit  : F/1
  3665                           ;		Unchanged: FFFFFFF0/0
  3666                           ; Data sizes:
  3667                           ;		Autos:    6
  3668                           ;		Params:   4
  3669                           ;		Temp:     0
  3670                           ;		Total:   10
  3671                           ; This function calls:
  3672                           ;		_frexp
  3673                           ;		___fltol
  3674                           ;		___altofl
  3675                           ;		___flge
  3676                           ;		___fladd
  3677                           ; This function is called by:
  3678                           ;		_format_double
  3679                           ;		_exp
  3680                           ; This function uses a non-reentrant model
  3681                           ; 
  3682  000000                     
  3683  001756                     _floor:
  3684                           	opt stack 25
  3685                           ; BSR set to: 1
  3686  001756  0E3D               	movlw	low ??_floor
  3687  001758  6F49               	movwf	(?_frexp+4)& (0+255),b
  3688  00175A  0E01               	movlw	high ??_floor
  3689  00175C  6F4A               	movwf	(?_frexp+5)& (0+255),b
  3690  00175E  C139  F145         	movff	?_floor,?_frexp
  3691  001762  C13A  F146         	movff	?_floor+1,?_frexp+1
  3692  001766  C13B  F147         	movff	?_floor+2,?_frexp+2
  3693  00176A  C13C  F148         	movff	?_floor+3,?_frexp+3
  3694  00176E  ECA3  F010         	call	_frexp	;wreg free
  3695  001772  AF3E               	btfss	(??_floor+1)& (0+255),7,b
  3696  001774  D00E               	goto	l1741
  3697  001776  AF3C               	btfss	(?_floor+3)& (0+255),7,b
  3698  001778  D007               	goto	l1742
  3699  00177A  6B39               	clrf	?_floor& (0+255),b
  3700  00177C  6B3A               	clrf	(?_floor+1)& (0+255),b
  3701  00177E  0E80               	movlw	128
  3702  001780  6F3B               	movwf	(?_floor+2)& (0+255),b
  3703  001782  0EBF               	movlw	191
  3704  001784  6F3C               	movwf	(?_floor+3)& (0+255),b
  3705  001786  D05B               	goto	l1740
  3706  001788                     l1742:
  3707                           ; BSR set to: 1
  3708  001788  6B39               	clrf	?_floor& (0+255),b
  3709  00178A  6B3A               	clrf	(?_floor+1)& (0+255),b
  3710  00178C  6B3B               	clrf	(?_floor+2)& (0+255),b
  3711  00178E  6B3C               	clrf	(?_floor+3)& (0+255),b
  3712  001790  D056               	goto	l1740
  3713  001792                     l1741:
  3714                           ; BSR set to: 1
  3715  001792  0E1D               	movlw	29
  3716  001794  5D3D               	subwf	??_floor& (0+255),w,b
  3717  001796  0E00               	movlw	0
  3718  001798  593E               	subwfb	(??_floor+1)& (0+255),w,b
  3719  00179A  E301               	bnc	l1743
  3720  00179C  D050               	goto	l1740
  3721  00179E                     l1743:
  3722                           ; BSR set to: 1
  3723  00179E  C139  F143         	movff	?_floor,?___fltol
  3724  0017A2  C13A  F144         	movff	?_floor+1,?___fltol+1
  3725  0017A6  C13B  F145         	movff	?_floor+2,?___fltol+2
  3726  0017AA  C13C  F146         	movff	?_floor+3,?___fltol+3
  3727  0017AE  ECD9  F00F         	call	___fltol	;wreg free
  3728  0017B2  C143  F143         	movff	?___fltol,?___altofl
  3729  0017B6  C144  F144         	movff	?___fltol+1,?___altofl+1
  3730  0017BA  C145  F145         	movff	?___fltol+2,?___altofl+2
  3731  0017BE  C146  F146         	movff	?___fltol+3,?___altofl+3
  3732  0017C2  EC93  F00F         	call	___altofl	;wreg free
  3733  0017C6  C143  F13F         	movff	?___altofl,??_floor+2
  3734  0017CA  C144  F140         	movff	?___altofl+1,??_floor+3
  3735  0017CE  C145  F141         	movff	?___altofl+2,??_floor+4
  3736  0017D2  C146  F142         	movff	?___altofl+3,??_floor+5
  3737  0017D6  C13F  F147         	movff	??_floor+2,?___flge+4
  3738  0017DA  C140  F148         	movff	??_floor+3,?___flge+5
  3739  0017DE  C141  F149         	movff	??_floor+4,?___flge+6
  3740  0017E2  C142  F14A         	movff	??_floor+5,?___flge+7
  3741  0017E6  C139  F143         	movff	?_floor,?___flge
  3742  0017EA  C13A  F144         	movff	?_floor+1,?___flge+1
  3743  0017EE  C13B  F145         	movff	?_floor+2,?___flge+2
  3744  0017F2  C13C  F146         	movff	?_floor+3,?___flge+3
  3745  0017F6  EC01  F012         	call	___flge	;wreg free
  3746  0017FA  E219               	bc	l1744
  3747  0017FC  6B59               	clrf	(?___fladd+4)& (0+255),b
  3748  0017FE  6B5A               	clrf	(?___fladd+5)& (0+255),b
  3749  001800  0E80               	movlw	128
  3750  001802  6F5B               	movwf	(?___fladd+6)& (0+255),b
  3751  001804  0EBF               	movlw	191
  3752  001806  6F5C               	movwf	(?___fladd+7)& (0+255),b
  3753  001808  C13F  F155         	movff	??_floor+2,?___fladd
  3754  00180C  C140  F156         	movff	??_floor+3,?___fladd+1
  3755  001810  C141  F157         	movff	??_floor+4,?___fladd+2
  3756  001814  C142  F158         	movff	??_floor+5,?___fladd+3
  3757  001818  EC02  F00B         	call	___fladd	;wreg free
  3758  00181C  C155  F139         	movff	?___fladd,?_floor
  3759  001820  C156  F13A         	movff	?___fladd+1,?_floor+1
  3760  001824  C157  F13B         	movff	?___fladd+2,?_floor+2
  3761  001828  C158  F13C         	movff	?___fladd+3,?_floor+3
  3762  00182C  D008               	goto	l1740
  3763  00182E                     l1744:
  3764                           ; BSR set to: 1
  3765  00182E  C13F  F139         	movff	??_floor+2,?_floor
  3766  001832  C140  F13A         	movff	??_floor+3,?_floor+1
  3767  001836  C141  F13B         	movff	??_floor+4,?_floor+2
  3768  00183A  C142  F13C         	movff	??_floor+5,?_floor+3
  3769  00183E                     l1740:
  3770                           ; BSR set to: 1
  3771  00183E  0012               	return	
  3772  001840                     __end_of_floor:
  3773                           	opt stack 0
  3774                           
  3775                           	psect	text30
  3776                           ; =============== function _floor ends =========
      +                          ===
  3777                           ; *************** function ___asflmul **********
      +                          *******
  3778                           ; Defined at:
  3779                           ;		line 5 in file "C:\Program Files (x86)\HI-TEC
      +                          H Software\PICC-18\PRO\9.66\sources\asflmul.c"
  3780                           ; Parameters:
  3781                           ;		mp             size:   2offs:   0	type: PTR ;
      +                           Largest target is 4
  3782                           ;		 -> exp@x(4), measure_inductance@Lin(4), meas
      +                          ure_capacitance@Cin(4), 
  3783                           ;		multiplicand   size:   4offs:   2	type: PTR 
  3784                           ; Auto variables:
  3785                           ;		None
  3786                           ; Return value:
  3787                           ;		type: PTR 
  3788                           ;		size: 4
  3789                           ; Registers used:
  3790                           ;		wreg, fsr0l, fsr0h, fsr2l, status,2, status,0
      +                          , prodl, cstack
  3791                           ; Tracked objects:
  3792                           ;		On entry : F/1
  3793                           ;		On exit  : F/1
  3794                           ;		Unchanged: FFFFFFF0/0
  3795                           ; Data sizes:
  3796                           ;		Autos:    0
  3797                           ;		Params:   6
  3798                           ;		Temp:     0
  3799                           ;		Total:    6
  3800                           ; This function calls:
  3801                           ;		___flmul
  3802                           ; This function is called by:
  3803                           ;		_measure_capacitance
  3804                           ;		_measure_inductance
  3805                           ;		_exp
  3806                           ; This function uses a non-reentrant model
  3807                           ; 
  3808  000000                     
  3809  002448                     ___asflmul:
  3810                           	opt stack 25
  3811                           ; BSR set to: 1
  3812  002448  C13B  F159         	movff	?___asflmul+2,?___flmul+4
  3813  00244C  C13C  F15A         	movff	?___asflmul+3,?___flmul+5
  3814  002450  C13D  F15B         	movff	?___asflmul+4,?___flmul+6
  3815  002454  C13E  F15C         	movff	?___asflmul+5,?___flmul+7
  3816  002458  C139  FFE9         	movff	?___asflmul,fsr0l
  3817  00245C  C13A  FFEA         	movff	?___asflmul+1,fsr0h
  3818  002460  CFEE F155          	movff	postinc0,?___flmul
  3819  002464  CFEE F156          	movff	postinc0,?___flmul+1
  3820  002468  CFEE F157          	movff	postinc0,?___flmul+2
  3821  00246C  CFEE F158          	movff	postinc0,?___flmul+3
  3822  002470  ECDC  F00D         	call	___flmul	;wreg free
  3823  002474  C139  FFE9         	movff	?___asflmul,fsr0l
  3824  002478  C13A  FFEA         	movff	?___asflmul+1,fsr0h
  3825  00247C  C155  FFEE         	movff	?___flmul,postinc0
  3826  002480  C156  FFEE         	movff	?___flmul+1,postinc0
  3827  002484  C157  FFEE         	movff	?___flmul+2,postinc0
  3828  002488  C158  FFED         	movff	?___flmul+3,postdec0
  3829                           ; BSR set to: 1
  3830  00248C  0012               	return	
  3831  00248E                     __end_of___asflmul:
  3832                           	opt stack 0
  3833                           
  3834                           	psect	text31
  3835                           ; =============== function ___asflmul ends =====
      +                          =======
  3836                           ; *************** function ___awtofl ***********
      +                          ******
  3837                           ; Defined at:
  3838                           ;		line 16 in file "C:\Program Files (x86)\HI-TE
      +                          CH Software\PICC-18\PRO\9.66\sources\awtofl.c"
  3839                           ; Parameters:
  3840                           ;		c              size:   2offs:   0	type: int 
  3841                           ; Auto variables:
  3842                           ;		f1          	       	type: int 
  3843                           ; Return value:
  3844                           ;		type: int 
  3845                           ;		size: 4
  3846                           ; Registers used:
  3847                           ;		wreg, fsr0l, fsr0h, status,2, status,0, cstac
      +                          k
  3848                           ; Tracked objects:
  3849                           ;		On entry : F/1
  3850                           ;		On exit  : F/1
  3851                           ;		Unchanged: FFFFFFF0/0
  3852                           ; Data sizes:
  3853                           ;		Autos:    4
  3854                           ;		Params:   4
  3855                           ;		Temp:     0
  3856                           ;		Total:    8
  3857                           ; This function calls:
  3858                           ;		___flpack
  3859                           ;		___flneg
  3860                           ; This function is called by:
  3861                           ;		_format_double
  3862                           ;		_log
  3863                           ;		_exp
  3864                           ; This function uses a non-reentrant model
  3865                           ; 
  3866  000000                     
  3867  0020C6                     ___awtofl:
  3868                           	opt stack 25
  3869                           ; BSR set to: 1
  3870  0020C6  5146               	movf	(?___awtofl+1)& (0+255),w,b
  3871  0020C8  1145               	iorwf	?___awtofl& (0+255),w,b
  3872  0020CA  E105               	bnz	l1852
  3873  0020CC  6B45               	clrf	?___awtofl& (0+255),b
  3874  0020CE  6B46               	clrf	(?___awtofl+1)& (0+255),b
  3875  0020D0  6B47               	clrf	(?___awtofl+2)& (0+255),b
  3876  0020D2  6B48               	clrf	(?___awtofl+3)& (0+255),b
  3877  0020D4  D037               	goto	l1851
  3878  0020D6                     l1852:
  3879                           ; BSR set to: 1
  3880  0020D6  C145  F149         	movff	?___awtofl,??___awtofl
  3881  0020DA  C146  F14A         	movff	?___awtofl+1,??___awtofl+1
  3882  0020DE  0E00               	movlw	0
  3883  0020E0  BF4A               	btfsc	(??___awtofl+1)& (0+255),7,b
  3884  0020E2  0EFF               	movlw	-1
  3885  0020E4  6F4B               	movwf	(??___awtofl+2)& (0+255),b
  3886  0020E6  6F4C               	movwf	(??___awtofl+3)& (0+255),b
  3887  0020E8  AF46               	btfss	(?___awtofl+1)& (0+255),7,b
  3888  0020EA  D008               	goto	l1853
  3889  0020EC  1F4C               	comf	(??___awtofl+3)& (0+255),f,b
  3890  0020EE  1F4B               	comf	(??___awtofl+2)& (0+255),f,b
  3891  0020F0  1F4A               	comf	(??___awtofl+1)& (0+255),f,b
  3892  0020F2  6D49               	negf	??___awtofl& (0+255),b
  3893  0020F4  0E00               	movlw	0
  3894  0020F6  234A               	addwfc	(??___awtofl+1)& (0+255),f,b
  3895  0020F8  234B               	addwfc	(??___awtofl+2)& (0+255),f,b
  3896  0020FA  234C               	addwfc	(??___awtofl+3)& (0+255),f,b
  3897  0020FC                     l1853:
  3898                           ; BSR set to: 1
  3899  0020FC  0E96               	movlw	150
  3900  0020FE  6F65               	movwf	(?___flpack+2)& (0+255),b
  3901  002100  0E49               	movlw	low ??___awtofl
  3902  002102  6F63               	movwf	?___flpack& (0+255),b
  3903  002104  0E01               	movlw	high ??___awtofl
  3904  002106  6F64               	movwf	(?___flpack+1)& (0+255),b
  3905  002108  EC92  F00C         	call	___flpack	;wreg free
  3906  00210C  AF46               	btfss	(?___awtofl+1)& (0+255),7,b
  3907  00210E  D012               	goto	l1854
  3908  002110  C149  F14D         	movff	??___awtofl,?___flneg
  3909  002114  C14A  F14E         	movff	??___awtofl+1,?___flneg+1
  3910  002118  C14B  F14F         	movff	??___awtofl+2,?___flneg+2
  3911  00211C  C14C  F150         	movff	??___awtofl+3,?___flneg+3
  3912  002120  EC33  F013         	call	___flneg	;wreg free
  3913  002124  C14D  F149         	movff	?___flneg,??___awtofl
  3914  002128  C14E  F14A         	movff	?___flneg+1,??___awtofl+1
  3915  00212C  C14F  F14B         	movff	?___flneg+2,??___awtofl+2
  3916  002130  C150  F14C         	movff	?___flneg+3,??___awtofl+3
  3917  002134                     l1854:
  3918                           ; BSR set to: 1
  3919  002134  C149  F145         	movff	??___awtofl,?___awtofl
  3920  002138  C14A  F146         	movff	??___awtofl+1,?___awtofl+1
  3921  00213C  C14B  F147         	movff	??___awtofl+2,?___awtofl+2
  3922  002140  C14C  F148         	movff	??___awtofl+3,?___awtofl+3
  3923  002144                     l1851:
  3924                           ; BSR set to: 1
  3925  002144  0012               	return	
  3926  002146                     __end_of___awtofl:
  3927                           	opt stack 0
  3928                           
  3929                           	psect	text32
  3930                           ; =============== function ___awtofl ends ======
      +                          ======
  3931                           ; *************** function _eval_poly **********
      +                          *******
  3932                           ; Defined at:
  3933                           ;		line 5 in file "C:\Program Files (x86)\HI-TEC
      +                          H Software\PICC-18\PRO\9.66\sources\evalpoly.c"
  3934                           ; Parameters:
  3935                           ;		x              size:   4offs:   0	type: int 
  3936                           ;		d              size:   1offs:   4	type: PTR c
      +                          onst ; Largest target is 40
  3937                           ;		 -> F65(40), F64(36), 
  3938                           ;		n              size:   2offs:   5	type: int 
  3939                           ; Auto variables:
  3940                           ;		res         	       	type: int 
  3941                           ; Return value:
  3942                           ;		type: int 
  3943                           ;		size: 4
  3944                           ; Registers used:
  3945                           ;		wreg, fsr0l, fsr0h, fsr2l, status,2, status,0
      +                          , tblptrl, tblptrh, tblptru, tablat, prodl, prod
      +                          h, cstack
  3946                           ; Tracked objects:
  3947                           ;		On entry : F/1
  3948                           ;		On exit  : F/1
  3949                           ;		Unchanged: FFFFFFF0/0
  3950                           ; Data sizes:
  3951                           ;		Autos:    8
  3952                           ;		Params:   7
  3953                           ;		Temp:     1
  3954                           ;		Total:   16
  3955                           ; This function calls:
  3956                           ;		___flmul
  3957                           ;		___fladd
  3958                           ; This function is called by:
  3959                           ;		_log
  3960                           ;		_exp
  3961                           ; This function uses a non-reentrant model
  3962                           ; 
  3963  000000                     
  3964  001AEA                     _eval_poly:
  3965                           	opt stack 25
  3966                           ; BSR set to: 1
  3967  001AEA  514A               	movf	(?_eval_poly+5)& (0+255),w,b
  3968  001AEC  0D04               	mullw	4
  3969  001AEE  5149               	movf	(?_eval_poly+4)& (0+255),w,b
  3970  001AF0  24F3               	addwf	prodl,w,c
  3971  001AF2  6F54               	movwf	(??_eval_poly+8)& (0+255),b
  3972  001AF4  C154  FFF6         	movff	??_eval_poly+8,tblptrl
  3973  001AF8  0E08               	movlw	high __Lsmallconst
  3974  001AFA  6EF7               	movwf	tblptrh,c
  3975  001AFC  0009               	tblrd		*+
  3976  001AFE  CFF5 F150          	movff	tablat,??_eval_poly+4
  3977  001B02  0009               	tblrd		*+
  3978  001B04  CFF5 F151          	movff	tablat,??_eval_poly+5
  3979  001B08  0009               	tblrd		*+
  3980  001B0A  CFF5 F152          	movff	tablat,??_eval_poly+6
  3981  001B0E  000A               	tblrd		*-
  3982  001B10  CFF5 F153          	movff	tablat,??_eval_poly+7
  3983  001B14                     l2163:
  3984                           ; BSR set to: 1
  3985  001B14  514B               	movf	(?_eval_poly+6)& (0+255),w,b
  3986  001B16  114A               	iorwf	(?_eval_poly+5)& (0+255),w,b
  3987  001B18  E046               	bz	u3590
  3988                           ; BSR set to: 1
  3989  001B1A  C150  F159         	movff	??_eval_poly+4,?___flmul+4
  3990  001B1E  C151  F15A         	movff	??_eval_poly+5,?___flmul+5
  3991  001B22  C152  F15B         	movff	??_eval_poly+6,?___flmul+6
  3992  001B26  C153  F15C         	movff	??_eval_poly+7,?___flmul+7
  3993  001B2A  C145  F155         	movff	?_eval_poly,?___flmul
  3994  001B2E  C146  F156         	movff	?_eval_poly+1,?___flmul+1
  3995  001B32  C147  F157         	movff	?_eval_poly+2,?___flmul+2
  3996  001B36  C148  F158         	movff	?_eval_poly+3,?___flmul+3
  3997  001B3A  ECDC  F00D         	call	___flmul	;wreg free
  3998  001B3E  C155  F14C         	movff	?___flmul,??_eval_poly
  3999  001B42  C156  F14D         	movff	?___flmul+1,??_eval_poly+1
  4000  001B46  C157  F14E         	movff	?___flmul+2,??_eval_poly+2
  4001  001B4A  C158  F14F         	movff	?___flmul+3,??_eval_poly+3
  4002  001B4E  074A               	decf	(?_eval_poly+5)& (0+255),f,b
  4003  001B50  A0D8               	btfss	status,0,c
  4004  001B52  074B               	decf	(?_eval_poly+6)& (0+255),f,b
  4005  001B54  0101               	movlb	1	; () banked
  4006  001B56  514A               	movf	(?_eval_poly+5)& (0+255),w,b
  4007  001B58  0D04               	mullw	4
  4008  001B5A  5149               	movf	(?_eval_poly+4)& (0+255),w,b
  4009  001B5C  24F3               	addwf	prodl,w,c
  4010  001B5E  6F54               	movwf	(??_eval_poly+8)& (0+255),b
  4011  001B60  C154  FFF6         	movff	??_eval_poly+8,tblptrl
  4012  001B64  0E08               	movlw	high __Lsmallconst
  4013  001B66  6EF7               	movwf	tblptrh,c
  4014  001B68  0009               	tblrd		*+
  4015  001B6A  CFF5 F159          	movff	tablat,?___fladd+4
  4016  001B6E  0009               	tblrd		*+
  4017  001B70  CFF5 F15A          	movff	tablat,?___fladd+5
  4018  001B74  0009               	tblrd		*+
  4019  001B76  CFF5 F15B          	movff	tablat,?___fladd+6
  4020  001B7A  000A               	tblrd		*-
  4021  001B7C  CFF5 F15C          	movff	tablat,?___fladd+7
  4022  001B80  C14C  F155         	movff	??_eval_poly,?___fladd
  4023  001B84  C14D  F156         	movff	??_eval_poly+1,?___fladd+1
  4024  001B88  C14E  F157         	movff	??_eval_poly+2,?___fladd+2
  4025  001B8C  C14F  F158         	movff	??_eval_poly+3,?___fladd+3
  4026  001B90  EC02  F00B         	call	___fladd	;wreg free
  4027  001B94  C155  F150         	movff	?___fladd,??_eval_poly+4
  4028  001B98  C156  F151         	movff	?___fladd+1,??_eval_poly+5
  4029  001B9C  C157  F152         	movff	?___fladd+2,??_eval_poly+6
  4030  001BA0  C158  F153         	movff	?___fladd+3,??_eval_poly+7
  4031  001BA4  D7B7               	goto	l2163
  4032  001BA6                     u3590:
  4033                           ; BSR set to: 1
  4034  001BA6  C150  F145         	movff	??_eval_poly+4,?_eval_poly
  4035  001BAA  C151  F146         	movff	??_eval_poly+5,?_eval_poly+1
  4036  001BAE  C152  F147         	movff	??_eval_poly+6,?_eval_poly+2
  4037  001BB2  C153  F148         	movff	??_eval_poly+7,?_eval_poly+3
  4038                           ; BSR set to: 1
  4039  001BB6  0012               	return	
  4040  001BB8                     __end_of_eval_poly:
  4041                           	opt stack 0
  4042                           
  4043                           	psect	text33
  4044                           ; =============== function _eval_poly ends =====
      +                          =======
  4045                           ; *************** function ___fldiv ************
      +                          *****
  4046                           ; Defined at:
  4047                           ;		line 19 in file "C:\Program Files (x86)\HI-TE
      +                          CH Software\PICC-18\PRO\9.66\sources\fldiv.c"
  4048                           ; Parameters:
  4049                           ;		f1             size:   4offs:   0	type: int 
  4050                           ;		f2             size:   4offs:   4	type: int 
  4051                           ; Auto variables:
  4052                           ;		exp2        	       	type: unsigned char 
  4053                           ;		sign1       	       	type: unsigned char 
  4054                           ;		exp1        	       	type: unsigned char 
  4055                           ;		sign2       	       	type: unsigned char 
  4056                           ;		f3          	       	type: unsigned char 
  4057                           ; Return value:
  4058                           ;		type: unsigned char 
  4059                           ;		size: 4
  4060                           ; Registers used:
  4061                           ;		wreg, fsr0l, fsr0h, fsr2l, status,2, status,0
      +                          , prodl, prodh, cstack
  4062                           ; Tracked objects:
  4063                           ;		On entry : F/1
  4064                           ;		On exit  : F/1
  4065                           ;		Unchanged: FFFFFFF0/0
  4066                           ; Data sizes:
  4067                           ;		Autos:    6
  4068                           ;		Params:   8
  4069                           ;		Temp:     0
  4070                           ;		Total:   14
  4071                           ; This function calls:
  4072                           ;		___flunpack
  4073                           ;		___flpack
  4074                           ; This function is called by:
  4075                           ;		_format_double
  4076                           ;		_measure_inductance
  4077                           ;		___asfldiv
  4078                           ;		_exp
  4079                           ; This function uses a non-reentrant model
  4080                           ; 
  4081  000000                     
  4082  001D3C                     ___fldiv:
  4083                           	opt stack 25
  4084                           ; BSR set to: 1
  4085  001D3C  6B43               	clrf	(??___fldiv+2)& (0+255),b
  4086  001D3E  6B44               	clrf	(??___fldiv+3)& (0+255),b
  4087  001D40  6B45               	clrf	(??___fldiv+4)& (0+255),b
  4088  001D42  6B46               	clrf	(??___fldiv+5)& (0+255),b
  4089  001D44  0E42               	movlw	low (??___fldiv+1)
  4090  001D46  6F65               	movwf	(?___flunpack+2)& (0+255),b
  4091  001D48  0E01               	movlw	high (??___fldiv+1)
  4092  001D4A  6F66               	movwf	(?___flunpack+3)& (0+255),b
  4093  001D4C  0E39               	movlw	low ?___fldiv
  4094  001D4E  6F63               	movwf	?___flunpack& (0+255),b
  4095  001D50  0E01               	movlw	high ?___fldiv
  4096  001D52  6F64               	movwf	(?___flunpack+1)& (0+255),b
  4097  001D54  ECDF  F010         	call	___flunpack	;wreg free
  4098  001D58  6ED9               	movwf	fsr2l,c
  4099  001D5A  6742               	tstfsz	(??___fldiv+1)& (0+255),b
  4100  001D5C  D001               	goto	l1909
  4101  001D5E  D03E               	goto	l1915
  4102  001D60                     l1909:
  4103                           ; BSR set to: 1
  4104                           ; ___fldiv@sign2 allocated to prodh
  4105  001D60  0E41               	movlw	low ??___fldiv
  4106  001D62  6F65               	movwf	(?___flunpack+2)& (0+255),b
  4107  001D64  0E01               	movlw	high ??___fldiv
  4108  001D66  6F66               	movwf	(?___flunpack+3)& (0+255),b
  4109  001D68  0E3D               	movlw	low (?___fldiv+4)
  4110  001D6A  6F63               	movwf	?___flunpack& (0+255),b
  4111  001D6C  0E01               	movlw	high (?___fldiv+4)
  4112  001D6E  6F64               	movwf	(?___flunpack+1)& (0+255),b
  4113  001D70  ECDF  F010         	call	___flunpack	;wreg free
  4114  001D74  6EF4               	movwf	prodh,c
  4115  001D76  6741               	tstfsz	??___fldiv& (0+255),b
  4116  001D78  D001               	goto	l1910
  4117  001D7A  D030               	goto	l1915
  4118  001D7C                     l1910:
  4119                           ; BSR set to: 1
  4120  001D7C  5141               	movf	??___fldiv& (0+255),w,b
  4121  001D7E  0F89               	addlw	137
  4122  001D80  5F42               	subwf	(??___fldiv+1)& (0+255),f,b
  4123  001D82  50F4               	movf	prodh,w,c
  4124  001D84  1AD9               	xorwf	fsr2l,f,c
  4125                           ; ___fldiv@sign2 allocated to fsr0l
  4126  001D86  0E20               	movlw	32
  4127  001D88  6EE9               	movwf	fsr0l,c
  4128  001D8A                     l1913:
  4129                           ; BSR set to: 1
  4130  001D8A  90D8               	bcf	status,0,c
  4131  001D8C  3743               	rlcf	(??___fldiv+2)& (0+255),f,b
  4132  001D8E  3744               	rlcf	(??___fldiv+3)& (0+255),f,b
  4133  001D90  3745               	rlcf	(??___fldiv+4)& (0+255),f,b
  4134  001D92  3746               	rlcf	(??___fldiv+5)& (0+255),f,b
  4135  001D94  513D               	movf	(?___fldiv+4)& (0+255),w,b
  4136  001D96  5D39               	subwf	?___fldiv& (0+255),w,b
  4137  001D98  513E               	movf	(?___fldiv+5)& (0+255),w,b
  4138  001D9A  593A               	subwfb	(?___fldiv+1)& (0+255),w,b
  4139  001D9C  513F               	movf	(?___fldiv+6)& (0+255),w,b
  4140  001D9E  593B               	subwfb	(?___fldiv+2)& (0+255),w,b
  4141  001DA0  5140               	movf	(?___fldiv+7)& (0+255),w,b
  4142  001DA2  593C               	subwfb	(?___fldiv+3)& (0+255),w,b
  4143  001DA4  E309               	bnc	l1914
  4144  001DA6  513D               	movf	(?___fldiv+4)& (0+255),w,b
  4145  001DA8  5F39               	subwf	?___fldiv& (0+255),f,b
  4146  001DAA  513E               	movf	(?___fldiv+5)& (0+255),w,b
  4147  001DAC  5B3A               	subwfb	(?___fldiv+1)& (0+255),f,b
  4148  001DAE  513F               	movf	(?___fldiv+6)& (0+255),w,b
  4149  001DB0  5B3B               	subwfb	(?___fldiv+2)& (0+255),f,b
  4150  001DB2  5140               	movf	(?___fldiv+7)& (0+255),w,b
  4151  001DB4  5B3C               	subwfb	(?___fldiv+3)& (0+255),f,b
  4152  001DB6  8143               	bsf	(??___fldiv+2)& (0+255),0,b
  4153  001DB8                     l1914:
  4154                           ; BSR set to: 1
  4155  001DB8  90D8               	bcf	status,0,c
  4156  001DBA  3739               	rlcf	?___fldiv& (0+255),f,b
  4157  001DBC  373A               	rlcf	(?___fldiv+1)& (0+255),f,b
  4158  001DBE  373B               	rlcf	(?___fldiv+2)& (0+255),f,b
  4159  001DC0  373C               	rlcf	(?___fldiv+3)& (0+255),f,b
  4160  001DC2  2EE9               	decfsz	fsr0l,f,c
  4161  001DC4  D7E2               	goto	l1913
  4162                           ; BSR set to: 1
  4163  001DC6  C142  F165         	movff	??___fldiv+1,?___flpack+2
  4164  001DCA  0E43               	movlw	low (??___fldiv+2)
  4165  001DCC  6F63               	movwf	?___flpack& (0+255),b
  4166  001DCE  0E01               	movlw	high (??___fldiv+2)
  4167  001DD0  6F64               	movwf	(?___flpack+1)& (0+255),b
  4168  001DD2  EC92  F00C         	call	___flpack	;wreg free
  4169  001DD6  50D9               	movf	fsr2l,w,c
  4170  001DD8  A4D8               	btfss	status,2,c
  4171  001DDA  8F46               	bsf	(??___fldiv+5)& (0+255),7,b
  4172  001DDC                     l1915:
  4173                           ; BSR set to: 1
  4174  001DDC  C143  F139         	movff	??___fldiv+2,?___fldiv
  4175  001DE0  C144  F13A         	movff	??___fldiv+3,?___fldiv+1
  4176  001DE4  C145  F13B         	movff	??___fldiv+4,?___fldiv+2
  4177  001DE8  C146  F13C         	movff	??___fldiv+5,?___fldiv+3
  4178                           ; BSR set to: 1
  4179  001DEC  0012               	return	
  4180  001DEE                     __end_of___fldiv:
  4181                           	opt stack 0
  4182                           
  4183                           	psect	text34
  4184                           ; =============== function ___fldiv ends =======
      +                          =====
  4185                           ; *************** function _ldexp **************
      +                          ***
  4186                           ; Defined at:
  4187                           ;		line 278 in file "C:\Program Files (x86)\HI-T
      +                          ECH Software\PICC-18\PRO\9.66\sources\frexp.c"
  4188                           ; Parameters:
  4189                           ;		value          size:   4offs:   0	type: unsig
      +                          ned char 
  4190                           ;		newexp         size:   2offs:   4	type: int 
  4191                           ; Auto variables:
  4192                           ;		None
  4193                           ; Return value:
  4194                           ;		type: int 
  4195                           ;		size: 4
  4196                           ; Registers used:
  4197                           ;		wreg, fsr0l, fsr0h, status,2, status,0
  4198                           ; Tracked objects:
  4199                           ;		On entry : F/1
  4200                           ;		On exit  : F/1
  4201                           ;		Unchanged: FFFFFFF0/0
  4202                           ; Data sizes:
  4203                           ;		Autos:    0
  4204                           ;		Params:   6
  4205                           ;		Temp:     3
  4206                           ;		Total:    9
  4207                           ; This function calls:
  4208                           ; This function is called by:
  4209                           ;		_exp
  4210                           ; This function uses a non-reentrant model
  4211                           ; 
  4212  000000                     
  4213  001E92                     _ldexp:
  4214                           	opt stack 25
  4215                           ; BSR set to: 1
  4216  001E92  EE01  F039         	lfsr	0,?_ldexp
  4217  001E96  50EE               	movf	postinc0,w,c
  4218  001E98  10EE               	iorwf	postinc0,w,c
  4219  001E9A  10EE               	iorwf	postinc0,w,c
  4220  001E9C  10EE               	iorwf	postinc0,w,c
  4221  001E9E  E015               	bz	u3510
  4222                           ; BSR set to: 1
  4223  001EA0  0101               	movlb	1	; () banked
  4224  001EA2  513C               	movf	(?_ldexp+3)& (0+255),w,b
  4225  001EA4  0B7F               	andlw	127
  4226  001EA6  6F3F               	movwf	??_ldexp& (0+255),b
  4227  001EA8  90D8               	bcf	status,0,c
  4228  001EAA  353F               	rlcf	??_ldexp& (0+255),w,b
  4229  001EAC  6F40               	movwf	(??_ldexp+1)& (0+255),b
  4230  001EAE  6B41               	clrf	(??_ldexp+2)& (0+255),b
  4231  001EB0  3741               	rlcf	(??_ldexp+2)& (0+255),f,b
  4232  001EB2  5140               	movf	(??_ldexp+1)& (0+255),w,b
  4233  001EB4  273D               	addwf	(?_ldexp+4)& (0+255),f,b
  4234  001EB6  5141               	movf	(??_ldexp+2)& (0+255),w,b
  4235  001EB8  233E               	addwfc	(?_ldexp+5)& (0+255),f,b
  4236  001EBA  353B               	rlcf	(?_ldexp+2)& (0+255),w,b
  4237  001EBC  36E8               	rlcf	wreg,f,c
  4238  001EBE  0B01               	andlw	1
  4239  001EC0  273D               	addwf	(?_ldexp+4)& (0+255),f,b
  4240  001EC2  0E00               	movlw	0
  4241  001EC4  233E               	addwfc	(?_ldexp+5)& (0+255),f,b
  4242  001EC6  AF3E               	btfss	(?_ldexp+5)& (0+255),7,b
  4243  001EC8  D005               	goto	l1762
  4244  001ECA                     u3510:
  4245  001ECA  6B39               	clrf	?_ldexp& (0+255),b
  4246  001ECC  6B3A               	clrf	(?_ldexp+1)& (0+255),b
  4247  001ECE  6B3B               	clrf	(?_ldexp+2)& (0+255),b
  4248  001ED0  6B3C               	clrf	(?_ldexp+3)& (0+255),b
  4249  001ED2  D028               	goto	l1760
  4250  001ED4                     l1762:
  4251                           ; BSR set to: 1
  4252  001ED4  513E               	movf	(?_ldexp+5)& (0+255),w,b
  4253  001ED6  0A80               	xorlw	128
  4254  001ED8  0F7F               	addlw	-129
  4255  001EDA  0E00               	movlw	0
  4256  001EDC  B4D8               	btfsc	status,2,c
  4257  001EDE  5D3D               	subwf	(?_ldexp+4)& (0+255),w,b
  4258  001EE0  E30B               	bnc	l1764
  4259  001EE2  6939               	setf	?_ldexp& (0+255),b
  4260  001EE4  693A               	setf	(?_ldexp+1)& (0+255),b
  4261  001EE6  0E7F               	movlw	127
  4262  001EE8  6F3B               	movwf	(?_ldexp+2)& (0+255),b
  4263  001EEA  AF3C               	btfss	(?_ldexp+3)& (0+255),7,b
  4264  001EEC  D002               	goto	L8
  4265  001EEE  0EFF               	movlw	255
  4266  001EF0  D001               	goto	L7
  4267                           ; BSR set to: 1
  4268  001EF2                     L8:
  4269  001EF2  0E7F               	movlw	127
  4270  001EF4                     L7:
  4271  001EF4  6F3C               	movwf	(?_ldexp+3)& (0+255),b
  4272  001EF6  D016               	goto	l1760
  4273  001EF8                     l1764:
  4274                           ; BSR set to: 1
  4275  001EF8  353E               	rlcf	(?_ldexp+5)& (0+255),w,b
  4276  001EFA  313E               	rrcf	(?_ldexp+5)& (0+255),w,b
  4277  001EFC  6F40               	movwf	(??_ldexp+1)& (0+255),b
  4278  001EFE  313D               	rrcf	(?_ldexp+4)& (0+255),w,b
  4279  001F00  6F3F               	movwf	??_ldexp& (0+255),b
  4280  001F02  0101               	movlb	1	; () banked
  4281  001F04  513C               	movf	(?_ldexp+3)& (0+255),w,b
  4282  001F06  193F               	xorwf	??_ldexp& (0+255),w,b
  4283  001F08  0B80               	andlw	-128
  4284  001F0A  193F               	xorwf	??_ldexp& (0+255),w,b
  4285  001F0C  6F3C               	movwf	(?_ldexp+3)& (0+255),b
  4286  001F0E  C13D  F13F         	movff	?_ldexp+4,??_ldexp
  4287  001F12  0E01               	movlw	1
  4288  001F14  173F               	andwf	??_ldexp& (0+255),f,b
  4289  001F16  333F               	rrcf	??_ldexp& (0+255),f,b
  4290  001F18  333F               	rrcf	??_ldexp& (0+255),f,b
  4291  001F1A  513B               	movf	(?_ldexp+2)& (0+255),w,b
  4292  001F1C  193F               	xorwf	??_ldexp& (0+255),w,b
  4293  001F1E  0B7F               	andlw	-129
  4294  001F20  193F               	xorwf	??_ldexp& (0+255),w,b
  4295  001F22  6F3B               	movwf	(?_ldexp+2)& (0+255),b
  4296                           ; BSR set to: 1
  4297                           ; BSR set to: 1
  4298  001F24                     l1760:
  4299                           ; BSR set to: 1
  4300  001F24  0012               	return	
  4301  001F26                     __end_of_ldexp:
  4302                           	opt stack 0
  4303                           
  4304                           	psect	text35
  4305                           ; =============== function _ldexp ends =========
      +                          ===
  4306                           ; *************** function ___flsub ************
      +                          *****
  4307                           ; Defined at:
  4308                           ;		line 17 in file "C:\Program Files (x86)\HI-TE
      +                          CH Software\PICC-18\PRO\9.66\sources\flsub.c"
  4309                           ; Parameters:
  4310                           ;		f1             size:   4offs:   0	type: int 
  4311                           ;		f2             size:   4offs:   4	type: int 
  4312                           ; Auto variables:
  4313                           ;		None
  4314                           ; Return value:
  4315                           ;		type: int 
  4316                           ;		size: 4
  4317                           ; Registers used:
  4318                           ;		wreg, fsr0l, fsr0h, fsr2l, status,2, status,0
      +                          , prodl, prodh, cstack
  4319                           ; Tracked objects:
  4320                           ;		On entry : F/1
  4321                           ;		On exit  : F/1
  4322                           ;		Unchanged: FFFFFFF0/0
  4323                           ; Data sizes:
  4324                           ;		Autos:    0
  4325                           ;		Params:   8
  4326                           ;		Temp:     0
  4327                           ;		Total:    8
  4328                           ; This function calls:
  4329                           ;		___fladd
  4330                           ; This function is called by:
  4331                           ;		_measure_capacitance
  4332                           ;		_measure_inductance
  4333                           ;		___asflsub
  4334                           ; This function uses a non-reentrant model
  4335                           ; 
  4336  000000                     
  4337  002558                     ___flsub:
  4338                           	opt stack 24
  4339                           ; BSR set to: 1
  4340  002558  0E80               	movlw	128
  4341  00255A  1B46               	xorwf	(?___flsub+7)& (0+255),f,b
  4342  00255C  C143  F159         	movff	?___flsub+4,?___fladd+4
  4343  002560  C144  F15A         	movff	?___flsub+5,?___fladd+5
  4344  002564  C145  F15B         	movff	?___flsub+6,?___fladd+6
  4345  002568  C146  F15C         	movff	?___flsub+7,?___fladd+7
  4346  00256C  C13F  F155         	movff	?___flsub,?___fladd
  4347  002570  C140  F156         	movff	?___flsub+1,?___fladd+1
  4348  002574  C141  F157         	movff	?___flsub+2,?___fladd+2
  4349  002578  C142  F158         	movff	?___flsub+3,?___fladd+3
  4350  00257C  EC02  F00B         	call	___fladd	;wreg free
  4351  002580  C155  F13F         	movff	?___fladd,?___flsub
  4352  002584  C156  F140         	movff	?___fladd+1,?___flsub+1
  4353  002588  C157  F141         	movff	?___fladd+2,?___flsub+2
  4354  00258C  C158  F142         	movff	?___fladd+3,?___flsub+3
  4355                           ; BSR set to: 1
  4356  002590  0012               	return	
  4357  002592                     __end_of___flsub:
  4358                           	opt stack 0
  4359                           
  4360                           	psect	text36
  4361                           ; =============== function ___flsub ends =======
      +                          =====
  4362                           ; *************** function _frexp **************
      +                          ***
  4363                           ; Defined at:
  4364                           ;		line 255 in file "C:\Program Files (x86)\HI-T
      +                          ECH Software\PICC-18\PRO\9.66\sources\frexp.c"
  4365                           ; Parameters:
  4366                           ;		value          size:   4offs:   0	type: int 
  4367                           ;		eptr           size:   2offs:   4	type: PTR i
      +                          nt ; Largest target is 2
  4368                           ;		 -> log@exp(2), floor@expon(2), 
  4369                           ; Auto variables:
  4370                           ;		None
  4371                           ; Return value:
  4372                           ;		type: PTR int 
  4373                           ;		size: 4
  4374                           ; Registers used:
  4375                           ;		wreg, fsr0l, fsr0h, status,2, status,0
  4376                           ; Tracked objects:
  4377                           ;		On entry : F/1
  4378                           ;		On exit  : F/1
  4379                           ;		Unchanged: FFFFFFF0/0
  4380                           ; Data sizes:
  4381                           ;		Autos:    0
  4382                           ;		Params:   6
  4383                           ;		Temp:     3
  4384                           ;		Total:    9
  4385                           ; This function calls:
  4386                           ;		Nothing
  4387                           ; This function is called by:
  4388                           ;		_floor
  4389                           ;		_log
  4390                           ; This function uses a non-reentrant model
  4391                           ; 
  4392  000000                     
  4393  002146                     _frexp:
  4394                           	opt stack 24
  4395                           ; BSR set to: 1
  4396  002146  EE01  F045         	lfsr	0,?_frexp
  4397  00214A  50EE               	movf	postinc0,w,c
  4398  00214C  10EE               	iorwf	postinc0,w,c
  4399  00214E  10EE               	iorwf	postinc0,w,c
  4400  002150  10EE               	iorwf	postinc0,w,c
  4401  002152  E10C               	bnz	l1759
  4402  002154  C149  FFE9         	movff	?_frexp+4,fsr0l
  4403  002158  C14A  FFEA         	movff	?_frexp+5,fsr0h
  4404  00215C  0E00               	movlw	0
  4405  00215E  6AEE               	clrf	postinc0,c
  4406  002160  6AED               	clrf	postdec0,c
  4407  002162  6B45               	clrf	?_frexp& (0+255),b
  4408  002164  6B46               	clrf	(?_frexp+1)& (0+255),b
  4409  002166  6B47               	clrf	(?_frexp+2)& (0+255),b
  4410  002168  6B48               	clrf	(?_frexp+3)& (0+255),b
  4411  00216A  D028               	goto	l1758
  4412  00216C                     l1759:
  4413                           ; BSR set to: 1
  4414  00216C  0101               	movlb	1	; () banked
  4415  00216E  5148               	movf	(?_frexp+3)& (0+255),w,b
  4416  002170  0B7F               	andlw	127
  4417  002172  6F4B               	movwf	??_frexp& (0+255),b
  4418  002174  90D8               	bcf	status,0,c
  4419  002176  354B               	rlcf	??_frexp& (0+255),w,b
  4420  002178  6F4C               	movwf	(??_frexp+1)& (0+255),b
  4421  00217A  6B4D               	clrf	(??_frexp+2)& (0+255),b
  4422  00217C  374D               	rlcf	(??_frexp+2)& (0+255),f,b
  4423  00217E  C149  FFE9         	movff	?_frexp+4,fsr0l
  4424  002182  C14A  FFEA         	movff	?_frexp+5,fsr0h
  4425  002186  C14C  FFEE         	movff	??_frexp+1,postinc0
  4426  00218A  C14D  FFED         	movff	??_frexp+2,postdec0
  4427  00218E  3547               	rlcf	(?_frexp+2)& (0+255),w,b
  4428  002190  36E8               	rlcf	wreg,f,c
  4429  002192  0B01               	andlw	1
  4430  002194  C149  FFE9         	movff	?_frexp+4,fsr0l
  4431  002198  C14A  FFEA         	movff	?_frexp+5,fsr0h
  4432  00219C  12EE               	iorwf	postinc0,f,c
  4433  00219E  0E00               	movlw	0
  4434  0021A0  12ED               	iorwf	postdec0,f,c
  4435  0021A2  C149  FFE9         	movff	?_frexp+4,fsr0l
  4436  0021A6  C14A  FFEA         	movff	?_frexp+5,fsr0h
  4437  0021AA  0E82               	movlw	130
  4438  0021AC  26EE               	addwf	postinc0,f,c
  4439  0021AE  0EFF               	movlw	255
  4440  0021B0  22ED               	addwfc	postdec0,f,c
  4441  0021B2  5148               	movf	(?_frexp+3)& (0+255),w,b
  4442  0021B4  0B80               	andlw	-128
  4443  0021B6  093F               	iorlw	63
  4444  0021B8  6F48               	movwf	(?_frexp+3)& (0+255),b
  4445  0021BA  9F47               	bcf	(?_frexp+2)& (0+255),7,b
  4446  0021BC                     l1758:
  4447                           ; BSR set to: 1
  4448  0021BC  0012               	return	
  4449  0021BE                     __end_of_frexp:
  4450                           	opt stack 0
  4451                           
  4452                           	psect	text37
  4453                           ; =============== function _frexp ends =========
      +                          ===
  4454                           ; *************** function ___flmul ************
      +                          *****
  4455                           ; Defined at:
  4456                           ;		line 18 in file "C:\Program Files (x86)\HI-TE
      +                          CH Software\PICC-18\PRO\9.66\sources\flmul.c"
  4457                           ; Parameters:
  4458                           ;		f1             size:   4offs:   0	type: PTR i
      +                          nt 
  4459                           ;		f2             size:   4offs:   4	type: PTR i
      +                          nt 
  4460                           ; Auto variables:
  4461                           ;		sign1       	       	type: unsigned char 
  4462                           ;		exp1        	       	type: unsigned char 
  4463                           ;		cntr        	       	type: unsigned char 
  4464                           ;		f3          	       	type: unsigned char 
  4465                           ; Return value:
  4466                           ;		type: unsigned char 
  4467                           ;		size: 4
  4468                           ; Registers used:
  4469                           ;		wreg, fsr0l, fsr0h, fsr2l, status,2, status,0
      +                          , prodl, cstack
  4470                           ; Tracked objects:
  4471                           ;		On entry : F/1
  4472                           ;		On exit  : F/1
  4473                           ;		Unchanged: FFFFFFF0/0
  4474                           ; Data sizes:
  4475                           ;		Autos:    6
  4476                           ;		Params:   8
  4477                           ;		Temp:     0
  4478                           ;		Total:   14
  4479                           ; This function calls:
  4480                           ;		___flunpack
  4481                           ;		___flpack
  4482                           ; This function is called by:
  4483                           ;		_format_double
  4484                           ;		_measure_capacitance
  4485                           ;		_measure_inductance
  4486                           ;		_log
  4487                           ;		_log10
  4488                           ;		_pow
  4489                           ;		___asflmul
  4490                           ;		_eval_poly
  4491                           ; This function uses a non-reentrant model
  4492                           ; 
  4493  000000                     
  4494  001BB8                     ___flmul:
  4495                           	opt stack 24
  4496                           ; BSR set to: 1
  4497  001BB8  6B5F               	clrf	(??___flmul+2)& (0+255),b
  4498  001BBA  6B60               	clrf	(??___flmul+3)& (0+255),b
  4499  001BBC  6B61               	clrf	(??___flmul+4)& (0+255),b
  4500  001BBE  6B62               	clrf	(??___flmul+5)& (0+255),b
  4501  001BC0  0E5D               	movlw	low ??___flmul
  4502  001BC2  6F65               	movwf	(?___flunpack+2)& (0+255),b
  4503  001BC4  0E01               	movlw	high ??___flmul
  4504  001BC6  6F66               	movwf	(?___flunpack+3)& (0+255),b
  4505  001BC8  0E55               	movlw	low ?___flmul
  4506  001BCA  6F63               	movwf	?___flunpack& (0+255),b
  4507  001BCC  0E01               	movlw	high ?___flmul
  4508  001BCE  6F64               	movwf	(?___flunpack+1)& (0+255),b
  4509  001BD0  ECDF  F010         	call	___flunpack	;wreg free
  4510  001BD4  6ED9               	movwf	fsr2l,c
  4511  001BD6  0E5E               	movlw	low (??___flmul+1)
  4512  001BD8  6F65               	movwf	(?___flunpack+2)& (0+255),b
  4513  001BDA  0E01               	movlw	high (??___flmul+1)
  4514  001BDC  6F66               	movwf	(?___flunpack+3)& (0+255),b
  4515  001BDE  0E59               	movlw	low (?___flmul+4)
  4516  001BE0  6F63               	movwf	?___flunpack& (0+255),b
  4517  001BE2  0E01               	movlw	high (?___flmul+4)
  4518  001BE4  6F64               	movwf	(?___flunpack+1)& (0+255),b
  4519  001BE6  ECDF  F010         	call	___flunpack	;wreg free
  4520  001BEA  1AD9               	xorwf	fsr2l,f,c
  4521  001BEC  515E               	movf	(??___flmul+1)& (0+255),w,b
  4522  001BEE  E041               	bz	l1927
  4523  001BF0  675D               	tstfsz	??___flmul& (0+255),b
  4524  001BF2  D001               	goto	l1918
  4525  001BF4  D03E               	goto	l1927
  4526                           ; BSR set to: 1
  4527  001BF6                     l1918:
  4528                           ; BSR set to: 1
  4529  001BF6  515E               	movf	(??___flmul+1)& (0+255),w,b
  4530  001BF8  0F7B               	addlw	123
  4531  001BFA  275D               	addwf	??___flmul& (0+255),f,b
  4532  001BFC  0E07               	movlw	7
  4533  001BFE  6F5E               	movwf	(??___flmul+1)& (0+255),b
  4534  001C00                     l1921:
  4535                           ; BSR set to: 1
  4536  001C00  A155               	btfss	?___flmul& (0+255),0,b
  4537  001C02  D008               	goto	l1922
  4538  001C04  5159               	movf	(?___flmul+4)& (0+255),w,b
  4539  001C06  275F               	addwf	(??___flmul+2)& (0+255),f,b
  4540  001C08  515A               	movf	(?___flmul+5)& (0+255),w,b
  4541  001C0A  2360               	addwfc	(??___flmul+3)& (0+255),f,b
  4542  001C0C  515B               	movf	(?___flmul+6)& (0+255),w,b
  4543  001C0E  2361               	addwfc	(??___flmul+4)& (0+255),f,b
  4544  001C10  515C               	movf	(?___flmul+7)& (0+255),w,b
  4545  001C12  2362               	addwfc	(??___flmul+5)& (0+255),f,b
  4546  001C14                     l1922:
  4547                           ; BSR set to: 1
  4548  001C14  90D8               	bcf	status,0,c
  4549  001C16  3358               	rrcf	(?___flmul+3)& (0+255),f,b
  4550  001C18  3357               	rrcf	(?___flmul+2)& (0+255),f,b
  4551  001C1A  3356               	rrcf	(?___flmul+1)& (0+255),f,b
  4552  001C1C  3355               	rrcf	?___flmul& (0+255),f,b
  4553  001C1E  90D8               	bcf	status,0,c
  4554  001C20  3759               	rlcf	(?___flmul+4)& (0+255),f,b
  4555  001C22  375A               	rlcf	(?___flmul+5)& (0+255),f,b
  4556  001C24  375B               	rlcf	(?___flmul+6)& (0+255),f,b
  4557  001C26  375C               	rlcf	(?___flmul+7)& (0+255),f,b
  4558  001C28  2F5E               	decfsz	(??___flmul+1)& (0+255),f,b
  4559  001C2A  D7EA               	goto	l1921
  4560                           ; BSR set to: 1
  4561  001C2C  0E11               	movlw	17
  4562  001C2E  6F5E               	movwf	(??___flmul+1)& (0+255),b
  4563  001C30                     l1925:
  4564                           ; BSR set to: 1
  4565  001C30  A155               	btfss	?___flmul& (0+255),0,b
  4566  001C32  D008               	goto	l1926
  4567  001C34  5159               	movf	(?___flmul+4)& (0+255),w,b
  4568  001C36  275F               	addwf	(??___flmul+2)& (0+255),f,b
  4569  001C38  515A               	movf	(?___flmul+5)& (0+255),w,b
  4570  001C3A  2360               	addwfc	(??___flmul+3)& (0+255),f,b
  4571  001C3C  515B               	movf	(?___flmul+6)& (0+255),w,b
  4572  001C3E  2361               	addwfc	(??___flmul+4)& (0+255),f,b
  4573  001C40  515C               	movf	(?___flmul+7)& (0+255),w,b
  4574  001C42  2362               	addwfc	(??___flmul+5)& (0+255),f,b
  4575  001C44                     l1926:
  4576                           ; BSR set to: 1
  4577  001C44  90D8               	bcf	status,0,c
  4578  001C46  3358               	rrcf	(?___flmul+3)& (0+255),f,b
  4579  001C48  3357               	rrcf	(?___flmul+2)& (0+255),f,b
  4580  001C4A  3356               	rrcf	(?___flmul+1)& (0+255),f,b
  4581  001C4C  3355               	rrcf	?___flmul& (0+255),f,b
  4582  001C4E  90D8               	bcf	status,0,c
  4583  001C50  3362               	rrcf	(??___flmul+5)& (0+255),f,b
  4584  001C52  3361               	rrcf	(??___flmul+4)& (0+255),f,b
  4585  001C54  3360               	rrcf	(??___flmul+3)& (0+255),f,b
  4586  001C56  335F               	rrcf	(??___flmul+2)& (0+255),f,b
  4587  001C58  2F5E               	decfsz	(??___flmul+1)& (0+255),f,b
  4588  001C5A  D7EA               	goto	l1925
  4589                           ; BSR set to: 1
  4590  001C5C  C15D  F165         	movff	??___flmul,?___flpack+2
  4591  001C60  0E5F               	movlw	low (??___flmul+2)
  4592  001C62  6F63               	movwf	?___flpack& (0+255),b
  4593  001C64  0E01               	movlw	high (??___flmul+2)
  4594  001C66  6F64               	movwf	(?___flpack+1)& (0+255),b
  4595  001C68  EC92  F00C         	call	___flpack	;wreg free
  4596  001C6C  50D9               	movf	fsr2l,w,c
  4597  001C6E  A4D8               	btfss	status,2,c
  4598  001C70  8F62               	bsf	(??___flmul+5)& (0+255),7,b
  4599  001C72                     l1927:
  4600                           ; BSR set to: 1
  4601  001C72  C15F  F155         	movff	??___flmul+2,?___flmul
  4602  001C76  C160  F156         	movff	??___flmul+3,?___flmul+1
  4603  001C7A  C161  F157         	movff	??___flmul+4,?___flmul+2
  4604  001C7E  C162  F158         	movff	??___flmul+5,?___flmul+3
  4605                           ; BSR set to: 1
  4606  001C82  0012               	return	
  4607  001C84                     __end_of___flmul:
  4608                           	opt stack 0
  4609                           
  4610                           	psect	text38
  4611                           ; =============== function ___flmul ends =======
      +                          =====
  4612                           ; *************** function ___fltol ************
      +                          *****
  4613                           ; Defined at:
  4614                           ;		line 16 in file "C:\Program Files (x86)\HI-TE
      +                          CH Software\PICC-18\PRO\9.66\sources\fltol.c"
  4615                           ; Parameters:
  4616                           ;		f1             size:   4offs:   0	type: unsig
      +                          ned char 
  4617                           ; Auto variables:
  4618                           ;		sign1       	       	type: unsigned char 
  4619                           ;		exp1        	       	type: unsigned char 
  4620                           ;		lval        	       	type: unsigned long 
  4621                           ; Return value:
  4622                           ;		type: long 
  4623                           ;		size: 4
  4624                           ; Registers used:
  4625                           ;		wreg, fsr0l, fsr0h, fsr2l, status,2, status,0
      +                          , prodl, cstack
  4626                           ; Tracked objects:
  4627                           ;		On entry : F/1
  4628                           ;		On exit  : F/1
  4629                           ;		Unchanged: FFFFFFF0/0
  4630                           ; Data sizes:
  4631                           ;		Autos:    5
  4632                           ;		Params:   4
  4633                           ;		Temp:     0
  4634                           ;		Total:    9
  4635                           ; This function calls:
  4636                           ;		___flunpack
  4637                           ; This function is called by:
  4638                           ;		_format_double
  4639                           ;		_measure_capacitance
  4640                           ;		_measure_inductance
  4641                           ;		_floor
  4642                           ;		_pow
  4643                           ;		_exp
  4644                           ; This function uses a non-reentrant model
  4645                           ; 
  4646  000000                     
  4647  001FB2                     ___fltol:
  4648                           	opt stack 24
  4649                           ; BSR set to: 1
  4650  001FB2  0E47               	movlw	low ??___fltol
  4651  001FB4  6F65               	movwf	(?___flunpack+2)& (0+255),b
  4652  001FB6  0E01               	movlw	high ??___fltol
  4653  001FB8  6F66               	movwf	(?___flunpack+3)& (0+255),b
  4654  001FBA  0E43               	movlw	low ?___fltol
  4655  001FBC  6F63               	movwf	?___flunpack& (0+255),b
  4656  001FBE  0E01               	movlw	high ?___fltol
  4657  001FC0  6F64               	movwf	(?___flunpack+1)& (0+255),b
  4658  001FC2  ECDF  F010         	call	___flunpack	;wreg free
  4659  001FC6  6ED9               	movwf	fsr2l,c
  4660  001FC8  C143  F148         	movff	?___fltol,??___fltol+1
  4661  001FCC  C144  F149         	movff	?___fltol+1,??___fltol+2
  4662  001FD0  C145  F14A         	movff	?___fltol+2,??___fltol+3
  4663  001FD4  C146  F14B         	movff	?___fltol+3,??___fltol+4
  4664  001FD8  0E96               	movlw	150
  4665  001FDA  5F47               	subwf	??___fltol& (0+255),f,b
  4666  001FDC  AF47               	btfss	??___fltol& (0+255),7,b
  4667  001FDE  D00C               	goto	l1951
  4668  001FE0  5147               	movf	??___fltol& (0+255),w,b
  4669  001FE2  0A80               	xorlw	128
  4670  001FE4  0F97               	addlw	151
  4671  001FE6  E30B               	bnc	u3760
  4672  001FE8                     l1955:
  4673                           ; BSR set to: 1
  4674  001FE8  90D8               	bcf	status,0,c
  4675  001FEA  334B               	rrcf	(??___fltol+4)& (0+255),f,b
  4676  001FEC  334A               	rrcf	(??___fltol+3)& (0+255),f,b
  4677  001FEE  3349               	rrcf	(??___fltol+2)& (0+255),f,b
  4678  001FF0  3348               	rrcf	(??___fltol+1)& (0+255),f,b
  4679  001FF2  3F47               	incfsz	??___fltol& (0+255),f,b
  4680  001FF4  D7F9               	goto	l1955
  4681                           ; BSR set to: 1
  4682  001FF6  D010               	goto	l1956
  4683  001FF8                     l1951:
  4684                           ; BSR set to: 1
  4685  001FF8  0E1F               	movlw	31
  4686  001FFA  6547               	cpfsgt	??___fltol& (0+255),b
  4687  001FFC  D00B               	goto	l1958
  4688  001FFE                     u3760:
  4689  001FFE  6B43               	clrf	?___fltol& (0+255),b
  4690  002000  6B44               	clrf	(?___fltol+1)& (0+255),b
  4691  002002  6B45               	clrf	(?___fltol+2)& (0+255),b
  4692  002004  6B46               	clrf	(?___fltol+3)& (0+255),b
  4693  002006  D01A               	goto	l1950
  4694                           ; BSR set to: 1
  4695  002008                     l1959:
  4696                           ; BSR set to: 1
  4697  002008  90D8               	bcf	status,0,c
  4698  00200A  3748               	rlcf	(??___fltol+1)& (0+255),f,b
  4699  00200C  3749               	rlcf	(??___fltol+2)& (0+255),f,b
  4700  00200E  374A               	rlcf	(??___fltol+3)& (0+255),f,b
  4701  002010  374B               	rlcf	(??___fltol+4)& (0+255),f,b
  4702  002012  0747               	decf	??___fltol& (0+255),f,b
  4703  002014                     l1958:
  4704                           ; BSR set to: 1
  4705  002014  6747               	tstfsz	??___fltol& (0+255),b
  4706  002016  D7F8               	goto	l1959
  4707                           ; BSR set to: 1
  4708  002018                     l1956:
  4709                           ; BSR set to: 1
  4710  002018  50D9               	movf	fsr2l,w,c
  4711  00201A  E008               	bz	l1961
  4712  00201C  1F4B               	comf	(??___fltol+4)& (0+255),f,b
  4713  00201E  1F4A               	comf	(??___fltol+3)& (0+255),f,b
  4714  002020  1F49               	comf	(??___fltol+2)& (0+255),f,b
  4715  002022  6D48               	negf	(??___fltol+1)& (0+255),b
  4716  002024  0E00               	movlw	0
  4717  002026  2349               	addwfc	(??___fltol+2)& (0+255),f,b
  4718  002028  234A               	addwfc	(??___fltol+3)& (0+255),f,b
  4719  00202A  234B               	addwfc	(??___fltol+4)& (0+255),f,b
  4720  00202C                     l1961:
  4721                           ; BSR set to: 1
  4722  00202C  C148  F143         	movff	??___fltol+1,?___fltol
  4723  002030  C149  F144         	movff	??___fltol+2,?___fltol+1
  4724  002034  C14A  F145         	movff	??___fltol+3,?___fltol+2
  4725  002038  C14B  F146         	movff	??___fltol+4,?___fltol+3
  4726  00203C                     l1950:
  4727                           ; BSR set to: 1
  4728  00203C  0012               	return	
  4729  00203E                     __end_of___fltol:
  4730                           	opt stack 0
  4731                           
  4732                           	psect	text39
  4733                           ; =============== function ___fltol ends =======
      +                          =====
  4734                           ; *************** function ___altofl ***********
      +                          ******
  4735                           ; Defined at:
  4736                           ;		line 16 in file "C:\Program Files (x86)\HI-TE
      +                          CH Software\PICC-18\PRO\9.66\sources\altofl.c"
  4737                           ; Parameters:
  4738                           ;		c              size:   4offs:   0	type: long 
  4739                           ; Auto variables:
  4740                           ;		exp         	       	type: unsigned char 
  4741                           ;		sign        	       	type: unsigned char 
  4742                           ;		f1          	       	type: unsigned char 
  4743                           ; Return value:
  4744                           ;		type: unsigned char 
  4745                           ;		size: 4
  4746                           ; Registers used:
  4747                           ;		wreg, fsr0l, fsr0h, fsr2l, status,2, status,0
      +                          , prodl, cstack
  4748                           ; Tracked objects:
  4749                           ;		On entry : F/1
  4750                           ;		On exit  : F/1
  4751                           ;		Unchanged: FFFFFFF0/0
  4752                           ; Data sizes:
  4753                           ;		Autos:    4
  4754                           ;		Params:   4
  4755                           ;		Temp:     0
  4756                           ;		Total:    8
  4757                           ; This function calls:
  4758                           ;		___flpack
  4759                           ;		___flneg
  4760                           ; This function is called by:
  4761                           ;		_floor
  4762                           ; This function uses a non-reentrant model
  4763                           ; 
  4764  000000                     
  4765  001F26                     ___altofl:
  4766                           	opt stack 24
  4767                           ; BSR set to: 1
  4768  001F26  5146               	movf	(?___altofl+3)& (0+255),w,b
  4769  001F28  1143               	iorwf	?___altofl& (0+255),w,b
  4770  001F2A  1144               	iorwf	(?___altofl+1)& (0+255),w,b
  4771  001F2C  1145               	iorwf	(?___altofl+2)& (0+255),w,b
  4772  001F2E  E105               	bnz	l1817
  4773  001F30  6B43               	clrf	?___altofl& (0+255),b
  4774  001F32  6B44               	clrf	(?___altofl+1)& (0+255),b
  4775  001F34  6B45               	clrf	(?___altofl+2)& (0+255),b
  4776  001F36  6B46               	clrf	(?___altofl+3)& (0+255),b
  4777  001F38  D03B               	goto	l1816
  4778  001F3A                     l1817:
  4779                           ; BSR set to: 1
  4780  001F3A  6AD9               	clrf	fsr2l,c
  4781  001F3C  AF46               	btfss	(?___altofl+3)& (0+255),7,b
  4782  001F3E  D00A               	goto	l1818
  4783  001F40  1F46               	comf	(?___altofl+3)& (0+255),f,b
  4784  001F42  1F45               	comf	(?___altofl+2)& (0+255),f,b
  4785  001F44  1F44               	comf	(?___altofl+1)& (0+255),f,b
  4786  001F46  6D43               	negf	?___altofl& (0+255),b
  4787  001F48  0E00               	movlw	0
  4788  001F4A  2344               	addwfc	(?___altofl+1)& (0+255),f,b
  4789  001F4C  2345               	addwfc	(?___altofl+2)& (0+255),f,b
  4790  001F4E  2346               	addwfc	(?___altofl+3)& (0+255),f,b
  4791  001F50  0E01               	movlw	1
  4792  001F52  6ED9               	movwf	fsr2l,c
  4793  001F54                     l1818:
  4794                           ; BSR set to: 1
  4795  001F54  0E96               	movlw	150
  4796  001F56  6EF3               	movwf	prodl,c
  4797  001F58  C143  F147         	movff	?___altofl,??___altofl
  4798  001F5C  C144  F148         	movff	?___altofl+1,??___altofl+1
  4799  001F60  C145  F149         	movff	?___altofl+2,??___altofl+2
  4800  001F64  C146  F14A         	movff	?___altofl+3,??___altofl+3
  4801  001F68  CFF3 F165          	movff	prodl,?___flpack+2
  4802  001F6C  0E47               	movlw	low ??___altofl
  4803  001F6E  6F63               	movwf	?___flpack& (0+255),b
  4804  001F70  0E01               	movlw	high ??___altofl
  4805  001F72  6F64               	movwf	(?___flpack+1)& (0+255),b
  4806  001F74  EC92  F00C         	call	___flpack	;wreg free
  4807  001F78  50D9               	movf	fsr2l,w,c
  4808  001F7A  E012               	bz	l1819
  4809  001F7C  C147  F14D         	movff	??___altofl,?___flneg
  4810  001F80  C148  F14E         	movff	??___altofl+1,?___flneg+1
  4811  001F84  C149  F14F         	movff	??___altofl+2,?___flneg+2
  4812  001F88  C14A  F150         	movff	??___altofl+3,?___flneg+3
  4813  001F8C  EC33  F013         	call	___flneg	;wreg free
  4814  001F90  C14D  F147         	movff	?___flneg,??___altofl
  4815  001F94  C14E  F148         	movff	?___flneg+1,??___altofl+1
  4816  001F98  C14F  F149         	movff	?___flneg+2,??___altofl+2
  4817  001F9C  C150  F14A         	movff	?___flneg+3,??___altofl+3
  4818  001FA0                     l1819:
  4819                           ; BSR set to: 1
  4820  001FA0  C147  F143         	movff	??___altofl,?___altofl
  4821  001FA4  C148  F144         	movff	??___altofl+1,?___altofl+1
  4822  001FA8  C149  F145         	movff	??___altofl+2,?___altofl+2
  4823  001FAC  C14A  F146         	movff	??___altofl+3,?___altofl+3
  4824  001FB0                     l1816:
  4825                           ; BSR set to: 1
  4826  001FB0  0012               	return	
  4827  001FB2                     __end_of___altofl:
  4828                           	opt stack 0
  4829                           
  4830                           	psect	text40
  4831                           ; =============== function ___altofl ends ======
      +                          ======
  4832                           ; *************** function ___flge *************
      +                          ****
  4833                           ; Defined at:
  4834                           ;		line 5 in file "C:\Program Files (x86)\HI-TEC
      +                          H Software\PICC-18\PRO\9.66\sources\flge.c"
  4835                           ; Parameters:
  4836                           ;		ff1            size:   4offs:   0	type: unsig
      +                          ned char 
  4837                           ;		ff2            size:   4offs:   4	type: unsig
      +                          ned char 
  4838                           ; Auto variables:
  4839                           ;		None
  4840                           ; Return value:
  4841                           ;		type: bit 
  4842                           ;		size: 0
  4843                           ; Registers used:
  4844                           ;		wreg, status,2, status,0
  4845                           ; Tracked objects:
  4846                           ;		On entry : E/1
  4847                           ;		On exit  : F/1
  4848                           ;		Unchanged: FFFFFFF0/0
  4849                           ; Data sizes:
  4850                           ;		Autos:    0
  4851                           ;		Params:   8
  4852                           ;		Temp:     0
  4853                           ;		Total:    8
  4854                           ; This function calls:
  4855                           ;		Nothing
  4856                           ; This function is called by:
  4857                           ;		_format_double
  4858                           ;		_measure_capacitance
  4859                           ;		_measure_inductance
  4860                           ;		_floor
  4861                           ;		_pow
  4862                           ;		_exp
  4863                           ; This function uses a non-reentrant model
  4864                           ; 
  4865  000000                     
  4866  002402                     ___flge:
  4867                           	opt stack 24
  4868                           ; BSR set to: ?
  4869  002402  0101               	movlb	1	; () banked
  4870  002404  AF46               	btfss	(?___flge+3)& (0+255),7,b
  4871  002406  D009               	goto	l2113
  4872  002408  6D43               	negf	?___flge& (0+255),b
  4873  00240A  1F44               	comf	(?___flge+1)& (0+255),f,b
  4874  00240C  B0D8               	btfsc	status,0,c
  4875  00240E  2B44               	incf	(?___flge+1)& (0+255),f,b
  4876  002410  1F45               	comf	(?___flge+2)& (0+255),f,b
  4877  002412  B0D8               	btfsc	status,0,c
  4878  002414  2B45               	incf	(?___flge+2)& (0+255),f,b
  4879  002416  0E80               	movlw	128
  4880  002418  5746               	subfwb	(?___flge+3)& (0+255),f,b
  4881  00241A                     l2113:
  4882                           ; BSR set to: 1
  4883  00241A  AF4A               	btfss	(?___flge+7)& (0+255),7,b
  4884  00241C  D009               	goto	l2114
  4885  00241E  6D47               	negf	(?___flge+4)& (0+255),b
  4886  002420  1F48               	comf	(?___flge+5)& (0+255),f,b
  4887  002422  B0D8               	btfsc	status,0,c
  4888  002424  2B48               	incf	(?___flge+5)& (0+255),f,b
  4889  002426  1F49               	comf	(?___flge+6)& (0+255),f,b
  4890  002428  B0D8               	btfsc	status,0,c
  4891  00242A  2B49               	incf	(?___flge+6)& (0+255),f,b
  4892  00242C  0E80               	movlw	128
  4893  00242E  574A               	subfwb	(?___flge+7)& (0+255),f,b
  4894  002430                     l2114:
  4895                           ; BSR set to: 1
  4896  002430  0E80               	movlw	128
  4897  002432  1B46               	xorwf	(?___flge+3)& (0+255),f,b
  4898  002434  1B4A               	xorwf	(?___flge+7)& (0+255),f,b
  4899  002436  5147               	movf	(?___flge+4)& (0+255),w,b
  4900  002438  5D43               	subwf	?___flge& (0+255),w,b
  4901  00243A  5148               	movf	(?___flge+5)& (0+255),w,b
  4902  00243C  5944               	subwfb	(?___flge+1)& (0+255),w,b
  4903  00243E  5149               	movf	(?___flge+6)& (0+255),w,b
  4904  002440  5945               	subwfb	(?___flge+2)& (0+255),w,b
  4905  002442  514A               	movf	(?___flge+7)& (0+255),w,b
  4906  002444  5946               	subwfb	(?___flge+3)& (0+255),w,b
  4907                           ; BSR set to: 1
  4908  002446  0012               	return	
  4909  002448                     __end_of___flge:
  4910                           	opt stack 0
  4911                           
  4912                           	psect	text41
  4913                           ; =============== function ___flge ends ========
      +                          ====
  4914                           ; *************** function ___flneg ************
      +                          *****
  4915                           ; Defined at:
  4916                           ;		line 16 in file "C:\Program Files (x86)\HI-TE
      +                          CH Software\PICC-18\PRO\9.66\sources\flneg.c"
  4917                           ; Parameters:
  4918                           ;		f1             size:   4offs:   0	type: bit 
  4919                           ; Auto variables:
  4920                           ;		None
  4921                           ; Return value:
  4922                           ;		type: bit 
  4923                           ;		size: 4
  4924                           ; Registers used:
  4925                           ;		wreg, fsr0l, fsr0h, status,2, status,0
  4926                           ; Tracked objects:
  4927                           ;		On entry : F/1
  4928                           ;		On exit  : F/1
  4929                           ;		Unchanged: FFFFFFF0/0
  4930                           ; Data sizes:
  4931                           ;		Autos:    0
  4932                           ;		Params:   4
  4933                           ;		Temp:     0
  4934                           ;		Total:    4
  4935                           ; This function calls:
  4936                           ;		Nothing
  4937                           ; This function is called by:
  4938                           ;		_pow
  4939                           ;		___altofl
  4940                           ;		___awtofl
  4941                           ;		_exp
  4942                           ; This function uses a non-reentrant model
  4943                           ; 
  4944  000000                     
  4945  002666                     ___flneg:
  4946                           	opt stack 23
  4947                           ; BSR set to: 1
  4948  002666  EE01  F04D         	lfsr	0,?___flneg
  4949  00266A  50EE               	movf	postinc0,w,c
  4950  00266C  10EE               	iorwf	postinc0,w,c
  4951  00266E  10EE               	iorwf	postinc0,w,c
  4952  002670  10EE               	iorwf	postinc0,w,c
  4953  002672  E002               	bz	l2108
  4954  002674  0E80               	movlw	128
  4955  002676  1B50               	xorwf	(?___flneg+3)& (0+255),f,b
  4956  002678                     l2108:
  4957                           ; BSR set to: 1
  4958                           ; BSR set to: 1
  4959  002678  0012               	return	
  4960  00267A                     __end_of___flneg:
  4961                           	opt stack 0
  4962                           
  4963                           	psect	text42
  4964                           ; =============== function ___flneg ends =======
      +                          =====
  4965                           ; *************** function ___fladd ************
      +                          *****
  4966                           ; Defined at:
  4967                           ;		line 17 in file "C:\Program Files (x86)\HI-TE
      +                          CH Software\PICC-18\PRO\9.66\sources\fladd.c"
  4968                           ; Parameters:
  4969                           ;		f1             size:   4offs:   0	type: bit 
  4970                           ;		f2             size:   4offs:   4	type: bit 
  4971                           ; Auto variables:
  4972                           ;		sign2       	       	type: unsigned char 
  4973                           ;		cntr        	       	type: unsigned char 
  4974                           ;		sign1       	       	type: unsigned char 
  4975                           ;		exp2        	       	type: unsigned char 
  4976                           ;		exp1        	       	type: unsigned char 
  4977                           ; Return value:
  4978                           ;		type: unsigned char 
  4979                           ;		size: 4
  4980                           ; Registers used:
  4981                           ;		wreg, fsr0l, fsr0h, fsr2l, status,2, status,0
      +                          , prodl, prodh, cstack
  4982                           ; Tracked objects:
  4983                           ;		On entry : F/1
  4984                           ;		On exit  : F/1
  4985                           ;		Unchanged: FFFFFFF0/0
  4986                           ; Data sizes:
  4987                           ;		Autos:    2
  4988                           ;		Params:   8
  4989                           ;		Temp:     1
  4990                           ;		Total:   11
  4991                           ; This function calls:
  4992                           ;		___flunpack
  4993                           ;		___flpack
  4994                           ; This function is called by:
  4995                           ;		_floor
  4996                           ;		_log
  4997                           ;		___flsub
  4998                           ;		_eval_poly
  4999                           ; This function uses a non-reentrant model
  5000                           ; 
  5001  000000                     
  5002  001604                     ___fladd:
  5003                           	opt stack 23
  5004                           ; BSR set to: 1
  5005                           ; BSR set to: 1
  5006  001604  0E5E               	movlw	low (??___fladd+1)
  5007  001606  6F65               	movwf	(?___flunpack+2)& (0+255),b
  5008  001608  0E01               	movlw	high (??___fladd+1)
  5009  00160A  6F66               	movwf	(?___flunpack+3)& (0+255),b
  5010  00160C  0E55               	movlw	low ?___fladd
  5011  00160E  6F63               	movwf	?___flunpack& (0+255),b
  5012  001610  0E01               	movlw	high ?___fladd
  5013  001612  6F64               	movwf	(?___flunpack+1)& (0+255),b
  5014  001614  ECDF  F010         	call	___flunpack	;wreg free
  5015  001618  6EF4               	movwf	prodh,c
  5016  00161A  675E               	tstfsz	(??___fladd+1)& (0+255),b
  5017  00161C  D009               	goto	l1882
  5018  00161E  C159  F155         	movff	?___fladd+4,?___fladd
  5019  001622  C15A  F156         	movff	?___fladd+5,?___fladd+1
  5020  001626  C15B  F157         	movff	?___fladd+6,?___fladd+2
  5021  00162A  C15C  F158         	movff	?___fladd+7,?___fladd+3
  5022  00162E  D092               	goto	l1880
  5023  001630                     l1882:
  5024                           ; BSR set to: 1
  5025  001630  0E5D               	movlw	low ??___fladd
  5026  001632  6F65               	movwf	(?___flunpack+2)& (0+255),b
  5027  001634  0E01               	movlw	high ??___fladd
  5028  001636  6F66               	movwf	(?___flunpack+3)& (0+255),b
  5029  001638  0E59               	movlw	low (?___fladd+4)
  5030  00163A  6F63               	movwf	?___flunpack& (0+255),b
  5031  00163C  0E01               	movlw	high (?___fladd+4)
  5032  00163E  6F64               	movwf	(?___flunpack+1)& (0+255),b
  5033  001640  ECDF  F010         	call	___flunpack	;wreg free
  5034  001644  6ED9               	movwf	fsr2l,c
  5035  001646  515D               	movf	??___fladd& (0+255),w,b
  5036  001648  E079               	bz	l1883
  5037  00164A  0E06               	movlw	6
  5038  00164C  6EE9               	movwf	fsr0l,c
  5039  00164E  515D               	movf	??___fladd& (0+255),w,b
  5040  001650  615E               	cpfslt	(??___fladd+1)& (0+255),b
  5041  001652  D025               	goto	l1884
  5042  001654  515E               	movf	(??___fladd+1)& (0+255),w,b
  5043  001656  5D5D               	subwf	??___fladd& (0+255),w,b
  5044  001658  6F5F               	movwf	(??___fladd+2)& (0+255),b
  5045  00165A  0E21               	movlw	33
  5046  00165C  5D5F               	subwf	(??___fladd+2)& (0+255),w,b
  5047  00165E  E309               	bnc	l1889
  5048  001660  6B55               	clrf	?___fladd& (0+255),b
  5049  001662  6B56               	clrf	(?___fladd+1)& (0+255),b
  5050  001664  6B57               	clrf	(?___fladd+2)& (0+255),b
  5051  001666  6B58               	clrf	(?___fladd+3)& (0+255),b
  5052  001668  C15D  F15E         	movff	??___fladd,??___fladd+1
  5053  00166C  CFD9 FFF4          	movff	fsr2l,prodh
  5054  001670  D039               	goto	l1893
  5055  001672                     l1889:
  5056                           ; BSR set to: 1
  5057  001672  90D8               	bcf	status,0,c
  5058  001674  3759               	rlcf	(?___fladd+4)& (0+255),f,b
  5059  001676  375A               	rlcf	(?___fladd+5)& (0+255),f,b
  5060  001678  375B               	rlcf	(?___fladd+6)& (0+255),f,b
  5061  00167A  375C               	rlcf	(?___fladd+7)& (0+255),f,b
  5062  00167C  075D               	decf	??___fladd& (0+255),f,b
  5063  00167E  515D               	movf	??___fladd& (0+255),w,b
  5064  001680  195E               	xorwf	(??___fladd+1)& (0+255),w,b
  5065  001682  E009               	bz	l1890
  5066  001684  2EE9               	decfsz	fsr0l,f,c
  5067  001686  D7F5               	goto	l1889
  5068                           ; BSR set to: 1
  5069                           ; BSR set to: 1
  5070  001688  D006               	goto	l1890
  5071  00168A                     l1891:
  5072                           ; BSR set to: 1
  5073  00168A  90D8               	bcf	status,0,c
  5074  00168C  3358               	rrcf	(?___fladd+3)& (0+255),f,b
  5075  00168E  3357               	rrcf	(?___fladd+2)& (0+255),f,b
  5076  001690  3356               	rrcf	(?___fladd+1)& (0+255),f,b
  5077  001692  3355               	rrcf	?___fladd& (0+255),f,b
  5078  001694  2B5E               	incf	(??___fladd+1)& (0+255),f,b
  5079  001696                     l1890:
  5080                           ; BSR set to: 1
  5081  001696  515D               	movf	??___fladd& (0+255),w,b
  5082  001698  635E               	cpfseq	(??___fladd+1)& (0+255),b
  5083  00169A  D7F7               	goto	l1891
  5084  00169C  D023               	goto	l1893
  5085                           ; BSR set to: 1
  5086                           ; BSR set to: 1
  5087  00169E                     l1884:
  5088                           ; BSR set to: 1
  5089  00169E  515E               	movf	(??___fladd+1)& (0+255),w,b
  5090  0016A0  195D               	xorwf	??___fladd& (0+255),w,b
  5091  0016A2  E020               	bz	l1893
  5092  0016A4  515D               	movf	??___fladd& (0+255),w,b
  5093  0016A6  5D5E               	subwf	(??___fladd+1)& (0+255),w,b
  5094  0016A8  6F5F               	movwf	(??___fladd+2)& (0+255),b
  5095  0016AA  0E21               	movlw	33
  5096  0016AC  5D5F               	subwf	(??___fladd+2)& (0+255),w,b
  5097  0016AE  E305               	bnc	l1899
  5098  0016B0  6B59               	clrf	(?___fladd+4)& (0+255),b
  5099  0016B2  6B5A               	clrf	(?___fladd+5)& (0+255),b
  5100  0016B4  6B5B               	clrf	(?___fladd+6)& (0+255),b
  5101  0016B6  6B5C               	clrf	(?___fladd+7)& (0+255),b
  5102  0016B8  D015               	goto	l1893
  5103  0016BA                     l1899:
  5104                           ; BSR set to: 1
  5105  0016BA  90D8               	bcf	status,0,c
  5106  0016BC  3755               	rlcf	?___fladd& (0+255),f,b
  5107  0016BE  3756               	rlcf	(?___fladd+1)& (0+255),f,b
  5108  0016C0  3757               	rlcf	(?___fladd+2)& (0+255),f,b
  5109  0016C2  3758               	rlcf	(?___fladd+3)& (0+255),f,b
  5110  0016C4  075E               	decf	(??___fladd+1)& (0+255),f,b
  5111  0016C6  515D               	movf	??___fladd& (0+255),w,b
  5112  0016C8  195E               	xorwf	(??___fladd+1)& (0+255),w,b
  5113  0016CA  E009               	bz	l1900
  5114  0016CC  2EE9               	decfsz	fsr0l,f,c
  5115  0016CE  D7F5               	goto	l1899
  5116                           ; BSR set to: 1
  5117                           ; BSR set to: 1
  5118  0016D0  D006               	goto	l1900
  5119  0016D2                     l1901:
  5120                           ; BSR set to: 1
  5121  0016D2  90D8               	bcf	status,0,c
  5122  0016D4  335C               	rrcf	(?___fladd+7)& (0+255),f,b
  5123  0016D6  335B               	rrcf	(?___fladd+6)& (0+255),f,b
  5124  0016D8  335A               	rrcf	(?___fladd+5)& (0+255),f,b
  5125  0016DA  3359               	rrcf	(?___fladd+4)& (0+255),f,b
  5126  0016DC  2B5D               	incf	??___fladd& (0+255),f,b
  5127  0016DE                     l1900:
  5128                           ; BSR set to: 1
  5129  0016DE  515D               	movf	??___fladd& (0+255),w,b
  5130  0016E0  635E               	cpfseq	(??___fladd+1)& (0+255),b
  5131  0016E2  D7F7               	goto	l1901
  5132                           ; BSR set to: 1
  5133                           ; BSR set to: 1
  5134                           ; BSR set to: 1
  5135  0016E4                     l1893:
  5136                           ; BSR set to: 1
  5137  0016E4  50F4               	movf	prodh,w,c
  5138  0016E6  E009               	bz	l1903
  5139  0016E8  1F55               	comf	?___fladd& (0+255),f,b
  5140  0016EA  1F56               	comf	(?___fladd+1)& (0+255),f,b
  5141  0016EC  1F57               	comf	(?___fladd+2)& (0+255),f,b
  5142  0016EE  1F58               	comf	(?___fladd+3)& (0+255),f,b
  5143  0016F0  2B55               	incf	?___fladd& (0+255),f,b
  5144  0016F2  0E00               	movlw	0
  5145  0016F4  2356               	addwfc	(?___fladd+1)& (0+255),f,b
  5146  0016F6  2357               	addwfc	(?___fladd+2)& (0+255),f,b
  5147  0016F8  2358               	addwfc	(?___fladd+3)& (0+255),f,b
  5148  0016FA                     l1903:
  5149                           ; BSR set to: 1
  5150  0016FA  50D9               	movf	fsr2l,w,c
  5151  0016FC  E009               	bz	l1904
  5152  0016FE  1F59               	comf	(?___fladd+4)& (0+255),f,b
  5153  001700  1F5A               	comf	(?___fladd+5)& (0+255),f,b
  5154  001702  1F5B               	comf	(?___fladd+6)& (0+255),f,b
  5155  001704  1F5C               	comf	(?___fladd+7)& (0+255),f,b
  5156  001706  2B59               	incf	(?___fladd+4)& (0+255),f,b
  5157  001708  0E00               	movlw	0
  5158  00170A  235A               	addwfc	(?___fladd+5)& (0+255),f,b
  5159  00170C  235B               	addwfc	(?___fladd+6)& (0+255),f,b
  5160  00170E  235C               	addwfc	(?___fladd+7)& (0+255),f,b
  5161  001710                     l1904:
  5162                           ; BSR set to: 1
  5163  001710  6AF4               	clrf	prodh,c
  5164  001712  5159               	movf	(?___fladd+4)& (0+255),w,b
  5165  001714  2755               	addwf	?___fladd& (0+255),f,b
  5166  001716  515A               	movf	(?___fladd+5)& (0+255),w,b
  5167  001718  2356               	addwfc	(?___fladd+1)& (0+255),f,b
  5168  00171A  515B               	movf	(?___fladd+6)& (0+255),w,b
  5169  00171C  2357               	addwfc	(?___fladd+2)& (0+255),f,b
  5170  00171E  515C               	movf	(?___fladd+7)& (0+255),w,b
  5171  001720  2358               	addwfc	(?___fladd+3)& (0+255),f,b
  5172  001722  AF58               	btfss	(?___fladd+3)& (0+255),7,b
  5173  001724  D00B               	goto	l1883
  5174  001726  1F55               	comf	?___fladd& (0+255),f,b
  5175  001728  1F56               	comf	(?___fladd+1)& (0+255),f,b
  5176  00172A  1F57               	comf	(?___fladd+2)& (0+255),f,b
  5177  00172C  1F58               	comf	(?___fladd+3)& (0+255),f,b
  5178  00172E  2B55               	incf	?___fladd& (0+255),f,b
  5179  001730  0E00               	movlw	0
  5180  001732  2356               	addwfc	(?___fladd+1)& (0+255),f,b
  5181  001734  2357               	addwfc	(?___fladd+2)& (0+255),f,b
  5182  001736  2358               	addwfc	(?___fladd+3)& (0+255),f,b
  5183  001738  0E01               	movlw	1
  5184  00173A  6EF4               	movwf	prodh,c
  5185                           ; BSR set to: 1
  5186  00173C                     l1883:
  5187                           ; BSR set to: 1
  5188  00173C  C15E  F165         	movff	??___fladd+1,?___flpack+2
  5189  001740  0E55               	movlw	low ?___fladd
  5190  001742  6F63               	movwf	?___flpack& (0+255),b
  5191  001744  0E01               	movlw	high ?___fladd
  5192  001746  6F64               	movwf	(?___flpack+1)& (0+255),b
  5193  001748  EC92  F00C         	call	___flpack	;wreg free
  5194  00174C  50F4               	movf	prodh,w,c
  5195  00174E  E002               	bz	l1906
  5196  001750  0E80               	movlw	128
  5197  001752  1B58               	xorwf	(?___fladd+3)& (0+255),f,b
  5198  001754                     l1906:
  5199                           ; BSR set to: 1
  5200  001754                     l1880:
  5201                           ; BSR set to: 1
  5202  001754  0012               	return	
  5203  001756                     __end_of___fladd:
  5204                           	opt stack 0
  5205                           
  5206                           	psect	text43
  5207                           ; =============== function ___fladd ends =======
      +                          =====
  5208                           ; *************** function ___flpack ***********
      +                          ******
  5209                           ; Defined at:
  5210                           ;		line 36 in file "C:\Program Files (x86)\HI-TE
      +                          CH Software\PICC-18\PRO\9.66\sources\double.c"
  5211                           ; Parameters:
  5212                           ;		arg            size:   2offs:   0	type: PTR u
      +                          nsigned long ; Largest target is 4
  5213                           ;		 -> __lwtofl@f1(4), __lltofl@f1(4), __lbtofl@
      +                          f1(4), __abtofl@f1(4), 
  5214                           ;		 -> __flmul@f3(4), __fldiv@f3(4), __fladd@f1(
      +                          4), __awtofl@f1(4), 
  5215                           ;		 -> __altofl@f1(4), 
  5216                           ;		exp            size:   1offs:   2	type: unsig
      +                          ned char 
  5217                           ; Auto variables:
  5218                           ;		l_arg       	       	type: unsigned long 
  5219                           ; Return value:
  5220                           ;		type: void 
  5221                           ;		size: 0
  5222                           ; Registers used:
  5223                           ;		wreg, fsr0l, fsr0h, status,2, status,0
  5224                           ; Tracked objects:
  5225                           ;		On entry : F/1
  5226                           ;		On exit  : F/1
  5227                           ;		Unchanged: FFFFFFF0/0
  5228                           ; Data sizes:
  5229                           ;		Autos:    4
  5230                           ;		Params:   3
  5231                           ;		Temp:     4
  5232                           ;		Total:   11
  5233                           ; This function calls:
  5234                           ;		Nothing
  5235                           ; This function is called by:
  5236                           ;		___altofl
  5237                           ;		___awtofl
  5238                           ;		___fladd
  5239                           ;		___fldiv
  5240                           ;		___flmul
  5241                           ;		___lltofl
  5242                           ;		___lwtofl
  5243                           ; This function uses a non-reentrant model
  5244                           ; 
  5245  000000                     
  5246  001924                     ___flpack:
  5247                           	opt stack 22
  5248                           ; BSR set to: 1
  5249  001924  C163  FFE9         	movff	?___flpack,fsr0l
  5250  001928  C164  FFEA         	movff	?___flpack+1,fsr0h
  5251  00192C  CFEE F166          	movff	postinc0,??___flpack
  5252  001930  CFEE F167          	movff	postinc0,??___flpack+1
  5253  001934  CFEE F168          	movff	postinc0,??___flpack+2
  5254  001938  CFEE F169          	movff	postinc0,??___flpack+3
  5255  00193C  5165               	movf	(?___flpack+2)& (0+255),w,b
  5256  00193E  E005               	bz	l600000763
  5257  001940  5169               	movf	(??___flpack+3)& (0+255),w,b
  5258  001942  1166               	iorwf	??___flpack& (0+255),w,b
  5259  001944  1167               	iorwf	(??___flpack+1)& (0+255),w,b
  5260  001946  1168               	iorwf	(??___flpack+2)& (0+255),w,b
  5261  001948  E110               	bnz	l1870
  5262  00194A                     l600000763:
  5263                           ; BSR set to: 1
  5264  00194A  C163  FFE9         	movff	?___flpack,fsr0l
  5265  00194E  C164  FFEA         	movff	?___flpack+1,fsr0h
  5266  001952  0E00               	movlw	0
  5267  001954  6AEE               	clrf	postinc0,c
  5268  001956  6AEE               	clrf	postinc0,c
  5269  001958  6AEE               	clrf	postinc0,c
  5270  00195A  6AED               	clrf	postdec0,c
  5271  00195C  D054               	goto	l1868
  5272                           ; BSR set to: 1
  5273  00195E                     l1871:
  5274                           ; BSR set to: 1
  5275  00195E  2B65               	incf	(?___flpack+2)& (0+255),f,b
  5276  001960  90D8               	bcf	status,0,c
  5277  001962  3369               	rrcf	(??___flpack+3)& (0+255),f,b
  5278  001964  3368               	rrcf	(??___flpack+2)& (0+255),f,b
  5279  001966  3367               	rrcf	(??___flpack+1)& (0+255),f,b
  5280  001968  3366               	rrcf	??___flpack& (0+255),f,b
  5281  00196A                     l1870:
  5282                           ; BSR set to: 1
  5283  00196A  6B6A               	clrf	(??___flpack+4)& (0+255),b
  5284  00196C  6B6B               	clrf	(??___flpack+5)& (0+255),b
  5285  00196E  6B6C               	clrf	(??___flpack+6)& (0+255),b
  5286  001970  0EFE               	movlw	254
  5287  001972  1569               	andwf	(??___flpack+3)& (0+255),w,b
  5288  001974  6F6D               	movwf	(??___flpack+7)& (0+255),b
  5289  001976  516D               	movf	(??___flpack+7)& (0+255),w,b
  5290  001978  116A               	iorwf	(??___flpack+4)& (0+255),w,b
  5291  00197A  116B               	iorwf	(??___flpack+5)& (0+255),w,b
  5292  00197C  116C               	iorwf	(??___flpack+6)& (0+255),w,b
  5293  00197E  E00C               	bz	l1873
  5294  001980  D7EE               	goto	l1871
  5295                           ; BSR set to: 1
  5296  001982                     l1874:
  5297                           ; BSR set to: 1
  5298  001982  2B65               	incf	(?___flpack+2)& (0+255),f,b
  5299  001984  2B66               	incf	??___flpack& (0+255),f,b
  5300  001986  0E00               	movlw	0
  5301  001988  2367               	addwfc	(??___flpack+1)& (0+255),f,b
  5302  00198A  2368               	addwfc	(??___flpack+2)& (0+255),f,b
  5303  00198C  2369               	addwfc	(??___flpack+3)& (0+255),f,b
  5304  00198E  90D8               	bcf	status,0,c
  5305  001990  3369               	rrcf	(??___flpack+3)& (0+255),f,b
  5306  001992  3368               	rrcf	(??___flpack+2)& (0+255),f,b
  5307  001994  3367               	rrcf	(??___flpack+1)& (0+255),f,b
  5308  001996  3366               	rrcf	??___flpack& (0+255),f,b
  5309  001998                     l1873:
  5310                           ; BSR set to: 1
  5311  001998  6B6A               	clrf	(??___flpack+4)& (0+255),b
  5312  00199A  6B6B               	clrf	(??___flpack+5)& (0+255),b
  5313  00199C  6B6C               	clrf	(??___flpack+6)& (0+255),b
  5314  00199E  5169               	movf	(??___flpack+3)& (0+255),w,b
  5315  0019A0  6F6D               	movwf	(??___flpack+7)& (0+255),b
  5316  0019A2  516D               	movf	(??___flpack+7)& (0+255),w,b
  5317  0019A4  116A               	iorwf	(??___flpack+4)& (0+255),w,b
  5318  0019A6  116B               	iorwf	(??___flpack+5)& (0+255),w,b
  5319  0019A8  116C               	iorwf	(??___flpack+6)& (0+255),w,b
  5320  0019AA  E007               	bz	l1876
  5321  0019AC  D7EA               	goto	l1874
  5322                           ; BSR set to: 1
  5323  0019AE                     l1877:
  5324                           ; BSR set to: 1
  5325  0019AE  0765               	decf	(?___flpack+2)& (0+255),f,b
  5326  0019B0  90D8               	bcf	status,0,c
  5327  0019B2  3766               	rlcf	??___flpack& (0+255),f,b
  5328  0019B4  3767               	rlcf	(??___flpack+1)& (0+255),f,b
  5329  0019B6  3768               	rlcf	(??___flpack+2)& (0+255),f,b
  5330  0019B8  3769               	rlcf	(??___flpack+3)& (0+255),f,b
  5331  0019BA                     l1876:
  5332                           ; BSR set to: 1
  5333  0019BA  AF68               	btfss	(??___flpack+2)& (0+255),7,b
  5334  0019BC  D7F8               	goto	l1877
  5335                           ; BSR set to: 1
  5336  0019BE  B165               	btfsc	(?___flpack+2)& (0+255),0,b
  5337  0019C0  D002               	goto	l1879
  5338  0019C2  0E7F               	movlw	127
  5339  0019C4  1768               	andwf	(??___flpack+2)& (0+255),f,b
  5340  0019C6                     l1879:
  5341                           ; BSR set to: 1
  5342  0019C6  90D8               	bcf	status,0,c
  5343  0019C8  3365               	rrcf	(?___flpack+2)& (0+255),f,b
  5344  0019CA  C165  F16A         	movff	?___flpack+2,??___flpack+4
  5345  0019CE  6B6B               	clrf	(??___flpack+5)& (0+255),b
  5346  0019D0  6B6C               	clrf	(??___flpack+6)& (0+255),b
  5347  0019D2  6B6D               	clrf	(??___flpack+7)& (0+255),b
  5348  0019D4  C16A  F16D         	movff	??___flpack+4,??___flpack+7
  5349  0019D8  6B6C               	clrf	(??___flpack+6)& (0+255),b
  5350  0019DA  6B6B               	clrf	(??___flpack+5)& (0+255),b
  5351  0019DC  6B6A               	clrf	(??___flpack+4)& (0+255),b
  5352  0019DE  516A               	movf	(??___flpack+4)& (0+255),w,b
  5353  0019E0  1366               	iorwf	??___flpack& (0+255),f,b
  5354  0019E2  516B               	movf	(??___flpack+5)& (0+255),w,b
  5355  0019E4  1367               	iorwf	(??___flpack+1)& (0+255),f,b
  5356  0019E6  516C               	movf	(??___flpack+6)& (0+255),w,b
  5357  0019E8  1368               	iorwf	(??___flpack+2)& (0+255),f,b
  5358  0019EA  516D               	movf	(??___flpack+7)& (0+255),w,b
  5359  0019EC  1369               	iorwf	(??___flpack+3)& (0+255),f,b
  5360  0019EE  C163  FFE9         	movff	?___flpack,fsr0l
  5361  0019F2  C164  FFEA         	movff	?___flpack+1,fsr0h
  5362  0019F6  C166  FFEE         	movff	??___flpack,postinc0
  5363  0019FA  C167  FFEE         	movff	??___flpack+1,postinc0
  5364  0019FE  C168  FFEE         	movff	??___flpack+2,postinc0
  5365  001A02  C169  FFEE         	movff	??___flpack+3,postinc0
  5366  001A06                     l1868:
  5367                           ; BSR set to: 1
  5368  001A06  0012               	return	
  5369  001A08                     __end_of___flpack:
  5370                           	opt stack 0
  5371                           
  5372                           	psect	text44
  5373                           ; =============== function ___flpack ends ======
      +                          ======
  5374                           ; *************** function ___flunpack *********
      +                          ********
  5375                           ; Defined at:
  5376                           ;		line 13 in file "C:\Program Files (x86)\HI-TE
      +                          CH Software\PICC-18\PRO\9.66\sources\double.c"
  5377                           ; Parameters:
  5378                           ;		arg            size:   2offs:   0	type: PTR u
      +                          nsigned long ; Largest target is 4
  5379                           ;		 -> __fltol@f1(4), __flmul@f2(4), __flmul@f1(
      +                          4), __fldiv@f2(4), 
  5380                           ;		 -> __fldiv@f1(4), __fladd@f2(4), __fladd@f1(
      +                          4), 
  5381                           ;		exp            size:   2offs:   2	type: PTR u
      +                          nsigned char ; Largest target is 1
  5382                           ;		 -> __fltol@exp1(1), __flmul@cntr(1), __flmul
      +                          @exp1(1), __fldiv@exp2(1), 
  5383                           ;		 -> __fldiv@exp1(1), __fladd@exp2(1), __fladd
      +                          @exp1(1), 
  5384                           ; Auto variables:
  5385                           ;		sign        	       	type: unsigned char 
  5386                           ;		l_arg       	       	type: unsigned long 
  5387                           ; Return value:
  5388                           ;		type: unsigned char 
  5389                           ;		size: 1
  5390                           ; Registers used:
  5391                           ;		wreg, fsr0l, fsr0h, status,2, status,0, prodl
  5392                           ; Tracked objects:
  5393                           ;		On entry : F/1
  5394                           ;		On exit  : F/1
  5395                           ;		Unchanged: FFFFFFF0/0
  5396                           ; Data sizes:
  5397                           ;		Autos:    4
  5398                           ;		Params:   4
  5399                           ;		Temp:     0
  5400                           ;		Total:    8
  5401                           ; This function calls:
  5402                           ;		Nothing
  5403                           ; This function is called by:
  5404                           ;		___fladd
  5405                           ;		___fldiv
  5406                           ;		___flmul
  5407                           ;		___fltol
  5408                           ; This function uses a non-reentrant model
  5409                           ; 
  5410  000000                     
  5411  0021BE                     ___flunpack:
  5412                           	opt stack 22
  5413                           ; BSR set to: 1
  5414  0021BE  C163  FFE9         	movff	?___flunpack,fsr0l
  5415  0021C2  C164  FFEA         	movff	?___flunpack+1,fsr0h
  5416  0021C6  CFEE F167          	movff	postinc0,??___flunpack
  5417  0021CA  CFEE F168          	movff	postinc0,??___flunpack+1
  5418  0021CE  CFEE F169          	movff	postinc0,??___flunpack+2
  5419  0021D2  CFEE F16A          	movff	postinc0,??___flunpack+3
  5420  0021D6  0101               	movlb	1	; () banked
  5421  0021D8  3569               	rlcf	(??___flunpack+2)& (0+255),w,b
  5422  0021DA  356A               	rlcf	(??___flunpack+3)& (0+255),w,b
  5423  0021DC  6EF3               	movwf	prodl,c
  5424  0021DE  C165  FFE9         	movff	?___flunpack+2,fsr0l
  5425  0021E2  C166  FFEA         	movff	?___flunpack+3,fsr0h
  5426  0021E6  CFF3 FFEF          	movff	prodl,indf0
  5427  0021EA  66F3               	tstfsz	prodl,c
  5428  0021EC  D005               	goto	l1865
  5429  0021EE  6B67               	clrf	??___flunpack& (0+255),b
  5430  0021F0  6B68               	clrf	(??___flunpack+1)& (0+255),b
  5431  0021F2  6B69               	clrf	(??___flunpack+2)& (0+255),b
  5432  0021F4  6B6A               	clrf	(??___flunpack+3)& (0+255),b
  5433  0021F6  D005               	goto	l1866
  5434  0021F8                     l1865:
  5435                           ; BSR set to: 1
  5436  0021F8  6AF3               	clrf	prodl,c
  5437  0021FA  8F69               	bsf	(??___flunpack+2)& (0+255),7,b
  5438  0021FC  BF6A               	btfsc	(??___flunpack+3)& (0+255),7,b
  5439  0021FE  2AF3               	incf	prodl,f,c
  5440                           ; BSR set to: 1
  5441  002200  6B6A               	clrf	(??___flunpack+3)& (0+255),b
  5442  002202                     l1866:
  5443                           ; BSR set to: 1
  5444  002202  C163  FFE9         	movff	?___flunpack,fsr0l
  5445  002206  C164  FFEA         	movff	?___flunpack+1,fsr0h
  5446  00220A  C167  FFEE         	movff	??___flunpack,postinc0
  5447  00220E  C168  FFEE         	movff	??___flunpack+1,postinc0
  5448  002212  C169  FFEE         	movff	??___flunpack+2,postinc0
  5449  002216  C16A  FFEE         	movff	??___flunpack+3,postinc0
  5450  00221A  50F3               	movf	prodl,w,c
  5451                           ; BSR set to: 1
  5452  00221C  0012               	return	
  5453  00221E                     __end_of___flunpack:
  5454                           	opt stack 0
  5455                           
  5456                           	psect	text45
  5457                           ; =============== function ___flunpack ends ====
      +                          ========
  5458                           ; *************** function _isr ****************
      +                          *
  5459                           ; Defined at:
  5460                           ;		line 79 in file "../../../src/LC-meter.c"
  5461                           ; Parameters:
  5462                           ;		None
  5463                           ; Auto variables:
  5464                           ;		None
  5465                           ; Return value:
  5466                           ;		type: int 
  5467                           ;		size: 2
  5468                           ; Registers used:
  5469                           ;		wreg, fsr0l, fsr0h, status,2, status,0
  5470                           ; Tracked objects:
  5471                           ;		On entry : 0/0
  5472                           ;		On exit  : 0/0
  5473                           ;		Unchanged: FFFFFFF0/0
  5474                           ; Data sizes:
  5475                           ;		Autos:    0
  5476                           ;		Params:   0
  5477                           ;		Temp:     2
  5478                           ;		Total:    2
  5479                           ; This function calls:
  5480                           ;		Nothing
  5481                           ; This function is called by:
  5482                           ;		Interrupt level 2
  5483                           ; This function uses a non-reentrant model
  5484                           ; 
  5485  000000                     
  5486                           ;LC-meter.c: 60: double F1, F2, F3, CCal;
  5487                           ;LC-meter.c: 61: void main();
  5488                           ;LC-meter.c: 62: void loop();
  5489                           ;LC-meter.c: 63: void testloop();
  5490                           ;LC-meter.c: 64: void initialize();
  5491                           ;LC-meter.c: 65: unsigned short int measure_freq
      +                          ();
  5492                           ;LC-meter.c: 66: void calibrate();
  5493                           ;LC-meter.c: 67: void measure_capacitance();
  5494                           ;LC-meter.c: 68: void measure_inductance();
  5495                           ;LC-meter.c: 69: unsigned long int milliseconds(
      +                          );
  5496                           ;LC-meter.c: 70: void delay10ms(unsigned short i
      +                          nt period_10ms);
  5497                           ;LC-meter.c: 72: void put_str(const char*);
  5498                           ;LC-meter.c: 74: void put_number(void (*putchar)
      +                          (char), unsigned short int n, unsigned char base
      +                          , signed char pad );
  5499  001C84                     _isr:
  5500                           	opt stack 0
  5501                           ; BSR set to: ?
  5502  001C84  0006               	pop		; remove dummy address from shadow registe
      +                          r refresh
  5503                           ;LC-meter.c: 81: if(TMR2IF) {
  5504  001C86  A29E               	btfss	3998,1,c	;volatile
  5505  001C88  D033               	goto	i2l1690
  5506                           ;LC-meter.c: 83: bres += 256;
  5507  001C8A  2A07               	incf	7,f,c	;volatile
  5508                           ;LC-meter.c: 85: if(bres >= 5000) {
  5509  001C8C  0E88               	movlw	136
  5510  001C8E  5C06               	subwf	6,w,c	;volatile
  5511  001C90  0E13               	movlw	19
  5512  001C92  5807               	subwfb	7,w,c	;volatile
  5513  001C94  E32C               	bnc	i2l1691
  5514                           ;LC-meter.c: 86: bres -= 5000;
  5515  001C96  0E88               	movlw	136
  5516  001C98  5E06               	subwf	6,f,c	;volatile
  5517  001C9A  0E13               	movlw	19
  5518  001C9C  5A07               	subwfb	7,f,c	;volatile
  5519                           ;LC-meter.c: 87: msecpart++;
  5520  001C9E  4A04               	infsnz	4,f,c	;volatile
  5521  001CA0  2A05               	incf	5,f,c	;volatile
  5522                           ;LC-meter.c: 88: msecs++;
  5523  001CA2  2A34               	incf	52,f,c	;volatile
  5524  001CA4  0E00               	movlw	0
  5525  001CA6  2235               	addwfc	53,f,c	;volatile
  5526  001CA8  2236               	addwfc	54,f,c	;volatile
  5527  001CAA  2237               	addwfc	55,f,c	;volatile
  5528                           ;LC-meter.c: 90: RC1 = (((blink > 200)) == 0);
  5529  001CAC  0EC9               	movlw	201
  5530  001CAE  5C38               	subwf	56,w,c
  5531  001CB0  0E00               	movlw	0
  5532  001CB2  5839               	subwfb	57,w,c
  5533  001CB4  E202               	bc	i2u4040
  5534  001CB6  8282               	bsf	3970,1,c	;volatile
  5535  001CB8  D001               	goto	i2u4055
  5536  001CBA                     i2u4040:
  5537  001CBA  9282               	bcf	3970,1,c	;volatile
  5538  001CBC                     i2u4055:
  5539                           ;LC-meter.c: 91: if(blink >= 400)
  5540  001CBC  0E90               	movlw	144
  5541  001CBE  5C38               	subwf	56,w,c
  5542  001CC0  0E01               	movlw	1
  5543  001CC2  5839               	subwfb	57,w,c
  5544  001CC4  E304               	bnc	i2l1692
  5545                           ;LC-meter.c: 92: blink -= 400;
  5546  001CC6  0E90               	movlw	144
  5547  001CC8  5E38               	subwf	56,f,c
  5548  001CCA  0E01               	movlw	1
  5549  001CCC  5A39               	subwfb	57,f,c
  5550  001CCE                     i2l1692:
  5551                           ; BSR set to: ?
  5552                           ;LC-meter.c: 93: ++blink;
  5553  001CCE  4A38               	infsnz	56,f,c
  5554  001CD0  2A39               	incf	57,f,c
  5555                           ;LC-meter.c: 96: if(msecpart >= 1000) {
  5556  001CD2  0EE8               	movlw	232
  5557  001CD4  5C04               	subwf	4,w,c	;volatile
  5558  001CD6  0E03               	movlw	3
  5559  001CD8  5805               	subwfb	5,w,c	;volatile
  5560  001CDA  E309               	bnc	i2l1691
  5561                           ;LC-meter.c: 98: seconds++;
  5562  001CDC  2A3F               	incf	63,f,c	;volatile
  5563  001CDE  0E00               	movlw	0
  5564  001CE0  2240               	addwfc	64,f,c	;volatile
  5565  001CE2  2241               	addwfc	65,f,c	;volatile
  5566  001CE4  2242               	addwfc	66,f,c	;volatile
  5567                           ;LC-meter.c: 99: msecpart -= 1000;
  5568  001CE6  0EE8               	movlw	232
  5569  001CE8  5E04               	subwf	4,f,c	;volatile
  5570  001CEA  0E03               	movlw	3
  5571  001CEC  5A05               	subwfb	5,f,c	;volatile
  5572                           ; BSR set to: ?
  5573  001CEE                     i2l1691:
  5574                           ; BSR set to: ?
  5575                           ;LC-meter.c: 100: }
  5576                           ;LC-meter.c: 101: }
  5577                           ;LC-meter.c: 103: TMR2IF = 0;
  5578  001CEE  929E               	bcf	3998,1,c	;volatile
  5579  001CF0                     i2l1690:
  5580                           ; BSR set to: ?
  5581                           ;LC-meter.c: 104: }
  5582                           ;LC-meter.c: 106: if(RCIF) { rxfifo[rxiptr] = RC
      +                          REG; ser_tmp = (rxiptr + 1) & ((unsigned char)16
      +                           - 1); if(ser_tmp != rxoptr) rxiptr = ser_tmp; }
      +                          ; if(TXIF && TXIE) { TXREG = txfifo[txoptr]; ++t
      +                          xoptr; txoptr &= ((unsigned char)16 - 1); if(txo
      +                          ptr == txiptr) { TXIE = 0; }
  5583  001CF0  AA9E               	btfss	3998,5,c	;volatile
  5584  001CF2  D00E               	goto	i2l1694
  5585  001CF4  503B               	movf	59,w,c	;volatile
  5586  001CF6  0F24               	addlw	36
  5587  001CF8  6EE9               	movwf	fsr0l,c
  5588  001CFA  6AEA               	clrf	fsr0h,c
  5589  001CFC  CFAE FFEF          	movff	4014,indf0	;volatile
  5590  001D00  283B               	incf	59,w,c	;volatile
  5591  001D02  0B0F               	andlw	15
  5592  001D04  6E3D               	movwf	61,c
  5593  001D06  503D               	movf	61,w,c
  5594  001D08  183E               	xorwf	62,w,c	;volatile
  5595  001D0A  A4D8               	btfss	status,2,c
  5596  001D0C  C03D F03B          	movff	61,59	;volatile
  5597                           ; BSR set to: ?
  5598  001D10                     i2l1694:
  5599                           ; BSR set to: ?
  5600  001D10  B89E               	btfsc	3998,4,c	;volatile
  5601  001D12  A89D               	btfss	3997,4,c	;volatile
  5602  001D14  D00E               	goto	i2l1696
  5603  001D16  503C               	movf	60,w,c	;volatile
  5604  001D18  0F14               	addlw	20
  5605  001D1A  6EE9               	movwf	fsr0l,c
  5606  001D1C  6AEA               	clrf	fsr0h,c
  5607  001D1E  50EF               	movf	indf0,w,c
  5608  001D20  6EAD               	movwf	4013,c	;volatile
  5609  001D22  2A3C               	incf	60,f,c	;volatile
  5610  001D24  0E0F               	movlw	15
  5611  001D26  163C               	andwf	60,f,c	;volatile
  5612  001D28  503A               	movf	58,w,c	;volatile
  5613  001D2A  623C               	cpfseq	60,c	;volatile
  5614  001D2C  D001               	goto	i2l1697
  5615  001D2E  989D               	bcf	3997,4,c	;volatile
  5616  001D30                     i2l1697:
  5617                           ; BSR set to: ?
  5618  001D30  989E               	bcf	3998,4,c	;volatile
  5619  001D32                     i2l1696:
  5620                           ; BSR set to: ?
  5621                           ;LC-meter.c: 111: }
  5622                           ; BSR set to: ?
  5623  001D32  C16F  FFEA         	movff	??_isr+1,fsr0h
  5624  001D36  C16E  FFE9         	movff	??_isr,fsr0l
  5625  001D3A  0011               	retfie		f
  5626  001D3C                     __end_of_isr:
  5627                           	opt stack 0
  5628                           
  5629                           	psect	intcode
  5630  000008                     int_func:
  5631                           	opt stack 31
  5632  000008  CFE9 F16E          	movff	fsr0l,??_isr
  5633  00000C  CFEA F16F          	movff	fsr0h,??_isr+1
  5634  000010  ED42  F00E         	call	_isr,f	;refresh shadow registers
  5635                           
  5636                           	psect	text46
  5637                           ; =============== function _isr ends ===========
      +                          =
  5638                           ;	FNARG	___flmul,_frexp
  5639                           ;	FNARG	___flmul,___awtofl
  5640                           ;	FNARG	___flmul,___flneg
  5641                           ;	FNARG	___flmul,___flsub
  5642                           ;	FNARG	___flmul,___fldiv
  5643                           ;	FNARG	_ldexp,_eval_poly
  5644                           ;	FNARG	_ldexp,___flpack
  5645                           ;	FNARG	_ldexp,___flunpack
  5646                           ;	FNARG	_ldexp,___fladd
  5647                           ;	FNARG	_ldexp,___flmul
  5648  000000                     	;_putchar_ptr
  5649  000000                     	;_ser_brg
  5650                           
  5651                           	psect	idata
  5652                           ;initializer for _putchar_ptr
  5653  000878  2684               	dw	_format_putchar& (0+65535)
  5654                           ;initializer for _ser_brg
  5655  00087A  1F                 	db	31
  5656                           
  5657                           	psect	smallconst
  5658  000800  00                 	db	0	;reserve
  5659  000801                     F65:
  5660                           	opt stack 0
  5661  000801  0000               	dw	0
  5662  000803  3F80               	dw	16256
  5663  000805  7218               	dw	29208
  5664  000807  3F31               	dw	16177
  5665  000809  FDF0               	dw	65008
  5666  00080B  3E75               	dw	15989
  5667  00080D  5847               	dw	22599
  5668  00080F  3D63               	dw	15715
  5669  000811  9558               	dw	38232
  5670  000813  3C1D               	dw	15389
  5671  000815  C482               	dw	50306
  5672  000817  3AAE               	dw	15022
  5673  000819  78A8               	dw	30888
  5674  00081B  3921               	dw	14625
  5675  00081D  93EF               	dw	37871
  5676  00081F  3780               	dw	14208
  5677  000821  92A0               	dw	37536
  5678  000823  35A7               	dw	13735
  5679  000825  5646               	dw	22086
  5680  000827  3415               	dw	13333
  5681  000829                     F64:
  5682                           	opt stack 0
  5683  000829  0000               	dw	0
  5684  00082B  0000               	dw	0
  5685  00082D  FFC4               	dw	65476
  5686  00082F  3F7F               	dw	16255
  5687  000831  EF80               	dw	61312
  5688  000833  BEFF               	dw	48895
  5689  000835  E190               	dw	57744
  5690  000837  3EA9               	dw	16041
  5691  000839  82EC               	dw	33516
  5692  00083B  BE76               	dw	48758
  5693  00083D  AD82               	dw	44418
  5694  00083F  3E2B               	dw	15915
  5695  000841  3C0E               	dw	15374
  5696  000843  BDC3               	dw	48579
  5697  000845  D187               	dw	53639
  5698  000847  3D13               	dw	15635
  5699  000849  7841               	dw	30785
  5700  00084B  BBD3               	dw	48083
  5701  000000                     	;_rxfifo
  5702  000000                     	;_txfifo
  5703  000000                     	;_F1
  5704  000000                     	;_F2
  5705  000000                     	;_F3
  5706  000000                     	;_msecs
  5707  000000                     	;_seconds
  5708  000000                     	;_timer1of
  5709  000000                     	;_blink
  5710  000000                     	;_rxiptr
  5711  000000                     	;_rxoptr
  5712  000000                     	;_ser_tmp
  5713  000000                     	;_txiptr
  5714  000000                     	;_txoptr
  5715  000000                     	;__USB_DESCRIPTOR
  5716  000000                     
  5717  000000                     	;_CCal
  5718  000000                     
  5719  000000                     	;_bres
  5720  000000                     	;_msecpart
  5721  000000                     
  5722  000000                     
  5723  000000                     
  5724  000000                     
  5725  000000                     
  5726  000000                     
  5727  000000                     
  5728  000000                     
  5729  000000                     
  5730  000000                     
  5731  000000                     
  5732  000000                     
  5733  000000                     
  5734  000000                     
  5735  000000                     
  5736  000000                     
  5737  000000                     
  5738  000000                     
  5739  000000                     
  5740  000000                     
  5741  000000                     
  5742  000000                     
  5743  000000                     
  5744  000000                     
  5745  000000                     
  5746  000000                     
  5747  000000                     
  5748  000000                     
  5749  000000                     
  5750  000000                     
  5751  000000                     
  5752  000000                     
  5753  000000                     
  5754  000000                     
  5755  000000                     
  5756  000000                     
  5757  000000                     
  5758  000000                     
  5759  000000                     
  5760  000000                     
  5761  00084D                     STR_8:
  5762                           ; BSR set to: ?
  5763  00084D  0D                 	db	13
  5764  00084E  0A                 	db	10
  5765  00084F  43                 	db	67	;'C'
  5766  000850  43                 	db	67	;'C'
  5767  000851  61                 	db	97	;'a'
  5768  000852  6C                 	db	108	;'l'
  5769  000853  3D                 	db	61	;'='
  5770  000854  00                 	db	0
  5771  000855                     STR_5:
  5772                           ; BSR set to: ?
  5773  000855  0D                 	db	13
  5774  000856  0A                 	db	10
  5775  000857  46                 	db	70	;'F'
  5776  000858  31                 	db	49	;'1'
  5777  000859  3D                 	db	61	;'='
  5778  00085A  00                 	db	0
  5779  00085B                     STR_7:
  5780                           ; BSR set to: ?
  5781  00085B  0D                 	db	13
  5782  00085C  0A                 	db	10
  5783  00085D  46                 	db	70	;'F'
  5784  00085E  33                 	db	51	;'3'
  5785  00085F  3D                 	db	61	;'='
  5786  000860  00                 	db	0
  5787  000861                     STR_6:
  5788                           ; BSR set to: ?
  5789  000861  0D                 	db	13
  5790  000862  0A                 	db	10
  5791  000863  46                 	db	70	;'F'
  5792  000864  32                 	db	50	;'2'
  5793  000865  3D                 	db	61	;'='
  5794  000866  00                 	db	0
  5795  000867                     STR_1:
  5796                           ; BSR set to: ?
  5797  000867  2E                 	db	46
  5798  000868  2E                 	db	46
  5799  000869  2E                 	db	46
  5800  00086A  0D                 	db	13
  5801  00086B  0A                 	db	10
  5802  00086C  00                 	db	0
  5803  00086D                     STR_10:
  5804                           ; BSR set to: ?
  5805  00086D  43                 	db	67	;'C'
  5806  00086E  69                 	db	105	;'i'
  5807  00086F  6E                 	db	110	;'n'
  5808  000870  3D                 	db	61	;'='
  5809  000871  00                 	db	0
  5810  000872                     STR_4:
  5811                           ; BSR set to: ?
  5812  000872  76                 	db	118	;'v'
  5813  000873  61                 	db	97	;'a'
  5814  000874  72                 	db	114	;'r'
  5815  000875  3D                 	db	61	;'='
  5816  000876  00                 	db	0
  5817  000000                     
  5818  000000                     
  5819  000000                     
  5820  000000                     
  5821  000877  00                 	db	0	; dummy byte at the end
  5822                           
  5823                           	psect	param1
  5824  000000                     
  5825  000000                     
  5826  000000                     
  5827  000000                     
  5828  000000                     
  5829  000000                     
  5830  000000                     
  5831  000000                     
  5832  000000                     
  5833  000000                     
  5834                           tosu	equ	0xFFF
  5835                           tosh	equ	0xFFE
  5836                           tosl	equ	0xFFD
  5837                           pclath	equ	0xFFA
  5838                           tblptru	equ	0xFF8
  5839                           tblptrh	equ	0xFF7
  5840                           tblptrl	equ	0xFF6
  5841                           tablat	equ	0xFF5
  5842                           prodh	equ	0xFF4
  5843                           prodl	equ	0xFF3
  5844                           intcon	equ	0xFF2
  5845                           intcon2	equ	0xFF1
  5846                           indf0	equ	0xFEF
  5847                           postinc0	equ	0xFEE
  5848                           postdec0	equ	0xFED
  5849                           fsr0h	equ	0xFEA
  5850                           fsr0l	equ	0xFE9
  5851                           wreg	equ	0xFE8
  5852                           fsr1l	equ	0xFE1
  5853                           fsr2l	equ	0xFD9
  5854                           status	equ	0xFD8


HI-TECH Software PICC-18 Macro Assembler V9.66 build 8870 
Symbol Table                                           Thu Sep 05 08:41:32 2019

                ___asfldiv@f1p 011E                   ___fldiv@exp1 0142  
                 ___fldiv@exp2 0141                   ___asflmul@mp 0139  
                           F64 0829                             F65 0801  
                 ___asflsub@f2 013B                             _F1 000008  
                           _F2 000010                             _F3 00000C  
          ___wmul@multiplicand 0108                  ___asflsub@f1p 0139  
                 ___flpack@arg 0163                   ___flpack@exp 0165  
                  _putchar_ptr 000047                            l483 2620  
                          l486 25F8                            l970 1A98  
                          l971 1A7E                            l973 1AB0  
                          l974 1AE8                            l983 11E8  
                          l969 1A18                            l986 1340  
                          _GIE 007F97                            _RC1 007C11  
                          _RC4 007C14                            _RC7 007C17  
                          _RX9 007D5E                            _TX9 007D66  
                          _exp 0FE6                            _log 134A  
                          _isr 1C84                            _pow 14AA  
                          tosl 000FFD                            wreg 000FE8  
                 ___flmul@exp1 015D                   ___flmul@cntr 015E  
                 ___fltol@exp1 0147                           l2103 25CC  
                         l2104 25D8                           l2113 241A  
                         l2114 2430                           l2108 2678  
                         l2080 237C                           l2065 2400  
                         l2066 23CC                           l2170 108E  
                         l2163 1B14                           l2171 11B6  
                         l2172 1186                           l2085 238A  
                         l2086 23A4                           l2094 25AA  
                         l2166 11B6                           l1702 18FA  
                         l2079 23AE                           l2095 25BC  
                         l2167 1000                           l1711 20A0  
                         l1703 18FE                           l2088 25C6  
                         l2168 1032                           l2096 2556  
                         l1712 2088                           l2089 259C  
                         l2097 252A                           l1707 2058  
                         l1715 0DB0                           l1723 08DA  
                         l1900 16DE                           l1740 183E  
                         l1716 0F9C                           l1724 0C06  
                         l1901 16D2                           l1741 1792  
                         l1733 2258                           l1717 0F80  
                         l1725 0BEA                   ___fltol@lval 0148  
                         l1910 1D7C                           l1742 1788  
                         l1750 14DA                           l1718 0F62  
                         l1726 0BCC                           l1903 16FA  
                         l1743 179E                           l1904 1710  
                         l1816 1FB0                           l1760 1F24  
                         l1744 182E                           l1752 14F6  
                         l1817 1F3A                           l1921 1C00  
                         l1913 1D8A                           l1745 14A8  
                         l1753 157E                           l1729 0C0A  
                         l1906 1754                           l1818 1F54  
                         l1922 1C14                           l1762 1ED4  
                         l1914 1DB8                           l1754 1554  
                         l1819 1FA0                           l1915 1DDC  
                         l1851 2144                           l1747 1366  
                         l1755 1602                           l1764 1EF8  
                         l1852 20D6                           l1925 1C30  
                         l1909 1D60                           l1853 20FC  
                         l1749 1602                           l1870 196A  
                         l1950 203C                           l1926 1C44  
                         l1918 1BF6                           l1758 21BC  
                         l1854 2134                           l1871 195E  
                         l1951 1FF8                           l1927 1C72  
                         l1759 216C                           l1880 1754  
                         l1865 21F8                           l1873 1998  
                         l1961 202C                           l1866 2202  
                         l1874 1982                           l1890 1696  
                         l1882 1630                           l1891 168A  
                         l1883 173C                           l1955 1FE8  
                         l1699 18EA                           l1876 19BA  
                         l1868 1A06                           l1884 169E  
                         l1956 2018                           l1877 19AE  
                         l1893 16E4                           l1958 2014  
                         l1879 19C6                           l1959 2008  
                         l1889 1672                           l1899 16BA  
                         ?_exp 012F                           ?_log 012F  
                         ?_isr 016E                           ?_pow 0122  
                         STR_1 0867                           STR_3 086A  
                         STR_4 0872                           STR_5 0855  
                         STR_6 0861                           STR_7 085B  
                         STR_8 084D                           STR_9 086A  
                         _BRGH 007D62                           _CREN 007D5C  
                         _T0CS 007EAD                           _T0SE 007EAC  
                         u3100 261A                           u3200 154A  
                         u3008 227A                           u1520 2320  
                         u3009 228E                           u1505 22F2  
                         _CCal 000000                           u3130 207E  
                         u3018 2292                           u1506 22F8  
                         u3019 22A6                           u1515 230C  
                         u1516 2312                           u3205 1548  
                         u1535 2322                           u3330 1062  
                         u3090 1348                           u3068 130A  
                         u3069 1322                           u3510 1ECA  
                         u3360 117C                           u3336 1064  
                         u3088 132C                           u3450 135C  
                         u3258 1A82                           u3288 1AB4  
                         u3289 1ADE                           _PEIE 007F96  
                         u4187 2048                           u4197 2060  
                         u3590 1BA6                           u3760 1FFE  
                         _RCIF 007CF5                           _OERR 007D59  
                         _RBPU 007F8F                           _TMR0 000FD6  
                         _TMR2 000FCC                           _SPEN 007D5F  
                         _TXIE 007CEC                           _TXIF 007CF4  
                         _TXEN 007D65                           _SYNC 007D64  
                         _bres 000006                           _main 1840  
                         fsr0h 000FEA                           indf0 000FEF  
                         fsr0l 000FE9                           fsr1l 000FE1  
                         fsr2l 000FD9                           exp@x 012F  
                         log@x 012F                           pow@x 0122  
                         pow@y 0126                           prodh 000FF4  
                         prodl 000FF3     __end_of_measure_inductance 0C50  
                         start 0014                          ??_exp 0133  
                        ??_log 0133                          ??_isr 016E  
                        ??_pow 012A                 ___flpack@l_arg 0166  
              __end_of___fladd 1756                          ?_main 0100  
              __end_of___fldiv 1DEE                __end_of___flneg 267A  
                        STR_10 086D                          STR_11 086A  
              __end_of___flmul 1C84                __end_of___flsub 2592  
              __end_of___fltol 203E                __end_of___lwdiv 23B8  
              __end_of___lwmod 25C8                          _RCREG 000FAE  
                        _SPBRG 000FAF                          _PORTC 000F82  
                        _TRISA 000F92                          _TRISC 000F94  
                        _SSPEN 007E35                          _TXREG 000FAD  
                        _log10 2324                          _blink 000038  
                        _floor 1756                          _ldexp 1E92  
                        _frexp 2146                   _output_putch 267A  
                        _msecs 000034                          pclath 000FFA  
                        tablat 000FF5                          pow@yi 012B  
                        status 000FD8                ??_print_reading 0120  
           _format_number$1549 0116                    ldexp@newexp 013D  
                 __end_of_main 1924               format_double@num 010E  
                ?_measure_freq 011E                         ??_main 0100  
          format_double@weight 011E                  __activetblptr 000002  
                       ?_log10 0122                         ?_floor 0139  
                       ?_ldexp 0139                         ?_frexp 0145  
             __end_of___altofl 1FB2               __end_of___flpack 1A08  
             __end_of___awtofl 2146               __end_of___lltofl 2402  
                       i2l1690 1CF0                         i2l1691 1CEE  
                       i2l1692 1CCE                         i2l1694 1D10  
                       i2l1696 1D32                         i2l1697 1D30  
             __end_of___lwtofl 2558                         i2u4040 1CBA  
                       i2u4055 1CBC                         _TMR0IF 007F92  
                       _TMR2IE 007CE9                         _TMR2IF 007CF1  
                       _TMR2ON 007E52                         _TRISC0 007CA0  
                       _TRISC1 007CA1                         _TRISC2 007CA2  
                       _TRISC6 007CA6                         __Ldata 000047  
                       ___flge 2402                      ??___fladd 015D  
                       ___wmul 25C8                      ??___fldiv 0141  
               ___flunpack@arg 0163                      ??___flneg 0151  
                    ??___flmul 015D                 ___flunpack@exp 0165  
                    ??___flsub 0147                      ??___fltol 0147  
               ??_measure_freq 0120                      ??___lwdiv 013F  
                 ?_timer2_init 0100                      ??___lwmod 013F  
                       log10@x 0122                         _rxfifo 000024  
                       _txfifo 000014                         _rxiptr 00003B  
                       _rxoptr 00003E                         floor@i 013F  
                       _txiptr 00003A                         floor@x 0139  
                       exp@exp 0137                         log@exp 0143  
                       _txoptr 00003C                 _eval_poly$1575 014C  
             __end_of_ser_init 2666               __end_of_ser_puts 261C  
                 __mediumconst 0878                         tblptrh 000FF7  
                       tblptrl 000FF6                         tblptru 000FF8  
             format_number@buf 011A               format_number@pad 0115  
      _measure_inductance$1506 0100        _measure_inductance$1507 0104  
      _measure_inductance$1508 0108        _measure_inductance$1509 010C  
                   ___fladd@f1 0155                     ___fladd@f2 0159  
                   ___flge@ff1 0143                     ___flge@ff2 0147  
                _format_double 11B8                     ___altofl@c 0143  
                   ___fldiv@f1 0139                     ___fldiv@f2 013D  
                   ___fldiv@f3 0143                     __accesstop 0060  
                   ___flneg@f1 014D                  _format_number 1A08  
                _format_xint32 2276                     ___flmul@f1 0155  
                   ___flmul@f2 0159                     ___flmul@f3 015F  
                 eval_poly@res 0150                     ___flsub@f1 013F  
                   ___flsub@f2 0143                     ___fltol@f1 0143  
                   ___awtofl@c 0145         measure_capacitance@Cin 010A  
                   ___flunpack 21BE         measure_capacitance@var 0108  
       ___asflmul@multiplicand 013B                     ___lltofl@c 012F  
                __end_of_log10 236E                  __end_of_floor 1840  
                __end_of_ldexp 1F26                  __end_of_frexp 21BE  
                   ___lwtofl@c 011E                        ??_log10 0126  
                      ??_floor 013D                        ??_ldexp 013F  
                      ??_frexp 014B                 ?_format_double 010E  
               ?_format_number 0112                 ?_format_xint32 010E  
                      ?___flge 0143                        ?___wmul 0106  
                    l500000737 1A4A              __end_of___asfldiv 251A  
                    ?___altofl 0143              __end_of___asflmul 248E  
            __end_of___asflsub 24D4                      ?___flpack 0163  
                    l600000763 194A                      ?___awtofl 0145  
                    ?___lltofl 012F             _measure_inductance 087C  
                      _T2CKPS0 007E50                        _T2CKPS1 007E51  
                    ?___lwtofl 011E                __USB_DESCRIPTOR 000400  
          ?_measure_inductance 0100              __end_of_calibrate 1E92  
                      _TOUTPS0 007E53                        _TOUTPS1 007E54  
                      _TOUTPS2 007E55              __end_of_delay10ms 2276  
         __end_of_measure_freq 20C6                        __Hdata0 00004A  
                      __Ldata0 000047                    ?___flunpack 0163  
                      __Hparam 0170                        __Lparam 0100  
                    ?_ser_init 0100           ??_measure_inductance 0100  
                    ?_ser_puts 010E                        ___fladd 1604  
                      ___fldiv 1D3C                        ___flneg 2666  
                      ___flmul 1BB8                        ___flsub 2558  
                      ___fltol 1FB2                        ___lwdiv 236E  
                      ___lwmod 2592                     ??___altofl 0147  
                   ??___flpack 0166                     ??___awtofl 0149  
            __end_of_eval_poly 1BB8                        __ramtop 0800  
            __end_of_indicator 2688                     ??___lltofl 0133  
                   ??___lwtofl 0122                        _seconds 00003F  
                      _ser_brg 000049                        _ser_tmp 00003D  
              ??_format_double 0112                ??_format_number 0116  
              ??_format_xint32 0112                  __Lmediumconst 0878  
                      int_func 0008              __end_of_ser_putch 2642  
                      pow@sign 012A  measure_inductance@denominator 0112  
        __end_of_print_reading 268A                     ??_ser_init 0100  
                   ??_ser_puts 010E              format_number@base 0114  
                      postdec0 000FED                        postinc0 000FEE  
                   _print_unit 268A            _measure_capacitance 0C50  
                  ___altofl@f1 0147                 _format_putchar 2684  
                  ___awtofl@f1 0149           ?_measure_capacitance 0100  
               format_double@m 011C                 __end_of___flge 2448  
               __end_of___wmul 25F4                    ___lltofl@f1 0133  
                   floor@expon 013D                 format_number@i 0119  
               format_number@n 0112                 format_xint32@x 010E  
                   eval_poly@d 0149                     eval_poly@n 014A  
                   eval_poly@x 0145                     ldexp@value 0139  
                  __end_of_exp 11B8                    __end_of_log 14AA  
                  __end_of_isr 1D3C                    __end_of_pow 1604  
                  ___lwtofl@f1 0122                      __Habsbss0 000047  
                    __Habsbss1 000500                      __Habsbss2 000F7F  
       __end_of_format_putchar 2686             format_double@digit 011A  
                    __Labsbss0 000000                      __Labsbss1 000400  
                    __Labsbss2 000F70                     frexp@value 0145  
        ??_measure_capacitance 0100                       ??___flge 014B  
                     ??___wmul 010A                   _measure_freq 203E  
     print_reading@measurement 011E                      ___asfldiv 24D4  
                  ?_print_unit 011E                      ___asflmul 2448  
                    ___asflsub 248E                  ?_output_putch 013B  
              ?_format_putchar 013B                      _calibrate 1DEE  
                    _delay10ms 221E                   ??___flunpack 0167  
             ___lwdiv@dividend 013B                       ?___fladd 0155  
                     ?___fldiv 0139                       ?___flneg 014D  
                     ?___flmul 0155                       ?___flsub 013F  
                     ?___fltol 0143                       ?___lwdiv 013B  
                     ?___lwmod 013B                    __smallconst 0800  
                   ?___asfldiv 011E                     ?___asflmul 0139  
                   ?___asflsub 0139                      _eval_poly 1AEA  
                    _indicator 2686                 ??_output_putch 013B  
           __end_of___flunpack 221E                     ?_calibrate 0100  
                   ?_delay10ms 0100                      _ser_putch 261C  
                ??_timer2_init 0100              ___wmul@multiplier 0106  
                   ?_eval_poly 0145                     ?_indicator 0100  
        measure_inductance@Lin 011A          measure_inductance@var 0110  
        __end_of_format_double 134A           format_number@padchar 0118  
        __end_of_format_number 1AEA          __end_of_format_xint32 22CE  
                    frexp@eptr 0149                       __Hparam1 0170  
                     __Lparam1 0100                     ?_ser_putch 013B  
                 __Lsmallconst 0800                    delay10ms@ms 0102  
                     ___altofl 1F26                       ___flpack 1924  
                     ___awtofl 20C6                       ___lltofl 23B8  
                     ___lwtofl 251A                    ??___asfldiv 0124  
                  ??___asflmul 013F                       _exp$1558 0133  
                  ??___asflsub 013F            __end_of_timer2_init 2324  
                     _log$1562 0133                       _log$1563 0137  
                     _log$1567 013B                       _log$1568 013F  
             ___flunpack@l_arg 0167                ___lwdiv@divisor 013D  
                __USB_ENDPOINT 000F70                    ??_calibrate 0100  
                  ??_delay10ms 0102                       _msecpart 000004  
                     _ser_init 2642                       _ser_puts 25F4  
                     _timer1of 000043           __end_of_output_putch 2684  
  measure_inductance@numerator 0116               ??_format_putchar 013B  
                 ??_print_unit 011E                    ??_eval_poly 014C  
                  ??_indicator 0100                       intlevel2 268C  
  __end_of_measure_capacitance 0FE6               ___lwmod@dividend 013B  
                  ??_ser_putch 013B             __end_of_print_unit 268C  
                _print_reading 2688           delay10ms@period_10ms 0100  
                  _timer2_init 22CE             _format_double$1534 0112  
           _format_double$1535 0116       _measure_capacitance$1486 0100  
     _measure_capacitance$1487 0104                ___lwmod@divisor 013D  
                 ___fladd@exp1 015E                   ___fladd@exp2 015D  
               ?_print_reading 011E                   ___asfldiv@f2 0120  
