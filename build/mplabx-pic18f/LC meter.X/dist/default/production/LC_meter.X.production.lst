

Microchip Technology PIC18 LITE Macro Assembler V1.34 build -361300703 
                                                                                               Thu Aug 29 16:36:12 2019

Microchip Technology Omniscient Code Generator (Lite mode) build 201502162209
     1                           	processor	18F252
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     7                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    14                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    15                           	psect	text0,global,reloc=2,class=CODE,delta=1
    16                           	psect	text1,global,reloc=2,class=CODE,delta=1
    17                           	psect	text2,global,reloc=2,class=CODE,delta=1
    18                           	psect	text3,global,reloc=2,class=CODE,delta=1
    19                           	psect	text4,global,reloc=2,class=CODE,delta=1
    20                           	psect	text5,global,reloc=2,class=CODE,delta=1
    21                           	psect	text6,global,reloc=2,class=CODE,delta=1
    22                           	psect	text7,global,reloc=2,class=CODE,delta=1
    23                           	psect	text8,global,reloc=2,class=CODE,delta=1
    24                           	psect	text9,global,reloc=2,class=CODE,delta=1
    25                           	psect	text10,global,reloc=2,class=CODE,delta=1
    26                           	psect	text11,global,reloc=2,class=CODE,delta=1
    27                           	psect	text12,global,reloc=2,class=CODE,delta=1
    28                           	psect	text13,global,reloc=2,class=CODE,delta=1
    29                           	psect	text14,global,reloc=2,class=CODE,delta=1
    30                           	psect	text15,global,reloc=2,class=CODE,delta=1
    31                           	psect	text16,global,reloc=2,class=CODE,delta=1
    32                           	psect	text17,global,reloc=2,class=CODE,delta=1
    33                           	psect	text18,global,reloc=2,class=CODE,delta=1
    34                           	psect	text19,global,reloc=2,class=CODE,delta=1
    35                           	psect	text20,global,reloc=2,class=CODE,delta=1
    36                           	psect	text21,global,reloc=2,class=CODE,delta=1
    37                           	psect	text22,global,reloc=2,class=CODE,delta=1
    38                           	psect	text23,global,reloc=2,class=CODE,delta=1
    39                           	psect	text24,global,reloc=2,class=CODE,delta=1
    40                           	psect	text25,global,reloc=2,class=CODE,delta=1
    41                           	psect	text26,global,reloc=2,class=CODE,delta=1
    42                           	psect	text27,global,reloc=2,class=CODE,delta=1
    43                           	psect	text28,global,reloc=2,class=CODE,delta=1
    44                           	psect	text29,global,reloc=2,class=CODE,delta=1
    45                           	psect	text30,global,reloc=2,class=CODE,delta=1
    46                           	psect	text31,global,reloc=2,class=CODE,delta=1
    47                           	psect	text32,global,reloc=2,class=CODE,delta=1
    48                           	psect	text33,global,reloc=2,class=CODE,delta=1
    49                           	psect	text34,global,reloc=2,class=CODE,delta=1
    50                           	psect	text35,global,reloc=2,class=CODE,delta=1
    51                           	psect	text36,global,reloc=2,class=CODE,delta=1
    52                           	psect	text37,global,reloc=2,class=CODE,delta=1
    53                           	psect	text38,global,reloc=2,class=CODE,delta=1
    54                           	psect	text39,global,reloc=2,class=CODE,delta=1
    55                           	psect	text40,global,reloc=2,class=CODE,delta=1
    56                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    57                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    58                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    59  0000                     
    60                           	psect	idataCOMRAM
    61  002850                     __pidataCOMRAM:
    62                           	opt stack 0
    63                           
    64                           ;initializer for _putchar_ptr
    65  002850  44                 	db	low _format_putchar
    66  002851  28                 	db	high _format_putchar
    67                           
    68                           ;initializer for _ser_brg
    69  002852  1F                 	db	31
    70                           
    71                           	psect	smallconst
    72  000600                     __psmallconst:
    73                           	opt stack 0
    74  000600  00                 	db	0
    75  000601                     exp@coeff:
    76                           	opt stack 0
    77  000601  00                 	db	0
    78  000602  80                 	db	128
    79  000603  3F                 	db	63
    80  000604  72                 	db	114
    81  000605  31                 	db	49
    82  000606  3F                 	db	63
    83  000607  FE                 	db	254
    84  000608  75                 	db	117
    85  000609  3E                 	db	62
    86  00060A  58                 	db	88
    87  00060B  63                 	db	99
    88  00060C  3D                 	db	61
    89  00060D  95                 	db	149
    90  00060E  1D                 	db	29
    91  00060F  3C                 	db	60
    92  000610  C5                 	db	197
    93  000611  AE                 	db	174
    94  000612  3A                 	db	58
    95  000613  79                 	db	121
    96  000614  21                 	db	33
    97  000615  39                 	db	57
    98  000616  94                 	db	148
    99  000617  80                 	db	128
   100  000618  37                 	db	55
   101  000619  93                 	db	147
   102  00061A  A7                 	db	167
   103  00061B  35                 	db	53
   104  00061C  56                 	db	86
   105  00061D  15                 	db	21
   106  00061E  34                 	db	52
   107  00061F                     __end_ofexp@coeff:
   108                           	opt stack 0
   109  00061F                     log@coeff:
   110                           	opt stack 0
   111  00061F  00                 	db	0
   112  000620  00                 	db	0
   113  000621  00                 	db	0
   114  000622  00                 	db	0
   115  000623  80                 	db	128
   116  000624  3F                 	db	63
   117  000625  F0                 	db	240
   118  000626  FF                 	db	255
   119  000627  BE                 	db	190
   120  000628  E2                 	db	226
   121  000629  A9                 	db	169
   122  00062A  3E                 	db	62
   123  00062B  83                 	db	131
   124  00062C  76                 	db	118
   125  00062D  BE                 	db	190
   126  00062E  AE                 	db	174
   127  00062F  2B                 	db	43
   128  000630  3E                 	db	62
   129  000631  3C                 	db	60
   130  000632  C3                 	db	195
   131  000633  BD                 	db	189
   132  000634  D2                 	db	210
   133  000635  13                 	db	19
   134  000636  3D                 	db	61
   135  000637  78                 	db	120
   136  000638  D3                 	db	211
   137  000639  BB                 	db	187
   138  00063A                     __end_oflog@coeff:
   139                           	opt stack 0
   140  00063A                     STR_8:
   141  00063A  0D                 	db	13
   142  00063B  0A                 	db	10
   143  00063C  43                 	db	67	;'C'
   144  00063D  43                 	db	67	;'C'
   145  00063E  61                 	db	97	;'a'
   146  00063F  6C                 	db	108	;'l'
   147  000640  3D                 	db	61	;'='
   148  000641  00                 	db	0
   149  000642                     STR_1:
   150  000642  2E                 	db	46
   151  000643  2E                 	db	46
   152  000644  2E                 	db	46
   153  000645  0D                 	db	13
   154  000646  0A                 	db	10
   155  000647  00                 	db	0
   156  000648                     STR_5:
   157  000648  0D                 	db	13
   158  000649  0A                 	db	10
   159  00064A  46                 	db	70	;'F'
   160  00064B  31                 	db	49	;'1'
   161  00064C  3D                 	db	61	;'='
   162  00064D  00                 	db	0
   163  00064E                     STR_6:
   164  00064E  0D                 	db	13
   165  00064F  0A                 	db	10
   166  000650  46                 	db	70	;'F'
   167  000651  32                 	db	50	;'2'
   168  000652  3D                 	db	61	;'='
   169  000653  00                 	db	0
   170  000654                     STR_7:
   171  000654  0D                 	db	13
   172  000655  0A                 	db	10
   173  000656  46                 	db	70	;'F'
   174  000657  33                 	db	51	;'3'
   175  000658  3D                 	db	61	;'='
   176  000659  00                 	db	0
   177  00065A                     STR_10:
   178  00065A  43                 	db	67	;'C'
   179  00065B  69                 	db	105	;'i'
   180  00065C  6E                 	db	110	;'n'
   181  00065D  3D                 	db	61	;'='
   182  00065E  00                 	db	0
   183  00065F                     STR_4:
   184  00065F  76                 	db	118	;'v'
   185  000660  61                 	db	97	;'a'
   186  000661  72                 	db	114	;'r'
   187  000662  3D                 	db	61	;'='
   188  000663  00                 	db	0
   189  0000                     
   190                           ; #config settings
   191  000664  00                 	db	0	; dummy byte at the end
   192  0000                     
   193                           	psect	nvBANK0
   194  0000F8                     __pnvBANK0:
   195                           	opt stack 0
   196  0000F8                     _CCal:
   197                           	opt stack 0
   198  0000F8                     	ds	3
   199  0000FB                     _bres:
   200                           	opt stack 0
   201  0000FB                     	ds	2
   202  0000FD                     _msecpart:
   203                           	opt stack 0
   204  0000FD                     	ds	2
   205  0000                     _TMR0	set	4054
   206  0000                     _RCREG	set	4014
   207  0000                     _SPBRG	set	4015
   208  0000                     _TMR2	set	4044
   209  0000                     _TRISA	set	3986
   210  0000                     _TRISC	set	3988
   211  0000                     _TXREG	set	4013
   212  0000                     _BRGH	set	32098
   213  0000                     _CREN	set	32092
   214  0000                     _GIE	set	32663
   215  0000                     _LATC3	set	31835
   216  0000                     _LATC4	set	31836
   217  0000                     _LATC5	set	31837
   218  0000                     _LATC7	set	31839
   219  0000                     _OERR	set	32089
   220  0000                     _PEIE	set	32662
   221  0000                     _RCIF	set	31989
   222  0000                     _RX9	set	32094
   223  0000                     _SPEN	set	32095
   224  0000                     _SSPEN	set	32309
   225  0000                     _SYNC	set	32100
   226  0000                     _T0CS	set	32429
   227  0000                     _T0SE	set	32428
   228  0000                     _T2CKPS0	set	32336
   229  0000                     _T2CKPS1	set	32337
   230  0000                     _TMR0IF	set	32658
   231  0000                     _TMR2IE	set	31977
   232  0000                     _TMR2IF	set	31985
   233  0000                     _TMR2ON	set	32338
   234  0000                     _TOUTPS0	set	32339
   235  0000                     _TOUTPS1	set	32340
   236  0000                     _TOUTPS2	set	32341
   237  0000                     _TRISC0	set	31904
   238  0000                     _TRISC1	set	31905
   239  0000                     _TRISC2	set	31906
   240  0000                     _TRISC3	set	31907
   241  0000                     _TRISC4	set	31908
   242  0000                     _TRISC5	set	31909
   243  0000                     _TRISC6	set	31910
   244  0000                     _TX9	set	32102
   245  0000                     _TXEN	set	32101
   246  0000                     _TXIE	set	31980
   247  0000                     _TXIF	set	31988
   248  0000                     _nRBPU	set	32655
   249                           
   250                           	psect	cinit
   251  00262C                     __pcinit:
   252                           	opt stack 0
   253  00262C                     start_initialization:
   254                           	opt stack 0
   255  00262C                     __initialization:
   256                           	opt stack 0
   257                           
   258                           ; Clear objects allocated to BANK1 (16 bytes)
   259  00262C  EE01  F000         	lfsr	0,__pbssBANK1
   260  002630  0E10               	movlw	16
   261  002632                     clear_0:
   262  002632  6AEE               	clrf	postinc0,c
   263  002634  06E8               	decf	wreg,f,c
   264  002636  E1FD               	bnz	clear_0
   265                           
   266                           ; Clear objects allocated to BANK0 (39 bytes)
   267  002638  EE00  F0D1         	lfsr	0,__pbssBANK0
   268  00263C  0E27               	movlw	39
   269  00263E                     clear_1:
   270  00263E  6AEE               	clrf	postinc0,c
   271  002640  06E8               	decf	wreg,f,c
   272  002642  E1FD               	bnz	clear_1
   273                           
   274                           ; Clear objects allocated to COMRAM (10 bytes)
   275  002644  EE00  F064         	lfsr	0,__pbssCOMRAM
   276  002648  0E0A               	movlw	10
   277  00264A                     clear_2:
   278  00264A  6AEE               	clrf	postinc0,c
   279  00264C  06E8               	decf	wreg,f,c
   280  00264E  E1FD               	bnz	clear_2
   281                           
   282                           ; Initialize objects allocated to COMRAM (3 bytes)
   283                           ; load TBLPTR registers with __pidataCOMRAM
   284  002650  0E50               	movlw	low __pidataCOMRAM
   285  002652  6EF6               	movwf	tblptrl,c
   286  002654  0E28               	movlw	high __pidataCOMRAM
   287  002656  6EF7               	movwf	tblptrh,c
   288  002658  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   289  00265A  6EF8               	movwf	tblptru,c
   290  00265C  0009               	tblrd		*+	;fetch initializer
   291  00265E  CFF5 F06E          	movff	tablat,__pdataCOMRAM
   292  002662  0009               	tblrd		*+	;fetch initializer
   293  002664  CFF5 F06F          	movff	tablat,__pdataCOMRAM+1
   294  002668  0009               	tblrd		*+	;fetch initializer
   295  00266A  CFF5 F070          	movff	tablat,__pdataCOMRAM+2
   296  00266E                     end_of_initialization:
   297                           	opt stack 0
   298  00266E                     __end_of__initialization:
   299                           	opt stack 0
   300  00266E  0E00               	movlw	low (__Lmediumconst shr (0+16))
   301  002670  6EF8               	movwf	tblptru,c
   302  002672  0100               	movlb	0
   303  002674  EF2B  F00D         	goto	_main	;jump to C main() function
   304                           tblptru	equ	0xFF8
   305                           tblptrh	equ	0xFF7
   306                           tblptrl	equ	0xFF6
   307                           tablat	equ	0xFF5
   308                           postinc0	equ	0xFEE
   309                           wreg	equ	0xFE8
   310                           
   311                           	psect	bssCOMRAM
   312  000064                     __pbssCOMRAM:
   313                           	opt stack 0
   314  000064                     _msecs:
   315                           	opt stack 0
   316  000064                     	ds	4
   317  000068                     _rxiptr:
   318                           	opt stack 0
   319  000068                     	ds	1
   320  000069                     _rxoptr:
   321                           	opt stack 0
   322  000069                     	ds	1
   323  00006A                     _ser_tmp:
   324                           	opt stack 0
   325  00006A                     	ds	1
   326  00006B                     _txiptr:
   327                           	opt stack 0
   328  00006B                     	ds	1
   329  00006C                     _txoptr:
   330                           	opt stack 0
   331  00006C                     	ds	1
   332  00006D                     	ds	1
   333                           tblptru	equ	0xFF8
   334                           tblptrh	equ	0xFF7
   335                           tblptrl	equ	0xFF6
   336                           tablat	equ	0xFF5
   337                           postinc0	equ	0xFEE
   338                           wreg	equ	0xFE8
   339                           
   340                           	psect	dataCOMRAM
   341  00006E                     __pdataCOMRAM:
   342                           	opt stack 0
   343  00006E                     _putchar_ptr:
   344                           	opt stack 0
   345  00006E                     	ds	2
   346  000070                     _ser_brg:
   347                           	opt stack 0
   348  000070                     	ds	1
   349                           tblptru	equ	0xFF8
   350                           tblptrh	equ	0xFF7
   351                           tblptrl	equ	0xFF6
   352                           tablat	equ	0xFF5
   353                           postinc0	equ	0xFEE
   354                           wreg	equ	0xFE8
   355                           
   356                           	psect	bssBANK0
   357  0000D1                     __pbssBANK0:
   358                           	opt stack 0
   359  0000D1                     _rxfifo:
   360                           	opt stack 0
   361  0000D1                     	ds	16
   362  0000E1                     _seconds:
   363                           	opt stack 0
   364  0000E1                     	ds	4
   365  0000E5                     _timer1of:
   366                           	opt stack 0
   367  0000E5                     	ds	4
   368  0000E9                     _F2:
   369                           	opt stack 0
   370  0000E9                     	ds	3
   371  0000EC                     _F3:
   372                           	opt stack 0
   373  0000EC                     	ds	3
   374  0000EF                     _blink:
   375                           	opt stack 0
   376  0000EF                     	ds	2
   377  0000F1                     _errno:
   378                           	opt stack 0
   379  0000F1                     	ds	2
   380  0000F3                     testloop@prev_s:
   381                           	opt stack 0
   382  0000F3                     	ds	2
   383  0000F5                     _F1:
   384                           	opt stack 0
   385  0000F5                     	ds	3
   386                           tblptru	equ	0xFF8
   387                           tblptrh	equ	0xFF7
   388                           tblptrl	equ	0xFF6
   389                           tablat	equ	0xFF5
   390                           postinc0	equ	0xFEE
   391                           wreg	equ	0xFE8
   392                           
   393                           	psect	bssBANK1
   394  000100                     __pbssBANK1:
   395                           	opt stack 0
   396  000100                     _txfifo:
   397                           	opt stack 0
   398  000100                     	ds	16
   399                           tblptru	equ	0xFF8
   400                           tblptrh	equ	0xFF7
   401                           tblptrl	equ	0xFF6
   402                           tablat	equ	0xFF5
   403                           postinc0	equ	0xFEE
   404                           wreg	equ	0xFE8
   405                           
   406                           	psect	cstackBANK0
   407  000080                     __pcstackBANK0:
   408                           	opt stack 0
   409  000080                     ___fttol@sign1:
   410                           	opt stack 0
   411                           
   412                           ; 1 bytes @ 0x0
   413  000080                     	ds	1
   414  000081                     ___fttol@lval:
   415                           	opt stack 0
   416                           
   417                           ; 4 bytes @ 0x1
   418  000081                     	ds	4
   419  000085                     ___fttol@exp1:
   420                           	opt stack 0
   421                           
   422                           ; 1 bytes @ 0x5
   423  000085                     	ds	1
   424  000086                     ?___altoft:
   425                           	opt stack 0
   426  000086                     measure_inductance@numerator:
   427                           	opt stack 0
   428  000086                     ___altoft@c:
   429                           	opt stack 0
   430                           
   431                           ; 4 bytes @ 0x6
   432  000086                     	ds	3
   433  000089                     measure_inductance@denominator:
   434                           	opt stack 0
   435                           
   436                           ; 3 bytes @ 0x9
   437  000089                     	ds	1
   438  00008A                     ??___altoft:
   439                           
   440                           ; 0 bytes @ 0xA
   441  00008A                     	ds	2
   442  00008C                     _measure_inductance$916:
   443                           	opt stack 0
   444                           
   445                           ; 3 bytes @ 0xC
   446  00008C                     	ds	2
   447  00008E                     ___altoft@exp:
   448                           	opt stack 0
   449                           
   450                           ; 1 bytes @ 0xE
   451  00008E                     	ds	1
   452  00008F                     ___altoft@sign:
   453                           	opt stack 0
   454  00008F                     _measure_inductance$920:
   455                           	opt stack 0
   456                           
   457                           ; 3 bytes @ 0xF
   458  00008F                     	ds	1
   459  000090                     ?_floor:
   460                           	opt stack 0
   461  000090                     floor@x:
   462                           	opt stack 0
   463                           
   464                           ; 3 bytes @ 0x10
   465  000090                     	ds	2
   466  000092                     _measure_inductance$921:
   467                           	opt stack 0
   468                           
   469                           ; 3 bytes @ 0x12
   470  000092                     	ds	1
   471  000093                     floor@i:
   472                           	opt stack 0
   473                           
   474                           ; 3 bytes @ 0x13
   475  000093                     	ds	2
   476  000095                     _measure_inductance$922:
   477                           	opt stack 0
   478                           
   479                           ; 3 bytes @ 0x15
   480  000095                     	ds	1
   481  000096                     floor@expon:
   482                           	opt stack 0
   483                           
   484                           ; 2 bytes @ 0x16
   485  000096                     	ds	2
   486  000098                     ?_exp:
   487                           	opt stack 0
   488  000098                     measure_inductance@unit:
   489                           	opt stack 0
   490  000098                     exp@x:
   491                           	opt stack 0
   492                           
   493                           ; 3 bytes @ 0x18
   494  000098                     	ds	1
   495  000099                     _measure_inductance$917:
   496                           	opt stack 0
   497                           
   498                           ; 3 bytes @ 0x19
   499  000099                     	ds	2
   500  00009B                     _exp$926:
   501                           	opt stack 0
   502                           
   503                           ; 3 bytes @ 0x1B
   504  00009B                     	ds	1
   505  00009C                     _measure_inductance$918:
   506                           	opt stack 0
   507                           
   508                           ; 3 bytes @ 0x1C
   509  00009C                     	ds	2
   510  00009E                     exp@exponent:
   511                           	opt stack 0
   512                           
   513                           ; 2 bytes @ 0x1E
   514  00009E                     	ds	1
   515  00009F                     _measure_inductance$919:
   516                           	opt stack 0
   517                           
   518                           ; 3 bytes @ 0x1F
   519  00009F                     	ds	1
   520  0000A0                     exp@sign:
   521                           	opt stack 0
   522                           
   523                           ; 1 bytes @ 0x20
   524  0000A0                     	ds	1
   525  0000A1                     ?_pow:
   526                           	opt stack 0
   527  0000A1                     pow@x:
   528                           	opt stack 0
   529                           
   530                           ; 3 bytes @ 0x21
   531  0000A1                     	ds	1
   532  0000A2                     measure_inductance@var:
   533                           	opt stack 0
   534                           
   535                           ; 2 bytes @ 0x22
   536  0000A2                     	ds	2
   537  0000A4                     measure_inductance@Lin:
   538                           	opt stack 0
   539  0000A4                     pow@y:
   540                           	opt stack 0
   541                           
   542                           ; 3 bytes @ 0x24
   543  0000A4                     	ds	3
   544  0000A7                     _pow$924:
   545                           	opt stack 0
   546                           
   547                           ; 3 bytes @ 0x27
   548  0000A7                     	ds	3
   549  0000AA                     _pow$925:
   550                           	opt stack 0
   551                           
   552                           ; 3 bytes @ 0x2A
   553  0000AA                     	ds	3
   554  0000AD                     pow@sign:
   555                           	opt stack 0
   556                           
   557                           ; 1 bytes @ 0x2D
   558  0000AD                     	ds	1
   559  0000AE                     pow@yi:
   560                           	opt stack 0
   561                           
   562                           ; 4 bytes @ 0x2E
   563  0000AE                     	ds	4
   564  0000B2                     format_double@num:
   565                           	opt stack 0
   566                           
   567                           ; 3 bytes @ 0x32
   568  0000B2                     	ds	3
   569  0000B5                     _format_double$911:
   570                           	opt stack 0
   571                           
   572                           ; 3 bytes @ 0x35
   573  0000B5                     	ds	3
   574  0000B8                     _format_double$912:
   575                           	opt stack 0
   576                           
   577                           ; 3 bytes @ 0x38
   578  0000B8                     	ds	3
   579  0000BB                     format_double@weight:
   580                           	opt stack 0
   581                           
   582                           ; 3 bytes @ 0x3B
   583  0000BB                     	ds	3
   584  0000BE                     format_double@digit:
   585                           	opt stack 0
   586                           
   587                           ; 2 bytes @ 0x3E
   588  0000BE                     	ds	2
   589  0000C0                     format_double@m:
   590                           	opt stack 0
   591                           
   592                           ; 2 bytes @ 0x40
   593  0000C0                     	ds	2
   594  0000C2                     _measure_capacitance$913:
   595                           	opt stack 0
   596                           
   597                           ; 3 bytes @ 0x42
   598  0000C2                     	ds	3
   599  0000C5                     _measure_capacitance$914:
   600                           	opt stack 0
   601                           
   602                           ; 3 bytes @ 0x45
   603  0000C5                     	ds	3
   604  0000C8                     _measure_capacitance$915:
   605                           	opt stack 0
   606                           
   607                           ; 3 bytes @ 0x48
   608  0000C8                     	ds	3
   609  0000CB                     measure_capacitance@unit:
   610                           	opt stack 0
   611                           
   612                           ; 1 bytes @ 0x4B
   613  0000CB                     	ds	1
   614  0000CC                     measure_capacitance@var:
   615                           	opt stack 0
   616                           
   617                           ; 2 bytes @ 0x4C
   618  0000CC                     	ds	2
   619  0000CE                     measure_capacitance@Cin:
   620                           	opt stack 0
   621                           
   622                           ; 3 bytes @ 0x4E
   623  0000CE                     	ds	3
   624                           tblptru	equ	0xFF8
   625                           tblptrh	equ	0xFF7
   626                           tblptrl	equ	0xFF6
   627                           tablat	equ	0xFF5
   628                           postinc0	equ	0xFEE
   629                           wreg	equ	0xFE8
   630                           
   631                           	psect	cstackCOMRAM
   632  000001                     __pcstackCOMRAM:
   633                           	opt stack 0
   634  000001                     ??_isr:
   635  000001                     
   636                           ; 1 bytes @ 0x0
   637  000001                     	ds	14
   638  00000F                     ??_timer2_init:
   639  00000F                     ?_measure_freq:
   640                           	opt stack 0
   641  00000F                     ?___wmul:
   642                           	opt stack 0
   643  00000F                     ?___lwdiv:
   644                           	opt stack 0
   645  00000F                     ?___lwmod:
   646                           	opt stack 0
   647  00000F                     ?___ftpack:
   648                           	opt stack 0
   649  00000F                     ?_frexp:
   650                           	opt stack 0
   651  00000F                     ser_putch@c:
   652                           	opt stack 0
   653  00000F                     print_reading@measurement:
   654                           	opt stack 0
   655  00000F                     ___wmul@multiplier:
   656                           	opt stack 0
   657  00000F                     ___lwdiv@dividend:
   658                           	opt stack 0
   659  00000F                     ___lwmod@dividend:
   660                           	opt stack 0
   661  00000F                     ___ftpack@arg:
   662                           	opt stack 0
   663  00000F                     frexp@value:
   664                           	opt stack 0
   665  00000F                     ___ftge@ff1:
   666                           	opt stack 0
   667                           
   668                           ; 3 bytes @ 0xE
   669  00000F                     	ds	1
   670  000010                     timer2_init@ps_mode:
   671                           	opt stack 0
   672  000010                     output_putch@c:
   673                           	opt stack 0
   674  000010                     ser_puts@s:
   675                           	opt stack 0
   676                           
   677                           ; 2 bytes @ 0xF
   678  000010                     	ds	1
   679  000011                     ??_measure_freq:
   680  000011                     timer2_init@ps:
   681                           	opt stack 0
   682  000011                     ___wmul@multiplicand:
   683                           	opt stack 0
   684  000011                     ___lwdiv@divisor:
   685                           	opt stack 0
   686  000011                     ___lwmod@divisor:
   687                           	opt stack 0
   688                           
   689                           ; 2 bytes @ 0x10
   690  000011                     	ds	1
   691  000012                     timer2_init@postscaler:
   692                           	opt stack 0
   693  000012                     ___ftpack@exp:
   694                           	opt stack 0
   695  000012                     frexp@eptr:
   696                           	opt stack 0
   697  000012                     ___ftge@ff2:
   698                           	opt stack 0
   699                           
   700                           ; 3 bytes @ 0x11
   701  000012                     	ds	1
   702  000013                     ___ftpack@sign:
   703                           	opt stack 0
   704  000013                     ___lwmod@counter:
   705                           	opt stack 0
   706  000013                     ___wmul@product:
   707                           	opt stack 0
   708  000013                     ___lwdiv@quotient:
   709                           	opt stack 0
   710                           
   711                           ; 2 bytes @ 0x12
   712  000013                     	ds	1
   713  000014                     ??___ftpack:
   714  000014                     ??_frexp:
   715                           
   716                           ; 0 bytes @ 0x13
   717  000014                     	ds	1
   718  000015                     ??___ftge:
   719  000015                     measure_freq@prev:
   720                           	opt stack 0
   721  000015                     ___lwdiv@counter:
   722                           	opt stack 0
   723  000015                     delay10ms@period_10ms:
   724                           	opt stack 0
   725                           
   726                           ; 2 bytes @ 0x14
   727  000015                     	ds	1
   728  000016                     measure_freq@i:
   729                           	opt stack 0
   730  000016                     format_number@n:
   731                           	opt stack 0
   732                           
   733                           ; 2 bytes @ 0x15
   734  000016                     	ds	1
   735  000017                     ?___ftdiv:
   736                           	opt stack 0
   737  000017                     ?___awtoft:
   738                           	opt stack 0
   739  000017                     ?___lltoft:
   740                           	opt stack 0
   741  000017                     measure_freq@count:
   742                           	opt stack 0
   743  000017                     ___awtoft@c:
   744                           	opt stack 0
   745  000017                     ___ftdiv@f1:
   746                           	opt stack 0
   747  000017                     delay10ms@ms:
   748                           	opt stack 0
   749  000017                     ___lltoft@c:
   750                           	opt stack 0
   751                           
   752                           ; 4 bytes @ 0x16
   753  000017                     	ds	1
   754  000018                     format_number@base:
   755                           	opt stack 0
   756                           
   757                           ; 1 bytes @ 0x17
   758  000018                     	ds	1
   759  000019                     ?___lwtoft:
   760                           	opt stack 0
   761  000019                     format_number@pad:
   762                           	opt stack 0
   763  000019                     ___lwtoft@c:
   764                           	opt stack 0
   765                           
   766                           ; 2 bytes @ 0x18
   767  000019                     	ds	1
   768  00001A                     ??_format_number:
   769  00001A                     ___awtoft@sign:
   770                           	opt stack 0
   771  00001A                     ___ftdiv@f2:
   772                           	opt stack 0
   773                           
   774                           ; 3 bytes @ 0x19
   775  00001A                     	ds	1
   776  00001B                     ??___lltoft:
   777  00001B                     delay10ms@run:
   778                           	opt stack 0
   779                           
   780                           ; 1 bytes @ 0x1A
   781  00001B                     	ds	1
   782  00001C                     
   783                           ; 0 bytes @ 0x1B
   784  00001C                     	ds	1
   785  00001D                     ??___ftdiv:
   786                           
   787                           ; 0 bytes @ 0x1C
   788  00001D                     	ds	1
   789  00001E                     format_number@buf:
   790                           	opt stack 0
   791                           
   792                           ; 32 bytes @ 0x1D
   793  00001E                     	ds	1
   794  00001F                     ___lltoft@exp:
   795                           	opt stack 0
   796                           
   797                           ; 1 bytes @ 0x1E
   798  00001F                     	ds	1
   799  000020                     ___ftdiv@cntr:
   800                           	opt stack 0
   801                           
   802                           ; 1 bytes @ 0x1F
   803  000020                     	ds	1
   804  000021                     ___ftdiv@f3:
   805                           	opt stack 0
   806                           
   807                           ; 3 bytes @ 0x20
   808  000021                     	ds	3
   809  000024                     ___ftdiv@exp:
   810                           	opt stack 0
   811                           
   812                           ; 1 bytes @ 0x23
   813  000024                     	ds	1
   814  000025                     ___ftdiv@sign:
   815                           	opt stack 0
   816                           
   817                           ; 1 bytes @ 0x24
   818  000025                     	ds	1
   819  000026                     ?___ftmul:
   820                           	opt stack 0
   821  000026                     ___ftmul@f1:
   822                           	opt stack 0
   823                           
   824                           ; 3 bytes @ 0x25
   825  000026                     	ds	3
   826  000029                     ___ftmul@f2:
   827                           	opt stack 0
   828                           
   829                           ; 3 bytes @ 0x28
   830  000029                     	ds	3
   831  00002C                     ??___ftmul:
   832                           
   833                           ; 0 bytes @ 0x2B
   834  00002C                     	ds	3
   835  00002F                     ___ftmul@exp:
   836                           	opt stack 0
   837                           
   838                           ; 1 bytes @ 0x2E
   839  00002F                     	ds	1
   840  000030                     ___ftmul@f3_as_product:
   841                           	opt stack 0
   842                           
   843                           ; 3 bytes @ 0x2F
   844  000030                     	ds	3
   845  000033                     ___ftmul@cntr:
   846                           	opt stack 0
   847                           
   848                           ; 1 bytes @ 0x32
   849  000033                     	ds	1
   850  000034                     ___ftmul@sign:
   851                           	opt stack 0
   852                           
   853                           ; 1 bytes @ 0x33
   854  000034                     	ds	1
   855  000035                     ?___ftneg:
   856                           	opt stack 0
   857  000035                     ___ftneg@f1:
   858                           	opt stack 0
   859                           
   860                           ; 3 bytes @ 0x34
   861  000035                     	ds	3
   862  000038                     ?___ftadd:
   863                           	opt stack 0
   864  000038                     ___ftadd@f1:
   865                           	opt stack 0
   866                           
   867                           ; 3 bytes @ 0x37
   868  000038                     	ds	3
   869  00003B                     ___ftadd@f2:
   870                           	opt stack 0
   871                           
   872                           ; 3 bytes @ 0x3A
   873  00003B                     	ds	3
   874  00003E                     ??___ftadd:
   875  00003E                     _format_number$128:
   876                           	opt stack 0
   877                           
   878                           ; 2 bytes @ 0x3D
   879  00003E                     	ds	2
   880  000040                     format_number@padchar:
   881                           	opt stack 0
   882                           
   883                           ; 1 bytes @ 0x3F
   884  000040                     	ds	1
   885  000041                     format_number@di:
   886                           	opt stack 0
   887  000041                     ___ftadd@sign:
   888                           	opt stack 0
   889                           
   890                           ; 1 bytes @ 0x40
   891  000041                     	ds	1
   892  000042                     format_number@i:
   893                           	opt stack 0
   894  000042                     ___ftadd@exp2:
   895                           	opt stack 0
   896                           
   897                           ; 1 bytes @ 0x41
   898  000042                     	ds	1
   899  000043                     ___ftadd@exp1:
   900                           	opt stack 0
   901  000043                     format_xint32@x:
   902                           	opt stack 0
   903                           
   904                           ; 4 bytes @ 0x42
   905  000043                     	ds	1
   906  000044                     ?___ftsub:
   907                           	opt stack 0
   908  000044                     ?_eval_poly:
   909                           	opt stack 0
   910  000044                     ___ftsub@f1:
   911                           	opt stack 0
   912  000044                     eval_poly@x:
   913                           	opt stack 0
   914                           
   915                           ; 3 bytes @ 0x43
   916  000044                     	ds	3
   917  000047                     eval_poly@d:
   918                           	opt stack 0
   919  000047                     ___ftsub@f2:
   920                           	opt stack 0
   921                           
   922                           ; 3 bytes @ 0x46
   923  000047                     	ds	2
   924  000049                     eval_poly@n:
   925                           	opt stack 0
   926                           
   927                           ; 2 bytes @ 0x48
   928  000049                     	ds	1
   929  00004A                     
   930                           ; 0 bytes @ 0x49
   931  00004A                     	ds	1
   932  00004B                     ??_eval_poly:
   933                           
   934                           ; 0 bytes @ 0x4A
   935  00004B                     	ds	2
   936  00004D                     eval_poly@res:
   937                           	opt stack 0
   938                           
   939                           ; 3 bytes @ 0x4C
   940  00004D                     	ds	3
   941  000050                     ?_ldexp:
   942                           	opt stack 0
   943  000050                     ?_log:
   944                           	opt stack 0
   945  000050                     ldexp@value:
   946                           	opt stack 0
   947  000050                     log@x:
   948                           	opt stack 0
   949                           
   950                           ; 3 bytes @ 0x4F
   951  000050                     	ds	3
   952  000053                     ldexp@newexp:
   953                           	opt stack 0
   954  000053                     log@exponent:
   955                           	opt stack 0
   956                           
   957                           ; 2 bytes @ 0x52
   958  000053                     	ds	2
   959  000055                     ??_ldexp:
   960  000055                     ?_log10:
   961                           	opt stack 0
   962  000055                     log10@x:
   963                           	opt stack 0
   964                           
   965                           ; 3 bytes @ 0x54
   966  000055                     	ds	3
   967  000058                     _log10$923:
   968                           	opt stack 0
   969                           
   970                           ; 3 bytes @ 0x57
   971  000058                     	ds	3
   972  00005B                     ?___fttol:
   973                           	opt stack 0
   974  00005B                     ___fttol@f1:
   975                           	opt stack 0
   976                           
   977                           ; 3 bytes @ 0x5A
   978  00005B                     	ds	4
   979  00005F                     ??___fttol:
   980                           
   981                           ; 0 bytes @ 0x5E
   982  00005F                     	ds	5
   983  000064                     tblptru	equ	0xFF8
   984                           tblptrh	equ	0xFF7
   985                           tblptrl	equ	0xFF6
   986                           tablat	equ	0xFF5
   987                           postinc0	equ	0xFEE
   988                           wreg	equ	0xFE8
   989                           
   990                           ; 0 bytes @ 0x63
   991 ;;
   992 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   993 ;;
   994 ;; *************** function _main *****************
   995 ;; Defined at:
   996 ;;		line 115 in file "../../../src/LC-meter.c"
   997 ;; Parameters:    Size  Location     Type
   998 ;;		None
   999 ;; Auto vars:     Size  Location     Type
  1000 ;;		None
  1001 ;; Return value:  Size  Location     Type
  1002 ;;		None               void
  1003 ;; Registers used:
  1004 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1005 ;; Tracked objects:
  1006 ;;		On entry : 0/0
  1007 ;;		On exit  : 0/0
  1008 ;;		Unchanged: 0/0
  1009 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1010 ;;      Params:         0       0       0       0       0       0       0
  1011 ;;      Locals:         0       0       0       0       0       0       0
  1012 ;;      Temps:          0       0       0       0       0       0       0
  1013 ;;      Totals:         0       0       0       0       0       0       0
  1014 ;;Total ram usage:        0 bytes
  1015 ;; Hardware stack levels required when called:    8
  1016 ;; This function calls:
  1017 ;;		_calibrate
  1018 ;;		_delay10ms
  1019 ;;		_indicator
  1020 ;;		_measure_capacitance
  1021 ;;		_measure_inductance
  1022 ;;		_ser_init
  1023 ;;		_ser_puts
  1024 ;;		_timer2_init
  1025 ;; This function is called by:
  1026 ;;		Startup code after reset
  1027 ;; This function uses a non-reentrant model
  1028 ;;
  1029                           
  1030                           	psect	text0
  1031  001A56                     __ptext0:
  1032                           	opt stack 0
  1033  001A56                     _main:
  1034                           	opt stack 23
  1035                           
  1036                           ;incstack = 0
  1037  001A56  FFFF               	dw	65535
  1038                           
  1039                           ;LC-meter.c: 116: bres = msecpart = msecs = seconds = 0;
  1040  001A58  0E00               	movlw	0
  1041  001A5A  0100               	movlb	0	; () banked
  1042  001A5C  6FE1               	movwf	_seconds& (0+255),b	;volatile
  1043  001A5E  0E00               	movlw	0
  1044  001A60  6FE2               	movwf	(_seconds+1)& (0+255),b	;volatile
  1045  001A62  0E00               	movlw	0
  1046  001A64  6FE3               	movwf	(_seconds+2)& (0+255),b	;volatile
  1047  001A66  0E00               	movlw	0
  1048  001A68  6FE4               	movwf	(_seconds+3)& (0+255),b	;volatile
  1049  001A6A  C0E1  F064         	movff	_seconds,_msecs	;volatile
  1050  001A6E  C0E2  F065         	movff	_seconds+1,_msecs+1	;volatile
  1051  001A72  C0E3  F066         	movff	_seconds+2,_msecs+2	;volatile
  1052  001A76  C0E4  F067         	movff	_seconds+3,_msecs+3	;volatile
  1053  001A7A  C064  F0FD         	movff	_msecs,_msecpart	;volatile
  1054  001A7E  C065  F0FE         	movff	_msecs+1,_msecpart+1	;volatile
  1055  001A82  C0FD  F0FB         	movff	_msecpart,_bres	;volatile
  1056  001A86  C0FE  F0FC         	movff	_msecpart+1,_bres+1	;volatile
  1057                           
  1058                           ;LC-meter.c: 118: CCal = 1000;
  1059  001A8A  0E00               	movlw	0
  1060  001A8C  0100               	movlb	0	; () banked
  1061  001A8E  6FF8               	movwf	_CCal& (0+255),b
  1062  001A90  0E7A               	movlw	122
  1063  001A92  0100               	movlb	0	; () banked
  1064  001A94  6FF9               	movwf	(_CCal+1)& (0+255),b
  1065  001A96  0E44               	movlw	68
  1066  001A98  0100               	movlb	0	; () banked
  1067  001A9A  6FFA               	movwf	(_CCal+2)& (0+255),b
  1068                           
  1069                           ;LC-meter.c: 127: TRISA = 0b11001111;
  1070  001A9C  0ECF               	movlw	207
  1071  001A9E  6E92               	movwf	3986,c	;volatile
  1072                           
  1073                           ; BSR set to: 0
  1074                           ;LC-meter.c: 129: T0CS = 1;
  1075  001AA0  8AD5               	bsf	4053,5,c	;volatile
  1076                           
  1077                           ; BSR set to: 0
  1078                           ;LC-meter.c: 130: T0SE = 1;
  1079  001AA2  88D5               	bsf	4053,4,c	;volatile
  1080                           
  1081                           ; BSR set to: 0
  1082                           ;LC-meter.c: 141: nRBPU = 0;
  1083  001AA4  9EF1               	bcf	intcon2,7,c	;volatile
  1084                           
  1085                           ; BSR set to: 0
  1086                           ;LC-meter.c: 144: TRISC3 = 0;
  1087  001AA6  9694               	bcf	3988,3,c	;volatile
  1088                           
  1089                           ; BSR set to: 0
  1090                           ;LC-meter.c: 145: LATC3 = ((1) == 0);
  1091  001AA8  968B               	bcf	3979,3,c	;volatile
  1092                           
  1093                           ; BSR set to: 0
  1094                           ;LC-meter.c: 147: SSPEN = 0;
  1095  001AAA  9AC6               	bcf	4038,5,c	;volatile
  1096                           
  1097                           ; BSR set to: 0
  1098                           ;LC-meter.c: 152: timer2_init(0b000 | 0x80);
  1099  001AAC  0E80               	movlw	128
  1100  001AAE  ECA6  F011         	call	_timer2_init
  1101                           
  1102                           ;LC-meter.c: 157: TRISC1 = 0;
  1103  001AB2  9294               	bcf	3988,1,c	;volatile
  1104                           
  1105                           ;LC-meter.c: 160: TRISC3 = 0;
  1106  001AB4  9694               	bcf	3988,3,c	;volatile
  1107                           
  1108                           ;LC-meter.c: 162: TRISC0 = 1;
  1109  001AB6  8094               	bsf	3988,0,c	;volatile
  1110                           
  1111                           ;LC-meter.c: 163: TRISC2 = 1;
  1112  001AB8  8494               	bsf	3988,2,c	;volatile
  1113                           
  1114                           ;LC-meter.c: 173: TRISC4 = 1;
  1115  001ABA  8894               	bsf	3988,4,c	;volatile
  1116                           
  1117                           ;LC-meter.c: 174: TRISC5 = 0;
  1118  001ABC  9A94               	bcf	3988,5,c	;volatile
  1119                           
  1120                           ;LC-meter.c: 176: LATC5 = 0;
  1121  001ABE  9A8B               	bcf	3979,5,c	;volatile
  1122                           
  1123                           ;LC-meter.c: 177: delay10ms(50);
  1124  001AC0  0E00               	movlw	0
  1125  001AC2  6E16               	movwf	delay10ms@period_10ms+1,c
  1126  001AC4  0E32               	movlw	50
  1127  001AC6  6E15               	movwf	delay10ms@period_10ms,c
  1128  001AC8  EC22  F012         	call	_delay10ms	;wreg free
  1129                           
  1130                           ;LC-meter.c: 178: LATC5 = 1;
  1131  001ACC  8A8B               	bsf	3979,5,c	;volatile
  1132                           
  1133                           ;LC-meter.c: 179: delay10ms(50);
  1134  001ACE  0E00               	movlw	0
  1135  001AD0  6E16               	movwf	delay10ms@period_10ms+1,c
  1136  001AD2  0E32               	movlw	50
  1137  001AD4  6E15               	movwf	delay10ms@period_10ms,c
  1138  001AD6  EC22  F012         	call	_delay10ms	;wreg free
  1139                           
  1140                           ;LC-meter.c: 180: LATC5 = 0;
  1141  001ADA  9A8B               	bcf	3979,5,c	;volatile
  1142                           
  1143                           ;LC-meter.c: 181: delay10ms(50);
  1144  001ADC  0E00               	movlw	0
  1145  001ADE  6E16               	movwf	delay10ms@period_10ms+1,c
  1146  001AE0  0E32               	movlw	50
  1147  001AE2  6E15               	movwf	delay10ms@period_10ms,c
  1148  001AE4  EC22  F012         	call	_delay10ms	;wreg free
  1149                           
  1150                           ;LC-meter.c: 182: LATC5 = 1;
  1151  001AE8  8A8B               	bsf	3979,5,c	;volatile
  1152                           
  1153                           ;LC-meter.c: 183: delay10ms(50);
  1154  001AEA  0E00               	movlw	0
  1155  001AEC  6E16               	movwf	delay10ms@period_10ms+1,c
  1156  001AEE  0E32               	movlw	50
  1157  001AF0  6E15               	movwf	delay10ms@period_10ms,c
  1158  001AF2  EC22  F012         	call	_delay10ms	;wreg free
  1159                           
  1160                           ;LC-meter.c: 184: LATC5 = 0;
  1161  001AF6  9A8B               	bcf	3979,5,c	;volatile
  1162                           
  1163                           ;LC-meter.c: 187: ser_init();
  1164  001AF8  ECBB  F013         	call	_ser_init	;wreg free
  1165                           
  1166                           ;LC-meter.c: 192: TRISC &= ~0b01000000;
  1167  001AFC  9C94               	bcf	3988,6,c	;volatile
  1168                           
  1169                           ;LC-meter.c: 194: PEIE = 1;
  1170  001AFE  8CF2               	bsf	intcon,6,c	;volatile
  1171                           
  1172                           ;LC-meter.c: 195: GIE = 1;
  1173  001B00  8EF2               	bsf	intcon,7,c	;volatile
  1174                           
  1175                           ;LC-meter.c: 214: delay10ms(200);
  1176  001B02  0E00               	movlw	0
  1177  001B04  6E16               	movwf	delay10ms@period_10ms+1,c
  1178  001B06  0EC8               	movlw	200
  1179  001B08  6E15               	movwf	delay10ms@period_10ms,c
  1180  001B0A  EC22  F012         	call	_delay10ms	;wreg free
  1181                           
  1182                           ;LC-meter.c: 217: calibrate();
  1183  001B0E  EC07  F011         	call	_calibrate	;wreg free
  1184  001B12  D000               	goto	l3690
  1185  001B14                     l3690:
  1186  001B14  FFFF               	dw	65535	; assembler added errata NOP
  1187                           
  1188                           ;LC-meter.c: 230: ser_puts("...\r\n");
  1189  001B16  0E42               	movlw	low STR_1
  1190  001B18  6E10               	movwf	ser_puts@s,c
  1191  001B1A  0E06               	movlw	high STR_1
  1192  001B1C  6E11               	movwf	ser_puts@s+1,c
  1193  001B1E  EC84  F013         	call	_ser_puts	;wreg free
  1194                           
  1195                           ;LC-meter.c: 231: if(LATC4)
  1196  001B22  A88B               	btfss	3979,4,c	;volatile
  1197  001B24  D003               	goto	l3696
  1198                           
  1199                           ;LC-meter.c: 232: measure_capacitance();
  1200  001B26  EC5B  F005         	call	_measure_capacitance	;wreg free
  1201  001B2A  D004               	goto	l3698
  1202  001B2C                     l3696:
  1203  001B2C  FFFF               	dw	65535	; assembler added errata NOP
  1204                           
  1205                           ;LC-meter.c: 233: else
  1206                           ;LC-meter.c: 234: measure_inductance();
  1207  001B2E  EC33  F003         	call	_measure_inductance	;wreg free
  1208  001B32  D000               	goto	l3698
  1209  001B34                     l3698:
  1210  001B34  FFFF               	dw	65535	; assembler added errata NOP
  1211                           
  1212                           ;LC-meter.c: 236: indicator(1);
  1213  001B36  0E01               	movlw	1
  1214  001B38  EC25  F014         	call	_indicator
  1215                           
  1216                           ;LC-meter.c: 237: delay10ms(30);
  1217  001B3C  0E00               	movlw	0
  1218  001B3E  6E16               	movwf	delay10ms@period_10ms+1,c
  1219  001B40  0E1E               	movlw	30
  1220  001B42  6E15               	movwf	delay10ms@period_10ms,c
  1221  001B44  EC22  F012         	call	_delay10ms	;wreg free
  1222                           
  1223                           ;LC-meter.c: 238: indicator(0);
  1224  001B48  0E00               	movlw	0
  1225  001B4A  EC25  F014         	call	_indicator
  1226                           
  1227                           ;LC-meter.c: 239: delay10ms(20);
  1228  001B4E  0E00               	movlw	0
  1229  001B50  6E16               	movwf	delay10ms@period_10ms+1,c
  1230  001B52  0E14               	movlw	20
  1231  001B54  6E15               	movwf	delay10ms@period_10ms,c
  1232  001B56  EC22  F012         	call	_delay10ms	;wreg free
  1233                           
  1234                           ;LC-meter.c: 240: }
  1235  001B5A  D7DC               	goto	l3690
  1236  001B5C  EFC0  F000         	goto	start
  1237  001B60                     __end_of_main:
  1238                           	opt stack 0
  1239                           tblptru	equ	0xFF8
  1240                           tblptrh	equ	0xFF7
  1241                           tblptrl	equ	0xFF6
  1242                           tablat	equ	0xFF5
  1243                           intcon	equ	0xFF2
  1244                           intcon2	equ	0xFF1
  1245                           postinc0	equ	0xFEE
  1246                           wreg	equ	0xFE8
  1247                           
  1248 ;; *************** function _timer2_init *****************
  1249 ;; Defined at:
  1250 ;;		line 81 in file "../../../lib/timer.c"
  1251 ;; Parameters:    Size  Location     Type
  1252 ;;  ps_mode         1    wreg     unsigned char 
  1253 ;; Auto vars:     Size  Location     Type
  1254 ;;  ps_mode         1   15[COMRAM] unsigned char 
  1255 ;;  postscaler      1   17[COMRAM] unsigned char 
  1256 ;;  ps              1   16[COMRAM] unsigned char 
  1257 ;; Return value:  Size  Location     Type
  1258 ;;		None               void
  1259 ;; Registers used:
  1260 ;;		wreg, status,2, status,0
  1261 ;; Tracked objects:
  1262 ;;		On entry : 0/0
  1263 ;;		On exit  : 0/0
  1264 ;;		Unchanged: 0/0
  1265 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1266 ;;      Params:         0       0       0       0       0       0       0
  1267 ;;      Locals:         3       0       0       0       0       0       0
  1268 ;;      Temps:          1       0       0       0       0       0       0
  1269 ;;      Totals:         4       0       0       0       0       0       0
  1270 ;;Total ram usage:        4 bytes
  1271 ;; Hardware stack levels used:    1
  1272 ;; Hardware stack levels required when called:    1
  1273 ;; This function calls:
  1274 ;;		Nothing
  1275 ;; This function is called by:
  1276 ;;		_main
  1277 ;; This function uses a non-reentrant model
  1278 ;;
  1279                           
  1280                           	psect	text1
  1281  00234C                     __ptext1:
  1282                           	opt stack 0
  1283  00234C                     _timer2_init:
  1284                           	opt stack 29
  1285                           
  1286                           ;incstack = 0
  1287  00234C  FFFF               	dw	65535
  1288                           
  1289                           ;timer2_init@ps_mode stored from wreg
  1290  00234E  6E10               	movwf	timer2_init@ps_mode,c
  1291                           
  1292                           ;timer.c: 82: unsigned char ps = ps_mode & 0b1111;
  1293  002350  5010               	movf	timer2_init@ps_mode,w,c
  1294  002352  0B0F               	andlw	15
  1295  002354  6E11               	movwf	timer2_init@ps,c
  1296                           
  1297                           ;timer.c: 83: unsigned char postscaler = 0;
  1298  002356  0E00               	movlw	0
  1299  002358  6E12               	movwf	timer2_init@postscaler,c
  1300                           
  1301                           ;timer.c: 86: TOUTPS0 = postscaler & 1;
  1302  00235A  B012               	btfsc	timer2_init@postscaler,0,c
  1303  00235C  D002               	bra	u2715
  1304  00235E  96CA               	bcf	4042,3,c	;volatile
  1305  002360  D001               	bra	u2716
  1306  002362                     u2715:
  1307  002362  86CA               	bsf	4042,3,c	;volatile
  1308  002364                     u2716:
  1309                           
  1310                           ;timer.c: 87: TOUTPS1 = (postscaler >> 1) & 1;
  1311  002364  C012  F00F         	movff	timer2_init@postscaler,??_timer2_init
  1312  002368  90D8               	bcf	status,0,c
  1313  00236A  320F               	rrcf	??_timer2_init,f,c
  1314  00236C  300F               	rrcf	??_timer2_init,w,c
  1315  00236E  B0D8               	btfsc	status,0,c
  1316  002370  D002               	bra	u2725
  1317  002372  98CA               	bcf	4042,4,c	;volatile
  1318  002374  D001               	bra	u2726
  1319  002376                     u2725:
  1320  002376  88CA               	bsf	4042,4,c	;volatile
  1321  002378                     u2726:
  1322                           
  1323                           ;timer.c: 88: TOUTPS2 = (postscaler >> 2) & 1;
  1324  002378  C012  F00F         	movff	timer2_init@postscaler,??_timer2_init
  1325  00237C  90D8               	bcf	status,0,c
  1326  00237E  320F               	rrcf	??_timer2_init,f,c
  1327  002380  90D8               	bcf	status,0,c
  1328  002382  320F               	rrcf	??_timer2_init,f,c
  1329  002384  300F               	rrcf	??_timer2_init,w,c
  1330  002386  B0D8               	btfsc	status,0,c
  1331  002388  D002               	bra	u2735
  1332  00238A  9ACA               	bcf	4042,5,c	;volatile
  1333  00238C  D001               	bra	u2736
  1334  00238E                     u2735:
  1335  00238E  8ACA               	bsf	4042,5,c	;volatile
  1336  002390                     u2736:
  1337                           
  1338                           ;timer.c: 90: T2CKPS0 = (ps >> 1) & 1;
  1339  002390  C011  F00F         	movff	timer2_init@ps,??_timer2_init
  1340  002394  90D8               	bcf	status,0,c
  1341  002396  320F               	rrcf	??_timer2_init,f,c
  1342  002398  300F               	rrcf	??_timer2_init,w,c
  1343  00239A  B0D8               	btfsc	status,0,c
  1344  00239C  D002               	bra	u2745
  1345  00239E  90CA               	bcf	4042,0,c	;volatile
  1346  0023A0  D001               	bra	u2746
  1347  0023A2                     u2745:
  1348  0023A2  80CA               	bsf	4042,0,c	;volatile
  1349  0023A4                     u2746:
  1350                           
  1351                           ;timer.c: 91: T2CKPS1 = (ps >> 2) & 1;
  1352  0023A4  C011  F00F         	movff	timer2_init@ps,??_timer2_init
  1353  0023A8  90D8               	bcf	status,0,c
  1354  0023AA  320F               	rrcf	??_timer2_init,f,c
  1355  0023AC  90D8               	bcf	status,0,c
  1356  0023AE  320F               	rrcf	??_timer2_init,f,c
  1357  0023B0  300F               	rrcf	??_timer2_init,w,c
  1358  0023B2  B0D8               	btfsc	status,0,c
  1359  0023B4  D002               	bra	u2755
  1360  0023B6  92CA               	bcf	4042,1,c	;volatile
  1361  0023B8  D001               	bra	u2756
  1362  0023BA                     u2755:
  1363  0023BA  82CA               	bsf	4042,1,c	;volatile
  1364  0023BC                     u2756:
  1365                           
  1366                           ;timer.c: 93: TMR2 = 0;
  1367  0023BC  0E00               	movlw	0
  1368  0023BE  6ECC               	movwf	4044,c	;volatile
  1369                           
  1370                           ;timer.c: 95: TMR2ON = 1;
  1371  0023C0  84CA               	bsf	4042,2,c	;volatile
  1372                           
  1373                           ;timer.c: 97: TMR2IF = 0;
  1374  0023C2  929E               	bcf	3998,1,c	;volatile
  1375                           
  1376                           ;timer.c: 98: TMR2IE = !!(ps_mode & 0x80);
  1377  0023C4  AE10               	btfss	timer2_init@ps_mode,7,c
  1378  0023C6  D002               	goto	u2760
  1379  0023C8  829D               	bsf	3997,1,c	;volatile
  1380  0023CA  D002               	goto	l135
  1381  0023CC                     u2760:
  1382  0023CC  FFFF               	dw	65535	; assembler added errata NOP
  1383  0023CE  929D               	bcf	3997,1,c	;volatile
  1384  0023D0                     l135:
  1385  0023D0  FFFF               	dw	65535	; assembler added errata NOP
  1386  0023D2  0012               	return		;funcret
  1387  0023D4  FFFF               	dw	65535	; errata NOP
  1388  0023D6                     __end_of_timer2_init:
  1389                           	opt stack 0
  1390                           tblptru	equ	0xFF8
  1391                           tblptrh	equ	0xFF7
  1392                           tblptrl	equ	0xFF6
  1393                           tablat	equ	0xFF5
  1394                           intcon	equ	0xFF2
  1395                           intcon2	equ	0xFF1
  1396                           postinc0	equ	0xFEE
  1397                           wreg	equ	0xFE8
  1398                           status	equ	0xFD8
  1399                           
  1400 ;; *************** function _ser_init *****************
  1401 ;; Defined at:
  1402 ;;		line 125 in file "../../../lib/ser.c"
  1403 ;; Parameters:    Size  Location     Type
  1404 ;;		None
  1405 ;; Auto vars:     Size  Location     Type
  1406 ;;		None
  1407 ;; Return value:  Size  Location     Type
  1408 ;;		None               void
  1409 ;; Registers used:
  1410 ;;		wreg, status,2
  1411 ;; Tracked objects:
  1412 ;;		On entry : 0/0
  1413 ;;		On exit  : 0/0
  1414 ;;		Unchanged: 0/0
  1415 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1416 ;;      Params:         0       0       0       0       0       0       0
  1417 ;;      Locals:         0       0       0       0       0       0       0
  1418 ;;      Temps:          0       0       0       0       0       0       0
  1419 ;;      Totals:         0       0       0       0       0       0       0
  1420 ;;Total ram usage:        0 bytes
  1421 ;; Hardware stack levels used:    1
  1422 ;; Hardware stack levels required when called:    1
  1423 ;; This function calls:
  1424 ;;		Nothing
  1425 ;; This function is called by:
  1426 ;;		_main
  1427 ;; This function uses a non-reentrant model
  1428 ;;
  1429                           
  1430                           	psect	text2
  1431  002776                     __ptext2:
  1432                           	opt stack 0
  1433  002776                     _ser_init:
  1434                           	opt stack 29
  1435                           
  1436                           ;incstack = 0
  1437  002776  FFFF               	dw	65535
  1438                           
  1439                           ;ser.c: 128: TRISC6 = 1;
  1440  002778  8C94               	bsf	3988,6,c	;volatile
  1441                           
  1442                           ;ser.c: 129: LATC7 = 1;
  1443  00277A  8E8B               	bsf	3979,7,c	;volatile
  1444                           
  1445                           ;ser.c: 131: BRGH = 1;
  1446  00277C  84AC               	bsf	4012,2,c	;volatile
  1447                           
  1448                           ;ser.c: 136: SPBRG = ser_brg;
  1449  00277E  C070  FFAF         	movff	_ser_brg,4015	;volatile
  1450                           
  1451                           ;ser.c: 139: TX9 = 0;
  1452  002782  9CAC               	bcf	4012,6,c	;volatile
  1453                           
  1454                           ;ser.c: 140: RX9 = 0;
  1455  002784  9CAB               	bcf	4011,6,c	;volatile
  1456                           
  1457                           ;ser.c: 142: SYNC = 0;
  1458  002786  98AC               	bcf	4012,4,c	;volatile
  1459                           
  1460                           ;ser.c: 143: SPEN = 1;
  1461  002788  8EAB               	bsf	4011,7,c	;volatile
  1462                           
  1463                           ;ser.c: 144: CREN = 1;
  1464  00278A  88AB               	bsf	4011,4,c	;volatile
  1465                           
  1466                           ;ser.c: 145: TXIE = 0;
  1467  00278C  989D               	bcf	3997,4,c	;volatile
  1468                           
  1469                           ;ser.c: 147: TXEN = 1;
  1470  00278E  8AAC               	bsf	4012,5,c	;volatile
  1471                           
  1472                           ;ser.c: 148: PEIE = 1;
  1473  002790  8CF2               	bsf	intcon,6,c	;volatile
  1474                           
  1475                           ;ser.c: 150: rxiptr = rxoptr = txiptr = txoptr = 0;
  1476  002792  0E00               	movlw	0
  1477  002794  6E6C               	movwf	_txoptr,c	;volatile
  1478  002796  C06C  F06B         	movff	_txoptr,_txiptr	;volatile
  1479  00279A  C06B  F069         	movff	_txiptr,_rxoptr	;volatile
  1480  00279E  C069  F068         	movff	_rxoptr,_rxiptr	;volatile
  1481  0027A2  0012               	return		;funcret
  1482  0027A4  FFFF               	dw	65535	; errata NOP
  1483  0027A6                     __end_of_ser_init:
  1484                           	opt stack 0
  1485                           tblptru	equ	0xFF8
  1486                           tblptrh	equ	0xFF7
  1487                           tblptrl	equ	0xFF6
  1488                           tablat	equ	0xFF5
  1489                           intcon	equ	0xFF2
  1490                           intcon2	equ	0xFF1
  1491                           postinc0	equ	0xFEE
  1492                           wreg	equ	0xFE8
  1493                           status	equ	0xFD8
  1494                           
  1495 ;; *************** function _measure_inductance *****************
  1496 ;; Defined at:
  1497 ;;		line 470 in file "../../../src/LC-meter.c"
  1498 ;; Parameters:    Size  Location     Type
  1499 ;;		None
  1500 ;; Auto vars:     Size  Location     Type
  1501 ;;  Lin             3   36[BANK0 ] unsigned char 
  1502 ;;  denominator     3    9[BANK0 ] unsigned char 
  1503 ;;  numerator       3    6[BANK0 ] unsigned char 
  1504 ;;  var             2   34[BANK0 ] unsigned short 
  1505 ;;  unit            1   24[BANK0 ] unsigned char 
  1506 ;; Return value:  Size  Location     Type
  1507 ;;		None               void
  1508 ;; Registers used:
  1509 ;;		wreg, status,2, status,0, cstack
  1510 ;; Tracked objects:
  1511 ;;		On entry : 0/0
  1512 ;;		On exit  : 0/0
  1513 ;;		Unchanged: 0/0
  1514 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1515 ;;      Params:         0       0       0       0       0       0       0
  1516 ;;      Locals:         0      33       0       0       0       0       0
  1517 ;;      Temps:          0       0       0       0       0       0       0
  1518 ;;      Totals:         0      33       0       0       0       0       0
  1519 ;;Total ram usage:       33 bytes
  1520 ;; Hardware stack levels used:    1
  1521 ;; Hardware stack levels required when called:    3
  1522 ;; This function calls:
  1523 ;;		___ftadd
  1524 ;;		___ftdiv
  1525 ;;		___ftge
  1526 ;;		___ftmul
  1527 ;;		___ftneg
  1528 ;;		___fttol
  1529 ;;		___lwtoft
  1530 ;;		_measure_freq
  1531 ;;		_print_reading
  1532 ;;		_print_unit
  1533 ;; This function is called by:
  1534 ;;		_main
  1535 ;; This function uses a non-reentrant model
  1536 ;;
  1537                           
  1538                           	psect	text3
  1539  000666                     __ptext3:
  1540                           	opt stack 0
  1541  000666                     _measure_inductance:
  1542                           	opt stack 27
  1543                           
  1544                           ;incstack = 0
  1545  000666  FFFF               	dw	65535
  1546                           
  1547                           ;LC-meter.c: 471: unsigned char unit;
  1548                           ;LC-meter.c: 472: unsigned short int var;
  1549                           ;LC-meter.c: 474: double Lin, numerator, denominator;
  1550                           ;LC-meter.c: 480: var = measure_freq();
  1551  000668  ECFF  F00F         	call	_measure_freq	;wreg free
  1552  00066C  C00F  F0A2         	movff	?_measure_freq,measure_inductance@var
  1553  000670  C010  F0A3         	movff	?_measure_freq+1,measure_inductance@var+1
  1554                           
  1555                           ;LC-meter.c: 482: F3 = (double)var;
  1556  000674  C0A2  F019         	movff	measure_inductance@var,___lwtoft@c
  1557  000678  C0A3  F01A         	movff	measure_inductance@var+1,___lwtoft@c+1
  1558  00067C  ECEA  F013         	call	___lwtoft	;wreg free
  1559  000680  C019  F0EC         	movff	?___lwtoft,_F3
  1560  000684  C01A  F0ED         	movff	?___lwtoft+1,_F3+1
  1561  000688  C01B  F0EE         	movff	?___lwtoft+2,_F3+2
  1562                           
  1563                           ;LC-meter.c: 483: if(F3 > F1)
  1564  00068C  C0F5  F00F         	movff	_F1,___ftge@ff1
  1565  000690  C0F6  F010         	movff	_F1+1,___ftge@ff1+1
  1566  000694  C0F7  F011         	movff	_F1+2,___ftge@ff1+2
  1567  000698  C0EC  F012         	movff	_F3,___ftge@ff2
  1568  00069C  C0ED  F013         	movff	_F3+1,___ftge@ff2+1
  1569  0006A0  C0EE  F014         	movff	_F3+2,___ftge@ff2+2
  1570  0006A4  ECB6  F010         	call	___ftge	;wreg free
  1571  0006A8  B0D8               	btfsc	status,0,c
  1572  0006AA  D007               	goto	l3584
  1573                           
  1574                           ;LC-meter.c: 484: F3 = F1;
  1575  0006AC  C0F5  F0EC         	movff	_F1,_F3
  1576  0006B0  C0F6  F0ED         	movff	_F1+1,_F3+1
  1577  0006B4  C0F7  F0EE         	movff	_F1+2,_F3+2
  1578  0006B8  D000               	goto	l3584
  1579  0006BA                     l3584:
  1580  0006BA  FFFF               	dw	65535	; assembler added errata NOP
  1581                           
  1582                           ;LC-meter.c: 486: numerator = ((F1 * F1) - (F3 * F3)) * ((F1 * F1) - (F2 - F2)) * (100 *
      +                           100);
  1583  0006BC  C0E9  F03B         	movff	_F2,___ftadd@f2
  1584  0006C0  C0EA  F03C         	movff	_F2+1,___ftadd@f2+1
  1585  0006C4  C0EB  F03D         	movff	_F2+2,___ftadd@f2+2
  1586  0006C8  C0E9  F035         	movff	_F2,___ftneg@f1
  1587  0006CC  C0EA  F036         	movff	_F2+1,___ftneg@f1+1
  1588  0006D0  C0EB  F037         	movff	_F2+2,___ftneg@f1+2
  1589  0006D4  EC00  F014         	call	___ftneg	;wreg free
  1590  0006D8  C035  F038         	movff	?___ftneg,___ftadd@f1
  1591  0006DC  C036  F039         	movff	?___ftneg+1,___ftadd@f1+1
  1592  0006E0  C037  F03A         	movff	?___ftneg+2,___ftadd@f1+2
  1593  0006E4  EC5C  F008         	call	___ftadd	;wreg free
  1594  0006E8  C038  F08C         	movff	?___ftadd,_measure_inductance$916
  1595  0006EC  C039  F08D         	movff	?___ftadd+1,_measure_inductance$916+1
  1596  0006F0  C03A  F08E         	movff	?___ftadd+2,_measure_inductance$916+2
  1597                           
  1598                           ;LC-meter.c: 486: numerator = ((F1 * F1) - (F3 * F3)) * ((F1 * F1) - (F2 - F2)) * (100 *
      +                           100);
  1599  0006F4  C08C  F035         	movff	_measure_inductance$916,___ftneg@f1
  1600  0006F8  C08D  F036         	movff	_measure_inductance$916+1,___ftneg@f1+1
  1601  0006FC  C08E  F037         	movff	_measure_inductance$916+2,___ftneg@f1+2
  1602  000700  EC00  F014         	call	___ftneg	;wreg free
  1603  000704  C035  F03B         	movff	?___ftneg,___ftadd@f2
  1604  000708  C036  F03C         	movff	?___ftneg+1,___ftadd@f2+1
  1605  00070C  C037  F03D         	movff	?___ftneg+2,___ftadd@f2+2
  1606  000710  C0F5  F029         	movff	_F1,___ftmul@f2
  1607  000714  C0F6  F02A         	movff	_F1+1,___ftmul@f2+1
  1608  000718  C0F7  F02B         	movff	_F1+2,___ftmul@f2+2
  1609  00071C  C0F5  F026         	movff	_F1,___ftmul@f1
  1610  000720  C0F6  F027         	movff	_F1+1,___ftmul@f1+1
  1611  000724  C0F7  F028         	movff	_F1+2,___ftmul@f1+2
  1612  000728  ECA3  F00C         	call	___ftmul	;wreg free
  1613  00072C  C026  F038         	movff	?___ftmul,___ftadd@f1
  1614  000730  C027  F039         	movff	?___ftmul+1,___ftadd@f1+1
  1615  000734  C028  F03A         	movff	?___ftmul+2,___ftadd@f1+2
  1616  000738  EC5C  F008         	call	___ftadd	;wreg free
  1617  00073C  C038  F099         	movff	?___ftadd,_measure_inductance$917
  1618  000740  C039  F09A         	movff	?___ftadd+1,_measure_inductance$917+1
  1619  000744  C03A  F09B         	movff	?___ftadd+2,_measure_inductance$917+2
  1620                           
  1621                           ;LC-meter.c: 486: numerator = ((F1 * F1) - (F3 * F3)) * ((F1 * F1) - (F2 - F2)) * (100 *
      +                           100);
  1622  000748  C0EC  F029         	movff	_F3,___ftmul@f2
  1623  00074C  C0ED  F02A         	movff	_F3+1,___ftmul@f2+1
  1624  000750  C0EE  F02B         	movff	_F3+2,___ftmul@f2+2
  1625  000754  C0EC  F026         	movff	_F3,___ftmul@f1
  1626  000758  C0ED  F027         	movff	_F3+1,___ftmul@f1+1
  1627  00075C  C0EE  F028         	movff	_F3+2,___ftmul@f1+2
  1628  000760  ECA3  F00C         	call	___ftmul	;wreg free
  1629  000764  C026  F035         	movff	?___ftmul,___ftneg@f1
  1630  000768  C027  F036         	movff	?___ftmul+1,___ftneg@f1+1
  1631  00076C  C028  F037         	movff	?___ftmul+2,___ftneg@f1+2
  1632  000770  EC00  F014         	call	___ftneg	;wreg free
  1633  000774  C035  F03B         	movff	?___ftneg,___ftadd@f2
  1634  000778  C036  F03C         	movff	?___ftneg+1,___ftadd@f2+1
  1635  00077C  C037  F03D         	movff	?___ftneg+2,___ftadd@f2+2
  1636  000780  C0F5  F029         	movff	_F1,___ftmul@f2
  1637  000784  C0F6  F02A         	movff	_F1+1,___ftmul@f2+1
  1638  000788  C0F7  F02B         	movff	_F1+2,___ftmul@f2+2
  1639  00078C  C0F5  F026         	movff	_F1,___ftmul@f1
  1640  000790  C0F6  F027         	movff	_F1+1,___ftmul@f1+1
  1641  000794  C0F7  F028         	movff	_F1+2,___ftmul@f1+2
  1642  000798  ECA3  F00C         	call	___ftmul	;wreg free
  1643  00079C  C026  F038         	movff	?___ftmul,___ftadd@f1
  1644  0007A0  C027  F039         	movff	?___ftmul+1,___ftadd@f1+1
  1645  0007A4  C028  F03A         	movff	?___ftmul+2,___ftadd@f1+2
  1646  0007A8  EC5C  F008         	call	___ftadd	;wreg free
  1647  0007AC  C038  F09C         	movff	?___ftadd,_measure_inductance$918
  1648  0007B0  C039  F09D         	movff	?___ftadd+1,_measure_inductance$918+1
  1649  0007B4  C03A  F09E         	movff	?___ftadd+2,_measure_inductance$918+2
  1650                           
  1651                           ;LC-meter.c: 486: numerator = ((F1 * F1) - (F3 * F3)) * ((F1 * F1) - (F2 - F2)) * (100 *
      +                           100);
  1652  0007B8  C099  F029         	movff	_measure_inductance$917,___ftmul@f2
  1653  0007BC  C09A  F02A         	movff	_measure_inductance$917+1,___ftmul@f2+1
  1654  0007C0  C09B  F02B         	movff	_measure_inductance$917+2,___ftmul@f2+2
  1655  0007C4  C09C  F026         	movff	_measure_inductance$918,___ftmul@f1
  1656  0007C8  C09D  F027         	movff	_measure_inductance$918+1,___ftmul@f1+1
  1657  0007CC  C09E  F028         	movff	_measure_inductance$918+2,___ftmul@f1+2
  1658  0007D0  ECA3  F00C         	call	___ftmul	;wreg free
  1659  0007D4  C026  F09F         	movff	?___ftmul,_measure_inductance$919
  1660  0007D8  C027  F0A0         	movff	?___ftmul+1,_measure_inductance$919+1
  1661  0007DC  C028  F0A1         	movff	?___ftmul+2,_measure_inductance$919+2
  1662                           
  1663                           ;LC-meter.c: 486: numerator = ((F1 * F1) - (F3 * F3)) * ((F1 * F1) - (F2 - F2)) * (100 *
      +                           100);
  1664  0007E0  C09F  F026         	movff	_measure_inductance$919,___ftmul@f1
  1665  0007E4  C0A0  F027         	movff	_measure_inductance$919+1,___ftmul@f1+1
  1666  0007E8  C0A1  F028         	movff	_measure_inductance$919+2,___ftmul@f1+2
  1667  0007EC  0E40               	movlw	64
  1668  0007EE  6E29               	movwf	___ftmul@f2,c
  1669  0007F0  0E1C               	movlw	28
  1670  0007F2  6E2A               	movwf	___ftmul@f2+1,c
  1671  0007F4  0E46               	movlw	70
  1672  0007F6  6E2B               	movwf	___ftmul@f2+2,c
  1673  0007F8  ECA3  F00C         	call	___ftmul	;wreg free
  1674  0007FC  C026  F086         	movff	?___ftmul,measure_inductance@numerator
  1675  000800  C027  F087         	movff	?___ftmul+1,measure_inductance@numerator+1
  1676  000804  C028  F088         	movff	?___ftmul+2,measure_inductance@numerator+2
  1677                           
  1678                           ;LC-meter.c: 488: denominator = 4 * 3.14159265358979323846l * 3.14159265358979323846l * 
      +                          F1 * F1 * F2 * F2 * F3 * F3 * CCal;
  1679  000808  C0F5  F029         	movff	_F1,___ftmul@f2
  1680  00080C  C0F6  F02A         	movff	_F1+1,___ftmul@f2+1
  1681  000810  C0F7  F02B         	movff	_F1+2,___ftmul@f2+2
  1682  000814  C0F5  F026         	movff	_F1,___ftmul@f1
  1683  000818  C0F6  F027         	movff	_F1+1,___ftmul@f1+1
  1684  00081C  C0F7  F028         	movff	_F1+2,___ftmul@f1+2
  1685  000820  ECA3  F00C         	call	___ftmul	;wreg free
  1686  000824  C026  F08F         	movff	?___ftmul,_measure_inductance$920
  1687  000828  C027  F090         	movff	?___ftmul+1,_measure_inductance$920+1
  1688  00082C  C028  F091         	movff	?___ftmul+2,_measure_inductance$920+2
  1689                           
  1690                           ;LC-meter.c: 488: denominator = 4 * 3.14159265358979323846l * 3.14159265358979323846l * 
      +                          F1 * F1 * F2 * F2 * F3 * F3 * CCal;
  1691  000830  C0E9  F029         	movff	_F2,___ftmul@f2
  1692  000834  C0EA  F02A         	movff	_F2+1,___ftmul@f2+1
  1693  000838  C0EB  F02B         	movff	_F2+2,___ftmul@f2+2
  1694  00083C  C08F  F026         	movff	_measure_inductance$920,___ftmul@f1
  1695  000840  C090  F027         	movff	_measure_inductance$920+1,___ftmul@f1+1
  1696  000844  C091  F028         	movff	_measure_inductance$920+2,___ftmul@f1+2
  1697  000848  ECA3  F00C         	call	___ftmul	;wreg free
  1698  00084C  C026  F099         	movff	?___ftmul,_measure_inductance$917
  1699  000850  C027  F09A         	movff	?___ftmul+1,_measure_inductance$917+1
  1700  000854  C028  F09B         	movff	?___ftmul+2,_measure_inductance$917+2
  1701                           
  1702                           ;LC-meter.c: 488: denominator = 4 * 3.14159265358979323846l * 3.14159265358979323846l * 
      +                          F1 * F1 * F2 * F2 * F3 * F3 * CCal;
  1703  000858  C0E9  F029         	movff	_F2,___ftmul@f2
  1704  00085C  C0EA  F02A         	movff	_F2+1,___ftmul@f2+1
  1705  000860  C0EB  F02B         	movff	_F2+2,___ftmul@f2+2
  1706  000864  C099  F026         	movff	_measure_inductance$917,___ftmul@f1
  1707  000868  C09A  F027         	movff	_measure_inductance$917+1,___ftmul@f1+1
  1708  00086C  C09B  F028         	movff	_measure_inductance$917+2,___ftmul@f1+2
  1709  000870  ECA3  F00C         	call	___ftmul	;wreg free
  1710  000874  C026  F09C         	movff	?___ftmul,_measure_inductance$918
  1711  000878  C027  F09D         	movff	?___ftmul+1,_measure_inductance$918+1
  1712  00087C  C028  F09E         	movff	?___ftmul+2,_measure_inductance$918+2
  1713                           
  1714                           ;LC-meter.c: 488: denominator = 4 * 3.14159265358979323846l * 3.14159265358979323846l * 
      +                          F1 * F1 * F2 * F2 * F3 * F3 * CCal;
  1715  000880  C0EC  F029         	movff	_F3,___ftmul@f2
  1716  000884  C0ED  F02A         	movff	_F3+1,___ftmul@f2+1
  1717  000888  C0EE  F02B         	movff	_F3+2,___ftmul@f2+2
  1718  00088C  C09C  F026         	movff	_measure_inductance$918,___ftmul@f1
  1719  000890  C09D  F027         	movff	_measure_inductance$918+1,___ftmul@f1+1
  1720  000894  C09E  F028         	movff	_measure_inductance$918+2,___ftmul@f1+2
  1721  000898  ECA3  F00C         	call	___ftmul	;wreg free
  1722  00089C  C026  F09F         	movff	?___ftmul,_measure_inductance$919
  1723  0008A0  C027  F0A0         	movff	?___ftmul+1,_measure_inductance$919+1
  1724  0008A4  C028  F0A1         	movff	?___ftmul+2,_measure_inductance$919+2
  1725                           
  1726                           ;LC-meter.c: 488: denominator = 4 * 3.14159265358979323846l * 3.14159265358979323846l * 
      +                          F1 * F1 * F2 * F2 * F3 * F3 * CCal;
  1727  0008A8  C0EC  F029         	movff	_F3,___ftmul@f2
  1728  0008AC  C0ED  F02A         	movff	_F3+1,___ftmul@f2+1
  1729  0008B0  C0EE  F02B         	movff	_F3+2,___ftmul@f2+2
  1730  0008B4  C09F  F026         	movff	_measure_inductance$919,___ftmul@f1
  1731  0008B8  C0A0  F027         	movff	_measure_inductance$919+1,___ftmul@f1+1
  1732  0008BC  C0A1  F028         	movff	_measure_inductance$919+2,___ftmul@f1+2
  1733  0008C0  ECA3  F00C         	call	___ftmul	;wreg free
  1734  0008C4  C026  F092         	movff	?___ftmul,_measure_inductance$921
  1735  0008C8  C027  F093         	movff	?___ftmul+1,_measure_inductance$921+1
  1736  0008CC  C028  F094         	movff	?___ftmul+2,_measure_inductance$921+2
  1737                           
  1738                           ;LC-meter.c: 488: denominator = 4 * 3.14159265358979323846l * 3.14159265358979323846l * 
      +                          F1 * F1 * F2 * F2 * F3 * F3 * CCal;
  1739  0008D0  C0F8  F029         	movff	_CCal,___ftmul@f2
  1740  0008D4  C0F9  F02A         	movff	_CCal+1,___ftmul@f2+1
  1741  0008D8  C0FA  F02B         	movff	_CCal+2,___ftmul@f2+2
  1742  0008DC  C092  F026         	movff	_measure_inductance$921,___ftmul@f1
  1743  0008E0  C093  F027         	movff	_measure_inductance$921+1,___ftmul@f1+1
  1744  0008E4  C094  F028         	movff	_measure_inductance$921+2,___ftmul@f1+2
  1745  0008E8  ECA3  F00C         	call	___ftmul	;wreg free
  1746  0008EC  C026  F095         	movff	?___ftmul,_measure_inductance$922
  1747  0008F0  C027  F096         	movff	?___ftmul+1,_measure_inductance$922+1
  1748  0008F4  C028  F097         	movff	?___ftmul+2,_measure_inductance$922+2
  1749                           
  1750                           ;LC-meter.c: 488: denominator = 4 * 3.14159265358979323846l * 3.14159265358979323846l * 
      +                          F1 * F1 * F2 * F2 * F3 * F3 * CCal;
  1751  0008F8  C095  F026         	movff	_measure_inductance$922,___ftmul@f1
  1752  0008FC  C096  F027         	movff	_measure_inductance$922+1,___ftmul@f1+1
  1753  000900  C097  F028         	movff	_measure_inductance$922+2,___ftmul@f1+2
  1754  000904  0EEA               	movlw	234
  1755  000906  6E29               	movwf	___ftmul@f2,c
  1756  000908  0E1D               	movlw	29
  1757  00090A  6E2A               	movwf	___ftmul@f2+1,c
  1758  00090C  0E42               	movlw	66
  1759  00090E  6E2B               	movwf	___ftmul@f2+2,c
  1760  000910  ECA3  F00C         	call	___ftmul	;wreg free
  1761  000914  C026  F089         	movff	?___ftmul,measure_inductance@denominator
  1762  000918  C027  F08A         	movff	?___ftmul+1,measure_inductance@denominator+1
  1763  00091C  C028  F08B         	movff	?___ftmul+2,measure_inductance@denominator+2
  1764                           
  1765                           ;LC-meter.c: 490: Lin = (numerator / denominator) * 1e+15l;
  1766  000920  C089  F01A         	movff	measure_inductance@denominator,___ftdiv@f2
  1767  000924  C08A  F01B         	movff	measure_inductance@denominator+1,___ftdiv@f2+1
  1768  000928  C08B  F01C         	movff	measure_inductance@denominator+2,___ftdiv@f2+2
  1769  00092C  C086  F017         	movff	measure_inductance@numerator,___ftdiv@f1
  1770  000930  C087  F018         	movff	measure_inductance@numerator+1,___ftdiv@f1+1
  1771  000934  C088  F019         	movff	measure_inductance@numerator+2,___ftdiv@f1+2
  1772  000938  EC30  F00E         	call	___ftdiv	;wreg free
  1773  00093C  C017  F026         	movff	?___ftdiv,___ftmul@f1
  1774  000940  C018  F027         	movff	?___ftdiv+1,___ftmul@f1+1
  1775  000944  C019  F028         	movff	?___ftdiv+2,___ftmul@f1+2
  1776  000948  0E60               	movlw	96
  1777  00094A  6E29               	movwf	___ftmul@f2,c
  1778  00094C  0E63               	movlw	99
  1779  00094E  6E2A               	movwf	___ftmul@f2+1,c
  1780  000950  0E58               	movlw	88
  1781  000952  6E2B               	movwf	___ftmul@f2+2,c
  1782  000954  ECA3  F00C         	call	___ftmul	;wreg free
  1783  000958  C026  F0A4         	movff	?___ftmul,measure_inductance@Lin
  1784  00095C  C027  F0A5         	movff	?___ftmul+1,measure_inductance@Lin+1
  1785  000960  C028  F0A6         	movff	?___ftmul+2,measure_inductance@Lin+2
  1786                           
  1787                           ;LC-meter.c: 492: if(Lin > 999) {
  1788  000964  0EC0               	movlw	192
  1789  000966  6E0F               	movwf	___ftge@ff1,c
  1790  000968  0E79               	movlw	121
  1791  00096A  6E10               	movwf	___ftge@ff1+1,c
  1792  00096C  0E44               	movlw	68
  1793  00096E  6E11               	movwf	___ftge@ff1+2,c
  1794  000970  C0A4  F012         	movff	measure_inductance@Lin,___ftge@ff2
  1795  000974  C0A5  F013         	movff	measure_inductance@Lin+1,___ftge@ff2+1
  1796  000978  C0A6  F014         	movff	measure_inductance@Lin+2,___ftge@ff2+2
  1797  00097C  ECB6  F010         	call	___ftge	;wreg free
  1798  000980  B0D8               	btfsc	status,0,c
  1799  000982  D066               	goto	l3602
  1800                           
  1801                           ;LC-meter.c: 493: if(Lin > (999e+03l)) {
  1802  000984  0EE6               	movlw	230
  1803  000986  6E0F               	movwf	___ftge@ff1,c
  1804  000988  0E73               	movlw	115
  1805  00098A  6E10               	movwf	___ftge@ff1+1,c
  1806  00098C  0E49               	movlw	73
  1807  00098E  6E11               	movwf	___ftge@ff1+2,c
  1808  000990  C0A4  F012         	movff	measure_inductance@Lin,___ftge@ff2
  1809  000994  C0A5  F013         	movff	measure_inductance@Lin+1,___ftge@ff2+1
  1810  000998  C0A6  F014         	movff	measure_inductance@Lin+2,___ftge@ff2+2
  1811  00099C  ECB6  F010         	call	___ftge	;wreg free
  1812  0009A0  B0D8               	btfsc	status,0,c
  1813  0009A2  D03E               	goto	l3598
  1814                           
  1815                           ;LC-meter.c: 494: if(Lin > (999e+06l)) {
  1816  0009A4  0E2E               	movlw	46
  1817  0009A6  6E0F               	movwf	___ftge@ff1,c
  1818  0009A8  0E6E               	movlw	110
  1819  0009AA  6E10               	movwf	___ftge@ff1+1,c
  1820  0009AC  0E4E               	movlw	78
  1821  0009AE  6E11               	movwf	___ftge@ff1+2,c
  1822  0009B0  C0A4  F012         	movff	measure_inductance@Lin,___ftge@ff2
  1823  0009B4  C0A5  F013         	movff	measure_inductance@Lin+1,___ftge@ff2+1
  1824  0009B8  C0A6  F014         	movff	measure_inductance@Lin+2,___ftge@ff2+2
  1825  0009BC  ECB6  F010         	call	___ftge	;wreg free
  1826  0009C0  B0D8               	btfsc	status,0,c
  1827  0009C2  D016               	goto	l3594
  1828                           
  1829                           ;LC-meter.c: 495: Lin = Lin / (1e+09l);
  1830  0009C4  C0A4  F017         	movff	measure_inductance@Lin,___ftdiv@f1
  1831  0009C8  C0A5  F018         	movff	measure_inductance@Lin+1,___ftdiv@f1+1
  1832  0009CC  C0A6  F019         	movff	measure_inductance@Lin+2,___ftdiv@f1+2
  1833  0009D0  0E6B               	movlw	107
  1834  0009D2  6E1A               	movwf	___ftdiv@f2,c
  1835  0009D4  0E6E               	movlw	110
  1836  0009D6  6E1B               	movwf	___ftdiv@f2+1,c
  1837  0009D8  0E4E               	movlw	78
  1838  0009DA  6E1C               	movwf	___ftdiv@f2+2,c
  1839  0009DC  EC30  F00E         	call	___ftdiv	;wreg free
  1840  0009E0  C017  F0A4         	movff	?___ftdiv,measure_inductance@Lin
  1841  0009E4  C018  F0A5         	movff	?___ftdiv+1,measure_inductance@Lin+1
  1842  0009E8  C019  F0A6         	movff	?___ftdiv+2,measure_inductance@Lin+2
  1843                           
  1844                           ;LC-meter.c: 496: unit = 0;
  1845  0009EC  0E00               	movlw	0
  1846  0009EE  D032               	goto	L3
  1847  0009F0                     l3594:
  1848  0009F0  FFFF               	dw	65535	; assembler added errata NOP
  1849                           
  1850                           ;LC-meter.c: 498: Lin = Lin / (1e+06l);
  1851  0009F2  C0A4  F017         	movff	measure_inductance@Lin,___ftdiv@f1
  1852  0009F6  C0A5  F018         	movff	measure_inductance@Lin+1,___ftdiv@f1+1
  1853  0009FA  C0A6  F019         	movff	measure_inductance@Lin+2,___ftdiv@f1+2
  1854  0009FE  0E24               	movlw	36
  1855  000A00  6E1A               	movwf	___ftdiv@f2,c
  1856  000A02  0E74               	movlw	116
  1857  000A04  6E1B               	movwf	___ftdiv@f2+1,c
  1858  000A06  0E49               	movlw	73
  1859  000A08  6E1C               	movwf	___ftdiv@f2+2,c
  1860  000A0A  EC30  F00E         	call	___ftdiv	;wreg free
  1861  000A0E  C017  F0A4         	movff	?___ftdiv,measure_inductance@Lin
  1862  000A12  C018  F0A5         	movff	?___ftdiv+1,measure_inductance@Lin+1
  1863  000A16  C019  F0A6         	movff	?___ftdiv+2,measure_inductance@Lin+2
  1864                           
  1865                           ;LC-meter.c: 499: unit = 1;
  1866  000A1A  0E01               	movlw	1
  1867  000A1C  D01B               	goto	L3
  1868                           
  1869                           ; BSR set to: 0
  1870                           ;LC-meter.c: 500: }
  1871                           ;LC-meter.c: 501: } else {
  1872  000A1E  D01E               	goto	l3604
  1873  000A20                     l3598:
  1874  000A20  FFFF               	dw	65535	; assembler added errata NOP
  1875                           
  1876                           ;LC-meter.c: 502: Lin = Lin / 1e+03l;
  1877  000A22  C0A4  F017         	movff	measure_inductance@Lin,___ftdiv@f1
  1878  000A26  C0A5  F018         	movff	measure_inductance@Lin+1,___ftdiv@f1+1
  1879  000A2A  C0A6  F019         	movff	measure_inductance@Lin+2,___ftdiv@f1+2
  1880  000A2E  0E00               	movlw	0
  1881  000A30  6E1A               	movwf	___ftdiv@f2,c
  1882  000A32  0E7A               	movlw	122
  1883  000A34  6E1B               	movwf	___ftdiv@f2+1,c
  1884  000A36  0E44               	movlw	68
  1885  000A38  6E1C               	movwf	___ftdiv@f2+2,c
  1886  000A3A  EC30  F00E         	call	___ftdiv	;wreg free
  1887  000A3E  C017  F0A4         	movff	?___ftdiv,measure_inductance@Lin
  1888  000A42  C018  F0A5         	movff	?___ftdiv+1,measure_inductance@Lin+1
  1889  000A46  C019  F0A6         	movff	?___ftdiv+2,measure_inductance@Lin+2
  1890                           
  1891                           ;LC-meter.c: 503: unit = 2;
  1892  000A4A  0E02               	movlw	2
  1893  000A4C  D003               	goto	L3
  1894                           
  1895                           ; BSR set to: 0
  1896                           ;LC-meter.c: 504: }
  1897                           ;LC-meter.c: 505: } else
  1898  000A4E  D006               	goto	l3604
  1899  000A50                     l3602:
  1900  000A50  FFFF               	dw	65535	; assembler added errata NOP
  1901                           
  1902                           ;LC-meter.c: 506: unit = 3;
  1903  000A52  0E03               	movlw	3
  1904  000A54                     L3:
  1905  000A54  FFFF               	dw	65535	; assembler added errata NOP
  1906  000A56  0100               	movlb	0	; () banked
  1907  000A58  6F98               	movwf	measure_inductance@unit& (0+255),b
  1908  000A5A  D000               	goto	l3604
  1909  000A5C                     l3604:
  1910  000A5C  FFFF               	dw	65535	; assembler added errata NOP
  1911                           
  1912                           ; BSR set to: 0
  1913                           ;LC-meter.c: 508: Lin = Lin * 100;
  1914  000A5E  C0A4  F026         	movff	measure_inductance@Lin,___ftmul@f1
  1915  000A62  C0A5  F027         	movff	measure_inductance@Lin+1,___ftmul@f1+1
  1916  000A66  C0A6  F028         	movff	measure_inductance@Lin+2,___ftmul@f1+2
  1917  000A6A  0E00               	movlw	0
  1918  000A6C  6E29               	movwf	___ftmul@f2,c
  1919  000A6E  0EC8               	movlw	200
  1920  000A70  6E2A               	movwf	___ftmul@f2+1,c
  1921  000A72  0E42               	movlw	66
  1922  000A74  6E2B               	movwf	___ftmul@f2+2,c
  1923  000A76  ECA3  F00C         	call	___ftmul	;wreg free
  1924  000A7A  C026  F0A4         	movff	?___ftmul,measure_inductance@Lin
  1925  000A7E  C027  F0A5         	movff	?___ftmul+1,measure_inductance@Lin+1
  1926  000A82  C028  F0A6         	movff	?___ftmul+2,measure_inductance@Lin+2
  1927                           
  1928                           ;LC-meter.c: 509: var = (unsigned short int)Lin;
  1929  000A86  C0A4  F05B         	movff	measure_inductance@Lin,___fttol@f1
  1930  000A8A  C0A5  F05C         	movff	measure_inductance@Lin+1,___fttol@f1+1
  1931  000A8E  C0A6  F05D         	movff	measure_inductance@Lin+2,___fttol@f1+2
  1932  000A92  ECED  F00A         	call	___fttol	;wreg free
  1933  000A96  C05B  F0A2         	movff	?___fttol,measure_inductance@var
  1934  000A9A  C05C  F0A3         	movff	?___fttol+1,measure_inductance@var+1
  1935                           
  1936                           ;LC-meter.c: 511: print_reading(var);
  1937  000A9E  C0A2  F00F         	movff	measure_inductance@var,print_reading@measurement
  1938  000AA2  C0A3  F010         	movff	measure_inductance@var+1,print_reading@measurement+1
  1939  000AA6  EC1F  F014         	call	_print_reading	;wreg free
  1940                           
  1941                           ;LC-meter.c: 512: print_unit(unit);
  1942  000AAA  0100               	movlb	0	; () banked
  1943  000AAC  5198               	movf	measure_inductance@unit& (0+255),w,b
  1944  000AAE  EC1C  F014         	call	_print_unit
  1945  000AB2  0012               	return		;funcret
  1946  000AB4  FFFF               	dw	65535	; errata NOP
  1947  000AB6                     __end_of_measure_inductance:
  1948                           	opt stack 0
  1949                           tblptru	equ	0xFF8
  1950                           tblptrh	equ	0xFF7
  1951                           tblptrl	equ	0xFF6
  1952                           tablat	equ	0xFF5
  1953                           intcon	equ	0xFF2
  1954                           intcon2	equ	0xFF1
  1955                           postinc0	equ	0xFEE
  1956                           wreg	equ	0xFE8
  1957                           status	equ	0xFD8
  1958                           
  1959 ;; *************** function _measure_capacitance *****************
  1960 ;; Defined at:
  1961 ;;		line 392 in file "../../../src/LC-meter.c"
  1962 ;; Parameters:    Size  Location     Type
  1963 ;;		None
  1964 ;; Auto vars:     Size  Location     Type
  1965 ;;  Cin             3   78[BANK0 ] unsigned char 
  1966 ;;  var             2   76[BANK0 ] unsigned short 
  1967 ;;  unit            1   75[BANK0 ] unsigned char 
  1968 ;; Return value:  Size  Location     Type
  1969 ;;		None               void
  1970 ;; Registers used:
  1971 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1972 ;; Tracked objects:
  1973 ;;		On entry : 0/0
  1974 ;;		On exit  : 0/0
  1975 ;;		Unchanged: 0/0
  1976 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1977 ;;      Params:         0       0       0       0       0       0       0
  1978 ;;      Locals:         0      15       0       0       0       0       0
  1979 ;;      Temps:          0       0       0       0       0       0       0
  1980 ;;      Totals:         0      15       0       0       0       0       0
  1981 ;;Total ram usage:       15 bytes
  1982 ;; Hardware stack levels used:    1
  1983 ;; Hardware stack levels required when called:    7
  1984 ;; This function calls:
  1985 ;;		___ftadd
  1986 ;;		___ftdiv
  1987 ;;		___ftge
  1988 ;;		___ftmul
  1989 ;;		___ftneg
  1990 ;;		___fttol
  1991 ;;		___lwtoft
  1992 ;;		_format_double
  1993 ;;		_format_xint32
  1994 ;;		_measure_freq
  1995 ;;		_print_reading
  1996 ;;		_print_unit
  1997 ;;		_ser_putch
  1998 ;;		_ser_puts
  1999 ;; This function is called by:
  2000 ;;		_main
  2001 ;; This function uses a non-reentrant model
  2002 ;;
  2003                           
  2004                           	psect	text4
  2005  000AB6                     __ptext4:
  2006                           	opt stack 0
  2007  000AB6                     _measure_capacitance:
  2008                           	opt stack 23
  2009                           
  2010                           ;incstack = 0
  2011  000AB6  FFFF               	dw	65535
  2012                           
  2013                           ;LC-meter.c: 393: unsigned char unit;
  2014                           ;LC-meter.c: 394: unsigned short int var;
  2015                           ;LC-meter.c: 396: double Cin;
  2016                           ;LC-meter.c: 403: var = measure_freq();
  2017  000AB8  ECFF  F00F         	call	_measure_freq	;wreg free
  2018  000ABC  C00F  F0CC         	movff	?_measure_freq,measure_capacitance@var
  2019  000AC0  C010  F0CD         	movff	?_measure_freq+1,measure_capacitance@var+1
  2020                           
  2021                           ;LC-meter.c: 405: F3 = (double)var;
  2022  000AC4  C0CC  F019         	movff	measure_capacitance@var,___lwtoft@c
  2023  000AC8  C0CD  F01A         	movff	measure_capacitance@var+1,___lwtoft@c+1
  2024  000ACC  ECEA  F013         	call	___lwtoft	;wreg free
  2025  000AD0  C019  F0EC         	movff	?___lwtoft,_F3
  2026  000AD4  C01A  F0ED         	movff	?___lwtoft+1,_F3+1
  2027  000AD8  C01B  F0EE         	movff	?___lwtoft+2,_F3+2
  2028                           
  2029                           ;LC-meter.c: 407: putchar_ptr = &ser_putch;
  2030  000ADC  0E40               	movlw	low _ser_putch
  2031  000ADE  6E6E               	movwf	_putchar_ptr,c
  2032  000AE0  0E27               	movlw	high _ser_putch
  2033  000AE2  6E6F               	movwf	_putchar_ptr+1,c
  2034                           
  2035                           ;LC-meter.c: 408: ser_puts("var=");
  2036  000AE4  0E5F               	movlw	low STR_4
  2037  000AE6  6E10               	movwf	ser_puts@s,c
  2038  000AE8  0E06               	movlw	high STR_4
  2039  000AEA  6E11               	movwf	ser_puts@s+1,c
  2040  000AEC  EC84  F013         	call	_ser_puts	;wreg free
  2041                           
  2042                           ;LC-meter.c: 409: format_xint32( var);
  2043  000AF0  C0CC  F043         	movff	measure_capacitance@var,format_xint32@x
  2044  000AF4  C0CD  F044         	movff	measure_capacitance@var+1,format_xint32@x+1
  2045  000AF8  6A45               	clrf	format_xint32@x+2,c
  2046  000AFA  6A46               	clrf	format_xint32@x+3,c
  2047  000AFC  ECEB  F011         	call	_format_xint32	;wreg free
  2048                           
  2049                           ;LC-meter.c: 410: ser_puts("\r\nF1=");
  2050  000B00  0E48               	movlw	low STR_5
  2051  000B02  6E10               	movwf	ser_puts@s,c
  2052  000B04  0E06               	movlw	high STR_5
  2053  000B06  6E11               	movwf	ser_puts@s+1,c
  2054  000B08  EC84  F013         	call	_ser_puts	;wreg free
  2055                           
  2056                           ;LC-meter.c: 411: format_double( F1);
  2057  000B0C  C0F5  F0B2         	movff	_F1,format_double@num
  2058  000B10  C0F6  F0B3         	movff	_F1+1,format_double@num+1
  2059  000B14  C0F7  F0B4         	movff	_F1+2,format_double@num+2
  2060  000B18  EC22  F00A         	call	_format_double	;wreg free
  2061                           
  2062                           ;LC-meter.c: 412: ser_putch(' ');
  2063  000B1C  0E20               	movlw	32
  2064  000B1E  ECA0  F013         	call	_ser_putch
  2065                           
  2066                           ;LC-meter.c: 413: format_xint32( *(unsigned long int*)&F1);
  2067  000B22  C0F5  F043         	movff	_F1,format_xint32@x
  2068  000B26  C0F6  F044         	movff	_F1+1,format_xint32@x+1
  2069  000B2A  C0F7  F045         	movff	_F1+2,format_xint32@x+2
  2070  000B2E  C0F8  F046         	movff	_F1+3,format_xint32@x+3
  2071  000B32  ECEB  F011         	call	_format_xint32	;wreg free
  2072                           
  2073                           ;LC-meter.c: 414: ser_puts("\r\nF2=");
  2074  000B36  0E4E               	movlw	low STR_6
  2075  000B38  6E10               	movwf	ser_puts@s,c
  2076  000B3A  0E06               	movlw	high STR_6
  2077  000B3C  6E11               	movwf	ser_puts@s+1,c
  2078  000B3E  EC84  F013         	call	_ser_puts	;wreg free
  2079                           
  2080                           ;LC-meter.c: 415: format_double( F2);
  2081  000B42  C0E9  F0B2         	movff	_F2,format_double@num
  2082  000B46  C0EA  F0B3         	movff	_F2+1,format_double@num+1
  2083  000B4A  C0EB  F0B4         	movff	_F2+2,format_double@num+2
  2084  000B4E  EC22  F00A         	call	_format_double	;wreg free
  2085                           
  2086                           ;LC-meter.c: 416: ser_putch(' ');
  2087  000B52  0E20               	movlw	32
  2088  000B54  ECA0  F013         	call	_ser_putch
  2089                           
  2090                           ;LC-meter.c: 417: format_xint32( *(unsigned long int*)&F2);
  2091  000B58  C0E9  F043         	movff	_F2,format_xint32@x
  2092  000B5C  C0EA  F044         	movff	_F2+1,format_xint32@x+1
  2093  000B60  C0EB  F045         	movff	_F2+2,format_xint32@x+2
  2094  000B64  C0EC  F046         	movff	_F2+3,format_xint32@x+3
  2095  000B68  ECEB  F011         	call	_format_xint32	;wreg free
  2096                           
  2097                           ;LC-meter.c: 418: ser_puts("\r\nF3=");
  2098  000B6C  0E54               	movlw	low STR_7
  2099  000B6E  6E10               	movwf	ser_puts@s,c
  2100  000B70  0E06               	movlw	high STR_7
  2101  000B72  6E11               	movwf	ser_puts@s+1,c
  2102  000B74  EC84  F013         	call	_ser_puts	;wreg free
  2103                           
  2104                           ;LC-meter.c: 419: format_double( F3);
  2105  000B78  C0EC  F0B2         	movff	_F3,format_double@num
  2106  000B7C  C0ED  F0B3         	movff	_F3+1,format_double@num+1
  2107  000B80  C0EE  F0B4         	movff	_F3+2,format_double@num+2
  2108  000B84  EC22  F00A         	call	_format_double	;wreg free
  2109                           
  2110                           ;LC-meter.c: 420: ser_putch(' ');
  2111  000B88  0E20               	movlw	32
  2112  000B8A  ECA0  F013         	call	_ser_putch
  2113                           
  2114                           ;LC-meter.c: 421: format_xint32( *(unsigned long int*)&F3);
  2115  000B8E  C0EC  F043         	movff	_F3,format_xint32@x
  2116  000B92  C0ED  F044         	movff	_F3+1,format_xint32@x+1
  2117  000B96  C0EE  F045         	movff	_F3+2,format_xint32@x+2
  2118  000B9A  C0EF  F046         	movff	_F3+3,format_xint32@x+3
  2119  000B9E  ECEB  F011         	call	_format_xint32	;wreg free
  2120                           
  2121                           ;LC-meter.c: 422: ser_puts("\r\nCCal=");
  2122  000BA2  0E3A               	movlw	low STR_8
  2123  000BA4  6E10               	movwf	ser_puts@s,c
  2124  000BA6  0E06               	movlw	high STR_8
  2125  000BA8  6E11               	movwf	ser_puts@s+1,c
  2126  000BAA  EC84  F013         	call	_ser_puts	;wreg free
  2127                           
  2128                           ;LC-meter.c: 423: format_double( CCal);
  2129  000BAE  C0F8  F0B2         	movff	_CCal,format_double@num
  2130  000BB2  C0F9  F0B3         	movff	_CCal+1,format_double@num+1
  2131  000BB6  C0FA  F0B4         	movff	_CCal+2,format_double@num+2
  2132  000BBA  EC22  F00A         	call	_format_double	;wreg free
  2133                           
  2134                           ;LC-meter.c: 424: ser_putch(' ');
  2135  000BBE  0E20               	movlw	32
  2136  000BC0  ECA0  F013         	call	_ser_putch
  2137                           
  2138                           ;LC-meter.c: 425: format_xint32( *(unsigned long int*)&CCal);
  2139  000BC4  C0F8  F043         	movff	_CCal,format_xint32@x
  2140  000BC8  C0F9  F044         	movff	_CCal+1,format_xint32@x+1
  2141  000BCC  C0FA  F045         	movff	_CCal+2,format_xint32@x+2
  2142  000BD0  C0FB  F046         	movff	_CCal+3,format_xint32@x+3
  2143  000BD4  ECEB  F011         	call	_format_xint32	;wreg free
  2144                           
  2145                           ;LC-meter.c: 426: ser_puts("\r\n");
  2146  000BD8  0E45               	movlw	low (STR_1+3)
  2147  000BDA  6E10               	movwf	ser_puts@s,c
  2148  000BDC  0E06               	movlw	high (STR_1+3)
  2149  000BDE  6E11               	movwf	ser_puts@s+1,c
  2150  000BE0  EC84  F013         	call	_ser_puts	;wreg free
  2151                           
  2152                           ;LC-meter.c: 428: putchar_ptr = &output_putch;
  2153  000BE4  0E2A               	movlw	low _output_putch
  2154  000BE6  6E6E               	movwf	_putchar_ptr,c
  2155  000BE8  0E28               	movlw	high _output_putch
  2156  000BEA  6E6F               	movwf	_putchar_ptr+1,c
  2157                           
  2158                           ;LC-meter.c: 430: if(F3 > F1)
  2159  000BEC  C0F5  F00F         	movff	_F1,___ftge@ff1
  2160  000BF0  C0F6  F010         	movff	_F1+1,___ftge@ff1+1
  2161  000BF4  C0F7  F011         	movff	_F1+2,___ftge@ff1+2
  2162  000BF8  C0EC  F012         	movff	_F3,___ftge@ff2
  2163  000BFC  C0ED  F013         	movff	_F3+1,___ftge@ff2+1
  2164  000C00  C0EE  F014         	movff	_F3+2,___ftge@ff2+2
  2165  000C04  ECB6  F010         	call	___ftge	;wreg free
  2166  000C08  B0D8               	btfsc	status,0,c
  2167  000C0A  D007               	goto	l3542
  2168                           
  2169                           ;LC-meter.c: 431: F3 = F1;
  2170  000C0C  C0F5  F0EC         	movff	_F1,_F3
  2171  000C10  C0F6  F0ED         	movff	_F1+1,_F3+1
  2172  000C14  C0F7  F0EE         	movff	_F1+2,_F3+2
  2173  000C18  D000               	goto	l3542
  2174  000C1A                     l3542:
  2175  000C1A  FFFF               	dw	65535	; assembler added errata NOP
  2176                           
  2177                           ;LC-meter.c: 433: Cin = F2 * F2 * (F1 * F1 - F3 * F3) * CCal;
  2178  000C1C  C0E9  F029         	movff	_F2,___ftmul@f2
  2179  000C20  C0EA  F02A         	movff	_F2+1,___ftmul@f2+1
  2180  000C24  C0EB  F02B         	movff	_F2+2,___ftmul@f2+2
  2181  000C28  C0E9  F026         	movff	_F2,___ftmul@f1
  2182  000C2C  C0EA  F027         	movff	_F2+1,___ftmul@f1+1
  2183  000C30  C0EB  F028         	movff	_F2+2,___ftmul@f1+2
  2184  000C34  ECA3  F00C         	call	___ftmul	;wreg free
  2185  000C38  C026  F0C2         	movff	?___ftmul,_measure_capacitance$913
  2186  000C3C  C027  F0C3         	movff	?___ftmul+1,_measure_capacitance$913+1
  2187  000C40  C028  F0C4         	movff	?___ftmul+2,_measure_capacitance$913+2
  2188                           
  2189                           ;LC-meter.c: 433: Cin = F2 * F2 * (F1 * F1 - F3 * F3) * CCal;
  2190  000C44  C0EC  F029         	movff	_F3,___ftmul@f2
  2191  000C48  C0ED  F02A         	movff	_F3+1,___ftmul@f2+1
  2192  000C4C  C0EE  F02B         	movff	_F3+2,___ftmul@f2+2
  2193  000C50  C0EC  F026         	movff	_F3,___ftmul@f1
  2194  000C54  C0ED  F027         	movff	_F3+1,___ftmul@f1+1
  2195  000C58  C0EE  F028         	movff	_F3+2,___ftmul@f1+2
  2196  000C5C  ECA3  F00C         	call	___ftmul	;wreg free
  2197  000C60  C026  F035         	movff	?___ftmul,___ftneg@f1
  2198  000C64  C027  F036         	movff	?___ftmul+1,___ftneg@f1+1
  2199  000C68  C028  F037         	movff	?___ftmul+2,___ftneg@f1+2
  2200  000C6C  EC00  F014         	call	___ftneg	;wreg free
  2201  000C70  C035  F03B         	movff	?___ftneg,___ftadd@f2
  2202  000C74  C036  F03C         	movff	?___ftneg+1,___ftadd@f2+1
  2203  000C78  C037  F03D         	movff	?___ftneg+2,___ftadd@f2+2
  2204  000C7C  C0F5  F029         	movff	_F1,___ftmul@f2
  2205  000C80  C0F6  F02A         	movff	_F1+1,___ftmul@f2+1
  2206  000C84  C0F7  F02B         	movff	_F1+2,___ftmul@f2+2
  2207  000C88  C0F5  F026         	movff	_F1,___ftmul@f1
  2208  000C8C  C0F6  F027         	movff	_F1+1,___ftmul@f1+1
  2209  000C90  C0F7  F028         	movff	_F1+2,___ftmul@f1+2
  2210  000C94  ECA3  F00C         	call	___ftmul	;wreg free
  2211  000C98  C026  F038         	movff	?___ftmul,___ftadd@f1
  2212  000C9C  C027  F039         	movff	?___ftmul+1,___ftadd@f1+1
  2213  000CA0  C028  F03A         	movff	?___ftmul+2,___ftadd@f1+2
  2214  000CA4  EC5C  F008         	call	___ftadd	;wreg free
  2215  000CA8  C038  F0C5         	movff	?___ftadd,_measure_capacitance$914
  2216  000CAC  C039  F0C6         	movff	?___ftadd+1,_measure_capacitance$914+1
  2217  000CB0  C03A  F0C7         	movff	?___ftadd+2,_measure_capacitance$914+2
  2218                           
  2219                           ;LC-meter.c: 433: Cin = F2 * F2 * (F1 * F1 - F3 * F3) * CCal;
  2220  000CB4  C0C2  F029         	movff	_measure_capacitance$913,___ftmul@f2
  2221  000CB8  C0C3  F02A         	movff	_measure_capacitance$913+1,___ftmul@f2+1
  2222  000CBC  C0C4  F02B         	movff	_measure_capacitance$913+2,___ftmul@f2+2
  2223  000CC0  C0C5  F026         	movff	_measure_capacitance$914,___ftmul@f1
  2224  000CC4  C0C6  F027         	movff	_measure_capacitance$914+1,___ftmul@f1+1
  2225  000CC8  C0C7  F028         	movff	_measure_capacitance$914+2,___ftmul@f1+2
  2226  000CCC  ECA3  F00C         	call	___ftmul	;wreg free
  2227  000CD0  C026  F0C8         	movff	?___ftmul,_measure_capacitance$915
  2228  000CD4  C027  F0C9         	movff	?___ftmul+1,_measure_capacitance$915+1
  2229  000CD8  C028  F0CA         	movff	?___ftmul+2,_measure_capacitance$915+2
  2230                           
  2231                           ;LC-meter.c: 433: Cin = F2 * F2 * (F1 * F1 - F3 * F3) * CCal;
  2232  000CDC  C0C8  F026         	movff	_measure_capacitance$915,___ftmul@f1
  2233  000CE0  C0C9  F027         	movff	_measure_capacitance$915+1,___ftmul@f1+1
  2234  000CE4  C0CA  F028         	movff	_measure_capacitance$915+2,___ftmul@f1+2
  2235  000CE8  C0F8  F029         	movff	_CCal,___ftmul@f2
  2236  000CEC  C0F9  F02A         	movff	_CCal+1,___ftmul@f2+1
  2237  000CF0  C0FA  F02B         	movff	_CCal+2,___ftmul@f2+2
  2238  000CF4  ECA3  F00C         	call	___ftmul	;wreg free
  2239  000CF8  C026  F0CE         	movff	?___ftmul,measure_capacitance@Cin
  2240  000CFC  C027  F0CF         	movff	?___ftmul+1,measure_capacitance@Cin+1
  2241  000D00  C028  F0D0         	movff	?___ftmul+2,measure_capacitance@Cin+2
  2242                           
  2243                           ;LC-meter.c: 437: ser_puts("Cin=");
  2244  000D04  0E5A               	movlw	low STR_10
  2245  000D06  6E10               	movwf	ser_puts@s,c
  2246  000D08  0E06               	movlw	high STR_10
  2247  000D0A  6E11               	movwf	ser_puts@s+1,c
  2248  000D0C  EC84  F013         	call	_ser_puts	;wreg free
  2249                           
  2250                           ;LC-meter.c: 438: format_double( Cin);
  2251  000D10  C0CE  F0B2         	movff	measure_capacitance@Cin,format_double@num
  2252  000D14  C0CF  F0B3         	movff	measure_capacitance@Cin+1,format_double@num+1
  2253  000D18  C0D0  F0B4         	movff	measure_capacitance@Cin+2,format_double@num+2
  2254  000D1C  EC22  F00A         	call	_format_double	;wreg free
  2255                           
  2256                           ;LC-meter.c: 439: ser_putch(' ');
  2257  000D20  0E20               	movlw	32
  2258  000D22  ECA0  F013         	call	_ser_putch
  2259                           
  2260                           ;LC-meter.c: 440: format_xint32( *(unsigned long int*)&Cin);
  2261  000D26  C0CE  F043         	movff	measure_capacitance@Cin,format_xint32@x
  2262  000D2A  C0CF  F044         	movff	measure_capacitance@Cin+1,format_xint32@x+1
  2263  000D2E  C0D0  F045         	movff	measure_capacitance@Cin+2,format_xint32@x+2
  2264  000D32  C0D1  F046         	movff	measure_capacitance@Cin+3,format_xint32@x+3
  2265  000D36  ECEB  F011         	call	_format_xint32	;wreg free
  2266                           
  2267                           ;LC-meter.c: 441: ser_puts("\r\n");
  2268  000D3A  0E45               	movlw	low (STR_1+3)
  2269  000D3C  6E10               	movwf	ser_puts@s,c
  2270  000D3E  0E06               	movlw	high (STR_1+3)
  2271  000D40  6E11               	movwf	ser_puts@s+1,c
  2272  000D42  EC84  F013         	call	_ser_puts	;wreg free
  2273                           
  2274                           ;LC-meter.c: 443: if(Cin > 999) {
  2275  000D46  0EC0               	movlw	192
  2276  000D48  6E0F               	movwf	___ftge@ff1,c
  2277  000D4A  0E79               	movlw	121
  2278  000D4C  6E10               	movwf	___ftge@ff1+1,c
  2279  000D4E  0E44               	movlw	68
  2280  000D50  6E11               	movwf	___ftge@ff1+2,c
  2281  000D52  C0CE  F012         	movff	measure_capacitance@Cin,___ftge@ff2
  2282  000D56  C0CF  F013         	movff	measure_capacitance@Cin+1,___ftge@ff2+1
  2283  000D5A  C0D0  F014         	movff	measure_capacitance@Cin+2,___ftge@ff2+2
  2284  000D5E  ECB6  F010         	call	___ftge	;wreg free
  2285  000D62  B0D8               	btfsc	status,0,c
  2286  000D64  D066               	goto	l3572
  2287                           
  2288                           ;LC-meter.c: 444: if(Cin > (999e+03l)) {
  2289  000D66  0EE6               	movlw	230
  2290  000D68  6E0F               	movwf	___ftge@ff1,c
  2291  000D6A  0E73               	movlw	115
  2292  000D6C  6E10               	movwf	___ftge@ff1+1,c
  2293  000D6E  0E49               	movlw	73
  2294  000D70  6E11               	movwf	___ftge@ff1+2,c
  2295  000D72  C0CE  F012         	movff	measure_capacitance@Cin,___ftge@ff2
  2296  000D76  C0CF  F013         	movff	measure_capacitance@Cin+1,___ftge@ff2+1
  2297  000D7A  C0D0  F014         	movff	measure_capacitance@Cin+2,___ftge@ff2+2
  2298  000D7E  ECB6  F010         	call	___ftge	;wreg free
  2299  000D82  B0D8               	btfsc	status,0,c
  2300  000D84  D03E               	goto	l3568
  2301                           
  2302                           ;LC-meter.c: 445: if(Cin > (999e+06l)) {
  2303  000D86  0E2E               	movlw	46
  2304  000D88  6E0F               	movwf	___ftge@ff1,c
  2305  000D8A  0E6E               	movlw	110
  2306  000D8C  6E10               	movwf	___ftge@ff1+1,c
  2307  000D8E  0E4E               	movlw	78
  2308  000D90  6E11               	movwf	___ftge@ff1+2,c
  2309  000D92  C0CE  F012         	movff	measure_capacitance@Cin,___ftge@ff2
  2310  000D96  C0CF  F013         	movff	measure_capacitance@Cin+1,___ftge@ff2+1
  2311  000D9A  C0D0  F014         	movff	measure_capacitance@Cin+2,___ftge@ff2+2
  2312  000D9E  ECB6  F010         	call	___ftge	;wreg free
  2313  000DA2  B0D8               	btfsc	status,0,c
  2314  000DA4  D016               	goto	l3564
  2315                           
  2316                           ;LC-meter.c: 446: Cin = Cin / (1e+09l);
  2317  000DA6  C0CE  F017         	movff	measure_capacitance@Cin,___ftdiv@f1
  2318  000DAA  C0CF  F018         	movff	measure_capacitance@Cin+1,___ftdiv@f1+1
  2319  000DAE  C0D0  F019         	movff	measure_capacitance@Cin+2,___ftdiv@f1+2
  2320  000DB2  0E6B               	movlw	107
  2321  000DB4  6E1A               	movwf	___ftdiv@f2,c
  2322  000DB6  0E6E               	movlw	110
  2323  000DB8  6E1B               	movwf	___ftdiv@f2+1,c
  2324  000DBA  0E4E               	movlw	78
  2325  000DBC  6E1C               	movwf	___ftdiv@f2+2,c
  2326  000DBE  EC30  F00E         	call	___ftdiv	;wreg free
  2327  000DC2  C017  F0CE         	movff	?___ftdiv,measure_capacitance@Cin
  2328  000DC6  C018  F0CF         	movff	?___ftdiv+1,measure_capacitance@Cin+1
  2329  000DCA  C019  F0D0         	movff	?___ftdiv+2,measure_capacitance@Cin+2
  2330                           
  2331                           ;LC-meter.c: 447: unit = 4;
  2332  000DCE  0E04               	movlw	4
  2333  000DD0  D032               	goto	L6
  2334  000DD2                     l3564:
  2335  000DD2  FFFF               	dw	65535	; assembler added errata NOP
  2336                           
  2337                           ;LC-meter.c: 449: Cin = Cin / (1e+06l);
  2338  000DD4  C0CE  F017         	movff	measure_capacitance@Cin,___ftdiv@f1
  2339  000DD8  C0CF  F018         	movff	measure_capacitance@Cin+1,___ftdiv@f1+1
  2340  000DDC  C0D0  F019         	movff	measure_capacitance@Cin+2,___ftdiv@f1+2
  2341  000DE0  0E24               	movlw	36
  2342  000DE2  6E1A               	movwf	___ftdiv@f2,c
  2343  000DE4  0E74               	movlw	116
  2344  000DE6  6E1B               	movwf	___ftdiv@f2+1,c
  2345  000DE8  0E49               	movlw	73
  2346  000DEA  6E1C               	movwf	___ftdiv@f2+2,c
  2347  000DEC  EC30  F00E         	call	___ftdiv	;wreg free
  2348  000DF0  C017  F0CE         	movff	?___ftdiv,measure_capacitance@Cin
  2349  000DF4  C018  F0CF         	movff	?___ftdiv+1,measure_capacitance@Cin+1
  2350  000DF8  C019  F0D0         	movff	?___ftdiv+2,measure_capacitance@Cin+2
  2351                           
  2352                           ;LC-meter.c: 450: unit = 5;
  2353  000DFC  0E05               	movlw	5
  2354  000DFE  D01B               	goto	L6
  2355                           
  2356                           ; BSR set to: 0
  2357                           ;LC-meter.c: 451: }
  2358                           ;LC-meter.c: 452: } else {
  2359  000E00  D01E               	goto	l3574
  2360  000E02                     l3568:
  2361  000E02  FFFF               	dw	65535	; assembler added errata NOP
  2362                           
  2363                           ;LC-meter.c: 453: Cin = Cin / 1e+03l;
  2364  000E04  C0CE  F017         	movff	measure_capacitance@Cin,___ftdiv@f1
  2365  000E08  C0CF  F018         	movff	measure_capacitance@Cin+1,___ftdiv@f1+1
  2366  000E0C  C0D0  F019         	movff	measure_capacitance@Cin+2,___ftdiv@f1+2
  2367  000E10  0E00               	movlw	0
  2368  000E12  6E1A               	movwf	___ftdiv@f2,c
  2369  000E14  0E7A               	movlw	122
  2370  000E16  6E1B               	movwf	___ftdiv@f2+1,c
  2371  000E18  0E44               	movlw	68
  2372  000E1A  6E1C               	movwf	___ftdiv@f2+2,c
  2373  000E1C  EC30  F00E         	call	___ftdiv	;wreg free
  2374  000E20  C017  F0CE         	movff	?___ftdiv,measure_capacitance@Cin
  2375  000E24  C018  F0CF         	movff	?___ftdiv+1,measure_capacitance@Cin+1
  2376  000E28  C019  F0D0         	movff	?___ftdiv+2,measure_capacitance@Cin+2
  2377                           
  2378                           ;LC-meter.c: 454: unit = 6;
  2379  000E2C  0E06               	movlw	6
  2380  000E2E  D003               	goto	L6
  2381                           
  2382                           ; BSR set to: 0
  2383                           ;LC-meter.c: 455: }
  2384                           ;LC-meter.c: 456: } else
  2385  000E30  D006               	goto	l3574
  2386  000E32                     l3572:
  2387  000E32  FFFF               	dw	65535	; assembler added errata NOP
  2388                           
  2389                           ;LC-meter.c: 457: unit = 7;
  2390  000E34  0E07               	movlw	7
  2391  000E36                     L6:
  2392  000E36  FFFF               	dw	65535	; assembler added errata NOP
  2393  000E38  0100               	movlb	0	; () banked
  2394  000E3A  6FCB               	movwf	measure_capacitance@unit& (0+255),b
  2395  000E3C  D000               	goto	l3574
  2396  000E3E                     l3574:
  2397  000E3E  FFFF               	dw	65535	; assembler added errata NOP
  2398                           
  2399                           ; BSR set to: 0
  2400                           ;LC-meter.c: 459: Cin = Cin * 100;
  2401  000E40  C0CE  F026         	movff	measure_capacitance@Cin,___ftmul@f1
  2402  000E44  C0CF  F027         	movff	measure_capacitance@Cin+1,___ftmul@f1+1
  2403  000E48  C0D0  F028         	movff	measure_capacitance@Cin+2,___ftmul@f1+2
  2404  000E4C  0E00               	movlw	0
  2405  000E4E  6E29               	movwf	___ftmul@f2,c
  2406  000E50  0EC8               	movlw	200
  2407  000E52  6E2A               	movwf	___ftmul@f2+1,c
  2408  000E54  0E42               	movlw	66
  2409  000E56  6E2B               	movwf	___ftmul@f2+2,c
  2410  000E58  ECA3  F00C         	call	___ftmul	;wreg free
  2411  000E5C  C026  F0CE         	movff	?___ftmul,measure_capacitance@Cin
  2412  000E60  C027  F0CF         	movff	?___ftmul+1,measure_capacitance@Cin+1
  2413  000E64  C028  F0D0         	movff	?___ftmul+2,measure_capacitance@Cin+2
  2414                           
  2415                           ;LC-meter.c: 460: var = (unsigned short int)Cin;
  2416  000E68  C0CE  F05B         	movff	measure_capacitance@Cin,___fttol@f1
  2417  000E6C  C0CF  F05C         	movff	measure_capacitance@Cin+1,___fttol@f1+1
  2418  000E70  C0D0  F05D         	movff	measure_capacitance@Cin+2,___fttol@f1+2
  2419  000E74  ECED  F00A         	call	___fttol	;wreg free
  2420  000E78  C05B  F0CC         	movff	?___fttol,measure_capacitance@var
  2421  000E7C  C05C  F0CD         	movff	?___fttol+1,measure_capacitance@var+1
  2422                           
  2423                           ;LC-meter.c: 462: print_reading(var);
  2424  000E80  C0CC  F00F         	movff	measure_capacitance@var,print_reading@measurement
  2425  000E84  C0CD  F010         	movff	measure_capacitance@var+1,print_reading@measurement+1
  2426  000E88  EC1F  F014         	call	_print_reading	;wreg free
  2427                           
  2428                           ;LC-meter.c: 463: print_unit(unit);
  2429  000E8C  0100               	movlb	0	; () banked
  2430  000E8E  51CB               	movf	measure_capacitance@unit& (0+255),w,b
  2431  000E90  EC1C  F014         	call	_print_unit
  2432  000E94  0012               	return		;funcret
  2433  000E96  FFFF               	dw	65535	; errata NOP
  2434  000E98                     __end_of_measure_capacitance:
  2435                           	opt stack 0
  2436                           tblptru	equ	0xFF8
  2437                           tblptrh	equ	0xFF7
  2438                           tblptrl	equ	0xFF6
  2439                           tablat	equ	0xFF5
  2440                           intcon	equ	0xFF2
  2441                           intcon2	equ	0xFF1
  2442                           postinc0	equ	0xFEE
  2443                           wreg	equ	0xFE8
  2444                           status	equ	0xFD8
  2445                           
  2446 ;; *************** function _print_unit *****************
  2447 ;; Defined at:
  2448 ;;		line 408 in file "../../../src/print.c"
  2449 ;; Parameters:    Size  Location     Type
  2450 ;;  unit            1    wreg     unsigned char 
  2451 ;; Auto vars:     Size  Location     Type
  2452 ;;  unit            1    0[COMRAM] unsigned char 
  2453 ;; Return value:  Size  Location     Type
  2454 ;;		None               void
  2455 ;; Registers used:
  2456 ;;		wreg
  2457 ;; Tracked objects:
  2458 ;;		On entry : 0/0
  2459 ;;		On exit  : 0/0
  2460 ;;		Unchanged: 0/0
  2461 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2462 ;;      Params:         0       0       0       0       0       0       0
  2463 ;;      Locals:         0       0       0       0       0       0       0
  2464 ;;      Temps:          0       0       0       0       0       0       0
  2465 ;;      Totals:         0       0       0       0       0       0       0
  2466 ;;Total ram usage:        0 bytes
  2467 ;; Hardware stack levels used:    1
  2468 ;; Hardware stack levels required when called:    1
  2469 ;; This function calls:
  2470 ;;		Nothing
  2471 ;; This function is called by:
  2472 ;;		_measure_capacitance
  2473 ;;		_measure_inductance
  2474 ;; This function uses a non-reentrant model
  2475 ;;
  2476                           
  2477                           	psect	text5
  2478  002838                     __ptext5:
  2479                           	opt stack 0
  2480  002838                     _print_unit:
  2481                           	opt stack 28
  2482                           
  2483                           ;incstack = 0
  2484  002838  FFFF               	dw	65535
  2485  00283A  0012               	return		;funcret
  2486  00283C  FFFF               	dw	65535	; errata NOP
  2487  00283E                     __end_of_print_unit:
  2488                           	opt stack 0
  2489                           tblptru	equ	0xFF8
  2490                           tblptrh	equ	0xFF7
  2491                           tblptrl	equ	0xFF6
  2492                           tablat	equ	0xFF5
  2493                           intcon	equ	0xFF2
  2494                           intcon2	equ	0xFF1
  2495                           postinc0	equ	0xFEE
  2496                           wreg	equ	0xFE8
  2497                           status	equ	0xFD8
  2498                           
  2499 ;; *************** function _print_reading *****************
  2500 ;; Defined at:
  2501 ;;		line 429 in file "../../../src/print.c"
  2502 ;; Parameters:    Size  Location     Type
  2503 ;;  measurement     2   14[COMRAM] unsigned short 
  2504 ;; Auto vars:     Size  Location     Type
  2505 ;;		None
  2506 ;; Return value:  Size  Location     Type
  2507 ;;		None               void
  2508 ;; Registers used:
  2509 ;;		None
  2510 ;; Tracked objects:
  2511 ;;		On entry : 0/0
  2512 ;;		On exit  : 0/0
  2513 ;;		Unchanged: 0/0
  2514 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2515 ;;      Params:         2       0       0       0       0       0       0
  2516 ;;      Locals:         0       0       0       0       0       0       0
  2517 ;;      Temps:          0       0       0       0       0       0       0
  2518 ;;      Totals:         2       0       0       0       0       0       0
  2519 ;;Total ram usage:        2 bytes
  2520 ;; Hardware stack levels used:    1
  2521 ;; Hardware stack levels required when called:    1
  2522 ;; This function calls:
  2523 ;;		Nothing
  2524 ;; This function is called by:
  2525 ;;		_measure_capacitance
  2526 ;;		_measure_inductance
  2527 ;; This function uses a non-reentrant model
  2528 ;;
  2529                           
  2530                           	psect	text6
  2531  00283E                     __ptext6:
  2532                           	opt stack 0
  2533  00283E                     _print_reading:
  2534                           	opt stack 28
  2535                           
  2536                           ;incstack = 0
  2537  00283E  FFFF               	dw	65535
  2538  002840  0012               	return		;funcret
  2539  002842  FFFF               	dw	65535	; errata NOP
  2540  002844                     __end_of_print_reading:
  2541                           	opt stack 0
  2542                           tblptru	equ	0xFF8
  2543                           tblptrh	equ	0xFF7
  2544                           tblptrl	equ	0xFF6
  2545                           tablat	equ	0xFF5
  2546                           intcon	equ	0xFF2
  2547                           intcon2	equ	0xFF1
  2548                           postinc0	equ	0xFEE
  2549                           wreg	equ	0xFE8
  2550                           status	equ	0xFD8
  2551                           
  2552 ;; *************** function _format_xint32 *****************
  2553 ;; Defined at:
  2554 ;;		line 48 in file "../../../lib/format.c"
  2555 ;; Parameters:    Size  Location     Type
  2556 ;;  x               4   66[COMRAM] unsigned long 
  2557 ;; Auto vars:     Size  Location     Type
  2558 ;;		None
  2559 ;; Return value:  Size  Location     Type
  2560 ;;		None               void
  2561 ;; Registers used:
  2562 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclat, tosl, prodl, prodh, cstack
  2563 ;; Tracked objects:
  2564 ;;		On entry : 0/0
  2565 ;;		On exit  : 0/0
  2566 ;;		Unchanged: 0/0
  2567 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2568 ;;      Params:         4       0       0       0       0       0       0
  2569 ;;      Locals:         0       0       0       0       0       0       0
  2570 ;;      Temps:          0       0       0       0       0       0       0
  2571 ;;      Totals:         4       0       0       0       0       0       0
  2572 ;;Total ram usage:        4 bytes
  2573 ;; Hardware stack levels used:    1
  2574 ;; Hardware stack levels required when called:    4
  2575 ;; This function calls:
  2576 ;;		_format_number
  2577 ;;		_format_putchar
  2578 ;;		_output_putch
  2579 ;;		_ser_putch
  2580 ;; This function is called by:
  2581 ;;		_measure_capacitance
  2582 ;; This function uses a non-reentrant model
  2583 ;;
  2584                           
  2585                           	psect	text7
  2586  0023D6                     __ptext7:
  2587                           	opt stack 0
  2588  0023D6                     _format_xint32:
  2589                           	opt stack 25
  2590                           
  2591                           ;incstack = 0
  2592  0023D6  FFFF               	dw	65535
  2593                           
  2594                           ;format.c: 49: putchar_ptr('0');
  2595  0023D8  D801               	call	u2578
  2596  0023DA  D00D               	goto	u2579
  2597  0023DC                     u2578:
  2598  0023DC  FFFF               	dw	65535	; assembler added errata NOP
  2599  0023DE  0005               	push	
  2600  0023E0  6EFA               	movwf	pclath,c
  2601  0023E2  506E               	movf	_putchar_ptr,w,c
  2602  0023E4  6EFD               	movwf	tosl,c
  2603  0023E6  506F               	movf	_putchar_ptr+1,w,c
  2604  0023E8  6EFE               	movwf	tosh,c
  2605  0023EA  50F8               	movf	tblptru,w,c
  2606  0023EC  6EFF               	movwf	tosu,c
  2607  0023EE  50FA               	movf	pclath,w,c
  2608  0023F0  0E30               	movlw	48
  2609  0023F2  0012               	return		;indir
  2610  0023F4  FFFF               	dw	65535	; errata NOP
  2611  0023F6                     u2579:
  2612  0023F6  FFFF               	dw	65535	; assembler added errata NOP
  2613                           
  2614                           ;format.c: 50: putchar_ptr('x');
  2615  0023F8  D801               	call	u2588
  2616  0023FA  D00D               	goto	u2589
  2617  0023FC                     u2588:
  2618  0023FC  FFFF               	dw	65535	; assembler added errata NOP
  2619  0023FE  0005               	push	
  2620  002400  6EFA               	movwf	pclath,c
  2621  002402  506E               	movf	_putchar_ptr,w,c
  2622  002404  6EFD               	movwf	tosl,c
  2623  002406  506F               	movf	_putchar_ptr+1,w,c
  2624  002408  6EFE               	movwf	tosh,c
  2625  00240A  50F8               	movf	tblptru,w,c
  2626  00240C  6EFF               	movwf	tosu,c
  2627  00240E  50FA               	movf	pclath,w,c
  2628  002410  0E78               	movlw	120
  2629  002412  0012               	return		;indir
  2630  002414  FFFF               	dw	65535	; errata NOP
  2631  002416                     u2589:
  2632  002416  FFFF               	dw	65535	; assembler added errata NOP
  2633                           
  2634                           ;format.c: 51: format_number((unsigned short int)(x >> 16), 16, -4);
  2635  002418  C045  F016         	movff	format_xint32@x+2,format_number@n
  2636  00241C  C046  F017         	movff	format_xint32@x+3,format_number@n+1
  2637  002420  0E10               	movlw	16
  2638  002422  6E18               	movwf	format_number@base,c
  2639  002424  0EFC               	movlw	252
  2640  002426  6E19               	movwf	format_number@pad,c
  2641  002428  EC81  F00B         	call	_format_number
  2642                           
  2643                           ;format.c: 52: format_number((unsigned short int)(x & 0xffff), 16, -4);
  2644  00242C  C043  F016         	movff	format_xint32@x,format_number@n
  2645  002430  C044  F017         	movff	format_xint32@x+1,format_number@n+1
  2646  002434  0E10               	movlw	16
  2647  002436  6E18               	movwf	format_number@base,c
  2648  002438  0EFC               	movlw	252
  2649  00243A  6E19               	movwf	format_number@pad,c
  2650  00243C  EC81  F00B         	call	_format_number	;wreg free
  2651  002440  0012               	return		;funcret
  2652  002442  FFFF               	dw	65535	; errata NOP
  2653  002444                     __end_of_format_xint32:
  2654                           	opt stack 0
  2655                           tosu	equ	0xFFF
  2656                           tosh	equ	0xFFE
  2657                           tosl	equ	0xFFD
  2658                           pclath	equ	0xFFA
  2659                           tblptru	equ	0xFF8
  2660                           tblptrh	equ	0xFF7
  2661                           tblptrl	equ	0xFF6
  2662                           tablat	equ	0xFF5
  2663                           intcon	equ	0xFF2
  2664                           intcon2	equ	0xFF1
  2665                           postinc0	equ	0xFEE
  2666                           wreg	equ	0xFE8
  2667                           status	equ	0xFD8
  2668                           
  2669 ;; *************** function _format_number *****************
  2670 ;; Defined at:
  2671 ;;		line 14 in file "../../../lib/format.c"
  2672 ;; Parameters:    Size  Location     Type
  2673 ;;  n               2   21[COMRAM] unsigned short 
  2674 ;;  base            1   23[COMRAM] unsigned char 
  2675 ;;  pad             1   24[COMRAM] char 
  2676 ;; Auto vars:     Size  Location     Type
  2677 ;;  buf            32   29[COMRAM] unsigned char [32]
  2678 ;;  i               1   65[COMRAM] char 
  2679 ;;  di              1   64[COMRAM] unsigned char 
  2680 ;;  padchar         1   63[COMRAM] unsigned char 
  2681 ;; Return value:  Size  Location     Type
  2682 ;;		None               void
  2683 ;; Registers used:
  2684 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclat, tosl, prodl, prodh, cstack
  2685 ;; Tracked objects:
  2686 ;;		On entry : 0/0
  2687 ;;		On exit  : 0/0
  2688 ;;		Unchanged: 0/0
  2689 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2690 ;;      Params:         4       0       0       0       0       0       0
  2691 ;;      Locals:        37       0       0       0       0       0       0
  2692 ;;      Temps:          4       0       0       0       0       0       0
  2693 ;;      Totals:        45       0       0       0       0       0       0
  2694 ;;Total ram usage:       45 bytes
  2695 ;; Hardware stack levels used:    1
  2696 ;; Hardware stack levels required when called:    3
  2697 ;; This function calls:
  2698 ;;		___lwdiv
  2699 ;;		___lwmod
  2700 ;;		_format_putchar
  2701 ;;		_output_putch
  2702 ;;		_ser_putch
  2703 ;; This function is called by:
  2704 ;;		_format_xint32
  2705 ;;		_testloop
  2706 ;; This function uses a non-reentrant model
  2707 ;;
  2708                           
  2709                           	psect	text8
  2710  001702                     __ptext8:
  2711                           	opt stack 0
  2712  001702                     _format_number:
  2713                           	opt stack 25
  2714                           
  2715                           ;incstack = 0
  2716  001702  FFFF               	dw	65535
  2717                           
  2718                           ;format.c: 15: char buf[8 * sizeof(long)];
  2719                           ;format.c: 16: unsigned char di;
  2720                           ;format.c: 17: signed char i = 0;
  2721  001704  0E00               	movlw	0
  2722  001706  6E42               	movwf	format_number@i,c
  2723                           
  2724                           ;format.c: 18: char padchar = ' ';
  2725  001708  0E20               	movlw	32
  2726  00170A  6E40               	movwf	format_number@padchar,c
  2727                           
  2728                           ;format.c: 20: if(pad < 0) {
  2729  00170C  AE19               	btfss	format_number@pad,7,c
  2730  00170E  D004               	goto	l2740
  2731                           
  2732                           ;format.c: 21: pad = -pad;
  2733  001710  6C19               	negf	format_number@pad,c
  2734                           
  2735                           ;format.c: 22: padchar = '0';
  2736  001712  0E30               	movlw	48
  2737  001714  6E40               	movwf	format_number@padchar,c
  2738  001716  D000               	goto	l2740
  2739  001718                     l2740:
  2740  001718  FFFF               	dw	65535	; assembler added errata NOP
  2741                           
  2742                           ;format.c: 34: di = n % base;
  2743  00171A  C016  F00F         	movff	format_number@n,___lwmod@dividend
  2744  00171E  C017  F010         	movff	format_number@n+1,___lwmod@dividend+1
  2745  001722  C018  F011         	movff	format_number@base,___lwmod@divisor
  2746  001726  6A12               	clrf	___lwmod@divisor+1,c
  2747  001728  ECC2  F012         	call	___lwmod	;wreg free
  2748  00172C  500F               	movf	?___lwmod,w,c
  2749  00172E  6E41               	movwf	format_number@di,c
  2750                           
  2751                           ;format.c: 35: buf[i++] = (di < 10 ? (unsigned char)'0' + di : (unsigned char)'A' + di -
      +                           10);
  2752  001730  0E09               	movlw	9
  2753  001732  6441               	cpfsgt	format_number@di,c
  2754  001734  D002               	goto	l2746
  2755  001736  0E37               	movlw	55
  2756  001738  D002               	goto	L7
  2757  00173A                     l2746:
  2758  00173A  FFFF               	dw	65535	; assembler added errata NOP
  2759  00173C  0E30               	movlw	48
  2760  00173E                     L7:
  2761  00173E  FFFF               	dw	65535	; assembler added errata NOP
  2762  001740  2441               	addwf	format_number@di,w,c
  2763  001742  6E3E               	movwf	_format_number$128,c
  2764  001744  6A3F               	clrf	_format_number$128+1,c
  2765  001746  0E00               	movlw	0
  2766  001748  223F               	addwfc	_format_number$128+1,f,c
  2767  00174A  D000               	goto	l2748
  2768  00174C                     l2748:
  2769  00174C  FFFF               	dw	65535	; assembler added errata NOP
  2770  00174E  5042               	movf	format_number@i,w,c
  2771  001750  0D01               	mullw	1
  2772  001752  0E1E               	movlw	low format_number@buf
  2773  001754  24F3               	addwf	prodl,w,c
  2774  001756  6ED9               	movwf	fsr2l,c
  2775  001758  0E00               	movlw	high format_number@buf
  2776  00175A  20F4               	addwfc	prodh,w,c
  2777  00175C  6EDA               	movwf	fsr2h,c
  2778  00175E  C03E  FFDF         	movff	_format_number$128,indf2
  2779  001762  2A42               	incf	format_number@i,f,c
  2780                           
  2781                           ;format.c: 37: n /= base;
  2782  001764  C016  F00F         	movff	format_number@n,___lwdiv@dividend
  2783  001768  C017  F010         	movff	format_number@n+1,___lwdiv@dividend+1
  2784  00176C  C018  F011         	movff	format_number@base,___lwdiv@divisor
  2785  001770  6A12               	clrf	___lwdiv@divisor+1,c
  2786  001772  EC58  F012         	call	___lwdiv	;wreg free
  2787  001776  C00F  F016         	movff	?___lwdiv,format_number@n
  2788  00177A  C010  F017         	movff	?___lwdiv+1,format_number@n+1
  2789                           
  2790                           ;format.c: 38: } while(n > 0);
  2791  00177E  5016               	movf	format_number@n,w,c
  2792  001780  1017               	iorwf	format_number@n+1,w,c
  2793  001782  B4D8               	btfsc	status,2,c
  2794  001784  D013               	goto	l2758
  2795  001786  D7C8               	goto	l2740
  2796                           
  2797                           ;format.c: 40: while(pad-- > i) putchar_ptr(padchar);
  2798  001788  D011               	goto	l2758
  2799  00178A                     l2756:
  2800  00178A  FFFF               	dw	65535	; assembler added errata NOP
  2801  00178C  D801               	call	u2458
  2802  00178E  D00E               	goto	l2758
  2803  001790                     u2458:
  2804  001790  FFFF               	dw	65535	; assembler added errata NOP
  2805  001792  0005               	push	
  2806  001794  6EFA               	movwf	pclath,c
  2807  001796  506E               	movf	_putchar_ptr,w,c
  2808  001798  6EFD               	movwf	tosl,c
  2809  00179A  506F               	movf	_putchar_ptr+1,w,c
  2810  00179C  6EFE               	movwf	tosh,c
  2811  00179E  50F8               	movf	tblptru,w,c
  2812  0017A0  6EFF               	movwf	tosu,c
  2813  0017A2  50FA               	movf	pclath,w,c
  2814  0017A4  5040               	movf	format_number@padchar,w,c
  2815  0017A6  0012               	return		;indir
  2816  0017A8  FFFF               	dw	65535	; errata NOP
  2817  0017AA  D000               	goto	l2758
  2818  0017AC                     l2758:
  2819  0017AC  FFFF               	dw	65535	; assembler added errata NOP
  2820  0017AE  0619               	decf	format_number@pad,f,c
  2821  0017B0  2819               	incf	format_number@pad,w,c
  2822  0017B2  6E1A               	movwf	??_format_number& (0+255),c
  2823  0017B4  5042               	movf	format_number@i,w,c
  2824  0017B6  0A80               	xorlw	128
  2825  0017B8  6E1B               	movwf	(??_format_number+1)& (0+255),c
  2826  0017BA  501A               	movf	??_format_number,w,c
  2827  0017BC  0A80               	xorlw	128
  2828  0017BE  5C1B               	subwf	(??_format_number+1)& (0+255),w,c
  2829  0017C0  A0D8               	btfss	status,0,c
  2830  0017C2  D7E3               	goto	l2756
  2831  0017C4                     l2760:
  2832  0017C4  FFFF               	dw	65535	; assembler added errata NOP
  2833                           
  2834                           ;format.c: 42: for(; i > 0; i--) putchar_ptr((char)buf[(signed short int)i - 1]);
  2835  0017C6  5042               	movf	format_number@i,w,c
  2836  0017C8  0A80               	xorlw	128
  2837  0017CA  0F7F               	addlw	-129
  2838  0017CC  A0D8               	btfss	status,0,c
  2839  0017CE  D028               	goto	l161
  2840  0017D0  D001               	goto	l2764
  2841  0017D2  D026               	goto	l161
  2842  0017D4                     l2764:
  2843  0017D4  FFFF               	dw	65535	; assembler added errata NOP
  2844  0017D6  D801               	call	u2488
  2845  0017D8  D020               	goto	l2766
  2846  0017DA                     u2488:
  2847  0017DA  FFFF               	dw	65535	; assembler added errata NOP
  2848  0017DC  0005               	push	
  2849  0017DE  6EFA               	movwf	pclath,c
  2850  0017E0  506E               	movf	_putchar_ptr,w,c
  2851  0017E2  6EFD               	movwf	tosl,c
  2852  0017E4  506F               	movf	_putchar_ptr+1,w,c
  2853  0017E6  6EFE               	movwf	tosh,c
  2854  0017E8  50F8               	movf	tblptru,w,c
  2855  0017EA  6EFF               	movwf	tosu,c
  2856  0017EC  50FA               	movf	pclath,w,c
  2857  0017EE  0EFF               	movlw	255
  2858  0017F0  6E1A               	movwf	??_format_number& (0+255),c
  2859  0017F2  0EFF               	movlw	255
  2860  0017F4  6E1B               	movwf	(??_format_number+1)& (0+255),c
  2861  0017F6  C042  F01C         	movff	format_number@i,??_format_number+2
  2862  0017FA  6A1D               	clrf	(??_format_number+3)& (0+255),c
  2863  0017FC  BE1C               	btfsc	(??_format_number+2)& (0+255),7,c
  2864  0017FE  061D               	decf	(??_format_number+3)& (0+255),f,c
  2865  001800  501A               	movf	??_format_number,w,c
  2866  001802  261C               	addwf	??_format_number+2,f,c
  2867  001804  501B               	movf	??_format_number+1,w,c
  2868  001806  221D               	addwfc	??_format_number+3,f,c
  2869  001808  0E1E               	movlw	low format_number@buf
  2870  00180A  241C               	addwf	??_format_number+2,w,c
  2871  00180C  6ED9               	movwf	fsr2l,c
  2872  00180E  0E00               	movlw	high format_number@buf
  2873  001810  201D               	addwfc	??_format_number+3,w,c
  2874  001812  6EDA               	movwf	fsr2h,c
  2875  001814  50DF               	movf	indf2,w,c
  2876  001816  0012               	return		;indir
  2877  001818  FFFF               	dw	65535	; errata NOP
  2878  00181A                     l2766:
  2879  00181A  FFFF               	dw	65535	; assembler added errata NOP
  2880  00181C  0642               	decf	format_number@i,f,c
  2881  00181E  D7D2               	goto	l2760
  2882  001820                     l161:
  2883  001820  FFFF               	dw	65535	; assembler added errata NOP
  2884  001822  0012               	return		;funcret
  2885  001824  FFFF               	dw	65535	; errata NOP
  2886  001826                     __end_of_format_number:
  2887                           	opt stack 0
  2888                           tosu	equ	0xFFF
  2889                           tosh	equ	0xFFE
  2890                           tosl	equ	0xFFD
  2891                           pclath	equ	0xFFA
  2892                           tblptru	equ	0xFF8
  2893                           tblptrh	equ	0xFF7
  2894                           tblptrl	equ	0xFF6
  2895                           tablat	equ	0xFF5
  2896                           prodh	equ	0xFF4
  2897                           prodl	equ	0xFF3
  2898                           intcon	equ	0xFF2
  2899                           intcon2	equ	0xFF1
  2900                           postinc0	equ	0xFEE
  2901                           wreg	equ	0xFE8
  2902                           indf2	equ	0xFDF
  2903                           fsr2h	equ	0xFDA
  2904                           fsr2l	equ	0xFD9
  2905                           status	equ	0xFD8
  2906                           
  2907 ;; *************** function ___lwmod *****************
  2908 ;; Defined at:
  2909 ;;		line 8 in file "/opt/microchip/xc8/v1.34/sources/common/lwmod.c"
  2910 ;; Parameters:    Size  Location     Type
  2911 ;;  dividend        2   14[COMRAM] unsigned int 
  2912 ;;  divisor         2   16[COMRAM] unsigned int 
  2913 ;; Auto vars:     Size  Location     Type
  2914 ;;  counter         1   18[COMRAM] unsigned char 
  2915 ;; Return value:  Size  Location     Type
  2916 ;;                  2   14[COMRAM] unsigned int 
  2917 ;; Registers used:
  2918 ;;		wreg, status,2, status,0
  2919 ;; Tracked objects:
  2920 ;;		On entry : 0/0
  2921 ;;		On exit  : 0/0
  2922 ;;		Unchanged: 0/0
  2923 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2924 ;;      Params:         4       0       0       0       0       0       0
  2925 ;;      Locals:         1       0       0       0       0       0       0
  2926 ;;      Temps:          0       0       0       0       0       0       0
  2927 ;;      Totals:         5       0       0       0       0       0       0
  2928 ;;Total ram usage:        5 bytes
  2929 ;; Hardware stack levels used:    1
  2930 ;; Hardware stack levels required when called:    1
  2931 ;; This function calls:
  2932 ;;		Nothing
  2933 ;; This function is called by:
  2934 ;;		_format_number
  2935 ;; This function uses a non-reentrant model
  2936 ;;
  2937                           
  2938                           	psect	text9
  2939  002584                     __ptext9:
  2940                           	opt stack 0
  2941  002584                     ___lwmod:
  2942                           	opt stack 26
  2943                           
  2944                           ;incstack = 0
  2945  002584  FFFF               	dw	65535
  2946  002586  5011               	movf	___lwmod@divisor,w,c
  2947  002588  1012               	iorwf	___lwmod@divisor+1,w,c
  2948  00258A  B4D8               	btfsc	status,2,c
  2949  00258C  D021               	goto	l941
  2950  00258E  0E01               	movlw	1
  2951  002590  6E13               	movwf	___lwmod@counter,c
  2952  002592  D006               	goto	l2678
  2953  002594                     l2676:
  2954  002594  FFFF               	dw	65535	; assembler added errata NOP
  2955  002596  90D8               	bcf	status,0,c
  2956  002598  3611               	rlcf	___lwmod@divisor,f,c
  2957  00259A  3612               	rlcf	___lwmod@divisor+1,f,c
  2958  00259C  2A13               	incf	___lwmod@counter,f,c
  2959  00259E  D000               	goto	l2678
  2960  0025A0                     l2678:
  2961  0025A0  FFFF               	dw	65535	; assembler added errata NOP
  2962  0025A2  BE12               	btfsc	___lwmod@divisor+1,7,c
  2963  0025A4  D002               	goto	l2680
  2964  0025A6  D7F6               	goto	l2676
  2965  0025A8  D000               	goto	l2680
  2966  0025AA                     l2680:
  2967  0025AA  FFFF               	dw	65535	; assembler added errata NOP
  2968  0025AC  5011               	movf	___lwmod@divisor,w,c
  2969  0025AE  5C0F               	subwf	___lwmod@dividend,w,c
  2970  0025B0  5012               	movf	___lwmod@divisor+1,w,c
  2971  0025B2  5810               	subwfb	___lwmod@dividend+1,w,c
  2972  0025B4  A0D8               	btfss	status,0,c
  2973  0025B6  D005               	goto	l2684
  2974  0025B8  5011               	movf	___lwmod@divisor,w,c
  2975  0025BA  5E0F               	subwf	___lwmod@dividend,f,c
  2976  0025BC  5012               	movf	___lwmod@divisor+1,w,c
  2977  0025BE  5A10               	subwfb	___lwmod@dividend+1,f,c
  2978  0025C0  D000               	goto	l2684
  2979  0025C2                     l2684:
  2980  0025C2  FFFF               	dw	65535	; assembler added errata NOP
  2981  0025C4  90D8               	bcf	status,0,c
  2982  0025C6  3212               	rrcf	___lwmod@divisor+1,f,c
  2983  0025C8  3211               	rrcf	___lwmod@divisor,f,c
  2984  0025CA  2E13               	decfsz	___lwmod@counter,f,c
  2985  0025CC  D7EE               	goto	l2680
  2986  0025CE  D000               	goto	l941
  2987  0025D0                     l941:
  2988  0025D0  FFFF               	dw	65535	; assembler added errata NOP
  2989  0025D2  C00F  F00F         	movff	___lwmod@dividend,?___lwmod
  2990  0025D6  C010  F010         	movff	___lwmod@dividend+1,?___lwmod+1
  2991  0025DA  0012               	return		;funcret
  2992  0025DC  FFFF               	dw	65535	; errata NOP
  2993  0025DE                     __end_of___lwmod:
  2994                           	opt stack 0
  2995                           tosu	equ	0xFFF
  2996                           tosh	equ	0xFFE
  2997                           tosl	equ	0xFFD
  2998                           pclath	equ	0xFFA
  2999                           tblptru	equ	0xFF8
  3000                           tblptrh	equ	0xFF7
  3001                           tblptrl	equ	0xFF6
  3002                           tablat	equ	0xFF5
  3003                           prodh	equ	0xFF4
  3004                           prodl	equ	0xFF3
  3005                           intcon	equ	0xFF2
  3006                           intcon2	equ	0xFF1
  3007                           postinc0	equ	0xFEE
  3008                           wreg	equ	0xFE8
  3009                           indf2	equ	0xFDF
  3010                           fsr2h	equ	0xFDA
  3011                           fsr2l	equ	0xFD9
  3012                           status	equ	0xFD8
  3013                           
  3014 ;; *************** function ___lwdiv *****************
  3015 ;; Defined at:
  3016 ;;		line 8 in file "/opt/microchip/xc8/v1.34/sources/common/lwdiv.c"
  3017 ;; Parameters:    Size  Location     Type
  3018 ;;  dividend        2   14[COMRAM] unsigned int 
  3019 ;;  divisor         2   16[COMRAM] unsigned int 
  3020 ;; Auto vars:     Size  Location     Type
  3021 ;;  quotient        2   18[COMRAM] unsigned int 
  3022 ;;  counter         1   20[COMRAM] unsigned char 
  3023 ;; Return value:  Size  Location     Type
  3024 ;;                  2   14[COMRAM] unsigned int 
  3025 ;; Registers used:
  3026 ;;		wreg, status,2, status,0
  3027 ;; Tracked objects:
  3028 ;;		On entry : 0/0
  3029 ;;		On exit  : 0/0
  3030 ;;		Unchanged: 0/0
  3031 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3032 ;;      Params:         4       0       0       0       0       0       0
  3033 ;;      Locals:         3       0       0       0       0       0       0
  3034 ;;      Temps:          0       0       0       0       0       0       0
  3035 ;;      Totals:         7       0       0       0       0       0       0
  3036 ;;Total ram usage:        7 bytes
  3037 ;; Hardware stack levels used:    1
  3038 ;; Hardware stack levels required when called:    1
  3039 ;; This function calls:
  3040 ;;		Nothing
  3041 ;; This function is called by:
  3042 ;;		_format_number
  3043 ;; This function uses a non-reentrant model
  3044 ;;
  3045                           
  3046                           	psect	text10
  3047  0024B0                     __ptext10:
  3048                           	opt stack 0
  3049  0024B0                     ___lwdiv:
  3050                           	opt stack 26
  3051                           
  3052                           ;incstack = 0
  3053  0024B0  FFFF               	dw	65535
  3054  0024B2  0E00               	movlw	0
  3055  0024B4  6E14               	movwf	___lwdiv@quotient+1,c
  3056  0024B6  0E00               	movlw	0
  3057  0024B8  6E13               	movwf	___lwdiv@quotient,c
  3058  0024BA  5011               	movf	___lwdiv@divisor,w,c
  3059  0024BC  1012               	iorwf	___lwdiv@divisor+1,w,c
  3060  0024BE  B4D8               	btfsc	status,2,c
  3061  0024C0  D025               	goto	l931
  3062  0024C2  0E01               	movlw	1
  3063  0024C4  6E15               	movwf	___lwdiv@counter,c
  3064  0024C6  D006               	goto	l2658
  3065  0024C8                     l2656:
  3066  0024C8  FFFF               	dw	65535	; assembler added errata NOP
  3067  0024CA  90D8               	bcf	status,0,c
  3068  0024CC  3611               	rlcf	___lwdiv@divisor,f,c
  3069  0024CE  3612               	rlcf	___lwdiv@divisor+1,f,c
  3070  0024D0  2A15               	incf	___lwdiv@counter,f,c
  3071  0024D2  D000               	goto	l2658
  3072  0024D4                     l2658:
  3073  0024D4  FFFF               	dw	65535	; assembler added errata NOP
  3074  0024D6  BE12               	btfsc	___lwdiv@divisor+1,7,c
  3075  0024D8  D002               	goto	l2660
  3076  0024DA  D7F6               	goto	l2656
  3077  0024DC  D000               	goto	l2660
  3078  0024DE                     l2660:
  3079  0024DE  FFFF               	dw	65535	; assembler added errata NOP
  3080  0024E0  90D8               	bcf	status,0,c
  3081  0024E2  3613               	rlcf	___lwdiv@quotient,f,c
  3082  0024E4  3614               	rlcf	___lwdiv@quotient+1,f,c
  3083  0024E6  5011               	movf	___lwdiv@divisor,w,c
  3084  0024E8  5C0F               	subwf	___lwdiv@dividend,w,c
  3085  0024EA  5012               	movf	___lwdiv@divisor+1,w,c
  3086  0024EC  5810               	subwfb	___lwdiv@dividend+1,w,c
  3087  0024EE  A0D8               	btfss	status,0,c
  3088  0024F0  D006               	goto	l2668
  3089  0024F2  5011               	movf	___lwdiv@divisor,w,c
  3090  0024F4  5E0F               	subwf	___lwdiv@dividend,f,c
  3091  0024F6  5012               	movf	___lwdiv@divisor+1,w,c
  3092  0024F8  5A10               	subwfb	___lwdiv@dividend+1,f,c
  3093  0024FA  8013               	bsf	___lwdiv@quotient,0,c
  3094  0024FC  D000               	goto	l2668
  3095  0024FE                     l2668:
  3096  0024FE  FFFF               	dw	65535	; assembler added errata NOP
  3097  002500  90D8               	bcf	status,0,c
  3098  002502  3212               	rrcf	___lwdiv@divisor+1,f,c
  3099  002504  3211               	rrcf	___lwdiv@divisor,f,c
  3100  002506  2E15               	decfsz	___lwdiv@counter,f,c
  3101  002508  D7EA               	goto	l2660
  3102  00250A  D000               	goto	l931
  3103  00250C                     l931:
  3104  00250C  FFFF               	dw	65535	; assembler added errata NOP
  3105  00250E  C013  F00F         	movff	___lwdiv@quotient,?___lwdiv
  3106  002512  C014  F010         	movff	___lwdiv@quotient+1,?___lwdiv+1
  3107  002516  0012               	return		;funcret
  3108  002518  FFFF               	dw	65535	; errata NOP
  3109  00251A                     __end_of___lwdiv:
  3110                           	opt stack 0
  3111                           tosu	equ	0xFFF
  3112                           tosh	equ	0xFFE
  3113                           tosl	equ	0xFFD
  3114                           pclath	equ	0xFFA
  3115                           tblptru	equ	0xFF8
  3116                           tblptrh	equ	0xFF7
  3117                           tblptrl	equ	0xFF6
  3118                           tablat	equ	0xFF5
  3119                           prodh	equ	0xFF4
  3120                           prodl	equ	0xFF3
  3121                           intcon	equ	0xFF2
  3122                           intcon2	equ	0xFF1
  3123                           postinc0	equ	0xFEE
  3124                           wreg	equ	0xFE8
  3125                           indf2	equ	0xFDF
  3126                           fsr2h	equ	0xFDA
  3127                           fsr2l	equ	0xFD9
  3128                           status	equ	0xFD8
  3129                           
  3130 ;; *************** function _format_double *****************
  3131 ;; Defined at:
  3132 ;;		line 74 in file "../../../lib/format.c"
  3133 ;; Parameters:    Size  Location     Type
  3134 ;;  num             3   50[BANK0 ] unsigned int 
  3135 ;; Auto vars:     Size  Location     Type
  3136 ;;  weight          3   59[BANK0 ] unsigned int 
  3137 ;;  m               2   64[BANK0 ] short 
  3138 ;;  digit           2   62[BANK0 ] short 
  3139 ;; Return value:  Size  Location     Type
  3140 ;;		None               void
  3141 ;; Registers used:
  3142 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3143 ;; Tracked objects:
  3144 ;;		On entry : 0/0
  3145 ;;		On exit  : 0/0
  3146 ;;		Unchanged: 0/0
  3147 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3148 ;;      Params:         0       3       0       0       0       0       0
  3149 ;;      Locals:         0      13       0       0       0       0       0
  3150 ;;      Temps:          0       0       0       0       0       0       0
  3151 ;;      Totals:         0      16       0       0       0       0       0
  3152 ;;Total ram usage:       16 bytes
  3153 ;; Hardware stack levels used:    1
  3154 ;; Hardware stack levels required when called:    6
  3155 ;; This function calls:
  3156 ;;		___awtoft
  3157 ;;		___ftdiv
  3158 ;;		___ftge
  3159 ;;		___ftmul
  3160 ;;		___ftsub
  3161 ;;		___fttol
  3162 ;;		_floor
  3163 ;;		_format_putchar
  3164 ;;		_log10
  3165 ;;		_output_putch
  3166 ;;		_pow
  3167 ;;		_ser_putch
  3168 ;; This function is called by:
  3169 ;;		_measure_capacitance
  3170 ;; This function uses a non-reentrant model
  3171 ;;
  3172                           
  3173                           	psect	text11
  3174  001444                     __ptext11:
  3175                           	opt stack 0
  3176  001444                     _format_double:
  3177                           	opt stack 23
  3178                           
  3179                           ;incstack = 0
  3180  001444  FFFF               	dw	65535
  3181                           
  3182                           ;format.c: 75: short m = (short)log10(num);
  3183  001446  C0B2  F055         	movff	format_double@num,log10@x
  3184  00144A  C0B3  F056         	movff	format_double@num+1,log10@x+1
  3185  00144E  C0B4  F057         	movff	format_double@num+2,log10@x+2
  3186  001452  ECEF  F012         	call	_log10
  3187  001456  C055  F05B         	movff	?_log10,___fttol@f1
  3188  00145A  C056  F05C         	movff	?_log10+1,___fttol@f1+1
  3189  00145E  C057  F05D         	movff	?_log10+2,___fttol@f1+2
  3190  001462  ECED  F00A         	call	___fttol	;wreg free
  3191  001466  C05B  F0C0         	movff	?___fttol,format_double@m
  3192  00146A  C05C  F0C1         	movff	?___fttol+1,format_double@m+1
  3193                           
  3194                           ;format.c: 76: short digit;
  3195                           ;format.c: 79: while(num > 0 + 1.19209290e-07) {
  3196  00146E  D0A2               	goto	l3492
  3197  001470                     l3474:
  3198  001470  FFFF               	dw	65535	; assembler added errata NOP
  3199                           
  3200                           ;format.c: 80: double weight = pow(10.0l, m);
  3201  001472  C0C0  F017         	movff	format_double@m,___awtoft@c
  3202  001476  C0C1  F018         	movff	format_double@m+1,___awtoft@c+1
  3203  00147A  EC62  F013         	call	___awtoft	;wreg free
  3204  00147E  C017  F0B5         	movff	?___awtoft,_format_double$911
  3205  001482  C018  F0B6         	movff	?___awtoft+1,_format_double$911+1
  3206  001486  C019  F0B7         	movff	?___awtoft+2,_format_double$911+2
  3207                           
  3208                           ;format.c: 80: double weight = pow(10.0l, m);
  3209  00148A  0E00               	movlw	0
  3210  00148C  0100               	movlb	0	; () banked
  3211  00148E  6FA1               	movwf	pow@x& (0+255),b
  3212  001490  0E20               	movlw	32
  3213  001492  0100               	movlb	0	; () banked
  3214  001494  6FA2               	movwf	(pow@x+1)& (0+255),b
  3215  001496  0E41               	movlw	65
  3216  001498  0100               	movlb	0	; () banked
  3217  00149A  6FA3               	movwf	(pow@x+2)& (0+255),b
  3218  00149C  C0B5  F0A4         	movff	_format_double$911,pow@y
  3219  0014A0  C0B6  F0A5         	movff	_format_double$911+1,pow@y+1
  3220  0014A4  C0B7  F0A6         	movff	_format_double$911+2,pow@y+2
  3221  0014A8  EC51  F009         	call	_pow	;wreg free
  3222  0014AC  C0A1  F0BB         	movff	?_pow,format_double@weight
  3223  0014B0  C0A2  F0BC         	movff	?_pow+1,format_double@weight+1
  3224  0014B4  C0A3  F0BD         	movff	?_pow+2,format_double@weight+2
  3225                           
  3226                           ;format.c: 81: digit = (short)floor(num / weight);
  3227  0014B8  C0BB  F01A         	movff	format_double@weight,___ftdiv@f2
  3228  0014BC  C0BC  F01B         	movff	format_double@weight+1,___ftdiv@f2+1
  3229  0014C0  C0BD  F01C         	movff	format_double@weight+2,___ftdiv@f2+2
  3230  0014C4  C0B2  F017         	movff	format_double@num,___ftdiv@f1
  3231  0014C8  C0B3  F018         	movff	format_double@num+1,___ftdiv@f1+1
  3232  0014CC  C0B4  F019         	movff	format_double@num+2,___ftdiv@f1+2
  3233  0014D0  EC30  F00E         	call	___ftdiv	;wreg free
  3234  0014D4  C017  F090         	movff	?___ftdiv,floor@x
  3235  0014D8  C018  F091         	movff	?___ftdiv+1,floor@x+1
  3236  0014DC  C019  F092         	movff	?___ftdiv+2,floor@x+2
  3237  0014E0  ECB0  F00D         	call	_floor	;wreg free
  3238  0014E4  C090  F0B8         	movff	?_floor,_format_double$912
  3239  0014E8  C091  F0B9         	movff	?_floor+1,_format_double$912+1
  3240  0014EC  C092  F0BA         	movff	?_floor+2,_format_double$912+2
  3241                           
  3242                           ;format.c: 81: digit = (short)floor(num / weight);
  3243  0014F0  C0B8  F05B         	movff	_format_double$912,___fttol@f1
  3244  0014F4  C0B9  F05C         	movff	_format_double$912+1,___fttol@f1+1
  3245  0014F8  C0BA  F05D         	movff	_format_double$912+2,___fttol@f1+2
  3246  0014FC  ECED  F00A         	call	___fttol	;wreg free
  3247  001500  C05B  F0BE         	movff	?___fttol,format_double@digit
  3248  001504  C05C  F0BF         	movff	?___fttol+1,format_double@digit+1
  3249                           
  3250                           ;format.c: 82: num -= (digit * weight);
  3251  001508  C0B2  F044         	movff	format_double@num,___ftsub@f1
  3252  00150C  C0B3  F045         	movff	format_double@num+1,___ftsub@f1+1
  3253  001510  C0B4  F046         	movff	format_double@num+2,___ftsub@f1+2
  3254  001514  C0BB  F029         	movff	format_double@weight,___ftmul@f2
  3255  001518  C0BC  F02A         	movff	format_double@weight+1,___ftmul@f2+1
  3256  00151C  C0BD  F02B         	movff	format_double@weight+2,___ftmul@f2+2
  3257  001520  C0BE  F017         	movff	format_double@digit,___awtoft@c
  3258  001524  C0BF  F018         	movff	format_double@digit+1,___awtoft@c+1
  3259  001528  EC62  F013         	call	___awtoft	;wreg free
  3260  00152C  C017  F026         	movff	?___awtoft,___ftmul@f1
  3261  001530  C018  F027         	movff	?___awtoft+1,___ftmul@f1+1
  3262  001534  C019  F028         	movff	?___awtoft+2,___ftmul@f1+2
  3263  001538  ECA3  F00C         	call	___ftmul	;wreg free
  3264  00153C  C026  F047         	movff	?___ftmul,___ftsub@f2
  3265  001540  C027  F048         	movff	?___ftmul+1,___ftsub@f2+1
  3266  001544  C028  F049         	movff	?___ftmul+2,___ftsub@f2+2
  3267  001548  EC3C  F013         	call	___ftsub	;wreg free
  3268  00154C  C044  F0B2         	movff	?___ftsub,format_double@num
  3269  001550  C045  F0B3         	movff	?___ftsub+1,format_double@num+1
  3270  001554  C046  F0B4         	movff	?___ftsub+2,format_double@num+2
  3271                           
  3272                           ;format.c: 83: putchar_ptr((char)('0' + digit));
  3273  001558  D801               	call	u3378
  3274  00155A  D00F               	goto	l3486
  3275  00155C                     u3378:
  3276  00155C  FFFF               	dw	65535	; assembler added errata NOP
  3277  00155E  0005               	push	
  3278  001560  6EFA               	movwf	pclath,c
  3279  001562  506E               	movf	_putchar_ptr,w,c
  3280  001564  6EFD               	movwf	tosl,c
  3281  001566  506F               	movf	_putchar_ptr+1,w,c
  3282  001568  6EFE               	movwf	tosh,c
  3283  00156A  50F8               	movf	tblptru,w,c
  3284  00156C  6EFF               	movwf	tosu,c
  3285  00156E  50FA               	movf	pclath,w,c
  3286  001570  0100               	movlb	0	; () banked
  3287  001572  51BE               	movf	format_double@digit& (0+255),w,b
  3288  001574  0F30               	addlw	48
  3289  001576  0012               	return		;indir
  3290  001578  FFFF               	dw	65535	; errata NOP
  3291  00157A                     l3486:
  3292  00157A  FFFF               	dw	65535	; assembler added errata NOP
  3293                           
  3294                           ;format.c: 84: if(m == 0)
  3295  00157C  0100               	movlb	0	; () banked
  3296  00157E  51C0               	movf	format_double@m& (0+255),w,b
  3297  001580  0100               	movlb	0	; () banked
  3298  001582  11C1               	iorwf	(format_double@m+1)& (0+255),w,b
  3299  001584  A4D8               	btfss	status,2,c
  3300  001586  D010               	goto	l3490
  3301                           
  3302                           ; BSR set to: 0
  3303                           ;format.c: 85: putchar_ptr('.');
  3304  001588  D801               	call	u3398
  3305  00158A  D00E               	goto	l3490
  3306  00158C                     u3398:
  3307  00158C  FFFF               	dw	65535	; assembler added errata NOP
  3308  00158E  0005               	push	
  3309  001590  6EFA               	movwf	pclath,c
  3310  001592  506E               	movf	_putchar_ptr,w,c
  3311  001594  6EFD               	movwf	tosl,c
  3312  001596  506F               	movf	_putchar_ptr+1,w,c
  3313  001598  6EFE               	movwf	tosh,c
  3314  00159A  50F8               	movf	tblptru,w,c
  3315  00159C  6EFF               	movwf	tosu,c
  3316  00159E  50FA               	movf	pclath,w,c
  3317  0015A0  0E2E               	movlw	46
  3318  0015A2  0012               	return		;indir
  3319  0015A4  FFFF               	dw	65535	; errata NOP
  3320  0015A6  D000               	goto	l3490
  3321  0015A8                     l3490:
  3322  0015A8  FFFF               	dw	65535	; assembler added errata NOP
  3323                           
  3324                           ;format.c: 86: m--;
  3325  0015AA  0100               	movlb	0	; () banked
  3326  0015AC  07C0               	decf	format_double@m& (0+255),f,b
  3327  0015AE  A0D8               	btfss	status,0,c
  3328  0015B0  07C1               	decf	(format_double@m+1)& (0+255),f,b
  3329  0015B2  D000               	goto	l3492
  3330  0015B4                     l3492:
  3331  0015B4  FFFF               	dw	65535	; assembler added errata NOP
  3332  0015B6  0E00               	movlw	0
  3333  0015B8  6E0F               	movwf	___ftge@ff1,c
  3334  0015BA  0E00               	movlw	0
  3335  0015BC  6E10               	movwf	___ftge@ff1+1,c
  3336  0015BE  0E34               	movlw	52
  3337  0015C0  6E11               	movwf	___ftge@ff1+2,c
  3338  0015C2  C0B2  F012         	movff	format_double@num,___ftge@ff2
  3339  0015C6  C0B3  F013         	movff	format_double@num+1,___ftge@ff2+1
  3340  0015CA  C0B4  F014         	movff	format_double@num+2,___ftge@ff2+2
  3341  0015CE  ECB6  F010         	call	___ftge
  3342  0015D2  A0D8               	btfss	status,0,c
  3343  0015D4  D74D               	goto	l3474
  3344  0015D6  0012               	return		;funcret
  3345  0015D8  FFFF               	dw	65535	; errata NOP
  3346  0015DA                     __end_of_format_double:
  3347                           	opt stack 0
  3348                           tosu	equ	0xFFF
  3349                           tosh	equ	0xFFE
  3350                           tosl	equ	0xFFD
  3351                           pclath	equ	0xFFA
  3352                           tblptru	equ	0xFF8
  3353                           tblptrh	equ	0xFF7
  3354                           tblptrl	equ	0xFF6
  3355                           tablat	equ	0xFF5
  3356                           prodh	equ	0xFF4
  3357                           prodl	equ	0xFF3
  3358                           intcon	equ	0xFF2
  3359                           intcon2	equ	0xFF1
  3360                           postinc0	equ	0xFEE
  3361                           wreg	equ	0xFE8
  3362                           indf2	equ	0xFDF
  3363                           fsr2h	equ	0xFDA
  3364                           fsr2l	equ	0xFD9
  3365                           status	equ	0xFD8
  3366                           
  3367 ;; *************** function _pow *****************
  3368 ;; Defined at:
  3369 ;;		line 5 in file "/opt/microchip/xc8/v1.34/sources/common/pow.c"
  3370 ;; Parameters:    Size  Location     Type
  3371 ;;  x               3   33[BANK0 ] short 
  3372 ;;  y               3   36[BANK0 ] short 
  3373 ;; Auto vars:     Size  Location     Type
  3374 ;;  yi              4   46[BANK0 ] unsigned long 
  3375 ;;  sign            1   45[BANK0 ] unsigned char 
  3376 ;; Return value:  Size  Location     Type
  3377 ;;                  3   33[BANK0 ] unsigned char 
  3378 ;; Registers used:
  3379 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3380 ;; Tracked objects:
  3381 ;;		On entry : 0/0
  3382 ;;		On exit  : 0/0
  3383 ;;		Unchanged: 0/0
  3384 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3385 ;;      Params:         0       6       0       0       0       0       0
  3386 ;;      Locals:         0      11       0       0       0       0       0
  3387 ;;      Temps:          0       0       0       0       0       0       0
  3388 ;;      Totals:         0      17       0       0       0       0       0
  3389 ;;Total ram usage:       17 bytes
  3390 ;; Hardware stack levels used:    1
  3391 ;; Hardware stack levels required when called:    5
  3392 ;; This function calls:
  3393 ;;		___ftge
  3394 ;;		___ftmul
  3395 ;;		___ftneg
  3396 ;;		___fttol
  3397 ;;		___lltoft
  3398 ;;		_exp
  3399 ;;		_log
  3400 ;; This function is called by:
  3401 ;;		_format_double
  3402 ;;		_format_float
  3403 ;; This function uses a non-reentrant model
  3404 ;;
  3405                           
  3406                           	psect	text12
  3407  0012A2                     __ptext12:
  3408                           	opt stack 0
  3409  0012A2                     _pow:
  3410                           	opt stack 23
  3411                           
  3412                           ;incstack = 0
  3413  0012A2  FFFF               	dw	65535
  3414  0012A4  0E00               	movlw	0
  3415  0012A6  0100               	movlb	0	; () banked
  3416  0012A8  6FAD               	movwf	pow@sign& (0+255),b
  3417                           
  3418                           ; BSR set to: 0
  3419  0012AA  0100               	movlb	0	; () banked
  3420  0012AC  51A1               	movf	pow@x& (0+255),w,b
  3421  0012AE  0100               	movlb	0	; () banked
  3422  0012B0  11A2               	iorwf	(pow@x+1)& (0+255),w,b
  3423  0012B2  0100               	movlb	0	; () banked
  3424  0012B4  11A3               	iorwf	(pow@x+2)& (0+255),w,b
  3425  0012B6  A4D8               	btfss	status,2,c
  3426  0012B8  D012               	goto	l3442
  3427                           
  3428                           ; BSR set to: 0
  3429  0012BA  0E00               	movlw	0
  3430  0012BC  6E0F               	movwf	___ftge@ff1,c
  3431  0012BE  0E00               	movlw	0
  3432  0012C0  6E10               	movwf	___ftge@ff1+1,c
  3433  0012C2  0E00               	movlw	0
  3434  0012C4  6E11               	movwf	___ftge@ff1+2,c
  3435  0012C6  C0A4  F012         	movff	pow@y,___ftge@ff2
  3436  0012CA  C0A5  F013         	movff	pow@y+1,___ftge@ff2+1
  3437  0012CE  C0A6  F014         	movff	pow@y+2,___ftge@ff2+2
  3438  0012D2  ECB6  F010         	call	___ftge	;wreg free
  3439  0012D6  A0D8               	btfss	status,0,c
  3440  0012D8  D045               	goto	L10
  3441  0012DA  D03E               	goto	u3350
  3442                           
  3443                           ; BSR set to: 0
  3444  0012DC  D0B0               	goto	l969
  3445  0012DE                     l3442:
  3446  0012DE  FFFF               	dw	65535	; assembler added errata NOP
  3447                           
  3448                           ; BSR set to: 0
  3449  0012E0  0100               	movlb	0	; () banked
  3450  0012E2  51A4               	movf	pow@y& (0+255),w,b
  3451  0012E4  0100               	movlb	0	; () banked
  3452  0012E6  11A5               	iorwf	(pow@y+1)& (0+255),w,b
  3453  0012E8  0100               	movlb	0	; () banked
  3454  0012EA  11A6               	iorwf	(pow@y+2)& (0+255),w,b
  3455  0012EC  A4D8               	btfss	status,2,c
  3456  0012EE  D009               	goto	l3448
  3457                           
  3458                           ; BSR set to: 0
  3459  0012F0  0E00               	movlw	0
  3460  0012F2  0100               	movlb	0	; () banked
  3461  0012F4  6FA1               	movwf	?_pow& (0+255),b
  3462  0012F6  0E80               	movlw	128
  3463  0012F8  0100               	movlb	0	; () banked
  3464  0012FA  6FA2               	movwf	(?_pow+1)& (0+255),b
  3465  0012FC  0E3F               	movlw	63
  3466  0012FE  D03A               	goto	L9
  3467                           
  3468                           ; BSR set to: 0
  3469  001300  D09E               	goto	l969
  3470  001302                     l3448:
  3471  001302  FFFF               	dw	65535	; assembler added errata NOP
  3472                           
  3473                           ; BSR set to: 0
  3474  001304  0100               	movlb	0	; () banked
  3475  001306  AFA3               	btfss	(pow@x+2)& (0+255),7,b
  3476  001308  D04E               	goto	l3460
  3477                           
  3478                           ; BSR set to: 0
  3479  00130A  C0A4  F05B         	movff	pow@y,___fttol@f1
  3480  00130E  C0A5  F05C         	movff	pow@y+1,___fttol@f1+1
  3481  001312  C0A6  F05D         	movff	pow@y+2,___fttol@f1+2
  3482  001316  ECED  F00A         	call	___fttol	;wreg free
  3483  00131A  C05B  F0AE         	movff	?___fttol,pow@yi
  3484  00131E  C05C  F0AF         	movff	?___fttol+1,pow@yi+1
  3485  001322  C05D  F0B0         	movff	?___fttol+2,pow@yi+2
  3486  001326  C05E  F0B1         	movff	?___fttol+3,pow@yi+3
  3487  00132A  C0AE  F017         	movff	pow@yi,___lltoft@c
  3488  00132E  C0AF  F018         	movff	pow@yi+1,___lltoft@c+1
  3489  001332  C0B0  F019         	movff	pow@yi+2,___lltoft@c+2
  3490  001336  C0B1  F01A         	movff	pow@yi+3,___lltoft@c+3
  3491  00133A  EC8D  F012         	call	___lltoft	;wreg free
  3492  00133E  0100               	movlb	0	; () banked
  3493  001340  51A4               	movf	pow@y& (0+255),w,b
  3494  001342  1817               	xorwf	?___lltoft,w,c
  3495  001344  E109               	bnz	u3350
  3496  001346  0100               	movlb	0	; () banked
  3497  001348  51A5               	movf	(pow@y+1)& (0+255),w,b
  3498  00134A  1818               	xorwf	?___lltoft+1,w,c
  3499  00134C  E105               	bnz	u3350
  3500  00134E  0100               	movlb	0	; () banked
  3501  001350  51A6               	movf	(pow@y+2)& (0+255),w,b
  3502  001352  1819               	xorwf	?___lltoft+2,w,c
  3503  001354  B4D8               	btfsc	status,2,c
  3504  001356  D012               	goto	l3456
  3505  001358                     u3350:
  3506  001358  FFFF               	dw	65535	; assembler added errata NOP
  3507                           
  3508                           ; BSR set to: 0
  3509  00135A  0E00               	movlw	0
  3510  00135C  0100               	movlb	0	; () banked
  3511  00135E  6FF2               	movwf	(_errno+1)& (0+255),b
  3512  001360  0E21               	movlw	33
  3513  001362  6FF1               	movwf	_errno& (0+255),b
  3514  001364                     L10:
  3515  001364  FFFF               	dw	65535	; assembler added errata NOP
  3516  001366  0E00               	movlw	0
  3517  001368  0100               	movlb	0	; () banked
  3518  00136A  6FA1               	movwf	?_pow& (0+255),b
  3519  00136C  0E00               	movlw	0
  3520  00136E  0100               	movlb	0	; () banked
  3521  001370  6FA2               	movwf	(?_pow+1)& (0+255),b
  3522  001372  0E00               	movlw	0
  3523  001374                     L9:
  3524  001374  FFFF               	dw	65535	; assembler added errata NOP
  3525  001376  0100               	movlb	0	; () banked
  3526  001378  6FA3               	movwf	(?_pow+2)& (0+255),b
  3527                           
  3528                           ; BSR set to: 0
  3529  00137A  D061               	goto	l969
  3530  00137C                     l3456:
  3531  00137C  FFFF               	dw	65535	; assembler added errata NOP
  3532                           
  3533                           ; BSR set to: 0
  3534  00137E  0100               	movlb	0	; () banked
  3535  001380  51AE               	movf	pow@yi& (0+255),w,b
  3536  001382  0B01               	andlw	1
  3537  001384  0100               	movlb	0	; () banked
  3538  001386  6FAD               	movwf	pow@sign& (0+255),b
  3539                           
  3540                           ; BSR set to: 0
  3541  001388  C0A1  F035         	movff	pow@x,___ftneg@f1
  3542  00138C  C0A2  F036         	movff	pow@x+1,___ftneg@f1+1
  3543  001390  C0A3  F037         	movff	pow@x+2,___ftneg@f1+2
  3544  001394  EC00  F014         	call	___ftneg	;wreg free
  3545  001398  C035  F0A1         	movff	?___ftneg,pow@x
  3546  00139C  C036  F0A2         	movff	?___ftneg+1,pow@x+1
  3547  0013A0  C037  F0A3         	movff	?___ftneg+2,pow@x+2
  3548  0013A4  D000               	goto	l3460
  3549  0013A6                     l3460:
  3550  0013A6  FFFF               	dw	65535	; assembler added errata NOP
  3551  0013A8  C0A1  F050         	movff	pow@x,log@x
  3552  0013AC  C0A2  F051         	movff	pow@x+1,log@x+1
  3553  0013B0  C0A3  F052         	movff	pow@x+2,log@x+2
  3554  0013B4  EC13  F00C         	call	_log	;wreg free
  3555  0013B8  C050  F0A7         	movff	?_log,_pow$924
  3556  0013BC  C051  F0A8         	movff	?_log+1,_pow$924+1
  3557  0013C0  C052  F0A9         	movff	?_log+2,_pow$924+2
  3558  0013C4  C0A7  F026         	movff	_pow$924,___ftmul@f1
  3559  0013C8  C0A8  F027         	movff	_pow$924+1,___ftmul@f1+1
  3560  0013CC  C0A9  F028         	movff	_pow$924+2,___ftmul@f1+2
  3561  0013D0  C0A4  F029         	movff	pow@y,___ftmul@f2
  3562  0013D4  C0A5  F02A         	movff	pow@y+1,___ftmul@f2+1
  3563  0013D8  C0A6  F02B         	movff	pow@y+2,___ftmul@f2+2
  3564  0013DC  ECA3  F00C         	call	___ftmul	;wreg free
  3565  0013E0  C026  F0AA         	movff	?___ftmul,_pow$925
  3566  0013E4  C027  F0AB         	movff	?___ftmul+1,_pow$925+1
  3567  0013E8  C028  F0AC         	movff	?___ftmul+2,_pow$925+2
  3568  0013EC  C0AA  F098         	movff	_pow$925,exp@x
  3569  0013F0  C0AB  F099         	movff	_pow$925+1,exp@x+1
  3570  0013F4  C0AC  F09A         	movff	_pow$925+2,exp@x+2
  3571  0013F8  EC4C  F007         	call	_exp	;wreg free
  3572  0013FC  C098  F0A1         	movff	?_exp,pow@x
  3573  001400  C099  F0A2         	movff	?_exp+1,pow@x+1
  3574  001404  C09A  F0A3         	movff	?_exp+2,pow@x+2
  3575  001408  0100               	movlb	0	; () banked
  3576  00140A  51AD               	movf	pow@sign& (0+255),w,b
  3577  00140C  0100               	movlb	0	; () banked
  3578  00140E  B4D8               	btfsc	status,2,c
  3579  001410  D00F               	goto	l973
  3580                           
  3581                           ; BSR set to: 0
  3582  001412  C0A1  F035         	movff	pow@x,___ftneg@f1
  3583  001416  C0A2  F036         	movff	pow@x+1,___ftneg@f1+1
  3584  00141A  C0A3  F037         	movff	pow@x+2,___ftneg@f1+2
  3585  00141E  EC00  F014         	call	___ftneg	;wreg free
  3586  001422  C035  F0A1         	movff	?___ftneg,?_pow
  3587  001426  C036  F0A2         	movff	?___ftneg+1,?_pow+1
  3588  00142A  C037  F0A3         	movff	?___ftneg+2,?_pow+2
  3589  00142E  D007               	goto	l969
  3590  001430                     l973:
  3591  001430  FFFF               	dw	65535	; assembler added errata NOP
  3592                           
  3593                           ; BSR set to: 0
  3594  001432  C0A1  F0A1         	movff	pow@x,?_pow
  3595  001436  C0A2  F0A2         	movff	pow@x+1,?_pow+1
  3596  00143A  C0A3  F0A3         	movff	pow@x+2,?_pow+2
  3597  00143E                     l969:
  3598  00143E  FFFF               	dw	65535	; assembler added errata NOP
  3599  001440  0012               	return		;funcret
  3600  001442  FFFF               	dw	65535	; errata NOP
  3601  001444                     __end_of_pow:
  3602                           	opt stack 0
  3603                           tosu	equ	0xFFF
  3604                           tosh	equ	0xFFE
  3605                           tosl	equ	0xFFD
  3606                           pclath	equ	0xFFA
  3607                           tblptru	equ	0xFF8
  3608                           tblptrh	equ	0xFF7
  3609                           tblptrl	equ	0xFF6
  3610                           tablat	equ	0xFF5
  3611                           prodh	equ	0xFF4
  3612                           prodl	equ	0xFF3
  3613                           intcon	equ	0xFF2
  3614                           intcon2	equ	0xFF1
  3615                           postinc0	equ	0xFEE
  3616                           wreg	equ	0xFE8
  3617                           indf2	equ	0xFDF
  3618                           fsr2h	equ	0xFDA
  3619                           fsr2l	equ	0xFD9
  3620                           status	equ	0xFD8
  3621                           
  3622 ;; *************** function _exp *****************
  3623 ;; Defined at:
  3624 ;;		line 12 in file "/opt/microchip/xc8/v1.34/sources/common/exp.c"
  3625 ;; Parameters:    Size  Location     Type
  3626 ;;  x               3   24[BANK0 ] unsigned char 
  3627 ;; Auto vars:     Size  Location     Type
  3628 ;;  exponent        2   30[BANK0 ] int 
  3629 ;;  sign            1   32[BANK0 ] unsigned char 
  3630 ;; Return value:  Size  Location     Type
  3631 ;;                  3   24[BANK0 ] unsigned char 
  3632 ;; Registers used:
  3633 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3634 ;; Tracked objects:
  3635 ;;		On entry : 0/0
  3636 ;;		On exit  : 0/0
  3637 ;;		Unchanged: 0/0
  3638 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3639 ;;      Params:         0       3       0       0       0       0       0
  3640 ;;      Locals:         0       6       0       0       0       0       0
  3641 ;;      Temps:          0       0       0       0       0       0       0
  3642 ;;      Totals:         0       9       0       0       0       0       0
  3643 ;;Total ram usage:        9 bytes
  3644 ;; Hardware stack levels used:    1
  3645 ;; Hardware stack levels required when called:    4
  3646 ;; This function calls:
  3647 ;;		___awtoft
  3648 ;;		___ftdiv
  3649 ;;		___ftge
  3650 ;;		___ftmul
  3651 ;;		___ftneg
  3652 ;;		___ftsub
  3653 ;;		___fttol
  3654 ;;		_eval_poly
  3655 ;;		_floor
  3656 ;;		_ldexp
  3657 ;; This function is called by:
  3658 ;;		_pow
  3659 ;; This function uses a non-reentrant model
  3660 ;;
  3661                           
  3662                           	psect	text13
  3663  000E98                     __ptext13:
  3664                           	opt stack 0
  3665  000E98                     _exp:
  3666                           	opt stack 23
  3667                           
  3668                           ;incstack = 0
  3669  000E98  FFFF               	dw	65535
  3670  000E9A  0100               	movlb	0	; () banked
  3671  000E9C  5198               	movf	exp@x& (0+255),w,b
  3672  000E9E  0100               	movlb	0	; () banked
  3673  000EA0  1199               	iorwf	(exp@x+1)& (0+255),w,b
  3674  000EA2  0100               	movlb	0	; () banked
  3675  000EA4  119A               	iorwf	(exp@x+2)& (0+255),w,b
  3676  000EA6  A4D8               	btfss	status,2,c
  3677  000EA8  D009               	goto	l3394
  3678                           
  3679                           ; BSR set to: 0
  3680  000EAA  0E00               	movlw	0
  3681  000EAC  0100               	movlb	0	; () banked
  3682  000EAE  6F98               	movwf	?_exp& (0+255),b
  3683  000EB0  0E80               	movlw	128
  3684  000EB2  0100               	movlb	0	; () banked
  3685  000EB4  6F99               	movwf	(?_exp+1)& (0+255),b
  3686  000EB6  0E3F               	movlw	63
  3687  000EB8  D037               	goto	L12
  3688                           
  3689                           ; BSR set to: 0
  3690  000EBA  D0FB               	goto	l995
  3691  000EBC                     l3394:
  3692  000EBC  FFFF               	dw	65535	; assembler added errata NOP
  3693                           
  3694                           ; BSR set to: 0
  3695  000EBE  0E72               	movlw	114
  3696  000EC0  6E0F               	movwf	___ftge@ff1,c
  3697  000EC2  0E31               	movlw	49
  3698  000EC4  6E10               	movwf	___ftge@ff1+1,c
  3699  000EC6  0E44               	movlw	68
  3700  000EC8  6E11               	movwf	___ftge@ff1+2,c
  3701  000ECA  C098  F012         	movff	exp@x,___ftge@ff2
  3702  000ECE  C099  F013         	movff	exp@x+1,___ftge@ff2+1
  3703  000ED2  C09A  F014         	movff	exp@x+2,___ftge@ff2+2
  3704  000ED6  ECB6  F010         	call	___ftge	;wreg free
  3705  000EDA  B0D8               	btfsc	status,0,c
  3706  000EDC  D00E               	goto	l3400
  3707  000EDE  0E00               	movlw	0
  3708  000EE0  0100               	movlb	0	; () banked
  3709  000EE2  6FF2               	movwf	(_errno+1)& (0+255),b
  3710  000EE4  0E22               	movlw	34
  3711  000EE6  6FF1               	movwf	_errno& (0+255),b
  3712  000EE8  0EFF               	movlw	255
  3713  000EEA  0100               	movlb	0	; () banked
  3714  000EEC  6F98               	movwf	?_exp& (0+255),b
  3715  000EEE  0E7F               	movlw	127
  3716  000EF0  0100               	movlb	0	; () banked
  3717  000EF2  6F99               	movwf	(?_exp+1)& (0+255),b
  3718  000EF4  0E7F               	movlw	127
  3719  000EF6  D018               	goto	L12
  3720                           
  3721                           ; BSR set to: 0
  3722  000EF8  D0DC               	goto	l995
  3723  000EFA                     l3400:
  3724  000EFA  FFFF               	dw	65535	; assembler added errata NOP
  3725  000EFC  C098  F00F         	movff	exp@x,___ftge@ff1
  3726  000F00  C099  F010         	movff	exp@x+1,___ftge@ff1+1
  3727  000F04  C09A  F011         	movff	exp@x+2,___ftge@ff1+2
  3728  000F08  0E49               	movlw	73
  3729  000F0A  6E12               	movwf	___ftge@ff2,c
  3730  000F0C  0E3A               	movlw	58
  3731  000F0E  6E13               	movwf	___ftge@ff2+1,c
  3732  000F10  0EC4               	movlw	196
  3733  000F12  6E14               	movwf	___ftge@ff2+2,c
  3734  000F14  ECB6  F010         	call	___ftge	;wreg free
  3735  000F18  B0D8               	btfsc	status,0,c
  3736  000F1A  D00A               	goto	l3406
  3737  000F1C  0E00               	movlw	0
  3738  000F1E  0100               	movlb	0	; () banked
  3739  000F20  6FF2               	movwf	(_errno+1)& (0+255),b
  3740  000F22  0E22               	movlw	34
  3741  000F24  6FF1               	movwf	_errno& (0+255),b
  3742  000F26  D09E               	goto	l3424
  3743  000F28                     L12:
  3744  000F28  FFFF               	dw	65535	; assembler added errata NOP
  3745  000F2A  0100               	movlb	0	; () banked
  3746  000F2C  6F9A               	movwf	(?_exp+2)& (0+255),b
  3747                           
  3748                           ; BSR set to: 0
  3749  000F2E  D0C1               	goto	l995
  3750  000F30                     l3406:
  3751  000F30  FFFF               	dw	65535	; assembler added errata NOP
  3752  000F32  0100               	movlb	0	; () banked
  3753  000F34  AF9A               	btfss	(exp@x+2)& (0+255),7,b
  3754  000F36  D002               	goto	u3260
  3755  000F38  0E01               	movlw	1
  3756  000F3A  D002               	goto	u3270
  3757  000F3C                     u3260:
  3758  000F3C  FFFF               	dw	65535	; assembler added errata NOP
  3759  000F3E  0E00               	movlw	0
  3760  000F40                     u3270:
  3761  000F40  FFFF               	dw	65535	; assembler added errata NOP
  3762  000F42  0100               	movlb	0	; () banked
  3763  000F44  6FA0               	movwf	exp@sign& (0+255),b
  3764                           
  3765                           ; BSR set to: 0
  3766  000F46  0100               	movlb	0	; () banked
  3767  000F48  51A0               	movf	exp@sign& (0+255),w,b
  3768  000F4A  0100               	movlb	0	; () banked
  3769  000F4C  B4D8               	btfsc	status,2,c
  3770  000F4E  D00E               	goto	l998
  3771                           
  3772                           ; BSR set to: 0
  3773  000F50  C098  F035         	movff	exp@x,___ftneg@f1
  3774  000F54  C099  F036         	movff	exp@x+1,___ftneg@f1+1
  3775  000F58  C09A  F037         	movff	exp@x+2,___ftneg@f1+2
  3776  000F5C  EC00  F014         	call	___ftneg	;wreg free
  3777  000F60  C035  F098         	movff	?___ftneg,exp@x
  3778  000F64  C036  F099         	movff	?___ftneg+1,exp@x+1
  3779  000F68  C037  F09A         	movff	?___ftneg+2,exp@x+2
  3780  000F6C                     l998:
  3781  000F6C  FFFF               	dw	65535	; assembler added errata NOP
  3782  000F6E  C098  F026         	movff	exp@x,___ftmul@f1
  3783  000F72  C099  F027         	movff	exp@x+1,___ftmul@f1+1
  3784  000F76  C09A  F028         	movff	exp@x+2,___ftmul@f1+2
  3785  000F7A  0EAA               	movlw	170
  3786  000F7C  6E29               	movwf	___ftmul@f2,c
  3787  000F7E  0EB8               	movlw	184
  3788  000F80  6E2A               	movwf	___ftmul@f2+1,c
  3789  000F82  0E3F               	movlw	63
  3790  000F84  6E2B               	movwf	___ftmul@f2+2,c
  3791  000F86  ECA3  F00C         	call	___ftmul	;wreg free
  3792  000F8A  C026  F098         	movff	?___ftmul,exp@x
  3793  000F8E  C027  F099         	movff	?___ftmul+1,exp@x+1
  3794  000F92  C028  F09A         	movff	?___ftmul+2,exp@x+2
  3795  000F96  C098  F090         	movff	exp@x,floor@x
  3796  000F9A  C099  F091         	movff	exp@x+1,floor@x+1
  3797  000F9E  C09A  F092         	movff	exp@x+2,floor@x+2
  3798  000FA2  ECB0  F00D         	call	_floor	;wreg free
  3799  000FA6  C090  F09B         	movff	?_floor,_exp$926
  3800  000FAA  C091  F09C         	movff	?_floor+1,_exp$926+1
  3801  000FAE  C092  F09D         	movff	?_floor+2,_exp$926+2
  3802  000FB2  C09B  F05B         	movff	_exp$926,___fttol@f1
  3803  000FB6  C09C  F05C         	movff	_exp$926+1,___fttol@f1+1
  3804  000FBA  C09D  F05D         	movff	_exp$926+2,___fttol@f1+2
  3805  000FBE  ECED  F00A         	call	___fttol	;wreg free
  3806  000FC2  C05B  F09E         	movff	?___fttol,exp@exponent
  3807  000FC6  C05C  F09F         	movff	?___fttol+1,exp@exponent+1
  3808  000FCA  C098  F044         	movff	exp@x,___ftsub@f1
  3809  000FCE  C099  F045         	movff	exp@x+1,___ftsub@f1+1
  3810  000FD2  C09A  F046         	movff	exp@x+2,___ftsub@f1+2
  3811  000FD6  C09E  F017         	movff	exp@exponent,___awtoft@c
  3812  000FDA  C09F  F018         	movff	exp@exponent+1,___awtoft@c+1
  3813  000FDE  EC62  F013         	call	___awtoft	;wreg free
  3814  000FE2  C017  F047         	movff	?___awtoft,___ftsub@f2
  3815  000FE6  C018  F048         	movff	?___awtoft+1,___ftsub@f2+1
  3816  000FEA  C019  F049         	movff	?___awtoft+2,___ftsub@f2+2
  3817  000FEE  EC3C  F013         	call	___ftsub	;wreg free
  3818  000FF2  C044  F098         	movff	?___ftsub,exp@x
  3819  000FF6  C045  F099         	movff	?___ftsub+1,exp@x+1
  3820  000FFA  C046  F09A         	movff	?___ftsub+2,exp@x+2
  3821  000FFE  C098  F044         	movff	exp@x,eval_poly@x
  3822  001002  C099  F045         	movff	exp@x+1,eval_poly@x+1
  3823  001006  C09A  F046         	movff	exp@x+2,eval_poly@x+2
  3824  00100A  0E01               	movlw	low exp@coeff
  3825  00100C  6E47               	movwf	eval_poly@d,c
  3826  00100E  0E06               	movlw	high exp@coeff
  3827  001010  6E48               	movwf	eval_poly@d+1,c
  3828  001012  0E00               	movlw	0
  3829  001014  6E4A               	movwf	eval_poly@n+1,c
  3830  001016  0E09               	movlw	9
  3831  001018  6E49               	movwf	eval_poly@n,c
  3832  00101A  ECAA  F00E         	call	_eval_poly	;wreg free
  3833  00101E  C044  F050         	movff	?_eval_poly,ldexp@value
  3834  001022  C045  F051         	movff	?_eval_poly+1,ldexp@value+1
  3835  001026  C046  F052         	movff	?_eval_poly+2,ldexp@value+2
  3836  00102A  C09E  F053         	movff	exp@exponent,ldexp@newexp
  3837  00102E  C09F  F054         	movff	exp@exponent+1,ldexp@newexp+1
  3838  001032  EC1E  F00F         	call	_ldexp	;wreg free
  3839  001036  C050  F098         	movff	?_ldexp,exp@x
  3840  00103A  C051  F099         	movff	?_ldexp+1,exp@x+1
  3841  00103E  C052  F09A         	movff	?_ldexp+2,exp@x+2
  3842  001042  0100               	movlb	0	; () banked
  3843  001044  51A0               	movf	exp@sign& (0+255),w,b
  3844  001046  0100               	movlb	0	; () banked
  3845  001048  B4D8               	btfsc	status,2,c
  3846  00104A  D02C               	goto	l999
  3847                           
  3848                           ; BSR set to: 0
  3849  00104C  0100               	movlb	0	; () banked
  3850  00104E  2998               	incf	exp@x& (0+255),w,b
  3851  001050  E113               	bnz	l3428
  3852  001052  0E7F               	movlw	127
  3853  001054  0100               	movlb	0	; () banked
  3854  001056  1999               	xorwf	(exp@x+1)& (0+255),w,b
  3855  001058  E10F               	bnz	l3428
  3856  00105A  0E7F               	movlw	127
  3857  00105C  0100               	movlb	0	; () banked
  3858  00105E  199A               	xorwf	(exp@x+2)& (0+255),w,b
  3859  001060  A4D8               	btfss	status,2,c
  3860  001062  D00A               	goto	l3428
  3861  001064                     l3424:
  3862  001064  FFFF               	dw	65535	; assembler added errata NOP
  3863                           
  3864                           ; BSR set to: 0
  3865  001066  0E00               	movlw	0
  3866  001068  0100               	movlb	0	; () banked
  3867  00106A  6F98               	movwf	?_exp& (0+255),b
  3868  00106C  0E00               	movlw	0
  3869  00106E  0100               	movlb	0	; () banked
  3870  001070  6F99               	movwf	(?_exp+1)& (0+255),b
  3871  001072  0E00               	movlw	0
  3872  001074  D759               	goto	L12
  3873                           
  3874                           ; BSR set to: 0
  3875  001076  D01D               	goto	l995
  3876  001078                     l3428:
  3877  001078  FFFF               	dw	65535	; assembler added errata NOP
  3878                           
  3879                           ; BSR set to: 0
  3880  00107A  0E00               	movlw	0
  3881  00107C  6E17               	movwf	___ftdiv@f1,c
  3882  00107E  0E80               	movlw	128
  3883  001080  6E18               	movwf	___ftdiv@f1+1,c
  3884  001082  0E3F               	movlw	63
  3885  001084  6E19               	movwf	___ftdiv@f1+2,c
  3886  001086  C098  F01A         	movff	exp@x,___ftdiv@f2
  3887  00108A  C099  F01B         	movff	exp@x+1,___ftdiv@f2+1
  3888  00108E  C09A  F01C         	movff	exp@x+2,___ftdiv@f2+2
  3889  001092  EC30  F00E         	call	___ftdiv	;wreg free
  3890  001096  C017  F098         	movff	?___ftdiv,?_exp
  3891  00109A  C018  F099         	movff	?___ftdiv+1,?_exp+1
  3892  00109E  C019  F09A         	movff	?___ftdiv+2,?_exp+2
  3893  0010A2  D007               	goto	l995
  3894  0010A4                     l999:
  3895  0010A4  FFFF               	dw	65535	; assembler added errata NOP
  3896                           
  3897                           ; BSR set to: 0
  3898  0010A6  C098  F098         	movff	exp@x,?_exp
  3899  0010AA  C099  F099         	movff	exp@x+1,?_exp+1
  3900  0010AE  C09A  F09A         	movff	exp@x+2,?_exp+2
  3901  0010B2                     l995:
  3902  0010B2  FFFF               	dw	65535	; assembler added errata NOP
  3903  0010B4  0012               	return		;funcret
  3904  0010B6  FFFF               	dw	65535	; errata NOP
  3905  0010B8                     __end_of_exp:
  3906                           	opt stack 0
  3907                           tosu	equ	0xFFF
  3908                           tosh	equ	0xFFE
  3909                           tosl	equ	0xFFD
  3910                           pclath	equ	0xFFA
  3911                           tblptru	equ	0xFF8
  3912                           tblptrh	equ	0xFF7
  3913                           tblptrl	equ	0xFF6
  3914                           tablat	equ	0xFF5
  3915                           prodh	equ	0xFF4
  3916                           prodl	equ	0xFF3
  3917                           intcon	equ	0xFF2
  3918                           intcon2	equ	0xFF1
  3919                           postinc0	equ	0xFEE
  3920                           wreg	equ	0xFE8
  3921                           indf2	equ	0xFDF
  3922                           fsr2h	equ	0xFDA
  3923                           fsr2l	equ	0xFD9
  3924                           status	equ	0xFD8
  3925                           
  3926 ;; *************** function _ldexp *****************
  3927 ;; Defined at:
  3928 ;;		line 277 in file "/opt/microchip/xc8/v1.34/sources/common/frexp.c"
  3929 ;; Parameters:    Size  Location     Type
  3930 ;;  value           3   79[COMRAM] unsigned char 
  3931 ;;  newexp          2   82[COMRAM] int 
  3932 ;; Auto vars:     Size  Location     Type
  3933 ;;		None
  3934 ;; Return value:  Size  Location     Type
  3935 ;;                  3   79[COMRAM] int 
  3936 ;; Registers used:
  3937 ;;		wreg, status,2, status,0
  3938 ;; Tracked objects:
  3939 ;;		On entry : 0/0
  3940 ;;		On exit  : 0/0
  3941 ;;		Unchanged: 0/0
  3942 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3943 ;;      Params:         5       0       0       0       0       0       0
  3944 ;;      Locals:         0       0       0       0       0       0       0
  3945 ;;      Temps:          2       0       0       0       0       0       0
  3946 ;;      Totals:         7       0       0       0       0       0       0
  3947 ;;Total ram usage:        7 bytes
  3948 ;; Hardware stack levels used:    1
  3949 ;; Hardware stack levels required when called:    1
  3950 ;; This function calls:
  3951 ;;		Nothing
  3952 ;; This function is called by:
  3953 ;;		_exp
  3954 ;; This function uses a non-reentrant model
  3955 ;;
  3956                           
  3957                           	psect	text14
  3958  001E3C                     __ptext14:
  3959                           	opt stack 0
  3960  001E3C                     _ldexp:
  3961                           	opt stack 25
  3962                           
  3963                           ;incstack = 0
  3964  001E3C  FFFF               	dw	65535
  3965  001E3E  5050               	movf	ldexp@value,w,c
  3966  001E40  1051               	iorwf	ldexp@value+1,w,c
  3967  001E42  1052               	iorwf	ldexp@value+2,w,c
  3968  001E44  A4D8               	btfss	status,2,c
  3969  001E46  D002               	goto	l2574
  3970  001E48  D020               	goto	L13
  3971  001E4A  D066               	goto	l732
  3972  001E4C                     l2574:
  3973  001E4C  FFFF               	dw	65535	; assembler added errata NOP
  3974  001E4E  5052               	movf	ldexp@value+2,w,c
  3975  001E50  0B7F               	andlw	127
  3976  001E52  6E55               	movwf	??_ldexp& (0+255),c
  3977  001E54  6A56               	clrf	(??_ldexp+1)& (0+255),c
  3978  001E56  90D8               	bcf	status,0,c
  3979  001E58  3655               	rlcf	??_ldexp,f,c
  3980  001E5A  3656               	rlcf	??_ldexp+1,f,c
  3981  001E5C  5055               	movf	??_ldexp,w,c
  3982  001E5E  2653               	addwf	ldexp@newexp,f,c
  3983  001E60  5056               	movf	??_ldexp+1,w,c
  3984  001E62  2254               	addwfc	ldexp@newexp+1,f,c
  3985  001E64  AE51               	btfss	ldexp@value+1,7,c
  3986  001E66  D003               	goto	u2190
  3987  001E68  6A55               	clrf	??_ldexp& (0+255),c
  3988  001E6A  2A55               	incf	??_ldexp& (0+255),f,c
  3989  001E6C  D002               	goto	u2198
  3990  001E6E                     u2190:
  3991  001E6E  FFFF               	dw	65535	; assembler added errata NOP
  3992  001E70  6A55               	clrf	??_ldexp& (0+255),c
  3993  001E72                     u2198:
  3994  001E72  FFFF               	dw	65535	; assembler added errata NOP
  3995  001E74  5055               	movf	??_ldexp,w,c
  3996  001E76  2653               	addwf	ldexp@newexp,f,c
  3997  001E78  0E00               	movlw	0
  3998  001E7A  2254               	addwfc	ldexp@newexp+1,f,c
  3999  001E7C  AE54               	btfss	ldexp@newexp+1,7,c
  4000  001E7E  D00E               	goto	l2582
  4001  001E80  0E00               	movlw	0
  4002  001E82  0100               	movlb	0	; () banked
  4003  001E84  6FF2               	movwf	(_errno+1)& (0+255),b
  4004  001E86  0E22               	movlw	34
  4005  001E88  6FF1               	movwf	_errno& (0+255),b
  4006  001E8A                     L13:
  4007  001E8A  FFFF               	dw	65535	; assembler added errata NOP
  4008  001E8C  0E00               	movlw	0
  4009  001E8E  6E50               	movwf	?_ldexp,c
  4010  001E90  0E00               	movlw	0
  4011  001E92  6E51               	movwf	?_ldexp+1,c
  4012  001E94  0E00               	movlw	0
  4013  001E96  D01D               	goto	L15
  4014                           
  4015                           ; BSR set to: 0
  4016  001E98  D03F               	goto	l732
  4017                           
  4018                           ; BSR set to: 0
  4019  001E9A  D036               	goto	l2600
  4020  001E9C                     l2582:
  4021  001E9C  FFFF               	dw	65535	; assembler added errata NOP
  4022  001E9E  BE54               	btfsc	ldexp@newexp+1,7,c
  4023  001EA0  D01C               	goto	l2598
  4024  001EA2  0454               	decf	ldexp@newexp+1,w,c
  4025  001EA4  A0D8               	btfss	status,0,c
  4026  001EA6  D019               	goto	l2598
  4027  001EA8  0E00               	movlw	0
  4028  001EAA  0100               	movlb	0	; () banked
  4029  001EAC  6FF2               	movwf	(_errno+1)& (0+255),b
  4030  001EAE  0E22               	movlw	34
  4031  001EB0  6FF1               	movwf	_errno& (0+255),b
  4032                           
  4033                           ; BSR set to: 0
  4034  001EB2  AE52               	btfss	ldexp@value+2,7,c
  4035  001EB4  D008               	goto	l2594
  4036                           
  4037                           ; BSR set to: 0
  4038  001EB6  0EFF               	movlw	255
  4039  001EB8  6E50               	movwf	?_ldexp,c
  4040  001EBA  0E7F               	movlw	127
  4041  001EBC  6E51               	movwf	?_ldexp+1,c
  4042  001EBE  0EFF               	movlw	255
  4043  001EC0  D008               	goto	L15
  4044                           
  4045                           ; BSR set to: 0
  4046  001EC2  D02A               	goto	l732
  4047                           
  4048                           ; BSR set to: 0
  4049  001EC4  D021               	goto	l2600
  4050  001EC6                     l2594:
  4051  001EC6  FFFF               	dw	65535	; assembler added errata NOP
  4052                           
  4053                           ; BSR set to: 0
  4054  001EC8  0EFF               	movlw	255
  4055  001ECA  6E50               	movwf	?_ldexp,c
  4056  001ECC  0E7F               	movlw	127
  4057  001ECE  6E51               	movwf	?_ldexp+1,c
  4058  001ED0  0E7F               	movlw	127
  4059  001ED2                     L15:
  4060  001ED2  FFFF               	dw	65535	; assembler added errata NOP
  4061  001ED4  6E52               	movwf	?_ldexp+2,c
  4062                           
  4063                           ; BSR set to: 0
  4064  001ED6  D020               	goto	l732
  4065                           
  4066                           ; BSR set to: 0
  4067  001ED8  D017               	goto	l2600
  4068  001EDA                     l2598:
  4069  001EDA  FFFF               	dw	65535	; assembler added errata NOP
  4070  001EDC  3454               	rlcf	ldexp@newexp+1,w,c
  4071  001EDE  3054               	rrcf	ldexp@newexp+1,w,c
  4072  001EE0  6E56               	movwf	(??_ldexp+1)& (0+255),c
  4073  001EE2  3053               	rrcf	ldexp@newexp,w,c
  4074  001EE4  6E55               	movwf	??_ldexp& (0+255),c
  4075  001EE6  5052               	movf	ldexp@value+2,w,c
  4076  001EE8  1855               	xorwf	??_ldexp,w,c
  4077  001EEA  0B80               	andlw	-128
  4078  001EEC  1855               	xorwf	??_ldexp,w,c
  4079  001EEE  6E52               	movwf	ldexp@value+2,c
  4080  001EF0  C053  F055         	movff	ldexp@newexp,??_ldexp
  4081  001EF4  0E01               	movlw	1
  4082  001EF6  1655               	andwf	??_ldexp,f,c
  4083  001EF8  3255               	rrcf	??_ldexp,f,c
  4084  001EFA  3255               	rrcf	??_ldexp,f,c
  4085  001EFC  5051               	movf	ldexp@value+1,w,c
  4086  001EFE  1855               	xorwf	??_ldexp,w,c
  4087  001F00  0B7F               	andlw	-129
  4088  001F02  1855               	xorwf	??_ldexp,w,c
  4089  001F04  6E51               	movwf	ldexp@value+1,c
  4090  001F06  D000               	goto	l2600
  4091  001F08                     l2600:
  4092  001F08  FFFF               	dw	65535	; assembler added errata NOP
  4093  001F0A  C050  F050         	movff	ldexp@value,?_ldexp
  4094  001F0E  C051  F051         	movff	ldexp@value+1,?_ldexp+1
  4095  001F12  C052  F052         	movff	ldexp@value+2,?_ldexp+2
  4096  001F16  D000               	goto	l732
  4097  001F18                     l732:
  4098  001F18  FFFF               	dw	65535	; assembler added errata NOP
  4099  001F1A  0012               	return		;funcret
  4100  001F1C  FFFF               	dw	65535	; errata NOP
  4101  001F1E                     __end_of_ldexp:
  4102                           	opt stack 0
  4103                           tosu	equ	0xFFF
  4104                           tosh	equ	0xFFE
  4105                           tosl	equ	0xFFD
  4106                           pclath	equ	0xFFA
  4107                           tblptru	equ	0xFF8
  4108                           tblptrh	equ	0xFF7
  4109                           tblptrl	equ	0xFF6
  4110                           tablat	equ	0xFF5
  4111                           prodh	equ	0xFF4
  4112                           prodl	equ	0xFF3
  4113                           intcon	equ	0xFF2
  4114                           intcon2	equ	0xFF1
  4115                           postinc0	equ	0xFEE
  4116                           wreg	equ	0xFE8
  4117                           indf2	equ	0xFDF
  4118                           fsr2h	equ	0xFDA
  4119                           fsr2l	equ	0xFD9
  4120                           status	equ	0xFD8
  4121                           
  4122 ;; *************** function _floor *****************
  4123 ;; Defined at:
  4124 ;;		line 13 in file "/opt/microchip/xc8/v1.34/sources/common/floor.c"
  4125 ;; Parameters:    Size  Location     Type
  4126 ;;  x               3   16[BANK0 ] int 
  4127 ;; Auto vars:     Size  Location     Type
  4128 ;;  i               3   19[BANK0 ] int 
  4129 ;;  expon           2   22[BANK0 ] int 
  4130 ;; Return value:  Size  Location     Type
  4131 ;;                  3   16[BANK0 ] int 
  4132 ;; Registers used:
  4133 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4134 ;; Tracked objects:
  4135 ;;		On entry : 0/0
  4136 ;;		On exit  : 0/0
  4137 ;;		Unchanged: 0/0
  4138 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4139 ;;      Params:         0       3       0       0       0       0       0
  4140 ;;      Locals:         0       5       0       0       0       0       0
  4141 ;;      Temps:          0       0       0       0       0       0       0
  4142 ;;      Totals:         0       8       0       0       0       0       0
  4143 ;;Total ram usage:        8 bytes
  4144 ;; Hardware stack levels used:    1
  4145 ;; Hardware stack levels required when called:    3
  4146 ;; This function calls:
  4147 ;;		___altoft
  4148 ;;		___ftadd
  4149 ;;		___ftge
  4150 ;;		___fttol
  4151 ;;		_frexp
  4152 ;; This function is called by:
  4153 ;;		_format_double
  4154 ;;		_exp
  4155 ;;		_format_float
  4156 ;; This function uses a non-reentrant model
  4157 ;;
  4158                           
  4159                           	psect	text15
  4160  001B60                     __ptext15:
  4161                           	opt stack 0
  4162  001B60                     _floor:
  4163                           	opt stack 23
  4164                           
  4165                           ;incstack = 0
  4166  001B60  FFFF               	dw	65535
  4167  001B62  C090  F00F         	movff	floor@x,frexp@value
  4168  001B66  C091  F010         	movff	floor@x+1,frexp@value+1
  4169  001B6A  C092  F011         	movff	floor@x+2,frexp@value+2
  4170  001B6E  0E96               	movlw	low floor@expon
  4171  001B70  6E12               	movwf	frexp@eptr,c
  4172  001B72  0E00               	movlw	high floor@expon
  4173  001B74  6E13               	movwf	frexp@eptr+1,c
  4174  001B76  EC57  F011         	call	_frexp	;wreg free
  4175  001B7A  0100               	movlb	0	; () banked
  4176  001B7C  AF97               	btfss	(floor@expon+1)& (0+255),7,b
  4177  001B7E  D018               	goto	l3378
  4178                           
  4179                           ; BSR set to: 0
  4180  001B80  0100               	movlb	0	; () banked
  4181  001B82  AF92               	btfss	(floor@x+2)& (0+255),7,b
  4182  001B84  D009               	goto	l3374
  4183                           
  4184                           ; BSR set to: 0
  4185  001B86  0E00               	movlw	0
  4186  001B88  0100               	movlb	0	; () banked
  4187  001B8A  6F90               	movwf	?_floor& (0+255),b
  4188  001B8C  0E80               	movlw	128
  4189  001B8E  0100               	movlb	0	; () banked
  4190  001B90  6F91               	movwf	(?_floor+1)& (0+255),b
  4191  001B92  0EBF               	movlw	191
  4192  001B94  D009               	goto	L16
  4193                           
  4194                           ; BSR set to: 0
  4195  001B96  D061               	goto	l700
  4196  001B98                     l3374:
  4197  001B98  FFFF               	dw	65535	; assembler added errata NOP
  4198                           
  4199                           ; BSR set to: 0
  4200  001B9A  0E00               	movlw	0
  4201  001B9C  0100               	movlb	0	; () banked
  4202  001B9E  6F90               	movwf	?_floor& (0+255),b
  4203  001BA0  0E00               	movlw	0
  4204  001BA2  0100               	movlb	0	; () banked
  4205  001BA4  6F91               	movwf	(?_floor+1)& (0+255),b
  4206  001BA6  0E00               	movlw	0
  4207  001BA8                     L16:
  4208  001BA8  FFFF               	dw	65535	; assembler added errata NOP
  4209  001BAA  0100               	movlb	0	; () banked
  4210  001BAC  6F92               	movwf	(?_floor+2)& (0+255),b
  4211                           
  4212                           ; BSR set to: 0
  4213  001BAE  D055               	goto	l700
  4214  001BB0                     l3378:
  4215  001BB0  FFFF               	dw	65535	; assembler added errata NOP
  4216                           
  4217                           ; BSR set to: 0
  4218  001BB2  0100               	movlb	0	; () banked
  4219  001BB4  5197               	movf	(floor@expon+1)& (0+255),w,b
  4220  001BB6  E105               	bnz	u3210
  4221  001BB8  0E15               	movlw	21
  4222  001BBA  0100               	movlb	0	; () banked
  4223  001BBC  5D96               	subwf	floor@expon& (0+255),w,b
  4224  001BBE  A0D8               	btfss	status,0,c
  4225  001BC0  D007               	goto	l3382
  4226  001BC2                     u3210:
  4227                           
  4228                           ; BSR set to: 0
  4229  001BC2  C090  F090         	movff	floor@x,?_floor
  4230  001BC6  C091  F091         	movff	floor@x+1,?_floor+1
  4231  001BCA  C092  F092         	movff	floor@x+2,?_floor+2
  4232  001BCE  D045               	goto	l700
  4233  001BD0                     l3382:
  4234  001BD0  FFFF               	dw	65535	; assembler added errata NOP
  4235                           
  4236                           ; BSR set to: 0
  4237  001BD2  C090  F05B         	movff	floor@x,___fttol@f1
  4238  001BD6  C091  F05C         	movff	floor@x+1,___fttol@f1+1
  4239  001BDA  C092  F05D         	movff	floor@x+2,___fttol@f1+2
  4240  001BDE  ECED  F00A         	call	___fttol	;wreg free
  4241  001BE2  C05B  F086         	movff	?___fttol,___altoft@c
  4242  001BE6  C05C  F087         	movff	?___fttol+1,___altoft@c+1
  4243  001BEA  C05D  F088         	movff	?___fttol+2,___altoft@c+2
  4244  001BEE  C05E  F089         	movff	?___fttol+3,___altoft@c+3
  4245  001BF2  EC60  F010         	call	___altoft	;wreg free
  4246  001BF6  C086  F093         	movff	?___altoft,floor@i
  4247  001BFA  C087  F094         	movff	?___altoft+1,floor@i+1
  4248  001BFE  C088  F095         	movff	?___altoft+2,floor@i+2
  4249  001C02  C090  F00F         	movff	floor@x,___ftge@ff1
  4250  001C06  C091  F010         	movff	floor@x+1,___ftge@ff1+1
  4251  001C0A  C092  F011         	movff	floor@x+2,___ftge@ff1+2
  4252  001C0E  C093  F012         	movff	floor@i,___ftge@ff2
  4253  001C12  C094  F013         	movff	floor@i+1,___ftge@ff2+1
  4254  001C16  C095  F014         	movff	floor@i+2,___ftge@ff2+2
  4255  001C1A  ECB6  F010         	call	___ftge	;wreg free
  4256  001C1E  B0D8               	btfsc	status,0,c
  4257  001C20  D015               	goto	l702
  4258  001C22  C093  F038         	movff	floor@i,___ftadd@f1
  4259  001C26  C094  F039         	movff	floor@i+1,___ftadd@f1+1
  4260  001C2A  C095  F03A         	movff	floor@i+2,___ftadd@f1+2
  4261  001C2E  0E00               	movlw	0
  4262  001C30  6E3B               	movwf	___ftadd@f2,c
  4263  001C32  0E80               	movlw	128
  4264  001C34  6E3C               	movwf	___ftadd@f2+1,c
  4265  001C36  0EBF               	movlw	191
  4266  001C38  6E3D               	movwf	___ftadd@f2+2,c
  4267  001C3A  EC5C  F008         	call	___ftadd	;wreg free
  4268  001C3E  C038  F090         	movff	?___ftadd,?_floor
  4269  001C42  C039  F091         	movff	?___ftadd+1,?_floor+1
  4270  001C46  C03A  F092         	movff	?___ftadd+2,?_floor+2
  4271  001C4A  D007               	goto	l700
  4272  001C4C                     l702:
  4273  001C4C  FFFF               	dw	65535	; assembler added errata NOP
  4274  001C4E  C093  F090         	movff	floor@i,?_floor
  4275  001C52  C094  F091         	movff	floor@i+1,?_floor+1
  4276  001C56  C095  F092         	movff	floor@i+2,?_floor+2
  4277  001C5A                     l700:
  4278  001C5A  FFFF               	dw	65535	; assembler added errata NOP
  4279  001C5C  0012               	return		;funcret
  4280  001C5E  FFFF               	dw	65535	; errata NOP
  4281  001C60                     __end_of_floor:
  4282                           	opt stack 0
  4283                           tosu	equ	0xFFF
  4284                           tosh	equ	0xFFE
  4285                           tosl	equ	0xFFD
  4286                           pclath	equ	0xFFA
  4287                           tblptru	equ	0xFF8
  4288                           tblptrh	equ	0xFF7
  4289                           tblptrl	equ	0xFF6
  4290                           tablat	equ	0xFF5
  4291                           prodh	equ	0xFF4
  4292                           prodl	equ	0xFF3
  4293                           intcon	equ	0xFF2
  4294                           intcon2	equ	0xFF1
  4295                           postinc0	equ	0xFEE
  4296                           wreg	equ	0xFE8
  4297                           indf2	equ	0xFDF
  4298                           fsr2h	equ	0xFDA
  4299                           fsr2l	equ	0xFD9
  4300                           status	equ	0xFD8
  4301                           
  4302 ;; *************** function ___fttol *****************
  4303 ;; Defined at:
  4304 ;;		line 44 in file "/opt/microchip/xc8/v1.34/sources/common/fttol.c"
  4305 ;; Parameters:    Size  Location     Type
  4306 ;;  f1              3   90[COMRAM] float 
  4307 ;; Auto vars:     Size  Location     Type
  4308 ;;  lval            4    1[BANK0 ] unsigned long 
  4309 ;;  exp1            1    5[BANK0 ] unsigned char 
  4310 ;;  sign1           1    0[BANK0 ] unsigned char 
  4311 ;; Return value:  Size  Location     Type
  4312 ;;                  4   90[COMRAM] long 
  4313 ;; Registers used:
  4314 ;;		wreg, status,2, status,0
  4315 ;; Tracked objects:
  4316 ;;		On entry : 0/0
  4317 ;;		On exit  : 0/0
  4318 ;;		Unchanged: 0/0
  4319 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4320 ;;      Params:         4       0       0       0       0       0       0
  4321 ;;      Locals:         0       6       0       0       0       0       0
  4322 ;;      Temps:          5       0       0       0       0       0       0
  4323 ;;      Totals:         9       6       0       0       0       0       0
  4324 ;;Total ram usage:       15 bytes
  4325 ;; Hardware stack levels used:    1
  4326 ;; Hardware stack levels required when called:    1
  4327 ;; This function calls:
  4328 ;;		Nothing
  4329 ;; This function is called by:
  4330 ;;		_format_double
  4331 ;;		_measure_capacitance
  4332 ;;		_measure_inductance
  4333 ;;		_floor
  4334 ;;		_pow
  4335 ;;		_exp
  4336 ;;		_format_float
  4337 ;; This function uses a non-reentrant model
  4338 ;;
  4339                           
  4340                           	psect	text16
  4341  0015DA                     __ptext16:
  4342                           	opt stack 0
  4343  0015DA                     ___fttol:
  4344                           	opt stack 28
  4345                           
  4346                           ;incstack = 0
  4347  0015DA  FFFF               	dw	65535
  4348  0015DC  C05D  F05F         	movff	___fttol@f1+2,??___fttol
  4349  0015E0  6A60               	clrf	(??___fttol+1)& (0+255),c
  4350  0015E2  6A61               	clrf	(??___fttol+2)& (0+255),c
  4351  0015E4  345C               	rlcf	___fttol@f1+1,w,c
  4352  0015E6  365F               	rlcf	??___fttol& (0+255),f,c
  4353  0015E8  E301               	bnc	u3111
  4354  0015EA  8060               	bsf	(??___fttol+1)& (0+255),0,c
  4355  0015EC                     u3111:
  4356  0015EC  505F               	movf	??___fttol,w,c
  4357  0015EE  0100               	movlb	0	; () banked
  4358  0015F0  6F85               	movwf	___fttol@exp1& (0+255),b
  4359  0015F2  0100               	movlb	0	; () banked
  4360  0015F4  5185               	movf	___fttol@exp1& (0+255),w,b
  4361  0015F6  A4D8               	btfss	status,2,c
  4362  0015F8  D002               	goto	l3324
  4363  0015FA  D049               	goto	l3348
  4364                           
  4365                           ; BSR set to: 0
  4366                           
  4367                           ; BSR set to: 0
  4368  0015FC  D07F               	goto	l813
  4369  0015FE                     l3324:
  4370  0015FE  FFFF               	dw	65535	; assembler added errata NOP
  4371                           
  4372                           ; BSR set to: 0
  4373  001600  0E17               	movlw	23
  4374  001602  6E5F               	movwf	??___fttol& (0+255),c
  4375  001604  C05B  F060         	movff	___fttol@f1,??___fttol+1
  4376  001608  C05C  F061         	movff	___fttol@f1+1,??___fttol+2
  4377  00160C  C05D  F062         	movff	___fttol@f1+2,??___fttol+3
  4378  001610  285F               	incf	??___fttol,w,c
  4379  001612  6E63               	movwf	(??___fttol+4)& (0+255),c
  4380  001614  D005               	goto	u3130
  4381  001616                     u3135:
  4382  001616  FFFF               	dw	65535	; assembler added errata NOP
  4383  001618  90D8               	bcf	status,0,c
  4384  00161A  3262               	rrcf	??___fttol+3,f,c
  4385  00161C  3261               	rrcf	??___fttol+2,f,c
  4386  00161E  3260               	rrcf	??___fttol+1,f,c
  4387  001620                     u3130:
  4388  001620  FFFF               	dw	65535	; assembler added errata NOP
  4389  001622  2E63               	decfsz	(??___fttol+4)& (0+255),f,c
  4390  001624  D7F8               	goto	u3135
  4391  001626  5060               	movf	??___fttol+1,w,c
  4392  001628  0100               	movlb	0	; () banked
  4393  00162A  6F80               	movwf	___fttol@sign1& (0+255),b
  4394                           
  4395                           ; BSR set to: 0
  4396  00162C  8E5C               	bsf	___fttol@f1+1,7,c
  4397                           
  4398                           ; BSR set to: 0
  4399  00162E  0EFF               	movlw	255
  4400  001630  165B               	andwf	___fttol@f1,f,c
  4401  001632  0EFF               	movlw	255
  4402  001634  165C               	andwf	___fttol@f1+1,f,c
  4403  001636  0E00               	movlw	0
  4404  001638  165D               	andwf	___fttol@f1+2,f,c
  4405                           
  4406                           ; BSR set to: 0
  4407  00163A  505B               	movf	___fttol@f1,w,c
  4408  00163C  0100               	movlb	0	; () banked
  4409  00163E  6F81               	movwf	___fttol@lval& (0+255),b
  4410  001640  505C               	movf	___fttol@f1+1,w,c
  4411  001642  0100               	movlb	0	; () banked
  4412  001644  6F82               	movwf	(___fttol@lval+1)& (0+255),b
  4413  001646  505D               	movf	___fttol@f1+2,w,c
  4414  001648  0100               	movlb	0	; () banked
  4415  00164A  6F83               	movwf	(___fttol@lval+2)& (0+255),b
  4416  00164C  0100               	movlb	0	; () banked
  4417  00164E  6B84               	clrf	(___fttol@lval+3)& (0+255),b
  4418                           
  4419                           ; BSR set to: 0
  4420  001650  0E8E               	movlw	142
  4421  001652  0100               	movlb	0	; () banked
  4422  001654  5F85               	subwf	___fttol@exp1& (0+255),f,b
  4423                           
  4424                           ; BSR set to: 0
  4425  001656  0100               	movlb	0	; () banked
  4426  001658  AF85               	btfss	___fttol@exp1& (0+255),7,b
  4427  00165A  D014               	goto	l3346
  4428                           
  4429                           ; BSR set to: 0
  4430  00165C  0100               	movlb	0	; () banked
  4431  00165E  5185               	movf	___fttol@exp1& (0+255),w,b
  4432  001660  0A80               	xorlw	128
  4433  001662  0F8F               	addlw	143
  4434  001664  B0D8               	btfsc	status,0,c
  4435  001666  D003               	goto	l3342
  4436  001668  D012               	goto	l3348
  4437                           
  4438                           ; BSR set to: 0
  4439                           
  4440                           ; BSR set to: 0
  4441  00166A  D048               	goto	l813
  4442                           
  4443                           ; BSR set to: 0
  4444  00166C  D000               	goto	l3342
  4445  00166E                     l3342:
  4446  00166E  FFFF               	dw	65535	; assembler added errata NOP
  4447                           
  4448                           ; BSR set to: 0
  4449  001670  0100               	movlb	0	; () banked
  4450  001672  90D8               	bcf	status,0,c
  4451  001674  3384               	rrcf	(___fttol@lval+3)& (0+255),f,b
  4452  001676  3383               	rrcf	(___fttol@lval+2)& (0+255),f,b
  4453  001678  3382               	rrcf	(___fttol@lval+1)& (0+255),f,b
  4454  00167A  3381               	rrcf	___fttol@lval& (0+255),f,b
  4455                           
  4456                           ; BSR set to: 0
  4457  00167C  0100               	movlb	0	; () banked
  4458  00167E  3F85               	incfsz	___fttol@exp1& (0+255),f,b
  4459  001680  D7F6               	goto	l3342
  4460                           
  4461                           ; BSR set to: 0
  4462  001682  D022               	goto	l3356
  4463  001684                     l3346:
  4464  001684  FFFF               	dw	65535	; assembler added errata NOP
  4465                           
  4466                           ; BSR set to: 0
  4467  001686  0E17               	movlw	23
  4468  001688  0100               	movlb	0	; () banked
  4469  00168A  6585               	cpfsgt	___fttol@exp1& (0+255),b
  4470  00168C  D015               	goto	l3354
  4471  00168E                     l3348:
  4472  00168E  FFFF               	dw	65535	; assembler added errata NOP
  4473                           
  4474                           ; BSR set to: 0
  4475  001690  0E00               	movlw	0
  4476  001692  6E5B               	movwf	?___fttol,c
  4477  001694  0E00               	movlw	0
  4478  001696  6E5C               	movwf	?___fttol+1,c
  4479  001698  0E00               	movlw	0
  4480  00169A  6E5D               	movwf	?___fttol+2,c
  4481  00169C  0E00               	movlw	0
  4482  00169E  6E5E               	movwf	?___fttol+3,c
  4483                           
  4484                           ; BSR set to: 0
  4485  0016A0  D02D               	goto	l813
  4486                           
  4487                           ; BSR set to: 0
  4488  0016A2  D00A               	goto	l3354
  4489  0016A4                     l3352:
  4490  0016A4  FFFF               	dw	65535	; assembler added errata NOP
  4491                           
  4492                           ; BSR set to: 0
  4493  0016A6  0100               	movlb	0	; () banked
  4494  0016A8  90D8               	bcf	status,0,c
  4495  0016AA  3781               	rlcf	___fttol@lval& (0+255),f,b
  4496  0016AC  3782               	rlcf	(___fttol@lval+1)& (0+255),f,b
  4497  0016AE  3783               	rlcf	(___fttol@lval+2)& (0+255),f,b
  4498  0016B0  3784               	rlcf	(___fttol@lval+3)& (0+255),f,b
  4499  0016B2  0100               	movlb	0	; () banked
  4500  0016B4  0785               	decf	___fttol@exp1& (0+255),f,b
  4501  0016B6  D000               	goto	l3354
  4502  0016B8                     l3354:
  4503  0016B8  FFFF               	dw	65535	; assembler added errata NOP
  4504                           
  4505                           ; BSR set to: 0
  4506  0016BA  0100               	movlb	0	; () banked
  4507  0016BC  5185               	movf	___fttol@exp1& (0+255),w,b
  4508  0016BE  0100               	movlb	0	; () banked
  4509  0016C0  B4D8               	btfsc	status,2,c
  4510  0016C2  D002               	goto	l3356
  4511  0016C4  D7EF               	goto	l3352
  4512                           
  4513                           ; BSR set to: 0
  4514  0016C6  D000               	goto	l3356
  4515  0016C8                     l3356:
  4516  0016C8  FFFF               	dw	65535	; assembler added errata NOP
  4517                           
  4518                           ; BSR set to: 0
  4519  0016CA  0100               	movlb	0	; () banked
  4520  0016CC  5180               	movf	___fttol@sign1& (0+255),w,b
  4521  0016CE  0100               	movlb	0	; () banked
  4522  0016D0  B4D8               	btfsc	status,2,c
  4523  0016D2  D00A               	goto	l3360
  4524                           
  4525                           ; BSR set to: 0
  4526  0016D4  0100               	movlb	0	; () banked
  4527  0016D6  1F84               	comf	(___fttol@lval+3)& (0+255),f,b
  4528  0016D8  1F83               	comf	(___fttol@lval+2)& (0+255),f,b
  4529  0016DA  1F82               	comf	(___fttol@lval+1)& (0+255),f,b
  4530  0016DC  6D81               	negf	___fttol@lval& (0+255),b
  4531  0016DE  0E00               	movlw	0
  4532  0016E0  2382               	addwfc	(___fttol@lval+1)& (0+255),f,b
  4533  0016E2  2383               	addwfc	(___fttol@lval+2)& (0+255),f,b
  4534  0016E4  2384               	addwfc	(___fttol@lval+3)& (0+255),f,b
  4535  0016E6  D000               	goto	l3360
  4536  0016E8                     l3360:
  4537  0016E8  FFFF               	dw	65535	; assembler added errata NOP
  4538                           
  4539                           ; BSR set to: 0
  4540  0016EA  C081  F05B         	movff	___fttol@lval,?___fttol
  4541  0016EE  C082  F05C         	movff	___fttol@lval+1,?___fttol+1
  4542  0016F2  C083  F05D         	movff	___fttol@lval+2,?___fttol+2
  4543  0016F6  C084  F05E         	movff	___fttol@lval+3,?___fttol+3
  4544  0016FA  D000               	goto	l813
  4545  0016FC                     l813:
  4546  0016FC  FFFF               	dw	65535	; assembler added errata NOP
  4547                           
  4548                           ; BSR set to: 0
  4549  0016FE  0012               	return		;funcret
  4550  001700  FFFF               	dw	65535	; errata NOP
  4551  001702                     __end_of___fttol:
  4552                           	opt stack 0
  4553                           tosu	equ	0xFFF
  4554                           tosh	equ	0xFFE
  4555                           tosl	equ	0xFFD
  4556                           pclath	equ	0xFFA
  4557                           tblptru	equ	0xFF8
  4558                           tblptrh	equ	0xFF7
  4559                           tblptrl	equ	0xFF6
  4560                           tablat	equ	0xFF5
  4561                           prodh	equ	0xFF4
  4562                           prodl	equ	0xFF3
  4563                           intcon	equ	0xFF2
  4564                           intcon2	equ	0xFF1
  4565                           postinc0	equ	0xFEE
  4566                           wreg	equ	0xFE8
  4567                           indf2	equ	0xFDF
  4568                           fsr2h	equ	0xFDA
  4569                           fsr2l	equ	0xFD9
  4570                           status	equ	0xFD8
  4571                           
  4572 ;; *************** function ___ftge *****************
  4573 ;; Defined at:
  4574 ;;		line 4 in file "/opt/microchip/xc8/v1.34/sources/common/ftge.c"
  4575 ;; Parameters:    Size  Location     Type
  4576 ;;  ff1             3   14[COMRAM] float 
  4577 ;;  ff2             3   17[COMRAM] float 
  4578 ;; Auto vars:     Size  Location     Type
  4579 ;;		None
  4580 ;; Return value:  Size  Location     Type
  4581 ;;		None               void
  4582 ;; Registers used:
  4583 ;;		wreg, status,2, status,0
  4584 ;; Tracked objects:
  4585 ;;		On entry : 0/0
  4586 ;;		On exit  : 0/0
  4587 ;;		Unchanged: 0/0
  4588 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4589 ;;      Params:         6       0       0       0       0       0       0
  4590 ;;      Locals:         0       0       0       0       0       0       0
  4591 ;;      Temps:          3       0       0       0       0       0       0
  4592 ;;      Totals:         9       0       0       0       0       0       0
  4593 ;;Total ram usage:        9 bytes
  4594 ;; Hardware stack levels used:    1
  4595 ;; Hardware stack levels required when called:    1
  4596 ;; This function calls:
  4597 ;;		Nothing
  4598 ;; This function is called by:
  4599 ;;		_format_double
  4600 ;;		_measure_capacitance
  4601 ;;		_measure_inductance
  4602 ;;		_floor
  4603 ;;		_pow
  4604 ;;		_exp
  4605 ;;		_format_float
  4606 ;; This function uses a non-reentrant model
  4607 ;;
  4608                           
  4609                           	psect	text17
  4610  00216C                     __ptext17:
  4611                           	opt stack 0
  4612  00216C                     ___ftge:
  4613                           	opt stack 28
  4614                           
  4615                           ; BSR set to: 0
  4616                           ;incstack = 0
  4617  00216C  FFFF               	dw	65535
  4618  00216E  AE11               	btfss	___ftge@ff1+2,7,c
  4619  002170  D017               	goto	l2406
  4620  002172  C00F  F015         	movff	___ftge@ff1,??___ftge
  4621  002176  C010  F016         	movff	___ftge@ff1+1,??___ftge+1
  4622  00217A  C011  F017         	movff	___ftge@ff1+2,??___ftge+2
  4623  00217E  1E15               	comf	??___ftge,f,c
  4624  002180  1E16               	comf	??___ftge+1,f,c
  4625  002182  1E17               	comf	??___ftge+2,f,c
  4626  002184  2A15               	incf	??___ftge,f,c
  4627  002186  0E00               	movlw	0
  4628  002188  2216               	addwfc	??___ftge+1,f,c
  4629  00218A  2217               	addwfc	??___ftge+2,f,c
  4630  00218C  0E00               	movlw	0
  4631  00218E  2415               	addwf	??___ftge,w,c
  4632  002190  6E0F               	movwf	___ftge@ff1,c
  4633  002192  0E00               	movlw	0
  4634  002194  2016               	addwfc	??___ftge+1,w,c
  4635  002196  6E10               	movwf	___ftge@ff1+1,c
  4636  002198  0E80               	movlw	128
  4637  00219A  2017               	addwfc	??___ftge+2,w,c
  4638  00219C  6E11               	movwf	___ftge@ff1+2,c
  4639  00219E  D000               	goto	l2406
  4640  0021A0                     l2406:
  4641  0021A0  FFFF               	dw	65535	; assembler added errata NOP
  4642  0021A2  AE14               	btfss	___ftge@ff2+2,7,c
  4643  0021A4  D017               	goto	l2410
  4644  0021A6  C012  F015         	movff	___ftge@ff2,??___ftge
  4645  0021AA  C013  F016         	movff	___ftge@ff2+1,??___ftge+1
  4646  0021AE  C014  F017         	movff	___ftge@ff2+2,??___ftge+2
  4647  0021B2  1E15               	comf	??___ftge,f,c
  4648  0021B4  1E16               	comf	??___ftge+1,f,c
  4649  0021B6  1E17               	comf	??___ftge+2,f,c
  4650  0021B8  2A15               	incf	??___ftge,f,c
  4651  0021BA  0E00               	movlw	0
  4652  0021BC  2216               	addwfc	??___ftge+1,f,c
  4653  0021BE  2217               	addwfc	??___ftge+2,f,c
  4654  0021C0  0E00               	movlw	0
  4655  0021C2  2415               	addwf	??___ftge,w,c
  4656  0021C4  6E12               	movwf	___ftge@ff2,c
  4657  0021C6  0E00               	movlw	0
  4658  0021C8  2016               	addwfc	??___ftge+1,w,c
  4659  0021CA  6E13               	movwf	___ftge@ff2+1,c
  4660  0021CC  0E80               	movlw	128
  4661  0021CE  2017               	addwfc	??___ftge+2,w,c
  4662  0021D0  6E14               	movwf	___ftge@ff2+2,c
  4663  0021D2  D000               	goto	l2410
  4664  0021D4                     l2410:
  4665  0021D4  FFFF               	dw	65535	; assembler added errata NOP
  4666  0021D6  0E00               	movlw	0
  4667  0021D8  1A0F               	xorwf	___ftge@ff1,f,c
  4668  0021DA  0E00               	movlw	0
  4669  0021DC  1A10               	xorwf	___ftge@ff1+1,f,c
  4670  0021DE  0E80               	movlw	128
  4671  0021E0  1A11               	xorwf	___ftge@ff1+2,f,c
  4672  0021E2  0E00               	movlw	0
  4673  0021E4  1A12               	xorwf	___ftge@ff2,f,c
  4674  0021E6  0E00               	movlw	0
  4675  0021E8  1A13               	xorwf	___ftge@ff2+1,f,c
  4676  0021EA  0E80               	movlw	128
  4677  0021EC  1A14               	xorwf	___ftge@ff2+2,f,c
  4678  0021EE  5012               	movf	___ftge@ff2,w,c
  4679  0021F0  5C0F               	subwf	___ftge@ff1,w,c
  4680  0021F2  5013               	movf	___ftge@ff2+1,w,c
  4681  0021F4  5810               	subwfb	___ftge@ff1+1,w,c
  4682  0021F6  5014               	movf	___ftge@ff2+2,w,c
  4683  0021F8  5811               	subwfb	___ftge@ff1+2,w,c
  4684  0021FA  B0D8               	btfsc	status,0,c
  4685  0021FC  D002               	goto	l2416
  4686  0021FE  90D8               	bcf	status,0,c
  4687  002200  D003               	goto	l786
  4688  002202                     l2416:
  4689  002202  FFFF               	dw	65535	; assembler added errata NOP
  4690  002204  80D8               	bsf	status,0,c
  4691  002206  D000               	goto	l786
  4692  002208                     l786:
  4693  002208  FFFF               	dw	65535	; assembler added errata NOP
  4694  00220A  0012               	return		;funcret
  4695  00220C  FFFF               	dw	65535	; errata NOP
  4696  00220E                     __end_of___ftge:
  4697                           	opt stack 0
  4698                           tosu	equ	0xFFF
  4699                           tosh	equ	0xFFE
  4700                           tosl	equ	0xFFD
  4701                           pclath	equ	0xFFA
  4702                           tblptru	equ	0xFF8
  4703                           tblptrh	equ	0xFF7
  4704                           tblptrl	equ	0xFF6
  4705                           tablat	equ	0xFF5
  4706                           prodh	equ	0xFF4
  4707                           prodl	equ	0xFF3
  4708                           intcon	equ	0xFF2
  4709                           intcon2	equ	0xFF1
  4710                           postinc0	equ	0xFEE
  4711                           wreg	equ	0xFE8
  4712                           indf2	equ	0xFDF
  4713                           fsr2h	equ	0xFDA
  4714                           fsr2l	equ	0xFD9
  4715                           status	equ	0xFD8
  4716                           
  4717 ;; *************** function ___altoft *****************
  4718 ;; Defined at:
  4719 ;;		line 42 in file "/opt/microchip/xc8/v1.34/sources/common/altoft.c"
  4720 ;; Parameters:    Size  Location     Type
  4721 ;;  c               4    6[BANK0 ] long 
  4722 ;; Auto vars:     Size  Location     Type
  4723 ;;  sign            1   15[BANK0 ] unsigned char 
  4724 ;;  exp             1   14[BANK0 ] unsigned char 
  4725 ;; Return value:  Size  Location     Type
  4726 ;;                  3    6[BANK0 ] float 
  4727 ;; Registers used:
  4728 ;;		wreg, status,2, status,0, cstack
  4729 ;; Tracked objects:
  4730 ;;		On entry : 0/0
  4731 ;;		On exit  : 0/0
  4732 ;;		Unchanged: 0/0
  4733 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4734 ;;      Params:         0       4       0       0       0       0       0
  4735 ;;      Locals:         0       2       0       0       0       0       0
  4736 ;;      Temps:          0       4       0       0       0       0       0
  4737 ;;      Totals:         0      10       0       0       0       0       0
  4738 ;;Total ram usage:       10 bytes
  4739 ;; Hardware stack levels used:    1
  4740 ;; Hardware stack levels required when called:    2
  4741 ;; This function calls:
  4742 ;;		___ftpack
  4743 ;; This function is called by:
  4744 ;;		_floor
  4745 ;; This function uses a non-reentrant model
  4746 ;;
  4747                           
  4748                           	psect	text18
  4749  0020C0                     __ptext18:
  4750                           	opt stack 0
  4751  0020C0                     ___altoft:
  4752                           	opt stack 23
  4753                           
  4754                           ;incstack = 0
  4755  0020C0  FFFF               	dw	65535
  4756  0020C2  0E00               	movlw	0
  4757  0020C4  0100               	movlb	0	; () banked
  4758  0020C6  6F8F               	movwf	___altoft@sign& (0+255),b
  4759  0020C8  0E8E               	movlw	142
  4760  0020CA  0100               	movlb	0	; () banked
  4761  0020CC  6F8E               	movwf	___altoft@exp& (0+255),b
  4762                           
  4763                           ; BSR set to: 0
  4764  0020CE  0100               	movlb	0	; () banked
  4765  0020D0  AF89               	btfss	(___altoft@c+3)& (0+255),7,b
  4766  0020D2  D017               	goto	l3312
  4767                           
  4768                           ; BSR set to: 0
  4769  0020D4  0100               	movlb	0	; () banked
  4770  0020D6  1F89               	comf	(___altoft@c+3)& (0+255),f,b
  4771  0020D8  1F88               	comf	(___altoft@c+2)& (0+255),f,b
  4772  0020DA  1F87               	comf	(___altoft@c+1)& (0+255),f,b
  4773  0020DC  6D86               	negf	___altoft@c& (0+255),b
  4774  0020DE  0E00               	movlw	0
  4775  0020E0  2387               	addwfc	(___altoft@c+1)& (0+255),f,b
  4776  0020E2  2388               	addwfc	(___altoft@c+2)& (0+255),f,b
  4777  0020E4  2389               	addwfc	(___altoft@c+3)& (0+255),f,b
  4778                           
  4779                           ; BSR set to: 0
  4780  0020E6  0E01               	movlw	1
  4781  0020E8  0100               	movlb	0	; () banked
  4782  0020EA  6F8F               	movwf	___altoft@sign& (0+255),b
  4783                           
  4784                           ; BSR set to: 0
  4785  0020EC  D00A               	goto	l3312
  4786  0020EE                     l3310:
  4787  0020EE  FFFF               	dw	65535	; assembler added errata NOP
  4788                           
  4789                           ; BSR set to: 0
  4790  0020F0  0100               	movlb	0	; () banked
  4791  0020F2  90D8               	bcf	status,0,c
  4792  0020F4  3389               	rrcf	(___altoft@c+3)& (0+255),f,b
  4793  0020F6  3388               	rrcf	(___altoft@c+2)& (0+255),f,b
  4794  0020F8  3387               	rrcf	(___altoft@c+1)& (0+255),f,b
  4795  0020FA  3386               	rrcf	___altoft@c& (0+255),f,b
  4796  0020FC  0100               	movlb	0	; () banked
  4797  0020FE  2B8E               	incf	___altoft@exp& (0+255),f,b
  4798  002100  D000               	goto	l3312
  4799  002102                     l3312:
  4800  002102  FFFF               	dw	65535	; assembler added errata NOP
  4801                           
  4802                           ; BSR set to: 0
  4803  002104  0E00               	movlw	0
  4804  002106  0100               	movlb	0	; () banked
  4805  002108  1586               	andwf	___altoft@c& (0+255),w,b
  4806  00210A  0100               	movlb	0	; () banked
  4807  00210C  6F8A               	movwf	??___altoft& (0+255),b
  4808  00210E  0E00               	movlw	0
  4809  002110  0100               	movlb	0	; () banked
  4810  002112  1587               	andwf	(___altoft@c+1)& (0+255),w,b
  4811  002114  0100               	movlb	0	; () banked
  4812  002116  6F8B               	movwf	(??___altoft+1)& (0+255),b
  4813  002118  0E00               	movlw	0
  4814  00211A  0100               	movlb	0	; () banked
  4815  00211C  1588               	andwf	(___altoft@c+2)& (0+255),w,b
  4816  00211E  0100               	movlb	0	; () banked
  4817  002120  6F8C               	movwf	(??___altoft+2)& (0+255),b
  4818  002122  0EFF               	movlw	255
  4819  002124  0100               	movlb	0	; () banked
  4820  002126  1589               	andwf	(___altoft@c+3)& (0+255),w,b
  4821  002128  0100               	movlb	0	; () banked
  4822  00212A  6F8D               	movwf	(??___altoft+3)& (0+255),b
  4823  00212C  0100               	movlb	0	; () banked
  4824  00212E  518A               	movf	??___altoft& (0+255),w,b
  4825  002130  0100               	movlb	0	; () banked
  4826  002132  118B               	iorwf	(??___altoft+1)& (0+255),w,b
  4827  002134  0100               	movlb	0	; () banked
  4828  002136  118C               	iorwf	(??___altoft+2)& (0+255),w,b
  4829  002138  0100               	movlb	0	; () banked
  4830  00213A  118D               	iorwf	(??___altoft+3)& (0+255),w,b
  4831  00213C  A4D8               	btfss	status,2,c
  4832  00213E  D7D7               	goto	l3310
  4833                           
  4834                           ; BSR set to: 0
  4835                           
  4836                           ; BSR set to: 0
  4837  002140  C086  F00F         	movff	___altoft@c,___ftpack@arg
  4838  002144  C087  F010         	movff	___altoft@c+1,___ftpack@arg+1
  4839  002148  C088  F011         	movff	___altoft@c+2,___ftpack@arg+2
  4840  00214C  C08E  F012         	movff	___altoft@exp,___ftpack@exp
  4841  002150  C08F  F013         	movff	___altoft@sign,___ftpack@sign
  4842  002154  EC8F  F00F         	call	___ftpack	;wreg free
  4843  002158  C00F  F086         	movff	?___ftpack,?___altoft
  4844  00215C  C010  F087         	movff	?___ftpack+1,?___altoft+1
  4845  002160  C011  F088         	movff	?___ftpack+2,?___altoft+2
  4846  002164  D000               	goto	l469
  4847  002166                     l469:
  4848  002166  FFFF               	dw	65535	; assembler added errata NOP
  4849  002168  0012               	return		;funcret
  4850  00216A  FFFF               	dw	65535	; errata NOP
  4851  00216C                     __end_of___altoft:
  4852                           	opt stack 0
  4853                           tosu	equ	0xFFF
  4854                           tosh	equ	0xFFE
  4855                           tosl	equ	0xFFD
  4856                           pclath	equ	0xFFA
  4857                           tblptru	equ	0xFF8
  4858                           tblptrh	equ	0xFF7
  4859                           tblptrl	equ	0xFF6
  4860                           tablat	equ	0xFF5
  4861                           prodh	equ	0xFF4
  4862                           prodl	equ	0xFF3
  4863                           intcon	equ	0xFF2
  4864                           intcon2	equ	0xFF1
  4865                           postinc0	equ	0xFEE
  4866                           wreg	equ	0xFE8
  4867                           indf2	equ	0xFDF
  4868                           fsr2h	equ	0xFDA
  4869                           fsr2l	equ	0xFD9
  4870                           status	equ	0xFD8
  4871                           
  4872 ;; *************** function ___ftsub *****************
  4873 ;; Defined at:
  4874 ;;		line 20 in file "/opt/microchip/xc8/v1.34/sources/common/ftsub.c"
  4875 ;; Parameters:    Size  Location     Type
  4876 ;;  f1              3   67[COMRAM] float 
  4877 ;;  f2              3   70[COMRAM] float 
  4878 ;; Auto vars:     Size  Location     Type
  4879 ;;		None
  4880 ;; Return value:  Size  Location     Type
  4881 ;;                  3   67[COMRAM] float 
  4882 ;; Registers used:
  4883 ;;		wreg, status,2, status,0, cstack
  4884 ;; Tracked objects:
  4885 ;;		On entry : 0/0
  4886 ;;		On exit  : 0/0
  4887 ;;		Unchanged: 0/0
  4888 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4889 ;;      Params:         6       0       0       0       0       0       0
  4890 ;;      Locals:         0       0       0       0       0       0       0
  4891 ;;      Temps:          0       0       0       0       0       0       0
  4892 ;;      Totals:         6       0       0       0       0       0       0
  4893 ;;Total ram usage:        6 bytes
  4894 ;; Hardware stack levels used:    1
  4895 ;; Hardware stack levels required when called:    3
  4896 ;; This function calls:
  4897 ;;		___ftadd
  4898 ;; This function is called by:
  4899 ;;		_format_double
  4900 ;;		_exp
  4901 ;;		_format_float
  4902 ;; This function uses a non-reentrant model
  4903 ;;
  4904                           
  4905                           	psect	text19
  4906  002678                     __ptext19:
  4907                           	opt stack 0
  4908  002678                     ___ftsub:
  4909                           	opt stack 23
  4910                           
  4911                           ;incstack = 0
  4912  002678  FFFF               	dw	65535
  4913  00267A  5047               	movf	___ftsub@f2,w,c
  4914  00267C  1048               	iorwf	___ftsub@f2+1,w,c
  4915  00267E  1049               	iorwf	___ftsub@f2+2,w,c
  4916  002680  B4D8               	btfsc	status,2,c
  4917  002682  D007               	goto	l2552
  4918  002684  0E00               	movlw	0
  4919  002686  1A47               	xorwf	___ftsub@f2,f,c
  4920  002688  0E00               	movlw	0
  4921  00268A  1A48               	xorwf	___ftsub@f2+1,f,c
  4922  00268C  0E80               	movlw	128
  4923  00268E  1A49               	xorwf	___ftsub@f2+2,f,c
  4924  002690  D000               	goto	l2552
  4925  002692                     l2552:
  4926  002692  FFFF               	dw	65535	; assembler added errata NOP
  4927  002694  C044  F038         	movff	___ftsub@f1,___ftadd@f1
  4928  002698  C045  F039         	movff	___ftsub@f1+1,___ftadd@f1+1
  4929  00269C  C046  F03A         	movff	___ftsub@f1+2,___ftadd@f1+2
  4930  0026A0  C047  F03B         	movff	___ftsub@f2,___ftadd@f2
  4931  0026A4  C048  F03C         	movff	___ftsub@f2+1,___ftadd@f2+1
  4932  0026A8  C049  F03D         	movff	___ftsub@f2+2,___ftadd@f2+2
  4933  0026AC  EC5C  F008         	call	___ftadd	;wreg free
  4934  0026B0  C038  F044         	movff	?___ftadd,?___ftsub
  4935  0026B4  C039  F045         	movff	?___ftadd+1,?___ftsub+1
  4936  0026B8  C03A  F046         	movff	?___ftadd+2,?___ftsub+2
  4937  0026BC  D000               	goto	l809
  4938  0026BE                     l809:
  4939  0026BE  FFFF               	dw	65535	; assembler added errata NOP
  4940  0026C0  0012               	return		;funcret
  4941  0026C2  FFFF               	dw	65535	; errata NOP
  4942  0026C4                     __end_of___ftsub:
  4943                           	opt stack 0
  4944                           tosu	equ	0xFFF
  4945                           tosh	equ	0xFFE
  4946                           tosl	equ	0xFFD
  4947                           pclath	equ	0xFFA
  4948                           tblptru	equ	0xFF8
  4949                           tblptrh	equ	0xFF7
  4950                           tblptrl	equ	0xFF6
  4951                           tablat	equ	0xFF5
  4952                           prodh	equ	0xFF4
  4953                           prodl	equ	0xFF3
  4954                           intcon	equ	0xFF2
  4955                           intcon2	equ	0xFF1
  4956                           postinc0	equ	0xFEE
  4957                           wreg	equ	0xFE8
  4958                           indf2	equ	0xFDF
  4959                           fsr2h	equ	0xFDA
  4960                           fsr2l	equ	0xFD9
  4961                           status	equ	0xFD8
  4962                           
  4963 ;; *************** function ___ftneg *****************
  4964 ;; Defined at:
  4965 ;;		line 15 in file "/opt/microchip/xc8/v1.34/sources/common/ftneg.c"
  4966 ;; Parameters:    Size  Location     Type
  4967 ;;  f1              3   52[COMRAM] float 
  4968 ;; Auto vars:     Size  Location     Type
  4969 ;;		None
  4970 ;; Return value:  Size  Location     Type
  4971 ;;                  3   52[COMRAM] float 
  4972 ;; Registers used:
  4973 ;;		wreg, status,2, status,0
  4974 ;; Tracked objects:
  4975 ;;		On entry : 0/0
  4976 ;;		On exit  : 0/0
  4977 ;;		Unchanged: 0/0
  4978 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4979 ;;      Params:         3       0       0       0       0       0       0
  4980 ;;      Locals:         0       0       0       0       0       0       0
  4981 ;;      Temps:          0       0       0       0       0       0       0
  4982 ;;      Totals:         3       0       0       0       0       0       0
  4983 ;;Total ram usage:        3 bytes
  4984 ;; Hardware stack levels used:    1
  4985 ;; Hardware stack levels required when called:    1
  4986 ;; This function calls:
  4987 ;;		Nothing
  4988 ;; This function is called by:
  4989 ;;		_measure_capacitance
  4990 ;;		_measure_inductance
  4991 ;;		_pow
  4992 ;;		_exp
  4993 ;; This function uses a non-reentrant model
  4994 ;;
  4995                           
  4996                           	psect	text20
  4997  002800                     __ptext20:
  4998                           	opt stack 0
  4999  002800                     ___ftneg:
  5000                           	opt stack 28
  5001                           
  5002                           ;incstack = 0
  5003  002800  FFFF               	dw	65535
  5004  002802  5035               	movf	___ftneg@f1,w,c
  5005  002804  1036               	iorwf	___ftneg@f1+1,w,c
  5006  002806  1037               	iorwf	___ftneg@f1+2,w,c
  5007  002808  B4D8               	btfsc	status,2,c
  5008  00280A  D006               	goto	l802
  5009  00280C  0E00               	movlw	0
  5010  00280E  1A35               	xorwf	___ftneg@f1,f,c
  5011  002810  0E00               	movlw	0
  5012  002812  1A36               	xorwf	___ftneg@f1+1,f,c
  5013  002814  0E80               	movlw	128
  5014  002816  1A37               	xorwf	___ftneg@f1+2,f,c
  5015  002818                     l802:
  5016  002818  FFFF               	dw	65535	; assembler added errata NOP
  5017  00281A  C035  F035         	movff	___ftneg@f1,?___ftneg
  5018  00281E  C036  F036         	movff	___ftneg@f1+1,?___ftneg+1
  5019  002822  C037  F037         	movff	___ftneg@f1+2,?___ftneg+2
  5020  002826  0012               	return		;funcret
  5021  002828  FFFF               	dw	65535	; errata NOP
  5022  00282A                     __end_of___ftneg:
  5023                           	opt stack 0
  5024                           tosu	equ	0xFFF
  5025                           tosh	equ	0xFFE
  5026                           tosl	equ	0xFFD
  5027                           pclath	equ	0xFFA
  5028                           tblptru	equ	0xFF8
  5029                           tblptrh	equ	0xFF7
  5030                           tblptrl	equ	0xFF6
  5031                           tablat	equ	0xFF5
  5032                           prodh	equ	0xFF4
  5033                           prodl	equ	0xFF3
  5034                           intcon	equ	0xFF2
  5035                           intcon2	equ	0xFF1
  5036                           postinc0	equ	0xFEE
  5037                           wreg	equ	0xFE8
  5038                           indf2	equ	0xFDF
  5039                           fsr2h	equ	0xFDA
  5040                           fsr2l	equ	0xFD9
  5041                           status	equ	0xFD8
  5042                           
  5043 ;; *************** function ___ftdiv *****************
  5044 ;; Defined at:
  5045 ;;		line 54 in file "/opt/microchip/xc8/v1.34/sources/common/ftdiv.c"
  5046 ;; Parameters:    Size  Location     Type
  5047 ;;  f1              3   22[COMRAM] float 
  5048 ;;  f2              3   25[COMRAM] float 
  5049 ;; Auto vars:     Size  Location     Type
  5050 ;;  f3              3   32[COMRAM] float 
  5051 ;;  sign            1   36[COMRAM] unsigned char 
  5052 ;;  exp             1   35[COMRAM] unsigned char 
  5053 ;;  cntr            1   31[COMRAM] unsigned char 
  5054 ;; Return value:  Size  Location     Type
  5055 ;;                  3   22[COMRAM] float 
  5056 ;; Registers used:
  5057 ;;		wreg, status,2, status,0, cstack
  5058 ;; Tracked objects:
  5059 ;;		On entry : 0/0
  5060 ;;		On exit  : 0/0
  5061 ;;		Unchanged: 0/0
  5062 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5063 ;;      Params:         6       0       0       0       0       0       0
  5064 ;;      Locals:         6       0       0       0       0       0       0
  5065 ;;      Temps:          3       0       0       0       0       0       0
  5066 ;;      Totals:        15       0       0       0       0       0       0
  5067 ;;Total ram usage:       15 bytes
  5068 ;; Hardware stack levels used:    1
  5069 ;; Hardware stack levels required when called:    2
  5070 ;; This function calls:
  5071 ;;		___ftpack
  5072 ;; This function is called by:
  5073 ;;		_format_double
  5074 ;;		_measure_capacitance
  5075 ;;		_measure_inductance
  5076 ;;		_exp
  5077 ;;		_format_float
  5078 ;; This function uses a non-reentrant model
  5079 ;;
  5080                           
  5081                           	psect	text21
  5082  001C60                     __ptext21:
  5083                           	opt stack 0
  5084  001C60                     ___ftdiv:
  5085                           	opt stack 27
  5086                           
  5087                           ;incstack = 0
  5088  001C60  FFFF               	dw	65535
  5089  001C62  C019  F01D         	movff	___ftdiv@f1+2,??___ftdiv
  5090  001C66  6A1E               	clrf	(??___ftdiv+1)& (0+255),c
  5091  001C68  6A1F               	clrf	(??___ftdiv+2)& (0+255),c
  5092  001C6A  3418               	rlcf	___ftdiv@f1+1,w,c
  5093  001C6C  361D               	rlcf	??___ftdiv& (0+255),f,c
  5094  001C6E  E301               	bnc	u2111
  5095  001C70  801E               	bsf	(??___ftdiv+1)& (0+255),0,c
  5096  001C72                     u2111:
  5097  001C72  501D               	movf	??___ftdiv,w,c
  5098  001C74  6E24               	movwf	___ftdiv@exp,c
  5099  001C76  5024               	movf	___ftdiv@exp,w,c
  5100  001C78  A4D8               	btfss	status,2,c
  5101  001C7A  D002               	goto	l2508
  5102  001C7C  D00F               	goto	l2510
  5103  001C7E  D067               	goto	l777
  5104  001C80                     l2508:
  5105  001C80  FFFF               	dw	65535	; assembler added errata NOP
  5106  001C82  C01C  F01D         	movff	___ftdiv@f2+2,??___ftdiv
  5107  001C86  6A1E               	clrf	(??___ftdiv+1)& (0+255),c
  5108  001C88  6A1F               	clrf	(??___ftdiv+2)& (0+255),c
  5109  001C8A  341B               	rlcf	___ftdiv@f2+1,w,c
  5110  001C8C  361D               	rlcf	??___ftdiv& (0+255),f,c
  5111  001C8E  E301               	bnc	u2131
  5112  001C90  801E               	bsf	(??___ftdiv+1)& (0+255),0,c
  5113  001C92                     u2131:
  5114  001C92  501D               	movf	??___ftdiv,w,c
  5115  001C94  6E25               	movwf	___ftdiv@sign,c
  5116  001C96  5025               	movf	___ftdiv@sign,w,c
  5117  001C98  A4D8               	btfss	status,2,c
  5118  001C9A  D008               	goto	l2514
  5119  001C9C                     l2510:
  5120  001C9C  FFFF               	dw	65535	; assembler added errata NOP
  5121  001C9E  0E00               	movlw	0
  5122  001CA0  6E17               	movwf	?___ftdiv,c
  5123  001CA2  0E00               	movlw	0
  5124  001CA4  6E18               	movwf	?___ftdiv+1,c
  5125  001CA6  0E00               	movlw	0
  5126  001CA8  6E19               	movwf	?___ftdiv+2,c
  5127  001CAA  D051               	goto	l777
  5128  001CAC                     l2514:
  5129  001CAC  FFFF               	dw	65535	; assembler added errata NOP
  5130  001CAE  0E00               	movlw	0
  5131  001CB0  6E21               	movwf	___ftdiv@f3,c
  5132  001CB2  0E00               	movlw	0
  5133  001CB4  6E22               	movwf	___ftdiv@f3+1,c
  5134  001CB6  0E00               	movlw	0
  5135  001CB8  6E23               	movwf	___ftdiv@f3+2,c
  5136  001CBA  5025               	movf	___ftdiv@sign,w,c
  5137  001CBC  0F89               	addlw	137
  5138  001CBE  5E24               	subwf	___ftdiv@exp,f,c
  5139  001CC0  C019  F025         	movff	___ftdiv@f1+2,___ftdiv@sign
  5140  001CC4  501C               	movf	___ftdiv@f2+2,w,c
  5141  001CC6  1A25               	xorwf	___ftdiv@sign,f,c
  5142  001CC8  0E80               	movlw	128
  5143  001CCA  1625               	andwf	___ftdiv@sign,f,c
  5144  001CCC  8E18               	bsf	___ftdiv@f1+1,7,c
  5145  001CCE  0EFF               	movlw	255
  5146  001CD0  1617               	andwf	___ftdiv@f1,f,c
  5147  001CD2  0EFF               	movlw	255
  5148  001CD4  1618               	andwf	___ftdiv@f1+1,f,c
  5149  001CD6  0E00               	movlw	0
  5150  001CD8  1619               	andwf	___ftdiv@f1+2,f,c
  5151  001CDA  8E1B               	bsf	___ftdiv@f2+1,7,c
  5152  001CDC  0EFF               	movlw	255
  5153  001CDE  161A               	andwf	___ftdiv@f2,f,c
  5154  001CE0  0EFF               	movlw	255
  5155  001CE2  161B               	andwf	___ftdiv@f2+1,f,c
  5156  001CE4  0E00               	movlw	0
  5157  001CE6  161C               	andwf	___ftdiv@f2+2,f,c
  5158  001CE8  0E18               	movlw	24
  5159  001CEA  6E20               	movwf	___ftdiv@cntr,c
  5160  001CEC  D000               	goto	l2534
  5161  001CEE                     l2534:
  5162  001CEE  FFFF               	dw	65535	; assembler added errata NOP
  5163  001CF0  90D8               	bcf	status,0,c
  5164  001CF2  3621               	rlcf	___ftdiv@f3,f,c
  5165  001CF4  3622               	rlcf	___ftdiv@f3+1,f,c
  5166  001CF6  3623               	rlcf	___ftdiv@f3+2,f,c
  5167  001CF8  501A               	movf	___ftdiv@f2,w,c
  5168  001CFA  5C17               	subwf	___ftdiv@f1,w,c
  5169  001CFC  501B               	movf	___ftdiv@f2+1,w,c
  5170  001CFE  5818               	subwfb	___ftdiv@f1+1,w,c
  5171  001D00  501C               	movf	___ftdiv@f2+2,w,c
  5172  001D02  5819               	subwfb	___ftdiv@f1+2,w,c
  5173  001D04  A0D8               	btfss	status,0,c
  5174  001D06  D007               	goto	l780
  5175  001D08  501A               	movf	___ftdiv@f2,w,c
  5176  001D0A  5E17               	subwf	___ftdiv@f1,f,c
  5177  001D0C  501B               	movf	___ftdiv@f2+1,w,c
  5178  001D0E  5A18               	subwfb	___ftdiv@f1+1,f,c
  5179  001D10  501C               	movf	___ftdiv@f2+2,w,c
  5180  001D12  5A19               	subwfb	___ftdiv@f1+2,f,c
  5181  001D14  8021               	bsf	___ftdiv@f3,0,c
  5182  001D16                     l780:
  5183  001D16  FFFF               	dw	65535	; assembler added errata NOP
  5184  001D18  90D8               	bcf	status,0,c
  5185  001D1A  3617               	rlcf	___ftdiv@f1,f,c
  5186  001D1C  3618               	rlcf	___ftdiv@f1+1,f,c
  5187  001D1E  3619               	rlcf	___ftdiv@f1+2,f,c
  5188  001D20  2E20               	decfsz	___ftdiv@cntr,f,c
  5189  001D22  D7E5               	goto	l2534
  5190  001D24  D000               	goto	l2544
  5191  001D26                     l2544:
  5192  001D26  FFFF               	dw	65535	; assembler added errata NOP
  5193  001D28  C021  F00F         	movff	___ftdiv@f3,___ftpack@arg
  5194  001D2C  C022  F010         	movff	___ftdiv@f3+1,___ftpack@arg+1
  5195  001D30  C023  F011         	movff	___ftdiv@f3+2,___ftpack@arg+2
  5196  001D34  C024  F012         	movff	___ftdiv@exp,___ftpack@exp
  5197  001D38  C025  F013         	movff	___ftdiv@sign,___ftpack@sign
  5198  001D3C  EC8F  F00F         	call	___ftpack	;wreg free
  5199  001D40  C00F  F017         	movff	?___ftpack,?___ftdiv
  5200  001D44  C010  F018         	movff	?___ftpack+1,?___ftdiv+1
  5201  001D48  C011  F019         	movff	?___ftpack+2,?___ftdiv+2
  5202  001D4C  D000               	goto	l777
  5203  001D4E                     l777:
  5204  001D4E  FFFF               	dw	65535	; assembler added errata NOP
  5205  001D50  0012               	return		;funcret
  5206  001D52  FFFF               	dw	65535	; errata NOP
  5207  001D54                     __end_of___ftdiv:
  5208                           	opt stack 0
  5209                           tosu	equ	0xFFF
  5210                           tosh	equ	0xFFE
  5211                           tosl	equ	0xFFD
  5212                           pclath	equ	0xFFA
  5213                           tblptru	equ	0xFF8
  5214                           tblptrh	equ	0xFF7
  5215                           tblptrl	equ	0xFF6
  5216                           tablat	equ	0xFF5
  5217                           prodh	equ	0xFF4
  5218                           prodl	equ	0xFF3
  5219                           intcon	equ	0xFF2
  5220                           intcon2	equ	0xFF1
  5221                           postinc0	equ	0xFEE
  5222                           wreg	equ	0xFE8
  5223                           indf2	equ	0xFDF
  5224                           fsr2h	equ	0xFDA
  5225                           fsr2l	equ	0xFD9
  5226                           status	equ	0xFD8
  5227                           
  5228 ;; *************** function ___lltoft *****************
  5229 ;; Defined at:
  5230 ;;		line 35 in file "/opt/microchip/xc8/v1.34/sources/common/lltoft.c"
  5231 ;; Parameters:    Size  Location     Type
  5232 ;;  c               4   22[COMRAM] unsigned long 
  5233 ;; Auto vars:     Size  Location     Type
  5234 ;;  exp             1   30[COMRAM] unsigned char 
  5235 ;; Return value:  Size  Location     Type
  5236 ;;                  3   22[COMRAM] float 
  5237 ;; Registers used:
  5238 ;;		wreg, status,2, status,0, cstack
  5239 ;; Tracked objects:
  5240 ;;		On entry : 0/0
  5241 ;;		On exit  : 0/0
  5242 ;;		Unchanged: 0/0
  5243 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5244 ;;      Params:         4       0       0       0       0       0       0
  5245 ;;      Locals:         1       0       0       0       0       0       0
  5246 ;;      Temps:          4       0       0       0       0       0       0
  5247 ;;      Totals:         9       0       0       0       0       0       0
  5248 ;;Total ram usage:        9 bytes
  5249 ;; Hardware stack levels used:    1
  5250 ;; Hardware stack levels required when called:    2
  5251 ;; This function calls:
  5252 ;;		___ftpack
  5253 ;; This function is called by:
  5254 ;;		_pow
  5255 ;; This function uses a non-reentrant model
  5256 ;;
  5257                           
  5258                           	psect	text22
  5259  00251A                     __ptext22:
  5260                           	opt stack 0
  5261  00251A                     ___lltoft:
  5262                           	opt stack 25
  5263                           
  5264                           ;incstack = 0
  5265  00251A  FFFF               	dw	65535
  5266  00251C  0E8E               	movlw	142
  5267  00251E  6E1F               	movwf	___lltoft@exp,c
  5268  002520  D008               	goto	l2622
  5269  002522                     l2620:
  5270  002522  FFFF               	dw	65535	; assembler added errata NOP
  5271  002524  90D8               	bcf	status,0,c
  5272  002526  321A               	rrcf	___lltoft@c+3,f,c
  5273  002528  3219               	rrcf	___lltoft@c+2,f,c
  5274  00252A  3218               	rrcf	___lltoft@c+1,f,c
  5275  00252C  3217               	rrcf	___lltoft@c,f,c
  5276  00252E  2A1F               	incf	___lltoft@exp,f,c
  5277  002530  D000               	goto	l2622
  5278  002532                     l2622:
  5279  002532  FFFF               	dw	65535	; assembler added errata NOP
  5280  002534  0E00               	movlw	0
  5281  002536  1417               	andwf	___lltoft@c,w,c
  5282  002538  6E1B               	movwf	??___lltoft& (0+255),c
  5283  00253A  0E00               	movlw	0
  5284  00253C  1418               	andwf	___lltoft@c+1,w,c
  5285  00253E  6E1C               	movwf	(??___lltoft+1)& (0+255),c
  5286  002540  0E00               	movlw	0
  5287  002542  1419               	andwf	___lltoft@c+2,w,c
  5288  002544  6E1D               	movwf	(??___lltoft+2)& (0+255),c
  5289  002546  0EFF               	movlw	255
  5290  002548  141A               	andwf	___lltoft@c+3,w,c
  5291  00254A  6E1E               	movwf	(??___lltoft+3)& (0+255),c
  5292  00254C  501B               	movf	??___lltoft,w,c
  5293  00254E  101C               	iorwf	??___lltoft+1,w,c
  5294  002550  101D               	iorwf	??___lltoft+2,w,c
  5295  002552  101E               	iorwf	??___lltoft+3,w,c
  5296  002554  A4D8               	btfss	status,2,c
  5297  002556  D7E5               	goto	l2620
  5298  002558  C017  F00F         	movff	___lltoft@c,___ftpack@arg
  5299  00255C  C018  F010         	movff	___lltoft@c+1,___ftpack@arg+1
  5300  002560  C019  F011         	movff	___lltoft@c+2,___ftpack@arg+2
  5301  002564  C01F  F012         	movff	___lltoft@exp,___ftpack@exp
  5302  002568  0E00               	movlw	0
  5303  00256A  6E13               	movwf	___ftpack@sign,c
  5304  00256C  EC8F  F00F         	call	___ftpack	;wreg free
  5305  002570  C00F  F017         	movff	?___ftpack,?___lltoft
  5306  002574  C010  F018         	movff	?___ftpack+1,?___lltoft+1
  5307  002578  C011  F019         	movff	?___ftpack+2,?___lltoft+2
  5308  00257C  D000               	goto	l882
  5309  00257E                     l882:
  5310  00257E  FFFF               	dw	65535	; assembler added errata NOP
  5311  002580  0012               	return		;funcret
  5312  002582  FFFF               	dw	65535	; errata NOP
  5313  002584                     __end_of___lltoft:
  5314                           	opt stack 0
  5315                           tosu	equ	0xFFF
  5316                           tosh	equ	0xFFE
  5317                           tosl	equ	0xFFD
  5318                           pclath	equ	0xFFA
  5319                           tblptru	equ	0xFF8
  5320                           tblptrh	equ	0xFF7
  5321                           tblptrl	equ	0xFF6
  5322                           tablat	equ	0xFF5
  5323                           prodh	equ	0xFF4
  5324                           prodl	equ	0xFF3
  5325                           intcon	equ	0xFF2
  5326                           intcon2	equ	0xFF1
  5327                           postinc0	equ	0xFEE
  5328                           wreg	equ	0xFE8
  5329                           indf2	equ	0xFDF
  5330                           fsr2h	equ	0xFDA
  5331                           fsr2l	equ	0xFD9
  5332                           status	equ	0xFD8
  5333                           
  5334 ;; *************** function _format_putchar *****************
  5335 ;; Defined at:
  5336 ;;		line 6 in file "../../../lib/format.c"
  5337 ;; Parameters:    Size  Location     Type
  5338 ;;  c               1    wreg     unsigned char 
  5339 ;; Auto vars:     Size  Location     Type
  5340 ;;  c               1    0[COMRAM] unsigned char 
  5341 ;; Return value:  Size  Location     Type
  5342 ;;		None               void
  5343 ;; Registers used:
  5344 ;;		wreg
  5345 ;; Tracked objects:
  5346 ;;		On entry : 0/0
  5347 ;;		On exit  : 0/0
  5348 ;;		Unchanged: 0/0
  5349 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5350 ;;      Params:         0       0       0       0       0       0       0
  5351 ;;      Locals:         0       0       0       0       0       0       0
  5352 ;;      Temps:          0       0       0       0       0       0       0
  5353 ;;      Totals:         0       0       0       0       0       0       0
  5354 ;;Total ram usage:        0 bytes
  5355 ;; Hardware stack levels used:    1
  5356 ;; Hardware stack levels required when called:    1
  5357 ;; This function calls:
  5358 ;;		Nothing
  5359 ;; This function is called by:
  5360 ;;		_format_number
  5361 ;;		_format_xint32
  5362 ;;		_format_double
  5363 ;;		_format_float
  5364 ;; This function uses a non-reentrant model
  5365 ;;
  5366                           
  5367                           	psect	text23
  5368  002844                     __ptext23:
  5369                           	opt stack 0
  5370  002844                     _format_putchar:
  5371                           	opt stack 27
  5372                           
  5373                           ;incstack = 0
  5374  002844  FFFF               	dw	65535
  5375                           
  5376                           ;format.c: 7: return;
  5377  002846  0012               	return		;funcret
  5378  002848  FFFF               	dw	65535	; errata NOP
  5379  00284A                     __end_of_format_putchar:
  5380                           	opt stack 0
  5381                           tosu	equ	0xFFF
  5382                           tosh	equ	0xFFE
  5383                           tosl	equ	0xFFD
  5384                           pclath	equ	0xFFA
  5385                           tblptru	equ	0xFF8
  5386                           tblptrh	equ	0xFF7
  5387                           tblptrl	equ	0xFF6
  5388                           tablat	equ	0xFF5
  5389                           prodh	equ	0xFF4
  5390                           prodl	equ	0xFF3
  5391                           intcon	equ	0xFF2
  5392                           intcon2	equ	0xFF1
  5393                           postinc0	equ	0xFEE
  5394                           wreg	equ	0xFE8
  5395                           indf2	equ	0xFDF
  5396                           fsr2h	equ	0xFDA
  5397                           fsr2l	equ	0xFD9
  5398                           status	equ	0xFD8
  5399                           
  5400 ;; *************** function _ser_putch *****************
  5401 ;; Defined at:
  5402 ;;		line 82 in file "../../../lib/ser.c"
  5403 ;; Parameters:    Size  Location     Type
  5404 ;;  c               1    wreg     unsigned char 
  5405 ;; Auto vars:     Size  Location     Type
  5406 ;;  c               1   14[COMRAM] unsigned char 
  5407 ;; Return value:  Size  Location     Type
  5408 ;;		None               void
  5409 ;; Registers used:
  5410 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  5411 ;; Tracked objects:
  5412 ;;		On entry : 0/0
  5413 ;;		On exit  : 0/0
  5414 ;;		Unchanged: 0/0
  5415 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5416 ;;      Params:         0       0       0       0       0       0       0
  5417 ;;      Locals:         1       0       0       0       0       0       0
  5418 ;;      Temps:          0       0       0       0       0       0       0
  5419 ;;      Totals:         1       0       0       0       0       0       0
  5420 ;;Total ram usage:        1 bytes
  5421 ;; Hardware stack levels used:    1
  5422 ;; Hardware stack levels required when called:    1
  5423 ;; This function calls:
  5424 ;;		Nothing
  5425 ;; This function is called by:
  5426 ;;		_ser_puts
  5427 ;;		_output_putch
  5428 ;;		_measure_capacitance
  5429 ;;		_ser_put
  5430 ;;		_ser_puts2
  5431 ;;		_ser_puthex
  5432 ;;		_format_number
  5433 ;;		_format_xint32
  5434 ;;		_format_double
  5435 ;;		_format_float
  5436 ;; This function uses a non-reentrant model
  5437 ;;
  5438                           
  5439                           	psect	text24
  5440  002740                     __ptext24:
  5441                           	opt stack 0
  5442  002740                     _ser_putch:
  5443                           	opt stack 28
  5444                           
  5445                           ;incstack = 0
  5446  002740  FFFF               	dw	65535
  5447                           
  5448                           ;ser_putch@c stored from wreg
  5449  002742  6E0F               	movwf	ser_putch@c,c
  5450                           
  5451                           ;ser.c: 83: while(((txiptr + 1) & ((unsigned char)16 - 1)) == txoptr) continue;
  5452  002744  D000               	goto	l2468
  5453  002746                     l2468:
  5454  002746  FFFF               	dw	65535	; assembler added errata NOP
  5455  002748  286B               	incf	_txiptr,w,c	;volatile
  5456  00274A  0B0F               	andlw	15
  5457  00274C  186C               	xorwf	_txoptr,w,c	;volatile
  5458  00274E  B4D8               	btfsc	status,2,c
  5459  002750  D7FA               	goto	l2468
  5460                           
  5461                           ;ser.c: 84: GIE = 0;
  5462  002752  9EF2               	bcf	intcon,7,c	;volatile
  5463                           
  5464                           ;ser.c: 85: txfifo[txiptr] = c;
  5465  002754  506B               	movf	_txiptr,w,c	;volatile
  5466  002756  0D01               	mullw	1
  5467  002758  0E00               	movlw	low _txfifo
  5468  00275A  24F3               	addwf	prodl,w,c
  5469  00275C  6ED9               	movwf	fsr2l,c
  5470  00275E  0E01               	movlw	high _txfifo
  5471  002760  20F4               	addwfc	prodh,w,c
  5472  002762  6EDA               	movwf	fsr2h,c
  5473  002764  C00F  FFDF         	movff	ser_putch@c,indf2
  5474                           
  5475                           ;ser.c: 86: txiptr = (txiptr + 1) & ((unsigned char)16 - 1);
  5476  002768  286B               	incf	_txiptr,w,c	;volatile
  5477  00276A  0B0F               	andlw	15
  5478  00276C  6E6B               	movwf	_txiptr,c	;volatile
  5479                           
  5480                           ;ser.c: 87: TXIE = 1;
  5481  00276E  889D               	bsf	3997,4,c	;volatile
  5482                           
  5483                           ;ser.c: 88: GIE = 1;
  5484  002770  8EF2               	bsf	intcon,7,c	;volatile
  5485  002772  0012               	return		;funcret
  5486  002774  FFFF               	dw	65535	; errata NOP
  5487  002776                     __end_of_ser_putch:
  5488                           	opt stack 0
  5489                           tosu	equ	0xFFF
  5490                           tosh	equ	0xFFE
  5491                           tosl	equ	0xFFD
  5492                           pclath	equ	0xFFA
  5493                           tblptru	equ	0xFF8
  5494                           tblptrh	equ	0xFF7
  5495                           tblptrl	equ	0xFF6
  5496                           tablat	equ	0xFF5
  5497                           prodh	equ	0xFF4
  5498                           prodl	equ	0xFF3
  5499                           intcon	equ	0xFF2
  5500                           intcon2	equ	0xFF1
  5501                           postinc0	equ	0xFEE
  5502                           wreg	equ	0xFE8
  5503                           indf2	equ	0xFDF
  5504                           fsr2h	equ	0xFDA
  5505                           fsr2l	equ	0xFD9
  5506                           status	equ	0xFD8
  5507                           
  5508 ;; *************** function _output_putch *****************
  5509 ;; Defined at:
  5510 ;;		line 48 in file "../../../src/LC-meter.c"
  5511 ;; Parameters:    Size  Location     Type
  5512 ;;  c               1    wreg     unsigned char 
  5513 ;; Auto vars:     Size  Location     Type
  5514 ;;  c               1   15[COMRAM] unsigned char 
  5515 ;; Return value:  Size  Location     Type
  5516 ;;		None               void
  5517 ;; Registers used:
  5518 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5519 ;; Tracked objects:
  5520 ;;		On entry : 0/0
  5521 ;;		On exit  : 0/0
  5522 ;;		Unchanged: 0/0
  5523 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5524 ;;      Params:         0       0       0       0       0       0       0
  5525 ;;      Locals:         1       0       0       0       0       0       0
  5526 ;;      Temps:          0       0       0       0       0       0       0
  5527 ;;      Totals:         1       0       0       0       0       0       0
  5528 ;;Total ram usage:        1 bytes
  5529 ;; Hardware stack levels used:    1
  5530 ;; Hardware stack levels required when called:    2
  5531 ;; This function calls:
  5532 ;;		_ser_putch
  5533 ;; This function is called by:
  5534 ;;		_measure_capacitance
  5535 ;;		_put_str
  5536 ;;		_format_number
  5537 ;;		_format_xint32
  5538 ;;		_format_double
  5539 ;;		_format_float
  5540 ;; This function uses a non-reentrant model
  5541 ;;
  5542                           
  5543                           	psect	text25
  5544  00282A                     __ptext25:
  5545                           	opt stack 0
  5546  00282A                     _output_putch:
  5547                           	opt stack 26
  5548                           
  5549                           ;incstack = 0
  5550  00282A  FFFF               	dw	65535
  5551                           
  5552                           ;output_putch@c stored from wreg
  5553  00282C  6E10               	movwf	output_putch@c,c
  5554                           
  5555                           ;LC-meter.c: 54: ser_putch(c);
  5556  00282E  5010               	movf	output_putch@c,w,c
  5557  002830  ECA0  F013         	call	_ser_putch
  5558  002834  0012               	return		;funcret
  5559  002836  FFFF               	dw	65535	; errata NOP
  5560  002838                     __end_of_output_putch:
  5561                           	opt stack 0
  5562                           tosu	equ	0xFFF
  5563                           tosh	equ	0xFFE
  5564                           tosl	equ	0xFFD
  5565                           pclath	equ	0xFFA
  5566                           tblptru	equ	0xFF8
  5567                           tblptrh	equ	0xFF7
  5568                           tblptrl	equ	0xFF6
  5569                           tablat	equ	0xFF5
  5570                           prodh	equ	0xFF4
  5571                           prodl	equ	0xFF3
  5572                           intcon	equ	0xFF2
  5573                           intcon2	equ	0xFF1
  5574                           postinc0	equ	0xFEE
  5575                           wreg	equ	0xFE8
  5576                           indf2	equ	0xFDF
  5577                           fsr2h	equ	0xFDA
  5578                           fsr2l	equ	0xFD9
  5579                           status	equ	0xFD8
  5580                           
  5581 ;; *************** function _log10 *****************
  5582 ;; Defined at:
  5583 ;;		line 39 in file "/opt/microchip/xc8/v1.34/sources/common/log.c"
  5584 ;; Parameters:    Size  Location     Type
  5585 ;;  x               3   84[COMRAM] unsigned char 
  5586 ;; Auto vars:     Size  Location     Type
  5587 ;;		None
  5588 ;; Return value:  Size  Location     Type
  5589 ;;                  3   84[COMRAM] unsigned char 
  5590 ;; Registers used:
  5591 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5592 ;; Tracked objects:
  5593 ;;		On entry : 0/0
  5594 ;;		On exit  : 0/0
  5595 ;;		Unchanged: 0/0
  5596 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5597 ;;      Params:         3       0       0       0       0       0       0
  5598 ;;      Locals:         3       0       0       0       0       0       0
  5599 ;;      Temps:          0       0       0       0       0       0       0
  5600 ;;      Totals:         6       0       0       0       0       0       0
  5601 ;;Total ram usage:        6 bytes
  5602 ;; Hardware stack levels used:    1
  5603 ;; Hardware stack levels required when called:    5
  5604 ;; This function calls:
  5605 ;;		___ftmul
  5606 ;;		_log
  5607 ;; This function is called by:
  5608 ;;		_format_double
  5609 ;;		_format_float
  5610 ;; This function uses a non-reentrant model
  5611 ;;
  5612                           
  5613                           	psect	text26
  5614  0025DE                     __ptext26:
  5615                           	opt stack 0
  5616  0025DE                     _log10:
  5617                           	opt stack 23
  5618                           
  5619                           ;incstack = 0
  5620  0025DE  FFFF               	dw	65535
  5621  0025E0  C055  F050         	movff	log10@x,log@x
  5622  0025E4  C056  F051         	movff	log10@x+1,log@x+1
  5623  0025E8  C057  F052         	movff	log10@x+2,log@x+2
  5624  0025EC  EC13  F00C         	call	_log	;wreg free
  5625  0025F0  C050  F058         	movff	?_log,_log10$923
  5626  0025F4  C051  F059         	movff	?_log+1,_log10$923+1
  5627  0025F8  C052  F05A         	movff	?_log+2,_log10$923+2
  5628  0025FC  C058  F026         	movff	_log10$923,___ftmul@f1
  5629  002600  C059  F027         	movff	_log10$923+1,___ftmul@f1+1
  5630  002604  C05A  F028         	movff	_log10$923+2,___ftmul@f1+2
  5631  002608  0E5C               	movlw	92
  5632  00260A  6E29               	movwf	___ftmul@f2,c
  5633  00260C  0EDE               	movlw	222
  5634  00260E  6E2A               	movwf	___ftmul@f2+1,c
  5635  002610  0E3E               	movlw	62
  5636  002612  6E2B               	movwf	___ftmul@f2+2,c
  5637  002614  ECA3  F00C         	call	___ftmul	;wreg free
  5638  002618  C026  F055         	movff	?___ftmul,?_log10
  5639  00261C  C027  F056         	movff	?___ftmul+1,?_log10+1
  5640  002620  C028  F057         	movff	?___ftmul+2,?_log10+2
  5641  002624  D000               	goto	l898
  5642  002626                     l898:
  5643  002626  FFFF               	dw	65535	; assembler added errata NOP
  5644  002628  0012               	return		;funcret
  5645  00262A  FFFF               	dw	65535	; errata NOP
  5646  00262C                     __end_of_log10:
  5647                           	opt stack 0
  5648                           tosu	equ	0xFFF
  5649                           tosh	equ	0xFFE
  5650                           tosl	equ	0xFFD
  5651                           pclath	equ	0xFFA
  5652                           tblptru	equ	0xFF8
  5653                           tblptrh	equ	0xFF7
  5654                           tblptrl	equ	0xFF6
  5655                           tablat	equ	0xFF5
  5656                           prodh	equ	0xFF4
  5657                           prodl	equ	0xFF3
  5658                           intcon	equ	0xFF2
  5659                           intcon2	equ	0xFF1
  5660                           postinc0	equ	0xFEE
  5661                           wreg	equ	0xFE8
  5662                           indf2	equ	0xFDF
  5663                           fsr2h	equ	0xFDA
  5664                           fsr2l	equ	0xFD9
  5665                           status	equ	0xFD8
  5666                           
  5667 ;; *************** function _log *****************
  5668 ;; Defined at:
  5669 ;;		line 5 in file "/opt/microchip/xc8/v1.34/sources/common/log.c"
  5670 ;; Parameters:    Size  Location     Type
  5671 ;;  x               3   79[COMRAM] unsigned char 
  5672 ;; Auto vars:     Size  Location     Type
  5673 ;;  exponent        2   82[COMRAM] int 
  5674 ;; Return value:  Size  Location     Type
  5675 ;;                  3   79[COMRAM] int 
  5676 ;; Registers used:
  5677 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5678 ;; Tracked objects:
  5679 ;;		On entry : 0/0
  5680 ;;		On exit  : 0/0
  5681 ;;		Unchanged: 0/0
  5682 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5683 ;;      Params:         3       0       0       0       0       0       0
  5684 ;;      Locals:         2       0       0       0       0       0       0
  5685 ;;      Temps:          0       0       0       0       0       0       0
  5686 ;;      Totals:         5       0       0       0       0       0       0
  5687 ;;Total ram usage:        5 bytes
  5688 ;; Hardware stack levels used:    1
  5689 ;; Hardware stack levels required when called:    4
  5690 ;; This function calls:
  5691 ;;		___awtoft
  5692 ;;		___ftadd
  5693 ;;		___ftmul
  5694 ;;		_eval_poly
  5695 ;;		_frexp
  5696 ;; This function is called by:
  5697 ;;		_log10
  5698 ;;		_pow
  5699 ;; This function uses a non-reentrant model
  5700 ;;
  5701                           
  5702                           	psect	text27
  5703  001826                     __ptext27:
  5704                           	opt stack 0
  5705  001826                     _log:
  5706                           	opt stack 23
  5707                           
  5708                           ;incstack = 0
  5709  001826  FFFF               	dw	65535
  5710  001828  AE52               	btfss	log@x+2,7,c
  5711  00182A  D006               	goto	l2634
  5712  00182C  0E00               	movlw	0
  5713  00182E  0100               	movlb	0	; () banked
  5714  001830  6FF2               	movwf	(_errno+1)& (0+255),b
  5715  001832  0E21               	movlw	33
  5716  001834  D00B               	goto	L17
  5717                           
  5718                           ; BSR set to: 0
  5719  001836  D084               	goto	l894
  5720  001838                     l2634:
  5721  001838  FFFF               	dw	65535	; assembler added errata NOP
  5722  00183A  5050               	movf	log@x,w,c
  5723  00183C  1051               	iorwf	log@x+1,w,c
  5724  00183E  1052               	iorwf	log@x+2,w,c
  5725  001840  A4D8               	btfss	status,2,c
  5726  001842  D00D               	goto	l2640
  5727  001844  0E00               	movlw	0
  5728  001846  0100               	movlb	0	; () banked
  5729  001848  6FF2               	movwf	(_errno+1)& (0+255),b
  5730  00184A  0E22               	movlw	34
  5731  00184C                     L17:
  5732  00184C  FFFF               	dw	65535	; assembler added errata NOP
  5733  00184E  6FF1               	movwf	_errno& (0+255),b
  5734  001850  0E00               	movlw	0
  5735  001852  6E50               	movwf	?_log,c
  5736  001854  0E00               	movlw	0
  5737  001856  6E51               	movwf	?_log+1,c
  5738  001858  0E00               	movlw	0
  5739  00185A  6E52               	movwf	?_log+2,c
  5740                           
  5741                           ; BSR set to: 0
  5742  00185C  D071               	goto	l894
  5743  00185E                     l2640:
  5744  00185E  FFFF               	dw	65535	; assembler added errata NOP
  5745  001860  0E00               	movlw	0
  5746  001862  6E29               	movwf	___ftmul@f2,c
  5747  001864  0E00               	movlw	0
  5748  001866  6E2A               	movwf	___ftmul@f2+1,c
  5749  001868  0E40               	movlw	64
  5750  00186A  6E2B               	movwf	___ftmul@f2+2,c
  5751  00186C  0E53               	movlw	low log@exponent
  5752  00186E  6E12               	movwf	frexp@eptr,c
  5753  001870  0E00               	movlw	high log@exponent
  5754  001872  6E13               	movwf	frexp@eptr+1,c
  5755  001874  C050  F00F         	movff	log@x,frexp@value
  5756  001878  C051  F010         	movff	log@x+1,frexp@value+1
  5757  00187C  C052  F011         	movff	log@x+2,frexp@value+2
  5758  001880  EC57  F011         	call	_frexp	;wreg free
  5759  001884  C00F  F026         	movff	?_frexp,___ftmul@f1
  5760  001888  C010  F027         	movff	?_frexp+1,___ftmul@f1+1
  5761  00188C  C011  F028         	movff	?_frexp+2,___ftmul@f1+2
  5762  001890  ECA3  F00C         	call	___ftmul	;wreg free
  5763  001894  C026  F038         	movff	?___ftmul,___ftadd@f1
  5764  001898  C027  F039         	movff	?___ftmul+1,___ftadd@f1+1
  5765  00189C  C028  F03A         	movff	?___ftmul+2,___ftadd@f1+2
  5766  0018A0  0E00               	movlw	0
  5767  0018A2  6E3B               	movwf	___ftadd@f2,c
  5768  0018A4  0E80               	movlw	128
  5769  0018A6  6E3C               	movwf	___ftadd@f2+1,c
  5770  0018A8  0EBF               	movlw	191
  5771  0018AA  6E3D               	movwf	___ftadd@f2+2,c
  5772  0018AC  EC5C  F008         	call	___ftadd	;wreg free
  5773  0018B0  C038  F050         	movff	?___ftadd,log@x
  5774  0018B4  C039  F051         	movff	?___ftadd+1,log@x+1
  5775  0018B8  C03A  F052         	movff	?___ftadd+2,log@x+2
  5776  0018BC  0653               	decf	log@exponent,f,c
  5777  0018BE  A0D8               	btfss	status,0,c
  5778  0018C0  0654               	decf	log@exponent+1,f,c
  5779  0018C2  C050  F044         	movff	log@x,eval_poly@x
  5780  0018C6  C051  F045         	movff	log@x+1,eval_poly@x+1
  5781  0018CA  C052  F046         	movff	log@x+2,eval_poly@x+2
  5782  0018CE  0E1F               	movlw	low log@coeff
  5783  0018D0  6E47               	movwf	eval_poly@d,c
  5784  0018D2  0E06               	movlw	high log@coeff
  5785  0018D4  6E48               	movwf	eval_poly@d+1,c
  5786  0018D6  0E00               	movlw	0
  5787  0018D8  6E4A               	movwf	eval_poly@n+1,c
  5788  0018DA  0E08               	movlw	8
  5789  0018DC  6E49               	movwf	eval_poly@n,c
  5790  0018DE  ECAA  F00E         	call	_eval_poly	;wreg free
  5791  0018E2  C044  F050         	movff	?_eval_poly,log@x
  5792  0018E6  C045  F051         	movff	?_eval_poly+1,log@x+1
  5793  0018EA  C046  F052         	movff	?_eval_poly+2,log@x+2
  5794  0018EE  0E72               	movlw	114
  5795  0018F0  6E29               	movwf	___ftmul@f2,c
  5796  0018F2  0E31               	movlw	49
  5797  0018F4  6E2A               	movwf	___ftmul@f2+1,c
  5798  0018F6  0E3F               	movlw	63
  5799  0018F8  6E2B               	movwf	___ftmul@f2+2,c
  5800  0018FA  C053  F017         	movff	log@exponent,___awtoft@c
  5801  0018FE  C054  F018         	movff	log@exponent+1,___awtoft@c+1
  5802  001902  EC62  F013         	call	___awtoft	;wreg free
  5803  001906  C017  F026         	movff	?___awtoft,___ftmul@f1
  5804  00190A  C018  F027         	movff	?___awtoft+1,___ftmul@f1+1
  5805  00190E  C019  F028         	movff	?___awtoft+2,___ftmul@f1+2
  5806  001912  ECA3  F00C         	call	___ftmul	;wreg free
  5807  001916  C026  F038         	movff	?___ftmul,___ftadd@f1
  5808  00191A  C027  F039         	movff	?___ftmul+1,___ftadd@f1+1
  5809  00191E  C028  F03A         	movff	?___ftmul+2,___ftadd@f1+2
  5810  001922  C050  F03B         	movff	log@x,___ftadd@f2
  5811  001926  C051  F03C         	movff	log@x+1,___ftadd@f2+1
  5812  00192A  C052  F03D         	movff	log@x+2,___ftadd@f2+2
  5813  00192E  EC5C  F008         	call	___ftadd	;wreg free
  5814  001932  C038  F050         	movff	?___ftadd,?_log
  5815  001936  C039  F051         	movff	?___ftadd+1,?_log+1
  5816  00193A  C03A  F052         	movff	?___ftadd+2,?_log+2
  5817  00193E  D000               	goto	l894
  5818  001940                     l894:
  5819  001940  FFFF               	dw	65535	; assembler added errata NOP
  5820  001942  0012               	return		;funcret
  5821  001944  FFFF               	dw	65535	; errata NOP
  5822  001946                     __end_of_log:
  5823                           	opt stack 0
  5824                           tosu	equ	0xFFF
  5825                           tosh	equ	0xFFE
  5826                           tosl	equ	0xFFD
  5827                           pclath	equ	0xFFA
  5828                           tblptru	equ	0xFF8
  5829                           tblptrh	equ	0xFF7
  5830                           tblptrl	equ	0xFF6
  5831                           tablat	equ	0xFF5
  5832                           prodh	equ	0xFF4
  5833                           prodl	equ	0xFF3
  5834                           intcon	equ	0xFF2
  5835                           intcon2	equ	0xFF1
  5836                           postinc0	equ	0xFEE
  5837                           wreg	equ	0xFE8
  5838                           indf2	equ	0xFDF
  5839                           fsr2h	equ	0xFDA
  5840                           fsr2l	equ	0xFD9
  5841                           status	equ	0xFD8
  5842                           
  5843 ;; *************** function _frexp *****************
  5844 ;; Defined at:
  5845 ;;		line 254 in file "/opt/microchip/xc8/v1.34/sources/common/frexp.c"
  5846 ;; Parameters:    Size  Location     Type
  5847 ;;  value           3   14[COMRAM] int 
  5848 ;;  eptr            2   17[COMRAM] PTR int 
  5849 ;;		 -> log@exponent(2), floor@expon(2), 
  5850 ;; Auto vars:     Size  Location     Type
  5851 ;;		None
  5852 ;; Return value:  Size  Location     Type
  5853 ;;                  3   14[COMRAM] PTR int 
  5854 ;; Registers used:
  5855 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5856 ;; Tracked objects:
  5857 ;;		On entry : 0/0
  5858 ;;		On exit  : 0/0
  5859 ;;		Unchanged: 0/0
  5860 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5861 ;;      Params:         5       0       0       0       0       0       0
  5862 ;;      Locals:         0       0       0       0       0       0       0
  5863 ;;      Temps:          2       0       0       0       0       0       0
  5864 ;;      Totals:         7       0       0       0       0       0       0
  5865 ;;Total ram usage:        7 bytes
  5866 ;; Hardware stack levels used:    1
  5867 ;; Hardware stack levels required when called:    1
  5868 ;; This function calls:
  5869 ;;		Nothing
  5870 ;; This function is called by:
  5871 ;;		_floor
  5872 ;;		_log
  5873 ;; This function uses a non-reentrant model
  5874 ;;
  5875                           
  5876                           	psect	text28
  5877  0022AE                     __ptext28:
  5878                           	opt stack 0
  5879  0022AE                     _frexp:
  5880                           	opt stack 25
  5881                           
  5882                           ;incstack = 0
  5883  0022AE  FFFF               	dw	65535
  5884  0022B0  500F               	movf	frexp@value,w,c
  5885  0022B2  1010               	iorwf	frexp@value+1,w,c
  5886  0022B4  1011               	iorwf	frexp@value+2,w,c
  5887  0022B6  A4D8               	btfss	status,2,c
  5888  0022B8  D00F               	goto	l2390
  5889  0022BA  C012  FFD9         	movff	frexp@eptr,fsr2l
  5890  0022BE  C013  FFDA         	movff	frexp@eptr+1,fsr2h
  5891  0022C2  0E00               	movlw	0
  5892  0022C4  6EDE               	movwf	postinc2,c
  5893  0022C6  0E00               	movlw	0
  5894  0022C8  6EDD               	movwf	postdec2,c
  5895  0022CA  0E00               	movlw	0
  5896  0022CC  6E0F               	movwf	?_frexp,c
  5897  0022CE  0E00               	movlw	0
  5898  0022D0  6E10               	movwf	?_frexp+1,c
  5899  0022D2  0E00               	movlw	0
  5900  0022D4  6E11               	movwf	?_frexp+2,c
  5901  0022D6  D037               	goto	l728
  5902  0022D8                     l2390:
  5903  0022D8  FFFF               	dw	65535	; assembler added errata NOP
  5904  0022DA  5011               	movf	frexp@value+2,w,c
  5905  0022DC  0B7F               	andlw	127
  5906  0022DE  6E14               	movwf	??_frexp& (0+255),c
  5907  0022E0  6A15               	clrf	(??_frexp+1)& (0+255),c
  5908  0022E2  90D8               	bcf	status,0,c
  5909  0022E4  3614               	rlcf	??_frexp,f,c
  5910  0022E6  3615               	rlcf	??_frexp+1,f,c
  5911  0022E8  C012  FFD9         	movff	frexp@eptr,fsr2l
  5912  0022EC  C013  FFDA         	movff	frexp@eptr+1,fsr2h
  5913  0022F0  C014  FFDE         	movff	??_frexp,postinc2
  5914  0022F4  C015  FFDD         	movff	??_frexp+1,postdec2
  5915  0022F8  AE10               	btfss	frexp@value+1,7,c
  5916  0022FA  D003               	goto	u1940
  5917  0022FC  6A14               	clrf	??_frexp& (0+255),c
  5918  0022FE  2A14               	incf	??_frexp& (0+255),f,c
  5919  002300  D002               	goto	u1948
  5920  002302                     u1940:
  5921  002302  FFFF               	dw	65535	; assembler added errata NOP
  5922  002304  6A14               	clrf	??_frexp& (0+255),c
  5923  002306                     u1948:
  5924  002306  FFFF               	dw	65535	; assembler added errata NOP
  5925  002308  5014               	movf	??_frexp,w,c
  5926  00230A  C012  FFD9         	movff	frexp@eptr,fsr2l
  5927  00230E  C013  FFDA         	movff	frexp@eptr+1,fsr2h
  5928  002312  12DE               	iorwf	postinc2,f,c
  5929  002314  0E00               	movlw	0
  5930  002316  12DD               	iorwf	postdec2,f,c
  5931  002318  C012  FFD9         	movff	frexp@eptr,fsr2l
  5932  00231C  C013  FFDA         	movff	frexp@eptr+1,fsr2h
  5933  002320  0E82               	movlw	130
  5934  002322  26DE               	addwf	postinc2,f,c
  5935  002324  0EFF               	movlw	255
  5936  002326  22DD               	addwfc	postdec2,f,c
  5937  002328  8011               	bsf	frexp@value+2,0,c
  5938  00232A  8211               	bsf	frexp@value+2,1,c
  5939  00232C  8411               	bsf	frexp@value+2,2,c
  5940  00232E  8611               	bsf	frexp@value+2,3,c
  5941  002330  8811               	bsf	frexp@value+2,4,c
  5942  002332  8A11               	bsf	frexp@value+2,5,c
  5943  002334  9C11               	bcf	frexp@value+2,6,c
  5944  002336  9E10               	bcf	frexp@value+1,7,c
  5945  002338  C00F  F00F         	movff	frexp@value,?_frexp
  5946  00233C  C010  F010         	movff	frexp@value+1,?_frexp+1
  5947  002340  C011  F011         	movff	frexp@value+2,?_frexp+2
  5948  002344  D000               	goto	l728
  5949  002346                     l728:
  5950  002346  FFFF               	dw	65535	; assembler added errata NOP
  5951  002348  0012               	return		;funcret
  5952  00234A  FFFF               	dw	65535	; errata NOP
  5953  00234C                     __end_of_frexp:
  5954                           	opt stack 0
  5955                           tosu	equ	0xFFF
  5956                           tosh	equ	0xFFE
  5957                           tosl	equ	0xFFD
  5958                           pclath	equ	0xFFA
  5959                           tblptru	equ	0xFF8
  5960                           tblptrh	equ	0xFF7
  5961                           tblptrl	equ	0xFF6
  5962                           tablat	equ	0xFF5
  5963                           prodh	equ	0xFF4
  5964                           prodl	equ	0xFF3
  5965                           intcon	equ	0xFF2
  5966                           intcon2	equ	0xFF1
  5967                           postinc0	equ	0xFEE
  5968                           wreg	equ	0xFE8
  5969                           indf2	equ	0xFDF
  5970                           postinc2	equ	0xFDE
  5971                           postdec2	equ	0xFDD
  5972                           fsr2h	equ	0xFDA
  5973                           fsr2l	equ	0xFD9
  5974                           status	equ	0xFD8
  5975                           
  5976 ;; *************** function _eval_poly *****************
  5977 ;; Defined at:
  5978 ;;		line 4 in file "/opt/microchip/xc8/v1.34/sources/common/evalpoly.c"
  5979 ;; Parameters:    Size  Location     Type
  5980 ;;  x               3   67[COMRAM] PTR int 
  5981 ;;  d               2   70[COMRAM] PTR const 
  5982 ;;		 -> exp@coeff(30), log@coeff(27), 
  5983 ;;  n               2   72[COMRAM] int 
  5984 ;; Auto vars:     Size  Location     Type
  5985 ;;  res             3   76[COMRAM] int 
  5986 ;; Return value:  Size  Location     Type
  5987 ;;                  3   67[COMRAM] int 
  5988 ;; Registers used:
  5989 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5990 ;; Tracked objects:
  5991 ;;		On entry : 0/0
  5992 ;;		On exit  : 0/0
  5993 ;;		Unchanged: 0/0
  5994 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5995 ;;      Params:         7       0       0       0       0       0       0
  5996 ;;      Locals:         3       0       0       0       0       0       0
  5997 ;;      Temps:          2       0       0       0       0       0       0
  5998 ;;      Totals:        12       0       0       0       0       0       0
  5999 ;;Total ram usage:       12 bytes
  6000 ;; Hardware stack levels used:    1
  6001 ;; Hardware stack levels required when called:    3
  6002 ;; This function calls:
  6003 ;;		___ftadd
  6004 ;;		___ftmul
  6005 ;;		___wmul
  6006 ;; This function is called by:
  6007 ;;		_log
  6008 ;;		_exp
  6009 ;; This function uses a non-reentrant model
  6010 ;;
  6011                           
  6012                           	psect	text29
  6013  001D54                     __ptext29:
  6014                           	opt stack 0
  6015  001D54                     _eval_poly:
  6016                           	opt stack 23
  6017                           
  6018                           ;incstack = 0
  6019  001D54  FFFF               	dw	65535
  6020  001D56  C049  F00F         	movff	eval_poly@n,___wmul@multiplier
  6021  001D5A  C04A  F010         	movff	eval_poly@n+1,___wmul@multiplier+1
  6022  001D5E  0E00               	movlw	0
  6023  001D60  6E12               	movwf	___wmul@multiplicand+1,c
  6024  001D62  0E03               	movlw	3
  6025  001D64  6E11               	movwf	___wmul@multiplicand,c
  6026  001D66  ECD3  F013         	call	___wmul	;wreg free
  6027  001D6A  C047  F04B         	movff	eval_poly@d,??_eval_poly
  6028  001D6E  C048  F04C         	movff	eval_poly@d+1,??_eval_poly+1
  6029  001D72  500F               	movf	?___wmul,w,c
  6030  001D74  264B               	addwf	??_eval_poly,f,c
  6031  001D76  5010               	movf	?___wmul+1,w,c
  6032  001D78  224C               	addwfc	??_eval_poly+1,f,c
  6033  001D7A  C04B  FFF6         	movff	??_eval_poly,tblptrl
  6034  001D7E  C04C  FFF7         	movff	??_eval_poly+1,tblptrh
  6035  001D82                     	if	0	;tblptru may be non-zero
  6036  001D82                     	endif
  6037  001D82                     	if	0	;tblptru may be non-zero
  6038  001D82                     	endif
  6039  001D82  0009               	tblrd		*+
  6040  001D84  FFFF               	dw	65535	; errata NOP
  6041  001D86  CFF5 F04D          	movff	tablat,eval_poly@res
  6042  001D8A  0009               	tblrd		*+
  6043  001D8C  FFFF               	dw	65535	; errata NOP
  6044  001D8E  CFF5 F04E          	movff	tablat,eval_poly@res+1
  6045  001D92  000A               	tblrd		*-
  6046  001D94  FFFF               	dw	65535	; errata NOP
  6047  001D96  CFF5 F04F          	movff	tablat,eval_poly@res+2
  6048  001D9A  D043               	goto	l2612
  6049  001D9C                     l2610:
  6050  001D9C  FFFF               	dw	65535	; assembler added errata NOP
  6051  001D9E  C04D  F029         	movff	eval_poly@res,___ftmul@f2
  6052  001DA2  C04E  F02A         	movff	eval_poly@res+1,___ftmul@f2+1
  6053  001DA6  C04F  F02B         	movff	eval_poly@res+2,___ftmul@f2+2
  6054  001DAA  C044  F026         	movff	eval_poly@x,___ftmul@f1
  6055  001DAE  C045  F027         	movff	eval_poly@x+1,___ftmul@f1+1
  6056  001DB2  C046  F028         	movff	eval_poly@x+2,___ftmul@f1+2
  6057  001DB6  ECA3  F00C         	call	___ftmul	;wreg free
  6058  001DBA  C026  F038         	movff	?___ftmul,___ftadd@f1
  6059  001DBE  C027  F039         	movff	?___ftmul+1,___ftadd@f1+1
  6060  001DC2  C028  F03A         	movff	?___ftmul+2,___ftadd@f1+2
  6061  001DC6  0E00               	movlw	0
  6062  001DC8  6E12               	movwf	___wmul@multiplicand+1,c
  6063  001DCA  0E03               	movlw	3
  6064  001DCC  6E11               	movwf	___wmul@multiplicand,c
  6065  001DCE  0649               	decf	eval_poly@n,f,c
  6066  001DD0  A0D8               	btfss	status,0,c
  6067  001DD2  064A               	decf	eval_poly@n+1,f,c
  6068  001DD4  C049  F00F         	movff	eval_poly@n,___wmul@multiplier
  6069  001DD8  C04A  F010         	movff	eval_poly@n+1,___wmul@multiplier+1
  6070  001DDC  ECD3  F013         	call	___wmul	;wreg free
  6071  001DE0  C047  F04B         	movff	eval_poly@d,??_eval_poly
  6072  001DE4  C048  F04C         	movff	eval_poly@d+1,??_eval_poly+1
  6073  001DE8  500F               	movf	?___wmul,w,c
  6074  001DEA  264B               	addwf	??_eval_poly,f,c
  6075  001DEC  5010               	movf	?___wmul+1,w,c
  6076  001DEE  224C               	addwfc	??_eval_poly+1,f,c
  6077  001DF0  C04B  FFF6         	movff	??_eval_poly,tblptrl
  6078  001DF4  C04C  FFF7         	movff	??_eval_poly+1,tblptrh
  6079  001DF8                     	if	0	;tblptru may be non-zero
  6080  001DF8                     	endif
  6081  001DF8                     	if	0	;tblptru may be non-zero
  6082  001DF8                     	endif
  6083  001DF8  0009               	tblrd		*+
  6084  001DFA  FFFF               	dw	65535	; errata NOP
  6085  001DFC  CFF5 F03B          	movff	tablat,___ftadd@f2
  6086  001E00  0009               	tblrd		*+
  6087  001E02  FFFF               	dw	65535	; errata NOP
  6088  001E04  CFF5 F03C          	movff	tablat,___ftadd@f2+1
  6089  001E08  000A               	tblrd		*-
  6090  001E0A  FFFF               	dw	65535	; errata NOP
  6091  001E0C  CFF5 F03D          	movff	tablat,___ftadd@f2+2
  6092  001E10  EC5C  F008         	call	___ftadd	;wreg free
  6093  001E14  C038  F04D         	movff	?___ftadd,eval_poly@res
  6094  001E18  C039  F04E         	movff	?___ftadd+1,eval_poly@res+1
  6095  001E1C  C03A  F04F         	movff	?___ftadd+2,eval_poly@res+2
  6096  001E20  D000               	goto	l2612
  6097  001E22                     l2612:
  6098  001E22  FFFF               	dw	65535	; assembler added errata NOP
  6099  001E24  5049               	movf	eval_poly@n,w,c
  6100  001E26  104A               	iorwf	eval_poly@n+1,w,c
  6101  001E28  A4D8               	btfss	status,2,c
  6102  001E2A  D7B8               	goto	l2610
  6103  001E2C  C04D  F044         	movff	eval_poly@res,?_eval_poly
  6104  001E30  C04E  F045         	movff	eval_poly@res+1,?_eval_poly+1
  6105  001E34  C04F  F046         	movff	eval_poly@res+2,?_eval_poly+2
  6106  001E38  0012               	return		;funcret
  6107  001E3A  FFFF               	dw	65535	; errata NOP
  6108  001E3C                     __end_of_eval_poly:
  6109                           	opt stack 0
  6110                           tosu	equ	0xFFF
  6111                           tosh	equ	0xFFE
  6112                           tosl	equ	0xFFD
  6113                           pclath	equ	0xFFA
  6114                           tblptru	equ	0xFF8
  6115                           tblptrh	equ	0xFF7
  6116                           tblptrl	equ	0xFF6
  6117                           tablat	equ	0xFF5
  6118                           prodh	equ	0xFF4
  6119                           prodl	equ	0xFF3
  6120                           intcon	equ	0xFF2
  6121                           intcon2	equ	0xFF1
  6122                           postinc0	equ	0xFEE
  6123                           wreg	equ	0xFE8
  6124                           indf2	equ	0xFDF
  6125                           postinc2	equ	0xFDE
  6126                           postdec2	equ	0xFDD
  6127                           fsr2h	equ	0xFDA
  6128                           fsr2l	equ	0xFD9
  6129                           status	equ	0xFD8
  6130                           
  6131 ;; *************** function ___ftmul *****************
  6132 ;; Defined at:
  6133 ;;		line 62 in file "/opt/microchip/xc8/v1.34/sources/common/ftmul.c"
  6134 ;; Parameters:    Size  Location     Type
  6135 ;;  f1              3   37[COMRAM] float 
  6136 ;;  f2              3   40[COMRAM] float 
  6137 ;; Auto vars:     Size  Location     Type
  6138 ;;  f3_as_produc    3   47[COMRAM] unsigned um
  6139 ;;  sign            1   51[COMRAM] unsigned char 
  6140 ;;  cntr            1   50[COMRAM] unsigned char 
  6141 ;;  exp             1   46[COMRAM] unsigned char 
  6142 ;; Return value:  Size  Location     Type
  6143 ;;                  3   37[COMRAM] float 
  6144 ;; Registers used:
  6145 ;;		wreg, status,2, status,0, cstack
  6146 ;; Tracked objects:
  6147 ;;		On entry : 0/0
  6148 ;;		On exit  : 0/0
  6149 ;;		Unchanged: 0/0
  6150 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6151 ;;      Params:         6       0       0       0       0       0       0
  6152 ;;      Locals:         6       0       0       0       0       0       0
  6153 ;;      Temps:          3       0       0       0       0       0       0
  6154 ;;      Totals:        15       0       0       0       0       0       0
  6155 ;;Total ram usage:       15 bytes
  6156 ;; Hardware stack levels used:    1
  6157 ;; Hardware stack levels required when called:    2
  6158 ;; This function calls:
  6159 ;;		___ftpack
  6160 ;; This function is called by:
  6161 ;;		_format_double
  6162 ;;		_measure_capacitance
  6163 ;;		_measure_inductance
  6164 ;;		_log
  6165 ;;		_log10
  6166 ;;		_pow
  6167 ;;		_eval_poly
  6168 ;;		_exp
  6169 ;;		_format_float
  6170 ;; This function uses a non-reentrant model
  6171 ;;
  6172                           
  6173                           	psect	text30
  6174  001946                     __ptext30:
  6175                           	opt stack 0
  6176  001946                     ___ftmul:
  6177                           	opt stack 27
  6178                           
  6179                           ;incstack = 0
  6180  001946  FFFF               	dw	65535
  6181  001948  C028  F02C         	movff	___ftmul@f1+2,??___ftmul
  6182  00194C  6A2D               	clrf	(??___ftmul+1)& (0+255),c
  6183  00194E  6A2E               	clrf	(??___ftmul+2)& (0+255),c
  6184  001950  3427               	rlcf	___ftmul@f1+1,w,c
  6185  001952  362C               	rlcf	??___ftmul& (0+255),f,c
  6186  001954  E301               	bnc	u1871
  6187  001956  802D               	bsf	(??___ftmul+1)& (0+255),0,c
  6188  001958                     u1871:
  6189  001958  502C               	movf	??___ftmul,w,c
  6190  00195A  6E2F               	movwf	___ftmul@exp,c
  6191  00195C  502F               	movf	___ftmul@exp,w,c
  6192  00195E  A4D8               	btfss	status,2,c
  6193  001960  D002               	goto	l2340
  6194  001962  D00F               	goto	l2342
  6195  001964  D075               	goto	l792
  6196  001966                     l2340:
  6197  001966  FFFF               	dw	65535	; assembler added errata NOP
  6198  001968  C02B  F02C         	movff	___ftmul@f2+2,??___ftmul
  6199  00196C  6A2D               	clrf	(??___ftmul+1)& (0+255),c
  6200  00196E  6A2E               	clrf	(??___ftmul+2)& (0+255),c
  6201  001970  342A               	rlcf	___ftmul@f2+1,w,c
  6202  001972  362C               	rlcf	??___ftmul& (0+255),f,c
  6203  001974  E301               	bnc	u1891
  6204  001976  802D               	bsf	(??___ftmul+1)& (0+255),0,c
  6205  001978                     u1891:
  6206  001978  502C               	movf	??___ftmul,w,c
  6207  00197A  6E34               	movwf	___ftmul@sign,c
  6208  00197C  5034               	movf	___ftmul@sign,w,c
  6209  00197E  A4D8               	btfss	status,2,c
  6210  001980  D008               	goto	l2346
  6211  001982                     l2342:
  6212  001982  FFFF               	dw	65535	; assembler added errata NOP
  6213  001984  0E00               	movlw	0
  6214  001986  6E26               	movwf	?___ftmul,c
  6215  001988  0E00               	movlw	0
  6216  00198A  6E27               	movwf	?___ftmul+1,c
  6217  00198C  0E00               	movlw	0
  6218  00198E  6E28               	movwf	?___ftmul+2,c
  6219  001990  D05F               	goto	l792
  6220  001992                     l2346:
  6221  001992  FFFF               	dw	65535	; assembler added errata NOP
  6222  001994  5034               	movf	___ftmul@sign,w,c
  6223  001996  0F7B               	addlw	123
  6224  001998  262F               	addwf	___ftmul@exp,f,c
  6225  00199A  C028  F034         	movff	___ftmul@f1+2,___ftmul@sign
  6226  00199E  502B               	movf	___ftmul@f2+2,w,c
  6227  0019A0  1A34               	xorwf	___ftmul@sign,f,c
  6228  0019A2  0E80               	movlw	128
  6229  0019A4  1634               	andwf	___ftmul@sign,f,c
  6230  0019A6  8E27               	bsf	___ftmul@f1+1,7,c
  6231  0019A8  8E2A               	bsf	___ftmul@f2+1,7,c
  6232  0019AA  0EFF               	movlw	255
  6233  0019AC  1629               	andwf	___ftmul@f2,f,c
  6234  0019AE  0EFF               	movlw	255
  6235  0019B0  162A               	andwf	___ftmul@f2+1,f,c
  6236  0019B2  0E00               	movlw	0
  6237  0019B4  162B               	andwf	___ftmul@f2+2,f,c
  6238  0019B6  0E00               	movlw	0
  6239  0019B8  6E30               	movwf	___ftmul@f3_as_product,c
  6240  0019BA  0E00               	movlw	0
  6241  0019BC  6E31               	movwf	___ftmul@f3_as_product+1,c
  6242  0019BE  0E00               	movlw	0
  6243  0019C0  6E32               	movwf	___ftmul@f3_as_product+2,c
  6244  0019C2  0E07               	movlw	7
  6245  0019C4  6E33               	movwf	___ftmul@cntr,c
  6246  0019C6  D000               	goto	l2360
  6247  0019C8                     l2360:
  6248  0019C8  FFFF               	dw	65535	; assembler added errata NOP
  6249  0019CA  A026               	btfss	___ftmul@f1,0,c
  6250  0019CC  D007               	goto	l2364
  6251  0019CE  5029               	movf	___ftmul@f2,w,c
  6252  0019D0  2630               	addwf	___ftmul@f3_as_product,f,c
  6253  0019D2  502A               	movf	___ftmul@f2+1,w,c
  6254  0019D4  2231               	addwfc	___ftmul@f3_as_product+1,f,c
  6255  0019D6  502B               	movf	___ftmul@f2+2,w,c
  6256  0019D8  2232               	addwfc	___ftmul@f3_as_product+2,f,c
  6257  0019DA  D000               	goto	l2364
  6258  0019DC                     l2364:
  6259  0019DC  FFFF               	dw	65535	; assembler added errata NOP
  6260  0019DE  90D8               	bcf	status,0,c
  6261  0019E0  3228               	rrcf	___ftmul@f1+2,f,c
  6262  0019E2  3227               	rrcf	___ftmul@f1+1,f,c
  6263  0019E4  3226               	rrcf	___ftmul@f1,f,c
  6264  0019E6  90D8               	bcf	status,0,c
  6265  0019E8  3629               	rlcf	___ftmul@f2,f,c
  6266  0019EA  362A               	rlcf	___ftmul@f2+1,f,c
  6267  0019EC  362B               	rlcf	___ftmul@f2+2,f,c
  6268  0019EE  2E33               	decfsz	___ftmul@cntr,f,c
  6269  0019F0  D7EB               	goto	l2360
  6270  0019F2  D000               	goto	l2368
  6271  0019F4                     l2368:
  6272  0019F4  FFFF               	dw	65535	; assembler added errata NOP
  6273  0019F6  0E09               	movlw	9
  6274  0019F8  6E33               	movwf	___ftmul@cntr,c
  6275  0019FA  D000               	goto	l2370
  6276  0019FC                     l2370:
  6277  0019FC  FFFF               	dw	65535	; assembler added errata NOP
  6278  0019FE  A026               	btfss	___ftmul@f1,0,c
  6279  001A00  D007               	goto	l2374
  6280  001A02  5029               	movf	___ftmul@f2,w,c
  6281  001A04  2630               	addwf	___ftmul@f3_as_product,f,c
  6282  001A06  502A               	movf	___ftmul@f2+1,w,c
  6283  001A08  2231               	addwfc	___ftmul@f3_as_product+1,f,c
  6284  001A0A  502B               	movf	___ftmul@f2+2,w,c
  6285  001A0C  2232               	addwfc	___ftmul@f3_as_product+2,f,c
  6286  001A0E  D000               	goto	l2374
  6287  001A10                     l2374:
  6288  001A10  FFFF               	dw	65535	; assembler added errata NOP
  6289  001A12  90D8               	bcf	status,0,c
  6290  001A14  3228               	rrcf	___ftmul@f1+2,f,c
  6291  001A16  3227               	rrcf	___ftmul@f1+1,f,c
  6292  001A18  3226               	rrcf	___ftmul@f1,f,c
  6293  001A1A  90D8               	bcf	status,0,c
  6294  001A1C  3232               	rrcf	___ftmul@f3_as_product+2,f,c
  6295  001A1E  3231               	rrcf	___ftmul@f3_as_product+1,f,c
  6296  001A20  3230               	rrcf	___ftmul@f3_as_product,f,c
  6297  001A22  2E33               	decfsz	___ftmul@cntr,f,c
  6298  001A24  D7EB               	goto	l2370
  6299  001A26  D000               	goto	l2378
  6300  001A28                     l2378:
  6301  001A28  FFFF               	dw	65535	; assembler added errata NOP
  6302  001A2A  C030  F00F         	movff	___ftmul@f3_as_product,___ftpack@arg
  6303  001A2E  C031  F010         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
  6304  001A32  C032  F011         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
  6305  001A36  C02F  F012         	movff	___ftmul@exp,___ftpack@exp
  6306  001A3A  C034  F013         	movff	___ftmul@sign,___ftpack@sign
  6307  001A3E  EC8F  F00F         	call	___ftpack	;wreg free
  6308  001A42  C00F  F026         	movff	?___ftpack,?___ftmul
  6309  001A46  C010  F027         	movff	?___ftpack+1,?___ftmul+1
  6310  001A4A  C011  F028         	movff	?___ftpack+2,?___ftmul+2
  6311  001A4E  D000               	goto	l792
  6312  001A50                     l792:
  6313  001A50  FFFF               	dw	65535	; assembler added errata NOP
  6314  001A52  0012               	return		;funcret
  6315  001A54  FFFF               	dw	65535	; errata NOP
  6316  001A56                     __end_of___ftmul:
  6317                           	opt stack 0
  6318                           tosu	equ	0xFFF
  6319                           tosh	equ	0xFFE
  6320                           tosl	equ	0xFFD
  6321                           pclath	equ	0xFFA
  6322                           tblptru	equ	0xFF8
  6323                           tblptrh	equ	0xFF7
  6324                           tblptrl	equ	0xFF6
  6325                           tablat	equ	0xFF5
  6326                           prodh	equ	0xFF4
  6327                           prodl	equ	0xFF3
  6328                           intcon	equ	0xFF2
  6329                           intcon2	equ	0xFF1
  6330                           postinc0	equ	0xFEE
  6331                           wreg	equ	0xFE8
  6332                           indf2	equ	0xFDF
  6333                           postinc2	equ	0xFDE
  6334                           postdec2	equ	0xFDD
  6335                           fsr2h	equ	0xFDA
  6336                           fsr2l	equ	0xFD9
  6337                           status	equ	0xFD8
  6338                           
  6339 ;; *************** function ___ftadd *****************
  6340 ;; Defined at:
  6341 ;;		line 86 in file "/opt/microchip/xc8/v1.34/sources/common/ftadd.c"
  6342 ;; Parameters:    Size  Location     Type
  6343 ;;  f1              3   55[COMRAM] float 
  6344 ;;  f2              3   58[COMRAM] float 
  6345 ;; Auto vars:     Size  Location     Type
  6346 ;;  exp1            1   66[COMRAM] unsigned char 
  6347 ;;  exp2            1   65[COMRAM] unsigned char 
  6348 ;;  sign            1   64[COMRAM] unsigned char 
  6349 ;; Return value:  Size  Location     Type
  6350 ;;                  3   55[COMRAM] float 
  6351 ;; Registers used:
  6352 ;;		wreg, status,2, status,0, cstack
  6353 ;; Tracked objects:
  6354 ;;		On entry : 0/0
  6355 ;;		On exit  : 0/0
  6356 ;;		Unchanged: 0/0
  6357 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6358 ;;      Params:         6       0       0       0       0       0       0
  6359 ;;      Locals:         3       0       0       0       0       0       0
  6360 ;;      Temps:          3       0       0       0       0       0       0
  6361 ;;      Totals:        12       0       0       0       0       0       0
  6362 ;;Total ram usage:       12 bytes
  6363 ;; Hardware stack levels used:    1
  6364 ;; Hardware stack levels required when called:    2
  6365 ;; This function calls:
  6366 ;;		___ftpack
  6367 ;; This function is called by:
  6368 ;;		_measure_capacitance
  6369 ;;		_measure_inductance
  6370 ;;		_floor
  6371 ;;		___ftsub
  6372 ;;		_log
  6373 ;;		_eval_poly
  6374 ;; This function uses a non-reentrant model
  6375 ;;
  6376                           
  6377                           	psect	text31
  6378  0010B8                     __ptext31:
  6379                           	opt stack 0
  6380  0010B8                     ___ftadd:
  6381                           	opt stack 27
  6382                           
  6383                           ;incstack = 0
  6384  0010B8  FFFF               	dw	65535
  6385  0010BA  C03A  F03E         	movff	___ftadd@f1+2,??___ftadd
  6386  0010BE  6A3F               	clrf	(??___ftadd+1)& (0+255),c
  6387  0010C0  6A40               	clrf	(??___ftadd+2)& (0+255),c
  6388  0010C2  3439               	rlcf	___ftadd@f1+1,w,c
  6389  0010C4  363E               	rlcf	??___ftadd& (0+255),f,c
  6390  0010C6  E301               	bnc	u1661
  6391  0010C8  803F               	bsf	(??___ftadd+1)& (0+255),0,c
  6392  0010CA                     u1661:
  6393  0010CA  503E               	movf	??___ftadd,w,c
  6394  0010CC  6E43               	movwf	___ftadd@exp1,c
  6395  0010CE  C03D  F03E         	movff	___ftadd@f2+2,??___ftadd
  6396  0010D2  6A3F               	clrf	(??___ftadd+1)& (0+255),c
  6397  0010D4  6A40               	clrf	(??___ftadd+2)& (0+255),c
  6398  0010D6  343C               	rlcf	___ftadd@f2+1,w,c
  6399  0010D8  363E               	rlcf	??___ftadd& (0+255),f,c
  6400  0010DA  E301               	bnc	u1671
  6401  0010DC  803F               	bsf	(??___ftadd+1)& (0+255),0,c
  6402  0010DE                     u1671:
  6403  0010DE  503E               	movf	??___ftadd,w,c
  6404  0010E0  6E42               	movwf	___ftadd@exp2,c
  6405  0010E2  5043               	movf	___ftadd@exp1,w,c
  6406  0010E4  B4D8               	btfsc	status,2,c
  6407  0010E6  D00B               	goto	l745
  6408  0010E8  5042               	movf	___ftadd@exp2,w,c
  6409  0010EA  5C43               	subwf	___ftadd@exp1,w,c
  6410  0010EC  B0D8               	btfsc	status,0,c
  6411  0010EE  D00F               	goto	l2272
  6412  0010F0  5043               	movf	___ftadd@exp1,w,c
  6413  0010F2  0800               	sublw	0
  6414  0010F4  2442               	addwf	___ftadd@exp2,w,c
  6415  0010F6  6E3E               	movwf	??___ftadd& (0+255),c
  6416  0010F8  0E18               	movlw	24
  6417  0010FA  643E               	cpfsgt	??___ftadd,c
  6418  0010FC  D008               	goto	l2272
  6419  0010FE                     l745:
  6420  0010FE  FFFF               	dw	65535	; assembler added errata NOP
  6421  001100  C03B  F038         	movff	___ftadd@f2,?___ftadd
  6422  001104  C03C  F039         	movff	___ftadd@f2+1,?___ftadd+1
  6423  001108  C03D  F03A         	movff	___ftadd@f2+2,?___ftadd+2
  6424  00110C  D0C7               	goto	l746
  6425  00110E                     l2272:
  6426  00110E  FFFF               	dw	65535	; assembler added errata NOP
  6427  001110  5042               	movf	___ftadd@exp2,w,c
  6428  001112  B4D8               	btfsc	status,2,c
  6429  001114  D00B               	goto	l749
  6430  001116  5043               	movf	___ftadd@exp1,w,c
  6431  001118  5C42               	subwf	___ftadd@exp2,w,c
  6432  00111A  B0D8               	btfsc	status,0,c
  6433  00111C  D00F               	goto	l2278
  6434  00111E  5042               	movf	___ftadd@exp2,w,c
  6435  001120  0800               	sublw	0
  6436  001122  2443               	addwf	___ftadd@exp1,w,c
  6437  001124  6E3E               	movwf	??___ftadd& (0+255),c
  6438  001126  0E18               	movlw	24
  6439  001128  643E               	cpfsgt	??___ftadd,c
  6440  00112A  D008               	goto	l2278
  6441  00112C                     l749:
  6442  00112C  FFFF               	dw	65535	; assembler added errata NOP
  6443  00112E  C038  F038         	movff	___ftadd@f1,?___ftadd
  6444  001132  C039  F039         	movff	___ftadd@f1+1,?___ftadd+1
  6445  001136  C03A  F03A         	movff	___ftadd@f1+2,?___ftadd+2
  6446  00113A  D0B0               	goto	l746
  6447  00113C                     l2278:
  6448  00113C  FFFF               	dw	65535	; assembler added errata NOP
  6449  00113E  0E06               	movlw	6
  6450  001140  6E41               	movwf	___ftadd@sign,c
  6451  001142  AE3A               	btfss	___ftadd@f1+2,7,c
  6452  001144  D002               	goto	l2284
  6453  001146  8E41               	bsf	___ftadd@sign,7,c
  6454  001148  D000               	goto	l2284
  6455  00114A                     l2284:
  6456  00114A  FFFF               	dw	65535	; assembler added errata NOP
  6457  00114C  BE3D               	btfsc	___ftadd@f2+2,7,c
  6458  00114E  8C41               	bsf	___ftadd@sign,6,c
  6459  001150  8E39               	bsf	___ftadd@f1+1,7,c
  6460  001152  0EFF               	movlw	255
  6461  001154  1638               	andwf	___ftadd@f1,f,c
  6462  001156  0EFF               	movlw	255
  6463  001158  1639               	andwf	___ftadd@f1+1,f,c
  6464  00115A  0E00               	movlw	0
  6465  00115C  163A               	andwf	___ftadd@f1+2,f,c
  6466  00115E  8E3C               	bsf	___ftadd@f2+1,7,c
  6467  001160  0EFF               	movlw	255
  6468  001162  163B               	andwf	___ftadd@f2,f,c
  6469  001164  0EFF               	movlw	255
  6470  001166  163C               	andwf	___ftadd@f2+1,f,c
  6471  001168  0E00               	movlw	0
  6472  00116A  163D               	andwf	___ftadd@f2+2,f,c
  6473  00116C  5042               	movf	___ftadd@exp2,w,c
  6474  00116E  5C43               	subwf	___ftadd@exp1,w,c
  6475  001170  B0D8               	btfsc	status,0,c
  6476  001172  D021               	goto	l2304
  6477  001174                     l2294:
  6478  001174  FFFF               	dw	65535	; assembler added errata NOP
  6479  001176  90D8               	bcf	status,0,c
  6480  001178  363B               	rlcf	___ftadd@f2,f,c
  6481  00117A  363C               	rlcf	___ftadd@f2+1,f,c
  6482  00117C  363D               	rlcf	___ftadd@f2+2,f,c
  6483  00117E  0642               	decf	___ftadd@exp2,f,c
  6484  001180  5043               	movf	___ftadd@exp1,w,c
  6485  001182  1842               	xorwf	___ftadd@exp2,w,c
  6486  001184  B4D8               	btfsc	status,2,c
  6487  001186  D010               	goto	l2302
  6488  001188  0641               	decf	___ftadd@sign,f,c
  6489  00118A  C041  F03E         	movff	___ftadd@sign,??___ftadd
  6490  00118E  0E07               	movlw	7
  6491  001190  163E               	andwf	??___ftadd,f,c
  6492  001192  B4D8               	btfsc	status,2,c
  6493  001194  D009               	goto	l2302
  6494  001196  D7EE               	goto	l2294
  6495  001198  D007               	goto	l2302
  6496  00119A                     l2300:
  6497  00119A  FFFF               	dw	65535	; assembler added errata NOP
  6498  00119C  90D8               	bcf	status,0,c
  6499  00119E  323A               	rrcf	___ftadd@f1+2,f,c
  6500  0011A0  3239               	rrcf	___ftadd@f1+1,f,c
  6501  0011A2  3238               	rrcf	___ftadd@f1,f,c
  6502  0011A4  2A43               	incf	___ftadd@exp1,f,c
  6503  0011A6  D000               	goto	l2302
  6504  0011A8                     l2302:
  6505  0011A8  FFFF               	dw	65535	; assembler added errata NOP
  6506  0011AA  5042               	movf	___ftadd@exp2,w,c
  6507  0011AC  1843               	xorwf	___ftadd@exp1,w,c
  6508  0011AE  B4D8               	btfsc	status,2,c
  6509  0011B0  D028               	goto	l760
  6510  0011B2  D7F3               	goto	l2300
  6511  0011B4  D026               	goto	l760
  6512  0011B6                     l2304:
  6513  0011B6  FFFF               	dw	65535	; assembler added errata NOP
  6514  0011B8  5043               	movf	___ftadd@exp1,w,c
  6515  0011BA  5C42               	subwf	___ftadd@exp2,w,c
  6516  0011BC  B0D8               	btfsc	status,0,c
  6517  0011BE  D021               	goto	l760
  6518  0011C0                     l2306:
  6519  0011C0  FFFF               	dw	65535	; assembler added errata NOP
  6520  0011C2  90D8               	bcf	status,0,c
  6521  0011C4  3638               	rlcf	___ftadd@f1,f,c
  6522  0011C6  3639               	rlcf	___ftadd@f1+1,f,c
  6523  0011C8  363A               	rlcf	___ftadd@f1+2,f,c
  6524  0011CA  0643               	decf	___ftadd@exp1,f,c
  6525  0011CC  5043               	movf	___ftadd@exp1,w,c
  6526  0011CE  1842               	xorwf	___ftadd@exp2,w,c
  6527  0011D0  B4D8               	btfsc	status,2,c
  6528  0011D2  D010               	goto	l2314
  6529  0011D4  0641               	decf	___ftadd@sign,f,c
  6530  0011D6  C041  F03E         	movff	___ftadd@sign,??___ftadd
  6531  0011DA  0E07               	movlw	7
  6532  0011DC  163E               	andwf	??___ftadd,f,c
  6533  0011DE  B4D8               	btfsc	status,2,c
  6534  0011E0  D009               	goto	l2314
  6535  0011E2  D7EE               	goto	l2306
  6536  0011E4  D007               	goto	l2314
  6537  0011E6                     l2312:
  6538  0011E6  FFFF               	dw	65535	; assembler added errata NOP
  6539  0011E8  90D8               	bcf	status,0,c
  6540  0011EA  323D               	rrcf	___ftadd@f2+2,f,c
  6541  0011EC  323C               	rrcf	___ftadd@f2+1,f,c
  6542  0011EE  323B               	rrcf	___ftadd@f2,f,c
  6543  0011F0  2A42               	incf	___ftadd@exp2,f,c
  6544  0011F2  D000               	goto	l2314
  6545  0011F4                     l2314:
  6546  0011F4  FFFF               	dw	65535	; assembler added errata NOP
  6547  0011F6  5042               	movf	___ftadd@exp2,w,c
  6548  0011F8  1843               	xorwf	___ftadd@exp1,w,c
  6549  0011FA  B4D8               	btfsc	status,2,c
  6550  0011FC  D002               	goto	l760
  6551  0011FE  D7F3               	goto	l2312
  6552  001200  D000               	goto	l760
  6553  001202                     l760:
  6554  001202  FFFF               	dw	65535	; assembler added errata NOP
  6555  001204  AE41               	btfss	___ftadd@sign,7,c
  6556  001206  D00C               	goto	l769
  6557  001208  0EFF               	movlw	255
  6558  00120A  1A38               	xorwf	___ftadd@f1,f,c
  6559  00120C  0EFF               	movlw	255
  6560  00120E  1A39               	xorwf	___ftadd@f1+1,f,c
  6561  001210  0EFF               	movlw	255
  6562  001212  1A3A               	xorwf	___ftadd@f1+2,f,c
  6563  001214  0E01               	movlw	1
  6564  001216  2638               	addwf	___ftadd@f1,f,c
  6565  001218  0E00               	movlw	0
  6566  00121A  2239               	addwfc	___ftadd@f1+1,f,c
  6567  00121C  0E00               	movlw	0
  6568  00121E  223A               	addwfc	___ftadd@f1+2,f,c
  6569  001220                     l769:
  6570  001220  FFFF               	dw	65535	; assembler added errata NOP
  6571  001222  AC41               	btfss	___ftadd@sign,6,c
  6572  001224  D00D               	goto	l2320
  6573  001226  0EFF               	movlw	255
  6574  001228  1A3B               	xorwf	___ftadd@f2,f,c
  6575  00122A  0EFF               	movlw	255
  6576  00122C  1A3C               	xorwf	___ftadd@f2+1,f,c
  6577  00122E  0EFF               	movlw	255
  6578  001230  1A3D               	xorwf	___ftadd@f2+2,f,c
  6579  001232  0E01               	movlw	1
  6580  001234  263B               	addwf	___ftadd@f2,f,c
  6581  001236  0E00               	movlw	0
  6582  001238  223C               	addwfc	___ftadd@f2+1,f,c
  6583  00123A  0E00               	movlw	0
  6584  00123C  223D               	addwfc	___ftadd@f2+2,f,c
  6585  00123E  D000               	goto	l2320
  6586  001240                     l2320:
  6587  001240  FFFF               	dw	65535	; assembler added errata NOP
  6588  001242  0E00               	movlw	0
  6589  001244  6E41               	movwf	___ftadd@sign,c
  6590  001246  5038               	movf	___ftadd@f1,w,c
  6591  001248  263B               	addwf	___ftadd@f2,f,c
  6592  00124A  5039               	movf	___ftadd@f1+1,w,c
  6593  00124C  223C               	addwfc	___ftadd@f2+1,f,c
  6594  00124E  503A               	movf	___ftadd@f1+2,w,c
  6595  001250  223D               	addwfc	___ftadd@f2+2,f,c
  6596  001252  AE3D               	btfss	___ftadd@f2+2,7,c
  6597  001254  D00F               	goto	l2330
  6598  001256  0EFF               	movlw	255
  6599  001258  1A3B               	xorwf	___ftadd@f2,f,c
  6600  00125A  0EFF               	movlw	255
  6601  00125C  1A3C               	xorwf	___ftadd@f2+1,f,c
  6602  00125E  0EFF               	movlw	255
  6603  001260  1A3D               	xorwf	___ftadd@f2+2,f,c
  6604  001262  0E01               	movlw	1
  6605  001264  263B               	addwf	___ftadd@f2,f,c
  6606  001266  0E00               	movlw	0
  6607  001268  223C               	addwfc	___ftadd@f2+1,f,c
  6608  00126A  0E00               	movlw	0
  6609  00126C  223D               	addwfc	___ftadd@f2+2,f,c
  6610  00126E  0E01               	movlw	1
  6611  001270  6E41               	movwf	___ftadd@sign,c
  6612  001272  D000               	goto	l2330
  6613  001274                     l2330:
  6614  001274  FFFF               	dw	65535	; assembler added errata NOP
  6615  001276  C03B  F00F         	movff	___ftadd@f2,___ftpack@arg
  6616  00127A  C03C  F010         	movff	___ftadd@f2+1,___ftpack@arg+1
  6617  00127E  C03D  F011         	movff	___ftadd@f2+2,___ftpack@arg+2
  6618  001282  C043  F012         	movff	___ftadd@exp1,___ftpack@exp
  6619  001286  C041  F013         	movff	___ftadd@sign,___ftpack@sign
  6620  00128A  EC8F  F00F         	call	___ftpack	;wreg free
  6621  00128E  C00F  F038         	movff	?___ftpack,?___ftadd
  6622  001292  C010  F039         	movff	?___ftpack+1,?___ftadd+1
  6623  001296  C011  F03A         	movff	?___ftpack+2,?___ftadd+2
  6624  00129A  D000               	goto	l746
  6625  00129C                     l746:
  6626  00129C  FFFF               	dw	65535	; assembler added errata NOP
  6627  00129E  0012               	return		;funcret
  6628  0012A0  FFFF               	dw	65535	; errata NOP
  6629  0012A2                     __end_of___ftadd:
  6630                           	opt stack 0
  6631                           tosu	equ	0xFFF
  6632                           tosh	equ	0xFFE
  6633                           tosl	equ	0xFFD
  6634                           pclath	equ	0xFFA
  6635                           tblptru	equ	0xFF8
  6636                           tblptrh	equ	0xFF7
  6637                           tblptrl	equ	0xFF6
  6638                           tablat	equ	0xFF5
  6639                           prodh	equ	0xFF4
  6640                           prodl	equ	0xFF3
  6641                           intcon	equ	0xFF2
  6642                           intcon2	equ	0xFF1
  6643                           postinc0	equ	0xFEE
  6644                           wreg	equ	0xFE8
  6645                           indf2	equ	0xFDF
  6646                           postinc2	equ	0xFDE
  6647                           postdec2	equ	0xFDD
  6648                           fsr2h	equ	0xFDA
  6649                           fsr2l	equ	0xFD9
  6650                           status	equ	0xFD8
  6651                           
  6652 ;; *************** function ___awtoft *****************
  6653 ;; Defined at:
  6654 ;;		line 32 in file "/opt/microchip/xc8/v1.34/sources/common/awtoft.c"
  6655 ;; Parameters:    Size  Location     Type
  6656 ;;  c               2   22[COMRAM] int 
  6657 ;; Auto vars:     Size  Location     Type
  6658 ;;  sign            1   25[COMRAM] unsigned char 
  6659 ;; Return value:  Size  Location     Type
  6660 ;;                  3   22[COMRAM] float 
  6661 ;; Registers used:
  6662 ;;		wreg, status,2, status,0, cstack
  6663 ;; Tracked objects:
  6664 ;;		On entry : 0/0
  6665 ;;		On exit  : 0/0
  6666 ;;		Unchanged: 0/0
  6667 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6668 ;;      Params:         3       0       0       0       0       0       0
  6669 ;;      Locals:         1       0       0       0       0       0       0
  6670 ;;      Temps:          0       0       0       0       0       0       0
  6671 ;;      Totals:         4       0       0       0       0       0       0
  6672 ;;Total ram usage:        4 bytes
  6673 ;; Hardware stack levels used:    1
  6674 ;; Hardware stack levels required when called:    2
  6675 ;; This function calls:
  6676 ;;		___ftpack
  6677 ;; This function is called by:
  6678 ;;		_format_double
  6679 ;;		_log
  6680 ;;		_exp
  6681 ;;		_format_float
  6682 ;; This function uses a non-reentrant model
  6683 ;;
  6684                           
  6685                           	psect	text32
  6686  0026C4                     __ptext32:
  6687                           	opt stack 0
  6688  0026C4                     ___awtoft:
  6689                           	opt stack 24
  6690                           
  6691                           ;incstack = 0
  6692  0026C4  FFFF               	dw	65535
  6693  0026C6  0E00               	movlw	0
  6694  0026C8  6E1A               	movwf	___awtoft@sign,c
  6695  0026CA  AE18               	btfss	___awtoft@c+1,7,c
  6696  0026CC  D007               	goto	l2564
  6697  0026CE  6C17               	negf	___awtoft@c,c
  6698  0026D0  1E18               	comf	___awtoft@c+1,f,c
  6699  0026D2  B0D8               	btfsc	status,0,c
  6700  0026D4  2A18               	incf	___awtoft@c+1,f,c
  6701  0026D6  0E01               	movlw	1
  6702  0026D8  6E1A               	movwf	___awtoft@sign,c
  6703  0026DA  D000               	goto	l2564
  6704  0026DC                     l2564:
  6705  0026DC  FFFF               	dw	65535	; assembler added errata NOP
  6706  0026DE  C017  F00F         	movff	___awtoft@c,___ftpack@arg
  6707  0026E2  C018  F010         	movff	___awtoft@c+1,___ftpack@arg+1
  6708  0026E6  6A11               	clrf	___ftpack@arg+2,c
  6709  0026E8  0E8E               	movlw	142
  6710  0026EA  6E12               	movwf	___ftpack@exp,c
  6711  0026EC  C01A  F013         	movff	___awtoft@sign,___ftpack@sign
  6712  0026F0  EC8F  F00F         	call	___ftpack	;wreg free
  6713  0026F4  C00F  F017         	movff	?___ftpack,?___awtoft
  6714  0026F8  C010  F018         	movff	?___ftpack+1,?___awtoft+1
  6715  0026FC  C011  F019         	movff	?___ftpack+2,?___awtoft+2
  6716  002700  D000               	goto	l590
  6717  002702                     l590:
  6718  002702  FFFF               	dw	65535	; assembler added errata NOP
  6719  002704  0012               	return		;funcret
  6720  002706  FFFF               	dw	65535	; errata NOP
  6721  002708                     __end_of___awtoft:
  6722                           	opt stack 0
  6723                           tosu	equ	0xFFF
  6724                           tosh	equ	0xFFE
  6725                           tosl	equ	0xFFD
  6726                           pclath	equ	0xFFA
  6727                           tblptru	equ	0xFF8
  6728                           tblptrh	equ	0xFF7
  6729                           tblptrl	equ	0xFF6
  6730                           tablat	equ	0xFF5
  6731                           prodh	equ	0xFF4
  6732                           prodl	equ	0xFF3
  6733                           intcon	equ	0xFF2
  6734                           intcon2	equ	0xFF1
  6735                           postinc0	equ	0xFEE
  6736                           wreg	equ	0xFE8
  6737                           indf2	equ	0xFDF
  6738                           postinc2	equ	0xFDE
  6739                           postdec2	equ	0xFDD
  6740                           fsr2h	equ	0xFDA
  6741                           fsr2l	equ	0xFD9
  6742                           status	equ	0xFD8
  6743                           
  6744 ;; *************** function _indicator *****************
  6745 ;; Defined at:
  6746 ;;		line 469 in file "../../../src/print.c"
  6747 ;; Parameters:    Size  Location     Type
  6748 ;;  indicate        1    wreg     unsigned char 
  6749 ;; Auto vars:     Size  Location     Type
  6750 ;;  indicate        1    0[COMRAM] unsigned char 
  6751 ;; Return value:  Size  Location     Type
  6752 ;;		None               void
  6753 ;; Registers used:
  6754 ;;		wreg
  6755 ;; Tracked objects:
  6756 ;;		On entry : 0/0
  6757 ;;		On exit  : 0/0
  6758 ;;		Unchanged: 0/0
  6759 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6760 ;;      Params:         0       0       0       0       0       0       0
  6761 ;;      Locals:         0       0       0       0       0       0       0
  6762 ;;      Temps:          0       0       0       0       0       0       0
  6763 ;;      Totals:         0       0       0       0       0       0       0
  6764 ;;Total ram usage:        0 bytes
  6765 ;; Hardware stack levels used:    1
  6766 ;; Hardware stack levels required when called:    1
  6767 ;; This function calls:
  6768 ;;		Nothing
  6769 ;; This function is called by:
  6770 ;;		_main
  6771 ;; This function uses a non-reentrant model
  6772 ;;
  6773                           
  6774                           	psect	text33
  6775  00284A                     __ptext33:
  6776                           	opt stack 0
  6777  00284A                     _indicator:
  6778                           	opt stack 29
  6779                           
  6780                           ;incstack = 0
  6781  00284A  FFFF               	dw	65535
  6782  00284C  0012               	return		;funcret
  6783  00284E  FFFF               	dw	65535	; errata NOP
  6784  002850                     __end_of_indicator:
  6785                           	opt stack 0
  6786                           tosu	equ	0xFFF
  6787                           tosh	equ	0xFFE
  6788                           tosl	equ	0xFFD
  6789                           pclath	equ	0xFFA
  6790                           tblptru	equ	0xFF8
  6791                           tblptrh	equ	0xFF7
  6792                           tblptrl	equ	0xFF6
  6793                           tablat	equ	0xFF5
  6794                           prodh	equ	0xFF4
  6795                           prodl	equ	0xFF3
  6796                           intcon	equ	0xFF2
  6797                           intcon2	equ	0xFF1
  6798                           postinc0	equ	0xFEE
  6799                           wreg	equ	0xFE8
  6800                           indf2	equ	0xFDF
  6801                           postinc2	equ	0xFDE
  6802                           postdec2	equ	0xFDD
  6803                           fsr2h	equ	0xFDA
  6804                           fsr2l	equ	0xFD9
  6805                           status	equ	0xFD8
  6806                           
  6807 ;; *************** function _calibrate *****************
  6808 ;; Defined at:
  6809 ;;		line 347 in file "../../../src/LC-meter.c"
  6810 ;; Parameters:    Size  Location     Type
  6811 ;;		None
  6812 ;; Auto vars:     Size  Location     Type
  6813 ;;  i               1    0        unsigned char 
  6814 ;; Return value:  Size  Location     Type
  6815 ;;		None               void
  6816 ;; Registers used:
  6817 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6818 ;; Tracked objects:
  6819 ;;		On entry : 0/0
  6820 ;;		On exit  : 0/0
  6821 ;;		Unchanged: 0/0
  6822 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6823 ;;      Params:         0       0       0       0       0       0       0
  6824 ;;      Locals:         0       0       0       0       0       0       0
  6825 ;;      Temps:          0       0       0       0       0       0       0
  6826 ;;      Totals:         0       0       0       0       0       0       0
  6827 ;;Total ram usage:        0 bytes
  6828 ;; Hardware stack levels used:    1
  6829 ;; Hardware stack levels required when called:    3
  6830 ;; This function calls:
  6831 ;;		___lwtoft
  6832 ;;		_delay10ms
  6833 ;;		_measure_freq
  6834 ;;		_ser_puts
  6835 ;; This function is called by:
  6836 ;;		_main
  6837 ;; This function uses a non-reentrant model
  6838 ;;
  6839                           
  6840                           	psect	text34
  6841  00220E                     __ptext34:
  6842                           	opt stack 0
  6843  00220E                     _calibrate:
  6844                           	opt stack 27
  6845                           
  6846                           ;incstack = 0
  6847  00220E  FFFF               	dw	65535
  6848                           
  6849                           ;LC-meter.c: 348: unsigned char i;
  6850                           ;LC-meter.c: 361: LATC5 = 0;
  6851  002210  9A8B               	bcf	3979,5,c	;volatile
  6852                           
  6853                           ;LC-meter.c: 363: F1 = (double)measure_freq();
  6854  002212  ECFF  F00F         	call	_measure_freq	;wreg free
  6855  002216  C00F  F019         	movff	?_measure_freq,___lwtoft@c
  6856  00221A  C010  F01A         	movff	?_measure_freq+1,___lwtoft@c+1
  6857  00221E  ECEA  F013         	call	___lwtoft	;wreg free
  6858  002222  C019  F0F5         	movff	?___lwtoft,_F1
  6859  002226  C01A  F0F6         	movff	?___lwtoft+1,_F1+1
  6860  00222A  C01B  F0F7         	movff	?___lwtoft+2,_F1+2
  6861                           
  6862                           ;LC-meter.c: 364: delay10ms(50);
  6863  00222E  0E00               	movlw	0
  6864  002230  6E16               	movwf	delay10ms@period_10ms+1,c
  6865  002232  0E32               	movlw	50
  6866  002234  6E15               	movwf	delay10ms@period_10ms,c
  6867  002236  EC22  F012         	call	_delay10ms	;wreg free
  6868                           
  6869                           ;LC-meter.c: 366: F1 = (double)measure_freq();
  6870  00223A  ECFF  F00F         	call	_measure_freq	;wreg free
  6871  00223E  C00F  F019         	movff	?_measure_freq,___lwtoft@c
  6872  002242  C010  F01A         	movff	?_measure_freq+1,___lwtoft@c+1
  6873  002246  ECEA  F013         	call	___lwtoft	;wreg free
  6874  00224A  C019  F0F5         	movff	?___lwtoft,_F1
  6875  00224E  C01A  F0F6         	movff	?___lwtoft+1,_F1+1
  6876  002252  C01B  F0F7         	movff	?___lwtoft+2,_F1+2
  6877                           
  6878                           ;LC-meter.c: 367: LATC5 = 1;
  6879  002256  8A8B               	bsf	3979,5,c	;volatile
  6880                           
  6881                           ;LC-meter.c: 369: F2 = (double)measure_freq();
  6882  002258  ECFF  F00F         	call	_measure_freq	;wreg free
  6883  00225C  C00F  F019         	movff	?_measure_freq,___lwtoft@c
  6884  002260  C010  F01A         	movff	?_measure_freq+1,___lwtoft@c+1
  6885  002264  ECEA  F013         	call	___lwtoft	;wreg free
  6886  002268  C019  F0E9         	movff	?___lwtoft,_F2
  6887  00226C  C01A  F0EA         	movff	?___lwtoft+1,_F2+1
  6888  002270  C01B  F0EB         	movff	?___lwtoft+2,_F2+2
  6889                           
  6890                           ;LC-meter.c: 370: delay10ms(50);
  6891  002274  0E00               	movlw	0
  6892  002276  6E16               	movwf	delay10ms@period_10ms+1,c
  6893  002278  0E32               	movlw	50
  6894  00227A  6E15               	movwf	delay10ms@period_10ms,c
  6895  00227C  EC22  F012         	call	_delay10ms	;wreg free
  6896                           
  6897                           ;LC-meter.c: 372: F2 = (double)measure_freq();
  6898  002280  ECFF  F00F         	call	_measure_freq	;wreg free
  6899  002284  C00F  F019         	movff	?_measure_freq,___lwtoft@c
  6900  002288  C010  F01A         	movff	?_measure_freq+1,___lwtoft@c+1
  6901  00228C  ECEA  F013         	call	___lwtoft	;wreg free
  6902  002290  C019  F0E9         	movff	?___lwtoft,_F2
  6903  002294  C01A  F0EA         	movff	?___lwtoft+1,_F2+1
  6904  002298  C01B  F0EB         	movff	?___lwtoft+2,_F2+2
  6905                           
  6906                           ;LC-meter.c: 373: LATC5 = 0;
  6907  00229C  9A8B               	bcf	3979,5,c	;volatile
  6908                           
  6909                           ;LC-meter.c: 385: ser_puts("\r\n");
  6910  00229E  0E45               	movlw	low (STR_1+3)
  6911  0022A0  6E10               	movwf	ser_puts@s,c
  6912  0022A2  0E06               	movlw	high (STR_1+3)
  6913  0022A4  6E11               	movwf	ser_puts@s+1,c
  6914  0022A6  EC84  F013         	call	_ser_puts	;wreg free
  6915  0022AA  0012               	return		;funcret
  6916  0022AC  FFFF               	dw	65535	; errata NOP
  6917  0022AE                     __end_of_calibrate:
  6918                           	opt stack 0
  6919                           tosu	equ	0xFFF
  6920                           tosh	equ	0xFFE
  6921                           tosl	equ	0xFFD
  6922                           pclath	equ	0xFFA
  6923                           tblptru	equ	0xFF8
  6924                           tblptrh	equ	0xFF7
  6925                           tblptrl	equ	0xFF6
  6926                           tablat	equ	0xFF5
  6927                           prodh	equ	0xFF4
  6928                           prodl	equ	0xFF3
  6929                           intcon	equ	0xFF2
  6930                           intcon2	equ	0xFF1
  6931                           postinc0	equ	0xFEE
  6932                           wreg	equ	0xFE8
  6933                           indf2	equ	0xFDF
  6934                           postinc2	equ	0xFDE
  6935                           postdec2	equ	0xFDD
  6936                           fsr2h	equ	0xFDA
  6937                           fsr2l	equ	0xFD9
  6938                           status	equ	0xFD8
  6939                           
  6940 ;; *************** function _ser_puts *****************
  6941 ;; Defined at:
  6942 ;;		line 92 in file "../../../lib/ser.c"
  6943 ;; Parameters:    Size  Location     Type
  6944 ;;  s               2   15[COMRAM] PTR const unsigned char 
  6945 ;;		 -> STR_11(3), STR_10(5), STR_9(3), STR_8(8), 
  6946 ;;		 -> STR_7(6), STR_6(6), STR_5(6), STR_4(5), 
  6947 ;;		 -> STR_3(3), STR_2(3), STR_1(6), 
  6948 ;; Auto vars:     Size  Location     Type
  6949 ;;		None
  6950 ;; Return value:  Size  Location     Type
  6951 ;;		None               void
  6952 ;; Registers used:
  6953 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6954 ;; Tracked objects:
  6955 ;;		On entry : 0/0
  6956 ;;		On exit  : 0/0
  6957 ;;		Unchanged: 0/0
  6958 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6959 ;;      Params:         2       0       0       0       0       0       0
  6960 ;;      Locals:         0       0       0       0       0       0       0
  6961 ;;      Temps:          0       0       0       0       0       0       0
  6962 ;;      Totals:         2       0       0       0       0       0       0
  6963 ;;Total ram usage:        2 bytes
  6964 ;; Hardware stack levels used:    1
  6965 ;; Hardware stack levels required when called:    2
  6966 ;; This function calls:
  6967 ;;		_ser_putch
  6968 ;; This function is called by:
  6969 ;;		_main
  6970 ;;		_calibrate
  6971 ;;		_measure_capacitance
  6972 ;;		_testloop
  6973 ;; This function uses a non-reentrant model
  6974 ;;
  6975                           
  6976                           	psect	text35
  6977  002708                     __ptext35:
  6978                           	opt stack 0
  6979  002708                     _ser_puts:
  6980                           	opt stack 28
  6981                           
  6982                           ;incstack = 0
  6983  002708  FFFF               	dw	65535
  6984                           
  6985                           ;ser.c: 93: while(*s) ser_putch(*s++);
  6986  00270A  D00D               	goto	l2822
  6987  00270C                     l2818:
  6988  00270C  FFFF               	dw	65535	; assembler added errata NOP
  6989  00270E  C010  FFF6         	movff	ser_puts@s,tblptrl
  6990  002712  C011  FFF7         	movff	ser_puts@s+1,tblptrh
  6991  002716                     	if	0	;tblptru may be non-zero
  6992  002716                     	endif
  6993  002716                     	if	0	;tblptru may be non-zero
  6994  002716                     	endif
  6995  002716  0008               	tblrd		*
  6996  002718  FFFF               	dw	65535	; errata NOP
  6997  00271A  50F5               	movf	tablat,w,c
  6998  00271C  ECA0  F013         	call	_ser_putch
  6999  002720  4A10               	infsnz	ser_puts@s,f,c
  7000  002722  2A11               	incf	ser_puts@s+1,f,c
  7001  002724  D000               	goto	l2822
  7002  002726                     l2822:
  7003  002726  FFFF               	dw	65535	; assembler added errata NOP
  7004  002728  C010  FFF6         	movff	ser_puts@s,tblptrl
  7005  00272C  C011  FFF7         	movff	ser_puts@s+1,tblptrh
  7006  002730                     	if	0	;tblptru may be non-zero
  7007  002730                     	endif
  7008  002730                     	if	0	;tblptru may be non-zero
  7009  002730                     	endif
  7010  002730  0008               	tblrd		*
  7011  002732  FFFF               	dw	65535	; errata NOP
  7012  002734  50F5               	movf	tablat,w,c
  7013  002736  0900               	iorlw	0
  7014  002738  A4D8               	btfss	status,2,c
  7015  00273A  D7E8               	goto	l2818
  7016  00273C  0012               	return		;funcret
  7017  00273E  FFFF               	dw	65535	; errata NOP
  7018  002740                     __end_of_ser_puts:
  7019                           	opt stack 0
  7020                           tosu	equ	0xFFF
  7021                           tosh	equ	0xFFE
  7022                           tosl	equ	0xFFD
  7023                           pclath	equ	0xFFA
  7024                           tblptru	equ	0xFF8
  7025                           tblptrh	equ	0xFF7
  7026                           tblptrl	equ	0xFF6
  7027                           tablat	equ	0xFF5
  7028                           prodh	equ	0xFF4
  7029                           prodl	equ	0xFF3
  7030                           intcon	equ	0xFF2
  7031                           intcon2	equ	0xFF1
  7032                           postinc0	equ	0xFEE
  7033                           wreg	equ	0xFE8
  7034                           indf2	equ	0xFDF
  7035                           postinc2	equ	0xFDE
  7036                           postdec2	equ	0xFDD
  7037                           fsr2h	equ	0xFDA
  7038                           fsr2l	equ	0xFD9
  7039                           status	equ	0xFD8
  7040                           
  7041 ;; *************** function _measure_freq *****************
  7042 ;; Defined at:
  7043 ;;		line 299 in file "../../../src/LC-meter.c"
  7044 ;; Parameters:    Size  Location     Type
  7045 ;;		None
  7046 ;; Auto vars:     Size  Location     Type
  7047 ;;  i               1   21[COMRAM] unsigned char 
  7048 ;;  count           2   22[COMRAM] unsigned short 
  7049 ;;  prev            1   20[COMRAM] unsigned char 
  7050 ;; Return value:  Size  Location     Type
  7051 ;;                  2   14[COMRAM] unsigned short 
  7052 ;; Registers used:
  7053 ;;		wreg, status,2, status,0
  7054 ;; Tracked objects:
  7055 ;;		On entry : 0/0
  7056 ;;		On exit  : 0/0
  7057 ;;		Unchanged: 0/0
  7058 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7059 ;;      Params:         2       0       0       0       0       0       0
  7060 ;;      Locals:         4       0       0       0       0       0       0
  7061 ;;      Temps:          4       0       0       0       0       0       0
  7062 ;;      Totals:        10       0       0       0       0       0       0
  7063 ;;Total ram usage:       10 bytes
  7064 ;; Hardware stack levels used:    1
  7065 ;; Hardware stack levels required when called:    1
  7066 ;; This function calls:
  7067 ;;		Nothing
  7068 ;; This function is called by:
  7069 ;;		_calibrate
  7070 ;;		_measure_capacitance
  7071 ;;		_measure_inductance
  7072 ;; This function uses a non-reentrant model
  7073 ;;
  7074                           
  7075                           	psect	text36
  7076  001FFE                     __ptext36:
  7077                           	opt stack 0
  7078  001FFE                     _measure_freq:
  7079                           	opt stack 28
  7080                           
  7081                           ;incstack = 0
  7082  001FFE  FFFF               	dw	65535
  7083                           
  7084                           ;LC-meter.c: 300: unsigned char prev;
  7085                           ;LC-meter.c: 301: unsigned short int count;
  7086                           ;LC-meter.c: 303: TMR0IF = 0;
  7087  002000  94F2               	bcf	intcon,2,c	;volatile
  7088                           
  7089                           ;LC-meter.c: 305: TRISA &= ~0b00010000;
  7090  002002  9892               	bcf	3986,4,c	;volatile
  7091                           
  7092                           ;LC-meter.c: 308: _delay((unsigned long)((20)*(20000000/4000.0)));
  7093  002004  0E62               	movlw	98
  7094  002006  6E11               	movwf	??_measure_freq& (0+255),c
  7095  002008  0E76               	movlw	118
  7096  00200A                     u3547:
  7097  00200A  FFFF               	dw	65535	; errata NOP
  7098  00200C  2EE8               	decfsz	wreg,f,c
  7099  00200E  D7FD               	goto	u3547
  7100  002010  2E11               	decfsz	??_measure_freq& (0+255),f,c
  7101  002012  D7FB               	goto	u3547
  7102  002014  D000               	nop2	
  7103                           
  7104                           ;LC-meter.c: 310: TMR0 = 0x00;
  7105  002016  0E00               	movlw	0
  7106  002018  6ED7               	movwf	4055,c	;volatile
  7107  00201A  0E00               	movlw	0
  7108  00201C  6ED6               	movwf	4054,c	;volatile
  7109                           
  7110                           ;LC-meter.c: 312: for(char i = 0; i < 10; i++)
  7111  00201E  0E00               	movlw	0
  7112  002020  6E16               	movwf	measure_freq@i,c
  7113  002022  FFFF               	dw	65535	; assembler added errata NOP
  7114  002024  0E09               	movlw	9
  7115  002026  6416               	cpfsgt	measure_freq@i,c
  7116  002028  D001               	goto	l2878
  7117  00202A  D00B               	goto	l2882
  7118  00202C                     l2878:
  7119  00202C  FFFF               	dw	65535	; assembler added errata NOP
  7120                           
  7121                           ;LC-meter.c: 313: _delay((unsigned long)((10)*(20000000/4000.0)));
  7122  00202E  0E31               	movlw	49
  7123  002030  6E11               	movwf	??_measure_freq& (0+255),c
  7124  002032  0EBB               	movlw	187
  7125  002034                     u3557:
  7126  002034  FFFF               	dw	65535	; errata NOP
  7127  002036  2EE8               	decfsz	wreg,f,c
  7128  002038  D7FD               	goto	u3557
  7129  00203A  2E11               	decfsz	??_measure_freq& (0+255),f,c
  7130  00203C  D7FB               	goto	u3557
  7131  00203E  2A16               	incf	measure_freq@i,f,c
  7132  002040  D7F0               	goto	L18
  7133  002042                     l2882:
  7134  002042  FFFF               	dw	65535	; assembler added errata NOP
  7135                           
  7136                           ;LC-meter.c: 315: TRISA |= 0b00010000;
  7137  002044  8892               	bsf	3986,4,c	;volatile
  7138                           
  7139                           ;LC-meter.c: 317: prev = TMR0;
  7140  002046  CFD6 F015          	movff	4054,measure_freq@prev	;volatile
  7141                           
  7142                           ;LC-meter.c: 318: count = 0;
  7143  00204A  0E00               	movlw	0
  7144  00204C  6E18               	movwf	measure_freq@count+1,c
  7145  00204E  0E00               	movlw	0
  7146  002050  6E17               	movwf	measure_freq@count,c
  7147  002052  D000               	goto	l2888
  7148  002054                     l2888:
  7149  002054  FFFF               	dw	65535	; assembler added errata NOP
  7150                           
  7151                           ;LC-meter.c: 322: T0SE = 1;
  7152  002056  88D5               	bsf	4053,4,c	;volatile
  7153                           
  7154                           ;LC-meter.c: 323: __nop();
  7155  002058  F000               	nop	
  7156                           
  7157                           ;LC-meter.c: 324: __nop();
  7158  00205A  F000               	nop	
  7159                           
  7160                           ;LC-meter.c: 326: T0SE = 0;
  7161  00205C  98D5               	bcf	4053,4,c	;volatile
  7162                           
  7163                           ;LC-meter.c: 327: __nop();
  7164  00205E  F000               	nop	
  7165                           
  7166                           ;LC-meter.c: 328: __nop();
  7167  002060  F000               	nop	
  7168                           
  7169                           ;LC-meter.c: 329: count++;
  7170  002062  4A17               	infsnz	measure_freq@count,f,c
  7171  002064  2A18               	incf	measure_freq@count+1,f,c
  7172                           
  7173                           ;LC-meter.c: 330: } while(prev == TMR0 && count <= 255);
  7174  002066  5015               	movf	measure_freq@prev,w,c
  7175  002068  6E11               	movwf	??_measure_freq& (0+255),c
  7176  00206A  6A12               	clrf	(??_measure_freq+1)& (0+255),c
  7177  00206C  50D6               	movf	4054,w,c	;volatile
  7178  00206E  1811               	xorwf	??_measure_freq,w,c
  7179  002070  E109               	bnz	l2906
  7180  002072  50D7               	movf	4055,w,c	;volatile
  7181  002074  1812               	xorwf	??_measure_freq+1,w,c
  7182  002076  A4D8               	btfss	status,2,c
  7183  002078  D005               	goto	l2906
  7184  00207A  0418               	decf	measure_freq@count+1,w,c
  7185  00207C  B0D8               	btfsc	status,0,c
  7186  00207E  D002               	goto	l2906
  7187  002080  D7E9               	goto	l2888
  7188  002082  D000               	goto	l2906
  7189  002084                     l2906:
  7190  002084  FFFF               	dw	65535	; assembler added errata NOP
  7191                           
  7192                           ;LC-meter.c: 333: count = ((prev << 8) + (256 - count));
  7193  002086  C017  F011         	movff	measure_freq@count,??_measure_freq
  7194  00208A  C018  F012         	movff	measure_freq@count+1,??_measure_freq+1
  7195  00208E  1E11               	comf	??_measure_freq,f,c
  7196  002090  1E12               	comf	??_measure_freq+1,f,c
  7197  002092  4A11               	infsnz	??_measure_freq,f,c
  7198  002094  2A12               	incf	??_measure_freq+1,f,c
  7199  002096  5015               	movf	measure_freq@prev,w,c
  7200  002098  6E14               	movwf	(??_measure_freq+3)& (0+255),c
  7201  00209A  6A13               	clrf	(??_measure_freq+2)& (0+255),c
  7202  00209C  5011               	movf	??_measure_freq,w,c
  7203  00209E  2613               	addwf	??_measure_freq+2,f,c
  7204  0020A0  5012               	movf	??_measure_freq+1,w,c
  7205  0020A2  2214               	addwfc	??_measure_freq+3,f,c
  7206  0020A4  0E00               	movlw	0
  7207  0020A6  2413               	addwf	??_measure_freq+2,w,c
  7208  0020A8  6E17               	movwf	measure_freq@count,c
  7209  0020AA  0E01               	movlw	1
  7210  0020AC  2014               	addwfc	??_measure_freq+3,w,c
  7211  0020AE  6E18               	movwf	measure_freq@count+1,c
  7212                           
  7213                           ;LC-meter.c: 340: return count;
  7214  0020B0  C017  F00F         	movff	measure_freq@count,?_measure_freq
  7215  0020B4  C018  F010         	movff	measure_freq@count+1,?_measure_freq+1
  7216  0020B8  D000               	goto	l334
  7217  0020BA                     l334:
  7218  0020BA  FFFF               	dw	65535	; assembler added errata NOP
  7219  0020BC  0012               	return		;funcret
  7220  0020BE  FFFF               	dw	65535	; errata NOP
  7221  0020C0                     __end_of_measure_freq:
  7222                           	opt stack 0
  7223                           tosu	equ	0xFFF
  7224                           tosh	equ	0xFFE
  7225                           tosl	equ	0xFFD
  7226                           pclath	equ	0xFFA
  7227                           tblptru	equ	0xFF8
  7228                           tblptrh	equ	0xFF7
  7229                           tblptrl	equ	0xFF6
  7230                           tablat	equ	0xFF5
  7231                           prodh	equ	0xFF4
  7232                           prodl	equ	0xFF3
  7233                           intcon	equ	0xFF2
  7234                           intcon2	equ	0xFF1
  7235                           postinc0	equ	0xFEE
  7236                           wreg	equ	0xFE8
  7237                           indf2	equ	0xFDF
  7238                           postinc2	equ	0xFDE
  7239                           postdec2	equ	0xFDD
  7240                           fsr2h	equ	0xFDA
  7241                           fsr2l	equ	0xFD9
  7242                           status	equ	0xFD8
  7243                           
  7244 ;; *************** function _delay10ms *****************
  7245 ;; Defined at:
  7246 ;;		line 533 in file "../../../src/LC-meter.c"
  7247 ;; Parameters:    Size  Location     Type
  7248 ;;  period_10ms     2   20[COMRAM] unsigned short 
  7249 ;; Auto vars:     Size  Location     Type
  7250 ;;  ms              4   22[COMRAM] unsigned long 
  7251 ;;  run             1   26[COMRAM] unsigned char 
  7252 ;; Return value:  Size  Location     Type
  7253 ;;		None               void
  7254 ;; Registers used:
  7255 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  7256 ;; Tracked objects:
  7257 ;;		On entry : 0/0
  7258 ;;		On exit  : 0/0
  7259 ;;		Unchanged: 0/0
  7260 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7261 ;;      Params:         2       0       0       0       0       0       0
  7262 ;;      Locals:         5       0       0       0       0       0       0
  7263 ;;      Temps:          0       0       0       0       0       0       0
  7264 ;;      Totals:         7       0       0       0       0       0       0
  7265 ;;Total ram usage:        7 bytes
  7266 ;; Hardware stack levels used:    1
  7267 ;; Hardware stack levels required when called:    2
  7268 ;; This function calls:
  7269 ;;		___wmul
  7270 ;; This function is called by:
  7271 ;;		_main
  7272 ;;		_calibrate
  7273 ;;		_testloop
  7274 ;; This function uses a non-reentrant model
  7275 ;;
  7276                           
  7277                           	psect	text37
  7278  002444                     __ptext37:
  7279                           	opt stack 0
  7280  002444                     _delay10ms:
  7281                           	opt stack 28
  7282                           
  7283                           ;incstack = 0
  7284  002444  FFFF               	dw	65535
  7285                           
  7286                           ;LC-meter.c: 537: unsigned long int ms;
  7287                           ;LC-meter.c: 538: BOOL run = 1;
  7288  002446  0E01               	movlw	1
  7289  002448  6E1B               	movwf	delay10ms@run,c
  7290                           
  7291                           ;LC-meter.c: 540: GIE = 0, ms = msecs, GIE = 1;
  7292  00244A  9EF2               	bcf	intcon,7,c	;volatile
  7293  00244C  C064  F017         	movff	_msecs,delay10ms@ms	;volatile
  7294  002450  C065  F018         	movff	_msecs+1,delay10ms@ms+1	;volatile
  7295  002454  C066  F019         	movff	_msecs+2,delay10ms@ms+2	;volatile
  7296  002458  C067  F01A         	movff	_msecs+3,delay10ms@ms+3	;volatile
  7297  00245C  8EF2               	bsf	intcon,7,c	;volatile
  7298                           
  7299                           ;LC-meter.c: 545: ms += period_10ms * 10;
  7300  00245E  C015  F00F         	movff	delay10ms@period_10ms,___wmul@multiplier
  7301  002462  C016  F010         	movff	delay10ms@period_10ms+1,___wmul@multiplier+1
  7302  002466  0E00               	movlw	0
  7303  002468  6E12               	movwf	___wmul@multiplicand+1,c
  7304  00246A  0E0A               	movlw	10
  7305  00246C  6E11               	movwf	___wmul@multiplicand,c
  7306  00246E  ECD3  F013         	call	___wmul	;wreg free
  7307  002472  500F               	movf	?___wmul,w,c
  7308  002474  2617               	addwf	delay10ms@ms,f,c
  7309  002476  5010               	movf	?___wmul+1,w,c
  7310  002478  2218               	addwfc	delay10ms@ms+1,f,c
  7311  00247A  0E00               	movlw	0
  7312  00247C  2219               	addwfc	delay10ms@ms+2,f,c
  7313  00247E  0E00               	movlw	0
  7314  002480  221A               	addwfc	delay10ms@ms+3,f,c
  7315  002482  D000               	goto	l2858
  7316  002484                     l2858:
  7317  002484  FFFF               	dw	65535	; assembler added errata NOP
  7318                           
  7319                           ;LC-meter.c: 549: GIE = 0;
  7320  002486  9EF2               	bcf	intcon,7,c	;volatile
  7321                           
  7322                           ;LC-meter.c: 550: if(ms <= msecs)
  7323  002488  5017               	movf	delay10ms@ms,w,c
  7324  00248A  5C64               	subwf	_msecs,w,c	;volatile
  7325  00248C  5018               	movf	delay10ms@ms+1,w,c
  7326  00248E  5865               	subwfb	_msecs+1,w,c	;volatile
  7327  002490  5019               	movf	delay10ms@ms+2,w,c
  7328  002492  5866               	subwfb	_msecs+2,w,c	;volatile
  7329  002494  501A               	movf	delay10ms@ms+3,w,c
  7330  002496  5867               	subwfb	_msecs+3,w,c	;volatile
  7331  002498  A0D8               	btfss	status,0,c
  7332  00249A  D003               	goto	l2864
  7333                           
  7334                           ;LC-meter.c: 551: run = 0;
  7335  00249C  0E00               	movlw	0
  7336  00249E  6E1B               	movwf	delay10ms@run,c
  7337  0024A0  D000               	goto	l2864
  7338  0024A2                     l2864:
  7339  0024A2  FFFF               	dw	65535	; assembler added errata NOP
  7340                           
  7341                           ;LC-meter.c: 552: GIE = 1;
  7342  0024A4  8EF2               	bsf	intcon,7,c	;volatile
  7343                           
  7344                           ;LC-meter.c: 553: } while(run);
  7345  0024A6  501B               	movf	delay10ms@run,w,c
  7346  0024A8  A4D8               	btfss	status,2,c
  7347  0024AA  D7EC               	goto	l2858
  7348  0024AC  0012               	return		;funcret
  7349  0024AE  FFFF               	dw	65535	; errata NOP
  7350  0024B0                     __end_of_delay10ms:
  7351                           	opt stack 0
  7352                           tosu	equ	0xFFF
  7353                           tosh	equ	0xFFE
  7354                           tosl	equ	0xFFD
  7355                           pclath	equ	0xFFA
  7356                           tblptru	equ	0xFF8
  7357                           tblptrh	equ	0xFF7
  7358                           tblptrl	equ	0xFF6
  7359                           tablat	equ	0xFF5
  7360                           prodh	equ	0xFF4
  7361                           prodl	equ	0xFF3
  7362                           intcon	equ	0xFF2
  7363                           intcon2	equ	0xFF1
  7364                           postinc0	equ	0xFEE
  7365                           wreg	equ	0xFE8
  7366                           indf2	equ	0xFDF
  7367                           postinc2	equ	0xFDE
  7368                           postdec2	equ	0xFDD
  7369                           fsr2h	equ	0xFDA
  7370                           fsr2l	equ	0xFD9
  7371                           status	equ	0xFD8
  7372                           
  7373 ;; *************** function ___wmul *****************
  7374 ;; Defined at:
  7375 ;;		line 15 in file "/opt/microchip/xc8/v1.34/sources/common/Umul16.c"
  7376 ;; Parameters:    Size  Location     Type
  7377 ;;  multiplier      2   14[COMRAM] unsigned int 
  7378 ;;  multiplicand    2   16[COMRAM] unsigned int 
  7379 ;; Auto vars:     Size  Location     Type
  7380 ;;  product         2   18[COMRAM] unsigned int 
  7381 ;; Return value:  Size  Location     Type
  7382 ;;                  2   14[COMRAM] unsigned int 
  7383 ;; Registers used:
  7384 ;;		wreg, status,2, status,0, prodl, prodh
  7385 ;; Tracked objects:
  7386 ;;		On entry : 0/0
  7387 ;;		On exit  : 0/0
  7388 ;;		Unchanged: 0/0
  7389 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7390 ;;      Params:         4       0       0       0       0       0       0
  7391 ;;      Locals:         2       0       0       0       0       0       0
  7392 ;;      Temps:          0       0       0       0       0       0       0
  7393 ;;      Totals:         6       0       0       0       0       0       0
  7394 ;;Total ram usage:        6 bytes
  7395 ;; Hardware stack levels used:    1
  7396 ;; Hardware stack levels required when called:    1
  7397 ;; This function calls:
  7398 ;;		Nothing
  7399 ;; This function is called by:
  7400 ;;		_delay10ms
  7401 ;;		_eval_poly
  7402 ;; This function uses a non-reentrant model
  7403 ;;
  7404                           
  7405                           	psect	text38
  7406  0027A6                     __ptext38:
  7407                           	opt stack 0
  7408  0027A6                     ___wmul:
  7409                           	opt stack 24
  7410                           
  7411                           ;incstack = 0
  7412  0027A6  FFFF               	dw	65535
  7413  0027A8  500F               	movf	___wmul@multiplier,w,c
  7414  0027AA  0211               	mulwf	___wmul@multiplicand,c
  7415  0027AC  CFF3 F013          	movff	prodl,___wmul@product
  7416  0027B0  CFF4 F014          	movff	prodh,___wmul@product+1
  7417  0027B4  500F               	movf	___wmul@multiplier,w,c
  7418  0027B6  0212               	mulwf	___wmul@multiplicand+1,c
  7419  0027B8  50F3               	movf	prodl,w,c
  7420  0027BA  2614               	addwf	___wmul@product+1,f,c
  7421  0027BC  5010               	movf	___wmul@multiplier+1,w,c
  7422  0027BE  0211               	mulwf	___wmul@multiplicand,c
  7423  0027C0  50F3               	movf	prodl,w,c
  7424  0027C2  2614               	addwf	___wmul@product+1,f,c
  7425  0027C4  C013  F00F         	movff	___wmul@product,?___wmul
  7426  0027C8  C014  F010         	movff	___wmul@product+1,?___wmul+1
  7427  0027CC  D000               	goto	l372
  7428  0027CE                     l372:
  7429  0027CE  FFFF               	dw	65535	; assembler added errata NOP
  7430  0027D0  0012               	return		;funcret
  7431  0027D2  FFFF               	dw	65535	; errata NOP
  7432  0027D4                     __end_of___wmul:
  7433                           	opt stack 0
  7434                           tosu	equ	0xFFF
  7435                           tosh	equ	0xFFE
  7436                           tosl	equ	0xFFD
  7437                           pclath	equ	0xFFA
  7438                           tblptru	equ	0xFF8
  7439                           tblptrh	equ	0xFF7
  7440                           tblptrl	equ	0xFF6
  7441                           tablat	equ	0xFF5
  7442                           prodh	equ	0xFF4
  7443                           prodl	equ	0xFF3
  7444                           intcon	equ	0xFF2
  7445                           intcon2	equ	0xFF1
  7446                           postinc0	equ	0xFEE
  7447                           wreg	equ	0xFE8
  7448                           indf2	equ	0xFDF
  7449                           postinc2	equ	0xFDE
  7450                           postdec2	equ	0xFDD
  7451                           fsr2h	equ	0xFDA
  7452                           fsr2l	equ	0xFD9
  7453                           status	equ	0xFD8
  7454                           
  7455 ;; *************** function ___lwtoft *****************
  7456 ;; Defined at:
  7457 ;;		line 28 in file "/opt/microchip/xc8/v1.34/sources/common/lwtoft.c"
  7458 ;; Parameters:    Size  Location     Type
  7459 ;;  c               2   24[COMRAM] unsigned int 
  7460 ;; Auto vars:     Size  Location     Type
  7461 ;;		None
  7462 ;; Return value:  Size  Location     Type
  7463 ;;                  3   24[COMRAM] float 
  7464 ;; Registers used:
  7465 ;;		wreg, status,2, status,0, cstack
  7466 ;; Tracked objects:
  7467 ;;		On entry : 0/0
  7468 ;;		On exit  : 0/0
  7469 ;;		Unchanged: 0/0
  7470 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7471 ;;      Params:         3       0       0       0       0       0       0
  7472 ;;      Locals:         0       0       0       0       0       0       0
  7473 ;;      Temps:          0       0       0       0       0       0       0
  7474 ;;      Totals:         3       0       0       0       0       0       0
  7475 ;;Total ram usage:        3 bytes
  7476 ;; Hardware stack levels used:    1
  7477 ;; Hardware stack levels required when called:    2
  7478 ;; This function calls:
  7479 ;;		___ftpack
  7480 ;; This function is called by:
  7481 ;;		_calibrate
  7482 ;;		_measure_capacitance
  7483 ;;		_measure_inductance
  7484 ;; This function uses a non-reentrant model
  7485 ;;
  7486                           
  7487                           	psect	text39
  7488  0027D4                     __ptext39:
  7489                           	opt stack 0
  7490  0027D4                     ___lwtoft:
  7491                           	opt stack 27
  7492                           
  7493                           ;incstack = 0
  7494  0027D4  FFFF               	dw	65535
  7495  0027D6  C019  F00F         	movff	___lwtoft@c,___ftpack@arg
  7496  0027DA  C01A  F010         	movff	___lwtoft@c+1,___ftpack@arg+1
  7497  0027DE  6A11               	clrf	___ftpack@arg+2,c
  7498  0027E0  0E8E               	movlw	142
  7499  0027E2  6E12               	movwf	___ftpack@exp,c
  7500  0027E4  0E00               	movlw	0
  7501  0027E6  6E13               	movwf	___ftpack@sign,c
  7502  0027E8  EC8F  F00F         	call	___ftpack	;wreg free
  7503  0027EC  C00F  F019         	movff	?___ftpack,?___lwtoft
  7504  0027F0  C010  F01A         	movff	?___ftpack+1,?___lwtoft+1
  7505  0027F4  C011  F01B         	movff	?___ftpack+2,?___lwtoft+2
  7506  0027F8  D000               	goto	l958
  7507  0027FA                     l958:
  7508  0027FA  FFFF               	dw	65535	; assembler added errata NOP
  7509  0027FC  0012               	return		;funcret
  7510  0027FE  FFFF               	dw	65535	; errata NOP
  7511  002800                     __end_of___lwtoft:
  7512                           	opt stack 0
  7513                           tosu	equ	0xFFF
  7514                           tosh	equ	0xFFE
  7515                           tosl	equ	0xFFD
  7516                           pclath	equ	0xFFA
  7517                           tblptru	equ	0xFF8
  7518                           tblptrh	equ	0xFF7
  7519                           tblptrl	equ	0xFF6
  7520                           tablat	equ	0xFF5
  7521                           prodh	equ	0xFF4
  7522                           prodl	equ	0xFF3
  7523                           intcon	equ	0xFF2
  7524                           intcon2	equ	0xFF1
  7525                           postinc0	equ	0xFEE
  7526                           wreg	equ	0xFE8
  7527                           indf2	equ	0xFDF
  7528                           postinc2	equ	0xFDE
  7529                           postdec2	equ	0xFDD
  7530                           fsr2h	equ	0xFDA
  7531                           fsr2l	equ	0xFD9
  7532                           status	equ	0xFD8
  7533                           
  7534 ;; *************** function ___ftpack *****************
  7535 ;; Defined at:
  7536 ;;		line 62 in file "/opt/microchip/xc8/v1.34/sources/common/float.c"
  7537 ;; Parameters:    Size  Location     Type
  7538 ;;  arg             3   14[COMRAM] unsigned um
  7539 ;;  exp             1   17[COMRAM] unsigned char 
  7540 ;;  sign            1   18[COMRAM] unsigned char 
  7541 ;; Auto vars:     Size  Location     Type
  7542 ;;		None
  7543 ;; Return value:  Size  Location     Type
  7544 ;;                  3   14[COMRAM] float 
  7545 ;; Registers used:
  7546 ;;		wreg, status,2, status,0
  7547 ;; Tracked objects:
  7548 ;;		On entry : 0/0
  7549 ;;		On exit  : 0/0
  7550 ;;		Unchanged: 0/0
  7551 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7552 ;;      Params:         5       0       0       0       0       0       0
  7553 ;;      Locals:         0       0       0       0       0       0       0
  7554 ;;      Temps:          3       0       0       0       0       0       0
  7555 ;;      Totals:         8       0       0       0       0       0       0
  7556 ;;Total ram usage:        8 bytes
  7557 ;; Hardware stack levels used:    1
  7558 ;; Hardware stack levels required when called:    1
  7559 ;; This function calls:
  7560 ;;		Nothing
  7561 ;; This function is called by:
  7562 ;;		___altoft
  7563 ;;		___awtoft
  7564 ;;		___ftadd
  7565 ;;		___ftdiv
  7566 ;;		___ftmul
  7567 ;;		___lltoft
  7568 ;;		___lwtoft
  7569 ;; This function uses a non-reentrant model
  7570 ;;
  7571                           
  7572                           	psect	text40
  7573  001F1E                     __ptext40:
  7574                           	opt stack 0
  7575  001F1E                     ___ftpack:
  7576                           	opt stack 27
  7577                           
  7578                           ;incstack = 0
  7579  001F1E  FFFF               	dw	65535
  7580  001F20  5012               	movf	___ftpack@exp,w,c
  7581  001F22  B4D8               	btfsc	status,2,c
  7582  001F24  D005               	goto	l2210
  7583  001F26  500F               	movf	___ftpack@arg,w,c
  7584  001F28  1010               	iorwf	___ftpack@arg+1,w,c
  7585  001F2A  1011               	iorwf	___ftpack@arg+2,w,c
  7586  001F2C  A4D8               	btfss	status,2,c
  7587  001F2E  D010               	goto	l2216
  7588  001F30                     l2210:
  7589  001F30  FFFF               	dw	65535	; assembler added errata NOP
  7590  001F32  0E00               	movlw	0
  7591  001F34  6E0F               	movwf	?___ftpack,c
  7592  001F36  0E00               	movlw	0
  7593  001F38  6E10               	movwf	?___ftpack+1,c
  7594  001F3A  0E00               	movlw	0
  7595  001F3C  6E11               	movwf	?___ftpack+2,c
  7596  001F3E  D05C               	goto	l680
  7597  001F40  D007               	goto	l2216
  7598  001F42                     l2214:
  7599  001F42  FFFF               	dw	65535	; assembler added errata NOP
  7600  001F44  2A12               	incf	___ftpack@exp,f,c
  7601  001F46  90D8               	bcf	status,0,c
  7602  001F48  3211               	rrcf	___ftpack@arg+2,f,c
  7603  001F4A  3210               	rrcf	___ftpack@arg+1,f,c
  7604  001F4C  320F               	rrcf	___ftpack@arg,f,c
  7605  001F4E  D000               	goto	l2216
  7606  001F50                     l2216:
  7607  001F50  FFFF               	dw	65535	; assembler added errata NOP
  7608  001F52  0E00               	movlw	0
  7609  001F54  140F               	andwf	___ftpack@arg,w,c
  7610  001F56  6E14               	movwf	??___ftpack& (0+255),c
  7611  001F58  0E00               	movlw	0
  7612  001F5A  1410               	andwf	___ftpack@arg+1,w,c
  7613  001F5C  6E15               	movwf	(??___ftpack+1)& (0+255),c
  7614  001F5E  0EFE               	movlw	254
  7615  001F60  1411               	andwf	___ftpack@arg+2,w,c
  7616  001F62  6E16               	movwf	(??___ftpack+2)& (0+255),c
  7617  001F64  5014               	movf	??___ftpack,w,c
  7618  001F66  1015               	iorwf	??___ftpack+1,w,c
  7619  001F68  1016               	iorwf	??___ftpack+2,w,c
  7620  001F6A  B4D8               	btfsc	status,2,c
  7621  001F6C  D00F               	goto	l2222
  7622  001F6E  D7E9               	goto	l2214
  7623  001F70  D00D               	goto	l2222
  7624  001F72                     l2218:
  7625  001F72  FFFF               	dw	65535	; assembler added errata NOP
  7626  001F74  2A12               	incf	___ftpack@exp,f,c
  7627  001F76  0E01               	movlw	1
  7628  001F78  260F               	addwf	___ftpack@arg,f,c
  7629  001F7A  0E00               	movlw	0
  7630  001F7C  2210               	addwfc	___ftpack@arg+1,f,c
  7631  001F7E  0E00               	movlw	0
  7632  001F80  2211               	addwfc	___ftpack@arg+2,f,c
  7633  001F82  90D8               	bcf	status,0,c
  7634  001F84  3211               	rrcf	___ftpack@arg+2,f,c
  7635  001F86  3210               	rrcf	___ftpack@arg+1,f,c
  7636  001F88  320F               	rrcf	___ftpack@arg,f,c
  7637  001F8A  D000               	goto	l2222
  7638  001F8C                     l2222:
  7639  001F8C  FFFF               	dw	65535	; assembler added errata NOP
  7640  001F8E  0E00               	movlw	0
  7641  001F90  140F               	andwf	___ftpack@arg,w,c
  7642  001F92  6E14               	movwf	??___ftpack& (0+255),c
  7643  001F94  0E00               	movlw	0
  7644  001F96  1410               	andwf	___ftpack@arg+1,w,c
  7645  001F98  6E15               	movwf	(??___ftpack+1)& (0+255),c
  7646  001F9A  0EFF               	movlw	255
  7647  001F9C  1411               	andwf	___ftpack@arg+2,w,c
  7648  001F9E  6E16               	movwf	(??___ftpack+2)& (0+255),c
  7649  001FA0  5014               	movf	??___ftpack,w,c
  7650  001FA2  1015               	iorwf	??___ftpack+1,w,c
  7651  001FA4  1016               	iorwf	??___ftpack+2,w,c
  7652  001FA6  B4D8               	btfsc	status,2,c
  7653  001FA8  D009               	goto	l2226
  7654  001FAA  D7E3               	goto	l2218
  7655  001FAC  D007               	goto	l2226
  7656  001FAE                     l2224:
  7657  001FAE  FFFF               	dw	65535	; assembler added errata NOP
  7658  001FB0  0612               	decf	___ftpack@exp,f,c
  7659  001FB2  90D8               	bcf	status,0,c
  7660  001FB4  360F               	rlcf	___ftpack@arg,f,c
  7661  001FB6  3610               	rlcf	___ftpack@arg+1,f,c
  7662  001FB8  3611               	rlcf	___ftpack@arg+2,f,c
  7663  001FBA  D000               	goto	l2226
  7664  001FBC                     l2226:
  7665  001FBC  FFFF               	dw	65535	; assembler added errata NOP
  7666  001FBE  BE10               	btfsc	___ftpack@arg+1,7,c
  7667  001FC0  D004               	goto	l691
  7668  001FC2  0E02               	movlw	2
  7669  001FC4  6012               	cpfslt	___ftpack@exp,c
  7670  001FC6  D7F3               	goto	l2224
  7671  001FC8  D000               	goto	l691
  7672  001FCA                     l691:
  7673  001FCA  FFFF               	dw	65535	; assembler added errata NOP
  7674  001FCC  B012               	btfsc	___ftpack@exp,0,c
  7675  001FCE  D002               	goto	l2232
  7676  001FD0  9E10               	bcf	___ftpack@arg+1,7,c
  7677  001FD2  D000               	goto	l2232
  7678  001FD4                     l2232:
  7679  001FD4  FFFF               	dw	65535	; assembler added errata NOP
  7680  001FD6  90D8               	bcf	status,0,c
  7681  001FD8  3212               	rrcf	___ftpack@exp,f,c
  7682  001FDA  5012               	movf	___ftpack@exp,w,c
  7683  001FDC  1211               	iorwf	___ftpack@arg+2,f,c
  7684  001FDE  5013               	movf	___ftpack@sign,w,c
  7685  001FE0  B4D8               	btfsc	status,2,c
  7686  001FE2  D002               	goto	l2238
  7687  001FE4  8E11               	bsf	___ftpack@arg+2,7,c
  7688  001FE6  D000               	goto	l2238
  7689  001FE8                     l2238:
  7690  001FE8  FFFF               	dw	65535	; assembler added errata NOP
  7691  001FEA  C00F  F00F         	movff	___ftpack@arg,?___ftpack
  7692  001FEE  C010  F010         	movff	___ftpack@arg+1,?___ftpack+1
  7693  001FF2  C011  F011         	movff	___ftpack@arg+2,?___ftpack+2
  7694  001FF6  D000               	goto	l680
  7695  001FF8                     l680:
  7696  001FF8  FFFF               	dw	65535	; assembler added errata NOP
  7697  001FFA  0012               	return		;funcret
  7698  001FFC  FFFF               	dw	65535	; errata NOP
  7699  001FFE                     __end_of___ftpack:
  7700                           	opt stack 0
  7701                           tosu	equ	0xFFF
  7702                           tosh	equ	0xFFE
  7703                           tosl	equ	0xFFD
  7704                           pclath	equ	0xFFA
  7705                           tblptru	equ	0xFF8
  7706                           tblptrh	equ	0xFF7
  7707                           tblptrl	equ	0xFF6
  7708                           tablat	equ	0xFF5
  7709                           prodh	equ	0xFF4
  7710                           prodl	equ	0xFF3
  7711                           intcon	equ	0xFF2
  7712                           intcon2	equ	0xFF1
  7713                           postinc0	equ	0xFEE
  7714                           wreg	equ	0xFE8
  7715                           indf2	equ	0xFDF
  7716                           postinc2	equ	0xFDE
  7717                           postdec2	equ	0xFDD
  7718                           fsr2h	equ	0xFDA
  7719                           fsr2l	equ	0xFD9
  7720                           status	equ	0xFD8
  7721                           
  7722 ;; *************** function _isr *****************
  7723 ;; Defined at:
  7724 ;;		line 79 in file "../../../src/LC-meter.c"
  7725 ;; Parameters:    Size  Location     Type
  7726 ;;		None
  7727 ;; Auto vars:     Size  Location     Type
  7728 ;;		None
  7729 ;; Return value:  Size  Location     Type
  7730 ;;                  2  301[None  ] int 
  7731 ;; Registers used:
  7732 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  7733 ;; Tracked objects:
  7734 ;;		On entry : 0/0
  7735 ;;		On exit  : 0/0
  7736 ;;		Unchanged: 0/0
  7737 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7738 ;;      Params:         0       0       0       0       0       0       0
  7739 ;;      Locals:         0       0       0       0       0       0       0
  7740 ;;      Temps:         14       0       0       0       0       0       0
  7741 ;;      Totals:        14       0       0       0       0       0       0
  7742 ;;Total ram usage:       14 bytes
  7743 ;; Hardware stack levels used:    1
  7744 ;; This function calls:
  7745 ;;		Nothing
  7746 ;; This function is called by:
  7747 ;;		Interrupt level 2
  7748 ;; This function uses a non-reentrant model
  7749 ;;
  7750                           
  7751                           	psect	intcode
  7752  000008                     __pintcode:
  7753                           	opt stack 0
  7754  000008                     _isr:
  7755                           	opt stack 23
  7756                           
  7757                           ;incstack = 0
  7758  000008  FFFF               	dw	65535	; errata NOP
  7759  00000A  CFFA F001          	movff	pclath,??_isr
  7760  00000E  CFFB F002          	movff	pclatu,??_isr+1
  7761  000012  CFE9 F003          	movff	fsr0l,??_isr+2
  7762  000016  CFEA F004          	movff	fsr0h,??_isr+3
  7763  00001A  CFE1 F005          	movff	fsr1l,??_isr+4
  7764  00001E  CFE2 F006          	movff	fsr1h,??_isr+5
  7765  000022  CFD9 F007          	movff	fsr2l,??_isr+6
  7766  000026  CFDA F008          	movff	fsr2h,??_isr+7
  7767  00002A  CFF3 F009          	movff	prodl,??_isr+8
  7768  00002E  CFF4 F00A          	movff	prodh,??_isr+9
  7769  000032  CFF6 F00B          	movff	tblptrl,??_isr+10
  7770  000036  CFF7 F00C          	movff	tblptrh,??_isr+11
  7771  00003A  CFF8 F00D          	movff	tblptru,??_isr+12
  7772  00003E  CFF5 F00E          	movff	tablat,??_isr+13
  7773                           
  7774                           ;LC-meter.c: 81: if(TMR2IF) {
  7775  000042  A29E               	btfss	3998,1,c	;volatile
  7776  000044  D050               	goto	i2l3182
  7777                           
  7778                           ;LC-meter.c: 83: bres += 256;
  7779  000046  0100               	movlb	0	; () banked
  7780  000048  0E01               	movlw	1
  7781  00004A  27FC               	addwf	(_bres+1)& (0+255),f,b	;volatile
  7782                           
  7783                           ;LC-meter.c: 85: if(bres >= 5000) {
  7784  00004C  0E88               	movlw	136
  7785  00004E  0100               	movlb	0	; () banked
  7786  000050  5DFB               	subwf	_bres& (0+255),w,b	;volatile
  7787  000052  0E13               	movlw	19
  7788  000054  0100               	movlb	0	; () banked
  7789  000056  59FC               	subwfb	(_bres+1)& (0+255),w,b	;volatile
  7790  000058  A0D8               	btfss	status,0,c
  7791  00005A  D042               	goto	i2l3180
  7792                           
  7793                           ; BSR set to: 0
  7794                           ;LC-meter.c: 86: bres -= 5000;
  7795  00005C  0100               	movlb	0	; () banked
  7796  00005E  0E88               	movlw	136
  7797  000060  5FFB               	subwf	_bres& (0+255),f,b	;volatile
  7798  000062  0E13               	movlw	19
  7799  000064  5BFC               	subwfb	(_bres+1)& (0+255),f,b	;volatile
  7800                           
  7801                           ; BSR set to: 0
  7802                           ;LC-meter.c: 87: msecpart++;
  7803  000066  0100               	movlb	0	; () banked
  7804  000068  4BFD               	infsnz	_msecpart& (0+255),f,b	;volatile
  7805  00006A  2BFE               	incf	(_msecpart+1)& (0+255),f,b	;volatile
  7806                           
  7807                           ; BSR set to: 0
  7808                           ;LC-meter.c: 88: msecs++;
  7809  00006C  0E01               	movlw	1
  7810  00006E  2664               	addwf	_msecs,f,c	;volatile
  7811  000070  0E00               	movlw	0
  7812  000072  2265               	addwfc	_msecs+1,f,c	;volatile
  7813  000074  2266               	addwfc	_msecs+2,f,c	;volatile
  7814  000076  2267               	addwfc	_msecs+3,f,c	;volatile
  7815                           
  7816                           ; BSR set to: 0
  7817                           ;LC-meter.c: 90: LATC3 = (((blink > 200)) == 0);
  7818  000078  0100               	movlb	0	; () banked
  7819  00007A  51F0               	movf	(_blink+1)& (0+255),w,b
  7820  00007C  E107               	bnz	i2u297_40
  7821  00007E  0EC9               	movlw	201
  7822  000080  0100               	movlb	0	; () banked
  7823  000082  5DEF               	subwf	_blink& (0+255),w,b
  7824  000084  B0D8               	btfsc	status,0,c
  7825  000086  D002               	goto	i2u297_40
  7826  000088  868B               	bsf	3979,3,c	;volatile
  7827  00008A  D002               	goto	i2l3170
  7828  00008C                     i2u297_40:
  7829  00008C  FFFF               	dw	65535	; assembler added errata NOP
  7830  00008E  968B               	bcf	3979,3,c	;volatile
  7831  000090                     i2l3170:
  7832  000090  FFFF               	dw	65535	; assembler added errata NOP
  7833                           
  7834                           ;LC-meter.c: 91: if(blink >= 400)
  7835  000092  0E90               	movlw	144
  7836  000094  0100               	movlb	0	; () banked
  7837  000096  5DEF               	subwf	_blink& (0+255),w,b
  7838  000098  0E01               	movlw	1
  7839  00009A  0100               	movlb	0	; () banked
  7840  00009C  59F0               	subwfb	(_blink+1)& (0+255),w,b
  7841  00009E  A0D8               	btfss	status,0,c
  7842  0000A0  D006               	goto	i2l3174
  7843                           
  7844                           ; BSR set to: 0
  7845                           ;LC-meter.c: 92: blink -= 400;
  7846  0000A2  0100               	movlb	0	; () banked
  7847  0000A4  0E90               	movlw	144
  7848  0000A6  5FEF               	subwf	_blink& (0+255),f,b
  7849  0000A8  0E01               	movlw	1
  7850  0000AA  5BF0               	subwfb	(_blink+1)& (0+255),f,b
  7851  0000AC  D000               	goto	i2l3174
  7852  0000AE                     i2l3174:
  7853  0000AE  FFFF               	dw	65535	; assembler added errata NOP
  7854                           
  7855                           ; BSR set to: 0
  7856                           ;LC-meter.c: 93: ++blink;
  7857  0000B0  0100               	movlb	0	; () banked
  7858  0000B2  4BEF               	infsnz	_blink& (0+255),f,b
  7859  0000B4  2BF0               	incf	(_blink+1)& (0+255),f,b
  7860                           
  7861                           ; BSR set to: 0
  7862                           ;LC-meter.c: 96: if(msecpart >= 1000) {
  7863  0000B6  0EE8               	movlw	232
  7864  0000B8  0100               	movlb	0	; () banked
  7865  0000BA  5DFD               	subwf	_msecpart& (0+255),w,b	;volatile
  7866  0000BC  0E03               	movlw	3
  7867  0000BE  0100               	movlb	0	; () banked
  7868  0000C0  59FE               	subwfb	(_msecpart+1)& (0+255),w,b	;volatile
  7869  0000C2  A0D8               	btfss	status,0,c
  7870  0000C4  D00D               	goto	i2l3180
  7871                           
  7872                           ; BSR set to: 0
  7873                           ;LC-meter.c: 98: seconds++;
  7874  0000C6  0E01               	movlw	1
  7875  0000C8  0100               	movlb	0	; () banked
  7876  0000CA  27E1               	addwf	_seconds& (0+255),f,b	;volatile
  7877  0000CC  0E00               	movlw	0
  7878  0000CE  23E2               	addwfc	(_seconds+1)& (0+255),f,b	;volatile
  7879  0000D0  23E3               	addwfc	(_seconds+2)& (0+255),f,b	;volatile
  7880  0000D2  23E4               	addwfc	(_seconds+3)& (0+255),f,b	;volatile
  7881                           
  7882                           ;LC-meter.c: 99: msecpart -= 1000;
  7883  0000D4  0100               	movlb	0	; () banked
  7884  0000D6  0EE8               	movlw	232
  7885  0000D8  5FFD               	subwf	_msecpart& (0+255),f,b	;volatile
  7886  0000DA  0E03               	movlw	3
  7887  0000DC  5BFE               	subwfb	(_msecpart+1)& (0+255),f,b	;volatile
  7888                           
  7889                           ; BSR set to: 0
  7890  0000DE  D000               	goto	i2l3180
  7891  0000E0                     i2l3180:
  7892  0000E0  FFFF               	dw	65535	; assembler added errata NOP
  7893                           
  7894                           ; BSR set to: 0
  7895                           ;LC-meter.c: 100: }
  7896                           ;LC-meter.c: 101: }
  7897                           ;LC-meter.c: 103: TMR2IF = 0;
  7898  0000E2  929E               	bcf	3998,1,c	;volatile
  7899  0000E4  D000               	goto	i2l3182
  7900  0000E6                     i2l3182:
  7901  0000E6  FFFF               	dw	65535	; assembler added errata NOP
  7902                           
  7903                           ;LC-meter.c: 104: }
  7904                           ;LC-meter.c: 106: if(RCIF) { rxfifo[rxiptr] = RCREG; ser_tmp = (rxiptr + 1) & ((unsigned
      +                           char)16 - 1); if(ser_tmp != rxoptr) rxiptr = ser_tmp; }; if(TXIF && TXIE) { TXREG = txf
      +                          ifo[txoptr]; ++txoptr; txoptr &= ((unsigned char)16 - 1); if(txoptr == txiptr) { TXIE = 
      +                          0; }
  7905  0000E8  AA9E               	btfss	3998,5,c	;volatile
  7906  0000EA  D014               	goto	i2l306
  7907  0000EC  5068               	movf	_rxiptr,w,c	;volatile
  7908  0000EE  0D01               	mullw	1
  7909  0000F0  0ED1               	movlw	low _rxfifo
  7910  0000F2  24F3               	addwf	prodl,w,c
  7911  0000F4  6ED9               	movwf	fsr2l,c
  7912  0000F6  0E00               	movlw	high _rxfifo
  7913  0000F8  20F4               	addwfc	prodh,w,c
  7914  0000FA  6EDA               	movwf	fsr2h,c
  7915  0000FC  CFAE FFDF          	movff	4014,indf2	;volatile
  7916  000100  2868               	incf	_rxiptr,w,c	;volatile
  7917  000102  0B0F               	andlw	15
  7918  000104  6E6A               	movwf	_ser_tmp,c
  7919  000106  5069               	movf	_rxoptr,w,c	;volatile
  7920  000108  186A               	xorwf	_ser_tmp,w,c
  7921  00010A  B4D8               	btfsc	status,2,c
  7922  00010C  D003               	goto	i2l306
  7923  00010E  C06A  F068         	movff	_ser_tmp,_rxiptr	;volatile
  7924  000112  D000               	goto	i2l306
  7925  000114                     i2l306:
  7926  000114  FFFF               	dw	65535	; assembler added errata NOP
  7927  000116  B89E               	btfsc	3998,4,c	;volatile
  7928  000118  A89D               	btfss	3997,4,c	;volatile
  7929  00011A  D013               	goto	i2l310
  7930  00011C  506C               	movf	_txoptr,w,c	;volatile
  7931  00011E  0D01               	mullw	1
  7932  000120  0E00               	movlw	low _txfifo
  7933  000122  24F3               	addwf	prodl,w,c
  7934  000124  6ED9               	movwf	fsr2l,c
  7935  000126  0E01               	movlw	high _txfifo
  7936  000128  20F4               	addwfc	prodh,w,c
  7937  00012A  6EDA               	movwf	fsr2h,c
  7938  00012C  50DF               	movf	indf2,w,c
  7939  00012E  6EAD               	movwf	4013,c	;volatile
  7940  000130  2A6C               	incf	_txoptr,f,c	;volatile
  7941  000132  0E0F               	movlw	15
  7942  000134  166C               	andwf	_txoptr,f,c	;volatile
  7943  000136  506B               	movf	_txiptr,w,c	;volatile
  7944  000138  186C               	xorwf	_txoptr,w,c	;volatile
  7945  00013A  B4D8               	btfsc	status,2,c
  7946  00013C  989D               	bcf	3997,4,c	;volatile
  7947  00013E  989E               	bcf	3998,4,c	;volatile
  7948  000140  D000               	goto	i2l310
  7949  000142                     i2l310:
  7950  000142  FFFF               	dw	65535	; assembler added errata NOP
  7951  000144  C00E  FFF5         	movff	??_isr+13,tablat
  7952  000148  C00D  FFF8         	movff	??_isr+12,tblptru
  7953  00014C  C00C  FFF7         	movff	??_isr+11,tblptrh
  7954  000150  C00B  FFF6         	movff	??_isr+10,tblptrl
  7955  000154  C00A  FFF4         	movff	??_isr+9,prodh
  7956  000158  C009  FFF3         	movff	??_isr+8,prodl
  7957  00015C  C008  FFDA         	movff	??_isr+7,fsr2h
  7958  000160  C007  FFD9         	movff	??_isr+6,fsr2l
  7959  000164  C006  FFE2         	movff	??_isr+5,fsr1h
  7960  000168  C005  FFE1         	movff	??_isr+4,fsr1l
  7961  00016C  C004  FFEA         	movff	??_isr+3,fsr0h
  7962  000170  C003  FFE9         	movff	??_isr+2,fsr0l
  7963  000174  C002  FFFB         	movff	??_isr+1,pclatu
  7964  000178  C001  FFFA         	movff	??_isr,pclath
  7965  00017C  0011               	retfie		f
  7966  00017E  FFFF               	dw	65535	; errata NOP
  7967  000180                     __end_of_isr:
  7968                           	opt stack 0
  7969                           tosu	equ	0xFFF
  7970                           tosh	equ	0xFFE
  7971                           tosl	equ	0xFFD
  7972                           pclatu	equ	0xFFB
  7973                           pclath	equ	0xFFA
  7974                           tblptru	equ	0xFF8
  7975                           tblptrh	equ	0xFF7
  7976                           tblptrl	equ	0xFF6
  7977                           tablat	equ	0xFF5
  7978                           prodh	equ	0xFF4
  7979                           prodl	equ	0xFF3
  7980                           intcon	equ	0xFF2
  7981                           intcon2	equ	0xFF1
  7982                           postinc0	equ	0xFEE
  7983                           fsr0h	equ	0xFEA
  7984                           fsr0l	equ	0xFE9
  7985                           wreg	equ	0xFE8
  7986                           fsr1h	equ	0xFE2
  7987                           fsr1l	equ	0xFE1
  7988                           indf2	equ	0xFDF
  7989                           postinc2	equ	0xFDE
  7990                           postdec2	equ	0xFDD
  7991                           fsr2h	equ	0xFDA
  7992                           fsr2l	equ	0xFD9
  7993                           status	equ	0xFD8
  7994                           tosu	equ	0xFFF
  7995                           tosh	equ	0xFFE
  7996                           tosl	equ	0xFFD
  7997                           pclatu	equ	0xFFB
  7998                           pclath	equ	0xFFA
  7999                           tblptru	equ	0xFF8
  8000                           tblptrh	equ	0xFF7
  8001                           tblptrl	equ	0xFF6
  8002                           tablat	equ	0xFF5
  8003                           prodh	equ	0xFF4
  8004                           prodl	equ	0xFF3
  8005                           intcon	equ	0xFF2
  8006                           intcon2	equ	0xFF1
  8007                           postinc0	equ	0xFEE
  8008                           fsr0h	equ	0xFEA
  8009                           fsr0l	equ	0xFE9
  8010                           wreg	equ	0xFE8
  8011                           fsr1h	equ	0xFE2
  8012                           fsr1l	equ	0xFE1
  8013                           indf2	equ	0xFDF
  8014                           postinc2	equ	0xFDE
  8015                           postdec2	equ	0xFDD
  8016                           fsr2h	equ	0xFDA
  8017                           fsr2l	equ	0xFD9
  8018                           status	equ	0xFD8
  8019                           
  8020                           	psect	rparam
  8021  0000                     tosu	equ	0xFFF
  8022                           tosh	equ	0xFFE
  8023                           tosl	equ	0xFFD
  8024                           pclatu	equ	0xFFB
  8025                           pclath	equ	0xFFA
  8026                           tblptru	equ	0xFF8
  8027                           tblptrh	equ	0xFF7
  8028                           tblptrl	equ	0xFF6
  8029                           tablat	equ	0xFF5
  8030                           prodh	equ	0xFF4
  8031                           prodl	equ	0xFF3
  8032                           intcon	equ	0xFF2
  8033                           intcon2	equ	0xFF1
  8034                           postinc0	equ	0xFEE
  8035                           fsr0h	equ	0xFEA
  8036                           fsr0l	equ	0xFE9
  8037                           wreg	equ	0xFE8
  8038                           fsr1h	equ	0xFE2
  8039                           fsr1l	equ	0xFE1
  8040                           indf2	equ	0xFDF
  8041                           postinc2	equ	0xFDE
  8042                           postdec2	equ	0xFDD
  8043                           fsr2h	equ	0xFDA
  8044                           fsr2l	equ	0xFD9
  8045                           status	equ	0xFD8


Data Sizes:
    Strings     42
    Constant    57
    Data        3
    BSS         65
    Persistent  7
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     99     112
    BANK0           128     81     127
    BANK1           256      0      16
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    eval_poly@d	PTR const  size(2) Largest target is 30
		 -> exp@coeff(CODE[30]), log@coeff(CODE[27]), 

    frexp@eptr	PTR int  size(2) Largest target is 2
		 -> log@exponent(COMRAM[2]), floor@expon(BANK0[2]), 

    putchar_ptr	PTR FTN(unsigned char ,)void  size(2) Largest target is 0
		 -> output_putch(), format_putchar(), ser_putch(), 

    ser_puts@s	PTR const unsigned char  size(2) Largest target is 8
		 -> STR_11(CODE[3]), STR_10(CODE[5]), STR_9(CODE[3]), STR_8(CODE[8]), 
		 -> STR_7(CODE[6]), STR_6(CODE[6]), STR_5(CODE[6]), STR_4(CODE[5]), 
		 -> STR_3(CODE[3]), STR_2(CODE[3]), STR_1(CODE[6]), 


Critical Paths under _main in COMRAM

    _measure_inductance->___fttol
    _measure_capacitance->___fttol
    _format_xint32->_format_number
    _format_number->___lwdiv
    _format_double->___fttol
    _pow->___fttol
    _exp->___fttol
    _ldexp->_eval_poly
    _floor->___fttol
    ___fttol->_log10
    ___altoft->___fttol
    ___ftsub->___ftadd
    ___ftneg->___ftmul
    ___ftdiv->___ftpack
    ___lltoft->___ftpack
    _output_putch->_ser_putch
    _log10->_log
    _log->_eval_poly
    _eval_poly->___ftadd
    ___ftmul->___ftdiv
    ___ftadd->___ftneg
    ___awtoft->___ftpack
    _calibrate->___lwtoft
    _calibrate->_delay10ms
    _ser_puts->_ser_putch
    _delay10ms->___wmul
    ___lwtoft->_measure_freq

Critical Paths under _isr in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_measure_capacitance
    _measure_inductance->___fttol
    _measure_capacitance->_format_double
    _format_double->_pow
    _pow->_exp
    _exp->_floor
    _floor->___altoft
    ___altoft->___fttol

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _isr in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0  170301
                          _calibrate
                          _delay10ms
                          _indicator
                _measure_capacitance
                 _measure_inductance
                           _ser_init
                           _ser_puts
                        _timer2_init
 ---------------------------------------------------------------------------------
 (1) _timer2_init                                          4     4      0     156
                                             14 COMRAM     4     4      0
 ---------------------------------------------------------------------------------
 (1) _ser_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _measure_inductance                                  42    42      0   18548
                                              6 BANK0     33    33      0
                            ___ftadd
                            ___ftdiv
                             ___ftge
                            ___ftmul
                            ___ftneg
                            ___fttol
                           ___lwtoft
                       _measure_freq
                      _print_reading
                         _print_unit
 ---------------------------------------------------------------------------------
 (1) _measure_capacitance                                 15    15      0  145819
                                             66 BANK0     15    15      0
                            ___ftadd
                            ___ftdiv
                             ___ftge
                            ___ftmul
                            ___ftneg
                            ___fttol
                           ___lwtoft
                      _format_double
                      _format_xint32
                       _measure_freq
                      _print_reading
                         _print_unit
                          _ser_putch
                           _ser_puts
 ---------------------------------------------------------------------------------
 (2) _print_unit                                           1     1      0       0
 ---------------------------------------------------------------------------------
 (2) _print_reading                                        2     0      2     106
                                             14 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _format_xint32                                        4     0      4    1957
                                             66 COMRAM     4     0      4
                      _format_number
                     _format_putchar *
                       _output_putch *
                          _ser_putch *
 ---------------------------------------------------------------------------------
 (3) _format_number                                       45    41      4    1529
                                             21 COMRAM    45    41      4
                            ___lwdiv
                            ___lwmod
                     _format_putchar *
                       _output_putch *
                          _ser_putch *
 ---------------------------------------------------------------------------------
 (4) ___lwmod                                              5     1      4     265
                                             14 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (4) ___lwdiv                                              7     3      4     268
                                             14 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (2) _format_double                                       16    13      3  125056
                                             50 BANK0     16    13      3
                           ___awtoft
                            ___ftdiv
                             ___ftge
                            ___ftmul
                            ___ftsub
                            ___fttol
                              _floor
                     _format_putchar *
                              _log10
                       _output_putch *
                                _pow
                          _ser_putch *
 ---------------------------------------------------------------------------------
 (3) _pow                                                 17    11      6   70544
                                             33 BANK0     17    11      6
                             ___ftge
                            ___ftmul
                            ___ftneg
                            ___fttol
                           ___lltoft
                                _exp
                                _log
 ---------------------------------------------------------------------------------
 (4) _exp                                                  9     6      3   37979
                                             24 BANK0      9     6      3
                           ___awtoft
                            ___ftdiv
                             ___ftge
                            ___ftmul
                            ___ftneg
                            ___ftsub
                            ___fttol
                          _eval_poly
                              _floor
                              _ldexp
                                _log (ARG)
 ---------------------------------------------------------------------------------
 (5) _ldexp                                                7     2      5     354
                                             79 COMRAM     7     2      5
                          _eval_poly (ARG)
 ---------------------------------------------------------------------------------
 (5) _floor                                                8     5      3    9366
                                             16 BANK0      8     5      3
                           ___altoft
                            ___ftadd
                            ___ftdiv (ARG)
                             ___ftge
                            ___fttol
                              _frexp
 ---------------------------------------------------------------------------------
 (2) ___fttol                                             15    11      4     956
                                             90 COMRAM     9     5      4
                                              0 BANK0      6     6      0
                            ___ftdiv (ARG)
                              _log10 (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftge                                               9     3      6    1620
                                             14 COMRAM     9     3      6
 ---------------------------------------------------------------------------------
 (6) ___altoft                                            10     6      4    2093
                                              6 BANK0     10     6      4
                           ___ftpack
                            ___fttol (ARG)
 ---------------------------------------------------------------------------------
 (5) ___ftsub                                              6     0      6    4163
                                             67 COMRAM     6     0      6
                           ___awtoft (ARG)
                            ___ftadd
                            ___ftmul (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftneg                                              3     0      3     416
                                             52 COMRAM     3     0      3
                            ___ftmul (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftdiv                                             15     9      6    3244
                                             22 COMRAM    15     9      6
                           ___ftpack
 ---------------------------------------------------------------------------------
 (4) ___lltoft                                             9     5      4    1946
                                             22 COMRAM     9     5      4
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) _output_putch                                         1     1      0      44
                                             15 COMRAM     1     1      0
                          _ser_putch
 ---------------------------------------------------------------------------------
 (3) _log10                                                6     3      3   27001
                                             84 COMRAM     6     3      3
                            ___ftmul
                                _log
 ---------------------------------------------------------------------------------
 (4) _log                                                  5     2      3   21652
                                             79 COMRAM     5     2      3
                           ___awtoft
                            ___ftadd
                            ___ftmul
                          _eval_poly
                              _frexp
 ---------------------------------------------------------------------------------
 (5) _frexp                                                7     2      5     436
                                             14 COMRAM     7     2      5
 ---------------------------------------------------------------------------------
 (5) _eval_poly                                           12     5      7    9869
                                             67 COMRAM    12     5      7
                            ___ftadd
                            ___ftmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___ftmul                                             15     9      6    5198
                                             37 COMRAM    15     9      6
                           ___awtoft (ARG)
                            ___ftdiv (ARG)
                           ___ftpack
                              _frexp (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftadd                                             12     6      6    3698
                                             55 COMRAM    12     6      6
                           ___awtoft (ARG)
                            ___ftmul (ARG)
                            ___ftneg (ARG)
                           ___ftpack
                             ___wmul (ARG)
                              _frexp (ARG)
 ---------------------------------------------------------------------------------
 (5) ___awtoft                                             4     1      3    2180
                                             22 COMRAM     4     1      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) _format_putchar                                       1     1      0       0
 ---------------------------------------------------------------------------------
 (1) _indicator                                            1     1      0       0
 ---------------------------------------------------------------------------------
 (1) _calibrate                                            1     1      0    4051
                           ___lwtoft
                          _delay10ms
                       _measure_freq
                           _ser_puts
 ---------------------------------------------------------------------------------
 (1) _ser_puts                                             2     0      2     650
                                             15 COMRAM     2     0      2
                          _ser_putch
 ---------------------------------------------------------------------------------
 (2) _ser_putch                                            1     1      0      22
                                             14 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _measure_freq                                        10     8      2     160
                                             14 COMRAM    10     8      2
 ---------------------------------------------------------------------------------
 (1) _delay10ms                                            7     5      2    1077
                                             20 COMRAM     7     5      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (6) ___wmul                                               6     2      4     477
                                             14 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___lwtoft                                             3     0      3    2164
                                             24 COMRAM     3     0      3
                           ___ftpack
                       _measure_freq (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftpack                                             8     3      5    1824
                                             14 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (8) _isr                                                 14    14      0       0
                                              0 COMRAM    14    14      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _calibrate
     ___lwtoft
       ___ftpack
       _measure_freq (ARG)
     _delay10ms
       ___wmul
     _measure_freq
     _ser_puts
       _ser_putch
   _delay10ms
     ___wmul
   _indicator
   _measure_capacitance
     ___ftadd
       ___awtoft (ARG)
         ___ftpack
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___ftpack
         ___ftpack (ARG)
         _frexp (ARG)
       ___ftneg (ARG)
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftdiv (ARG)
             ___ftpack
           ___ftpack (ARG)
           _frexp (ARG)
       ___ftpack (ARG)
       ___wmul (ARG)
       _frexp (ARG)
     ___ftdiv
       ___ftpack
     ___ftge
     ___ftmul
       ___awtoft (ARG)
         ___ftpack
       ___ftdiv (ARG)
         ___ftpack
       ___ftpack (ARG)
       _frexp (ARG)
     ___ftneg
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___ftpack
         ___ftpack (ARG)
         _frexp (ARG)
     ___fttol
       ___ftdiv (ARG)
         ___ftpack
       _log10 (ARG)
         ___ftmul
           ___awtoft (ARG)
             ___ftpack
           ___ftdiv (ARG)
             ___ftpack
           ___ftpack (ARG)
           _frexp (ARG)
         _log
           ___awtoft
             ___ftpack
           ___ftadd
             ___awtoft (ARG)
               ___ftpack
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___ftpack
               ___ftpack (ARG)
               _frexp (ARG)
             ___ftneg (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftdiv (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 _frexp (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
             _frexp (ARG)
           ___ftmul
             ___awtoft (ARG)
               ___ftpack
             ___ftdiv (ARG)
               ___ftpack
             ___ftpack (ARG)
             _frexp (ARG)
           _eval_poly
             ___ftadd
               ___awtoft (ARG)
                 ___ftpack
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftdiv (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftneg (ARG)
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftdiv (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   _frexp (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
               _frexp (ARG)
             ___ftmul
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___ftpack
               ___ftpack (ARG)
               _frexp (ARG)
             ___wmul
           _frexp
     ___lwtoft
       ___ftpack
       _measure_freq (ARG)
     _format_double
       ___awtoft
         ___ftpack
       ___ftdiv
         ___ftpack
       ___ftge
       ___ftmul
         ___awtoft (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___ftpack
         ___ftpack (ARG)
         _frexp (ARG)
       ___ftsub
         ___awtoft (ARG)
           ___ftpack
         ___ftadd (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftdiv (ARG)
               ___ftpack
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftneg (ARG)
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___ftpack
               ___ftpack (ARG)
               _frexp (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
           _frexp (ARG)
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftdiv (ARG)
             ___ftpack
           ___ftpack (ARG)
           _frexp (ARG)
       ___fttol
         ___ftdiv (ARG)
           ___ftpack
         _log10 (ARG)
           ___ftmul
             ___awtoft (ARG)
               ___ftpack
             ___ftdiv (ARG)
               ___ftpack
             ___ftpack (ARG)
             _frexp (ARG)
           _log
             ___awtoft
               ___ftpack
             ___ftadd
               ___awtoft (ARG)
                 ___ftpack
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftdiv (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftneg (ARG)
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftdiv (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   _frexp (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
               _frexp (ARG)
             ___ftmul
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___ftpack
               ___ftpack (ARG)
               _frexp (ARG)
             _eval_poly
               ___ftadd
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftdiv (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftneg (ARG)
                   ___ftmul (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftdiv (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                     _frexp (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                 _frexp (ARG)
               ___ftmul
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftdiv (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___wmul
             _frexp
       _floor
         ___altoft
           ___ftpack
           ___fttol (ARG)
             ___ftdiv (ARG)
               ___ftpack
             _log10 (ARG)
               ___ftmul
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftdiv (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 _frexp (ARG)
               _log
                 ___awtoft
                   ___ftpack
                 ___ftadd
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftmul (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftdiv (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                     _frexp (ARG)
                   ___ftneg (ARG)
                     ___ftmul (ARG)
                       ___awtoft (ARG)
                         ___ftpack
                       ___ftdiv (ARG)
                         ___ftpack
                       ___ftpack (ARG)
                       _frexp (ARG)
                   ___ftpack (ARG)
                   ___wmul (ARG)
                   _frexp (ARG)
                 ___ftmul
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftdiv (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   _frexp (ARG)
                 _eval_poly
                   ___ftadd
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftmul (ARG)
                       ___awtoft (ARG)
                         ___ftpack
                       ___ftdiv (ARG)
                         ___ftpack
                       ___ftpack (ARG)
                       _frexp (ARG)
                     ___ftneg (ARG)
                       ___ftmul (ARG)
                         ___awtoft (ARG)
                           ___ftpack
                         ___ftdiv (ARG)
                           ___ftpack
                         ___ftpack (ARG)
                         _frexp (ARG)
                     ___ftpack (ARG)
                     ___wmul (ARG)
                     _frexp (ARG)
                   ___ftmul
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftdiv (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                     _frexp (ARG)
                   ___wmul
                 _frexp
         ___ftadd
           ___awtoft (ARG)
             ___ftpack
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftdiv (ARG)
               ___ftpack
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftneg (ARG)
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___ftpack
               ___ftpack (ARG)
               _frexp (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
           _frexp (ARG)
         ___ftdiv (ARG)
           ___ftpack
         ___ftge (ARG)
         ___fttol (ARG)
           ___ftdiv (ARG)
             ___ftpack
           _log10 (ARG)
             ___ftmul
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___ftpack
               ___ftpack (ARG)
               _frexp (ARG)
             _log
               ___awtoft
                 ___ftpack
               ___ftadd
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftdiv (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftneg (ARG)
                   ___ftmul (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftdiv (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                     _frexp (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                 _frexp (ARG)
               ___ftmul
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftdiv (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 _frexp (ARG)
               _eval_poly
                 ___ftadd
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftmul (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftdiv (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                     _frexp (ARG)
                   ___ftneg (ARG)
                     ___ftmul (ARG)
                       ___awtoft (ARG)
                         ___ftpack
                       ___ftdiv (ARG)
                         ___ftpack
                       ___ftpack (ARG)
                       _frexp (ARG)
                   ___ftpack (ARG)
                   ___wmul (ARG)
                   _frexp (ARG)
                 ___ftmul
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftdiv (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___wmul
               _frexp
         _frexp (ARG)
       _format_putchar *
       _log10 *
         ___ftmul
           ___awtoft (ARG)
             ___ftpack
           ___ftdiv (ARG)
             ___ftpack
           ___ftpack (ARG)
           _frexp (ARG)
         _log
           ___awtoft
             ___ftpack
           ___ftadd
             ___awtoft (ARG)
               ___ftpack
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___ftpack
               ___ftpack (ARG)
               _frexp (ARG)
             ___ftneg (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftdiv (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 _frexp (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
             _frexp (ARG)
           ___ftmul
             ___awtoft (ARG)
               ___ftpack
             ___ftdiv (ARG)
               ___ftpack
             ___ftpack (ARG)
             _frexp (ARG)
           _eval_poly
             ___ftadd
               ___awtoft (ARG)
                 ___ftpack
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftdiv (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftneg (ARG)
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftdiv (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   _frexp (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
               _frexp (ARG)
             ___ftmul
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___ftpack
               ___ftpack (ARG)
               _frexp (ARG)
             ___wmul
           _frexp
       _output_putch *
         _ser_putch
       _pow *
         ___ftge
         ___ftmul
           ___awtoft (ARG)
             ___ftpack
           ___ftdiv (ARG)
             ___ftpack
           ___ftpack (ARG)
           _frexp (ARG)
         ___ftneg
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftdiv (ARG)
               ___ftpack
             ___ftpack (ARG)
             _frexp (ARG)
         ___fttol
           ___ftdiv (ARG)
             ___ftpack
           _log10 (ARG)
             ___ftmul
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___ftpack
               ___ftpack (ARG)
               _frexp (ARG)
             _log
               ___awtoft
                 ___ftpack
               ___ftadd
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftdiv (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftneg (ARG)
                   ___ftmul (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftdiv (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                     _frexp (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                 _frexp (ARG)
               ___ftmul
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftdiv (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 _frexp (ARG)
               _eval_poly
                 ___ftadd
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftmul (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftdiv (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                     _frexp (ARG)
                   ___ftneg (ARG)
                     ___ftmul (ARG)
                       ___awtoft (ARG)
                         ___ftpack
                       ___ftdiv (ARG)
                         ___ftpack
                       ___ftpack (ARG)
                       _frexp (ARG)
                   ___ftpack (ARG)
                   ___wmul (ARG)
                   _frexp (ARG)
                 ___ftmul
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftdiv (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___wmul
               _frexp
         ___lltoft
           ___ftpack
         _exp
           ___awtoft
             ___ftpack
           ___ftdiv
             ___ftpack
           ___ftge
           ___ftmul
             ___awtoft (ARG)
               ___ftpack
             ___ftdiv (ARG)
               ___ftpack
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftneg
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___ftpack
               ___ftpack (ARG)
               _frexp (ARG)
           ___ftsub
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftdiv (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftneg (ARG)
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftdiv (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   _frexp (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
               _frexp (ARG)
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___ftpack
               ___ftpack (ARG)
               _frexp (ARG)
           ___fttol
             ___ftdiv (ARG)
               ___ftpack
             _log10 (ARG)
               ___ftmul
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftdiv (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 _frexp (ARG)
               _log
                 ___awtoft
                   ___ftpack
                 ___ftadd
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftmul (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftdiv (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                     _frexp (ARG)
                   ___ftneg (ARG)
                     ___ftmul (ARG)
                       ___awtoft (ARG)
                         ___ftpack
                       ___ftdiv (ARG)
                         ___ftpack
                       ___ftpack (ARG)
                       _frexp (ARG)
                   ___ftpack (ARG)
                   ___wmul (ARG)
                   _frexp (ARG)
                 ___ftmul
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftdiv (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   _frexp (ARG)
                 _eval_poly
                   ___ftadd
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftmul (ARG)
                       ___awtoft (ARG)
                         ___ftpack
                       ___ftdiv (ARG)
                         ___ftpack
                       ___ftpack (ARG)
                       _frexp (ARG)
                     ___ftneg (ARG)
                       ___ftmul (ARG)
                         ___awtoft (ARG)
                           ___ftpack
                         ___ftdiv (ARG)
                           ___ftpack
                         ___ftpack (ARG)
                         _frexp (ARG)
                     ___ftpack (ARG)
                     ___wmul (ARG)
                     _frexp (ARG)
                   ___ftmul
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftdiv (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                     _frexp (ARG)
                   ___wmul
                 _frexp
           _eval_poly
             ___ftadd
               ___awtoft (ARG)
                 ___ftpack
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftdiv (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftneg (ARG)
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftdiv (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   _frexp (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
               _frexp (ARG)
             ___ftmul
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___ftpack
               ___ftpack (ARG)
               _frexp (ARG)
             ___wmul
           _floor
             ___altoft
               ___ftpack
               ___fttol (ARG)
                 ___ftdiv (ARG)
                   ___ftpack
                 _log10 (ARG)
                   ___ftmul
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftdiv (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                     _frexp (ARG)
                   _log
                     ___awtoft
                       ___ftpack
                     ___ftadd
                       ___awtoft (ARG)
                         ___ftpack
                       ___ftmul (ARG)
                         ___awtoft (ARG)
                           ___ftpack
                         ___ftdiv (ARG)
                           ___ftpack
                         ___ftpack (ARG)
                         _frexp (ARG)
                       ___ftneg (ARG)
                         ___ftmul (ARG)
                           ___awtoft (ARG)
                             ___ftpack
                           ___ftdiv (ARG)
                             ___ftpack
                           ___ftpack (ARG)
                           _frexp (ARG)
                       ___ftpack (ARG)
                       ___wmul (ARG)
                       _frexp (ARG)
                     ___ftmul
                       ___awtoft (ARG)
                         ___ftpack
                       ___ftdiv (ARG)
                         ___ftpack
                       ___ftpack (ARG)
                       _frexp (ARG)
                     _eval_poly
                       ___ftadd
                         ___awtoft (ARG)
                           ___ftpack
                         ___ftmul (ARG)
                           ___awtoft (ARG)
                             ___ftpack
                           ___ftdiv (ARG)
                             ___ftpack
                           ___ftpack (ARG)
                           _frexp (ARG)
                         ___ftneg (ARG)
                           ___ftmul (ARG)
                             ___awtoft (ARG)
                               ___ftpack
                             ___ftdiv (ARG)
                               ___ftpack
                             ___ftpack (ARG)
                             _frexp (ARG)
                         ___ftpack (ARG)
                         ___wmul (ARG)
                         _frexp (ARG)
                       ___ftmul
                         ___awtoft (ARG)
                           ___ftpack
                         ___ftdiv (ARG)
                           ___ftpack
                         ___ftpack (ARG)
                         _frexp (ARG)
                       ___wmul
                     _frexp
             ___ftadd
               ___awtoft (ARG)
                 ___ftpack
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftdiv (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftneg (ARG)
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftdiv (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   _frexp (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
               _frexp (ARG)
             ___ftdiv (ARG)
               ___ftpack
             ___ftge (ARG)
             ___fttol (ARG)
               ___ftdiv (ARG)
                 ___ftpack
               _log10 (ARG)
                 ___ftmul
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftdiv (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   _frexp (ARG)
                 _log
                   ___awtoft
                     ___ftpack
                   ___ftadd
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftmul (ARG)
                       ___awtoft (ARG)
                         ___ftpack
                       ___ftdiv (ARG)
                         ___ftpack
                       ___ftpack (ARG)
                       _frexp (ARG)
                     ___ftneg (ARG)
                       ___ftmul (ARG)
                         ___awtoft (ARG)
                           ___ftpack
                         ___ftdiv (ARG)
                           ___ftpack
                         ___ftpack (ARG)
                         _frexp (ARG)
                     ___ftpack (ARG)
                     ___wmul (ARG)
                     _frexp (ARG)
                   ___ftmul
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftdiv (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                     _frexp (ARG)
                   _eval_poly
                     ___ftadd
                       ___awtoft (ARG)
                         ___ftpack
                       ___ftmul (ARG)
                         ___awtoft (ARG)
                           ___ftpack
                         ___ftdiv (ARG)
                           ___ftpack
                         ___ftpack (ARG)
                         _frexp (ARG)
                       ___ftneg (ARG)
                         ___ftmul (ARG)
                           ___awtoft (ARG)
                             ___ftpack
                           ___ftdiv (ARG)
                             ___ftpack
                           ___ftpack (ARG)
                           _frexp (ARG)
                       ___ftpack (ARG)
                       ___wmul (ARG)
                       _frexp (ARG)
                     ___ftmul
                       ___awtoft (ARG)
                         ___ftpack
                       ___ftdiv (ARG)
                         ___ftpack
                       ___ftpack (ARG)
                       _frexp (ARG)
                     ___wmul
                   _frexp
             _frexp (ARG)
           _ldexp
             _eval_poly (ARG)
               ___ftadd
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftdiv (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftneg (ARG)
                   ___ftmul (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftdiv (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                     _frexp (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                 _frexp (ARG)
               ___ftmul
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftdiv (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___wmul
           _log (ARG)
             ___awtoft
               ___ftpack
             ___ftadd
               ___awtoft (ARG)
                 ___ftpack
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftdiv (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftneg (ARG)
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftdiv (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   _frexp (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
               _frexp (ARG)
             ___ftmul
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___ftpack
               ___ftpack (ARG)
               _frexp (ARG)
             _eval_poly
               ___ftadd
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftdiv (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftneg (ARG)
                   ___ftmul (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftdiv (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                     _frexp (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                 _frexp (ARG)
               ___ftmul
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftdiv (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___wmul
             _frexp
         _log
           ___awtoft
             ___ftpack
           ___ftadd
             ___awtoft (ARG)
               ___ftpack
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___ftpack
               ___ftpack (ARG)
               _frexp (ARG)
             ___ftneg (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftdiv (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 _frexp (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
             _frexp (ARG)
           ___ftmul
             ___awtoft (ARG)
               ___ftpack
             ___ftdiv (ARG)
               ___ftpack
             ___ftpack (ARG)
             _frexp (ARG)
           _eval_poly
             ___ftadd
               ___awtoft (ARG)
                 ___ftpack
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftdiv (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftneg (ARG)
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftdiv (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   _frexp (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
               _frexp (ARG)
             ___ftmul
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___ftpack
               ___ftpack (ARG)
               _frexp (ARG)
             ___wmul
           _frexp
       _ser_putch *
     _format_xint32
       _format_number
         ___lwdiv
         ___lwmod
         _format_putchar *
         _output_putch *
           _ser_putch
         _ser_putch *
       _format_putchar *
       _output_putch *
         _ser_putch
       _ser_putch *
     _measure_freq
     _print_reading
     _print_unit
     _ser_putch
     _ser_puts
       _ser_putch
   _measure_inductance
     ___ftadd
       ___awtoft (ARG)
         ___ftpack
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___ftpack
         ___ftpack (ARG)
         _frexp (ARG)
       ___ftneg (ARG)
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftdiv (ARG)
             ___ftpack
           ___ftpack (ARG)
           _frexp (ARG)
       ___ftpack (ARG)
       ___wmul (ARG)
       _frexp (ARG)
     ___ftdiv
       ___ftpack
     ___ftge
     ___ftmul
       ___awtoft (ARG)
         ___ftpack
       ___ftdiv (ARG)
         ___ftpack
       ___ftpack (ARG)
       _frexp (ARG)
     ___ftneg
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___ftpack
         ___ftpack (ARG)
         _frexp (ARG)
     ___fttol
       ___ftdiv (ARG)
         ___ftpack
       _log10 (ARG)
         ___ftmul
           ___awtoft (ARG)
             ___ftpack
           ___ftdiv (ARG)
             ___ftpack
           ___ftpack (ARG)
           _frexp (ARG)
         _log
           ___awtoft
             ___ftpack
           ___ftadd
             ___awtoft (ARG)
               ___ftpack
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___ftpack
               ___ftpack (ARG)
               _frexp (ARG)
             ___ftneg (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftdiv (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 _frexp (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
             _frexp (ARG)
           ___ftmul
             ___awtoft (ARG)
               ___ftpack
             ___ftdiv (ARG)
               ___ftpack
             ___ftpack (ARG)
             _frexp (ARG)
           _eval_poly
             ___ftadd
               ___awtoft (ARG)
                 ___ftpack
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftdiv (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftneg (ARG)
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftdiv (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   _frexp (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
               _frexp (ARG)
             ___ftmul
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___ftpack
               ___ftpack (ARG)
               _frexp (ARG)
             ___wmul
           _frexp
     ___lwtoft
       ___ftpack
       _measure_freq (ARG)
     _measure_freq
     _print_reading
     _print_unit
   _ser_init
   _ser_puts
     _ser_putch
   _timer2_init

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      17        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      10       7        6.2%
BITBANK0            80      0       0       4        0.0%
BANK0               80     51      7F       5       99.2%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     63      70       1       88.2%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      FF      15        0.0%
DATA                 0      0      FF       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.34 build -361300703 
Symbol Table                                                                                   Thu Aug 29 16:36:12 2019

                                                   ___altoft@exp 008E  
                                                  ___altoft@sign 008F  
                                                             _F1 00F5  
                                                             _F2 00E9  
                                                             _F3 00EC  
                                                    __CFG_BOR$ON 000000  
                                            ___wmul@multiplicand 0011  
                                                   ___ftadd@exp1 0043  
                                                   ___ftadd@exp2 0042  
                                                   ___ftadd@sign 0041  
                                                    _putchar_ptr 006E  
                                                            l135 23D0  
                                                            l161 1820  
                                                            l334 20BA  
                                                            l372 27CE  
                                                            l700 1C5A  
                                                            l702 1C4C  
                                                            l802 2818  
                                                            l732 1F18  
                                                            l469 2166  
                                                            l813 16FC  
                                                            l590 2702  
                                                            l680 1FF8  
                                                            l760 1202  
                                                            l728 2346  
                                                            l745 10FE  
                                                            l809 26BE  
                                                            l746 129C  
                                                            l691 1FCA  
                                                            l931 250C  
                                                            l780 1D16  
                                                            l749 112C  
                                                            l941 25D0  
                                                            l792 1A50  
                                                            l769 1220  
                                                            l777 1D4E  
                                                            l882 257E  
                                                            l786 2208  
                                                            l973 1430  
                                                            l958 27FA  
                                                            l894 1940  
                                                            l969 143E  
                                                            l898 2626  
                                                            l995 10B2  
                                                            _GIE 007F97  
                                                            l998 0F6C  
                                                            l999 10A4  
                                                   __CFG_CPD$OFF 000000  
                                                            _RX9 007D5E  
                                                            _TX9 007D66  
                                                            _exp 0E98  
                                                            _log 1826  
                                                            _isr 0008  
                                                            _pow 12A2  
                                                   __CFG_BORV$27 000000  
                                                            prod 000FF3  
                                                            tosl 000FFD  
                                                            wreg 000FE8  
                                                   __CFG_LVP$OFF 000000  
                                                   ___ftdiv@cntr 0020  
                                                   ___ftdiv@sign 0025  
                                                   __CFG_WDT$OFF 000000  
                                                           l2210 1F30  
                                                           l2300 119A  
                                                           l2222 1F8C  
                                                           l2214 1F42  
                                                           l2302 11A8  
                                                           l2232 1FD4  
                                                           l2224 1FAE  
                                                           l2216 1F50  
                                                           l2320 1240  
                                                           l2312 11E6  
                                                           l2304 11B6  
                                                           l2226 1FBC  
                                                           l2218 1F72  
                                                           l2330 1274  
                                                           l2314 11F4  
                                                           l2306 11C0  
                                                           l2410 21D4  
                                                           l2340 1966  
                                                           l2238 1FE8  
                                                           l2342 1982  
                                                           l2510 1C9C  
                                                           l3310 20EE  
                                                           l2406 21A0  
                                                           l2272 110E  
                                                           l2360 19C8  
                                                           l3312 2102  
                                                           l2416 2202  
                                                           l2600 1F08  
                                                           l3400 0EFA  
                                                           l2370 19FC  
                                                           l2346 1992  
                                                           l2610 1D9C  
                                                           l2514 1CAC  
                                                           l2284 114A  
                                                           l2364 19DC  
                                                           l2612 1E22  
                                                           l2620 2522  
                                                           l2508 1C80  
                                                           l3324 15FE  
                                                           l2294 1174  
                                                           l2278 113C  
                                                           l2374 1A10  
                                                           l2390 22D8  
                                                           l2622 2532  
                                                           l2534 1CEE  
                                                           l3342 166E  
                                                           l3406 0F30  
                                                           l2368 19F4  
                                                           l2640 185E  
                                                           l2544 1D26  
                                                           l2552 2692  
                                                           l3360 16E8  
                                                           l3352 16A4  
                                                           l3424 1064  
                                                           l2378 1A28  
                                                           l2634 1838  
                                                           l3354 16B8  
                                                           l3346 1684  
                                                           l3442 12DE  
                                                           l3602 0A50  
                                                           l2564 26DC  
                                                           l2468 2746  
                                                           l3348 168E  
                                                           l3356 16C8  
                                                           l3428 1078  
                                                           l3460 13A6  
                                                           l2660 24DE  
                                                           l2740 1718  
                                                           l3604 0A5C  
                                                           l2822 2726  
                                                           l3382 1BD0  
                                                           l3374 1B98  
                                                           l2582 1E9C  
                                                           l2574 1E4C  
                                                           l3542 0C1A  
                                                           l3456 137C  
                                                           l3448 1302  
                                                           l2656 24C8  
                                                           l2680 25AA  
                                                           l2760 17C4  
                                                           l2906 2084  
                                                           l2818 270C  
                                                           l3378 1BB0  
                                                           l2594 1EC6  
                                                           l3394 0EBC  
                                                           l3490 15A8  
                                                           l3474 1470  
                                                           l2658 24D4  
                                                           l2746 173A  
                                                           l3492 15B4  
                                                           l2668 24FE  
                                                           l2684 25C2  
                                                           l2676 2594  
                                                           l2764 17D4  
                                                           l2756 178A  
                                                           l2748 174C  
                                                           l3564 0DD2  
                                                           l3572 0E32  
                                                           l2598 1EDA  
                                                           l3486 157A  
                                                           l2678 25A0  
                                                           l2766 181A  
                                                           l2758 17AC  
                                                           l3574 0E3E  
                                                           l2864 24A2  
                                                           l3568 0E02  
                                                           l3584 06BA  
                                                           l2858 2484  
                                                           l2882 2042  
                                                           l3594 09F0  
                                                           l3690 1B14  
                                                           l2878 202C  
                                                           l3598 0A20  
                                                           l2888 2054  
                                                           l3696 1B2C  
                                                           l3698 1B34  
                                                           ?_exp 0098  
                                                           ?_log 0050  
                                                           ?_isr 0001  
                                                           ?_pow 00A1  
                                                           STR_1 0642  
                                                           STR_3 0645  
                                                           STR_4 065F  
                                                           STR_5 0648  
                                                           STR_6 064E  
                                                           STR_7 0654  
                                                           STR_8 063A  
                                                           STR_9 0645  
                                                           _BRGH 007D62  
                                                           _CREN 007D5C  
                                                           _T0CS 007EAD  
                                                           u2111 1C72  
                                                           u2131 1C92  
                                                           _T0SE 007EAC  
                                                           u3111 15EC  
                                                           u3130 1620  
                                                           u3210 1BC2  
                                                           _CCal 00F8  
                                                           u2190 1E6E  
                                                           u3135 1616  
                                                           u3260 0F3C  
                                                           u1661 10CA  
                                                           u2198 1E72  
                                                           u3270 0F40  
                                                           u3350 1358  
                                                           u1671 10DE  
                                                           u2458 1790  
                                                           u2715 2362  
                                                           u1940 2302  
                                                           u2716 2364  
                                                           u2725 2376  
                                                           u2726 2378  
                                                           u1871 1958  
                                                           u2735 238E  
                                                           u2488 17DA  
                                                           u2760 23CC  
                                                           u2736 2390  
                                                           u2745 23A2  
                                                           u3378 155C  
                                                           u2578 23DC  
                                                           u2746 23A4  
                                                           u3547 200A  
                                                           u1891 1978  
                                                           u2579 23F6  
                                                           u2755 23BA  
                                                           _PEIE 007F96  
                                                           u1948 2306  
                                                           u2588 23FC  
                                                           u2756 23BC  
                                                           u3557 2034  
                                                           u2589 2416  
                                                           u3398 158C  
                                                           _RCIF 007CF5  
                                                           _OERR 007D59  
                                                           _TMR0 000FD6  
                                                           _TMR2 000FCC  
                                                           _SPEN 007D5F  
                                                           _TXIE 007CEC  
                                                           _TXIF 007CF4  
                                                           _TXEN 007D65  
                                                           _SYNC 007D64  
                                                   __CFG_PWRT$ON 000000  
                                                           _bres 00FB  
                                                           _main 1A56  
                                                   ___ftpack@arg 000F  
                                                   ___ftpack@exp 0012  
                                                           fsr0h 000FEA  
                                                           fsr1h 000FE2  
                                                           fsr0l 000FE9  
                                                           fsr2h 000FDA  
                                                           fsr1l 000FE1  
                                                           indf2 000FDF  
                                                           fsr2l 000FD9  
                                                           exp@x 0098  
                                                           log@x 0050  
                                                           pclat 000FFA  
                                          __size_of_output_putch 000E  
                                                           pow@x 00A1  
                                                           pow@y 00A4  
                                                           prodh 000FF4  
                                                           prodl 000FF3  
                                     __end_of_measure_inductance 0AB6  
                                                           start 0180  
                                              _format_number$128 003E  
                                                   ___ftmul@cntr 0033  
                                                   ___param_bank 000010  
                                                   ___ftmul@sign 0034  
                                                   ___fttol@exp1 0085  
                                                          ??_exp 0064  
                                                          ??_log 0053  
                                                   ___fttol@lval 0081  
                                                          ??_isr 0001  
                                                          ??_pow 0064  
                                                  __CFG_OSCS$OFF 000000  
                                                          ?_main 0001  
                                                __end_of___ftadd 12A2  
                                                          STR_10 065A  
                                                          STR_11 0645  
                                                __end_of___ftdiv 1D54  
                                                __end_of___ftneg 282A  
                                                __end_of___ftmul 1A56  
                                                __end_of___ftsub 26C4  
                                                __end_of___fttol 1702  
                                                          _LATC3 007C5B  
                                                          _LATC4 007C5C  
                                                          _LATC5 007C5D  
                                                          _LATC7 007C5F  
                                                __end_of___lwdiv 251A  
                                                __end_of___lwmod 25DE  
                                                          i2l310 0142  
                                                          i2l306 0114  
                                                          _RCREG 000FAE  
                                                          _SPBRG 000FAF  
                                                          _TRISA 000F92  
                                                          _TRISC 000F94  
                                                          _SSPEN 007E35  
                                                          _TXREG 000FAD  
                                                   ___lltoft@exp 001F  
                                                          _nRBPU 007F8F  
                                                  __CFG_STVR$OFF 000000  
                                                  ___awtoft@sign 001A  
                                                          _log10 25DE  
                                                          _blink 00EF  
                                                          _floor 1B60  
                                                          _ldexp 1E3C  
                                                          _frexp 22AE  
                                                   _output_putch 282A  
                                                          _errno 00F1  
                                                          _msecs 0064  
                                                  ___ftpack@sign 0013  
                                                          pclath 000FFA  
                                                          tablat 000FF5  
                                                          pow@yi 00AE  
                                                format_number@di 0041  
                                                          status 000FD8  
                                                ??_print_reading 0011  
                                                    exp@exponent 009E  
                                                    ldexp@newexp 0053  
                                                __initialization 262C  
                                                format_putchar@c 0001  
                                                    log@exponent 0053  
                                                   __end_of_main 1B60  
                                               format_double@num 00B2  
                                                  ?_measure_freq 000F  
                                                 __CFG_OSC$HSPLL 000000  
                                         __size_of_format_double 0196  
                                                         ??_main 0064  
                                                  ___fttol@sign1 0080  
                                            format_double@weight 00BB  
                                                  __activetblptr 000002  
                                         __size_of_format_number 0124  
                                         __size_of_format_xint32 006E  
                                                __CFG_CCP2MUX$ON 000000  
                                                         ?_log10 0055  
                                                         ?_floor 0090  
                                                         ?_ldexp 0050  
                                                         ?_frexp 000F  
                                               __end_of___altoft 216C  
                                               __end_of___awtoft 2708  
                                               __end_of___ftpack 1FFE  
                                               __end_of___lltoft 2584  
                                                         i2l3170 0090  
                                                         i2l3180 00E0  
                                                         i2l3174 00AE  
                                                         i2l3182 00E6  
                                               __end_of___lwtoft 2800  
                                                         _TMR0IF 007F92  
                                                         _TMR2IE 007CE9  
                                                         _TMR2IF 007CF1  
                                                         _TMR2ON 007E52  
                                                         _TRISC0 007CA0  
                                                         _TRISC1 007CA1  
                                                         _TRISC2 007CA2  
                                                         _TRISC3 007CA3  
                                                         _TRISC4 007CA4  
                                                         _TRISC5 007CA5  
                                                         _TRISC6 007CA6  
                                                         ___ftge 216C  
                                                         ___wmul 27A6  
                                                      ??___ftadd 003E  
                                                      ??___ftdiv 001D  
                                                      ??___ftneg 0038  
                                                      ??___ftmul 002C  
                                                      ??___ftsub 004A  
                                                      ??___fttol 005F  
                                                 ??_measure_freq 0011  
                                                      ??___lwdiv 0013  
                                                   ?_timer2_init 0001  
                                                      ??___lwmod 0013  
                                                         clear_0 2632  
                                                         clear_1 263E  
                                                         clear_2 264A  
                                                         log10@x 0055  
                                                         _rxfifo 00D1  
                                                         _txfifo 0100  
                                                         _rxiptr 0068  
                                                         _rxoptr 0069  
                                                         floor@i 0093  
                                                         _txiptr 006B  
                                                         floor@x 0090  
                                          ___ftmul@f3_as_product 0030  
                                                         _txoptr 006C  
                                               __end_of_ser_init 27A6  
                                                   __pdataCOMRAM 006E  
                                               __end_of_ser_puts 2740  
                                             timer2_init@ps_mode 0010  
                                                   __mediumconst 0000  
                                                         tblptrh 000FF7  
                                                         tblptrl 000FF6  
                                                         tblptru 000FF8  
                                               format_number@buf 001E  
                                               format_number@pad 0019  
                                               __end_ofexp@coeff 061F  
                                                  _format_double 1444  
                                               __end_oflog@coeff 063A  
                                                     __accesstop 0080  
                                        __end_of__initialization 266E  
                                                     ___altoft@c 0086  
                                                     ___ftadd@f1 0038  
                                                     ___ftadd@f2 003B  
                                                  _format_number 1702  
                                                     ___ftge@ff1 000F  
                                                     ___ftge@ff2 0012  
                                                  _format_xint32 23D6  
                                                   eval_poly@res 004D  
                                                  ___rparam_used 000001  
                                                     ___ftdiv@f1 0017  
                                                     ___ftdiv@f2 001A  
                                                     ___ftdiv@f3 0021  
                                                     ___ftneg@f1 0035  
                                                     ___awtoft@c 0017  
                                         measure_capacitance@Cin 00CE  
                                                     ___ftmul@f1 0026  
                                                     ___ftmul@f2 0029  
                                   __size_of_measure_capacitance 03E2  
                                         measure_capacitance@var 00CC  
                                                     ___ftsub@f1 0044  
                                                     ___ftsub@f2 0047  
                                                     ___fttol@f1 005B  
                                                 __pcstackCOMRAM 0001  
                                             __size_of_calibrate 00A0  
                                             __size_of_delay10ms 006C  
                                                     ___lltoft@c 0017  
                                                  __end_of_log10 262C  
                                                  __end_of_floor 1C60  
                                                  __end_of_ldexp 1F1E  
                                                  __end_of_frexp 234C  
                                                     ___lwtoft@c 0019  
                                                        ??_log10 0058  
                                                        ??_floor 0064  
                                                        ??_ldexp 0055  
                                                        ??_frexp 0014  
                                                     __pbssBANK0 00D1  
                                                     __pbssBANK1 0100  
                                                 ?_format_double 00B2  
                                             __size_of_eval_poly 00E8  
                                             __size_of_indicator 0006  
                                        __size_of_format_putchar 0006  
                                                 ?_format_number 0016  
                                                 ?_format_xint32 0043  
                                                 print_unit@unit 0001  
                                                        ?___ftge 000F  
                                                        ?___wmul 000F  
                                                      ?___altoft 0086  
                                                      ?___awtoft 0017  
                                                      ?___ftpack 000F  
                                                      ?___lltoft 0017  
                                             _measure_inductance 0666  
                                             __size_of_ser_putch 0036  
                                                        _T2CKPS0 007E50  
                                                        _T2CKPS1 007E51  
                                                      ?___lwtoft 0019  
                                            ?_measure_inductance 0001  
                                              __end_of_calibrate 22AE  
                                                        _TOUTPS0 007E53  
                                                        _TOUTPS1 007E54  
                                                        _TOUTPS2 007E55  
                                              __end_of_delay10ms 24B0  
                                           __end_of_measure_freq 20C0  
                                                        __Hparam 0000  
                                                        __Lparam 0000  
                                                      ?_ser_init 0001  
                                           ??_measure_inductance 0064  
                                                      ?_ser_puts 0010  
                                                __size_of___ftge 00A2  
                                                        ___ftadd 10B8  
                                                        ___ftdiv 1C60  
                                                        ___ftneg 2800  
                                                __size_of___wmul 002E  
                                                        ___ftmul 1946  
                                                        ___ftsub 2678  
                                                        ___fttol 15DA  
                                                        ___lwdiv 24B0  
                                                        ___lwmod 2584  
                                                   __psmallconst 0600  
                                                     ??___altoft 008A  
                                                        _exp$926 009B  
                                                        __pcinit 262C  
                                                     ??___awtoft 001A  
                                                     ??___ftpack 0014  
                                              __end_of_eval_poly 1E3C  
                                                        __ramtop 0600  
                                              __end_of_indicator 2850  
                                                     ??___lltoft 001B  
                                                        __ptext0 1A56  
                                                        __ptext1 234C  
                                                        __ptext2 2776  
                                                        __ptext3 0666  
                                                        __ptext4 0AB6  
                                                        __ptext5 2838  
                                                        __ptext6 283E  
                                                        __ptext7 23D6  
                                                        __ptext8 1702  
                                                        __ptext9 2584  
                                           __size_of_timer2_init 008A  
                                                     ??___lwtoft 001C  
                                                        _pow$924 00A7  
                                                        _pow$925 00AA  
                                                   __size_of_exp 0220  
                                                   __size_of_log 0120  
                                                   __size_of_isr 0178  
                                                   __size_of_pow 01A2  
                                                        _seconds 00E1  
                                                        _ser_brg 0070  
                                                        _ser_tmp 006A  
                                                ??_format_double 0064  
                                           end_of_initialization 266E  
                                                ??_format_number 001A  
                                                ??_format_xint32 0047  
                                                        exp@sign 00A0  
                                                  __Lmediumconst 0000  
                                              __end_of_ser_putch 2776  
                                                        pow@sign 00AD  
                                  measure_inductance@denominator 0089  
                                          __end_of_print_reading 2844  
                                                     ??_ser_init 000F  
                                                     ??_ser_puts 0012  
                                                 testloop@prev_s 00F3  
                                              format_number@base 0018  
                                                        postdec2 000FDD  
                                                        postinc0 000FEE  
                                                        postinc2 000FDE  
                                                     _print_unit 2838  
                                            _measure_capacitance 0AB6  
                                                 _format_putchar 2844  
                                                    ___ftdiv@exp 0024  
                                           ?_measure_capacitance 0001  
                                        measure_capacitance@unit 00CB  
                                                    ___ftmul@exp 002F  
                                                 format_double@m 00C0  
                                         measure_inductance@unit 0098  
                                                 __end_of___ftge 220E  
                                                 __end_of___wmul 27D4  
                                                  __pidataCOMRAM 2850  
                                                     floor@expon 0096  
                                                    testloop@led 006D  
                                                 format_number@i 0042  
                                                 format_number@n 0016  
                                                 format_xint32@x 0043  
                                            start_initialization 262C  
                                                     eval_poly@d 0047  
                                                     eval_poly@n 0049  
                                                     eval_poly@x 0044  
                                          __size_of_measure_freq 00C2  
                                                     ldexp@value 0050  
                                                    __end_of_exp 10B8  
                                                    __end_of_log 1946  
                                                    __end_of_isr 0180  
                                                    __end_of_pow 1444  
                                         __end_of_format_putchar 284A  
                                             format_double@digit 00BE  
                                                     frexp@value 000F  
                                          ??_measure_capacitance 0064  
                                                       ??___ftge 0015  
                                                       ??___wmul 0013  
                                                   _measure_freq 1FFE  
                                                   delay10ms@run 001B  
                                         _measure_inductance$920 008F  
                                         _measure_inductance$921 0092  
                                         _measure_inductance$922 0095  
                                         _measure_inductance$916 008C  
                                         _measure_inductance$917 0099  
                                         _measure_inductance$918 009C  
                                         _measure_inductance$919 009F  
                                       print_reading@measurement 000F  
                                              __size_of___altoft 00AC  
                                              __size_of___awtoft 0044  
                                              __size_of___ftpack 00E0  
                                                    ?_print_unit 0001  
                                              __size_of___lltoft 006A  
                                                    __pbssCOMRAM 0064  
                                              __size_of___lwtoft 002C  
                                                  __pcstackBANK0 0080  
                                                  ?_output_putch 0001  
                                                ?_format_putchar 0001  
                                              measure_freq@count 0017  
                                                      _calibrate 220E  
                                                      _delay10ms 2444  
                                                      _log10$923 0058  
                                                      __pnvBANK0 00F8  
                                               ___lwdiv@dividend 000F  
                                                      __pintcode 0008  
                                                       ?___ftadd 0038  
                                                       ?___ftdiv 0017  
                                                       ?___ftneg 0035  
                                                       ?___ftmul 0026  
                                              __size_of_ser_init 0030  
                                                       ?___ftsub 0044  
                                                       ?___fttol 005B  
                                                       ?___lwdiv 000F  
                                                       ?___lwmod 000F  
                                              __size_of_ser_puts 0038  
                                                    __smallconst 0600  
                                                      _eval_poly 1D54  
                                                  output_putch@c 0010  
                                                      _indicator 284A  
                                                 ??_output_putch 0010  
                                               ___lwdiv@quotient 0013  
                                                 __size_of_log10 004E  
                                                 __size_of_floor 0100  
                                                 __size_of_ldexp 00E2  
                                                 __size_of_frexp 009E  
                                                     ?_calibrate 0001  
                                                 ___wmul@product 0013  
                                                     ser_putch@c 000F  
                                                     ?_delay10ms 0015  
                                                  measure_freq@i 0016  
                                            __size_of_print_unit 0006  
                                                       i2u297_40 008C  
                                                      _ser_putch 2740  
                                    __size_of_measure_inductance 0450  
                                                  ??_timer2_init 000F  
                                              indicator@indicate 0001  
                                              ___wmul@multiplier 000F  
                                                     ?_eval_poly 0044  
                                                     ?_indicator 0001  
                                          measure_inductance@Lin 00A4  
                                          measure_inductance@var 00A2  
                                          __end_of_format_double 15DA  
                                           format_number@padchar 0040  
                                          __end_of_format_number 1826  
                                          __end_of_format_xint32 2444  
                                                      frexp@eptr 0012  
                                                       __Hrparam 0000  
                                                       __Lrparam 0000  
                                                     ?_ser_putch 0001  
                                                    delay10ms@ms 0017  
                                               __size_of___ftadd 01EA  
                                               __size_of___ftdiv 00F4  
                                               __size_of___ftneg 002A  
                                                       ___altoft 20C0  
                                               __size_of___ftmul 0110  
                                               __size_of___ftsub 004C  
                                               __size_of___fttol 0128  
                                               __size_of___lwdiv 006A  
                                               __size_of___lwmod 005A  
                                                       ___awtoft 26C4  
                                                       ___ftpack 1F1E  
                                                       ___lltoft 251A  
                                                  timer2_init@ps 0011  
                                                       ___lwtoft 27D4  
                                               measure_freq@prev 0015  
                                            __end_of_timer2_init 23D6  
                                                ___lwdiv@divisor 0011  
                                                ___lwdiv@counter 0015  
                                         __size_of_print_reading 0006  
                                                       __ptext10 24B0  
                                                       __ptext11 1444  
                                                       __ptext20 2800  
                                                       __ptext12 12A2  
                                                       __ptext21 1C60  
                                                       __ptext13 0E98  
                                                       __ptext30 1946  
                                                       __ptext22 251A  
                                                       __ptext14 1E3C  
                                                       __ptext31 10B8  
                                                       __ptext23 2844  
                                                       __ptext15 1B60  
                                                       __ptext40 1F1E  
                                                       __ptext32 26C4  
                                                       __ptext24 2740  
                                                       __ptext16 15DA  
                                                       __ptext33 284A  
                                                       __ptext25 282A  
                                                       __ptext17 216C  
                                                       __ptext34 220E  
                                                       __ptext26 25DE  
                                                       __ptext18 20C0  
                                                       __ptext35 2708  
                                                       __ptext27 1826  
                                                       __ptext19 2678  
                                                       __ptext36 1FFE  
                                                       __ptext28 22AE  
                                                       __ptext37 2444  
                                                       __ptext29 1D54  
                                                       __ptext38 27A6  
                                                       __ptext39 27D4  
                                                    ??_calibrate 001C  
                                                  __size_of_main 010A  
                                                    ??_delay10ms 0017  
                                                      ser_puts@s 0010  
                                                       _msecpart 00FD  
                                          timer2_init@postscaler 0012  
                                                       _ser_init 2776  
                                                       _ser_puts 2708  
                                                       _timer1of 00E5  
                                           __end_of_output_putch 2838  
                                                       exp@coeff 0601  
                                                       log@coeff 061F  
                                    measure_inductance@numerator 0086  
                                               ??_format_putchar 000F  
                                                   ??_print_unit 000F  
                                                    ??_eval_poly 004B  
                                                    ??_indicator 000F  
                                                       intlevel2 2854  
                                    __end_of_measure_capacitance 0E98  
                                               ___lwmod@dividend 000F  
                                                    ??_ser_putch 000F  
                                             __end_of_print_unit 283E  
                                                  _print_reading 283E  
                                           delay10ms@period_10ms 0015  
                                                    _timer2_init 234C  
                                                ___lwmod@divisor 0011  
                                                ___lwmod@counter 0013  
                                              _format_double$911 00B5  
                                              _format_double$912 00B8  
                                        _measure_capacitance$913 00C2  
                                        _measure_capacitance$914 00C5  
                                        _measure_capacitance$915 00C8  
                                                 ?_print_reading 000F  
