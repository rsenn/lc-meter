

Microchip Technology PIC LITE Macro Assembler V1.34 build -361300703 
                                                                                               Thu Aug 29 16:22:10 2019

Microchip Technology Omniscient Code Generator (Lite mode) build 201502162209
     1                           	processor	18F252
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataCOMMON,global,class=CODE,delta=2
     5                           	psect	idataBANK3,global,class=CODE,delta=2
     6                           	psect	strings,global,class=STRING,delta=2
     7                           	psect	nvBANK3,global,class=BANK3,space=1,delta=1
     8                           	psect	cinit,global,class=CODE,merge=1,delta=2
     9                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
    10                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    12                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    13                           	psect	dataBANK3,global,class=BANK3,space=1,delta=1
    14                           	psect	clrtext,global,class=CODE,delta=2
    15                           	psect	cstackBANK3,global,class=BANK3,space=1,delta=1
    16                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1
    17                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    18                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    19                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    20                           	psect	maintext,global,class=CODE,split=1,delta=2
    21                           	psect	text1,local,class=CODE,merge=1,delta=2
    22                           	psect	text2,local,class=CODE,merge=1,delta=2
    23                           	psect	text3,local,class=CODE,merge=1,delta=2
    24                           	psect	text4,local,class=CODE,merge=1,delta=2
    25                           	psect	text5,local,class=CODE,merge=1,delta=2
    26                           	psect	text6,local,class=CODE,merge=1,delta=2
    27                           	psect	text7,local,class=CODE,merge=1,delta=2
    28                           	psect	text8,local,class=CODE,merge=1,delta=2
    29                           	psect	text9,local,class=CODE,merge=1,delta=2
    30                           	psect	text10,local,class=CODE,merge=1,delta=2
    31                           	psect	text11,local,class=CODE,merge=1,delta=2
    32                           	psect	text12,local,class=CODE,merge=1,delta=2
    33                           	psect	text13,local,class=CODE,merge=1,delta=2
    34                           	psect	text14,local,class=CODE,merge=1,delta=2
    35                           	psect	text15,local,class=CODE,merge=1,delta=2
    36                           	psect	text16,local,class=CODE,merge=1,delta=2
    37                           	psect	text17,local,class=CODE,merge=1,delta=2
    38                           	psect	text18,local,class=CODE,merge=1,delta=2
    39                           	psect	text19,local,class=CODE,merge=1,delta=2
    40                           	psect	text20,local,class=CODE,merge=1,delta=2
    41                           	psect	text21,local,class=CODE,merge=1,delta=2
    42                           	psect	text22,local,class=CODE,merge=1,delta=2
    43                           	psect	text23,local,class=CODE,merge=1,delta=2
    44                           	psect	text24,local,class=CODE,merge=1,delta=2
    45                           	psect	text25,local,class=CODE,merge=1,delta=2
    46                           	psect	text26,local,class=CODE,merge=1,delta=2
    47                           	psect	text27,local,class=CODE,merge=1,delta=2
    48                           	psect	text28,local,class=CODE,merge=1,delta=2
    49                           	psect	text29,local,class=CODE,merge=1,delta=2
    50                           	psect	text30,local,class=CODE,merge=1,delta=2
    51                           	psect	text31,local,class=CODE,merge=1,delta=2
    52                           	psect	text32,local,class=CODE,merge=1,delta=2
    53                           	psect	text33,local,class=CODE,merge=1,delta=2
    54                           	psect	text34,local,class=CODE,merge=1,delta=2
    55                           	psect	text35,local,class=CODE,merge=1,delta=2
    56                           	psect	text36,local,class=CODE,merge=1,delta=2
    57                           	psect	text37,local,class=CODE,merge=1,delta=2
    58                           	psect	text38,local,class=CODE,merge=1,delta=2
    59                           	psect	text39,local,class=CODE,merge=1,delta=2
    60                           	psect	text40,local,class=CODE,merge=1,delta=2
    61                           	psect	text41,local,class=CODE,merge=1,delta=2
    62                           	psect	text42,local,class=CODE,merge=1,delta=2
    63                           	psect	intentry,global,class=CODE,delta=2
    64                           	psect	functab,global,reloc=256,class=CODE,delta=2
    65                           	dabs	1,0x7E,2
    66  0000                     	;# 
    67  0001                     	;# 
    68  0002                     	;# 
    69  0003                     	;# 
    70  0004                     	;# 
    71  0005                     	;# 
    72  0006                     	;# 
    73  0007                     	;# 
    74  000A                     	;# 
    75  000B                     	;# 
    76  000C                     	;# 
    77  000D                     	;# 
    78  000E                     	;# 
    79  000E                     	;# 
    80  000F                     	;# 
    81  0010                     	;# 
    82  0011                     	;# 
    83  0012                     	;# 
    84  0013                     	;# 
    85  0014                     	;# 
    86  0015                     	;# 
    87  0015                     	;# 
    88  0016                     	;# 
    89  0017                     	;# 
    90  0018                     	;# 
    91  0019                     	;# 
    92  001A                     	;# 
    93  001B                     	;# 
    94  001B                     	;# 
    95  001C                     	;# 
    96  001D                     	;# 
    97  001E                     	;# 
    98  001F                     	;# 
    99  0081                     	;# 
   100  0085                     	;# 
   101  0086                     	;# 
   102  0087                     	;# 
   103  008C                     	;# 
   104  008D                     	;# 
   105  008E                     	;# 
   106  0091                     	;# 
   107  0092                     	;# 
   108  0093                     	;# 
   109  0094                     	;# 
   110  0098                     	;# 
   111  0099                     	;# 
   112  009C                     	;# 
   113  009D                     	;# 
   114  009E                     	;# 
   115  009F                     	;# 
   116  010C                     	;# 
   117  010D                     	;# 
   118  010E                     	;# 
   119  010F                     	;# 
   120  018C                     	;# 
   121  018D                     	;# 
   122  0000                     	;# 
   123  0001                     	;# 
   124  0002                     	;# 
   125  0003                     	;# 
   126  0004                     	;# 
   127  0005                     	;# 
   128  0006                     	;# 
   129  0007                     	;# 
   130  000A                     	;# 
   131  000B                     	;# 
   132  000C                     	;# 
   133  000D                     	;# 
   134  000E                     	;# 
   135  000E                     	;# 
   136  000F                     	;# 
   137  0010                     	;# 
   138  0011                     	;# 
   139  0012                     	;# 
   140  0013                     	;# 
   141  0014                     	;# 
   142  0015                     	;# 
   143  0015                     	;# 
   144  0016                     	;# 
   145  0017                     	;# 
   146  0018                     	;# 
   147  0019                     	;# 
   148  001A                     	;# 
   149  001B                     	;# 
   150  001B                     	;# 
   151  001C                     	;# 
   152  001D                     	;# 
   153  001E                     	;# 
   154  001F                     	;# 
   155  0081                     	;# 
   156  0085                     	;# 
   157  0086                     	;# 
   158  0087                     	;# 
   159  008C                     	;# 
   160  008D                     	;# 
   161  008E                     	;# 
   162  0091                     	;# 
   163  0092                     	;# 
   164  0093                     	;# 
   165  0094                     	;# 
   166  0098                     	;# 
   167  0099                     	;# 
   168  009C                     	;# 
   169  009D                     	;# 
   170  009E                     	;# 
   171  009F                     	;# 
   172  010C                     	;# 
   173  010D                     	;# 
   174  010E                     	;# 
   175  010F                     	;# 
   176  018C                     	;# 
   177  018D                     	;# 
   178  0000                     	;# 
   179  0001                     	;# 
   180  0002                     	;# 
   181  0003                     	;# 
   182  0004                     	;# 
   183  0005                     	;# 
   184  0006                     	;# 
   185  0007                     	;# 
   186  000A                     	;# 
   187  000B                     	;# 
   188  000C                     	;# 
   189  000D                     	;# 
   190  000E                     	;# 
   191  000E                     	;# 
   192  000F                     	;# 
   193  0010                     	;# 
   194  0011                     	;# 
   195  0012                     	;# 
   196  0013                     	;# 
   197  0014                     	;# 
   198  0015                     	;# 
   199  0015                     	;# 
   200  0016                     	;# 
   201  0017                     	;# 
   202  0018                     	;# 
   203  0019                     	;# 
   204  001A                     	;# 
   205  001B                     	;# 
   206  001B                     	;# 
   207  001C                     	;# 
   208  001D                     	;# 
   209  001E                     	;# 
   210  001F                     	;# 
   211  0081                     	;# 
   212  0085                     	;# 
   213  0086                     	;# 
   214  0087                     	;# 
   215  008C                     	;# 
   216  008D                     	;# 
   217  008E                     	;# 
   218  0091                     	;# 
   219  0092                     	;# 
   220  0093                     	;# 
   221  0094                     	;# 
   222  0098                     	;# 
   223  0099                     	;# 
   224  009C                     	;# 
   225  009D                     	;# 
   226  009E                     	;# 
   227  009F                     	;# 
   228  010C                     	;# 
   229  010D                     	;# 
   230  010E                     	;# 
   231  010F                     	;# 
   232  018C                     	;# 
   233  018D                     	;# 
   234  0000                     	;# 
   235  0001                     	;# 
   236  0002                     	;# 
   237  0003                     	;# 
   238  0004                     	;# 
   239  0005                     	;# 
   240  0006                     	;# 
   241  0007                     	;# 
   242  000A                     	;# 
   243  000B                     	;# 
   244  000C                     	;# 
   245  000D                     	;# 
   246  000E                     	;# 
   247  000E                     	;# 
   248  000F                     	;# 
   249  0010                     	;# 
   250  0011                     	;# 
   251  0012                     	;# 
   252  0013                     	;# 
   253  0014                     	;# 
   254  0015                     	;# 
   255  0015                     	;# 
   256  0016                     	;# 
   257  0017                     	;# 
   258  0018                     	;# 
   259  0019                     	;# 
   260  001A                     	;# 
   261  001B                     	;# 
   262  001B                     	;# 
   263  001C                     	;# 
   264  001D                     	;# 
   265  001E                     	;# 
   266  001F                     	;# 
   267  0081                     	;# 
   268  0085                     	;# 
   269  0086                     	;# 
   270  0087                     	;# 
   271  008C                     	;# 
   272  008D                     	;# 
   273  008E                     	;# 
   274  0091                     	;# 
   275  0092                     	;# 
   276  0093                     	;# 
   277  0094                     	;# 
   278  0098                     	;# 
   279  0099                     	;# 
   280  009C                     	;# 
   281  009D                     	;# 
   282  009E                     	;# 
   283  009F                     	;# 
   284  010C                     	;# 
   285  010D                     	;# 
   286  010E                     	;# 
   287  010F                     	;# 
   288  018C                     	;# 
   289  018D                     	;# 
   290  0000                     	;# 
   291  0001                     	;# 
   292  0002                     	;# 
   293  0003                     	;# 
   294  0004                     	;# 
   295  0005                     	;# 
   296  0006                     	;# 
   297  0007                     	;# 
   298  000A                     	;# 
   299  000B                     	;# 
   300  000C                     	;# 
   301  000D                     	;# 
   302  000E                     	;# 
   303  000E                     	;# 
   304  000F                     	;# 
   305  0010                     	;# 
   306  0011                     	;# 
   307  0012                     	;# 
   308  0013                     	;# 
   309  0014                     	;# 
   310  0015                     	;# 
   311  0015                     	;# 
   312  0016                     	;# 
   313  0017                     	;# 
   314  0018                     	;# 
   315  0019                     	;# 
   316  001A                     	;# 
   317  001B                     	;# 
   318  001B                     	;# 
   319  001C                     	;# 
   320  001D                     	;# 
   321  001E                     	;# 
   322  001F                     	;# 
   323  0081                     	;# 
   324  0085                     	;# 
   325  0086                     	;# 
   326  0087                     	;# 
   327  008C                     	;# 
   328  008D                     	;# 
   329  008E                     	;# 
   330  0091                     	;# 
   331  0092                     	;# 
   332  0093                     	;# 
   333  0094                     	;# 
   334  0098                     	;# 
   335  0099                     	;# 
   336  009C                     	;# 
   337  009D                     	;# 
   338  009E                     	;# 
   339  009F                     	;# 
   340  010C                     	;# 
   341  010D                     	;# 
   342  010E                     	;# 
   343  010F                     	;# 
   344  018C                     	;# 
   345  018D                     	;# 
   346                           
   347                           	psect	idataCOMMON
   348  07FA                     __pidataCOMMON:	
   349                           
   350                           ;initializer for _putchar_ptr
   351  07FA  3407               	retlw	low (fp__format_putchar-fpbase)
   352                           
   353                           	psect	idataBANK3
   354  07FB                     __pidataBANK3:	
   355                           
   356                           ;initializer for _ser_brg
   357  07FB  341F               	retlw	31
   358                           
   359                           	psect	strings
   360  1800                     __pstrings:	
   361  1800                     stringtab:	
   362  1800                     __stringtab:	
   363  1800                     stringcode:	
   364                           ;	String table - string pointers are 1 byte each
   365                           
   366  1800                     stringdir:	
   367  1800  3018               	movlw	high stringdir
   368  1801  008A               	movwf	10
   369  1802  0804               	movf	4,w
   370  1803  0A84               	incf	4,f
   371  1804  0782               	addwf	2,f
   372  1805                     __stringbase:	
   373  1805  3400               	retlw	0
   374  1806                     __end_of__stringtab:	
   375  1806                     exp@coeff:	
   376  1806  3400               	retlw	0
   377  1807  3480               	retlw	128
   378  1808  343F               	retlw	63
   379  1809  3472               	retlw	114
   380  180A  3431               	retlw	49
   381  180B  343F               	retlw	63
   382  180C  34FE               	retlw	254
   383  180D  3475               	retlw	117
   384  180E  343E               	retlw	62
   385  180F  3458               	retlw	88
   386  1810  3463               	retlw	99
   387  1811  343D               	retlw	61
   388  1812  3495               	retlw	149
   389  1813  341D               	retlw	29
   390  1814  343C               	retlw	60
   391  1815  34C5               	retlw	197
   392  1816  34AE               	retlw	174
   393  1817  343A               	retlw	58
   394  1818  3479               	retlw	121
   395  1819  3421               	retlw	33
   396  181A  3439               	retlw	57
   397  181B  3494               	retlw	148
   398  181C  3480               	retlw	128
   399  181D  3437               	retlw	55
   400  181E  3493               	retlw	147
   401  181F  34A7               	retlw	167
   402  1820  3435               	retlw	53
   403  1821  3456               	retlw	86
   404  1822  3415               	retlw	21
   405  1823  3434               	retlw	52
   406  1824                     __end_ofexp@coeff:	
   407  1824                     log@coeff:	
   408  1824  3400               	retlw	0
   409  1825  3400               	retlw	0
   410  1826  3400               	retlw	0
   411  1827  3400               	retlw	0
   412  1828  3480               	retlw	128
   413  1829  343F               	retlw	63
   414  182A  34F0               	retlw	240
   415  182B  34FF               	retlw	255
   416  182C  34BE               	retlw	190
   417  182D  34E2               	retlw	226
   418  182E  34A9               	retlw	169
   419  182F  343E               	retlw	62
   420  1830  3483               	retlw	131
   421  1831  3476               	retlw	118
   422  1832  34BE               	retlw	190
   423  1833  34AE               	retlw	174
   424  1834  342B               	retlw	43
   425  1835  343E               	retlw	62
   426  1836  343C               	retlw	60
   427  1837  34C3               	retlw	195
   428  1838  34BD               	retlw	189
   429  1839  34D2               	retlw	210
   430  183A  3413               	retlw	19
   431  183B  343D               	retlw	61
   432  183C  3478               	retlw	120
   433  183D  34D3               	retlw	211
   434  183E  34BB               	retlw	187
   435  183F                     __end_oflog@coeff:	
   436  183F                     STR_8:	
   437  183F  340D               	retlw	13
   438  1840  340A               	retlw	10
   439  1841  3443               	retlw	67	;'C'
   440  1842  3443               	retlw	67	;'C'
   441  1843  3461               	retlw	97	;'a'
   442  1844  346C               	retlw	108	;'l'
   443  1845  343D               	retlw	61	;'='
   444  1846  3400               	retlw	0
   445  1847                     STR_1:	
   446  1847  342E               	retlw	46	;'.'
   447  1848  342E               	retlw	46	;'.'
   448  1849  342E               	retlw	46	;'.'
   449  184A  340D               	retlw	13
   450  184B  340A               	retlw	10
   451  184C  3400               	retlw	0
   452  184D                     STR_5:	
   453  184D  340D               	retlw	13
   454  184E  340A               	retlw	10
   455  184F  3446               	retlw	70	;'F'
   456  1850  3431               	retlw	49	;'1'
   457  1851  343D               	retlw	61	;'='
   458  1852  3400               	retlw	0
   459  1853                     STR_6:	
   460  1853  340D               	retlw	13
   461  1854  340A               	retlw	10
   462  1855  3446               	retlw	70	;'F'
   463  1856  3432               	retlw	50	;'2'
   464  1857  343D               	retlw	61	;'='
   465  1858  3400               	retlw	0
   466  1859                     STR_7:	
   467  1859  340D               	retlw	13
   468  185A  340A               	retlw	10
   469  185B  3446               	retlw	70	;'F'
   470  185C  3433               	retlw	51	;'3'
   471  185D  343D               	retlw	61	;'='
   472  185E  3400               	retlw	0
   473  185F                     STR_10:	
   474  185F  3443               	retlw	67	;'C'
   475  1860  3469               	retlw	105	;'i'
   476  1861  346E               	retlw	110	;'n'
   477  1862  343D               	retlw	61	;'='
   478  1863  3400               	retlw	0
   479  1864                     STR_4:	
   480  1864  3476               	retlw	118	;'v'
   481  1865  3461               	retlw	97	;'a'
   482  1866  3472               	retlw	114	;'r'
   483  1867  343D               	retlw	61	;'='
   484  1868  3400               	retlw	0
   485  184A                     
   486                           	psect	nvBANK3
   487  01DE                     __pnvBANK3:	
   488  01DE                     _CCal:	
   489  01DE                     	ds	3
   490  01E1                     _bres:	
   491  01E1                     	ds	2
   492  01E3                     _msecpart:	
   493  01E3                     	ds	2
   494  001A                     _RCREG	set	26
   495  0001                     _TMR0	set	1
   496  0011                     _TMR2	set	17
   497  0019                     _TXREG	set	25
   498  00C4                     _CREN	set	196
   499  005F                     _GIE	set	95
   500  00C1                     _OERR	set	193
   501  005E                     _PEIE	set	94
   502  003B                     _RC3	set	59
   503  003C                     _RC4	set	60
   504  003D                     _RC5	set	61
   505  003F                     _RC7	set	63
   506  0065                     _RCIF	set	101
   507  00C6                     _RX9	set	198
   508  00C7                     _SPEN	set	199
   509  00A5                     _SSPEN	set	165
   510  0090                     _T2CKPS0	set	144
   511  0091                     _T2CKPS1	set	145
   512  005A                     _TMR0IF	set	90
   513  0061                     _TMR2IF	set	97
   514  0092                     _TMR2ON	set	146
   515  0093                     _TOUTPS0	set	147
   516  0094                     _TOUTPS1	set	148
   517  0095                     _TOUTPS2	set	149
   518  0064                     _TXIF	set	100
   519  009C                     _CMCON	set	156
   520  0099                     _SPBRG	set	153
   521  0085                     _TRISA	set	133
   522  0087                     _TRISC	set	135
   523  04C2                     _BRGH	set	1218
   524  04C4                     _SYNC	set	1220
   525  040D                     _T0CS	set	1037
   526  040C                     _T0SE	set	1036
   527  0461                     _TMR2IE	set	1121
   528  0438                     _TRISC0	set	1080
   529  0439                     _TRISC1	set	1081
   530  043A                     _TRISC2	set	1082
   531  043B                     _TRISC3	set	1083
   532  043C                     _TRISC4	set	1084
   533  043D                     _TRISC5	set	1085
   534  043E                     _TRISC6	set	1086
   535  04C6                     _TX9	set	1222
   536  04C5                     _TXEN	set	1221
   537  0464                     _TXIE	set	1124
   538  040F                     _nRBPU	set	1039
   539                           
   540                           	psect	cinit
   541  0015                     start_initialization:	
   542                           ; #config settings
   543                           
   544  0015                     __initialization:	
   545                           
   546                           ; Clear objects allocated to COMMON
   547  0015  01F5               	clrf	__pbssCOMMON& (0+127)
   548  0016  01F6               	clrf	(__pbssCOMMON+1)& (0+127)
   549  0017  01F7               	clrf	(__pbssCOMMON+2)& (0+127)
   550  0018  01F8               	clrf	(__pbssCOMMON+3)& (0+127)
   551                           
   552                           ; Clear objects allocated to BANK1
   553  0019  1683               	bsf	3,5	;RP0=1, select bank1
   554  001A  1303               	bcf	3,6	;RP1=0, select bank1
   555  001B  01E2               	clrf	__pbssBANK1& (0+127)
   556                           
   557                           ; Clear objects allocated to BANK3
   558  001C  1783               	bsf	3,7	;select IRP bank2
   559  001D  3090               	movlw	low __pbssBANK3
   560  001E  0084               	movwf	4
   561  001F  30CE               	movlw	low (__pbssBANK3+62)
   562  0020  160A  158A  235C  120A  118A  	fcall	clear_ram0
   563                           
   564                           ; Initialize objects allocated to BANK3
   565  0025  1683               	bsf	3,5	;RP0=1, select bank3
   566  0026  1703               	bsf	3,6	;RP1=1, select bank3
   567  0027  120A  118A  27FB  120A  118A  	fcall	__pidataBANK3	;fetch initializer
   568  002C  00E5               	movwf	__pdataBANK3& (0+127)
   569                           
   570                           ; Initialize objects allocated to COMMON
   571  002D  120A  118A  27FA   	fcall	__pidataCOMMON	;fetch initializer
   572  0030  00F9               	movwf	__pdataCOMMON& (0+127)
   573  0031                     end_of_initialization:	
   574                           ;End of C runtime variable initialization code
   575                           
   576  0031                     __end_of__initialization:	
   577  0031  0183               	clrf	3
   578  0032  120A  118A  2835   	ljmp	_main	;jump to C main() function
   579                           
   580                           	psect	bssCOMMON
   581  0075                     __pbssCOMMON:	
   582  0075                     _rxiptr:	
   583  0075                     	ds	1
   584  0076                     _rxoptr:	
   585  0076                     	ds	1
   586  0077                     _txiptr:	
   587  0077                     	ds	1
   588  0078                     _txoptr:	
   589  0078                     	ds	1
   590                           
   591                           	psect	dataCOMMON
   592  0079                     __pdataCOMMON:	
   593  0079                     _putchar_ptr:	
   594  0079                     	ds	1
   595                           
   596                           	psect	bssBANK1
   597  00E2                     __pbssBANK1:	
   598  00E2                     _ser_tmp:	
   599  00E2                     	ds	1
   600                           
   601                           	psect	bssBANK3
   602  0190                     __pbssBANK3:	
   603  0190                     _rxfifo:	
   604  0190                     	ds	16
   605  01A0                     _txfifo:	
   606  01A0                     	ds	16
   607  01B0                     _msecs:	
   608  01B0                     	ds	4
   609  01B4                     _seconds:	
   610  01B4                     	ds	4
   611  01B8                     _timer1of:	
   612  01B8                     	ds	4
   613  01BC                     testloop@prev_s:	
   614  01BC                     	ds	4
   615  01C0                     _F2:	
   616  01C0                     	ds	3
   617  01C3                     _F3:	
   618  01C3                     	ds	3
   619  01C6                     _blink:	
   620  01C6                     	ds	2
   621  01C8                     _errno:	
   622  01C8                     	ds	2
   623  01CA                     testloop@led:	
   624  01CA                     	ds	1
   625  01CB                     _F1:	
   626  01CB                     	ds	3
   627                           
   628                           	psect	dataBANK3
   629  01E5                     __pdataBANK3:	
   630  01E5                     _ser_brg:	
   631  01E5                     	ds	1
   632                           
   633                           	psect	clrtext
   634  1B5C                     clear_ram0:	
   635                           ;	Called with FSR containing the base address, and
   636                           ;	W with the last address+1
   637                           
   638  1B5C  0064               	clrwdt	;clear the watchdog before getting into this loop
   639  1B5D                     clrloop0:	
   640  1B5D  0180               	clrf	0	;clear RAM location pointed to by FSR
   641  1B5E  0A84               	incf	4,f	;increment pointer
   642  1B5F  0604               	xorwf	4,w	;XOR with final address
   643  1B60  1903               	btfsc	3,2	;have we reached the end yet?
   644  1B61  3400               	retlw	0	;all done for this memory range, return
   645  1B62  0604               	xorwf	4,w	;XOR again to restore value
   646  1B63  2B5D               	goto	clrloop0	;do the next byte
   647                           
   648                           	psect	cstackBANK3
   649  01CE                     __pcstackBANK3:	
   650  01CE                     _format_double$831:	
   651                           
   652                           ; 3 bytes @ 0x0
   653  01CE                     	ds	3
   654  01D1                     _format_double$832:	
   655                           
   656                           ; 3 bytes @ 0x3
   657  01D1                     	ds	3
   658  01D4                     _format_double$310:	
   659                           
   660                           ; 3 bytes @ 0x6
   661  01D4                     	ds	3
   662  01D7                     format_double@weight:	
   663                           
   664                           ; 3 bytes @ 0x9
   665  01D7                     	ds	3
   666  01DA                     format_double@digit:	
   667                           
   668                           ; 2 bytes @ 0xC
   669  01DA                     	ds	2
   670  01DC                     format_double@m:	
   671                           
   672                           ; 2 bytes @ 0xE
   673  01DC                     	ds	2
   674                           
   675                           	psect	cstackBANK2
   676  0110                     __pcstackBANK2:	
   677  0110                     _measure_capacitance$819:	
   678                           
   679                           ; 3 bytes @ 0x0
   680  0110                     	ds	3
   681  0113                     _measure_capacitance$820:	
   682                           
   683                           ; 3 bytes @ 0x3
   684  0113                     	ds	3
   685  0116                     _measure_capacitance$821:	
   686                           
   687                           ; 3 bytes @ 0x6
   688  0116                     	ds	3
   689  0119                     measure_capacitance@unit:	
   690                           
   691                           ; 1 bytes @ 0x9
   692  0119                     	ds	1
   693  011A                     measure_capacitance@var:	
   694                           
   695                           ; 2 bytes @ 0xA
   696  011A                     	ds	2
   697  011C                     measure_capacitance@Cin:	
   698                           
   699                           ; 3 bytes @ 0xC
   700  011C                     	ds	3
   701                           
   702                           	psect	cstackBANK1
   703  00A0                     __pcstackBANK1:	
   704  00A0                     ?___fttol:	
   705  00A0                     ___fttol@f1:	
   706                           ; 4 bytes @ 0x0
   707                           
   708                           
   709                           ; 3 bytes @ 0x0
   710  00A0                     	ds	4
   711  00A4                     ??___fttol:	
   712                           
   713                           ; 0 bytes @ 0x4
   714  00A4                     	ds	4
   715  00A8                     ___fttol@sign1:	
   716                           
   717                           ; 1 bytes @ 0x8
   718  00A8                     	ds	1
   719  00A9                     ___fttol@lval:	
   720                           
   721                           ; 4 bytes @ 0x9
   722  00A9                     	ds	4
   723  00AD                     ___fttol@exp1:	
   724                           
   725                           ; 1 bytes @ 0xD
   726  00AD                     	ds	1
   727  00AE                     ?___altoft:	
   728  00AE                     measure_inductance@numerator:	
   729                           ; 3 bytes @ 0xE
   730                           
   731  00AE                     ___altoft@c:	
   732                           ; 3 bytes @ 0xE
   733                           
   734                           
   735                           ; 4 bytes @ 0xE
   736  00AE                     	ds	3
   737  00B1                     measure_inductance@denominator:	
   738                           
   739                           ; 3 bytes @ 0x11
   740  00B1                     	ds	1
   741  00B2                     ___altoft@exp:	
   742                           
   743                           ; 1 bytes @ 0x12
   744  00B2                     	ds	1
   745  00B3                     ___altoft@sign:	
   746                           
   747                           ; 1 bytes @ 0x13
   748  00B3                     	ds	1
   749  00B4                     ?_floor:	
   750  00B4                     floor@x:	
   751                           ; 3 bytes @ 0x14
   752                           
   753  00B4                     _measure_inductance$822:	
   754                           ; 3 bytes @ 0x14
   755                           
   756                           
   757                           ; 3 bytes @ 0x14
   758  00B4                     	ds	3
   759  00B7                     ??_floor:	
   760  00B7                     _measure_inductance$826:	
   761                           ; 0 bytes @ 0x17
   762                           
   763                           
   764                           ; 3 bytes @ 0x17
   765  00B7                     	ds	1
   766  00B8                     floor@i:	
   767                           
   768                           ; 3 bytes @ 0x18
   769  00B8                     	ds	2
   770  00BA                     _measure_inductance$827:	
   771                           
   772                           ; 3 bytes @ 0x1A
   773  00BA                     	ds	1
   774  00BB                     floor@expon:	
   775                           
   776                           ; 2 bytes @ 0x1B
   777  00BB                     	ds	2
   778  00BD                     ?_exp:	
   779  00BD                     exp@x:	
   780                           ; 3 bytes @ 0x1D
   781                           
   782  00BD                     _measure_inductance$828:	
   783                           ; 3 bytes @ 0x1D
   784                           
   785                           
   786                           ; 3 bytes @ 0x1D
   787  00BD                     	ds	3
   788  00C0                     ??_exp:	
   789  00C0                     measure_inductance@unit:	
   790                           ; 0 bytes @ 0x20
   791                           
   792                           
   793                           ; 1 bytes @ 0x20
   794  00C0                     	ds	1
   795  00C1                     _measure_inductance$823:	
   796  00C1                     _exp$836:	
   797                           ; 3 bytes @ 0x21
   798                           
   799                           
   800                           ; 3 bytes @ 0x21
   801  00C1                     	ds	3
   802  00C4                     _exp$625:	
   803  00C4                     _measure_inductance$824:	
   804                           ; 3 bytes @ 0x24
   805                           
   806                           
   807                           ; 3 bytes @ 0x24
   808  00C4                     	ds	3
   809  00C7                     exp@exponent:	
   810  00C7                     _measure_inductance$825:	
   811                           ; 2 bytes @ 0x27
   812                           
   813                           
   814                           ; 3 bytes @ 0x27
   815  00C7                     	ds	2
   816  00C9                     exp@sign:	
   817                           
   818                           ; 1 bytes @ 0x29
   819  00C9                     	ds	1
   820  00CA                     ?_pow:	
   821  00CA                     measure_inductance@var:	
   822                           ; 3 bytes @ 0x2A
   823                           
   824  00CA                     pow@x:	
   825                           ; 2 bytes @ 0x2A
   826                           
   827                           
   828                           ; 3 bytes @ 0x2A
   829  00CA                     	ds	2
   830  00CC                     measure_inductance@Lin:	
   831                           
   832                           ; 3 bytes @ 0x2C
   833  00CC                     	ds	1
   834  00CD                     pow@y:	
   835                           
   836                           ; 3 bytes @ 0x2D
   837  00CD                     	ds	3
   838  00D0                     ??_pow:	
   839                           
   840                           ; 0 bytes @ 0x30
   841  00D0                     	ds	1
   842  00D1                     _pow$834:	
   843                           
   844                           ; 3 bytes @ 0x31
   845  00D1                     	ds	3
   846  00D4                     _pow$835:	
   847                           
   848                           ; 3 bytes @ 0x34
   849  00D4                     	ds	3
   850  00D7                     pow@sign:	
   851                           
   852                           ; 1 bytes @ 0x37
   853  00D7                     	ds	1
   854  00D8                     pow@yi:	
   855                           
   856                           ; 4 bytes @ 0x38
   857  00D8                     	ds	4
   858  00DC                     ?_format_double:	
   859  00DC                     format_double@num:	
   860                           ; 0 bytes @ 0x3C
   861                           
   862                           
   863                           ; 3 bytes @ 0x3C
   864  00DC                     	ds	3
   865  00DF                     ??_format_double:	
   866                           
   867                           ; 0 bytes @ 0x3F
   868  00DF                     	ds	1
   869  00E0                     ??_measure_capacitance:	
   870                           
   871                           ; 0 bytes @ 0x40
   872  00E0                     	ds	1
   873  00E1                     ??_main:	
   874                           
   875                           ; 0 bytes @ 0x41
   876  00E1                     	ds	1
   877                           
   878                           	psect	cstackCOMMON
   879  0070                     __pcstackCOMMON:	
   880  0070                     ?_timer2_init:	
   881  0070                     ?_ser_init:	
   882                           ; 0 bytes @ 0x0
   883                           
   884  0070                     ?_calibrate:	
   885                           ; 0 bytes @ 0x0
   886                           
   887  0070                     ?_ser_puts:	
   888                           ; 0 bytes @ 0x0
   889                           
   890  0070                     ?_measure_capacitance:	
   891                           ; 0 bytes @ 0x0
   892                           
   893  0070                     ?_measure_inductance:	
   894                           ; 0 bytes @ 0x0
   895                           
   896  0070                     ?_indicator:	
   897                           ; 0 bytes @ 0x0
   898                           
   899  0070                     ?_print_unit:	
   900                           ; 0 bytes @ 0x0
   901                           
   902  0070                     ??_isr:	
   903                           ; 0 bytes @ 0x0
   904                           
   905  0070                     ?_main:	
   906                           ; 0 bytes @ 0x0
   907                           
   908  0070                     ?_isr:	
   909                           ; 0 bytes @ 0x0
   910                           
   911  0070                     print_unit@unit:	
   912                           ; 2 bytes @ 0x0
   913                           
   914  0070                     indicator@indicate:	
   915                           ; 1 bytes @ 0x0
   916                           
   917                           
   918                           ; 1 bytes @ 0x0
   919  0070                     	ds	5
   920                           
   921                           	psect	cstackBANK0
   922  0020                     __pcstackBANK0:	
   923  0020                     ??_timer2_init:	
   924  0020                     ??_ser_init:	
   925                           ; 0 bytes @ 0x0
   926                           
   927  0020                     ??_indicator:	
   928                           ; 0 bytes @ 0x0
   929                           
   930  0020                     ?_print_reading:	
   931                           ; 0 bytes @ 0x0
   932                           
   933  0020                     ??_print_unit:	
   934                           ; 0 bytes @ 0x0
   935                           
   936  0020                     ?_format_putchar:	
   937                           ; 0 bytes @ 0x0
   938                           
   939  0020                     ?___ftge:	
   940                           ; 0 bytes @ 0x0
   941                           
   942  0020                     ?_ser_putch:	
   943                           ; 1 bit 
   944                           
   945  0020                     ?_output_putch:	
   946                           ; 1 bytes @ 0x0
   947                           
   948  0020                     ?___bmul:	
   949                           ; 1 bytes @ 0x0
   950                           
   951  0020                     ?_measure_freq:	
   952                           ; 1 bytes @ 0x0
   953                           
   954  0020                     ?___wmul:	
   955                           ; 2 bytes @ 0x0
   956                           
   957  0020                     ?___lwdiv:	
   958                           ; 2 bytes @ 0x0
   959                           
   960  0020                     ?___lwmod:	
   961                           ; 2 bytes @ 0x0
   962                           
   963  0020                     ?___ftpack:	
   964                           ; 2 bytes @ 0x0
   965                           
   966  0020                     ?_frexp:	
   967                           ; 3 bytes @ 0x0
   968                           
   969  0020                     output_putch@c:	
   970                           ; 3 bytes @ 0x0
   971                           
   972  0020                     ser_putch@c:	
   973                           ; 1 bytes @ 0x0
   974                           
   975  0020                     format_putchar@c:	
   976                           ; 1 bytes @ 0x0
   977                           
   978  0020                     ___bmul@multiplicand:	
   979                           ; 1 bytes @ 0x0
   980                           
   981  0020                     print_reading@measurement:	
   982                           ; 1 bytes @ 0x0
   983                           
   984  0020                     ___wmul@multiplier:	
   985                           ; 2 bytes @ 0x0
   986                           
   987  0020                     ___lwdiv@divisor:	
   988                           ; 2 bytes @ 0x0
   989                           
   990  0020                     ___lwmod@divisor:	
   991                           ; 2 bytes @ 0x0
   992                           
   993  0020                     ___ftpack@arg:	
   994                           ; 2 bytes @ 0x0
   995                           
   996  0020                     frexp@value:	
   997                           ; 3 bytes @ 0x0
   998                           
   999  0020                     ___ftge@ff1:	
  1000                           ; 3 bytes @ 0x0
  1001                           
  1002                           
  1003                           ; 3 bytes @ 0x0
  1004  0020                     	ds	1
  1005  0021                     ??_ser_putch:	
  1006  0021                     ??_output_putch:	
  1007                           ; 0 bytes @ 0x1
  1008                           
  1009  0021                     ??_format_putchar:	
  1010                           ; 0 bytes @ 0x1
  1011                           
  1012  0021                     ??___bmul:	
  1013                           ; 0 bytes @ 0x1
  1014                           
  1015  0021                     timer2_init@ps_mode:	
  1016                           ; 0 bytes @ 0x1
  1017                           
  1018                           
  1019                           ; 1 bytes @ 0x1
  1020  0021                     	ds	1
  1021  0022                     ??_ser_puts:	
  1022  0022                     ??_print_reading:	
  1023                           ; 0 bytes @ 0x2
  1024                           
  1025  0022                     ??_measure_freq:	
  1026                           ; 0 bytes @ 0x2
  1027                           
  1028  0022                     timer2_init@ps:	
  1029                           ; 0 bytes @ 0x2
  1030                           
  1031  0022                     ___bmul@product:	
  1032                           ; 1 bytes @ 0x2
  1033                           
  1034  0022                     ___wmul@multiplicand:	
  1035                           ; 1 bytes @ 0x2
  1036                           
  1037  0022                     ___lwdiv@dividend:	
  1038                           ; 2 bytes @ 0x2
  1039                           
  1040  0022                     ___lwmod@dividend:	
  1041                           ; 2 bytes @ 0x2
  1042                           
  1043                           
  1044                           ; 2 bytes @ 0x2
  1045  0022                     	ds	1
  1046  0023                     ser_puts@s:	
  1047  0023                     timer2_init@postscaler:	
  1048                           ; 1 bytes @ 0x3
  1049                           
  1050  0023                     ___bmul@multiplier:	
  1051                           ; 1 bytes @ 0x3
  1052                           
  1053  0023                     ___ftpack@exp:	
  1054                           ; 1 bytes @ 0x3
  1055                           
  1056  0023                     frexp@eptr:	
  1057                           ; 1 bytes @ 0x3
  1058                           
  1059  0023                     ___ftge@ff2:	
  1060                           ; 1 bytes @ 0x3
  1061                           
  1062                           
  1063                           ; 3 bytes @ 0x3
  1064  0023                     	ds	1
  1065  0024                     ??_frexp:	
  1066  0024                     ??___wmul:	
  1067                           ; 0 bytes @ 0x4
  1068                           
  1069  0024                     ??___lwdiv:	
  1070                           ; 0 bytes @ 0x4
  1071                           
  1072  0024                     ??___lwmod:	
  1073                           ; 0 bytes @ 0x4
  1074                           
  1075  0024                     ___ftpack@sign:	
  1076                           ; 0 bytes @ 0x4
  1077                           
  1078  0024                     ___wmul@product:	
  1079                           ; 1 bytes @ 0x4
  1080                           
  1081                           
  1082                           ; 2 bytes @ 0x4
  1083  0024                     	ds	1
  1084  0025                     ??___ftpack:	
  1085  0025                     ___lwdiv@counter:	
  1086                           ; 0 bytes @ 0x5
  1087                           
  1088  0025                     ___lwmod@counter:	
  1089                           ; 1 bytes @ 0x5
  1090                           
  1091                           
  1092                           ; 1 bytes @ 0x5
  1093  0025                     	ds	1
  1094  0026                     ?_delay10ms:	
  1095  0026                     ??___ftge:	
  1096                           ; 0 bytes @ 0x6
  1097                           
  1098  0026                     delay10ms@period_10ms:	
  1099                           ; 0 bytes @ 0x6
  1100                           
  1101  0026                     ___lwdiv@quotient:	
  1102                           ; 2 bytes @ 0x6
  1103                           
  1104                           
  1105                           ; 2 bytes @ 0x6
  1106  0026                     	ds	2
  1107  0028                     ??_delay10ms:	
  1108  0028                     ?_format_number:	
  1109                           ; 0 bytes @ 0x8
  1110                           
  1111  0028                     ?___awtoft:	
  1112                           ; 0 bytes @ 0x8
  1113                           
  1114  0028                     ?___ftdiv:	
  1115                           ; 3 bytes @ 0x8
  1116                           
  1117  0028                     ?___lltoft:	
  1118                           ; 3 bytes @ 0x8
  1119                           
  1120  0028                     measure_freq@prev:	
  1121                           ; 3 bytes @ 0x8
  1122                           
  1123  0028                     format_number@n:	
  1124                           ; 1 bytes @ 0x8
  1125                           
  1126  0028                     ___awtoft@c:	
  1127                           ; 2 bytes @ 0x8
  1128                           
  1129  0028                     ___ftdiv@f2:	
  1130                           ; 2 bytes @ 0x8
  1131                           
  1132  0028                     ___lltoft@c:	
  1133                           ; 3 bytes @ 0x8
  1134                           
  1135                           
  1136                           ; 4 bytes @ 0x8
  1137  0028                     	ds	1
  1138  0029                     measure_freq@count:	
  1139                           
  1140                           ; 2 bytes @ 0x9
  1141  0029                     	ds	1
  1142  002A                     format_number@base:	
  1143                           
  1144                           ; 1 bytes @ 0xA
  1145  002A                     	ds	1
  1146  002B                     ??___awtoft:	
  1147  002B                     ?___lwtoft:	
  1148                           ; 0 bytes @ 0xB
  1149                           
  1150  002B                     format_number@pad:	
  1151                           ; 3 bytes @ 0xB
  1152                           
  1153  002B                     ___lwtoft@c:	
  1154                           ; 1 bytes @ 0xB
  1155                           
  1156  002B                     ___ftdiv@f1:	
  1157                           ; 2 bytes @ 0xB
  1158                           
  1159                           
  1160                           ; 3 bytes @ 0xB
  1161  002B                     	ds	1
  1162  002C                     ??_format_number:	
  1163  002C                     ??___lltoft:	
  1164                           ; 0 bytes @ 0xC
  1165                           
  1166  002C                     delay10ms@ms:	
  1167                           ; 0 bytes @ 0xC
  1168                           
  1169                           
  1170                           ; 4 bytes @ 0xC
  1171  002C                     	ds	1
  1172  002D                     ___awtoft@sign:	
  1173  002D                     ___lltoft@exp:	
  1174                           ; 1 bytes @ 0xD
  1175                           
  1176                           
  1177                           ; 1 bytes @ 0xD
  1178  002D                     	ds	1
  1179  002E                     ??___ftdiv:	
  1180  002E                     ??___lwtoft:	
  1181                           ; 0 bytes @ 0xE
  1182                           
  1183                           
  1184                           ; 0 bytes @ 0xE
  1185  002E                     	ds	1
  1186  002F                     format_number@buf:	
  1187                           
  1188                           ; 32 bytes @ 0xF
  1189  002F                     	ds	1
  1190  0030                     delay10ms@run:	
  1191                           
  1192                           ; 1 bytes @ 0x10
  1193  0030                     	ds	1
  1194  0031                     ??_calibrate:	
  1195                           
  1196                           ; 0 bytes @ 0x11
  1197  0031                     	ds	1
  1198  0032                     ___ftdiv@cntr:	
  1199                           
  1200                           ; 1 bytes @ 0x12
  1201  0032                     	ds	1
  1202  0033                     ___ftdiv@f3:	
  1203                           
  1204                           ; 3 bytes @ 0x13
  1205  0033                     	ds	3
  1206  0036                     ___ftdiv@exp:	
  1207                           
  1208                           ; 1 bytes @ 0x16
  1209  0036                     	ds	1
  1210  0037                     ___ftdiv@sign:	
  1211                           
  1212                           ; 1 bytes @ 0x17
  1213  0037                     	ds	1
  1214  0038                     ?___ftmul:	
  1215  0038                     ___ftmul@f1:	
  1216                           ; 3 bytes @ 0x18
  1217                           
  1218                           
  1219                           ; 3 bytes @ 0x18
  1220  0038                     	ds	3
  1221  003B                     ___ftmul@f2:	
  1222                           
  1223                           ; 3 bytes @ 0x1B
  1224  003B                     	ds	3
  1225  003E                     ??___ftmul:	
  1226                           
  1227                           ; 0 bytes @ 0x1E
  1228  003E                     	ds	4
  1229  0042                     ___ftmul@exp:	
  1230                           
  1231                           ; 1 bytes @ 0x22
  1232  0042                     	ds	1
  1233  0043                     ___ftmul@f3_as_product:	
  1234                           
  1235                           ; 3 bytes @ 0x23
  1236  0043                     	ds	3
  1237  0046                     ___ftmul@cntr:	
  1238                           
  1239                           ; 1 bytes @ 0x26
  1240  0046                     	ds	1
  1241  0047                     ___ftmul@sign:	
  1242                           
  1243                           ; 1 bytes @ 0x27
  1244  0047                     	ds	1
  1245  0048                     ?___ftneg:	
  1246  0048                     ___ftneg@f1:	
  1247                           ; 3 bytes @ 0x28
  1248                           
  1249                           
  1250                           ; 3 bytes @ 0x28
  1251  0048                     	ds	3
  1252  004B                     ??___ftneg:	
  1253  004B                     ?___ftadd:	
  1254                           ; 0 bytes @ 0x2B
  1255                           
  1256  004B                     ___ftadd@f1:	
  1257                           ; 3 bytes @ 0x2B
  1258                           
  1259                           
  1260                           ; 3 bytes @ 0x2B
  1261  004B                     	ds	3
  1262  004E                     ___ftadd@f2:	
  1263                           
  1264                           ; 3 bytes @ 0x2E
  1265  004E                     	ds	1
  1266  004F                     _format_number$296:	
  1267                           
  1268                           ; 2 bytes @ 0x2F
  1269  004F                     	ds	2
  1270  0051                     ??___ftadd:	
  1271  0051                     format_number@padchar:	
  1272                           ; 0 bytes @ 0x31
  1273                           
  1274                           
  1275                           ; 1 bytes @ 0x31
  1276  0051                     	ds	1
  1277  0052                     format_number@di:	
  1278                           
  1279                           ; 1 bytes @ 0x32
  1280  0052                     	ds	1
  1281  0053                     format_number@i:	
  1282                           
  1283                           ; 1 bytes @ 0x33
  1284  0053                     	ds	1
  1285  0054                     ?_format_xint32:	
  1286  0054                     format_xint32@x:	
  1287                           ; 0 bytes @ 0x34
  1288                           
  1289                           
  1290                           ; 4 bytes @ 0x34
  1291  0054                     	ds	1
  1292  0055                     ___ftadd@sign:	
  1293                           
  1294                           ; 1 bytes @ 0x35
  1295  0055                     	ds	1
  1296  0056                     ___ftadd@exp2:	
  1297                           
  1298                           ; 1 bytes @ 0x36
  1299  0056                     	ds	1
  1300  0057                     ___ftadd@exp1:	
  1301                           
  1302                           ; 1 bytes @ 0x37
  1303  0057                     	ds	1
  1304  0058                     ??_format_xint32:	
  1305  0058                     ?_eval_poly:	
  1306                           ; 0 bytes @ 0x38
  1307                           
  1308  0058                     ?___ftsub:	
  1309                           ; 3 bytes @ 0x38
  1310                           
  1311  0058                     ___ftsub@f2:	
  1312                           ; 3 bytes @ 0x38
  1313                           
  1314  0058                     eval_poly@x:	
  1315                           ; 3 bytes @ 0x38
  1316                           
  1317                           
  1318                           ; 3 bytes @ 0x38
  1319  0058                     	ds	3
  1320  005B                     eval_poly@d:	
  1321  005B                     ___ftsub@f1:	
  1322                           ; 1 bytes @ 0x3B
  1323                           
  1324                           
  1325                           ; 3 bytes @ 0x3B
  1326  005B                     	ds	1
  1327  005C                     eval_poly@n:	
  1328                           
  1329                           ; 2 bytes @ 0x3C
  1330  005C                     	ds	2
  1331  005E                     ??_eval_poly:	
  1332  005E                     ??___ftsub:	
  1333                           ; 0 bytes @ 0x3E
  1334                           
  1335                           
  1336                           ; 0 bytes @ 0x3E
  1337  005E                     	ds	1
  1338  005F                     eval_poly@res:	
  1339                           
  1340                           ; 3 bytes @ 0x3F
  1341  005F                     	ds	3
  1342  0062                     ?_ldexp:	
  1343  0062                     ?_log:	
  1344                           ; 3 bytes @ 0x42
  1345                           
  1346  0062                     ldexp@value:	
  1347                           ; 3 bytes @ 0x42
  1348                           
  1349  0062                     log@x:	
  1350                           ; 3 bytes @ 0x42
  1351                           
  1352                           
  1353                           ; 3 bytes @ 0x42
  1354  0062                     	ds	3
  1355  0065                     ??_log:	
  1356  0065                     ldexp@newexp:	
  1357                           ; 0 bytes @ 0x45
  1358                           
  1359                           
  1360                           ; 2 bytes @ 0x45
  1361  0065                     	ds	1
  1362  0066                     log@exponent:	
  1363                           
  1364                           ; 2 bytes @ 0x46
  1365  0066                     	ds	1
  1366  0067                     ??_ldexp:	
  1367                           
  1368                           ; 0 bytes @ 0x47
  1369  0067                     	ds	1
  1370  0068                     ?_log10:	
  1371  0068                     log10@x:	
  1372                           ; 3 bytes @ 0x48
  1373                           
  1374                           
  1375                           ; 3 bytes @ 0x48
  1376  0068                     	ds	1
  1377  0069                     _ldexp$492:	
  1378                           
  1379                           ; 3 bytes @ 0x49
  1380  0069                     	ds	2
  1381  006B                     ??_log10:	
  1382  006B                     _log10$833:	
  1383                           ; 0 bytes @ 0x4B
  1384                           
  1385                           
  1386                           ; 3 bytes @ 0x4B
  1387  006B                     	ds	3
  1388  006E                     ??_measure_inductance:	
  1389  006E                     ??___altoft:	
  1390                           ; 0 bytes @ 0x4E
  1391                           
  1392                           
  1393                           ; 0 bytes @ 0x4E
  1394  006E                     	ds	2
  1395                           
  1396                           	psect	maintext
  1397  0035                     __pmaintext:	
  1398 ;;
  1399 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  1400 ;;
  1401 ;; *************** function _main *****************
  1402 ;; Defined at:
  1403 ;;		line 116 in file "../../../src/LC-meter.c"
  1404 ;; Parameters:    Size  Location     Type
  1405 ;;		None
  1406 ;; Auto vars:     Size  Location     Type
  1407 ;;		None
  1408 ;; Return value:  Size  Location     Type
  1409 ;;		None               void
  1410 ;; Registers used:
  1411 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1412 ;; Tracked objects:
  1413 ;;		On entry : B00/0
  1414 ;;		On exit  : 0/0
  1415 ;;		Unchanged: 0/0
  1416 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1417 ;;      Params:         0       0       0       0       0
  1418 ;;      Locals:         0       0       0       0       0
  1419 ;;      Temps:          0       0       1       0       0
  1420 ;;      Totals:         0       0       1       0       0
  1421 ;;Total ram usage:        1 bytes
  1422 ;; Hardware stack levels required when called:    8
  1423 ;; This function calls:
  1424 ;;		_calibrate
  1425 ;;		_delay10ms
  1426 ;;		_indicator
  1427 ;;		_measure_capacitance
  1428 ;;		_measure_inductance
  1429 ;;		_ser_init
  1430 ;;		_ser_puts
  1431 ;;		_timer2_init
  1432 ;; This function is called by:
  1433 ;;		Startup code after reset
  1434 ;; This function uses a non-reentrant model
  1435 ;;
  1436                           
  1437                           
  1438                           ;psect for function _main
  1439  0035                     _main:	
  1440                           
  1441                           ;LC-meter.c: 117: bres = msecpart = msecs = seconds = 0;
  1442                           
  1443                           ;incstack = 0
  1444                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1445  0035  3000               	movlw	0
  1446  0036  1683               	bsf	3,5	;RP0=1, select bank3
  1447  0037  1703               	bsf	3,6	;RP1=1, select bank3
  1448  0038  00B7               	movwf	(_seconds+3)^(0+384)	;volatile
  1449  0039  3000               	movlw	0
  1450  003A  00B6               	movwf	(_seconds+2)^(0+384)	;volatile
  1451  003B  3000               	movlw	0
  1452  003C  00B5               	movwf	(_seconds+1)^(0+384)	;volatile
  1453  003D  3000               	movlw	0
  1454  003E  00B4               	movwf	_seconds^(0+384)	;volatile
  1455  003F  0837               	movf	(_seconds+3)^(0+384),w	;volatile
  1456  0040  00B3               	movwf	(_msecs+3)^(0+384)	;volatile
  1457  0041  0836               	movf	(_seconds+2)^(0+384),w	;volatile
  1458  0042  00B2               	movwf	(_msecs+2)^(0+384)	;volatile
  1459  0043  0835               	movf	(_seconds+1)^(0+384),w	;volatile
  1460  0044  00B1               	movwf	(_msecs+1)^(0+384)	;volatile
  1461  0045  0834               	movf	_seconds^(0+384),w	;volatile
  1462  0046  00B0               	movwf	_msecs^(0+384)	;volatile
  1463  0047  0831               	movf	(_msecs^(0+384)+1),w	;volatile
  1464  0048  00E4               	movwf	(_msecpart+1)^(0+384)	;volatile
  1465  0049  0830               	movf	_msecs^(0+384),w	;volatile
  1466  004A  00E3               	movwf	_msecpart^(0+384)	;volatile
  1467  004B  0864               	movf	(_msecpart+1)^(0+384),w	;volatile
  1468  004C  00E2               	movwf	(_bres+1)^(0+384)	;volatile
  1469  004D  0863               	movf	_msecpart^(0+384),w	;volatile
  1470  004E  00E1               	movwf	_bres^(0+384)	;volatile
  1471                           
  1472                           ;LC-meter.c: 119: CCal = 1000;
  1473  004F  3000               	movlw	0
  1474  0050  00DE               	movwf	_CCal^(0+384)
  1475  0051  307A               	movlw	122
  1476  0052  00DF               	movwf	(_CCal+1)^(0+384)
  1477  0053  3044               	movlw	68
  1478  0054  00E0               	movwf	(_CCal+2)^(0+384)
  1479                           
  1480                           ;LC-meter.c: 126: CMCON = 0b00000101;
  1481  0055  3005               	movlw	5
  1482  0056  1683               	bsf	3,5	;RP0=1, select bank1
  1483  0057  1303               	bcf	3,6	;RP1=0, select bank1
  1484  0058  009C               	movwf	28	;volatile
  1485                           
  1486                           ;LC-meter.c: 127: TRISA = 0b11001111;
  1487  0059  30CF               	movlw	207
  1488  005A  0085               	movwf	5	;volatile
  1489                           
  1490                           ;LC-meter.c: 129: T0CS = 1;
  1491  005B  1681               	bsf	1,5	;volatile
  1492                           
  1493                           ;LC-meter.c: 130: T0SE = 1;
  1494  005C  1601               	bsf	1,4	;volatile
  1495                           
  1496                           ;LC-meter.c: 141: nRBPU = 0;
  1497  005D  1381               	bcf	1,7	;volatile
  1498                           
  1499                           ;LC-meter.c: 144: TRISC3 = 0;
  1500  005E  1187               	bcf	7,3	;volatile
  1501                           
  1502                           ;LC-meter.c: 145: RC3 = ((1) == 0);
  1503  005F  1283               	bcf	3,5	;RP0=0, select bank0
  1504  0060  1303               	bcf	3,6	;RP1=0, select bank0
  1505  0061  1187               	bcf	7,3	;volatile
  1506                           
  1507                           ;LC-meter.c: 147: SSPEN = 0;
  1508  0062  1294               	bcf	20,5	;volatile
  1509                           
  1510                           ;LC-meter.c: 152: timer2_init(0b000 | 0x80);
  1511  0063  3080               	movlw	128
  1512  0064  160A  158A  25EB  120A  118A  	fcall	_timer2_init
  1513                           
  1514                           ;LC-meter.c: 157: TRISC1 = 0;
  1515  0069  1683               	bsf	3,5	;RP0=1, select bank1
  1516  006A  1303               	bcf	3,6	;RP1=0, select bank1
  1517  006B  1087               	bcf	7,1	;volatile
  1518                           
  1519                           ;LC-meter.c: 160: TRISC3 = 0;
  1520  006C  1187               	bcf	7,3	;volatile
  1521                           
  1522                           ;LC-meter.c: 162: TRISC0 = 1;
  1523  006D  1407               	bsf	7,0	;volatile
  1524                           
  1525                           ;LC-meter.c: 163: TRISC2 = 1;
  1526  006E  1507               	bsf	7,2	;volatile
  1527                           
  1528                           ;LC-meter.c: 173: TRISC4 = 1;
  1529  006F  1607               	bsf	7,4	;volatile
  1530                           
  1531                           ;LC-meter.c: 174: TRISC5 = 0;
  1532  0070  1287               	bcf	7,5	;volatile
  1533                           
  1534                           ;LC-meter.c: 176: RC5 = 0;
  1535  0071  1283               	bcf	3,5	;RP0=0, select bank0
  1536  0072  1303               	bcf	3,6	;RP1=0, select bank0
  1537  0073  1287               	bcf	7,5	;volatile
  1538                           
  1539                           ;LC-meter.c: 177: delay10ms(50);
  1540  0074  3032               	movlw	50
  1541  0075  00A6               	movwf	delay10ms@period_10ms
  1542  0076  3000               	movlw	0
  1543  0077  00A7               	movwf	delay10ms@period_10ms+1
  1544  0078  160A  158A  2790  120A  118A  	fcall	_delay10ms
  1545                           
  1546                           ;LC-meter.c: 178: RC5 = 1;
  1547  007D  1283               	bcf	3,5	;RP0=0, select bank0
  1548  007E  1303               	bcf	3,6	;RP1=0, select bank0
  1549  007F  1687               	bsf	7,5	;volatile
  1550                           
  1551                           ;LC-meter.c: 179: delay10ms(50);
  1552  0080  3032               	movlw	50
  1553  0081  00A6               	movwf	delay10ms@period_10ms
  1554  0082  3000               	movlw	0
  1555  0083  00A7               	movwf	delay10ms@period_10ms+1
  1556  0084  160A  158A  2790  120A  118A  	fcall	_delay10ms
  1557                           
  1558                           ;LC-meter.c: 180: RC5 = 0;
  1559  0089  1283               	bcf	3,5	;RP0=0, select bank0
  1560  008A  1303               	bcf	3,6	;RP1=0, select bank0
  1561  008B  1287               	bcf	7,5	;volatile
  1562                           
  1563                           ;LC-meter.c: 181: delay10ms(50);
  1564  008C  3032               	movlw	50
  1565  008D  00A6               	movwf	delay10ms@period_10ms
  1566  008E  3000               	movlw	0
  1567  008F  00A7               	movwf	delay10ms@period_10ms+1
  1568  0090  160A  158A  2790  120A  118A  	fcall	_delay10ms
  1569                           
  1570                           ;LC-meter.c: 182: RC5 = 1;
  1571  0095  1283               	bcf	3,5	;RP0=0, select bank0
  1572  0096  1303               	bcf	3,6	;RP1=0, select bank0
  1573  0097  1687               	bsf	7,5	;volatile
  1574                           
  1575                           ;LC-meter.c: 183: delay10ms(50);
  1576  0098  3032               	movlw	50
  1577  0099  00A6               	movwf	delay10ms@period_10ms
  1578  009A  3000               	movlw	0
  1579  009B  00A7               	movwf	delay10ms@period_10ms+1
  1580  009C  160A  158A  2790  120A  118A  	fcall	_delay10ms
  1581                           
  1582                           ;LC-meter.c: 184: RC5 = 0;
  1583  00A1  1283               	bcf	3,5	;RP0=0, select bank0
  1584  00A2  1303               	bcf	3,6	;RP1=0, select bank0
  1585  00A3  1287               	bcf	7,5	;volatile
  1586                           
  1587                           ;LC-meter.c: 187: ser_init();
  1588  00A4  160A  158A  240A  120A  118A  	fcall	_ser_init
  1589                           
  1590                           ;LC-meter.c: 192: TRISC &= ~0b01000000;
  1591  00A9  30BF               	movlw	191
  1592  00AA  1683               	bsf	3,5	;RP0=1, select bank1
  1593  00AB  1303               	bcf	3,6	;RP1=0, select bank1
  1594  00AC  00E1               	movwf	??_main^(0+128)
  1595  00AD  0861               	movf	??_main^(0+128),w
  1596  00AE  0587               	andwf	7,f	;volatile
  1597                           
  1598                           ;LC-meter.c: 194: PEIE = 1;
  1599  00AF  170B               	bsf	11,6	;volatile
  1600                           
  1601                           ;LC-meter.c: 195: GIE = 1;
  1602  00B0  178B               	bsf	11,7	;volatile
  1603                           
  1604                           ;LC-meter.c: 214: delay10ms(200);
  1605  00B1  30C8               	movlw	200
  1606  00B2  1283               	bcf	3,5	;RP0=0, select bank0
  1607  00B3  1303               	bcf	3,6	;RP1=0, select bank0
  1608  00B4  00A6               	movwf	delay10ms@period_10ms
  1609  00B5  3000               	movlw	0
  1610  00B6  00A7               	movwf	delay10ms@period_10ms+1
  1611  00B7  160A  158A  2790  120A  118A  	fcall	_delay10ms
  1612                           
  1613                           ;LC-meter.c: 217: calibrate();
  1614  00BC  160A  118A  21AF  120A  118A  	fcall	_calibrate
  1615  00C1                     l4456:	
  1616                           ;LC-meter.c: 228: for(;;) {
  1617                           
  1618                           
  1619                           ;LC-meter.c: 230: ser_puts("...\r\n");
  1620  00C1  3042               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1621  00C2  160A  158A  23E7  120A  118A  	fcall	_ser_puts
  1622                           
  1623                           ;LC-meter.c: 231: if(RC4)
  1624  00C7  1283               	bcf	3,5	;RP0=0, select bank0
  1625  00C8  1303               	bcf	3,6	;RP1=0, select bank0
  1626  00C9  1E07               	btfss	7,4	;volatile
  1627  00CA  28D1               	goto	l4462
  1628                           
  1629                           ;LC-meter.c: 232: measure_capacitance();
  1630  00CB  120A  158A  238E  120A  118A  	fcall	_measure_capacitance
  1631  00D0  28D6               	goto	l4464
  1632  00D1                     l4462:	
  1633                           
  1634                           ;LC-meter.c: 233: else
  1635                           ;LC-meter.c: 234: measure_inductance();
  1636  00D1  120A  118A  210F  120A  118A  	fcall	_measure_inductance
  1637  00D6                     l4464:	
  1638                           
  1639                           ;LC-meter.c: 236: indicator(1);
  1640  00D6  3001               	movlw	1
  1641  00D7  120A  118A  27FF  120A  118A  	fcall	_indicator
  1642                           
  1643                           ;LC-meter.c: 237: delay10ms(30);
  1644  00DC  301E               	movlw	30
  1645  00DD  1283               	bcf	3,5	;RP0=0, select bank0
  1646  00DE  1303               	bcf	3,6	;RP1=0, select bank0
  1647  00DF  00A6               	movwf	delay10ms@period_10ms
  1648  00E0  3000               	movlw	0
  1649  00E1  00A7               	movwf	delay10ms@period_10ms+1
  1650  00E2  160A  158A  2790  120A  118A  	fcall	_delay10ms
  1651                           
  1652                           ;LC-meter.c: 238: indicator(0);
  1653  00E7  3000               	movlw	0
  1654  00E8  120A  118A  27FF  120A  118A  	fcall	_indicator
  1655                           
  1656                           ;LC-meter.c: 239: delay10ms(20);
  1657  00ED  3014               	movlw	20
  1658  00EE  1283               	bcf	3,5	;RP0=0, select bank0
  1659  00EF  1303               	bcf	3,6	;RP1=0, select bank0
  1660  00F0  00A6               	movwf	delay10ms@period_10ms
  1661  00F1  3000               	movlw	0
  1662  00F2  00A7               	movwf	delay10ms@period_10ms+1
  1663  00F3  160A  158A  2790  120A  118A  	fcall	_delay10ms
  1664                           
  1665                           ;LC-meter.c: 240: }
  1666  00F8  28C1               	goto	l4456
  1667  00F9                     __end_of_main:	
  1668                           
  1669                           	psect	text1
  1670  1DEB                     __ptext1:	
  1671 ;; *************** function _timer2_init *****************
  1672 ;; Defined at:
  1673 ;;		line 81 in file "../../../lib/timer.c"
  1674 ;; Parameters:    Size  Location     Type
  1675 ;;  ps_mode         1    wreg     unsigned char 
  1676 ;; Auto vars:     Size  Location     Type
  1677 ;;  ps_mode         1    1[BANK0 ] unsigned char 
  1678 ;;  postscaler      1    3[BANK0 ] unsigned char 
  1679 ;;  ps              1    2[BANK0 ] unsigned char 
  1680 ;; Return value:  Size  Location     Type
  1681 ;;		None               void
  1682 ;; Registers used:
  1683 ;;		wreg, status,2, status,0
  1684 ;; Tracked objects:
  1685 ;;		On entry : 0/0
  1686 ;;		On exit  : 0/0
  1687 ;;		Unchanged: 0/0
  1688 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1689 ;;      Params:         0       0       0       0       0
  1690 ;;      Locals:         0       3       0       0       0
  1691 ;;      Temps:          0       1       0       0       0
  1692 ;;      Totals:         0       4       0       0       0
  1693 ;;Total ram usage:        4 bytes
  1694 ;; Hardware stack levels used:    1
  1695 ;; Hardware stack levels required when called:    1
  1696 ;; This function calls:
  1697 ;;		Nothing
  1698 ;; This function is called by:
  1699 ;;		_main
  1700 ;; This function uses a non-reentrant model
  1701 ;;
  1702                           
  1703                           
  1704                           ;psect for function _timer2_init
  1705  1DEB                     _timer2_init:	
  1706                           
  1707                           ;incstack = 0
  1708                           ; Regs used in _timer2_init: [wreg+status,2+status,0]
  1709                           ;timer2_init@ps_mode stored from wreg
  1710  1DEB  1283               	bcf	3,5	;RP0=0, select bank0
  1711  1DEC  1303               	bcf	3,6	;RP1=0, select bank0
  1712  1DED  00A1               	movwf	timer2_init@ps_mode
  1713                           
  1714                           ;timer.c: 82: unsigned char ps = ps_mode & 0b1111;
  1715  1DEE  0821               	movf	timer2_init@ps_mode,w
  1716  1DEF  390F               	andlw	15
  1717  1DF0  00A0               	movwf	??_timer2_init
  1718  1DF1  0820               	movf	??_timer2_init,w
  1719  1DF2  00A2               	movwf	timer2_init@ps
  1720                           
  1721                           ;timer.c: 83: unsigned char postscaler = 0;
  1722  1DF3  01A3               	clrf	timer2_init@postscaler
  1723                           
  1724                           ;timer.c: 86: TOUTPS0 = postscaler & 1;
  1725  1DF4  1C23               	btfss	timer2_init@postscaler,0
  1726  1DF5  2DFA               	goto	u5250
  1727  1DF6  1283               	bcf	3,5	;RP0=0, select bank0
  1728  1DF7  1303               	bcf	3,6	;RP1=0, select bank0
  1729  1DF8  1592               	bsf	18,3	;volatile
  1730  1DF9  2DFD               	goto	l4184
  1731  1DFA                     u5250:	
  1732  1DFA  1283               	bcf	3,5	;RP0=0, select bank0
  1733  1DFB  1303               	bcf	3,6	;RP1=0, select bank0
  1734  1DFC  1192               	bcf	18,3	;volatile
  1735  1DFD                     l4184:	
  1736                           
  1737                           ;timer.c: 87: TOUTPS1 = (postscaler >> 1) & 1;
  1738  1DFD  0823               	movf	timer2_init@postscaler,w
  1739  1DFE  00A0               	movwf	??_timer2_init
  1740  1DFF  3001               	movlw	1
  1741  1E00                     u5275:	
  1742  1E00  1003               	clrc
  1743  1E01  0CA0               	rrf	??_timer2_init,f
  1744  1E02  3EFF               	addlw	-1
  1745  1E03  1D03               	skipz
  1746  1E04  2E00               	goto	u5275
  1747  1E05  1C20               	btfss	??_timer2_init,0
  1748  1E06  2E0B               	goto	u5280
  1749  1E07  1283               	bcf	3,5	;RP0=0, select bank0
  1750  1E08  1303               	bcf	3,6	;RP1=0, select bank0
  1751  1E09  1612               	bsf	18,4	;volatile
  1752  1E0A  2E0E               	goto	l4186
  1753  1E0B                     u5280:	
  1754  1E0B  1283               	bcf	3,5	;RP0=0, select bank0
  1755  1E0C  1303               	bcf	3,6	;RP1=0, select bank0
  1756  1E0D  1212               	bcf	18,4	;volatile
  1757  1E0E                     l4186:	
  1758                           
  1759                           ;timer.c: 88: TOUTPS2 = (postscaler >> 2) & 1;
  1760  1E0E  0823               	movf	timer2_init@postscaler,w
  1761  1E0F  00A0               	movwf	??_timer2_init
  1762  1E10  3002               	movlw	2
  1763  1E11                     u5305:	
  1764  1E11  1003               	clrc
  1765  1E12  0CA0               	rrf	??_timer2_init,f
  1766  1E13  3EFF               	addlw	-1
  1767  1E14  1D03               	skipz
  1768  1E15  2E11               	goto	u5305
  1769  1E16  1C20               	btfss	??_timer2_init,0
  1770  1E17  2E1C               	goto	u5310
  1771  1E18  1283               	bcf	3,5	;RP0=0, select bank0
  1772  1E19  1303               	bcf	3,6	;RP1=0, select bank0
  1773  1E1A  1692               	bsf	18,5	;volatile
  1774  1E1B  2E1F               	goto	l4188
  1775  1E1C                     u5310:	
  1776  1E1C  1283               	bcf	3,5	;RP0=0, select bank0
  1777  1E1D  1303               	bcf	3,6	;RP1=0, select bank0
  1778  1E1E  1292               	bcf	18,5	;volatile
  1779  1E1F                     l4188:	
  1780                           
  1781                           ;timer.c: 90: T2CKPS0 = (ps >> 1) & 1;
  1782  1E1F  0822               	movf	timer2_init@ps,w
  1783  1E20  00A0               	movwf	??_timer2_init
  1784  1E21  3001               	movlw	1
  1785  1E22                     u5335:	
  1786  1E22  1003               	clrc
  1787  1E23  0CA0               	rrf	??_timer2_init,f
  1788  1E24  3EFF               	addlw	-1
  1789  1E25  1D03               	skipz
  1790  1E26  2E22               	goto	u5335
  1791  1E27  1C20               	btfss	??_timer2_init,0
  1792  1E28  2E2D               	goto	u5340
  1793  1E29  1283               	bcf	3,5	;RP0=0, select bank0
  1794  1E2A  1303               	bcf	3,6	;RP1=0, select bank0
  1795  1E2B  1412               	bsf	18,0	;volatile
  1796  1E2C  2E30               	goto	l4190
  1797  1E2D                     u5340:	
  1798  1E2D  1283               	bcf	3,5	;RP0=0, select bank0
  1799  1E2E  1303               	bcf	3,6	;RP1=0, select bank0
  1800  1E2F  1012               	bcf	18,0	;volatile
  1801  1E30                     l4190:	
  1802                           
  1803                           ;timer.c: 91: T2CKPS1 = (ps >> 2) & 1;
  1804  1E30  0822               	movf	timer2_init@ps,w
  1805  1E31  00A0               	movwf	??_timer2_init
  1806  1E32  3002               	movlw	2
  1807  1E33                     u5365:	
  1808  1E33  1003               	clrc
  1809  1E34  0CA0               	rrf	??_timer2_init,f
  1810  1E35  3EFF               	addlw	-1
  1811  1E36  1D03               	skipz
  1812  1E37  2E33               	goto	u5365
  1813  1E38  1C20               	btfss	??_timer2_init,0
  1814  1E39  2E3E               	goto	u5370
  1815  1E3A  1283               	bcf	3,5	;RP0=0, select bank0
  1816  1E3B  1303               	bcf	3,6	;RP1=0, select bank0
  1817  1E3C  1492               	bsf	18,1	;volatile
  1818  1E3D  2E41               	goto	l4192
  1819  1E3E                     u5370:	
  1820  1E3E  1283               	bcf	3,5	;RP0=0, select bank0
  1821  1E3F  1303               	bcf	3,6	;RP1=0, select bank0
  1822  1E40  1092               	bcf	18,1	;volatile
  1823  1E41                     l4192:	
  1824                           
  1825                           ;timer.c: 93: TMR2 = 0;
  1826  1E41  0191               	clrf	17	;volatile
  1827                           
  1828                           ;timer.c: 95: TMR2ON = 1;
  1829  1E42  1512               	bsf	18,2	;volatile
  1830                           
  1831                           ;timer.c: 97: TMR2IF = 0;
  1832  1E43  108C               	bcf	12,1	;volatile
  1833                           
  1834                           ;timer.c: 98: TMR2IE = !!(ps_mode & 0x80);
  1835  1E44  1FA1               	btfss	timer2_init@ps_mode,7
  1836  1E45  2E4A               	goto	u5390
  1837  1E46  1683               	bsf	3,5	;RP0=1, select bank1
  1838  1E47  1303               	bcf	3,6	;RP1=0, select bank1
  1839  1E48  148C               	bsf	12,1	;volatile
  1840  1E49  0008               	return
  1841  1E4A                     u5390:	
  1842  1E4A  1683               	bsf	3,5	;RP0=1, select bank1
  1843  1E4B  1303               	bcf	3,6	;RP1=0, select bank1
  1844  1E4C  108C               	bcf	12,1	;volatile
  1845  1E4D  0008               	return
  1846  1E4E                     __end_of_timer2_init:	
  1847                           
  1848                           	psect	text2
  1849  1C0A                     __ptext2:	
  1850 ;; *************** function _ser_init *****************
  1851 ;; Defined at:
  1852 ;;		line 126 in file "../../../lib/ser.c"
  1853 ;; Parameters:    Size  Location     Type
  1854 ;;		None
  1855 ;; Auto vars:     Size  Location     Type
  1856 ;;		None
  1857 ;; Return value:  Size  Location     Type
  1858 ;;		None               void
  1859 ;; Registers used:
  1860 ;;		wreg, status,2
  1861 ;; Tracked objects:
  1862 ;;		On entry : 0/0
  1863 ;;		On exit  : 0/0
  1864 ;;		Unchanged: 0/0
  1865 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1866 ;;      Params:         0       0       0       0       0
  1867 ;;      Locals:         0       0       0       0       0
  1868 ;;      Temps:          0       0       0       0       0
  1869 ;;      Totals:         0       0       0       0       0
  1870 ;;Total ram usage:        0 bytes
  1871 ;; Hardware stack levels used:    1
  1872 ;; Hardware stack levels required when called:    1
  1873 ;; This function calls:
  1874 ;;		Nothing
  1875 ;; This function is called by:
  1876 ;;		_main
  1877 ;; This function uses a non-reentrant model
  1878 ;;
  1879                           
  1880                           
  1881                           ;psect for function _ser_init
  1882  1C0A                     _ser_init:	
  1883                           
  1884                           ;ser.c: 129: TRISC6 = 1;
  1885                           
  1886                           ;incstack = 0
  1887                           ; Regs used in _ser_init: [wreg+status,2]
  1888  1C0A  1683               	bsf	3,5	;RP0=1, select bank1
  1889  1C0B  1303               	bcf	3,6	;RP1=0, select bank1
  1890  1C0C  1707               	bsf	7,6	;volatile
  1891                           
  1892                           ;ser.c: 130: RC7 = 1;
  1893  1C0D  1283               	bcf	3,5	;RP0=0, select bank0
  1894  1C0E  1303               	bcf	3,6	;RP1=0, select bank0
  1895  1C0F  1787               	bsf	7,7	;volatile
  1896                           
  1897                           ;ser.c: 132: BRGH = 1;
  1898  1C10  1683               	bsf	3,5	;RP0=1, select bank1
  1899  1C11  1303               	bcf	3,6	;RP1=0, select bank1
  1900  1C12  1518               	bsf	24,2	;volatile
  1901                           
  1902                           ;ser.c: 137: SPBRG = ser_brg;
  1903  1C13  1683               	bsf	3,5	;RP0=1, select bank3
  1904  1C14  1703               	bsf	3,6	;RP1=1, select bank3
  1905  1C15  0865               	movf	_ser_brg^(0+384),w
  1906  1C16  1683               	bsf	3,5	;RP0=1, select bank1
  1907  1C17  1303               	bcf	3,6	;RP1=0, select bank1
  1908  1C18  0099               	movwf	25	;volatile
  1909                           
  1910                           ;ser.c: 140: TX9 = 0;
  1911  1C19  1318               	bcf	24,6	;volatile
  1912                           
  1913                           ;ser.c: 141: RX9 = 0;
  1914  1C1A  1283               	bcf	3,5	;RP0=0, select bank0
  1915  1C1B  1303               	bcf	3,6	;RP1=0, select bank0
  1916  1C1C  1318               	bcf	24,6	;volatile
  1917                           
  1918                           ;ser.c: 143: SYNC = 0;
  1919  1C1D  1683               	bsf	3,5	;RP0=1, select bank1
  1920  1C1E  1303               	bcf	3,6	;RP1=0, select bank1
  1921  1C1F  1218               	bcf	24,4	;volatile
  1922                           
  1923                           ;ser.c: 144: SPEN = 1;
  1924  1C20  1283               	bcf	3,5	;RP0=0, select bank0
  1925  1C21  1303               	bcf	3,6	;RP1=0, select bank0
  1926  1C22  1798               	bsf	24,7	;volatile
  1927                           
  1928                           ;ser.c: 145: CREN = 1;
  1929  1C23  1618               	bsf	24,4	;volatile
  1930                           
  1931                           ;ser.c: 146: TXIE = 0;
  1932  1C24  1683               	bsf	3,5	;RP0=1, select bank1
  1933  1C25  1303               	bcf	3,6	;RP1=0, select bank1
  1934  1C26  120C               	bcf	12,4	;volatile
  1935                           
  1936                           ;ser.c: 148: TXEN = 1;
  1937  1C27  1698               	bsf	24,5	;volatile
  1938                           
  1939                           ;ser.c: 149: PEIE = 1;
  1940  1C28  170B               	bsf	11,6	;volatile
  1941                           
  1942                           ;ser.c: 151: rxiptr = rxoptr = txiptr = txoptr = 0;
  1943  1C29  01F8               	clrf	_txoptr	;volatile
  1944  1C2A  01F7               	clrf	_txiptr	;volatile
  1945  1C2B  01F6               	clrf	_rxoptr	;volatile
  1946  1C2C  01F5               	clrf	_rxiptr	;volatile
  1947  1C2D  0008               	return
  1948  1C2E                     __end_of_ser_init:	
  1949                           
  1950                           	psect	text3
  1951  010F                     __ptext3:	
  1952 ;; *************** function _measure_inductance *****************
  1953 ;; Defined at:
  1954 ;;		line 469 in file "../../../src/LC-meter.c"
  1955 ;; Parameters:    Size  Location     Type
  1956 ;;		None
  1957 ;; Auto vars:     Size  Location     Type
  1958 ;;  Lin             3   44[BANK1 ] unsigned char 
  1959 ;;  denominator     3   17[BANK1 ] unsigned char 
  1960 ;;  numerator       3   14[BANK1 ] unsigned char 
  1961 ;;  var             2   42[BANK1 ] unsigned short 
  1962 ;;  unit            1   32[BANK1 ] unsigned char 
  1963 ;; Return value:  Size  Location     Type
  1964 ;;		None               void
  1965 ;; Registers used:
  1966 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  1967 ;; Tracked objects:
  1968 ;;		On entry : 0/0
  1969 ;;		On exit  : 0/0
  1970 ;;		Unchanged: 0/0
  1971 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1972 ;;      Params:         0       0       0       0       0
  1973 ;;      Locals:         0       0      33       0       0
  1974 ;;      Temps:          0       1       0       0       0
  1975 ;;      Totals:         0       1      33       0       0
  1976 ;;Total ram usage:       34 bytes
  1977 ;; Hardware stack levels used:    1
  1978 ;; Hardware stack levels required when called:    3
  1979 ;; This function calls:
  1980 ;;		___ftadd
  1981 ;;		___ftdiv
  1982 ;;		___ftge
  1983 ;;		___ftmul
  1984 ;;		___ftneg
  1985 ;;		___fttol
  1986 ;;		___lwtoft
  1987 ;;		_measure_freq
  1988 ;;		_print_reading
  1989 ;;		_print_unit
  1990 ;; This function is called by:
  1991 ;;		_main
  1992 ;; This function uses a non-reentrant model
  1993 ;;
  1994                           
  1995                           
  1996                           ;psect for function _measure_inductance
  1997  010F                     _measure_inductance:	
  1998                           
  1999                           ;LC-meter.c: 470: unsigned char unit;
  2000                           ;LC-meter.c: 471: unsigned short int var;
  2001                           ;LC-meter.c: 473: double Lin, numerator, denominator;
  2002                           ;LC-meter.c: 479: var = measure_freq();
  2003                           
  2004                           ;incstack = 0
  2005                           ; Regs used in _measure_inductance: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  2006  010F  160A  158A  2722  120A  118A  	fcall	_measure_freq
  2007  0114  1283               	bcf	3,5	;RP0=0, select bank0
  2008  0115  1303               	bcf	3,6	;RP1=0, select bank0
  2009  0116  0821               	movf	?_measure_freq+1,w
  2010  0117  1683               	bsf	3,5	;RP0=1, select bank1
  2011  0118  1303               	bcf	3,6	;RP1=0, select bank1
  2012  0119  00CB               	movwf	(measure_inductance@var+1)^(0+128)
  2013  011A  1283               	bcf	3,5	;RP0=0, select bank0
  2014  011B  1303               	bcf	3,6	;RP1=0, select bank0
  2015  011C  0820               	movf	?_measure_freq,w
  2016  011D  1683               	bsf	3,5	;RP0=1, select bank1
  2017  011E  1303               	bcf	3,6	;RP1=0, select bank1
  2018  011F  00CA               	movwf	measure_inductance@var^(0+128)
  2019                           
  2020                           ;LC-meter.c: 481: F3 = (double)var;
  2021  0120  084B               	movf	(measure_inductance@var+1)^(0+128),w
  2022  0121  1283               	bcf	3,5	;RP0=0, select bank0
  2023  0122  1303               	bcf	3,6	;RP1=0, select bank0
  2024  0123  00AC               	movwf	___lwtoft@c+1
  2025  0124  1683               	bsf	3,5	;RP0=1, select bank1
  2026  0125  1303               	bcf	3,6	;RP1=0, select bank1
  2027  0126  084A               	movf	measure_inductance@var^(0+128),w
  2028  0127  1283               	bcf	3,5	;RP0=0, select bank0
  2029  0128  1303               	bcf	3,6	;RP1=0, select bank0
  2030  0129  00AB               	movwf	___lwtoft@c
  2031  012A  160A  158A  238B  120A  118A  	fcall	___lwtoft
  2032  012F  1283               	bcf	3,5	;RP0=0, select bank0
  2033  0130  1303               	bcf	3,6	;RP1=0, select bank0
  2034  0131  082B               	movf	?___lwtoft,w
  2035  0132  1683               	bsf	3,5	;RP0=1, select bank3
  2036  0133  1703               	bsf	3,6	;RP1=1, select bank3
  2037  0134  00C3               	movwf	_F3^(0+384)
  2038  0135  1283               	bcf	3,5	;RP0=0, select bank0
  2039  0136  1303               	bcf	3,6	;RP1=0, select bank0
  2040  0137  082C               	movf	?___lwtoft+1,w
  2041  0138  1683               	bsf	3,5	;RP0=1, select bank3
  2042  0139  1703               	bsf	3,6	;RP1=1, select bank3
  2043  013A  00C4               	movwf	(_F3+1)^(0+384)
  2044  013B  1283               	bcf	3,5	;RP0=0, select bank0
  2045  013C  1303               	bcf	3,6	;RP1=0, select bank0
  2046  013D  082D               	movf	?___lwtoft+2,w
  2047  013E  1683               	bsf	3,5	;RP0=1, select bank3
  2048  013F  1703               	bsf	3,6	;RP1=1, select bank3
  2049  0140  00C5               	movwf	(_F3+2)^(0+384)
  2050                           
  2051                           ;LC-meter.c: 482: if(F3 > F1)
  2052  0141  084B               	movf	_F1^(0+384),w
  2053  0142  1283               	bcf	3,5	;RP0=0, select bank0
  2054  0143  1303               	bcf	3,6	;RP1=0, select bank0
  2055  0144  00A0               	movwf	___ftge@ff1
  2056  0145  1683               	bsf	3,5	;RP0=1, select bank3
  2057  0146  1703               	bsf	3,6	;RP1=1, select bank3
  2058  0147  084C               	movf	(_F1+1)^(0+384),w
  2059  0148  1283               	bcf	3,5	;RP0=0, select bank0
  2060  0149  1303               	bcf	3,6	;RP1=0, select bank0
  2061  014A  00A1               	movwf	___ftge@ff1+1
  2062  014B  1683               	bsf	3,5	;RP0=1, select bank3
  2063  014C  1703               	bsf	3,6	;RP1=1, select bank3
  2064  014D  084D               	movf	(_F1+2)^(0+384),w
  2065  014E  1283               	bcf	3,5	;RP0=0, select bank0
  2066  014F  1303               	bcf	3,6	;RP1=0, select bank0
  2067  0150  00A2               	movwf	___ftge@ff1+2
  2068  0151  1683               	bsf	3,5	;RP0=1, select bank3
  2069  0152  1703               	bsf	3,6	;RP1=1, select bank3
  2070  0153  0843               	movf	_F3^(0+384),w
  2071  0154  1283               	bcf	3,5	;RP0=0, select bank0
  2072  0155  1303               	bcf	3,6	;RP1=0, select bank0
  2073  0156  00A3               	movwf	___ftge@ff2
  2074  0157  1683               	bsf	3,5	;RP0=1, select bank3
  2075  0158  1703               	bsf	3,6	;RP1=1, select bank3
  2076  0159  0844               	movf	(_F3+1)^(0+384),w
  2077  015A  1283               	bcf	3,5	;RP0=0, select bank0
  2078  015B  1303               	bcf	3,6	;RP1=0, select bank0
  2079  015C  00A4               	movwf	___ftge@ff2+1
  2080  015D  1683               	bsf	3,5	;RP0=1, select bank3
  2081  015E  1703               	bsf	3,6	;RP1=1, select bank3
  2082  015F  0845               	movf	(_F3+2)^(0+384),w
  2083  0160  1283               	bcf	3,5	;RP0=0, select bank0
  2084  0161  1303               	bcf	3,6	;RP1=0, select bank0
  2085  0162  00A5               	movwf	___ftge@ff2+2
  2086  0163  160A  158A  258C  120A  118A  	fcall	___ftge
  2087  0168  1803               	btfsc	3,0
  2088  0169  2972               	goto	l4344
  2089                           
  2090                           ;LC-meter.c: 483: F3 = F1;
  2091  016A  1683               	bsf	3,5	;RP0=1, select bank3
  2092  016B  1703               	bsf	3,6	;RP1=1, select bank3
  2093  016C  084B               	movf	_F1^(0+384),w
  2094  016D  00C3               	movwf	_F3^(0+384)
  2095  016E  084C               	movf	(_F1+1)^(0+384),w
  2096  016F  00C4               	movwf	(_F3+1)^(0+384)
  2097  0170  084D               	movf	(_F1+2)^(0+384),w
  2098  0171  00C5               	movwf	(_F3+2)^(0+384)
  2099  0172                     l4344:	
  2100                           
  2101                           ;LC-meter.c: 485: numerator = ((F1 * F1) - (F3 * F3)) * ((F1 * F1) - (F2 - F2)) * (100 *
      +                           100);
  2102  0172  1683               	bsf	3,5	;RP0=1, select bank3
  2103  0173  1703               	bsf	3,6	;RP1=1, select bank3
  2104  0174  0840               	movf	_F2^(0+384),w
  2105  0175  1283               	bcf	3,5	;RP0=0, select bank0
  2106  0176  1303               	bcf	3,6	;RP1=0, select bank0
  2107  0177  00C8               	movwf	___ftneg@f1
  2108  0178  1683               	bsf	3,5	;RP0=1, select bank3
  2109  0179  1703               	bsf	3,6	;RP1=1, select bank3
  2110  017A  0841               	movf	(_F2+1)^(0+384),w
  2111  017B  1283               	bcf	3,5	;RP0=0, select bank0
  2112  017C  1303               	bcf	3,6	;RP1=0, select bank0
  2113  017D  00C9               	movwf	___ftneg@f1+1
  2114  017E  1683               	bsf	3,5	;RP0=1, select bank3
  2115  017F  1703               	bsf	3,6	;RP1=1, select bank3
  2116  0180  0842               	movf	(_F2+2)^(0+384),w
  2117  0181  1283               	bcf	3,5	;RP0=0, select bank0
  2118  0182  1303               	bcf	3,6	;RP1=0, select bank0
  2119  0183  00CA               	movwf	___ftneg@f1+2
  2120  0184  160A  158A  236E  120A  118A  	fcall	___ftneg
  2121  0189  1283               	bcf	3,5	;RP0=0, select bank0
  2122  018A  1303               	bcf	3,6	;RP1=0, select bank0
  2123  018B  0848               	movf	?___ftneg,w
  2124  018C  00CE               	movwf	___ftadd@f2
  2125  018D  0849               	movf	?___ftneg+1,w
  2126  018E  00CF               	movwf	___ftadd@f2+1
  2127  018F  084A               	movf	?___ftneg+2,w
  2128  0190  00D0               	movwf	___ftadd@f2+2
  2129  0191  1683               	bsf	3,5	;RP0=1, select bank3
  2130  0192  1703               	bsf	3,6	;RP1=1, select bank3
  2131  0193  0840               	movf	_F2^(0+384),w
  2132  0194  1283               	bcf	3,5	;RP0=0, select bank0
  2133  0195  1303               	bcf	3,6	;RP1=0, select bank0
  2134  0196  00CB               	movwf	___ftadd@f1
  2135  0197  1683               	bsf	3,5	;RP0=1, select bank3
  2136  0198  1703               	bsf	3,6	;RP1=1, select bank3
  2137  0199  0841               	movf	(_F2+1)^(0+384),w
  2138  019A  1283               	bcf	3,5	;RP0=0, select bank0
  2139  019B  1303               	bcf	3,6	;RP1=0, select bank0
  2140  019C  00CC               	movwf	___ftadd@f1+1
  2141  019D  1683               	bsf	3,5	;RP0=1, select bank3
  2142  019E  1703               	bsf	3,6	;RP1=1, select bank3
  2143  019F  0842               	movf	(_F2+2)^(0+384),w
  2144  01A0  1283               	bcf	3,5	;RP0=0, select bank0
  2145  01A1  1303               	bcf	3,6	;RP1=0, select bank0
  2146  01A2  00CD               	movwf	___ftadd@f1+2
  2147  01A3  120A  158A  20A0  120A  118A  	fcall	___ftadd
  2148  01A8  1283               	bcf	3,5	;RP0=0, select bank0
  2149  01A9  1303               	bcf	3,6	;RP1=0, select bank0
  2150  01AA  084B               	movf	?___ftadd,w
  2151  01AB  1683               	bsf	3,5	;RP0=1, select bank1
  2152  01AC  1303               	bcf	3,6	;RP1=0, select bank1
  2153  01AD  00B4               	movwf	_measure_inductance$822^(0+128)
  2154  01AE  1283               	bcf	3,5	;RP0=0, select bank0
  2155  01AF  1303               	bcf	3,6	;RP1=0, select bank0
  2156  01B0  084C               	movf	?___ftadd+1,w
  2157  01B1  1683               	bsf	3,5	;RP0=1, select bank1
  2158  01B2  1303               	bcf	3,6	;RP1=0, select bank1
  2159  01B3  00B5               	movwf	(_measure_inductance$822+1)^(0+128)
  2160  01B4  1283               	bcf	3,5	;RP0=0, select bank0
  2161  01B5  1303               	bcf	3,6	;RP1=0, select bank0
  2162  01B6  084D               	movf	?___ftadd+2,w
  2163  01B7  1683               	bsf	3,5	;RP0=1, select bank1
  2164  01B8  1303               	bcf	3,6	;RP1=0, select bank1
  2165  01B9  00B6               	movwf	(_measure_inductance$822+2)^(0+128)
  2166                           
  2167                           ;LC-meter.c: 485: numerator = ((F1 * F1) - (F3 * F3)) * ((F1 * F1) - (F2 - F2)) * (100 *
      +                           100);
  2168  01BA  0834               	movf	_measure_inductance$822^(0+128),w
  2169  01BB  1283               	bcf	3,5	;RP0=0, select bank0
  2170  01BC  1303               	bcf	3,6	;RP1=0, select bank0
  2171  01BD  00C8               	movwf	___ftneg@f1
  2172  01BE  1683               	bsf	3,5	;RP0=1, select bank1
  2173  01BF  1303               	bcf	3,6	;RP1=0, select bank1
  2174  01C0  0835               	movf	(_measure_inductance$822+1)^(0+128),w
  2175  01C1  1283               	bcf	3,5	;RP0=0, select bank0
  2176  01C2  1303               	bcf	3,6	;RP1=0, select bank0
  2177  01C3  00C9               	movwf	___ftneg@f1+1
  2178  01C4  1683               	bsf	3,5	;RP0=1, select bank1
  2179  01C5  1303               	bcf	3,6	;RP1=0, select bank1
  2180  01C6  0836               	movf	(_measure_inductance$822+2)^(0+128),w
  2181  01C7  1283               	bcf	3,5	;RP0=0, select bank0
  2182  01C8  1303               	bcf	3,6	;RP1=0, select bank0
  2183  01C9  00CA               	movwf	___ftneg@f1+2
  2184  01CA  160A  158A  236E  120A  118A  	fcall	___ftneg
  2185  01CF  1283               	bcf	3,5	;RP0=0, select bank0
  2186  01D0  1303               	bcf	3,6	;RP1=0, select bank0
  2187  01D1  0848               	movf	?___ftneg,w
  2188  01D2  00CB               	movwf	___ftadd@f1
  2189  01D3  0849               	movf	?___ftneg+1,w
  2190  01D4  00CC               	movwf	___ftadd@f1+1
  2191  01D5  084A               	movf	?___ftneg+2,w
  2192  01D6  00CD               	movwf	___ftadd@f1+2
  2193  01D7  1683               	bsf	3,5	;RP0=1, select bank3
  2194  01D8  1703               	bsf	3,6	;RP1=1, select bank3
  2195  01D9  084B               	movf	_F1^(0+384),w
  2196  01DA  1283               	bcf	3,5	;RP0=0, select bank0
  2197  01DB  1303               	bcf	3,6	;RP1=0, select bank0
  2198  01DC  00B8               	movwf	___ftmul@f1
  2199  01DD  1683               	bsf	3,5	;RP0=1, select bank3
  2200  01DE  1703               	bsf	3,6	;RP1=1, select bank3
  2201  01DF  084C               	movf	(_F1+1)^(0+384),w
  2202  01E0  1283               	bcf	3,5	;RP0=0, select bank0
  2203  01E1  1303               	bcf	3,6	;RP1=0, select bank0
  2204  01E2  00B9               	movwf	___ftmul@f1+1
  2205  01E3  1683               	bsf	3,5	;RP0=1, select bank3
  2206  01E4  1703               	bsf	3,6	;RP1=1, select bank3
  2207  01E5  084D               	movf	(_F1+2)^(0+384),w
  2208  01E6  1283               	bcf	3,5	;RP0=0, select bank0
  2209  01E7  1303               	bcf	3,6	;RP1=0, select bank0
  2210  01E8  00BA               	movwf	___ftmul@f1+2
  2211  01E9  1683               	bsf	3,5	;RP0=1, select bank3
  2212  01EA  1703               	bsf	3,6	;RP1=1, select bank3
  2213  01EB  084B               	movf	_F1^(0+384),w
  2214  01EC  1283               	bcf	3,5	;RP0=0, select bank0
  2215  01ED  1303               	bcf	3,6	;RP1=0, select bank0
  2216  01EE  00BB               	movwf	___ftmul@f2
  2217  01EF  1683               	bsf	3,5	;RP0=1, select bank3
  2218  01F0  1703               	bsf	3,6	;RP1=1, select bank3
  2219  01F1  084C               	movf	(_F1+1)^(0+384),w
  2220  01F2  1283               	bcf	3,5	;RP0=0, select bank0
  2221  01F3  1303               	bcf	3,6	;RP1=0, select bank0
  2222  01F4  00BC               	movwf	___ftmul@f2+1
  2223  01F5  1683               	bsf	3,5	;RP0=1, select bank3
  2224  01F6  1703               	bsf	3,6	;RP1=1, select bank3
  2225  01F7  084D               	movf	(_F1+2)^(0+384),w
  2226  01F8  1283               	bcf	3,5	;RP0=0, select bank0
  2227  01F9  1303               	bcf	3,6	;RP1=0, select bank0
  2228  01FA  00BD               	movwf	___ftmul@f2+2
  2229  01FB  160A  118A  2493  120A  118A  	fcall	___ftmul
  2230  0200  1283               	bcf	3,5	;RP0=0, select bank0
  2231  0201  1303               	bcf	3,6	;RP1=0, select bank0
  2232  0202  0838               	movf	?___ftmul,w
  2233  0203  00CE               	movwf	___ftadd@f2
  2234  0204  0839               	movf	?___ftmul+1,w
  2235  0205  00CF               	movwf	___ftadd@f2+1
  2236  0206  083A               	movf	?___ftmul+2,w
  2237  0207  00D0               	movwf	___ftadd@f2+2
  2238  0208  120A  158A  20A0  120A  118A  	fcall	___ftadd
  2239  020D  1283               	bcf	3,5	;RP0=0, select bank0
  2240  020E  1303               	bcf	3,6	;RP1=0, select bank0
  2241  020F  084B               	movf	?___ftadd,w
  2242  0210  1683               	bsf	3,5	;RP0=1, select bank1
  2243  0211  1303               	bcf	3,6	;RP1=0, select bank1
  2244  0212  00C1               	movwf	_measure_inductance$823^(0+128)
  2245  0213  1283               	bcf	3,5	;RP0=0, select bank0
  2246  0214  1303               	bcf	3,6	;RP1=0, select bank0
  2247  0215  084C               	movf	?___ftadd+1,w
  2248  0216  1683               	bsf	3,5	;RP0=1, select bank1
  2249  0217  1303               	bcf	3,6	;RP1=0, select bank1
  2250  0218  00C2               	movwf	(_measure_inductance$823+1)^(0+128)
  2251  0219  1283               	bcf	3,5	;RP0=0, select bank0
  2252  021A  1303               	bcf	3,6	;RP1=0, select bank0
  2253  021B  084D               	movf	?___ftadd+2,w
  2254  021C  1683               	bsf	3,5	;RP0=1, select bank1
  2255  021D  1303               	bcf	3,6	;RP1=0, select bank1
  2256  021E  00C3               	movwf	(_measure_inductance$823+2)^(0+128)
  2257                           
  2258                           ;LC-meter.c: 485: numerator = ((F1 * F1) - (F3 * F3)) * ((F1 * F1) - (F2 - F2)) * (100 *
      +                           100);
  2259  021F  1683               	bsf	3,5	;RP0=1, select bank3
  2260  0220  1703               	bsf	3,6	;RP1=1, select bank3
  2261  0221  0843               	movf	_F3^(0+384),w
  2262  0222  1283               	bcf	3,5	;RP0=0, select bank0
  2263  0223  1303               	bcf	3,6	;RP1=0, select bank0
  2264  0224  00BB               	movwf	___ftmul@f2
  2265  0225  1683               	bsf	3,5	;RP0=1, select bank3
  2266  0226  1703               	bsf	3,6	;RP1=1, select bank3
  2267  0227  0844               	movf	(_F3+1)^(0+384),w
  2268  0228  1283               	bcf	3,5	;RP0=0, select bank0
  2269  0229  1303               	bcf	3,6	;RP1=0, select bank0
  2270  022A  00BC               	movwf	___ftmul@f2+1
  2271  022B  1683               	bsf	3,5	;RP0=1, select bank3
  2272  022C  1703               	bsf	3,6	;RP1=1, select bank3
  2273  022D  0845               	movf	(_F3+2)^(0+384),w
  2274  022E  1283               	bcf	3,5	;RP0=0, select bank0
  2275  022F  1303               	bcf	3,6	;RP1=0, select bank0
  2276  0230  00BD               	movwf	___ftmul@f2+2
  2277  0231  1683               	bsf	3,5	;RP0=1, select bank3
  2278  0232  1703               	bsf	3,6	;RP1=1, select bank3
  2279  0233  0843               	movf	_F3^(0+384),w
  2280  0234  1283               	bcf	3,5	;RP0=0, select bank0
  2281  0235  1303               	bcf	3,6	;RP1=0, select bank0
  2282  0236  00B8               	movwf	___ftmul@f1
  2283  0237  1683               	bsf	3,5	;RP0=1, select bank3
  2284  0238  1703               	bsf	3,6	;RP1=1, select bank3
  2285  0239  0844               	movf	(_F3+1)^(0+384),w
  2286  023A  1283               	bcf	3,5	;RP0=0, select bank0
  2287  023B  1303               	bcf	3,6	;RP1=0, select bank0
  2288  023C  00B9               	movwf	___ftmul@f1+1
  2289  023D  1683               	bsf	3,5	;RP0=1, select bank3
  2290  023E  1703               	bsf	3,6	;RP1=1, select bank3
  2291  023F  0845               	movf	(_F3+2)^(0+384),w
  2292  0240  1283               	bcf	3,5	;RP0=0, select bank0
  2293  0241  1303               	bcf	3,6	;RP1=0, select bank0
  2294  0242  00BA               	movwf	___ftmul@f1+2
  2295  0243  160A  118A  2493  120A  118A  	fcall	___ftmul
  2296  0248  1283               	bcf	3,5	;RP0=0, select bank0
  2297  0249  1303               	bcf	3,6	;RP1=0, select bank0
  2298  024A  0838               	movf	?___ftmul,w
  2299  024B  00C8               	movwf	___ftneg@f1
  2300  024C  0839               	movf	?___ftmul+1,w
  2301  024D  00C9               	movwf	___ftneg@f1+1
  2302  024E  083A               	movf	?___ftmul+2,w
  2303  024F  00CA               	movwf	___ftneg@f1+2
  2304  0250  160A  158A  236E  120A  118A  	fcall	___ftneg
  2305  0255  1283               	bcf	3,5	;RP0=0, select bank0
  2306  0256  1303               	bcf	3,6	;RP1=0, select bank0
  2307  0257  0848               	movf	?___ftneg,w
  2308  0258  00CB               	movwf	___ftadd@f1
  2309  0259  0849               	movf	?___ftneg+1,w
  2310  025A  00CC               	movwf	___ftadd@f1+1
  2311  025B  084A               	movf	?___ftneg+2,w
  2312  025C  00CD               	movwf	___ftadd@f1+2
  2313  025D  1683               	bsf	3,5	;RP0=1, select bank3
  2314  025E  1703               	bsf	3,6	;RP1=1, select bank3
  2315  025F  084B               	movf	_F1^(0+384),w
  2316  0260  1283               	bcf	3,5	;RP0=0, select bank0
  2317  0261  1303               	bcf	3,6	;RP1=0, select bank0
  2318  0262  00B8               	movwf	___ftmul@f1
  2319  0263  1683               	bsf	3,5	;RP0=1, select bank3
  2320  0264  1703               	bsf	3,6	;RP1=1, select bank3
  2321  0265  084C               	movf	(_F1+1)^(0+384),w
  2322  0266  1283               	bcf	3,5	;RP0=0, select bank0
  2323  0267  1303               	bcf	3,6	;RP1=0, select bank0
  2324  0268  00B9               	movwf	___ftmul@f1+1
  2325  0269  1683               	bsf	3,5	;RP0=1, select bank3
  2326  026A  1703               	bsf	3,6	;RP1=1, select bank3
  2327  026B  084D               	movf	(_F1+2)^(0+384),w
  2328  026C  1283               	bcf	3,5	;RP0=0, select bank0
  2329  026D  1303               	bcf	3,6	;RP1=0, select bank0
  2330  026E  00BA               	movwf	___ftmul@f1+2
  2331  026F  1683               	bsf	3,5	;RP0=1, select bank3
  2332  0270  1703               	bsf	3,6	;RP1=1, select bank3
  2333  0271  084B               	movf	_F1^(0+384),w
  2334  0272  1283               	bcf	3,5	;RP0=0, select bank0
  2335  0273  1303               	bcf	3,6	;RP1=0, select bank0
  2336  0274  00BB               	movwf	___ftmul@f2
  2337  0275  1683               	bsf	3,5	;RP0=1, select bank3
  2338  0276  1703               	bsf	3,6	;RP1=1, select bank3
  2339  0277  084C               	movf	(_F1+1)^(0+384),w
  2340  0278  1283               	bcf	3,5	;RP0=0, select bank0
  2341  0279  1303               	bcf	3,6	;RP1=0, select bank0
  2342  027A  00BC               	movwf	___ftmul@f2+1
  2343  027B  1683               	bsf	3,5	;RP0=1, select bank3
  2344  027C  1703               	bsf	3,6	;RP1=1, select bank3
  2345  027D  084D               	movf	(_F1+2)^(0+384),w
  2346  027E  1283               	bcf	3,5	;RP0=0, select bank0
  2347  027F  1303               	bcf	3,6	;RP1=0, select bank0
  2348  0280  00BD               	movwf	___ftmul@f2+2
  2349  0281  160A  118A  2493  120A  118A  	fcall	___ftmul
  2350  0286  1283               	bcf	3,5	;RP0=0, select bank0
  2351  0287  1303               	bcf	3,6	;RP1=0, select bank0
  2352  0288  0838               	movf	?___ftmul,w
  2353  0289  00CE               	movwf	___ftadd@f2
  2354  028A  0839               	movf	?___ftmul+1,w
  2355  028B  00CF               	movwf	___ftadd@f2+1
  2356  028C  083A               	movf	?___ftmul+2,w
  2357  028D  00D0               	movwf	___ftadd@f2+2
  2358  028E  120A  158A  20A0  120A  118A  	fcall	___ftadd
  2359  0293  1283               	bcf	3,5	;RP0=0, select bank0
  2360  0294  1303               	bcf	3,6	;RP1=0, select bank0
  2361  0295  084B               	movf	?___ftadd,w
  2362  0296  1683               	bsf	3,5	;RP0=1, select bank1
  2363  0297  1303               	bcf	3,6	;RP1=0, select bank1
  2364  0298  00C4               	movwf	_measure_inductance$824^(0+128)
  2365  0299  1283               	bcf	3,5	;RP0=0, select bank0
  2366  029A  1303               	bcf	3,6	;RP1=0, select bank0
  2367  029B  084C               	movf	?___ftadd+1,w
  2368  029C  1683               	bsf	3,5	;RP0=1, select bank1
  2369  029D  1303               	bcf	3,6	;RP1=0, select bank1
  2370  029E  00C5               	movwf	(_measure_inductance$824+1)^(0+128)
  2371  029F  1283               	bcf	3,5	;RP0=0, select bank0
  2372  02A0  1303               	bcf	3,6	;RP1=0, select bank0
  2373  02A1  084D               	movf	?___ftadd+2,w
  2374  02A2  1683               	bsf	3,5	;RP0=1, select bank1
  2375  02A3  1303               	bcf	3,6	;RP1=0, select bank1
  2376  02A4  00C6               	movwf	(_measure_inductance$824+2)^(0+128)
  2377                           
  2378                           ;LC-meter.c: 485: numerator = ((F1 * F1) - (F3 * F3)) * ((F1 * F1) - (F2 - F2)) * (100 *
      +                           100);
  2379  02A5  0841               	movf	_measure_inductance$823^(0+128),w
  2380  02A6  1283               	bcf	3,5	;RP0=0, select bank0
  2381  02A7  1303               	bcf	3,6	;RP1=0, select bank0
  2382  02A8  00B8               	movwf	___ftmul@f1
  2383  02A9  1683               	bsf	3,5	;RP0=1, select bank1
  2384  02AA  1303               	bcf	3,6	;RP1=0, select bank1
  2385  02AB  0842               	movf	(_measure_inductance$823+1)^(0+128),w
  2386  02AC  1283               	bcf	3,5	;RP0=0, select bank0
  2387  02AD  1303               	bcf	3,6	;RP1=0, select bank0
  2388  02AE  00B9               	movwf	___ftmul@f1+1
  2389  02AF  1683               	bsf	3,5	;RP0=1, select bank1
  2390  02B0  1303               	bcf	3,6	;RP1=0, select bank1
  2391  02B1  0843               	movf	(_measure_inductance$823+2)^(0+128),w
  2392  02B2  1283               	bcf	3,5	;RP0=0, select bank0
  2393  02B3  1303               	bcf	3,6	;RP1=0, select bank0
  2394  02B4  00BA               	movwf	___ftmul@f1+2
  2395  02B5  1683               	bsf	3,5	;RP0=1, select bank1
  2396  02B6  1303               	bcf	3,6	;RP1=0, select bank1
  2397  02B7  0844               	movf	_measure_inductance$824^(0+128),w
  2398  02B8  1283               	bcf	3,5	;RP0=0, select bank0
  2399  02B9  1303               	bcf	3,6	;RP1=0, select bank0
  2400  02BA  00BB               	movwf	___ftmul@f2
  2401  02BB  1683               	bsf	3,5	;RP0=1, select bank1
  2402  02BC  1303               	bcf	3,6	;RP1=0, select bank1
  2403  02BD  0845               	movf	(_measure_inductance$824+1)^(0+128),w
  2404  02BE  1283               	bcf	3,5	;RP0=0, select bank0
  2405  02BF  1303               	bcf	3,6	;RP1=0, select bank0
  2406  02C0  00BC               	movwf	___ftmul@f2+1
  2407  02C1  1683               	bsf	3,5	;RP0=1, select bank1
  2408  02C2  1303               	bcf	3,6	;RP1=0, select bank1
  2409  02C3  0846               	movf	(_measure_inductance$824+2)^(0+128),w
  2410  02C4  1283               	bcf	3,5	;RP0=0, select bank0
  2411  02C5  1303               	bcf	3,6	;RP1=0, select bank0
  2412  02C6  00BD               	movwf	___ftmul@f2+2
  2413  02C7  160A  118A  2493  120A  118A  	fcall	___ftmul
  2414  02CC  1283               	bcf	3,5	;RP0=0, select bank0
  2415  02CD  1303               	bcf	3,6	;RP1=0, select bank0
  2416  02CE  0838               	movf	?___ftmul,w
  2417  02CF  1683               	bsf	3,5	;RP0=1, select bank1
  2418  02D0  1303               	bcf	3,6	;RP1=0, select bank1
  2419  02D1  00C7               	movwf	_measure_inductance$825^(0+128)
  2420  02D2  1283               	bcf	3,5	;RP0=0, select bank0
  2421  02D3  1303               	bcf	3,6	;RP1=0, select bank0
  2422  02D4  0839               	movf	?___ftmul+1,w
  2423  02D5  1683               	bsf	3,5	;RP0=1, select bank1
  2424  02D6  1303               	bcf	3,6	;RP1=0, select bank1
  2425  02D7  00C8               	movwf	(_measure_inductance$825+1)^(0+128)
  2426  02D8  1283               	bcf	3,5	;RP0=0, select bank0
  2427  02D9  1303               	bcf	3,6	;RP1=0, select bank0
  2428  02DA  083A               	movf	?___ftmul+2,w
  2429  02DB  1683               	bsf	3,5	;RP0=1, select bank1
  2430  02DC  1303               	bcf	3,6	;RP1=0, select bank1
  2431  02DD  00C9               	movwf	(_measure_inductance$825+2)^(0+128)
  2432                           
  2433                           ;LC-meter.c: 485: numerator = ((F1 * F1) - (F3 * F3)) * ((F1 * F1) - (F2 - F2)) * (100 *
      +                           100);
  2434  02DE  3040               	movlw	64
  2435  02DF  1283               	bcf	3,5	;RP0=0, select bank0
  2436  02E0  1303               	bcf	3,6	;RP1=0, select bank0
  2437  02E1  00B8               	movwf	___ftmul@f1
  2438  02E2  301C               	movlw	28
  2439  02E3  00B9               	movwf	___ftmul@f1+1
  2440  02E4  3046               	movlw	70
  2441  02E5  00BA               	movwf	___ftmul@f1+2
  2442  02E6  1683               	bsf	3,5	;RP0=1, select bank1
  2443  02E7  1303               	bcf	3,6	;RP1=0, select bank1
  2444  02E8  0847               	movf	_measure_inductance$825^(0+128),w
  2445  02E9  1283               	bcf	3,5	;RP0=0, select bank0
  2446  02EA  1303               	bcf	3,6	;RP1=0, select bank0
  2447  02EB  00BB               	movwf	___ftmul@f2
  2448  02EC  1683               	bsf	3,5	;RP0=1, select bank1
  2449  02ED  1303               	bcf	3,6	;RP1=0, select bank1
  2450  02EE  0848               	movf	(_measure_inductance$825+1)^(0+128),w
  2451  02EF  1283               	bcf	3,5	;RP0=0, select bank0
  2452  02F0  1303               	bcf	3,6	;RP1=0, select bank0
  2453  02F1  00BC               	movwf	___ftmul@f2+1
  2454  02F2  1683               	bsf	3,5	;RP0=1, select bank1
  2455  02F3  1303               	bcf	3,6	;RP1=0, select bank1
  2456  02F4  0849               	movf	(_measure_inductance$825+2)^(0+128),w
  2457  02F5  1283               	bcf	3,5	;RP0=0, select bank0
  2458  02F6  1303               	bcf	3,6	;RP1=0, select bank0
  2459  02F7  00BD               	movwf	___ftmul@f2+2
  2460  02F8  160A  118A  2493  120A  118A  	fcall	___ftmul
  2461  02FD  1283               	bcf	3,5	;RP0=0, select bank0
  2462  02FE  1303               	bcf	3,6	;RP1=0, select bank0
  2463  02FF  0838               	movf	?___ftmul,w
  2464  0300  1683               	bsf	3,5	;RP0=1, select bank1
  2465  0301  1303               	bcf	3,6	;RP1=0, select bank1
  2466  0302  00AE               	movwf	measure_inductance@numerator^(0+128)
  2467  0303  1283               	bcf	3,5	;RP0=0, select bank0
  2468  0304  1303               	bcf	3,6	;RP1=0, select bank0
  2469  0305  0839               	movf	?___ftmul+1,w
  2470  0306  1683               	bsf	3,5	;RP0=1, select bank1
  2471  0307  1303               	bcf	3,6	;RP1=0, select bank1
  2472  0308  00AF               	movwf	(measure_inductance@numerator+1)^(0+128)
  2473  0309  1283               	bcf	3,5	;RP0=0, select bank0
  2474  030A  1303               	bcf	3,6	;RP1=0, select bank0
  2475  030B  083A               	movf	?___ftmul+2,w
  2476  030C  1683               	bsf	3,5	;RP0=1, select bank1
  2477  030D  1303               	bcf	3,6	;RP1=0, select bank1
  2478  030E  00B0               	movwf	(measure_inductance@numerator+2)^(0+128)
  2479                           
  2480                           ;LC-meter.c: 487: denominator = 4 * 3.14159265358979323846l * 3.14159265358979323846l * 
      +                          F1 * F1 * F2 * F2 * F3 * F3 * CCal;
  2481  030F  1683               	bsf	3,5	;RP0=1, select bank3
  2482  0310  1703               	bsf	3,6	;RP1=1, select bank3
  2483  0311  084B               	movf	_F1^(0+384),w
  2484  0312  1283               	bcf	3,5	;RP0=0, select bank0
  2485  0313  1303               	bcf	3,6	;RP1=0, select bank0
  2486  0314  00B8               	movwf	___ftmul@f1
  2487  0315  1683               	bsf	3,5	;RP0=1, select bank3
  2488  0316  1703               	bsf	3,6	;RP1=1, select bank3
  2489  0317  084C               	movf	(_F1+1)^(0+384),w
  2490  0318  1283               	bcf	3,5	;RP0=0, select bank0
  2491  0319  1303               	bcf	3,6	;RP1=0, select bank0
  2492  031A  00B9               	movwf	___ftmul@f1+1
  2493  031B  1683               	bsf	3,5	;RP0=1, select bank3
  2494  031C  1703               	bsf	3,6	;RP1=1, select bank3
  2495  031D  084D               	movf	(_F1+2)^(0+384),w
  2496  031E  1283               	bcf	3,5	;RP0=0, select bank0
  2497  031F  1303               	bcf	3,6	;RP1=0, select bank0
  2498  0320  00BA               	movwf	___ftmul@f1+2
  2499  0321  1683               	bsf	3,5	;RP0=1, select bank3
  2500  0322  1703               	bsf	3,6	;RP1=1, select bank3
  2501  0323  084B               	movf	_F1^(0+384),w
  2502  0324  1283               	bcf	3,5	;RP0=0, select bank0
  2503  0325  1303               	bcf	3,6	;RP1=0, select bank0
  2504  0326  00BB               	movwf	___ftmul@f2
  2505  0327  1683               	bsf	3,5	;RP0=1, select bank3
  2506  0328  1703               	bsf	3,6	;RP1=1, select bank3
  2507  0329  084C               	movf	(_F1+1)^(0+384),w
  2508  032A  1283               	bcf	3,5	;RP0=0, select bank0
  2509  032B  1303               	bcf	3,6	;RP1=0, select bank0
  2510  032C  00BC               	movwf	___ftmul@f2+1
  2511  032D  1683               	bsf	3,5	;RP0=1, select bank3
  2512  032E  1703               	bsf	3,6	;RP1=1, select bank3
  2513  032F  084D               	movf	(_F1+2)^(0+384),w
  2514  0330  1283               	bcf	3,5	;RP0=0, select bank0
  2515  0331  1303               	bcf	3,6	;RP1=0, select bank0
  2516  0332  00BD               	movwf	___ftmul@f2+2
  2517  0333  160A  118A  2493  120A  118A  	fcall	___ftmul
  2518  0338  1283               	bcf	3,5	;RP0=0, select bank0
  2519  0339  1303               	bcf	3,6	;RP1=0, select bank0
  2520  033A  0838               	movf	?___ftmul,w
  2521  033B  1683               	bsf	3,5	;RP0=1, select bank1
  2522  033C  1303               	bcf	3,6	;RP1=0, select bank1
  2523  033D  00B7               	movwf	_measure_inductance$826^(0+128)
  2524  033E  1283               	bcf	3,5	;RP0=0, select bank0
  2525  033F  1303               	bcf	3,6	;RP1=0, select bank0
  2526  0340  0839               	movf	?___ftmul+1,w
  2527  0341  1683               	bsf	3,5	;RP0=1, select bank1
  2528  0342  1303               	bcf	3,6	;RP1=0, select bank1
  2529  0343  00B8               	movwf	(_measure_inductance$826+1)^(0+128)
  2530  0344  1283               	bcf	3,5	;RP0=0, select bank0
  2531  0345  1303               	bcf	3,6	;RP1=0, select bank0
  2532  0346  083A               	movf	?___ftmul+2,w
  2533  0347  1683               	bsf	3,5	;RP0=1, select bank1
  2534  0348  1303               	bcf	3,6	;RP1=0, select bank1
  2535  0349  00B9               	movwf	(_measure_inductance$826+2)^(0+128)
  2536                           
  2537                           ;LC-meter.c: 487: denominator = 4 * 3.14159265358979323846l * 3.14159265358979323846l * 
      +                          F1 * F1 * F2 * F2 * F3 * F3 * CCal;
  2538  034A  1683               	bsf	3,5	;RP0=1, select bank3
  2539  034B  1703               	bsf	3,6	;RP1=1, select bank3
  2540  034C  0840               	movf	_F2^(0+384),w
  2541  034D  1283               	bcf	3,5	;RP0=0, select bank0
  2542  034E  1303               	bcf	3,6	;RP1=0, select bank0
  2543  034F  00B8               	movwf	___ftmul@f1
  2544  0350  1683               	bsf	3,5	;RP0=1, select bank3
  2545  0351  1703               	bsf	3,6	;RP1=1, select bank3
  2546  0352  0841               	movf	(_F2+1)^(0+384),w
  2547  0353  1283               	bcf	3,5	;RP0=0, select bank0
  2548  0354  1303               	bcf	3,6	;RP1=0, select bank0
  2549  0355  00B9               	movwf	___ftmul@f1+1
  2550  0356  1683               	bsf	3,5	;RP0=1, select bank3
  2551  0357  1703               	bsf	3,6	;RP1=1, select bank3
  2552  0358  0842               	movf	(_F2+2)^(0+384),w
  2553  0359  1283               	bcf	3,5	;RP0=0, select bank0
  2554  035A  1303               	bcf	3,6	;RP1=0, select bank0
  2555  035B  00BA               	movwf	___ftmul@f1+2
  2556  035C  1683               	bsf	3,5	;RP0=1, select bank1
  2557  035D  1303               	bcf	3,6	;RP1=0, select bank1
  2558  035E  0837               	movf	_measure_inductance$826^(0+128),w
  2559  035F  1283               	bcf	3,5	;RP0=0, select bank0
  2560  0360  1303               	bcf	3,6	;RP1=0, select bank0
  2561  0361  00BB               	movwf	___ftmul@f2
  2562  0362  1683               	bsf	3,5	;RP0=1, select bank1
  2563  0363  1303               	bcf	3,6	;RP1=0, select bank1
  2564  0364  0838               	movf	(_measure_inductance$826+1)^(0+128),w
  2565  0365  1283               	bcf	3,5	;RP0=0, select bank0
  2566  0366  1303               	bcf	3,6	;RP1=0, select bank0
  2567  0367  00BC               	movwf	___ftmul@f2+1
  2568  0368  1683               	bsf	3,5	;RP0=1, select bank1
  2569  0369  1303               	bcf	3,6	;RP1=0, select bank1
  2570  036A  0839               	movf	(_measure_inductance$826+2)^(0+128),w
  2571  036B  1283               	bcf	3,5	;RP0=0, select bank0
  2572  036C  1303               	bcf	3,6	;RP1=0, select bank0
  2573  036D  00BD               	movwf	___ftmul@f2+2
  2574  036E  160A  118A  2493  120A  118A  	fcall	___ftmul
  2575  0373  1283               	bcf	3,5	;RP0=0, select bank0
  2576  0374  1303               	bcf	3,6	;RP1=0, select bank0
  2577  0375  0838               	movf	?___ftmul,w
  2578  0376  1683               	bsf	3,5	;RP0=1, select bank1
  2579  0377  1303               	bcf	3,6	;RP1=0, select bank1
  2580  0378  00C1               	movwf	_measure_inductance$823^(0+128)
  2581  0379  1283               	bcf	3,5	;RP0=0, select bank0
  2582  037A  1303               	bcf	3,6	;RP1=0, select bank0
  2583  037B  0839               	movf	?___ftmul+1,w
  2584  037C  1683               	bsf	3,5	;RP0=1, select bank1
  2585  037D  1303               	bcf	3,6	;RP1=0, select bank1
  2586  037E  00C2               	movwf	(_measure_inductance$823+1)^(0+128)
  2587  037F  1283               	bcf	3,5	;RP0=0, select bank0
  2588  0380  1303               	bcf	3,6	;RP1=0, select bank0
  2589  0381  083A               	movf	?___ftmul+2,w
  2590  0382  1683               	bsf	3,5	;RP0=1, select bank1
  2591  0383  1303               	bcf	3,6	;RP1=0, select bank1
  2592  0384  00C3               	movwf	(_measure_inductance$823+2)^(0+128)
  2593                           
  2594                           ;LC-meter.c: 487: denominator = 4 * 3.14159265358979323846l * 3.14159265358979323846l * 
      +                          F1 * F1 * F2 * F2 * F3 * F3 * CCal;
  2595  0385  1683               	bsf	3,5	;RP0=1, select bank3
  2596  0386  1703               	bsf	3,6	;RP1=1, select bank3
  2597  0387  0840               	movf	_F2^(0+384),w
  2598  0388  1283               	bcf	3,5	;RP0=0, select bank0
  2599  0389  1303               	bcf	3,6	;RP1=0, select bank0
  2600  038A  00B8               	movwf	___ftmul@f1
  2601  038B  1683               	bsf	3,5	;RP0=1, select bank3
  2602  038C  1703               	bsf	3,6	;RP1=1, select bank3
  2603  038D  0841               	movf	(_F2+1)^(0+384),w
  2604  038E  1283               	bcf	3,5	;RP0=0, select bank0
  2605  038F  1303               	bcf	3,6	;RP1=0, select bank0
  2606  0390  00B9               	movwf	___ftmul@f1+1
  2607  0391  1683               	bsf	3,5	;RP0=1, select bank3
  2608  0392  1703               	bsf	3,6	;RP1=1, select bank3
  2609  0393  0842               	movf	(_F2+2)^(0+384),w
  2610  0394  1283               	bcf	3,5	;RP0=0, select bank0
  2611  0395  1303               	bcf	3,6	;RP1=0, select bank0
  2612  0396  00BA               	movwf	___ftmul@f1+2
  2613  0397  1683               	bsf	3,5	;RP0=1, select bank1
  2614  0398  1303               	bcf	3,6	;RP1=0, select bank1
  2615  0399  0841               	movf	_measure_inductance$823^(0+128),w
  2616  039A  1283               	bcf	3,5	;RP0=0, select bank0
  2617  039B  1303               	bcf	3,6	;RP1=0, select bank0
  2618  039C  00BB               	movwf	___ftmul@f2
  2619  039D  1683               	bsf	3,5	;RP0=1, select bank1
  2620  039E  1303               	bcf	3,6	;RP1=0, select bank1
  2621  039F  0842               	movf	(_measure_inductance$823+1)^(0+128),w
  2622  03A0  1283               	bcf	3,5	;RP0=0, select bank0
  2623  03A1  1303               	bcf	3,6	;RP1=0, select bank0
  2624  03A2  00BC               	movwf	___ftmul@f2+1
  2625  03A3  1683               	bsf	3,5	;RP0=1, select bank1
  2626  03A4  1303               	bcf	3,6	;RP1=0, select bank1
  2627  03A5  0843               	movf	(_measure_inductance$823+2)^(0+128),w
  2628  03A6  1283               	bcf	3,5	;RP0=0, select bank0
  2629  03A7  1303               	bcf	3,6	;RP1=0, select bank0
  2630  03A8  00BD               	movwf	___ftmul@f2+2
  2631  03A9  160A  118A  2493  120A  118A  	fcall	___ftmul
  2632  03AE  1283               	bcf	3,5	;RP0=0, select bank0
  2633  03AF  1303               	bcf	3,6	;RP1=0, select bank0
  2634  03B0  0838               	movf	?___ftmul,w
  2635  03B1  1683               	bsf	3,5	;RP0=1, select bank1
  2636  03B2  1303               	bcf	3,6	;RP1=0, select bank1
  2637  03B3  00C4               	movwf	_measure_inductance$824^(0+128)
  2638  03B4  1283               	bcf	3,5	;RP0=0, select bank0
  2639  03B5  1303               	bcf	3,6	;RP1=0, select bank0
  2640  03B6  0839               	movf	?___ftmul+1,w
  2641  03B7  1683               	bsf	3,5	;RP0=1, select bank1
  2642  03B8  1303               	bcf	3,6	;RP1=0, select bank1
  2643  03B9  00C5               	movwf	(_measure_inductance$824+1)^(0+128)
  2644  03BA  1283               	bcf	3,5	;RP0=0, select bank0
  2645  03BB  1303               	bcf	3,6	;RP1=0, select bank0
  2646  03BC  083A               	movf	?___ftmul+2,w
  2647  03BD  1683               	bsf	3,5	;RP0=1, select bank1
  2648  03BE  1303               	bcf	3,6	;RP1=0, select bank1
  2649  03BF  00C6               	movwf	(_measure_inductance$824+2)^(0+128)
  2650                           
  2651                           ;LC-meter.c: 487: denominator = 4 * 3.14159265358979323846l * 3.14159265358979323846l * 
      +                          F1 * F1 * F2 * F2 * F3 * F3 * CCal;
  2652  03C0  1683               	bsf	3,5	;RP0=1, select bank3
  2653  03C1  1703               	bsf	3,6	;RP1=1, select bank3
  2654  03C2  0843               	movf	_F3^(0+384),w
  2655  03C3  1283               	bcf	3,5	;RP0=0, select bank0
  2656  03C4  1303               	bcf	3,6	;RP1=0, select bank0
  2657  03C5  00B8               	movwf	___ftmul@f1
  2658  03C6  1683               	bsf	3,5	;RP0=1, select bank3
  2659  03C7  1703               	bsf	3,6	;RP1=1, select bank3
  2660  03C8  0844               	movf	(_F3+1)^(0+384),w
  2661  03C9  1283               	bcf	3,5	;RP0=0, select bank0
  2662  03CA  1303               	bcf	3,6	;RP1=0, select bank0
  2663  03CB  00B9               	movwf	___ftmul@f1+1
  2664  03CC  1683               	bsf	3,5	;RP0=1, select bank3
  2665  03CD  1703               	bsf	3,6	;RP1=1, select bank3
  2666  03CE  0845               	movf	(_F3+2)^(0+384),w
  2667  03CF  1283               	bcf	3,5	;RP0=0, select bank0
  2668  03D0  1303               	bcf	3,6	;RP1=0, select bank0
  2669  03D1  00BA               	movwf	___ftmul@f1+2
  2670  03D2  1683               	bsf	3,5	;RP0=1, select bank1
  2671  03D3  1303               	bcf	3,6	;RP1=0, select bank1
  2672  03D4  0844               	movf	_measure_inductance$824^(0+128),w
  2673  03D5  1283               	bcf	3,5	;RP0=0, select bank0
  2674  03D6  1303               	bcf	3,6	;RP1=0, select bank0
  2675  03D7  00BB               	movwf	___ftmul@f2
  2676  03D8  1683               	bsf	3,5	;RP0=1, select bank1
  2677  03D9  1303               	bcf	3,6	;RP1=0, select bank1
  2678  03DA  0845               	movf	(_measure_inductance$824+1)^(0+128),w
  2679  03DB  1283               	bcf	3,5	;RP0=0, select bank0
  2680  03DC  1303               	bcf	3,6	;RP1=0, select bank0
  2681  03DD  00BC               	movwf	___ftmul@f2+1
  2682  03DE  1683               	bsf	3,5	;RP0=1, select bank1
  2683  03DF  1303               	bcf	3,6	;RP1=0, select bank1
  2684  03E0  0846               	movf	(_measure_inductance$824+2)^(0+128),w
  2685  03E1  1283               	bcf	3,5	;RP0=0, select bank0
  2686  03E2  1303               	bcf	3,6	;RP1=0, select bank0
  2687  03E3  00BD               	movwf	___ftmul@f2+2
  2688  03E4  160A  118A  2493  120A  118A  	fcall	___ftmul
  2689  03E9  1283               	bcf	3,5	;RP0=0, select bank0
  2690  03EA  1303               	bcf	3,6	;RP1=0, select bank0
  2691  03EB  0838               	movf	?___ftmul,w
  2692  03EC  1683               	bsf	3,5	;RP0=1, select bank1
  2693  03ED  1303               	bcf	3,6	;RP1=0, select bank1
  2694  03EE  00C7               	movwf	_measure_inductance$825^(0+128)
  2695  03EF  1283               	bcf	3,5	;RP0=0, select bank0
  2696  03F0  1303               	bcf	3,6	;RP1=0, select bank0
  2697  03F1  0839               	movf	?___ftmul+1,w
  2698  03F2  1683               	bsf	3,5	;RP0=1, select bank1
  2699  03F3  1303               	bcf	3,6	;RP1=0, select bank1
  2700  03F4  00C8               	movwf	(_measure_inductance$825+1)^(0+128)
  2701  03F5  1283               	bcf	3,5	;RP0=0, select bank0
  2702  03F6  1303               	bcf	3,6	;RP1=0, select bank0
  2703  03F7  083A               	movf	?___ftmul+2,w
  2704  03F8  1683               	bsf	3,5	;RP0=1, select bank1
  2705  03F9  1303               	bcf	3,6	;RP1=0, select bank1
  2706  03FA  00C9               	movwf	(_measure_inductance$825+2)^(0+128)
  2707                           
  2708                           ;LC-meter.c: 487: denominator = 4 * 3.14159265358979323846l * 3.14159265358979323846l * 
      +                          F1 * F1 * F2 * F2 * F3 * F3 * CCal;
  2709  03FB  1683               	bsf	3,5	;RP0=1, select bank3
  2710  03FC  1703               	bsf	3,6	;RP1=1, select bank3
  2711  03FD  0843               	movf	_F3^(0+384),w
  2712  03FE  1283               	bcf	3,5	;RP0=0, select bank0
  2713  03FF  1303               	bcf	3,6	;RP1=0, select bank0
  2714  0400  00B8               	movwf	___ftmul@f1
  2715  0401  1683               	bsf	3,5	;RP0=1, select bank3
  2716  0402  1703               	bsf	3,6	;RP1=1, select bank3
  2717  0403  0844               	movf	(_F3+1)^(0+384),w
  2718  0404  1283               	bcf	3,5	;RP0=0, select bank0
  2719  0405  1303               	bcf	3,6	;RP1=0, select bank0
  2720  0406  00B9               	movwf	___ftmul@f1+1
  2721  0407  1683               	bsf	3,5	;RP0=1, select bank3
  2722  0408  1703               	bsf	3,6	;RP1=1, select bank3
  2723  0409  0845               	movf	(_F3+2)^(0+384),w
  2724  040A  1283               	bcf	3,5	;RP0=0, select bank0
  2725  040B  1303               	bcf	3,6	;RP1=0, select bank0
  2726  040C  00BA               	movwf	___ftmul@f1+2
  2727  040D  1683               	bsf	3,5	;RP0=1, select bank1
  2728  040E  1303               	bcf	3,6	;RP1=0, select bank1
  2729  040F  0847               	movf	_measure_inductance$825^(0+128),w
  2730  0410  1283               	bcf	3,5	;RP0=0, select bank0
  2731  0411  1303               	bcf	3,6	;RP1=0, select bank0
  2732  0412  00BB               	movwf	___ftmul@f2
  2733  0413  1683               	bsf	3,5	;RP0=1, select bank1
  2734  0414  1303               	bcf	3,6	;RP1=0, select bank1
  2735  0415  0848               	movf	(_measure_inductance$825+1)^(0+128),w
  2736  0416  1283               	bcf	3,5	;RP0=0, select bank0
  2737  0417  1303               	bcf	3,6	;RP1=0, select bank0
  2738  0418  00BC               	movwf	___ftmul@f2+1
  2739  0419  1683               	bsf	3,5	;RP0=1, select bank1
  2740  041A  1303               	bcf	3,6	;RP1=0, select bank1
  2741  041B  0849               	movf	(_measure_inductance$825+2)^(0+128),w
  2742  041C  1283               	bcf	3,5	;RP0=0, select bank0
  2743  041D  1303               	bcf	3,6	;RP1=0, select bank0
  2744  041E  00BD               	movwf	___ftmul@f2+2
  2745  041F  160A  118A  2493  120A  118A  	fcall	___ftmul
  2746  0424  1283               	bcf	3,5	;RP0=0, select bank0
  2747  0425  1303               	bcf	3,6	;RP1=0, select bank0
  2748  0426  0838               	movf	?___ftmul,w
  2749  0427  1683               	bsf	3,5	;RP0=1, select bank1
  2750  0428  1303               	bcf	3,6	;RP1=0, select bank1
  2751  0429  00BA               	movwf	_measure_inductance$827^(0+128)
  2752  042A  1283               	bcf	3,5	;RP0=0, select bank0
  2753  042B  1303               	bcf	3,6	;RP1=0, select bank0
  2754  042C  0839               	movf	?___ftmul+1,w
  2755  042D  1683               	bsf	3,5	;RP0=1, select bank1
  2756  042E  1303               	bcf	3,6	;RP1=0, select bank1
  2757  042F  00BB               	movwf	(_measure_inductance$827+1)^(0+128)
  2758  0430  1283               	bcf	3,5	;RP0=0, select bank0
  2759  0431  1303               	bcf	3,6	;RP1=0, select bank0
  2760  0432  083A               	movf	?___ftmul+2,w
  2761  0433  1683               	bsf	3,5	;RP0=1, select bank1
  2762  0434  1303               	bcf	3,6	;RP1=0, select bank1
  2763  0435  00BC               	movwf	(_measure_inductance$827+2)^(0+128)
  2764                           
  2765                           ;LC-meter.c: 487: denominator = 4 * 3.14159265358979323846l * 3.14159265358979323846l * 
      +                          F1 * F1 * F2 * F2 * F3 * F3 * CCal;
  2766  0436  1683               	bsf	3,5	;RP0=1, select bank3
  2767  0437  1703               	bsf	3,6	;RP1=1, select bank3
  2768  0438  085E               	movf	_CCal^(0+384),w
  2769  0439  1283               	bcf	3,5	;RP0=0, select bank0
  2770  043A  1303               	bcf	3,6	;RP1=0, select bank0
  2771  043B  00B8               	movwf	___ftmul@f1
  2772  043C  1683               	bsf	3,5	;RP0=1, select bank3
  2773  043D  1703               	bsf	3,6	;RP1=1, select bank3
  2774  043E  085F               	movf	(_CCal+1)^(0+384),w
  2775  043F  1283               	bcf	3,5	;RP0=0, select bank0
  2776  0440  1303               	bcf	3,6	;RP1=0, select bank0
  2777  0441  00B9               	movwf	___ftmul@f1+1
  2778  0442  1683               	bsf	3,5	;RP0=1, select bank3
  2779  0443  1703               	bsf	3,6	;RP1=1, select bank3
  2780  0444  0860               	movf	(_CCal+2)^(0+384),w
  2781  0445  1283               	bcf	3,5	;RP0=0, select bank0
  2782  0446  1303               	bcf	3,6	;RP1=0, select bank0
  2783  0447  00BA               	movwf	___ftmul@f1+2
  2784  0448  1683               	bsf	3,5	;RP0=1, select bank1
  2785  0449  1303               	bcf	3,6	;RP1=0, select bank1
  2786  044A  083A               	movf	_measure_inductance$827^(0+128),w
  2787  044B  1283               	bcf	3,5	;RP0=0, select bank0
  2788  044C  1303               	bcf	3,6	;RP1=0, select bank0
  2789  044D  00BB               	movwf	___ftmul@f2
  2790  044E  1683               	bsf	3,5	;RP0=1, select bank1
  2791  044F  1303               	bcf	3,6	;RP1=0, select bank1
  2792  0450  083B               	movf	(_measure_inductance$827+1)^(0+128),w
  2793  0451  1283               	bcf	3,5	;RP0=0, select bank0
  2794  0452  1303               	bcf	3,6	;RP1=0, select bank0
  2795  0453  00BC               	movwf	___ftmul@f2+1
  2796  0454  1683               	bsf	3,5	;RP0=1, select bank1
  2797  0455  1303               	bcf	3,6	;RP1=0, select bank1
  2798  0456  083C               	movf	(_measure_inductance$827+2)^(0+128),w
  2799  0457  1283               	bcf	3,5	;RP0=0, select bank0
  2800  0458  1303               	bcf	3,6	;RP1=0, select bank0
  2801  0459  00BD               	movwf	___ftmul@f2+2
  2802  045A  160A  118A  2493  120A  118A  	fcall	___ftmul
  2803  045F  1283               	bcf	3,5	;RP0=0, select bank0
  2804  0460  1303               	bcf	3,6	;RP1=0, select bank0
  2805  0461  0838               	movf	?___ftmul,w
  2806  0462  1683               	bsf	3,5	;RP0=1, select bank1
  2807  0463  1303               	bcf	3,6	;RP1=0, select bank1
  2808  0464  00BD               	movwf	_measure_inductance$828^(0+128)
  2809  0465  1283               	bcf	3,5	;RP0=0, select bank0
  2810  0466  1303               	bcf	3,6	;RP1=0, select bank0
  2811  0467  0839               	movf	?___ftmul+1,w
  2812  0468  1683               	bsf	3,5	;RP0=1, select bank1
  2813  0469  1303               	bcf	3,6	;RP1=0, select bank1
  2814  046A  00BE               	movwf	(_measure_inductance$828+1)^(0+128)
  2815  046B  1283               	bcf	3,5	;RP0=0, select bank0
  2816  046C  1303               	bcf	3,6	;RP1=0, select bank0
  2817  046D  083A               	movf	?___ftmul+2,w
  2818  046E  1683               	bsf	3,5	;RP0=1, select bank1
  2819  046F  1303               	bcf	3,6	;RP1=0, select bank1
  2820  0470  00BF               	movwf	(_measure_inductance$828+2)^(0+128)
  2821                           
  2822                           ;LC-meter.c: 487: denominator = 4 * 3.14159265358979323846l * 3.14159265358979323846l * 
      +                          F1 * F1 * F2 * F2 * F3 * F3 * CCal;
  2823  0471  30EA               	movlw	234
  2824  0472  1283               	bcf	3,5	;RP0=0, select bank0
  2825  0473  1303               	bcf	3,6	;RP1=0, select bank0
  2826  0474  00B8               	movwf	___ftmul@f1
  2827  0475  301D               	movlw	29
  2828  0476  00B9               	movwf	___ftmul@f1+1
  2829  0477  3042               	movlw	66
  2830  0478  00BA               	movwf	___ftmul@f1+2
  2831  0479  1683               	bsf	3,5	;RP0=1, select bank1
  2832  047A  1303               	bcf	3,6	;RP1=0, select bank1
  2833  047B  083D               	movf	_measure_inductance$828^(0+128),w
  2834  047C  1283               	bcf	3,5	;RP0=0, select bank0
  2835  047D  1303               	bcf	3,6	;RP1=0, select bank0
  2836  047E  00BB               	movwf	___ftmul@f2
  2837  047F  1683               	bsf	3,5	;RP0=1, select bank1
  2838  0480  1303               	bcf	3,6	;RP1=0, select bank1
  2839  0481  083E               	movf	(_measure_inductance$828+1)^(0+128),w
  2840  0482  1283               	bcf	3,5	;RP0=0, select bank0
  2841  0483  1303               	bcf	3,6	;RP1=0, select bank0
  2842  0484  00BC               	movwf	___ftmul@f2+1
  2843  0485  1683               	bsf	3,5	;RP0=1, select bank1
  2844  0486  1303               	bcf	3,6	;RP1=0, select bank1
  2845  0487  083F               	movf	(_measure_inductance$828+2)^(0+128),w
  2846  0488  1283               	bcf	3,5	;RP0=0, select bank0
  2847  0489  1303               	bcf	3,6	;RP1=0, select bank0
  2848  048A  00BD               	movwf	___ftmul@f2+2
  2849  048B  160A  118A  2493  120A  118A  	fcall	___ftmul
  2850  0490  1283               	bcf	3,5	;RP0=0, select bank0
  2851  0491  1303               	bcf	3,6	;RP1=0, select bank0
  2852  0492  0838               	movf	?___ftmul,w
  2853  0493  1683               	bsf	3,5	;RP0=1, select bank1
  2854  0494  1303               	bcf	3,6	;RP1=0, select bank1
  2855  0495  00B1               	movwf	measure_inductance@denominator^(0+128)
  2856  0496  1283               	bcf	3,5	;RP0=0, select bank0
  2857  0497  1303               	bcf	3,6	;RP1=0, select bank0
  2858  0498  0839               	movf	?___ftmul+1,w
  2859  0499  1683               	bsf	3,5	;RP0=1, select bank1
  2860  049A  1303               	bcf	3,6	;RP1=0, select bank1
  2861  049B  00B2               	movwf	(measure_inductance@denominator+1)^(0+128)
  2862  049C  1283               	bcf	3,5	;RP0=0, select bank0
  2863  049D  1303               	bcf	3,6	;RP1=0, select bank0
  2864  049E  083A               	movf	?___ftmul+2,w
  2865  049F  1683               	bsf	3,5	;RP0=1, select bank1
  2866  04A0  1303               	bcf	3,6	;RP1=0, select bank1
  2867  04A1  00B3               	movwf	(measure_inductance@denominator+2)^(0+128)
  2868                           
  2869                           ;LC-meter.c: 489: Lin = (numerator / denominator) * 1e+15l;
  2870  04A2  3060               	movlw	96
  2871  04A3  1283               	bcf	3,5	;RP0=0, select bank0
  2872  04A4  1303               	bcf	3,6	;RP1=0, select bank0
  2873  04A5  00B8               	movwf	___ftmul@f1
  2874  04A6  3063               	movlw	99
  2875  04A7  00B9               	movwf	___ftmul@f1+1
  2876  04A8  3058               	movlw	88
  2877  04A9  00BA               	movwf	___ftmul@f1+2
  2878  04AA  1683               	bsf	3,5	;RP0=1, select bank1
  2879  04AB  1303               	bcf	3,6	;RP1=0, select bank1
  2880  04AC  0831               	movf	measure_inductance@denominator^(0+128),w
  2881  04AD  1283               	bcf	3,5	;RP0=0, select bank0
  2882  04AE  1303               	bcf	3,6	;RP1=0, select bank0
  2883  04AF  00A8               	movwf	___ftdiv@f2
  2884  04B0  1683               	bsf	3,5	;RP0=1, select bank1
  2885  04B1  1303               	bcf	3,6	;RP1=0, select bank1
  2886  04B2  0832               	movf	(measure_inductance@denominator+1)^(0+128),w
  2887  04B3  1283               	bcf	3,5	;RP0=0, select bank0
  2888  04B4  1303               	bcf	3,6	;RP1=0, select bank0
  2889  04B5  00A9               	movwf	___ftdiv@f2+1
  2890  04B6  1683               	bsf	3,5	;RP0=1, select bank1
  2891  04B7  1303               	bcf	3,6	;RP1=0, select bank1
  2892  04B8  0833               	movf	(measure_inductance@denominator+2)^(0+128),w
  2893  04B9  1283               	bcf	3,5	;RP0=0, select bank0
  2894  04BA  1303               	bcf	3,6	;RP1=0, select bank0
  2895  04BB  00AA               	movwf	___ftdiv@f2+2
  2896  04BC  1683               	bsf	3,5	;RP0=1, select bank1
  2897  04BD  1303               	bcf	3,6	;RP1=0, select bank1
  2898  04BE  082E               	movf	measure_inductance@numerator^(0+128),w
  2899  04BF  1283               	bcf	3,5	;RP0=0, select bank0
  2900  04C0  1303               	bcf	3,6	;RP1=0, select bank0
  2901  04C1  00AB               	movwf	___ftdiv@f1
  2902  04C2  1683               	bsf	3,5	;RP0=1, select bank1
  2903  04C3  1303               	bcf	3,6	;RP1=0, select bank1
  2904  04C4  082F               	movf	(measure_inductance@numerator+1)^(0+128),w
  2905  04C5  1283               	bcf	3,5	;RP0=0, select bank0
  2906  04C6  1303               	bcf	3,6	;RP1=0, select bank0
  2907  04C7  00AC               	movwf	___ftdiv@f1+1
  2908  04C8  1683               	bsf	3,5	;RP0=1, select bank1
  2909  04C9  1303               	bcf	3,6	;RP1=0, select bank1
  2910  04CA  0830               	movf	(measure_inductance@numerator+2)^(0+128),w
  2911  04CB  1283               	bcf	3,5	;RP0=0, select bank0
  2912  04CC  1303               	bcf	3,6	;RP1=0, select bank0
  2913  04CD  00AD               	movwf	___ftdiv@f1+2
  2914  04CE  160A  118A  230D  120A  118A  	fcall	___ftdiv
  2915  04D3  1283               	bcf	3,5	;RP0=0, select bank0
  2916  04D4  1303               	bcf	3,6	;RP1=0, select bank0
  2917  04D5  0828               	movf	?___ftdiv,w
  2918  04D6  00BB               	movwf	___ftmul@f2
  2919  04D7  0829               	movf	?___ftdiv+1,w
  2920  04D8  00BC               	movwf	___ftmul@f2+1
  2921  04D9  082A               	movf	?___ftdiv+2,w
  2922  04DA  00BD               	movwf	___ftmul@f2+2
  2923  04DB  160A  118A  2493  120A  118A  	fcall	___ftmul
  2924  04E0  1283               	bcf	3,5	;RP0=0, select bank0
  2925  04E1  1303               	bcf	3,6	;RP1=0, select bank0
  2926  04E2  0838               	movf	?___ftmul,w
  2927  04E3  1683               	bsf	3,5	;RP0=1, select bank1
  2928  04E4  1303               	bcf	3,6	;RP1=0, select bank1
  2929  04E5  00CC               	movwf	measure_inductance@Lin^(0+128)
  2930  04E6  1283               	bcf	3,5	;RP0=0, select bank0
  2931  04E7  1303               	bcf	3,6	;RP1=0, select bank0
  2932  04E8  0839               	movf	?___ftmul+1,w
  2933  04E9  1683               	bsf	3,5	;RP0=1, select bank1
  2934  04EA  1303               	bcf	3,6	;RP1=0, select bank1
  2935  04EB  00CD               	movwf	(measure_inductance@Lin+1)^(0+128)
  2936  04EC  1283               	bcf	3,5	;RP0=0, select bank0
  2937  04ED  1303               	bcf	3,6	;RP1=0, select bank0
  2938  04EE  083A               	movf	?___ftmul+2,w
  2939  04EF  1683               	bsf	3,5	;RP0=1, select bank1
  2940  04F0  1303               	bcf	3,6	;RP1=0, select bank1
  2941  04F1  00CE               	movwf	(measure_inductance@Lin+2)^(0+128)
  2942                           
  2943                           ;LC-meter.c: 491: if(Lin > 999) {
  2944  04F2  30C0               	movlw	192
  2945  04F3  1283               	bcf	3,5	;RP0=0, select bank0
  2946  04F4  1303               	bcf	3,6	;RP1=0, select bank0
  2947  04F5  00A0               	movwf	___ftge@ff1
  2948  04F6  3079               	movlw	121
  2949  04F7  00A1               	movwf	___ftge@ff1+1
  2950  04F8  3044               	movlw	68
  2951  04F9  00A2               	movwf	___ftge@ff1+2
  2952  04FA  1683               	bsf	3,5	;RP0=1, select bank1
  2953  04FB  1303               	bcf	3,6	;RP1=0, select bank1
  2954  04FC  084C               	movf	measure_inductance@Lin^(0+128),w
  2955  04FD  1283               	bcf	3,5	;RP0=0, select bank0
  2956  04FE  1303               	bcf	3,6	;RP1=0, select bank0
  2957  04FF  00A3               	movwf	___ftge@ff2
  2958  0500  1683               	bsf	3,5	;RP0=1, select bank1
  2959  0501  1303               	bcf	3,6	;RP1=0, select bank1
  2960  0502  084D               	movf	(measure_inductance@Lin+1)^(0+128),w
  2961  0503  1283               	bcf	3,5	;RP0=0, select bank0
  2962  0504  1303               	bcf	3,6	;RP1=0, select bank0
  2963  0505  00A4               	movwf	___ftge@ff2+1
  2964  0506  1683               	bsf	3,5	;RP0=1, select bank1
  2965  0507  1303               	bcf	3,6	;RP1=0, select bank1
  2966  0508  084E               	movf	(measure_inductance@Lin+2)^(0+128),w
  2967  0509  1283               	bcf	3,5	;RP0=0, select bank0
  2968  050A  1303               	bcf	3,6	;RP1=0, select bank0
  2969  050B  00A5               	movwf	___ftge@ff2+2
  2970  050C  160A  158A  258C  120A  118A  	fcall	___ftge
  2971  0511  1803               	btfsc	3,0
  2972  0512  2DEF               	goto	l4388
  2973                           
  2974                           ;LC-meter.c: 492: if(Lin > (999e+03l)) {
  2975  0513  30E6               	movlw	230
  2976  0514  1283               	bcf	3,5	;RP0=0, select bank0
  2977  0515  1303               	bcf	3,6	;RP1=0, select bank0
  2978  0516  00A0               	movwf	___ftge@ff1
  2979  0517  3073               	movlw	115
  2980  0518  00A1               	movwf	___ftge@ff1+1
  2981  0519  3049               	movlw	73
  2982  051A  00A2               	movwf	___ftge@ff1+2
  2983  051B  1683               	bsf	3,5	;RP0=1, select bank1
  2984  051C  1303               	bcf	3,6	;RP1=0, select bank1
  2985  051D  084C               	movf	measure_inductance@Lin^(0+128),w
  2986  051E  1283               	bcf	3,5	;RP0=0, select bank0
  2987  051F  1303               	bcf	3,6	;RP1=0, select bank0
  2988  0520  00A3               	movwf	___ftge@ff2
  2989  0521  1683               	bsf	3,5	;RP0=1, select bank1
  2990  0522  1303               	bcf	3,6	;RP1=0, select bank1
  2991  0523  084D               	movf	(measure_inductance@Lin+1)^(0+128),w
  2992  0524  1283               	bcf	3,5	;RP0=0, select bank0
  2993  0525  1303               	bcf	3,6	;RP1=0, select bank0
  2994  0526  00A4               	movwf	___ftge@ff2+1
  2995  0527  1683               	bsf	3,5	;RP0=1, select bank1
  2996  0528  1303               	bcf	3,6	;RP1=0, select bank1
  2997  0529  084E               	movf	(measure_inductance@Lin+2)^(0+128),w
  2998  052A  1283               	bcf	3,5	;RP0=0, select bank0
  2999  052B  1303               	bcf	3,6	;RP1=0, select bank0
  3000  052C  00A5               	movwf	___ftge@ff2+2
  3001  052D  160A  158A  258C  120A  118A  	fcall	___ftge
  3002  0532  1803               	btfsc	3,0
  3003  0533  2DBC               	goto	l4384
  3004                           
  3005                           ;LC-meter.c: 493: if(Lin > (999e+06l)) {
  3006  0534  302E               	movlw	46
  3007  0535  1283               	bcf	3,5	;RP0=0, select bank0
  3008  0536  1303               	bcf	3,6	;RP1=0, select bank0
  3009  0537  00A0               	movwf	___ftge@ff1
  3010  0538  306E               	movlw	110
  3011  0539  00A1               	movwf	___ftge@ff1+1
  3012  053A  304E               	movlw	78
  3013  053B  00A2               	movwf	___ftge@ff1+2
  3014  053C  1683               	bsf	3,5	;RP0=1, select bank1
  3015  053D  1303               	bcf	3,6	;RP1=0, select bank1
  3016  053E  084C               	movf	measure_inductance@Lin^(0+128),w
  3017  053F  1283               	bcf	3,5	;RP0=0, select bank0
  3018  0540  1303               	bcf	3,6	;RP1=0, select bank0
  3019  0541  00A3               	movwf	___ftge@ff2
  3020  0542  1683               	bsf	3,5	;RP0=1, select bank1
  3021  0543  1303               	bcf	3,6	;RP1=0, select bank1
  3022  0544  084D               	movf	(measure_inductance@Lin+1)^(0+128),w
  3023  0545  1283               	bcf	3,5	;RP0=0, select bank0
  3024  0546  1303               	bcf	3,6	;RP1=0, select bank0
  3025  0547  00A4               	movwf	___ftge@ff2+1
  3026  0548  1683               	bsf	3,5	;RP0=1, select bank1
  3027  0549  1303               	bcf	3,6	;RP1=0, select bank1
  3028  054A  084E               	movf	(measure_inductance@Lin+2)^(0+128),w
  3029  054B  1283               	bcf	3,5	;RP0=0, select bank0
  3030  054C  1303               	bcf	3,6	;RP1=0, select bank0
  3031  054D  00A5               	movwf	___ftge@ff2+2
  3032  054E  160A  158A  258C  120A  118A  	fcall	___ftge
  3033  0553  1803               	btfsc	3,0
  3034  0554  2D88               	goto	l4380
  3035                           
  3036                           ;LC-meter.c: 494: Lin = Lin / (1e+09l);
  3037  0555  306B               	movlw	107
  3038  0556  1283               	bcf	3,5	;RP0=0, select bank0
  3039  0557  1303               	bcf	3,6	;RP1=0, select bank0
  3040  0558  00A8               	movwf	___ftdiv@f2
  3041  0559  306E               	movlw	110
  3042  055A  00A9               	movwf	___ftdiv@f2+1
  3043  055B  304E               	movlw	78
  3044  055C  00AA               	movwf	___ftdiv@f2+2
  3045  055D  1683               	bsf	3,5	;RP0=1, select bank1
  3046  055E  1303               	bcf	3,6	;RP1=0, select bank1
  3047  055F  084C               	movf	measure_inductance@Lin^(0+128),w
  3048  0560  1283               	bcf	3,5	;RP0=0, select bank0
  3049  0561  1303               	bcf	3,6	;RP1=0, select bank0
  3050  0562  00AB               	movwf	___ftdiv@f1
  3051  0563  1683               	bsf	3,5	;RP0=1, select bank1
  3052  0564  1303               	bcf	3,6	;RP1=0, select bank1
  3053  0565  084D               	movf	(measure_inductance@Lin+1)^(0+128),w
  3054  0566  1283               	bcf	3,5	;RP0=0, select bank0
  3055  0567  1303               	bcf	3,6	;RP1=0, select bank0
  3056  0568  00AC               	movwf	___ftdiv@f1+1
  3057  0569  1683               	bsf	3,5	;RP0=1, select bank1
  3058  056A  1303               	bcf	3,6	;RP1=0, select bank1
  3059  056B  084E               	movf	(measure_inductance@Lin+2)^(0+128),w
  3060  056C  1283               	bcf	3,5	;RP0=0, select bank0
  3061  056D  1303               	bcf	3,6	;RP1=0, select bank0
  3062  056E  00AD               	movwf	___ftdiv@f1+2
  3063  056F  160A  118A  230D  120A  118A  	fcall	___ftdiv
  3064  0574  1283               	bcf	3,5	;RP0=0, select bank0
  3065  0575  1303               	bcf	3,6	;RP1=0, select bank0
  3066  0576  0828               	movf	?___ftdiv,w
  3067  0577  1683               	bsf	3,5	;RP0=1, select bank1
  3068  0578  1303               	bcf	3,6	;RP1=0, select bank1
  3069  0579  00CC               	movwf	measure_inductance@Lin^(0+128)
  3070  057A  1283               	bcf	3,5	;RP0=0, select bank0
  3071  057B  1303               	bcf	3,6	;RP1=0, select bank0
  3072  057C  0829               	movf	?___ftdiv+1,w
  3073  057D  1683               	bsf	3,5	;RP0=1, select bank1
  3074  057E  1303               	bcf	3,6	;RP1=0, select bank1
  3075  057F  00CD               	movwf	(measure_inductance@Lin+1)^(0+128)
  3076  0580  1283               	bcf	3,5	;RP0=0, select bank0
  3077  0581  1303               	bcf	3,6	;RP1=0, select bank0
  3078  0582  082A               	movf	?___ftdiv+2,w
  3079  0583  1683               	bsf	3,5	;RP0=1, select bank1
  3080  0584  1303               	bcf	3,6	;RP1=0, select bank1
  3081  0585  00CE               	movwf	(measure_inductance@Lin+2)^(0+128)
  3082                           
  3083                           ;LC-meter.c: 495: unit = 0;
  3084  0586  01C0               	clrf	measure_inductance@unit^(0+128)
  3085                           
  3086                           ;LC-meter.c: 496: } else {
  3087  0587  2DF7               	goto	l4390
  3088  0588                     l4380:	
  3089                           
  3090                           ;LC-meter.c: 497: Lin = Lin / (1e+06l);
  3091  0588  3024               	movlw	36
  3092  0589  1283               	bcf	3,5	;RP0=0, select bank0
  3093  058A  1303               	bcf	3,6	;RP1=0, select bank0
  3094  058B  00A8               	movwf	___ftdiv@f2
  3095  058C  3074               	movlw	116
  3096  058D  00A9               	movwf	___ftdiv@f2+1
  3097  058E  3049               	movlw	73
  3098  058F  00AA               	movwf	___ftdiv@f2+2
  3099  0590  1683               	bsf	3,5	;RP0=1, select bank1
  3100  0591  1303               	bcf	3,6	;RP1=0, select bank1
  3101  0592  084C               	movf	measure_inductance@Lin^(0+128),w
  3102  0593  1283               	bcf	3,5	;RP0=0, select bank0
  3103  0594  1303               	bcf	3,6	;RP1=0, select bank0
  3104  0595  00AB               	movwf	___ftdiv@f1
  3105  0596  1683               	bsf	3,5	;RP0=1, select bank1
  3106  0597  1303               	bcf	3,6	;RP1=0, select bank1
  3107  0598  084D               	movf	(measure_inductance@Lin+1)^(0+128),w
  3108  0599  1283               	bcf	3,5	;RP0=0, select bank0
  3109  059A  1303               	bcf	3,6	;RP1=0, select bank0
  3110  059B  00AC               	movwf	___ftdiv@f1+1
  3111  059C  1683               	bsf	3,5	;RP0=1, select bank1
  3112  059D  1303               	bcf	3,6	;RP1=0, select bank1
  3113  059E  084E               	movf	(measure_inductance@Lin+2)^(0+128),w
  3114  059F  1283               	bcf	3,5	;RP0=0, select bank0
  3115  05A0  1303               	bcf	3,6	;RP1=0, select bank0
  3116  05A1  00AD               	movwf	___ftdiv@f1+2
  3117  05A2  160A  118A  230D  120A  118A  	fcall	___ftdiv
  3118  05A7  1283               	bcf	3,5	;RP0=0, select bank0
  3119  05A8  1303               	bcf	3,6	;RP1=0, select bank0
  3120  05A9  0828               	movf	?___ftdiv,w
  3121  05AA  1683               	bsf	3,5	;RP0=1, select bank1
  3122  05AB  1303               	bcf	3,6	;RP1=0, select bank1
  3123  05AC  00CC               	movwf	measure_inductance@Lin^(0+128)
  3124  05AD  1283               	bcf	3,5	;RP0=0, select bank0
  3125  05AE  1303               	bcf	3,6	;RP1=0, select bank0
  3126  05AF  0829               	movf	?___ftdiv+1,w
  3127  05B0  1683               	bsf	3,5	;RP0=1, select bank1
  3128  05B1  1303               	bcf	3,6	;RP1=0, select bank1
  3129  05B2  00CD               	movwf	(measure_inductance@Lin+1)^(0+128)
  3130  05B3  1283               	bcf	3,5	;RP0=0, select bank0
  3131  05B4  1303               	bcf	3,6	;RP1=0, select bank0
  3132  05B5  082A               	movf	?___ftdiv+2,w
  3133  05B6  1683               	bsf	3,5	;RP0=1, select bank1
  3134  05B7  1303               	bcf	3,6	;RP1=0, select bank1
  3135  05B8  00CE               	movwf	(measure_inductance@Lin+2)^(0+128)
  3136                           
  3137                           ;LC-meter.c: 498: unit = 1;
  3138  05B9  01C0               	clrf	measure_inductance@unit^(0+128)
  3139  05BA  0AC0               	incf	measure_inductance@unit^(0+128),f
  3140                           
  3141                           ;LC-meter.c: 499: }
  3142                           ;LC-meter.c: 500: } else {
  3143  05BB  2DF7               	goto	l4390
  3144  05BC                     l4384:	
  3145                           
  3146                           ;LC-meter.c: 501: Lin = Lin / 1e+03l;
  3147  05BC  3000               	movlw	0
  3148  05BD  1283               	bcf	3,5	;RP0=0, select bank0
  3149  05BE  1303               	bcf	3,6	;RP1=0, select bank0
  3150  05BF  00A8               	movwf	___ftdiv@f2
  3151  05C0  307A               	movlw	122
  3152  05C1  00A9               	movwf	___ftdiv@f2+1
  3153  05C2  3044               	movlw	68
  3154  05C3  00AA               	movwf	___ftdiv@f2+2
  3155  05C4  1683               	bsf	3,5	;RP0=1, select bank1
  3156  05C5  1303               	bcf	3,6	;RP1=0, select bank1
  3157  05C6  084C               	movf	measure_inductance@Lin^(0+128),w
  3158  05C7  1283               	bcf	3,5	;RP0=0, select bank0
  3159  05C8  1303               	bcf	3,6	;RP1=0, select bank0
  3160  05C9  00AB               	movwf	___ftdiv@f1
  3161  05CA  1683               	bsf	3,5	;RP0=1, select bank1
  3162  05CB  1303               	bcf	3,6	;RP1=0, select bank1
  3163  05CC  084D               	movf	(measure_inductance@Lin+1)^(0+128),w
  3164  05CD  1283               	bcf	3,5	;RP0=0, select bank0
  3165  05CE  1303               	bcf	3,6	;RP1=0, select bank0
  3166  05CF  00AC               	movwf	___ftdiv@f1+1
  3167  05D0  1683               	bsf	3,5	;RP0=1, select bank1
  3168  05D1  1303               	bcf	3,6	;RP1=0, select bank1
  3169  05D2  084E               	movf	(measure_inductance@Lin+2)^(0+128),w
  3170  05D3  1283               	bcf	3,5	;RP0=0, select bank0
  3171  05D4  1303               	bcf	3,6	;RP1=0, select bank0
  3172  05D5  00AD               	movwf	___ftdiv@f1+2
  3173  05D6  160A  118A  230D  120A  118A  	fcall	___ftdiv
  3174  05DB  1283               	bcf	3,5	;RP0=0, select bank0
  3175  05DC  1303               	bcf	3,6	;RP1=0, select bank0
  3176  05DD  0828               	movf	?___ftdiv,w
  3177  05DE  1683               	bsf	3,5	;RP0=1, select bank1
  3178  05DF  1303               	bcf	3,6	;RP1=0, select bank1
  3179  05E0  00CC               	movwf	measure_inductance@Lin^(0+128)
  3180  05E1  1283               	bcf	3,5	;RP0=0, select bank0
  3181  05E2  1303               	bcf	3,6	;RP1=0, select bank0
  3182  05E3  0829               	movf	?___ftdiv+1,w
  3183  05E4  1683               	bsf	3,5	;RP0=1, select bank1
  3184  05E5  1303               	bcf	3,6	;RP1=0, select bank1
  3185  05E6  00CD               	movwf	(measure_inductance@Lin+1)^(0+128)
  3186  05E7  1283               	bcf	3,5	;RP0=0, select bank0
  3187  05E8  1303               	bcf	3,6	;RP1=0, select bank0
  3188  05E9  082A               	movf	?___ftdiv+2,w
  3189  05EA  1683               	bsf	3,5	;RP0=1, select bank1
  3190  05EB  1303               	bcf	3,6	;RP1=0, select bank1
  3191  05EC  00CE               	movwf	(measure_inductance@Lin+2)^(0+128)
  3192                           
  3193                           ;LC-meter.c: 502: unit = 2;
  3194  05ED  3002               	movlw	2
  3195  05EE  2DF0               	goto	L1
  3196  05EF                     l4388:	
  3197                           ;LC-meter.c: 503: }
  3198                           ;LC-meter.c: 504: } else
  3199                           
  3200                           
  3201                           ;LC-meter.c: 505: unit = 3;
  3202  05EF  3003               	movlw	3
  3203  05F0                     L1:	
  3204  05F0  1283               	bcf	3,5	;RP0=0, select bank0
  3205  05F1  1303               	bcf	3,6	;RP1=0, select bank0
  3206  05F2  00EE               	movwf	??_measure_inductance
  3207  05F3  086E               	movf	??_measure_inductance,w
  3208  05F4  1683               	bsf	3,5	;RP0=1, select bank1
  3209  05F5  1303               	bcf	3,6	;RP1=0, select bank1
  3210  05F6  00C0               	movwf	measure_inductance@unit^(0+128)
  3211  05F7                     l4390:	
  3212                           
  3213                           ;LC-meter.c: 507: Lin = Lin * 100;
  3214  05F7  3000               	movlw	0
  3215  05F8  1283               	bcf	3,5	;RP0=0, select bank0
  3216  05F9  1303               	bcf	3,6	;RP1=0, select bank0
  3217  05FA  00B8               	movwf	___ftmul@f1
  3218  05FB  30C8               	movlw	200
  3219  05FC  00B9               	movwf	___ftmul@f1+1
  3220  05FD  3042               	movlw	66
  3221  05FE  00BA               	movwf	___ftmul@f1+2
  3222  05FF  1683               	bsf	3,5	;RP0=1, select bank1
  3223  0600  1303               	bcf	3,6	;RP1=0, select bank1
  3224  0601  084C               	movf	measure_inductance@Lin^(0+128),w
  3225  0602  1283               	bcf	3,5	;RP0=0, select bank0
  3226  0603  1303               	bcf	3,6	;RP1=0, select bank0
  3227  0604  00BB               	movwf	___ftmul@f2
  3228  0605  1683               	bsf	3,5	;RP0=1, select bank1
  3229  0606  1303               	bcf	3,6	;RP1=0, select bank1
  3230  0607  084D               	movf	(measure_inductance@Lin+1)^(0+128),w
  3231  0608  1283               	bcf	3,5	;RP0=0, select bank0
  3232  0609  1303               	bcf	3,6	;RP1=0, select bank0
  3233  060A  00BC               	movwf	___ftmul@f2+1
  3234  060B  1683               	bsf	3,5	;RP0=1, select bank1
  3235  060C  1303               	bcf	3,6	;RP1=0, select bank1
  3236  060D  084E               	movf	(measure_inductance@Lin+2)^(0+128),w
  3237  060E  1283               	bcf	3,5	;RP0=0, select bank0
  3238  060F  1303               	bcf	3,6	;RP1=0, select bank0
  3239  0610  00BD               	movwf	___ftmul@f2+2
  3240  0611  160A  118A  2493  120A  118A  	fcall	___ftmul
  3241  0616  1283               	bcf	3,5	;RP0=0, select bank0
  3242  0617  1303               	bcf	3,6	;RP1=0, select bank0
  3243  0618  0838               	movf	?___ftmul,w
  3244  0619  1683               	bsf	3,5	;RP0=1, select bank1
  3245  061A  1303               	bcf	3,6	;RP1=0, select bank1
  3246  061B  00CC               	movwf	measure_inductance@Lin^(0+128)
  3247  061C  1283               	bcf	3,5	;RP0=0, select bank0
  3248  061D  1303               	bcf	3,6	;RP1=0, select bank0
  3249  061E  0839               	movf	?___ftmul+1,w
  3250  061F  1683               	bsf	3,5	;RP0=1, select bank1
  3251  0620  1303               	bcf	3,6	;RP1=0, select bank1
  3252  0621  00CD               	movwf	(measure_inductance@Lin+1)^(0+128)
  3253  0622  1283               	bcf	3,5	;RP0=0, select bank0
  3254  0623  1303               	bcf	3,6	;RP1=0, select bank0
  3255  0624  083A               	movf	?___ftmul+2,w
  3256  0625  1683               	bsf	3,5	;RP0=1, select bank1
  3257  0626  1303               	bcf	3,6	;RP1=0, select bank1
  3258  0627  00CE               	movwf	(measure_inductance@Lin+2)^(0+128)
  3259                           
  3260                           ;LC-meter.c: 508: var = (unsigned short int)Lin;
  3261  0628  084C               	movf	measure_inductance@Lin^(0+128),w
  3262  0629  00A0               	movwf	___fttol@f1^(0+128)
  3263  062A  084D               	movf	(measure_inductance@Lin+1)^(0+128),w
  3264  062B  00A1               	movwf	(___fttol@f1+1)^(0+128)
  3265  062C  084E               	movf	(measure_inductance@Lin+2)^(0+128),w
  3266  062D  00A2               	movwf	(___fttol@f1+2)^(0+128)
  3267  062E  160A  118A  2121  120A  118A  	fcall	___fttol
  3268  0633  1683               	bsf	3,5	;RP0=1, select bank1
  3269  0634  1303               	bcf	3,6	;RP1=0, select bank1
  3270  0635  0821               	movf	(?___fttol^(0+128)+1),w
  3271  0636  00CB               	movwf	(measure_inductance@var+1)^(0+128)
  3272  0637  0820               	movf	?___fttol^(0+128),w
  3273  0638  00CA               	movwf	measure_inductance@var^(0+128)
  3274                           
  3275                           ;LC-meter.c: 510: print_reading(var);
  3276  0639  084B               	movf	(measure_inductance@var+1)^(0+128),w
  3277  063A  1283               	bcf	3,5	;RP0=0, select bank0
  3278  063B  1303               	bcf	3,6	;RP1=0, select bank0
  3279  063C  00A1               	movwf	print_reading@measurement+1
  3280  063D  1683               	bsf	3,5	;RP0=1, select bank1
  3281  063E  1303               	bcf	3,6	;RP1=0, select bank1
  3282  063F  084A               	movf	measure_inductance@var^(0+128),w
  3283  0640  1283               	bcf	3,5	;RP0=0, select bank0
  3284  0641  1303               	bcf	3,6	;RP1=0, select bank0
  3285  0642  00A0               	movwf	print_reading@measurement
  3286  0643  120A  118A  27FD  120A  118A  	fcall	_print_reading
  3287                           
  3288                           ;LC-meter.c: 511: print_unit(unit);
  3289  0648  1683               	bsf	3,5	;RP0=1, select bank1
  3290  0649  1303               	bcf	3,6	;RP1=0, select bank1
  3291  064A  0840               	movf	measure_inductance@unit^(0+128),w
  3292  064B  120A  118A  27FC   	fcall	_print_unit
  3293  064E  0008               	return
  3294  064F                     __end_of_measure_inductance:	
  3295                           
  3296                           	psect	text4
  3297  0B8E                     __ptext4:	
  3298 ;; *************** function _measure_capacitance *****************
  3299 ;; Defined at:
  3300 ;;		line 391 in file "../../../src/LC-meter.c"
  3301 ;; Parameters:    Size  Location     Type
  3302 ;;		None
  3303 ;; Auto vars:     Size  Location     Type
  3304 ;;  Cin             3   12[BANK2 ] unsigned char 
  3305 ;;  var             2   10[BANK2 ] unsigned short 
  3306 ;;  unit            1    9[BANK2 ] unsigned char 
  3307 ;; Return value:  Size  Location     Type
  3308 ;;		None               void
  3309 ;; Registers used:
  3310 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3311 ;; Tracked objects:
  3312 ;;		On entry : 0/0
  3313 ;;		On exit  : 0/0
  3314 ;;		Unchanged: 0/0
  3315 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3316 ;;      Params:         0       0       0       0       0
  3317 ;;      Locals:         0       0       0       0      15
  3318 ;;      Temps:          0       0       1       0       0
  3319 ;;      Totals:         0       0       1       0      15
  3320 ;;Total ram usage:       16 bytes
  3321 ;; Hardware stack levels used:    1
  3322 ;; Hardware stack levels required when called:    7
  3323 ;; This function calls:
  3324 ;;		___ftadd
  3325 ;;		___ftdiv
  3326 ;;		___ftge
  3327 ;;		___ftmul
  3328 ;;		___ftneg
  3329 ;;		___fttol
  3330 ;;		___lwtoft
  3331 ;;		_format_double
  3332 ;;		_format_xint32
  3333 ;;		_measure_freq
  3334 ;;		_print_reading
  3335 ;;		_print_unit
  3336 ;;		_ser_putch
  3337 ;;		_ser_puts
  3338 ;; This function is called by:
  3339 ;;		_main
  3340 ;; This function uses a non-reentrant model
  3341 ;;
  3342                           
  3343                           
  3344                           ;psect for function _measure_capacitance
  3345  0B8E                     _measure_capacitance:	
  3346                           
  3347                           ;LC-meter.c: 392: unsigned char unit;
  3348                           ;LC-meter.c: 393: unsigned short int var;
  3349                           ;LC-meter.c: 395: double Cin;
  3350                           ;LC-meter.c: 402: var = measure_freq();
  3351                           
  3352                           ;incstack = 0
  3353                           ; Regs used in _measure_capacitance: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack
      +                          ]
  3354  0B8E  160A  158A  2722  120A  158A  	fcall	_measure_freq
  3355  0B93  1283               	bcf	3,5	;RP0=0, select bank0
  3356  0B94  1303               	bcf	3,6	;RP1=0, select bank0
  3357  0B95  0821               	movf	?_measure_freq+1,w
  3358  0B96  1283               	bcf	3,5	;RP0=0, select bank2
  3359  0B97  1703               	bsf	3,6	;RP1=1, select bank2
  3360  0B98  009B               	movwf	(measure_capacitance@var+1)^(0+256)
  3361  0B99  1283               	bcf	3,5	;RP0=0, select bank0
  3362  0B9A  1303               	bcf	3,6	;RP1=0, select bank0
  3363  0B9B  0820               	movf	?_measure_freq,w
  3364  0B9C  1283               	bcf	3,5	;RP0=0, select bank2
  3365  0B9D  1703               	bsf	3,6	;RP1=1, select bank2
  3366  0B9E  009A               	movwf	measure_capacitance@var^(0+256)
  3367                           
  3368                           ;LC-meter.c: 404: F3 = (double)var;
  3369  0B9F  081B               	movf	(measure_capacitance@var+1)^(0+256),w
  3370  0BA0  1283               	bcf	3,5	;RP0=0, select bank0
  3371  0BA1  1303               	bcf	3,6	;RP1=0, select bank0
  3372  0BA2  00AC               	movwf	___lwtoft@c+1
  3373  0BA3  1283               	bcf	3,5	;RP0=0, select bank2
  3374  0BA4  1703               	bsf	3,6	;RP1=1, select bank2
  3375  0BA5  081A               	movf	measure_capacitance@var^(0+256),w
  3376  0BA6  1283               	bcf	3,5	;RP0=0, select bank0
  3377  0BA7  1303               	bcf	3,6	;RP1=0, select bank0
  3378  0BA8  00AB               	movwf	___lwtoft@c
  3379  0BA9  160A  158A  238B  120A  158A  	fcall	___lwtoft
  3380  0BAE  1283               	bcf	3,5	;RP0=0, select bank0
  3381  0BAF  1303               	bcf	3,6	;RP1=0, select bank0
  3382  0BB0  082B               	movf	?___lwtoft,w
  3383  0BB1  1683               	bsf	3,5	;RP0=1, select bank3
  3384  0BB2  1703               	bsf	3,6	;RP1=1, select bank3
  3385  0BB3  00C3               	movwf	_F3^(0+384)
  3386  0BB4  1283               	bcf	3,5	;RP0=0, select bank0
  3387  0BB5  1303               	bcf	3,6	;RP1=0, select bank0
  3388  0BB6  082C               	movf	?___lwtoft+1,w
  3389  0BB7  1683               	bsf	3,5	;RP0=1, select bank3
  3390  0BB8  1703               	bsf	3,6	;RP1=1, select bank3
  3391  0BB9  00C4               	movwf	(_F3+1)^(0+384)
  3392  0BBA  1283               	bcf	3,5	;RP0=0, select bank0
  3393  0BBB  1303               	bcf	3,6	;RP1=0, select bank0
  3394  0BBC  082D               	movf	?___lwtoft+2,w
  3395  0BBD  1683               	bsf	3,5	;RP0=1, select bank3
  3396  0BBE  1703               	bsf	3,6	;RP1=1, select bank3
  3397  0BBF  00C5               	movwf	(_F3+2)^(0+384)
  3398                           
  3399                           ;LC-meter.c: 406: putchar_ptr = &ser_putch;
  3400  0BC0  3004               	movlw	(low (fp__ser_putch-fpbase))& (0+255)
  3401  0BC1  1683               	bsf	3,5	;RP0=1, select bank1
  3402  0BC2  1303               	bcf	3,6	;RP1=0, select bank1
  3403  0BC3  00E0               	movwf	??_measure_capacitance^(0+128)
  3404  0BC4  0860               	movf	??_measure_capacitance^(0+128),w
  3405  0BC5  00F9               	movwf	_putchar_ptr
  3406                           
  3407                           ;LC-meter.c: 407: ser_puts("var=");
  3408  0BC6  305F               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  3409  0BC7  160A  158A  23E7  120A  158A  	fcall	_ser_puts
  3410                           
  3411                           ;LC-meter.c: 408: format_xint32( var);
  3412  0BCC  1283               	bcf	3,5	;RP0=0, select bank2
  3413  0BCD  1703               	bsf	3,6	;RP1=1, select bank2
  3414  0BCE  081A               	movf	measure_capacitance@var^(0+256),w
  3415  0BCF  1283               	bcf	3,5	;RP0=0, select bank0
  3416  0BD0  1303               	bcf	3,6	;RP1=0, select bank0
  3417  0BD1  00D4               	movwf	format_xint32@x
  3418  0BD2  1283               	bcf	3,5	;RP0=0, select bank2
  3419  0BD3  1703               	bsf	3,6	;RP1=1, select bank2
  3420  0BD4  081B               	movf	(measure_capacitance@var+1)^(0+256),w
  3421  0BD5  1283               	bcf	3,5	;RP0=0, select bank0
  3422  0BD6  1303               	bcf	3,6	;RP1=0, select bank0
  3423  0BD7  00D5               	movwf	format_xint32@x+1
  3424  0BD8  01D6               	clrf	format_xint32@x+2
  3425  0BD9  01D7               	clrf	format_xint32@x+3
  3426  0BDA  160A  158A  253E  120A  158A  	fcall	_format_xint32
  3427                           
  3428                           ;LC-meter.c: 409: ser_puts("\r\nF1=");
  3429  0BDF  3048               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
  3430  0BE0  160A  158A  23E7  120A  158A  	fcall	_ser_puts
  3431                           
  3432                           ;LC-meter.c: 410: format_double( F1);
  3433  0BE5  1683               	bsf	3,5	;RP0=1, select bank3
  3434  0BE6  1703               	bsf	3,6	;RP1=1, select bank3
  3435  0BE7  084B               	movf	_F1^(0+384),w
  3436  0BE8  1683               	bsf	3,5	;RP0=1, select bank1
  3437  0BE9  1303               	bcf	3,6	;RP1=0, select bank1
  3438  0BEA  00DC               	movwf	format_double@num^(0+128)
  3439  0BEB  1683               	bsf	3,5	;RP0=1, select bank3
  3440  0BEC  1703               	bsf	3,6	;RP1=1, select bank3
  3441  0BED  084C               	movf	(_F1+1)^(0+384),w
  3442  0BEE  1683               	bsf	3,5	;RP0=1, select bank1
  3443  0BEF  1303               	bcf	3,6	;RP1=0, select bank1
  3444  0BF0  00DD               	movwf	(format_double@num+1)^(0+128)
  3445  0BF1  1683               	bsf	3,5	;RP0=1, select bank3
  3446  0BF2  1703               	bsf	3,6	;RP1=1, select bank3
  3447  0BF3  084D               	movf	(_F1+2)^(0+384),w
  3448  0BF4  1683               	bsf	3,5	;RP0=1, select bank1
  3449  0BF5  1303               	bcf	3,6	;RP1=0, select bank1
  3450  0BF6  00DE               	movwf	(format_double@num+2)^(0+128)
  3451  0BF7  160A  118A  2643  120A  158A  	fcall	_format_double
  3452                           
  3453                           ;LC-meter.c: 411: ser_putch(' ');
  3454  0BFC  3020               	movlw	32
  3455  0BFD  1683               	bsf	3,5	;RP0=1, select bank1
  3456  0BFE  1303               	bcf	3,6	;RP1=0, select bank1
  3457  0BFF  00E0               	movwf	??_measure_capacitance^(0+128)
  3458  0C00  0860               	movf	??_measure_capacitance^(0+128),w
  3459  0C01  1283               	bcf	3,5	;RP0=0, select bank0
  3460  0C02  1303               	bcf	3,6	;RP1=0, select bank0
  3461  0C03  00A0               	movwf	ser_putch@c
  3462  0C04  160A  118A  2000  120A  158A  	fcall	_ser_putch
  3463                           
  3464                           ;LC-meter.c: 412: format_xint32( *(unsigned long int*)&F1);
  3465  0C09  30CB               	movlw	low (_F1| (0+256))
  3466  0C0A  0084               	movwf	4
  3467  0C0B  1783               	bsf	3,7	;select IRP bank3
  3468  0C0C  0800               	movf	0,w
  3469  0C0D  1283               	bcf	3,5	;RP0=0, select bank0
  3470  0C0E  1303               	bcf	3,6	;RP1=0, select bank0
  3471  0C0F  00D4               	movwf	format_xint32@x
  3472  0C10  0A84               	incf	4,f
  3473  0C11  0800               	movf	0,w
  3474  0C12  00D5               	movwf	format_xint32@x+1
  3475  0C13  0A84               	incf	4,f
  3476  0C14  0800               	movf	0,w
  3477  0C15  00D6               	movwf	format_xint32@x+2
  3478  0C16  0A84               	incf	4,f
  3479  0C17  0800               	movf	0,w
  3480  0C18  00D7               	movwf	format_xint32@x+3
  3481  0C19  160A  158A  253E  120A  158A  	fcall	_format_xint32
  3482                           
  3483                           ;LC-meter.c: 413: ser_puts("\r\nF2=");
  3484  0C1E  304E               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
  3485  0C1F  160A  158A  23E7  120A  158A  	fcall	_ser_puts
  3486                           
  3487                           ;LC-meter.c: 414: format_double( F2);
  3488  0C24  1683               	bsf	3,5	;RP0=1, select bank3
  3489  0C25  1703               	bsf	3,6	;RP1=1, select bank3
  3490  0C26  0840               	movf	_F2^(0+384),w
  3491  0C27  1683               	bsf	3,5	;RP0=1, select bank1
  3492  0C28  1303               	bcf	3,6	;RP1=0, select bank1
  3493  0C29  00DC               	movwf	format_double@num^(0+128)
  3494  0C2A  1683               	bsf	3,5	;RP0=1, select bank3
  3495  0C2B  1703               	bsf	3,6	;RP1=1, select bank3
  3496  0C2C  0841               	movf	(_F2+1)^(0+384),w
  3497  0C2D  1683               	bsf	3,5	;RP0=1, select bank1
  3498  0C2E  1303               	bcf	3,6	;RP1=0, select bank1
  3499  0C2F  00DD               	movwf	(format_double@num+1)^(0+128)
  3500  0C30  1683               	bsf	3,5	;RP0=1, select bank3
  3501  0C31  1703               	bsf	3,6	;RP1=1, select bank3
  3502  0C32  0842               	movf	(_F2+2)^(0+384),w
  3503  0C33  1683               	bsf	3,5	;RP0=1, select bank1
  3504  0C34  1303               	bcf	3,6	;RP1=0, select bank1
  3505  0C35  00DE               	movwf	(format_double@num+2)^(0+128)
  3506  0C36  160A  118A  2643  120A  158A  	fcall	_format_double
  3507                           
  3508                           ;LC-meter.c: 415: ser_putch(' ');
  3509  0C3B  3020               	movlw	32
  3510  0C3C  1683               	bsf	3,5	;RP0=1, select bank1
  3511  0C3D  1303               	bcf	3,6	;RP1=0, select bank1
  3512  0C3E  00E0               	movwf	??_measure_capacitance^(0+128)
  3513  0C3F  0860               	movf	??_measure_capacitance^(0+128),w
  3514  0C40  1283               	bcf	3,5	;RP0=0, select bank0
  3515  0C41  1303               	bcf	3,6	;RP1=0, select bank0
  3516  0C42  00A0               	movwf	ser_putch@c
  3517  0C43  160A  118A  2000  120A  158A  	fcall	_ser_putch
  3518                           
  3519                           ;LC-meter.c: 416: format_xint32( *(unsigned long int*)&F2);
  3520  0C48  30C0               	movlw	low (_F2| (0+256))
  3521  0C49  0084               	movwf	4
  3522  0C4A  1783               	bsf	3,7	;select IRP bank3
  3523  0C4B  0800               	movf	0,w
  3524  0C4C  1283               	bcf	3,5	;RP0=0, select bank0
  3525  0C4D  1303               	bcf	3,6	;RP1=0, select bank0
  3526  0C4E  00D4               	movwf	format_xint32@x
  3527  0C4F  0A84               	incf	4,f
  3528  0C50  0800               	movf	0,w
  3529  0C51  00D5               	movwf	format_xint32@x+1
  3530  0C52  0A84               	incf	4,f
  3531  0C53  0800               	movf	0,w
  3532  0C54  00D6               	movwf	format_xint32@x+2
  3533  0C55  0A84               	incf	4,f
  3534  0C56  0800               	movf	0,w
  3535  0C57  00D7               	movwf	format_xint32@x+3
  3536  0C58  160A  158A  253E  120A  158A  	fcall	_format_xint32
  3537                           
  3538                           ;LC-meter.c: 417: ser_puts("\r\nF3=");
  3539  0C5D  3054               	movlw	(low ((STR_7-__stringbase)| (0+32768)))& (0+255)
  3540  0C5E  160A  158A  23E7  120A  158A  	fcall	_ser_puts
  3541                           
  3542                           ;LC-meter.c: 418: format_double( F3);
  3543  0C63  1683               	bsf	3,5	;RP0=1, select bank3
  3544  0C64  1703               	bsf	3,6	;RP1=1, select bank3
  3545  0C65  0843               	movf	_F3^(0+384),w
  3546  0C66  1683               	bsf	3,5	;RP0=1, select bank1
  3547  0C67  1303               	bcf	3,6	;RP1=0, select bank1
  3548  0C68  00DC               	movwf	format_double@num^(0+128)
  3549  0C69  1683               	bsf	3,5	;RP0=1, select bank3
  3550  0C6A  1703               	bsf	3,6	;RP1=1, select bank3
  3551  0C6B  0844               	movf	(_F3+1)^(0+384),w
  3552  0C6C  1683               	bsf	3,5	;RP0=1, select bank1
  3553  0C6D  1303               	bcf	3,6	;RP1=0, select bank1
  3554  0C6E  00DD               	movwf	(format_double@num+1)^(0+128)
  3555  0C6F  1683               	bsf	3,5	;RP0=1, select bank3
  3556  0C70  1703               	bsf	3,6	;RP1=1, select bank3
  3557  0C71  0845               	movf	(_F3+2)^(0+384),w
  3558  0C72  1683               	bsf	3,5	;RP0=1, select bank1
  3559  0C73  1303               	bcf	3,6	;RP1=0, select bank1
  3560  0C74  00DE               	movwf	(format_double@num+2)^(0+128)
  3561  0C75  160A  118A  2643  120A  158A  	fcall	_format_double
  3562                           
  3563                           ;LC-meter.c: 419: ser_putch(' ');
  3564  0C7A  3020               	movlw	32
  3565  0C7B  1683               	bsf	3,5	;RP0=1, select bank1
  3566  0C7C  1303               	bcf	3,6	;RP1=0, select bank1
  3567  0C7D  00E0               	movwf	??_measure_capacitance^(0+128)
  3568  0C7E  0860               	movf	??_measure_capacitance^(0+128),w
  3569  0C7F  1283               	bcf	3,5	;RP0=0, select bank0
  3570  0C80  1303               	bcf	3,6	;RP1=0, select bank0
  3571  0C81  00A0               	movwf	ser_putch@c
  3572  0C82  160A  118A  2000  120A  158A  	fcall	_ser_putch
  3573                           
  3574                           ;LC-meter.c: 420: format_xint32( *(unsigned long int*)&F3);
  3575  0C87  30C3               	movlw	low (_F3| (0+256))
  3576  0C88  0084               	movwf	4
  3577  0C89  1783               	bsf	3,7	;select IRP bank3
  3578  0C8A  0800               	movf	0,w
  3579  0C8B  1283               	bcf	3,5	;RP0=0, select bank0
  3580  0C8C  1303               	bcf	3,6	;RP1=0, select bank0
  3581  0C8D  00D4               	movwf	format_xint32@x
  3582  0C8E  0A84               	incf	4,f
  3583  0C8F  0800               	movf	0,w
  3584  0C90  00D5               	movwf	format_xint32@x+1
  3585  0C91  0A84               	incf	4,f
  3586  0C92  0800               	movf	0,w
  3587  0C93  00D6               	movwf	format_xint32@x+2
  3588  0C94  0A84               	incf	4,f
  3589  0C95  0800               	movf	0,w
  3590  0C96  00D7               	movwf	format_xint32@x+3
  3591  0C97  160A  158A  253E  120A  158A  	fcall	_format_xint32
  3592                           
  3593                           ;LC-meter.c: 421: ser_puts("\r\nCCal=");
  3594  0C9C  303A               	movlw	(low ((STR_8-__stringbase)| (0+32768)))& (0+255)
  3595  0C9D  160A  158A  23E7  120A  158A  	fcall	_ser_puts
  3596                           
  3597                           ;LC-meter.c: 422: format_double( CCal);
  3598  0CA2  1683               	bsf	3,5	;RP0=1, select bank3
  3599  0CA3  1703               	bsf	3,6	;RP1=1, select bank3
  3600  0CA4  085E               	movf	_CCal^(0+384),w
  3601  0CA5  1683               	bsf	3,5	;RP0=1, select bank1
  3602  0CA6  1303               	bcf	3,6	;RP1=0, select bank1
  3603  0CA7  00DC               	movwf	format_double@num^(0+128)
  3604  0CA8  1683               	bsf	3,5	;RP0=1, select bank3
  3605  0CA9  1703               	bsf	3,6	;RP1=1, select bank3
  3606  0CAA  085F               	movf	(_CCal+1)^(0+384),w
  3607  0CAB  1683               	bsf	3,5	;RP0=1, select bank1
  3608  0CAC  1303               	bcf	3,6	;RP1=0, select bank1
  3609  0CAD  00DD               	movwf	(format_double@num+1)^(0+128)
  3610  0CAE  1683               	bsf	3,5	;RP0=1, select bank3
  3611  0CAF  1703               	bsf	3,6	;RP1=1, select bank3
  3612  0CB0  0860               	movf	(_CCal+2)^(0+384),w
  3613  0CB1  1683               	bsf	3,5	;RP0=1, select bank1
  3614  0CB2  1303               	bcf	3,6	;RP1=0, select bank1
  3615  0CB3  00DE               	movwf	(format_double@num+2)^(0+128)
  3616  0CB4  160A  118A  2643  120A  158A  	fcall	_format_double
  3617                           
  3618                           ;LC-meter.c: 423: ser_putch(' ');
  3619  0CB9  3020               	movlw	32
  3620  0CBA  1683               	bsf	3,5	;RP0=1, select bank1
  3621  0CBB  1303               	bcf	3,6	;RP1=0, select bank1
  3622  0CBC  00E0               	movwf	??_measure_capacitance^(0+128)
  3623  0CBD  0860               	movf	??_measure_capacitance^(0+128),w
  3624  0CBE  1283               	bcf	3,5	;RP0=0, select bank0
  3625  0CBF  1303               	bcf	3,6	;RP1=0, select bank0
  3626  0CC0  00A0               	movwf	ser_putch@c
  3627  0CC1  160A  118A  2000  120A  158A  	fcall	_ser_putch
  3628                           
  3629                           ;LC-meter.c: 424: format_xint32( *(unsigned long int*)&CCal);
  3630  0CC6  30DE               	movlw	low (_CCal| (0+256))
  3631  0CC7  0084               	movwf	4
  3632  0CC8  1783               	bsf	3,7	;select IRP bank3
  3633  0CC9  0800               	movf	0,w
  3634  0CCA  1283               	bcf	3,5	;RP0=0, select bank0
  3635  0CCB  1303               	bcf	3,6	;RP1=0, select bank0
  3636  0CCC  00D4               	movwf	format_xint32@x
  3637  0CCD  0A84               	incf	4,f
  3638  0CCE  0800               	movf	0,w
  3639  0CCF  00D5               	movwf	format_xint32@x+1
  3640  0CD0  0A84               	incf	4,f
  3641  0CD1  0800               	movf	0,w
  3642  0CD2  00D6               	movwf	format_xint32@x+2
  3643  0CD3  0A84               	incf	4,f
  3644  0CD4  0800               	movf	0,w
  3645  0CD5  00D7               	movwf	format_xint32@x+3
  3646  0CD6  160A  158A  253E  120A  158A  	fcall	_format_xint32
  3647                           
  3648                           ;LC-meter.c: 425: ser_puts("\r\n");
  3649  0CDB  3045               	movlw	(low (((STR_1+3)-__stringbase)| (0+32768)))& (0+255)
  3650  0CDC  160A  158A  23E7  120A  158A  	fcall	_ser_puts
  3651                           
  3652                           ;LC-meter.c: 427: putchar_ptr = &output_putch;
  3653  0CE1  3001               	movlw	(low (fp__output_putch-fpbase))& (0+255)
  3654  0CE2  1683               	bsf	3,5	;RP0=1, select bank1
  3655  0CE3  1303               	bcf	3,6	;RP1=0, select bank1
  3656  0CE4  00E0               	movwf	??_measure_capacitance^(0+128)
  3657  0CE5  0860               	movf	??_measure_capacitance^(0+128),w
  3658  0CE6  00F9               	movwf	_putchar_ptr
  3659                           
  3660                           ;LC-meter.c: 429: if(F3 > F1)
  3661  0CE7  1683               	bsf	3,5	;RP0=1, select bank3
  3662  0CE8  1703               	bsf	3,6	;RP1=1, select bank3
  3663  0CE9  084B               	movf	_F1^(0+384),w
  3664  0CEA  1283               	bcf	3,5	;RP0=0, select bank0
  3665  0CEB  1303               	bcf	3,6	;RP1=0, select bank0
  3666  0CEC  00A0               	movwf	___ftge@ff1
  3667  0CED  1683               	bsf	3,5	;RP0=1, select bank3
  3668  0CEE  1703               	bsf	3,6	;RP1=1, select bank3
  3669  0CEF  084C               	movf	(_F1+1)^(0+384),w
  3670  0CF0  1283               	bcf	3,5	;RP0=0, select bank0
  3671  0CF1  1303               	bcf	3,6	;RP1=0, select bank0
  3672  0CF2  00A1               	movwf	___ftge@ff1+1
  3673  0CF3  1683               	bsf	3,5	;RP0=1, select bank3
  3674  0CF4  1703               	bsf	3,6	;RP1=1, select bank3
  3675  0CF5  084D               	movf	(_F1+2)^(0+384),w
  3676  0CF6  1283               	bcf	3,5	;RP0=0, select bank0
  3677  0CF7  1303               	bcf	3,6	;RP1=0, select bank0
  3678  0CF8  00A2               	movwf	___ftge@ff1+2
  3679  0CF9  1683               	bsf	3,5	;RP0=1, select bank3
  3680  0CFA  1703               	bsf	3,6	;RP1=1, select bank3
  3681  0CFB  0843               	movf	_F3^(0+384),w
  3682  0CFC  1283               	bcf	3,5	;RP0=0, select bank0
  3683  0CFD  1303               	bcf	3,6	;RP1=0, select bank0
  3684  0CFE  00A3               	movwf	___ftge@ff2
  3685  0CFF  1683               	bsf	3,5	;RP0=1, select bank3
  3686  0D00  1703               	bsf	3,6	;RP1=1, select bank3
  3687  0D01  0844               	movf	(_F3+1)^(0+384),w
  3688  0D02  1283               	bcf	3,5	;RP0=0, select bank0
  3689  0D03  1303               	bcf	3,6	;RP1=0, select bank0
  3690  0D04  00A4               	movwf	___ftge@ff2+1
  3691  0D05  1683               	bsf	3,5	;RP0=1, select bank3
  3692  0D06  1703               	bsf	3,6	;RP1=1, select bank3
  3693  0D07  0845               	movf	(_F3+2)^(0+384),w
  3694  0D08  1283               	bcf	3,5	;RP0=0, select bank0
  3695  0D09  1303               	bcf	3,6	;RP1=0, select bank0
  3696  0D0A  00A5               	movwf	___ftge@ff2+2
  3697  0D0B  160A  158A  258C  120A  158A  	fcall	___ftge
  3698  0D10  1803               	btfsc	3,0
  3699  0D11  2D1A               	goto	l4290
  3700                           
  3701                           ;LC-meter.c: 430: F3 = F1;
  3702  0D12  1683               	bsf	3,5	;RP0=1, select bank3
  3703  0D13  1703               	bsf	3,6	;RP1=1, select bank3
  3704  0D14  084B               	movf	_F1^(0+384),w
  3705  0D15  00C3               	movwf	_F3^(0+384)
  3706  0D16  084C               	movf	(_F1+1)^(0+384),w
  3707  0D17  00C4               	movwf	(_F3+1)^(0+384)
  3708  0D18  084D               	movf	(_F1+2)^(0+384),w
  3709  0D19  00C5               	movwf	(_F3+2)^(0+384)
  3710  0D1A                     l4290:	
  3711                           
  3712                           ;LC-meter.c: 432: Cin = F2 * F2 * (F1 * F1 - F3 * F3) * CCal;
  3713  0D1A  1683               	bsf	3,5	;RP0=1, select bank3
  3714  0D1B  1703               	bsf	3,6	;RP1=1, select bank3
  3715  0D1C  0840               	movf	_F2^(0+384),w
  3716  0D1D  1283               	bcf	3,5	;RP0=0, select bank0
  3717  0D1E  1303               	bcf	3,6	;RP1=0, select bank0
  3718  0D1F  00B8               	movwf	___ftmul@f1
  3719  0D20  1683               	bsf	3,5	;RP0=1, select bank3
  3720  0D21  1703               	bsf	3,6	;RP1=1, select bank3
  3721  0D22  0841               	movf	(_F2+1)^(0+384),w
  3722  0D23  1283               	bcf	3,5	;RP0=0, select bank0
  3723  0D24  1303               	bcf	3,6	;RP1=0, select bank0
  3724  0D25  00B9               	movwf	___ftmul@f1+1
  3725  0D26  1683               	bsf	3,5	;RP0=1, select bank3
  3726  0D27  1703               	bsf	3,6	;RP1=1, select bank3
  3727  0D28  0842               	movf	(_F2+2)^(0+384),w
  3728  0D29  1283               	bcf	3,5	;RP0=0, select bank0
  3729  0D2A  1303               	bcf	3,6	;RP1=0, select bank0
  3730  0D2B  00BA               	movwf	___ftmul@f1+2
  3731  0D2C  1683               	bsf	3,5	;RP0=1, select bank3
  3732  0D2D  1703               	bsf	3,6	;RP1=1, select bank3
  3733  0D2E  0840               	movf	_F2^(0+384),w
  3734  0D2F  1283               	bcf	3,5	;RP0=0, select bank0
  3735  0D30  1303               	bcf	3,6	;RP1=0, select bank0
  3736  0D31  00BB               	movwf	___ftmul@f2
  3737  0D32  1683               	bsf	3,5	;RP0=1, select bank3
  3738  0D33  1703               	bsf	3,6	;RP1=1, select bank3
  3739  0D34  0841               	movf	(_F2+1)^(0+384),w
  3740  0D35  1283               	bcf	3,5	;RP0=0, select bank0
  3741  0D36  1303               	bcf	3,6	;RP1=0, select bank0
  3742  0D37  00BC               	movwf	___ftmul@f2+1
  3743  0D38  1683               	bsf	3,5	;RP0=1, select bank3
  3744  0D39  1703               	bsf	3,6	;RP1=1, select bank3
  3745  0D3A  0842               	movf	(_F2+2)^(0+384),w
  3746  0D3B  1283               	bcf	3,5	;RP0=0, select bank0
  3747  0D3C  1303               	bcf	3,6	;RP1=0, select bank0
  3748  0D3D  00BD               	movwf	___ftmul@f2+2
  3749  0D3E  160A  118A  2493  120A  158A  	fcall	___ftmul
  3750  0D43  1283               	bcf	3,5	;RP0=0, select bank0
  3751  0D44  1303               	bcf	3,6	;RP1=0, select bank0
  3752  0D45  0838               	movf	?___ftmul,w
  3753  0D46  1283               	bcf	3,5	;RP0=0, select bank2
  3754  0D47  1703               	bsf	3,6	;RP1=1, select bank2
  3755  0D48  0090               	movwf	_measure_capacitance$819^(0+256)
  3756  0D49  1283               	bcf	3,5	;RP0=0, select bank0
  3757  0D4A  1303               	bcf	3,6	;RP1=0, select bank0
  3758  0D4B  0839               	movf	?___ftmul+1,w
  3759  0D4C  1283               	bcf	3,5	;RP0=0, select bank2
  3760  0D4D  1703               	bsf	3,6	;RP1=1, select bank2
  3761  0D4E  0091               	movwf	(_measure_capacitance$819+1)^(0+256)
  3762  0D4F  1283               	bcf	3,5	;RP0=0, select bank0
  3763  0D50  1303               	bcf	3,6	;RP1=0, select bank0
  3764  0D51  083A               	movf	?___ftmul+2,w
  3765  0D52  1283               	bcf	3,5	;RP0=0, select bank2
  3766  0D53  1703               	bsf	3,6	;RP1=1, select bank2
  3767  0D54  0092               	movwf	(_measure_capacitance$819+2)^(0+256)
  3768                           
  3769                           ;LC-meter.c: 432: Cin = F2 * F2 * (F1 * F1 - F3 * F3) * CCal;
  3770  0D55  1683               	bsf	3,5	;RP0=1, select bank3
  3771  0D56  1703               	bsf	3,6	;RP1=1, select bank3
  3772  0D57  0843               	movf	_F3^(0+384),w
  3773  0D58  1283               	bcf	3,5	;RP0=0, select bank0
  3774  0D59  1303               	bcf	3,6	;RP1=0, select bank0
  3775  0D5A  00BB               	movwf	___ftmul@f2
  3776  0D5B  1683               	bsf	3,5	;RP0=1, select bank3
  3777  0D5C  1703               	bsf	3,6	;RP1=1, select bank3
  3778  0D5D  0844               	movf	(_F3+1)^(0+384),w
  3779  0D5E  1283               	bcf	3,5	;RP0=0, select bank0
  3780  0D5F  1303               	bcf	3,6	;RP1=0, select bank0
  3781  0D60  00BC               	movwf	___ftmul@f2+1
  3782  0D61  1683               	bsf	3,5	;RP0=1, select bank3
  3783  0D62  1703               	bsf	3,6	;RP1=1, select bank3
  3784  0D63  0845               	movf	(_F3+2)^(0+384),w
  3785  0D64  1283               	bcf	3,5	;RP0=0, select bank0
  3786  0D65  1303               	bcf	3,6	;RP1=0, select bank0
  3787  0D66  00BD               	movwf	___ftmul@f2+2
  3788  0D67  1683               	bsf	3,5	;RP0=1, select bank3
  3789  0D68  1703               	bsf	3,6	;RP1=1, select bank3
  3790  0D69  0843               	movf	_F3^(0+384),w
  3791  0D6A  1283               	bcf	3,5	;RP0=0, select bank0
  3792  0D6B  1303               	bcf	3,6	;RP1=0, select bank0
  3793  0D6C  00B8               	movwf	___ftmul@f1
  3794  0D6D  1683               	bsf	3,5	;RP0=1, select bank3
  3795  0D6E  1703               	bsf	3,6	;RP1=1, select bank3
  3796  0D6F  0844               	movf	(_F3+1)^(0+384),w
  3797  0D70  1283               	bcf	3,5	;RP0=0, select bank0
  3798  0D71  1303               	bcf	3,6	;RP1=0, select bank0
  3799  0D72  00B9               	movwf	___ftmul@f1+1
  3800  0D73  1683               	bsf	3,5	;RP0=1, select bank3
  3801  0D74  1703               	bsf	3,6	;RP1=1, select bank3
  3802  0D75  0845               	movf	(_F3+2)^(0+384),w
  3803  0D76  1283               	bcf	3,5	;RP0=0, select bank0
  3804  0D77  1303               	bcf	3,6	;RP1=0, select bank0
  3805  0D78  00BA               	movwf	___ftmul@f1+2
  3806  0D79  160A  118A  2493  120A  158A  	fcall	___ftmul
  3807  0D7E  1283               	bcf	3,5	;RP0=0, select bank0
  3808  0D7F  1303               	bcf	3,6	;RP1=0, select bank0
  3809  0D80  0838               	movf	?___ftmul,w
  3810  0D81  00C8               	movwf	___ftneg@f1
  3811  0D82  0839               	movf	?___ftmul+1,w
  3812  0D83  00C9               	movwf	___ftneg@f1+1
  3813  0D84  083A               	movf	?___ftmul+2,w
  3814  0D85  00CA               	movwf	___ftneg@f1+2
  3815  0D86  160A  158A  236E  120A  158A  	fcall	___ftneg
  3816  0D8B  1283               	bcf	3,5	;RP0=0, select bank0
  3817  0D8C  1303               	bcf	3,6	;RP1=0, select bank0
  3818  0D8D  0848               	movf	?___ftneg,w
  3819  0D8E  00CB               	movwf	___ftadd@f1
  3820  0D8F  0849               	movf	?___ftneg+1,w
  3821  0D90  00CC               	movwf	___ftadd@f1+1
  3822  0D91  084A               	movf	?___ftneg+2,w
  3823  0D92  00CD               	movwf	___ftadd@f1+2
  3824  0D93  1683               	bsf	3,5	;RP0=1, select bank3
  3825  0D94  1703               	bsf	3,6	;RP1=1, select bank3
  3826  0D95  084B               	movf	_F1^(0+384),w
  3827  0D96  1283               	bcf	3,5	;RP0=0, select bank0
  3828  0D97  1303               	bcf	3,6	;RP1=0, select bank0
  3829  0D98  00B8               	movwf	___ftmul@f1
  3830  0D99  1683               	bsf	3,5	;RP0=1, select bank3
  3831  0D9A  1703               	bsf	3,6	;RP1=1, select bank3
  3832  0D9B  084C               	movf	(_F1+1)^(0+384),w
  3833  0D9C  1283               	bcf	3,5	;RP0=0, select bank0
  3834  0D9D  1303               	bcf	3,6	;RP1=0, select bank0
  3835  0D9E  00B9               	movwf	___ftmul@f1+1
  3836  0D9F  1683               	bsf	3,5	;RP0=1, select bank3
  3837  0DA0  1703               	bsf	3,6	;RP1=1, select bank3
  3838  0DA1  084D               	movf	(_F1+2)^(0+384),w
  3839  0DA2  1283               	bcf	3,5	;RP0=0, select bank0
  3840  0DA3  1303               	bcf	3,6	;RP1=0, select bank0
  3841  0DA4  00BA               	movwf	___ftmul@f1+2
  3842  0DA5  1683               	bsf	3,5	;RP0=1, select bank3
  3843  0DA6  1703               	bsf	3,6	;RP1=1, select bank3
  3844  0DA7  084B               	movf	_F1^(0+384),w
  3845  0DA8  1283               	bcf	3,5	;RP0=0, select bank0
  3846  0DA9  1303               	bcf	3,6	;RP1=0, select bank0
  3847  0DAA  00BB               	movwf	___ftmul@f2
  3848  0DAB  1683               	bsf	3,5	;RP0=1, select bank3
  3849  0DAC  1703               	bsf	3,6	;RP1=1, select bank3
  3850  0DAD  084C               	movf	(_F1+1)^(0+384),w
  3851  0DAE  1283               	bcf	3,5	;RP0=0, select bank0
  3852  0DAF  1303               	bcf	3,6	;RP1=0, select bank0
  3853  0DB0  00BC               	movwf	___ftmul@f2+1
  3854  0DB1  1683               	bsf	3,5	;RP0=1, select bank3
  3855  0DB2  1703               	bsf	3,6	;RP1=1, select bank3
  3856  0DB3  084D               	movf	(_F1+2)^(0+384),w
  3857  0DB4  1283               	bcf	3,5	;RP0=0, select bank0
  3858  0DB5  1303               	bcf	3,6	;RP1=0, select bank0
  3859  0DB6  00BD               	movwf	___ftmul@f2+2
  3860  0DB7  160A  118A  2493  120A  158A  	fcall	___ftmul
  3861  0DBC  1283               	bcf	3,5	;RP0=0, select bank0
  3862  0DBD  1303               	bcf	3,6	;RP1=0, select bank0
  3863  0DBE  0838               	movf	?___ftmul,w
  3864  0DBF  00CE               	movwf	___ftadd@f2
  3865  0DC0  0839               	movf	?___ftmul+1,w
  3866  0DC1  00CF               	movwf	___ftadd@f2+1
  3867  0DC2  083A               	movf	?___ftmul+2,w
  3868  0DC3  00D0               	movwf	___ftadd@f2+2
  3869  0DC4  120A  158A  20A0  120A  158A  	fcall	___ftadd
  3870  0DC9  1283               	bcf	3,5	;RP0=0, select bank0
  3871  0DCA  1303               	bcf	3,6	;RP1=0, select bank0
  3872  0DCB  084B               	movf	?___ftadd,w
  3873  0DCC  1283               	bcf	3,5	;RP0=0, select bank2
  3874  0DCD  1703               	bsf	3,6	;RP1=1, select bank2
  3875  0DCE  0093               	movwf	_measure_capacitance$820^(0+256)
  3876  0DCF  1283               	bcf	3,5	;RP0=0, select bank0
  3877  0DD0  1303               	bcf	3,6	;RP1=0, select bank0
  3878  0DD1  084C               	movf	?___ftadd+1,w
  3879  0DD2  1283               	bcf	3,5	;RP0=0, select bank2
  3880  0DD3  1703               	bsf	3,6	;RP1=1, select bank2
  3881  0DD4  0094               	movwf	(_measure_capacitance$820+1)^(0+256)
  3882  0DD5  1283               	bcf	3,5	;RP0=0, select bank0
  3883  0DD6  1303               	bcf	3,6	;RP1=0, select bank0
  3884  0DD7  084D               	movf	?___ftadd+2,w
  3885  0DD8  1283               	bcf	3,5	;RP0=0, select bank2
  3886  0DD9  1703               	bsf	3,6	;RP1=1, select bank2
  3887  0DDA  0095               	movwf	(_measure_capacitance$820+2)^(0+256)
  3888                           
  3889                           ;LC-meter.c: 432: Cin = F2 * F2 * (F1 * F1 - F3 * F3) * CCal;
  3890  0DDB  0810               	movf	_measure_capacitance$819^(0+256),w
  3891  0DDC  1283               	bcf	3,5	;RP0=0, select bank0
  3892  0DDD  1303               	bcf	3,6	;RP1=0, select bank0
  3893  0DDE  00B8               	movwf	___ftmul@f1
  3894  0DDF  1283               	bcf	3,5	;RP0=0, select bank2
  3895  0DE0  1703               	bsf	3,6	;RP1=1, select bank2
  3896  0DE1  0811               	movf	(_measure_capacitance$819+1)^(0+256),w
  3897  0DE2  1283               	bcf	3,5	;RP0=0, select bank0
  3898  0DE3  1303               	bcf	3,6	;RP1=0, select bank0
  3899  0DE4  00B9               	movwf	___ftmul@f1+1
  3900  0DE5  1283               	bcf	3,5	;RP0=0, select bank2
  3901  0DE6  1703               	bsf	3,6	;RP1=1, select bank2
  3902  0DE7  0812               	movf	(_measure_capacitance$819+2)^(0+256),w
  3903  0DE8  1283               	bcf	3,5	;RP0=0, select bank0
  3904  0DE9  1303               	bcf	3,6	;RP1=0, select bank0
  3905  0DEA  00BA               	movwf	___ftmul@f1+2
  3906  0DEB  1283               	bcf	3,5	;RP0=0, select bank2
  3907  0DEC  1703               	bsf	3,6	;RP1=1, select bank2
  3908  0DED  0813               	movf	_measure_capacitance$820^(0+256),w
  3909  0DEE  1283               	bcf	3,5	;RP0=0, select bank0
  3910  0DEF  1303               	bcf	3,6	;RP1=0, select bank0
  3911  0DF0  00BB               	movwf	___ftmul@f2
  3912  0DF1  1283               	bcf	3,5	;RP0=0, select bank2
  3913  0DF2  1703               	bsf	3,6	;RP1=1, select bank2
  3914  0DF3  0814               	movf	(_measure_capacitance$820+1)^(0+256),w
  3915  0DF4  1283               	bcf	3,5	;RP0=0, select bank0
  3916  0DF5  1303               	bcf	3,6	;RP1=0, select bank0
  3917  0DF6  00BC               	movwf	___ftmul@f2+1
  3918  0DF7  1283               	bcf	3,5	;RP0=0, select bank2
  3919  0DF8  1703               	bsf	3,6	;RP1=1, select bank2
  3920  0DF9  0815               	movf	(_measure_capacitance$820+2)^(0+256),w
  3921  0DFA  1283               	bcf	3,5	;RP0=0, select bank0
  3922  0DFB  1303               	bcf	3,6	;RP1=0, select bank0
  3923  0DFC  00BD               	movwf	___ftmul@f2+2
  3924  0DFD  160A  118A  2493  120A  158A  	fcall	___ftmul
  3925  0E02  1283               	bcf	3,5	;RP0=0, select bank0
  3926  0E03  1303               	bcf	3,6	;RP1=0, select bank0
  3927  0E04  0838               	movf	?___ftmul,w
  3928  0E05  1283               	bcf	3,5	;RP0=0, select bank2
  3929  0E06  1703               	bsf	3,6	;RP1=1, select bank2
  3930  0E07  0096               	movwf	_measure_capacitance$821^(0+256)
  3931  0E08  1283               	bcf	3,5	;RP0=0, select bank0
  3932  0E09  1303               	bcf	3,6	;RP1=0, select bank0
  3933  0E0A  0839               	movf	?___ftmul+1,w
  3934  0E0B  1283               	bcf	3,5	;RP0=0, select bank2
  3935  0E0C  1703               	bsf	3,6	;RP1=1, select bank2
  3936  0E0D  0097               	movwf	(_measure_capacitance$821+1)^(0+256)
  3937  0E0E  1283               	bcf	3,5	;RP0=0, select bank0
  3938  0E0F  1303               	bcf	3,6	;RP1=0, select bank0
  3939  0E10  083A               	movf	?___ftmul+2,w
  3940  0E11  1283               	bcf	3,5	;RP0=0, select bank2
  3941  0E12  1703               	bsf	3,6	;RP1=1, select bank2
  3942  0E13  0098               	movwf	(_measure_capacitance$821+2)^(0+256)
  3943                           
  3944                           ;LC-meter.c: 432: Cin = F2 * F2 * (F1 * F1 - F3 * F3) * CCal;
  3945  0E14  1683               	bsf	3,5	;RP0=1, select bank3
  3946  0E15  1703               	bsf	3,6	;RP1=1, select bank3
  3947  0E16  085E               	movf	_CCal^(0+384),w
  3948  0E17  1283               	bcf	3,5	;RP0=0, select bank0
  3949  0E18  1303               	bcf	3,6	;RP1=0, select bank0
  3950  0E19  00B8               	movwf	___ftmul@f1
  3951  0E1A  1683               	bsf	3,5	;RP0=1, select bank3
  3952  0E1B  1703               	bsf	3,6	;RP1=1, select bank3
  3953  0E1C  085F               	movf	(_CCal+1)^(0+384),w
  3954  0E1D  1283               	bcf	3,5	;RP0=0, select bank0
  3955  0E1E  1303               	bcf	3,6	;RP1=0, select bank0
  3956  0E1F  00B9               	movwf	___ftmul@f1+1
  3957  0E20  1683               	bsf	3,5	;RP0=1, select bank3
  3958  0E21  1703               	bsf	3,6	;RP1=1, select bank3
  3959  0E22  0860               	movf	(_CCal+2)^(0+384),w
  3960  0E23  1283               	bcf	3,5	;RP0=0, select bank0
  3961  0E24  1303               	bcf	3,6	;RP1=0, select bank0
  3962  0E25  00BA               	movwf	___ftmul@f1+2
  3963  0E26  1283               	bcf	3,5	;RP0=0, select bank2
  3964  0E27  1703               	bsf	3,6	;RP1=1, select bank2
  3965  0E28  0816               	movf	_measure_capacitance$821^(0+256),w
  3966  0E29  1283               	bcf	3,5	;RP0=0, select bank0
  3967  0E2A  1303               	bcf	3,6	;RP1=0, select bank0
  3968  0E2B  00BB               	movwf	___ftmul@f2
  3969  0E2C  1283               	bcf	3,5	;RP0=0, select bank2
  3970  0E2D  1703               	bsf	3,6	;RP1=1, select bank2
  3971  0E2E  0817               	movf	(_measure_capacitance$821+1)^(0+256),w
  3972  0E2F  1283               	bcf	3,5	;RP0=0, select bank0
  3973  0E30  1303               	bcf	3,6	;RP1=0, select bank0
  3974  0E31  00BC               	movwf	___ftmul@f2+1
  3975  0E32  1283               	bcf	3,5	;RP0=0, select bank2
  3976  0E33  1703               	bsf	3,6	;RP1=1, select bank2
  3977  0E34  0818               	movf	(_measure_capacitance$821+2)^(0+256),w
  3978  0E35  1283               	bcf	3,5	;RP0=0, select bank0
  3979  0E36  1303               	bcf	3,6	;RP1=0, select bank0
  3980  0E37  00BD               	movwf	___ftmul@f2+2
  3981  0E38  160A  118A  2493  120A  158A  	fcall	___ftmul
  3982  0E3D  1283               	bcf	3,5	;RP0=0, select bank0
  3983  0E3E  1303               	bcf	3,6	;RP1=0, select bank0
  3984  0E3F  0838               	movf	?___ftmul,w
  3985  0E40  1283               	bcf	3,5	;RP0=0, select bank2
  3986  0E41  1703               	bsf	3,6	;RP1=1, select bank2
  3987  0E42  009C               	movwf	measure_capacitance@Cin^(0+256)
  3988  0E43  1283               	bcf	3,5	;RP0=0, select bank0
  3989  0E44  1303               	bcf	3,6	;RP1=0, select bank0
  3990  0E45  0839               	movf	?___ftmul+1,w
  3991  0E46  1283               	bcf	3,5	;RP0=0, select bank2
  3992  0E47  1703               	bsf	3,6	;RP1=1, select bank2
  3993  0E48  009D               	movwf	(measure_capacitance@Cin+1)^(0+256)
  3994  0E49  1283               	bcf	3,5	;RP0=0, select bank0
  3995  0E4A  1303               	bcf	3,6	;RP1=0, select bank0
  3996  0E4B  083A               	movf	?___ftmul+2,w
  3997  0E4C  1283               	bcf	3,5	;RP0=0, select bank2
  3998  0E4D  1703               	bsf	3,6	;RP1=1, select bank2
  3999  0E4E  009E               	movwf	(measure_capacitance@Cin+2)^(0+256)
  4000                           
  4001                           ;LC-meter.c: 436: ser_puts("Cin=");
  4002  0E4F  305A               	movlw	(low ((STR_10-__stringbase)| (0+32768)))& (0+255)
  4003  0E50  160A  158A  23E7  120A  158A  	fcall	_ser_puts
  4004                           
  4005                           ;LC-meter.c: 437: format_double( Cin);
  4006  0E55  1283               	bcf	3,5	;RP0=0, select bank2
  4007  0E56  1703               	bsf	3,6	;RP1=1, select bank2
  4008  0E57  081C               	movf	measure_capacitance@Cin^(0+256),w
  4009  0E58  1683               	bsf	3,5	;RP0=1, select bank1
  4010  0E59  1303               	bcf	3,6	;RP1=0, select bank1
  4011  0E5A  00DC               	movwf	format_double@num^(0+128)
  4012  0E5B  1283               	bcf	3,5	;RP0=0, select bank2
  4013  0E5C  1703               	bsf	3,6	;RP1=1, select bank2
  4014  0E5D  081D               	movf	(measure_capacitance@Cin+1)^(0+256),w
  4015  0E5E  1683               	bsf	3,5	;RP0=1, select bank1
  4016  0E5F  1303               	bcf	3,6	;RP1=0, select bank1
  4017  0E60  00DD               	movwf	(format_double@num+1)^(0+128)
  4018  0E61  1283               	bcf	3,5	;RP0=0, select bank2
  4019  0E62  1703               	bsf	3,6	;RP1=1, select bank2
  4020  0E63  081E               	movf	(measure_capacitance@Cin+2)^(0+256),w
  4021  0E64  1683               	bsf	3,5	;RP0=1, select bank1
  4022  0E65  1303               	bcf	3,6	;RP1=0, select bank1
  4023  0E66  00DE               	movwf	(format_double@num+2)^(0+128)
  4024  0E67  160A  118A  2643  120A  158A  	fcall	_format_double
  4025                           
  4026                           ;LC-meter.c: 438: ser_putch(' ');
  4027  0E6C  3020               	movlw	32
  4028  0E6D  1683               	bsf	3,5	;RP0=1, select bank1
  4029  0E6E  1303               	bcf	3,6	;RP1=0, select bank1
  4030  0E6F  00E0               	movwf	??_measure_capacitance^(0+128)
  4031  0E70  0860               	movf	??_measure_capacitance^(0+128),w
  4032  0E71  1283               	bcf	3,5	;RP0=0, select bank0
  4033  0E72  1303               	bcf	3,6	;RP1=0, select bank0
  4034  0E73  00A0               	movwf	ser_putch@c
  4035  0E74  160A  118A  2000  120A  158A  	fcall	_ser_putch
  4036                           
  4037                           ;LC-meter.c: 439: format_xint32( *(unsigned long int*)&Cin);
  4038  0E79  301C               	movlw	low (measure_capacitance@Cin| (0+256))
  4039  0E7A  0084               	movwf	4
  4040  0E7B  1783               	bsf	3,7	;select IRP bank2
  4041  0E7C  0800               	movf	0,w
  4042  0E7D  1283               	bcf	3,5	;RP0=0, select bank0
  4043  0E7E  1303               	bcf	3,6	;RP1=0, select bank0
  4044  0E7F  00D4               	movwf	format_xint32@x
  4045  0E80  0A84               	incf	4,f
  4046  0E81  0800               	movf	0,w
  4047  0E82  00D5               	movwf	format_xint32@x+1
  4048  0E83  0A84               	incf	4,f
  4049  0E84  0800               	movf	0,w
  4050  0E85  00D6               	movwf	format_xint32@x+2
  4051  0E86  0A84               	incf	4,f
  4052  0E87  0800               	movf	0,w
  4053  0E88  00D7               	movwf	format_xint32@x+3
  4054  0E89  160A  158A  253E  120A  158A  	fcall	_format_xint32
  4055                           
  4056                           ;LC-meter.c: 440: ser_puts("\r\n");
  4057  0E8E  3045               	movlw	(low (((STR_1+3)-__stringbase)| (0+32768)))& (0+255)
  4058  0E8F  160A  158A  23E7  120A  158A  	fcall	_ser_puts
  4059                           
  4060                           ;LC-meter.c: 442: if(Cin > 999) {
  4061  0E94  30C0               	movlw	192
  4062  0E95  1283               	bcf	3,5	;RP0=0, select bank0
  4063  0E96  1303               	bcf	3,6	;RP1=0, select bank0
  4064  0E97  00A0               	movwf	___ftge@ff1
  4065  0E98  3079               	movlw	121
  4066  0E99  00A1               	movwf	___ftge@ff1+1
  4067  0E9A  3044               	movlw	68
  4068  0E9B  00A2               	movwf	___ftge@ff1+2
  4069  0E9C  1283               	bcf	3,5	;RP0=0, select bank2
  4070  0E9D  1703               	bsf	3,6	;RP1=1, select bank2
  4071  0E9E  081C               	movf	measure_capacitance@Cin^(0+256),w
  4072  0E9F  1283               	bcf	3,5	;RP0=0, select bank0
  4073  0EA0  1303               	bcf	3,6	;RP1=0, select bank0
  4074  0EA1  00A3               	movwf	___ftge@ff2
  4075  0EA2  1283               	bcf	3,5	;RP0=0, select bank2
  4076  0EA3  1703               	bsf	3,6	;RP1=1, select bank2
  4077  0EA4  081D               	movf	(measure_capacitance@Cin+1)^(0+256),w
  4078  0EA5  1283               	bcf	3,5	;RP0=0, select bank0
  4079  0EA6  1303               	bcf	3,6	;RP1=0, select bank0
  4080  0EA7  00A4               	movwf	___ftge@ff2+1
  4081  0EA8  1283               	bcf	3,5	;RP0=0, select bank2
  4082  0EA9  1703               	bsf	3,6	;RP1=1, select bank2
  4083  0EAA  081E               	movf	(measure_capacitance@Cin+2)^(0+256),w
  4084  0EAB  1283               	bcf	3,5	;RP0=0, select bank0
  4085  0EAC  1303               	bcf	3,6	;RP1=0, select bank0
  4086  0EAD  00A5               	movwf	___ftge@ff2+2
  4087  0EAE  160A  158A  258C  120A  158A  	fcall	___ftge
  4088  0EB3  1803               	btfsc	3,0
  4089  0EB4  2F90               	goto	l4326
  4090                           
  4091                           ;LC-meter.c: 443: if(Cin > (999e+03l)) {
  4092  0EB5  30E6               	movlw	230
  4093  0EB6  1283               	bcf	3,5	;RP0=0, select bank0
  4094  0EB7  1303               	bcf	3,6	;RP1=0, select bank0
  4095  0EB8  00A0               	movwf	___ftge@ff1
  4096  0EB9  3073               	movlw	115
  4097  0EBA  00A1               	movwf	___ftge@ff1+1
  4098  0EBB  3049               	movlw	73
  4099  0EBC  00A2               	movwf	___ftge@ff1+2
  4100  0EBD  1283               	bcf	3,5	;RP0=0, select bank2
  4101  0EBE  1703               	bsf	3,6	;RP1=1, select bank2
  4102  0EBF  081C               	movf	measure_capacitance@Cin^(0+256),w
  4103  0EC0  1283               	bcf	3,5	;RP0=0, select bank0
  4104  0EC1  1303               	bcf	3,6	;RP1=0, select bank0
  4105  0EC2  00A3               	movwf	___ftge@ff2
  4106  0EC3  1283               	bcf	3,5	;RP0=0, select bank2
  4107  0EC4  1703               	bsf	3,6	;RP1=1, select bank2
  4108  0EC5  081D               	movf	(measure_capacitance@Cin+1)^(0+256),w
  4109  0EC6  1283               	bcf	3,5	;RP0=0, select bank0
  4110  0EC7  1303               	bcf	3,6	;RP1=0, select bank0
  4111  0EC8  00A4               	movwf	___ftge@ff2+1
  4112  0EC9  1283               	bcf	3,5	;RP0=0, select bank2
  4113  0ECA  1703               	bsf	3,6	;RP1=1, select bank2
  4114  0ECB  081E               	movf	(measure_capacitance@Cin+2)^(0+256),w
  4115  0ECC  1283               	bcf	3,5	;RP0=0, select bank0
  4116  0ECD  1303               	bcf	3,6	;RP1=0, select bank0
  4117  0ECE  00A5               	movwf	___ftge@ff2+2
  4118  0ECF  160A  158A  258C  120A  158A  	fcall	___ftge
  4119  0ED4  1803               	btfsc	3,0
  4120  0ED5  2F5D               	goto	l4322
  4121                           
  4122                           ;LC-meter.c: 444: if(Cin > (999e+06l)) {
  4123  0ED6  302E               	movlw	46
  4124  0ED7  1283               	bcf	3,5	;RP0=0, select bank0
  4125  0ED8  1303               	bcf	3,6	;RP1=0, select bank0
  4126  0ED9  00A0               	movwf	___ftge@ff1
  4127  0EDA  306E               	movlw	110
  4128  0EDB  00A1               	movwf	___ftge@ff1+1
  4129  0EDC  304E               	movlw	78
  4130  0EDD  00A2               	movwf	___ftge@ff1+2
  4131  0EDE  1283               	bcf	3,5	;RP0=0, select bank2
  4132  0EDF  1703               	bsf	3,6	;RP1=1, select bank2
  4133  0EE0  081C               	movf	measure_capacitance@Cin^(0+256),w
  4134  0EE1  1283               	bcf	3,5	;RP0=0, select bank0
  4135  0EE2  1303               	bcf	3,6	;RP1=0, select bank0
  4136  0EE3  00A3               	movwf	___ftge@ff2
  4137  0EE4  1283               	bcf	3,5	;RP0=0, select bank2
  4138  0EE5  1703               	bsf	3,6	;RP1=1, select bank2
  4139  0EE6  081D               	movf	(measure_capacitance@Cin+1)^(0+256),w
  4140  0EE7  1283               	bcf	3,5	;RP0=0, select bank0
  4141  0EE8  1303               	bcf	3,6	;RP1=0, select bank0
  4142  0EE9  00A4               	movwf	___ftge@ff2+1
  4143  0EEA  1283               	bcf	3,5	;RP0=0, select bank2
  4144  0EEB  1703               	bsf	3,6	;RP1=1, select bank2
  4145  0EEC  081E               	movf	(measure_capacitance@Cin+2)^(0+256),w
  4146  0EED  1283               	bcf	3,5	;RP0=0, select bank0
  4147  0EEE  1303               	bcf	3,6	;RP1=0, select bank0
  4148  0EEF  00A5               	movwf	___ftge@ff2+2
  4149  0EF0  160A  158A  258C  120A  158A  	fcall	___ftge
  4150  0EF5  1803               	btfsc	3,0
  4151  0EF6  2F2A               	goto	l4318
  4152                           
  4153                           ;LC-meter.c: 445: Cin = Cin / (1e+09l);
  4154  0EF7  306B               	movlw	107
  4155  0EF8  1283               	bcf	3,5	;RP0=0, select bank0
  4156  0EF9  1303               	bcf	3,6	;RP1=0, select bank0
  4157  0EFA  00A8               	movwf	___ftdiv@f2
  4158  0EFB  306E               	movlw	110
  4159  0EFC  00A9               	movwf	___ftdiv@f2+1
  4160  0EFD  304E               	movlw	78
  4161  0EFE  00AA               	movwf	___ftdiv@f2+2
  4162  0EFF  1283               	bcf	3,5	;RP0=0, select bank2
  4163  0F00  1703               	bsf	3,6	;RP1=1, select bank2
  4164  0F01  081C               	movf	measure_capacitance@Cin^(0+256),w
  4165  0F02  1283               	bcf	3,5	;RP0=0, select bank0
  4166  0F03  1303               	bcf	3,6	;RP1=0, select bank0
  4167  0F04  00AB               	movwf	___ftdiv@f1
  4168  0F05  1283               	bcf	3,5	;RP0=0, select bank2
  4169  0F06  1703               	bsf	3,6	;RP1=1, select bank2
  4170  0F07  081D               	movf	(measure_capacitance@Cin+1)^(0+256),w
  4171  0F08  1283               	bcf	3,5	;RP0=0, select bank0
  4172  0F09  1303               	bcf	3,6	;RP1=0, select bank0
  4173  0F0A  00AC               	movwf	___ftdiv@f1+1
  4174  0F0B  1283               	bcf	3,5	;RP0=0, select bank2
  4175  0F0C  1703               	bsf	3,6	;RP1=1, select bank2
  4176  0F0D  081E               	movf	(measure_capacitance@Cin+2)^(0+256),w
  4177  0F0E  1283               	bcf	3,5	;RP0=0, select bank0
  4178  0F0F  1303               	bcf	3,6	;RP1=0, select bank0
  4179  0F10  00AD               	movwf	___ftdiv@f1+2
  4180  0F11  160A  118A  230D  120A  158A  	fcall	___ftdiv
  4181  0F16  1283               	bcf	3,5	;RP0=0, select bank0
  4182  0F17  1303               	bcf	3,6	;RP1=0, select bank0
  4183  0F18  0828               	movf	?___ftdiv,w
  4184  0F19  1283               	bcf	3,5	;RP0=0, select bank2
  4185  0F1A  1703               	bsf	3,6	;RP1=1, select bank2
  4186  0F1B  009C               	movwf	measure_capacitance@Cin^(0+256)
  4187  0F1C  1283               	bcf	3,5	;RP0=0, select bank0
  4188  0F1D  1303               	bcf	3,6	;RP1=0, select bank0
  4189  0F1E  0829               	movf	?___ftdiv+1,w
  4190  0F1F  1283               	bcf	3,5	;RP0=0, select bank2
  4191  0F20  1703               	bsf	3,6	;RP1=1, select bank2
  4192  0F21  009D               	movwf	(measure_capacitance@Cin+1)^(0+256)
  4193  0F22  1283               	bcf	3,5	;RP0=0, select bank0
  4194  0F23  1303               	bcf	3,6	;RP1=0, select bank0
  4195  0F24  082A               	movf	?___ftdiv+2,w
  4196  0F25  1283               	bcf	3,5	;RP0=0, select bank2
  4197  0F26  1703               	bsf	3,6	;RP1=1, select bank2
  4198  0F27  009E               	movwf	(measure_capacitance@Cin+2)^(0+256)
  4199                           
  4200                           ;LC-meter.c: 446: unit = 4;
  4201  0F28  3004               	movlw	4
  4202  0F29  2F91               	goto	L4
  4203  0F2A                     l4318:	
  4204                           ;LC-meter.c: 447: } else {
  4205                           
  4206                           
  4207                           ;LC-meter.c: 448: Cin = Cin / (1e+06l);
  4208  0F2A  3024               	movlw	36
  4209  0F2B  1283               	bcf	3,5	;RP0=0, select bank0
  4210  0F2C  1303               	bcf	3,6	;RP1=0, select bank0
  4211  0F2D  00A8               	movwf	___ftdiv@f2
  4212  0F2E  3074               	movlw	116
  4213  0F2F  00A9               	movwf	___ftdiv@f2+1
  4214  0F30  3049               	movlw	73
  4215  0F31  00AA               	movwf	___ftdiv@f2+2
  4216  0F32  1283               	bcf	3,5	;RP0=0, select bank2
  4217  0F33  1703               	bsf	3,6	;RP1=1, select bank2
  4218  0F34  081C               	movf	measure_capacitance@Cin^(0+256),w
  4219  0F35  1283               	bcf	3,5	;RP0=0, select bank0
  4220  0F36  1303               	bcf	3,6	;RP1=0, select bank0
  4221  0F37  00AB               	movwf	___ftdiv@f1
  4222  0F38  1283               	bcf	3,5	;RP0=0, select bank2
  4223  0F39  1703               	bsf	3,6	;RP1=1, select bank2
  4224  0F3A  081D               	movf	(measure_capacitance@Cin+1)^(0+256),w
  4225  0F3B  1283               	bcf	3,5	;RP0=0, select bank0
  4226  0F3C  1303               	bcf	3,6	;RP1=0, select bank0
  4227  0F3D  00AC               	movwf	___ftdiv@f1+1
  4228  0F3E  1283               	bcf	3,5	;RP0=0, select bank2
  4229  0F3F  1703               	bsf	3,6	;RP1=1, select bank2
  4230  0F40  081E               	movf	(measure_capacitance@Cin+2)^(0+256),w
  4231  0F41  1283               	bcf	3,5	;RP0=0, select bank0
  4232  0F42  1303               	bcf	3,6	;RP1=0, select bank0
  4233  0F43  00AD               	movwf	___ftdiv@f1+2
  4234  0F44  160A  118A  230D  120A  158A  	fcall	___ftdiv
  4235  0F49  1283               	bcf	3,5	;RP0=0, select bank0
  4236  0F4A  1303               	bcf	3,6	;RP1=0, select bank0
  4237  0F4B  0828               	movf	?___ftdiv,w
  4238  0F4C  1283               	bcf	3,5	;RP0=0, select bank2
  4239  0F4D  1703               	bsf	3,6	;RP1=1, select bank2
  4240  0F4E  009C               	movwf	measure_capacitance@Cin^(0+256)
  4241  0F4F  1283               	bcf	3,5	;RP0=0, select bank0
  4242  0F50  1303               	bcf	3,6	;RP1=0, select bank0
  4243  0F51  0829               	movf	?___ftdiv+1,w
  4244  0F52  1283               	bcf	3,5	;RP0=0, select bank2
  4245  0F53  1703               	bsf	3,6	;RP1=1, select bank2
  4246  0F54  009D               	movwf	(measure_capacitance@Cin+1)^(0+256)
  4247  0F55  1283               	bcf	3,5	;RP0=0, select bank0
  4248  0F56  1303               	bcf	3,6	;RP1=0, select bank0
  4249  0F57  082A               	movf	?___ftdiv+2,w
  4250  0F58  1283               	bcf	3,5	;RP0=0, select bank2
  4251  0F59  1703               	bsf	3,6	;RP1=1, select bank2
  4252  0F5A  009E               	movwf	(measure_capacitance@Cin+2)^(0+256)
  4253                           
  4254                           ;LC-meter.c: 449: unit = 5;
  4255  0F5B  3005               	movlw	5
  4256  0F5C  2F91               	goto	L4
  4257  0F5D                     l4322:	
  4258                           ;LC-meter.c: 450: }
  4259                           ;LC-meter.c: 451: } else {
  4260                           
  4261                           
  4262                           ;LC-meter.c: 452: Cin = Cin / 1e+03l;
  4263  0F5D  3000               	movlw	0
  4264  0F5E  1283               	bcf	3,5	;RP0=0, select bank0
  4265  0F5F  1303               	bcf	3,6	;RP1=0, select bank0
  4266  0F60  00A8               	movwf	___ftdiv@f2
  4267  0F61  307A               	movlw	122
  4268  0F62  00A9               	movwf	___ftdiv@f2+1
  4269  0F63  3044               	movlw	68
  4270  0F64  00AA               	movwf	___ftdiv@f2+2
  4271  0F65  1283               	bcf	3,5	;RP0=0, select bank2
  4272  0F66  1703               	bsf	3,6	;RP1=1, select bank2
  4273  0F67  081C               	movf	measure_capacitance@Cin^(0+256),w
  4274  0F68  1283               	bcf	3,5	;RP0=0, select bank0
  4275  0F69  1303               	bcf	3,6	;RP1=0, select bank0
  4276  0F6A  00AB               	movwf	___ftdiv@f1
  4277  0F6B  1283               	bcf	3,5	;RP0=0, select bank2
  4278  0F6C  1703               	bsf	3,6	;RP1=1, select bank2
  4279  0F6D  081D               	movf	(measure_capacitance@Cin+1)^(0+256),w
  4280  0F6E  1283               	bcf	3,5	;RP0=0, select bank0
  4281  0F6F  1303               	bcf	3,6	;RP1=0, select bank0
  4282  0F70  00AC               	movwf	___ftdiv@f1+1
  4283  0F71  1283               	bcf	3,5	;RP0=0, select bank2
  4284  0F72  1703               	bsf	3,6	;RP1=1, select bank2
  4285  0F73  081E               	movf	(measure_capacitance@Cin+2)^(0+256),w
  4286  0F74  1283               	bcf	3,5	;RP0=0, select bank0
  4287  0F75  1303               	bcf	3,6	;RP1=0, select bank0
  4288  0F76  00AD               	movwf	___ftdiv@f1+2
  4289  0F77  160A  118A  230D  120A  158A  	fcall	___ftdiv
  4290  0F7C  1283               	bcf	3,5	;RP0=0, select bank0
  4291  0F7D  1303               	bcf	3,6	;RP1=0, select bank0
  4292  0F7E  0828               	movf	?___ftdiv,w
  4293  0F7F  1283               	bcf	3,5	;RP0=0, select bank2
  4294  0F80  1703               	bsf	3,6	;RP1=1, select bank2
  4295  0F81  009C               	movwf	measure_capacitance@Cin^(0+256)
  4296  0F82  1283               	bcf	3,5	;RP0=0, select bank0
  4297  0F83  1303               	bcf	3,6	;RP1=0, select bank0
  4298  0F84  0829               	movf	?___ftdiv+1,w
  4299  0F85  1283               	bcf	3,5	;RP0=0, select bank2
  4300  0F86  1703               	bsf	3,6	;RP1=1, select bank2
  4301  0F87  009D               	movwf	(measure_capacitance@Cin+1)^(0+256)
  4302  0F88  1283               	bcf	3,5	;RP0=0, select bank0
  4303  0F89  1303               	bcf	3,6	;RP1=0, select bank0
  4304  0F8A  082A               	movf	?___ftdiv+2,w
  4305  0F8B  1283               	bcf	3,5	;RP0=0, select bank2
  4306  0F8C  1703               	bsf	3,6	;RP1=1, select bank2
  4307  0F8D  009E               	movwf	(measure_capacitance@Cin+2)^(0+256)
  4308                           
  4309                           ;LC-meter.c: 453: unit = 6;
  4310  0F8E  3006               	movlw	6
  4311  0F8F  2F91               	goto	L4
  4312  0F90                     l4326:	
  4313                           ;LC-meter.c: 454: }
  4314                           ;LC-meter.c: 455: } else
  4315                           
  4316                           
  4317                           ;LC-meter.c: 456: unit = 7;
  4318  0F90  3007               	movlw	7
  4319  0F91                     L4:	
  4320  0F91  1683               	bsf	3,5	;RP0=1, select bank1
  4321  0F92  1303               	bcf	3,6	;RP1=0, select bank1
  4322  0F93  00E0               	movwf	??_measure_capacitance^(0+128)
  4323  0F94  0860               	movf	??_measure_capacitance^(0+128),w
  4324  0F95  1283               	bcf	3,5	;RP0=0, select bank2
  4325  0F96  1703               	bsf	3,6	;RP1=1, select bank2
  4326  0F97  0099               	movwf	measure_capacitance@unit^(0+256)
  4327                           
  4328                           ;LC-meter.c: 458: Cin = Cin * 100;
  4329  0F98  3000               	movlw	0
  4330  0F99  1283               	bcf	3,5	;RP0=0, select bank0
  4331  0F9A  1303               	bcf	3,6	;RP1=0, select bank0
  4332  0F9B  00B8               	movwf	___ftmul@f1
  4333  0F9C  30C8               	movlw	200
  4334  0F9D  00B9               	movwf	___ftmul@f1+1
  4335  0F9E  3042               	movlw	66
  4336  0F9F  00BA               	movwf	___ftmul@f1+2
  4337  0FA0  1283               	bcf	3,5	;RP0=0, select bank2
  4338  0FA1  1703               	bsf	3,6	;RP1=1, select bank2
  4339  0FA2  081C               	movf	measure_capacitance@Cin^(0+256),w
  4340  0FA3  1283               	bcf	3,5	;RP0=0, select bank0
  4341  0FA4  1303               	bcf	3,6	;RP1=0, select bank0
  4342  0FA5  00BB               	movwf	___ftmul@f2
  4343  0FA6  1283               	bcf	3,5	;RP0=0, select bank2
  4344  0FA7  1703               	bsf	3,6	;RP1=1, select bank2
  4345  0FA8  081D               	movf	(measure_capacitance@Cin+1)^(0+256),w
  4346  0FA9  1283               	bcf	3,5	;RP0=0, select bank0
  4347  0FAA  1303               	bcf	3,6	;RP1=0, select bank0
  4348  0FAB  00BC               	movwf	___ftmul@f2+1
  4349  0FAC  1283               	bcf	3,5	;RP0=0, select bank2
  4350  0FAD  1703               	bsf	3,6	;RP1=1, select bank2
  4351  0FAE  081E               	movf	(measure_capacitance@Cin+2)^(0+256),w
  4352  0FAF  1283               	bcf	3,5	;RP0=0, select bank0
  4353  0FB0  1303               	bcf	3,6	;RP1=0, select bank0
  4354  0FB1  00BD               	movwf	___ftmul@f2+2
  4355  0FB2  160A  118A  2493  120A  158A  	fcall	___ftmul
  4356  0FB7  1283               	bcf	3,5	;RP0=0, select bank0
  4357  0FB8  1303               	bcf	3,6	;RP1=0, select bank0
  4358  0FB9  0838               	movf	?___ftmul,w
  4359  0FBA  1283               	bcf	3,5	;RP0=0, select bank2
  4360  0FBB  1703               	bsf	3,6	;RP1=1, select bank2
  4361  0FBC  009C               	movwf	measure_capacitance@Cin^(0+256)
  4362  0FBD  1283               	bcf	3,5	;RP0=0, select bank0
  4363  0FBE  1303               	bcf	3,6	;RP1=0, select bank0
  4364  0FBF  0839               	movf	?___ftmul+1,w
  4365  0FC0  1283               	bcf	3,5	;RP0=0, select bank2
  4366  0FC1  1703               	bsf	3,6	;RP1=1, select bank2
  4367  0FC2  009D               	movwf	(measure_capacitance@Cin+1)^(0+256)
  4368  0FC3  1283               	bcf	3,5	;RP0=0, select bank0
  4369  0FC4  1303               	bcf	3,6	;RP1=0, select bank0
  4370  0FC5  083A               	movf	?___ftmul+2,w
  4371  0FC6  1283               	bcf	3,5	;RP0=0, select bank2
  4372  0FC7  1703               	bsf	3,6	;RP1=1, select bank2
  4373  0FC8  009E               	movwf	(measure_capacitance@Cin+2)^(0+256)
  4374                           
  4375                           ;LC-meter.c: 459: var = (unsigned short int)Cin;
  4376  0FC9  081C               	movf	measure_capacitance@Cin^(0+256),w
  4377  0FCA  1683               	bsf	3,5	;RP0=1, select bank1
  4378  0FCB  1303               	bcf	3,6	;RP1=0, select bank1
  4379  0FCC  00A0               	movwf	___fttol@f1^(0+128)
  4380  0FCD  1283               	bcf	3,5	;RP0=0, select bank2
  4381  0FCE  1703               	bsf	3,6	;RP1=1, select bank2
  4382  0FCF  081D               	movf	(measure_capacitance@Cin+1)^(0+256),w
  4383  0FD0  1683               	bsf	3,5	;RP0=1, select bank1
  4384  0FD1  1303               	bcf	3,6	;RP1=0, select bank1
  4385  0FD2  00A1               	movwf	(___fttol@f1+1)^(0+128)
  4386  0FD3  1283               	bcf	3,5	;RP0=0, select bank2
  4387  0FD4  1703               	bsf	3,6	;RP1=1, select bank2
  4388  0FD5  081E               	movf	(measure_capacitance@Cin+2)^(0+256),w
  4389  0FD6  1683               	bsf	3,5	;RP0=1, select bank1
  4390  0FD7  1303               	bcf	3,6	;RP1=0, select bank1
  4391  0FD8  00A2               	movwf	(___fttol@f1+2)^(0+128)
  4392  0FD9  160A  118A  2121  120A  158A  	fcall	___fttol
  4393  0FDE  1683               	bsf	3,5	;RP0=1, select bank1
  4394  0FDF  1303               	bcf	3,6	;RP1=0, select bank1
  4395  0FE0  0821               	movf	(?___fttol^(0+128)+1),w
  4396  0FE1  1283               	bcf	3,5	;RP0=0, select bank2
  4397  0FE2  1703               	bsf	3,6	;RP1=1, select bank2
  4398  0FE3  009B               	movwf	(measure_capacitance@var+1)^(0+256)
  4399  0FE4  1683               	bsf	3,5	;RP0=1, select bank1
  4400  0FE5  1303               	bcf	3,6	;RP1=0, select bank1
  4401  0FE6  0820               	movf	?___fttol^(0+128),w
  4402  0FE7  1283               	bcf	3,5	;RP0=0, select bank2
  4403  0FE8  1703               	bsf	3,6	;RP1=1, select bank2
  4404  0FE9  009A               	movwf	measure_capacitance@var^(0+256)
  4405                           
  4406                           ;LC-meter.c: 461: print_reading(var);
  4407  0FEA  081B               	movf	(measure_capacitance@var+1)^(0+256),w
  4408  0FEB  1283               	bcf	3,5	;RP0=0, select bank0
  4409  0FEC  1303               	bcf	3,6	;RP1=0, select bank0
  4410  0FED  00A1               	movwf	print_reading@measurement+1
  4411  0FEE  1283               	bcf	3,5	;RP0=0, select bank2
  4412  0FEF  1703               	bsf	3,6	;RP1=1, select bank2
  4413  0FF0  081A               	movf	measure_capacitance@var^(0+256),w
  4414  0FF1  1283               	bcf	3,5	;RP0=0, select bank0
  4415  0FF2  1303               	bcf	3,6	;RP1=0, select bank0
  4416  0FF3  00A0               	movwf	print_reading@measurement
  4417  0FF4  120A  118A  27FD  120A  158A  	fcall	_print_reading
  4418                           
  4419                           ;LC-meter.c: 462: print_unit(unit);
  4420  0FF9  1283               	bcf	3,5	;RP0=0, select bank2
  4421  0FFA  1703               	bsf	3,6	;RP1=1, select bank2
  4422  0FFB  0819               	movf	measure_capacitance@unit^(0+256),w
  4423  0FFC  120A  118A  27FC   	fcall	_print_unit
  4424  0FFF  0008               	return
  4425  1000                     __end_of_measure_capacitance:	
  4426                           
  4427                           	psect	text5
  4428  07FC                     __ptext5:	
  4429 ;; *************** function _print_unit *****************
  4430 ;; Defined at:
  4431 ;;		line 408 in file "../../../src/print.c"
  4432 ;; Parameters:    Size  Location     Type
  4433 ;;  unit            1    wreg     unsigned char 
  4434 ;; Auto vars:     Size  Location     Type
  4435 ;;  unit            1    0[COMMON] unsigned char 
  4436 ;; Return value:  Size  Location     Type
  4437 ;;		None               void
  4438 ;; Registers used:
  4439 ;;		wreg
  4440 ;; Tracked objects:
  4441 ;;		On entry : 0/0
  4442 ;;		On exit  : 0/0
  4443 ;;		Unchanged: 0/0
  4444 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4445 ;;      Params:         0       0       0       0       0
  4446 ;;      Locals:         0       0       0       0       0
  4447 ;;      Temps:          0       0       0       0       0
  4448 ;;      Totals:         0       0       0       0       0
  4449 ;;Total ram usage:        0 bytes
  4450 ;; Hardware stack levels used:    1
  4451 ;; Hardware stack levels required when called:    1
  4452 ;; This function calls:
  4453 ;;		Nothing
  4454 ;; This function is called by:
  4455 ;;		_measure_capacitance
  4456 ;;		_measure_inductance
  4457 ;; This function uses a non-reentrant model
  4458 ;;
  4459                           
  4460                           
  4461                           ;psect for function _print_unit
  4462  07FC                     _print_unit:	
  4463                           
  4464                           ;incstack = 0
  4465                           ; Regs used in _print_unit: [wreg]
  4466  07FC  0008               	return
  4467  07FD                     __end_of_print_unit:	
  4468                           
  4469                           	psect	text6
  4470  07FD                     __ptext6:	
  4471 ;; *************** function _print_reading *****************
  4472 ;; Defined at:
  4473 ;;		line 429 in file "../../../src/print.c"
  4474 ;; Parameters:    Size  Location     Type
  4475 ;;  measurement     2    0[BANK0 ] unsigned short 
  4476 ;; Auto vars:     Size  Location     Type
  4477 ;;		None
  4478 ;; Return value:  Size  Location     Type
  4479 ;;		None               void
  4480 ;; Registers used:
  4481 ;;		None
  4482 ;; Tracked objects:
  4483 ;;		On entry : 0/0
  4484 ;;		On exit  : 0/0
  4485 ;;		Unchanged: 0/0
  4486 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4487 ;;      Params:         0       2       0       0       0
  4488 ;;      Locals:         0       0       0       0       0
  4489 ;;      Temps:          0       0       0       0       0
  4490 ;;      Totals:         0       2       0       0       0
  4491 ;;Total ram usage:        2 bytes
  4492 ;; Hardware stack levels used:    1
  4493 ;; Hardware stack levels required when called:    1
  4494 ;; This function calls:
  4495 ;;		Nothing
  4496 ;; This function is called by:
  4497 ;;		_measure_capacitance
  4498 ;;		_measure_inductance
  4499 ;; This function uses a non-reentrant model
  4500 ;;
  4501                           
  4502                           
  4503                           ;psect for function _print_reading
  4504  07FD                     _print_reading:	
  4505                           
  4506                           ;incstack = 0
  4507                           ; Regs used in _print_reading: []
  4508  07FD  0008               	return
  4509  07FE                     __end_of_print_reading:	
  4510                           
  4511                           	psect	text7
  4512  1D3E                     __ptext7:	
  4513 ;; *************** function _format_xint32 *****************
  4514 ;; Defined at:
  4515 ;;		line 48 in file "../../../lib/format.c"
  4516 ;; Parameters:    Size  Location     Type
  4517 ;;  x               4   52[BANK0 ] unsigned long 
  4518 ;; Auto vars:     Size  Location     Type
  4519 ;;		None
  4520 ;; Return value:  Size  Location     Type
  4521 ;;		None               void
  4522 ;; Registers used:
  4523 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4524 ;; Tracked objects:
  4525 ;;		On entry : 0/0
  4526 ;;		On exit  : 0/0
  4527 ;;		Unchanged: 0/0
  4528 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4529 ;;      Params:         0       4       0       0       0
  4530 ;;      Locals:         0       0       0       0       0
  4531 ;;      Temps:          0       6       0       0       0
  4532 ;;      Totals:         0      10       0       0       0
  4533 ;;Total ram usage:       10 bytes
  4534 ;; Hardware stack levels used:    1
  4535 ;; Hardware stack levels required when called:    4
  4536 ;; This function calls:
  4537 ;;		_format_number
  4538 ;;		_format_putchar
  4539 ;;		_output_putch
  4540 ;;		_ser_putch
  4541 ;; This function is called by:
  4542 ;;		_measure_capacitance
  4543 ;; This function uses a non-reentrant model
  4544 ;;
  4545                           
  4546                           
  4547                           ;psect for function _format_xint32
  4548  1D3E                     _format_xint32:	
  4549                           
  4550                           ;format.c: 49: putchar_ptr('0');
  4551                           
  4552                           ;incstack = 0
  4553                           ; Regs used in _format_xint32: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4554  1D3E  3030               	movlw	48
  4555  1D3F  1283               	bcf	3,5	;RP0=0, select bank0
  4556  1D40  1303               	bcf	3,6	;RP1=0, select bank0
  4557  1D41  00D8               	movwf	??_format_xint32
  4558  1D42  0858               	movf	??_format_xint32,w
  4559  1D43  00A0               	movwf	format_putchar@c
  4560  1D44  0879               	movf	_putchar_ptr,w
  4561  1D45  120A  118A  2100  160A  158A  	fcall	fptable
  4562                           
  4563                           ;format.c: 50: putchar_ptr('x');
  4564  1D4A  3078               	movlw	120
  4565  1D4B  1283               	bcf	3,5	;RP0=0, select bank0
  4566  1D4C  1303               	bcf	3,6	;RP1=0, select bank0
  4567  1D4D  00D8               	movwf	??_format_xint32
  4568  1D4E  0858               	movf	??_format_xint32,w
  4569  1D4F  00A0               	movwf	format_putchar@c
  4570  1D50  0879               	movf	_putchar_ptr,w
  4571  1D51  120A  118A  2100  160A  158A  	fcall	fptable
  4572                           
  4573                           ;format.c: 51: format_number(x >> 16, 16, -4);
  4574  1D56  1283               	bcf	3,5	;RP0=0, select bank0
  4575  1D57  1303               	bcf	3,6	;RP1=0, select bank0
  4576  1D58  0854               	movf	format_xint32@x,w
  4577  1D59  00D8               	movwf	??_format_xint32
  4578  1D5A  0855               	movf	format_xint32@x+1,w
  4579  1D5B  00D9               	movwf	??_format_xint32+1
  4580  1D5C  0856               	movf	format_xint32@x+2,w
  4581  1D5D  00DA               	movwf	??_format_xint32+2
  4582  1D5E  0857               	movf	format_xint32@x+3,w
  4583  1D5F  00DB               	movwf	??_format_xint32+3
  4584  1D60  3010               	movlw	16
  4585  1D61                     u5225:	
  4586  1D61  1003               	clrc
  4587  1D62  0CDB               	rrf	??_format_xint32+3,f
  4588  1D63  0CDA               	rrf	??_format_xint32+2,f
  4589  1D64  0CD9               	rrf	??_format_xint32+1,f
  4590  1D65  0CD8               	rrf	??_format_xint32,f
  4591  1D66  3EFF               	addlw	-1
  4592  1D67  1D03               	skipz
  4593  1D68  2D61               	goto	u5225
  4594  1D69  0859               	movf	??_format_xint32+1,w
  4595  1D6A  00A9               	movwf	format_number@n+1
  4596  1D6B  0858               	movf	??_format_xint32,w
  4597  1D6C  00A8               	movwf	format_number@n
  4598  1D6D  3010               	movlw	16
  4599  1D6E  00DC               	movwf	??_format_xint32+4
  4600  1D6F  085C               	movf	??_format_xint32+4,w
  4601  1D70  00AA               	movwf	format_number@base
  4602  1D71  30FC               	movlw	252
  4603  1D72  00DD               	movwf	??_format_xint32+5
  4604  1D73  085D               	movf	??_format_xint32+5,w
  4605  1D74  00AB               	movwf	format_number@pad
  4606  1D75  160A  118A  2095  160A  158A  	fcall	_format_number
  4607                           
  4608                           ;format.c: 52: format_number(x & 0xffff, 16, -4);
  4609  1D7A  1283               	bcf	3,5	;RP0=0, select bank0
  4610  1D7B  1303               	bcf	3,6	;RP1=0, select bank0
  4611  1D7C  0855               	movf	format_xint32@x+1,w
  4612  1D7D  00A9               	movwf	format_number@n+1
  4613  1D7E  0854               	movf	format_xint32@x,w
  4614  1D7F  00A8               	movwf	format_number@n
  4615  1D80  3010               	movlw	16
  4616  1D81  00D8               	movwf	??_format_xint32
  4617  1D82  0858               	movf	??_format_xint32,w
  4618  1D83  00AA               	movwf	format_number@base
  4619  1D84  30FC               	movlw	252
  4620  1D85  00D9               	movwf	??_format_xint32+1
  4621  1D86  0859               	movf	??_format_xint32+1,w
  4622  1D87  00AB               	movwf	format_number@pad
  4623  1D88  160A  118A  2095   	fcall	_format_number
  4624  1D8B  0008               	return
  4625  1D8C                     __end_of_format_xint32:	
  4626                           
  4627                           	psect	text8
  4628  1095                     __ptext8:	
  4629 ;; *************** function _format_number *****************
  4630 ;; Defined at:
  4631 ;;		line 14 in file "../../../lib/format.c"
  4632 ;; Parameters:    Size  Location     Type
  4633 ;;  n               2    8[BANK0 ] unsigned short 
  4634 ;;  base            1   10[BANK0 ] unsigned char 
  4635 ;;  pad             1   11[BANK0 ] char 
  4636 ;; Auto vars:     Size  Location     Type
  4637 ;;  buf            32   15[BANK0 ] unsigned char [32]
  4638 ;;  i               1   51[BANK0 ] char 
  4639 ;;  di              1   50[BANK0 ] unsigned char 
  4640 ;;  padchar         1   49[BANK0 ] unsigned char 
  4641 ;; Return value:  Size  Location     Type
  4642 ;;		None               void
  4643 ;; Registers used:
  4644 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4645 ;; Tracked objects:
  4646 ;;		On entry : 0/0
  4647 ;;		On exit  : 0/0
  4648 ;;		Unchanged: 0/0
  4649 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4650 ;;      Params:         0       4       0       0       0
  4651 ;;      Locals:         0      37       0       0       0
  4652 ;;      Temps:          0       3       0       0       0
  4653 ;;      Totals:         0      44       0       0       0
  4654 ;;Total ram usage:       44 bytes
  4655 ;; Hardware stack levels used:    1
  4656 ;; Hardware stack levels required when called:    3
  4657 ;; This function calls:
  4658 ;;		___lwdiv
  4659 ;;		___lwmod
  4660 ;;		_format_putchar
  4661 ;;		_output_putch
  4662 ;;		_ser_putch
  4663 ;; This function is called by:
  4664 ;;		_format_xint32
  4665 ;;		_testloop
  4666 ;; This function uses a non-reentrant model
  4667 ;;
  4668                           
  4669                           
  4670                           ;psect for function _format_number
  4671  1095                     _format_number:	
  4672                           
  4673                           ;format.c: 15: char buf[8 * sizeof(long)];
  4674                           ;format.c: 16: unsigned char di;
  4675                           ;format.c: 17: signed char i = 0;
  4676                           
  4677                           ;incstack = 0
  4678                           ; Regs used in _format_number: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4679  1095  1283               	bcf	3,5	;RP0=0, select bank0
  4680  1096  1303               	bcf	3,6	;RP1=0, select bank0
  4681  1097  01D3               	clrf	format_number@i
  4682                           
  4683                           ;format.c: 18: char padchar = ' ';
  4684  1098  3020               	movlw	32
  4685  1099  00AC               	movwf	??_format_number
  4686  109A  082C               	movf	??_format_number,w
  4687  109B  00D1               	movwf	format_number@padchar
  4688                           
  4689                           ;format.c: 20: if(pad < 0) {
  4690  109C  1FAB               	btfss	format_number@pad,7
  4691  109D  28A4               	goto	l3994
  4692                           
  4693                           ;format.c: 21: pad = -pad;
  4694  109E  09AB               	comf	format_number@pad,f
  4695  109F  0AAB               	incf	format_number@pad,f
  4696                           
  4697                           ;format.c: 22: padchar = '0';
  4698  10A0  3030               	movlw	48
  4699  10A1  00AC               	movwf	??_format_number
  4700  10A2  082C               	movf	??_format_number,w
  4701  10A3  00D1               	movwf	format_number@padchar
  4702  10A4                     l3994:	
  4703                           ;format.c: 23: }
  4704                           ;format.c: 30: do {
  4705                           
  4706                           
  4707                           ;format.c: 34: di = n % base;
  4708  10A4  082A               	movf	format_number@base,w
  4709  10A5  00AC               	movwf	??_format_number
  4710  10A6  01AD               	clrf	??_format_number+1
  4711  10A7  082C               	movf	??_format_number,w
  4712  10A8  00A0               	movwf	___lwmod@divisor
  4713  10A9  082D               	movf	??_format_number+1,w
  4714  10AA  00A1               	movwf	___lwmod@divisor+1
  4715  10AB  0829               	movf	format_number@n+1,w
  4716  10AC  00A3               	movwf	___lwmod@dividend+1
  4717  10AD  0828               	movf	format_number@n,w
  4718  10AE  00A2               	movwf	___lwmod@dividend
  4719  10AF  160A  158A  248A  160A  118A  	fcall	___lwmod
  4720  10B4  1283               	bcf	3,5	;RP0=0, select bank0
  4721  10B5  1303               	bcf	3,6	;RP1=0, select bank0
  4722  10B6  0820               	movf	?___lwmod,w
  4723  10B7  00AE               	movwf	??_format_number+2
  4724  10B8  082E               	movf	??_format_number+2,w
  4725  10B9  00D2               	movwf	format_number@di
  4726                           
  4727                           ;format.c: 35: buf[i++] = (di < 10 ? (unsigned char)'0' + di : (unsigned char)'A' + di -
      +                           10);
  4728  10BA  300A               	movlw	10
  4729  10BB  0252               	subwf	format_number@di,w
  4730  10BC  1C03               	skipc
  4731  10BD  28C1               	goto	l4000
  4732  10BE  0852               	movf	format_number@di,w
  4733  10BF  3E37               	addlw	55
  4734  10C0  28C3               	goto	L5
  4735  10C1                     l4000:	
  4736  10C1  0852               	movf	format_number@di,w
  4737  10C2  3E30               	addlw	48
  4738  10C3                     L5:	
  4739  10C3  00CF               	movwf	_format_number$296
  4740  10C4  3000               	movlw	0
  4741  10C5  1803               	skipnc
  4742  10C6  3001               	movlw	1
  4743  10C7  00D0               	movwf	_format_number$296+1
  4744  10C8  084F               	movf	_format_number$296,w
  4745  10C9  00AC               	movwf	??_format_number
  4746  10CA  0853               	movf	format_number@i,w
  4747  10CB  3E2F               	addlw	(low (format_number@buf| 0))& (0+255)
  4748  10CC  0084               	movwf	4
  4749  10CD  082C               	movf	??_format_number,w
  4750  10CE  1383               	bcf	3,7	;select IRP bank0
  4751  10CF  0080               	movwf	0
  4752  10D0  3001               	movlw	1
  4753  10D1  00AC               	movwf	??_format_number
  4754  10D2  082C               	movf	??_format_number,w
  4755  10D3  07D3               	addwf	format_number@i,f
  4756                           
  4757                           ;format.c: 37: n /= base;
  4758  10D4  082A               	movf	format_number@base,w
  4759  10D5  00AC               	movwf	??_format_number
  4760  10D6  01AD               	clrf	??_format_number+1
  4761  10D7  082C               	movf	??_format_number,w
  4762  10D8  00A0               	movwf	___lwdiv@divisor
  4763  10D9  082D               	movf	??_format_number+1,w
  4764  10DA  00A1               	movwf	___lwdiv@divisor+1
  4765  10DB  0829               	movf	format_number@n+1,w
  4766  10DC  00A3               	movwf	___lwdiv@dividend+1
  4767  10DD  0828               	movf	format_number@n,w
  4768  10DE  00A2               	movwf	___lwdiv@dividend
  4769  10DF  160A  158A  24BE  160A  118A  	fcall	___lwdiv
  4770  10E4  1283               	bcf	3,5	;RP0=0, select bank0
  4771  10E5  1303               	bcf	3,6	;RP1=0, select bank0
  4772  10E6  0821               	movf	?___lwdiv+1,w
  4773  10E7  00A9               	movwf	format_number@n+1
  4774  10E8  0820               	movf	?___lwdiv,w
  4775  10E9  00A8               	movwf	format_number@n
  4776                           
  4777                           ;format.c: 38: } while(n > 0);
  4778  10EA  0828               	movf	format_number@n,w
  4779  10EB  0429               	iorwf	format_number@n+1,w
  4780  10EC  1903               	btfsc	3,2
  4781  10ED  28F9               	goto	l4012
  4782  10EE  28A4               	goto	l3994
  4783  10EF                     l4010:	
  4784                           ;format.c: 40: while(pad-- > i) putchar_ptr(padchar);
  4785                           
  4786  10EF  0851               	movf	format_number@padchar,w
  4787  10F0  00AC               	movwf	??_format_number
  4788  10F1  082C               	movf	??_format_number,w
  4789  10F2  00A0               	movwf	format_putchar@c
  4790  10F3  0879               	movf	_putchar_ptr,w
  4791  10F4  120A  118A  2100  160A  118A  	fcall	fptable
  4792  10F9                     l4012:	
  4793  10F9  1283               	bcf	3,5	;RP0=0, select bank0
  4794  10FA  1303               	bcf	3,6	;RP1=0, select bank0
  4795  10FB  0853               	movf	format_number@i,w
  4796  10FC  3A80               	xorlw	128
  4797  10FD  00AC               	movwf	??_format_number
  4798  10FE  30FF               	movlw	-1
  4799  10FF  07AB               	addwf	format_number@pad,f
  4800  1100  3001               	movlw	1
  4801  1101  072B               	addwf	format_number@pad,w
  4802  1102  3A80               	xorlw	128
  4803  1103  02AC               	subwf	??_format_number,f
  4804  1104  1C03               	skipc
  4805  1105  28EF               	goto	l4010
  4806  1106                     L6:	
  4807                           
  4808                           ;format.c: 42: for(; i > 0; i--) putchar_ptr((char)buf[(signed short int)i - 1]);
  4809  1106  0853               	movf	format_number@i,w
  4810  1107  3A80               	xorlw	128
  4811  1108  3E7F               	addlw	-129
  4812  1109  1C03               	btfss	3,0
  4813  110A  0008               	return
  4814  110B  0853               	movf	format_number@i,w
  4815  110C  3EFF               	addlw	255
  4816  110D  3E2F               	addlw	(low (format_number@buf| 0))& (0+255)
  4817  110E  0084               	movwf	4
  4818  110F  1383               	bcf	3,7	;select IRP bank0
  4819  1110  0800               	movf	0,w
  4820  1111  00AC               	movwf	??_format_number
  4821  1112  082C               	movf	??_format_number,w
  4822  1113  00A0               	movwf	format_putchar@c
  4823  1114  0879               	movf	_putchar_ptr,w
  4824  1115  120A  118A  2100  160A  118A  	fcall	fptable
  4825  111A  30FF               	movlw	255
  4826  111B  1283               	bcf	3,5	;RP0=0, select bank0
  4827  111C  1303               	bcf	3,6	;RP1=0, select bank0
  4828  111D  00AC               	movwf	??_format_number
  4829  111E  082C               	movf	??_format_number,w
  4830  111F  07D3               	addwf	format_number@i,f
  4831  1120  2906               	goto	L6
  4832  1121                     __end_of_format_number:	
  4833                           
  4834                           	psect	text9
  4835  1C8A                     __ptext9:	
  4836 ;; *************** function ___lwmod *****************
  4837 ;; Defined at:
  4838 ;;		line 6 in file "/opt/microchip/xc8/v1.34/sources/common/lwmod.c"
  4839 ;; Parameters:    Size  Location     Type
  4840 ;;  divisor         2    0[BANK0 ] unsigned int 
  4841 ;;  dividend        2    2[BANK0 ] unsigned int 
  4842 ;; Auto vars:     Size  Location     Type
  4843 ;;  counter         1    5[BANK0 ] unsigned char 
  4844 ;; Return value:  Size  Location     Type
  4845 ;;                  2    0[BANK0 ] unsigned int 
  4846 ;; Registers used:
  4847 ;;		wreg, status,2, status,0
  4848 ;; Tracked objects:
  4849 ;;		On entry : 0/0
  4850 ;;		On exit  : 0/0
  4851 ;;		Unchanged: 0/0
  4852 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4853 ;;      Params:         0       4       0       0       0
  4854 ;;      Locals:         0       1       0       0       0
  4855 ;;      Temps:          0       1       0       0       0
  4856 ;;      Totals:         0       6       0       0       0
  4857 ;;Total ram usage:        6 bytes
  4858 ;; Hardware stack levels used:    1
  4859 ;; Hardware stack levels required when called:    1
  4860 ;; This function calls:
  4861 ;;		Nothing
  4862 ;; This function is called by:
  4863 ;;		_format_number
  4864 ;; This function uses a non-reentrant model
  4865 ;;
  4866                           
  4867                           
  4868                           ;psect for function ___lwmod
  4869  1C8A                     ___lwmod:	
  4870                           
  4871                           ;incstack = 0
  4872                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  4873  1C8A  1283               	bcf	3,5	;RP0=0, select bank0
  4874  1C8B  1303               	bcf	3,6	;RP1=0, select bank0
  4875  1C8C  0820               	movf	___lwmod@divisor,w
  4876  1C8D  0421               	iorwf	___lwmod@divisor+1,w
  4877  1C8E  1903               	btfsc	3,2
  4878  1C8F  2CB9               	goto	l3926
  4879  1C90  01A5               	clrf	___lwmod@counter
  4880  1C91  0AA5               	incf	___lwmod@counter,f
  4881  1C92                     l3916:	
  4882  1C92  1BA1               	btfsc	___lwmod@divisor+1,7
  4883  1C93  2CA0               	goto	l3918
  4884  1C94  3001               	movlw	1
  4885  1C95                     u4875:	
  4886  1C95  1003               	clrc
  4887  1C96  0DA0               	rlf	___lwmod@divisor,f
  4888  1C97  0DA1               	rlf	___lwmod@divisor+1,f
  4889  1C98  3EFF               	addlw	-1
  4890  1C99  1D03               	skipz
  4891  1C9A  2C95               	goto	u4875
  4892  1C9B  3001               	movlw	1
  4893  1C9C  00A4               	movwf	??___lwmod
  4894  1C9D  0824               	movf	??___lwmod,w
  4895  1C9E  07A5               	addwf	___lwmod@counter,f
  4896  1C9F  2C92               	goto	l3916
  4897  1CA0                     l3918:	
  4898  1CA0  0821               	movf	___lwmod@divisor+1,w
  4899  1CA1  0223               	subwf	___lwmod@dividend+1,w
  4900  1CA2  1D03               	skipz
  4901  1CA3  2CA6               	goto	u4895
  4902  1CA4  0820               	movf	___lwmod@divisor,w
  4903  1CA5  0222               	subwf	___lwmod@dividend,w
  4904  1CA6                     u4895:	
  4905  1CA6  1C03               	skipc
  4906  1CA7  2CAE               	goto	l3922
  4907  1CA8  0820               	movf	___lwmod@divisor,w
  4908  1CA9  02A2               	subwf	___lwmod@dividend,f
  4909  1CAA  0821               	movf	___lwmod@divisor+1,w
  4910  1CAB  1C03               	skipc
  4911  1CAC  03A3               	decf	___lwmod@dividend+1,f
  4912  1CAD  02A3               	subwf	___lwmod@dividend+1,f
  4913  1CAE                     l3922:	
  4914  1CAE  3001               	movlw	1
  4915  1CAF                     u4905:	
  4916  1CAF  1003               	clrc
  4917  1CB0  0CA1               	rrf	___lwmod@divisor+1,f
  4918  1CB1  0CA0               	rrf	___lwmod@divisor,f
  4919  1CB2  3EFF               	addlw	-1
  4920  1CB3  1D03               	skipz
  4921  1CB4  2CAF               	goto	u4905
  4922  1CB5  3001               	movlw	1
  4923  1CB6  02A5               	subwf	___lwmod@counter,f
  4924  1CB7  1D03               	btfss	3,2
  4925  1CB8  2CA0               	goto	l3918
  4926  1CB9                     l3926:	
  4927  1CB9  0823               	movf	___lwmod@dividend+1,w
  4928  1CBA  00A1               	movwf	?___lwmod+1
  4929  1CBB  0822               	movf	___lwmod@dividend,w
  4930  1CBC  00A0               	movwf	?___lwmod
  4931  1CBD  0008               	return
  4932  1CBE                     __end_of___lwmod:	
  4933                           
  4934                           	psect	text10
  4935  1CBE                     __ptext10:	
  4936 ;; *************** function ___lwdiv *****************
  4937 ;; Defined at:
  4938 ;;		line 6 in file "/opt/microchip/xc8/v1.34/sources/common/lwdiv.c"
  4939 ;; Parameters:    Size  Location     Type
  4940 ;;  divisor         2    0[BANK0 ] unsigned int 
  4941 ;;  dividend        2    2[BANK0 ] unsigned int 
  4942 ;; Auto vars:     Size  Location     Type
  4943 ;;  quotient        2    6[BANK0 ] unsigned int 
  4944 ;;  counter         1    5[BANK0 ] unsigned char 
  4945 ;; Return value:  Size  Location     Type
  4946 ;;                  2    0[BANK0 ] unsigned int 
  4947 ;; Registers used:
  4948 ;;		wreg, status,2, status,0
  4949 ;; Tracked objects:
  4950 ;;		On entry : 0/0
  4951 ;;		On exit  : 0/0
  4952 ;;		Unchanged: 0/0
  4953 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4954 ;;      Params:         0       4       0       0       0
  4955 ;;      Locals:         0       3       0       0       0
  4956 ;;      Temps:          0       1       0       0       0
  4957 ;;      Totals:         0       8       0       0       0
  4958 ;;Total ram usage:        8 bytes
  4959 ;; Hardware stack levels used:    1
  4960 ;; Hardware stack levels required when called:    1
  4961 ;; This function calls:
  4962 ;;		Nothing
  4963 ;; This function is called by:
  4964 ;;		_format_number
  4965 ;; This function uses a non-reentrant model
  4966 ;;
  4967                           
  4968                           
  4969                           ;psect for function ___lwdiv
  4970  1CBE                     ___lwdiv:	
  4971                           
  4972                           ;incstack = 0
  4973                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  4974  1CBE  1283               	bcf	3,5	;RP0=0, select bank0
  4975  1CBF  1303               	bcf	3,6	;RP1=0, select bank0
  4976  1CC0  01A6               	clrf	___lwdiv@quotient
  4977  1CC1  01A7               	clrf	___lwdiv@quotient+1
  4978  1CC2  0820               	movf	___lwdiv@divisor,w
  4979  1CC3  0421               	iorwf	___lwdiv@divisor+1,w
  4980  1CC4  1903               	btfsc	3,2
  4981  1CC5  2CF7               	goto	l3904
  4982  1CC6  01A5               	clrf	___lwdiv@counter
  4983  1CC7  0AA5               	incf	___lwdiv@counter,f
  4984  1CC8                     l3892:	
  4985  1CC8  1BA1               	btfsc	___lwdiv@divisor+1,7
  4986  1CC9  2CD6               	goto	l3894
  4987  1CCA  3001               	movlw	1
  4988  1CCB                     u4805:	
  4989  1CCB  1003               	clrc
  4990  1CCC  0DA0               	rlf	___lwdiv@divisor,f
  4991  1CCD  0DA1               	rlf	___lwdiv@divisor+1,f
  4992  1CCE  3EFF               	addlw	-1
  4993  1CCF  1D03               	skipz
  4994  1CD0  2CCB               	goto	u4805
  4995  1CD1  3001               	movlw	1
  4996  1CD2  00A4               	movwf	??___lwdiv
  4997  1CD3  0824               	movf	??___lwdiv,w
  4998  1CD4  07A5               	addwf	___lwdiv@counter,f
  4999  1CD5  2CC8               	goto	l3892
  5000  1CD6                     l3894:	
  5001  1CD6  3001               	movlw	1
  5002  1CD7                     u4825:	
  5003  1CD7  1003               	clrc
  5004  1CD8  0DA6               	rlf	___lwdiv@quotient,f
  5005  1CD9  0DA7               	rlf	___lwdiv@quotient+1,f
  5006  1CDA  3EFF               	addlw	-1
  5007  1CDB  1D03               	skipz
  5008  1CDC  2CD7               	goto	u4825
  5009  1CDD  0821               	movf	___lwdiv@divisor+1,w
  5010  1CDE  0223               	subwf	___lwdiv@dividend+1,w
  5011  1CDF  1D03               	skipz
  5012  1CE0  2CE3               	goto	u4835
  5013  1CE1  0820               	movf	___lwdiv@divisor,w
  5014  1CE2  0222               	subwf	___lwdiv@dividend,w
  5015  1CE3                     u4835:	
  5016  1CE3  1C03               	skipc
  5017  1CE4  2CEC               	goto	l3900
  5018  1CE5  0820               	movf	___lwdiv@divisor,w
  5019  1CE6  02A2               	subwf	___lwdiv@dividend,f
  5020  1CE7  0821               	movf	___lwdiv@divisor+1,w
  5021  1CE8  1C03               	skipc
  5022  1CE9  03A3               	decf	___lwdiv@dividend+1,f
  5023  1CEA  02A3               	subwf	___lwdiv@dividend+1,f
  5024  1CEB  1426               	bsf	___lwdiv@quotient,0
  5025  1CEC                     l3900:	
  5026  1CEC  3001               	movlw	1
  5027  1CED                     u4845:	
  5028  1CED  1003               	clrc
  5029  1CEE  0CA1               	rrf	___lwdiv@divisor+1,f
  5030  1CEF  0CA0               	rrf	___lwdiv@divisor,f
  5031  1CF0  3EFF               	addlw	-1
  5032  1CF1  1D03               	skipz
  5033  1CF2  2CED               	goto	u4845
  5034  1CF3  3001               	movlw	1
  5035  1CF4  02A5               	subwf	___lwdiv@counter,f
  5036  1CF5  1D03               	btfss	3,2
  5037  1CF6  2CD6               	goto	l3894
  5038  1CF7                     l3904:	
  5039  1CF7  0827               	movf	___lwdiv@quotient+1,w
  5040  1CF8  00A1               	movwf	?___lwdiv+1
  5041  1CF9  0826               	movf	___lwdiv@quotient,w
  5042  1CFA  00A0               	movwf	?___lwdiv
  5043  1CFB  0008               	return
  5044  1CFC                     __end_of___lwdiv:	
  5045                           
  5046                           	psect	text11
  5047  1643                     __ptext11:	
  5048 ;; *************** function _format_double *****************
  5049 ;; Defined at:
  5050 ;;		line 74 in file "../../../lib/format.c"
  5051 ;; Parameters:    Size  Location     Type
  5052 ;;  num             3   60[BANK1 ] unsigned int 
  5053 ;; Auto vars:     Size  Location     Type
  5054 ;;  weight          3    9[BANK3 ] unsigned int 
  5055 ;;  m               2   14[BANK3 ] int 
  5056 ;;  digit           2   12[BANK3 ] short 
  5057 ;; Return value:  Size  Location     Type
  5058 ;;		None               void
  5059 ;; Registers used:
  5060 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5061 ;; Tracked objects:
  5062 ;;		On entry : 0/0
  5063 ;;		On exit  : 0/0
  5064 ;;		Unchanged: 0/0
  5065 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5066 ;;      Params:         0       0       3       0       0
  5067 ;;      Locals:         0       0       0      16       0
  5068 ;;      Temps:          0       0       1       0       0
  5069 ;;      Totals:         0       0       4      16       0
  5070 ;;Total ram usage:       20 bytes
  5071 ;; Hardware stack levels used:    1
  5072 ;; Hardware stack levels required when called:    6
  5073 ;; This function calls:
  5074 ;;		___awtoft
  5075 ;;		___ftdiv
  5076 ;;		___ftge
  5077 ;;		___ftmul
  5078 ;;		___ftsub
  5079 ;;		___fttol
  5080 ;;		_floor
  5081 ;;		_format_putchar
  5082 ;;		_log10
  5083 ;;		_output_putch
  5084 ;;		_pow
  5085 ;;		_ser_putch
  5086 ;; This function is called by:
  5087 ;;		_measure_capacitance
  5088 ;; This function uses a non-reentrant model
  5089 ;;
  5090                           
  5091                           
  5092                           ;psect for function _format_double
  5093  1643                     _format_double:	
  5094                           
  5095                           ;format.c: 75: int m = log10(num);
  5096                           
  5097                           ;incstack = 0
  5098                           ; Regs used in _format_double: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5099  1643  1683               	bsf	3,5	;RP0=1, select bank1
  5100  1644  1303               	bcf	3,6	;RP1=0, select bank1
  5101  1645  085C               	movf	format_double@num^(0+128),w
  5102  1646  1283               	bcf	3,5	;RP0=0, select bank0
  5103  1647  1303               	bcf	3,6	;RP1=0, select bank0
  5104  1648  00E8               	movwf	log10@x
  5105  1649  1683               	bsf	3,5	;RP0=1, select bank1
  5106  164A  1303               	bcf	3,6	;RP1=0, select bank1
  5107  164B  085D               	movf	(format_double@num+1)^(0+128),w
  5108  164C  1283               	bcf	3,5	;RP0=0, select bank0
  5109  164D  1303               	bcf	3,6	;RP1=0, select bank0
  5110  164E  00E9               	movwf	log10@x+1
  5111  164F  1683               	bsf	3,5	;RP0=1, select bank1
  5112  1650  1303               	bcf	3,6	;RP1=0, select bank1
  5113  1651  085E               	movf	(format_double@num+2)^(0+128),w
  5114  1652  1283               	bcf	3,5	;RP0=0, select bank0
  5115  1653  1303               	bcf	3,6	;RP1=0, select bank0
  5116  1654  00EA               	movwf	log10@x+2
  5117  1655  160A  158A  242E  160A  118A  	fcall	_log10
  5118  165A  1283               	bcf	3,5	;RP0=0, select bank0
  5119  165B  1303               	bcf	3,6	;RP1=0, select bank0
  5120  165C  0868               	movf	?_log10,w
  5121  165D  1683               	bsf	3,5	;RP0=1, select bank1
  5122  165E  1303               	bcf	3,6	;RP1=0, select bank1
  5123  165F  00A0               	movwf	___fttol@f1^(0+128)
  5124  1660  1283               	bcf	3,5	;RP0=0, select bank0
  5125  1661  1303               	bcf	3,6	;RP1=0, select bank0
  5126  1662  0869               	movf	?_log10+1,w
  5127  1663  1683               	bsf	3,5	;RP0=1, select bank1
  5128  1664  1303               	bcf	3,6	;RP1=0, select bank1
  5129  1665  00A1               	movwf	(___fttol@f1+1)^(0+128)
  5130  1666  1283               	bcf	3,5	;RP0=0, select bank0
  5131  1667  1303               	bcf	3,6	;RP1=0, select bank0
  5132  1668  086A               	movf	?_log10+2,w
  5133  1669  1683               	bsf	3,5	;RP0=1, select bank1
  5134  166A  1303               	bcf	3,6	;RP1=0, select bank1
  5135  166B  00A2               	movwf	(___fttol@f1+2)^(0+128)
  5136  166C  160A  118A  2121  160A  118A  	fcall	___fttol
  5137  1671  1683               	bsf	3,5	;RP0=1, select bank1
  5138  1672  1303               	bcf	3,6	;RP1=0, select bank1
  5139  1673  0821               	movf	(?___fttol^(0+128)+1),w
  5140  1674  1683               	bsf	3,5	;RP0=1, select bank3
  5141  1675  1703               	bsf	3,6	;RP1=1, select bank3
  5142  1676  00DD               	movwf	(format_double@m+1)^(0+384)
  5143  1677  1683               	bsf	3,5	;RP0=1, select bank1
  5144  1678  1303               	bcf	3,6	;RP1=0, select bank1
  5145  1679  0820               	movf	?___fttol^(0+128),w
  5146  167A  1683               	bsf	3,5	;RP0=1, select bank3
  5147  167B  1703               	bsf	3,6	;RP1=1, select bank3
  5148  167C  00DC               	movwf	format_double@m^(0+384)
  5149  167D                     l4170:	
  5150                           ;format.c: 76: short digit;
  5151                           ;format.c: 79: while(num > 0 + (sizeof(double) == sizeof(float) ? 3.05176e-05 : 1.192092
      +                          90e-07)) {
  5152                           
  5153  167D  3000               	movlw	0
  5154  167E  00D4               	movwf	_format_double$310^(0+384)
  5155  167F  3000               	movlw	0
  5156  1680  00D5               	movwf	(_format_double$310+1)^(0+384)
  5157  1681  3038               	movlw	56
  5158  1682  00D6               	movwf	(_format_double$310+2)^(0+384)
  5159  1683  0854               	movf	_format_double$310^(0+384),w
  5160  1684  1283               	bcf	3,5	;RP0=0, select bank0
  5161  1685  1303               	bcf	3,6	;RP1=0, select bank0
  5162  1686  00A0               	movwf	___ftge@ff1
  5163  1687  1683               	bsf	3,5	;RP0=1, select bank3
  5164  1688  1703               	bsf	3,6	;RP1=1, select bank3
  5165  1689  0855               	movf	(_format_double$310+1)^(0+384),w
  5166  168A  1283               	bcf	3,5	;RP0=0, select bank0
  5167  168B  1303               	bcf	3,6	;RP1=0, select bank0
  5168  168C  00A1               	movwf	___ftge@ff1+1
  5169  168D  1683               	bsf	3,5	;RP0=1, select bank3
  5170  168E  1703               	bsf	3,6	;RP1=1, select bank3
  5171  168F  0856               	movf	(_format_double$310+2)^(0+384),w
  5172  1690  1283               	bcf	3,5	;RP0=0, select bank0
  5173  1691  1303               	bcf	3,6	;RP1=0, select bank0
  5174  1692  00A2               	movwf	___ftge@ff1+2
  5175  1693  1683               	bsf	3,5	;RP0=1, select bank1
  5176  1694  1303               	bcf	3,6	;RP1=0, select bank1
  5177  1695  085C               	movf	format_double@num^(0+128),w
  5178  1696  1283               	bcf	3,5	;RP0=0, select bank0
  5179  1697  1303               	bcf	3,6	;RP1=0, select bank0
  5180  1698  00A3               	movwf	___ftge@ff2
  5181  1699  1683               	bsf	3,5	;RP0=1, select bank1
  5182  169A  1303               	bcf	3,6	;RP1=0, select bank1
  5183  169B  085D               	movf	(format_double@num+1)^(0+128),w
  5184  169C  1283               	bcf	3,5	;RP0=0, select bank0
  5185  169D  1303               	bcf	3,6	;RP1=0, select bank0
  5186  169E  00A4               	movwf	___ftge@ff2+1
  5187  169F  1683               	bsf	3,5	;RP0=1, select bank1
  5188  16A0  1303               	bcf	3,6	;RP1=0, select bank1
  5189  16A1  085E               	movf	(format_double@num+2)^(0+128),w
  5190  16A2  1283               	bcf	3,5	;RP0=0, select bank0
  5191  16A3  1303               	bcf	3,6	;RP1=0, select bank0
  5192  16A4  00A5               	movwf	___ftge@ff2+2
  5193  16A5  160A  158A  258C  160A  118A  	fcall	___ftge
  5194  16AA  1803               	btfsc	3,0
  5195  16AB  0008               	return
  5196                           
  5197                           ;format.c: 80: double weight = pow(10.0l, m);
  5198  16AC  1683               	bsf	3,5	;RP0=1, select bank3
  5199  16AD  1703               	bsf	3,6	;RP1=1, select bank3
  5200  16AE  085D               	movf	(format_double@m+1)^(0+384),w
  5201  16AF  1283               	bcf	3,5	;RP0=0, select bank0
  5202  16B0  1303               	bcf	3,6	;RP1=0, select bank0
  5203  16B1  00A9               	movwf	___awtoft@c+1
  5204  16B2  1683               	bsf	3,5	;RP0=1, select bank3
  5205  16B3  1703               	bsf	3,6	;RP1=1, select bank3
  5206  16B4  085C               	movf	format_double@m^(0+384),w
  5207  16B5  1283               	bcf	3,5	;RP0=0, select bank0
  5208  16B6  1303               	bcf	3,6	;RP1=0, select bank0
  5209  16B7  00A8               	movwf	___awtoft@c
  5210  16B8  120A  118A  27D5  160A  118A  	fcall	___awtoft
  5211  16BD  1283               	bcf	3,5	;RP0=0, select bank0
  5212  16BE  1303               	bcf	3,6	;RP1=0, select bank0
  5213  16BF  0828               	movf	?___awtoft,w
  5214  16C0  1683               	bsf	3,5	;RP0=1, select bank3
  5215  16C1  1703               	bsf	3,6	;RP1=1, select bank3
  5216  16C2  00CE               	movwf	_format_double$831^(0+384)
  5217  16C3  1283               	bcf	3,5	;RP0=0, select bank0
  5218  16C4  1303               	bcf	3,6	;RP1=0, select bank0
  5219  16C5  0829               	movf	?___awtoft+1,w
  5220  16C6  1683               	bsf	3,5	;RP0=1, select bank3
  5221  16C7  1703               	bsf	3,6	;RP1=1, select bank3
  5222  16C8  00CF               	movwf	(_format_double$831+1)^(0+384)
  5223  16C9  1283               	bcf	3,5	;RP0=0, select bank0
  5224  16CA  1303               	bcf	3,6	;RP1=0, select bank0
  5225  16CB  082A               	movf	?___awtoft+2,w
  5226  16CC  1683               	bsf	3,5	;RP0=1, select bank3
  5227  16CD  1703               	bsf	3,6	;RP1=1, select bank3
  5228  16CE  00D0               	movwf	(_format_double$831+2)^(0+384)
  5229                           
  5230                           ;format.c: 80: double weight = pow(10.0l, m);
  5231  16CF  3000               	movlw	0
  5232  16D0  1683               	bsf	3,5	;RP0=1, select bank1
  5233  16D1  1303               	bcf	3,6	;RP1=0, select bank1
  5234  16D2  00CA               	movwf	pow@x^(0+128)
  5235  16D3  3020               	movlw	32
  5236  16D4  00CB               	movwf	(pow@x+1)^(0+128)
  5237  16D5  3041               	movlw	65
  5238  16D6  00CC               	movwf	(pow@x+2)^(0+128)
  5239  16D7  1683               	bsf	3,5	;RP0=1, select bank3
  5240  16D8  1703               	bsf	3,6	;RP1=1, select bank3
  5241  16D9  084E               	movf	_format_double$831^(0+384),w
  5242  16DA  1683               	bsf	3,5	;RP0=1, select bank1
  5243  16DB  1303               	bcf	3,6	;RP1=0, select bank1
  5244  16DC  00CD               	movwf	pow@y^(0+128)
  5245  16DD  1683               	bsf	3,5	;RP0=1, select bank3
  5246  16DE  1703               	bsf	3,6	;RP1=1, select bank3
  5247  16DF  084F               	movf	(_format_double$831+1)^(0+384),w
  5248  16E0  1683               	bsf	3,5	;RP0=1, select bank1
  5249  16E1  1303               	bcf	3,6	;RP1=0, select bank1
  5250  16E2  00CE               	movwf	(pow@y+1)^(0+128)
  5251  16E3  1683               	bsf	3,5	;RP0=1, select bank3
  5252  16E4  1703               	bsf	3,6	;RP1=1, select bank3
  5253  16E5  0850               	movf	(_format_double$831+2)^(0+384),w
  5254  16E6  1683               	bsf	3,5	;RP0=1, select bank1
  5255  16E7  1303               	bcf	3,6	;RP1=0, select bank1
  5256  16E8  00CF               	movwf	(pow@y+2)^(0+128)
  5257  16E9  120A  118A  264F  160A  118A  	fcall	_pow
  5258  16EE  1683               	bsf	3,5	;RP0=1, select bank1
  5259  16EF  1303               	bcf	3,6	;RP1=0, select bank1
  5260  16F0  084A               	movf	?_pow^(0+128),w
  5261  16F1  1683               	bsf	3,5	;RP0=1, select bank3
  5262  16F2  1703               	bsf	3,6	;RP1=1, select bank3
  5263  16F3  00D7               	movwf	format_double@weight^(0+384)
  5264  16F4  1683               	bsf	3,5	;RP0=1, select bank1
  5265  16F5  1303               	bcf	3,6	;RP1=0, select bank1
  5266  16F6  084B               	movf	(?_pow+1)^(0+128),w
  5267  16F7  1683               	bsf	3,5	;RP0=1, select bank3
  5268  16F8  1703               	bsf	3,6	;RP1=1, select bank3
  5269  16F9  00D8               	movwf	(format_double@weight+1)^(0+384)
  5270  16FA  1683               	bsf	3,5	;RP0=1, select bank1
  5271  16FB  1303               	bcf	3,6	;RP1=0, select bank1
  5272  16FC  084C               	movf	(?_pow+2)^(0+128),w
  5273  16FD  1683               	bsf	3,5	;RP0=1, select bank3
  5274  16FE  1703               	bsf	3,6	;RP1=1, select bank3
  5275  16FF  00D9               	movwf	(format_double@weight+2)^(0+384)
  5276                           
  5277                           ;format.c: 81: digit = (short)floor(num / weight);
  5278  1700  1683               	bsf	3,5	;RP0=1, select bank1
  5279  1701  1303               	bcf	3,6	;RP1=0, select bank1
  5280  1702  085C               	movf	format_double@num^(0+128),w
  5281  1703  1283               	bcf	3,5	;RP0=0, select bank0
  5282  1704  1303               	bcf	3,6	;RP1=0, select bank0
  5283  1705  00AB               	movwf	___ftdiv@f1
  5284  1706  1683               	bsf	3,5	;RP0=1, select bank1
  5285  1707  1303               	bcf	3,6	;RP1=0, select bank1
  5286  1708  085D               	movf	(format_double@num+1)^(0+128),w
  5287  1709  1283               	bcf	3,5	;RP0=0, select bank0
  5288  170A  1303               	bcf	3,6	;RP1=0, select bank0
  5289  170B  00AC               	movwf	___ftdiv@f1+1
  5290  170C  1683               	bsf	3,5	;RP0=1, select bank1
  5291  170D  1303               	bcf	3,6	;RP1=0, select bank1
  5292  170E  085E               	movf	(format_double@num+2)^(0+128),w
  5293  170F  1283               	bcf	3,5	;RP0=0, select bank0
  5294  1710  1303               	bcf	3,6	;RP1=0, select bank0
  5295  1711  00AD               	movwf	___ftdiv@f1+2
  5296  1712  1683               	bsf	3,5	;RP0=1, select bank3
  5297  1713  1703               	bsf	3,6	;RP1=1, select bank3
  5298  1714  0857               	movf	format_double@weight^(0+384),w
  5299  1715  1283               	bcf	3,5	;RP0=0, select bank0
  5300  1716  1303               	bcf	3,6	;RP1=0, select bank0
  5301  1717  00A8               	movwf	___ftdiv@f2
  5302  1718  1683               	bsf	3,5	;RP0=1, select bank3
  5303  1719  1703               	bsf	3,6	;RP1=1, select bank3
  5304  171A  0858               	movf	(format_double@weight+1)^(0+384),w
  5305  171B  1283               	bcf	3,5	;RP0=0, select bank0
  5306  171C  1303               	bcf	3,6	;RP1=0, select bank0
  5307  171D  00A9               	movwf	___ftdiv@f2+1
  5308  171E  1683               	bsf	3,5	;RP0=1, select bank3
  5309  171F  1703               	bsf	3,6	;RP1=1, select bank3
  5310  1720  0859               	movf	(format_double@weight+2)^(0+384),w
  5311  1721  1283               	bcf	3,5	;RP0=0, select bank0
  5312  1722  1303               	bcf	3,6	;RP1=0, select bank0
  5313  1723  00AA               	movwf	___ftdiv@f2+2
  5314  1724  160A  118A  230D  160A  118A  	fcall	___ftdiv
  5315  1729  1283               	bcf	3,5	;RP0=0, select bank0
  5316  172A  1303               	bcf	3,6	;RP1=0, select bank0
  5317  172B  0828               	movf	?___ftdiv,w
  5318  172C  1683               	bsf	3,5	;RP0=1, select bank1
  5319  172D  1303               	bcf	3,6	;RP1=0, select bank1
  5320  172E  00B4               	movwf	floor@x^(0+128)
  5321  172F  1283               	bcf	3,5	;RP0=0, select bank0
  5322  1730  1303               	bcf	3,6	;RP1=0, select bank0
  5323  1731  0829               	movf	?___ftdiv+1,w
  5324  1732  1683               	bsf	3,5	;RP0=1, select bank1
  5325  1733  1303               	bcf	3,6	;RP1=0, select bank1
  5326  1734  00B5               	movwf	(floor@x+1)^(0+128)
  5327  1735  1283               	bcf	3,5	;RP0=0, select bank0
  5328  1736  1303               	bcf	3,6	;RP1=0, select bank0
  5329  1737  082A               	movf	?___ftdiv+2,w
  5330  1738  1683               	bsf	3,5	;RP0=1, select bank1
  5331  1739  1303               	bcf	3,6	;RP1=0, select bank1
  5332  173A  00B6               	movwf	(floor@x+2)^(0+128)
  5333  173B  160A  118A  2566  160A  118A  	fcall	_floor
  5334  1740  1683               	bsf	3,5	;RP0=1, select bank1
  5335  1741  1303               	bcf	3,6	;RP1=0, select bank1
  5336  1742  0834               	movf	?_floor^(0+128),w
  5337  1743  1683               	bsf	3,5	;RP0=1, select bank3
  5338  1744  1703               	bsf	3,6	;RP1=1, select bank3
  5339  1745  00D1               	movwf	_format_double$832^(0+384)
  5340  1746  1683               	bsf	3,5	;RP0=1, select bank1
  5341  1747  1303               	bcf	3,6	;RP1=0, select bank1
  5342  1748  0835               	movf	(?_floor+1)^(0+128),w
  5343  1749  1683               	bsf	3,5	;RP0=1, select bank3
  5344  174A  1703               	bsf	3,6	;RP1=1, select bank3
  5345  174B  00D2               	movwf	(_format_double$832+1)^(0+384)
  5346  174C  1683               	bsf	3,5	;RP0=1, select bank1
  5347  174D  1303               	bcf	3,6	;RP1=0, select bank1
  5348  174E  0836               	movf	(?_floor+2)^(0+128),w
  5349  174F  1683               	bsf	3,5	;RP0=1, select bank3
  5350  1750  1703               	bsf	3,6	;RP1=1, select bank3
  5351  1751  00D3               	movwf	(_format_double$832+2)^(0+384)
  5352                           
  5353                           ;format.c: 81: digit = (short)floor(num / weight);
  5354  1752  0851               	movf	_format_double$832^(0+384),w
  5355  1753  1683               	bsf	3,5	;RP0=1, select bank1
  5356  1754  1303               	bcf	3,6	;RP1=0, select bank1
  5357  1755  00A0               	movwf	___fttol@f1^(0+128)
  5358  1756  1683               	bsf	3,5	;RP0=1, select bank3
  5359  1757  1703               	bsf	3,6	;RP1=1, select bank3
  5360  1758  0852               	movf	(_format_double$832+1)^(0+384),w
  5361  1759  1683               	bsf	3,5	;RP0=1, select bank1
  5362  175A  1303               	bcf	3,6	;RP1=0, select bank1
  5363  175B  00A1               	movwf	(___fttol@f1+1)^(0+128)
  5364  175C  1683               	bsf	3,5	;RP0=1, select bank3
  5365  175D  1703               	bsf	3,6	;RP1=1, select bank3
  5366  175E  0853               	movf	(_format_double$832+2)^(0+384),w
  5367  175F  1683               	bsf	3,5	;RP0=1, select bank1
  5368  1760  1303               	bcf	3,6	;RP1=0, select bank1
  5369  1761  00A2               	movwf	(___fttol@f1+2)^(0+128)
  5370  1762  160A  118A  2121  160A  118A  	fcall	___fttol
  5371  1767  1683               	bsf	3,5	;RP0=1, select bank1
  5372  1768  1303               	bcf	3,6	;RP1=0, select bank1
  5373  1769  0821               	movf	(?___fttol^(0+128)+1),w
  5374  176A  1683               	bsf	3,5	;RP0=1, select bank3
  5375  176B  1703               	bsf	3,6	;RP1=1, select bank3
  5376  176C  00DB               	movwf	(format_double@digit+1)^(0+384)
  5377  176D  1683               	bsf	3,5	;RP0=1, select bank1
  5378  176E  1303               	bcf	3,6	;RP1=0, select bank1
  5379  176F  0820               	movf	?___fttol^(0+128),w
  5380  1770  1683               	bsf	3,5	;RP0=1, select bank3
  5381  1771  1703               	bsf	3,6	;RP1=1, select bank3
  5382  1772  00DA               	movwf	format_double@digit^(0+384)
  5383                           
  5384                           ;format.c: 82: num -= (digit * weight);
  5385  1773  085B               	movf	(format_double@digit+1)^(0+384),w
  5386  1774  1283               	bcf	3,5	;RP0=0, select bank0
  5387  1775  1303               	bcf	3,6	;RP1=0, select bank0
  5388  1776  00A9               	movwf	___awtoft@c+1
  5389  1777  1683               	bsf	3,5	;RP0=1, select bank3
  5390  1778  1703               	bsf	3,6	;RP1=1, select bank3
  5391  1779  085A               	movf	format_double@digit^(0+384),w
  5392  177A  1283               	bcf	3,5	;RP0=0, select bank0
  5393  177B  1303               	bcf	3,6	;RP1=0, select bank0
  5394  177C  00A8               	movwf	___awtoft@c
  5395  177D  120A  118A  27D5  160A  118A  	fcall	___awtoft
  5396  1782  1283               	bcf	3,5	;RP0=0, select bank0
  5397  1783  1303               	bcf	3,6	;RP1=0, select bank0
  5398  1784  0828               	movf	?___awtoft,w
  5399  1785  00BB               	movwf	___ftmul@f2
  5400  1786  0829               	movf	?___awtoft+1,w
  5401  1787  00BC               	movwf	___ftmul@f2+1
  5402  1788  082A               	movf	?___awtoft+2,w
  5403  1789  00BD               	movwf	___ftmul@f2+2
  5404  178A  1683               	bsf	3,5	;RP0=1, select bank3
  5405  178B  1703               	bsf	3,6	;RP1=1, select bank3
  5406  178C  0857               	movf	format_double@weight^(0+384),w
  5407  178D  1283               	bcf	3,5	;RP0=0, select bank0
  5408  178E  1303               	bcf	3,6	;RP1=0, select bank0
  5409  178F  00B8               	movwf	___ftmul@f1
  5410  1790  1683               	bsf	3,5	;RP0=1, select bank3
  5411  1791  1703               	bsf	3,6	;RP1=1, select bank3
  5412  1792  0858               	movf	(format_double@weight+1)^(0+384),w
  5413  1793  1283               	bcf	3,5	;RP0=0, select bank0
  5414  1794  1303               	bcf	3,6	;RP1=0, select bank0
  5415  1795  00B9               	movwf	___ftmul@f1+1
  5416  1796  1683               	bsf	3,5	;RP0=1, select bank3
  5417  1797  1703               	bsf	3,6	;RP1=1, select bank3
  5418  1798  0859               	movf	(format_double@weight+2)^(0+384),w
  5419  1799  1283               	bcf	3,5	;RP0=0, select bank0
  5420  179A  1303               	bcf	3,6	;RP1=0, select bank0
  5421  179B  00BA               	movwf	___ftmul@f1+2
  5422  179C  160A  118A  2493  160A  118A  	fcall	___ftmul
  5423  17A1  1283               	bcf	3,5	;RP0=0, select bank0
  5424  17A2  1303               	bcf	3,6	;RP1=0, select bank0
  5425  17A3  0838               	movf	?___ftmul,w
  5426  17A4  00D8               	movwf	___ftsub@f2
  5427  17A5  0839               	movf	?___ftmul+1,w
  5428  17A6  00D9               	movwf	___ftsub@f2+1
  5429  17A7  083A               	movf	?___ftmul+2,w
  5430  17A8  00DA               	movwf	___ftsub@f2+2
  5431  17A9  1683               	bsf	3,5	;RP0=1, select bank1
  5432  17AA  1303               	bcf	3,6	;RP1=0, select bank1
  5433  17AB  085C               	movf	format_double@num^(0+128),w
  5434  17AC  1283               	bcf	3,5	;RP0=0, select bank0
  5435  17AD  1303               	bcf	3,6	;RP1=0, select bank0
  5436  17AE  00DB               	movwf	___ftsub@f1
  5437  17AF  1683               	bsf	3,5	;RP0=1, select bank1
  5438  17B0  1303               	bcf	3,6	;RP1=0, select bank1
  5439  17B1  085D               	movf	(format_double@num+1)^(0+128),w
  5440  17B2  1283               	bcf	3,5	;RP0=0, select bank0
  5441  17B3  1303               	bcf	3,6	;RP1=0, select bank0
  5442  17B4  00DC               	movwf	___ftsub@f1+1
  5443  17B5  1683               	bsf	3,5	;RP0=1, select bank1
  5444  17B6  1303               	bcf	3,6	;RP1=0, select bank1
  5445  17B7  085E               	movf	(format_double@num+2)^(0+128),w
  5446  17B8  1283               	bcf	3,5	;RP0=0, select bank0
  5447  17B9  1303               	bcf	3,6	;RP1=0, select bank0
  5448  17BA  00DD               	movwf	___ftsub@f1+2
  5449  17BB  160A  158A  23A3  160A  118A  	fcall	___ftsub
  5450  17C0  1283               	bcf	3,5	;RP0=0, select bank0
  5451  17C1  1303               	bcf	3,6	;RP1=0, select bank0
  5452  17C2  0858               	movf	?___ftsub,w
  5453  17C3  1683               	bsf	3,5	;RP0=1, select bank1
  5454  17C4  1303               	bcf	3,6	;RP1=0, select bank1
  5455  17C5  00DC               	movwf	format_double@num^(0+128)
  5456  17C6  1283               	bcf	3,5	;RP0=0, select bank0
  5457  17C7  1303               	bcf	3,6	;RP1=0, select bank0
  5458  17C8  0859               	movf	?___ftsub+1,w
  5459  17C9  1683               	bsf	3,5	;RP0=1, select bank1
  5460  17CA  1303               	bcf	3,6	;RP1=0, select bank1
  5461  17CB  00DD               	movwf	(format_double@num+1)^(0+128)
  5462  17CC  1283               	bcf	3,5	;RP0=0, select bank0
  5463  17CD  1303               	bcf	3,6	;RP1=0, select bank0
  5464  17CE  085A               	movf	?___ftsub+2,w
  5465  17CF  1683               	bsf	3,5	;RP0=1, select bank1
  5466  17D0  1303               	bcf	3,6	;RP1=0, select bank1
  5467  17D1  00DE               	movwf	(format_double@num+2)^(0+128)
  5468                           
  5469                           ;format.c: 83: putchar_ptr((char*)('0' + digit));
  5470  17D2  1683               	bsf	3,5	;RP0=1, select bank3
  5471  17D3  1703               	bsf	3,6	;RP1=1, select bank3
  5472  17D4  085A               	movf	format_double@digit^(0+384),w
  5473  17D5  3E30               	addlw	48
  5474  17D6  1683               	bsf	3,5	;RP0=1, select bank1
  5475  17D7  1303               	bcf	3,6	;RP1=0, select bank1
  5476  17D8  00DF               	movwf	??_format_double^(0+128)
  5477  17D9  085F               	movf	??_format_double^(0+128),w
  5478  17DA  1283               	bcf	3,5	;RP0=0, select bank0
  5479  17DB  1303               	bcf	3,6	;RP1=0, select bank0
  5480  17DC  00A0               	movwf	format_putchar@c
  5481  17DD  0879               	movf	_putchar_ptr,w
  5482  17DE  120A  118A  2100  160A  118A  	fcall	fptable
  5483                           
  5484                           ;format.c: 84: if(m == 0)
  5485  17E3  1683               	bsf	3,5	;RP0=1, select bank3
  5486  17E4  1703               	bsf	3,6	;RP1=1, select bank3
  5487  17E5  085C               	movf	format_double@m^(0+384),w
  5488  17E6  045D               	iorwf	(format_double@m+1)^(0+384),w
  5489  17E7  1D03               	btfss	3,2
  5490  17E8  2FF7               	goto	l4166
  5491                           
  5492                           ;format.c: 85: putchar_ptr('.');
  5493  17E9  302E               	movlw	46
  5494  17EA  1683               	bsf	3,5	;RP0=1, select bank1
  5495  17EB  1303               	bcf	3,6	;RP1=0, select bank1
  5496  17EC  00DF               	movwf	??_format_double^(0+128)
  5497  17ED  085F               	movf	??_format_double^(0+128),w
  5498  17EE  1283               	bcf	3,5	;RP0=0, select bank0
  5499  17EF  1303               	bcf	3,6	;RP1=0, select bank0
  5500  17F0  00A0               	movwf	format_putchar@c
  5501  17F1  0879               	movf	_putchar_ptr,w
  5502  17F2  120A  118A  2100  160A  118A  	fcall	fptable
  5503  17F7                     l4166:	
  5504                           
  5505                           ;format.c: 86: m--;
  5506  17F7  30FF               	movlw	255
  5507  17F8  1683               	bsf	3,5	;RP0=1, select bank3
  5508  17F9  1703               	bsf	3,6	;RP1=1, select bank3
  5509  17FA  07DC               	addwf	format_double@m^(0+384),f
  5510  17FB  1803               	skipnc
  5511  17FC  0ADD               	incf	(format_double@m+1)^(0+384),f
  5512  17FD  30FF               	movlw	255
  5513  17FE  07DD               	addwf	(format_double@m+1)^(0+384),f
  5514  17FF  2E7D               	goto	l4170
  5515  1800                     __end_of_format_double:	
  5516                           
  5517                           	psect	text12
  5518  064F                     __ptext12:	
  5519 ;; *************** function _pow *****************
  5520 ;; Defined at:
  5521 ;;		line 5 in file "/opt/microchip/xc8/v1.34/sources/common/pow.c"
  5522 ;; Parameters:    Size  Location     Type
  5523 ;;  x               3   42[BANK1 ] short 
  5524 ;;  y               3   45[BANK1 ] short 
  5525 ;; Auto vars:     Size  Location     Type
  5526 ;;  yi              4   56[BANK1 ] unsigned long 
  5527 ;;  sign            1   55[BANK1 ] unsigned char 
  5528 ;; Return value:  Size  Location     Type
  5529 ;;                  3   42[BANK1 ] unsigned char 
  5530 ;; Registers used:
  5531 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5532 ;; Tracked objects:
  5533 ;;		On entry : 0/0
  5534 ;;		On exit  : 0/0
  5535 ;;		Unchanged: 0/0
  5536 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5537 ;;      Params:         0       0       6       0       0
  5538 ;;      Locals:         0       0      11       0       0
  5539 ;;      Temps:          0       0       1       0       0
  5540 ;;      Totals:         0       0      18       0       0
  5541 ;;Total ram usage:       18 bytes
  5542 ;; Hardware stack levels used:    1
  5543 ;; Hardware stack levels required when called:    5
  5544 ;; This function calls:
  5545 ;;		___ftge
  5546 ;;		___ftmul
  5547 ;;		___ftneg
  5548 ;;		___fttol
  5549 ;;		___lltoft
  5550 ;;		_exp
  5551 ;;		_log
  5552 ;; This function is called by:
  5553 ;;		_format_double
  5554 ;;		_format_float
  5555 ;; This function uses a non-reentrant model
  5556 ;;
  5557                           
  5558                           
  5559                           ;psect for function _pow
  5560  064F                     _pow:	
  5561                           
  5562                           ;incstack = 0
  5563                           ; Regs used in _pow: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5564  064F  1683               	bsf	3,5	;RP0=1, select bank1
  5565  0650  1303               	bcf	3,6	;RP1=0, select bank1
  5566  0651  01D7               	clrf	pow@sign^(0+128)
  5567  0652  084C               	movf	(pow@x+2)^(0+128),w
  5568  0653  044B               	iorwf	(pow@x+1)^(0+128),w
  5569  0654  044A               	iorwf	pow@x^(0+128),w
  5570  0655  1D03               	skipz
  5571  0656  2E87               	goto	l4040
  5572  0657  3000               	movlw	0
  5573  0658  1283               	bcf	3,5	;RP0=0, select bank0
  5574  0659  1303               	bcf	3,6	;RP1=0, select bank0
  5575  065A  00A0               	movwf	___ftge@ff1
  5576  065B  3000               	movlw	0
  5577  065C  00A1               	movwf	___ftge@ff1+1
  5578  065D  3000               	movlw	0
  5579  065E  00A2               	movwf	___ftge@ff1+2
  5580  065F  1683               	bsf	3,5	;RP0=1, select bank1
  5581  0660  1303               	bcf	3,6	;RP1=0, select bank1
  5582  0661  084D               	movf	pow@y^(0+128),w
  5583  0662  1283               	bcf	3,5	;RP0=0, select bank0
  5584  0663  1303               	bcf	3,6	;RP1=0, select bank0
  5585  0664  00A3               	movwf	___ftge@ff2
  5586  0665  1683               	bsf	3,5	;RP0=1, select bank1
  5587  0666  1303               	bcf	3,6	;RP1=0, select bank1
  5588  0667  084E               	movf	(pow@y+1)^(0+128),w
  5589  0668  1283               	bcf	3,5	;RP0=0, select bank0
  5590  0669  1303               	bcf	3,6	;RP1=0, select bank0
  5591  066A  00A4               	movwf	___ftge@ff2+1
  5592  066B  1683               	bsf	3,5	;RP0=1, select bank1
  5593  066C  1303               	bcf	3,6	;RP1=0, select bank1
  5594  066D  084F               	movf	(pow@y+2)^(0+128),w
  5595  066E  1283               	bcf	3,5	;RP0=0, select bank0
  5596  066F  1303               	bcf	3,6	;RP1=0, select bank0
  5597  0670  00A5               	movwf	___ftge@ff2+2
  5598  0671  160A  158A  258C  120A  118A  	fcall	___ftge
  5599  0676  1C03               	btfss	3,0
  5600  0677  2E7E               	goto	l870
  5601  0678  3021               	movlw	33
  5602  0679  1683               	bsf	3,5	;RP0=1, select bank3
  5603  067A  1703               	bsf	3,6	;RP1=1, select bank3
  5604  067B  00C8               	movwf	_errno^(0+384)
  5605  067C  3000               	movlw	0
  5606  067D  00C9               	movwf	(_errno^(0+384)+1)
  5607  067E                     l870:	
  5608  067E  3000               	movlw	0
  5609  067F  1683               	bsf	3,5	;RP0=1, select bank1
  5610  0680  1303               	bcf	3,6	;RP1=0, select bank1
  5611  0681  00CA               	movwf	?_pow^(0+128)
  5612  0682  3000               	movlw	0
  5613  0683  00CB               	movwf	(?_pow+1)^(0+128)
  5614  0684  3000               	movlw	0
  5615  0685  00CC               	movwf	(?_pow+2)^(0+128)
  5616  0686  0008               	return
  5617  0687                     l4040:	
  5618  0687  084F               	movf	(pow@y+2)^(0+128),w
  5619  0688  044E               	iorwf	(pow@y+1)^(0+128),w
  5620  0689  044D               	iorwf	pow@y^(0+128),w
  5621  068A  1D03               	skipz
  5622  068B  2E93               	goto	l4046
  5623  068C  3000               	movlw	0
  5624  068D  00CA               	movwf	?_pow^(0+128)
  5625  068E  3080               	movlw	128
  5626  068F  00CB               	movwf	(?_pow+1)^(0+128)
  5627  0690  303F               	movlw	63
  5628  0691  00CC               	movwf	(?_pow+2)^(0+128)
  5629  0692  0008               	return
  5630  0693                     l4046:	
  5631  0693  084A               	movf	pow@x^(0+128),w
  5632  0694  1283               	bcf	3,5	;RP0=0, select bank0
  5633  0695  1303               	bcf	3,6	;RP1=0, select bank0
  5634  0696  00A0               	movwf	___ftge@ff1
  5635  0697  1683               	bsf	3,5	;RP0=1, select bank1
  5636  0698  1303               	bcf	3,6	;RP1=0, select bank1
  5637  0699  084B               	movf	(pow@x+1)^(0+128),w
  5638  069A  1283               	bcf	3,5	;RP0=0, select bank0
  5639  069B  1303               	bcf	3,6	;RP1=0, select bank0
  5640  069C  00A1               	movwf	___ftge@ff1+1
  5641  069D  1683               	bsf	3,5	;RP0=1, select bank1
  5642  069E  1303               	bcf	3,6	;RP1=0, select bank1
  5643  069F  084C               	movf	(pow@x+2)^(0+128),w
  5644  06A0  1283               	bcf	3,5	;RP0=0, select bank0
  5645  06A1  1303               	bcf	3,6	;RP1=0, select bank0
  5646  06A2  00A2               	movwf	___ftge@ff1+2
  5647  06A3  3000               	movlw	0
  5648  06A4  00A3               	movwf	___ftge@ff2
  5649  06A5  3000               	movlw	0
  5650  06A6  00A4               	movwf	___ftge@ff2+1
  5651  06A7  3000               	movlw	0
  5652  06A8  00A5               	movwf	___ftge@ff2+2
  5653  06A9  160A  158A  258C  120A  118A  	fcall	___ftge
  5654  06AE  1803               	btfsc	3,0
  5655  06AF  2F37               	goto	l4058
  5656  06B0  1683               	bsf	3,5	;RP0=1, select bank1
  5657  06B1  1303               	bcf	3,6	;RP1=0, select bank1
  5658  06B2  084D               	movf	pow@y^(0+128),w
  5659  06B3  00A0               	movwf	___fttol@f1^(0+128)
  5660  06B4  084E               	movf	(pow@y+1)^(0+128),w
  5661  06B5  00A1               	movwf	(___fttol@f1+1)^(0+128)
  5662  06B6  084F               	movf	(pow@y+2)^(0+128),w
  5663  06B7  00A2               	movwf	(___fttol@f1+2)^(0+128)
  5664  06B8  160A  118A  2121  120A  118A  	fcall	___fttol
  5665  06BD  1683               	bsf	3,5	;RP0=1, select bank1
  5666  06BE  1303               	bcf	3,6	;RP1=0, select bank1
  5667  06BF  0823               	movf	(?___fttol+3)^(0+128),w
  5668  06C0  00DB               	movwf	(pow@yi+3)^(0+128)
  5669  06C1  0822               	movf	(?___fttol+2)^(0+128),w
  5670  06C2  00DA               	movwf	(pow@yi+2)^(0+128)
  5671  06C3  0821               	movf	(?___fttol+1)^(0+128),w
  5672  06C4  00D9               	movwf	(pow@yi+1)^(0+128)
  5673  06C5  0820               	movf	?___fttol^(0+128),w
  5674  06C6  00D8               	movwf	pow@yi^(0+128)
  5675  06C7  085B               	movf	(pow@yi+3)^(0+128),w
  5676  06C8  1283               	bcf	3,5	;RP0=0, select bank0
  5677  06C9  1303               	bcf	3,6	;RP1=0, select bank0
  5678  06CA  00AB               	movwf	___lltoft@c+3
  5679  06CB  1683               	bsf	3,5	;RP0=1, select bank1
  5680  06CC  1303               	bcf	3,6	;RP1=0, select bank1
  5681  06CD  085A               	movf	(pow@yi+2)^(0+128),w
  5682  06CE  1283               	bcf	3,5	;RP0=0, select bank0
  5683  06CF  1303               	bcf	3,6	;RP1=0, select bank0
  5684  06D0  00AA               	movwf	___lltoft@c+2
  5685  06D1  1683               	bsf	3,5	;RP0=1, select bank1
  5686  06D2  1303               	bcf	3,6	;RP1=0, select bank1
  5687  06D3  0859               	movf	(pow@yi+1)^(0+128),w
  5688  06D4  1283               	bcf	3,5	;RP0=0, select bank0
  5689  06D5  1303               	bcf	3,6	;RP1=0, select bank0
  5690  06D6  00A9               	movwf	___lltoft@c+1
  5691  06D7  1683               	bsf	3,5	;RP0=1, select bank1
  5692  06D8  1303               	bcf	3,6	;RP1=0, select bank1
  5693  06D9  0858               	movf	pow@yi^(0+128),w
  5694  06DA  1283               	bcf	3,5	;RP0=0, select bank0
  5695  06DB  1303               	bcf	3,6	;RP1=0, select bank0
  5696  06DC  00A8               	movwf	___lltoft@c
  5697  06DD  160A  158A  245B  120A  118A  	fcall	___lltoft
  5698  06E2  1683               	bsf	3,5	;RP0=1, select bank1
  5699  06E3  1303               	bcf	3,6	;RP1=0, select bank1
  5700  06E4  084F               	movf	(pow@y+2)^(0+128),w
  5701  06E5  1283               	bcf	3,5	;RP0=0, select bank0
  5702  06E6  1303               	bcf	3,6	;RP1=0, select bank0
  5703  06E7  062A               	xorwf	?___lltoft+2,w
  5704  06E8  1D03               	skipz
  5705  06E9  2EF8               	goto	u5105
  5706  06EA  1683               	bsf	3,5	;RP0=1, select bank1
  5707  06EB  1303               	bcf	3,6	;RP1=0, select bank1
  5708  06EC  084E               	movf	(pow@y+1)^(0+128),w
  5709  06ED  1283               	bcf	3,5	;RP0=0, select bank0
  5710  06EE  1303               	bcf	3,6	;RP1=0, select bank0
  5711  06EF  0629               	xorwf	?___lltoft+1,w
  5712  06F0  1D03               	skipz
  5713  06F1  2EF8               	goto	u5105
  5714  06F2  1683               	bsf	3,5	;RP0=1, select bank1
  5715  06F3  1303               	bcf	3,6	;RP1=0, select bank1
  5716  06F4  084D               	movf	pow@y^(0+128),w
  5717  06F5  1283               	bcf	3,5	;RP0=0, select bank0
  5718  06F6  1303               	bcf	3,6	;RP1=0, select bank0
  5719  06F7  0628               	xorwf	?___lltoft,w
  5720  06F8                     u5105:	
  5721  06F8  1903               	skipnz
  5722  06F9  2F09               	goto	l4054
  5723  06FA  3021               	movlw	33
  5724  06FB  1683               	bsf	3,5	;RP0=1, select bank3
  5725  06FC  1703               	bsf	3,6	;RP1=1, select bank3
  5726  06FD  00C8               	movwf	_errno^(0+384)
  5727  06FE  3000               	movlw	0
  5728  06FF  00C9               	movwf	(_errno^(0+384)+1)
  5729  0700  3000               	movlw	0
  5730  0701  1683               	bsf	3,5	;RP0=1, select bank1
  5731  0702  1303               	bcf	3,6	;RP1=0, select bank1
  5732  0703  00CA               	movwf	?_pow^(0+128)
  5733  0704  3000               	movlw	0
  5734  0705  00CB               	movwf	(?_pow+1)^(0+128)
  5735  0706  3000               	movlw	0
  5736  0707  00CC               	movwf	(?_pow+2)^(0+128)
  5737  0708  0008               	return
  5738  0709                     l4054:	
  5739  0709  1683               	bsf	3,5	;RP0=1, select bank1
  5740  070A  1303               	bcf	3,6	;RP1=0, select bank1
  5741  070B  0858               	movf	pow@yi^(0+128),w
  5742  070C  3901               	andlw	1
  5743  070D  00D0               	movwf	??_pow^(0+128)
  5744  070E  0850               	movf	??_pow^(0+128),w
  5745  070F  00D7               	movwf	pow@sign^(0+128)
  5746  0710  084A               	movf	pow@x^(0+128),w
  5747  0711  1283               	bcf	3,5	;RP0=0, select bank0
  5748  0712  1303               	bcf	3,6	;RP1=0, select bank0
  5749  0713  00C8               	movwf	___ftneg@f1
  5750  0714  1683               	bsf	3,5	;RP0=1, select bank1
  5751  0715  1303               	bcf	3,6	;RP1=0, select bank1
  5752  0716  084B               	movf	(pow@x+1)^(0+128),w
  5753  0717  1283               	bcf	3,5	;RP0=0, select bank0
  5754  0718  1303               	bcf	3,6	;RP1=0, select bank0
  5755  0719  00C9               	movwf	___ftneg@f1+1
  5756  071A  1683               	bsf	3,5	;RP0=1, select bank1
  5757  071B  1303               	bcf	3,6	;RP1=0, select bank1
  5758  071C  084C               	movf	(pow@x+2)^(0+128),w
  5759  071D  1283               	bcf	3,5	;RP0=0, select bank0
  5760  071E  1303               	bcf	3,6	;RP1=0, select bank0
  5761  071F  00CA               	movwf	___ftneg@f1+2
  5762  0720  160A  158A  236E  120A  118A  	fcall	___ftneg
  5763  0725  1283               	bcf	3,5	;RP0=0, select bank0
  5764  0726  1303               	bcf	3,6	;RP1=0, select bank0
  5765  0727  0848               	movf	?___ftneg,w
  5766  0728  1683               	bsf	3,5	;RP0=1, select bank1
  5767  0729  1303               	bcf	3,6	;RP1=0, select bank1
  5768  072A  00CA               	movwf	pow@x^(0+128)
  5769  072B  1283               	bcf	3,5	;RP0=0, select bank0
  5770  072C  1303               	bcf	3,6	;RP1=0, select bank0
  5771  072D  0849               	movf	?___ftneg+1,w
  5772  072E  1683               	bsf	3,5	;RP0=1, select bank1
  5773  072F  1303               	bcf	3,6	;RP1=0, select bank1
  5774  0730  00CB               	movwf	(pow@x+1)^(0+128)
  5775  0731  1283               	bcf	3,5	;RP0=0, select bank0
  5776  0732  1303               	bcf	3,6	;RP1=0, select bank0
  5777  0733  084A               	movf	?___ftneg+2,w
  5778  0734  1683               	bsf	3,5	;RP0=1, select bank1
  5779  0735  1303               	bcf	3,6	;RP1=0, select bank1
  5780  0736  00CC               	movwf	(pow@x+2)^(0+128)
  5781  0737                     l4058:	
  5782  0737  1683               	bsf	3,5	;RP0=1, select bank1
  5783  0738  1303               	bcf	3,6	;RP1=0, select bank1
  5784  0739  084A               	movf	pow@x^(0+128),w
  5785  073A  1283               	bcf	3,5	;RP0=0, select bank0
  5786  073B  1303               	bcf	3,6	;RP1=0, select bank0
  5787  073C  00E2               	movwf	log@x
  5788  073D  1683               	bsf	3,5	;RP0=1, select bank1
  5789  073E  1303               	bcf	3,6	;RP1=0, select bank1
  5790  073F  084B               	movf	(pow@x+1)^(0+128),w
  5791  0740  1283               	bcf	3,5	;RP0=0, select bank0
  5792  0741  1303               	bcf	3,6	;RP1=0, select bank0
  5793  0742  00E3               	movwf	log@x+1
  5794  0743  1683               	bsf	3,5	;RP0=1, select bank1
  5795  0744  1303               	bcf	3,6	;RP1=0, select bank1
  5796  0745  084C               	movf	(pow@x+2)^(0+128),w
  5797  0746  1283               	bcf	3,5	;RP0=0, select bank0
  5798  0747  1303               	bcf	3,6	;RP1=0, select bank0
  5799  0748  00E4               	movwf	log@x+2
  5800  0749  160A  118A  23C5  120A  118A  	fcall	_log
  5801  074E  1283               	bcf	3,5	;RP0=0, select bank0
  5802  074F  1303               	bcf	3,6	;RP1=0, select bank0
  5803  0750  0862               	movf	?_log,w
  5804  0751  1683               	bsf	3,5	;RP0=1, select bank1
  5805  0752  1303               	bcf	3,6	;RP1=0, select bank1
  5806  0753  00D1               	movwf	_pow$834^(0+128)
  5807  0754  1283               	bcf	3,5	;RP0=0, select bank0
  5808  0755  1303               	bcf	3,6	;RP1=0, select bank0
  5809  0756  0863               	movf	?_log+1,w
  5810  0757  1683               	bsf	3,5	;RP0=1, select bank1
  5811  0758  1303               	bcf	3,6	;RP1=0, select bank1
  5812  0759  00D2               	movwf	(_pow$834+1)^(0+128)
  5813  075A  1283               	bcf	3,5	;RP0=0, select bank0
  5814  075B  1303               	bcf	3,6	;RP1=0, select bank0
  5815  075C  0864               	movf	?_log+2,w
  5816  075D  1683               	bsf	3,5	;RP0=1, select bank1
  5817  075E  1303               	bcf	3,6	;RP1=0, select bank1
  5818  075F  00D3               	movwf	(_pow$834+2)^(0+128)
  5819  0760  084D               	movf	pow@y^(0+128),w
  5820  0761  1283               	bcf	3,5	;RP0=0, select bank0
  5821  0762  1303               	bcf	3,6	;RP1=0, select bank0
  5822  0763  00B8               	movwf	___ftmul@f1
  5823  0764  1683               	bsf	3,5	;RP0=1, select bank1
  5824  0765  1303               	bcf	3,6	;RP1=0, select bank1
  5825  0766  084E               	movf	(pow@y+1)^(0+128),w
  5826  0767  1283               	bcf	3,5	;RP0=0, select bank0
  5827  0768  1303               	bcf	3,6	;RP1=0, select bank0
  5828  0769  00B9               	movwf	___ftmul@f1+1
  5829  076A  1683               	bsf	3,5	;RP0=1, select bank1
  5830  076B  1303               	bcf	3,6	;RP1=0, select bank1
  5831  076C  084F               	movf	(pow@y+2)^(0+128),w
  5832  076D  1283               	bcf	3,5	;RP0=0, select bank0
  5833  076E  1303               	bcf	3,6	;RP1=0, select bank0
  5834  076F  00BA               	movwf	___ftmul@f1+2
  5835  0770  1683               	bsf	3,5	;RP0=1, select bank1
  5836  0771  1303               	bcf	3,6	;RP1=0, select bank1
  5837  0772  0851               	movf	_pow$834^(0+128),w
  5838  0773  1283               	bcf	3,5	;RP0=0, select bank0
  5839  0774  1303               	bcf	3,6	;RP1=0, select bank0
  5840  0775  00BB               	movwf	___ftmul@f2
  5841  0776  1683               	bsf	3,5	;RP0=1, select bank1
  5842  0777  1303               	bcf	3,6	;RP1=0, select bank1
  5843  0778  0852               	movf	(_pow$834+1)^(0+128),w
  5844  0779  1283               	bcf	3,5	;RP0=0, select bank0
  5845  077A  1303               	bcf	3,6	;RP1=0, select bank0
  5846  077B  00BC               	movwf	___ftmul@f2+1
  5847  077C  1683               	bsf	3,5	;RP0=1, select bank1
  5848  077D  1303               	bcf	3,6	;RP1=0, select bank1
  5849  077E  0853               	movf	(_pow$834+2)^(0+128),w
  5850  077F  1283               	bcf	3,5	;RP0=0, select bank0
  5851  0780  1303               	bcf	3,6	;RP1=0, select bank0
  5852  0781  00BD               	movwf	___ftmul@f2+2
  5853  0782  160A  118A  2493  120A  118A  	fcall	___ftmul
  5854  0787  1283               	bcf	3,5	;RP0=0, select bank0
  5855  0788  1303               	bcf	3,6	;RP1=0, select bank0
  5856  0789  0838               	movf	?___ftmul,w
  5857  078A  1683               	bsf	3,5	;RP0=1, select bank1
  5858  078B  1303               	bcf	3,6	;RP1=0, select bank1
  5859  078C  00D4               	movwf	_pow$835^(0+128)
  5860  078D  1283               	bcf	3,5	;RP0=0, select bank0
  5861  078E  1303               	bcf	3,6	;RP1=0, select bank0
  5862  078F  0839               	movf	?___ftmul+1,w
  5863  0790  1683               	bsf	3,5	;RP0=1, select bank1
  5864  0791  1303               	bcf	3,6	;RP1=0, select bank1
  5865  0792  00D5               	movwf	(_pow$835+1)^(0+128)
  5866  0793  1283               	bcf	3,5	;RP0=0, select bank0
  5867  0794  1303               	bcf	3,6	;RP1=0, select bank0
  5868  0795  083A               	movf	?___ftmul+2,w
  5869  0796  1683               	bsf	3,5	;RP0=1, select bank1
  5870  0797  1303               	bcf	3,6	;RP1=0, select bank1
  5871  0798  00D6               	movwf	(_pow$835+2)^(0+128)
  5872  0799  0854               	movf	_pow$835^(0+128),w
  5873  079A  00BD               	movwf	exp@x^(0+128)
  5874  079B  0855               	movf	(_pow$835+1)^(0+128),w
  5875  079C  00BE               	movwf	(exp@x+1)^(0+128)
  5876  079D  0856               	movf	(_pow$835+2)^(0+128),w
  5877  079E  00BF               	movwf	(exp@x+2)^(0+128)
  5878  079F  120A  158A  21A9  120A  118A  	fcall	_exp
  5879  07A4  1683               	bsf	3,5	;RP0=1, select bank1
  5880  07A5  1303               	bcf	3,6	;RP1=0, select bank1
  5881  07A6  083D               	movf	?_exp^(0+128),w
  5882  07A7  00CA               	movwf	pow@x^(0+128)
  5883  07A8  083E               	movf	(?_exp+1)^(0+128),w
  5884  07A9  00CB               	movwf	(pow@x+1)^(0+128)
  5885  07AA  083F               	movf	(?_exp+2)^(0+128),w
  5886  07AB  00CC               	movwf	(pow@x+2)^(0+128)
  5887  07AC  0857               	movf	pow@sign^(0+128),w
  5888  07AD  1903               	btfsc	3,2
  5889  07AE  0008               	return
  5890  07AF  084A               	movf	pow@x^(0+128),w
  5891  07B0  1283               	bcf	3,5	;RP0=0, select bank0
  5892  07B1  1303               	bcf	3,6	;RP1=0, select bank0
  5893  07B2  00C8               	movwf	___ftneg@f1
  5894  07B3  1683               	bsf	3,5	;RP0=1, select bank1
  5895  07B4  1303               	bcf	3,6	;RP1=0, select bank1
  5896  07B5  084B               	movf	(pow@x+1)^(0+128),w
  5897  07B6  1283               	bcf	3,5	;RP0=0, select bank0
  5898  07B7  1303               	bcf	3,6	;RP1=0, select bank0
  5899  07B8  00C9               	movwf	___ftneg@f1+1
  5900  07B9  1683               	bsf	3,5	;RP0=1, select bank1
  5901  07BA  1303               	bcf	3,6	;RP1=0, select bank1
  5902  07BB  084C               	movf	(pow@x+2)^(0+128),w
  5903  07BC  1283               	bcf	3,5	;RP0=0, select bank0
  5904  07BD  1303               	bcf	3,6	;RP1=0, select bank0
  5905  07BE  00CA               	movwf	___ftneg@f1+2
  5906  07BF  160A  158A  236E   	fcall	___ftneg
  5907  07C2  1283               	bcf	3,5	;RP0=0, select bank0
  5908  07C3  1303               	bcf	3,6	;RP1=0, select bank0
  5909  07C4  0848               	movf	?___ftneg,w
  5910  07C5  1683               	bsf	3,5	;RP0=1, select bank1
  5911  07C6  1303               	bcf	3,6	;RP1=0, select bank1
  5912  07C7  00CA               	movwf	?_pow^(0+128)
  5913  07C8  1283               	bcf	3,5	;RP0=0, select bank0
  5914  07C9  1303               	bcf	3,6	;RP1=0, select bank0
  5915  07CA  0849               	movf	?___ftneg+1,w
  5916  07CB  1683               	bsf	3,5	;RP0=1, select bank1
  5917  07CC  1303               	bcf	3,6	;RP1=0, select bank1
  5918  07CD  00CB               	movwf	(?_pow+1)^(0+128)
  5919  07CE  1283               	bcf	3,5	;RP0=0, select bank0
  5920  07CF  1303               	bcf	3,6	;RP1=0, select bank0
  5921  07D0  084A               	movf	?___ftneg+2,w
  5922  07D1  1683               	bsf	3,5	;RP0=1, select bank1
  5923  07D2  1303               	bcf	3,6	;RP1=0, select bank1
  5924  07D3  00CC               	movwf	(?_pow+2)^(0+128)
  5925  07D4  0008               	return
  5926  07D5                     __end_of_pow:	
  5927                           
  5928                           	psect	text13
  5929  09A9                     __ptext13:	
  5930 ;; *************** function _exp *****************
  5931 ;; Defined at:
  5932 ;;		line 12 in file "/opt/microchip/xc8/v1.34/sources/common/exp.c"
  5933 ;; Parameters:    Size  Location     Type
  5934 ;;  x               3   29[BANK1 ] unsigned char 
  5935 ;; Auto vars:     Size  Location     Type
  5936 ;;  exponent        2   39[BANK1 ] int 
  5937 ;;  sign            1   41[BANK1 ] unsigned char 
  5938 ;; Return value:  Size  Location     Type
  5939 ;;                  3   29[BANK1 ] unsigned char 
  5940 ;; Registers used:
  5941 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5942 ;; Tracked objects:
  5943 ;;		On entry : 0/0
  5944 ;;		On exit  : 0/0
  5945 ;;		Unchanged: 0/0
  5946 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5947 ;;      Params:         0       0       3       0       0
  5948 ;;      Locals:         0       0       9       0       0
  5949 ;;      Temps:          0       0       1       0       0
  5950 ;;      Totals:         0       0      13       0       0
  5951 ;;Total ram usage:       13 bytes
  5952 ;; Hardware stack levels used:    1
  5953 ;; Hardware stack levels required when called:    4
  5954 ;; This function calls:
  5955 ;;		___awtoft
  5956 ;;		___ftdiv
  5957 ;;		___ftge
  5958 ;;		___ftmul
  5959 ;;		___ftneg
  5960 ;;		___ftsub
  5961 ;;		___fttol
  5962 ;;		_eval_poly
  5963 ;;		_floor
  5964 ;;		_ldexp
  5965 ;; This function is called by:
  5966 ;;		_pow
  5967 ;; This function uses a non-reentrant model
  5968 ;;
  5969                           
  5970                           
  5971                           ;psect for function _exp
  5972  09A9                     _exp:	
  5973                           
  5974                           ;incstack = 0
  5975                           ; Regs used in _exp: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5976  09A9  1683               	bsf	3,5	;RP0=1, select bank1
  5977  09AA  1303               	bcf	3,6	;RP1=0, select bank1
  5978  09AB  083F               	movf	(exp@x+2)^(0+128),w
  5979  09AC  043E               	iorwf	(exp@x+1)^(0+128),w
  5980  09AD  043D               	iorwf	exp@x^(0+128),w
  5981  09AE  1D03               	skipz
  5982  09AF  29B7               	goto	l3936
  5983  09B0  3000               	movlw	0
  5984  09B1  00BD               	movwf	?_exp^(0+128)
  5985  09B2  3080               	movlw	128
  5986  09B3  00BE               	movwf	(?_exp+1)^(0+128)
  5987  09B4  303F               	movlw	63
  5988  09B5  00BF               	movwf	(?_exp+2)^(0+128)
  5989  09B6  0008               	return
  5990  09B7                     l3936:	
  5991  09B7  3072               	movlw	114
  5992  09B8  1283               	bcf	3,5	;RP0=0, select bank0
  5993  09B9  1303               	bcf	3,6	;RP1=0, select bank0
  5994  09BA  00A0               	movwf	___ftge@ff1
  5995  09BB  3031               	movlw	49
  5996  09BC  00A1               	movwf	___ftge@ff1+1
  5997  09BD  3044               	movlw	68
  5998  09BE  00A2               	movwf	___ftge@ff1+2
  5999  09BF  1683               	bsf	3,5	;RP0=1, select bank1
  6000  09C0  1303               	bcf	3,6	;RP1=0, select bank1
  6001  09C1  083D               	movf	exp@x^(0+128),w
  6002  09C2  1283               	bcf	3,5	;RP0=0, select bank0
  6003  09C3  1303               	bcf	3,6	;RP1=0, select bank0
  6004  09C4  00A3               	movwf	___ftge@ff2
  6005  09C5  1683               	bsf	3,5	;RP0=1, select bank1
  6006  09C6  1303               	bcf	3,6	;RP1=0, select bank1
  6007  09C7  083E               	movf	(exp@x+1)^(0+128),w
  6008  09C8  1283               	bcf	3,5	;RP0=0, select bank0
  6009  09C9  1303               	bcf	3,6	;RP1=0, select bank0
  6010  09CA  00A4               	movwf	___ftge@ff2+1
  6011  09CB  1683               	bsf	3,5	;RP0=1, select bank1
  6012  09CC  1303               	bcf	3,6	;RP1=0, select bank1
  6013  09CD  083F               	movf	(exp@x+2)^(0+128),w
  6014  09CE  1283               	bcf	3,5	;RP0=0, select bank0
  6015  09CF  1303               	bcf	3,6	;RP1=0, select bank0
  6016  09D0  00A5               	movwf	___ftge@ff2+2
  6017  09D1  160A  158A  258C  120A  158A  	fcall	___ftge
  6018  09D6  1803               	btfsc	3,0
  6019  09D7  29E6               	goto	l3946
  6020  09D8  3022               	movlw	34
  6021  09D9  1683               	bsf	3,5	;RP0=1, select bank3
  6022  09DA  1703               	bsf	3,6	;RP1=1, select bank3
  6023  09DB  00C8               	movwf	_errno^(0+384)
  6024  09DC  3000               	movlw	0
  6025  09DD  00C9               	movwf	(_errno^(0+384)+1)
  6026  09DE  30FF               	movlw	255
  6027  09DF  1303               	bcf	3,6	;RP1=0, select bank1
  6028  09E0  00BD               	movwf	?_exp^(0+128)
  6029  09E1  307F               	movlw	127
  6030  09E2  00BE               	movwf	(?_exp+1)^(0+128)
  6031  09E3  307F               	movlw	127
  6032  09E4  00BF               	movwf	(?_exp+2)^(0+128)
  6033  09E5  0008               	return
  6034  09E6                     l3946:	
  6035  09E6  1683               	bsf	3,5	;RP0=1, select bank1
  6036  09E7  1303               	bcf	3,6	;RP1=0, select bank1
  6037  09E8  083D               	movf	exp@x^(0+128),w
  6038  09E9  1283               	bcf	3,5	;RP0=0, select bank0
  6039  09EA  1303               	bcf	3,6	;RP1=0, select bank0
  6040  09EB  00A0               	movwf	___ftge@ff1
  6041  09EC  1683               	bsf	3,5	;RP0=1, select bank1
  6042  09ED  1303               	bcf	3,6	;RP1=0, select bank1
  6043  09EE  083E               	movf	(exp@x+1)^(0+128),w
  6044  09EF  1283               	bcf	3,5	;RP0=0, select bank0
  6045  09F0  1303               	bcf	3,6	;RP1=0, select bank0
  6046  09F1  00A1               	movwf	___ftge@ff1+1
  6047  09F2  1683               	bsf	3,5	;RP0=1, select bank1
  6048  09F3  1303               	bcf	3,6	;RP1=0, select bank1
  6049  09F4  083F               	movf	(exp@x+2)^(0+128),w
  6050  09F5  1283               	bcf	3,5	;RP0=0, select bank0
  6051  09F6  1303               	bcf	3,6	;RP1=0, select bank0
  6052  09F7  00A2               	movwf	___ftge@ff1+2
  6053  09F8  3049               	movlw	73
  6054  09F9  00A3               	movwf	___ftge@ff2
  6055  09FA  303A               	movlw	58
  6056  09FB  00A4               	movwf	___ftge@ff2+1
  6057  09FC  30C4               	movlw	196
  6058  09FD  00A5               	movwf	___ftge@ff2+2
  6059  09FE  160A  158A  258C  120A  158A  	fcall	___ftge
  6060  0A03  1803               	btfsc	3,0
  6061  0A04  2A14               	goto	l3952
  6062  0A05  3022               	movlw	34
  6063  0A06  1683               	bsf	3,5	;RP0=1, select bank3
  6064  0A07  1703               	bsf	3,6	;RP1=1, select bank3
  6065  0A08  00C8               	movwf	_errno^(0+384)
  6066  0A09  3000               	movlw	0
  6067  0A0A  00C9               	movwf	(_errno^(0+384)+1)
  6068  0A0B  3000               	movlw	0
  6069  0A0C  1683               	bsf	3,5	;RP0=1, select bank1
  6070  0A0D  1303               	bcf	3,6	;RP1=0, select bank1
  6071  0A0E  00BD               	movwf	?_exp^(0+128)
  6072  0A0F  3000               	movlw	0
  6073  0A10  00BE               	movwf	(?_exp+1)^(0+128)
  6074  0A11  3000               	movlw	0
  6075  0A12  00BF               	movwf	(?_exp+2)^(0+128)
  6076  0A13  0008               	return
  6077  0A14                     l3952:	
  6078  0A14  1683               	bsf	3,5	;RP0=1, select bank1
  6079  0A15  1303               	bcf	3,6	;RP1=0, select bank1
  6080  0A16  083D               	movf	exp@x^(0+128),w
  6081  0A17  1283               	bcf	3,5	;RP0=0, select bank0
  6082  0A18  1303               	bcf	3,6	;RP1=0, select bank0
  6083  0A19  00A0               	movwf	___ftge@ff1
  6084  0A1A  1683               	bsf	3,5	;RP0=1, select bank1
  6085  0A1B  1303               	bcf	3,6	;RP1=0, select bank1
  6086  0A1C  083E               	movf	(exp@x+1)^(0+128),w
  6087  0A1D  1283               	bcf	3,5	;RP0=0, select bank0
  6088  0A1E  1303               	bcf	3,6	;RP1=0, select bank0
  6089  0A1F  00A1               	movwf	___ftge@ff1+1
  6090  0A20  1683               	bsf	3,5	;RP0=1, select bank1
  6091  0A21  1303               	bcf	3,6	;RP1=0, select bank1
  6092  0A22  083F               	movf	(exp@x+2)^(0+128),w
  6093  0A23  1283               	bcf	3,5	;RP0=0, select bank0
  6094  0A24  1303               	bcf	3,6	;RP1=0, select bank0
  6095  0A25  00A2               	movwf	___ftge@ff1+2
  6096  0A26  3000               	movlw	0
  6097  0A27  00A3               	movwf	___ftge@ff2
  6098  0A28  3000               	movlw	0
  6099  0A29  00A4               	movwf	___ftge@ff2+1
  6100  0A2A  3000               	movlw	0
  6101  0A2B  00A5               	movwf	___ftge@ff2+2
  6102  0A2C  160A  158A  258C  120A  158A  	fcall	___ftge
  6103  0A31  1803               	btfsc	3,0
  6104  0A32  2A35               	goto	u4950
  6105  0A33  3001               	movlw	1
  6106  0A34  2A36               	goto	u4960
  6107  0A35                     u4950:	
  6108  0A35  3000               	movlw	0
  6109  0A36                     u4960:	
  6110  0A36  1683               	bsf	3,5	;RP0=1, select bank1
  6111  0A37  1303               	bcf	3,6	;RP1=0, select bank1
  6112  0A38  00C0               	movwf	??_exp^(0+128)
  6113  0A39  0840               	movf	??_exp^(0+128),w
  6114  0A3A  00C9               	movwf	exp@sign^(0+128)
  6115  0A3B  0849               	movf	exp@sign^(0+128),w
  6116  0A3C  1903               	btfsc	3,2
  6117  0A3D  2A65               	goto	l3958
  6118  0A3E  083D               	movf	exp@x^(0+128),w
  6119  0A3F  1283               	bcf	3,5	;RP0=0, select bank0
  6120  0A40  1303               	bcf	3,6	;RP1=0, select bank0
  6121  0A41  00C8               	movwf	___ftneg@f1
  6122  0A42  1683               	bsf	3,5	;RP0=1, select bank1
  6123  0A43  1303               	bcf	3,6	;RP1=0, select bank1
  6124  0A44  083E               	movf	(exp@x+1)^(0+128),w
  6125  0A45  1283               	bcf	3,5	;RP0=0, select bank0
  6126  0A46  1303               	bcf	3,6	;RP1=0, select bank0
  6127  0A47  00C9               	movwf	___ftneg@f1+1
  6128  0A48  1683               	bsf	3,5	;RP0=1, select bank1
  6129  0A49  1303               	bcf	3,6	;RP1=0, select bank1
  6130  0A4A  083F               	movf	(exp@x+2)^(0+128),w
  6131  0A4B  1283               	bcf	3,5	;RP0=0, select bank0
  6132  0A4C  1303               	bcf	3,6	;RP1=0, select bank0
  6133  0A4D  00CA               	movwf	___ftneg@f1+2
  6134  0A4E  160A  158A  236E  120A  158A  	fcall	___ftneg
  6135  0A53  1283               	bcf	3,5	;RP0=0, select bank0
  6136  0A54  1303               	bcf	3,6	;RP1=0, select bank0
  6137  0A55  0848               	movf	?___ftneg,w
  6138  0A56  1683               	bsf	3,5	;RP0=1, select bank1
  6139  0A57  1303               	bcf	3,6	;RP1=0, select bank1
  6140  0A58  00BD               	movwf	exp@x^(0+128)
  6141  0A59  1283               	bcf	3,5	;RP0=0, select bank0
  6142  0A5A  1303               	bcf	3,6	;RP1=0, select bank0
  6143  0A5B  0849               	movf	?___ftneg+1,w
  6144  0A5C  1683               	bsf	3,5	;RP0=1, select bank1
  6145  0A5D  1303               	bcf	3,6	;RP1=0, select bank1
  6146  0A5E  00BE               	movwf	(exp@x+1)^(0+128)
  6147  0A5F  1283               	bcf	3,5	;RP0=0, select bank0
  6148  0A60  1303               	bcf	3,6	;RP1=0, select bank0
  6149  0A61  084A               	movf	?___ftneg+2,w
  6150  0A62  1683               	bsf	3,5	;RP0=1, select bank1
  6151  0A63  1303               	bcf	3,6	;RP1=0, select bank1
  6152  0A64  00BF               	movwf	(exp@x+2)^(0+128)
  6153  0A65                     l3958:	
  6154  0A65  30AA               	movlw	170
  6155  0A66  1283               	bcf	3,5	;RP0=0, select bank0
  6156  0A67  1303               	bcf	3,6	;RP1=0, select bank0
  6157  0A68  00B8               	movwf	___ftmul@f1
  6158  0A69  30B8               	movlw	184
  6159  0A6A  00B9               	movwf	___ftmul@f1+1
  6160  0A6B  303F               	movlw	63
  6161  0A6C  00BA               	movwf	___ftmul@f1+2
  6162  0A6D  1683               	bsf	3,5	;RP0=1, select bank1
  6163  0A6E  1303               	bcf	3,6	;RP1=0, select bank1
  6164  0A6F  083D               	movf	exp@x^(0+128),w
  6165  0A70  1283               	bcf	3,5	;RP0=0, select bank0
  6166  0A71  1303               	bcf	3,6	;RP1=0, select bank0
  6167  0A72  00BB               	movwf	___ftmul@f2
  6168  0A73  1683               	bsf	3,5	;RP0=1, select bank1
  6169  0A74  1303               	bcf	3,6	;RP1=0, select bank1
  6170  0A75  083E               	movf	(exp@x+1)^(0+128),w
  6171  0A76  1283               	bcf	3,5	;RP0=0, select bank0
  6172  0A77  1303               	bcf	3,6	;RP1=0, select bank0
  6173  0A78  00BC               	movwf	___ftmul@f2+1
  6174  0A79  1683               	bsf	3,5	;RP0=1, select bank1
  6175  0A7A  1303               	bcf	3,6	;RP1=0, select bank1
  6176  0A7B  083F               	movf	(exp@x+2)^(0+128),w
  6177  0A7C  1283               	bcf	3,5	;RP0=0, select bank0
  6178  0A7D  1303               	bcf	3,6	;RP1=0, select bank0
  6179  0A7E  00BD               	movwf	___ftmul@f2+2
  6180  0A7F  160A  118A  2493  120A  158A  	fcall	___ftmul
  6181  0A84  1283               	bcf	3,5	;RP0=0, select bank0
  6182  0A85  1303               	bcf	3,6	;RP1=0, select bank0
  6183  0A86  0838               	movf	?___ftmul,w
  6184  0A87  1683               	bsf	3,5	;RP0=1, select bank1
  6185  0A88  1303               	bcf	3,6	;RP1=0, select bank1
  6186  0A89  00BD               	movwf	exp@x^(0+128)
  6187  0A8A  1283               	bcf	3,5	;RP0=0, select bank0
  6188  0A8B  1303               	bcf	3,6	;RP1=0, select bank0
  6189  0A8C  0839               	movf	?___ftmul+1,w
  6190  0A8D  1683               	bsf	3,5	;RP0=1, select bank1
  6191  0A8E  1303               	bcf	3,6	;RP1=0, select bank1
  6192  0A8F  00BE               	movwf	(exp@x+1)^(0+128)
  6193  0A90  1283               	bcf	3,5	;RP0=0, select bank0
  6194  0A91  1303               	bcf	3,6	;RP1=0, select bank0
  6195  0A92  083A               	movf	?___ftmul+2,w
  6196  0A93  1683               	bsf	3,5	;RP0=1, select bank1
  6197  0A94  1303               	bcf	3,6	;RP1=0, select bank1
  6198  0A95  00BF               	movwf	(exp@x+2)^(0+128)
  6199  0A96  083D               	movf	exp@x^(0+128),w
  6200  0A97  00B4               	movwf	floor@x^(0+128)
  6201  0A98  083E               	movf	(exp@x+1)^(0+128),w
  6202  0A99  00B5               	movwf	(floor@x+1)^(0+128)
  6203  0A9A  083F               	movf	(exp@x+2)^(0+128),w
  6204  0A9B  00B6               	movwf	(floor@x+2)^(0+128)
  6205  0A9C  160A  118A  2566  120A  158A  	fcall	_floor
  6206  0AA1  1683               	bsf	3,5	;RP0=1, select bank1
  6207  0AA2  1303               	bcf	3,6	;RP1=0, select bank1
  6208  0AA3  0834               	movf	?_floor^(0+128),w
  6209  0AA4  00C1               	movwf	_exp$836^(0+128)
  6210  0AA5  0835               	movf	(?_floor+1)^(0+128),w
  6211  0AA6  00C2               	movwf	(_exp$836+1)^(0+128)
  6212  0AA7  0836               	movf	(?_floor+2)^(0+128),w
  6213  0AA8  00C3               	movwf	(_exp$836+2)^(0+128)
  6214  0AA9  0841               	movf	_exp$836^(0+128),w
  6215  0AAA  00A0               	movwf	___fttol@f1^(0+128)
  6216  0AAB  0842               	movf	(_exp$836+1)^(0+128),w
  6217  0AAC  00A1               	movwf	(___fttol@f1+1)^(0+128)
  6218  0AAD  0843               	movf	(_exp$836+2)^(0+128),w
  6219  0AAE  00A2               	movwf	(___fttol@f1+2)^(0+128)
  6220  0AAF  160A  118A  2121  120A  158A  	fcall	___fttol
  6221  0AB4  1683               	bsf	3,5	;RP0=1, select bank1
  6222  0AB5  1303               	bcf	3,6	;RP1=0, select bank1
  6223  0AB6  0821               	movf	(?___fttol^(0+128)+1),w
  6224  0AB7  00C8               	movwf	(exp@exponent+1)^(0+128)
  6225  0AB8  0820               	movf	?___fttol^(0+128),w
  6226  0AB9  00C7               	movwf	exp@exponent^(0+128)
  6227  0ABA  0848               	movf	(exp@exponent+1)^(0+128),w
  6228  0ABB  1283               	bcf	3,5	;RP0=0, select bank0
  6229  0ABC  1303               	bcf	3,6	;RP1=0, select bank0
  6230  0ABD  00A9               	movwf	___awtoft@c+1
  6231  0ABE  1683               	bsf	3,5	;RP0=1, select bank1
  6232  0ABF  1303               	bcf	3,6	;RP1=0, select bank1
  6233  0AC0  0847               	movf	exp@exponent^(0+128),w
  6234  0AC1  1283               	bcf	3,5	;RP0=0, select bank0
  6235  0AC2  1303               	bcf	3,6	;RP1=0, select bank0
  6236  0AC3  00A8               	movwf	___awtoft@c
  6237  0AC4  120A  118A  27D5  120A  158A  	fcall	___awtoft
  6238  0AC9  1283               	bcf	3,5	;RP0=0, select bank0
  6239  0ACA  1303               	bcf	3,6	;RP1=0, select bank0
  6240  0ACB  0828               	movf	?___awtoft,w
  6241  0ACC  00D8               	movwf	___ftsub@f2
  6242  0ACD  0829               	movf	?___awtoft+1,w
  6243  0ACE  00D9               	movwf	___ftsub@f2+1
  6244  0ACF  082A               	movf	?___awtoft+2,w
  6245  0AD0  00DA               	movwf	___ftsub@f2+2
  6246  0AD1  1683               	bsf	3,5	;RP0=1, select bank1
  6247  0AD2  1303               	bcf	3,6	;RP1=0, select bank1
  6248  0AD3  083D               	movf	exp@x^(0+128),w
  6249  0AD4  1283               	bcf	3,5	;RP0=0, select bank0
  6250  0AD5  1303               	bcf	3,6	;RP1=0, select bank0
  6251  0AD6  00DB               	movwf	___ftsub@f1
  6252  0AD7  1683               	bsf	3,5	;RP0=1, select bank1
  6253  0AD8  1303               	bcf	3,6	;RP1=0, select bank1
  6254  0AD9  083E               	movf	(exp@x+1)^(0+128),w
  6255  0ADA  1283               	bcf	3,5	;RP0=0, select bank0
  6256  0ADB  1303               	bcf	3,6	;RP1=0, select bank0
  6257  0ADC  00DC               	movwf	___ftsub@f1+1
  6258  0ADD  1683               	bsf	3,5	;RP0=1, select bank1
  6259  0ADE  1303               	bcf	3,6	;RP1=0, select bank1
  6260  0ADF  083F               	movf	(exp@x+2)^(0+128),w
  6261  0AE0  1283               	bcf	3,5	;RP0=0, select bank0
  6262  0AE1  1303               	bcf	3,6	;RP1=0, select bank0
  6263  0AE2  00DD               	movwf	___ftsub@f1+2
  6264  0AE3  160A  158A  23A3  120A  158A  	fcall	___ftsub
  6265  0AE8  1283               	bcf	3,5	;RP0=0, select bank0
  6266  0AE9  1303               	bcf	3,6	;RP1=0, select bank0
  6267  0AEA  0858               	movf	?___ftsub,w
  6268  0AEB  1683               	bsf	3,5	;RP0=1, select bank1
  6269  0AEC  1303               	bcf	3,6	;RP1=0, select bank1
  6270  0AED  00BD               	movwf	exp@x^(0+128)
  6271  0AEE  1283               	bcf	3,5	;RP0=0, select bank0
  6272  0AEF  1303               	bcf	3,6	;RP1=0, select bank0
  6273  0AF0  0859               	movf	?___ftsub+1,w
  6274  0AF1  1683               	bsf	3,5	;RP0=1, select bank1
  6275  0AF2  1303               	bcf	3,6	;RP1=0, select bank1
  6276  0AF3  00BE               	movwf	(exp@x+1)^(0+128)
  6277  0AF4  1283               	bcf	3,5	;RP0=0, select bank0
  6278  0AF5  1303               	bcf	3,6	;RP1=0, select bank0
  6279  0AF6  085A               	movf	?___ftsub+2,w
  6280  0AF7  1683               	bsf	3,5	;RP0=1, select bank1
  6281  0AF8  1303               	bcf	3,6	;RP1=0, select bank1
  6282  0AF9  00BF               	movwf	(exp@x+2)^(0+128)
  6283  0AFA  083D               	movf	exp@x^(0+128),w
  6284  0AFB  1283               	bcf	3,5	;RP0=0, select bank0
  6285  0AFC  1303               	bcf	3,6	;RP1=0, select bank0
  6286  0AFD  00D8               	movwf	eval_poly@x
  6287  0AFE  1683               	bsf	3,5	;RP0=1, select bank1
  6288  0AFF  1303               	bcf	3,6	;RP1=0, select bank1
  6289  0B00  083E               	movf	(exp@x+1)^(0+128),w
  6290  0B01  1283               	bcf	3,5	;RP0=0, select bank0
  6291  0B02  1303               	bcf	3,6	;RP1=0, select bank0
  6292  0B03  00D9               	movwf	eval_poly@x+1
  6293  0B04  1683               	bsf	3,5	;RP0=1, select bank1
  6294  0B05  1303               	bcf	3,6	;RP1=0, select bank1
  6295  0B06  083F               	movf	(exp@x+2)^(0+128),w
  6296  0B07  1283               	bcf	3,5	;RP0=0, select bank0
  6297  0B08  1303               	bcf	3,6	;RP1=0, select bank0
  6298  0B09  00DA               	movwf	eval_poly@x+2
  6299  0B0A  3001               	movlw	(low ((exp@coeff-__stringbase)| (0+32768)))& (0+255)
  6300  0B0B  1683               	bsf	3,5	;RP0=1, select bank1
  6301  0B0C  1303               	bcf	3,6	;RP1=0, select bank1
  6302  0B0D  00C0               	movwf	??_exp^(0+128)
  6303  0B0E  0840               	movf	??_exp^(0+128),w
  6304  0B0F  1283               	bcf	3,5	;RP0=0, select bank0
  6305  0B10  1303               	bcf	3,6	;RP1=0, select bank0
  6306  0B11  00DB               	movwf	eval_poly@d
  6307  0B12  3009               	movlw	9
  6308  0B13  00DC               	movwf	eval_poly@n
  6309  0B14  3000               	movlw	0
  6310  0B15  00DD               	movwf	eval_poly@n+1
  6311  0B16  160A  118A  201C  120A  158A  	fcall	_eval_poly
  6312  0B1B  1283               	bcf	3,5	;RP0=0, select bank0
  6313  0B1C  1303               	bcf	3,6	;RP1=0, select bank0
  6314  0B1D  0858               	movf	?_eval_poly,w
  6315  0B1E  00E2               	movwf	ldexp@value
  6316  0B1F  0859               	movf	?_eval_poly+1,w
  6317  0B20  00E3               	movwf	ldexp@value+1
  6318  0B21  085A               	movf	?_eval_poly+2,w
  6319  0B22  00E4               	movwf	ldexp@value+2
  6320  0B23  1683               	bsf	3,5	;RP0=1, select bank1
  6321  0B24  1303               	bcf	3,6	;RP1=0, select bank1
  6322  0B25  0848               	movf	(exp@exponent+1)^(0+128),w
  6323  0B26  1283               	bcf	3,5	;RP0=0, select bank0
  6324  0B27  1303               	bcf	3,6	;RP1=0, select bank0
  6325  0B28  00E6               	movwf	ldexp@newexp+1
  6326  0B29  1683               	bsf	3,5	;RP0=1, select bank1
  6327  0B2A  1303               	bcf	3,6	;RP1=0, select bank1
  6328  0B2B  0847               	movf	exp@exponent^(0+128),w
  6329  0B2C  1283               	bcf	3,5	;RP0=0, select bank0
  6330  0B2D  1303               	bcf	3,6	;RP1=0, select bank0
  6331  0B2E  00E5               	movwf	ldexp@newexp
  6332  0B2F  120A  158A  2007  120A  158A  	fcall	_ldexp
  6333  0B34  1283               	bcf	3,5	;RP0=0, select bank0
  6334  0B35  1303               	bcf	3,6	;RP1=0, select bank0
  6335  0B36  0862               	movf	?_ldexp,w
  6336  0B37  1683               	bsf	3,5	;RP0=1, select bank1
  6337  0B38  1303               	bcf	3,6	;RP1=0, select bank1
  6338  0B39  00BD               	movwf	exp@x^(0+128)
  6339  0B3A  1283               	bcf	3,5	;RP0=0, select bank0
  6340  0B3B  1303               	bcf	3,6	;RP1=0, select bank0
  6341  0B3C  0863               	movf	?_ldexp+1,w
  6342  0B3D  1683               	bsf	3,5	;RP0=1, select bank1
  6343  0B3E  1303               	bcf	3,6	;RP1=0, select bank1
  6344  0B3F  00BE               	movwf	(exp@x+1)^(0+128)
  6345  0B40  1283               	bcf	3,5	;RP0=0, select bank0
  6346  0B41  1303               	bcf	3,6	;RP1=0, select bank0
  6347  0B42  0864               	movf	?_ldexp+2,w
  6348  0B43  1683               	bsf	3,5	;RP0=1, select bank1
  6349  0B44  1303               	bcf	3,6	;RP1=0, select bank1
  6350  0B45  00BF               	movwf	(exp@x+2)^(0+128)
  6351  0B46  0849               	movf	exp@sign^(0+128),w
  6352  0B47  1903               	btfsc	3,2
  6353  0B48  0008               	return
  6354  0B49  30FF               	movlw	255
  6355  0B4A  00C4               	movwf	_exp$625^(0+128)
  6356  0B4B  307F               	movlw	127
  6357  0B4C  00C5               	movwf	(_exp$625+1)^(0+128)
  6358  0B4D  307F               	movlw	127
  6359  0B4E  00C6               	movwf	(_exp$625+2)^(0+128)
  6360  0B4F  083F               	movf	(exp@x+2)^(0+128),w
  6361  0B50  0646               	xorwf	(_exp$625+2)^(0+128),w
  6362  0B51  1D03               	skipz
  6363  0B52  2B59               	goto	u4995
  6364  0B53  083E               	movf	(exp@x+1)^(0+128),w
  6365  0B54  0645               	xorwf	(_exp$625+1)^(0+128),w
  6366  0B55  1D03               	skipz
  6367  0B56  2B59               	goto	u4995
  6368  0B57  083D               	movf	exp@x^(0+128),w
  6369  0B58  0644               	xorwf	_exp$625^(0+128),w
  6370  0B59                     u4995:	
  6371  0B59  1D03               	skipz
  6372  0B5A  2B62               	goto	l3980
  6373  0B5B  3000               	movlw	0
  6374  0B5C  00BD               	movwf	?_exp^(0+128)
  6375  0B5D  3000               	movlw	0
  6376  0B5E  00BE               	movwf	(?_exp+1)^(0+128)
  6377  0B5F  3000               	movlw	0
  6378  0B60  00BF               	movwf	(?_exp+2)^(0+128)
  6379  0B61  0008               	return
  6380  0B62                     l3980:	
  6381  0B62  083D               	movf	exp@x^(0+128),w
  6382  0B63  1283               	bcf	3,5	;RP0=0, select bank0
  6383  0B64  1303               	bcf	3,6	;RP1=0, select bank0
  6384  0B65  00A8               	movwf	___ftdiv@f2
  6385  0B66  1683               	bsf	3,5	;RP0=1, select bank1
  6386  0B67  1303               	bcf	3,6	;RP1=0, select bank1
  6387  0B68  083E               	movf	(exp@x+1)^(0+128),w
  6388  0B69  1283               	bcf	3,5	;RP0=0, select bank0
  6389  0B6A  1303               	bcf	3,6	;RP1=0, select bank0
  6390  0B6B  00A9               	movwf	___ftdiv@f2+1
  6391  0B6C  1683               	bsf	3,5	;RP0=1, select bank1
  6392  0B6D  1303               	bcf	3,6	;RP1=0, select bank1
  6393  0B6E  083F               	movf	(exp@x+2)^(0+128),w
  6394  0B6F  1283               	bcf	3,5	;RP0=0, select bank0
  6395  0B70  1303               	bcf	3,6	;RP1=0, select bank0
  6396  0B71  00AA               	movwf	___ftdiv@f2+2
  6397  0B72  3000               	movlw	0
  6398  0B73  00AB               	movwf	___ftdiv@f1
  6399  0B74  3080               	movlw	128
  6400  0B75  00AC               	movwf	___ftdiv@f1+1
  6401  0B76  303F               	movlw	63
  6402  0B77  00AD               	movwf	___ftdiv@f1+2
  6403  0B78  160A  118A  230D   	fcall	___ftdiv
  6404  0B7B  1283               	bcf	3,5	;RP0=0, select bank0
  6405  0B7C  1303               	bcf	3,6	;RP1=0, select bank0
  6406  0B7D  0828               	movf	?___ftdiv,w
  6407  0B7E  1683               	bsf	3,5	;RP0=1, select bank1
  6408  0B7F  1303               	bcf	3,6	;RP1=0, select bank1
  6409  0B80  00BD               	movwf	?_exp^(0+128)
  6410  0B81  1283               	bcf	3,5	;RP0=0, select bank0
  6411  0B82  1303               	bcf	3,6	;RP1=0, select bank0
  6412  0B83  0829               	movf	?___ftdiv+1,w
  6413  0B84  1683               	bsf	3,5	;RP0=1, select bank1
  6414  0B85  1303               	bcf	3,6	;RP1=0, select bank1
  6415  0B86  00BE               	movwf	(?_exp+1)^(0+128)
  6416  0B87  1283               	bcf	3,5	;RP0=0, select bank0
  6417  0B88  1303               	bcf	3,6	;RP1=0, select bank0
  6418  0B89  082A               	movf	?___ftdiv+2,w
  6419  0B8A  1683               	bsf	3,5	;RP0=1, select bank1
  6420  0B8B  1303               	bcf	3,6	;RP1=0, select bank1
  6421  0B8C  00BF               	movwf	(?_exp+2)^(0+128)
  6422  0B8D  0008               	return
  6423  0B8E                     __end_of_exp:	
  6424                           
  6425                           	psect	text14
  6426  0807                     __ptext14:	
  6427 ;; *************** function _ldexp *****************
  6428 ;; Defined at:
  6429 ;;		line 277 in file "/opt/microchip/xc8/v1.34/sources/common/frexp.c"
  6430 ;; Parameters:    Size  Location     Type
  6431 ;;  value           3   66[BANK0 ] unsigned char 
  6432 ;;  newexp          2   69[BANK0 ] int 
  6433 ;; Auto vars:     Size  Location     Type
  6434 ;;		None
  6435 ;; Return value:  Size  Location     Type
  6436 ;;                  3   66[BANK0 ] int 
  6437 ;; Registers used:
  6438 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  6439 ;; Tracked objects:
  6440 ;;		On entry : 0/0
  6441 ;;		On exit  : 0/0
  6442 ;;		Unchanged: 0/0
  6443 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6444 ;;      Params:         0       5       0       0       0
  6445 ;;      Locals:         0       3       0       0       0
  6446 ;;      Temps:          0       2       0       0       0
  6447 ;;      Totals:         0      10       0       0       0
  6448 ;;Total ram usage:       10 bytes
  6449 ;; Hardware stack levels used:    1
  6450 ;; Hardware stack levels required when called:    2
  6451 ;; This function calls:
  6452 ;;		___ftge
  6453 ;;		___ftneg
  6454 ;; This function is called by:
  6455 ;;		_exp
  6456 ;; This function uses a non-reentrant model
  6457 ;;
  6458                           
  6459                           
  6460                           ;psect for function _ldexp
  6461  0807                     _ldexp:	
  6462                           
  6463                           ;incstack = 0
  6464                           ; Regs used in _ldexp: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  6465  0807  1283               	bcf	3,5	;RP0=0, select bank0
  6466  0808  1303               	bcf	3,6	;RP1=0, select bank0
  6467  0809  0864               	movf	ldexp@value+2,w
  6468  080A  0463               	iorwf	ldexp@value+1,w
  6469  080B  0462               	iorwf	ldexp@value,w
  6470  080C  1D03               	skipz
  6471  080D  2815               	goto	l3744
  6472  080E  3000               	movlw	0
  6473  080F  00E2               	movwf	?_ldexp
  6474  0810  3000               	movlw	0
  6475  0811  00E3               	movwf	?_ldexp+1
  6476  0812  3000               	movlw	0
  6477  0813  00E4               	movwf	?_ldexp+2
  6478  0814  0008               	return
  6479  0815                     l3744:	
  6480  0815  0864               	movf	ldexp@value+2,w
  6481  0816  397F               	andlw	127
  6482  0817  00E7               	movwf	??_ldexp
  6483  0818  01E8               	clrf	??_ldexp+1
  6484  0819  1003               	clrc
  6485  081A  0DE7               	rlf	??_ldexp,f
  6486  081B  0DE8               	rlf	??_ldexp+1,f
  6487  081C  0867               	movf	??_ldexp,w
  6488  081D  07E5               	addwf	ldexp@newexp,f
  6489  081E  1803               	skipnc
  6490  081F  0AE6               	incf	ldexp@newexp+1,f
  6491  0820  0868               	movf	??_ldexp+1,w
  6492  0821  07E6               	addwf	ldexp@newexp+1,f
  6493  0822  0D63               	rlf	ldexp@value+1,w
  6494  0823  0D63               	rlf	ldexp@value+1,w
  6495  0824  3901               	andlw	1
  6496  0825  00E7               	movwf	??_ldexp
  6497  0826  01E8               	clrf	??_ldexp+1
  6498  0827  0867               	movf	??_ldexp,w
  6499  0828  07E5               	addwf	ldexp@newexp,f
  6500  0829  1803               	skipnc
  6501  082A  0AE6               	incf	ldexp@newexp+1,f
  6502  082B  0868               	movf	??_ldexp+1,w
  6503  082C  07E6               	addwf	ldexp@newexp+1,f
  6504  082D  1FE6               	btfss	ldexp@newexp+1,7
  6505  082E  283E               	goto	l3754
  6506  082F  3022               	movlw	34
  6507  0830  1683               	bsf	3,5	;RP0=1, select bank3
  6508  0831  1703               	bsf	3,6	;RP1=1, select bank3
  6509  0832  00C8               	movwf	_errno^(0+384)
  6510  0833  3000               	movlw	0
  6511  0834  00C9               	movwf	(_errno^(0+384)+1)
  6512  0835  3000               	movlw	0
  6513  0836  1283               	bcf	3,5	;RP0=0, select bank0
  6514  0837  1303               	bcf	3,6	;RP1=0, select bank0
  6515  0838  00E2               	movwf	?_ldexp
  6516  0839  3000               	movlw	0
  6517  083A  00E3               	movwf	?_ldexp+1
  6518  083B  3000               	movlw	0
  6519  083C  00E4               	movwf	?_ldexp+2
  6520  083D  0008               	return
  6521  083E                     l3754:	
  6522  083E  0866               	movf	ldexp@newexp+1,w
  6523  083F  3A80               	xorlw	128
  6524  0840  00FF               	movwf	127
  6525  0841  3081               	movlw	129
  6526  0842  027F               	subwf	127,w
  6527  0843  1D03               	skipz
  6528  0844  2847               	goto	u4635
  6529  0845  3000               	movlw	0
  6530  0846  0265               	subwf	ldexp@newexp,w
  6531  0847                     u4635:	
  6532  0847  1C03               	skipc
  6533  0848  2887               	goto	l3778
  6534  0849  3022               	movlw	34
  6535  084A  1683               	bsf	3,5	;RP0=1, select bank3
  6536  084B  1703               	bsf	3,6	;RP1=1, select bank3
  6537  084C  00C8               	movwf	_errno^(0+384)
  6538  084D  3000               	movlw	0
  6539  084E  00C9               	movwf	(_errno^(0+384)+1)
  6540  084F  1283               	bcf	3,5	;RP0=0, select bank0
  6541  0850  1303               	bcf	3,6	;RP1=0, select bank0
  6542  0851  0862               	movf	ldexp@value,w
  6543  0852  00A0               	movwf	___ftge@ff1
  6544  0853  0863               	movf	ldexp@value+1,w
  6545  0854  00A1               	movwf	___ftge@ff1+1
  6546  0855  0864               	movf	ldexp@value+2,w
  6547  0856  00A2               	movwf	___ftge@ff1+2
  6548  0857  3000               	movlw	0
  6549  0858  00A3               	movwf	___ftge@ff2
  6550  0859  3000               	movlw	0
  6551  085A  00A4               	movwf	___ftge@ff2+1
  6552  085B  3000               	movlw	0
  6553  085C  00A5               	movwf	___ftge@ff2+2
  6554  085D  160A  158A  258C  120A  158A  	fcall	___ftge
  6555  0862  1803               	btfsc	3,0
  6556  0863  287E               	goto	l3774
  6557  0864  30FF               	movlw	255
  6558  0865  1283               	bcf	3,5	;RP0=0, select bank0
  6559  0866  1303               	bcf	3,6	;RP1=0, select bank0
  6560  0867  00E9               	movwf	_ldexp$492
  6561  0868  307F               	movlw	127
  6562  0869  00EA               	movwf	_ldexp$492+1
  6563  086A  307F               	movlw	127
  6564  086B  00EB               	movwf	_ldexp$492+2
  6565  086C  0869               	movf	_ldexp$492,w
  6566  086D  00C8               	movwf	___ftneg@f1
  6567  086E  086A               	movf	_ldexp$492+1,w
  6568  086F  00C9               	movwf	___ftneg@f1+1
  6569  0870  086B               	movf	_ldexp$492+2,w
  6570  0871  00CA               	movwf	___ftneg@f1+2
  6571  0872  160A  158A  236E   	fcall	___ftneg
  6572  0875  1283               	bcf	3,5	;RP0=0, select bank0
  6573  0876  1303               	bcf	3,6	;RP1=0, select bank0
  6574  0877  0848               	movf	?___ftneg,w
  6575  0878  00E2               	movwf	?_ldexp
  6576  0879  0849               	movf	?___ftneg+1,w
  6577  087A  00E3               	movwf	?_ldexp+1
  6578  087B  084A               	movf	?___ftneg+2,w
  6579  087C  00E4               	movwf	?_ldexp+2
  6580  087D  0008               	return
  6581  087E                     l3774:	
  6582  087E  30FF               	movlw	255
  6583  087F  1283               	bcf	3,5	;RP0=0, select bank0
  6584  0880  1303               	bcf	3,6	;RP1=0, select bank0
  6585  0881  00E2               	movwf	?_ldexp
  6586  0882  307F               	movlw	127
  6587  0883  00E3               	movwf	?_ldexp+1
  6588  0884  307F               	movlw	127
  6589  0885  00E4               	movwf	?_ldexp+2
  6590  0886  0008               	return
  6591  0887                     l3778:	
  6592  0887  1283               	bcf	3,5	;RP0=0, select bank0
  6593  0888  1303               	bcf	3,6	;RP1=0, select bank0
  6594  0889  0866               	movf	ldexp@newexp+1,w
  6595  088A  00E8               	movwf	??_ldexp+1
  6596  088B  0865               	movf	ldexp@newexp,w
  6597  088C  00E7               	movwf	??_ldexp
  6598  088D  0D68               	rlf	??_ldexp+1,w
  6599  088E  0CE8               	rrf	??_ldexp+1,f
  6600  088F  0CE7               	rrf	??_ldexp,f
  6601  0890  0864               	movf	ldexp@value+2,w
  6602  0891  0667               	xorwf	??_ldexp,w
  6603  0892  3980               	andlw	-128
  6604  0893  0667               	xorwf	??_ldexp,w
  6605  0894  00E4               	movwf	ldexp@value+2
  6606  0895  0865               	movf	ldexp@newexp,w
  6607  0896  3901               	andlw	1
  6608  0897  00E7               	movwf	??_ldexp
  6609  0898  0CE7               	rrf	??_ldexp,f
  6610  0899  0CE7               	rrf	??_ldexp,f
  6611  089A  0863               	movf	ldexp@value+1,w
  6612  089B  0667               	xorwf	??_ldexp,w
  6613  089C  397F               	andlw	-129
  6614  089D  0667               	xorwf	??_ldexp,w
  6615  089E  00E3               	movwf	ldexp@value+1
  6616  089F  0008               	return
  6617  08A0                     __end_of_ldexp:	
  6618                           
  6619                           	psect	text15
  6620  1B6E                     __ptext15:	
  6621 ;; *************** function ___ftneg *****************
  6622 ;; Defined at:
  6623 ;;		line 15 in file "/opt/microchip/xc8/v1.34/sources/common/ftneg.c"
  6624 ;; Parameters:    Size  Location     Type
  6625 ;;  f1              3   40[BANK0 ] float 
  6626 ;; Auto vars:     Size  Location     Type
  6627 ;;		None
  6628 ;; Return value:  Size  Location     Type
  6629 ;;                  3   40[BANK0 ] float 
  6630 ;; Registers used:
  6631 ;;		wreg
  6632 ;; Tracked objects:
  6633 ;;		On entry : 0/0
  6634 ;;		On exit  : 0/0
  6635 ;;		Unchanged: 0/0
  6636 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6637 ;;      Params:         0       3       0       0       0
  6638 ;;      Locals:         0       0       0       0       0
  6639 ;;      Temps:          0       0       0       0       0
  6640 ;;      Totals:         0       3       0       0       0
  6641 ;;Total ram usage:        3 bytes
  6642 ;; Hardware stack levels used:    1
  6643 ;; Hardware stack levels required when called:    1
  6644 ;; This function calls:
  6645 ;;		Nothing
  6646 ;; This function is called by:
  6647 ;;		_measure_capacitance
  6648 ;;		_measure_inductance
  6649 ;;		_ldexp
  6650 ;;		_pow
  6651 ;;		_exp
  6652 ;; This function uses a non-reentrant model
  6653 ;;
  6654                           
  6655                           
  6656                           ;psect for function ___ftneg
  6657  1B6E                     ___ftneg:	
  6658                           
  6659                           ;incstack = 0
  6660                           ; Regs used in ___ftneg: [wreg]
  6661  1B6E  1283               	bcf	3,5	;RP0=0, select bank0
  6662  1B6F  1303               	bcf	3,6	;RP1=0, select bank0
  6663  1B70  084A               	movf	___ftneg@f1+2,w
  6664  1B71  0449               	iorwf	___ftneg@f1+1,w
  6665  1B72  0448               	iorwf	___ftneg@f1,w
  6666  1B73  1903               	skipnz
  6667  1B74  0008               	return
  6668  1B75  3080               	movlw	128
  6669  1B76  06CA               	xorwf	___ftneg@f1+2,f
  6670  1B77  0008               	return
  6671  1B78                     __end_of___ftneg:	
  6672                           
  6673                           	psect	text16
  6674  1566                     __ptext16:	
  6675 ;; *************** function _floor *****************
  6676 ;; Defined at:
  6677 ;;		line 13 in file "/opt/microchip/xc8/v1.34/sources/common/floor.c"
  6678 ;; Parameters:    Size  Location     Type
  6679 ;;  x               3   20[BANK1 ] float 
  6680 ;; Auto vars:     Size  Location     Type
  6681 ;;  i               3   24[BANK1 ] float 
  6682 ;;  expon           2   27[BANK1 ] int 
  6683 ;; Return value:  Size  Location     Type
  6684 ;;                  3   20[BANK1 ] int 
  6685 ;; Registers used:
  6686 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  6687 ;; Tracked objects:
  6688 ;;		On entry : 0/0
  6689 ;;		On exit  : 0/0
  6690 ;;		Unchanged: 0/0
  6691 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6692 ;;      Params:         0       0       3       0       0
  6693 ;;      Locals:         0       0       5       0       0
  6694 ;;      Temps:          0       0       1       0       0
  6695 ;;      Totals:         0       0       9       0       0
  6696 ;;Total ram usage:        9 bytes
  6697 ;; Hardware stack levels used:    1
  6698 ;; Hardware stack levels required when called:    3
  6699 ;; This function calls:
  6700 ;;		___altoft
  6701 ;;		___ftadd
  6702 ;;		___ftge
  6703 ;;		___fttol
  6704 ;;		_frexp
  6705 ;; This function is called by:
  6706 ;;		_format_double
  6707 ;;		_exp
  6708 ;;		_format_float
  6709 ;; This function uses a non-reentrant model
  6710 ;;
  6711                           
  6712                           
  6713                           ;psect for function _floor
  6714  1566                     _floor:	
  6715                           
  6716                           ;incstack = 0
  6717                           ; Regs used in _floor: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  6718  1566  1683               	bsf	3,5	;RP0=1, select bank1
  6719  1567  1303               	bcf	3,6	;RP1=0, select bank1
  6720  1568  0834               	movf	floor@x^(0+128),w
  6721  1569  1283               	bcf	3,5	;RP0=0, select bank0
  6722  156A  1303               	bcf	3,6	;RP1=0, select bank0
  6723  156B  00A0               	movwf	frexp@value
  6724  156C  1683               	bsf	3,5	;RP0=1, select bank1
  6725  156D  1303               	bcf	3,6	;RP1=0, select bank1
  6726  156E  0835               	movf	(floor@x+1)^(0+128),w
  6727  156F  1283               	bcf	3,5	;RP0=0, select bank0
  6728  1570  1303               	bcf	3,6	;RP1=0, select bank0
  6729  1571  00A1               	movwf	frexp@value+1
  6730  1572  1683               	bsf	3,5	;RP0=1, select bank1
  6731  1573  1303               	bcf	3,6	;RP1=0, select bank1
  6732  1574  0836               	movf	(floor@x+2)^(0+128),w
  6733  1575  1283               	bcf	3,5	;RP0=0, select bank0
  6734  1576  1303               	bcf	3,6	;RP1=0, select bank0
  6735  1577  00A2               	movwf	frexp@value+2
  6736  1578  30BB               	movlw	(low (floor@expon| 0))& (0+255)
  6737  1579  1683               	bsf	3,5	;RP0=1, select bank1
  6738  157A  1303               	bcf	3,6	;RP1=0, select bank1
  6739  157B  00B7               	movwf	??_floor^(0+128)
  6740  157C  0837               	movf	??_floor^(0+128),w
  6741  157D  1283               	bcf	3,5	;RP0=0, select bank0
  6742  157E  1303               	bcf	3,6	;RP1=0, select bank0
  6743  157F  00A3               	movwf	frexp@eptr
  6744  1580  160A  158A  24FC  160A  118A  	fcall	_frexp
  6745  1585  1683               	bsf	3,5	;RP0=1, select bank1
  6746  1586  1303               	bcf	3,6	;RP1=0, select bank1
  6747  1587  1FBC               	btfss	(floor@expon+1)^(0+128),7
  6748  1588  2DB8               	goto	l3712
  6749  1589  0834               	movf	floor@x^(0+128),w
  6750  158A  1283               	bcf	3,5	;RP0=0, select bank0
  6751  158B  1303               	bcf	3,6	;RP1=0, select bank0
  6752  158C  00A0               	movwf	___ftge@ff1
  6753  158D  1683               	bsf	3,5	;RP0=1, select bank1
  6754  158E  1303               	bcf	3,6	;RP1=0, select bank1
  6755  158F  0835               	movf	(floor@x+1)^(0+128),w
  6756  1590  1283               	bcf	3,5	;RP0=0, select bank0
  6757  1591  1303               	bcf	3,6	;RP1=0, select bank0
  6758  1592  00A1               	movwf	___ftge@ff1+1
  6759  1593  1683               	bsf	3,5	;RP0=1, select bank1
  6760  1594  1303               	bcf	3,6	;RP1=0, select bank1
  6761  1595  0836               	movf	(floor@x+2)^(0+128),w
  6762  1596  1283               	bcf	3,5	;RP0=0, select bank0
  6763  1597  1303               	bcf	3,6	;RP1=0, select bank0
  6764  1598  00A2               	movwf	___ftge@ff1+2
  6765  1599  3000               	movlw	0
  6766  159A  00A3               	movwf	___ftge@ff2
  6767  159B  3000               	movlw	0
  6768  159C  00A4               	movwf	___ftge@ff2+1
  6769  159D  3000               	movlw	0
  6770  159E  00A5               	movwf	___ftge@ff2+2
  6771  159F  160A  158A  258C  160A  118A  	fcall	___ftge
  6772  15A4  1803               	btfsc	3,0
  6773  15A5  2DAF               	goto	l3708
  6774  15A6  3000               	movlw	0
  6775  15A7  1683               	bsf	3,5	;RP0=1, select bank1
  6776  15A8  1303               	bcf	3,6	;RP1=0, select bank1
  6777  15A9  00B4               	movwf	?_floor^(0+128)
  6778  15AA  3080               	movlw	128
  6779  15AB  00B5               	movwf	(?_floor+1)^(0+128)
  6780  15AC  30BF               	movlw	191
  6781  15AD  00B6               	movwf	(?_floor+2)^(0+128)
  6782  15AE  0008               	return
  6783  15AF                     l3708:	
  6784  15AF  3000               	movlw	0
  6785  15B0  1683               	bsf	3,5	;RP0=1, select bank1
  6786  15B1  1303               	bcf	3,6	;RP1=0, select bank1
  6787  15B2  00B4               	movwf	?_floor^(0+128)
  6788  15B3  3000               	movlw	0
  6789  15B4  00B5               	movwf	(?_floor+1)^(0+128)
  6790  15B5  3000               	movlw	0
  6791  15B6  00B6               	movwf	(?_floor+2)^(0+128)
  6792  15B7  0008               	return
  6793  15B8                     l3712:	
  6794  15B8  3000               	movlw	0
  6795  15B9  023C               	subwf	(floor@expon+1)^(0+128),w
  6796  15BA  3015               	movlw	21
  6797  15BB  1903               	skipnz
  6798  15BC  023B               	subwf	floor@expon^(0+128),w
  6799  15BD  1803               	btfsc	3,0
  6800  15BE  0008               	return
  6801  15BF  0834               	movf	floor@x^(0+128),w
  6802  15C0  00A0               	movwf	___fttol@f1^(0+128)
  6803  15C1  0835               	movf	(floor@x+1)^(0+128),w
  6804  15C2  00A1               	movwf	(___fttol@f1+1)^(0+128)
  6805  15C3  0836               	movf	(floor@x+2)^(0+128),w
  6806  15C4  00A2               	movwf	(___fttol@f1+2)^(0+128)
  6807  15C5  160A  118A  2121  160A  118A  	fcall	___fttol
  6808  15CA  1683               	bsf	3,5	;RP0=1, select bank1
  6809  15CB  1303               	bcf	3,6	;RP1=0, select bank1
  6810  15CC  0823               	movf	(?___fttol+3)^(0+128),w
  6811  15CD  00B1               	movwf	(___altoft@c+3)^(0+128)
  6812  15CE  0822               	movf	(?___fttol+2)^(0+128),w
  6813  15CF  00B0               	movwf	(___altoft@c+2)^(0+128)
  6814  15D0  0821               	movf	(?___fttol+1)^(0+128),w
  6815  15D1  00AF               	movwf	(___altoft@c+1)^(0+128)
  6816  15D2  0820               	movf	?___fttol^(0+128),w
  6817  15D3  00AE               	movwf	___altoft@c^(0+128)
  6818  15D4  160A  158A  264E  160A  118A  	fcall	___altoft
  6819  15D9  1683               	bsf	3,5	;RP0=1, select bank1
  6820  15DA  1303               	bcf	3,6	;RP1=0, select bank1
  6821  15DB  082E               	movf	?___altoft^(0+128),w
  6822  15DC  00B8               	movwf	floor@i^(0+128)
  6823  15DD  082F               	movf	(?___altoft+1)^(0+128),w
  6824  15DE  00B9               	movwf	(floor@i+1)^(0+128)
  6825  15DF  0830               	movf	(?___altoft+2)^(0+128),w
  6826  15E0  00BA               	movwf	(floor@i+2)^(0+128)
  6827  15E1  0834               	movf	floor@x^(0+128),w
  6828  15E2  1283               	bcf	3,5	;RP0=0, select bank0
  6829  15E3  1303               	bcf	3,6	;RP1=0, select bank0
  6830  15E4  00A0               	movwf	___ftge@ff1
  6831  15E5  1683               	bsf	3,5	;RP0=1, select bank1
  6832  15E6  1303               	bcf	3,6	;RP1=0, select bank1
  6833  15E7  0835               	movf	(floor@x+1)^(0+128),w
  6834  15E8  1283               	bcf	3,5	;RP0=0, select bank0
  6835  15E9  1303               	bcf	3,6	;RP1=0, select bank0
  6836  15EA  00A1               	movwf	___ftge@ff1+1
  6837  15EB  1683               	bsf	3,5	;RP0=1, select bank1
  6838  15EC  1303               	bcf	3,6	;RP1=0, select bank1
  6839  15ED  0836               	movf	(floor@x+2)^(0+128),w
  6840  15EE  1283               	bcf	3,5	;RP0=0, select bank0
  6841  15EF  1303               	bcf	3,6	;RP1=0, select bank0
  6842  15F0  00A2               	movwf	___ftge@ff1+2
  6843  15F1  1683               	bsf	3,5	;RP0=1, select bank1
  6844  15F2  1303               	bcf	3,6	;RP1=0, select bank1
  6845  15F3  0838               	movf	floor@i^(0+128),w
  6846  15F4  1283               	bcf	3,5	;RP0=0, select bank0
  6847  15F5  1303               	bcf	3,6	;RP1=0, select bank0
  6848  15F6  00A3               	movwf	___ftge@ff2
  6849  15F7  1683               	bsf	3,5	;RP0=1, select bank1
  6850  15F8  1303               	bcf	3,6	;RP1=0, select bank1
  6851  15F9  0839               	movf	(floor@i+1)^(0+128),w
  6852  15FA  1283               	bcf	3,5	;RP0=0, select bank0
  6853  15FB  1303               	bcf	3,6	;RP1=0, select bank0
  6854  15FC  00A4               	movwf	___ftge@ff2+1
  6855  15FD  1683               	bsf	3,5	;RP0=1, select bank1
  6856  15FE  1303               	bcf	3,6	;RP1=0, select bank1
  6857  15FF  083A               	movf	(floor@i+2)^(0+128),w
  6858  1600  1283               	bcf	3,5	;RP0=0, select bank0
  6859  1601  1303               	bcf	3,6	;RP1=0, select bank0
  6860  1602  00A5               	movwf	___ftge@ff2+2
  6861  1603  160A  158A  258C  160A  118A  	fcall	___ftge
  6862  1608  1803               	btfsc	3,0
  6863  1609  2E3A               	goto	l3722
  6864  160A  3000               	movlw	0
  6865  160B  1283               	bcf	3,5	;RP0=0, select bank0
  6866  160C  1303               	bcf	3,6	;RP1=0, select bank0
  6867  160D  00CB               	movwf	___ftadd@f1
  6868  160E  3080               	movlw	128
  6869  160F  00CC               	movwf	___ftadd@f1+1
  6870  1610  30BF               	movlw	191
  6871  1611  00CD               	movwf	___ftadd@f1+2
  6872  1612  1683               	bsf	3,5	;RP0=1, select bank1
  6873  1613  1303               	bcf	3,6	;RP1=0, select bank1
  6874  1614  0838               	movf	floor@i^(0+128),w
  6875  1615  1283               	bcf	3,5	;RP0=0, select bank0
  6876  1616  1303               	bcf	3,6	;RP1=0, select bank0
  6877  1617  00CE               	movwf	___ftadd@f2
  6878  1618  1683               	bsf	3,5	;RP0=1, select bank1
  6879  1619  1303               	bcf	3,6	;RP1=0, select bank1
  6880  161A  0839               	movf	(floor@i+1)^(0+128),w
  6881  161B  1283               	bcf	3,5	;RP0=0, select bank0
  6882  161C  1303               	bcf	3,6	;RP1=0, select bank0
  6883  161D  00CF               	movwf	___ftadd@f2+1
  6884  161E  1683               	bsf	3,5	;RP0=1, select bank1
  6885  161F  1303               	bcf	3,6	;RP1=0, select bank1
  6886  1620  083A               	movf	(floor@i+2)^(0+128),w
  6887  1621  1283               	bcf	3,5	;RP0=0, select bank0
  6888  1622  1303               	bcf	3,6	;RP1=0, select bank0
  6889  1623  00D0               	movwf	___ftadd@f2+2
  6890  1624  120A  158A  20A0   	fcall	___ftadd
  6891  1627  1283               	bcf	3,5	;RP0=0, select bank0
  6892  1628  1303               	bcf	3,6	;RP1=0, select bank0
  6893  1629  084B               	movf	?___ftadd,w
  6894  162A  1683               	bsf	3,5	;RP0=1, select bank1
  6895  162B  1303               	bcf	3,6	;RP1=0, select bank1
  6896  162C  00B4               	movwf	?_floor^(0+128)
  6897  162D  1283               	bcf	3,5	;RP0=0, select bank0
  6898  162E  1303               	bcf	3,6	;RP1=0, select bank0
  6899  162F  084C               	movf	?___ftadd+1,w
  6900  1630  1683               	bsf	3,5	;RP0=1, select bank1
  6901  1631  1303               	bcf	3,6	;RP1=0, select bank1
  6902  1632  00B5               	movwf	(?_floor+1)^(0+128)
  6903  1633  1283               	bcf	3,5	;RP0=0, select bank0
  6904  1634  1303               	bcf	3,6	;RP1=0, select bank0
  6905  1635  084D               	movf	?___ftadd+2,w
  6906  1636  1683               	bsf	3,5	;RP0=1, select bank1
  6907  1637  1303               	bcf	3,6	;RP1=0, select bank1
  6908  1638  00B6               	movwf	(?_floor+2)^(0+128)
  6909  1639  0008               	return
  6910  163A                     l3722:	
  6911  163A  1683               	bsf	3,5	;RP0=1, select bank1
  6912  163B  1303               	bcf	3,6	;RP1=0, select bank1
  6913  163C  0838               	movf	floor@i^(0+128),w
  6914  163D  00B4               	movwf	?_floor^(0+128)
  6915  163E  0839               	movf	(floor@i+1)^(0+128),w
  6916  163F  00B5               	movwf	(?_floor+1)^(0+128)
  6917  1640  083A               	movf	(floor@i+2)^(0+128),w
  6918  1641  00B6               	movwf	(?_floor+2)^(0+128)
  6919  1642  0008               	return
  6920  1643                     __end_of_floor:	
  6921                           
  6922                           	psect	text17
  6923  1121                     __ptext17:	
  6924 ;; *************** function ___fttol *****************
  6925 ;; Defined at:
  6926 ;;		line 44 in file "/opt/microchip/xc8/v1.34/sources/common/fttol.c"
  6927 ;; Parameters:    Size  Location     Type
  6928 ;;  f1              3    0[BANK1 ] float 
  6929 ;; Auto vars:     Size  Location     Type
  6930 ;;  lval            4    9[BANK1 ] unsigned long 
  6931 ;;  exp1            1   13[BANK1 ] unsigned char 
  6932 ;;  sign1           1    8[BANK1 ] unsigned char 
  6933 ;; Return value:  Size  Location     Type
  6934 ;;                  4    0[BANK1 ] long 
  6935 ;; Registers used:
  6936 ;;		wreg, status,2, status,0
  6937 ;; Tracked objects:
  6938 ;;		On entry : 0/0
  6939 ;;		On exit  : 0/0
  6940 ;;		Unchanged: 0/0
  6941 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6942 ;;      Params:         0       0       4       0       0
  6943 ;;      Locals:         0       0       6       0       0
  6944 ;;      Temps:          0       0       4       0       0
  6945 ;;      Totals:         0       0      14       0       0
  6946 ;;Total ram usage:       14 bytes
  6947 ;; Hardware stack levels used:    1
  6948 ;; Hardware stack levels required when called:    1
  6949 ;; This function calls:
  6950 ;;		Nothing
  6951 ;; This function is called by:
  6952 ;;		_measure_capacitance
  6953 ;;		_measure_inductance
  6954 ;;		_format_double
  6955 ;;		_floor
  6956 ;;		_pow
  6957 ;;		_exp
  6958 ;;		_format_float
  6959 ;; This function uses a non-reentrant model
  6960 ;;
  6961                           
  6962                           
  6963                           ;psect for function ___fttol
  6964  1121                     ___fttol:	
  6965                           
  6966                           ;incstack = 0
  6967                           ; Regs used in ___fttol: [wreg+status,2+status,0]
  6968  1121  1683               	bsf	3,5	;RP0=1, select bank1
  6969  1122  1303               	bcf	3,6	;RP1=0, select bank1
  6970  1123  0820               	movf	___fttol@f1^(0+128),w
  6971  1124  00A4               	movwf	??___fttol^(0+128)
  6972  1125  0821               	movf	(___fttol@f1+1)^(0+128),w
  6973  1126  00A5               	movwf	(??___fttol^(0+128)+1)
  6974  1127  0822               	movf	(___fttol@f1+2)^(0+128),w
  6975  1128  00A6               	movwf	(??___fttol^(0+128)+2)
  6976  1129  1003               	clrc
  6977  112A  0D25               	rlf	(??___fttol^(0+128)+1),w
  6978  112B  0D26               	rlf	(??___fttol^(0+128)+2),w
  6979  112C  00A7               	movwf	(??___fttol+3)^(0+128)
  6980  112D  0827               	movf	(??___fttol+3)^(0+128),w
  6981  112E  00AD               	movwf	___fttol@exp1^(0+128)
  6982  112F  082D               	movf	___fttol@exp1^(0+128),w
  6983  1130  1D03               	btfss	3,2
  6984  1131  293B               	goto	l3648
  6985  1132  3000               	movlw	0
  6986  1133  00A3               	movwf	(?___fttol+3)^(0+128)
  6987  1134  3000               	movlw	0
  6988  1135  00A2               	movwf	(?___fttol+2)^(0+128)
  6989  1136  3000               	movlw	0
  6990  1137  00A1               	movwf	(?___fttol+1)^(0+128)
  6991  1138  3000               	movlw	0
  6992  1139  00A0               	movwf	?___fttol^(0+128)
  6993  113A  0008               	return
  6994  113B                     l3648:	
  6995  113B  0820               	movf	___fttol@f1^(0+128),w
  6996  113C  00A4               	movwf	??___fttol^(0+128)
  6997  113D  0821               	movf	(___fttol@f1+1)^(0+128),w
  6998  113E  00A5               	movwf	(??___fttol^(0+128)+1)
  6999  113F  0822               	movf	(___fttol@f1+2)^(0+128),w
  7000  1140  00A6               	movwf	(??___fttol^(0+128)+2)
  7001  1141  3017               	movlw	23
  7002  1142                     u4465:	
  7003  1142  1003               	clrc
  7004  1143  0CA6               	rrf	(??___fttol^(0+128)+2),f
  7005  1144  0CA5               	rrf	(??___fttol^(0+128)+1),f
  7006  1145  0CA4               	rrf	??___fttol^(0+128),f
  7007  1146  3EFF               	addlw	-1
  7008  1147  1D03               	skipz
  7009  1148  2942               	goto	u4465
  7010  1149  0824               	movf	??___fttol^(0+128),w
  7011  114A  00A7               	movwf	(??___fttol+3)^(0+128)
  7012  114B  0827               	movf	(??___fttol+3)^(0+128),w
  7013  114C  00A8               	movwf	___fttol@sign1^(0+128)
  7014  114D  17A1               	bsf	(___fttol@f1^(0+128)+1),7
  7015  114E  30FF               	movlw	255
  7016  114F  05A0               	andwf	___fttol@f1^(0+128),f
  7017  1150  30FF               	movlw	255
  7018  1151  05A1               	andwf	(___fttol@f1+1)^(0+128),f
  7019  1152  3000               	movlw	0
  7020  1153  05A2               	andwf	(___fttol@f1+2)^(0+128),f
  7021  1154  0820               	movf	___fttol@f1^(0+128),w
  7022  1155  00A9               	movwf	___fttol@lval^(0+128)
  7023  1156  0821               	movf	(___fttol@f1+1)^(0+128),w
  7024  1157  00AA               	movwf	(___fttol@lval^(0+128)+1)
  7025  1158  0822               	movf	(___fttol@f1+2)^(0+128),w
  7026  1159  00AB               	movwf	(___fttol@lval^(0+128)+2)
  7027  115A  01AC               	clrf	(___fttol@lval^(0+128)+3)
  7028  115B  308E               	movlw	142
  7029  115C  02AD               	subwf	___fttol@exp1^(0+128),f
  7030  115D  1FAD               	btfss	___fttol@exp1^(0+128),7
  7031  115E  297D               	goto	l3668
  7032  115F  082D               	movf	___fttol@exp1^(0+128),w
  7033  1160  3A80               	xorlw	128
  7034  1161  3E8F               	addlw	143
  7035  1162  1803               	skipnc
  7036  1163  296D               	goto	l3666
  7037  1164  3000               	movlw	0
  7038  1165  00A3               	movwf	(?___fttol+3)^(0+128)
  7039  1166  3000               	movlw	0
  7040  1167  00A2               	movwf	(?___fttol+2)^(0+128)
  7041  1168  3000               	movlw	0
  7042  1169  00A1               	movwf	(?___fttol+1)^(0+128)
  7043  116A  3000               	movlw	0
  7044  116B  00A0               	movwf	?___fttol^(0+128)
  7045  116C  0008               	return
  7046  116D                     l3666:	
  7047  116D  3001               	movlw	1
  7048  116E                     u4495:	
  7049  116E  1003               	clrc
  7050  116F  0CAC               	rrf	(___fttol@lval+3)^(0+128),f
  7051  1170  0CAB               	rrf	(___fttol@lval+2)^(0+128),f
  7052  1171  0CAA               	rrf	(___fttol@lval+1)^(0+128),f
  7053  1172  0CA9               	rrf	___fttol@lval^(0+128),f
  7054  1173  3EFF               	addlw	-1
  7055  1174  1D03               	skipz
  7056  1175  296E               	goto	u4495
  7057  1176  3001               	movlw	1
  7058  1177  00A4               	movwf	??___fttol^(0+128)
  7059  1178  0824               	movf	??___fttol^(0+128),w
  7060  1179  07AD               	addwf	___fttol@exp1^(0+128),f
  7061  117A  1903               	btfsc	3,2
  7062  117B  2998               	goto	l3676
  7063  117C  296D               	goto	l3666
  7064  117D                     l3668:	
  7065  117D  3018               	movlw	24
  7066  117E  022D               	subwf	___fttol@exp1^(0+128),w
  7067  117F  1C03               	skipc
  7068  1180  2995               	goto	l742
  7069  1181  3000               	movlw	0
  7070  1182  00A3               	movwf	(?___fttol+3)^(0+128)
  7071  1183  3000               	movlw	0
  7072  1184  00A2               	movwf	(?___fttol+2)^(0+128)
  7073  1185  3000               	movlw	0
  7074  1186  00A1               	movwf	(?___fttol+1)^(0+128)
  7075  1187  3000               	movlw	0
  7076  1188  00A0               	movwf	?___fttol^(0+128)
  7077  1189  0008               	return
  7078  118A                     l3674:	
  7079  118A  3001               	movlw	1
  7080  118B  00A4               	movwf	??___fttol^(0+128)
  7081  118C                     u4525:	
  7082  118C  1003               	clrc
  7083  118D  0DA9               	rlf	___fttol@lval^(0+128),f
  7084  118E  0DAA               	rlf	(___fttol@lval+1)^(0+128),f
  7085  118F  0DAB               	rlf	(___fttol@lval+2)^(0+128),f
  7086  1190  0DAC               	rlf	(___fttol@lval+3)^(0+128),f
  7087  1191  0BA4               	decfsz	??___fttol^(0+128),f
  7088  1192  298C               	goto	u4525
  7089  1193  3001               	movlw	1
  7090  1194  02AD               	subwf	___fttol@exp1^(0+128),f
  7091  1195                     l742:	
  7092  1195  082D               	movf	___fttol@exp1^(0+128),w
  7093  1196  1D03               	btfss	3,2
  7094  1197  298A               	goto	l3674
  7095  1198                     l3676:	
  7096  1198  0828               	movf	___fttol@sign1^(0+128),w
  7097  1199  1903               	btfsc	3,2
  7098  119A  29A6               	goto	l3680
  7099  119B  09A9               	comf	___fttol@lval^(0+128),f
  7100  119C  09AA               	comf	(___fttol@lval+1)^(0+128),f
  7101  119D  09AB               	comf	(___fttol@lval+2)^(0+128),f
  7102  119E  09AC               	comf	(___fttol@lval+3)^(0+128),f
  7103  119F  0AA9               	incf	___fttol@lval^(0+128),f
  7104  11A0  1903               	skipnz
  7105  11A1  0AAA               	incf	(___fttol@lval+1)^(0+128),f
  7106  11A2  1903               	skipnz
  7107  11A3  0AAB               	incf	(___fttol@lval+2)^(0+128),f
  7108  11A4  1903               	skipnz
  7109  11A5  0AAC               	incf	(___fttol@lval+3)^(0+128),f
  7110  11A6                     l3680:	
  7111  11A6  082C               	movf	(___fttol@lval+3)^(0+128),w
  7112  11A7  00A3               	movwf	(?___fttol+3)^(0+128)
  7113  11A8  082B               	movf	(___fttol@lval+2)^(0+128),w
  7114  11A9  00A2               	movwf	(?___fttol+2)^(0+128)
  7115  11AA  082A               	movf	(___fttol@lval+1)^(0+128),w
  7116  11AB  00A1               	movwf	(?___fttol+1)^(0+128)
  7117  11AC  0829               	movf	___fttol@lval^(0+128),w
  7118  11AD  00A0               	movwf	?___fttol^(0+128)
  7119  11AE  0008               	return
  7120  11AF                     __end_of___fttol:	
  7121                           
  7122                           	psect	text18
  7123  1E4E                     __ptext18:	
  7124 ;; *************** function ___altoft *****************
  7125 ;; Defined at:
  7126 ;;		line 42 in file "/opt/microchip/xc8/v1.34/sources/common/altoft.c"
  7127 ;; Parameters:    Size  Location     Type
  7128 ;;  c               4   14[BANK1 ] long 
  7129 ;; Auto vars:     Size  Location     Type
  7130 ;;  sign            1   19[BANK1 ] unsigned char 
  7131 ;;  exp             1   18[BANK1 ] unsigned char 
  7132 ;; Return value:  Size  Location     Type
  7133 ;;                  3   14[BANK1 ] float 
  7134 ;; Registers used:
  7135 ;;		wreg, status,2, status,0, pclath, cstack
  7136 ;; Tracked objects:
  7137 ;;		On entry : 0/0
  7138 ;;		On exit  : 0/0
  7139 ;;		Unchanged: 0/0
  7140 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7141 ;;      Params:         0       0       4       0       0
  7142 ;;      Locals:         0       0       2       0       0
  7143 ;;      Temps:          0       2       0       0       0
  7144 ;;      Totals:         0       2       6       0       0
  7145 ;;Total ram usage:        8 bytes
  7146 ;; Hardware stack levels used:    1
  7147 ;; Hardware stack levels required when called:    2
  7148 ;; This function calls:
  7149 ;;		___ftpack
  7150 ;; This function is called by:
  7151 ;;		_floor
  7152 ;; This function uses a non-reentrant model
  7153 ;;
  7154                           
  7155                           
  7156                           ;psect for function ___altoft
  7157  1E4E                     ___altoft:	
  7158                           
  7159                           ;incstack = 0
  7160                           ; Regs used in ___altoft: [wreg+status,2+status,0+pclath+cstack]
  7161  1E4E  1683               	bsf	3,5	;RP0=1, select bank1
  7162  1E4F  1303               	bcf	3,6	;RP1=0, select bank1
  7163  1E50  01B3               	clrf	___altoft@sign^(0+128)
  7164  1E51  308E               	movlw	142
  7165  1E52  1283               	bcf	3,5	;RP0=0, select bank0
  7166  1E53  1303               	bcf	3,6	;RP1=0, select bank0
  7167  1E54  00EE               	movwf	??___altoft
  7168  1E55  086E               	movf	??___altoft,w
  7169  1E56  1683               	bsf	3,5	;RP0=1, select bank1
  7170  1E57  1303               	bcf	3,6	;RP1=0, select bank1
  7171  1E58  00B2               	movwf	___altoft@exp^(0+128)
  7172  1E59  1FB1               	btfss	(___altoft@c+3)^(0+128),7
  7173  1E5A  2E68               	goto	l3468
  7174  1E5B  09AE               	comf	___altoft@c^(0+128),f
  7175  1E5C  09AF               	comf	(___altoft@c+1)^(0+128),f
  7176  1E5D  09B0               	comf	(___altoft@c+2)^(0+128),f
  7177  1E5E  09B1               	comf	(___altoft@c+3)^(0+128),f
  7178  1E5F  0AAE               	incf	___altoft@c^(0+128),f
  7179  1E60  1903               	skipnz
  7180  1E61  0AAF               	incf	(___altoft@c+1)^(0+128),f
  7181  1E62  1903               	skipnz
  7182  1E63  0AB0               	incf	(___altoft@c+2)^(0+128),f
  7183  1E64  1903               	skipnz
  7184  1E65  0AB1               	incf	(___altoft@c+3)^(0+128),f
  7185  1E66  01B3               	clrf	___altoft@sign^(0+128)
  7186  1E67  0AB3               	incf	___altoft@sign^(0+128),f
  7187  1E68                     l3468:	
  7188  1E68  30FF               	movlw	255
  7189  1E69  0531               	andwf	(___altoft@c+3)^(0+128),w
  7190  1E6A  1903               	btfsc	3,2
  7191  1E6B  2E7E               	goto	l3470
  7192  1E6C  3001               	movlw	1
  7193  1E6D                     u3985:	
  7194  1E6D  1003               	clrc
  7195  1E6E  0CB1               	rrf	(___altoft@c+3)^(0+128),f
  7196  1E6F  0CB0               	rrf	(___altoft@c+2)^(0+128),f
  7197  1E70  0CAF               	rrf	(___altoft@c+1)^(0+128),f
  7198  1E71  0CAE               	rrf	___altoft@c^(0+128),f
  7199  1E72  3EFF               	addlw	-1
  7200  1E73  1D03               	skipz
  7201  1E74  2E6D               	goto	u3985
  7202  1E75  3001               	movlw	1
  7203  1E76  1283               	bcf	3,5	;RP0=0, select bank0
  7204  1E77  1303               	bcf	3,6	;RP1=0, select bank0
  7205  1E78  00EE               	movwf	??___altoft
  7206  1E79  086E               	movf	??___altoft,w
  7207  1E7A  1683               	bsf	3,5	;RP0=1, select bank1
  7208  1E7B  1303               	bcf	3,6	;RP1=0, select bank1
  7209  1E7C  07B2               	addwf	___altoft@exp^(0+128),f
  7210  1E7D  2E68               	goto	l3468
  7211  1E7E                     l3470:	
  7212  1E7E  082E               	movf	___altoft@c^(0+128),w
  7213  1E7F  1283               	bcf	3,5	;RP0=0, select bank0
  7214  1E80  1303               	bcf	3,6	;RP1=0, select bank0
  7215  1E81  00A0               	movwf	___ftpack@arg
  7216  1E82  1683               	bsf	3,5	;RP0=1, select bank1
  7217  1E83  1303               	bcf	3,6	;RP1=0, select bank1
  7218  1E84  082F               	movf	(___altoft@c+1)^(0+128),w
  7219  1E85  1283               	bcf	3,5	;RP0=0, select bank0
  7220  1E86  1303               	bcf	3,6	;RP1=0, select bank0
  7221  1E87  00A1               	movwf	___ftpack@arg+1
  7222  1E88  1683               	bsf	3,5	;RP0=1, select bank1
  7223  1E89  1303               	bcf	3,6	;RP1=0, select bank1
  7224  1E8A  0830               	movf	(___altoft@c+2)^(0+128),w
  7225  1E8B  1283               	bcf	3,5	;RP0=0, select bank0
  7226  1E8C  1303               	bcf	3,6	;RP1=0, select bank0
  7227  1E8D  00A2               	movwf	___ftpack@arg+2
  7228  1E8E  1683               	bsf	3,5	;RP0=1, select bank1
  7229  1E8F  1303               	bcf	3,6	;RP1=0, select bank1
  7230  1E90  0832               	movf	___altoft@exp^(0+128),w
  7231  1E91  1283               	bcf	3,5	;RP0=0, select bank0
  7232  1E92  1303               	bcf	3,6	;RP1=0, select bank0
  7233  1E93  00EE               	movwf	??___altoft
  7234  1E94  086E               	movf	??___altoft,w
  7235  1E95  00A3               	movwf	___ftpack@exp
  7236  1E96  1683               	bsf	3,5	;RP0=1, select bank1
  7237  1E97  1303               	bcf	3,6	;RP1=0, select bank1
  7238  1E98  0833               	movf	___altoft@sign^(0+128),w
  7239  1E99  1283               	bcf	3,5	;RP0=0, select bank0
  7240  1E9A  1303               	bcf	3,6	;RP1=0, select bank0
  7241  1E9B  00EF               	movwf	??___altoft+1
  7242  1E9C  086F               	movf	??___altoft+1,w
  7243  1E9D  00A4               	movwf	___ftpack@sign
  7244  1E9E  160A  158A  26B4   	fcall	___ftpack
  7245  1EA1  1283               	bcf	3,5	;RP0=0, select bank0
  7246  1EA2  1303               	bcf	3,6	;RP1=0, select bank0
  7247  1EA3  0820               	movf	?___ftpack,w
  7248  1EA4  1683               	bsf	3,5	;RP0=1, select bank1
  7249  1EA5  1303               	bcf	3,6	;RP1=0, select bank1
  7250  1EA6  00AE               	movwf	?___altoft^(0+128)
  7251  1EA7  1283               	bcf	3,5	;RP0=0, select bank0
  7252  1EA8  1303               	bcf	3,6	;RP1=0, select bank0
  7253  1EA9  0821               	movf	?___ftpack+1,w
  7254  1EAA  1683               	bsf	3,5	;RP0=1, select bank1
  7255  1EAB  1303               	bcf	3,6	;RP1=0, select bank1
  7256  1EAC  00AF               	movwf	(?___altoft+1)^(0+128)
  7257  1EAD  1283               	bcf	3,5	;RP0=0, select bank0
  7258  1EAE  1303               	bcf	3,6	;RP1=0, select bank0
  7259  1EAF  0822               	movf	?___ftpack+2,w
  7260  1EB0  1683               	bsf	3,5	;RP0=1, select bank1
  7261  1EB1  1303               	bcf	3,6	;RP1=0, select bank1
  7262  1EB2  00B0               	movwf	(?___altoft+2)^(0+128)
  7263  1EB3  0008               	return
  7264  1EB4                     __end_of___altoft:	
  7265                           
  7266                           	psect	text19
  7267  1BA3                     __ptext19:	
  7268 ;; *************** function ___ftsub *****************
  7269 ;; Defined at:
  7270 ;;		line 18 in file "/opt/microchip/xc8/v1.34/sources/common/ftsub.c"
  7271 ;; Parameters:    Size  Location     Type
  7272 ;;  f2              3   56[BANK0 ] float 
  7273 ;;  f1              3   59[BANK0 ] float 
  7274 ;; Auto vars:     Size  Location     Type
  7275 ;;		None
  7276 ;; Return value:  Size  Location     Type
  7277 ;;                  3   56[BANK0 ] float 
  7278 ;; Registers used:
  7279 ;;		wreg, status,2, status,0, pclath, cstack
  7280 ;; Tracked objects:
  7281 ;;		On entry : 0/0
  7282 ;;		On exit  : 0/0
  7283 ;;		Unchanged: 0/0
  7284 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7285 ;;      Params:         0       6       0       0       0
  7286 ;;      Locals:         0       0       0       0       0
  7287 ;;      Temps:          0       0       0       0       0
  7288 ;;      Totals:         0       6       0       0       0
  7289 ;;Total ram usage:        6 bytes
  7290 ;; Hardware stack levels used:    1
  7291 ;; Hardware stack levels required when called:    3
  7292 ;; This function calls:
  7293 ;;		___ftadd
  7294 ;; This function is called by:
  7295 ;;		_format_double
  7296 ;;		_exp
  7297 ;;		_format_float
  7298 ;; This function uses a non-reentrant model
  7299 ;;
  7300                           
  7301                           
  7302                           ;psect for function ___ftsub
  7303  1BA3                     ___ftsub:	
  7304                           
  7305                           ;incstack = 0
  7306                           ; Regs used in ___ftsub: [wreg+status,2+status,0+pclath+cstack]
  7307  1BA3  1283               	bcf	3,5	;RP0=0, select bank0
  7308  1BA4  1303               	bcf	3,6	;RP1=0, select bank0
  7309  1BA5  085A               	movf	___ftsub@f2+2,w
  7310  1BA6  0459               	iorwf	___ftsub@f2+1,w
  7311  1BA7  0458               	iorwf	___ftsub@f2,w
  7312  1BA8  1903               	skipnz
  7313  1BA9  2BAC               	goto	l3830
  7314  1BAA  3080               	movlw	128
  7315  1BAB  06DA               	xorwf	___ftsub@f2+2,f
  7316  1BAC                     l3830:	
  7317  1BAC  085B               	movf	___ftsub@f1,w
  7318  1BAD  00CB               	movwf	___ftadd@f1
  7319  1BAE  085C               	movf	___ftsub@f1+1,w
  7320  1BAF  00CC               	movwf	___ftadd@f1+1
  7321  1BB0  085D               	movf	___ftsub@f1+2,w
  7322  1BB1  00CD               	movwf	___ftadd@f1+2
  7323  1BB2  0858               	movf	___ftsub@f2,w
  7324  1BB3  00CE               	movwf	___ftadd@f2
  7325  1BB4  0859               	movf	___ftsub@f2+1,w
  7326  1BB5  00CF               	movwf	___ftadd@f2+1
  7327  1BB6  085A               	movf	___ftsub@f2+2,w
  7328  1BB7  00D0               	movwf	___ftadd@f2+2
  7329  1BB8  120A  158A  20A0   	fcall	___ftadd
  7330  1BBB  1283               	bcf	3,5	;RP0=0, select bank0
  7331  1BBC  1303               	bcf	3,6	;RP1=0, select bank0
  7332  1BBD  084B               	movf	?___ftadd,w
  7333  1BBE  00D8               	movwf	?___ftsub
  7334  1BBF  084C               	movf	?___ftadd+1,w
  7335  1BC0  00D9               	movwf	?___ftsub+1
  7336  1BC1  084D               	movf	?___ftadd+2,w
  7337  1BC2  00DA               	movwf	?___ftsub+2
  7338  1BC3  0008               	return
  7339  1BC4                     __end_of___ftsub:	
  7340                           
  7341                           	psect	text20
  7342  130D                     __ptext20:	
  7343 ;; *************** function ___ftdiv *****************
  7344 ;; Defined at:
  7345 ;;		line 56 in file "/opt/microchip/xc8/v1.34/sources/common/ftdiv.c"
  7346 ;; Parameters:    Size  Location     Type
  7347 ;;  f2              3    8[BANK0 ] float 
  7348 ;;  f1              3   11[BANK0 ] float 
  7349 ;; Auto vars:     Size  Location     Type
  7350 ;;  f3              3   19[BANK0 ] float 
  7351 ;;  sign            1   23[BANK0 ] unsigned char 
  7352 ;;  exp             1   22[BANK0 ] unsigned char 
  7353 ;;  cntr            1   18[BANK0 ] unsigned char 
  7354 ;; Return value:  Size  Location     Type
  7355 ;;                  3    8[BANK0 ] float 
  7356 ;; Registers used:
  7357 ;;		wreg, status,2, status,0, pclath, cstack
  7358 ;; Tracked objects:
  7359 ;;		On entry : 0/0
  7360 ;;		On exit  : 0/0
  7361 ;;		Unchanged: 0/0
  7362 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7363 ;;      Params:         0       6       0       0       0
  7364 ;;      Locals:         0       6       0       0       0
  7365 ;;      Temps:          0       4       0       0       0
  7366 ;;      Totals:         0      16       0       0       0
  7367 ;;Total ram usage:       16 bytes
  7368 ;; Hardware stack levels used:    1
  7369 ;; Hardware stack levels required when called:    2
  7370 ;; This function calls:
  7371 ;;		___ftpack
  7372 ;; This function is called by:
  7373 ;;		_measure_capacitance
  7374 ;;		_measure_inductance
  7375 ;;		_format_double
  7376 ;;		_exp
  7377 ;;		_format_float
  7378 ;; This function uses a non-reentrant model
  7379 ;;
  7380                           
  7381                           
  7382                           ;psect for function ___ftdiv
  7383  130D                     ___ftdiv:	
  7384                           
  7385                           ;incstack = 0
  7386                           ; Regs used in ___ftdiv: [wreg+status,2+status,0+pclath+cstack]
  7387  130D  1283               	bcf	3,5	;RP0=0, select bank0
  7388  130E  1303               	bcf	3,6	;RP1=0, select bank0
  7389  130F  082B               	movf	___ftdiv@f1,w
  7390  1310  00AE               	movwf	??___ftdiv
  7391  1311  082C               	movf	___ftdiv@f1+1,w
  7392  1312  00AF               	movwf	??___ftdiv+1
  7393  1313  082D               	movf	___ftdiv@f1+2,w
  7394  1314  00B0               	movwf	??___ftdiv+2
  7395  1315  1003               	clrc
  7396  1316  0D2F               	rlf	??___ftdiv+1,w
  7397  1317  0D30               	rlf	??___ftdiv+2,w
  7398  1318  00B1               	movwf	??___ftdiv+3
  7399  1319  0831               	movf	??___ftdiv+3,w
  7400  131A  00B6               	movwf	___ftdiv@exp
  7401  131B  0836               	movf	___ftdiv@exp,w
  7402  131C  1D03               	btfss	3,2
  7403  131D  2B25               	goto	l3790
  7404  131E  3000               	movlw	0
  7405  131F  00A8               	movwf	?___ftdiv
  7406  1320  3000               	movlw	0
  7407  1321  00A9               	movwf	?___ftdiv+1
  7408  1322  3000               	movlw	0
  7409  1323  00AA               	movwf	?___ftdiv+2
  7410  1324  0008               	return
  7411  1325                     l3790:	
  7412  1325  0828               	movf	___ftdiv@f2,w
  7413  1326  00AE               	movwf	??___ftdiv
  7414  1327  0829               	movf	___ftdiv@f2+1,w
  7415  1328  00AF               	movwf	??___ftdiv+1
  7416  1329  082A               	movf	___ftdiv@f2+2,w
  7417  132A  00B0               	movwf	??___ftdiv+2
  7418  132B  1003               	clrc
  7419  132C  0D2F               	rlf	??___ftdiv+1,w
  7420  132D  0D30               	rlf	??___ftdiv+2,w
  7421  132E  00B1               	movwf	??___ftdiv+3
  7422  132F  0831               	movf	??___ftdiv+3,w
  7423  1330  00B7               	movwf	___ftdiv@sign
  7424  1331  0837               	movf	___ftdiv@sign,w
  7425  1332  1D03               	btfss	3,2
  7426  1333  2B3B               	goto	l3796
  7427  1334  3000               	movlw	0
  7428  1335  00A8               	movwf	?___ftdiv
  7429  1336  3000               	movlw	0
  7430  1337  00A9               	movwf	?___ftdiv+1
  7431  1338  3000               	movlw	0
  7432  1339  00AA               	movwf	?___ftdiv+2
  7433  133A  0008               	return
  7434  133B                     l3796:	
  7435  133B  3000               	movlw	0
  7436  133C  00B3               	movwf	___ftdiv@f3
  7437  133D  3000               	movlw	0
  7438  133E  00B4               	movwf	___ftdiv@f3+1
  7439  133F  3000               	movlw	0
  7440  1340  00B5               	movwf	___ftdiv@f3+2
  7441  1341  3089               	movlw	137
  7442  1342  0737               	addwf	___ftdiv@sign,w
  7443  1343  00AE               	movwf	??___ftdiv
  7444  1344  082E               	movf	??___ftdiv,w
  7445  1345  02B6               	subwf	___ftdiv@exp,f
  7446  1346  082B               	movf	___ftdiv@f1,w
  7447  1347  00AE               	movwf	??___ftdiv
  7448  1348  082C               	movf	___ftdiv@f1+1,w
  7449  1349  00AF               	movwf	??___ftdiv+1
  7450  134A  082D               	movf	___ftdiv@f1+2,w
  7451  134B  00B0               	movwf	??___ftdiv+2
  7452  134C  3010               	movlw	16
  7453  134D                     u4675:	
  7454  134D  1003               	clrc
  7455  134E  0CB0               	rrf	??___ftdiv+2,f
  7456  134F  0CAF               	rrf	??___ftdiv+1,f
  7457  1350  0CAE               	rrf	??___ftdiv,f
  7458  1351  3EFF               	addlw	-1
  7459  1352  1D03               	skipz
  7460  1353  2B4D               	goto	u4675
  7461  1354  082E               	movf	??___ftdiv,w
  7462  1355  00B1               	movwf	??___ftdiv+3
  7463  1356  0831               	movf	??___ftdiv+3,w
  7464  1357  00B7               	movwf	___ftdiv@sign
  7465  1358  0828               	movf	___ftdiv@f2,w
  7466  1359  00AE               	movwf	??___ftdiv
  7467  135A  0829               	movf	___ftdiv@f2+1,w
  7468  135B  00AF               	movwf	??___ftdiv+1
  7469  135C  082A               	movf	___ftdiv@f2+2,w
  7470  135D  00B0               	movwf	??___ftdiv+2
  7471  135E  3010               	movlw	16
  7472  135F                     u4685:	
  7473  135F  1003               	clrc
  7474  1360  0CB0               	rrf	??___ftdiv+2,f
  7475  1361  0CAF               	rrf	??___ftdiv+1,f
  7476  1362  0CAE               	rrf	??___ftdiv,f
  7477  1363  3EFF               	addlw	-1
  7478  1364  1D03               	skipz
  7479  1365  2B5F               	goto	u4685
  7480  1366  082E               	movf	??___ftdiv,w
  7481  1367  00B1               	movwf	??___ftdiv+3
  7482  1368  0831               	movf	??___ftdiv+3,w
  7483  1369  06B7               	xorwf	___ftdiv@sign,f
  7484  136A  3080               	movlw	128
  7485  136B  00AE               	movwf	??___ftdiv
  7486  136C  082E               	movf	??___ftdiv,w
  7487  136D  05B7               	andwf	___ftdiv@sign,f
  7488  136E  17AC               	bsf	___ftdiv@f1+1,7
  7489  136F  30FF               	movlw	255
  7490  1370  05AB               	andwf	___ftdiv@f1,f
  7491  1371  30FF               	movlw	255
  7492  1372  05AC               	andwf	___ftdiv@f1+1,f
  7493  1373  3000               	movlw	0
  7494  1374  05AD               	andwf	___ftdiv@f1+2,f
  7495  1375  17A9               	bsf	___ftdiv@f2+1,7
  7496  1376  30FF               	movlw	255
  7497  1377  05A8               	andwf	___ftdiv@f2,f
  7498  1378  30FF               	movlw	255
  7499  1379  05A9               	andwf	___ftdiv@f2+1,f
  7500  137A  3000               	movlw	0
  7501  137B  05AA               	andwf	___ftdiv@f2+2,f
  7502  137C  3018               	movlw	24
  7503  137D  00AE               	movwf	??___ftdiv
  7504  137E  082E               	movf	??___ftdiv,w
  7505  137F  00B2               	movwf	___ftdiv@cntr
  7506  1380                     l3810:	
  7507  1380  3001               	movlw	1
  7508  1381                     u4695:	
  7509  1381  1003               	clrc
  7510  1382  0DB3               	rlf	___ftdiv@f3,f
  7511  1383  0DB4               	rlf	___ftdiv@f3+1,f
  7512  1384  0DB5               	rlf	___ftdiv@f3+2,f
  7513  1385  3EFF               	addlw	-1
  7514  1386  1D03               	skipz
  7515  1387  2B81               	goto	u4695
  7516  1388  082A               	movf	___ftdiv@f2+2,w
  7517  1389  022D               	subwf	___ftdiv@f1+2,w
  7518  138A  1D03               	skipz
  7519  138B  2B92               	goto	u4705
  7520  138C  0829               	movf	___ftdiv@f2+1,w
  7521  138D  022C               	subwf	___ftdiv@f1+1,w
  7522  138E  1D03               	skipz
  7523  138F  2B92               	goto	u4705
  7524  1390  0828               	movf	___ftdiv@f2,w
  7525  1391  022B               	subwf	___ftdiv@f1,w
  7526  1392                     u4705:	
  7527  1392  1C03               	skipc
  7528  1393  2B9F               	goto	l3818
  7529  1394  0828               	movf	___ftdiv@f2,w
  7530  1395  02AB               	subwf	___ftdiv@f1,f
  7531  1396  0829               	movf	___ftdiv@f2+1,w
  7532  1397  1C03               	skipc
  7533  1398  0F29               	incfsz	___ftdiv@f2+1,w
  7534  1399  02AC               	subwf	___ftdiv@f1+1,f
  7535  139A  082A               	movf	___ftdiv@f2+2,w
  7536  139B  1C03               	skipc
  7537  139C  0A2A               	incf	___ftdiv@f2+2,w
  7538  139D  02AD               	subwf	___ftdiv@f1+2,f
  7539  139E  1433               	bsf	___ftdiv@f3,0
  7540  139F                     l3818:	
  7541  139F  3001               	movlw	1
  7542  13A0                     u4715:	
  7543  13A0  1003               	clrc
  7544  13A1  0DAB               	rlf	___ftdiv@f1,f
  7545  13A2  0DAC               	rlf	___ftdiv@f1+1,f
  7546  13A3  0DAD               	rlf	___ftdiv@f1+2,f
  7547  13A4  3EFF               	addlw	-1
  7548  13A5  1D03               	skipz
  7549  13A6  2BA0               	goto	u4715
  7550  13A7  3001               	movlw	1
  7551  13A8  02B2               	subwf	___ftdiv@cntr,f
  7552  13A9  1D03               	btfss	3,2
  7553  13AA  2B80               	goto	l3810
  7554  13AB  0833               	movf	___ftdiv@f3,w
  7555  13AC  00A0               	movwf	___ftpack@arg
  7556  13AD  0834               	movf	___ftdiv@f3+1,w
  7557  13AE  00A1               	movwf	___ftpack@arg+1
  7558  13AF  0835               	movf	___ftdiv@f3+2,w
  7559  13B0  00A2               	movwf	___ftpack@arg+2
  7560  13B1  0836               	movf	___ftdiv@exp,w
  7561  13B2  00AE               	movwf	??___ftdiv
  7562  13B3  082E               	movf	??___ftdiv,w
  7563  13B4  00A3               	movwf	___ftpack@exp
  7564  13B5  0837               	movf	___ftdiv@sign,w
  7565  13B6  00AF               	movwf	??___ftdiv+1
  7566  13B7  082F               	movf	??___ftdiv+1,w
  7567  13B8  00A4               	movwf	___ftpack@sign
  7568  13B9  160A  158A  26B4   	fcall	___ftpack
  7569  13BC  1283               	bcf	3,5	;RP0=0, select bank0
  7570  13BD  1303               	bcf	3,6	;RP1=0, select bank0
  7571  13BE  0820               	movf	?___ftpack,w
  7572  13BF  00A8               	movwf	?___ftdiv
  7573  13C0  0821               	movf	?___ftpack+1,w
  7574  13C1  00A9               	movwf	?___ftdiv+1
  7575  13C2  0822               	movf	?___ftpack+2,w
  7576  13C3  00AA               	movwf	?___ftdiv+2
  7577  13C4  0008               	return
  7578  13C5                     __end_of___ftdiv:	
  7579                           
  7580                           	psect	text21
  7581  1C5B                     __ptext21:	
  7582 ;; *************** function ___lltoft *****************
  7583 ;; Defined at:
  7584 ;;		line 35 in file "/opt/microchip/xc8/v1.34/sources/common/lltoft.c"
  7585 ;; Parameters:    Size  Location     Type
  7586 ;;  c               4    8[BANK0 ] unsigned long 
  7587 ;; Auto vars:     Size  Location     Type
  7588 ;;  exp             1   13[BANK0 ] unsigned char 
  7589 ;; Return value:  Size  Location     Type
  7590 ;;                  3    8[BANK0 ] float 
  7591 ;; Registers used:
  7592 ;;		wreg, status,2, status,0, pclath, cstack
  7593 ;; Tracked objects:
  7594 ;;		On entry : 0/0
  7595 ;;		On exit  : 0/0
  7596 ;;		Unchanged: 0/0
  7597 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7598 ;;      Params:         0       4       0       0       0
  7599 ;;      Locals:         0       1       0       0       0
  7600 ;;      Temps:          0       1       0       0       0
  7601 ;;      Totals:         0       6       0       0       0
  7602 ;;Total ram usage:        6 bytes
  7603 ;; Hardware stack levels used:    1
  7604 ;; Hardware stack levels required when called:    2
  7605 ;; This function calls:
  7606 ;;		___ftpack
  7607 ;; This function is called by:
  7608 ;;		_pow
  7609 ;; This function uses a non-reentrant model
  7610 ;;
  7611                           
  7612                           
  7613                           ;psect for function ___lltoft
  7614  1C5B                     ___lltoft:	
  7615                           
  7616                           ;incstack = 0
  7617                           ; Regs used in ___lltoft: [wreg+status,2+status,0+pclath+cstack]
  7618  1C5B  308E               	movlw	142
  7619  1C5C  1283               	bcf	3,5	;RP0=0, select bank0
  7620  1C5D  1303               	bcf	3,6	;RP1=0, select bank0
  7621  1C5E  00AC               	movwf	??___lltoft
  7622  1C5F  082C               	movf	??___lltoft,w
  7623  1C60  00AD               	movwf	___lltoft@exp
  7624  1C61                     l3854:	
  7625  1C61  30FF               	movlw	255
  7626  1C62  052B               	andwf	___lltoft@c+3,w
  7627  1C63  1903               	btfsc	3,2
  7628  1C64  2C73               	goto	l3856
  7629  1C65  3001               	movlw	1
  7630  1C66                     u4755:	
  7631  1C66  1003               	clrc
  7632  1C67  0CAB               	rrf	___lltoft@c+3,f
  7633  1C68  0CAA               	rrf	___lltoft@c+2,f
  7634  1C69  0CA9               	rrf	___lltoft@c+1,f
  7635  1C6A  0CA8               	rrf	___lltoft@c,f
  7636  1C6B  3EFF               	addlw	-1
  7637  1C6C  1D03               	skipz
  7638  1C6D  2C66               	goto	u4755
  7639  1C6E  3001               	movlw	1
  7640  1C6F  00AC               	movwf	??___lltoft
  7641  1C70  082C               	movf	??___lltoft,w
  7642  1C71  07AD               	addwf	___lltoft@exp,f
  7643  1C72  2C61               	goto	l3854
  7644  1C73                     l3856:	
  7645  1C73  0828               	movf	___lltoft@c,w
  7646  1C74  00A0               	movwf	___ftpack@arg
  7647  1C75  0829               	movf	___lltoft@c+1,w
  7648  1C76  00A1               	movwf	___ftpack@arg+1
  7649  1C77  082A               	movf	___lltoft@c+2,w
  7650  1C78  00A2               	movwf	___ftpack@arg+2
  7651  1C79  082D               	movf	___lltoft@exp,w
  7652  1C7A  00AC               	movwf	??___lltoft
  7653  1C7B  082C               	movf	??___lltoft,w
  7654  1C7C  00A3               	movwf	___ftpack@exp
  7655  1C7D  01A4               	clrf	___ftpack@sign
  7656  1C7E  160A  158A  26B4   	fcall	___ftpack
  7657  1C81  1283               	bcf	3,5	;RP0=0, select bank0
  7658  1C82  1303               	bcf	3,6	;RP1=0, select bank0
  7659  1C83  0820               	movf	?___ftpack,w
  7660  1C84  00A8               	movwf	?___lltoft
  7661  1C85  0821               	movf	?___ftpack+1,w
  7662  1C86  00A9               	movwf	?___lltoft+1
  7663  1C87  0822               	movf	?___ftpack+2,w
  7664  1C88  00AA               	movwf	?___lltoft+2
  7665  1C89  0008               	return
  7666  1C8A                     __end_of___lltoft:	
  7667                           
  7668                           	psect	text22
  7669  07FE                     __ptext22:	
  7670 ;; *************** function _format_putchar *****************
  7671 ;; Defined at:
  7672 ;;		line 6 in file "../../../lib/format.c"
  7673 ;; Parameters:    Size  Location     Type
  7674 ;;  c               1    0[BANK0 ] unsigned char 
  7675 ;; Auto vars:     Size  Location     Type
  7676 ;;		None
  7677 ;; Return value:  Size  Location     Type
  7678 ;;		None               void
  7679 ;; Registers used:
  7680 ;;		None
  7681 ;; Tracked objects:
  7682 ;;		On entry : 0/0
  7683 ;;		On exit  : 0/0
  7684 ;;		Unchanged: 0/0
  7685 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7686 ;;      Params:         0       1       0       0       0
  7687 ;;      Locals:         0       0       0       0       0
  7688 ;;      Temps:          0       0       0       0       0
  7689 ;;      Totals:         0       1       0       0       0
  7690 ;;Total ram usage:        1 bytes
  7691 ;; Hardware stack levels used:    1
  7692 ;; Hardware stack levels required when called:    1
  7693 ;; This function calls:
  7694 ;;		Nothing
  7695 ;; This function is called by:
  7696 ;;		_format_number
  7697 ;;		_format_xint32
  7698 ;;		_format_double
  7699 ;;		_format_float
  7700 ;; This function uses a non-reentrant model
  7701 ;;
  7702                           
  7703                           
  7704                           ;psect for function _format_putchar
  7705  07FE                     _format_putchar:	
  7706                           
  7707                           ;format.c: 7: return;
  7708                           
  7709                           ;incstack = 0
  7710                           ; Regs used in _format_putchar: []
  7711  07FE  0008               	return
  7712  07FF                     __end_of_format_putchar:	
  7713                           
  7714                           	psect	text23
  7715  1000                     __ptext23:	
  7716 ;; *************** function _ser_putch *****************
  7717 ;; Defined at:
  7718 ;;		line 82 in file "../../../lib/ser.c"
  7719 ;; Parameters:    Size  Location     Type
  7720 ;;  c               1    0[BANK0 ] unsigned char 
  7721 ;; Auto vars:     Size  Location     Type
  7722 ;;		None
  7723 ;; Return value:  Size  Location     Type
  7724 ;;                  1    wreg      unsigned char 
  7725 ;; Registers used:
  7726 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  7727 ;; Tracked objects:
  7728 ;;		On entry : 0/0
  7729 ;;		On exit  : 0/0
  7730 ;;		Unchanged: 0/0
  7731 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7732 ;;      Params:         0       1       0       0       0
  7733 ;;      Locals:         0       0       0       0       0
  7734 ;;      Temps:          0       1       0       0       0
  7735 ;;      Totals:         0       2       0       0       0
  7736 ;;Total ram usage:        2 bytes
  7737 ;; Hardware stack levels used:    1
  7738 ;; Hardware stack levels required when called:    1
  7739 ;; This function calls:
  7740 ;;		Nothing
  7741 ;; This function is called by:
  7742 ;;		_output_putch
  7743 ;;		_measure_capacitance
  7744 ;;		_ser_puts
  7745 ;;		_ser_put
  7746 ;;		_ser_puts2
  7747 ;;		_ser_puthex
  7748 ;;		_format_number
  7749 ;;		_format_xint32
  7750 ;;		_format_double
  7751 ;;		_format_float
  7752 ;; This function uses a non-reentrant model
  7753 ;;
  7754                           
  7755                           
  7756                           ;psect for function _ser_putch
  7757  1000                     _ser_putch:	
  7758  1000                     l3686:	
  7759                           ;ser.c: 83: while(((txiptr + 1) & (16 - 1)) == txoptr) continue;
  7760                           
  7761                           ;incstack = 0
  7762                           ; Regs used in _ser_putch: [wreg-fsr0h+status,2+status,0]
  7763                           
  7764  1000  0877               	movf	_txiptr,w	;volatile
  7765  1001  3E01               	addlw	1
  7766  1002  390F               	andlw	15
  7767  1003  0678               	xorwf	_txoptr,w	;volatile
  7768  1004  1903               	skipnz
  7769  1005  2800               	goto	l3686
  7770                           
  7771                           ;ser.c: 84: GIE = 0;
  7772  1006  138B               	bcf	11,7	;volatile
  7773                           
  7774                           ;ser.c: 85: txfifo[txiptr] = c;
  7775  1007  1283               	bcf	3,5	;RP0=0, select bank0
  7776  1008  1303               	bcf	3,6	;RP1=0, select bank0
  7777  1009  0820               	movf	ser_putch@c,w
  7778  100A  00A1               	movwf	??_ser_putch
  7779  100B  0877               	movf	_txiptr,w
  7780  100C  3EA0               	addlw	(low (_txfifo| (0+256)))& (0+255)
  7781  100D  0084               	movwf	4
  7782  100E  0821               	movf	??_ser_putch,w
  7783  100F  1783               	bsf	3,7	;select IRP bank3
  7784  1010  0080               	movwf	0
  7785                           
  7786                           ;ser.c: 86: txiptr = (txiptr + 1) & (16 - 1);
  7787  1011  0877               	movf	_txiptr,w	;volatile
  7788  1012  3E01               	addlw	1
  7789  1013  390F               	andlw	15
  7790  1014  00A1               	movwf	??_ser_putch
  7791  1015  0821               	movf	??_ser_putch,w
  7792  1016  00F7               	movwf	_txiptr	;volatile
  7793                           
  7794                           ;ser.c: 87: TXIE = 1;
  7795  1017  1683               	bsf	3,5	;RP0=1, select bank1
  7796  1018  1303               	bcf	3,6	;RP1=0, select bank1
  7797  1019  160C               	bsf	12,4	;volatile
  7798                           
  7799                           ;ser.c: 88: GIE = 1;
  7800  101A  178B               	bsf	11,7	;volatile
  7801  101B  0008               	return
  7802  101C                     __end_of_ser_putch:	
  7803                           ;ser.c: 89: return 1;
  7804                           ;	Return value of _ser_putch is never used
  7805                           
  7806                           
  7807                           	psect	text24
  7808  1B64                     __ptext24:	
  7809 ;; *************** function _output_putch *****************
  7810 ;; Defined at:
  7811 ;;		line 48 in file "../../../src/LC-meter.c"
  7812 ;; Parameters:    Size  Location     Type
  7813 ;;  c               1    0[BANK0 ] unsigned char 
  7814 ;; Auto vars:     Size  Location     Type
  7815 ;;		None
  7816 ;; Return value:  Size  Location     Type
  7817 ;;                  1    wreg      unsigned char 
  7818 ;; Registers used:
  7819 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  7820 ;; Tracked objects:
  7821 ;;		On entry : 0/0
  7822 ;;		On exit  : 0/0
  7823 ;;		Unchanged: 0/0
  7824 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7825 ;;      Params:         0       1       0       0       0
  7826 ;;      Locals:         0       0       0       0       0
  7827 ;;      Temps:          0       1       0       0       0
  7828 ;;      Totals:         0       2       0       0       0
  7829 ;;Total ram usage:        2 bytes
  7830 ;; Hardware stack levels used:    1
  7831 ;; Hardware stack levels required when called:    2
  7832 ;; This function calls:
  7833 ;;		_ser_putch
  7834 ;; This function is called by:
  7835 ;;		_measure_capacitance
  7836 ;;		_put_str
  7837 ;;		_format_number
  7838 ;;		_format_xint32
  7839 ;;		_format_double
  7840 ;;		_format_float
  7841 ;; This function uses a non-reentrant model
  7842 ;;
  7843                           
  7844                           
  7845                           ;psect for function _output_putch
  7846  1B64                     _output_putch:	
  7847                           
  7848                           ;LC-meter.c: 54: ser_putch(c);
  7849                           
  7850                           ;incstack = 0
  7851                           ; Regs used in _output_putch: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  7852  1B64  1283               	bcf	3,5	;RP0=0, select bank0
  7853  1B65  1303               	bcf	3,6	;RP1=0, select bank0
  7854  1B66  0820               	movf	output_putch@c,w
  7855  1B67  00A1               	movwf	??_output_putch
  7856  1B68  0821               	movf	??_output_putch,w
  7857  1B69  00A0               	movwf	ser_putch@c
  7858  1B6A  160A  118A  2000   	fcall	_ser_putch
  7859  1B6D  0008               	return
  7860  1B6E                     __end_of_output_putch:	
  7861                           ;LC-meter.c: 56: return 1;
  7862                           ;	Return value of _output_putch is never used
  7863                           
  7864                           
  7865                           	psect	text25
  7866  1C2E                     __ptext25:	
  7867 ;; *************** function _log10 *****************
  7868 ;; Defined at:
  7869 ;;		line 39 in file "/opt/microchip/xc8/v1.34/sources/common/log.c"
  7870 ;; Parameters:    Size  Location     Type
  7871 ;;  x               3   72[BANK0 ] unsigned char 
  7872 ;; Auto vars:     Size  Location     Type
  7873 ;;		None
  7874 ;; Return value:  Size  Location     Type
  7875 ;;                  3   72[BANK0 ] unsigned char 
  7876 ;; Registers used:
  7877 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  7878 ;; Tracked objects:
  7879 ;;		On entry : 0/0
  7880 ;;		On exit  : 0/0
  7881 ;;		Unchanged: 0/0
  7882 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7883 ;;      Params:         0       3       0       0       0
  7884 ;;      Locals:         0       3       0       0       0
  7885 ;;      Temps:          0       0       0       0       0
  7886 ;;      Totals:         0       6       0       0       0
  7887 ;;Total ram usage:        6 bytes
  7888 ;; Hardware stack levels used:    1
  7889 ;; Hardware stack levels required when called:    5
  7890 ;; This function calls:
  7891 ;;		___ftmul
  7892 ;;		_log
  7893 ;; This function is called by:
  7894 ;;		_format_double
  7895 ;;		_format_float
  7896 ;; This function uses a non-reentrant model
  7897 ;;
  7898                           
  7899                           
  7900                           ;psect for function _log10
  7901  1C2E                     _log10:	
  7902                           
  7903                           ;incstack = 0
  7904                           ; Regs used in _log10: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  7905  1C2E  1283               	bcf	3,5	;RP0=0, select bank0
  7906  1C2F  1303               	bcf	3,6	;RP1=0, select bank0
  7907  1C30  0868               	movf	log10@x,w
  7908  1C31  00E2               	movwf	log@x
  7909  1C32  0869               	movf	log10@x+1,w
  7910  1C33  00E3               	movwf	log@x+1
  7911  1C34  086A               	movf	log10@x+2,w
  7912  1C35  00E4               	movwf	log@x+2
  7913  1C36  160A  118A  23C5  160A  158A  	fcall	_log
  7914  1C3B  1283               	bcf	3,5	;RP0=0, select bank0
  7915  1C3C  1303               	bcf	3,6	;RP1=0, select bank0
  7916  1C3D  0862               	movf	?_log,w
  7917  1C3E  00EB               	movwf	_log10$833
  7918  1C3F  0863               	movf	?_log+1,w
  7919  1C40  00EC               	movwf	_log10$833+1
  7920  1C41  0864               	movf	?_log+2,w
  7921  1C42  00ED               	movwf	_log10$833+2
  7922  1C43  305C               	movlw	92
  7923  1C44  00B8               	movwf	___ftmul@f1
  7924  1C45  30DE               	movlw	222
  7925  1C46  00B9               	movwf	___ftmul@f1+1
  7926  1C47  303E               	movlw	62
  7927  1C48  00BA               	movwf	___ftmul@f1+2
  7928  1C49  086B               	movf	_log10$833,w
  7929  1C4A  00BB               	movwf	___ftmul@f2
  7930  1C4B  086C               	movf	_log10$833+1,w
  7931  1C4C  00BC               	movwf	___ftmul@f2+1
  7932  1C4D  086D               	movf	_log10$833+2,w
  7933  1C4E  00BD               	movwf	___ftmul@f2+2
  7934  1C4F  160A  118A  2493   	fcall	___ftmul
  7935  1C52  1283               	bcf	3,5	;RP0=0, select bank0
  7936  1C53  1303               	bcf	3,6	;RP1=0, select bank0
  7937  1C54  0838               	movf	?___ftmul,w
  7938  1C55  00E8               	movwf	?_log10
  7939  1C56  0839               	movf	?___ftmul+1,w
  7940  1C57  00E9               	movwf	?_log10+1
  7941  1C58  083A               	movf	?___ftmul+2,w
  7942  1C59  00EA               	movwf	?_log10+2
  7943  1C5A  0008               	return
  7944  1C5B                     __end_of_log10:	
  7945                           
  7946                           	psect	text26
  7947  13C5                     __ptext26:	
  7948 ;; *************** function _log *****************
  7949 ;; Defined at:
  7950 ;;		line 5 in file "/opt/microchip/xc8/v1.34/sources/common/log.c"
  7951 ;; Parameters:    Size  Location     Type
  7952 ;;  x               3   66[BANK0 ] unsigned char 
  7953 ;; Auto vars:     Size  Location     Type
  7954 ;;  exponent        2   70[BANK0 ] int 
  7955 ;; Return value:  Size  Location     Type
  7956 ;;                  3   66[BANK0 ] int 
  7957 ;; Registers used:
  7958 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  7959 ;; Tracked objects:
  7960 ;;		On entry : 0/0
  7961 ;;		On exit  : 0/0
  7962 ;;		Unchanged: 0/0
  7963 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7964 ;;      Params:         0       3       0       0       0
  7965 ;;      Locals:         0       2       0       0       0
  7966 ;;      Temps:          0       1       0       0       0
  7967 ;;      Totals:         0       6       0       0       0
  7968 ;;Total ram usage:        6 bytes
  7969 ;; Hardware stack levels used:    1
  7970 ;; Hardware stack levels required when called:    4
  7971 ;; This function calls:
  7972 ;;		___awtoft
  7973 ;;		___ftadd
  7974 ;;		___ftge
  7975 ;;		___ftmul
  7976 ;;		_eval_poly
  7977 ;;		_frexp
  7978 ;; This function is called by:
  7979 ;;		_log10
  7980 ;;		_pow
  7981 ;; This function uses a non-reentrant model
  7982 ;;
  7983                           
  7984                           
  7985                           ;psect for function _log
  7986  13C5                     _log:	
  7987                           
  7988                           ;incstack = 0
  7989                           ; Regs used in _log: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  7990  13C5  1283               	bcf	3,5	;RP0=0, select bank0
  7991  13C6  1303               	bcf	3,6	;RP1=0, select bank0
  7992  13C7  0862               	movf	log@x,w
  7993  13C8  00A0               	movwf	___ftge@ff1
  7994  13C9  0863               	movf	log@x+1,w
  7995  13CA  00A1               	movwf	___ftge@ff1+1
  7996  13CB  0864               	movf	log@x+2,w
  7997  13CC  00A2               	movwf	___ftge@ff1+2
  7998  13CD  3000               	movlw	0
  7999  13CE  00A3               	movwf	___ftge@ff2
  8000  13CF  3000               	movlw	0
  8001  13D0  00A4               	movwf	___ftge@ff2+1
  8002  13D1  3000               	movlw	0
  8003  13D2  00A5               	movwf	___ftge@ff2+2
  8004  13D3  160A  158A  258C  160A  118A  	fcall	___ftge
  8005  13D8  1803               	btfsc	3,0
  8006  13D9  2BE9               	goto	l3866
  8007  13DA  3021               	movlw	33
  8008  13DB  1683               	bsf	3,5	;RP0=1, select bank3
  8009  13DC  1703               	bsf	3,6	;RP1=1, select bank3
  8010  13DD  00C8               	movwf	_errno^(0+384)
  8011  13DE  3000               	movlw	0
  8012  13DF  00C9               	movwf	(_errno^(0+384)+1)
  8013  13E0  3000               	movlw	0
  8014  13E1  1283               	bcf	3,5	;RP0=0, select bank0
  8015  13E2  1303               	bcf	3,6	;RP1=0, select bank0
  8016  13E3  00E2               	movwf	?_log
  8017  13E4  3000               	movlw	0
  8018  13E5  00E3               	movwf	?_log+1
  8019  13E6  3000               	movlw	0
  8020  13E7  00E4               	movwf	?_log+2
  8021  13E8  0008               	return
  8022  13E9                     l3866:	
  8023  13E9  1283               	bcf	3,5	;RP0=0, select bank0
  8024  13EA  1303               	bcf	3,6	;RP1=0, select bank0
  8025  13EB  0864               	movf	log@x+2,w
  8026  13EC  0463               	iorwf	log@x+1,w
  8027  13ED  0462               	iorwf	log@x,w
  8028  13EE  1D03               	skipz
  8029  13EF  2BFF               	goto	l3872
  8030  13F0  3022               	movlw	34
  8031  13F1  1683               	bsf	3,5	;RP0=1, select bank3
  8032  13F2  1703               	bsf	3,6	;RP1=1, select bank3
  8033  13F3  00C8               	movwf	_errno^(0+384)
  8034  13F4  3000               	movlw	0
  8035  13F5  00C9               	movwf	(_errno^(0+384)+1)
  8036  13F6  3000               	movlw	0
  8037  13F7  1283               	bcf	3,5	;RP0=0, select bank0
  8038  13F8  1303               	bcf	3,6	;RP1=0, select bank0
  8039  13F9  00E2               	movwf	?_log
  8040  13FA  3000               	movlw	0
  8041  13FB  00E3               	movwf	?_log+1
  8042  13FC  3000               	movlw	0
  8043  13FD  00E4               	movwf	?_log+2
  8044  13FE  0008               	return
  8045  13FF                     l3872:	
  8046  13FF  3000               	movlw	0
  8047  1400  00CB               	movwf	___ftadd@f1
  8048  1401  3080               	movlw	128
  8049  1402  00CC               	movwf	___ftadd@f1+1
  8050  1403  30BF               	movlw	191
  8051  1404  00CD               	movwf	___ftadd@f1+2
  8052  1405  3000               	movlw	0
  8053  1406  00B8               	movwf	___ftmul@f1
  8054  1407  3000               	movlw	0
  8055  1408  00B9               	movwf	___ftmul@f1+1
  8056  1409  3040               	movlw	64
  8057  140A  00BA               	movwf	___ftmul@f1+2
  8058  140B  3066               	movlw	(low (log@exponent| 0))& (0+255)
  8059  140C  00E5               	movwf	??_log
  8060  140D  0865               	movf	??_log,w
  8061  140E  00A3               	movwf	frexp@eptr
  8062  140F  0862               	movf	log@x,w
  8063  1410  00A0               	movwf	frexp@value
  8064  1411  0863               	movf	log@x+1,w
  8065  1412  00A1               	movwf	frexp@value+1
  8066  1413  0864               	movf	log@x+2,w
  8067  1414  00A2               	movwf	frexp@value+2
  8068  1415  160A  158A  24FC  160A  118A  	fcall	_frexp
  8069  141A  1283               	bcf	3,5	;RP0=0, select bank0
  8070  141B  1303               	bcf	3,6	;RP1=0, select bank0
  8071  141C  0820               	movf	?_frexp,w
  8072  141D  00BB               	movwf	___ftmul@f2
  8073  141E  0821               	movf	?_frexp+1,w
  8074  141F  00BC               	movwf	___ftmul@f2+1
  8075  1420  0822               	movf	?_frexp+2,w
  8076  1421  00BD               	movwf	___ftmul@f2+2
  8077  1422  160A  118A  2493  160A  118A  	fcall	___ftmul
  8078  1427  1283               	bcf	3,5	;RP0=0, select bank0
  8079  1428  1303               	bcf	3,6	;RP1=0, select bank0
  8080  1429  0838               	movf	?___ftmul,w
  8081  142A  00CE               	movwf	___ftadd@f2
  8082  142B  0839               	movf	?___ftmul+1,w
  8083  142C  00CF               	movwf	___ftadd@f2+1
  8084  142D  083A               	movf	?___ftmul+2,w
  8085  142E  00D0               	movwf	___ftadd@f2+2
  8086  142F  120A  158A  20A0  160A  118A  	fcall	___ftadd
  8087  1434  1283               	bcf	3,5	;RP0=0, select bank0
  8088  1435  1303               	bcf	3,6	;RP1=0, select bank0
  8089  1436  084B               	movf	?___ftadd,w
  8090  1437  00E2               	movwf	log@x
  8091  1438  084C               	movf	?___ftadd+1,w
  8092  1439  00E3               	movwf	log@x+1
  8093  143A  084D               	movf	?___ftadd+2,w
  8094  143B  00E4               	movwf	log@x+2
  8095  143C  30FF               	movlw	255
  8096  143D  07E6               	addwf	log@exponent,f
  8097  143E  1803               	skipnc
  8098  143F  0AE7               	incf	log@exponent+1,f
  8099  1440  30FF               	movlw	255
  8100  1441  07E7               	addwf	log@exponent+1,f
  8101  1442  0862               	movf	log@x,w
  8102  1443  00D8               	movwf	eval_poly@x
  8103  1444  0863               	movf	log@x+1,w
  8104  1445  00D9               	movwf	eval_poly@x+1
  8105  1446  0864               	movf	log@x+2,w
  8106  1447  00DA               	movwf	eval_poly@x+2
  8107  1448  301F               	movlw	(low ((log@coeff-__stringbase)| (0+32768)))& (0+255)
  8108  1449  00E5               	movwf	??_log
  8109  144A  0865               	movf	??_log,w
  8110  144B  00DB               	movwf	eval_poly@d
  8111  144C  3008               	movlw	8
  8112  144D  00DC               	movwf	eval_poly@n
  8113  144E  3000               	movlw	0
  8114  144F  00DD               	movwf	eval_poly@n+1
  8115  1450  160A  118A  201C  160A  118A  	fcall	_eval_poly
  8116  1455  1283               	bcf	3,5	;RP0=0, select bank0
  8117  1456  1303               	bcf	3,6	;RP1=0, select bank0
  8118  1457  0858               	movf	?_eval_poly,w
  8119  1458  00E2               	movwf	log@x
  8120  1459  0859               	movf	?_eval_poly+1,w
  8121  145A  00E3               	movwf	log@x+1
  8122  145B  085A               	movf	?_eval_poly+2,w
  8123  145C  00E4               	movwf	log@x+2
  8124  145D  0862               	movf	log@x,w
  8125  145E  00CB               	movwf	___ftadd@f1
  8126  145F  0863               	movf	log@x+1,w
  8127  1460  00CC               	movwf	___ftadd@f1+1
  8128  1461  0864               	movf	log@x+2,w
  8129  1462  00CD               	movwf	___ftadd@f1+2
  8130  1463  3072               	movlw	114
  8131  1464  00B8               	movwf	___ftmul@f1
  8132  1465  3031               	movlw	49
  8133  1466  00B9               	movwf	___ftmul@f1+1
  8134  1467  303F               	movlw	63
  8135  1468  00BA               	movwf	___ftmul@f1+2
  8136  1469  0867               	movf	log@exponent+1,w
  8137  146A  00A9               	movwf	___awtoft@c+1
  8138  146B  0866               	movf	log@exponent,w
  8139  146C  00A8               	movwf	___awtoft@c
  8140  146D  120A  118A  27D5  160A  118A  	fcall	___awtoft
  8141  1472  1283               	bcf	3,5	;RP0=0, select bank0
  8142  1473  1303               	bcf	3,6	;RP1=0, select bank0
  8143  1474  0828               	movf	?___awtoft,w
  8144  1475  00BB               	movwf	___ftmul@f2
  8145  1476  0829               	movf	?___awtoft+1,w
  8146  1477  00BC               	movwf	___ftmul@f2+1
  8147  1478  082A               	movf	?___awtoft+2,w
  8148  1479  00BD               	movwf	___ftmul@f2+2
  8149  147A  160A  118A  2493  160A  118A  	fcall	___ftmul
  8150  147F  1283               	bcf	3,5	;RP0=0, select bank0
  8151  1480  1303               	bcf	3,6	;RP1=0, select bank0
  8152  1481  0838               	movf	?___ftmul,w
  8153  1482  00CE               	movwf	___ftadd@f2
  8154  1483  0839               	movf	?___ftmul+1,w
  8155  1484  00CF               	movwf	___ftadd@f2+1
  8156  1485  083A               	movf	?___ftmul+2,w
  8157  1486  00D0               	movwf	___ftadd@f2+2
  8158  1487  120A  158A  20A0   	fcall	___ftadd
  8159  148A  1283               	bcf	3,5	;RP0=0, select bank0
  8160  148B  1303               	bcf	3,6	;RP1=0, select bank0
  8161  148C  084B               	movf	?___ftadd,w
  8162  148D  00E2               	movwf	?_log
  8163  148E  084C               	movf	?___ftadd+1,w
  8164  148F  00E3               	movwf	?_log+1
  8165  1490  084D               	movf	?___ftadd+2,w
  8166  1491  00E4               	movwf	?_log+2
  8167  1492  0008               	return
  8168  1493                     __end_of_log:	
  8169                           
  8170                           	psect	text27
  8171  1CFC                     __ptext27:	
  8172 ;; *************** function _frexp *****************
  8173 ;; Defined at:
  8174 ;;		line 254 in file "/opt/microchip/xc8/v1.34/sources/common/frexp.c"
  8175 ;; Parameters:    Size  Location     Type
  8176 ;;  value           3    0[BANK0 ] int 
  8177 ;;  eptr            1    3[BANK0 ] PTR int 
  8178 ;;		 -> log@exponent(2), floor@expon(2), 
  8179 ;; Auto vars:     Size  Location     Type
  8180 ;;		None
  8181 ;; Return value:  Size  Location     Type
  8182 ;;                  3    0[BANK0 ] PTR int 
  8183 ;; Registers used:
  8184 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
  8185 ;; Tracked objects:
  8186 ;;		On entry : 0/0
  8187 ;;		On exit  : 0/0
  8188 ;;		Unchanged: 0/0
  8189 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8190 ;;      Params:         0       4       0       0       0
  8191 ;;      Locals:         0       0       0       0       0
  8192 ;;      Temps:          0       2       0       0       0
  8193 ;;      Totals:         0       6       0       0       0
  8194 ;;Total ram usage:        6 bytes
  8195 ;; Hardware stack levels used:    1
  8196 ;; Hardware stack levels required when called:    1
  8197 ;; This function calls:
  8198 ;;		Nothing
  8199 ;; This function is called by:
  8200 ;;		_floor
  8201 ;;		_log
  8202 ;; This function uses a non-reentrant model
  8203 ;;
  8204                           
  8205                           
  8206                           ;psect for function _frexp
  8207  1CFC                     _frexp:	
  8208                           
  8209                           ;incstack = 0
  8210                           ; Regs used in _frexp: [wreg-fsr0h+status,2+status,0+btemp+1]
  8211  1CFC  1283               	bcf	3,5	;RP0=0, select bank0
  8212  1CFD  1303               	bcf	3,6	;RP1=0, select bank0
  8213  1CFE  0822               	movf	frexp@value+2,w
  8214  1CFF  0421               	iorwf	frexp@value+1,w
  8215  1D00  0420               	iorwf	frexp@value,w
  8216  1D01  1D03               	skipz
  8217  1D02  2D10               	goto	l3482
  8218  1D03  0823               	movf	frexp@eptr,w
  8219  1D04  0084               	movwf	4
  8220  1D05  1383               	bcf	3,7	;select IRP bank0
  8221  1D06  0180               	clrf	0
  8222  1D07  0A84               	incf	4,f
  8223  1D08  0180               	clrf	0
  8224  1D09  3000               	movlw	0
  8225  1D0A  00A0               	movwf	?_frexp
  8226  1D0B  3000               	movlw	0
  8227  1D0C  00A1               	movwf	?_frexp+1
  8228  1D0D  3000               	movlw	0
  8229  1D0E  00A2               	movwf	?_frexp+2
  8230  1D0F  0008               	return
  8231  1D10                     l3482:	
  8232  1D10  0822               	movf	frexp@value+2,w
  8233  1D11  397F               	andlw	127
  8234  1D12  00A4               	movwf	??_frexp
  8235  1D13  01A5               	clrf	??_frexp+1
  8236  1D14  1003               	clrc
  8237  1D15  0DA4               	rlf	??_frexp,f
  8238  1D16  0DA5               	rlf	??_frexp+1,f
  8239  1D17  0823               	movf	frexp@eptr,w
  8240  1D18  0084               	movwf	4
  8241  1D19  0824               	movf	??_frexp,w
  8242  1D1A  1383               	bcf	3,7	;select IRP bank0
  8243  1D1B  0080               	movwf	0
  8244  1D1C  0A84               	incf	4,f
  8245  1D1D  0825               	movf	??_frexp+1,w
  8246  1D1E  0080               	movwf	0
  8247  1D1F  0D21               	rlf	frexp@value+1,w
  8248  1D20  0D21               	rlf	frexp@value+1,w
  8249  1D21  3901               	andlw	1
  8250  1D22  00A4               	movwf	??_frexp
  8251  1D23  01A5               	clrf	??_frexp+1
  8252  1D24  0823               	movf	frexp@eptr,w
  8253  1D25  0084               	movwf	4
  8254  1D26  0824               	movf	??_frexp,w
  8255  1D27  0480               	iorwf	0,f
  8256  1D28  0A84               	incf	4,f
  8257  1D29  0825               	movf	??_frexp+1,w
  8258  1D2A  0480               	iorwf	0,f
  8259  1D2B  0823               	movf	frexp@eptr,w
  8260  1D2C  0084               	movwf	4
  8261  1D2D  3082               	movlw	130
  8262  1D2E  0780               	addwf	0,f
  8263  1D2F  0F84               	incfsz	4,f
  8264  1D30  0800               	movf	0,w
  8265  1D31  1803               	skipnc
  8266  1D32  0A00               	incf	0,w
  8267  1D33  00FF               	movwf	127
  8268  1D34  30FF               	movlw	255
  8269  1D35  077F               	addwf	127,w
  8270  1D36  0080               	movwf	0
  8271  1D37  0384               	decf	4,f
  8272  1D38  0822               	movf	frexp@value+2,w
  8273  1D39  3980               	andlw	-128
  8274  1D3A  383F               	iorlw	63
  8275  1D3B  00A2               	movwf	frexp@value+2
  8276  1D3C  13A1               	bcf	frexp@value+1,7
  8277  1D3D  0008               	return
  8278  1D3E                     __end_of_frexp:	
  8279                           
  8280                           	psect	text28
  8281  101C                     __ptext28:	
  8282 ;; *************** function _eval_poly *****************
  8283 ;; Defined at:
  8284 ;;		line 4 in file "/opt/microchip/xc8/v1.34/sources/common/evalpoly.c"
  8285 ;; Parameters:    Size  Location     Type
  8286 ;;  x               3   56[BANK0 ] PTR int 
  8287 ;;  d               1   59[BANK0 ] PTR const 
  8288 ;;		 -> exp@coeff(30), log@coeff(27), 
  8289 ;;  n               2   60[BANK0 ] int 
  8290 ;; Auto vars:     Size  Location     Type
  8291 ;;  res             3   63[BANK0 ] int 
  8292 ;; Return value:  Size  Location     Type
  8293 ;;                  3   56[BANK0 ] int 
  8294 ;; Registers used:
  8295 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  8296 ;; Tracked objects:
  8297 ;;		On entry : 0/0
  8298 ;;		On exit  : 0/0
  8299 ;;		Unchanged: 0/0
  8300 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8301 ;;      Params:         0       6       0       0       0
  8302 ;;      Locals:         0       3       0       0       0
  8303 ;;      Temps:          0       1       0       0       0
  8304 ;;      Totals:         0      10       0       0       0
  8305 ;;Total ram usage:       10 bytes
  8306 ;; Hardware stack levels used:    1
  8307 ;; Hardware stack levels required when called:    3
  8308 ;; This function calls:
  8309 ;;		___bmul
  8310 ;;		___ftadd
  8311 ;;		___ftmul
  8312 ;; This function is called by:
  8313 ;;		_log
  8314 ;;		_exp
  8315 ;; This function uses a non-reentrant model
  8316 ;;
  8317                           
  8318                           
  8319                           ;psect for function _eval_poly
  8320  101C                     _eval_poly:	
  8321                           
  8322                           ;incstack = 0
  8323 ;; using string table level
  8324                           ; Regs used in _eval_poly: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8325  101C  3003               	movlw	3
  8326  101D  1283               	bcf	3,5	;RP0=0, select bank0
  8327  101E  1303               	bcf	3,6	;RP1=0, select bank0
  8328  101F  00DE               	movwf	??_eval_poly
  8329  1020  085E               	movf	??_eval_poly,w
  8330  1021  00A0               	movwf	___bmul@multiplicand
  8331  1022  085C               	movf	eval_poly@n,w
  8332  1023  160A  158A  2378  160A  118A  	fcall	___bmul
  8333  1028  1283               	bcf	3,5	;RP0=0, select bank0
  8334  1029  1303               	bcf	3,6	;RP1=0, select bank0
  8335  102A  075B               	addwf	eval_poly@d,w
  8336  102B  0084               	movwf	4
  8337  102C  160A  158A  2000  160A  118A  	fcall	stringdir
  8338  1031  00DF               	movwf	eval_poly@res
  8339  1032  160A  158A  2000  160A  118A  	fcall	stringdir
  8340  1037  00E0               	movwf	eval_poly@res+1
  8341  1038  160A  158A  2000  160A  118A  	fcall	stringdir
  8342  103D                     L8:	
  8343  103D  00E1               	movwf	eval_poly@res+2
  8344  103E  085C               	movf	eval_poly@n,w
  8345  103F  045D               	iorwf	eval_poly@n+1,w
  8346  1040  1903               	btfsc	3,2
  8347  1041  288E               	goto	l3840
  8348  1042  3003               	movlw	3
  8349  1043  00DE               	movwf	??_eval_poly
  8350  1044  085E               	movf	??_eval_poly,w
  8351  1045  00A0               	movwf	___bmul@multiplicand
  8352  1046  30FF               	movlw	255
  8353  1047  07DC               	addwf	eval_poly@n,f
  8354  1048  1803               	skipnc
  8355  1049  0ADD               	incf	eval_poly@n+1,f
  8356  104A  30FF               	movlw	255
  8357  104B  07DD               	addwf	eval_poly@n+1,f
  8358  104C  085C               	movf	eval_poly@n,w
  8359  104D  160A  158A  2378  160A  118A  	fcall	___bmul
  8360  1052  1283               	bcf	3,5	;RP0=0, select bank0
  8361  1053  1303               	bcf	3,6	;RP1=0, select bank0
  8362  1054  075B               	addwf	eval_poly@d,w
  8363  1055  0084               	movwf	4
  8364  1056  160A  158A  2000  160A  118A  	fcall	stringdir
  8365  105B  00CB               	movwf	___ftadd@f1
  8366  105C  160A  158A  2000  160A  118A  	fcall	stringdir
  8367  1061  00CC               	movwf	___ftadd@f1+1
  8368  1062  160A  158A  2000  160A  118A  	fcall	stringdir
  8369  1067  00CD               	movwf	___ftadd@f1+2
  8370  1068  085F               	movf	eval_poly@res,w
  8371  1069  00B8               	movwf	___ftmul@f1
  8372  106A  0860               	movf	eval_poly@res+1,w
  8373  106B  00B9               	movwf	___ftmul@f1+1
  8374  106C  0861               	movf	eval_poly@res+2,w
  8375  106D  00BA               	movwf	___ftmul@f1+2
  8376  106E  0858               	movf	eval_poly@x,w
  8377  106F  00BB               	movwf	___ftmul@f2
  8378  1070  0859               	movf	eval_poly@x+1,w
  8379  1071  00BC               	movwf	___ftmul@f2+1
  8380  1072  085A               	movf	eval_poly@x+2,w
  8381  1073  00BD               	movwf	___ftmul@f2+2
  8382  1074  160A  118A  2493  160A  118A  	fcall	___ftmul
  8383  1079  1283               	bcf	3,5	;RP0=0, select bank0
  8384  107A  1303               	bcf	3,6	;RP1=0, select bank0
  8385  107B  0838               	movf	?___ftmul,w
  8386  107C  00CE               	movwf	___ftadd@f2
  8387  107D  0839               	movf	?___ftmul+1,w
  8388  107E  00CF               	movwf	___ftadd@f2+1
  8389  107F  083A               	movf	?___ftmul+2,w
  8390  1080  00D0               	movwf	___ftadd@f2+2
  8391  1081  120A  158A  20A0  160A  118A  	fcall	___ftadd
  8392  1086  1283               	bcf	3,5	;RP0=0, select bank0
  8393  1087  1303               	bcf	3,6	;RP1=0, select bank0
  8394  1088  084B               	movf	?___ftadd,w
  8395  1089  00DF               	movwf	eval_poly@res
  8396  108A  084C               	movf	?___ftadd+1,w
  8397  108B  00E0               	movwf	eval_poly@res+1
  8398  108C  084D               	movf	?___ftadd+2,w
  8399  108D  283D               	goto	L8
  8400  108E                     l3840:	
  8401  108E  085F               	movf	eval_poly@res,w
  8402  108F  00D8               	movwf	?_eval_poly
  8403  1090  0860               	movf	eval_poly@res+1,w
  8404  1091  00D9               	movwf	?_eval_poly+1
  8405  1092  0861               	movf	eval_poly@res+2,w
  8406  1093  00DA               	movwf	?_eval_poly+2
  8407  1094  0008               	return
  8408  1095                     __end_of_eval_poly:	
  8409                           
  8410                           	psect	text29
  8411  1493                     __ptext29:	
  8412 ;; *************** function ___ftmul *****************
  8413 ;; Defined at:
  8414 ;;		line 62 in file "/opt/microchip/xc8/v1.34/sources/common/ftmul.c"
  8415 ;; Parameters:    Size  Location     Type
  8416 ;;  f1              3   24[BANK0 ] float 
  8417 ;;  f2              3   27[BANK0 ] float 
  8418 ;; Auto vars:     Size  Location     Type
  8419 ;;  f3_as_produc    3   35[BANK0 ] unsigned um
  8420 ;;  sign            1   39[BANK0 ] unsigned char 
  8421 ;;  cntr            1   38[BANK0 ] unsigned char 
  8422 ;;  exp             1   34[BANK0 ] unsigned char 
  8423 ;; Return value:  Size  Location     Type
  8424 ;;                  3   24[BANK0 ] float 
  8425 ;; Registers used:
  8426 ;;		wreg, status,2, status,0, pclath, cstack
  8427 ;; Tracked objects:
  8428 ;;		On entry : 0/0
  8429 ;;		On exit  : 0/0
  8430 ;;		Unchanged: 0/0
  8431 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8432 ;;      Params:         0       6       0       0       0
  8433 ;;      Locals:         0       6       0       0       0
  8434 ;;      Temps:          0       4       0       0       0
  8435 ;;      Totals:         0      16       0       0       0
  8436 ;;Total ram usage:       16 bytes
  8437 ;; Hardware stack levels used:    1
  8438 ;; Hardware stack levels required when called:    2
  8439 ;; This function calls:
  8440 ;;		___ftpack
  8441 ;; This function is called by:
  8442 ;;		_measure_capacitance
  8443 ;;		_measure_inductance
  8444 ;;		_format_double
  8445 ;;		_log
  8446 ;;		_log10
  8447 ;;		_pow
  8448 ;;		_eval_poly
  8449 ;;		_exp
  8450 ;;		_format_float
  8451 ;; This function uses a non-reentrant model
  8452 ;;
  8453                           
  8454                           
  8455                           ;psect for function ___ftmul
  8456  1493                     ___ftmul:	
  8457                           
  8458                           ;incstack = 0
  8459                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
  8460  1493  1283               	bcf	3,5	;RP0=0, select bank0
  8461  1494  1303               	bcf	3,6	;RP1=0, select bank0
  8462  1495  0838               	movf	___ftmul@f1,w
  8463  1496  00BE               	movwf	??___ftmul
  8464  1497  0839               	movf	___ftmul@f1+1,w
  8465  1498  00BF               	movwf	??___ftmul+1
  8466  1499  083A               	movf	___ftmul@f1+2,w
  8467  149A  00C0               	movwf	??___ftmul+2
  8468  149B  1003               	clrc
  8469  149C  0D3F               	rlf	??___ftmul+1,w
  8470  149D  0D40               	rlf	??___ftmul+2,w
  8471  149E  00C1               	movwf	??___ftmul+3
  8472  149F  0841               	movf	??___ftmul+3,w
  8473  14A0  00C2               	movwf	___ftmul@exp
  8474  14A1  0842               	movf	___ftmul@exp,w
  8475  14A2  1D03               	btfss	3,2
  8476  14A3  2CAB               	goto	l3590
  8477  14A4  3000               	movlw	0
  8478  14A5  00B8               	movwf	?___ftmul
  8479  14A6  3000               	movlw	0
  8480  14A7  00B9               	movwf	?___ftmul+1
  8481  14A8  3000               	movlw	0
  8482  14A9  00BA               	movwf	?___ftmul+2
  8483  14AA  0008               	return
  8484  14AB                     l3590:	
  8485  14AB  083B               	movf	___ftmul@f2,w
  8486  14AC  00BE               	movwf	??___ftmul
  8487  14AD  083C               	movf	___ftmul@f2+1,w
  8488  14AE  00BF               	movwf	??___ftmul+1
  8489  14AF  083D               	movf	___ftmul@f2+2,w
  8490  14B0  00C0               	movwf	??___ftmul+2
  8491  14B1  1003               	clrc
  8492  14B2  0D3F               	rlf	??___ftmul+1,w
  8493  14B3  0D40               	rlf	??___ftmul+2,w
  8494  14B4  00C1               	movwf	??___ftmul+3
  8495  14B5  0841               	movf	??___ftmul+3,w
  8496  14B6  00C7               	movwf	___ftmul@sign
  8497  14B7  0847               	movf	___ftmul@sign,w
  8498  14B8  1D03               	btfss	3,2
  8499  14B9  2CC1               	goto	l3596
  8500  14BA  3000               	movlw	0
  8501  14BB  00B8               	movwf	?___ftmul
  8502  14BC  3000               	movlw	0
  8503  14BD  00B9               	movwf	?___ftmul+1
  8504  14BE  3000               	movlw	0
  8505  14BF  00BA               	movwf	?___ftmul+2
  8506  14C0  0008               	return
  8507  14C1                     l3596:	
  8508  14C1  0847               	movf	___ftmul@sign,w
  8509  14C2  3E7B               	addlw	123
  8510  14C3  00BE               	movwf	??___ftmul
  8511  14C4  083E               	movf	??___ftmul,w
  8512  14C5  07C2               	addwf	___ftmul@exp,f
  8513  14C6  0838               	movf	___ftmul@f1,w
  8514  14C7  00BE               	movwf	??___ftmul
  8515  14C8  0839               	movf	___ftmul@f1+1,w
  8516  14C9  00BF               	movwf	??___ftmul+1
  8517  14CA  083A               	movf	___ftmul@f1+2,w
  8518  14CB  00C0               	movwf	??___ftmul+2
  8519  14CC  3010               	movlw	16
  8520  14CD                     u4325:	
  8521  14CD  1003               	clrc
  8522  14CE  0CC0               	rrf	??___ftmul+2,f
  8523  14CF  0CBF               	rrf	??___ftmul+1,f
  8524  14D0  0CBE               	rrf	??___ftmul,f
  8525  14D1  3EFF               	addlw	-1
  8526  14D2  1D03               	skipz
  8527  14D3  2CCD               	goto	u4325
  8528  14D4  083E               	movf	??___ftmul,w
  8529  14D5  00C1               	movwf	??___ftmul+3
  8530  14D6  0841               	movf	??___ftmul+3,w
  8531  14D7  00C7               	movwf	___ftmul@sign
  8532  14D8  083B               	movf	___ftmul@f2,w
  8533  14D9  00BE               	movwf	??___ftmul
  8534  14DA  083C               	movf	___ftmul@f2+1,w
  8535  14DB  00BF               	movwf	??___ftmul+1
  8536  14DC  083D               	movf	___ftmul@f2+2,w
  8537  14DD  00C0               	movwf	??___ftmul+2
  8538  14DE  3010               	movlw	16
  8539  14DF                     u4335:	
  8540  14DF  1003               	clrc
  8541  14E0  0CC0               	rrf	??___ftmul+2,f
  8542  14E1  0CBF               	rrf	??___ftmul+1,f
  8543  14E2  0CBE               	rrf	??___ftmul,f
  8544  14E3  3EFF               	addlw	-1
  8545  14E4  1D03               	skipz
  8546  14E5  2CDF               	goto	u4335
  8547  14E6  083E               	movf	??___ftmul,w
  8548  14E7  00C1               	movwf	??___ftmul+3
  8549  14E8  0841               	movf	??___ftmul+3,w
  8550  14E9  06C7               	xorwf	___ftmul@sign,f
  8551  14EA  3080               	movlw	128
  8552  14EB  00BE               	movwf	??___ftmul
  8553  14EC  083E               	movf	??___ftmul,w
  8554  14ED  05C7               	andwf	___ftmul@sign,f
  8555  14EE  17B9               	bsf	___ftmul@f1+1,7
  8556  14EF  17BC               	bsf	___ftmul@f2+1,7
  8557  14F0  30FF               	movlw	255
  8558  14F1  05BB               	andwf	___ftmul@f2,f
  8559  14F2  30FF               	movlw	255
  8560  14F3  05BC               	andwf	___ftmul@f2+1,f
  8561  14F4  3000               	movlw	0
  8562  14F5  05BD               	andwf	___ftmul@f2+2,f
  8563  14F6  3000               	movlw	0
  8564  14F7  00C3               	movwf	___ftmul@f3_as_product
  8565  14F8  3000               	movlw	0
  8566  14F9  00C4               	movwf	___ftmul@f3_as_product+1
  8567  14FA  3000               	movlw	0
  8568  14FB  00C5               	movwf	___ftmul@f3_as_product+2
  8569  14FC  3007               	movlw	7
  8570  14FD  00BE               	movwf	??___ftmul
  8571  14FE  083E               	movf	??___ftmul,w
  8572  14FF  00C6               	movwf	___ftmul@cntr
  8573  1500                     l3608:	
  8574  1500  1C38               	btfss	___ftmul@f1,0
  8575  1501  2D10               	goto	l3612
  8576  1502  083B               	movf	___ftmul@f2,w
  8577  1503  07C3               	addwf	___ftmul@f3_as_product,f
  8578  1504  083C               	movf	___ftmul@f2+1,w
  8579  1505  1103               	clrz
  8580  1506  1803               	skipnc
  8581  1507  0A3C               	incf	___ftmul@f2+1,w
  8582  1508  1D03               	btfss	3,2
  8583  1509  07C4               	addwf	___ftmul@f3_as_product+1,f
  8584  150A  083D               	movf	___ftmul@f2+2,w
  8585  150B  1103               	clrz
  8586  150C  1803               	skipnc
  8587  150D  0A3D               	incf	___ftmul@f2+2,w
  8588  150E  1D03               	btfss	3,2
  8589  150F  07C5               	addwf	___ftmul@f3_as_product+2,f
  8590  1510                     l3612:	
  8591  1510  3001               	movlw	1
  8592  1511                     u4365:	
  8593  1511  1003               	clrc
  8594  1512  0CBA               	rrf	___ftmul@f1+2,f
  8595  1513  0CB9               	rrf	___ftmul@f1+1,f
  8596  1514  0CB8               	rrf	___ftmul@f1,f
  8597  1515  3EFF               	addlw	-1
  8598  1516  1D03               	skipz
  8599  1517  2D11               	goto	u4365
  8600  1518  3001               	movlw	1
  8601  1519                     u4375:	
  8602  1519  1003               	clrc
  8603  151A  0DBB               	rlf	___ftmul@f2,f
  8604  151B  0DBC               	rlf	___ftmul@f2+1,f
  8605  151C  0DBD               	rlf	___ftmul@f2+2,f
  8606  151D  3EFF               	addlw	-1
  8607  151E  1D03               	skipz
  8608  151F  2D19               	goto	u4375
  8609  1520  3001               	movlw	1
  8610  1521  02C6               	subwf	___ftmul@cntr,f
  8611  1522  1D03               	btfss	3,2
  8612  1523  2D00               	goto	l3608
  8613  1524  3009               	movlw	9
  8614  1525  00BE               	movwf	??___ftmul
  8615  1526  083E               	movf	??___ftmul,w
  8616  1527  00C6               	movwf	___ftmul@cntr
  8617  1528                     l3620:	
  8618  1528  1C38               	btfss	___ftmul@f1,0
  8619  1529  2D38               	goto	l3624
  8620  152A  083B               	movf	___ftmul@f2,w
  8621  152B  07C3               	addwf	___ftmul@f3_as_product,f
  8622  152C  083C               	movf	___ftmul@f2+1,w
  8623  152D  1103               	clrz
  8624  152E  1803               	skipnc
  8625  152F  0A3C               	incf	___ftmul@f2+1,w
  8626  1530  1D03               	btfss	3,2
  8627  1531  07C4               	addwf	___ftmul@f3_as_product+1,f
  8628  1532  083D               	movf	___ftmul@f2+2,w
  8629  1533  1103               	clrz
  8630  1534  1803               	skipnc
  8631  1535  0A3D               	incf	___ftmul@f2+2,w
  8632  1536  1D03               	btfss	3,2
  8633  1537  07C5               	addwf	___ftmul@f3_as_product+2,f
  8634  1538                     l3624:	
  8635  1538  3001               	movlw	1
  8636  1539                     u4415:	
  8637  1539  1003               	clrc
  8638  153A  0CBA               	rrf	___ftmul@f1+2,f
  8639  153B  0CB9               	rrf	___ftmul@f1+1,f
  8640  153C  0CB8               	rrf	___ftmul@f1,f
  8641  153D  3EFF               	addlw	-1
  8642  153E  1D03               	skipz
  8643  153F  2D39               	goto	u4415
  8644  1540  3001               	movlw	1
  8645  1541                     u4425:	
  8646  1541  1003               	clrc
  8647  1542  0CC5               	rrf	___ftmul@f3_as_product+2,f
  8648  1543  0CC4               	rrf	___ftmul@f3_as_product+1,f
  8649  1544  0CC3               	rrf	___ftmul@f3_as_product,f
  8650  1545  3EFF               	addlw	-1
  8651  1546  1D03               	skipz
  8652  1547  2D41               	goto	u4425
  8653  1548  3001               	movlw	1
  8654  1549  02C6               	subwf	___ftmul@cntr,f
  8655  154A  1D03               	btfss	3,2
  8656  154B  2D28               	goto	l3620
  8657  154C  0843               	movf	___ftmul@f3_as_product,w
  8658  154D  00A0               	movwf	___ftpack@arg
  8659  154E  0844               	movf	___ftmul@f3_as_product+1,w
  8660  154F  00A1               	movwf	___ftpack@arg+1
  8661  1550  0845               	movf	___ftmul@f3_as_product+2,w
  8662  1551  00A2               	movwf	___ftpack@arg+2
  8663  1552  0842               	movf	___ftmul@exp,w
  8664  1553  00BE               	movwf	??___ftmul
  8665  1554  083E               	movf	??___ftmul,w
  8666  1555  00A3               	movwf	___ftpack@exp
  8667  1556  0847               	movf	___ftmul@sign,w
  8668  1557  00BF               	movwf	??___ftmul+1
  8669  1558  083F               	movf	??___ftmul+1,w
  8670  1559  00A4               	movwf	___ftpack@sign
  8671  155A  160A  158A  26B4   	fcall	___ftpack
  8672  155D  1283               	bcf	3,5	;RP0=0, select bank0
  8673  155E  1303               	bcf	3,6	;RP1=0, select bank0
  8674  155F  0820               	movf	?___ftpack,w
  8675  1560  00B8               	movwf	?___ftmul
  8676  1561  0821               	movf	?___ftpack+1,w
  8677  1562  00B9               	movwf	?___ftmul+1
  8678  1563  0822               	movf	?___ftpack+2,w
  8679  1564  00BA               	movwf	?___ftmul+2
  8680  1565  0008               	return
  8681  1566                     __end_of___ftmul:	
  8682                           
  8683                           	psect	text30
  8684  08A0                     __ptext30:	
  8685 ;; *************** function ___ftadd *****************
  8686 ;; Defined at:
  8687 ;;		line 86 in file "/opt/microchip/xc8/v1.34/sources/common/ftadd.c"
  8688 ;; Parameters:    Size  Location     Type
  8689 ;;  f1              3   43[BANK0 ] float 
  8690 ;;  f2              3   46[BANK0 ] float 
  8691 ;; Auto vars:     Size  Location     Type
  8692 ;;  exp1            1   55[BANK0 ] unsigned char 
  8693 ;;  exp2            1   54[BANK0 ] unsigned char 
  8694 ;;  sign            1   53[BANK0 ] unsigned char 
  8695 ;; Return value:  Size  Location     Type
  8696 ;;                  3   43[BANK0 ] float 
  8697 ;; Registers used:
  8698 ;;		wreg, status,2, status,0, pclath, cstack
  8699 ;; Tracked objects:
  8700 ;;		On entry : 0/0
  8701 ;;		On exit  : 0/0
  8702 ;;		Unchanged: 0/0
  8703 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8704 ;;      Params:         0       6       0       0       0
  8705 ;;      Locals:         0       3       0       0       0
  8706 ;;      Temps:          0       4       0       0       0
  8707 ;;      Totals:         0      13       0       0       0
  8708 ;;Total ram usage:       13 bytes
  8709 ;; Hardware stack levels used:    1
  8710 ;; Hardware stack levels required when called:    2
  8711 ;; This function calls:
  8712 ;;		___ftpack
  8713 ;; This function is called by:
  8714 ;;		_measure_capacitance
  8715 ;;		_measure_inductance
  8716 ;;		_floor
  8717 ;;		___ftsub
  8718 ;;		_log
  8719 ;;		_eval_poly
  8720 ;; This function uses a non-reentrant model
  8721 ;;
  8722                           
  8723                           
  8724                           ;psect for function ___ftadd
  8725  08A0                     ___ftadd:	
  8726                           
  8727                           ;incstack = 0
  8728                           ; Regs used in ___ftadd: [wreg+status,2+status,0+pclath+cstack]
  8729  08A0  1283               	bcf	3,5	;RP0=0, select bank0
  8730  08A1  1303               	bcf	3,6	;RP1=0, select bank0
  8731  08A2  084B               	movf	___ftadd@f1,w
  8732  08A3  00D1               	movwf	??___ftadd
  8733  08A4  084C               	movf	___ftadd@f1+1,w
  8734  08A5  00D2               	movwf	??___ftadd+1
  8735  08A6  084D               	movf	___ftadd@f1+2,w
  8736  08A7  00D3               	movwf	??___ftadd+2
  8737  08A8  1003               	clrc
  8738  08A9  0D52               	rlf	??___ftadd+1,w
  8739  08AA  0D53               	rlf	??___ftadd+2,w
  8740  08AB  00D4               	movwf	??___ftadd+3
  8741  08AC  0854               	movf	??___ftadd+3,w
  8742  08AD  00D7               	movwf	___ftadd@exp1
  8743  08AE  084E               	movf	___ftadd@f2,w
  8744  08AF  00D1               	movwf	??___ftadd
  8745  08B0  084F               	movf	___ftadd@f2+1,w
  8746  08B1  00D2               	movwf	??___ftadd+1
  8747  08B2  0850               	movf	___ftadd@f2+2,w
  8748  08B3  00D3               	movwf	??___ftadd+2
  8749  08B4  1003               	clrc
  8750  08B5  0D52               	rlf	??___ftadd+1,w
  8751  08B6  0D53               	rlf	??___ftadd+2,w
  8752  08B7  00D4               	movwf	??___ftadd+3
  8753  08B8  0854               	movf	??___ftadd+3,w
  8754  08B9  00D6               	movwf	___ftadd@exp2
  8755  08BA  0857               	movf	___ftadd@exp1,w
  8756  08BB  1903               	btfsc	3,2
  8757  08BC  28C9               	goto	l3500
  8758  08BD  0856               	movf	___ftadd@exp2,w
  8759  08BE  0257               	subwf	___ftadd@exp1,w
  8760  08BF  1803               	skipnc
  8761  08C0  28D0               	goto	l3504
  8762  08C1  0357               	decf	___ftadd@exp1,w
  8763  08C2  3AFF               	xorlw	255
  8764  08C3  0756               	addwf	___ftadd@exp2,w
  8765  08C4  00D1               	movwf	??___ftadd
  8766  08C5  3019               	movlw	25
  8767  08C6  0251               	subwf	??___ftadd,w
  8768  08C7  1C03               	skipc
  8769  08C8  28D0               	goto	l3504
  8770  08C9                     l3500:	
  8771  08C9  084E               	movf	___ftadd@f2,w
  8772  08CA  00CB               	movwf	?___ftadd
  8773  08CB  084F               	movf	___ftadd@f2+1,w
  8774  08CC  00CC               	movwf	?___ftadd+1
  8775  08CD  0850               	movf	___ftadd@f2+2,w
  8776  08CE  00CD               	movwf	?___ftadd+2
  8777  08CF  0008               	return
  8778  08D0                     l3504:	
  8779  08D0  0856               	movf	___ftadd@exp2,w
  8780  08D1  1903               	btfsc	3,2
  8781  08D2  0008               	return
  8782  08D3  0857               	movf	___ftadd@exp1,w
  8783  08D4  0256               	subwf	___ftadd@exp2,w
  8784  08D5  1803               	skipnc
  8785  08D6  28DF               	goto	l3510
  8786  08D7  0356               	decf	___ftadd@exp2,w
  8787  08D8  3AFF               	xorlw	255
  8788  08D9  0757               	addwf	___ftadd@exp1,w
  8789  08DA  00D1               	movwf	??___ftadd
  8790  08DB  3019               	movlw	25
  8791  08DC  0251               	subwf	??___ftadd,w
  8792  08DD  1803               	btfsc	3,0
  8793  08DE  0008               	return
  8794  08DF                     l3510:	
  8795  08DF  3006               	movlw	6
  8796  08E0  00D1               	movwf	??___ftadd
  8797  08E1  0851               	movf	??___ftadd,w
  8798  08E2  00D5               	movwf	___ftadd@sign
  8799  08E3  1BCD               	btfsc	___ftadd@f1+2,7
  8800  08E4  17D5               	bsf	___ftadd@sign,7
  8801  08E5  1BD0               	btfsc	___ftadd@f2+2,7
  8802  08E6  1755               	bsf	___ftadd@sign,6
  8803  08E7  17CC               	bsf	___ftadd@f1+1,7
  8804  08E8  30FF               	movlw	255
  8805  08E9  05CB               	andwf	___ftadd@f1,f
  8806  08EA  30FF               	movlw	255
  8807  08EB  05CC               	andwf	___ftadd@f1+1,f
  8808  08EC  3000               	movlw	0
  8809  08ED  05CD               	andwf	___ftadd@f1+2,f
  8810  08EE  17CF               	bsf	___ftadd@f2+1,7
  8811  08EF  30FF               	movlw	255
  8812  08F0  05CE               	andwf	___ftadd@f2,f
  8813  08F1  30FF               	movlw	255
  8814  08F2  05CF               	andwf	___ftadd@f2+1,f
  8815  08F3  3000               	movlw	0
  8816  08F4  05D0               	andwf	___ftadd@f2+2,f
  8817  08F5  0856               	movf	___ftadd@exp2,w
  8818  08F6  0257               	subwf	___ftadd@exp1,w
  8819  08F7  1803               	skipnc
  8820  08F8  291F               	goto	l3532
  8821  08F9                     l3522:	
  8822  08F9  3001               	movlw	1
  8823  08FA                     u4105:	
  8824  08FA  1003               	clrc
  8825  08FB  0DCE               	rlf	___ftadd@f2,f
  8826  08FC  0DCF               	rlf	___ftadd@f2+1,f
  8827  08FD  0DD0               	rlf	___ftadd@f2+2,f
  8828  08FE  3EFF               	addlw	-1
  8829  08FF  1D03               	skipz
  8830  0900  28FA               	goto	u4105
  8831  0901  3001               	movlw	1
  8832  0902  02D6               	subwf	___ftadd@exp2,f
  8833  0903  0856               	movf	___ftadd@exp2,w
  8834  0904  0657               	xorwf	___ftadd@exp1,w
  8835  0905  1903               	skipnz
  8836  0906  291A               	goto	l3530
  8837  0907  3001               	movlw	1
  8838  0908  02D5               	subwf	___ftadd@sign,f
  8839  0909  0855               	movf	___ftadd@sign,w
  8840  090A  3907               	andlw	7
  8841  090B  1903               	btfsc	3,2
  8842  090C  291A               	goto	l3530
  8843  090D  28F9               	goto	l3522
  8844  090E                     l3528:	
  8845  090E  3001               	movlw	1
  8846  090F                     u4135:	
  8847  090F  1003               	clrc
  8848  0910  0CCD               	rrf	___ftadd@f1+2,f
  8849  0911  0CCC               	rrf	___ftadd@f1+1,f
  8850  0912  0CCB               	rrf	___ftadd@f1,f
  8851  0913  3EFF               	addlw	-1
  8852  0914  1D03               	skipz
  8853  0915  290F               	goto	u4135
  8854  0916  3001               	movlw	1
  8855  0917  00D1               	movwf	??___ftadd
  8856  0918  0851               	movf	??___ftadd,w
  8857  0919  07D7               	addwf	___ftadd@exp1,f
  8858  091A                     l3530:	
  8859  091A  0857               	movf	___ftadd@exp1,w
  8860  091B  0656               	xorwf	___ftadd@exp2,w
  8861  091C  1903               	btfsc	3,2
  8862  091D  2948               	goto	l682
  8863  091E  290E               	goto	l3528
  8864  091F                     l3532:	
  8865  091F  0857               	movf	___ftadd@exp1,w
  8866  0920  0256               	subwf	___ftadd@exp2,w
  8867  0921  1803               	skipnc
  8868  0922  2948               	goto	l682
  8869  0923                     l3534:	
  8870  0923  3001               	movlw	1
  8871  0924                     u4165:	
  8872  0924  1003               	clrc
  8873  0925  0DCB               	rlf	___ftadd@f1,f
  8874  0926  0DCC               	rlf	___ftadd@f1+1,f
  8875  0927  0DCD               	rlf	___ftadd@f1+2,f
  8876  0928  3EFF               	addlw	-1
  8877  0929  1D03               	skipz
  8878  092A  2924               	goto	u4165
  8879  092B  3001               	movlw	1
  8880  092C  02D7               	subwf	___ftadd@exp1,f
  8881  092D  0856               	movf	___ftadd@exp2,w
  8882  092E  0657               	xorwf	___ftadd@exp1,w
  8883  092F  1903               	skipnz
  8884  0930  2944               	goto	l3542
  8885  0931  3001               	movlw	1
  8886  0932  02D5               	subwf	___ftadd@sign,f
  8887  0933  0855               	movf	___ftadd@sign,w
  8888  0934  3907               	andlw	7
  8889  0935  1903               	btfsc	3,2
  8890  0936  2944               	goto	l3542
  8891  0937  2923               	goto	l3534
  8892  0938                     l3540:	
  8893  0938  3001               	movlw	1
  8894  0939                     u4195:	
  8895  0939  1003               	clrc
  8896  093A  0CD0               	rrf	___ftadd@f2+2,f
  8897  093B  0CCF               	rrf	___ftadd@f2+1,f
  8898  093C  0CCE               	rrf	___ftadd@f2,f
  8899  093D  3EFF               	addlw	-1
  8900  093E  1D03               	skipz
  8901  093F  2939               	goto	u4195
  8902  0940  3001               	movlw	1
  8903  0941  00D1               	movwf	??___ftadd
  8904  0942  0851               	movf	??___ftadd,w
  8905  0943  07D6               	addwf	___ftadd@exp2,f
  8906  0944                     l3542:	
  8907  0944  0857               	movf	___ftadd@exp1,w
  8908  0945  0656               	xorwf	___ftadd@exp2,w
  8909  0946  1D03               	skipz
  8910  0947  2938               	goto	l3540
  8911  0948                     l682:	
  8912  0948  1FD5               	btfss	___ftadd@sign,7
  8913  0949  295A               	goto	l3546
  8914  094A  30FF               	movlw	255
  8915  094B  06CB               	xorwf	___ftadd@f1,f
  8916  094C  30FF               	movlw	255
  8917  094D  06CC               	xorwf	___ftadd@f1+1,f
  8918  094E  30FF               	movlw	255
  8919  094F  06CD               	xorwf	___ftadd@f1+2,f
  8920  0950  3001               	movlw	1
  8921  0951  07CB               	addwf	___ftadd@f1,f
  8922  0952  3000               	movlw	0
  8923  0953  1803               	skipnc
  8924  0954  3001               	movlw	1
  8925  0955  07CC               	addwf	___ftadd@f1+1,f
  8926  0956  3000               	movlw	0
  8927  0957  1803               	skipnc
  8928  0958  3001               	movlw	1
  8929  0959  07CD               	addwf	___ftadd@f1+2,f
  8930  095A                     l3546:	
  8931  095A  1F55               	btfss	___ftadd@sign,6
  8932  095B  296C               	goto	l3550
  8933  095C  30FF               	movlw	255
  8934  095D  06CE               	xorwf	___ftadd@f2,f
  8935  095E  30FF               	movlw	255
  8936  095F  06CF               	xorwf	___ftadd@f2+1,f
  8937  0960  30FF               	movlw	255
  8938  0961  06D0               	xorwf	___ftadd@f2+2,f
  8939  0962  3001               	movlw	1
  8940  0963  07CE               	addwf	___ftadd@f2,f
  8941  0964  3000               	movlw	0
  8942  0965  1803               	skipnc
  8943  0966  3001               	movlw	1
  8944  0967  07CF               	addwf	___ftadd@f2+1,f
  8945  0968  3000               	movlw	0
  8946  0969  1803               	skipnc
  8947  096A  3001               	movlw	1
  8948  096B  07D0               	addwf	___ftadd@f2+2,f
  8949  096C                     l3550:	
  8950  096C  01D5               	clrf	___ftadd@sign
  8951  096D  084B               	movf	___ftadd@f1,w
  8952  096E  07CE               	addwf	___ftadd@f2,f
  8953  096F  084C               	movf	___ftadd@f1+1,w
  8954  0970  1103               	clrz
  8955  0971  1803               	skipnc
  8956  0972  0A4C               	incf	___ftadd@f1+1,w
  8957  0973  1D03               	btfss	3,2
  8958  0974  07CF               	addwf	___ftadd@f2+1,f
  8959  0975  084D               	movf	___ftadd@f1+2,w
  8960  0976  1103               	clrz
  8961  0977  1803               	skipnc
  8962  0978  0A4D               	incf	___ftadd@f1+2,w
  8963  0979  1D03               	btfss	3,2
  8964  097A  07D0               	addwf	___ftadd@f2+2,f
  8965  097B  1FD0               	btfss	___ftadd@f2+2,7
  8966  097C  298F               	goto	l3560
  8967  097D  30FF               	movlw	255
  8968  097E  06CE               	xorwf	___ftadd@f2,f
  8969  097F  30FF               	movlw	255
  8970  0980  06CF               	xorwf	___ftadd@f2+1,f
  8971  0981  30FF               	movlw	255
  8972  0982  06D0               	xorwf	___ftadd@f2+2,f
  8973  0983  3001               	movlw	1
  8974  0984  07CE               	addwf	___ftadd@f2,f
  8975  0985  3000               	movlw	0
  8976  0986  1803               	skipnc
  8977  0987  3001               	movlw	1
  8978  0988  07CF               	addwf	___ftadd@f2+1,f
  8979  0989  3000               	movlw	0
  8980  098A  1803               	skipnc
  8981  098B  3001               	movlw	1
  8982  098C  07D0               	addwf	___ftadd@f2+2,f
  8983  098D  01D5               	clrf	___ftadd@sign
  8984  098E  0AD5               	incf	___ftadd@sign,f
  8985  098F                     l3560:	
  8986  098F  084E               	movf	___ftadd@f2,w
  8987  0990  00A0               	movwf	___ftpack@arg
  8988  0991  084F               	movf	___ftadd@f2+1,w
  8989  0992  00A1               	movwf	___ftpack@arg+1
  8990  0993  0850               	movf	___ftadd@f2+2,w
  8991  0994  00A2               	movwf	___ftpack@arg+2
  8992  0995  0857               	movf	___ftadd@exp1,w
  8993  0996  00D1               	movwf	??___ftadd
  8994  0997  0851               	movf	??___ftadd,w
  8995  0998  00A3               	movwf	___ftpack@exp
  8996  0999  0855               	movf	___ftadd@sign,w
  8997  099A  00D2               	movwf	??___ftadd+1
  8998  099B  0852               	movf	??___ftadd+1,w
  8999  099C  00A4               	movwf	___ftpack@sign
  9000  099D  160A  158A  26B4   	fcall	___ftpack
  9001  09A0  1283               	bcf	3,5	;RP0=0, select bank0
  9002  09A1  1303               	bcf	3,6	;RP1=0, select bank0
  9003  09A2  0820               	movf	?___ftpack,w
  9004  09A3  00CB               	movwf	?___ftadd
  9005  09A4  0821               	movf	?___ftpack+1,w
  9006  09A5  00CC               	movwf	?___ftadd+1
  9007  09A6  0822               	movf	?___ftpack+2,w
  9008  09A7  00CD               	movwf	?___ftadd+2
  9009  09A8  0008               	return
  9010  09A9                     __end_of___ftadd:	
  9011                           
  9012                           	psect	text31
  9013  1B78                     __ptext31:	
  9014 ;; *************** function ___bmul *****************
  9015 ;; Defined at:
  9016 ;;		line 4 in file "/opt/microchip/xc8/v1.34/sources/common/Umul8.c"
  9017 ;; Parameters:    Size  Location     Type
  9018 ;;  multiplier      1    wreg     unsigned char 
  9019 ;;  multiplicand    1    0[BANK0 ] unsigned char 
  9020 ;; Auto vars:     Size  Location     Type
  9021 ;;  multiplier      1    3[BANK0 ] unsigned char 
  9022 ;;  product         1    2[BANK0 ] unsigned char 
  9023 ;; Return value:  Size  Location     Type
  9024 ;;                  1    wreg      unsigned char 
  9025 ;; Registers used:
  9026 ;;		wreg, status,2, status,0
  9027 ;; Tracked objects:
  9028 ;;		On entry : 0/0
  9029 ;;		On exit  : 0/0
  9030 ;;		Unchanged: 0/0
  9031 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9032 ;;      Params:         0       1       0       0       0
  9033 ;;      Locals:         0       2       0       0       0
  9034 ;;      Temps:          0       1       0       0       0
  9035 ;;      Totals:         0       4       0       0       0
  9036 ;;Total ram usage:        4 bytes
  9037 ;; Hardware stack levels used:    1
  9038 ;; Hardware stack levels required when called:    1
  9039 ;; This function calls:
  9040 ;;		Nothing
  9041 ;; This function is called by:
  9042 ;;		_eval_poly
  9043 ;; This function uses a non-reentrant model
  9044 ;;
  9045                           
  9046                           
  9047                           ;psect for function ___bmul
  9048  1B78                     ___bmul:	
  9049                           
  9050                           ;incstack = 0
  9051                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  9052                           ;___bmul@multiplier stored from wreg
  9053  1B78  1283               	bcf	3,5	;RP0=0, select bank0
  9054  1B79  1303               	bcf	3,6	;RP1=0, select bank0
  9055  1B7A  00A3               	movwf	___bmul@multiplier
  9056  1B7B  01A2               	clrf	___bmul@product
  9057  1B7C                     l3446:	
  9058  1B7C  1C23               	btfss	___bmul@multiplier,0
  9059  1B7D  2B82               	goto	l3450
  9060  1B7E  0820               	movf	___bmul@multiplicand,w
  9061  1B7F  00A1               	movwf	??___bmul
  9062  1B80  0821               	movf	??___bmul,w
  9063  1B81  07A2               	addwf	___bmul@product,f
  9064  1B82                     l3450:	
  9065  1B82  1003               	clrc
  9066  1B83  0DA0               	rlf	___bmul@multiplicand,f
  9067  1B84  1003               	clrc
  9068  1B85  0CA3               	rrf	___bmul@multiplier,f
  9069  1B86  0823               	movf	___bmul@multiplier,w
  9070  1B87  1D03               	btfss	3,2
  9071  1B88  2B7C               	goto	l3446
  9072  1B89  0822               	movf	___bmul@product,w
  9073  1B8A  0008               	return
  9074  1B8B                     __end_of___bmul:	
  9075                           
  9076                           	psect	text32
  9077  1D8C                     __ptext32:	
  9078 ;; *************** function ___ftge *****************
  9079 ;; Defined at:
  9080 ;;		line 4 in file "/opt/microchip/xc8/v1.34/sources/common/ftge.c"
  9081 ;; Parameters:    Size  Location     Type
  9082 ;;  ff1             3    0[BANK0 ] float 
  9083 ;;  ff2             3    3[BANK0 ] float 
  9084 ;; Auto vars:     Size  Location     Type
  9085 ;;		None
  9086 ;; Return value:  Size  Location     Type
  9087 ;;		None               void
  9088 ;; Registers used:
  9089 ;;		wreg, status,2, status,0
  9090 ;; Tracked objects:
  9091 ;;		On entry : 0/0
  9092 ;;		On exit  : 0/0
  9093 ;;		Unchanged: 0/0
  9094 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9095 ;;      Params:         0       6       0       0       0
  9096 ;;      Locals:         0       0       0       0       0
  9097 ;;      Temps:          0       6       0       0       0
  9098 ;;      Totals:         0      12       0       0       0
  9099 ;;Total ram usage:       12 bytes
  9100 ;; Hardware stack levels used:    1
  9101 ;; Hardware stack levels required when called:    1
  9102 ;; This function calls:
  9103 ;;		Nothing
  9104 ;; This function is called by:
  9105 ;;		_measure_capacitance
  9106 ;;		_measure_inductance
  9107 ;;		_format_double
  9108 ;;		_floor
  9109 ;;		_ldexp
  9110 ;;		_log
  9111 ;;		_pow
  9112 ;;		_exp
  9113 ;;		_format_float
  9114 ;; This function uses a non-reentrant model
  9115 ;;
  9116                           
  9117                           
  9118                           ;psect for function ___ftge
  9119  1D8C                     ___ftge:	
  9120                           
  9121                           ;incstack = 0
  9122                           ; Regs used in ___ftge: [wreg+status,2+status,0]
  9123  1D8C  1283               	bcf	3,5	;RP0=0, select bank0
  9124  1D8D  1303               	bcf	3,6	;RP1=0, select bank0
  9125  1D8E  1FA2               	btfss	___ftge@ff1+2,7
  9126  1D8F  2DB5               	goto	l3568
  9127  1D90  3000               	movlw	0
  9128  1D91  00A6               	movwf	??___ftge
  9129  1D92  3000               	movlw	0
  9130  1D93  00A7               	movwf	??___ftge+1
  9131  1D94  3080               	movlw	128
  9132  1D95  00A8               	movwf	??___ftge+2
  9133  1D96  0920               	comf	___ftge@ff1,w
  9134  1D97  00A9               	movwf	??___ftge+3
  9135  1D98  0921               	comf	___ftge@ff1+1,w
  9136  1D99  00AA               	movwf	??___ftge+4
  9137  1D9A  0922               	comf	___ftge@ff1+2,w
  9138  1D9B  00AB               	movwf	??___ftge+5
  9139  1D9C  0AA9               	incf	??___ftge+3,f
  9140  1D9D  1903               	skipnz
  9141  1D9E  0AAA               	incf	??___ftge+4,f
  9142  1D9F  1903               	skipnz
  9143  1DA0  0AAB               	incf	??___ftge+5,f
  9144  1DA1  0829               	movf	??___ftge+3,w
  9145  1DA2  07A6               	addwf	??___ftge,f
  9146  1DA3  082A               	movf	??___ftge+4,w
  9147  1DA4  1803               	skipnc
  9148  1DA5  0F2A               	incfsz	??___ftge+4,w
  9149  1DA6  2DA8               	goto	u4261
  9150  1DA7  2DA9               	goto	u4262
  9151  1DA8                     u4261:	
  9152  1DA8  07A7               	addwf	??___ftge+1,f
  9153  1DA9                     u4262:	
  9154  1DA9  082B               	movf	??___ftge+5,w
  9155  1DAA  1803               	skipnc
  9156  1DAB  0F2B               	incfsz	??___ftge+5,w
  9157  1DAC  2DAE               	goto	u4263
  9158  1DAD  2DAF               	goto	u4264
  9159  1DAE                     u4263:	
  9160  1DAE  07A8               	addwf	??___ftge+2,f
  9161  1DAF                     u4264:	
  9162  1DAF  0826               	movf	??___ftge,w
  9163  1DB0  00A0               	movwf	___ftge@ff1
  9164  1DB1  0827               	movf	??___ftge+1,w
  9165  1DB2  00A1               	movwf	___ftge@ff1+1
  9166  1DB3  0828               	movf	??___ftge+2,w
  9167  1DB4  00A2               	movwf	___ftge@ff1+2
  9168  1DB5                     l3568:	
  9169  1DB5  1FA5               	btfss	___ftge@ff2+2,7
  9170  1DB6  2DDC               	goto	l3572
  9171  1DB7  3000               	movlw	0
  9172  1DB8  00A6               	movwf	??___ftge
  9173  1DB9  3000               	movlw	0
  9174  1DBA  00A7               	movwf	??___ftge+1
  9175  1DBB  3080               	movlw	128
  9176  1DBC  00A8               	movwf	??___ftge+2
  9177  1DBD  0923               	comf	___ftge@ff2,w
  9178  1DBE  00A9               	movwf	??___ftge+3
  9179  1DBF  0924               	comf	___ftge@ff2+1,w
  9180  1DC0  00AA               	movwf	??___ftge+4
  9181  1DC1  0925               	comf	___ftge@ff2+2,w
  9182  1DC2  00AB               	movwf	??___ftge+5
  9183  1DC3  0AA9               	incf	??___ftge+3,f
  9184  1DC4  1903               	skipnz
  9185  1DC5  0AAA               	incf	??___ftge+4,f
  9186  1DC6  1903               	skipnz
  9187  1DC7  0AAB               	incf	??___ftge+5,f
  9188  1DC8  0829               	movf	??___ftge+3,w
  9189  1DC9  07A6               	addwf	??___ftge,f
  9190  1DCA  082A               	movf	??___ftge+4,w
  9191  1DCB  1803               	skipnc
  9192  1DCC  0F2A               	incfsz	??___ftge+4,w
  9193  1DCD  2DCF               	goto	u4281
  9194  1DCE  2DD0               	goto	u4282
  9195  1DCF                     u4281:	
  9196  1DCF  07A7               	addwf	??___ftge+1,f
  9197  1DD0                     u4282:	
  9198  1DD0  082B               	movf	??___ftge+5,w
  9199  1DD1  1803               	skipnc
  9200  1DD2  0F2B               	incfsz	??___ftge+5,w
  9201  1DD3  2DD5               	goto	u4283
  9202  1DD4  2DD6               	goto	u4284
  9203  1DD5                     u4283:	
  9204  1DD5  07A8               	addwf	??___ftge+2,f
  9205  1DD6                     u4284:	
  9206  1DD6  0826               	movf	??___ftge,w
  9207  1DD7  00A3               	movwf	___ftge@ff2
  9208  1DD8  0827               	movf	??___ftge+1,w
  9209  1DD9  00A4               	movwf	___ftge@ff2+1
  9210  1DDA  0828               	movf	??___ftge+2,w
  9211  1DDB  00A5               	movwf	___ftge@ff2+2
  9212  1DDC                     l3572:	
  9213  1DDC  3080               	movlw	128
  9214  1DDD  06A2               	xorwf	___ftge@ff1+2,f
  9215  1DDE  3080               	movlw	128
  9216  1DDF  06A5               	xorwf	___ftge@ff2+2,f
  9217  1DE0  0825               	movf	___ftge@ff2+2,w
  9218  1DE1  0222               	subwf	___ftge@ff1+2,w
  9219  1DE2  1D03               	skipz
  9220  1DE3  0008               	return
  9221  1DE4  0824               	movf	___ftge@ff2+1,w
  9222  1DE5  0221               	subwf	___ftge@ff1+1,w
  9223  1DE6  1D03               	skipz
  9224  1DE7  0008               	return
  9225  1DE8  0823               	movf	___ftge@ff2,w
  9226  1DE9  0220               	subwf	___ftge@ff1,w
  9227  1DEA  0008               	return
  9228  1DEB                     __end_of___ftge:	
  9229                           
  9230                           	psect	text33
  9231  07D5                     __ptext33:	
  9232 ;; *************** function ___awtoft *****************
  9233 ;; Defined at:
  9234 ;;		line 32 in file "/opt/microchip/xc8/v1.34/sources/common/awtoft.c"
  9235 ;; Parameters:    Size  Location     Type
  9236 ;;  c               2    8[BANK0 ] int 
  9237 ;; Auto vars:     Size  Location     Type
  9238 ;;  sign            1   13[BANK0 ] unsigned char 
  9239 ;; Return value:  Size  Location     Type
  9240 ;;                  3    8[BANK0 ] float 
  9241 ;; Registers used:
  9242 ;;		wreg, status,2, status,0, pclath, cstack
  9243 ;; Tracked objects:
  9244 ;;		On entry : 0/0
  9245 ;;		On exit  : 0/0
  9246 ;;		Unchanged: 0/0
  9247 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9248 ;;      Params:         0       3       0       0       0
  9249 ;;      Locals:         0       1       0       0       0
  9250 ;;      Temps:          0       2       0       0       0
  9251 ;;      Totals:         0       6       0       0       0
  9252 ;;Total ram usage:        6 bytes
  9253 ;; Hardware stack levels used:    1
  9254 ;; Hardware stack levels required when called:    2
  9255 ;; This function calls:
  9256 ;;		___ftpack
  9257 ;; This function is called by:
  9258 ;;		_format_double
  9259 ;;		_log
  9260 ;;		_exp
  9261 ;;		_format_float
  9262 ;; This function uses a non-reentrant model
  9263 ;;
  9264                           
  9265                           
  9266                           ;psect for function ___awtoft
  9267  07D5                     ___awtoft:	
  9268                           
  9269                           ;incstack = 0
  9270                           ; Regs used in ___awtoft: [wreg+status,2+status,0+pclath+cstack]
  9271  07D5  1283               	bcf	3,5	;RP0=0, select bank0
  9272  07D6  1303               	bcf	3,6	;RP1=0, select bank0
  9273  07D7  01AD               	clrf	___awtoft@sign
  9274  07D8  1FA9               	btfss	___awtoft@c+1,7
  9275  07D9  2FE1               	goto	l3734
  9276  07DA  09A8               	comf	___awtoft@c,f
  9277  07DB  09A9               	comf	___awtoft@c+1,f
  9278  07DC  0AA8               	incf	___awtoft@c,f
  9279  07DD  1903               	skipnz
  9280  07DE  0AA9               	incf	___awtoft@c+1,f
  9281  07DF  01AD               	clrf	___awtoft@sign
  9282  07E0  0AAD               	incf	___awtoft@sign,f
  9283  07E1                     l3734:	
  9284  07E1  0828               	movf	___awtoft@c,w
  9285  07E2  00A0               	movwf	___ftpack@arg
  9286  07E3  0829               	movf	___awtoft@c+1,w
  9287  07E4  00A1               	movwf	___ftpack@arg+1
  9288  07E5  01A2               	clrf	___ftpack@arg+2
  9289  07E6  308E               	movlw	142
  9290  07E7  00AB               	movwf	??___awtoft
  9291  07E8  082B               	movf	??___awtoft,w
  9292  07E9  00A3               	movwf	___ftpack@exp
  9293  07EA  082D               	movf	___awtoft@sign,w
  9294  07EB  00AC               	movwf	??___awtoft+1
  9295  07EC  082C               	movf	??___awtoft+1,w
  9296  07ED  00A4               	movwf	___ftpack@sign
  9297  07EE  160A  158A  26B4   	fcall	___ftpack
  9298  07F1  1283               	bcf	3,5	;RP0=0, select bank0
  9299  07F2  1303               	bcf	3,6	;RP1=0, select bank0
  9300  07F3  0820               	movf	?___ftpack,w
  9301  07F4  00A8               	movwf	?___awtoft
  9302  07F5  0821               	movf	?___ftpack+1,w
  9303  07F6  00A9               	movwf	?___awtoft+1
  9304  07F7  0822               	movf	?___ftpack+2,w
  9305  07F8  00AA               	movwf	?___awtoft+2
  9306  07F9  0008               	return
  9307  07FA                     __end_of___awtoft:	
  9308                           
  9309                           	psect	text34
  9310  07FF                     __ptext34:	
  9311 ;; *************** function _indicator *****************
  9312 ;; Defined at:
  9313 ;;		line 469 in file "../../../src/print.c"
  9314 ;; Parameters:    Size  Location     Type
  9315 ;;  indicate        1    wreg     unsigned char 
  9316 ;; Auto vars:     Size  Location     Type
  9317 ;;  indicate        1    0[COMMON] unsigned char 
  9318 ;; Return value:  Size  Location     Type
  9319 ;;		None               void
  9320 ;; Registers used:
  9321 ;;		wreg
  9322 ;; Tracked objects:
  9323 ;;		On entry : 0/0
  9324 ;;		On exit  : 0/0
  9325 ;;		Unchanged: 0/0
  9326 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9327 ;;      Params:         0       0       0       0       0
  9328 ;;      Locals:         0       0       0       0       0
  9329 ;;      Temps:          0       0       0       0       0
  9330 ;;      Totals:         0       0       0       0       0
  9331 ;;Total ram usage:        0 bytes
  9332 ;; Hardware stack levels used:    1
  9333 ;; Hardware stack levels required when called:    1
  9334 ;; This function calls:
  9335 ;;		Nothing
  9336 ;; This function is called by:
  9337 ;;		_main
  9338 ;; This function uses a non-reentrant model
  9339 ;;
  9340                           
  9341                           
  9342                           ;psect for function _indicator
  9343  07FF                     _indicator:	
  9344                           
  9345                           ;incstack = 0
  9346                           ; Regs used in _indicator: [wreg]
  9347  07FF  0008               	return
  9348  0800                     __end_of_indicator:	
  9349                           
  9350                           	psect	text35
  9351  11AF                     __ptext35:	
  9352 ;; *************** function _calibrate *****************
  9353 ;; Defined at:
  9354 ;;		line 346 in file "../../../src/LC-meter.c"
  9355 ;; Parameters:    Size  Location     Type
  9356 ;;		None
  9357 ;; Auto vars:     Size  Location     Type
  9358 ;;  i               1    0        unsigned char 
  9359 ;; Return value:  Size  Location     Type
  9360 ;;		None               void
  9361 ;; Registers used:
  9362 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  9363 ;; Tracked objects:
  9364 ;;		On entry : 0/0
  9365 ;;		On exit  : 0/0
  9366 ;;		Unchanged: 0/0
  9367 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9368 ;;      Params:         0       0       0       0       0
  9369 ;;      Locals:         0       0       0       0       0
  9370 ;;      Temps:          0       0       0       0       0
  9371 ;;      Totals:         0       0       0       0       0
  9372 ;;Total ram usage:        0 bytes
  9373 ;; Hardware stack levels used:    1
  9374 ;; Hardware stack levels required when called:    3
  9375 ;; This function calls:
  9376 ;;		___lwtoft
  9377 ;;		_delay10ms
  9378 ;;		_measure_freq
  9379 ;;		_ser_puts
  9380 ;; This function is called by:
  9381 ;;		_main
  9382 ;; This function uses a non-reentrant model
  9383 ;;
  9384                           
  9385                           
  9386                           ;psect for function _calibrate
  9387  11AF                     _calibrate:	
  9388                           
  9389                           ;LC-meter.c: 347: unsigned char i;
  9390                           ;LC-meter.c: 360: RC5 = 0;
  9391                           
  9392                           ;incstack = 0
  9393                           ; Regs used in _calibrate: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  9394  11AF  1283               	bcf	3,5	;RP0=0, select bank0
  9395  11B0  1303               	bcf	3,6	;RP1=0, select bank0
  9396  11B1  1287               	bcf	7,5	;volatile
  9397                           
  9398                           ;LC-meter.c: 362: F1 = (double)measure_freq();
  9399  11B2  160A  158A  2722  160A  118A  	fcall	_measure_freq
  9400  11B7  1283               	bcf	3,5	;RP0=0, select bank0
  9401  11B8  1303               	bcf	3,6	;RP1=0, select bank0
  9402  11B9  0821               	movf	?_measure_freq+1,w
  9403  11BA  00AC               	movwf	___lwtoft@c+1
  9404  11BB  0820               	movf	?_measure_freq,w
  9405  11BC  00AB               	movwf	___lwtoft@c
  9406  11BD  160A  158A  238B  160A  118A  	fcall	___lwtoft
  9407  11C2  1283               	bcf	3,5	;RP0=0, select bank0
  9408  11C3  1303               	bcf	3,6	;RP1=0, select bank0
  9409  11C4  082B               	movf	?___lwtoft,w
  9410  11C5  1683               	bsf	3,5	;RP0=1, select bank3
  9411  11C6  1703               	bsf	3,6	;RP1=1, select bank3
  9412  11C7  00CB               	movwf	_F1^(0+384)
  9413  11C8  1283               	bcf	3,5	;RP0=0, select bank0
  9414  11C9  1303               	bcf	3,6	;RP1=0, select bank0
  9415  11CA  082C               	movf	?___lwtoft+1,w
  9416  11CB  1683               	bsf	3,5	;RP0=1, select bank3
  9417  11CC  1703               	bsf	3,6	;RP1=1, select bank3
  9418  11CD  00CC               	movwf	(_F1+1)^(0+384)
  9419  11CE  1283               	bcf	3,5	;RP0=0, select bank0
  9420  11CF  1303               	bcf	3,6	;RP1=0, select bank0
  9421  11D0  082D               	movf	?___lwtoft+2,w
  9422  11D1  1683               	bsf	3,5	;RP0=1, select bank3
  9423  11D2  1703               	bsf	3,6	;RP1=1, select bank3
  9424  11D3  00CD               	movwf	(_F1+2)^(0+384)
  9425                           
  9426                           ;LC-meter.c: 363: delay10ms(50);
  9427  11D4  3032               	movlw	50
  9428  11D5  1283               	bcf	3,5	;RP0=0, select bank0
  9429  11D6  1303               	bcf	3,6	;RP1=0, select bank0
  9430  11D7  00A6               	movwf	delay10ms@period_10ms
  9431  11D8  3000               	movlw	0
  9432  11D9  00A7               	movwf	delay10ms@period_10ms+1
  9433  11DA  160A  158A  2790  160A  118A  	fcall	_delay10ms
  9434                           
  9435                           ;LC-meter.c: 365: F1 = (double)measure_freq();
  9436  11DF  160A  158A  2722  160A  118A  	fcall	_measure_freq
  9437  11E4  1283               	bcf	3,5	;RP0=0, select bank0
  9438  11E5  1303               	bcf	3,6	;RP1=0, select bank0
  9439  11E6  0821               	movf	?_measure_freq+1,w
  9440  11E7  00AC               	movwf	___lwtoft@c+1
  9441  11E8  0820               	movf	?_measure_freq,w
  9442  11E9  00AB               	movwf	___lwtoft@c
  9443  11EA  160A  158A  238B  160A  118A  	fcall	___lwtoft
  9444  11EF  1283               	bcf	3,5	;RP0=0, select bank0
  9445  11F0  1303               	bcf	3,6	;RP1=0, select bank0
  9446  11F1  082B               	movf	?___lwtoft,w
  9447  11F2  1683               	bsf	3,5	;RP0=1, select bank3
  9448  11F3  1703               	bsf	3,6	;RP1=1, select bank3
  9449  11F4  00CB               	movwf	_F1^(0+384)
  9450  11F5  1283               	bcf	3,5	;RP0=0, select bank0
  9451  11F6  1303               	bcf	3,6	;RP1=0, select bank0
  9452  11F7  082C               	movf	?___lwtoft+1,w
  9453  11F8  1683               	bsf	3,5	;RP0=1, select bank3
  9454  11F9  1703               	bsf	3,6	;RP1=1, select bank3
  9455  11FA  00CC               	movwf	(_F1+1)^(0+384)
  9456  11FB  1283               	bcf	3,5	;RP0=0, select bank0
  9457  11FC  1303               	bcf	3,6	;RP1=0, select bank0
  9458  11FD  082D               	movf	?___lwtoft+2,w
  9459  11FE  1683               	bsf	3,5	;RP0=1, select bank3
  9460  11FF  1703               	bsf	3,6	;RP1=1, select bank3
  9461  1200  00CD               	movwf	(_F1+2)^(0+384)
  9462                           
  9463                           ;LC-meter.c: 366: RC5 = 1;
  9464  1201  1283               	bcf	3,5	;RP0=0, select bank0
  9465  1202  1303               	bcf	3,6	;RP1=0, select bank0
  9466  1203  1687               	bsf	7,5	;volatile
  9467                           
  9468                           ;LC-meter.c: 368: F2 = (double)measure_freq();
  9469  1204  160A  158A  2722  160A  118A  	fcall	_measure_freq
  9470  1209  1283               	bcf	3,5	;RP0=0, select bank0
  9471  120A  1303               	bcf	3,6	;RP1=0, select bank0
  9472  120B  0821               	movf	?_measure_freq+1,w
  9473  120C  00AC               	movwf	___lwtoft@c+1
  9474  120D  0820               	movf	?_measure_freq,w
  9475  120E  00AB               	movwf	___lwtoft@c
  9476  120F  160A  158A  238B  160A  118A  	fcall	___lwtoft
  9477  1214  1283               	bcf	3,5	;RP0=0, select bank0
  9478  1215  1303               	bcf	3,6	;RP1=0, select bank0
  9479  1216  082B               	movf	?___lwtoft,w
  9480  1217  1683               	bsf	3,5	;RP0=1, select bank3
  9481  1218  1703               	bsf	3,6	;RP1=1, select bank3
  9482  1219  00C0               	movwf	_F2^(0+384)
  9483  121A  1283               	bcf	3,5	;RP0=0, select bank0
  9484  121B  1303               	bcf	3,6	;RP1=0, select bank0
  9485  121C  082C               	movf	?___lwtoft+1,w
  9486  121D  1683               	bsf	3,5	;RP0=1, select bank3
  9487  121E  1703               	bsf	3,6	;RP1=1, select bank3
  9488  121F  00C1               	movwf	(_F2+1)^(0+384)
  9489  1220  1283               	bcf	3,5	;RP0=0, select bank0
  9490  1221  1303               	bcf	3,6	;RP1=0, select bank0
  9491  1222  082D               	movf	?___lwtoft+2,w
  9492  1223  1683               	bsf	3,5	;RP0=1, select bank3
  9493  1224  1703               	bsf	3,6	;RP1=1, select bank3
  9494  1225  00C2               	movwf	(_F2+2)^(0+384)
  9495                           
  9496                           ;LC-meter.c: 369: delay10ms(50);
  9497  1226  3032               	movlw	50
  9498  1227  1283               	bcf	3,5	;RP0=0, select bank0
  9499  1228  1303               	bcf	3,6	;RP1=0, select bank0
  9500  1229  00A6               	movwf	delay10ms@period_10ms
  9501  122A  3000               	movlw	0
  9502  122B  00A7               	movwf	delay10ms@period_10ms+1
  9503  122C  160A  158A  2790  160A  118A  	fcall	_delay10ms
  9504                           
  9505                           ;LC-meter.c: 371: F2 = (double)measure_freq();
  9506  1231  160A  158A  2722  160A  118A  	fcall	_measure_freq
  9507  1236  1283               	bcf	3,5	;RP0=0, select bank0
  9508  1237  1303               	bcf	3,6	;RP1=0, select bank0
  9509  1238  0821               	movf	?_measure_freq+1,w
  9510  1239  00AC               	movwf	___lwtoft@c+1
  9511  123A  0820               	movf	?_measure_freq,w
  9512  123B  00AB               	movwf	___lwtoft@c
  9513  123C  160A  158A  238B  160A  118A  	fcall	___lwtoft
  9514  1241  1283               	bcf	3,5	;RP0=0, select bank0
  9515  1242  1303               	bcf	3,6	;RP1=0, select bank0
  9516  1243  082B               	movf	?___lwtoft,w
  9517  1244  1683               	bsf	3,5	;RP0=1, select bank3
  9518  1245  1703               	bsf	3,6	;RP1=1, select bank3
  9519  1246  00C0               	movwf	_F2^(0+384)
  9520  1247  1283               	bcf	3,5	;RP0=0, select bank0
  9521  1248  1303               	bcf	3,6	;RP1=0, select bank0
  9522  1249  082C               	movf	?___lwtoft+1,w
  9523  124A  1683               	bsf	3,5	;RP0=1, select bank3
  9524  124B  1703               	bsf	3,6	;RP1=1, select bank3
  9525  124C  00C1               	movwf	(_F2+1)^(0+384)
  9526  124D  1283               	bcf	3,5	;RP0=0, select bank0
  9527  124E  1303               	bcf	3,6	;RP1=0, select bank0
  9528  124F  082D               	movf	?___lwtoft+2,w
  9529  1250  1683               	bsf	3,5	;RP0=1, select bank3
  9530  1251  1703               	bsf	3,6	;RP1=1, select bank3
  9531  1252  00C2               	movwf	(_F2+2)^(0+384)
  9532                           
  9533                           ;LC-meter.c: 372: RC5 = 0;
  9534  1253  1283               	bcf	3,5	;RP0=0, select bank0
  9535  1254  1303               	bcf	3,6	;RP1=0, select bank0
  9536  1255  1287               	bcf	7,5	;volatile
  9537                           
  9538                           ;LC-meter.c: 384: ser_puts("\r\n");
  9539  1256  3045               	movlw	(low (((STR_1+3)-__stringbase)| (0+32768)))& (0+255)
  9540  1257  160A  158A  23E7   	fcall	_ser_puts
  9541  125A  0008               	return
  9542  125B                     __end_of_calibrate:	
  9543                           
  9544                           	psect	text36
  9545  1BE7                     __ptext36:	
  9546 ;; *************** function _ser_puts *****************
  9547 ;; Defined at:
  9548 ;;		line 93 in file "../../../lib/ser.c"
  9549 ;; Parameters:    Size  Location     Type
  9550 ;;  s               1    wreg     PTR const unsigned char 
  9551 ;;		 -> STR_11(3), STR_10(5), STR_9(3), STR_8(8), 
  9552 ;;		 -> STR_7(6), STR_6(6), STR_5(6), STR_4(5), 
  9553 ;;		 -> STR_3(3), STR_2(3), STR_1(6), 
  9554 ;; Auto vars:     Size  Location     Type
  9555 ;;  s               1    3[BANK0 ] PTR const unsigned char 
  9556 ;;		 -> STR_11(3), STR_10(5), STR_9(3), STR_8(8), 
  9557 ;;		 -> STR_7(6), STR_6(6), STR_5(6), STR_4(5), 
  9558 ;;		 -> STR_3(3), STR_2(3), STR_1(6), 
  9559 ;; Return value:  Size  Location     Type
  9560 ;;		None               void
  9561 ;; Registers used:
  9562 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  9563 ;; Tracked objects:
  9564 ;;		On entry : 0/0
  9565 ;;		On exit  : 0/0
  9566 ;;		Unchanged: 0/0
  9567 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9568 ;;      Params:         0       0       0       0       0
  9569 ;;      Locals:         0       1       0       0       0
  9570 ;;      Temps:          0       1       0       0       0
  9571 ;;      Totals:         0       2       0       0       0
  9572 ;;Total ram usage:        2 bytes
  9573 ;; Hardware stack levels used:    1
  9574 ;; Hardware stack levels required when called:    2
  9575 ;; This function calls:
  9576 ;;		_ser_putch
  9577 ;; This function is called by:
  9578 ;;		_main
  9579 ;;		_calibrate
  9580 ;;		_measure_capacitance
  9581 ;;		_testloop
  9582 ;; This function uses a non-reentrant model
  9583 ;;
  9584                           
  9585                           
  9586                           ;psect for function _ser_puts
  9587  1BE7                     _ser_puts:	
  9588                           
  9589                           ;incstack = 0
  9590                           ; Regs used in _ser_puts: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  9591                           ;ser_puts@s stored from wreg
  9592  1BE7  1283               	bcf	3,5	;RP0=0, select bank0
  9593  1BE8  1303               	bcf	3,6	;RP1=0, select bank0
  9594  1BE9  00A3               	movwf	ser_puts@s
  9595  1BEA                     l4108:	
  9596                           ;ser.c: 94: while(*s) ser_putch(*s++);
  9597                           
  9598  1BEA  0823               	movf	ser_puts@s,w
  9599  1BEB  0084               	movwf	4
  9600  1BEC  160A  158A  2000  160A  158A  	fcall	stringdir
  9601  1BF1  3A00               	xorlw	0
  9602  1BF2  1903               	btfsc	3,2
  9603  1BF3  0008               	return
  9604  1BF4  0823               	movf	ser_puts@s,w
  9605  1BF5  0084               	movwf	4
  9606  1BF6  160A  158A  2000  160A  158A  	fcall	stringdir
  9607  1BFB  00A2               	movwf	??_ser_puts
  9608  1BFC  0822               	movf	??_ser_puts,w
  9609  1BFD  00A0               	movwf	ser_putch@c
  9610  1BFE  160A  118A  2000  160A  158A  	fcall	_ser_putch
  9611  1C03  3001               	movlw	1
  9612  1C04  1283               	bcf	3,5	;RP0=0, select bank0
  9613  1C05  1303               	bcf	3,6	;RP1=0, select bank0
  9614  1C06  00A2               	movwf	??_ser_puts
  9615  1C07  0822               	movf	??_ser_puts,w
  9616  1C08  07A3               	addwf	ser_puts@s,f
  9617  1C09  2BEA               	goto	l4108
  9618  1C0A                     __end_of_ser_puts:	
  9619                           
  9620                           	psect	text37
  9621  1F22                     __ptext37:	
  9622 ;; *************** function _measure_freq *****************
  9623 ;; Defined at:
  9624 ;;		line 299 in file "../../../src/LC-meter.c"
  9625 ;; Parameters:    Size  Location     Type
  9626 ;;		None
  9627 ;; Auto vars:     Size  Location     Type
  9628 ;;  count           2    9[BANK0 ] unsigned short 
  9629 ;;  prev            1    8[BANK0 ] unsigned char 
  9630 ;; Return value:  Size  Location     Type
  9631 ;;                  2    0[BANK0 ] unsigned short 
  9632 ;; Registers used:
  9633 ;;		wreg, status,2, status,0, btemp+1
  9634 ;; Tracked objects:
  9635 ;;		On entry : 0/0
  9636 ;;		On exit  : 0/0
  9637 ;;		Unchanged: 0/0
  9638 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9639 ;;      Params:         0       2       0       0       0
  9640 ;;      Locals:         0       3       0       0       0
  9641 ;;      Temps:          0       6       0       0       0
  9642 ;;      Totals:         0      11       0       0       0
  9643 ;;Total ram usage:       11 bytes
  9644 ;; Hardware stack levels used:    1
  9645 ;; Hardware stack levels required when called:    1
  9646 ;; This function calls:
  9647 ;;		Nothing
  9648 ;; This function is called by:
  9649 ;;		_calibrate
  9650 ;;		_measure_capacitance
  9651 ;;		_measure_inductance
  9652 ;; This function uses a non-reentrant model
  9653 ;;
  9654                           
  9655                           
  9656                           ;psect for function _measure_freq
  9657  1F22                     _measure_freq:	
  9658                           
  9659                           ;LC-meter.c: 300: unsigned char prev;
  9660                           ;LC-meter.c: 301: unsigned short int count;
  9661                           ;LC-meter.c: 303: TMR0IF = 0;
  9662                           
  9663                           ;incstack = 0
  9664                           ; Regs used in _measure_freq: [wreg+status,2+status,0+btemp+1]
  9665  1F22  110B               	bcf	11,2	;volatile
  9666                           
  9667                           ;LC-meter.c: 305: TRISA &= ~0b00010000;
  9668  1F23  30EF               	movlw	239
  9669  1F24  1283               	bcf	3,5	;RP0=0, select bank0
  9670  1F25  1303               	bcf	3,6	;RP1=0, select bank0
  9671  1F26  00A2               	movwf	??_measure_freq
  9672  1F27  0822               	movf	??_measure_freq,w
  9673  1F28  1683               	bsf	3,5	;RP0=1, select bank1
  9674  1F29  1303               	bcf	3,6	;RP1=0, select bank1
  9675  1F2A  0585               	andwf	5,f	;volatile
  9676                           
  9677                           ;LC-meter.c: 308: _delay((unsigned long)((20)*(20000000/4000.0)));
  9678  1F2B  3082               	movlw	130
  9679  1F2C  1283               	bcf	3,5	;RP0=0, select bank0
  9680  1F2D  1303               	bcf	3,6	;RP1=0, select bank0
  9681  1F2E  00A3               	movwf	??_measure_freq+1
  9682  1F2F  30DD               	movlw	221
  9683  1F30  00A2               	movwf	??_measure_freq
  9684  1F31                     u5597:	
  9685  1F31  0BA2               	decfsz	??_measure_freq,f
  9686  1F32  2F31               	goto	u5597
  9687  1F33  0BA3               	decfsz	??_measure_freq+1,f
  9688  1F34  2F31               	goto	u5597
  9689  1F35  2F36               	nop2
  9690                           
  9691                           ;LC-meter.c: 310: TMR0 = 0x00;
  9692  1F36  1283               	bcf	3,5	;RP0=0, select bank0
  9693  1F37  1303               	bcf	3,6	;RP1=0, select bank0
  9694  1F38  0181               	clrf	1	;volatile
  9695                           
  9696                           ;LC-meter.c: 312: _delay((unsigned long)((100)*(20000000/4000.0)));
  9697  1F39  3003               	movlw	3
  9698  1F3A  00A4               	movwf	??_measure_freq+2
  9699  1F3B  308A               	movlw	138
  9700  1F3C  00A3               	movwf	??_measure_freq+1
  9701  1F3D  3056               	movlw	86
  9702  1F3E  00A2               	movwf	??_measure_freq
  9703  1F3F                     u5607:	
  9704  1F3F  0BA2               	decfsz	??_measure_freq,f
  9705  1F40  2F3F               	goto	u5607
  9706  1F41  0BA3               	decfsz	??_measure_freq+1,f
  9707  1F42  2F3F               	goto	u5607
  9708  1F43  0BA4               	decfsz	??_measure_freq+2,f
  9709  1F44  2F3F               	goto	u5607
  9710  1F45  2F46               	nop2
  9711                           
  9712                           ;LC-meter.c: 314: TRISA |= 0b00010000;
  9713  1F46  1683               	bsf	3,5	;RP0=1, select bank1
  9714  1F47  1303               	bcf	3,6	;RP1=0, select bank1
  9715  1F48  1605               	bsf	5,4	;volatile
  9716                           
  9717                           ;LC-meter.c: 316: prev = TMR0;
  9718  1F49  1283               	bcf	3,5	;RP0=0, select bank0
  9719  1F4A  1303               	bcf	3,6	;RP1=0, select bank0
  9720  1F4B  0801               	movf	1,w	;volatile
  9721  1F4C  00A2               	movwf	??_measure_freq
  9722  1F4D  0822               	movf	??_measure_freq,w
  9723  1F4E  00A8               	movwf	measure_freq@prev
  9724                           
  9725                           ;LC-meter.c: 317: count = 0;
  9726  1F4F  01A9               	clrf	measure_freq@count
  9727  1F50  01AA               	clrf	measure_freq@count+1
  9728  1F51                     l4126:	
  9729                           ;LC-meter.c: 319: do {
  9730                           
  9731                           
  9732                           ;LC-meter.c: 321: T0SE = 1;
  9733  1F51  1683               	bsf	3,5	;RP0=1, select bank1
  9734  1F52  1303               	bcf	3,6	;RP1=0, select bank1
  9735  1F53  1601               	bsf	1,4	;volatile
  9736                           
  9737                           ;LC-meter.c: 322: __nop();
  9738  1F54  0000               	nop
  9739                           
  9740                           ;LC-meter.c: 323: __nop();
  9741  1F55  0000               	nop
  9742                           
  9743                           ;LC-meter.c: 325: T0SE = 0;
  9744  1F56  1683               	bsf	3,5	;RP0=1, select bank1
  9745  1F57  1303               	bcf	3,6	;RP1=0, select bank1
  9746  1F58  1201               	bcf	1,4	;volatile
  9747                           
  9748                           ;LC-meter.c: 326: __nop();
  9749  1F59  0000               	nop
  9750                           
  9751                           ;LC-meter.c: 327: __nop();
  9752  1F5A  0000               	nop
  9753                           
  9754                           ;LC-meter.c: 328: count++;
  9755  1F5B  3001               	movlw	1
  9756  1F5C  1283               	bcf	3,5	;RP0=0, select bank0
  9757  1F5D  1303               	bcf	3,6	;RP1=0, select bank0
  9758  1F5E  07A9               	addwf	measure_freq@count,f
  9759  1F5F  1803               	skipnc
  9760  1F60  0AAA               	incf	measure_freq@count+1,f
  9761  1F61  3000               	movlw	0
  9762  1F62  07AA               	addwf	measure_freq@count+1,f
  9763                           
  9764                           ;LC-meter.c: 329: } while(prev == TMR0 && count <= 255);
  9765  1F63  0828               	movf	measure_freq@prev,w
  9766  1F64  0601               	xorwf	1,w	;volatile
  9767  1F65  1D03               	skipz
  9768  1F66  2F6E               	goto	l4144
  9769  1F67  3001               	movlw	1
  9770  1F68  022A               	subwf	measure_freq@count+1,w
  9771  1F69  3000               	movlw	0
  9772  1F6A  1903               	skipnz
  9773  1F6B  0229               	subwf	measure_freq@count,w
  9774  1F6C  1C03               	skipc
  9775  1F6D  2F51               	goto	l4126
  9776  1F6E                     l4144:	
  9777                           
  9778                           ;LC-meter.c: 332: count = ((prev << 8) + (256 - count));
  9779  1F6E  0929               	comf	measure_freq@count,w
  9780  1F6F  00A2               	movwf	??_measure_freq
  9781  1F70  092A               	comf	measure_freq@count+1,w
  9782  1F71  00A3               	movwf	??_measure_freq+1
  9783  1F72  0AA2               	incf	??_measure_freq,f
  9784  1F73  1903               	skipnz
  9785  1F74  0AA3               	incf	??_measure_freq+1,f
  9786  1F75  0828               	movf	measure_freq@prev,w
  9787  1F76  00A4               	movwf	??_measure_freq+2
  9788  1F77  01A5               	clrf	??_measure_freq+3
  9789  1F78  0824               	movf	??_measure_freq+2,w
  9790  1F79  00A5               	movwf	??_measure_freq+3
  9791  1F7A  01A4               	clrf	??_measure_freq+2
  9792  1F7B  0822               	movf	??_measure_freq,w
  9793  1F7C  0724               	addwf	??_measure_freq+2,w
  9794  1F7D  00A6               	movwf	??_measure_freq+4
  9795  1F7E  0823               	movf	??_measure_freq+1,w
  9796  1F7F  1803               	skipnc
  9797  1F80  0A23               	incf	??_measure_freq+1,w
  9798  1F81  0725               	addwf	??_measure_freq+3,w
  9799  1F82  00A7               	movwf	??_measure_freq+5
  9800  1F83  0826               	movf	??_measure_freq+4,w
  9801  1F84  3E00               	addlw	0
  9802  1F85  00A9               	movwf	measure_freq@count
  9803  1F86  0827               	movf	??_measure_freq+5,w
  9804  1F87  1803               	skipnc
  9805  1F88  3E01               	addlw	1
  9806  1F89  3E01               	addlw	1
  9807  1F8A  00AA               	movwf	measure_freq@count+1
  9808                           
  9809                           ;LC-meter.c: 339: return count;
  9810  1F8B  082A               	movf	measure_freq@count+1,w
  9811  1F8C  00A1               	movwf	?_measure_freq+1
  9812  1F8D  0829               	movf	measure_freq@count,w
  9813  1F8E  00A0               	movwf	?_measure_freq
  9814  1F8F  0008               	return
  9815  1F90                     __end_of_measure_freq:	
  9816                           
  9817                           	psect	text38
  9818  1F90                     __ptext38:	
  9819 ;; *************** function _delay10ms *****************
  9820 ;; Defined at:
  9821 ;;		line 532 in file "../../../src/LC-meter.c"
  9822 ;; Parameters:    Size  Location     Type
  9823 ;;  period_10ms     2    6[BANK0 ] unsigned short 
  9824 ;; Auto vars:     Size  Location     Type
  9825 ;;  ms              4   12[BANK0 ] unsigned long 
  9826 ;;  run             1   16[BANK0 ] unsigned char 
  9827 ;; Return value:  Size  Location     Type
  9828 ;;		None               void
  9829 ;; Registers used:
  9830 ;;		wreg, status,2, status,0, pclath, cstack
  9831 ;; Tracked objects:
  9832 ;;		On entry : 0/0
  9833 ;;		On exit  : 0/0
  9834 ;;		Unchanged: 0/0
  9835 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9836 ;;      Params:         0       2       0       0       0
  9837 ;;      Locals:         0       5       0       0       0
  9838 ;;      Temps:          0       4       0       0       0
  9839 ;;      Totals:         0      11       0       0       0
  9840 ;;Total ram usage:       11 bytes
  9841 ;; Hardware stack levels used:    1
  9842 ;; Hardware stack levels required when called:    2
  9843 ;; This function calls:
  9844 ;;		___wmul
  9845 ;; This function is called by:
  9846 ;;		_main
  9847 ;;		_calibrate
  9848 ;;		_testloop
  9849 ;; This function uses a non-reentrant model
  9850 ;;
  9851                           
  9852                           
  9853                           ;psect for function _delay10ms
  9854  1F90                     _delay10ms:	
  9855                           
  9856                           ;LC-meter.c: 536: unsigned long int ms;
  9857                           ;LC-meter.c: 537: BOOL run = 1;
  9858                           
  9859                           ;incstack = 0
  9860                           ; Regs used in _delay10ms: [wreg+status,2+status,0+pclath+cstack]
  9861  1F90  1283               	bcf	3,5	;RP0=0, select bank0
  9862  1F91  1303               	bcf	3,6	;RP1=0, select bank0
  9863  1F92  01B0               	clrf	delay10ms@run
  9864  1F93  0AB0               	incf	delay10ms@run,f
  9865                           
  9866                           ;LC-meter.c: 539: GIE = 0, ms = msecs, GIE = 1;
  9867  1F94  138B               	bcf	11,7	;volatile
  9868  1F95  1683               	bsf	3,5	;RP0=1, select bank3
  9869  1F96  1703               	bsf	3,6	;RP1=1, select bank3
  9870  1F97  0833               	movf	(_msecs+3)^(0+384),w	;volatile
  9871  1F98  1283               	bcf	3,5	;RP0=0, select bank0
  9872  1F99  1303               	bcf	3,6	;RP1=0, select bank0
  9873  1F9A  00AF               	movwf	delay10ms@ms+3
  9874  1F9B  1683               	bsf	3,5	;RP0=1, select bank3
  9875  1F9C  1703               	bsf	3,6	;RP1=1, select bank3
  9876  1F9D  0832               	movf	(_msecs+2)^(0+384),w	;volatile
  9877  1F9E  1283               	bcf	3,5	;RP0=0, select bank0
  9878  1F9F  1303               	bcf	3,6	;RP1=0, select bank0
  9879  1FA0  00AE               	movwf	delay10ms@ms+2
  9880  1FA1  1683               	bsf	3,5	;RP0=1, select bank3
  9881  1FA2  1703               	bsf	3,6	;RP1=1, select bank3
  9882  1FA3  0831               	movf	(_msecs+1)^(0+384),w	;volatile
  9883  1FA4  1283               	bcf	3,5	;RP0=0, select bank0
  9884  1FA5  1303               	bcf	3,6	;RP1=0, select bank0
  9885  1FA6  00AD               	movwf	delay10ms@ms+1
  9886  1FA7  1683               	bsf	3,5	;RP0=1, select bank3
  9887  1FA8  1703               	bsf	3,6	;RP1=1, select bank3
  9888  1FA9  0830               	movf	_msecs^(0+384),w	;volatile
  9889  1FAA  1283               	bcf	3,5	;RP0=0, select bank0
  9890  1FAB  1303               	bcf	3,6	;RP1=0, select bank0
  9891  1FAC  00AC               	movwf	delay10ms@ms
  9892  1FAD  178B               	bsf	11,7	;volatile
  9893                           
  9894                           ;LC-meter.c: 544: ms += period_10ms * 10;
  9895  1FAE  0827               	movf	delay10ms@period_10ms+1,w
  9896  1FAF  00A1               	movwf	___wmul@multiplier+1
  9897  1FB0  0826               	movf	delay10ms@period_10ms,w
  9898  1FB1  00A0               	movwf	___wmul@multiplier
  9899  1FB2  300A               	movlw	10
  9900  1FB3  00A2               	movwf	___wmul@multiplicand
  9901  1FB4  3000               	movlw	0
  9902  1FB5  00A3               	movwf	___wmul@multiplicand+1
  9903  1FB6  160A  158A  23C4  160A  158A  	fcall	___wmul
  9904  1FBB  1283               	bcf	3,5	;RP0=0, select bank0
  9905  1FBC  1303               	bcf	3,6	;RP1=0, select bank0
  9906  1FBD  0820               	movf	?___wmul,w
  9907  1FBE  00A8               	movwf	??_delay10ms
  9908  1FBF  0821               	movf	?___wmul+1,w
  9909  1FC0  00A9               	movwf	??_delay10ms+1
  9910  1FC1  01AA               	clrf	??_delay10ms+2
  9911  1FC2  01AB               	clrf	??_delay10ms+3
  9912  1FC3  0828               	movf	??_delay10ms,w
  9913  1FC4  07AC               	addwf	delay10ms@ms,f
  9914  1FC5  0829               	movf	??_delay10ms+1,w
  9915  1FC6  1103               	clrz
  9916  1FC7  1803               	skipnc
  9917  1FC8  3E01               	addlw	1
  9918  1FC9  1D03               	btfss	3,2
  9919  1FCA  07AD               	addwf	delay10ms@ms+1,f
  9920  1FCB  082A               	movf	??_delay10ms+2,w
  9921  1FCC  1103               	clrz
  9922  1FCD  1803               	skipnc
  9923  1FCE  3E01               	addlw	1
  9924  1FCF  1D03               	btfss	3,2
  9925  1FD0  07AE               	addwf	delay10ms@ms+2,f
  9926  1FD1  082B               	movf	??_delay10ms+3,w
  9927  1FD2  1103               	clrz
  9928  1FD3  1803               	skipnc
  9929  1FD4  3E01               	addlw	1
  9930  1FD5  1D03               	btfss	3,2
  9931  1FD6  07AF               	addwf	delay10ms@ms+3,f
  9932  1FD7                     l4092:	
  9933                           ;LC-meter.c: 547: do {
  9934                           
  9935                           
  9936                           ;LC-meter.c: 548: GIE = 0;
  9937  1FD7  138B               	bcf	11,7	;volatile
  9938                           
  9939                           ;LC-meter.c: 549: if(ms <= msecs)
  9940  1FD8  082F               	movf	delay10ms@ms+3,w
  9941  1FD9  1683               	bsf	3,5	;RP0=1, select bank3
  9942  1FDA  1703               	bsf	3,6	;RP1=1, select bank3
  9943  1FDB  0233               	subwf	(_msecs+3)^(0+384),w	;volatile
  9944  1FDC  1D03               	skipz
  9945  1FDD  2FF4               	goto	u5175
  9946  1FDE  1283               	bcf	3,5	;RP0=0, select bank0
  9947  1FDF  1303               	bcf	3,6	;RP1=0, select bank0
  9948  1FE0  082E               	movf	delay10ms@ms+2,w
  9949  1FE1  1683               	bsf	3,5	;RP0=1, select bank3
  9950  1FE2  1703               	bsf	3,6	;RP1=1, select bank3
  9951  1FE3  0232               	subwf	(_msecs+2)^(0+384),w	;volatile
  9952  1FE4  1D03               	skipz
  9953  1FE5  2FF4               	goto	u5175
  9954  1FE6  1283               	bcf	3,5	;RP0=0, select bank0
  9955  1FE7  1303               	bcf	3,6	;RP1=0, select bank0
  9956  1FE8  082D               	movf	delay10ms@ms+1,w
  9957  1FE9  1683               	bsf	3,5	;RP0=1, select bank3
  9958  1FEA  1703               	bsf	3,6	;RP1=1, select bank3
  9959  1FEB  0231               	subwf	(_msecs+1)^(0+384),w	;volatile
  9960  1FEC  1D03               	skipz
  9961  1FED  2FF4               	goto	u5175
  9962  1FEE  1283               	bcf	3,5	;RP0=0, select bank0
  9963  1FEF  1303               	bcf	3,6	;RP1=0, select bank0
  9964  1FF0  082C               	movf	delay10ms@ms,w
  9965  1FF1  1683               	bsf	3,5	;RP0=1, select bank3
  9966  1FF2  1703               	bsf	3,6	;RP1=1, select bank3
  9967  1FF3  0230               	subwf	_msecs^(0+384),w	;volatile
  9968  1FF4                     u5175:	
  9969  1FF4  1C03               	skipc
  9970  1FF5  2FF9               	goto	l4098
  9971                           
  9972                           ;LC-meter.c: 550: run = 0;
  9973  1FF6  1283               	bcf	3,5	;RP0=0, select bank0
  9974  1FF7  1303               	bcf	3,6	;RP1=0, select bank0
  9975  1FF8  01B0               	clrf	delay10ms@run
  9976  1FF9                     l4098:	
  9977                           
  9978                           ;LC-meter.c: 551: GIE = 1;
  9979  1FF9  178B               	bsf	11,7	;volatile
  9980                           
  9981                           ;LC-meter.c: 552: } while(run);
  9982  1FFA  1283               	bcf	3,5	;RP0=0, select bank0
  9983  1FFB  1303               	bcf	3,6	;RP1=0, select bank0
  9984  1FFC  0830               	movf	delay10ms@run,w
  9985  1FFD  1903               	btfsc	3,2
  9986  1FFE  0008               	return
  9987  1FFF  2FD7               	goto	l4092
  9988  2000                     __end_of_delay10ms:	
  9989                           
  9990                           	psect	text39
  9991  1BC4                     __ptext39:	
  9992 ;; *************** function ___wmul *****************
  9993 ;; Defined at:
  9994 ;;		line 15 in file "/opt/microchip/xc8/v1.34/sources/common/Umul16.c"
  9995 ;; Parameters:    Size  Location     Type
  9996 ;;  multiplier      2    0[BANK0 ] unsigned int 
  9997 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  9998 ;; Auto vars:     Size  Location     Type
  9999 ;;  product         2    4[BANK0 ] unsigned int 
 10000 ;; Return value:  Size  Location     Type
 10001 ;;                  2    0[BANK0 ] unsigned int 
 10002 ;; Registers used:
 10003 ;;		wreg, status,2, status,0
 10004 ;; Tracked objects:
 10005 ;;		On entry : 0/0
 10006 ;;		On exit  : 0/0
 10007 ;;		Unchanged: 0/0
 10008 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10009 ;;      Params:         0       4       0       0       0
 10010 ;;      Locals:         0       2       0       0       0
 10011 ;;      Temps:          0       0       0       0       0
 10012 ;;      Totals:         0       6       0       0       0
 10013 ;;Total ram usage:        6 bytes
 10014 ;; Hardware stack levels used:    1
 10015 ;; Hardware stack levels required when called:    1
 10016 ;; This function calls:
 10017 ;;		Nothing
 10018 ;; This function is called by:
 10019 ;;		_delay10ms
 10020 ;; This function uses a non-reentrant model
 10021 ;;
 10022                           
 10023                           
 10024                           ;psect for function ___wmul
 10025  1BC4                     ___wmul:	
 10026                           
 10027                           ;incstack = 0
 10028                           ; Regs used in ___wmul: [wreg+status,2+status,0]
 10029  1BC4  1283               	bcf	3,5	;RP0=0, select bank0
 10030  1BC5  1303               	bcf	3,6	;RP1=0, select bank0
 10031  1BC6  01A4               	clrf	___wmul@product
 10032  1BC7  01A5               	clrf	___wmul@product+1
 10033  1BC8                     l4072:	
 10034  1BC8  1C20               	btfss	___wmul@multiplier,0
 10035  1BC9  2BD0               	goto	l457
 10036  1BCA  0822               	movf	___wmul@multiplicand,w
 10037  1BCB  07A4               	addwf	___wmul@product,f
 10038  1BCC  1803               	skipnc
 10039  1BCD  0AA5               	incf	___wmul@product+1,f
 10040  1BCE  0823               	movf	___wmul@multiplicand+1,w
 10041  1BCF  07A5               	addwf	___wmul@product+1,f
 10042  1BD0                     l457:	
 10043  1BD0  3001               	movlw	1
 10044  1BD1                     u5135:	
 10045  1BD1  1003               	clrc
 10046  1BD2  0DA2               	rlf	___wmul@multiplicand,f
 10047  1BD3  0DA3               	rlf	___wmul@multiplicand+1,f
 10048  1BD4  3EFF               	addlw	-1
 10049  1BD5  1D03               	skipz
 10050  1BD6  2BD1               	goto	u5135
 10051  1BD7  3001               	movlw	1
 10052  1BD8                     u5145:	
 10053  1BD8  1003               	clrc
 10054  1BD9  0CA1               	rrf	___wmul@multiplier+1,f
 10055  1BDA  0CA0               	rrf	___wmul@multiplier,f
 10056  1BDB  3EFF               	addlw	-1
 10057  1BDC  1D03               	skipz
 10058  1BDD  2BD8               	goto	u5145
 10059  1BDE  0820               	movf	___wmul@multiplier,w
 10060  1BDF  0421               	iorwf	___wmul@multiplier+1,w
 10061  1BE0  1D03               	btfss	3,2
 10062  1BE1  2BC8               	goto	l4072
 10063  1BE2  0825               	movf	___wmul@product+1,w
 10064  1BE3  00A1               	movwf	?___wmul+1
 10065  1BE4  0824               	movf	___wmul@product,w
 10066  1BE5  00A0               	movwf	?___wmul
 10067  1BE6  0008               	return
 10068  1BE7                     __end_of___wmul:	
 10069                           
 10070                           	psect	text40
 10071  1B8B                     __ptext40:	
 10072 ;; *************** function ___lwtoft *****************
 10073 ;; Defined at:
 10074 ;;		line 28 in file "/opt/microchip/xc8/v1.34/sources/common/lwtoft.c"
 10075 ;; Parameters:    Size  Location     Type
 10076 ;;  c               2   11[BANK0 ] unsigned int 
 10077 ;; Auto vars:     Size  Location     Type
 10078 ;;		None
 10079 ;; Return value:  Size  Location     Type
 10080 ;;                  3   11[BANK0 ] float 
 10081 ;; Registers used:
 10082 ;;		wreg, status,2, status,0, pclath, cstack
 10083 ;; Tracked objects:
 10084 ;;		On entry : 0/0
 10085 ;;		On exit  : 0/0
 10086 ;;		Unchanged: 0/0
 10087 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10088 ;;      Params:         0       3       0       0       0
 10089 ;;      Locals:         0       0       0       0       0
 10090 ;;      Temps:          0       1       0       0       0
 10091 ;;      Totals:         0       4       0       0       0
 10092 ;;Total ram usage:        4 bytes
 10093 ;; Hardware stack levels used:    1
 10094 ;; Hardware stack levels required when called:    2
 10095 ;; This function calls:
 10096 ;;		___ftpack
 10097 ;; This function is called by:
 10098 ;;		_calibrate
 10099 ;;		_measure_capacitance
 10100 ;;		_measure_inductance
 10101 ;; This function uses a non-reentrant model
 10102 ;;
 10103                           
 10104                           
 10105                           ;psect for function ___lwtoft
 10106  1B8B                     ___lwtoft:	
 10107                           
 10108                           ;incstack = 0
 10109                           ; Regs used in ___lwtoft: [wreg+status,2+status,0+pclath+cstack]
 10110  1B8B  1283               	bcf	3,5	;RP0=0, select bank0
 10111  1B8C  1303               	bcf	3,6	;RP1=0, select bank0
 10112  1B8D  082B               	movf	___lwtoft@c,w
 10113  1B8E  00A0               	movwf	___ftpack@arg
 10114  1B8F  082C               	movf	___lwtoft@c+1,w
 10115  1B90  00A1               	movwf	___ftpack@arg+1
 10116  1B91  01A2               	clrf	___ftpack@arg+2
 10117  1B92  308E               	movlw	142
 10118  1B93  00AE               	movwf	??___lwtoft
 10119  1B94  082E               	movf	??___lwtoft,w
 10120  1B95  00A3               	movwf	___ftpack@exp
 10121  1B96  01A4               	clrf	___ftpack@sign
 10122  1B97  160A  158A  26B4   	fcall	___ftpack
 10123  1B9A  1283               	bcf	3,5	;RP0=0, select bank0
 10124  1B9B  1303               	bcf	3,6	;RP1=0, select bank0
 10125  1B9C  0820               	movf	?___ftpack,w
 10126  1B9D  00AB               	movwf	?___lwtoft
 10127  1B9E  0821               	movf	?___ftpack+1,w
 10128  1B9F  00AC               	movwf	?___lwtoft+1
 10129  1BA0  0822               	movf	?___ftpack+2,w
 10130  1BA1  00AD               	movwf	?___lwtoft+2
 10131  1BA2  0008               	return
 10132  1BA3                     __end_of___lwtoft:	
 10133                           
 10134                           	psect	text41
 10135  1EB4                     __ptext41:	
 10136 ;; *************** function ___ftpack *****************
 10137 ;; Defined at:
 10138 ;;		line 62 in file "/opt/microchip/xc8/v1.34/sources/common/float.c"
 10139 ;; Parameters:    Size  Location     Type
 10140 ;;  arg             3    0[BANK0 ] unsigned um
 10141 ;;  exp             1    3[BANK0 ] unsigned char 
 10142 ;;  sign            1    4[BANK0 ] unsigned char 
 10143 ;; Auto vars:     Size  Location     Type
 10144 ;;		None
 10145 ;; Return value:  Size  Location     Type
 10146 ;;                  3    0[BANK0 ] float 
 10147 ;; Registers used:
 10148 ;;		wreg, status,2, status,0
 10149 ;; Tracked objects:
 10150 ;;		On entry : 0/0
 10151 ;;		On exit  : 0/0
 10152 ;;		Unchanged: 0/0
 10153 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10154 ;;      Params:         0       5       0       0       0
 10155 ;;      Locals:         0       0       0       0       0
 10156 ;;      Temps:          0       3       0       0       0
 10157 ;;      Totals:         0       8       0       0       0
 10158 ;;Total ram usage:        8 bytes
 10159 ;; Hardware stack levels used:    1
 10160 ;; Hardware stack levels required when called:    1
 10161 ;; This function calls:
 10162 ;;		Nothing
 10163 ;; This function is called by:
 10164 ;;		___altoft
 10165 ;;		___awtoft
 10166 ;;		___ftadd
 10167 ;;		___ftdiv
 10168 ;;		___ftmul
 10169 ;;		___lltoft
 10170 ;;		___lwtoft
 10171 ;; This function uses a non-reentrant model
 10172 ;;
 10173                           
 10174                           
 10175                           ;psect for function ___ftpack
 10176  1EB4                     ___ftpack:	
 10177                           
 10178                           ;incstack = 0
 10179                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
 10180  1EB4  1283               	bcf	3,5	;RP0=0, select bank0
 10181  1EB5  1303               	bcf	3,6	;RP1=0, select bank0
 10182  1EB6  0823               	movf	___ftpack@exp,w
 10183  1EB7  1903               	btfsc	3,2
 10184  1EB8  2EBE               	goto	l3416
 10185  1EB9  0822               	movf	___ftpack@arg+2,w
 10186  1EBA  0421               	iorwf	___ftpack@arg+1,w
 10187  1EBB  0420               	iorwf	___ftpack@arg,w
 10188  1EBC  1D03               	skipz
 10189  1EBD  2ED1               	goto	l3422
 10190  1EBE                     l3416:	
 10191  1EBE  3000               	movlw	0
 10192  1EBF  00A0               	movwf	?___ftpack
 10193  1EC0  3000               	movlw	0
 10194  1EC1  00A1               	movwf	?___ftpack+1
 10195  1EC2  3000               	movlw	0
 10196  1EC3  00A2               	movwf	?___ftpack+2
 10197  1EC4  0008               	return
 10198  1EC5                     l3420:	
 10199  1EC5  3001               	movlw	1
 10200  1EC6  00A5               	movwf	??___ftpack
 10201  1EC7  0825               	movf	??___ftpack,w
 10202  1EC8  07A3               	addwf	___ftpack@exp,f
 10203  1EC9  3001               	movlw	1
 10204  1ECA                     u3855:	
 10205  1ECA  1003               	clrc
 10206  1ECB  0CA2               	rrf	___ftpack@arg+2,f
 10207  1ECC  0CA1               	rrf	___ftpack@arg+1,f
 10208  1ECD  0CA0               	rrf	___ftpack@arg,f
 10209  1ECE  3EFF               	addlw	-1
 10210  1ECF  1D03               	skipz
 10211  1ED0  2ECA               	goto	u3855
 10212  1ED1                     l3422:	
 10213  1ED1  30FE               	movlw	254
 10214  1ED2  0522               	andwf	___ftpack@arg+2,w
 10215  1ED3  1903               	btfsc	3,2
 10216  1ED4  2EEC               	goto	l618
 10217  1ED5  2EC5               	goto	l3420
 10218  1ED6                     l3424:	
 10219  1ED6  3001               	movlw	1
 10220  1ED7  00A5               	movwf	??___ftpack
 10221  1ED8  0825               	movf	??___ftpack,w
 10222  1ED9  07A3               	addwf	___ftpack@exp,f
 10223  1EDA  3001               	movlw	1
 10224  1EDB  07A0               	addwf	___ftpack@arg,f
 10225  1EDC  3000               	movlw	0
 10226  1EDD  1803               	skipnc
 10227  1EDE  3001               	movlw	1
 10228  1EDF  07A1               	addwf	___ftpack@arg+1,f
 10229  1EE0  3000               	movlw	0
 10230  1EE1  1803               	skipnc
 10231  1EE2  3001               	movlw	1
 10232  1EE3  07A2               	addwf	___ftpack@arg+2,f
 10233  1EE4  3001               	movlw	1
 10234  1EE5                     u3875:	
 10235  1EE5  1003               	clrc
 10236  1EE6  0CA2               	rrf	___ftpack@arg+2,f
 10237  1EE7  0CA1               	rrf	___ftpack@arg+1,f
 10238  1EE8  0CA0               	rrf	___ftpack@arg,f
 10239  1EE9  3EFF               	addlw	-1
 10240  1EEA  1D03               	skipz
 10241  1EEB  2EE5               	goto	u3875
 10242  1EEC                     l618:	
 10243  1EEC  30FF               	movlw	255
 10244  1EED  0522               	andwf	___ftpack@arg+2,w
 10245  1EEE  1903               	btfsc	3,2
 10246  1EEF  2EFF               	goto	l3432
 10247  1EF0  2ED6               	goto	l3424
 10248  1EF1                     l3434:	
 10249  1EF1  3002               	movlw	2
 10250  1EF2  0223               	subwf	___ftpack@exp,w
 10251  1EF3  1C03               	btfss	3,0
 10252  1EF4  2F01               	goto	l625
 10253  1EF5  3001               	movlw	1
 10254  1EF6  02A3               	subwf	___ftpack@exp,f
 10255  1EF7  3001               	movlw	1
 10256  1EF8                     u3895:	
 10257  1EF8  1003               	clrc
 10258  1EF9  0DA0               	rlf	___ftpack@arg,f
 10259  1EFA  0DA1               	rlf	___ftpack@arg+1,f
 10260  1EFB  0DA2               	rlf	___ftpack@arg+2,f
 10261  1EFC  3EFF               	addlw	-1
 10262  1EFD  1D03               	skipz
 10263  1EFE  2EF8               	goto	u3895
 10264  1EFF                     l3432:	
 10265  1EFF  1FA1               	btfss	___ftpack@arg+1,7
 10266  1F00  2EF1               	goto	l3434
 10267  1F01                     l625:	
 10268  1F01  1823               	btfsc	___ftpack@exp,0
 10269  1F02  2F09               	goto	l626
 10270  1F03  30FF               	movlw	255
 10271  1F04  05A0               	andwf	___ftpack@arg,f
 10272  1F05  307F               	movlw	127
 10273  1F06  05A1               	andwf	___ftpack@arg+1,f
 10274  1F07  30FF               	movlw	255
 10275  1F08  05A2               	andwf	___ftpack@arg+2,f
 10276  1F09                     l626:	
 10277  1F09  1003               	clrc
 10278  1F0A  0CA3               	rrf	___ftpack@exp,f
 10279  1F0B  0823               	movf	___ftpack@exp,w
 10280  1F0C  00A5               	movwf	??___ftpack
 10281  1F0D  01A6               	clrf	??___ftpack+1
 10282  1F0E  01A7               	clrf	??___ftpack+2
 10283  1F0F  3010               	movlw	16
 10284  1F10                     u3935:	
 10285  1F10  1003               	clrc
 10286  1F11  0DA5               	rlf	??___ftpack,f
 10287  1F12  0DA6               	rlf	??___ftpack+1,f
 10288  1F13  0DA7               	rlf	??___ftpack+2,f
 10289  1F14  3EFF               	addlw	-1
 10290  1F15  1D03               	skipz
 10291  1F16  2F10               	goto	u3935
 10292  1F17  0825               	movf	??___ftpack,w
 10293  1F18  04A0               	iorwf	___ftpack@arg,f
 10294  1F19  0826               	movf	??___ftpack+1,w
 10295  1F1A  04A1               	iorwf	___ftpack@arg+1,f
 10296  1F1B  0827               	movf	??___ftpack+2,w
 10297  1F1C  04A2               	iorwf	___ftpack@arg+2,f
 10298  1F1D  0824               	movf	___ftpack@sign,w
 10299  1F1E  1903               	btfsc	3,2
 10300  1F1F  0008               	return
 10301  1F20  17A2               	bsf	___ftpack@arg+2,7
 10302  1F21  0008               	return
 10303  1F22                     __end_of___ftpack:	
 10304                           
 10305                           	psect	text42
 10306  125B                     __ptext42:	
 10307 ;; *************** function _isr *****************
 10308 ;; Defined at:
 10309 ;;		line 80 in file "../../../src/LC-meter.c"
 10310 ;; Parameters:    Size  Location     Type
 10311 ;;		None
 10312 ;; Auto vars:     Size  Location     Type
 10313 ;;		None
 10314 ;; Return value:  Size  Location     Type
 10315 ;;                  2  125[None  ] int 
 10316 ;; Registers used:
 10317 ;;		wreg, fsr0l, fsr0h, status,2, status,0
 10318 ;; Tracked objects:
 10319 ;;		On entry : 0/0
 10320 ;;		On exit  : 0/0
 10321 ;;		Unchanged: 0/0
 10322 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10323 ;;      Params:         0       0       0       0       0
 10324 ;;      Locals:         0       0       0       0       0
 10325 ;;      Temps:          5       0       0       0       0
 10326 ;;      Totals:         5       0       0       0       0
 10327 ;;Total ram usage:        5 bytes
 10328 ;; Hardware stack levels used:    1
 10329 ;; This function calls:
 10330 ;;		Nothing
 10331 ;; This function is called by:
 10332 ;;		Interrupt level 1
 10333 ;; This function uses a non-reentrant model
 10334 ;;
 10335                           
 10336                           
 10337                           ;psect for function _isr
 10338  125B                     _isr:	
 10339                           
 10340                           ;LC-meter.c: 82: if(TMR2IF) {
 10341  125B  1C8C               	btfss	12,1	;volatile
 10342  125C  2AC7               	goto	i1l3222
 10343                           
 10344                           ;LC-meter.c: 84: bres += 256;
 10345  125D  3000               	movlw	0
 10346  125E  1683               	bsf	3,5	;RP0=1, select bank3
 10347  125F  1703               	bsf	3,6	;RP1=1, select bank3
 10348  1260  07E1               	addwf	_bres^(0+384),f	;volatile
 10349  1261  1803               	skipnc
 10350  1262  0AE2               	incf	(_bres+1)^(0+384),f	;volatile
 10351  1263  3001               	movlw	1
 10352  1264  07E2               	addwf	(_bres+1)^(0+384),f	;volatile
 10353                           
 10354                           ;LC-meter.c: 86: if(bres >= 5000) {
 10355  1265  3013               	movlw	19
 10356  1266  0262               	subwf	(_bres+1)^(0+384),w	;volatile
 10357  1267  3088               	movlw	136
 10358  1268  1903               	skipnz
 10359  1269  0261               	subwf	_bres^(0+384),w	;volatile
 10360  126A  1C03               	skipc
 10361  126B  2AC4               	goto	i1l3220
 10362                           
 10363                           ;LC-meter.c: 87: bres -= 5000;
 10364  126C  3088               	movlw	136
 10365  126D  02E1               	subwf	_bres^(0+384),f	;volatile
 10366  126E  3013               	movlw	19
 10367  126F  1C03               	skipc
 10368  1270  03E2               	decf	(_bres+1)^(0+384),f	;volatile
 10369  1271  02E2               	subwf	(_bres+1)^(0+384),f	;volatile
 10370                           
 10371                           ;LC-meter.c: 88: msecpart++;
 10372  1272  3001               	movlw	1
 10373  1273  07E3               	addwf	_msecpart^(0+384),f	;volatile
 10374  1274  1803               	skipnc
 10375  1275  0AE4               	incf	(_msecpart+1)^(0+384),f	;volatile
 10376  1276  3000               	movlw	0
 10377  1277  07E4               	addwf	(_msecpart+1)^(0+384),f	;volatile
 10378                           
 10379                           ;LC-meter.c: 89: msecs++;
 10380  1278  3001               	movlw	1
 10381  1279  07B0               	addwf	_msecs^(0+384),f	;volatile
 10382  127A  3000               	movlw	0
 10383  127B  1803               	skipnc
 10384  127C  3001               	movlw	1
 10385  127D  07B1               	addwf	(_msecs+1)^(0+384),f	;volatile
 10386  127E  3000               	movlw	0
 10387  127F  1803               	skipnc
 10388  1280  3001               	movlw	1
 10389  1281  07B2               	addwf	(_msecs+2)^(0+384),f	;volatile
 10390  1282  3000               	movlw	0
 10391  1283  1803               	skipnc
 10392  1284  3001               	movlw	1
 10393  1285  07B3               	addwf	(_msecs+3)^(0+384),f	;volatile
 10394                           
 10395                           ;LC-meter.c: 91: RC3 = (((blink > 200)) == 0);
 10396  1286  3000               	movlw	0
 10397  1287  0247               	subwf	(_blink+1)^(0+384),w
 10398  1288  30C9               	movlw	201
 10399  1289  1903               	skipnz
 10400  128A  0246               	subwf	_blink^(0+384),w
 10401  128B  1803               	btfsc	3,0
 10402  128C  2A91               	goto	u363_20
 10403  128D  1283               	bcf	3,5	;RP0=0, select bank0
 10404  128E  1303               	bcf	3,6	;RP1=0, select bank0
 10405  128F  1587               	bsf	7,3	;volatile
 10406  1290  2A94               	goto	u364_24
 10407  1291                     u363_20:	
 10408  1291  1283               	bcf	3,5	;RP0=0, select bank0
 10409  1292  1303               	bcf	3,6	;RP1=0, select bank0
 10410  1293  1187               	bcf	7,3	;volatile
 10411  1294                     u364_24:	
 10412                           
 10413                           ;LC-meter.c: 92: if(blink >= 400)
 10414  1294  3001               	movlw	1
 10415  1295  1683               	bsf	3,5	;RP0=1, select bank3
 10416  1296  1703               	bsf	3,6	;RP1=1, select bank3
 10417  1297  0247               	subwf	(_blink+1)^(0+384),w
 10418  1298  3090               	movlw	144
 10419  1299  1903               	skipnz
 10420  129A  0246               	subwf	_blink^(0+384),w
 10421  129B  1C03               	skipc
 10422  129C  2AA3               	goto	i1l128
 10423                           
 10424                           ;LC-meter.c: 93: blink -= 400;
 10425  129D  3090               	movlw	144
 10426  129E  02C6               	subwf	_blink^(0+384),f
 10427  129F  3001               	movlw	1
 10428  12A0  1C03               	skipc
 10429  12A1  03C7               	decf	(_blink+1)^(0+384),f
 10430  12A2  02C7               	subwf	(_blink+1)^(0+384),f
 10431  12A3                     i1l128:	
 10432                           
 10433                           ;LC-meter.c: 94: ++blink;
 10434  12A3  3001               	movlw	1
 10435  12A4  07C6               	addwf	_blink^(0+384),f
 10436  12A5  1803               	skipnc
 10437  12A6  0AC7               	incf	(_blink+1)^(0+384),f
 10438  12A7  3000               	movlw	0
 10439  12A8  07C7               	addwf	(_blink+1)^(0+384),f
 10440                           
 10441                           ;LC-meter.c: 97: if(msecpart >= 1000) {
 10442  12A9  3003               	movlw	3
 10443  12AA  0264               	subwf	(_msecpart+1)^(0+384),w	;volatile
 10444  12AB  30E8               	movlw	232
 10445  12AC  1903               	skipnz
 10446  12AD  0263               	subwf	_msecpart^(0+384),w	;volatile
 10447  12AE  1C03               	skipc
 10448  12AF  2AC4               	goto	i1l3220
 10449                           
 10450                           ;LC-meter.c: 99: seconds++;
 10451  12B0  3001               	movlw	1
 10452  12B1  07B4               	addwf	_seconds^(0+384),f	;volatile
 10453  12B2  3000               	movlw	0
 10454  12B3  1803               	skipnc
 10455  12B4  3001               	movlw	1
 10456  12B5  07B5               	addwf	(_seconds+1)^(0+384),f	;volatile
 10457  12B6  3000               	movlw	0
 10458  12B7  1803               	skipnc
 10459  12B8  3001               	movlw	1
 10460  12B9  07B6               	addwf	(_seconds+2)^(0+384),f	;volatile
 10461  12BA  3000               	movlw	0
 10462  12BB  1803               	skipnc
 10463  12BC  3001               	movlw	1
 10464  12BD  07B7               	addwf	(_seconds+3)^(0+384),f	;volatile
 10465                           
 10466                           ;LC-meter.c: 100: msecpart -= 1000;
 10467  12BE  30E8               	movlw	232
 10468  12BF  02E3               	subwf	_msecpart^(0+384),f	;volatile
 10469  12C0  3003               	movlw	3
 10470  12C1  1C03               	skipc
 10471  12C2  03E4               	decf	(_msecpart+1)^(0+384),f	;volatile
 10472  12C3  02E4               	subwf	(_msecpart+1)^(0+384),f	;volatile
 10473  12C4                     i1l3220:	
 10474                           
 10475                           ;LC-meter.c: 101: }
 10476                           ;LC-meter.c: 102: }
 10477                           ;LC-meter.c: 104: TMR2IF = 0;
 10478  12C4  1283               	bcf	3,5	;RP0=0, select bank0
 10479  12C5  1303               	bcf	3,6	;RP1=0, select bank0
 10480  12C6  108C               	bcf	12,1	;volatile
 10481  12C7                     i1l3222:	
 10482                           
 10483                           ;LC-meter.c: 105: }
 10484                           ;LC-meter.c: 107: if(RCIF) { rxfifo[rxiptr] = RCREG; ser_tmp = (rxiptr + 1) & (16 - 1); 
      +                          if(ser_tmp != rxoptr) rxiptr = ser_tmp; }; if(TXIF && TXIE) { TXREG = txfifo[txoptr]; ++
      +                          txoptr; txoptr &= (16 - 1); if(txoptr == txiptr) { TXIE = 0; }; TXIF = 0; };
 10485  12C7  1E8C               	btfss	12,5	;volatile
 10486  12C8  2AE1               	goto	i1l3232
 10487  12C9  081A               	movf	26,w	;volatile
 10488  12CA  00F0               	movwf	??_isr
 10489  12CB  0875               	movf	_rxiptr,w
 10490  12CC  3E90               	addlw	(low (_rxfifo| (0+256)))& (0+255)
 10491  12CD  0084               	movwf	4
 10492  12CE  0870               	movf	??_isr,w
 10493  12CF  1783               	bsf	3,7	;select IRP bank3
 10494  12D0  0080               	movwf	0
 10495  12D1  0875               	movf	_rxiptr,w	;volatile
 10496  12D2  3E01               	addlw	1
 10497  12D3  390F               	andlw	15
 10498  12D4  00F0               	movwf	??_isr
 10499  12D5  0870               	movf	??_isr,w
 10500  12D6  1683               	bsf	3,5	;RP0=1, select bank1
 10501  12D7  1303               	bcf	3,6	;RP1=0, select bank1
 10502  12D8  00E2               	movwf	_ser_tmp^(0+128)
 10503  12D9  0862               	movf	_ser_tmp^(0+128),w
 10504  12DA  0676               	xorwf	_rxoptr,w	;volatile
 10505  12DB  1903               	skipnz
 10506  12DC  2AE1               	goto	i1l3232
 10507  12DD  0862               	movf	_ser_tmp^(0+128),w
 10508  12DE  00F0               	movwf	??_isr
 10509  12DF  0870               	movf	??_isr,w
 10510  12E0  00F5               	movwf	_rxiptr	;volatile
 10511  12E1                     i1l3232:	
 10512  12E1  1283               	bcf	3,5	;RP0=0, select bank0
 10513  12E2  1E0C               	btfss	12,4	;volatile
 10514  12E3  2B01               	goto	i1l134
 10515  12E4  1683               	bsf	3,5	;RP0=1, select bank1
 10516  12E5  1303               	bcf	3,6	;RP1=0, select bank1
 10517  12E6  1E0C               	btfss	12,4	;volatile
 10518  12E7  2B01               	goto	i1l134
 10519  12E8  0878               	movf	_txoptr,w
 10520  12E9  3EA0               	addlw	(low (_txfifo| (0+256)))& (0+255)
 10521  12EA  0084               	movwf	4
 10522  12EB  1783               	bsf	3,7	;select IRP bank3
 10523  12EC  0800               	movf	0,w
 10524  12ED  1283               	bcf	3,5	;RP0=0, select bank0
 10525  12EE  1303               	bcf	3,6	;RP1=0, select bank0
 10526  12EF  0099               	movwf	25	;volatile
 10527  12F0  3001               	movlw	1
 10528  12F1  00F0               	movwf	??_isr
 10529  12F2  0870               	movf	??_isr,w
 10530  12F3  07F8               	addwf	_txoptr,f	;volatile
 10531  12F4  300F               	movlw	15
 10532  12F5  00F0               	movwf	??_isr
 10533  12F6  0870               	movf	??_isr,w
 10534  12F7  05F8               	andwf	_txoptr,f	;volatile
 10535  12F8  0878               	movf	_txoptr,w	;volatile
 10536  12F9  0677               	xorwf	_txiptr,w	;volatile
 10537  12FA  1D03               	skipz
 10538  12FB  2AFF               	goto	i1l133
 10539  12FC  1683               	bsf	3,5	;RP0=1, select bank1
 10540  12FD  1303               	bcf	3,6	;RP1=0, select bank1
 10541  12FE  120C               	bcf	12,4	;volatile
 10542  12FF                     i1l133:	
 10543  12FF  1283               	bcf	3,5	;RP0=0, select bank0
 10544  1300  120C               	bcf	12,4	;volatile
 10545  1301                     i1l134:	
 10546  1301  0874               	movf	??_isr+4,w
 10547  1302  1283               	bcf	3,5	;RP0=0, select bank0
 10548  1303  00FF               	movwf	127
 10549  1304  0873               	movf	??_isr+3,w
 10550  1305  008A               	movwf	10
 10551  1306  0872               	movf	??_isr+2,w
 10552  1307  0084               	movwf	4
 10553  1308  0E71               	swapf	(??_isr+1)^(0+-128),w
 10554  1309  0083               	movwf	3
 10555  130A  0EFE               	swapf	126,f
 10556  130B  0E7E               	swapf	126,w
 10557  130C  0009               	retfie
 10558  130D                     __end_of_isr:	
 10559  0006                     
 10560                           	psect	intentry
 10561  0004                     __pintentry:	
 10562                           ;incstack = 0
 10563                           ; Regs used in _isr: [wreg-fsr0h+status,2+status,0]
 10564                           
 10565  0004                     interrupt_function:	
 10566  007E                     saved_w	set	btemp
 10567  0004  00FE               	movwf	btemp
 10568  0005  0E03               	swapf	3,w
 10569  0006  00F1               	movwf	??_isr+1
 10570  0007  0804               	movf	4,w
 10571  0008  00F2               	movwf	??_isr+2
 10572  0009  080A               	movf	10,w
 10573  000A  00F3               	movwf	??_isr+3
 10574  000B  1283               	bcf	3,5	;RP0=0, select bank0
 10575  000C  1303               	bcf	3,6	;RP1=0, select bank0
 10576  000D  087F               	movf	btemp+1,w
 10577  000E  00F4               	movwf	??_isr+4
 10578  000F  160A  118A  2A5B   	ljmp	_isr
 10579                           
 10580                           	psect	functab
 10581  0100                     __pfunctab:	
 10582  0100                     __fptable:	
 10583  0100                     fptable:	
 10584  0100  00FF               	movwf	(btemp+1)& (0+127)
 10585  0101  3001               	movlw	high fptable
 10586  0102  008A               	movwf	10
 10587  0103  087F               	movf	(btemp+1)& (0+127),w
 10588  0104  0782               	addwf	2,f
 10589  0105                     fpbase:	
 10590  0105  2905               	goto	fpbase	; Call via a null pointer and you will get stuck here.
 10591  0106                     fp__output_putch:	
 10592  0106                     entry__output_putch:	
 10593  0106  160A  158A  2B64   	ljmp	_output_putch
 10594  0109                     fp__ser_putch:	
 10595  0109                     entry__ser_putch:	
 10596  0109  160A  118A  2800   	ljmp	_ser_putch
 10597  010C                     fp__format_putchar:	
 10598  010C  120A  118A  2FFE   	ljmp	_format_putchar
 10599  010F                     __end_of__fptable:	
 10600  007E                     btemp	set	126	;btemp
 10601  007E                     wtemp	set	126
 10602  007E                     wtemp0	set	126
 10603  0080                     wtemp1	set	128
 10604  0082                     wtemp2	set	130
 10605  0084                     wtemp3	set	132
 10606  0086                     wtemp4	set	134
 10607  0088                     wtemp5	set	136
 10608  007F                     wtemp6	set	127
 10609  007E                     ttemp	set	126
 10610  007E                     ttemp0	set	126
 10611  0081                     ttemp1	set	129
 10612  0084                     ttemp2	set	132
 10613  0087                     ttemp3	set	135
 10614  007F                     ttemp4	set	127
 10615  007E                     ltemp	set	126
 10616  007E                     ltemp0	set	126
 10617  0082                     ltemp1	set	130
 10618  0086                     ltemp2	set	134
 10619  0080                     ltemp3	set	128


Data Sizes:
    Strings     42
    Constant    57
    Data        2
    BSS         67
    Persistent  7
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      5      10
    BANK0            80     80      80
    BANK1            80     66      67
    BANK3            96     16      86
    BANK2            96     15      15

Pointer List with Targets:

    eval_poly@d	PTR const  size(1) Largest target is 30
		 -> exp@coeff(CODE[30]), log@coeff(CODE[27]), 

    frexp@eptr	PTR int  size(1) Largest target is 2
		 -> log@exponent(BANK0[2]), floor@expon(BANK1[2]), 

    ser_puts@s	PTR const unsigned char  size(1) Largest target is 8
		 -> STR_11(CODE[3]), STR_10(CODE[5]), STR_9(CODE[3]), STR_8(CODE[8]), 
		 -> STR_7(CODE[6]), STR_6(CODE[6]), STR_5(CODE[6]), STR_4(CODE[5]), 
		 -> STR_3(CODE[3]), STR_2(CODE[3]), STR_1(CODE[6]), 

    putchar_ptr	PTR FTN(unsigned char ,)void  size(1) Largest target is 1
		 -> format_putchar(), ser_putch(), output_putch(), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _format_xint32->_format_number
    _format_number->___lwdiv
    _ldexp->_eval_poly
    ___ftneg->___ftmul
    _floor->___altoft
    ___fttol->_log10
    ___ftsub->___ftadd
    ___ftdiv->___ftpack
    ___lltoft->___ftpack
    _log10->_log
    _log->_eval_poly
    _eval_poly->___ftadd
    ___ftmul->___ftdiv
    ___ftadd->___ftneg
    ___awtoft->___ftpack
    _calibrate->_delay10ms
    _ser_puts->_ser_putch
    _delay10ms->___wmul
    ___lwtoft->_measure_freq

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_measure_capacitance
    _measure_inductance->___fttol
    _measure_capacitance->_format_double
    _format_double->_pow
    _pow->_exp
    _exp->_floor
    _floor->___altoft
    ___altoft->___fttol

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    _measure_capacitance->_format_double

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    _main->_measure_capacitance

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0  261912
                                             65 BANK1      1     1      0
                          _calibrate
                          _delay10ms
                          _indicator
                _measure_capacitance
                 _measure_inductance
                           _ser_init
                           _ser_puts
                        _timer2_init
 ---------------------------------------------------------------------------------
 (1) _timer2_init                                          4     4      0     223
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (1) _ser_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _measure_inductance                                  43    43      0   26616
                                             78 BANK0      1     1      0
                                             14 BANK1     33    33      0
                            ___ftadd
                            ___ftdiv
                             ___ftge
                            ___ftmul
                            ___ftneg
                            ___fttol
                           ___lwtoft
                       _measure_freq
                      _print_reading
                         _print_unit
 ---------------------------------------------------------------------------------
 (1) _measure_capacitance                                 16    16      0  226647
                                             64 BANK1      1     1      0
                                              0 BANK2     15    15      0
                            ___ftadd
                            ___ftdiv
                             ___ftge
                            ___ftmul
                            ___ftneg
                            ___fttol
                           ___lwtoft
                      _format_double
                      _format_xint32
                       _measure_freq
                      _print_reading
                         _print_unit
                          _ser_putch
                           _ser_puts
 ---------------------------------------------------------------------------------
 (2) _print_unit                                           1     1      0       0
 ---------------------------------------------------------------------------------
 (2) _print_reading                                        2     0      2     154
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _format_xint32                                       10     6      4    7217
                                             52 BANK0     10     6      4
                      _format_number
                     _format_putchar *
                       _output_putch *
                          _ser_putch *
 ---------------------------------------------------------------------------------
 (3) _format_number                                       44    40      4    4413
                                              8 BANK0     44    40      4
                            ___lwdiv
                            ___lwmod
                     _format_putchar *
                       _output_putch *
                          _ser_putch *
 ---------------------------------------------------------------------------------
 (4) ___lwmod                                              6     2      4     386
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (4) ___lwdiv                                              8     4      4     395
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (2) _format_double                                       20    17      3  191048
                                             60 BANK1      4     1      3
                                              0 BANK3     16    16      0
                           ___awtoft
                            ___ftdiv
                             ___ftge
                            ___ftmul
                            ___ftsub
                            ___fttol
                              _floor
                     _format_putchar *
                              _log10
                       _output_putch *
                                _pow
                          _ser_putch *
 ---------------------------------------------------------------------------------
 (3) _pow                                                 18    12      6  107804
                                             42 BANK1     18    12      6
                             ___ftge
                            ___ftmul
                            ___ftneg
                            ___fttol
                           ___lltoft
                                _exp
                                _log
 ---------------------------------------------------------------------------------
 (4) _exp                                                 13    10      3   58165
                                             29 BANK1     13    10      3
                           ___awtoft
                            ___ftdiv
                             ___ftge
                            ___ftmul
                            ___ftneg
                            ___ftsub
                            ___fttol
                          _eval_poly
                              _floor
                              _ldexp
                                _log (ARG)
 ---------------------------------------------------------------------------------
 (5) _ldexp                                               10     5      5    4355
                                             66 BANK0     10     5      5
                             ___ftge
                            ___ftneg
                          _eval_poly (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftneg                                              3     0      3     681
                                             40 BANK0      3     0      3
                            ___ftmul (ARG)
 ---------------------------------------------------------------------------------
 (5) _floor                                                9     6      3   13597
                                             20 BANK1      9     6      3
                           ___altoft
                            ___ftadd
                            ___ftdiv (ARG)
                             ___ftge
                            ___fttol
                              _frexp
 ---------------------------------------------------------------------------------
 (2) ___fttol                                             14    10      4    1064
                                              0 BANK1     14    10      4
                            ___ftdiv (ARG)
                              _log10 (ARG)
 ---------------------------------------------------------------------------------
 (6) ___altoft                                             8     4      4    2925
                                             78 BANK0      2     2      0
                                             14 BANK1      6     2      4
                           ___ftpack
                            ___fttol (ARG)
 ---------------------------------------------------------------------------------
 (5) ___ftsub                                              6     0      6    5813
                                             56 BANK0      6     0      6
                           ___awtoft (ARG)
                            ___ftadd
                            ___ftmul (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftdiv                                             16    10      6    4604
                                              8 BANK0     16    10      6
                           ___ftpack
 ---------------------------------------------------------------------------------
 (4) ___lltoft                                             6     2      4    2823
                                              8 BANK0      6     2      4
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) _output_putch                                         2     1      1     972
                                              0 BANK0      2     1      1
                          _ser_putch
 ---------------------------------------------------------------------------------
 (3) _log10                                                6     3      3   41341
                                             72 BANK0      6     3      3
                            ___ftmul
                                _log
 ---------------------------------------------------------------------------------
 (4) _log                                                  6     3      3   33678
                                             66 BANK0      6     3      3
                           ___awtoft
                            ___ftadd
                             ___ftge
                            ___ftmul
                          _eval_poly
                              _frexp
 ---------------------------------------------------------------------------------
 (5) _frexp                                                6     2      4     630
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (5) _eval_poly                                           10     4      6   13659
                                             56 BANK0     10     4      6
                             ___bmul
                            ___ftadd
                            ___ftmul
 ---------------------------------------------------------------------------------
 (2) ___ftmul                                             16    10      6    7444
                                             24 BANK0     16    10      6
                           ___awtoft (ARG)
                            ___ftdiv (ARG)
                           ___ftpack
                              _frexp (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftadd                                             13     7      6    5255
                                             43 BANK0     13     7      6
                           ___awtoft (ARG)
                             ___bmul (ARG)
                            ___ftmul (ARG)
                            ___ftneg (ARG)
                           ___ftpack
                              _frexp (ARG)
 ---------------------------------------------------------------------------------
 (6) ___bmul                                               4     3      1     244
                                              0 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (2) ___ftge                                              12     6      6    3124
                                              0 BANK0     12     6      6
 ---------------------------------------------------------------------------------
 (5) ___awtoft                                             6     3      3    3162
                                              8 BANK0      6     3      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) _format_putchar                                       1     0      1     432
                                              0 BANK0      1     0      1
 ---------------------------------------------------------------------------------
 (1) _indicator                                            1     1      0       0
 ---------------------------------------------------------------------------------
 (1) _calibrate                                            1     1      0    5865
                           ___lwtoft
                          _delay10ms
                       _measure_freq
                           _ser_puts
 ---------------------------------------------------------------------------------
 (1) _ser_puts                                             2     2      0    1304
                                              2 BANK0      2     2      0
                          _ser_putch
 ---------------------------------------------------------------------------------
 (2) _ser_putch                                            2     1      1     876
                                              0 BANK0      2     1      1
 ---------------------------------------------------------------------------------
 (2) _measure_freq                                        11     9      2     167
                                              0 BANK0     11     9      2
 ---------------------------------------------------------------------------------
 (1) _delay10ms                                           11     9      2    1257
                                              6 BANK0     11     9      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     382
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (2) ___lwtoft                                             4     1      3    3137
                                             11 BANK0      4     1      3
                           ___ftpack
                       _measure_freq (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftpack                                             8     3      5    2644
                                              0 BANK0      8     3      5
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (8) _isr                                                  5     5      0       0
                                              0 COMMON     5     5      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _calibrate
     ___lwtoft
       ___ftpack
       _measure_freq (ARG)
     _delay10ms
       ___wmul
     _measure_freq
     _ser_puts
       _ser_putch
   _delay10ms
     ___wmul
   _indicator
   _measure_capacitance
     ___ftadd
       ___awtoft (ARG)
         ___ftpack
       ___bmul (ARG)
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___ftpack
         ___ftpack (ARG)
         _frexp (ARG)
       ___ftneg (ARG)
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftdiv (ARG)
             ___ftpack
           ___ftpack (ARG)
           _frexp (ARG)
       ___ftpack (ARG)
       _frexp (ARG)
     ___ftdiv
       ___ftpack
     ___ftge
     ___ftmul
       ___awtoft (ARG)
         ___ftpack
       ___ftdiv (ARG)
         ___ftpack
       ___ftpack (ARG)
       _frexp (ARG)
     ___ftneg
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___ftpack
         ___ftpack (ARG)
         _frexp (ARG)
     ___fttol
       ___ftdiv (ARG)
         ___ftpack
       _log10 (ARG)
         ___ftmul
           ___awtoft (ARG)
             ___ftpack
           ___ftdiv (ARG)
             ___ftpack
           ___ftpack (ARG)
           _frexp (ARG)
         _log
           ___awtoft
             ___ftpack
           ___ftadd
             ___awtoft (ARG)
               ___ftpack
             ___bmul (ARG)
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___ftpack
               ___ftpack (ARG)
               _frexp (ARG)
             ___ftneg (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftdiv (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 _frexp (ARG)
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftge
           ___ftmul
             ___awtoft (ARG)
               ___ftpack
             ___ftdiv (ARG)
               ___ftpack
             ___ftpack (ARG)
             _frexp (ARG)
           _eval_poly
             ___bmul
             ___ftadd
               ___awtoft (ARG)
                 ___ftpack
               ___bmul (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftdiv (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftneg (ARG)
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftdiv (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   _frexp (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
             ___ftmul
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___ftpack
               ___ftpack (ARG)
               _frexp (ARG)
           _frexp
     ___lwtoft
       ___ftpack
       _measure_freq (ARG)
     _format_double
       ___awtoft
         ___ftpack
       ___ftdiv
         ___ftpack
       ___ftge
       ___ftmul
         ___awtoft (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___ftpack
         ___ftpack (ARG)
         _frexp (ARG)
       ___ftsub
         ___awtoft (ARG)
           ___ftpack
         ___ftadd (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___bmul (ARG)
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftdiv (ARG)
               ___ftpack
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftneg (ARG)
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___ftpack
               ___ftpack (ARG)
               _frexp (ARG)
           ___ftpack (ARG)
           _frexp (ARG)
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftdiv (ARG)
             ___ftpack
           ___ftpack (ARG)
           _frexp (ARG)
       ___fttol
         ___ftdiv (ARG)
           ___ftpack
         _log10 (ARG)
           ___ftmul
             ___awtoft (ARG)
               ___ftpack
             ___ftdiv (ARG)
               ___ftpack
             ___ftpack (ARG)
             _frexp (ARG)
           _log
             ___awtoft
               ___ftpack
             ___ftadd
               ___awtoft (ARG)
                 ___ftpack
               ___bmul (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftdiv (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftneg (ARG)
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftdiv (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   _frexp (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
             ___ftge
             ___ftmul
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___ftpack
               ___ftpack (ARG)
               _frexp (ARG)
             _eval_poly
               ___bmul
               ___ftadd
                 ___awtoft (ARG)
                   ___ftpack
                 ___bmul (ARG)
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftdiv (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftneg (ARG)
                   ___ftmul (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftdiv (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                     _frexp (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftmul
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftdiv (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 _frexp (ARG)
             _frexp
       _floor
         ___altoft
           ___ftpack
           ___fttol (ARG)
             ___ftdiv (ARG)
               ___ftpack
             _log10 (ARG)
               ___ftmul
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftdiv (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 _frexp (ARG)
               _log
                 ___awtoft
                   ___ftpack
                 ___ftadd
                   ___awtoft (ARG)
                     ___ftpack
                   ___bmul (ARG)
                   ___ftmul (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftdiv (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                     _frexp (ARG)
                   ___ftneg (ARG)
                     ___ftmul (ARG)
                       ___awtoft (ARG)
                         ___ftpack
                       ___ftdiv (ARG)
                         ___ftpack
                       ___ftpack (ARG)
                       _frexp (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftge
                 ___ftmul
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftdiv (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   _frexp (ARG)
                 _eval_poly
                   ___bmul
                   ___ftadd
                     ___awtoft (ARG)
                       ___ftpack
                     ___bmul (ARG)
                     ___ftmul (ARG)
                       ___awtoft (ARG)
                         ___ftpack
                       ___ftdiv (ARG)
                         ___ftpack
                       ___ftpack (ARG)
                       _frexp (ARG)
                     ___ftneg (ARG)
                       ___ftmul (ARG)
                         ___awtoft (ARG)
                           ___ftpack
                         ___ftdiv (ARG)
                           ___ftpack
                         ___ftpack (ARG)
                         _frexp (ARG)
                     ___ftpack (ARG)
                     _frexp (ARG)
                   ___ftmul
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftdiv (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                     _frexp (ARG)
                 _frexp
         ___ftadd
           ___awtoft (ARG)
             ___ftpack
           ___bmul (ARG)
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftdiv (ARG)
               ___ftpack
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftneg (ARG)
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___ftpack
               ___ftpack (ARG)
               _frexp (ARG)
           ___ftpack (ARG)
           _frexp (ARG)
         ___ftdiv (ARG)
           ___ftpack
         ___ftge (ARG)
         ___fttol (ARG)
           ___ftdiv (ARG)
             ___ftpack
           _log10 (ARG)
             ___ftmul
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___ftpack
               ___ftpack (ARG)
               _frexp (ARG)
             _log
               ___awtoft
                 ___ftpack
               ___ftadd
                 ___awtoft (ARG)
                   ___ftpack
                 ___bmul (ARG)
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftdiv (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftneg (ARG)
                   ___ftmul (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftdiv (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                     _frexp (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftge
               ___ftmul
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftdiv (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 _frexp (ARG)
               _eval_poly
                 ___bmul
                 ___ftadd
                   ___awtoft (ARG)
                     ___ftpack
                   ___bmul (ARG)
                   ___ftmul (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftdiv (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                     _frexp (ARG)
                   ___ftneg (ARG)
                     ___ftmul (ARG)
                       ___awtoft (ARG)
                         ___ftpack
                       ___ftdiv (ARG)
                         ___ftpack
                       ___ftpack (ARG)
                       _frexp (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftmul
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftdiv (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   _frexp (ARG)
               _frexp
         _frexp (ARG)
       _format_putchar *
       _log10 *
         ___ftmul
           ___awtoft (ARG)
             ___ftpack
           ___ftdiv (ARG)
             ___ftpack
           ___ftpack (ARG)
           _frexp (ARG)
         _log
           ___awtoft
             ___ftpack
           ___ftadd
             ___awtoft (ARG)
               ___ftpack
             ___bmul (ARG)
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___ftpack
               ___ftpack (ARG)
               _frexp (ARG)
             ___ftneg (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftdiv (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 _frexp (ARG)
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftge
           ___ftmul
             ___awtoft (ARG)
               ___ftpack
             ___ftdiv (ARG)
               ___ftpack
             ___ftpack (ARG)
             _frexp (ARG)
           _eval_poly
             ___bmul
             ___ftadd
               ___awtoft (ARG)
                 ___ftpack
               ___bmul (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftdiv (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftneg (ARG)
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftdiv (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   _frexp (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
             ___ftmul
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___ftpack
               ___ftpack (ARG)
               _frexp (ARG)
           _frexp
       _output_putch *
         _ser_putch
       _pow *
         ___ftge
         ___ftmul
           ___awtoft (ARG)
             ___ftpack
           ___ftdiv (ARG)
             ___ftpack
           ___ftpack (ARG)
           _frexp (ARG)
         ___ftneg
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftdiv (ARG)
               ___ftpack
             ___ftpack (ARG)
             _frexp (ARG)
         ___fttol
           ___ftdiv (ARG)
             ___ftpack
           _log10 (ARG)
             ___ftmul
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___ftpack
               ___ftpack (ARG)
               _frexp (ARG)
             _log
               ___awtoft
                 ___ftpack
               ___ftadd
                 ___awtoft (ARG)
                   ___ftpack
                 ___bmul (ARG)
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftdiv (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftneg (ARG)
                   ___ftmul (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftdiv (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                     _frexp (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftge
               ___ftmul
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftdiv (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 _frexp (ARG)
               _eval_poly
                 ___bmul
                 ___ftadd
                   ___awtoft (ARG)
                     ___ftpack
                   ___bmul (ARG)
                   ___ftmul (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftdiv (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                     _frexp (ARG)
                   ___ftneg (ARG)
                     ___ftmul (ARG)
                       ___awtoft (ARG)
                         ___ftpack
                       ___ftdiv (ARG)
                         ___ftpack
                       ___ftpack (ARG)
                       _frexp (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftmul
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftdiv (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   _frexp (ARG)
               _frexp
         ___lltoft
           ___ftpack
         _exp
           ___awtoft
             ___ftpack
           ___ftdiv
             ___ftpack
           ___ftge
           ___ftmul
             ___awtoft (ARG)
               ___ftpack
             ___ftdiv (ARG)
               ___ftpack
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftneg
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___ftpack
               ___ftpack (ARG)
               _frexp (ARG)
           ___ftsub
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___bmul (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftdiv (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftneg (ARG)
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftdiv (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   _frexp (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___ftpack
               ___ftpack (ARG)
               _frexp (ARG)
           ___fttol
             ___ftdiv (ARG)
               ___ftpack
             _log10 (ARG)
               ___ftmul
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftdiv (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 _frexp (ARG)
               _log
                 ___awtoft
                   ___ftpack
                 ___ftadd
                   ___awtoft (ARG)
                     ___ftpack
                   ___bmul (ARG)
                   ___ftmul (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftdiv (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                     _frexp (ARG)
                   ___ftneg (ARG)
                     ___ftmul (ARG)
                       ___awtoft (ARG)
                         ___ftpack
                       ___ftdiv (ARG)
                         ___ftpack
                       ___ftpack (ARG)
                       _frexp (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftge
                 ___ftmul
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftdiv (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   _frexp (ARG)
                 _eval_poly
                   ___bmul
                   ___ftadd
                     ___awtoft (ARG)
                       ___ftpack
                     ___bmul (ARG)
                     ___ftmul (ARG)
                       ___awtoft (ARG)
                         ___ftpack
                       ___ftdiv (ARG)
                         ___ftpack
                       ___ftpack (ARG)
                       _frexp (ARG)
                     ___ftneg (ARG)
                       ___ftmul (ARG)
                         ___awtoft (ARG)
                           ___ftpack
                         ___ftdiv (ARG)
                           ___ftpack
                         ___ftpack (ARG)
                         _frexp (ARG)
                     ___ftpack (ARG)
                     _frexp (ARG)
                   ___ftmul
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftdiv (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                     _frexp (ARG)
                 _frexp
           _eval_poly
             ___bmul
             ___ftadd
               ___awtoft (ARG)
                 ___ftpack
               ___bmul (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftdiv (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftneg (ARG)
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftdiv (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   _frexp (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
             ___ftmul
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___ftpack
               ___ftpack (ARG)
               _frexp (ARG)
           _floor
             ___altoft
               ___ftpack
               ___fttol (ARG)
                 ___ftdiv (ARG)
                   ___ftpack
                 _log10 (ARG)
                   ___ftmul
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftdiv (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                     _frexp (ARG)
                   _log
                     ___awtoft
                       ___ftpack
                     ___ftadd
                       ___awtoft (ARG)
                         ___ftpack
                       ___bmul (ARG)
                       ___ftmul (ARG)
                         ___awtoft (ARG)
                           ___ftpack
                         ___ftdiv (ARG)
                           ___ftpack
                         ___ftpack (ARG)
                         _frexp (ARG)
                       ___ftneg (ARG)
                         ___ftmul (ARG)
                           ___awtoft (ARG)
                             ___ftpack
                           ___ftdiv (ARG)
                             ___ftpack
                           ___ftpack (ARG)
                           _frexp (ARG)
                       ___ftpack (ARG)
                       _frexp (ARG)
                     ___ftge
                     ___ftmul
                       ___awtoft (ARG)
                         ___ftpack
                       ___ftdiv (ARG)
                         ___ftpack
                       ___ftpack (ARG)
                       _frexp (ARG)
                     _eval_poly
                       ___bmul
                       ___ftadd
                         ___awtoft (ARG)
                           ___ftpack
                         ___bmul (ARG)
                         ___ftmul (ARG)
                           ___awtoft (ARG)
                             ___ftpack
                           ___ftdiv (ARG)
                             ___ftpack
                           ___ftpack (ARG)
                           _frexp (ARG)
                         ___ftneg (ARG)
                           ___ftmul (ARG)
                             ___awtoft (ARG)
                               ___ftpack
                             ___ftdiv (ARG)
                               ___ftpack
                             ___ftpack (ARG)
                             _frexp (ARG)
                         ___ftpack (ARG)
                         _frexp (ARG)
                       ___ftmul
                         ___awtoft (ARG)
                           ___ftpack
                         ___ftdiv (ARG)
                           ___ftpack
                         ___ftpack (ARG)
                         _frexp (ARG)
                     _frexp
             ___ftadd
               ___awtoft (ARG)
                 ___ftpack
               ___bmul (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftdiv (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftneg (ARG)
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftdiv (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   _frexp (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
             ___ftdiv (ARG)
               ___ftpack
             ___ftge (ARG)
             ___fttol (ARG)
               ___ftdiv (ARG)
                 ___ftpack
               _log10 (ARG)
                 ___ftmul
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftdiv (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   _frexp (ARG)
                 _log
                   ___awtoft
                     ___ftpack
                   ___ftadd
                     ___awtoft (ARG)
                       ___ftpack
                     ___bmul (ARG)
                     ___ftmul (ARG)
                       ___awtoft (ARG)
                         ___ftpack
                       ___ftdiv (ARG)
                         ___ftpack
                       ___ftpack (ARG)
                       _frexp (ARG)
                     ___ftneg (ARG)
                       ___ftmul (ARG)
                         ___awtoft (ARG)
                           ___ftpack
                         ___ftdiv (ARG)
                           ___ftpack
                         ___ftpack (ARG)
                         _frexp (ARG)
                     ___ftpack (ARG)
                     _frexp (ARG)
                   ___ftge
                   ___ftmul
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftdiv (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                     _frexp (ARG)
                   _eval_poly
                     ___bmul
                     ___ftadd
                       ___awtoft (ARG)
                         ___ftpack
                       ___bmul (ARG)
                       ___ftmul (ARG)
                         ___awtoft (ARG)
                           ___ftpack
                         ___ftdiv (ARG)
                           ___ftpack
                         ___ftpack (ARG)
                         _frexp (ARG)
                       ___ftneg (ARG)
                         ___ftmul (ARG)
                           ___awtoft (ARG)
                             ___ftpack
                           ___ftdiv (ARG)
                             ___ftpack
                           ___ftpack (ARG)
                           _frexp (ARG)
                       ___ftpack (ARG)
                       _frexp (ARG)
                     ___ftmul
                       ___awtoft (ARG)
                         ___ftpack
                       ___ftdiv (ARG)
                         ___ftpack
                       ___ftpack (ARG)
                       _frexp (ARG)
                   _frexp
             _frexp (ARG)
           _ldexp
             ___ftge
             ___ftneg
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftdiv (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 _frexp (ARG)
             _eval_poly (ARG)
               ___bmul
               ___ftadd
                 ___awtoft (ARG)
                   ___ftpack
                 ___bmul (ARG)
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftdiv (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftneg (ARG)
                   ___ftmul (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftdiv (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                     _frexp (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftmul
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftdiv (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 _frexp (ARG)
           _log (ARG)
             ___awtoft
               ___ftpack
             ___ftadd
               ___awtoft (ARG)
                 ___ftpack
               ___bmul (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftdiv (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftneg (ARG)
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftdiv (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   _frexp (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
             ___ftge
             ___ftmul
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___ftpack
               ___ftpack (ARG)
               _frexp (ARG)
             _eval_poly
               ___bmul
               ___ftadd
                 ___awtoft (ARG)
                   ___ftpack
                 ___bmul (ARG)
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftdiv (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftneg (ARG)
                   ___ftmul (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftdiv (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                     _frexp (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftmul
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftdiv (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 _frexp (ARG)
             _frexp
         _log
           ___awtoft
             ___ftpack
           ___ftadd
             ___awtoft (ARG)
               ___ftpack
             ___bmul (ARG)
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___ftpack
               ___ftpack (ARG)
               _frexp (ARG)
             ___ftneg (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftdiv (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 _frexp (ARG)
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftge
           ___ftmul
             ___awtoft (ARG)
               ___ftpack
             ___ftdiv (ARG)
               ___ftpack
             ___ftpack (ARG)
             _frexp (ARG)
           _eval_poly
             ___bmul
             ___ftadd
               ___awtoft (ARG)
                 ___ftpack
               ___bmul (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftdiv (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftneg (ARG)
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftdiv (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   _frexp (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
             ___ftmul
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___ftpack
               ___ftpack (ARG)
               _frexp (ARG)
           _frexp
       _ser_putch *
     _format_xint32
       _format_number
         ___lwdiv
         ___lwmod
         _format_putchar *
         _output_putch *
           _ser_putch
         _ser_putch *
       _format_putchar *
       _output_putch *
         _ser_putch
       _ser_putch *
     _measure_freq
     _print_reading
     _print_unit
     _ser_putch
     _ser_puts
       _ser_putch
   _measure_inductance
     ___ftadd
       ___awtoft (ARG)
         ___ftpack
       ___bmul (ARG)
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___ftpack
         ___ftpack (ARG)
         _frexp (ARG)
       ___ftneg (ARG)
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftdiv (ARG)
             ___ftpack
           ___ftpack (ARG)
           _frexp (ARG)
       ___ftpack (ARG)
       _frexp (ARG)
     ___ftdiv
       ___ftpack
     ___ftge
     ___ftmul
       ___awtoft (ARG)
         ___ftpack
       ___ftdiv (ARG)
         ___ftpack
       ___ftpack (ARG)
       _frexp (ARG)
     ___ftneg
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___ftpack
         ___ftpack (ARG)
         _frexp (ARG)
     ___fttol
       ___ftdiv (ARG)
         ___ftpack
       _log10 (ARG)
         ___ftmul
           ___awtoft (ARG)
             ___ftpack
           ___ftdiv (ARG)
             ___ftpack
           ___ftpack (ARG)
           _frexp (ARG)
         _log
           ___awtoft
             ___ftpack
           ___ftadd
             ___awtoft (ARG)
               ___ftpack
             ___bmul (ARG)
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___ftpack
               ___ftpack (ARG)
               _frexp (ARG)
             ___ftneg (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftdiv (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 _frexp (ARG)
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftge
           ___ftmul
             ___awtoft (ARG)
               ___ftpack
             ___ftdiv (ARG)
               ___ftpack
             ___ftpack (ARG)
             _frexp (ARG)
           _eval_poly
             ___bmul
             ___ftadd
               ___awtoft (ARG)
                 ___ftpack
               ___bmul (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftdiv (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftneg (ARG)
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftdiv (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   _frexp (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
             ___ftmul
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___ftpack
               ___ftpack (ARG)
               _frexp (ARG)
           _frexp
     ___lwtoft
       ___ftpack
       _measure_freq (ARG)
     _measure_freq
     _print_reading
     _print_unit
   _ser_init
   _ser_puts
     _ser_putch
   _timer2_init

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60     10      56       9       89.6%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      F       F      11       15.6%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50     42      43       7       83.8%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     50      50       5      100.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      5       A       1       71.4%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0     102      12        0.0%
ABS                  0      0     102       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V1.34 build -361300703 
Symbol Table                                                                                   Thu Aug 29 16:22:10 2019

                 ___altoft@exp 00B2                              pc 0002                 ___bmul@product 0022  
                ___altoft@sign 00B3                             _F1 01CB                             _F2 01C0  
                           _F3 01C3                             fsr 0004            ___wmul@multiplicand 0022  
                 ___ftadd@exp1 0057                   ___ftadd@exp2 0056                   ___ftadd@sign 0055  
                  _putchar_ptr 0079                            l625 1F01                            l457 1BD0  
                          l626 1F09                            l618 1EEC                            l742 1195  
                          l682 0948                            l870 067E                            _GIE 005F  
                          _RC3 003B                            _RC4 003C                            _RC5 003D  
                          _RC7 003F                            _RX9 00C6                            _TX9 04C6  
                          _exp 09A9                            _log 13C5                            _isr 125B  
                          _pow 064F                            fsr0 0004                            indf 0000  
                 ___ftdiv@cntr 0032                   fp__ser_putch 0109                   ___ftdiv@sign 0037  
                         l4000 10C1                           l4010 10EF                           l4012 10F9  
                         l4040 0687                           l3420 1EC5                           l4108 1BEA  
                         l3500 08C9                           l3422 1ED1                           l4126 1F51  
                         l3510 08DF                           l4054 0709                           l4046 0693  
                         l3432 1EFF                           l3424 1ED6                           l3416 1EBE  
                         l4072 1BC8                           l4144 1F6E                           l3504 08D0  
                         l3434 1EF1                           l3450 1B82                           l3530 091A  
                         l3522 08F9                           l4058 0737                           l4170 167D  
                         l4322 0F5D                           l4092 1FD7                           l3540 0938  
                         l3532 091F                           l3620 1528                           l3612 1510  
                         l3446 1B7C                           l3550 096C                           l3542 0944  
                         l3534 0923                           l3470 1E7E                           l4166 17F7  
                         l4318 0F2A                           l4326 0F90                           l4190 1E30  
                         l3560 098F                           l3528 090E                           l3624 1538  
                         l3608 1500                           l3712 15B8                           l4344 0172  
                         l4192 1E41                           l4184 1DFD                           l4098 1FF9  
                         l3546 095A                           l3482 1D10                           l3810 1380  
                         l3722 163A                           l4290 0D1A                           l4186 1E0E  
                         l3572 1DDC                           l3468 1E68                           l3708 15AF  
                         l3900 1CEC                           l4380 0588                           l4188 1E1F  
                         l3734 07E1                           l3590 14AB                           l3830 1BAC  
                         l4390 05F7                           l4462 00D1                           l3568 1DB5  
                         l3840 108E                           l3680 11A6                           l3648 113B  
                         l3744 0815                           l3904 1CF7                           l4384 05BC  
                         l4464 00D6                           l4456 00C1                           l3818 139F  
                         l3674 118A                           l3666 116D                           l3754 083E  
                         l3922 1CAE                           l3596 14C1                           l3676 1198  
                         l3668 117D                           l3916 1C92                           l4388 05EF  
                         l3686 1000                           l3854 1C61                           l3790 1325  
                         l3774 087E                           l3918 1CA0                           l3926 1CB9  
                         l3872 13FF                           l3856 1C73                           l3952 0A14  
                         l3936 09B7                           l3866 13E9                           l3778 0887  
                         l3946 09E6                           l3796 133B                           l3980 0B62  
                         l3892 1CC8                           ?_exp 00BD                           ?_log 0062  
                         l3958 0A65                           l3894 1CD6                           l3994 10A4  
                         ?_isr 0070                           ?_pow 00CA                           STR_1 1847  
                         STR_3 184A                           STR_4 1864                           STR_5 184D  
                         STR_6 1853                           STR_7 1859                           STR_8 183F  
                         STR_9 184A                           _BRGH 04C2                           _CREN 00C4  
                         _T0CS 040D                           _T0SE 040C                           _CCal 01DE  
                         u4105 08FA                           u4135 090F                           u5105 06F8  
                         u4261 1DA8                           u4165 0924                           u4325 14CD  
                         u4262 1DA9                           u5310 1E1C                           u5135 1BD1  
                         u4263 1DAE                           u4415 1539                           u4335 14DF  
                         u4264 1DAF                           u5145 1BD8                           u4281 1DCF  
                         u4425 1541                           u5225 1D61                           u5305 1E11  
                         u4282 1DD0                           u5250 1DFA                           u4283 1DD5  
                         u4195 0939                           _PEIE 005E                           u4284 1DD6  
                         u5340 1E2D                           u4365 1511                           u4525 118C  
                         u5175 1FF4                           u4375 1519                           u5335 1E22  
                         u5280 1E0B                           u4705 1392                           u4465 1142  
                         u5370 1E3E                           u4715 13A0                           u4635 0847  
                         u5275 1E00                           _RCIF 0065                           u4805 1CCB  
                         u5365 1E33                           u5390 1E4A                           u3935 1F10  
                         u3855 1ECA                           u5607 1F3F                           u4495 116E  
                         u4825 1CD7                           u4905 1CAF                           u3875 1EE5  
                         u4755 1C66                           u4675 134D                           u4835 1CE3  
                         u4685 135F                           u4845 1CED                           u4950 0A35  
                         u3895 1EF8                           u4695 1381                           u4960 0A36  
                         u3985 1E6D                           _OERR 00C1                           u4875 1C95  
                         u5597 1F31                           u4895 1CA6                           u4995 0B59  
                         _TMR0 0001                           _TMR2 0011                           _SPEN 00C7  
                         _TXIE 0464                           _TXEN 04C5                           _TXIF 0064  
                         _SYNC 04C4                           _bres 01E1                           _main 0035  
                 ___ftpack@arg 0020                   ___ftpack@exp 0023                           btemp 007E  
                         exp@x 00BD                           log@x 0062          __size_of_output_putch 000A  
                         ltemp 007E                           pow@x 00CA                           pow@y 00CD  
   __end_of_measure_inductance 064F                           start 0012                           ttemp 007E  
                         wtemp 007E              _format_number$296 004F              ___bmul@multiplier 0023  
                 ___ftmul@cntr 0046                   ___ftmul@sign 0047                   ___fttol@exp1 00AD  
                        ??_exp 00C0                          ??_log 0065                   ___fttol@lval 00A9  
                        ??_isr 0070                          ??_pow 00D0                          ?_main 0070  
              __end_of___ftadd 09A9                          STR_10 185F                          STR_11 184A  
              __end_of___ftdiv 13C5                          _CMCON 009C                __end_of___ftneg 1B78  
              __end_of___ftmul 1566                __end_of___ftsub 1BC4                __end_of___fttol 11AF  
              __end_of___lwdiv 1CFC                          i1l133 12FF                          i1l134 1301  
                        i1l128 12A3                __end_of___lwmod 1CBE                          _RCREG 001A  
                        _SPBRG 0099                          _TRISA 0085                          _TRISC 0087  
                        _SSPEN 00A5                          _TXREG 0019                   ___lltoft@exp 002D  
                        _nRBPU 040F                  ___awtoft@sign 002D                          _log10 1C2E  
                        _blink 01C6                          _floor 1566                          _ldexp 0807  
                        _frexp 1CFC                   _output_putch 1B64                          _errno 01C8  
                        _msecs 01B0                  ___ftpack@sign 0024                          fpbase 0105  
                        pclath 000A                          ltemp0 007E                          ltemp1 0082  
                        ltemp2 0086                          ltemp3 0080                          pow@yi 00D8  
              format_number@di 0052                          ttemp0 007E                          ttemp1 0081  
                        ttemp2 0084                          ttemp3 0087                          ttemp4 007F  
                        status 0003                          wtemp0 007E                          wtemp1 0080  
                        wtemp2 0082                          wtemp3 0084                          wtemp4 0086  
                        wtemp5 0088                          wtemp6 007F                ??_print_reading 0022  
                  exp@exponent 00C7                    ldexp@newexp 0065                __initialization 0015  
              format_putchar@c 0020                    log@exponent 0066                   __end_of_main 00F9  
             format_double@num 00DC                  ?_measure_freq 0020         __size_of_format_double 01BD  
                       ??_main 00E1                  ___fttol@sign1 00A8            format_double@weight 01D7  
       __size_of_format_number 008C         __size_of_format_xint32 004E                         ?_log10 0068  
                       ?_floor 00B4                         ?_ldexp 0062                         ?_frexp 0020  
             __end_of___altoft 1EB4               __end_of___awtoft 07FA               __end_of___ftpack 1F22  
             __end_of___lltoft 1C8A                         i1l3220 12C4                         i1l3222 12C7  
                       i1l3232 12E1               __end_of___lwtoft 1BA3                         u363_20 1291  
                       u364_24 1294                         _TMR0IF 005A                         _TMR2IE 0461  
                       _TMR2IF 0061                         _TMR2ON 0092             entry__output_putch 0106  
                       _TRISC0 0438                         _TRISC1 0439                         _TRISC2 043A  
                       _TRISC3 043B                         _TRISC4 043C                         _TRISC5 043D  
                       _TRISC6 043E               __end_of__fptable 010F                         ___bmul 1B78  
                       ___ftge 1D8C                         ___wmul 1BC4                      ??___ftadd 0051  
                    ??___ftdiv 002E                      ??___ftneg 004B                      ??___ftmul 003E  
                    ??___ftsub 005E                      ??___fttol 00A4                 ??_measure_freq 0022  
                    ??___lwdiv 0024                   ?_timer2_init 0070                      ??___lwmod 0024  
                       log10@x 0068                         _rxfifo 0190                         _txfifo 01A0  
                       _rxiptr 0075                         _rxoptr 0076                         floor@i 00B8  
                       _txiptr 0077                         floor@x 00B4          ___ftmul@f3_as_product 0043  
                       _txoptr 0078                         fptable 0100               __end_of_ser_init 1C2E  
                 __pdataCOMMON 0079                         fptotal 0006               __end_of_ser_puts 1C0A  
           timer2_init@ps_mode 0021                         saved_w 007E               format_number@buf 002F  
             format_number@pad 002B               __end_ofexp@coeff 1824                  _format_double 1643  
             __end_oflog@coeff 183F        __end_of__initialization 0031                     ___altoft@c 00AE  
                   ___ftadd@f1 004B                     ___ftadd@f2 004E                  _format_number 1095  
                   ___ftge@ff1 0020                     ___ftge@ff2 0023                  _format_xint32 1D3E  
                 eval_poly@res 005F                     ___ftdiv@f1 002B                     ___ftdiv@f2 0028  
                   ___ftdiv@f3 0033                     ___ftneg@f1 0048                     ___awtoft@c 0028  
       measure_capacitance@Cin 011C            ___bmul@multiplicand 0020                     ___ftmul@f1 0038  
                   ___ftmul@f2 003B   __size_of_measure_capacitance 0472         measure_capacitance@var 011A  
                   ___ftsub@f1 005B                     ___ftsub@f2 0058                     ___fttol@f1 00A0  
               __pcstackCOMMON 0070             __size_of_calibrate 00AC                   __pidataBANK3 07FB  
           __size_of_delay10ms 0070                     ___lltoft@c 0028                  __end_of_log10 1C5B  
                __end_of_floor 1643                  __end_of_ldexp 08A0                  __end_of_frexp 1D3E  
                   ___lwtoft@c 002B                        ??_log10 006B                        ??_floor 00B7  
                      ??_ldexp 0067                        ??_frexp 0024                     __pbssBANK1 00E2  
               ?_format_double 00DC                     __pbssBANK3 0190             __size_of_eval_poly 0079  
           __size_of_indicator 0001        __size_of_format_putchar 0001              fp__format_putchar 010C  
               ?_format_number 0028                 ?_format_xint32 0054                 print_unit@unit 0070  
                   __pmaintext 0035                        ?___bmul 0020                        ?___ftge 0020  
                      ?___wmul 0020                     __pintentry 0004                      ?___altoft 00AE  
                    ?___awtoft 0028                      ?___ftpack 0020                      ?___lltoft 0028  
           _measure_inductance 010F             __size_of_ser_putch 001C                        _T2CKPS0 0090  
                      _T2CKPS1 0091                      ?___lwtoft 002B            ?_measure_inductance 0070  
              entry__ser_putch 0109              __end_of_calibrate 125B                        _TOUTPS0 0093  
                      _TOUTPS1 0094                        _TOUTPS2 0095              __end_of_delay10ms 2000  
                   __stringtab 1800           __end_of_measure_freq 1F90                      ?_ser_init 0070  
         ??_measure_inductance 006E                      ?_ser_puts 0070                __size_of___bmul 0013  
              __size_of___ftge 005F                        ___ftadd 08A0                        ___ftdiv 130D  
                      ___ftneg 1B6E                __size_of___wmul 0023                        ___ftmul 1493  
                      ___ftsub 1BA3                        ___fttol 1121                        ___lwdiv 1CBE  
                      ___lwmod 1C8A                     ??___altoft 006E                        _exp$625 00C4  
                      _exp$836 00C1                     ??___awtoft 002B                     ??___ftpack 0025  
            __end_of_eval_poly 1095              __end_of_indicator 0800                     ??___lltoft 002C  
                      __ptext1 1DEB                        __ptext2 1C0A                        __ptext3 010F  
                      __ptext4 0B8E                        __ptext5 07FC                        __ptext6 07FD  
                      __ptext7 1D3E                        __ptext8 1095                        __ptext9 1C8A  
         __size_of_timer2_init 0063                     ??___lwtoft 002E                        _pow$834 00D1  
                      _pow$835 00D4                   __size_of_exp 01E5                   __size_of_log 00CE  
                 __size_of_isr 00B2                   __size_of_pow 0186                        _seconds 01B4  
                      _ser_brg 01E5                        _ser_tmp 00E2                ??_format_double 00DF  
                      clrloop0 1B5D           end_of_initialization 0031                ??_format_number 002C  
              ??_format_xint32 0058                        exp@sign 00C9              __end_of_ser_putch 101C  
                      pow@sign 00D7  measure_inductance@denominator 00B1          __end_of_print_reading 07FE  
                   ??_ser_init 0020                     ??_ser_puts 0022                 testloop@prev_s 01BC  
            format_number@base 002A                     _print_unit 07FC            _measure_capacitance 0B8E  
               _format_putchar 07FE                    ___ftdiv@exp 0036           ?_measure_capacitance 0070  
      measure_capacitance@unit 0119                    ___ftmul@exp 0042                 format_double@m 01DC  
       measure_inductance@unit 00C0                 __end_of___bmul 1B8B                 __end_of___ftge 1DEB  
               __end_of___wmul 1BE7                  __pidataCOMMON 07FA                     floor@expon 00BB  
              fp__output_putch 0106                    testloop@led 01CA                 format_number@i 0053  
               format_number@n 0028                 format_xint32@x 0054            start_initialization 0015  
                   eval_poly@d 005B                     eval_poly@n 005C                     eval_poly@x 0058  
        __size_of_measure_freq 006E                     ldexp@value 0062                    __end_of_exp 0B8E  
                  __end_of_log 1493                    __end_of_isr 130D                    __end_of_pow 07D5  
       __end_of_format_putchar 07FF             format_double@digit 01DA                     frexp@value 0020  
        ??_measure_capacitance 00E0                       ??___bmul 0021                       ??___ftge 0026  
                     ??___wmul 0024                    __pdataBANK3 01E5                   _measure_freq 1F22  
                 delay10ms@run 0030         _measure_inductance$822 00B4         _measure_inductance$823 00C1  
       _measure_inductance$824 00C4         _measure_inductance$825 00C7         _measure_inductance$826 00B7  
       _measure_inductance$827 00BA         _measure_inductance$828 00BD       print_reading@measurement 0020  
            __size_of___altoft 0066              __size_of___awtoft 0025              __size_of___ftpack 006E  
                  ?_print_unit 0070              __size_of___lltoft 002F                    __pbssCOMMON 0075  
                    ___latbits 0002              __size_of___lwtoft 0018                  __pcstackBANK0 0020  
                __pcstackBANK1 00A0                  __pcstackBANK2 0110                  __pcstackBANK3 01CE  
            __size_of__fptable 000F                  ?_output_putch 0020                ?_format_putchar 0020  
            measure_freq@count 0029                      _calibrate 11AF                      _delay10ms 1F90  
                    _log10$833 006B                      __pnvBANK3 01DE               ___lwdiv@dividend 0022  
                    __pfunctab 0100                       ?___ftadd 004B                       ?___ftdiv 0028  
                     ?___ftneg 0048                       ?___ftmul 0038              __size_of_ser_init 0024  
                     ?___ftsub 0058                       ?___fttol 00A0                       ?___lwdiv 0020  
                     ?___lwmod 0020              __size_of_ser_puts 0023                      __pstrings 1800  
                    _ldexp$492 0069                      _eval_poly 101C                  output_putch@c 0020  
                    _indicator 07FF                 ??_output_putch 0021               ___lwdiv@quotient 0026  
               __size_of_log10 002D                 __size_of_floor 00DD                 __size_of_ldexp 0099  
               __size_of_frexp 0042              interrupt_function 0004                     ?_calibrate 0070  
               ___wmul@product 0024                     ser_putch@c 0020                     ?_delay10ms 0026  
                    clear_ram0 1B5C            __size_of_print_unit 0001                      _ser_putch 1000  
  __size_of_measure_inductance 0540                  ??_timer2_init 0020              indicator@indicate 0070  
                  __stringbase 1805              ___wmul@multiplier 0020                     ?_eval_poly 0058  
                   ?_indicator 0070          measure_inductance@Lin 00CC          measure_inductance@var 00CA  
        __end_of_format_double 1800           format_number@padchar 0051          __end_of_format_number 1121  
        __end_of_format_xint32 1D8C                      frexp@eptr 0023                     ?_ser_putch 0020  
                  delay10ms@ms 002C               __size_of___ftadd 0109               __size_of___ftdiv 00B8  
             __size_of___ftneg 000A                       ___altoft 1E4E               __size_of___ftmul 00D3  
             __size_of___ftsub 0021               __size_of___fttol 008E               __size_of___lwdiv 003E  
             __size_of___lwmod 0034                       ___awtoft 07D5                       ___ftpack 1EB4  
           __end_of__stringtab 1806                       ___lltoft 1C5B                  timer2_init@ps 0022  
                     ___lwtoft 1B8B               measure_freq@prev 0028            __end_of_timer2_init 1E4E  
                     __fptable 0100                ___lwdiv@divisor 0020                ___lwdiv@counter 0025  
       __size_of_print_reading 0001                       __ptext10 1CBE                       __ptext11 1643  
                     __ptext20 130D                       __ptext12 064F                       __ptext21 1C5B  
                     __ptext13 09A9                       __ptext30 08A0                       __ptext22 07FE  
                     __ptext14 0807                       __ptext31 1B78                       __ptext23 1000  
                     __ptext15 1B6E                       __ptext40 1B8B                       __ptext32 1D8C  
                     __ptext24 1B64                       __ptext16 1566                       __ptext41 1EB4  
                     __ptext33 07D5                       __ptext25 1C2E                       __ptext17 1121  
                     __ptext42 125B                       __ptext34 07FF                       __ptext26 13C5  
                     __ptext18 1E4E                       __ptext35 11AF                       __ptext27 1CFC  
                     __ptext19 1BA3                       __ptext36 1BE7                       __ptext28 101C  
                     __ptext37 1F22                       __ptext29 1493                       __ptext38 1F90  
                     __ptext39 1BC4                    ??_calibrate 0031                  __size_of_main 00C4  
                  ??_delay10ms 0028                      ser_puts@s 0023                       _msecpart 01E3  
        timer2_init@postscaler 0023                       _ser_init 1C0A                       _ser_puts 1BE7  
                     _timer1of 01B8           __end_of_output_putch 1B6E                       exp@coeff 1806  
                     log@coeff 1824    measure_inductance@numerator 00AE               ??_format_putchar 0021  
                 ??_print_unit 0020                    ??_eval_poly 005E                    ??_indicator 0020  
                     intlevel1 0100    __end_of_measure_capacitance 1000               ___lwmod@dividend 0022  
                    stringcode 1800                    ??_ser_putch 0021             __end_of_print_unit 07FD  
                _print_reading 07FD           delay10ms@period_10ms 0026                    _timer2_init 1DEB  
              ___lwmod@divisor 0020                ___lwmod@counter 0025                       stringdir 1800  
                     stringtab 1800              _format_double$310 01D4              _format_double$831 01CE  
            _format_double$832 01D1        _measure_capacitance$820 0113        _measure_capacitance$821 0116  
      _measure_capacitance$819 0110                 ?_print_reading 0020  
