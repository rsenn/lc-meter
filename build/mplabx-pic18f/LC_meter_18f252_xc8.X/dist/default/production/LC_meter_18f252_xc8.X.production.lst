

Microchip Technology PIC18 PRO Macro Assembler V1.34 build -361300703 
                                                                                               Thu Sep 05 08:50:57 2019

Microchip Technology Omniscient Code Generator (PRO mode) build 201502162209
     1                           	processor	18F252
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	pm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     7                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    14                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    15                           	psect	text0,global,reloc=2,class=CODE,delta=1
    16                           	psect	text1,global,reloc=2,class=CODE,delta=1
    17                           	psect	text2,global,reloc=2,class=CODE,delta=1
    18                           	psect	text3,global,reloc=2,class=CODE,delta=1
    19                           	psect	text4,global,reloc=2,class=CODE,delta=1
    20                           	psect	text5,global,reloc=2,class=CODE,delta=1
    21                           	psect	text6,global,reloc=2,class=CODE,delta=1
    22                           	psect	text7,global,reloc=2,class=CODE,delta=1
    23                           	psect	text8,global,reloc=2,class=CODE,delta=1
    24                           	psect	text9,global,reloc=2,class=CODE,delta=1
    25                           	psect	text10,global,reloc=2,class=CODE,delta=1
    26                           	psect	text11,global,reloc=2,class=CODE,delta=1
    27                           	psect	text12,global,reloc=2,class=CODE,delta=1
    28                           	psect	text13,global,reloc=2,class=CODE,delta=1
    29                           	psect	text14,global,reloc=2,class=CODE,delta=1
    30                           	psect	text15,global,reloc=2,class=CODE,delta=1
    31                           	psect	text16,global,reloc=2,class=CODE,delta=1
    32                           	psect	text17,global,reloc=2,class=CODE,delta=1
    33                           	psect	text18,global,reloc=2,class=CODE,delta=1
    34                           	psect	text19,global,reloc=2,class=CODE,delta=1
    35                           	psect	text20,global,reloc=2,class=CODE,delta=1
    36                           	psect	text21,global,reloc=2,class=CODE,delta=1
    37                           	psect	text22,global,reloc=2,class=CODE,delta=1
    38                           	psect	text23,global,reloc=2,class=CODE,delta=1
    39                           	psect	text24,global,reloc=2,class=CODE,delta=1
    40                           	psect	text25,global,reloc=2,class=CODE,delta=1
    41                           	psect	text26,global,reloc=2,class=CODE,delta=1
    42                           	psect	text27,global,reloc=2,class=CODE,delta=1
    43                           	psect	text28,global,reloc=2,class=CODE,delta=1
    44                           	psect	text29,global,reloc=2,class=CODE,delta=1
    45                           	psect	text30,global,reloc=2,class=CODE,delta=1
    46                           	psect	text31,global,reloc=2,class=CODE,delta=1
    47                           	psect	text32,global,reloc=2,class=CODE,delta=1
    48                           	psect	text33,global,reloc=2,class=CODE,delta=1
    49                           	psect	text34,global,reloc=2,class=CODE,delta=1
    50                           	psect	text35,global,reloc=2,class=CODE,delta=1
    51                           	psect	text36,global,reloc=2,class=CODE,delta=1
    52                           	psect	text37,global,reloc=2,class=CODE,delta=1
    53                           	psect	text38,global,reloc=2,class=CODE,delta=1
    54                           	psect	text39,global,reloc=2,class=CODE,delta=1
    55                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    56                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    57                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    58  0000                     
    59                           	psect	idataCOMRAM
    60  00267A                     __pidataCOMRAM:
    61                           	opt stack 0
    62                           
    63                           ;initializer for _putchar_ptr
    64  00267A  6E                 	db	low _format_putchar
    65  00267B  26                 	db	high _format_putchar
    66                           
    67                           	psect	smallconst
    68  000600                     __psmallconst:
    69                           	opt stack 0
    70  000600  00                 	db	0
    71  000601                     exp@coeff:
    72                           	opt stack 0
    73  000601  0000               	dw	0
    74  000603  3F80               	dw	16256
    75  000605  7218               	dw	29208
    76  000607  3F31               	dw	16177
    77  000609  FDF0               	dw	65008
    78  00060B  3E75               	dw	15989
    79  00060D  5847               	dw	22599
    80  00060F  3D63               	dw	15715
    81  000611  9558               	dw	38232
    82  000613  3C1D               	dw	15389
    83  000615  C482               	dw	50306
    84  000617  3AAE               	dw	15022
    85  000619  78A8               	dw	30888
    86  00061B  3921               	dw	14625
    87  00061D  93EF               	dw	37871
    88  00061F  3780               	dw	14208
    89  000621  92A0               	dw	37536
    90  000623  35A7               	dw	13735
    91  000625  5646               	dw	22086
    92  000627  3415               	dw	13333
    93  000629                     __end_ofexp@coeff:
    94                           	opt stack 0
    95  000629                     log@coeff:
    96                           	opt stack 0
    97  000629  0000               	dw	0
    98  00062B  0000               	dw	0
    99  00062D  FFC4               	dw	65476
   100  00062F  3F7F               	dw	16255
   101  000631  EF80               	dw	61312
   102  000633  BEFF               	dw	48895
   103  000635  E190               	dw	57744
   104  000637  3EA9               	dw	16041
   105  000639  82EC               	dw	33516
   106  00063B  BE76               	dw	48758
   107  00063D  AD82               	dw	44418
   108  00063F  3E2B               	dw	15915
   109  000641  3C0E               	dw	15374
   110  000643  BDC3               	dw	48579
   111  000645  D187               	dw	53639
   112  000647  3D13               	dw	15635
   113  000649  7841               	dw	30785
   114  00064B  BBD3               	dw	48083
   115  00064D                     __end_oflog@coeff:
   116                           	opt stack 0
   117  00064D                     STR_8:
   118  00064D  0D                 	db	13
   119  00064E  0A                 	db	10
   120  00064F  43                 	db	67	;'C'
   121  000650  43                 	db	67	;'C'
   122  000651  61                 	db	97	;'a'
   123  000652  6C                 	db	108	;'l'
   124  000653  3D                 	db	61	;'='
   125  000654  00                 	db	0
   126  000655                     STR_1:
   127  000655  2E                 	db	46
   128  000656  2E                 	db	46
   129  000657  2E                 	db	46
   130  000658  0D                 	db	13
   131  000659  0A                 	db	10
   132  00065A  00                 	db	0
   133  00065B                     STR_5:
   134  00065B  0D                 	db	13
   135  00065C  0A                 	db	10
   136  00065D  46                 	db	70	;'F'
   137  00065E  31                 	db	49	;'1'
   138  00065F  3D                 	db	61	;'='
   139  000660  00                 	db	0
   140  000661                     STR_6:
   141  000661  0D                 	db	13
   142  000662  0A                 	db	10
   143  000663  46                 	db	70	;'F'
   144  000664  32                 	db	50	;'2'
   145  000665  3D                 	db	61	;'='
   146  000666  00                 	db	0
   147  000667                     STR_7:
   148  000667  0D                 	db	13
   149  000668  0A                 	db	10
   150  000669  46                 	db	70	;'F'
   151  00066A  33                 	db	51	;'3'
   152  00066B  3D                 	db	61	;'='
   153  00066C  00                 	db	0
   154  00066D                     STR_10:
   155  00066D  43                 	db	67	;'C'
   156  00066E  69                 	db	105	;'i'
   157  00066F  6E                 	db	110	;'n'
   158  000670  3D                 	db	61	;'='
   159  000671  00                 	db	0
   160  000672                     STR_4:
   161  000672  76                 	db	118	;'v'
   162  000673  61                 	db	97	;'a'
   163  000674  72                 	db	114	;'r'
   164  000675  3D                 	db	61	;'='
   165  000676  00                 	db	0
   166  0000                     
   167                           ; #config settings
   168  000677  00                 	db	0	; dummy byte at the end
   169  0000                     
   170                           	psect	nvBANK0
   171  0000F2                     __pnvBANK0:
   172                           	opt stack 0
   173  0000F2                     _CCal:
   174                           	opt stack 0
   175  0000F2                     	ds	4
   176  0000F6                     _bres:
   177                           	opt stack 0
   178  0000F6                     	ds	2
   179  0000F8                     _msecpart:
   180                           	opt stack 0
   181  0000F8                     	ds	2
   182  0000                     _TMR0	set	4054
   183  0000                     _PORTC	set	3970
   184  0000                     _RCREG	set	4014
   185  0000                     _SPBRG	set	4015
   186  0000                     _TMR2	set	4044
   187  0000                     _TRISA	set	3986
   188  0000                     _TRISC	set	3988
   189  0000                     _TXREG	set	4013
   190  0000                     _BRGH	set	32098
   191  0000                     _CREN	set	32092
   192  0000                     _GIE	set	32663
   193  0000                     _PEIE	set	32662
   194  0000                     _RC3	set	31763
   195  0000                     _RC4	set	31764
   196  0000                     _RC7	set	31767
   197  0000                     _RCIF	set	31989
   198  0000                     _RX9	set	32094
   199  0000                     _SPEN	set	32095
   200  0000                     _SSPEN	set	32309
   201  0000                     _SYNC	set	32100
   202  0000                     _T0CS	set	32429
   203  0000                     _T0SE	set	32428
   204  0000                     _T2CKPS0	set	32336
   205  0000                     _T2CKPS1	set	32337
   206  0000                     _TMR0IF	set	32658
   207  0000                     _TMR2IE	set	31977
   208  0000                     _TMR2IF	set	31985
   209  0000                     _TMR2ON	set	32338
   210  0000                     _TOUTPS0	set	32339
   211  0000                     _TOUTPS1	set	32340
   212  0000                     _TOUTPS2	set	32341
   213  0000                     _TRISC0	set	31904
   214  0000                     _TRISC1	set	31905
   215  0000                     _TRISC2	set	31906
   216  0000                     _TRISC3	set	31907
   217  0000                     _TRISC6	set	31910
   218  0000                     _TX9	set	32102
   219  0000                     _TXEN	set	32101
   220  0000                     _TXIE	set	31980
   221  0000                     _TXIF	set	31988
   222  0000                     _nRBPU	set	32655
   223                           
   224                           	psect	cinit
   225  0024C8                     __pcinit:
   226                           	opt stack 0
   227  0024C8                     start_initialization:
   228                           	opt stack 0
   229  0024C8                     __initialization:
   230                           	opt stack 0
   231                           
   232                           ; Clear objects allocated to BANK1 (16 bytes)
   233  0024C8  EE01  F000         	lfsr	0,__pbssBANK1
   234  0024CC  0E10               	movlw	16
   235  0024CE                     clear_0:
   236  0024CE  6AEE               	clrf	postinc0,c
   237  0024D0  06E8               	decf	wreg,f,c
   238  0024D2  E1FD               	bnz	clear_0
   239                           
   240                           ; Clear objects allocated to BANK0 (43 bytes)
   241  0024D4  EE00  F0C7         	lfsr	0,__pbssBANK0
   242  0024D8  0E2B               	movlw	43
   243  0024DA                     clear_1:
   244  0024DA  6AEE               	clrf	postinc0,c
   245  0024DC  06E8               	decf	wreg,f,c
   246  0024DE  E1FD               	bnz	clear_1
   247                           
   248                           ; Clear objects allocated to COMRAM (4 bytes)
   249  0024E0  6A79               	clrf	(__pbssCOMRAM+3)& (0+255),c
   250  0024E2  6A78               	clrf	(__pbssCOMRAM+2)& (0+255),c
   251  0024E4  6A77               	clrf	(__pbssCOMRAM+1)& (0+255),c
   252  0024E6  6A76               	clrf	__pbssCOMRAM& (0+255),c
   253                           
   254                           ; Initialize objects allocated to COMRAM (2 bytes)
   255                           ; load TBLPTR registers with __pidataCOMRAM
   256  0024E8  0E7A               	movlw	low __pidataCOMRAM
   257  0024EA  6EF6               	movwf	tblptrl,c
   258  0024EC  0E26               	movlw	high __pidataCOMRAM
   259  0024EE  6EF7               	movwf	tblptrh,c
   260  0024F0  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   261  0024F2  6EF8               	movwf	tblptru,c
   262  0024F4  0009               	tblrd		*+	;fetch initializer
   263  0024F6  CFF5 F07A          	movff	tablat,__pdataCOMRAM
   264  0024FA  0009               	tblrd		*+	;fetch initializer
   265  0024FC  CFF5 F07B          	movff	tablat,__pdataCOMRAM+1
   266  002500                     end_of_initialization:
   267                           	opt stack 0
   268  002500                     __end_of__initialization:
   269                           	opt stack 0
   270  002500  0E00               	movlw	low (__Lmediumconst shr (0+16))
   271  002502  6EF8               	movwf	tblptru,c
   272  002504  0100               	movlb	0
   273  002506  EFC7  F00D         	goto	_main	;jump to C main() function
   274                           tblptru	equ	0xFF8
   275                           tblptrh	equ	0xFF7
   276                           tblptrl	equ	0xFF6
   277                           tablat	equ	0xFF5
   278                           postinc0	equ	0xFEE
   279                           wreg	equ	0xFE8
   280                           
   281                           	psect	bssCOMRAM
   282  000076                     __pbssCOMRAM:
   283                           	opt stack 0
   284  000076                     _rxiptr:
   285                           	opt stack 0
   286  000076                     	ds	1
   287  000077                     _rxoptr:
   288                           	opt stack 0
   289  000077                     	ds	1
   290  000078                     _txiptr:
   291                           	opt stack 0
   292  000078                     	ds	1
   293  000079                     _txoptr:
   294                           	opt stack 0
   295  000079                     	ds	1
   296                           tblptru	equ	0xFF8
   297                           tblptrh	equ	0xFF7
   298                           tblptrl	equ	0xFF6
   299                           tablat	equ	0xFF5
   300                           postinc0	equ	0xFEE
   301                           wreg	equ	0xFE8
   302                           
   303                           	psect	dataCOMRAM
   304  00007A                     __pdataCOMRAM:
   305                           	opt stack 0
   306  00007A                     _putchar_ptr:
   307                           	opt stack 0
   308  00007A                     	ds	2
   309                           tblptru	equ	0xFF8
   310                           tblptrh	equ	0xFF7
   311                           tblptrl	equ	0xFF6
   312                           tablat	equ	0xFF5
   313                           postinc0	equ	0xFEE
   314                           wreg	equ	0xFE8
   315                           
   316                           	psect	bssBANK0
   317  0000C7                     __pbssBANK0:
   318                           	opt stack 0
   319  0000C7                     _txfifo:
   320                           	opt stack 0
   321  0000C7                     	ds	16
   322  0000D7                     _F2:
   323                           	opt stack 0
   324  0000D7                     	ds	4
   325  0000DB                     _F3:
   326                           	opt stack 0
   327  0000DB                     	ds	4
   328  0000DF                     _msecs:
   329                           	opt stack 0
   330  0000DF                     	ds	4
   331  0000E3                     _seconds:
   332                           	opt stack 0
   333  0000E3                     	ds	4
   334  0000E7                     _timer1of:
   335                           	opt stack 0
   336  0000E7                     	ds	4
   337  0000EB                     _blink:
   338                           	opt stack 0
   339  0000EB                     	ds	2
   340  0000ED                     _ser_tmp:
   341                           	opt stack 0
   342  0000ED                     	ds	1
   343  0000EE                     _F1:
   344                           	opt stack 0
   345  0000EE                     	ds	4
   346                           tblptru	equ	0xFF8
   347                           tblptrh	equ	0xFF7
   348                           tblptrl	equ	0xFF6
   349                           tablat	equ	0xFF5
   350                           postinc0	equ	0xFEE
   351                           wreg	equ	0xFE8
   352                           
   353                           	psect	bssBANK1
   354  000100                     __pbssBANK1:
   355                           	opt stack 0
   356  000100                     _rxfifo:
   357                           	opt stack 0
   358  000100                     	ds	16
   359                           tblptru	equ	0xFF8
   360                           tblptrh	equ	0xFF7
   361                           tblptrl	equ	0xFF6
   362                           tablat	equ	0xFF5
   363                           postinc0	equ	0xFEE
   364                           wreg	equ	0xFE8
   365                           
   366                           	psect	cstackBANK0
   367  000080                     __pcstackBANK0:
   368                           	opt stack 0
   369  000080                     ?_exp:
   370                           	opt stack 0
   371  000080                     measure_inductance@numerator:
   372                           	opt stack 0
   373  000080                     exp@x:
   374                           	opt stack 0
   375                           
   376                           ; 4 bytes @ 0x0
   377  000080                     	ds	4
   378  000084                     measure_inductance@denominator:
   379                           	opt stack 0
   380  000084                     _exp$934:
   381                           	opt stack 0
   382                           
   383                           ; 4 bytes @ 0x4
   384  000084                     	ds	4
   385  000088                     exp@exponent:
   386                           	opt stack 0
   387  000088                     _measure_inductance$924:
   388                           	opt stack 0
   389                           
   390                           ; 4 bytes @ 0x8
   391  000088                     	ds	2
   392  00008A                     exp@sign:
   393                           	opt stack 0
   394                           
   395                           ; 1 bytes @ 0xA
   396  00008A                     	ds	1
   397  00008B                     ?_pow:
   398                           	opt stack 0
   399  00008B                     pow@x:
   400                           	opt stack 0
   401                           
   402                           ; 4 bytes @ 0xB
   403  00008B                     	ds	1
   404  00008C                     _measure_inductance$928:
   405                           	opt stack 0
   406                           
   407                           ; 4 bytes @ 0xC
   408  00008C                     	ds	3
   409  00008F                     pow@y:
   410                           	opt stack 0
   411                           
   412                           ; 4 bytes @ 0xF
   413  00008F                     	ds	1
   414  000090                     _measure_inductance$929:
   415                           	opt stack 0
   416                           
   417                           ; 4 bytes @ 0x10
   418  000090                     	ds	3
   419  000093                     _pow$932:
   420                           	opt stack 0
   421                           
   422                           ; 4 bytes @ 0x13
   423  000093                     	ds	1
   424  000094                     _measure_inductance$930:
   425                           	opt stack 0
   426                           
   427                           ; 4 bytes @ 0x14
   428  000094                     	ds	3
   429  000097                     _pow$933:
   430                           	opt stack 0
   431                           
   432                           ; 4 bytes @ 0x17
   433  000097                     	ds	1
   434  000098                     measure_inductance@unit:
   435                           	opt stack 0
   436                           
   437                           ; 1 bytes @ 0x18
   438  000098                     	ds	1
   439  000099                     _measure_inductance$925:
   440                           	opt stack 0
   441                           
   442                           ; 4 bytes @ 0x19
   443  000099                     	ds	2
   444  00009B                     pow@sign:
   445                           	opt stack 0
   446                           
   447                           ; 1 bytes @ 0x1B
   448  00009B                     	ds	1
   449  00009C                     pow@yi:
   450                           	opt stack 0
   451                           
   452                           ; 4 bytes @ 0x1C
   453  00009C                     	ds	1
   454  00009D                     _measure_inductance$926:
   455                           	opt stack 0
   456                           
   457                           ; 4 bytes @ 0x1D
   458  00009D                     	ds	3
   459  0000A0                     format_double@num:
   460                           	opt stack 0
   461                           
   462                           ; 4 bytes @ 0x20
   463  0000A0                     	ds	1
   464  0000A1                     _measure_inductance$927:
   465                           	opt stack 0
   466                           
   467                           ; 4 bytes @ 0x21
   468  0000A1                     	ds	3
   469  0000A4                     _format_double$919:
   470                           	opt stack 0
   471                           
   472                           ; 4 bytes @ 0x24
   473  0000A4                     	ds	1
   474  0000A5                     measure_inductance@var:
   475                           	opt stack 0
   476                           
   477                           ; 2 bytes @ 0x25
   478  0000A5                     	ds	2
   479  0000A7                     measure_inductance@Lin:
   480                           	opt stack 0
   481                           
   482                           ; 4 bytes @ 0x27
   483  0000A7                     	ds	1
   484  0000A8                     _format_double$920:
   485                           	opt stack 0
   486                           
   487                           ; 4 bytes @ 0x28
   488  0000A8                     	ds	4
   489  0000AC                     format_double@weight:
   490                           	opt stack 0
   491                           
   492                           ; 4 bytes @ 0x2C
   493  0000AC                     	ds	4
   494  0000B0                     format_double@digit:
   495                           	opt stack 0
   496                           
   497                           ; 2 bytes @ 0x30
   498  0000B0                     	ds	2
   499  0000B2                     format_double@m:
   500                           	opt stack 0
   501                           
   502                           ; 2 bytes @ 0x32
   503  0000B2                     	ds	2
   504  0000B4                     _measure_capacitance$921:
   505                           	opt stack 0
   506                           
   507                           ; 4 bytes @ 0x34
   508  0000B4                     	ds	4
   509  0000B8                     _measure_capacitance$922:
   510                           	opt stack 0
   511                           
   512                           ; 4 bytes @ 0x38
   513  0000B8                     	ds	4
   514  0000BC                     _measure_capacitance$923:
   515                           	opt stack 0
   516                           
   517                           ; 4 bytes @ 0x3C
   518  0000BC                     	ds	4
   519  0000C0                     measure_capacitance@unit:
   520                           	opt stack 0
   521                           
   522                           ; 1 bytes @ 0x40
   523  0000C0                     	ds	1
   524  0000C1                     measure_capacitance@var:
   525                           	opt stack 0
   526                           
   527                           ; 2 bytes @ 0x41
   528  0000C1                     	ds	2
   529  0000C3                     measure_capacitance@Cin:
   530                           	opt stack 0
   531                           
   532                           ; 4 bytes @ 0x43
   533  0000C3                     	ds	4
   534                           tblptru	equ	0xFF8
   535                           tblptrh	equ	0xFF7
   536                           tblptrl	equ	0xFF6
   537                           tablat	equ	0xFF5
   538                           postinc0	equ	0xFEE
   539                           wreg	equ	0xFE8
   540                           
   541                           	psect	cstackCOMRAM
   542  000001                     __pcstackCOMRAM:
   543                           	opt stack 0
   544  000001                     ??_isr:
   545  000001                     
   546                           ; 1 bytes @ 0x0
   547  000001                     	ds	2
   548  000003                     ??_timer2_init:
   549  000003                     ?_measure_freq:
   550                           	opt stack 0
   551  000003                     ?___lwdiv:
   552                           	opt stack 0
   553  000003                     ?___lwmod:
   554                           	opt stack 0
   555  000003                     ?___flpack:
   556                           	opt stack 0
   557  000003                     ?_frexp:
   558                           	opt stack 0
   559  000003                     ?___flneg:
   560                           	opt stack 0
   561  000003                     ser_putch@c:
   562                           	opt stack 0
   563  000003                     print_reading@measurement:
   564                           	opt stack 0
   565  000003                     delay10ms@period_10ms:
   566                           	opt stack 0
   567  000003                     ___lwdiv@dividend:
   568                           	opt stack 0
   569  000003                     ___lwmod@dividend:
   570                           	opt stack 0
   571  000003                     ___flpack@arg:
   572                           	opt stack 0
   573  000003                     ___flge@ff1:
   574                           	opt stack 0
   575  000003                     ___flneg@f1:
   576                           	opt stack 0
   577  000003                     frexp@value:
   578                           	opt stack 0
   579                           
   580                           ; 4 bytes @ 0x2
   581  000003                     	ds	1
   582  000004                     ser_puts@s:
   583                           	opt stack 0
   584  000004                     timer2_init@ps_mode:
   585                           	opt stack 0
   586  000004                     output_putch@c:
   587                           	opt stack 0
   588                           
   589                           ; 1 bytes @ 0x3
   590  000004                     	ds	1
   591  000005                     ??_delay10ms:
   592  000005                     ??_measure_freq:
   593  000005                     timer2_init@ps:
   594                           	opt stack 0
   595  000005                     ___lwdiv@divisor:
   596                           	opt stack 0
   597  000005                     ___lwmod@divisor:
   598                           	opt stack 0
   599                           
   600                           ; 2 bytes @ 0x4
   601  000005                     	ds	2
   602  000007                     measure_freq@prev:
   603                           	opt stack 0
   604  000007                     ___flpack@exp:
   605                           	opt stack 0
   606  000007                     frexp@eptr:
   607                           	opt stack 0
   608  000007                     ___lwmod@counter:
   609                           	opt stack 0
   610  000007                     ___lwdiv@quotient:
   611                           	opt stack 0
   612  000007                     delay10ms@ms:
   613                           	opt stack 0
   614  000007                     ___flge@ff2:
   615                           	opt stack 0
   616                           
   617                           ; 4 bytes @ 0x6
   618  000007                     	ds	1
   619  000008                     ??_frexp:
   620  000008                     measure_freq@i:
   621                           	opt stack 0
   622  000008                     ___flpack@sign:
   623                           	opt stack 0
   624                           
   625                           ; 1 bytes @ 0x7
   626  000008                     	ds	1
   627  000009                     ??___flpack:
   628  000009                     ___lwdiv@counter:
   629                           	opt stack 0
   630  000009                     measure_freq@count:
   631                           	opt stack 0
   632                           
   633                           ; 2 bytes @ 0x8
   634  000009                     	ds	1
   635  00000A                     format_number@n:
   636                           	opt stack 0
   637                           
   638                           ; 2 bytes @ 0x9
   639  00000A                     	ds	1
   640  00000B                     delay10ms@run:
   641                           	opt stack 0
   642                           
   643                           ; 1 bytes @ 0xA
   644  00000B                     	ds	1
   645  00000C                     format_number@base:
   646                           	opt stack 0
   647                           
   648                           ; 1 bytes @ 0xB
   649  00000C                     	ds	1
   650  00000D                     ?___fldiv:
   651                           	opt stack 0
   652  00000D                     ?___awtofl:
   653                           	opt stack 0
   654  00000D                     ?___lltofl:
   655                           	opt stack 0
   656  00000D                     ?___lwtofl:
   657                           	opt stack 0
   658  00000D                     format_number@pad:
   659                           	opt stack 0
   660  00000D                     ___awtofl@c:
   661                           	opt stack 0
   662  00000D                     ___lwtofl@c:
   663                           	opt stack 0
   664  00000D                     ___fldiv@f1:
   665                           	opt stack 0
   666  00000D                     ___lltofl@c:
   667                           	opt stack 0
   668                           
   669                           ; 4 bytes @ 0xC
   670  00000D                     	ds	1
   671  00000E                     ??_format_number:
   672                           
   673                           ; 0 bytes @ 0xD
   674  00000E                     	ds	2
   675  000010                     format_number@buf:
   676                           	opt stack 0
   677                           
   678                           ; 32 bytes @ 0xF
   679  000010                     	ds	1
   680  000011                     ___awtofl@sign:
   681                           	opt stack 0
   682  000011                     ___fldiv@f2:
   683                           	opt stack 0
   684                           
   685                           ; 4 bytes @ 0x10
   686  000011                     	ds	4
   687  000015                     ___fldiv@f3:
   688                           	opt stack 0
   689                           
   690                           ; 4 bytes @ 0x14
   691  000015                     	ds	4
   692  000019                     ___fldiv@cntr:
   693                           	opt stack 0
   694                           
   695                           ; 1 bytes @ 0x18
   696  000019                     	ds	1
   697  00001A                     ___fldiv@exp:
   698                           	opt stack 0
   699                           
   700                           ; 1 bytes @ 0x19
   701  00001A                     	ds	1
   702  00001B                     ___fldiv@sign:
   703                           	opt stack 0
   704                           
   705                           ; 1 bytes @ 0x1A
   706  00001B                     	ds	1
   707  00001C                     ?___flmul:
   708                           	opt stack 0
   709  00001C                     ___flmul@f1:
   710                           	opt stack 0
   711                           
   712                           ; 4 bytes @ 0x1B
   713  00001C                     	ds	4
   714  000020                     ___flmul@f2:
   715                           	opt stack 0
   716                           
   717                           ; 4 bytes @ 0x1F
   718  000020                     	ds	4
   719  000024                     ??___flmul:
   720                           
   721                           ; 0 bytes @ 0x23
   722  000024                     	ds	12
   723  000030                     _format_number$128:
   724                           	opt stack 0
   725                           
   726                           ; 2 bytes @ 0x2F
   727  000030                     	ds	1
   728  000031                     ___flmul@exp:
   729                           	opt stack 0
   730                           
   731                           ; 1 bytes @ 0x30
   732  000031                     	ds	1
   733  000032                     format_number@padchar:
   734                           	opt stack 0
   735  000032                     ___flmul@sign:
   736                           	opt stack 0
   737                           
   738                           ; 1 bytes @ 0x31
   739  000032                     	ds	1
   740  000033                     format_number@di:
   741                           	opt stack 0
   742  000033                     ___flmul@f3_as_product:
   743                           	opt stack 0
   744                           
   745                           ; 4 bytes @ 0x32
   746  000033                     	ds	1
   747  000034                     format_number@i:
   748                           	opt stack 0
   749                           
   750                           ; 1 bytes @ 0x33
   751  000034                     	ds	1
   752  000035                     format_xint32@x:
   753                           	opt stack 0
   754                           
   755                           ; 4 bytes @ 0x34
   756  000035                     	ds	2
   757  000037                     ?___fladd:
   758                           	opt stack 0
   759  000037                     ___fladd@f1:
   760                           	opt stack 0
   761                           
   762                           ; 4 bytes @ 0x36
   763  000037                     	ds	2
   764  000039                     
   765                           ; 0 bytes @ 0x38
   766  000039                     	ds	2
   767  00003B                     ___fladd@f2:
   768                           	opt stack 0
   769                           
   770                           ; 4 bytes @ 0x3A
   771  00003B                     	ds	4
   772  00003F                     ??___fladd:
   773                           
   774                           ; 0 bytes @ 0x3E
   775  00003F                     	ds	1
   776  000040                     ___fladd@sign:
   777                           	opt stack 0
   778                           
   779                           ; 1 bytes @ 0x3F
   780  000040                     	ds	1
   781  000041                     ___fladd@exp2:
   782                           	opt stack 0
   783                           
   784                           ; 1 bytes @ 0x40
   785  000041                     	ds	1
   786  000042                     ___fladd@exp1:
   787                           	opt stack 0
   788                           
   789                           ; 1 bytes @ 0x41
   790  000042                     	ds	1
   791  000043                     ?___flsub:
   792                           	opt stack 0
   793  000043                     ?_eval_poly:
   794                           	opt stack 0
   795  000043                     ___flsub@f1:
   796                           	opt stack 0
   797  000043                     eval_poly@x:
   798                           	opt stack 0
   799                           
   800                           ; 4 bytes @ 0x42
   801  000043                     	ds	4
   802  000047                     eval_poly@d:
   803                           	opt stack 0
   804  000047                     ___flsub@f2:
   805                           	opt stack 0
   806                           
   807                           ; 4 bytes @ 0x46
   808  000047                     	ds	1
   809  000048                     eval_poly@n:
   810                           	opt stack 0
   811                           
   812                           ; 2 bytes @ 0x47
   813  000048                     	ds	2
   814  00004A                     ??_eval_poly:
   815                           
   816                           ; 0 bytes @ 0x49
   817  00004A                     	ds	1
   818  00004B                     eval_poly@res:
   819                           	opt stack 0
   820                           
   821                           ; 4 bytes @ 0x4A
   822  00004B                     	ds	4
   823  00004F                     ?_ldexp:
   824                           	opt stack 0
   825  00004F                     ?_log:
   826                           	opt stack 0
   827  00004F                     ldexp@value:
   828                           	opt stack 0
   829  00004F                     log@x:
   830                           	opt stack 0
   831                           
   832                           ; 4 bytes @ 0x4E
   833  00004F                     	ds	4
   834  000053                     ldexp@newexp:
   835                           	opt stack 0
   836  000053                     log@exponent:
   837                           	opt stack 0
   838                           
   839                           ; 2 bytes @ 0x52
   840  000053                     	ds	2
   841  000055                     ??_ldexp:
   842  000055                     ?_log10:
   843                           	opt stack 0
   844  000055                     log10@x:
   845                           	opt stack 0
   846                           
   847                           ; 4 bytes @ 0x54
   848  000055                     	ds	4
   849  000059                     _log10$931:
   850                           	opt stack 0
   851                           
   852                           ; 4 bytes @ 0x58
   853  000059                     	ds	4
   854  00005D                     ?___fltol:
   855                           	opt stack 0
   856  00005D                     ___fltol@f1:
   857                           	opt stack 0
   858                           
   859                           ; 4 bytes @ 0x5C
   860  00005D                     	ds	4
   861  000061                     ??___fltol:
   862                           
   863                           ; 0 bytes @ 0x60
   864  000061                     	ds	4
   865  000065                     ___fltol@sign1:
   866                           	opt stack 0
   867                           
   868                           ; 1 bytes @ 0x64
   869  000065                     	ds	1
   870  000066                     ___fltol@exp1:
   871                           	opt stack 0
   872                           
   873                           ; 1 bytes @ 0x65
   874  000066                     	ds	1
   875  000067                     ?___altofl:
   876                           	opt stack 0
   877  000067                     ___altofl@c:
   878                           	opt stack 0
   879                           
   880                           ; 4 bytes @ 0x66
   881  000067                     	ds	4
   882  00006B                     ___altofl@sign:
   883                           	opt stack 0
   884                           
   885                           ; 1 bytes @ 0x6A
   886  00006B                     	ds	1
   887  00006C                     ?_floor:
   888                           	opt stack 0
   889  00006C                     floor@x:
   890                           	opt stack 0
   891                           
   892                           ; 4 bytes @ 0x6B
   893  00006C                     	ds	4
   894  000070                     floor@i:
   895                           	opt stack 0
   896                           
   897                           ; 4 bytes @ 0x6F
   898  000070                     	ds	4
   899  000074                     floor@expon:
   900                           	opt stack 0
   901                           
   902                           ; 2 bytes @ 0x73
   903  000074                     	ds	2
   904  000076                     tblptru	equ	0xFF8
   905                           tblptrh	equ	0xFF7
   906                           tblptrl	equ	0xFF6
   907                           tablat	equ	0xFF5
   908                           postinc0	equ	0xFEE
   909                           wreg	equ	0xFE8
   910                           
   911                           ; 0 bytes @ 0x75
   912 ;;
   913 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   914 ;;
   915 ;; *************** function _main *****************
   916 ;; Defined at:
   917 ;;		line 115 in file "../../../src/LC-meter.c"
   918 ;; Parameters:    Size  Location     Type
   919 ;;		None
   920 ;; Auto vars:     Size  Location     Type
   921 ;;		None
   922 ;; Return value:  Size  Location     Type
   923 ;;		None               void
   924 ;; Registers used:
   925 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   926 ;; Tracked objects:
   927 ;;		On entry : 0/0
   928 ;;		On exit  : F/0
   929 ;;		Unchanged: 0/0
   930 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   931 ;;      Params:         0       0       0       0       0       0       0
   932 ;;      Locals:         0       0       0       0       0       0       0
   933 ;;      Temps:          0       0       0       0       0       0       0
   934 ;;      Totals:         0       0       0       0       0       0       0
   935 ;;Total ram usage:        0 bytes
   936 ;; Hardware stack levels required when called:    8
   937 ;; This function calls:
   938 ;;		_calibrate
   939 ;;		_delay10ms
   940 ;;		_indicator
   941 ;;		_measure_capacitance
   942 ;;		_measure_inductance
   943 ;;		_ser_init
   944 ;;		_ser_puts
   945 ;;		_timer2_init
   946 ;; This function is called by:
   947 ;;		Startup code after reset
   948 ;; This function uses a non-reentrant model
   949 ;;
   950                           
   951                           	psect	text0
   952  001B8E                     __ptext0:
   953                           	opt stack 0
   954  001B8E                     _main:
   955                           	opt stack 23
   956                           
   957                           ;incstack = 0
   958  001B8E  FFFF               	dw	65535
   959                           
   960                           ;LC-meter.c: 116: bres = msecpart = msecs = seconds = 0;
   961  001B90  0100               	movlb	0	; () banked
   962  001B92  6BE3               	clrf	_seconds& (0+255),b	;volatile
   963  001B94  6BE4               	clrf	(_seconds+1)& (0+255),b	;volatile
   964  001B96  6BE5               	clrf	(_seconds+2)& (0+255),b	;volatile
   965  001B98  6BE6               	clrf	(_seconds+3)& (0+255),b	;volatile
   966  001B9A  C0E3  F0DF         	movff	_seconds,_msecs	;volatile
   967  001B9E  C0E4  F0E0         	movff	_seconds+1,_msecs+1	;volatile
   968  001BA2  C0E5  F0E1         	movff	_seconds+2,_msecs+2	;volatile
   969  001BA6  C0E6  F0E2         	movff	_seconds+3,_msecs+3	;volatile
   970  001BAA  C0DF  F0F8         	movff	_msecs,_msecpart	;volatile
   971  001BAE  C0E0  F0F9         	movff	_msecs+1,_msecpart+1	;volatile
   972  001BB2  C0F8  F0F6         	movff	_msecpart,_bres	;volatile
   973  001BB6  C0F9  F0F7         	movff	_msecpart+1,_bres+1	;volatile
   974                           
   975                           ;LC-meter.c: 118: CCal = 1000;
   976  001BBA  6BF2               	clrf	_CCal& (0+255),b
   977  001BBC  6BF3               	clrf	(_CCal+1)& (0+255),b
   978  001BBE  0E7A               	movlw	122
   979  001BC0  6FF4               	movwf	(_CCal+2)& (0+255),b
   980  001BC2  0E44               	movlw	68
   981  001BC4  6FF5               	movwf	(_CCal+3)& (0+255),b
   982                           
   983                           ;LC-meter.c: 127: TRISA = 0b11001111;
   984  001BC6  0ECF               	movlw	207
   985  001BC8  6E92               	movwf	3986,c	;volatile
   986                           
   987                           ; BSR set to: 0
   988                           ;LC-meter.c: 129: T0CS = 1;
   989  001BCA  8AD5               	bsf	4053,5,c	;volatile
   990                           
   991                           ; BSR set to: 0
   992                           ;LC-meter.c: 130: T0SE = 1;
   993  001BCC  88D5               	bsf	4053,4,c	;volatile
   994                           
   995                           ; BSR set to: 0
   996                           ;LC-meter.c: 141: nRBPU = 0;
   997  001BCE  9EF1               	bcf	intcon2,7,c	;volatile
   998                           
   999                           ; BSR set to: 0
  1000                           ;LC-meter.c: 144: TRISC3 = 0;
  1001  001BD0  9694               	bcf	3988,3,c	;volatile
  1002                           
  1003                           ; BSR set to: 0
  1004                           ;LC-meter.c: 145: RC3 = ((1) == 0);
  1005  001BD2  9682               	bcf	3970,3,c	;volatile
  1006                           
  1007                           ; BSR set to: 0
  1008                           ;LC-meter.c: 147: SSPEN = 0;
  1009  001BD4  9AC6               	bcf	4038,5,c	;volatile
  1010                           
  1011                           ; BSR set to: 0
  1012                           ;LC-meter.c: 152: timer2_init(0b000 | 0x80);
  1013  001BD6  0E80               	movlw	128
  1014  001BD8  ECA1  F011         	call	_timer2_init
  1015                           
  1016                           ;LC-meter.c: 157: TRISC1 = 0;
  1017  001BDC  9294               	bcf	3988,1,c	;volatile
  1018                           
  1019                           ;LC-meter.c: 160: TRISC3 = 0;
  1020  001BDE  9694               	bcf	3988,3,c	;volatile
  1021                           
  1022                           ;LC-meter.c: 162: TRISC0 = 1;
  1023  001BE0  8094               	bsf	3988,0,c	;volatile
  1024                           
  1025                           ;LC-meter.c: 163: TRISC2 = 1;
  1026  001BE2  8494               	bsf	3988,2,c	;volatile
  1027                           
  1028                           ;LC-meter.c: 173: TRISC |= (1 << 4);
  1029  001BE4  8894               	bsf	3988,4,c	;volatile
  1030                           
  1031                           ;LC-meter.c: 174: TRISC &= ~(1 << 5);
  1032  001BE6  9A94               	bcf	3988,5,c	;volatile
  1033                           
  1034                           ;LC-meter.c: 176: PORTC &= ~(1 << 5);
  1035  001BE8  9A82               	bcf	3970,5,c	;volatile
  1036                           
  1037                           ;LC-meter.c: 177: delay10ms(50);
  1038  001BEA  6A04               	clrf	delay10ms@period_10ms+1,c
  1039  001BEC  0E32               	movlw	50
  1040  001BEE  6E03               	movwf	delay10ms@period_10ms,c
  1041  001BF0  EC16  F011         	call	_delay10ms	;wreg free
  1042                           
  1043                           ; BSR set to: 0
  1044                           ;LC-meter.c: 178: PORTC |= (1 << 5);
  1045  001BF4  8A82               	bsf	3970,5,c	;volatile
  1046                           
  1047                           ; BSR set to: 0
  1048                           ;LC-meter.c: 179: delay10ms(50);
  1049  001BF6  6A04               	clrf	delay10ms@period_10ms+1,c
  1050  001BF8  0E32               	movlw	50
  1051  001BFA  6E03               	movwf	delay10ms@period_10ms,c
  1052  001BFC  EC16  F011         	call	_delay10ms	;wreg free
  1053                           
  1054                           ; BSR set to: 0
  1055                           ;LC-meter.c: 180: PORTC &= ~(1 << 5);
  1056  001C00  9A82               	bcf	3970,5,c	;volatile
  1057                           
  1058                           ; BSR set to: 0
  1059                           ;LC-meter.c: 181: delay10ms(50);
  1060  001C02  6A04               	clrf	delay10ms@period_10ms+1,c
  1061  001C04  0E32               	movlw	50
  1062  001C06  6E03               	movwf	delay10ms@period_10ms,c
  1063  001C08  EC16  F011         	call	_delay10ms	;wreg free
  1064                           
  1065                           ; BSR set to: 0
  1066                           ;LC-meter.c: 182: PORTC |= (1 << 5);
  1067  001C0C  8A82               	bsf	3970,5,c	;volatile
  1068                           
  1069                           ; BSR set to: 0
  1070                           ;LC-meter.c: 183: delay10ms(50);
  1071  001C0E  6A04               	clrf	delay10ms@period_10ms+1,c
  1072  001C10  0E32               	movlw	50
  1073  001C12  6E03               	movwf	delay10ms@period_10ms,c
  1074  001C14  EC16  F011         	call	_delay10ms	;wreg free
  1075                           
  1076                           ; BSR set to: 0
  1077                           ;LC-meter.c: 184: PORTC &= ~(1 << 5);
  1078  001C18  9A82               	bcf	3970,5,c	;volatile
  1079                           
  1080                           ; BSR set to: 0
  1081                           ;LC-meter.c: 187: ser_init();
  1082  001C1A  ECF0  F012         	call	_ser_init	;wreg free
  1083                           
  1084                           ; BSR set to: 0
  1085                           ;LC-meter.c: 192: TRISC &= ~0b01000000;
  1086  001C1E  9C94               	bcf	3988,6,c	;volatile
  1087                           
  1088                           ; BSR set to: 0
  1089                           ;LC-meter.c: 194: PEIE = 1;
  1090  001C20  8CF2               	bsf	intcon,6,c	;volatile
  1091                           
  1092                           ; BSR set to: 0
  1093                           ;LC-meter.c: 195: GIE = 1;
  1094  001C22  8EF2               	bsf	intcon,7,c	;volatile
  1095                           
  1096                           ; BSR set to: 0
  1097                           ;LC-meter.c: 214: delay10ms(200);
  1098  001C24  6A04               	clrf	delay10ms@period_10ms+1,c
  1099  001C26  0EC8               	movlw	200
  1100  001C28  6E03               	movwf	delay10ms@period_10ms,c
  1101  001C2A  EC16  F011         	call	_delay10ms	;wreg free
  1102                           
  1103                           ; BSR set to: 0
  1104                           ;LC-meter.c: 217: calibrate();
  1105  001C2E  EC0D  F010         	call	_calibrate	;wreg free
  1106  001C32                     l3211:
  1107  001C32  FFFF               	dw	65535	; assembler added errata NOP
  1108                           
  1109                           ;LC-meter.c: 230: ser_puts("...\r\n");
  1110  001C34  0E55               	movlw	STR_1& (0+255)
  1111  001C36  ECA5  F012         	call	_ser_puts
  1112                           
  1113                           ;LC-meter.c: 231: if(RC4)
  1114  001C3A  A882               	btfss	3970,4,c	;volatile
  1115  001C3C  D003               	goto	l3217
  1116                           
  1117                           ;LC-meter.c: 232: measure_capacitance();
  1118  001C3E  ECCA  F005         	call	_measure_capacitance	;wreg free
  1119  001C42  D003               	goto	l3219
  1120  001C44                     l3217:
  1121  001C44  FFFF               	dw	65535	; assembler added errata NOP
  1122                           
  1123                           ;LC-meter.c: 233: else
  1124                           ;LC-meter.c: 234: measure_inductance();
  1125  001C46  EC3C  F003         	call	_measure_inductance	;wreg free
  1126  001C4A                     l3219:
  1127  001C4A  FFFF               	dw	65535	; assembler added errata NOP
  1128                           
  1129                           ; BSR set to: 0
  1130                           ;LC-meter.c: 236: indicator(1);
  1131  001C4C  0E01               	movlw	1
  1132  001C4E  EC3A  F013         	call	_indicator
  1133                           
  1134                           ; BSR set to: 0
  1135                           ;LC-meter.c: 237: delay10ms(30);
  1136  001C52  6A04               	clrf	delay10ms@period_10ms+1,c
  1137  001C54  0E1E               	movlw	30
  1138  001C56  6E03               	movwf	delay10ms@period_10ms,c
  1139  001C58  EC16  F011         	call	_delay10ms	;wreg free
  1140                           
  1141                           ; BSR set to: 0
  1142                           ;LC-meter.c: 238: indicator(0);
  1143  001C5C  0E00               	movlw	0
  1144  001C5E  EC3A  F013         	call	_indicator
  1145                           
  1146                           ; BSR set to: 0
  1147                           ;LC-meter.c: 239: delay10ms(20);
  1148  001C62  6A04               	clrf	delay10ms@period_10ms+1,c
  1149  001C64  0E14               	movlw	20
  1150  001C66  6E03               	movwf	delay10ms@period_10ms,c
  1151  001C68  EC16  F011         	call	_delay10ms	;wreg free
  1152                           
  1153                           ;LC-meter.c: 240: }
  1154  001C6C  D7E2               	goto	l3211
  1155  001C6E                     __end_of_main:
  1156                           	opt stack 0
  1157                           tblptru	equ	0xFF8
  1158                           tblptrh	equ	0xFF7
  1159                           tblptrl	equ	0xFF6
  1160                           tablat	equ	0xFF5
  1161                           intcon	equ	0xFF2
  1162                           intcon2	equ	0xFF1
  1163                           postinc0	equ	0xFEE
  1164                           wreg	equ	0xFE8
  1165                           
  1166 ;; *************** function _timer2_init *****************
  1167 ;; Defined at:
  1168 ;;		line 81 in file "../../../lib/timer.c"
  1169 ;; Parameters:    Size  Location     Type
  1170 ;;  ps_mode         1    wreg     unsigned char 
  1171 ;; Auto vars:     Size  Location     Type
  1172 ;;  ps_mode         1    3[COMRAM] unsigned char 
  1173 ;;  postscaler      1    0        unsigned char 
  1174 ;;  ps              1    4[COMRAM] unsigned char 
  1175 ;; Return value:  Size  Location     Type
  1176 ;;		None               void
  1177 ;; Registers used:
  1178 ;;		wreg, status,2, status,0
  1179 ;; Tracked objects:
  1180 ;;		On entry : F/0
  1181 ;;		On exit  : 0/0
  1182 ;;		Unchanged: 0/0
  1183 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1184 ;;      Params:         0       0       0       0       0       0       0
  1185 ;;      Locals:         3       0       0       0       0       0       0
  1186 ;;      Temps:          1       0       0       0       0       0       0
  1187 ;;      Totals:         4       0       0       0       0       0       0
  1188 ;;Total ram usage:        4 bytes
  1189 ;; Hardware stack levels used:    1
  1190 ;; Hardware stack levels required when called:    1
  1191 ;; This function calls:
  1192 ;;		Nothing
  1193 ;; This function is called by:
  1194 ;;		_main
  1195 ;; This function uses a non-reentrant model
  1196 ;;
  1197                           
  1198                           	psect	text1
  1199  002342                     __ptext1:
  1200                           	opt stack 0
  1201  002342                     _timer2_init:
  1202                           	opt stack 29
  1203                           
  1204                           ; BSR set to: 0
  1205                           ;incstack = 0
  1206  002342  FFFF               	dw	65535
  1207                           
  1208                           ;timer2_init@ps_mode stored from wreg
  1209  002344  6E04               	movwf	timer2_init@ps_mode,c
  1210                           
  1211                           ; BSR set to: 0
  1212                           ;timer.c: 82: unsigned char ps = ps_mode & 0b1111;
  1213  002346  5004               	movf	timer2_init@ps_mode,w,c
  1214  002348  0B0F               	andlw	15
  1215  00234A  6E05               	movwf	timer2_init@ps,c
  1216                           
  1217                           ; BSR set to: 0
  1218                           ;timer.c: 86: TOUTPS0 = postscaler & 1;
  1219                           
  1220                           ; BSR set to: 0
  1221  00234C  96CA               	bcf	4042,3,c	;volatile
  1222                           
  1223                           ;timer.c: 87: TOUTPS1 = (postscaler >> 1) & 1;
  1224  00234E  98CA               	bcf	4042,4,c	;volatile
  1225                           
  1226                           ;timer.c: 88: TOUTPS2 = (postscaler >> 2) & 1;
  1227  002350  9ACA               	bcf	4042,5,c	;volatile
  1228                           
  1229                           ;timer.c: 90: T2CKPS0 = (ps >> 1) & 1;
  1230  002352  C005  F003         	movff	timer2_init@ps,??_timer2_init
  1231  002356  90D8               	bcf	status,0,c
  1232  002358  3203               	rrcf	??_timer2_init,f,c
  1233  00235A  3003               	rrcf	??_timer2_init,w,c
  1234  00235C  B0D8               	btfsc	status,0,c
  1235  00235E  D002               	bra	u2255
  1236  002360  90CA               	bcf	4042,0,c	;volatile
  1237  002362  D001               	bra	u2256
  1238  002364                     u2255:
  1239  002364  80CA               	bsf	4042,0,c	;volatile
  1240  002366                     u2256:
  1241                           
  1242                           ;timer.c: 91: T2CKPS1 = (ps >> 2) & 1;
  1243  002366  C005  F003         	movff	timer2_init@ps,??_timer2_init
  1244  00236A  90D8               	bcf	status,0,c
  1245  00236C  3203               	rrcf	??_timer2_init,f,c
  1246  00236E  90D8               	bcf	status,0,c
  1247  002370  3203               	rrcf	??_timer2_init,f,c
  1248  002372  3003               	rrcf	??_timer2_init,w,c
  1249  002374  B0D8               	btfsc	status,0,c
  1250  002376  D002               	bra	u2265
  1251  002378  92CA               	bcf	4042,1,c	;volatile
  1252  00237A  D001               	bra	u2266
  1253  00237C                     u2265:
  1254  00237C  82CA               	bsf	4042,1,c	;volatile
  1255  00237E                     u2266:
  1256                           
  1257                           ;timer.c: 93: TMR2 = 0;
  1258  00237E  6ACC               	clrf	4044,c	;volatile
  1259                           
  1260                           ;timer.c: 95: TMR2ON = 1;
  1261  002380  84CA               	bsf	4042,2,c	;volatile
  1262                           
  1263                           ;timer.c: 97: TMR2IF = 0;
  1264  002382  929E               	bcf	3998,1,c	;volatile
  1265                           
  1266                           ;timer.c: 98: TMR2IE = !!(ps_mode & 0x80);
  1267  002384  AE04               	btfss	timer2_init@ps_mode,7,c
  1268  002386  D002               	goto	u2270
  1269  002388  829D               	bsf	3997,1,c	;volatile
  1270  00238A  D002               	goto	l135
  1271  00238C                     u2270:
  1272  00238C  FFFF               	dw	65535	; assembler added errata NOP
  1273  00238E  929D               	bcf	3997,1,c	;volatile
  1274  002390                     l135:
  1275  002390  FFFF               	dw	65535	; assembler added errata NOP
  1276  002392  0012               	return		;funcret
  1277  002394  FFFF               	dw	65535	; errata NOP
  1278  002396                     __end_of_timer2_init:
  1279                           	opt stack 0
  1280                           tblptru	equ	0xFF8
  1281                           tblptrh	equ	0xFF7
  1282                           tblptrl	equ	0xFF6
  1283                           tablat	equ	0xFF5
  1284                           intcon	equ	0xFF2
  1285                           intcon2	equ	0xFF1
  1286                           postinc0	equ	0xFEE
  1287                           wreg	equ	0xFE8
  1288                           status	equ	0xFD8
  1289                           
  1290 ;; *************** function _ser_init *****************
  1291 ;; Defined at:
  1292 ;;		line 125 in file "../../../lib/ser.c"
  1293 ;; Parameters:    Size  Location     Type
  1294 ;;		None
  1295 ;; Auto vars:     Size  Location     Type
  1296 ;;		None
  1297 ;; Return value:  Size  Location     Type
  1298 ;;		None               void
  1299 ;; Registers used:
  1300 ;;		wreg, status,2
  1301 ;; Tracked objects:
  1302 ;;		On entry : F/0
  1303 ;;		On exit  : F/0
  1304 ;;		Unchanged: F/0
  1305 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1306 ;;      Params:         0       0       0       0       0       0       0
  1307 ;;      Locals:         0       0       0       0       0       0       0
  1308 ;;      Temps:          0       0       0       0       0       0       0
  1309 ;;      Totals:         0       0       0       0       0       0       0
  1310 ;;Total ram usage:        0 bytes
  1311 ;; Hardware stack levels used:    1
  1312 ;; Hardware stack levels required when called:    1
  1313 ;; This function calls:
  1314 ;;		Nothing
  1315 ;; This function is called by:
  1316 ;;		_main
  1317 ;; This function uses a non-reentrant model
  1318 ;;
  1319                           
  1320                           	psect	text2
  1321  0025E0                     __ptext2:
  1322                           	opt stack 0
  1323  0025E0                     _ser_init:
  1324                           	opt stack 29
  1325                           
  1326                           ;incstack = 0
  1327  0025E0  FFFF               	dw	65535
  1328                           
  1329                           ; BSR set to: 0
  1330                           ;ser.c: 128: TRISC6 = 1;
  1331  0025E2  8C94               	bsf	3988,6,c	;volatile
  1332                           
  1333                           ;ser.c: 129: RC7 = 1;
  1334  0025E4  8E82               	bsf	3970,7,c	;volatile
  1335                           
  1336                           ;ser.c: 131: BRGH = 1;
  1337  0025E6  84AC               	bsf	4012,2,c	;volatile
  1338                           
  1339                           ; BSR set to: 0
  1340                           ;ser.c: 136: SPBRG = ser_brg;
  1341  0025E8  0E1F               	movlw	31
  1342  0025EA  6EAF               	movwf	4015,c	;volatile
  1343                           
  1344                           ; BSR set to: 0
  1345                           ;ser.c: 139: TX9 = 0;
  1346  0025EC  9CAC               	bcf	4012,6,c	;volatile
  1347                           
  1348                           ; BSR set to: 0
  1349                           ;ser.c: 140: RX9 = 0;
  1350  0025EE  9CAB               	bcf	4011,6,c	;volatile
  1351                           
  1352                           ; BSR set to: 0
  1353                           ;ser.c: 142: SYNC = 0;
  1354  0025F0  98AC               	bcf	4012,4,c	;volatile
  1355                           
  1356                           ; BSR set to: 0
  1357                           ;ser.c: 143: SPEN = 1;
  1358  0025F2  8EAB               	bsf	4011,7,c	;volatile
  1359                           
  1360                           ; BSR set to: 0
  1361                           ;ser.c: 144: CREN = 1;
  1362  0025F4  88AB               	bsf	4011,4,c	;volatile
  1363                           
  1364                           ; BSR set to: 0
  1365                           ;ser.c: 145: TXIE = 0;
  1366  0025F6  989D               	bcf	3997,4,c	;volatile
  1367                           
  1368                           ; BSR set to: 0
  1369                           ;ser.c: 147: TXEN = 1;
  1370  0025F8  8AAC               	bsf	4012,5,c	;volatile
  1371                           
  1372                           ; BSR set to: 0
  1373                           ;ser.c: 148: PEIE = 1;
  1374  0025FA  8CF2               	bsf	intcon,6,c	;volatile
  1375                           
  1376                           ; BSR set to: 0
  1377                           ;ser.c: 150: rxiptr = rxoptr = txiptr = txoptr = 0;
  1378  0025FC  6A79               	clrf	_txoptr,c	;volatile
  1379  0025FE  6A78               	clrf	_txiptr,c	;volatile
  1380  002600  6A77               	clrf	_rxoptr,c	;volatile
  1381  002602  6A76               	clrf	_rxiptr,c	;volatile
  1382                           
  1383                           ; BSR set to: 0
  1384  002604  0012               	return		;funcret
  1385  002606  FFFF               	dw	65535	; errata NOP
  1386  002608                     __end_of_ser_init:
  1387                           	opt stack 0
  1388                           tblptru	equ	0xFF8
  1389                           tblptrh	equ	0xFF7
  1390                           tblptrl	equ	0xFF6
  1391                           tablat	equ	0xFF5
  1392                           intcon	equ	0xFF2
  1393                           intcon2	equ	0xFF1
  1394                           postinc0	equ	0xFEE
  1395                           wreg	equ	0xFE8
  1396                           status	equ	0xFD8
  1397                           
  1398 ;; *************** function _measure_inductance *****************
  1399 ;; Defined at:
  1400 ;;		line 469 in file "../../../src/LC-meter.c"
  1401 ;; Parameters:    Size  Location     Type
  1402 ;;		None
  1403 ;; Auto vars:     Size  Location     Type
  1404 ;;  Lin             4   39[BANK0 ] unsigned char 
  1405 ;;  denominator     4    4[BANK0 ] unsigned char 
  1406 ;;  numerator       4    0[BANK0 ] unsigned char 
  1407 ;;  var             2   37[BANK0 ] unsigned short 
  1408 ;;  unit            1   24[BANK0 ] unsigned char 
  1409 ;; Return value:  Size  Location     Type
  1410 ;;		None               void
  1411 ;; Registers used:
  1412 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1413 ;; Tracked objects:
  1414 ;;		On entry : 0/0
  1415 ;;		On exit  : F/0
  1416 ;;		Unchanged: 0/0
  1417 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1418 ;;      Params:         0       0       0       0       0       0       0
  1419 ;;      Locals:         0      43       0       0       0       0       0
  1420 ;;      Temps:          0       0       0       0       0       0       0
  1421 ;;      Totals:         0      43       0       0       0       0       0
  1422 ;;Total ram usage:       43 bytes
  1423 ;; Hardware stack levels used:    1
  1424 ;; Hardware stack levels required when called:    4
  1425 ;; This function calls:
  1426 ;;		___fldiv
  1427 ;;		___flge
  1428 ;;		___flmul
  1429 ;;		___flsub
  1430 ;;		___fltol
  1431 ;;		___lwtofl
  1432 ;;		_measure_freq
  1433 ;;		_print_reading
  1434 ;;		_print_unit
  1435 ;; This function is called by:
  1436 ;;		_main
  1437 ;; This function uses a non-reentrant model
  1438 ;;
  1439                           
  1440                           	psect	text3
  1441  000678                     __ptext3:
  1442                           	opt stack 0
  1443  000678                     _measure_inductance:
  1444                           	opt stack 26
  1445                           
  1446                           ; BSR set to: 0
  1447                           ;incstack = 0
  1448  000678  FFFF               	dw	65535
  1449                           
  1450                           ;LC-meter.c: 470: unsigned char unit;
  1451                           ;LC-meter.c: 471: unsigned short int var;
  1452                           ;LC-meter.c: 473: double Lin, numerator, denominator;
  1453                           ;LC-meter.c: 479: var = measure_freq();
  1454  00067A  EC60  F010         	call	_measure_freq	;wreg free
  1455  00067E  C003  F0A5         	movff	?_measure_freq,measure_inductance@var
  1456  000682  C004  F0A6         	movff	?_measure_freq+1,measure_inductance@var+1
  1457                           
  1458                           ;LC-meter.c: 481: F3 = (double)var;
  1459  000686  C0A5  F00D         	movff	measure_inductance@var,___lwtofl@c
  1460  00068A  C0A6  F00E         	movff	measure_inductance@var+1,___lwtofl@c+1
  1461  00068E  ECD9  F012         	call	___lwtofl	;wreg free
  1462  000692  C00D  F0DB         	movff	?___lwtofl,_F3
  1463  000696  C00E  F0DC         	movff	?___lwtofl+1,_F3+1
  1464  00069A  C00F  F0DD         	movff	?___lwtofl+2,_F3+2
  1465  00069E  C010  F0DE         	movff	?___lwtofl+3,_F3+3
  1466                           
  1467                           ;LC-meter.c: 482: if(F3 > F1)
  1468  0006A2  C0EE  F003         	movff	_F1,___flge@ff1
  1469  0006A6  C0EF  F004         	movff	_F1+1,___flge@ff1+1
  1470  0006AA  C0F0  F005         	movff	_F1+2,___flge@ff1+2
  1471  0006AE  C0F1  F006         	movff	_F1+3,___flge@ff1+3
  1472  0006B2  C0DB  F007         	movff	_F3,___flge@ff2
  1473  0006B6  C0DC  F008         	movff	_F3+1,___flge@ff2+1
  1474  0006BA  C0DD  F009         	movff	_F3+2,___flge@ff2+2
  1475  0006BE  C0DE  F00A         	movff	_F3+3,___flge@ff2+3
  1476  0006C2  EC76  F011         	call	___flge	;wreg free
  1477  0006C6  E208               	bc	l2795
  1478                           
  1479                           ;LC-meter.c: 483: F3 = F1;
  1480  0006C8  C0EE  F0DB         	movff	_F1,_F3
  1481  0006CC  C0EF  F0DC         	movff	_F1+1,_F3+1
  1482  0006D0  C0F0  F0DD         	movff	_F1+2,_F3+2
  1483  0006D4  C0F1  F0DE         	movff	_F1+3,_F3+3
  1484  0006D8                     l2795:
  1485                           
  1486                           ;LC-meter.c: 485: numerator = ((F1 * F1) - (F3 * F3)) * ((F1 * F1) - (F2 - F2)) * (100 *
      +                           100);
  1487  0006D8  C0D7  F047         	movff	_F2,___flsub@f2
  1488  0006DC  C0D8  F048         	movff	_F2+1,___flsub@f2+1
  1489  0006E0  C0D9  F049         	movff	_F2+2,___flsub@f2+2
  1490  0006E4  C0DA  F04A         	movff	_F2+3,___flsub@f2+3
  1491  0006E8  C0D7  F043         	movff	_F2,___flsub@f1
  1492  0006EC  C0D8  F044         	movff	_F2+1,___flsub@f1+1
  1493  0006F0  C0D9  F045         	movff	_F2+2,___flsub@f1+2
  1494  0006F4  C0DA  F046         	movff	_F2+3,___flsub@f1+3
  1495  0006F8  EC40  F012         	call	___flsub	;wreg free
  1496  0006FC  C043  F088         	movff	?___flsub,_measure_inductance$924
  1497  000700  C044  F089         	movff	?___flsub+1,_measure_inductance$924+1
  1498  000704  C045  F08A         	movff	?___flsub+2,_measure_inductance$924+2
  1499  000708  C046  F08B         	movff	?___flsub+3,_measure_inductance$924+3
  1500                           
  1501                           ;LC-meter.c: 485: numerator = ((F1 * F1) - (F3 * F3)) * ((F1 * F1) - (F2 - F2)) * (100 *
      +                           100);
  1502  00070C  C088  F047         	movff	_measure_inductance$924,___flsub@f2
  1503  000710  C089  F048         	movff	_measure_inductance$924+1,___flsub@f2+1
  1504  000714  C08A  F049         	movff	_measure_inductance$924+2,___flsub@f2+2
  1505  000718  C08B  F04A         	movff	_measure_inductance$924+3,___flsub@f2+3
  1506  00071C  C0EE  F020         	movff	_F1,___flmul@f2
  1507  000720  C0EF  F021         	movff	_F1+1,___flmul@f2+1
  1508  000724  C0F0  F022         	movff	_F1+2,___flmul@f2+2
  1509  000728  C0F1  F023         	movff	_F1+3,___flmul@f2+3
  1510  00072C  C0EE  F01C         	movff	_F1,___flmul@f1
  1511  000730  C0EF  F01D         	movff	_F1+1,___flmul@f1+1
  1512  000734  C0F0  F01E         	movff	_F1+2,___flmul@f1+2
  1513  000738  C0F1  F01F         	movff	_F1+3,___flmul@f1+3
  1514  00073C  ECD6  F009         	call	___flmul	;wreg free
  1515  000740  C01C  F043         	movff	?___flmul,___flsub@f1
  1516  000744  C01D  F044         	movff	?___flmul+1,___flsub@f1+1
  1517  000748  C01E  F045         	movff	?___flmul+2,___flsub@f1+2
  1518  00074C  C01F  F046         	movff	?___flmul+3,___flsub@f1+3
  1519  000750  EC40  F012         	call	___flsub	;wreg free
  1520  000754  C043  F099         	movff	?___flsub,_measure_inductance$925
  1521  000758  C044  F09A         	movff	?___flsub+1,_measure_inductance$925+1
  1522  00075C  C045  F09B         	movff	?___flsub+2,_measure_inductance$925+2
  1523  000760  C046  F09C         	movff	?___flsub+3,_measure_inductance$925+3
  1524                           
  1525                           ;LC-meter.c: 485: numerator = ((F1 * F1) - (F3 * F3)) * ((F1 * F1) - (F2 - F2)) * (100 *
      +                           100);
  1526  000764  C0DB  F020         	movff	_F3,___flmul@f2
  1527  000768  C0DC  F021         	movff	_F3+1,___flmul@f2+1
  1528  00076C  C0DD  F022         	movff	_F3+2,___flmul@f2+2
  1529  000770  C0DE  F023         	movff	_F3+3,___flmul@f2+3
  1530  000774  C0DB  F01C         	movff	_F3,___flmul@f1
  1531  000778  C0DC  F01D         	movff	_F3+1,___flmul@f1+1
  1532  00077C  C0DD  F01E         	movff	_F3+2,___flmul@f1+2
  1533  000780  C0DE  F01F         	movff	_F3+3,___flmul@f1+3
  1534  000784  ECD6  F009         	call	___flmul	;wreg free
  1535  000788  C01C  F047         	movff	?___flmul,___flsub@f2
  1536  00078C  C01D  F048         	movff	?___flmul+1,___flsub@f2+1
  1537  000790  C01E  F049         	movff	?___flmul+2,___flsub@f2+2
  1538  000794  C01F  F04A         	movff	?___flmul+3,___flsub@f2+3
  1539  000798  C0EE  F020         	movff	_F1,___flmul@f2
  1540  00079C  C0EF  F021         	movff	_F1+1,___flmul@f2+1
  1541  0007A0  C0F0  F022         	movff	_F1+2,___flmul@f2+2
  1542  0007A4  C0F1  F023         	movff	_F1+3,___flmul@f2+3
  1543  0007A8  C0EE  F01C         	movff	_F1,___flmul@f1
  1544  0007AC  C0EF  F01D         	movff	_F1+1,___flmul@f1+1
  1545  0007B0  C0F0  F01E         	movff	_F1+2,___flmul@f1+2
  1546  0007B4  C0F1  F01F         	movff	_F1+3,___flmul@f1+3
  1547  0007B8  ECD6  F009         	call	___flmul	;wreg free
  1548  0007BC  C01C  F043         	movff	?___flmul,___flsub@f1
  1549  0007C0  C01D  F044         	movff	?___flmul+1,___flsub@f1+1
  1550  0007C4  C01E  F045         	movff	?___flmul+2,___flsub@f1+2
  1551  0007C8  C01F  F046         	movff	?___flmul+3,___flsub@f1+3
  1552  0007CC  EC40  F012         	call	___flsub	;wreg free
  1553  0007D0  C043  F09D         	movff	?___flsub,_measure_inductance$926
  1554  0007D4  C044  F09E         	movff	?___flsub+1,_measure_inductance$926+1
  1555  0007D8  C045  F09F         	movff	?___flsub+2,_measure_inductance$926+2
  1556  0007DC  C046  F0A0         	movff	?___flsub+3,_measure_inductance$926+3
  1557                           
  1558                           ;LC-meter.c: 485: numerator = ((F1 * F1) - (F3 * F3)) * ((F1 * F1) - (F2 - F2)) * (100 *
      +                           100);
  1559  0007E0  C099  F020         	movff	_measure_inductance$925,___flmul@f2
  1560  0007E4  C09A  F021         	movff	_measure_inductance$925+1,___flmul@f2+1
  1561  0007E8  C09B  F022         	movff	_measure_inductance$925+2,___flmul@f2+2
  1562  0007EC  C09C  F023         	movff	_measure_inductance$925+3,___flmul@f2+3
  1563  0007F0  C09D  F01C         	movff	_measure_inductance$926,___flmul@f1
  1564  0007F4  C09E  F01D         	movff	_measure_inductance$926+1,___flmul@f1+1
  1565  0007F8  C09F  F01E         	movff	_measure_inductance$926+2,___flmul@f1+2
  1566  0007FC  C0A0  F01F         	movff	_measure_inductance$926+3,___flmul@f1+3
  1567  000800  ECD6  F009         	call	___flmul	;wreg free
  1568  000804  C01C  F0A1         	movff	?___flmul,_measure_inductance$927
  1569  000808  C01D  F0A2         	movff	?___flmul+1,_measure_inductance$927+1
  1570  00080C  C01E  F0A3         	movff	?___flmul+2,_measure_inductance$927+2
  1571  000810  C01F  F0A4         	movff	?___flmul+3,_measure_inductance$927+3
  1572                           
  1573                           ;LC-meter.c: 485: numerator = ((F1 * F1) - (F3 * F3)) * ((F1 * F1) - (F2 - F2)) * (100 *
      +                           100);
  1574  000814  C0A1  F01C         	movff	_measure_inductance$927,___flmul@f1
  1575  000818  C0A2  F01D         	movff	_measure_inductance$927+1,___flmul@f1+1
  1576  00081C  C0A3  F01E         	movff	_measure_inductance$927+2,___flmul@f1+2
  1577  000820  C0A4  F01F         	movff	_measure_inductance$927+3,___flmul@f1+3
  1578  000824  0E00               	movlw	0
  1579  000826  6E20               	movwf	___flmul@f2,c
  1580  000828  0E40               	movlw	64
  1581  00082A  6E21               	movwf	___flmul@f2+1,c
  1582  00082C  0E1C               	movlw	28
  1583  00082E  6E22               	movwf	___flmul@f2+2,c
  1584  000830  0E46               	movlw	70
  1585  000832  6E23               	movwf	___flmul@f2+3,c
  1586  000834  ECD6  F009         	call	___flmul	;wreg free
  1587  000838  C01C  F080         	movff	?___flmul,measure_inductance@numerator
  1588  00083C  C01D  F081         	movff	?___flmul+1,measure_inductance@numerator+1
  1589  000840  C01E  F082         	movff	?___flmul+2,measure_inductance@numerator+2
  1590  000844  C01F  F083         	movff	?___flmul+3,measure_inductance@numerator+3
  1591                           
  1592                           ;LC-meter.c: 487: denominator = 4 * 3.14159265358979323846l * 3.14159265358979323846l * 
      +                          F1 * F1 * F2 * F2 * F3 * F3 * CCal;
  1593  000848  C0EE  F020         	movff	_F1,___flmul@f2
  1594  00084C  C0EF  F021         	movff	_F1+1,___flmul@f2+1
  1595  000850  C0F0  F022         	movff	_F1+2,___flmul@f2+2
  1596  000854  C0F1  F023         	movff	_F1+3,___flmul@f2+3
  1597  000858  C0EE  F01C         	movff	_F1,___flmul@f1
  1598  00085C  C0EF  F01D         	movff	_F1+1,___flmul@f1+1
  1599  000860  C0F0  F01E         	movff	_F1+2,___flmul@f1+2
  1600  000864  C0F1  F01F         	movff	_F1+3,___flmul@f1+3
  1601  000868  ECD6  F009         	call	___flmul	;wreg free
  1602  00086C  C01C  F08C         	movff	?___flmul,_measure_inductance$928
  1603  000870  C01D  F08D         	movff	?___flmul+1,_measure_inductance$928+1
  1604  000874  C01E  F08E         	movff	?___flmul+2,_measure_inductance$928+2
  1605  000878  C01F  F08F         	movff	?___flmul+3,_measure_inductance$928+3
  1606                           
  1607                           ;LC-meter.c: 487: denominator = 4 * 3.14159265358979323846l * 3.14159265358979323846l * 
      +                          F1 * F1 * F2 * F2 * F3 * F3 * CCal;
  1608  00087C  C0D7  F020         	movff	_F2,___flmul@f2
  1609  000880  C0D8  F021         	movff	_F2+1,___flmul@f2+1
  1610  000884  C0D9  F022         	movff	_F2+2,___flmul@f2+2
  1611  000888  C0DA  F023         	movff	_F2+3,___flmul@f2+3
  1612  00088C  C08C  F01C         	movff	_measure_inductance$928,___flmul@f1
  1613  000890  C08D  F01D         	movff	_measure_inductance$928+1,___flmul@f1+1
  1614  000894  C08E  F01E         	movff	_measure_inductance$928+2,___flmul@f1+2
  1615  000898  C08F  F01F         	movff	_measure_inductance$928+3,___flmul@f1+3
  1616  00089C  ECD6  F009         	call	___flmul	;wreg free
  1617  0008A0  C01C  F099         	movff	?___flmul,_measure_inductance$925
  1618  0008A4  C01D  F09A         	movff	?___flmul+1,_measure_inductance$925+1
  1619  0008A8  C01E  F09B         	movff	?___flmul+2,_measure_inductance$925+2
  1620  0008AC  C01F  F09C         	movff	?___flmul+3,_measure_inductance$925+3
  1621                           
  1622                           ;LC-meter.c: 487: denominator = 4 * 3.14159265358979323846l * 3.14159265358979323846l * 
      +                          F1 * F1 * F2 * F2 * F3 * F3 * CCal;
  1623  0008B0  C0D7  F020         	movff	_F2,___flmul@f2
  1624  0008B4  C0D8  F021         	movff	_F2+1,___flmul@f2+1
  1625  0008B8  C0D9  F022         	movff	_F2+2,___flmul@f2+2
  1626  0008BC  C0DA  F023         	movff	_F2+3,___flmul@f2+3
  1627  0008C0  C099  F01C         	movff	_measure_inductance$925,___flmul@f1
  1628  0008C4  C09A  F01D         	movff	_measure_inductance$925+1,___flmul@f1+1
  1629  0008C8  C09B  F01E         	movff	_measure_inductance$925+2,___flmul@f1+2
  1630  0008CC  C09C  F01F         	movff	_measure_inductance$925+3,___flmul@f1+3
  1631  0008D0  ECD6  F009         	call	___flmul	;wreg free
  1632  0008D4  C01C  F09D         	movff	?___flmul,_measure_inductance$926
  1633  0008D8  C01D  F09E         	movff	?___flmul+1,_measure_inductance$926+1
  1634  0008DC  C01E  F09F         	movff	?___flmul+2,_measure_inductance$926+2
  1635  0008E0  C01F  F0A0         	movff	?___flmul+3,_measure_inductance$926+3
  1636                           
  1637                           ;LC-meter.c: 487: denominator = 4 * 3.14159265358979323846l * 3.14159265358979323846l * 
      +                          F1 * F1 * F2 * F2 * F3 * F3 * CCal;
  1638  0008E4  C0DB  F020         	movff	_F3,___flmul@f2
  1639  0008E8  C0DC  F021         	movff	_F3+1,___flmul@f2+1
  1640  0008EC  C0DD  F022         	movff	_F3+2,___flmul@f2+2
  1641  0008F0  C0DE  F023         	movff	_F3+3,___flmul@f2+3
  1642  0008F4  C09D  F01C         	movff	_measure_inductance$926,___flmul@f1
  1643  0008F8  C09E  F01D         	movff	_measure_inductance$926+1,___flmul@f1+1
  1644  0008FC  C09F  F01E         	movff	_measure_inductance$926+2,___flmul@f1+2
  1645  000900  C0A0  F01F         	movff	_measure_inductance$926+3,___flmul@f1+3
  1646  000904  ECD6  F009         	call	___flmul	;wreg free
  1647  000908  C01C  F0A1         	movff	?___flmul,_measure_inductance$927
  1648  00090C  C01D  F0A2         	movff	?___flmul+1,_measure_inductance$927+1
  1649  000910  C01E  F0A3         	movff	?___flmul+2,_measure_inductance$927+2
  1650  000914  C01F  F0A4         	movff	?___flmul+3,_measure_inductance$927+3
  1651                           
  1652                           ;LC-meter.c: 487: denominator = 4 * 3.14159265358979323846l * 3.14159265358979323846l * 
      +                          F1 * F1 * F2 * F2 * F3 * F3 * CCal;
  1653  000918  C0DB  F020         	movff	_F3,___flmul@f2
  1654  00091C  C0DC  F021         	movff	_F3+1,___flmul@f2+1
  1655  000920  C0DD  F022         	movff	_F3+2,___flmul@f2+2
  1656  000924  C0DE  F023         	movff	_F3+3,___flmul@f2+3
  1657  000928  C0A1  F01C         	movff	_measure_inductance$927,___flmul@f1
  1658  00092C  C0A2  F01D         	movff	_measure_inductance$927+1,___flmul@f1+1
  1659  000930  C0A3  F01E         	movff	_measure_inductance$927+2,___flmul@f1+2
  1660  000934  C0A4  F01F         	movff	_measure_inductance$927+3,___flmul@f1+3
  1661  000938  ECD6  F009         	call	___flmul	;wreg free
  1662  00093C  C01C  F090         	movff	?___flmul,_measure_inductance$929
  1663  000940  C01D  F091         	movff	?___flmul+1,_measure_inductance$929+1
  1664  000944  C01E  F092         	movff	?___flmul+2,_measure_inductance$929+2
  1665  000948  C01F  F093         	movff	?___flmul+3,_measure_inductance$929+3
  1666                           
  1667                           ;LC-meter.c: 487: denominator = 4 * 3.14159265358979323846l * 3.14159265358979323846l * 
      +                          F1 * F1 * F2 * F2 * F3 * F3 * CCal;
  1668  00094C  C0F2  F020         	movff	_CCal,___flmul@f2
  1669  000950  C0F3  F021         	movff	_CCal+1,___flmul@f2+1
  1670  000954  C0F4  F022         	movff	_CCal+2,___flmul@f2+2
  1671  000958  C0F5  F023         	movff	_CCal+3,___flmul@f2+3
  1672  00095C  C090  F01C         	movff	_measure_inductance$929,___flmul@f1
  1673  000960  C091  F01D         	movff	_measure_inductance$929+1,___flmul@f1+1
  1674  000964  C092  F01E         	movff	_measure_inductance$929+2,___flmul@f1+2
  1675  000968  C093  F01F         	movff	_measure_inductance$929+3,___flmul@f1+3
  1676  00096C  ECD6  F009         	call	___flmul	;wreg free
  1677  000970  C01C  F094         	movff	?___flmul,_measure_inductance$930
  1678  000974  C01D  F095         	movff	?___flmul+1,_measure_inductance$930+1
  1679  000978  C01E  F096         	movff	?___flmul+2,_measure_inductance$930+2
  1680  00097C  C01F  F097         	movff	?___flmul+3,_measure_inductance$930+3
  1681                           
  1682                           ;LC-meter.c: 487: denominator = 4 * 3.14159265358979323846l * 3.14159265358979323846l * 
      +                          F1 * F1 * F2 * F2 * F3 * F3 * CCal;
  1683  000980  C094  F01C         	movff	_measure_inductance$930,___flmul@f1
  1684  000984  C095  F01D         	movff	_measure_inductance$930+1,___flmul@f1+1
  1685  000988  C096  F01E         	movff	_measure_inductance$930+2,___flmul@f1+2
  1686  00098C  C097  F01F         	movff	_measure_inductance$930+3,___flmul@f1+3
  1687  000990  0EE6               	movlw	230
  1688  000992  6E20               	movwf	___flmul@f2,c
  1689  000994  0EE9               	movlw	233
  1690  000996  6E21               	movwf	___flmul@f2+1,c
  1691  000998  0E1D               	movlw	29
  1692  00099A  6E22               	movwf	___flmul@f2+2,c
  1693  00099C  0E42               	movlw	66
  1694  00099E  6E23               	movwf	___flmul@f2+3,c
  1695  0009A0  ECD6  F009         	call	___flmul	;wreg free
  1696  0009A4  C01C  F084         	movff	?___flmul,measure_inductance@denominator
  1697  0009A8  C01D  F085         	movff	?___flmul+1,measure_inductance@denominator+1
  1698  0009AC  C01E  F086         	movff	?___flmul+2,measure_inductance@denominator+2
  1699  0009B0  C01F  F087         	movff	?___flmul+3,measure_inductance@denominator+3
  1700                           
  1701                           ;LC-meter.c: 489: Lin = (numerator / denominator) * 1e+15l;
  1702  0009B4  C084  F011         	movff	measure_inductance@denominator,___fldiv@f2
  1703  0009B8  C085  F012         	movff	measure_inductance@denominator+1,___fldiv@f2+1
  1704  0009BC  C086  F013         	movff	measure_inductance@denominator+2,___fldiv@f2+2
  1705  0009C0  C087  F014         	movff	measure_inductance@denominator+3,___fldiv@f2+3
  1706  0009C4  C080  F00D         	movff	measure_inductance@numerator,___fldiv@f1
  1707  0009C8  C081  F00E         	movff	measure_inductance@numerator+1,___fldiv@f1+1
  1708  0009CC  C082  F00F         	movff	measure_inductance@numerator+2,___fldiv@f1+2
  1709  0009D0  C083  F010         	movff	measure_inductance@numerator+3,___fldiv@f1+3
  1710  0009D4  EC63  F00F         	call	___fldiv	;wreg free
  1711  0009D8  C00D  F01C         	movff	?___fldiv,___flmul@f1
  1712  0009DC  C00E  F01D         	movff	?___fldiv+1,___flmul@f1+1
  1713  0009E0  C00F  F01E         	movff	?___fldiv+2,___flmul@f1+2
  1714  0009E4  C010  F01F         	movff	?___fldiv+3,___flmul@f1+3
  1715  0009E8  0EA9               	movlw	169
  1716  0009EA  6E20               	movwf	___flmul@f2,c
  1717  0009EC  0E5F               	movlw	95
  1718  0009EE  6E21               	movwf	___flmul@f2+1,c
  1719  0009F0  0E63               	movlw	99
  1720  0009F2  6E22               	movwf	___flmul@f2+2,c
  1721  0009F4  0E58               	movlw	88
  1722  0009F6  6E23               	movwf	___flmul@f2+3,c
  1723  0009F8  ECD6  F009         	call	___flmul	;wreg free
  1724  0009FC  C01C  F0A7         	movff	?___flmul,measure_inductance@Lin
  1725  000A00  C01D  F0A8         	movff	?___flmul+1,measure_inductance@Lin+1
  1726  000A04  C01E  F0A9         	movff	?___flmul+2,measure_inductance@Lin+2
  1727  000A08  C01F  F0AA         	movff	?___flmul+3,measure_inductance@Lin+3
  1728                           
  1729                           ;LC-meter.c: 491: if(Lin > 999) {
  1730  000A0C  6A03               	clrf	___flge@ff1,c
  1731  000A0E  0EC0               	movlw	192
  1732  000A10  6E04               	movwf	___flge@ff1+1,c
  1733  000A12  0E79               	movlw	121
  1734  000A14  6E05               	movwf	___flge@ff1+2,c
  1735  000A16  0E44               	movlw	68
  1736  000A18  6E06               	movwf	___flge@ff1+3,c
  1737  000A1A  C0A7  F007         	movff	measure_inductance@Lin,___flge@ff2
  1738  000A1E  C0A8  F008         	movff	measure_inductance@Lin+1,___flge@ff2+1
  1739  000A22  C0A9  F009         	movff	measure_inductance@Lin+2,___flge@ff2+2
  1740  000A26  C0AA  F00A         	movff	measure_inductance@Lin+3,___flge@ff2+3
  1741  000A2A  EC76  F011         	call	___flge	;wreg free
  1742  000A2E  E27A               	bc	l2837
  1743                           
  1744                           ;LC-meter.c: 492: if(Lin > (999e+03l)) {
  1745  000A30  0E80               	movlw	128
  1746  000A32  6E03               	movwf	___flge@ff1,c
  1747  000A34  0EE5               	movlw	229
  1748  000A36  6E04               	movwf	___flge@ff1+1,c
  1749  000A38  0E73               	movlw	115
  1750  000A3A  6E05               	movwf	___flge@ff1+2,c
  1751  000A3C  0E49               	movlw	73
  1752  000A3E  6E06               	movwf	___flge@ff1+3,c
  1753  000A40  C0A7  F007         	movff	measure_inductance@Lin,___flge@ff2
  1754  000A44  C0A8  F008         	movff	measure_inductance@Lin+1,___flge@ff2+1
  1755  000A48  C0A9  F009         	movff	measure_inductance@Lin+2,___flge@ff2+2
  1756  000A4C  C0AA  F00A         	movff	measure_inductance@Lin+3,___flge@ff2+3
  1757  000A50  EC76  F011         	call	___flge	;wreg free
  1758  000A54  E24C               	bc	l2833
  1759                           
  1760                           ;LC-meter.c: 493: if(Lin > (999e+06l)) {
  1761  000A56  0E1F               	movlw	31
  1762  000A58  6E03               	movwf	___flge@ff1,c
  1763  000A5A  0E2E               	movlw	46
  1764  000A5C  6E04               	movwf	___flge@ff1+1,c
  1765  000A5E  0E6E               	movlw	110
  1766  000A60  6E05               	movwf	___flge@ff1+2,c
  1767  000A62  0E4E               	movlw	78
  1768  000A64  6E06               	movwf	___flge@ff1+3,c
  1769  000A66  C0A7  F007         	movff	measure_inductance@Lin,___flge@ff2
  1770  000A6A  C0A8  F008         	movff	measure_inductance@Lin+1,___flge@ff2+1
  1771  000A6E  C0A9  F009         	movff	measure_inductance@Lin+2,___flge@ff2+2
  1772  000A72  C0AA  F00A         	movff	measure_inductance@Lin+3,___flge@ff2+3
  1773  000A76  EC76  F011         	call	___flge	;wreg free
  1774  000A7A  E21D               	bc	l2829
  1775                           
  1776                           ;LC-meter.c: 494: Lin = Lin / (1e+09l);
  1777  000A7C  C0A7  F00D         	movff	measure_inductance@Lin,___fldiv@f1
  1778  000A80  C0A8  F00E         	movff	measure_inductance@Lin+1,___fldiv@f1+1
  1779  000A84  C0A9  F00F         	movff	measure_inductance@Lin+2,___fldiv@f1+2
  1780  000A88  C0AA  F010         	movff	measure_inductance@Lin+3,___fldiv@f1+3
  1781  000A8C  0E28               	movlw	40
  1782  000A8E  6E11               	movwf	___fldiv@f2,c
  1783  000A90  0E6B               	movlw	107
  1784  000A92  6E12               	movwf	___fldiv@f2+1,c
  1785  000A94  0E6E               	movlw	110
  1786  000A96  6E13               	movwf	___fldiv@f2+2,c
  1787  000A98  0E4E               	movlw	78
  1788  000A9A  6E14               	movwf	___fldiv@f2+3,c
  1789  000A9C  EC63  F00F         	call	___fldiv	;wreg free
  1790  000AA0  C00D  F0A7         	movff	?___fldiv,measure_inductance@Lin
  1791  000AA4  C00E  F0A8         	movff	?___fldiv+1,measure_inductance@Lin+1
  1792  000AA8  C00F  F0A9         	movff	?___fldiv+2,measure_inductance@Lin+2
  1793  000AAC  C010  F0AA         	movff	?___fldiv+3,measure_inductance@Lin+3
  1794                           
  1795                           ;LC-meter.c: 495: unit = 0;
  1796  000AB0  0100               	movlb	0	; () banked
  1797  000AB2  6B98               	clrf	measure_inductance@unit& (0+255),b
  1798                           
  1799                           ;LC-meter.c: 496: } else {
  1800  000AB4  D03B               	goto	l2839
  1801  000AB6                     l2829:
  1802                           
  1803                           ;LC-meter.c: 497: Lin = Lin / (1e+06l);
  1804  000AB6  C0A7  F00D         	movff	measure_inductance@Lin,___fldiv@f1
  1805  000ABA  C0A8  F00E         	movff	measure_inductance@Lin+1,___fldiv@f1+1
  1806  000ABE  C0A9  F00F         	movff	measure_inductance@Lin+2,___fldiv@f1+2
  1807  000AC2  C0AA  F010         	movff	measure_inductance@Lin+3,___fldiv@f1+3
  1808  000AC6  0E00               	movlw	0
  1809  000AC8  6E11               	movwf	___fldiv@f2,c
  1810  000ACA  0E24               	movlw	36
  1811  000ACC  6E12               	movwf	___fldiv@f2+1,c
  1812  000ACE  0E74               	movlw	116
  1813  000AD0  6E13               	movwf	___fldiv@f2+2,c
  1814  000AD2  0E49               	movlw	73
  1815  000AD4  6E14               	movwf	___fldiv@f2+3,c
  1816  000AD6  EC63  F00F         	call	___fldiv	;wreg free
  1817  000ADA  C00D  F0A7         	movff	?___fldiv,measure_inductance@Lin
  1818  000ADE  C00E  F0A8         	movff	?___fldiv+1,measure_inductance@Lin+1
  1819  000AE2  C00F  F0A9         	movff	?___fldiv+2,measure_inductance@Lin+2
  1820  000AE6  C010  F0AA         	movff	?___fldiv+3,measure_inductance@Lin+3
  1821                           
  1822                           ;LC-meter.c: 498: unit = 1;
  1823  000AEA  0E01               	movlw	1
  1824  000AEC  D01C               	goto	L1
  1825  000AEE                     l2833:
  1826                           
  1827                           ;LC-meter.c: 501: Lin = Lin / 1e+03l;
  1828  000AEE  C0A7  F00D         	movff	measure_inductance@Lin,___fldiv@f1
  1829  000AF2  C0A8  F00E         	movff	measure_inductance@Lin+1,___fldiv@f1+1
  1830  000AF6  C0A9  F00F         	movff	measure_inductance@Lin+2,___fldiv@f1+2
  1831  000AFA  C0AA  F010         	movff	measure_inductance@Lin+3,___fldiv@f1+3
  1832  000AFE  0E00               	movlw	0
  1833  000B00  6E11               	movwf	___fldiv@f2,c
  1834  000B02  6E12               	movwf	___fldiv@f2+1,c
  1835  000B04  0E7A               	movlw	122
  1836  000B06  6E13               	movwf	___fldiv@f2+2,c
  1837  000B08  0E44               	movlw	68
  1838  000B0A  6E14               	movwf	___fldiv@f2+3,c
  1839  000B0C  EC63  F00F         	call	___fldiv	;wreg free
  1840  000B10  C00D  F0A7         	movff	?___fldiv,measure_inductance@Lin
  1841  000B14  C00E  F0A8         	movff	?___fldiv+1,measure_inductance@Lin+1
  1842  000B18  C00F  F0A9         	movff	?___fldiv+2,measure_inductance@Lin+2
  1843  000B1C  C010  F0AA         	movff	?___fldiv+3,measure_inductance@Lin+3
  1844                           
  1845                           ;LC-meter.c: 502: unit = 2;
  1846  000B20  0E02               	movlw	2
  1847  000B22  D001               	goto	L1
  1848  000B24                     l2837:
  1849                           
  1850                           ;LC-meter.c: 505: unit = 3;
  1851  000B24  0E03               	movlw	3
  1852  000B26                     L1:
  1853  000B26  FFFF               	dw	65535	; assembler added errata NOP
  1854  000B28  0100               	movlb	0	; () banked
  1855  000B2A  6F98               	movwf	measure_inductance@unit& (0+255),b
  1856  000B2C                     l2839:
  1857  000B2C  FFFF               	dw	65535	; assembler added errata NOP
  1858                           
  1859                           ; BSR set to: 0
  1860                           ;LC-meter.c: 507: Lin = Lin * 100;
  1861  000B2E  C0A7  F01C         	movff	measure_inductance@Lin,___flmul@f1
  1862  000B32  C0A8  F01D         	movff	measure_inductance@Lin+1,___flmul@f1+1
  1863  000B36  C0A9  F01E         	movff	measure_inductance@Lin+2,___flmul@f1+2
  1864  000B3A  C0AA  F01F         	movff	measure_inductance@Lin+3,___flmul@f1+3
  1865  000B3E  0E00               	movlw	0
  1866  000B40  6E20               	movwf	___flmul@f2,c
  1867  000B42  6E21               	movwf	___flmul@f2+1,c
  1868  000B44  0EC8               	movlw	200
  1869  000B46  6E22               	movwf	___flmul@f2+2,c
  1870  000B48  0E42               	movlw	66
  1871  000B4A  6E23               	movwf	___flmul@f2+3,c
  1872  000B4C  ECD6  F009         	call	___flmul	;wreg free
  1873  000B50  C01C  F0A7         	movff	?___flmul,measure_inductance@Lin
  1874  000B54  C01D  F0A8         	movff	?___flmul+1,measure_inductance@Lin+1
  1875  000B58  C01E  F0A9         	movff	?___flmul+2,measure_inductance@Lin+2
  1876  000B5C  C01F  F0AA         	movff	?___flmul+3,measure_inductance@Lin+3
  1877                           
  1878                           ;LC-meter.c: 508: var = (unsigned short int)Lin;
  1879  000B60  C0A7  F05D         	movff	measure_inductance@Lin,___fltol@f1
  1880  000B64  C0A8  F05E         	movff	measure_inductance@Lin+1,___fltol@f1+1
  1881  000B68  C0A9  F05F         	movff	measure_inductance@Lin+2,___fltol@f1+2
  1882  000B6C  C0AA  F060         	movff	measure_inductance@Lin+3,___fltol@f1+3
  1883  000B70  EC0B  F00F         	call	___fltol	;wreg free
  1884  000B74  C05D  F0A5         	movff	?___fltol,measure_inductance@var
  1885  000B78  C05E  F0A6         	movff	?___fltol+1,measure_inductance@var+1
  1886                           
  1887                           ;LC-meter.c: 510: print_reading(var);
  1888  000B7C  C0A5  F003         	movff	measure_inductance@var,print_reading@measurement
  1889  000B80  C0A6  F004         	movff	measure_inductance@var+1,print_reading@measurement+1
  1890  000B84  EC34  F013         	call	_print_reading	;wreg free
  1891                           
  1892                           ;LC-meter.c: 511: print_unit(unit);
  1893  000B88  0100               	movlb	0	; () banked
  1894  000B8A  5198               	movf	measure_inductance@unit& (0+255),w,b
  1895  000B8C  EC31  F013         	call	_print_unit
  1896                           
  1897                           ; BSR set to: 0
  1898  000B90  0012               	return		;funcret
  1899  000B92  FFFF               	dw	65535	; errata NOP
  1900  000B94                     __end_of_measure_inductance:
  1901                           	opt stack 0
  1902                           tblptru	equ	0xFF8
  1903                           tblptrh	equ	0xFF7
  1904                           tblptrl	equ	0xFF6
  1905                           tablat	equ	0xFF5
  1906                           intcon	equ	0xFF2
  1907                           intcon2	equ	0xFF1
  1908                           postinc0	equ	0xFEE
  1909                           wreg	equ	0xFE8
  1910                           status	equ	0xFD8
  1911                           
  1912 ;; *************** function _measure_capacitance *****************
  1913 ;; Defined at:
  1914 ;;		line 391 in file "../../../src/LC-meter.c"
  1915 ;; Parameters:    Size  Location     Type
  1916 ;;		None
  1917 ;; Auto vars:     Size  Location     Type
  1918 ;;  Cin             4   67[BANK0 ] unsigned char 
  1919 ;;  var             2   65[BANK0 ] unsigned short 
  1920 ;;  unit            1   64[BANK0 ] unsigned char 
  1921 ;; Return value:  Size  Location     Type
  1922 ;;		None               void
  1923 ;; Registers used:
  1924 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1925 ;; Tracked objects:
  1926 ;;		On entry : 0/0
  1927 ;;		On exit  : F/0
  1928 ;;		Unchanged: 0/0
  1929 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1930 ;;      Params:         0       0       0       0       0       0       0
  1931 ;;      Locals:         0      19       0       0       0       0       0
  1932 ;;      Temps:          0       0       0       0       0       0       0
  1933 ;;      Totals:         0      19       0       0       0       0       0
  1934 ;;Total ram usage:       19 bytes
  1935 ;; Hardware stack levels used:    1
  1936 ;; Hardware stack levels required when called:    7
  1937 ;; This function calls:
  1938 ;;		___fldiv
  1939 ;;		___flge
  1940 ;;		___flmul
  1941 ;;		___flsub
  1942 ;;		___fltol
  1943 ;;		___lwtofl
  1944 ;;		_format_double
  1945 ;;		_format_xint32
  1946 ;;		_measure_freq
  1947 ;;		_print_reading
  1948 ;;		_print_unit
  1949 ;;		_ser_putch
  1950 ;;		_ser_puts
  1951 ;; This function is called by:
  1952 ;;		_main
  1953 ;; This function uses a non-reentrant model
  1954 ;;
  1955                           
  1956                           	psect	text4
  1957  000B94                     __ptext4:
  1958                           	opt stack 0
  1959  000B94                     _measure_capacitance:
  1960                           	opt stack 23
  1961                           
  1962                           ; BSR set to: 0
  1963                           ;incstack = 0
  1964  000B94  FFFF               	dw	65535
  1965                           
  1966                           ;LC-meter.c: 392: unsigned char unit;
  1967                           ;LC-meter.c: 393: unsigned short int var;
  1968                           ;LC-meter.c: 395: double Cin;
  1969                           ;LC-meter.c: 402: var = measure_freq();
  1970  000B96  EC60  F010         	call	_measure_freq	;wreg free
  1971  000B9A  C003  F0C1         	movff	?_measure_freq,measure_capacitance@var
  1972  000B9E  C004  F0C2         	movff	?_measure_freq+1,measure_capacitance@var+1
  1973                           
  1974                           ;LC-meter.c: 404: F3 = (double)var;
  1975  000BA2  C0C1  F00D         	movff	measure_capacitance@var,___lwtofl@c
  1976  000BA6  C0C2  F00E         	movff	measure_capacitance@var+1,___lwtofl@c+1
  1977  000BAA  ECD9  F012         	call	___lwtofl	;wreg free
  1978  000BAE  C00D  F0DB         	movff	?___lwtofl,_F3
  1979  000BB2  C00E  F0DC         	movff	?___lwtofl+1,_F3+1
  1980  000BB6  C00F  F0DD         	movff	?___lwtofl+2,_F3+2
  1981  000BBA  C010  F0DE         	movff	?___lwtofl+3,_F3+3
  1982                           
  1983                           ;LC-meter.c: 406: putchar_ptr = &ser_putch;
  1984  000BBE  0E08               	movlw	low _ser_putch
  1985  000BC0  6E7A               	movwf	_putchar_ptr,c
  1986  000BC2  0E26               	movlw	high _ser_putch
  1987  000BC4  6E7B               	movwf	_putchar_ptr+1,c
  1988                           
  1989                           ;LC-meter.c: 407: ser_puts("var=");
  1990  000BC6  0E72               	movlw	STR_4& (0+255)
  1991  000BC8  ECA5  F012         	call	_ser_puts
  1992                           
  1993                           ;LC-meter.c: 408: format_xint32( var);
  1994  000BCC  C0C1  F035         	movff	measure_capacitance@var,format_xint32@x
  1995  000BD0  C0C2  F036         	movff	measure_capacitance@var+1,format_xint32@x+1
  1996  000BD4  6A37               	clrf	format_xint32@x+2,c
  1997  000BD6  6A38               	clrf	format_xint32@x+3,c
  1998  000BD8  ECE1  F010         	call	_format_xint32	;wreg free
  1999                           
  2000                           ;LC-meter.c: 409: ser_puts("\r\nF1=");
  2001  000BDC  0E5B               	movlw	STR_5& (0+255)
  2002  000BDE  ECA5  F012         	call	_ser_puts
  2003                           
  2004                           ;LC-meter.c: 410: format_double( F1);
  2005  000BE2  C0EE  F0A0         	movff	_F1,format_double@num
  2006  000BE6  C0EF  F0A1         	movff	_F1+1,format_double@num+1
  2007  000BEA  C0F0  F0A2         	movff	_F1+2,format_double@num+2
  2008  000BEE  C0F1  F0A3         	movff	_F1+3,format_double@num+3
  2009  000BF2  ECF2  F008         	call	_format_double	;wreg free
  2010                           
  2011                           ;LC-meter.c: 411: ser_putch(' ');
  2012  000BF6  0E20               	movlw	32
  2013  000BF8  EC04  F013         	call	_ser_putch
  2014                           
  2015                           ;LC-meter.c: 412: format_xint32( *(unsigned long int*)&F1);
  2016  000BFC  C0EE  F035         	movff	_F1,format_xint32@x
  2017  000C00  C0EF  F036         	movff	_F1+1,format_xint32@x+1
  2018  000C04  C0F0  F037         	movff	_F1+2,format_xint32@x+2
  2019  000C08  C0F1  F038         	movff	_F1+3,format_xint32@x+3
  2020  000C0C  ECE1  F010         	call	_format_xint32	;wreg free
  2021                           
  2022                           ;LC-meter.c: 413: ser_puts("\r\nF2=");
  2023  000C10  0E61               	movlw	STR_6& (0+255)
  2024  000C12  ECA5  F012         	call	_ser_puts
  2025                           
  2026                           ;LC-meter.c: 414: format_double( F2);
  2027  000C16  C0D7  F0A0         	movff	_F2,format_double@num
  2028  000C1A  C0D8  F0A1         	movff	_F2+1,format_double@num+1
  2029  000C1E  C0D9  F0A2         	movff	_F2+2,format_double@num+2
  2030  000C22  C0DA  F0A3         	movff	_F2+3,format_double@num+3
  2031  000C26  ECF2  F008         	call	_format_double	;wreg free
  2032                           
  2033                           ;LC-meter.c: 415: ser_putch(' ');
  2034  000C2A  0E20               	movlw	32
  2035  000C2C  EC04  F013         	call	_ser_putch
  2036                           
  2037                           ;LC-meter.c: 416: format_xint32( *(unsigned long int*)&F2);
  2038  000C30  C0D7  F035         	movff	_F2,format_xint32@x
  2039  000C34  C0D8  F036         	movff	_F2+1,format_xint32@x+1
  2040  000C38  C0D9  F037         	movff	_F2+2,format_xint32@x+2
  2041  000C3C  C0DA  F038         	movff	_F2+3,format_xint32@x+3
  2042  000C40  ECE1  F010         	call	_format_xint32	;wreg free
  2043                           
  2044                           ;LC-meter.c: 417: ser_puts("\r\nF3=");
  2045  000C44  0E67               	movlw	STR_7& (0+255)
  2046  000C46  ECA5  F012         	call	_ser_puts
  2047                           
  2048                           ;LC-meter.c: 418: format_double( F3);
  2049  000C4A  C0DB  F0A0         	movff	_F3,format_double@num
  2050  000C4E  C0DC  F0A1         	movff	_F3+1,format_double@num+1
  2051  000C52  C0DD  F0A2         	movff	_F3+2,format_double@num+2
  2052  000C56  C0DE  F0A3         	movff	_F3+3,format_double@num+3
  2053  000C5A  ECF2  F008         	call	_format_double	;wreg free
  2054                           
  2055                           ;LC-meter.c: 419: ser_putch(' ');
  2056  000C5E  0E20               	movlw	32
  2057  000C60  EC04  F013         	call	_ser_putch
  2058                           
  2059                           ;LC-meter.c: 420: format_xint32( *(unsigned long int*)&F3);
  2060  000C64  C0DB  F035         	movff	_F3,format_xint32@x
  2061  000C68  C0DC  F036         	movff	_F3+1,format_xint32@x+1
  2062  000C6C  C0DD  F037         	movff	_F3+2,format_xint32@x+2
  2063  000C70  C0DE  F038         	movff	_F3+3,format_xint32@x+3
  2064  000C74  ECE1  F010         	call	_format_xint32	;wreg free
  2065                           
  2066                           ;LC-meter.c: 421: ser_puts("\r\nCCal=");
  2067  000C78  0E4D               	movlw	STR_8& (0+255)
  2068  000C7A  ECA5  F012         	call	_ser_puts
  2069                           
  2070                           ;LC-meter.c: 422: format_double( CCal);
  2071  000C7E  C0F2  F0A0         	movff	_CCal,format_double@num
  2072  000C82  C0F3  F0A1         	movff	_CCal+1,format_double@num+1
  2073  000C86  C0F4  F0A2         	movff	_CCal+2,format_double@num+2
  2074  000C8A  C0F5  F0A3         	movff	_CCal+3,format_double@num+3
  2075  000C8E  ECF2  F008         	call	_format_double	;wreg free
  2076                           
  2077                           ;LC-meter.c: 423: ser_putch(' ');
  2078  000C92  0E20               	movlw	32
  2079  000C94  EC04  F013         	call	_ser_putch
  2080                           
  2081                           ;LC-meter.c: 424: format_xint32( *(unsigned long int*)&CCal);
  2082  000C98  C0F2  F035         	movff	_CCal,format_xint32@x
  2083  000C9C  C0F3  F036         	movff	_CCal+1,format_xint32@x+1
  2084  000CA0  C0F4  F037         	movff	_CCal+2,format_xint32@x+2
  2085  000CA4  C0F5  F038         	movff	_CCal+3,format_xint32@x+3
  2086  000CA8  ECE1  F010         	call	_format_xint32	;wreg free
  2087                           
  2088                           ;LC-meter.c: 425: ser_puts("\r\n");
  2089  000CAC  0E58               	movlw	(STR_1+3)& (0+255)
  2090  000CAE  ECA5  F012         	call	_ser_puts
  2091                           
  2092                           ;LC-meter.c: 427: putchar_ptr = &output_putch;
  2093  000CB2  0E54               	movlw	low _output_putch
  2094  000CB4  6E7A               	movwf	_putchar_ptr,c
  2095  000CB6  0E26               	movlw	high _output_putch
  2096  000CB8  6E7B               	movwf	_putchar_ptr+1,c
  2097                           
  2098                           ;LC-meter.c: 429: if(F3 > F1)
  2099  000CBA  C0EE  F003         	movff	_F1,___flge@ff1
  2100  000CBE  C0EF  F004         	movff	_F1+1,___flge@ff1+1
  2101  000CC2  C0F0  F005         	movff	_F1+2,___flge@ff1+2
  2102  000CC6  C0F1  F006         	movff	_F1+3,___flge@ff1+3
  2103  000CCA  C0DB  F007         	movff	_F3,___flge@ff2
  2104  000CCE  C0DC  F008         	movff	_F3+1,___flge@ff2+1
  2105  000CD2  C0DD  F009         	movff	_F3+2,___flge@ff2+2
  2106  000CD6  C0DE  F00A         	movff	_F3+3,___flge@ff2+3
  2107  000CDA  EC76  F011         	call	___flge	;wreg free
  2108  000CDE  E208               	bc	l3113
  2109                           
  2110                           ;LC-meter.c: 430: F3 = F1;
  2111  000CE0  C0EE  F0DB         	movff	_F1,_F3
  2112  000CE4  C0EF  F0DC         	movff	_F1+1,_F3+1
  2113  000CE8  C0F0  F0DD         	movff	_F1+2,_F3+2
  2114  000CEC  C0F1  F0DE         	movff	_F1+3,_F3+3
  2115  000CF0                     l3113:
  2116                           
  2117                           ;LC-meter.c: 432: Cin = F2 * F2 * (F1 * F1 - F3 * F3) * CCal;
  2118  000CF0  C0DB  F020         	movff	_F3,___flmul@f2
  2119  000CF4  C0DC  F021         	movff	_F3+1,___flmul@f2+1
  2120  000CF8  C0DD  F022         	movff	_F3+2,___flmul@f2+2
  2121  000CFC  C0DE  F023         	movff	_F3+3,___flmul@f2+3
  2122  000D00  C0DB  F01C         	movff	_F3,___flmul@f1
  2123  000D04  C0DC  F01D         	movff	_F3+1,___flmul@f1+1
  2124  000D08  C0DD  F01E         	movff	_F3+2,___flmul@f1+2
  2125  000D0C  C0DE  F01F         	movff	_F3+3,___flmul@f1+3
  2126  000D10  ECD6  F009         	call	___flmul	;wreg free
  2127  000D14  C01C  F047         	movff	?___flmul,___flsub@f2
  2128  000D18  C01D  F048         	movff	?___flmul+1,___flsub@f2+1
  2129  000D1C  C01E  F049         	movff	?___flmul+2,___flsub@f2+2
  2130  000D20  C01F  F04A         	movff	?___flmul+3,___flsub@f2+3
  2131  000D24  C0EE  F020         	movff	_F1,___flmul@f2
  2132  000D28  C0EF  F021         	movff	_F1+1,___flmul@f2+1
  2133  000D2C  C0F0  F022         	movff	_F1+2,___flmul@f2+2
  2134  000D30  C0F1  F023         	movff	_F1+3,___flmul@f2+3
  2135  000D34  C0EE  F01C         	movff	_F1,___flmul@f1
  2136  000D38  C0EF  F01D         	movff	_F1+1,___flmul@f1+1
  2137  000D3C  C0F0  F01E         	movff	_F1+2,___flmul@f1+2
  2138  000D40  C0F1  F01F         	movff	_F1+3,___flmul@f1+3
  2139  000D44  ECD6  F009         	call	___flmul	;wreg free
  2140  000D48  C01C  F043         	movff	?___flmul,___flsub@f1
  2141  000D4C  C01D  F044         	movff	?___flmul+1,___flsub@f1+1
  2142  000D50  C01E  F045         	movff	?___flmul+2,___flsub@f1+2
  2143  000D54  C01F  F046         	movff	?___flmul+3,___flsub@f1+3
  2144  000D58  EC40  F012         	call	___flsub	;wreg free
  2145  000D5C  C043  F0B4         	movff	?___flsub,_measure_capacitance$921
  2146  000D60  C044  F0B5         	movff	?___flsub+1,_measure_capacitance$921+1
  2147  000D64  C045  F0B6         	movff	?___flsub+2,_measure_capacitance$921+2
  2148  000D68  C046  F0B7         	movff	?___flsub+3,_measure_capacitance$921+3
  2149                           
  2150                           ;LC-meter.c: 432: Cin = F2 * F2 * (F1 * F1 - F3 * F3) * CCal;
  2151  000D6C  C0D7  F020         	movff	_F2,___flmul@f2
  2152  000D70  C0D8  F021         	movff	_F2+1,___flmul@f2+1
  2153  000D74  C0D9  F022         	movff	_F2+2,___flmul@f2+2
  2154  000D78  C0DA  F023         	movff	_F2+3,___flmul@f2+3
  2155  000D7C  C0B4  F01C         	movff	_measure_capacitance$921,___flmul@f1
  2156  000D80  C0B5  F01D         	movff	_measure_capacitance$921+1,___flmul@f1+1
  2157  000D84  C0B6  F01E         	movff	_measure_capacitance$921+2,___flmul@f1+2
  2158  000D88  C0B7  F01F         	movff	_measure_capacitance$921+3,___flmul@f1+3
  2159  000D8C  ECD6  F009         	call	___flmul	;wreg free
  2160  000D90  C01C  F0B8         	movff	?___flmul,_measure_capacitance$922
  2161  000D94  C01D  F0B9         	movff	?___flmul+1,_measure_capacitance$922+1
  2162  000D98  C01E  F0BA         	movff	?___flmul+2,_measure_capacitance$922+2
  2163  000D9C  C01F  F0BB         	movff	?___flmul+3,_measure_capacitance$922+3
  2164                           
  2165                           ;LC-meter.c: 432: Cin = F2 * F2 * (F1 * F1 - F3 * F3) * CCal;
  2166  000DA0  C0D7  F020         	movff	_F2,___flmul@f2
  2167  000DA4  C0D8  F021         	movff	_F2+1,___flmul@f2+1
  2168  000DA8  C0D9  F022         	movff	_F2+2,___flmul@f2+2
  2169  000DAC  C0DA  F023         	movff	_F2+3,___flmul@f2+3
  2170  000DB0  C0B8  F01C         	movff	_measure_capacitance$922,___flmul@f1
  2171  000DB4  C0B9  F01D         	movff	_measure_capacitance$922+1,___flmul@f1+1
  2172  000DB8  C0BA  F01E         	movff	_measure_capacitance$922+2,___flmul@f1+2
  2173  000DBC  C0BB  F01F         	movff	_measure_capacitance$922+3,___flmul@f1+3
  2174  000DC0  ECD6  F009         	call	___flmul	;wreg free
  2175  000DC4  C01C  F0BC         	movff	?___flmul,_measure_capacitance$923
  2176  000DC8  C01D  F0BD         	movff	?___flmul+1,_measure_capacitance$923+1
  2177  000DCC  C01E  F0BE         	movff	?___flmul+2,_measure_capacitance$923+2
  2178  000DD0  C01F  F0BF         	movff	?___flmul+3,_measure_capacitance$923+3
  2179                           
  2180                           ;LC-meter.c: 432: Cin = F2 * F2 * (F1 * F1 - F3 * F3) * CCal;
  2181  000DD4  C0BC  F01C         	movff	_measure_capacitance$923,___flmul@f1
  2182  000DD8  C0BD  F01D         	movff	_measure_capacitance$923+1,___flmul@f1+1
  2183  000DDC  C0BE  F01E         	movff	_measure_capacitance$923+2,___flmul@f1+2
  2184  000DE0  C0BF  F01F         	movff	_measure_capacitance$923+3,___flmul@f1+3
  2185  000DE4  C0F2  F020         	movff	_CCal,___flmul@f2
  2186  000DE8  C0F3  F021         	movff	_CCal+1,___flmul@f2+1
  2187  000DEC  C0F4  F022         	movff	_CCal+2,___flmul@f2+2
  2188  000DF0  C0F5  F023         	movff	_CCal+3,___flmul@f2+3
  2189  000DF4  ECD6  F009         	call	___flmul	;wreg free
  2190  000DF8  C01C  F0C3         	movff	?___flmul,measure_capacitance@Cin
  2191  000DFC  C01D  F0C4         	movff	?___flmul+1,measure_capacitance@Cin+1
  2192  000E00  C01E  F0C5         	movff	?___flmul+2,measure_capacitance@Cin+2
  2193  000E04  C01F  F0C6         	movff	?___flmul+3,measure_capacitance@Cin+3
  2194                           
  2195                           ;LC-meter.c: 436: ser_puts("Cin=");
  2196  000E08  0E6D               	movlw	STR_10& (0+255)
  2197  000E0A  ECA5  F012         	call	_ser_puts
  2198                           
  2199                           ;LC-meter.c: 437: format_double( Cin);
  2200  000E0E  C0C3  F0A0         	movff	measure_capacitance@Cin,format_double@num
  2201  000E12  C0C4  F0A1         	movff	measure_capacitance@Cin+1,format_double@num+1
  2202  000E16  C0C5  F0A2         	movff	measure_capacitance@Cin+2,format_double@num+2
  2203  000E1A  C0C6  F0A3         	movff	measure_capacitance@Cin+3,format_double@num+3
  2204  000E1E  ECF2  F008         	call	_format_double	;wreg free
  2205                           
  2206                           ;LC-meter.c: 438: ser_putch(' ');
  2207  000E22  0E20               	movlw	32
  2208  000E24  EC04  F013         	call	_ser_putch
  2209                           
  2210                           ;LC-meter.c: 439: format_xint32( *(unsigned long int*)&Cin);
  2211  000E28  C0C3  F035         	movff	measure_capacitance@Cin,format_xint32@x
  2212  000E2C  C0C4  F036         	movff	measure_capacitance@Cin+1,format_xint32@x+1
  2213  000E30  C0C5  F037         	movff	measure_capacitance@Cin+2,format_xint32@x+2
  2214  000E34  C0C6  F038         	movff	measure_capacitance@Cin+3,format_xint32@x+3
  2215  000E38  ECE1  F010         	call	_format_xint32	;wreg free
  2216                           
  2217                           ;LC-meter.c: 440: ser_puts("\r\n");
  2218  000E3C  0E58               	movlw	(STR_1+3)& (0+255)
  2219  000E3E  ECA5  F012         	call	_ser_puts
  2220                           
  2221                           ;LC-meter.c: 442: if(Cin > 999) {
  2222  000E42  6A03               	clrf	___flge@ff1,c
  2223  000E44  0EC0               	movlw	192
  2224  000E46  6E04               	movwf	___flge@ff1+1,c
  2225  000E48  0E79               	movlw	121
  2226  000E4A  6E05               	movwf	___flge@ff1+2,c
  2227  000E4C  0E44               	movlw	68
  2228  000E4E  6E06               	movwf	___flge@ff1+3,c
  2229  000E50  C0C3  F007         	movff	measure_capacitance@Cin,___flge@ff2
  2230  000E54  C0C4  F008         	movff	measure_capacitance@Cin+1,___flge@ff2+1
  2231  000E58  C0C5  F009         	movff	measure_capacitance@Cin+2,___flge@ff2+2
  2232  000E5C  C0C6  F00A         	movff	measure_capacitance@Cin+3,___flge@ff2+3
  2233  000E60  EC76  F011         	call	___flge	;wreg free
  2234  000E64  E279               	bc	l3143
  2235                           
  2236                           ;LC-meter.c: 443: if(Cin > (999e+03l)) {
  2237  000E66  0E80               	movlw	128
  2238  000E68  6E03               	movwf	___flge@ff1,c
  2239  000E6A  0EE5               	movlw	229
  2240  000E6C  6E04               	movwf	___flge@ff1+1,c
  2241  000E6E  0E73               	movlw	115
  2242  000E70  6E05               	movwf	___flge@ff1+2,c
  2243  000E72  0E49               	movlw	73
  2244  000E74  6E06               	movwf	___flge@ff1+3,c
  2245  000E76  C0C3  F007         	movff	measure_capacitance@Cin,___flge@ff2
  2246  000E7A  C0C4  F008         	movff	measure_capacitance@Cin+1,___flge@ff2+1
  2247  000E7E  C0C5  F009         	movff	measure_capacitance@Cin+2,___flge@ff2+2
  2248  000E82  C0C6  F00A         	movff	measure_capacitance@Cin+3,___flge@ff2+3
  2249  000E86  EC76  F011         	call	___flge	;wreg free
  2250  000E8A  E24B               	bc	l3139
  2251                           
  2252                           ;LC-meter.c: 444: if(Cin > (999e+06l)) {
  2253  000E8C  0E1F               	movlw	31
  2254  000E8E  6E03               	movwf	___flge@ff1,c
  2255  000E90  0E2E               	movlw	46
  2256  000E92  6E04               	movwf	___flge@ff1+1,c
  2257  000E94  0E6E               	movlw	110
  2258  000E96  6E05               	movwf	___flge@ff1+2,c
  2259  000E98  0E4E               	movlw	78
  2260  000E9A  6E06               	movwf	___flge@ff1+3,c
  2261  000E9C  C0C3  F007         	movff	measure_capacitance@Cin,___flge@ff2
  2262  000EA0  C0C4  F008         	movff	measure_capacitance@Cin+1,___flge@ff2+1
  2263  000EA4  C0C5  F009         	movff	measure_capacitance@Cin+2,___flge@ff2+2
  2264  000EA8  C0C6  F00A         	movff	measure_capacitance@Cin+3,___flge@ff2+3
  2265  000EAC  EC76  F011         	call	___flge	;wreg free
  2266  000EB0  E21C               	bc	l3135
  2267                           
  2268                           ;LC-meter.c: 445: Cin = Cin / (1e+09l);
  2269  000EB2  C0C3  F00D         	movff	measure_capacitance@Cin,___fldiv@f1
  2270  000EB6  C0C4  F00E         	movff	measure_capacitance@Cin+1,___fldiv@f1+1
  2271  000EBA  C0C5  F00F         	movff	measure_capacitance@Cin+2,___fldiv@f1+2
  2272  000EBE  C0C6  F010         	movff	measure_capacitance@Cin+3,___fldiv@f1+3
  2273  000EC2  0E28               	movlw	40
  2274  000EC4  6E11               	movwf	___fldiv@f2,c
  2275  000EC6  0E6B               	movlw	107
  2276  000EC8  6E12               	movwf	___fldiv@f2+1,c
  2277  000ECA  0E6E               	movlw	110
  2278  000ECC  6E13               	movwf	___fldiv@f2+2,c
  2279  000ECE  0E4E               	movlw	78
  2280  000ED0  6E14               	movwf	___fldiv@f2+3,c
  2281  000ED2  EC63  F00F         	call	___fldiv	;wreg free
  2282  000ED6  C00D  F0C3         	movff	?___fldiv,measure_capacitance@Cin
  2283  000EDA  C00E  F0C4         	movff	?___fldiv+1,measure_capacitance@Cin+1
  2284  000EDE  C00F  F0C5         	movff	?___fldiv+2,measure_capacitance@Cin+2
  2285  000EE2  C010  F0C6         	movff	?___fldiv+3,measure_capacitance@Cin+3
  2286                           
  2287                           ;LC-meter.c: 446: unit = 4;
  2288  000EE6  0E04               	movlw	4
  2289  000EE8  D038               	goto	L2
  2290  000EEA                     l3135:
  2291                           
  2292                           ;LC-meter.c: 448: Cin = Cin / (1e+06l);
  2293  000EEA  C0C3  F00D         	movff	measure_capacitance@Cin,___fldiv@f1
  2294  000EEE  C0C4  F00E         	movff	measure_capacitance@Cin+1,___fldiv@f1+1
  2295  000EF2  C0C5  F00F         	movff	measure_capacitance@Cin+2,___fldiv@f1+2
  2296  000EF6  C0C6  F010         	movff	measure_capacitance@Cin+3,___fldiv@f1+3
  2297  000EFA  0E00               	movlw	0
  2298  000EFC  6E11               	movwf	___fldiv@f2,c
  2299  000EFE  0E24               	movlw	36
  2300  000F00  6E12               	movwf	___fldiv@f2+1,c
  2301  000F02  0E74               	movlw	116
  2302  000F04  6E13               	movwf	___fldiv@f2+2,c
  2303  000F06  0E49               	movlw	73
  2304  000F08  6E14               	movwf	___fldiv@f2+3,c
  2305  000F0A  EC63  F00F         	call	___fldiv	;wreg free
  2306  000F0E  C00D  F0C3         	movff	?___fldiv,measure_capacitance@Cin
  2307  000F12  C00E  F0C4         	movff	?___fldiv+1,measure_capacitance@Cin+1
  2308  000F16  C00F  F0C5         	movff	?___fldiv+2,measure_capacitance@Cin+2
  2309  000F1A  C010  F0C6         	movff	?___fldiv+3,measure_capacitance@Cin+3
  2310                           
  2311                           ;LC-meter.c: 449: unit = 5;
  2312  000F1E  0E05               	movlw	5
  2313  000F20  D01C               	goto	L2
  2314  000F22                     l3139:
  2315                           
  2316                           ;LC-meter.c: 452: Cin = Cin / 1e+03l;
  2317  000F22  C0C3  F00D         	movff	measure_capacitance@Cin,___fldiv@f1
  2318  000F26  C0C4  F00E         	movff	measure_capacitance@Cin+1,___fldiv@f1+1
  2319  000F2A  C0C5  F00F         	movff	measure_capacitance@Cin+2,___fldiv@f1+2
  2320  000F2E  C0C6  F010         	movff	measure_capacitance@Cin+3,___fldiv@f1+3
  2321  000F32  0E00               	movlw	0
  2322  000F34  6E11               	movwf	___fldiv@f2,c
  2323  000F36  6E12               	movwf	___fldiv@f2+1,c
  2324  000F38  0E7A               	movlw	122
  2325  000F3A  6E13               	movwf	___fldiv@f2+2,c
  2326  000F3C  0E44               	movlw	68
  2327  000F3E  6E14               	movwf	___fldiv@f2+3,c
  2328  000F40  EC63  F00F         	call	___fldiv	;wreg free
  2329  000F44  C00D  F0C3         	movff	?___fldiv,measure_capacitance@Cin
  2330  000F48  C00E  F0C4         	movff	?___fldiv+1,measure_capacitance@Cin+1
  2331  000F4C  C00F  F0C5         	movff	?___fldiv+2,measure_capacitance@Cin+2
  2332  000F50  C010  F0C6         	movff	?___fldiv+3,measure_capacitance@Cin+3
  2333                           
  2334                           ;LC-meter.c: 453: unit = 6;
  2335  000F54  0E06               	movlw	6
  2336  000F56  D001               	goto	L2
  2337  000F58                     l3143:
  2338                           
  2339                           ;LC-meter.c: 456: unit = 7;
  2340  000F58  0E07               	movlw	7
  2341  000F5A                     L2:
  2342  000F5A  FFFF               	dw	65535	; assembler added errata NOP
  2343  000F5C  0100               	movlb	0	; () banked
  2344  000F5E  6FC0               	movwf	measure_capacitance@unit& (0+255),b
  2345                           
  2346                           ; BSR set to: 0
  2347                           ;LC-meter.c: 458: Cin = Cin * 100;
  2348  000F60  C0C3  F01C         	movff	measure_capacitance@Cin,___flmul@f1
  2349  000F64  C0C4  F01D         	movff	measure_capacitance@Cin+1,___flmul@f1+1
  2350  000F68  C0C5  F01E         	movff	measure_capacitance@Cin+2,___flmul@f1+2
  2351  000F6C  C0C6  F01F         	movff	measure_capacitance@Cin+3,___flmul@f1+3
  2352  000F70  0E00               	movlw	0
  2353  000F72  6E20               	movwf	___flmul@f2,c
  2354  000F74  6E21               	movwf	___flmul@f2+1,c
  2355  000F76  0EC8               	movlw	200
  2356  000F78  6E22               	movwf	___flmul@f2+2,c
  2357  000F7A  0E42               	movlw	66
  2358  000F7C  6E23               	movwf	___flmul@f2+3,c
  2359  000F7E  ECD6  F009         	call	___flmul	;wreg free
  2360  000F82  C01C  F0C3         	movff	?___flmul,measure_capacitance@Cin
  2361  000F86  C01D  F0C4         	movff	?___flmul+1,measure_capacitance@Cin+1
  2362  000F8A  C01E  F0C5         	movff	?___flmul+2,measure_capacitance@Cin+2
  2363  000F8E  C01F  F0C6         	movff	?___flmul+3,measure_capacitance@Cin+3
  2364                           
  2365                           ;LC-meter.c: 459: var = (unsigned short int)Cin;
  2366  000F92  C0C3  F05D         	movff	measure_capacitance@Cin,___fltol@f1
  2367  000F96  C0C4  F05E         	movff	measure_capacitance@Cin+1,___fltol@f1+1
  2368  000F9A  C0C5  F05F         	movff	measure_capacitance@Cin+2,___fltol@f1+2
  2369  000F9E  C0C6  F060         	movff	measure_capacitance@Cin+3,___fltol@f1+3
  2370  000FA2  EC0B  F00F         	call	___fltol	;wreg free
  2371  000FA6  C05D  F0C1         	movff	?___fltol,measure_capacitance@var
  2372  000FAA  C05E  F0C2         	movff	?___fltol+1,measure_capacitance@var+1
  2373                           
  2374                           ;LC-meter.c: 461: print_reading(var);
  2375  000FAE  C0C1  F003         	movff	measure_capacitance@var,print_reading@measurement
  2376  000FB2  C0C2  F004         	movff	measure_capacitance@var+1,print_reading@measurement+1
  2377  000FB6  EC34  F013         	call	_print_reading	;wreg free
  2378                           
  2379                           ;LC-meter.c: 462: print_unit(unit);
  2380  000FBA  0100               	movlb	0	; () banked
  2381  000FBC  51C0               	movf	measure_capacitance@unit& (0+255),w,b
  2382  000FBE  EC31  F013         	call	_print_unit
  2383                           
  2384                           ; BSR set to: 0
  2385  000FC2  0012               	return		;funcret
  2386  000FC4  FFFF               	dw	65535	; errata NOP
  2387  000FC6                     __end_of_measure_capacitance:
  2388                           	opt stack 0
  2389                           tblptru	equ	0xFF8
  2390                           tblptrh	equ	0xFF7
  2391                           tblptrl	equ	0xFF6
  2392                           tablat	equ	0xFF5
  2393                           intcon	equ	0xFF2
  2394                           intcon2	equ	0xFF1
  2395                           postinc0	equ	0xFEE
  2396                           wreg	equ	0xFE8
  2397                           status	equ	0xFD8
  2398                           
  2399 ;; *************** function _print_unit *****************
  2400 ;; Defined at:
  2401 ;;		line 408 in file "../../../src/print.c"
  2402 ;; Parameters:    Size  Location     Type
  2403 ;;  unit            1    wreg     unsigned char 
  2404 ;; Auto vars:     Size  Location     Type
  2405 ;;  unit            1    0[COMRAM] unsigned char 
  2406 ;; Return value:  Size  Location     Type
  2407 ;;		None               void
  2408 ;; Registers used:
  2409 ;;		wreg
  2410 ;; Tracked objects:
  2411 ;;		On entry : F/0
  2412 ;;		On exit  : F/0
  2413 ;;		Unchanged: F/0
  2414 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2415 ;;      Params:         0       0       0       0       0       0       0
  2416 ;;      Locals:         0       0       0       0       0       0       0
  2417 ;;      Temps:          0       0       0       0       0       0       0
  2418 ;;      Totals:         0       0       0       0       0       0       0
  2419 ;;Total ram usage:        0 bytes
  2420 ;; Hardware stack levels used:    1
  2421 ;; Hardware stack levels required when called:    1
  2422 ;; This function calls:
  2423 ;;		Nothing
  2424 ;; This function is called by:
  2425 ;;		_measure_capacitance
  2426 ;;		_measure_inductance
  2427 ;; This function uses a non-reentrant model
  2428 ;;
  2429                           
  2430                           	psect	text5
  2431  002662                     __ptext5:
  2432                           	opt stack 0
  2433  002662                     _print_unit:
  2434                           	opt stack 28
  2435                           
  2436                           ; BSR set to: 0
  2437                           ;incstack = 0
  2438  002662  FFFF               	dw	65535
  2439                           
  2440                           ; BSR set to: 0
  2441  002664  0012               	return		;funcret
  2442  002666  FFFF               	dw	65535	; errata NOP
  2443  002668                     __end_of_print_unit:
  2444                           	opt stack 0
  2445                           tblptru	equ	0xFF8
  2446                           tblptrh	equ	0xFF7
  2447                           tblptrl	equ	0xFF6
  2448                           tablat	equ	0xFF5
  2449                           intcon	equ	0xFF2
  2450                           intcon2	equ	0xFF1
  2451                           postinc0	equ	0xFEE
  2452                           wreg	equ	0xFE8
  2453                           status	equ	0xFD8
  2454                           
  2455 ;; *************** function _print_reading *****************
  2456 ;; Defined at:
  2457 ;;		line 429 in file "../../../src/print.c"
  2458 ;; Parameters:    Size  Location     Type
  2459 ;;  measurement     2    2[COMRAM] unsigned short 
  2460 ;; Auto vars:     Size  Location     Type
  2461 ;;		None
  2462 ;; Return value:  Size  Location     Type
  2463 ;;		None               void
  2464 ;; Registers used:
  2465 ;;		None
  2466 ;; Tracked objects:
  2467 ;;		On entry : 0/0
  2468 ;;		On exit  : 0/0
  2469 ;;		Unchanged: 0/0
  2470 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2471 ;;      Params:         2       0       0       0       0       0       0
  2472 ;;      Locals:         0       0       0       0       0       0       0
  2473 ;;      Temps:          0       0       0       0       0       0       0
  2474 ;;      Totals:         2       0       0       0       0       0       0
  2475 ;;Total ram usage:        2 bytes
  2476 ;; Hardware stack levels used:    1
  2477 ;; Hardware stack levels required when called:    1
  2478 ;; This function calls:
  2479 ;;		Nothing
  2480 ;; This function is called by:
  2481 ;;		_measure_capacitance
  2482 ;;		_measure_inductance
  2483 ;; This function uses a non-reentrant model
  2484 ;;
  2485                           
  2486                           	psect	text6
  2487  002668                     __ptext6:
  2488                           	opt stack 0
  2489  002668                     _print_reading:
  2490                           	opt stack 28
  2491                           
  2492                           ; BSR set to: 0
  2493                           ;incstack = 0
  2494  002668  FFFF               	dw	65535
  2495  00266A  0012               	return		;funcret
  2496  00266C  FFFF               	dw	65535	; errata NOP
  2497  00266E                     __end_of_print_reading:
  2498                           	opt stack 0
  2499                           tblptru	equ	0xFF8
  2500                           tblptrh	equ	0xFF7
  2501                           tblptrl	equ	0xFF6
  2502                           tablat	equ	0xFF5
  2503                           intcon	equ	0xFF2
  2504                           intcon2	equ	0xFF1
  2505                           postinc0	equ	0xFEE
  2506                           wreg	equ	0xFE8
  2507                           status	equ	0xFD8
  2508                           
  2509 ;; *************** function _format_xint32 *****************
  2510 ;; Defined at:
  2511 ;;		line 48 in file "../../../lib/format.c"
  2512 ;; Parameters:    Size  Location     Type
  2513 ;;  x               4   52[COMRAM] unsigned long 
  2514 ;; Auto vars:     Size  Location     Type
  2515 ;;		None
  2516 ;; Return value:  Size  Location     Type
  2517 ;;		None               void
  2518 ;; Registers used:
  2519 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclat, tosl, cstack
  2520 ;; Tracked objects:
  2521 ;;		On entry : 0/0
  2522 ;;		On exit  : 0/0
  2523 ;;		Unchanged: 0/0
  2524 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2525 ;;      Params:         4       0       0       0       0       0       0
  2526 ;;      Locals:         0       0       0       0       0       0       0
  2527 ;;      Temps:          0       0       0       0       0       0       0
  2528 ;;      Totals:         4       0       0       0       0       0       0
  2529 ;;Total ram usage:        4 bytes
  2530 ;; Hardware stack levels used:    1
  2531 ;; Hardware stack levels required when called:    4
  2532 ;; This function calls:
  2533 ;;		_format_number
  2534 ;;		_format_putchar
  2535 ;;		_output_putch
  2536 ;;		_ser_putch
  2537 ;; This function is called by:
  2538 ;;		_measure_capacitance
  2539 ;; This function uses a non-reentrant model
  2540 ;;
  2541                           
  2542                           	psect	text7
  2543  0021C2                     __ptext7:
  2544                           	opt stack 0
  2545  0021C2                     _format_xint32:
  2546                           	opt stack 25
  2547                           
  2548                           ;incstack = 0
  2549  0021C2  FFFF               	dw	65535
  2550                           
  2551                           ;format.c: 49: putchar_ptr('0');
  2552  0021C4  D801               	call	u2148
  2553  0021C6  D00C               	goto	u2149
  2554  0021C8                     u2148:
  2555  0021C8  FFFF               	dw	65535	; assembler added errata NOP
  2556  0021CA  0005               	push	
  2557  0021CC  6EFA               	movwf	pclath,c
  2558  0021CE  507A               	movf	_putchar_ptr,w,c
  2559  0021D0  6EFD               	movwf	tosl,c
  2560  0021D2  507B               	movf	_putchar_ptr+1,w,c
  2561  0021D4  6EFE               	movwf	tosh,c
  2562  0021D6  50F8               	movf	tblptru,w,c
  2563  0021D8  6EFF               	movwf	tosu,c
  2564  0021DA  50FA               	movf	pclath,w,c
  2565  0021DC  0C30               	retlw	48	;indir
  2566  0021DE  FFFF               	dw	65535	; errata NOP
  2567  0021E0                     u2149:
  2568  0021E0  FFFF               	dw	65535	; assembler added errata NOP
  2569                           
  2570                           ;format.c: 50: putchar_ptr('x');
  2571  0021E2  D801               	call	u2158
  2572  0021E4  D00C               	goto	u2159
  2573  0021E6                     u2158:
  2574  0021E6  FFFF               	dw	65535	; assembler added errata NOP
  2575  0021E8  0005               	push	
  2576  0021EA  6EFA               	movwf	pclath,c
  2577  0021EC  507A               	movf	_putchar_ptr,w,c
  2578  0021EE  6EFD               	movwf	tosl,c
  2579  0021F0  507B               	movf	_putchar_ptr+1,w,c
  2580  0021F2  6EFE               	movwf	tosh,c
  2581  0021F4  50F8               	movf	tblptru,w,c
  2582  0021F6  6EFF               	movwf	tosu,c
  2583  0021F8  50FA               	movf	pclath,w,c
  2584  0021FA  0C78               	retlw	120	;indir
  2585  0021FC  FFFF               	dw	65535	; errata NOP
  2586  0021FE                     u2159:
  2587  0021FE  FFFF               	dw	65535	; assembler added errata NOP
  2588                           
  2589                           ;format.c: 51: format_number((unsigned short int)(x >> 16), 16, -4);
  2590  002200  C037  F00A         	movff	format_xint32@x+2,format_number@n
  2591  002204  C038  F00B         	movff	format_xint32@x+3,format_number@n+1
  2592  002208  0E10               	movlw	16
  2593  00220A  6E0C               	movwf	format_number@base,c
  2594  00220C  0EFC               	movlw	252
  2595  00220E  6E0D               	movwf	format_number@pad,c
  2596  002210  EC53  F00D         	call	_format_number
  2597                           
  2598                           ;format.c: 52: format_number((unsigned short int)(x & 0xffff), 16, -4);
  2599  002214  C035  F00A         	movff	format_xint32@x,format_number@n
  2600  002218  C036  F00B         	movff	format_xint32@x+1,format_number@n+1
  2601  00221C  0E10               	movlw	16
  2602  00221E  6E0C               	movwf	format_number@base,c
  2603  002220  0EFC               	movlw	252
  2604  002222  6E0D               	movwf	format_number@pad,c
  2605  002224  EC53  F00D         	call	_format_number	;wreg free
  2606  002228  0012               	return		;funcret
  2607  00222A  FFFF               	dw	65535	; errata NOP
  2608  00222C                     __end_of_format_xint32:
  2609                           	opt stack 0
  2610                           tosu	equ	0xFFF
  2611                           tosh	equ	0xFFE
  2612                           tosl	equ	0xFFD
  2613                           pclath	equ	0xFFA
  2614                           tblptru	equ	0xFF8
  2615                           tblptrh	equ	0xFF7
  2616                           tblptrl	equ	0xFF6
  2617                           tablat	equ	0xFF5
  2618                           intcon	equ	0xFF2
  2619                           intcon2	equ	0xFF1
  2620                           postinc0	equ	0xFEE
  2621                           wreg	equ	0xFE8
  2622                           status	equ	0xFD8
  2623                           
  2624 ;; *************** function _format_number *****************
  2625 ;; Defined at:
  2626 ;;		line 14 in file "../../../lib/format.c"
  2627 ;; Parameters:    Size  Location     Type
  2628 ;;  n               2    9[COMRAM] unsigned short 
  2629 ;;  base            1   11[COMRAM] unsigned char 
  2630 ;;  pad             1   12[COMRAM] char 
  2631 ;; Auto vars:     Size  Location     Type
  2632 ;;  buf            32   15[COMRAM] unsigned char [32]
  2633 ;;  i               1   51[COMRAM] char 
  2634 ;;  di              1   50[COMRAM] unsigned char 
  2635 ;;  padchar         1   49[COMRAM] unsigned char 
  2636 ;; Return value:  Size  Location     Type
  2637 ;;		None               void
  2638 ;; Registers used:
  2639 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclat, tosl, cstack
  2640 ;; Tracked objects:
  2641 ;;		On entry : 0/0
  2642 ;;		On exit  : 0/0
  2643 ;;		Unchanged: 0/0
  2644 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2645 ;;      Params:         4       0       0       0       0       0       0
  2646 ;;      Locals:        37       0       0       0       0       0       0
  2647 ;;      Temps:          2       0       0       0       0       0       0
  2648 ;;      Totals:        43       0       0       0       0       0       0
  2649 ;;Total ram usage:       43 bytes
  2650 ;; Hardware stack levels used:    1
  2651 ;; Hardware stack levels required when called:    3
  2652 ;; This function calls:
  2653 ;;		___lwdiv
  2654 ;;		___lwmod
  2655 ;;		_format_putchar
  2656 ;;		_output_putch
  2657 ;;		_ser_putch
  2658 ;; This function is called by:
  2659 ;;		_format_xint32
  2660 ;; This function uses a non-reentrant model
  2661 ;;
  2662                           
  2663                           	psect	text8
  2664  001AA6                     __ptext8:
  2665                           	opt stack 0
  2666  001AA6                     _format_number:
  2667                           	opt stack 25
  2668                           
  2669                           ;incstack = 0
  2670  001AA6  FFFF               	dw	65535
  2671                           
  2672                           ;format.c: 15: char buf[8 * sizeof(long)];
  2673                           ;format.c: 16: unsigned char di;
  2674                           ;format.c: 17: signed char i = 0;
  2675  001AA8  6A34               	clrf	format_number@i,c
  2676                           
  2677                           ;format.c: 18: char padchar = ' ';
  2678  001AAA  0E20               	movlw	32
  2679  001AAC  6E32               	movwf	format_number@padchar,c
  2680                           
  2681                           ;format.c: 20: if(pad < 0) {
  2682  001AAE  AE0D               	btfss	format_number@pad,7,c
  2683  001AB0  D003               	goto	l2481
  2684                           
  2685                           ;format.c: 21: pad = -pad;
  2686  001AB2  6C0D               	negf	format_number@pad,c
  2687                           
  2688                           ;format.c: 22: padchar = '0';
  2689  001AB4  0E30               	movlw	48
  2690  001AB6  6E32               	movwf	format_number@padchar,c
  2691  001AB8                     l2481:
  2692  001AB8  FFFF               	dw	65535	; assembler added errata NOP
  2693                           
  2694                           ;format.c: 34: di = n % base;
  2695  001ABA  C00A  F003         	movff	format_number@n,___lwmod@dividend
  2696  001ABE  C00B  F004         	movff	format_number@n+1,___lwmod@dividend+1
  2697  001AC2  C00C  F005         	movff	format_number@base,___lwmod@divisor
  2698  001AC6  6A06               	clrf	___lwmod@divisor+1,c
  2699  001AC8  EC1C  F012         	call	___lwmod	;wreg free
  2700  001ACC  5003               	movf	?___lwmod,w,c
  2701  001ACE  6E33               	movwf	format_number@di,c
  2702                           
  2703                           ;format.c: 35: buf[i++] = (di < 10 ? (unsigned char)'0' + di : (unsigned char)'A' + di -
      +                           10);
  2704  001AD0  0E09               	movlw	9
  2705  001AD2  6433               	cpfsgt	format_number@di,c
  2706  001AD4  D002               	goto	l2487
  2707  001AD6  0E37               	movlw	55
  2708  001AD8  D002               	goto	L3
  2709  001ADA                     l2487:
  2710  001ADA  FFFF               	dw	65535	; assembler added errata NOP
  2711  001ADC  0E30               	movlw	48
  2712  001ADE                     L3:
  2713  001ADE  FFFF               	dw	65535	; assembler added errata NOP
  2714  001AE0  2433               	addwf	format_number@di,w,c
  2715  001AE2  6E30               	movwf	_format_number$128,c
  2716  001AE4  6A31               	clrf	_format_number$128+1,c
  2717  001AE6  0E00               	movlw	0
  2718  001AE8  2231               	addwfc	_format_number$128+1,f,c
  2719  001AEA  5034               	movf	format_number@i,w,c
  2720  001AEC  0F10               	addlw	low format_number@buf
  2721  001AEE  6ED9               	movwf	fsr2l,c
  2722  001AF0  6ADA               	clrf	fsr2h,c
  2723  001AF2  C030  FFDF         	movff	_format_number$128,indf2
  2724  001AF6  2A34               	incf	format_number@i,f,c
  2725                           
  2726                           ;format.c: 37: n /= base;
  2727  001AF8  C00A  F003         	movff	format_number@n,___lwdiv@dividend
  2728  001AFC  C00B  F004         	movff	format_number@n+1,___lwdiv@dividend+1
  2729  001B00  C00C  F005         	movff	format_number@base,___lwdiv@divisor
  2730  001B04  6A06               	clrf	___lwdiv@divisor+1,c
  2731  001B06  ECCB  F011         	call	___lwdiv	;wreg free
  2732  001B0A  C003  F00A         	movff	?___lwdiv,format_number@n
  2733  001B0E  C004  F00B         	movff	?___lwdiv+1,format_number@n+1
  2734                           
  2735                           ;format.c: 38: } while(n > 0);
  2736  001B12  500A               	movf	format_number@n,w,c
  2737  001B14  100B               	iorwf	format_number@n+1,w,c
  2738  001B16  E010               	bz	l2499
  2739  001B18  D7CF               	goto	l2481
  2740  001B1A                     l2497:
  2741  001B1A  D801               	call	u2048
  2742  001B1C  D00D               	goto	l2499
  2743  001B1E                     u2048:
  2744  001B1E  FFFF               	dw	65535	; assembler added errata NOP
  2745  001B20  0005               	push	
  2746  001B22  6EFA               	movwf	pclath,c
  2747  001B24  507A               	movf	_putchar_ptr,w,c
  2748  001B26  6EFD               	movwf	tosl,c
  2749  001B28  507B               	movf	_putchar_ptr+1,w,c
  2750  001B2A  6EFE               	movwf	tosh,c
  2751  001B2C  50F8               	movf	tblptru,w,c
  2752  001B2E  6EFF               	movwf	tosu,c
  2753  001B30  50FA               	movf	pclath,w,c
  2754  001B32  5032               	movf	format_number@padchar,w,c
  2755  001B34  0012               	return		;indir
  2756  001B36  FFFF               	dw	65535	; errata NOP
  2757  001B38                     l2499:
  2758  001B38  FFFF               	dw	65535	; assembler added errata NOP
  2759  001B3A  060D               	decf	format_number@pad,f,c
  2760  001B3C  280D               	incf	format_number@pad,w,c
  2761  001B3E  6E0E               	movwf	??_format_number& (0+255),c
  2762  001B40  5034               	movf	format_number@i,w,c
  2763  001B42  0A80               	xorlw	128
  2764  001B44  6E0F               	movwf	(??_format_number+1)& (0+255),c
  2765  001B46  500E               	movf	??_format_number,w,c
  2766  001B48  0A80               	xorlw	128
  2767  001B4A  5C0F               	subwf	(??_format_number+1)& (0+255),w,c
  2768  001B4C  E3E6               	bnc	l2497
  2769  001B4E                     l2501:
  2770  001B4E  FFFF               	dw	65535	; assembler added errata NOP
  2771                           
  2772                           ;format.c: 42: for(; i > 0; i--) putchar_ptr((char)buf[(signed short int)i - 1]);
  2773  001B50  5034               	movf	format_number@i,w,c
  2774  001B52  0A80               	xorlw	128
  2775  001B54  0F7F               	addlw	-129
  2776  001B56  E319               	bnc	l161
  2777  001B58  D801               	call	u2078
  2778  001B5A  D014               	goto	l2507
  2779  001B5C                     u2078:
  2780  001B5C  FFFF               	dw	65535	; assembler added errata NOP
  2781  001B5E  0005               	push	
  2782  001B60  6EFA               	movwf	pclath,c
  2783  001B62  507A               	movf	_putchar_ptr,w,c
  2784  001B64  6EFD               	movwf	tosl,c
  2785  001B66  507B               	movf	_putchar_ptr+1,w,c
  2786  001B68  6EFE               	movwf	tosh,c
  2787  001B6A  50F8               	movf	tblptru,w,c
  2788  001B6C  6EFF               	movwf	tosu,c
  2789  001B6E  50FA               	movf	pclath,w,c
  2790  001B70  C034  F00E         	movff	format_number@i,??_format_number
  2791  001B74  060E               	decf	??_format_number,f,c
  2792  001B76  500E               	movf	??_format_number,w,c
  2793  001B78  0F10               	addlw	low format_number@buf
  2794  001B7A  6ED9               	movwf	fsr2l,c
  2795  001B7C  6ADA               	clrf	fsr2h,c
  2796  001B7E  50DF               	movf	indf2,w,c
  2797  001B80  0012               	return		;indir
  2798  001B82  FFFF               	dw	65535	; errata NOP
  2799  001B84                     l2507:
  2800  001B84  FFFF               	dw	65535	; assembler added errata NOP
  2801  001B86  0634               	decf	format_number@i,f,c
  2802  001B88  D7E2               	goto	l2501
  2803  001B8A                     l161:
  2804  001B8A  0012               	return		;funcret
  2805  001B8C  FFFF               	dw	65535	; errata NOP
  2806  001B8E                     __end_of_format_number:
  2807                           	opt stack 0
  2808                           tosu	equ	0xFFF
  2809                           tosh	equ	0xFFE
  2810                           tosl	equ	0xFFD
  2811                           pclath	equ	0xFFA
  2812                           tblptru	equ	0xFF8
  2813                           tblptrh	equ	0xFF7
  2814                           tblptrl	equ	0xFF6
  2815                           tablat	equ	0xFF5
  2816                           intcon	equ	0xFF2
  2817                           intcon2	equ	0xFF1
  2818                           postinc0	equ	0xFEE
  2819                           wreg	equ	0xFE8
  2820                           indf2	equ	0xFDF
  2821                           fsr2h	equ	0xFDA
  2822                           fsr2l	equ	0xFD9
  2823                           status	equ	0xFD8
  2824                           
  2825 ;; *************** function ___lwmod *****************
  2826 ;; Defined at:
  2827 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lwmod.c"
  2828 ;; Parameters:    Size  Location     Type
  2829 ;;  dividend        2    2[COMRAM] unsigned int 
  2830 ;;  divisor         2    4[COMRAM] unsigned int 
  2831 ;; Auto vars:     Size  Location     Type
  2832 ;;  counter         1    6[COMRAM] unsigned char 
  2833 ;; Return value:  Size  Location     Type
  2834 ;;                  2    2[COMRAM] unsigned int 
  2835 ;; Registers used:
  2836 ;;		wreg, status,2, status,0
  2837 ;; Tracked objects:
  2838 ;;		On entry : 0/0
  2839 ;;		On exit  : 0/0
  2840 ;;		Unchanged: 0/0
  2841 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2842 ;;      Params:         4       0       0       0       0       0       0
  2843 ;;      Locals:         1       0       0       0       0       0       0
  2844 ;;      Temps:          0       0       0       0       0       0       0
  2845 ;;      Totals:         5       0       0       0       0       0       0
  2846 ;;Total ram usage:        5 bytes
  2847 ;; Hardware stack levels used:    1
  2848 ;; Hardware stack levels required when called:    1
  2849 ;; This function calls:
  2850 ;;		Nothing
  2851 ;; This function is called by:
  2852 ;;		_format_number
  2853 ;; This function uses a non-reentrant model
  2854 ;;
  2855                           
  2856                           	psect	text9
  2857  002438                     __ptext9:
  2858                           	opt stack 0
  2859  002438                     ___lwmod:
  2860                           	opt stack 26
  2861                           
  2862                           ;incstack = 0
  2863  002438  FFFF               	dw	65535
  2864  00243A  5005               	movf	___lwmod@divisor,w,c
  2865  00243C  1006               	iorwf	___lwmod@divisor+1,w,c
  2866  00243E  E01A               	bz	l926
  2867  002440  0E01               	movlw	1
  2868  002442  6E07               	movwf	___lwmod@counter,c
  2869  002444  D005               	goto	l2419
  2870  002446                     l2417:
  2871  002446  FFFF               	dw	65535	; assembler added errata NOP
  2872  002448  90D8               	bcf	status,0,c
  2873  00244A  3605               	rlcf	___lwmod@divisor,f,c
  2874  00244C  3606               	rlcf	___lwmod@divisor+1,f,c
  2875  00244E  2A07               	incf	___lwmod@counter,f,c
  2876  002450                     l2419:
  2877  002450  FFFF               	dw	65535	; assembler added errata NOP
  2878  002452  AE06               	btfss	___lwmod@divisor+1,7,c
  2879  002454  D7F8               	goto	l2417
  2880  002456                     l2421:
  2881  002456  FFFF               	dw	65535	; assembler added errata NOP
  2882  002458  5005               	movf	___lwmod@divisor,w,c
  2883  00245A  5C03               	subwf	___lwmod@dividend,w,c
  2884  00245C  5006               	movf	___lwmod@divisor+1,w,c
  2885  00245E  5804               	subwfb	___lwmod@dividend+1,w,c
  2886  002460  E304               	bnc	l2425
  2887  002462  5005               	movf	___lwmod@divisor,w,c
  2888  002464  5E03               	subwf	___lwmod@dividend,f,c
  2889  002466  5006               	movf	___lwmod@divisor+1,w,c
  2890  002468  5A04               	subwfb	___lwmod@dividend+1,f,c
  2891  00246A                     l2425:
  2892  00246A  90D8               	bcf	status,0,c
  2893  00246C  3206               	rrcf	___lwmod@divisor+1,f,c
  2894  00246E  3205               	rrcf	___lwmod@divisor,f,c
  2895  002470  2E07               	decfsz	___lwmod@counter,f,c
  2896  002472  D7F1               	goto	l2421
  2897  002474                     l926:
  2898  002474  C003  F003         	movff	___lwmod@dividend,?___lwmod
  2899  002478  C004  F004         	movff	___lwmod@dividend+1,?___lwmod+1
  2900  00247C  0012               	return		;funcret
  2901  00247E  FFFF               	dw	65535	; errata NOP
  2902  002480                     __end_of___lwmod:
  2903                           	opt stack 0
  2904                           tosu	equ	0xFFF
  2905                           tosh	equ	0xFFE
  2906                           tosl	equ	0xFFD
  2907                           pclath	equ	0xFFA
  2908                           tblptru	equ	0xFF8
  2909                           tblptrh	equ	0xFF7
  2910                           tblptrl	equ	0xFF6
  2911                           tablat	equ	0xFF5
  2912                           intcon	equ	0xFF2
  2913                           intcon2	equ	0xFF1
  2914                           postinc0	equ	0xFEE
  2915                           wreg	equ	0xFE8
  2916                           indf2	equ	0xFDF
  2917                           fsr2h	equ	0xFDA
  2918                           fsr2l	equ	0xFD9
  2919                           status	equ	0xFD8
  2920                           
  2921 ;; *************** function ___lwdiv *****************
  2922 ;; Defined at:
  2923 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lwdiv.c"
  2924 ;; Parameters:    Size  Location     Type
  2925 ;;  dividend        2    2[COMRAM] unsigned int 
  2926 ;;  divisor         2    4[COMRAM] unsigned int 
  2927 ;; Auto vars:     Size  Location     Type
  2928 ;;  quotient        2    6[COMRAM] unsigned int 
  2929 ;;  counter         1    8[COMRAM] unsigned char 
  2930 ;; Return value:  Size  Location     Type
  2931 ;;                  2    2[COMRAM] unsigned int 
  2932 ;; Registers used:
  2933 ;;		wreg, status,2, status,0
  2934 ;; Tracked objects:
  2935 ;;		On entry : 0/0
  2936 ;;		On exit  : 0/0
  2937 ;;		Unchanged: 0/0
  2938 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2939 ;;      Params:         4       0       0       0       0       0       0
  2940 ;;      Locals:         3       0       0       0       0       0       0
  2941 ;;      Temps:          0       0       0       0       0       0       0
  2942 ;;      Totals:         7       0       0       0       0       0       0
  2943 ;;Total ram usage:        7 bytes
  2944 ;; Hardware stack levels used:    1
  2945 ;; Hardware stack levels required when called:    1
  2946 ;; This function calls:
  2947 ;;		Nothing
  2948 ;; This function is called by:
  2949 ;;		_format_number
  2950 ;; This function uses a non-reentrant model
  2951 ;;
  2952                           
  2953                           	psect	text10
  2954  002396                     __ptext10:
  2955                           	opt stack 0
  2956  002396                     ___lwdiv:
  2957                           	opt stack 26
  2958                           
  2959                           ;incstack = 0
  2960  002396  FFFF               	dw	65535
  2961  002398  6A07               	clrf	___lwdiv@quotient,c
  2962  00239A  6A08               	clrf	___lwdiv@quotient+1,c
  2963  00239C  5005               	movf	___lwdiv@divisor,w,c
  2964  00239E  1006               	iorwf	___lwdiv@divisor+1,w,c
  2965  0023A0  E01E               	bz	l916
  2966  0023A2  0E01               	movlw	1
  2967  0023A4  6E09               	movwf	___lwdiv@counter,c
  2968  0023A6  D005               	goto	l2399
  2969  0023A8                     l2397:
  2970  0023A8  FFFF               	dw	65535	; assembler added errata NOP
  2971  0023AA  90D8               	bcf	status,0,c
  2972  0023AC  3605               	rlcf	___lwdiv@divisor,f,c
  2973  0023AE  3606               	rlcf	___lwdiv@divisor+1,f,c
  2974  0023B0  2A09               	incf	___lwdiv@counter,f,c
  2975  0023B2                     l2399:
  2976  0023B2  FFFF               	dw	65535	; assembler added errata NOP
  2977  0023B4  AE06               	btfss	___lwdiv@divisor+1,7,c
  2978  0023B6  D7F8               	goto	l2397
  2979  0023B8                     l2401:
  2980  0023B8  FFFF               	dw	65535	; assembler added errata NOP
  2981  0023BA  90D8               	bcf	status,0,c
  2982  0023BC  3607               	rlcf	___lwdiv@quotient,f,c
  2983  0023BE  3608               	rlcf	___lwdiv@quotient+1,f,c
  2984  0023C0  5005               	movf	___lwdiv@divisor,w,c
  2985  0023C2  5C03               	subwf	___lwdiv@dividend,w,c
  2986  0023C4  5006               	movf	___lwdiv@divisor+1,w,c
  2987  0023C6  5804               	subwfb	___lwdiv@dividend+1,w,c
  2988  0023C8  E305               	bnc	l2409
  2989  0023CA  5005               	movf	___lwdiv@divisor,w,c
  2990  0023CC  5E03               	subwf	___lwdiv@dividend,f,c
  2991  0023CE  5006               	movf	___lwdiv@divisor+1,w,c
  2992  0023D0  5A04               	subwfb	___lwdiv@dividend+1,f,c
  2993  0023D2  8007               	bsf	___lwdiv@quotient,0,c
  2994  0023D4                     l2409:
  2995  0023D4  90D8               	bcf	status,0,c
  2996  0023D6  3206               	rrcf	___lwdiv@divisor+1,f,c
  2997  0023D8  3205               	rrcf	___lwdiv@divisor,f,c
  2998  0023DA  2E09               	decfsz	___lwdiv@counter,f,c
  2999  0023DC  D7ED               	goto	l2401
  3000  0023DE                     l916:
  3001  0023DE  C007  F003         	movff	___lwdiv@quotient,?___lwdiv
  3002  0023E2  C008  F004         	movff	___lwdiv@quotient+1,?___lwdiv+1
  3003  0023E6  0012               	return		;funcret
  3004  0023E8  FFFF               	dw	65535	; errata NOP
  3005  0023EA                     __end_of___lwdiv:
  3006                           	opt stack 0
  3007                           tosu	equ	0xFFF
  3008                           tosh	equ	0xFFE
  3009                           tosl	equ	0xFFD
  3010                           pclath	equ	0xFFA
  3011                           tblptru	equ	0xFF8
  3012                           tblptrh	equ	0xFF7
  3013                           tblptrl	equ	0xFF6
  3014                           tablat	equ	0xFF5
  3015                           intcon	equ	0xFF2
  3016                           intcon2	equ	0xFF1
  3017                           postinc0	equ	0xFEE
  3018                           wreg	equ	0xFE8
  3019                           indf2	equ	0xFDF
  3020                           fsr2h	equ	0xFDA
  3021                           fsr2l	equ	0xFD9
  3022                           status	equ	0xFD8
  3023                           
  3024 ;; *************** function _format_double *****************
  3025 ;; Defined at:
  3026 ;;		line 74 in file "../../../lib/format.c"
  3027 ;; Parameters:    Size  Location     Type
  3028 ;;  num             4   32[BANK0 ] unsigned int 
  3029 ;; Auto vars:     Size  Location     Type
  3030 ;;  weight          4   44[BANK0 ] unsigned int 
  3031 ;;  m               2   50[BANK0 ] short 
  3032 ;;  digit           2   48[BANK0 ] short 
  3033 ;; Return value:  Size  Location     Type
  3034 ;;		None               void
  3035 ;; Registers used:
  3036 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3037 ;; Tracked objects:
  3038 ;;		On entry : 0/0
  3039 ;;		On exit  : 0/0
  3040 ;;		Unchanged: 0/0
  3041 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3042 ;;      Params:         0       4       0       0       0       0       0
  3043 ;;      Locals:         0      16       0       0       0       0       0
  3044 ;;      Temps:          0       0       0       0       0       0       0
  3045 ;;      Totals:         0      20       0       0       0       0       0
  3046 ;;Total ram usage:       20 bytes
  3047 ;; Hardware stack levels used:    1
  3048 ;; Hardware stack levels required when called:    6
  3049 ;; This function calls:
  3050 ;;		___awtofl
  3051 ;;		___fldiv
  3052 ;;		___flge
  3053 ;;		___flmul
  3054 ;;		___flsub
  3055 ;;		___fltol
  3056 ;;		_floor
  3057 ;;		_format_putchar
  3058 ;;		_log10
  3059 ;;		_output_putch
  3060 ;;		_pow
  3061 ;;		_ser_putch
  3062 ;; This function is called by:
  3063 ;;		_measure_capacitance
  3064 ;; This function uses a non-reentrant model
  3065 ;;
  3066                           
  3067                           	psect	text11
  3068  0011E4                     __ptext11:
  3069                           	opt stack 0
  3070  0011E4                     _format_double:
  3071                           	opt stack 23
  3072                           
  3073                           ;incstack = 0
  3074  0011E4  FFFF               	dw	65535
  3075                           
  3076                           ;format.c: 75: short m = (short)log10(num);
  3077  0011E6  C0A0  F055         	movff	format_double@num,log10@x
  3078  0011EA  C0A1  F056         	movff	format_double@num+1,log10@x+1
  3079  0011EE  C0A2  F057         	movff	format_double@num+2,log10@x+2
  3080  0011F2  C0A3  F058         	movff	format_double@num+3,log10@x+3
  3081  0011F6  EC47  F011         	call	_log10
  3082  0011FA  C055  F05D         	movff	?_log10,___fltol@f1
  3083  0011FE  C056  F05E         	movff	?_log10+1,___fltol@f1+1
  3084  001202  C057  F05F         	movff	?_log10+2,___fltol@f1+2
  3085  001206  C058  F060         	movff	?_log10+3,___fltol@f1+3
  3086  00120A  EC0B  F00F         	call	___fltol	;wreg free
  3087  00120E  C05D  F0B2         	movff	?___fltol,format_double@m
  3088  001212  C05E  F0B3         	movff	?___fltol+1,format_double@m+1
  3089                           
  3090                           ;format.c: 76: short digit;
  3091                           ;format.c: 79: while(num > 0 + 1.19209290e-07) {
  3092  001216  D0B5               	goto	l3063
  3093  001218                     l3045:
  3094  001218  FFFF               	dw	65535	; assembler added errata NOP
  3095                           
  3096                           ;format.c: 80: double weight = pow(10.0l, m);
  3097  00121A  C0B2  F00D         	movff	format_double@m,___awtofl@c
  3098  00121E  C0B3  F00E         	movff	format_double@m+1,___awtofl@c+1
  3099  001222  EC85  F012         	call	___awtofl	;wreg free
  3100  001226  C00D  F0A4         	movff	?___awtofl,_format_double$919
  3101  00122A  C00E  F0A5         	movff	?___awtofl+1,_format_double$919+1
  3102  00122E  C00F  F0A6         	movff	?___awtofl+2,_format_double$919+2
  3103  001232  C010  F0A7         	movff	?___awtofl+3,_format_double$919+3
  3104                           
  3105                           ;format.c: 80: double weight = pow(10.0l, m);
  3106  001236  0100               	movlb	0	; () banked
  3107  001238  6B8B               	clrf	pow@x& (0+255),b
  3108  00123A  6B8C               	clrf	(pow@x+1)& (0+255),b
  3109  00123C  0E20               	movlw	32
  3110  00123E  6F8D               	movwf	(pow@x+2)& (0+255),b
  3111  001240  0E41               	movlw	65
  3112  001242  6F8E               	movwf	(pow@x+3)& (0+255),b
  3113  001244  C0A4  F08F         	movff	_format_double$919,pow@y
  3114  001248  C0A5  F090         	movff	_format_double$919+1,pow@y+1
  3115  00124C  C0A6  F091         	movff	_format_double$919+2,pow@y+2
  3116  001250  C0A7  F092         	movff	_format_double$919+3,pow@y+3
  3117  001254  ECB9  F00A         	call	_pow	;wreg free
  3118  001258  C08B  F0AC         	movff	?_pow,format_double@weight
  3119  00125C  C08C  F0AD         	movff	?_pow+1,format_double@weight+1
  3120  001260  C08D  F0AE         	movff	?_pow+2,format_double@weight+2
  3121  001264  C08E  F0AF         	movff	?_pow+3,format_double@weight+3
  3122                           
  3123                           ; BSR set to: 0
  3124                           ;format.c: 81: digit = (short)floor(num / weight);
  3125  001268  C0AC  F011         	movff	format_double@weight,___fldiv@f2
  3126  00126C  C0AD  F012         	movff	format_double@weight+1,___fldiv@f2+1
  3127  001270  C0AE  F013         	movff	format_double@weight+2,___fldiv@f2+2
  3128  001274  C0AF  F014         	movff	format_double@weight+3,___fldiv@f2+3
  3129  001278  C0A0  F00D         	movff	format_double@num,___fldiv@f1
  3130  00127C  C0A1  F00E         	movff	format_double@num+1,___fldiv@f1+1
  3131  001280  C0A2  F00F         	movff	format_double@num+2,___fldiv@f1+2
  3132  001284  C0A3  F010         	movff	format_double@num+3,___fldiv@f1+3
  3133  001288  EC63  F00F         	call	___fldiv	;wreg free
  3134  00128C  C00D  F06C         	movff	?___fldiv,floor@x
  3135  001290  C00E  F06D         	movff	?___fldiv+1,floor@x+1
  3136  001294  C00F  F06E         	movff	?___fldiv+2,floor@x+2
  3137  001298  C010  F06F         	movff	?___fldiv+3,floor@x+3
  3138  00129C  ECD2  F00C         	call	_floor	;wreg free
  3139  0012A0  C06C  F0A8         	movff	?_floor,_format_double$920
  3140  0012A4  C06D  F0A9         	movff	?_floor+1,_format_double$920+1
  3141  0012A8  C06E  F0AA         	movff	?_floor+2,_format_double$920+2
  3142  0012AC  C06F  F0AB         	movff	?_floor+3,_format_double$920+3
  3143                           
  3144                           ;format.c: 81: digit = (short)floor(num / weight);
  3145  0012B0  C0A8  F05D         	movff	_format_double$920,___fltol@f1
  3146  0012B4  C0A9  F05E         	movff	_format_double$920+1,___fltol@f1+1
  3147  0012B8  C0AA  F05F         	movff	_format_double$920+2,___fltol@f1+2
  3148  0012BC  C0AB  F060         	movff	_format_double$920+3,___fltol@f1+3
  3149  0012C0  EC0B  F00F         	call	___fltol	;wreg free
  3150  0012C4  C05D  F0B0         	movff	?___fltol,format_double@digit
  3151  0012C8  C05E  F0B1         	movff	?___fltol+1,format_double@digit+1
  3152                           
  3153                           ;format.c: 82: num -= (digit * weight);
  3154  0012CC  C0A0  F043         	movff	format_double@num,___flsub@f1
  3155  0012D0  C0A1  F044         	movff	format_double@num+1,___flsub@f1+1
  3156  0012D4  C0A2  F045         	movff	format_double@num+2,___flsub@f1+2
  3157  0012D8  C0A3  F046         	movff	format_double@num+3,___flsub@f1+3
  3158  0012DC  C0AC  F020         	movff	format_double@weight,___flmul@f2
  3159  0012E0  C0AD  F021         	movff	format_double@weight+1,___flmul@f2+1
  3160  0012E4  C0AE  F022         	movff	format_double@weight+2,___flmul@f2+2
  3161  0012E8  C0AF  F023         	movff	format_double@weight+3,___flmul@f2+3
  3162  0012EC  C0B0  F00D         	movff	format_double@digit,___awtofl@c
  3163  0012F0  C0B1  F00E         	movff	format_double@digit+1,___awtofl@c+1
  3164  0012F4  EC85  F012         	call	___awtofl	;wreg free
  3165  0012F8  C00D  F01C         	movff	?___awtofl,___flmul@f1
  3166  0012FC  C00E  F01D         	movff	?___awtofl+1,___flmul@f1+1
  3167  001300  C00F  F01E         	movff	?___awtofl+2,___flmul@f1+2
  3168  001304  C010  F01F         	movff	?___awtofl+3,___flmul@f1+3
  3169  001308  ECD6  F009         	call	___flmul	;wreg free
  3170  00130C  C01C  F047         	movff	?___flmul,___flsub@f2
  3171  001310  C01D  F048         	movff	?___flmul+1,___flsub@f2+1
  3172  001314  C01E  F049         	movff	?___flmul+2,___flsub@f2+2
  3173  001318  C01F  F04A         	movff	?___flmul+3,___flsub@f2+3
  3174  00131C  EC40  F012         	call	___flsub	;wreg free
  3175  001320  C043  F0A0         	movff	?___flsub,format_double@num
  3176  001324  C044  F0A1         	movff	?___flsub+1,format_double@num+1
  3177  001328  C045  F0A2         	movff	?___flsub+2,format_double@num+2
  3178  00132C  C046  F0A3         	movff	?___flsub+3,format_double@num+3
  3179                           
  3180                           ;format.c: 83: putchar_ptr((char)('0' + digit));
  3181  001330  D801               	call	u2628
  3182  001332  D00F               	goto	l3057
  3183  001334                     u2628:
  3184  001334  FFFF               	dw	65535	; assembler added errata NOP
  3185  001336  0005               	push	
  3186  001338  6EFA               	movwf	pclath,c
  3187  00133A  507A               	movf	_putchar_ptr,w,c
  3188  00133C  6EFD               	movwf	tosl,c
  3189  00133E  507B               	movf	_putchar_ptr+1,w,c
  3190  001340  6EFE               	movwf	tosh,c
  3191  001342  50F8               	movf	tblptru,w,c
  3192  001344  6EFF               	movwf	tosu,c
  3193  001346  50FA               	movf	pclath,w,c
  3194  001348  0100               	movlb	0	; () banked
  3195  00134A  51B0               	movf	format_double@digit& (0+255),w,b
  3196  00134C  0F30               	addlw	48
  3197  00134E  0012               	return		;indir
  3198  001350  FFFF               	dw	65535	; errata NOP
  3199  001352                     l3057:
  3200  001352  FFFF               	dw	65535	; assembler added errata NOP
  3201                           
  3202                           ;format.c: 84: if(m == 0)
  3203  001354  0100               	movlb	0	; () banked
  3204  001356  51B2               	movf	format_double@m& (0+255),w,b
  3205  001358  11B3               	iorwf	(format_double@m+1)& (0+255),w,b
  3206  00135A  E10E               	bnz	l3061
  3207                           
  3208                           ; BSR set to: 0
  3209                           ;format.c: 85: putchar_ptr('.');
  3210  00135C  D801               	call	u2648
  3211  00135E  D00C               	goto	l3061
  3212  001360                     u2648:
  3213  001360  FFFF               	dw	65535	; assembler added errata NOP
  3214  001362  0005               	push	
  3215  001364  6EFA               	movwf	pclath,c
  3216  001366  507A               	movf	_putchar_ptr,w,c
  3217  001368  6EFD               	movwf	tosl,c
  3218  00136A  507B               	movf	_putchar_ptr+1,w,c
  3219  00136C  6EFE               	movwf	tosh,c
  3220  00136E  50F8               	movf	tblptru,w,c
  3221  001370  6EFF               	movwf	tosu,c
  3222  001372  50FA               	movf	pclath,w,c
  3223  001374  0C2E               	retlw	46	;indir
  3224  001376  FFFF               	dw	65535	; errata NOP
  3225  001378                     l3061:
  3226  001378  FFFF               	dw	65535	; assembler added errata NOP
  3227                           
  3228                           ;format.c: 86: m--;
  3229  00137A  0100               	movlb	0	; () banked
  3230  00137C  07B2               	decf	format_double@m& (0+255),f,b
  3231  00137E  A0D8               	btfss	status,0,c
  3232  001380  07B3               	decf	(format_double@m+1)& (0+255),f,b
  3233  001382                     l3063:
  3234  001382  FFFF               	dw	65535	; assembler added errata NOP
  3235  001384  6A03               	clrf	___flge@ff1,c
  3236  001386  6A04               	clrf	___flge@ff1+1,c
  3237  001388  6A05               	clrf	___flge@ff1+2,c
  3238  00138A  0E34               	movlw	52
  3239  00138C  6E06               	movwf	___flge@ff1+3,c
  3240  00138E  C0A0  F007         	movff	format_double@num,___flge@ff2
  3241  001392  C0A1  F008         	movff	format_double@num+1,___flge@ff2+1
  3242  001396  C0A2  F009         	movff	format_double@num+2,___flge@ff2+2
  3243  00139A  C0A3  F00A         	movff	format_double@num+3,___flge@ff2+3
  3244  00139E  EC76  F011         	call	___flge
  3245  0013A2  B0D8               	btfsc	status,0,c
  3246  0013A4  0012               	return		;funcret
  3247  0013A6  FFFF               	dw	65535	; assembler added errata NOP
  3248  0013A8  D737               	goto	l3045
  3249  0013AA  FFFF               	dw	65535	; errata NOP
  3250  0013AC                     __end_of_format_double:
  3251                           	opt stack 0
  3252                           tosu	equ	0xFFF
  3253                           tosh	equ	0xFFE
  3254                           tosl	equ	0xFFD
  3255                           pclath	equ	0xFFA
  3256                           tblptru	equ	0xFF8
  3257                           tblptrh	equ	0xFF7
  3258                           tblptrl	equ	0xFF6
  3259                           tablat	equ	0xFF5
  3260                           intcon	equ	0xFF2
  3261                           intcon2	equ	0xFF1
  3262                           postinc0	equ	0xFEE
  3263                           wreg	equ	0xFE8
  3264                           indf2	equ	0xFDF
  3265                           fsr2h	equ	0xFDA
  3266                           fsr2l	equ	0xFD9
  3267                           status	equ	0xFD8
  3268                           
  3269 ;; *************** function _pow *****************
  3270 ;; Defined at:
  3271 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\pow.c"
  3272 ;; Parameters:    Size  Location     Type
  3273 ;;  x               4   11[BANK0 ] short 
  3274 ;;  y               4   15[BANK0 ] short 
  3275 ;; Auto vars:     Size  Location     Type
  3276 ;;  yi              4   28[BANK0 ] unsigned long 
  3277 ;;  sign            1   27[BANK0 ] unsigned char 
  3278 ;; Return value:  Size  Location     Type
  3279 ;;                  4   11[BANK0 ] unsigned char 
  3280 ;; Registers used:
  3281 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3282 ;; Tracked objects:
  3283 ;;		On entry : F/0
  3284 ;;		On exit  : F/0
  3285 ;;		Unchanged: 0/0
  3286 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3287 ;;      Params:         0       8       0       0       0       0       0
  3288 ;;      Locals:         0      13       0       0       0       0       0
  3289 ;;      Temps:          0       0       0       0       0       0       0
  3290 ;;      Totals:         0      21       0       0       0       0       0
  3291 ;;Total ram usage:       21 bytes
  3292 ;; Hardware stack levels used:    1
  3293 ;; Hardware stack levels required when called:    5
  3294 ;; This function calls:
  3295 ;;		___flge
  3296 ;;		___flmul
  3297 ;;		___flneg
  3298 ;;		___fltol
  3299 ;;		___lltofl
  3300 ;;		_exp
  3301 ;;		_log
  3302 ;; This function is called by:
  3303 ;;		_format_double
  3304 ;; This function uses a non-reentrant model
  3305 ;;
  3306                           
  3307                           	psect	text12
  3308  001572                     __ptext12:
  3309                           	opt stack 0
  3310  001572                     _pow:
  3311                           	opt stack 23
  3312                           
  3313                           ;incstack = 0
  3314  001572  FFFF               	dw	65535
  3315                           
  3316                           ; BSR set to: 0
  3317  001574  6B9B               	clrf	pow@sign& (0+255),b
  3318                           
  3319                           ; BSR set to: 0
  3320  001576  518B               	movf	pow@x& (0+255),w,b
  3321  001578  118C               	iorwf	(pow@x+1)& (0+255),w,b
  3322  00157A  118D               	iorwf	(pow@x+2)& (0+255),w,b
  3323  00157C  118E               	iorwf	(pow@x+3)& (0+255),w,b
  3324  00157E  E110               	bnz	l3015
  3325                           
  3326                           ; BSR set to: 0
  3327  001580  6A03               	clrf	___flge@ff1,c
  3328  001582  6A04               	clrf	___flge@ff1+1,c
  3329  001584  6A05               	clrf	___flge@ff1+2,c
  3330  001586  6A06               	clrf	___flge@ff1+3,c
  3331  001588  C08F  F007         	movff	pow@y,___flge@ff2
  3332  00158C  C090  F008         	movff	pow@y+1,___flge@ff2+1
  3333  001590  C091  F009         	movff	pow@y+2,___flge@ff2+2
  3334  001594  C092  F00A         	movff	pow@y+3,___flge@ff2+3
  3335  001598  EC76  F011         	call	___flge	;wreg free
  3336  00159C  0100               	movlb	0	; () banked
  3337  00159E  D037               	goto	l3025
  3338  0015A0                     l3015:
  3339                           
  3340                           ; BSR set to: 0
  3341  0015A0  518F               	movf	pow@y& (0+255),w,b
  3342  0015A2  1190               	iorwf	(pow@y+1)& (0+255),w,b
  3343  0015A4  1191               	iorwf	(pow@y+2)& (0+255),w,b
  3344  0015A6  1192               	iorwf	(pow@y+3)& (0+255),w,b
  3345  0015A8  E107               	bnz	l3021
  3346                           
  3347                           ; BSR set to: 0
  3348  0015AA  6B8B               	clrf	?_pow& (0+255),b
  3349  0015AC  6B8C               	clrf	(?_pow+1)& (0+255),b
  3350  0015AE  0E80               	movlw	128
  3351  0015B0  6F8D               	movwf	(?_pow+2)& (0+255),b
  3352  0015B2  0E3F               	movlw	63
  3353  0015B4  6F8E               	movwf	(?_pow+3)& (0+255),b
  3354  0015B6  D0A3               	goto	l954
  3355  0015B8                     l3021:
  3356                           
  3357                           ; BSR set to: 0
  3358  0015B8  AF8E               	btfss	(pow@x+3)& (0+255),7,b
  3359  0015BA  D044               	goto	l3031
  3360                           
  3361                           ; BSR set to: 0
  3362  0015BC  C08F  F05D         	movff	pow@y,___fltol@f1
  3363  0015C0  C090  F05E         	movff	pow@y+1,___fltol@f1+1
  3364  0015C4  C091  F05F         	movff	pow@y+2,___fltol@f1+2
  3365  0015C8  C092  F060         	movff	pow@y+3,___fltol@f1+3
  3366  0015CC  EC0B  F00F         	call	___fltol	;wreg free
  3367  0015D0  C05D  F09C         	movff	?___fltol,pow@yi
  3368  0015D4  C05E  F09D         	movff	?___fltol+1,pow@yi+1
  3369  0015D8  C05F  F09E         	movff	?___fltol+2,pow@yi+2
  3370  0015DC  C060  F09F         	movff	?___fltol+3,pow@yi+3
  3371  0015E0  C09C  F00D         	movff	pow@yi,___lltofl@c
  3372  0015E4  C09D  F00E         	movff	pow@yi+1,___lltofl@c+1
  3373  0015E8  C09E  F00F         	movff	pow@yi+2,___lltofl@c+2
  3374  0015EC  C09F  F010         	movff	pow@yi+3,___lltofl@c+3
  3375  0015F0  ECC0  F012         	call	___lltofl	;wreg free
  3376  0015F4  0100               	movlb	0	; () banked
  3377  0015F6  518F               	movf	pow@y& (0+255),w,b
  3378  0015F8  180D               	xorwf	?___lltofl,w,c
  3379  0015FA  E109               	bnz	u2600
  3380  0015FC  5190               	movf	(pow@y+1)& (0+255),w,b
  3381  0015FE  180E               	xorwf	?___lltofl+1,w,c
  3382  001600  E106               	bnz	u2600
  3383  001602  5191               	movf	(pow@y+2)& (0+255),w,b
  3384  001604  180F               	xorwf	?___lltofl+2,w,c
  3385  001606  E103               	bnz	u2600
  3386  001608  5192               	movf	(pow@y+3)& (0+255),w,b
  3387  00160A  1810               	xorwf	?___lltofl+3,w,c
  3388  00160C  E006               	bz	l3027
  3389  00160E                     u2600:
  3390  00160E                     l3025:
  3391  00160E  FFFF               	dw	65535	; assembler added errata NOP
  3392                           
  3393                           ; BSR set to: 0
  3394  001610  6B8B               	clrf	?_pow& (0+255),b
  3395  001612  6B8C               	clrf	(?_pow+1)& (0+255),b
  3396  001614  6B8D               	clrf	(?_pow+2)& (0+255),b
  3397  001616  6B8E               	clrf	(?_pow+3)& (0+255),b
  3398  001618  D072               	goto	l954
  3399  00161A                     l3027:
  3400                           
  3401                           ; BSR set to: 0
  3402  00161A  519C               	movf	pow@yi& (0+255),w,b
  3403  00161C  0B01               	andlw	1
  3404  00161E  6F9B               	movwf	pow@sign& (0+255),b
  3405                           
  3406                           ; BSR set to: 0
  3407  001620  C08B  F003         	movff	pow@x,___flneg@f1
  3408  001624  C08C  F004         	movff	pow@x+1,___flneg@f1+1
  3409  001628  C08D  F005         	movff	pow@x+2,___flneg@f1+2
  3410  00162C  C08E  F006         	movff	pow@x+3,___flneg@f1+3
  3411  001630  EC18  F013         	call	___flneg	;wreg free
  3412  001634  C003  F08B         	movff	?___flneg,pow@x
  3413  001638  C004  F08C         	movff	?___flneg+1,pow@x+1
  3414  00163C  C005  F08D         	movff	?___flneg+2,pow@x+2
  3415  001640  C006  F08E         	movff	?___flneg+3,pow@x+3
  3416  001644                     l3031:
  3417  001644  FFFF               	dw	65535	; assembler added errata NOP
  3418                           
  3419                           ; BSR set to: 0
  3420  001646  C08B  F04F         	movff	pow@x,log@x
  3421  00164A  C08C  F050         	movff	pow@x+1,log@x+1
  3422  00164E  C08D  F051         	movff	pow@x+2,log@x+2
  3423  001652  C08E  F052         	movff	pow@x+3,log@x+3
  3424  001656  EC41  F00C         	call	_log	;wreg free
  3425  00165A  C04F  F093         	movff	?_log,_pow$932
  3426  00165E  C050  F094         	movff	?_log+1,_pow$932+1
  3427  001662  C051  F095         	movff	?_log+2,_pow$932+2
  3428  001666  C052  F096         	movff	?_log+3,_pow$932+3
  3429  00166A  C093  F01C         	movff	_pow$932,___flmul@f1
  3430  00166E  C094  F01D         	movff	_pow$932+1,___flmul@f1+1
  3431  001672  C095  F01E         	movff	_pow$932+2,___flmul@f1+2
  3432  001676  C096  F01F         	movff	_pow$932+3,___flmul@f1+3
  3433  00167A  C08F  F020         	movff	pow@y,___flmul@f2
  3434  00167E  C090  F021         	movff	pow@y+1,___flmul@f2+1
  3435  001682  C091  F022         	movff	pow@y+2,___flmul@f2+2
  3436  001686  C092  F023         	movff	pow@y+3,___flmul@f2+3
  3437  00168A  ECD6  F009         	call	___flmul	;wreg free
  3438  00168E  C01C  F097         	movff	?___flmul,_pow$933
  3439  001692  C01D  F098         	movff	?___flmul+1,_pow$933+1
  3440  001696  C01E  F099         	movff	?___flmul+2,_pow$933+2
  3441  00169A  C01F  F09A         	movff	?___flmul+3,_pow$933+3
  3442  00169E  C097  F080         	movff	_pow$933,exp@x
  3443  0016A2  C098  F081         	movff	_pow$933+1,exp@x+1
  3444  0016A6  C099  F082         	movff	_pow$933+2,exp@x+2
  3445  0016AA  C09A  F083         	movff	_pow$933+3,exp@x+3
  3446  0016AE  ECE3  F007         	call	_exp	;wreg free
  3447  0016B2  C080  F08B         	movff	?_exp,pow@x
  3448  0016B6  C081  F08C         	movff	?_exp+1,pow@x+1
  3449  0016BA  C082  F08D         	movff	?_exp+2,pow@x+2
  3450  0016BE  C083  F08E         	movff	?_exp+3,pow@x+3
  3451  0016C2  0100               	movlb	0	; () banked
  3452  0016C4  519B               	movf	pow@sign& (0+255),w,b
  3453  0016C6  E013               	bz	l958
  3454                           
  3455                           ; BSR set to: 0
  3456  0016C8  C08B  F003         	movff	pow@x,___flneg@f1
  3457  0016CC  C08C  F004         	movff	pow@x+1,___flneg@f1+1
  3458  0016D0  C08D  F005         	movff	pow@x+2,___flneg@f1+2
  3459  0016D4  C08E  F006         	movff	pow@x+3,___flneg@f1+3
  3460  0016D8  EC18  F013         	call	___flneg	;wreg free
  3461  0016DC  C003  F08B         	movff	?___flneg,?_pow
  3462  0016E0  C004  F08C         	movff	?___flneg+1,?_pow+1
  3463  0016E4  C005  F08D         	movff	?___flneg+2,?_pow+2
  3464  0016E8  C006  F08E         	movff	?___flneg+3,?_pow+3
  3465  0016EC  D008               	goto	l954
  3466  0016EE                     l958:
  3467                           
  3468                           ; BSR set to: 0
  3469  0016EE  C08B  F08B         	movff	pow@x,?_pow
  3470  0016F2  C08C  F08C         	movff	pow@x+1,?_pow+1
  3471  0016F6  C08D  F08D         	movff	pow@x+2,?_pow+2
  3472  0016FA  C08E  F08E         	movff	pow@x+3,?_pow+3
  3473  0016FE                     l954:
  3474  0016FE  FFFF               	dw	65535	; assembler added errata NOP
  3475                           
  3476                           ; BSR set to: 0
  3477  001700  0012               	return		;funcret
  3478  001702  FFFF               	dw	65535	; errata NOP
  3479  001704                     __end_of_pow:
  3480                           	opt stack 0
  3481                           tosu	equ	0xFFF
  3482                           tosh	equ	0xFFE
  3483                           tosl	equ	0xFFD
  3484                           pclath	equ	0xFFA
  3485                           tblptru	equ	0xFF8
  3486                           tblptrh	equ	0xFF7
  3487                           tblptrl	equ	0xFF6
  3488                           tablat	equ	0xFF5
  3489                           intcon	equ	0xFF2
  3490                           intcon2	equ	0xFF1
  3491                           postinc0	equ	0xFEE
  3492                           wreg	equ	0xFE8
  3493                           indf2	equ	0xFDF
  3494                           fsr2h	equ	0xFDA
  3495                           fsr2l	equ	0xFD9
  3496                           status	equ	0xFD8
  3497                           
  3498 ;; *************** function _exp *****************
  3499 ;; Defined at:
  3500 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\exp.c"
  3501 ;; Parameters:    Size  Location     Type
  3502 ;;  x               4    0[BANK0 ] unsigned char 
  3503 ;; Auto vars:     Size  Location     Type
  3504 ;;  exponent        2    8[BANK0 ] int 
  3505 ;;  sign            1   10[BANK0 ] unsigned char 
  3506 ;; Return value:  Size  Location     Type
  3507 ;;                  4    0[BANK0 ] unsigned char 
  3508 ;; Registers used:
  3509 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3510 ;; Tracked objects:
  3511 ;;		On entry : 0/0
  3512 ;;		On exit  : 0/0
  3513 ;;		Unchanged: 0/0
  3514 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3515 ;;      Params:         0       4       0       0       0       0       0
  3516 ;;      Locals:         0       7       0       0       0       0       0
  3517 ;;      Temps:          0       0       0       0       0       0       0
  3518 ;;      Totals:         0      11       0       0       0       0       0
  3519 ;;Total ram usage:       11 bytes
  3520 ;; Hardware stack levels used:    1
  3521 ;; Hardware stack levels required when called:    4
  3522 ;; This function calls:
  3523 ;;		___awtofl
  3524 ;;		___fldiv
  3525 ;;		___flge
  3526 ;;		___flmul
  3527 ;;		___flneg
  3528 ;;		___flsub
  3529 ;;		___fltol
  3530 ;;		_eval_poly
  3531 ;;		_floor
  3532 ;;		_ldexp
  3533 ;; This function is called by:
  3534 ;;		_pow
  3535 ;; This function uses a non-reentrant model
  3536 ;;
  3537                           
  3538                           	psect	text13
  3539  000FC6                     __ptext13:
  3540                           	opt stack 0
  3541  000FC6                     _exp:
  3542                           	opt stack 23
  3543                           
  3544                           ; BSR set to: 0
  3545                           ;incstack = 0
  3546  000FC6  FFFF               	dw	65535
  3547  000FC8  0100               	movlb	0	; () banked
  3548  000FCA  5180               	movf	exp@x& (0+255),w,b
  3549  000FCC  1181               	iorwf	(exp@x+1)& (0+255),w,b
  3550  000FCE  1182               	iorwf	(exp@x+2)& (0+255),w,b
  3551  000FD0  1183               	iorwf	(exp@x+3)& (0+255),w,b
  3552  000FD2  E106               	bnz	l2973
  3553                           
  3554                           ; BSR set to: 0
  3555  000FD4  6B80               	clrf	?_exp& (0+255),b
  3556  000FD6  6B81               	clrf	(?_exp+1)& (0+255),b
  3557  000FD8  0E80               	movlw	128
  3558  000FDA  6F82               	movwf	(?_exp+2)& (0+255),b
  3559  000FDC  0E3F               	movlw	63
  3560  000FDE  D018               	goto	L4
  3561  000FE0                     l2973:
  3562                           
  3563                           ; BSR set to: 0
  3564  000FE0  0E18               	movlw	24
  3565  000FE2  6E03               	movwf	___flge@ff1,c
  3566  000FE4  0E72               	movlw	114
  3567  000FE6  6E04               	movwf	___flge@ff1+1,c
  3568  000FE8  0E31               	movlw	49
  3569  000FEA  6E05               	movwf	___flge@ff1+2,c
  3570  000FEC  0E44               	movlw	68
  3571  000FEE  6E06               	movwf	___flge@ff1+3,c
  3572  000FF0  C080  F007         	movff	exp@x,___flge@ff2
  3573  000FF4  C081  F008         	movff	exp@x+1,___flge@ff2+1
  3574  000FF8  C082  F009         	movff	exp@x+2,___flge@ff2+2
  3575  000FFC  C083  F00A         	movff	exp@x+3,___flge@ff2+3
  3576  001000  EC76  F011         	call	___flge	;wreg free
  3577  001004  E208               	bc	l2979
  3578  001006  0100               	movlb	0	; () banked
  3579  001008  6980               	setf	?_exp& (0+255),b
  3580  00100A  6981               	setf	(?_exp+1)& (0+255),b
  3581  00100C  0E7F               	movlw	127
  3582  00100E  6F82               	movwf	(?_exp+2)& (0+255),b
  3583  001010                     L4:
  3584  001010  FFFF               	dw	65535	; assembler added errata NOP
  3585  001012  6F83               	movwf	(?_exp+3)& (0+255),b
  3586  001014  D0E4               	goto	l980
  3587  001016                     l2979:
  3588  001016  C080  F003         	movff	exp@x,___flge@ff1
  3589  00101A  C081  F004         	movff	exp@x+1,___flge@ff1+1
  3590  00101E  C082  F005         	movff	exp@x+2,___flge@ff1+2
  3591  001022  C083  F006         	movff	exp@x+3,___flge@ff1+3
  3592  001026  0E87               	movlw	135
  3593  001028  6E07               	movwf	___flge@ff2,c
  3594  00102A  0E48               	movlw	72
  3595  00102C  6E08               	movwf	___flge@ff2+1,c
  3596  00102E  0E3A               	movlw	58
  3597  001030  6E09               	movwf	___flge@ff2+2,c
  3598  001032  0EC4               	movlw	196
  3599  001034  6E0A               	movwf	___flge@ff2+3,c
  3600  001036  EC76  F011         	call	___flge	;wreg free
  3601  00103A  E202               	bc	l2983
  3602  00103C  0100               	movlb	0	; () banked
  3603  00103E  D0A6               	goto	l3003
  3604  001040                     l2983:
  3605  001040  0100               	movlb	0	; () banked
  3606  001042  0E01               	movlw	1
  3607  001044  AF83               	btfss	(exp@x+3)& (0+255),7,b
  3608  001046  0E00               	movlw	0
  3609  001048  6F8A               	movwf	exp@sign& (0+255),b
  3610                           
  3611                           ; BSR set to: 0
  3612  00104A  518A               	movf	exp@sign& (0+255),w,b
  3613  00104C  E012               	bz	l2989
  3614                           
  3615                           ; BSR set to: 0
  3616  00104E  C080  F003         	movff	exp@x,___flneg@f1
  3617  001052  C081  F004         	movff	exp@x+1,___flneg@f1+1
  3618  001056  C082  F005         	movff	exp@x+2,___flneg@f1+2
  3619  00105A  C083  F006         	movff	exp@x+3,___flneg@f1+3
  3620  00105E  EC18  F013         	call	___flneg	;wreg free
  3621  001062  C003  F080         	movff	?___flneg,exp@x
  3622  001066  C004  F081         	movff	?___flneg+1,exp@x+1
  3623  00106A  C005  F082         	movff	?___flneg+2,exp@x+2
  3624  00106E  C006  F083         	movff	?___flneg+3,exp@x+3
  3625  001072                     l2989:
  3626                           
  3627                           ; BSR set to: 0
  3628  001072  C080  F01C         	movff	exp@x,___flmul@f1
  3629  001076  C081  F01D         	movff	exp@x+1,___flmul@f1+1
  3630  00107A  C082  F01E         	movff	exp@x+2,___flmul@f1+2
  3631  00107E  C083  F01F         	movff	exp@x+3,___flmul@f1+3
  3632  001082  0E3B               	movlw	59
  3633  001084  6E20               	movwf	___flmul@f2,c
  3634  001086  0EAA               	movlw	170
  3635  001088  6E21               	movwf	___flmul@f2+1,c
  3636  00108A  0EB8               	movlw	184
  3637  00108C  6E22               	movwf	___flmul@f2+2,c
  3638  00108E  0E3F               	movlw	63
  3639  001090  6E23               	movwf	___flmul@f2+3,c
  3640  001092  ECD6  F009         	call	___flmul	;wreg free
  3641  001096  C01C  F080         	movff	?___flmul,exp@x
  3642  00109A  C01D  F081         	movff	?___flmul+1,exp@x+1
  3643  00109E  C01E  F082         	movff	?___flmul+2,exp@x+2
  3644  0010A2  C01F  F083         	movff	?___flmul+3,exp@x+3
  3645  0010A6  C080  F06C         	movff	exp@x,floor@x
  3646  0010AA  C081  F06D         	movff	exp@x+1,floor@x+1
  3647  0010AE  C082  F06E         	movff	exp@x+2,floor@x+2
  3648  0010B2  C083  F06F         	movff	exp@x+3,floor@x+3
  3649  0010B6  ECD2  F00C         	call	_floor	;wreg free
  3650  0010BA  C06C  F084         	movff	?_floor,_exp$934
  3651  0010BE  C06D  F085         	movff	?_floor+1,_exp$934+1
  3652  0010C2  C06E  F086         	movff	?_floor+2,_exp$934+2
  3653  0010C6  C06F  F087         	movff	?_floor+3,_exp$934+3
  3654  0010CA  C084  F05D         	movff	_exp$934,___fltol@f1
  3655  0010CE  C085  F05E         	movff	_exp$934+1,___fltol@f1+1
  3656  0010D2  C086  F05F         	movff	_exp$934+2,___fltol@f1+2
  3657  0010D6  C087  F060         	movff	_exp$934+3,___fltol@f1+3
  3658  0010DA  EC0B  F00F         	call	___fltol	;wreg free
  3659  0010DE  C05D  F088         	movff	?___fltol,exp@exponent
  3660  0010E2  C05E  F089         	movff	?___fltol+1,exp@exponent+1
  3661  0010E6  C080  F043         	movff	exp@x,___flsub@f1
  3662  0010EA  C081  F044         	movff	exp@x+1,___flsub@f1+1
  3663  0010EE  C082  F045         	movff	exp@x+2,___flsub@f1+2
  3664  0010F2  C083  F046         	movff	exp@x+3,___flsub@f1+3
  3665  0010F6  C088  F00D         	movff	exp@exponent,___awtofl@c
  3666  0010FA  C089  F00E         	movff	exp@exponent+1,___awtofl@c+1
  3667  0010FE  EC85  F012         	call	___awtofl	;wreg free
  3668  001102  C00D  F047         	movff	?___awtofl,___flsub@f2
  3669  001106  C00E  F048         	movff	?___awtofl+1,___flsub@f2+1
  3670  00110A  C00F  F049         	movff	?___awtofl+2,___flsub@f2+2
  3671  00110E  C010  F04A         	movff	?___awtofl+3,___flsub@f2+3
  3672  001112  EC40  F012         	call	___flsub	;wreg free
  3673  001116  C043  F080         	movff	?___flsub,exp@x
  3674  00111A  C044  F081         	movff	?___flsub+1,exp@x+1
  3675  00111E  C045  F082         	movff	?___flsub+2,exp@x+2
  3676  001122  C046  F083         	movff	?___flsub+3,exp@x+3
  3677  001126  C080  F043         	movff	exp@x,eval_poly@x
  3678  00112A  C081  F044         	movff	exp@x+1,eval_poly@x+1
  3679  00112E  C082  F045         	movff	exp@x+2,eval_poly@x+2
  3680  001132  C083  F046         	movff	exp@x+3,eval_poly@x+3
  3681  001136  0E01               	movlw	low exp@coeff
  3682  001138  6E47               	movwf	eval_poly@d,c
  3683  00113A  6A49               	clrf	eval_poly@n+1,c
  3684  00113C  0E09               	movlw	9
  3685  00113E  6E48               	movwf	eval_poly@n,c
  3686  001140  ECA2  F00E         	call	_eval_poly	;wreg free
  3687  001144  C043  F04F         	movff	?_eval_poly,ldexp@value
  3688  001148  C044  F050         	movff	?_eval_poly+1,ldexp@value+1
  3689  00114C  C045  F051         	movff	?_eval_poly+2,ldexp@value+2
  3690  001150  C046  F052         	movff	?_eval_poly+3,ldexp@value+3
  3691  001154  C088  F053         	movff	exp@exponent,ldexp@newexp
  3692  001158  C089  F054         	movff	exp@exponent+1,ldexp@newexp+1
  3693  00115C  ECBA  F00F         	call	_ldexp	;wreg free
  3694  001160  C04F  F080         	movff	?_ldexp,exp@x
  3695  001164  C050  F081         	movff	?_ldexp+1,exp@x+1
  3696  001168  C051  F082         	movff	?_ldexp+2,exp@x+2
  3697  00116C  C052  F083         	movff	?_ldexp+3,exp@x+3
  3698  001170  0100               	movlb	0	; () banked
  3699  001172  518A               	movf	exp@sign& (0+255),w,b
  3700  001174  E02C               	bz	l984
  3701                           
  3702                           ; BSR set to: 0
  3703  001176  2980               	incf	exp@x& (0+255),w,b
  3704  001178  E10F               	bnz	l3005
  3705  00117A  2981               	incf	(exp@x+1)& (0+255),w,b
  3706  00117C  E10D               	bnz	l3005
  3707  00117E  0E7F               	movlw	127
  3708  001180  1982               	xorwf	(exp@x+2)& (0+255),w,b
  3709  001182  E10A               	bnz	l3005
  3710  001184  0E7F               	movlw	127
  3711  001186  1983               	xorwf	(exp@x+3)& (0+255),w,b
  3712  001188  A4D8               	btfss	status,2,c
  3713  00118A  D006               	goto	l3005
  3714  00118C                     l3003:
  3715  00118C  FFFF               	dw	65535	; assembler added errata NOP
  3716                           
  3717                           ; BSR set to: 0
  3718  00118E  6B80               	clrf	?_exp& (0+255),b
  3719  001190  6B81               	clrf	(?_exp+1)& (0+255),b
  3720  001192  6B82               	clrf	(?_exp+2)& (0+255),b
  3721  001194  6B83               	clrf	(?_exp+3)& (0+255),b
  3722  001196  D023               	goto	l980
  3723  001198                     l3005:
  3724  001198  FFFF               	dw	65535	; assembler added errata NOP
  3725                           
  3726                           ; BSR set to: 0
  3727  00119A  0E00               	movlw	0
  3728  00119C  6E0D               	movwf	___fldiv@f1,c
  3729  00119E  6E0E               	movwf	___fldiv@f1+1,c
  3730  0011A0  0E80               	movlw	128
  3731  0011A2  6E0F               	movwf	___fldiv@f1+2,c
  3732  0011A4  0E3F               	movlw	63
  3733  0011A6  6E10               	movwf	___fldiv@f1+3,c
  3734  0011A8  C080  F011         	movff	exp@x,___fldiv@f2
  3735  0011AC  C081  F012         	movff	exp@x+1,___fldiv@f2+1
  3736  0011B0  C082  F013         	movff	exp@x+2,___fldiv@f2+2
  3737  0011B4  C083  F014         	movff	exp@x+3,___fldiv@f2+3
  3738  0011B8  EC63  F00F         	call	___fldiv	;wreg free
  3739  0011BC  C00D  F080         	movff	?___fldiv,?_exp
  3740  0011C0  C00E  F081         	movff	?___fldiv+1,?_exp+1
  3741  0011C4  C00F  F082         	movff	?___fldiv+2,?_exp+2
  3742  0011C8  C010  F083         	movff	?___fldiv+3,?_exp+3
  3743  0011CC  D008               	goto	l980
  3744  0011CE                     l984:
  3745                           
  3746                           ; BSR set to: 0
  3747  0011CE  C080  F080         	movff	exp@x,?_exp
  3748  0011D2  C081  F081         	movff	exp@x+1,?_exp+1
  3749  0011D6  C082  F082         	movff	exp@x+2,?_exp+2
  3750  0011DA  C083  F083         	movff	exp@x+3,?_exp+3
  3751  0011DE                     l980:
  3752  0011DE  FFFF               	dw	65535	; assembler added errata NOP
  3753  0011E0  0012               	return		;funcret
  3754  0011E2  FFFF               	dw	65535	; errata NOP
  3755  0011E4                     __end_of_exp:
  3756                           	opt stack 0
  3757                           tosu	equ	0xFFF
  3758                           tosh	equ	0xFFE
  3759                           tosl	equ	0xFFD
  3760                           pclath	equ	0xFFA
  3761                           tblptru	equ	0xFF8
  3762                           tblptrh	equ	0xFF7
  3763                           tblptrl	equ	0xFF6
  3764                           tablat	equ	0xFF5
  3765                           intcon	equ	0xFF2
  3766                           intcon2	equ	0xFF1
  3767                           postinc0	equ	0xFEE
  3768                           wreg	equ	0xFE8
  3769                           indf2	equ	0xFDF
  3770                           fsr2h	equ	0xFDA
  3771                           fsr2l	equ	0xFD9
  3772                           status	equ	0xFD8
  3773                           
  3774 ;; *************** function _ldexp *****************
  3775 ;; Defined at:
  3776 ;;		line 277 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\frexp.c"
  3777 ;; Parameters:    Size  Location     Type
  3778 ;;  value           4   78[COMRAM] unsigned char 
  3779 ;;  newexp          2   82[COMRAM] int 
  3780 ;; Auto vars:     Size  Location     Type
  3781 ;;		None
  3782 ;; Return value:  Size  Location     Type
  3783 ;;                  4   78[COMRAM] int 
  3784 ;; Registers used:
  3785 ;;		wreg, status,2, status,0
  3786 ;; Tracked objects:
  3787 ;;		On entry : 0/0
  3788 ;;		On exit  : 0/0
  3789 ;;		Unchanged: 0/0
  3790 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3791 ;;      Params:         6       0       0       0       0       0       0
  3792 ;;      Locals:         0       0       0       0       0       0       0
  3793 ;;      Temps:          2       0       0       0       0       0       0
  3794 ;;      Totals:         8       0       0       0       0       0       0
  3795 ;;Total ram usage:        8 bytes
  3796 ;; Hardware stack levels used:    1
  3797 ;; Hardware stack levels required when called:    1
  3798 ;; This function calls:
  3799 ;;		Nothing
  3800 ;; This function is called by:
  3801 ;;		_exp
  3802 ;; This function uses a non-reentrant model
  3803 ;;
  3804                           
  3805                           	psect	text14
  3806  001F74                     __ptext14:
  3807                           	opt stack 0
  3808  001F74                     _ldexp:
  3809                           	opt stack 25
  3810                           
  3811                           ;incstack = 0
  3812  001F74  FFFF               	dw	65535
  3813  001F76  504F               	movf	ldexp@value,w,c
  3814  001F78  1050               	iorwf	ldexp@value+1,w,c
  3815  001F7A  1051               	iorwf	ldexp@value+2,w,c
  3816  001F7C  1052               	iorwf	ldexp@value+3,w,c
  3817  001F7E  E013               	bz	l2335
  3818  001F80  5052               	movf	ldexp@value+3,w,c
  3819  001F82  0B7F               	andlw	127
  3820  001F84  6E55               	movwf	??_ldexp& (0+255),c
  3821  001F86  6A56               	clrf	(??_ldexp+1)& (0+255),c
  3822  001F88  90D8               	bcf	status,0,c
  3823  001F8A  3655               	rlcf	??_ldexp,f,c
  3824  001F8C  3656               	rlcf	??_ldexp+1,f,c
  3825  001F8E  5055               	movf	??_ldexp,w,c
  3826  001F90  2653               	addwf	ldexp@newexp,f,c
  3827  001F92  5056               	movf	??_ldexp+1,w,c
  3828  001F94  2254               	addwfc	ldexp@newexp+1,f,c
  3829  001F96  0E01               	movlw	1
  3830  001F98  AE51               	btfss	ldexp@value+2,7,c
  3831  001F9A  0E00               	movlw	0
  3832  001F9C  2653               	addwf	ldexp@newexp,f,c
  3833  001F9E  0E00               	movlw	0
  3834  001FA0  2254               	addwfc	ldexp@newexp+1,f,c
  3835  001FA2  AE54               	btfss	ldexp@newexp+1,7,c
  3836  001FA4  D005               	goto	l2339
  3837  001FA6                     l2335:
  3838  001FA6  6A4F               	clrf	?_ldexp,c
  3839  001FA8  6A50               	clrf	?_ldexp+1,c
  3840  001FAA  6A51               	clrf	?_ldexp+2,c
  3841  001FAC  6A52               	clrf	?_ldexp+3,c
  3842  001FAE  D032               	goto	l722
  3843  001FB0                     l2339:
  3844  001FB0  FFFF               	dw	65535	; assembler added errata NOP
  3845  001FB2  BE54               	btfsc	ldexp@newexp+1,7,c
  3846  001FB4  D012               	goto	l2353
  3847  001FB6  0454               	decf	ldexp@newexp+1,w,c
  3848  001FB8  E310               	bnc	l2353
  3849  001FBA  AE52               	btfss	ldexp@value+3,7,c
  3850  001FBC  D006               	goto	l2349
  3851  001FBE  684F               	setf	?_ldexp,c
  3852  001FC0  6850               	setf	?_ldexp+1,c
  3853  001FC2  0E7F               	movlw	127
  3854  001FC4  6E51               	movwf	?_ldexp+2,c
  3855  001FC6  0EFF               	movlw	255
  3856  001FC8  D005               	goto	L5
  3857  001FCA                     l2349:
  3858  001FCA  FFFF               	dw	65535	; assembler added errata NOP
  3859  001FCC  684F               	setf	?_ldexp,c
  3860  001FCE  6850               	setf	?_ldexp+1,c
  3861  001FD0  0E7F               	movlw	127
  3862  001FD2  6E51               	movwf	?_ldexp+2,c
  3863  001FD4                     L5:
  3864  001FD4  FFFF               	dw	65535	; assembler added errata NOP
  3865  001FD6  6E52               	movwf	?_ldexp+3,c
  3866  001FD8  D01D               	goto	l722
  3867  001FDA                     l2353:
  3868  001FDA  FFFF               	dw	65535	; assembler added errata NOP
  3869  001FDC  3454               	rlcf	ldexp@newexp+1,w,c
  3870  001FDE  3054               	rrcf	ldexp@newexp+1,w,c
  3871  001FE0  6E56               	movwf	(??_ldexp+1)& (0+255),c
  3872  001FE2  3053               	rrcf	ldexp@newexp,w,c
  3873  001FE4  6E55               	movwf	??_ldexp& (0+255),c
  3874  001FE6  1852               	xorwf	ldexp@value+3,w,c
  3875  001FE8  0B80               	andlw	-128
  3876  001FEA  1855               	xorwf	??_ldexp,w,c
  3877  001FEC  6E52               	movwf	ldexp@value+3,c
  3878  001FEE  C053  F055         	movff	ldexp@newexp,??_ldexp
  3879  001FF2  0E01               	movlw	1
  3880  001FF4  1655               	andwf	??_ldexp,f,c
  3881  001FF6  3255               	rrcf	??_ldexp,f,c
  3882  001FF8  3255               	rrcf	??_ldexp,f,c
  3883  001FFA  5051               	movf	ldexp@value+2,w,c
  3884  001FFC  1855               	xorwf	??_ldexp,w,c
  3885  001FFE  0B7F               	andlw	-129
  3886  002000  1855               	xorwf	??_ldexp,w,c
  3887  002002  6E51               	movwf	ldexp@value+2,c
  3888  002004  C04F  F04F         	movff	ldexp@value,?_ldexp
  3889  002008  C050  F050         	movff	ldexp@value+1,?_ldexp+1
  3890  00200C  C051  F051         	movff	ldexp@value+2,?_ldexp+2
  3891  002010  C052  F052         	movff	ldexp@value+3,?_ldexp+3
  3892  002014                     l722:
  3893  002014  FFFF               	dw	65535	; assembler added errata NOP
  3894  002016  0012               	return		;funcret
  3895  002018  FFFF               	dw	65535	; errata NOP
  3896  00201A                     __end_of_ldexp:
  3897                           	opt stack 0
  3898                           tosu	equ	0xFFF
  3899                           tosh	equ	0xFFE
  3900                           tosl	equ	0xFFD
  3901                           pclath	equ	0xFFA
  3902                           tblptru	equ	0xFF8
  3903                           tblptrh	equ	0xFF7
  3904                           tblptrl	equ	0xFF6
  3905                           tablat	equ	0xFF5
  3906                           intcon	equ	0xFF2
  3907                           intcon2	equ	0xFF1
  3908                           postinc0	equ	0xFEE
  3909                           wreg	equ	0xFE8
  3910                           indf2	equ	0xFDF
  3911                           fsr2h	equ	0xFDA
  3912                           fsr2l	equ	0xFD9
  3913                           status	equ	0xFD8
  3914                           
  3915 ;; *************** function _floor *****************
  3916 ;; Defined at:
  3917 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\floor.c"
  3918 ;; Parameters:    Size  Location     Type
  3919 ;;  x               4  107[COMRAM] int 
  3920 ;; Auto vars:     Size  Location     Type
  3921 ;;  i               4  111[COMRAM] int 
  3922 ;;  expon           2  115[COMRAM] int 
  3923 ;; Return value:  Size  Location     Type
  3924 ;;                  4  107[COMRAM] int 
  3925 ;; Registers used:
  3926 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3927 ;; Tracked objects:
  3928 ;;		On entry : 0/0
  3929 ;;		On exit  : 0/0
  3930 ;;		Unchanged: 0/0
  3931 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3932 ;;      Params:         4       0       0       0       0       0       0
  3933 ;;      Locals:         6       0       0       0       0       0       0
  3934 ;;      Temps:          0       0       0       0       0       0       0
  3935 ;;      Totals:        10       0       0       0       0       0       0
  3936 ;;Total ram usage:       10 bytes
  3937 ;; Hardware stack levels used:    1
  3938 ;; Hardware stack levels required when called:    3
  3939 ;; This function calls:
  3940 ;;		___altofl
  3941 ;;		___fladd
  3942 ;;		___flge
  3943 ;;		___fltol
  3944 ;;		_frexp
  3945 ;; This function is called by:
  3946 ;;		_format_double
  3947 ;;		_exp
  3948 ;; This function uses a non-reentrant model
  3949 ;;
  3950                           
  3951                           	psect	text15
  3952  0019A4                     __ptext15:
  3953                           	opt stack 0
  3954  0019A4                     _floor:
  3955                           	opt stack 23
  3956                           
  3957                           ;incstack = 0
  3958  0019A4  FFFF               	dw	65535
  3959  0019A6  C06C  F003         	movff	floor@x,frexp@value
  3960  0019AA  C06D  F004         	movff	floor@x+1,frexp@value+1
  3961  0019AE  C06E  F005         	movff	floor@x+2,frexp@value+2
  3962  0019B2  C06F  F006         	movff	floor@x+3,frexp@value+3
  3963  0019B6  0E74               	movlw	low floor@expon
  3964  0019B8  6E07               	movwf	frexp@eptr,c
  3965  0019BA  ECA2  F010         	call	_frexp	;wreg free
  3966  0019BE  AE75               	btfss	floor@expon+1,7,c
  3967  0019C0  D00F               	goto	l2257
  3968  0019C2  AE6F               	btfss	floor@x+3,7,c
  3969  0019C4  D007               	goto	l689
  3970  0019C6  6A6C               	clrf	?_floor,c
  3971  0019C8  6A6D               	clrf	?_floor+1,c
  3972  0019CA  0E80               	movlw	128
  3973  0019CC  6E6E               	movwf	?_floor+2,c
  3974  0019CE  0EBF               	movlw	191
  3975  0019D0  6E6F               	movwf	?_floor+3,c
  3976  0019D2  D066               	goto	l690
  3977  0019D4                     l689:
  3978  0019D4  FFFF               	dw	65535	; assembler added errata NOP
  3979  0019D6  6A6C               	clrf	?_floor,c
  3980  0019D8  6A6D               	clrf	?_floor+1,c
  3981  0019DA  6A6E               	clrf	?_floor+2,c
  3982  0019DC  6A6F               	clrf	?_floor+3,c
  3983  0019DE  D060               	goto	l690
  3984  0019E0                     l2257:
  3985  0019E0  FFFF               	dw	65535	; assembler added errata NOP
  3986  0019E2  5075               	movf	floor@expon+1,w,c
  3987  0019E4  E103               	bnz	u1710
  3988  0019E6  0E1D               	movlw	29
  3989  0019E8  5C74               	subwf	floor@expon,w,c
  3990  0019EA  E309               	bnc	l2261
  3991  0019EC                     u1710:
  3992  0019EC  C06C  F06C         	movff	floor@x,?_floor
  3993  0019F0  C06D  F06D         	movff	floor@x+1,?_floor+1
  3994  0019F4  C06E  F06E         	movff	floor@x+2,?_floor+2
  3995  0019F8  C06F  F06F         	movff	floor@x+3,?_floor+3
  3996  0019FC  D051               	goto	l690
  3997  0019FE                     l2261:
  3998  0019FE  C06C  F05D         	movff	floor@x,___fltol@f1
  3999  001A02  C06D  F05E         	movff	floor@x+1,___fltol@f1+1
  4000  001A06  C06E  F05F         	movff	floor@x+2,___fltol@f1+2
  4001  001A0A  C06F  F060         	movff	floor@x+3,___fltol@f1+3
  4002  001A0E  EC0B  F00F         	call	___fltol	;wreg free
  4003  001A12  C05D  F067         	movff	?___fltol,___altofl@c
  4004  001A16  C05E  F068         	movff	?___fltol+1,___altofl@c+1
  4005  001A1A  C05F  F069         	movff	?___fltol+2,___altofl@c+2
  4006  001A1E  C060  F06A         	movff	?___fltol+3,___altofl@c+3
  4007  001A22  ECF5  F011         	call	___altofl	;wreg free
  4008  001A26  C067  F070         	movff	?___altofl,floor@i
  4009  001A2A  C068  F071         	movff	?___altofl+1,floor@i+1
  4010  001A2E  C069  F072         	movff	?___altofl+2,floor@i+2
  4011  001A32  C06A  F073         	movff	?___altofl+3,floor@i+3
  4012  001A36  C06C  F003         	movff	floor@x,___flge@ff1
  4013  001A3A  C06D  F004         	movff	floor@x+1,___flge@ff1+1
  4014  001A3E  C06E  F005         	movff	floor@x+2,___flge@ff1+2
  4015  001A42  C06F  F006         	movff	floor@x+3,___flge@ff1+3
  4016  001A46  C070  F007         	movff	floor@i,___flge@ff2
  4017  001A4A  C071  F008         	movff	floor@i+1,___flge@ff2+1
  4018  001A4E  C072  F009         	movff	floor@i+2,___flge@ff2+2
  4019  001A52  C073  F00A         	movff	floor@i+3,___flge@ff2+3
  4020  001A56  EC76  F011         	call	___flge	;wreg free
  4021  001A5A  E21A               	bc	l692
  4022  001A5C  C070  F037         	movff	floor@i,___fladd@f1
  4023  001A60  C071  F038         	movff	floor@i+1,___fladd@f1+1
  4024  001A64  C072  F039         	movff	floor@i+2,___fladd@f1+2
  4025  001A68  C073  F03A         	movff	floor@i+3,___fladd@f1+3
  4026  001A6C  0E00               	movlw	0
  4027  001A6E  6E3B               	movwf	___fladd@f2,c
  4028  001A70  6E3C               	movwf	___fladd@f2+1,c
  4029  001A72  0E80               	movlw	128
  4030  001A74  6E3D               	movwf	___fladd@f2+2,c
  4031  001A76  0EBF               	movlw	191
  4032  001A78  6E3E               	movwf	___fladd@f2+3,c
  4033  001A7A  EC82  F00B         	call	___fladd	;wreg free
  4034  001A7E  C037  F06C         	movff	?___fladd,?_floor
  4035  001A82  C038  F06D         	movff	?___fladd+1,?_floor+1
  4036  001A86  C039  F06E         	movff	?___fladd+2,?_floor+2
  4037  001A8A  C03A  F06F         	movff	?___fladd+3,?_floor+3
  4038  001A8E  D008               	goto	l690
  4039  001A90                     l692:
  4040  001A90  C070  F06C         	movff	floor@i,?_floor
  4041  001A94  C071  F06D         	movff	floor@i+1,?_floor+1
  4042  001A98  C072  F06E         	movff	floor@i+2,?_floor+2
  4043  001A9C  C073  F06F         	movff	floor@i+3,?_floor+3
  4044  001AA0                     l690:
  4045  001AA0  FFFF               	dw	65535	; assembler added errata NOP
  4046  001AA2  0012               	return		;funcret
  4047  001AA4  FFFF               	dw	65535	; errata NOP
  4048  001AA6                     __end_of_floor:
  4049                           	opt stack 0
  4050                           tosu	equ	0xFFF
  4051                           tosh	equ	0xFFE
  4052                           tosl	equ	0xFFD
  4053                           pclath	equ	0xFFA
  4054                           tblptru	equ	0xFF8
  4055                           tblptrh	equ	0xFF7
  4056                           tblptrl	equ	0xFF6
  4057                           tablat	equ	0xFF5
  4058                           intcon	equ	0xFF2
  4059                           intcon2	equ	0xFF1
  4060                           postinc0	equ	0xFEE
  4061                           wreg	equ	0xFE8
  4062                           indf2	equ	0xFDF
  4063                           fsr2h	equ	0xFDA
  4064                           fsr2l	equ	0xFD9
  4065                           status	equ	0xFD8
  4066                           
  4067 ;; *************** function ___fltol *****************
  4068 ;; Defined at:
  4069 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\fltol.c"
  4070 ;; Parameters:    Size  Location     Type
  4071 ;;  f1              4   92[COMRAM] int 
  4072 ;; Auto vars:     Size  Location     Type
  4073 ;;  exp1            1  101[COMRAM] unsigned char 
  4074 ;;  sign1           1  100[COMRAM] unsigned char 
  4075 ;; Return value:  Size  Location     Type
  4076 ;;                  4   92[COMRAM] long 
  4077 ;; Registers used:
  4078 ;;		wreg, status,2, status,0
  4079 ;; Tracked objects:
  4080 ;;		On entry : 0/0
  4081 ;;		On exit  : 0/0
  4082 ;;		Unchanged: 0/0
  4083 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4084 ;;      Params:         4       0       0       0       0       0       0
  4085 ;;      Locals:         2       0       0       0       0       0       0
  4086 ;;      Temps:          4       0       0       0       0       0       0
  4087 ;;      Totals:        10       0       0       0       0       0       0
  4088 ;;Total ram usage:       10 bytes
  4089 ;; Hardware stack levels used:    1
  4090 ;; Hardware stack levels required when called:    1
  4091 ;; This function calls:
  4092 ;;		Nothing
  4093 ;; This function is called by:
  4094 ;;		_format_double
  4095 ;;		_measure_capacitance
  4096 ;;		_measure_inductance
  4097 ;;		_floor
  4098 ;;		_pow
  4099 ;;		_exp
  4100 ;; This function uses a non-reentrant model
  4101 ;;
  4102                           
  4103                           	psect	text16
  4104  001E16                     __ptext16:
  4105                           	opt stack 0
  4106  001E16                     ___fltol:
  4107                           	opt stack 28
  4108                           
  4109                           ;incstack = 0
  4110  001E16  FFFF               	dw	65535
  4111  001E18  345F               	rlcf	___fltol@f1+2,w,c
  4112  001E1A  3460               	rlcf	___fltol@f1+3,w,c
  4113  001E1C  6E66               	movwf	___fltol@exp1,c
  4114  001E1E  5066               	movf	___fltol@exp1,w,c
  4115  001E20  E106               	bnz	l2201
  4116  001E22                     l2199:
  4117  001E22  FFFF               	dw	65535	; assembler added errata NOP
  4118  001E24  6A5D               	clrf	?___fltol,c
  4119  001E26  6A5E               	clrf	?___fltol+1,c
  4120  001E28  6A5F               	clrf	?___fltol+2,c
  4121  001E2A  6A60               	clrf	?___fltol+3,c
  4122  001E2C  D049               	goto	l702
  4123  001E2E                     l2201:
  4124  001E2E  C05D  F061         	movff	___fltol@f1,??___fltol
  4125  001E32  C05E  F062         	movff	___fltol@f1+1,??___fltol+1
  4126  001E36  C05F  F063         	movff	___fltol@f1+2,??___fltol+2
  4127  001E3A  C060  F064         	movff	___fltol@f1+3,??___fltol+3
  4128  001E3E  0E20               	movlw	32
  4129  001E40  D006               	goto	u1620
  4130  001E42                     u1625:
  4131  001E42  FFFF               	dw	65535	; assembler added errata NOP
  4132  001E44  90D8               	bcf	status,0,c
  4133  001E46  3264               	rrcf	??___fltol+3,f,c
  4134  001E48  3263               	rrcf	??___fltol+2,f,c
  4135  001E4A  3262               	rrcf	??___fltol+1,f,c
  4136  001E4C  3261               	rrcf	??___fltol,f,c
  4137  001E4E                     u1620:
  4138  001E4E  FFFF               	dw	65535	; assembler added errata NOP
  4139  001E50  2EE8               	decfsz	wreg,f,c
  4140  001E52  D7F7               	goto	u1625
  4141  001E54  5061               	movf	??___fltol,w,c
  4142  001E56  6E65               	movwf	___fltol@sign1,c
  4143  001E58  8E5F               	bsf	___fltol@f1+2,7,c
  4144  001E5A  6A60               	clrf	___fltol@f1+3,c
  4145  001E5C  0E96               	movlw	150
  4146  001E5E  5E66               	subwf	___fltol@exp1,f,c
  4147  001E60  AE66               	btfss	___fltol@exp1,7,c
  4148  001E62  D00D               	goto	l2219
  4149  001E64  5066               	movf	___fltol@exp1,w,c
  4150  001E66  0A80               	xorlw	128
  4151  001E68  0F97               	addlw	151
  4152  001E6A  E3DB               	bnc	l2199
  4153  001E6C                     l2215:
  4154  001E6C  FFFF               	dw	65535	; assembler added errata NOP
  4155  001E6E  90D8               	bcf	status,0,c
  4156  001E70  3260               	rrcf	___fltol@f1+3,f,c
  4157  001E72  325F               	rrcf	___fltol@f1+2,f,c
  4158  001E74  325E               	rrcf	___fltol@f1+1,f,c
  4159  001E76  325D               	rrcf	___fltol@f1,f,c
  4160  001E78  3E66               	incfsz	___fltol@exp1,f,c
  4161  001E7A  D7F8               	goto	l2215
  4162  001E7C  D00E               	goto	l2227
  4163  001E7E                     l2219:
  4164  001E7E  FFFF               	dw	65535	; assembler added errata NOP
  4165  001E80  0E1F               	movlw	31
  4166  001E82  6466               	cpfsgt	___fltol@exp1,c
  4167  001E84  D007               	goto	l2225
  4168  001E86  D7CD               	goto	l2199
  4169  001E88                     l2223:
  4170  001E88  90D8               	bcf	status,0,c
  4171  001E8A  365D               	rlcf	___fltol@f1,f,c
  4172  001E8C  365E               	rlcf	___fltol@f1+1,f,c
  4173  001E8E  365F               	rlcf	___fltol@f1+2,f,c
  4174  001E90  3660               	rlcf	___fltol@f1+3,f,c
  4175  001E92  0666               	decf	___fltol@exp1,f,c
  4176  001E94                     l2225:
  4177  001E94  FFFF               	dw	65535	; assembler added errata NOP
  4178  001E96  5066               	movf	___fltol@exp1,w,c
  4179  001E98  E1F7               	bnz	l2223
  4180  001E9A                     l2227:
  4181  001E9A  FFFF               	dw	65535	; assembler added errata NOP
  4182  001E9C  5065               	movf	___fltol@sign1,w,c
  4183  001E9E  E008               	bz	l2231
  4184  001EA0  1E60               	comf	___fltol@f1+3,f,c
  4185  001EA2  1E5F               	comf	___fltol@f1+2,f,c
  4186  001EA4  1E5E               	comf	___fltol@f1+1,f,c
  4187  001EA6  6C5D               	negf	___fltol@f1,c
  4188  001EA8  0E00               	movlw	0
  4189  001EAA  225E               	addwfc	___fltol@f1+1,f,c
  4190  001EAC  225F               	addwfc	___fltol@f1+2,f,c
  4191  001EAE  2260               	addwfc	___fltol@f1+3,f,c
  4192  001EB0                     l2231:
  4193  001EB0  C05D  F05D         	movff	___fltol@f1,?___fltol
  4194  001EB4  C05E  F05E         	movff	___fltol@f1+1,?___fltol+1
  4195  001EB8  C05F  F05F         	movff	___fltol@f1+2,?___fltol+2
  4196  001EBC  C060  F060         	movff	___fltol@f1+3,?___fltol+3
  4197  001EC0                     l702:
  4198  001EC0  FFFF               	dw	65535	; assembler added errata NOP
  4199  001EC2  0012               	return		;funcret
  4200  001EC4  FFFF               	dw	65535	; errata NOP
  4201  001EC6                     __end_of___fltol:
  4202                           	opt stack 0
  4203                           tosu	equ	0xFFF
  4204                           tosh	equ	0xFFE
  4205                           tosl	equ	0xFFD
  4206                           pclath	equ	0xFFA
  4207                           tblptru	equ	0xFF8
  4208                           tblptrh	equ	0xFF7
  4209                           tblptrl	equ	0xFF6
  4210                           tablat	equ	0xFF5
  4211                           intcon	equ	0xFF2
  4212                           intcon2	equ	0xFF1
  4213                           postinc0	equ	0xFEE
  4214                           wreg	equ	0xFE8
  4215                           indf2	equ	0xFDF
  4216                           fsr2h	equ	0xFDA
  4217                           fsr2l	equ	0xFD9
  4218                           status	equ	0xFD8
  4219                           
  4220 ;; *************** function ___flge *****************
  4221 ;; Defined at:
  4222 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\flge.c"
  4223 ;; Parameters:    Size  Location     Type
  4224 ;;  ff1             4    2[COMRAM] long 
  4225 ;;  ff2             4    6[COMRAM] long 
  4226 ;; Auto vars:     Size  Location     Type
  4227 ;;		None
  4228 ;; Return value:  Size  Location     Type
  4229 ;;		None               void
  4230 ;; Registers used:
  4231 ;;		wreg, status,2, status,0
  4232 ;; Tracked objects:
  4233 ;;		On entry : 0/0
  4234 ;;		On exit  : 0/0
  4235 ;;		Unchanged: 0/0
  4236 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4237 ;;      Params:         8       0       0       0       0       0       0
  4238 ;;      Locals:         0       0       0       0       0       0       0
  4239 ;;      Temps:          0       0       0       0       0       0       0
  4240 ;;      Totals:         8       0       0       0       0       0       0
  4241 ;;Total ram usage:        8 bytes
  4242 ;; Hardware stack levels used:    1
  4243 ;; Hardware stack levels required when called:    1
  4244 ;; This function calls:
  4245 ;;		Nothing
  4246 ;; This function is called by:
  4247 ;;		_format_double
  4248 ;;		_measure_capacitance
  4249 ;;		_measure_inductance
  4250 ;;		_floor
  4251 ;;		_pow
  4252 ;;		_exp
  4253 ;; This function uses a non-reentrant model
  4254 ;;
  4255                           
  4256                           	psect	text17
  4257  0022EC                     __ptext17:
  4258                           	opt stack 0
  4259  0022EC                     ___flge:
  4260                           	opt stack 28
  4261                           
  4262                           ;incstack = 0
  4263  0022EC  FFFF               	dw	65535
  4264  0022EE  AE06               	btfss	___flge@ff1+3,7,c
  4265  0022F0  D009               	goto	l2167
  4266  0022F2  6C03               	negf	___flge@ff1,c
  4267  0022F4  1E04               	comf	___flge@ff1+1,f,c
  4268  0022F6  B0D8               	btfsc	status,0,c
  4269  0022F8  2A04               	incf	___flge@ff1+1,f,c
  4270  0022FA  1E05               	comf	___flge@ff1+2,f,c
  4271  0022FC  B0D8               	btfsc	status,0,c
  4272  0022FE  2A05               	incf	___flge@ff1+2,f,c
  4273  002300  0E80               	movlw	128
  4274  002302  5606               	subfwb	___flge@ff1+3,f,c
  4275  002304                     l2167:
  4276  002304  FFFF               	dw	65535	; assembler added errata NOP
  4277  002306  AE0A               	btfss	___flge@ff2+3,7,c
  4278  002308  D009               	goto	l651
  4279  00230A  6C07               	negf	___flge@ff2,c
  4280  00230C  1E08               	comf	___flge@ff2+1,f,c
  4281  00230E  B0D8               	btfsc	status,0,c
  4282  002310  2A08               	incf	___flge@ff2+1,f,c
  4283  002312  1E09               	comf	___flge@ff2+2,f,c
  4284  002314  B0D8               	btfsc	status,0,c
  4285  002316  2A09               	incf	___flge@ff2+2,f,c
  4286  002318  0E80               	movlw	128
  4287  00231A  560A               	subfwb	___flge@ff2+3,f,c
  4288  00231C                     l651:
  4289  00231C  FFFF               	dw	65535	; assembler added errata NOP
  4290  00231E  0E80               	movlw	128
  4291  002320  1A06               	xorwf	___flge@ff1+3,f,c
  4292  002322  1A0A               	xorwf	___flge@ff2+3,f,c
  4293  002324  5007               	movf	___flge@ff2,w,c
  4294  002326  5C03               	subwf	___flge@ff1,w,c
  4295  002328  5008               	movf	___flge@ff2+1,w,c
  4296  00232A  5804               	subwfb	___flge@ff1+1,w,c
  4297  00232C  5009               	movf	___flge@ff2+2,w,c
  4298  00232E  5805               	subwfb	___flge@ff1+2,w,c
  4299  002330  500A               	movf	___flge@ff2+3,w,c
  4300  002332  5806               	subwfb	___flge@ff1+3,w,c
  4301  002334  E202               	bc	l2173
  4302  002336  90D8               	bcf	status,0,c
  4303  002338  D001               	goto	l652
  4304  00233A                     l2173:
  4305  00233A  80D8               	bsf	status,0,c
  4306  00233C                     l652:
  4307  00233C  FFFF               	dw	65535	; assembler added errata NOP
  4308  00233E  0012               	return		;funcret
  4309  002340  FFFF               	dw	65535	; errata NOP
  4310  002342                     __end_of___flge:
  4311                           	opt stack 0
  4312                           tosu	equ	0xFFF
  4313                           tosh	equ	0xFFE
  4314                           tosl	equ	0xFFD
  4315                           pclath	equ	0xFFA
  4316                           tblptru	equ	0xFF8
  4317                           tblptrh	equ	0xFF7
  4318                           tblptrl	equ	0xFF6
  4319                           tablat	equ	0xFF5
  4320                           intcon	equ	0xFF2
  4321                           intcon2	equ	0xFF1
  4322                           postinc0	equ	0xFEE
  4323                           wreg	equ	0xFE8
  4324                           indf2	equ	0xFDF
  4325                           fsr2h	equ	0xFDA
  4326                           fsr2l	equ	0xFD9
  4327                           status	equ	0xFD8
  4328                           
  4329 ;; *************** function ___altofl *****************
  4330 ;; Defined at:
  4331 ;;		line 36 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\altofl.c"
  4332 ;; Parameters:    Size  Location     Type
  4333 ;;  c               4  102[COMRAM] long 
  4334 ;; Auto vars:     Size  Location     Type
  4335 ;;  sign            1  106[COMRAM] unsigned char 
  4336 ;; Return value:  Size  Location     Type
  4337 ;;                  4  102[COMRAM] unsigned char 
  4338 ;; Registers used:
  4339 ;;		wreg, status,2, status,0, cstack
  4340 ;; Tracked objects:
  4341 ;;		On entry : 0/0
  4342 ;;		On exit  : 0/0
  4343 ;;		Unchanged: 0/0
  4344 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4345 ;;      Params:         4       0       0       0       0       0       0
  4346 ;;      Locals:         1       0       0       0       0       0       0
  4347 ;;      Temps:          0       0       0       0       0       0       0
  4348 ;;      Totals:         5       0       0       0       0       0       0
  4349 ;;Total ram usage:        5 bytes
  4350 ;; Hardware stack levels used:    1
  4351 ;; Hardware stack levels required when called:    2
  4352 ;; This function calls:
  4353 ;;		___flpack
  4354 ;; This function is called by:
  4355 ;;		_floor
  4356 ;; This function uses a non-reentrant model
  4357 ;;
  4358                           
  4359                           	psect	text18
  4360  0023EA                     __ptext18:
  4361                           	opt stack 0
  4362  0023EA                     ___altofl:
  4363                           	opt stack 23
  4364                           
  4365                           ;incstack = 0
  4366  0023EA  FFFF               	dw	65535
  4367  0023EC  6A6B               	clrf	___altofl@sign,c
  4368  0023EE  AE6A               	btfss	___altofl@c+3,7,c
  4369  0023F0  D00A               	goto	l2053
  4370  0023F2  1E6A               	comf	___altofl@c+3,f,c
  4371  0023F4  1E69               	comf	___altofl@c+2,f,c
  4372  0023F6  1E68               	comf	___altofl@c+1,f,c
  4373  0023F8  6C67               	negf	___altofl@c,c
  4374  0023FA  0E00               	movlw	0
  4375  0023FC  2268               	addwfc	___altofl@c+1,f,c
  4376  0023FE  2269               	addwfc	___altofl@c+2,f,c
  4377  002400  226A               	addwfc	___altofl@c+3,f,c
  4378  002402  0E01               	movlw	1
  4379  002404  6E6B               	movwf	___altofl@sign,c
  4380  002406                     l2053:
  4381  002406  FFFF               	dw	65535	; assembler added errata NOP
  4382  002408  C067  F003         	movff	___altofl@c,___flpack@arg
  4383  00240C  C068  F004         	movff	___altofl@c+1,___flpack@arg+1
  4384  002410  C069  F005         	movff	___altofl@c+2,___flpack@arg+2
  4385  002414  C06A  F006         	movff	___altofl@c+3,___flpack@arg+3
  4386  002418  0E96               	movlw	150
  4387  00241A  6E07               	movwf	___flpack@exp,c
  4388  00241C  C06B  F008         	movff	___altofl@sign,___flpack@sign
  4389  002420  EC37  F00E         	call	___flpack	;wreg free
  4390  002424  C003  F067         	movff	?___flpack,?___altofl
  4391  002428  C004  F068         	movff	?___flpack+1,?___altofl+1
  4392  00242C  C005  F069         	movff	?___flpack+2,?___altofl+2
  4393  002430  C006  F06A         	movff	?___flpack+3,?___altofl+3
  4394  002434  0012               	return		;funcret
  4395  002436  FFFF               	dw	65535	; errata NOP
  4396  002438                     __end_of___altofl:
  4397                           	opt stack 0
  4398                           tosu	equ	0xFFF
  4399                           tosh	equ	0xFFE
  4400                           tosl	equ	0xFFD
  4401                           pclath	equ	0xFFA
  4402                           tblptru	equ	0xFF8
  4403                           tblptrh	equ	0xFF7
  4404                           tblptrl	equ	0xFF6
  4405                           tablat	equ	0xFF5
  4406                           intcon	equ	0xFF2
  4407                           intcon2	equ	0xFF1
  4408                           postinc0	equ	0xFEE
  4409                           wreg	equ	0xFE8
  4410                           indf2	equ	0xFDF
  4411                           fsr2h	equ	0xFDA
  4412                           fsr2l	equ	0xFD9
  4413                           status	equ	0xFD8
  4414                           
  4415 ;; *************** function ___flsub *****************
  4416 ;; Defined at:
  4417 ;;		line 20 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\flsub.c"
  4418 ;; Parameters:    Size  Location     Type
  4419 ;;  f1              4   66[COMRAM] unsigned char 
  4420 ;;  f2              4   70[COMRAM] unsigned char 
  4421 ;; Auto vars:     Size  Location     Type
  4422 ;;		None
  4423 ;; Return value:  Size  Location     Type
  4424 ;;                  4   66[COMRAM] unsigned char 
  4425 ;; Registers used:
  4426 ;;		wreg, status,2, status,0, cstack
  4427 ;; Tracked objects:
  4428 ;;		On entry : 0/0
  4429 ;;		On exit  : 0/0
  4430 ;;		Unchanged: 0/0
  4431 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4432 ;;      Params:         8       0       0       0       0       0       0
  4433 ;;      Locals:         0       0       0       0       0       0       0
  4434 ;;      Temps:          0       0       0       0       0       0       0
  4435 ;;      Totals:         8       0       0       0       0       0       0
  4436 ;;Total ram usage:        8 bytes
  4437 ;; Hardware stack levels used:    1
  4438 ;; Hardware stack levels required when called:    3
  4439 ;; This function calls:
  4440 ;;		___fladd
  4441 ;; This function is called by:
  4442 ;;		_format_double
  4443 ;;		_measure_capacitance
  4444 ;;		_measure_inductance
  4445 ;;		_exp
  4446 ;; This function uses a non-reentrant model
  4447 ;;
  4448                           
  4449                           	psect	text19
  4450  002480                     __ptext19:
  4451                           	opt stack 0
  4452  002480                     ___flsub:
  4453                           	opt stack 26
  4454                           
  4455                           ;incstack = 0
  4456  002480  FFFF               	dw	65535
  4457  002482  5047               	movf	___flsub@f2,w,c
  4458  002484  1048               	iorwf	___flsub@f2+1,w,c
  4459  002486  1049               	iorwf	___flsub@f2+2,w,c
  4460  002488  104A               	iorwf	___flsub@f2+3,w,c
  4461  00248A  E002               	bz	l2307
  4462  00248C  0E80               	movlw	128
  4463  00248E  1A4A               	xorwf	___flsub@f2+3,f,c
  4464  002490                     l2307:
  4465  002490  C043  F037         	movff	___flsub@f1,___fladd@f1
  4466  002494  C044  F038         	movff	___flsub@f1+1,___fladd@f1+1
  4467  002498  C045  F039         	movff	___flsub@f1+2,___fladd@f1+2
  4468  00249C  C046  F03A         	movff	___flsub@f1+3,___fladd@f1+3
  4469  0024A0  C047  F03B         	movff	___flsub@f2,___fladd@f2
  4470  0024A4  C048  F03C         	movff	___flsub@f2+1,___fladd@f2+1
  4471  0024A8  C049  F03D         	movff	___flsub@f2+2,___fladd@f2+2
  4472  0024AC  C04A  F03E         	movff	___flsub@f2+3,___fladd@f2+3
  4473  0024B0  EC82  F00B         	call	___fladd	;wreg free
  4474  0024B4  C037  F043         	movff	?___fladd,?___flsub
  4475  0024B8  C038  F044         	movff	?___fladd+1,?___flsub+1
  4476  0024BC  C039  F045         	movff	?___fladd+2,?___flsub+2
  4477  0024C0  C03A  F046         	movff	?___fladd+3,?___flsub+3
  4478  0024C4  0012               	return		;funcret
  4479  0024C6  FFFF               	dw	65535	; errata NOP
  4480  0024C8                     __end_of___flsub:
  4481                           	opt stack 0
  4482                           tosu	equ	0xFFF
  4483                           tosh	equ	0xFFE
  4484                           tosl	equ	0xFFD
  4485                           pclath	equ	0xFFA
  4486                           tblptru	equ	0xFF8
  4487                           tblptrh	equ	0xFF7
  4488                           tblptrl	equ	0xFF6
  4489                           tablat	equ	0xFF5
  4490                           intcon	equ	0xFF2
  4491                           intcon2	equ	0xFF1
  4492                           postinc0	equ	0xFEE
  4493                           wreg	equ	0xFE8
  4494                           indf2	equ	0xFDF
  4495                           fsr2h	equ	0xFDA
  4496                           fsr2l	equ	0xFD9
  4497                           status	equ	0xFD8
  4498                           
  4499 ;; *************** function ___flneg *****************
  4500 ;; Defined at:
  4501 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\flneg.c"
  4502 ;; Parameters:    Size  Location     Type
  4503 ;;  f1              4    2[COMRAM] unsigned char 
  4504 ;; Auto vars:     Size  Location     Type
  4505 ;;		None
  4506 ;; Return value:  Size  Location     Type
  4507 ;;                  4    2[COMRAM] unsigned char 
  4508 ;; Registers used:
  4509 ;;		wreg, status,2, status,0
  4510 ;; Tracked objects:
  4511 ;;		On entry : F/0
  4512 ;;		On exit  : F/0
  4513 ;;		Unchanged: F/0
  4514 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4515 ;;      Params:         4       0       0       0       0       0       0
  4516 ;;      Locals:         0       0       0       0       0       0       0
  4517 ;;      Temps:          0       0       0       0       0       0       0
  4518 ;;      Totals:         4       0       0       0       0       0       0
  4519 ;;Total ram usage:        4 bytes
  4520 ;; Hardware stack levels used:    1
  4521 ;; Hardware stack levels required when called:    1
  4522 ;; This function calls:
  4523 ;;		Nothing
  4524 ;; This function is called by:
  4525 ;;		_pow
  4526 ;;		_exp
  4527 ;; This function uses a non-reentrant model
  4528 ;;
  4529                           
  4530                           	psect	text20
  4531  002630                     __ptext20:
  4532                           	opt stack 0
  4533  002630                     ___flneg:
  4534                           	opt stack 25
  4535                           
  4536                           ;incstack = 0
  4537  002630  FFFF               	dw	65535
  4538                           
  4539                           ; BSR set to: 0
  4540  002632  5003               	movf	___flneg@f1,w,c
  4541  002634  1004               	iorwf	___flneg@f1+1,w,c
  4542  002636  1005               	iorwf	___flneg@f1+2,w,c
  4543  002638  1006               	iorwf	___flneg@f1+3,w,c
  4544  00263A  E002               	bz	l2325
  4545                           
  4546                           ; BSR set to: 0
  4547  00263C  0E80               	movlw	128
  4548  00263E  1A06               	xorwf	___flneg@f1+3,f,c
  4549  002640                     l2325:
  4550                           
  4551                           ; BSR set to: 0
  4552  002640  C003  F003         	movff	___flneg@f1,?___flneg
  4553  002644  C004  F004         	movff	___flneg@f1+1,?___flneg+1
  4554  002648  C005  F005         	movff	___flneg@f1+2,?___flneg+2
  4555  00264C  C006  F006         	movff	___flneg@f1+3,?___flneg+3
  4556                           
  4557                           ; BSR set to: 0
  4558  002650  0012               	return		;funcret
  4559  002652  FFFF               	dw	65535	; errata NOP
  4560  002654                     __end_of___flneg:
  4561                           	opt stack 0
  4562                           tosu	equ	0xFFF
  4563                           tosh	equ	0xFFE
  4564                           tosl	equ	0xFFD
  4565                           pclath	equ	0xFFA
  4566                           tblptru	equ	0xFF8
  4567                           tblptrh	equ	0xFF7
  4568                           tblptrl	equ	0xFF6
  4569                           tablat	equ	0xFF5
  4570                           intcon	equ	0xFF2
  4571                           intcon2	equ	0xFF1
  4572                           postinc0	equ	0xFEE
  4573                           wreg	equ	0xFE8
  4574                           indf2	equ	0xFDF
  4575                           fsr2h	equ	0xFDA
  4576                           fsr2l	equ	0xFD9
  4577                           status	equ	0xFD8
  4578                           
  4579 ;; *************** function ___fldiv *****************
  4580 ;; Defined at:
  4581 ;;		line 54 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\fldiv.c"
  4582 ;; Parameters:    Size  Location     Type
  4583 ;;  f1              4   12[COMRAM] unsigned char 
  4584 ;;  f2              4   16[COMRAM] unsigned char 
  4585 ;; Auto vars:     Size  Location     Type
  4586 ;;  f3              4   20[COMRAM] unsigned char 
  4587 ;;  sign            1   26[COMRAM] unsigned char 
  4588 ;;  exp             1   25[COMRAM] unsigned char 
  4589 ;;  cntr            1   24[COMRAM] unsigned char 
  4590 ;; Return value:  Size  Location     Type
  4591 ;;                  4   12[COMRAM] unsigned char 
  4592 ;; Registers used:
  4593 ;;		wreg, status,2, status,0, cstack
  4594 ;; Tracked objects:
  4595 ;;		On entry : 0/0
  4596 ;;		On exit  : 0/0
  4597 ;;		Unchanged: 0/0
  4598 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4599 ;;      Params:         8       0       0       0       0       0       0
  4600 ;;      Locals:         7       0       0       0       0       0       0
  4601 ;;      Temps:          0       0       0       0       0       0       0
  4602 ;;      Totals:        15       0       0       0       0       0       0
  4603 ;;Total ram usage:       15 bytes
  4604 ;; Hardware stack levels used:    1
  4605 ;; Hardware stack levels required when called:    2
  4606 ;; This function calls:
  4607 ;;		___flpack
  4608 ;; This function is called by:
  4609 ;;		_format_double
  4610 ;;		_measure_capacitance
  4611 ;;		_measure_inductance
  4612 ;;		_exp
  4613 ;; This function uses a non-reentrant model
  4614 ;;
  4615                           
  4616                           	psect	text21
  4617  001EC6                     __ptext21:
  4618                           	opt stack 0
  4619  001EC6                     ___fldiv:
  4620                           	opt stack 27
  4621                           
  4622                           ; BSR set to: 0
  4623                           ;incstack = 0
  4624  001EC6  FFFF               	dw	65535
  4625  001EC8  340F               	rlcf	___fldiv@f1+2,w,c
  4626  001ECA  3410               	rlcf	___fldiv@f1+3,w,c
  4627  001ECC  6E1A               	movwf	___fldiv@exp,c
  4628  001ECE  501A               	movf	___fldiv@exp,w,c
  4629  001ED0  E005               	bz	l2273
  4630  001ED2  3413               	rlcf	___fldiv@f2+2,w,c
  4631  001ED4  3414               	rlcf	___fldiv@f2+3,w,c
  4632  001ED6  6E1B               	movwf	___fldiv@sign,c
  4633  001ED8  501B               	movf	___fldiv@sign,w,c
  4634  001EDA  E105               	bnz	l2275
  4635  001EDC                     l2273:
  4636  001EDC  6A0D               	clrf	?___fldiv,c
  4637  001EDE  6A0E               	clrf	?___fldiv+1,c
  4638  001EE0  6A0F               	clrf	?___fldiv+2,c
  4639  001EE2  6A10               	clrf	?___fldiv+3,c
  4640  001EE4  D044               	goto	l643
  4641  001EE6                     l2275:
  4642  001EE6  501B               	movf	___fldiv@sign,w,c
  4643  001EE8  0F89               	addlw	137
  4644  001EEA  5E1A               	subwf	___fldiv@exp,f,c
  4645  001EEC  C010  F01B         	movff	___fldiv@f1+3,___fldiv@sign
  4646  001EF0  5014               	movf	___fldiv@f2+3,w,c
  4647  001EF2  1A1B               	xorwf	___fldiv@sign,f,c
  4648  001EF4  0E80               	movlw	128
  4649  001EF6  161B               	andwf	___fldiv@sign,f,c
  4650  001EF8  8E0F               	bsf	___fldiv@f1+2,7,c
  4651  001EFA  6A10               	clrf	___fldiv@f1+3,c
  4652  001EFC  8E13               	bsf	___fldiv@f2+2,7,c
  4653  001EFE  6A14               	clrf	___fldiv@f2+3,c
  4654  001F00  0E20               	movlw	32
  4655  001F02  6E19               	movwf	___fldiv@cntr,c
  4656  001F04                     l2287:
  4657  001F04  FFFF               	dw	65535	; assembler added errata NOP
  4658  001F06  90D8               	bcf	status,0,c
  4659  001F08  3615               	rlcf	___fldiv@f3,f,c
  4660  001F0A  3616               	rlcf	___fldiv@f3+1,f,c
  4661  001F0C  3617               	rlcf	___fldiv@f3+2,f,c
  4662  001F0E  3618               	rlcf	___fldiv@f3+3,f,c
  4663  001F10  5011               	movf	___fldiv@f2,w,c
  4664  001F12  5C0D               	subwf	___fldiv@f1,w,c
  4665  001F14  5012               	movf	___fldiv@f2+1,w,c
  4666  001F16  580E               	subwfb	___fldiv@f1+1,w,c
  4667  001F18  5013               	movf	___fldiv@f2+2,w,c
  4668  001F1A  580F               	subwfb	___fldiv@f1+2,w,c
  4669  001F1C  5014               	movf	___fldiv@f2+3,w,c
  4670  001F1E  5810               	subwfb	___fldiv@f1+3,w,c
  4671  001F20  E309               	bnc	l2295
  4672  001F22  5011               	movf	___fldiv@f2,w,c
  4673  001F24  5E0D               	subwf	___fldiv@f1,f,c
  4674  001F26  5012               	movf	___fldiv@f2+1,w,c
  4675  001F28  5A0E               	subwfb	___fldiv@f1+1,f,c
  4676  001F2A  5013               	movf	___fldiv@f2+2,w,c
  4677  001F2C  5A0F               	subwfb	___fldiv@f1+2,f,c
  4678  001F2E  5014               	movf	___fldiv@f2+3,w,c
  4679  001F30  5A10               	subwfb	___fldiv@f1+3,f,c
  4680  001F32  8015               	bsf	___fldiv@f3,0,c
  4681  001F34                     l2295:
  4682  001F34  90D8               	bcf	status,0,c
  4683  001F36  360D               	rlcf	___fldiv@f1,f,c
  4684  001F38  360E               	rlcf	___fldiv@f1+1,f,c
  4685  001F3A  360F               	rlcf	___fldiv@f1+2,f,c
  4686  001F3C  3610               	rlcf	___fldiv@f1+3,f,c
  4687  001F3E  2E19               	decfsz	___fldiv@cntr,f,c
  4688  001F40  D7E1               	goto	l2287
  4689  001F42  C015  F003         	movff	___fldiv@f3,___flpack@arg
  4690  001F46  C016  F004         	movff	___fldiv@f3+1,___flpack@arg+1
  4691  001F4A  C017  F005         	movff	___fldiv@f3+2,___flpack@arg+2
  4692  001F4E  C018  F006         	movff	___fldiv@f3+3,___flpack@arg+3
  4693  001F52  C01A  F007         	movff	___fldiv@exp,___flpack@exp
  4694  001F56  C01B  F008         	movff	___fldiv@sign,___flpack@sign
  4695  001F5A  EC37  F00E         	call	___flpack	;wreg free
  4696  001F5E  C003  F00D         	movff	?___flpack,?___fldiv
  4697  001F62  C004  F00E         	movff	?___flpack+1,?___fldiv+1
  4698  001F66  C005  F00F         	movff	?___flpack+2,?___fldiv+2
  4699  001F6A  C006  F010         	movff	?___flpack+3,?___fldiv+3
  4700  001F6E                     l643:
  4701  001F6E  FFFF               	dw	65535	; assembler added errata NOP
  4702  001F70  0012               	return		;funcret
  4703  001F72  FFFF               	dw	65535	; errata NOP
  4704  001F74                     __end_of___fldiv:
  4705                           	opt stack 0
  4706                           tosu	equ	0xFFF
  4707                           tosh	equ	0xFFE
  4708                           tosl	equ	0xFFD
  4709                           pclath	equ	0xFFA
  4710                           tblptru	equ	0xFF8
  4711                           tblptrh	equ	0xFF7
  4712                           tblptrl	equ	0xFF6
  4713                           tablat	equ	0xFF5
  4714                           intcon	equ	0xFF2
  4715                           intcon2	equ	0xFF1
  4716                           postinc0	equ	0xFEE
  4717                           wreg	equ	0xFE8
  4718                           indf2	equ	0xFDF
  4719                           fsr2h	equ	0xFDA
  4720                           fsr2l	equ	0xFD9
  4721                           status	equ	0xFD8
  4722                           
  4723 ;; *************** function ___lltofl *****************
  4724 ;; Defined at:
  4725 ;;		line 30 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lltofl.c"
  4726 ;; Parameters:    Size  Location     Type
  4727 ;;  c               4   12[COMRAM] unsigned long 
  4728 ;; Auto vars:     Size  Location     Type
  4729 ;;		None
  4730 ;; Return value:  Size  Location     Type
  4731 ;;                  4   12[COMRAM] unsigned long 
  4732 ;; Registers used:
  4733 ;;		wreg, status,2, status,0, cstack
  4734 ;; Tracked objects:
  4735 ;;		On entry : 0/0
  4736 ;;		On exit  : 0/0
  4737 ;;		Unchanged: 0/0
  4738 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4739 ;;      Params:         4       0       0       0       0       0       0
  4740 ;;      Locals:         0       0       0       0       0       0       0
  4741 ;;      Temps:          0       0       0       0       0       0       0
  4742 ;;      Totals:         4       0       0       0       0       0       0
  4743 ;;Total ram usage:        4 bytes
  4744 ;; Hardware stack levels used:    1
  4745 ;; Hardware stack levels required when called:    2
  4746 ;; This function calls:
  4747 ;;		___flpack
  4748 ;; This function is called by:
  4749 ;;		_pow
  4750 ;; This function uses a non-reentrant model
  4751 ;;
  4752                           
  4753                           	psect	text22
  4754  002580                     __ptext22:
  4755                           	opt stack 0
  4756  002580                     ___lltofl:
  4757                           	opt stack 25
  4758                           
  4759                           ;incstack = 0
  4760  002580  FFFF               	dw	65535
  4761  002582  C00D  F003         	movff	___lltofl@c,___flpack@arg
  4762  002586  C00E  F004         	movff	___lltofl@c+1,___flpack@arg+1
  4763  00258A  C00F  F005         	movff	___lltofl@c+2,___flpack@arg+2
  4764  00258E  C010  F006         	movff	___lltofl@c+3,___flpack@arg+3
  4765  002592  0E96               	movlw	150
  4766  002594  6E07               	movwf	___flpack@exp,c
  4767  002596  0E00               	movlw	0
  4768  002598  6E08               	movwf	___flpack@sign,c
  4769  00259A  EC37  F00E         	call	___flpack	;wreg free
  4770  00259E  C003  F00D         	movff	?___flpack,?___lltofl
  4771  0025A2  C004  F00E         	movff	?___flpack+1,?___lltofl+1
  4772  0025A6  C005  F00F         	movff	?___flpack+2,?___lltofl+2
  4773  0025AA  C006  F010         	movff	?___flpack+3,?___lltofl+3
  4774  0025AE  0012               	return		;funcret
  4775  0025B0  FFFF               	dw	65535	; errata NOP
  4776  0025B2                     __end_of___lltofl:
  4777                           	opt stack 0
  4778                           tosu	equ	0xFFF
  4779                           tosh	equ	0xFFE
  4780                           tosl	equ	0xFFD
  4781                           pclath	equ	0xFFA
  4782                           tblptru	equ	0xFF8
  4783                           tblptrh	equ	0xFF7
  4784                           tblptrl	equ	0xFF6
  4785                           tablat	equ	0xFF5
  4786                           intcon	equ	0xFF2
  4787                           intcon2	equ	0xFF1
  4788                           postinc0	equ	0xFEE
  4789                           wreg	equ	0xFE8
  4790                           indf2	equ	0xFDF
  4791                           fsr2h	equ	0xFDA
  4792                           fsr2l	equ	0xFD9
  4793                           status	equ	0xFD8
  4794                           
  4795 ;; *************** function _format_putchar *****************
  4796 ;; Defined at:
  4797 ;;		line 6 in file "../../../lib/format.c"
  4798 ;; Parameters:    Size  Location     Type
  4799 ;;  c               1    wreg     unsigned char 
  4800 ;; Auto vars:     Size  Location     Type
  4801 ;;  c               1    0[COMRAM] unsigned char 
  4802 ;; Return value:  Size  Location     Type
  4803 ;;		None               void
  4804 ;; Registers used:
  4805 ;;		wreg
  4806 ;; Tracked objects:
  4807 ;;		On entry : 0/0
  4808 ;;		On exit  : 0/0
  4809 ;;		Unchanged: 0/0
  4810 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4811 ;;      Params:         0       0       0       0       0       0       0
  4812 ;;      Locals:         0       0       0       0       0       0       0
  4813 ;;      Temps:          0       0       0       0       0       0       0
  4814 ;;      Totals:         0       0       0       0       0       0       0
  4815 ;;Total ram usage:        0 bytes
  4816 ;; Hardware stack levels used:    1
  4817 ;; Hardware stack levels required when called:    1
  4818 ;; This function calls:
  4819 ;;		Nothing
  4820 ;; This function is called by:
  4821 ;;		_format_number
  4822 ;;		_format_xint32
  4823 ;;		_format_double
  4824 ;; This function uses a non-reentrant model
  4825 ;;
  4826                           
  4827                           	psect	text23
  4828  00266E                     __ptext23:
  4829                           	opt stack 0
  4830  00266E                     _format_putchar:
  4831                           	opt stack 27
  4832                           
  4833                           ;incstack = 0
  4834  00266E  FFFF               	dw	65535
  4835                           
  4836                           ;format.c: 7: return;
  4837  002670  0012               	return		;funcret
  4838  002672  FFFF               	dw	65535	; errata NOP
  4839  002674                     __end_of_format_putchar:
  4840                           	opt stack 0
  4841                           tosu	equ	0xFFF
  4842                           tosh	equ	0xFFE
  4843                           tosl	equ	0xFFD
  4844                           pclath	equ	0xFFA
  4845                           tblptru	equ	0xFF8
  4846                           tblptrh	equ	0xFF7
  4847                           tblptrl	equ	0xFF6
  4848                           tablat	equ	0xFF5
  4849                           intcon	equ	0xFF2
  4850                           intcon2	equ	0xFF1
  4851                           postinc0	equ	0xFEE
  4852                           wreg	equ	0xFE8
  4853                           indf2	equ	0xFDF
  4854                           fsr2h	equ	0xFDA
  4855                           fsr2l	equ	0xFD9
  4856                           status	equ	0xFD8
  4857                           
  4858 ;; *************** function _ser_putch *****************
  4859 ;; Defined at:
  4860 ;;		line 82 in file "../../../lib/ser.c"
  4861 ;; Parameters:    Size  Location     Type
  4862 ;;  c               1    wreg     unsigned char 
  4863 ;; Auto vars:     Size  Location     Type
  4864 ;;  c               1    2[COMRAM] unsigned char 
  4865 ;; Return value:  Size  Location     Type
  4866 ;;		None               void
  4867 ;; Registers used:
  4868 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4869 ;; Tracked objects:
  4870 ;;		On entry : 0/0
  4871 ;;		On exit  : 0/0
  4872 ;;		Unchanged: 0/0
  4873 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4874 ;;      Params:         0       0       0       0       0       0       0
  4875 ;;      Locals:         1       0       0       0       0       0       0
  4876 ;;      Temps:          0       0       0       0       0       0       0
  4877 ;;      Totals:         1       0       0       0       0       0       0
  4878 ;;Total ram usage:        1 bytes
  4879 ;; Hardware stack levels used:    1
  4880 ;; Hardware stack levels required when called:    1
  4881 ;; This function calls:
  4882 ;;		Nothing
  4883 ;; This function is called by:
  4884 ;;		_ser_puts
  4885 ;;		_output_putch
  4886 ;;		_measure_capacitance
  4887 ;;		_format_number
  4888 ;;		_format_xint32
  4889 ;;		_format_double
  4890 ;; This function uses a non-reentrant model
  4891 ;;
  4892                           
  4893                           	psect	text24
  4894  002608                     __ptext24:
  4895                           	opt stack 0
  4896  002608                     _ser_putch:
  4897                           	opt stack 28
  4898                           
  4899                           ;incstack = 0
  4900  002608  FFFF               	dw	65535
  4901                           
  4902                           ;ser_putch@c stored from wreg
  4903  00260A  6E03               	movwf	ser_putch@c,c
  4904  00260C                     l2237:
  4905  00260C  2878               	incf	_txiptr,w,c	;volatile
  4906  00260E  0B0F               	andlw	15
  4907  002610  1879               	xorwf	_txoptr,w,c	;volatile
  4908  002612  E0FC               	bz	l2237
  4909                           
  4910                           ;ser.c: 84: GIE = 0;
  4911  002614  9EF2               	bcf	intcon,7,c	;volatile
  4912                           
  4913                           ;ser.c: 85: txfifo[txiptr] = c;
  4914  002616  5078               	movf	_txiptr,w,c
  4915  002618  0FC7               	addlw	low _txfifo
  4916  00261A  6ED9               	movwf	fsr2l,c
  4917  00261C  6ADA               	clrf	fsr2h,c
  4918  00261E  C003  FFDF         	movff	ser_putch@c,indf2
  4919                           
  4920                           ;ser.c: 86: txiptr = (txiptr + 1) & ((unsigned char)16 - 1);
  4921  002622  2878               	incf	_txiptr,w,c	;volatile
  4922  002624  0B0F               	andlw	15
  4923  002626  6E78               	movwf	_txiptr,c	;volatile
  4924                           
  4925                           ;ser.c: 87: TXIE = 1;
  4926  002628  889D               	bsf	3997,4,c	;volatile
  4927                           
  4928                           ;ser.c: 88: GIE = 1;
  4929  00262A  8EF2               	bsf	intcon,7,c	;volatile
  4930  00262C  0012               	return		;funcret
  4931  00262E  FFFF               	dw	65535	; errata NOP
  4932  002630                     __end_of_ser_putch:
  4933                           	opt stack 0
  4934                           tosu	equ	0xFFF
  4935                           tosh	equ	0xFFE
  4936                           tosl	equ	0xFFD
  4937                           pclath	equ	0xFFA
  4938                           tblptru	equ	0xFF8
  4939                           tblptrh	equ	0xFF7
  4940                           tblptrl	equ	0xFF6
  4941                           tablat	equ	0xFF5
  4942                           intcon	equ	0xFF2
  4943                           intcon2	equ	0xFF1
  4944                           postinc0	equ	0xFEE
  4945                           wreg	equ	0xFE8
  4946                           indf2	equ	0xFDF
  4947                           fsr2h	equ	0xFDA
  4948                           fsr2l	equ	0xFD9
  4949                           status	equ	0xFD8
  4950                           
  4951 ;; *************** function _output_putch *****************
  4952 ;; Defined at:
  4953 ;;		line 48 in file "../../../src/LC-meter.c"
  4954 ;; Parameters:    Size  Location     Type
  4955 ;;  c               1    wreg     unsigned char 
  4956 ;; Auto vars:     Size  Location     Type
  4957 ;;  c               1    3[COMRAM] unsigned char 
  4958 ;; Return value:  Size  Location     Type
  4959 ;;		None               void
  4960 ;; Registers used:
  4961 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4962 ;; Tracked objects:
  4963 ;;		On entry : 0/0
  4964 ;;		On exit  : 0/0
  4965 ;;		Unchanged: 0/0
  4966 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4967 ;;      Params:         0       0       0       0       0       0       0
  4968 ;;      Locals:         1       0       0       0       0       0       0
  4969 ;;      Temps:          0       0       0       0       0       0       0
  4970 ;;      Totals:         1       0       0       0       0       0       0
  4971 ;;Total ram usage:        1 bytes
  4972 ;; Hardware stack levels used:    1
  4973 ;; Hardware stack levels required when called:    2
  4974 ;; This function calls:
  4975 ;;		_ser_putch
  4976 ;; This function is called by:
  4977 ;;		_measure_capacitance
  4978 ;;		_format_number
  4979 ;;		_format_xint32
  4980 ;;		_format_double
  4981 ;; This function uses a non-reentrant model
  4982 ;;
  4983                           
  4984                           	psect	text25
  4985  002654                     __ptext25:
  4986                           	opt stack 0
  4987  002654                     _output_putch:
  4988                           	opt stack 26
  4989                           
  4990                           ;incstack = 0
  4991  002654  FFFF               	dw	65535
  4992                           
  4993                           ;output_putch@c stored from wreg
  4994  002656  6E04               	movwf	output_putch@c,c
  4995                           
  4996                           ;LC-meter.c: 54: ser_putch(c);
  4997  002658  5004               	movf	output_putch@c,w,c
  4998  00265A  EC04  F013         	call	_ser_putch
  4999  00265E  0012               	return		;funcret
  5000  002660  FFFF               	dw	65535	; errata NOP
  5001  002662                     __end_of_output_putch:
  5002                           	opt stack 0
  5003                           tosu	equ	0xFFF
  5004                           tosh	equ	0xFFE
  5005                           tosl	equ	0xFFD
  5006                           pclath	equ	0xFFA
  5007                           tblptru	equ	0xFF8
  5008                           tblptrh	equ	0xFF7
  5009                           tblptrl	equ	0xFF6
  5010                           tablat	equ	0xFF5
  5011                           intcon	equ	0xFF2
  5012                           intcon2	equ	0xFF1
  5013                           postinc0	equ	0xFEE
  5014                           wreg	equ	0xFE8
  5015                           indf2	equ	0xFDF
  5016                           fsr2h	equ	0xFDA
  5017                           fsr2l	equ	0xFD9
  5018                           status	equ	0xFD8
  5019                           
  5020 ;; *************** function _log10 *****************
  5021 ;; Defined at:
  5022 ;;		line 39 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\log.c"
  5023 ;; Parameters:    Size  Location     Type
  5024 ;;  x               4   84[COMRAM] unsigned char 
  5025 ;; Auto vars:     Size  Location     Type
  5026 ;;		None
  5027 ;; Return value:  Size  Location     Type
  5028 ;;                  4   84[COMRAM] unsigned char 
  5029 ;; Registers used:
  5030 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5031 ;; Tracked objects:
  5032 ;;		On entry : 0/0
  5033 ;;		On exit  : 0/0
  5034 ;;		Unchanged: 0/0
  5035 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5036 ;;      Params:         4       0       0       0       0       0       0
  5037 ;;      Locals:         4       0       0       0       0       0       0
  5038 ;;      Temps:          0       0       0       0       0       0       0
  5039 ;;      Totals:         8       0       0       0       0       0       0
  5040 ;;Total ram usage:        8 bytes
  5041 ;; Hardware stack levels used:    1
  5042 ;; Hardware stack levels required when called:    5
  5043 ;; This function calls:
  5044 ;;		___flmul
  5045 ;;		_log
  5046 ;; This function is called by:
  5047 ;;		_format_double
  5048 ;; This function uses a non-reentrant model
  5049 ;;
  5050                           
  5051                           	psect	text26
  5052  00228E                     __ptext26:
  5053                           	opt stack 0
  5054  00228E                     _log10:
  5055                           	opt stack 23
  5056                           
  5057                           ;incstack = 0
  5058  00228E  FFFF               	dw	65535
  5059  002290  C055  F04F         	movff	log10@x,log@x
  5060  002294  C056  F050         	movff	log10@x+1,log@x+1
  5061  002298  C057  F051         	movff	log10@x+2,log@x+2
  5062  00229C  C058  F052         	movff	log10@x+3,log@x+3
  5063  0022A0  EC41  F00C         	call	_log	;wreg free
  5064  0022A4  C04F  F059         	movff	?_log,_log10$931
  5065  0022A8  C050  F05A         	movff	?_log+1,_log10$931+1
  5066  0022AC  C051  F05B         	movff	?_log+2,_log10$931+2
  5067  0022B0  C052  F05C         	movff	?_log+3,_log10$931+3
  5068  0022B4  C059  F01C         	movff	_log10$931,___flmul@f1
  5069  0022B8  C05A  F01D         	movff	_log10$931+1,___flmul@f1+1
  5070  0022BC  C05B  F01E         	movff	_log10$931+2,___flmul@f1+2
  5071  0022C0  C05C  F01F         	movff	_log10$931+3,___flmul@f1+3
  5072  0022C4  0ED9               	movlw	217
  5073  0022C6  6E20               	movwf	___flmul@f2,c
  5074  0022C8  0E5B               	movlw	91
  5075  0022CA  6E21               	movwf	___flmul@f2+1,c
  5076  0022CC  0EDE               	movlw	222
  5077  0022CE  6E22               	movwf	___flmul@f2+2,c
  5078  0022D0  0E3E               	movlw	62
  5079  0022D2  6E23               	movwf	___flmul@f2+3,c
  5080  0022D4  ECD6  F009         	call	___flmul	;wreg free
  5081  0022D8  C01C  F055         	movff	?___flmul,?_log10
  5082  0022DC  C01D  F056         	movff	?___flmul+1,?_log10+1
  5083  0022E0  C01E  F057         	movff	?___flmul+2,?_log10+2
  5084  0022E4  C01F  F058         	movff	?___flmul+3,?_log10+3
  5085  0022E8  0012               	return		;funcret
  5086  0022EA  FFFF               	dw	65535	; errata NOP
  5087  0022EC                     __end_of_log10:
  5088                           	opt stack 0
  5089                           tosu	equ	0xFFF
  5090                           tosh	equ	0xFFE
  5091                           tosl	equ	0xFFD
  5092                           pclath	equ	0xFFA
  5093                           tblptru	equ	0xFF8
  5094                           tblptrh	equ	0xFF7
  5095                           tblptrl	equ	0xFF6
  5096                           tablat	equ	0xFF5
  5097                           intcon	equ	0xFF2
  5098                           intcon2	equ	0xFF1
  5099                           postinc0	equ	0xFEE
  5100                           wreg	equ	0xFE8
  5101                           indf2	equ	0xFDF
  5102                           fsr2h	equ	0xFDA
  5103                           fsr2l	equ	0xFD9
  5104                           status	equ	0xFD8
  5105                           
  5106 ;; *************** function _log *****************
  5107 ;; Defined at:
  5108 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\log.c"
  5109 ;; Parameters:    Size  Location     Type
  5110 ;;  x               4   78[COMRAM] unsigned char 
  5111 ;; Auto vars:     Size  Location     Type
  5112 ;;  exponent        2   82[COMRAM] int 
  5113 ;; Return value:  Size  Location     Type
  5114 ;;                  4   78[COMRAM] int 
  5115 ;; Registers used:
  5116 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5117 ;; Tracked objects:
  5118 ;;		On entry : 0/0
  5119 ;;		On exit  : 0/0
  5120 ;;		Unchanged: 0/0
  5121 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5122 ;;      Params:         4       0       0       0       0       0       0
  5123 ;;      Locals:         2       0       0       0       0       0       0
  5124 ;;      Temps:          0       0       0       0       0       0       0
  5125 ;;      Totals:         6       0       0       0       0       0       0
  5126 ;;Total ram usage:        6 bytes
  5127 ;; Hardware stack levels used:    1
  5128 ;; Hardware stack levels required when called:    4
  5129 ;; This function calls:
  5130 ;;		___awtofl
  5131 ;;		___fladd
  5132 ;;		___flmul
  5133 ;;		_eval_poly
  5134 ;;		_frexp
  5135 ;; This function is called by:
  5136 ;;		_log10
  5137 ;;		_pow
  5138 ;; This function uses a non-reentrant model
  5139 ;;
  5140                           
  5141                           	psect	text27
  5142  001882                     __ptext27:
  5143                           	opt stack 0
  5144  001882                     _log:
  5145                           	opt stack 23
  5146                           
  5147                           ;incstack = 0
  5148  001882  FFFF               	dw	65535
  5149  001884  BE52               	btfsc	log@x+3,7,c
  5150  001886  D005               	goto	l2379
  5151  001888  504F               	movf	log@x,w,c
  5152  00188A  1050               	iorwf	log@x+1,w,c
  5153  00188C  1051               	iorwf	log@x+2,w,c
  5154  00188E  1052               	iorwf	log@x+3,w,c
  5155  001890  E106               	bnz	l2381
  5156  001892                     l2379:
  5157  001892  FFFF               	dw	65535	; assembler added errata NOP
  5158  001894  6A4F               	clrf	?_log,c
  5159  001896  6A50               	clrf	?_log+1,c
  5160  001898  6A51               	clrf	?_log+2,c
  5161  00189A  6A52               	clrf	?_log+3,c
  5162  00189C  D080               	goto	l879
  5163  00189E                     l2381:
  5164  00189E  6A20               	clrf	___flmul@f2,c
  5165  0018A0  6A21               	clrf	___flmul@f2+1,c
  5166  0018A2  6A22               	clrf	___flmul@f2+2,c
  5167  0018A4  0E40               	movlw	64
  5168  0018A6  6E23               	movwf	___flmul@f2+3,c
  5169  0018A8  0E53               	movlw	low log@exponent
  5170  0018AA  6E07               	movwf	frexp@eptr,c
  5171  0018AC  C04F  F003         	movff	log@x,frexp@value
  5172  0018B0  C050  F004         	movff	log@x+1,frexp@value+1
  5173  0018B4  C051  F005         	movff	log@x+2,frexp@value+2
  5174  0018B8  C052  F006         	movff	log@x+3,frexp@value+3
  5175  0018BC  ECA2  F010         	call	_frexp	;wreg free
  5176  0018C0  C003  F01C         	movff	?_frexp,___flmul@f1
  5177  0018C4  C004  F01D         	movff	?_frexp+1,___flmul@f1+1
  5178  0018C8  C005  F01E         	movff	?_frexp+2,___flmul@f1+2
  5179  0018CC  C006  F01F         	movff	?_frexp+3,___flmul@f1+3
  5180  0018D0  ECD6  F009         	call	___flmul	;wreg free
  5181  0018D4  C01C  F037         	movff	?___flmul,___fladd@f1
  5182  0018D8  C01D  F038         	movff	?___flmul+1,___fladd@f1+1
  5183  0018DC  C01E  F039         	movff	?___flmul+2,___fladd@f1+2
  5184  0018E0  C01F  F03A         	movff	?___flmul+3,___fladd@f1+3
  5185  0018E4  0E00               	movlw	0
  5186  0018E6  6E3B               	movwf	___fladd@f2,c
  5187  0018E8  6E3C               	movwf	___fladd@f2+1,c
  5188  0018EA  0E80               	movlw	128
  5189  0018EC  6E3D               	movwf	___fladd@f2+2,c
  5190  0018EE  0EBF               	movlw	191
  5191  0018F0  6E3E               	movwf	___fladd@f2+3,c
  5192  0018F2  EC82  F00B         	call	___fladd	;wreg free
  5193  0018F6  C037  F04F         	movff	?___fladd,log@x
  5194  0018FA  C038  F050         	movff	?___fladd+1,log@x+1
  5195  0018FE  C039  F051         	movff	?___fladd+2,log@x+2
  5196  001902  C03A  F052         	movff	?___fladd+3,log@x+3
  5197  001906  0653               	decf	log@exponent,f,c
  5198  001908  A0D8               	btfss	status,0,c
  5199  00190A  0654               	decf	log@exponent+1,f,c
  5200  00190C  C04F  F043         	movff	log@x,eval_poly@x
  5201  001910  C050  F044         	movff	log@x+1,eval_poly@x+1
  5202  001914  C051  F045         	movff	log@x+2,eval_poly@x+2
  5203  001918  C052  F046         	movff	log@x+3,eval_poly@x+3
  5204  00191C  0E29               	movlw	low log@coeff
  5205  00191E  6E47               	movwf	eval_poly@d,c
  5206  001920  6A49               	clrf	eval_poly@n+1,c
  5207  001922  0E08               	movlw	8
  5208  001924  6E48               	movwf	eval_poly@n,c
  5209  001926  ECA2  F00E         	call	_eval_poly	;wreg free
  5210  00192A  C043  F04F         	movff	?_eval_poly,log@x
  5211  00192E  C044  F050         	movff	?_eval_poly+1,log@x+1
  5212  001932  C045  F051         	movff	?_eval_poly+2,log@x+2
  5213  001936  C046  F052         	movff	?_eval_poly+3,log@x+3
  5214  00193A  0E18               	movlw	24
  5215  00193C  6E20               	movwf	___flmul@f2,c
  5216  00193E  0E72               	movlw	114
  5217  001940  6E21               	movwf	___flmul@f2+1,c
  5218  001942  0E31               	movlw	49
  5219  001944  6E22               	movwf	___flmul@f2+2,c
  5220  001946  0E3F               	movlw	63
  5221  001948  6E23               	movwf	___flmul@f2+3,c
  5222  00194A  C053  F00D         	movff	log@exponent,___awtofl@c
  5223  00194E  C054  F00E         	movff	log@exponent+1,___awtofl@c+1
  5224  001952  EC85  F012         	call	___awtofl	;wreg free
  5225  001956  C00D  F01C         	movff	?___awtofl,___flmul@f1
  5226  00195A  C00E  F01D         	movff	?___awtofl+1,___flmul@f1+1
  5227  00195E  C00F  F01E         	movff	?___awtofl+2,___flmul@f1+2
  5228  001962  C010  F01F         	movff	?___awtofl+3,___flmul@f1+3
  5229  001966  ECD6  F009         	call	___flmul	;wreg free
  5230  00196A  C01C  F037         	movff	?___flmul,___fladd@f1
  5231  00196E  C01D  F038         	movff	?___flmul+1,___fladd@f1+1
  5232  001972  C01E  F039         	movff	?___flmul+2,___fladd@f1+2
  5233  001976  C01F  F03A         	movff	?___flmul+3,___fladd@f1+3
  5234  00197A  C04F  F03B         	movff	log@x,___fladd@f2
  5235  00197E  C050  F03C         	movff	log@x+1,___fladd@f2+1
  5236  001982  C051  F03D         	movff	log@x+2,___fladd@f2+2
  5237  001986  C052  F03E         	movff	log@x+3,___fladd@f2+3
  5238  00198A  EC82  F00B         	call	___fladd	;wreg free
  5239  00198E  C037  F04F         	movff	?___fladd,?_log
  5240  001992  C038  F050         	movff	?___fladd+1,?_log+1
  5241  001996  C039  F051         	movff	?___fladd+2,?_log+2
  5242  00199A  C03A  F052         	movff	?___fladd+3,?_log+3
  5243  00199E                     l879:
  5244  00199E  FFFF               	dw	65535	; assembler added errata NOP
  5245  0019A0  0012               	return		;funcret
  5246  0019A2  FFFF               	dw	65535	; errata NOP
  5247  0019A4                     __end_of_log:
  5248                           	opt stack 0
  5249                           tosu	equ	0xFFF
  5250                           tosh	equ	0xFFE
  5251                           tosl	equ	0xFFD
  5252                           pclath	equ	0xFFA
  5253                           tblptru	equ	0xFF8
  5254                           tblptrh	equ	0xFF7
  5255                           tblptrl	equ	0xFF6
  5256                           tablat	equ	0xFF5
  5257                           intcon	equ	0xFF2
  5258                           intcon2	equ	0xFF1
  5259                           postinc0	equ	0xFEE
  5260                           wreg	equ	0xFE8
  5261                           indf2	equ	0xFDF
  5262                           fsr2h	equ	0xFDA
  5263                           fsr2l	equ	0xFD9
  5264                           status	equ	0xFD8
  5265                           
  5266 ;; *************** function _frexp *****************
  5267 ;; Defined at:
  5268 ;;		line 254 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\frexp.c"
  5269 ;; Parameters:    Size  Location     Type
  5270 ;;  value           4    2[COMRAM] int 
  5271 ;;  eptr            1    6[COMRAM] PTR int 
  5272 ;;		 -> log@exponent(2), floor@expon(2), 
  5273 ;; Auto vars:     Size  Location     Type
  5274 ;;		None
  5275 ;; Return value:  Size  Location     Type
  5276 ;;                  4    2[COMRAM] PTR int 
  5277 ;; Registers used:
  5278 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5279 ;; Tracked objects:
  5280 ;;		On entry : 0/0
  5281 ;;		On exit  : 0/0
  5282 ;;		Unchanged: 0/0
  5283 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5284 ;;      Params:         5       0       0       0       0       0       0
  5285 ;;      Locals:         0       0       0       0       0       0       0
  5286 ;;      Temps:          2       0       0       0       0       0       0
  5287 ;;      Totals:         7       0       0       0       0       0       0
  5288 ;;Total ram usage:        7 bytes
  5289 ;; Hardware stack levels used:    1
  5290 ;; Hardware stack levels required when called:    1
  5291 ;; This function calls:
  5292 ;;		Nothing
  5293 ;; This function is called by:
  5294 ;;		_floor
  5295 ;;		_log
  5296 ;; This function uses a non-reentrant model
  5297 ;;
  5298                           
  5299                           	psect	text28
  5300  002144                     __ptext28:
  5301                           	opt stack 0
  5302  002144                     _frexp:
  5303                           	opt stack 25
  5304                           
  5305                           ;incstack = 0
  5306  002144  FFFF               	dw	65535
  5307  002146  5003               	movf	frexp@value,w,c
  5308  002148  1004               	iorwf	frexp@value+1,w,c
  5309  00214A  1005               	iorwf	frexp@value+2,w,c
  5310  00214C  1006               	iorwf	frexp@value+3,w,c
  5311  00214E  E10B               	bnz	l2185
  5312  002150  5007               	movf	frexp@eptr,w,c
  5313  002152  6ED9               	movwf	fsr2l,c
  5314  002154  6ADA               	clrf	fsr2h,c
  5315  002156  0E00               	movlw	0
  5316  002158  6ADE               	clrf	postinc2,c
  5317  00215A  6ADD               	clrf	postdec2,c
  5318  00215C  6A03               	clrf	?_frexp,c
  5319  00215E  6A04               	clrf	?_frexp+1,c
  5320  002160  6A05               	clrf	?_frexp+2,c
  5321  002162  6A06               	clrf	?_frexp+3,c
  5322  002164  D02B               	goto	l718
  5323  002166                     l2185:
  5324  002166  5006               	movf	frexp@value+3,w,c
  5325  002168  0B7F               	andlw	127
  5326  00216A  6E08               	movwf	??_frexp& (0+255),c
  5327  00216C  6A09               	clrf	(??_frexp+1)& (0+255),c
  5328  00216E  90D8               	bcf	status,0,c
  5329  002170  3608               	rlcf	??_frexp,f,c
  5330  002172  3609               	rlcf	??_frexp+1,f,c
  5331  002174  5007               	movf	frexp@eptr,w,c
  5332  002176  6ED9               	movwf	fsr2l,c
  5333  002178  6ADA               	clrf	fsr2h,c
  5334  00217A  C008  FFDE         	movff	??_frexp,postinc2
  5335  00217E  C009  FFDD         	movff	??_frexp+1,postdec2
  5336  002182  5007               	movf	frexp@eptr,w,c
  5337  002184  6ED9               	movwf	fsr2l,c
  5338  002186  6ADA               	clrf	fsr2h,c
  5339  002188  0E01               	movlw	1
  5340  00218A  AE05               	btfss	frexp@value+2,7,c
  5341  00218C  0E00               	movlw	0
  5342  00218E  12DE               	iorwf	postinc2,f,c
  5343  002190  0E00               	movlw	0
  5344  002192  12DD               	iorwf	postdec2,f,c
  5345  002194  5007               	movf	frexp@eptr,w,c
  5346  002196  6ED9               	movwf	fsr2l,c
  5347  002198  6ADA               	clrf	fsr2h,c
  5348  00219A  0E82               	movlw	130
  5349  00219C  26DE               	addwf	postinc2,f,c
  5350  00219E  0EFF               	movlw	255
  5351  0021A0  22DD               	addwfc	postdec2,f,c
  5352  0021A2  5006               	movf	frexp@value+3,w,c
  5353  0021A4  0B80               	andlw	-128
  5354  0021A6  093F               	iorlw	63
  5355  0021A8  6E06               	movwf	frexp@value+3,c
  5356  0021AA  9E05               	bcf	frexp@value+2,7,c
  5357  0021AC  C003  F003         	movff	frexp@value,?_frexp
  5358  0021B0  C004  F004         	movff	frexp@value+1,?_frexp+1
  5359  0021B4  C005  F005         	movff	frexp@value+2,?_frexp+2
  5360  0021B8  C006  F006         	movff	frexp@value+3,?_frexp+3
  5361  0021BC                     l718:
  5362  0021BC  FFFF               	dw	65535	; assembler added errata NOP
  5363  0021BE  0012               	return		;funcret
  5364  0021C0  FFFF               	dw	65535	; errata NOP
  5365  0021C2                     __end_of_frexp:
  5366                           	opt stack 0
  5367                           tosu	equ	0xFFF
  5368                           tosh	equ	0xFFE
  5369                           tosl	equ	0xFFD
  5370                           pclath	equ	0xFFA
  5371                           tblptru	equ	0xFF8
  5372                           tblptrh	equ	0xFF7
  5373                           tblptrl	equ	0xFF6
  5374                           tablat	equ	0xFF5
  5375                           intcon	equ	0xFF2
  5376                           intcon2	equ	0xFF1
  5377                           postinc0	equ	0xFEE
  5378                           wreg	equ	0xFE8
  5379                           indf2	equ	0xFDF
  5380                           postinc2	equ	0xFDE
  5381                           postdec2	equ	0xFDD
  5382                           fsr2h	equ	0xFDA
  5383                           fsr2l	equ	0xFD9
  5384                           status	equ	0xFD8
  5385                           
  5386 ;; *************** function _eval_poly *****************
  5387 ;; Defined at:
  5388 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\evalpoly.c"
  5389 ;; Parameters:    Size  Location     Type
  5390 ;;  x               4   66[COMRAM] PTR int 
  5391 ;;  d               1   70[COMRAM] PTR const 
  5392 ;;		 -> exp@coeff(40), log@coeff(36), 
  5393 ;;  n               2   71[COMRAM] int 
  5394 ;; Auto vars:     Size  Location     Type
  5395 ;;  res             4   74[COMRAM] int 
  5396 ;; Return value:  Size  Location     Type
  5397 ;;                  4   66[COMRAM] int 
  5398 ;; Registers used:
  5399 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5400 ;; Tracked objects:
  5401 ;;		On entry : 0/0
  5402 ;;		On exit  : 0/0
  5403 ;;		Unchanged: 0/0
  5404 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5405 ;;      Params:         7       0       0       0       0       0       0
  5406 ;;      Locals:         4       0       0       0       0       0       0
  5407 ;;      Temps:          1       0       0       0       0       0       0
  5408 ;;      Totals:        12       0       0       0       0       0       0
  5409 ;;Total ram usage:       12 bytes
  5410 ;; Hardware stack levels used:    1
  5411 ;; Hardware stack levels required when called:    3
  5412 ;; This function calls:
  5413 ;;		___fladd
  5414 ;;		___flmul
  5415 ;; This function is called by:
  5416 ;;		_log
  5417 ;;		_exp
  5418 ;; This function uses a non-reentrant model
  5419 ;;
  5420                           
  5421                           	psect	text29
  5422  001D44                     __ptext29:
  5423                           	opt stack 0
  5424  001D44                     _eval_poly:
  5425                           	opt stack 23
  5426                           
  5427                           ;incstack = 0
  5428  001D44  FFFF               	dw	65535
  5429  001D46  5048               	movf	eval_poly@n,w,c
  5430  001D48  0D04               	mullw	4
  5431  001D4A  5047               	movf	eval_poly@d,w,c
  5432  001D4C  24F3               	addwf	prodl,w,c
  5433  001D4E  6E4A               	movwf	??_eval_poly& (0+255),c
  5434  001D50  C04A  FFF6         	movff	??_eval_poly,tblptrl
  5435  001D54                     	if	1	;There is more than 1 active tblptr byte
  5436  001D54  0E06               	movlw	high __smallconst
  5437  001D56  6EF7               	movwf	tblptrh,c
  5438  001D58                     	endif
  5439  001D58                     	if	0	;tblptru may be non-zero
  5440  001D58                     	endif
  5441  001D58                     	if	0	;tblptru may be non-zero
  5442  001D58                     	endif
  5443  001D58  0009               	tblrd		*+
  5444  001D5A  FFFF               	dw	65535	; errata NOP
  5445  001D5C  CFF5 F04B          	movff	tablat,eval_poly@res
  5446  001D60  0009               	tblrd		*+
  5447  001D62  FFFF               	dw	65535	; errata NOP
  5448  001D64  CFF5 F04C          	movff	tablat,eval_poly@res+1
  5449  001D68  0009               	tblrd		*+
  5450  001D6A  FFFF               	dw	65535	; errata NOP
  5451  001D6C  CFF5 F04D          	movff	tablat,eval_poly@res+2
  5452  001D70  000A               	tblrd		*-
  5453  001D72  FFFF               	dw	65535	; errata NOP
  5454  001D74  CFF5 F04E          	movff	tablat,eval_poly@res+3
  5455  001D78  D040               	goto	l2363
  5456  001D7A                     l2361:
  5457  001D7A  C04B  F020         	movff	eval_poly@res,___flmul@f2
  5458  001D7E  C04C  F021         	movff	eval_poly@res+1,___flmul@f2+1
  5459  001D82  C04D  F022         	movff	eval_poly@res+2,___flmul@f2+2
  5460  001D86  C04E  F023         	movff	eval_poly@res+3,___flmul@f2+3
  5461  001D8A  C043  F01C         	movff	eval_poly@x,___flmul@f1
  5462  001D8E  C044  F01D         	movff	eval_poly@x+1,___flmul@f1+1
  5463  001D92  C045  F01E         	movff	eval_poly@x+2,___flmul@f1+2
  5464  001D96  C046  F01F         	movff	eval_poly@x+3,___flmul@f1+3
  5465  001D9A  ECD6  F009         	call	___flmul	;wreg free
  5466  001D9E  C01C  F037         	movff	?___flmul,___fladd@f1
  5467  001DA2  C01D  F038         	movff	?___flmul+1,___fladd@f1+1
  5468  001DA6  C01E  F039         	movff	?___flmul+2,___fladd@f1+2
  5469  001DAA  C01F  F03A         	movff	?___flmul+3,___fladd@f1+3
  5470  001DAE  0648               	decf	eval_poly@n,f,c
  5471  001DB0  A0D8               	btfss	status,0,c
  5472  001DB2  0649               	decf	eval_poly@n+1,f,c
  5473  001DB4  5048               	movf	eval_poly@n,w,c
  5474  001DB6  0D04               	mullw	4
  5475  001DB8  5047               	movf	eval_poly@d,w,c
  5476  001DBA  24F3               	addwf	prodl,w,c
  5477  001DBC  6E4A               	movwf	??_eval_poly& (0+255),c
  5478  001DBE  C04A  FFF6         	movff	??_eval_poly,tblptrl
  5479  001DC2                     	if	1	;There is more than 1 active tblptr byte
  5480  001DC2  0E06               	movlw	high __smallconst
  5481  001DC4  6EF7               	movwf	tblptrh,c
  5482  001DC6                     	endif
  5483  001DC6                     	if	0	;tblptru may be non-zero
  5484  001DC6                     	endif
  5485  001DC6                     	if	0	;tblptru may be non-zero
  5486  001DC6                     	endif
  5487  001DC6  0009               	tblrd		*+
  5488  001DC8  FFFF               	dw	65535	; errata NOP
  5489  001DCA  CFF5 F03B          	movff	tablat,___fladd@f2
  5490  001DCE  0009               	tblrd		*+
  5491  001DD0  FFFF               	dw	65535	; errata NOP
  5492  001DD2  CFF5 F03C          	movff	tablat,___fladd@f2+1
  5493  001DD6  0009               	tblrd		*+
  5494  001DD8  FFFF               	dw	65535	; errata NOP
  5495  001DDA  CFF5 F03D          	movff	tablat,___fladd@f2+2
  5496  001DDE  000A               	tblrd		*-
  5497  001DE0  FFFF               	dw	65535	; errata NOP
  5498  001DE2  CFF5 F03E          	movff	tablat,___fladd@f2+3
  5499  001DE6  EC82  F00B         	call	___fladd	;wreg free
  5500  001DEA  C037  F04B         	movff	?___fladd,eval_poly@res
  5501  001DEE  C038  F04C         	movff	?___fladd+1,eval_poly@res+1
  5502  001DF2  C039  F04D         	movff	?___fladd+2,eval_poly@res+2
  5503  001DF6  C03A  F04E         	movff	?___fladd+3,eval_poly@res+3
  5504  001DFA                     l2363:
  5505  001DFA  FFFF               	dw	65535	; assembler added errata NOP
  5506  001DFC  5048               	movf	eval_poly@n,w,c
  5507  001DFE  1049               	iorwf	eval_poly@n+1,w,c
  5508  001E00  E1BC               	bnz	l2361
  5509  001E02  C04B  F043         	movff	eval_poly@res,?_eval_poly
  5510  001E06  C04C  F044         	movff	eval_poly@res+1,?_eval_poly+1
  5511  001E0A  C04D  F045         	movff	eval_poly@res+2,?_eval_poly+2
  5512  001E0E  C04E  F046         	movff	eval_poly@res+3,?_eval_poly+3
  5513  001E12  0012               	return		;funcret
  5514  001E14  FFFF               	dw	65535	; errata NOP
  5515  001E16                     __end_of_eval_poly:
  5516                           	opt stack 0
  5517                           tosu	equ	0xFFF
  5518                           tosh	equ	0xFFE
  5519                           tosl	equ	0xFFD
  5520                           pclath	equ	0xFFA
  5521                           tblptru	equ	0xFF8
  5522                           tblptrh	equ	0xFF7
  5523                           tblptrl	equ	0xFF6
  5524                           tablat	equ	0xFF5
  5525                           prodl	equ	0xFF3
  5526                           intcon	equ	0xFF2
  5527                           intcon2	equ	0xFF1
  5528                           postinc0	equ	0xFEE
  5529                           wreg	equ	0xFE8
  5530                           indf2	equ	0xFDF
  5531                           postinc2	equ	0xFDE
  5532                           postdec2	equ	0xFDD
  5533                           fsr2h	equ	0xFDA
  5534                           fsr2l	equ	0xFD9
  5535                           status	equ	0xFD8
  5536                           
  5537 ;; *************** function ___flmul *****************
  5538 ;; Defined at:
  5539 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\flmul.c"
  5540 ;; Parameters:    Size  Location     Type
  5541 ;;  f1              4   27[COMRAM] int 
  5542 ;;  f2              4   31[COMRAM] int 
  5543 ;; Auto vars:     Size  Location     Type
  5544 ;;  f3_as_produc    4   50[COMRAM] unsigned long 
  5545 ;;  sign            1   49[COMRAM] unsigned char 
  5546 ;;  exp             1   48[COMRAM] unsigned char 
  5547 ;;  cntr            1    0        unsigned char 
  5548 ;; Return value:  Size  Location     Type
  5549 ;;                  4   27[COMRAM] unsigned char 
  5550 ;; Registers used:
  5551 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5552 ;; Tracked objects:
  5553 ;;		On entry : 0/0
  5554 ;;		On exit  : 0/0
  5555 ;;		Unchanged: 0/0
  5556 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5557 ;;      Params:         8       0       0       0       0       0       0
  5558 ;;      Locals:         6       0       0       0       0       0       0
  5559 ;;      Temps:         13       0       0       0       0       0       0
  5560 ;;      Totals:        27       0       0       0       0       0       0
  5561 ;;Total ram usage:       27 bytes
  5562 ;; Hardware stack levels used:    1
  5563 ;; Hardware stack levels required when called:    2
  5564 ;; This function calls:
  5565 ;;		___flpack
  5566 ;; This function is called by:
  5567 ;;		_format_double
  5568 ;;		_measure_capacitance
  5569 ;;		_measure_inductance
  5570 ;;		_log
  5571 ;;		_log10
  5572 ;;		_pow
  5573 ;;		_eval_poly
  5574 ;;		_exp
  5575 ;; This function uses a non-reentrant model
  5576 ;;
  5577                           
  5578                           	psect	text30
  5579  0013AC                     __ptext30:
  5580                           	opt stack 0
  5581  0013AC                     ___flmul:
  5582                           	opt stack 27
  5583                           
  5584                           ;incstack = 0
  5585  0013AC  FFFF               	dw	65535
  5586  0013AE  341E               	rlcf	___flmul@f1+2,w,c
  5587  0013B0  341F               	rlcf	___flmul@f1+3,w,c
  5588  0013B2  6E31               	movwf	___flmul@exp,c
  5589  0013B4  5031               	movf	___flmul@exp,w,c
  5590  0013B6  E005               	bz	l2129
  5591  0013B8  3422               	rlcf	___flmul@f2+2,w,c
  5592  0013BA  3423               	rlcf	___flmul@f2+3,w,c
  5593  0013BC  6E32               	movwf	___flmul@sign,c
  5594  0013BE  5032               	movf	___flmul@sign,w,c
  5595  0013C0  E105               	bnz	l2131
  5596  0013C2                     l2129:
  5597  0013C2  6A1C               	clrf	?___flmul,c
  5598  0013C4  6A1D               	clrf	?___flmul+1,c
  5599  0013C6  6A1E               	clrf	?___flmul+2,c
  5600  0013C8  6A1F               	clrf	?___flmul+3,c
  5601  0013CA  D0D0               	goto	l658
  5602  0013CC                     l2131:
  5603  0013CC  5032               	movf	___flmul@sign,w,c
  5604  0013CE  0F7B               	addlw	123
  5605  0013D0  2631               	addwf	___flmul@exp,f,c
  5606  0013D2  C01F  F032         	movff	___flmul@f1+3,___flmul@sign
  5607  0013D6  5023               	movf	___flmul@f2+3,w,c
  5608  0013D8  1A32               	xorwf	___flmul@sign,f,c
  5609  0013DA  0E80               	movlw	128
  5610  0013DC  1632               	andwf	___flmul@sign,f,c
  5611  0013DE  8E1E               	bsf	___flmul@f1+2,7,c
  5612  0013E0  8E22               	bsf	___flmul@f2+2,7,c
  5613  0013E2  6A23               	clrf	___flmul@f2+3,c
  5614  0013E4  6A1F               	clrf	___flmul@f1+3,c
  5615  0013E6  501C               	movf	___flmul@f1,w,c
  5616  0013E8  0220               	mulwf	___flmul@f2,c
  5617  0013EA  CFF4 FFF3          	movff	prodh,prodl
  5618  0013EE  6AF4               	clrf	prodh,c
  5619  0013F0  CFF3 F033          	movff	prodl,___flmul@f3_as_product
  5620  0013F4  CFF4 F034          	movff	prodh,___flmul@f3_as_product+1
  5621  0013F8  6A35               	clrf	___flmul@f3_as_product+2,c
  5622  0013FA  6A36               	clrf	___flmul@f3_as_product+3,c
  5623  0013FC  501C               	movf	___flmul@f1,w,c
  5624  0013FE  0221               	mulwf	___flmul@f2+1,c
  5625  001400  CFF3 F024          	movff	prodl,??___flmul
  5626  001404  CFF4 F025          	movff	prodh,??___flmul+1
  5627  001408  6A26               	clrf	(??___flmul+2)& (0+255),c
  5628  00140A  501D               	movf	___flmul@f1+1,w,c
  5629  00140C  0220               	mulwf	___flmul@f2,c
  5630  00140E  50F3               	movf	prodl,w,c
  5631  001410  2424               	addwf	??___flmul,w,c
  5632  001412  6E27               	movwf	(??___flmul+3)& (0+255),c
  5633  001414  50F4               	movf	prodh,w,c
  5634  001416  2025               	addwfc	??___flmul+1,w,c
  5635  001418  6E28               	movwf	(??___flmul+4)& (0+255),c
  5636  00141A  0E00               	movlw	0
  5637  00141C  2026               	addwfc	??___flmul+2,w,c
  5638  00141E  6E29               	movwf	(??___flmul+5)& (0+255),c
  5639  001420  5027               	movf	??___flmul+3,w,c
  5640  001422  6E2A               	movwf	(??___flmul+6)& (0+255),c
  5641  001424  5028               	movf	??___flmul+4,w,c
  5642  001426  6E2B               	movwf	(??___flmul+7)& (0+255),c
  5643  001428  5029               	movf	??___flmul+5,w,c
  5644  00142A  6E2C               	movwf	(??___flmul+8)& (0+255),c
  5645  00142C  6A2D               	clrf	(??___flmul+9)& (0+255),c
  5646  00142E  502A               	movf	??___flmul+6,w,c
  5647  001430  2633               	addwf	___flmul@f3_as_product,f,c
  5648  001432  502B               	movf	??___flmul+7,w,c
  5649  001434  2234               	addwfc	___flmul@f3_as_product+1,f,c
  5650  001436  502C               	movf	??___flmul+8,w,c
  5651  001438  2235               	addwfc	___flmul@f3_as_product+2,f,c
  5652  00143A  502D               	movf	??___flmul+9,w,c
  5653  00143C  2236               	addwfc	___flmul@f3_as_product+3,f,c
  5654  00143E  5034               	movf	___flmul@f3_as_product+1,w,c
  5655  001440  6E33               	movwf	___flmul@f3_as_product,c
  5656  001442  5035               	movf	___flmul@f3_as_product+2,w,c
  5657  001444  6E34               	movwf	___flmul@f3_as_product+1,c
  5658  001446  5036               	movf	___flmul@f3_as_product+3,w,c
  5659  001448  6E35               	movwf	___flmul@f3_as_product+2,c
  5660  00144A  6A36               	clrf	___flmul@f3_as_product+3,c
  5661  00144C  501C               	movf	___flmul@f1,w,c
  5662  00144E  0222               	mulwf	___flmul@f2+2,c
  5663  001450  CFF3 F024          	movff	prodl,??___flmul
  5664  001454  CFF4 F025          	movff	prodh,??___flmul+1
  5665  001458  6A26               	clrf	(??___flmul+2)& (0+255),c
  5666  00145A  501D               	movf	___flmul@f1+1,w,c
  5667  00145C  0221               	mulwf	___flmul@f2+1,c
  5668  00145E  50F3               	movf	prodl,w,c
  5669  001460  2424               	addwf	??___flmul,w,c
  5670  001462  6E27               	movwf	(??___flmul+3)& (0+255),c
  5671  001464  50F4               	movf	prodh,w,c
  5672  001466  2025               	addwfc	??___flmul+1,w,c
  5673  001468  6E28               	movwf	(??___flmul+4)& (0+255),c
  5674  00146A  0E00               	movlw	0
  5675  00146C  2026               	addwfc	??___flmul+2,w,c
  5676  00146E  6E29               	movwf	(??___flmul+5)& (0+255),c
  5677  001470  501E               	movf	___flmul@f1+2,w,c
  5678  001472  0220               	mulwf	___flmul@f2,c
  5679  001474  50F3               	movf	prodl,w,c
  5680  001476  2427               	addwf	??___flmul+3,w,c
  5681  001478  6E2A               	movwf	(??___flmul+6)& (0+255),c
  5682  00147A  50F4               	movf	prodh,w,c
  5683  00147C  2028               	addwfc	??___flmul+4,w,c
  5684  00147E  6E2B               	movwf	(??___flmul+7)& (0+255),c
  5685  001480  0E00               	movlw	0
  5686  001482  2029               	addwfc	??___flmul+5,w,c
  5687  001484  6E2C               	movwf	(??___flmul+8)& (0+255),c
  5688  001486  502A               	movf	??___flmul+6,w,c
  5689  001488  6E2D               	movwf	(??___flmul+9)& (0+255),c
  5690  00148A  502B               	movf	??___flmul+7,w,c
  5691  00148C  6E2E               	movwf	(??___flmul+10)& (0+255),c
  5692  00148E  502C               	movf	??___flmul+8,w,c
  5693  001490  6E2F               	movwf	(??___flmul+11)& (0+255),c
  5694  001492  6A30               	clrf	(??___flmul+12)& (0+255),c
  5695  001494  502D               	movf	??___flmul+9,w,c
  5696  001496  2633               	addwf	___flmul@f3_as_product,f,c
  5697  001498  502E               	movf	??___flmul+10,w,c
  5698  00149A  2234               	addwfc	___flmul@f3_as_product+1,f,c
  5699  00149C  502F               	movf	??___flmul+11,w,c
  5700  00149E  2235               	addwfc	___flmul@f3_as_product+2,f,c
  5701  0014A0  5030               	movf	??___flmul+12,w,c
  5702  0014A2  2236               	addwfc	___flmul@f3_as_product+3,f,c
  5703  0014A4  501E               	movf	___flmul@f1+2,w,c
  5704  0014A6  0221               	mulwf	___flmul@f2+1,c
  5705  0014A8  CFF3 F024          	movff	prodl,??___flmul
  5706  0014AC  CFF4 F025          	movff	prodh,??___flmul+1
  5707  0014B0  6A26               	clrf	(??___flmul+2)& (0+255),c
  5708  0014B2  0E33               	movlw	___flmul@f3_as_product& (0+255)
  5709  0014B4  6E27               	movwf	(??___flmul+3)& (0+255),c
  5710  0014B6  6A28               	clrf	(??___flmul+4)& (0+255),c
  5711  0014B8  2827               	incf	??___flmul+3,w,c
  5712  0014BA  6ED9               	movwf	fsr2l,c
  5713  0014BC  0E00               	movlw	0
  5714  0014BE  2028               	addwfc	??___flmul+4,w,c
  5715  0014C0  6EDA               	movwf	fsr2h,c
  5716  0014C2  5024               	movf	??___flmul,w,c
  5717  0014C4  26DE               	addwf	postinc2,f,c
  5718  0014C6  5025               	movf	??___flmul+1,w,c
  5719  0014C8  22DE               	addwfc	postinc2,f,c
  5720  0014CA  5026               	movf	??___flmul+2,w,c
  5721  0014CC  22DE               	addwfc	postinc2,f,c
  5722  0014CE  501D               	movf	___flmul@f1+1,w,c
  5723  0014D0  0222               	mulwf	___flmul@f2+2,c
  5724  0014D2  CFF3 F024          	movff	prodl,??___flmul
  5725  0014D6  CFF4 F025          	movff	prodh,??___flmul+1
  5726  0014DA  6A26               	clrf	(??___flmul+2)& (0+255),c
  5727  0014DC  0E33               	movlw	___flmul@f3_as_product& (0+255)
  5728  0014DE  6E27               	movwf	(??___flmul+3)& (0+255),c
  5729  0014E0  6A28               	clrf	(??___flmul+4)& (0+255),c
  5730  0014E2  2827               	incf	??___flmul+3,w,c
  5731  0014E4  6ED9               	movwf	fsr2l,c
  5732  0014E6  0E00               	movlw	0
  5733  0014E8  2028               	addwfc	??___flmul+4,w,c
  5734  0014EA  6EDA               	movwf	fsr2h,c
  5735  0014EC  5024               	movf	??___flmul,w,c
  5736  0014EE  26DE               	addwf	postinc2,f,c
  5737  0014F0  5025               	movf	??___flmul+1,w,c
  5738  0014F2  22DE               	addwfc	postinc2,f,c
  5739  0014F4  5026               	movf	??___flmul+2,w,c
  5740  0014F6  22DE               	addwfc	postinc2,f,c
  5741  0014F8  501E               	movf	___flmul@f1+2,w,c
  5742  0014FA  0222               	mulwf	___flmul@f2+2,c
  5743  0014FC  CFF3 F024          	movff	prodl,??___flmul
  5744  001500  CFF4 F025          	movff	prodh,??___flmul+1
  5745  001504  6A26               	clrf	(??___flmul+2)& (0+255),c
  5746  001506  0E33               	movlw	___flmul@f3_as_product& (0+255)
  5747  001508  6E27               	movwf	(??___flmul+3)& (0+255),c
  5748  00150A  6A28               	clrf	(??___flmul+4)& (0+255),c
  5749  00150C  0E02               	movlw	2
  5750  00150E  2427               	addwf	??___flmul+3,w,c
  5751  001510  6ED9               	movwf	fsr2l,c
  5752  001512  0E00               	movlw	0
  5753  001514  2028               	addwfc	??___flmul+4,w,c
  5754  001516  6EDA               	movwf	fsr2h,c
  5755  001518  5024               	movf	??___flmul,w,c
  5756  00151A  26DE               	addwf	postinc2,f,c
  5757  00151C  5025               	movf	??___flmul+1,w,c
  5758  00151E  22DE               	addwfc	postinc2,f,c
  5759  001520  5026               	movf	??___flmul+2,w,c
  5760  001522  22DE               	addwfc	postinc2,f,c
  5761  001524  AE36               	btfss	___flmul@f3_as_product+3,7,c
  5762  001526  D006               	goto	l660
  5763  001528  90D8               	bcf	status,0,c
  5764  00152A  3236               	rrcf	___flmul@f3_as_product+3,f,c
  5765  00152C  3235               	rrcf	___flmul@f3_as_product+2,f,c
  5766  00152E  3234               	rrcf	___flmul@f3_as_product+1,f,c
  5767  001530  3233               	rrcf	___flmul@f3_as_product,f,c
  5768  001532  2A31               	incf	___flmul@exp,f,c
  5769  001534                     l660:
  5770  001534  FFFF               	dw	65535	; assembler added errata NOP
  5771  001536  90D8               	bcf	status,0,c
  5772  001538  3236               	rrcf	___flmul@f3_as_product+3,f,c
  5773  00153A  3235               	rrcf	___flmul@f3_as_product+2,f,c
  5774  00153C  3234               	rrcf	___flmul@f3_as_product+1,f,c
  5775  00153E  3233               	rrcf	___flmul@f3_as_product,f,c
  5776  001540  C033  F003         	movff	___flmul@f3_as_product,___flpack@arg
  5777  001544  C034  F004         	movff	___flmul@f3_as_product+1,___flpack@arg+1
  5778  001548  C035  F005         	movff	___flmul@f3_as_product+2,___flpack@arg+2
  5779  00154C  C036  F006         	movff	___flmul@f3_as_product+3,___flpack@arg+3
  5780  001550  C031  F007         	movff	___flmul@exp,___flpack@exp
  5781  001554  C032  F008         	movff	___flmul@sign,___flpack@sign
  5782  001558  EC37  F00E         	call	___flpack	;wreg free
  5783  00155C  C003  F01C         	movff	?___flpack,?___flmul
  5784  001560  C004  F01D         	movff	?___flpack+1,?___flmul+1
  5785  001564  C005  F01E         	movff	?___flpack+2,?___flmul+2
  5786  001568  C006  F01F         	movff	?___flpack+3,?___flmul+3
  5787  00156C                     l658:
  5788  00156C  FFFF               	dw	65535	; assembler added errata NOP
  5789  00156E  0012               	return		;funcret
  5790  001570  FFFF               	dw	65535	; errata NOP
  5791  001572                     __end_of___flmul:
  5792                           	opt stack 0
  5793                           tosu	equ	0xFFF
  5794                           tosh	equ	0xFFE
  5795                           tosl	equ	0xFFD
  5796                           pclath	equ	0xFFA
  5797                           tblptru	equ	0xFF8
  5798                           tblptrh	equ	0xFF7
  5799                           tblptrl	equ	0xFF6
  5800                           tablat	equ	0xFF5
  5801                           prodh	equ	0xFF4
  5802                           prodl	equ	0xFF3
  5803                           intcon	equ	0xFF2
  5804                           intcon2	equ	0xFF1
  5805                           postinc0	equ	0xFEE
  5806                           wreg	equ	0xFE8
  5807                           indf2	equ	0xFDF
  5808                           postinc2	equ	0xFDE
  5809                           postdec2	equ	0xFDD
  5810                           fsr2h	equ	0xFDA
  5811                           fsr2l	equ	0xFD9
  5812                           status	equ	0xFD8
  5813                           
  5814 ;; *************** function ___fladd *****************
  5815 ;; Defined at:
  5816 ;;		line 88 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\fladd.c"
  5817 ;; Parameters:    Size  Location     Type
  5818 ;;  f1              4   54[COMRAM] unsigned char 
  5819 ;;  f2              4   58[COMRAM] unsigned char 
  5820 ;; Auto vars:     Size  Location     Type
  5821 ;;  exp1            1   65[COMRAM] unsigned char 
  5822 ;;  exp2            1   64[COMRAM] unsigned char 
  5823 ;;  sign            1   63[COMRAM] unsigned char 
  5824 ;; Return value:  Size  Location     Type
  5825 ;;                  4   54[COMRAM] unsigned char 
  5826 ;; Registers used:
  5827 ;;		wreg, status,2, status,0, cstack
  5828 ;; Tracked objects:
  5829 ;;		On entry : 0/0
  5830 ;;		On exit  : 0/0
  5831 ;;		Unchanged: 0/0
  5832 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5833 ;;      Params:         8       0       0       0       0       0       0
  5834 ;;      Locals:         3       0       0       0       0       0       0
  5835 ;;      Temps:          1       0       0       0       0       0       0
  5836 ;;      Totals:        12       0       0       0       0       0       0
  5837 ;;Total ram usage:       12 bytes
  5838 ;; Hardware stack levels used:    1
  5839 ;; Hardware stack levels required when called:    2
  5840 ;; This function calls:
  5841 ;;		___flpack
  5842 ;; This function is called by:
  5843 ;;		_floor
  5844 ;;		___flsub
  5845 ;;		_log
  5846 ;;		_eval_poly
  5847 ;; This function uses a non-reentrant model
  5848 ;;
  5849                           
  5850                           	psect	text31
  5851  001704                     __ptext31:
  5852                           	opt stack 0
  5853  001704                     ___fladd:
  5854                           	opt stack 26
  5855                           
  5856                           ;incstack = 0
  5857  001704  FFFF               	dw	65535
  5858  001706  3439               	rlcf	___fladd@f1+2,w,c
  5859  001708  343A               	rlcf	___fladd@f1+3,w,c
  5860  00170A  6E42               	movwf	___fladd@exp1,c
  5861  00170C  343D               	rlcf	___fladd@f2+2,w,c
  5862  00170E  343E               	rlcf	___fladd@f2+3,w,c
  5863  001710  6E41               	movwf	___fladd@exp2,c
  5864  001712  5042               	movf	___fladd@exp1,w,c
  5865  001714  E009               	bz	l611
  5866  001716  5041               	movf	___fladd@exp2,w,c
  5867  001718  5C42               	subwf	___fladd@exp1,w,c
  5868  00171A  E20F               	bc	l2063
  5869  00171C  5042               	movf	___fladd@exp1,w,c
  5870  00171E  5C41               	subwf	___fladd@exp2,w,c
  5871  001720  6E3F               	movwf	??___fladd& (0+255),c
  5872  001722  0E20               	movlw	32
  5873  001724  643F               	cpfsgt	??___fladd,c
  5874  001726  D009               	goto	l2063
  5875  001728                     l611:
  5876  001728  C03B  F037         	movff	___fladd@f2,?___fladd
  5877  00172C  C03C  F038         	movff	___fladd@f2+1,?___fladd+1
  5878  001730  C03D  F039         	movff	___fladd@f2+2,?___fladd+2
  5879  001734  C03E  F03A         	movff	___fladd@f2+3,?___fladd+3
  5880  001738  D0A1               	goto	l612
  5881  00173A                     l2063:
  5882  00173A  FFFF               	dw	65535	; assembler added errata NOP
  5883  00173C  5041               	movf	___fladd@exp2,w,c
  5884  00173E  E009               	bz	l615
  5885  001740  5042               	movf	___fladd@exp1,w,c
  5886  001742  5C41               	subwf	___fladd@exp2,w,c
  5887  001744  E20F               	bc	l2069
  5888  001746  5041               	movf	___fladd@exp2,w,c
  5889  001748  5C42               	subwf	___fladd@exp1,w,c
  5890  00174A  6E3F               	movwf	??___fladd& (0+255),c
  5891  00174C  0E20               	movlw	32
  5892  00174E  643F               	cpfsgt	??___fladd,c
  5893  001750  D009               	goto	l2069
  5894  001752                     l615:
  5895  001752  C037  F037         	movff	___fladd@f1,?___fladd
  5896  001756  C038  F038         	movff	___fladd@f1+1,?___fladd+1
  5897  00175A  C039  F039         	movff	___fladd@f1+2,?___fladd+2
  5898  00175E  C03A  F03A         	movff	___fladd@f1+3,?___fladd+3
  5899  001762  D08C               	goto	l612
  5900  001764                     l2069:
  5901  001764  FFFF               	dw	65535	; assembler added errata NOP
  5902  001766  0E06               	movlw	6
  5903  001768  6E40               	movwf	___fladd@sign,c
  5904  00176A  BE3A               	btfsc	___fladd@f1+3,7,c
  5905  00176C  8E40               	bsf	___fladd@sign,7,c
  5906  00176E  BE3E               	btfsc	___fladd@f2+3,7,c
  5907  001770  8C40               	bsf	___fladd@sign,6,c
  5908  001772  8E39               	bsf	___fladd@f1+2,7,c
  5909  001774  6A3A               	clrf	___fladd@f1+3,c
  5910  001776  8E3D               	bsf	___fladd@f2+2,7,c
  5911  001778  6A3E               	clrf	___fladd@f2+3,c
  5912  00177A  5041               	movf	___fladd@exp2,w,c
  5913  00177C  5C42               	subwf	___fladd@exp1,w,c
  5914  00177E  E21C               	bc	l2093
  5915  001780                     l2083:
  5916  001780  FFFF               	dw	65535	; assembler added errata NOP
  5917  001782  90D8               	bcf	status,0,c
  5918  001784  363B               	rlcf	___fladd@f2,f,c
  5919  001786  363C               	rlcf	___fladd@f2+1,f,c
  5920  001788  363D               	rlcf	___fladd@f2+2,f,c
  5921  00178A  363E               	rlcf	___fladd@f2+3,f,c
  5922  00178C  0641               	decf	___fladd@exp2,f,c
  5923  00178E  5042               	movf	___fladd@exp1,w,c
  5924  001790  1841               	xorwf	___fladd@exp2,w,c
  5925  001792  E00E               	bz	l2091
  5926  001794  0640               	decf	___fladd@sign,f,c
  5927  001796  C040  F03F         	movff	___fladd@sign,??___fladd
  5928  00179A  0E07               	movlw	7
  5929  00179C  163F               	andwf	??___fladd,f,c
  5930  00179E  E008               	bz	l2091
  5931  0017A0  D7EF               	goto	l2083
  5932  0017A2                     l2089:
  5933  0017A2  FFFF               	dw	65535	; assembler added errata NOP
  5934  0017A4  90D8               	bcf	status,0,c
  5935  0017A6  323A               	rrcf	___fladd@f1+3,f,c
  5936  0017A8  3239               	rrcf	___fladd@f1+2,f,c
  5937  0017AA  3238               	rrcf	___fladd@f1+1,f,c
  5938  0017AC  3237               	rrcf	___fladd@f1,f,c
  5939  0017AE  2A42               	incf	___fladd@exp1,f,c
  5940  0017B0                     l2091:
  5941  0017B0  5041               	movf	___fladd@exp2,w,c
  5942  0017B2  1842               	xorwf	___fladd@exp1,w,c
  5943  0017B4  E01E               	bz	l626
  5944  0017B6  D7F5               	goto	l2089
  5945  0017B8                     l2093:
  5946  0017B8  5042               	movf	___fladd@exp1,w,c
  5947  0017BA  5C41               	subwf	___fladd@exp2,w,c
  5948  0017BC  E21A               	bc	l626
  5949  0017BE                     l2095:
  5950  0017BE  FFFF               	dw	65535	; assembler added errata NOP
  5951  0017C0  90D8               	bcf	status,0,c
  5952  0017C2  3637               	rlcf	___fladd@f1,f,c
  5953  0017C4  3638               	rlcf	___fladd@f1+1,f,c
  5954  0017C6  3639               	rlcf	___fladd@f1+2,f,c
  5955  0017C8  363A               	rlcf	___fladd@f1+3,f,c
  5956  0017CA  0642               	decf	___fladd@exp1,f,c
  5957  0017CC  5042               	movf	___fladd@exp1,w,c
  5958  0017CE  1841               	xorwf	___fladd@exp2,w,c
  5959  0017D0  E00D               	bz	l2103
  5960  0017D2  0640               	decf	___fladd@sign,f,c
  5961  0017D4  C040  F03F         	movff	___fladd@sign,??___fladd
  5962  0017D8  0E07               	movlw	7
  5963  0017DA  163F               	andwf	??___fladd,f,c
  5964  0017DC  E007               	bz	l2103
  5965  0017DE  D7EF               	goto	l2095
  5966  0017E0                     l2101:
  5967  0017E0  90D8               	bcf	status,0,c
  5968  0017E2  323E               	rrcf	___fladd@f2+3,f,c
  5969  0017E4  323D               	rrcf	___fladd@f2+2,f,c
  5970  0017E6  323C               	rrcf	___fladd@f2+1,f,c
  5971  0017E8  323B               	rrcf	___fladd@f2,f,c
  5972  0017EA  2A41               	incf	___fladd@exp2,f,c
  5973  0017EC                     l2103:
  5974  0017EC  5041               	movf	___fladd@exp2,w,c
  5975  0017EE  1842               	xorwf	___fladd@exp1,w,c
  5976  0017F0  E1F7               	bnz	l2101
  5977  0017F2                     l626:
  5978  0017F2  AE40               	btfss	___fladd@sign,7,c
  5979  0017F4  D009               	goto	l2107
  5980  0017F6  1E37               	comf	___fladd@f1,f,c
  5981  0017F8  1E38               	comf	___fladd@f1+1,f,c
  5982  0017FA  1E39               	comf	___fladd@f1+2,f,c
  5983  0017FC  1E3A               	comf	___fladd@f1+3,f,c
  5984  0017FE  2A37               	incf	___fladd@f1,f,c
  5985  001800  0E00               	movlw	0
  5986  001802  2238               	addwfc	___fladd@f1+1,f,c
  5987  001804  2239               	addwfc	___fladd@f1+2,f,c
  5988  001806  223A               	addwfc	___fladd@f1+3,f,c
  5989  001808                     l2107:
  5990  001808  FFFF               	dw	65535	; assembler added errata NOP
  5991  00180A  AC40               	btfss	___fladd@sign,6,c
  5992  00180C  D009               	goto	l2111
  5993  00180E  1E3B               	comf	___fladd@f2,f,c
  5994  001810  1E3C               	comf	___fladd@f2+1,f,c
  5995  001812  1E3D               	comf	___fladd@f2+2,f,c
  5996  001814  1E3E               	comf	___fladd@f2+3,f,c
  5997  001816  2A3B               	incf	___fladd@f2,f,c
  5998  001818  0E00               	movlw	0
  5999  00181A  223C               	addwfc	___fladd@f2+1,f,c
  6000  00181C  223D               	addwfc	___fladd@f2+2,f,c
  6001  00181E  223E               	addwfc	___fladd@f2+3,f,c
  6002  001820                     l2111:
  6003  001820  FFFF               	dw	65535	; assembler added errata NOP
  6004  001822  6A40               	clrf	___fladd@sign,c
  6005  001824  5037               	movf	___fladd@f1,w,c
  6006  001826  263B               	addwf	___fladd@f2,f,c
  6007  001828  5038               	movf	___fladd@f1+1,w,c
  6008  00182A  223C               	addwfc	___fladd@f2+1,f,c
  6009  00182C  5039               	movf	___fladd@f1+2,w,c
  6010  00182E  223D               	addwfc	___fladd@f2+2,f,c
  6011  001830  503A               	movf	___fladd@f1+3,w,c
  6012  001832  223E               	addwfc	___fladd@f2+3,f,c
  6013  001834  AE3E               	btfss	___fladd@f2+3,7,c
  6014  001836  D00B               	goto	l2119
  6015  001838  1E3B               	comf	___fladd@f2,f,c
  6016  00183A  1E3C               	comf	___fladd@f2+1,f,c
  6017  00183C  1E3D               	comf	___fladd@f2+2,f,c
  6018  00183E  1E3E               	comf	___fladd@f2+3,f,c
  6019  001840  2A3B               	incf	___fladd@f2,f,c
  6020  001842  0E00               	movlw	0
  6021  001844  223C               	addwfc	___fladd@f2+1,f,c
  6022  001846  223D               	addwfc	___fladd@f2+2,f,c
  6023  001848  223E               	addwfc	___fladd@f2+3,f,c
  6024  00184A  0E01               	movlw	1
  6025  00184C  6E40               	movwf	___fladd@sign,c
  6026  00184E                     l2119:
  6027  00184E  FFFF               	dw	65535	; assembler added errata NOP
  6028  001850  C03B  F003         	movff	___fladd@f2,___flpack@arg
  6029  001854  C03C  F004         	movff	___fladd@f2+1,___flpack@arg+1
  6030  001858  C03D  F005         	movff	___fladd@f2+2,___flpack@arg+2
  6031  00185C  C03E  F006         	movff	___fladd@f2+3,___flpack@arg+3
  6032  001860  C042  F007         	movff	___fladd@exp1,___flpack@exp
  6033  001864  C040  F008         	movff	___fladd@sign,___flpack@sign
  6034  001868  EC37  F00E         	call	___flpack	;wreg free
  6035  00186C  C003  F037         	movff	?___flpack,?___fladd
  6036  001870  C004  F038         	movff	?___flpack+1,?___fladd+1
  6037  001874  C005  F039         	movff	?___flpack+2,?___fladd+2
  6038  001878  C006  F03A         	movff	?___flpack+3,?___fladd+3
  6039  00187C                     l612:
  6040  00187C  FFFF               	dw	65535	; assembler added errata NOP
  6041  00187E  0012               	return		;funcret
  6042  001880  FFFF               	dw	65535	; errata NOP
  6043  001882                     __end_of___fladd:
  6044                           	opt stack 0
  6045                           tosu	equ	0xFFF
  6046                           tosh	equ	0xFFE
  6047                           tosl	equ	0xFFD
  6048                           pclath	equ	0xFFA
  6049                           tblptru	equ	0xFF8
  6050                           tblptrh	equ	0xFF7
  6051                           tblptrl	equ	0xFF6
  6052                           tablat	equ	0xFF5
  6053                           prodh	equ	0xFF4
  6054                           prodl	equ	0xFF3
  6055                           intcon	equ	0xFF2
  6056                           intcon2	equ	0xFF1
  6057                           postinc0	equ	0xFEE
  6058                           wreg	equ	0xFE8
  6059                           indf2	equ	0xFDF
  6060                           postinc2	equ	0xFDE
  6061                           postdec2	equ	0xFDD
  6062                           fsr2h	equ	0xFDA
  6063                           fsr2l	equ	0xFD9
  6064                           status	equ	0xFD8
  6065                           
  6066 ;; *************** function ___awtofl *****************
  6067 ;; Defined at:
  6068 ;;		line 31 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\awtofl.c"
  6069 ;; Parameters:    Size  Location     Type
  6070 ;;  c               2   12[COMRAM] int 
  6071 ;; Auto vars:     Size  Location     Type
  6072 ;;  f1              4    0        int 
  6073 ;;  sign            1   16[COMRAM] unsigned char 
  6074 ;; Return value:  Size  Location     Type
  6075 ;;                  4   12[COMRAM] unsigned char 
  6076 ;; Registers used:
  6077 ;;		wreg, status,2, status,0, cstack
  6078 ;; Tracked objects:
  6079 ;;		On entry : 0/0
  6080 ;;		On exit  : 0/0
  6081 ;;		Unchanged: 0/0
  6082 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6083 ;;      Params:         4       0       0       0       0       0       0
  6084 ;;      Locals:         1       0       0       0       0       0       0
  6085 ;;      Temps:          0       0       0       0       0       0       0
  6086 ;;      Totals:         5       0       0       0       0       0       0
  6087 ;;Total ram usage:        5 bytes
  6088 ;; Hardware stack levels used:    1
  6089 ;; Hardware stack levels required when called:    2
  6090 ;; This function calls:
  6091 ;;		___flpack
  6092 ;; This function is called by:
  6093 ;;		_format_double
  6094 ;;		_log
  6095 ;;		_exp
  6096 ;; This function uses a non-reentrant model
  6097 ;;
  6098                           
  6099                           	psect	text32
  6100  00250A                     __ptext32:
  6101                           	opt stack 0
  6102  00250A                     ___awtofl:
  6103                           	opt stack 24
  6104                           
  6105                           ;incstack = 0
  6106  00250A  FFFF               	dw	65535
  6107  00250C  6A11               	clrf	___awtofl@sign,c
  6108  00250E  AE0E               	btfss	___awtofl@c+1,7,c
  6109  002510  D005               	goto	l2317
  6110  002512  6C0D               	negf	___awtofl@c,c
  6111  002514  1E0E               	comf	___awtofl@c+1,f,c
  6112  002516  B0D8               	btfsc	status,0,c
  6113  002518  2A0E               	incf	___awtofl@c+1,f,c
  6114  00251A  2A11               	incf	___awtofl@sign,f,c
  6115  00251C                     l2317:
  6116  00251C  FFFF               	dw	65535	; assembler added errata NOP
  6117  00251E  C00D  F003         	movff	___awtofl@c,___flpack@arg
  6118  002522  C00E  F004         	movff	___awtofl@c+1,___flpack@arg+1
  6119  002526  6A05               	clrf	___flpack@arg+2,c
  6120  002528  6A06               	clrf	___flpack@arg+3,c
  6121  00252A  0E96               	movlw	150
  6122  00252C  6E07               	movwf	___flpack@exp,c
  6123  00252E  C011  F008         	movff	___awtofl@sign,___flpack@sign
  6124  002532  EC37  F00E         	call	___flpack	;wreg free
  6125  002536  C003  F00D         	movff	?___flpack,?___awtofl
  6126  00253A  C004  F00E         	movff	?___flpack+1,?___awtofl+1
  6127  00253E  C005  F00F         	movff	?___flpack+2,?___awtofl+2
  6128  002542  C006  F010         	movff	?___flpack+3,?___awtofl+3
  6129  002546  0012               	return		;funcret
  6130  002548  FFFF               	dw	65535	; errata NOP
  6131  00254A                     __end_of___awtofl:
  6132                           	opt stack 0
  6133                           tosu	equ	0xFFF
  6134                           tosh	equ	0xFFE
  6135                           tosl	equ	0xFFD
  6136                           pclath	equ	0xFFA
  6137                           tblptru	equ	0xFF8
  6138                           tblptrh	equ	0xFF7
  6139                           tblptrl	equ	0xFF6
  6140                           tablat	equ	0xFF5
  6141                           prodh	equ	0xFF4
  6142                           prodl	equ	0xFF3
  6143                           intcon	equ	0xFF2
  6144                           intcon2	equ	0xFF1
  6145                           postinc0	equ	0xFEE
  6146                           wreg	equ	0xFE8
  6147                           indf2	equ	0xFDF
  6148                           postinc2	equ	0xFDE
  6149                           postdec2	equ	0xFDD
  6150                           fsr2h	equ	0xFDA
  6151                           fsr2l	equ	0xFD9
  6152                           status	equ	0xFD8
  6153                           
  6154 ;; *************** function _indicator *****************
  6155 ;; Defined at:
  6156 ;;		line 469 in file "../../../src/print.c"
  6157 ;; Parameters:    Size  Location     Type
  6158 ;;  indicate        1    wreg     unsigned char 
  6159 ;; Auto vars:     Size  Location     Type
  6160 ;;  indicate        1    0[COMRAM] unsigned char 
  6161 ;; Return value:  Size  Location     Type
  6162 ;;		None               void
  6163 ;; Registers used:
  6164 ;;		wreg
  6165 ;; Tracked objects:
  6166 ;;		On entry : F/0
  6167 ;;		On exit  : F/0
  6168 ;;		Unchanged: F/0
  6169 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6170 ;;      Params:         0       0       0       0       0       0       0
  6171 ;;      Locals:         0       0       0       0       0       0       0
  6172 ;;      Temps:          0       0       0       0       0       0       0
  6173 ;;      Totals:         0       0       0       0       0       0       0
  6174 ;;Total ram usage:        0 bytes
  6175 ;; Hardware stack levels used:    1
  6176 ;; Hardware stack levels required when called:    1
  6177 ;; This function calls:
  6178 ;;		Nothing
  6179 ;; This function is called by:
  6180 ;;		_main
  6181 ;; This function uses a non-reentrant model
  6182 ;;
  6183                           
  6184                           	psect	text33
  6185  002674                     __ptext33:
  6186                           	opt stack 0
  6187  002674                     _indicator:
  6188                           	opt stack 29
  6189                           
  6190                           ;incstack = 0
  6191  002674  FFFF               	dw	65535
  6192                           
  6193                           ; BSR set to: 0
  6194  002676  0012               	return		;funcret
  6195  002678  FFFF               	dw	65535	; errata NOP
  6196  00267A                     __end_of_indicator:
  6197                           	opt stack 0
  6198                           tosu	equ	0xFFF
  6199                           tosh	equ	0xFFE
  6200                           tosl	equ	0xFFD
  6201                           pclath	equ	0xFFA
  6202                           tblptru	equ	0xFF8
  6203                           tblptrh	equ	0xFF7
  6204                           tblptrl	equ	0xFF6
  6205                           tablat	equ	0xFF5
  6206                           prodh	equ	0xFF4
  6207                           prodl	equ	0xFF3
  6208                           intcon	equ	0xFF2
  6209                           intcon2	equ	0xFF1
  6210                           postinc0	equ	0xFEE
  6211                           wreg	equ	0xFE8
  6212                           indf2	equ	0xFDF
  6213                           postinc2	equ	0xFDE
  6214                           postdec2	equ	0xFDD
  6215                           fsr2h	equ	0xFDA
  6216                           fsr2l	equ	0xFD9
  6217                           status	equ	0xFD8
  6218                           
  6219 ;; *************** function _calibrate *****************
  6220 ;; Defined at:
  6221 ;;		line 346 in file "../../../src/LC-meter.c"
  6222 ;; Parameters:    Size  Location     Type
  6223 ;;		None
  6224 ;; Auto vars:     Size  Location     Type
  6225 ;;  i               1    0        unsigned char 
  6226 ;; Return value:  Size  Location     Type
  6227 ;;		None               void
  6228 ;; Registers used:
  6229 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6230 ;; Tracked objects:
  6231 ;;		On entry : F/0
  6232 ;;		On exit  : 0/0
  6233 ;;		Unchanged: 0/0
  6234 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6235 ;;      Params:         0       0       0       0       0       0       0
  6236 ;;      Locals:         0       0       0       0       0       0       0
  6237 ;;      Temps:          0       0       0       0       0       0       0
  6238 ;;      Totals:         0       0       0       0       0       0       0
  6239 ;;Total ram usage:        0 bytes
  6240 ;; Hardware stack levels used:    1
  6241 ;; Hardware stack levels required when called:    3
  6242 ;; This function calls:
  6243 ;;		___lwtofl
  6244 ;;		_delay10ms
  6245 ;;		_measure_freq
  6246 ;;		_ser_puts
  6247 ;; This function is called by:
  6248 ;;		_main
  6249 ;; This function uses a non-reentrant model
  6250 ;;
  6251                           
  6252                           	psect	text34
  6253  00201A                     __ptext34:
  6254                           	opt stack 0
  6255  00201A                     _calibrate:
  6256                           	opt stack 27
  6257                           
  6258                           ; BSR set to: 0
  6259                           ;incstack = 0
  6260  00201A  FFFF               	dw	65535
  6261                           
  6262                           ; BSR set to: 0
  6263                           ;LC-meter.c: 347: unsigned char i;
  6264                           ;LC-meter.c: 360: PORTC &= ~(1 << 5);
  6265  00201C  9A82               	bcf	3970,5,c	;volatile
  6266                           
  6267                           ; BSR set to: 0
  6268                           ;LC-meter.c: 362: F1 = (double)measure_freq();
  6269  00201E  EC60  F010         	call	_measure_freq	;wreg free
  6270  002022  C003  F00D         	movff	?_measure_freq,___lwtofl@c
  6271  002026  C004  F00E         	movff	?_measure_freq+1,___lwtofl@c+1
  6272  00202A  ECD9  F012         	call	___lwtofl	;wreg free
  6273  00202E  C00D  F0EE         	movff	?___lwtofl,_F1
  6274  002032  C00E  F0EF         	movff	?___lwtofl+1,_F1+1
  6275  002036  C00F  F0F0         	movff	?___lwtofl+2,_F1+2
  6276  00203A  C010  F0F1         	movff	?___lwtofl+3,_F1+3
  6277                           
  6278                           ;LC-meter.c: 363: delay10ms(50);
  6279  00203E  6A04               	clrf	delay10ms@period_10ms+1,c
  6280  002040  0E32               	movlw	50
  6281  002042  6E03               	movwf	delay10ms@period_10ms,c
  6282  002044  EC16  F011         	call	_delay10ms	;wreg free
  6283                           
  6284                           ; BSR set to: 0
  6285                           ;LC-meter.c: 365: F1 = (double)measure_freq();
  6286  002048  EC60  F010         	call	_measure_freq	;wreg free
  6287  00204C  C003  F00D         	movff	?_measure_freq,___lwtofl@c
  6288  002050  C004  F00E         	movff	?_measure_freq+1,___lwtofl@c+1
  6289  002054  ECD9  F012         	call	___lwtofl	;wreg free
  6290  002058  C00D  F0EE         	movff	?___lwtofl,_F1
  6291  00205C  C00E  F0EF         	movff	?___lwtofl+1,_F1+1
  6292  002060  C00F  F0F0         	movff	?___lwtofl+2,_F1+2
  6293  002064  C010  F0F1         	movff	?___lwtofl+3,_F1+3
  6294                           
  6295                           ;LC-meter.c: 366: PORTC |= (1 << 5);
  6296  002068  8A82               	bsf	3970,5,c	;volatile
  6297                           
  6298                           ;LC-meter.c: 368: F2 = (double)measure_freq();
  6299  00206A  EC60  F010         	call	_measure_freq	;wreg free
  6300  00206E  C003  F00D         	movff	?_measure_freq,___lwtofl@c
  6301  002072  C004  F00E         	movff	?_measure_freq+1,___lwtofl@c+1
  6302  002076  ECD9  F012         	call	___lwtofl	;wreg free
  6303  00207A  C00D  F0D7         	movff	?___lwtofl,_F2
  6304  00207E  C00E  F0D8         	movff	?___lwtofl+1,_F2+1
  6305  002082  C00F  F0D9         	movff	?___lwtofl+2,_F2+2
  6306  002086  C010  F0DA         	movff	?___lwtofl+3,_F2+3
  6307                           
  6308                           ;LC-meter.c: 369: delay10ms(50);
  6309  00208A  6A04               	clrf	delay10ms@period_10ms+1,c
  6310  00208C  0E32               	movlw	50
  6311  00208E  6E03               	movwf	delay10ms@period_10ms,c
  6312  002090  EC16  F011         	call	_delay10ms	;wreg free
  6313                           
  6314                           ;LC-meter.c: 371: F2 = (double)measure_freq();
  6315  002094  EC60  F010         	call	_measure_freq	;wreg free
  6316  002098  C003  F00D         	movff	?_measure_freq,___lwtofl@c
  6317  00209C  C004  F00E         	movff	?_measure_freq+1,___lwtofl@c+1
  6318  0020A0  ECD9  F012         	call	___lwtofl	;wreg free
  6319  0020A4  C00D  F0D7         	movff	?___lwtofl,_F2
  6320  0020A8  C00E  F0D8         	movff	?___lwtofl+1,_F2+1
  6321  0020AC  C00F  F0D9         	movff	?___lwtofl+2,_F2+2
  6322  0020B0  C010  F0DA         	movff	?___lwtofl+3,_F2+3
  6323                           
  6324                           ;LC-meter.c: 372: PORTC &= ~(1 << 5);
  6325  0020B4  9A82               	bcf	3970,5,c	;volatile
  6326                           
  6327                           ;LC-meter.c: 384: ser_puts("\r\n");
  6328  0020B6  0E58               	movlw	(STR_1+3)& (0+255)
  6329  0020B8  ECA5  F012         	call	_ser_puts
  6330  0020BC  0012               	return		;funcret
  6331  0020BE  FFFF               	dw	65535	; errata NOP
  6332  0020C0                     __end_of_calibrate:
  6333                           	opt stack 0
  6334                           tosu	equ	0xFFF
  6335                           tosh	equ	0xFFE
  6336                           tosl	equ	0xFFD
  6337                           pclath	equ	0xFFA
  6338                           tblptru	equ	0xFF8
  6339                           tblptrh	equ	0xFF7
  6340                           tblptrl	equ	0xFF6
  6341                           tablat	equ	0xFF5
  6342                           prodh	equ	0xFF4
  6343                           prodl	equ	0xFF3
  6344                           intcon	equ	0xFF2
  6345                           intcon2	equ	0xFF1
  6346                           postinc0	equ	0xFEE
  6347                           wreg	equ	0xFE8
  6348                           indf2	equ	0xFDF
  6349                           postinc2	equ	0xFDE
  6350                           postdec2	equ	0xFDD
  6351                           fsr2h	equ	0xFDA
  6352                           fsr2l	equ	0xFD9
  6353                           status	equ	0xFD8
  6354                           
  6355 ;; *************** function _ser_puts *****************
  6356 ;; Defined at:
  6357 ;;		line 92 in file "../../../lib/ser.c"
  6358 ;; Parameters:    Size  Location     Type
  6359 ;;  s               1    wreg     PTR const unsigned char 
  6360 ;;		 -> STR_11(3), STR_10(5), STR_9(3), STR_8(8), 
  6361 ;;		 -> STR_7(6), STR_6(6), STR_5(6), STR_4(5), 
  6362 ;;		 -> STR_3(3), STR_2(3), STR_1(6), 
  6363 ;; Auto vars:     Size  Location     Type
  6364 ;;  s               1    3[COMRAM] PTR const unsigned char 
  6365 ;;		 -> STR_11(3), STR_10(5), STR_9(3), STR_8(8), 
  6366 ;;		 -> STR_7(6), STR_6(6), STR_5(6), STR_4(5), 
  6367 ;;		 -> STR_3(3), STR_2(3), STR_1(6), 
  6368 ;; Return value:  Size  Location     Type
  6369 ;;		None               void
  6370 ;; Registers used:
  6371 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6372 ;; Tracked objects:
  6373 ;;		On entry : 0/0
  6374 ;;		On exit  : 0/0
  6375 ;;		Unchanged: 0/0
  6376 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6377 ;;      Params:         0       0       0       0       0       0       0
  6378 ;;      Locals:         1       0       0       0       0       0       0
  6379 ;;      Temps:          0       0       0       0       0       0       0
  6380 ;;      Totals:         1       0       0       0       0       0       0
  6381 ;;Total ram usage:        1 bytes
  6382 ;; Hardware stack levels used:    1
  6383 ;; Hardware stack levels required when called:    2
  6384 ;; This function calls:
  6385 ;;		_ser_putch
  6386 ;; This function is called by:
  6387 ;;		_main
  6388 ;;		_calibrate
  6389 ;;		_measure_capacitance
  6390 ;; This function uses a non-reentrant model
  6391 ;;
  6392                           
  6393                           	psect	text35
  6394  00254A                     __ptext35:
  6395                           	opt stack 0
  6396  00254A                     _ser_puts:
  6397                           	opt stack 28
  6398                           
  6399                           ;incstack = 0
  6400  00254A  FFFF               	dw	65535
  6401                           
  6402                           ;ser_puts@s stored from wreg
  6403  00254C  6E04               	movwf	ser_puts@s,c
  6404                           
  6405                           ;ser.c: 93: while(*s) ser_putch(*s++);
  6406  00254E  D00B               	goto	l2557
  6407  002550                     l2553:
  6408  002550  FFFF               	dw	65535	; assembler added errata NOP
  6409  002552  C004  FFF6         	movff	ser_puts@s,tblptrl
  6410  002556                     	if	1	;There is more than 1 active tblptr byte
  6411  002556  0E06               	movlw	high __smallconst
  6412  002558  6EF7               	movwf	tblptrh,c
  6413  00255A                     	endif
  6414  00255A                     	if	0	;tblptru may be non-zero
  6415  00255A                     	endif
  6416  00255A                     	if	0	;tblptru may be non-zero
  6417  00255A                     	endif
  6418  00255A  0008               	tblrd		*
  6419  00255C  FFFF               	dw	65535	; errata NOP
  6420  00255E  50F5               	movf	tablat,w,c
  6421  002560  EC04  F013         	call	_ser_putch
  6422  002564  2A04               	incf	ser_puts@s,f,c
  6423  002566                     l2557:
  6424  002566  FFFF               	dw	65535	; assembler added errata NOP
  6425  002568  C004  FFF6         	movff	ser_puts@s,tblptrl
  6426  00256C                     	if	1	;There is more than 1 active tblptr byte
  6427  00256C  0E06               	movlw	high __smallconst
  6428  00256E  6EF7               	movwf	tblptrh,c
  6429  002570                     	endif
  6430  002570                     	if	0	;tblptru may be non-zero
  6431  002570                     	endif
  6432  002570                     	if	0	;tblptru may be non-zero
  6433  002570                     	endif
  6434  002570  0008               	tblrd		*
  6435  002572  FFFF               	dw	65535	; errata NOP
  6436  002574  50F5               	movf	tablat,w,c
  6437  002576  B4D8               	btfsc	status,2,c
  6438  002578  0012               	return		;funcret
  6439  00257A  FFFF               	dw	65535	; assembler added errata NOP
  6440  00257C  D7E9               	goto	l2553
  6441  00257E  FFFF               	dw	65535	; errata NOP
  6442  002580                     __end_of_ser_puts:
  6443                           	opt stack 0
  6444                           tosu	equ	0xFFF
  6445                           tosh	equ	0xFFE
  6446                           tosl	equ	0xFFD
  6447                           pclath	equ	0xFFA
  6448                           tblptru	equ	0xFF8
  6449                           tblptrh	equ	0xFF7
  6450                           tblptrl	equ	0xFF6
  6451                           tablat	equ	0xFF5
  6452                           prodh	equ	0xFF4
  6453                           prodl	equ	0xFF3
  6454                           intcon	equ	0xFF2
  6455                           intcon2	equ	0xFF1
  6456                           postinc0	equ	0xFEE
  6457                           wreg	equ	0xFE8
  6458                           indf2	equ	0xFDF
  6459                           postinc2	equ	0xFDE
  6460                           postdec2	equ	0xFDD
  6461                           fsr2h	equ	0xFDA
  6462                           fsr2l	equ	0xFD9
  6463                           status	equ	0xFD8
  6464                           
  6465 ;; *************** function _measure_freq *****************
  6466 ;; Defined at:
  6467 ;;		line 299 in file "../../../src/LC-meter.c"
  6468 ;; Parameters:    Size  Location     Type
  6469 ;;		None
  6470 ;; Auto vars:     Size  Location     Type
  6471 ;;  i               1    7[COMRAM] unsigned char 
  6472 ;;  count           2    8[COMRAM] unsigned short 
  6473 ;;  prev            1    6[COMRAM] unsigned char 
  6474 ;; Return value:  Size  Location     Type
  6475 ;;                  2    2[COMRAM] unsigned short 
  6476 ;; Registers used:
  6477 ;;		wreg, status,2, status,0
  6478 ;; Tracked objects:
  6479 ;;		On entry : 0/0
  6480 ;;		On exit  : 0/0
  6481 ;;		Unchanged: 0/0
  6482 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6483 ;;      Params:         2       0       0       0       0       0       0
  6484 ;;      Locals:         4       0       0       0       0       0       0
  6485 ;;      Temps:          2       0       0       0       0       0       0
  6486 ;;      Totals:         8       0       0       0       0       0       0
  6487 ;;Total ram usage:        8 bytes
  6488 ;; Hardware stack levels used:    1
  6489 ;; Hardware stack levels required when called:    1
  6490 ;; This function calls:
  6491 ;;		Nothing
  6492 ;; This function is called by:
  6493 ;;		_calibrate
  6494 ;;		_measure_capacitance
  6495 ;;		_measure_inductance
  6496 ;; This function uses a non-reentrant model
  6497 ;;
  6498                           
  6499                           	psect	text36
  6500  0020C0                     __ptext36:
  6501                           	opt stack 0
  6502  0020C0                     _measure_freq:
  6503                           	opt stack 28
  6504                           
  6505                           ;incstack = 0
  6506  0020C0  FFFF               	dw	65535
  6507                           
  6508                           ;LC-meter.c: 300: unsigned char prev;
  6509                           ;LC-meter.c: 301: unsigned short int count;
  6510                           ;LC-meter.c: 303: TMR0IF = 0;
  6511  0020C2  94F2               	bcf	intcon,2,c	;volatile
  6512                           
  6513                           ;LC-meter.c: 305: TRISA &= ~0b00010000;
  6514  0020C4  9892               	bcf	3986,4,c	;volatile
  6515                           
  6516                           ;LC-meter.c: 308: _delay((unsigned long)((20)*(20000000/4000.0)));
  6517  0020C6  0E62               	movlw	98
  6518  0020C8  6E05               	movwf	??_measure_freq& (0+255),c
  6519  0020CA  0E76               	movlw	118
  6520  0020CC                     u2717:
  6521  0020CC  FFFF               	dw	65535	; errata NOP
  6522  0020CE  2EE8               	decfsz	wreg,f,c
  6523  0020D0  D7FD               	goto	u2717
  6524  0020D2  2E05               	decfsz	??_measure_freq& (0+255),f,c
  6525  0020D4  D7FB               	goto	u2717
  6526  0020D6  D000               	nop2	
  6527                           
  6528                           ;LC-meter.c: 310: TMR0 = 0x00;
  6529  0020D8  6AD6               	clrf	4054,c	;volatile
  6530  0020DA  6AD7               	clrf	4055,c	;volatile
  6531                           
  6532                           ;LC-meter.c: 312: for(char i = 0; i < 10; i++) _delay((unsigned long)((10)*(20000000/400
      +                          0.0)));
  6533  0020DC  6A08               	clrf	measure_freq@i,c
  6534  0020DE                     l2613:
  6535  0020DE  FFFF               	dw	65535	; assembler added errata NOP
  6536  0020E0  0E31               	movlw	49
  6537  0020E2  6E05               	movwf	??_measure_freq& (0+255),c
  6538  0020E4  0EBB               	movlw	187
  6539  0020E6                     u2727:
  6540  0020E6  FFFF               	dw	65535	; errata NOP
  6541  0020E8  2EE8               	decfsz	wreg,f,c
  6542  0020EA  D7FD               	goto	u2727
  6543  0020EC  2E05               	decfsz	??_measure_freq& (0+255),f,c
  6544  0020EE  D7FB               	goto	u2727
  6545  0020F0  2A08               	incf	measure_freq@i,f,c
  6546  0020F2  0E09               	movlw	9
  6547  0020F4  6408               	cpfsgt	measure_freq@i,c
  6548  0020F6  D7F3               	goto	l2613
  6549                           
  6550                           ;LC-meter.c: 314: TRISA |= 0b00010000;
  6551  0020F8  8892               	bsf	3986,4,c	;volatile
  6552                           
  6553                           ;LC-meter.c: 316: prev = TMR0;
  6554  0020FA  CFD6 F007          	movff	4054,measure_freq@prev	;volatile
  6555                           
  6556                           ;LC-meter.c: 317: count = 0;
  6557  0020FE  6A09               	clrf	measure_freq@count,c
  6558  002100  6A0A               	clrf	measure_freq@count+1,c
  6559  002102                     l2623:
  6560                           
  6561                           ;LC-meter.c: 321: T0SE = 1;
  6562  002102  88D5               	bsf	4053,4,c	;volatile
  6563                           
  6564                           ;LC-meter.c: 322: __nop();
  6565  002104  F000               	nop	
  6566                           
  6567                           ;LC-meter.c: 323: __nop();
  6568  002106  F000               	nop	
  6569                           
  6570                           ;LC-meter.c: 325: T0SE = 0;
  6571  002108  98D5               	bcf	4053,4,c	;volatile
  6572                           
  6573                           ;LC-meter.c: 326: __nop();
  6574  00210A  F000               	nop	
  6575                           
  6576                           ;LC-meter.c: 327: __nop();
  6577  00210C  F000               	nop	
  6578                           
  6579                           ;LC-meter.c: 328: count++;
  6580  00210E  4A09               	infsnz	measure_freq@count,f,c
  6581  002110  2A0A               	incf	measure_freq@count+1,f,c
  6582                           
  6583                           ;LC-meter.c: 329: } while(prev == TMR0 && count <= 255);
  6584  002112  5007               	movf	measure_freq@prev,w,c
  6585  002114  18D6               	xorwf	4054,w,c	;volatile
  6586  002116  10D7               	iorwf	4055,w,c	;volatile
  6587  002118  E102               	bnz	l2639
  6588  00211A  040A               	decf	measure_freq@count+1,w,c
  6589  00211C  E3F2               	bnc	l2623
  6590  00211E                     l2639:
  6591                           
  6592                           ;LC-meter.c: 332: count = ((prev << 8) + (256 - count));
  6593  00211E  5007               	movf	measure_freq@prev,w,c
  6594  002120  6E06               	movwf	(??_measure_freq+1)& (0+255),c
  6595  002122  6A05               	clrf	??_measure_freq& (0+255),c
  6596  002124  5009               	movf	measure_freq@count,w,c
  6597  002126  5E05               	subwf	??_measure_freq,f,c
  6598  002128  500A               	movf	measure_freq@count+1,w,c
  6599  00212A  5A06               	subwfb	??_measure_freq+1,f,c
  6600  00212C  0E00               	movlw	0
  6601  00212E  2405               	addwf	??_measure_freq,w,c
  6602  002130  6E09               	movwf	measure_freq@count,c
  6603  002132  0E01               	movlw	1
  6604  002134  2006               	addwfc	??_measure_freq+1,w,c
  6605  002136  6E0A               	movwf	measure_freq@count+1,c
  6606                           
  6607                           ;LC-meter.c: 339: return count;
  6608  002138  C009  F003         	movff	measure_freq@count,?_measure_freq
  6609  00213C  C00A  F004         	movff	measure_freq@count+1,?_measure_freq+1
  6610  002140  0012               	return		;funcret
  6611  002142  FFFF               	dw	65535	; errata NOP
  6612  002144                     __end_of_measure_freq:
  6613                           	opt stack 0
  6614                           tosu	equ	0xFFF
  6615                           tosh	equ	0xFFE
  6616                           tosl	equ	0xFFD
  6617                           pclath	equ	0xFFA
  6618                           tblptru	equ	0xFF8
  6619                           tblptrh	equ	0xFF7
  6620                           tblptrl	equ	0xFF6
  6621                           tablat	equ	0xFF5
  6622                           prodh	equ	0xFF4
  6623                           prodl	equ	0xFF3
  6624                           intcon	equ	0xFF2
  6625                           intcon2	equ	0xFF1
  6626                           postinc0	equ	0xFEE
  6627                           wreg	equ	0xFE8
  6628                           indf2	equ	0xFDF
  6629                           postinc2	equ	0xFDE
  6630                           postdec2	equ	0xFDD
  6631                           fsr2h	equ	0xFDA
  6632                           fsr2l	equ	0xFD9
  6633                           status	equ	0xFD8
  6634                           
  6635 ;; *************** function _delay10ms *****************
  6636 ;; Defined at:
  6637 ;;		line 532 in file "../../../src/LC-meter.c"
  6638 ;; Parameters:    Size  Location     Type
  6639 ;;  period_10ms     2    2[COMRAM] unsigned short 
  6640 ;; Auto vars:     Size  Location     Type
  6641 ;;  ms              4    6[COMRAM] unsigned long 
  6642 ;;  run             1   10[COMRAM] unsigned char 
  6643 ;; Return value:  Size  Location     Type
  6644 ;;		None               void
  6645 ;; Registers used:
  6646 ;;		wreg, status,2, status,0, prodl, prodh
  6647 ;; Tracked objects:
  6648 ;;		On entry : 0/0
  6649 ;;		On exit  : F/0
  6650 ;;		Unchanged: 0/0
  6651 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6652 ;;      Params:         2       0       0       0       0       0       0
  6653 ;;      Locals:         5       0       0       0       0       0       0
  6654 ;;      Temps:          2       0       0       0       0       0       0
  6655 ;;      Totals:         9       0       0       0       0       0       0
  6656 ;;Total ram usage:        9 bytes
  6657 ;; Hardware stack levels used:    1
  6658 ;; Hardware stack levels required when called:    1
  6659 ;; This function calls:
  6660 ;;		Nothing
  6661 ;; This function is called by:
  6662 ;;		_main
  6663 ;;		_calibrate
  6664 ;; This function uses a non-reentrant model
  6665 ;;
  6666                           
  6667                           	psect	text37
  6668  00222C                     __ptext37:
  6669                           	opt stack 0
  6670  00222C                     _delay10ms:
  6671                           	opt stack 29
  6672                           
  6673                           ;incstack = 0
  6674  00222C  FFFF               	dw	65535
  6675                           
  6676                           ;LC-meter.c: 536: unsigned long int ms;
  6677                           ;LC-meter.c: 537: BOOL run = 1;
  6678  00222E  0E01               	movlw	1
  6679  002230  6E0B               	movwf	delay10ms@run,c
  6680                           
  6681                           ;LC-meter.c: 539: GIE = 0, ms = msecs, GIE = 1;
  6682  002232  9EF2               	bcf	intcon,7,c	;volatile
  6683  002234  C0DF  F007         	movff	_msecs,delay10ms@ms	;volatile
  6684  002238  C0E0  F008         	movff	_msecs+1,delay10ms@ms+1	;volatile
  6685  00223C  C0E1  F009         	movff	_msecs+2,delay10ms@ms+2	;volatile
  6686  002240  C0E2  F00A         	movff	_msecs+3,delay10ms@ms+3	;volatile
  6687  002244  8EF2               	bsf	intcon,7,c	;volatile
  6688                           
  6689                           ;LC-meter.c: 544: ms += period_10ms * 10;
  6690  002246  0E0A               	movlw	10
  6691  002248  0203               	mulwf	delay10ms@period_10ms,c
  6692  00224A  CFF3 F005          	movff	prodl,??_delay10ms
  6693  00224E  CFF4 F006          	movff	prodh,??_delay10ms+1
  6694  002252  0204               	mulwf	delay10ms@period_10ms+1,c
  6695  002254  50F3               	movf	prodl,w,c
  6696  002256  2606               	addwf	(??_delay10ms+1)& (0+255),f,c
  6697  002258  5005               	movf	??_delay10ms,w,c
  6698  00225A  2607               	addwf	delay10ms@ms,f,c
  6699  00225C  5006               	movf	??_delay10ms+1,w,c
  6700  00225E  2208               	addwfc	delay10ms@ms+1,f,c
  6701  002260  0E00               	movlw	0
  6702  002262  2209               	addwfc	delay10ms@ms+2,f,c
  6703  002264  220A               	addwfc	delay10ms@ms+3,f,c
  6704  002266                     l2593:
  6705  002266  FFFF               	dw	65535	; assembler added errata NOP
  6706                           
  6707                           ;LC-meter.c: 548: GIE = 0;
  6708  002268  9EF2               	bcf	intcon,7,c	;volatile
  6709                           
  6710                           ;LC-meter.c: 549: if(ms <= msecs)
  6711  00226A  5007               	movf	delay10ms@ms,w,c
  6712  00226C  0100               	movlb	0	; () banked
  6713  00226E  5DDF               	subwf	_msecs& (0+255),w,b	;volatile
  6714  002270  5008               	movf	delay10ms@ms+1,w,c
  6715  002272  59E0               	subwfb	(_msecs+1)& (0+255),w,b	;volatile
  6716  002274  5009               	movf	delay10ms@ms+2,w,c
  6717  002276  59E1               	subwfb	(_msecs+2)& (0+255),w,b	;volatile
  6718  002278  500A               	movf	delay10ms@ms+3,w,c
  6719  00227A  59E2               	subwfb	(_msecs+3)& (0+255),w,b	;volatile
  6720  00227C  B0D8               	btfsc	status,0,c
  6721                           
  6722                           ; BSR set to: 0
  6723                           ;LC-meter.c: 550: run = 0;
  6724  00227E  6A0B               	clrf	delay10ms@run,c
  6725                           
  6726                           ; BSR set to: 0
  6727                           ;LC-meter.c: 551: GIE = 1;
  6728  002280  8EF2               	bsf	intcon,7,c	;volatile
  6729                           
  6730                           ; BSR set to: 0
  6731                           ;LC-meter.c: 552: } while(run);
  6732  002282  500B               	movf	delay10ms@run,w,c
  6733  002284  B4D8               	btfsc	status,2,c
  6734                           
  6735                           ; BSR set to: 0
  6736  002286  0012               	return		;funcret
  6737  002288  FFFF               	dw	65535	; assembler added errata NOP
  6738  00228A  D7ED               	goto	l2593
  6739  00228C  FFFF               	dw	65535	; errata NOP
  6740  00228E                     __end_of_delay10ms:
  6741                           	opt stack 0
  6742                           tosu	equ	0xFFF
  6743                           tosh	equ	0xFFE
  6744                           tosl	equ	0xFFD
  6745                           pclath	equ	0xFFA
  6746                           tblptru	equ	0xFF8
  6747                           tblptrh	equ	0xFF7
  6748                           tblptrl	equ	0xFF6
  6749                           tablat	equ	0xFF5
  6750                           prodh	equ	0xFF4
  6751                           prodl	equ	0xFF3
  6752                           intcon	equ	0xFF2
  6753                           intcon2	equ	0xFF1
  6754                           postinc0	equ	0xFEE
  6755                           wreg	equ	0xFE8
  6756                           indf2	equ	0xFDF
  6757                           postinc2	equ	0xFDE
  6758                           postdec2	equ	0xFDD
  6759                           fsr2h	equ	0xFDA
  6760                           fsr2l	equ	0xFD9
  6761                           status	equ	0xFD8
  6762                           
  6763 ;; *************** function ___lwtofl *****************
  6764 ;; Defined at:
  6765 ;;		line 28 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lwtofl.c"
  6766 ;; Parameters:    Size  Location     Type
  6767 ;;  c               2   12[COMRAM] unsigned int 
  6768 ;; Auto vars:     Size  Location     Type
  6769 ;;		None
  6770 ;; Return value:  Size  Location     Type
  6771 ;;                  4   12[COMRAM] unsigned int 
  6772 ;; Registers used:
  6773 ;;		wreg, status,2, status,0, cstack
  6774 ;; Tracked objects:
  6775 ;;		On entry : 0/0
  6776 ;;		On exit  : 0/0
  6777 ;;		Unchanged: 0/0
  6778 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6779 ;;      Params:         4       0       0       0       0       0       0
  6780 ;;      Locals:         0       0       0       0       0       0       0
  6781 ;;      Temps:          0       0       0       0       0       0       0
  6782 ;;      Totals:         4       0       0       0       0       0       0
  6783 ;;Total ram usage:        4 bytes
  6784 ;; Hardware stack levels used:    1
  6785 ;; Hardware stack levels required when called:    2
  6786 ;; This function calls:
  6787 ;;		___flpack
  6788 ;; This function is called by:
  6789 ;;		_calibrate
  6790 ;;		_measure_capacitance
  6791 ;;		_measure_inductance
  6792 ;; This function uses a non-reentrant model
  6793 ;;
  6794                           
  6795                           	psect	text38
  6796  0025B2                     __ptext38:
  6797                           	opt stack 0
  6798  0025B2                     ___lwtofl:
  6799                           	opt stack 27
  6800                           
  6801                           ; BSR set to: 0
  6802                           ;incstack = 0
  6803  0025B2  FFFF               	dw	65535
  6804  0025B4  C00D  F003         	movff	___lwtofl@c,___flpack@arg
  6805  0025B8  C00E  F004         	movff	___lwtofl@c+1,___flpack@arg+1
  6806  0025BC  6A05               	clrf	___flpack@arg+2,c
  6807  0025BE  6A06               	clrf	___flpack@arg+3,c
  6808  0025C0  0E96               	movlw	150
  6809  0025C2  6E07               	movwf	___flpack@exp,c
  6810  0025C4  0E00               	movlw	0
  6811  0025C6  6E08               	movwf	___flpack@sign,c
  6812  0025C8  EC37  F00E         	call	___flpack	;wreg free
  6813  0025CC  C003  F00D         	movff	?___flpack,?___lwtofl
  6814  0025D0  C004  F00E         	movff	?___flpack+1,?___lwtofl+1
  6815  0025D4  C005  F00F         	movff	?___flpack+2,?___lwtofl+2
  6816  0025D8  C006  F010         	movff	?___flpack+3,?___lwtofl+3
  6817  0025DC  0012               	return		;funcret
  6818  0025DE  FFFF               	dw	65535	; errata NOP
  6819  0025E0                     __end_of___lwtofl:
  6820                           	opt stack 0
  6821                           tosu	equ	0xFFF
  6822                           tosh	equ	0xFFE
  6823                           tosl	equ	0xFFD
  6824                           pclath	equ	0xFFA
  6825                           tblptru	equ	0xFF8
  6826                           tblptrh	equ	0xFF7
  6827                           tblptrl	equ	0xFF6
  6828                           tablat	equ	0xFF5
  6829                           prodh	equ	0xFF4
  6830                           prodl	equ	0xFF3
  6831                           intcon	equ	0xFF2
  6832                           intcon2	equ	0xFF1
  6833                           postinc0	equ	0xFEE
  6834                           wreg	equ	0xFE8
  6835                           indf2	equ	0xFDF
  6836                           postinc2	equ	0xFDE
  6837                           postdec2	equ	0xFDD
  6838                           fsr2h	equ	0xFDA
  6839                           fsr2l	equ	0xFD9
  6840                           status	equ	0xFD8
  6841                           
  6842 ;; *************** function ___flpack *****************
  6843 ;; Defined at:
  6844 ;;		line 63 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\double.c"
  6845 ;; Parameters:    Size  Location     Type
  6846 ;;  arg             4    2[COMRAM] unsigned long 
  6847 ;;  exp             1    6[COMRAM] unsigned char 
  6848 ;;  sign            1    7[COMRAM] unsigned char 
  6849 ;; Auto vars:     Size  Location     Type
  6850 ;;		None
  6851 ;; Return value:  Size  Location     Type
  6852 ;;                  4    2[COMRAM] unsigned char 
  6853 ;; Registers used:
  6854 ;;		wreg, status,2, status,0
  6855 ;; Tracked objects:
  6856 ;;		On entry : 0/0
  6857 ;;		On exit  : 0/0
  6858 ;;		Unchanged: 0/0
  6859 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6860 ;;      Params:         6       0       0       0       0       0       0
  6861 ;;      Locals:         0       0       0       0       0       0       0
  6862 ;;      Temps:          4       0       0       0       0       0       0
  6863 ;;      Totals:        10       0       0       0       0       0       0
  6864 ;;Total ram usage:       10 bytes
  6865 ;; Hardware stack levels used:    1
  6866 ;; Hardware stack levels required when called:    1
  6867 ;; This function calls:
  6868 ;;		Nothing
  6869 ;; This function is called by:
  6870 ;;		___altofl
  6871 ;;		___awtofl
  6872 ;;		___fladd
  6873 ;;		___fldiv
  6874 ;;		___flmul
  6875 ;;		___lltofl
  6876 ;;		___lwtofl
  6877 ;; This function uses a non-reentrant model
  6878 ;;
  6879                           
  6880                           	psect	text39
  6881  001C6E                     __ptext39:
  6882                           	opt stack 0
  6883  001C6E                     ___flpack:
  6884                           	opt stack 27
  6885                           
  6886                           ;incstack = 0
  6887  001C6E  FFFF               	dw	65535
  6888  001C70  5007               	movf	___flpack@exp,w,c
  6889  001C72  E005               	bz	l590
  6890  001C74  5003               	movf	___flpack@arg,w,c
  6891  001C76  1004               	iorwf	___flpack@arg+1,w,c
  6892  001C78  1005               	iorwf	___flpack@arg+2,w,c
  6893  001C7A  1006               	iorwf	___flpack@arg+3,w,c
  6894  001C7C  E10C               	bnz	l2021
  6895  001C7E                     l590:
  6896  001C7E  6A03               	clrf	?___flpack,c
  6897  001C80  6A04               	clrf	?___flpack+1,c
  6898  001C82  6A05               	clrf	?___flpack+2,c
  6899  001C84  6A06               	clrf	?___flpack+3,c
  6900  001C86  D05B               	goto	l591
  6901  001C88                     l2019:
  6902  001C88  FFFF               	dw	65535	; assembler added errata NOP
  6903  001C8A  2A07               	incf	___flpack@exp,f,c
  6904  001C8C  90D8               	bcf	status,0,c
  6905  001C8E  3206               	rrcf	___flpack@arg+3,f,c
  6906  001C90  3205               	rrcf	___flpack@arg+2,f,c
  6907  001C92  3204               	rrcf	___flpack@arg+1,f,c
  6908  001C94  3203               	rrcf	___flpack@arg,f,c
  6909  001C96                     l2021:
  6910  001C96  6A09               	clrf	??___flpack& (0+255),c
  6911  001C98  6A0A               	clrf	(??___flpack+1)& (0+255),c
  6912  001C9A  6A0B               	clrf	(??___flpack+2)& (0+255),c
  6913  001C9C  0EFE               	movlw	254
  6914  001C9E  1406               	andwf	___flpack@arg+3,w,c
  6915  001CA0  6E0C               	movwf	(??___flpack+3)& (0+255),c
  6916  001CA2  5009               	movf	??___flpack,w,c
  6917  001CA4  100A               	iorwf	??___flpack+1,w,c
  6918  001CA6  100B               	iorwf	??___flpack+2,w,c
  6919  001CA8  100C               	iorwf	??___flpack+3,w,c
  6920  001CAA  E00D               	bz	l595
  6921  001CAC  D7ED               	goto	l2019
  6922  001CAE                     l2023:
  6923  001CAE  FFFF               	dw	65535	; assembler added errata NOP
  6924  001CB0  2A07               	incf	___flpack@exp,f,c
  6925  001CB2  2A03               	incf	___flpack@arg,f,c
  6926  001CB4  0E00               	movlw	0
  6927  001CB6  2204               	addwfc	___flpack@arg+1,f,c
  6928  001CB8  2205               	addwfc	___flpack@arg+2,f,c
  6929  001CBA  2206               	addwfc	___flpack@arg+3,f,c
  6930  001CBC  90D8               	bcf	status,0,c
  6931  001CBE  3206               	rrcf	___flpack@arg+3,f,c
  6932  001CC0  3205               	rrcf	___flpack@arg+2,f,c
  6933  001CC2  3204               	rrcf	___flpack@arg+1,f,c
  6934  001CC4  3203               	rrcf	___flpack@arg,f,c
  6935  001CC6                     l595:
  6936  001CC6  6A09               	clrf	??___flpack& (0+255),c
  6937  001CC8  6A0A               	clrf	(??___flpack+1)& (0+255),c
  6938  001CCA  6A0B               	clrf	(??___flpack+2)& (0+255),c
  6939  001CCC  5006               	movf	___flpack@arg+3,w,c
  6940  001CCE  6E0C               	movwf	(??___flpack+3)& (0+255),c
  6941  001CD0  5009               	movf	??___flpack,w,c
  6942  001CD2  100A               	iorwf	??___flpack+1,w,c
  6943  001CD4  100B               	iorwf	??___flpack+2,w,c
  6944  001CD6  100C               	iorwf	??___flpack+3,w,c
  6945  001CD8  E008               	bz	l2031
  6946  001CDA  D7E9               	goto	l2023
  6947  001CDC                     l2029:
  6948  001CDC  FFFF               	dw	65535	; assembler added errata NOP
  6949  001CDE  0607               	decf	___flpack@exp,f,c
  6950  001CE0  90D8               	bcf	status,0,c
  6951  001CE2  3603               	rlcf	___flpack@arg,f,c
  6952  001CE4  3604               	rlcf	___flpack@arg+1,f,c
  6953  001CE6  3605               	rlcf	___flpack@arg+2,f,c
  6954  001CE8  3606               	rlcf	___flpack@arg+3,f,c
  6955  001CEA                     l2031:
  6956  001CEA  BE05               	btfsc	___flpack@arg+2,7,c
  6957  001CEC  D003               	goto	l602
  6958  001CEE  0E02               	movlw	2
  6959  001CF0  6007               	cpfslt	___flpack@exp,c
  6960  001CF2  D7F4               	goto	l2029
  6961  001CF4                     l602:
  6962  001CF4  FFFF               	dw	65535	; assembler added errata NOP
  6963  001CF6  B007               	btfsc	___flpack@exp,0,c
  6964  001CF8  D002               	goto	l603
  6965  001CFA  0E7F               	movlw	127
  6966  001CFC  1605               	andwf	___flpack@arg+2,f,c
  6967  001CFE                     l603:
  6968  001CFE  FFFF               	dw	65535	; assembler added errata NOP
  6969  001D00  90D8               	bcf	status,0,c
  6970  001D02  3207               	rrcf	___flpack@exp,f,c
  6971  001D04  C007  F009         	movff	___flpack@exp,??___flpack
  6972  001D08  6A0A               	clrf	(??___flpack+1)& (0+255),c
  6973  001D0A  6A0B               	clrf	(??___flpack+2)& (0+255),c
  6974  001D0C  6A0C               	clrf	(??___flpack+3)& (0+255),c
  6975  001D0E  C009  F00C         	movff	??___flpack,??___flpack+3
  6976  001D12  6A0B               	clrf	??___flpack+2,c
  6977  001D14  6A0A               	clrf	??___flpack+1,c
  6978  001D16  6A09               	clrf	??___flpack,c
  6979  001D18  5009               	movf	??___flpack,w,c
  6980  001D1A  1203               	iorwf	___flpack@arg,f,c
  6981  001D1C  500A               	movf	??___flpack+1,w,c
  6982  001D1E  1204               	iorwf	___flpack@arg+1,f,c
  6983  001D20  500B               	movf	??___flpack+2,w,c
  6984  001D22  1205               	iorwf	___flpack@arg+2,f,c
  6985  001D24  500C               	movf	??___flpack+3,w,c
  6986  001D26  1206               	iorwf	___flpack@arg+3,f,c
  6987  001D28  5008               	movf	___flpack@sign,w,c
  6988  001D2A  A4D8               	btfss	status,2,c
  6989  001D2C  8E06               	bsf	___flpack@arg+3,7,c
  6990  001D2E  C003  F003         	movff	___flpack@arg,?___flpack
  6991  001D32  C004  F004         	movff	___flpack@arg+1,?___flpack+1
  6992  001D36  C005  F005         	movff	___flpack@arg+2,?___flpack+2
  6993  001D3A  C006  F006         	movff	___flpack@arg+3,?___flpack+3
  6994  001D3E                     l591:
  6995  001D3E  FFFF               	dw	65535	; assembler added errata NOP
  6996  001D40  0012               	return		;funcret
  6997  001D42  FFFF               	dw	65535	; errata NOP
  6998  001D44                     __end_of___flpack:
  6999                           	opt stack 0
  7000                           tosu	equ	0xFFF
  7001                           tosh	equ	0xFFE
  7002                           tosl	equ	0xFFD
  7003                           pclath	equ	0xFFA
  7004                           tblptru	equ	0xFF8
  7005                           tblptrh	equ	0xFF7
  7006                           tblptrl	equ	0xFF6
  7007                           tablat	equ	0xFF5
  7008                           prodh	equ	0xFF4
  7009                           prodl	equ	0xFF3
  7010                           intcon	equ	0xFF2
  7011                           intcon2	equ	0xFF1
  7012                           postinc0	equ	0xFEE
  7013                           wreg	equ	0xFE8
  7014                           indf2	equ	0xFDF
  7015                           postinc2	equ	0xFDE
  7016                           postdec2	equ	0xFDD
  7017                           fsr2h	equ	0xFDA
  7018                           fsr2l	equ	0xFD9
  7019                           status	equ	0xFD8
  7020                           
  7021 ;; *************** function _isr *****************
  7022 ;; Defined at:
  7023 ;;		line 79 in file "../../../src/LC-meter.c"
  7024 ;; Parameters:    Size  Location     Type
  7025 ;;		None
  7026 ;; Auto vars:     Size  Location     Type
  7027 ;;		None
  7028 ;; Return value:  Size  Location     Type
  7029 ;;                  2  297[None  ] int 
  7030 ;; Registers used:
  7031 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7032 ;; Tracked objects:
  7033 ;;		On entry : 0/0
  7034 ;;		On exit  : 0/0
  7035 ;;		Unchanged: 0/0
  7036 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7037 ;;      Params:         0       0       0       0       0       0       0
  7038 ;;      Locals:         0       0       0       0       0       0       0
  7039 ;;      Temps:          2       0       0       0       0       0       0
  7040 ;;      Totals:         2       0       0       0       0       0       0
  7041 ;;Total ram usage:        2 bytes
  7042 ;; Hardware stack levels used:    1
  7043 ;; This function calls:
  7044 ;;		Nothing
  7045 ;; This function is called by:
  7046 ;;		Interrupt level 2
  7047 ;; This function uses a non-reentrant model
  7048 ;;
  7049                           
  7050                           	psect	intcode
  7051  000008                     __pintcode:
  7052                           	opt stack 0
  7053  000008                     _isr:
  7054                           	opt stack 23
  7055                           
  7056                           ;incstack = 0
  7057  000008  FFFF               	dw	65535	; errata NOP
  7058  00000A  CFD9 F001          	movff	fsr2l,??_isr
  7059  00000E  CFDA F002          	movff	fsr2h,??_isr+1
  7060                           
  7061                           ;LC-meter.c: 81: if(TMR2IF) {
  7062  000012  A29E               	btfss	3998,1,c	;volatile
  7063  000014  D036               	goto	i2l2871
  7064                           
  7065                           ;LC-meter.c: 83: bres += 256;
  7066  000016  0100               	movlb	0	; () banked
  7067  000018  2BF7               	incf	(_bres+1)& (0+255),f,b	;volatile
  7068                           
  7069                           ;LC-meter.c: 85: if(bres >= 5000) {
  7070  00001A  0E88               	movlw	136
  7071  00001C  5DF6               	subwf	_bres& (0+255),w,b	;volatile
  7072  00001E  0E13               	movlw	19
  7073  000020  59F7               	subwfb	(_bres+1)& (0+255),w,b	;volatile
  7074  000022  E32E               	bnc	i2l2869
  7075                           
  7076                           ; BSR set to: 0
  7077                           ;LC-meter.c: 86: bres -= 5000;
  7078  000024  0E88               	movlw	136
  7079  000026  5FF6               	subwf	_bres& (0+255),f,b	;volatile
  7080  000028  0E13               	movlw	19
  7081  00002A  5BF7               	subwfb	(_bres+1)& (0+255),f,b	;volatile
  7082                           
  7083                           ; BSR set to: 0
  7084                           ;LC-meter.c: 87: msecpart++;
  7085  00002C  4BF8               	infsnz	_msecpart& (0+255),f,b	;volatile
  7086  00002E  2BF9               	incf	(_msecpart+1)& (0+255),f,b	;volatile
  7087                           
  7088                           ; BSR set to: 0
  7089                           ;LC-meter.c: 88: msecs++;
  7090  000030  2BDF               	incf	_msecs& (0+255),f,b	;volatile
  7091  000032  0E00               	movlw	0
  7092  000034  23E0               	addwfc	(_msecs+1)& (0+255),f,b	;volatile
  7093  000036  23E1               	addwfc	(_msecs+2)& (0+255),f,b	;volatile
  7094  000038  23E2               	addwfc	(_msecs+3)& (0+255),f,b	;volatile
  7095                           
  7096                           ; BSR set to: 0
  7097                           ;LC-meter.c: 90: RC3 = (((blink > 200)) == 0);
  7098  00003A  51EC               	movf	(_blink+1)& (0+255),w,b
  7099  00003C  E105               	bnz	i2u239_40
  7100  00003E  0EC9               	movlw	201
  7101  000040  5DEB               	subwf	_blink& (0+255),w,b
  7102  000042  E202               	bc	i2u239_40
  7103  000044  8682               	bsf	3970,3,c	;volatile
  7104  000046  D001               	goto	i2l2859
  7105  000048                     i2u239_40:
  7106  000048  9682               	bcf	3970,3,c	;volatile
  7107  00004A                     i2l2859:
  7108  00004A  FFFF               	dw	65535	; assembler added errata NOP
  7109                           
  7110                           ;LC-meter.c: 91: if(blink >= 400)
  7111  00004C  0E90               	movlw	144
  7112  00004E  0100               	movlb	0	; () banked
  7113  000050  5DEB               	subwf	_blink& (0+255),w,b
  7114  000052  0E01               	movlw	1
  7115  000054  59EC               	subwfb	(_blink+1)& (0+255),w,b
  7116  000056  E304               	bnc	i2l2863
  7117                           
  7118                           ; BSR set to: 0
  7119                           ;LC-meter.c: 92: blink -= 400;
  7120  000058  0E90               	movlw	144
  7121  00005A  5FEB               	subwf	_blink& (0+255),f,b
  7122  00005C  0E01               	movlw	1
  7123  00005E  5BEC               	subwfb	(_blink+1)& (0+255),f,b
  7124  000060                     i2l2863:
  7125                           
  7126                           ; BSR set to: 0
  7127                           ;LC-meter.c: 93: ++blink;
  7128  000060  4BEB               	infsnz	_blink& (0+255),f,b
  7129  000062  2BEC               	incf	(_blink+1)& (0+255),f,b
  7130                           
  7131                           ; BSR set to: 0
  7132                           ;LC-meter.c: 96: if(msecpart >= 1000) {
  7133  000064  0EE8               	movlw	232
  7134  000066  5DF8               	subwf	_msecpart& (0+255),w,b	;volatile
  7135  000068  0E03               	movlw	3
  7136  00006A  59F9               	subwfb	(_msecpart+1)& (0+255),w,b	;volatile
  7137  00006C  E309               	bnc	i2l2869
  7138                           
  7139                           ; BSR set to: 0
  7140                           ;LC-meter.c: 98: seconds++;
  7141  00006E  2BE3               	incf	_seconds& (0+255),f,b	;volatile
  7142  000070  0E00               	movlw	0
  7143  000072  23E4               	addwfc	(_seconds+1)& (0+255),f,b	;volatile
  7144  000074  23E5               	addwfc	(_seconds+2)& (0+255),f,b	;volatile
  7145  000076  23E6               	addwfc	(_seconds+3)& (0+255),f,b	;volatile
  7146                           
  7147                           ;LC-meter.c: 99: msecpart -= 1000;
  7148  000078  0EE8               	movlw	232
  7149  00007A  5FF8               	subwf	_msecpart& (0+255),f,b	;volatile
  7150  00007C  0E03               	movlw	3
  7151  00007E  5BF9               	subwfb	(_msecpart+1)& (0+255),f,b	;volatile
  7152  000080                     i2l2869:
  7153                           
  7154                           ; BSR set to: 0
  7155                           ;LC-meter.c: 100: }
  7156                           ;LC-meter.c: 101: }
  7157                           ;LC-meter.c: 103: TMR2IF = 0;
  7158  000080  929E               	bcf	3998,1,c	;volatile
  7159  000082                     i2l2871:
  7160  000082  FFFF               	dw	65535	; assembler added errata NOP
  7161                           
  7162                           ;LC-meter.c: 104: }
  7163                           ;LC-meter.c: 106: if(RCIF) { rxfifo[rxiptr] = RCREG; ser_tmp = (rxiptr + 1) & ((unsigned
      +                           char)16 - 1); if(ser_tmp != rxoptr) rxiptr = ser_tmp; }; if(TXIF && TXIE) { TXREG = txf
      +                          ifo[txoptr]; ++txoptr; txoptr &= ((unsigned char)16 - 1); if(txoptr == txiptr) { TXIE = 
      +                          0; }
  7164  000084  AA9E               	btfss	3998,5,c	;volatile
  7165  000086  D011               	goto	i2l302
  7166  000088  0E00               	movlw	low _rxfifo
  7167  00008A  2476               	addwf	_rxiptr,w,c	;volatile
  7168  00008C  6ED9               	movwf	fsr2l,c
  7169  00008E  6ADA               	clrf	fsr2h,c
  7170  000090  0E01               	movlw	high _rxfifo
  7171  000092  22DA               	addwfc	fsr2h,f,c
  7172  000094  CFAE FFDF          	movff	4014,indf2	;volatile
  7173  000098  2876               	incf	_rxiptr,w,c	;volatile
  7174  00009A  0B0F               	andlw	15
  7175  00009C  0100               	movlb	0	; () banked
  7176  00009E  6FED               	movwf	_ser_tmp& (0+255),b
  7177                           
  7178                           ; BSR set to: 0
  7179  0000A0  5077               	movf	_rxoptr,w,c	;volatile
  7180  0000A2  19ED               	xorwf	_ser_tmp& (0+255),w,b
  7181  0000A4  A4D8               	btfss	status,2,c
  7182                           
  7183                           ; BSR set to: 0
  7184  0000A6  C0ED  F076         	movff	_ser_tmp,_rxiptr	;volatile
  7185  0000AA                     i2l302:
  7186  0000AA  FFFF               	dw	65535	; assembler added errata NOP
  7187  0000AC  B89E               	btfsc	3998,4,c	;volatile
  7188  0000AE  A89D               	btfss	3997,4,c	;volatile
  7189  0000B0  D00E               	goto	i2l306
  7190  0000B2  5079               	movf	_txoptr,w,c
  7191  0000B4  0FC7               	addlw	low _txfifo
  7192  0000B6  6ED9               	movwf	fsr2l,c
  7193  0000B8  6ADA               	clrf	fsr2h,c
  7194  0000BA  50DF               	movf	indf2,w,c
  7195  0000BC  6EAD               	movwf	4013,c	;volatile
  7196  0000BE  2A79               	incf	_txoptr,f,c	;volatile
  7197  0000C0  0E0F               	movlw	15
  7198  0000C2  1679               	andwf	_txoptr,f,c	;volatile
  7199  0000C4  5078               	movf	_txiptr,w,c	;volatile
  7200  0000C6  1879               	xorwf	_txoptr,w,c	;volatile
  7201  0000C8  B4D8               	btfsc	status,2,c
  7202  0000CA  989D               	bcf	3997,4,c	;volatile
  7203  0000CC  989E               	bcf	3998,4,c	;volatile
  7204  0000CE                     i2l306:
  7205  0000CE  FFFF               	dw	65535	; assembler added errata NOP
  7206  0000D0  C002  FFDA         	movff	??_isr+1,fsr2h
  7207  0000D4  C001  FFD9         	movff	??_isr,fsr2l
  7208  0000D8  0011               	retfie		f
  7209  0000DA  FFFF               	dw	65535	; errata NOP
  7210  0000DC                     __end_of_isr:
  7211                           	opt stack 0
  7212                           tosu	equ	0xFFF
  7213                           tosh	equ	0xFFE
  7214                           tosl	equ	0xFFD
  7215                           pclath	equ	0xFFA
  7216                           tblptru	equ	0xFF8
  7217                           tblptrh	equ	0xFF7
  7218                           tblptrl	equ	0xFF6
  7219                           tablat	equ	0xFF5
  7220                           prodh	equ	0xFF4
  7221                           prodl	equ	0xFF3
  7222                           intcon	equ	0xFF2
  7223                           intcon2	equ	0xFF1
  7224                           postinc0	equ	0xFEE
  7225                           wreg	equ	0xFE8
  7226                           indf2	equ	0xFDF
  7227                           postinc2	equ	0xFDE
  7228                           postdec2	equ	0xFDD
  7229                           fsr2h	equ	0xFDA
  7230                           fsr2l	equ	0xFD9
  7231                           status	equ	0xFD8
  7232                           tosu	equ	0xFFF
  7233                           tosh	equ	0xFFE
  7234                           tosl	equ	0xFFD
  7235                           pclath	equ	0xFFA
  7236                           tblptru	equ	0xFF8
  7237                           tblptrh	equ	0xFF7
  7238                           tblptrl	equ	0xFF6
  7239                           tablat	equ	0xFF5
  7240                           prodh	equ	0xFF4
  7241                           prodl	equ	0xFF3
  7242                           intcon	equ	0xFF2
  7243                           intcon2	equ	0xFF1
  7244                           postinc0	equ	0xFEE
  7245                           wreg	equ	0xFE8
  7246                           indf2	equ	0xFDF
  7247                           postinc2	equ	0xFDE
  7248                           postdec2	equ	0xFDD
  7249                           fsr2h	equ	0xFDA
  7250                           fsr2l	equ	0xFD9
  7251                           status	equ	0xFD8
  7252                           
  7253                           	psect	rparam
  7254  0000                     tosu	equ	0xFFF
  7255                           tosh	equ	0xFFE
  7256                           tosl	equ	0xFFD
  7257                           pclath	equ	0xFFA
  7258                           tblptru	equ	0xFF8
  7259                           tblptrh	equ	0xFF7
  7260                           tblptrl	equ	0xFF6
  7261                           tablat	equ	0xFF5
  7262                           prodh	equ	0xFF4
  7263                           prodl	equ	0xFF3
  7264                           intcon	equ	0xFF2
  7265                           intcon2	equ	0xFF1
  7266                           postinc0	equ	0xFEE
  7267                           wreg	equ	0xFE8
  7268                           indf2	equ	0xFDF
  7269                           postinc2	equ	0xFDE
  7270                           postdec2	equ	0xFDD
  7271                           fsr2h	equ	0xFDA
  7272                           fsr2l	equ	0xFD9
  7273                           status	equ	0xFD8


Data Sizes:
    Strings     42
    Constant    76
    Data        2
    BSS         63
    Persistent  8
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127    117     123
    BANK0           128     71     122
    BANK1           256      0      16
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    eval_poly@d	PTR const  size(1) Largest target is 40
		 -> exp@coeff(CODE[40]), log@coeff(CODE[36]), 

    frexp@eptr	PTR int  size(1) Largest target is 2
		 -> log@exponent(COMRAM[2]), floor@expon(COMRAM[2]), 

    putchar_ptr	PTR FTN(unsigned char ,)void  size(2) Largest target is 0
		 -> output_putch(), format_putchar(), ser_putch(), 

    ser_puts@s	PTR const unsigned char  size(1) Largest target is 8
		 -> STR_11(CODE[3]), STR_10(CODE[5]), STR_9(CODE[3]), STR_8(CODE[8]), 
		 -> STR_7(CODE[6]), STR_6(CODE[6]), STR_5(CODE[6]), STR_4(CODE[5]), 
		 -> STR_3(CODE[3]), STR_2(CODE[3]), STR_1(CODE[6]), 


Critical Paths under _main in COMRAM

    _measure_inductance->___fltol
    _format_xint32->_format_number
    _format_number->___lwdiv
    _format_double->_floor
    _exp->_floor
    _ldexp->_eval_poly
    _floor->___altofl
    ___fltol->_log10
    ___altofl->___fltol
    ___flsub->___fladd
    ___fldiv->___flpack
    ___lltofl->___flpack
    _output_putch->_ser_putch
    _log10->_log
    _log->_eval_poly
    _eval_poly->___fladd
    ___flmul->___fldiv
    ___fladd->___flmul
    ___awtofl->___flpack
    _calibrate->___lwtofl
    _ser_puts->_ser_putch
    ___lwtofl->___flpack

Critical Paths under _isr in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_measure_capacitance
    _measure_capacitance->_format_double
    _format_double->_pow
    _pow->_exp

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _isr in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0  164319
                          _calibrate
                          _delay10ms
                          _indicator
                _measure_capacitance
                 _measure_inductance
                           _ser_init
                           _ser_puts
                        _timer2_init
 ---------------------------------------------------------------------------------
 (1) _timer2_init                                          4     4      0     156
                                              2 COMRAM     4     4      0
 ---------------------------------------------------------------------------------
 (1) _ser_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _measure_inductance                                  55    55      0   18288
                                              0 BANK0     43    43      0
                            ___fldiv
                             ___flge
                            ___flmul
                            ___flsub
                            ___fltol
                           ___lwtofl
                       _measure_freq
                      _print_reading
                         _print_unit
 ---------------------------------------------------------------------------------
 (1) _measure_capacitance                                 19    19      0  141649
                                             52 BANK0     19    19      0
                            ___fldiv
                             ___flge
                            ___flmul
                            ___flsub
                            ___fltol
                           ___lwtofl
                      _format_double
                      _format_xint32
                       _measure_freq
                      _print_reading
                         _print_unit
                          _ser_putch
                           _ser_puts
 ---------------------------------------------------------------------------------
 (2) _print_unit                                           1     1      0       0
 ---------------------------------------------------------------------------------
 (2) _print_reading                                        2     0      2     106
                                              2 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _format_xint32                                        4     0      4    1919
                                             52 COMRAM     4     0      4
                      _format_number
                     _format_putchar *
                       _output_putch *
                          _ser_putch *
 ---------------------------------------------------------------------------------
 (3) _format_number                                       43    39      4    1490
                                              9 COMRAM    43    39      4
                            ___lwdiv
                            ___lwmod
                     _format_putchar *
                       _output_putch *
                          _ser_putch *
 ---------------------------------------------------------------------------------
 (4) ___lwmod                                              5     1      4     265
                                              2 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (4) ___lwdiv                                              7     3      4     268
                                              2 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (2) _format_double                                       20    16      4  121154
                                             32 BANK0     20    16      4
                           ___awtofl
                            ___fldiv
                             ___flge
                            ___flmul
                            ___flsub
                            ___fltol
                              _floor
                     _format_putchar *
                              _log10
                       _output_putch *
                                _pow
                          _ser_putch *
 ---------------------------------------------------------------------------------
 (3) _pow                                                 21    13      8   67924
                                             11 BANK0     21    13      8
                             ___flge
                            ___flmul
                            ___flneg
                            ___fltol
                           ___lltofl
                                _exp
                                _log
 ---------------------------------------------------------------------------------
 (4) _exp                                                 11     7      4   36209
                                              0 BANK0     11     7      4
                           ___awtofl
                            ___fldiv
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                          _eval_poly
                              _floor
                              _ldexp
                                _log (ARG)
 ---------------------------------------------------------------------------------
 (5) _ldexp                                                8     2      6     354
                                             78 COMRAM     8     2      6
                          _eval_poly (ARG)
 ---------------------------------------------------------------------------------
 (5) _floor                                               10     6      4    8349
                                            107 COMRAM    10     6      4
                           ___altofl
                            ___fladd
                            ___fldiv (ARG)
                             ___flge
                            ___fltol
                              _frexp
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             10     6      4     680
                                             92 COMRAM    10     6      4
                            ___fldiv (ARG)
                              _log10 (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flge                                               8     0      8    1594
                                              2 COMRAM     8     0      8
 ---------------------------------------------------------------------------------
 (6) ___altofl                                             5     1      4    1968
                                            102 COMRAM     5     1      4
                           ___flpack
                            ___fltol (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flsub                                              8     0      8    4137
                                             66 COMRAM     8     0      8
                           ___awtofl (ARG)
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (5) ___flneg                                              4     0      4     204
                                              2 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (2) ___fldiv                                             15     7      8    3219
                                             12 COMRAM    15     7      8
                           ___flpack
 ---------------------------------------------------------------------------------
 (4) ___lltofl                                             4     0      4    1899
                                             12 COMRAM     4     0      4
                           ___flpack
 ---------------------------------------------------------------------------------
 (3) _output_putch                                         1     1      0      44
                                              3 COMRAM     1     1      0
                          _ser_putch
 ---------------------------------------------------------------------------------
 (3) _log10                                                8     4      4   26739
                                             84 COMRAM     8     4      4
                            ___flmul
                                _log
 ---------------------------------------------------------------------------------
 (4) _log                                                  6     2      4   21040
                                             78 COMRAM     6     2      4
                           ___awtofl
                            ___fladd
                            ___flmul
                          _eval_poly
                              _frexp
 ---------------------------------------------------------------------------------
 (5) _frexp                                                7     2      5     436
                                              2 COMRAM     7     2      5
 ---------------------------------------------------------------------------------
 (5) _eval_poly                                           12     5      7    9331
                                             66 COMRAM    12     5      7
                            ___fladd
                            ___flmul
 ---------------------------------------------------------------------------------
 (2) ___flmul                                             28    20      8    5561
                                             27 COMRAM    27    19      8
                           ___awtofl (ARG)
                            ___fldiv (ARG)
                           ___flpack
                              _frexp (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fladd                                             12     4      8    3274
                                             54 COMRAM    12     4      8
                           ___awtofl (ARG)
                            ___flmul (ARG)
                           ___flpack
                              _frexp (ARG)
 ---------------------------------------------------------------------------------
 (5) ___awtofl                                             9     5      4    2167
                                             12 COMRAM     5     1      4
                           ___flpack
 ---------------------------------------------------------------------------------
 (3) _format_putchar                                       1     1      0       0
 ---------------------------------------------------------------------------------
 (1) _indicator                                            1     1      0       0
 ---------------------------------------------------------------------------------
 (1) _calibrate                                            1     1      0    3275
                           ___lwtofl
                          _delay10ms
                       _measure_freq
                           _ser_puts
 ---------------------------------------------------------------------------------
 (1) _ser_puts                                             1     1      0     364
                                              3 COMRAM     1     1      0
                          _ser_putch
 ---------------------------------------------------------------------------------
 (2) _ser_putch                                            1     1      0      22
                                              2 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _measure_freq                                         8     6      2     160
                                              2 COMRAM     8     6      2
 ---------------------------------------------------------------------------------
 (1) _delay10ms                                            9     7      2     587
                                              2 COMRAM     9     7      2
 ---------------------------------------------------------------------------------
 (2) ___lwtofl                                             4     0      4    2164
                                             12 COMRAM     4     0      4
                           ___flpack
                       _measure_freq (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flpack                                            10     4      6    1824
                                              2 COMRAM    10     4      6
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (8) _isr                                                  2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _calibrate
     ___lwtofl
       ___flpack
       _measure_freq (ARG)
     _delay10ms
     _measure_freq
     _ser_puts
       _ser_putch
   _delay10ms
   _indicator
   _measure_capacitance
     ___fldiv
       ___flpack
     ___flge
     ___flmul
       ___awtofl (ARG)
         ___flpack
       ___fldiv (ARG)
         ___flpack
       ___flpack (ARG)
       _frexp (ARG)
     ___flsub
       ___awtofl (ARG)
         ___flpack
       ___fladd (ARG)
         ___awtofl (ARG)
           ___flpack
         ___flmul (ARG)
           ___awtofl (ARG)
             ___flpack
           ___fldiv (ARG)
             ___flpack
           ___flpack (ARG)
           _frexp (ARG)
         ___flpack (ARG)
         _frexp (ARG)
       ___flmul (ARG)
         ___awtofl (ARG)
           ___flpack
         ___fldiv (ARG)
           ___flpack
         ___flpack (ARG)
         _frexp (ARG)
     ___fltol
       ___fldiv (ARG)
         ___flpack
       _log10 (ARG)
         ___flmul
           ___awtofl (ARG)
             ___flpack
           ___fldiv (ARG)
             ___flpack
           ___flpack (ARG)
           _frexp (ARG)
         _log
           ___awtofl
             ___flpack
           ___fladd
             ___awtofl (ARG)
               ___flpack
             ___flmul (ARG)
               ___awtofl (ARG)
                 ___flpack
               ___fldiv (ARG)
                 ___flpack
               ___flpack (ARG)
               _frexp (ARG)
             ___flpack (ARG)
             _frexp (ARG)
           ___flmul
             ___awtofl (ARG)
               ___flpack
             ___fldiv (ARG)
               ___flpack
             ___flpack (ARG)
             _frexp (ARG)
           _eval_poly
             ___fladd
               ___awtofl (ARG)
                 ___flpack
               ___flmul (ARG)
                 ___awtofl (ARG)
                   ___flpack
                 ___fldiv (ARG)
                   ___flpack
                 ___flpack (ARG)
                 _frexp (ARG)
               ___flpack (ARG)
               _frexp (ARG)
             ___flmul
               ___awtofl (ARG)
                 ___flpack
               ___fldiv (ARG)
                 ___flpack
               ___flpack (ARG)
               _frexp (ARG)
           _frexp
     ___lwtofl
       ___flpack
       _measure_freq (ARG)
     _format_double
       ___awtofl
         ___flpack
       ___fldiv
         ___flpack
       ___flge
       ___flmul
         ___awtofl (ARG)
           ___flpack
         ___fldiv (ARG)
           ___flpack
         ___flpack (ARG)
         _frexp (ARG)
       ___flsub
         ___awtofl (ARG)
           ___flpack
         ___fladd (ARG)
           ___awtofl (ARG)
             ___flpack
           ___flmul (ARG)
             ___awtofl (ARG)
               ___flpack
             ___fldiv (ARG)
               ___flpack
             ___flpack (ARG)
             _frexp (ARG)
           ___flpack (ARG)
           _frexp (ARG)
         ___flmul (ARG)
           ___awtofl (ARG)
             ___flpack
           ___fldiv (ARG)
             ___flpack
           ___flpack (ARG)
           _frexp (ARG)
       ___fltol
         ___fldiv (ARG)
           ___flpack
         _log10 (ARG)
           ___flmul
             ___awtofl (ARG)
               ___flpack
             ___fldiv (ARG)
               ___flpack
             ___flpack (ARG)
             _frexp (ARG)
           _log
             ___awtofl
               ___flpack
             ___fladd
               ___awtofl (ARG)
                 ___flpack
               ___flmul (ARG)
                 ___awtofl (ARG)
                   ___flpack
                 ___fldiv (ARG)
                   ___flpack
                 ___flpack (ARG)
                 _frexp (ARG)
               ___flpack (ARG)
               _frexp (ARG)
             ___flmul
               ___awtofl (ARG)
                 ___flpack
               ___fldiv (ARG)
                 ___flpack
               ___flpack (ARG)
               _frexp (ARG)
             _eval_poly
               ___fladd
                 ___awtofl (ARG)
                   ___flpack
                 ___flmul (ARG)
                   ___awtofl (ARG)
                     ___flpack
                   ___fldiv (ARG)
                     ___flpack
                   ___flpack (ARG)
                   _frexp (ARG)
                 ___flpack (ARG)
                 _frexp (ARG)
               ___flmul
                 ___awtofl (ARG)
                   ___flpack
                 ___fldiv (ARG)
                   ___flpack
                 ___flpack (ARG)
                 _frexp (ARG)
             _frexp
       _floor
         ___altofl
           ___flpack
           ___fltol (ARG)
             ___fldiv (ARG)
               ___flpack
             _log10 (ARG)
               ___flmul
                 ___awtofl (ARG)
                   ___flpack
                 ___fldiv (ARG)
                   ___flpack
                 ___flpack (ARG)
                 _frexp (ARG)
               _log
                 ___awtofl
                   ___flpack
                 ___fladd
                   ___awtofl (ARG)
                     ___flpack
                   ___flmul (ARG)
                     ___awtofl (ARG)
                       ___flpack
                     ___fldiv (ARG)
                       ___flpack
                     ___flpack (ARG)
                     _frexp (ARG)
                   ___flpack (ARG)
                   _frexp (ARG)
                 ___flmul
                   ___awtofl (ARG)
                     ___flpack
                   ___fldiv (ARG)
                     ___flpack
                   ___flpack (ARG)
                   _frexp (ARG)
                 _eval_poly
                   ___fladd
                     ___awtofl (ARG)
                       ___flpack
                     ___flmul (ARG)
                       ___awtofl (ARG)
                         ___flpack
                       ___fldiv (ARG)
                         ___flpack
                       ___flpack (ARG)
                       _frexp (ARG)
                     ___flpack (ARG)
                     _frexp (ARG)
                   ___flmul
                     ___awtofl (ARG)
                       ___flpack
                     ___fldiv (ARG)
                       ___flpack
                     ___flpack (ARG)
                     _frexp (ARG)
                 _frexp
         ___fladd
           ___awtofl (ARG)
             ___flpack
           ___flmul (ARG)
             ___awtofl (ARG)
               ___flpack
             ___fldiv (ARG)
               ___flpack
             ___flpack (ARG)
             _frexp (ARG)
           ___flpack (ARG)
           _frexp (ARG)
         ___fldiv (ARG)
           ___flpack
         ___flge (ARG)
         ___fltol (ARG)
           ___fldiv (ARG)
             ___flpack
           _log10 (ARG)
             ___flmul
               ___awtofl (ARG)
                 ___flpack
               ___fldiv (ARG)
                 ___flpack
               ___flpack (ARG)
               _frexp (ARG)
             _log
               ___awtofl
                 ___flpack
               ___fladd
                 ___awtofl (ARG)
                   ___flpack
                 ___flmul (ARG)
                   ___awtofl (ARG)
                     ___flpack
                   ___fldiv (ARG)
                     ___flpack
                   ___flpack (ARG)
                   _frexp (ARG)
                 ___flpack (ARG)
                 _frexp (ARG)
               ___flmul
                 ___awtofl (ARG)
                   ___flpack
                 ___fldiv (ARG)
                   ___flpack
                 ___flpack (ARG)
                 _frexp (ARG)
               _eval_poly
                 ___fladd
                   ___awtofl (ARG)
                     ___flpack
                   ___flmul (ARG)
                     ___awtofl (ARG)
                       ___flpack
                     ___fldiv (ARG)
                       ___flpack
                     ___flpack (ARG)
                     _frexp (ARG)
                   ___flpack (ARG)
                   _frexp (ARG)
                 ___flmul
                   ___awtofl (ARG)
                     ___flpack
                   ___fldiv (ARG)
                     ___flpack
                   ___flpack (ARG)
                   _frexp (ARG)
               _frexp
         _frexp (ARG)
       _format_putchar *
       _log10 *
         ___flmul
           ___awtofl (ARG)
             ___flpack
           ___fldiv (ARG)
             ___flpack
           ___flpack (ARG)
           _frexp (ARG)
         _log
           ___awtofl
             ___flpack
           ___fladd
             ___awtofl (ARG)
               ___flpack
             ___flmul (ARG)
               ___awtofl (ARG)
                 ___flpack
               ___fldiv (ARG)
                 ___flpack
               ___flpack (ARG)
               _frexp (ARG)
             ___flpack (ARG)
             _frexp (ARG)
           ___flmul
             ___awtofl (ARG)
               ___flpack
             ___fldiv (ARG)
               ___flpack
             ___flpack (ARG)
             _frexp (ARG)
           _eval_poly
             ___fladd
               ___awtofl (ARG)
                 ___flpack
               ___flmul (ARG)
                 ___awtofl (ARG)
                   ___flpack
                 ___fldiv (ARG)
                   ___flpack
                 ___flpack (ARG)
                 _frexp (ARG)
               ___flpack (ARG)
               _frexp (ARG)
             ___flmul
               ___awtofl (ARG)
                 ___flpack
               ___fldiv (ARG)
                 ___flpack
               ___flpack (ARG)
               _frexp (ARG)
           _frexp
       _output_putch *
         _ser_putch
       _pow *
         ___flge
         ___flmul
           ___awtofl (ARG)
             ___flpack
           ___fldiv (ARG)
             ___flpack
           ___flpack (ARG)
           _frexp (ARG)
         ___flneg
         ___fltol
           ___fldiv (ARG)
             ___flpack
           _log10 (ARG)
             ___flmul
               ___awtofl (ARG)
                 ___flpack
               ___fldiv (ARG)
                 ___flpack
               ___flpack (ARG)
               _frexp (ARG)
             _log
               ___awtofl
                 ___flpack
               ___fladd
                 ___awtofl (ARG)
                   ___flpack
                 ___flmul (ARG)
                   ___awtofl (ARG)
                     ___flpack
                   ___fldiv (ARG)
                     ___flpack
                   ___flpack (ARG)
                   _frexp (ARG)
                 ___flpack (ARG)
                 _frexp (ARG)
               ___flmul
                 ___awtofl (ARG)
                   ___flpack
                 ___fldiv (ARG)
                   ___flpack
                 ___flpack (ARG)
                 _frexp (ARG)
               _eval_poly
                 ___fladd
                   ___awtofl (ARG)
                     ___flpack
                   ___flmul (ARG)
                     ___awtofl (ARG)
                       ___flpack
                     ___fldiv (ARG)
                       ___flpack
                     ___flpack (ARG)
                     _frexp (ARG)
                   ___flpack (ARG)
                   _frexp (ARG)
                 ___flmul
                   ___awtofl (ARG)
                     ___flpack
                   ___fldiv (ARG)
                     ___flpack
                   ___flpack (ARG)
                   _frexp (ARG)
               _frexp
         ___lltofl
           ___flpack
         _exp
           ___awtofl
             ___flpack
           ___fldiv
             ___flpack
           ___flge
           ___flmul
             ___awtofl (ARG)
               ___flpack
             ___fldiv (ARG)
               ___flpack
             ___flpack (ARG)
             _frexp (ARG)
           ___flneg
           ___flsub
             ___awtofl (ARG)
               ___flpack
             ___fladd (ARG)
               ___awtofl (ARG)
                 ___flpack
               ___flmul (ARG)
                 ___awtofl (ARG)
                   ___flpack
                 ___fldiv (ARG)
                   ___flpack
                 ___flpack (ARG)
                 _frexp (ARG)
               ___flpack (ARG)
               _frexp (ARG)
             ___flmul (ARG)
               ___awtofl (ARG)
                 ___flpack
               ___fldiv (ARG)
                 ___flpack
               ___flpack (ARG)
               _frexp (ARG)
           ___fltol
             ___fldiv (ARG)
               ___flpack
             _log10 (ARG)
               ___flmul
                 ___awtofl (ARG)
                   ___flpack
                 ___fldiv (ARG)
                   ___flpack
                 ___flpack (ARG)
                 _frexp (ARG)
               _log
                 ___awtofl
                   ___flpack
                 ___fladd
                   ___awtofl (ARG)
                     ___flpack
                   ___flmul (ARG)
                     ___awtofl (ARG)
                       ___flpack
                     ___fldiv (ARG)
                       ___flpack
                     ___flpack (ARG)
                     _frexp (ARG)
                   ___flpack (ARG)
                   _frexp (ARG)
                 ___flmul
                   ___awtofl (ARG)
                     ___flpack
                   ___fldiv (ARG)
                     ___flpack
                   ___flpack (ARG)
                   _frexp (ARG)
                 _eval_poly
                   ___fladd
                     ___awtofl (ARG)
                       ___flpack
                     ___flmul (ARG)
                       ___awtofl (ARG)
                         ___flpack
                       ___fldiv (ARG)
                         ___flpack
                       ___flpack (ARG)
                       _frexp (ARG)
                     ___flpack (ARG)
                     _frexp (ARG)
                   ___flmul
                     ___awtofl (ARG)
                       ___flpack
                     ___fldiv (ARG)
                       ___flpack
                     ___flpack (ARG)
                     _frexp (ARG)
                 _frexp
           _eval_poly
             ___fladd
               ___awtofl (ARG)
                 ___flpack
               ___flmul (ARG)
                 ___awtofl (ARG)
                   ___flpack
                 ___fldiv (ARG)
                   ___flpack
                 ___flpack (ARG)
                 _frexp (ARG)
               ___flpack (ARG)
               _frexp (ARG)
             ___flmul
               ___awtofl (ARG)
                 ___flpack
               ___fldiv (ARG)
                 ___flpack
               ___flpack (ARG)
               _frexp (ARG)
           _floor
             ___altofl
               ___flpack
               ___fltol (ARG)
                 ___fldiv (ARG)
                   ___flpack
                 _log10 (ARG)
                   ___flmul
                     ___awtofl (ARG)
                       ___flpack
                     ___fldiv (ARG)
                       ___flpack
                     ___flpack (ARG)
                     _frexp (ARG)
                   _log
                     ___awtofl
                       ___flpack
                     ___fladd
                       ___awtofl (ARG)
                         ___flpack
                       ___flmul (ARG)
                         ___awtofl (ARG)
                           ___flpack
                         ___fldiv (ARG)
                           ___flpack
                         ___flpack (ARG)
                         _frexp (ARG)
                       ___flpack (ARG)
                       _frexp (ARG)
                     ___flmul
                       ___awtofl (ARG)
                         ___flpack
                       ___fldiv (ARG)
                         ___flpack
                       ___flpack (ARG)
                       _frexp (ARG)
                     _eval_poly
                       ___fladd
                         ___awtofl (ARG)
                           ___flpack
                         ___flmul (ARG)
                           ___awtofl (ARG)
                             ___flpack
                           ___fldiv (ARG)
                             ___flpack
                           ___flpack (ARG)
                           _frexp (ARG)
                         ___flpack (ARG)
                         _frexp (ARG)
                       ___flmul
                         ___awtofl (ARG)
                           ___flpack
                         ___fldiv (ARG)
                           ___flpack
                         ___flpack (ARG)
                         _frexp (ARG)
                     _frexp
             ___fladd
               ___awtofl (ARG)
                 ___flpack
               ___flmul (ARG)
                 ___awtofl (ARG)
                   ___flpack
                 ___fldiv (ARG)
                   ___flpack
                 ___flpack (ARG)
                 _frexp (ARG)
               ___flpack (ARG)
               _frexp (ARG)
             ___fldiv (ARG)
               ___flpack
             ___flge (ARG)
             ___fltol (ARG)
               ___fldiv (ARG)
                 ___flpack
               _log10 (ARG)
                 ___flmul
                   ___awtofl (ARG)
                     ___flpack
                   ___fldiv (ARG)
                     ___flpack
                   ___flpack (ARG)
                   _frexp (ARG)
                 _log
                   ___awtofl
                     ___flpack
                   ___fladd
                     ___awtofl (ARG)
                       ___flpack
                     ___flmul (ARG)
                       ___awtofl (ARG)
                         ___flpack
                       ___fldiv (ARG)
                         ___flpack
                       ___flpack (ARG)
                       _frexp (ARG)
                     ___flpack (ARG)
                     _frexp (ARG)
                   ___flmul
                     ___awtofl (ARG)
                       ___flpack
                     ___fldiv (ARG)
                       ___flpack
                     ___flpack (ARG)
                     _frexp (ARG)
                   _eval_poly
                     ___fladd
                       ___awtofl (ARG)
                         ___flpack
                       ___flmul (ARG)
                         ___awtofl (ARG)
                           ___flpack
                         ___fldiv (ARG)
                           ___flpack
                         ___flpack (ARG)
                         _frexp (ARG)
                       ___flpack (ARG)
                       _frexp (ARG)
                     ___flmul
                       ___awtofl (ARG)
                         ___flpack
                       ___fldiv (ARG)
                         ___flpack
                       ___flpack (ARG)
                       _frexp (ARG)
                   _frexp
             _frexp (ARG)
           _ldexp
             _eval_poly (ARG)
               ___fladd
                 ___awtofl (ARG)
                   ___flpack
                 ___flmul (ARG)
                   ___awtofl (ARG)
                     ___flpack
                   ___fldiv (ARG)
                     ___flpack
                   ___flpack (ARG)
                   _frexp (ARG)
                 ___flpack (ARG)
                 _frexp (ARG)
               ___flmul
                 ___awtofl (ARG)
                   ___flpack
                 ___fldiv (ARG)
                   ___flpack
                 ___flpack (ARG)
                 _frexp (ARG)
           _log (ARG)
             ___awtofl
               ___flpack
             ___fladd
               ___awtofl (ARG)
                 ___flpack
               ___flmul (ARG)
                 ___awtofl (ARG)
                   ___flpack
                 ___fldiv (ARG)
                   ___flpack
                 ___flpack (ARG)
                 _frexp (ARG)
               ___flpack (ARG)
               _frexp (ARG)
             ___flmul
               ___awtofl (ARG)
                 ___flpack
               ___fldiv (ARG)
                 ___flpack
               ___flpack (ARG)
               _frexp (ARG)
             _eval_poly
               ___fladd
                 ___awtofl (ARG)
                   ___flpack
                 ___flmul (ARG)
                   ___awtofl (ARG)
                     ___flpack
                   ___fldiv (ARG)
                     ___flpack
                   ___flpack (ARG)
                   _frexp (ARG)
                 ___flpack (ARG)
                 _frexp (ARG)
               ___flmul
                 ___awtofl (ARG)
                   ___flpack
                 ___fldiv (ARG)
                   ___flpack
                 ___flpack (ARG)
                 _frexp (ARG)
             _frexp
         _log
           ___awtofl
             ___flpack
           ___fladd
             ___awtofl (ARG)
               ___flpack
             ___flmul (ARG)
               ___awtofl (ARG)
                 ___flpack
               ___fldiv (ARG)
                 ___flpack
               ___flpack (ARG)
               _frexp (ARG)
             ___flpack (ARG)
             _frexp (ARG)
           ___flmul
             ___awtofl (ARG)
               ___flpack
             ___fldiv (ARG)
               ___flpack
             ___flpack (ARG)
             _frexp (ARG)
           _eval_poly
             ___fladd
               ___awtofl (ARG)
                 ___flpack
               ___flmul (ARG)
                 ___awtofl (ARG)
                   ___flpack
                 ___fldiv (ARG)
                   ___flpack
                 ___flpack (ARG)
                 _frexp (ARG)
               ___flpack (ARG)
               _frexp (ARG)
             ___flmul
               ___awtofl (ARG)
                 ___flpack
               ___fldiv (ARG)
                 ___flpack
               ___flpack (ARG)
               _frexp (ARG)
           _frexp
       _ser_putch *
     _format_xint32
       _format_number
         ___lwdiv
         ___lwmod
         _format_putchar *
         _output_putch *
           _ser_putch
         _ser_putch *
       _format_putchar *
       _output_putch *
         _ser_putch
       _ser_putch *
     _measure_freq
     _print_reading
     _print_unit
     _ser_putch
     _ser_puts
       _ser_putch
   _measure_inductance
     ___fldiv
       ___flpack
     ___flge
     ___flmul
       ___awtofl (ARG)
         ___flpack
       ___fldiv (ARG)
         ___flpack
       ___flpack (ARG)
       _frexp (ARG)
     ___flsub
       ___awtofl (ARG)
         ___flpack
       ___fladd (ARG)
         ___awtofl (ARG)
           ___flpack
         ___flmul (ARG)
           ___awtofl (ARG)
             ___flpack
           ___fldiv (ARG)
             ___flpack
           ___flpack (ARG)
           _frexp (ARG)
         ___flpack (ARG)
         _frexp (ARG)
       ___flmul (ARG)
         ___awtofl (ARG)
           ___flpack
         ___fldiv (ARG)
           ___flpack
         ___flpack (ARG)
         _frexp (ARG)
     ___fltol
       ___fldiv (ARG)
         ___flpack
       _log10 (ARG)
         ___flmul
           ___awtofl (ARG)
             ___flpack
           ___fldiv (ARG)
             ___flpack
           ___flpack (ARG)
           _frexp (ARG)
         _log
           ___awtofl
             ___flpack
           ___fladd
             ___awtofl (ARG)
               ___flpack
             ___flmul (ARG)
               ___awtofl (ARG)
                 ___flpack
               ___fldiv (ARG)
                 ___flpack
               ___flpack (ARG)
               _frexp (ARG)
             ___flpack (ARG)
             _frexp (ARG)
           ___flmul
             ___awtofl (ARG)
               ___flpack
             ___fldiv (ARG)
               ___flpack
             ___flpack (ARG)
             _frexp (ARG)
           _eval_poly
             ___fladd
               ___awtofl (ARG)
                 ___flpack
               ___flmul (ARG)
                 ___awtofl (ARG)
                   ___flpack
                 ___fldiv (ARG)
                   ___flpack
                 ___flpack (ARG)
                 _frexp (ARG)
               ___flpack (ARG)
               _frexp (ARG)
             ___flmul
               ___awtofl (ARG)
                 ___flpack
               ___fldiv (ARG)
                 ___flpack
               ___flpack (ARG)
               _frexp (ARG)
           _frexp
     ___lwtofl
       ___flpack
       _measure_freq (ARG)
     _measure_freq
     _print_reading
     _print_unit
   _ser_init
   _ser_puts
     _ser_putch
   _timer2_init

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      17        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      10       7        6.3%
BITBANK0            80      0       0       4        0.0%
BANK0               80     47      7A       5       95.3%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     75      7B       1       96.9%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     105      15        0.0%
DATA                 0      0     105       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.34 build -361300703 
Symbol Table                                                                                   Thu Sep 05 08:50:57 2019

                                                             ___altofl@sign 006B  
                                                              ___fldiv@cntr 0019  
                                                              ___fldiv@sign 001B  
                                                                        _F1 00EE  
                                                                        _F2 00D7  
                                                                        _F3 00DB  
                                                               __CFG_BOR$ON 000000  
                                                              ___flpack@arg 0003  
                                                              ___flpack@exp 0007  
                                                               _putchar_ptr 007A  
                                                                       l135 2390  
                                                                       l161 1B8A  
                                                                       l602 1CF4  
                                                                       l603 1CFE  
                                                                       l611 1728  
                                                                       l612 187C  
                                                                       l702 1EC0  
                                                                       l615 1752  
                                                                       l626 17F2  
                                                                       l722 2014  
                                                                       l643 1F6E  
                                                                       l651 231C  
                                                                       l660 1534  
                                                                       l652 233C  
                                                                       l590 1C7E  
                                                                       l718 21BC  
                                                                       l591 1D3E  
                                                                       l658 156C  
                                                                       l690 1AA0  
                                                                       l595 1CC6  
                                                                       l692 1A90  
                                                                       l916 23DE  
                                                                       l926 2474  
                                                                       l689 19D4  
                                                                       l954 16FE  
                                                                       l980 11DE  
                                                                       l958 16EE  
                                                                       l879 199E  
                                                                       l984 11CE  
                                                                       _GIE 007F97  
                                                                       _RC3 007C13  
                                                                       _RC4 007C14  
                                                                       _RC7 007C17  
                                                              __CFG_CPD$OFF 000000  
                                                                       _RX9 007D5E  
                                                                       _TX9 007D66  
                                                                       _exp 0FC6  
                                                                       _log 1882  
                                                                       _isr 0008  
                                                                       _pow 1572  
                                                              __CFG_BORV$27 000000  
                                                                       tosl 000FFD  
                                                                       wreg 000FE8  
                                                              ___flmul@sign 0032  
                                                              __CFG_LVP$OFF 000000  
                                                             ___flpack@sign 0008  
                                                              ___fltol@exp1 0066  
                                                              __CFG_WDT$OFF 000000  
                                                                      l2021 1C96  
                                                                      l2101 17E0  
                                                                      l2031 1CEA  
                                                                      l2023 1CAE  
                                                                      l2111 1820  
                                                                      l2103 17EC  
                                                                      l2201 1E2E  
                                                                      l2019 1C88  
                                                                      l2107 1808  
                                                                      l2131 13CC  
                                                                      l3003 118C  
                                                                      l2029 1CDC  
                                                                      l2053 2406  
                                                                      l3005 1198  
                                                                      l3021 15B8  
                                                                      l2119 184E  
                                                                      l2063 173A  
                                                                      l2231 1EB0  
                                                                      l2223 1E88  
                                                                      l2215 1E6C  
                                                                      l3031 1644  
                                                                      l3015 15A0  
                                                                      l2129 13C2  
                                                                      l2225 1E94  
                                                                      l3025 160E  
                                                                      l2401 23B8  
                                                                      l3113 0CF0  
                                                                      l2091 17B0  
                                                                      l2083 1780  
                                                                      l2307 2490  
                                                                      l2227 1E9A  
                                                                      l2219 1E7E  
                                                                      l3027 161A  
                                                                      l3211 1C32  
                                                                      l2317 251C  
                                                                      l2093 17B8  
                                                                      l2069 1764  
                                                                      l2237 260C  
                                                                      l2325 2640  
                                                                      l2173 233A  
                                                                      l2261 19FE  
                                                                      l3061 1378  
                                                                      l3045 1218  
                                                                      l2421 2456  
                                                                      l2501 1B4E  
                                                                      l2095 17BE  
                                                                      l2167 2304  
                                                                      l2335 1FA6  
                                                                      l3063 1382  
                                                                      l3135 0EEA  
                                                                      l3143 0F58  
                                                                      l2089 17A2  
                                                                      l2361 1D7A  
                                                                      l2185 2166  
                                                                      l2273 1EDC  
                                                                      l2257 19E0  
                                                                      l2353 1FDA  
                                                                      l3057 1352  
                                                                      l2409 23D4  
                                                                      l2425 246A  
                                                                      l2417 2446  
                                                                      l3217 1C44  
                                                                      l2363 1DFA  
                                                                      l2275 1EE6  
                                                                      l2339 1FB0  
                                                                      l2419 2450  
                                                                      l2507 1B84  
                                                                      l3139 0F22  
                                                                      l3219 1C4A  
                                                                      l2613 20DE  
                                                                      l2381 189E  
                                                                      l2349 1FCA  
                                                                      l2623 2102  
                                                                      l2295 1F34  
                                                                      l2287 1F04  
                                                                      l2199 1E22  
                                                                      l2553 2550  
                                                                      l2481 1AB8  
                                                                      l2379 1892  
                                                                      l2557 2566  
                                                                      l2397 23A8  
                                                                      l2639 211E  
                                                                      l2399 23B2  
                                                                      l2487 1ADA  
                                                                      l2593 2266  
                                                                      l2497 1B1A  
                                                                      l2833 0AEE  
                                                                      l2499 1B38  
                                                                      l2829 0AB6  
                                                                      l2837 0B24  
                                                                      l2839 0B2C  
                                                                      l2795 06D8  
                                                                      l2973 0FE0  
                                                                      l2983 1040  
                                                                      l2979 1016  
                                                                      ?_exp 0080  
                                                                      l2989 1072  
                                                                      ?_log 004F  
                                                                      ?_isr 0001  
                                                                      ?_pow 008B  
                                                                      STR_1 0655  
                                                                      STR_3 0658  
                                                                      STR_4 0672  
                                                                      STR_5 065B  
                                                                      STR_6 0661  
                                                                      STR_7 0667  
                                                                      STR_8 064D  
                                                                      STR_9 0658  
                                                                      _BRGH 007D62  
                                                                      _CREN 007D5C  
                                                                      _T0CS 007EAD  
                                                                      _T0SE 007EAC  
                                                                      u2048 1B1E  
                                                                      _CCal 00F2  
                                                                      u1620 1E4E  
                                                                      u2148 21C8  
                                                                      u2149 21E0  
                                                                      u1710 19EC  
                                                                      u2078 1B5C  
                                                                      u2158 21E6  
                                                                      u2270 238C  
                                                                      u2159 21FE  
                                                                      u2255 2364  
                                                                      u2600 160E  
                                                                      u2256 2366  
                                                                      u1625 1E42  
                                                                      u2265 237C  
                                                                      u2266 237E  
                                                                      u2628 1334  
                                                                      u2717 20CC  
                                                                      u2727 20E6  
                                                                      u2648 1360  
                                                                      _PEIE 007F96  
                                                                      _RCIF 007CF5  
                                                                      _TMR0 000FD6  
                                                                      _TMR2 000FCC  
                                                                      _SPEN 007D5F  
                                                                      _TXIE 007CEC  
                                                                      _TXIF 007CF4  
                                                                      _TXEN 007D65  
                                                                      _SYNC 007D64  
                                                              __CFG_PWRT$ON 000000  
                                                                      _bres 00F6  
                                                                      _main 1B8E  
                                                                      fsr2h 000FDA  
                                                                      indf2 000FDF  
                                                                      fsr2l 000FD9  
                                                                      exp@x 0080  
                                                                      log@x 004F  
                                                     __size_of_output_putch 000E  
                                                                      pow@x 008B  
                                                                      pow@y 008F  
                                                                      prodh 000FF4  
                                                                      prodl 000FF3  
                                                __end_of_measure_inductance 0B94  
                                                                      start 00DC  
                                                         _format_number$128 0030  
                                                              ___param_bank 000010  
                                                                     ??_exp 0076  
                                                                     ??_log 0053  
                                                                     ??_isr 0001  
                                                                     ??_pow 0076  
                                                             __CFG_OSCS$OFF 000000  
                                                             ___fltol@sign1 0065  
                                                           __end_of___fladd 1882  
                                                                     ?_main 0001  
                                                           __end_of___fldiv 1F74  
                                                           __end_of___flneg 2654  
                                                                     STR_10 066D  
                                                                     STR_11 0658  
                                                           __end_of___flmul 1572  
                                                           __end_of___flsub 24C8  
                                                           __end_of___fltol 1EC6  
                                                           __end_of___lwdiv 23EA  
                                                           __end_of___lwmod 2480  
                                                                     i2l302 00AA  
                                                                     i2l306 00CE  
                                                                     _RCREG 000FAE  
                                                                     _SPBRG 000FAF  
                                                                     _PORTC 000F82  
                                                                     _TRISA 000F92  
                                                                     _TRISC 000F94  
                                                                     _SSPEN 007E35  
                                                                     _TXREG 000FAD  
                                                             ___awtofl@sign 0011  
                                                                     _nRBPU 007F8F  
                                                             __CFG_STVR$OFF 000000  
                                                                     _log10 228E  
                                                                     _blink 00EB  
                                                                     _floor 19A4  
                                                                     _ldexp 1F74  
                                                                     _frexp 2144  
                                                              _output_putch 2654  
                                                                     _msecs 00DF  
                                                                     pclath 000FFA  
                                                                     tablat 000FF5  
                                                                     pow@yi 009C  
                                                           format_number@di 0033  
                                                                     status 000FD8  
                                                           ??_print_reading 0005  
                                                               exp@exponent 0088  
                                                               ldexp@newexp 0053  
                                                           __initialization 24C8  
                                                           format_putchar@c 0001  
                                                               log@exponent 0053  
                                                              __end_of_main 1C6E  
                                                          format_double@num 00A0  
                                                             ?_measure_freq 0003  
                                                            __CFG_OSC$HSPLL 000000  
                                                    __size_of_format_double 01C8  
                                                                    ??_main 0076  
                                                       format_double@weight 00AC  
                                                             __activetblptr 000002  
                                                    __size_of_format_number 00E8  
                                                    __size_of_format_xint32 006A  
                                                           __CFG_CCP2MUX$ON 000000  
                                                                    ?_log10 0055  
                                                                    ?_floor 006C  
                                                                    ?_ldexp 004F  
                                                                    ?_frexp 0003  
                                                          __end_of___altofl 2438  
                                                          __end_of___flpack 1D44  
                                                          __end_of___awtofl 254A  
                                                          __end_of___lltofl 25B2  
                                                                    i2l2863 0060  
                                                                    i2l2871 0082  
                                                                    i2l2859 004A  
                                                                    i2l2869 0080  
                                                          __end_of___lwtofl 25E0  
                                                                    _TMR0IF 007F92  
                                                                    _TMR2IE 007CE9  
                                                                    _TMR2IF 007CF1  
                                                                    _TMR2ON 007E52  
                                                                    _TRISC0 007CA0  
                                                                    _TRISC1 007CA1  
                                                                    _TRISC2 007CA2  
                                                                    _TRISC3 007CA3  
                                                                    _TRISC6 007CA6  
                                                                    ___flge 22EC  
                                                                 ??___fladd 003F  
                                                                 ??___fldiv 0015  
                                                                 ??___flneg 0007  
                                                                 ??___flmul 0024  
                                                                 ??___flsub 004B  
                                                                 ??___fltol 0061  
                                                            ??_measure_freq 0005  
                                                                 ??___lwdiv 0007  
                                                              ?_timer2_init 0001  
                                                                 ??___lwmod 0007  
                                                                    clear_0 24CE  
                                                                    clear_1 24DA  
                                                                    log10@x 0055  
                                                                    _rxfifo 0100  
                                                                    _txfifo 00C7  
                                                                    _rxiptr 0076  
                                                                    _rxoptr 0077  
                                                                    floor@i 0070  
                                                                    _txiptr 0078  
                                                                    floor@x 006C  
                                                                    _txoptr 0079  
                                                          __end_of_ser_init 2608  
                                                              __pdataCOMRAM 007A  
                                                          __end_of_ser_puts 2580  
                                                        timer2_init@ps_mode 0004  
                                                              __mediumconst 0000  
                                                                    tblptrh 000FF7  
                                                                    tblptrl 000FF6  
                                                                    tblptru 000FF8  
                                                          format_number@buf 0010  
                                                          format_number@pad 000D  
                                                                ___fladd@f1 0037  
                                                                ___fladd@f2 003B  
                                                                ___flge@ff1 0003  
                                                                ___flge@ff2 0007  
                                                          __end_ofexp@coeff 0629  
                                                             _format_double 11E4  
                                                          __end_oflog@coeff 064D  
                                                                ___altofl@c 0067  
                                                                ___fldiv@f1 000D  
                                                                ___fldiv@f2 0011  
                                                                ___fldiv@f3 0015  
                                                                __accesstop 0080  
                                                   __end_of__initialization 2500  
                                                                ___flneg@f1 0003  
                                                             _format_number 1AA6  
                                                             _format_xint32 21C2  
                                                                ___flmul@f1 001C  
                                                                ___flmul@f2 0020  
                                                              eval_poly@res 004B  
                                                             ___rparam_used 000001  
                                                                ___flsub@f1 0043  
                                                                ___flsub@f2 0047  
                                                                ___fltol@f1 005D  
                                                                ___awtofl@c 000D  
                                                    measure_capacitance@Cin 00C3  
                                              __size_of_measure_capacitance 0432  
                                                    measure_capacitance@var 00C1  
                                                            __pcstackCOMRAM 0001  
                                                        __size_of_calibrate 00A6  
                                                                ___lltofl@c 000D  
                                                        __size_of_delay10ms 0062  
                                                             __end_of_log10 22EC  
                                                             __end_of_floor 1AA6  
                                                             __end_of_ldexp 201A  
                                                             __end_of_frexp 21C2  
                                                                ___lwtofl@c 000D  
                                                                   ??_log10 0059  
                                                                   ??_floor 0070  
                                                                   ??_ldexp 0055  
                                                                   ??_frexp 0008  
                                                                __pbssBANK0 00C7  
                                                                __pbssBANK1 0100  
                                                            ?_format_double 00A0  
                                                        __size_of_eval_poly 00D2  
                                                        __size_of_indicator 0006  
                                                   __size_of_format_putchar 0006  
                                                            ?_format_number 000A  
                                                            ?_format_xint32 0035  
                                                            print_unit@unit 0001  
                                                                   ?___flge 0003  
                                                                 ?___altofl 0067  
                                                                 ?___flpack 0003  
                                                                 ?___awtofl 000D  
                                                                 ?___lltofl 000D  
                                                        _measure_inductance 0678  
                                                        __size_of_ser_putch 0028  
                                                                   _T2CKPS0 007E50  
                                                                   _T2CKPS1 007E51  
                                                                 ?___lwtofl 000D  
                                                       ?_measure_inductance 0001  
                                                         __end_of_calibrate 20C0  
                                                                   _TOUTPS0 007E53  
                                                                   _TOUTPS1 007E54  
                                                                   _TOUTPS2 007E55  
                                                         __end_of_delay10ms 228E  
                                                      __end_of_measure_freq 2144  
                                                                   __Hparam 0000  
                                                                   __Lparam 0000  
                                                                 ?_ser_init 0001  
                                                      ??_measure_inductance 0067  
                                                                 ?_ser_puts 0001  
                                                           __size_of___flge 0056  
                                                                   ___fladd 1704  
                                                                   ___fldiv 1EC6  
                                                                   ___flneg 2630  
                                                                   ___flmul 13AC  
                                                                   ___flsub 2480  
                                                                   ___fltol 1E16  
                                                                   ___lwdiv 2396  
                                                                   ___lwmod 2438  
                                                              __psmallconst 0600  
                                                                ??___altofl 006B  
                                                                ??___flpack 0009  
                                                                   _exp$934 0084  
                                                                   __pcinit 24C8  
                                                                ??___awtofl 0011  
                                                         __end_of_eval_poly 1E16  
                                                                   __ramtop 0600  
                                                         __end_of_indicator 267A  
                                                                ??___lltofl 0011  
                                                                   __ptext0 1B8E  
                                                                   __ptext1 2342  
                                                                   __ptext2 25E0  
                                                                   __ptext3 0678  
                                                                   __ptext4 0B94  
                                                                   __ptext5 2662  
                                                                   __ptext6 2668  
                                                                   __ptext7 21C2  
                                                                   __ptext8 1AA6  
                                                                   __ptext9 2438  
                                                      __size_of_timer2_init 0054  
                                                                ??___lwtofl 0011  
                                                                   _pow$932 0093  
                                                                   _pow$933 0097  
                                                              __size_of_exp 021E  
                                                              __size_of_log 0122  
                                                              __size_of_isr 00D4  
                                                              __size_of_pow 0192  
                                                                   _seconds 00E3  
                                                                   _ser_tmp 00ED  
                                                           ??_format_double 0076  
                                                      end_of_initialization 2500  
                                                           ??_format_number 000E  
                                                           ??_format_xint32 0039  
                                                                   exp@sign 008A  
                                                             __Lmediumconst 0000  
                                                         __end_of_ser_putch 2630  
                                                                   pow@sign 009B  
                                             measure_inductance@denominator 0084  
                                                     __end_of_print_reading 266E  
                                                                ??_ser_init 0003  
                                                                ??_ser_puts 0004  
                                                         format_number@base 000C  
                                                                   postdec2 000FDD  
                                                                   postinc0 000FEE  
                                                                   postinc2 000FDE  
                                                                _print_unit 2662  
                                                       _measure_capacitance 0B94  
                                                               ___fldiv@exp 001A  
                                                            _format_putchar 266E  
                                                               ___flmul@exp 0031  
                                                      ?_measure_capacitance 0001  
                                                   measure_capacitance@unit 00C0  
                                                            format_double@m 00B2  
                                                    measure_inductance@unit 0098  
                                                            __end_of___flge 2342  
                                                             __pidataCOMRAM 267A  
                                                                floor@expon 0074  
                                                            format_number@i 0034  
                                                            format_number@n 000A  
                                                            format_xint32@x 0035  
                                                       start_initialization 24C8  
                                                                eval_poly@d 0047  
                                                                eval_poly@n 0048  
                                                                eval_poly@x 0043  
                                                     __size_of_measure_freq 0084  
                                                                ldexp@value 004F  
                                                               __end_of_exp 11E4  
                                                               __end_of_log 19A4  
                                                               __end_of_isr 00DC  
                                                               __end_of_pow 1704  
                                                    __end_of_format_putchar 2674  
                                                        format_double@digit 00B0  
                                                                frexp@value 0003  
                                                     ??_measure_capacitance 0076  
                                                                  ??___flge 000B  
                                                              _measure_freq 20C0  
                                                              delay10ms@run 000B  
                                                    _measure_inductance$930 0094  
                                                    _measure_inductance$924 0088  
                                                    _measure_inductance$925 0099  
                                                    _measure_inductance$926 009D  
                                                    _measure_inductance$927 00A1  
                                                    _measure_inductance$928 008C  
                                                    _measure_inductance$929 0090  
                                                  print_reading@measurement 0003  
                                                         __size_of___altofl 004E  
                                                         __size_of___flpack 00D6  
                                                         __size_of___awtofl 0040  
                                                               ?_print_unit 0001  
                                                         __size_of___lltofl 0032  
                                                               __pbssCOMRAM 0076  
                                                         __size_of___lwtofl 002E  
                                                             __pcstackBANK0 0080  
                                                             ?_output_putch 0001  
                                                           ?_format_putchar 0001  
                                                         measure_freq@count 0009  
                                                                 _calibrate 201A  
                                                                 _delay10ms 222C  
                                                                 _log10$931 0059  
                                                                 __pnvBANK0 00F2  
                                                          ___lwdiv@dividend 0003  
                                                                 __pintcode 0008  
                                                                  ?___fladd 0037  
                                                                  ?___fldiv 000D  
                                                                  ?___flneg 0003  
                                                                  ?___flmul 001C  
                                                                  ?___flsub 0043  
                                                                  ?___fltol 005D  
                                                         __size_of_ser_init 0028  
                                                                  ?___lwdiv 0003  
                                                                  ?___lwmod 0003  
                                                         __size_of_ser_puts 0036  
                                                               __smallconst 0600  
                                                                 _eval_poly 1D44  
                                                             output_putch@c 0004  
                                                                 _indicator 2674  
                                                            ??_output_putch 0004  
                                                          ___lwdiv@quotient 0007  
                                                            __size_of_log10 005E  
                                                            __size_of_floor 0102  
                                                            __size_of_ldexp 00A6  
                                                            __size_of_frexp 007E  
                                                                ?_calibrate 0001  
                                                                ser_putch@c 0003  
                                                                ?_delay10ms 0003  
                                                             measure_freq@i 0008  
                                                       __size_of_print_unit 0006  
                                                                  i2u239_40 0048  
                                                                 _ser_putch 2608  
                                               __size_of_measure_inductance 051C  
                                                             ??_timer2_init 0003  
                                                         indicator@indicate 0001  
                                                                ?_eval_poly 0043  
                                                                ?_indicator 0001  
                                                     measure_inductance@Lin 00A7  
                                                     measure_inductance@var 00A5  
                                                     __end_of_format_double 13AC  
                                                      format_number@padchar 0032  
                                                     __end_of_format_number 1B8E  
                                                     __end_of_format_xint32 222C  
                                                                 frexp@eptr 0007  
                                                                  __Hrparam 0000  
                                                                  __Lrparam 0000  
                                                                ?_ser_putch 0001  
                                                               delay10ms@ms 0007  
                                                          __size_of___fladd 017E  
                                                          __size_of___fldiv 00AE  
                                                          __size_of___flneg 0024  
                                                          __size_of___flmul 01C6  
                                                          __size_of___flsub 0048  
                                                          __size_of___fltol 00B0  
                                                                  ___altofl 23EA  
                                                                  ___flpack 1C6E  
                                                          __size_of___lwdiv 0054  
                                                          __size_of___lwmod 0048  
                                                                  ___awtofl 250A  
                                                                  ___lltofl 2580  
                                                             timer2_init@ps 0005  
                                                                  ___lwtofl 25B2  
                                                          measure_freq@prev 0007  
                                                       __end_of_timer2_init 2396  
                                                           ___lwdiv@divisor 0005  
                                                           ___lwdiv@counter 0009  
                                                    __size_of_print_reading 0006  
                                                                  __ptext10 2396  
                                                                  __ptext11 11E4  
                                                                  __ptext20 2630  
                                                                  __ptext12 1572  
                                                                  __ptext21 1EC6  
                                                                  __ptext13 0FC6  
                                                                  __ptext30 13AC  
                                                                  __ptext22 2580  
                                                                  __ptext14 1F74  
                                                                  __ptext31 1704  
                                                                  __ptext23 266E  
                                                                  __ptext15 19A4  
                                                                  __ptext32 250A  
                                                                  __ptext24 2608  
                                                                  __ptext16 1E16  
                                                                  __ptext33 2674  
                                                                  __ptext25 2654  
                                                                  __ptext17 22EC  
                                                                  __ptext34 201A  
                                                                  __ptext26 228E  
                                                                  __ptext18 23EA  
                                                                  __ptext35 254A  
                                                                  __ptext27 1882  
                                                                  __ptext19 2480  
                                                                  __ptext36 20C0  
                                                                  __ptext28 2144  
                                                                  __ptext37 222C  
                                                                  __ptext29 1D44  
                                                                  __ptext38 25B2  
                                                                  __ptext39 1C6E  
                                                               ??_calibrate 0011  
                                                             __size_of_main 00E0  
                                                               ??_delay10ms 0005  
                                                                 ser_puts@s 0004  
                                                                  _msecpart 00F8  
                                                                  _ser_init 25E0  
                                                                  _ser_puts 254A  
                                                                  _timer1of 00E7  
                                                      __end_of_output_putch 2662  
                                                                  exp@coeff 0601  
                                                     ___flmul@f3_as_product 0033  
                                                                  log@coeff 0629  
                                               measure_inductance@numerator 0080  
                                                          ??_format_putchar 0003  
                                                              ??_print_unit 0003  
                                                               ??_eval_poly 004A  
                                                               ??_indicator 0003  
                                                                  intlevel2 267C  
                                               __end_of_measure_capacitance 0FC6  
                                                          ___lwmod@dividend 0003  
                                                               ??_ser_putch 0003  
                                                        __end_of_print_unit 2668  
                                                             _print_reading 2668  
                                                      delay10ms@period_10ms 0003  
                                                               _timer2_init 2342  
                                                           ___lwmod@divisor 0005  
                                                           ___lwmod@counter 0007  
                                                         _format_double$920 00A8  
                                                         _format_double$919 00A4  
                                                   _measure_capacitance$921 00B4  
                                                   _measure_capacitance$922 00B8  
                                                   _measure_capacitance$923 00BC  
                                                              ___fladd@exp1 0042  
                                                              ___fladd@exp2 0041  
                                                              ___fladd@sign 0040  
                                                            ?_print_reading 0003  
