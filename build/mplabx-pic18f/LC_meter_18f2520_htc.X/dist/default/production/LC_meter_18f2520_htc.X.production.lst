

HI-TECH Software PRO Macro Assembler (PIC18) V9.66 build 8870 
                                                       Sat Aug 31 18:21:36 2019

HI-TECH Software Omniscient Code Generator build 8870
     1                           	processor	18F2520
     2                           	fnconf	param1,??,?,0
     3                           	opt	pw 80
     4                           	opt	pm
     5                           	psect	text0,global,reloc=2,class=CODE,delta=1
     6                           	psect	text1,global,reloc=2,class=CODE,delta=1
     7                           	psect	text2,global,reloc=2,class=CODE,delta=1
     8                           	psect	text3,global,reloc=2,class=CODE,delta=1
     9                           	psect	text4,global,reloc=2,class=CODE,delta=1
    10                           	psect	text5,global,reloc=2,class=CODE,delta=1
    11                           	psect	text6,global,reloc=2,class=CODE,delta=1
    12                           	psect	text7,global,reloc=2,class=CODE,delta=1
    13                           	psect	text8,global,reloc=2,class=CODE,delta=1
    14                           	psect	text9,global,reloc=2,class=CODE,delta=1
    15                           	psect	text10,global,reloc=2,class=CODE,delta=1
    16                           	psect	text11,global,reloc=2,class=CODE,delta=1
    17                           	psect	text12,global,reloc=2,class=CODE,delta=1
    18                           	psect	text13,global,reloc=2,class=CODE,delta=1
    19                           	psect	text14,global,reloc=2,class=CODE,delta=1
    20                           	psect	text15,global,reloc=2,class=CODE,delta=1
    21                           	psect	text16,global,reloc=2,class=CODE,delta=1
    22                           	psect	text17,global,reloc=2,class=CODE,delta=1
    23                           	psect	text18,global,reloc=2,class=CODE,delta=1
    24                           	psect	text19,global,reloc=2,class=CODE,delta=1
    25                           	psect	text20,global,reloc=2,class=CODE,delta=1
    26                           	psect	text21,global,reloc=2,class=CODE,delta=1
    27                           	psect	text22,global,reloc=2,class=CODE,delta=1
    28                           	psect	text23,global,reloc=2,class=CODE,delta=1
    29                           	psect	text24,global,reloc=2,class=CODE,delta=1
    30                           	psect	text25,global,reloc=2,class=CODE,delta=1
    31                           	psect	text26,global,reloc=2,class=CODE,delta=1
    32                           	psect	text27,global,reloc=2,class=CODE,delta=1
    33                           	psect	text28,global,reloc=2,class=CODE,delta=1
    34                           	psect	text29,global,reloc=2,class=CODE,delta=1
    35                           	psect	text30,global,reloc=2,class=CODE,delta=1
    36                           	psect	text31,global,reloc=2,class=CODE,delta=1
    37                           	psect	text32,global,reloc=2,class=CODE,delta=1
    38                           	psect	text33,global,reloc=2,class=CODE,delta=1
    39                           	psect	text34,global,reloc=2,class=CODE,delta=1
    40                           	psect	text35,global,reloc=2,class=CODE,delta=1
    41                           	psect	text36,global,reloc=2,class=CODE,delta=1
    42                           	psect	text37,global,reloc=2,class=CODE,delta=1
    43                           	psect	text38,global,reloc=2,class=CODE,delta=1
    44                           	psect	text39,global,reloc=2,class=CODE,delta=1
    45                           	psect	text40,global,reloc=2,class=CODE,delta=1
    46                           	psect	text41,global,reloc=2,class=CODE,delta=1
    47                           	psect	text42,global,reloc=2,class=CODE,delta=1
    48                           	psect	text43,global,reloc=2,class=CODE,delta=1
    49                           	psect	text44,global,reloc=2,class=CODE,delta=1
    50                           	psect	text45,global,reloc=2,class=CODE,delta=1
    51                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    52                           	psect	text46,global,reloc=2,class=CODE,delta=1
    53                           	psect	idata,global,class=CODE,delta=1
    54                           	psect	smallconst,global,reloc=2,class=SMALLCONS
      +                          T,delta=1
    55                           	psect	intsave_regs,global,class=BIGRAM,space=1,
      +                          delta=1
    56                           	psect	param1,global,class=BANK1,space=1,delta=1
    57                           	dabs	1,0x47,2
    58                           	dabs	1,0x49,1
    59                           	dabs	1,0x24,16
    60                           	dabs	1,0x14,16
    61                           	dabs	1,0x8,4
    62                           	dabs	1,0x10,4
    63                           	dabs	1,0xC,4
    64                           	dabs	1,0x34,4
    65                           	dabs	1,0x3F,4
    66                           	dabs	1,0x43,4
    67                           	dabs	1,0x38,2
    68                           	dabs	1,0x3B,1
    69                           	dabs	1,0x3E,1
    70                           	dabs	1,0x3D,1
    71                           	dabs	1,0x3A,1
    72                           	dabs	1,0x3C,1
    73                           	dabs	1,0x0,4
    74                           	dabs	1,0x6,2
    75                           	dabs	1,0x4,2
    76  000000                     
    77  000000                     
    78  000000                     
    79  000000                     
    80  000000                     
    81  000000                     
    82  000000                     
    83  000000                     
    84  000000                     
    85  000000                     
    86  000000                     
    87  000000                     
    88  000000                     
    89  000000                     
    90  000000                     
    91  000000                     
    92  000000                     
    93  000000                     
    94  000000                     
    95  000000                     
    96  000000                     
    97  000000                     
    98  000000                     
    99  000000                     
   100  000000                     
   101  000000                     
   102  000000                     
   103  000000                     
   104  000000                     
   105  000000                     
   106  000000                     
   107  000000                     
   108  000000                     
   109  000000                     
   110  000000                     
   111  000000                     
   112  000000                     
   113  000000                     
   114  000000                     
   115  000000                     
   116  000000                     
   117  000000                     
   118  000000                     
   119  000000                     
   120  000000                     
   121  000000                     
   122  000000                     
   123  000000                     
   124  000000                     
   125  000000                     
   126  000000                     
   127  000000                     
   128  000000                     
   129  000000                     
   130  000000                     
   131  000000                     
   132  000000                     
   133  000000                     
   134  000000                     
   135  000000                     
   136  000000                     
   137  000000                     
   138  000000                     
   139  000000                     
   140  000000                     
   141  000000                     
   142  000000                     
   143  000000                     
   144  000000                     
   145  000000                     
   146  000000                     
   147  000000                     
   148  000000                     
   149  000000                     
   150  000000                     
   151  000000                     
   152  000000                     
   153  000000                     
   154  000000                     
   155  000000                     
   156  000000                     
   157  000000                     
   158  000000                     
   159  000000                     
   160  000000                     
   161  000000                     
   162  000000                     
   163  000000                     
   164  000000                     
   165  000000                     
   166  000000                     
   167  000000                     
   168  000000                     
   169  000000                     
   170  000000                     
   171  000000                     	;#
   172  000000                     	;#
   173  000000                     	;#
   174  000000                     	;#
   175  000000                     	;#
   176  000000                     	;#
   177  000000                     
   178  000000                     
   179  000000                     
   180  000000                     
   181  000000                     
   182  000000                     
   183  000000                     
   184  000000                     
   185  000000                     
   186  000000                     
   187  000000                     
   188  000000                     
   189  000000                     
   190  000000                     
   191  000000                     
   192  000000                     
   193  000000                     
   194  000000                     
   195  000000                     
   196  000000                     
   197  000000                     
   198  000000                     
   199  000000                     
   200  000000                     
   201  000000                     
   202  000000                     
   203  000000                     
   204  000000                     
   205  000000                     
   206  000000                     
   207  000000                     
   208  000000                     
   209  000000                     
   210  000000                     
   211  000000                     
   212  000000                     
   213  000000                     
   214  000000                     
   215  000000                     
   216  000000                     
   217  000000                     
   218  000000                     
   219  000000                     
   220  000000                     
   221  000000                     
   222  000000                     
   223  000000                     
   224  000000                     
   225  000000                     
   226  000000                     
   227  000000                     
   228  000000                     
   229  000000                     
   230  000000                     
   231  000000                     
   232  000000                     
   233  000000                     
   234  000000                     
   235  000000                     
   236  000000                     
   237  000000                     
   238  000000                     
   239  000000                     
   240  000000                     
   241  000000                     
   242  000000                     
   243  000000                     
   244  000000                     
   245  000000                     
   246  000000                     
   247  000000                     
   248  000000                     
   249  000000                     
   250  000000                     
   251  000000                     
   252  000000                     
   253  000000                     
   254  000000                     
   255  000000                     
   256  000000                     
   257  000000                     
   258  000000                     
   259  000000                     
   260  000000                     
   261  000000                     
   262  000000                     
   263  000000                     
   264  000000                     
   265  000000                     
   266  000000                     
   267  000000                     
   268  000000                     
   269  000000                     
   270  000000                     
   271  000000                     
   272  000000                     
   273  000000                     
   274  000000                     
   275  000000                     
   276  000000                     
   277  000000                     
   278  000000                     
   279  000000                     
   280  000000                     
   281  000000                     
   282  000000                     
   283  000000                     
   284                           
   285                           	psect	text0
   286                           ;Data sizes: Strings 42, constant 76, data 3, bs
      +                          s 0, persistent 0 stack 112
   287                           ; *************** function _main ***************
      +                          **
   288                           ; Defined at:
   289                           ;		line 115 in file "../../../src/LC-meter.c"
   290                           ; Parameters:
   291                           ;		None
   292                           ; Auto variables:
   293                           ;		None
   294                           ; Return value:
   295                           ;		type: void 
   296                           ;		size: 0
   297                           ; Registers used:
   298                           ;		wreg, fsr0l, fsr0h, fsr1l, fsr2l, status,2, s
      +                          tatus,0, pclat, tosl, tblptrl, tblptrh, tblptru,
      +                           tablat, prodl, prodh, cstack
   299                           ; Tracked objects:
   300                           ;		On entry : 0/0
   301                           ;		On exit  : 0/0
   302                           ;		Unchanged: 0/0
   303                           ; Data sizes:
   304                           ;		Autos:    0
   305                           ;		Params:   0
   306                           ;		Temp:     0
   307                           ;		Total:    0
   308                           ; This function calls:
   309                           ;		_timer2_init
   310                           ;		_delay10ms
   311                           ;		_ser_init
   312                           ;		_calibrate
   313                           ;		_ser_puts
   314                           ;		_measure_capacitance
   315                           ;		_measure_inductance
   316                           ;		_indicator
   317                           ; This function is called by:
   318                           ;		Startup code after reset
   319                           ; This function uses a non-reentrant model
   320                           ; 
   321  000000                     
   322                           ;LC-meter.c: 114: void
   323                           ;LC-meter.c: 115: main() {
   324  000000'                    _main:
   325                           	opt stack 30
   326                           ; BSR set to: ?
   327  000000' 6A3F               	clrf	63,c	;volatile
   328  000002' 6A40               	clrf	64,c	;volatile
   329  000004' 6A41               	clrf	65,c	;volatile
   330  000006' 6A42               	clrf	66,c	;volatile
   331  000008' C03F F034          	movff	63,52	;volatile
   332  00000C' C040 F035          	movff	64,53	;volatile
   333  000010' C041 F036          	movff	65,54	;volatile
   334  000014' C042 F037          	movff	66,55	;volatile
   335  000018' C034 F004          	movff	52,4	;volatile
   336  00001C' C035 F005          	movff	53,5	;volatile
   337  000020' C004 F006          	movff	4,6	;volatile
   338  000024' C005 F007          	movff	5,7	;volatile
   339                           ;LC-meter.c: 118: CCal = 1000;
   340  000028' 6A00               	clrf	0,c
   341  00002A' 6A01               	clrf	1,c
   342  00002C' 0E7A               	movlw	122
   343  00002E' 6E02               	movwf	2,c
   344  000030' 0E44               	movlw	68
   345  000032' 6E03               	movwf	3,c
   346                           ;LC-meter.c: 127: TRISA = 0b11001111;
   347  000034' 0ECF               	movlw	207
   348  000036' 6E92               	movwf	3986,c	;volatile
   349                           ;LC-meter.c: 129: T0CS = 1;
   350  000038' 8AD5               	bsf	4053,5,c	;volatile
   351                           ;LC-meter.c: 130: T0SE = 1;
   352  00003A' 88D5               	bsf	4053,4,c	;volatile
   353                           ;LC-meter.c: 139: RBPU = 1;
   354  00003C' 8EF1               	bsf	intcon2,7,c	;volatile
   355                           ;LC-meter.c: 144: TRISC3 = 0;
   356  00003E' 9694               	bcf	3988,3,c	;volatile
   357                           ;LC-meter.c: 145: LATC3 = ((1) == 0);
   358  000040' 968B               	bcf	3979,3,c	;volatile
   359                           ;LC-meter.c: 147: SSPEN = 0;
   360  000042' 9AC6               	bcf	4038,5,c	;volatile
   361                           ;LC-meter.c: 152: timer2_init(0b000 | 0x80);
   362  000044' 0E80               	movlw	128
   363  000046' EC00' F000'        	call	_timer2_init
   364                           ;LC-meter.c: 157: TRISC1 = 0;
   365  00004A' 9294               	bcf	3988,1,c	;volatile
   366                           ;LC-meter.c: 160: TRISC3 = 0;
   367  00004C' 9694               	bcf	3988,3,c	;volatile
   368                           ;LC-meter.c: 162: TRISC0 = 1;
   369  00004E' 8094               	bsf	3988,0,c	;volatile
   370                           ;LC-meter.c: 163: TRISC2 = 1;
   371  000050' 8494               	bsf	3988,2,c	;volatile
   372                           ;LC-meter.c: 173: TRISC4 = 1;
   373  000052' 8894               	bsf	3988,4,c	;volatile
   374                           ;LC-meter.c: 174: TRISC5 = 0;
   375  000054' 9A94               	bcf	3988,5,c	;volatile
   376                           ;LC-meter.c: 176: LATC5 = 0;
   377  000056' 9A8B               	bcf	3979,5,c	;volatile
   378                           ;LC-meter.c: 177: delay10ms(50);
   379  000058' 0E32               	movlw	50
   380  00005A' 0101               	movlb	1	; () banked
   381  00005C' 6F00'              	movwf	?_delay10ms& (0+255),b
   382  00005E' 0E00               	movlw	0
   383  000060' 6B00'              	clrf	(?_delay10ms+1)& (0+255),b
   384  000062' EC00' F000'        	call	_delay10ms	;wreg free
   385                           ;LC-meter.c: 178: LATC5 = 1;
   386  000066' 8A8B               	bsf	3979,5,c	;volatile
   387                           ;LC-meter.c: 179: delay10ms(50);
   388  000068' 0E32               	movlw	50
   389  00006A' 6F00'              	movwf	?_delay10ms& (0+255),b
   390  00006C' 0E00               	movlw	0
   391  00006E' 6B00'              	clrf	(?_delay10ms+1)& (0+255),b
   392  000070' EC00' F000'        	call	_delay10ms	;wreg free
   393                           ;LC-meter.c: 180: LATC5 = 0;
   394  000074' 9A8B               	bcf	3979,5,c	;volatile
   395                           ;LC-meter.c: 181: delay10ms(50);
   396  000076' 0E32               	movlw	50
   397  000078' 6F00'              	movwf	?_delay10ms& (0+255),b
   398  00007A' 0E00               	movlw	0
   399  00007C' 6B00'              	clrf	(?_delay10ms+1)& (0+255),b
   400  00007E' EC00' F000'        	call	_delay10ms	;wreg free
   401                           ;LC-meter.c: 182: LATC5 = 1;
   402  000082' 8A8B               	bsf	3979,5,c	;volatile
   403                           ;LC-meter.c: 183: delay10ms(50);
   404  000084' 0E32               	movlw	50
   405  000086' 6F00'              	movwf	?_delay10ms& (0+255),b
   406  000088' 0E00               	movlw	0
   407  00008A' 6B00'              	clrf	(?_delay10ms+1)& (0+255),b
   408  00008C' EC00' F000'        	call	_delay10ms	;wreg free
   409                           ;LC-meter.c: 184: LATC5 = 0;
   410  000090' 9A8B               	bcf	3979,5,c	;volatile
   411                           ;LC-meter.c: 187: ser_init();
   412  000092' EC00' F000'        	call	_ser_init	;wreg free
   413                           ;LC-meter.c: 192: TRISC &= ~0b01000000;
   414  000096' 9C94               	bcf	3988,6,c	;volatile
   415                           ;LC-meter.c: 194: PEIE = 1;
   416  000098' 8CF2               	bsf	intcon,6,c	;volatile
   417                           ;LC-meter.c: 195: GIE = 1;
   418  00009A' 8EF2               	bsf	intcon,7,c	;volatile
   419                           ;LC-meter.c: 214: delay10ms(200);
   420  00009C' 0EC8               	movlw	200
   421  00009E' 6F00'              	movwf	?_delay10ms& (0+255),b
   422  0000A0' 0E00               	movlw	0
   423  0000A2' 6B00'              	clrf	(?_delay10ms+1)& (0+255),b
   424  0000A4' EC00' F000'        	call	_delay10ms	;wreg free
   425                           ;LC-meter.c: 217: calibrate();
   426  0000A8' EC00' F000'        	call	_calibrate	;wreg free
   427                           ;LC-meter.c: 228: for(;;) {
   428  0000AC'                    l968:
   429                           ; BSR set to: 1
   430                           ;LC-meter.c: 230: ser_puts("...\r\n");
   431  0000AC' 0E00'              	movlw	STR_1& (0+255)
   432  0000AE' EC00' F000'        	call	_ser_puts
   433                           ;LC-meter.c: 231: if(LATC4)
   434  0000B2' A88B               	btfss	3979,4,c	;volatile
   435  0000B4' D003               	goto	l971
   436                           ;LC-meter.c: 232: measure_capacitance();
   437  0000B6' EC00' F000'        	call	_measure_capacitance	;wreg free
   438  0000BA' D002               	goto	l972
   439  0000BC'                    l971:
   440                           ; BSR set to: 1
   441                           ;LC-meter.c: 233: else
   442                           ;LC-meter.c: 234: measure_inductance();
   443  0000BC' EC00' F000'        	call	_measure_inductance	;wreg free
   444  0000C0'                    l972:
   445                           ; BSR set to: 1
   446                           ;LC-meter.c: 236: indicator(1);
   447  0000C0' 0E01               	movlw	1
   448  0000C2' EC00' F000'        	call	_indicator
   449                           ;LC-meter.c: 237: delay10ms(30);
   450  0000C6' 0E1E               	movlw	30
   451  0000C8' 6F00'              	movwf	?_delay10ms& (0+255),b
   452  0000CA' 0E00               	movlw	0
   453  0000CC' 6B00'              	clrf	(?_delay10ms+1)& (0+255),b
   454  0000CE' EC00' F000'        	call	_delay10ms	;wreg free
   455                           ;LC-meter.c: 238: indicator(0);
   456  0000D2' 0E00               	movlw	0
   457  0000D4' EC00' F000'        	call	_indicator
   458                           ;LC-meter.c: 239: delay10ms(20);
   459  0000D8' 0E14               	movlw	20
   460  0000DA' 6F00'              	movwf	?_delay10ms& (0+255),b
   461  0000DC' 0E00               	movlw	0
   462  0000DE' 6B00'              	clrf	(?_delay10ms+1)& (0+255),b
   463  0000E0' EC00' F000'        	call	_delay10ms	;wreg free
   464                           ;LC-meter.c: 240: }
   465  0000E4' D7E3               	goto	l968
   466  0000E6'                    __end_of_main:
   467                           	opt stack 0
   468                           
   469                           	psect	text1
   470                           ; =============== function _main ends ==========
      +                          ==
   471                           ; *************** function _indicator **********
      +                          *******
   472                           ; Defined at:
   473                           ;		line 469 in file "../../../src/print.c"
   474                           ; Parameters:
   475                           ;		indicate       size:   1reg:   wre	type: unsi
      +                          gned char 
   476                           ; Auto variables:
   477                           ;		None
   478                           ; Return value:
   479                           ;		type: void 
   480                           ;		size: 0
   481                           ; Registers used:
   482                           ;		wreg
   483                           ; Tracked objects:
   484                           ;		On entry : F/1
   485                           ;		On exit  : F/1
   486                           ;		Unchanged: FFFFFFFF/0
   487                           ; Data sizes:
   488                           ;		Autos:    0
   489                           ;		Params:   0
   490                           ;		Temp:     0
   491                           ;		Total:    0
   492                           ; This function calls:
   493                           ;		Nothing
   494                           ; This function is called by:
   495                           ;		_main
   496                           ; This function uses a non-reentrant model
   497                           ; 
   498  000000                     
   499                           ;print.c: 468: void
   500                           ;print.c: 469: indicator(unsigned char indicate)
      +                           {
   501  000000'                    _indicator:
   502                           	opt stack 29
   503                           ; BSR set to: 1
   504                           ; BSR set to: 1
   505  000000' 0012               	return	
   506  000002'                    __end_of_indicator:
   507                           	opt stack 0
   508                           
   509                           	psect	text2
   510                           ; =============== function _indicator ends =====
      +                          =======
   511                           ; *************** function _calibrate **********
      +                          *******
   512                           ; Defined at:
   513                           ;		line 346 in file "../../../src/LC-meter.c"
   514                           ; Parameters:
   515                           ;		None
   516                           ; Auto variables:
   517                           ;		None
   518                           ; Return value:
   519                           ;		type: void 
   520                           ;		size: 0
   521                           ; Registers used:
   522                           ;		wreg, fsr0l, fsr0h, fsr1l, fsr2l, status,2, s
      +                          tatus,0, tblptrl, tblptrh, tblptru, tablat, prod
      +                          l, prodh, cstack
   523                           ; Tracked objects:
   524                           ;		On entry : F/1
   525                           ;		On exit  : F/1
   526                           ;		Unchanged: 0/0
   527                           ; Data sizes:
   528                           ;		Autos:    0
   529                           ;		Params:   0
   530                           ;		Temp:     0
   531                           ;		Total:    0
   532                           ; This function calls:
   533                           ;		_measure_freq
   534                           ;		___lwtofl
   535                           ;		_delay10ms
   536                           ;		_ser_puts
   537                           ; This function is called by:
   538                           ;		_main
   539                           ; This function uses a non-reentrant model
   540                           ; 
   541  000000                     
   542                           ;LC-meter.c: 345: void
   543                           ;LC-meter.c: 346: calibrate() {
   544  000000'                    _calibrate:
   545                           	opt stack 29
   546                           ; BSR set to: 1
   547                           ;LC-meter.c: 347: unsigned char i;
   548                           ;LC-meter.c: 360: LATC5 = 0;
   549  000000' 9A8B               	bcf	3979,5,c	;volatile
   550                           ;LC-meter.c: 362: F1 = (double)measure_freq();
   551  000002' EC00' F000'        	call	_measure_freq	;wreg free
   552  000006' C000' F000'        	movff	?_measure_freq,?___lwtofl
   553  00000A' C001' F001'        	movff	?_measure_freq+1,?___lwtofl+1
   554  00000E' EC00' F000'        	call	___lwtofl	;wreg free
   555  000012' C000' F008         	movff	?___lwtofl,8
   556  000016' C001' F009         	movff	?___lwtofl+1,9
   557  00001A' C002' F00A         	movff	?___lwtofl+2,10
   558  00001E' C003' F00B         	movff	?___lwtofl+3,11
   559                           ;LC-meter.c: 363: delay10ms(50);
   560  000022' 0E32               	movlw	50
   561  000024' 6F00'              	movwf	?_delay10ms& (0+255),b
   562  000026' 0E00               	movlw	0
   563  000028' 6B00'              	clrf	(?_delay10ms+1)& (0+255),b
   564  00002A' EC00' F000'        	call	_delay10ms	;wreg free
   565                           ;LC-meter.c: 365: F1 = (double)measure_freq();
   566  00002E' EC00' F000'        	call	_measure_freq	;wreg free
   567  000032' C000' F000'        	movff	?_measure_freq,?___lwtofl
   568  000036' C001' F001'        	movff	?_measure_freq+1,?___lwtofl+1
   569  00003A' EC00' F000'        	call	___lwtofl	;wreg free
   570  00003E' C000' F008         	movff	?___lwtofl,8
   571  000042' C001' F009         	movff	?___lwtofl+1,9
   572  000046' C002' F00A         	movff	?___lwtofl+2,10
   573  00004A' C003' F00B         	movff	?___lwtofl+3,11
   574                           ;LC-meter.c: 366: LATC5 = 1;
   575  00004E' 8A8B               	bsf	3979,5,c	;volatile
   576                           ;LC-meter.c: 368: F2 = (double)measure_freq();
   577  000050' EC00' F000'        	call	_measure_freq	;wreg free
   578  000054' C000' F000'        	movff	?_measure_freq,?___lwtofl
   579  000058' C001' F001'        	movff	?_measure_freq+1,?___lwtofl+1
   580  00005C' EC00' F000'        	call	___lwtofl	;wreg free
   581  000060' C000' F010         	movff	?___lwtofl,16
   582  000064' C001' F011         	movff	?___lwtofl+1,17
   583  000068' C002' F012         	movff	?___lwtofl+2,18
   584  00006C' C003' F013         	movff	?___lwtofl+3,19
   585                           ;LC-meter.c: 369: delay10ms(50);
   586  000070' 0E32               	movlw	50
   587  000072' 6F00'              	movwf	?_delay10ms& (0+255),b
   588  000074' 0E00               	movlw	0
   589  000076' 6B00'              	clrf	(?_delay10ms+1)& (0+255),b
   590  000078' EC00' F000'        	call	_delay10ms	;wreg free
   591                           ;LC-meter.c: 371: F2 = (double)measure_freq();
   592  00007C' EC00' F000'        	call	_measure_freq	;wreg free
   593  000080' C000' F000'        	movff	?_measure_freq,?___lwtofl
   594  000084' C001' F001'        	movff	?_measure_freq+1,?___lwtofl+1
   595  000088' EC00' F000'        	call	___lwtofl	;wreg free
   596  00008C' C000' F010         	movff	?___lwtofl,16
   597  000090' C001' F011         	movff	?___lwtofl+1,17
   598  000094' C002' F012         	movff	?___lwtofl+2,18
   599  000098' C003' F013         	movff	?___lwtofl+3,19
   600                           ;LC-meter.c: 372: LATC5 = 0;
   601  00009C' 9A8B               	bcf	3979,5,c	;volatile
   602                           ;LC-meter.c: 384: ser_puts("\r\n");
   603  00009E' 0E00'              	movlw	(STR_1+3)& (0+255)
   604  0000A0' EF00' F000'        	goto	_ser_puts
   605                           ;LC-meter.c: 385: }
   606                           ; BSR set to: 1
   607  0000A4'                    __end_of_calibrate:
   608                           	opt stack 0
   609                           
   610                           	psect	text3
   611                           ; =============== function _calibrate ends =====
      +                          =======
   612                           ; *************** function _measure_inductance *
      +                          ****************
   613                           ; Defined at:
   614                           ;		line 469 in file "../../../src/LC-meter.c"
   615                           ; Parameters:
   616                           ;		None
   617                           ; Auto variables:
   618                           ;		unit        	       	type: unsigned char 
   619                           ;		var         	       	type: unsigned short 
   620                           ;		denominator 	       	type: unsigned short 
   621                           ;		numerator   	       	type: unsigned short 
   622                           ;		Lin         	       	type: unsigned short 
   623                           ; Return value:
   624                           ;		type: void 
   625                           ;		size: 0
   626                           ; Registers used:
   627                           ;		wreg, fsr0l, fsr0h, fsr1l, fsr2l, status,2, s
      +                          tatus,0, prodl, prodh, cstack
   628                           ; Tracked objects:
   629                           ;		On entry : F/1
   630                           ;		On exit  : F/1
   631                           ;		Unchanged: 0/0
   632                           ; Data sizes:
   633                           ;		Autos:   30
   634                           ;		Params:   0
   635                           ;		Temp:     0
   636                           ;		Total:   30
   637                           ; This function calls:
   638                           ;		_measure_freq
   639                           ;		___lwtofl
   640                           ;		___flge
   641                           ;		___flmul
   642                           ;		___flsub
   643                           ;		___fldiv
   644                           ;		___asfldiv
   645                           ;		___asflmul
   646                           ;		___fltol
   647                           ;		_print_reading
   648                           ;		_print_unit
   649                           ; This function is called by:
   650                           ;		_main
   651                           ; This function uses a non-reentrant model
   652                           ; 
   653  000000                     
   654                           ;LC-meter.c: 468: void
   655                           ;LC-meter.c: 469: measure_inductance() {
   656  000000'                    _measure_inductance:
   657                           	opt stack 29
   658                           ; BSR set to: 1
   659  000000' EC00' F000'        	call	_measure_freq	;wreg free
   660  000004' C000' F010'        	movff	?_measure_freq,??_measure_inductance+16
   661  000008' C001' F011'        	movff	?_measure_freq+1,??_measure_inductance+17
   662                           ;LC-meter.c: 481: F3 = (double)var;
   663  00000C' C010' F000'        	movff	??_measure_inductance+16,?___lwtofl
   664  000010' C011' F001'        	movff	??_measure_inductance+17,?___lwtofl+1
   665  000014' EC00' F000'        	call	___lwtofl	;wreg free
   666  000018' C000' F00C         	movff	?___lwtofl,12
   667  00001C' C001' F00D         	movff	?___lwtofl+1,13
   668  000020' C002' F00E         	movff	?___lwtofl+2,14
   669  000024' C003' F00F         	movff	?___lwtofl+3,15
   670                           ;LC-meter.c: 482: if(F3 > F1)
   671  000028' C00C F004'         	movff	12,?___flge+4
   672  00002C' C00D F005'         	movff	13,?___flge+5
   673  000030' C00E F006'         	movff	14,?___flge+6
   674  000034' C00F F007'         	movff	15,?___flge+7
   675  000038' C008 F000'         	movff	8,?___flge
   676  00003C' C009 F001'         	movff	9,?___flge+1
   677  000040' C00A F002'         	movff	10,?___flge+2
   678  000044' C00B F003'         	movff	11,?___flge+3
   679  000048' EC00' F000'        	call	___flge	;wreg free
   680  00004C' E208               	bc	l992
   681                           ;LC-meter.c: 483: F3 = F1;
   682  00004E' C008 F00C          	movff	8,12
   683  000052' C009 F00D          	movff	9,13
   684  000056' C00A F00E          	movff	10,14
   685  00005A' C00B F00F          	movff	11,15
   686  00005E'                    l992:
   687                           ; BSR set to: 1
   688                           ;LC-meter.c: 485: numerator = ((F1 * F1) - (F3 *
      +                           F3)) * ((F1 * F1) - (F2 - F2)) * (100 * 100);
   689  00005E' C008 F004'         	movff	8,?___flmul+4
   690  000062' C009 F005'         	movff	9,?___flmul+5
   691  000066' C00A F006'         	movff	10,?___flmul+6
   692  00006A' C00B F007'         	movff	11,?___flmul+7
   693  00006E' C008 F000'         	movff	8,?___flmul
   694  000072' C009 F001'         	movff	9,?___flmul+1
   695  000076' C00A F002'         	movff	10,?___flmul+2
   696  00007A' C00B F003'         	movff	11,?___flmul+3
   697  00007E' EC00' F000'        	call	___flmul	;wreg free
   698  000082' C000' F000'        	movff	?___flmul,??_measure_inductance
   699  000086' C001' F001'        	movff	?___flmul+1,??_measure_inductance+1
   700  00008A' C002' F002'        	movff	?___flmul+2,??_measure_inductance+2
   701  00008E' C003' F003'        	movff	?___flmul+3,??_measure_inductance+3
   702  000092' C00C F004'         	movff	12,?___flmul+4
   703  000096' C00D F005'         	movff	13,?___flmul+5
   704  00009A' C00E F006'         	movff	14,?___flmul+6
   705  00009E' C00F F007'         	movff	15,?___flmul+7
   706  0000A2' C00C F000'         	movff	12,?___flmul
   707  0000A6' C00D F001'         	movff	13,?___flmul+1
   708  0000AA' C00E F002'         	movff	14,?___flmul+2
   709  0000AE' C00F F003'         	movff	15,?___flmul+3
   710  0000B2' EC00' F000'        	call	___flmul	;wreg free
   711  0000B6' C000' F004'        	movff	?___flmul,??_measure_inductance+4
   712  0000BA' C001' F005'        	movff	?___flmul+1,??_measure_inductance+5
   713  0000BE' C002' F006'        	movff	?___flmul+2,??_measure_inductance+6
   714  0000C2' C003' F007'        	movff	?___flmul+3,??_measure_inductance+7
   715  0000C6' C008 F004'         	movff	8,?___flmul+4
   716  0000CA' C009 F005'         	movff	9,?___flmul+5
   717  0000CE' C00A F006'         	movff	10,?___flmul+6
   718  0000D2' C00B F007'         	movff	11,?___flmul+7
   719  0000D6' C008 F000'         	movff	8,?___flmul
   720  0000DA' C009 F001'         	movff	9,?___flmul+1
   721  0000DE' C00A F002'         	movff	10,?___flmul+2
   722  0000E2' C00B F003'         	movff	11,?___flmul+3
   723  0000E6' EC00' F000'        	call	___flmul	;wreg free
   724  0000EA' C000' F008'        	movff	?___flmul,??_measure_inductance+8
   725  0000EE' C001' F009'        	movff	?___flmul+1,??_measure_inductance+9
   726  0000F2' C002' F00A'        	movff	?___flmul+2,??_measure_inductance+10
   727  0000F6' C003' F00B'        	movff	?___flmul+3,??_measure_inductance+11
   728  0000FA' C004' F004'        	movff	??_measure_inductance+4,?___flsub+4
   729  0000FE' C005' F005'        	movff	??_measure_inductance+5,?___flsub+5
   730  000102' C006' F006'        	movff	??_measure_inductance+6,?___flsub+6
   731  000106' C007' F007'        	movff	??_measure_inductance+7,?___flsub+7
   732  00010A' C008' F000'        	movff	??_measure_inductance+8,?___flsub
   733  00010E' C009' F001'        	movff	??_measure_inductance+9,?___flsub+1
   734  000112' C00A' F002'        	movff	??_measure_inductance+10,?___flsub+2
   735  000116' C00B' F003'        	movff	??_measure_inductance+11,?___flsub+3
   736  00011A' EC00' F000'        	call	___flsub	;wreg free
   737  00011E' C000' F00C'        	movff	?___flsub,??_measure_inductance+12
   738  000122' C001' F00D'        	movff	?___flsub+1,??_measure_inductance+13
   739  000126' C002' F00E'        	movff	?___flsub+2,??_measure_inductance+14
   740  00012A' C003' F00F'        	movff	?___flsub+3,??_measure_inductance+15
   741  00012E' C010 F004'         	movff	16,?___flsub+4
   742  000132' C011 F005'         	movff	17,?___flsub+5
   743  000136' C012 F006'         	movff	18,?___flsub+6
   744  00013A' C013 F007'         	movff	19,?___flsub+7
   745  00013E' C010 F000'         	movff	16,?___flsub
   746  000142' C011 F001'         	movff	17,?___flsub+1
   747  000146' C012 F002'         	movff	18,?___flsub+2
   748  00014A' C013 F003'         	movff	19,?___flsub+3
   749  00014E' EC00' F000'        	call	___flsub	;wreg free
   750  000152' C000' F004'        	movff	?___flsub,?___flsub+4
   751  000156' C001' F005'        	movff	?___flsub+1,?___flsub+5
   752  00015A' C002' F006'        	movff	?___flsub+2,?___flsub+6
   753  00015E' C003' F007'        	movff	?___flsub+3,?___flsub+7
   754  000162' C000' F000'        	movff	??_measure_inductance,?___flsub
   755  000166' C001' F001'        	movff	??_measure_inductance+1,?___flsub+1
   756  00016A' C002' F002'        	movff	??_measure_inductance+2,?___flsub+2
   757  00016E' C003' F003'        	movff	??_measure_inductance+3,?___flsub+3
   758  000172' EC00' F000'        	call	___flsub	;wreg free
   759  000176' C000' F004'        	movff	?___flsub,?___flmul+4
   760  00017A' C001' F005'        	movff	?___flsub+1,?___flmul+5
   761  00017E' C002' F006'        	movff	?___flsub+2,?___flmul+6
   762  000182' C003' F007'        	movff	?___flsub+3,?___flmul+7
   763  000186' C00C' F000'        	movff	??_measure_inductance+12,?___flmul
   764  00018A' C00D' F001'        	movff	??_measure_inductance+13,?___flmul+1
   765  00018E' C00E' F002'        	movff	??_measure_inductance+14,?___flmul+2
   766  000192' C00F' F003'        	movff	??_measure_inductance+15,?___flmul+3
   767  000196' EC00' F000'        	call	___flmul	;wreg free
   768  00019A' 6B00'              	clrf	(?___flmul+4)& (0+255),b
   769  00019C' 0E40               	movlw	64
   770  00019E' 6F00'              	movwf	(?___flmul+5)& (0+255),b
   771  0001A0' 0E1C               	movlw	28
   772  0001A2' 6F00'              	movwf	(?___flmul+6)& (0+255),b
   773  0001A4' 0E46               	movlw	70
   774  0001A6' 6F00'              	movwf	(?___flmul+7)& (0+255),b
   775  0001A8' EC00' F000'        	call	___flmul	;wreg free
   776  0001AC' C000' F016'        	movff	?___flmul,??_measure_inductance+22
   777  0001B0' C001' F017'        	movff	?___flmul+1,??_measure_inductance+23
   778  0001B4' C002' F018'        	movff	?___flmul+2,??_measure_inductance+24
   779  0001B8' C003' F019'        	movff	?___flmul+3,??_measure_inductance+25
   780                           ;LC-meter.c: 487: denominator = 4 * 3.1415926535
      +                          8979323846l * 3.14159265358979323846l * F1 * F1 
      +                          * F2 * F2 * F3 * F3 * CCal;
   781  0001BC' C008 F004'         	movff	8,?___flmul+4
   782  0001C0' C009 F005'         	movff	9,?___flmul+5
   783  0001C4' C00A F006'         	movff	10,?___flmul+6
   784  0001C8' C00B F007'         	movff	11,?___flmul+7
   785  0001CC' C008 F000'         	movff	8,?___flmul
   786  0001D0' C009 F001'         	movff	9,?___flmul+1
   787  0001D4' C00A F002'         	movff	10,?___flmul+2
   788  0001D8' C00B F003'         	movff	11,?___flmul+3
   789  0001DC' EC00' F000'        	call	___flmul	;wreg free
   790  0001E0' C010 F004'         	movff	16,?___flmul+4
   791  0001E4' C011 F005'         	movff	17,?___flmul+5
   792  0001E8' C012 F006'         	movff	18,?___flmul+6
   793  0001EC' C013 F007'         	movff	19,?___flmul+7
   794  0001F0' EC00' F000'        	call	___flmul	;wreg free
   795  0001F4' C010 F004'         	movff	16,?___flmul+4
   796  0001F8' C011 F005'         	movff	17,?___flmul+5
   797  0001FC' C012 F006'         	movff	18,?___flmul+6
   798  000200' C013 F007'         	movff	19,?___flmul+7
   799  000204' EC00' F000'        	call	___flmul	;wreg free
   800  000208' C00C F004'         	movff	12,?___flmul+4
   801  00020C' C00D F005'         	movff	13,?___flmul+5
   802  000210' C00E F006'         	movff	14,?___flmul+6
   803  000214' C00F F007'         	movff	15,?___flmul+7
   804  000218' EC00' F000'        	call	___flmul	;wreg free
   805  00021C' C00C F004'         	movff	12,?___flmul+4
   806  000220' C00D F005'         	movff	13,?___flmul+5
   807  000224' C00E F006'         	movff	14,?___flmul+6
   808  000228' C00F F007'         	movff	15,?___flmul+7
   809  00022C' EC00' F000'        	call	___flmul	;wreg free
   810  000230' C000 F004'         	movff	0,?___flmul+4
   811  000234' C001 F005'         	movff	1,?___flmul+5
   812  000238' C002 F006'         	movff	2,?___flmul+6
   813  00023C' C003 F007'         	movff	3,?___flmul+7
   814  000240' EC00' F000'        	call	___flmul	;wreg free
   815  000244' 0EE6               	movlw	230
   816  000246' 6F00'              	movwf	(?___flmul+4)& (0+255),b
   817  000248' 0EE9               	movlw	233
   818  00024A' 6F00'              	movwf	(?___flmul+5)& (0+255),b
   819  00024C' 0E1D               	movlw	29
   820  00024E' 6F00'              	movwf	(?___flmul+6)& (0+255),b
   821  000250' 0E42               	movlw	66
   822  000252' 6F00'              	movwf	(?___flmul+7)& (0+255),b
   823  000254' EC00' F000'        	call	___flmul	;wreg free
   824  000258' C000' F012'        	movff	?___flmul,??_measure_inductance+18
   825  00025C' C001' F013'        	movff	?___flmul+1,??_measure_inductance+19
   826  000260' C002' F014'        	movff	?___flmul+2,??_measure_inductance+20
   827  000264' C003' F015'        	movff	?___flmul+3,??_measure_inductance+21
   828                           ;LC-meter.c: 489: Lin = (numerator / denominator
      +                          ) * 1e+15l;
   829  000268' C012' F004'        	movff	??_measure_inductance+18,?___fldiv+4
   830  00026C' C013' F005'        	movff	??_measure_inductance+19,?___fldiv+5
   831  000270' C014' F006'        	movff	??_measure_inductance+20,?___fldiv+6
   832  000274' C015' F007'        	movff	??_measure_inductance+21,?___fldiv+7
   833  000278' C016' F000'        	movff	??_measure_inductance+22,?___fldiv
   834  00027C' C017' F001'        	movff	??_measure_inductance+23,?___fldiv+1
   835  000280' C018' F002'        	movff	??_measure_inductance+24,?___fldiv+2
   836  000284' C019' F003'        	movff	??_measure_inductance+25,?___fldiv+3
   837  000288' EC00' F000'        	call	___fldiv	;wreg free
   838  00028C' C000' F000'        	movff	?___fldiv,?___flmul
   839  000290' C001' F001'        	movff	?___fldiv+1,?___flmul+1
   840  000294' C002' F002'        	movff	?___fldiv+2,?___flmul+2
   841  000298' C003' F003'        	movff	?___fldiv+3,?___flmul+3
   842  00029C' 0EA9               	movlw	169
   843  00029E' 6F00'              	movwf	(?___flmul+4)& (0+255),b
   844  0002A0' 0E5F               	movlw	95
   845  0002A2' 6F00'              	movwf	(?___flmul+5)& (0+255),b
   846  0002A4' 0E63               	movlw	99
   847  0002A6' 6F00'              	movwf	(?___flmul+6)& (0+255),b
   848  0002A8' 0E58               	movlw	88
   849  0002AA' 6F00'              	movwf	(?___flmul+7)& (0+255),b
   850  0002AC' EC00' F000'        	call	___flmul	;wreg free
   851  0002B0' C000' F01A'        	movff	?___flmul,??_measure_inductance+26
   852  0002B4' C001' F01B'        	movff	?___flmul+1,??_measure_inductance+27
   853  0002B8' C002' F01C'        	movff	?___flmul+2,??_measure_inductance+28
   854  0002BC' C003' F01D'        	movff	?___flmul+3,??_measure_inductance+29
   855                           ;LC-meter.c: 491: if(Lin > 999) {
   856  0002C0' C01A' F004'        	movff	??_measure_inductance+26,?___flge+4
   857  0002C4' C01B' F005'        	movff	??_measure_inductance+27,?___flge+5
   858  0002C8' C01C' F006'        	movff	??_measure_inductance+28,?___flge+6
   859  0002CC' C01D' F007'        	movff	??_measure_inductance+29,?___flge+7
   860  0002D0' 6B00'              	clrf	?___flge& (0+255),b
   861  0002D2' 0EC0               	movlw	192
   862  0002D4' 6F00'              	movwf	(?___flge+1)& (0+255),b
   863  0002D6' 0E79               	movlw	121
   864  0002D8' 6F00'              	movwf	(?___flge+2)& (0+255),b
   865  0002DA' 0E44               	movlw	68
   866  0002DC' 6F00'              	movwf	(?___flge+3)& (0+255),b
   867  0002DE' EC00' F000'        	call	___flge	;wreg free
   868  0002E2' E253               	bc	l993
   869                           ;LC-meter.c: 492: if(Lin > (999e+03l)) {
   870  0002E4' C01A' F004'        	movff	??_measure_inductance+26,?___flge+4
   871  0002E8' C01B' F005'        	movff	??_measure_inductance+27,?___flge+5
   872  0002EC' C01C' F006'        	movff	??_measure_inductance+28,?___flge+6
   873  0002F0' C01D' F007'        	movff	??_measure_inductance+29,?___flge+7
   874  0002F4' 0E80               	movlw	128
   875  0002F6' 6F00'              	movwf	?___flge& (0+255),b
   876  0002F8' 0EE5               	movlw	229
   877  0002FA' 6F00'              	movwf	(?___flge+1)& (0+255),b
   878  0002FC' 0E73               	movlw	115
   879  0002FE' 6F00'              	movwf	(?___flge+2)& (0+255),b
   880  000300' 0E49               	movlw	73
   881  000302' 6F00'              	movwf	(?___flge+3)& (0+255),b
   882  000304' EC00' F000'        	call	___flge	;wreg free
   883  000308' E232               	bc	l994
   884                           ;LC-meter.c: 493: if(Lin > (999e+06l)) {
   885  00030A' C01A' F004'        	movff	??_measure_inductance+26,?___flge+4
   886  00030E' C01B' F005'        	movff	??_measure_inductance+27,?___flge+5
   887  000312' C01C' F006'        	movff	??_measure_inductance+28,?___flge+6
   888  000316' C01D' F007'        	movff	??_measure_inductance+29,?___flge+7
   889  00031A' 0E1F               	movlw	31
   890  00031C' 6F00'              	movwf	?___flge& (0+255),b
   891  00031E' 0E2E               	movlw	46
   892  000320' 6F00'              	movwf	(?___flge+1)& (0+255),b
   893  000322' 0E6E               	movlw	110
   894  000324' 6F00'              	movwf	(?___flge+2)& (0+255),b
   895  000326' 0E4E               	movlw	78
   896  000328' 6F00'              	movwf	(?___flge+3)& (0+255),b
   897  00032A' EC00' F000'        	call	___flge	;wreg free
   898  00032E' E210               	bc	l995
   899                           ;LC-meter.c: 494: Lin = Lin / (1e+09l);
   900  000330' 0E28               	movlw	40
   901  000332' 6F00'              	movwf	(?___asfldiv+2)& (0+255),b
   902  000334' 0E6B               	movlw	107
   903  000336' 6F00'              	movwf	(?___asfldiv+3)& (0+255),b
   904  000338' 0E6E               	movlw	110
   905  00033A' 6F00'              	movwf	(?___asfldiv+4)& (0+255),b
   906  00033C' 0E4E               	movlw	78
   907  00033E' 6F00'              	movwf	(?___asfldiv+5)& (0+255),b
   908  000340' 0E00'              	movlw	low (??_measure_inductance+26)
   909  000342' 6F00'              	movwf	?___asfldiv& (0+255),b
   910  000344' 0E00'              	movlw	high (??_measure_inductance+26)
   911  000346' 6F00'              	movwf	(?___asfldiv+1)& (0+255),b
   912  000348' EC00' F000'        	call	___asfldiv	;wreg free
   913                           ;LC-meter.c: 495: unit = 0;
   914  00034C' 6AE1               	clrf	fsr1l,c
   915                           ;LC-meter.c: 496: } else {
   916  00034E' D01F               	goto	l998
   917  000350'                    l995:
   918                           ; BSR set to: 1
   919                           ;LC-meter.c: 497: Lin = Lin / (1e+06l);
   920  000350' 6B00'              	clrf	(?___asfldiv+2)& (0+255),b
   921  000352' 0E24               	movlw	36
   922  000354' 6F00'              	movwf	(?___asfldiv+3)& (0+255),b
   923  000356' 0E74               	movlw	116
   924  000358' 6F00'              	movwf	(?___asfldiv+4)& (0+255),b
   925  00035A' 0E49               	movlw	73
   926  00035C' 6F00'              	movwf	(?___asfldiv+5)& (0+255),b
   927  00035E' 0E00'              	movlw	low (??_measure_inductance+26)
   928  000360' 6F00'              	movwf	?___asfldiv& (0+255),b
   929  000362' 0E00'              	movlw	high (??_measure_inductance+26)
   930  000364' 6F00'              	movwf	(?___asfldiv+1)& (0+255),b
   931  000366' EC00' F000'        	call	___asfldiv	;wreg free
   932                           ;LC-meter.c: 498: unit = 1;
   933  00036A' 0E01               	movlw	1
   934  00036C' D00F               	goto	L2
   935                           ; BSR set to: 1
   936                           ;LC-meter.c: 499: }
   937                           ;LC-meter.c: 500: } else {
   938  00036E'                    l994:
   939                           ; BSR set to: 1
   940                           ;LC-meter.c: 501: Lin = Lin / 1e+03l;
   941  00036E' 6B00'              	clrf	(?___asfldiv+2)& (0+255),b
   942  000370' 6B00'              	clrf	(?___asfldiv+3)& (0+255),b
   943  000372' 0E7A               	movlw	122
   944  000374' 6F00'              	movwf	(?___asfldiv+4)& (0+255),b
   945  000376' 0E44               	movlw	68
   946  000378' 6F00'              	movwf	(?___asfldiv+5)& (0+255),b
   947  00037A' 0E00'              	movlw	low (??_measure_inductance+26)
   948  00037C' 6F00'              	movwf	?___asfldiv& (0+255),b
   949  00037E' 0E00'              	movlw	high (??_measure_inductance+26)
   950  000380' 6F00'              	movwf	(?___asfldiv+1)& (0+255),b
   951  000382' EC00' F000'        	call	___asfldiv	;wreg free
   952                           ;LC-meter.c: 502: unit = 2;
   953  000386' 0E02               	movlw	2
   954  000388' D001               	goto	L2
   955                           ; BSR set to: 1
   956                           ;LC-meter.c: 503: }
   957                           ;LC-meter.c: 504: } else
   958  00038A'                    l993:
   959                           ; BSR set to: 1
   960                           ;LC-meter.c: 505: unit = 3;
   961  00038A' 0E03               	movlw	3
   962  00038C'                    L2:
   963  00038C' 6EE1               	movwf	fsr1l,c
   964  00038E'                    l998:
   965                           ; BSR set to: 1
   966                           ;LC-meter.c: 507: Lin = Lin * 100;
   967  00038E' 6B00'              	clrf	(?___asflmul+2)& (0+255),b
   968  000390' 6B00'              	clrf	(?___asflmul+3)& (0+255),b
   969  000392' 0EC8               	movlw	200
   970  000394' 6F00'              	movwf	(?___asflmul+4)& (0+255),b
   971  000396' 0E42               	movlw	66
   972  000398' 6F00'              	movwf	(?___asflmul+5)& (0+255),b
   973  00039A' 0E00'              	movlw	low (??_measure_inductance+26)
   974  00039C' 6F00'              	movwf	?___asflmul& (0+255),b
   975  00039E' 0E00'              	movlw	high (??_measure_inductance+26)
   976  0003A0' 6F00'              	movwf	(?___asflmul+1)& (0+255),b
   977  0003A2' EC00' F000'        	call	___asflmul	;wreg free
   978                           ;LC-meter.c: 508: var = (unsigned short int)Lin;
   979  0003A6' C01A' F000'        	movff	??_measure_inductance+26,?___fltol
   980  0003AA' C01B' F001'        	movff	??_measure_inductance+27,?___fltol+1
   981  0003AE' C01C' F002'        	movff	??_measure_inductance+28,?___fltol+2
   982  0003B2' C01D' F003'        	movff	??_measure_inductance+29,?___fltol+3
   983  0003B6' EC00' F000'        	call	___fltol	;wreg free
   984  0003BA' C000' F010'        	movff	?___fltol,??_measure_inductance+16
   985  0003BE' C001' F011'        	movff	?___fltol+1,??_measure_inductance+17
   986                           ;LC-meter.c: 510: print_reading(var);
   987  0003C2' C010' F000'        	movff	??_measure_inductance+16,?_print_reading
   988  0003C6' C011' F001'        	movff	??_measure_inductance+17,?_print_reading+
      +                          1
   989  0003CA' EC00' F000'        	call	_print_reading	;wreg free
   990                           ;LC-meter.c: 511: print_unit(unit);
   991  0003CE' 50E1               	movf	fsr1l,w,c
   992  0003D0' EF00' F000'        	goto	_print_unit
   993                           ;LC-meter.c: 512: }
   994                           ; BSR set to: 1
   995  0003D4'                    __end_of_measure_inductance:
   996                           	opt stack 0
   997                           
   998                           	psect	text4
   999                           ; =============== function _measure_inductance e
      +                          nds ============
  1000                           ; *************** function _measure_capacitance 
      +                          *****************
  1001                           ; Defined at:
  1002                           ;		line 391 in file "../../../src/LC-meter.c"
  1003                           ; Parameters:
  1004                           ;		None
  1005                           ; Auto variables:
  1006                           ;		unit        	       	type: unsigned char 
  1007                           ;		var         	       	type: unsigned short 
  1008                           ;		Cin         	       	type: unsigned short 
  1009                           ; Return value:
  1010                           ;		type: void 
  1011                           ;		size: 0
  1012                           ; Registers used:
  1013                           ;		wreg, fsr0l, fsr0h, fsr1l, fsr2l, status,2, s
      +                          tatus,0, pclat, tosl, tblptrl, tblptrh, tblptru,
      +                           tablat, prodl, prodh, cstack
  1014                           ; Tracked objects:
  1015                           ;		On entry : F/1
  1016                           ;		On exit  : F/1
  1017                           ;		Unchanged: 0/0
  1018                           ; Data sizes:
  1019                           ;		Autos:   14
  1020                           ;		Params:   0
  1021                           ;		Temp:     0
  1022                           ;		Total:   14
  1023                           ; This function calls:
  1024                           ;		_measure_freq
  1025                           ;		___lwtofl
  1026                           ;		_ser_puts
  1027                           ;		_format_xint32
  1028                           ;		_format_double
  1029                           ;		_ser_putch
  1030                           ;		___flge
  1031                           ;		___flmul
  1032                           ;		___flsub
  1033                           ;		___asfldiv
  1034                           ;		___asflmul
  1035                           ;		___fltol
  1036                           ;		_print_reading
  1037                           ;		_print_unit
  1038                           ; This function is called by:
  1039                           ;		_main
  1040                           ; This function uses a non-reentrant model
  1041                           ; 
  1042  000000                     
  1043                           ;LC-meter.c: 390: void
  1044                           ;LC-meter.c: 391: measure_capacitance() {
  1045  000000'                    _measure_capacitance:
  1046                           	opt stack 29
  1047                           ; BSR set to: 1
  1048  000000' EC00' F000'        	call	_measure_freq	;wreg free
  1049  000004' C000' F008'        	movff	?_measure_freq,??_measure_capacitance+8
  1050  000008' C001' F009'        	movff	?_measure_freq+1,??_measure_capacitance+9
  1051                           ;LC-meter.c: 404: F3 = (double)var;
  1052  00000C' C008' F000'        	movff	??_measure_capacitance+8,?___lwtofl
  1053  000010' C009' F001'        	movff	??_measure_capacitance+9,?___lwtofl+1
  1054  000014' EC00' F000'        	call	___lwtofl	;wreg free
  1055  000018' C000' F00C         	movff	?___lwtofl,12
  1056  00001C' C001' F00D         	movff	?___lwtofl+1,13
  1057  000020' C002' F00E         	movff	?___lwtofl+2,14
  1058  000024' C003' F00F         	movff	?___lwtofl+3,15
  1059                           ;LC-meter.c: 406: putchar_ptr = &ser_putch;
  1060  000028' 0100               	movlb	0	; () banked
  1061  00002A' 0E00'              	movlw	low _ser_putch
  1062  00002C' 6E47               	movwf	71,c
  1063  00002E' 0E00'              	movlw	high _ser_putch
  1064  000030' 6E48               	movwf	72,c
  1065                           ;LC-meter.c: 407: ser_puts("var=");
  1066  000032' 0E00'              	movlw	STR_4& (0+255)
  1067  000034' EC00' F000'        	call	_ser_puts
  1068                           ;LC-meter.c: 408: format_xint32( var);
  1069  000038' 0101               	movlb	1	; () banked
  1070  00003A' C008' F000'        	movff	??_measure_capacitance+8,?_format_xint32
  1071  00003E' C009' F001'        	movff	??_measure_capacitance+9,?_format_xint32+
      +                          1
  1072  000042' 6B00'              	clrf	(?_format_xint32+2)& (0+255),b
  1073  000044' 6B00'              	clrf	(?_format_xint32+3)& (0+255),b
  1074  000046' EC00' F000'        	call	_format_xint32	;wreg free
  1075                           ;LC-meter.c: 409: ser_puts("\r\nF1=");
  1076  00004A' 0E00'              	movlw	STR_5& (0+255)
  1077  00004C' EC00' F000'        	call	_ser_puts
  1078                           ;LC-meter.c: 410: format_double( F1);
  1079  000050' C008 F000'         	movff	8,?_format_double
  1080  000054' C009 F001'         	movff	9,?_format_double+1
  1081  000058' C00A F002'         	movff	10,?_format_double+2
  1082  00005C' C00B F003'         	movff	11,?_format_double+3
  1083  000060' EC00' F000'        	call	_format_double	;wreg free
  1084                           ;LC-meter.c: 411: ser_putch(' ');
  1085  000064' 0E20               	movlw	32
  1086  000066' EC00' F000'        	call	_ser_putch
  1087                           ;LC-meter.c: 412: format_xint32( *(unsigned long
      +                           int*)&F1);
  1088  00006A' C008 F000'         	movff	8,?_format_xint32
  1089  00006E' C009 F001'         	movff	9,?_format_xint32+1
  1090  000072' C00A F002'         	movff	10,?_format_xint32+2
  1091  000076' C00B F003'         	movff	11,?_format_xint32+3
  1092  00007A' EC00' F000'        	call	_format_xint32	;wreg free
  1093                           ;LC-meter.c: 413: ser_puts("\r\nF2=");
  1094  00007E' 0E00'              	movlw	STR_6& (0+255)
  1095  000080' EC00' F000'        	call	_ser_puts
  1096                           ;LC-meter.c: 414: format_double( F2);
  1097  000084' C010 F000'         	movff	16,?_format_double
  1098  000088' C011 F001'         	movff	17,?_format_double+1
  1099  00008C' C012 F002'         	movff	18,?_format_double+2
  1100  000090' C013 F003'         	movff	19,?_format_double+3
  1101  000094' EC00' F000'        	call	_format_double	;wreg free
  1102                           ;LC-meter.c: 415: ser_putch(' ');
  1103  000098' 0E20               	movlw	32
  1104  00009A' EC00' F000'        	call	_ser_putch
  1105                           ;LC-meter.c: 416: format_xint32( *(unsigned long
      +                           int*)&F2);
  1106  00009E' C010 F000'         	movff	16,?_format_xint32
  1107  0000A2' C011 F001'         	movff	17,?_format_xint32+1
  1108  0000A6' C012 F002'         	movff	18,?_format_xint32+2
  1109  0000AA' C013 F003'         	movff	19,?_format_xint32+3
  1110  0000AE' EC00' F000'        	call	_format_xint32	;wreg free
  1111                           ;LC-meter.c: 417: ser_puts("\r\nF3=");
  1112  0000B2' 0E00'              	movlw	STR_7& (0+255)
  1113  0000B4' EC00' F000'        	call	_ser_puts
  1114                           ;LC-meter.c: 418: format_double( F3);
  1115  0000B8' C00C F000'         	movff	12,?_format_double
  1116  0000BC' C00D F001'         	movff	13,?_format_double+1
  1117  0000C0' C00E F002'         	movff	14,?_format_double+2
  1118  0000C4' C00F F003'         	movff	15,?_format_double+3
  1119  0000C8' EC00' F000'        	call	_format_double	;wreg free
  1120                           ;LC-meter.c: 419: ser_putch(' ');
  1121  0000CC' 0E20               	movlw	32
  1122  0000CE' EC00' F000'        	call	_ser_putch
  1123                           ;LC-meter.c: 420: format_xint32( *(unsigned long
      +                           int*)&F3);
  1124  0000D2' C00C F000'         	movff	12,?_format_xint32
  1125  0000D6' C00D F001'         	movff	13,?_format_xint32+1
  1126  0000DA' C00E F002'         	movff	14,?_format_xint32+2
  1127  0000DE' C00F F003'         	movff	15,?_format_xint32+3
  1128  0000E2' EC00' F000'        	call	_format_xint32	;wreg free
  1129                           ;LC-meter.c: 421: ser_puts("\r\nCCal=");
  1130  0000E6' 0E00'              	movlw	STR_8& (0+255)
  1131  0000E8' EC00' F000'        	call	_ser_puts
  1132                           ;LC-meter.c: 422: format_double( CCal);
  1133  0000EC' C000 F000'         	movff	0,?_format_double
  1134  0000F0' C001 F001'         	movff	1,?_format_double+1
  1135  0000F4' C002 F002'         	movff	2,?_format_double+2
  1136  0000F8' C003 F003'         	movff	3,?_format_double+3
  1137  0000FC' EC00' F000'        	call	_format_double	;wreg free
  1138                           ;LC-meter.c: 423: ser_putch(' ');
  1139  000100' 0E20               	movlw	32
  1140  000102' EC00' F000'        	call	_ser_putch
  1141                           ;LC-meter.c: 424: format_xint32( *(unsigned long
      +                           int*)&CCal);
  1142  000106' C000 F000'         	movff	0,?_format_xint32
  1143  00010A' C001 F001'         	movff	1,?_format_xint32+1
  1144  00010E' C002 F002'         	movff	2,?_format_xint32+2
  1145  000112' C003 F003'         	movff	3,?_format_xint32+3
  1146  000116' EC00' F000'        	call	_format_xint32	;wreg free
  1147                           ;LC-meter.c: 425: ser_puts("\r\n");
  1148  00011A' 0E00'              	movlw	(STR_1+3)& (0+255)
  1149  00011C' EC00' F000'        	call	_ser_puts
  1150                           ;LC-meter.c: 427: putchar_ptr = &output_putch;
  1151  000120' 0100               	movlb	0	; () banked
  1152  000122' 0E00'              	movlw	low _output_putch
  1153  000124' 6E47               	movwf	71,c
  1154  000126' 0E00'              	movlw	high _output_putch
  1155  000128' 6E48               	movwf	72,c
  1156                           ;LC-meter.c: 429: if(F3 > F1)
  1157  00012A' C00C F004'         	movff	12,?___flge+4
  1158  00012E' C00D F005'         	movff	13,?___flge+5
  1159  000132' C00E F006'         	movff	14,?___flge+6
  1160  000136' C00F F007'         	movff	15,?___flge+7
  1161  00013A' C008 F000'         	movff	8,?___flge
  1162  00013E' C009 F001'         	movff	9,?___flge+1
  1163  000142' C00A F002'         	movff	10,?___flge+2
  1164  000146' C00B F003'         	movff	11,?___flge+3
  1165  00014A' EC00' F000'        	call	___flge	;wreg free
  1166  00014E' E208               	bc	l984
  1167                           ;LC-meter.c: 430: F3 = F1;
  1168  000150' C008 F00C          	movff	8,12
  1169  000154' C009 F00D          	movff	9,13
  1170  000158' C00A F00E          	movff	10,14
  1171  00015C' C00B F00F          	movff	11,15
  1172  000160'                    l984:
  1173                           ; BSR set to: 1
  1174                           ;LC-meter.c: 432: Cin = F2 * F2 * (F1 * F1 - F3 
      +                          * F3) * CCal;
  1175  000160' C00C F004'         	movff	12,?___flmul+4
  1176  000164' C00D F005'         	movff	13,?___flmul+5
  1177  000168' C00E F006'         	movff	14,?___flmul+6
  1178  00016C' C00F F007'         	movff	15,?___flmul+7
  1179  000170' C00C F000'         	movff	12,?___flmul
  1180  000174' C00D F001'         	movff	13,?___flmul+1
  1181  000178' C00E F002'         	movff	14,?___flmul+2
  1182  00017C' C00F F003'         	movff	15,?___flmul+3
  1183  000180' EC00' F000'        	call	___flmul	;wreg free
  1184  000184' C000' F000'        	movff	?___flmul,??_measure_capacitance
  1185  000188' C001' F001'        	movff	?___flmul+1,??_measure_capacitance+1
  1186  00018C' C002' F002'        	movff	?___flmul+2,??_measure_capacitance+2
  1187  000190' C003' F003'        	movff	?___flmul+3,??_measure_capacitance+3
  1188  000194' C008 F004'         	movff	8,?___flmul+4
  1189  000198' C009 F005'         	movff	9,?___flmul+5
  1190  00019C' C00A F006'         	movff	10,?___flmul+6
  1191  0001A0' C00B F007'         	movff	11,?___flmul+7
  1192  0001A4' C008 F000'         	movff	8,?___flmul
  1193  0001A8' C009 F001'         	movff	9,?___flmul+1
  1194  0001AC' C00A F002'         	movff	10,?___flmul+2
  1195  0001B0' C00B F003'         	movff	11,?___flmul+3
  1196  0001B4' EC00' F000'        	call	___flmul	;wreg free
  1197  0001B8' C000' F004'        	movff	?___flmul,??_measure_capacitance+4
  1198  0001BC' C001' F005'        	movff	?___flmul+1,??_measure_capacitance+5
  1199  0001C0' C002' F006'        	movff	?___flmul+2,??_measure_capacitance+6
  1200  0001C4' C003' F007'        	movff	?___flmul+3,??_measure_capacitance+7
  1201  0001C8' C000' F004'        	movff	??_measure_capacitance,?___flsub+4
  1202  0001CC' C001' F005'        	movff	??_measure_capacitance+1,?___flsub+5
  1203  0001D0' C002' F006'        	movff	??_measure_capacitance+2,?___flsub+6
  1204  0001D4' C003' F007'        	movff	??_measure_capacitance+3,?___flsub+7
  1205  0001D8' C004' F000'        	movff	??_measure_capacitance+4,?___flsub
  1206  0001DC' C005' F001'        	movff	??_measure_capacitance+5,?___flsub+1
  1207  0001E0' C006' F002'        	movff	??_measure_capacitance+6,?___flsub+2
  1208  0001E4' C007' F003'        	movff	??_measure_capacitance+7,?___flsub+3
  1209  0001E8' EC00' F000'        	call	___flsub	;wreg free
  1210  0001EC' C000' F000'        	movff	?___flsub,?___flmul
  1211  0001F0' C001' F001'        	movff	?___flsub+1,?___flmul+1
  1212  0001F4' C002' F002'        	movff	?___flsub+2,?___flmul+2
  1213  0001F8' C003' F003'        	movff	?___flsub+3,?___flmul+3
  1214  0001FC' C010 F004'         	movff	16,?___flmul+4
  1215  000200' C011 F005'         	movff	17,?___flmul+5
  1216  000204' C012 F006'         	movff	18,?___flmul+6
  1217  000208' C013 F007'         	movff	19,?___flmul+7
  1218  00020C' EC00' F000'        	call	___flmul	;wreg free
  1219  000210' C010 F004'         	movff	16,?___flmul+4
  1220  000214' C011 F005'         	movff	17,?___flmul+5
  1221  000218' C012 F006'         	movff	18,?___flmul+6
  1222  00021C' C013 F007'         	movff	19,?___flmul+7
  1223  000220' EC00' F000'        	call	___flmul	;wreg free
  1224  000224' C000 F004'         	movff	0,?___flmul+4
  1225  000228' C001 F005'         	movff	1,?___flmul+5
  1226  00022C' C002 F006'         	movff	2,?___flmul+6
  1227  000230' C003 F007'         	movff	3,?___flmul+7
  1228  000234' EC00' F000'        	call	___flmul	;wreg free
  1229  000238' C000' F00A'        	movff	?___flmul,??_measure_capacitance+10
  1230  00023C' C001' F00B'        	movff	?___flmul+1,??_measure_capacitance+11
  1231  000240' C002' F00C'        	movff	?___flmul+2,??_measure_capacitance+12
  1232  000244' C003' F00D'        	movff	?___flmul+3,??_measure_capacitance+13
  1233                           ;LC-meter.c: 436: ser_puts("Cin=");
  1234  000248' 0E00'              	movlw	STR_10& (0+255)
  1235  00024A' EC00' F000'        	call	_ser_puts
  1236                           ;LC-meter.c: 437: format_double( Cin);
  1237  00024E' C00A' F000'        	movff	??_measure_capacitance+10,?_format_double
  1238  000252' C00B' F001'        	movff	??_measure_capacitance+11,?_format_double
      +                          +1
  1239  000256' C00C' F002'        	movff	??_measure_capacitance+12,?_format_double
      +                          +2
  1240  00025A' C00D' F003'        	movff	??_measure_capacitance+13,?_format_double
      +                          +3
  1241  00025E' EC00' F000'        	call	_format_double	;wreg free
  1242                           ;LC-meter.c: 438: ser_putch(' ');
  1243  000262' 0E20               	movlw	32
  1244  000264' EC00' F000'        	call	_ser_putch
  1245                           ;LC-meter.c: 439: format_xint32( *(unsigned long
      +                           int*)&Cin);
  1246  000268' C00A' F000'        	movff	??_measure_capacitance+10,?_format_xint32
  1247  00026C' C00B' F001'        	movff	??_measure_capacitance+11,?_format_xint32
      +                          +1
  1248  000270' C00C' F002'        	movff	??_measure_capacitance+12,?_format_xint32
      +                          +2
  1249  000274' C00D' F003'        	movff	??_measure_capacitance+13,?_format_xint32
      +                          +3
  1250  000278' EC00' F000'        	call	_format_xint32	;wreg free
  1251                           ;LC-meter.c: 440: ser_puts("\r\n");
  1252  00027C' 0E00'              	movlw	(STR_1+3)& (0+255)
  1253  00027E' EC00' F000'        	call	_ser_puts
  1254                           ;LC-meter.c: 442: if(Cin > 999) {
  1255  000282' C00A' F004'        	movff	??_measure_capacitance+10,?___flge+4
  1256  000286' C00B' F005'        	movff	??_measure_capacitance+11,?___flge+5
  1257  00028A' C00C' F006'        	movff	??_measure_capacitance+12,?___flge+6
  1258  00028E' C00D' F007'        	movff	??_measure_capacitance+13,?___flge+7
  1259  000292' 6B00'              	clrf	?___flge& (0+255),b
  1260  000294' 0EC0               	movlw	192
  1261  000296' 6F00'              	movwf	(?___flge+1)& (0+255),b
  1262  000298' 0E79               	movlw	121
  1263  00029A' 6F00'              	movwf	(?___flge+2)& (0+255),b
  1264  00029C' 0E44               	movlw	68
  1265  00029E' 6F00'              	movwf	(?___flge+3)& (0+255),b
  1266  0002A0' EC00' F000'        	call	___flge	;wreg free
  1267  0002A4' E253               	bc	l985
  1268                           ;LC-meter.c: 443: if(Cin > (999e+03l)) {
  1269  0002A6' C00A' F004'        	movff	??_measure_capacitance+10,?___flge+4
  1270  0002AA' C00B' F005'        	movff	??_measure_capacitance+11,?___flge+5
  1271  0002AE' C00C' F006'        	movff	??_measure_capacitance+12,?___flge+6
  1272  0002B2' C00D' F007'        	movff	??_measure_capacitance+13,?___flge+7
  1273  0002B6' 0E80               	movlw	128
  1274  0002B8' 6F00'              	movwf	?___flge& (0+255),b
  1275  0002BA' 0EE5               	movlw	229
  1276  0002BC' 6F00'              	movwf	(?___flge+1)& (0+255),b
  1277  0002BE' 0E73               	movlw	115
  1278  0002C0' 6F00'              	movwf	(?___flge+2)& (0+255),b
  1279  0002C2' 0E49               	movlw	73
  1280  0002C4' 6F00'              	movwf	(?___flge+3)& (0+255),b
  1281  0002C6' EC00' F000'        	call	___flge	;wreg free
  1282  0002CA' E232               	bc	l986
  1283                           ;LC-meter.c: 444: if(Cin > (999e+06l)) {
  1284  0002CC' C00A' F004'        	movff	??_measure_capacitance+10,?___flge+4
  1285  0002D0' C00B' F005'        	movff	??_measure_capacitance+11,?___flge+5
  1286  0002D4' C00C' F006'        	movff	??_measure_capacitance+12,?___flge+6
  1287  0002D8' C00D' F007'        	movff	??_measure_capacitance+13,?___flge+7
  1288  0002DC' 0E1F               	movlw	31
  1289  0002DE' 6F00'              	movwf	?___flge& (0+255),b
  1290  0002E0' 0E2E               	movlw	46
  1291  0002E2' 6F00'              	movwf	(?___flge+1)& (0+255),b
  1292  0002E4' 0E6E               	movlw	110
  1293  0002E6' 6F00'              	movwf	(?___flge+2)& (0+255),b
  1294  0002E8' 0E4E               	movlw	78
  1295  0002EA' 6F00'              	movwf	(?___flge+3)& (0+255),b
  1296  0002EC' EC00' F000'        	call	___flge	;wreg free
  1297  0002F0' E210               	bc	l987
  1298                           ;LC-meter.c: 445: Cin = Cin / (1e+09l);
  1299  0002F2' 0E28               	movlw	40
  1300  0002F4' 6F00'              	movwf	(?___asfldiv+2)& (0+255),b
  1301  0002F6' 0E6B               	movlw	107
  1302  0002F8' 6F00'              	movwf	(?___asfldiv+3)& (0+255),b
  1303  0002FA' 0E6E               	movlw	110
  1304  0002FC' 6F00'              	movwf	(?___asfldiv+4)& (0+255),b
  1305  0002FE' 0E4E               	movlw	78
  1306  000300' 6F00'              	movwf	(?___asfldiv+5)& (0+255),b
  1307  000302' 0E00'              	movlw	low (??_measure_capacitance+10)
  1308  000304' 6F00'              	movwf	?___asfldiv& (0+255),b
  1309  000306' 0E00'              	movlw	high (??_measure_capacitance+10)
  1310  000308' 6F00'              	movwf	(?___asfldiv+1)& (0+255),b
  1311  00030A' EC00' F000'        	call	___asfldiv	;wreg free
  1312                           ;LC-meter.c: 446: unit = 4;
  1313  00030E' 0E04               	movlw	4
  1314  000310' D01E               	goto	L4
  1315                           ;LC-meter.c: 447: } else {
  1316  000312'                    l987:
  1317                           ; BSR set to: 1
  1318                           ;LC-meter.c: 448: Cin = Cin / (1e+06l);
  1319  000312' 6B00'              	clrf	(?___asfldiv+2)& (0+255),b
  1320  000314' 0E24               	movlw	36
  1321  000316' 6F00'              	movwf	(?___asfldiv+3)& (0+255),b
  1322  000318' 0E74               	movlw	116
  1323  00031A' 6F00'              	movwf	(?___asfldiv+4)& (0+255),b
  1324  00031C' 0E49               	movlw	73
  1325  00031E' 6F00'              	movwf	(?___asfldiv+5)& (0+255),b
  1326  000320' 0E00'              	movlw	low (??_measure_capacitance+10)
  1327  000322' 6F00'              	movwf	?___asfldiv& (0+255),b
  1328  000324' 0E00'              	movlw	high (??_measure_capacitance+10)
  1329  000326' 6F00'              	movwf	(?___asfldiv+1)& (0+255),b
  1330  000328' EC00' F000'        	call	___asfldiv	;wreg free
  1331                           ;LC-meter.c: 449: unit = 5;
  1332  00032C' 0E05               	movlw	5
  1333  00032E' D00F               	goto	L4
  1334                           ; BSR set to: 1
  1335                           ;LC-meter.c: 450: }
  1336                           ;LC-meter.c: 451: } else {
  1337  000330'                    l986:
  1338                           ; BSR set to: 1
  1339                           ;LC-meter.c: 452: Cin = Cin / 1e+03l;
  1340  000330' 6B00'              	clrf	(?___asfldiv+2)& (0+255),b
  1341  000332' 6B00'              	clrf	(?___asfldiv+3)& (0+255),b
  1342  000334' 0E7A               	movlw	122
  1343  000336' 6F00'              	movwf	(?___asfldiv+4)& (0+255),b
  1344  000338' 0E44               	movlw	68
  1345  00033A' 6F00'              	movwf	(?___asfldiv+5)& (0+255),b
  1346  00033C' 0E00'              	movlw	low (??_measure_capacitance+10)
  1347  00033E' 6F00'              	movwf	?___asfldiv& (0+255),b
  1348  000340' 0E00'              	movlw	high (??_measure_capacitance+10)
  1349  000342' 6F00'              	movwf	(?___asfldiv+1)& (0+255),b
  1350  000344' EC00' F000'        	call	___asfldiv	;wreg free
  1351                           ;LC-meter.c: 453: unit = 6;
  1352  000348' 0E06               	movlw	6
  1353  00034A' D001               	goto	L4
  1354                           ; BSR set to: 1
  1355                           ;LC-meter.c: 454: }
  1356                           ;LC-meter.c: 455: } else
  1357  00034C'                    l985:
  1358                           ; BSR set to: 1
  1359                           ;LC-meter.c: 456: unit = 7;
  1360  00034C' 0E07               	movlw	7
  1361  00034E'                    L4:
  1362  00034E' 6EE1               	movwf	fsr1l,c
  1363                           ; BSR set to: 1
  1364                           ;LC-meter.c: 458: Cin = Cin * 100;
  1365  000350' 6B00'              	clrf	(?___asflmul+2)& (0+255),b
  1366  000352' 6B00'              	clrf	(?___asflmul+3)& (0+255),b
  1367  000354' 0EC8               	movlw	200
  1368  000356' 6F00'              	movwf	(?___asflmul+4)& (0+255),b
  1369  000358' 0E42               	movlw	66
  1370  00035A' 6F00'              	movwf	(?___asflmul+5)& (0+255),b
  1371  00035C' 0E00'              	movlw	low (??_measure_capacitance+10)
  1372  00035E' 6F00'              	movwf	?___asflmul& (0+255),b
  1373  000360' 0E00'              	movlw	high (??_measure_capacitance+10)
  1374  000362' 6F00'              	movwf	(?___asflmul+1)& (0+255),b
  1375  000364' EC00' F000'        	call	___asflmul	;wreg free
  1376                           ;LC-meter.c: 459: var = (unsigned short int)Cin;
  1377  000368' C00A' F000'        	movff	??_measure_capacitance+10,?___fltol
  1378  00036C' C00B' F001'        	movff	??_measure_capacitance+11,?___fltol+1
  1379  000370' C00C' F002'        	movff	??_measure_capacitance+12,?___fltol+2
  1380  000374' C00D' F003'        	movff	??_measure_capacitance+13,?___fltol+3
  1381  000378' EC00' F000'        	call	___fltol	;wreg free
  1382  00037C' C000' F008'        	movff	?___fltol,??_measure_capacitance+8
  1383  000380' C001' F009'        	movff	?___fltol+1,??_measure_capacitance+9
  1384                           ;LC-meter.c: 461: print_reading(var);
  1385  000384' C008' F000'        	movff	??_measure_capacitance+8,?_print_reading
  1386  000388' C009' F001'        	movff	??_measure_capacitance+9,?_print_reading+
      +                          1
  1387  00038C' EC00' F000'        	call	_print_reading	;wreg free
  1388                           ;LC-meter.c: 462: print_unit(unit);
  1389  000390' 50E1               	movf	fsr1l,w,c
  1390  000392' EF00' F000'        	goto	_print_unit
  1391                           ;LC-meter.c: 463: }
  1392                           ; BSR set to: 1
  1393  000396'                    __end_of_measure_capacitance:
  1394                           	opt stack 0
  1395                           
  1396                           	psect	text5
  1397                           ; =============== function _measure_capacitance 
      +                          ends ============
  1398                           ; *************** function _timer2_init ********
      +                          *********
  1399                           ; Defined at:
  1400                           ;		line 81 in file "../../../lib/timer.c"
  1401                           ; Parameters:
  1402                           ;		ps_mode        size:   1reg:   wre	type: unsi
      +                          gned char 
  1403                           ; Auto variables:
  1404                           ;		postscaler  	       	type: unsigned char 
  1405                           ;		ps          	       	type: unsigned char 
  1406                           ; Return value:
  1407                           ;		type: void 
  1408                           ;		size: 0
  1409                           ; Registers used:
  1410                           ;		wreg, fsr0l, fsr1l, fsr2l, status,2, status,0
  1411                           ; Tracked objects:
  1412                           ;		On entry : 0/0
  1413                           ;		On exit  : 0/0
  1414                           ;		Unchanged: FFFFFFF0/0
  1415                           ; Data sizes:
  1416                           ;		Autos:    0
  1417                           ;		Params:   0
  1418                           ;		Temp:     1
  1419                           ;		Total:    1
  1420                           ; This function calls:
  1421                           ;		Nothing
  1422                           ; This function is called by:
  1423                           ;		_main
  1424                           ; This function uses a non-reentrant model
  1425                           ; 
  1426  000000                     
  1427                           ;timer.c: 80: void
  1428                           ;timer.c: 81: timer2_init(unsigned char ps_mode)
      +                           {
  1429  000000'                    _timer2_init:
  1430                           	opt stack 29
  1431                           ; BSR set to: ?
  1432                           ; timer2_init@ps_mode loaded to fsr1l
  1433  000000' CFE8 FFE1          	movff	wreg,fsr1l
  1434  000004' 50E1               	movf	fsr1l,w,c
  1435  000006' 0B0F               	andlw	15
  1436  000008' 6ED9               	movwf	fsr2l,c
  1437                           ;timer.c: 83: unsigned char postscaler = 0;
  1438  00000A' 6AE9               	clrf	fsr0l,c
  1439                           ;timer.c: 86: TOUTPS0 = postscaler & 1;
  1440  00000C' 96CA               	bcf	4042,3,c	;volatile
  1441                           ;timer.c: 87: TOUTPS1 = (postscaler >> 1) & 1;
  1442  00000E' 98CA               	bcf	4042,4,c	;volatile
  1443                           ;timer.c: 88: TOUTPS2 = (postscaler >> 2) & 1;
  1444  000010' 9ACA               	bcf	4042,5,c	;volatile
  1445                           ;timer.c: 90: T2CKPS0 = (ps >> 1) & 1;
  1446  000012' CFD9 F000'         	movff	fsr2l,??_timer2_init
  1447  000016' 90D8               	bcf	status,0,c
  1448  000018' 0101               	movlb	1	; () banked
  1449  00001A' 3300'              	rrcf	??_timer2_init& (0+255),f,b
  1450  00001C' 3100'              	rrcf	??_timer2_init& (0+255),w,b
  1451  00001E' A0D8               	btfss	status,0,c
  1452  000020' D001               	bra	u1365
  1453  000022' 80CA               	bsf	4042,0,c	;volatile
  1454  000024'                    u1365:
  1455  000024' B0D8               	btfsc	status,0,c
  1456  000026' D001               	bra	u1366
  1457  000028' 90CA               	bcf	4042,0,c	;volatile
  1458  00002A'                    u1366:
  1459                           ;timer.c: 91: T2CKPS1 = (ps >> 2) & 1;
  1460  00002A' CFD9 F000'         	movff	fsr2l,??_timer2_init
  1461  00002E' 90D8               	bcf	status,0,c
  1462  000030' 3300'              	rrcf	??_timer2_init& (0+255),f,b
  1463  000032' 90D8               	bcf	status,0,c
  1464  000034' 3300'              	rrcf	??_timer2_init& (0+255),f,b
  1465  000036' 3100'              	rrcf	??_timer2_init& (0+255),w,b
  1466  000038' A0D8               	btfss	status,0,c
  1467  00003A' D001               	bra	u1375
  1468  00003C' 82CA               	bsf	4042,1,c	;volatile
  1469  00003E'                    u1375:
  1470  00003E' B0D8               	btfsc	status,0,c
  1471  000040' D001               	bra	u1376
  1472  000042' 92CA               	bcf	4042,1,c	;volatile
  1473  000044'                    u1376:
  1474                           ;timer.c: 93: TMR2 = 0;
  1475  000044' 6ACC               	clrf	4044,c	;volatile
  1476                           ;timer.c: 95: TMR2ON = 1;
  1477  000046' 84CA               	bsf	4042,2,c	;volatile
  1478                           ;timer.c: 97: TMR2IF = 0;
  1479  000048' 929E               	bcf	3998,1,c	;volatile
  1480                           ;timer.c: 98: TMR2IE = !!(ps_mode & 0x80);
  1481  00004A' AEE1               	btfss	fsr1l,7,c
  1482  00004C' D002               	goto	u1380
  1483  00004E' 829D               	bsf	3997,1,c	;volatile
  1484  000050' D001               	goto	u1395
  1485  000052'                    u1380:
  1486  000052' 929D               	bcf	3997,1,c	;volatile
  1487  000054'                    u1395:
  1488                           ;timer.c: 99: }
  1489                           ; BSR set to: ?
  1490  000054' 0012               	return	
  1491  000056'                    __end_of_timer2_init:
  1492                           	opt stack 0
  1493                           
  1494                           	psect	text6
  1495                           ; =============== function _timer2_init ends ===
      +                          =========
  1496                           ; *************** function _ser_init ***********
      +                          ******
  1497                           ; Defined at:
  1498                           ;		line 125 in file "../../../lib/ser.c"
  1499                           ; Parameters:
  1500                           ;		None
  1501                           ; Auto variables:
  1502                           ;		None
  1503                           ; Return value:
  1504                           ;		type: void 
  1505                           ;		size: 0
  1506                           ; Registers used:
  1507                           ;		wreg, status,2
  1508                           ; Tracked objects:
  1509                           ;		On entry : F/1
  1510                           ;		On exit  : F/1
  1511                           ;		Unchanged: FFFFFFFF/0
  1512                           ; Data sizes:
  1513                           ;		Autos:    0
  1514                           ;		Params:   0
  1515                           ;		Temp:     0
  1516                           ;		Total:    0
  1517                           ; This function calls:
  1518                           ;		Nothing
  1519                           ; This function is called by:
  1520                           ;		_main
  1521                           ; This function uses a non-reentrant model
  1522                           ; 
  1523  000000                     
  1524                           ;ser.c: 124: void
  1525                           ;ser.c: 125: ser_init(void) {
  1526  000000'                    _ser_init:
  1527                           	opt stack 29
  1528                           ; BSR set to: 1
  1529  000000' 8C94               	bsf	3988,6,c	;volatile
  1530                           ;ser.c: 129: LATC7 = 1;
  1531  000002' 8E8B               	bsf	3979,7,c	;volatile
  1532                           ;ser.c: 131: BRGH = 1;
  1533  000004' 84AC               	bsf	4012,2,c	;volatile
  1534                           ;ser.c: 136: SPBRG = ser_brg;
  1535  000006' 0E1F               	movlw	31
  1536  000008' 6EAF               	movwf	4015,c	;volatile
  1537                           ;ser.c: 139: TX9 = 0;
  1538  00000A' 9CAC               	bcf	4012,6,c	;volatile
  1539                           ;ser.c: 140: RX9 = 0;
  1540  00000C' 9CAB               	bcf	4011,6,c	;volatile
  1541                           ;ser.c: 142: SYNC = 0;
  1542  00000E' 98AC               	bcf	4012,4,c	;volatile
  1543                           ;ser.c: 143: SPEN = 1;
  1544  000010' 8EAB               	bsf	4011,7,c	;volatile
  1545                           ;ser.c: 144: CREN = 1;
  1546  000012' 88AB               	bsf	4011,4,c	;volatile
  1547                           ;ser.c: 145: TXIE = 0;
  1548  000014' 989D               	bcf	3997,4,c	;volatile
  1549                           ;ser.c: 147: TXEN = 1;
  1550  000016' 8AAC               	bsf	4012,5,c	;volatile
  1551                           ;ser.c: 148: PEIE = 1;
  1552  000018' 8CF2               	bsf	intcon,6,c	;volatile
  1553                           ;ser.c: 150: rxiptr = rxoptr = txiptr = txoptr =
      +                           0;
  1554  00001A' 6A3C               	clrf	60,c	;volatile
  1555  00001C' 6A3A               	clrf	58,c	;volatile
  1556  00001E' 6A3E               	clrf	62,c	;volatile
  1557  000020' 6A3B               	clrf	59,c	;volatile
  1558                           ;ser.c: 151: }
  1559                           ; BSR set to: 1
  1560  000022' 0012               	return	
  1561  000024'                    __end_of_ser_init:
  1562                           	opt stack 0
  1563                           
  1564                           	psect	text7
  1565                           ; =============== function _ser_init ends ======
      +                          ======
  1566                           ; *************** function _print_reading ******
      +                          ***********
  1567                           ; Defined at:
  1568                           ;		line 429 in file "../../../src/print.c"
  1569                           ; Parameters:
  1570                           ;		measurement    size:   2offs:   0	type: unsig
      +                          ned short 
  1571                           ; Auto variables:
  1572                           ;		None
  1573                           ; Return value:
  1574                           ;		type: void 
  1575                           ;		size: 0
  1576                           ; Registers used:
  1577                           ;		None
  1578                           ; Tracked objects:
  1579                           ;		On entry : F/1
  1580                           ;		On exit  : F/1
  1581                           ;		Unchanged: FFFFFFFF/0
  1582                           ; Data sizes:
  1583                           ;		Autos:    0
  1584                           ;		Params:   2
  1585                           ;		Temp:     0
  1586                           ;		Total:    2
  1587                           ; This function calls:
  1588                           ;		Nothing
  1589                           ; This function is called by:
  1590                           ;		_measure_capacitance
  1591                           ;		_measure_inductance
  1592                           ; This function uses a non-reentrant model
  1593                           ; 
  1594  000000                     
  1595                           ;print.c: 428: void
  1596                           ;print.c: 429: print_reading(unsigned short int 
      +                          measurement) {
  1597  000000'                    _print_reading:
  1598                           	opt stack 28
  1599                           ; BSR set to: 1
  1600                           ; BSR set to: 1
  1601  000000' 0012               	return	
  1602  000002'                    __end_of_print_reading:
  1603                           	opt stack 0
  1604                           
  1605                           	psect	text8
  1606                           ; =============== function _print_reading ends =
      +                          ===========
  1607                           ; *************** function _format_double ******
      +                          ***********
  1608                           ; Defined at:
  1609                           ;		line 74 in file "../../../lib/format.c"
  1610                           ; Parameters:
  1611                           ;		num            size:   4offs:   0	type: void 
  1612                           ; Auto variables:
  1613                           ;		digit       	       	type: short 
  1614                           ;		m           	       	type: short 
  1615                           ;		weight      	       	type: short 
  1616                           ; Return value:
  1617                           ;		type: void 
  1618                           ;		size: 0
  1619                           ; Registers used:
  1620                           ;		wreg, fsr0l, fsr0h, fsr1l, fsr2l, status,2, s
      +                          tatus,0, pclat, tosl, tblptrl, tblptrh, tblptru,
      +                           tablat, prodl, prodh, cstack
  1621                           ; Tracked objects:
  1622                           ;		On entry : F/1
  1623                           ;		On exit  : F/1
  1624                           ;		Unchanged: FFFFFFF0/0
  1625                           ; Data sizes:
  1626                           ;		Autos:   16
  1627                           ;		Params:   4
  1628                           ;		Temp:     0
  1629                           ;		Total:   20
  1630                           ; This function calls:
  1631                           ;		_log10
  1632                           ;		___fltol
  1633                           ;		___awtofl
  1634                           ;		_pow
  1635                           ;		___fldiv
  1636                           ;		_floor
  1637                           ;		___flmul
  1638                           ;		___asflsub
  1639                           ;		___flge
  1640                           ;		_output_putch
  1641                           ;		_ser_putch
  1642                           ;		_format_putchar
  1643                           ; This function is called by:
  1644                           ;		_measure_capacitance
  1645                           ; This function uses a non-reentrant model
  1646                           ; 
  1647  000000                     
  1648                           ;format.c: 73: void
  1649                           ;format.c: 74: format_double(double num) {
  1650  000000'                    _format_double:
  1651                           	opt stack 28
  1652                           ; BSR set to: 1
  1653  000000' C000' F000'        	movff	?_format_double,?_log10
  1654  000004' C001' F001'        	movff	?_format_double+1,?_log10+1
  1655  000008' C002' F002'        	movff	?_format_double+2,?_log10+2
  1656  00000C' C003' F003'        	movff	?_format_double+3,?_log10+3
  1657  000010' EC00' F000'        	call	_log10	;wreg free
  1658  000014' C000' F000'        	movff	?_log10,?___fltol
  1659  000018' C001' F001'        	movff	?_log10+1,?___fltol+1
  1660  00001C' C002' F002'        	movff	?_log10+2,?___fltol+2
  1661  000020' C003' F003'        	movff	?_log10+3,?___fltol+3
  1662  000024' EC00' F000'        	call	___fltol	;wreg free
  1663  000028' C000' F00A'        	movff	?___fltol,??_format_double+10
  1664  00002C' C001' F00B'        	movff	?___fltol+1,??_format_double+11
  1665                           ;format.c: 76: short digit;
  1666                           ;format.c: 79: while(num > 0 + 1.19209290e-07) {
  1667  000030'                    l774:
  1668                           ; BSR set to: 1
  1669  000030' C000' F004'        	movff	?_format_double,?___flge+4
  1670  000034' C001' F005'        	movff	?_format_double+1,?___flge+5
  1671  000038' C002' F006'        	movff	?_format_double+2,?___flge+6
  1672  00003C' C003' F007'        	movff	?_format_double+3,?___flge+7
  1673  000040' 6B00'              	clrf	?___flge& (0+255),b
  1674  000042' 6B00'              	clrf	(?___flge+1)& (0+255),b
  1675  000044' 6B00'              	clrf	(?___flge+2)& (0+255),b
  1676  000046' 0E34               	movlw	52
  1677  000048' 6F00'              	movwf	(?___flge+3)& (0+255),b
  1678  00004A' EC00' F000'        	call	___flge
  1679  00004E' E301 D09F          	bc	u3090
  1680                           ; BSR set to: 1
  1681                           ;format.c: 80: double weight = pow(10.0l, m);
  1682  000052' C00A' F000'        	movff	??_format_double+10,?___awtofl
  1683  000056' C00B' F001'        	movff	??_format_double+11,?___awtofl+1
  1684  00005A' EC00' F000'        	call	___awtofl	;wreg free
  1685  00005E' C000' F004'        	movff	?___awtofl,?_pow+4
  1686  000062' C001' F005'        	movff	?___awtofl+1,?_pow+5
  1687  000066' C002' F006'        	movff	?___awtofl+2,?_pow+6
  1688  00006A' C003' F007'        	movff	?___awtofl+3,?_pow+7
  1689  00006E' 6B00'              	clrf	?_pow& (0+255),b
  1690  000070' 6B00'              	clrf	(?_pow+1)& (0+255),b
  1691  000072' 0E20               	movlw	32
  1692  000074' 6F00'              	movwf	(?_pow+2)& (0+255),b
  1693  000076' 0E41               	movlw	65
  1694  000078' 6F00'              	movwf	(?_pow+3)& (0+255),b
  1695  00007A' EC00' F000'        	call	_pow	;wreg free
  1696  00007E' C000' F00C'        	movff	?_pow,??_format_double+12
  1697  000082' C001' F00D'        	movff	?_pow+1,??_format_double+13
  1698  000086' C002' F00E'        	movff	?_pow+2,??_format_double+14
  1699  00008A' C003' F00F'        	movff	?_pow+3,??_format_double+15
  1700                           ;format.c: 81: digit = (short)floor(num / weight
      +                          );
  1701  00008E' C00C' F004'        	movff	??_format_double+12,?___fldiv+4
  1702  000092' C00D' F005'        	movff	??_format_double+13,?___fldiv+5
  1703  000096' C00E' F006'        	movff	??_format_double+14,?___fldiv+6
  1704  00009A' C00F' F007'        	movff	??_format_double+15,?___fldiv+7
  1705  00009E' C000' F000'        	movff	?_format_double,?___fldiv
  1706  0000A2' C001' F001'        	movff	?_format_double+1,?___fldiv+1
  1707  0000A6' C002' F002'        	movff	?_format_double+2,?___fldiv+2
  1708  0000AA' C003' F003'        	movff	?_format_double+3,?___fldiv+3
  1709  0000AE' EC00' F000'        	call	___fldiv	;wreg free
  1710  0000B2' C000' F000'        	movff	?___fldiv,?_floor
  1711  0000B6' C001' F001'        	movff	?___fldiv+1,?_floor+1
  1712  0000BA' C002' F002'        	movff	?___fldiv+2,?_floor+2
  1713  0000BE' C003' F003'        	movff	?___fldiv+3,?_floor+3
  1714  0000C2' EC00' F000'        	call	_floor	;wreg free
  1715  0000C6' C000' F000'        	movff	?_floor,?___fltol
  1716  0000CA' C001' F001'        	movff	?_floor+1,?___fltol+1
  1717  0000CE' C002' F002'        	movff	?_floor+2,?___fltol+2
  1718  0000D2' C003' F003'        	movff	?_floor+3,?___fltol+3
  1719  0000D6' EC00' F000'        	call	___fltol	;wreg free
  1720  0000DA' C000' F008'        	movff	?___fltol,??_format_double+8
  1721  0000DE' C001' F009'        	movff	?___fltol+1,??_format_double+9
  1722                           ;format.c: 82: num -= (digit * weight);
  1723  0000E2' C008' F000'        	movff	??_format_double+8,?___awtofl
  1724  0000E6' C009' F001'        	movff	??_format_double+9,?___awtofl+1
  1725  0000EA' EC00' F000'        	call	___awtofl	;wreg free
  1726  0000EE' C000' F000'        	movff	?___awtofl,??_format_double
  1727  0000F2' C001' F001'        	movff	?___awtofl+1,??_format_double+1
  1728  0000F6' C002' F002'        	movff	?___awtofl+2,??_format_double+2
  1729  0000FA' C003' F003'        	movff	?___awtofl+3,??_format_double+3
  1730  0000FE' C000' F000'        	movff	??_format_double,?___flmul
  1731  000102' C001' F001'        	movff	??_format_double+1,?___flmul+1
  1732  000106' C002' F002'        	movff	??_format_double+2,?___flmul+2
  1733  00010A' C003' F003'        	movff	??_format_double+3,?___flmul+3
  1734  00010E' C00C' F004'        	movff	??_format_double+12,?___flmul+4
  1735  000112' C00D' F005'        	movff	??_format_double+13,?___flmul+5
  1736  000116' C00E' F006'        	movff	??_format_double+14,?___flmul+6
  1737  00011A' C00F' F007'        	movff	??_format_double+15,?___flmul+7
  1738  00011E' EC00' F000'        	call	___flmul	;wreg free
  1739  000122' C000' F004'        	movff	?___flmul,??_format_double+4
  1740  000126' C001' F005'        	movff	?___flmul+1,??_format_double+5
  1741  00012A' C002' F006'        	movff	?___flmul+2,??_format_double+6
  1742  00012E' C003' F007'        	movff	?___flmul+3,??_format_double+7
  1743  000132' C004' F002'        	movff	??_format_double+4,?___asflsub+2
  1744  000136' C005' F003'        	movff	??_format_double+5,?___asflsub+3
  1745  00013A' C006' F004'        	movff	??_format_double+6,?___asflsub+4
  1746  00013E' C007' F005'        	movff	??_format_double+7,?___asflsub+5
  1747  000142' 0E00'              	movlw	low ?_format_double
  1748  000144' 6F00'              	movwf	?___asflsub& (0+255),b
  1749  000146' 0E00'              	movlw	high ?_format_double
  1750  000148' 6F00'              	movwf	(?___asflsub+1)& (0+255),b
  1751  00014A' EC00' F000'        	call	___asflsub	;wreg free
  1752                           ;format.c: 83: putchar_ptr((char)('0' + digit));
  1753  00014E' D801               	call	u3068
  1754  000150' D00C               	goto	u3069
  1755  000152'                    u3068:
  1756  000152' 0005               	push	
  1757  000154' 6EFA               	movwf	pclath,c
  1758  000156' 5047               	movf	71,w,c
  1759  000158' 6EFD               	movwf	tosl,c
  1760  00015A' 5048               	movf	72,w,c
  1761  00015C' 6EFE               	movwf	tosh,c
  1762  00015E' 50F8               	movf	tblptru,w,c
  1763  000160' 6EFF               	movwf	tosu,c
  1764  000162' 50FA               	movf	pclath,w,c
  1765  000164' 5100'              	movf	(??_format_double+8)& (0+255),w,b
  1766  000166' 0F30               	addlw	48
  1767  000168' 0012               	return	
  1768  00016A'                    u3069:
  1769                           ;format.c: 84: if(m == 0)
  1770  00016A' 5100'              	movf	(??_format_double+11)& (0+255),w,b
  1771  00016C' 1100'              	iorwf	(??_format_double+10)& (0+255),w,b
  1772  00016E' E10C               	bnz	l777
  1773                           ;format.c: 85: putchar_ptr('.');
  1774  000170' D801               	call	u3088
  1775  000172' D00A               	goto	l777
  1776  000174'                    u3088:
  1777  000174' 0005               	push	
  1778  000176' 6EFA               	movwf	pclath,c
  1779  000178' 5047               	movf	71,w,c
  1780  00017A' 6EFD               	movwf	tosl,c
  1781  00017C' 5048               	movf	72,w,c
  1782  00017E' 6EFE               	movwf	tosh,c
  1783  000180' 50F8               	movf	tblptru,w,c
  1784  000182' 6EFF               	movwf	tosu,c
  1785  000184' 50FA               	movf	pclath,w,c
  1786  000186' 0C2E               	retlw	46
  1787  000188'                    l777:
  1788                           ; BSR set to: 1
  1789                           ;format.c: 86: m--;
  1790  000188' 0700'              	decf	(??_format_double+10)& (0+255),f,b
  1791  00018A' A0D8               	btfss	status,0,c
  1792  00018C' 0700'              	decf	(??_format_double+11)& (0+255),f,b
  1793  00018E' D750               	goto	l774
  1794  000190'                    u3090:
  1795                           ; BSR set to: 1
  1796                           ;format.c: 87: }
  1797                           ;format.c: 88: }
  1798                           ; BSR set to: 1
  1799  000190' 0012               	return	
  1800  000192'                    __end_of_format_double:
  1801                           	opt stack 0
  1802                           
  1803                           	psect	text9
  1804                           ; =============== function _format_double ends =
      +                          ===========
  1805                           ; *************** function ___asfldiv **********
      +                          *******
  1806                           ; Defined at:
  1807                           ;		line 5 in file "C:\Program Files (x86)\HI-TEC
      +                          H Software\PICC-18\PRO\9.66\sources\asfldiv.c"
  1808                           ; Parameters:
  1809                           ;		f1p            size:   2offs:   0	type: PTR ;
      +                           Largest target is 4
  1810                           ;		 -> measure_inductance@Lin(4), measure_capaci
      +                          tance@Cin(4), 
  1811                           ;		f2             size:   4offs:   2	type: PTR 
  1812                           ; Auto variables:
  1813                           ;		None
  1814                           ; Return value:
  1815                           ;		type: PTR 
  1816                           ;		size: 4
  1817                           ; Registers used:
  1818                           ;		wreg, fsr0l, fsr0h, fsr2l, status,2, status,0
      +                          , prodl, prodh, cstack
  1819                           ; Tracked objects:
  1820                           ;		On entry : F/1
  1821                           ;		On exit  : F/1
  1822                           ;		Unchanged: FFFFFFF0/0
  1823                           ; Data sizes:
  1824                           ;		Autos:    0
  1825                           ;		Params:   6
  1826                           ;		Temp:     0
  1827                           ;		Total:    6
  1828                           ; This function calls:
  1829                           ;		___fldiv
  1830                           ; This function is called by:
  1831                           ;		_measure_capacitance
  1832                           ;		_measure_inductance
  1833                           ; This function uses a non-reentrant model
  1834                           ; 
  1835  000000                     
  1836  000000'                    ___asfldiv:
  1837                           	opt stack 28
  1838                           ; BSR set to: 1
  1839  000000' C002' F004'        	movff	?___asfldiv+2,?___fldiv+4
  1840  000004' C003' F005'        	movff	?___asfldiv+3,?___fldiv+5
  1841  000008' C004' F006'        	movff	?___asfldiv+4,?___fldiv+6
  1842  00000C' C005' F007'        	movff	?___asfldiv+5,?___fldiv+7
  1843  000010' C000' FFE9         	movff	?___asfldiv,fsr0l
  1844  000014' C001' FFEA         	movff	?___asfldiv+1,fsr0h
  1845  000018' CFEE F000'         	movff	postinc0,?___fldiv
  1846  00001C' CFEE F001'         	movff	postinc0,?___fldiv+1
  1847  000020' CFEE F002'         	movff	postinc0,?___fldiv+2
  1848  000024' CFEE F003'         	movff	postinc0,?___fldiv+3
  1849  000028' EC00' F000'        	call	___fldiv	;wreg free
  1850  00002C' C000' FFE9         	movff	?___asfldiv,fsr0l
  1851  000030' C001' FFEA         	movff	?___asfldiv+1,fsr0h
  1852  000034' C000' FFEE         	movff	?___fldiv,postinc0
  1853  000038' C001' FFEE         	movff	?___fldiv+1,postinc0
  1854  00003C' C002' FFEE         	movff	?___fldiv+2,postinc0
  1855  000040' C003' FFED         	movff	?___fldiv+3,postdec0
  1856                           ; BSR set to: 1
  1857  000044' 0012               	return	
  1858  000046'                    __end_of___asfldiv:
  1859                           	opt stack 0
  1860                           
  1861                           	psect	text10
  1862                           ; =============== function ___asfldiv ends =====
      +                          =======
  1863                           ; *************** function _print_unit *********
      +                          ********
  1864                           ; Defined at:
  1865                           ;		line 408 in file "../../../src/print.c"
  1866                           ; Parameters:
  1867                           ;		unit           size:   1reg:   wre	type: unsi
      +                          gned char 
  1868                           ; Auto variables:
  1869                           ;		None
  1870                           ; Return value:
  1871                           ;		type: void 
  1872                           ;		size: 0
  1873                           ; Registers used:
  1874                           ;		wreg
  1875                           ; Tracked objects:
  1876                           ;		On entry : F/1
  1877                           ;		On exit  : F/1
  1878                           ;		Unchanged: FFFFFFFF/0
  1879                           ; Data sizes:
  1880                           ;		Autos:    0
  1881                           ;		Params:   0
  1882                           ;		Temp:     0
  1883                           ;		Total:    0
  1884                           ; This function calls:
  1885                           ;		Nothing
  1886                           ; This function is called by:
  1887                           ;		_measure_capacitance
  1888                           ;		_measure_inductance
  1889                           ; This function uses a non-reentrant model
  1890                           ; 
  1891  000000                     
  1892                           ;print.c: 407: void
  1893                           ;print.c: 408: print_unit(unsigned char unit) {
  1894  000000'                    _print_unit:
  1895                           	opt stack 28
  1896                           ; BSR set to: 1
  1897                           ;print.c: 426: }
  1898                           ; BSR set to: 1
  1899  000000' 0012               	return	
  1900  000002'                    __end_of_print_unit:
  1901                           	opt stack 0
  1902                           
  1903                           	psect	text11
  1904                           ; =============== function _print_unit ends ====
      +                          ========
  1905                           ; *************** function _format_xint32 ******
      +                          ***********
  1906                           ; Defined at:
  1907                           ;		line 48 in file "../../../lib/format.c"
  1908                           ; Parameters:
  1909                           ;		x              size:   4offs:   0	type: unsig
      +                          ned long 
  1910                           ; Auto variables:
  1911                           ;		None
  1912                           ; Return value:
  1913                           ;		type: void 
  1914                           ;		size: 0
  1915                           ; Registers used:
  1916                           ;		wreg, fsr0l, fsr0h, fsr1l, fsr2l, status,2, s
      +                          tatus,0, pclat, tosl, prodl, prodh, cstack
  1917                           ; Tracked objects:
  1918                           ;		On entry : F/1
  1919                           ;		On exit  : F/1
  1920                           ;		Unchanged: FFFFFFF0/0
  1921                           ; Data sizes:
  1922                           ;		Autos:    0
  1923                           ;		Params:   4
  1924                           ;		Temp:     0
  1925                           ;		Total:    4
  1926                           ; This function calls:
  1927                           ;		_format_number
  1928                           ;		_output_putch
  1929                           ;		_ser_putch
  1930                           ;		_format_putchar
  1931                           ; This function is called by:
  1932                           ;		_measure_capacitance
  1933                           ; This function uses a non-reentrant model
  1934                           ; 
  1935  000000                     
  1936                           ;format.c: 47: void
  1937                           ;format.c: 48: format_xint32( unsigned long int 
      +                          x) {
  1938  000000'                    _format_xint32:
  1939                           	opt stack 28
  1940                           ; BSR set to: 1
  1941                           ;format.c: 49: putchar_ptr('0');
  1942  000000' D801               	call	u3008
  1943  000002' D00A               	goto	u3009
  1944  000004'                    u3008:
  1945  000004' 0005               	push	
  1946  000006' 6EFA               	movwf	pclath,c
  1947  000008' 5047               	movf	71,w,c
  1948  00000A' 6EFD               	movwf	tosl,c
  1949  00000C' 5048               	movf	72,w,c
  1950  00000E' 6EFE               	movwf	tosh,c
  1951  000010' 50F8               	movf	tblptru,w,c
  1952  000012' 6EFF               	movwf	tosu,c
  1953  000014' 50FA               	movf	pclath,w,c
  1954  000016' 0C30               	retlw	48
  1955  000018'                    u3009:
  1956                           ;format.c: 50: putchar_ptr('x');
  1957  000018' D801               	call	u3018
  1958  00001A' D00A               	goto	u3019
  1959  00001C'                    u3018:
  1960  00001C' 0005               	push	
  1961  00001E' 6EFA               	movwf	pclath,c
  1962  000020' 5047               	movf	71,w,c
  1963  000022' 6EFD               	movwf	tosl,c
  1964  000024' 5048               	movf	72,w,c
  1965  000026' 6EFE               	movwf	tosh,c
  1966  000028' 50F8               	movf	tblptru,w,c
  1967  00002A' 6EFF               	movwf	tosu,c
  1968  00002C' 50FA               	movf	pclath,w,c
  1969  00002E' 0C78               	retlw	120
  1970  000030'                    u3019:
  1971                           ;format.c: 51: format_number((unsigned short int
      +                          )(x >> 16), 16, -4);
  1972  000030' 0EFC               	movlw	252
  1973  000032' 6F00'              	movwf	(?_format_number+3)& (0+255),b
  1974  000034' 0E10               	movlw	16
  1975  000036' 6F00'              	movwf	(?_format_number+2)& (0+255),b
  1976  000038' C002' F000'        	movff	?_format_xint32+2,?_format_number
  1977  00003C' C003' F001'        	movff	?_format_xint32+3,?_format_number+1
  1978  000040' EC00' F000'        	call	_format_number
  1979                           ;format.c: 52: format_number((unsigned short int
      +                          )(x & 0xffff), 16, -4);
  1980  000044' 0EFC               	movlw	252
  1981  000046' 6F00'              	movwf	(?_format_number+3)& (0+255),b
  1982  000048' 0E10               	movlw	16
  1983  00004A' 6F00'              	movwf	(?_format_number+2)& (0+255),b
  1984  00004C' C000' F000'        	movff	?_format_xint32,?_format_number
  1985  000050' C001' F001'        	movff	?_format_xint32+1,?_format_number+1
  1986  000054' EF00' F000'        	goto	_format_number	;wreg free
  1987                           ;format.c: 53: }
  1988                           ; BSR set to: 1
  1989  000058'                    __end_of_format_xint32:
  1990                           	opt stack 0
  1991                           
  1992                           	psect	text12
  1993                           ; =============== function _format_xint32 ends =
      +                          ===========
  1994                           ; *************** function _measure_freq *******
      +                          **********
  1995                           ; Defined at:
  1996                           ;		line 299 in file "../../../src/LC-meter.c"
  1997                           ; Parameters:
  1998                           ;		None
  1999                           ; Auto variables:
  2000                           ;		prev        	       	type: unsigned char 
  2001                           ;		count       	       	type: unsigned short 
  2002                           ;		i           	       	type: unsigned char 
  2003                           ; Return value:
  2004                           ;		type: unsigned short 
  2005                           ;		size: 2
  2006                           ; Registers used:
  2007                           ;		wreg, fsr1l, fsr2l, status,2, status,0, prodl
      +                          , prodh
  2008                           ; Tracked objects:
  2009                           ;		On entry : F/1
  2010                           ;		On exit  : F/1
  2011                           ;		Unchanged: 0/0
  2012                           ; Data sizes:
  2013                           ;		Autos:    0
  2014                           ;		Params:   2
  2015                           ;		Temp:     2
  2016                           ;		Total:    4
  2017                           ; This function calls:
  2018                           ;		__delay
  2019                           ; This function is called by:
  2020                           ;		_calibrate
  2021                           ;		_measure_capacitance
  2022                           ;		_measure_inductance
  2023                           ; This function uses a non-reentrant model
  2024                           ; 
  2025  000000                     
  2026                           ;LC-meter.c: 298: unsigned short int
  2027                           ;LC-meter.c: 299: measure_freq() {
  2028  000000'                    _measure_freq:
  2029                           	opt stack 28
  2030                           ; BSR set to: 1
  2031                           ;LC-meter.c: 300: unsigned char prev;
  2032                           ;LC-meter.c: 301: unsigned short int count;
  2033                           ;LC-meter.c: 303: TMR0IF = 0;
  2034  000000' 94F2               	bcf	intcon,2,c	;volatile
  2035                           ;LC-meter.c: 305: TRISA &= ~0b00010000;
  2036  000002' 9892               	bcf	3986,4,c	;volatile
  2037                           ;LC-meter.c: 308: _delay((unsigned long)((20)*(2
      +                          0000000/4000.0)));
  2038  000004' 0E82               	movlw	130
  2039  000006' 6F00'              	movwf	??_measure_freq& (0+255),b
  2040  000008' 0EDD               	movlw	221
  2041  00000A'                    u4187:
  2042  00000A' 2EE8               	decfsz	wreg,f,c
  2043  00000C' D7FE               	goto	u4187
  2044  00000E' 2F00'              	decfsz	??_measure_freq& (0+255),f,b
  2045  000010' D7FC               	goto	u4187
  2046  000012' D000               	nop2	
  2047                           ;LC-meter.c: 310: TMR0 = 0x00;
  2048  000014' 6AD6               	clrf	4054,c	;volatile
  2049  000016' 6AD7               	clrf	4055,c	;volatile
  2050                           ;LC-meter.c: 312: for(char i = 0; i < 10; i++) _
      +                          delay((unsigned long)((10)*(20000000/4000.0)));
  2051  000018' 6AD9               	clrf	fsr2l,c
  2052  00001A'                    l976:
  2053                           ; BSR set to: ?
  2054  00001A' 0E41               	movlw	65
  2055  00001C' 0101               	movlb	1	; () banked
  2056  00001E' 6F00'              	movwf	??_measure_freq& (0+255),b
  2057  000020' 0EEE               	movlw	238
  2058  000022'                    u4197:
  2059  000022' 2EE8               	decfsz	wreg,f,c
  2060  000024' D7FE               	goto	u4197
  2061  000026' 2F00'              	decfsz	??_measure_freq& (0+255),f,b
  2062  000028' D7FC               	goto	u4197
  2063  00002A' 0004               	clrwdt	
  2064  00002C' 2AD9               	incf	fsr2l,f,c
  2065  00002E' 0E09               	movlw	9
  2066  000030' 64D9               	cpfsgt	fsr2l,c
  2067  000032' D7F3               	goto	l976
  2068                           ; BSR set to: ?
  2069                           ;LC-meter.c: 314: TRISA |= 0b00010000;
  2070  000034' 8892               	bsf	3986,4,c	;volatile
  2071                           ;LC-meter.c: 316: prev = TMR0;
  2072  000036' CFD6 FFE1          	movff	4054,fsr1l	;volatile
  2073                           ;LC-meter.c: 317: count = 0;
  2074  00003A' 6AF3               	clrf	prodl,c
  2075  00003C' 6AF4               	clrf	prodh,c
  2076  00003E' D005               	goto	l981
  2077  000040'                    u3130:
  2078  000040' 0E00               	movlw	0
  2079  000042' 5CF3               	subwf	prodl,w,c
  2080  000044' 0E01               	movlw	1
  2081  000046' 58F4               	subwfb	prodh,w,c
  2082  000048' E20C               	bc	l980
  2083                           ;LC-meter.c: 319: do {
  2084  00004A'                    l981:
  2085                           ; BSR set to: ?
  2086                           ;LC-meter.c: 321: T0SE = 1;
  2087  00004A' 88D5               	bsf	4053,4,c	;volatile
  2088  00004C' F000               	nop		;#
  2089  00004E' F000               	nop		;#
  2090                           ;LC-meter.c: 322: asm(" nop");
  2091                           ;LC-meter.c: 323: asm(" nop");
  2092                           ;LC-meter.c: 325: T0SE = 0;
  2093  000050' 98D5               	bcf	4053,4,c	;volatile
  2094  000052' F000               	nop		;#
  2095  000054' F000               	nop		;#
  2096                           ;LC-meter.c: 326: asm(" nop");
  2097                           ;LC-meter.c: 327: asm(" nop");
  2098                           ;LC-meter.c: 328: count++;
  2099  000056' 4AF3               	infsnz	prodl,f,c
  2100  000058' 2AF4               	incf	prodh,f,c
  2101                           ;LC-meter.c: 329: } while(prev == TMR0 && count 
      +                          <= 255);
  2102  00005A' 50E1               	movf	fsr1l,w,c
  2103  00005C' 18D6               	xorwf	4054,w,c	;volatile
  2104  00005E' 10D7               	iorwf	4055,w,c	;volatile
  2105  000060' E0EF               	bz	u3130
  2106                           ; BSR set to: ?
  2107  000062'                    l980:
  2108                           ; BSR set to: ?
  2109                           ;LC-meter.c: 332: count = ((prev << 8) + (256 - 
      +                          count));
  2110  000062' 50E1               	movf	fsr1l,w,c
  2111  000064' 0101               	movlb	1	; () banked
  2112  000066' 6F00'              	movwf	(??_measure_freq+1)& (0+255),b
  2113  000068' 6B00'              	clrf	??_measure_freq& (0+255),b
  2114  00006A' 50F3               	movf	prodl,w,c
  2115  00006C' 5F00'              	subwf	??_measure_freq& (0+255),f,b
  2116  00006E' 50F4               	movf	prodh,w,c
  2117  000070' 5B00'              	subwfb	(??_measure_freq+1)& (0+255),f,b
  2118  000072' 0E00               	movlw	0
  2119  000074' 2500'              	addwf	??_measure_freq& (0+255),w,b
  2120  000076' 6EF3               	movwf	prodl,c
  2121  000078' 0E01               	movlw	1
  2122  00007A' 2100'              	addwfc	(??_measure_freq+1)& (0+255),w,b
  2123  00007C' 6EF4               	movwf	prodh,c
  2124  00007E' CFF3 F000'         	movff	prodl,?_measure_freq
  2125  000082' CFF4 F001'         	movff	prodh,?_measure_freq+1
  2126                           ;LC-meter.c: 340: }
  2127                           ; BSR set to: 1
  2128  000086' 0012               	return	
  2129  000088'                    __end_of_measure_freq:
  2130                           	opt stack 0
  2131                           
  2132                           	psect	text13
  2133                           ; =============== function _measure_freq ends ==
      +                          ==========
  2134                           ; *************** function _delay10ms **********
      +                          *******
  2135                           ; Defined at:
  2136                           ;		line 532 in file "../../../src/LC-meter.c"
  2137                           ; Parameters:
  2138                           ;		period_10ms    size:   2offs:   0	type: unsig
      +                          ned short 
  2139                           ; Auto variables:
  2140                           ;		run         	       	type: unsigned char 
  2141                           ;		ms          	       	type: unsigned long 
  2142                           ; Return value:
  2143                           ;		type: void 
  2144                           ;		size: 0
  2145                           ; Registers used:
  2146                           ;		wreg, fsr2l, status,2, status,0, prodl, prodh
      +                          , cstack
  2147                           ; Tracked objects:
  2148                           ;		On entry : F/1
  2149                           ;		On exit  : F/1
  2150                           ;		Unchanged: FFFFFFF0/0
  2151                           ; Data sizes:
  2152                           ;		Autos:    4
  2153                           ;		Params:   2
  2154                           ;		Temp:     0
  2155                           ;		Total:    6
  2156                           ; This function calls:
  2157                           ;		___wmul
  2158                           ; This function is called by:
  2159                           ;		_main
  2160                           ;		_calibrate
  2161                           ; This function uses a non-reentrant model
  2162                           ; 
  2163  000000                     
  2164                           ;LC-meter.c: 531: void
  2165                           ;LC-meter.c: 532: delay10ms(unsigned short int p
      +                          eriod_10ms) {
  2166  000000'                    _delay10ms:
  2167                           	opt stack 28
  2168                           ; BSR set to: 1
  2169  000000' 0E01               	movlw	1
  2170  000002' 6ED9               	movwf	fsr2l,c
  2171                           ;LC-meter.c: 539: GIE = 0, ms = msecs, GIE = 1;
  2172  000004' 9EF2               	bcf	intcon,7,c	;volatile
  2173  000006' C034 F000'         	movff	52,??_delay10ms	;volatile
  2174  00000A' C035 F001'         	movff	53,??_delay10ms+1	;volatile
  2175  00000E' C036 F002'         	movff	54,??_delay10ms+2	;volatile
  2176  000012' C037 F003'         	movff	55,??_delay10ms+3	;volatile
  2177  000016' 8EF2               	bsf	intcon,7,c	;volatile
  2178                           ;LC-meter.c: 544: ms += period_10ms * 10;
  2179  000018' 0E0A               	movlw	10
  2180  00001A' 6F00'              	movwf	(?___wmul+2)& (0+255),b
  2181  00001C' 0E00               	movlw	0
  2182  00001E' 6B00'              	clrf	(?___wmul+3)& (0+255),b
  2183  000020' C000' F000'        	movff	?_delay10ms,?___wmul
  2184  000024' C001' F001'        	movff	?_delay10ms+1,?___wmul+1
  2185  000028' EC00' F000'        	call	___wmul	;wreg free
  2186  00002C' 5100'              	movf	?___wmul& (0+255),w,b
  2187  00002E' 2700'              	addwf	??_delay10ms& (0+255),f,b
  2188  000030' 5100'              	movf	(?___wmul+1)& (0+255),w,b
  2189  000032' 2300'              	addwfc	(??_delay10ms+1)& (0+255),f,b
  2190  000034' 0E00               	movlw	0
  2191  000036' 2300'              	addwfc	(??_delay10ms+2)& (0+255),f,b
  2192  000038' 2300'              	addwfc	(??_delay10ms+3)& (0+255),f,b
  2193                           ;LC-meter.c: 547: do {
  2194  00003A'                    l1002:
  2195                           ; BSR set to: 1
  2196                           ;LC-meter.c: 548: GIE = 0;
  2197  00003A' 9EF2               	bcf	intcon,7,c	;volatile
  2198                           ;LC-meter.c: 549: if(ms <= msecs)
  2199  00003C' 5100'              	movf	??_delay10ms& (0+255),w,b
  2200  00003E' 5C34               	subwf	52,w,c	;volatile
  2201  000040' 5100'              	movf	(??_delay10ms+1)& (0+255),w,b
  2202  000042' 5835               	subwfb	53,w,c	;volatile
  2203  000044' 5100'              	movf	(??_delay10ms+2)& (0+255),w,b
  2204  000046' 5836               	subwfb	54,w,c	;volatile
  2205  000048' 5100'              	movf	(??_delay10ms+3)& (0+255),w,b
  2206  00004A' 5837               	subwfb	55,w,c	;volatile
  2207  00004C' B0D8               	btfsc	status,0,c
  2208                           ;LC-meter.c: 550: run = 0;
  2209  00004E' 6AD9               	clrf	fsr2l,c
  2210                           ; BSR set to: 1
  2211                           ;LC-meter.c: 551: GIE = 1;
  2212  000050' 8EF2               	bsf	intcon,7,c	;volatile
  2213                           ;LC-meter.c: 552: } while(run);
  2214  000052' 66D9               	tstfsz	fsr2l,c
  2215  000054' D7F2               	goto	l1002
  2216                           ; BSR set to: 1
  2217                           ;LC-meter.c: 553: }
  2218                           ; BSR set to: 1
  2219  000056' 0012               	return	
  2220  000058'                    __end_of_delay10ms:
  2221                           	opt stack 0
  2222                           
  2223                           	psect	text14
  2224                           ; =============== function _delay10ms ends =====
      +                          =======
  2225                           ; *************** function _ser_puts ***********
      +                          ******
  2226                           ; Defined at:
  2227                           ;		line 92 in file "../../../lib/ser.c"
  2228                           ; Parameters:
  2229                           ;		s              size:   1reg:   wre	type: PTR 
      +                          const unsigned char ; Largest target is 8
  2230                           ;		 -> STR_11(3), STR_10(5), STR_9(3), STR_8(8),
      +                           
  2231                           ;		 -> STR_7(6), STR_6(6), STR_5(6), STR_4(5), 
  2232                           ;		 -> STR_3(3), STR_2(3), STR_1(6), 
  2233                           ; Auto variables:
  2234                           ;		None
  2235                           ; Return value:
  2236                           ;		type: void 
  2237                           ;		size: 0
  2238                           ; Registers used:
  2239                           ;		wreg, fsr0l, fsr0h, fsr1l, fsr2l, status,2, s
      +                          tatus,0, tblptrl, tblptrh, tblptru, tablat, csta
      +                          ck
  2240                           ; Tracked objects:
  2241                           ;		On entry : E/1
  2242                           ;		On exit  : E/1
  2243                           ;		Unchanged: FFFFFFFF/0
  2244                           ; Data sizes:
  2245                           ;		Autos:    0
  2246                           ;		Params:   0
  2247                           ;		Temp:     0
  2248                           ;		Total:    0
  2249                           ; This function calls:
  2250                           ;		_ser_putch
  2251                           ; This function is called by:
  2252                           ;		_main
  2253                           ;		_calibrate
  2254                           ;		_measure_capacitance
  2255                           ; This function uses a non-reentrant model
  2256                           ; 
  2257  000000                     
  2258                           ;ser.c: 91: void
  2259                           ;ser.c: 92: ser_puts(const char* s) {
  2260  000000'                    _ser_puts:
  2261                           	opt stack 28
  2262                           ; BSR set to: ?
  2263                           ; ser_puts@s loaded to fsr1l
  2264  000000' CFE8 FFE1          	movff	wreg,fsr1l
  2265  000004'                    l381:
  2266                           ; BSR set to: ?
  2267  000004' CFE1 FFF6          	movff	fsr1l,tblptrl
  2268  000008' 0E00'              	movlw	high __Lsmallconst
  2269  00000A' 6EF7               	movwf	tblptrh,c
  2270  00000C' 0008               	tblrd		*
  2271  00000E' 50F5               	movf	tablat,w,c
  2272  000010' E00A               	bz	u3100
  2273                           ; BSR set to: ?
  2274  000012' CFE1 FFF6          	movff	fsr1l,tblptrl
  2275  000016' 0E00'              	movlw	high __Lsmallconst
  2276  000018' 6EF7               	movwf	tblptrh,c
  2277  00001A' 0008               	tblrd		*
  2278  00001C' 50F5               	movf	tablat,w,c
  2279  00001E' EC00' F000'        	call	_ser_putch
  2280  000022' 2AE1               	incf	fsr1l,f,c
  2281  000024' D7EF               	goto	l381
  2282  000026'                    u3100:
  2283                           ; BSR set to: ?
  2284                           ;ser.c: 94: }
  2285                           ; BSR set to: ?
  2286  000026' 0012               	return	
  2287  000028'                    __end_of_ser_puts:
  2288                           	opt stack 0
  2289                           
  2290                           	psect	text15
  2291                           ; =============== function _ser_puts ends ======
      +                          ======
  2292                           ; *************** function ___lwtofl ***********
      +                          ******
  2293                           ; Defined at:
  2294                           ;		line 16 in file "C:\Program Files (x86)\HI-TE
      +                          CH Software\PICC-18\PRO\9.66\sources\lwtofl.c"
  2295                           ; Parameters:
  2296                           ;		c              size:   2offs:   0	type: unsig
      +                          ned int 
  2297                           ; Auto variables:
  2298                           ;		f1          	       	type: unsigned int 
  2299                           ; Return value:
  2300                           ;		type: unsigned int 
  2301                           ;		size: 4
  2302                           ; Registers used:
  2303                           ;		wreg, fsr0l, fsr0h, status,2, status,0, cstac
      +                          k
  2304                           ; Tracked objects:
  2305                           ;		On entry : F/1
  2306                           ;		On exit  : F/1
  2307                           ;		Unchanged: FFFFFFF0/0
  2308                           ; Data sizes:
  2309                           ;		Autos:    4
  2310                           ;		Params:   4
  2311                           ;		Temp:     0
  2312                           ;		Total:    8
  2313                           ; This function calls:
  2314                           ;		___flpack
  2315                           ; This function is called by:
  2316                           ;		_calibrate
  2317                           ;		_measure_capacitance
  2318                           ;		_measure_inductance
  2319                           ; This function uses a non-reentrant model
  2320                           ; 
  2321  000000                     
  2322  000000'                    ___lwtofl:
  2323                           	opt stack 28
  2324                           ; BSR set to: 1
  2325  000000' 5100'              	movf	(?___lwtofl+1)& (0+255),w,b
  2326  000002' 1100'              	iorwf	?___lwtofl& (0+255),w,b
  2327  000004' E105               	bnz	l1366
  2328  000006' 6B00'              	clrf	?___lwtofl& (0+255),b
  2329  000008' 6B00'              	clrf	(?___lwtofl+1)& (0+255),b
  2330  00000A' 6B00'              	clrf	(?___lwtofl+2)& (0+255),b
  2331  00000C' 6B00'              	clrf	(?___lwtofl+3)& (0+255),b
  2332  00000E' D016               	goto	l1365
  2333  000010'                    l1366:
  2334                           ; BSR set to: 1
  2335  000010' C000' F000'        	movff	?___lwtofl,??___lwtofl
  2336  000014' C001' F001'        	movff	?___lwtofl+1,??___lwtofl+1
  2337  000018' 6B00'              	clrf	(??___lwtofl+2)& (0+255),b
  2338  00001A' 6B00'              	clrf	(??___lwtofl+3)& (0+255),b
  2339  00001C' 0E96               	movlw	150
  2340  00001E' 6F00'              	movwf	(?___flpack+2)& (0+255),b
  2341  000020' 0E00'              	movlw	low ??___lwtofl
  2342  000022' 6F00'              	movwf	?___flpack& (0+255),b
  2343  000024' 0E00'              	movlw	high ??___lwtofl
  2344  000026' 6F00'              	movwf	(?___flpack+1)& (0+255),b
  2345  000028' EC00' F000'        	call	___flpack	;wreg free
  2346  00002C' C000' F000'        	movff	??___lwtofl,?___lwtofl
  2347  000030' C001' F001'        	movff	??___lwtofl+1,?___lwtofl+1
  2348  000034' C002' F002'        	movff	??___lwtofl+2,?___lwtofl+2
  2349  000038' C003' F003'        	movff	??___lwtofl+3,?___lwtofl+3
  2350  00003C'                    l1365:
  2351                           ; BSR set to: 1
  2352  00003C' 0012               	return	
  2353  00003E'                    __end_of___lwtofl:
  2354                           	opt stack 0
  2355                           
  2356                           	psect	text16
  2357                           ; =============== function ___lwtofl ends ======
      +                          ======
  2358                           ; *************** function ___wmul *************
      +                          ****
  2359                           ; Defined at:
  2360                           ;		line 3 in file "C:\Program Files (x86)\HI-TEC
      +                          H Software\PICC-18\PRO\9.66\sources\wmul.c"
  2361                           ; Parameters:
  2362                           ;		multiplier     size:   2offs:   0	type: unsig
      +                          ned int 
  2363                           ;		multiplicand   size:   2offs:   2	type: unsig
      +                          ned int 
  2364                           ; Auto variables:
  2365                           ;		product     	       	type: unsigned int 
  2366                           ; Return value:
  2367                           ;		type: unsigned int 
  2368                           ;		size: 2
  2369                           ; Registers used:
  2370                           ;		wreg, status,2, status,0, prodl, prodh
  2371                           ; Tracked objects:
  2372                           ;		On entry : F/1
  2373                           ;		On exit  : F/1
  2374                           ;		Unchanged: FFFFFFF0/0
  2375                           ; Data sizes:
  2376                           ;		Autos:    0
  2377                           ;		Params:   4
  2378                           ;		Temp:     0
  2379                           ;		Total:    4
  2380                           ; This function calls:
  2381                           ;		Nothing
  2382                           ; This function is called by:
  2383                           ;		_delay10ms
  2384                           ; This function uses a non-reentrant model
  2385                           ; 
  2386  000000                     
  2387  000000'                    ___wmul:
  2388                           	opt stack 27
  2389                           ; BSR set to: 1
  2390  000000' 6AF3               	clrf	prodl,c
  2391  000002' 6AF4               	clrf	prodh,c
  2392  000004'                    l1372:
  2393                           ; BSR set to: 1
  2394  000004' A100'              	btfss	?___wmul& (0+255),0,b
  2395  000006' D004               	goto	l1373
  2396  000008' 5100'              	movf	(?___wmul+2)& (0+255),w,b
  2397  00000A' 26F3               	addwf	prodl,f,c
  2398  00000C' 5100'              	movf	(?___wmul+3)& (0+255),w,b
  2399  00000E' 22F4               	addwfc	prodh,f,c
  2400  000010'                    l1373:
  2401                           ; BSR set to: 1
  2402  000010' 90D8               	bcf	status,0,c
  2403  000012' 3700'              	rlcf	(?___wmul+2)& (0+255),f,b
  2404  000014' 3700'              	rlcf	(?___wmul+3)& (0+255),f,b
  2405  000016' 90D8               	bcf	status,0,c
  2406  000018' 3300'              	rrcf	(?___wmul+1)& (0+255),f,b
  2407  00001A' 3300'              	rrcf	?___wmul& (0+255),f,b
  2408  00001C' 5100'              	movf	(?___wmul+1)& (0+255),w,b
  2409  00001E' 1100'              	iorwf	?___wmul& (0+255),w,b
  2410  000020' E1F1               	bnz	l1372
  2411                           ; BSR set to: 1
  2412  000022' CFF3 F000'         	movff	prodl,?___wmul
  2413  000026' CFF4 F001'         	movff	prodh,?___wmul+1
  2414                           ; BSR set to: 1
  2415  00002A' 0012               	return	
  2416  00002C'                    __end_of___wmul:
  2417                           	opt stack 0
  2418                           
  2419                           	psect	text17
  2420                           ; =============== function ___wmul ends ========
      +                          ====
  2421                           ; *************** function _log10 **************
      +                          ***
  2422                           ; Defined at:
  2423                           ;		line 40 in file "C:\Program Files (x86)\HI-TE
      +                          CH Software\PICC-18\PRO\9.66\sources\log.c"
  2424                           ; Parameters:
  2425                           ;		x              size:   4offs:   0	type: unsig
      +                          ned int 
  2426                           ; Auto variables:
  2427                           ;		None
  2428                           ; Return value:
  2429                           ;		type: unsigned int 
  2430                           ;		size: 4
  2431                           ; Registers used:
  2432                           ;		wreg, fsr0l, fsr0h, fsr2l, status,2, status,0
      +                          , tblptrl, tblptrh, tblptru, tablat, prodl, prod
      +                          h, cstack
  2433                           ; Tracked objects:
  2434                           ;		On entry : F/1
  2435                           ;		On exit  : F/1
  2436                           ;		Unchanged: FFFFFFF0/0
  2437                           ; Data sizes:
  2438                           ;		Autos:    0
  2439                           ;		Params:   4
  2440                           ;		Temp:     0
  2441                           ;		Total:    4
  2442                           ; This function calls:
  2443                           ;		_log
  2444                           ;		___flmul
  2445                           ; This function is called by:
  2446                           ;		_format_double
  2447                           ; This function uses a non-reentrant model
  2448                           ; 
  2449  000000                     
  2450  000000'                    _log10:
  2451                           	opt stack 27
  2452                           ; BSR set to: 1
  2453  000000' C000' F000'        	movff	?_log10,?_log
  2454  000004' C001' F001'        	movff	?_log10+1,?_log+1
  2455  000008' C002' F002'        	movff	?_log10+2,?_log+2
  2456  00000C' C003' F003'        	movff	?_log10+3,?_log+3
  2457  000010' EC00' F000'        	call	_log	;wreg free
  2458  000014' C000' F000'        	movff	?_log,?___flmul
  2459  000018' C001' F001'        	movff	?_log+1,?___flmul+1
  2460  00001C' C002' F002'        	movff	?_log+2,?___flmul+2
  2461  000020' C003' F003'        	movff	?_log+3,?___flmul+3
  2462  000024' 0ED9               	movlw	217
  2463  000026' 6F00'              	movwf	(?___flmul+4)& (0+255),b
  2464  000028' 0E5B               	movlw	91
  2465  00002A' 6F00'              	movwf	(?___flmul+5)& (0+255),b
  2466  00002C' 0EDE               	movlw	222
  2467  00002E' 6F00'              	movwf	(?___flmul+6)& (0+255),b
  2468  000030' 0E3E               	movlw	62
  2469  000032' 6F00'              	movwf	(?___flmul+7)& (0+255),b
  2470  000034' EC00' F000'        	call	___flmul	;wreg free
  2471  000038' C000' F000'        	movff	?___flmul,?_log10
  2472  00003C' C001' F001'        	movff	?___flmul+1,?_log10+1
  2473  000040' C002' F002'        	movff	?___flmul+2,?_log10+2
  2474  000044' C003' F003'        	movff	?___flmul+3,?_log10+3
  2475                           ; BSR set to: 1
  2476  000048' 0012               	return	
  2477  00004A'                    __end_of_log10:
  2478                           	opt stack 0
  2479                           
  2480                           	psect	text18
  2481                           ; =============== function _log10 ends =========
      +                          ===
  2482                           ; *************** function _format_number ******
      +                          ***********
  2483                           ; Defined at:
  2484                           ;		line 14 in file "../../../lib/format.c"
  2485                           ; Parameters:
  2486                           ;		n              size:   2offs:   0	type: unsig
      +                          ned short 
  2487                           ;		base           size:   1offs:   2	type: unsig
      +                          ned char 
  2488                           ;		pad            size:   1offs:   3	type: char 
  2489                           ; Auto variables:
  2490                           ;		padchar     	       	type: unsigned char 
  2491                           ;		di          	       	type: unsigned char 
  2492                           ;		i           	       	type: char 
  2493                           ;		buf         	       	type: unsigned char [32]
  2494                           ; Return value:
  2495                           ;		type: void 
  2496                           ;		size: 0
  2497                           ; Registers used:
  2498                           ;		wreg, fsr0l, fsr0h, fsr1l, fsr2l, status,2, s
      +                          tatus,0, pclat, tosl, prodl, prodh, cstack
  2499                           ; Tracked objects:
  2500                           ;		On entry : F/1
  2501                           ;		On exit  : F/1
  2502                           ;		Unchanged: FFFFFFF0/0
  2503                           ; Data sizes:
  2504                           ;		Autos:   36
  2505                           ;		Params:   4
  2506                           ;		Temp:     1
  2507                           ;		Total:   41
  2508                           ; This function calls:
  2509                           ;		___lwmod
  2510                           ;		___lwdiv
  2511                           ;		_output_putch
  2512                           ;		_ser_putch
  2513                           ;		_format_putchar
  2514                           ; This function is called by:
  2515                           ;		_format_xint32
  2516                           ; This function uses a non-reentrant model
  2517                           ; 
  2518  000000                     
  2519                           ;format.c: 10: putchar_fn* putchar_ptr = &format
      +                          _putchar;
  2520                           ;format.c: 13: void
  2521                           ;format.c: 14: format_number( unsigned short int
      +                           n, unsigned char base, signed char pad ) {
  2522  000000'                    _format_number:
  2523                           	opt stack 27
  2524                           ; BSR set to: 1
  2525  000000' 6B00'              	clrf	(??_format_number+3)& (0+255),b
  2526                           ;format.c: 18: char padchar = ' ';
  2527  000002' 0E20               	movlw	32
  2528  000004' 6F00'              	movwf	(??_format_number+2)& (0+255),b
  2529                           ;format.c: 20: if(pad < 0) {
  2530  000006' AF00'              	btfss	(?_format_number+3)& (0+255),7,b
  2531  000008' D003               	goto	l760
  2532                           ;format.c: 21: pad = -pad;
  2533  00000A' 6D00'              	negf	(?_format_number+3)& (0+255),b
  2534                           ;format.c: 22: padchar = '0';
  2535  00000C' 0E30               	movlw	48
  2536  00000E' 6F00'              	movwf	(??_format_number+2)& (0+255),b
  2537                           ; BSR set to: 1
  2538                           ;format.c: 23: }
  2539                           ;format.c: 30: do {
  2540  000010'                    l760:
  2541                           ; BSR set to: 1
  2542                           ;format.c: 34: di = n % base;
  2543  000010' C002' F002'        	movff	?_format_number+2,?___lwmod+2
  2544  000014' 6B00'              	clrf	(?___lwmod+3)& (0+255),b
  2545  000016' C000' F000'        	movff	?_format_number,?___lwmod
  2546  00001A' C001' F001'        	movff	?_format_number+1,?___lwmod+1
  2547  00001E' EC00' F000'        	call	___lwmod	;wreg free
  2548  000022' 5100'              	movf	?___lwmod& (0+255),w,b
  2549  000024' 6EE1               	movwf	fsr1l,c
  2550                           ;format.c: 35: buf[i++] = (di < 10 ? (unsigned c
      +                          har)'0' + di : (unsigned char)'A' + di - 10);
  2551  000026' 0F37               	addlw	55
  2552  000028' 6F00'              	movwf	??_format_number& (0+255),b
  2553  00002A' 6B00'              	clrf	(??_format_number+1)& (0+255),b
  2554  00002C' 0E00               	movlw	0
  2555  00002E' 2300'              	addwfc	(??_format_number+1)& (0+255),f,b
  2556  000030' 0E0A               	movlw	10
  2557  000032' 60E1               	cpfslt	fsr1l,c
  2558  000034' D006               	goto	l500000718
  2559  000036' 0E30               	movlw	48
  2560  000038' 24E1               	addwf	fsr1l,w,c
  2561  00003A' 6F00'              	movwf	??_format_number& (0+255),b
  2562  00003C' 6B00'              	clrf	(??_format_number+1)& (0+255),b
  2563  00003E' 0E00               	movlw	0
  2564  000040' 2300'              	addwfc	(??_format_number+1)& (0+255),f,b
  2565  000042'                    l500000718:
  2566                           ; BSR set to: 1
  2567  000042' 0E00'              	movlw	low (??_format_number+4)
  2568  000044' 2500'              	addwf	(??_format_number+3)& (0+255),w,b
  2569  000046' 6EE9               	movwf	fsr0l,c
  2570  000048' 6AEA               	clrf	fsr0h,c
  2571  00004A' 0E00'              	movlw	high (??_format_number+4)
  2572  00004C' 22EA               	addwfc	fsr0h,f,c
  2573  00004E' C000' FFEF         	movff	??_format_number,indf0
  2574  000052' 2B00'              	incf	(??_format_number+3)& (0+255),f,b
  2575                           ;format.c: 37: n /= base;
  2576  000054' C002' F002'        	movff	?_format_number+2,?___lwdiv+2
  2577  000058' 6B00'              	clrf	(?___lwdiv+3)& (0+255),b
  2578  00005A' C000' F000'        	movff	?_format_number,?___lwdiv
  2579  00005E' C001' F001'        	movff	?_format_number+1,?___lwdiv+1
  2580  000062' EC00' F000'        	call	___lwdiv	;wreg free
  2581  000066' C000' F000'        	movff	?___lwdiv,?_format_number
  2582  00006A' C001' F001'        	movff	?___lwdiv+1,?_format_number+1
  2583                           ;format.c: 38: } while(n > 0);
  2584  00006E' 5100'              	movf	(?_format_number+1)& (0+255),w,b
  2585  000070' 1100'              	iorwf	?_format_number& (0+255),w,b
  2586  000072' E00E               	bz	l761
  2587  000074' D7CD               	goto	l760
  2588                           ; BSR set to: 1
  2589                           ;format.c: 40: while(pad-- > i) putchar_ptr(padc
      +                          har);
  2590  000076'                    l762:
  2591                           ; BSR set to: 1
  2592  000076' D801               	call	u3258
  2593  000078' D00B               	goto	l761
  2594  00007A'                    u3258:
  2595  00007A' 0005               	push	
  2596  00007C' 6EFA               	movwf	pclath,c
  2597  00007E' 5047               	movf	71,w,c
  2598  000080' 6EFD               	movwf	tosl,c
  2599  000082' 5048               	movf	72,w,c
  2600  000084' 6EFE               	movwf	tosh,c
  2601  000086' 50F8               	movf	tblptru,w,c
  2602  000088' 6EFF               	movwf	tosu,c
  2603  00008A' 50FA               	movf	pclath,w,c
  2604  00008C' 5100'              	movf	(??_format_number+2)& (0+255),w,b
  2605  00008E' 0012               	return	
  2606  000090'                    l761:
  2607                           ; BSR set to: 1
  2608  000090' 5100'              	movf	(??_format_number+3)& (0+255),w,b
  2609  000092' 0A80               	xorlw	128
  2610  000094' 6F00'              	movwf	(??_format_number+36)& (0+255),b
  2611  000096' 0700'              	decf	(?_format_number+3)& (0+255),f,b
  2612  000098' 2900'              	incf	(?_format_number+3)& (0+255),w,b
  2613  00009A' 0A80               	xorlw	128
  2614  00009C' 5D00'              	subwf	(??_format_number+36)& (0+255),w,b
  2615  00009E' E3EB               	bnc	l762
  2616                           ; BSR set to: 1
  2617                           ;format.c: 42: for(; i > 0; i--) putchar_ptr((ch
      +                          ar)buf[(signed short int)i - 1]);
  2618  0000A0' 5100'              	movf	(??_format_number+3)& (0+255),w,b
  2619  0000A2' 0A80               	xorlw	128
  2620  0000A4' 0F7F               	addlw	-129
  2621  0000A6' E31C               	bnc	l765
  2622  0000A8'                    l764:
  2623                           ; BSR set to: 1
  2624  0000A8' D801               	call	u3288
  2625  0000AA' D015               	goto	u3289
  2626  0000AC'                    u3288:
  2627  0000AC' 0005               	push	
  2628  0000AE' 6EFA               	movwf	pclath,c
  2629  0000B0' 5047               	movf	71,w,c
  2630  0000B2' 6EFD               	movwf	tosl,c
  2631  0000B4' 5048               	movf	72,w,c
  2632  0000B6' 6EFE               	movwf	tosh,c
  2633  0000B8' 50F8               	movf	tblptru,w,c
  2634  0000BA' 6EFF               	movwf	tosu,c
  2635  0000BC' 50FA               	movf	pclath,w,c
  2636  0000BE' C003' F024'        	movff	??_format_number+3,??_format_number+36
  2637  0000C2' 0EFF               	movlw	-1
  2638  0000C4' 2700'              	addwf	(??_format_number+36)& (0+255),f,b
  2639  0000C6' 0E00'              	movlw	low (??_format_number+4)
  2640  0000C8' 2500'              	addwf	(??_format_number+36)& (0+255),w,b
  2641  0000CA' 6EE9               	movwf	fsr0l,c
  2642  0000CC' 6AEA               	clrf	fsr0h,c
  2643  0000CE' 0E00'              	movlw	high (??_format_number+4)
  2644  0000D0' 22EA               	addwfc	fsr0h,f,c
  2645  0000D2' 50EF               	movf	indf0,w,c
  2646  0000D4' 0012               	return	
  2647  0000D6'                    u3289:
  2648  0000D6' 0700'              	decf	(??_format_number+3)& (0+255),f,b
  2649  0000D8' 5100'              	movf	(??_format_number+3)& (0+255),w,b
  2650  0000DA' 0A80               	xorlw	128
  2651  0000DC' 0F7F               	addlw	-129
  2652  0000DE' E2E4               	bc	l764
  2653  0000E0'                    l765:
  2654                           ; BSR set to: 1
  2655                           ;format.c: 44: }
  2656                           ; BSR set to: 1
  2657  0000E0' 0012               	return	
  2658  0000E2'                    __end_of_format_number:
  2659                           	opt stack 0
  2660                           
  2661                           	psect	text19
  2662                           ; =============== function _format_number ends =
      +                          ===========
  2663                           ; *************** function _pow ****************
      +                          *
  2664                           ; Defined at:
  2665                           ;		line 6 in file "C:\Program Files (x86)\HI-TEC
      +                          H Software\PICC-18\PRO\9.66\sources\pow.c"
  2666                           ; Parameters:
  2667                           ;		x              size:   4offs:   0	type: void 
  2668                           ;		y              size:   4offs:   4	type: void 
  2669                           ; Auto variables:
  2670                           ;		sign        	       	type: unsigned char 
  2671                           ;		yi          	       	type: unsigned long 
  2672                           ; Return value:
  2673                           ;		type: unsigned long 
  2674                           ;		size: 4
  2675                           ; Registers used:
  2676                           ;		wreg, fsr0l, fsr0h, fsr1l, fsr2l, status,2, s
      +                          tatus,0, tblptrl, tblptrh, tblptru, tablat, prod
      +                          l, prodh, cstack
  2677                           ; Tracked objects:
  2678                           ;		On entry : F/1
  2679                           ;		On exit  : F/1
  2680                           ;		Unchanged: FFFFFFF0/0
  2681                           ; Data sizes:
  2682                           ;		Autos:    5
  2683                           ;		Params:   8
  2684                           ;		Temp:     0
  2685                           ;		Total:   13
  2686                           ; This function calls:
  2687                           ;		___flge
  2688                           ;		___fltol
  2689                           ;		___lltofl
  2690                           ;		___flneg
  2691                           ;		_log
  2692                           ;		___flmul
  2693                           ;		_exp
  2694                           ; This function is called by:
  2695                           ;		_format_double
  2696                           ; This function uses a non-reentrant model
  2697                           ; 
  2698  000000                     
  2699  000000'                    _pow:
  2700                           	opt stack 27
  2701                           ; BSR set to: 1
  2702  000000' 6B00'              	clrf	??_pow& (0+255),b
  2703  000002' EE00' F000'        	lfsr	0,?_pow
  2704  000006' 50EE               	movf	postinc0,w,c
  2705  000008' 10EE               	iorwf	postinc0,w,c
  2706  00000A' 10EE               	iorwf	postinc0,w,c
  2707  00000C' 10EE               	iorwf	postinc0,w,c
  2708  00000E' E110               	bnz	l1019
  2709  000010' C004' F004'        	movff	?_pow+4,?___flge+4
  2710  000014' C005' F005'        	movff	?_pow+5,?___flge+5
  2711  000018' C006' F006'        	movff	?_pow+6,?___flge+6
  2712  00001C' C007' F007'        	movff	?_pow+7,?___flge+7
  2713  000020' 0E00               	movlw	0
  2714  000022' 6B00'              	clrf	?___flge& (0+255),b
  2715  000024' 6B00'              	clrf	(?___flge+1)& (0+255),b
  2716  000026' 6B00'              	clrf	(?___flge+2)& (0+255),b
  2717  000028' 6B00'              	clrf	(?___flge+3)& (0+255),b
  2718  00002A' EC00' F000'        	call	___flge
  2719  00002E' D038               	goto	u3200
  2720                           ; BSR set to: 1
  2721  000030'                    l1019:
  2722                           ; BSR set to: 1
  2723  000030' EE00' F000'        	lfsr	0,?_pow+4
  2724  000034' 50EE               	movf	postinc0,w,c
  2725  000036' 10EE               	iorwf	postinc0,w,c
  2726  000038' 10EE               	iorwf	postinc0,w,c
  2727  00003A' 10EE               	iorwf	postinc0,w,c
  2728  00003C' E107               	bnz	l1021
  2729  00003E' 6B00'              	clrf	?_pow& (0+255),b
  2730  000040' 6B00'              	clrf	(?_pow+1)& (0+255),b
  2731  000042' 0E80               	movlw	128
  2732  000044' 6F00'              	movwf	(?_pow+2)& (0+255),b
  2733  000046' 0E3F               	movlw	63
  2734  000048' 6F00'              	movwf	(?_pow+3)& (0+255),b
  2735  00004A' D086               	goto	l1018
  2736  00004C'                    l1021:
  2737                           ; BSR set to: 1
  2738  00004C' AF00'              	btfss	(?_pow+3)& (0+255),7,b
  2739  00004E' D042               	goto	l1022
  2740  000050' C004' F000'        	movff	?_pow+4,?___fltol
  2741  000054' C005' F001'        	movff	?_pow+5,?___fltol+1
  2742  000058' C006' F002'        	movff	?_pow+6,?___fltol+2
  2743  00005C' C007' F003'        	movff	?_pow+7,?___fltol+3
  2744  000060' EC00' F000'        	call	___fltol	;wreg free
  2745  000064' C000' F001'        	movff	?___fltol,??_pow+1
  2746  000068' C001' F002'        	movff	?___fltol+1,??_pow+2
  2747  00006C' C002' F003'        	movff	?___fltol+2,??_pow+3
  2748  000070' C003' F004'        	movff	?___fltol+3,??_pow+4
  2749  000074' C001' F000'        	movff	??_pow+1,?___lltofl
  2750  000078' C002' F001'        	movff	??_pow+2,?___lltofl+1
  2751  00007C' C003' F002'        	movff	??_pow+3,?___lltofl+2
  2752  000080' C004' F003'        	movff	??_pow+4,?___lltofl+3
  2753  000084' EC00' F000'        	call	___lltofl	;wreg free
  2754  000088' 5100'              	movf	(?_pow+7)& (0+255),w,b
  2755  00008A' 1900'              	xorwf	(?___lltofl+3)& (0+255),w,b
  2756  00008C' E108               	bnz	u3205
  2757  00008E' 5100'              	movf	(?_pow+6)& (0+255),w,b
  2758  000090' 1900'              	xorwf	(?___lltofl+2)& (0+255),w,b
  2759  000092' E105               	bnz	u3205
  2760  000094' 5100'              	movf	(?_pow+5)& (0+255),w,b
  2761  000096' 1900'              	xorwf	(?___lltofl+1)& (0+255),w,b
  2762  000098' E102               	bnz	u3205
  2763  00009A' 5100'              	movf	(?_pow+4)& (0+255),w,b
  2764  00009C' 1900'              	xorwf	?___lltofl& (0+255),w,b
  2765  00009E'                    u3205:
  2766  00009E' E005               	bz	l1023
  2767  0000A0'                    u3200:
  2768  0000A0' 6B00'              	clrf	?_pow& (0+255),b
  2769  0000A2' 6B00'              	clrf	(?_pow+1)& (0+255),b
  2770  0000A4' 6B00'              	clrf	(?_pow+2)& (0+255),b
  2771  0000A6' 6B00'              	clrf	(?_pow+3)& (0+255),b
  2772  0000A8' D057               	goto	l1018
  2773  0000AA'                    l1023:
  2774                           ; BSR set to: 1
  2775  0000AA' 5100'              	movf	(??_pow+1)& (0+255),w,b
  2776  0000AC' 0B01               	andlw	1
  2777  0000AE' 6F00'              	movwf	??_pow& (0+255),b
  2778  0000B0' C000' F000'        	movff	?_pow,?___flneg
  2779  0000B4' C001' F001'        	movff	?_pow+1,?___flneg+1
  2780  0000B8' C002' F002'        	movff	?_pow+2,?___flneg+2
  2781  0000BC' C003' F003'        	movff	?_pow+3,?___flneg+3
  2782  0000C0' EC00' F000'        	call	___flneg	;wreg free
  2783  0000C4' C000' F000'        	movff	?___flneg,?_pow
  2784  0000C8' C001' F001'        	movff	?___flneg+1,?_pow+1
  2785  0000CC' C002' F002'        	movff	?___flneg+2,?_pow+2
  2786  0000D0' C003' F003'        	movff	?___flneg+3,?_pow+3
  2787  0000D4'                    l1022:
  2788                           ; BSR set to: 1
  2789  0000D4' C000' F000'        	movff	?_pow,?_log
  2790  0000D8' C001' F001'        	movff	?_pow+1,?_log+1
  2791  0000DC' C002' F002'        	movff	?_pow+2,?_log+2
  2792  0000E0' C003' F003'        	movff	?_pow+3,?_log+3
  2793  0000E4' EC00' F000'        	call	_log	;wreg free
  2794  0000E8' C000' F000'        	movff	?_log,?___flmul
  2795  0000EC' C001' F001'        	movff	?_log+1,?___flmul+1
  2796  0000F0' C002' F002'        	movff	?_log+2,?___flmul+2
  2797  0000F4' C003' F003'        	movff	?_log+3,?___flmul+3
  2798  0000F8' C004' F004'        	movff	?_pow+4,?___flmul+4
  2799  0000FC' C005' F005'        	movff	?_pow+5,?___flmul+5
  2800  000100' C006' F006'        	movff	?_pow+6,?___flmul+6
  2801  000104' C007' F007'        	movff	?_pow+7,?___flmul+7
  2802  000108' EC00' F000'        	call	___flmul	;wreg free
  2803  00010C' C000' F000'        	movff	?___flmul,?_exp
  2804  000110' C001' F001'        	movff	?___flmul+1,?_exp+1
  2805  000114' C002' F002'        	movff	?___flmul+2,?_exp+2
  2806  000118' C003' F003'        	movff	?___flmul+3,?_exp+3
  2807  00011C' EC00' F000'        	call	_exp	;wreg free
  2808  000120' C000' F000'        	movff	?_exp,?_pow
  2809  000124' C001' F001'        	movff	?_exp+1,?_pow+1
  2810  000128' C002' F002'        	movff	?_exp+2,?_pow+2
  2811  00012C' C003' F003'        	movff	?_exp+3,?_pow+3
  2812  000130' 5100'              	movf	??_pow& (0+255),w,b
  2813  000132' E012               	bz	l1024
  2814  000134' C000' F000'        	movff	?_pow,?___flneg
  2815  000138' C001' F001'        	movff	?_pow+1,?___flneg+1
  2816  00013C' C002' F002'        	movff	?_pow+2,?___flneg+2
  2817  000140' C003' F003'        	movff	?_pow+3,?___flneg+3
  2818  000144' EC00' F000'        	call	___flneg	;wreg free
  2819  000148' C000' F000'        	movff	?___flneg,?_pow
  2820  00014C' C001' F001'        	movff	?___flneg+1,?_pow+1
  2821  000150' C002' F002'        	movff	?___flneg+2,?_pow+2
  2822  000154' C003' F003'        	movff	?___flneg+3,?_pow+3
  2823  000158'                    l1024:
  2824                           ; BSR set to: 1
  2825  000158'                    l1018:
  2826                           ; BSR set to: 1
  2827  000158' 0012               	return	
  2828  00015A'                    __end_of_pow:
  2829                           	opt stack 0
  2830                           
  2831                           	psect	text20
  2832                           ; =============== function _pow ends ===========
      +                          =
  2833                           ; *************** function _exp ****************
      +                          *
  2834                           ; Defined at:
  2835                           ;		line 13 in file "C:\Program Files (x86)\HI-TE
      +                          CH Software\PICC-18\PRO\9.66\sources\exp.c"
  2836                           ; Parameters:
  2837                           ;		x              size:   4offs:   0	type: unsig
      +                          ned long 
  2838                           ; Auto variables:
  2839                           ;		sign        	       	type: unsigned char 
  2840                           ;		exp         	       	type: int 
  2841                           ; Return value:
  2842                           ;		type: int 
  2843                           ;		size: 4
  2844                           ; Registers used:
  2845                           ;		wreg, fsr0l, fsr0h, fsr1l, fsr2l, status,2, s
      +                          tatus,0, tblptrl, tblptrh, tblptru, tablat, prod
      +                          l, prodh, cstack
  2846                           ; Tracked objects:
  2847                           ;		On entry : F/1
  2848                           ;		On exit  : F/1
  2849                           ;		Unchanged: FFFFFFF0/0
  2850                           ; Data sizes:
  2851                           ;		Autos:    6
  2852                           ;		Params:   4
  2853                           ;		Temp:     0
  2854                           ;		Total:   10
  2855                           ; This function calls:
  2856                           ;		___flge
  2857                           ;		___flneg
  2858                           ;		___asflmul
  2859                           ;		_floor
  2860                           ;		___fltol
  2861                           ;		___awtofl
  2862                           ;		___asflsub
  2863                           ;		_eval_poly
  2864                           ;		_ldexp
  2865                           ;		___fldiv
  2866                           ; This function is called by:
  2867                           ;		_pow
  2868                           ; This function uses a non-reentrant model
  2869                           ; 
  2870  000000                     
  2871  000000'                    _exp:
  2872                           	opt stack 26
  2873                           ; BSR set to: 1
  2874  000000' EE00' F000'        	lfsr	0,?_exp
  2875  000004' 50EE               	movf	postinc0,w,c
  2876  000006' 10EE               	iorwf	postinc0,w,c
  2877  000008' 10EE               	iorwf	postinc0,w,c
  2878  00000A' 10EE               	iorwf	postinc0,w,c
  2879  00000C' E106               	bnz	l1436
  2880  00000E' 6B00'              	clrf	?_exp& (0+255),b
  2881  000010' 6B00'              	clrf	(?_exp+1)& (0+255),b
  2882  000012' 0E80               	movlw	128
  2883  000014' 6F00'              	movwf	(?_exp+2)& (0+255),b
  2884  000016' 0E3F               	movlw	63
  2885  000018' D017               	goto	L5
  2886  00001A'                    l1436:
  2887                           ; BSR set to: 1
  2888  00001A' C000' F004'        	movff	?_exp,?___flge+4
  2889  00001E' C001' F005'        	movff	?_exp+1,?___flge+5
  2890  000022' C002' F006'        	movff	?_exp+2,?___flge+6
  2891  000026' C003' F007'        	movff	?_exp+3,?___flge+7
  2892  00002A' 0E18               	movlw	24
  2893  00002C' 6F00'              	movwf	?___flge& (0+255),b
  2894  00002E' 0E72               	movlw	114
  2895  000030' 6F00'              	movwf	(?___flge+1)& (0+255),b
  2896  000032' 0E31               	movlw	49
  2897  000034' 6F00'              	movwf	(?___flge+2)& (0+255),b
  2898  000036' 0E44               	movlw	68
  2899  000038' 6F00'              	movwf	(?___flge+3)& (0+255),b
  2900  00003A' EC00' F000'        	call	___flge	;wreg free
  2901  00003E' E206               	bc	l1437
  2902  000040' 6900'              	setf	?_exp& (0+255),b
  2903  000042' 6900'              	setf	(?_exp+1)& (0+255),b
  2904  000044' 0E7F               	movlw	127
  2905  000046' 6F00'              	movwf	(?_exp+2)& (0+255),b
  2906  000048'                    L5:
  2907  000048' 6F00'              	movwf	(?_exp+3)& (0+255),b
  2908  00004A' D0C2               	goto	l1435
  2909  00004C'                    l1437:
  2910                           ; BSR set to: 1
  2911  00004C' 0E87               	movlw	135
  2912  00004E' 6F00'              	movwf	(?___flge+4)& (0+255),b
  2913  000050' 0E48               	movlw	72
  2914  000052' 6F00'              	movwf	(?___flge+5)& (0+255),b
  2915  000054' 0E3A               	movlw	58
  2916  000056' 6F00'              	movwf	(?___flge+6)& (0+255),b
  2917  000058' 0EC4               	movlw	196
  2918  00005A' 6F00'              	movwf	(?___flge+7)& (0+255),b
  2919  00005C' C000' F000'        	movff	?_exp,?___flge
  2920  000060' C001' F001'        	movff	?_exp+1,?___flge+1
  2921  000064' C002' F002'        	movff	?_exp+2,?___flge+2
  2922  000068' C003' F003'        	movff	?_exp+3,?___flge+3
  2923  00006C' EC00' F000'        	call	___flge	;wreg free
  2924  000070' E201 D091          	bnc	u3360
  2925                           ; BSR set to: 1
  2926  000074' AF00'              	btfss	(?_exp+3)& (0+255),7,b
  2927  000076' D002               	goto	u3330
  2928  000078' 0E01               	movlw	1
  2929  00007A' D001               	goto	u3336
  2930  00007C'                    u3330:
  2931  00007C' 0E00               	movlw	0
  2932  00007E'                    u3336:
  2933  00007E' 6EE1               	movwf	fsr1l,c
  2934  000080' 50E1               	movf	fsr1l,w,c
  2935  000082' E012               	bz	l1439
  2936  000084' C000' F000'        	movff	?_exp,?___flneg
  2937  000088' C001' F001'        	movff	?_exp+1,?___flneg+1
  2938  00008C' C002' F002'        	movff	?_exp+2,?___flneg+2
  2939  000090' C003' F003'        	movff	?_exp+3,?___flneg+3
  2940  000094' EC00' F000'        	call	___flneg	;wreg free
  2941  000098' C000' F000'        	movff	?___flneg,?_exp
  2942  00009C' C001' F001'        	movff	?___flneg+1,?_exp+1
  2943  0000A0' C002' F002'        	movff	?___flneg+2,?_exp+2
  2944  0000A4' C003' F003'        	movff	?___flneg+3,?_exp+3
  2945  0000A8'                    l1439:
  2946                           ; BSR set to: 1
  2947  0000A8' 0E3B               	movlw	59
  2948  0000AA' 6F00'              	movwf	(?___asflmul+2)& (0+255),b
  2949  0000AC' 0EAA               	movlw	170
  2950  0000AE' 6F00'              	movwf	(?___asflmul+3)& (0+255),b
  2951  0000B0' 0EB8               	movlw	184
  2952  0000B2' 6F00'              	movwf	(?___asflmul+4)& (0+255),b
  2953  0000B4' 0E3F               	movlw	63
  2954  0000B6' 6F00'              	movwf	(?___asflmul+5)& (0+255),b
  2955  0000B8' 0E00'              	movlw	low ?_exp
  2956  0000BA' 6F00'              	movwf	?___asflmul& (0+255),b
  2957  0000BC' 0E00'              	movlw	high ?_exp
  2958  0000BE' 6F00'              	movwf	(?___asflmul+1)& (0+255),b
  2959  0000C0' EC00' F000'        	call	___asflmul	;wreg free
  2960  0000C4' C000' F000'        	movff	?_exp,?_floor
  2961  0000C8' C001' F001'        	movff	?_exp+1,?_floor+1
  2962  0000CC' C002' F002'        	movff	?_exp+2,?_floor+2
  2963  0000D0' C003' F003'        	movff	?_exp+3,?_floor+3
  2964  0000D4' EC00' F000'        	call	_floor	;wreg free
  2965  0000D8' C000' F000'        	movff	?_floor,?___fltol
  2966  0000DC' C001' F001'        	movff	?_floor+1,?___fltol+1
  2967  0000E0' C002' F002'        	movff	?_floor+2,?___fltol+2
  2968  0000E4' C003' F003'        	movff	?_floor+3,?___fltol+3
  2969  0000E8' EC00' F000'        	call	___fltol	;wreg free
  2970  0000EC' C000' F004'        	movff	?___fltol,??_exp+4
  2971  0000F0' C001' F005'        	movff	?___fltol+1,??_exp+5
  2972  0000F4' C004' F000'        	movff	??_exp+4,?___awtofl
  2973  0000F8' C005' F001'        	movff	??_exp+5,?___awtofl+1
  2974  0000FC' EC00' F000'        	call	___awtofl	;wreg free
  2975  000100' C000' F000'        	movff	?___awtofl,??_exp
  2976  000104' C001' F001'        	movff	?___awtofl+1,??_exp+1
  2977  000108' C002' F002'        	movff	?___awtofl+2,??_exp+2
  2978  00010C' C003' F003'        	movff	?___awtofl+3,??_exp+3
  2979  000110' C000' F002'        	movff	??_exp,?___asflsub+2
  2980  000114' C001' F003'        	movff	??_exp+1,?___asflsub+3
  2981  000118' C002' F004'        	movff	??_exp+2,?___asflsub+4
  2982  00011C' C003' F005'        	movff	??_exp+3,?___asflsub+5
  2983  000120' 0E00'              	movlw	low ?_exp
  2984  000122' 6F00'              	movwf	?___asflsub& (0+255),b
  2985  000124' 0E00'              	movlw	high ?_exp
  2986  000126' 6F00'              	movwf	(?___asflsub+1)& (0+255),b
  2987  000128' EC00' F000'        	call	___asflsub	;wreg free
  2988  00012C' 0E09               	movlw	9
  2989  00012E' 6F00'              	movwf	(?_eval_poly+5)& (0+255),b
  2990  000130' 6B00'              	clrf	(?_eval_poly+6)& (0+255),b
  2991  000132' 0E00'              	movlw	low F65
  2992  000134' 6F00'              	movwf	(?_eval_poly+4)& (0+255),b
  2993  000136' C000' F000'        	movff	?_exp,?_eval_poly
  2994  00013A' C001' F001'        	movff	?_exp+1,?_eval_poly+1
  2995  00013E' C002' F002'        	movff	?_exp+2,?_eval_poly+2
  2996  000142' C003' F003'        	movff	?_exp+3,?_eval_poly+3
  2997  000146' EC00' F000'        	call	_eval_poly	;wreg free
  2998  00014A' C000' F000'        	movff	?_eval_poly,?_ldexp
  2999  00014E' C001' F001'        	movff	?_eval_poly+1,?_ldexp+1
  3000  000152' C002' F002'        	movff	?_eval_poly+2,?_ldexp+2
  3001  000156' C003' F003'        	movff	?_eval_poly+3,?_ldexp+3
  3002  00015A' C004' F004'        	movff	??_exp+4,?_ldexp+4
  3003  00015E' C005' F005'        	movff	??_exp+5,?_ldexp+5
  3004  000162' EC00' F000'        	call	_ldexp	;wreg free
  3005  000166' C000' F000'        	movff	?_ldexp,?_exp
  3006  00016A' C001' F001'        	movff	?_ldexp+1,?_exp+1
  3007  00016E' C002' F002'        	movff	?_ldexp+2,?_exp+2
  3008  000172' C003' F003'        	movff	?_ldexp+3,?_exp+3
  3009  000176' 50E1               	movf	fsr1l,w,c
  3010  000178' E02B               	bz	l1440
  3011  00017A' EE00' F000'        	lfsr	0,?_exp
  3012  00017E' 0EFF               	movlw	255
  3013  000180' 18EE               	xorwf	postinc0,w,c
  3014  000182' 0EFF               	movlw	255
  3015  000184' B4D8               	btfsc	status,2,c
  3016  000186' 18EE               	xorwf	postinc0,w,c
  3017  000188' 0E7F               	movlw	127
  3018  00018A' B4D8               	btfsc	status,2,c
  3019  00018C' 18EE               	xorwf	postinc0,w,c
  3020  00018E' 0E7F               	movlw	127
  3021  000190' B4D8               	btfsc	status,2,c
  3022  000192' 18EE               	xorwf	postinc0,w,c
  3023  000194' E105               	bnz	l1441
  3024  000196'                    u3360:
  3025  000196' 6B00'              	clrf	?_exp& (0+255),b
  3026  000198' 6B00'              	clrf	(?_exp+1)& (0+255),b
  3027  00019A' 6B00'              	clrf	(?_exp+2)& (0+255),b
  3028  00019C' 6B00'              	clrf	(?_exp+3)& (0+255),b
  3029  00019E' D018               	goto	l1435
  3030  0001A0'                    l1441:
  3031                           ; BSR set to: 1
  3032  0001A0' C000' F004'        	movff	?_exp,?___fldiv+4
  3033  0001A4' C001' F005'        	movff	?_exp+1,?___fldiv+5
  3034  0001A8' C002' F006'        	movff	?_exp+2,?___fldiv+6
  3035  0001AC' C003' F007'        	movff	?_exp+3,?___fldiv+7
  3036  0001B0' 6B00'              	clrf	?___fldiv& (0+255),b
  3037  0001B2' 6B00'              	clrf	(?___fldiv+1)& (0+255),b
  3038  0001B4' 0E80               	movlw	128
  3039  0001B6' 6F00'              	movwf	(?___fldiv+2)& (0+255),b
  3040  0001B8' 0E3F               	movlw	63
  3041  0001BA' 6F00'              	movwf	(?___fldiv+3)& (0+255),b
  3042  0001BC' EC00' F000'        	call	___fldiv	;wreg free
  3043  0001C0' C000' F000'        	movff	?___fldiv,?_exp
  3044  0001C4' C001' F001'        	movff	?___fldiv+1,?_exp+1
  3045  0001C8' C002' F002'        	movff	?___fldiv+2,?_exp+2
  3046  0001CC' C003' F003'        	movff	?___fldiv+3,?_exp+3
  3047  0001D0'                    l1440:
  3048                           ; BSR set to: 1
  3049  0001D0'                    l1435:
  3050                           ; BSR set to: 1
  3051  0001D0' 0012               	return	
  3052  0001D2'                    __end_of_exp:
  3053                           	opt stack 0
  3054                           
  3055                           	psect	text21
  3056                           ; =============== function _exp ends ===========
      +                          =
  3057                           ; *************** function ___lltofl ***********
      +                          ******
  3058                           ; Defined at:
  3059                           ;		line 16 in file "C:\Program Files (x86)\HI-TE
      +                          CH Software\PICC-18\PRO\9.66\sources\lltofl.c"
  3060                           ; Parameters:
  3061                           ;		c              size:   4offs:   0	type: unsig
      +                          ned long 
  3062                           ; Auto variables:
  3063                           ;		exp         	       	type: unsigned char 
  3064                           ;		f1          	       	type: unsigned char 
  3065                           ; Return value:
  3066                           ;		type: unsigned char 
  3067                           ;		size: 4
  3068                           ; Registers used:
  3069                           ;		wreg, fsr0l, fsr0h, fsr2l, status,2, status,0
      +                          , cstack
  3070                           ; Tracked objects:
  3071                           ;		On entry : F/1
  3072                           ;		On exit  : F/1
  3073                           ;		Unchanged: FFFFFFF0/0
  3074                           ; Data sizes:
  3075                           ;		Autos:    4
  3076                           ;		Params:   4
  3077                           ;		Temp:     0
  3078                           ;		Total:    8
  3079                           ; This function calls:
  3080                           ;		___flpack
  3081                           ; This function is called by:
  3082                           ;		_pow
  3083                           ; This function uses a non-reentrant model
  3084                           ; 
  3085  000000                     
  3086  000000'                    ___lltofl:
  3087                           	opt stack 26
  3088                           ; BSR set to: 1
  3089  000000' 5100'              	movf	(?___lltofl+3)& (0+255),w,b
  3090  000002' 1100'              	iorwf	?___lltofl& (0+255),w,b
  3091  000004' 1100'              	iorwf	(?___lltofl+1)& (0+255),w,b
  3092  000006' 1100'              	iorwf	(?___lltofl+2)& (0+255),w,b
  3093  000008' E105               	bnz	l1335
  3094  00000A' 6B00'              	clrf	?___lltofl& (0+255),b
  3095  00000C' 6B00'              	clrf	(?___lltofl+1)& (0+255),b
  3096  00000E' 6B00'              	clrf	(?___lltofl+2)& (0+255),b
  3097  000010' 6B00'              	clrf	(?___lltofl+3)& (0+255),b
  3098  000012' D01A               	goto	l1334
  3099  000014'                    l1335:
  3100                           ; BSR set to: 1
  3101  000014' 0E96               	movlw	150
  3102  000016' 6ED9               	movwf	fsr2l,c
  3103  000018' C000' F000'        	movff	?___lltofl,??___lltofl
  3104  00001C' C001' F001'        	movff	?___lltofl+1,??___lltofl+1
  3105  000020' C002' F002'        	movff	?___lltofl+2,??___lltofl+2
  3106  000024' C003' F003'        	movff	?___lltofl+3,??___lltofl+3
  3107  000028' CFD9 F002'         	movff	fsr2l,?___flpack+2
  3108  00002C' 0E00'              	movlw	low ??___lltofl
  3109  00002E' 6F00'              	movwf	?___flpack& (0+255),b
  3110  000030' 0E00'              	movlw	high ??___lltofl
  3111  000032' 6F00'              	movwf	(?___flpack+1)& (0+255),b
  3112  000034' EC00' F000'        	call	___flpack	;wreg free
  3113  000038' C000' F000'        	movff	??___lltofl,?___lltofl
  3114  00003C' C001' F001'        	movff	??___lltofl+1,?___lltofl+1
  3115  000040' C002' F002'        	movff	??___lltofl+2,?___lltofl+2
  3116  000044' C003' F003'        	movff	??___lltofl+3,?___lltofl+3
  3117  000048'                    l1334:
  3118                           ; BSR set to: 1
  3119  000048' 0012               	return	
  3120  00004A'                    __end_of___lltofl:
  3121                           	opt stack 0
  3122                           
  3123                           	psect	text22
  3124                           ; =============== function ___lltofl ends ======
      +                          ======
  3125                           ; *************** function ___lwmod ************
      +                          *****
  3126                           ; Defined at:
  3127                           ;		line 5 in file "C:\Program Files (x86)\HI-TEC
      +                          H Software\PICC-18\PRO\9.66\sources\lwmod.c"
  3128                           ; Parameters:
  3129                           ;		dividend       size:   2offs:   0	type: unsig
      +                          ned int 
  3130                           ;		divisor        size:   2offs:   2	type: unsig
      +                          ned int 
  3131                           ; Auto variables:
  3132                           ;		counter     	       	type: unsigned char 
  3133                           ; Return value:
  3134                           ;		type: unsigned int 
  3135                           ;		size: 2
  3136                           ; Registers used:
  3137                           ;		wreg, fsr2l, status,2, status,0
  3138                           ; Tracked objects:
  3139                           ;		On entry : F/1
  3140                           ;		On exit  : F/1
  3141                           ;		Unchanged: FFFFFFF0/0
  3142                           ; Data sizes:
  3143                           ;		Autos:    0
  3144                           ;		Params:   4
  3145                           ;		Temp:     0
  3146                           ;		Total:    4
  3147                           ; This function calls:
  3148                           ;		Nothing
  3149                           ; This function is called by:
  3150                           ;		_format_number
  3151                           ; This function uses a non-reentrant model
  3152                           ; 
  3153  000000                     
  3154  000000'                    ___lwmod:
  3155                           	opt stack 26
  3156                           ; BSR set to: 1
  3157  000000' 5100'              	movf	(?___lwmod+3)& (0+255),w,b
  3158  000002' 1100'              	iorwf	(?___lwmod+2)& (0+255),w,b
  3159  000004' E017               	bz	l1357
  3160  000006' 0E01               	movlw	1
  3161  000008' 6ED9               	movwf	fsr2l,c
  3162  00000A'                    l1358:
  3163                           ; BSR set to: 1
  3164  00000A' BF00'              	btfsc	(?___lwmod+3)& (0+255),7,b
  3165  00000C' D005               	goto	l1363
  3166                           ; BSR set to: 1
  3167  00000E' 90D8               	bcf	status,0,c
  3168  000010' 3700'              	rlcf	(?___lwmod+2)& (0+255),f,b
  3169  000012' 3700'              	rlcf	(?___lwmod+3)& (0+255),f,b
  3170  000014' 2AD9               	incf	fsr2l,f,c
  3171  000016' D7F9               	goto	l1358
  3172                           ; BSR set to: 1
  3173  000018'                    l1363:
  3174                           ; BSR set to: 1
  3175  000018' 5100'              	movf	(?___lwmod+2)& (0+255),w,b
  3176  00001A' 5D00'              	subwf	?___lwmod& (0+255),w,b
  3177  00001C' 5100'              	movf	(?___lwmod+3)& (0+255),w,b
  3178  00001E' 5900'              	subwfb	(?___lwmod+1)& (0+255),w,b
  3179  000020' E304               	bnc	l1364
  3180  000022' 5100'              	movf	(?___lwmod+2)& (0+255),w,b
  3181  000024' 5F00'              	subwf	?___lwmod& (0+255),f,b
  3182  000026' 5100'              	movf	(?___lwmod+3)& (0+255),w,b
  3183  000028' 5B00'              	subwfb	(?___lwmod+1)& (0+255),f,b
  3184  00002A'                    l1364:
  3185                           ; BSR set to: 1
  3186  00002A' 90D8               	bcf	status,0,c
  3187  00002C' 3300'              	rrcf	(?___lwmod+3)& (0+255),f,b
  3188  00002E' 3300'              	rrcf	(?___lwmod+2)& (0+255),f,b
  3189  000030' 2ED9               	decfsz	fsr2l,f,c
  3190  000032' D7F2               	goto	l1363
  3191                           ; BSR set to: 1
  3192  000034'                    l1357:
  3193                           ; BSR set to: 1
  3194                           ; BSR set to: 1
  3195  000034' 0012               	return	
  3196  000036'                    __end_of___lwmod:
  3197                           	opt stack 0
  3198                           
  3199                           	psect	text23
  3200                           ; =============== function ___lwmod ends =======
      +                          =====
  3201                           ; *************** function ___lwdiv ************
      +                          *****
  3202                           ; Defined at:
  3203                           ;		line 5 in file "C:\Program Files (x86)\HI-TEC
      +                          H Software\PICC-18\PRO\9.66\sources\lwdiv.c"
  3204                           ; Parameters:
  3205                           ;		dividend       size:   2offs:   0	type: unsig
      +                          ned int 
  3206                           ;		divisor        size:   2offs:   2	type: unsig
      +                          ned int 
  3207                           ; Auto variables:
  3208                           ;		counter     	       	type: unsigned char 
  3209                           ;		quotient    	       	type: unsigned int 
  3210                           ; Return value:
  3211                           ;		type: unsigned int 
  3212                           ;		size: 2
  3213                           ; Registers used:
  3214                           ;		wreg, fsr2l, status,2, status,0, prodl, prodh
  3215                           ; Tracked objects:
  3216                           ;		On entry : F/1
  3217                           ;		On exit  : F/1
  3218                           ;		Unchanged: FFFFFFF0/0
  3219                           ; Data sizes:
  3220                           ;		Autos:    0
  3221                           ;		Params:   4
  3222                           ;		Temp:     0
  3223                           ;		Total:    4
  3224                           ; This function calls:
  3225                           ;		Nothing
  3226                           ; This function is called by:
  3227                           ;		_format_number
  3228                           ; This function uses a non-reentrant model
  3229                           ; 
  3230  000000                     
  3231  000000'                    ___lwdiv:
  3232                           	opt stack 26
  3233                           ; BSR set to: 1
  3234  000000' 6AF3               	clrf	prodl,c
  3235  000002' 6AF4               	clrf	prodh,c
  3236  000004' 5100'              	movf	(?___lwdiv+3)& (0+255),w,b
  3237  000006' 1100'              	iorwf	(?___lwdiv+2)& (0+255),w,b
  3238  000008' E01B               	bz	l1348
  3239  00000A' 0E01               	movlw	1
  3240  00000C' 6ED9               	movwf	fsr2l,c
  3241  00000E'                    l1349:
  3242                           ; BSR set to: 1
  3243  00000E' 90D8               	bcf	status,0,c
  3244                           ; BSR set to: 1
  3245  000010' BF00'              	btfsc	(?___lwdiv+3)& (0+255),7,b
  3246  000012' D005               	goto	L6
  3247  000014' 3700'              	rlcf	(?___lwdiv+2)& (0+255),f,b
  3248  000016' 3700'              	rlcf	(?___lwdiv+3)& (0+255),f,b
  3249  000018' 2AD9               	incf	fsr2l,f,c
  3250  00001A' D7F9               	goto	l1349
  3251                           ; BSR set to: 1
  3252  00001C'                    l1354:
  3253                           ; BSR set to: 1
  3254  00001C' 90D8               	bcf	status,0,c
  3255  00001E'                    L6:
  3256  00001E' 36F3               	rlcf	prodl,f,c
  3257  000020' 36F4               	rlcf	prodh,f,c
  3258  000022' 5100'              	movf	(?___lwdiv+2)& (0+255),w,b
  3259  000024' 5D00'              	subwf	?___lwdiv& (0+255),w,b
  3260  000026' 5100'              	movf	(?___lwdiv+3)& (0+255),w,b
  3261  000028' 5900'              	subwfb	(?___lwdiv+1)& (0+255),w,b
  3262  00002A' E305               	bnc	l1355
  3263  00002C' 5100'              	movf	(?___lwdiv+2)& (0+255),w,b
  3264  00002E' 5F00'              	subwf	?___lwdiv& (0+255),f,b
  3265  000030' 5100'              	movf	(?___lwdiv+3)& (0+255),w,b
  3266  000032' 5B00'              	subwfb	(?___lwdiv+1)& (0+255),f,b
  3267  000034' 80F3               	bsf	prodl,0,c
  3268  000036'                    l1355:
  3269                           ; BSR set to: 1
  3270  000036' 90D8               	bcf	status,0,c
  3271  000038' 3300'              	rrcf	(?___lwdiv+3)& (0+255),f,b
  3272  00003A' 3300'              	rrcf	(?___lwdiv+2)& (0+255),f,b
  3273  00003C' 2ED9               	decfsz	fsr2l,f,c
  3274  00003E' D7EE               	goto	l1354
  3275                           ; BSR set to: 1
  3276  000040'                    l1348:
  3277                           ; BSR set to: 1
  3278  000040' CFF3 F000'         	movff	prodl,?___lwdiv
  3279  000044' CFF4 F001'         	movff	prodh,?___lwdiv+1
  3280                           ; BSR set to: 1
  3281  000048' 0012               	return	
  3282  00004A'                    __end_of___lwdiv:
  3283                           	opt stack 0
  3284                           
  3285                           	psect	text24
  3286                           ; =============== function ___lwdiv ends =======
      +                          =====
  3287                           ; *************** function _output_putch *******
      +                          **********
  3288                           ; Defined at:
  3289                           ;		line 48 in file "../../../src/LC-meter.c"
  3290                           ; Parameters:
  3291                           ;		c              size:   1reg:   wre	type: unsi
      +                          gned char 
  3292                           ; Auto variables:
  3293                           ;		None
  3294                           ; Return value:
  3295                           ;		type: void 
  3296                           ;		size: 0
  3297                           ; Registers used:
  3298                           ;		wreg, fsr0l, fsr0h, fsr1l, fsr2l, status,2, s
      +                          tatus,0, cstack
  3299                           ; Tracked objects:
  3300                           ;		On entry : F/1
  3301                           ;		On exit  : F/1
  3302                           ;		Unchanged: FFFFFFFF/0
  3303                           ; Data sizes:
  3304                           ;		Autos:    0
  3305                           ;		Params:   0
  3306                           ;		Temp:     0
  3307                           ;		Total:    0
  3308                           ; This function calls:
  3309                           ;		_ser_putch
  3310                           ; This function is called by:
  3311                           ;		_measure_capacitance
  3312                           ; This function uses a non-reentrant model
  3313                           ; 
  3314  000000                     
  3315                           ;LC-meter.c: 47: void
  3316                           ;LC-meter.c: 48: output_putch(char c) {
  3317  000000'                    _output_putch:
  3318                           	opt stack 26
  3319                           ; BSR set to: 1
  3320                           ; output_putch@c loaded to fsr1l
  3321  000000' CFE8 FFE1          	movff	wreg,fsr1l
  3322  000004' 50E1               	movf	fsr1l,w,c
  3323  000006' EF00' F000'        	goto	_ser_putch
  3324                           ;LC-meter.c: 56: }
  3325                           ; BSR set to: 1
  3326  00000A'                    __end_of_output_putch:
  3327                           	opt stack 0
  3328                           
  3329                           	psect	text25
  3330                           ; =============== function _output_putch ends ==
      +                          ==========
  3331                           ; *************** function _log ****************
      +                          *
  3332                           ; Defined at:
  3333                           ;		line 6 in file "C:\Program Files (x86)\HI-TEC
      +                          H Software\PICC-18\PRO\9.66\sources\log.c"
  3334                           ; Parameters:
  3335                           ;		x              size:   4offs:   0	type: void 
  3336                           ; Auto variables:
  3337                           ;		exp         	       	type: int 
  3338                           ; Return value:
  3339                           ;		type: int 
  3340                           ;		size: 4
  3341                           ; Registers used:
  3342                           ;		wreg, fsr0l, fsr0h, fsr2l, status,2, status,0
      +                          , tblptrl, tblptrh, tblptru, tablat, prodl, prod
      +                          h, cstack
  3343                           ; Tracked objects:
  3344                           ;		On entry : F/1
  3345                           ;		On exit  : F/1
  3346                           ;		Unchanged: FFFFFFF0/0
  3347                           ; Data sizes:
  3348                           ;		Autos:   18
  3349                           ;		Params:   4
  3350                           ;		Temp:     0
  3351                           ;		Total:   22
  3352                           ; This function calls:
  3353                           ;		_frexp
  3354                           ;		___flmul
  3355                           ;		___fladd
  3356                           ;		_eval_poly
  3357                           ;		___awtofl
  3358                           ; This function is called by:
  3359                           ;		_log10
  3360                           ;		_pow
  3361                           ; This function uses a non-reentrant model
  3362                           ; 
  3363  000000                     
  3364  000000'                    _log:
  3365                           	opt stack 26
  3366                           ; BSR set to: 1
  3367  000000' BF00'              	btfsc	(?_log+3)& (0+255),7,b
  3368  000002' D007               	goto	u3450
  3369                           ; BSR set to: 1
  3370  000004' EE00' F000'        	lfsr	0,?_log
  3371  000008' 50EE               	movf	postinc0,w,c
  3372  00000A' 10EE               	iorwf	postinc0,w,c
  3373  00000C' 10EE               	iorwf	postinc0,w,c
  3374  00000E' 10EE               	iorwf	postinc0,w,c
  3375  000010' E105               	bnz	l1016
  3376  000012'                    u3450:
  3377  000012' 6B00'              	clrf	?_log& (0+255),b
  3378  000014' 6B00'              	clrf	(?_log+1)& (0+255),b
  3379  000016' 6B00'              	clrf	(?_log+2)& (0+255),b
  3380  000018' 6B00'              	clrf	(?_log+3)& (0+255),b
  3381  00001A' D0A1               	goto	l1014
  3382  00001C'                    l1016:
  3383                           ; BSR set to: 1
  3384  00001C' 0E00'              	movlw	low (??_log+16)
  3385  00001E' 6F00'              	movwf	(?_frexp+4)& (0+255),b
  3386  000020' 0E00'              	movlw	high (??_log+16)
  3387  000022' 6F00'              	movwf	(?_frexp+5)& (0+255),b
  3388  000024' C000' F000'        	movff	?_log,?_frexp
  3389  000028' C001' F001'        	movff	?_log+1,?_frexp+1
  3390  00002C' C002' F002'        	movff	?_log+2,?_frexp+2
  3391  000030' C003' F003'        	movff	?_log+3,?_frexp+3
  3392  000034' EC00' F000'        	call	_frexp	;wreg free
  3393  000038' C000' F000'        	movff	?_frexp,??_log
  3394  00003C' C001' F001'        	movff	?_frexp+1,??_log+1
  3395  000040' C002' F002'        	movff	?_frexp+2,??_log+2
  3396  000044' C003' F003'        	movff	?_frexp+3,??_log+3
  3397  000048' 6B00'              	clrf	(?___flmul+4)& (0+255),b
  3398  00004A' 6B00'              	clrf	(?___flmul+5)& (0+255),b
  3399  00004C' 6B00'              	clrf	(?___flmul+6)& (0+255),b
  3400  00004E' 0E40               	movlw	64
  3401  000050' 6F00'              	movwf	(?___flmul+7)& (0+255),b
  3402  000052' C000' F000'        	movff	??_log,?___flmul
  3403  000056' C001' F001'        	movff	??_log+1,?___flmul+1
  3404  00005A' C002' F002'        	movff	??_log+2,?___flmul+2
  3405  00005E' C003' F003'        	movff	??_log+3,?___flmul+3
  3406  000062' EC00' F000'        	call	___flmul	;wreg free
  3407  000066' C000' F004'        	movff	?___flmul,??_log+4
  3408  00006A' C001' F005'        	movff	?___flmul+1,??_log+5
  3409  00006E' C002' F006'        	movff	?___flmul+2,??_log+6
  3410  000072' C003' F007'        	movff	?___flmul+3,??_log+7
  3411  000076' 6B00'              	clrf	(?___fladd+4)& (0+255),b
  3412  000078' 6B00'              	clrf	(?___fladd+5)& (0+255),b
  3413  00007A' 0E80               	movlw	128
  3414  00007C' 6F00'              	movwf	(?___fladd+6)& (0+255),b
  3415  00007E' 0EBF               	movlw	191
  3416  000080' 6F00'              	movwf	(?___fladd+7)& (0+255),b
  3417  000082' C004' F000'        	movff	??_log+4,?___fladd
  3418  000086' C005' F001'        	movff	??_log+5,?___fladd+1
  3419  00008A' C006' F002'        	movff	??_log+6,?___fladd+2
  3420  00008E' C007' F003'        	movff	??_log+7,?___fladd+3
  3421  000092' EC00' F000'        	call	___fladd	;wreg free
  3422  000096' C000' F000'        	movff	?___fladd,?_log
  3423  00009A' C001' F001'        	movff	?___fladd+1,?_log+1
  3424  00009E' C002' F002'        	movff	?___fladd+2,?_log+2
  3425  0000A2' C003' F003'        	movff	?___fladd+3,?_log+3
  3426  0000A6' 0700'              	decf	(??_log+16)& (0+255),f,b
  3427  0000A8' A0D8               	btfss	status,0,c
  3428  0000AA' 0700'              	decf	(??_log+17)& (0+255),f,b
  3429  0000AC' 0E08               	movlw	8
  3430  0000AE' 6F00'              	movwf	(?_eval_poly+5)& (0+255),b
  3431  0000B0' 6B00'              	clrf	(?_eval_poly+6)& (0+255),b
  3432  0000B2' 0E00'              	movlw	low F64
  3433  0000B4' 6F00'              	movwf	(?_eval_poly+4)& (0+255),b
  3434  0000B6' C000' F000'        	movff	?_log,?_eval_poly
  3435  0000BA' C001' F001'        	movff	?_log+1,?_eval_poly+1
  3436  0000BE' C002' F002'        	movff	?_log+2,?_eval_poly+2
  3437  0000C2' C003' F003'        	movff	?_log+3,?_eval_poly+3
  3438  0000C6' EC00' F000'        	call	_eval_poly	;wreg free
  3439  0000CA' C000' F000'        	movff	?_eval_poly,?_log
  3440  0000CE' C001' F001'        	movff	?_eval_poly+1,?_log+1
  3441  0000D2' C002' F002'        	movff	?_eval_poly+2,?_log+2
  3442  0000D6' C003' F003'        	movff	?_eval_poly+3,?_log+3
  3443  0000DA' C010' F000'        	movff	??_log+16,?___awtofl
  3444  0000DE' C011' F001'        	movff	??_log+17,?___awtofl+1
  3445  0000E2' EC00' F000'        	call	___awtofl	;wreg free
  3446  0000E6' C000' F008'        	movff	?___awtofl,??_log+8
  3447  0000EA' C001' F009'        	movff	?___awtofl+1,??_log+9
  3448  0000EE' C002' F00A'        	movff	?___awtofl+2,??_log+10
  3449  0000F2' C003' F00B'        	movff	?___awtofl+3,??_log+11
  3450  0000F6' C008' F000'        	movff	??_log+8,?___flmul
  3451  0000FA' C009' F001'        	movff	??_log+9,?___flmul+1
  3452  0000FE' C00A' F002'        	movff	??_log+10,?___flmul+2
  3453  000102' C00B' F003'        	movff	??_log+11,?___flmul+3
  3454  000106' 0E18               	movlw	24
  3455  000108' 6F00'              	movwf	(?___flmul+4)& (0+255),b
  3456  00010A' 0E72               	movlw	114
  3457  00010C' 6F00'              	movwf	(?___flmul+5)& (0+255),b
  3458  00010E' 0E31               	movlw	49
  3459  000110' 6F00'              	movwf	(?___flmul+6)& (0+255),b
  3460  000112' 0E3F               	movlw	63
  3461  000114' 6F00'              	movwf	(?___flmul+7)& (0+255),b
  3462  000116' EC00' F000'        	call	___flmul	;wreg free
  3463  00011A' C000' F00C'        	movff	?___flmul,??_log+12
  3464  00011E' C001' F00D'        	movff	?___flmul+1,??_log+13
  3465  000122' C002' F00E'        	movff	?___flmul+2,??_log+14
  3466  000126' C003' F00F'        	movff	?___flmul+3,??_log+15
  3467  00012A' C000' F004'        	movff	?_log,?___fladd+4
  3468  00012E' C001' F005'        	movff	?_log+1,?___fladd+5
  3469  000132' C002' F006'        	movff	?_log+2,?___fladd+6
  3470  000136' C003' F007'        	movff	?_log+3,?___fladd+7
  3471  00013A' C00C' F000'        	movff	??_log+12,?___fladd
  3472  00013E' C00D' F001'        	movff	??_log+13,?___fladd+1
  3473  000142' C00E' F002'        	movff	??_log+14,?___fladd+2
  3474  000146' C00F' F003'        	movff	??_log+15,?___fladd+3
  3475  00014A' EC00' F000'        	call	___fladd	;wreg free
  3476  00014E' C000' F000'        	movff	?___fladd,?_log
  3477  000152' C001' F001'        	movff	?___fladd+1,?_log+1
  3478  000156' C002' F002'        	movff	?___fladd+2,?_log+2
  3479  00015A' C003' F003'        	movff	?___fladd+3,?_log+3
  3480  00015E'                    l1014:
  3481                           ; BSR set to: 1
  3482  00015E' 0012               	return	
  3483  000160'                    __end_of_log:
  3484                           	opt stack 0
  3485                           
  3486                           	psect	text26
  3487                           ; =============== function _log ends ===========
      +                          =
  3488                           ; *************** function _format_putchar *****
      +                          ************
  3489                           ; Defined at:
  3490                           ;		line 6 in file "../../../lib/format.c"
  3491                           ; Parameters:
  3492                           ;		c              size:   1reg:   wre	type: unsi
      +                          gned char 
  3493                           ; Auto variables:
  3494                           ;		None
  3495                           ; Return value:
  3496                           ;		type: void 
  3497                           ;		size: 0
  3498                           ; Registers used:
  3499                           ;		wreg
  3500                           ; Tracked objects:
  3501                           ;		On entry : F/1
  3502                           ;		On exit  : F/1
  3503                           ;		Unchanged: FFFFFFFF/0
  3504                           ; Data sizes:
  3505                           ;		Autos:    0
  3506                           ;		Params:   0
  3507                           ;		Temp:     0
  3508                           ;		Total:    0
  3509                           ; This function calls:
  3510                           ;		Nothing
  3511                           ; This function is called by:
  3512                           ; This function uses a non-reentrant model
  3513                           ; 
  3514  000000                     
  3515                           ;format.c: 5: static void
  3516                           ;format.c: 6: format_putchar(char c) {
  3517  000000'                    _format_putchar:
  3518                           	opt stack 26
  3519                           ; BSR set to: 1
  3520                           ;format.c: 8: }
  3521                           ; BSR set to: 1
  3522  000000' 0012               	return	
  3523  000002'                    __end_of_format_putchar:
  3524                           	opt stack 0
  3525                           
  3526                           	psect	text27
  3527                           ; =============== function _format_putchar ends 
      +                          ============
  3528                           ; *************** function _ser_putch **********
      +                          *******
  3529                           ; Defined at:
  3530                           ;		line 82 in file "../../../lib/ser.c"
  3531                           ; Parameters:
  3532                           ;		c              size:   1reg:   wre	type: unsi
      +                          gned char 
  3533                           ; Auto variables:
  3534                           ;		None
  3535                           ; Return value:
  3536                           ;		type: void 
  3537                           ;		size: 0
  3538                           ; Registers used:
  3539                           ;		wreg, fsr0l, fsr0h, fsr2l, status,2, status,0
  3540                           ; Tracked objects:
  3541                           ;		On entry : 0/1
  3542                           ;		On exit  : 0/1
  3543                           ;		Unchanged: FFFFFFFF/0
  3544                           ; Data sizes:
  3545                           ;		Autos:    0
  3546                           ;		Params:   0
  3547                           ;		Temp:     0
  3548                           ;		Total:    0
  3549                           ; This function calls:
  3550                           ;		Nothing
  3551                           ; This function is called by:
  3552                           ;		_ser_puts
  3553                           ;		_output_putch
  3554                           ;		_measure_capacitance
  3555                           ; This function uses a non-reentrant model
  3556                           ; 
  3557  000000                     
  3558                           ;ser.c: 81: void
  3559                           ;ser.c: 82: ser_putch(char c) {
  3560  000000'                    _ser_putch:
  3561                           	opt stack 25
  3562                           ; BSR set to: ?
  3563                           ; ser_putch@c loaded to fsr2l
  3564  000000' CFE8 FFD9          	movff	wreg,fsr2l
  3565  000004'                    l378:
  3566                           ; BSR set to: ?
  3567                           ; BSR set to: ?
  3568  000004' 283A               	incf	58,w,c	;volatile
  3569  000006' 0B0F               	andlw	15
  3570  000008' 183C               	xorwf	60,w,c	;volatile
  3571  00000A' E0FC               	bz	l378
  3572                           ; BSR set to: ?
  3573                           ;ser.c: 84: GIE = 0;
  3574  00000C' 9EF2               	bcf	intcon,7,c	;volatile
  3575                           ;ser.c: 85: txfifo[txiptr] = c;
  3576  00000E' 503A               	movf	58,w,c	;volatile
  3577  000010' 0F14               	addlw	20
  3578  000012' 6EE9               	movwf	fsr0l,c
  3579  000014' 6AEA               	clrf	fsr0h,c
  3580  000016' CFD9 FFEF          	movff	fsr2l,indf0
  3581                           ;ser.c: 86: txiptr = (txiptr + 1) & ((unsigned c
      +                          har)16 - 1);
  3582  00001A' 283A               	incf	58,w,c	;volatile
  3583  00001C' 0B0F               	andlw	15
  3584  00001E' 6E3A               	movwf	58,c	;volatile
  3585                           ;ser.c: 87: TXIE = 1;
  3586  000020' 889D               	bsf	3997,4,c	;volatile
  3587                           ;ser.c: 88: GIE = 1;
  3588  000022' 8EF2               	bsf	intcon,7,c	;volatile
  3589                           ;ser.c: 89: }
  3590                           ; BSR set to: ?
  3591  000024' 0012               	return	
  3592  000026'                    __end_of_ser_putch:
  3593                           	opt stack 0
  3594                           
  3595                           	psect	text28
  3596                           ; =============== function _ser_putch ends =====
      +                          =======
  3597                           ; *************** function ___asflsub **********
      +                          *******
  3598                           ; Defined at:
  3599                           ;		line 5 in file "C:\Program Files (x86)\HI-TEC
      +                          H Software\PICC-18\PRO\9.66\sources\asflsub.c"
  3600                           ; Parameters:
  3601                           ;		f1p            size:   2offs:   0	type: PTR ;
      +                           Largest target is 4
  3602                           ;		 -> exp@x(4), format_double@num(4), 
  3603                           ;		f2             size:   4offs:   2	type: PTR 
  3604                           ; Auto variables:
  3605                           ;		None
  3606                           ; Return value:
  3607                           ;		type: PTR 
  3608                           ;		size: 4
  3609                           ; Registers used:
  3610                           ;		wreg, fsr0l, fsr0h, fsr2l, status,2, status,0
      +                          , prodl, prodh, cstack
  3611                           ; Tracked objects:
  3612                           ;		On entry : F/1
  3613                           ;		On exit  : F/1
  3614                           ;		Unchanged: FFFFFFF0/0
  3615                           ; Data sizes:
  3616                           ;		Autos:    0
  3617                           ;		Params:   6
  3618                           ;		Temp:     0
  3619                           ;		Total:    6
  3620                           ; This function calls:
  3621                           ;		___flsub
  3622                           ; This function is called by:
  3623                           ;		_format_double
  3624                           ;		_exp
  3625                           ; This function uses a non-reentrant model
  3626                           ; 
  3627  000000                     
  3628  000000'                    ___asflsub:
  3629                           	opt stack 25
  3630                           ; BSR set to: 1
  3631  000000' C002' F004'        	movff	?___asflsub+2,?___flsub+4
  3632  000004' C003' F005'        	movff	?___asflsub+3,?___flsub+5
  3633  000008' C004' F006'        	movff	?___asflsub+4,?___flsub+6
  3634  00000C' C005' F007'        	movff	?___asflsub+5,?___flsub+7
  3635  000010' C000' FFE9         	movff	?___asflsub,fsr0l
  3636  000014' C001' FFEA         	movff	?___asflsub+1,fsr0h
  3637  000018' CFEE F000'         	movff	postinc0,?___flsub
  3638  00001C' CFEE F001'         	movff	postinc0,?___flsub+1
  3639  000020' CFEE F002'         	movff	postinc0,?___flsub+2
  3640  000024' CFEE F003'         	movff	postinc0,?___flsub+3
  3641  000028' EC00' F000'        	call	___flsub	;wreg free
  3642  00002C' C000' FFE9         	movff	?___asflsub,fsr0l
  3643  000030' C001' FFEA         	movff	?___asflsub+1,fsr0h
  3644  000034' C000' FFEE         	movff	?___flsub,postinc0
  3645  000038' C001' FFEE         	movff	?___flsub+1,postinc0
  3646  00003C' C002' FFEE         	movff	?___flsub+2,postinc0
  3647  000040' C003' FFED         	movff	?___flsub+3,postdec0
  3648                           ; BSR set to: 1
  3649  000044' 0012               	return	
  3650  000046'                    __end_of___asflsub:
  3651                           	opt stack 0
  3652                           
  3653                           	psect	text29
  3654                           ; =============== function ___asflsub ends =====
      +                          =======
  3655                           ; *************** function _floor **************
      +                          ***
  3656                           ; Defined at:
  3657                           ;		line 14 in file "C:\Program Files (x86)\HI-TE
      +                          CH Software\PICC-18\PRO\9.66\sources\floor.c"
  3658                           ; Parameters:
  3659                           ;		x              size:   4offs:   0	type: PTR 
  3660                           ; Auto variables:
  3661                           ;		expon       	       	type: int 
  3662                           ;		i           	       	type: int 
  3663                           ; Return value:
  3664                           ;		type: int 
  3665                           ;		size: 4
  3666                           ; Registers used:
  3667                           ;		wreg, fsr0l, fsr0h, fsr2l, status,2, status,0
      +                          , prodl, prodh, cstack
  3668                           ; Tracked objects:
  3669                           ;		On entry : F/1
  3670                           ;		On exit  : F/1
  3671                           ;		Unchanged: FFFFFFF0/0
  3672                           ; Data sizes:
  3673                           ;		Autos:    6
  3674                           ;		Params:   4
  3675                           ;		Temp:     0
  3676                           ;		Total:   10
  3677                           ; This function calls:
  3678                           ;		_frexp
  3679                           ;		___fltol
  3680                           ;		___altofl
  3681                           ;		___flge
  3682                           ;		___fladd
  3683                           ; This function is called by:
  3684                           ;		_format_double
  3685                           ;		_exp
  3686                           ; This function uses a non-reentrant model
  3687                           ; 
  3688  000000                     
  3689  000000'                    _floor:
  3690                           	opt stack 25
  3691                           ; BSR set to: 1
  3692  000000' 0E00'              	movlw	low ??_floor
  3693  000002' 6F00'              	movwf	(?_frexp+4)& (0+255),b
  3694  000004' 0E00'              	movlw	high ??_floor
  3695  000006' 6F00'              	movwf	(?_frexp+5)& (0+255),b
  3696  000008' C000' F000'        	movff	?_floor,?_frexp
  3697  00000C' C001' F001'        	movff	?_floor+1,?_frexp+1
  3698  000010' C002' F002'        	movff	?_floor+2,?_frexp+2
  3699  000014' C003' F003'        	movff	?_floor+3,?_frexp+3
  3700  000018' EC00' F000'        	call	_frexp	;wreg free
  3701  00001C' AF00'              	btfss	(??_floor+1)& (0+255),7,b
  3702  00001E' D00E               	goto	l1010
  3703  000020' AF00'              	btfss	(?_floor+3)& (0+255),7,b
  3704  000022' D007               	goto	l1011
  3705  000024' 6B00'              	clrf	?_floor& (0+255),b
  3706  000026' 6B00'              	clrf	(?_floor+1)& (0+255),b
  3707  000028' 0E80               	movlw	128
  3708  00002A' 6F00'              	movwf	(?_floor+2)& (0+255),b
  3709  00002C' 0EBF               	movlw	191
  3710  00002E' 6F00'              	movwf	(?_floor+3)& (0+255),b
  3711  000030' D05B               	goto	l1009
  3712  000032'                    l1011:
  3713                           ; BSR set to: 1
  3714  000032' 6B00'              	clrf	?_floor& (0+255),b
  3715  000034' 6B00'              	clrf	(?_floor+1)& (0+255),b
  3716  000036' 6B00'              	clrf	(?_floor+2)& (0+255),b
  3717  000038' 6B00'              	clrf	(?_floor+3)& (0+255),b
  3718  00003A' D056               	goto	l1009
  3719  00003C'                    l1010:
  3720                           ; BSR set to: 1
  3721  00003C' 0E1D               	movlw	29
  3722  00003E' 5D00'              	subwf	??_floor& (0+255),w,b
  3723  000040' 0E00               	movlw	0
  3724  000042' 5900'              	subwfb	(??_floor+1)& (0+255),w,b
  3725  000044' E301               	bnc	l1012
  3726  000046' D050               	goto	l1009
  3727  000048'                    l1012:
  3728                           ; BSR set to: 1
  3729  000048' C000' F000'        	movff	?_floor,?___fltol
  3730  00004C' C001' F001'        	movff	?_floor+1,?___fltol+1
  3731  000050' C002' F002'        	movff	?_floor+2,?___fltol+2
  3732  000054' C003' F003'        	movff	?_floor+3,?___fltol+3
  3733  000058' EC00' F000'        	call	___fltol	;wreg free
  3734  00005C' C000' F000'        	movff	?___fltol,?___altofl
  3735  000060' C001' F001'        	movff	?___fltol+1,?___altofl+1
  3736  000064' C002' F002'        	movff	?___fltol+2,?___altofl+2
  3737  000068' C003' F003'        	movff	?___fltol+3,?___altofl+3
  3738  00006C' EC00' F000'        	call	___altofl	;wreg free
  3739  000070' C000' F002'        	movff	?___altofl,??_floor+2
  3740  000074' C001' F003'        	movff	?___altofl+1,??_floor+3
  3741  000078' C002' F004'        	movff	?___altofl+2,??_floor+4
  3742  00007C' C003' F005'        	movff	?___altofl+3,??_floor+5
  3743  000080' C002' F004'        	movff	??_floor+2,?___flge+4
  3744  000084' C003' F005'        	movff	??_floor+3,?___flge+5
  3745  000088' C004' F006'        	movff	??_floor+4,?___flge+6
  3746  00008C' C005' F007'        	movff	??_floor+5,?___flge+7
  3747  000090' C000' F000'        	movff	?_floor,?___flge
  3748  000094' C001' F001'        	movff	?_floor+1,?___flge+1
  3749  000098' C002' F002'        	movff	?_floor+2,?___flge+2
  3750  00009C' C003' F003'        	movff	?_floor+3,?___flge+3
  3751  0000A0' EC00' F000'        	call	___flge	;wreg free
  3752  0000A4' E219               	bc	l1013
  3753  0000A6' 6B00'              	clrf	(?___fladd+4)& (0+255),b
  3754  0000A8' 6B00'              	clrf	(?___fladd+5)& (0+255),b
  3755  0000AA' 0E80               	movlw	128
  3756  0000AC' 6F00'              	movwf	(?___fladd+6)& (0+255),b
  3757  0000AE' 0EBF               	movlw	191
  3758  0000B0' 6F00'              	movwf	(?___fladd+7)& (0+255),b
  3759  0000B2' C002' F000'        	movff	??_floor+2,?___fladd
  3760  0000B6' C003' F001'        	movff	??_floor+3,?___fladd+1
  3761  0000BA' C004' F002'        	movff	??_floor+4,?___fladd+2
  3762  0000BE' C005' F003'        	movff	??_floor+5,?___fladd+3
  3763  0000C2' EC00' F000'        	call	___fladd	;wreg free
  3764  0000C6' C000' F000'        	movff	?___fladd,?_floor
  3765  0000CA' C001' F001'        	movff	?___fladd+1,?_floor+1
  3766  0000CE' C002' F002'        	movff	?___fladd+2,?_floor+2
  3767  0000D2' C003' F003'        	movff	?___fladd+3,?_floor+3
  3768  0000D6' D008               	goto	l1009
  3769  0000D8'                    l1013:
  3770                           ; BSR set to: 1
  3771  0000D8' C002' F000'        	movff	??_floor+2,?_floor
  3772  0000DC' C003' F001'        	movff	??_floor+3,?_floor+1
  3773  0000E0' C004' F002'        	movff	??_floor+4,?_floor+2
  3774  0000E4' C005' F003'        	movff	??_floor+5,?_floor+3
  3775  0000E8'                    l1009:
  3776                           ; BSR set to: 1
  3777  0000E8' 0012               	return	
  3778  0000EA'                    __end_of_floor:
  3779                           	opt stack 0
  3780                           
  3781                           	psect	text30
  3782                           ; =============== function _floor ends =========
      +                          ===
  3783                           ; *************** function ___asflmul **********
      +                          *******
  3784                           ; Defined at:
  3785                           ;		line 5 in file "C:\Program Files (x86)\HI-TEC
      +                          H Software\PICC-18\PRO\9.66\sources\asflmul.c"
  3786                           ; Parameters:
  3787                           ;		mp             size:   2offs:   0	type: PTR ;
      +                           Largest target is 4
  3788                           ;		 -> exp@x(4), measure_inductance@Lin(4), meas
      +                          ure_capacitance@Cin(4), 
  3789                           ;		multiplicand   size:   4offs:   2	type: PTR 
  3790                           ; Auto variables:
  3791                           ;		None
  3792                           ; Return value:
  3793                           ;		type: PTR 
  3794                           ;		size: 4
  3795                           ; Registers used:
  3796                           ;		wreg, fsr0l, fsr0h, fsr2l, status,2, status,0
      +                          , prodl, cstack
  3797                           ; Tracked objects:
  3798                           ;		On entry : F/1
  3799                           ;		On exit  : F/1
  3800                           ;		Unchanged: FFFFFFF0/0
  3801                           ; Data sizes:
  3802                           ;		Autos:    0
  3803                           ;		Params:   6
  3804                           ;		Temp:     0
  3805                           ;		Total:    6
  3806                           ; This function calls:
  3807                           ;		___flmul
  3808                           ; This function is called by:
  3809                           ;		_measure_capacitance
  3810                           ;		_measure_inductance
  3811                           ;		_exp
  3812                           ; This function uses a non-reentrant model
  3813                           ; 
  3814  000000                     
  3815  000000'                    ___asflmul:
  3816                           	opt stack 25
  3817                           ; BSR set to: 1
  3818  000000' C002' F004'        	movff	?___asflmul+2,?___flmul+4
  3819  000004' C003' F005'        	movff	?___asflmul+3,?___flmul+5
  3820  000008' C004' F006'        	movff	?___asflmul+4,?___flmul+6
  3821  00000C' C005' F007'        	movff	?___asflmul+5,?___flmul+7
  3822  000010' C000' FFE9         	movff	?___asflmul,fsr0l
  3823  000014' C001' FFEA         	movff	?___asflmul+1,fsr0h
  3824  000018' CFEE F000'         	movff	postinc0,?___flmul
  3825  00001C' CFEE F001'         	movff	postinc0,?___flmul+1
  3826  000020' CFEE F002'         	movff	postinc0,?___flmul+2
  3827  000024' CFEE F003'         	movff	postinc0,?___flmul+3
  3828  000028' EC00' F000'        	call	___flmul	;wreg free
  3829  00002C' C000' FFE9         	movff	?___asflmul,fsr0l
  3830  000030' C001' FFEA         	movff	?___asflmul+1,fsr0h
  3831  000034' C000' FFEE         	movff	?___flmul,postinc0
  3832  000038' C001' FFEE         	movff	?___flmul+1,postinc0
  3833  00003C' C002' FFEE         	movff	?___flmul+2,postinc0
  3834  000040' C003' FFED         	movff	?___flmul+3,postdec0
  3835                           ; BSR set to: 1
  3836  000044' 0012               	return	
  3837  000046'                    __end_of___asflmul:
  3838                           	opt stack 0
  3839                           
  3840                           	psect	text31
  3841                           ; =============== function ___asflmul ends =====
      +                          =======
  3842                           ; *************** function ___awtofl ***********
      +                          ******
  3843                           ; Defined at:
  3844                           ;		line 16 in file "C:\Program Files (x86)\HI-TE
      +                          CH Software\PICC-18\PRO\9.66\sources\awtofl.c"
  3845                           ; Parameters:
  3846                           ;		c              size:   2offs:   0	type: int 
  3847                           ; Auto variables:
  3848                           ;		f1          	       	type: int 
  3849                           ; Return value:
  3850                           ;		type: int 
  3851                           ;		size: 4
  3852                           ; Registers used:
  3853                           ;		wreg, fsr0l, fsr0h, status,2, status,0, cstac
      +                          k
  3854                           ; Tracked objects:
  3855                           ;		On entry : F/1
  3856                           ;		On exit  : F/1
  3857                           ;		Unchanged: FFFFFFF0/0
  3858                           ; Data sizes:
  3859                           ;		Autos:    4
  3860                           ;		Params:   4
  3861                           ;		Temp:     0
  3862                           ;		Total:    8
  3863                           ; This function calls:
  3864                           ;		___flpack
  3865                           ;		___flneg
  3866                           ; This function is called by:
  3867                           ;		_format_double
  3868                           ;		_log
  3869                           ;		_exp
  3870                           ; This function uses a non-reentrant model
  3871                           ; 
  3872  000000                     
  3873  000000'                    ___awtofl:
  3874                           	opt stack 25
  3875                           ; BSR set to: 1
  3876  000000' 5100'              	movf	(?___awtofl+1)& (0+255),w,b
  3877  000002' 1100'              	iorwf	?___awtofl& (0+255),w,b
  3878  000004' E105               	bnz	l1121
  3879  000006' 6B00'              	clrf	?___awtofl& (0+255),b
  3880  000008' 6B00'              	clrf	(?___awtofl+1)& (0+255),b
  3881  00000A' 6B00'              	clrf	(?___awtofl+2)& (0+255),b
  3882  00000C' 6B00'              	clrf	(?___awtofl+3)& (0+255),b
  3883  00000E' D037               	goto	l1120
  3884  000010'                    l1121:
  3885                           ; BSR set to: 1
  3886  000010' C000' F000'        	movff	?___awtofl,??___awtofl
  3887  000014' C001' F001'        	movff	?___awtofl+1,??___awtofl+1
  3888  000018' 0E00               	movlw	0
  3889  00001A' BF00'              	btfsc	(??___awtofl+1)& (0+255),7,b
  3890  00001C' 0EFF               	movlw	-1
  3891  00001E' 6F00'              	movwf	(??___awtofl+2)& (0+255),b
  3892  000020' 6F00'              	movwf	(??___awtofl+3)& (0+255),b
  3893  000022' AF00'              	btfss	(?___awtofl+1)& (0+255),7,b
  3894  000024' D008               	goto	l1122
  3895  000026' 1F00'              	comf	(??___awtofl+3)& (0+255),f,b
  3896  000028' 1F00'              	comf	(??___awtofl+2)& (0+255),f,b
  3897  00002A' 1F00'              	comf	(??___awtofl+1)& (0+255),f,b
  3898  00002C' 6D00'              	negf	??___awtofl& (0+255),b
  3899  00002E' 0E00               	movlw	0
  3900  000030' 2300'              	addwfc	(??___awtofl+1)& (0+255),f,b
  3901  000032' 2300'              	addwfc	(??___awtofl+2)& (0+255),f,b
  3902  000034' 2300'              	addwfc	(??___awtofl+3)& (0+255),f,b
  3903  000036'                    l1122:
  3904                           ; BSR set to: 1
  3905  000036' 0E96               	movlw	150
  3906  000038' 6F00'              	movwf	(?___flpack+2)& (0+255),b
  3907  00003A' 0E00'              	movlw	low ??___awtofl
  3908  00003C' 6F00'              	movwf	?___flpack& (0+255),b
  3909  00003E' 0E00'              	movlw	high ??___awtofl
  3910  000040' 6F00'              	movwf	(?___flpack+1)& (0+255),b
  3911  000042' EC00' F000'        	call	___flpack	;wreg free
  3912  000046' AF00'              	btfss	(?___awtofl+1)& (0+255),7,b
  3913  000048' D012               	goto	l1123
  3914  00004A' C000' F000'        	movff	??___awtofl,?___flneg
  3915  00004E' C001' F001'        	movff	??___awtofl+1,?___flneg+1
  3916  000052' C002' F002'        	movff	??___awtofl+2,?___flneg+2
  3917  000056' C003' F003'        	movff	??___awtofl+3,?___flneg+3
  3918  00005A' EC00' F000'        	call	___flneg	;wreg free
  3919  00005E' C000' F000'        	movff	?___flneg,??___awtofl
  3920  000062' C001' F001'        	movff	?___flneg+1,??___awtofl+1
  3921  000066' C002' F002'        	movff	?___flneg+2,??___awtofl+2
  3922  00006A' C003' F003'        	movff	?___flneg+3,??___awtofl+3
  3923  00006E'                    l1123:
  3924                           ; BSR set to: 1
  3925  00006E' C000' F000'        	movff	??___awtofl,?___awtofl
  3926  000072' C001' F001'        	movff	??___awtofl+1,?___awtofl+1
  3927  000076' C002' F002'        	movff	??___awtofl+2,?___awtofl+2
  3928  00007A' C003' F003'        	movff	??___awtofl+3,?___awtofl+3
  3929  00007E'                    l1120:
  3930                           ; BSR set to: 1
  3931  00007E' 0012               	return	
  3932  000080'                    __end_of___awtofl:
  3933                           	opt stack 0
  3934                           
  3935                           	psect	text32
  3936                           ; =============== function ___awtofl ends ======
      +                          ======
  3937                           ; *************** function _eval_poly **********
      +                          *******
  3938                           ; Defined at:
  3939                           ;		line 5 in file "C:\Program Files (x86)\HI-TEC
      +                          H Software\PICC-18\PRO\9.66\sources\evalpoly.c"
  3940                           ; Parameters:
  3941                           ;		x              size:   4offs:   0	type: int 
  3942                           ;		d              size:   1offs:   4	type: PTR c
      +                          onst ; Largest target is 40
  3943                           ;		 -> F65(40), F64(36), 
  3944                           ;		n              size:   2offs:   5	type: int 
  3945                           ; Auto variables:
  3946                           ;		res         	       	type: int 
  3947                           ; Return value:
  3948                           ;		type: int 
  3949                           ;		size: 4
  3950                           ; Registers used:
  3951                           ;		wreg, fsr0l, fsr0h, fsr2l, status,2, status,0
      +                          , tblptrl, tblptrh, tblptru, tablat, prodl, prod
      +                          h, cstack
  3952                           ; Tracked objects:
  3953                           ;		On entry : F/1
  3954                           ;		On exit  : F/1
  3955                           ;		Unchanged: FFFFFFF0/0
  3956                           ; Data sizes:
  3957                           ;		Autos:    8
  3958                           ;		Params:   7
  3959                           ;		Temp:     1
  3960                           ;		Total:   16
  3961                           ; This function calls:
  3962                           ;		___flmul
  3963                           ;		___fladd
  3964                           ; This function is called by:
  3965                           ;		_log
  3966                           ;		_exp
  3967                           ; This function uses a non-reentrant model
  3968                           ; 
  3969  000000                     
  3970  000000'                    _eval_poly:
  3971                           	opt stack 25
  3972                           ; BSR set to: 1
  3973  000000' 5100'              	movf	(?_eval_poly+5)& (0+255),w,b
  3974  000002' 0D04               	mullw	4
  3975  000004' 5100'              	movf	(?_eval_poly+4)& (0+255),w,b
  3976  000006' 24F3               	addwf	prodl,w,c
  3977  000008' 6F00'              	movwf	(??_eval_poly+8)& (0+255),b
  3978  00000A' C008' FFF6         	movff	??_eval_poly+8,tblptrl
  3979  00000E' 0E00'              	movlw	high __Lsmallconst
  3980  000010' 6EF7               	movwf	tblptrh,c
  3981  000012' 0009               	tblrd		*+
  3982  000014' CFF5 F004'         	movff	tablat,??_eval_poly+4
  3983  000018' 0009               	tblrd		*+
  3984  00001A' CFF5 F005'         	movff	tablat,??_eval_poly+5
  3985  00001E' 0009               	tblrd		*+
  3986  000020' CFF5 F006'         	movff	tablat,??_eval_poly+6
  3987  000024' 000A               	tblrd		*-
  3988  000026' CFF5 F007'         	movff	tablat,??_eval_poly+7
  3989  00002A'                    l1432:
  3990                           ; BSR set to: 1
  3991  00002A' 5100'              	movf	(?_eval_poly+6)& (0+255),w,b
  3992  00002C' 1100'              	iorwf	(?_eval_poly+5)& (0+255),w,b
  3993  00002E' E046               	bz	u3590
  3994                           ; BSR set to: 1
  3995  000030' C004' F004'        	movff	??_eval_poly+4,?___flmul+4
  3996  000034' C005' F005'        	movff	??_eval_poly+5,?___flmul+5
  3997  000038' C006' F006'        	movff	??_eval_poly+6,?___flmul+6
  3998  00003C' C007' F007'        	movff	??_eval_poly+7,?___flmul+7
  3999  000040' C000' F000'        	movff	?_eval_poly,?___flmul
  4000  000044' C001' F001'        	movff	?_eval_poly+1,?___flmul+1
  4001  000048' C002' F002'        	movff	?_eval_poly+2,?___flmul+2
  4002  00004C' C003' F003'        	movff	?_eval_poly+3,?___flmul+3
  4003  000050' EC00' F000'        	call	___flmul	;wreg free
  4004  000054' C000' F000'        	movff	?___flmul,??_eval_poly
  4005  000058' C001' F001'        	movff	?___flmul+1,??_eval_poly+1
  4006  00005C' C002' F002'        	movff	?___flmul+2,??_eval_poly+2
  4007  000060' C003' F003'        	movff	?___flmul+3,??_eval_poly+3
  4008  000064' 0700'              	decf	(?_eval_poly+5)& (0+255),f,b
  4009  000066' A0D8               	btfss	status,0,c
  4010  000068' 0700'              	decf	(?_eval_poly+6)& (0+255),f,b
  4011  00006A' 0101               	movlb	1	; () banked
  4012  00006C' 5100'              	movf	(?_eval_poly+5)& (0+255),w,b
  4013  00006E' 0D04               	mullw	4
  4014  000070' 5100'              	movf	(?_eval_poly+4)& (0+255),w,b
  4015  000072' 24F3               	addwf	prodl,w,c
  4016  000074' 6F00'              	movwf	(??_eval_poly+8)& (0+255),b
  4017  000076' C008' FFF6         	movff	??_eval_poly+8,tblptrl
  4018  00007A' 0E00'              	movlw	high __Lsmallconst
  4019  00007C' 6EF7               	movwf	tblptrh,c
  4020  00007E' 0009               	tblrd		*+
  4021  000080' CFF5 F004'         	movff	tablat,?___fladd+4
  4022  000084' 0009               	tblrd		*+
  4023  000086' CFF5 F005'         	movff	tablat,?___fladd+5
  4024  00008A' 0009               	tblrd		*+
  4025  00008C' CFF5 F006'         	movff	tablat,?___fladd+6
  4026  000090' 000A               	tblrd		*-
  4027  000092' CFF5 F007'         	movff	tablat,?___fladd+7
  4028  000096' C000' F000'        	movff	??_eval_poly,?___fladd
  4029  00009A' C001' F001'        	movff	??_eval_poly+1,?___fladd+1
  4030  00009E' C002' F002'        	movff	??_eval_poly+2,?___fladd+2
  4031  0000A2' C003' F003'        	movff	??_eval_poly+3,?___fladd+3
  4032  0000A6' EC00' F000'        	call	___fladd	;wreg free
  4033  0000AA' C000' F004'        	movff	?___fladd,??_eval_poly+4
  4034  0000AE' C001' F005'        	movff	?___fladd+1,??_eval_poly+5
  4035  0000B2' C002' F006'        	movff	?___fladd+2,??_eval_poly+6
  4036  0000B6' C003' F007'        	movff	?___fladd+3,??_eval_poly+7
  4037  0000BA' D7B7               	goto	l1432
  4038  0000BC'                    u3590:
  4039                           ; BSR set to: 1
  4040  0000BC' C004' F000'        	movff	??_eval_poly+4,?_eval_poly
  4041  0000C0' C005' F001'        	movff	??_eval_poly+5,?_eval_poly+1
  4042  0000C4' C006' F002'        	movff	??_eval_poly+6,?_eval_poly+2
  4043  0000C8' C007' F003'        	movff	??_eval_poly+7,?_eval_poly+3
  4044                           ; BSR set to: 1
  4045  0000CC' 0012               	return	
  4046  0000CE'                    __end_of_eval_poly:
  4047                           	opt stack 0
  4048                           
  4049                           	psect	text33
  4050                           ; =============== function _eval_poly ends =====
      +                          =======
  4051                           ; *************** function ___fldiv ************
      +                          *****
  4052                           ; Defined at:
  4053                           ;		line 19 in file "C:\Program Files (x86)\HI-TE
      +                          CH Software\PICC-18\PRO\9.66\sources\fldiv.c"
  4054                           ; Parameters:
  4055                           ;		f1             size:   4offs:   0	type: int 
  4056                           ;		f2             size:   4offs:   4	type: int 
  4057                           ; Auto variables:
  4058                           ;		exp2        	       	type: unsigned char 
  4059                           ;		sign1       	       	type: unsigned char 
  4060                           ;		exp1        	       	type: unsigned char 
  4061                           ;		sign2       	       	type: unsigned char 
  4062                           ;		f3          	       	type: unsigned char 
  4063                           ; Return value:
  4064                           ;		type: unsigned char 
  4065                           ;		size: 4
  4066                           ; Registers used:
  4067                           ;		wreg, fsr0l, fsr0h, fsr2l, status,2, status,0
      +                          , prodl, prodh, cstack
  4068                           ; Tracked objects:
  4069                           ;		On entry : F/1
  4070                           ;		On exit  : F/1
  4071                           ;		Unchanged: FFFFFFF0/0
  4072                           ; Data sizes:
  4073                           ;		Autos:    6
  4074                           ;		Params:   8
  4075                           ;		Temp:     0
  4076                           ;		Total:   14
  4077                           ; This function calls:
  4078                           ;		___flunpack
  4079                           ;		___flpack
  4080                           ; This function is called by:
  4081                           ;		_format_double
  4082                           ;		_measure_inductance
  4083                           ;		___asfldiv
  4084                           ;		_exp
  4085                           ; This function uses a non-reentrant model
  4086                           ; 
  4087  000000                     
  4088  000000'                    ___fldiv:
  4089                           	opt stack 25
  4090                           ; BSR set to: 1
  4091  000000' 6B00'              	clrf	(??___fldiv+2)& (0+255),b
  4092  000002' 6B00'              	clrf	(??___fldiv+3)& (0+255),b
  4093  000004' 6B00'              	clrf	(??___fldiv+4)& (0+255),b
  4094  000006' 6B00'              	clrf	(??___fldiv+5)& (0+255),b
  4095  000008' 0E00'              	movlw	low (??___fldiv+1)
  4096  00000A' 6F00'              	movwf	(?___flunpack+2)& (0+255),b
  4097  00000C' 0E00'              	movlw	high (??___fldiv+1)
  4098  00000E' 6F00'              	movwf	(?___flunpack+3)& (0+255),b
  4099  000010' 0E00'              	movlw	low ?___fldiv
  4100  000012' 6F00'              	movwf	?___flunpack& (0+255),b
  4101  000014' 0E00'              	movlw	high ?___fldiv
  4102  000016' 6F00'              	movwf	(?___flunpack+1)& (0+255),b
  4103  000018' EC00' F000'        	call	___flunpack	;wreg free
  4104  00001C' 6ED9               	movwf	fsr2l,c
  4105  00001E' 6700'              	tstfsz	(??___fldiv+1)& (0+255),b
  4106  000020' D001               	goto	l1178
  4107  000022' D03E               	goto	l1184
  4108  000024'                    l1178:
  4109                           ; BSR set to: 1
  4110                           ; ___fldiv@sign2 allocated to prodh
  4111  000024' 0E00'              	movlw	low ??___fldiv
  4112  000026' 6F00'              	movwf	(?___flunpack+2)& (0+255),b
  4113  000028' 0E00'              	movlw	high ??___fldiv
  4114  00002A' 6F00'              	movwf	(?___flunpack+3)& (0+255),b
  4115  00002C' 0E00'              	movlw	low (?___fldiv+4)
  4116  00002E' 6F00'              	movwf	?___flunpack& (0+255),b
  4117  000030' 0E00'              	movlw	high (?___fldiv+4)
  4118  000032' 6F00'              	movwf	(?___flunpack+1)& (0+255),b
  4119  000034' EC00' F000'        	call	___flunpack	;wreg free
  4120  000038' 6EF4               	movwf	prodh,c
  4121  00003A' 6700'              	tstfsz	??___fldiv& (0+255),b
  4122  00003C' D001               	goto	l1179
  4123  00003E' D030               	goto	l1184
  4124  000040'                    l1179:
  4125                           ; BSR set to: 1
  4126  000040' 5100'              	movf	??___fldiv& (0+255),w,b
  4127  000042' 0F89               	addlw	137
  4128  000044' 5F00'              	subwf	(??___fldiv+1)& (0+255),f,b
  4129  000046' 50F4               	movf	prodh,w,c
  4130  000048' 1AD9               	xorwf	fsr2l,f,c
  4131                           ; ___fldiv@sign2 allocated to fsr0l
  4132  00004A' 0E20               	movlw	32
  4133  00004C' 6EE9               	movwf	fsr0l,c
  4134  00004E'                    l1182:
  4135                           ; BSR set to: 1
  4136  00004E' 90D8               	bcf	status,0,c
  4137  000050' 3700'              	rlcf	(??___fldiv+2)& (0+255),f,b
  4138  000052' 3700'              	rlcf	(??___fldiv+3)& (0+255),f,b
  4139  000054' 3700'              	rlcf	(??___fldiv+4)& (0+255),f,b
  4140  000056' 3700'              	rlcf	(??___fldiv+5)& (0+255),f,b
  4141  000058' 5100'              	movf	(?___fldiv+4)& (0+255),w,b
  4142  00005A' 5D00'              	subwf	?___fldiv& (0+255),w,b
  4143  00005C' 5100'              	movf	(?___fldiv+5)& (0+255),w,b
  4144  00005E' 5900'              	subwfb	(?___fldiv+1)& (0+255),w,b
  4145  000060' 5100'              	movf	(?___fldiv+6)& (0+255),w,b
  4146  000062' 5900'              	subwfb	(?___fldiv+2)& (0+255),w,b
  4147  000064' 5100'              	movf	(?___fldiv+7)& (0+255),w,b
  4148  000066' 5900'              	subwfb	(?___fldiv+3)& (0+255),w,b
  4149  000068' E309               	bnc	l1183
  4150  00006A' 5100'              	movf	(?___fldiv+4)& (0+255),w,b
  4151  00006C' 5F00'              	subwf	?___fldiv& (0+255),f,b
  4152  00006E' 5100'              	movf	(?___fldiv+5)& (0+255),w,b
  4153  000070' 5B00'              	subwfb	(?___fldiv+1)& (0+255),f,b
  4154  000072' 5100'              	movf	(?___fldiv+6)& (0+255),w,b
  4155  000074' 5B00'              	subwfb	(?___fldiv+2)& (0+255),f,b
  4156  000076' 5100'              	movf	(?___fldiv+7)& (0+255),w,b
  4157  000078' 5B00'              	subwfb	(?___fldiv+3)& (0+255),f,b
  4158  00007A' 8100'              	bsf	(??___fldiv+2)& (0+255),0,b
  4159  00007C'                    l1183:
  4160                           ; BSR set to: 1
  4161  00007C' 90D8               	bcf	status,0,c
  4162  00007E' 3700'              	rlcf	?___fldiv& (0+255),f,b
  4163  000080' 3700'              	rlcf	(?___fldiv+1)& (0+255),f,b
  4164  000082' 3700'              	rlcf	(?___fldiv+2)& (0+255),f,b
  4165  000084' 3700'              	rlcf	(?___fldiv+3)& (0+255),f,b
  4166  000086' 2EE9               	decfsz	fsr0l,f,c
  4167  000088' D7E2               	goto	l1182
  4168                           ; BSR set to: 1
  4169  00008A' C001' F002'        	movff	??___fldiv+1,?___flpack+2
  4170  00008E' 0E00'              	movlw	low (??___fldiv+2)
  4171  000090' 6F00'              	movwf	?___flpack& (0+255),b
  4172  000092' 0E00'              	movlw	high (??___fldiv+2)
  4173  000094' 6F00'              	movwf	(?___flpack+1)& (0+255),b
  4174  000096' EC00' F000'        	call	___flpack	;wreg free
  4175  00009A' 50D9               	movf	fsr2l,w,c
  4176  00009C' A4D8               	btfss	status,2,c
  4177  00009E' 8F00'              	bsf	(??___fldiv+5)& (0+255),7,b
  4178  0000A0'                    l1184:
  4179                           ; BSR set to: 1
  4180  0000A0' C002' F000'        	movff	??___fldiv+2,?___fldiv
  4181  0000A4' C003' F001'        	movff	??___fldiv+3,?___fldiv+1
  4182  0000A8' C004' F002'        	movff	??___fldiv+4,?___fldiv+2
  4183  0000AC' C005' F003'        	movff	??___fldiv+5,?___fldiv+3
  4184                           ; BSR set to: 1
  4185  0000B0' 0012               	return	
  4186  0000B2'                    __end_of___fldiv:
  4187                           	opt stack 0
  4188                           
  4189                           	psect	text34
  4190                           ; =============== function ___fldiv ends =======
      +                          =====
  4191                           ; *************** function _ldexp **************
      +                          ***
  4192                           ; Defined at:
  4193                           ;		line 278 in file "C:\Program Files (x86)\HI-T
      +                          ECH Software\PICC-18\PRO\9.66\sources\frexp.c"
  4194                           ; Parameters:
  4195                           ;		value          size:   4offs:   0	type: unsig
      +                          ned char 
  4196                           ;		newexp         size:   2offs:   4	type: int 
  4197                           ; Auto variables:
  4198                           ;		None
  4199                           ; Return value:
  4200                           ;		type: int 
  4201                           ;		size: 4
  4202                           ; Registers used:
  4203                           ;		wreg, fsr0l, fsr0h, status,2, status,0
  4204                           ; Tracked objects:
  4205                           ;		On entry : F/1
  4206                           ;		On exit  : F/1
  4207                           ;		Unchanged: FFFFFFF0/0
  4208                           ; Data sizes:
  4209                           ;		Autos:    0
  4210                           ;		Params:   6
  4211                           ;		Temp:     3
  4212                           ;		Total:    9
  4213                           ; This function calls:
  4214                           ; This function is called by:
  4215                           ;		_exp
  4216                           ; This function uses a non-reentrant model
  4217                           ; 
  4218  000000                     
  4219  000000'                    _ldexp:
  4220                           	opt stack 25
  4221                           ; BSR set to: 1
  4222  000000' EE00' F000'        	lfsr	0,?_ldexp
  4223  000004' 50EE               	movf	postinc0,w,c
  4224  000006' 10EE               	iorwf	postinc0,w,c
  4225  000008' 10EE               	iorwf	postinc0,w,c
  4226  00000A' 10EE               	iorwf	postinc0,w,c
  4227  00000C' E015               	bz	u3510
  4228                           ; BSR set to: 1
  4229  00000E' 0101               	movlb	1	; () banked
  4230  000010' 5100'              	movf	(?_ldexp+3)& (0+255),w,b
  4231  000012' 0B7F               	andlw	127
  4232  000014' 6F00'              	movwf	??_ldexp& (0+255),b
  4233  000016' 90D8               	bcf	status,0,c
  4234  000018' 3500'              	rlcf	??_ldexp& (0+255),w,b
  4235  00001A' 6F00'              	movwf	(??_ldexp+1)& (0+255),b
  4236  00001C' 6B00'              	clrf	(??_ldexp+2)& (0+255),b
  4237  00001E' 3700'              	rlcf	(??_ldexp+2)& (0+255),f,b
  4238  000020' 5100'              	movf	(??_ldexp+1)& (0+255),w,b
  4239  000022' 2700'              	addwf	(?_ldexp+4)& (0+255),f,b
  4240  000024' 5100'              	movf	(??_ldexp+2)& (0+255),w,b
  4241  000026' 2300'              	addwfc	(?_ldexp+5)& (0+255),f,b
  4242  000028' 3500'              	rlcf	(?_ldexp+2)& (0+255),w,b
  4243  00002A' 36E8               	rlcf	wreg,f,c
  4244  00002C' 0B01               	andlw	1
  4245  00002E' 2700'              	addwf	(?_ldexp+4)& (0+255),f,b
  4246  000030' 0E00               	movlw	0
  4247  000032' 2300'              	addwfc	(?_ldexp+5)& (0+255),f,b
  4248  000034' AF00'              	btfss	(?_ldexp+5)& (0+255),7,b
  4249  000036' D005               	goto	l1031
  4250  000038'                    u3510:
  4251  000038' 6B00'              	clrf	?_ldexp& (0+255),b
  4252  00003A' 6B00'              	clrf	(?_ldexp+1)& (0+255),b
  4253  00003C' 6B00'              	clrf	(?_ldexp+2)& (0+255),b
  4254  00003E' 6B00'              	clrf	(?_ldexp+3)& (0+255),b
  4255  000040' D028               	goto	l1029
  4256  000042'                    l1031:
  4257                           ; BSR set to: 1
  4258  000042' 5100'              	movf	(?_ldexp+5)& (0+255),w,b
  4259  000044' 0A80               	xorlw	128
  4260  000046' 0F7F               	addlw	-129
  4261  000048' 0E00               	movlw	0
  4262  00004A' B4D8               	btfsc	status,2,c
  4263  00004C' 5D00'              	subwf	(?_ldexp+4)& (0+255),w,b
  4264  00004E' E30B               	bnc	l1033
  4265  000050' 6900'              	setf	?_ldexp& (0+255),b
  4266  000052' 6900'              	setf	(?_ldexp+1)& (0+255),b
  4267  000054' 0E7F               	movlw	127
  4268  000056' 6F00'              	movwf	(?_ldexp+2)& (0+255),b
  4269  000058' AF00'              	btfss	(?_ldexp+3)& (0+255),7,b
  4270  00005A' D002               	goto	L8
  4271  00005C' 0EFF               	movlw	255
  4272  00005E' D001               	goto	L7
  4273                           ; BSR set to: 1
  4274  000060'                    L8:
  4275  000060' 0E7F               	movlw	127
  4276  000062'                    L7:
  4277  000062' 6F00'              	movwf	(?_ldexp+3)& (0+255),b
  4278  000064' D016               	goto	l1029
  4279  000066'                    l1033:
  4280                           ; BSR set to: 1
  4281  000066' 3500'              	rlcf	(?_ldexp+5)& (0+255),w,b
  4282  000068' 3100'              	rrcf	(?_ldexp+5)& (0+255),w,b
  4283  00006A' 6F00'              	movwf	(??_ldexp+1)& (0+255),b
  4284  00006C' 3100'              	rrcf	(?_ldexp+4)& (0+255),w,b
  4285  00006E' 6F00'              	movwf	??_ldexp& (0+255),b
  4286  000070' 0101               	movlb	1	; () banked
  4287  000072' 5100'              	movf	(?_ldexp+3)& (0+255),w,b
  4288  000074' 1900'              	xorwf	??_ldexp& (0+255),w,b
  4289  000076' 0B80               	andlw	-128
  4290  000078' 1900'              	xorwf	??_ldexp& (0+255),w,b
  4291  00007A' 6F00'              	movwf	(?_ldexp+3)& (0+255),b
  4292  00007C' C004' F000'        	movff	?_ldexp+4,??_ldexp
  4293  000080' 0E01               	movlw	1
  4294  000082' 1700'              	andwf	??_ldexp& (0+255),f,b
  4295  000084' 3300'              	rrcf	??_ldexp& (0+255),f,b
  4296  000086' 3300'              	rrcf	??_ldexp& (0+255),f,b
  4297  000088' 5100'              	movf	(?_ldexp+2)& (0+255),w,b
  4298  00008A' 1900'              	xorwf	??_ldexp& (0+255),w,b
  4299  00008C' 0B7F               	andlw	-129
  4300  00008E' 1900'              	xorwf	??_ldexp& (0+255),w,b
  4301  000090' 6F00'              	movwf	(?_ldexp+2)& (0+255),b
  4302                           ; BSR set to: 1
  4303                           ; BSR set to: 1
  4304  000092'                    l1029:
  4305                           ; BSR set to: 1
  4306  000092' 0012               	return	
  4307  000094'                    __end_of_ldexp:
  4308                           	opt stack 0
  4309                           
  4310                           	psect	text35
  4311                           ; =============== function _ldexp ends =========
      +                          ===
  4312                           ; *************** function ___flsub ************
      +                          *****
  4313                           ; Defined at:
  4314                           ;		line 17 in file "C:\Program Files (x86)\HI-TE
      +                          CH Software\PICC-18\PRO\9.66\sources\flsub.c"
  4315                           ; Parameters:
  4316                           ;		f1             size:   4offs:   0	type: int 
  4317                           ;		f2             size:   4offs:   4	type: int 
  4318                           ; Auto variables:
  4319                           ;		None
  4320                           ; Return value:
  4321                           ;		type: int 
  4322                           ;		size: 4
  4323                           ; Registers used:
  4324                           ;		wreg, fsr0l, fsr0h, fsr2l, status,2, status,0
      +                          , prodl, prodh, cstack
  4325                           ; Tracked objects:
  4326                           ;		On entry : F/1
  4327                           ;		On exit  : F/1
  4328                           ;		Unchanged: FFFFFFF0/0
  4329                           ; Data sizes:
  4330                           ;		Autos:    0
  4331                           ;		Params:   8
  4332                           ;		Temp:     0
  4333                           ;		Total:    8
  4334                           ; This function calls:
  4335                           ;		___fladd
  4336                           ; This function is called by:
  4337                           ;		_measure_capacitance
  4338                           ;		_measure_inductance
  4339                           ;		___asflsub
  4340                           ; This function uses a non-reentrant model
  4341                           ; 
  4342  000000                     
  4343  000000'                    ___flsub:
  4344                           	opt stack 24
  4345                           ; BSR set to: 1
  4346  000000' 0E80               	movlw	128
  4347  000002' 1B00'              	xorwf	(?___flsub+7)& (0+255),f,b
  4348  000004' C004' F004'        	movff	?___flsub+4,?___fladd+4
  4349  000008' C005' F005'        	movff	?___flsub+5,?___fladd+5
  4350  00000C' C006' F006'        	movff	?___flsub+6,?___fladd+6
  4351  000010' C007' F007'        	movff	?___flsub+7,?___fladd+7
  4352  000014' C000' F000'        	movff	?___flsub,?___fladd
  4353  000018' C001' F001'        	movff	?___flsub+1,?___fladd+1
  4354  00001C' C002' F002'        	movff	?___flsub+2,?___fladd+2
  4355  000020' C003' F003'        	movff	?___flsub+3,?___fladd+3
  4356  000024' EC00' F000'        	call	___fladd	;wreg free
  4357  000028' C000' F000'        	movff	?___fladd,?___flsub
  4358  00002C' C001' F001'        	movff	?___fladd+1,?___flsub+1
  4359  000030' C002' F002'        	movff	?___fladd+2,?___flsub+2
  4360  000034' C003' F003'        	movff	?___fladd+3,?___flsub+3
  4361                           ; BSR set to: 1
  4362  000038' 0012               	return	
  4363  00003A'                    __end_of___flsub:
  4364                           	opt stack 0
  4365                           
  4366                           	psect	text36
  4367                           ; =============== function ___flsub ends =======
      +                          =====
  4368                           ; *************** function _frexp **************
      +                          ***
  4369                           ; Defined at:
  4370                           ;		line 255 in file "C:\Program Files (x86)\HI-T
      +                          ECH Software\PICC-18\PRO\9.66\sources\frexp.c"
  4371                           ; Parameters:
  4372                           ;		value          size:   4offs:   0	type: int 
  4373                           ;		eptr           size:   2offs:   4	type: PTR i
      +                          nt ; Largest target is 2
  4374                           ;		 -> log@exp(2), floor@expon(2), 
  4375                           ; Auto variables:
  4376                           ;		None
  4377                           ; Return value:
  4378                           ;		type: PTR int 
  4379                           ;		size: 4
  4380                           ; Registers used:
  4381                           ;		wreg, fsr0l, fsr0h, status,2, status,0
  4382                           ; Tracked objects:
  4383                           ;		On entry : F/1
  4384                           ;		On exit  : F/1
  4385                           ;		Unchanged: FFFFFFF0/0
  4386                           ; Data sizes:
  4387                           ;		Autos:    0
  4388                           ;		Params:   6
  4389                           ;		Temp:     3
  4390                           ;		Total:    9
  4391                           ; This function calls:
  4392                           ;		Nothing
  4393                           ; This function is called by:
  4394                           ;		_floor
  4395                           ;		_log
  4396                           ; This function uses a non-reentrant model
  4397                           ; 
  4398  000000                     
  4399  000000'                    _frexp:
  4400                           	opt stack 24
  4401                           ; BSR set to: 1
  4402  000000' EE00' F000'        	lfsr	0,?_frexp
  4403  000004' 50EE               	movf	postinc0,w,c
  4404  000006' 10EE               	iorwf	postinc0,w,c
  4405  000008' 10EE               	iorwf	postinc0,w,c
  4406  00000A' 10EE               	iorwf	postinc0,w,c
  4407  00000C' E10C               	bnz	l1028
  4408  00000E' C004' FFE9         	movff	?_frexp+4,fsr0l
  4409  000012' C005' FFEA         	movff	?_frexp+5,fsr0h
  4410  000016' 0E00               	movlw	0
  4411  000018' 6AEE               	clrf	postinc0,c
  4412  00001A' 6AED               	clrf	postdec0,c
  4413  00001C' 6B00'              	clrf	?_frexp& (0+255),b
  4414  00001E' 6B00'              	clrf	(?_frexp+1)& (0+255),b
  4415  000020' 6B00'              	clrf	(?_frexp+2)& (0+255),b
  4416  000022' 6B00'              	clrf	(?_frexp+3)& (0+255),b
  4417  000024' D028               	goto	l1027
  4418  000026'                    l1028:
  4419                           ; BSR set to: 1
  4420  000026' 0101               	movlb	1	; () banked
  4421  000028' 5100'              	movf	(?_frexp+3)& (0+255),w,b
  4422  00002A' 0B7F               	andlw	127
  4423  00002C' 6F00'              	movwf	??_frexp& (0+255),b
  4424  00002E' 90D8               	bcf	status,0,c
  4425  000030' 3500'              	rlcf	??_frexp& (0+255),w,b
  4426  000032' 6F00'              	movwf	(??_frexp+1)& (0+255),b
  4427  000034' 6B00'              	clrf	(??_frexp+2)& (0+255),b
  4428  000036' 3700'              	rlcf	(??_frexp+2)& (0+255),f,b
  4429  000038' C004' FFE9         	movff	?_frexp+4,fsr0l
  4430  00003C' C005' FFEA         	movff	?_frexp+5,fsr0h
  4431  000040' C001' FFEE         	movff	??_frexp+1,postinc0
  4432  000044' C002' FFED         	movff	??_frexp+2,postdec0
  4433  000048' 3500'              	rlcf	(?_frexp+2)& (0+255),w,b
  4434  00004A' 36E8               	rlcf	wreg,f,c
  4435  00004C' 0B01               	andlw	1
  4436  00004E' C004' FFE9         	movff	?_frexp+4,fsr0l
  4437  000052' C005' FFEA         	movff	?_frexp+5,fsr0h
  4438  000056' 12EE               	iorwf	postinc0,f,c
  4439  000058' 0E00               	movlw	0
  4440  00005A' 12ED               	iorwf	postdec0,f,c
  4441  00005C' C004' FFE9         	movff	?_frexp+4,fsr0l
  4442  000060' C005' FFEA         	movff	?_frexp+5,fsr0h
  4443  000064' 0E82               	movlw	130
  4444  000066' 26EE               	addwf	postinc0,f,c
  4445  000068' 0EFF               	movlw	255
  4446  00006A' 22ED               	addwfc	postdec0,f,c
  4447  00006C' 5100'              	movf	(?_frexp+3)& (0+255),w,b
  4448  00006E' 0B80               	andlw	-128
  4449  000070' 093F               	iorlw	63
  4450  000072' 6F00'              	movwf	(?_frexp+3)& (0+255),b
  4451  000074' 9F00'              	bcf	(?_frexp+2)& (0+255),7,b
  4452  000076'                    l1027:
  4453                           ; BSR set to: 1
  4454  000076' 0012               	return	
  4455  000078'                    __end_of_frexp:
  4456                           	opt stack 0
  4457                           
  4458                           	psect	text37
  4459                           ; =============== function _frexp ends =========
      +                          ===
  4460                           ; *************** function ___flmul ************
      +                          *****
  4461                           ; Defined at:
  4462                           ;		line 18 in file "C:\Program Files (x86)\HI-TE
      +                          CH Software\PICC-18\PRO\9.66\sources\flmul.c"
  4463                           ; Parameters:
  4464                           ;		f1             size:   4offs:   0	type: PTR i
      +                          nt 
  4465                           ;		f2             size:   4offs:   4	type: PTR i
      +                          nt 
  4466                           ; Auto variables:
  4467                           ;		sign1       	       	type: unsigned char 
  4468                           ;		exp1        	       	type: unsigned char 
  4469                           ;		cntr        	       	type: unsigned char 
  4470                           ;		f3          	       	type: unsigned char 
  4471                           ; Return value:
  4472                           ;		type: unsigned char 
  4473                           ;		size: 4
  4474                           ; Registers used:
  4475                           ;		wreg, fsr0l, fsr0h, fsr2l, status,2, status,0
      +                          , prodl, cstack
  4476                           ; Tracked objects:
  4477                           ;		On entry : F/1
  4478                           ;		On exit  : F/1
  4479                           ;		Unchanged: FFFFFFF0/0
  4480                           ; Data sizes:
  4481                           ;		Autos:    6
  4482                           ;		Params:   8
  4483                           ;		Temp:     0
  4484                           ;		Total:   14
  4485                           ; This function calls:
  4486                           ;		___flunpack
  4487                           ;		___flpack
  4488                           ; This function is called by:
  4489                           ;		_format_double
  4490                           ;		_measure_capacitance
  4491                           ;		_measure_inductance
  4492                           ;		_log
  4493                           ;		_log10
  4494                           ;		_pow
  4495                           ;		___asflmul
  4496                           ;		_eval_poly
  4497                           ; This function uses a non-reentrant model
  4498                           ; 
  4499  000000                     
  4500  000000'                    ___flmul:
  4501                           	opt stack 24
  4502                           ; BSR set to: 1
  4503  000000' 6B00'              	clrf	(??___flmul+2)& (0+255),b
  4504  000002' 6B00'              	clrf	(??___flmul+3)& (0+255),b
  4505  000004' 6B00'              	clrf	(??___flmul+4)& (0+255),b
  4506  000006' 6B00'              	clrf	(??___flmul+5)& (0+255),b
  4507  000008' 0E00'              	movlw	low ??___flmul
  4508  00000A' 6F00'              	movwf	(?___flunpack+2)& (0+255),b
  4509  00000C' 0E00'              	movlw	high ??___flmul
  4510  00000E' 6F00'              	movwf	(?___flunpack+3)& (0+255),b
  4511  000010' 0E00'              	movlw	low ?___flmul
  4512  000012' 6F00'              	movwf	?___flunpack& (0+255),b
  4513  000014' 0E00'              	movlw	high ?___flmul
  4514  000016' 6F00'              	movwf	(?___flunpack+1)& (0+255),b
  4515  000018' EC00' F000'        	call	___flunpack	;wreg free
  4516  00001C' 6ED9               	movwf	fsr2l,c
  4517  00001E' 0E00'              	movlw	low (??___flmul+1)
  4518  000020' 6F00'              	movwf	(?___flunpack+2)& (0+255),b
  4519  000022' 0E00'              	movlw	high (??___flmul+1)
  4520  000024' 6F00'              	movwf	(?___flunpack+3)& (0+255),b
  4521  000026' 0E00'              	movlw	low (?___flmul+4)
  4522  000028' 6F00'              	movwf	?___flunpack& (0+255),b
  4523  00002A' 0E00'              	movlw	high (?___flmul+4)
  4524  00002C' 6F00'              	movwf	(?___flunpack+1)& (0+255),b
  4525  00002E' EC00' F000'        	call	___flunpack	;wreg free
  4526  000032' 1AD9               	xorwf	fsr2l,f,c
  4527  000034' 5100'              	movf	(??___flmul+1)& (0+255),w,b
  4528  000036' E041               	bz	l1196
  4529  000038' 6700'              	tstfsz	??___flmul& (0+255),b
  4530  00003A' D001               	goto	l1187
  4531  00003C' D03E               	goto	l1196
  4532                           ; BSR set to: 1
  4533  00003E'                    l1187:
  4534                           ; BSR set to: 1
  4535  00003E' 5100'              	movf	(??___flmul+1)& (0+255),w,b
  4536  000040' 0F7B               	addlw	123
  4537  000042' 2700'              	addwf	??___flmul& (0+255),f,b
  4538  000044' 0E07               	movlw	7
  4539  000046' 6F00'              	movwf	(??___flmul+1)& (0+255),b
  4540  000048'                    l1190:
  4541                           ; BSR set to: 1
  4542  000048' A100'              	btfss	?___flmul& (0+255),0,b
  4543  00004A' D008               	goto	l1191
  4544  00004C' 5100'              	movf	(?___flmul+4)& (0+255),w,b
  4545  00004E' 2700'              	addwf	(??___flmul+2)& (0+255),f,b
  4546  000050' 5100'              	movf	(?___flmul+5)& (0+255),w,b
  4547  000052' 2300'              	addwfc	(??___flmul+3)& (0+255),f,b
  4548  000054' 5100'              	movf	(?___flmul+6)& (0+255),w,b
  4549  000056' 2300'              	addwfc	(??___flmul+4)& (0+255),f,b
  4550  000058' 5100'              	movf	(?___flmul+7)& (0+255),w,b
  4551  00005A' 2300'              	addwfc	(??___flmul+5)& (0+255),f,b
  4552  00005C'                    l1191:
  4553                           ; BSR set to: 1
  4554  00005C' 90D8               	bcf	status,0,c
  4555  00005E' 3300'              	rrcf	(?___flmul+3)& (0+255),f,b
  4556  000060' 3300'              	rrcf	(?___flmul+2)& (0+255),f,b
  4557  000062' 3300'              	rrcf	(?___flmul+1)& (0+255),f,b
  4558  000064' 3300'              	rrcf	?___flmul& (0+255),f,b
  4559  000066' 90D8               	bcf	status,0,c
  4560  000068' 3700'              	rlcf	(?___flmul+4)& (0+255),f,b
  4561  00006A' 3700'              	rlcf	(?___flmul+5)& (0+255),f,b
  4562  00006C' 3700'              	rlcf	(?___flmul+6)& (0+255),f,b
  4563  00006E' 3700'              	rlcf	(?___flmul+7)& (0+255),f,b
  4564  000070' 2F00'              	decfsz	(??___flmul+1)& (0+255),f,b
  4565  000072' D7EA               	goto	l1190
  4566                           ; BSR set to: 1
  4567  000074' 0E11               	movlw	17
  4568  000076' 6F00'              	movwf	(??___flmul+1)& (0+255),b
  4569  000078'                    l1194:
  4570                           ; BSR set to: 1
  4571  000078' A100'              	btfss	?___flmul& (0+255),0,b
  4572  00007A' D008               	goto	l1195
  4573  00007C' 5100'              	movf	(?___flmul+4)& (0+255),w,b
  4574  00007E' 2700'              	addwf	(??___flmul+2)& (0+255),f,b
  4575  000080' 5100'              	movf	(?___flmul+5)& (0+255),w,b
  4576  000082' 2300'              	addwfc	(??___flmul+3)& (0+255),f,b
  4577  000084' 5100'              	movf	(?___flmul+6)& (0+255),w,b
  4578  000086' 2300'              	addwfc	(??___flmul+4)& (0+255),f,b
  4579  000088' 5100'              	movf	(?___flmul+7)& (0+255),w,b
  4580  00008A' 2300'              	addwfc	(??___flmul+5)& (0+255),f,b
  4581  00008C'                    l1195:
  4582                           ; BSR set to: 1
  4583  00008C' 90D8               	bcf	status,0,c
  4584  00008E' 3300'              	rrcf	(?___flmul+3)& (0+255),f,b
  4585  000090' 3300'              	rrcf	(?___flmul+2)& (0+255),f,b
  4586  000092' 3300'              	rrcf	(?___flmul+1)& (0+255),f,b
  4587  000094' 3300'              	rrcf	?___flmul& (0+255),f,b
  4588  000096' 90D8               	bcf	status,0,c
  4589  000098' 3300'              	rrcf	(??___flmul+5)& (0+255),f,b
  4590  00009A' 3300'              	rrcf	(??___flmul+4)& (0+255),f,b
  4591  00009C' 3300'              	rrcf	(??___flmul+3)& (0+255),f,b
  4592  00009E' 3300'              	rrcf	(??___flmul+2)& (0+255),f,b
  4593  0000A0' 2F00'              	decfsz	(??___flmul+1)& (0+255),f,b
  4594  0000A2' D7EA               	goto	l1194
  4595                           ; BSR set to: 1
  4596  0000A4' C000' F002'        	movff	??___flmul,?___flpack+2
  4597  0000A8' 0E00'              	movlw	low (??___flmul+2)
  4598  0000AA' 6F00'              	movwf	?___flpack& (0+255),b
  4599  0000AC' 0E00'              	movlw	high (??___flmul+2)
  4600  0000AE' 6F00'              	movwf	(?___flpack+1)& (0+255),b
  4601  0000B0' EC00' F000'        	call	___flpack	;wreg free
  4602  0000B4' 50D9               	movf	fsr2l,w,c
  4603  0000B6' A4D8               	btfss	status,2,c
  4604  0000B8' 8F00'              	bsf	(??___flmul+5)& (0+255),7,b
  4605  0000BA'                    l1196:
  4606                           ; BSR set to: 1
  4607  0000BA' C002' F000'        	movff	??___flmul+2,?___flmul
  4608  0000BE' C003' F001'        	movff	??___flmul+3,?___flmul+1
  4609  0000C2' C004' F002'        	movff	??___flmul+4,?___flmul+2
  4610  0000C6' C005' F003'        	movff	??___flmul+5,?___flmul+3
  4611                           ; BSR set to: 1
  4612  0000CA' 0012               	return	
  4613  0000CC'                    __end_of___flmul:
  4614                           	opt stack 0
  4615                           
  4616                           	psect	text38
  4617                           ; =============== function ___flmul ends =======
      +                          =====
  4618                           ; *************** function ___fltol ************
      +                          *****
  4619                           ; Defined at:
  4620                           ;		line 16 in file "C:\Program Files (x86)\HI-TE
      +                          CH Software\PICC-18\PRO\9.66\sources\fltol.c"
  4621                           ; Parameters:
  4622                           ;		f1             size:   4offs:   0	type: unsig
      +                          ned char 
  4623                           ; Auto variables:
  4624                           ;		sign1       	       	type: unsigned char 
  4625                           ;		exp1        	       	type: unsigned char 
  4626                           ;		lval        	       	type: unsigned long 
  4627                           ; Return value:
  4628                           ;		type: long 
  4629                           ;		size: 4
  4630                           ; Registers used:
  4631                           ;		wreg, fsr0l, fsr0h, fsr2l, status,2, status,0
      +                          , prodl, cstack
  4632                           ; Tracked objects:
  4633                           ;		On entry : F/1
  4634                           ;		On exit  : F/1
  4635                           ;		Unchanged: FFFFFFF0/0
  4636                           ; Data sizes:
  4637                           ;		Autos:    5
  4638                           ;		Params:   4
  4639                           ;		Temp:     0
  4640                           ;		Total:    9
  4641                           ; This function calls:
  4642                           ;		___flunpack
  4643                           ; This function is called by:
  4644                           ;		_format_double
  4645                           ;		_measure_capacitance
  4646                           ;		_measure_inductance
  4647                           ;		_floor
  4648                           ;		_pow
  4649                           ;		_exp
  4650                           ; This function uses a non-reentrant model
  4651                           ; 
  4652  000000                     
  4653  000000'                    ___fltol:
  4654                           	opt stack 24
  4655                           ; BSR set to: 1
  4656  000000' 0E00'              	movlw	low ??___fltol
  4657  000002' 6F00'              	movwf	(?___flunpack+2)& (0+255),b
  4658  000004' 0E00'              	movlw	high ??___fltol
  4659  000006' 6F00'              	movwf	(?___flunpack+3)& (0+255),b
  4660  000008' 0E00'              	movlw	low ?___fltol
  4661  00000A' 6F00'              	movwf	?___flunpack& (0+255),b
  4662  00000C' 0E00'              	movlw	high ?___fltol
  4663  00000E' 6F00'              	movwf	(?___flunpack+1)& (0+255),b
  4664  000010' EC00' F000'        	call	___flunpack	;wreg free
  4665  000014' 6ED9               	movwf	fsr2l,c
  4666  000016' C000' F001'        	movff	?___fltol,??___fltol+1
  4667  00001A' C001' F002'        	movff	?___fltol+1,??___fltol+2
  4668  00001E' C002' F003'        	movff	?___fltol+2,??___fltol+3
  4669  000022' C003' F004'        	movff	?___fltol+3,??___fltol+4
  4670  000026' 0E96               	movlw	150
  4671  000028' 5F00'              	subwf	??___fltol& (0+255),f,b
  4672  00002A' AF00'              	btfss	??___fltol& (0+255),7,b
  4673  00002C' D00C               	goto	l1220
  4674  00002E' 5100'              	movf	??___fltol& (0+255),w,b
  4675  000030' 0A80               	xorlw	128
  4676  000032' 0F97               	addlw	151
  4677  000034' E30B               	bnc	u3760
  4678  000036'                    l1224:
  4679                           ; BSR set to: 1
  4680  000036' 90D8               	bcf	status,0,c
  4681  000038' 3300'              	rrcf	(??___fltol+4)& (0+255),f,b
  4682  00003A' 3300'              	rrcf	(??___fltol+3)& (0+255),f,b
  4683  00003C' 3300'              	rrcf	(??___fltol+2)& (0+255),f,b
  4684  00003E' 3300'              	rrcf	(??___fltol+1)& (0+255),f,b
  4685  000040' 3F00'              	incfsz	??___fltol& (0+255),f,b
  4686  000042' D7F9               	goto	l1224
  4687                           ; BSR set to: 1
  4688  000044' D010               	goto	l1225
  4689  000046'                    l1220:
  4690                           ; BSR set to: 1
  4691  000046' 0E1F               	movlw	31
  4692  000048' 6500'              	cpfsgt	??___fltol& (0+255),b
  4693  00004A' D00B               	goto	l1227
  4694  00004C'                    u3760:
  4695  00004C' 6B00'              	clrf	?___fltol& (0+255),b
  4696  00004E' 6B00'              	clrf	(?___fltol+1)& (0+255),b
  4697  000050' 6B00'              	clrf	(?___fltol+2)& (0+255),b
  4698  000052' 6B00'              	clrf	(?___fltol+3)& (0+255),b
  4699  000054' D01A               	goto	l1219
  4700                           ; BSR set to: 1
  4701  000056'                    l1228:
  4702                           ; BSR set to: 1
  4703  000056' 90D8               	bcf	status,0,c
  4704  000058' 3700'              	rlcf	(??___fltol+1)& (0+255),f,b
  4705  00005A' 3700'              	rlcf	(??___fltol+2)& (0+255),f,b
  4706  00005C' 3700'              	rlcf	(??___fltol+3)& (0+255),f,b
  4707  00005E' 3700'              	rlcf	(??___fltol+4)& (0+255),f,b
  4708  000060' 0700'              	decf	??___fltol& (0+255),f,b
  4709  000062'                    l1227:
  4710                           ; BSR set to: 1
  4711  000062' 6700'              	tstfsz	??___fltol& (0+255),b
  4712  000064' D7F8               	goto	l1228
  4713                           ; BSR set to: 1
  4714  000066'                    l1225:
  4715                           ; BSR set to: 1
  4716  000066' 50D9               	movf	fsr2l,w,c
  4717  000068' E008               	bz	l1230
  4718  00006A' 1F00'              	comf	(??___fltol+4)& (0+255),f,b
  4719  00006C' 1F00'              	comf	(??___fltol+3)& (0+255),f,b
  4720  00006E' 1F00'              	comf	(??___fltol+2)& (0+255),f,b
  4721  000070' 6D00'              	negf	(??___fltol+1)& (0+255),b
  4722  000072' 0E00               	movlw	0
  4723  000074' 2300'              	addwfc	(??___fltol+2)& (0+255),f,b
  4724  000076' 2300'              	addwfc	(??___fltol+3)& (0+255),f,b
  4725  000078' 2300'              	addwfc	(??___fltol+4)& (0+255),f,b
  4726  00007A'                    l1230:
  4727                           ; BSR set to: 1
  4728  00007A' C001' F000'        	movff	??___fltol+1,?___fltol
  4729  00007E' C002' F001'        	movff	??___fltol+2,?___fltol+1
  4730  000082' C003' F002'        	movff	??___fltol+3,?___fltol+2
  4731  000086' C004' F003'        	movff	??___fltol+4,?___fltol+3
  4732  00008A'                    l1219:
  4733                           ; BSR set to: 1
  4734  00008A' 0012               	return	
  4735  00008C'                    __end_of___fltol:
  4736                           	opt stack 0
  4737                           
  4738                           	psect	text39
  4739                           ; =============== function ___fltol ends =======
      +                          =====
  4740                           ; *************** function ___altofl ***********
      +                          ******
  4741                           ; Defined at:
  4742                           ;		line 16 in file "C:\Program Files (x86)\HI-TE
      +                          CH Software\PICC-18\PRO\9.66\sources\altofl.c"
  4743                           ; Parameters:
  4744                           ;		c              size:   4offs:   0	type: long 
  4745                           ; Auto variables:
  4746                           ;		exp         	       	type: unsigned char 
  4747                           ;		sign        	       	type: unsigned char 
  4748                           ;		f1          	       	type: unsigned char 
  4749                           ; Return value:
  4750                           ;		type: unsigned char 
  4751                           ;		size: 4
  4752                           ; Registers used:
  4753                           ;		wreg, fsr0l, fsr0h, fsr2l, status,2, status,0
      +                          , prodl, cstack
  4754                           ; Tracked objects:
  4755                           ;		On entry : F/1
  4756                           ;		On exit  : F/1
  4757                           ;		Unchanged: FFFFFFF0/0
  4758                           ; Data sizes:
  4759                           ;		Autos:    4
  4760                           ;		Params:   4
  4761                           ;		Temp:     0
  4762                           ;		Total:    8
  4763                           ; This function calls:
  4764                           ;		___flpack
  4765                           ;		___flneg
  4766                           ; This function is called by:
  4767                           ;		_floor
  4768                           ; This function uses a non-reentrant model
  4769                           ; 
  4770  000000                     
  4771  000000'                    ___altofl:
  4772                           	opt stack 24
  4773                           ; BSR set to: 1
  4774  000000' 5100'              	movf	(?___altofl+3)& (0+255),w,b
  4775  000002' 1100'              	iorwf	?___altofl& (0+255),w,b
  4776  000004' 1100'              	iorwf	(?___altofl+1)& (0+255),w,b
  4777  000006' 1100'              	iorwf	(?___altofl+2)& (0+255),w,b
  4778  000008' E105               	bnz	l1086
  4779  00000A' 6B00'              	clrf	?___altofl& (0+255),b
  4780  00000C' 6B00'              	clrf	(?___altofl+1)& (0+255),b
  4781  00000E' 6B00'              	clrf	(?___altofl+2)& (0+255),b
  4782  000010' 6B00'              	clrf	(?___altofl+3)& (0+255),b
  4783  000012' D03B               	goto	l1085
  4784  000014'                    l1086:
  4785                           ; BSR set to: 1
  4786  000014' 6AD9               	clrf	fsr2l,c
  4787  000016' AF00'              	btfss	(?___altofl+3)& (0+255),7,b
  4788  000018' D00A               	goto	l1087
  4789  00001A' 1F00'              	comf	(?___altofl+3)& (0+255),f,b
  4790  00001C' 1F00'              	comf	(?___altofl+2)& (0+255),f,b
  4791  00001E' 1F00'              	comf	(?___altofl+1)& (0+255),f,b
  4792  000020' 6D00'              	negf	?___altofl& (0+255),b
  4793  000022' 0E00               	movlw	0
  4794  000024' 2300'              	addwfc	(?___altofl+1)& (0+255),f,b
  4795  000026' 2300'              	addwfc	(?___altofl+2)& (0+255),f,b
  4796  000028' 2300'              	addwfc	(?___altofl+3)& (0+255),f,b
  4797  00002A' 0E01               	movlw	1
  4798  00002C' 6ED9               	movwf	fsr2l,c
  4799  00002E'                    l1087:
  4800                           ; BSR set to: 1
  4801  00002E' 0E96               	movlw	150
  4802  000030' 6EF3               	movwf	prodl,c
  4803  000032' C000' F000'        	movff	?___altofl,??___altofl
  4804  000036' C001' F001'        	movff	?___altofl+1,??___altofl+1
  4805  00003A' C002' F002'        	movff	?___altofl+2,??___altofl+2
  4806  00003E' C003' F003'        	movff	?___altofl+3,??___altofl+3
  4807  000042' CFF3 F002'         	movff	prodl,?___flpack+2
  4808  000046' 0E00'              	movlw	low ??___altofl
  4809  000048' 6F00'              	movwf	?___flpack& (0+255),b
  4810  00004A' 0E00'              	movlw	high ??___altofl
  4811  00004C' 6F00'              	movwf	(?___flpack+1)& (0+255),b
  4812  00004E' EC00' F000'        	call	___flpack	;wreg free
  4813  000052' 50D9               	movf	fsr2l,w,c
  4814  000054' E012               	bz	l1088
  4815  000056' C000' F000'        	movff	??___altofl,?___flneg
  4816  00005A' C001' F001'        	movff	??___altofl+1,?___flneg+1
  4817  00005E' C002' F002'        	movff	??___altofl+2,?___flneg+2
  4818  000062' C003' F003'        	movff	??___altofl+3,?___flneg+3
  4819  000066' EC00' F000'        	call	___flneg	;wreg free
  4820  00006A' C000' F000'        	movff	?___flneg,??___altofl
  4821  00006E' C001' F001'        	movff	?___flneg+1,??___altofl+1
  4822  000072' C002' F002'        	movff	?___flneg+2,??___altofl+2
  4823  000076' C003' F003'        	movff	?___flneg+3,??___altofl+3
  4824  00007A'                    l1088:
  4825                           ; BSR set to: 1
  4826  00007A' C000' F000'        	movff	??___altofl,?___altofl
  4827  00007E' C001' F001'        	movff	??___altofl+1,?___altofl+1
  4828  000082' C002' F002'        	movff	??___altofl+2,?___altofl+2
  4829  000086' C003' F003'        	movff	??___altofl+3,?___altofl+3
  4830  00008A'                    l1085:
  4831                           ; BSR set to: 1
  4832  00008A' 0012               	return	
  4833  00008C'                    __end_of___altofl:
  4834                           	opt stack 0
  4835                           
  4836                           	psect	text40
  4837                           ; =============== function ___altofl ends ======
      +                          ======
  4838                           ; *************** function ___flge *************
      +                          ****
  4839                           ; Defined at:
  4840                           ;		line 5 in file "C:\Program Files (x86)\HI-TEC
      +                          H Software\PICC-18\PRO\9.66\sources\flge.c"
  4841                           ; Parameters:
  4842                           ;		ff1            size:   4offs:   0	type: unsig
      +                          ned char 
  4843                           ;		ff2            size:   4offs:   4	type: unsig
      +                          ned char 
  4844                           ; Auto variables:
  4845                           ;		None
  4846                           ; Return value:
  4847                           ;		type: bit 
  4848                           ;		size: 0
  4849                           ; Registers used:
  4850                           ;		wreg, status,2, status,0
  4851                           ; Tracked objects:
  4852                           ;		On entry : E/1
  4853                           ;		On exit  : F/1
  4854                           ;		Unchanged: FFFFFFF0/0
  4855                           ; Data sizes:
  4856                           ;		Autos:    0
  4857                           ;		Params:   8
  4858                           ;		Temp:     0
  4859                           ;		Total:    8
  4860                           ; This function calls:
  4861                           ;		Nothing
  4862                           ; This function is called by:
  4863                           ;		_format_double
  4864                           ;		_measure_capacitance
  4865                           ;		_measure_inductance
  4866                           ;		_floor
  4867                           ;		_pow
  4868                           ;		_exp
  4869                           ; This function uses a non-reentrant model
  4870                           ; 
  4871  000000                     
  4872  000000'                    ___flge:
  4873                           	opt stack 24
  4874                           ; BSR set to: ?
  4875  000000' 0101               	movlb	1	; () banked
  4876  000002' AF00'              	btfss	(?___flge+3)& (0+255),7,b
  4877  000004' D009               	goto	l1382
  4878  000006' 6D00'              	negf	?___flge& (0+255),b
  4879  000008' 1F00'              	comf	(?___flge+1)& (0+255),f,b
  4880  00000A' B0D8               	btfsc	status,0,c
  4881  00000C' 2B00'              	incf	(?___flge+1)& (0+255),f,b
  4882  00000E' 1F00'              	comf	(?___flge+2)& (0+255),f,b
  4883  000010' B0D8               	btfsc	status,0,c
  4884  000012' 2B00'              	incf	(?___flge+2)& (0+255),f,b
  4885  000014' 0E80               	movlw	128
  4886  000016' 5700'              	subfwb	(?___flge+3)& (0+255),f,b
  4887  000018'                    l1382:
  4888                           ; BSR set to: 1
  4889  000018' AF00'              	btfss	(?___flge+7)& (0+255),7,b
  4890  00001A' D009               	goto	l1383
  4891  00001C' 6D00'              	negf	(?___flge+4)& (0+255),b
  4892  00001E' 1F00'              	comf	(?___flge+5)& (0+255),f,b
  4893  000020' B0D8               	btfsc	status,0,c
  4894  000022' 2B00'              	incf	(?___flge+5)& (0+255),f,b
  4895  000024' 1F00'              	comf	(?___flge+6)& (0+255),f,b
  4896  000026' B0D8               	btfsc	status,0,c
  4897  000028' 2B00'              	incf	(?___flge+6)& (0+255),f,b
  4898  00002A' 0E80               	movlw	128
  4899  00002C' 5700'              	subfwb	(?___flge+7)& (0+255),f,b
  4900  00002E'                    l1383:
  4901                           ; BSR set to: 1
  4902  00002E' 0E80               	movlw	128
  4903  000030' 1B00'              	xorwf	(?___flge+3)& (0+255),f,b
  4904  000032' 1B00'              	xorwf	(?___flge+7)& (0+255),f,b
  4905  000034' 5100'              	movf	(?___flge+4)& (0+255),w,b
  4906  000036' 5D00'              	subwf	?___flge& (0+255),w,b
  4907  000038' 5100'              	movf	(?___flge+5)& (0+255),w,b
  4908  00003A' 5900'              	subwfb	(?___flge+1)& (0+255),w,b
  4909  00003C' 5100'              	movf	(?___flge+6)& (0+255),w,b
  4910  00003E' 5900'              	subwfb	(?___flge+2)& (0+255),w,b
  4911  000040' 5100'              	movf	(?___flge+7)& (0+255),w,b
  4912  000042' 5900'              	subwfb	(?___flge+3)& (0+255),w,b
  4913                           ; BSR set to: 1
  4914  000044' 0012               	return	
  4915  000046'                    __end_of___flge:
  4916                           	opt stack 0
  4917                           
  4918                           	psect	text41
  4919                           ; =============== function ___flge ends ========
      +                          ====
  4920                           ; *************** function ___flneg ************
      +                          *****
  4921                           ; Defined at:
  4922                           ;		line 16 in file "C:\Program Files (x86)\HI-TE
      +                          CH Software\PICC-18\PRO\9.66\sources\flneg.c"
  4923                           ; Parameters:
  4924                           ;		f1             size:   4offs:   0	type: bit 
  4925                           ; Auto variables:
  4926                           ;		None
  4927                           ; Return value:
  4928                           ;		type: bit 
  4929                           ;		size: 4
  4930                           ; Registers used:
  4931                           ;		wreg, fsr0l, fsr0h, status,2, status,0
  4932                           ; Tracked objects:
  4933                           ;		On entry : F/1
  4934                           ;		On exit  : F/1
  4935                           ;		Unchanged: FFFFFFF0/0
  4936                           ; Data sizes:
  4937                           ;		Autos:    0
  4938                           ;		Params:   4
  4939                           ;		Temp:     0
  4940                           ;		Total:    4
  4941                           ; This function calls:
  4942                           ;		Nothing
  4943                           ; This function is called by:
  4944                           ;		_pow
  4945                           ;		___altofl
  4946                           ;		___awtofl
  4947                           ;		_exp
  4948                           ; This function uses a non-reentrant model
  4949                           ; 
  4950  000000                     
  4951  000000'                    ___flneg:
  4952                           	opt stack 23
  4953                           ; BSR set to: 1
  4954  000000' EE00' F000'        	lfsr	0,?___flneg
  4955  000004' 50EE               	movf	postinc0,w,c
  4956  000006' 10EE               	iorwf	postinc0,w,c
  4957  000008' 10EE               	iorwf	postinc0,w,c
  4958  00000A' 10EE               	iorwf	postinc0,w,c
  4959  00000C' E002               	bz	l1377
  4960  00000E' 0E80               	movlw	128
  4961  000010' 1B00'              	xorwf	(?___flneg+3)& (0+255),f,b
  4962  000012'                    l1377:
  4963                           ; BSR set to: 1
  4964                           ; BSR set to: 1
  4965  000012' 0012               	return	
  4966  000014'                    __end_of___flneg:
  4967                           	opt stack 0
  4968                           
  4969                           	psect	text42
  4970                           ; =============== function ___flneg ends =======
      +                          =====
  4971                           ; *************** function ___fladd ************
      +                          *****
  4972                           ; Defined at:
  4973                           ;		line 17 in file "C:\Program Files (x86)\HI-TE
      +                          CH Software\PICC-18\PRO\9.66\sources\fladd.c"
  4974                           ; Parameters:
  4975                           ;		f1             size:   4offs:   0	type: bit 
  4976                           ;		f2             size:   4offs:   4	type: bit 
  4977                           ; Auto variables:
  4978                           ;		sign2       	       	type: unsigned char 
  4979                           ;		cntr        	       	type: unsigned char 
  4980                           ;		sign1       	       	type: unsigned char 
  4981                           ;		exp2        	       	type: unsigned char 
  4982                           ;		exp1        	       	type: unsigned char 
  4983                           ; Return value:
  4984                           ;		type: unsigned char 
  4985                           ;		size: 4
  4986                           ; Registers used:
  4987                           ;		wreg, fsr0l, fsr0h, fsr2l, status,2, status,0
      +                          , prodl, prodh, cstack
  4988                           ; Tracked objects:
  4989                           ;		On entry : F/1
  4990                           ;		On exit  : F/1
  4991                           ;		Unchanged: FFFFFFF0/0
  4992                           ; Data sizes:
  4993                           ;		Autos:    2
  4994                           ;		Params:   8
  4995                           ;		Temp:     1
  4996                           ;		Total:   11
  4997                           ; This function calls:
  4998                           ;		___flunpack
  4999                           ;		___flpack
  5000                           ; This function is called by:
  5001                           ;		_floor
  5002                           ;		_log
  5003                           ;		___flsub
  5004                           ;		_eval_poly
  5005                           ; This function uses a non-reentrant model
  5006                           ; 
  5007  000000                     
  5008  000000'                    ___fladd:
  5009                           	opt stack 23
  5010                           ; BSR set to: 1
  5011                           ; BSR set to: 1
  5012  000000' 0E00'              	movlw	low (??___fladd+1)
  5013  000002' 6F00'              	movwf	(?___flunpack+2)& (0+255),b
  5014  000004' 0E00'              	movlw	high (??___fladd+1)
  5015  000006' 6F00'              	movwf	(?___flunpack+3)& (0+255),b
  5016  000008' 0E00'              	movlw	low ?___fladd
  5017  00000A' 6F00'              	movwf	?___flunpack& (0+255),b
  5018  00000C' 0E00'              	movlw	high ?___fladd
  5019  00000E' 6F00'              	movwf	(?___flunpack+1)& (0+255),b
  5020  000010' EC00' F000'        	call	___flunpack	;wreg free
  5021  000014' 6EF4               	movwf	prodh,c
  5022  000016' 6700'              	tstfsz	(??___fladd+1)& (0+255),b
  5023  000018' D009               	goto	l1151
  5024  00001A' C004' F000'        	movff	?___fladd+4,?___fladd
  5025  00001E' C005' F001'        	movff	?___fladd+5,?___fladd+1
  5026  000022' C006' F002'        	movff	?___fladd+6,?___fladd+2
  5027  000026' C007' F003'        	movff	?___fladd+7,?___fladd+3
  5028  00002A' D092               	goto	l1149
  5029  00002C'                    l1151:
  5030                           ; BSR set to: 1
  5031  00002C' 0E00'              	movlw	low ??___fladd
  5032  00002E' 6F00'              	movwf	(?___flunpack+2)& (0+255),b
  5033  000030' 0E00'              	movlw	high ??___fladd
  5034  000032' 6F00'              	movwf	(?___flunpack+3)& (0+255),b
  5035  000034' 0E00'              	movlw	low (?___fladd+4)
  5036  000036' 6F00'              	movwf	?___flunpack& (0+255),b
  5037  000038' 0E00'              	movlw	high (?___fladd+4)
  5038  00003A' 6F00'              	movwf	(?___flunpack+1)& (0+255),b
  5039  00003C' EC00' F000'        	call	___flunpack	;wreg free
  5040  000040' 6ED9               	movwf	fsr2l,c
  5041  000042' 5100'              	movf	??___fladd& (0+255),w,b
  5042  000044' E079               	bz	l1152
  5043  000046' 0E06               	movlw	6
  5044  000048' 6EE9               	movwf	fsr0l,c
  5045  00004A' 5100'              	movf	??___fladd& (0+255),w,b
  5046  00004C' 6100'              	cpfslt	(??___fladd+1)& (0+255),b
  5047  00004E' D025               	goto	l1153
  5048  000050' 5100'              	movf	(??___fladd+1)& (0+255),w,b
  5049  000052' 5D00'              	subwf	??___fladd& (0+255),w,b
  5050  000054' 6F00'              	movwf	(??___fladd+2)& (0+255),b
  5051  000056' 0E21               	movlw	33
  5052  000058' 5D00'              	subwf	(??___fladd+2)& (0+255),w,b
  5053  00005A' E309               	bnc	l1158
  5054  00005C' 6B00'              	clrf	?___fladd& (0+255),b
  5055  00005E' 6B00'              	clrf	(?___fladd+1)& (0+255),b
  5056  000060' 6B00'              	clrf	(?___fladd+2)& (0+255),b
  5057  000062' 6B00'              	clrf	(?___fladd+3)& (0+255),b
  5058  000064' C000' F001'        	movff	??___fladd,??___fladd+1
  5059  000068' CFD9 FFF4          	movff	fsr2l,prodh
  5060  00006C' D039               	goto	l1162
  5061  00006E'                    l1158:
  5062                           ; BSR set to: 1
  5063  00006E' 90D8               	bcf	status,0,c
  5064  000070' 3700'              	rlcf	(?___fladd+4)& (0+255),f,b
  5065  000072' 3700'              	rlcf	(?___fladd+5)& (0+255),f,b
  5066  000074' 3700'              	rlcf	(?___fladd+6)& (0+255),f,b
  5067  000076' 3700'              	rlcf	(?___fladd+7)& (0+255),f,b
  5068  000078' 0700'              	decf	??___fladd& (0+255),f,b
  5069  00007A' 5100'              	movf	??___fladd& (0+255),w,b
  5070  00007C' 1900'              	xorwf	(??___fladd+1)& (0+255),w,b
  5071  00007E' E009               	bz	l1159
  5072  000080' 2EE9               	decfsz	fsr0l,f,c
  5073  000082' D7F5               	goto	l1158
  5074                           ; BSR set to: 1
  5075                           ; BSR set to: 1
  5076  000084' D006               	goto	l1159
  5077  000086'                    l1160:
  5078                           ; BSR set to: 1
  5079  000086' 90D8               	bcf	status,0,c
  5080  000088' 3300'              	rrcf	(?___fladd+3)& (0+255),f,b
  5081  00008A' 3300'              	rrcf	(?___fladd+2)& (0+255),f,b
  5082  00008C' 3300'              	rrcf	(?___fladd+1)& (0+255),f,b
  5083  00008E' 3300'              	rrcf	?___fladd& (0+255),f,b
  5084  000090' 2B00'              	incf	(??___fladd+1)& (0+255),f,b
  5085  000092'                    l1159:
  5086                           ; BSR set to: 1
  5087  000092' 5100'              	movf	??___fladd& (0+255),w,b
  5088  000094' 6300'              	cpfseq	(??___fladd+1)& (0+255),b
  5089  000096' D7F7               	goto	l1160
  5090  000098' D023               	goto	l1162
  5091                           ; BSR set to: 1
  5092                           ; BSR set to: 1
  5093  00009A'                    l1153:
  5094                           ; BSR set to: 1
  5095  00009A' 5100'              	movf	(??___fladd+1)& (0+255),w,b
  5096  00009C' 1900'              	xorwf	??___fladd& (0+255),w,b
  5097  00009E' E020               	bz	l1162
  5098  0000A0' 5100'              	movf	??___fladd& (0+255),w,b
  5099  0000A2' 5D00'              	subwf	(??___fladd+1)& (0+255),w,b
  5100  0000A4' 6F00'              	movwf	(??___fladd+2)& (0+255),b
  5101  0000A6' 0E21               	movlw	33
  5102  0000A8' 5D00'              	subwf	(??___fladd+2)& (0+255),w,b
  5103  0000AA' E305               	bnc	l1168
  5104  0000AC' 6B00'              	clrf	(?___fladd+4)& (0+255),b
  5105  0000AE' 6B00'              	clrf	(?___fladd+5)& (0+255),b
  5106  0000B0' 6B00'              	clrf	(?___fladd+6)& (0+255),b
  5107  0000B2' 6B00'              	clrf	(?___fladd+7)& (0+255),b
  5108  0000B4' D015               	goto	l1162
  5109  0000B6'                    l1168:
  5110                           ; BSR set to: 1
  5111  0000B6' 90D8               	bcf	status,0,c
  5112  0000B8' 3700'              	rlcf	?___fladd& (0+255),f,b
  5113  0000BA' 3700'              	rlcf	(?___fladd+1)& (0+255),f,b
  5114  0000BC' 3700'              	rlcf	(?___fladd+2)& (0+255),f,b
  5115  0000BE' 3700'              	rlcf	(?___fladd+3)& (0+255),f,b
  5116  0000C0' 0700'              	decf	(??___fladd+1)& (0+255),f,b
  5117  0000C2' 5100'              	movf	??___fladd& (0+255),w,b
  5118  0000C4' 1900'              	xorwf	(??___fladd+1)& (0+255),w,b
  5119  0000C6' E009               	bz	l1169
  5120  0000C8' 2EE9               	decfsz	fsr0l,f,c
  5121  0000CA' D7F5               	goto	l1168
  5122                           ; BSR set to: 1
  5123                           ; BSR set to: 1
  5124  0000CC' D006               	goto	l1169
  5125  0000CE'                    l1170:
  5126                           ; BSR set to: 1
  5127  0000CE' 90D8               	bcf	status,0,c
  5128  0000D0' 3300'              	rrcf	(?___fladd+7)& (0+255),f,b
  5129  0000D2' 3300'              	rrcf	(?___fladd+6)& (0+255),f,b
  5130  0000D4' 3300'              	rrcf	(?___fladd+5)& (0+255),f,b
  5131  0000D6' 3300'              	rrcf	(?___fladd+4)& (0+255),f,b
  5132  0000D8' 2B00'              	incf	??___fladd& (0+255),f,b
  5133  0000DA'                    l1169:
  5134                           ; BSR set to: 1
  5135  0000DA' 5100'              	movf	??___fladd& (0+255),w,b
  5136  0000DC' 6300'              	cpfseq	(??___fladd+1)& (0+255),b
  5137  0000DE' D7F7               	goto	l1170
  5138                           ; BSR set to: 1
  5139                           ; BSR set to: 1
  5140                           ; BSR set to: 1
  5141  0000E0'                    l1162:
  5142                           ; BSR set to: 1
  5143  0000E0' 50F4               	movf	prodh,w,c
  5144  0000E2' E009               	bz	l1172
  5145  0000E4' 1F00'              	comf	?___fladd& (0+255),f,b
  5146  0000E6' 1F00'              	comf	(?___fladd+1)& (0+255),f,b
  5147  0000E8' 1F00'              	comf	(?___fladd+2)& (0+255),f,b
  5148  0000EA' 1F00'              	comf	(?___fladd+3)& (0+255),f,b
  5149  0000EC' 2B00'              	incf	?___fladd& (0+255),f,b
  5150  0000EE' 0E00               	movlw	0
  5151  0000F0' 2300'              	addwfc	(?___fladd+1)& (0+255),f,b
  5152  0000F2' 2300'              	addwfc	(?___fladd+2)& (0+255),f,b
  5153  0000F4' 2300'              	addwfc	(?___fladd+3)& (0+255),f,b
  5154  0000F6'                    l1172:
  5155                           ; BSR set to: 1
  5156  0000F6' 50D9               	movf	fsr2l,w,c
  5157  0000F8' E009               	bz	l1173
  5158  0000FA' 1F00'              	comf	(?___fladd+4)& (0+255),f,b
  5159  0000FC' 1F00'              	comf	(?___fladd+5)& (0+255),f,b
  5160  0000FE' 1F00'              	comf	(?___fladd+6)& (0+255),f,b
  5161  000100' 1F00'              	comf	(?___fladd+7)& (0+255),f,b
  5162  000102' 2B00'              	incf	(?___fladd+4)& (0+255),f,b
  5163  000104' 0E00               	movlw	0
  5164  000106' 2300'              	addwfc	(?___fladd+5)& (0+255),f,b
  5165  000108' 2300'              	addwfc	(?___fladd+6)& (0+255),f,b
  5166  00010A' 2300'              	addwfc	(?___fladd+7)& (0+255),f,b
  5167  00010C'                    l1173:
  5168                           ; BSR set to: 1
  5169  00010C' 6AF4               	clrf	prodh,c
  5170  00010E' 5100'              	movf	(?___fladd+4)& (0+255),w,b
  5171  000110' 2700'              	addwf	?___fladd& (0+255),f,b
  5172  000112' 5100'              	movf	(?___fladd+5)& (0+255),w,b
  5173  000114' 2300'              	addwfc	(?___fladd+1)& (0+255),f,b
  5174  000116' 5100'              	movf	(?___fladd+6)& (0+255),w,b
  5175  000118' 2300'              	addwfc	(?___fladd+2)& (0+255),f,b
  5176  00011A' 5100'              	movf	(?___fladd+7)& (0+255),w,b
  5177  00011C' 2300'              	addwfc	(?___fladd+3)& (0+255),f,b
  5178  00011E' AF00'              	btfss	(?___fladd+3)& (0+255),7,b
  5179  000120' D00B               	goto	l1152
  5180  000122' 1F00'              	comf	?___fladd& (0+255),f,b
  5181  000124' 1F00'              	comf	(?___fladd+1)& (0+255),f,b
  5182  000126' 1F00'              	comf	(?___fladd+2)& (0+255),f,b
  5183  000128' 1F00'              	comf	(?___fladd+3)& (0+255),f,b
  5184  00012A' 2B00'              	incf	?___fladd& (0+255),f,b
  5185  00012C' 0E00               	movlw	0
  5186  00012E' 2300'              	addwfc	(?___fladd+1)& (0+255),f,b
  5187  000130' 2300'              	addwfc	(?___fladd+2)& (0+255),f,b
  5188  000132' 2300'              	addwfc	(?___fladd+3)& (0+255),f,b
  5189  000134' 0E01               	movlw	1
  5190  000136' 6EF4               	movwf	prodh,c
  5191                           ; BSR set to: 1
  5192  000138'                    l1152:
  5193                           ; BSR set to: 1
  5194  000138' C001' F002'        	movff	??___fladd+1,?___flpack+2
  5195  00013C' 0E00'              	movlw	low ?___fladd
  5196  00013E' 6F00'              	movwf	?___flpack& (0+255),b
  5197  000140' 0E00'              	movlw	high ?___fladd
  5198  000142' 6F00'              	movwf	(?___flpack+1)& (0+255),b
  5199  000144' EC00' F000'        	call	___flpack	;wreg free
  5200  000148' 50F4               	movf	prodh,w,c
  5201  00014A' E002               	bz	l1175
  5202  00014C' 0E80               	movlw	128
  5203  00014E' 1B00'              	xorwf	(?___fladd+3)& (0+255),f,b
  5204  000150'                    l1175:
  5205                           ; BSR set to: 1
  5206  000150'                    l1149:
  5207                           ; BSR set to: 1
  5208  000150' 0012               	return	
  5209  000152'                    __end_of___fladd:
  5210                           	opt stack 0
  5211                           
  5212                           	psect	text43
  5213                           ; =============== function ___fladd ends =======
      +                          =====
  5214                           ; *************** function ___flpack ***********
      +                          ******
  5215                           ; Defined at:
  5216                           ;		line 36 in file "C:\Program Files (x86)\HI-TE
      +                          CH Software\PICC-18\PRO\9.66\sources\double.c"
  5217                           ; Parameters:
  5218                           ;		arg            size:   2offs:   0	type: PTR u
      +                          nsigned long ; Largest target is 4
  5219                           ;		 -> __lwtofl@f1(4), __lltofl@f1(4), __lbtofl@
      +                          f1(4), __abtofl@f1(4), 
  5220                           ;		 -> __flmul@f3(4), __fldiv@f3(4), __fladd@f1(
      +                          4), __awtofl@f1(4), 
  5221                           ;		 -> __altofl@f1(4), 
  5222                           ;		exp            size:   1offs:   2	type: unsig
      +                          ned char 
  5223                           ; Auto variables:
  5224                           ;		l_arg       	       	type: unsigned long 
  5225                           ; Return value:
  5226                           ;		type: void 
  5227                           ;		size: 0
  5228                           ; Registers used:
  5229                           ;		wreg, fsr0l, fsr0h, status,2, status,0
  5230                           ; Tracked objects:
  5231                           ;		On entry : F/1
  5232                           ;		On exit  : F/1
  5233                           ;		Unchanged: FFFFFFF0/0
  5234                           ; Data sizes:
  5235                           ;		Autos:    4
  5236                           ;		Params:   3
  5237                           ;		Temp:     4
  5238                           ;		Total:   11
  5239                           ; This function calls:
  5240                           ;		Nothing
  5241                           ; This function is called by:
  5242                           ;		___altofl
  5243                           ;		___awtofl
  5244                           ;		___fladd
  5245                           ;		___fldiv
  5246                           ;		___flmul
  5247                           ;		___lltofl
  5248                           ;		___lwtofl
  5249                           ; This function uses a non-reentrant model
  5250                           ; 
  5251  000000                     
  5252  000000'                    ___flpack:
  5253                           	opt stack 22
  5254                           ; BSR set to: 1
  5255  000000' C000' FFE9         	movff	?___flpack,fsr0l
  5256  000004' C001' FFEA         	movff	?___flpack+1,fsr0h
  5257  000008' CFEE F000'         	movff	postinc0,??___flpack
  5258  00000C' CFEE F001'         	movff	postinc0,??___flpack+1
  5259  000010' CFEE F002'         	movff	postinc0,??___flpack+2
  5260  000014' CFEE F003'         	movff	postinc0,??___flpack+3
  5261  000018' 5100'              	movf	(?___flpack+2)& (0+255),w,b
  5262  00001A' E005               	bz	l600000744
  5263  00001C' 5100'              	movf	(??___flpack+3)& (0+255),w,b
  5264  00001E' 1100'              	iorwf	??___flpack& (0+255),w,b
  5265  000020' 1100'              	iorwf	(??___flpack+1)& (0+255),w,b
  5266  000022' 1100'              	iorwf	(??___flpack+2)& (0+255),w,b
  5267  000024' E110               	bnz	l1139
  5268  000026'                    l600000744:
  5269                           ; BSR set to: 1
  5270  000026' C000' FFE9         	movff	?___flpack,fsr0l
  5271  00002A' C001' FFEA         	movff	?___flpack+1,fsr0h
  5272  00002E' 0E00               	movlw	0
  5273  000030' 6AEE               	clrf	postinc0,c
  5274  000032' 6AEE               	clrf	postinc0,c
  5275  000034' 6AEE               	clrf	postinc0,c
  5276  000036' 6AED               	clrf	postdec0,c
  5277  000038' D054               	goto	l1137
  5278                           ; BSR set to: 1
  5279  00003A'                    l1140:
  5280                           ; BSR set to: 1
  5281  00003A' 2B00'              	incf	(?___flpack+2)& (0+255),f,b
  5282  00003C' 90D8               	bcf	status,0,c
  5283  00003E' 3300'              	rrcf	(??___flpack+3)& (0+255),f,b
  5284  000040' 3300'              	rrcf	(??___flpack+2)& (0+255),f,b
  5285  000042' 3300'              	rrcf	(??___flpack+1)& (0+255),f,b
  5286  000044' 3300'              	rrcf	??___flpack& (0+255),f,b
  5287  000046'                    l1139:
  5288                           ; BSR set to: 1
  5289  000046' 6B00'              	clrf	(??___flpack+4)& (0+255),b
  5290  000048' 6B00'              	clrf	(??___flpack+5)& (0+255),b
  5291  00004A' 6B00'              	clrf	(??___flpack+6)& (0+255),b
  5292  00004C' 0EFE               	movlw	254
  5293  00004E' 1500'              	andwf	(??___flpack+3)& (0+255),w,b
  5294  000050' 6F00'              	movwf	(??___flpack+7)& (0+255),b
  5295  000052' 5100'              	movf	(??___flpack+7)& (0+255),w,b
  5296  000054' 1100'              	iorwf	(??___flpack+4)& (0+255),w,b
  5297  000056' 1100'              	iorwf	(??___flpack+5)& (0+255),w,b
  5298  000058' 1100'              	iorwf	(??___flpack+6)& (0+255),w,b
  5299  00005A' E00C               	bz	l1142
  5300  00005C' D7EE               	goto	l1140
  5301                           ; BSR set to: 1
  5302  00005E'                    l1143:
  5303                           ; BSR set to: 1
  5304  00005E' 2B00'              	incf	(?___flpack+2)& (0+255),f,b
  5305  000060' 2B00'              	incf	??___flpack& (0+255),f,b
  5306  000062' 0E00               	movlw	0
  5307  000064' 2300'              	addwfc	(??___flpack+1)& (0+255),f,b
  5308  000066' 2300'              	addwfc	(??___flpack+2)& (0+255),f,b
  5309  000068' 2300'              	addwfc	(??___flpack+3)& (0+255),f,b
  5310  00006A' 90D8               	bcf	status,0,c
  5311  00006C' 3300'              	rrcf	(??___flpack+3)& (0+255),f,b
  5312  00006E' 3300'              	rrcf	(??___flpack+2)& (0+255),f,b
  5313  000070' 3300'              	rrcf	(??___flpack+1)& (0+255),f,b
  5314  000072' 3300'              	rrcf	??___flpack& (0+255),f,b
  5315  000074'                    l1142:
  5316                           ; BSR set to: 1
  5317  000074' 6B00'              	clrf	(??___flpack+4)& (0+255),b
  5318  000076' 6B00'              	clrf	(??___flpack+5)& (0+255),b
  5319  000078' 6B00'              	clrf	(??___flpack+6)& (0+255),b
  5320  00007A' 5100'              	movf	(??___flpack+3)& (0+255),w,b
  5321  00007C' 6F00'              	movwf	(??___flpack+7)& (0+255),b
  5322  00007E' 5100'              	movf	(??___flpack+7)& (0+255),w,b
  5323  000080' 1100'              	iorwf	(??___flpack+4)& (0+255),w,b
  5324  000082' 1100'              	iorwf	(??___flpack+5)& (0+255),w,b
  5325  000084' 1100'              	iorwf	(??___flpack+6)& (0+255),w,b
  5326  000086' E007               	bz	l1145
  5327  000088' D7EA               	goto	l1143
  5328                           ; BSR set to: 1
  5329  00008A'                    l1146:
  5330                           ; BSR set to: 1
  5331  00008A' 0700'              	decf	(?___flpack+2)& (0+255),f,b
  5332  00008C' 90D8               	bcf	status,0,c
  5333  00008E' 3700'              	rlcf	??___flpack& (0+255),f,b
  5334  000090' 3700'              	rlcf	(??___flpack+1)& (0+255),f,b
  5335  000092' 3700'              	rlcf	(??___flpack+2)& (0+255),f,b
  5336  000094' 3700'              	rlcf	(??___flpack+3)& (0+255),f,b
  5337  000096'                    l1145:
  5338                           ; BSR set to: 1
  5339  000096' AF00'              	btfss	(??___flpack+2)& (0+255),7,b
  5340  000098' D7F8               	goto	l1146
  5341                           ; BSR set to: 1
  5342  00009A' B100'              	btfsc	(?___flpack+2)& (0+255),0,b
  5343  00009C' D002               	goto	l1148
  5344  00009E' 0E7F               	movlw	127
  5345  0000A0' 1700'              	andwf	(??___flpack+2)& (0+255),f,b
  5346  0000A2'                    l1148:
  5347                           ; BSR set to: 1
  5348  0000A2' 90D8               	bcf	status,0,c
  5349  0000A4' 3300'              	rrcf	(?___flpack+2)& (0+255),f,b
  5350  0000A6' C002' F004'        	movff	?___flpack+2,??___flpack+4
  5351  0000AA' 6B00'              	clrf	(??___flpack+5)& (0+255),b
  5352  0000AC' 6B00'              	clrf	(??___flpack+6)& (0+255),b
  5353  0000AE' 6B00'              	clrf	(??___flpack+7)& (0+255),b
  5354  0000B0' C004' F007'        	movff	??___flpack+4,??___flpack+7
  5355  0000B4' 6B00'              	clrf	(??___flpack+6)& (0+255),b
  5356  0000B6' 6B00'              	clrf	(??___flpack+5)& (0+255),b
  5357  0000B8' 6B00'              	clrf	(??___flpack+4)& (0+255),b
  5358  0000BA' 5100'              	movf	(??___flpack+4)& (0+255),w,b
  5359  0000BC' 1300'              	iorwf	??___flpack& (0+255),f,b
  5360  0000BE' 5100'              	movf	(??___flpack+5)& (0+255),w,b
  5361  0000C0' 1300'              	iorwf	(??___flpack+1)& (0+255),f,b
  5362  0000C2' 5100'              	movf	(??___flpack+6)& (0+255),w,b
  5363  0000C4' 1300'              	iorwf	(??___flpack+2)& (0+255),f,b
  5364  0000C6' 5100'              	movf	(??___flpack+7)& (0+255),w,b
  5365  0000C8' 1300'              	iorwf	(??___flpack+3)& (0+255),f,b
  5366  0000CA' C000' FFE9         	movff	?___flpack,fsr0l
  5367  0000CE' C001' FFEA         	movff	?___flpack+1,fsr0h
  5368  0000D2' C000' FFEE         	movff	??___flpack,postinc0
  5369  0000D6' C001' FFEE         	movff	??___flpack+1,postinc0
  5370  0000DA' C002' FFEE         	movff	??___flpack+2,postinc0
  5371  0000DE' C003' FFEE         	movff	??___flpack+3,postinc0
  5372  0000E2'                    l1137:
  5373                           ; BSR set to: 1
  5374  0000E2' 0012               	return	
  5375  0000E4'                    __end_of___flpack:
  5376                           	opt stack 0
  5377                           
  5378                           	psect	text44
  5379                           ; =============== function ___flpack ends ======
      +                          ======
  5380                           ; *************** function ___flunpack *********
      +                          ********
  5381                           ; Defined at:
  5382                           ;		line 13 in file "C:\Program Files (x86)\HI-TE
      +                          CH Software\PICC-18\PRO\9.66\sources\double.c"
  5383                           ; Parameters:
  5384                           ;		arg            size:   2offs:   0	type: PTR u
      +                          nsigned long ; Largest target is 4
  5385                           ;		 -> __fltol@f1(4), __flmul@f2(4), __flmul@f1(
      +                          4), __fldiv@f2(4), 
  5386                           ;		 -> __fldiv@f1(4), __fladd@f2(4), __fladd@f1(
      +                          4), 
  5387                           ;		exp            size:   2offs:   2	type: PTR u
      +                          nsigned char ; Largest target is 1
  5388                           ;		 -> __fltol@exp1(1), __flmul@cntr(1), __flmul
      +                          @exp1(1), __fldiv@exp2(1), 
  5389                           ;		 -> __fldiv@exp1(1), __fladd@exp2(1), __fladd
      +                          @exp1(1), 
  5390                           ; Auto variables:
  5391                           ;		sign        	       	type: unsigned char 
  5392                           ;		l_arg       	       	type: unsigned long 
  5393                           ; Return value:
  5394                           ;		type: unsigned char 
  5395                           ;		size: 1
  5396                           ; Registers used:
  5397                           ;		wreg, fsr0l, fsr0h, status,2, status,0, prodl
  5398                           ; Tracked objects:
  5399                           ;		On entry : F/1
  5400                           ;		On exit  : F/1
  5401                           ;		Unchanged: FFFFFFF0/0
  5402                           ; Data sizes:
  5403                           ;		Autos:    4
  5404                           ;		Params:   4
  5405                           ;		Temp:     0
  5406                           ;		Total:    8
  5407                           ; This function calls:
  5408                           ;		Nothing
  5409                           ; This function is called by:
  5410                           ;		___fladd
  5411                           ;		___fldiv
  5412                           ;		___flmul
  5413                           ;		___fltol
  5414                           ; This function uses a non-reentrant model
  5415                           ; 
  5416  000000                     
  5417  000000'                    ___flunpack:
  5418                           	opt stack 22
  5419                           ; BSR set to: 1
  5420  000000' C000' FFE9         	movff	?___flunpack,fsr0l
  5421  000004' C001' FFEA         	movff	?___flunpack+1,fsr0h
  5422  000008' CFEE F000'         	movff	postinc0,??___flunpack
  5423  00000C' CFEE F001'         	movff	postinc0,??___flunpack+1
  5424  000010' CFEE F002'         	movff	postinc0,??___flunpack+2
  5425  000014' CFEE F003'         	movff	postinc0,??___flunpack+3
  5426  000018' 0101               	movlb	1	; () banked
  5427  00001A' 3500'              	rlcf	(??___flunpack+2)& (0+255),w,b
  5428  00001C' 3500'              	rlcf	(??___flunpack+3)& (0+255),w,b
  5429  00001E' 6EF3               	movwf	prodl,c
  5430  000020' C002' FFE9         	movff	?___flunpack+2,fsr0l
  5431  000024' C003' FFEA         	movff	?___flunpack+3,fsr0h
  5432  000028' CFF3 FFEF          	movff	prodl,indf0
  5433  00002C' 66F3               	tstfsz	prodl,c
  5434  00002E' D005               	goto	l1134
  5435  000030' 6B00'              	clrf	??___flunpack& (0+255),b
  5436  000032' 6B00'              	clrf	(??___flunpack+1)& (0+255),b
  5437  000034' 6B00'              	clrf	(??___flunpack+2)& (0+255),b
  5438  000036' 6B00'              	clrf	(??___flunpack+3)& (0+255),b
  5439  000038' D005               	goto	l1135
  5440  00003A'                    l1134:
  5441                           ; BSR set to: 1
  5442  00003A' 6AF3               	clrf	prodl,c
  5443  00003C' 8F00'              	bsf	(??___flunpack+2)& (0+255),7,b
  5444  00003E' BF00'              	btfsc	(??___flunpack+3)& (0+255),7,b
  5445  000040' 2AF3               	incf	prodl,f,c
  5446                           ; BSR set to: 1
  5447  000042' 6B00'              	clrf	(??___flunpack+3)& (0+255),b
  5448  000044'                    l1135:
  5449                           ; BSR set to: 1
  5450  000044' C000' FFE9         	movff	?___flunpack,fsr0l
  5451  000048' C001' FFEA         	movff	?___flunpack+1,fsr0h
  5452  00004C' C000' FFEE         	movff	??___flunpack,postinc0
  5453  000050' C001' FFEE         	movff	??___flunpack+1,postinc0
  5454  000054' C002' FFEE         	movff	??___flunpack+2,postinc0
  5455  000058' C003' FFEE         	movff	??___flunpack+3,postinc0
  5456  00005C' 50F3               	movf	prodl,w,c
  5457                           ; BSR set to: 1
  5458  00005E' 0012               	return	
  5459  000060'                    __end_of___flunpack:
  5460                           	opt stack 0
  5461                           
  5462                           	psect	text45
  5463                           ; =============== function ___flunpack ends ====
      +                          ========
  5464                           ; *************** function _isr ****************
      +                          *
  5465                           ; Defined at:
  5466                           ;		line 79 in file "../../../src/LC-meter.c"
  5467                           ; Parameters:
  5468                           ;		None
  5469                           ; Auto variables:
  5470                           ;		None
  5471                           ; Return value:
  5472                           ;		type: int 
  5473                           ;		size: 2
  5474                           ; Registers used:
  5475                           ;		wreg, fsr0l, fsr0h, status,2, status,0
  5476                           ; Tracked objects:
  5477                           ;		On entry : 0/0
  5478                           ;		On exit  : 0/0
  5479                           ;		Unchanged: FFFFFFF0/0
  5480                           ; Data sizes:
  5481                           ;		Autos:    0
  5482                           ;		Params:   0
  5483                           ;		Temp:     2
  5484                           ;		Total:    2
  5485                           ; This function calls:
  5486                           ;		Nothing
  5487                           ; This function is called by:
  5488                           ;		Interrupt level 2
  5489                           ; This function uses a non-reentrant model
  5490                           ; 
  5491  000000                     
  5492                           ;LC-meter.c: 60: double F1, F2, F3, CCal;
  5493                           ;LC-meter.c: 61: void main();
  5494                           ;LC-meter.c: 62: void loop();
  5495                           ;LC-meter.c: 63: void testloop();
  5496                           ;LC-meter.c: 64: void initialize();
  5497                           ;LC-meter.c: 65: unsigned short int measure_freq
      +                          ();
  5498                           ;LC-meter.c: 66: void calibrate();
  5499                           ;LC-meter.c: 67: void measure_capacitance();
  5500                           ;LC-meter.c: 68: void measure_inductance();
  5501                           ;LC-meter.c: 69: unsigned long int milliseconds(
      +                          );
  5502                           ;LC-meter.c: 70: void delay10ms(unsigned short i
      +                          nt period_10ms);
  5503                           ;LC-meter.c: 72: void put_str(const char*);
  5504                           ;LC-meter.c: 74: void put_number(void (*putchar)
      +                          (char), unsigned short int n, unsigned char base
      +                          , signed char pad );
  5505  000000'                    _isr:
  5506                           	opt stack 0
  5507                           ; BSR set to: ?
  5508  000000' 0006               	pop		; remove dummy address from shadow registe
      +                          r refresh
  5509                           ;LC-meter.c: 81: if(TMR2IF) {
  5510  000002' A29E               	btfss	3998,1,c	;volatile
  5511  000004' D033               	goto	i2l959
  5512                           ;LC-meter.c: 83: bres += 256;
  5513  000006' 2A07               	incf	7,f,c	;volatile
  5514                           ;LC-meter.c: 85: if(bres >= 5000) {
  5515  000008' 0E88               	movlw	136
  5516  00000A' 5C06               	subwf	6,w,c	;volatile
  5517  00000C' 0E13               	movlw	19
  5518  00000E' 5807               	subwfb	7,w,c	;volatile
  5519  000010' E32C               	bnc	i2l960
  5520                           ;LC-meter.c: 86: bres -= 5000;
  5521  000012' 0E88               	movlw	136
  5522  000014' 5E06               	subwf	6,f,c	;volatile
  5523  000016' 0E13               	movlw	19
  5524  000018' 5A07               	subwfb	7,f,c	;volatile
  5525                           ;LC-meter.c: 87: msecpart++;
  5526  00001A' 4A04               	infsnz	4,f,c	;volatile
  5527  00001C' 2A05               	incf	5,f,c	;volatile
  5528                           ;LC-meter.c: 88: msecs++;
  5529  00001E' 2A34               	incf	52,f,c	;volatile
  5530  000020' 0E00               	movlw	0
  5531  000022' 2235               	addwfc	53,f,c	;volatile
  5532  000024' 2236               	addwfc	54,f,c	;volatile
  5533  000026' 2237               	addwfc	55,f,c	;volatile
  5534                           ;LC-meter.c: 90: LATC3 = (((blink > 200)) == 0);
  5535  000028' 0EC9               	movlw	201
  5536  00002A' 5C38               	subwf	56,w,c
  5537  00002C' 0E00               	movlw	0
  5538  00002E' 5839               	subwfb	57,w,c
  5539  000030' E202               	bc	i2u4040
  5540  000032' 868B               	bsf	3979,3,c	;volatile
  5541  000034' D001               	goto	i2u4055
  5542  000036'                    i2u4040:
  5543  000036' 968B               	bcf	3979,3,c	;volatile
  5544  000038'                    i2u4055:
  5545                           ;LC-meter.c: 91: if(blink >= 400)
  5546  000038' 0E90               	movlw	144
  5547  00003A' 5C38               	subwf	56,w,c
  5548  00003C' 0E01               	movlw	1
  5549  00003E' 5839               	subwfb	57,w,c
  5550  000040' E304               	bnc	i2l961
  5551                           ;LC-meter.c: 92: blink -= 400;
  5552  000042' 0E90               	movlw	144
  5553  000044' 5E38               	subwf	56,f,c
  5554  000046' 0E01               	movlw	1
  5555  000048' 5A39               	subwfb	57,f,c
  5556  00004A'                    i2l961:
  5557                           ; BSR set to: ?
  5558                           ;LC-meter.c: 93: ++blink;
  5559  00004A' 4A38               	infsnz	56,f,c
  5560  00004C' 2A39               	incf	57,f,c
  5561                           ;LC-meter.c: 96: if(msecpart >= 1000) {
  5562  00004E' 0EE8               	movlw	232
  5563  000050' 5C04               	subwf	4,w,c	;volatile
  5564  000052' 0E03               	movlw	3
  5565  000054' 5805               	subwfb	5,w,c	;volatile
  5566  000056' E309               	bnc	i2l960
  5567                           ;LC-meter.c: 98: seconds++;
  5568  000058' 2A3F               	incf	63,f,c	;volatile
  5569  00005A' 0E00               	movlw	0
  5570  00005C' 2240               	addwfc	64,f,c	;volatile
  5571  00005E' 2241               	addwfc	65,f,c	;volatile
  5572  000060' 2242               	addwfc	66,f,c	;volatile
  5573                           ;LC-meter.c: 99: msecpart -= 1000;
  5574  000062' 0EE8               	movlw	232
  5575  000064' 5E04               	subwf	4,f,c	;volatile
  5576  000066' 0E03               	movlw	3
  5577  000068' 5A05               	subwfb	5,f,c	;volatile
  5578                           ; BSR set to: ?
  5579  00006A'                    i2l960:
  5580                           ; BSR set to: ?
  5581                           ;LC-meter.c: 100: }
  5582                           ;LC-meter.c: 101: }
  5583                           ;LC-meter.c: 103: TMR2IF = 0;
  5584  00006A' 929E               	bcf	3998,1,c	;volatile
  5585  00006C'                    i2l959:
  5586                           ; BSR set to: ?
  5587                           ;LC-meter.c: 104: }
  5588                           ;LC-meter.c: 106: if(RCIF) { rxfifo[rxiptr] = RC
      +                          REG; ser_tmp = (rxiptr + 1) & ((unsigned char)16
      +                           - 1); if(ser_tmp != rxoptr) rxiptr = ser_tmp; }
      +                          ; if(TXIF && TXIE) { TXREG = txfifo[txoptr]; ++t
      +                          xoptr; txoptr &= ((unsigned char)16 - 1); if(txo
      +                          ptr == txiptr) { TXIE = 0; }
  5589  00006C' AA9E               	btfss	3998,5,c	;volatile
  5590  00006E' D00E               	goto	i2l963
  5591  000070' 503B               	movf	59,w,c	;volatile
  5592  000072' 0F24               	addlw	36
  5593  000074' 6EE9               	movwf	fsr0l,c
  5594  000076' 6AEA               	clrf	fsr0h,c
  5595  000078' CFAE FFEF          	movff	4014,indf0	;volatile
  5596  00007C' 283B               	incf	59,w,c	;volatile
  5597  00007E' 0B0F               	andlw	15
  5598  000080' 6E3D               	movwf	61,c
  5599  000082' 503D               	movf	61,w,c
  5600  000084' 183E               	xorwf	62,w,c	;volatile
  5601  000086' A4D8               	btfss	status,2,c
  5602  000088' C03D F03B          	movff	61,59	;volatile
  5603                           ; BSR set to: ?
  5604  00008C'                    i2l963:
  5605                           ; BSR set to: ?
  5606  00008C' B89E               	btfsc	3998,4,c	;volatile
  5607  00008E' A89D               	btfss	3997,4,c	;volatile
  5608  000090' D00E               	goto	i2l965
  5609  000092' 503C               	movf	60,w,c	;volatile
  5610  000094' 0F14               	addlw	20
  5611  000096' 6EE9               	movwf	fsr0l,c
  5612  000098' 6AEA               	clrf	fsr0h,c
  5613  00009A' 50EF               	movf	indf0,w,c
  5614  00009C' 6EAD               	movwf	4013,c	;volatile
  5615  00009E' 2A3C               	incf	60,f,c	;volatile
  5616  0000A0' 0E0F               	movlw	15
  5617  0000A2' 163C               	andwf	60,f,c	;volatile
  5618  0000A4' 503A               	movf	58,w,c	;volatile
  5619  0000A6' 623C               	cpfseq	60,c	;volatile
  5620  0000A8' D001               	goto	i2l966
  5621  0000AA' 989D               	bcf	3997,4,c	;volatile
  5622  0000AC'                    i2l966:
  5623                           ; BSR set to: ?
  5624  0000AC' 989E               	bcf	3998,4,c	;volatile
  5625  0000AE'                    i2l965:
  5626                           ; BSR set to: ?
  5627                           ;LC-meter.c: 111: }
  5628                           ; BSR set to: ?
  5629  0000AE' C001' FFEA         	movff	??_isr+1,fsr0h
  5630  0000B2' C000' FFE9         	movff	??_isr,fsr0l
  5631  0000B6' 0011               	retfie		f
  5632  0000B8'                    __end_of_isr:
  5633                           	opt stack 0
  5634                           
  5635                           	psect	intcode
  5636  000000'                    int_func:
  5637                           	opt stack 31
  5638  000000' CFE9 F000'         	movff	fsr0l,??_isr
  5639  000004' CFEA F001'         	movff	fsr0h,??_isr+1
  5640  000008' ED00' F000'        	call	_isr,f	;refresh shadow registers
  5641                           
  5642                           	psect	text46
  5643                           ; =============== function _isr ends ===========
      +                          =
  5644                           ;	FNARG	___flmul,_frexp
  5645                           ;	FNARG	___flmul,___awtofl
  5646                           ;	FNARG	___flmul,___flneg
  5647                           ;	FNARG	___flmul,___flsub
  5648                           ;	FNARG	___flmul,___fldiv
  5649                           ;	FNARG	_ldexp,_eval_poly
  5650                           ;	FNARG	_ldexp,___flpack
  5651                           ;	FNARG	_ldexp,___flunpack
  5652                           ;	FNARG	_ldexp,___fladd
  5653                           ;	FNARG	_ldexp,___flmul
  5654  000000                     	;_putchar_ptr
  5655  000000                     	;_ser_brg
  5656                           
  5657                           	psect	idata
  5658                           ;initializer for _putchar_ptr
  5659  000000' 0000'              	dw	_format_putchar& (0+65535)
  5660                           ;initializer for _ser_brg
  5661  000002' 1F                 	db	31
  5662                           
  5663                           	psect	smallconst
  5664  000000' 00                 	db	0	;reserve
  5665  000001'                    F65:
  5666                           	opt stack 0
  5667  000001' 0000               	dw	0
  5668  000003' 3F80               	dw	16256
  5669  000005' 7218               	dw	29208
  5670  000007' 3F31               	dw	16177
  5671  000009' FDF0               	dw	65008
  5672  00000B' 3E75               	dw	15989
  5673  00000D' 5847               	dw	22599
  5674  00000F' 3D63               	dw	15715
  5675  000011' 9558               	dw	38232
  5676  000013' 3C1D               	dw	15389
  5677  000015' C482               	dw	50306
  5678  000017' 3AAE               	dw	15022
  5679  000019' 78A8               	dw	30888
  5680  00001B' 3921               	dw	14625
  5681  00001D' 93EF               	dw	37871
  5682  00001F' 3780               	dw	14208
  5683  000021' 92A0               	dw	37536
  5684  000023' 35A7               	dw	13735
  5685  000025' 5646               	dw	22086
  5686  000027' 3415               	dw	13333
  5687  000029'                    F64:
  5688                           	opt stack 0
  5689  000029' 0000               	dw	0
  5690  00002B' 0000               	dw	0
  5691  00002D' FFC4               	dw	65476
  5692  00002F' 3F7F               	dw	16255
  5693  000031' EF80               	dw	61312
  5694  000033' BEFF               	dw	48895
  5695  000035' E190               	dw	57744
  5696  000037' 3EA9               	dw	16041
  5697  000039' 82EC               	dw	33516
  5698  00003B' BE76               	dw	48758
  5699  00003D' AD82               	dw	44418
  5700  00003F' 3E2B               	dw	15915
  5701  000041' 3C0E               	dw	15374
  5702  000043' BDC3               	dw	48579
  5703  000045' D187               	dw	53639
  5704  000047' 3D13               	dw	15635
  5705  000049' 7841               	dw	30785
  5706  00004B' BBD3               	dw	48083
  5707  000000                     	;_rxfifo
  5708  000000                     	;_txfifo
  5709  000000                     	;_F1
  5710  000000                     	;_F2
  5711  000000                     	;_F3
  5712  000000                     	;_msecs
  5713  000000                     	;_seconds
  5714  000000                     	;_timer1of
  5715  000000                     	;_blink
  5716  000000                     	;_rxiptr
  5717  000000                     	;_rxoptr
  5718  000000                     	;_ser_tmp
  5719  000000                     	;_txiptr
  5720  000000                     	;_txoptr
  5721  000000                     	;_CCal
  5722  000000                     
  5723  000000                     	;_bres
  5724  000000                     	;_msecpart
  5725  000000                     
  5726  000000                     
  5727  000000                     
  5728  000000                     
  5729  000000                     
  5730  000000                     
  5731  000000                     
  5732  000000                     
  5733  000000                     
  5734  000000                     
  5735  000000                     
  5736  000000                     
  5737  000000                     
  5738  000000                     
  5739  000000                     
  5740  000000                     
  5741  000000                     
  5742  000000                     
  5743  000000                     
  5744  000000                     
  5745  000000                     
  5746  000000                     
  5747  000000                     
  5748  000000                     
  5749  000000                     
  5750  000000                     
  5751  000000                     
  5752  000000                     
  5753  000000                     
  5754  000000                     
  5755  000000                     
  5756  000000                     
  5757  000000                     
  5758  000000                     
  5759  000000                     
  5760  000000                     
  5761  000000                     
  5762  000000                     
  5763  000000                     
  5764  000000                     
  5765  000000                     
  5766  000000                     
  5767  000000                     
  5768  00004D'                    STR_8:
  5769                           ; BSR set to: ?
  5770  00004D' 0D                 	db	13
  5771  00004E' 0A                 	db	10
  5772  00004F' 43                 	db	67	;'C'
  5773  000050' 43                 	db	67	;'C'
  5774  000051' 61                 	db	97	;'a'
  5775  000052' 6C                 	db	108	;'l'
  5776  000053' 3D                 	db	61	;'='
  5777  000054' 00                 	db	0
  5778  000055'                    STR_5:
  5779                           ; BSR set to: ?
  5780  000055' 0D                 	db	13
  5781  000056' 0A                 	db	10
  5782  000057' 46                 	db	70	;'F'
  5783  000058' 31                 	db	49	;'1'
  5784  000059' 3D                 	db	61	;'='
  5785  00005A' 00                 	db	0
  5786  00005B'                    STR_7:
  5787                           ; BSR set to: ?
  5788  00005B' 0D                 	db	13
  5789  00005C' 0A                 	db	10
  5790  00005D' 46                 	db	70	;'F'
  5791  00005E' 33                 	db	51	;'3'
  5792  00005F' 3D                 	db	61	;'='
  5793  000060' 00                 	db	0
  5794  000061'                    STR_6:
  5795                           ; BSR set to: ?
  5796  000061' 0D                 	db	13
  5797  000062' 0A                 	db	10
  5798  000063' 46                 	db	70	;'F'
  5799  000064' 32                 	db	50	;'2'
  5800  000065' 3D                 	db	61	;'='
  5801  000066' 00                 	db	0
  5802  000067'                    STR_1:
  5803                           ; BSR set to: ?
  5804  000067' 2E                 	db	46
  5805  000068' 2E                 	db	46
  5806  000069' 2E                 	db	46
  5807  00006A' 0D                 	db	13
  5808  00006B' 0A                 	db	10
  5809  00006C' 00                 	db	0
  5810  00006D'                    STR_10:
  5811                           ; BSR set to: ?
  5812  00006D' 43                 	db	67	;'C'
  5813  00006E' 69                 	db	105	;'i'
  5814  00006F' 6E                 	db	110	;'n'
  5815  000070' 3D                 	db	61	;'='
  5816  000071' 00                 	db	0
  5817  000072'                    STR_4:
  5818                           ; BSR set to: ?
  5819  000072' 76                 	db	118	;'v'
  5820  000073' 61                 	db	97	;'a'
  5821  000074' 72                 	db	114	;'r'
  5822  000075' 3D                 	db	61	;'='
  5823  000076' 00                 	db	0
  5824  000000                     
  5825  000000                     
  5826  000000                     
  5827  000000                     
  5828  000077' 00                 	db	0	; dummy byte at the end
  5829                           
  5830                           	psect	param1
  5831  000000                     
  5832  000000                     
  5833  000000                     
  5834  000000                     
  5835  000000                     
  5836  000000                     
  5837                           tosu	equ	0xFFF
  5838                           tosh	equ	0xFFE
  5839                           tosl	equ	0xFFD
  5840                           pclath	equ	0xFFA
  5841                           tblptru	equ	0xFF8
  5842                           tblptrh	equ	0xFF7
  5843                           tblptrl	equ	0xFF6
  5844                           tablat	equ	0xFF5
  5845                           prodh	equ	0xFF4
  5846                           prodl	equ	0xFF3
  5847                           intcon	equ	0xFF2
  5848                           intcon2	equ	0xFF1
  5849                           indf0	equ	0xFEF
  5850                           postinc0	equ	0xFEE
  5851                           postdec0	equ	0xFED
  5852                           fsr0h	equ	0xFEA
  5853                           fsr0l	equ	0xFE9
  5854                           wreg	equ	0xFE8
  5855                           fsr1l	equ	0xFE1
  5856                           fsr2l	equ	0xFD9
  5857                           status	equ	0xFD8


HI-TECH Software PICC-18 Macro Assembler V9.66 build 8870 
Symbol Table                                           Sat Aug 31 18:21:36 2019

                ___asfldiv@f1p 000000                   ___fldiv@exp1 000001  
                 ___fldiv@exp2 000000                   ___asflmul@mp 000000  
                           F64 000029                             F65 000001  
                 ___asflsub@f2 000002                             _F1 000008  
                           _F2 000010                             _F3 00000C  
          ___wmul@multiplicand 000002                  ___asflsub@f1p 000000  
                 ___flpack@arg 000000                   ___flpack@exp 000002  
                  _putchar_ptr 000047                            l381 000004  
                          l378 000004                            l760 000010  
                          l761 000090                            l762 000076  
                          l764 0000A8                            l765 0000E0  
                          l774 000030                            l777 000188  
                          l971 0000BC                            l980 000062  
                          l972 0000C0                            l981 00004A  
                          l976 00001A                            l984 000160  
                          l992 00005E                            l968 0000AC  
                          l985 00034C                            l993 00038A  
                          l986 000330                            l994 00036E  
                          _GIE 007F97                            l987 000312  
                          l995 000350                            l998 00038E  
                          _RX9 007D5E                            _TX9 007D66  
                          _exp 000000                            _log 000000  
                          _isr 000000                            _pow 000000  
                          tosl 000FFD                            wreg 000FE8  
                 ___flmul@exp1 000000                   ___flmul@cntr 000001  
                 ___fltol@exp1 000000                           l1010 00003C  
                         l1002 00003A                           l1011 000032  
                         l1012 000048                           l1013 0000D8  
                         l1021 00004C                           l1014 00015E  
                         l1022 0000D4                           l1031 000042  
                         l1023 0000AA                           l1120 00007E  
                         l1016 00001C                           l1024 000158  
                         l1033 000066                           l1121 000010  
                         l1009 0000E8                           l1122 000036  
                         l1018 000158                           l1027 000076  
                         l1123 00006E                           l1019 000030  
                         l1140 00003A                           l1220 000046  
                         l1028 000026                           l1029 000092  
                         l1134 00003A                           l1142 000074  
                         l1230 00007A                           l1135 000044  
                         l1143 00005E                           l1151 00002C  
                         l1160 000086                           l1152 000138  
                         l1224 000036                           l1145 000096  
                         l1137 0000E2                           l1153 00009A  
                         l1225 000066                           l1146 00008A  
                         l1170 0000CE                           l1162 0000E0  
                         l1139 000046                           l1227 000062  
                         l1219 00008A                           l1148 0000A2  
                         l1172 0000F6                           l1228 000056  
                         l1173 00010C                           l1149 000150  
                         l1085 00008A                           l1158 00006E  
                         l1086 000014                           l1190 000048  
                         l1182 00004E                           l1334 000048  
                         l1175 000150                           l1159 000092  
                         l1087 00002E                           l1191 00005C  
                         l1183 00007C                           l1335 000014  
                         l1168 0000B6                           l1088 00007A  
                         l1184 0000A0                           l1432 00002A  
                         l1440 0001D0                           l1169 0000DA  
                         l1441 0001A0                           l1194 000078  
                         l1178 000024                           l1354 00001C  
                         l1195 00008C                           l1187 00003E  
                         l1179 000040                           l1355 000036  
                         l1363 000018                           l1435 0001D0  
                         l1196 0000BA                           l1348 000040  
                         l1364 00002A                           l1436 00001A  
                         l1372 000004                           l1349 00000E  
                         l1357 000034                           l1437 00004C  
                         l1373 000010                           l1365 00003C  
                         l1382 000018                           l1358 00000A  
                         l1366 000010                           l1383 00002E  
                         l1439 0000A8                           l1377 000012  
                 ___fltol@lval 000001                           ?_exp 000000* 
                         ?_log 000000*                          ?_isr 000000* 
                         ?_pow 000000*                          STR_1 000067  
                         STR_3 000003                           STR_4 000072  
                         STR_5 000055                           STR_6 000061  
                         STR_7 00005B                           STR_8 00004D  
                         STR_9 000003                           _BRGH 007D62  
                         _CREN 007D5C                           _T0CS 007EAD  
                         _T0SE 007EAC                           u3100 000026  
                         u3200 0000A0                           u3008 000004  
                         u3009 000018                           _CCal 000000  
                         u3130 000040                           u3018 00001C  
                         u3019 000030                           u1380 000052  
                         u3205 00009E                           u1365 000024  
                         u1366 00002A                           u1375 00003E  
                         u1376 000044                           u3330 00007C  
                         u3090 000190                           u1395 000054  
                         u3068 000152                           u3069 00016A  
                         u3510 000038                           u3360 000196  
                         u3336 00007E                           u3088 000174  
                         u3450 000012                           u3258 00007A  
                         u3288 0000AC                           u3289 0000D6  
                         _PEIE 007F96                           u4187 00000A  
                         u4197 000022                           u3590 0000BC  
                         u3760 00004C                           _RCIF 007CF5  
                         _OERR 007D59                           _RBPU 007F8F  
                         _TMR0 000FD6                           _TMR2 000FCC  
                         _SPEN 007D5F                           _TXIE 007CEC  
                         _TXIF 007CF4                           _TXEN 007D65  
                         _SYNC 007D64                           _bres 000006  
                         _main 000000                           fsr0h 000FEA  
                         indf0 000FEF                           fsr0l 000FE9  
                         fsr1l 000FE1                           fsr2l 000FD9  
                         exp@x 000000                           log@x 000000  
                         pow@x 000000                           pow@y 000004  
                         prodh 000FF4                           prodl 000FF3  
   __end_of_measure_inductance 0003D4                           start 000000* 
                        ??_exp 000000*                         ??_log 000000* 
                        ??_isr 000000*                         ??_pow 000000* 
               ___flpack@l_arg 000000                __end_of___fladd 000152  
                        ?_main 000000*               __end_of___fldiv 0000B2  
              __end_of___flneg 000014                          STR_10 00006D  
                        STR_11 000003                __end_of___flmul 0000CC  
              __end_of___flsub 00003A                __end_of___fltol 00008C  
                        _LATC3 007C5B                          _LATC4 007C5C  
                        _LATC5 007C5D                          _LATC7 007C5F  
              __end_of___lwdiv 00004A                __end_of___lwmod 000036  
                        i2l960 00006A                          i2l961 00004A  
                        i2l963 00008C                          i2l965 0000AE  
                        i2l966 0000AC                          i2l959 00006C  
                        _RCREG 000FAE                          _SPBRG 000FAF  
                        _TRISA 000F92                          _TRISC 000F94  
                        _SSPEN 007E35                          _TXREG 000FAD  
                        _log10 000000                          _blink 000038  
                        _floor 000000                          _ldexp 000000  
                        _frexp 000000                   _output_putch 000000  
                        _msecs 000034                          pclath 000FFA  
                        tablat 000FF5                          pow@yi 000001  
                        status 000FD8                ??_print_reading 000000* 
           _format_number$1302 000000                    ldexp@newexp 000004  
                 __end_of_main 0000E6               format_double@num 000000  
                ?_measure_freq 000000*                        ??_main 000000* 
          format_double@weight 00000C                  __activetblptr 000002  
                       ?_log10 000000*                        ?_floor 000000* 
                       ?_ldexp 000000*                        ?_frexp 000000* 
             __end_of___altofl 00008C               __end_of___flpack 0000E4  
             __end_of___awtofl 000080               __end_of___lltofl 00004A  
             __end_of___lwtofl 00003E                         i2u4040 000036  
                       i2u4055 000038                         _TMR0IF 007F92  
                       _TMR2IE 007CE9                         _TMR2IF 007CF1  
                       _TMR2ON 007E52                         _TRISC0 007CA0  
                       _TRISC1 007CA1                         _TRISC2 007CA2  
                       _TRISC3 007CA3                         _TRISC4 007CA4  
                       _TRISC5 007CA5                         _TRISC6 007CA6  
                       __Ldata 000047                         ___flge 000000  
                    ??___fladd 000000*                        ___wmul 000000  
                    ??___fldiv 000000*                ___flunpack@arg 000000  
                    ??___flneg 000000*                     ??___flmul 000000* 
               ___flunpack@exp 000002                      ??___flsub 000000* 
                    ??___fltol 000000*                ??_measure_freq 000000* 
                    ??___lwdiv 000000*                  ?_timer2_init 000000* 
                    ??___lwmod 000000*                        log10@x 000000  
                       _rxfifo 000024                         _txfifo 000014  
                       _rxiptr 00003B                         _rxoptr 00003E  
                       floor@i 000002                         _txiptr 00003A  
                       floor@x 000000                         exp@exp 000004  
                       log@exp 000010                         _txoptr 00003C  
               _eval_poly$1328 000000               __end_of_ser_init 000024  
             __end_of_ser_puts 000028                   __mediumconst 000000  
                       tblptrh 000FF7                         tblptrl 000FF6  
                       tblptru 000FF8               format_number@buf 000004  
             format_number@pad 000003        _measure_inductance$1260 000004  
      _measure_inductance$1261 000008        _measure_inductance$1262 00000C  
      _measure_inductance$1259 000000                     ___fladd@f1 000000  
                   ___fladd@f2 000004                     ___flge@ff1 000000  
                   ___flge@ff2 000004                  _format_double 000000  
                   ___altofl@c 000000                     ___fldiv@f1 000000  
                   ___fldiv@f2 000004                     ___fldiv@f3 000002  
                   __accesstop 000000*                    ___flneg@f1 000000  
                _format_number 000000                  _format_xint32 000000  
                   ___flmul@f1 000000                     ___flmul@f2 000004  
                   ___flmul@f3 000002                   eval_poly@res 000004  
                   ___flsub@f1 000000                     ___flsub@f2 000004  
                   ___fltol@f1 000000                     ___awtofl@c 000000  
       measure_capacitance@Cin 00000A                     ___flunpack 000000  
       measure_capacitance@var 000008         ___asflmul@multiplicand 000002  
                   ___lltofl@c 000000                  __end_of_log10 00004A  
                __end_of_floor 0000EA                  __end_of_ldexp 000094  
                __end_of_frexp 000078                     ___lwtofl@c 000000  
                      ??_log10 000000*                       ??_floor 000000* 
                      ??_ldexp 000000*                       ??_frexp 000000* 
               ?_format_double 000000*                ?_format_number 000000* 
               ?_format_xint32 000000*                       ?___flge 000000* 
                      ?___wmul 000000*                     l500000718 000042  
            __end_of___asfldiv 000046                      ?___altofl 000000* 
            __end_of___asflmul 000046              __end_of___asflsub 000046  
                    ?___flpack 000000*                     l600000744 000026  
                    ?___awtofl 000000*                     ?___lltofl 000000* 
           _measure_inductance 000000                        _T2CKPS0 007E50  
                      _T2CKPS1 007E51                      ?___lwtofl 000000* 
          ?_measure_inductance 000000*             __end_of_calibrate 0000A4  
                      _TOUTPS0 007E53                        _TOUTPS1 007E54  
                      _TOUTPS2 007E55              __end_of_delay10ms 000058  
         __end_of_measure_freq 000088                        __Hdata0 00004A  
                      __Ldata0 000047                    ?___flunpack 000000* 
                      __Hparam 000000                        __Lparam 000000  
                    ?_ser_init 000000*          ??_measure_inductance 000000* 
                    ?_ser_puts 000000*                       ___fladd 000000  
                      ___fldiv 000000                        ___flneg 000000  
                      ___flmul 000000                        ___flsub 000000  
                      ___fltol 000000                        ___lwdiv 000000  
                      ___lwmod 000000                     ??___altofl 000000* 
                   ??___flpack 000000*                    ??___awtofl 000000* 
            __end_of_eval_poly 0000CE                        __ramtop 000000* 
            __end_of_indicator 000002                     ??___lltofl 000000* 
                   ??___lwtofl 000000*                       _seconds 00003F  
                      _ser_brg 000049                        _ser_tmp 00003D  
              ??_format_double 000000*               ??_format_number 000000* 
              ??_format_xint32 000000*                 __Lmediumconst 000000* 
                      int_func 000000              __end_of_ser_putch 000026  
                      pow@sign 000000  measure_inductance@denominator 000012  
        __end_of_print_reading 000002                     ??_ser_init 000000* 
                   ??_ser_puts 000000*             format_number@base 000002  
                      postdec0 000FED                        postinc0 000FEE  
                   _print_unit 000000            _measure_capacitance 000000  
                  ___altofl@f1 000000                 _format_putchar 000000  
                  ___awtofl@f1 000000           ?_measure_capacitance 000000* 
               format_double@m 00000A                 __end_of___flge 000046  
               __end_of___wmul 00002C                    ___lltofl@f1 000000  
                   floor@expon 000000                 format_number@i 000003  
               format_number@n 000000                 format_xint32@x 000000  
                   eval_poly@d 000004                     eval_poly@n 000005  
                   eval_poly@x 000000                     ldexp@value 000000  
                  __end_of_exp 0001D2                    __end_of_log 000160  
                  __end_of_isr 0000B8                    __end_of_pow 00015A  
                  ___lwtofl@f1 000000                      __Habsbss0 000047  
       __end_of_format_putchar 000002             format_double@digit 000008  
                    __Labsbss0 000000                     frexp@value 000000  
        ??_measure_capacitance 000000*                      ??___flge 000000* 
                     ??___wmul 000000*                  _measure_freq 000000  
     print_reading@measurement 000000                      ___asfldiv 000000  
                  ?_print_unit 000000*                     ___asflmul 000000  
                    ___asflsub 000000                  ?_output_putch 000000* 
              ?_format_putchar 000000*                     _calibrate 000000  
                    _delay10ms 000000                   ??___flunpack 000000* 
             ___lwdiv@dividend 000000                       ?___fladd 000000* 
                     ?___fldiv 000000*                      ?___flneg 000000* 
                     ?___flmul 000000*                      ?___flsub 000000* 
                     ?___fltol 000000*                      ?___lwdiv 000000* 
                     ?___lwmod 000000*                   __smallconst 000000  
                   ?___asfldiv 000000*                    ?___asflmul 000000* 
                   ?___asflsub 000000*                     _eval_poly 000000  
                    _indicator 000000                 ??_output_putch 000000* 
           __end_of___flunpack 000060                     ?_calibrate 000000* 
                   ?_delay10ms 000000*                     _ser_putch 000000  
                ??_timer2_init 000000*             ___wmul@multiplier 000000  
                   ?_eval_poly 000000*                    ?_indicator 000000* 
        measure_inductance@Lin 00001A          measure_inductance@var 000010  
        __end_of_format_double 000192           format_number@padchar 000002  
        __end_of_format_number 0000E2          __end_of_format_xint32 000058  
                    frexp@eptr 000004                       __Hparam1 000000* 
                     __Lparam1 000000*                    ?_ser_putch 000000* 
                 __Lsmallconst 000000*                   delay10ms@ms 000000  
                     ___altofl 000000                       ___flpack 000000  
                     ___awtofl 000000                       ___lltofl 000000  
                     ___lwtofl 000000                       __config1 000000  
                     __config2 000000                       __config3 000000  
                     __config4 00FFFB                       __config5 00FFFF  
                  ??___asfldiv 000000*                      _exp$1311 000000  
                  ??___asflmul 000000*                   ??___asflsub 000000* 
                     _log$1320 000008                       _log$1321 00000C  
                     _log$1315 000000                       _log$1316 000004  
          __end_of_timer2_init 000056               ___flunpack@l_arg 000000  
              ___lwdiv@divisor 000002                    ??_calibrate 000000* 
                  ??_delay10ms 000000*                      _msecpart 000004  
                     _ser_init 000000                       _ser_puts 000000  
                     _timer1of 000043           __end_of_output_putch 00000A  
  measure_inductance@numerator 000016               ??_format_putchar 000000* 
                 ??_print_unit 000000*                   ??_eval_poly 000000* 
                  ??_indicator 000000*                      intlevel2 000000* 
  __end_of_measure_capacitance 000396               ___lwmod@dividend 000000  
                  ??_ser_putch 000000*            __end_of_print_unit 000002  
                _print_reading 000000           delay10ms@period_10ms 000000  
                  _timer2_init 000000             _format_double$1287 000000  
           _format_double$1288 000004       _measure_capacitance$1240 000004  
     _measure_capacitance$1239 000000                ___lwmod@divisor 000002  
                 ___fladd@exp1 000001                   ___fladd@exp2 000000  
               ?_print_reading 000000*                  ___asfldiv@f2 000002  
