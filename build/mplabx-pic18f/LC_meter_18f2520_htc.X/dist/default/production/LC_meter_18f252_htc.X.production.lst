

HI-TECH Software PRO Macro Assembler (PIC18) V9.66 build 8870 
                                                       Sat Aug 31 17:55:49 2019

HI-TECH Software Omniscient Code Generator build 8870
     1                           	processor	18F252
     2                           	fnconf	param1,??,?,0
     3                           	opt	pw 80
     4                           	opt	pm
     5                           	psect	text0,global,reloc=2,class=CODE,delta=1
     6                           	psect	text1,global,reloc=2,class=CODE,delta=1
     7                           	psect	text2,global,reloc=2,class=CODE,delta=1
     8                           	psect	text3,global,reloc=2,class=CODE,delta=1
     9                           	psect	text4,global,reloc=2,class=CODE,delta=1
    10                           	psect	text5,global,reloc=2,class=CODE,delta=1
    11                           	psect	text6,global,reloc=2,class=CODE,delta=1
    12                           	psect	text7,global,reloc=2,class=CODE,delta=1
    13                           	psect	text8,global,reloc=2,class=CODE,delta=1
    14                           	psect	text9,global,reloc=2,class=CODE,delta=1
    15                           	psect	text10,global,reloc=2,class=CODE,delta=1
    16                           	psect	text11,global,reloc=2,class=CODE,delta=1
    17                           	psect	text12,global,reloc=2,class=CODE,delta=1
    18                           	psect	text13,global,reloc=2,class=CODE,delta=1
    19                           	psect	text14,global,reloc=2,class=CODE,delta=1
    20                           	psect	text15,global,reloc=2,class=CODE,delta=1
    21                           	psect	text16,global,reloc=2,class=CODE,delta=1
    22                           	psect	text17,global,reloc=2,class=CODE,delta=1
    23                           	psect	text18,global,reloc=2,class=CODE,delta=1
    24                           	psect	text19,global,reloc=2,class=CODE,delta=1
    25                           	psect	text20,global,reloc=2,class=CODE,delta=1
    26                           	psect	text21,global,reloc=2,class=CODE,delta=1
    27                           	psect	text22,global,reloc=2,class=CODE,delta=1
    28                           	psect	text23,global,reloc=2,class=CODE,delta=1
    29                           	psect	text24,global,reloc=2,class=CODE,delta=1
    30                           	psect	text25,global,reloc=2,class=CODE,delta=1
    31                           	psect	text26,global,reloc=2,class=CODE,delta=1
    32                           	psect	text27,global,reloc=2,class=CODE,delta=1
    33                           	psect	text28,global,reloc=2,class=CODE,delta=1
    34                           	psect	text29,global,reloc=2,class=CODE,delta=1
    35                           	psect	text30,global,reloc=2,class=CODE,delta=1
    36                           	psect	text31,global,reloc=2,class=CODE,delta=1
    37                           	psect	text32,global,reloc=2,class=CODE,delta=1
    38                           	psect	text33,global,reloc=2,class=CODE,delta=1
    39                           	psect	text34,global,reloc=2,class=CODE,delta=1
    40                           	psect	text35,global,reloc=2,class=CODE,delta=1
    41                           	psect	text36,global,reloc=2,class=CODE,delta=1
    42                           	psect	text37,global,reloc=2,class=CODE,delta=1
    43                           	psect	text38,global,reloc=2,class=CODE,delta=1
    44                           	psect	text39,global,reloc=2,class=CODE,delta=1
    45                           	psect	text40,global,reloc=2,class=CODE,delta=1
    46                           	psect	text41,global,reloc=2,class=CODE,delta=1
    47                           	psect	text42,global,reloc=2,class=CODE,delta=1
    48                           	psect	text43,global,reloc=2,class=CODE,delta=1
    49                           	psect	text44,global,reloc=2,class=CODE,delta=1
    50                           	psect	text45,global,reloc=2,class=CODE,delta=1
    51                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    52                           	psect	text46,global,reloc=2,class=CODE,delta=1
    53                           	psect	idata,global,class=CODE,delta=1
    54                           	psect	smallconst,global,reloc=2,class=SMALLCONS
      +                          T,delta=1
    55                           	psect	intsave_regs,global,class=BIGRAM,space=1,
      +                          delta=1
    56                           	psect	param1,global,class=BANK1,space=1,delta=1
    57                           	dabs	1,0x47,2
    58                           	dabs	1,0x49,1
    59                           	dabs	1,0x24,16
    60                           	dabs	1,0x14,16
    61                           	dabs	1,0x8,4
    62                           	dabs	1,0x10,4
    63                           	dabs	1,0xC,4
    64                           	dabs	1,0x34,4
    65                           	dabs	1,0x3F,4
    66                           	dabs	1,0x43,4
    67                           	dabs	1,0x38,2
    68                           	dabs	1,0x3B,1
    69                           	dabs	1,0x3E,1
    70                           	dabs	1,0x3D,1
    71                           	dabs	1,0x3A,1
    72                           	dabs	1,0x3C,1
    73                           	dabs	1,0x0,4
    74                           	dabs	1,0x6,2
    75                           	dabs	1,0x4,2
    76  000000                     
    77  000000                     
    78  000000                     
    79  000000                     
    80  000000                     
    81  000000                     
    82  000000                     
    83  000000                     
    84  000000                     
    85  000000                     
    86  000000                     
    87  000000                     
    88  000000                     
    89  000000                     
    90  000000                     
    91  000000                     
    92  000000                     
    93  000000                     
    94  000000                     
    95  000000                     
    96  000000                     
    97  000000                     
    98  000000                     
    99  000000                     
   100  000000                     
   101  000000                     
   102  000000                     
   103  000000                     
   104  000000                     
   105  000000                     
   106  000000                     
   107  000000                     
   108  000000                     
   109  000000                     
   110  000000                     
   111  000000                     
   112  000000                     
   113  000000                     
   114  000000                     
   115  000000                     
   116  000000                     
   117  000000                     
   118  000000                     
   119  000000                     
   120  000000                     
   121  000000                     
   122  000000                     
   123  000000                     
   124  000000                     
   125  000000                     
   126  000000                     
   127  000000                     
   128  000000                     
   129  000000                     
   130  000000                     
   131  000000                     
   132  000000                     
   133  000000                     
   134  000000                     
   135  000000                     
   136  000000                     
   137  000000                     
   138  000000                     
   139  000000                     
   140  000000                     
   141  000000                     
   142  000000                     
   143  000000                     
   144  000000                     
   145  000000                     
   146  000000                     
   147  000000                     
   148  000000                     
   149  000000                     
   150  000000                     
   151  000000                     
   152  000000                     
   153  000000                     
   154  000000                     
   155  000000                     
   156  000000                     
   157  000000                     
   158  000000                     
   159  000000                     
   160  000000                     
   161  000000                     
   162  000000                     
   163  000000                     
   164  000000                     
   165  000000                     
   166  000000                     
   167  000000                     
   168  000000                     
   169  000000                     
   170  000000                     
   171  000000                     	;#
   172  000000                     	;#
   173  000000                     	;#
   174  000000                     	;#
   175  000000                     	;#
   176  000000                     	;#
   177  000000                     
   178  000000                     
   179  000000                     
   180  000000                     
   181  000000                     
   182  000000                     
   183  000000                     
   184  000000                     
   185  000000                     
   186  000000                     
   187  000000                     
   188  000000                     
   189  000000                     
   190  000000                     
   191  000000                     
   192  000000                     
   193  000000                     
   194  000000                     
   195  000000                     
   196  000000                     
   197  000000                     
   198  000000                     
   199  000000                     
   200  000000                     
   201  000000                     
   202  000000                     
   203  000000                     
   204  000000                     
   205  000000                     
   206  000000                     
   207  000000                     
   208  000000                     
   209  000000                     
   210  000000                     
   211  000000                     
   212  000000                     
   213  000000                     
   214  000000                     
   215  000000                     
   216  000000                     
   217  000000                     
   218  000000                     
   219  000000                     
   220  000000                     
   221  000000                     
   222  000000                     
   223  000000                     
   224  000000                     
   225  000000                     
   226  000000                     
   227  000000                     
   228  000000                     
   229  000000                     
   230  000000                     
   231  000000                     
   232  000000                     
   233  000000                     
   234  000000                     
   235  000000                     
   236  000000                     
   237  000000                     
   238  000000                     
   239  000000                     
   240  000000                     
   241  000000                     
   242  000000                     
   243  000000                     
   244  000000                     
   245  000000                     
   246  000000                     
   247  000000                     
   248  000000                     
   249  000000                     
   250  000000                     
   251  000000                     
   252  000000                     
   253  000000                     
   254  000000                     
   255  000000                     
   256  000000                     
   257  000000                     
   258  000000                     
   259  000000                     
   260  000000                     
   261  000000                     
   262  000000                     
   263  000000                     
   264  000000                     
   265  000000                     
   266  000000                     
   267  000000                     
   268  000000                     
   269  000000                     
   270  000000                     
   271  000000                     
   272  000000                     
   273  000000                     
   274  000000                     
   275  000000                     
   276  000000                     
   277  000000                     
   278  000000                     
   279  000000                     
   280  000000                     
   281  000000                     
   282  000000                     
   283  000000                     
   284                           
   285                           	psect	text0
   286                           ;Data sizes: Strings 42, constant 76, data 3, bs
      +                          s 0, persistent 0 stack 112
   287                           ; *************** function _main ***************
      +                          **
   288                           ; Defined at:
   289                           ;		line 115 in file "../../../src/LC-meter.c"
   290                           ; Parameters:
   291                           ;		None
   292                           ; Auto variables:
   293                           ;		None
   294                           ; Return value:
   295                           ;		type: void 
   296                           ;		size: 0
   297                           ; Registers used:
   298                           ;		wreg, fsr0l, fsr0h, fsr1l, fsr2l, status,2, s
      +                          tatus,0, pclat, tosl, tblptrl, tblptrh, tblptru,
      +                           tablat, prodl, prodh, cstack
   299                           ; Tracked objects:
   300                           ;		On entry : 0/0
   301                           ;		On exit  : 0/0
   302                           ;		Unchanged: 0/0
   303                           ; Data sizes:
   304                           ;		Autos:    0
   305                           ;		Params:   0
   306                           ;		Temp:     0
   307                           ;		Total:    0
   308                           ; This function calls:
   309                           ;		_timer2_init
   310                           ;		_delay10ms
   311                           ;		_ser_init
   312                           ;		_calibrate
   313                           ;		_ser_puts
   314                           ;		_measure_capacitance
   315                           ;		_measure_inductance
   316                           ;		_indicator
   317                           ; This function is called by:
   318                           ;		Startup code after reset
   319                           ; This function uses a non-reentrant model
   320                           ; 
   321  000000                     
   322                           ;LC-meter.c: 114: void
   323                           ;LC-meter.c: 115: main() {
   324  00188C                     _main:
   325                           	opt stack 30
   326                           ; BSR set to: ?
   327  00188C  FFFF               	dw	65535
   328  00188E  6A3F               	clrf	63,c	;volatile
   329  001890  6A40               	clrf	64,c	;volatile
   330  001892  6A41               	clrf	65,c	;volatile
   331  001894  6A42               	clrf	66,c	;volatile
   332  001896  C03F F034          	movff	63,52	;volatile
   333  00189A  C040 F035          	movff	64,53	;volatile
   334  00189E  C041 F036          	movff	65,54	;volatile
   335  0018A2  C042 F037          	movff	66,55	;volatile
   336  0018A6  C034 F004          	movff	52,4	;volatile
   337  0018AA  C035 F005          	movff	53,5	;volatile
   338  0018AE  C004 F006          	movff	4,6	;volatile
   339  0018B2  C005 F007          	movff	5,7	;volatile
   340                           ;LC-meter.c: 118: CCal = 1000;
   341  0018B6  6A00               	clrf	0,c
   342  0018B8  6A01               	clrf	1,c
   343  0018BA  0E7A               	movlw	122
   344  0018BC  6E02               	movwf	2,c
   345  0018BE  0E44               	movlw	68
   346  0018C0  6E03               	movwf	3,c
   347                           ;LC-meter.c: 127: TRISA = 0b11001111;
   348  0018C2  0ECF               	movlw	207
   349  0018C4  6E92               	movwf	3986,c	;volatile
   350                           ;LC-meter.c: 129: T0CS = 1;
   351  0018C6  8AD5               	bsf	4053,5,c	;volatile
   352                           ;LC-meter.c: 130: T0SE = 1;
   353  0018C8  88D5               	bsf	4053,4,c	;volatile
   354                           ;LC-meter.c: 139: RBPU = 1;
   355  0018CA  8EF1               	bsf	intcon2,7,c	;volatile
   356                           ;LC-meter.c: 144: TRISC3 = 0;
   357  0018CC  9694               	bcf	3988,3,c	;volatile
   358                           ;LC-meter.c: 145: LATC3 = ((1) == 0);
   359  0018CE  968B               	bcf	3979,3,c	;volatile
   360                           ;LC-meter.c: 147: SSPEN = 0;
   361  0018D0  9AC6               	bcf	4038,5,c	;volatile
   362                           ;LC-meter.c: 152: timer2_init(0b000 | 0x80);
   363  0018D2  0E80               	movlw	128
   364  0018D4  ECD1  F010         	call	_timer2_init
   365                           ;LC-meter.c: 157: TRISC1 = 0;
   366  0018D8  9294               	bcf	3988,1,c	;volatile
   367                           ;LC-meter.c: 160: TRISC3 = 0;
   368  0018DA  9694               	bcf	3988,3,c	;volatile
   369                           ;LC-meter.c: 162: TRISC0 = 1;
   370  0018DC  8094               	bsf	3988,0,c	;volatile
   371                           ;LC-meter.c: 163: TRISC2 = 1;
   372  0018DE  8494               	bsf	3988,2,c	;volatile
   373                           ;LC-meter.c: 173: TRISC4 = 1;
   374  0018E0  8894               	bsf	3988,4,c	;volatile
   375                           ;LC-meter.c: 174: TRISC5 = 0;
   376  0018E2  9A94               	bcf	3988,5,c	;volatile
   377                           ;LC-meter.c: 176: LATC5 = 0;
   378  0018E4  9A8B               	bcf	3979,5,c	;volatile
   379                           ;LC-meter.c: 177: delay10ms(50);
   380  0018E6  0E32               	movlw	50
   381  0018E8  0101               	movlb	1	; () banked
   382  0018EA  6F00               	movwf	?_delay10ms& (0+255),b
   383  0018EC  0E00               	movlw	0
   384  0018EE  6B01               	clrf	(?_delay10ms+1)& (0+255),b
   385  0018F0  EC00  F011         	call	_delay10ms	;wreg free
   386                           ;LC-meter.c: 178: LATC5 = 1;
   387  0018F4  8A8B               	bsf	3979,5,c	;volatile
   388                           ;LC-meter.c: 179: delay10ms(50);
   389  0018F6  0E32               	movlw	50
   390  0018F8  6F00               	movwf	?_delay10ms& (0+255),b
   391  0018FA  0E00               	movlw	0
   392  0018FC  6B01               	clrf	(?_delay10ms+1)& (0+255),b
   393  0018FE  EC00  F011         	call	_delay10ms	;wreg free
   394                           ;LC-meter.c: 180: LATC5 = 0;
   395  001902  9A8B               	bcf	3979,5,c	;volatile
   396                           ;LC-meter.c: 181: delay10ms(50);
   397  001904  0E32               	movlw	50
   398  001906  6F00               	movwf	?_delay10ms& (0+255),b
   399  001908  0E00               	movlw	0
   400  00190A  6B01               	clrf	(?_delay10ms+1)& (0+255),b
   401  00190C  EC00  F011         	call	_delay10ms	;wreg free
   402                           ;LC-meter.c: 182: LATC5 = 1;
   403  001910  8A8B               	bsf	3979,5,c	;volatile
   404                           ;LC-meter.c: 183: delay10ms(50);
   405  001912  0E32               	movlw	50
   406  001914  6F00               	movwf	?_delay10ms& (0+255),b
   407  001916  0E00               	movlw	0
   408  001918  6B01               	clrf	(?_delay10ms+1)& (0+255),b
   409  00191A  EC00  F011         	call	_delay10ms	;wreg free
   410                           ;LC-meter.c: 184: LATC5 = 0;
   411  00191E  9A8B               	bcf	3979,5,c	;volatile
   412                           ;LC-meter.c: 187: ser_init();
   413  001920  ECE5  F012         	call	_ser_init	;wreg free
   414                           ;LC-meter.c: 192: TRISC &= ~0b01000000;
   415  001924  9C94               	bcf	3988,6,c	;volatile
   416                           ;LC-meter.c: 194: PEIE = 1;
   417  001926  8CF2               	bsf	intcon,6,c	;volatile
   418                           ;LC-meter.c: 195: GIE = 1;
   419  001928  8EF2               	bsf	intcon,7,c	;volatile
   420                           ;LC-meter.c: 214: delay10ms(200);
   421  00192A  0EC8               	movlw	200
   422  00192C  6F00               	movwf	?_delay10ms& (0+255),b
   423  00192E  0E00               	movlw	0
   424  001930  6B01               	clrf	(?_delay10ms+1)& (0+255),b
   425  001932  EC00  F011         	call	_delay10ms	;wreg free
   426                           ;LC-meter.c: 217: calibrate();
   427  001936  EC5E  F00E         	call	_calibrate	;wreg free
   428                           ;LC-meter.c: 228: for(;;) {
   429  00193A                     l838:
   430  00193A  FFFF               	dw	65535	; assembler added errata NOP
   431                           ; BSR set to: 1
   432                           ;LC-meter.c: 230: ser_puts("...\r\n");
   433  00193C  0E67               	movlw	STR_1& (0+255)
   434  00193E  ECB7  F012         	call	_ser_puts
   435                           ;LC-meter.c: 231: if(LATC4)
   436  001942  A88B               	btfss	3979,4,c	;volatile
   437  001944  D003               	goto	l841
   438                           ;LC-meter.c: 232: measure_capacitance();
   439  001946  EC2C  F005         	call	_measure_capacitance	;wreg free
   440  00194A  D003               	goto	l842
   441  00194C                     l841:
   442  00194C  FFFF               	dw	65535	; assembler added errata NOP
   443                           ; BSR set to: 1
   444                           ;LC-meter.c: 233: else
   445                           ;LC-meter.c: 234: measure_inductance();
   446  00194E  EC3E  F003         	call	_measure_inductance	;wreg free
   447  001952                     l842:
   448  001952  FFFF               	dw	65535	; assembler added errata NOP
   449                           ; BSR set to: 1
   450                           ;LC-meter.c: 236: indicator(1);
   451  001954  0E01               	movlw	1
   452  001956  EC0C  F013         	call	_indicator
   453                           ;LC-meter.c: 237: delay10ms(30);
   454  00195A  0E1E               	movlw	30
   455  00195C  6F00               	movwf	?_delay10ms& (0+255),b
   456  00195E  0E00               	movlw	0
   457  001960  6B01               	clrf	(?_delay10ms+1)& (0+255),b
   458  001962  EC00  F011         	call	_delay10ms	;wreg free
   459                           ;LC-meter.c: 238: indicator(0);
   460  001966  0E00               	movlw	0
   461  001968  EC0C  F013         	call	_indicator
   462                           ;LC-meter.c: 239: delay10ms(20);
   463  00196C  0E14               	movlw	20
   464  00196E  6F00               	movwf	?_delay10ms& (0+255),b
   465  001970  0E00               	movlw	0
   466  001972  6B01               	clrf	(?_delay10ms+1)& (0+255),b
   467  001974  EC00  F011         	call	_delay10ms	;wreg free
   468                           ;LC-meter.c: 240: }
   469  001978  D7E0               	goto	l838
   470  00197A                     __end_of_main:
   471                           	opt stack 0
   472                           
   473                           	psect	text1
   474                           ; =============== function _main ends ==========
      +                          ==
   475                           ; *************** function _indicator **********
      +                          *******
   476                           ; Defined at:
   477                           ;		line 469 in file "../../../src/print.c"
   478                           ; Parameters:
   479                           ;		indicate       size:   1reg:   wre	type: unsi
      +                          gned char 
   480                           ; Auto variables:
   481                           ;		None
   482                           ; Return value:
   483                           ;		type: void 
   484                           ;		size: 0
   485                           ; Registers used:
   486                           ;		wreg
   487                           ; Tracked objects:
   488                           ;		On entry : F/1
   489                           ;		On exit  : F/1
   490                           ;		Unchanged: FFFFFFFF/0
   491                           ; Data sizes:
   492                           ;		Autos:    0
   493                           ;		Params:   0
   494                           ;		Temp:     0
   495                           ;		Total:    0
   496                           ; This function calls:
   497                           ;		Nothing
   498                           ; This function is called by:
   499                           ;		_main
   500                           ; This function uses a non-reentrant model
   501                           ; 
   502  000000                     
   503                           ;print.c: 468: void
   504                           ;print.c: 469: indicator(unsigned char indicate)
      +                           {
   505  002618                     _indicator:
   506                           	opt stack 29
   507                           ; BSR set to: 1
   508  002618  FFFF               	dw	65535
   509                           ; BSR set to: 1
   510  00261A  0012               	return	
   511  00261C  FFFF               	dw	65535	; errata NOP
   512  00261E                     __end_of_indicator:
   513                           	opt stack 0
   514                           
   515                           	psect	text2
   516                           ; =============== function _indicator ends =====
      +                          =======
   517                           ; *************** function _calibrate **********
      +                          *******
   518                           ; Defined at:
   519                           ;		line 346 in file "../../../src/LC-meter.c"
   520                           ; Parameters:
   521                           ;		None
   522                           ; Auto variables:
   523                           ;		None
   524                           ; Return value:
   525                           ;		type: void 
   526                           ;		size: 0
   527                           ; Registers used:
   528                           ;		wreg, fsr0l, fsr0h, fsr1l, fsr2l, status,2, s
      +                          tatus,0, tblptrl, tblptrh, tblptru, tablat, prod
      +                          l, prodh, cstack
   529                           ; Tracked objects:
   530                           ;		On entry : F/1
   531                           ;		On exit  : F/1
   532                           ;		Unchanged: 0/0
   533                           ; Data sizes:
   534                           ;		Autos:    0
   535                           ;		Params:   0
   536                           ;		Temp:     0
   537                           ;		Total:    0
   538                           ; This function calls:
   539                           ;		_measure_freq
   540                           ;		___lwtofl
   541                           ;		_delay10ms
   542                           ;		_ser_puts
   543                           ; This function is called by:
   544                           ;		_main
   545                           ; This function uses a non-reentrant model
   546                           ; 
   547  000000                     
   548                           ;LC-meter.c: 345: void
   549                           ;LC-meter.c: 346: calibrate() {
   550  001CBC                     _calibrate:
   551                           	opt stack 29
   552                           ; BSR set to: 1
   553  001CBC  FFFF               	dw	65535
   554                           ;LC-meter.c: 347: unsigned char i;
   555                           ;LC-meter.c: 360: LATC5 = 0;
   556  001CBE  9A8B               	bcf	3979,5,c	;volatile
   557                           ;LC-meter.c: 362: F1 = (double)measure_freq();
   558  001CC0  EC50  F00F         	call	_measure_freq	;wreg free
   559  001CC4  C11E  F11E         	movff	?_measure_freq,?___lwtofl
   560  001CC8  C11F  F11F         	movff	?_measure_freq+1,?___lwtofl+1
   561  001CCC  EC3E  F012         	call	___lwtofl	;wreg free
   562  001CD0  C11E  F008         	movff	?___lwtofl,8
   563  001CD4  C11F  F009         	movff	?___lwtofl+1,9
   564  001CD8  C120  F00A         	movff	?___lwtofl+2,10
   565  001CDC  C121  F00B         	movff	?___lwtofl+3,11
   566                           ;LC-meter.c: 363: delay10ms(50);
   567  001CE0  0E32               	movlw	50
   568  001CE2  6F00               	movwf	?_delay10ms& (0+255),b
   569  001CE4  0E00               	movlw	0
   570  001CE6  6B01               	clrf	(?_delay10ms+1)& (0+255),b
   571  001CE8  EC00  F011         	call	_delay10ms	;wreg free
   572                           ;LC-meter.c: 365: F1 = (double)measure_freq();
   573  001CEC  EC50  F00F         	call	_measure_freq	;wreg free
   574  001CF0  C11E  F11E         	movff	?_measure_freq,?___lwtofl
   575  001CF4  C11F  F11F         	movff	?_measure_freq+1,?___lwtofl+1
   576  001CF8  EC3E  F012         	call	___lwtofl	;wreg free
   577  001CFC  C11E  F008         	movff	?___lwtofl,8
   578  001D00  C11F  F009         	movff	?___lwtofl+1,9
   579  001D04  C120  F00A         	movff	?___lwtofl+2,10
   580  001D08  C121  F00B         	movff	?___lwtofl+3,11
   581                           ;LC-meter.c: 366: LATC5 = 1;
   582  001D0C  8A8B               	bsf	3979,5,c	;volatile
   583                           ;LC-meter.c: 368: F2 = (double)measure_freq();
   584  001D0E  EC50  F00F         	call	_measure_freq	;wreg free
   585  001D12  C11E  F11E         	movff	?_measure_freq,?___lwtofl
   586  001D16  C11F  F11F         	movff	?_measure_freq+1,?___lwtofl+1
   587  001D1A  EC3E  F012         	call	___lwtofl	;wreg free
   588  001D1E  C11E  F010         	movff	?___lwtofl,16
   589  001D22  C11F  F011         	movff	?___lwtofl+1,17
   590  001D26  C120  F012         	movff	?___lwtofl+2,18
   591  001D2A  C121  F013         	movff	?___lwtofl+3,19
   592                           ;LC-meter.c: 369: delay10ms(50);
   593  001D2E  0E32               	movlw	50
   594  001D30  6F00               	movwf	?_delay10ms& (0+255),b
   595  001D32  0E00               	movlw	0
   596  001D34  6B01               	clrf	(?_delay10ms+1)& (0+255),b
   597  001D36  EC00  F011         	call	_delay10ms	;wreg free
   598                           ;LC-meter.c: 371: F2 = (double)measure_freq();
   599  001D3A  EC50  F00F         	call	_measure_freq	;wreg free
   600  001D3E  C11E  F11E         	movff	?_measure_freq,?___lwtofl
   601  001D42  C11F  F11F         	movff	?_measure_freq+1,?___lwtofl+1
   602  001D46  EC3E  F012         	call	___lwtofl	;wreg free
   603  001D4A  C11E  F010         	movff	?___lwtofl,16
   604  001D4E  C11F  F011         	movff	?___lwtofl+1,17
   605  001D52  C120  F012         	movff	?___lwtofl+2,18
   606  001D56  C121  F013         	movff	?___lwtofl+3,19
   607                           ;LC-meter.c: 372: LATC5 = 0;
   608  001D5A  9A8B               	bcf	3979,5,c	;volatile
   609                           ;LC-meter.c: 384: ser_puts("\r\n");
   610  001D5C  0E6A               	movlw	(STR_1+3)& (0+255)
   611  001D5E  EFB7  F012         	goto	_ser_puts
   612                           ;LC-meter.c: 385: }
   613                           ; BSR set to: 1
   614  001D62  FFFF               	dw	65535	; errata NOP
   615  001D64                     __end_of_calibrate:
   616                           	opt stack 0
   617                           
   618                           	psect	text3
   619                           ; =============== function _calibrate ends =====
      +                          =======
   620                           ; *************** function _measure_inductance *
      +                          ****************
   621                           ; Defined at:
   622                           ;		line 469 in file "../../../src/LC-meter.c"
   623                           ; Parameters:
   624                           ;		None
   625                           ; Auto variables:
   626                           ;		unit        	       	type: unsigned char 
   627                           ;		var         	       	type: unsigned short 
   628                           ;		denominator 	       	type: unsigned short 
   629                           ;		numerator   	       	type: unsigned short 
   630                           ;		Lin         	       	type: unsigned short 
   631                           ; Return value:
   632                           ;		type: void 
   633                           ;		size: 0
   634                           ; Registers used:
   635                           ;		wreg, fsr0l, fsr0h, fsr1l, fsr2l, status,2, s
      +                          tatus,0, prodl, prodh, cstack
   636                           ; Tracked objects:
   637                           ;		On entry : F/1
   638                           ;		On exit  : F/1
   639                           ;		Unchanged: 0/0
   640                           ; Data sizes:
   641                           ;		Autos:   30
   642                           ;		Params:   0
   643                           ;		Temp:     0
   644                           ;		Total:   30
   645                           ; This function calls:
   646                           ;		_measure_freq
   647                           ;		___lwtofl
   648                           ;		___flge
   649                           ;		___flmul
   650                           ;		___flsub
   651                           ;		___fldiv
   652                           ;		___asfldiv
   653                           ;		___asflmul
   654                           ;		___fltol
   655                           ;		_print_reading
   656                           ;		_print_unit
   657                           ; This function is called by:
   658                           ;		_main
   659                           ; This function uses a non-reentrant model
   660                           ; 
   661  000000                     
   662                           ;LC-meter.c: 468: void
   663                           ;LC-meter.c: 469: measure_inductance() {
   664  00067C                     _measure_inductance:
   665                           	opt stack 29
   666                           ; BSR set to: 1
   667  00067C  FFFF               	dw	65535
   668  00067E  EC50  F00F         	call	_measure_freq	;wreg free
   669  000682  C11E  F110         	movff	?_measure_freq,??_measure_inductance+16
   670  000686  C11F  F111         	movff	?_measure_freq+1,??_measure_inductance+17
   671                           ;LC-meter.c: 481: F3 = (double)var;
   672  00068A  C110  F11E         	movff	??_measure_inductance+16,?___lwtofl
   673  00068E  C111  F11F         	movff	??_measure_inductance+17,?___lwtofl+1
   674  000692  EC3E  F012         	call	___lwtofl	;wreg free
   675  000696  C11E  F00C         	movff	?___lwtofl,12
   676  00069A  C11F  F00D         	movff	?___lwtofl+1,13
   677  00069E  C120  F00E         	movff	?___lwtofl+2,14
   678  0006A2  C121  F00F         	movff	?___lwtofl+3,15
   679                           ;LC-meter.c: 482: if(F3 > F1)
   680  0006A6  C00C F147          	movff	12,?___flge+4
   681  0006AA  C00D F148          	movff	13,?___flge+5
   682  0006AE  C00E F149          	movff	14,?___flge+6
   683  0006B2  C00F F14A          	movff	15,?___flge+7
   684  0006B6  C008 F143          	movff	8,?___flge
   685  0006BA  C009 F144          	movff	9,?___flge+1
   686  0006BE  C00A F145          	movff	10,?___flge+2
   687  0006C2  C00B F146          	movff	11,?___flge+3
   688  0006C6  EC81  F011         	call	___flge	;wreg free
   689  0006CA  E208               	bc	l862
   690                           ;LC-meter.c: 483: F3 = F1;
   691  0006CC  C008 F00C          	movff	8,12
   692  0006D0  C009 F00D          	movff	9,13
   693  0006D4  C00A F00E          	movff	10,14
   694  0006D8  C00B F00F          	movff	11,15
   695  0006DC                     l862:
   696                           ; BSR set to: 1
   697                           ;LC-meter.c: 485: numerator = ((F1 * F1) - (F3 *
      +                           F3)) * ((F1 * F1) - (F2 - F2)) * (100 * 100);
   698  0006DC  C008 F159          	movff	8,?___flmul+4
   699  0006E0  C009 F15A          	movff	9,?___flmul+5
   700  0006E4  C00A F15B          	movff	10,?___flmul+6
   701  0006E8  C00B F15C          	movff	11,?___flmul+7
   702  0006EC  C008 F155          	movff	8,?___flmul
   703  0006F0  C009 F156          	movff	9,?___flmul+1
   704  0006F4  C00A F157          	movff	10,?___flmul+2
   705  0006F8  C00B F158          	movff	11,?___flmul+3
   706  0006FC  EC2F  F00D         	call	___flmul	;wreg free
   707  000700  C155  F100         	movff	?___flmul,??_measure_inductance
   708  000704  C156  F101         	movff	?___flmul+1,??_measure_inductance+1
   709  000708  C157  F102         	movff	?___flmul+2,??_measure_inductance+2
   710  00070C  C158  F103         	movff	?___flmul+3,??_measure_inductance+3
   711  000710  C00C F159          	movff	12,?___flmul+4
   712  000714  C00D F15A          	movff	13,?___flmul+5
   713  000718  C00E F15B          	movff	14,?___flmul+6
   714  00071C  C00F F15C          	movff	15,?___flmul+7
   715  000720  C00C F155          	movff	12,?___flmul
   716  000724  C00D F156          	movff	13,?___flmul+1
   717  000728  C00E F157          	movff	14,?___flmul+2
   718  00072C  C00F F158          	movff	15,?___flmul+3
   719  000730  EC2F  F00D         	call	___flmul	;wreg free
   720  000734  C155  F104         	movff	?___flmul,??_measure_inductance+4
   721  000738  C156  F105         	movff	?___flmul+1,??_measure_inductance+5
   722  00073C  C157  F106         	movff	?___flmul+2,??_measure_inductance+6
   723  000740  C158  F107         	movff	?___flmul+3,??_measure_inductance+7
   724  000744  C008 F159          	movff	8,?___flmul+4
   725  000748  C009 F15A          	movff	9,?___flmul+5
   726  00074C  C00A F15B          	movff	10,?___flmul+6
   727  000750  C00B F15C          	movff	11,?___flmul+7
   728  000754  C008 F155          	movff	8,?___flmul
   729  000758  C009 F156          	movff	9,?___flmul+1
   730  00075C  C00A F157          	movff	10,?___flmul+2
   731  000760  C00B F158          	movff	11,?___flmul+3
   732  000764  EC2F  F00D         	call	___flmul	;wreg free
   733  000768  C155  F108         	movff	?___flmul,??_measure_inductance+8
   734  00076C  C156  F109         	movff	?___flmul+1,??_measure_inductance+9
   735  000770  C157  F10A         	movff	?___flmul+2,??_measure_inductance+10
   736  000774  C158  F10B         	movff	?___flmul+3,??_measure_inductance+11
   737  000778  C104  F143         	movff	??_measure_inductance+4,?___flsub+4
   738  00077C  C105  F144         	movff	??_measure_inductance+5,?___flsub+5
   739  000780  C106  F145         	movff	??_measure_inductance+6,?___flsub+6
   740  000784  C107  F146         	movff	??_measure_inductance+7,?___flsub+7
   741  000788  C108  F13F         	movff	??_measure_inductance+8,?___flsub
   742  00078C  C109  F140         	movff	??_measure_inductance+9,?___flsub+1
   743  000790  C10A  F141         	movff	??_measure_inductance+10,?___flsub+2
   744  000794  C10B  F142         	movff	??_measure_inductance+11,?___flsub+3
   745  000798  EC60  F012         	call	___flsub	;wreg free
   746  00079C  C13F  F10C         	movff	?___flsub,??_measure_inductance+12
   747  0007A0  C140  F10D         	movff	?___flsub+1,??_measure_inductance+13
   748  0007A4  C141  F10E         	movff	?___flsub+2,??_measure_inductance+14
   749  0007A8  C142  F10F         	movff	?___flsub+3,??_measure_inductance+15
   750  0007AC  C010 F143          	movff	16,?___flsub+4
   751  0007B0  C011 F144          	movff	17,?___flsub+5
   752  0007B4  C012 F145          	movff	18,?___flsub+6
   753  0007B8  C013 F146          	movff	19,?___flsub+7
   754  0007BC  C010 F13F          	movff	16,?___flsub
   755  0007C0  C011 F140          	movff	17,?___flsub+1
   756  0007C4  C012 F141          	movff	18,?___flsub+2
   757  0007C8  C013 F142          	movff	19,?___flsub+3
   758  0007CC  EC60  F012         	call	___flsub	;wreg free
   759  0007D0  C13F  F143         	movff	?___flsub,?___flsub+4
   760  0007D4  C140  F144         	movff	?___flsub+1,?___flsub+5
   761  0007D8  C141  F145         	movff	?___flsub+2,?___flsub+6
   762  0007DC  C142  F146         	movff	?___flsub+3,?___flsub+7
   763  0007E0  C100  F13F         	movff	??_measure_inductance,?___flsub
   764  0007E4  C101  F140         	movff	??_measure_inductance+1,?___flsub+1
   765  0007E8  C102  F141         	movff	??_measure_inductance+2,?___flsub+2
   766  0007EC  C103  F142         	movff	??_measure_inductance+3,?___flsub+3
   767  0007F0  EC60  F012         	call	___flsub	;wreg free
   768  0007F4  C13F  F159         	movff	?___flsub,?___flmul+4
   769  0007F8  C140  F15A         	movff	?___flsub+1,?___flmul+5
   770  0007FC  C141  F15B         	movff	?___flsub+2,?___flmul+6
   771  000800  C142  F15C         	movff	?___flsub+3,?___flmul+7
   772  000804  C10C  F155         	movff	??_measure_inductance+12,?___flmul
   773  000808  C10D  F156         	movff	??_measure_inductance+13,?___flmul+1
   774  00080C  C10E  F157         	movff	??_measure_inductance+14,?___flmul+2
   775  000810  C10F  F158         	movff	??_measure_inductance+15,?___flmul+3
   776  000814  EC2F  F00D         	call	___flmul	;wreg free
   777  000818  6B59               	clrf	(?___flmul+4)& (0+255),b
   778  00081A  0E40               	movlw	64
   779  00081C  6F5A               	movwf	(?___flmul+5)& (0+255),b
   780  00081E  0E1C               	movlw	28
   781  000820  6F5B               	movwf	(?___flmul+6)& (0+255),b
   782  000822  0E46               	movlw	70
   783  000824  6F5C               	movwf	(?___flmul+7)& (0+255),b
   784  000826  EC2F  F00D         	call	___flmul	;wreg free
   785  00082A  C155  F116         	movff	?___flmul,??_measure_inductance+22
   786  00082E  C156  F117         	movff	?___flmul+1,??_measure_inductance+23
   787  000832  C157  F118         	movff	?___flmul+2,??_measure_inductance+24
   788  000836  C158  F119         	movff	?___flmul+3,??_measure_inductance+25
   789                           ;LC-meter.c: 487: denominator = 4 * 3.1415926535
      +                          8979323846l * 3.14159265358979323846l * F1 * F1 
      +                          * F2 * F2 * F3 * F3 * CCal;
   790  00083A  C008 F159          	movff	8,?___flmul+4
   791  00083E  C009 F15A          	movff	9,?___flmul+5
   792  000842  C00A F15B          	movff	10,?___flmul+6
   793  000846  C00B F15C          	movff	11,?___flmul+7
   794  00084A  C008 F155          	movff	8,?___flmul
   795  00084E  C009 F156          	movff	9,?___flmul+1
   796  000852  C00A F157          	movff	10,?___flmul+2
   797  000856  C00B F158          	movff	11,?___flmul+3
   798  00085A  EC2F  F00D         	call	___flmul	;wreg free
   799  00085E  C010 F159          	movff	16,?___flmul+4
   800  000862  C011 F15A          	movff	17,?___flmul+5
   801  000866  C012 F15B          	movff	18,?___flmul+6
   802  00086A  C013 F15C          	movff	19,?___flmul+7
   803  00086E  EC2F  F00D         	call	___flmul	;wreg free
   804  000872  C010 F159          	movff	16,?___flmul+4
   805  000876  C011 F15A          	movff	17,?___flmul+5
   806  00087A  C012 F15B          	movff	18,?___flmul+6
   807  00087E  C013 F15C          	movff	19,?___flmul+7
   808  000882  EC2F  F00D         	call	___flmul	;wreg free
   809  000886  C00C F159          	movff	12,?___flmul+4
   810  00088A  C00D F15A          	movff	13,?___flmul+5
   811  00088E  C00E F15B          	movff	14,?___flmul+6
   812  000892  C00F F15C          	movff	15,?___flmul+7
   813  000896  EC2F  F00D         	call	___flmul	;wreg free
   814  00089A  C00C F159          	movff	12,?___flmul+4
   815  00089E  C00D F15A          	movff	13,?___flmul+5
   816  0008A2  C00E F15B          	movff	14,?___flmul+6
   817  0008A6  C00F F15C          	movff	15,?___flmul+7
   818  0008AA  EC2F  F00D         	call	___flmul	;wreg free
   819  0008AE  C000 F159          	movff	0,?___flmul+4
   820  0008B2  C001 F15A          	movff	1,?___flmul+5
   821  0008B6  C002 F15B          	movff	2,?___flmul+6
   822  0008BA  C003 F15C          	movff	3,?___flmul+7
   823  0008BE  EC2F  F00D         	call	___flmul	;wreg free
   824  0008C2  0EE6               	movlw	230
   825  0008C4  6F59               	movwf	(?___flmul+4)& (0+255),b
   826  0008C6  0EE9               	movlw	233
   827  0008C8  6F5A               	movwf	(?___flmul+5)& (0+255),b
   828  0008CA  0E1D               	movlw	29
   829  0008CC  6F5B               	movwf	(?___flmul+6)& (0+255),b
   830  0008CE  0E42               	movlw	66
   831  0008D0  6F5C               	movwf	(?___flmul+7)& (0+255),b
   832  0008D2  EC2F  F00D         	call	___flmul	;wreg free
   833  0008D6  C155  F112         	movff	?___flmul,??_measure_inductance+18
   834  0008DA  C156  F113         	movff	?___flmul+1,??_measure_inductance+19
   835  0008DE  C157  F114         	movff	?___flmul+2,??_measure_inductance+20
   836  0008E2  C158  F115         	movff	?___flmul+3,??_measure_inductance+21
   837                           ;LC-meter.c: 489: Lin = (numerator / denominator
      +                          ) * 1e+15l;
   838  0008E6  C112  F13D         	movff	??_measure_inductance+18,?___fldiv+4
   839  0008EA  C113  F13E         	movff	??_measure_inductance+19,?___fldiv+5
   840  0008EE  C114  F13F         	movff	??_measure_inductance+20,?___fldiv+6
   841  0008F2  C115  F140         	movff	??_measure_inductance+21,?___fldiv+7
   842  0008F6  C116  F139         	movff	??_measure_inductance+22,?___fldiv
   843  0008FA  C117  F13A         	movff	??_measure_inductance+23,?___fldiv+1
   844  0008FE  C118  F13B         	movff	??_measure_inductance+24,?___fldiv+2
   845  000902  C119  F13C         	movff	??_measure_inductance+25,?___fldiv+3
   846  000906  ECFF  F00D         	call	___fldiv	;wreg free
   847  00090A  C139  F155         	movff	?___fldiv,?___flmul
   848  00090E  C13A  F156         	movff	?___fldiv+1,?___flmul+1
   849  000912  C13B  F157         	movff	?___fldiv+2,?___flmul+2
   850  000916  C13C  F158         	movff	?___fldiv+3,?___flmul+3
   851  00091A  0EA9               	movlw	169
   852  00091C  6F59               	movwf	(?___flmul+4)& (0+255),b
   853  00091E  0E5F               	movlw	95
   854  000920  6F5A               	movwf	(?___flmul+5)& (0+255),b
   855  000922  0E63               	movlw	99
   856  000924  6F5B               	movwf	(?___flmul+6)& (0+255),b
   857  000926  0E58               	movlw	88
   858  000928  6F5C               	movwf	(?___flmul+7)& (0+255),b
   859  00092A  EC2F  F00D         	call	___flmul	;wreg free
   860  00092E  C155  F11A         	movff	?___flmul,??_measure_inductance+26
   861  000932  C156  F11B         	movff	?___flmul+1,??_measure_inductance+27
   862  000936  C157  F11C         	movff	?___flmul+2,??_measure_inductance+28
   863  00093A  C158  F11D         	movff	?___flmul+3,??_measure_inductance+29
   864                           ;LC-meter.c: 491: if(Lin > 999) {
   865  00093E  C11A  F147         	movff	??_measure_inductance+26,?___flge+4
   866  000942  C11B  F148         	movff	??_measure_inductance+27,?___flge+5
   867  000946  C11C  F149         	movff	??_measure_inductance+28,?___flge+6
   868  00094A  C11D  F14A         	movff	??_measure_inductance+29,?___flge+7
   869  00094E  6B43               	clrf	?___flge& (0+255),b
   870  000950  0EC0               	movlw	192
   871  000952  6F44               	movwf	(?___flge+1)& (0+255),b
   872  000954  0E79               	movlw	121
   873  000956  6F45               	movwf	(?___flge+2)& (0+255),b
   874  000958  0E44               	movlw	68
   875  00095A  6F46               	movwf	(?___flge+3)& (0+255),b
   876  00095C  EC81  F011         	call	___flge	;wreg free
   877  000960  E253               	bc	l863
   878                           ;LC-meter.c: 492: if(Lin > (999e+03l)) {
   879  000962  C11A  F147         	movff	??_measure_inductance+26,?___flge+4
   880  000966  C11B  F148         	movff	??_measure_inductance+27,?___flge+5
   881  00096A  C11C  F149         	movff	??_measure_inductance+28,?___flge+6
   882  00096E  C11D  F14A         	movff	??_measure_inductance+29,?___flge+7
   883  000972  0E80               	movlw	128
   884  000974  6F43               	movwf	?___flge& (0+255),b
   885  000976  0EE5               	movlw	229
   886  000978  6F44               	movwf	(?___flge+1)& (0+255),b
   887  00097A  0E73               	movlw	115
   888  00097C  6F45               	movwf	(?___flge+2)& (0+255),b
   889  00097E  0E49               	movlw	73
   890  000980  6F46               	movwf	(?___flge+3)& (0+255),b
   891  000982  EC81  F011         	call	___flge	;wreg free
   892  000986  E232               	bc	l864
   893                           ;LC-meter.c: 493: if(Lin > (999e+06l)) {
   894  000988  C11A  F147         	movff	??_measure_inductance+26,?___flge+4
   895  00098C  C11B  F148         	movff	??_measure_inductance+27,?___flge+5
   896  000990  C11C  F149         	movff	??_measure_inductance+28,?___flge+6
   897  000994  C11D  F14A         	movff	??_measure_inductance+29,?___flge+7
   898  000998  0E1F               	movlw	31
   899  00099A  6F43               	movwf	?___flge& (0+255),b
   900  00099C  0E2E               	movlw	46
   901  00099E  6F44               	movwf	(?___flge+1)& (0+255),b
   902  0009A0  0E6E               	movlw	110
   903  0009A2  6F45               	movwf	(?___flge+2)& (0+255),b
   904  0009A4  0E4E               	movlw	78
   905  0009A6  6F46               	movwf	(?___flge+3)& (0+255),b
   906  0009A8  EC81  F011         	call	___flge	;wreg free
   907  0009AC  E210               	bc	l865
   908                           ;LC-meter.c: 494: Lin = Lin / (1e+09l);
   909  0009AE  0E28               	movlw	40
   910  0009B0  6F20               	movwf	(?___asfldiv+2)& (0+255),b
   911  0009B2  0E6B               	movlw	107
   912  0009B4  6F21               	movwf	(?___asfldiv+3)& (0+255),b
   913  0009B6  0E6E               	movlw	110
   914  0009B8  6F22               	movwf	(?___asfldiv+4)& (0+255),b
   915  0009BA  0E4E               	movlw	78
   916  0009BC  6F23               	movwf	(?___asfldiv+5)& (0+255),b
   917  0009BE  0E1A               	movlw	low (??_measure_inductance+26)
   918  0009C0  6F1E               	movwf	?___asfldiv& (0+255),b
   919  0009C2  0E01               	movlw	high (??_measure_inductance+26)
   920  0009C4  6F1F               	movwf	(?___asfldiv+1)& (0+255),b
   921  0009C6  EC19  F012         	call	___asfldiv	;wreg free
   922                           ;LC-meter.c: 495: unit = 0;
   923  0009CA  6AE1               	clrf	fsr1l,c
   924                           ;LC-meter.c: 496: } else {
   925  0009CC  D020               	goto	l868
   926  0009CE                     l865:
   927                           ; BSR set to: 1
   928                           ;LC-meter.c: 497: Lin = Lin / (1e+06l);
   929  0009CE  6B20               	clrf	(?___asfldiv+2)& (0+255),b
   930  0009D0  0E24               	movlw	36
   931  0009D2  6F21               	movwf	(?___asfldiv+3)& (0+255),b
   932  0009D4  0E74               	movlw	116
   933  0009D6  6F22               	movwf	(?___asfldiv+4)& (0+255),b
   934  0009D8  0E49               	movlw	73
   935  0009DA  6F23               	movwf	(?___asfldiv+5)& (0+255),b
   936  0009DC  0E1A               	movlw	low (??_measure_inductance+26)
   937  0009DE  6F1E               	movwf	?___asfldiv& (0+255),b
   938  0009E0  0E01               	movlw	high (??_measure_inductance+26)
   939  0009E2  6F1F               	movwf	(?___asfldiv+1)& (0+255),b
   940  0009E4  EC19  F012         	call	___asfldiv	;wreg free
   941                           ;LC-meter.c: 498: unit = 1;
   942  0009E8  0E01               	movlw	1
   943  0009EA  D00F               	goto	L2
   944                           ; BSR set to: 1
   945                           ;LC-meter.c: 499: }
   946                           ;LC-meter.c: 500: } else {
   947  0009EC                     l864:
   948                           ; BSR set to: 1
   949                           ;LC-meter.c: 501: Lin = Lin / 1e+03l;
   950  0009EC  6B20               	clrf	(?___asfldiv+2)& (0+255),b
   951  0009EE  6B21               	clrf	(?___asfldiv+3)& (0+255),b
   952  0009F0  0E7A               	movlw	122
   953  0009F2  6F22               	movwf	(?___asfldiv+4)& (0+255),b
   954  0009F4  0E44               	movlw	68
   955  0009F6  6F23               	movwf	(?___asfldiv+5)& (0+255),b
   956  0009F8  0E1A               	movlw	low (??_measure_inductance+26)
   957  0009FA  6F1E               	movwf	?___asfldiv& (0+255),b
   958  0009FC  0E01               	movlw	high (??_measure_inductance+26)
   959  0009FE  6F1F               	movwf	(?___asfldiv+1)& (0+255),b
   960  000A00  EC19  F012         	call	___asfldiv	;wreg free
   961                           ;LC-meter.c: 502: unit = 2;
   962  000A04  0E02               	movlw	2
   963  000A06  D001               	goto	L2
   964                           ; BSR set to: 1
   965                           ;LC-meter.c: 503: }
   966                           ;LC-meter.c: 504: } else
   967  000A08                     l863:
   968                           ; BSR set to: 1
   969                           ;LC-meter.c: 505: unit = 3;
   970  000A08  0E03               	movlw	3
   971  000A0A                     L2:
   972  000A0A  FFFF               	dw	65535	; assembler added errata NOP
   973  000A0C  6EE1               	movwf	fsr1l,c
   974  000A0E                     l868:
   975  000A0E  FFFF               	dw	65535	; assembler added errata NOP
   976                           ; BSR set to: 1
   977                           ;LC-meter.c: 507: Lin = Lin * 100;
   978  000A10  6B3B               	clrf	(?___asflmul+2)& (0+255),b
   979  000A12  6B3C               	clrf	(?___asflmul+3)& (0+255),b
   980  000A14  0EC8               	movlw	200
   981  000A16  6F3D               	movwf	(?___asflmul+4)& (0+255),b
   982  000A18  0E42               	movlw	66
   983  000A1A  6F3E               	movwf	(?___asflmul+5)& (0+255),b
   984  000A1C  0E1A               	movlw	low (??_measure_inductance+26)
   985  000A1E  6F39               	movwf	?___asflmul& (0+255),b
   986  000A20  0E01               	movlw	high (??_measure_inductance+26)
   987  000A22  6F3A               	movwf	(?___asflmul+1)& (0+255),b
   988  000A24  ECCF  F011         	call	___asflmul	;wreg free
   989                           ;LC-meter.c: 508: var = (unsigned short int)Lin;
   990  000A28  C11A  F143         	movff	??_measure_inductance+26,?___fltol
   991  000A2C  C11B  F144         	movff	??_measure_inductance+27,?___fltol+1
   992  000A30  C11C  F145         	movff	??_measure_inductance+28,?___fltol+2
   993  000A34  C11D  F146         	movff	??_measure_inductance+29,?___fltol+3
   994  000A38  EC02  F00F         	call	___fltol	;wreg free
   995  000A3C  C143  F110         	movff	?___fltol,??_measure_inductance+16
   996  000A40  C144  F111         	movff	?___fltol+1,??_measure_inductance+17
   997                           ;LC-meter.c: 510: print_reading(var);
   998  000A44  C110  F11E         	movff	??_measure_inductance+16,?_print_reading
   999  000A48  C111  F11F         	movff	??_measure_inductance+17,?_print_reading+
      +                          1
  1000  000A4C  EC12  F013         	call	_print_reading	;wreg free
  1001                           ;LC-meter.c: 511: print_unit(unit);
  1002  000A50  50E1               	movf	fsr1l,w,c
  1003  000A52  EF0F  F013         	goto	_print_unit
  1004                           ;LC-meter.c: 512: }
  1005                           ; BSR set to: 1
  1006  000A56  FFFF               	dw	65535	; errata NOP
  1007  000A58                     __end_of_measure_inductance:
  1008                           	opt stack 0
  1009                           
  1010                           	psect	text4
  1011                           ; =============== function _measure_inductance e
      +                          nds ============
  1012                           ; *************** function _measure_capacitance 
      +                          *****************
  1013                           ; Defined at:
  1014                           ;		line 391 in file "../../../src/LC-meter.c"
  1015                           ; Parameters:
  1016                           ;		None
  1017                           ; Auto variables:
  1018                           ;		unit        	       	type: unsigned char 
  1019                           ;		var         	       	type: unsigned short 
  1020                           ;		Cin         	       	type: unsigned short 
  1021                           ; Return value:
  1022                           ;		type: void 
  1023                           ;		size: 0
  1024                           ; Registers used:
  1025                           ;		wreg, fsr0l, fsr0h, fsr1l, fsr2l, status,2, s
      +                          tatus,0, pclat, tosl, tblptrl, tblptrh, tblptru,
      +                           tablat, prodl, prodh, cstack
  1026                           ; Tracked objects:
  1027                           ;		On entry : F/1
  1028                           ;		On exit  : F/1
  1029                           ;		Unchanged: 0/0
  1030                           ; Data sizes:
  1031                           ;		Autos:   14
  1032                           ;		Params:   0
  1033                           ;		Temp:     0
  1034                           ;		Total:   14
  1035                           ; This function calls:
  1036                           ;		_measure_freq
  1037                           ;		___lwtofl
  1038                           ;		_ser_puts
  1039                           ;		_format_xint32
  1040                           ;		_format_double
  1041                           ;		_ser_putch
  1042                           ;		___flge
  1043                           ;		___flmul
  1044                           ;		___flsub
  1045                           ;		___asfldiv
  1046                           ;		___asflmul
  1047                           ;		___fltol
  1048                           ;		_print_reading
  1049                           ;		_print_unit
  1050                           ; This function is called by:
  1051                           ;		_main
  1052                           ; This function uses a non-reentrant model
  1053                           ; 
  1054  000000                     
  1055                           ;LC-meter.c: 390: void
  1056                           ;LC-meter.c: 391: measure_capacitance() {
  1057  000A58                     _measure_capacitance:
  1058                           	opt stack 29
  1059                           ; BSR set to: 1
  1060  000A58  FFFF               	dw	65535
  1061  000A5A  EC50  F00F         	call	_measure_freq	;wreg free
  1062  000A5E  C11E  F108         	movff	?_measure_freq,??_measure_capacitance+8
  1063  000A62  C11F  F109         	movff	?_measure_freq+1,??_measure_capacitance+9
  1064                           ;LC-meter.c: 404: F3 = (double)var;
  1065  000A66  C108  F11E         	movff	??_measure_capacitance+8,?___lwtofl
  1066  000A6A  C109  F11F         	movff	??_measure_capacitance+9,?___lwtofl+1
  1067  000A6E  EC3E  F012         	call	___lwtofl	;wreg free
  1068  000A72  C11E  F00C         	movff	?___lwtofl,12
  1069  000A76  C11F  F00D         	movff	?___lwtofl+1,13
  1070  000A7A  C120  F00E         	movff	?___lwtofl+2,14
  1071  000A7E  C121  F00F         	movff	?___lwtofl+3,15
  1072                           ;LC-meter.c: 406: putchar_ptr = &ser_putch;
  1073  000A82  0100               	movlb	0	; () banked
  1074  000A84  0EA0               	movlw	low _ser_putch
  1075  000A86  6E47               	movwf	71,c
  1076  000A88  0E25               	movlw	high _ser_putch
  1077  000A8A  6E48               	movwf	72,c
  1078                           ;LC-meter.c: 407: ser_puts("var=");
  1079  000A8C  0E72               	movlw	STR_4& (0+255)
  1080  000A8E  ECB7  F012         	call	_ser_puts
  1081                           ;LC-meter.c: 408: format_xint32( var);
  1082  000A92  0101               	movlb	1	; () banked
  1083  000A94  C108  F10E         	movff	??_measure_capacitance+8,?_format_xint32
  1084  000A98  C109  F10F         	movff	??_measure_capacitance+9,?_format_xint32+
      +                          1
  1085  000A9C  6B10               	clrf	(?_format_xint32+2)& (0+255),b
  1086  000A9E  6B11               	clrf	(?_format_xint32+3)& (0+255),b
  1087  000AA0  EC69  F010         	call	_format_xint32	;wreg free
  1088                           ;LC-meter.c: 409: ser_puts("\r\nF1=");
  1089  000AA4  0E55               	movlw	STR_5& (0+255)
  1090  000AA6  ECB7  F012         	call	_ser_puts
  1091                           ;LC-meter.c: 410: format_double( F1);
  1092  000AAA  C008 F10E          	movff	8,?_format_double
  1093  000AAE  C009 F10F          	movff	9,?_format_double+1
  1094  000AB2  C00A F110          	movff	10,?_format_double+2
  1095  000AB6  C00B F111          	movff	11,?_format_double+3
  1096  000ABA  ECE9  F007         	call	_format_double	;wreg free
  1097                           ;LC-meter.c: 411: ser_putch(' ');
  1098  000ABE  0E20               	movlw	32
  1099  000AC0  ECD0  F012         	call	_ser_putch
  1100                           ;LC-meter.c: 412: format_xint32( *(unsigned long
      +                           int*)&F1);
  1101  000AC4  C008 F10E          	movff	8,?_format_xint32
  1102  000AC8  C009 F10F          	movff	9,?_format_xint32+1
  1103  000ACC  C00A F110          	movff	10,?_format_xint32+2
  1104  000AD0  C00B F111          	movff	11,?_format_xint32+3
  1105  000AD4  EC69  F010         	call	_format_xint32	;wreg free
  1106                           ;LC-meter.c: 413: ser_puts("\r\nF2=");
  1107  000AD8  0E61               	movlw	STR_6& (0+255)
  1108  000ADA  ECB7  F012         	call	_ser_puts
  1109                           ;LC-meter.c: 414: format_double( F2);
  1110  000ADE  C010 F10E          	movff	16,?_format_double
  1111  000AE2  C011 F10F          	movff	17,?_format_double+1
  1112  000AE6  C012 F110          	movff	18,?_format_double+2
  1113  000AEA  C013 F111          	movff	19,?_format_double+3
  1114  000AEE  ECE9  F007         	call	_format_double	;wreg free
  1115                           ;LC-meter.c: 415: ser_putch(' ');
  1116  000AF2  0E20               	movlw	32
  1117  000AF4  ECD0  F012         	call	_ser_putch
  1118                           ;LC-meter.c: 416: format_xint32( *(unsigned long
      +                           int*)&F2);
  1119  000AF8  C010 F10E          	movff	16,?_format_xint32
  1120  000AFC  C011 F10F          	movff	17,?_format_xint32+1
  1121  000B00  C012 F110          	movff	18,?_format_xint32+2
  1122  000B04  C013 F111          	movff	19,?_format_xint32+3
  1123  000B08  EC69  F010         	call	_format_xint32	;wreg free
  1124                           ;LC-meter.c: 417: ser_puts("\r\nF3=");
  1125  000B0C  0E5B               	movlw	STR_7& (0+255)
  1126  000B0E  ECB7  F012         	call	_ser_puts
  1127                           ;LC-meter.c: 418: format_double( F3);
  1128  000B12  C00C F10E          	movff	12,?_format_double
  1129  000B16  C00D F10F          	movff	13,?_format_double+1
  1130  000B1A  C00E F110          	movff	14,?_format_double+2
  1131  000B1E  C00F F111          	movff	15,?_format_double+3
  1132  000B22  ECE9  F007         	call	_format_double	;wreg free
  1133                           ;LC-meter.c: 419: ser_putch(' ');
  1134  000B26  0E20               	movlw	32
  1135  000B28  ECD0  F012         	call	_ser_putch
  1136                           ;LC-meter.c: 420: format_xint32( *(unsigned long
      +                           int*)&F3);
  1137  000B2C  C00C F10E          	movff	12,?_format_xint32
  1138  000B30  C00D F10F          	movff	13,?_format_xint32+1
  1139  000B34  C00E F110          	movff	14,?_format_xint32+2
  1140  000B38  C00F F111          	movff	15,?_format_xint32+3
  1141  000B3C  EC69  F010         	call	_format_xint32	;wreg free
  1142                           ;LC-meter.c: 421: ser_puts("\r\nCCal=");
  1143  000B40  0E4D               	movlw	STR_8& (0+255)
  1144  000B42  ECB7  F012         	call	_ser_puts
  1145                           ;LC-meter.c: 422: format_double( CCal);
  1146  000B46  C000 F10E          	movff	0,?_format_double
  1147  000B4A  C001 F10F          	movff	1,?_format_double+1
  1148  000B4E  C002 F110          	movff	2,?_format_double+2
  1149  000B52  C003 F111          	movff	3,?_format_double+3
  1150  000B56  ECE9  F007         	call	_format_double	;wreg free
  1151                           ;LC-meter.c: 423: ser_putch(' ');
  1152  000B5A  0E20               	movlw	32
  1153  000B5C  ECD0  F012         	call	_ser_putch
  1154                           ;LC-meter.c: 424: format_xint32( *(unsigned long
      +                           int*)&CCal);
  1155  000B60  C000 F10E          	movff	0,?_format_xint32
  1156  000B64  C001 F10F          	movff	1,?_format_xint32+1
  1157  000B68  C002 F110          	movff	2,?_format_xint32+2
  1158  000B6C  C003 F111          	movff	3,?_format_xint32+3
  1159  000B70  EC69  F010         	call	_format_xint32	;wreg free
  1160                           ;LC-meter.c: 425: ser_puts("\r\n");
  1161  000B74  0E6A               	movlw	(STR_1+3)& (0+255)
  1162  000B76  ECB7  F012         	call	_ser_puts
  1163                           ;LC-meter.c: 427: putchar_ptr = &output_putch;
  1164  000B7A  0100               	movlb	0	; () banked
  1165  000B7C  0E0A               	movlw	low _output_putch
  1166  000B7E  6E47               	movwf	71,c
  1167  000B80  0E26               	movlw	high _output_putch
  1168  000B82  6E48               	movwf	72,c
  1169                           ;LC-meter.c: 429: if(F3 > F1)
  1170  000B84  C00C F147          	movff	12,?___flge+4
  1171  000B88  C00D F148          	movff	13,?___flge+5
  1172  000B8C  C00E F149          	movff	14,?___flge+6
  1173  000B90  C00F F14A          	movff	15,?___flge+7
  1174  000B94  C008 F143          	movff	8,?___flge
  1175  000B98  C009 F144          	movff	9,?___flge+1
  1176  000B9C  C00A F145          	movff	10,?___flge+2
  1177  000BA0  C00B F146          	movff	11,?___flge+3
  1178  000BA4  EC81  F011         	call	___flge	;wreg free
  1179  000BA8  E208               	bc	l854
  1180                           ;LC-meter.c: 430: F3 = F1;
  1181  000BAA  C008 F00C          	movff	8,12
  1182  000BAE  C009 F00D          	movff	9,13
  1183  000BB2  C00A F00E          	movff	10,14
  1184  000BB6  C00B F00F          	movff	11,15
  1185  000BBA                     l854:
  1186                           ; BSR set to: 1
  1187                           ;LC-meter.c: 432: Cin = F2 * F2 * (F1 * F1 - F3 
      +                          * F3) * CCal;
  1188  000BBA  C00C F159          	movff	12,?___flmul+4
  1189  000BBE  C00D F15A          	movff	13,?___flmul+5
  1190  000BC2  C00E F15B          	movff	14,?___flmul+6
  1191  000BC6  C00F F15C          	movff	15,?___flmul+7
  1192  000BCA  C00C F155          	movff	12,?___flmul
  1193  000BCE  C00D F156          	movff	13,?___flmul+1
  1194  000BD2  C00E F157          	movff	14,?___flmul+2
  1195  000BD6  C00F F158          	movff	15,?___flmul+3
  1196  000BDA  EC2F  F00D         	call	___flmul	;wreg free
  1197  000BDE  C155  F100         	movff	?___flmul,??_measure_capacitance
  1198  000BE2  C156  F101         	movff	?___flmul+1,??_measure_capacitance+1
  1199  000BE6  C157  F102         	movff	?___flmul+2,??_measure_capacitance+2
  1200  000BEA  C158  F103         	movff	?___flmul+3,??_measure_capacitance+3
  1201  000BEE  C008 F159          	movff	8,?___flmul+4
  1202  000BF2  C009 F15A          	movff	9,?___flmul+5
  1203  000BF6  C00A F15B          	movff	10,?___flmul+6
  1204  000BFA  C00B F15C          	movff	11,?___flmul+7
  1205  000BFE  C008 F155          	movff	8,?___flmul
  1206  000C02  C009 F156          	movff	9,?___flmul+1
  1207  000C06  C00A F157          	movff	10,?___flmul+2
  1208  000C0A  C00B F158          	movff	11,?___flmul+3
  1209  000C0E  EC2F  F00D         	call	___flmul	;wreg free
  1210  000C12  C155  F104         	movff	?___flmul,??_measure_capacitance+4
  1211  000C16  C156  F105         	movff	?___flmul+1,??_measure_capacitance+5
  1212  000C1A  C157  F106         	movff	?___flmul+2,??_measure_capacitance+6
  1213  000C1E  C158  F107         	movff	?___flmul+3,??_measure_capacitance+7
  1214  000C22  C100  F143         	movff	??_measure_capacitance,?___flsub+4
  1215  000C26  C101  F144         	movff	??_measure_capacitance+1,?___flsub+5
  1216  000C2A  C102  F145         	movff	??_measure_capacitance+2,?___flsub+6
  1217  000C2E  C103  F146         	movff	??_measure_capacitance+3,?___flsub+7
  1218  000C32  C104  F13F         	movff	??_measure_capacitance+4,?___flsub
  1219  000C36  C105  F140         	movff	??_measure_capacitance+5,?___flsub+1
  1220  000C3A  C106  F141         	movff	??_measure_capacitance+6,?___flsub+2
  1221  000C3E  C107  F142         	movff	??_measure_capacitance+7,?___flsub+3
  1222  000C42  EC60  F012         	call	___flsub	;wreg free
  1223  000C46  C13F  F155         	movff	?___flsub,?___flmul
  1224  000C4A  C140  F156         	movff	?___flsub+1,?___flmul+1
  1225  000C4E  C141  F157         	movff	?___flsub+2,?___flmul+2
  1226  000C52  C142  F158         	movff	?___flsub+3,?___flmul+3
  1227  000C56  C010 F159          	movff	16,?___flmul+4
  1228  000C5A  C011 F15A          	movff	17,?___flmul+5
  1229  000C5E  C012 F15B          	movff	18,?___flmul+6
  1230  000C62  C013 F15C          	movff	19,?___flmul+7
  1231  000C66  EC2F  F00D         	call	___flmul	;wreg free
  1232  000C6A  C010 F159          	movff	16,?___flmul+4
  1233  000C6E  C011 F15A          	movff	17,?___flmul+5
  1234  000C72  C012 F15B          	movff	18,?___flmul+6
  1235  000C76  C013 F15C          	movff	19,?___flmul+7
  1236  000C7A  EC2F  F00D         	call	___flmul	;wreg free
  1237  000C7E  C000 F159          	movff	0,?___flmul+4
  1238  000C82  C001 F15A          	movff	1,?___flmul+5
  1239  000C86  C002 F15B          	movff	2,?___flmul+6
  1240  000C8A  C003 F15C          	movff	3,?___flmul+7
  1241  000C8E  EC2F  F00D         	call	___flmul	;wreg free
  1242  000C92  C155  F10A         	movff	?___flmul,??_measure_capacitance+10
  1243  000C96  C156  F10B         	movff	?___flmul+1,??_measure_capacitance+11
  1244  000C9A  C157  F10C         	movff	?___flmul+2,??_measure_capacitance+12
  1245  000C9E  C158  F10D         	movff	?___flmul+3,??_measure_capacitance+13
  1246                           ;LC-meter.c: 436: ser_puts("Cin=");
  1247  000CA2  0E6D               	movlw	STR_10& (0+255)
  1248  000CA4  ECB7  F012         	call	_ser_puts
  1249                           ;LC-meter.c: 437: format_double( Cin);
  1250  000CA8  C10A  F10E         	movff	??_measure_capacitance+10,?_format_double
  1251  000CAC  C10B  F10F         	movff	??_measure_capacitance+11,?_format_double
      +                          +1
  1252  000CB0  C10C  F110         	movff	??_measure_capacitance+12,?_format_double
      +                          +2
  1253  000CB4  C10D  F111         	movff	??_measure_capacitance+13,?_format_double
      +                          +3
  1254  000CB8  ECE9  F007         	call	_format_double	;wreg free
  1255                           ;LC-meter.c: 438: ser_putch(' ');
  1256  000CBC  0E20               	movlw	32
  1257  000CBE  ECD0  F012         	call	_ser_putch
  1258                           ;LC-meter.c: 439: format_xint32( *(unsigned long
      +                           int*)&Cin);
  1259  000CC2  C10A  F10E         	movff	??_measure_capacitance+10,?_format_xint32
  1260  000CC6  C10B  F10F         	movff	??_measure_capacitance+11,?_format_xint32
      +                          +1
  1261  000CCA  C10C  F110         	movff	??_measure_capacitance+12,?_format_xint32
      +                          +2
  1262  000CCE  C10D  F111         	movff	??_measure_capacitance+13,?_format_xint32
      +                          +3
  1263  000CD2  EC69  F010         	call	_format_xint32	;wreg free
  1264                           ;LC-meter.c: 440: ser_puts("\r\n");
  1265  000CD6  0E6A               	movlw	(STR_1+3)& (0+255)
  1266  000CD8  ECB7  F012         	call	_ser_puts
  1267                           ;LC-meter.c: 442: if(Cin > 999) {
  1268  000CDC  C10A  F147         	movff	??_measure_capacitance+10,?___flge+4
  1269  000CE0  C10B  F148         	movff	??_measure_capacitance+11,?___flge+5
  1270  000CE4  C10C  F149         	movff	??_measure_capacitance+12,?___flge+6
  1271  000CE8  C10D  F14A         	movff	??_measure_capacitance+13,?___flge+7
  1272  000CEC  6B43               	clrf	?___flge& (0+255),b
  1273  000CEE  0EC0               	movlw	192
  1274  000CF0  6F44               	movwf	(?___flge+1)& (0+255),b
  1275  000CF2  0E79               	movlw	121
  1276  000CF4  6F45               	movwf	(?___flge+2)& (0+255),b
  1277  000CF6  0E44               	movlw	68
  1278  000CF8  6F46               	movwf	(?___flge+3)& (0+255),b
  1279  000CFA  EC81  F011         	call	___flge	;wreg free
  1280  000CFE  E253               	bc	l855
  1281                           ;LC-meter.c: 443: if(Cin > (999e+03l)) {
  1282  000D00  C10A  F147         	movff	??_measure_capacitance+10,?___flge+4
  1283  000D04  C10B  F148         	movff	??_measure_capacitance+11,?___flge+5
  1284  000D08  C10C  F149         	movff	??_measure_capacitance+12,?___flge+6
  1285  000D0C  C10D  F14A         	movff	??_measure_capacitance+13,?___flge+7
  1286  000D10  0E80               	movlw	128
  1287  000D12  6F43               	movwf	?___flge& (0+255),b
  1288  000D14  0EE5               	movlw	229
  1289  000D16  6F44               	movwf	(?___flge+1)& (0+255),b
  1290  000D18  0E73               	movlw	115
  1291  000D1A  6F45               	movwf	(?___flge+2)& (0+255),b
  1292  000D1C  0E49               	movlw	73
  1293  000D1E  6F46               	movwf	(?___flge+3)& (0+255),b
  1294  000D20  EC81  F011         	call	___flge	;wreg free
  1295  000D24  E232               	bc	l856
  1296                           ;LC-meter.c: 444: if(Cin > (999e+06l)) {
  1297  000D26  C10A  F147         	movff	??_measure_capacitance+10,?___flge+4
  1298  000D2A  C10B  F148         	movff	??_measure_capacitance+11,?___flge+5
  1299  000D2E  C10C  F149         	movff	??_measure_capacitance+12,?___flge+6
  1300  000D32  C10D  F14A         	movff	??_measure_capacitance+13,?___flge+7
  1301  000D36  0E1F               	movlw	31
  1302  000D38  6F43               	movwf	?___flge& (0+255),b
  1303  000D3A  0E2E               	movlw	46
  1304  000D3C  6F44               	movwf	(?___flge+1)& (0+255),b
  1305  000D3E  0E6E               	movlw	110
  1306  000D40  6F45               	movwf	(?___flge+2)& (0+255),b
  1307  000D42  0E4E               	movlw	78
  1308  000D44  6F46               	movwf	(?___flge+3)& (0+255),b
  1309  000D46  EC81  F011         	call	___flge	;wreg free
  1310  000D4A  E210               	bc	l857
  1311                           ;LC-meter.c: 445: Cin = Cin / (1e+09l);
  1312  000D4C  0E28               	movlw	40
  1313  000D4E  6F20               	movwf	(?___asfldiv+2)& (0+255),b
  1314  000D50  0E6B               	movlw	107
  1315  000D52  6F21               	movwf	(?___asfldiv+3)& (0+255),b
  1316  000D54  0E6E               	movlw	110
  1317  000D56  6F22               	movwf	(?___asfldiv+4)& (0+255),b
  1318  000D58  0E4E               	movlw	78
  1319  000D5A  6F23               	movwf	(?___asfldiv+5)& (0+255),b
  1320  000D5C  0E0A               	movlw	low (??_measure_capacitance+10)
  1321  000D5E  6F1E               	movwf	?___asfldiv& (0+255),b
  1322  000D60  0E01               	movlw	high (??_measure_capacitance+10)
  1323  000D62  6F1F               	movwf	(?___asfldiv+1)& (0+255),b
  1324  000D64  EC19  F012         	call	___asfldiv	;wreg free
  1325                           ;LC-meter.c: 446: unit = 4;
  1326  000D68  0E04               	movlw	4
  1327  000D6A  D01E               	goto	L4
  1328                           ;LC-meter.c: 447: } else {
  1329  000D6C                     l857:
  1330                           ; BSR set to: 1
  1331                           ;LC-meter.c: 448: Cin = Cin / (1e+06l);
  1332  000D6C  6B20               	clrf	(?___asfldiv+2)& (0+255),b
  1333  000D6E  0E24               	movlw	36
  1334  000D70  6F21               	movwf	(?___asfldiv+3)& (0+255),b
  1335  000D72  0E74               	movlw	116
  1336  000D74  6F22               	movwf	(?___asfldiv+4)& (0+255),b
  1337  000D76  0E49               	movlw	73
  1338  000D78  6F23               	movwf	(?___asfldiv+5)& (0+255),b
  1339  000D7A  0E0A               	movlw	low (??_measure_capacitance+10)
  1340  000D7C  6F1E               	movwf	?___asfldiv& (0+255),b
  1341  000D7E  0E01               	movlw	high (??_measure_capacitance+10)
  1342  000D80  6F1F               	movwf	(?___asfldiv+1)& (0+255),b
  1343  000D82  EC19  F012         	call	___asfldiv	;wreg free
  1344                           ;LC-meter.c: 449: unit = 5;
  1345  000D86  0E05               	movlw	5
  1346  000D88  D00F               	goto	L4
  1347                           ; BSR set to: 1
  1348                           ;LC-meter.c: 450: }
  1349                           ;LC-meter.c: 451: } else {
  1350  000D8A                     l856:
  1351                           ; BSR set to: 1
  1352                           ;LC-meter.c: 452: Cin = Cin / 1e+03l;
  1353  000D8A  6B20               	clrf	(?___asfldiv+2)& (0+255),b
  1354  000D8C  6B21               	clrf	(?___asfldiv+3)& (0+255),b
  1355  000D8E  0E7A               	movlw	122
  1356  000D90  6F22               	movwf	(?___asfldiv+4)& (0+255),b
  1357  000D92  0E44               	movlw	68
  1358  000D94  6F23               	movwf	(?___asfldiv+5)& (0+255),b
  1359  000D96  0E0A               	movlw	low (??_measure_capacitance+10)
  1360  000D98  6F1E               	movwf	?___asfldiv& (0+255),b
  1361  000D9A  0E01               	movlw	high (??_measure_capacitance+10)
  1362  000D9C  6F1F               	movwf	(?___asfldiv+1)& (0+255),b
  1363  000D9E  EC19  F012         	call	___asfldiv	;wreg free
  1364                           ;LC-meter.c: 453: unit = 6;
  1365  000DA2  0E06               	movlw	6
  1366  000DA4  D001               	goto	L4
  1367                           ; BSR set to: 1
  1368                           ;LC-meter.c: 454: }
  1369                           ;LC-meter.c: 455: } else
  1370  000DA6                     l855:
  1371                           ; BSR set to: 1
  1372                           ;LC-meter.c: 456: unit = 7;
  1373  000DA6  0E07               	movlw	7
  1374  000DA8                     L4:
  1375  000DA8  FFFF               	dw	65535	; assembler added errata NOP
  1376  000DAA  6EE1               	movwf	fsr1l,c
  1377                           ; BSR set to: 1
  1378                           ;LC-meter.c: 458: Cin = Cin * 100;
  1379  000DAC  6B3B               	clrf	(?___asflmul+2)& (0+255),b
  1380  000DAE  6B3C               	clrf	(?___asflmul+3)& (0+255),b
  1381  000DB0  0EC8               	movlw	200
  1382  000DB2  6F3D               	movwf	(?___asflmul+4)& (0+255),b
  1383  000DB4  0E42               	movlw	66
  1384  000DB6  6F3E               	movwf	(?___asflmul+5)& (0+255),b
  1385  000DB8  0E0A               	movlw	low (??_measure_capacitance+10)
  1386  000DBA  6F39               	movwf	?___asflmul& (0+255),b
  1387  000DBC  0E01               	movlw	high (??_measure_capacitance+10)
  1388  000DBE  6F3A               	movwf	(?___asflmul+1)& (0+255),b
  1389  000DC0  ECCF  F011         	call	___asflmul	;wreg free
  1390                           ;LC-meter.c: 459: var = (unsigned short int)Cin;
  1391  000DC4  C10A  F143         	movff	??_measure_capacitance+10,?___fltol
  1392  000DC8  C10B  F144         	movff	??_measure_capacitance+11,?___fltol+1
  1393  000DCC  C10C  F145         	movff	??_measure_capacitance+12,?___fltol+2
  1394  000DD0  C10D  F146         	movff	??_measure_capacitance+13,?___fltol+3
  1395  000DD4  EC02  F00F         	call	___fltol	;wreg free
  1396  000DD8  C143  F108         	movff	?___fltol,??_measure_capacitance+8
  1397  000DDC  C144  F109         	movff	?___fltol+1,??_measure_capacitance+9
  1398                           ;LC-meter.c: 461: print_reading(var);
  1399  000DE0  C108  F11E         	movff	??_measure_capacitance+8,?_print_reading
  1400  000DE4  C109  F11F         	movff	??_measure_capacitance+9,?_print_reading+
      +                          1
  1401  000DE8  EC12  F013         	call	_print_reading	;wreg free
  1402                           ;LC-meter.c: 462: print_unit(unit);
  1403  000DEC  50E1               	movf	fsr1l,w,c
  1404  000DEE  EF0F  F013         	goto	_print_unit
  1405                           ;LC-meter.c: 463: }
  1406                           ; BSR set to: 1
  1407  000DF2  FFFF               	dw	65535	; errata NOP
  1408  000DF4                     __end_of_measure_capacitance:
  1409                           	opt stack 0
  1410                           
  1411                           	psect	text5
  1412                           ; =============== function _measure_capacitance 
      +                          ends ============
  1413                           ; *************** function _timer2_init ********
      +                          *********
  1414                           ; Defined at:
  1415                           ;		line 81 in file "../../../lib/timer.c"
  1416                           ; Parameters:
  1417                           ;		ps_mode        size:   1reg:   wre	type: unsi
      +                          gned char 
  1418                           ; Auto variables:
  1419                           ;		postscaler  	       	type: unsigned char 
  1420                           ;		ps          	       	type: unsigned char 
  1421                           ; Return value:
  1422                           ;		type: void 
  1423                           ;		size: 0
  1424                           ; Registers used:
  1425                           ;		wreg, fsr0l, fsr1l, fsr2l, status,2, status,0
  1426                           ; Tracked objects:
  1427                           ;		On entry : 0/0
  1428                           ;		On exit  : 0/0
  1429                           ;		Unchanged: FFFFFFF0/0
  1430                           ; Data sizes:
  1431                           ;		Autos:    0
  1432                           ;		Params:   0
  1433                           ;		Temp:     1
  1434                           ;		Total:    1
  1435                           ; This function calls:
  1436                           ;		Nothing
  1437                           ; This function is called by:
  1438                           ;		_main
  1439                           ; This function uses a non-reentrant model
  1440                           ; 
  1441  000000                     
  1442                           ;timer.c: 80: void
  1443                           ;timer.c: 81: timer2_init(unsigned char ps_mode)
      +                           {
  1444  0021A2                     _timer2_init:
  1445                           	opt stack 29
  1446                           ; BSR set to: ?
  1447  0021A2  FFFF               	dw	65535
  1448                           ; timer2_init@ps_mode loaded to fsr1l
  1449  0021A4  CFE8 FFE1          	movff	wreg,fsr1l
  1450  0021A8  50E1               	movf	fsr1l,w,c
  1451  0021AA  0B0F               	andlw	15
  1452  0021AC  6ED9               	movwf	fsr2l,c
  1453                           ;timer.c: 83: unsigned char postscaler = 0;
  1454  0021AE  6AE9               	clrf	fsr0l,c
  1455                           ;timer.c: 86: TOUTPS0 = postscaler & 1;
  1456  0021B0  96CA               	bcf	4042,3,c	;volatile
  1457                           ;timer.c: 87: TOUTPS1 = (postscaler >> 1) & 1;
  1458  0021B2  98CA               	bcf	4042,4,c	;volatile
  1459                           ;timer.c: 88: TOUTPS2 = (postscaler >> 2) & 1;
  1460  0021B4  9ACA               	bcf	4042,5,c	;volatile
  1461                           ;timer.c: 90: T2CKPS0 = (ps >> 1) & 1;
  1462  0021B6  CFD9 F100          	movff	fsr2l,??_timer2_init
  1463  0021BA  90D8               	bcf	status,0,c
  1464  0021BC  0101               	movlb	1	; () banked
  1465  0021BE  3300               	rrcf	??_timer2_init& (0+255),f,b
  1466  0021C0  3100               	rrcf	??_timer2_init& (0+255),w,b
  1467  0021C2  A0D8               	btfss	status,0,c
  1468  0021C4  D001               	bra	u1365
  1469  0021C6  80CA               	bsf	4042,0,c	;volatile
  1470  0021C8                     u1365:
  1471  0021C8  B0D8               	btfsc	status,0,c
  1472  0021CA  D001               	bra	u1366
  1473  0021CC  90CA               	bcf	4042,0,c	;volatile
  1474  0021CE                     u1366:
  1475                           ;timer.c: 91: T2CKPS1 = (ps >> 2) & 1;
  1476  0021CE  CFD9 F100          	movff	fsr2l,??_timer2_init
  1477  0021D2  90D8               	bcf	status,0,c
  1478  0021D4  3300               	rrcf	??_timer2_init& (0+255),f,b
  1479  0021D6  90D8               	bcf	status,0,c
  1480  0021D8  3300               	rrcf	??_timer2_init& (0+255),f,b
  1481  0021DA  3100               	rrcf	??_timer2_init& (0+255),w,b
  1482  0021DC  A0D8               	btfss	status,0,c
  1483  0021DE  D001               	bra	u1375
  1484  0021E0  82CA               	bsf	4042,1,c	;volatile
  1485  0021E2                     u1375:
  1486  0021E2  B0D8               	btfsc	status,0,c
  1487  0021E4  D001               	bra	u1376
  1488  0021E6  92CA               	bcf	4042,1,c	;volatile
  1489  0021E8                     u1376:
  1490                           ;timer.c: 93: TMR2 = 0;
  1491  0021E8  6ACC               	clrf	4044,c	;volatile
  1492                           ;timer.c: 95: TMR2ON = 1;
  1493  0021EA  84CA               	bsf	4042,2,c	;volatile
  1494                           ;timer.c: 97: TMR2IF = 0;
  1495  0021EC  929E               	bcf	3998,1,c	;volatile
  1496                           ;timer.c: 98: TMR2IE = !!(ps_mode & 0x80);
  1497  0021EE  AEE1               	btfss	fsr1l,7,c
  1498  0021F0  D002               	goto	u1380
  1499  0021F2  829D               	bsf	3997,1,c	;volatile
  1500  0021F4  D002               	goto	u1395
  1501  0021F6                     u1380:
  1502  0021F6  FFFF               	dw	65535	; assembler added errata NOP
  1503  0021F8  929D               	bcf	3997,1,c	;volatile
  1504  0021FA                     u1395:
  1505  0021FA  FFFF               	dw	65535	; assembler added errata NOP
  1506                           ;timer.c: 99: }
  1507                           ; BSR set to: ?
  1508  0021FC  0012               	return	
  1509  0021FE  FFFF               	dw	65535	; errata NOP
  1510  002200                     __end_of_timer2_init:
  1511                           	opt stack 0
  1512                           
  1513                           	psect	text6
  1514                           ; =============== function _timer2_init ends ===
      +                          =========
  1515                           ; *************** function _ser_init ***********
      +                          ******
  1516                           ; Defined at:
  1517                           ;		line 125 in file "../../../lib/ser.c"
  1518                           ; Parameters:
  1519                           ;		None
  1520                           ; Auto variables:
  1521                           ;		None
  1522                           ; Return value:
  1523                           ;		type: void 
  1524                           ;		size: 0
  1525                           ; Registers used:
  1526                           ;		wreg, status,2
  1527                           ; Tracked objects:
  1528                           ;		On entry : F/1
  1529                           ;		On exit  : F/1
  1530                           ;		Unchanged: FFFFFFFF/0
  1531                           ; Data sizes:
  1532                           ;		Autos:    0
  1533                           ;		Params:   0
  1534                           ;		Temp:     0
  1535                           ;		Total:    0
  1536                           ; This function calls:
  1537                           ;		Nothing
  1538                           ; This function is called by:
  1539                           ;		_main
  1540                           ; This function uses a non-reentrant model
  1541                           ; 
  1542  000000                     
  1543                           ;ser.c: 124: void
  1544                           ;ser.c: 125: ser_init(void) {
  1545  0025CA                     _ser_init:
  1546                           	opt stack 29
  1547                           ; BSR set to: 1
  1548  0025CA  FFFF               	dw	65535
  1549  0025CC  8C94               	bsf	3988,6,c	;volatile
  1550                           ;ser.c: 129: LATC7 = 1;
  1551  0025CE  8E8B               	bsf	3979,7,c	;volatile
  1552                           ;ser.c: 131: BRGH = 1;
  1553  0025D0  84AC               	bsf	4012,2,c	;volatile
  1554                           ;ser.c: 136: SPBRG = ser_brg;
  1555  0025D2  0E1F               	movlw	31
  1556  0025D4  6EAF               	movwf	4015,c	;volatile
  1557                           ;ser.c: 139: TX9 = 0;
  1558  0025D6  9CAC               	bcf	4012,6,c	;volatile
  1559                           ;ser.c: 140: RX9 = 0;
  1560  0025D8  9CAB               	bcf	4011,6,c	;volatile
  1561                           ;ser.c: 142: SYNC = 0;
  1562  0025DA  98AC               	bcf	4012,4,c	;volatile
  1563                           ;ser.c: 143: SPEN = 1;
  1564  0025DC  8EAB               	bsf	4011,7,c	;volatile
  1565                           ;ser.c: 144: CREN = 1;
  1566  0025DE  88AB               	bsf	4011,4,c	;volatile
  1567                           ;ser.c: 145: TXIE = 0;
  1568  0025E0  989D               	bcf	3997,4,c	;volatile
  1569                           ;ser.c: 147: TXEN = 1;
  1570  0025E2  8AAC               	bsf	4012,5,c	;volatile
  1571                           ;ser.c: 148: PEIE = 1;
  1572  0025E4  8CF2               	bsf	intcon,6,c	;volatile
  1573                           ;ser.c: 150: rxiptr = rxoptr = txiptr = txoptr =
      +                           0;
  1574  0025E6  6A3C               	clrf	60,c	;volatile
  1575  0025E8  6A3A               	clrf	58,c	;volatile
  1576  0025EA  6A3E               	clrf	62,c	;volatile
  1577  0025EC  6A3B               	clrf	59,c	;volatile
  1578                           ;ser.c: 151: }
  1579                           ; BSR set to: 1
  1580  0025EE  0012               	return	
  1581  0025F0  FFFF               	dw	65535	; errata NOP
  1582  0025F2                     __end_of_ser_init:
  1583                           	opt stack 0
  1584                           
  1585                           	psect	text7
  1586                           ; =============== function _ser_init ends ======
      +                          ======
  1587                           ; *************** function _print_reading ******
      +                          ***********
  1588                           ; Defined at:
  1589                           ;		line 429 in file "../../../src/print.c"
  1590                           ; Parameters:
  1591                           ;		measurement    size:   2offs:   0	type: unsig
      +                          ned short 
  1592                           ; Auto variables:
  1593                           ;		None
  1594                           ; Return value:
  1595                           ;		type: void 
  1596                           ;		size: 0
  1597                           ; Registers used:
  1598                           ;		None
  1599                           ; Tracked objects:
  1600                           ;		On entry : F/1
  1601                           ;		On exit  : F/1
  1602                           ;		Unchanged: FFFFFFFF/0
  1603                           ; Data sizes:
  1604                           ;		Autos:    0
  1605                           ;		Params:   2
  1606                           ;		Temp:     0
  1607                           ;		Total:    2
  1608                           ; This function calls:
  1609                           ;		Nothing
  1610                           ; This function is called by:
  1611                           ;		_measure_capacitance
  1612                           ;		_measure_inductance
  1613                           ; This function uses a non-reentrant model
  1614                           ; 
  1615  000000                     
  1616                           ;print.c: 428: void
  1617                           ;print.c: 429: print_reading(unsigned short int 
      +                          measurement) {
  1618  002624                     _print_reading:
  1619                           	opt stack 28
  1620                           ; BSR set to: 1
  1621  002624  FFFF               	dw	65535
  1622                           ; BSR set to: 1
  1623  002626  0012               	return	
  1624  002628  FFFF               	dw	65535	; errata NOP
  1625  00262A                     __end_of_print_reading:
  1626                           	opt stack 0
  1627                           
  1628                           	psect	text8
  1629                           ; =============== function _print_reading ends =
      +                          ===========
  1630                           ; *************** function _format_double ******
      +                          ***********
  1631                           ; Defined at:
  1632                           ;		line 74 in file "../../../lib/format.c"
  1633                           ; Parameters:
  1634                           ;		num            size:   4offs:   0	type: void 
  1635                           ; Auto variables:
  1636                           ;		digit       	       	type: short 
  1637                           ;		m           	       	type: short 
  1638                           ;		weight      	       	type: short 
  1639                           ; Return value:
  1640                           ;		type: void 
  1641                           ;		size: 0
  1642                           ; Registers used:
  1643                           ;		wreg, fsr0l, fsr0h, fsr1l, fsr2l, status,2, s
      +                          tatus,0, pclat, tosl, tblptrl, tblptrh, tblptru,
      +                           tablat, prodl, prodh, cstack
  1644                           ; Tracked objects:
  1645                           ;		On entry : F/1
  1646                           ;		On exit  : F/1
  1647                           ;		Unchanged: FFFFFFF0/0
  1648                           ; Data sizes:
  1649                           ;		Autos:   16
  1650                           ;		Params:   4
  1651                           ;		Temp:     0
  1652                           ;		Total:   20
  1653                           ; This function calls:
  1654                           ;		_log10
  1655                           ;		___fltol
  1656                           ;		___awtofl
  1657                           ;		_pow
  1658                           ;		___fldiv
  1659                           ;		_floor
  1660                           ;		___flmul
  1661                           ;		___asflsub
  1662                           ;		___flge
  1663                           ;		_output_putch
  1664                           ;		_ser_putch
  1665                           ;		_format_putchar
  1666                           ; This function is called by:
  1667                           ;		_measure_capacitance
  1668                           ; This function uses a non-reentrant model
  1669                           ; 
  1670  000000                     
  1671                           ;format.c: 73: void
  1672                           ;format.c: 74: format_double(double num) {
  1673  000FD2                     _format_double:
  1674                           	opt stack 28
  1675                           ; BSR set to: 1
  1676  000FD2  FFFF               	dw	65535
  1677  000FD4  C10E  F122         	movff	?_format_double,?_log10
  1678  000FD8  C10F  F123         	movff	?_format_double+1,?_log10+1
  1679  000FDC  C110  F124         	movff	?_format_double+2,?_log10+2
  1680  000FE0  C111  F125         	movff	?_format_double+3,?_log10+3
  1681  000FE4  ECA8  F011         	call	_log10	;wreg free
  1682  000FE8  C122  F143         	movff	?_log10,?___fltol
  1683  000FEC  C123  F144         	movff	?_log10+1,?___fltol+1
  1684  000FF0  C124  F145         	movff	?_log10+2,?___fltol+2
  1685  000FF4  C125  F146         	movff	?_log10+3,?___fltol+3
  1686  000FF8  EC02  F00F         	call	___fltol	;wreg free
  1687  000FFC  C143  F11C         	movff	?___fltol,??_format_double+10
  1688  001000  C144  F11D         	movff	?___fltol+1,??_format_double+11
  1689                           ;format.c: 76: short digit;
  1690                           ;format.c: 79: while(num > 0 + 1.19209290e-07) {
  1691  001004                     l670:
  1692  001004  FFFF               	dw	65535	; assembler added errata NOP
  1693                           ; BSR set to: 1
  1694  001006  C10E  F147         	movff	?_format_double,?___flge+4
  1695  00100A  C10F  F148         	movff	?_format_double+1,?___flge+5
  1696  00100E  C110  F149         	movff	?_format_double+2,?___flge+6
  1697  001012  C111  F14A         	movff	?_format_double+3,?___flge+7
  1698  001016  6B43               	clrf	?___flge& (0+255),b
  1699  001018  6B44               	clrf	(?___flge+1)& (0+255),b
  1700  00101A  6B45               	clrf	(?___flge+2)& (0+255),b
  1701  00101C  0E34               	movlw	52
  1702  00101E  6F46               	movwf	(?___flge+3)& (0+255),b
  1703  001020  EC81  F011         	call	___flge
  1704  001024  E301 D0A5          	bc	u3090
  1705                           ; BSR set to: 1
  1706                           ;format.c: 80: double weight = pow(10.0l, m);
  1707  001028  C11C  F145         	movff	??_format_double+10,?___awtofl
  1708  00102C  C11D  F146         	movff	??_format_double+11,?___awtofl+1
  1709  001030  ECE5  F00F         	call	___awtofl	;wreg free
  1710  001034  C145  F126         	movff	?___awtofl,?_pow+4
  1711  001038  C146  F127         	movff	?___awtofl+1,?_pow+5
  1712  00103C  C147  F128         	movff	?___awtofl+2,?_pow+6
  1713  001040  C148  F129         	movff	?___awtofl+3,?_pow+7
  1714  001044  6B22               	clrf	?_pow& (0+255),b
  1715  001046  6B23               	clrf	(?_pow+1)& (0+255),b
  1716  001048  0E20               	movlw	32
  1717  00104A  6F24               	movwf	(?_pow+2)& (0+255),b
  1718  00104C  0E41               	movlw	65
  1719  00104E  6F25               	movwf	(?_pow+3)& (0+255),b
  1720  001050  EC26  F00A         	call	_pow	;wreg free
  1721  001054  C122  F11E         	movff	?_pow,??_format_double+12
  1722  001058  C123  F11F         	movff	?_pow+1,??_format_double+13
  1723  00105C  C124  F120         	movff	?_pow+2,??_format_double+14
  1724  001060  C125  F121         	movff	?_pow+3,??_format_double+15
  1725                           ;format.c: 81: digit = (short)floor(num / weight
      +                          );
  1726  001064  C11E  F13D         	movff	??_format_double+12,?___fldiv+4
  1727  001068  C11F  F13E         	movff	??_format_double+13,?___fldiv+5
  1728  00106C  C120  F13F         	movff	??_format_double+14,?___fldiv+6
  1729  001070  C121  F140         	movff	??_format_double+15,?___fldiv+7
  1730  001074  C10E  F139         	movff	?_format_double,?___fldiv
  1731  001078  C10F  F13A         	movff	?_format_double+1,?___fldiv+1
  1732  00107C  C110  F13B         	movff	?_format_double+2,?___fldiv+2
  1733  001080  C111  F13C         	movff	?_format_double+3,?___fldiv+3
  1734  001084  ECFF  F00D         	call	___fldiv	;wreg free
  1735  001088  C139  F139         	movff	?___fldiv,?_floor
  1736  00108C  C13A  F13A         	movff	?___fldiv+1,?_floor+1
  1737  001090  C13B  F13B         	movff	?___fldiv+2,?_floor+2
  1738  001094  C13C  F13C         	movff	?___fldiv+3,?_floor+3
  1739  001098  EC53  F00B         	call	_floor	;wreg free
  1740  00109C  C139  F143         	movff	?_floor,?___fltol
  1741  0010A0  C13A  F144         	movff	?_floor+1,?___fltol+1
  1742  0010A4  C13B  F145         	movff	?_floor+2,?___fltol+2
  1743  0010A8  C13C  F146         	movff	?_floor+3,?___fltol+3
  1744  0010AC  EC02  F00F         	call	___fltol	;wreg free
  1745  0010B0  C143  F11A         	movff	?___fltol,??_format_double+8
  1746  0010B4  C144  F11B         	movff	?___fltol+1,??_format_double+9
  1747                           ;format.c: 82: num -= (digit * weight);
  1748  0010B8  C11A  F145         	movff	??_format_double+8,?___awtofl
  1749  0010BC  C11B  F146         	movff	??_format_double+9,?___awtofl+1
  1750  0010C0  ECE5  F00F         	call	___awtofl	;wreg free
  1751  0010C4  C145  F112         	movff	?___awtofl,??_format_double
  1752  0010C8  C146  F113         	movff	?___awtofl+1,??_format_double+1
  1753  0010CC  C147  F114         	movff	?___awtofl+2,??_format_double+2
  1754  0010D0  C148  F115         	movff	?___awtofl+3,??_format_double+3
  1755  0010D4  C112  F155         	movff	??_format_double,?___flmul
  1756  0010D8  C113  F156         	movff	??_format_double+1,?___flmul+1
  1757  0010DC  C114  F157         	movff	??_format_double+2,?___flmul+2
  1758  0010E0  C115  F158         	movff	??_format_double+3,?___flmul+3
  1759  0010E4  C11E  F159         	movff	??_format_double+12,?___flmul+4
  1760  0010E8  C11F  F15A         	movff	??_format_double+13,?___flmul+5
  1761  0010EC  C120  F15B         	movff	??_format_double+14,?___flmul+6
  1762  0010F0  C121  F15C         	movff	??_format_double+15,?___flmul+7
  1763  0010F4  EC2F  F00D         	call	___flmul	;wreg free
  1764  0010F8  C155  F116         	movff	?___flmul,??_format_double+4
  1765  0010FC  C156  F117         	movff	?___flmul+1,??_format_double+5
  1766  001100  C157  F118         	movff	?___flmul+2,??_format_double+6
  1767  001104  C158  F119         	movff	?___flmul+3,??_format_double+7
  1768  001108  C116  F13B         	movff	??_format_double+4,?___asflsub+2
  1769  00110C  C117  F13C         	movff	??_format_double+5,?___asflsub+3
  1770  001110  C118  F13D         	movff	??_format_double+6,?___asflsub+4
  1771  001114  C119  F13E         	movff	??_format_double+7,?___asflsub+5
  1772  001118  0E0E               	movlw	low ?_format_double
  1773  00111A  6F39               	movwf	?___asflsub& (0+255),b
  1774  00111C  0E01               	movlw	high ?_format_double
  1775  00111E  6F3A               	movwf	(?___asflsub+1)& (0+255),b
  1776  001120  ECF4  F011         	call	___asflsub	;wreg free
  1777                           ;format.c: 83: putchar_ptr((char)('0' + digit));
  1778  001124  D801               	call	u3068
  1779  001126  D00E               	goto	u3069
  1780  001128                     u3068:
  1781  001128  FFFF               	dw	65535	; assembler added errata NOP
  1782  00112A  0005               	push	
  1783  00112C  6EFA               	movwf	pclath,c
  1784  00112E  5047               	movf	71,w,c
  1785  001130  6EFD               	movwf	tosl,c
  1786  001132  5048               	movf	72,w,c
  1787  001134  6EFE               	movwf	tosh,c
  1788  001136  50F8               	movf	tblptru,w,c
  1789  001138  6EFF               	movwf	tosu,c
  1790  00113A  50FA               	movf	pclath,w,c
  1791  00113C  511A               	movf	(??_format_double+8)& (0+255),w,b
  1792  00113E  0F30               	addlw	48
  1793  001140  0012               	return	
  1794  001142  FFFF               	dw	65535	; errata NOP
  1795  001144                     u3069:
  1796  001144  FFFF               	dw	65535	; assembler added errata NOP
  1797                           ;format.c: 84: if(m == 0)
  1798  001146  511D               	movf	(??_format_double+11)& (0+255),w,b
  1799  001148  111C               	iorwf	(??_format_double+10)& (0+255),w,b
  1800  00114A  E10E               	bnz	l673
  1801                           ;format.c: 85: putchar_ptr('.');
  1802  00114C  D801               	call	u3088
  1803  00114E  D00C               	goto	l673
  1804  001150                     u3088:
  1805  001150  FFFF               	dw	65535	; assembler added errata NOP
  1806  001152  0005               	push	
  1807  001154  6EFA               	movwf	pclath,c
  1808  001156  5047               	movf	71,w,c
  1809  001158  6EFD               	movwf	tosl,c
  1810  00115A  5048               	movf	72,w,c
  1811  00115C  6EFE               	movwf	tosh,c
  1812  00115E  50F8               	movf	tblptru,w,c
  1813  001160  6EFF               	movwf	tosu,c
  1814  001162  50FA               	movf	pclath,w,c
  1815  001164  0C2E               	retlw	46
  1816  001166  FFFF               	dw	65535	; errata NOP
  1817  001168                     l673:
  1818  001168  FFFF               	dw	65535	; assembler added errata NOP
  1819                           ; BSR set to: 1
  1820                           ;format.c: 86: m--;
  1821  00116A  071C               	decf	(??_format_double+10)& (0+255),f,b
  1822  00116C  A0D8               	btfss	status,0,c
  1823  00116E  071D               	decf	(??_format_double+11)& (0+255),f,b
  1824  001170  D749               	goto	l670
  1825  001172                     u3090:
  1826                           ; BSR set to: 1
  1827                           ;format.c: 87: }
  1828                           ;format.c: 88: }
  1829                           ; BSR set to: 1
  1830  001172  0012               	return	
  1831  001174  FFFF               	dw	65535	; errata NOP
  1832  001176                     __end_of_format_double:
  1833                           	opt stack 0
  1834                           
  1835                           	psect	text9
  1836                           ; =============== function _format_double ends =
      +                          ===========
  1837                           ; *************** function ___asfldiv **********
      +                          *******
  1838                           ; Defined at:
  1839                           ;		line 5 in file "C:\Program Files (x86)\HI-TEC
      +                          H Software\PICC-18\PRO\9.66\sources\asfldiv.c"
  1840                           ; Parameters:
  1841                           ;		f1p            size:   2offs:   0	type: PTR ;
      +                           Largest target is 4
  1842                           ;		 -> measure_inductance@Lin(4), measure_capaci
      +                          tance@Cin(4), 
  1843                           ;		f2             size:   4offs:   2	type: PTR 
  1844                           ; Auto variables:
  1845                           ;		None
  1846                           ; Return value:
  1847                           ;		type: PTR 
  1848                           ;		size: 4
  1849                           ; Registers used:
  1850                           ;		wreg, fsr0l, fsr0h, fsr2l, status,2, status,0
      +                          , prodl, prodh, cstack
  1851                           ; Tracked objects:
  1852                           ;		On entry : F/1
  1853                           ;		On exit  : F/1
  1854                           ;		Unchanged: FFFFFFF0/0
  1855                           ; Data sizes:
  1856                           ;		Autos:    0
  1857                           ;		Params:   6
  1858                           ;		Temp:     0
  1859                           ;		Total:    6
  1860                           ; This function calls:
  1861                           ;		___fldiv
  1862                           ; This function is called by:
  1863                           ;		_measure_capacitance
  1864                           ;		_measure_inductance
  1865                           ; This function uses a non-reentrant model
  1866                           ; 
  1867  000000                     
  1868  002432                     ___asfldiv:
  1869                           	opt stack 28
  1870                           ; BSR set to: 1
  1871  002432  FFFF               	dw	65535
  1872  002434  C120  F13D         	movff	?___asfldiv+2,?___fldiv+4
  1873  002438  C121  F13E         	movff	?___asfldiv+3,?___fldiv+5
  1874  00243C  C122  F13F         	movff	?___asfldiv+4,?___fldiv+6
  1875  002440  C123  F140         	movff	?___asfldiv+5,?___fldiv+7
  1876  002444  C11E  FFE9         	movff	?___asfldiv,fsr0l
  1877  002448  C11F  FFEA         	movff	?___asfldiv+1,fsr0h
  1878  00244C  CFEE F139          	movff	postinc0,?___fldiv
  1879  002450  CFEE F13A          	movff	postinc0,?___fldiv+1
  1880  002454  CFEE F13B          	movff	postinc0,?___fldiv+2
  1881  002458  CFEE F13C          	movff	postinc0,?___fldiv+3
  1882  00245C  ECFF  F00D         	call	___fldiv	;wreg free
  1883  002460  C11E  FFE9         	movff	?___asfldiv,fsr0l
  1884  002464  C11F  FFEA         	movff	?___asfldiv+1,fsr0h
  1885  002468  C139  FFEE         	movff	?___fldiv,postinc0
  1886  00246C  C13A  FFEE         	movff	?___fldiv+1,postinc0
  1887  002470  C13B  FFEE         	movff	?___fldiv+2,postinc0
  1888  002474  C13C  FFED         	movff	?___fldiv+3,postdec0
  1889                           ; BSR set to: 1
  1890  002478  0012               	return	
  1891  00247A  FFFF               	dw	65535	; errata NOP
  1892  00247C                     __end_of___asfldiv:
  1893                           	opt stack 0
  1894                           
  1895                           	psect	text10
  1896                           ; =============== function ___asfldiv ends =====
      +                          =======
  1897                           ; *************** function _print_unit *********
      +                          ********
  1898                           ; Defined at:
  1899                           ;		line 408 in file "../../../src/print.c"
  1900                           ; Parameters:
  1901                           ;		unit           size:   1reg:   wre	type: unsi
      +                          gned char 
  1902                           ; Auto variables:
  1903                           ;		None
  1904                           ; Return value:
  1905                           ;		type: void 
  1906                           ;		size: 0
  1907                           ; Registers used:
  1908                           ;		wreg
  1909                           ; Tracked objects:
  1910                           ;		On entry : F/1
  1911                           ;		On exit  : F/1
  1912                           ;		Unchanged: FFFFFFFF/0
  1913                           ; Data sizes:
  1914                           ;		Autos:    0
  1915                           ;		Params:   0
  1916                           ;		Temp:     0
  1917                           ;		Total:    0
  1918                           ; This function calls:
  1919                           ;		Nothing
  1920                           ; This function is called by:
  1921                           ;		_measure_capacitance
  1922                           ;		_measure_inductance
  1923                           ; This function uses a non-reentrant model
  1924                           ; 
  1925  000000                     
  1926                           ;print.c: 407: void
  1927                           ;print.c: 408: print_unit(unsigned char unit) {
  1928  00261E                     _print_unit:
  1929                           	opt stack 28
  1930                           ; BSR set to: 1
  1931  00261E  FFFF               	dw	65535
  1932                           ;print.c: 426: }
  1933                           ; BSR set to: 1
  1934  002620  0012               	return	
  1935  002622  FFFF               	dw	65535	; errata NOP
  1936  002624                     __end_of_print_unit:
  1937                           	opt stack 0
  1938                           
  1939                           	psect	text11
  1940                           ; =============== function _print_unit ends ====
      +                          ========
  1941                           ; *************** function _format_xint32 ******
      +                          ***********
  1942                           ; Defined at:
  1943                           ;		line 48 in file "../../../lib/format.c"
  1944                           ; Parameters:
  1945                           ;		x              size:   4offs:   0	type: unsig
      +                          ned long 
  1946                           ; Auto variables:
  1947                           ;		None
  1948                           ; Return value:
  1949                           ;		type: void 
  1950                           ;		size: 0
  1951                           ; Registers used:
  1952                           ;		wreg, fsr0l, fsr0h, fsr1l, fsr2l, status,2, s
      +                          tatus,0, pclat, tosl, prodl, prodh, cstack
  1953                           ; Tracked objects:
  1954                           ;		On entry : F/1
  1955                           ;		On exit  : F/1
  1956                           ;		Unchanged: FFFFFFF0/0
  1957                           ; Data sizes:
  1958                           ;		Autos:    0
  1959                           ;		Params:   4
  1960                           ;		Temp:     0
  1961                           ;		Total:    4
  1962                           ; This function calls:
  1963                           ;		_format_number
  1964                           ;		_output_putch
  1965                           ;		_ser_putch
  1966                           ;		_format_putchar
  1967                           ; This function is called by:
  1968                           ;		_measure_capacitance
  1969                           ; This function uses a non-reentrant model
  1970                           ; 
  1971  000000                     
  1972                           ;format.c: 47: void
  1973                           ;format.c: 48: format_xint32( unsigned long int 
      +                          x) {
  1974  0020D2                     _format_xint32:
  1975                           	opt stack 28
  1976                           ; BSR set to: 1
  1977  0020D2  FFFF               	dw	65535
  1978                           ;format.c: 49: putchar_ptr('0');
  1979  0020D4  D801               	call	u3008
  1980  0020D6  D00C               	goto	u3009
  1981  0020D8                     u3008:
  1982  0020D8  FFFF               	dw	65535	; assembler added errata NOP
  1983  0020DA  0005               	push	
  1984  0020DC  6EFA               	movwf	pclath,c
  1985  0020DE  5047               	movf	71,w,c
  1986  0020E0  6EFD               	movwf	tosl,c
  1987  0020E2  5048               	movf	72,w,c
  1988  0020E4  6EFE               	movwf	tosh,c
  1989  0020E6  50F8               	movf	tblptru,w,c
  1990  0020E8  6EFF               	movwf	tosu,c
  1991  0020EA  50FA               	movf	pclath,w,c
  1992  0020EC  0C30               	retlw	48
  1993  0020EE  FFFF               	dw	65535	; errata NOP
  1994  0020F0                     u3009:
  1995  0020F0  FFFF               	dw	65535	; assembler added errata NOP
  1996                           ;format.c: 50: putchar_ptr('x');
  1997  0020F2  D801               	call	u3018
  1998  0020F4  D00C               	goto	u3019
  1999  0020F6                     u3018:
  2000  0020F6  FFFF               	dw	65535	; assembler added errata NOP
  2001  0020F8  0005               	push	
  2002  0020FA  6EFA               	movwf	pclath,c
  2003  0020FC  5047               	movf	71,w,c
  2004  0020FE  6EFD               	movwf	tosl,c
  2005  002100  5048               	movf	72,w,c
  2006  002102  6EFE               	movwf	tosh,c
  2007  002104  50F8               	movf	tblptru,w,c
  2008  002106  6EFF               	movwf	tosu,c
  2009  002108  50FA               	movf	pclath,w,c
  2010  00210A  0C78               	retlw	120
  2011  00210C  FFFF               	dw	65535	; errata NOP
  2012  00210E                     u3019:
  2013  00210E  FFFF               	dw	65535	; assembler added errata NOP
  2014                           ;format.c: 51: format_number((unsigned short int
      +                          )(x >> 16), 16, -4);
  2015  002110  0EFC               	movlw	252
  2016  002112  6F15               	movwf	(?_format_number+3)& (0+255),b
  2017  002114  0E10               	movlw	16
  2018  002116  6F14               	movwf	(?_format_number+2)& (0+255),b
  2019  002118  C110  F112         	movff	?_format_xint32+2,?_format_number
  2020  00211C  C111  F113         	movff	?_format_xint32+3,?_format_number+1
  2021  002120  ECD8  F00A         	call	_format_number
  2022                           ;format.c: 52: format_number((unsigned short int
      +                          )(x & 0xffff), 16, -4);
  2023  002124  0EFC               	movlw	252
  2024  002126  6F15               	movwf	(?_format_number+3)& (0+255),b
  2025  002128  0E10               	movlw	16
  2026  00212A  6F14               	movwf	(?_format_number+2)& (0+255),b
  2027  00212C  C10E  F112         	movff	?_format_xint32,?_format_number
  2028  002130  C10F  F113         	movff	?_format_xint32+1,?_format_number+1
  2029  002134  EFD8  F00A         	goto	_format_number	;wreg free
  2030                           ;format.c: 53: }
  2031                           ; BSR set to: 1
  2032  002138  FFFF               	dw	65535	; errata NOP
  2033  00213A                     __end_of_format_xint32:
  2034                           	opt stack 0
  2035                           
  2036                           	psect	text12
  2037                           ; =============== function _format_xint32 ends =
      +                          ===========
  2038                           ; *************** function _measure_freq *******
      +                          **********
  2039                           ; Defined at:
  2040                           ;		line 299 in file "../../../src/LC-meter.c"
  2041                           ; Parameters:
  2042                           ;		None
  2043                           ; Auto variables:
  2044                           ;		prev        	       	type: unsigned char 
  2045                           ;		count       	       	type: unsigned short 
  2046                           ;		i           	       	type: unsigned char 
  2047                           ; Return value:
  2048                           ;		type: unsigned short 
  2049                           ;		size: 2
  2050                           ; Registers used:
  2051                           ;		wreg, fsr1l, fsr2l, status,2, status,0, prodl
      +                          , prodh
  2052                           ; Tracked objects:
  2053                           ;		On entry : F/1
  2054                           ;		On exit  : F/1
  2055                           ;		Unchanged: 0/0
  2056                           ; Data sizes:
  2057                           ;		Autos:    0
  2058                           ;		Params:   2
  2059                           ;		Temp:     2
  2060                           ;		Total:    4
  2061                           ; This function calls:
  2062                           ;		__delay
  2063                           ; This function is called by:
  2064                           ;		_calibrate
  2065                           ;		_measure_capacitance
  2066                           ;		_measure_inductance
  2067                           ; This function uses a non-reentrant model
  2068                           ; 
  2069  000000                     
  2070                           ;LC-meter.c: 298: unsigned short int
  2071                           ;LC-meter.c: 299: measure_freq() {
  2072  001EA0                     _measure_freq:
  2073                           	opt stack 28
  2074                           ; BSR set to: 1
  2075  001EA0  FFFF               	dw	65535
  2076                           ;LC-meter.c: 300: unsigned char prev;
  2077                           ;LC-meter.c: 301: unsigned short int count;
  2078                           ;LC-meter.c: 303: TMR0IF = 0;
  2079  001EA2  94F2               	bcf	intcon,2,c	;volatile
  2080                           ;LC-meter.c: 305: TRISA &= ~0b00010000;
  2081  001EA4  9892               	bcf	3986,4,c	;volatile
  2082                           ;LC-meter.c: 308: _delay((unsigned long)((20)*(2
      +                          0000000/4000.0)));
  2083  001EA6  0E62               	movlw	98
  2084  001EA8  6F20               	movwf	??_measure_freq& (0+255),b
  2085  001EAA  0E76               	movlw	118
  2086  001EAC                     u4187:
  2087  001EAC  FFFF               	dw	65535	; assembler added errata NOP
  2088  001EAE  2EE8               	decfsz	wreg,f,c
  2089  001EB0  D7FD               	goto	u4187
  2090  001EB2  2F20               	decfsz	??_measure_freq& (0+255),f,b
  2091  001EB4  D7FB               	goto	u4187
  2092  001EB6  0004               	clrwdt	
  2093                           ;LC-meter.c: 310: TMR0 = 0x00;
  2094  001EB8  6AD6               	clrf	4054,c	;volatile
  2095  001EBA  6AD7               	clrf	4055,c	;volatile
  2096                           ;LC-meter.c: 312: for(char i = 0; i < 10; i++) _
      +                          delay((unsigned long)((10)*(20000000/4000.0)));
  2097  001EBC  6AD9               	clrf	fsr2l,c
  2098  001EBE                     l846:
  2099  001EBE  FFFF               	dw	65535	; assembler added errata NOP
  2100                           ; BSR set to: ?
  2101  001EC0  0E31               	movlw	49
  2102  001EC2  0101               	movlb	1	; () banked
  2103  001EC4  6F20               	movwf	??_measure_freq& (0+255),b
  2104  001EC6  0EBA               	movlw	186
  2105  001EC8                     u4197:
  2106  001EC8  FFFF               	dw	65535	; assembler added errata NOP
  2107  001ECA  2EE8               	decfsz	wreg,f,c
  2108  001ECC  D7FD               	goto	u4197
  2109  001ECE  2F20               	decfsz	??_measure_freq& (0+255),f,b
  2110  001ED0  D7FB               	goto	u4197
  2111  001ED2  D000               	nop2	
  2112  001ED4  0004               	clrwdt	
  2113  001ED6  2AD9               	incf	fsr2l,f,c
  2114  001ED8  0E09               	movlw	9
  2115  001EDA  64D9               	cpfsgt	fsr2l,c
  2116  001EDC  D7F0               	goto	l846
  2117                           ; BSR set to: ?
  2118                           ;LC-meter.c: 314: TRISA |= 0b00010000;
  2119  001EDE  8892               	bsf	3986,4,c	;volatile
  2120                           ;LC-meter.c: 316: prev = TMR0;
  2121  001EE0  CFD6 FFE1          	movff	4054,fsr1l	;volatile
  2122                           ;LC-meter.c: 317: count = 0;
  2123  001EE4  6AF3               	clrf	prodl,c
  2124  001EE6  6AF4               	clrf	prodh,c
  2125  001EE8  D005               	goto	l851
  2126  001EEA                     u3130:
  2127  001EEA  0E00               	movlw	0
  2128  001EEC  5CF3               	subwf	prodl,w,c
  2129  001EEE  0E01               	movlw	1
  2130  001EF0  58F4               	subwfb	prodh,w,c
  2131  001EF2  E20D               	bc	l850
  2132                           ;LC-meter.c: 319: do {
  2133  001EF4                     l851:
  2134  001EF4  FFFF               	dw	65535	; assembler added errata NOP
  2135                           ; BSR set to: ?
  2136                           ;LC-meter.c: 321: T0SE = 1;
  2137  001EF6  88D5               	bsf	4053,4,c	;volatile
  2138  001EF8  F000               	nop		;#
  2139  001EFA  F000               	nop		;#
  2140                           ;LC-meter.c: 322: asm(" nop");
  2141                           ;LC-meter.c: 323: asm(" nop");
  2142                           ;LC-meter.c: 325: T0SE = 0;
  2143  001EFC  98D5               	bcf	4053,4,c	;volatile
  2144  001EFE  F000               	nop		;#
  2145  001F00  F000               	nop		;#
  2146                           ;LC-meter.c: 326: asm(" nop");
  2147                           ;LC-meter.c: 327: asm(" nop");
  2148                           ;LC-meter.c: 328: count++;
  2149  001F02  4AF3               	infsnz	prodl,f,c
  2150  001F04  2AF4               	incf	prodh,f,c
  2151                           ;LC-meter.c: 329: } while(prev == TMR0 && count 
      +                          <= 255);
  2152  001F06  50E1               	movf	fsr1l,w,c
  2153  001F08  18D6               	xorwf	4054,w,c	;volatile
  2154  001F0A  10D7               	iorwf	4055,w,c	;volatile
  2155  001F0C  E0EE               	bz	u3130
  2156                           ; BSR set to: ?
  2157  001F0E                     l850:
  2158                           ; BSR set to: ?
  2159                           ;LC-meter.c: 332: count = ((prev << 8) + (256 - 
      +                          count));
  2160  001F0E  50E1               	movf	fsr1l,w,c
  2161  001F10  0101               	movlb	1	; () banked
  2162  001F12  6F21               	movwf	(??_measure_freq+1)& (0+255),b
  2163  001F14  6B20               	clrf	??_measure_freq& (0+255),b
  2164  001F16  50F3               	movf	prodl,w,c
  2165  001F18  5F20               	subwf	??_measure_freq& (0+255),f,b
  2166  001F1A  50F4               	movf	prodh,w,c
  2167  001F1C  5B21               	subwfb	(??_measure_freq+1)& (0+255),f,b
  2168  001F1E  0E00               	movlw	0
  2169  001F20  2520               	addwf	??_measure_freq& (0+255),w,b
  2170  001F22  6EF3               	movwf	prodl,c
  2171  001F24  0E01               	movlw	1
  2172  001F26  2121               	addwfc	(??_measure_freq+1)& (0+255),w,b
  2173  001F28  6EF4               	movwf	prodh,c
  2174  001F2A  CFF3 F11E          	movff	prodl,?_measure_freq
  2175  001F2E  CFF4 F11F          	movff	prodh,?_measure_freq+1
  2176                           ;LC-meter.c: 340: }
  2177                           ; BSR set to: 1
  2178  001F32  0012               	return	
  2179  001F34  FFFF               	dw	65535	; errata NOP
  2180  001F36                     __end_of_measure_freq:
  2181                           	opt stack 0
  2182                           
  2183                           	psect	text13
  2184                           ; =============== function _measure_freq ends ==
      +                          ==========
  2185                           ; *************** function _delay10ms **********
      +                          *******
  2186                           ; Defined at:
  2187                           ;		line 532 in file "../../../src/LC-meter.c"
  2188                           ; Parameters:
  2189                           ;		period_10ms    size:   2offs:   0	type: unsig
      +                          ned short 
  2190                           ; Auto variables:
  2191                           ;		run         	       	type: unsigned char 
  2192                           ;		ms          	       	type: unsigned long 
  2193                           ; Return value:
  2194                           ;		type: void 
  2195                           ;		size: 0
  2196                           ; Registers used:
  2197                           ;		wreg, fsr2l, status,2, status,0, prodl, prodh
      +                          , cstack
  2198                           ; Tracked objects:
  2199                           ;		On entry : F/1
  2200                           ;		On exit  : F/1
  2201                           ;		Unchanged: FFFFFFF0/0
  2202                           ; Data sizes:
  2203                           ;		Autos:    4
  2204                           ;		Params:   2
  2205                           ;		Temp:     0
  2206                           ;		Total:    6
  2207                           ; This function calls:
  2208                           ;		___wmul
  2209                           ; This function is called by:
  2210                           ;		_main
  2211                           ;		_calibrate
  2212                           ; This function uses a non-reentrant model
  2213                           ; 
  2214  000000                     
  2215                           ;LC-meter.c: 531: void
  2216                           ;LC-meter.c: 532: delay10ms(unsigned short int p
      +                          eriod_10ms) {
  2217  002200                     _delay10ms:
  2218                           	opt stack 28
  2219                           ; BSR set to: 1
  2220  002200  FFFF               	dw	65535
  2221  002202  0E01               	movlw	1
  2222  002204  6ED9               	movwf	fsr2l,c
  2223                           ;LC-meter.c: 539: GIE = 0, ms = msecs, GIE = 1;
  2224  002206  9EF2               	bcf	intcon,7,c	;volatile
  2225  002208  C034 F102          	movff	52,??_delay10ms	;volatile
  2226  00220C  C035 F103          	movff	53,??_delay10ms+1	;volatile
  2227  002210  C036 F104          	movff	54,??_delay10ms+2	;volatile
  2228  002214  C037 F105          	movff	55,??_delay10ms+3	;volatile
  2229  002218  8EF2               	bsf	intcon,7,c	;volatile
  2230                           ;LC-meter.c: 544: ms += period_10ms * 10;
  2231  00221A  0E0A               	movlw	10
  2232  00221C  6F08               	movwf	(?___wmul+2)& (0+255),b
  2233  00221E  0E00               	movlw	0
  2234  002220  6B09               	clrf	(?___wmul+3)& (0+255),b
  2235  002222  C100  F106         	movff	?_delay10ms,?___wmul
  2236  002226  C101  F107         	movff	?_delay10ms+1,?___wmul+1
  2237  00222A  EC9E  F012         	call	___wmul	;wreg free
  2238  00222E  5106               	movf	?___wmul& (0+255),w,b
  2239  002230  2702               	addwf	??_delay10ms& (0+255),f,b
  2240  002232  5107               	movf	(?___wmul+1)& (0+255),w,b
  2241  002234  2303               	addwfc	(??_delay10ms+1)& (0+255),f,b
  2242  002236  0E00               	movlw	0
  2243  002238  2304               	addwfc	(??_delay10ms+2)& (0+255),f,b
  2244  00223A  2305               	addwfc	(??_delay10ms+3)& (0+255),f,b
  2245                           ;LC-meter.c: 547: do {
  2246  00223C                     l872:
  2247  00223C  FFFF               	dw	65535	; assembler added errata NOP
  2248                           ; BSR set to: 1
  2249                           ;LC-meter.c: 548: GIE = 0;
  2250  00223E  9EF2               	bcf	intcon,7,c	;volatile
  2251                           ;LC-meter.c: 549: if(ms <= msecs)
  2252  002240  5102               	movf	??_delay10ms& (0+255),w,b
  2253  002242  5C34               	subwf	52,w,c	;volatile
  2254  002244  5103               	movf	(??_delay10ms+1)& (0+255),w,b
  2255  002246  5835               	subwfb	53,w,c	;volatile
  2256  002248  5104               	movf	(??_delay10ms+2)& (0+255),w,b
  2257  00224A  5836               	subwfb	54,w,c	;volatile
  2258  00224C  5105               	movf	(??_delay10ms+3)& (0+255),w,b
  2259  00224E  5837               	subwfb	55,w,c	;volatile
  2260  002250  B0D8               	btfsc	status,0,c
  2261                           ;LC-meter.c: 550: run = 0;
  2262  002252  6AD9               	clrf	fsr2l,c
  2263                           ; BSR set to: 1
  2264                           ;LC-meter.c: 551: GIE = 1;
  2265  002254  8EF2               	bsf	intcon,7,c	;volatile
  2266                           ;LC-meter.c: 552: } while(run);
  2267  002256  66D9               	tstfsz	fsr2l,c
  2268  002258  D7F1               	goto	l872
  2269                           ; BSR set to: 1
  2270                           ;LC-meter.c: 553: }
  2271                           ; BSR set to: 1
  2272  00225A  0012               	return	
  2273  00225C  FFFF               	dw	65535	; errata NOP
  2274  00225E                     __end_of_delay10ms:
  2275                           	opt stack 0
  2276                           
  2277                           	psect	text14
  2278                           ; =============== function _delay10ms ends =====
      +                          =======
  2279                           ; *************** function _ser_puts ***********
      +                          ******
  2280                           ; Defined at:
  2281                           ;		line 92 in file "../../../lib/ser.c"
  2282                           ; Parameters:
  2283                           ;		s              size:   1reg:   wre	type: PTR 
      +                          const unsigned char ; Largest target is 8
  2284                           ;		 -> STR_11(3), STR_10(5), STR_9(3), STR_8(8),
      +                           
  2285                           ;		 -> STR_7(6), STR_6(6), STR_5(6), STR_4(5), 
  2286                           ;		 -> STR_3(3), STR_2(3), STR_1(6), 
  2287                           ; Auto variables:
  2288                           ;		None
  2289                           ; Return value:
  2290                           ;		type: void 
  2291                           ;		size: 0
  2292                           ; Registers used:
  2293                           ;		wreg, fsr0l, fsr0h, fsr1l, fsr2l, status,2, s
      +                          tatus,0, tblptrl, tblptrh, tblptru, tablat, csta
      +                          ck
  2294                           ; Tracked objects:
  2295                           ;		On entry : E/1
  2296                           ;		On exit  : E/1
  2297                           ;		Unchanged: FFFFFFFF/0
  2298                           ; Data sizes:
  2299                           ;		Autos:    0
  2300                           ;		Params:   0
  2301                           ;		Temp:     0
  2302                           ;		Total:    0
  2303                           ; This function calls:
  2304                           ;		_ser_putch
  2305                           ; This function is called by:
  2306                           ;		_main
  2307                           ;		_calibrate
  2308                           ;		_measure_capacitance
  2309                           ; This function uses a non-reentrant model
  2310                           ; 
  2311  000000                     
  2312                           ;ser.c: 91: void
  2313                           ;ser.c: 92: ser_puts(const char* s) {
  2314  00256E                     _ser_puts:
  2315                           	opt stack 28
  2316                           ; BSR set to: ?
  2317  00256E  FFFF               	dw	65535
  2318                           ; ser_puts@s loaded to fsr1l
  2319  002570  CFE8 FFE1          	movff	wreg,fsr1l
  2320  002574                     l329:
  2321  002574  FFFF               	dw	65535	; assembler added errata NOP
  2322                           ; BSR set to: ?
  2323  002576  CFE1 FFF6          	movff	fsr1l,tblptrl
  2324  00257A  0E06               	movlw	high __Lsmallconst
  2325  00257C  6EF7               	movwf	tblptrh,c
  2326  00257E  0008               	tblrd		*
  2327  002580  FFFF               	dw	65535	; errata NOP
  2328  002582  50F5               	movf	tablat,w,c
  2329  002584  E00B               	bz	u3100
  2330                           ; BSR set to: ?
  2331  002586  CFE1 FFF6          	movff	fsr1l,tblptrl
  2332  00258A  0E06               	movlw	high __Lsmallconst
  2333  00258C  6EF7               	movwf	tblptrh,c
  2334  00258E  0008               	tblrd		*
  2335  002590  FFFF               	dw	65535	; errata NOP
  2336  002592  50F5               	movf	tablat,w,c
  2337  002594  ECD0  F012         	call	_ser_putch
  2338  002598  2AE1               	incf	fsr1l,f,c
  2339  00259A  D7EC               	goto	l329
  2340  00259C                     u3100:
  2341                           ; BSR set to: ?
  2342                           ;ser.c: 94: }
  2343                           ; BSR set to: ?
  2344  00259C  0012               	return	
  2345  00259E  FFFF               	dw	65535	; errata NOP
  2346  0025A0                     __end_of_ser_puts:
  2347                           	opt stack 0
  2348                           
  2349                           	psect	text15
  2350                           ; =============== function _ser_puts ends ======
      +                          ======
  2351                           ; *************** function ___lwtofl ***********
      +                          ******
  2352                           ; Defined at:
  2353                           ;		line 16 in file "C:\Program Files (x86)\HI-TE
      +                          CH Software\PICC-18\PRO\9.66\sources\lwtofl.c"
  2354                           ; Parameters:
  2355                           ;		c              size:   2offs:   0	type: unsig
      +                          ned int 
  2356                           ; Auto variables:
  2357                           ;		f1          	       	type: unsigned int 
  2358                           ; Return value:
  2359                           ;		type: unsigned int 
  2360                           ;		size: 4
  2361                           ; Registers used:
  2362                           ;		wreg, fsr0l, fsr0h, status,2, status,0, cstac
      +                          k
  2363                           ; Tracked objects:
  2364                           ;		On entry : F/1
  2365                           ;		On exit  : F/1
  2366                           ;		Unchanged: FFFFFFF0/0
  2367                           ; Data sizes:
  2368                           ;		Autos:    4
  2369                           ;		Params:   4
  2370                           ;		Temp:     0
  2371                           ;		Total:    8
  2372                           ; This function calls:
  2373                           ;		___flpack
  2374                           ; This function is called by:
  2375                           ;		_calibrate
  2376                           ;		_measure_capacitance
  2377                           ;		_measure_inductance
  2378                           ; This function uses a non-reentrant model
  2379                           ; 
  2380  000000                     
  2381  00247C                     ___lwtofl:
  2382                           	opt stack 28
  2383                           ; BSR set to: 1
  2384  00247C  FFFF               	dw	65535
  2385  00247E  511F               	movf	(?___lwtofl+1)& (0+255),w,b
  2386  002480  111E               	iorwf	?___lwtofl& (0+255),w,b
  2387  002482  E105               	bnz	l1236
  2388  002484  6B1E               	clrf	?___lwtofl& (0+255),b
  2389  002486  6B1F               	clrf	(?___lwtofl+1)& (0+255),b
  2390  002488  6B20               	clrf	(?___lwtofl+2)& (0+255),b
  2391  00248A  6B21               	clrf	(?___lwtofl+3)& (0+255),b
  2392  00248C  D016               	goto	l1235
  2393  00248E                     l1236:
  2394                           ; BSR set to: 1
  2395  00248E  C11E  F122         	movff	?___lwtofl,??___lwtofl
  2396  002492  C11F  F123         	movff	?___lwtofl+1,??___lwtofl+1
  2397  002496  6B24               	clrf	(??___lwtofl+2)& (0+255),b
  2398  002498  6B25               	clrf	(??___lwtofl+3)& (0+255),b
  2399  00249A  0E96               	movlw	150
  2400  00249C  6F65               	movwf	(?___flpack+2)& (0+255),b
  2401  00249E  0E22               	movlw	low ??___lwtofl
  2402  0024A0  6F63               	movwf	?___flpack& (0+255),b
  2403  0024A2  0E01               	movlw	high ??___lwtofl
  2404  0024A4  6F64               	movwf	(?___flpack+1)& (0+255),b
  2405  0024A6  ECCD  F00B         	call	___flpack	;wreg free
  2406  0024AA  C122  F11E         	movff	??___lwtofl,?___lwtofl
  2407  0024AE  C123  F11F         	movff	??___lwtofl+1,?___lwtofl+1
  2408  0024B2  C124  F120         	movff	??___lwtofl+2,?___lwtofl+2
  2409  0024B6  C125  F121         	movff	??___lwtofl+3,?___lwtofl+3
  2410  0024BA                     l1235:
  2411  0024BA  FFFF               	dw	65535	; assembler added errata NOP
  2412                           ; BSR set to: 1
  2413  0024BC  0012               	return	
  2414  0024BE  FFFF               	dw	65535	; errata NOP
  2415  0024C0                     __end_of___lwtofl:
  2416                           	opt stack 0
  2417                           
  2418                           	psect	text16
  2419                           ; =============== function ___lwtofl ends ======
      +                          ======
  2420                           ; *************** function ___wmul *************
      +                          ****
  2421                           ; Defined at:
  2422                           ;		line 3 in file "C:\Program Files (x86)\HI-TEC
      +                          H Software\PICC-18\PRO\9.66\sources\wmul.c"
  2423                           ; Parameters:
  2424                           ;		multiplier     size:   2offs:   0	type: unsig
      +                          ned int 
  2425                           ;		multiplicand   size:   2offs:   2	type: unsig
      +                          ned int 
  2426                           ; Auto variables:
  2427                           ;		product     	       	type: unsigned int 
  2428                           ; Return value:
  2429                           ;		type: unsigned int 
  2430                           ;		size: 2
  2431                           ; Registers used:
  2432                           ;		wreg, status,2, status,0, prodl, prodh
  2433                           ; Tracked objects:
  2434                           ;		On entry : F/1
  2435                           ;		On exit  : F/1
  2436                           ;		Unchanged: FFFFFFF0/0
  2437                           ; Data sizes:
  2438                           ;		Autos:    0
  2439                           ;		Params:   4
  2440                           ;		Temp:     0
  2441                           ;		Total:    4
  2442                           ; This function calls:
  2443                           ;		Nothing
  2444                           ; This function is called by:
  2445                           ;		_delay10ms
  2446                           ; This function uses a non-reentrant model
  2447                           ; 
  2448  000000                     
  2449  00253C                     ___wmul:
  2450                           	opt stack 27
  2451                           ; BSR set to: 1
  2452  00253C  FFFF               	dw	65535
  2453  00253E  6AF3               	clrf	prodl,c
  2454  002540  6AF4               	clrf	prodh,c
  2455  002542                     l1242:
  2456                           ; BSR set to: 1
  2457  002542  A106               	btfss	?___wmul& (0+255),0,b
  2458  002544  D004               	goto	l1243
  2459  002546  5108               	movf	(?___wmul+2)& (0+255),w,b
  2460  002548  26F3               	addwf	prodl,f,c
  2461  00254A  5109               	movf	(?___wmul+3)& (0+255),w,b
  2462  00254C  22F4               	addwfc	prodh,f,c
  2463  00254E                     l1243:
  2464  00254E  FFFF               	dw	65535	; assembler added errata NOP
  2465                           ; BSR set to: 1
  2466  002550  90D8               	bcf	status,0,c
  2467  002552  3708               	rlcf	(?___wmul+2)& (0+255),f,b
  2468  002554  3709               	rlcf	(?___wmul+3)& (0+255),f,b
  2469  002556  90D8               	bcf	status,0,c
  2470  002558  3307               	rrcf	(?___wmul+1)& (0+255),f,b
  2471  00255A  3306               	rrcf	?___wmul& (0+255),f,b
  2472  00255C  5107               	movf	(?___wmul+1)& (0+255),w,b
  2473  00255E  1106               	iorwf	?___wmul& (0+255),w,b
  2474  002560  E1F0               	bnz	l1242
  2475                           ; BSR set to: 1
  2476  002562  CFF3 F106          	movff	prodl,?___wmul
  2477  002566  CFF4 F107          	movff	prodh,?___wmul+1
  2478                           ; BSR set to: 1
  2479  00256A  0012               	return	
  2480  00256C  FFFF               	dw	65535	; errata NOP
  2481  00256E                     __end_of___wmul:
  2482                           	opt stack 0
  2483                           
  2484                           	psect	text17
  2485                           ; =============== function ___wmul ends ========
      +                          ====
  2486                           ; *************** function _log10 **************
      +                          ***
  2487                           ; Defined at:
  2488                           ;		line 40 in file "C:\Program Files (x86)\HI-TE
      +                          CH Software\PICC-18\PRO\9.66\sources\log.c"
  2489                           ; Parameters:
  2490                           ;		x              size:   4offs:   0	type: unsig
      +                          ned int 
  2491                           ; Auto variables:
  2492                           ;		None
  2493                           ; Return value:
  2494                           ;		type: unsigned int 
  2495                           ;		size: 4
  2496                           ; Registers used:
  2497                           ;		wreg, fsr0l, fsr0h, fsr2l, status,2, status,0
      +                          , tblptrl, tblptrh, tblptru, tablat, prodl, prod
      +                          h, cstack
  2498                           ; Tracked objects:
  2499                           ;		On entry : F/1
  2500                           ;		On exit  : F/1
  2501                           ;		Unchanged: FFFFFFF0/0
  2502                           ; Data sizes:
  2503                           ;		Autos:    0
  2504                           ;		Params:   4
  2505                           ;		Temp:     0
  2506                           ;		Total:    4
  2507                           ; This function calls:
  2508                           ;		_log
  2509                           ;		___flmul
  2510                           ; This function is called by:
  2511                           ;		_format_double
  2512                           ; This function uses a non-reentrant model
  2513                           ; 
  2514  000000                     
  2515  002350                     _log10:
  2516                           	opt stack 27
  2517                           ; BSR set to: 1
  2518  002350  FFFF               	dw	65535
  2519  002352  C122  F12F         	movff	?_log10,?_log
  2520  002356  C123  F130         	movff	?_log10+1,?_log+1
  2521  00235A  C124  F131         	movff	?_log10+2,?_log+2
  2522  00235E  C125  F132         	movff	?_log10+3,?_log+3
  2523  002362  EC72  F009         	call	_log	;wreg free
  2524  002366  C12F  F155         	movff	?_log,?___flmul
  2525  00236A  C130  F156         	movff	?_log+1,?___flmul+1
  2526  00236E  C131  F157         	movff	?_log+2,?___flmul+2
  2527  002372  C132  F158         	movff	?_log+3,?___flmul+3
  2528  002376  0ED9               	movlw	217
  2529  002378  6F59               	movwf	(?___flmul+4)& (0+255),b
  2530  00237A  0E5B               	movlw	91
  2531  00237C  6F5A               	movwf	(?___flmul+5)& (0+255),b
  2532  00237E  0EDE               	movlw	222
  2533  002380  6F5B               	movwf	(?___flmul+6)& (0+255),b
  2534  002382  0E3E               	movlw	62
  2535  002384  6F5C               	movwf	(?___flmul+7)& (0+255),b
  2536  002386  EC2F  F00D         	call	___flmul	;wreg free
  2537  00238A  C155  F122         	movff	?___flmul,?_log10
  2538  00238E  C156  F123         	movff	?___flmul+1,?_log10+1
  2539  002392  C157  F124         	movff	?___flmul+2,?_log10+2
  2540  002396  C158  F125         	movff	?___flmul+3,?_log10+3
  2541                           ; BSR set to: 1
  2542  00239A  0012               	return	
  2543  00239C  FFFF               	dw	65535	; errata NOP
  2544  00239E                     __end_of_log10:
  2545                           	opt stack 0
  2546                           
  2547                           	psect	text18
  2548                           ; =============== function _log10 ends =========
      +                          ===
  2549                           ; *************** function _format_number ******
      +                          ***********
  2550                           ; Defined at:
  2551                           ;		line 14 in file "../../../lib/format.c"
  2552                           ; Parameters:
  2553                           ;		n              size:   2offs:   0	type: unsig
      +                          ned short 
  2554                           ;		base           size:   1offs:   2	type: unsig
      +                          ned char 
  2555                           ;		pad            size:   1offs:   3	type: char 
  2556                           ; Auto variables:
  2557                           ;		padchar     	       	type: unsigned char 
  2558                           ;		di          	       	type: unsigned char 
  2559                           ;		i           	       	type: char 
  2560                           ;		buf         	       	type: unsigned char [32]
  2561                           ; Return value:
  2562                           ;		type: void 
  2563                           ;		size: 0
  2564                           ; Registers used:
  2565                           ;		wreg, fsr0l, fsr0h, fsr1l, fsr2l, status,2, s
      +                          tatus,0, pclat, tosl, prodl, prodh, cstack
  2566                           ; Tracked objects:
  2567                           ;		On entry : F/1
  2568                           ;		On exit  : F/1
  2569                           ;		Unchanged: FFFFFFF0/0
  2570                           ; Data sizes:
  2571                           ;		Autos:   36
  2572                           ;		Params:   4
  2573                           ;		Temp:     1
  2574                           ;		Total:   41
  2575                           ; This function calls:
  2576                           ;		___lwmod
  2577                           ;		___lwdiv
  2578                           ;		_output_putch
  2579                           ;		_ser_putch
  2580                           ;		_format_putchar
  2581                           ; This function is called by:
  2582                           ;		_format_xint32
  2583                           ; This function uses a non-reentrant model
  2584                           ; 
  2585  000000                     
  2586                           ;format.c: 10: putchar_fn* putchar_ptr = &format
      +                          _putchar;
  2587                           ;format.c: 13: void
  2588                           ;format.c: 14: format_number( unsigned short int
      +                           n, unsigned char base, signed char pad ) {
  2589  0015B0                     _format_number:
  2590                           	opt stack 27
  2591                           ; BSR set to: 1
  2592  0015B0  FFFF               	dw	65535
  2593  0015B2  6B19               	clrf	(??_format_number+3)& (0+255),b
  2594                           ;format.c: 18: char padchar = ' ';
  2595  0015B4  0E20               	movlw	32
  2596  0015B6  6F18               	movwf	(??_format_number+2)& (0+255),b
  2597                           ;format.c: 20: if(pad < 0) {
  2598  0015B8  AF15               	btfss	(?_format_number+3)& (0+255),7,b
  2599  0015BA  D003               	goto	l656
  2600                           ;format.c: 21: pad = -pad;
  2601  0015BC  6D15               	negf	(?_format_number+3)& (0+255),b
  2602                           ;format.c: 22: padchar = '0';
  2603  0015BE  0E30               	movlw	48
  2604  0015C0  6F18               	movwf	(??_format_number+2)& (0+255),b
  2605                           ; BSR set to: 1
  2606                           ;format.c: 23: }
  2607                           ;format.c: 30: do {
  2608  0015C2                     l656:
  2609  0015C2  FFFF               	dw	65535	; assembler added errata NOP
  2610                           ; BSR set to: 1
  2611                           ;format.c: 34: di = n % base;
  2612  0015C4  C114  F13D         	movff	?_format_number+2,?___lwmod+2
  2613  0015C8  6B3E               	clrf	(?___lwmod+3)& (0+255),b
  2614  0015CA  C112  F13B         	movff	?_format_number,?___lwmod
  2615  0015CE  C113  F13C         	movff	?_format_number+1,?___lwmod+1
  2616  0015D2  EC7F  F012         	call	___lwmod	;wreg free
  2617  0015D6  513B               	movf	?___lwmod& (0+255),w,b
  2618  0015D8  6EE1               	movwf	fsr1l,c
  2619                           ;format.c: 35: buf[i++] = (di < 10 ? (unsigned c
      +                          har)'0' + di : (unsigned char)'A' + di - 10);
  2620  0015DA  0F37               	addlw	55
  2621  0015DC  6F16               	movwf	??_format_number& (0+255),b
  2622  0015DE  6B17               	clrf	(??_format_number+1)& (0+255),b
  2623  0015E0  0E00               	movlw	0
  2624  0015E2  2317               	addwfc	(??_format_number+1)& (0+255),f,b
  2625  0015E4  0E0A               	movlw	10
  2626  0015E6  60E1               	cpfslt	fsr1l,c
  2627  0015E8  D006               	goto	l500000718
  2628  0015EA  0E30               	movlw	48
  2629  0015EC  24E1               	addwf	fsr1l,w,c
  2630  0015EE  6F16               	movwf	??_format_number& (0+255),b
  2631  0015F0  6B17               	clrf	(??_format_number+1)& (0+255),b
  2632  0015F2  0E00               	movlw	0
  2633  0015F4  2317               	addwfc	(??_format_number+1)& (0+255),f,b
  2634  0015F6                     l500000718:
  2635  0015F6  FFFF               	dw	65535	; assembler added errata NOP
  2636                           ; BSR set to: 1
  2637  0015F8  0E1A               	movlw	low (??_format_number+4)
  2638  0015FA  2519               	addwf	(??_format_number+3)& (0+255),w,b
  2639  0015FC  6EE9               	movwf	fsr0l,c
  2640  0015FE  6AEA               	clrf	fsr0h,c
  2641  001600  0E01               	movlw	high (??_format_number+4)
  2642  001602  22EA               	addwfc	fsr0h,f,c
  2643  001604  C116  FFEF         	movff	??_format_number,indf0
  2644  001608  2B19               	incf	(??_format_number+3)& (0+255),f,b
  2645                           ;format.c: 37: n /= base;
  2646  00160A  C114  F13D         	movff	?_format_number+2,?___lwdiv+2
  2647  00160E  6B3E               	clrf	(?___lwdiv+3)& (0+255),b
  2648  001610  C112  F13B         	movff	?_format_number,?___lwdiv
  2649  001614  C113  F13C         	movff	?_format_number+1,?___lwdiv+1
  2650  001618  EC2F  F011         	call	___lwdiv	;wreg free
  2651  00161C  C13B  F112         	movff	?___lwdiv,?_format_number
  2652  001620  C13C  F113         	movff	?___lwdiv+1,?_format_number+1
  2653                           ;format.c: 38: } while(n > 0);
  2654  001624  5113               	movf	(?_format_number+1)& (0+255),w,b
  2655  001626  1112               	iorwf	?_format_number& (0+255),w,b
  2656  001628  E010               	bz	l657
  2657  00162A  D7CB               	goto	l656
  2658                           ; BSR set to: 1
  2659                           ;format.c: 40: while(pad-- > i) putchar_ptr(padc
      +                          har);
  2660  00162C                     l658:
  2661                           ; BSR set to: 1
  2662  00162C  D801               	call	u3258
  2663  00162E  D00D               	goto	l657
  2664  001630                     u3258:
  2665  001630  FFFF               	dw	65535	; assembler added errata NOP
  2666  001632  0005               	push	
  2667  001634  6EFA               	movwf	pclath,c
  2668  001636  5047               	movf	71,w,c
  2669  001638  6EFD               	movwf	tosl,c
  2670  00163A  5048               	movf	72,w,c
  2671  00163C  6EFE               	movwf	tosh,c
  2672  00163E  50F8               	movf	tblptru,w,c
  2673  001640  6EFF               	movwf	tosu,c
  2674  001642  50FA               	movf	pclath,w,c
  2675  001644  5118               	movf	(??_format_number+2)& (0+255),w,b
  2676  001646  0012               	return	
  2677  001648  FFFF               	dw	65535	; errata NOP
  2678  00164A                     l657:
  2679  00164A  FFFF               	dw	65535	; assembler added errata NOP
  2680                           ; BSR set to: 1
  2681  00164C  5119               	movf	(??_format_number+3)& (0+255),w,b
  2682  00164E  0A80               	xorlw	128
  2683  001650  6F3A               	movwf	(??_format_number+36)& (0+255),b
  2684  001652  0715               	decf	(?_format_number+3)& (0+255),f,b
  2685  001654  2915               	incf	(?_format_number+3)& (0+255),w,b
  2686  001656  0A80               	xorlw	128
  2687  001658  5D3A               	subwf	(??_format_number+36)& (0+255),w,b
  2688  00165A  E3E8               	bnc	l658
  2689                           ; BSR set to: 1
  2690                           ;format.c: 42: for(; i > 0; i--) putchar_ptr((ch
      +                          ar)buf[(signed short int)i - 1]);
  2691  00165C  5119               	movf	(??_format_number+3)& (0+255),w,b
  2692  00165E  0A80               	xorlw	128
  2693  001660  0F7F               	addlw	-129
  2694  001662  E31F               	bnc	l661
  2695  001664                     l660:
  2696                           ; BSR set to: 1
  2697  001664  D801               	call	u3288
  2698  001666  D017               	goto	u3289
  2699  001668                     u3288:
  2700  001668  FFFF               	dw	65535	; assembler added errata NOP
  2701  00166A  0005               	push	
  2702  00166C  6EFA               	movwf	pclath,c
  2703  00166E  5047               	movf	71,w,c
  2704  001670  6EFD               	movwf	tosl,c
  2705  001672  5048               	movf	72,w,c
  2706  001674  6EFE               	movwf	tosh,c
  2707  001676  50F8               	movf	tblptru,w,c
  2708  001678  6EFF               	movwf	tosu,c
  2709  00167A  50FA               	movf	pclath,w,c
  2710  00167C  C119  F13A         	movff	??_format_number+3,??_format_number+36
  2711  001680  0EFF               	movlw	-1
  2712  001682  273A               	addwf	(??_format_number+36)& (0+255),f,b
  2713  001684  0E1A               	movlw	low (??_format_number+4)
  2714  001686  253A               	addwf	(??_format_number+36)& (0+255),w,b
  2715  001688  6EE9               	movwf	fsr0l,c
  2716  00168A  6AEA               	clrf	fsr0h,c
  2717  00168C  0E01               	movlw	high (??_format_number+4)
  2718  00168E  22EA               	addwfc	fsr0h,f,c
  2719  001690  50EF               	movf	indf0,w,c
  2720  001692  0012               	return	
  2721  001694  FFFF               	dw	65535	; errata NOP
  2722  001696                     u3289:
  2723  001696  FFFF               	dw	65535	; assembler added errata NOP
  2724  001698  0719               	decf	(??_format_number+3)& (0+255),f,b
  2725  00169A  5119               	movf	(??_format_number+3)& (0+255),w,b
  2726  00169C  0A80               	xorlw	128
  2727  00169E  0F7F               	addlw	-129
  2728  0016A0  E2E1               	bc	l660
  2729  0016A2                     l661:
  2730                           ; BSR set to: 1
  2731                           ;format.c: 44: }
  2732                           ; BSR set to: 1
  2733  0016A2  0012               	return	
  2734  0016A4  FFFF               	dw	65535	; errata NOP
  2735  0016A6                     __end_of_format_number:
  2736                           	opt stack 0
  2737                           
  2738                           	psect	text19
  2739                           ; =============== function _format_number ends =
      +                          ===========
  2740                           ; *************** function _pow ****************
      +                          *
  2741                           ; Defined at:
  2742                           ;		line 6 in file "C:\Program Files (x86)\HI-TEC
      +                          H Software\PICC-18\PRO\9.66\sources\pow.c"
  2743                           ; Parameters:
  2744                           ;		x              size:   4offs:   0	type: void 
  2745                           ;		y              size:   4offs:   4	type: void 
  2746                           ; Auto variables:
  2747                           ;		sign        	       	type: unsigned char 
  2748                           ;		yi          	       	type: unsigned long 
  2749                           ; Return value:
  2750                           ;		type: unsigned long 
  2751                           ;		size: 4
  2752                           ; Registers used:
  2753                           ;		wreg, fsr0l, fsr0h, fsr1l, fsr2l, status,2, s
      +                          tatus,0, tblptrl, tblptrh, tblptru, tablat, prod
      +                          l, prodh, cstack
  2754                           ; Tracked objects:
  2755                           ;		On entry : F/1
  2756                           ;		On exit  : F/1
  2757                           ;		Unchanged: FFFFFFF0/0
  2758                           ; Data sizes:
  2759                           ;		Autos:    5
  2760                           ;		Params:   8
  2761                           ;		Temp:     0
  2762                           ;		Total:   13
  2763                           ; This function calls:
  2764                           ;		___flge
  2765                           ;		___fltol
  2766                           ;		___lltofl
  2767                           ;		___flneg
  2768                           ;		_log
  2769                           ;		___flmul
  2770                           ;		_exp
  2771                           ; This function is called by:
  2772                           ;		_format_double
  2773                           ; This function uses a non-reentrant model
  2774                           ; 
  2775  000000                     
  2776  00144C                     _pow:
  2777                           	opt stack 27
  2778                           ; BSR set to: 1
  2779  00144C  FFFF               	dw	65535
  2780  00144E  6B2A               	clrf	??_pow& (0+255),b
  2781  001450  EE01  F022         	lfsr	0,?_pow
  2782  001454  50EE               	movf	postinc0,w,c
  2783  001456  10EE               	iorwf	postinc0,w,c
  2784  001458  10EE               	iorwf	postinc0,w,c
  2785  00145A  10EE               	iorwf	postinc0,w,c
  2786  00145C  E110               	bnz	l889
  2787  00145E  C126  F147         	movff	?_pow+4,?___flge+4
  2788  001462  C127  F148         	movff	?_pow+5,?___flge+5
  2789  001466  C128  F149         	movff	?_pow+6,?___flge+6
  2790  00146A  C129  F14A         	movff	?_pow+7,?___flge+7
  2791  00146E  0E00               	movlw	0
  2792  001470  6B43               	clrf	?___flge& (0+255),b
  2793  001472  6B44               	clrf	(?___flge+1)& (0+255),b
  2794  001474  6B45               	clrf	(?___flge+2)& (0+255),b
  2795  001476  6B46               	clrf	(?___flge+3)& (0+255),b
  2796  001478  EC81  F011         	call	___flge
  2797  00147C  D038               	goto	u3200
  2798                           ; BSR set to: 1
  2799  00147E                     l889:
  2800                           ; BSR set to: 1
  2801  00147E  EE01  F026         	lfsr	0,?_pow+4
  2802  001482  50EE               	movf	postinc0,w,c
  2803  001484  10EE               	iorwf	postinc0,w,c
  2804  001486  10EE               	iorwf	postinc0,w,c
  2805  001488  10EE               	iorwf	postinc0,w,c
  2806  00148A  E107               	bnz	l891
  2807  00148C  6B22               	clrf	?_pow& (0+255),b
  2808  00148E  6B23               	clrf	(?_pow+1)& (0+255),b
  2809  001490  0E80               	movlw	128
  2810  001492  6F24               	movwf	(?_pow+2)& (0+255),b
  2811  001494  0E3F               	movlw	63
  2812  001496  6F25               	movwf	(?_pow+3)& (0+255),b
  2813  001498  D088               	goto	l888
  2814  00149A                     l891:
  2815                           ; BSR set to: 1
  2816  00149A  AF25               	btfss	(?_pow+3)& (0+255),7,b
  2817  00149C  D043               	goto	l892
  2818  00149E  C126  F143         	movff	?_pow+4,?___fltol
  2819  0014A2  C127  F144         	movff	?_pow+5,?___fltol+1
  2820  0014A6  C128  F145         	movff	?_pow+6,?___fltol+2
  2821  0014AA  C129  F146         	movff	?_pow+7,?___fltol+3
  2822  0014AE  EC02  F00F         	call	___fltol	;wreg free
  2823  0014B2  C143  F12B         	movff	?___fltol,??_pow+1
  2824  0014B6  C144  F12C         	movff	?___fltol+1,??_pow+2
  2825  0014BA  C145  F12D         	movff	?___fltol+2,??_pow+3
  2826  0014BE  C146  F12E         	movff	?___fltol+3,??_pow+4
  2827  0014C2  C12B  F12F         	movff	??_pow+1,?___lltofl
  2828  0014C6  C12C  F130         	movff	??_pow+2,?___lltofl+1
  2829  0014CA  C12D  F131         	movff	??_pow+3,?___lltofl+2
  2830  0014CE  C12E  F132         	movff	??_pow+4,?___lltofl+3
  2831  0014D2  EC59  F011         	call	___lltofl	;wreg free
  2832  0014D6  5129               	movf	(?_pow+7)& (0+255),w,b
  2833  0014D8  1932               	xorwf	(?___lltofl+3)& (0+255),w,b
  2834  0014DA  E108               	bnz	u3205
  2835  0014DC  5128               	movf	(?_pow+6)& (0+255),w,b
  2836  0014DE  1931               	xorwf	(?___lltofl+2)& (0+255),w,b
  2837  0014E0  E105               	bnz	u3205
  2838  0014E2  5127               	movf	(?_pow+5)& (0+255),w,b
  2839  0014E4  1930               	xorwf	(?___lltofl+1)& (0+255),w,b
  2840  0014E6  E102               	bnz	u3205
  2841  0014E8  5126               	movf	(?_pow+4)& (0+255),w,b
  2842  0014EA  192F               	xorwf	?___lltofl& (0+255),w,b
  2843  0014EC                     u3205:
  2844  0014EC  E006               	bz	l893
  2845  0014EE                     u3200:
  2846  0014EE  FFFF               	dw	65535	; assembler added errata NOP
  2847  0014F0  6B22               	clrf	?_pow& (0+255),b
  2848  0014F2  6B23               	clrf	(?_pow+1)& (0+255),b
  2849  0014F4  6B24               	clrf	(?_pow+2)& (0+255),b
  2850  0014F6  6B25               	clrf	(?_pow+3)& (0+255),b
  2851  0014F8  D058               	goto	l888
  2852  0014FA                     l893:
  2853                           ; BSR set to: 1
  2854  0014FA  512B               	movf	(??_pow+1)& (0+255),w,b
  2855  0014FC  0B01               	andlw	1
  2856  0014FE  6F2A               	movwf	??_pow& (0+255),b
  2857  001500  C122  F14D         	movff	?_pow,?___flneg
  2858  001504  C123  F14E         	movff	?_pow+1,?___flneg+1
  2859  001508  C124  F14F         	movff	?_pow+2,?___flneg+2
  2860  00150C  C125  F150         	movff	?_pow+3,?___flneg+3
  2861  001510  ECF9  F012         	call	___flneg	;wreg free
  2862  001514  C14D  F122         	movff	?___flneg,?_pow
  2863  001518  C14E  F123         	movff	?___flneg+1,?_pow+1
  2864  00151C  C14F  F124         	movff	?___flneg+2,?_pow+2
  2865  001520  C150  F125         	movff	?___flneg+3,?_pow+3
  2866  001524                     l892:
  2867  001524  FFFF               	dw	65535	; assembler added errata NOP
  2868                           ; BSR set to: 1
  2869  001526  C122  F12F         	movff	?_pow,?_log
  2870  00152A  C123  F130         	movff	?_pow+1,?_log+1
  2871  00152E  C124  F131         	movff	?_pow+2,?_log+2
  2872  001532  C125  F132         	movff	?_pow+3,?_log+3
  2873  001536  EC72  F009         	call	_log	;wreg free
  2874  00153A  C12F  F155         	movff	?_log,?___flmul
  2875  00153E  C130  F156         	movff	?_log+1,?___flmul+1
  2876  001542  C131  F157         	movff	?_log+2,?___flmul+2
  2877  001546  C132  F158         	movff	?_log+3,?___flmul+3
  2878  00154A  C126  F159         	movff	?_pow+4,?___flmul+4
  2879  00154E  C127  F15A         	movff	?_pow+5,?___flmul+5
  2880  001552  C128  F15B         	movff	?_pow+6,?___flmul+6
  2881  001556  C129  F15C         	movff	?_pow+7,?___flmul+7
  2882  00155A  EC2F  F00D         	call	___flmul	;wreg free
  2883  00155E  C155  F12F         	movff	?___flmul,?_exp
  2884  001562  C156  F130         	movff	?___flmul+1,?_exp+1
  2885  001566  C157  F131         	movff	?___flmul+2,?_exp+2
  2886  00156A  C158  F132         	movff	?___flmul+3,?_exp+3
  2887  00156E  ECFA  F006         	call	_exp	;wreg free
  2888  001572  C12F  F122         	movff	?_exp,?_pow
  2889  001576  C130  F123         	movff	?_exp+1,?_pow+1
  2890  00157A  C131  F124         	movff	?_exp+2,?_pow+2
  2891  00157E  C132  F125         	movff	?_exp+3,?_pow+3
  2892  001582  512A               	movf	??_pow& (0+255),w,b
  2893  001584  E012               	bz	l894
  2894  001586  C122  F14D         	movff	?_pow,?___flneg
  2895  00158A  C123  F14E         	movff	?_pow+1,?___flneg+1
  2896  00158E  C124  F14F         	movff	?_pow+2,?___flneg+2
  2897  001592  C125  F150         	movff	?_pow+3,?___flneg+3
  2898  001596  ECF9  F012         	call	___flneg	;wreg free
  2899  00159A  C14D  F122         	movff	?___flneg,?_pow
  2900  00159E  C14E  F123         	movff	?___flneg+1,?_pow+1
  2901  0015A2  C14F  F124         	movff	?___flneg+2,?_pow+2
  2902  0015A6  C150  F125         	movff	?___flneg+3,?_pow+3
  2903  0015AA                     l894:
  2904                           ; BSR set to: 1
  2905  0015AA                     l888:
  2906  0015AA  FFFF               	dw	65535	; assembler added errata NOP
  2907                           ; BSR set to: 1
  2908  0015AC  0012               	return	
  2909  0015AE  FFFF               	dw	65535	; errata NOP
  2910  0015B0                     __end_of_pow:
  2911                           	opt stack 0
  2912                           
  2913                           	psect	text20
  2914                           ; =============== function _pow ends ===========
      +                          =
  2915                           ; *************** function _exp ****************
      +                          *
  2916                           ; Defined at:
  2917                           ;		line 13 in file "C:\Program Files (x86)\HI-TE
      +                          CH Software\PICC-18\PRO\9.66\sources\exp.c"
  2918                           ; Parameters:
  2919                           ;		x              size:   4offs:   0	type: unsig
      +                          ned long 
  2920                           ; Auto variables:
  2921                           ;		sign        	       	type: unsigned char 
  2922                           ;		exp         	       	type: int 
  2923                           ; Return value:
  2924                           ;		type: int 
  2925                           ;		size: 4
  2926                           ; Registers used:
  2927                           ;		wreg, fsr0l, fsr0h, fsr1l, fsr2l, status,2, s
      +                          tatus,0, tblptrl, tblptrh, tblptru, tablat, prod
      +                          l, prodh, cstack
  2928                           ; Tracked objects:
  2929                           ;		On entry : F/1
  2930                           ;		On exit  : F/1
  2931                           ;		Unchanged: FFFFFFF0/0
  2932                           ; Data sizes:
  2933                           ;		Autos:    6
  2934                           ;		Params:   4
  2935                           ;		Temp:     0
  2936                           ;		Total:   10
  2937                           ; This function calls:
  2938                           ;		___flge
  2939                           ;		___flneg
  2940                           ;		___asflmul
  2941                           ;		_floor
  2942                           ;		___fltol
  2943                           ;		___awtofl
  2944                           ;		___asflsub
  2945                           ;		_eval_poly
  2946                           ;		_ldexp
  2947                           ;		___fldiv
  2948                           ; This function is called by:
  2949                           ;		_pow
  2950                           ; This function uses a non-reentrant model
  2951                           ; 
  2952  000000                     
  2953  000DF4                     _exp:
  2954                           	opt stack 26
  2955                           ; BSR set to: 1
  2956  000DF4  FFFF               	dw	65535
  2957  000DF6  EE01  F02F         	lfsr	0,?_exp
  2958  000DFA  50EE               	movf	postinc0,w,c
  2959  000DFC  10EE               	iorwf	postinc0,w,c
  2960  000DFE  10EE               	iorwf	postinc0,w,c
  2961  000E00  10EE               	iorwf	postinc0,w,c
  2962  000E02  E106               	bnz	l1306
  2963  000E04  6B2F               	clrf	?_exp& (0+255),b
  2964  000E06  6B30               	clrf	(?_exp+1)& (0+255),b
  2965  000E08  0E80               	movlw	128
  2966  000E0A  6F31               	movwf	(?_exp+2)& (0+255),b
  2967  000E0C  0E3F               	movlw	63
  2968  000E0E  D017               	goto	L5
  2969  000E10                     l1306:
  2970                           ; BSR set to: 1
  2971  000E10  C12F  F147         	movff	?_exp,?___flge+4
  2972  000E14  C130  F148         	movff	?_exp+1,?___flge+5
  2973  000E18  C131  F149         	movff	?_exp+2,?___flge+6
  2974  000E1C  C132  F14A         	movff	?_exp+3,?___flge+7
  2975  000E20  0E18               	movlw	24
  2976  000E22  6F43               	movwf	?___flge& (0+255),b
  2977  000E24  0E72               	movlw	114
  2978  000E26  6F44               	movwf	(?___flge+1)& (0+255),b
  2979  000E28  0E31               	movlw	49
  2980  000E2A  6F45               	movwf	(?___flge+2)& (0+255),b
  2981  000E2C  0E44               	movlw	68
  2982  000E2E  6F46               	movwf	(?___flge+3)& (0+255),b
  2983  000E30  EC81  F011         	call	___flge	;wreg free
  2984  000E34  E207               	bc	l1307
  2985  000E36  692F               	setf	?_exp& (0+255),b
  2986  000E38  6930               	setf	(?_exp+1)& (0+255),b
  2987  000E3A  0E7F               	movlw	127
  2988  000E3C  6F31               	movwf	(?_exp+2)& (0+255),b
  2989  000E3E                     L5:
  2990  000E3E  FFFF               	dw	65535	; assembler added errata NOP
  2991  000E40  6F32               	movwf	(?_exp+3)& (0+255),b
  2992  000E42  D0C4               	goto	l1305
  2993  000E44                     l1307:
  2994                           ; BSR set to: 1
  2995  000E44  0E87               	movlw	135
  2996  000E46  6F47               	movwf	(?___flge+4)& (0+255),b
  2997  000E48  0E48               	movlw	72
  2998  000E4A  6F48               	movwf	(?___flge+5)& (0+255),b
  2999  000E4C  0E3A               	movlw	58
  3000  000E4E  6F49               	movwf	(?___flge+6)& (0+255),b
  3001  000E50  0EC4               	movlw	196
  3002  000E52  6F4A               	movwf	(?___flge+7)& (0+255),b
  3003  000E54  C12F  F143         	movff	?_exp,?___flge
  3004  000E58  C130  F144         	movff	?_exp+1,?___flge+1
  3005  000E5C  C131  F145         	movff	?_exp+2,?___flge+2
  3006  000E60  C132  F146         	movff	?_exp+3,?___flge+3
  3007  000E64  EC81  F011         	call	___flge	;wreg free
  3008  000E68  E201 D093          	bnc	u3360
  3009                           ; BSR set to: 1
  3010  000E6C  AF32               	btfss	(?_exp+3)& (0+255),7,b
  3011  000E6E  D002               	goto	u3330
  3012  000E70  0E01               	movlw	1
  3013  000E72  D002               	goto	u3336
  3014  000E74                     u3330:
  3015  000E74  FFFF               	dw	65535	; assembler added errata NOP
  3016  000E76  0E00               	movlw	0
  3017  000E78                     u3336:
  3018  000E78  FFFF               	dw	65535	; assembler added errata NOP
  3019  000E7A  6EE1               	movwf	fsr1l,c
  3020  000E7C  50E1               	movf	fsr1l,w,c
  3021  000E7E  E012               	bz	l1309
  3022  000E80  C12F  F14D         	movff	?_exp,?___flneg
  3023  000E84  C130  F14E         	movff	?_exp+1,?___flneg+1
  3024  000E88  C131  F14F         	movff	?_exp+2,?___flneg+2
  3025  000E8C  C132  F150         	movff	?_exp+3,?___flneg+3
  3026  000E90  ECF9  F012         	call	___flneg	;wreg free
  3027  000E94  C14D  F12F         	movff	?___flneg,?_exp
  3028  000E98  C14E  F130         	movff	?___flneg+1,?_exp+1
  3029  000E9C  C14F  F131         	movff	?___flneg+2,?_exp+2
  3030  000EA0  C150  F132         	movff	?___flneg+3,?_exp+3
  3031  000EA4                     l1309:
  3032                           ; BSR set to: 1
  3033  000EA4  0E3B               	movlw	59
  3034  000EA6  6F3B               	movwf	(?___asflmul+2)& (0+255),b
  3035  000EA8  0EAA               	movlw	170
  3036  000EAA  6F3C               	movwf	(?___asflmul+3)& (0+255),b
  3037  000EAC  0EB8               	movlw	184
  3038  000EAE  6F3D               	movwf	(?___asflmul+4)& (0+255),b
  3039  000EB0  0E3F               	movlw	63
  3040  000EB2  6F3E               	movwf	(?___asflmul+5)& (0+255),b
  3041  000EB4  0E2F               	movlw	low ?_exp
  3042  000EB6  6F39               	movwf	?___asflmul& (0+255),b
  3043  000EB8  0E01               	movlw	high ?_exp
  3044  000EBA  6F3A               	movwf	(?___asflmul+1)& (0+255),b
  3045  000EBC  ECCF  F011         	call	___asflmul	;wreg free
  3046  000EC0  C12F  F139         	movff	?_exp,?_floor
  3047  000EC4  C130  F13A         	movff	?_exp+1,?_floor+1
  3048  000EC8  C131  F13B         	movff	?_exp+2,?_floor+2
  3049  000ECC  C132  F13C         	movff	?_exp+3,?_floor+3
  3050  000ED0  EC53  F00B         	call	_floor	;wreg free
  3051  000ED4  C139  F143         	movff	?_floor,?___fltol
  3052  000ED8  C13A  F144         	movff	?_floor+1,?___fltol+1
  3053  000EDC  C13B  F145         	movff	?_floor+2,?___fltol+2
  3054  000EE0  C13C  F146         	movff	?_floor+3,?___fltol+3
  3055  000EE4  EC02  F00F         	call	___fltol	;wreg free
  3056  000EE8  C143  F137         	movff	?___fltol,??_exp+4
  3057  000EEC  C144  F138         	movff	?___fltol+1,??_exp+5
  3058  000EF0  C137  F145         	movff	??_exp+4,?___awtofl
  3059  000EF4  C138  F146         	movff	??_exp+5,?___awtofl+1
  3060  000EF8  ECE5  F00F         	call	___awtofl	;wreg free
  3061  000EFC  C145  F133         	movff	?___awtofl,??_exp
  3062  000F00  C146  F134         	movff	?___awtofl+1,??_exp+1
  3063  000F04  C147  F135         	movff	?___awtofl+2,??_exp+2
  3064  000F08  C148  F136         	movff	?___awtofl+3,??_exp+3
  3065  000F0C  C133  F13B         	movff	??_exp,?___asflsub+2
  3066  000F10  C134  F13C         	movff	??_exp+1,?___asflsub+3
  3067  000F14  C135  F13D         	movff	??_exp+2,?___asflsub+4
  3068  000F18  C136  F13E         	movff	??_exp+3,?___asflsub+5
  3069  000F1C  0E2F               	movlw	low ?_exp
  3070  000F1E  6F39               	movwf	?___asflsub& (0+255),b
  3071  000F20  0E01               	movlw	high ?_exp
  3072  000F22  6F3A               	movwf	(?___asflsub+1)& (0+255),b
  3073  000F24  ECF4  F011         	call	___asflsub	;wreg free
  3074  000F28  0E09               	movlw	9
  3075  000F2A  6F4A               	movwf	(?_eval_poly+5)& (0+255),b
  3076  000F2C  6B4B               	clrf	(?_eval_poly+6)& (0+255),b
  3077  000F2E  0E01               	movlw	low F65
  3078  000F30  6F49               	movwf	(?_eval_poly+4)& (0+255),b
  3079  000F32  C12F  F145         	movff	?_exp,?_eval_poly
  3080  000F36  C130  F146         	movff	?_exp+1,?_eval_poly+1
  3081  000F3A  C131  F147         	movff	?_exp+2,?_eval_poly+2
  3082  000F3E  C132  F148         	movff	?_exp+3,?_eval_poly+3
  3083  000F42  ECBD  F00C         	call	_eval_poly	;wreg free
  3084  000F46  C145  F139         	movff	?_eval_poly,?_ldexp
  3085  000F4A  C146  F13A         	movff	?_eval_poly+1,?_ldexp+1
  3086  000F4E  C147  F13B         	movff	?_eval_poly+2,?_ldexp+2
  3087  000F52  C148  F13C         	movff	?_eval_poly+3,?_ldexp+3
  3088  000F56  C137  F13D         	movff	??_exp+4,?_ldexp+4
  3089  000F5A  C138  F13E         	movff	??_exp+5,?_ldexp+5
  3090  000F5E  ECB2  F00E         	call	_ldexp	;wreg free
  3091  000F62  C139  F12F         	movff	?_ldexp,?_exp
  3092  000F66  C13A  F130         	movff	?_ldexp+1,?_exp+1
  3093  000F6A  C13B  F131         	movff	?_ldexp+2,?_exp+2
  3094  000F6E  C13C  F132         	movff	?_ldexp+3,?_exp+3
  3095  000F72  50E1               	movf	fsr1l,w,c
  3096  000F74  E02B               	bz	l1310
  3097  000F76  EE01  F02F         	lfsr	0,?_exp
  3098  000F7A  0EFF               	movlw	255
  3099  000F7C  18EE               	xorwf	postinc0,w,c
  3100  000F7E  0EFF               	movlw	255
  3101  000F80  B4D8               	btfsc	status,2,c
  3102  000F82  18EE               	xorwf	postinc0,w,c
  3103  000F84  0E7F               	movlw	127
  3104  000F86  B4D8               	btfsc	status,2,c
  3105  000F88  18EE               	xorwf	postinc0,w,c
  3106  000F8A  0E7F               	movlw	127
  3107  000F8C  B4D8               	btfsc	status,2,c
  3108  000F8E  18EE               	xorwf	postinc0,w,c
  3109  000F90  E105               	bnz	l1311
  3110  000F92                     u3360:
  3111  000F92  6B2F               	clrf	?_exp& (0+255),b
  3112  000F94  6B30               	clrf	(?_exp+1)& (0+255),b
  3113  000F96  6B31               	clrf	(?_exp+2)& (0+255),b
  3114  000F98  6B32               	clrf	(?_exp+3)& (0+255),b
  3115  000F9A  D018               	goto	l1305
  3116  000F9C                     l1311:
  3117                           ; BSR set to: 1
  3118  000F9C  C12F  F13D         	movff	?_exp,?___fldiv+4
  3119  000FA0  C130  F13E         	movff	?_exp+1,?___fldiv+5
  3120  000FA4  C131  F13F         	movff	?_exp+2,?___fldiv+6
  3121  000FA8  C132  F140         	movff	?_exp+3,?___fldiv+7
  3122  000FAC  6B39               	clrf	?___fldiv& (0+255),b
  3123  000FAE  6B3A               	clrf	(?___fldiv+1)& (0+255),b
  3124  000FB0  0E80               	movlw	128
  3125  000FB2  6F3B               	movwf	(?___fldiv+2)& (0+255),b
  3126  000FB4  0E3F               	movlw	63
  3127  000FB6  6F3C               	movwf	(?___fldiv+3)& (0+255),b
  3128  000FB8  ECFF  F00D         	call	___fldiv	;wreg free
  3129  000FBC  C139  F12F         	movff	?___fldiv,?_exp
  3130  000FC0  C13A  F130         	movff	?___fldiv+1,?_exp+1
  3131  000FC4  C13B  F131         	movff	?___fldiv+2,?_exp+2
  3132  000FC8  C13C  F132         	movff	?___fldiv+3,?_exp+3
  3133  000FCC                     l1310:
  3134                           ; BSR set to: 1
  3135  000FCC                     l1305:
  3136  000FCC  FFFF               	dw	65535	; assembler added errata NOP
  3137                           ; BSR set to: 1
  3138  000FCE  0012               	return	
  3139  000FD0  FFFF               	dw	65535	; errata NOP
  3140  000FD2                     __end_of_exp:
  3141                           	opt stack 0
  3142                           
  3143                           	psect	text21
  3144                           ; =============== function _exp ends ===========
      +                          =
  3145                           ; *************** function ___lltofl ***********
      +                          ******
  3146                           ; Defined at:
  3147                           ;		line 16 in file "C:\Program Files (x86)\HI-TE
      +                          CH Software\PICC-18\PRO\9.66\sources\lltofl.c"
  3148                           ; Parameters:
  3149                           ;		c              size:   4offs:   0	type: unsig
      +                          ned long 
  3150                           ; Auto variables:
  3151                           ;		exp         	       	type: unsigned char 
  3152                           ;		f1          	       	type: unsigned char 
  3153                           ; Return value:
  3154                           ;		type: unsigned char 
  3155                           ;		size: 4
  3156                           ; Registers used:
  3157                           ;		wreg, fsr0l, fsr0h, fsr2l, status,2, status,0
      +                          , cstack
  3158                           ; Tracked objects:
  3159                           ;		On entry : F/1
  3160                           ;		On exit  : F/1
  3161                           ;		Unchanged: FFFFFFF0/0
  3162                           ; Data sizes:
  3163                           ;		Autos:    4
  3164                           ;		Params:   4
  3165                           ;		Temp:     0
  3166                           ;		Total:    8
  3167                           ; This function calls:
  3168                           ;		___flpack
  3169                           ; This function is called by:
  3170                           ;		_pow
  3171                           ; This function uses a non-reentrant model
  3172                           ; 
  3173  000000                     
  3174  0022B2                     ___lltofl:
  3175                           	opt stack 26
  3176                           ; BSR set to: 1
  3177  0022B2  FFFF               	dw	65535
  3178  0022B4  5132               	movf	(?___lltofl+3)& (0+255),w,b
  3179  0022B6  112F               	iorwf	?___lltofl& (0+255),w,b
  3180  0022B8  1130               	iorwf	(?___lltofl+1)& (0+255),w,b
  3181  0022BA  1131               	iorwf	(?___lltofl+2)& (0+255),w,b
  3182  0022BC  E105               	bnz	l1205
  3183  0022BE  6B2F               	clrf	?___lltofl& (0+255),b
  3184  0022C0  6B30               	clrf	(?___lltofl+1)& (0+255),b
  3185  0022C2  6B31               	clrf	(?___lltofl+2)& (0+255),b
  3186  0022C4  6B32               	clrf	(?___lltofl+3)& (0+255),b
  3187  0022C6  D01A               	goto	l1204
  3188  0022C8                     l1205:
  3189                           ; BSR set to: 1
  3190  0022C8  0E96               	movlw	150
  3191  0022CA  6ED9               	movwf	fsr2l,c
  3192  0022CC  C12F  F133         	movff	?___lltofl,??___lltofl
  3193  0022D0  C130  F134         	movff	?___lltofl+1,??___lltofl+1
  3194  0022D4  C131  F135         	movff	?___lltofl+2,??___lltofl+2
  3195  0022D8  C132  F136         	movff	?___lltofl+3,??___lltofl+3
  3196  0022DC  CFD9 F165          	movff	fsr2l,?___flpack+2
  3197  0022E0  0E33               	movlw	low ??___lltofl
  3198  0022E2  6F63               	movwf	?___flpack& (0+255),b
  3199  0022E4  0E01               	movlw	high ??___lltofl
  3200  0022E6  6F64               	movwf	(?___flpack+1)& (0+255),b
  3201  0022E8  ECCD  F00B         	call	___flpack	;wreg free
  3202  0022EC  C133  F12F         	movff	??___lltofl,?___lltofl
  3203  0022F0  C134  F130         	movff	??___lltofl+1,?___lltofl+1
  3204  0022F4  C135  F131         	movff	??___lltofl+2,?___lltofl+2
  3205  0022F8  C136  F132         	movff	??___lltofl+3,?___lltofl+3
  3206  0022FC                     l1204:
  3207  0022FC  FFFF               	dw	65535	; assembler added errata NOP
  3208                           ; BSR set to: 1
  3209  0022FE  0012               	return	
  3210  002300  FFFF               	dw	65535	; errata NOP
  3211  002302                     __end_of___lltofl:
  3212                           	opt stack 0
  3213                           
  3214                           	psect	text22
  3215                           ; =============== function ___lltofl ends ======
      +                          ======
  3216                           ; *************** function ___lwmod ************
      +                          *****
  3217                           ; Defined at:
  3218                           ;		line 5 in file "C:\Program Files (x86)\HI-TEC
      +                          H Software\PICC-18\PRO\9.66\sources\lwmod.c"
  3219                           ; Parameters:
  3220                           ;		dividend       size:   2offs:   0	type: unsig
      +                          ned int 
  3221                           ;		divisor        size:   2offs:   2	type: unsig
      +                          ned int 
  3222                           ; Auto variables:
  3223                           ;		counter     	       	type: unsigned char 
  3224                           ; Return value:
  3225                           ;		type: unsigned int 
  3226                           ;		size: 2
  3227                           ; Registers used:
  3228                           ;		wreg, fsr2l, status,2, status,0
  3229                           ; Tracked objects:
  3230                           ;		On entry : F/1
  3231                           ;		On exit  : F/1
  3232                           ;		Unchanged: FFFFFFF0/0
  3233                           ; Data sizes:
  3234                           ;		Autos:    0
  3235                           ;		Params:   4
  3236                           ;		Temp:     0
  3237                           ;		Total:    4
  3238                           ; This function calls:
  3239                           ;		Nothing
  3240                           ; This function is called by:
  3241                           ;		_format_number
  3242                           ; This function uses a non-reentrant model
  3243                           ; 
  3244  000000                     
  3245  0024FE                     ___lwmod:
  3246                           	opt stack 26
  3247                           ; BSR set to: 1
  3248  0024FE  FFFF               	dw	65535
  3249  002500  513E               	movf	(?___lwmod+3)& (0+255),w,b
  3250  002502  113D               	iorwf	(?___lwmod+2)& (0+255),w,b
  3251  002504  E019               	bz	l1227
  3252  002506  0E01               	movlw	1
  3253  002508  6ED9               	movwf	fsr2l,c
  3254  00250A                     l1228:
  3255  00250A  FFFF               	dw	65535	; assembler added errata NOP
  3256                           ; BSR set to: 1
  3257  00250C  BF3E               	btfsc	(?___lwmod+3)& (0+255),7,b
  3258  00250E  D005               	goto	l1233
  3259                           ; BSR set to: 1
  3260  002510  90D8               	bcf	status,0,c
  3261  002512  373D               	rlcf	(?___lwmod+2)& (0+255),f,b
  3262  002514  373E               	rlcf	(?___lwmod+3)& (0+255),f,b
  3263  002516  2AD9               	incf	fsr2l,f,c
  3264  002518  D7F8               	goto	l1228
  3265                           ; BSR set to: 1
  3266  00251A                     l1233:
  3267  00251A  FFFF               	dw	65535	; assembler added errata NOP
  3268                           ; BSR set to: 1
  3269  00251C  513D               	movf	(?___lwmod+2)& (0+255),w,b
  3270  00251E  5D3B               	subwf	?___lwmod& (0+255),w,b
  3271  002520  513E               	movf	(?___lwmod+3)& (0+255),w,b
  3272  002522  593C               	subwfb	(?___lwmod+1)& (0+255),w,b
  3273  002524  E304               	bnc	l1234
  3274  002526  513D               	movf	(?___lwmod+2)& (0+255),w,b
  3275  002528  5F3B               	subwf	?___lwmod& (0+255),f,b
  3276  00252A  513E               	movf	(?___lwmod+3)& (0+255),w,b
  3277  00252C  5B3C               	subwfb	(?___lwmod+1)& (0+255),f,b
  3278  00252E                     l1234:
  3279                           ; BSR set to: 1
  3280  00252E  90D8               	bcf	status,0,c
  3281  002530  333E               	rrcf	(?___lwmod+3)& (0+255),f,b
  3282  002532  333D               	rrcf	(?___lwmod+2)& (0+255),f,b
  3283  002534  2ED9               	decfsz	fsr2l,f,c
  3284  002536  D7F1               	goto	l1233
  3285                           ; BSR set to: 1
  3286  002538                     l1227:
  3287                           ; BSR set to: 1
  3288                           ; BSR set to: 1
  3289  002538  0012               	return	
  3290  00253A  FFFF               	dw	65535	; errata NOP
  3291  00253C                     __end_of___lwmod:
  3292                           	opt stack 0
  3293                           
  3294                           	psect	text23
  3295                           ; =============== function ___lwmod ends =======
      +                          =====
  3296                           ; *************** function ___lwdiv ************
      +                          *****
  3297                           ; Defined at:
  3298                           ;		line 5 in file "C:\Program Files (x86)\HI-TEC
      +                          H Software\PICC-18\PRO\9.66\sources\lwdiv.c"
  3299                           ; Parameters:
  3300                           ;		dividend       size:   2offs:   0	type: unsig
      +                          ned int 
  3301                           ;		divisor        size:   2offs:   2	type: unsig
      +                          ned int 
  3302                           ; Auto variables:
  3303                           ;		counter     	       	type: unsigned char 
  3304                           ;		quotient    	       	type: unsigned int 
  3305                           ; Return value:
  3306                           ;		type: unsigned int 
  3307                           ;		size: 2
  3308                           ; Registers used:
  3309                           ;		wreg, fsr2l, status,2, status,0, prodl, prodh
  3310                           ; Tracked objects:
  3311                           ;		On entry : F/1
  3312                           ;		On exit  : F/1
  3313                           ;		Unchanged: FFFFFFF0/0
  3314                           ; Data sizes:
  3315                           ;		Autos:    0
  3316                           ;		Params:   4
  3317                           ;		Temp:     0
  3318                           ;		Total:    4
  3319                           ; This function calls:
  3320                           ;		Nothing
  3321                           ; This function is called by:
  3322                           ;		_format_number
  3323                           ; This function uses a non-reentrant model
  3324                           ; 
  3325  000000                     
  3326  00225E                     ___lwdiv:
  3327                           	opt stack 26
  3328                           ; BSR set to: 1
  3329  00225E  FFFF               	dw	65535
  3330  002260  6AF3               	clrf	prodl,c
  3331  002262  6AF4               	clrf	prodh,c
  3332  002264  513E               	movf	(?___lwdiv+3)& (0+255),w,b
  3333  002266  113D               	iorwf	(?___lwdiv+2)& (0+255),w,b
  3334  002268  E01E               	bz	l1218
  3335  00226A  0E01               	movlw	1
  3336  00226C  6ED9               	movwf	fsr2l,c
  3337  00226E                     l1219:
  3338  00226E  FFFF               	dw	65535	; assembler added errata NOP
  3339                           ; BSR set to: 1
  3340  002270  90D8               	bcf	status,0,c
  3341                           ; BSR set to: 1
  3342  002272  BF3E               	btfsc	(?___lwdiv+3)& (0+255),7,b
  3343  002274  D006               	goto	L6
  3344  002276  373D               	rlcf	(?___lwdiv+2)& (0+255),f,b
  3345  002278  373E               	rlcf	(?___lwdiv+3)& (0+255),f,b
  3346  00227A  2AD9               	incf	fsr2l,f,c
  3347  00227C  D7F8               	goto	l1219
  3348                           ; BSR set to: 1
  3349  00227E                     l1224:
  3350  00227E  FFFF               	dw	65535	; assembler added errata NOP
  3351                           ; BSR set to: 1
  3352  002280  90D8               	bcf	status,0,c
  3353  002282                     L6:
  3354  002282  FFFF               	dw	65535	; assembler added errata NOP
  3355  002284  36F3               	rlcf	prodl,f,c
  3356  002286  36F4               	rlcf	prodh,f,c
  3357  002288  513D               	movf	(?___lwdiv+2)& (0+255),w,b
  3358  00228A  5D3B               	subwf	?___lwdiv& (0+255),w,b
  3359  00228C  513E               	movf	(?___lwdiv+3)& (0+255),w,b
  3360  00228E  593C               	subwfb	(?___lwdiv+1)& (0+255),w,b
  3361  002290  E305               	bnc	l1225
  3362  002292  513D               	movf	(?___lwdiv+2)& (0+255),w,b
  3363  002294  5F3B               	subwf	?___lwdiv& (0+255),f,b
  3364  002296  513E               	movf	(?___lwdiv+3)& (0+255),w,b
  3365  002298  5B3C               	subwfb	(?___lwdiv+1)& (0+255),f,b
  3366  00229A  80F3               	bsf	prodl,0,c
  3367  00229C                     l1225:
  3368                           ; BSR set to: 1
  3369  00229C  90D8               	bcf	status,0,c
  3370  00229E  333E               	rrcf	(?___lwdiv+3)& (0+255),f,b
  3371  0022A0  333D               	rrcf	(?___lwdiv+2)& (0+255),f,b
  3372  0022A2  2ED9               	decfsz	fsr2l,f,c
  3373  0022A4  D7EC               	goto	l1224
  3374                           ; BSR set to: 1
  3375  0022A6                     l1218:
  3376                           ; BSR set to: 1
  3377  0022A6  CFF3 F13B          	movff	prodl,?___lwdiv
  3378  0022AA  CFF4 F13C          	movff	prodh,?___lwdiv+1
  3379                           ; BSR set to: 1
  3380  0022AE  0012               	return	
  3381  0022B0  FFFF               	dw	65535	; errata NOP
  3382  0022B2                     __end_of___lwdiv:
  3383                           	opt stack 0
  3384                           
  3385                           	psect	text24
  3386                           ; =============== function ___lwdiv ends =======
      +                          =====
  3387                           ; *************** function _output_putch *******
      +                          **********
  3388                           ; Defined at:
  3389                           ;		line 48 in file "../../../src/LC-meter.c"
  3390                           ; Parameters:
  3391                           ;		c              size:   1reg:   wre	type: unsi
      +                          gned char 
  3392                           ; Auto variables:
  3393                           ;		None
  3394                           ; Return value:
  3395                           ;		type: void 
  3396                           ;		size: 0
  3397                           ; Registers used:
  3398                           ;		wreg, fsr0l, fsr0h, fsr1l, fsr2l, status,2, s
      +                          tatus,0, cstack
  3399                           ; Tracked objects:
  3400                           ;		On entry : F/1
  3401                           ;		On exit  : F/1
  3402                           ;		Unchanged: FFFFFFFF/0
  3403                           ; Data sizes:
  3404                           ;		Autos:    0
  3405                           ;		Params:   0
  3406                           ;		Temp:     0
  3407                           ;		Total:    0
  3408                           ; This function calls:
  3409                           ;		_ser_putch
  3410                           ; This function is called by:
  3411                           ;		_measure_capacitance
  3412                           ; This function uses a non-reentrant model
  3413                           ; 
  3414  000000                     
  3415                           ;LC-meter.c: 47: void
  3416                           ;LC-meter.c: 48: output_putch(char c) {
  3417  00260A                     _output_putch:
  3418                           	opt stack 26
  3419                           ; BSR set to: 1
  3420  00260A  FFFF               	dw	65535
  3421                           ; output_putch@c loaded to fsr1l
  3422  00260C  CFE8 FFE1          	movff	wreg,fsr1l
  3423  002610  50E1               	movf	fsr1l,w,c
  3424  002612  EFD0  F012         	goto	_ser_putch
  3425                           ;LC-meter.c: 56: }
  3426                           ; BSR set to: 1
  3427  002616  FFFF               	dw	65535	; errata NOP
  3428  002618                     __end_of_output_putch:
  3429                           	opt stack 0
  3430                           
  3431                           	psect	text25
  3432                           ; =============== function _output_putch ends ==
      +                          ==========
  3433                           ; *************** function _log ****************
      +                          *
  3434                           ; Defined at:
  3435                           ;		line 6 in file "C:\Program Files (x86)\HI-TEC
      +                          H Software\PICC-18\PRO\9.66\sources\log.c"
  3436                           ; Parameters:
  3437                           ;		x              size:   4offs:   0	type: void 
  3438                           ; Auto variables:
  3439                           ;		exp         	       	type: int 
  3440                           ; Return value:
  3441                           ;		type: int 
  3442                           ;		size: 4
  3443                           ; Registers used:
  3444                           ;		wreg, fsr0l, fsr0h, fsr2l, status,2, status,0
      +                          , tblptrl, tblptrh, tblptru, tablat, prodl, prod
      +                          h, cstack
  3445                           ; Tracked objects:
  3446                           ;		On entry : F/1
  3447                           ;		On exit  : F/1
  3448                           ;		Unchanged: FFFFFFF0/0
  3449                           ; Data sizes:
  3450                           ;		Autos:   18
  3451                           ;		Params:   4
  3452                           ;		Temp:     0
  3453                           ;		Total:   22
  3454                           ; This function calls:
  3455                           ;		_frexp
  3456                           ;		___flmul
  3457                           ;		___fladd
  3458                           ;		_eval_poly
  3459                           ;		___awtofl
  3460                           ; This function is called by:
  3461                           ;		_log10
  3462                           ;		_pow
  3463                           ; This function uses a non-reentrant model
  3464                           ; 
  3465  000000                     
  3466  0012E4                     _log:
  3467                           	opt stack 26
  3468                           ; BSR set to: 1
  3469  0012E4  FFFF               	dw	65535
  3470  0012E6  BF32               	btfsc	(?_log+3)& (0+255),7,b
  3471  0012E8  D007               	goto	u3450
  3472                           ; BSR set to: 1
  3473  0012EA  EE01  F02F         	lfsr	0,?_log
  3474  0012EE  50EE               	movf	postinc0,w,c
  3475  0012F0  10EE               	iorwf	postinc0,w,c
  3476  0012F2  10EE               	iorwf	postinc0,w,c
  3477  0012F4  10EE               	iorwf	postinc0,w,c
  3478  0012F6  E106               	bnz	l886
  3479  0012F8                     u3450:
  3480  0012F8  FFFF               	dw	65535	; assembler added errata NOP
  3481  0012FA  6B2F               	clrf	?_log& (0+255),b
  3482  0012FC  6B30               	clrf	(?_log+1)& (0+255),b
  3483  0012FE  6B31               	clrf	(?_log+2)& (0+255),b
  3484  001300  6B32               	clrf	(?_log+3)& (0+255),b
  3485  001302  D0A1               	goto	l884
  3486  001304                     l886:
  3487                           ; BSR set to: 1
  3488  001304  0E43               	movlw	low (??_log+16)
  3489  001306  6F49               	movwf	(?_frexp+4)& (0+255),b
  3490  001308  0E01               	movlw	high (??_log+16)
  3491  00130A  6F4A               	movwf	(?_frexp+5)& (0+255),b
  3492  00130C  C12F  F145         	movff	?_log,?_frexp
  3493  001310  C130  F146         	movff	?_log+1,?_frexp+1
  3494  001314  C131  F147         	movff	?_log+2,?_frexp+2
  3495  001318  C132  F148         	movff	?_log+3,?_frexp+3
  3496  00131C  EC2A  F010         	call	_frexp	;wreg free
  3497  001320  C145  F133         	movff	?_frexp,??_log
  3498  001324  C146  F134         	movff	?_frexp+1,??_log+1
  3499  001328  C147  F135         	movff	?_frexp+2,??_log+2
  3500  00132C  C148  F136         	movff	?_frexp+3,??_log+3
  3501  001330  6B59               	clrf	(?___flmul+4)& (0+255),b
  3502  001332  6B5A               	clrf	(?___flmul+5)& (0+255),b
  3503  001334  6B5B               	clrf	(?___flmul+6)& (0+255),b
  3504  001336  0E40               	movlw	64
  3505  001338  6F5C               	movwf	(?___flmul+7)& (0+255),b
  3506  00133A  C133  F155         	movff	??_log,?___flmul
  3507  00133E  C134  F156         	movff	??_log+1,?___flmul+1
  3508  001342  C135  F157         	movff	??_log+2,?___flmul+2
  3509  001346  C136  F158         	movff	??_log+3,?___flmul+3
  3510  00134A  EC2F  F00D         	call	___flmul	;wreg free
  3511  00134E  C155  F137         	movff	?___flmul,??_log+4
  3512  001352  C156  F138         	movff	?___flmul+1,??_log+5
  3513  001356  C157  F139         	movff	?___flmul+2,??_log+6
  3514  00135A  C158  F13A         	movff	?___flmul+3,??_log+7
  3515  00135E  6B59               	clrf	(?___fladd+4)& (0+255),b
  3516  001360  6B5A               	clrf	(?___fladd+5)& (0+255),b
  3517  001362  0E80               	movlw	128
  3518  001364  6F5B               	movwf	(?___fladd+6)& (0+255),b
  3519  001366  0EBF               	movlw	191
  3520  001368  6F5C               	movwf	(?___fladd+7)& (0+255),b
  3521  00136A  C137  F155         	movff	??_log+4,?___fladd
  3522  00136E  C138  F156         	movff	??_log+5,?___fladd+1
  3523  001372  C139  F157         	movff	??_log+6,?___fladd+2
  3524  001376  C13A  F158         	movff	??_log+7,?___fladd+3
  3525  00137A  ECBB  F008         	call	___fladd	;wreg free
  3526  00137E  C155  F12F         	movff	?___fladd,?_log
  3527  001382  C156  F130         	movff	?___fladd+1,?_log+1
  3528  001386  C157  F131         	movff	?___fladd+2,?_log+2
  3529  00138A  C158  F132         	movff	?___fladd+3,?_log+3
  3530  00138E  0743               	decf	(??_log+16)& (0+255),f,b
  3531  001390  A0D8               	btfss	status,0,c
  3532  001392  0744               	decf	(??_log+17)& (0+255),f,b
  3533  001394  0E08               	movlw	8
  3534  001396  6F4A               	movwf	(?_eval_poly+5)& (0+255),b
  3535  001398  6B4B               	clrf	(?_eval_poly+6)& (0+255),b
  3536  00139A  0E29               	movlw	low F64
  3537  00139C  6F49               	movwf	(?_eval_poly+4)& (0+255),b
  3538  00139E  C12F  F145         	movff	?_log,?_eval_poly
  3539  0013A2  C130  F146         	movff	?_log+1,?_eval_poly+1
  3540  0013A6  C131  F147         	movff	?_log+2,?_eval_poly+2
  3541  0013AA  C132  F148         	movff	?_log+3,?_eval_poly+3
  3542  0013AE  ECBD  F00C         	call	_eval_poly	;wreg free
  3543  0013B2  C145  F12F         	movff	?_eval_poly,?_log
  3544  0013B6  C146  F130         	movff	?_eval_poly+1,?_log+1
  3545  0013BA  C147  F131         	movff	?_eval_poly+2,?_log+2
  3546  0013BE  C148  F132         	movff	?_eval_poly+3,?_log+3
  3547  0013C2  C143  F145         	movff	??_log+16,?___awtofl
  3548  0013C6  C144  F146         	movff	??_log+17,?___awtofl+1
  3549  0013CA  ECE5  F00F         	call	___awtofl	;wreg free
  3550  0013CE  C145  F13B         	movff	?___awtofl,??_log+8
  3551  0013D2  C146  F13C         	movff	?___awtofl+1,??_log+9
  3552  0013D6  C147  F13D         	movff	?___awtofl+2,??_log+10
  3553  0013DA  C148  F13E         	movff	?___awtofl+3,??_log+11
  3554  0013DE  C13B  F155         	movff	??_log+8,?___flmul
  3555  0013E2  C13C  F156         	movff	??_log+9,?___flmul+1
  3556  0013E6  C13D  F157         	movff	??_log+10,?___flmul+2
  3557  0013EA  C13E  F158         	movff	??_log+11,?___flmul+3
  3558  0013EE  0E18               	movlw	24
  3559  0013F0  6F59               	movwf	(?___flmul+4)& (0+255),b
  3560  0013F2  0E72               	movlw	114
  3561  0013F4  6F5A               	movwf	(?___flmul+5)& (0+255),b
  3562  0013F6  0E31               	movlw	49
  3563  0013F8  6F5B               	movwf	(?___flmul+6)& (0+255),b
  3564  0013FA  0E3F               	movlw	63
  3565  0013FC  6F5C               	movwf	(?___flmul+7)& (0+255),b
  3566  0013FE  EC2F  F00D         	call	___flmul	;wreg free
  3567  001402  C155  F13F         	movff	?___flmul,??_log+12
  3568  001406  C156  F140         	movff	?___flmul+1,??_log+13
  3569  00140A  C157  F141         	movff	?___flmul+2,??_log+14
  3570  00140E  C158  F142         	movff	?___flmul+3,??_log+15
  3571  001412  C12F  F159         	movff	?_log,?___fladd+4
  3572  001416  C130  F15A         	movff	?_log+1,?___fladd+5
  3573  00141A  C131  F15B         	movff	?_log+2,?___fladd+6
  3574  00141E  C132  F15C         	movff	?_log+3,?___fladd+7
  3575  001422  C13F  F155         	movff	??_log+12,?___fladd
  3576  001426  C140  F156         	movff	??_log+13,?___fladd+1
  3577  00142A  C141  F157         	movff	??_log+14,?___fladd+2
  3578  00142E  C142  F158         	movff	??_log+15,?___fladd+3
  3579  001432  ECBB  F008         	call	___fladd	;wreg free
  3580  001436  C155  F12F         	movff	?___fladd,?_log
  3581  00143A  C156  F130         	movff	?___fladd+1,?_log+1
  3582  00143E  C157  F131         	movff	?___fladd+2,?_log+2
  3583  001442  C158  F132         	movff	?___fladd+3,?_log+3
  3584  001446                     l884:
  3585  001446  FFFF               	dw	65535	; assembler added errata NOP
  3586                           ; BSR set to: 1
  3587  001448  0012               	return	
  3588  00144A  FFFF               	dw	65535	; errata NOP
  3589  00144C                     __end_of_log:
  3590                           	opt stack 0
  3591                           
  3592                           	psect	text26
  3593                           ; =============== function _log ends ===========
      +                          =
  3594                           ; *************** function _format_putchar *****
      +                          ************
  3595                           ; Defined at:
  3596                           ;		line 6 in file "../../../lib/format.c"
  3597                           ; Parameters:
  3598                           ;		c              size:   1reg:   wre	type: unsi
      +                          gned char 
  3599                           ; Auto variables:
  3600                           ;		None
  3601                           ; Return value:
  3602                           ;		type: void 
  3603                           ;		size: 0
  3604                           ; Registers used:
  3605                           ;		wreg
  3606                           ; Tracked objects:
  3607                           ;		On entry : F/1
  3608                           ;		On exit  : F/1
  3609                           ;		Unchanged: FFFFFFFF/0
  3610                           ; Data sizes:
  3611                           ;		Autos:    0
  3612                           ;		Params:   0
  3613                           ;		Temp:     0
  3614                           ;		Total:    0
  3615                           ; This function calls:
  3616                           ;		Nothing
  3617                           ; This function is called by:
  3618                           ; This function uses a non-reentrant model
  3619                           ; 
  3620  000000                     
  3621                           ;format.c: 5: static void
  3622                           ;format.c: 6: format_putchar(char c) {
  3623  00262A                     _format_putchar:
  3624                           	opt stack 26
  3625                           ; BSR set to: 1
  3626  00262A  FFFF               	dw	65535
  3627                           ;format.c: 8: }
  3628                           ; BSR set to: 1
  3629  00262C  0012               	return	
  3630  00262E  FFFF               	dw	65535	; errata NOP
  3631  002630                     __end_of_format_putchar:
  3632                           	opt stack 0
  3633                           
  3634                           	psect	text27
  3635                           ; =============== function _format_putchar ends 
      +                          ============
  3636                           ; *************** function _ser_putch **********
      +                          *******
  3637                           ; Defined at:
  3638                           ;		line 82 in file "../../../lib/ser.c"
  3639                           ; Parameters:
  3640                           ;		c              size:   1reg:   wre	type: unsi
      +                          gned char 
  3641                           ; Auto variables:
  3642                           ;		None
  3643                           ; Return value:
  3644                           ;		type: void 
  3645                           ;		size: 0
  3646                           ; Registers used:
  3647                           ;		wreg, fsr0l, fsr0h, fsr2l, status,2, status,0
  3648                           ; Tracked objects:
  3649                           ;		On entry : 0/1
  3650                           ;		On exit  : 0/1
  3651                           ;		Unchanged: FFFFFFFF/0
  3652                           ; Data sizes:
  3653                           ;		Autos:    0
  3654                           ;		Params:   0
  3655                           ;		Temp:     0
  3656                           ;		Total:    0
  3657                           ; This function calls:
  3658                           ;		Nothing
  3659                           ; This function is called by:
  3660                           ;		_ser_puts
  3661                           ;		_output_putch
  3662                           ;		_measure_capacitance
  3663                           ; This function uses a non-reentrant model
  3664                           ; 
  3665  000000                     
  3666                           ;ser.c: 81: void
  3667                           ;ser.c: 82: ser_putch(char c) {
  3668  0025A0                     _ser_putch:
  3669                           	opt stack 25
  3670                           ; BSR set to: ?
  3671  0025A0  FFFF               	dw	65535
  3672                           ; ser_putch@c loaded to fsr2l
  3673  0025A2  CFE8 FFD9          	movff	wreg,fsr2l
  3674  0025A6                     l326:
  3675                           ; BSR set to: ?
  3676                           ; BSR set to: ?
  3677  0025A6  283A               	incf	58,w,c	;volatile
  3678  0025A8  0B0F               	andlw	15
  3679  0025AA  183C               	xorwf	60,w,c	;volatile
  3680  0025AC  E0FC               	bz	l326
  3681                           ; BSR set to: ?
  3682                           ;ser.c: 84: GIE = 0;
  3683  0025AE  9EF2               	bcf	intcon,7,c	;volatile
  3684                           ;ser.c: 85: txfifo[txiptr] = c;
  3685  0025B0  503A               	movf	58,w,c	;volatile
  3686  0025B2  0F14               	addlw	20
  3687  0025B4  6EE9               	movwf	fsr0l,c
  3688  0025B6  6AEA               	clrf	fsr0h,c
  3689  0025B8  CFD9 FFEF          	movff	fsr2l,indf0
  3690                           ;ser.c: 86: txiptr = (txiptr + 1) & ((unsigned c
      +                          har)16 - 1);
  3691  0025BC  283A               	incf	58,w,c	;volatile
  3692  0025BE  0B0F               	andlw	15
  3693  0025C0  6E3A               	movwf	58,c	;volatile
  3694                           ;ser.c: 87: TXIE = 1;
  3695  0025C2  889D               	bsf	3997,4,c	;volatile
  3696                           ;ser.c: 88: GIE = 1;
  3697  0025C4  8EF2               	bsf	intcon,7,c	;volatile
  3698                           ;ser.c: 89: }
  3699                           ; BSR set to: ?
  3700  0025C6  0012               	return	
  3701  0025C8  FFFF               	dw	65535	; errata NOP
  3702  0025CA                     __end_of_ser_putch:
  3703                           	opt stack 0
  3704                           
  3705                           	psect	text28
  3706                           ; =============== function _ser_putch ends =====
      +                          =======
  3707                           ; *************** function ___asflsub **********
      +                          *******
  3708                           ; Defined at:
  3709                           ;		line 5 in file "C:\Program Files (x86)\HI-TEC
      +                          H Software\PICC-18\PRO\9.66\sources\asflsub.c"
  3710                           ; Parameters:
  3711                           ;		f1p            size:   2offs:   0	type: PTR ;
      +                           Largest target is 4
  3712                           ;		 -> exp@x(4), format_double@num(4), 
  3713                           ;		f2             size:   4offs:   2	type: PTR 
  3714                           ; Auto variables:
  3715                           ;		None
  3716                           ; Return value:
  3717                           ;		type: PTR 
  3718                           ;		size: 4
  3719                           ; Registers used:
  3720                           ;		wreg, fsr0l, fsr0h, fsr2l, status,2, status,0
      +                          , prodl, prodh, cstack
  3721                           ; Tracked objects:
  3722                           ;		On entry : F/1
  3723                           ;		On exit  : F/1
  3724                           ;		Unchanged: FFFFFFF0/0
  3725                           ; Data sizes:
  3726                           ;		Autos:    0
  3727                           ;		Params:   6
  3728                           ;		Temp:     0
  3729                           ;		Total:    6
  3730                           ; This function calls:
  3731                           ;		___flsub
  3732                           ; This function is called by:
  3733                           ;		_format_double
  3734                           ;		_exp
  3735                           ; This function uses a non-reentrant model
  3736                           ; 
  3737  000000                     
  3738  0023E8                     ___asflsub:
  3739                           	opt stack 25
  3740                           ; BSR set to: 1
  3741  0023E8  FFFF               	dw	65535
  3742  0023EA  C13B  F143         	movff	?___asflsub+2,?___flsub+4
  3743  0023EE  C13C  F144         	movff	?___asflsub+3,?___flsub+5
  3744  0023F2  C13D  F145         	movff	?___asflsub+4,?___flsub+6
  3745  0023F6  C13E  F146         	movff	?___asflsub+5,?___flsub+7
  3746  0023FA  C139  FFE9         	movff	?___asflsub,fsr0l
  3747  0023FE  C13A  FFEA         	movff	?___asflsub+1,fsr0h
  3748  002402  CFEE F13F          	movff	postinc0,?___flsub
  3749  002406  CFEE F140          	movff	postinc0,?___flsub+1
  3750  00240A  CFEE F141          	movff	postinc0,?___flsub+2
  3751  00240E  CFEE F142          	movff	postinc0,?___flsub+3
  3752  002412  EC60  F012         	call	___flsub	;wreg free
  3753  002416  C139  FFE9         	movff	?___asflsub,fsr0l
  3754  00241A  C13A  FFEA         	movff	?___asflsub+1,fsr0h
  3755  00241E  C13F  FFEE         	movff	?___flsub,postinc0
  3756  002422  C140  FFEE         	movff	?___flsub+1,postinc0
  3757  002426  C141  FFEE         	movff	?___flsub+2,postinc0
  3758  00242A  C142  FFED         	movff	?___flsub+3,postdec0
  3759                           ; BSR set to: 1
  3760  00242E  0012               	return	
  3761  002430  FFFF               	dw	65535	; errata NOP
  3762  002432                     __end_of___asflsub:
  3763                           	opt stack 0
  3764                           
  3765                           	psect	text29
  3766                           ; =============== function ___asflsub ends =====
      +                          =======
  3767                           ; *************** function _floor **************
      +                          ***
  3768                           ; Defined at:
  3769                           ;		line 14 in file "C:\Program Files (x86)\HI-TE
      +                          CH Software\PICC-18\PRO\9.66\sources\floor.c"
  3770                           ; Parameters:
  3771                           ;		x              size:   4offs:   0	type: PTR 
  3772                           ; Auto variables:
  3773                           ;		expon       	       	type: int 
  3774                           ;		i           	       	type: int 
  3775                           ; Return value:
  3776                           ;		type: int 
  3777                           ;		size: 4
  3778                           ; Registers used:
  3779                           ;		wreg, fsr0l, fsr0h, fsr2l, status,2, status,0
      +                          , prodl, prodh, cstack
  3780                           ; Tracked objects:
  3781                           ;		On entry : F/1
  3782                           ;		On exit  : F/1
  3783                           ;		Unchanged: FFFFFFF0/0
  3784                           ; Data sizes:
  3785                           ;		Autos:    6
  3786                           ;		Params:   4
  3787                           ;		Temp:     0
  3788                           ;		Total:   10
  3789                           ; This function calls:
  3790                           ;		_frexp
  3791                           ;		___fltol
  3792                           ;		___altofl
  3793                           ;		___flge
  3794                           ;		___fladd
  3795                           ; This function is called by:
  3796                           ;		_format_double
  3797                           ;		_exp
  3798                           ; This function uses a non-reentrant model
  3799                           ; 
  3800  000000                     
  3801  0016A6                     _floor:
  3802                           	opt stack 25
  3803                           ; BSR set to: 1
  3804  0016A6  FFFF               	dw	65535
  3805  0016A8  0E3D               	movlw	low ??_floor
  3806  0016AA  6F49               	movwf	(?_frexp+4)& (0+255),b
  3807  0016AC  0E01               	movlw	high ??_floor
  3808  0016AE  6F4A               	movwf	(?_frexp+5)& (0+255),b
  3809  0016B0  C139  F145         	movff	?_floor,?_frexp
  3810  0016B4  C13A  F146         	movff	?_floor+1,?_frexp+1
  3811  0016B8  C13B  F147         	movff	?_floor+2,?_frexp+2
  3812  0016BC  C13C  F148         	movff	?_floor+3,?_frexp+3
  3813  0016C0  EC2A  F010         	call	_frexp	;wreg free
  3814  0016C4  AF3E               	btfss	(??_floor+1)& (0+255),7,b
  3815  0016C6  D00F               	goto	l880
  3816  0016C8  AF3C               	btfss	(?_floor+3)& (0+255),7,b
  3817  0016CA  D007               	goto	l881
  3818  0016CC  6B39               	clrf	?_floor& (0+255),b
  3819  0016CE  6B3A               	clrf	(?_floor+1)& (0+255),b
  3820  0016D0  0E80               	movlw	128
  3821  0016D2  6F3B               	movwf	(?_floor+2)& (0+255),b
  3822  0016D4  0EBF               	movlw	191
  3823  0016D6  6F3C               	movwf	(?_floor+3)& (0+255),b
  3824  0016D8  D05D               	goto	l879
  3825  0016DA                     l881:
  3826  0016DA  FFFF               	dw	65535	; assembler added errata NOP
  3827                           ; BSR set to: 1
  3828  0016DC  6B39               	clrf	?_floor& (0+255),b
  3829  0016DE  6B3A               	clrf	(?_floor+1)& (0+255),b
  3830  0016E0  6B3B               	clrf	(?_floor+2)& (0+255),b
  3831  0016E2  6B3C               	clrf	(?_floor+3)& (0+255),b
  3832  0016E4  D057               	goto	l879
  3833  0016E6                     l880:
  3834  0016E6  FFFF               	dw	65535	; assembler added errata NOP
  3835                           ; BSR set to: 1
  3836  0016E8  0E1D               	movlw	29
  3837  0016EA  5D3D               	subwf	??_floor& (0+255),w,b
  3838  0016EC  0E00               	movlw	0
  3839  0016EE  593E               	subwfb	(??_floor+1)& (0+255),w,b
  3840  0016F0  E301               	bnc	l882
  3841  0016F2  D050               	goto	l879
  3842  0016F4                     l882:
  3843                           ; BSR set to: 1
  3844  0016F4  C139  F143         	movff	?_floor,?___fltol
  3845  0016F8  C13A  F144         	movff	?_floor+1,?___fltol+1
  3846  0016FC  C13B  F145         	movff	?_floor+2,?___fltol+2
  3847  001700  C13C  F146         	movff	?_floor+3,?___fltol+3
  3848  001704  EC02  F00F         	call	___fltol	;wreg free
  3849  001708  C143  F143         	movff	?___fltol,?___altofl
  3850  00170C  C144  F144         	movff	?___fltol+1,?___altofl+1
  3851  001710  C145  F145         	movff	?___fltol+2,?___altofl+2
  3852  001714  C146  F146         	movff	?___fltol+3,?___altofl+3
  3853  001718  EC9B  F00F         	call	___altofl	;wreg free
  3854  00171C  C143  F13F         	movff	?___altofl,??_floor+2
  3855  001720  C144  F140         	movff	?___altofl+1,??_floor+3
  3856  001724  C145  F141         	movff	?___altofl+2,??_floor+4
  3857  001728  C146  F142         	movff	?___altofl+3,??_floor+5
  3858  00172C  C13F  F147         	movff	??_floor+2,?___flge+4
  3859  001730  C140  F148         	movff	??_floor+3,?___flge+5
  3860  001734  C141  F149         	movff	??_floor+4,?___flge+6
  3861  001738  C142  F14A         	movff	??_floor+5,?___flge+7
  3862  00173C  C139  F143         	movff	?_floor,?___flge
  3863  001740  C13A  F144         	movff	?_floor+1,?___flge+1
  3864  001744  C13B  F145         	movff	?_floor+2,?___flge+2
  3865  001748  C13C  F146         	movff	?_floor+3,?___flge+3
  3866  00174C  EC81  F011         	call	___flge	;wreg free
  3867  001750  E219               	bc	l883
  3868  001752  6B59               	clrf	(?___fladd+4)& (0+255),b
  3869  001754  6B5A               	clrf	(?___fladd+5)& (0+255),b
  3870  001756  0E80               	movlw	128
  3871  001758  6F5B               	movwf	(?___fladd+6)& (0+255),b
  3872  00175A  0EBF               	movlw	191
  3873  00175C  6F5C               	movwf	(?___fladd+7)& (0+255),b
  3874  00175E  C13F  F155         	movff	??_floor+2,?___fladd
  3875  001762  C140  F156         	movff	??_floor+3,?___fladd+1
  3876  001766  C141  F157         	movff	??_floor+4,?___fladd+2
  3877  00176A  C142  F158         	movff	??_floor+5,?___fladd+3
  3878  00176E  ECBB  F008         	call	___fladd	;wreg free
  3879  001772  C155  F139         	movff	?___fladd,?_floor
  3880  001776  C156  F13A         	movff	?___fladd+1,?_floor+1
  3881  00177A  C157  F13B         	movff	?___fladd+2,?_floor+2
  3882  00177E  C158  F13C         	movff	?___fladd+3,?_floor+3
  3883  001782  D008               	goto	l879
  3884  001784                     l883:
  3885                           ; BSR set to: 1
  3886  001784  C13F  F139         	movff	??_floor+2,?_floor
  3887  001788  C140  F13A         	movff	??_floor+3,?_floor+1
  3888  00178C  C141  F13B         	movff	??_floor+4,?_floor+2
  3889  001790  C142  F13C         	movff	??_floor+5,?_floor+3
  3890  001794                     l879:
  3891  001794  FFFF               	dw	65535	; assembler added errata NOP
  3892                           ; BSR set to: 1
  3893  001796  0012               	return	
  3894  001798  FFFF               	dw	65535	; errata NOP
  3895  00179A                     __end_of_floor:
  3896                           	opt stack 0
  3897                           
  3898                           	psect	text30
  3899                           ; =============== function _floor ends =========
      +                          ===
  3900                           ; *************** function ___asflmul **********
      +                          *******
  3901                           ; Defined at:
  3902                           ;		line 5 in file "C:\Program Files (x86)\HI-TEC
      +                          H Software\PICC-18\PRO\9.66\sources\asflmul.c"
  3903                           ; Parameters:
  3904                           ;		mp             size:   2offs:   0	type: PTR ;
      +                           Largest target is 4
  3905                           ;		 -> exp@x(4), measure_inductance@Lin(4), meas
      +                          ure_capacitance@Cin(4), 
  3906                           ;		multiplicand   size:   4offs:   2	type: PTR 
  3907                           ; Auto variables:
  3908                           ;		None
  3909                           ; Return value:
  3910                           ;		type: PTR 
  3911                           ;		size: 4
  3912                           ; Registers used:
  3913                           ;		wreg, fsr0l, fsr0h, fsr2l, status,2, status,0
      +                          , prodl, cstack
  3914                           ; Tracked objects:
  3915                           ;		On entry : F/1
  3916                           ;		On exit  : F/1
  3917                           ;		Unchanged: FFFFFFF0/0
  3918                           ; Data sizes:
  3919                           ;		Autos:    0
  3920                           ;		Params:   6
  3921                           ;		Temp:     0
  3922                           ;		Total:    6
  3923                           ; This function calls:
  3924                           ;		___flmul
  3925                           ; This function is called by:
  3926                           ;		_measure_capacitance
  3927                           ;		_measure_inductance
  3928                           ;		_exp
  3929                           ; This function uses a non-reentrant model
  3930                           ; 
  3931  000000                     
  3932  00239E                     ___asflmul:
  3933                           	opt stack 25
  3934                           ; BSR set to: 1
  3935  00239E  FFFF               	dw	65535
  3936  0023A0  C13B  F159         	movff	?___asflmul+2,?___flmul+4
  3937  0023A4  C13C  F15A         	movff	?___asflmul+3,?___flmul+5
  3938  0023A8  C13D  F15B         	movff	?___asflmul+4,?___flmul+6
  3939  0023AC  C13E  F15C         	movff	?___asflmul+5,?___flmul+7
  3940  0023B0  C139  FFE9         	movff	?___asflmul,fsr0l
  3941  0023B4  C13A  FFEA         	movff	?___asflmul+1,fsr0h
  3942  0023B8  CFEE F155          	movff	postinc0,?___flmul
  3943  0023BC  CFEE F156          	movff	postinc0,?___flmul+1
  3944  0023C0  CFEE F157          	movff	postinc0,?___flmul+2
  3945  0023C4  CFEE F158          	movff	postinc0,?___flmul+3
  3946  0023C8  EC2F  F00D         	call	___flmul	;wreg free
  3947  0023CC  C139  FFE9         	movff	?___asflmul,fsr0l
  3948  0023D0  C13A  FFEA         	movff	?___asflmul+1,fsr0h
  3949  0023D4  C155  FFEE         	movff	?___flmul,postinc0
  3950  0023D8  C156  FFEE         	movff	?___flmul+1,postinc0
  3951  0023DC  C157  FFEE         	movff	?___flmul+2,postinc0
  3952  0023E0  C158  FFED         	movff	?___flmul+3,postdec0
  3953                           ; BSR set to: 1
  3954  0023E4  0012               	return	
  3955  0023E6  FFFF               	dw	65535	; errata NOP
  3956  0023E8                     __end_of___asflmul:
  3957                           	opt stack 0
  3958                           
  3959                           	psect	text31
  3960                           ; =============== function ___asflmul ends =====
      +                          =======
  3961                           ; *************** function ___awtofl ***********
      +                          ******
  3962                           ; Defined at:
  3963                           ;		line 16 in file "C:\Program Files (x86)\HI-TE
      +                          CH Software\PICC-18\PRO\9.66\sources\awtofl.c"
  3964                           ; Parameters:
  3965                           ;		c              size:   2offs:   0	type: int 
  3966                           ; Auto variables:
  3967                           ;		f1          	       	type: int 
  3968                           ; Return value:
  3969                           ;		type: int 
  3970                           ;		size: 4
  3971                           ; Registers used:
  3972                           ;		wreg, fsr0l, fsr0h, status,2, status,0, cstac
      +                          k
  3973                           ; Tracked objects:
  3974                           ;		On entry : F/1
  3975                           ;		On exit  : F/1
  3976                           ;		Unchanged: FFFFFFF0/0
  3977                           ; Data sizes:
  3978                           ;		Autos:    4
  3979                           ;		Params:   4
  3980                           ;		Temp:     0
  3981                           ;		Total:    8
  3982                           ; This function calls:
  3983                           ;		___flpack
  3984                           ;		___flneg
  3985                           ; This function is called by:
  3986                           ;		_format_double
  3987                           ;		_log
  3988                           ;		_exp
  3989                           ; This function uses a non-reentrant model
  3990                           ; 
  3991  000000                     
  3992  001FCA                     ___awtofl:
  3993                           	opt stack 25
  3994                           ; BSR set to: 1
  3995  001FCA  FFFF               	dw	65535
  3996  001FCC  5146               	movf	(?___awtofl+1)& (0+255),w,b
  3997  001FCE  1145               	iorwf	?___awtofl& (0+255),w,b
  3998  001FD0  E105               	bnz	l991
  3999  001FD2  6B45               	clrf	?___awtofl& (0+255),b
  4000  001FD4  6B46               	clrf	(?___awtofl+1)& (0+255),b
  4001  001FD6  6B47               	clrf	(?___awtofl+2)& (0+255),b
  4002  001FD8  6B48               	clrf	(?___awtofl+3)& (0+255),b
  4003  001FDA  D039               	goto	l990
  4004  001FDC                     l991:
  4005                           ; BSR set to: 1
  4006  001FDC  C145  F149         	movff	?___awtofl,??___awtofl
  4007  001FE0  C146  F14A         	movff	?___awtofl+1,??___awtofl+1
  4008  001FE4  0E00               	movlw	0
  4009  001FE6  BF4A               	btfsc	(??___awtofl+1)& (0+255),7,b
  4010  001FE8  0EFF               	movlw	-1
  4011  001FEA  6F4B               	movwf	(??___awtofl+2)& (0+255),b
  4012  001FEC  6F4C               	movwf	(??___awtofl+3)& (0+255),b
  4013  001FEE  AF46               	btfss	(?___awtofl+1)& (0+255),7,b
  4014  001FF0  D008               	goto	l992
  4015  001FF2  1F4C               	comf	(??___awtofl+3)& (0+255),f,b
  4016  001FF4  1F4B               	comf	(??___awtofl+2)& (0+255),f,b
  4017  001FF6  1F4A               	comf	(??___awtofl+1)& (0+255),f,b
  4018  001FF8  6D49               	negf	??___awtofl& (0+255),b
  4019  001FFA  0E00               	movlw	0
  4020  001FFC  234A               	addwfc	(??___awtofl+1)& (0+255),f,b
  4021  001FFE  234B               	addwfc	(??___awtofl+2)& (0+255),f,b
  4022  002000  234C               	addwfc	(??___awtofl+3)& (0+255),f,b
  4023  002002                     l992:
  4024  002002  FFFF               	dw	65535	; assembler added errata NOP
  4025                           ; BSR set to: 1
  4026  002004  0E96               	movlw	150
  4027  002006  6F65               	movwf	(?___flpack+2)& (0+255),b
  4028  002008  0E49               	movlw	low ??___awtofl
  4029  00200A  6F63               	movwf	?___flpack& (0+255),b
  4030  00200C  0E01               	movlw	high ??___awtofl
  4031  00200E  6F64               	movwf	(?___flpack+1)& (0+255),b
  4032  002010  ECCD  F00B         	call	___flpack	;wreg free
  4033  002014  AF46               	btfss	(?___awtofl+1)& (0+255),7,b
  4034  002016  D012               	goto	l993
  4035  002018  C149  F14D         	movff	??___awtofl,?___flneg
  4036  00201C  C14A  F14E         	movff	??___awtofl+1,?___flneg+1
  4037  002020  C14B  F14F         	movff	??___awtofl+2,?___flneg+2
  4038  002024  C14C  F150         	movff	??___awtofl+3,?___flneg+3
  4039  002028  ECF9  F012         	call	___flneg	;wreg free
  4040  00202C  C14D  F149         	movff	?___flneg,??___awtofl
  4041  002030  C14E  F14A         	movff	?___flneg+1,??___awtofl+1
  4042  002034  C14F  F14B         	movff	?___flneg+2,??___awtofl+2
  4043  002038  C150  F14C         	movff	?___flneg+3,??___awtofl+3
  4044  00203C                     l993:
  4045  00203C  FFFF               	dw	65535	; assembler added errata NOP
  4046                           ; BSR set to: 1
  4047  00203E  C149  F145         	movff	??___awtofl,?___awtofl
  4048  002042  C14A  F146         	movff	??___awtofl+1,?___awtofl+1
  4049  002046  C14B  F147         	movff	??___awtofl+2,?___awtofl+2
  4050  00204A  C14C  F148         	movff	??___awtofl+3,?___awtofl+3
  4051  00204E                     l990:
  4052  00204E  FFFF               	dw	65535	; assembler added errata NOP
  4053                           ; BSR set to: 1
  4054  002050  0012               	return	
  4055  002052  FFFF               	dw	65535	; errata NOP
  4056  002054                     __end_of___awtofl:
  4057                           	opt stack 0
  4058                           
  4059                           	psect	text32
  4060                           ; =============== function ___awtofl ends ======
      +                          ======
  4061                           ; *************** function _eval_poly **********
      +                          *******
  4062                           ; Defined at:
  4063                           ;		line 5 in file "C:\Program Files (x86)\HI-TEC
      +                          H Software\PICC-18\PRO\9.66\sources\evalpoly.c"
  4064                           ; Parameters:
  4065                           ;		x              size:   4offs:   0	type: int 
  4066                           ;		d              size:   1offs:   4	type: PTR c
      +                          onst ; Largest target is 40
  4067                           ;		 -> F65(40), F64(36), 
  4068                           ;		n              size:   2offs:   5	type: int 
  4069                           ; Auto variables:
  4070                           ;		res         	       	type: int 
  4071                           ; Return value:
  4072                           ;		type: int 
  4073                           ;		size: 4
  4074                           ; Registers used:
  4075                           ;		wreg, fsr0l, fsr0h, fsr2l, status,2, status,0
      +                          , tblptrl, tblptrh, tblptru, tablat, prodl, prod
      +                          h, cstack
  4076                           ; Tracked objects:
  4077                           ;		On entry : F/1
  4078                           ;		On exit  : F/1
  4079                           ;		Unchanged: FFFFFFF0/0
  4080                           ; Data sizes:
  4081                           ;		Autos:    8
  4082                           ;		Params:   7
  4083                           ;		Temp:     1
  4084                           ;		Total:   16
  4085                           ; This function calls:
  4086                           ;		___flmul
  4087                           ;		___fladd
  4088                           ; This function is called by:
  4089                           ;		_log
  4090                           ;		_exp
  4091                           ; This function uses a non-reentrant model
  4092                           ; 
  4093  000000                     
  4094  00197A                     _eval_poly:
  4095                           	opt stack 25
  4096                           ; BSR set to: 1
  4097  00197A  FFFF               	dw	65535
  4098  00197C  514A               	movf	(?_eval_poly+5)& (0+255),w,b
  4099  00197E  0D04               	mullw	4
  4100  001980  5149               	movf	(?_eval_poly+4)& (0+255),w,b
  4101  001982  24F3               	addwf	prodl,w,c
  4102  001984  6F54               	movwf	(??_eval_poly+8)& (0+255),b
  4103  001986  C154  FFF6         	movff	??_eval_poly+8,tblptrl
  4104  00198A  0E06               	movlw	high __Lsmallconst
  4105  00198C  6EF7               	movwf	tblptrh,c
  4106  00198E  0009               	tblrd		*+
  4107  001990  FFFF               	dw	65535	; errata NOP
  4108  001992  CFF5 F150          	movff	tablat,??_eval_poly+4
  4109  001996  0009               	tblrd		*+
  4110  001998  FFFF               	dw	65535	; errata NOP
  4111  00199A  CFF5 F151          	movff	tablat,??_eval_poly+5
  4112  00199E  0009               	tblrd		*+
  4113  0019A0  FFFF               	dw	65535	; errata NOP
  4114  0019A2  CFF5 F152          	movff	tablat,??_eval_poly+6
  4115  0019A6  000A               	tblrd		*-
  4116  0019A8  FFFF               	dw	65535	; errata NOP
  4117  0019AA  CFF5 F153          	movff	tablat,??_eval_poly+7
  4118  0019AE                     l1302:
  4119  0019AE  FFFF               	dw	65535	; assembler added errata NOP
  4120                           ; BSR set to: 1
  4121  0019B0  514B               	movf	(?_eval_poly+6)& (0+255),w,b
  4122  0019B2  114A               	iorwf	(?_eval_poly+5)& (0+255),w,b
  4123  0019B4  E04A               	bz	u3590
  4124                           ; BSR set to: 1
  4125  0019B6  C150  F159         	movff	??_eval_poly+4,?___flmul+4
  4126  0019BA  C151  F15A         	movff	??_eval_poly+5,?___flmul+5
  4127  0019BE  C152  F15B         	movff	??_eval_poly+6,?___flmul+6
  4128  0019C2  C153  F15C         	movff	??_eval_poly+7,?___flmul+7
  4129  0019C6  C145  F155         	movff	?_eval_poly,?___flmul
  4130  0019CA  C146  F156         	movff	?_eval_poly+1,?___flmul+1
  4131  0019CE  C147  F157         	movff	?_eval_poly+2,?___flmul+2
  4132  0019D2  C148  F158         	movff	?_eval_poly+3,?___flmul+3
  4133  0019D6  EC2F  F00D         	call	___flmul	;wreg free
  4134  0019DA  C155  F14C         	movff	?___flmul,??_eval_poly
  4135  0019DE  C156  F14D         	movff	?___flmul+1,??_eval_poly+1
  4136  0019E2  C157  F14E         	movff	?___flmul+2,??_eval_poly+2
  4137  0019E6  C158  F14F         	movff	?___flmul+3,??_eval_poly+3
  4138  0019EA  074A               	decf	(?_eval_poly+5)& (0+255),f,b
  4139  0019EC  A0D8               	btfss	status,0,c
  4140  0019EE  074B               	decf	(?_eval_poly+6)& (0+255),f,b
  4141  0019F0  0101               	movlb	1	; () banked
  4142  0019F2  514A               	movf	(?_eval_poly+5)& (0+255),w,b
  4143  0019F4  0D04               	mullw	4
  4144  0019F6  5149               	movf	(?_eval_poly+4)& (0+255),w,b
  4145  0019F8  24F3               	addwf	prodl,w,c
  4146  0019FA  6F54               	movwf	(??_eval_poly+8)& (0+255),b
  4147  0019FC  C154  FFF6         	movff	??_eval_poly+8,tblptrl
  4148  001A00  0E06               	movlw	high __Lsmallconst
  4149  001A02  6EF7               	movwf	tblptrh,c
  4150  001A04  0009               	tblrd		*+
  4151  001A06  FFFF               	dw	65535	; errata NOP
  4152  001A08  CFF5 F159          	movff	tablat,?___fladd+4
  4153  001A0C  0009               	tblrd		*+
  4154  001A0E  FFFF               	dw	65535	; errata NOP
  4155  001A10  CFF5 F15A          	movff	tablat,?___fladd+5
  4156  001A14  0009               	tblrd		*+
  4157  001A16  FFFF               	dw	65535	; errata NOP
  4158  001A18  CFF5 F15B          	movff	tablat,?___fladd+6
  4159  001A1C  000A               	tblrd		*-
  4160  001A1E  FFFF               	dw	65535	; errata NOP
  4161  001A20  CFF5 F15C          	movff	tablat,?___fladd+7
  4162  001A24  C14C  F155         	movff	??_eval_poly,?___fladd
  4163  001A28  C14D  F156         	movff	??_eval_poly+1,?___fladd+1
  4164  001A2C  C14E  F157         	movff	??_eval_poly+2,?___fladd+2
  4165  001A30  C14F  F158         	movff	??_eval_poly+3,?___fladd+3
  4166  001A34  ECBB  F008         	call	___fladd	;wreg free
  4167  001A38  C155  F150         	movff	?___fladd,??_eval_poly+4
  4168  001A3C  C156  F151         	movff	?___fladd+1,??_eval_poly+5
  4169  001A40  C157  F152         	movff	?___fladd+2,??_eval_poly+6
  4170  001A44  C158  F153         	movff	?___fladd+3,??_eval_poly+7
  4171  001A48  D7B2               	goto	l1302
  4172  001A4A                     u3590:
  4173                           ; BSR set to: 1
  4174  001A4A  C150  F145         	movff	??_eval_poly+4,?_eval_poly
  4175  001A4E  C151  F146         	movff	??_eval_poly+5,?_eval_poly+1
  4176  001A52  C152  F147         	movff	??_eval_poly+6,?_eval_poly+2
  4177  001A56  C153  F148         	movff	??_eval_poly+7,?_eval_poly+3
  4178                           ; BSR set to: 1
  4179  001A5A  0012               	return	
  4180  001A5C  FFFF               	dw	65535	; errata NOP
  4181  001A5E                     __end_of_eval_poly:
  4182                           	opt stack 0
  4183                           
  4184                           	psect	text33
  4185                           ; =============== function _eval_poly ends =====
      +                          =======
  4186                           ; *************** function ___fldiv ************
      +                          *****
  4187                           ; Defined at:
  4188                           ;		line 19 in file "C:\Program Files (x86)\HI-TE
      +                          CH Software\PICC-18\PRO\9.66\sources\fldiv.c"
  4189                           ; Parameters:
  4190                           ;		f1             size:   4offs:   0	type: int 
  4191                           ;		f2             size:   4offs:   4	type: int 
  4192                           ; Auto variables:
  4193                           ;		exp2        	       	type: unsigned char 
  4194                           ;		sign1       	       	type: unsigned char 
  4195                           ;		exp1        	       	type: unsigned char 
  4196                           ;		sign2       	       	type: unsigned char 
  4197                           ;		f3          	       	type: unsigned char 
  4198                           ; Return value:
  4199                           ;		type: unsigned char 
  4200                           ;		size: 4
  4201                           ; Registers used:
  4202                           ;		wreg, fsr0l, fsr0h, fsr2l, status,2, status,0
      +                          , prodl, prodh, cstack
  4203                           ; Tracked objects:
  4204                           ;		On entry : F/1
  4205                           ;		On exit  : F/1
  4206                           ;		Unchanged: FFFFFFF0/0
  4207                           ; Data sizes:
  4208                           ;		Autos:    6
  4209                           ;		Params:   8
  4210                           ;		Temp:     0
  4211                           ;		Total:   14
  4212                           ; This function calls:
  4213                           ;		___flunpack
  4214                           ;		___flpack
  4215                           ; This function is called by:
  4216                           ;		_format_double
  4217                           ;		_measure_inductance
  4218                           ;		___asfldiv
  4219                           ;		_exp
  4220                           ; This function uses a non-reentrant model
  4221                           ; 
  4222  000000                     
  4223  001BFE                     ___fldiv:
  4224                           	opt stack 25
  4225                           ; BSR set to: 1
  4226  001BFE  FFFF               	dw	65535
  4227  001C00  6B43               	clrf	(??___fldiv+2)& (0+255),b
  4228  001C02  6B44               	clrf	(??___fldiv+3)& (0+255),b
  4229  001C04  6B45               	clrf	(??___fldiv+4)& (0+255),b
  4230  001C06  6B46               	clrf	(??___fldiv+5)& (0+255),b
  4231  001C08  0E42               	movlw	low (??___fldiv+1)
  4232  001C0A  6F65               	movwf	(?___flunpack+2)& (0+255),b
  4233  001C0C  0E01               	movlw	high (??___fldiv+1)
  4234  001C0E  6F66               	movwf	(?___flunpack+3)& (0+255),b
  4235  001C10  0E39               	movlw	low ?___fldiv
  4236  001C12  6F63               	movwf	?___flunpack& (0+255),b
  4237  001C14  0E01               	movlw	high ?___fldiv
  4238  001C16  6F64               	movwf	(?___flunpack+1)& (0+255),b
  4239  001C18  EC9D  F010         	call	___flunpack	;wreg free
  4240  001C1C  6ED9               	movwf	fsr2l,c
  4241  001C1E  6742               	tstfsz	(??___fldiv+1)& (0+255),b
  4242  001C20  D001               	goto	l1048
  4243  001C22  D041               	goto	l1054
  4244  001C24                     l1048:
  4245  001C24  FFFF               	dw	65535	; assembler added errata NOP
  4246                           ; BSR set to: 1
  4247                           ; ___fldiv@sign2 allocated to prodh
  4248  001C26  0E41               	movlw	low ??___fldiv
  4249  001C28  6F65               	movwf	(?___flunpack+2)& (0+255),b
  4250  001C2A  0E01               	movlw	high ??___fldiv
  4251  001C2C  6F66               	movwf	(?___flunpack+3)& (0+255),b
  4252  001C2E  0E3D               	movlw	low (?___fldiv+4)
  4253  001C30  6F63               	movwf	?___flunpack& (0+255),b
  4254  001C32  0E01               	movlw	high (?___fldiv+4)
  4255  001C34  6F64               	movwf	(?___flunpack+1)& (0+255),b
  4256  001C36  EC9D  F010         	call	___flunpack	;wreg free
  4257  001C3A  6EF4               	movwf	prodh,c
  4258  001C3C  6741               	tstfsz	??___fldiv& (0+255),b
  4259  001C3E  D001               	goto	l1049
  4260  001C40  D032               	goto	l1054
  4261  001C42                     l1049:
  4262  001C42  FFFF               	dw	65535	; assembler added errata NOP
  4263                           ; BSR set to: 1
  4264  001C44  5141               	movf	??___fldiv& (0+255),w,b
  4265  001C46  0F89               	addlw	137
  4266  001C48  5F42               	subwf	(??___fldiv+1)& (0+255),f,b
  4267  001C4A  50F4               	movf	prodh,w,c
  4268  001C4C  1AD9               	xorwf	fsr2l,f,c
  4269                           ; ___fldiv@sign2 allocated to fsr0l
  4270  001C4E  0E20               	movlw	32
  4271  001C50  6EE9               	movwf	fsr0l,c
  4272  001C52                     l1052:
  4273  001C52  FFFF               	dw	65535	; assembler added errata NOP
  4274                           ; BSR set to: 1
  4275  001C54  90D8               	bcf	status,0,c
  4276  001C56  3743               	rlcf	(??___fldiv+2)& (0+255),f,b
  4277  001C58  3744               	rlcf	(??___fldiv+3)& (0+255),f,b
  4278  001C5A  3745               	rlcf	(??___fldiv+4)& (0+255),f,b
  4279  001C5C  3746               	rlcf	(??___fldiv+5)& (0+255),f,b
  4280  001C5E  513D               	movf	(?___fldiv+4)& (0+255),w,b
  4281  001C60  5D39               	subwf	?___fldiv& (0+255),w,b
  4282  001C62  513E               	movf	(?___fldiv+5)& (0+255),w,b
  4283  001C64  593A               	subwfb	(?___fldiv+1)& (0+255),w,b
  4284  001C66  513F               	movf	(?___fldiv+6)& (0+255),w,b
  4285  001C68  593B               	subwfb	(?___fldiv+2)& (0+255),w,b
  4286  001C6A  5140               	movf	(?___fldiv+7)& (0+255),w,b
  4287  001C6C  593C               	subwfb	(?___fldiv+3)& (0+255),w,b
  4288  001C6E  E309               	bnc	l1053
  4289  001C70  513D               	movf	(?___fldiv+4)& (0+255),w,b
  4290  001C72  5F39               	subwf	?___fldiv& (0+255),f,b
  4291  001C74  513E               	movf	(?___fldiv+5)& (0+255),w,b
  4292  001C76  5B3A               	subwfb	(?___fldiv+1)& (0+255),f,b
  4293  001C78  513F               	movf	(?___fldiv+6)& (0+255),w,b
  4294  001C7A  5B3B               	subwfb	(?___fldiv+2)& (0+255),f,b
  4295  001C7C  5140               	movf	(?___fldiv+7)& (0+255),w,b
  4296  001C7E  5B3C               	subwfb	(?___fldiv+3)& (0+255),f,b
  4297  001C80  8143               	bsf	(??___fldiv+2)& (0+255),0,b
  4298  001C82                     l1053:
  4299                           ; BSR set to: 1
  4300  001C82  90D8               	bcf	status,0,c
  4301  001C84  3739               	rlcf	?___fldiv& (0+255),f,b
  4302  001C86  373A               	rlcf	(?___fldiv+1)& (0+255),f,b
  4303  001C88  373B               	rlcf	(?___fldiv+2)& (0+255),f,b
  4304  001C8A  373C               	rlcf	(?___fldiv+3)& (0+255),f,b
  4305  001C8C  2EE9               	decfsz	fsr0l,f,c
  4306  001C8E  D7E1               	goto	l1052
  4307                           ; BSR set to: 1
  4308  001C90  C142  F165         	movff	??___fldiv+1,?___flpack+2
  4309  001C94  0E43               	movlw	low (??___fldiv+2)
  4310  001C96  6F63               	movwf	?___flpack& (0+255),b
  4311  001C98  0E01               	movlw	high (??___fldiv+2)
  4312  001C9A  6F64               	movwf	(?___flpack+1)& (0+255),b
  4313  001C9C  ECCD  F00B         	call	___flpack	;wreg free
  4314  001CA0  50D9               	movf	fsr2l,w,c
  4315  001CA2  A4D8               	btfss	status,2,c
  4316  001CA4  8F46               	bsf	(??___fldiv+5)& (0+255),7,b
  4317  001CA6                     l1054:
  4318  001CA6  FFFF               	dw	65535	; assembler added errata NOP
  4319                           ; BSR set to: 1
  4320  001CA8  C143  F139         	movff	??___fldiv+2,?___fldiv
  4321  001CAC  C144  F13A         	movff	??___fldiv+3,?___fldiv+1
  4322  001CB0  C145  F13B         	movff	??___fldiv+4,?___fldiv+2
  4323  001CB4  C146  F13C         	movff	??___fldiv+5,?___fldiv+3
  4324                           ; BSR set to: 1
  4325  001CB8  0012               	return	
  4326  001CBA  FFFF               	dw	65535	; errata NOP
  4327  001CBC                     __end_of___fldiv:
  4328                           	opt stack 0
  4329                           
  4330                           	psect	text34
  4331                           ; =============== function ___fldiv ends =======
      +                          =====
  4332                           ; *************** function _ldexp **************
      +                          ***
  4333                           ; Defined at:
  4334                           ;		line 278 in file "C:\Program Files (x86)\HI-T
      +                          ECH Software\PICC-18\PRO\9.66\sources\frexp.c"
  4335                           ; Parameters:
  4336                           ;		value          size:   4offs:   0	type: unsig
      +                          ned char 
  4337                           ;		newexp         size:   2offs:   4	type: int 
  4338                           ; Auto variables:
  4339                           ;		None
  4340                           ; Return value:
  4341                           ;		type: int 
  4342                           ;		size: 4
  4343                           ; Registers used:
  4344                           ;		wreg, fsr0l, fsr0h, status,2, status,0
  4345                           ; Tracked objects:
  4346                           ;		On entry : F/1
  4347                           ;		On exit  : F/1
  4348                           ;		Unchanged: FFFFFFF0/0
  4349                           ; Data sizes:
  4350                           ;		Autos:    0
  4351                           ;		Params:   6
  4352                           ;		Temp:     3
  4353                           ;		Total:    9
  4354                           ; This function calls:
  4355                           ; This function is called by:
  4356                           ;		_exp
  4357                           ; This function uses a non-reentrant model
  4358                           ; 
  4359  000000                     
  4360  001D64                     _ldexp:
  4361                           	opt stack 25
  4362                           ; BSR set to: 1
  4363  001D64  FFFF               	dw	65535
  4364  001D66  EE01  F039         	lfsr	0,?_ldexp
  4365  001D6A  50EE               	movf	postinc0,w,c
  4366  001D6C  10EE               	iorwf	postinc0,w,c
  4367  001D6E  10EE               	iorwf	postinc0,w,c
  4368  001D70  10EE               	iorwf	postinc0,w,c
  4369  001D72  E015               	bz	u3510
  4370                           ; BSR set to: 1
  4371  001D74  0101               	movlb	1	; () banked
  4372  001D76  513C               	movf	(?_ldexp+3)& (0+255),w,b
  4373  001D78  0B7F               	andlw	127
  4374  001D7A  6F3F               	movwf	??_ldexp& (0+255),b
  4375  001D7C  90D8               	bcf	status,0,c
  4376  001D7E  353F               	rlcf	??_ldexp& (0+255),w,b
  4377  001D80  6F40               	movwf	(??_ldexp+1)& (0+255),b
  4378  001D82  6B41               	clrf	(??_ldexp+2)& (0+255),b
  4379  001D84  3741               	rlcf	(??_ldexp+2)& (0+255),f,b
  4380  001D86  5140               	movf	(??_ldexp+1)& (0+255),w,b
  4381  001D88  273D               	addwf	(?_ldexp+4)& (0+255),f,b
  4382  001D8A  5141               	movf	(??_ldexp+2)& (0+255),w,b
  4383  001D8C  233E               	addwfc	(?_ldexp+5)& (0+255),f,b
  4384  001D8E  353B               	rlcf	(?_ldexp+2)& (0+255),w,b
  4385  001D90  36E8               	rlcf	wreg,f,c
  4386  001D92  0B01               	andlw	1
  4387  001D94  273D               	addwf	(?_ldexp+4)& (0+255),f,b
  4388  001D96  0E00               	movlw	0
  4389  001D98  233E               	addwfc	(?_ldexp+5)& (0+255),f,b
  4390  001D9A  AF3E               	btfss	(?_ldexp+5)& (0+255),7,b
  4391  001D9C  D005               	goto	l901
  4392  001D9E                     u3510:
  4393  001D9E  6B39               	clrf	?_ldexp& (0+255),b
  4394  001DA0  6B3A               	clrf	(?_ldexp+1)& (0+255),b
  4395  001DA2  6B3B               	clrf	(?_ldexp+2)& (0+255),b
  4396  001DA4  6B3C               	clrf	(?_ldexp+3)& (0+255),b
  4397  001DA6  D02B               	goto	l899
  4398  001DA8                     l901:
  4399  001DA8  FFFF               	dw	65535	; assembler added errata NOP
  4400                           ; BSR set to: 1
  4401  001DAA  513E               	movf	(?_ldexp+5)& (0+255),w,b
  4402  001DAC  0A80               	xorlw	128
  4403  001DAE  0F7F               	addlw	-129
  4404  001DB0  0E00               	movlw	0
  4405  001DB2  B4D8               	btfsc	status,2,c
  4406  001DB4  5D3D               	subwf	(?_ldexp+4)& (0+255),w,b
  4407  001DB6  E30D               	bnc	l903
  4408  001DB8  6939               	setf	?_ldexp& (0+255),b
  4409  001DBA  693A               	setf	(?_ldexp+1)& (0+255),b
  4410  001DBC  0E7F               	movlw	127
  4411  001DBE  6F3B               	movwf	(?_ldexp+2)& (0+255),b
  4412  001DC0  AF3C               	btfss	(?_ldexp+3)& (0+255),7,b
  4413  001DC2  D002               	goto	L8
  4414  001DC4  0EFF               	movlw	255
  4415  001DC6  D002               	goto	L7
  4416                           ; BSR set to: 1
  4417  001DC8                     L8:
  4418  001DC8  FFFF               	dw	65535	; assembler added errata NOP
  4419  001DCA  0E7F               	movlw	127
  4420  001DCC                     L7:
  4421  001DCC  FFFF               	dw	65535	; assembler added errata NOP
  4422  001DCE  6F3C               	movwf	(?_ldexp+3)& (0+255),b
  4423  001DD0  D016               	goto	l899
  4424  001DD2                     l903:
  4425                           ; BSR set to: 1
  4426  001DD2  353E               	rlcf	(?_ldexp+5)& (0+255),w,b
  4427  001DD4  313E               	rrcf	(?_ldexp+5)& (0+255),w,b
  4428  001DD6  6F40               	movwf	(??_ldexp+1)& (0+255),b
  4429  001DD8  313D               	rrcf	(?_ldexp+4)& (0+255),w,b
  4430  001DDA  6F3F               	movwf	??_ldexp& (0+255),b
  4431  001DDC  0101               	movlb	1	; () banked
  4432  001DDE  513C               	movf	(?_ldexp+3)& (0+255),w,b
  4433  001DE0  193F               	xorwf	??_ldexp& (0+255),w,b
  4434  001DE2  0B80               	andlw	-128
  4435  001DE4  193F               	xorwf	??_ldexp& (0+255),w,b
  4436  001DE6  6F3C               	movwf	(?_ldexp+3)& (0+255),b
  4437  001DE8  C13D  F13F         	movff	?_ldexp+4,??_ldexp
  4438  001DEC  0E01               	movlw	1
  4439  001DEE  173F               	andwf	??_ldexp& (0+255),f,b
  4440  001DF0  333F               	rrcf	??_ldexp& (0+255),f,b
  4441  001DF2  333F               	rrcf	??_ldexp& (0+255),f,b
  4442  001DF4  513B               	movf	(?_ldexp+2)& (0+255),w,b
  4443  001DF6  193F               	xorwf	??_ldexp& (0+255),w,b
  4444  001DF8  0B7F               	andlw	-129
  4445  001DFA  193F               	xorwf	??_ldexp& (0+255),w,b
  4446  001DFC  6F3B               	movwf	(?_ldexp+2)& (0+255),b
  4447                           ; BSR set to: 1
  4448                           ; BSR set to: 1
  4449  001DFE                     l899:
  4450  001DFE  FFFF               	dw	65535	; assembler added errata NOP
  4451                           ; BSR set to: 1
  4452  001E00  0012               	return	
  4453  001E02  FFFF               	dw	65535	; errata NOP
  4454  001E04                     __end_of_ldexp:
  4455                           	opt stack 0
  4456                           
  4457                           	psect	text35
  4458                           ; =============== function _ldexp ends =========
      +                          ===
  4459                           ; *************** function ___flsub ************
      +                          *****
  4460                           ; Defined at:
  4461                           ;		line 17 in file "C:\Program Files (x86)\HI-TE
      +                          CH Software\PICC-18\PRO\9.66\sources\flsub.c"
  4462                           ; Parameters:
  4463                           ;		f1             size:   4offs:   0	type: int 
  4464                           ;		f2             size:   4offs:   4	type: int 
  4465                           ; Auto variables:
  4466                           ;		None
  4467                           ; Return value:
  4468                           ;		type: int 
  4469                           ;		size: 4
  4470                           ; Registers used:
  4471                           ;		wreg, fsr0l, fsr0h, fsr2l, status,2, status,0
      +                          , prodl, prodh, cstack
  4472                           ; Tracked objects:
  4473                           ;		On entry : F/1
  4474                           ;		On exit  : F/1
  4475                           ;		Unchanged: FFFFFFF0/0
  4476                           ; Data sizes:
  4477                           ;		Autos:    0
  4478                           ;		Params:   8
  4479                           ;		Temp:     0
  4480                           ;		Total:    8
  4481                           ; This function calls:
  4482                           ;		___fladd
  4483                           ; This function is called by:
  4484                           ;		_measure_capacitance
  4485                           ;		_measure_inductance
  4486                           ;		___asflsub
  4487                           ; This function uses a non-reentrant model
  4488                           ; 
  4489  000000                     
  4490  0024C0                     ___flsub:
  4491                           	opt stack 24
  4492                           ; BSR set to: 1
  4493  0024C0  FFFF               	dw	65535
  4494  0024C2  0E80               	movlw	128
  4495  0024C4  1B46               	xorwf	(?___flsub+7)& (0+255),f,b
  4496  0024C6  C143  F159         	movff	?___flsub+4,?___fladd+4
  4497  0024CA  C144  F15A         	movff	?___flsub+5,?___fladd+5
  4498  0024CE  C145  F15B         	movff	?___flsub+6,?___fladd+6
  4499  0024D2  C146  F15C         	movff	?___flsub+7,?___fladd+7
  4500  0024D6  C13F  F155         	movff	?___flsub,?___fladd
  4501  0024DA  C140  F156         	movff	?___flsub+1,?___fladd+1
  4502  0024DE  C141  F157         	movff	?___flsub+2,?___fladd+2
  4503  0024E2  C142  F158         	movff	?___flsub+3,?___fladd+3
  4504  0024E6  ECBB  F008         	call	___fladd	;wreg free
  4505  0024EA  C155  F13F         	movff	?___fladd,?___flsub
  4506  0024EE  C156  F140         	movff	?___fladd+1,?___flsub+1
  4507  0024F2  C157  F141         	movff	?___fladd+2,?___flsub+2
  4508  0024F6  C158  F142         	movff	?___fladd+3,?___flsub+3
  4509                           ; BSR set to: 1
  4510  0024FA  0012               	return	
  4511  0024FC  FFFF               	dw	65535	; errata NOP
  4512  0024FE                     __end_of___flsub:
  4513                           	opt stack 0
  4514                           
  4515                           	psect	text36
  4516                           ; =============== function ___flsub ends =======
      +                          =====
  4517                           ; *************** function _frexp **************
      +                          ***
  4518                           ; Defined at:
  4519                           ;		line 255 in file "C:\Program Files (x86)\HI-T
      +                          ECH Software\PICC-18\PRO\9.66\sources\frexp.c"
  4520                           ; Parameters:
  4521                           ;		value          size:   4offs:   0	type: int 
  4522                           ;		eptr           size:   2offs:   4	type: PTR i
      +                          nt ; Largest target is 2
  4523                           ;		 -> log@exp(2), floor@expon(2), 
  4524                           ; Auto variables:
  4525                           ;		None
  4526                           ; Return value:
  4527                           ;		type: PTR int 
  4528                           ;		size: 4
  4529                           ; Registers used:
  4530                           ;		wreg, fsr0l, fsr0h, status,2, status,0
  4531                           ; Tracked objects:
  4532                           ;		On entry : F/1
  4533                           ;		On exit  : F/1
  4534                           ;		Unchanged: FFFFFFF0/0
  4535                           ; Data sizes:
  4536                           ;		Autos:    0
  4537                           ;		Params:   6
  4538                           ;		Temp:     3
  4539                           ;		Total:    9
  4540                           ; This function calls:
  4541                           ;		Nothing
  4542                           ; This function is called by:
  4543                           ;		_floor
  4544                           ;		_log
  4545                           ; This function uses a non-reentrant model
  4546                           ; 
  4547  000000                     
  4548  002054                     _frexp:
  4549                           	opt stack 24
  4550                           ; BSR set to: 1
  4551  002054  FFFF               	dw	65535
  4552  002056  EE01  F045         	lfsr	0,?_frexp
  4553  00205A  50EE               	movf	postinc0,w,c
  4554  00205C  10EE               	iorwf	postinc0,w,c
  4555  00205E  10EE               	iorwf	postinc0,w,c
  4556  002060  10EE               	iorwf	postinc0,w,c
  4557  002062  E10C               	bnz	l898
  4558  002064  C149  FFE9         	movff	?_frexp+4,fsr0l
  4559  002068  C14A  FFEA         	movff	?_frexp+5,fsr0h
  4560  00206C  0E00               	movlw	0
  4561  00206E  6AEE               	clrf	postinc0,c
  4562  002070  6AED               	clrf	postdec0,c
  4563  002072  6B45               	clrf	?_frexp& (0+255),b
  4564  002074  6B46               	clrf	(?_frexp+1)& (0+255),b
  4565  002076  6B47               	clrf	(?_frexp+2)& (0+255),b
  4566  002078  6B48               	clrf	(?_frexp+3)& (0+255),b
  4567  00207A  D028               	goto	l897
  4568  00207C                     l898:
  4569                           ; BSR set to: 1
  4570  00207C  0101               	movlb	1	; () banked
  4571  00207E  5148               	movf	(?_frexp+3)& (0+255),w,b
  4572  002080  0B7F               	andlw	127
  4573  002082  6F4B               	movwf	??_frexp& (0+255),b
  4574  002084  90D8               	bcf	status,0,c
  4575  002086  354B               	rlcf	??_frexp& (0+255),w,b
  4576  002088  6F4C               	movwf	(??_frexp+1)& (0+255),b
  4577  00208A  6B4D               	clrf	(??_frexp+2)& (0+255),b
  4578  00208C  374D               	rlcf	(??_frexp+2)& (0+255),f,b
  4579  00208E  C149  FFE9         	movff	?_frexp+4,fsr0l
  4580  002092  C14A  FFEA         	movff	?_frexp+5,fsr0h
  4581  002096  C14C  FFEE         	movff	??_frexp+1,postinc0
  4582  00209A  C14D  FFED         	movff	??_frexp+2,postdec0
  4583  00209E  3547               	rlcf	(?_frexp+2)& (0+255),w,b
  4584  0020A0  36E8               	rlcf	wreg,f,c
  4585  0020A2  0B01               	andlw	1
  4586  0020A4  C149  FFE9         	movff	?_frexp+4,fsr0l
  4587  0020A8  C14A  FFEA         	movff	?_frexp+5,fsr0h
  4588  0020AC  12EE               	iorwf	postinc0,f,c
  4589  0020AE  0E00               	movlw	0
  4590  0020B0  12ED               	iorwf	postdec0,f,c
  4591  0020B2  C149  FFE9         	movff	?_frexp+4,fsr0l
  4592  0020B6  C14A  FFEA         	movff	?_frexp+5,fsr0h
  4593  0020BA  0E82               	movlw	130
  4594  0020BC  26EE               	addwf	postinc0,f,c
  4595  0020BE  0EFF               	movlw	255
  4596  0020C0  22ED               	addwfc	postdec0,f,c
  4597  0020C2  5148               	movf	(?_frexp+3)& (0+255),w,b
  4598  0020C4  0B80               	andlw	-128
  4599  0020C6  093F               	iorlw	63
  4600  0020C8  6F48               	movwf	(?_frexp+3)& (0+255),b
  4601  0020CA  9F47               	bcf	(?_frexp+2)& (0+255),7,b
  4602  0020CC                     l897:
  4603  0020CC  FFFF               	dw	65535	; assembler added errata NOP
  4604                           ; BSR set to: 1
  4605  0020CE  0012               	return	
  4606  0020D0  FFFF               	dw	65535	; errata NOP
  4607  0020D2                     __end_of_frexp:
  4608                           	opt stack 0
  4609                           
  4610                           	psect	text37
  4611                           ; =============== function _frexp ends =========
      +                          ===
  4612                           ; *************** function ___flmul ************
      +                          *****
  4613                           ; Defined at:
  4614                           ;		line 18 in file "C:\Program Files (x86)\HI-TE
      +                          CH Software\PICC-18\PRO\9.66\sources\flmul.c"
  4615                           ; Parameters:
  4616                           ;		f1             size:   4offs:   0	type: PTR i
      +                          nt 
  4617                           ;		f2             size:   4offs:   4	type: PTR i
      +                          nt 
  4618                           ; Auto variables:
  4619                           ;		sign1       	       	type: unsigned char 
  4620                           ;		exp1        	       	type: unsigned char 
  4621                           ;		cntr        	       	type: unsigned char 
  4622                           ;		f3          	       	type: unsigned char 
  4623                           ; Return value:
  4624                           ;		type: unsigned char 
  4625                           ;		size: 4
  4626                           ; Registers used:
  4627                           ;		wreg, fsr0l, fsr0h, fsr2l, status,2, status,0
      +                          , prodl, cstack
  4628                           ; Tracked objects:
  4629                           ;		On entry : F/1
  4630                           ;		On exit  : F/1
  4631                           ;		Unchanged: FFFFFFF0/0
  4632                           ; Data sizes:
  4633                           ;		Autos:    6
  4634                           ;		Params:   8
  4635                           ;		Temp:     0
  4636                           ;		Total:   14
  4637                           ; This function calls:
  4638                           ;		___flunpack
  4639                           ;		___flpack
  4640                           ; This function is called by:
  4641                           ;		_format_double
  4642                           ;		_measure_capacitance
  4643                           ;		_measure_inductance
  4644                           ;		_log
  4645                           ;		_log10
  4646                           ;		_pow
  4647                           ;		___asflmul
  4648                           ;		_eval_poly
  4649                           ; This function uses a non-reentrant model
  4650                           ; 
  4651  000000                     
  4652  001A5E                     ___flmul:
  4653                           	opt stack 24
  4654                           ; BSR set to: 1
  4655  001A5E  FFFF               	dw	65535
  4656  001A60  6B5F               	clrf	(??___flmul+2)& (0+255),b
  4657  001A62  6B60               	clrf	(??___flmul+3)& (0+255),b
  4658  001A64  6B61               	clrf	(??___flmul+4)& (0+255),b
  4659  001A66  6B62               	clrf	(??___flmul+5)& (0+255),b
  4660  001A68  0E5D               	movlw	low ??___flmul
  4661  001A6A  6F65               	movwf	(?___flunpack+2)& (0+255),b
  4662  001A6C  0E01               	movlw	high ??___flmul
  4663  001A6E  6F66               	movwf	(?___flunpack+3)& (0+255),b
  4664  001A70  0E55               	movlw	low ?___flmul
  4665  001A72  6F63               	movwf	?___flunpack& (0+255),b
  4666  001A74  0E01               	movlw	high ?___flmul
  4667  001A76  6F64               	movwf	(?___flunpack+1)& (0+255),b
  4668  001A78  EC9D  F010         	call	___flunpack	;wreg free
  4669  001A7C  6ED9               	movwf	fsr2l,c
  4670  001A7E  0E5E               	movlw	low (??___flmul+1)
  4671  001A80  6F65               	movwf	(?___flunpack+2)& (0+255),b
  4672  001A82  0E01               	movlw	high (??___flmul+1)
  4673  001A84  6F66               	movwf	(?___flunpack+3)& (0+255),b
  4674  001A86  0E59               	movlw	low (?___flmul+4)
  4675  001A88  6F63               	movwf	?___flunpack& (0+255),b
  4676  001A8A  0E01               	movlw	high (?___flmul+4)
  4677  001A8C  6F64               	movwf	(?___flunpack+1)& (0+255),b
  4678  001A8E  EC9D  F010         	call	___flunpack	;wreg free
  4679  001A92  1AD9               	xorwf	fsr2l,f,c
  4680  001A94  515E               	movf	(??___flmul+1)& (0+255),w,b
  4681  001A96  E046               	bz	l1066
  4682  001A98  675D               	tstfsz	??___flmul& (0+255),b
  4683  001A9A  D001               	goto	l1057
  4684  001A9C  D043               	goto	l1066
  4685                           ; BSR set to: 1
  4686  001A9E                     l1057:
  4687  001A9E  FFFF               	dw	65535	; assembler added errata NOP
  4688                           ; BSR set to: 1
  4689  001AA0  515E               	movf	(??___flmul+1)& (0+255),w,b
  4690  001AA2  0F7B               	addlw	123
  4691  001AA4  275D               	addwf	??___flmul& (0+255),f,b
  4692  001AA6  0E07               	movlw	7
  4693  001AA8  6F5E               	movwf	(??___flmul+1)& (0+255),b
  4694  001AAA                     l1060:
  4695  001AAA  FFFF               	dw	65535	; assembler added errata NOP
  4696                           ; BSR set to: 1
  4697  001AAC  A155               	btfss	?___flmul& (0+255),0,b
  4698  001AAE  D008               	goto	l1061
  4699  001AB0  5159               	movf	(?___flmul+4)& (0+255),w,b
  4700  001AB2  275F               	addwf	(??___flmul+2)& (0+255),f,b
  4701  001AB4  515A               	movf	(?___flmul+5)& (0+255),w,b
  4702  001AB6  2360               	addwfc	(??___flmul+3)& (0+255),f,b
  4703  001AB8  515B               	movf	(?___flmul+6)& (0+255),w,b
  4704  001ABA  2361               	addwfc	(??___flmul+4)& (0+255),f,b
  4705  001ABC  515C               	movf	(?___flmul+7)& (0+255),w,b
  4706  001ABE  2362               	addwfc	(??___flmul+5)& (0+255),f,b
  4707  001AC0                     l1061:
  4708  001AC0  FFFF               	dw	65535	; assembler added errata NOP
  4709                           ; BSR set to: 1
  4710  001AC2  90D8               	bcf	status,0,c
  4711  001AC4  3358               	rrcf	(?___flmul+3)& (0+255),f,b
  4712  001AC6  3357               	rrcf	(?___flmul+2)& (0+255),f,b
  4713  001AC8  3356               	rrcf	(?___flmul+1)& (0+255),f,b
  4714  001ACA  3355               	rrcf	?___flmul& (0+255),f,b
  4715  001ACC  90D8               	bcf	status,0,c
  4716  001ACE  3759               	rlcf	(?___flmul+4)& (0+255),f,b
  4717  001AD0  375A               	rlcf	(?___flmul+5)& (0+255),f,b
  4718  001AD2  375B               	rlcf	(?___flmul+6)& (0+255),f,b
  4719  001AD4  375C               	rlcf	(?___flmul+7)& (0+255),f,b
  4720  001AD6  2F5E               	decfsz	(??___flmul+1)& (0+255),f,b
  4721  001AD8  D7E8               	goto	l1060
  4722                           ; BSR set to: 1
  4723  001ADA  0E11               	movlw	17
  4724  001ADC  6F5E               	movwf	(??___flmul+1)& (0+255),b
  4725  001ADE                     l1064:
  4726  001ADE  FFFF               	dw	65535	; assembler added errata NOP
  4727                           ; BSR set to: 1
  4728  001AE0  A155               	btfss	?___flmul& (0+255),0,b
  4729  001AE2  D008               	goto	l1065
  4730  001AE4  5159               	movf	(?___flmul+4)& (0+255),w,b
  4731  001AE6  275F               	addwf	(??___flmul+2)& (0+255),f,b
  4732  001AE8  515A               	movf	(?___flmul+5)& (0+255),w,b
  4733  001AEA  2360               	addwfc	(??___flmul+3)& (0+255),f,b
  4734  001AEC  515B               	movf	(?___flmul+6)& (0+255),w,b
  4735  001AEE  2361               	addwfc	(??___flmul+4)& (0+255),f,b
  4736  001AF0  515C               	movf	(?___flmul+7)& (0+255),w,b
  4737  001AF2  2362               	addwfc	(??___flmul+5)& (0+255),f,b
  4738  001AF4                     l1065:
  4739  001AF4  FFFF               	dw	65535	; assembler added errata NOP
  4740                           ; BSR set to: 1
  4741  001AF6  90D8               	bcf	status,0,c
  4742  001AF8  3358               	rrcf	(?___flmul+3)& (0+255),f,b
  4743  001AFA  3357               	rrcf	(?___flmul+2)& (0+255),f,b
  4744  001AFC  3356               	rrcf	(?___flmul+1)& (0+255),f,b
  4745  001AFE  3355               	rrcf	?___flmul& (0+255),f,b
  4746  001B00  90D8               	bcf	status,0,c
  4747  001B02  3362               	rrcf	(??___flmul+5)& (0+255),f,b
  4748  001B04  3361               	rrcf	(??___flmul+4)& (0+255),f,b
  4749  001B06  3360               	rrcf	(??___flmul+3)& (0+255),f,b
  4750  001B08  335F               	rrcf	(??___flmul+2)& (0+255),f,b
  4751  001B0A  2F5E               	decfsz	(??___flmul+1)& (0+255),f,b
  4752  001B0C  D7E8               	goto	l1064
  4753                           ; BSR set to: 1
  4754  001B0E  C15D  F165         	movff	??___flmul,?___flpack+2
  4755  001B12  0E5F               	movlw	low (??___flmul+2)
  4756  001B14  6F63               	movwf	?___flpack& (0+255),b
  4757  001B16  0E01               	movlw	high (??___flmul+2)
  4758  001B18  6F64               	movwf	(?___flpack+1)& (0+255),b
  4759  001B1A  ECCD  F00B         	call	___flpack	;wreg free
  4760  001B1E  50D9               	movf	fsr2l,w,c
  4761  001B20  A4D8               	btfss	status,2,c
  4762  001B22  8F62               	bsf	(??___flmul+5)& (0+255),7,b
  4763  001B24                     l1066:
  4764  001B24  FFFF               	dw	65535	; assembler added errata NOP
  4765                           ; BSR set to: 1
  4766  001B26  C15F  F155         	movff	??___flmul+2,?___flmul
  4767  001B2A  C160  F156         	movff	??___flmul+3,?___flmul+1
  4768  001B2E  C161  F157         	movff	??___flmul+4,?___flmul+2
  4769  001B32  C162  F158         	movff	??___flmul+5,?___flmul+3
  4770                           ; BSR set to: 1
  4771  001B36  0012               	return	
  4772  001B38  FFFF               	dw	65535	; errata NOP
  4773  001B3A                     __end_of___flmul:
  4774                           	opt stack 0
  4775                           
  4776                           	psect	text38
  4777                           ; =============== function ___flmul ends =======
      +                          =====
  4778                           ; *************** function ___fltol ************
      +                          *****
  4779                           ; Defined at:
  4780                           ;		line 16 in file "C:\Program Files (x86)\HI-TE
      +                          CH Software\PICC-18\PRO\9.66\sources\fltol.c"
  4781                           ; Parameters:
  4782                           ;		f1             size:   4offs:   0	type: unsig
      +                          ned char 
  4783                           ; Auto variables:
  4784                           ;		sign1       	       	type: unsigned char 
  4785                           ;		exp1        	       	type: unsigned char 
  4786                           ;		lval        	       	type: unsigned long 
  4787                           ; Return value:
  4788                           ;		type: long 
  4789                           ;		size: 4
  4790                           ; Registers used:
  4791                           ;		wreg, fsr0l, fsr0h, fsr2l, status,2, status,0
      +                          , prodl, cstack
  4792                           ; Tracked objects:
  4793                           ;		On entry : F/1
  4794                           ;		On exit  : F/1
  4795                           ;		Unchanged: FFFFFFF0/0
  4796                           ; Data sizes:
  4797                           ;		Autos:    5
  4798                           ;		Params:   4
  4799                           ;		Temp:     0
  4800                           ;		Total:    9
  4801                           ; This function calls:
  4802                           ;		___flunpack
  4803                           ; This function is called by:
  4804                           ;		_format_double
  4805                           ;		_measure_capacitance
  4806                           ;		_measure_inductance
  4807                           ;		_floor
  4808                           ;		_pow
  4809                           ;		_exp
  4810                           ; This function uses a non-reentrant model
  4811                           ; 
  4812  000000                     
  4813  001E04                     ___fltol:
  4814                           	opt stack 24
  4815                           ; BSR set to: 1
  4816  001E04  FFFF               	dw	65535
  4817  001E06  0E47               	movlw	low ??___fltol
  4818  001E08  6F65               	movwf	(?___flunpack+2)& (0+255),b
  4819  001E0A  0E01               	movlw	high ??___fltol
  4820  001E0C  6F66               	movwf	(?___flunpack+3)& (0+255),b
  4821  001E0E  0E43               	movlw	low ?___fltol
  4822  001E10  6F63               	movwf	?___flunpack& (0+255),b
  4823  001E12  0E01               	movlw	high ?___fltol
  4824  001E14  6F64               	movwf	(?___flunpack+1)& (0+255),b
  4825  001E16  EC9D  F010         	call	___flunpack	;wreg free
  4826  001E1A  6ED9               	movwf	fsr2l,c
  4827  001E1C  C143  F148         	movff	?___fltol,??___fltol+1
  4828  001E20  C144  F149         	movff	?___fltol+1,??___fltol+2
  4829  001E24  C145  F14A         	movff	?___fltol+2,??___fltol+3
  4830  001E28  C146  F14B         	movff	?___fltol+3,??___fltol+4
  4831  001E2C  0E96               	movlw	150
  4832  001E2E  5F47               	subwf	??___fltol& (0+255),f,b
  4833  001E30  AF47               	btfss	??___fltol& (0+255),7,b
  4834  001E32  D00D               	goto	l1090
  4835  001E34  5147               	movf	??___fltol& (0+255),w,b
  4836  001E36  0A80               	xorlw	128
  4837  001E38  0F97               	addlw	151
  4838  001E3A  E30D               	bnc	u3760
  4839  001E3C                     l1094:
  4840  001E3C  FFFF               	dw	65535	; assembler added errata NOP
  4841                           ; BSR set to: 1
  4842  001E3E  90D8               	bcf	status,0,c
  4843  001E40  334B               	rrcf	(??___fltol+4)& (0+255),f,b
  4844  001E42  334A               	rrcf	(??___fltol+3)& (0+255),f,b
  4845  001E44  3349               	rrcf	(??___fltol+2)& (0+255),f,b
  4846  001E46  3348               	rrcf	(??___fltol+1)& (0+255),f,b
  4847  001E48  3F47               	incfsz	??___fltol& (0+255),f,b
  4848  001E4A  D7F8               	goto	l1094
  4849                           ; BSR set to: 1
  4850  001E4C  D013               	goto	l1095
  4851  001E4E                     l1090:
  4852  001E4E  FFFF               	dw	65535	; assembler added errata NOP
  4853                           ; BSR set to: 1
  4854  001E50  0E1F               	movlw	31
  4855  001E52  6547               	cpfsgt	??___fltol& (0+255),b
  4856  001E54  D00C               	goto	l1097
  4857  001E56                     u3760:
  4858  001E56  6B43               	clrf	?___fltol& (0+255),b
  4859  001E58  6B44               	clrf	(?___fltol+1)& (0+255),b
  4860  001E5A  6B45               	clrf	(?___fltol+2)& (0+255),b
  4861  001E5C  6B46               	clrf	(?___fltol+3)& (0+255),b
  4862  001E5E  D01D               	goto	l1089
  4863                           ; BSR set to: 1
  4864  001E60                     l1098:
  4865  001E60  FFFF               	dw	65535	; assembler added errata NOP
  4866                           ; BSR set to: 1
  4867  001E62  90D8               	bcf	status,0,c
  4868  001E64  3748               	rlcf	(??___fltol+1)& (0+255),f,b
  4869  001E66  3749               	rlcf	(??___fltol+2)& (0+255),f,b
  4870  001E68  374A               	rlcf	(??___fltol+3)& (0+255),f,b
  4871  001E6A  374B               	rlcf	(??___fltol+4)& (0+255),f,b
  4872  001E6C  0747               	decf	??___fltol& (0+255),f,b
  4873  001E6E                     l1097:
  4874  001E6E  FFFF               	dw	65535	; assembler added errata NOP
  4875                           ; BSR set to: 1
  4876  001E70  6747               	tstfsz	??___fltol& (0+255),b
  4877  001E72  D7F6               	goto	l1098
  4878                           ; BSR set to: 1
  4879  001E74                     l1095:
  4880  001E74  FFFF               	dw	65535	; assembler added errata NOP
  4881                           ; BSR set to: 1
  4882  001E76  50D9               	movf	fsr2l,w,c
  4883  001E78  E008               	bz	l1100
  4884  001E7A  1F4B               	comf	(??___fltol+4)& (0+255),f,b
  4885  001E7C  1F4A               	comf	(??___fltol+3)& (0+255),f,b
  4886  001E7E  1F49               	comf	(??___fltol+2)& (0+255),f,b
  4887  001E80  6D48               	negf	(??___fltol+1)& (0+255),b
  4888  001E82  0E00               	movlw	0
  4889  001E84  2349               	addwfc	(??___fltol+2)& (0+255),f,b
  4890  001E86  234A               	addwfc	(??___fltol+3)& (0+255),f,b
  4891  001E88  234B               	addwfc	(??___fltol+4)& (0+255),f,b
  4892  001E8A                     l1100:
  4893                           ; BSR set to: 1
  4894  001E8A  C148  F143         	movff	??___fltol+1,?___fltol
  4895  001E8E  C149  F144         	movff	??___fltol+2,?___fltol+1
  4896  001E92  C14A  F145         	movff	??___fltol+3,?___fltol+2
  4897  001E96  C14B  F146         	movff	??___fltol+4,?___fltol+3
  4898  001E9A                     l1089:
  4899  001E9A  FFFF               	dw	65535	; assembler added errata NOP
  4900                           ; BSR set to: 1
  4901  001E9C  0012               	return	
  4902  001E9E  FFFF               	dw	65535	; errata NOP
  4903  001EA0                     __end_of___fltol:
  4904                           	opt stack 0
  4905                           
  4906                           	psect	text39
  4907                           ; =============== function ___fltol ends =======
      +                          =====
  4908                           ; *************** function ___altofl ***********
      +                          ******
  4909                           ; Defined at:
  4910                           ;		line 16 in file "C:\Program Files (x86)\HI-TE
      +                          CH Software\PICC-18\PRO\9.66\sources\altofl.c"
  4911                           ; Parameters:
  4912                           ;		c              size:   4offs:   0	type: long 
  4913                           ; Auto variables:
  4914                           ;		exp         	       	type: unsigned char 
  4915                           ;		sign        	       	type: unsigned char 
  4916                           ;		f1          	       	type: unsigned char 
  4917                           ; Return value:
  4918                           ;		type: unsigned char 
  4919                           ;		size: 4
  4920                           ; Registers used:
  4921                           ;		wreg, fsr0l, fsr0h, fsr2l, status,2, status,0
      +                          , prodl, cstack
  4922                           ; Tracked objects:
  4923                           ;		On entry : F/1
  4924                           ;		On exit  : F/1
  4925                           ;		Unchanged: FFFFFFF0/0
  4926                           ; Data sizes:
  4927                           ;		Autos:    4
  4928                           ;		Params:   4
  4929                           ;		Temp:     0
  4930                           ;		Total:    8
  4931                           ; This function calls:
  4932                           ;		___flpack
  4933                           ;		___flneg
  4934                           ; This function is called by:
  4935                           ;		_floor
  4936                           ; This function uses a non-reentrant model
  4937                           ; 
  4938  000000                     
  4939  001F36                     ___altofl:
  4940                           	opt stack 24
  4941                           ; BSR set to: 1
  4942  001F36  FFFF               	dw	65535
  4943  001F38  5146               	movf	(?___altofl+3)& (0+255),w,b
  4944  001F3A  1143               	iorwf	?___altofl& (0+255),w,b
  4945  001F3C  1144               	iorwf	(?___altofl+1)& (0+255),w,b
  4946  001F3E  1145               	iorwf	(?___altofl+2)& (0+255),w,b
  4947  001F40  E105               	bnz	l956
  4948  001F42  6B43               	clrf	?___altofl& (0+255),b
  4949  001F44  6B44               	clrf	(?___altofl+1)& (0+255),b
  4950  001F46  6B45               	clrf	(?___altofl+2)& (0+255),b
  4951  001F48  6B46               	clrf	(?___altofl+3)& (0+255),b
  4952  001F4A  D03C               	goto	l955
  4953  001F4C                     l956:
  4954                           ; BSR set to: 1
  4955  001F4C  6AD9               	clrf	fsr2l,c
  4956  001F4E  AF46               	btfss	(?___altofl+3)& (0+255),7,b
  4957  001F50  D00A               	goto	l957
  4958  001F52  1F46               	comf	(?___altofl+3)& (0+255),f,b
  4959  001F54  1F45               	comf	(?___altofl+2)& (0+255),f,b
  4960  001F56  1F44               	comf	(?___altofl+1)& (0+255),f,b
  4961  001F58  6D43               	negf	?___altofl& (0+255),b
  4962  001F5A  0E00               	movlw	0
  4963  001F5C  2344               	addwfc	(?___altofl+1)& (0+255),f,b
  4964  001F5E  2345               	addwfc	(?___altofl+2)& (0+255),f,b
  4965  001F60  2346               	addwfc	(?___altofl+3)& (0+255),f,b
  4966  001F62  0E01               	movlw	1
  4967  001F64  6ED9               	movwf	fsr2l,c
  4968  001F66                     l957:
  4969  001F66  FFFF               	dw	65535	; assembler added errata NOP
  4970                           ; BSR set to: 1
  4971  001F68  0E96               	movlw	150
  4972  001F6A  6EF3               	movwf	prodl,c
  4973  001F6C  C143  F147         	movff	?___altofl,??___altofl
  4974  001F70  C144  F148         	movff	?___altofl+1,??___altofl+1
  4975  001F74  C145  F149         	movff	?___altofl+2,??___altofl+2
  4976  001F78  C146  F14A         	movff	?___altofl+3,??___altofl+3
  4977  001F7C  CFF3 F165          	movff	prodl,?___flpack+2
  4978  001F80  0E47               	movlw	low ??___altofl
  4979  001F82  6F63               	movwf	?___flpack& (0+255),b
  4980  001F84  0E01               	movlw	high ??___altofl
  4981  001F86  6F64               	movwf	(?___flpack+1)& (0+255),b
  4982  001F88  ECCD  F00B         	call	___flpack	;wreg free
  4983  001F8C  50D9               	movf	fsr2l,w,c
  4984  001F8E  E012               	bz	l958
  4985  001F90  C147  F14D         	movff	??___altofl,?___flneg
  4986  001F94  C148  F14E         	movff	??___altofl+1,?___flneg+1
  4987  001F98  C149  F14F         	movff	??___altofl+2,?___flneg+2
  4988  001F9C  C14A  F150         	movff	??___altofl+3,?___flneg+3
  4989  001FA0  ECF9  F012         	call	___flneg	;wreg free
  4990  001FA4  C14D  F147         	movff	?___flneg,??___altofl
  4991  001FA8  C14E  F148         	movff	?___flneg+1,??___altofl+1
  4992  001FAC  C14F  F149         	movff	?___flneg+2,??___altofl+2
  4993  001FB0  C150  F14A         	movff	?___flneg+3,??___altofl+3
  4994  001FB4                     l958:
  4995                           ; BSR set to: 1
  4996  001FB4  C147  F143         	movff	??___altofl,?___altofl
  4997  001FB8  C148  F144         	movff	??___altofl+1,?___altofl+1
  4998  001FBC  C149  F145         	movff	??___altofl+2,?___altofl+2
  4999  001FC0  C14A  F146         	movff	??___altofl+3,?___altofl+3
  5000  001FC4                     l955:
  5001  001FC4  FFFF               	dw	65535	; assembler added errata NOP
  5002                           ; BSR set to: 1
  5003  001FC6  0012               	return	
  5004  001FC8  FFFF               	dw	65535	; errata NOP
  5005  001FCA                     __end_of___altofl:
  5006                           	opt stack 0
  5007                           
  5008                           	psect	text40
  5009                           ; =============== function ___altofl ends ======
      +                          ======
  5010                           ; *************** function ___flge *************
      +                          ****
  5011                           ; Defined at:
  5012                           ;		line 5 in file "C:\Program Files (x86)\HI-TEC
      +                          H Software\PICC-18\PRO\9.66\sources\flge.c"
  5013                           ; Parameters:
  5014                           ;		ff1            size:   4offs:   0	type: unsig
      +                          ned char 
  5015                           ;		ff2            size:   4offs:   4	type: unsig
      +                          ned char 
  5016                           ; Auto variables:
  5017                           ;		None
  5018                           ; Return value:
  5019                           ;		type: bit 
  5020                           ;		size: 0
  5021                           ; Registers used:
  5022                           ;		wreg, status,2, status,0
  5023                           ; Tracked objects:
  5024                           ;		On entry : E/1
  5025                           ;		On exit  : F/1
  5026                           ;		Unchanged: FFFFFFF0/0
  5027                           ; Data sizes:
  5028                           ;		Autos:    0
  5029                           ;		Params:   8
  5030                           ;		Temp:     0
  5031                           ;		Total:    8
  5032                           ; This function calls:
  5033                           ;		Nothing
  5034                           ; This function is called by:
  5035                           ;		_format_double
  5036                           ;		_measure_capacitance
  5037                           ;		_measure_inductance
  5038                           ;		_floor
  5039                           ;		_pow
  5040                           ;		_exp
  5041                           ; This function uses a non-reentrant model
  5042                           ; 
  5043  000000                     
  5044  002302                     ___flge:
  5045                           	opt stack 24
  5046                           ; BSR set to: ?
  5047  002302  FFFF               	dw	65535
  5048  002304  0101               	movlb	1	; () banked
  5049  002306  AF46               	btfss	(?___flge+3)& (0+255),7,b
  5050  002308  D009               	goto	l1252
  5051  00230A  6D43               	negf	?___flge& (0+255),b
  5052  00230C  1F44               	comf	(?___flge+1)& (0+255),f,b
  5053  00230E  B0D8               	btfsc	status,0,c
  5054  002310  2B44               	incf	(?___flge+1)& (0+255),f,b
  5055  002312  1F45               	comf	(?___flge+2)& (0+255),f,b
  5056  002314  B0D8               	btfsc	status,0,c
  5057  002316  2B45               	incf	(?___flge+2)& (0+255),f,b
  5058  002318  0E80               	movlw	128
  5059  00231A  5746               	subfwb	(?___flge+3)& (0+255),f,b
  5060  00231C                     l1252:
  5061  00231C  FFFF               	dw	65535	; assembler added errata NOP
  5062                           ; BSR set to: 1
  5063  00231E  AF4A               	btfss	(?___flge+7)& (0+255),7,b
  5064  002320  D009               	goto	l1253
  5065  002322  6D47               	negf	(?___flge+4)& (0+255),b
  5066  002324  1F48               	comf	(?___flge+5)& (0+255),f,b
  5067  002326  B0D8               	btfsc	status,0,c
  5068  002328  2B48               	incf	(?___flge+5)& (0+255),f,b
  5069  00232A  1F49               	comf	(?___flge+6)& (0+255),f,b
  5070  00232C  B0D8               	btfsc	status,0,c
  5071  00232E  2B49               	incf	(?___flge+6)& (0+255),f,b
  5072  002330  0E80               	movlw	128
  5073  002332  574A               	subfwb	(?___flge+7)& (0+255),f,b
  5074  002334                     l1253:
  5075  002334  FFFF               	dw	65535	; assembler added errata NOP
  5076                           ; BSR set to: 1
  5077  002336  0E80               	movlw	128
  5078  002338  1B46               	xorwf	(?___flge+3)& (0+255),f,b
  5079  00233A  1B4A               	xorwf	(?___flge+7)& (0+255),f,b
  5080  00233C  5147               	movf	(?___flge+4)& (0+255),w,b
  5081  00233E  5D43               	subwf	?___flge& (0+255),w,b
  5082  002340  5148               	movf	(?___flge+5)& (0+255),w,b
  5083  002342  5944               	subwfb	(?___flge+1)& (0+255),w,b
  5084  002344  5149               	movf	(?___flge+6)& (0+255),w,b
  5085  002346  5945               	subwfb	(?___flge+2)& (0+255),w,b
  5086  002348  514A               	movf	(?___flge+7)& (0+255),w,b
  5087  00234A  5946               	subwfb	(?___flge+3)& (0+255),w,b
  5088                           ; BSR set to: 1
  5089  00234C  0012               	return	
  5090  00234E  FFFF               	dw	65535	; errata NOP
  5091  002350                     __end_of___flge:
  5092                           	opt stack 0
  5093                           
  5094                           	psect	text41
  5095                           ; =============== function ___flge ends ========
      +                          ====
  5096                           ; *************** function ___flneg ************
      +                          *****
  5097                           ; Defined at:
  5098                           ;		line 16 in file "C:\Program Files (x86)\HI-TE
      +                          CH Software\PICC-18\PRO\9.66\sources\flneg.c"
  5099                           ; Parameters:
  5100                           ;		f1             size:   4offs:   0	type: bit 
  5101                           ; Auto variables:
  5102                           ;		None
  5103                           ; Return value:
  5104                           ;		type: bit 
  5105                           ;		size: 4
  5106                           ; Registers used:
  5107                           ;		wreg, fsr0l, fsr0h, status,2, status,0
  5108                           ; Tracked objects:
  5109                           ;		On entry : F/1
  5110                           ;		On exit  : F/1
  5111                           ;		Unchanged: FFFFFFF0/0
  5112                           ; Data sizes:
  5113                           ;		Autos:    0
  5114                           ;		Params:   4
  5115                           ;		Temp:     0
  5116                           ;		Total:    4
  5117                           ; This function calls:
  5118                           ;		Nothing
  5119                           ; This function is called by:
  5120                           ;		_pow
  5121                           ;		___altofl
  5122                           ;		___awtofl
  5123                           ;		_exp
  5124                           ; This function uses a non-reentrant model
  5125                           ; 
  5126  000000                     
  5127  0025F2                     ___flneg:
  5128                           	opt stack 23
  5129                           ; BSR set to: 1
  5130  0025F2  FFFF               	dw	65535
  5131  0025F4  EE01  F04D         	lfsr	0,?___flneg
  5132  0025F8  50EE               	movf	postinc0,w,c
  5133  0025FA  10EE               	iorwf	postinc0,w,c
  5134  0025FC  10EE               	iorwf	postinc0,w,c
  5135  0025FE  10EE               	iorwf	postinc0,w,c
  5136  002600  E002               	bz	l1247
  5137  002602  0E80               	movlw	128
  5138  002604  1B50               	xorwf	(?___flneg+3)& (0+255),f,b
  5139  002606                     l1247:
  5140                           ; BSR set to: 1
  5141                           ; BSR set to: 1
  5142  002606  0012               	return	
  5143  002608  FFFF               	dw	65535	; errata NOP
  5144  00260A                     __end_of___flneg:
  5145                           	opt stack 0
  5146                           
  5147                           	psect	text42
  5148                           ; =============== function ___flneg ends =======
      +                          =====
  5149                           ; *************** function ___fladd ************
      +                          *****
  5150                           ; Defined at:
  5151                           ;		line 17 in file "C:\Program Files (x86)\HI-TE
      +                          CH Software\PICC-18\PRO\9.66\sources\fladd.c"
  5152                           ; Parameters:
  5153                           ;		f1             size:   4offs:   0	type: bit 
  5154                           ;		f2             size:   4offs:   4	type: bit 
  5155                           ; Auto variables:
  5156                           ;		sign2       	       	type: unsigned char 
  5157                           ;		cntr        	       	type: unsigned char 
  5158                           ;		sign1       	       	type: unsigned char 
  5159                           ;		exp2        	       	type: unsigned char 
  5160                           ;		exp1        	       	type: unsigned char 
  5161                           ; Return value:
  5162                           ;		type: unsigned char 
  5163                           ;		size: 4
  5164                           ; Registers used:
  5165                           ;		wreg, fsr0l, fsr0h, fsr2l, status,2, status,0
      +                          , prodl, prodh, cstack
  5166                           ; Tracked objects:
  5167                           ;		On entry : F/1
  5168                           ;		On exit  : F/1
  5169                           ;		Unchanged: FFFFFFF0/0
  5170                           ; Data sizes:
  5171                           ;		Autos:    2
  5172                           ;		Params:   8
  5173                           ;		Temp:     1
  5174                           ;		Total:   11
  5175                           ; This function calls:
  5176                           ;		___flunpack
  5177                           ;		___flpack
  5178                           ; This function is called by:
  5179                           ;		_floor
  5180                           ;		_log
  5181                           ;		___flsub
  5182                           ;		_eval_poly
  5183                           ; This function uses a non-reentrant model
  5184                           ; 
  5185  000000                     
  5186  001176                     ___fladd:
  5187                           	opt stack 23
  5188                           ; BSR set to: 1
  5189  001176  FFFF               	dw	65535
  5190                           ; BSR set to: 1
  5191  001178  0E5E               	movlw	low (??___fladd+1)
  5192  00117A  6F65               	movwf	(?___flunpack+2)& (0+255),b
  5193  00117C  0E01               	movlw	high (??___fladd+1)
  5194  00117E  6F66               	movwf	(?___flunpack+3)& (0+255),b
  5195  001180  0E55               	movlw	low ?___fladd
  5196  001182  6F63               	movwf	?___flunpack& (0+255),b
  5197  001184  0E01               	movlw	high ?___fladd
  5198  001186  6F64               	movwf	(?___flunpack+1)& (0+255),b
  5199  001188  EC9D  F010         	call	___flunpack	;wreg free
  5200  00118C  6EF4               	movwf	prodh,c
  5201  00118E  675E               	tstfsz	(??___fladd+1)& (0+255),b
  5202  001190  D009               	goto	l1021
  5203  001192  C159  F155         	movff	?___fladd+4,?___fladd
  5204  001196  C15A  F156         	movff	?___fladd+5,?___fladd+1
  5205  00119A  C15B  F157         	movff	?___fladd+6,?___fladd+2
  5206  00119E  C15C  F158         	movff	?___fladd+7,?___fladd+3
  5207  0011A2  D09D               	goto	l1019
  5208  0011A4                     l1021:
  5209  0011A4  FFFF               	dw	65535	; assembler added errata NOP
  5210                           ; BSR set to: 1
  5211  0011A6  0E5D               	movlw	low ??___fladd
  5212  0011A8  6F65               	movwf	(?___flunpack+2)& (0+255),b
  5213  0011AA  0E01               	movlw	high ??___fladd
  5214  0011AC  6F66               	movwf	(?___flunpack+3)& (0+255),b
  5215  0011AE  0E59               	movlw	low (?___fladd+4)
  5216  0011B0  6F63               	movwf	?___flunpack& (0+255),b
  5217  0011B2  0E01               	movlw	high (?___fladd+4)
  5218  0011B4  6F64               	movwf	(?___flunpack+1)& (0+255),b
  5219  0011B6  EC9D  F010         	call	___flunpack	;wreg free
  5220  0011BA  6ED9               	movwf	fsr2l,c
  5221  0011BC  515D               	movf	??___fladd& (0+255),w,b
  5222  0011BE  E101 D081          	bz	l1022
  5223  0011C2  0E06               	movlw	6
  5224  0011C4  6EE9               	movwf	fsr0l,c
  5225  0011C6  515D               	movf	??___fladd& (0+255),w,b
  5226  0011C8  615E               	cpfslt	(??___fladd+1)& (0+255),b
  5227  0011CA  D028               	goto	l1023
  5228  0011CC  515E               	movf	(??___fladd+1)& (0+255),w,b
  5229  0011CE  5D5D               	subwf	??___fladd& (0+255),w,b
  5230  0011D0  6F5F               	movwf	(??___fladd+2)& (0+255),b
  5231  0011D2  0E21               	movlw	33
  5232  0011D4  5D5F               	subwf	(??___fladd+2)& (0+255),w,b
  5233  0011D6  E309               	bnc	l1028
  5234  0011D8  6B55               	clrf	?___fladd& (0+255),b
  5235  0011DA  6B56               	clrf	(?___fladd+1)& (0+255),b
  5236  0011DC  6B57               	clrf	(?___fladd+2)& (0+255),b
  5237  0011DE  6B58               	clrf	(?___fladd+3)& (0+255),b
  5238  0011E0  C15D  F15E         	movff	??___fladd,??___fladd+1
  5239  0011E4  CFD9 FFF4          	movff	fsr2l,prodh
  5240  0011E8  D040               	goto	l1032
  5241  0011EA                     l1028:
  5242  0011EA  FFFF               	dw	65535	; assembler added errata NOP
  5243                           ; BSR set to: 1
  5244  0011EC  90D8               	bcf	status,0,c
  5245  0011EE  3759               	rlcf	(?___fladd+4)& (0+255),f,b
  5246  0011F0  375A               	rlcf	(?___fladd+5)& (0+255),f,b
  5247  0011F2  375B               	rlcf	(?___fladd+6)& (0+255),f,b
  5248  0011F4  375C               	rlcf	(?___fladd+7)& (0+255),f,b
  5249  0011F6  075D               	decf	??___fladd& (0+255),f,b
  5250  0011F8  515D               	movf	??___fladd& (0+255),w,b
  5251  0011FA  195E               	xorwf	(??___fladd+1)& (0+255),w,b
  5252  0011FC  E00A               	bz	l1029
  5253  0011FE  2EE9               	decfsz	fsr0l,f,c
  5254  001200  D7F4               	goto	l1028
  5255                           ; BSR set to: 1
  5256                           ; BSR set to: 1
  5257  001202  D007               	goto	l1029
  5258  001204                     l1030:
  5259  001204  FFFF               	dw	65535	; assembler added errata NOP
  5260                           ; BSR set to: 1
  5261  001206  90D8               	bcf	status,0,c
  5262  001208  3358               	rrcf	(?___fladd+3)& (0+255),f,b
  5263  00120A  3357               	rrcf	(?___fladd+2)& (0+255),f,b
  5264  00120C  3356               	rrcf	(?___fladd+1)& (0+255),f,b
  5265  00120E  3355               	rrcf	?___fladd& (0+255),f,b
  5266  001210  2B5E               	incf	(??___fladd+1)& (0+255),f,b
  5267  001212                     l1029:
  5268  001212  FFFF               	dw	65535	; assembler added errata NOP
  5269                           ; BSR set to: 1
  5270  001214  515D               	movf	??___fladd& (0+255),w,b
  5271  001216  635E               	cpfseq	(??___fladd+1)& (0+255),b
  5272  001218  D7F5               	goto	l1030
  5273  00121A  D027               	goto	l1032
  5274                           ; BSR set to: 1
  5275                           ; BSR set to: 1
  5276  00121C                     l1023:
  5277  00121C  FFFF               	dw	65535	; assembler added errata NOP
  5278                           ; BSR set to: 1
  5279  00121E  515E               	movf	(??___fladd+1)& (0+255),w,b
  5280  001220  195D               	xorwf	??___fladd& (0+255),w,b
  5281  001222  E023               	bz	l1032
  5282  001224  515D               	movf	??___fladd& (0+255),w,b
  5283  001226  5D5E               	subwf	(??___fladd+1)& (0+255),w,b
  5284  001228  6F5F               	movwf	(??___fladd+2)& (0+255),b
  5285  00122A  0E21               	movlw	33
  5286  00122C  5D5F               	subwf	(??___fladd+2)& (0+255),w,b
  5287  00122E  E305               	bnc	l1038
  5288  001230  6B59               	clrf	(?___fladd+4)& (0+255),b
  5289  001232  6B5A               	clrf	(?___fladd+5)& (0+255),b
  5290  001234  6B5B               	clrf	(?___fladd+6)& (0+255),b
  5291  001236  6B5C               	clrf	(?___fladd+7)& (0+255),b
  5292  001238  D018               	goto	l1032
  5293  00123A                     l1038:
  5294  00123A  FFFF               	dw	65535	; assembler added errata NOP
  5295                           ; BSR set to: 1
  5296  00123C  90D8               	bcf	status,0,c
  5297  00123E  3755               	rlcf	?___fladd& (0+255),f,b
  5298  001240  3756               	rlcf	(?___fladd+1)& (0+255),f,b
  5299  001242  3757               	rlcf	(?___fladd+2)& (0+255),f,b
  5300  001244  3758               	rlcf	(?___fladd+3)& (0+255),f,b
  5301  001246  075E               	decf	(??___fladd+1)& (0+255),f,b
  5302  001248  515D               	movf	??___fladd& (0+255),w,b
  5303  00124A  195E               	xorwf	(??___fladd+1)& (0+255),w,b
  5304  00124C  E00A               	bz	l1039
  5305  00124E  2EE9               	decfsz	fsr0l,f,c
  5306  001250  D7F4               	goto	l1038
  5307                           ; BSR set to: 1
  5308                           ; BSR set to: 1
  5309  001252  D007               	goto	l1039
  5310  001254                     l1040:
  5311  001254  FFFF               	dw	65535	; assembler added errata NOP
  5312                           ; BSR set to: 1
  5313  001256  90D8               	bcf	status,0,c
  5314  001258  335C               	rrcf	(?___fladd+7)& (0+255),f,b
  5315  00125A  335B               	rrcf	(?___fladd+6)& (0+255),f,b
  5316  00125C  335A               	rrcf	(?___fladd+5)& (0+255),f,b
  5317  00125E  3359               	rrcf	(?___fladd+4)& (0+255),f,b
  5318  001260  2B5D               	incf	??___fladd& (0+255),f,b
  5319  001262                     l1039:
  5320  001262  FFFF               	dw	65535	; assembler added errata NOP
  5321                           ; BSR set to: 1
  5322  001264  515D               	movf	??___fladd& (0+255),w,b
  5323  001266  635E               	cpfseq	(??___fladd+1)& (0+255),b
  5324  001268  D7F5               	goto	l1040
  5325                           ; BSR set to: 1
  5326                           ; BSR set to: 1
  5327                           ; BSR set to: 1
  5328  00126A                     l1032:
  5329  00126A  FFFF               	dw	65535	; assembler added errata NOP
  5330                           ; BSR set to: 1
  5331  00126C  50F4               	movf	prodh,w,c
  5332  00126E  E009               	bz	l1042
  5333  001270  1F55               	comf	?___fladd& (0+255),f,b
  5334  001272  1F56               	comf	(?___fladd+1)& (0+255),f,b
  5335  001274  1F57               	comf	(?___fladd+2)& (0+255),f,b
  5336  001276  1F58               	comf	(?___fladd+3)& (0+255),f,b
  5337  001278  2B55               	incf	?___fladd& (0+255),f,b
  5338  00127A  0E00               	movlw	0
  5339  00127C  2356               	addwfc	(?___fladd+1)& (0+255),f,b
  5340  00127E  2357               	addwfc	(?___fladd+2)& (0+255),f,b
  5341  001280  2358               	addwfc	(?___fladd+3)& (0+255),f,b
  5342  001282                     l1042:
  5343                           ; BSR set to: 1
  5344  001282  50D9               	movf	fsr2l,w,c
  5345  001284  E009               	bz	l1043
  5346  001286  1F59               	comf	(?___fladd+4)& (0+255),f,b
  5347  001288  1F5A               	comf	(?___fladd+5)& (0+255),f,b
  5348  00128A  1F5B               	comf	(?___fladd+6)& (0+255),f,b
  5349  00128C  1F5C               	comf	(?___fladd+7)& (0+255),f,b
  5350  00128E  2B59               	incf	(?___fladd+4)& (0+255),f,b
  5351  001290  0E00               	movlw	0
  5352  001292  235A               	addwfc	(?___fladd+5)& (0+255),f,b
  5353  001294  235B               	addwfc	(?___fladd+6)& (0+255),f,b
  5354  001296  235C               	addwfc	(?___fladd+7)& (0+255),f,b
  5355  001298                     l1043:
  5356                           ; BSR set to: 1
  5357  001298  6AF4               	clrf	prodh,c
  5358  00129A  5159               	movf	(?___fladd+4)& (0+255),w,b
  5359  00129C  2755               	addwf	?___fladd& (0+255),f,b
  5360  00129E  515A               	movf	(?___fladd+5)& (0+255),w,b
  5361  0012A0  2356               	addwfc	(?___fladd+1)& (0+255),f,b
  5362  0012A2  515B               	movf	(?___fladd+6)& (0+255),w,b
  5363  0012A4  2357               	addwfc	(?___fladd+2)& (0+255),f,b
  5364  0012A6  515C               	movf	(?___fladd+7)& (0+255),w,b
  5365  0012A8  2358               	addwfc	(?___fladd+3)& (0+255),f,b
  5366  0012AA  AF58               	btfss	(?___fladd+3)& (0+255),7,b
  5367  0012AC  D00B               	goto	l1022
  5368  0012AE  1F55               	comf	?___fladd& (0+255),f,b
  5369  0012B0  1F56               	comf	(?___fladd+1)& (0+255),f,b
  5370  0012B2  1F57               	comf	(?___fladd+2)& (0+255),f,b
  5371  0012B4  1F58               	comf	(?___fladd+3)& (0+255),f,b
  5372  0012B6  2B55               	incf	?___fladd& (0+255),f,b
  5373  0012B8  0E00               	movlw	0
  5374  0012BA  2356               	addwfc	(?___fladd+1)& (0+255),f,b
  5375  0012BC  2357               	addwfc	(?___fladd+2)& (0+255),f,b
  5376  0012BE  2358               	addwfc	(?___fladd+3)& (0+255),f,b
  5377  0012C0  0E01               	movlw	1
  5378  0012C2  6EF4               	movwf	prodh,c
  5379                           ; BSR set to: 1
  5380  0012C4                     l1022:
  5381  0012C4  FFFF               	dw	65535	; assembler added errata NOP
  5382                           ; BSR set to: 1
  5383  0012C6  C15E  F165         	movff	??___fladd+1,?___flpack+2
  5384  0012CA  0E55               	movlw	low ?___fladd
  5385  0012CC  6F63               	movwf	?___flpack& (0+255),b
  5386  0012CE  0E01               	movlw	high ?___fladd
  5387  0012D0  6F64               	movwf	(?___flpack+1)& (0+255),b
  5388  0012D2  ECCD  F00B         	call	___flpack	;wreg free
  5389  0012D6  50F4               	movf	prodh,w,c
  5390  0012D8  E002               	bz	l1045
  5391  0012DA  0E80               	movlw	128
  5392  0012DC  1B58               	xorwf	(?___fladd+3)& (0+255),f,b
  5393  0012DE                     l1045:
  5394                           ; BSR set to: 1
  5395  0012DE                     l1019:
  5396  0012DE  FFFF               	dw	65535	; assembler added errata NOP
  5397                           ; BSR set to: 1
  5398  0012E0  0012               	return	
  5399  0012E2  FFFF               	dw	65535	; errata NOP
  5400  0012E4                     __end_of___fladd:
  5401                           	opt stack 0
  5402                           
  5403                           	psect	text43
  5404                           ; =============== function ___fladd ends =======
      +                          =====
  5405                           ; *************** function ___flpack ***********
      +                          ******
  5406                           ; Defined at:
  5407                           ;		line 36 in file "C:\Program Files (x86)\HI-TE
      +                          CH Software\PICC-18\PRO\9.66\sources\double.c"
  5408                           ; Parameters:
  5409                           ;		arg            size:   2offs:   0	type: PTR u
      +                          nsigned long ; Largest target is 4
  5410                           ;		 -> __lwtofl@f1(4), __lltofl@f1(4), __lbtofl@
      +                          f1(4), __abtofl@f1(4), 
  5411                           ;		 -> __flmul@f3(4), __fldiv@f3(4), __fladd@f1(
      +                          4), __awtofl@f1(4), 
  5412                           ;		 -> __altofl@f1(4), 
  5413                           ;		exp            size:   1offs:   2	type: unsig
      +                          ned char 
  5414                           ; Auto variables:
  5415                           ;		l_arg       	       	type: unsigned long 
  5416                           ; Return value:
  5417                           ;		type: void 
  5418                           ;		size: 0
  5419                           ; Registers used:
  5420                           ;		wreg, fsr0l, fsr0h, status,2, status,0
  5421                           ; Tracked objects:
  5422                           ;		On entry : F/1
  5423                           ;		On exit  : F/1
  5424                           ;		Unchanged: FFFFFFF0/0
  5425                           ; Data sizes:
  5426                           ;		Autos:    4
  5427                           ;		Params:   3
  5428                           ;		Temp:     4
  5429                           ;		Total:   11
  5430                           ; This function calls:
  5431                           ;		Nothing
  5432                           ; This function is called by:
  5433                           ;		___altofl
  5434                           ;		___awtofl
  5435                           ;		___fladd
  5436                           ;		___fldiv
  5437                           ;		___flmul
  5438                           ;		___lltofl
  5439                           ;		___lwtofl
  5440                           ; This function uses a non-reentrant model
  5441                           ; 
  5442  000000                     
  5443  00179A                     ___flpack:
  5444                           	opt stack 22
  5445                           ; BSR set to: 1
  5446  00179A  FFFF               	dw	65535
  5447  00179C  C163  FFE9         	movff	?___flpack,fsr0l
  5448  0017A0  C164  FFEA         	movff	?___flpack+1,fsr0h
  5449  0017A4  CFEE F166          	movff	postinc0,??___flpack
  5450  0017A8  CFEE F167          	movff	postinc0,??___flpack+1
  5451  0017AC  CFEE F168          	movff	postinc0,??___flpack+2
  5452  0017B0  CFEE F169          	movff	postinc0,??___flpack+3
  5453  0017B4  5165               	movf	(?___flpack+2)& (0+255),w,b
  5454  0017B6  E005               	bz	l600000744
  5455  0017B8  5169               	movf	(??___flpack+3)& (0+255),w,b
  5456  0017BA  1166               	iorwf	??___flpack& (0+255),w,b
  5457  0017BC  1167               	iorwf	(??___flpack+1)& (0+255),w,b
  5458  0017BE  1168               	iorwf	(??___flpack+2)& (0+255),w,b
  5459  0017C0  E111               	bnz	l1009
  5460  0017C2                     l600000744:
  5461                           ; BSR set to: 1
  5462  0017C2  C163  FFE9         	movff	?___flpack,fsr0l
  5463  0017C6  C164  FFEA         	movff	?___flpack+1,fsr0h
  5464  0017CA  0E00               	movlw	0
  5465  0017CC  6AEE               	clrf	postinc0,c
  5466  0017CE  6AEE               	clrf	postinc0,c
  5467  0017D0  6AEE               	clrf	postinc0,c
  5468  0017D2  6AED               	clrf	postdec0,c
  5469  0017D4  D058               	goto	l1007
  5470                           ; BSR set to: 1
  5471  0017D6                     l1010:
  5472  0017D6  FFFF               	dw	65535	; assembler added errata NOP
  5473                           ; BSR set to: 1
  5474  0017D8  2B65               	incf	(?___flpack+2)& (0+255),f,b
  5475  0017DA  90D8               	bcf	status,0,c
  5476  0017DC  3369               	rrcf	(??___flpack+3)& (0+255),f,b
  5477  0017DE  3368               	rrcf	(??___flpack+2)& (0+255),f,b
  5478  0017E0  3367               	rrcf	(??___flpack+1)& (0+255),f,b
  5479  0017E2  3366               	rrcf	??___flpack& (0+255),f,b
  5480  0017E4                     l1009:
  5481                           ; BSR set to: 1
  5482  0017E4  6B6A               	clrf	(??___flpack+4)& (0+255),b
  5483  0017E6  6B6B               	clrf	(??___flpack+5)& (0+255),b
  5484  0017E8  6B6C               	clrf	(??___flpack+6)& (0+255),b
  5485  0017EA  0EFE               	movlw	254
  5486  0017EC  1569               	andwf	(??___flpack+3)& (0+255),w,b
  5487  0017EE  6F6D               	movwf	(??___flpack+7)& (0+255),b
  5488  0017F0  516D               	movf	(??___flpack+7)& (0+255),w,b
  5489  0017F2  116A               	iorwf	(??___flpack+4)& (0+255),w,b
  5490  0017F4  116B               	iorwf	(??___flpack+5)& (0+255),w,b
  5491  0017F6  116C               	iorwf	(??___flpack+6)& (0+255),w,b
  5492  0017F8  E00D               	bz	l1012
  5493  0017FA  D7ED               	goto	l1010
  5494                           ; BSR set to: 1
  5495  0017FC                     l1013:
  5496  0017FC  FFFF               	dw	65535	; assembler added errata NOP
  5497                           ; BSR set to: 1
  5498  0017FE  2B65               	incf	(?___flpack+2)& (0+255),f,b
  5499  001800  2B66               	incf	??___flpack& (0+255),f,b
  5500  001802  0E00               	movlw	0
  5501  001804  2367               	addwfc	(??___flpack+1)& (0+255),f,b
  5502  001806  2368               	addwfc	(??___flpack+2)& (0+255),f,b
  5503  001808  2369               	addwfc	(??___flpack+3)& (0+255),f,b
  5504  00180A  90D8               	bcf	status,0,c
  5505  00180C  3369               	rrcf	(??___flpack+3)& (0+255),f,b
  5506  00180E  3368               	rrcf	(??___flpack+2)& (0+255),f,b
  5507  001810  3367               	rrcf	(??___flpack+1)& (0+255),f,b
  5508  001812  3366               	rrcf	??___flpack& (0+255),f,b
  5509  001814                     l1012:
  5510                           ; BSR set to: 1
  5511  001814  6B6A               	clrf	(??___flpack+4)& (0+255),b
  5512  001816  6B6B               	clrf	(??___flpack+5)& (0+255),b
  5513  001818  6B6C               	clrf	(??___flpack+6)& (0+255),b
  5514  00181A  5169               	movf	(??___flpack+3)& (0+255),w,b
  5515  00181C  6F6D               	movwf	(??___flpack+7)& (0+255),b
  5516  00181E  516D               	movf	(??___flpack+7)& (0+255),w,b
  5517  001820  116A               	iorwf	(??___flpack+4)& (0+255),w,b
  5518  001822  116B               	iorwf	(??___flpack+5)& (0+255),w,b
  5519  001824  116C               	iorwf	(??___flpack+6)& (0+255),w,b
  5520  001826  E008               	bz	l1015
  5521  001828  D7E9               	goto	l1013
  5522                           ; BSR set to: 1
  5523  00182A                     l1016:
  5524  00182A  FFFF               	dw	65535	; assembler added errata NOP
  5525                           ; BSR set to: 1
  5526  00182C  0765               	decf	(?___flpack+2)& (0+255),f,b
  5527  00182E  90D8               	bcf	status,0,c
  5528  001830  3766               	rlcf	??___flpack& (0+255),f,b
  5529  001832  3767               	rlcf	(??___flpack+1)& (0+255),f,b
  5530  001834  3768               	rlcf	(??___flpack+2)& (0+255),f,b
  5531  001836  3769               	rlcf	(??___flpack+3)& (0+255),f,b
  5532  001838                     l1015:
  5533                           ; BSR set to: 1
  5534  001838  AF68               	btfss	(??___flpack+2)& (0+255),7,b
  5535  00183A  D7F7               	goto	l1016
  5536                           ; BSR set to: 1
  5537  00183C  B165               	btfsc	(?___flpack+2)& (0+255),0,b
  5538  00183E  D002               	goto	l1018
  5539  001840  0E7F               	movlw	127
  5540  001842  1768               	andwf	(??___flpack+2)& (0+255),f,b
  5541  001844                     l1018:
  5542  001844  FFFF               	dw	65535	; assembler added errata NOP
  5543                           ; BSR set to: 1
  5544  001846  90D8               	bcf	status,0,c
  5545  001848  3365               	rrcf	(?___flpack+2)& (0+255),f,b
  5546  00184A  C165  F16A         	movff	?___flpack+2,??___flpack+4
  5547  00184E  6B6B               	clrf	(??___flpack+5)& (0+255),b
  5548  001850  6B6C               	clrf	(??___flpack+6)& (0+255),b
  5549  001852  6B6D               	clrf	(??___flpack+7)& (0+255),b
  5550  001854  C16A  F16D         	movff	??___flpack+4,??___flpack+7
  5551  001858  6B6C               	clrf	(??___flpack+6)& (0+255),b
  5552  00185A  6B6B               	clrf	(??___flpack+5)& (0+255),b
  5553  00185C  6B6A               	clrf	(??___flpack+4)& (0+255),b
  5554  00185E  516A               	movf	(??___flpack+4)& (0+255),w,b
  5555  001860  1366               	iorwf	??___flpack& (0+255),f,b
  5556  001862  516B               	movf	(??___flpack+5)& (0+255),w,b
  5557  001864  1367               	iorwf	(??___flpack+1)& (0+255),f,b
  5558  001866  516C               	movf	(??___flpack+6)& (0+255),w,b
  5559  001868  1368               	iorwf	(??___flpack+2)& (0+255),f,b
  5560  00186A  516D               	movf	(??___flpack+7)& (0+255),w,b
  5561  00186C  1369               	iorwf	(??___flpack+3)& (0+255),f,b
  5562  00186E  C163  FFE9         	movff	?___flpack,fsr0l
  5563  001872  C164  FFEA         	movff	?___flpack+1,fsr0h
  5564  001876  C166  FFEE         	movff	??___flpack,postinc0
  5565  00187A  C167  FFEE         	movff	??___flpack+1,postinc0
  5566  00187E  C168  FFEE         	movff	??___flpack+2,postinc0
  5567  001882  C169  FFEE         	movff	??___flpack+3,postinc0
  5568  001886                     l1007:
  5569  001886  FFFF               	dw	65535	; assembler added errata NOP
  5570                           ; BSR set to: 1
  5571  001888  0012               	return	
  5572  00188A  FFFF               	dw	65535	; errata NOP
  5573  00188C                     __end_of___flpack:
  5574                           	opt stack 0
  5575                           
  5576                           	psect	text44
  5577                           ; =============== function ___flpack ends ======
      +                          ======
  5578                           ; *************** function ___flunpack *********
      +                          ********
  5579                           ; Defined at:
  5580                           ;		line 13 in file "C:\Program Files (x86)\HI-TE
      +                          CH Software\PICC-18\PRO\9.66\sources\double.c"
  5581                           ; Parameters:
  5582                           ;		arg            size:   2offs:   0	type: PTR u
      +                          nsigned long ; Largest target is 4
  5583                           ;		 -> __fltol@f1(4), __flmul@f2(4), __flmul@f1(
      +                          4), __fldiv@f2(4), 
  5584                           ;		 -> __fldiv@f1(4), __fladd@f2(4), __fladd@f1(
      +                          4), 
  5585                           ;		exp            size:   2offs:   2	type: PTR u
      +                          nsigned char ; Largest target is 1
  5586                           ;		 -> __fltol@exp1(1), __flmul@cntr(1), __flmul
      +                          @exp1(1), __fldiv@exp2(1), 
  5587                           ;		 -> __fldiv@exp1(1), __fladd@exp2(1), __fladd
      +                          @exp1(1), 
  5588                           ; Auto variables:
  5589                           ;		sign        	       	type: unsigned char 
  5590                           ;		l_arg       	       	type: unsigned long 
  5591                           ; Return value:
  5592                           ;		type: unsigned char 
  5593                           ;		size: 1
  5594                           ; Registers used:
  5595                           ;		wreg, fsr0l, fsr0h, status,2, status,0, prodl
  5596                           ; Tracked objects:
  5597                           ;		On entry : F/1
  5598                           ;		On exit  : F/1
  5599                           ;		Unchanged: FFFFFFF0/0
  5600                           ; Data sizes:
  5601                           ;		Autos:    4
  5602                           ;		Params:   4
  5603                           ;		Temp:     0
  5604                           ;		Total:    8
  5605                           ; This function calls:
  5606                           ;		Nothing
  5607                           ; This function is called by:
  5608                           ;		___fladd
  5609                           ;		___fldiv
  5610                           ;		___flmul
  5611                           ;		___fltol
  5612                           ; This function uses a non-reentrant model
  5613                           ; 
  5614  000000                     
  5615  00213A                     ___flunpack:
  5616                           	opt stack 22
  5617                           ; BSR set to: 1
  5618  00213A  FFFF               	dw	65535
  5619  00213C  C163  FFE9         	movff	?___flunpack,fsr0l
  5620  002140  C164  FFEA         	movff	?___flunpack+1,fsr0h
  5621  002144  CFEE F167          	movff	postinc0,??___flunpack
  5622  002148  CFEE F168          	movff	postinc0,??___flunpack+1
  5623  00214C  CFEE F169          	movff	postinc0,??___flunpack+2
  5624  002150  CFEE F16A          	movff	postinc0,??___flunpack+3
  5625  002154  0101               	movlb	1	; () banked
  5626  002156  3569               	rlcf	(??___flunpack+2)& (0+255),w,b
  5627  002158  356A               	rlcf	(??___flunpack+3)& (0+255),w,b
  5628  00215A  6EF3               	movwf	prodl,c
  5629  00215C  C165  FFE9         	movff	?___flunpack+2,fsr0l
  5630  002160  C166  FFEA         	movff	?___flunpack+3,fsr0h
  5631  002164  CFF3 FFEF          	movff	prodl,indf0
  5632  002168  66F3               	tstfsz	prodl,c
  5633  00216A  D005               	goto	l1004
  5634  00216C  6B67               	clrf	??___flunpack& (0+255),b
  5635  00216E  6B68               	clrf	(??___flunpack+1)& (0+255),b
  5636  002170  6B69               	clrf	(??___flunpack+2)& (0+255),b
  5637  002172  6B6A               	clrf	(??___flunpack+3)& (0+255),b
  5638  002174  D006               	goto	l1005
  5639  002176                     l1004:
  5640  002176  FFFF               	dw	65535	; assembler added errata NOP
  5641                           ; BSR set to: 1
  5642  002178  6AF3               	clrf	prodl,c
  5643  00217A  8F69               	bsf	(??___flunpack+2)& (0+255),7,b
  5644  00217C  BF6A               	btfsc	(??___flunpack+3)& (0+255),7,b
  5645  00217E  2AF3               	incf	prodl,f,c
  5646                           ; BSR set to: 1
  5647  002180  6B6A               	clrf	(??___flunpack+3)& (0+255),b
  5648  002182                     l1005:
  5649  002182  FFFF               	dw	65535	; assembler added errata NOP
  5650                           ; BSR set to: 1
  5651  002184  C163  FFE9         	movff	?___flunpack,fsr0l
  5652  002188  C164  FFEA         	movff	?___flunpack+1,fsr0h
  5653  00218C  C167  FFEE         	movff	??___flunpack,postinc0
  5654  002190  C168  FFEE         	movff	??___flunpack+1,postinc0
  5655  002194  C169  FFEE         	movff	??___flunpack+2,postinc0
  5656  002198  C16A  FFEE         	movff	??___flunpack+3,postinc0
  5657  00219C  50F3               	movf	prodl,w,c
  5658                           ; BSR set to: 1
  5659  00219E  0012               	return	
  5660  0021A0  FFFF               	dw	65535	; errata NOP
  5661  0021A2                     __end_of___flunpack:
  5662                           	opt stack 0
  5663                           
  5664                           	psect	text45
  5665                           ; =============== function ___flunpack ends ====
      +                          ========
  5666                           ; *************** function _isr ****************
      +                          *
  5667                           ; Defined at:
  5668                           ;		line 79 in file "../../../src/LC-meter.c"
  5669                           ; Parameters:
  5670                           ;		None
  5671                           ; Auto variables:
  5672                           ;		None
  5673                           ; Return value:
  5674                           ;		type: int 
  5675                           ;		size: 2
  5676                           ; Registers used:
  5677                           ;		wreg, fsr0l, fsr0h, status,2, status,0
  5678                           ; Tracked objects:
  5679                           ;		On entry : 0/0
  5680                           ;		On exit  : 0/0
  5681                           ;		Unchanged: FFFFFFF0/0
  5682                           ; Data sizes:
  5683                           ;		Autos:    0
  5684                           ;		Params:   0
  5685                           ;		Temp:     2
  5686                           ;		Total:    2
  5687                           ; This function calls:
  5688                           ;		Nothing
  5689                           ; This function is called by:
  5690                           ;		Interrupt level 2
  5691                           ; This function uses a non-reentrant model
  5692                           ; 
  5693  000000                     
  5694                           ;LC-meter.c: 60: double F1, F2, F3, CCal;
  5695                           ;LC-meter.c: 61: void main();
  5696                           ;LC-meter.c: 62: void loop();
  5697                           ;LC-meter.c: 63: void testloop();
  5698                           ;LC-meter.c: 64: void initialize();
  5699                           ;LC-meter.c: 65: unsigned short int measure_freq
      +                          ();
  5700                           ;LC-meter.c: 66: void calibrate();
  5701                           ;LC-meter.c: 67: void measure_capacitance();
  5702                           ;LC-meter.c: 68: void measure_inductance();
  5703                           ;LC-meter.c: 69: unsigned long int milliseconds(
      +                          );
  5704                           ;LC-meter.c: 70: void delay10ms(unsigned short i
      +                          nt period_10ms);
  5705                           ;LC-meter.c: 72: void put_str(const char*);
  5706                           ;LC-meter.c: 74: void put_number(void (*putchar)
      +                          (char), unsigned short int n, unsigned char base
      +                          , signed char pad );
  5707  001B3A                     _isr:
  5708                           	opt stack 31
  5709  001B3A  FFFF               	dw	65535
  5710                           ;LC-meter.c: 81: if(TMR2IF) {
  5711  001B3C  A29E               	btfss	3998,1,c	;volatile
  5712  001B3E  D034               	goto	i2l829
  5713                           ;LC-meter.c: 83: bres += 256;
  5714  001B40  2A07               	incf	7,f,c	;volatile
  5715                           ;LC-meter.c: 85: if(bres >= 5000) {
  5716  001B42  0E88               	movlw	136
  5717  001B44  5C06               	subwf	6,w,c	;volatile
  5718  001B46  0E13               	movlw	19
  5719  001B48  5807               	subwfb	7,w,c	;volatile
  5720  001B4A  E32D               	bnc	i2l830
  5721                           ;LC-meter.c: 86: bres -= 5000;
  5722  001B4C  0E88               	movlw	136
  5723  001B4E  5E06               	subwf	6,f,c	;volatile
  5724  001B50  0E13               	movlw	19
  5725  001B52  5A07               	subwfb	7,f,c	;volatile
  5726                           ;LC-meter.c: 87: msecpart++;
  5727  001B54  4A04               	infsnz	4,f,c	;volatile
  5728  001B56  2A05               	incf	5,f,c	;volatile
  5729                           ;LC-meter.c: 88: msecs++;
  5730  001B58  2A34               	incf	52,f,c	;volatile
  5731  001B5A  0E00               	movlw	0
  5732  001B5C  2235               	addwfc	53,f,c	;volatile
  5733  001B5E  2236               	addwfc	54,f,c	;volatile
  5734  001B60  2237               	addwfc	55,f,c	;volatile
  5735                           ;LC-meter.c: 90: LATC3 = (((blink > 200)) == 0);
  5736  001B62  0EC9               	movlw	201
  5737  001B64  5C38               	subwf	56,w,c
  5738  001B66  0E00               	movlw	0
  5739  001B68  5839               	subwfb	57,w,c
  5740  001B6A  E202               	bc	i2u4040
  5741  001B6C  868B               	bsf	3979,3,c	;volatile
  5742  001B6E  D001               	goto	i2u4055
  5743  001B70                     i2u4040:
  5744  001B70  968B               	bcf	3979,3,c	;volatile
  5745  001B72                     i2u4055:
  5746  001B72  FFFF               	dw	65535	; assembler added errata NOP
  5747                           ;LC-meter.c: 91: if(blink >= 400)
  5748  001B74  0E90               	movlw	144
  5749  001B76  5C38               	subwf	56,w,c
  5750  001B78  0E01               	movlw	1
  5751  001B7A  5839               	subwfb	57,w,c
  5752  001B7C  E304               	bnc	i2l831
  5753                           ;LC-meter.c: 92: blink -= 400;
  5754  001B7E  0E90               	movlw	144
  5755  001B80  5E38               	subwf	56,f,c
  5756  001B82  0E01               	movlw	1
  5757  001B84  5A39               	subwfb	57,f,c
  5758  001B86                     i2l831:
  5759                           ; BSR set to: ?
  5760                           ;LC-meter.c: 93: ++blink;
  5761  001B86  4A38               	infsnz	56,f,c
  5762  001B88  2A39               	incf	57,f,c
  5763                           ;LC-meter.c: 96: if(msecpart >= 1000) {
  5764  001B8A  0EE8               	movlw	232
  5765  001B8C  5C04               	subwf	4,w,c	;volatile
  5766  001B8E  0E03               	movlw	3
  5767  001B90  5805               	subwfb	5,w,c	;volatile
  5768  001B92  E309               	bnc	i2l830
  5769                           ;LC-meter.c: 98: seconds++;
  5770  001B94  2A3F               	incf	63,f,c	;volatile
  5771  001B96  0E00               	movlw	0
  5772  001B98  2240               	addwfc	64,f,c	;volatile
  5773  001B9A  2241               	addwfc	65,f,c	;volatile
  5774  001B9C  2242               	addwfc	66,f,c	;volatile
  5775                           ;LC-meter.c: 99: msecpart -= 1000;
  5776  001B9E  0EE8               	movlw	232
  5777  001BA0  5E04               	subwf	4,f,c	;volatile
  5778  001BA2  0E03               	movlw	3
  5779  001BA4  5A05               	subwfb	5,f,c	;volatile
  5780                           ; BSR set to: ?
  5781  001BA6                     i2l830:
  5782                           ; BSR set to: ?
  5783                           ;LC-meter.c: 100: }
  5784                           ;LC-meter.c: 101: }
  5785                           ;LC-meter.c: 103: TMR2IF = 0;
  5786  001BA6  929E               	bcf	3998,1,c	;volatile
  5787  001BA8                     i2l829:
  5788  001BA8  FFFF               	dw	65535	; assembler added errata NOP
  5789                           ; BSR set to: ?
  5790                           ;LC-meter.c: 104: }
  5791                           ;LC-meter.c: 106: if(RCIF) { rxfifo[rxiptr] = RC
      +                          REG; ser_tmp = (rxiptr + 1) & ((unsigned char)16
      +                           - 1); if(ser_tmp != rxoptr) rxiptr = ser_tmp; }
      +                          ; if(TXIF && TXIE) { TXREG = txfifo[txoptr]; ++t
      +                          xoptr; txoptr &= ((unsigned char)16 - 1); if(txo
      +                          ptr == txiptr) { TXIE = 0; }
  5792  001BAA  AA9E               	btfss	3998,5,c	;volatile
  5793  001BAC  D00E               	goto	i2l833
  5794  001BAE  503B               	movf	59,w,c	;volatile
  5795  001BB0  0F24               	addlw	36
  5796  001BB2  6EE9               	movwf	fsr0l,c
  5797  001BB4  6AEA               	clrf	fsr0h,c
  5798  001BB6  CFAE FFEF          	movff	4014,indf0	;volatile
  5799  001BBA  283B               	incf	59,w,c	;volatile
  5800  001BBC  0B0F               	andlw	15
  5801  001BBE  6E3D               	movwf	61,c
  5802  001BC0  503D               	movf	61,w,c
  5803  001BC2  183E               	xorwf	62,w,c	;volatile
  5804  001BC4  A4D8               	btfss	status,2,c
  5805  001BC6  C03D F03B          	movff	61,59	;volatile
  5806                           ; BSR set to: ?
  5807  001BCA                     i2l833:
  5808  001BCA  FFFF               	dw	65535	; assembler added errata NOP
  5809                           ; BSR set to: ?
  5810  001BCC  B89E               	btfsc	3998,4,c	;volatile
  5811  001BCE  A89D               	btfss	3997,4,c	;volatile
  5812  001BD0  D00F               	goto	i2l835
  5813  001BD2  503C               	movf	60,w,c	;volatile
  5814  001BD4  0F14               	addlw	20
  5815  001BD6  6EE9               	movwf	fsr0l,c
  5816  001BD8  6AEA               	clrf	fsr0h,c
  5817  001BDA  50EF               	movf	indf0,w,c
  5818  001BDC  6EAD               	movwf	4013,c	;volatile
  5819  001BDE  2A3C               	incf	60,f,c	;volatile
  5820  001BE0  0E0F               	movlw	15
  5821  001BE2  163C               	andwf	60,f,c	;volatile
  5822  001BE4  503A               	movf	58,w,c	;volatile
  5823  001BE6  623C               	cpfseq	60,c	;volatile
  5824  001BE8  D001               	goto	i2l836
  5825  001BEA  989D               	bcf	3997,4,c	;volatile
  5826  001BEC                     i2l836:
  5827  001BEC  FFFF               	dw	65535	; assembler added errata NOP
  5828                           ; BSR set to: ?
  5829  001BEE  989E               	bcf	3998,4,c	;volatile
  5830  001BF0                     i2l835:
  5831  001BF0  FFFF               	dw	65535	; assembler added errata NOP
  5832                           ; BSR set to: ?
  5833                           ;LC-meter.c: 111: }
  5834                           ; BSR set to: ?
  5835  001BF2  C16F  FFEA         	movff	??_isr+1,fsr0h
  5836  001BF6  C16E  FFE9         	movff	??_isr,fsr0l
  5837  001BFA  0011               	retfie		f
  5838  001BFC  FFFF               	dw	65535	; errata NOP
  5839  001BFE                     __end_of_isr:
  5840                           	opt stack 0
  5841                           
  5842                           	psect	intcode
  5843                           ; BSR set to: ?
  5844  000008                     int_func:
  5845                           	opt stack 31
  5846  000008  FFFF               	dw	65535
  5847  00000A  CFE9 F16E          	movff	fsr0l,??_isr
  5848  00000E  CFEA F16F          	movff	fsr0h,??_isr+1
  5849  000012  EF9D  F00D         	goto	_isr
  5850                           
  5851                           	psect	text46
  5852                           ; =============== function _isr ends ===========
      +                          =
  5853                           ;	FNARG	___flmul,_frexp
  5854                           ;	FNARG	___flmul,___awtofl
  5855                           ;	FNARG	___flmul,___flneg
  5856                           ;	FNARG	___flmul,___flsub
  5857                           ;	FNARG	___flmul,___fldiv
  5858                           ;	FNARG	_ldexp,_eval_poly
  5859                           ;	FNARG	_ldexp,___flpack
  5860                           ;	FNARG	_ldexp,___flunpack
  5861                           ;	FNARG	_ldexp,___fladd
  5862                           ;	FNARG	_ldexp,___flmul
  5863  000000                     	;_putchar_ptr
  5864  000000                     	;_ser_brg
  5865                           
  5866                           	psect	idata
  5867                           ;initializer for _putchar_ptr
  5868  000678  262A               	dw	_format_putchar& (0+65535)
  5869                           ;initializer for _ser_brg
  5870  00067A  1F                 	db	31
  5871                           
  5872                           	psect	smallconst
  5873  000600  00                 	db	0	;reserve
  5874  000601                     F65:
  5875                           	opt stack 0
  5876  000601  0000               	dw	0
  5877  000603  3F80               	dw	16256
  5878  000605  7218               	dw	29208
  5879  000607  3F31               	dw	16177
  5880  000609  FDF0               	dw	65008
  5881  00060B  3E75               	dw	15989
  5882  00060D  5847               	dw	22599
  5883  00060F  3D63               	dw	15715
  5884  000611  9558               	dw	38232
  5885  000613  3C1D               	dw	15389
  5886  000615  C482               	dw	50306
  5887  000617  3AAE               	dw	15022
  5888  000619  78A8               	dw	30888
  5889  00061B  3921               	dw	14625
  5890  00061D  93EF               	dw	37871
  5891  00061F  3780               	dw	14208
  5892  000621  92A0               	dw	37536
  5893  000623  35A7               	dw	13735
  5894  000625  5646               	dw	22086
  5895  000627  3415               	dw	13333
  5896  000629                     F64:
  5897                           	opt stack 0
  5898  000629  0000               	dw	0
  5899  00062B  0000               	dw	0
  5900  00062D  FFC4               	dw	65476
  5901  00062F  3F7F               	dw	16255
  5902  000631  EF80               	dw	61312
  5903  000633  BEFF               	dw	48895
  5904  000635  E190               	dw	57744
  5905  000637  3EA9               	dw	16041
  5906  000639  82EC               	dw	33516
  5907  00063B  BE76               	dw	48758
  5908  00063D  AD82               	dw	44418
  5909  00063F  3E2B               	dw	15915
  5910  000641  3C0E               	dw	15374
  5911  000643  BDC3               	dw	48579
  5912  000645  D187               	dw	53639
  5913  000647  3D13               	dw	15635
  5914  000649  7841               	dw	30785
  5915  00064B  BBD3               	dw	48083
  5916  000000                     	;_rxfifo
  5917  000000                     	;_txfifo
  5918  000000                     	;_F1
  5919  000000                     	;_F2
  5920  000000                     	;_F3
  5921  000000                     	;_msecs
  5922  000000                     	;_seconds
  5923  000000                     	;_timer1of
  5924  000000                     	;_blink
  5925  000000                     	;_rxiptr
  5926  000000                     	;_rxoptr
  5927  000000                     	;_ser_tmp
  5928  000000                     	;_txiptr
  5929  000000                     	;_txoptr
  5930  000000                     	;_CCal
  5931  000000                     
  5932  000000                     	;_bres
  5933  000000                     	;_msecpart
  5934  000000                     
  5935  000000                     
  5936  000000                     
  5937  000000                     
  5938  000000                     
  5939  000000                     
  5940  000000                     
  5941  000000                     
  5942  000000                     
  5943  000000                     
  5944  000000                     
  5945  000000                     
  5946  000000                     
  5947  000000                     
  5948  000000                     
  5949  000000                     
  5950  000000                     
  5951  000000                     
  5952  000000                     
  5953  000000                     
  5954  000000                     
  5955  000000                     
  5956  000000                     
  5957  000000                     
  5958  000000                     
  5959  000000                     
  5960  000000                     
  5961  000000                     
  5962  000000                     
  5963  000000                     
  5964  000000                     
  5965  000000                     
  5966  000000                     
  5967  000000                     
  5968  000000                     
  5969  000000                     
  5970  000000                     
  5971  000000                     
  5972  000000                     
  5973  000000                     
  5974  000000                     
  5975  000000                     
  5976  000000                     
  5977  00064D                     STR_8:
  5978                           ; BSR set to: ?
  5979  00064D  0D                 	db	13
  5980  00064E  0A                 	db	10
  5981  00064F  43                 	db	67	;'C'
  5982  000650  43                 	db	67	;'C'
  5983  000651  61                 	db	97	;'a'
  5984  000652  6C                 	db	108	;'l'
  5985  000653  3D                 	db	61	;'='
  5986  000654  00                 	db	0
  5987  000655                     STR_5:
  5988                           ; BSR set to: ?
  5989  000655  0D                 	db	13
  5990  000656  0A                 	db	10
  5991  000657  46                 	db	70	;'F'
  5992  000658  31                 	db	49	;'1'
  5993  000659  3D                 	db	61	;'='
  5994  00065A  00                 	db	0
  5995  00065B                     STR_7:
  5996                           ; BSR set to: ?
  5997  00065B  0D                 	db	13
  5998  00065C  0A                 	db	10
  5999  00065D  46                 	db	70	;'F'
  6000  00065E  33                 	db	51	;'3'
  6001  00065F  3D                 	db	61	;'='
  6002  000660  00                 	db	0
  6003  000661                     STR_6:
  6004                           ; BSR set to: ?
  6005  000661  0D                 	db	13
  6006  000662  0A                 	db	10
  6007  000663  46                 	db	70	;'F'
  6008  000664  32                 	db	50	;'2'
  6009  000665  3D                 	db	61	;'='
  6010  000666  00                 	db	0
  6011  000667                     STR_1:
  6012                           ; BSR set to: ?
  6013  000667  2E                 	db	46
  6014  000668  2E                 	db	46
  6015  000669  2E                 	db	46
  6016  00066A  0D                 	db	13
  6017  00066B  0A                 	db	10
  6018  00066C  00                 	db	0
  6019  00066D                     STR_10:
  6020                           ; BSR set to: ?
  6021  00066D  43                 	db	67	;'C'
  6022  00066E  69                 	db	105	;'i'
  6023  00066F  6E                 	db	110	;'n'
  6024  000670  3D                 	db	61	;'='
  6025  000671  00                 	db	0
  6026  000672                     STR_4:
  6027                           ; BSR set to: ?
  6028  000672  76                 	db	118	;'v'
  6029  000673  61                 	db	97	;'a'
  6030  000674  72                 	db	114	;'r'
  6031  000675  3D                 	db	61	;'='
  6032  000676  00                 	db	0
  6033  000000                     
  6034  000000                     
  6035  000000                     
  6036  000000                     
  6037  000677  00                 	db	0	; dummy byte at the end
  6038                           
  6039                           	psect	param1
  6040  000000                     
  6041  000000                     
  6042  000000                     
  6043  000000                     
  6044  000000                     
  6045  000000                     
  6046                           tosu	equ	0xFFF
  6047                           tosh	equ	0xFFE
  6048                           tosl	equ	0xFFD
  6049                           pclath	equ	0xFFA
  6050                           tblptru	equ	0xFF8
  6051                           tblptrh	equ	0xFF7
  6052                           tblptrl	equ	0xFF6
  6053                           tablat	equ	0xFF5
  6054                           prodh	equ	0xFF4
  6055                           prodl	equ	0xFF3
  6056                           intcon	equ	0xFF2
  6057                           intcon2	equ	0xFF1
  6058                           indf0	equ	0xFEF
  6059                           postinc0	equ	0xFEE
  6060                           postdec0	equ	0xFED
  6061                           fsr0h	equ	0xFEA
  6062                           fsr0l	equ	0xFE9
  6063                           wreg	equ	0xFE8
  6064                           fsr1l	equ	0xFE1
  6065                           fsr2l	equ	0xFD9
  6066                           status	equ	0xFD8


HI-TECH Software PICC-18 Macro Assembler V9.66 build 8870 
Symbol Table                                           Sat Aug 31 17:55:49 2019

                                                             ___asfldiv@f1p 011E  
                                                              ___fldiv@exp1 0142  
                                                              ___fldiv@exp2 0141  
                                                              ___asflmul@mp 0139  
                                                                        F64 0629  
                                                                        F65 0601  
                                                              ___asflsub@f2 013B  
                                                                        _F1 000008  
                                                                        _F2 000010  
                                                                        _F3 00000C  
                                                       ___wmul@multiplicand 0108  
                                                             ___asflsub@f1p 0139  
                                                              ___flpack@arg 0163  
                                                              ___flpack@exp 0165  
                                                               _putchar_ptr 000047  
                                                                       l326 25A6  
                                                                       l329 2574  
                                                                       l660 1664  
                                                                       l901 1DA8  
                                                                       l661 16A2  
                                                                       l670 1004  
                                                                       l903 1DD2  
                                                                       l656 15C2  
                                                                       l657 164A  
                                                                       l673 1168  
                                                                       l841 194C  
                                                                       l658 162C  
                                                                       l850 1F0E  
                                                                       l842 1952  
                                                                       l851 1EF4  
                                                                       l846 1EBE  
                                                                       l854 0BBA  
                                                                       l862 06DC  
                                                                       l838 193A  
                                                                       l855 0DA6  
                                                                       l863 0A08  
                                                                       l880 16E6  
                                                                       l872 223C  
                                                                       l856 0D8A  
                                                                       l864 09EC  
                                                                       l881 16DA  
                                                                       l857 0D6C  
                                                                       l865 09CE  
                                                                       l882 16F4  
                                                                       l955 1FC4  
                                                                       l883 1784  
                                                                       l891 149A  
                                                                       l956 1F4C  
                                                                       l884 1446  
                                                                       l892 1524  
                                                                       l868 0A0E  
                                                                       l957 1F66  
                                                                       l893 14FA  
                                                                       l958 1FB4  
                                                                       l990 204E  
                                                                       l886 1304  
                                                                       l894 15AA  
                                                                       l991 1FDC  
                                                                       l879 1794  
                                                                       l992 2002  
                                                                       l888 15AA  
                                                                       l897 20CC  
                                                                       l993 203C  
                                                                       l889 147E  
                                                                       l898 207C  
                                                                       _GIE 007F97  
                                                                       l899 1DFE  
                                                                       _RX9 007D5E  
                                                                       _TX9 007D66  
                                                                       _exp 0DF4  
                                                                       _log 12E4  
                                                                       _isr 1B3A  
                                                                       _pow 144C  
                                                                       tosl 000FFD  
                                                                       wreg 000FE8  
                                                              ___flmul@exp1 015D  
                                                              ___flmul@cntr 015E  
                                                              ___fltol@exp1 0147  
                                                                      l1010 17D6  
                                                                      l1004 2176  
                                                                      l1012 1814  
                                                                      l1100 1E8A  
                                                                      l1005 2182  
                                                                      l1013 17FC  
                                                                      l1021 11A4  
                                                                      l1030 1204  
                                                                      l1022 12C4  
                                                                      l1015 1838  
                                                                      l1007 1886  
                                                                      l1023 121C  
                                                                      l1016 182A  
                                                                      l1040 1254  
                                                                      l1032 126A  
                                                                      l1009 17E4  
                                                                      l1018 1844  
                                                                      l1042 1282  
                                                                      l1043 1298  
                                                                      l1019 12DE  
                                                                      l1028 11EA  
                                                                      l1060 1AAA  
                                                                      l1052 1C52  
                                                                      l1204 22FC  
                                                                      l1045 12DE  
                                                                      l1029 1212  
                                                                      l1061 1AC0  
                                                                      l1053 1C82  
                                                                      l1205 22C8  
                                                                      l1038 123A  
                                                                      l1054 1CA6  
                                                                      l1302 19AE  
                                                                      l1310 0FCC  
                                                                      l1039 1262  
                                                                      l1311 0F9C  
                                                                      l1064 1ADE  
                                                                      l1048 1C24  
                                                                      l1224 227E  
                                                                      l1065 1AF4  
                                                                      l1057 1A9E  
                                                                      l1049 1C42  
                                                                      l1225 229C  
                                                                      l1233 251A  
                                                                      l1305 0FCC  
                                                                      l1090 1E4E  
                                                                      l1066 1B24  
                                                                      l1218 22A6  
                                                                      l1234 252E  
                                                                      l1306 0E10  
                                                                      l1242 2542  
                                                                      l1219 226E  
                                                                      l1227 2538  
                                                                      l1307 0E44  
                                                                      l1243 254E  
                                                                      l1235 24BA  
                                                                      l1252 231C  
                                                                      l1228 250A  
                                                                      l1236 248E  
                                                                      l1253 2334  
                                                                      l1309 0EA4  
                                                                      l1094 1E3C  
                                                                      l1247 2606  
                                                                      l1095 1E74  
                                                                      l1097 1E6E  
                                                                      l1089 1E9A  
                                                                      l1098 1E60  
                                                              ___fltol@lval 0148  
                                                                      ?_exp 012F  
                                                                      ?_log 012F  
                                                                      ?_isr 016E  
                                                                      ?_pow 0122  
                                                                      STR_1 0667  
                                                                      STR_3 066A  
                                                                      STR_4 0672  
                                                                      STR_5 0655  
                                                                      STR_6 0661  
                                                                      STR_7 065B  
                                                                      STR_8 064D  
                                                                      STR_9 066A  
                                                                      _BRGH 007D62  
                                                                      _CREN 007D5C  
                                                                      _T0CS 007EAD  
                                                                      _T0SE 007EAC  
                                                                      u3100 259C  
                                                                      u3200 14EE  
                                                                      u3008 20D8  
                                                                      u3009 20F0  
                                                                      _CCal 000000  
                                                                      u3130 1EEA  
                                                                      u3018 20F6  
                                                                      u3019 210E  
                                                                      u1380 21F6  
                                                                      u3205 14EC  
                                                                      u1365 21C8  
                                                                      u1366 21CE  
                                                                      u1375 21E2  
                                                                      u1376 21E8  
                                                                      u3330 0E74  
                                                                      u3090 1172  
                                                                      u1395 21FA  
                                                                      u3068 1128  
                                                                      u3069 1144  
                                                                      u3510 1D9E  
                                                                      u3360 0F92  
                                                                      u3336 0E78  
                                                                      u3088 1150  
                                                                      u3450 12F8  
                                                                      u3258 1630  
                                                                      u3288 1668  
                                                                      u3289 1696  
                                                                      _PEIE 007F96  
                                                                      u4187 1EAC  
                                                                      u4197 1EC8  
                                                                      u3590 1A4A  
                                                                      u3760 1E56  
                                                                      _RCIF 007CF5  
                                                                      _OERR 007D59  
                                                                      _RBPU 007F8F  
                                                                      _TMR0 000FD6  
                                                                      _TMR2 000FCC  
                                                                      _SPEN 007D5F  
                                                                      _TXIE 007CEC  
                                                                      _TXIF 007CF4  
                                                                      _TXEN 007D65  
                                                                      _SYNC 007D64  
                                                                      _bres 000006  
                                                                      _main 188C  
                                                                      fsr0h 000FEA  
                                                                      indf0 000FEF  
                                                                      fsr0l 000FE9  
                                                                      fsr1l 000FE1  
                                                                      fsr2l 000FD9  
                                                                      exp@x 012F  
                                                                      log@x 012F  
                                                                      pow@x 0122  
                                                                      pow@y 0126  
                                                                      prodh 000FF4  
                                                                      prodl 000FF3  
                                                __end_of_measure_inductance 0A58  
                                                                      start 0016  
                                                                     ??_exp 0133  
                                                                     ??_log 0133  
                                                                     ??_isr 016E  
                                                                     ??_pow 012A  
                                                            ___flpack@l_arg 0166  
                                                           __end_of___fladd 12E4  
                                                                     ?_main 0100  
                                                           __end_of___fldiv 1CBC  
                                                           __end_of___flneg 260A  
                                                                     STR_10 066D  
                                                                     STR_11 066A  
                                                           __end_of___flmul 1B3A  
                                                           __end_of___flsub 24FE  
                                                           __end_of___fltol 1EA0  
                                                                     _LATC3 007C5B  
                                                                     _LATC4 007C5C  
                                                                     _LATC5 007C5D  
                                                                     _LATC7 007C5F  
                                                           __end_of___lwdiv 22B2  
                                                           __end_of___lwmod 253C  
                                                                     i2l830 1BA6  
                                                                     i2l831 1B86  
                                                                     i2l833 1BCA  
                                                                     i2l835 1BF0  
                                                                     i2l836 1BEC  
                                                                     i2l829 1BA8  
                                                                     _RCREG 000FAE  
                                                                     _SPBRG 000FAF  
                                                                     _TRISA 000F92  
                                                                     _TRISC 000F94  
                                                                     _SSPEN 007E35  
                                                                     _TXREG 000FAD  
                                                                     _log10 2350  
                                                                     _blink 000038  
                                                                     _floor 16A6  
                                                                     _ldexp 1D64  
                                                                     _frexp 2054  
                                                              _output_putch 260A  
                                                                     _msecs 000034  
                                                                     pclath 000FFA  
                                                                     tablat 000FF5  
                                                                     pow@yi 012B  
                                                                     status 000FD8  
                                                           ??_print_reading 0120  
                                                        _format_number$1302 0116  
                                                               ldexp@newexp 013D  
                                                              __end_of_main 197A  
                                                          format_double@num 010E  
                                                             ?_measure_freq 011E  
                                                                    ??_main 0100  
                                                       format_double@weight 011E  
                                                             __activetblptr 000002  
                                                                    ?_log10 0122  
                                                                    ?_floor 0139  
                                                                    ?_ldexp 0139  
                                                                    ?_frexp 0145  
                                                          __end_of___altofl 1FCA  
                                                          __end_of___flpack 188C  
                                                          __end_of___awtofl 2054  
                                                          __end_of___lltofl 2302  
                                                          __end_of___lwtofl 24C0  
                                                                    i2u4040 1B70  
                                                                    i2u4055 1B72  
                                                                    _TMR0IF 007F92  
                                                                    _TMR2IE 007CE9  
                                                                    _TMR2IF 007CF1  
                                                                    _TMR2ON 007E52  
                                                                    _TRISC0 007CA0  
                                                                    _TRISC1 007CA1  
                                                                    _TRISC2 007CA2  
                                                                    _TRISC3 007CA3  
                                                                    _TRISC4 007CA4  
                                                                    _TRISC5 007CA5  
                                                                    _TRISC6 007CA6  
                                                                    __Ldata 000047  
                                                                    ___flge 2302  
                                                                 ??___fladd 015D  
                                                                    ___wmul 253C  
                                                                 ??___fldiv 0141  
                                                            ___flunpack@arg 0163  
                                                                 ??___flneg 0151  
                                                                 ??___flmul 015D  
                                                            ___flunpack@exp 0165  
                                                                 ??___flsub 0147  
                                                                 ??___fltol 0147  
                                                            ??_measure_freq 0120  
                                                                 ??___lwdiv 013F  
                                                              ?_timer2_init 0100  
                                                                 ??___lwmod 013F  
                                                                    log10@x 0122  
                                                                    _rxfifo 000024  
                                                                    _txfifo 000014  
                                                                    _rxiptr 00003B  
                                                                    _rxoptr 00003E  
                                                                    floor@i 013F  
                                                                    _txiptr 00003A  
                                                                    floor@x 0139  
                                                                    exp@exp 0137  
                                                                    log@exp 0143  
                                                                    _txoptr 00003C  
                                                            _eval_poly$1328 014C  
                                                          __end_of_ser_init 25F2  
                                                          __end_of_ser_puts 25A0  
                                                              __mediumconst 0678  
                                                                    tblptrh 000FF7  
                                                                    tblptrl 000FF6  
                                                                    tblptru 000FF8  
                                                          format_number@buf 011A  
                                                          format_number@pad 0115  
                                                   _measure_inductance$1260 0104  
                                                   _measure_inductance$1261 0108  
                                                   _measure_inductance$1262 010C  
                                                   _measure_inductance$1259 0100  
                                                                ___fladd@f1 0155  
                                                                ___fladd@f2 0159  
                                                                ___flge@ff1 0143  
                                                                ___flge@ff2 0147  
                                                             _format_double 0FD2  
                                                                ___altofl@c 0143  
                                                                ___fldiv@f1 0139  
                                                                ___fldiv@f2 013D  
                                                                ___fldiv@f3 0143  
                                                                __accesstop 0080  
                                                                ___flneg@f1 014D  
                                                             _format_number 15B0  
                                                             _format_xint32 20D2  
                                                                ___flmul@f1 0155  
                                                                ___flmul@f2 0159  
                                                                ___flmul@f3 015F  
                                                              eval_poly@res 0150  
                                                                ___flsub@f1 013F  
                                                                ___flsub@f2 0143  
                                                                ___fltol@f1 0143  
                                                                ___awtofl@c 0145  
                                                    measure_capacitance@Cin 010A  
                                                                ___flunpack 213A  
                                                    measure_capacitance@var 0108  
                                                    ___asflmul@multiplicand 013B  
                                                                ___lltofl@c 012F  
                                                             __end_of_log10 239E  
                                                             __end_of_floor 179A  
                                                             __end_of_ldexp 1E04  
                                                             __end_of_frexp 20D2  
                                                                ___lwtofl@c 011E  
                                                                   ??_log10 0126  
                                                                   ??_floor 013D  
                                                                   ??_ldexp 013F  
                                                                   ??_frexp 014B  
                                                            ?_format_double 010E  
                                                            ?_format_number 0112  
                                                            ?_format_xint32 010E  
                                                                   ?___flge 0143  
                                                                   ?___wmul 0106  
                                                                 l500000718 15F6  
                                                         __end_of___asfldiv 247C  
                                                                 ?___altofl 0143  
                                                         __end_of___asflmul 23E8  
                                                         __end_of___asflsub 2432  
                                                                 ?___flpack 0163  
                                                                 l600000744 17C2  
                                                                 ?___awtofl 0145  
                                                                 ?___lltofl 012F  
                                                        _measure_inductance 067C  
                                                                   _T2CKPS0 007E50  
                                                                   _T2CKPS1 007E51  
                                                                 ?___lwtofl 011E  
                                                       ?_measure_inductance 0100  
                                                         __end_of_calibrate 1D64  
                                                                   _TOUTPS0 007E53  
                                                                   _TOUTPS1 007E54  
                                                                   _TOUTPS2 007E55  
                                                         __end_of_delay10ms 225E  
                                                      __end_of_measure_freq 1F36  
                                                                   __Hdata0 00004A  
                                                                   __Ldata0 000047  
                                                               ?___flunpack 0163  
                                                                   __Hparam 0170  
                                                                   __Lparam 0100  
                                                                 ?_ser_init 0100  
                                                      ??_measure_inductance 0100  
                                                                 ?_ser_puts 010E  
                                                                   ___fladd 1176  
                                                                   ___fldiv 1BFE  
                                                                   ___flneg 25F2  
                                                                   ___flmul 1A5E  
                                                                   ___flsub 24C0  
                                                                   ___fltol 1E04  
                                                                   ___lwdiv 225E  
                                                                   ___lwmod 24FE  
                                                                ??___altofl 0147  
                                                                ??___flpack 0166  
                                                                ??___awtofl 0149  
                                                         __end_of_eval_poly 1A5E  
                                                                   __ramtop 0600  
                                                         __end_of_indicator 261E  
                                                                ??___lltofl 0133  
                                                                ??___lwtofl 0122  
                                                                   _seconds 00003F  
                                                                   _ser_brg 000049  
                                                                   _ser_tmp 00003D  
                                                           ??_format_double 0112  
                                                           ??_format_number 0116  
                                                           ??_format_xint32 0112  
                                                             __Lmediumconst 0678  
                                                                   int_func 0008  
                                                         __end_of_ser_putch 25CA  
                                                                   pow@sign 012A  
                                             measure_inductance@denominator 0112  
                                                     __end_of_print_reading 262A  
                                                                ??_ser_init 0100  
                                                                ??_ser_puts 010E  
                                                         format_number@base 0114  
                                                                   postdec0 000FED  
                                                                   postinc0 000FEE  
                                                                _print_unit 261E  
                                                       _measure_capacitance 0A58  
                                                               ___altofl@f1 0147  
                                                            _format_putchar 262A  
                                                               ___awtofl@f1 0149  
                                                      ?_measure_capacitance 0100  
                                                            format_double@m 011C  
                                                            __end_of___flge 2350  
                                                            __end_of___wmul 256E  
                                                               ___lltofl@f1 0133  
                                                                floor@expon 013D  
                                                            format_number@i 0119  
                                                            format_number@n 0112  
                                                            format_xint32@x 010E  
                                                                eval_poly@d 0149  
                                                                eval_poly@n 014A  
                                                                eval_poly@x 0145  
                                                                ldexp@value 0139  
                                                               __end_of_exp 0FD2  
                                                               __end_of_log 144C  
                                                               __end_of_isr 1BFE  
                                                               __end_of_pow 15B0  
                                                               ___lwtofl@f1 0122  
                                                                 __Habsbss0 000047  
                                                    __end_of_format_putchar 2630  
                                                        format_double@digit 011A  
                                                                 __Labsbss0 000000  
                                                                frexp@value 0145  
                                                     ??_measure_capacitance 0100  
                                                                  ??___flge 014B  
                                                                  ??___wmul 010A  
                                                              _measure_freq 1EA0  
                                                  print_reading@measurement 011E  
                                                                 ___asfldiv 2432  
                                                               ?_print_unit 011E  
                                                                 ___asflmul 239E  
                                                                 ___asflsub 23E8  
                                                             ?_output_putch 013B  
                                                           ?_format_putchar 013B  
                                                                 _calibrate 1CBC  
                                                                 _delay10ms 2200  
                                                              ??___flunpack 0167  
                                                          ___lwdiv@dividend 013B  
                                                                  ?___fladd 0155  
                                                                  ?___fldiv 0139  
                                                                  ?___flneg 014D  
                                                                  ?___flmul 0155  
                                                                  ?___flsub 013F  
                                                                  ?___fltol 0143  
                                                                  ?___lwdiv 013B  
                                                                  ?___lwmod 013B  
                                                               __smallconst 0600  
                                                                ?___asfldiv 011E  
                                                                ?___asflmul 0139  
                                                                ?___asflsub 0139  
                                                                 _eval_poly 197A  
                                                                 _indicator 2618  
                                                            ??_output_putch 013B  
                                                        __end_of___flunpack 21A2  
                                                                ?_calibrate 0100  
                                                                ?_delay10ms 0100  
                                                                 _ser_putch 25A0  
                                                             ??_timer2_init 0100  
                                                         ___wmul@multiplier 0106  
                                                                ?_eval_poly 0145  
                                                                ?_indicator 0100  
                                                     measure_inductance@Lin 011A  
                                                     measure_inductance@var 0110  
                                                     __end_of_format_double 1176  
                                                      format_number@padchar 0118  
                                                     __end_of_format_number 16A6  
                                                     __end_of_format_xint32 213A  
                                                                 frexp@eptr 0149  
                                                                  __Hparam1 0170  
                                                                  __Lparam1 0100  
                                                                ?_ser_putch 013B  
                                                              __Lsmallconst 0600  
                                                               delay10ms@ms 0102  
                                                                  ___altofl 1F36  
                                                                  ___flpack 179A  
                                                                  ___awtofl 1FCA  
                                                                  ___lltofl 22B2  
                                                                  ___lwtofl 247C  
                                                                  __config1 00FEFF  
                                                                  __config2 00FEFA  
                                                                  __config3 00FFFF  
                                                                  __config4 00FFFB  
                                                                  __config5 00FFFF  
                                                               ??___asfldiv 0124  
                                                                  _exp$1311 0133  
                                                               ??___asflmul 013F  
                                                               ??___asflsub 013F  
                                                                  _log$1320 013B  
                                                                  _log$1321 013F  
                                                                  _log$1315 0133  
                                                                  _log$1316 0137  
                                                       __end_of_timer2_init 2200  
                                                          ___flunpack@l_arg 0167  
                                                           ___lwdiv@divisor 013D  
                                                               ??_calibrate 0100  
                                                               ??_delay10ms 0102  
                                                                  _msecpart 000004  
                                                                  _ser_init 25CA  
                                                                  _ser_puts 256E  
                                                                  _timer1of 000043  
                                                      __end_of_output_putch 2618  
                                               measure_inductance@numerator 0116  
                                                          ??_format_putchar 013B  
                                                              ??_print_unit 011E  
                                                               ??_eval_poly 014C  
                                                               ??_indicator 0100  
                                                                  intlevel2 2630  
                                               __end_of_measure_capacitance 0DF4  
                                                          ___lwmod@dividend 013B  
                                                               ??_ser_putch 013B  
                                                        __end_of_print_unit 2624  
                                                             _print_reading 2624  
                                                      delay10ms@period_10ms 0100  
                                                               _timer2_init 21A2  
                                                        _format_double$1287 0112  
                                                        _format_double$1288 0116  
                                                  _measure_capacitance$1240 0104  
                                                  _measure_capacitance$1239 0100  
                                                           ___lwmod@divisor 013D  
                                                              ___fladd@exp1 015E  
                                                              ___fladd@exp2 015D  
                                                            ?_print_reading 011E  
                                                              ___asfldiv@f2 0120  
