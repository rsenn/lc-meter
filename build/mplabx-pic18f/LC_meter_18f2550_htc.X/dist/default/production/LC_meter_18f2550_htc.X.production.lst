

HI-TECH Software PRO Macro Assembler (PIC18) V9.66 build 8870 
                                                       Wed Nov 27 17:23:44 2019

HI-TECH Software Omniscient Code Generator build 8870
     1                           	processor	18F2550
     2                           	fnconf	param1,??,?,0
     3                           	opt	pw 80
     4                           	opt	pm
     5                           	psect	text0,global,reloc=2,class=CODE,delta=1
     6                           	psect	text1,global,reloc=2,class=CODE,delta=1
     7                           	psect	text2,global,reloc=2,class=CODE,delta=1
     8                           	psect	text3,global,reloc=2,class=CODE,delta=1
     9                           	psect	text4,global,reloc=2,class=CODE,delta=1
    10                           	psect	text5,global,reloc=2,class=CODE,delta=1
    11                           	psect	text6,global,reloc=2,class=CODE,delta=1
    12                           	psect	text7,global,reloc=2,class=CODE,delta=1
    13                           	psect	text8,global,reloc=2,class=CODE,delta=1
    14                           	psect	text9,global,reloc=2,class=CODE,delta=1
    15                           	psect	text10,global,reloc=2,class=CODE,delta=1
    16                           	psect	text11,global,reloc=2,class=CODE,delta=1
    17                           	psect	text12,global,reloc=2,class=CODE,delta=1
    18                           	psect	text13,global,reloc=2,class=CODE,delta=1
    19                           	psect	text14,global,reloc=2,class=CODE,delta=1
    20                           	psect	text15,global,reloc=2,class=CODE,delta=1
    21                           	psect	text16,global,reloc=2,class=CODE,delta=1
    22                           	psect	text17,global,reloc=2,class=CODE,delta=1
    23                           	psect	text18,global,reloc=2,class=CODE,delta=1
    24                           	psect	text19,global,reloc=2,class=CODE,delta=1
    25                           	psect	text20,global,reloc=2,class=CODE,delta=1
    26                           	psect	text21,global,reloc=2,class=CODE,delta=1
    27                           	psect	text22,global,reloc=2,class=CODE,delta=1
    28                           	psect	text23,global,reloc=2,class=CODE,delta=1
    29                           	psect	text24,global,reloc=2,class=CODE,delta=1
    30                           	psect	text25,global,reloc=2,class=CODE,delta=1
    31                           	psect	text26,global,reloc=2,class=CODE,delta=1
    32                           	psect	text27,global,reloc=2,class=CODE,delta=1
    33                           	psect	text28,global,reloc=2,class=CODE,delta=1
    34                           	psect	text29,global,reloc=2,class=CODE,delta=1
    35                           	psect	text30,global,reloc=2,class=CODE,delta=1
    36                           	psect	text31,global,reloc=2,class=CODE,delta=1
    37                           	psect	text32,global,reloc=2,class=CODE,delta=1
    38                           	psect	text33,global,reloc=2,class=CODE,delta=1
    39                           	psect	text34,global,reloc=2,class=CODE,delta=1
    40                           	psect	text35,global,reloc=2,class=CODE,delta=1
    41                           	psect	text36,global,reloc=2,class=CODE,delta=1
    42                           	psect	text37,global,reloc=2,class=CODE,delta=1
    43                           	psect	text38,global,reloc=2,class=CODE,delta=1
    44                           	psect	text39,global,reloc=2,class=CODE,delta=1
    45                           	psect	text40,global,reloc=2,class=CODE,delta=1
    46                           	psect	text41,global,reloc=2,class=CODE,delta=1
    47                           	psect	text42,global,reloc=2,class=CODE,delta=1
    48                           	psect	text43,global,reloc=2,class=CODE,delta=1
    49                           	psect	text44,global,reloc=2,class=CODE,delta=1
    50                           	psect	text45,global,reloc=2,class=CODE,delta=1
    51                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    52                           	psect	text46,global,reloc=2,class=CODE,delta=1
    53                           	psect	idata,global,class=CODE,delta=1
    54                           	psect	smallconst,global,reloc=2,class=SMALLCONS
      +                          T,delta=1
    55                           	psect	intsave_regs,global,class=BIGRAM,space=1,
      +                          delta=1
    56                           	psect	param1,global,class=BANK1,space=1,delta=1
    57                           	dabs	1,0x58,1
    58                           	dabs	1,0x8,17
    59                           	dabs	1,0x35,16
    60                           	dabs	1,0x25,16
    61                           	dabs	1,0x19,4
    62                           	dabs	1,0x21,4
    63                           	dabs	1,0x1D,4
    64                           	dabs	1,0x4C,4
    65                           	dabs	1,0x50,4
    66                           	dabs	1,0x54,4
    67                           	dabs	1,0x45,2
    68                           	dabs	1,0x48,1
    69                           	dabs	1,0x4A,1
    70                           	dabs	1,0x4B,1
    71                           	dabs	1,0x47,1
    72                           	dabs	1,0x49,1
    73                           	dabs	1,0x400,256
    74                           	dabs	1,0x0,4
    75                           	dabs	1,0x6,2
    76                           	dabs	1,0x4,2
    77  000000                     
    78  000000                     
    79  000000                     
    80  000000                     
    81  000000                     
    82  000000                     
    83  000000                     
    84  000000                     
    85  000000                     
    86  000000                     
    87  000000                     
    88  000000                     
    89  000000                     
    90  000000                     
    91  000000                     
    92  000000                     
    93  000000                     
    94  000000                     
    95  000000                     
    96  000000                     
    97  000000                     
    98  000000                     
    99  000000                     
   100  000000                     
   101  000000                     
   102  000000                     
   103  000000                     
   104  000000                     
   105  000000                     
   106  000000                     
   107  000000                     
   108  000000                     
   109  000000                     
   110  000000                     
   111  000000                     
   112  000000                     
   113  000000                     
   114  000000                     
   115  000000                     
   116  000000                     
   117  000000                     
   118  000000                     
   119  000000                     
   120  000000                     
   121  000000                     
   122  000000                     
   123  000000                     
   124  000000                     
   125  000000                     
   126  000000                     
   127  000000                     
   128  000000                     
   129  000000                     
   130  000000                     
   131  000000                     
   132  000000                     
   133  000000                     
   134  000000                     
   135  000000                     
   136  000000                     
   137  000000                     
   138  000000                     
   139  000000                     
   140  000000                     
   141  000000                     
   142  000000                     
   143  000000                     
   144  000000                     
   145  000000                     
   146  000000                     
   147  000000                     
   148  000000                     
   149  000000                     
   150  000000                     
   151  000000                     
   152  000000                     
   153  000000                     
   154  000000                     
   155  000000                     
   156  000000                     
   157  000000                     
   158  000000                     
   159  000000                     
   160  000000                     
   161  000000                     
   162  000000                     
   163  000000                     
   164  000000                     
   165  000000                     
   166  000000                     
   167  000000                     
   168  000000                     
   169  000000                     
   170  000000                     
   171  000000                     
   172  000000                     	;#
   173  000000                     	;#
   174  000000                     	;#
   175  000000                     	;#
   176  000000                     
   177  000000                     
   178  000000                     
   179  000000                     
   180  000000                     
   181  000000                     
   182  000000                     
   183  000000                     
   184  000000                     
   185  000000                     
   186  000000                     
   187  000000                     
   188  000000                     
   189  000000                     
   190  000000                     
   191  000000                     
   192  000000                     
   193  000000                     
   194  000000                     
   195  000000                     
   196  000000                     
   197  000000                     
   198  000000                     
   199  000000                     
   200  000000                     
   201  000000                     
   202  000000                     
   203  000000                     
   204  000000                     
   205  000000                     
   206  000000                     
   207  000000                     
   208  000000                     
   209  000000                     
   210  000000                     
   211  000000                     
   212  000000                     
   213  000000                     
   214  000000                     
   215  000000                     
   216  000000                     
   217  000000                     
   218  000000                     
   219  000000                     
   220  000000                     
   221  000000                     
   222  000000                     
   223  000000                     
   224  000000                     
   225  000000                     
   226  000000                     
   227  000000                     
   228  000000                     
   229  000000                     
   230  000000                     
   231  000000                     
   232  000000                     
   233  000000                     
   234  000000                     
   235  000000                     
   236  000000                     
   237  000000                     
   238  000000                     
   239  000000                     
   240  000000                     
   241  000000                     
   242  000000                     
   243  000000                     
   244  000000                     
   245  000000                     
   246  000000                     
   247  000000                     
   248  000000                     
   249  000000                     
   250  000000                     
   251  000000                     
   252  000000                     
   253  000000                     
   254  000000                     
   255  000000                     
   256  000000                     
   257  000000                     
   258  000000                     
   259  000000                     
   260  000000                     
   261  000000                     
   262  000000                     
   263  000000                     
   264  000000                     
   265  000000                     
   266  000000                     
   267  000000                     
   268  000000                     
   269  000000                     
   270  000000                     
   271  000000                     
   272  000000                     
   273  000000                     
   274  000000                     
   275  000000                     
   276  000000                     
   277  000000                     
   278  000000                     
   279  000000                     
   280  000000                     
   281  000000                     
   282  000000                     
   283                           
   284                           	psect	text0
   285                           ;Data sizes: Strings 42, constant 76, data 1, bs
      +                          s 0, persistent 0 stack 113
   286                           ; *************** function _main ***************
      +                          **
   287                           ; Defined at:
   288                           ;		line 115 in file "../../../LC-meter.c"
   289                           ; Parameters:
   290                           ;		None
   291                           ; Auto variables:
   292                           ;		None
   293                           ; Return value:
   294                           ;		type: void 
   295                           ;		size: 0
   296                           ; Registers used:
   297                           ;		wreg, fsr0l, fsr0h, fsr1l, fsr2l, status,2, s
      +                          tatus,0, tblptrl, tblptrh, tblptru, tablat, prod
      +                          l, prodh, cstack
   298                           ; Tracked objects:
   299                           ;		On entry : 0/0
   300                           ;		On exit  : 0/0
   301                           ;		Unchanged: 0/0
   302                           ; Data sizes:
   303                           ;		Autos:    0
   304                           ;		Params:   0
   305                           ;		Temp:     0
   306                           ;		Total:    0
   307                           ; This function calls:
   308                           ;		_timer0_init
   309                           ;		_timer2_init
   310                           ;		_delay10ms
   311                           ;		_ser_init
   312                           ;		_calibrate
   313                           ;		_ser_puts
   314                           ;		_measure_capacitance
   315                           ;		_measure_inductance
   316                           ;		_indicator
   317                           ; This function is called by:
   318                           ;		Startup code after reset
   319                           ; This function uses a non-reentrant model
   320                           ; 
   321  000000                     
   322                           ;LC-meter.c: 114: void
   323                           ;LC-meter.c: 115: main() {
   324  001CEA                     _main:
   325                           	opt stack 30
   326                           ; BSR set to: ?
   327  001CEA  6A50               	clrf	80,c	;volatile
   328  001CEC  6A51               	clrf	81,c	;volatile
   329  001CEE  6A52               	clrf	82,c	;volatile
   330  001CF0  6A53               	clrf	83,c	;volatile
   331  001CF2  C050 F04C          	movff	80,76	;volatile
   332  001CF6  C051 F04D          	movff	81,77	;volatile
   333  001CFA  C052 F04E          	movff	82,78	;volatile
   334  001CFE  C053 F04F          	movff	83,79	;volatile
   335  001D02  C04C F004          	movff	76,4	;volatile
   336  001D06  C04D F005          	movff	77,5	;volatile
   337  001D0A  C004 F006          	movff	4,6	;volatile
   338  001D0E  C005 F007          	movff	5,7	;volatile
   339                           ;LC-meter.c: 118: CCal = 1000;
   340  001D12  6A00               	clrf	0,c
   341  001D14  6A01               	clrf	1,c
   342  001D16  0E7A               	movlw	122
   343  001D18  6E02               	movwf	2,c
   344  001D1A  0E44               	movlw	68
   345  001D1C  6E03               	movwf	3,c
   346                           ;LC-meter.c: 127: TRISA = 0b11001111;
   347  001D1E  0ECF               	movlw	207
   348  001D20  6E92               	movwf	3986,c	;volatile
   349                           ;LC-meter.c: 130: timer0_init(0b100 | 0x40);
   350  001D22  0E44               	movlw	68
   351  001D24  ECF7  F010         	call	_timer0_init
   352                           ;LC-meter.c: 143: RBPU = 1;
   353  001D28  8EF1               	bsf	intcon2,7,c	;volatile
   354                           ;LC-meter.c: 152: TRISC &= ~0b00000010;
   355  001D2A  9294               	bcf	3988,1,c	;volatile
   356                           ;LC-meter.c: 153: LATC &= ~0b00000010; LATC |= (
      +                          !!(1)) << 1;;
   357  001D2C  928B               	bcf	3979,1,c	;volatile
   358  001D2E  828B               	bsf	3979,1,c	;volatile
   359                           ;LC-meter.c: 165: timer2_init(0b000 | 0x80);
   360  001D30  0E80               	movlw	128
   361  001D32  ECDF  F012         	call	_timer2_init
   362                           ;LC-meter.c: 170: TRISC &= 0b10110101;
   363  001D36  0EB5               	movlw	181
   364  001D38  1694               	andwf	3988,f,c	;volatile
   365                           ;LC-meter.c: 186: TRISC |= (1 << 4);
   366  001D3A  8894               	bsf	3988,4,c	;volatile
   367                           ;LC-meter.c: 187: TRISC &= ~(1 << 5);
   368  001D3C  9A94               	bcf	3988,5,c	;volatile
   369                           ;LC-meter.c: 189: LATC &= ~(1 << 5);
   370  001D3E  9A8B               	bcf	3979,5,c	;volatile
   371                           ;LC-meter.c: 190: delay10ms(50);
   372  001D40  0E32               	movlw	50
   373  001D42  EC3B  F013         	call	_delay10ms
   374                           ;LC-meter.c: 191: LATC |= (1 << 5);
   375  001D46  8A8B               	bsf	3979,5,c	;volatile
   376                           ;LC-meter.c: 192: delay10ms(50);
   377  001D48  0E32               	movlw	50
   378  001D4A  EC3B  F013         	call	_delay10ms
   379                           ;LC-meter.c: 193: LATC &= ~(1 << 5);
   380  001D4E  9A8B               	bcf	3979,5,c	;volatile
   381                           ;LC-meter.c: 194: delay10ms(50);
   382  001D50  0E32               	movlw	50
   383  001D52  EC3B  F013         	call	_delay10ms
   384                           ;LC-meter.c: 195: LATC |= (1 << 5);
   385  001D56  8A8B               	bsf	3979,5,c	;volatile
   386                           ;LC-meter.c: 196: delay10ms(50);
   387  001D58  0E32               	movlw	50
   388  001D5A  EC3B  F013         	call	_delay10ms
   389                           ;LC-meter.c: 197: LATC &= ~(1 << 5);
   390  001D5E  9A8B               	bcf	3979,5,c	;volatile
   391                           ;LC-meter.c: 200: ser_init();
   392  001D60  EC1F  F013         	call	_ser_init	;wreg free
   393                           ;LC-meter.c: 207: INTCON |= 0xc0;
   394  001D64  0EC0               	movlw	192
   395  001D66  12F2               	iorwf	intcon,f,c	;volatile
   396                           ;LC-meter.c: 226: delay10ms(200);
   397  001D68  0EC8               	movlw	200
   398  001D6A  EC3B  F013         	call	_delay10ms
   399                           ;LC-meter.c: 229: calibrate();
   400  001D6E  EC29  F00F         	call	_calibrate	;wreg free
   401                           ;LC-meter.c: 240: for(;;) {
   402  001D72                     l1207:
   403                           ; BSR set to: 1
   404                           ;LC-meter.c: 242: ser_puts("...\r\n");
   405  001D72  0E67               	movlw	STR_1& (0+255)
   406  001D74  ECF8  F012         	call	_ser_puts
   407                           ;LC-meter.c: 243: if((!!(PORTC & 0b10000)))
   408  001D78  A882               	btfss	3970,4,c	;volatile
   409  001D7A  D003               	goto	l1210
   410                           ;LC-meter.c: 244: measure_capacitance();
   411  001D7C  EC27  F006         	call	_measure_capacitance	;wreg free
   412  001D80  D002               	goto	l1211
   413  001D82                     l1210:
   414                           ; BSR set to: 1
   415                           ;LC-meter.c: 245: else
   416                           ;LC-meter.c: 246: measure_inductance();
   417  001D82  EC3D  F004         	call	_measure_inductance	;wreg free
   418  001D86                     l1211:
   419                           ; BSR set to: 1
   420                           ;LC-meter.c: 248: indicator(1);
   421  001D86  0E01               	movlw	1
   422  001D88  EC3D  F013         	call	_indicator
   423                           ;LC-meter.c: 249: delay10ms(30);
   424  001D8C  0E1E               	movlw	30
   425  001D8E  EC3B  F013         	call	_delay10ms
   426                           ;LC-meter.c: 250: indicator(0);
   427  001D92  0E00               	movlw	0
   428  001D94  EC3D  F013         	call	_indicator
   429                           ;LC-meter.c: 251: delay10ms(20);
   430  001D98  0E14               	movlw	20
   431  001D9A  EC3B  F013         	call	_delay10ms
   432                           ;LC-meter.c: 252: }
   433  001D9E  D7E9               	goto	l1207
   434  001DA0                     __end_of_main:
   435                           	opt stack 0
   436                           
   437                           	psect	text1
   438                           ; =============== function _main ends ==========
      +                          ==
   439                           ; *************** function _measure_capacitance 
      +                          *****************
   440                           ; Defined at:
   441                           ;		line 118 in file "../../../src/measure.c"
   442                           ; Parameters:
   443                           ;		None
   444                           ; Auto variables:
   445                           ;		unit        	       	type: unsigned char 
   446                           ;		var         	       	type: unsigned short 
   447                           ;		Cin         	       	type: unsigned short 
   448                           ; Return value:
   449                           ;		type: void 
   450                           ;		size: 0
   451                           ; Registers used:
   452                           ;		wreg, fsr0l, fsr0h, fsr1l, fsr2l, status,2, s
      +                          tatus,0, tblptrl, tblptrh, tblptru, tablat, prod
      +                          l, prodh, cstack
   453                           ; Tracked objects:
   454                           ;		On entry : F/1
   455                           ;		On exit  : F/1
   456                           ;		Unchanged: 0/0
   457                           ; Data sizes:
   458                           ;		Autos:   14
   459                           ;		Params:   0
   460                           ;		Temp:     0
   461                           ;		Total:   14
   462                           ; This function calls:
   463                           ;		_measure_freq
   464                           ;		___lwtofl
   465                           ;		_ser_puts
   466                           ;		_format_xint32
   467                           ;		_format_double
   468                           ;		_ser_putch
   469                           ;		___flge
   470                           ;		___flmul
   471                           ;		___flsub
   472                           ;		___asfldiv
   473                           ;		___asflmul
   474                           ;		___fltol
   475                           ;		_print_reading
   476                           ;		_print_unit
   477                           ; This function is called by:
   478                           ;		_main
   479                           ; This function uses a non-reentrant model
   480                           ; 
   481  000000                     
   482                           ;measure.c: 117: void
   483                           ;measure.c: 118: measure_capacitance() {
   484  000C4E                     _measure_capacitance:
   485                           	opt stack 29
   486                           ; BSR set to: 1
   487  000C4E  EC8C  F00B         	call	_measure_freq	;wreg free
   488  000C52  C11E  F108         	movff	?_measure_freq,??_measure_capacitance+8
   489  000C56  C11F  F109         	movff	?_measure_freq+1,??_measure_capacitance+9
   490                           ;measure.c: 131: F3 = (double)var;
   491  000C5A  C108  F11E         	movff	??_measure_capacitance+8,?___lwtofl
   492  000C5E  C109  F11F         	movff	??_measure_capacitance+9,?___lwtofl+1
   493  000C62  EC6E  F012         	call	___lwtofl	;wreg free
   494  000C66  C11E  F01D         	movff	?___lwtofl,29
   495  000C6A  C11F  F01E         	movff	?___lwtofl+1,30
   496  000C6E  C120  F01F         	movff	?___lwtofl+2,31
   497  000C72  C121  F020         	movff	?___lwtofl+3,32
   498                           ;measure.c: 134: ser_puts("var=");
   499  000C76  0E72               	movlw	STR_4& (0+255)
   500  000C78  ECF8  F012         	call	_ser_puts
   501                           ;measure.c: 135: format_xint32( var);
   502  000C7C  C108  F10E         	movff	??_measure_capacitance+8,?_format_xint32
   503  000C80  C109  F10F         	movff	??_measure_capacitance+9,?_format_xint32+
      +                          1
   504  000C84  6B10               	clrf	(?_format_xint32+2)& (0+255),b
   505  000C86  6B11               	clrf	(?_format_xint32+3)& (0+255),b
   506  000C88  ECC5  F012         	call	_format_xint32	;wreg free
   507                           ;measure.c: 136: ser_puts("\r\nF1=");
   508  000C8C  0E55               	movlw	STR_5& (0+255)
   509  000C8E  ECF8  F012         	call	_ser_puts
   510                           ;measure.c: 137: format_double( F1);
   511  000C92  C019 F10E          	movff	25,?_format_double
   512  000C96  C01A F10F          	movff	26,?_format_double+1
   513  000C9A  C01B F110          	movff	27,?_format_double+2
   514  000C9E  C01C F111          	movff	28,?_format_double+3
   515  000CA2  ECD0  F008         	call	_format_double	;wreg free
   516                           ;measure.c: 138: ser_putch(' ');
   517  000CA6  0E20               	movlw	32
   518  000CA8  EC0C  F013         	call	_ser_putch
   519                           ;measure.c: 139: format_xint32( *(unsigned long 
      +                          int*)&F1);
   520  000CAC  C019 F10E          	movff	25,?_format_xint32
   521  000CB0  C01A F10F          	movff	26,?_format_xint32+1
   522  000CB4  C01B F110          	movff	27,?_format_xint32+2
   523  000CB8  C01C F111          	movff	28,?_format_xint32+3
   524  000CBC  ECC5  F012         	call	_format_xint32	;wreg free
   525                           ;measure.c: 140: ser_puts("\r\nF2=");
   526  000CC0  0E61               	movlw	STR_6& (0+255)
   527  000CC2  ECF8  F012         	call	_ser_puts
   528                           ;measure.c: 141: format_double( F2);
   529  000CC6  C021 F10E          	movff	33,?_format_double
   530  000CCA  C022 F10F          	movff	34,?_format_double+1
   531  000CCE  C023 F110          	movff	35,?_format_double+2
   532  000CD2  C024 F111          	movff	36,?_format_double+3
   533  000CD6  ECD0  F008         	call	_format_double	;wreg free
   534                           ;measure.c: 142: ser_putch(' ');
   535  000CDA  0E20               	movlw	32
   536  000CDC  EC0C  F013         	call	_ser_putch
   537                           ;measure.c: 143: format_xint32( *(unsigned long 
      +                          int*)&F2);
   538  000CE0  C021 F10E          	movff	33,?_format_xint32
   539  000CE4  C022 F10F          	movff	34,?_format_xint32+1
   540  000CE8  C023 F110          	movff	35,?_format_xint32+2
   541  000CEC  C024 F111          	movff	36,?_format_xint32+3
   542  000CF0  ECC5  F012         	call	_format_xint32	;wreg free
   543                           ;measure.c: 144: ser_puts("\r\nF3=");
   544  000CF4  0E5B               	movlw	STR_7& (0+255)
   545  000CF6  ECF8  F012         	call	_ser_puts
   546                           ;measure.c: 145: format_double( F3);
   547  000CFA  C01D F10E          	movff	29,?_format_double
   548  000CFE  C01E F10F          	movff	30,?_format_double+1
   549  000D02  C01F F110          	movff	31,?_format_double+2
   550  000D06  C020 F111          	movff	32,?_format_double+3
   551  000D0A  ECD0  F008         	call	_format_double	;wreg free
   552                           ;measure.c: 146: ser_putch(' ');
   553  000D0E  0E20               	movlw	32
   554  000D10  EC0C  F013         	call	_ser_putch
   555                           ;measure.c: 147: format_xint32( *(unsigned long 
      +                          int*)&F3);
   556  000D14  C01D F10E          	movff	29,?_format_xint32
   557  000D18  C01E F10F          	movff	30,?_format_xint32+1
   558  000D1C  C01F F110          	movff	31,?_format_xint32+2
   559  000D20  C020 F111          	movff	32,?_format_xint32+3
   560  000D24  ECC5  F012         	call	_format_xint32	;wreg free
   561                           ;measure.c: 148: ser_puts("\r\nCCal=");
   562  000D28  0E4D               	movlw	STR_8& (0+255)
   563  000D2A  ECF8  F012         	call	_ser_puts
   564                           ;measure.c: 149: format_double( CCal);
   565  000D2E  C000 F10E          	movff	0,?_format_double
   566  000D32  C001 F10F          	movff	1,?_format_double+1
   567  000D36  C002 F110          	movff	2,?_format_double+2
   568  000D3A  C003 F111          	movff	3,?_format_double+3
   569  000D3E  ECD0  F008         	call	_format_double	;wreg free
   570                           ;measure.c: 150: ser_putch(' ');
   571  000D42  0E20               	movlw	32
   572  000D44  EC0C  F013         	call	_ser_putch
   573                           ;measure.c: 151: format_xint32( *(unsigned long 
      +                          int*)&CCal);
   574  000D48  C000 F10E          	movff	0,?_format_xint32
   575  000D4C  C001 F10F          	movff	1,?_format_xint32+1
   576  000D50  C002 F110          	movff	2,?_format_xint32+2
   577  000D54  C003 F111          	movff	3,?_format_xint32+3
   578  000D58  ECC5  F012         	call	_format_xint32	;wreg free
   579                           ;measure.c: 152: ser_puts("\r\n");
   580  000D5C  0E6A               	movlw	(STR_1+3)& (0+255)
   581  000D5E  ECF8  F012         	call	_ser_puts
   582                           ;measure.c: 156: if(F3 > F1)
   583  000D62  C01D F147          	movff	29,?___flge+4
   584  000D66  C01E F148          	movff	30,?___flge+5
   585  000D6A  C01F F149          	movff	31,?___flge+6
   586  000D6E  C020 F14A          	movff	32,?___flge+7
   587  000D72  C019 F143          	movff	25,?___flge
   588  000D76  C01A F144          	movff	26,?___flge+1
   589  000D7A  C01B F145          	movff	27,?___flge+2
   590  000D7E  C01C F146          	movff	28,?___flge+3
   591  000D82  EC4C  F012         	call	___flge	;wreg free
   592  000D86  E208               	bc	l1706
   593                           ;measure.c: 157: F3 = F1;
   594  000D88  C019 F01D          	movff	25,29
   595  000D8C  C01A F01E          	movff	26,30
   596  000D90  C01B F01F          	movff	27,31
   597  000D94  C01C F020          	movff	28,32
   598  000D98                     l1706:
   599                           ; BSR set to: 1
   600                           ;measure.c: 159: Cin = F2 * F2 * (F1 * F1 - F3 *
      +                           F3) * CCal;
   601  000D98  C01D F159          	movff	29,?___flmul+4
   602  000D9C  C01E F15A          	movff	30,?___flmul+5
   603  000DA0  C01F F15B          	movff	31,?___flmul+6
   604  000DA4  C020 F15C          	movff	32,?___flmul+7
   605  000DA8  C01D F155          	movff	29,?___flmul
   606  000DAC  C01E F156          	movff	30,?___flmul+1
   607  000DB0  C01F F157          	movff	31,?___flmul+2
   608  000DB4  C020 F158          	movff	32,?___flmul+3
   609  000DB8  EC50  F00D         	call	___flmul	;wreg free
   610  000DBC  C155  F100         	movff	?___flmul,??_measure_capacitance
   611  000DC0  C156  F101         	movff	?___flmul+1,??_measure_capacitance+1
   612  000DC4  C157  F102         	movff	?___flmul+2,??_measure_capacitance+2
   613  000DC8  C158  F103         	movff	?___flmul+3,??_measure_capacitance+3
   614  000DCC  C019 F159          	movff	25,?___flmul+4
   615  000DD0  C01A F15A          	movff	26,?___flmul+5
   616  000DD4  C01B F15B          	movff	27,?___flmul+6
   617  000DD8  C01C F15C          	movff	28,?___flmul+7
   618  000DDC  C019 F155          	movff	25,?___flmul
   619  000DE0  C01A F156          	movff	26,?___flmul+1
   620  000DE4  C01B F157          	movff	27,?___flmul+2
   621  000DE8  C01C F158          	movff	28,?___flmul+3
   622  000DEC  EC50  F00D         	call	___flmul	;wreg free
   623  000DF0  C155  F104         	movff	?___flmul,??_measure_capacitance+4
   624  000DF4  C156  F105         	movff	?___flmul+1,??_measure_capacitance+5
   625  000DF8  C157  F106         	movff	?___flmul+2,??_measure_capacitance+6
   626  000DFC  C158  F107         	movff	?___flmul+3,??_measure_capacitance+7
   627  000E00  C100  F143         	movff	??_measure_capacitance,?___flsub+4
   628  000E04  C101  F144         	movff	??_measure_capacitance+1,?___flsub+5
   629  000E08  C102  F145         	movff	??_measure_capacitance+2,?___flsub+6
   630  000E0C  C103  F146         	movff	??_measure_capacitance+3,?___flsub+7
   631  000E10  C104  F13F         	movff	??_measure_capacitance+4,?___flsub
   632  000E14  C105  F140         	movff	??_measure_capacitance+5,?___flsub+1
   633  000E18  C106  F141         	movff	??_measure_capacitance+6,?___flsub+2
   634  000E1C  C107  F142         	movff	??_measure_capacitance+7,?___flsub+3
   635  000E20  EC8D  F012         	call	___flsub	;wreg free
   636  000E24  C13F  F155         	movff	?___flsub,?___flmul
   637  000E28  C140  F156         	movff	?___flsub+1,?___flmul+1
   638  000E2C  C141  F157         	movff	?___flsub+2,?___flmul+2
   639  000E30  C142  F158         	movff	?___flsub+3,?___flmul+3
   640  000E34  C021 F159          	movff	33,?___flmul+4
   641  000E38  C022 F15A          	movff	34,?___flmul+5
   642  000E3C  C023 F15B          	movff	35,?___flmul+6
   643  000E40  C024 F15C          	movff	36,?___flmul+7
   644  000E44  EC50  F00D         	call	___flmul	;wreg free
   645  000E48  C021 F159          	movff	33,?___flmul+4
   646  000E4C  C022 F15A          	movff	34,?___flmul+5
   647  000E50  C023 F15B          	movff	35,?___flmul+6
   648  000E54  C024 F15C          	movff	36,?___flmul+7
   649  000E58  EC50  F00D         	call	___flmul	;wreg free
   650  000E5C  C000 F159          	movff	0,?___flmul+4
   651  000E60  C001 F15A          	movff	1,?___flmul+5
   652  000E64  C002 F15B          	movff	2,?___flmul+6
   653  000E68  C003 F15C          	movff	3,?___flmul+7
   654  000E6C  EC50  F00D         	call	___flmul	;wreg free
   655  000E70  C155  F10A         	movff	?___flmul,??_measure_capacitance+10
   656  000E74  C156  F10B         	movff	?___flmul+1,??_measure_capacitance+11
   657  000E78  C157  F10C         	movff	?___flmul+2,??_measure_capacitance+12
   658  000E7C  C158  F10D         	movff	?___flmul+3,??_measure_capacitance+13
   659                           ;measure.c: 163: ser_puts("Cin=");
   660  000E80  0E6D               	movlw	STR_10& (0+255)
   661  000E82  ECF8  F012         	call	_ser_puts
   662                           ;measure.c: 164: format_double( Cin);
   663  000E86  C10A  F10E         	movff	??_measure_capacitance+10,?_format_double
   664  000E8A  C10B  F10F         	movff	??_measure_capacitance+11,?_format_double
      +                          +1
   665  000E8E  C10C  F110         	movff	??_measure_capacitance+12,?_format_double
      +                          +2
   666  000E92  C10D  F111         	movff	??_measure_capacitance+13,?_format_double
      +                          +3
   667  000E96  ECD0  F008         	call	_format_double	;wreg free
   668                           ;measure.c: 165: ser_putch(' ');
   669  000E9A  0E20               	movlw	32
   670  000E9C  EC0C  F013         	call	_ser_putch
   671                           ;measure.c: 166: format_xint32( *(unsigned long 
      +                          int*)&Cin);
   672  000EA0  C10A  F10E         	movff	??_measure_capacitance+10,?_format_xint32
   673  000EA4  C10B  F10F         	movff	??_measure_capacitance+11,?_format_xint32
      +                          +1
   674  000EA8  C10C  F110         	movff	??_measure_capacitance+12,?_format_xint32
      +                          +2
   675  000EAC  C10D  F111         	movff	??_measure_capacitance+13,?_format_xint32
      +                          +3
   676  000EB0  ECC5  F012         	call	_format_xint32	;wreg free
   677                           ;measure.c: 167: ser_puts("\r\n");
   678  000EB4  0E6A               	movlw	(STR_1+3)& (0+255)
   679  000EB6  ECF8  F012         	call	_ser_puts
   680                           ;measure.c: 169: if(Cin > 999) {
   681  000EBA  C10A  F147         	movff	??_measure_capacitance+10,?___flge+4
   682  000EBE  C10B  F148         	movff	??_measure_capacitance+11,?___flge+5
   683  000EC2  C10C  F149         	movff	??_measure_capacitance+12,?___flge+6
   684  000EC6  C10D  F14A         	movff	??_measure_capacitance+13,?___flge+7
   685  000ECA  6B43               	clrf	?___flge& (0+255),b
   686  000ECC  0EC0               	movlw	192
   687  000ECE  6F44               	movwf	(?___flge+1)& (0+255),b
   688  000ED0  0E79               	movlw	121
   689  000ED2  6F45               	movwf	(?___flge+2)& (0+255),b
   690  000ED4  0E44               	movlw	68
   691  000ED6  6F46               	movwf	(?___flge+3)& (0+255),b
   692  000ED8  EC4C  F012         	call	___flge	;wreg free
   693  000EDC  E253               	bc	l1707
   694                           ;measure.c: 170: if(Cin > (999e+03l)) {
   695  000EDE  C10A  F147         	movff	??_measure_capacitance+10,?___flge+4
   696  000EE2  C10B  F148         	movff	??_measure_capacitance+11,?___flge+5
   697  000EE6  C10C  F149         	movff	??_measure_capacitance+12,?___flge+6
   698  000EEA  C10D  F14A         	movff	??_measure_capacitance+13,?___flge+7
   699  000EEE  0E80               	movlw	128
   700  000EF0  6F43               	movwf	?___flge& (0+255),b
   701  000EF2  0EE5               	movlw	229
   702  000EF4  6F44               	movwf	(?___flge+1)& (0+255),b
   703  000EF6  0E73               	movlw	115
   704  000EF8  6F45               	movwf	(?___flge+2)& (0+255),b
   705  000EFA  0E49               	movlw	73
   706  000EFC  6F46               	movwf	(?___flge+3)& (0+255),b
   707  000EFE  EC4C  F012         	call	___flge	;wreg free
   708  000F02  E232               	bc	l1708
   709                           ;measure.c: 171: if(Cin > (999e+06l)) {
   710  000F04  C10A  F147         	movff	??_measure_capacitance+10,?___flge+4
   711  000F08  C10B  F148         	movff	??_measure_capacitance+11,?___flge+5
   712  000F0C  C10C  F149         	movff	??_measure_capacitance+12,?___flge+6
   713  000F10  C10D  F14A         	movff	??_measure_capacitance+13,?___flge+7
   714  000F14  0E1F               	movlw	31
   715  000F16  6F43               	movwf	?___flge& (0+255),b
   716  000F18  0E2E               	movlw	46
   717  000F1A  6F44               	movwf	(?___flge+1)& (0+255),b
   718  000F1C  0E6E               	movlw	110
   719  000F1E  6F45               	movwf	(?___flge+2)& (0+255),b
   720  000F20  0E4E               	movlw	78
   721  000F22  6F46               	movwf	(?___flge+3)& (0+255),b
   722  000F24  EC4C  F012         	call	___flge	;wreg free
   723  000F28  E210               	bc	l1709
   724                           ;measure.c: 172: Cin = Cin / (1e+09);
   725  000F2A  0E28               	movlw	40
   726  000F2C  6F20               	movwf	(?___asfldiv+2)& (0+255),b
   727  000F2E  0E6B               	movlw	107
   728  000F30  6F21               	movwf	(?___asfldiv+3)& (0+255),b
   729  000F32  0E6E               	movlw	110
   730  000F34  6F22               	movwf	(?___asfldiv+4)& (0+255),b
   731  000F36  0E4E               	movlw	78
   732  000F38  6F23               	movwf	(?___asfldiv+5)& (0+255),b
   733  000F3A  0E0A               	movlw	low (??_measure_capacitance+10)
   734  000F3C  6F1E               	movwf	?___asfldiv& (0+255),b
   735  000F3E  0E01               	movlw	high (??_measure_capacitance+10)
   736  000F40  6F1F               	movwf	(?___asfldiv+1)& (0+255),b
   737  000F42  ECE3  F011         	call	___asfldiv	;wreg free
   738                           ;measure.c: 173: unit = 4;
   739  000F46  0E04               	movlw	4
   740  000F48  D01E               	goto	L2
   741                           ;measure.c: 174: } else {
   742  000F4A                     l1709:
   743                           ; BSR set to: 1
   744                           ;measure.c: 175: Cin = Cin / (1e+06);
   745  000F4A  6B20               	clrf	(?___asfldiv+2)& (0+255),b
   746  000F4C  0E24               	movlw	36
   747  000F4E  6F21               	movwf	(?___asfldiv+3)& (0+255),b
   748  000F50  0E74               	movlw	116
   749  000F52  6F22               	movwf	(?___asfldiv+4)& (0+255),b
   750  000F54  0E49               	movlw	73
   751  000F56  6F23               	movwf	(?___asfldiv+5)& (0+255),b
   752  000F58  0E0A               	movlw	low (??_measure_capacitance+10)
   753  000F5A  6F1E               	movwf	?___asfldiv& (0+255),b
   754  000F5C  0E01               	movlw	high (??_measure_capacitance+10)
   755  000F5E  6F1F               	movwf	(?___asfldiv+1)& (0+255),b
   756  000F60  ECE3  F011         	call	___asfldiv	;wreg free
   757                           ;measure.c: 176: unit = 5;
   758  000F64  0E05               	movlw	5
   759  000F66  D00F               	goto	L2
   760                           ; BSR set to: 1
   761                           ;measure.c: 177: }
   762                           ;measure.c: 178: } else {
   763  000F68                     l1708:
   764                           ; BSR set to: 1
   765                           ;measure.c: 179: Cin = Cin / 1e+03;
   766  000F68  6B20               	clrf	(?___asfldiv+2)& (0+255),b
   767  000F6A  6B21               	clrf	(?___asfldiv+3)& (0+255),b
   768  000F6C  0E7A               	movlw	122
   769  000F6E  6F22               	movwf	(?___asfldiv+4)& (0+255),b
   770  000F70  0E44               	movlw	68
   771  000F72  6F23               	movwf	(?___asfldiv+5)& (0+255),b
   772  000F74  0E0A               	movlw	low (??_measure_capacitance+10)
   773  000F76  6F1E               	movwf	?___asfldiv& (0+255),b
   774  000F78  0E01               	movlw	high (??_measure_capacitance+10)
   775  000F7A  6F1F               	movwf	(?___asfldiv+1)& (0+255),b
   776  000F7C  ECE3  F011         	call	___asfldiv	;wreg free
   777                           ;measure.c: 180: unit = 6;
   778  000F80  0E06               	movlw	6
   779  000F82  D001               	goto	L2
   780                           ; BSR set to: 1
   781                           ;measure.c: 181: }
   782                           ;measure.c: 182: } else
   783  000F84                     l1707:
   784                           ; BSR set to: 1
   785                           ;measure.c: 183: unit = 7;
   786  000F84  0E07               	movlw	7
   787  000F86                     L2:
   788  000F86  6EE1               	movwf	fsr1l,c
   789                           ; BSR set to: 1
   790                           ;measure.c: 185: Cin = Cin * 100;
   791  000F88  6B3B               	clrf	(?___asflmul+2)& (0+255),b
   792  000F8A  6B3C               	clrf	(?___asflmul+3)& (0+255),b
   793  000F8C  0EC8               	movlw	200
   794  000F8E  6F3D               	movwf	(?___asflmul+4)& (0+255),b
   795  000F90  0E42               	movlw	66
   796  000F92  6F3E               	movwf	(?___asflmul+5)& (0+255),b
   797  000F94  0E0A               	movlw	low (??_measure_capacitance+10)
   798  000F96  6F39               	movwf	?___asflmul& (0+255),b
   799  000F98  0E01               	movlw	high (??_measure_capacitance+10)
   800  000F9A  6F3A               	movwf	(?___asflmul+1)& (0+255),b
   801  000F9C  EC06  F012         	call	___asflmul	;wreg free
   802                           ;measure.c: 186: var = (unsigned short int)Cin;
   803  000FA0  C10A  F143         	movff	??_measure_capacitance+10,?___fltol
   804  000FA4  C10B  F144         	movff	??_measure_capacitance+11,?___fltol+1
   805  000FA8  C10C  F145         	movff	??_measure_capacitance+12,?___fltol+2
   806  000FAC  C10D  F146         	movff	??_measure_capacitance+13,?___fltol+3
   807  000FB0  ECBF  F00F         	call	___fltol	;wreg free
   808  000FB4  C143  F108         	movff	?___fltol,??_measure_capacitance+8
   809  000FB8  C144  F109         	movff	?___fltol+1,??_measure_capacitance+9
   810                           ;measure.c: 188: print_reading(var);
   811  000FBC  C108  F11E         	movff	??_measure_capacitance+8,?_print_reading
   812  000FC0  C109  F11F         	movff	??_measure_capacitance+9,?_print_reading+
      +                          1
   813  000FC4  EC3C  F013         	call	_print_reading	;wreg free
   814                           ;measure.c: 189: print_unit(unit);
   815  000FC8  50E1               	movf	fsr1l,w,c
   816  000FCA  EF3E  F013         	goto	_print_unit
   817                           ;measure.c: 190: }
   818                           ; BSR set to: 1
   819  000FCE                     __end_of_measure_capacitance:
   820                           	opt stack 0
   821                           
   822                           	psect	text2
   823                           ; =============== function _measure_capacitance 
      +                          ends ============
   824                           ; *************** function _calibrate **********
      +                          *******
   825                           ; Defined at:
   826                           ;		line 24 in file "../../../src/measure.c"
   827                           ; Parameters:
   828                           ;		None
   829                           ; Auto variables:
   830                           ;		None
   831                           ; Return value:
   832                           ;		type: void 
   833                           ;		size: 0
   834                           ; Registers used:
   835                           ;		wreg, fsr0l, fsr0h, fsr1l, fsr2l, status,2, s
      +                          tatus,0, tblptrl, tblptrh, tblptru, tablat, prod
      +                          l, prodh, cstack
   836                           ; Tracked objects:
   837                           ;		On entry : F/1
   838                           ;		On exit  : F/1
   839                           ;		Unchanged: 0/0
   840                           ; Data sizes:
   841                           ;		Autos:    0
   842                           ;		Params:   0
   843                           ;		Temp:     0
   844                           ;		Total:    0
   845                           ; This function calls:
   846                           ;		_measure_freq
   847                           ;		___lwtofl
   848                           ;		_delay10ms
   849                           ;		_ser_puts
   850                           ; This function is called by:
   851                           ;		_main
   852                           ; This function uses a non-reentrant model
   853                           ; 
   854  000000                     
   855                           ;measure.c: 23: void
   856                           ;measure.c: 24: calibrate() {
   857  001E52                     _calibrate:
   858                           	opt stack 29
   859                           ; BSR set to: 1
   860  001E52  9A8B               	bcf	3979,5,c	;volatile
   861                           ;measure.c: 40: F1 = (double)measure_freq();
   862  001E54  EC8C  F00B         	call	_measure_freq	;wreg free
   863  001E58  C11E  F11E         	movff	?_measure_freq,?___lwtofl
   864  001E5C  C11F  F11F         	movff	?_measure_freq+1,?___lwtofl+1
   865  001E60  EC6E  F012         	call	___lwtofl	;wreg free
   866  001E64  C11E  F019         	movff	?___lwtofl,25
   867  001E68  C11F  F01A         	movff	?___lwtofl+1,26
   868  001E6C  C120  F01B         	movff	?___lwtofl+2,27
   869  001E70  C121  F01C         	movff	?___lwtofl+3,28
   870                           ;measure.c: 41: delay10ms(50);
   871  001E74  0E32               	movlw	50
   872  001E76  EC3B  F013         	call	_delay10ms
   873                           ;measure.c: 43: F1 = (double)measure_freq();
   874  001E7A  EC8C  F00B         	call	_measure_freq	;wreg free
   875  001E7E  C11E  F11E         	movff	?_measure_freq,?___lwtofl
   876  001E82  C11F  F11F         	movff	?_measure_freq+1,?___lwtofl+1
   877  001E86  EC6E  F012         	call	___lwtofl	;wreg free
   878  001E8A  C11E  F019         	movff	?___lwtofl,25
   879  001E8E  C11F  F01A         	movff	?___lwtofl+1,26
   880  001E92  C120  F01B         	movff	?___lwtofl+2,27
   881  001E96  C121  F01C         	movff	?___lwtofl+3,28
   882                           ;measure.c: 44: LATC |= (1 << 5);
   883  001E9A  8A8B               	bsf	3979,5,c	;volatile
   884                           ;measure.c: 46: F2 = (double)measure_freq();
   885  001E9C  EC8C  F00B         	call	_measure_freq	;wreg free
   886  001EA0  C11E  F11E         	movff	?_measure_freq,?___lwtofl
   887  001EA4  C11F  F11F         	movff	?_measure_freq+1,?___lwtofl+1
   888  001EA8  EC6E  F012         	call	___lwtofl	;wreg free
   889  001EAC  C11E  F021         	movff	?___lwtofl,33
   890  001EB0  C11F  F022         	movff	?___lwtofl+1,34
   891  001EB4  C120  F023         	movff	?___lwtofl+2,35
   892  001EB8  C121  F024         	movff	?___lwtofl+3,36
   893                           ;measure.c: 47: delay10ms(50);
   894  001EBC  0E32               	movlw	50
   895  001EBE  EC3B  F013         	call	_delay10ms
   896                           ;measure.c: 49: F2 = (double)measure_freq();
   897  001EC2  EC8C  F00B         	call	_measure_freq	;wreg free
   898  001EC6  C11E  F11E         	movff	?_measure_freq,?___lwtofl
   899  001ECA  C11F  F11F         	movff	?_measure_freq+1,?___lwtofl+1
   900  001ECE  EC6E  F012         	call	___lwtofl	;wreg free
   901  001ED2  C11E  F021         	movff	?___lwtofl,33
   902  001ED6  C11F  F022         	movff	?___lwtofl+1,34
   903  001EDA  C120  F023         	movff	?___lwtofl+2,35
   904  001EDE  C121  F024         	movff	?___lwtofl+3,36
   905                           ;measure.c: 50: LATC &= ~(1 << 5);
   906  001EE2  9A8B               	bcf	3979,5,c	;volatile
   907                           ;measure.c: 62: ser_puts("\r\n");
   908  001EE4  0E6A               	movlw	(STR_1+3)& (0+255)
   909  001EE6  EFF8  F012         	goto	_ser_puts
   910                           ;measure.c: 63: }
   911                           ; BSR set to: 1
   912  001EEA                     __end_of_calibrate:
   913                           	opt stack 0
   914                           
   915                           	psect	text3
   916                           ; =============== function _calibrate ends =====
      +                          =======
   917                           ; *************** function _indicator **********
      +                          *******
   918                           ; Defined at:
   919                           ;		line 473 in file "../../../src/print.c"
   920                           ; Parameters:
   921                           ;		indicate       size:   1reg:   wre	type: unsi
      +                          gned char 
   922                           ; Auto variables:
   923                           ;		None
   924                           ; Return value:
   925                           ;		type: void 
   926                           ;		size: 0
   927                           ; Registers used:
   928                           ;		wreg
   929                           ; Tracked objects:
   930                           ;		On entry : F/1
   931                           ;		On exit  : F/1
   932                           ;		Unchanged: FFFFFFFF/0
   933                           ; Data sizes:
   934                           ;		Autos:    0
   935                           ;		Params:   0
   936                           ;		Temp:     0
   937                           ;		Total:    0
   938                           ; This function calls:
   939                           ;		Nothing
   940                           ; This function is called by:
   941                           ;		_main
   942                           ; This function uses a non-reentrant model
   943                           ; 
   944  000000                     
   945                           ;print.c: 472: void
   946                           ;print.c: 473: indicator(unsigned char indicate)
      +                           {
   947  00267A                     _indicator:
   948                           	opt stack 29
   949                           ; BSR set to: 1
   950                           ; BSR set to: 1
   951  00267A  0012               	return	
   952  00267C                     __end_of_indicator:
   953                           	opt stack 0
   954                           
   955                           	psect	text4
   956                           ; =============== function _indicator ends =====
      +                          =======
   957                           ; *************** function _measure_inductance *
      +                          ****************
   958                           ; Defined at:
   959                           ;		line 196 in file "../../../src/measure.c"
   960                           ; Parameters:
   961                           ;		None
   962                           ; Auto variables:
   963                           ;		unit        	       	type: unsigned char 
   964                           ;		var         	       	type: unsigned short 
   965                           ;		denominator 	       	type: unsigned short 
   966                           ;		numerator   	       	type: unsigned short 
   967                           ;		Lin         	       	type: unsigned short 
   968                           ; Return value:
   969                           ;		type: void 
   970                           ;		size: 0
   971                           ; Registers used:
   972                           ;		wreg, fsr0l, fsr0h, fsr1l, fsr2l, status,2, s
      +                          tatus,0, prodl, prodh, cstack
   973                           ; Tracked objects:
   974                           ;		On entry : F/1
   975                           ;		On exit  : F/1
   976                           ;		Unchanged: 0/0
   977                           ; Data sizes:
   978                           ;		Autos:   30
   979                           ;		Params:   0
   980                           ;		Temp:     0
   981                           ;		Total:   30
   982                           ; This function calls:
   983                           ;		_measure_freq
   984                           ;		___lwtofl
   985                           ;		___flge
   986                           ;		___flmul
   987                           ;		___flsub
   988                           ;		___fldiv
   989                           ;		___asfldiv
   990                           ;		___asflmul
   991                           ;		___fltol
   992                           ;		_print_reading
   993                           ;		_print_unit
   994                           ; This function is called by:
   995                           ;		_main
   996                           ; This function uses a non-reentrant model
   997                           ; 
   998  000000                     
   999                           ;measure.c: 195: void
  1000                           ;measure.c: 196: measure_inductance() {
  1001  00087A                     _measure_inductance:
  1002                           	opt stack 29
  1003                           ; BSR set to: 1
  1004  00087A  EC8C  F00B         	call	_measure_freq	;wreg free
  1005  00087E  C11E  F110         	movff	?_measure_freq,??_measure_inductance+16
  1006  000882  C11F  F111         	movff	?_measure_freq+1,??_measure_inductance+17
  1007                           ;measure.c: 208: F3 = (double)var;
  1008  000886  C110  F11E         	movff	??_measure_inductance+16,?___lwtofl
  1009  00088A  C111  F11F         	movff	??_measure_inductance+17,?___lwtofl+1
  1010  00088E  EC6E  F012         	call	___lwtofl	;wreg free
  1011  000892  C11E  F01D         	movff	?___lwtofl,29
  1012  000896  C11F  F01E         	movff	?___lwtofl+1,30
  1013  00089A  C120  F01F         	movff	?___lwtofl+2,31
  1014  00089E  C121  F020         	movff	?___lwtofl+3,32
  1015                           ;measure.c: 209: if(F3 > F1)
  1016  0008A2  C01D F147          	movff	29,?___flge+4
  1017  0008A6  C01E F148          	movff	30,?___flge+5
  1018  0008AA  C01F F149          	movff	31,?___flge+6
  1019  0008AE  C020 F14A          	movff	32,?___flge+7
  1020  0008B2  C019 F143          	movff	25,?___flge
  1021  0008B6  C01A F144          	movff	26,?___flge+1
  1022  0008BA  C01B F145          	movff	27,?___flge+2
  1023  0008BE  C01C F146          	movff	28,?___flge+3
  1024  0008C2  EC4C  F012         	call	___flge	;wreg free
  1025  0008C6  E208               	bc	l1714
  1026                           ;measure.c: 210: F3 = F1;
  1027  0008C8  C019 F01D          	movff	25,29
  1028  0008CC  C01A F01E          	movff	26,30
  1029  0008D0  C01B F01F          	movff	27,31
  1030  0008D4  C01C F020          	movff	28,32
  1031  0008D8                     l1714:
  1032                           ; BSR set to: 1
  1033                           ;measure.c: 212: numerator = ((F1 * F1) - (F3 * 
      +                          F3)) * ((F1 * F1) - (F2 - F2)) * (100 * 100);
  1034  0008D8  C019 F159          	movff	25,?___flmul+4
  1035  0008DC  C01A F15A          	movff	26,?___flmul+5
  1036  0008E0  C01B F15B          	movff	27,?___flmul+6
  1037  0008E4  C01C F15C          	movff	28,?___flmul+7
  1038  0008E8  C019 F155          	movff	25,?___flmul
  1039  0008EC  C01A F156          	movff	26,?___flmul+1
  1040  0008F0  C01B F157          	movff	27,?___flmul+2
  1041  0008F4  C01C F158          	movff	28,?___flmul+3
  1042  0008F8  EC50  F00D         	call	___flmul	;wreg free
  1043  0008FC  C155  F100         	movff	?___flmul,??_measure_inductance
  1044  000900  C156  F101         	movff	?___flmul+1,??_measure_inductance+1
  1045  000904  C157  F102         	movff	?___flmul+2,??_measure_inductance+2
  1046  000908  C158  F103         	movff	?___flmul+3,??_measure_inductance+3
  1047  00090C  C01D F159          	movff	29,?___flmul+4
  1048  000910  C01E F15A          	movff	30,?___flmul+5
  1049  000914  C01F F15B          	movff	31,?___flmul+6
  1050  000918  C020 F15C          	movff	32,?___flmul+7
  1051  00091C  C01D F155          	movff	29,?___flmul
  1052  000920  C01E F156          	movff	30,?___flmul+1
  1053  000924  C01F F157          	movff	31,?___flmul+2
  1054  000928  C020 F158          	movff	32,?___flmul+3
  1055  00092C  EC50  F00D         	call	___flmul	;wreg free
  1056  000930  C155  F104         	movff	?___flmul,??_measure_inductance+4
  1057  000934  C156  F105         	movff	?___flmul+1,??_measure_inductance+5
  1058  000938  C157  F106         	movff	?___flmul+2,??_measure_inductance+6
  1059  00093C  C158  F107         	movff	?___flmul+3,??_measure_inductance+7
  1060  000940  C019 F159          	movff	25,?___flmul+4
  1061  000944  C01A F15A          	movff	26,?___flmul+5
  1062  000948  C01B F15B          	movff	27,?___flmul+6
  1063  00094C  C01C F15C          	movff	28,?___flmul+7
  1064  000950  C019 F155          	movff	25,?___flmul
  1065  000954  C01A F156          	movff	26,?___flmul+1
  1066  000958  C01B F157          	movff	27,?___flmul+2
  1067  00095C  C01C F158          	movff	28,?___flmul+3
  1068  000960  EC50  F00D         	call	___flmul	;wreg free
  1069  000964  C155  F108         	movff	?___flmul,??_measure_inductance+8
  1070  000968  C156  F109         	movff	?___flmul+1,??_measure_inductance+9
  1071  00096C  C157  F10A         	movff	?___flmul+2,??_measure_inductance+10
  1072  000970  C158  F10B         	movff	?___flmul+3,??_measure_inductance+11
  1073  000974  C104  F143         	movff	??_measure_inductance+4,?___flsub+4
  1074  000978  C105  F144         	movff	??_measure_inductance+5,?___flsub+5
  1075  00097C  C106  F145         	movff	??_measure_inductance+6,?___flsub+6
  1076  000980  C107  F146         	movff	??_measure_inductance+7,?___flsub+7
  1077  000984  C108  F13F         	movff	??_measure_inductance+8,?___flsub
  1078  000988  C109  F140         	movff	??_measure_inductance+9,?___flsub+1
  1079  00098C  C10A  F141         	movff	??_measure_inductance+10,?___flsub+2
  1080  000990  C10B  F142         	movff	??_measure_inductance+11,?___flsub+3
  1081  000994  EC8D  F012         	call	___flsub	;wreg free
  1082  000998  C13F  F10C         	movff	?___flsub,??_measure_inductance+12
  1083  00099C  C140  F10D         	movff	?___flsub+1,??_measure_inductance+13
  1084  0009A0  C141  F10E         	movff	?___flsub+2,??_measure_inductance+14
  1085  0009A4  C142  F10F         	movff	?___flsub+3,??_measure_inductance+15
  1086  0009A8  C021 F143          	movff	33,?___flsub+4
  1087  0009AC  C022 F144          	movff	34,?___flsub+5
  1088  0009B0  C023 F145          	movff	35,?___flsub+6
  1089  0009B4  C024 F146          	movff	36,?___flsub+7
  1090  0009B8  C021 F13F          	movff	33,?___flsub
  1091  0009BC  C022 F140          	movff	34,?___flsub+1
  1092  0009C0  C023 F141          	movff	35,?___flsub+2
  1093  0009C4  C024 F142          	movff	36,?___flsub+3
  1094  0009C8  EC8D  F012         	call	___flsub	;wreg free
  1095  0009CC  C13F  F143         	movff	?___flsub,?___flsub+4
  1096  0009D0  C140  F144         	movff	?___flsub+1,?___flsub+5
  1097  0009D4  C141  F145         	movff	?___flsub+2,?___flsub+6
  1098  0009D8  C142  F146         	movff	?___flsub+3,?___flsub+7
  1099  0009DC  C100  F13F         	movff	??_measure_inductance,?___flsub
  1100  0009E0  C101  F140         	movff	??_measure_inductance+1,?___flsub+1
  1101  0009E4  C102  F141         	movff	??_measure_inductance+2,?___flsub+2
  1102  0009E8  C103  F142         	movff	??_measure_inductance+3,?___flsub+3
  1103  0009EC  EC8D  F012         	call	___flsub	;wreg free
  1104  0009F0  C13F  F159         	movff	?___flsub,?___flmul+4
  1105  0009F4  C140  F15A         	movff	?___flsub+1,?___flmul+5
  1106  0009F8  C141  F15B         	movff	?___flsub+2,?___flmul+6
  1107  0009FC  C142  F15C         	movff	?___flsub+3,?___flmul+7
  1108  000A00  C10C  F155         	movff	??_measure_inductance+12,?___flmul
  1109  000A04  C10D  F156         	movff	??_measure_inductance+13,?___flmul+1
  1110  000A08  C10E  F157         	movff	??_measure_inductance+14,?___flmul+2
  1111  000A0C  C10F  F158         	movff	??_measure_inductance+15,?___flmul+3
  1112  000A10  EC50  F00D         	call	___flmul	;wreg free
  1113  000A14  6B59               	clrf	(?___flmul+4)& (0+255),b
  1114  000A16  0E40               	movlw	64
  1115  000A18  6F5A               	movwf	(?___flmul+5)& (0+255),b
  1116  000A1A  0E1C               	movlw	28
  1117  000A1C  6F5B               	movwf	(?___flmul+6)& (0+255),b
  1118  000A1E  0E46               	movlw	70
  1119  000A20  6F5C               	movwf	(?___flmul+7)& (0+255),b
  1120  000A22  EC50  F00D         	call	___flmul	;wreg free
  1121  000A26  C155  F116         	movff	?___flmul,??_measure_inductance+22
  1122  000A2A  C156  F117         	movff	?___flmul+1,??_measure_inductance+23
  1123  000A2E  C157  F118         	movff	?___flmul+2,??_measure_inductance+24
  1124  000A32  C158  F119         	movff	?___flmul+3,??_measure_inductance+25
  1125                           ;measure.c: 214: denominator = 4 * 3.14159265358
      +                          979323846l * 3.14159265358979323846l * F1 * F1 *
      +                           F2 * F2 * F3 * F3 * CCal;
  1126  000A36  C019 F159          	movff	25,?___flmul+4
  1127  000A3A  C01A F15A          	movff	26,?___flmul+5
  1128  000A3E  C01B F15B          	movff	27,?___flmul+6
  1129  000A42  C01C F15C          	movff	28,?___flmul+7
  1130  000A46  C019 F155          	movff	25,?___flmul
  1131  000A4A  C01A F156          	movff	26,?___flmul+1
  1132  000A4E  C01B F157          	movff	27,?___flmul+2
  1133  000A52  C01C F158          	movff	28,?___flmul+3
  1134  000A56  EC50  F00D         	call	___flmul	;wreg free
  1135  000A5A  C021 F159          	movff	33,?___flmul+4
  1136  000A5E  C022 F15A          	movff	34,?___flmul+5
  1137  000A62  C023 F15B          	movff	35,?___flmul+6
  1138  000A66  C024 F15C          	movff	36,?___flmul+7
  1139  000A6A  EC50  F00D         	call	___flmul	;wreg free
  1140  000A6E  C021 F159          	movff	33,?___flmul+4
  1141  000A72  C022 F15A          	movff	34,?___flmul+5
  1142  000A76  C023 F15B          	movff	35,?___flmul+6
  1143  000A7A  C024 F15C          	movff	36,?___flmul+7
  1144  000A7E  EC50  F00D         	call	___flmul	;wreg free
  1145  000A82  C01D F159          	movff	29,?___flmul+4
  1146  000A86  C01E F15A          	movff	30,?___flmul+5
  1147  000A8A  C01F F15B          	movff	31,?___flmul+6
  1148  000A8E  C020 F15C          	movff	32,?___flmul+7
  1149  000A92  EC50  F00D         	call	___flmul	;wreg free
  1150  000A96  C01D F159          	movff	29,?___flmul+4
  1151  000A9A  C01E F15A          	movff	30,?___flmul+5
  1152  000A9E  C01F F15B          	movff	31,?___flmul+6
  1153  000AA2  C020 F15C          	movff	32,?___flmul+7
  1154  000AA6  EC50  F00D         	call	___flmul	;wreg free
  1155  000AAA  C000 F159          	movff	0,?___flmul+4
  1156  000AAE  C001 F15A          	movff	1,?___flmul+5
  1157  000AB2  C002 F15B          	movff	2,?___flmul+6
  1158  000AB6  C003 F15C          	movff	3,?___flmul+7
  1159  000ABA  EC50  F00D         	call	___flmul	;wreg free
  1160  000ABE  0EE6               	movlw	230
  1161  000AC0  6F59               	movwf	(?___flmul+4)& (0+255),b
  1162  000AC2  0EE9               	movlw	233
  1163  000AC4  6F5A               	movwf	(?___flmul+5)& (0+255),b
  1164  000AC6  0E1D               	movlw	29
  1165  000AC8  6F5B               	movwf	(?___flmul+6)& (0+255),b
  1166  000ACA  0E42               	movlw	66
  1167  000ACC  6F5C               	movwf	(?___flmul+7)& (0+255),b
  1168  000ACE  EC50  F00D         	call	___flmul	;wreg free
  1169  000AD2  C155  F112         	movff	?___flmul,??_measure_inductance+18
  1170  000AD6  C156  F113         	movff	?___flmul+1,??_measure_inductance+19
  1171  000ADA  C157  F114         	movff	?___flmul+2,??_measure_inductance+20
  1172  000ADE  C158  F115         	movff	?___flmul+3,??_measure_inductance+21
  1173                           ;measure.c: 216: Lin = (numerator / denominator)
      +                           * 1e+15l;
  1174  000AE2  C112  F13D         	movff	??_measure_inductance+18,?___fldiv+4
  1175  000AE6  C113  F13E         	movff	??_measure_inductance+19,?___fldiv+5
  1176  000AEA  C114  F13F         	movff	??_measure_inductance+20,?___fldiv+6
  1177  000AEE  C115  F140         	movff	??_measure_inductance+21,?___fldiv+7
  1178  000AF2  C116  F139         	movff	??_measure_inductance+22,?___fldiv
  1179  000AF6  C117  F13A         	movff	??_measure_inductance+23,?___fldiv+1
  1180  000AFA  C118  F13B         	movff	??_measure_inductance+24,?___fldiv+2
  1181  000AFE  C119  F13C         	movff	??_measure_inductance+25,?___fldiv+3
  1182  000B02  ECD0  F00E         	call	___fldiv	;wreg free
  1183  000B06  C139  F155         	movff	?___fldiv,?___flmul
  1184  000B0A  C13A  F156         	movff	?___fldiv+1,?___flmul+1
  1185  000B0E  C13B  F157         	movff	?___fldiv+2,?___flmul+2
  1186  000B12  C13C  F158         	movff	?___fldiv+3,?___flmul+3
  1187  000B16  0EA9               	movlw	169
  1188  000B18  6F59               	movwf	(?___flmul+4)& (0+255),b
  1189  000B1A  0E5F               	movlw	95
  1190  000B1C  6F5A               	movwf	(?___flmul+5)& (0+255),b
  1191  000B1E  0E63               	movlw	99
  1192  000B20  6F5B               	movwf	(?___flmul+6)& (0+255),b
  1193  000B22  0E58               	movlw	88
  1194  000B24  6F5C               	movwf	(?___flmul+7)& (0+255),b
  1195  000B26  EC50  F00D         	call	___flmul	;wreg free
  1196  000B2A  C155  F11A         	movff	?___flmul,??_measure_inductance+26
  1197  000B2E  C156  F11B         	movff	?___flmul+1,??_measure_inductance+27
  1198  000B32  C157  F11C         	movff	?___flmul+2,??_measure_inductance+28
  1199  000B36  C158  F11D         	movff	?___flmul+3,??_measure_inductance+29
  1200                           ;measure.c: 218: if(Lin > 999) {
  1201  000B3A  C11A  F147         	movff	??_measure_inductance+26,?___flge+4
  1202  000B3E  C11B  F148         	movff	??_measure_inductance+27,?___flge+5
  1203  000B42  C11C  F149         	movff	??_measure_inductance+28,?___flge+6
  1204  000B46  C11D  F14A         	movff	??_measure_inductance+29,?___flge+7
  1205  000B4A  6B43               	clrf	?___flge& (0+255),b
  1206  000B4C  0EC0               	movlw	192
  1207  000B4E  6F44               	movwf	(?___flge+1)& (0+255),b
  1208  000B50  0E79               	movlw	121
  1209  000B52  6F45               	movwf	(?___flge+2)& (0+255),b
  1210  000B54  0E44               	movlw	68
  1211  000B56  6F46               	movwf	(?___flge+3)& (0+255),b
  1212  000B58  EC4C  F012         	call	___flge	;wreg free
  1213  000B5C  E253               	bc	l1715
  1214                           ;measure.c: 219: if(Lin > (999e+03l)) {
  1215  000B5E  C11A  F147         	movff	??_measure_inductance+26,?___flge+4
  1216  000B62  C11B  F148         	movff	??_measure_inductance+27,?___flge+5
  1217  000B66  C11C  F149         	movff	??_measure_inductance+28,?___flge+6
  1218  000B6A  C11D  F14A         	movff	??_measure_inductance+29,?___flge+7
  1219  000B6E  0E80               	movlw	128
  1220  000B70  6F43               	movwf	?___flge& (0+255),b
  1221  000B72  0EE5               	movlw	229
  1222  000B74  6F44               	movwf	(?___flge+1)& (0+255),b
  1223  000B76  0E73               	movlw	115
  1224  000B78  6F45               	movwf	(?___flge+2)& (0+255),b
  1225  000B7A  0E49               	movlw	73
  1226  000B7C  6F46               	movwf	(?___flge+3)& (0+255),b
  1227  000B7E  EC4C  F012         	call	___flge	;wreg free
  1228  000B82  E232               	bc	l1716
  1229                           ;measure.c: 220: if(Lin > (999e+06l)) {
  1230  000B84  C11A  F147         	movff	??_measure_inductance+26,?___flge+4
  1231  000B88  C11B  F148         	movff	??_measure_inductance+27,?___flge+5
  1232  000B8C  C11C  F149         	movff	??_measure_inductance+28,?___flge+6
  1233  000B90  C11D  F14A         	movff	??_measure_inductance+29,?___flge+7
  1234  000B94  0E1F               	movlw	31
  1235  000B96  6F43               	movwf	?___flge& (0+255),b
  1236  000B98  0E2E               	movlw	46
  1237  000B9A  6F44               	movwf	(?___flge+1)& (0+255),b
  1238  000B9C  0E6E               	movlw	110
  1239  000B9E  6F45               	movwf	(?___flge+2)& (0+255),b
  1240  000BA0  0E4E               	movlw	78
  1241  000BA2  6F46               	movwf	(?___flge+3)& (0+255),b
  1242  000BA4  EC4C  F012         	call	___flge	;wreg free
  1243  000BA8  E210               	bc	l1717
  1244                           ;measure.c: 221: Lin = Lin / (1e+09l);
  1245  000BAA  0E28               	movlw	40
  1246  000BAC  6F20               	movwf	(?___asfldiv+2)& (0+255),b
  1247  000BAE  0E6B               	movlw	107
  1248  000BB0  6F21               	movwf	(?___asfldiv+3)& (0+255),b
  1249  000BB2  0E6E               	movlw	110
  1250  000BB4  6F22               	movwf	(?___asfldiv+4)& (0+255),b
  1251  000BB6  0E4E               	movlw	78
  1252  000BB8  6F23               	movwf	(?___asfldiv+5)& (0+255),b
  1253  000BBA  0E1A               	movlw	low (??_measure_inductance+26)
  1254  000BBC  6F1E               	movwf	?___asfldiv& (0+255),b
  1255  000BBE  0E01               	movlw	high (??_measure_inductance+26)
  1256  000BC0  6F1F               	movwf	(?___asfldiv+1)& (0+255),b
  1257  000BC2  ECE3  F011         	call	___asfldiv	;wreg free
  1258                           ;measure.c: 222: unit = 0;
  1259  000BC6  6AE1               	clrf	fsr1l,c
  1260                           ;measure.c: 223: } else {
  1261  000BC8  D01F               	goto	l1720
  1262  000BCA                     l1717:
  1263                           ; BSR set to: 1
  1264                           ;measure.c: 224: Lin = Lin / (1e+06l);
  1265  000BCA  6B20               	clrf	(?___asfldiv+2)& (0+255),b
  1266  000BCC  0E24               	movlw	36
  1267  000BCE  6F21               	movwf	(?___asfldiv+3)& (0+255),b
  1268  000BD0  0E74               	movlw	116
  1269  000BD2  6F22               	movwf	(?___asfldiv+4)& (0+255),b
  1270  000BD4  0E49               	movlw	73
  1271  000BD6  6F23               	movwf	(?___asfldiv+5)& (0+255),b
  1272  000BD8  0E1A               	movlw	low (??_measure_inductance+26)
  1273  000BDA  6F1E               	movwf	?___asfldiv& (0+255),b
  1274  000BDC  0E01               	movlw	high (??_measure_inductance+26)
  1275  000BDE  6F1F               	movwf	(?___asfldiv+1)& (0+255),b
  1276  000BE0  ECE3  F011         	call	___asfldiv	;wreg free
  1277                           ;measure.c: 225: unit = 1;
  1278  000BE4  0E01               	movlw	1
  1279  000BE6  D00F               	goto	L4
  1280                           ; BSR set to: 1
  1281                           ;measure.c: 226: }
  1282                           ;measure.c: 227: } else {
  1283  000BE8                     l1716:
  1284                           ; BSR set to: 1
  1285                           ;measure.c: 228: Lin = Lin / 1e+03l;
  1286  000BE8  6B20               	clrf	(?___asfldiv+2)& (0+255),b
  1287  000BEA  6B21               	clrf	(?___asfldiv+3)& (0+255),b
  1288  000BEC  0E7A               	movlw	122
  1289  000BEE  6F22               	movwf	(?___asfldiv+4)& (0+255),b
  1290  000BF0  0E44               	movlw	68
  1291  000BF2  6F23               	movwf	(?___asfldiv+5)& (0+255),b
  1292  000BF4  0E1A               	movlw	low (??_measure_inductance+26)
  1293  000BF6  6F1E               	movwf	?___asfldiv& (0+255),b
  1294  000BF8  0E01               	movlw	high (??_measure_inductance+26)
  1295  000BFA  6F1F               	movwf	(?___asfldiv+1)& (0+255),b
  1296  000BFC  ECE3  F011         	call	___asfldiv	;wreg free
  1297                           ;measure.c: 229: unit = 2;
  1298  000C00  0E02               	movlw	2
  1299  000C02  D001               	goto	L4
  1300                           ; BSR set to: 1
  1301                           ;measure.c: 230: }
  1302                           ;measure.c: 231: } else
  1303  000C04                     l1715:
  1304                           ; BSR set to: 1
  1305                           ;measure.c: 232: unit = 3;
  1306  000C04  0E03               	movlw	3
  1307  000C06                     L4:
  1308  000C06  6EE1               	movwf	fsr1l,c
  1309  000C08                     l1720:
  1310                           ; BSR set to: 1
  1311                           ;measure.c: 234: Lin = Lin * 100;
  1312  000C08  6B3B               	clrf	(?___asflmul+2)& (0+255),b
  1313  000C0A  6B3C               	clrf	(?___asflmul+3)& (0+255),b
  1314  000C0C  0EC8               	movlw	200
  1315  000C0E  6F3D               	movwf	(?___asflmul+4)& (0+255),b
  1316  000C10  0E42               	movlw	66
  1317  000C12  6F3E               	movwf	(?___asflmul+5)& (0+255),b
  1318  000C14  0E1A               	movlw	low (??_measure_inductance+26)
  1319  000C16  6F39               	movwf	?___asflmul& (0+255),b
  1320  000C18  0E01               	movlw	high (??_measure_inductance+26)
  1321  000C1A  6F3A               	movwf	(?___asflmul+1)& (0+255),b
  1322  000C1C  EC06  F012         	call	___asflmul	;wreg free
  1323                           ;measure.c: 235: var = (unsigned short int)Lin;
  1324  000C20  C11A  F143         	movff	??_measure_inductance+26,?___fltol
  1325  000C24  C11B  F144         	movff	??_measure_inductance+27,?___fltol+1
  1326  000C28  C11C  F145         	movff	??_measure_inductance+28,?___fltol+2
  1327  000C2C  C11D  F146         	movff	??_measure_inductance+29,?___fltol+3
  1328  000C30  ECBF  F00F         	call	___fltol	;wreg free
  1329  000C34  C143  F110         	movff	?___fltol,??_measure_inductance+16
  1330  000C38  C144  F111         	movff	?___fltol+1,??_measure_inductance+17
  1331                           ;measure.c: 237: print_reading(var);
  1332  000C3C  C110  F11E         	movff	??_measure_inductance+16,?_print_reading
  1333  000C40  C111  F11F         	movff	??_measure_inductance+17,?_print_reading+
      +                          1
  1334  000C44  EC3C  F013         	call	_print_reading	;wreg free
  1335                           ;measure.c: 238: print_unit(unit);
  1336  000C48  50E1               	movf	fsr1l,w,c
  1337  000C4A  EF3E  F013         	goto	_print_unit
  1338                           ;measure.c: 239: }
  1339                           ; BSR set to: 1
  1340  000C4E                     __end_of_measure_inductance:
  1341                           	opt stack 0
  1342                           
  1343                           	psect	text5
  1344                           ; =============== function _measure_inductance e
      +                          nds ============
  1345                           ; *************** function _timer2_init ********
      +                          *********
  1346                           ; Defined at:
  1347                           ;		line 125 in file "../../../lib/timer.c"
  1348                           ; Parameters:
  1349                           ;		ps_mode        size:   1reg:   wre	type: unsi
      +                          gned char 
  1350                           ; Auto variables:
  1351                           ;		postscaler  	       	type: unsigned char 
  1352                           ;		ps          	       	type: unsigned char 
  1353                           ; Return value:
  1354                           ;		type: void 
  1355                           ;		size: 0
  1356                           ; Registers used:
  1357                           ;		wreg, fsr0l, fsr1l, fsr2l, status,2, status,0
  1358                           ; Tracked objects:
  1359                           ;		On entry : F/1
  1360                           ;		On exit  : F/1
  1361                           ;		Unchanged: FFFFFFF0/0
  1362                           ; Data sizes:
  1363                           ;		Autos:    0
  1364                           ;		Params:   0
  1365                           ;		Temp:     1
  1366                           ;		Total:    1
  1367                           ; This function calls:
  1368                           ;		Nothing
  1369                           ; This function is called by:
  1370                           ;		_main
  1371                           ; This function uses a non-reentrant model
  1372                           ; 
  1373  000000                     
  1374                           ;timer.c: 124: void
  1375                           ;timer.c: 125: timer2_init(unsigned char ps_mode
      +                          ) {
  1376  0025BE                     _timer2_init:
  1377                           	opt stack 29
  1378                           ; BSR set to: 1
  1379                           ; timer2_init@ps_mode loaded to fsr2l
  1380  0025BE  CFE8 FFD9          	movff	wreg,fsr2l
  1381  0025C2  50D9               	movf	fsr2l,w,c
  1382  0025C4  0B0F               	andlw	15
  1383  0025C6  6EE1               	movwf	fsr1l,c
  1384                           ;timer.c: 127: unsigned char postscaler = 0;
  1385  0025C8  6AE9               	clrf	fsr0l,c
  1386                           ;timer.c: 130: T2CON &= ~0b01111111;
  1387  0025CA  0E80               	movlw	128
  1388  0025CC  16CA               	andwf	4042,f,c	;volatile
  1389  0025CE  50CA               	movf	4042,w,c	;volatile
  1390                           ;timer.c: 133: T2CON |= (ps & 0b11);
  1391  0025D0  50E1               	movf	fsr1l,w,c
  1392  0025D2  0B03               	andlw	3
  1393  0025D4  12CA               	iorwf	4042,f,c	;volatile
  1394                           ;timer.c: 135: TMR2 = 0;
  1395  0025D6  6ACC               	clrf	4044,c	;volatile
  1396                           ;timer.c: 137: T2CON |= 0b100;
  1397  0025D8  84CA               	bsf	4042,2,c	;volatile
  1398                           ;timer.c: 140: PIR1 &= ~0b10;
  1399  0025DA  929E               	bcf	3998,1,c	;volatile
  1400                           ;timer.c: 141: PIE1 = (!!(ps_mode & 0x80)) << 1;
  1401  0025DC  AED9               	btfss	fsr2l,7,c
  1402  0025DE  D002               	goto	u1320
  1403  0025E0  0E01               	movlw	1
  1404  0025E2  D001               	goto	u1326
  1405  0025E4                     u1320:
  1406  0025E4  0E00               	movlw	0
  1407  0025E6                     u1326:
  1408  0025E6  6F00               	movwf	??_timer2_init& (0+255),b
  1409  0025E8  90D8               	bcf	status,0,c
  1410  0025EA  3500               	rlcf	??_timer2_init& (0+255),w,b
  1411  0025EC  6E9D               	movwf	3997,c	;volatile
  1412                           ;timer.c: 142: }
  1413                           ; BSR set to: 1
  1414  0025EE  0012               	return	
  1415  0025F0                     __end_of_timer2_init:
  1416                           	opt stack 0
  1417                           
  1418                           	psect	text6
  1419                           ; =============== function _timer2_init ends ===
      +                          =========
  1420                           ; *************** function _timer0_init ********
      +                          *********
  1421                           ; Defined at:
  1422                           ;		line 27 in file "../../../lib/timer.c"
  1423                           ; Parameters:
  1424                           ;		ps_mode        size:   1reg:   wre	type: unsi
      +                          gned char 
  1425                           ; Auto variables:
  1426                           ;		prescaler   	       	type: unsigned char 
  1427                           ; Return value:
  1428                           ;		type: void 
  1429                           ;		size: 0
  1430                           ; Registers used:
  1431                           ;		wreg, fsr1l, fsr2l, status,2, status,0
  1432                           ; Tracked objects:
  1433                           ;		On entry : 0/0
  1434                           ;		On exit  : F/1
  1435                           ;		Unchanged: FFFFFFF0/0
  1436                           ; Data sizes:
  1437                           ;		Autos:    4
  1438                           ;		Params:   0
  1439                           ;		Temp:     0
  1440                           ;		Total:    4
  1441                           ; This function calls:
  1442                           ;		Nothing
  1443                           ; This function is called by:
  1444                           ;		_main
  1445                           ; This function uses a non-reentrant model
  1446                           ; 
  1447  000000                     
  1448                           ;timer.c: 26: void
  1449                           ;timer.c: 27: timer0_init(unsigned char ps_mode)
      +                           {
  1450  0021EE                     _timer0_init:
  1451                           	opt stack 29
  1452                           ; BSR set to: ?
  1453                           ; timer0_init@ps_mode loaded to fsr2l
  1454  0021EE  CFE8 FFD9          	movff	wreg,fsr2l
  1455  0021F2  50D9               	movf	fsr2l,w,c
  1456  0021F4  0B0F               	andlw	15
  1457  0021F6  6EE1               	movwf	fsr1l,c
  1458                           ;timer.c: 30: TMR0 = 0;
  1459  0021F8  6AD6               	clrf	4054,c	;volatile
  1460  0021FA  6AD7               	clrf	4055,c	;volatile
  1461                           ;timer.c: 33: T0CON |= (!!(ps_mode & 0x40)) ? 0x
      +                          20 : 0x00;
  1462  0021FC  0101               	movlb	1	; () banked
  1463  0021FE  6B00               	clrf	??_timer0_init& (0+255),b
  1464  002200  ACD9               	btfss	fsr2l,6,c
  1465  002202  D002               	goto	l500000604
  1466  002204  0E20               	movlw	32
  1467  002206  6F00               	movwf	??_timer0_init& (0+255),b
  1468  002208                     l500000604:
  1469                           ; BSR set to: 1
  1470  002208  5100               	movf	??_timer0_init& (0+255),w,b
  1471  00220A  12D5               	iorwf	4053,f,c	;volatile
  1472                           ;timer.c: 36: T0CON |= (!!(ps_mode & 0x10)) ? 0x
      +                          10 : 0x00;
  1473  00220C  6B01               	clrf	(??_timer0_init+1)& (0+255),b
  1474  00220E  A8D9               	btfss	fsr2l,4,c
  1475  002210  D002               	goto	l500000605
  1476  002212  0E10               	movlw	16
  1477  002214  6F01               	movwf	(??_timer0_init+1)& (0+255),b
  1478  002216                     l500000605:
  1479                           ; BSR set to: 1
  1480  002216  5101               	movf	(??_timer0_init+1)& (0+255),w,b
  1481  002218  12D5               	iorwf	4053,f,c	;volatile
  1482                           ;timer.c: 39: T0CON &= (!!prescaler) ? ~0x08 : ~
      +                          0x00;
  1483  00221A  6902               	setf	(??_timer0_init+2)& (0+255),b
  1484  00221C  50E1               	movf	fsr1l,w,c
  1485  00221E  E002               	bz	l500000606
  1486  002220  0EF7               	movlw	247
  1487  002222  6F02               	movwf	(??_timer0_init+2)& (0+255),b
  1488  002224                     l500000606:
  1489                           ; BSR set to: 1
  1490  002224  5102               	movf	(??_timer0_init+2)& (0+255),w,b
  1491  002226  16D5               	andwf	4053,f,c	;volatile
  1492                           ;timer.c: 41: T0CON &= ~0b111;
  1493  002228  0EF8               	movlw	248
  1494  00222A  16D5               	andwf	4053,f,c	;volatile
  1495                           ;timer.c: 43: if(prescaler > 0) {
  1496  00222C  50E1               	movf	fsr1l,w,c
  1497  00222E  E003               	bz	l717
  1498                           ;timer.c: 44: T0CON |= (prescaler - 1) & 0b111;
  1499  002230  04E1               	decf	fsr1l,w,c
  1500  002232  0B07               	andlw	7
  1501  002234  12D5               	iorwf	4053,f,c	;volatile
  1502  002236                     l717:
  1503                           ; BSR set to: 1
  1504                           ;timer.c: 50: }
  1505                           ;timer.c: 54: INTCON &= ~0x40;
  1506  002236  9CF2               	bcf	intcon,6,c	;volatile
  1507                           ;timer.c: 55: INTCON |= (!!(ps_mode & 0x80)) ? 0
      +                          x20 : 0x00;
  1508  002238  6B03               	clrf	(??_timer0_init+3)& (0+255),b
  1509  00223A  AED9               	btfss	fsr2l,7,c
  1510  00223C  D002               	goto	l500000607
  1511  00223E  0E20               	movlw	32
  1512  002240  6F03               	movwf	(??_timer0_init+3)& (0+255),b
  1513  002242                     l500000607:
  1514                           ; BSR set to: 1
  1515  002242  5103               	movf	(??_timer0_init+3)& (0+255),w,b
  1516  002244  12F2               	iorwf	intcon,f,c	;volatile
  1517                           ;timer.c: 56: }
  1518                           ; BSR set to: 1
  1519  002246  0012               	return	
  1520  002248                     __end_of_timer0_init:
  1521                           	opt stack 0
  1522                           
  1523                           	psect	text7
  1524                           ; =============== function _timer0_init ends ===
      +                          =========
  1525                           ; *************** function _ser_init ***********
      +                          ******
  1526                           ; Defined at:
  1527                           ;		line 125 in file "../../../lib/ser.c"
  1528                           ; Parameters:
  1529                           ;		None
  1530                           ; Auto variables:
  1531                           ;		None
  1532                           ; Return value:
  1533                           ;		type: void 
  1534                           ;		size: 0
  1535                           ; Registers used:
  1536                           ;		wreg, status,2
  1537                           ; Tracked objects:
  1538                           ;		On entry : F/1
  1539                           ;		On exit  : F/1
  1540                           ;		Unchanged: FFFFFFFF/0
  1541                           ; Data sizes:
  1542                           ;		Autos:    0
  1543                           ;		Params:   0
  1544                           ;		Temp:     0
  1545                           ;		Total:    0
  1546                           ; This function calls:
  1547                           ;		Nothing
  1548                           ; This function is called by:
  1549                           ;		_main
  1550                           ; This function uses a non-reentrant model
  1551                           ; 
  1552  000000                     
  1553                           ;ser.c: 124: void
  1554                           ;ser.c: 125: ser_init(void) {
  1555  00263E                     _ser_init:
  1556                           	opt stack 29
  1557                           ; BSR set to: 1
  1558  00263E  8C94               	bsf	3988,6,c	;volatile
  1559                           ;ser.c: 129: LATC7 = 1;
  1560  002640  8E8B               	bsf	3979,7,c	;volatile
  1561                           ;ser.c: 131: BRGH = 1;
  1562  002642  84AC               	bsf	4012,2,c	;volatile
  1563                           ;ser.c: 136: SPBRG = ser_brg;
  1564  002644  0E1F               	movlw	31
  1565  002646  6EAF               	movwf	4015,c	;volatile
  1566                           ;ser.c: 139: TX9 = 0;
  1567  002648  9CAC               	bcf	4012,6,c	;volatile
  1568                           ;ser.c: 140: RX9 = 0;
  1569  00264A  9CAB               	bcf	4011,6,c	;volatile
  1570                           ;ser.c: 142: SYNC = 0;
  1571  00264C  98AC               	bcf	4012,4,c	;volatile
  1572                           ;ser.c: 143: SPEN = 1;
  1573  00264E  8EAB               	bsf	4011,7,c	;volatile
  1574                           ;ser.c: 144: CREN = 1;
  1575  002650  88AB               	bsf	4011,4,c	;volatile
  1576                           ;ser.c: 145: TXIE = 0;
  1577  002652  989D               	bcf	3997,4,c	;volatile
  1578                           ;ser.c: 147: TXEN = 1;
  1579  002654  8AAC               	bsf	4012,5,c	;volatile
  1580                           ;ser.c: 148: PEIE = 1;
  1581  002656  8CF2               	bsf	intcon,6,c	;volatile
  1582                           ;ser.c: 150: rxiptr = rxoptr = txiptr = txoptr =
      +                           0;
  1583  002658  6A49               	clrf	73,c	;volatile
  1584  00265A  6A47               	clrf	71,c	;volatile
  1585  00265C  6A4A               	clrf	74,c	;volatile
  1586  00265E  6A48               	clrf	72,c	;volatile
  1587                           ;ser.c: 151: }
  1588                           ; BSR set to: 1
  1589  002660  0012               	return	
  1590  002662                     __end_of_ser_init:
  1591                           	opt stack 0
  1592                           
  1593                           	psect	text8
  1594                           ; =============== function _ser_init ends ======
      +                          ======
  1595                           ; *************** function _format_double ******
      +                          ***********
  1596                           ; Defined at:
  1597                           ;		line 75 in file "../../../lib/format.c"
  1598                           ; Parameters:
  1599                           ;		num            size:   4offs:   0	type: void 
  1600                           ; Auto variables:
  1601                           ;		digit       	       	type: short 
  1602                           ;		m           	       	type: short 
  1603                           ;		weight      	       	type: short 
  1604                           ; Return value:
  1605                           ;		type: void 
  1606                           ;		size: 0
  1607                           ; Registers used:
  1608                           ;		wreg, fsr0l, fsr0h, fsr1l, fsr2l, status,2, s
      +                          tatus,0, tblptrl, tblptrh, tblptru, tablat, prod
      +                          l, prodh, cstack
  1609                           ; Tracked objects:
  1610                           ;		On entry : F/1
  1611                           ;		On exit  : F/1
  1612                           ;		Unchanged: FFFFFFF0/0
  1613                           ; Data sizes:
  1614                           ;		Autos:   16
  1615                           ;		Params:   4
  1616                           ;		Temp:     0
  1617                           ;		Total:   20
  1618                           ; This function calls:
  1619                           ;		_log10
  1620                           ;		___fltol
  1621                           ;		___awtofl
  1622                           ;		_pow
  1623                           ;		___fldiv
  1624                           ;		_floor
  1625                           ;		___flmul
  1626                           ;		___asflsub
  1627                           ;		_buffer_putch
  1628                           ;		___flge
  1629                           ; This function is called by:
  1630                           ;		_measure_capacitance
  1631                           ; This function uses a non-reentrant model
  1632                           ; 
  1633  000000                     
  1634                           ;format.c: 74: void
  1635                           ;format.c: 75: format_double(double num) {
  1636  0011A0                     _format_double:
  1637                           	opt stack 28
  1638                           ; BSR set to: 1
  1639                           ;format.c: 76: short m = (short)log10(num);
  1640  0011A0  C10E  F122         	movff	?_format_double,?_log10
  1641  0011A4  C10F  F123         	movff	?_format_double+1,?_log10+1
  1642  0011A8  C110  F124         	movff	?_format_double+2,?_log10+2
  1643  0011AC  C111  F125         	movff	?_format_double+3,?_log10+3
  1644  0011B0  ECBE  F011         	call	_log10	;wreg free
  1645  0011B4  C122  F143         	movff	?_log10,?___fltol
  1646  0011B8  C123  F144         	movff	?_log10+1,?___fltol+1
  1647  0011BC  C124  F145         	movff	?_log10+2,?___fltol+2
  1648  0011C0  C125  F146         	movff	?_log10+3,?___fltol+3
  1649  0011C4  ECBF  F00F         	call	___fltol	;wreg free
  1650  0011C8  C143  F11C         	movff	?___fltol,??_format_double+10
  1651  0011CC  C144  F11D         	movff	?___fltol+1,??_format_double+11
  1652                           ;format.c: 77: short digit;
  1653                           ;format.c: 80: while(num > 0 + 1.19209290e-07) {
  1654  0011D0                     l482:
  1655                           ; BSR set to: 1
  1656  0011D0  C10E  F147         	movff	?_format_double,?___flge+4
  1657  0011D4  C10F  F148         	movff	?_format_double+1,?___flge+5
  1658  0011D8  C110  F149         	movff	?_format_double+2,?___flge+6
  1659  0011DC  C111  F14A         	movff	?_format_double+3,?___flge+7
  1660  0011E0  6B43               	clrf	?___flge& (0+255),b
  1661  0011E2  6B44               	clrf	(?___flge+1)& (0+255),b
  1662  0011E4  6B45               	clrf	(?___flge+2)& (0+255),b
  1663  0011E6  0E34               	movlw	52
  1664  0011E8  6F46               	movwf	(?___flge+3)& (0+255),b
  1665  0011EA  EC4C  F012         	call	___flge	;wreg free
  1666  0011EE  E301 D08C          	bc	u2800
  1667                           ; BSR set to: 1
  1668                           ;format.c: 81: double weight = pow(10.0l, m);
  1669  0011F2  C11C  F145         	movff	??_format_double+10,?___awtofl
  1670  0011F6  C11D  F146         	movff	??_format_double+11,?___awtofl+1
  1671  0011FA  EC4B  F010         	call	___awtofl	;wreg free
  1672  0011FE  C145  F126         	movff	?___awtofl,?_pow+4
  1673  001202  C146  F127         	movff	?___awtofl+1,?_pow+5
  1674  001206  C147  F128         	movff	?___awtofl+2,?_pow+6
  1675  00120A  C148  F129         	movff	?___awtofl+3,?_pow+7
  1676  00120E  6B22               	clrf	?_pow& (0+255),b
  1677  001210  6B23               	clrf	(?_pow+1)& (0+255),b
  1678  001212  0E20               	movlw	32
  1679  001214  6F24               	movwf	(?_pow+2)& (0+255),b
  1680  001216  0E41               	movlw	65
  1681  001218  6F25               	movwf	(?_pow+3)& (0+255),b
  1682  00121A  EC36  F00A         	call	_pow	;wreg free
  1683  00121E  C122  F11E         	movff	?_pow,??_format_double+12
  1684  001222  C123  F11F         	movff	?_pow+1,??_format_double+13
  1685  001226  C124  F120         	movff	?_pow+2,??_format_double+14
  1686  00122A  C125  F121         	movff	?_pow+3,??_format_double+15
  1687                           ;format.c: 82: digit = (short)floor(num / weight
      +                          );
  1688  00122E  C11E  F13D         	movff	??_format_double+12,?___fldiv+4
  1689  001232  C11F  F13E         	movff	??_format_double+13,?___fldiv+5
  1690  001236  C120  F13F         	movff	??_format_double+14,?___fldiv+6
  1691  00123A  C121  F140         	movff	??_format_double+15,?___fldiv+7
  1692  00123E  C10E  F139         	movff	?_format_double,?___fldiv
  1693  001242  C10F  F13A         	movff	?_format_double+1,?___fldiv+1
  1694  001246  C110  F13B         	movff	?_format_double+2,?___fldiv+2
  1695  00124A  C111  F13C         	movff	?_format_double+3,?___fldiv+3
  1696  00124E  ECD0  F00E         	call	___fldiv	;wreg free
  1697  001252  C139  F139         	movff	?___fldiv,?_floor
  1698  001256  C13A  F13A         	movff	?___fldiv+1,?_floor+1
  1699  00125A  C13B  F13B         	movff	?___fldiv+2,?_floor+2
  1700  00125E  C13C  F13C         	movff	?___fldiv+3,?_floor+3
  1701  001262  EC02  F00C         	call	_floor	;wreg free
  1702  001266  C139  F143         	movff	?_floor,?___fltol
  1703  00126A  C13A  F144         	movff	?_floor+1,?___fltol+1
  1704  00126E  C13B  F145         	movff	?_floor+2,?___fltol+2
  1705  001272  C13C  F146         	movff	?_floor+3,?___fltol+3
  1706  001276  ECBF  F00F         	call	___fltol	;wreg free
  1707  00127A  C143  F11A         	movff	?___fltol,??_format_double+8
  1708  00127E  C144  F11B         	movff	?___fltol+1,??_format_double+9
  1709                           ;format.c: 83: num -= (digit * weight);
  1710  001282  C11A  F145         	movff	??_format_double+8,?___awtofl
  1711  001286  C11B  F146         	movff	??_format_double+9,?___awtofl+1
  1712  00128A  EC4B  F010         	call	___awtofl	;wreg free
  1713  00128E  C145  F112         	movff	?___awtofl,??_format_double
  1714  001292  C146  F113         	movff	?___awtofl+1,??_format_double+1
  1715  001296  C147  F114         	movff	?___awtofl+2,??_format_double+2
  1716  00129A  C148  F115         	movff	?___awtofl+3,??_format_double+3
  1717  00129E  C112  F155         	movff	??_format_double,?___flmul
  1718  0012A2  C113  F156         	movff	??_format_double+1,?___flmul+1
  1719  0012A6  C114  F157         	movff	??_format_double+2,?___flmul+2
  1720  0012AA  C115  F158         	movff	??_format_double+3,?___flmul+3
  1721  0012AE  C11E  F159         	movff	??_format_double+12,?___flmul+4
  1722  0012B2  C11F  F15A         	movff	??_format_double+13,?___flmul+5
  1723  0012B6  C120  F15B         	movff	??_format_double+14,?___flmul+6
  1724  0012BA  C121  F15C         	movff	??_format_double+15,?___flmul+7
  1725  0012BE  EC50  F00D         	call	___flmul	;wreg free
  1726  0012C2  C155  F116         	movff	?___flmul,??_format_double+4
  1727  0012C6  C156  F117         	movff	?___flmul+1,??_format_double+5
  1728  0012CA  C157  F118         	movff	?___flmul+2,??_format_double+6
  1729  0012CE  C158  F119         	movff	?___flmul+3,??_format_double+7
  1730  0012D2  C116  F13B         	movff	??_format_double+4,?___asflsub+2
  1731  0012D6  C117  F13C         	movff	??_format_double+5,?___asflsub+3
  1732  0012DA  C118  F13D         	movff	??_format_double+6,?___asflsub+4
  1733  0012DE  C119  F13E         	movff	??_format_double+7,?___asflsub+5
  1734  0012E2  0E0E               	movlw	low ?_format_double
  1735  0012E4  6F39               	movwf	?___asflsub& (0+255),b
  1736  0012E6  0E01               	movlw	high ?_format_double
  1737  0012E8  6F3A               	movwf	(?___asflsub+1)& (0+255),b
  1738  0012EA  EC29  F012         	call	___asflsub	;wreg free
  1739                           ;format.c: 84: buffer_putch((char)('0' + digit))
      +                          ;
  1740  0012EE  511A               	movf	(??_format_double+8)& (0+255),w,b
  1741  0012F0  0F30               	addlw	48
  1742  0012F2  EC4E  F011         	call	_buffer_putch
  1743                           ;format.c: 85: if(m == 0)
  1744  0012F6  511D               	movf	(??_format_double+11)& (0+255),w,b
  1745  0012F8  111C               	iorwf	(??_format_double+10)& (0+255),w,b
  1746  0012FA  E103               	bnz	l485
  1747                           ;format.c: 86: buffer_putch('.');
  1748  0012FC  0E2E               	movlw	46
  1749  0012FE  EC4E  F011         	call	_buffer_putch
  1750  001302                     l485:
  1751                           ; BSR set to: 1
  1752                           ;format.c: 87: m--;
  1753  001302  071C               	decf	(??_format_double+10)& (0+255),f,b
  1754  001304  A0D8               	btfss	status,0,c
  1755  001306  071D               	decf	(??_format_double+11)& (0+255),f,b
  1756  001308  D763               	goto	l482
  1757  00130A                     u2800:
  1758                           ; BSR set to: 1
  1759                           ;format.c: 88: }
  1760                           ;format.c: 89: }
  1761                           ; BSR set to: 1
  1762  00130A  0012               	return	
  1763  00130C                     __end_of_format_double:
  1764                           	opt stack 0
  1765                           
  1766                           	psect	text9
  1767                           ; =============== function _format_double ends =
      +                          ===========
  1768                           ; *************** function ___asfldiv **********
      +                          *******
  1769                           ; Defined at:
  1770                           ;		line 5 in file "C:\Program Files (x86)\HI-TEC
      +                          H Software\PICC-18\PRO\9.66\sources\asfldiv.c"
  1771                           ; Parameters:
  1772                           ;		f1p            size:   2offs:   0	type: PTR ;
      +                           Largest target is 4
  1773                           ;		 -> measure_inductance@Lin(4), measure_capaci
      +                          tance@Cin(4), 
  1774                           ;		f2             size:   4offs:   2	type: PTR 
  1775                           ; Auto variables:
  1776                           ;		None
  1777                           ; Return value:
  1778                           ;		type: PTR 
  1779                           ;		size: 4
  1780                           ; Registers used:
  1781                           ;		wreg, fsr0l, fsr0h, fsr2l, status,2, status,0
      +                          , prodl, prodh, cstack
  1782                           ; Tracked objects:
  1783                           ;		On entry : F/1
  1784                           ;		On exit  : F/1
  1785                           ;		Unchanged: FFFFFFF0/0
  1786                           ; Data sizes:
  1787                           ;		Autos:    0
  1788                           ;		Params:   6
  1789                           ;		Temp:     0
  1790                           ;		Total:    6
  1791                           ; This function calls:
  1792                           ;		___fldiv
  1793                           ; This function is called by:
  1794                           ;		_measure_capacitance
  1795                           ;		_measure_inductance
  1796                           ; This function uses a non-reentrant model
  1797                           ; 
  1798  000000                     
  1799  0023C6                     ___asfldiv:
  1800                           	opt stack 28
  1801                           ; BSR set to: 1
  1802  0023C6  C120  F13D         	movff	?___asfldiv+2,?___fldiv+4
  1803  0023CA  C121  F13E         	movff	?___asfldiv+3,?___fldiv+5
  1804  0023CE  C122  F13F         	movff	?___asfldiv+4,?___fldiv+6
  1805  0023D2  C123  F140         	movff	?___asfldiv+5,?___fldiv+7
  1806  0023D6  C11E  FFE9         	movff	?___asfldiv,fsr0l
  1807  0023DA  C11F  FFEA         	movff	?___asfldiv+1,fsr0h
  1808  0023DE  CFEE F139          	movff	postinc0,?___fldiv
  1809  0023E2  CFEE F13A          	movff	postinc0,?___fldiv+1
  1810  0023E6  CFEE F13B          	movff	postinc0,?___fldiv+2
  1811  0023EA  CFEE F13C          	movff	postinc0,?___fldiv+3
  1812  0023EE  ECD0  F00E         	call	___fldiv	;wreg free
  1813  0023F2  C11E  FFE9         	movff	?___asfldiv,fsr0l
  1814  0023F6  C11F  FFEA         	movff	?___asfldiv+1,fsr0h
  1815  0023FA  C139  FFEE         	movff	?___fldiv,postinc0
  1816  0023FE  C13A  FFEE         	movff	?___fldiv+1,postinc0
  1817  002402  C13B  FFEE         	movff	?___fldiv+2,postinc0
  1818  002406  C13C  FFED         	movff	?___fldiv+3,postdec0
  1819                           ; BSR set to: 1
  1820  00240A  0012               	return	
  1821  00240C                     __end_of___asfldiv:
  1822                           	opt stack 0
  1823                           
  1824                           	psect	text10
  1825                           ; =============== function ___asfldiv ends =====
      +                          =======
  1826                           ; *************** function _format_xint32 ******
      +                          ***********
  1827                           ; Defined at:
  1828                           ;		line 49 in file "../../../lib/format.c"
  1829                           ; Parameters:
  1830                           ;		x              size:   4offs:   0	type: unsig
      +                          ned long 
  1831                           ; Auto variables:
  1832                           ;		None
  1833                           ; Return value:
  1834                           ;		type: void 
  1835                           ;		size: 0
  1836                           ; Registers used:
  1837                           ;		wreg, fsr0l, fsr0h, fsr1l, fsr2l, status,2, s
      +                          tatus,0, prodl, prodh, cstack
  1838                           ; Tracked objects:
  1839                           ;		On entry : F/1
  1840                           ;		On exit  : F/1
  1841                           ;		Unchanged: FFFFFFF0/0
  1842                           ; Data sizes:
  1843                           ;		Autos:    0
  1844                           ;		Params:   4
  1845                           ;		Temp:     0
  1846                           ;		Total:    4
  1847                           ; This function calls:
  1848                           ;		_buffer_putch
  1849                           ;		_format_number
  1850                           ; This function is called by:
  1851                           ;		_measure_capacitance
  1852                           ; This function uses a non-reentrant model
  1853                           ; 
  1854  000000                     
  1855                           ;format.c: 48: void
  1856                           ;format.c: 49: format_xint32( unsigned long int 
      +                          x) {
  1857  00258A                     _format_xint32:
  1858                           	opt stack 28
  1859                           ; BSR set to: 1
  1860  00258A  0E30               	movlw	48
  1861  00258C  EC4E  F011         	call	_buffer_putch
  1862                           ;format.c: 51: buffer_putch('x');
  1863  002590  0E78               	movlw	120
  1864  002592  EC4E  F011         	call	_buffer_putch
  1865                           ;format.c: 52: format_number((unsigned short int
      +                          )(x >> 16), 16, -4);
  1866  002596  0EFC               	movlw	252
  1867  002598  6F15               	movwf	(?_format_number+3)& (0+255),b
  1868  00259A  0E10               	movlw	16
  1869  00259C  6F14               	movwf	(?_format_number+2)& (0+255),b
  1870  00259E  C110  F112         	movff	?_format_xint32+2,?_format_number
  1871  0025A2  C111  F113         	movff	?_format_xint32+3,?_format_number+1
  1872  0025A6  EC18  F00E         	call	_format_number	;wreg free
  1873                           ;format.c: 53: format_number((unsigned short int
      +                          )(x & 0xffff), 16, -4);
  1874  0025AA  0EFC               	movlw	252
  1875  0025AC  6F15               	movwf	(?_format_number+3)& (0+255),b
  1876  0025AE  0E10               	movlw	16
  1877  0025B0  6F14               	movwf	(?_format_number+2)& (0+255),b
  1878  0025B2  C10E  F112         	movff	?_format_xint32,?_format_number
  1879  0025B6  C10F  F113         	movff	?_format_xint32+1,?_format_number+1
  1880  0025BA  EF18  F00E         	goto	_format_number	;wreg free
  1881                           ;format.c: 54: }
  1882                           ; BSR set to: 1
  1883  0025BE                     __end_of_format_xint32:
  1884                           	opt stack 0
  1885                           
  1886                           	psect	text11
  1887                           ; =============== function _format_xint32 ends =
      +                          ===========
  1888                           ; *************** function _ser_puts ***********
      +                          ******
  1889                           ; Defined at:
  1890                           ;		line 92 in file "../../../lib/ser.c"
  1891                           ; Parameters:
  1892                           ;		s              size:   1reg:   wre	type: PTR 
      +                          const unsigned char ; Largest target is 8
  1893                           ;		 -> STR_11(3), STR_10(5), STR_9(3), STR_8(8),
      +                           
  1894                           ;		 -> STR_7(6), STR_6(6), STR_5(6), STR_4(5), 
  1895                           ;		 -> STR_3(3), STR_2(3), STR_1(6), 
  1896                           ; Auto variables:
  1897                           ;		None
  1898                           ; Return value:
  1899                           ;		type: void 
  1900                           ;		size: 0
  1901                           ; Registers used:
  1902                           ;		wreg, fsr0l, fsr0h, fsr1l, fsr2l, status,2, s
      +                          tatus,0, tblptrl, tblptrh, tblptru, tablat, csta
      +                          ck
  1903                           ; Tracked objects:
  1904                           ;		On entry : F/1
  1905                           ;		On exit  : F/1
  1906                           ;		Unchanged: FFFFFFFF/0
  1907                           ; Data sizes:
  1908                           ;		Autos:    0
  1909                           ;		Params:   0
  1910                           ;		Temp:     0
  1911                           ;		Total:    0
  1912                           ; This function calls:
  1913                           ;		_ser_putch
  1914                           ; This function is called by:
  1915                           ;		_main
  1916                           ;		_calibrate
  1917                           ;		_measure_capacitance
  1918                           ; This function uses a non-reentrant model
  1919                           ; 
  1920  000000                     
  1921                           ;ser.c: 91: void
  1922                           ;ser.c: 92: ser_puts(const char* s) {
  1923  0025F0                     _ser_puts:
  1924                           	opt stack 28
  1925                           ; BSR set to: 1
  1926                           ; ser_puts@s loaded to fsr1l
  1927  0025F0  CFE8 FFE1          	movff	wreg,fsr1l
  1928  0025F4                     l1455:
  1929                           ; BSR set to: ?
  1930  0025F4  CFE1 FFF6          	movff	fsr1l,tblptrl
  1931  0025F8  0E08               	movlw	high __Lsmallconst
  1932  0025FA  6EF7               	movwf	tblptrh,c
  1933  0025FC  0008               	tblrd		*
  1934  0025FE  50F5               	movf	tablat,w,c
  1935  002600  E00A               	bz	u2780
  1936                           ; BSR set to: ?
  1937  002602  CFE1 FFF6          	movff	fsr1l,tblptrl
  1938  002606  0E08               	movlw	high __Lsmallconst
  1939  002608  6EF7               	movwf	tblptrh,c
  1940  00260A  0008               	tblrd		*
  1941  00260C  50F5               	movf	tablat,w,c
  1942  00260E  EC0C  F013         	call	_ser_putch
  1943  002612  2AE1               	incf	fsr1l,f,c
  1944  002614  D7EF               	goto	l1455
  1945  002616                     u2780:
  1946                           ; BSR set to: ?
  1947                           ;ser.c: 94: }
  1948                           ; BSR set to: ?
  1949  002616  0012               	return	
  1950  002618                     __end_of_ser_puts:
  1951                           	opt stack 0
  1952                           
  1953                           	psect	text12
  1954                           ; =============== function _ser_puts ends ======
      +                          ======
  1955                           ; *************** function _measure_freq *******
      +                          **********
  1956                           ; Defined at:
  1957                           ;		line 69 in file "../../../src/measure.c"
  1958                           ; Parameters:
  1959                           ;		None
  1960                           ; Auto variables:
  1961                           ;		count       	       	type: unsigned short 
  1962                           ; Return value:
  1963                           ;		type: unsigned short 
  1964                           ;		size: 2
  1965                           ; Registers used:
  1966                           ;		wreg, fsr2l, status,2, status,0, prodl, prodh
      +                          , cstack
  1967                           ; Tracked objects:
  1968                           ;		On entry : F/1
  1969                           ;		On exit  : F/1
  1970                           ;		Unchanged: 0/0
  1971                           ; Data sizes:
  1972                           ;		Autos:    2
  1973                           ;		Params:   2
  1974                           ;		Temp:     1
  1975                           ;		Total:    5
  1976                           ; This function calls:
  1977                           ;		__delay
  1978                           ;		_timer0_read_ps
  1979                           ; This function is called by:
  1980                           ;		_calibrate
  1981                           ;		_measure_capacitance
  1982                           ;		_measure_inductance
  1983                           ; This function uses a non-reentrant model
  1984                           ; 
  1985  000000                     
  1986                           ;measure.c: 68: unsigned short
  1987                           ;measure.c: 69: measure_freq() {
  1988  001718                     _measure_freq:
  1989                           	opt stack 28
  1990                           ; BSR set to: 1
  1991  001718  94F2               	bcf	intcon,2,c	;volatile
  1992                           ;measure.c: 76: TRISA &= ~0b00010000;
  1993  00171A  9892               	bcf	3986,4,c	;volatile
  1994                           ;measure.c: 78: _delay((unsigned long)((20)*(200
      +                          00000/4000.0)));
  1995  00171C  0E82               	movlw	130
  1996  00171E  6F22               	movwf	(??_measure_freq+2)& (0+255),b
  1997  001720  0EDD               	movlw	221
  1998  001722                     u3807:
  1999  001722  2EE8               	decfsz	wreg,f,c
  2000  001724  D7FE               	goto	u3807
  2001  001726  2F22               	decfsz	(??_measure_freq+2)& (0+255),f,b
  2002  001728  D7FC               	goto	u3807
  2003  00172A  D000               	nop2	
  2004                           ;measure.c: 81: TMR0 = 0x00;
  2005  00172C  6AD6               	clrf	4054,c	;volatile
  2006  00172E  6AD7               	clrf	4055,c	;volatile
  2007                           ;measure.c: 83: LATC &= ~0b00000010; LATC |= (!!
      +                          (1)) << 1;;
  2008  001730  928B               	bcf	3979,1,c	;volatile
  2009  001732  828B               	bsf	3979,1,c	;volatile
  2010                           ;measure.c: 86: _delay((unsigned long)((10)*(200
      +                          00000/4000.0)));
  2011  001734  0E41               	movlw	65
  2012  001736  0101               	movlb	1	; () banked
  2013  001738  6F22               	movwf	(??_measure_freq+2)& (0+255),b
  2014  00173A  0EEE               	movlw	238
  2015  00173C                     u3817:
  2016  00173C  2EE8               	decfsz	wreg,f,c
  2017  00173E  D7FE               	goto	u3817
  2018  001740  2F22               	decfsz	(??_measure_freq+2)& (0+255),f,b
  2019  001742  D7FC               	goto	u3817
  2020  001744  0004               	clrwdt	
  2021                           ;measure.c: 87: _delay((unsigned long)((10)*(200
      +                          00000/4000.0)));
  2022  001746  0E41               	movlw	65
  2023  001748  0101               	movlb	1	; () banked
  2024  00174A  6F22               	movwf	(??_measure_freq+2)& (0+255),b
  2025  00174C  0EEE               	movlw	238
  2026  00174E                     u3827:
  2027  00174E  2EE8               	decfsz	wreg,f,c
  2028  001750  D7FE               	goto	u3827
  2029  001752  2F22               	decfsz	(??_measure_freq+2)& (0+255),f,b
  2030  001754  D7FC               	goto	u3827
  2031  001756  0004               	clrwdt	
  2032                           ;measure.c: 88: _delay((unsigned long)((10)*(200
      +                          00000/4000.0)));
  2033  001758  0E41               	movlw	65
  2034  00175A  0101               	movlb	1	; () banked
  2035  00175C  6F22               	movwf	(??_measure_freq+2)& (0+255),b
  2036  00175E  0EEE               	movlw	238
  2037  001760                     u3837:
  2038  001760  2EE8               	decfsz	wreg,f,c
  2039  001762  D7FE               	goto	u3837
  2040  001764  2F22               	decfsz	(??_measure_freq+2)& (0+255),f,b
  2041  001766  D7FC               	goto	u3837
  2042  001768  0004               	clrwdt	
  2043                           ;measure.c: 89: _delay((unsigned long)((10)*(200
      +                          00000/4000.0)));
  2044  00176A  0E41               	movlw	65
  2045  00176C  0101               	movlb	1	; () banked
  2046  00176E  6F22               	movwf	(??_measure_freq+2)& (0+255),b
  2047  001770  0EEE               	movlw	238
  2048  001772                     u3847:
  2049  001772  2EE8               	decfsz	wreg,f,c
  2050  001774  D7FE               	goto	u3847
  2051  001776  2F22               	decfsz	(??_measure_freq+2)& (0+255),f,b
  2052  001778  D7FC               	goto	u3847
  2053  00177A  0004               	clrwdt	
  2054                           ;measure.c: 90: _delay((unsigned long)((10)*(200
      +                          00000/4000.0)));
  2055  00177C  0E41               	movlw	65
  2056  00177E  0101               	movlb	1	; () banked
  2057  001780  6F22               	movwf	(??_measure_freq+2)& (0+255),b
  2058  001782  0EEE               	movlw	238
  2059  001784                     u3857:
  2060  001784  2EE8               	decfsz	wreg,f,c
  2061  001786  D7FE               	goto	u3857
  2062  001788  2F22               	decfsz	(??_measure_freq+2)& (0+255),f,b
  2063  00178A  D7FC               	goto	u3857
  2064  00178C  0004               	clrwdt	
  2065                           ;measure.c: 91: _delay((unsigned long)((10)*(200
      +                          00000/4000.0)));
  2066  00178E  0E41               	movlw	65
  2067  001790  0101               	movlb	1	; () banked
  2068  001792  6F22               	movwf	(??_measure_freq+2)& (0+255),b
  2069  001794  0EEE               	movlw	238
  2070  001796                     u3867:
  2071  001796  2EE8               	decfsz	wreg,f,c
  2072  001798  D7FE               	goto	u3867
  2073  00179A  2F22               	decfsz	(??_measure_freq+2)& (0+255),f,b
  2074  00179C  D7FC               	goto	u3867
  2075  00179E  0004               	clrwdt	
  2076                           ;measure.c: 92: _delay((unsigned long)((10)*(200
      +                          00000/4000.0)));
  2077  0017A0  0E41               	movlw	65
  2078  0017A2  0101               	movlb	1	; () banked
  2079  0017A4  6F22               	movwf	(??_measure_freq+2)& (0+255),b
  2080  0017A6  0EEE               	movlw	238
  2081  0017A8                     u3877:
  2082  0017A8  2EE8               	decfsz	wreg,f,c
  2083  0017AA  D7FE               	goto	u3877
  2084  0017AC  2F22               	decfsz	(??_measure_freq+2)& (0+255),f,b
  2085  0017AE  D7FC               	goto	u3877
  2086  0017B0  0004               	clrwdt	
  2087                           ;measure.c: 93: _delay((unsigned long)((10)*(200
      +                          00000/4000.0)));
  2088  0017B2  0E41               	movlw	65
  2089  0017B4  0101               	movlb	1	; () banked
  2090  0017B6  6F22               	movwf	(??_measure_freq+2)& (0+255),b
  2091  0017B8  0EEE               	movlw	238
  2092  0017BA                     u3887:
  2093  0017BA  2EE8               	decfsz	wreg,f,c
  2094  0017BC  D7FE               	goto	u3887
  2095  0017BE  2F22               	decfsz	(??_measure_freq+2)& (0+255),f,b
  2096  0017C0  D7FC               	goto	u3887
  2097  0017C2  0004               	clrwdt	
  2098                           ;measure.c: 94: _delay((unsigned long)((10)*(200
      +                          00000/4000.0)));
  2099  0017C4  0E41               	movlw	65
  2100  0017C6  0101               	movlb	1	; () banked
  2101  0017C8  6F22               	movwf	(??_measure_freq+2)& (0+255),b
  2102  0017CA  0EEE               	movlw	238
  2103  0017CC                     u3897:
  2104  0017CC  2EE8               	decfsz	wreg,f,c
  2105  0017CE  D7FE               	goto	u3897
  2106  0017D0  2F22               	decfsz	(??_measure_freq+2)& (0+255),f,b
  2107  0017D2  D7FC               	goto	u3897
  2108  0017D4  0004               	clrwdt	
  2109                           ;measure.c: 95: _delay((unsigned long)((10)*(200
      +                          00000/4000.0)));
  2110  0017D6  0E41               	movlw	65
  2111  0017D8  0101               	movlb	1	; () banked
  2112  0017DA  6F22               	movwf	(??_measure_freq+2)& (0+255),b
  2113  0017DC  0EEE               	movlw	238
  2114  0017DE                     u3907:
  2115  0017DE  2EE8               	decfsz	wreg,f,c
  2116  0017E0  D7FE               	goto	u3907
  2117  0017E2  2F22               	decfsz	(??_measure_freq+2)& (0+255),f,b
  2118  0017E4  D7FC               	goto	u3907
  2119  0017E6  0004               	clrwdt	
  2120                           ;measure.c: 97: LATC &= ~0b00000010; LATC |= (!!
      +                          (0)) << 1;;
  2121  0017E8  928B               	bcf	3979,1,c	;volatile
  2122  0017EA  508B               	movf	3979,w,c	;volatile
  2123                           ;measure.c: 100: TRISA |= 0b00010000;
  2124  0017EC  8892               	bsf	3986,4,c	;volatile
  2125                           ;measure.c: 103: count = timer0_read_ps();
  2126  0017EE  EC24  F011         	call	_timer0_read_ps	;wreg free
  2127  0017F2  C123  F120         	movff	?_timer0_read_ps,??_measure_freq
  2128  0017F6  C124  F121         	movff	?_timer0_read_ps+1,??_measure_freq+1
  2129  0017FA  C120  F11E         	movff	??_measure_freq,?_measure_freq
  2130  0017FE  C121  F11F         	movff	??_measure_freq+1,?_measure_freq+1
  2131                           ;measure.c: 112: }
  2132                           ; BSR set to: 1
  2133  001802  0012               	return	
  2134  001804                     __end_of_measure_freq:
  2135                           	opt stack 0
  2136                           
  2137                           	psect	text13
  2138                           ; =============== function _measure_freq ends ==
      +                          ==========
  2139                           ; *************** function _delay10ms **********
      +                          *******
  2140                           ; Defined at:
  2141                           ;		line 54 in file "../../../LC-meter.c"
  2142                           ; Parameters:
  2143                           ;		period_10ms    size:   1reg:   wre	type: unsi
      +                          gned char 
  2144                           ; Auto variables:
  2145                           ;		None
  2146                           ; Return value:
  2147                           ;		type: void 
  2148                           ;		size: 0
  2149                           ; Registers used:
  2150                           ;		wreg
  2151                           ; Tracked objects:
  2152                           ;		On entry : F/1
  2153                           ;		On exit  : F/1
  2154                           ;		Unchanged: FFFFFFFF/0
  2155                           ; Data sizes:
  2156                           ;		Autos:    0
  2157                           ;		Params:   0
  2158                           ;		Temp:     0
  2159                           ;		Total:    0
  2160                           ; This function calls:
  2161                           ;		Nothing
  2162                           ; This function is called by:
  2163                           ;		_main
  2164                           ;		_calibrate
  2165                           ; This function uses a non-reentrant model
  2166                           ; 
  2167  000000                     
  2168                           ;LC-meter.c: 53: void
  2169                           ;LC-meter.c: 54: delay10ms(unsigned char period_
      +                          10ms) {
  2170  002676                     _delay10ms:
  2171                           	opt stack 28
  2172                           ; BSR set to: 1
  2173                           ; BSR set to: 1
  2174  002676  0012               	return	
  2175  002678                     __end_of_delay10ms:
  2176                           	opt stack 0
  2177                           
  2178                           	psect	text14
  2179                           ; =============== function _delay10ms ends =====
      +                          =======
  2180                           ; *************** function _print_reading ******
      +                          ***********
  2181                           ; Defined at:
  2182                           ;		line 433 in file "../../../src/print.c"
  2183                           ; Parameters:
  2184                           ;		measurement    size:   2offs:   0	type: unsig
      +                          ned short 
  2185                           ; Auto variables:
  2186                           ;		None
  2187                           ; Return value:
  2188                           ;		type: void 
  2189                           ;		size: 0
  2190                           ; Registers used:
  2191                           ;		None
  2192                           ; Tracked objects:
  2193                           ;		On entry : F/1
  2194                           ;		On exit  : F/1
  2195                           ;		Unchanged: FFFFFFFF/0
  2196                           ; Data sizes:
  2197                           ;		Autos:    0
  2198                           ;		Params:   2
  2199                           ;		Temp:     0
  2200                           ;		Total:    2
  2201                           ; This function calls:
  2202                           ;		Nothing
  2203                           ; This function is called by:
  2204                           ;		_measure_capacitance
  2205                           ;		_measure_inductance
  2206                           ; This function uses a non-reentrant model
  2207                           ; 
  2208  000000                     
  2209                           ;print.c: 432: void
  2210                           ;print.c: 433: print_reading(unsigned short int 
      +                          measurement) {
  2211  002678                     _print_reading:
  2212                           	opt stack 28
  2213                           ; BSR set to: 1
  2214                           ; BSR set to: 1
  2215  002678  0012               	return	
  2216  00267A                     __end_of_print_reading:
  2217                           	opt stack 0
  2218                           
  2219                           	psect	text15
  2220                           ; =============== function _print_reading ends =
      +                          ===========
  2221                           ; *************** function ___lwtofl ***********
      +                          ******
  2222                           ; Defined at:
  2223                           ;		line 16 in file "C:\Program Files (x86)\HI-TE
      +                          CH Software\PICC-18\PRO\9.66\sources\lwtofl.c"
  2224                           ; Parameters:
  2225                           ;		c              size:   2offs:   0	type: unsig
      +                          ned int 
  2226                           ; Auto variables:
  2227                           ;		f1          	       	type: unsigned int 
  2228                           ; Return value:
  2229                           ;		type: unsigned int 
  2230                           ;		size: 4
  2231                           ; Registers used:
  2232                           ;		wreg, fsr0l, fsr0h, status,2, status,0, cstac
      +                          k
  2233                           ; Tracked objects:
  2234                           ;		On entry : F/1
  2235                           ;		On exit  : F/1
  2236                           ;		Unchanged: FFFFFFF0/0
  2237                           ; Data sizes:
  2238                           ;		Autos:    4
  2239                           ;		Params:   4
  2240                           ;		Temp:     0
  2241                           ;		Total:    8
  2242                           ; This function calls:
  2243                           ;		___flpack
  2244                           ; This function is called by:
  2245                           ;		_calibrate
  2246                           ;		_measure_capacitance
  2247                           ;		_measure_inductance
  2248                           ; This function uses a non-reentrant model
  2249                           ; 
  2250  000000                     
  2251  0024DC                     ___lwtofl:
  2252                           	opt stack 28
  2253                           ; BSR set to: 1
  2254  0024DC  511F               	movf	(?___lwtofl+1)& (0+255),w,b
  2255  0024DE  111E               	iorwf	?___lwtofl& (0+255),w,b
  2256  0024E0  E105               	bnz	l2323
  2257  0024E2  6B1E               	clrf	?___lwtofl& (0+255),b
  2258  0024E4  6B1F               	clrf	(?___lwtofl+1)& (0+255),b
  2259  0024E6  6B20               	clrf	(?___lwtofl+2)& (0+255),b
  2260  0024E8  6B21               	clrf	(?___lwtofl+3)& (0+255),b
  2261  0024EA  D016               	goto	l2322
  2262  0024EC                     l2323:
  2263                           ; BSR set to: 1
  2264  0024EC  C11E  F122         	movff	?___lwtofl,??___lwtofl
  2265  0024F0  C11F  F123         	movff	?___lwtofl+1,??___lwtofl+1
  2266  0024F4  6B24               	clrf	(??___lwtofl+2)& (0+255),b
  2267  0024F6  6B25               	clrf	(??___lwtofl+3)& (0+255),b
  2268  0024F8  0E96               	movlw	150
  2269  0024FA  6F65               	movwf	(?___flpack+2)& (0+255),b
  2270  0024FC  0E22               	movlw	low ??___lwtofl
  2271  0024FE  6F63               	movwf	?___flpack& (0+255),b
  2272  002500  0E01               	movlw	high ??___lwtofl
  2273  002502  6F64               	movwf	(?___flpack+1)& (0+255),b
  2274  002504  EC77  F00C         	call	___flpack	;wreg free
  2275  002508  C122  F11E         	movff	??___lwtofl,?___lwtofl
  2276  00250C  C123  F11F         	movff	??___lwtofl+1,?___lwtofl+1
  2277  002510  C124  F120         	movff	??___lwtofl+2,?___lwtofl+2
  2278  002514  C125  F121         	movff	??___lwtofl+3,?___lwtofl+3
  2279  002518                     l2322:
  2280                           ; BSR set to: 1
  2281  002518  0012               	return	
  2282  00251A                     __end_of___lwtofl:
  2283                           	opt stack 0
  2284                           
  2285                           	psect	text16
  2286                           ; =============== function ___lwtofl ends ======
      +                          ======
  2287                           ; *************** function _print_unit *********
      +                          ********
  2288                           ; Defined at:
  2289                           ;		line 412 in file "../../../src/print.c"
  2290                           ; Parameters:
  2291                           ;		unit           size:   1reg:   wre	type: unsi
      +                          gned char 
  2292                           ; Auto variables:
  2293                           ;		None
  2294                           ; Return value:
  2295                           ;		type: void 
  2296                           ;		size: 0
  2297                           ; Registers used:
  2298                           ;		wreg
  2299                           ; Tracked objects:
  2300                           ;		On entry : F/1
  2301                           ;		On exit  : F/1
  2302                           ;		Unchanged: FFFFFFFF/0
  2303                           ; Data sizes:
  2304                           ;		Autos:    0
  2305                           ;		Params:   0
  2306                           ;		Temp:     0
  2307                           ;		Total:    0
  2308                           ; This function calls:
  2309                           ;		Nothing
  2310                           ; This function is called by:
  2311                           ;		_measure_capacitance
  2312                           ;		_measure_inductance
  2313                           ; This function uses a non-reentrant model
  2314                           ; 
  2315  000000                     
  2316                           ;print.c: 411: void
  2317                           ;print.c: 412: print_unit(unsigned char unit) {
  2318  00267C                     _print_unit:
  2319                           	opt stack 28
  2320                           ; BSR set to: 1
  2321                           ; BSR set to: 1
  2322  00267C  0012               	return	
  2323  00267E                     __end_of_print_unit:
  2324                           	opt stack 0
  2325                           
  2326                           	psect	text17
  2327                           ; =============== function _print_unit ends ====
      +                          ========
  2328                           ; *************** function _log10 **************
      +                          ***
  2329                           ; Defined at:
  2330                           ;		line 40 in file "C:\Program Files (x86)\HI-TE
      +                          CH Software\PICC-18\PRO\9.66\sources\log.c"
  2331                           ; Parameters:
  2332                           ;		x              size:   4offs:   0	type: void 
  2333                           ; Auto variables:
  2334                           ;		None
  2335                           ; Return value:
  2336                           ;		type: void 
  2337                           ;		size: 4
  2338                           ; Registers used:
  2339                           ;		wreg, fsr0l, fsr0h, fsr2l, status,2, status,0
      +                          , tblptrl, tblptrh, tblptru, tablat, prodl, prod
      +                          h, cstack
  2340                           ; Tracked objects:
  2341                           ;		On entry : F/1
  2342                           ;		On exit  : F/1
  2343                           ;		Unchanged: FFFFFFF0/0
  2344                           ; Data sizes:
  2345                           ;		Autos:    0
  2346                           ;		Params:   4
  2347                           ;		Temp:     0
  2348                           ;		Total:    4
  2349                           ; This function calls:
  2350                           ;		_log
  2351                           ;		___flmul
  2352                           ; This function is called by:
  2353                           ;		_format_double
  2354                           ; This function uses a non-reentrant model
  2355                           ; 
  2356  000000                     
  2357  00237C                     _log10:
  2358                           	opt stack 27
  2359                           ; BSR set to: 1
  2360  00237C  C122  F12F         	movff	?_log10,?_log
  2361  002380  C123  F130         	movff	?_log10+1,?_log+1
  2362  002384  C124  F131         	movff	?_log10+2,?_log+2
  2363  002388  C125  F132         	movff	?_log10+3,?_log+3
  2364  00238C  EC86  F009         	call	_log	;wreg free
  2365  002390  C12F  F155         	movff	?_log,?___flmul
  2366  002394  C130  F156         	movff	?_log+1,?___flmul+1
  2367  002398  C131  F157         	movff	?_log+2,?___flmul+2
  2368  00239C  C132  F158         	movff	?_log+3,?___flmul+3
  2369  0023A0  0ED9               	movlw	217
  2370  0023A2  6F59               	movwf	(?___flmul+4)& (0+255),b
  2371  0023A4  0E5B               	movlw	91
  2372  0023A6  6F5A               	movwf	(?___flmul+5)& (0+255),b
  2373  0023A8  0EDE               	movlw	222
  2374  0023AA  6F5B               	movwf	(?___flmul+6)& (0+255),b
  2375  0023AC  0E3E               	movlw	62
  2376  0023AE  6F5C               	movwf	(?___flmul+7)& (0+255),b
  2377  0023B0  EC50  F00D         	call	___flmul	;wreg free
  2378  0023B4  C155  F122         	movff	?___flmul,?_log10
  2379  0023B8  C156  F123         	movff	?___flmul+1,?_log10+1
  2380  0023BC  C157  F124         	movff	?___flmul+2,?_log10+2
  2381  0023C0  C158  F125         	movff	?___flmul+3,?_log10+3
  2382                           ; BSR set to: 1
  2383  0023C4  0012               	return	
  2384  0023C6                     __end_of_log10:
  2385                           	opt stack 0
  2386                           
  2387                           	psect	text18
  2388                           ; =============== function _log10 ends =========
      +                          ===
  2389                           ; *************** function _pow ****************
      +                          *
  2390                           ; Defined at:
  2391                           ;		line 6 in file "C:\Program Files (x86)\HI-TEC
      +                          H Software\PICC-18\PRO\9.66\sources\pow.c"
  2392                           ; Parameters:
  2393                           ;		x              size:   4offs:   0	type: void 
  2394                           ;		y              size:   4offs:   4	type: void 
  2395                           ; Auto variables:
  2396                           ;		sign        	       	type: unsigned char 
  2397                           ;		yi          	       	type: unsigned long 
  2398                           ; Return value:
  2399                           ;		type: unsigned long 
  2400                           ;		size: 4
  2401                           ; Registers used:
  2402                           ;		wreg, fsr0l, fsr0h, fsr1l, fsr2l, status,2, s
      +                          tatus,0, tblptrl, tblptrh, tblptru, tablat, prod
      +                          l, prodh, cstack
  2403                           ; Tracked objects:
  2404                           ;		On entry : F/1
  2405                           ;		On exit  : F/1
  2406                           ;		Unchanged: FFFFFFF0/0
  2407                           ; Data sizes:
  2408                           ;		Autos:    5
  2409                           ;		Params:   8
  2410                           ;		Temp:     0
  2411                           ;		Total:   13
  2412                           ; This function calls:
  2413                           ;		___flge
  2414                           ;		___fltol
  2415                           ;		___lltofl
  2416                           ;		___flneg
  2417                           ;		_log
  2418                           ;		___flmul
  2419                           ;		_exp
  2420                           ; This function is called by:
  2421                           ;		_format_double
  2422                           ; This function uses a non-reentrant model
  2423                           ; 
  2424  000000                     
  2425  00146C                     _pow:
  2426                           	opt stack 27
  2427                           ; BSR set to: 1
  2428  00146C  6B2A               	clrf	??_pow& (0+255),b
  2429  00146E  EE01  F022         	lfsr	0,?_pow
  2430  001472  50EE               	movf	postinc0,w,c
  2431  001474  10EE               	iorwf	postinc0,w,c
  2432  001476  10EE               	iorwf	postinc0,w,c
  2433  001478  10EE               	iorwf	postinc0,w,c
  2434  00147A  E110               	bnz	l1976
  2435  00147C  C126  F147         	movff	?_pow+4,?___flge+4
  2436  001480  C127  F148         	movff	?_pow+5,?___flge+5
  2437  001484  C128  F149         	movff	?_pow+6,?___flge+6
  2438  001488  C129  F14A         	movff	?_pow+7,?___flge+7
  2439  00148C  0E00               	movlw	0
  2440  00148E  6B43               	clrf	?___flge& (0+255),b
  2441  001490  6B44               	clrf	(?___flge+1)& (0+255),b
  2442  001492  6B45               	clrf	(?___flge+2)& (0+255),b
  2443  001494  6B46               	clrf	(?___flge+3)& (0+255),b
  2444  001496  EC4C  F012         	call	___flge	;wreg free
  2445  00149A  D038               	goto	u2860
  2446                           ; BSR set to: 1
  2447  00149C                     l1976:
  2448                           ; BSR set to: 1
  2449  00149C  EE01  F026         	lfsr	0,?_pow+4
  2450  0014A0  50EE               	movf	postinc0,w,c
  2451  0014A2  10EE               	iorwf	postinc0,w,c
  2452  0014A4  10EE               	iorwf	postinc0,w,c
  2453  0014A6  10EE               	iorwf	postinc0,w,c
  2454  0014A8  E107               	bnz	l1978
  2455  0014AA  6B22               	clrf	?_pow& (0+255),b
  2456  0014AC  6B23               	clrf	(?_pow+1)& (0+255),b
  2457  0014AE  0E80               	movlw	128
  2458  0014B0  6F24               	movwf	(?_pow+2)& (0+255),b
  2459  0014B2  0E3F               	movlw	63
  2460  0014B4  6F25               	movwf	(?_pow+3)& (0+255),b
  2461  0014B6  D086               	goto	l1975
  2462  0014B8                     l1978:
  2463                           ; BSR set to: 1
  2464  0014B8  AF25               	btfss	(?_pow+3)& (0+255),7,b
  2465  0014BA  D042               	goto	l1979
  2466  0014BC  C126  F143         	movff	?_pow+4,?___fltol
  2467  0014C0  C127  F144         	movff	?_pow+5,?___fltol+1
  2468  0014C4  C128  F145         	movff	?_pow+6,?___fltol+2
  2469  0014C8  C129  F146         	movff	?_pow+7,?___fltol+3
  2470  0014CC  ECBF  F00F         	call	___fltol	;wreg free
  2471  0014D0  C143  F12B         	movff	?___fltol,??_pow+1
  2472  0014D4  C144  F12C         	movff	?___fltol+1,??_pow+2
  2473  0014D8  C145  F12D         	movff	?___fltol+2,??_pow+3
  2474  0014DC  C146  F12E         	movff	?___fltol+3,??_pow+4
  2475  0014E0  C12B  F12F         	movff	??_pow+1,?___lltofl
  2476  0014E4  C12C  F130         	movff	??_pow+2,?___lltofl+1
  2477  0014E8  C12D  F131         	movff	??_pow+3,?___lltofl+2
  2478  0014EC  C12E  F132         	movff	??_pow+4,?___lltofl+3
  2479  0014F0  EC74  F011         	call	___lltofl	;wreg free
  2480  0014F4  5129               	movf	(?_pow+7)& (0+255),w,b
  2481  0014F6  1932               	xorwf	(?___lltofl+3)& (0+255),w,b
  2482  0014F8  E108               	bnz	u2865
  2483  0014FA  5128               	movf	(?_pow+6)& (0+255),w,b
  2484  0014FC  1931               	xorwf	(?___lltofl+2)& (0+255),w,b
  2485  0014FE  E105               	bnz	u2865
  2486  001500  5127               	movf	(?_pow+5)& (0+255),w,b
  2487  001502  1930               	xorwf	(?___lltofl+1)& (0+255),w,b
  2488  001504  E102               	bnz	u2865
  2489  001506  5126               	movf	(?_pow+4)& (0+255),w,b
  2490  001508  192F               	xorwf	?___lltofl& (0+255),w,b
  2491  00150A                     u2865:
  2492  00150A  E005               	bz	l1980
  2493  00150C                     u2860:
  2494  00150C  6B22               	clrf	?_pow& (0+255),b
  2495  00150E  6B23               	clrf	(?_pow+1)& (0+255),b
  2496  001510  6B24               	clrf	(?_pow+2)& (0+255),b
  2497  001512  6B25               	clrf	(?_pow+3)& (0+255),b
  2498  001514  D057               	goto	l1975
  2499  001516                     l1980:
  2500                           ; BSR set to: 1
  2501  001516  512B               	movf	(??_pow+1)& (0+255),w,b
  2502  001518  0B01               	andlw	1
  2503  00151A  6F2A               	movwf	??_pow& (0+255),b
  2504  00151C  C122  F14D         	movff	?_pow,?___flneg
  2505  001520  C123  F14E         	movff	?_pow+1,?___flneg+1
  2506  001524  C124  F14F         	movff	?_pow+2,?___flneg+2
  2507  001528  C125  F150         	movff	?_pow+3,?___flneg+3
  2508  00152C  EC31  F013         	call	___flneg	;wreg free
  2509  001530  C14D  F122         	movff	?___flneg,?_pow
  2510  001534  C14E  F123         	movff	?___flneg+1,?_pow+1
  2511  001538  C14F  F124         	movff	?___flneg+2,?_pow+2
  2512  00153C  C150  F125         	movff	?___flneg+3,?_pow+3
  2513  001540                     l1979:
  2514                           ; BSR set to: 1
  2515  001540  C122  F12F         	movff	?_pow,?_log
  2516  001544  C123  F130         	movff	?_pow+1,?_log+1
  2517  001548  C124  F131         	movff	?_pow+2,?_log+2
  2518  00154C  C125  F132         	movff	?_pow+3,?_log+3
  2519  001550  EC86  F009         	call	_log	;wreg free
  2520  001554  C12F  F155         	movff	?_log,?___flmul
  2521  001558  C130  F156         	movff	?_log+1,?___flmul+1
  2522  00155C  C131  F157         	movff	?_log+2,?___flmul+2
  2523  001560  C132  F158         	movff	?_log+3,?___flmul+3
  2524  001564  C126  F159         	movff	?_pow+4,?___flmul+4
  2525  001568  C127  F15A         	movff	?_pow+5,?___flmul+5
  2526  00156C  C128  F15B         	movff	?_pow+6,?___flmul+6
  2527  001570  C129  F15C         	movff	?_pow+7,?___flmul+7
  2528  001574  EC50  F00D         	call	___flmul	;wreg free
  2529  001578  C155  F12F         	movff	?___flmul,?_exp
  2530  00157C  C156  F130         	movff	?___flmul+1,?_exp+1
  2531  001580  C157  F131         	movff	?___flmul+2,?_exp+2
  2532  001584  C158  F132         	movff	?___flmul+3,?_exp+3
  2533  001588  ECE7  F007         	call	_exp	;wreg free
  2534  00158C  C12F  F122         	movff	?_exp,?_pow
  2535  001590  C130  F123         	movff	?_exp+1,?_pow+1
  2536  001594  C131  F124         	movff	?_exp+2,?_pow+2
  2537  001598  C132  F125         	movff	?_exp+3,?_pow+3
  2538  00159C  512A               	movf	??_pow& (0+255),w,b
  2539  00159E  E012               	bz	l1981
  2540  0015A0  C122  F14D         	movff	?_pow,?___flneg
  2541  0015A4  C123  F14E         	movff	?_pow+1,?___flneg+1
  2542  0015A8  C124  F14F         	movff	?_pow+2,?___flneg+2
  2543  0015AC  C125  F150         	movff	?_pow+3,?___flneg+3
  2544  0015B0  EC31  F013         	call	___flneg	;wreg free
  2545  0015B4  C14D  F122         	movff	?___flneg,?_pow
  2546  0015B8  C14E  F123         	movff	?___flneg+1,?_pow+1
  2547  0015BC  C14F  F124         	movff	?___flneg+2,?_pow+2
  2548  0015C0  C150  F125         	movff	?___flneg+3,?_pow+3
  2549  0015C4                     l1981:
  2550                           ; BSR set to: 1
  2551  0015C4                     l1975:
  2552                           ; BSR set to: 1
  2553  0015C4  0012               	return	
  2554  0015C6                     __end_of_pow:
  2555                           	opt stack 0
  2556                           
  2557                           	psect	text19
  2558                           ; =============== function _pow ends ===========
      +                          =
  2559                           ; *************** function _timer0_read_ps *****
      +                          ************
  2560                           ; Defined at:
  2561                           ;		line 59 in file "../../../lib/timer.c"
  2562                           ; Parameters:
  2563                           ;		None
  2564                           ; Auto variables:
  2565                           ;		prev        	       	type: unsigned char 
  2566                           ;		count       	       	type: unsigned short 
  2567                           ; Return value:
  2568                           ;		type: unsigned short 
  2569                           ;		size: 2
  2570                           ; Registers used:
  2571                           ;		wreg, fsr2l, status,2, status,0, prodl, prodh
  2572                           ; Tracked objects:
  2573                           ;		On entry : 0/1
  2574                           ;		On exit  : F/1
  2575                           ;		Unchanged: 0/0
  2576                           ; Data sizes:
  2577                           ;		Autos:    0
  2578                           ;		Params:   2
  2579                           ;		Temp:     2
  2580                           ;		Total:    4
  2581                           ; This function calls:
  2582                           ;		Nothing
  2583                           ; This function is called by:
  2584                           ;		_measure_freq
  2585                           ; This function uses a non-reentrant model
  2586                           ; 
  2587  000000                     
  2588                           ;timer.c: 58: unsigned short
  2589                           ;timer.c: 59: timer0_read_ps(void) {
  2590  002248                     _timer0_read_ps:
  2591                           	opt stack 27
  2592                           ; BSR set to: ?
  2593  002248  CFD6 FFD9          	movff	4054,fsr2l	;volatile
  2594                           ;timer.c: 61: unsigned short int count = 0;
  2595  00224C  6AF3               	clrf	prodl,c
  2596  00224E  6AF4               	clrf	prodh,c
  2597                           ;timer.c: 63: T0CON |= 0x20;
  2598  002250  8AD5               	bsf	4053,5,c	;volatile
  2599  002252  D005               	goto	l721
  2600  002254                     u2890:
  2601  002254  0E00               	movlw	0
  2602  002256  5CF3               	subwf	prodl,w,c
  2603  002258  0E01               	movlw	1
  2604  00225A  58F4               	subwfb	prodh,w,c
  2605  00225C  E20C               	bc	l720
  2606                           ;timer.c: 65: do {
  2607  00225E                     l721:
  2608                           ; BSR set to: ?
  2609                           ;timer.c: 67: T0CON |= 0x10;
  2610  00225E  88D5               	bsf	4053,4,c	;volatile
  2611  002260  F000               	nop		;#
  2612  002262  F000               	nop		;#
  2613                           ;timer.c: 69: asm(" nop");
  2614                           ;timer.c: 70: asm(" nop");
  2615                           ;timer.c: 72: T0CON &= ~0x10;
  2616  002264  98D5               	bcf	4053,4,c	;volatile
  2617  002266  F000               	nop		;#
  2618  002268  F000               	nop		;#
  2619                           ;timer.c: 74: asm(" nop");
  2620                           ;timer.c: 75: asm(" nop");
  2621                           ;timer.c: 77: ++count;
  2622  00226A  4AF3               	infsnz	prodl,f,c
  2623  00226C  2AF4               	incf	prodh,f,c
  2624                           ;timer.c: 80: } while(prev == TMR0 && count <= 2
      +                          55);
  2625  00226E  50D9               	movf	fsr2l,w,c
  2626  002270  18D6               	xorwf	4054,w,c	;volatile
  2627  002272  10D7               	iorwf	4055,w,c	;volatile
  2628  002274  E0EF               	bz	u2890
  2629                           ; BSR set to: ?
  2630  002276                     l720:
  2631                           ; BSR set to: ?
  2632                           ;timer.c: 82: count = ((prev << 8) + (256 - coun
      +                          t));
  2633  002276  50D9               	movf	fsr2l,w,c
  2634  002278  0101               	movlb	1	; () banked
  2635  00227A  6F26               	movwf	(??_timer0_read_ps+1)& (0+255),b
  2636  00227C  6B25               	clrf	??_timer0_read_ps& (0+255),b
  2637  00227E  50F3               	movf	prodl,w,c
  2638  002280  5F25               	subwf	??_timer0_read_ps& (0+255),f,b
  2639  002282  50F4               	movf	prodh,w,c
  2640  002284  5B26               	subwfb	(??_timer0_read_ps+1)& (0+255),f,b
  2641  002286  0E00               	movlw	0
  2642  002288  2525               	addwf	??_timer0_read_ps& (0+255),w,b
  2643  00228A  6EF3               	movwf	prodl,c
  2644  00228C  0E01               	movlw	1
  2645  00228E  2126               	addwfc	(??_timer0_read_ps+1)& (0+255),w,b
  2646  002290  6EF4               	movwf	prodh,c
  2647  002292  CFF3 F123          	movff	prodl,?_timer0_read_ps
  2648  002296  CFF4 F124          	movff	prodh,?_timer0_read_ps+1
  2649                           ;timer.c: 84: }
  2650                           ; BSR set to: 1
  2651  00229A  0012               	return	
  2652  00229C                     __end_of_timer0_read_ps:
  2653                           	opt stack 0
  2654                           
  2655                           	psect	text20
  2656                           ; =============== function _timer0_read_ps ends 
      +                          ============
  2657                           ; *************** function _ser_putch **********
      +                          *******
  2658                           ; Defined at:
  2659                           ;		line 82 in file "../../../lib/ser.c"
  2660                           ; Parameters:
  2661                           ;		c              size:   1reg:   wre	type: unsi
      +                          gned char 
  2662                           ; Auto variables:
  2663                           ;		None
  2664                           ; Return value:
  2665                           ;		type: void 
  2666                           ;		size: 0
  2667                           ; Registers used:
  2668                           ;		wreg, fsr0l, fsr0h, fsr2l, status,2, status,0
  2669                           ; Tracked objects:
  2670                           ;		On entry : 0/1
  2671                           ;		On exit  : 0/1
  2672                           ;		Unchanged: FFFFFFFF/0
  2673                           ; Data sizes:
  2674                           ;		Autos:    0
  2675                           ;		Params:   0
  2676                           ;		Temp:     0
  2677                           ;		Total:    0
  2678                           ; This function calls:
  2679                           ;		Nothing
  2680                           ; This function is called by:
  2681                           ;		_ser_puts
  2682                           ;		_measure_capacitance
  2683                           ;		_output_putch
  2684                           ; This function uses a non-reentrant model
  2685                           ; 
  2686  000000                     
  2687                           ;ser.c: 81: void
  2688                           ;ser.c: 82: ser_putch(char c) {
  2689  002618                     _ser_putch:
  2690                           	opt stack 27
  2691                           ; BSR set to: ?
  2692                           ; ser_putch@c loaded to fsr2l
  2693  002618  CFE8 FFD9          	movff	wreg,fsr2l
  2694  00261C                     l1452:
  2695                           ; BSR set to: ?
  2696                           ; BSR set to: ?
  2697  00261C  2847               	incf	71,w,c	;volatile
  2698  00261E  0B0F               	andlw	15
  2699  002620  1849               	xorwf	73,w,c	;volatile
  2700  002622  E0FC               	bz	l1452
  2701                           ; BSR set to: ?
  2702                           ;ser.c: 84: GIE = 0;
  2703  002624  9EF2               	bcf	intcon,7,c	;volatile
  2704                           ;ser.c: 85: txfifo[txiptr] = c;
  2705  002626  5047               	movf	71,w,c	;volatile
  2706  002628  0F25               	addlw	37
  2707  00262A  6EE9               	movwf	fsr0l,c
  2708  00262C  6AEA               	clrf	fsr0h,c
  2709  00262E  CFD9 FFEF          	movff	fsr2l,indf0
  2710                           ;ser.c: 86: txiptr = (txiptr + 1) & ((unsigned c
      +                          har)16 - 1);
  2711  002632  2847               	incf	71,w,c	;volatile
  2712  002634  0B0F               	andlw	15
  2713  002636  6E47               	movwf	71,c	;volatile
  2714                           ;ser.c: 87: TXIE = 1;
  2715  002638  889D               	bsf	3997,4,c	;volatile
  2716                           ;ser.c: 88: GIE = 1;
  2717  00263A  8EF2               	bsf	intcon,7,c	;volatile
  2718                           ;ser.c: 89: }
  2719                           ; BSR set to: ?
  2720  00263C  0012               	return	
  2721  00263E                     __end_of_ser_putch:
  2722                           	opt stack 0
  2723                           
  2724                           	psect	text21
  2725                           ; =============== function _ser_putch ends =====
      +                          =======
  2726                           ; *************** function _format_number ******
      +                          ***********
  2727                           ; Defined at:
  2728                           ;		line 15 in file "../../../lib/format.c"
  2729                           ; Parameters:
  2730                           ;		n              size:   2offs:   0	type: unsig
      +                          ned short 
  2731                           ;		base           size:   1offs:   2	type: unsig
      +                          ned char 
  2732                           ;		pad            size:   1offs:   3	type: char 
  2733                           ; Auto variables:
  2734                           ;		padchar     	       	type: unsigned char 
  2735                           ;		di          	       	type: unsigned char 
  2736                           ;		i           	       	type: char 
  2737                           ;		buf         	       	type: unsigned char [32]
  2738                           ; Return value:
  2739                           ;		type: void 
  2740                           ;		size: 0
  2741                           ; Registers used:
  2742                           ;		wreg, fsr0l, fsr0h, fsr1l, fsr2l, status,2, s
      +                          tatus,0, prodl, prodh, cstack
  2743                           ; Tracked objects:
  2744                           ;		On entry : F/1
  2745                           ;		On exit  : F/1
  2746                           ;		Unchanged: FFFFFFF0/0
  2747                           ; Data sizes:
  2748                           ;		Autos:   35
  2749                           ;		Params:   4
  2750                           ;		Temp:     1
  2751                           ;		Total:   40
  2752                           ; This function calls:
  2753                           ;		___lwmod
  2754                           ;		___lwdiv
  2755                           ;		_buffer_putch
  2756                           ; This function is called by:
  2757                           ;		_format_xint32
  2758                           ; This function uses a non-reentrant model
  2759                           ; 
  2760  000000                     
  2761                           ;format.c: 14: void
  2762                           ;format.c: 15: format_number( unsigned short int
      +                           n, unsigned char base, signed char pad ) {
  2763  001C30                     _format_number:
  2764                           	opt stack 27
  2765                           ; BSR set to: 1
  2766  001C30  6AE1               	clrf	fsr1l,c
  2767                           ;format.c: 19: char padchar = ' ';
  2768  001C32  0E20               	movlw	32
  2769  001C34  6F18               	movwf	(??_format_number+2)& (0+255),b
  2770                           ;format.c: 21: if(pad < 0) {
  2771  001C36  AF15               	btfss	(?_format_number+3)& (0+255),7,b
  2772  001C38  D003               	goto	l468
  2773                           ;format.c: 22: pad = -pad;
  2774  001C3A  6D15               	negf	(?_format_number+3)& (0+255),b
  2775                           ;format.c: 23: padchar = '0';
  2776  001C3C  0E30               	movlw	48
  2777  001C3E  6F18               	movwf	(??_format_number+2)& (0+255),b
  2778                           ; BSR set to: 1
  2779                           ;format.c: 24: }
  2780                           ;format.c: 31: do {
  2781  001C40                     l468:
  2782                           ; BSR set to: 1
  2783                           ;format.c: 35: di = n % base;
  2784  001C40  C114  F13C         	movff	?_format_number+2,?___lwmod+2
  2785  001C44  6B3D               	clrf	(?___lwmod+3)& (0+255),b
  2786  001C46  C112  F13A         	movff	?_format_number,?___lwmod
  2787  001C4A  C113  F13B         	movff	?_format_number+1,?___lwmod+1
  2788  001C4E  ECAA  F012         	call	___lwmod	;wreg free
  2789  001C52  513A               	movf	?___lwmod& (0+255),w,b
  2790  001C54  6EE9               	movwf	fsr0l,c
  2791                           ;format.c: 36: buf[i++] = (di < 10 ? (unsigned c
      +                          har)'0' + di : (unsigned char)'A' + di - 10);
  2792  001C56  0F37               	addlw	55
  2793  001C58  6F16               	movwf	??_format_number& (0+255),b
  2794  001C5A  6B17               	clrf	(??_format_number+1)& (0+255),b
  2795  001C5C  0E00               	movlw	0
  2796  001C5E  2317               	addwfc	(??_format_number+1)& (0+255),f,b
  2797  001C60  0E0A               	movlw	10
  2798  001C62  60E9               	cpfslt	fsr0l,c
  2799  001C64  D006               	goto	l500000756
  2800  001C66  0E30               	movlw	48
  2801  001C68  24E9               	addwf	fsr0l,w,c
  2802  001C6A  6F16               	movwf	??_format_number& (0+255),b
  2803  001C6C  6B17               	clrf	(??_format_number+1)& (0+255),b
  2804  001C6E  0E00               	movlw	0
  2805  001C70  2317               	addwfc	(??_format_number+1)& (0+255),f,b
  2806  001C72                     l500000756:
  2807                           ; BSR set to: 1
  2808  001C72  0E19               	movlw	low (??_format_number+3)
  2809  001C74  24E1               	addwf	fsr1l,w,c
  2810  001C76  6EE9               	movwf	fsr0l,c
  2811  001C78  6AEA               	clrf	fsr0h,c
  2812  001C7A  0E01               	movlw	high (??_format_number+3)
  2813  001C7C  22EA               	addwfc	fsr0h,f,c
  2814  001C7E  C116  FFEF         	movff	??_format_number,indf0
  2815  001C82  2AE1               	incf	fsr1l,f,c
  2816                           ;format.c: 38: n /= base;
  2817  001C84  C114  F13C         	movff	?_format_number+2,?___lwdiv+2
  2818  001C88  6B3D               	clrf	(?___lwdiv+3)& (0+255),b
  2819  001C8A  C112  F13A         	movff	?_format_number,?___lwdiv
  2820  001C8E  C113  F13B         	movff	?_format_number+1,?___lwdiv+1
  2821  001C92  EC99  F011         	call	___lwdiv	;wreg free
  2822  001C96  C13A  F112         	movff	?___lwdiv,?_format_number
  2823  001C9A  C13B  F113         	movff	?___lwdiv+1,?_format_number+1
  2824                           ;format.c: 39: } while(n > 0);
  2825  001C9E  5113               	movf	(?_format_number+1)& (0+255),w,b
  2826  001CA0  1112               	iorwf	?_format_number& (0+255),w,b
  2827  001CA2  E004               	bz	l469
  2828  001CA4  D7CD               	goto	l468
  2829                           ; BSR set to: 1
  2830                           ;format.c: 41: while(pad-- > i) buffer_putch(pad
      +                          char);
  2831  001CA6                     l470:
  2832                           ; BSR set to: 1
  2833  001CA6  5118               	movf	(??_format_number+2)& (0+255),w,b
  2834  001CA8  EC4E  F011         	call	_buffer_putch
  2835  001CAC                     l469:
  2836                           ; BSR set to: 1
  2837  001CAC  50E1               	movf	fsr1l,w,c
  2838  001CAE  0A80               	xorlw	128
  2839  001CB0  6F39               	movwf	(??_format_number+35)& (0+255),b
  2840  001CB2  0715               	decf	(?_format_number+3)& (0+255),f,b
  2841  001CB4  2915               	incf	(?_format_number+3)& (0+255),w,b
  2842  001CB6  0A80               	xorlw	128
  2843  001CB8  5D39               	subwf	(??_format_number+35)& (0+255),w,b
  2844  001CBA  E3F5               	bnc	l470
  2845                           ; BSR set to: 1
  2846                           ;format.c: 43: for(; i > 0; i--) buffer_putch((c
      +                          har)buf[(signed short int)i - 1]);
  2847  001CBC  50E1               	movf	fsr1l,w,c
  2848  001CBE  0A80               	xorlw	128
  2849  001CC0  0F7F               	addlw	-129
  2850  001CC2  E312               	bnc	l473
  2851  001CC4                     l472:
  2852                           ; BSR set to: 1
  2853  001CC4  CFE1 F139          	movff	fsr1l,??_format_number+35
  2854  001CC8  0EFF               	movlw	-1
  2855  001CCA  2739               	addwf	(??_format_number+35)& (0+255),f,b
  2856  001CCC  0E19               	movlw	low (??_format_number+3)
  2857  001CCE  2539               	addwf	(??_format_number+35)& (0+255),w,b
  2858  001CD0  6EE9               	movwf	fsr0l,c
  2859  001CD2  6AEA               	clrf	fsr0h,c
  2860  001CD4  0E01               	movlw	high (??_format_number+3)
  2861  001CD6  22EA               	addwfc	fsr0h,f,c
  2862  001CD8  50EF               	movf	indf0,w,c
  2863  001CDA  EC4E  F011         	call	_buffer_putch
  2864  001CDE  06E1               	decf	fsr1l,f,c
  2865  001CE0  50E1               	movf	fsr1l,w,c
  2866  001CE2  0A80               	xorlw	128
  2867  001CE4  0F7F               	addlw	-129
  2868  001CE6  E2EE               	bc	l472
  2869  001CE8                     l473:
  2870                           ; BSR set to: 1
  2871                           ;format.c: 45: }
  2872                           ; BSR set to: 1
  2873  001CE8  0012               	return	
  2874  001CEA                     __end_of_format_number:
  2875                           	opt stack 0
  2876                           
  2877                           	psect	text22
  2878                           ; =============== function _format_number ends =
      +                          ===========
  2879                           ; *************** function ___lltofl ***********
      +                          ******
  2880                           ; Defined at:
  2881                           ;		line 16 in file "C:\Program Files (x86)\HI-TE
      +                          CH Software\PICC-18\PRO\9.66\sources\lltofl.c"
  2882                           ; Parameters:
  2883                           ;		c              size:   4offs:   0	type: unsig
      +                          ned long 
  2884                           ; Auto variables:
  2885                           ;		exp         	       	type: unsigned char 
  2886                           ;		f1          	       	type: unsigned char 
  2887                           ; Return value:
  2888                           ;		type: unsigned char 
  2889                           ;		size: 4
  2890                           ; Registers used:
  2891                           ;		wreg, fsr0l, fsr0h, fsr2l, status,2, status,0
      +                          , cstack
  2892                           ; Tracked objects:
  2893                           ;		On entry : F/1
  2894                           ;		On exit  : F/1
  2895                           ;		Unchanged: FFFFFFF0/0
  2896                           ; Data sizes:
  2897                           ;		Autos:    4
  2898                           ;		Params:   4
  2899                           ;		Temp:     0
  2900                           ;		Total:    8
  2901                           ; This function calls:
  2902                           ;		___flpack
  2903                           ; This function is called by:
  2904                           ;		_pow
  2905                           ; This function uses a non-reentrant model
  2906                           ; 
  2907  000000                     
  2908  0022E8                     ___lltofl:
  2909                           	opt stack 26
  2910                           ; BSR set to: 1
  2911  0022E8  5132               	movf	(?___lltofl+3)& (0+255),w,b
  2912  0022EA  112F               	iorwf	?___lltofl& (0+255),w,b
  2913  0022EC  1130               	iorwf	(?___lltofl+1)& (0+255),w,b
  2914  0022EE  1131               	iorwf	(?___lltofl+2)& (0+255),w,b
  2915  0022F0  E105               	bnz	l2292
  2916  0022F2  6B2F               	clrf	?___lltofl& (0+255),b
  2917  0022F4  6B30               	clrf	(?___lltofl+1)& (0+255),b
  2918  0022F6  6B31               	clrf	(?___lltofl+2)& (0+255),b
  2919  0022F8  6B32               	clrf	(?___lltofl+3)& (0+255),b
  2920  0022FA  D01A               	goto	l2291
  2921  0022FC                     l2292:
  2922                           ; BSR set to: 1
  2923  0022FC  0E96               	movlw	150
  2924  0022FE  6ED9               	movwf	fsr2l,c
  2925  002300  C12F  F133         	movff	?___lltofl,??___lltofl
  2926  002304  C130  F134         	movff	?___lltofl+1,??___lltofl+1
  2927  002308  C131  F135         	movff	?___lltofl+2,??___lltofl+2
  2928  00230C  C132  F136         	movff	?___lltofl+3,??___lltofl+3
  2929  002310  CFD9 F165          	movff	fsr2l,?___flpack+2
  2930  002314  0E33               	movlw	low ??___lltofl
  2931  002316  6F63               	movwf	?___flpack& (0+255),b
  2932  002318  0E01               	movlw	high ??___lltofl
  2933  00231A  6F64               	movwf	(?___flpack+1)& (0+255),b
  2934  00231C  EC77  F00C         	call	___flpack	;wreg free
  2935  002320  C133  F12F         	movff	??___lltofl,?___lltofl
  2936  002324  C134  F130         	movff	??___lltofl+1,?___lltofl+1
  2937  002328  C135  F131         	movff	??___lltofl+2,?___lltofl+2
  2938  00232C  C136  F132         	movff	??___lltofl+3,?___lltofl+3
  2939  002330                     l2291:
  2940                           ; BSR set to: 1
  2941  002330  0012               	return	
  2942  002332                     __end_of___lltofl:
  2943                           	opt stack 0
  2944                           
  2945                           	psect	text23
  2946                           ; =============== function ___lltofl ends ======
      +                          ======
  2947                           ; *************** function _exp ****************
      +                          *
  2948                           ; Defined at:
  2949                           ;		line 13 in file "C:\Program Files (x86)\HI-TE
      +                          CH Software\PICC-18\PRO\9.66\sources\exp.c"
  2950                           ; Parameters:
  2951                           ;		x              size:   4offs:   0	type: unsig
      +                          ned char 
  2952                           ; Auto variables:
  2953                           ;		sign        	       	type: unsigned char 
  2954                           ;		exp         	       	type: int 
  2955                           ; Return value:
  2956                           ;		type: int 
  2957                           ;		size: 4
  2958                           ; Registers used:
  2959                           ;		wreg, fsr0l, fsr0h, fsr1l, fsr2l, status,2, s
      +                          tatus,0, tblptrl, tblptrh, tblptru, tablat, prod
      +                          l, prodh, cstack
  2960                           ; Tracked objects:
  2961                           ;		On entry : F/1
  2962                           ;		On exit  : F/1
  2963                           ;		Unchanged: FFFFFFF0/0
  2964                           ; Data sizes:
  2965                           ;		Autos:    6
  2966                           ;		Params:   4
  2967                           ;		Temp:     0
  2968                           ;		Total:   10
  2969                           ; This function calls:
  2970                           ;		___flge
  2971                           ;		___flneg
  2972                           ;		___asflmul
  2973                           ;		_floor
  2974                           ;		___fltol
  2975                           ;		___awtofl
  2976                           ;		___asflsub
  2977                           ;		_eval_poly
  2978                           ;		_ldexp
  2979                           ;		___fldiv
  2980                           ; This function is called by:
  2981                           ;		_pow
  2982                           ; This function uses a non-reentrant model
  2983                           ; 
  2984  000000                     
  2985  000FCE                     _exp:
  2986                           	opt stack 26
  2987                           ; BSR set to: 1
  2988  000FCE  EE01  F02F         	lfsr	0,?_exp
  2989  000FD2  50EE               	movf	postinc0,w,c
  2990  000FD4  10EE               	iorwf	postinc0,w,c
  2991  000FD6  10EE               	iorwf	postinc0,w,c
  2992  000FD8  10EE               	iorwf	postinc0,w,c
  2993  000FDA  E106               	bnz	l2393
  2994  000FDC  6B2F               	clrf	?_exp& (0+255),b
  2995  000FDE  6B30               	clrf	(?_exp+1)& (0+255),b
  2996  000FE0  0E80               	movlw	128
  2997  000FE2  6F31               	movwf	(?_exp+2)& (0+255),b
  2998  000FE4  0E3F               	movlw	63
  2999  000FE6  D017               	goto	L5
  3000  000FE8                     l2393:
  3001                           ; BSR set to: 1
  3002  000FE8  C12F  F147         	movff	?_exp,?___flge+4
  3003  000FEC  C130  F148         	movff	?_exp+1,?___flge+5
  3004  000FF0  C131  F149         	movff	?_exp+2,?___flge+6
  3005  000FF4  C132  F14A         	movff	?_exp+3,?___flge+7
  3006  000FF8  0E18               	movlw	24
  3007  000FFA  6F43               	movwf	?___flge& (0+255),b
  3008  000FFC  0E72               	movlw	114
  3009  000FFE  6F44               	movwf	(?___flge+1)& (0+255),b
  3010  001000  0E31               	movlw	49
  3011  001002  6F45               	movwf	(?___flge+2)& (0+255),b
  3012  001004  0E44               	movlw	68
  3013  001006  6F46               	movwf	(?___flge+3)& (0+255),b
  3014  001008  EC4C  F012         	call	___flge	;wreg free
  3015  00100C  E206               	bc	l2394
  3016  00100E  692F               	setf	?_exp& (0+255),b
  3017  001010  6930               	setf	(?_exp+1)& (0+255),b
  3018  001012  0E7F               	movlw	127
  3019  001014  6F31               	movwf	(?_exp+2)& (0+255),b
  3020  001016                     L5:
  3021  001016  6F32               	movwf	(?_exp+3)& (0+255),b
  3022  001018  D0C2               	goto	l2392
  3023  00101A                     l2394:
  3024                           ; BSR set to: 1
  3025  00101A  0E87               	movlw	135
  3026  00101C  6F47               	movwf	(?___flge+4)& (0+255),b
  3027  00101E  0E48               	movlw	72
  3028  001020  6F48               	movwf	(?___flge+5)& (0+255),b
  3029  001022  0E3A               	movlw	58
  3030  001024  6F49               	movwf	(?___flge+6)& (0+255),b
  3031  001026  0EC4               	movlw	196
  3032  001028  6F4A               	movwf	(?___flge+7)& (0+255),b
  3033  00102A  C12F  F143         	movff	?_exp,?___flge
  3034  00102E  C130  F144         	movff	?_exp+1,?___flge+1
  3035  001032  C131  F145         	movff	?_exp+2,?___flge+2
  3036  001036  C132  F146         	movff	?_exp+3,?___flge+3
  3037  00103A  EC4C  F012         	call	___flge	;wreg free
  3038  00103E  E201 D091          	bnc	u3030
  3039                           ; BSR set to: 1
  3040  001042  AF32               	btfss	(?_exp+3)& (0+255),7,b
  3041  001044  D002               	goto	u3000
  3042  001046  0E01               	movlw	1
  3043  001048  D001               	goto	u3006
  3044  00104A                     u3000:
  3045  00104A  0E00               	movlw	0
  3046  00104C                     u3006:
  3047  00104C  6EE1               	movwf	fsr1l,c
  3048  00104E  50E1               	movf	fsr1l,w,c
  3049  001050  E012               	bz	l2396
  3050  001052  C12F  F14D         	movff	?_exp,?___flneg
  3051  001056  C130  F14E         	movff	?_exp+1,?___flneg+1
  3052  00105A  C131  F14F         	movff	?_exp+2,?___flneg+2
  3053  00105E  C132  F150         	movff	?_exp+3,?___flneg+3
  3054  001062  EC31  F013         	call	___flneg	;wreg free
  3055  001066  C14D  F12F         	movff	?___flneg,?_exp
  3056  00106A  C14E  F130         	movff	?___flneg+1,?_exp+1
  3057  00106E  C14F  F131         	movff	?___flneg+2,?_exp+2
  3058  001072  C150  F132         	movff	?___flneg+3,?_exp+3
  3059  001076                     l2396:
  3060                           ; BSR set to: 1
  3061  001076  0E3B               	movlw	59
  3062  001078  6F3B               	movwf	(?___asflmul+2)& (0+255),b
  3063  00107A  0EAA               	movlw	170
  3064  00107C  6F3C               	movwf	(?___asflmul+3)& (0+255),b
  3065  00107E  0EB8               	movlw	184
  3066  001080  6F3D               	movwf	(?___asflmul+4)& (0+255),b
  3067  001082  0E3F               	movlw	63
  3068  001084  6F3E               	movwf	(?___asflmul+5)& (0+255),b
  3069  001086  0E2F               	movlw	low ?_exp
  3070  001088  6F39               	movwf	?___asflmul& (0+255),b
  3071  00108A  0E01               	movlw	high ?_exp
  3072  00108C  6F3A               	movwf	(?___asflmul+1)& (0+255),b
  3073  00108E  EC06  F012         	call	___asflmul	;wreg free
  3074  001092  C12F  F139         	movff	?_exp,?_floor
  3075  001096  C130  F13A         	movff	?_exp+1,?_floor+1
  3076  00109A  C131  F13B         	movff	?_exp+2,?_floor+2
  3077  00109E  C132  F13C         	movff	?_exp+3,?_floor+3
  3078  0010A2  EC02  F00C         	call	_floor	;wreg free
  3079  0010A6  C139  F143         	movff	?_floor,?___fltol
  3080  0010AA  C13A  F144         	movff	?_floor+1,?___fltol+1
  3081  0010AE  C13B  F145         	movff	?_floor+2,?___fltol+2
  3082  0010B2  C13C  F146         	movff	?_floor+3,?___fltol+3
  3083  0010B6  ECBF  F00F         	call	___fltol	;wreg free
  3084  0010BA  C143  F137         	movff	?___fltol,??_exp+4
  3085  0010BE  C144  F138         	movff	?___fltol+1,??_exp+5
  3086  0010C2  C137  F145         	movff	??_exp+4,?___awtofl
  3087  0010C6  C138  F146         	movff	??_exp+5,?___awtofl+1
  3088  0010CA  EC4B  F010         	call	___awtofl	;wreg free
  3089  0010CE  C145  F133         	movff	?___awtofl,??_exp
  3090  0010D2  C146  F134         	movff	?___awtofl+1,??_exp+1
  3091  0010D6  C147  F135         	movff	?___awtofl+2,??_exp+2
  3092  0010DA  C148  F136         	movff	?___awtofl+3,??_exp+3
  3093  0010DE  C133  F13B         	movff	??_exp,?___asflsub+2
  3094  0010E2  C134  F13C         	movff	??_exp+1,?___asflsub+3
  3095  0010E6  C135  F13D         	movff	??_exp+2,?___asflsub+4
  3096  0010EA  C136  F13E         	movff	??_exp+3,?___asflsub+5
  3097  0010EE  0E2F               	movlw	low ?_exp
  3098  0010F0  6F39               	movwf	?___asflsub& (0+255),b
  3099  0010F2  0E01               	movlw	high ?_exp
  3100  0010F4  6F3A               	movwf	(?___asflsub+1)& (0+255),b
  3101  0010F6  EC29  F012         	call	___asflsub	;wreg free
  3102  0010FA  0E09               	movlw	9
  3103  0010FC  6F4A               	movwf	(?_eval_poly+5)& (0+255),b
  3104  0010FE  6B4B               	clrf	(?_eval_poly+6)& (0+255),b
  3105  001100  0E01               	movlw	low F65
  3106  001102  6F49               	movwf	(?_eval_poly+4)& (0+255),b
  3107  001104  C12F  F145         	movff	?_exp,?_eval_poly
  3108  001108  C130  F146         	movff	?_exp+1,?_eval_poly+1
  3109  00110C  C131  F147         	movff	?_exp+2,?_eval_poly+2
  3110  001110  C132  F148         	movff	?_exp+3,?_eval_poly+3
  3111  001114  ECE9  F00C         	call	_eval_poly	;wreg free
  3112  001118  C145  F139         	movff	?_eval_poly,?_ldexp
  3113  00111C  C146  F13A         	movff	?_eval_poly+1,?_ldexp+1
  3114  001120  C147  F13B         	movff	?_eval_poly+2,?_ldexp+2
  3115  001124  C148  F13C         	movff	?_eval_poly+3,?_ldexp+3
  3116  001128  C137  F13D         	movff	??_exp+4,?_ldexp+4
  3117  00112C  C138  F13E         	movff	??_exp+5,?_ldexp+5
  3118  001130  EC75  F00F         	call	_ldexp	;wreg free
  3119  001134  C139  F12F         	movff	?_ldexp,?_exp
  3120  001138  C13A  F130         	movff	?_ldexp+1,?_exp+1
  3121  00113C  C13B  F131         	movff	?_ldexp+2,?_exp+2
  3122  001140  C13C  F132         	movff	?_ldexp+3,?_exp+3
  3123  001144  50E1               	movf	fsr1l,w,c
  3124  001146  E02B               	bz	l2397
  3125  001148  EE01  F02F         	lfsr	0,?_exp
  3126  00114C  0EFF               	movlw	255
  3127  00114E  18EE               	xorwf	postinc0,w,c
  3128  001150  0EFF               	movlw	255
  3129  001152  B4D8               	btfsc	status,2,c
  3130  001154  18EE               	xorwf	postinc0,w,c
  3131  001156  0E7F               	movlw	127
  3132  001158  B4D8               	btfsc	status,2,c
  3133  00115A  18EE               	xorwf	postinc0,w,c
  3134  00115C  0E7F               	movlw	127
  3135  00115E  B4D8               	btfsc	status,2,c
  3136  001160  18EE               	xorwf	postinc0,w,c
  3137  001162  E105               	bnz	l2398
  3138  001164                     u3030:
  3139  001164  6B2F               	clrf	?_exp& (0+255),b
  3140  001166  6B30               	clrf	(?_exp+1)& (0+255),b
  3141  001168  6B31               	clrf	(?_exp+2)& (0+255),b
  3142  00116A  6B32               	clrf	(?_exp+3)& (0+255),b
  3143  00116C  D018               	goto	l2392
  3144  00116E                     l2398:
  3145                           ; BSR set to: 1
  3146  00116E  C12F  F13D         	movff	?_exp,?___fldiv+4
  3147  001172  C130  F13E         	movff	?_exp+1,?___fldiv+5
  3148  001176  C131  F13F         	movff	?_exp+2,?___fldiv+6
  3149  00117A  C132  F140         	movff	?_exp+3,?___fldiv+7
  3150  00117E  6B39               	clrf	?___fldiv& (0+255),b
  3151  001180  6B3A               	clrf	(?___fldiv+1)& (0+255),b
  3152  001182  0E80               	movlw	128
  3153  001184  6F3B               	movwf	(?___fldiv+2)& (0+255),b
  3154  001186  0E3F               	movlw	63
  3155  001188  6F3C               	movwf	(?___fldiv+3)& (0+255),b
  3156  00118A  ECD0  F00E         	call	___fldiv	;wreg free
  3157  00118E  C139  F12F         	movff	?___fldiv,?_exp
  3158  001192  C13A  F130         	movff	?___fldiv+1,?_exp+1
  3159  001196  C13B  F131         	movff	?___fldiv+2,?_exp+2
  3160  00119A  C13C  F132         	movff	?___fldiv+3,?_exp+3
  3161  00119E                     l2397:
  3162                           ; BSR set to: 1
  3163  00119E                     l2392:
  3164                           ; BSR set to: 1
  3165  00119E  0012               	return	
  3166  0011A0                     __end_of_exp:
  3167                           	opt stack 0
  3168                           
  3169                           	psect	text24
  3170                           ; =============== function _exp ends ===========
      +                          =
  3171                           ; *************** function ___lwdiv ************
      +                          *****
  3172                           ; Defined at:
  3173                           ;		line 5 in file "C:\Program Files (x86)\HI-TEC
      +                          H Software\PICC-18\PRO\9.66\sources\lwdiv.c"
  3174                           ; Parameters:
  3175                           ;		dividend       size:   2offs:   0	type: unsig
      +                          ned int 
  3176                           ;		divisor        size:   2offs:   2	type: unsig
      +                          ned int 
  3177                           ; Auto variables:
  3178                           ;		counter     	       	type: unsigned char 
  3179                           ;		quotient    	       	type: unsigned int 
  3180                           ; Return value:
  3181                           ;		type: unsigned int 
  3182                           ;		size: 2
  3183                           ; Registers used:
  3184                           ;		wreg, fsr2l, status,2, status,0, prodl, prodh
  3185                           ; Tracked objects:
  3186                           ;		On entry : F/1
  3187                           ;		On exit  : F/1
  3188                           ;		Unchanged: FFFFFFF0/0
  3189                           ; Data sizes:
  3190                           ;		Autos:    0
  3191                           ;		Params:   4
  3192                           ;		Temp:     0
  3193                           ;		Total:    4
  3194                           ; This function calls:
  3195                           ;		Nothing
  3196                           ; This function is called by:
  3197                           ;		_format_number
  3198                           ; This function uses a non-reentrant model
  3199                           ; 
  3200  000000                     
  3201  002332                     ___lwdiv:
  3202                           	opt stack 26
  3203                           ; BSR set to: 1
  3204  002332  6AF3               	clrf	prodl,c
  3205  002334  6AF4               	clrf	prodh,c
  3206  002336  513D               	movf	(?___lwdiv+3)& (0+255),w,b
  3207  002338  113C               	iorwf	(?___lwdiv+2)& (0+255),w,b
  3208  00233A  E01B               	bz	l2305
  3209  00233C  0E01               	movlw	1
  3210  00233E  6ED9               	movwf	fsr2l,c
  3211  002340                     l2306:
  3212                           ; BSR set to: 1
  3213  002340  90D8               	bcf	status,0,c
  3214                           ; BSR set to: 1
  3215  002342  BF3D               	btfsc	(?___lwdiv+3)& (0+255),7,b
  3216  002344  D005               	goto	L6
  3217  002346  373C               	rlcf	(?___lwdiv+2)& (0+255),f,b
  3218  002348  373D               	rlcf	(?___lwdiv+3)& (0+255),f,b
  3219  00234A  2AD9               	incf	fsr2l,f,c
  3220  00234C  D7F9               	goto	l2306
  3221                           ; BSR set to: 1
  3222  00234E                     l2311:
  3223                           ; BSR set to: 1
  3224  00234E  90D8               	bcf	status,0,c
  3225  002350                     L6:
  3226  002350  36F3               	rlcf	prodl,f,c
  3227  002352  36F4               	rlcf	prodh,f,c
  3228  002354  513C               	movf	(?___lwdiv+2)& (0+255),w,b
  3229  002356  5D3A               	subwf	?___lwdiv& (0+255),w,b
  3230  002358  513D               	movf	(?___lwdiv+3)& (0+255),w,b
  3231  00235A  593B               	subwfb	(?___lwdiv+1)& (0+255),w,b
  3232  00235C  E305               	bnc	l2312
  3233  00235E  513C               	movf	(?___lwdiv+2)& (0+255),w,b
  3234  002360  5F3A               	subwf	?___lwdiv& (0+255),f,b
  3235  002362  513D               	movf	(?___lwdiv+3)& (0+255),w,b
  3236  002364  5B3B               	subwfb	(?___lwdiv+1)& (0+255),f,b
  3237  002366  80F3               	bsf	prodl,0,c
  3238  002368                     l2312:
  3239                           ; BSR set to: 1
  3240  002368  90D8               	bcf	status,0,c
  3241  00236A  333D               	rrcf	(?___lwdiv+3)& (0+255),f,b
  3242  00236C  333C               	rrcf	(?___lwdiv+2)& (0+255),f,b
  3243  00236E  2ED9               	decfsz	fsr2l,f,c
  3244  002370  D7EE               	goto	l2311
  3245                           ; BSR set to: 1
  3246  002372                     l2305:
  3247                           ; BSR set to: 1
  3248  002372  CFF3 F13A          	movff	prodl,?___lwdiv
  3249  002376  CFF4 F13B          	movff	prodh,?___lwdiv+1
  3250                           ; BSR set to: 1
  3251  00237A  0012               	return	
  3252  00237C                     __end_of___lwdiv:
  3253                           	opt stack 0
  3254                           
  3255                           	psect	text25
  3256                           ; =============== function ___lwdiv ends =======
      +                          =====
  3257                           ; *************** function ___lwmod ************
      +                          *****
  3258                           ; Defined at:
  3259                           ;		line 5 in file "C:\Program Files (x86)\HI-TEC
      +                          H Software\PICC-18\PRO\9.66\sources\lwmod.c"
  3260                           ; Parameters:
  3261                           ;		dividend       size:   2offs:   0	type: unsig
      +                          ned int 
  3262                           ;		divisor        size:   2offs:   2	type: unsig
      +                          ned int 
  3263                           ; Auto variables:
  3264                           ;		counter     	       	type: unsigned char 
  3265                           ; Return value:
  3266                           ;		type: unsigned int 
  3267                           ;		size: 2
  3268                           ; Registers used:
  3269                           ;		wreg, fsr2l, status,2, status,0
  3270                           ; Tracked objects:
  3271                           ;		On entry : F/1
  3272                           ;		On exit  : F/1
  3273                           ;		Unchanged: FFFFFFF0/0
  3274                           ; Data sizes:
  3275                           ;		Autos:    0
  3276                           ;		Params:   4
  3277                           ;		Temp:     0
  3278                           ;		Total:    4
  3279                           ; This function calls:
  3280                           ;		Nothing
  3281                           ; This function is called by:
  3282                           ;		_format_number
  3283                           ; This function uses a non-reentrant model
  3284                           ; 
  3285  000000                     
  3286  002554                     ___lwmod:
  3287                           	opt stack 26
  3288                           ; BSR set to: 1
  3289  002554  513D               	movf	(?___lwmod+3)& (0+255),w,b
  3290  002556  113C               	iorwf	(?___lwmod+2)& (0+255),w,b
  3291  002558  E017               	bz	l2314
  3292  00255A  0E01               	movlw	1
  3293  00255C  6ED9               	movwf	fsr2l,c
  3294  00255E                     l2315:
  3295                           ; BSR set to: 1
  3296  00255E  BF3D               	btfsc	(?___lwmod+3)& (0+255),7,b
  3297  002560  D005               	goto	l2320
  3298                           ; BSR set to: 1
  3299  002562  90D8               	bcf	status,0,c
  3300  002564  373C               	rlcf	(?___lwmod+2)& (0+255),f,b
  3301  002566  373D               	rlcf	(?___lwmod+3)& (0+255),f,b
  3302  002568  2AD9               	incf	fsr2l,f,c
  3303  00256A  D7F9               	goto	l2315
  3304                           ; BSR set to: 1
  3305  00256C                     l2320:
  3306                           ; BSR set to: 1
  3307  00256C  513C               	movf	(?___lwmod+2)& (0+255),w,b
  3308  00256E  5D3A               	subwf	?___lwmod& (0+255),w,b
  3309  002570  513D               	movf	(?___lwmod+3)& (0+255),w,b
  3310  002572  593B               	subwfb	(?___lwmod+1)& (0+255),w,b
  3311  002574  E304               	bnc	l2321
  3312  002576  513C               	movf	(?___lwmod+2)& (0+255),w,b
  3313  002578  5F3A               	subwf	?___lwmod& (0+255),f,b
  3314  00257A  513D               	movf	(?___lwmod+3)& (0+255),w,b
  3315  00257C  5B3B               	subwfb	(?___lwmod+1)& (0+255),f,b
  3316  00257E                     l2321:
  3317                           ; BSR set to: 1
  3318  00257E  90D8               	bcf	status,0,c
  3319  002580  333D               	rrcf	(?___lwmod+3)& (0+255),f,b
  3320  002582  333C               	rrcf	(?___lwmod+2)& (0+255),f,b
  3321  002584  2ED9               	decfsz	fsr2l,f,c
  3322  002586  D7F2               	goto	l2320
  3323                           ; BSR set to: 1
  3324  002588                     l2314:
  3325                           ; BSR set to: 1
  3326                           ; BSR set to: 1
  3327  002588  0012               	return	
  3328  00258A                     __end_of___lwmod:
  3329                           	opt stack 0
  3330                           
  3331                           	psect	text26
  3332                           ; =============== function ___lwmod ends =======
      +                          =====
  3333                           ; *************** function _buffer_putch *******
      +                          **********
  3334                           ; Defined at:
  3335                           ;		line 22 in file "../../../lib/buffer.c"
  3336                           ; Parameters:
  3337                           ;		ch             size:   1reg:   wre	type: unsi
      +                          gned char 
  3338                           ; Auto variables:
  3339                           ;		None
  3340                           ; Return value:
  3341                           ;		type: unsigned char 
  3342                           ;		size: 1
  3343                           ; Registers used:
  3344                           ;		wreg, fsr0l, fsr0h, fsr2l, status,2, status,0
  3345                           ; Tracked objects:
  3346                           ;		On entry : F/1
  3347                           ;		On exit  : F/1
  3348                           ;		Unchanged: FFFFFFF0/0
  3349                           ; Data sizes:
  3350                           ;		Autos:    0
  3351                           ;		Params:   0
  3352                           ;		Temp:     2
  3353                           ;		Total:    2
  3354                           ; This function calls:
  3355                           ;		Nothing
  3356                           ; This function is called by:
  3357                           ;		_format_number
  3358                           ;		_format_xint32
  3359                           ;		_format_double
  3360                           ; This function uses a non-reentrant model
  3361                           ; 
  3362  000000                     
  3363                           ;buffer.c: 21: char
  3364                           ;buffer.c: 22: buffer_putch(char ch) {
  3365  00229C                     _buffer_putch:
  3366                           	opt stack 26
  3367                           ; BSR set to: 1
  3368                           ; buffer_putch@ch loaded to fsr2l
  3369  00229C  CFE8 FFD9          	movff	wreg,fsr2l
  3370  0022A0  0E10               	movlw	16
  3371  0022A2  6F3A               	movwf	??_buffer_putch& (0+255),b
  3372  0022A4  6B3B               	clrf	(??_buffer_putch+1)& (0+255),b
  3373  0022A6  3818               	swapf	24,w,c
  3374  0022A8  0B0F               	andlw	15
  3375  0022AA  0101               	movlb	1	; () banked
  3376  0022AC  5F3A               	subwf	??_buffer_putch& (0+255),f,b
  3377  0022AE  0E00               	movlw	0
  3378  0022B0  5B3B               	subwfb	(??_buffer_putch+1)& (0+255),f,b
  3379  0022B2  513B               	movf	(??_buffer_putch+1)& (0+255),w,b
  3380  0022B4  0A80               	xorlw	128
  3381  0022B6  0F80               	addlw	-128
  3382  0022B8  0E01               	movlw	1
  3383  0022BA  B4D8               	btfsc	status,2,c
  3384  0022BC  5D3A               	subwf	??_buffer_putch& (0+255),w,b
  3385  0022BE  E313               	bnc	l1954
  3386                           ; BSR set to: 1
  3387                           ;buffer.c: 25: }
  3388                           ;buffer.c: 26: buffer.x[buffer.n] = ch;
  3389  0022C0  3818               	swapf	24,w,c
  3390  0022C2  0B0F               	andlw	15
  3391  0022C4  6F3A               	movwf	??_buffer_putch& (0+255),b
  3392  0022C6  513A               	movf	??_buffer_putch& (0+255),w,b
  3393  0022C8  0F08               	addlw	8
  3394  0022CA  6EE9               	movwf	fsr0l,c
  3395  0022CC  6AEA               	clrf	fsr0h,c
  3396  0022CE  CFD9 FFEF          	movff	fsr2l,indf0
  3397                           ;buffer.c: 27: buffer.n++;
  3398  0022D2  3818               	swapf	24,w,c
  3399  0022D4  0B0F               	andlw	15
  3400  0022D6  6F3A               	movwf	??_buffer_putch& (0+255),b
  3401  0022D8  2B3A               	incf	??_buffer_putch& (0+255),f,b
  3402  0022DA  3B3A               	swapf	??_buffer_putch& (0+255),f,b
  3403  0022DC  5018               	movf	24,w,c
  3404  0022DE  193A               	xorwf	??_buffer_putch& (0+255),w,b
  3405  0022E0  0B0F               	andlw	-241
  3406  0022E2  193A               	xorwf	??_buffer_putch& (0+255),w,b
  3407  0022E4  6E18               	movwf	24,c
  3408                           ;buffer.c: 29: }
  3409  0022E6                     l1954:
  3410                           ; BSR set to: 1
  3411  0022E6  0012               	return	
  3412  0022E8                     __end_of_buffer_putch:
  3413                           	opt stack 0
  3414                           
  3415                           	psect	text27
  3416                           ; =============== function _buffer_putch ends ==
      +                          ==========
  3417                           ; *************** function _log ****************
      +                          *
  3418                           ; Defined at:
  3419                           ;		line 6 in file "C:\Program Files (x86)\HI-TEC
      +                          H Software\PICC-18\PRO\9.66\sources\log.c"
  3420                           ; Parameters:
  3421                           ;		x              size:   4offs:   0	type: unsig
      +                          ned char 
  3422                           ; Auto variables:
  3423                           ;		exp         	       	type: int 
  3424                           ; Return value:
  3425                           ;		type: int 
  3426                           ;		size: 4
  3427                           ; Registers used:
  3428                           ;		wreg, fsr0l, fsr0h, fsr2l, status,2, status,0
      +                          , tblptrl, tblptrh, tblptru, tablat, prodl, prod
      +                          h, cstack
  3429                           ; Tracked objects:
  3430                           ;		On entry : F/1
  3431                           ;		On exit  : F/1
  3432                           ;		Unchanged: FFFFFFF0/0
  3433                           ; Data sizes:
  3434                           ;		Autos:   18
  3435                           ;		Params:   4
  3436                           ;		Temp:     0
  3437                           ;		Total:   22
  3438                           ; This function calls:
  3439                           ;		_frexp
  3440                           ;		___flmul
  3441                           ;		___fladd
  3442                           ;		_eval_poly
  3443                           ;		___awtofl
  3444                           ; This function is called by:
  3445                           ;		_log10
  3446                           ;		_pow
  3447                           ; This function uses a non-reentrant model
  3448                           ; 
  3449  000000                     
  3450  00130C                     _log:
  3451                           	opt stack 26
  3452                           ; BSR set to: 1
  3453  00130C  BF32               	btfsc	(?_log+3)& (0+255),7,b
  3454  00130E  D007               	goto	u3120
  3455                           ; BSR set to: 1
  3456  001310  EE01  F02F         	lfsr	0,?_log
  3457  001314  50EE               	movf	postinc0,w,c
  3458  001316  10EE               	iorwf	postinc0,w,c
  3459  001318  10EE               	iorwf	postinc0,w,c
  3460  00131A  10EE               	iorwf	postinc0,w,c
  3461  00131C  E105               	bnz	l1973
  3462  00131E                     u3120:
  3463  00131E  6B2F               	clrf	?_log& (0+255),b
  3464  001320  6B30               	clrf	(?_log+1)& (0+255),b
  3465  001322  6B31               	clrf	(?_log+2)& (0+255),b
  3466  001324  6B32               	clrf	(?_log+3)& (0+255),b
  3467  001326  D0A1               	goto	l1971
  3468  001328                     l1973:
  3469                           ; BSR set to: 1
  3470  001328  0E43               	movlw	low (??_log+16)
  3471  00132A  6F49               	movwf	(?_frexp+4)& (0+255),b
  3472  00132C  0E01               	movlw	high (??_log+16)
  3473  00132E  6F4A               	movwf	(?_frexp+5)& (0+255),b
  3474  001330  C12F  F145         	movff	?_log,?_frexp
  3475  001334  C130  F146         	movff	?_log+1,?_frexp+1
  3476  001338  C131  F147         	movff	?_log+2,?_frexp+2
  3477  00133C  C132  F148         	movff	?_log+3,?_frexp+3
  3478  001340  EC8B  F010         	call	_frexp	;wreg free
  3479  001344  C145  F133         	movff	?_frexp,??_log
  3480  001348  C146  F134         	movff	?_frexp+1,??_log+1
  3481  00134C  C147  F135         	movff	?_frexp+2,??_log+2
  3482  001350  C148  F136         	movff	?_frexp+3,??_log+3
  3483  001354  6B59               	clrf	(?___flmul+4)& (0+255),b
  3484  001356  6B5A               	clrf	(?___flmul+5)& (0+255),b
  3485  001358  6B5B               	clrf	(?___flmul+6)& (0+255),b
  3486  00135A  0E40               	movlw	64
  3487  00135C  6F5C               	movwf	(?___flmul+7)& (0+255),b
  3488  00135E  C133  F155         	movff	??_log,?___flmul
  3489  001362  C134  F156         	movff	??_log+1,?___flmul+1
  3490  001366  C135  F157         	movff	??_log+2,?___flmul+2
  3491  00136A  C136  F158         	movff	??_log+3,?___flmul+3
  3492  00136E  EC50  F00D         	call	___flmul	;wreg free
  3493  001372  C155  F137         	movff	?___flmul,??_log+4
  3494  001376  C156  F138         	movff	?___flmul+1,??_log+5
  3495  00137A  C157  F139         	movff	?___flmul+2,??_log+6
  3496  00137E  C158  F13A         	movff	?___flmul+3,??_log+7
  3497  001382  6B59               	clrf	(?___fladd+4)& (0+255),b
  3498  001384  6B5A               	clrf	(?___fladd+5)& (0+255),b
  3499  001386  0E80               	movlw	128
  3500  001388  6F5B               	movwf	(?___fladd+6)& (0+255),b
  3501  00138A  0EBF               	movlw	191
  3502  00138C  6F5C               	movwf	(?___fladd+7)& (0+255),b
  3503  00138E  C137  F155         	movff	??_log+4,?___fladd
  3504  001392  C138  F156         	movff	??_log+5,?___fladd+1
  3505  001396  C139  F157         	movff	??_log+6,?___fladd+2
  3506  00139A  C13A  F158         	movff	??_log+7,?___fladd+3
  3507  00139E  ECE3  F00A         	call	___fladd	;wreg free
  3508  0013A2  C155  F12F         	movff	?___fladd,?_log
  3509  0013A6  C156  F130         	movff	?___fladd+1,?_log+1
  3510  0013AA  C157  F131         	movff	?___fladd+2,?_log+2
  3511  0013AE  C158  F132         	movff	?___fladd+3,?_log+3
  3512  0013B2  0743               	decf	(??_log+16)& (0+255),f,b
  3513  0013B4  A0D8               	btfss	status,0,c
  3514  0013B6  0744               	decf	(??_log+17)& (0+255),f,b
  3515  0013B8  0E08               	movlw	8
  3516  0013BA  6F4A               	movwf	(?_eval_poly+5)& (0+255),b
  3517  0013BC  6B4B               	clrf	(?_eval_poly+6)& (0+255),b
  3518  0013BE  0E29               	movlw	low F64
  3519  0013C0  6F49               	movwf	(?_eval_poly+4)& (0+255),b
  3520  0013C2  C12F  F145         	movff	?_log,?_eval_poly
  3521  0013C6  C130  F146         	movff	?_log+1,?_eval_poly+1
  3522  0013CA  C131  F147         	movff	?_log+2,?_eval_poly+2
  3523  0013CE  C132  F148         	movff	?_log+3,?_eval_poly+3
  3524  0013D2  ECE9  F00C         	call	_eval_poly	;wreg free
  3525  0013D6  C145  F12F         	movff	?_eval_poly,?_log
  3526  0013DA  C146  F130         	movff	?_eval_poly+1,?_log+1
  3527  0013DE  C147  F131         	movff	?_eval_poly+2,?_log+2
  3528  0013E2  C148  F132         	movff	?_eval_poly+3,?_log+3
  3529  0013E6  C143  F145         	movff	??_log+16,?___awtofl
  3530  0013EA  C144  F146         	movff	??_log+17,?___awtofl+1
  3531  0013EE  EC4B  F010         	call	___awtofl	;wreg free
  3532  0013F2  C145  F13B         	movff	?___awtofl,??_log+8
  3533  0013F6  C146  F13C         	movff	?___awtofl+1,??_log+9
  3534  0013FA  C147  F13D         	movff	?___awtofl+2,??_log+10
  3535  0013FE  C148  F13E         	movff	?___awtofl+3,??_log+11
  3536  001402  C13B  F155         	movff	??_log+8,?___flmul
  3537  001406  C13C  F156         	movff	??_log+9,?___flmul+1
  3538  00140A  C13D  F157         	movff	??_log+10,?___flmul+2
  3539  00140E  C13E  F158         	movff	??_log+11,?___flmul+3
  3540  001412  0E18               	movlw	24
  3541  001414  6F59               	movwf	(?___flmul+4)& (0+255),b
  3542  001416  0E72               	movlw	114
  3543  001418  6F5A               	movwf	(?___flmul+5)& (0+255),b
  3544  00141A  0E31               	movlw	49
  3545  00141C  6F5B               	movwf	(?___flmul+6)& (0+255),b
  3546  00141E  0E3F               	movlw	63
  3547  001420  6F5C               	movwf	(?___flmul+7)& (0+255),b
  3548  001422  EC50  F00D         	call	___flmul	;wreg free
  3549  001426  C155  F13F         	movff	?___flmul,??_log+12
  3550  00142A  C156  F140         	movff	?___flmul+1,??_log+13
  3551  00142E  C157  F141         	movff	?___flmul+2,??_log+14
  3552  001432  C158  F142         	movff	?___flmul+3,??_log+15
  3553  001436  C12F  F159         	movff	?_log,?___fladd+4
  3554  00143A  C130  F15A         	movff	?_log+1,?___fladd+5
  3555  00143E  C131  F15B         	movff	?_log+2,?___fladd+6
  3556  001442  C132  F15C         	movff	?_log+3,?___fladd+7
  3557  001446  C13F  F155         	movff	??_log+12,?___fladd
  3558  00144A  C140  F156         	movff	??_log+13,?___fladd+1
  3559  00144E  C141  F157         	movff	??_log+14,?___fladd+2
  3560  001452  C142  F158         	movff	??_log+15,?___fladd+3
  3561  001456  ECE3  F00A         	call	___fladd	;wreg free
  3562  00145A  C155  F12F         	movff	?___fladd,?_log
  3563  00145E  C156  F130         	movff	?___fladd+1,?_log+1
  3564  001462  C157  F131         	movff	?___fladd+2,?_log+2
  3565  001466  C158  F132         	movff	?___fladd+3,?_log+3
  3566  00146A                     l1971:
  3567                           ; BSR set to: 1
  3568  00146A  0012               	return	
  3569  00146C                     __end_of_log:
  3570                           	opt stack 0
  3571                           
  3572                           	psect	text28
  3573                           ; =============== function _log ends ===========
      +                          =
  3574                           ; *************** function ___asflmul **********
      +                          *******
  3575                           ; Defined at:
  3576                           ;		line 5 in file "C:\Program Files (x86)\HI-TEC
      +                          H Software\PICC-18\PRO\9.66\sources\asflmul.c"
  3577                           ; Parameters:
  3578                           ;		mp             size:   2offs:   0	type: PTR ;
      +                           Largest target is 4
  3579                           ;		 -> exp@x(4), measure_inductance@Lin(4), meas
      +                          ure_capacitance@Cin(4), 
  3580                           ;		multiplicand   size:   4offs:   2	type: PTR 
  3581                           ; Auto variables:
  3582                           ;		None
  3583                           ; Return value:
  3584                           ;		type: PTR 
  3585                           ;		size: 4
  3586                           ; Registers used:
  3587                           ;		wreg, fsr0l, fsr0h, fsr2l, status,2, status,0
      +                          , prodl, cstack
  3588                           ; Tracked objects:
  3589                           ;		On entry : F/1
  3590                           ;		On exit  : F/1
  3591                           ;		Unchanged: FFFFFFF0/0
  3592                           ; Data sizes:
  3593                           ;		Autos:    0
  3594                           ;		Params:   6
  3595                           ;		Temp:     0
  3596                           ;		Total:    6
  3597                           ; This function calls:
  3598                           ;		___flmul
  3599                           ; This function is called by:
  3600                           ;		_measure_capacitance
  3601                           ;		_measure_inductance
  3602                           ;		_exp
  3603                           ; This function uses a non-reentrant model
  3604                           ; 
  3605  000000                     
  3606  00240C                     ___asflmul:
  3607                           	opt stack 25
  3608                           ; BSR set to: 1
  3609  00240C  C13B  F159         	movff	?___asflmul+2,?___flmul+4
  3610  002410  C13C  F15A         	movff	?___asflmul+3,?___flmul+5
  3611  002414  C13D  F15B         	movff	?___asflmul+4,?___flmul+6
  3612  002418  C13E  F15C         	movff	?___asflmul+5,?___flmul+7
  3613  00241C  C139  FFE9         	movff	?___asflmul,fsr0l
  3614  002420  C13A  FFEA         	movff	?___asflmul+1,fsr0h
  3615  002424  CFEE F155          	movff	postinc0,?___flmul
  3616  002428  CFEE F156          	movff	postinc0,?___flmul+1
  3617  00242C  CFEE F157          	movff	postinc0,?___flmul+2
  3618  002430  CFEE F158          	movff	postinc0,?___flmul+3
  3619  002434  EC50  F00D         	call	___flmul	;wreg free
  3620  002438  C139  FFE9         	movff	?___asflmul,fsr0l
  3621  00243C  C13A  FFEA         	movff	?___asflmul+1,fsr0h
  3622  002440  C155  FFEE         	movff	?___flmul,postinc0
  3623  002444  C156  FFEE         	movff	?___flmul+1,postinc0
  3624  002448  C157  FFEE         	movff	?___flmul+2,postinc0
  3625  00244C  C158  FFED         	movff	?___flmul+3,postdec0
  3626                           ; BSR set to: 1
  3627  002450  0012               	return	
  3628  002452                     __end_of___asflmul:
  3629                           	opt stack 0
  3630                           
  3631                           	psect	text29
  3632                           ; =============== function ___asflmul ends =====
      +                          =======
  3633                           ; *************** function ___asflsub **********
      +                          *******
  3634                           ; Defined at:
  3635                           ;		line 5 in file "C:\Program Files (x86)\HI-TEC
      +                          H Software\PICC-18\PRO\9.66\sources\asflsub.c"
  3636                           ; Parameters:
  3637                           ;		f1p            size:   2offs:   0	type: PTR ;
      +                           Largest target is 4
  3638                           ;		 -> exp@x(4), format_double@num(4), 
  3639                           ;		f2             size:   4offs:   2	type: PTR 
  3640                           ; Auto variables:
  3641                           ;		None
  3642                           ; Return value:
  3643                           ;		type: PTR 
  3644                           ;		size: 4
  3645                           ; Registers used:
  3646                           ;		wreg, fsr0l, fsr0h, fsr2l, status,2, status,0
      +                          , prodl, prodh, cstack
  3647                           ; Tracked objects:
  3648                           ;		On entry : F/1
  3649                           ;		On exit  : F/1
  3650                           ;		Unchanged: FFFFFFF0/0
  3651                           ; Data sizes:
  3652                           ;		Autos:    0
  3653                           ;		Params:   6
  3654                           ;		Temp:     0
  3655                           ;		Total:    6
  3656                           ; This function calls:
  3657                           ;		___flsub
  3658                           ; This function is called by:
  3659                           ;		_format_double
  3660                           ;		_exp
  3661                           ; This function uses a non-reentrant model
  3662                           ; 
  3663  000000                     
  3664  002452                     ___asflsub:
  3665                           	opt stack 25
  3666                           ; BSR set to: 1
  3667  002452  C13B  F143         	movff	?___asflsub+2,?___flsub+4
  3668  002456  C13C  F144         	movff	?___asflsub+3,?___flsub+5
  3669  00245A  C13D  F145         	movff	?___asflsub+4,?___flsub+6
  3670  00245E  C13E  F146         	movff	?___asflsub+5,?___flsub+7
  3671  002462  C139  FFE9         	movff	?___asflsub,fsr0l
  3672  002466  C13A  FFEA         	movff	?___asflsub+1,fsr0h
  3673  00246A  CFEE F13F          	movff	postinc0,?___flsub
  3674  00246E  CFEE F140          	movff	postinc0,?___flsub+1
  3675  002472  CFEE F141          	movff	postinc0,?___flsub+2
  3676  002476  CFEE F142          	movff	postinc0,?___flsub+3
  3677  00247A  EC8D  F012         	call	___flsub	;wreg free
  3678  00247E  C139  FFE9         	movff	?___asflsub,fsr0l
  3679  002482  C13A  FFEA         	movff	?___asflsub+1,fsr0h
  3680  002486  C13F  FFEE         	movff	?___flsub,postinc0
  3681  00248A  C140  FFEE         	movff	?___flsub+1,postinc0
  3682  00248E  C141  FFEE         	movff	?___flsub+2,postinc0
  3683  002492  C142  FFED         	movff	?___flsub+3,postdec0
  3684                           ; BSR set to: 1
  3685  002496  0012               	return	
  3686  002498                     __end_of___asflsub:
  3687                           	opt stack 0
  3688                           
  3689                           	psect	text30
  3690                           ; =============== function ___asflsub ends =====
      +                          =======
  3691                           ; *************** function _floor **************
      +                          ***
  3692                           ; Defined at:
  3693                           ;		line 14 in file "C:\Program Files (x86)\HI-TE
      +                          CH Software\PICC-18\PRO\9.66\sources\floor.c"
  3694                           ; Parameters:
  3695                           ;		x              size:   4offs:   0	type: PTR 
  3696                           ; Auto variables:
  3697                           ;		expon       	       	type: int 
  3698                           ;		i           	       	type: int 
  3699                           ; Return value:
  3700                           ;		type: int 
  3701                           ;		size: 4
  3702                           ; Registers used:
  3703                           ;		wreg, fsr0l, fsr0h, fsr2l, status,2, status,0
      +                          , prodl, prodh, cstack
  3704                           ; Tracked objects:
  3705                           ;		On entry : F/1
  3706                           ;		On exit  : F/1
  3707                           ;		Unchanged: FFFFFFF0/0
  3708                           ; Data sizes:
  3709                           ;		Autos:    6
  3710                           ;		Params:   4
  3711                           ;		Temp:     0
  3712                           ;		Total:   10
  3713                           ; This function calls:
  3714                           ;		_frexp
  3715                           ;		___fltol
  3716                           ;		___altofl
  3717                           ;		___flge
  3718                           ;		___fladd
  3719                           ; This function is called by:
  3720                           ;		_format_double
  3721                           ;		_exp
  3722                           ; This function uses a non-reentrant model
  3723                           ; 
  3724  000000                     
  3725  001804                     _floor:
  3726                           	opt stack 25
  3727                           ; BSR set to: 1
  3728  001804  0E3D               	movlw	low ??_floor
  3729  001806  6F49               	movwf	(?_frexp+4)& (0+255),b
  3730  001808  0E01               	movlw	high ??_floor
  3731  00180A  6F4A               	movwf	(?_frexp+5)& (0+255),b
  3732  00180C  C139  F145         	movff	?_floor,?_frexp
  3733  001810  C13A  F146         	movff	?_floor+1,?_frexp+1
  3734  001814  C13B  F147         	movff	?_floor+2,?_frexp+2
  3735  001818  C13C  F148         	movff	?_floor+3,?_frexp+3
  3736  00181C  EC8B  F010         	call	_frexp	;wreg free
  3737  001820  AF3E               	btfss	(??_floor+1)& (0+255),7,b
  3738  001822  D00E               	goto	l1967
  3739  001824  AF3C               	btfss	(?_floor+3)& (0+255),7,b
  3740  001826  D007               	goto	l1968
  3741  001828  6B39               	clrf	?_floor& (0+255),b
  3742  00182A  6B3A               	clrf	(?_floor+1)& (0+255),b
  3743  00182C  0E80               	movlw	128
  3744  00182E  6F3B               	movwf	(?_floor+2)& (0+255),b
  3745  001830  0EBF               	movlw	191
  3746  001832  6F3C               	movwf	(?_floor+3)& (0+255),b
  3747  001834  D05B               	goto	l1966
  3748  001836                     l1968:
  3749                           ; BSR set to: 1
  3750  001836  6B39               	clrf	?_floor& (0+255),b
  3751  001838  6B3A               	clrf	(?_floor+1)& (0+255),b
  3752  00183A  6B3B               	clrf	(?_floor+2)& (0+255),b
  3753  00183C  6B3C               	clrf	(?_floor+3)& (0+255),b
  3754  00183E  D056               	goto	l1966
  3755  001840                     l1967:
  3756                           ; BSR set to: 1
  3757  001840  0E1D               	movlw	29
  3758  001842  5D3D               	subwf	??_floor& (0+255),w,b
  3759  001844  0E00               	movlw	0
  3760  001846  593E               	subwfb	(??_floor+1)& (0+255),w,b
  3761  001848  E301               	bnc	l1969
  3762  00184A  D050               	goto	l1966
  3763  00184C                     l1969:
  3764                           ; BSR set to: 1
  3765  00184C  C139  F143         	movff	?_floor,?___fltol
  3766  001850  C13A  F144         	movff	?_floor+1,?___fltol+1
  3767  001854  C13B  F145         	movff	?_floor+2,?___fltol+2
  3768  001858  C13C  F146         	movff	?_floor+3,?___fltol+3
  3769  00185C  ECBF  F00F         	call	___fltol	;wreg free
  3770  001860  C143  F143         	movff	?___fltol,?___altofl
  3771  001864  C144  F144         	movff	?___fltol+1,?___altofl+1
  3772  001868  C145  F145         	movff	?___fltol+2,?___altofl+2
  3773  00186C  C146  F146         	movff	?___fltol+3,?___altofl+3
  3774  001870  EC05  F010         	call	___altofl	;wreg free
  3775  001874  C143  F13F         	movff	?___altofl,??_floor+2
  3776  001878  C144  F140         	movff	?___altofl+1,??_floor+3
  3777  00187C  C145  F141         	movff	?___altofl+2,??_floor+4
  3778  001880  C146  F142         	movff	?___altofl+3,??_floor+5
  3779  001884  C13F  F147         	movff	??_floor+2,?___flge+4
  3780  001888  C140  F148         	movff	??_floor+3,?___flge+5
  3781  00188C  C141  F149         	movff	??_floor+4,?___flge+6
  3782  001890  C142  F14A         	movff	??_floor+5,?___flge+7
  3783  001894  C139  F143         	movff	?_floor,?___flge
  3784  001898  C13A  F144         	movff	?_floor+1,?___flge+1
  3785  00189C  C13B  F145         	movff	?_floor+2,?___flge+2
  3786  0018A0  C13C  F146         	movff	?_floor+3,?___flge+3
  3787  0018A4  EC4C  F012         	call	___flge	;wreg free
  3788  0018A8  E219               	bc	l1970
  3789  0018AA  6B59               	clrf	(?___fladd+4)& (0+255),b
  3790  0018AC  6B5A               	clrf	(?___fladd+5)& (0+255),b
  3791  0018AE  0E80               	movlw	128
  3792  0018B0  6F5B               	movwf	(?___fladd+6)& (0+255),b
  3793  0018B2  0EBF               	movlw	191
  3794  0018B4  6F5C               	movwf	(?___fladd+7)& (0+255),b
  3795  0018B6  C13F  F155         	movff	??_floor+2,?___fladd
  3796  0018BA  C140  F156         	movff	??_floor+3,?___fladd+1
  3797  0018BE  C141  F157         	movff	??_floor+4,?___fladd+2
  3798  0018C2  C142  F158         	movff	??_floor+5,?___fladd+3
  3799  0018C6  ECE3  F00A         	call	___fladd	;wreg free
  3800  0018CA  C155  F139         	movff	?___fladd,?_floor
  3801  0018CE  C156  F13A         	movff	?___fladd+1,?_floor+1
  3802  0018D2  C157  F13B         	movff	?___fladd+2,?_floor+2
  3803  0018D6  C158  F13C         	movff	?___fladd+3,?_floor+3
  3804  0018DA  D008               	goto	l1966
  3805  0018DC                     l1970:
  3806                           ; BSR set to: 1
  3807  0018DC  C13F  F139         	movff	??_floor+2,?_floor
  3808  0018E0  C140  F13A         	movff	??_floor+3,?_floor+1
  3809  0018E4  C141  F13B         	movff	??_floor+4,?_floor+2
  3810  0018E8  C142  F13C         	movff	??_floor+5,?_floor+3
  3811  0018EC                     l1966:
  3812                           ; BSR set to: 1
  3813  0018EC  0012               	return	
  3814  0018EE                     __end_of_floor:
  3815                           	opt stack 0
  3816                           
  3817                           	psect	text31
  3818                           ; =============== function _floor ends =========
      +                          ===
  3819                           ; *************** function _eval_poly **********
      +                          *******
  3820                           ; Defined at:
  3821                           ;		line 5 in file "C:\Program Files (x86)\HI-TEC
      +                          H Software\PICC-18\PRO\9.66\sources\evalpoly.c"
  3822                           ; Parameters:
  3823                           ;		x              size:   4offs:   0	type: int 
  3824                           ;		d              size:   1offs:   4	type: PTR c
      +                          onst ; Largest target is 40
  3825                           ;		 -> F65(40), F64(36), 
  3826                           ;		n              size:   2offs:   5	type: int 
  3827                           ; Auto variables:
  3828                           ;		res         	       	type: int 
  3829                           ; Return value:
  3830                           ;		type: int 
  3831                           ;		size: 4
  3832                           ; Registers used:
  3833                           ;		wreg, fsr0l, fsr0h, fsr2l, status,2, status,0
      +                          , tblptrl, tblptrh, tblptru, tablat, prodl, prod
      +                          h, cstack
  3834                           ; Tracked objects:
  3835                           ;		On entry : F/1
  3836                           ;		On exit  : F/1
  3837                           ;		Unchanged: FFFFFFF0/0
  3838                           ; Data sizes:
  3839                           ;		Autos:    8
  3840                           ;		Params:   7
  3841                           ;		Temp:     1
  3842                           ;		Total:   16
  3843                           ; This function calls:
  3844                           ;		___flmul
  3845                           ;		___fladd
  3846                           ; This function is called by:
  3847                           ;		_log
  3848                           ;		_exp
  3849                           ; This function uses a non-reentrant model
  3850                           ; 
  3851  000000                     
  3852  0019D2                     _eval_poly:
  3853                           	opt stack 25
  3854                           ; BSR set to: 1
  3855  0019D2  514A               	movf	(?_eval_poly+5)& (0+255),w,b
  3856  0019D4  0D04               	mullw	4
  3857  0019D6  5149               	movf	(?_eval_poly+4)& (0+255),w,b
  3858  0019D8  24F3               	addwf	prodl,w,c
  3859  0019DA  6F54               	movwf	(??_eval_poly+8)& (0+255),b
  3860  0019DC  C154  FFF6         	movff	??_eval_poly+8,tblptrl
  3861  0019E0  0E08               	movlw	high __Lsmallconst
  3862  0019E2  6EF7               	movwf	tblptrh,c
  3863  0019E4  0009               	tblrd		*+
  3864  0019E6  CFF5 F150          	movff	tablat,??_eval_poly+4
  3865  0019EA  0009               	tblrd		*+
  3866  0019EC  CFF5 F151          	movff	tablat,??_eval_poly+5
  3867  0019F0  0009               	tblrd		*+
  3868  0019F2  CFF5 F152          	movff	tablat,??_eval_poly+6
  3869  0019F6  000A               	tblrd		*-
  3870  0019F8  CFF5 F153          	movff	tablat,??_eval_poly+7
  3871  0019FC                     l2389:
  3872                           ; BSR set to: 1
  3873  0019FC  514B               	movf	(?_eval_poly+6)& (0+255),w,b
  3874  0019FE  114A               	iorwf	(?_eval_poly+5)& (0+255),w,b
  3875  001A00  E046               	bz	u3180
  3876                           ; BSR set to: 1
  3877  001A02  C150  F159         	movff	??_eval_poly+4,?___flmul+4
  3878  001A06  C151  F15A         	movff	??_eval_poly+5,?___flmul+5
  3879  001A0A  C152  F15B         	movff	??_eval_poly+6,?___flmul+6
  3880  001A0E  C153  F15C         	movff	??_eval_poly+7,?___flmul+7
  3881  001A12  C145  F155         	movff	?_eval_poly,?___flmul
  3882  001A16  C146  F156         	movff	?_eval_poly+1,?___flmul+1
  3883  001A1A  C147  F157         	movff	?_eval_poly+2,?___flmul+2
  3884  001A1E  C148  F158         	movff	?_eval_poly+3,?___flmul+3
  3885  001A22  EC50  F00D         	call	___flmul	;wreg free
  3886  001A26  C155  F14C         	movff	?___flmul,??_eval_poly
  3887  001A2A  C156  F14D         	movff	?___flmul+1,??_eval_poly+1
  3888  001A2E  C157  F14E         	movff	?___flmul+2,??_eval_poly+2
  3889  001A32  C158  F14F         	movff	?___flmul+3,??_eval_poly+3
  3890  001A36  074A               	decf	(?_eval_poly+5)& (0+255),f,b
  3891  001A38  A0D8               	btfss	status,0,c
  3892  001A3A  074B               	decf	(?_eval_poly+6)& (0+255),f,b
  3893  001A3C  0101               	movlb	1	; () banked
  3894  001A3E  514A               	movf	(?_eval_poly+5)& (0+255),w,b
  3895  001A40  0D04               	mullw	4
  3896  001A42  5149               	movf	(?_eval_poly+4)& (0+255),w,b
  3897  001A44  24F3               	addwf	prodl,w,c
  3898  001A46  6F54               	movwf	(??_eval_poly+8)& (0+255),b
  3899  001A48  C154  FFF6         	movff	??_eval_poly+8,tblptrl
  3900  001A4C  0E08               	movlw	high __Lsmallconst
  3901  001A4E  6EF7               	movwf	tblptrh,c
  3902  001A50  0009               	tblrd		*+
  3903  001A52  CFF5 F159          	movff	tablat,?___fladd+4
  3904  001A56  0009               	tblrd		*+
  3905  001A58  CFF5 F15A          	movff	tablat,?___fladd+5
  3906  001A5C  0009               	tblrd		*+
  3907  001A5E  CFF5 F15B          	movff	tablat,?___fladd+6
  3908  001A62  000A               	tblrd		*-
  3909  001A64  CFF5 F15C          	movff	tablat,?___fladd+7
  3910  001A68  C14C  F155         	movff	??_eval_poly,?___fladd
  3911  001A6C  C14D  F156         	movff	??_eval_poly+1,?___fladd+1
  3912  001A70  C14E  F157         	movff	??_eval_poly+2,?___fladd+2
  3913  001A74  C14F  F158         	movff	??_eval_poly+3,?___fladd+3
  3914  001A78  ECE3  F00A         	call	___fladd	;wreg free
  3915  001A7C  C155  F150         	movff	?___fladd,??_eval_poly+4
  3916  001A80  C156  F151         	movff	?___fladd+1,??_eval_poly+5
  3917  001A84  C157  F152         	movff	?___fladd+2,??_eval_poly+6
  3918  001A88  C158  F153         	movff	?___fladd+3,??_eval_poly+7
  3919  001A8C  D7B7               	goto	l2389
  3920  001A8E                     u3180:
  3921                           ; BSR set to: 1
  3922  001A8E  C150  F145         	movff	??_eval_poly+4,?_eval_poly
  3923  001A92  C151  F146         	movff	??_eval_poly+5,?_eval_poly+1
  3924  001A96  C152  F147         	movff	??_eval_poly+6,?_eval_poly+2
  3925  001A9A  C153  F148         	movff	??_eval_poly+7,?_eval_poly+3
  3926                           ; BSR set to: 1
  3927  001A9E  0012               	return	
  3928  001AA0                     __end_of_eval_poly:
  3929                           	opt stack 0
  3930                           
  3931                           	psect	text32
  3932                           ; =============== function _eval_poly ends =====
      +                          =======
  3933                           ; *************** function _ldexp **************
      +                          ***
  3934                           ; Defined at:
  3935                           ;		line 278 in file "C:\Program Files (x86)\HI-T
      +                          ECH Software\PICC-18\PRO\9.66\sources\frexp.c"
  3936                           ; Parameters:
  3937                           ;		value          size:   4offs:   0	type: int 
  3938                           ;		newexp         size:   2offs:   4	type: int 
  3939                           ; Auto variables:
  3940                           ;		None
  3941                           ; Return value:
  3942                           ;		type: int 
  3943                           ;		size: 4
  3944                           ; Registers used:
  3945                           ;		wreg, fsr0l, fsr0h, status,2, status,0
  3946                           ; Tracked objects:
  3947                           ;		On entry : F/1
  3948                           ;		On exit  : F/1
  3949                           ;		Unchanged: FFFFFFF0/0
  3950                           ; Data sizes:
  3951                           ;		Autos:    0
  3952                           ;		Params:   6
  3953                           ;		Temp:     3
  3954                           ;		Total:    9
  3955                           ; This function calls:
  3956                           ; This function is called by:
  3957                           ;		_exp
  3958                           ; This function uses a non-reentrant model
  3959                           ; 
  3960  000000                     
  3961  001EEA                     _ldexp:
  3962                           	opt stack 25
  3963                           ; BSR set to: 1
  3964  001EEA  EE01  F039         	lfsr	0,?_ldexp
  3965  001EEE  50EE               	movf	postinc0,w,c
  3966  001EF0  10EE               	iorwf	postinc0,w,c
  3967  001EF2  10EE               	iorwf	postinc0,w,c
  3968  001EF4  10EE               	iorwf	postinc0,w,c
  3969  001EF6  E015               	bz	u3200
  3970                           ; BSR set to: 1
  3971  001EF8  0101               	movlb	1	; () banked
  3972  001EFA  513C               	movf	(?_ldexp+3)& (0+255),w,b
  3973  001EFC  0B7F               	andlw	127
  3974  001EFE  6F3F               	movwf	??_ldexp& (0+255),b
  3975  001F00  90D8               	bcf	status,0,c
  3976  001F02  353F               	rlcf	??_ldexp& (0+255),w,b
  3977  001F04  6F40               	movwf	(??_ldexp+1)& (0+255),b
  3978  001F06  6B41               	clrf	(??_ldexp+2)& (0+255),b
  3979  001F08  3741               	rlcf	(??_ldexp+2)& (0+255),f,b
  3980  001F0A  5140               	movf	(??_ldexp+1)& (0+255),w,b
  3981  001F0C  273D               	addwf	(?_ldexp+4)& (0+255),f,b
  3982  001F0E  5141               	movf	(??_ldexp+2)& (0+255),w,b
  3983  001F10  233E               	addwfc	(?_ldexp+5)& (0+255),f,b
  3984  001F12  353B               	rlcf	(?_ldexp+2)& (0+255),w,b
  3985  001F14  36E8               	rlcf	wreg,f,c
  3986  001F16  0B01               	andlw	1
  3987  001F18  273D               	addwf	(?_ldexp+4)& (0+255),f,b
  3988  001F1A  0E00               	movlw	0
  3989  001F1C  233E               	addwfc	(?_ldexp+5)& (0+255),f,b
  3990  001F1E  AF3E               	btfss	(?_ldexp+5)& (0+255),7,b
  3991  001F20  D005               	goto	l1988
  3992  001F22                     u3200:
  3993  001F22  6B39               	clrf	?_ldexp& (0+255),b
  3994  001F24  6B3A               	clrf	(?_ldexp+1)& (0+255),b
  3995  001F26  6B3B               	clrf	(?_ldexp+2)& (0+255),b
  3996  001F28  6B3C               	clrf	(?_ldexp+3)& (0+255),b
  3997  001F2A  D028               	goto	l1986
  3998  001F2C                     l1988:
  3999                           ; BSR set to: 1
  4000  001F2C  513E               	movf	(?_ldexp+5)& (0+255),w,b
  4001  001F2E  0A80               	xorlw	128
  4002  001F30  0F7F               	addlw	-129
  4003  001F32  0E00               	movlw	0
  4004  001F34  B4D8               	btfsc	status,2,c
  4005  001F36  5D3D               	subwf	(?_ldexp+4)& (0+255),w,b
  4006  001F38  E30B               	bnc	l1990
  4007  001F3A  6939               	setf	?_ldexp& (0+255),b
  4008  001F3C  693A               	setf	(?_ldexp+1)& (0+255),b
  4009  001F3E  0E7F               	movlw	127
  4010  001F40  6F3B               	movwf	(?_ldexp+2)& (0+255),b
  4011  001F42  AF3C               	btfss	(?_ldexp+3)& (0+255),7,b
  4012  001F44  D002               	goto	L8
  4013  001F46  0EFF               	movlw	255
  4014  001F48  D001               	goto	L7
  4015                           ; BSR set to: 1
  4016  001F4A                     L8:
  4017  001F4A  0E7F               	movlw	127
  4018  001F4C                     L7:
  4019  001F4C  6F3C               	movwf	(?_ldexp+3)& (0+255),b
  4020  001F4E  D016               	goto	l1986
  4021  001F50                     l1990:
  4022                           ; BSR set to: 1
  4023  001F50  353E               	rlcf	(?_ldexp+5)& (0+255),w,b
  4024  001F52  313E               	rrcf	(?_ldexp+5)& (0+255),w,b
  4025  001F54  6F40               	movwf	(??_ldexp+1)& (0+255),b
  4026  001F56  313D               	rrcf	(?_ldexp+4)& (0+255),w,b
  4027  001F58  6F3F               	movwf	??_ldexp& (0+255),b
  4028  001F5A  0101               	movlb	1	; () banked
  4029  001F5C  513C               	movf	(?_ldexp+3)& (0+255),w,b
  4030  001F5E  193F               	xorwf	??_ldexp& (0+255),w,b
  4031  001F60  0B80               	andlw	-128
  4032  001F62  193F               	xorwf	??_ldexp& (0+255),w,b
  4033  001F64  6F3C               	movwf	(?_ldexp+3)& (0+255),b
  4034  001F66  C13D  F13F         	movff	?_ldexp+4,??_ldexp
  4035  001F6A  0E01               	movlw	1
  4036  001F6C  173F               	andwf	??_ldexp& (0+255),f,b
  4037  001F6E  333F               	rrcf	??_ldexp& (0+255),f,b
  4038  001F70  333F               	rrcf	??_ldexp& (0+255),f,b
  4039  001F72  513B               	movf	(?_ldexp+2)& (0+255),w,b
  4040  001F74  193F               	xorwf	??_ldexp& (0+255),w,b
  4041  001F76  0B7F               	andlw	-129
  4042  001F78  193F               	xorwf	??_ldexp& (0+255),w,b
  4043  001F7A  6F3B               	movwf	(?_ldexp+2)& (0+255),b
  4044                           ; BSR set to: 1
  4045                           ; BSR set to: 1
  4046  001F7C                     l1986:
  4047                           ; BSR set to: 1
  4048  001F7C  0012               	return	
  4049  001F7E                     __end_of_ldexp:
  4050                           	opt stack 0
  4051                           
  4052                           	psect	text33
  4053                           ; =============== function _ldexp ends =========
      +                          ===
  4054                           ; *************** function ___fldiv ************
      +                          *****
  4055                           ; Defined at:
  4056                           ;		line 19 in file "C:\Program Files (x86)\HI-TE
      +                          CH Software\PICC-18\PRO\9.66\sources\fldiv.c"
  4057                           ; Parameters:
  4058                           ;		f1             size:   4offs:   0	type: int 
  4059                           ;		f2             size:   4offs:   4	type: int 
  4060                           ; Auto variables:
  4061                           ;		exp2        	       	type: unsigned char 
  4062                           ;		sign1       	       	type: unsigned char 
  4063                           ;		exp1        	       	type: unsigned char 
  4064                           ;		sign2       	       	type: unsigned char 
  4065                           ;		f3          	       	type: unsigned char 
  4066                           ; Return value:
  4067                           ;		type: unsigned char 
  4068                           ;		size: 4
  4069                           ; Registers used:
  4070                           ;		wreg, fsr0l, fsr0h, fsr2l, status,2, status,0
      +                          , prodl, prodh, cstack
  4071                           ; Tracked objects:
  4072                           ;		On entry : F/1
  4073                           ;		On exit  : F/1
  4074                           ;		Unchanged: FFFFFFF0/0
  4075                           ; Data sizes:
  4076                           ;		Autos:    6
  4077                           ;		Params:   8
  4078                           ;		Temp:     0
  4079                           ;		Total:   14
  4080                           ; This function calls:
  4081                           ;		___flunpack
  4082                           ;		___flpack
  4083                           ; This function is called by:
  4084                           ;		_format_double
  4085                           ;		_measure_inductance
  4086                           ;		___asfldiv
  4087                           ;		_exp
  4088                           ; This function uses a non-reentrant model
  4089                           ; 
  4090  000000                     
  4091  001DA0                     ___fldiv:
  4092                           	opt stack 25
  4093                           ; BSR set to: 1
  4094  001DA0  6B43               	clrf	(??___fldiv+2)& (0+255),b
  4095  001DA2  6B44               	clrf	(??___fldiv+3)& (0+255),b
  4096  001DA4  6B45               	clrf	(??___fldiv+4)& (0+255),b
  4097  001DA6  6B46               	clrf	(??___fldiv+5)& (0+255),b
  4098  001DA8  0E42               	movlw	low (??___fldiv+1)
  4099  001DAA  6F65               	movwf	(?___flunpack+2)& (0+255),b
  4100  001DAC  0E01               	movlw	high (??___fldiv+1)
  4101  001DAE  6F66               	movwf	(?___flunpack+3)& (0+255),b
  4102  001DB0  0E39               	movlw	low ?___fldiv
  4103  001DB2  6F63               	movwf	?___flunpack& (0+255),b
  4104  001DB4  0E01               	movlw	high ?___fldiv
  4105  001DB6  6F64               	movwf	(?___flunpack+1)& (0+255),b
  4106  001DB8  ECC7  F010         	call	___flunpack	;wreg free
  4107  001DBC  6ED9               	movwf	fsr2l,c
  4108  001DBE  6742               	tstfsz	(??___fldiv+1)& (0+255),b
  4109  001DC0  D001               	goto	l2135
  4110  001DC2  D03E               	goto	l2141
  4111  001DC4                     l2135:
  4112                           ; BSR set to: 1
  4113                           ; ___fldiv@sign2 allocated to prodh
  4114  001DC4  0E41               	movlw	low ??___fldiv
  4115  001DC6  6F65               	movwf	(?___flunpack+2)& (0+255),b
  4116  001DC8  0E01               	movlw	high ??___fldiv
  4117  001DCA  6F66               	movwf	(?___flunpack+3)& (0+255),b
  4118  001DCC  0E3D               	movlw	low (?___fldiv+4)
  4119  001DCE  6F63               	movwf	?___flunpack& (0+255),b
  4120  001DD0  0E01               	movlw	high (?___fldiv+4)
  4121  001DD2  6F64               	movwf	(?___flunpack+1)& (0+255),b
  4122  001DD4  ECC7  F010         	call	___flunpack	;wreg free
  4123  001DD8  6EF4               	movwf	prodh,c
  4124  001DDA  6741               	tstfsz	??___fldiv& (0+255),b
  4125  001DDC  D001               	goto	l2136
  4126  001DDE  D030               	goto	l2141
  4127  001DE0                     l2136:
  4128                           ; BSR set to: 1
  4129  001DE0  5141               	movf	??___fldiv& (0+255),w,b
  4130  001DE2  0F89               	addlw	137
  4131  001DE4  5F42               	subwf	(??___fldiv+1)& (0+255),f,b
  4132  001DE6  50F4               	movf	prodh,w,c
  4133  001DE8  1AD9               	xorwf	fsr2l,f,c
  4134                           ; ___fldiv@sign2 allocated to fsr0l
  4135  001DEA  0E20               	movlw	32
  4136  001DEC  6EE9               	movwf	fsr0l,c
  4137  001DEE                     l2139:
  4138                           ; BSR set to: 1
  4139  001DEE  90D8               	bcf	status,0,c
  4140  001DF0  3743               	rlcf	(??___fldiv+2)& (0+255),f,b
  4141  001DF2  3744               	rlcf	(??___fldiv+3)& (0+255),f,b
  4142  001DF4  3745               	rlcf	(??___fldiv+4)& (0+255),f,b
  4143  001DF6  3746               	rlcf	(??___fldiv+5)& (0+255),f,b
  4144  001DF8  513D               	movf	(?___fldiv+4)& (0+255),w,b
  4145  001DFA  5D39               	subwf	?___fldiv& (0+255),w,b
  4146  001DFC  513E               	movf	(?___fldiv+5)& (0+255),w,b
  4147  001DFE  593A               	subwfb	(?___fldiv+1)& (0+255),w,b
  4148  001E00  513F               	movf	(?___fldiv+6)& (0+255),w,b
  4149  001E02  593B               	subwfb	(?___fldiv+2)& (0+255),w,b
  4150  001E04  5140               	movf	(?___fldiv+7)& (0+255),w,b
  4151  001E06  593C               	subwfb	(?___fldiv+3)& (0+255),w,b
  4152  001E08  E309               	bnc	l2140
  4153  001E0A  513D               	movf	(?___fldiv+4)& (0+255),w,b
  4154  001E0C  5F39               	subwf	?___fldiv& (0+255),f,b
  4155  001E0E  513E               	movf	(?___fldiv+5)& (0+255),w,b
  4156  001E10  5B3A               	subwfb	(?___fldiv+1)& (0+255),f,b
  4157  001E12  513F               	movf	(?___fldiv+6)& (0+255),w,b
  4158  001E14  5B3B               	subwfb	(?___fldiv+2)& (0+255),f,b
  4159  001E16  5140               	movf	(?___fldiv+7)& (0+255),w,b
  4160  001E18  5B3C               	subwfb	(?___fldiv+3)& (0+255),f,b
  4161  001E1A  8143               	bsf	(??___fldiv+2)& (0+255),0,b
  4162  001E1C                     l2140:
  4163                           ; BSR set to: 1
  4164  001E1C  90D8               	bcf	status,0,c
  4165  001E1E  3739               	rlcf	?___fldiv& (0+255),f,b
  4166  001E20  373A               	rlcf	(?___fldiv+1)& (0+255),f,b
  4167  001E22  373B               	rlcf	(?___fldiv+2)& (0+255),f,b
  4168  001E24  373C               	rlcf	(?___fldiv+3)& (0+255),f,b
  4169  001E26  2EE9               	decfsz	fsr0l,f,c
  4170  001E28  D7E2               	goto	l2139
  4171                           ; BSR set to: 1
  4172  001E2A  C142  F165         	movff	??___fldiv+1,?___flpack+2
  4173  001E2E  0E43               	movlw	low (??___fldiv+2)
  4174  001E30  6F63               	movwf	?___flpack& (0+255),b
  4175  001E32  0E01               	movlw	high (??___fldiv+2)
  4176  001E34  6F64               	movwf	(?___flpack+1)& (0+255),b
  4177  001E36  EC77  F00C         	call	___flpack	;wreg free
  4178  001E3A  50D9               	movf	fsr2l,w,c
  4179  001E3C  A4D8               	btfss	status,2,c
  4180  001E3E  8F46               	bsf	(??___fldiv+5)& (0+255),7,b
  4181  001E40                     l2141:
  4182                           ; BSR set to: 1
  4183  001E40  C143  F139         	movff	??___fldiv+2,?___fldiv
  4184  001E44  C144  F13A         	movff	??___fldiv+3,?___fldiv+1
  4185  001E48  C145  F13B         	movff	??___fldiv+4,?___fldiv+2
  4186  001E4C  C146  F13C         	movff	??___fldiv+5,?___fldiv+3
  4187                           ; BSR set to: 1
  4188  001E50  0012               	return	
  4189  001E52                     __end_of___fldiv:
  4190                           	opt stack 0
  4191                           
  4192                           	psect	text34
  4193                           ; =============== function ___fldiv ends =======
      +                          =====
  4194                           ; *************** function ___awtofl ***********
      +                          ******
  4195                           ; Defined at:
  4196                           ;		line 16 in file "C:\Program Files (x86)\HI-TE
      +                          CH Software\PICC-18\PRO\9.66\sources\awtofl.c"
  4197                           ; Parameters:
  4198                           ;		c              size:   2offs:   0	type: int 
  4199                           ; Auto variables:
  4200                           ;		f1          	       	type: int 
  4201                           ; Return value:
  4202                           ;		type: int 
  4203                           ;		size: 4
  4204                           ; Registers used:
  4205                           ;		wreg, fsr0l, fsr0h, status,2, status,0, cstac
      +                          k
  4206                           ; Tracked objects:
  4207                           ;		On entry : F/1
  4208                           ;		On exit  : F/1
  4209                           ;		Unchanged: FFFFFFF0/0
  4210                           ; Data sizes:
  4211                           ;		Autos:    4
  4212                           ;		Params:   4
  4213                           ;		Temp:     0
  4214                           ;		Total:    8
  4215                           ; This function calls:
  4216                           ;		___flpack
  4217                           ;		___flneg
  4218                           ; This function is called by:
  4219                           ;		_format_double
  4220                           ;		_log
  4221                           ;		_exp
  4222                           ; This function uses a non-reentrant model
  4223                           ; 
  4224  000000                     
  4225  002096                     ___awtofl:
  4226                           	opt stack 25
  4227                           ; BSR set to: 1
  4228  002096  5146               	movf	(?___awtofl+1)& (0+255),w,b
  4229  002098  1145               	iorwf	?___awtofl& (0+255),w,b
  4230  00209A  E105               	bnz	l2078
  4231  00209C  6B45               	clrf	?___awtofl& (0+255),b
  4232  00209E  6B46               	clrf	(?___awtofl+1)& (0+255),b
  4233  0020A0  6B47               	clrf	(?___awtofl+2)& (0+255),b
  4234  0020A2  6B48               	clrf	(?___awtofl+3)& (0+255),b
  4235  0020A4  D037               	goto	l2077
  4236  0020A6                     l2078:
  4237                           ; BSR set to: 1
  4238  0020A6  C145  F149         	movff	?___awtofl,??___awtofl
  4239  0020AA  C146  F14A         	movff	?___awtofl+1,??___awtofl+1
  4240  0020AE  0E00               	movlw	0
  4241  0020B0  BF4A               	btfsc	(??___awtofl+1)& (0+255),7,b
  4242  0020B2  0EFF               	movlw	-1
  4243  0020B4  6F4B               	movwf	(??___awtofl+2)& (0+255),b
  4244  0020B6  6F4C               	movwf	(??___awtofl+3)& (0+255),b
  4245  0020B8  AF46               	btfss	(?___awtofl+1)& (0+255),7,b
  4246  0020BA  D008               	goto	l2079
  4247  0020BC  1F4C               	comf	(??___awtofl+3)& (0+255),f,b
  4248  0020BE  1F4B               	comf	(??___awtofl+2)& (0+255),f,b
  4249  0020C0  1F4A               	comf	(??___awtofl+1)& (0+255),f,b
  4250  0020C2  6D49               	negf	??___awtofl& (0+255),b
  4251  0020C4  0E00               	movlw	0
  4252  0020C6  234A               	addwfc	(??___awtofl+1)& (0+255),f,b
  4253  0020C8  234B               	addwfc	(??___awtofl+2)& (0+255),f,b
  4254  0020CA  234C               	addwfc	(??___awtofl+3)& (0+255),f,b
  4255  0020CC                     l2079:
  4256                           ; BSR set to: 1
  4257  0020CC  0E96               	movlw	150
  4258  0020CE  6F65               	movwf	(?___flpack+2)& (0+255),b
  4259  0020D0  0E49               	movlw	low ??___awtofl
  4260  0020D2  6F63               	movwf	?___flpack& (0+255),b
  4261  0020D4  0E01               	movlw	high ??___awtofl
  4262  0020D6  6F64               	movwf	(?___flpack+1)& (0+255),b
  4263  0020D8  EC77  F00C         	call	___flpack	;wreg free
  4264  0020DC  AF46               	btfss	(?___awtofl+1)& (0+255),7,b
  4265  0020DE  D012               	goto	l2080
  4266  0020E0  C149  F14D         	movff	??___awtofl,?___flneg
  4267  0020E4  C14A  F14E         	movff	??___awtofl+1,?___flneg+1
  4268  0020E8  C14B  F14F         	movff	??___awtofl+2,?___flneg+2
  4269  0020EC  C14C  F150         	movff	??___awtofl+3,?___flneg+3
  4270  0020F0  EC31  F013         	call	___flneg	;wreg free
  4271  0020F4  C14D  F149         	movff	?___flneg,??___awtofl
  4272  0020F8  C14E  F14A         	movff	?___flneg+1,??___awtofl+1
  4273  0020FC  C14F  F14B         	movff	?___flneg+2,??___awtofl+2
  4274  002100  C150  F14C         	movff	?___flneg+3,??___awtofl+3
  4275  002104                     l2080:
  4276                           ; BSR set to: 1
  4277  002104  C149  F145         	movff	??___awtofl,?___awtofl
  4278  002108  C14A  F146         	movff	??___awtofl+1,?___awtofl+1
  4279  00210C  C14B  F147         	movff	??___awtofl+2,?___awtofl+2
  4280  002110  C14C  F148         	movff	??___awtofl+3,?___awtofl+3
  4281  002114                     l2077:
  4282                           ; BSR set to: 1
  4283  002114  0012               	return	
  4284  002116                     __end_of___awtofl:
  4285                           	opt stack 0
  4286                           
  4287                           	psect	text35
  4288                           ; =============== function ___awtofl ends ======
      +                          ======
  4289                           ; *************** function ___flsub ************
      +                          *****
  4290                           ; Defined at:
  4291                           ;		line 17 in file "C:\Program Files (x86)\HI-TE
      +                          CH Software\PICC-18\PRO\9.66\sources\flsub.c"
  4292                           ; Parameters:
  4293                           ;		f1             size:   4offs:   0	type: int 
  4294                           ;		f2             size:   4offs:   4	type: int 
  4295                           ; Auto variables:
  4296                           ;		None
  4297                           ; Return value:
  4298                           ;		type: int 
  4299                           ;		size: 4
  4300                           ; Registers used:
  4301                           ;		wreg, fsr0l, fsr0h, fsr2l, status,2, status,0
      +                          , prodl, prodh, cstack
  4302                           ; Tracked objects:
  4303                           ;		On entry : F/1
  4304                           ;		On exit  : F/1
  4305                           ;		Unchanged: FFFFFFF0/0
  4306                           ; Data sizes:
  4307                           ;		Autos:    0
  4308                           ;		Params:   8
  4309                           ;		Temp:     0
  4310                           ;		Total:    8
  4311                           ; This function calls:
  4312                           ;		___fladd
  4313                           ; This function is called by:
  4314                           ;		_measure_capacitance
  4315                           ;		_measure_inductance
  4316                           ;		___asflsub
  4317                           ; This function uses a non-reentrant model
  4318                           ; 
  4319  000000                     
  4320  00251A                     ___flsub:
  4321                           	opt stack 24
  4322                           ; BSR set to: 1
  4323  00251A  0E80               	movlw	128
  4324  00251C  1B46               	xorwf	(?___flsub+7)& (0+255),f,b
  4325  00251E  C143  F159         	movff	?___flsub+4,?___fladd+4
  4326  002522  C144  F15A         	movff	?___flsub+5,?___fladd+5
  4327  002526  C145  F15B         	movff	?___flsub+6,?___fladd+6
  4328  00252A  C146  F15C         	movff	?___flsub+7,?___fladd+7
  4329  00252E  C13F  F155         	movff	?___flsub,?___fladd
  4330  002532  C140  F156         	movff	?___flsub+1,?___fladd+1
  4331  002536  C141  F157         	movff	?___flsub+2,?___fladd+2
  4332  00253A  C142  F158         	movff	?___flsub+3,?___fladd+3
  4333  00253E  ECE3  F00A         	call	___fladd	;wreg free
  4334  002542  C155  F13F         	movff	?___fladd,?___flsub
  4335  002546  C156  F140         	movff	?___fladd+1,?___flsub+1
  4336  00254A  C157  F141         	movff	?___fladd+2,?___flsub+2
  4337  00254E  C158  F142         	movff	?___fladd+3,?___flsub+3
  4338                           ; BSR set to: 1
  4339  002552  0012               	return	
  4340  002554                     __end_of___flsub:
  4341                           	opt stack 0
  4342                           
  4343                           	psect	text36
  4344                           ; =============== function ___flsub ends =======
      +                          =====
  4345                           ; *************** function _frexp **************
      +                          ***
  4346                           ; Defined at:
  4347                           ;		line 255 in file "C:\Program Files (x86)\HI-T
      +                          ECH Software\PICC-18\PRO\9.66\sources\frexp.c"
  4348                           ; Parameters:
  4349                           ;		value          size:   4offs:   0	type: int 
  4350                           ;		eptr           size:   2offs:   4	type: PTR i
      +                          nt ; Largest target is 2
  4351                           ;		 -> log@exp(2), floor@expon(2), 
  4352                           ; Auto variables:
  4353                           ;		None
  4354                           ; Return value:
  4355                           ;		type: PTR int 
  4356                           ;		size: 4
  4357                           ; Registers used:
  4358                           ;		wreg, fsr0l, fsr0h, status,2, status,0
  4359                           ; Tracked objects:
  4360                           ;		On entry : F/1
  4361                           ;		On exit  : F/1
  4362                           ;		Unchanged: FFFFFFF0/0
  4363                           ; Data sizes:
  4364                           ;		Autos:    0
  4365                           ;		Params:   6
  4366                           ;		Temp:     3
  4367                           ;		Total:    9
  4368                           ; This function calls:
  4369                           ;		Nothing
  4370                           ; This function is called by:
  4371                           ;		_floor
  4372                           ;		_log
  4373                           ; This function uses a non-reentrant model
  4374                           ; 
  4375  000000                     
  4376  002116                     _frexp:
  4377                           	opt stack 24
  4378                           ; BSR set to: 1
  4379  002116  EE01  F045         	lfsr	0,?_frexp
  4380  00211A  50EE               	movf	postinc0,w,c
  4381  00211C  10EE               	iorwf	postinc0,w,c
  4382  00211E  10EE               	iorwf	postinc0,w,c
  4383  002120  10EE               	iorwf	postinc0,w,c
  4384  002122  E10C               	bnz	l1985
  4385  002124  C149  FFE9         	movff	?_frexp+4,fsr0l
  4386  002128  C14A  FFEA         	movff	?_frexp+5,fsr0h
  4387  00212C  0E00               	movlw	0
  4388  00212E  6AEE               	clrf	postinc0,c
  4389  002130  6AED               	clrf	postdec0,c
  4390  002132  6B45               	clrf	?_frexp& (0+255),b
  4391  002134  6B46               	clrf	(?_frexp+1)& (0+255),b
  4392  002136  6B47               	clrf	(?_frexp+2)& (0+255),b
  4393  002138  6B48               	clrf	(?_frexp+3)& (0+255),b
  4394  00213A  D028               	goto	l1984
  4395  00213C                     l1985:
  4396                           ; BSR set to: 1
  4397  00213C  0101               	movlb	1	; () banked
  4398  00213E  5148               	movf	(?_frexp+3)& (0+255),w,b
  4399  002140  0B7F               	andlw	127
  4400  002142  6F4B               	movwf	??_frexp& (0+255),b
  4401  002144  90D8               	bcf	status,0,c
  4402  002146  354B               	rlcf	??_frexp& (0+255),w,b
  4403  002148  6F4C               	movwf	(??_frexp+1)& (0+255),b
  4404  00214A  6B4D               	clrf	(??_frexp+2)& (0+255),b
  4405  00214C  374D               	rlcf	(??_frexp+2)& (0+255),f,b
  4406  00214E  C149  FFE9         	movff	?_frexp+4,fsr0l
  4407  002152  C14A  FFEA         	movff	?_frexp+5,fsr0h
  4408  002156  C14C  FFEE         	movff	??_frexp+1,postinc0
  4409  00215A  C14D  FFED         	movff	??_frexp+2,postdec0
  4410  00215E  3547               	rlcf	(?_frexp+2)& (0+255),w,b
  4411  002160  36E8               	rlcf	wreg,f,c
  4412  002162  0B01               	andlw	1
  4413  002164  C149  FFE9         	movff	?_frexp+4,fsr0l
  4414  002168  C14A  FFEA         	movff	?_frexp+5,fsr0h
  4415  00216C  12EE               	iorwf	postinc0,f,c
  4416  00216E  0E00               	movlw	0
  4417  002170  12ED               	iorwf	postdec0,f,c
  4418  002172  C149  FFE9         	movff	?_frexp+4,fsr0l
  4419  002176  C14A  FFEA         	movff	?_frexp+5,fsr0h
  4420  00217A  0E82               	movlw	130
  4421  00217C  26EE               	addwf	postinc0,f,c
  4422  00217E  0EFF               	movlw	255
  4423  002180  22ED               	addwfc	postdec0,f,c
  4424  002182  5148               	movf	(?_frexp+3)& (0+255),w,b
  4425  002184  0B80               	andlw	-128
  4426  002186  093F               	iorlw	63
  4427  002188  6F48               	movwf	(?_frexp+3)& (0+255),b
  4428  00218A  9F47               	bcf	(?_frexp+2)& (0+255),7,b
  4429  00218C                     l1984:
  4430                           ; BSR set to: 1
  4431  00218C  0012               	return	
  4432  00218E                     __end_of_frexp:
  4433                           	opt stack 0
  4434                           
  4435                           	psect	text37
  4436                           ; =============== function _frexp ends =========
      +                          ===
  4437                           ; *************** function ___flmul ************
      +                          *****
  4438                           ; Defined at:
  4439                           ;		line 18 in file "C:\Program Files (x86)\HI-TE
      +                          CH Software\PICC-18\PRO\9.66\sources\flmul.c"
  4440                           ; Parameters:
  4441                           ;		f1             size:   4offs:   0	type: PTR i
      +                          nt 
  4442                           ;		f2             size:   4offs:   4	type: PTR i
      +                          nt 
  4443                           ; Auto variables:
  4444                           ;		sign1       	       	type: unsigned char 
  4445                           ;		exp1        	       	type: unsigned char 
  4446                           ;		cntr        	       	type: unsigned char 
  4447                           ;		f3          	       	type: unsigned char 
  4448                           ; Return value:
  4449                           ;		type: unsigned char 
  4450                           ;		size: 4
  4451                           ; Registers used:
  4452                           ;		wreg, fsr0l, fsr0h, fsr2l, status,2, status,0
      +                          , prodl, cstack
  4453                           ; Tracked objects:
  4454                           ;		On entry : F/1
  4455                           ;		On exit  : F/1
  4456                           ;		Unchanged: FFFFFFF0/0
  4457                           ; Data sizes:
  4458                           ;		Autos:    6
  4459                           ;		Params:   8
  4460                           ;		Temp:     0
  4461                           ;		Total:   14
  4462                           ; This function calls:
  4463                           ;		___flunpack
  4464                           ;		___flpack
  4465                           ; This function is called by:
  4466                           ;		_format_double
  4467                           ;		_measure_capacitance
  4468                           ;		_measure_inductance
  4469                           ;		_log
  4470                           ;		_log10
  4471                           ;		_pow
  4472                           ;		___asflmul
  4473                           ;		_eval_poly
  4474                           ; This function uses a non-reentrant model
  4475                           ; 
  4476  000000                     
  4477  001AA0                     ___flmul:
  4478                           	opt stack 24
  4479                           ; BSR set to: 1
  4480  001AA0  6B5F               	clrf	(??___flmul+2)& (0+255),b
  4481  001AA2  6B60               	clrf	(??___flmul+3)& (0+255),b
  4482  001AA4  6B61               	clrf	(??___flmul+4)& (0+255),b
  4483  001AA6  6B62               	clrf	(??___flmul+5)& (0+255),b
  4484  001AA8  0E5D               	movlw	low ??___flmul
  4485  001AAA  6F65               	movwf	(?___flunpack+2)& (0+255),b
  4486  001AAC  0E01               	movlw	high ??___flmul
  4487  001AAE  6F66               	movwf	(?___flunpack+3)& (0+255),b
  4488  001AB0  0E55               	movlw	low ?___flmul
  4489  001AB2  6F63               	movwf	?___flunpack& (0+255),b
  4490  001AB4  0E01               	movlw	high ?___flmul
  4491  001AB6  6F64               	movwf	(?___flunpack+1)& (0+255),b
  4492  001AB8  ECC7  F010         	call	___flunpack	;wreg free
  4493  001ABC  6ED9               	movwf	fsr2l,c
  4494  001ABE  0E5E               	movlw	low (??___flmul+1)
  4495  001AC0  6F65               	movwf	(?___flunpack+2)& (0+255),b
  4496  001AC2  0E01               	movlw	high (??___flmul+1)
  4497  001AC4  6F66               	movwf	(?___flunpack+3)& (0+255),b
  4498  001AC6  0E59               	movlw	low (?___flmul+4)
  4499  001AC8  6F63               	movwf	?___flunpack& (0+255),b
  4500  001ACA  0E01               	movlw	high (?___flmul+4)
  4501  001ACC  6F64               	movwf	(?___flunpack+1)& (0+255),b
  4502  001ACE  ECC7  F010         	call	___flunpack	;wreg free
  4503  001AD2  1AD9               	xorwf	fsr2l,f,c
  4504  001AD4  515E               	movf	(??___flmul+1)& (0+255),w,b
  4505  001AD6  E041               	bz	l2153
  4506  001AD8  675D               	tstfsz	??___flmul& (0+255),b
  4507  001ADA  D001               	goto	l2144
  4508  001ADC  D03E               	goto	l2153
  4509                           ; BSR set to: 1
  4510  001ADE                     l2144:
  4511                           ; BSR set to: 1
  4512  001ADE  515E               	movf	(??___flmul+1)& (0+255),w,b
  4513  001AE0  0F7B               	addlw	123
  4514  001AE2  275D               	addwf	??___flmul& (0+255),f,b
  4515  001AE4  0E07               	movlw	7
  4516  001AE6  6F5E               	movwf	(??___flmul+1)& (0+255),b
  4517  001AE8                     l2147:
  4518                           ; BSR set to: 1
  4519  001AE8  A155               	btfss	?___flmul& (0+255),0,b
  4520  001AEA  D008               	goto	l2148
  4521  001AEC  5159               	movf	(?___flmul+4)& (0+255),w,b
  4522  001AEE  275F               	addwf	(??___flmul+2)& (0+255),f,b
  4523  001AF0  515A               	movf	(?___flmul+5)& (0+255),w,b
  4524  001AF2  2360               	addwfc	(??___flmul+3)& (0+255),f,b
  4525  001AF4  515B               	movf	(?___flmul+6)& (0+255),w,b
  4526  001AF6  2361               	addwfc	(??___flmul+4)& (0+255),f,b
  4527  001AF8  515C               	movf	(?___flmul+7)& (0+255),w,b
  4528  001AFA  2362               	addwfc	(??___flmul+5)& (0+255),f,b
  4529  001AFC                     l2148:
  4530                           ; BSR set to: 1
  4531  001AFC  90D8               	bcf	status,0,c
  4532  001AFE  3358               	rrcf	(?___flmul+3)& (0+255),f,b
  4533  001B00  3357               	rrcf	(?___flmul+2)& (0+255),f,b
  4534  001B02  3356               	rrcf	(?___flmul+1)& (0+255),f,b
  4535  001B04  3355               	rrcf	?___flmul& (0+255),f,b
  4536  001B06  90D8               	bcf	status,0,c
  4537  001B08  3759               	rlcf	(?___flmul+4)& (0+255),f,b
  4538  001B0A  375A               	rlcf	(?___flmul+5)& (0+255),f,b
  4539  001B0C  375B               	rlcf	(?___flmul+6)& (0+255),f,b
  4540  001B0E  375C               	rlcf	(?___flmul+7)& (0+255),f,b
  4541  001B10  2F5E               	decfsz	(??___flmul+1)& (0+255),f,b
  4542  001B12  D7EA               	goto	l2147
  4543                           ; BSR set to: 1
  4544  001B14  0E11               	movlw	17
  4545  001B16  6F5E               	movwf	(??___flmul+1)& (0+255),b
  4546  001B18                     l2151:
  4547                           ; BSR set to: 1
  4548  001B18  A155               	btfss	?___flmul& (0+255),0,b
  4549  001B1A  D008               	goto	l2152
  4550  001B1C  5159               	movf	(?___flmul+4)& (0+255),w,b
  4551  001B1E  275F               	addwf	(??___flmul+2)& (0+255),f,b
  4552  001B20  515A               	movf	(?___flmul+5)& (0+255),w,b
  4553  001B22  2360               	addwfc	(??___flmul+3)& (0+255),f,b
  4554  001B24  515B               	movf	(?___flmul+6)& (0+255),w,b
  4555  001B26  2361               	addwfc	(??___flmul+4)& (0+255),f,b
  4556  001B28  515C               	movf	(?___flmul+7)& (0+255),w,b
  4557  001B2A  2362               	addwfc	(??___flmul+5)& (0+255),f,b
  4558  001B2C                     l2152:
  4559                           ; BSR set to: 1
  4560  001B2C  90D8               	bcf	status,0,c
  4561  001B2E  3358               	rrcf	(?___flmul+3)& (0+255),f,b
  4562  001B30  3357               	rrcf	(?___flmul+2)& (0+255),f,b
  4563  001B32  3356               	rrcf	(?___flmul+1)& (0+255),f,b
  4564  001B34  3355               	rrcf	?___flmul& (0+255),f,b
  4565  001B36  90D8               	bcf	status,0,c
  4566  001B38  3362               	rrcf	(??___flmul+5)& (0+255),f,b
  4567  001B3A  3361               	rrcf	(??___flmul+4)& (0+255),f,b
  4568  001B3C  3360               	rrcf	(??___flmul+3)& (0+255),f,b
  4569  001B3E  335F               	rrcf	(??___flmul+2)& (0+255),f,b
  4570  001B40  2F5E               	decfsz	(??___flmul+1)& (0+255),f,b
  4571  001B42  D7EA               	goto	l2151
  4572                           ; BSR set to: 1
  4573  001B44  C15D  F165         	movff	??___flmul,?___flpack+2
  4574  001B48  0E5F               	movlw	low (??___flmul+2)
  4575  001B4A  6F63               	movwf	?___flpack& (0+255),b
  4576  001B4C  0E01               	movlw	high (??___flmul+2)
  4577  001B4E  6F64               	movwf	(?___flpack+1)& (0+255),b
  4578  001B50  EC77  F00C         	call	___flpack	;wreg free
  4579  001B54  50D9               	movf	fsr2l,w,c
  4580  001B56  A4D8               	btfss	status,2,c
  4581  001B58  8F62               	bsf	(??___flmul+5)& (0+255),7,b
  4582  001B5A                     l2153:
  4583                           ; BSR set to: 1
  4584  001B5A  C15F  F155         	movff	??___flmul+2,?___flmul
  4585  001B5E  C160  F156         	movff	??___flmul+3,?___flmul+1
  4586  001B62  C161  F157         	movff	??___flmul+4,?___flmul+2
  4587  001B66  C162  F158         	movff	??___flmul+5,?___flmul+3
  4588                           ; BSR set to: 1
  4589  001B6A  0012               	return	
  4590  001B6C                     __end_of___flmul:
  4591                           	opt stack 0
  4592                           
  4593                           	psect	text38
  4594                           ; =============== function ___flmul ends =======
      +                          =====
  4595                           ; *************** function ___fltol ************
      +                          *****
  4596                           ; Defined at:
  4597                           ;		line 16 in file "C:\Program Files (x86)\HI-TE
      +                          CH Software\PICC-18\PRO\9.66\sources\fltol.c"
  4598                           ; Parameters:
  4599                           ;		f1             size:   4offs:   0	type: unsig
      +                          ned char 
  4600                           ; Auto variables:
  4601                           ;		sign1       	       	type: unsigned char 
  4602                           ;		exp1        	       	type: unsigned char 
  4603                           ;		lval        	       	type: unsigned long 
  4604                           ; Return value:
  4605                           ;		type: long 
  4606                           ;		size: 4
  4607                           ; Registers used:
  4608                           ;		wreg, fsr0l, fsr0h, fsr2l, status,2, status,0
      +                          , prodl, cstack
  4609                           ; Tracked objects:
  4610                           ;		On entry : F/1
  4611                           ;		On exit  : F/1
  4612                           ;		Unchanged: FFFFFFF0/0
  4613                           ; Data sizes:
  4614                           ;		Autos:    5
  4615                           ;		Params:   4
  4616                           ;		Temp:     0
  4617                           ;		Total:    9
  4618                           ; This function calls:
  4619                           ;		___flunpack
  4620                           ; This function is called by:
  4621                           ;		_format_double
  4622                           ;		_measure_capacitance
  4623                           ;		_measure_inductance
  4624                           ;		_floor
  4625                           ;		_pow
  4626                           ;		_exp
  4627                           ; This function uses a non-reentrant model
  4628                           ; 
  4629  000000                     
  4630  001F7E                     ___fltol:
  4631                           	opt stack 24
  4632                           ; BSR set to: 1
  4633  001F7E  0E47               	movlw	low ??___fltol
  4634  001F80  6F65               	movwf	(?___flunpack+2)& (0+255),b
  4635  001F82  0E01               	movlw	high ??___fltol
  4636  001F84  6F66               	movwf	(?___flunpack+3)& (0+255),b
  4637  001F86  0E43               	movlw	low ?___fltol
  4638  001F88  6F63               	movwf	?___flunpack& (0+255),b
  4639  001F8A  0E01               	movlw	high ?___fltol
  4640  001F8C  6F64               	movwf	(?___flunpack+1)& (0+255),b
  4641  001F8E  ECC7  F010         	call	___flunpack	;wreg free
  4642  001F92  6ED9               	movwf	fsr2l,c
  4643  001F94  C143  F148         	movff	?___fltol,??___fltol+1
  4644  001F98  C144  F149         	movff	?___fltol+1,??___fltol+2
  4645  001F9C  C145  F14A         	movff	?___fltol+2,??___fltol+3
  4646  001FA0  C146  F14B         	movff	?___fltol+3,??___fltol+4
  4647  001FA4  0E96               	movlw	150
  4648  001FA6  5F47               	subwf	??___fltol& (0+255),f,b
  4649  001FA8  AF47               	btfss	??___fltol& (0+255),7,b
  4650  001FAA  D00C               	goto	l2177
  4651  001FAC  5147               	movf	??___fltol& (0+255),w,b
  4652  001FAE  0A80               	xorlw	128
  4653  001FB0  0F97               	addlw	151
  4654  001FB2  E30B               	bnc	u3430
  4655  001FB4                     l2181:
  4656                           ; BSR set to: 1
  4657  001FB4  90D8               	bcf	status,0,c
  4658  001FB6  334B               	rrcf	(??___fltol+4)& (0+255),f,b
  4659  001FB8  334A               	rrcf	(??___fltol+3)& (0+255),f,b
  4660  001FBA  3349               	rrcf	(??___fltol+2)& (0+255),f,b
  4661  001FBC  3348               	rrcf	(??___fltol+1)& (0+255),f,b
  4662  001FBE  3F47               	incfsz	??___fltol& (0+255),f,b
  4663  001FC0  D7F9               	goto	l2181
  4664                           ; BSR set to: 1
  4665  001FC2  D010               	goto	l2182
  4666  001FC4                     l2177:
  4667                           ; BSR set to: 1
  4668  001FC4  0E1F               	movlw	31
  4669  001FC6  6547               	cpfsgt	??___fltol& (0+255),b
  4670  001FC8  D00B               	goto	l2184
  4671  001FCA                     u3430:
  4672  001FCA  6B43               	clrf	?___fltol& (0+255),b
  4673  001FCC  6B44               	clrf	(?___fltol+1)& (0+255),b
  4674  001FCE  6B45               	clrf	(?___fltol+2)& (0+255),b
  4675  001FD0  6B46               	clrf	(?___fltol+3)& (0+255),b
  4676  001FD2  D01A               	goto	l2176
  4677                           ; BSR set to: 1
  4678  001FD4                     l2185:
  4679                           ; BSR set to: 1
  4680  001FD4  90D8               	bcf	status,0,c
  4681  001FD6  3748               	rlcf	(??___fltol+1)& (0+255),f,b
  4682  001FD8  3749               	rlcf	(??___fltol+2)& (0+255),f,b
  4683  001FDA  374A               	rlcf	(??___fltol+3)& (0+255),f,b
  4684  001FDC  374B               	rlcf	(??___fltol+4)& (0+255),f,b
  4685  001FDE  0747               	decf	??___fltol& (0+255),f,b
  4686  001FE0                     l2184:
  4687                           ; BSR set to: 1
  4688  001FE0  6747               	tstfsz	??___fltol& (0+255),b
  4689  001FE2  D7F8               	goto	l2185
  4690                           ; BSR set to: 1
  4691  001FE4                     l2182:
  4692                           ; BSR set to: 1
  4693  001FE4  50D9               	movf	fsr2l,w,c
  4694  001FE6  E008               	bz	l2187
  4695  001FE8  1F4B               	comf	(??___fltol+4)& (0+255),f,b
  4696  001FEA  1F4A               	comf	(??___fltol+3)& (0+255),f,b
  4697  001FEC  1F49               	comf	(??___fltol+2)& (0+255),f,b
  4698  001FEE  6D48               	negf	(??___fltol+1)& (0+255),b
  4699  001FF0  0E00               	movlw	0
  4700  001FF2  2349               	addwfc	(??___fltol+2)& (0+255),f,b
  4701  001FF4  234A               	addwfc	(??___fltol+3)& (0+255),f,b
  4702  001FF6  234B               	addwfc	(??___fltol+4)& (0+255),f,b
  4703  001FF8                     l2187:
  4704                           ; BSR set to: 1
  4705  001FF8  C148  F143         	movff	??___fltol+1,?___fltol
  4706  001FFC  C149  F144         	movff	??___fltol+2,?___fltol+1
  4707  002000  C14A  F145         	movff	??___fltol+3,?___fltol+2
  4708  002004  C14B  F146         	movff	??___fltol+4,?___fltol+3
  4709  002008                     l2176:
  4710                           ; BSR set to: 1
  4711  002008  0012               	return	
  4712  00200A                     __end_of___fltol:
  4713                           	opt stack 0
  4714                           
  4715                           	psect	text39
  4716                           ; =============== function ___fltol ends =======
      +                          =====
  4717                           ; *************** function ___altofl ***********
      +                          ******
  4718                           ; Defined at:
  4719                           ;		line 16 in file "C:\Program Files (x86)\HI-TE
      +                          CH Software\PICC-18\PRO\9.66\sources\altofl.c"
  4720                           ; Parameters:
  4721                           ;		c              size:   4offs:   0	type: long 
  4722                           ; Auto variables:
  4723                           ;		exp         	       	type: unsigned char 
  4724                           ;		sign        	       	type: unsigned char 
  4725                           ;		f1          	       	type: unsigned char 
  4726                           ; Return value:
  4727                           ;		type: unsigned char 
  4728                           ;		size: 4
  4729                           ; Registers used:
  4730                           ;		wreg, fsr0l, fsr0h, fsr2l, status,2, status,0
      +                          , prodl, cstack
  4731                           ; Tracked objects:
  4732                           ;		On entry : F/1
  4733                           ;		On exit  : F/1
  4734                           ;		Unchanged: FFFFFFF0/0
  4735                           ; Data sizes:
  4736                           ;		Autos:    4
  4737                           ;		Params:   4
  4738                           ;		Temp:     0
  4739                           ;		Total:    8
  4740                           ; This function calls:
  4741                           ;		___flpack
  4742                           ;		___flneg
  4743                           ; This function is called by:
  4744                           ;		_floor
  4745                           ; This function uses a non-reentrant model
  4746                           ; 
  4747  000000                     
  4748  00200A                     ___altofl:
  4749                           	opt stack 24
  4750                           ; BSR set to: 1
  4751  00200A  5146               	movf	(?___altofl+3)& (0+255),w,b
  4752  00200C  1143               	iorwf	?___altofl& (0+255),w,b
  4753  00200E  1144               	iorwf	(?___altofl+1)& (0+255),w,b
  4754  002010  1145               	iorwf	(?___altofl+2)& (0+255),w,b
  4755  002012  E105               	bnz	l2043
  4756  002014  6B43               	clrf	?___altofl& (0+255),b
  4757  002016  6B44               	clrf	(?___altofl+1)& (0+255),b
  4758  002018  6B45               	clrf	(?___altofl+2)& (0+255),b
  4759  00201A  6B46               	clrf	(?___altofl+3)& (0+255),b
  4760  00201C  D03B               	goto	l2042
  4761  00201E                     l2043:
  4762                           ; BSR set to: 1
  4763  00201E  6AD9               	clrf	fsr2l,c
  4764  002020  AF46               	btfss	(?___altofl+3)& (0+255),7,b
  4765  002022  D00A               	goto	l2044
  4766  002024  1F46               	comf	(?___altofl+3)& (0+255),f,b
  4767  002026  1F45               	comf	(?___altofl+2)& (0+255),f,b
  4768  002028  1F44               	comf	(?___altofl+1)& (0+255),f,b
  4769  00202A  6D43               	negf	?___altofl& (0+255),b
  4770  00202C  0E00               	movlw	0
  4771  00202E  2344               	addwfc	(?___altofl+1)& (0+255),f,b
  4772  002030  2345               	addwfc	(?___altofl+2)& (0+255),f,b
  4773  002032  2346               	addwfc	(?___altofl+3)& (0+255),f,b
  4774  002034  0E01               	movlw	1
  4775  002036  6ED9               	movwf	fsr2l,c
  4776  002038                     l2044:
  4777                           ; BSR set to: 1
  4778  002038  0E96               	movlw	150
  4779  00203A  6EF3               	movwf	prodl,c
  4780  00203C  C143  F147         	movff	?___altofl,??___altofl
  4781  002040  C144  F148         	movff	?___altofl+1,??___altofl+1
  4782  002044  C145  F149         	movff	?___altofl+2,??___altofl+2
  4783  002048  C146  F14A         	movff	?___altofl+3,??___altofl+3
  4784  00204C  CFF3 F165          	movff	prodl,?___flpack+2
  4785  002050  0E47               	movlw	low ??___altofl
  4786  002052  6F63               	movwf	?___flpack& (0+255),b
  4787  002054  0E01               	movlw	high ??___altofl
  4788  002056  6F64               	movwf	(?___flpack+1)& (0+255),b
  4789  002058  EC77  F00C         	call	___flpack	;wreg free
  4790  00205C  50D9               	movf	fsr2l,w,c
  4791  00205E  E012               	bz	l2045
  4792  002060  C147  F14D         	movff	??___altofl,?___flneg
  4793  002064  C148  F14E         	movff	??___altofl+1,?___flneg+1
  4794  002068  C149  F14F         	movff	??___altofl+2,?___flneg+2
  4795  00206C  C14A  F150         	movff	??___altofl+3,?___flneg+3
  4796  002070  EC31  F013         	call	___flneg	;wreg free
  4797  002074  C14D  F147         	movff	?___flneg,??___altofl
  4798  002078  C14E  F148         	movff	?___flneg+1,??___altofl+1
  4799  00207C  C14F  F149         	movff	?___flneg+2,??___altofl+2
  4800  002080  C150  F14A         	movff	?___flneg+3,??___altofl+3
  4801  002084                     l2045:
  4802                           ; BSR set to: 1
  4803  002084  C147  F143         	movff	??___altofl,?___altofl
  4804  002088  C148  F144         	movff	??___altofl+1,?___altofl+1
  4805  00208C  C149  F145         	movff	??___altofl+2,?___altofl+2
  4806  002090  C14A  F146         	movff	??___altofl+3,?___altofl+3
  4807  002094                     l2042:
  4808                           ; BSR set to: 1
  4809  002094  0012               	return	
  4810  002096                     __end_of___altofl:
  4811                           	opt stack 0
  4812                           
  4813                           	psect	text40
  4814                           ; =============== function ___altofl ends ======
      +                          ======
  4815                           ; *************** function ___flge *************
      +                          ****
  4816                           ; Defined at:
  4817                           ;		line 5 in file "C:\Program Files (x86)\HI-TEC
      +                          H Software\PICC-18\PRO\9.66\sources\flge.c"
  4818                           ; Parameters:
  4819                           ;		ff1            size:   4offs:   0	type: unsig
      +                          ned char 
  4820                           ;		ff2            size:   4offs:   4	type: unsig
      +                          ned char 
  4821                           ; Auto variables:
  4822                           ;		None
  4823                           ; Return value:
  4824                           ;		type: bit 
  4825                           ;		size: 0
  4826                           ; Registers used:
  4827                           ;		wreg, status,2, status,0
  4828                           ; Tracked objects:
  4829                           ;		On entry : F/1
  4830                           ;		On exit  : F/1
  4831                           ;		Unchanged: FFFFFFF0/0
  4832                           ; Data sizes:
  4833                           ;		Autos:    0
  4834                           ;		Params:   8
  4835                           ;		Temp:     0
  4836                           ;		Total:    8
  4837                           ; This function calls:
  4838                           ;		Nothing
  4839                           ; This function is called by:
  4840                           ;		_format_double
  4841                           ;		_measure_capacitance
  4842                           ;		_measure_inductance
  4843                           ;		_floor
  4844                           ;		_pow
  4845                           ;		_exp
  4846                           ; This function uses a non-reentrant model
  4847                           ; 
  4848  000000                     
  4849  002498                     ___flge:
  4850                           	opt stack 24
  4851                           ; BSR set to: 1
  4852  002498  AF46               	btfss	(?___flge+3)& (0+255),7,b
  4853  00249A  D009               	goto	l2339
  4854  00249C  6D43               	negf	?___flge& (0+255),b
  4855  00249E  1F44               	comf	(?___flge+1)& (0+255),f,b
  4856  0024A0  B0D8               	btfsc	status,0,c
  4857  0024A2  2B44               	incf	(?___flge+1)& (0+255),f,b
  4858  0024A4  1F45               	comf	(?___flge+2)& (0+255),f,b
  4859  0024A6  B0D8               	btfsc	status,0,c
  4860  0024A8  2B45               	incf	(?___flge+2)& (0+255),f,b
  4861  0024AA  0E80               	movlw	128
  4862  0024AC  5746               	subfwb	(?___flge+3)& (0+255),f,b
  4863  0024AE                     l2339:
  4864                           ; BSR set to: 1
  4865  0024AE  AF4A               	btfss	(?___flge+7)& (0+255),7,b
  4866  0024B0  D009               	goto	l2340
  4867  0024B2  6D47               	negf	(?___flge+4)& (0+255),b
  4868  0024B4  1F48               	comf	(?___flge+5)& (0+255),f,b
  4869  0024B6  B0D8               	btfsc	status,0,c
  4870  0024B8  2B48               	incf	(?___flge+5)& (0+255),f,b
  4871  0024BA  1F49               	comf	(?___flge+6)& (0+255),f,b
  4872  0024BC  B0D8               	btfsc	status,0,c
  4873  0024BE  2B49               	incf	(?___flge+6)& (0+255),f,b
  4874  0024C0  0E80               	movlw	128
  4875  0024C2  574A               	subfwb	(?___flge+7)& (0+255),f,b
  4876  0024C4                     l2340:
  4877                           ; BSR set to: 1
  4878  0024C4  0E80               	movlw	128
  4879  0024C6  1B46               	xorwf	(?___flge+3)& (0+255),f,b
  4880  0024C8  1B4A               	xorwf	(?___flge+7)& (0+255),f,b
  4881  0024CA  5147               	movf	(?___flge+4)& (0+255),w,b
  4882  0024CC  5D43               	subwf	?___flge& (0+255),w,b
  4883  0024CE  5148               	movf	(?___flge+5)& (0+255),w,b
  4884  0024D0  5944               	subwfb	(?___flge+1)& (0+255),w,b
  4885  0024D2  5149               	movf	(?___flge+6)& (0+255),w,b
  4886  0024D4  5945               	subwfb	(?___flge+2)& (0+255),w,b
  4887  0024D6  514A               	movf	(?___flge+7)& (0+255),w,b
  4888  0024D8  5946               	subwfb	(?___flge+3)& (0+255),w,b
  4889                           ; BSR set to: 1
  4890  0024DA  0012               	return	
  4891  0024DC                     __end_of___flge:
  4892                           	opt stack 0
  4893                           
  4894                           	psect	text41
  4895                           ; =============== function ___flge ends ========
      +                          ====
  4896                           ; *************** function ___flneg ************
      +                          *****
  4897                           ; Defined at:
  4898                           ;		line 16 in file "C:\Program Files (x86)\HI-TE
      +                          CH Software\PICC-18\PRO\9.66\sources\flneg.c"
  4899                           ; Parameters:
  4900                           ;		f1             size:   4offs:   0	type: bit 
  4901                           ; Auto variables:
  4902                           ;		None
  4903                           ; Return value:
  4904                           ;		type: bit 
  4905                           ;		size: 4
  4906                           ; Registers used:
  4907                           ;		wreg, fsr0l, fsr0h, status,2, status,0
  4908                           ; Tracked objects:
  4909                           ;		On entry : F/1
  4910                           ;		On exit  : F/1
  4911                           ;		Unchanged: FFFFFFF0/0
  4912                           ; Data sizes:
  4913                           ;		Autos:    0
  4914                           ;		Params:   4
  4915                           ;		Temp:     0
  4916                           ;		Total:    4
  4917                           ; This function calls:
  4918                           ;		Nothing
  4919                           ; This function is called by:
  4920                           ;		_pow
  4921                           ;		___altofl
  4922                           ;		___awtofl
  4923                           ;		_exp
  4924                           ; This function uses a non-reentrant model
  4925                           ; 
  4926  000000                     
  4927  002662                     ___flneg:
  4928                           	opt stack 23
  4929                           ; BSR set to: 1
  4930  002662  EE01  F04D         	lfsr	0,?___flneg
  4931  002666  50EE               	movf	postinc0,w,c
  4932  002668  10EE               	iorwf	postinc0,w,c
  4933  00266A  10EE               	iorwf	postinc0,w,c
  4934  00266C  10EE               	iorwf	postinc0,w,c
  4935  00266E  E002               	bz	l2334
  4936  002670  0E80               	movlw	128
  4937  002672  1B50               	xorwf	(?___flneg+3)& (0+255),f,b
  4938  002674                     l2334:
  4939                           ; BSR set to: 1
  4940                           ; BSR set to: 1
  4941  002674  0012               	return	
  4942  002676                     __end_of___flneg:
  4943                           	opt stack 0
  4944                           
  4945                           	psect	text42
  4946                           ; =============== function ___flneg ends =======
      +                          =====
  4947                           ; *************** function ___fladd ************
      +                          *****
  4948                           ; Defined at:
  4949                           ;		line 17 in file "C:\Program Files (x86)\HI-TE
      +                          CH Software\PICC-18\PRO\9.66\sources\fladd.c"
  4950                           ; Parameters:
  4951                           ;		f1             size:   4offs:   0	type: bit 
  4952                           ;		f2             size:   4offs:   4	type: bit 
  4953                           ; Auto variables:
  4954                           ;		sign2       	       	type: unsigned char 
  4955                           ;		cntr        	       	type: unsigned char 
  4956                           ;		sign1       	       	type: unsigned char 
  4957                           ;		exp2        	       	type: unsigned char 
  4958                           ;		exp1        	       	type: unsigned char 
  4959                           ; Return value:
  4960                           ;		type: unsigned char 
  4961                           ;		size: 4
  4962                           ; Registers used:
  4963                           ;		wreg, fsr0l, fsr0h, fsr2l, status,2, status,0
      +                          , prodl, prodh, cstack
  4964                           ; Tracked objects:
  4965                           ;		On entry : F/1
  4966                           ;		On exit  : F/1
  4967                           ;		Unchanged: FFFFFFF0/0
  4968                           ; Data sizes:
  4969                           ;		Autos:    2
  4970                           ;		Params:   8
  4971                           ;		Temp:     1
  4972                           ;		Total:   11
  4973                           ; This function calls:
  4974                           ;		___flunpack
  4975                           ;		___flpack
  4976                           ; This function is called by:
  4977                           ;		_floor
  4978                           ;		_log
  4979                           ;		___flsub
  4980                           ;		_eval_poly
  4981                           ; This function uses a non-reentrant model
  4982                           ; 
  4983  000000                     
  4984  0015C6                     ___fladd:
  4985                           	opt stack 23
  4986                           ; BSR set to: 1
  4987                           ; BSR set to: 1
  4988  0015C6  0E5E               	movlw	low (??___fladd+1)
  4989  0015C8  6F65               	movwf	(?___flunpack+2)& (0+255),b
  4990  0015CA  0E01               	movlw	high (??___fladd+1)
  4991  0015CC  6F66               	movwf	(?___flunpack+3)& (0+255),b
  4992  0015CE  0E55               	movlw	low ?___fladd
  4993  0015D0  6F63               	movwf	?___flunpack& (0+255),b
  4994  0015D2  0E01               	movlw	high ?___fladd
  4995  0015D4  6F64               	movwf	(?___flunpack+1)& (0+255),b
  4996  0015D6  ECC7  F010         	call	___flunpack	;wreg free
  4997  0015DA  6EF4               	movwf	prodh,c
  4998  0015DC  675E               	tstfsz	(??___fladd+1)& (0+255),b
  4999  0015DE  D009               	goto	l2108
  5000  0015E0  C159  F155         	movff	?___fladd+4,?___fladd
  5001  0015E4  C15A  F156         	movff	?___fladd+5,?___fladd+1
  5002  0015E8  C15B  F157         	movff	?___fladd+6,?___fladd+2
  5003  0015EC  C15C  F158         	movff	?___fladd+7,?___fladd+3
  5004  0015F0  D092               	goto	l2106
  5005  0015F2                     l2108:
  5006                           ; BSR set to: 1
  5007  0015F2  0E5D               	movlw	low ??___fladd
  5008  0015F4  6F65               	movwf	(?___flunpack+2)& (0+255),b
  5009  0015F6  0E01               	movlw	high ??___fladd
  5010  0015F8  6F66               	movwf	(?___flunpack+3)& (0+255),b
  5011  0015FA  0E59               	movlw	low (?___fladd+4)
  5012  0015FC  6F63               	movwf	?___flunpack& (0+255),b
  5013  0015FE  0E01               	movlw	high (?___fladd+4)
  5014  001600  6F64               	movwf	(?___flunpack+1)& (0+255),b
  5015  001602  ECC7  F010         	call	___flunpack	;wreg free
  5016  001606  6ED9               	movwf	fsr2l,c
  5017  001608  515D               	movf	??___fladd& (0+255),w,b
  5018  00160A  E079               	bz	l2109
  5019  00160C  0E06               	movlw	6
  5020  00160E  6EE9               	movwf	fsr0l,c
  5021  001610  515D               	movf	??___fladd& (0+255),w,b
  5022  001612  615E               	cpfslt	(??___fladd+1)& (0+255),b
  5023  001614  D025               	goto	l2110
  5024  001616  515E               	movf	(??___fladd+1)& (0+255),w,b
  5025  001618  5D5D               	subwf	??___fladd& (0+255),w,b
  5026  00161A  6F5F               	movwf	(??___fladd+2)& (0+255),b
  5027  00161C  0E21               	movlw	33
  5028  00161E  5D5F               	subwf	(??___fladd+2)& (0+255),w,b
  5029  001620  E309               	bnc	l2115
  5030  001622  6B55               	clrf	?___fladd& (0+255),b
  5031  001624  6B56               	clrf	(?___fladd+1)& (0+255),b
  5032  001626  6B57               	clrf	(?___fladd+2)& (0+255),b
  5033  001628  6B58               	clrf	(?___fladd+3)& (0+255),b
  5034  00162A  C15D  F15E         	movff	??___fladd,??___fladd+1
  5035  00162E  CFD9 FFF4          	movff	fsr2l,prodh
  5036  001632  D039               	goto	l2119
  5037  001634                     l2115:
  5038                           ; BSR set to: 1
  5039  001634  90D8               	bcf	status,0,c
  5040  001636  3759               	rlcf	(?___fladd+4)& (0+255),f,b
  5041  001638  375A               	rlcf	(?___fladd+5)& (0+255),f,b
  5042  00163A  375B               	rlcf	(?___fladd+6)& (0+255),f,b
  5043  00163C  375C               	rlcf	(?___fladd+7)& (0+255),f,b
  5044  00163E  075D               	decf	??___fladd& (0+255),f,b
  5045  001640  515D               	movf	??___fladd& (0+255),w,b
  5046  001642  195E               	xorwf	(??___fladd+1)& (0+255),w,b
  5047  001644  E009               	bz	l2116
  5048  001646  2EE9               	decfsz	fsr0l,f,c
  5049  001648  D7F5               	goto	l2115
  5050                           ; BSR set to: 1
  5051                           ; BSR set to: 1
  5052  00164A  D006               	goto	l2116
  5053  00164C                     l2117:
  5054                           ; BSR set to: 1
  5055  00164C  90D8               	bcf	status,0,c
  5056  00164E  3358               	rrcf	(?___fladd+3)& (0+255),f,b
  5057  001650  3357               	rrcf	(?___fladd+2)& (0+255),f,b
  5058  001652  3356               	rrcf	(?___fladd+1)& (0+255),f,b
  5059  001654  3355               	rrcf	?___fladd& (0+255),f,b
  5060  001656  2B5E               	incf	(??___fladd+1)& (0+255),f,b
  5061  001658                     l2116:
  5062                           ; BSR set to: 1
  5063  001658  515D               	movf	??___fladd& (0+255),w,b
  5064  00165A  635E               	cpfseq	(??___fladd+1)& (0+255),b
  5065  00165C  D7F7               	goto	l2117
  5066  00165E  D023               	goto	l2119
  5067                           ; BSR set to: 1
  5068                           ; BSR set to: 1
  5069  001660                     l2110:
  5070                           ; BSR set to: 1
  5071  001660  515E               	movf	(??___fladd+1)& (0+255),w,b
  5072  001662  195D               	xorwf	??___fladd& (0+255),w,b
  5073  001664  E020               	bz	l2119
  5074  001666  515D               	movf	??___fladd& (0+255),w,b
  5075  001668  5D5E               	subwf	(??___fladd+1)& (0+255),w,b
  5076  00166A  6F5F               	movwf	(??___fladd+2)& (0+255),b
  5077  00166C  0E21               	movlw	33
  5078  00166E  5D5F               	subwf	(??___fladd+2)& (0+255),w,b
  5079  001670  E305               	bnc	l2125
  5080  001672  6B59               	clrf	(?___fladd+4)& (0+255),b
  5081  001674  6B5A               	clrf	(?___fladd+5)& (0+255),b
  5082  001676  6B5B               	clrf	(?___fladd+6)& (0+255),b
  5083  001678  6B5C               	clrf	(?___fladd+7)& (0+255),b
  5084  00167A  D015               	goto	l2119
  5085  00167C                     l2125:
  5086                           ; BSR set to: 1
  5087  00167C  90D8               	bcf	status,0,c
  5088  00167E  3755               	rlcf	?___fladd& (0+255),f,b
  5089  001680  3756               	rlcf	(?___fladd+1)& (0+255),f,b
  5090  001682  3757               	rlcf	(?___fladd+2)& (0+255),f,b
  5091  001684  3758               	rlcf	(?___fladd+3)& (0+255),f,b
  5092  001686  075E               	decf	(??___fladd+1)& (0+255),f,b
  5093  001688  515D               	movf	??___fladd& (0+255),w,b
  5094  00168A  195E               	xorwf	(??___fladd+1)& (0+255),w,b
  5095  00168C  E009               	bz	l2126
  5096  00168E  2EE9               	decfsz	fsr0l,f,c
  5097  001690  D7F5               	goto	l2125
  5098                           ; BSR set to: 1
  5099                           ; BSR set to: 1
  5100  001692  D006               	goto	l2126
  5101  001694                     l2127:
  5102                           ; BSR set to: 1
  5103  001694  90D8               	bcf	status,0,c
  5104  001696  335C               	rrcf	(?___fladd+7)& (0+255),f,b
  5105  001698  335B               	rrcf	(?___fladd+6)& (0+255),f,b
  5106  00169A  335A               	rrcf	(?___fladd+5)& (0+255),f,b
  5107  00169C  3359               	rrcf	(?___fladd+4)& (0+255),f,b
  5108  00169E  2B5D               	incf	??___fladd& (0+255),f,b
  5109  0016A0                     l2126:
  5110                           ; BSR set to: 1
  5111  0016A0  515D               	movf	??___fladd& (0+255),w,b
  5112  0016A2  635E               	cpfseq	(??___fladd+1)& (0+255),b
  5113  0016A4  D7F7               	goto	l2127
  5114                           ; BSR set to: 1
  5115                           ; BSR set to: 1
  5116                           ; BSR set to: 1
  5117  0016A6                     l2119:
  5118                           ; BSR set to: 1
  5119  0016A6  50F4               	movf	prodh,w,c
  5120  0016A8  E009               	bz	l2129
  5121  0016AA  1F55               	comf	?___fladd& (0+255),f,b
  5122  0016AC  1F56               	comf	(?___fladd+1)& (0+255),f,b
  5123  0016AE  1F57               	comf	(?___fladd+2)& (0+255),f,b
  5124  0016B0  1F58               	comf	(?___fladd+3)& (0+255),f,b
  5125  0016B2  2B55               	incf	?___fladd& (0+255),f,b
  5126  0016B4  0E00               	movlw	0
  5127  0016B6  2356               	addwfc	(?___fladd+1)& (0+255),f,b
  5128  0016B8  2357               	addwfc	(?___fladd+2)& (0+255),f,b
  5129  0016BA  2358               	addwfc	(?___fladd+3)& (0+255),f,b
  5130  0016BC                     l2129:
  5131                           ; BSR set to: 1
  5132  0016BC  50D9               	movf	fsr2l,w,c
  5133  0016BE  E009               	bz	l2130
  5134  0016C0  1F59               	comf	(?___fladd+4)& (0+255),f,b
  5135  0016C2  1F5A               	comf	(?___fladd+5)& (0+255),f,b
  5136  0016C4  1F5B               	comf	(?___fladd+6)& (0+255),f,b
  5137  0016C6  1F5C               	comf	(?___fladd+7)& (0+255),f,b
  5138  0016C8  2B59               	incf	(?___fladd+4)& (0+255),f,b
  5139  0016CA  0E00               	movlw	0
  5140  0016CC  235A               	addwfc	(?___fladd+5)& (0+255),f,b
  5141  0016CE  235B               	addwfc	(?___fladd+6)& (0+255),f,b
  5142  0016D0  235C               	addwfc	(?___fladd+7)& (0+255),f,b
  5143  0016D2                     l2130:
  5144                           ; BSR set to: 1
  5145  0016D2  6AF4               	clrf	prodh,c
  5146  0016D4  5159               	movf	(?___fladd+4)& (0+255),w,b
  5147  0016D6  2755               	addwf	?___fladd& (0+255),f,b
  5148  0016D8  515A               	movf	(?___fladd+5)& (0+255),w,b
  5149  0016DA  2356               	addwfc	(?___fladd+1)& (0+255),f,b
  5150  0016DC  515B               	movf	(?___fladd+6)& (0+255),w,b
  5151  0016DE  2357               	addwfc	(?___fladd+2)& (0+255),f,b
  5152  0016E0  515C               	movf	(?___fladd+7)& (0+255),w,b
  5153  0016E2  2358               	addwfc	(?___fladd+3)& (0+255),f,b
  5154  0016E4  AF58               	btfss	(?___fladd+3)& (0+255),7,b
  5155  0016E6  D00B               	goto	l2109
  5156  0016E8  1F55               	comf	?___fladd& (0+255),f,b
  5157  0016EA  1F56               	comf	(?___fladd+1)& (0+255),f,b
  5158  0016EC  1F57               	comf	(?___fladd+2)& (0+255),f,b
  5159  0016EE  1F58               	comf	(?___fladd+3)& (0+255),f,b
  5160  0016F0  2B55               	incf	?___fladd& (0+255),f,b
  5161  0016F2  0E00               	movlw	0
  5162  0016F4  2356               	addwfc	(?___fladd+1)& (0+255),f,b
  5163  0016F6  2357               	addwfc	(?___fladd+2)& (0+255),f,b
  5164  0016F8  2358               	addwfc	(?___fladd+3)& (0+255),f,b
  5165  0016FA  0E01               	movlw	1
  5166  0016FC  6EF4               	movwf	prodh,c
  5167                           ; BSR set to: 1
  5168  0016FE                     l2109:
  5169                           ; BSR set to: 1
  5170  0016FE  C15E  F165         	movff	??___fladd+1,?___flpack+2
  5171  001702  0E55               	movlw	low ?___fladd
  5172  001704  6F63               	movwf	?___flpack& (0+255),b
  5173  001706  0E01               	movlw	high ?___fladd
  5174  001708  6F64               	movwf	(?___flpack+1)& (0+255),b
  5175  00170A  EC77  F00C         	call	___flpack	;wreg free
  5176  00170E  50F4               	movf	prodh,w,c
  5177  001710  E002               	bz	l2132
  5178  001712  0E80               	movlw	128
  5179  001714  1B58               	xorwf	(?___fladd+3)& (0+255),f,b
  5180  001716                     l2132:
  5181                           ; BSR set to: 1
  5182  001716                     l2106:
  5183                           ; BSR set to: 1
  5184  001716  0012               	return	
  5185  001718                     __end_of___fladd:
  5186                           	opt stack 0
  5187                           
  5188                           	psect	text43
  5189                           ; =============== function ___fladd ends =======
      +                          =====
  5190                           ; *************** function ___flpack ***********
      +                          ******
  5191                           ; Defined at:
  5192                           ;		line 36 in file "C:\Program Files (x86)\HI-TE
      +                          CH Software\PICC-18\PRO\9.66\sources\double.c"
  5193                           ; Parameters:
  5194                           ;		arg            size:   2offs:   0	type: PTR u
      +                          nsigned long ; Largest target is 4
  5195                           ;		 -> __lwtofl@f1(4), __lltofl@f1(4), __lbtofl@
      +                          f1(4), __abtofl@f1(4), 
  5196                           ;		 -> __flmul@f3(4), __fldiv@f3(4), __fladd@f1(
      +                          4), __awtofl@f1(4), 
  5197                           ;		 -> __altofl@f1(4), 
  5198                           ;		exp            size:   1offs:   2	type: unsig
      +                          ned char 
  5199                           ; Auto variables:
  5200                           ;		l_arg       	       	type: unsigned long 
  5201                           ; Return value:
  5202                           ;		type: void 
  5203                           ;		size: 0
  5204                           ; Registers used:
  5205                           ;		wreg, fsr0l, fsr0h, status,2, status,0
  5206                           ; Tracked objects:
  5207                           ;		On entry : F/1
  5208                           ;		On exit  : F/1
  5209                           ;		Unchanged: FFFFFFF0/0
  5210                           ; Data sizes:
  5211                           ;		Autos:    4
  5212                           ;		Params:   3
  5213                           ;		Temp:     4
  5214                           ;		Total:   11
  5215                           ; This function calls:
  5216                           ;		Nothing
  5217                           ; This function is called by:
  5218                           ;		___altofl
  5219                           ;		___awtofl
  5220                           ;		___fladd
  5221                           ;		___fldiv
  5222                           ;		___flmul
  5223                           ;		___lltofl
  5224                           ;		___lwtofl
  5225                           ; This function uses a non-reentrant model
  5226                           ; 
  5227  000000                     
  5228  0018EE                     ___flpack:
  5229                           	opt stack 22
  5230                           ; BSR set to: 1
  5231  0018EE  C163  FFE9         	movff	?___flpack,fsr0l
  5232  0018F2  C164  FFEA         	movff	?___flpack+1,fsr0h
  5233  0018F6  CFEE F166          	movff	postinc0,??___flpack
  5234  0018FA  CFEE F167          	movff	postinc0,??___flpack+1
  5235  0018FE  CFEE F168          	movff	postinc0,??___flpack+2
  5236  001902  CFEE F169          	movff	postinc0,??___flpack+3
  5237  001906  5165               	movf	(?___flpack+2)& (0+255),w,b
  5238  001908  E005               	bz	l600000782
  5239  00190A  5169               	movf	(??___flpack+3)& (0+255),w,b
  5240  00190C  1166               	iorwf	??___flpack& (0+255),w,b
  5241  00190E  1167               	iorwf	(??___flpack+1)& (0+255),w,b
  5242  001910  1168               	iorwf	(??___flpack+2)& (0+255),w,b
  5243  001912  E110               	bnz	l2096
  5244  001914                     l600000782:
  5245                           ; BSR set to: 1
  5246  001914  C163  FFE9         	movff	?___flpack,fsr0l
  5247  001918  C164  FFEA         	movff	?___flpack+1,fsr0h
  5248  00191C  0E00               	movlw	0
  5249  00191E  6AEE               	clrf	postinc0,c
  5250  001920  6AEE               	clrf	postinc0,c
  5251  001922  6AEE               	clrf	postinc0,c
  5252  001924  6AED               	clrf	postdec0,c
  5253  001926  D054               	goto	l2094
  5254                           ; BSR set to: 1
  5255  001928                     l2097:
  5256                           ; BSR set to: 1
  5257  001928  2B65               	incf	(?___flpack+2)& (0+255),f,b
  5258  00192A  90D8               	bcf	status,0,c
  5259  00192C  3369               	rrcf	(??___flpack+3)& (0+255),f,b
  5260  00192E  3368               	rrcf	(??___flpack+2)& (0+255),f,b
  5261  001930  3367               	rrcf	(??___flpack+1)& (0+255),f,b
  5262  001932  3366               	rrcf	??___flpack& (0+255),f,b
  5263  001934                     l2096:
  5264                           ; BSR set to: 1
  5265  001934  6B6A               	clrf	(??___flpack+4)& (0+255),b
  5266  001936  6B6B               	clrf	(??___flpack+5)& (0+255),b
  5267  001938  6B6C               	clrf	(??___flpack+6)& (0+255),b
  5268  00193A  0EFE               	movlw	254
  5269  00193C  1569               	andwf	(??___flpack+3)& (0+255),w,b
  5270  00193E  6F6D               	movwf	(??___flpack+7)& (0+255),b
  5271  001940  516D               	movf	(??___flpack+7)& (0+255),w,b
  5272  001942  116A               	iorwf	(??___flpack+4)& (0+255),w,b
  5273  001944  116B               	iorwf	(??___flpack+5)& (0+255),w,b
  5274  001946  116C               	iorwf	(??___flpack+6)& (0+255),w,b
  5275  001948  E00C               	bz	l2099
  5276  00194A  D7EE               	goto	l2097
  5277                           ; BSR set to: 1
  5278  00194C                     l2100:
  5279                           ; BSR set to: 1
  5280  00194C  2B65               	incf	(?___flpack+2)& (0+255),f,b
  5281  00194E  2B66               	incf	??___flpack& (0+255),f,b
  5282  001950  0E00               	movlw	0
  5283  001952  2367               	addwfc	(??___flpack+1)& (0+255),f,b
  5284  001954  2368               	addwfc	(??___flpack+2)& (0+255),f,b
  5285  001956  2369               	addwfc	(??___flpack+3)& (0+255),f,b
  5286  001958  90D8               	bcf	status,0,c
  5287  00195A  3369               	rrcf	(??___flpack+3)& (0+255),f,b
  5288  00195C  3368               	rrcf	(??___flpack+2)& (0+255),f,b
  5289  00195E  3367               	rrcf	(??___flpack+1)& (0+255),f,b
  5290  001960  3366               	rrcf	??___flpack& (0+255),f,b
  5291  001962                     l2099:
  5292                           ; BSR set to: 1
  5293  001962  6B6A               	clrf	(??___flpack+4)& (0+255),b
  5294  001964  6B6B               	clrf	(??___flpack+5)& (0+255),b
  5295  001966  6B6C               	clrf	(??___flpack+6)& (0+255),b
  5296  001968  5169               	movf	(??___flpack+3)& (0+255),w,b
  5297  00196A  6F6D               	movwf	(??___flpack+7)& (0+255),b
  5298  00196C  516D               	movf	(??___flpack+7)& (0+255),w,b
  5299  00196E  116A               	iorwf	(??___flpack+4)& (0+255),w,b
  5300  001970  116B               	iorwf	(??___flpack+5)& (0+255),w,b
  5301  001972  116C               	iorwf	(??___flpack+6)& (0+255),w,b
  5302  001974  E007               	bz	l2102
  5303  001976  D7EA               	goto	l2100
  5304                           ; BSR set to: 1
  5305  001978                     l2103:
  5306                           ; BSR set to: 1
  5307  001978  0765               	decf	(?___flpack+2)& (0+255),f,b
  5308  00197A  90D8               	bcf	status,0,c
  5309  00197C  3766               	rlcf	??___flpack& (0+255),f,b
  5310  00197E  3767               	rlcf	(??___flpack+1)& (0+255),f,b
  5311  001980  3768               	rlcf	(??___flpack+2)& (0+255),f,b
  5312  001982  3769               	rlcf	(??___flpack+3)& (0+255),f,b
  5313  001984                     l2102:
  5314                           ; BSR set to: 1
  5315  001984  AF68               	btfss	(??___flpack+2)& (0+255),7,b
  5316  001986  D7F8               	goto	l2103
  5317                           ; BSR set to: 1
  5318  001988  B165               	btfsc	(?___flpack+2)& (0+255),0,b
  5319  00198A  D002               	goto	l2105
  5320  00198C  0E7F               	movlw	127
  5321  00198E  1768               	andwf	(??___flpack+2)& (0+255),f,b
  5322  001990                     l2105:
  5323                           ; BSR set to: 1
  5324  001990  90D8               	bcf	status,0,c
  5325  001992  3365               	rrcf	(?___flpack+2)& (0+255),f,b
  5326  001994  C165  F16A         	movff	?___flpack+2,??___flpack+4
  5327  001998  6B6B               	clrf	(??___flpack+5)& (0+255),b
  5328  00199A  6B6C               	clrf	(??___flpack+6)& (0+255),b
  5329  00199C  6B6D               	clrf	(??___flpack+7)& (0+255),b
  5330  00199E  C16A  F16D         	movff	??___flpack+4,??___flpack+7
  5331  0019A2  6B6C               	clrf	(??___flpack+6)& (0+255),b
  5332  0019A4  6B6B               	clrf	(??___flpack+5)& (0+255),b
  5333  0019A6  6B6A               	clrf	(??___flpack+4)& (0+255),b
  5334  0019A8  516A               	movf	(??___flpack+4)& (0+255),w,b
  5335  0019AA  1366               	iorwf	??___flpack& (0+255),f,b
  5336  0019AC  516B               	movf	(??___flpack+5)& (0+255),w,b
  5337  0019AE  1367               	iorwf	(??___flpack+1)& (0+255),f,b
  5338  0019B0  516C               	movf	(??___flpack+6)& (0+255),w,b
  5339  0019B2  1368               	iorwf	(??___flpack+2)& (0+255),f,b
  5340  0019B4  516D               	movf	(??___flpack+7)& (0+255),w,b
  5341  0019B6  1369               	iorwf	(??___flpack+3)& (0+255),f,b
  5342  0019B8  C163  FFE9         	movff	?___flpack,fsr0l
  5343  0019BC  C164  FFEA         	movff	?___flpack+1,fsr0h
  5344  0019C0  C166  FFEE         	movff	??___flpack,postinc0
  5345  0019C4  C167  FFEE         	movff	??___flpack+1,postinc0
  5346  0019C8  C168  FFEE         	movff	??___flpack+2,postinc0
  5347  0019CC  C169  FFEE         	movff	??___flpack+3,postinc0
  5348  0019D0                     l2094:
  5349                           ; BSR set to: 1
  5350  0019D0  0012               	return	
  5351  0019D2                     __end_of___flpack:
  5352                           	opt stack 0
  5353                           
  5354                           	psect	text44
  5355                           ; =============== function ___flpack ends ======
      +                          ======
  5356                           ; *************** function ___flunpack *********
      +                          ********
  5357                           ; Defined at:
  5358                           ;		line 13 in file "C:\Program Files (x86)\HI-TE
      +                          CH Software\PICC-18\PRO\9.66\sources\double.c"
  5359                           ; Parameters:
  5360                           ;		arg            size:   2offs:   0	type: PTR u
      +                          nsigned long ; Largest target is 4
  5361                           ;		 -> __fltol@f1(4), __flmul@f2(4), __flmul@f1(
      +                          4), __fldiv@f2(4), 
  5362                           ;		 -> __fldiv@f1(4), __fladd@f2(4), __fladd@f1(
      +                          4), 
  5363                           ;		exp            size:   2offs:   2	type: PTR u
      +                          nsigned char ; Largest target is 1
  5364                           ;		 -> __fltol@exp1(1), __flmul@cntr(1), __flmul
      +                          @exp1(1), __fldiv@exp2(1), 
  5365                           ;		 -> __fldiv@exp1(1), __fladd@exp2(1), __fladd
      +                          @exp1(1), 
  5366                           ; Auto variables:
  5367                           ;		sign        	       	type: unsigned char 
  5368                           ;		l_arg       	       	type: unsigned long 
  5369                           ; Return value:
  5370                           ;		type: unsigned char 
  5371                           ;		size: 1
  5372                           ; Registers used:
  5373                           ;		wreg, fsr0l, fsr0h, status,2, status,0, prodl
  5374                           ; Tracked objects:
  5375                           ;		On entry : F/1
  5376                           ;		On exit  : F/1
  5377                           ;		Unchanged: FFFFFFF0/0
  5378                           ; Data sizes:
  5379                           ;		Autos:    4
  5380                           ;		Params:   4
  5381                           ;		Temp:     0
  5382                           ;		Total:    8
  5383                           ; This function calls:
  5384                           ;		Nothing
  5385                           ; This function is called by:
  5386                           ;		___fladd
  5387                           ;		___fldiv
  5388                           ;		___flmul
  5389                           ;		___fltol
  5390                           ; This function uses a non-reentrant model
  5391                           ; 
  5392  000000                     
  5393  00218E                     ___flunpack:
  5394                           	opt stack 22
  5395                           ; BSR set to: 1
  5396  00218E  C163  FFE9         	movff	?___flunpack,fsr0l
  5397  002192  C164  FFEA         	movff	?___flunpack+1,fsr0h
  5398  002196  CFEE F167          	movff	postinc0,??___flunpack
  5399  00219A  CFEE F168          	movff	postinc0,??___flunpack+1
  5400  00219E  CFEE F169          	movff	postinc0,??___flunpack+2
  5401  0021A2  CFEE F16A          	movff	postinc0,??___flunpack+3
  5402  0021A6  0101               	movlb	1	; () banked
  5403  0021A8  3569               	rlcf	(??___flunpack+2)& (0+255),w,b
  5404  0021AA  356A               	rlcf	(??___flunpack+3)& (0+255),w,b
  5405  0021AC  6EF3               	movwf	prodl,c
  5406  0021AE  C165  FFE9         	movff	?___flunpack+2,fsr0l
  5407  0021B2  C166  FFEA         	movff	?___flunpack+3,fsr0h
  5408  0021B6  CFF3 FFEF          	movff	prodl,indf0
  5409  0021BA  66F3               	tstfsz	prodl,c
  5410  0021BC  D005               	goto	l2091
  5411  0021BE  6B67               	clrf	??___flunpack& (0+255),b
  5412  0021C0  6B68               	clrf	(??___flunpack+1)& (0+255),b
  5413  0021C2  6B69               	clrf	(??___flunpack+2)& (0+255),b
  5414  0021C4  6B6A               	clrf	(??___flunpack+3)& (0+255),b
  5415  0021C6  D005               	goto	l2092
  5416  0021C8                     l2091:
  5417                           ; BSR set to: 1
  5418  0021C8  6AF3               	clrf	prodl,c
  5419  0021CA  8F69               	bsf	(??___flunpack+2)& (0+255),7,b
  5420  0021CC  BF6A               	btfsc	(??___flunpack+3)& (0+255),7,b
  5421  0021CE  2AF3               	incf	prodl,f,c
  5422                           ; BSR set to: 1
  5423  0021D0  6B6A               	clrf	(??___flunpack+3)& (0+255),b
  5424  0021D2                     l2092:
  5425                           ; BSR set to: 1
  5426  0021D2  C163  FFE9         	movff	?___flunpack,fsr0l
  5427  0021D6  C164  FFEA         	movff	?___flunpack+1,fsr0h
  5428  0021DA  C167  FFEE         	movff	??___flunpack,postinc0
  5429  0021DE  C168  FFEE         	movff	??___flunpack+1,postinc0
  5430  0021E2  C169  FFEE         	movff	??___flunpack+2,postinc0
  5431  0021E6  C16A  FFEE         	movff	??___flunpack+3,postinc0
  5432  0021EA  50F3               	movf	prodl,w,c
  5433                           ; BSR set to: 1
  5434  0021EC  0012               	return	
  5435  0021EE                     __end_of___flunpack:
  5436                           	opt stack 0
  5437                           
  5438                           	psect	text45
  5439                           ; =============== function ___flunpack ends ====
      +                          ========
  5440                           ; *************** function _isr ****************
      +                          *
  5441                           ; Defined at:
  5442                           ;		line 78 in file "../../../LC-meter.c"
  5443                           ; Parameters:
  5444                           ;		None
  5445                           ; Auto variables:
  5446                           ;		None
  5447                           ; Return value:
  5448                           ;		type: int 
  5449                           ;		size: 2
  5450                           ; Registers used:
  5451                           ;		wreg, fsr0l, fsr0h, status,2, status,0
  5452                           ; Tracked objects:
  5453                           ;		On entry : 0/0
  5454                           ;		On exit  : 0/0
  5455                           ;		Unchanged: FFFFFFF0/0
  5456                           ; Data sizes:
  5457                           ;		Autos:    0
  5458                           ;		Params:   0
  5459                           ;		Temp:     3
  5460                           ;		Total:    3
  5461                           ; This function calls:
  5462                           ;		Nothing
  5463                           ; This function is called by:
  5464                           ;		Interrupt level 2
  5465                           ; This function uses a non-reentrant model
  5466                           ; 
  5467  000000                     
  5468                           ;LC-meter.c: 62: double F1, F2, F3, CCal;
  5469                           ;LC-meter.c: 63: void main();
  5470                           ;LC-meter.c: 64: void loop();
  5471                           ;LC-meter.c: 65: void testloop();
  5472                           ;LC-meter.c: 66: void initialize();
  5473                           ;LC-meter.c: 67: unsigned long int milliseconds(
      +                          );
  5474                           ;LC-meter.c: 69: void put_number(void (*putchar)
      +                          (char), unsigned short int n, unsigned char base
      +                          , signed char pad );
  5475                           ;LC-meter.c: 71: volatile unsigned short int bli
      +                          nk = 0;
  5476                           ;LC-meter.c: 78: interrupt isr() {
  5477  001B6C                     _isr:
  5478                           	opt stack 0
  5479                           ; BSR set to: ?
  5480  001B6C  0006               	pop		; remove dummy address from shadow registe
      +                          r refresh
  5481                           ;LC-meter.c: 81: if(PIR1 & 0x02) {
  5482  001B6E  A29E               	btfss	3998,1,c	;volatile
  5483  001B70  D039               	goto	i2l1198
  5484                           ;LC-meter.c: 83: bres += 256;
  5485  001B72  2A07               	incf	7,f,c	;volatile
  5486                           ;LC-meter.c: 85: if(bres >= 5000) {
  5487  001B74  0E88               	movlw	136
  5488  001B76  5C06               	subwf	6,w,c	;volatile
  5489  001B78  0E13               	movlw	19
  5490  001B7A  5807               	subwfb	7,w,c	;volatile
  5491  001B7C  E332               	bnc	i2l1199
  5492                           ;LC-meter.c: 86: bres -= 5000;
  5493  001B7E  0E88               	movlw	136
  5494  001B80  5E06               	subwf	6,f,c	;volatile
  5495  001B82  0E13               	movlw	19
  5496  001B84  5A07               	subwfb	7,f,c	;volatile
  5497                           ;LC-meter.c: 87: msecpart++;
  5498  001B86  4A04               	infsnz	4,f,c	;volatile
  5499  001B88  2A05               	incf	5,f,c	;volatile
  5500                           ;LC-meter.c: 88: msecs++;
  5501  001B8A  2A4C               	incf	76,f,c	;volatile
  5502  001B8C  0E00               	movlw	0
  5503  001B8E  224D               	addwfc	77,f,c	;volatile
  5504  001B90  224E               	addwfc	78,f,c	;volatile
  5505  001B92  224F               	addwfc	79,f,c	;volatile
  5506                           ;LC-meter.c: 90: LATC &= ~0b00000010; LATC |= (!
      +                          !((blink > 200))) << 1;;
  5507  001B94  928B               	bcf	3979,1,c	;volatile
  5508  001B96  0EC9               	movlw	201
  5509  001B98  5C45               	subwf	69,w,c	;volatile
  5510  001B9A  0E00               	movlw	0
  5511  001B9C  5846               	subwfb	70,w,c	;volatile
  5512  001B9E  E302               	bnc	i2u3710
  5513  001BA0  0E01               	movlw	1
  5514  001BA2  D001               	goto	i2u3716
  5515  001BA4                     i2u3710:
  5516  001BA4  0E00               	movlw	0
  5517  001BA6                     i2u3716:
  5518  001BA6  0101               	movlb	1	; () banked
  5519  001BA8  6F6E               	movwf	??_isr& (0+255),b
  5520  001BAA  90D8               	bcf	status,0,c
  5521  001BAC  356E               	rlcf	??_isr& (0+255),w,b
  5522  001BAE  128B               	iorwf	3979,f,c	;volatile
  5523                           ;LC-meter.c: 91: if(blink >= 400)
  5524  001BB0  0E90               	movlw	144
  5525  001BB2  5C45               	subwf	69,w,c	;volatile
  5526  001BB4  0E01               	movlw	1
  5527  001BB6  5846               	subwfb	70,w,c	;volatile
  5528  001BB8  E304               	bnc	i2l1200
  5529                           ;LC-meter.c: 92: blink -= 400;
  5530  001BBA  0E90               	movlw	144
  5531  001BBC  5E45               	subwf	69,f,c	;volatile
  5532  001BBE  0E01               	movlw	1
  5533  001BC0  5A46               	subwfb	70,f,c	;volatile
  5534  001BC2                     i2l1200:
  5535                           ; BSR set to: 1
  5536                           ;LC-meter.c: 93: ++blink;
  5537  001BC2  4A45               	infsnz	69,f,c	;volatile
  5538  001BC4  2A46               	incf	70,f,c	;volatile
  5539                           ;LC-meter.c: 96: if(msecpart >= 1000) {
  5540  001BC6  0EE8               	movlw	232
  5541  001BC8  5C04               	subwf	4,w,c	;volatile
  5542  001BCA  0E03               	movlw	3
  5543  001BCC  5805               	subwfb	5,w,c	;volatile
  5544  001BCE  E309               	bnc	i2l1199
  5545                           ;LC-meter.c: 98: seconds++;
  5546  001BD0  2A50               	incf	80,f,c	;volatile
  5547  001BD2  0E00               	movlw	0
  5548  001BD4  2251               	addwfc	81,f,c	;volatile
  5549  001BD6  2252               	addwfc	82,f,c	;volatile
  5550  001BD8  2253               	addwfc	83,f,c	;volatile
  5551                           ;LC-meter.c: 99: msecpart -= 1000;
  5552  001BDA  0EE8               	movlw	232
  5553  001BDC  5E04               	subwf	4,f,c	;volatile
  5554  001BDE  0E03               	movlw	3
  5555  001BE0  5A05               	subwfb	5,f,c	;volatile
  5556                           ; BSR set to: 1
  5557  001BE2                     i2l1199:
  5558                           ; BSR set to: ?
  5559                           ;LC-meter.c: 100: }
  5560                           ;LC-meter.c: 101: }
  5561                           ;LC-meter.c: 103: PIR1 &= ~0b10;
  5562  001BE2  929E               	bcf	3998,1,c	;volatile
  5563  001BE4                     i2l1198:
  5564                           ; BSR set to: ?
  5565                           ;LC-meter.c: 104: }
  5566                           ;LC-meter.c: 106: if(RCIF) { rxfifo[rxiptr] = RC
      +                          REG; ser_tmp = (rxiptr + 1) & ((unsigned char)16
      +                           - 1); if(ser_tmp != rxoptr) rxiptr = ser_tmp; }
      +                          ; if(TXIF && TXIE) { TXREG = txfifo[txoptr]; ++t
      +                          xoptr; txoptr &= ((unsigned char)16 - 1); if(txo
      +                          ptr == txiptr) { TXIE = 0; }
  5567  001BE4  AA9E               	btfss	3998,5,c	;volatile
  5568  001BE6  D00E               	goto	i2l1202
  5569  001BE8  5048               	movf	72,w,c	;volatile
  5570  001BEA  0F35               	addlw	53
  5571  001BEC  6EE9               	movwf	fsr0l,c
  5572  001BEE  6AEA               	clrf	fsr0h,c
  5573  001BF0  CFAE FFEF          	movff	4014,indf0	;volatile
  5574  001BF4  2848               	incf	72,w,c	;volatile
  5575  001BF6  0B0F               	andlw	15
  5576  001BF8  6E4B               	movwf	75,c
  5577  001BFA  504B               	movf	75,w,c
  5578  001BFC  184A               	xorwf	74,w,c	;volatile
  5579  001BFE  A4D8               	btfss	status,2,c
  5580  001C00  C04B F048          	movff	75,72	;volatile
  5581                           ; BSR set to: ?
  5582  001C04                     i2l1202:
  5583                           ; BSR set to: ?
  5584  001C04  B89E               	btfsc	3998,4,c	;volatile
  5585  001C06  A89D               	btfss	3997,4,c	;volatile
  5586  001C08  D00E               	goto	i2l1204
  5587  001C0A  5049               	movf	73,w,c	;volatile
  5588  001C0C  0F25               	addlw	37
  5589  001C0E  6EE9               	movwf	fsr0l,c
  5590  001C10  6AEA               	clrf	fsr0h,c
  5591  001C12  50EF               	movf	indf0,w,c
  5592  001C14  6EAD               	movwf	4013,c	;volatile
  5593  001C16  2A49               	incf	73,f,c	;volatile
  5594  001C18  0E0F               	movlw	15
  5595  001C1A  1649               	andwf	73,f,c	;volatile
  5596  001C1C  5047               	movf	71,w,c	;volatile
  5597  001C1E  6249               	cpfseq	73,c	;volatile
  5598  001C20  D001               	goto	i2l1205
  5599  001C22  989D               	bcf	3997,4,c	;volatile
  5600  001C24                     i2l1205:
  5601                           ; BSR set to: ?
  5602  001C24  989E               	bcf	3998,4,c	;volatile
  5603  001C26                     i2l1204:
  5604                           ; BSR set to: ?
  5605                           ;LC-meter.c: 111: }
  5606                           ; BSR set to: ?
  5607  001C26  C170  FFEA         	movff	??_isr+2,fsr0h
  5608  001C2A  C16F  FFE9         	movff	??_isr+1,fsr0l
  5609  001C2E  0011               	retfie		f
  5610  001C30                     __end_of_isr:
  5611                           	opt stack 0
  5612                           
  5613                           	psect	intcode
  5614  000008                     int_func:
  5615                           	opt stack 31
  5616  000008  CFE9 F16F          	movff	fsr0l,??_isr+1
  5617  00000C  CFEA F170          	movff	fsr0h,??_isr+2
  5618  000010  EDB6  F00D         	call	_isr,f	;refresh shadow registers
  5619                           
  5620                           	psect	text46
  5621                           ; =============== function _isr ends ===========
      +                          =
  5622                           ;	FNARG	___flmul,_frexp
  5623                           ;	FNARG	___flmul,___awtofl
  5624                           ;	FNARG	___flmul,___flneg
  5625                           ;	FNARG	___flmul,___flsub
  5626                           ;	FNARG	___flmul,___fldiv
  5627                           ;	FNARG	_ldexp,_eval_poly
  5628                           ;	FNARG	_ldexp,___flpack
  5629                           ;	FNARG	_ldexp,___flunpack
  5630                           ;	FNARG	_ldexp,___fladd
  5631                           ;	FNARG	_ldexp,___flmul
  5632  000000                     	;_ser_brg
  5633                           
  5634                           	psect	idata
  5635                           ;initializer for _ser_brg
  5636  000878  1F                 	db	31
  5637                           
  5638                           	psect	smallconst
  5639  000800  00                 	db	0	;reserve
  5640  000801                     F65:
  5641                           	opt stack 0
  5642  000801  0000               	dw	0
  5643  000803  3F80               	dw	16256
  5644  000805  7218               	dw	29208
  5645  000807  3F31               	dw	16177
  5646  000809  FDF0               	dw	65008
  5647  00080B  3E75               	dw	15989
  5648  00080D  5847               	dw	22599
  5649  00080F  3D63               	dw	15715
  5650  000811  9558               	dw	38232
  5651  000813  3C1D               	dw	15389
  5652  000815  C482               	dw	50306
  5653  000817  3AAE               	dw	15022
  5654  000819  78A8               	dw	30888
  5655  00081B  3921               	dw	14625
  5656  00081D  93EF               	dw	37871
  5657  00081F  3780               	dw	14208
  5658  000821  92A0               	dw	37536
  5659  000823  35A7               	dw	13735
  5660  000825  5646               	dw	22086
  5661  000827  3415               	dw	13333
  5662  000829                     F64:
  5663                           	opt stack 0
  5664  000829  0000               	dw	0
  5665  00082B  0000               	dw	0
  5666  00082D  FFC4               	dw	65476
  5667  00082F  3F7F               	dw	16255
  5668  000831  EF80               	dw	61312
  5669  000833  BEFF               	dw	48895
  5670  000835  E190               	dw	57744
  5671  000837  3EA9               	dw	16041
  5672  000839  82EC               	dw	33516
  5673  00083B  BE76               	dw	48758
  5674  00083D  AD82               	dw	44418
  5675  00083F  3E2B               	dw	15915
  5676  000841  3C0E               	dw	15374
  5677  000843  BDC3               	dw	48579
  5678  000845  D187               	dw	53639
  5679  000847  3D13               	dw	15635
  5680  000849  7841               	dw	30785
  5681  00084B  BBD3               	dw	48083
  5682  000000                     	;_buffer
  5683  000000                     	;_rxfifo
  5684  000000                     	;_txfifo
  5685  000000                     	;_F1
  5686  000000                     	;_F2
  5687  000000                     	;_F3
  5688  000000                     	;_msecs
  5689  000000                     	;_seconds
  5690  000000                     	;_timer1of
  5691  000000                     	;_blink
  5692  000000                     	;_rxiptr
  5693  000000                     	;_rxoptr
  5694  000000                     	;_ser_tmp
  5695  000000                     	;_txiptr
  5696  000000                     	;_txoptr
  5697  000000                     	;__USB_DESCRIPTOR
  5698  000000                     
  5699  000000                     	;_CCal
  5700  000000                     
  5701  000000                     	;_bres
  5702  000000                     	;_msecpart
  5703  000000                     
  5704  000000                     
  5705  000000                     
  5706  000000                     
  5707  000000                     
  5708  000000                     
  5709  000000                     
  5710  000000                     
  5711  000000                     
  5712  000000                     
  5713  000000                     
  5714  000000                     
  5715  000000                     
  5716  000000                     
  5717  000000                     
  5718  000000                     
  5719  000000                     
  5720  000000                     
  5721  000000                     
  5722  000000                     
  5723  000000                     
  5724  000000                     
  5725  000000                     
  5726  000000                     
  5727  000000                     
  5728  000000                     
  5729  000000                     
  5730  000000                     
  5731  000000                     
  5732  00084D                     STR_8:
  5733                           ; BSR set to: ?
  5734  00084D  0D                 	db	13
  5735  00084E  0A                 	db	10
  5736  00084F  43                 	db	67	;'C'
  5737  000850  43                 	db	67	;'C'
  5738  000851  61                 	db	97	;'a'
  5739  000852  6C                 	db	108	;'l'
  5740  000853  3D                 	db	61	;'='
  5741  000854  00                 	db	0
  5742  000855                     STR_5:
  5743                           ; BSR set to: ?
  5744  000855  0D                 	db	13
  5745  000856  0A                 	db	10
  5746  000857  46                 	db	70	;'F'
  5747  000858  31                 	db	49	;'1'
  5748  000859  3D                 	db	61	;'='
  5749  00085A  00                 	db	0
  5750  00085B                     STR_7:
  5751                           ; BSR set to: ?
  5752  00085B  0D                 	db	13
  5753  00085C  0A                 	db	10
  5754  00085D  46                 	db	70	;'F'
  5755  00085E  33                 	db	51	;'3'
  5756  00085F  3D                 	db	61	;'='
  5757  000860  00                 	db	0
  5758  000861                     STR_6:
  5759                           ; BSR set to: ?
  5760  000861  0D                 	db	13
  5761  000862  0A                 	db	10
  5762  000863  46                 	db	70	;'F'
  5763  000864  32                 	db	50	;'2'
  5764  000865  3D                 	db	61	;'='
  5765  000866  00                 	db	0
  5766  000867                     STR_1:
  5767                           ; BSR set to: ?
  5768  000867  2E                 	db	46
  5769  000868  2E                 	db	46
  5770  000869  2E                 	db	46
  5771  00086A  0D                 	db	13
  5772  00086B  0A                 	db	10
  5773  00086C  00                 	db	0
  5774  00086D                     STR_10:
  5775                           ; BSR set to: ?
  5776  00086D  43                 	db	67	;'C'
  5777  00086E  69                 	db	105	;'i'
  5778  00086F  6E                 	db	110	;'n'
  5779  000870  3D                 	db	61	;'='
  5780  000871  00                 	db	0
  5781  000872                     STR_4:
  5782                           ; BSR set to: ?
  5783  000872  76                 	db	118	;'v'
  5784  000873  61                 	db	97	;'a'
  5785  000874  72                 	db	114	;'r'
  5786  000875  3D                 	db	61	;'='
  5787  000876  00                 	db	0
  5788  000000                     
  5789  000000                     
  5790  000000                     
  5791  000000                     
  5792  000877  00                 	db	0	; dummy byte at the end
  5793                           
  5794                           	psect	param1
  5795  000000                     
  5796  000000                     
  5797  000000                     
  5798  000000                     
  5799  000000                     
  5800  000000                     
  5801  000000                     
  5802  000000                     
  5803  000000                     
  5804  000000                     
  5805                           tblptrh	equ	0xFF7
  5806                           tblptrl	equ	0xFF6
  5807                           tablat	equ	0xFF5
  5808                           prodh	equ	0xFF4
  5809                           prodl	equ	0xFF3
  5810                           intcon	equ	0xFF2
  5811                           intcon2	equ	0xFF1
  5812                           indf0	equ	0xFEF
  5813                           postinc0	equ	0xFEE
  5814                           postdec0	equ	0xFED
  5815                           fsr0h	equ	0xFEA
  5816                           fsr0l	equ	0xFE9
  5817                           wreg	equ	0xFE8
  5818                           fsr1l	equ	0xFE1
  5819                           fsr2l	equ	0xFD9
  5820                           status	equ	0xFD8


HI-TECH Software PICC-18 Macro Assembler V9.66 build 8870 
Symbol Table                                           Wed Nov 27 17:23:44 2019

                ___asfldiv@f1p 011E                   ___fldiv@exp1 0142  
                 ___fldiv@exp2 0141                   ___asflmul@mp 0139  
                           F64 0829                             F65 0801  
                 ___asflsub@f2 013B                             _F1 000019  
                           _F2 000021                             _F3 00001D  
                ___asflsub@f1p 0139                   ___flpack@arg 0163  
                 ___flpack@exp 0165                            l470 1CA6  
                          l472 1CC4                            l720 2276  
                          l473 1CE8                            l721 225E  
                          l482 11D0                            l468 1C40  
                          l469 1CAC                            l485 1302  
                          l717 2236                            _GIE 007F97  
                          _RX9 007D5E                            _TX9 007D66  
                          _exp 0FCE                            _log 130C  
                          _isr 1B6C                            _pow 146C  
                          wreg 000FE8                   ___flmul@exp1 015D  
                 ___flmul@cntr 015E                   ___fltol@exp1 0147  
                         l1210 1D82                           l1211 1D86  
                         l2100 194C                           l2102 1984  
                         l2110 1660                           l2103 1978  
                         l1207 1D72                           l2105 1990  
                         l2130 16D2                           l2106 1716  
                         l2042 2094                           l2115 1634  
                         l2043 201E                           l2132 1716  
                         l2116 1658                           l2108 15F2  
                         l2044 2038                           l2140 1E1C  
                         l2125 167C                           l2117 164C  
                         l2109 16FE                           l2045 2084  
                         l2141 1E40                           l2126 16A0  
                         l2127 1694                           l2119 16A6  
                         l2151 1B18                           l2135 1DC4  
                         l2311 234E                           l2152 1B2C  
                         l2144 1ADE                           l2080 2104  
                         l2136 1DE0                           l2320 256C  
                         l2312 2368                           l2129 16BC  
                         l2153 1B5A                           l2321 257E  
                         l2305 2372                           l2314 2588  
                         l2306 2340                           l2322 2518  
                         l2091 21C8                           l2147 1AE8  
                         l2139 1DEE                           l2315 255E  
                         l2323 24EC                           l2092 21D2  
                         l2340 24C4                           l2148 1AFC  
                         l1452 261C                           l2181 1FB4  
                         l2077 2114                           l2094 19D0  
                         l2334 2674                           l2182 1FE4  
                         l2078 20A6                           l2079 20CC  
                         l1455 25F4                           l2096 1934  
                         l2184 1FE0                           l2176 2008  
                         l1720 0C08                           l2097 1928  
                         l2185 1FD4                           l2177 1FC4  
                         l1714 08D8                           l1706 0D98  
                         l2099 1962                           l2339 24AE  
                         l2187 1FF8                           l2291 2330  
                         l1715 0C04                           l1707 0F84  
                         l2292 22FC                           l1716 0BE8  
                         l1708 0F68                           l1717 0BCA  
                         l1709 0F4A                   ___fltol@lval 0148  
                         l2392 119E                           l2393 0FE8  
                         l2394 101A                           l2396 1076  
                         l2389 19FC                           l2397 119E  
                         l2398 116E                           l1970 18DC  
                         l1954 22E6                           l1971 146A  
                         l1980 1516                           l1973 1328  
                         l1981 15C4                           l1990 1F50  
                         l1966 18EC                           l1967 1840  
                         l1975 15C4                           l1984 218C  
                         l1968 1836                           l1976 149C  
                         l1985 213C                           l1969 184C  
                         l1986 1F7C                           l1978 14B8  
                         l1979 1540                           l1988 1F2C  
                         ?_exp 012F                           ?_log 012F  
                         ?_isr 016E                           ?_pow 0122  
                         STR_1 0867                           STR_3 086A  
                         STR_4 0872                           STR_5 0855  
                         STR_6 0861                           STR_7 085B  
                         STR_8 084D                           STR_9 086A  
                         _BRGH 007D62                           _CREN 007D5C  
                         u3000 104A                           u1320 25E4  
                         u3030 1164                           u3006 104C  
                         u1326 25E6                           _LATC 000F8B  
                         u3200 1F22                           u3120 131E  
                         _CCal 000000                           u3180 1A8E  
                         u3430 1FCA                           _PIE1 000F9D  
                         u2800 130A                           _PEIE 007F96  
                         u2860 150C                           u2780 2616  
                         u3807 1722                           u2865 150A  
                         u3817 173C                           u2890 2254  
                         u3907 17DE                           u3827 174E  
                         _RCIF 007CF5                           u3837 1760  
                         u3847 1772                           _PIR1 000F9E  
                         u3857 1784                           u3867 1796  
                         u3877 17A8                           u3887 17BA  
                         u3897 17CC                           _OERR 007D59  
                         _RBPU 007F8F                           _TMR0 000FD6  
                         _TMR2 000FCC                           _SPEN 007D5F  
                         _TXIE 007CEC                           _TXIF 007CF4  
                         _TXEN 007D65                           _SYNC 007D64  
                         _bres 000006                           _main 1CEA  
                         fsr0h 000FEA                           indf0 000FEF  
                         fsr0l 000FE9                           fsr1l 000FE1  
                         fsr2l 000FD9                           exp@x 012F  
                         log@x 012F                           pow@x 0122  
                         pow@y 0126                           prodh 000FF4  
                         prodl 000FF3     __end_of_measure_inductance 0C4E  
                         start 0014              __config__CONFIG1H 00B6FF  
            __config__CONFIG1L 00FFFF              __config__CONFIG4L 00FF7B  
               ??_buffer_putch 013A                          ??_exp 0133  
                        ??_log 0133                          ??_isr 016E  
                        ??_pow 012A                 ___flpack@l_arg 0166  
              __end_of___fladd 1718                          ?_main 0100  
              __end_of___fldiv 1E52                __end_of___flneg 2676  
                        STR_10 086D                          STR_11 086A  
              __end_of___flmul 1B6C                __end_of___flsub 2554  
              __end_of___fltol 200A                          _T0CON 000FD5  
                        _T2CON 000FCA                          _LATC7 007C5F  
              __end_of___lwdiv 237C                __end_of___lwmod 258A  
                        _RCREG 000FAE                          _SPBRG 000FAF  
                        _PORTC 000F82                          _TRISA 000F92  
                        _TRISC 000F94                          _TXREG 000FAD  
                        _log10 237C                          _blink 000045  
                        _floor 1804                          _ldexp 1EEA  
                        _frexp 2116                          _msecs 00004C  
                        tablat 000FF5                          pow@yi 012B  
                        status 000FD8                ??_print_reading 0120  
           _format_number$1608 0116                    ldexp@newexp 013D  
                 __end_of_main 1DA0               _timer0_init$1446 0100  
             _timer0_init$1447 0101               _timer0_init$1448 0102  
             _timer0_init$1449 0103               format_double@num 010E  
                ?_measure_freq 011E                         ??_main 0100  
          format_double@weight 011E                  __activetblptr 000002  
                       ?_log10 0122                         ?_floor 0139  
                       ?_ldexp 0139                         ?_frexp 0145  
             __end_of___altofl 2096               __end_of___flpack 19D2  
             __end_of___awtofl 2116               __end_of___lltofl 2332  
                       i2l1200 1BC2                         i2l1202 1C04  
                       i2l1204 1C26                         i2l1205 1C24  
                       i2l1198 1BE4                         i2l1199 1BE2  
                       _INTCON 000FF2               __end_of___lwtofl 251A  
                       i2u3710 1BA4                         i2u3716 1BA6  
                       _TRISC6 007CA6                         __Ldata 000058  
                       ___flge 2498                      ??___fladd 015D  
                    ??___fldiv 0141                 ___flunpack@arg 0163  
                    ??___flneg 0151                      ??___flmul 015D  
               ___flunpack@exp 0165                      ??___flsub 0147  
                    ??___fltol 0147                   ?_timer0_init 0100  
               ??_measure_freq 0120                      ??___lwdiv 013E  
                 ?_timer2_init 0100                      ??___lwmod 013E  
                       _buffer 000008                         log10@x 0122  
                       _rxfifo 000035                         _txfifo 000025  
                       _rxiptr 000048                         _rxoptr 00004A  
                       floor@i 013F                         _txiptr 000047  
                       floor@x 0139                         exp@exp 0137  
                       log@exp 0143                         _txoptr 000049  
               _eval_poly$1634 014C               __end_of_ser_init 2662  
             __end_of_ser_puts 2618                   __mediumconst 0878  
                       tblptrh 000FF7                         tblptrl 000FF6  
         __end_of_buffer_putch 22E8               format_number@buf 0119  
             format_number@pad 0115        _measure_inductance$1565 0100  
      _measure_inductance$1566 0104        _measure_inductance$1567 0108  
      _measure_inductance$1568 010C                     ___fladd@f1 0155  
                   ___fladd@f2 0159                     ___flge@ff1 0143  
                   ___flge@ff2 0147                  _format_double 11A0  
                   ___altofl@c 0143                     ___fldiv@f1 0139  
                   ___fldiv@f2 013D                     ___fldiv@f3 0143  
                   __accesstop 0060                     ___flneg@f1 014D  
                _format_number 1C30                  _format_xint32 258A  
                   ___flmul@f1 0155                     ___flmul@f2 0159  
                   ___flmul@f3 015F                   eval_poly@res 0150  
                   ___flsub@f1 013F                     ___flsub@f2 0143  
                   ___fltol@f1 0143                     ___awtofl@c 0145  
       measure_capacitance@Cin 010A                     ___flunpack 218E  
       measure_capacitance@var 0108         ___asflmul@multiplicand 013B  
                   ___lltofl@c 012F                  __end_of_log10 23C6  
                __end_of_floor 18EE                  __end_of_ldexp 1F7E  
                __end_of_frexp 218E                     ___lwtofl@c 011E  
                      ??_log10 0126                        ??_floor 013D  
                      ??_ldexp 013F                        ??_frexp 014B  
               ?_format_double 010E                 ?_format_number 0112  
               ?_format_xint32 010E                        ?___flge 0143  
                    l500000604 2208                      l500000605 2216  
                    l500000606 2224                      l500000607 2242  
                    l500000756 1C72              __end_of___asfldiv 240C  
                    ?___altofl 0143              __end_of___asflmul 2452  
            __end_of___asflsub 2498                      ?___flpack 0163  
                    l600000782 1914                      ?___awtofl 0145  
                    ?___lltofl 012F             _measure_inductance 087A  
                    ?___lwtofl 011E                __USB_DESCRIPTOR 000400  
          ?_measure_inductance 0100              __end_of_calibrate 1EEA  
            __end_of_delay10ms 2678           __end_of_measure_freq 1804  
                      __Hdata0 000059                        __Ldata0 000058  
                  ?___flunpack 0163                        __Hparam 0171  
                      __Lparam 0100                      ?_ser_init 0100  
         ??_measure_inductance 0100                      ?_ser_puts 010E  
                      ___fladd 15C6                        ___fldiv 1DA0  
                      ___flneg 2662                        ___flmul 1AA0  
                      ___flsub 251A                        ___fltol 1F7E  
                      ___lwdiv 2332                        ___lwmod 2554  
                   ??___altofl 0147                     ??___flpack 0166  
                   ??___awtofl 0149              __end_of_eval_poly 1AA0  
                      __ramtop 0800              __end_of_indicator 267C  
                   ??___lltofl 0133                     ??___lwtofl 0122  
                      _seconds 000050                        _ser_brg 000058  
                      _ser_tmp 00004B                ??_format_double 0112  
              ??_format_number 0116                ??_format_xint32 0112  
                __Lmediumconst 0878                        int_func 0008  
            __end_of_ser_putch 263E                        pow@sign 012A  
measure_inductance@denominator 0112          __end_of_print_reading 267A  
                   ??_ser_init 0100                     ??_ser_puts 010E  
                 _buffer_putch 229C              format_number@base 0114  
                      postdec0 000FED                        postinc0 000FEE  
                   _print_unit 267C            _measure_capacitance 0C4E  
                  ___altofl@f1 0147                    ___awtofl@f1 0149  
         ?_measure_capacitance 0100                 format_double@m 011C  
               __end_of___flge 24DC                 _timer0_read_ps 2248  
                  ___lltofl@f1 0133                     floor@expon 013D  
               format_number@n 0112                 format_xint32@x 010E  
                   eval_poly@d 0149                     eval_poly@n 014A  
                   eval_poly@x 0145                     ldexp@value 0139  
                  __end_of_exp 11A0                    __end_of_log 146C  
                  __end_of_isr 1C30                    __end_of_pow 15C6  
                  ___lwtofl@f1 0122                      __Habsbss0 000058  
                    __Habsbss1 000500                      __Habsbss2 000F7F  
           format_double@digit 011A                      __Labsbss0 000000  
                    __Labsbss1 000400                      __Labsbss2 000F70  
                   frexp@value 0145          ??_measure_capacitance 0100  
       __end_of_timer0_read_ps 229C                       ??___flge 014B  
                 _measure_freq 1718       print_reading@measurement 011E  
                    ___asfldiv 23C6                    ?_print_unit 011E  
                    ___asflmul 240C                      ___asflsub 2452  
            measure_freq@count 0120                      _calibrate 1E52  
                    _delay10ms 2676                   ??___flunpack 0167  
             ___lwdiv@dividend 013A                ?_timer0_read_ps 0123  
                     ?___fladd 0155                       ?___fldiv 0139  
                     ?___flneg 014D                       ?___flmul 0155  
                     ?___flsub 013F                       ?___fltol 0143  
                     ?___lwdiv 013A                       ?___lwmod 013A  
                  __smallconst 0800                     ?___asfldiv 011E  
                   ?___asflmul 0139                     ?___asflsub 0139  
                    _eval_poly 19D2                      _indicator 267A  
           __end_of___flunpack 21EE                     ?_calibrate 0100  
                   ?_delay10ms 0100                      _ser_putch 2618  
                ??_timer0_init 0100                  ??_timer2_init 0100  
                   ?_eval_poly 0145                     ?_indicator 0100  
        measure_inductance@Lin 011A          measure_inductance@var 0110  
        __end_of_format_double 130C           format_number@padchar 0118  
        __end_of_format_number 1CEA          __end_of_format_xint32 25BE  
                    frexp@eptr 0149                       __Hparam1 0171  
                     __Lparam1 0100                     ?_ser_putch 010E  
                 __Lsmallconst 0800                       ___altofl 200A  
                     ___flpack 18EE                       ___awtofl 2096  
                     ___lltofl 22E8                       ___lwtofl 24DC  
                  ??___asfldiv 0124            __end_of_timer0_init 2248  
                  ??___asflmul 013F                       _exp$1617 0133  
                  ??___asflsub 013F                       _log$1621 0133  
                     _log$1622 0137            __end_of_timer2_init 25F0  
                     _log$1626 013B                       _log$1627 013F  
             ___flunpack@l_arg 0167                ___lwdiv@divisor 013C  
                __USB_ENDPOINT 000F70                    ??_calibrate 0100  
                  ??_delay10ms 0100                       _msecpart 000004  
                     _ser_init 263E                       _ser_puts 25F0  
                     _timer1of 000054    measure_inductance@numerator 0116  
                 ??_print_unit 011E                    ??_eval_poly 014C  
                  ??_indicator 0100                       intlevel2 267E  
  __end_of_measure_capacitance 0FCE               ___lwmod@dividend 013A  
             ??_timer0_read_ps 0125                    ??_ser_putch 010E  
           __end_of_print_unit 267E                  _print_reading 2678  
                  _timer0_init 21EE                    _timer2_init 25BE  
           _format_double$1597 0112             _format_double$1598 0116  
     _measure_capacitance$1545 0100       _measure_capacitance$1546 0104  
              ___lwmod@divisor 013C                   ___fladd@exp1 015E  
                 ___fladd@exp2 015D                 ?_print_reading 011E  
                 ___asfldiv@f2 0120                  ?_buffer_putch 013A  
