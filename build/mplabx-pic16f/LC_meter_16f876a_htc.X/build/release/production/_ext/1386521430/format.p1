Version 4.0 HI-TECH Software Intermediate Code
"30 ../../../lib/buffer.h
[; ;../../../lib/buffer.h: 30: char buffer_putch(char ch);
[v _buffer_putch `(uc ~T0 @X0 0 ef1`uc ]
"44 C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\c90\math.h
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\c90\math.h: 44: extern double log10(double);
[v _log10 `(d ~T0 @X0 0 ef1`d ]
"45
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\c90\math.h: 45: extern double pow(double, double) ;
[v _pow `(d ~T0 @X0 0 ef2`d`d ]
"31
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\c90\math.h: 31: extern double floor(double);
[v _floor `(d ~T0 @X0 0 ef1`d ]
"7 ../../../lib/format.c
[; ;../../../lib/format.c: 7: format_putchar(char c) {
[v _format_putchar `(v ~T0 @X0 1 sf1`uc ]
{
[e :U _format_putchar ]
[v _c `uc ~T0 @X0 1 r1 ]
[f ]
"8
[; ;../../../lib/format.c: 8:   return;
[e $UE 2  ]
"9
[; ;../../../lib/format.c: 9: }
[e :UE 2 ]
}
"15
[; ;../../../lib/format.c: 15: format_number(uint16_t n, uint8_t base, int8_t pad ) {
[v _format_number `(v ~T0 @X0 1 ef3`ui`uc`c ]
{
[e :U _format_number ]
[v _n `ui ~T0 @X0 1 r1 ]
[v _base `uc ~T0 @X0 1 r2 ]
[v _pad `c ~T0 @X0 1 r3 ]
[f ]
"16
[; ;../../../lib/format.c: 16:   char buf[8 * sizeof(long)];
[v _buf `uc ~T0 @X0 -> 32 `i a ]
"17
[; ;../../../lib/format.c: 17:   uint8_t di;
[v _di `uc ~T0 @X0 1 a ]
"18
[; ;../../../lib/format.c: 18:   int8_t i = 0;
[v _i `c ~T0 @X0 1 a ]
[e = _i -> -> 0 `i `c ]
"19
[; ;../../../lib/format.c: 19:   char padchar = ' ';
[v _padchar `uc ~T0 @X0 1 a ]
[e = _padchar -> -> 32 `ui `uc ]
"21
[; ;../../../lib/format.c: 21:   if(pad < 0) {
[e $ ! < -> _pad `i -> 0 `i 4  ]
{
"22
[; ;../../../lib/format.c: 22:     pad = -pad;
[e = _pad -> -U -> _pad `i `c ]
"23
[; ;../../../lib/format.c: 23:     padchar = '0';
[e = _padchar -> -> 48 `ui `uc ]
"24
[; ;../../../lib/format.c: 24:   }
}
[e :U 4 ]
"31
[; ;../../../lib/format.c: 31:   do {
[e :U 7 ]
{
"35
[; ;../../../lib/format.c: 35:     di = n % base;
[e = _di -> % _n -> _base `ui `uc ]
"36
[; ;../../../lib/format.c: 36:     buf[i++] = (di < 10 ? (uint8_t)'0' + di : (uint8_t)'A' + di - 10);
[e = *U + &U _buf * -> -> ++ _i -> -> 1 `i `c `uc `ux -> -> # *U &U _buf `ui `ux -> ? < -> _di `i -> 10 `i : + -> -> -> 48 `ui `uc `i -> _di `i - + -> -> -> 65 `ui `uc `i -> _di `i -> 10 `i `uc ]
"38
[; ;../../../lib/format.c: 38:     n /= base;
[e =/ _n -> _base `ui ]
"39
[; ;../../../lib/format.c: 39:   } while(n > 0);
}
[e $ > _n -> -> 0 `i `ui 7  ]
[e :U 6 ]
"41
[; ;../../../lib/format.c: 41:   while(pad-- > i) buffer_putch(padchar);
[e $U 8  ]
[e :U 9 ]
[e ( _buffer_putch (1 _padchar ]
[e :U 8 ]
[e $ > -> -- _pad -> -> 1 `i `c `i -> _i `i 9  ]
[e :U 10 ]
"43
[; ;../../../lib/format.c: 43:   for(; i > 0; i--) {
{
[e $ > -> _i `i -> 0 `i 11  ]
[e $U 12  ]
[e :U 11 ]
{
"44
[; ;../../../lib/format.c: 44:     buffer_putch((char)buf[(int16_t)i - 1]);
[e ( _buffer_putch (1 *U + &U _buf * -> -> - -> _i `i -> 1 `i `ui `ux -> -> # *U &U _buf `ui `ux ]
"46
[; ;../../../lib/format.c: 46:   }
}
[e -- _i -> -> 1 `i `c ]
[e $ > -> _i `i -> 0 `i 11  ]
[e :U 12 ]
}
"47
[; ;../../../lib/format.c: 47: }
[e :UE 3 ]
}
"51
[; ;../../../lib/format.c: 51: format_xint32( uint32_t x) {
[v _format_xint32 `(v ~T0 @X0 1 ef1`ul ]
{
[e :U _format_xint32 ]
[v _x `ul ~T0 @X0 1 r1 ]
[f ]
"52
[; ;../../../lib/format.c: 52:   buffer_putch('0');
[e ( _buffer_putch (1 -> -> 48 `ui `uc ]
"53
[; ;../../../lib/format.c: 53:   buffer_putch('x');
[e ( _buffer_putch (1 -> -> 120 `ui `uc ]
"54
[; ;../../../lib/format.c: 54:   format_number((uint16_t)(x >> 16), 16, -4);
[e ( _format_number (3 , , -> >> _x -> 16 `i `ui -> -> 16 `i `uc -> -U -> 4 `i `c ]
"55
[; ;../../../lib/format.c: 55:   format_number((uint16_t)(x & 0xffff), 16, -4);
[e ( _format_number (3 , , -> & _x -> -> 65535 `ui `ul `ui -> -> 16 `i `uc -> -U -> 4 `i `c ]
"56
[; ;../../../lib/format.c: 56: }
[e :UE 14 ]
}
"59
[; ;../../../lib/format.c: 59: format_float( float num) {
[v _format_float `(v ~T0 @X0 1 ef1`f ]
{
[e :U _format_float ]
[v _num `f ~T0 @X0 1 r1 ]
[f ]
"60
[; ;../../../lib/format.c: 60:   short m = (int)log10(num);
[v _m `s ~T0 @X0 1 a ]
[e = _m -> -> ( _log10 (1 -> _num `d `i `s ]
"61
[; ;../../../lib/format.c: 61:   char digit;
[v _digit `uc ~T0 @X0 1 a ]
"64
[; ;../../../lib/format.c: 64:   while(num > 0 + (3.05176e-05)) {
[e $U 16  ]
[e :U 17 ]
{
"65
[; ;../../../lib/format.c: 65:     float weight = pow(10.0l, m);
[v _weight `f ~T0 @X0 1 a ]
[e = _weight -> ( _pow (2 , -> .10.0 `d -> _m `d `f ]
"66
[; ;../../../lib/format.c: 66:     digit = (char)floor(num / weight);
[e = _digit -> ( _floor (1 -> / _num _weight `d `uc ]
"67
[; ;../../../lib/format.c: 67:     num -= (digit * weight);
[e =- _num * -> -> _digit `i `f _weight ]
"68
[; ;../../../lib/format.c: 68:     buffer_putch('0' + digit);
[e ( _buffer_putch (1 -> + -> 48 `ui -> _digit `ui `uc ]
"69
[; ;../../../lib/format.c: 69:     if(m == 0)
[e $ ! == -> _m `i -> 0 `i 19  ]
"70
[; ;../../../lib/format.c: 70:       buffer_putch('.');
[e ( _buffer_putch (1 -> -> 46 `ui `uc ]
[e :U 19 ]
"71
[; ;../../../lib/format.c: 71:     m--;
[e -- _m -> -> 1 `i `s ]
"72
[; ;../../../lib/format.c: 72:   }
}
[e :U 16 ]
"64
[; ;../../../lib/format.c: 64:   while(num > 0 + (3.05176e-05)) {
[e $ > -> _num `d + -> -> 0 `i `d .3.05176e-05 17  ]
[e :U 18 ]
"73
[; ;../../../lib/format.c: 73: }
[e :UE 15 ]
}
"77
[; ;../../../lib/format.c: 77: format_double(double num) {
[v _format_double `(v ~T0 @X0 1 ef1`d ]
{
[e :U _format_double ]
[v _num `d ~T0 @X0 1 r1 ]
[f ]
"78
[; ;../../../lib/format.c: 78:   short m = (short)log10(num);
[v _m `s ~T0 @X0 1 a ]
[e = _m -> ( _log10 (1 _num `s ]
"79
[; ;../../../lib/format.c: 79:   short digit;
[v _digit `s ~T0 @X0 1 a ]
"82
[; ;../../../lib/format.c: 82:   while(num > 0 + (1.19209290e-07)) {
[e $U 21  ]
[e :U 22 ]
{
"83
[; ;../../../lib/format.c: 83:     double weight = pow(10.0l, m);
[v _weight `d ~T0 @X0 1 a ]
[e = _weight ( _pow (2 , -> .10.0 `d -> _m `d ]
"84
[; ;../../../lib/format.c: 84:     digit = (short)floor(num / weight);
[e = _digit -> ( _floor (1 / _num _weight `s ]
"85
[; ;../../../lib/format.c: 85:     num -= (digit * weight);
[e =- _num * -> -> _digit `i `d _weight ]
"86
[; ;../../../lib/format.c: 86:     buffer_putch((char)('0' + digit));
[e ( _buffer_putch (1 -> + -> 48 `ui -> _digit `ui `uc ]
"87
[; ;../../../lib/format.c: 87:     if(m == 0)
[e $ ! == -> _m `i -> 0 `i 24  ]
"88
[; ;../../../lib/format.c: 88:       buffer_putch('.');
[e ( _buffer_putch (1 -> -> 46 `ui `uc ]
[e :U 24 ]
"89
[; ;../../../lib/format.c: 89:     m--;
[e -- _m -> -> 1 `i `s ]
"90
[; ;../../../lib/format.c: 90:   }
}
[e :U 21 ]
"82
[; ;../../../lib/format.c: 82:   while(num > 0 + (1.19209290e-07)) {
[e $ > _num + -> -> 0 `i `d .1.19209290e-07 22  ]
[e :U 23 ]
"91
[; ;../../../lib/format.c: 91: }
[e :UE 20 ]
}
