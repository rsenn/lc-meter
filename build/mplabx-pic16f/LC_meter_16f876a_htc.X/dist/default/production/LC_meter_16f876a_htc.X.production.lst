

HI-TECH Software PIC PRO Macro Assembler V9.83 build 10920 
                                                                                               Wed Nov 27 17:32:46 2019

HI-TECH Software Omniscient Code Generator (PRO mode) build 10920
     1                           	processor	16F876A
     2                           	opt	pw 120
     3                           	opt	pm
     4                           	psect	config,global,class=CONFIG,delta=2
     5                           	psect	idataBANK1,global,class=CODE,delta=2
     6                           	psect	strings,global,class=STRING,delta=2
     7                           	psect	nvBANK3,global,class=BANK3,space=1,delta=1
     8                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1
     9                           	psect	cinit,global,class=CODE,delta=2
    10                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    13                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    14                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    15                           	psect	clrtext,global,class=CODE,delta=2
    16                           	psect	cstackBANK3,global,class=BANK3,space=1,delta=1
    17                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1
    18                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    19                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    20                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    21                           	psect	maintext,global,class=CODE,delta=2
    22                           	psect	text1243,local,class=CODE,delta=2
    23                           	psect	text1246,local,class=CODE,delta=2
    24                           	psect	text1248,local,class=CODE,delta=2
    25                           	psect	text1249,local,class=CODE,delta=2
    26                           	psect	text1253,local,class=CODE,delta=2
    27                           	psect	text1256,local,class=CODE,delta=2
    28                           	psect	text1266,local,class=CODE,delta=2
    29                           	psect	text1276,local,class=CODE,delta=2
    30                           	psect	text1277,local,class=CODE,delta=2
    31                           	psect	text1278,local,class=CODE,delta=2
    32                           	psect	text1280,local,class=CODE,delta=2
    33                           	psect	text1281,local,class=CODE,delta=2
    34                           	psect	text1282,local,class=CODE,delta=2
    35                           	psect	text1286,local,class=CODE,delta=2
    36                           	psect	intentry,global,class=CODE,delta=2
    37                           	psect	text1287,local,class=CODE,delta=2
    38                           	psect	pa_nodes,global,class=CODE,delta=2
    39                           	dabs	1,0x7E,2
    40  000A                     	;#
    41                           
    42                           	psect	config
    43  2007  FF72               	dw	65394	;#
    44                           
    45                           	psect	idataBANK1
    46  0000                     __pidataBANK1:	
    47                           
    48                           	psect	strings
    49  0600                     __pstrings:	
    50  0600                     stringtab:	
    51                           ;	global	stringdir,stringtab,__stringbase
    52                           
    53  0600                     stringcode:	
    54                           ;	String table - string pointers are 1 byte each
    55                           
    56  0600                     stringdir:	
    57  0600  3006               	movlw	high stringdir
    58  0601  008A               	movwf	10
    59  0602  0804               	movf	4,w
    60  0603  0A84               	incf	4,f
    61  0604  0782               	addwf	2,f
    62  0605                     __stringbase:	
    63  0605  3400               	retlw	0
    64  0606                     exp@coeff:	
    65  0606  3400               	retlw	0
    66  0607  3400               	retlw	0
    67  0608  3480               	retlw	128
    68  0609  343F               	retlw	63
    69  060A  3418               	retlw	24
    70  060B  3472               	retlw	114
    71  060C  3431               	retlw	49
    72  060D  343F               	retlw	63
    73  060E  34F0               	retlw	240
    74  060F  34FD               	retlw	253
    75  0610  3475               	retlw	117
    76  0611  343E               	retlw	62
    77  0612  3447               	retlw	71
    78  0613  3458               	retlw	88
    79  0614  3463               	retlw	99
    80  0615  343D               	retlw	61
    81  0616  3458               	retlw	88
    82  0617  3495               	retlw	149
    83  0618  341D               	retlw	29
    84  0619  343C               	retlw	60
    85  061A  3482               	retlw	130
    86  061B  34C4               	retlw	196
    87  061C  34AE               	retlw	174
    88  061D  343A               	retlw	58
    89  061E  34A8               	retlw	168
    90  061F  3478               	retlw	120
    91  0620  3421               	retlw	33
    92  0621  3439               	retlw	57
    93  0622  34EF               	retlw	239
    94  0623  3493               	retlw	147
    95  0624  3480               	retlw	128
    96  0625  3437               	retlw	55
    97  0626  34A0               	retlw	160
    98  0627  3492               	retlw	146
    99  0628  34A7               	retlw	167
   100  0629  3435               	retlw	53
   101  062A  3446               	retlw	70
   102  062B  3456               	retlw	86
   103  062C  3415               	retlw	21
   104  062D  3434               	retlw	52
   105  062E                     log@coeff:	
   106  062E  3400               	retlw	0
   107  062F  3400               	retlw	0
   108  0630  3400               	retlw	0
   109  0631  3400               	retlw	0
   110  0632  34C4               	retlw	196
   111  0633  34FF               	retlw	255
   112  0634  347F               	retlw	127
   113  0635  343F               	retlw	63
   114  0636  3480               	retlw	128
   115  0637  34EF               	retlw	239
   116  0638  34FF               	retlw	255
   117  0639  34BE               	retlw	190
   118  063A  3490               	retlw	144
   119  063B  34E1               	retlw	225
   120  063C  34A9               	retlw	169
   121  063D  343E               	retlw	62
   122  063E  34EC               	retlw	236
   123  063F  3482               	retlw	130
   124  0640  3476               	retlw	118
   125  0641  34BE               	retlw	190
   126  0642  3482               	retlw	130
   127  0643  34AD               	retlw	173
   128  0644  342B               	retlw	43
   129  0645  343E               	retlw	62
   130  0646  340E               	retlw	14
   131  0647  343C               	retlw	60
   132  0648  34C3               	retlw	195
   133  0649  34BD               	retlw	189
   134  064A  3487               	retlw	135
   135  064B  34D1               	retlw	209
   136  064C  3413               	retlw	19
   137  064D  343D               	retlw	61
   138  064E  3441               	retlw	65
   139  064F  3478               	retlw	120
   140  0650  34D3               	retlw	211
   141  0651  34BB               	retlw	187
   142  0652                     STR_2:	
   143  0652  342D               	retlw	45	;'-'
   144  0653  3420               	retlw	32	;' '
   145  0654  3443               	retlw	67	;'C'
   146  0655  3420               	retlw	32	;' '
   147  0656  3428               	retlw	40	;'('
   148  0657  3455               	retlw	85	;'U'
   149  0658  346E               	retlw	110	;'n'
   150  0659  3469               	retlw	105	;'i'
   151  065A  3474               	retlw	116	;'t'
   152  065B  343A               	retlw	58	;':'
   153  065C  3420               	retlw	32	;' '
   154  065D  3446               	retlw	70	;'F'
   155  065E  3429               	retlw	41	;')'
   156  065F  3420               	retlw	32	;' '
   157  0660  342D               	retlw	45	;'-'
   158  0661  3400               	retlw	0
   159  0662                     STR_3:	
   160  0662  342D               	retlw	45	;'-'
   161  0663  3420               	retlw	32	;' '
   162  0664  344C               	retlw	76	;'L'
   163  0665  3420               	retlw	32	;' '
   164  0666  3428               	retlw	40	;'('
   165  0667  3455               	retlw	85	;'U'
   166  0668  346E               	retlw	110	;'n'
   167  0669  3469               	retlw	105	;'i'
   168  066A  3474               	retlw	116	;'t'
   169  066B  343A               	retlw	58	;':'
   170  066C  3420               	retlw	32	;' '
   171  066D  3448               	retlw	72	;'H'
   172  066E  3429               	retlw	41	;')'
   173  066F  3420               	retlw	32	;' '
   174  0670  342D               	retlw	45	;'-'
   175  0671  3400               	retlw	0
   176  0672                     STR_12:	
   177  0672  340D               	retlw	13
   178  0673  340A               	retlw	10
   179  0674  3443               	retlw	67	;'C'
   180  0675  3443               	retlw	67	;'C'
   181  0676  3461               	retlw	97	;'a'
   182  0677  346C               	retlw	108	;'l'
   183  0678  343D               	retlw	61	;'='
   184  0679  3400               	retlw	0
   185  067A                     STR_9:	
   186  067A  340D               	retlw	13
   187  067B  340A               	retlw	10
   188  067C  3446               	retlw	70	;'F'
   189  067D  3431               	retlw	49	;'1'
   190  067E  343D               	retlw	61	;'='
   191  067F  3400               	retlw	0
   192  0680                     STR_10:	
   193  0680  340D               	retlw	13
   194  0681  340A               	retlw	10
   195  0682  3446               	retlw	70	;'F'
   196  0683  3432               	retlw	50	;'2'
   197  0684  343D               	retlw	61	;'='
   198  0685  3400               	retlw	0
   199  0686                     STR_11:	
   200  0686  340D               	retlw	13
   201  0687  340A               	retlw	10
   202  0688  3446               	retlw	70	;'F'
   203  0689  3433               	retlw	51	;'3'
   204  068A  343D               	retlw	61	;'='
   205  068B  3400               	retlw	0
   206  068C                     STR_7:	
   207  068C  3446               	retlw	70	;'F'
   208  068D  3472               	retlw	114	;'r'
   209  068E  3465               	retlw	101	;'e'
   210  068F  3471               	retlw	113	;'q'
   211  0690  343D               	retlw	61	;'='
   212  0691  3400               	retlw	0
   213  0692                     STR_14:	
   214  0692  3443               	retlw	67	;'C'
   215  0693  3469               	retlw	105	;'i'
   216  0694  346E               	retlw	110	;'n'
   217  0695  343D               	retlw	61	;'='
   218  0696  3400               	retlw	0
   219  0697                     STR_8:	
   220  0697  3476               	retlw	118	;'v'
   221  0698  3461               	retlw	97	;'a'
   222  0699  3472               	retlw	114	;'r'
   223  069A  343D               	retlw	61	;'='
   224  069B  3400               	retlw	0
   225  069C                     STR_1:	
   226  069C  340D               	retlw	13
   227  069D  340A               	retlw	10
   228  069E  3400               	retlw	0
   229  069C                     
   230                           	psect	nvBANK3
   231  01E5                     __pnvBANK3:	
   232  01E5                     _CCal:	
   233  01E5                     	ds	4
   234  000B                     _INTCON	set	11
   235  000C                     _PIR1	set	12
   236  0007                     _PORTC	set	7
   237  001A                     _RCREG	set	26
   238  0012                     _T2CON	set	18
   239  0001                     _TMR0	set	1
   240  0011                     _TMR2	set	17
   241  0019                     _TXREG	set	25
   242  00C4                     _CREN	set	196
   243  005F                     _GIE	set	95
   244  005E                     _PEIE	set	94
   245  0065                     _RCIF	set	101
   246  00C6                     _RX9	set	198
   247  00C7                     _SPEN	set	199
   248  0064                     _TXIF	set	100
   249  009C                     _CMCON	set	156
   250  0081                     _OPTION_REG	set	129
   251  008C                     _PIE1	set	140
   252  0099                     _SPBRG	set	153
   253  0085                     _TRISA	set	133
   254  0087                     _TRISC	set	135
   255  04C2                     _BRGH	set	1218
   256  04C4                     _SYNC	set	1220
   257  04C6                     _TX9	set	1222
   258  04C5                     _TXEN	set	1221
   259  0464                     _TXIE	set	1124
   260                           
   261                           	psect	nvBANK1
   262  00E0                     __pnvBANK1:	
   263  00E0                     _bres:	
   264  00E0                     	ds	2
   265  00E2                     _msecpart:	
   266  00E2                     	ds	2
   267                           
   268                           	psect	cinit
   269  1F27                     start_initialization:	
   270                           
   271                           ; Clear objects allocated to COMMON
   272  1F27  01F6               	clrf	__pbssCOMMON& (0+127)
   273  1F28  01F7               	clrf	(__pbssCOMMON+1)& (0+127)
   274  1F29  01F8               	clrf	(__pbssCOMMON+2)& (0+127)
   275  1F2A  01F9               	clrf	(__pbssCOMMON+3)& (0+127)
   276                           
   277                           ; Clear objects allocated to BANK0
   278  1F2B  01EF               	clrf	__pbssBANK0& (0+127)
   279                           
   280                           ; Clear objects allocated to BANK1
   281  1F2C  1683               	bsf	3,5	;RP0=1, select bank1
   282  1F2D  01E4               	clrf	__pbssBANK1& (0+127)
   283  1F2E  01E5               	clrf	(__pbssBANK1+1)& (0+127)
   284                           
   285                           ; Clear objects allocated to BANK3
   286  1F2F  1783               	bsf	3,7	;select IRP bank2
   287  1F30  3090               	movlw	low __pbssBANK3
   288  1F31  0084               	movwf	4
   289  1F32  30D9               	movlw	low (__pbssBANK3+73)
   290  1F33  120A  118A  27F7   	fcall	clear_ram
   291                           
   292                           ;initializer for _mode
   293  1F36  30FF               	movlw	255
   294  1F37  00E6               	movwf	__pdataBANK1& (0+127)
   295  1F38                     end_of_initialization:	
   296                           ;End of C runtime variable initialization code
   297                           
   298  1F38  0183               	clrf	3
   299  1F39  120A  118A  2F39   	ljmp	_main	;jump to C main() function
   300                           
   301                           	psect	bssCOMMON
   302  0076                     __pbssCOMMON:	
   303  0076                     _rxiptr:	
   304  0076                     	ds	1
   305  0077                     _rxoptr:	
   306  0077                     	ds	1
   307  0078                     _txiptr:	
   308  0078                     	ds	1
   309  0079                     _txoptr:	
   310  0079                     	ds	1
   311                           
   312                           	psect	bssBANK0
   313  006F                     __pbssBANK0:	
   314  006F                     _ser_tmp:	
   315  006F                     	ds	1
   316                           
   317                           	psect	bssBANK1
   318  00E4                     __pbssBANK1:	
   319  00E4                     _blink:	
   320  00E4                     	ds	2
   321                           
   322                           	psect	dataBANK1
   323  00E6                     __pdataBANK1:	
   324  00E6                     _mode:	
   325  00E6                     	ds	1
   326                           
   327                           	psect	bssBANK3
   328  0190                     __pbssBANK3:	
   329  0190                     _buffer:	
   330  0190                     	ds	17
   331  01A1                     _rxfifo:	
   332  01A1                     	ds	16
   333  01B1                     _txfifo:	
   334  01B1                     	ds	16
   335  01C1                     _F2:	
   336  01C1                     	ds	4
   337  01C5                     _F3:	
   338  01C5                     	ds	4
   339  01C9                     _msecs:	
   340  01C9                     	ds	4
   341  01CD                     _seconds:	
   342  01CD                     	ds	4
   343  01D1                     _timer1of:	
   344  01D1                     	ds	4
   345  01D5                     _F1:	
   346  01D5                     	ds	4
   347                           
   348                           	psect	clrtext
   349  07F7                     clear_ram:	
   350                           ;	Called with FSR containing the base address, and
   351                           ;	W with the last address+1
   352                           
   353  07F7  0064               	clrwdt	;clear the watchdog before getting into this loop
   354  07F8                     clrloop:	
   355  07F8  0180               	clrf	0	;clear RAM location pointed to by FSR
   356  07F9  0A84               	incf	4,f	;increment pointer
   357  07FA  0604               	xorwf	4,w	;XOR with final address
   358  07FB  1903               	btfsc	3,2	;have we reached the end yet?
   359  07FC  3400               	retlw	0	;all done for this memory range, return
   360  07FD  0604               	xorwf	4,w	;XOR again to restore value
   361  07FE  2FF8               	goto	clrloop	;do the next byte
   362                           
   363                           	psect	cstackBANK3
   364  01D9                     __pcstackBANK3:	
   365  01D9                     _format_double$8233:	
   366                           
   367                           ; 4 bytes @ 0x0
   368  01D9                     	ds	4
   369  01DD                     format_double@weight:	
   370                           
   371                           ; 4 bytes @ 0x4
   372  01DD                     	ds	4
   373  01E1                     format_double@digit:	
   374                           
   375                           ; 2 bytes @ 0x8
   376  01E1                     	ds	2
   377  01E3                     format_double@m:	
   378                           
   379                           ; 2 bytes @ 0xA
   380  01E3                     	ds	2
   381                           
   382                           	psect	cstackBANK2
   383  0110                     __pcstackBANK2:	
   384  0110                     _measure_capacitance$8234:	
   385                           
   386                           ; 4 bytes @ 0x0
   387  0110                     	ds	4
   388  0114                     _measure_capacitance$8235:	
   389                           
   390                           ; 4 bytes @ 0x4
   391  0114                     	ds	4
   392  0118                     _measure_capacitance$8236:	
   393                           
   394                           ; 4 bytes @ 0x8
   395  0118                     	ds	4
   396  011C                     measure_capacitance@unit:	
   397                           
   398                           ; 1 bytes @ 0xC
   399  011C                     	ds	1
   400  011D                     measure_capacitance@var:	
   401                           
   402                           ; 2 bytes @ 0xD
   403  011D                     	ds	2
   404  011F                     measure_capacitance@Cin:	
   405                           
   406                           ; 4 bytes @ 0xF
   407  011F                     	ds	4
   408                           
   409                           	psect	cstackBANK1
   410  00A0                     __pcstackBANK1:	
   411  00A0                     ?_ldexp:	
   412  00A0                     ?___flsub:	
   413                           ; 4 bytes @ 0x0
   414                           
   415  00A0                     floor@i:	
   416                           ; 4 bytes @ 0x0
   417                           
   418  00A0                     ldexp@value:	
   419                           ; 4 bytes @ 0x0
   420                           
   421  00A0                     ___flsub@f2:	
   422                           ; 4 bytes @ 0x0
   423                           
   424                           
   425                           ; 4 bytes @ 0x0
   426  00A0                     	ds	4
   427  00A4                     floor@expon:	
   428  00A4                     ldexp@newexp:	
   429                           ; 2 bytes @ 0x4
   430                           
   431  00A4                     ___flsub@f1:	
   432                           ; 2 bytes @ 0x4
   433                           
   434                           
   435                           ; 4 bytes @ 0x4
   436  00A4                     	ds	2
   437  00A6                     _ldexp$7694:	
   438                           
   439                           ; 4 bytes @ 0x6
   440  00A6                     	ds	2
   441  00A8                     measure_inductance@numerator:	
   442                           
   443                           ; 4 bytes @ 0x8
   444  00A8                     	ds	2
   445  00AA                     ?_eval_poly:	
   446  00AA                     eval_poly@x:	
   447                           ; 4 bytes @ 0xA
   448                           
   449                           
   450                           ; 4 bytes @ 0xA
   451  00AA                     	ds	2
   452  00AC                     measure_inductance@denominator:	
   453                           
   454                           ; 4 bytes @ 0xC
   455  00AC                     	ds	2
   456  00AE                     eval_poly@d:	
   457                           
   458                           ; 1 bytes @ 0xE
   459  00AE                     	ds	1
   460  00AF                     eval_poly@n:	
   461                           
   462                           ; 2 bytes @ 0xF
   463  00AF                     	ds	1
   464  00B0                     _measure_inductance$8239:	
   465                           
   466                           ; 4 bytes @ 0x10
   467  00B0                     	ds	1
   468  00B1                     ??_eval_poly:	
   469                           
   470                           ; 0 bytes @ 0x11
   471  00B1                     	ds	3
   472  00B4                     _measure_inductance$8240:	
   473                           
   474                           ; 4 bytes @ 0x14
   475  00B4                     	ds	2
   476  00B6                     eval_poly@res:	
   477                           
   478                           ; 4 bytes @ 0x16
   479  00B6                     	ds	2
   480  00B8                     _measure_inductance$8241:	
   481                           
   482                           ; 4 bytes @ 0x18
   483  00B8                     	ds	2
   484  00BA                     ?_log:	
   485  00BA                     log@x:	
   486                           ; 4 bytes @ 0x1A
   487                           
   488                           
   489                           ; 4 bytes @ 0x1A
   490  00BA                     	ds	2
   491  00BC                     _measure_inductance$8242:	
   492                           
   493                           ; 4 bytes @ 0x1C
   494  00BC                     	ds	2
   495  00BE                     ?_log10:	
   496  00BE                     ?_exp:	
   497                           ; 4 bytes @ 0x1E
   498                           
   499  00BE                     log10@x:	
   500                           ; 4 bytes @ 0x1E
   501                           
   502  00BE                     exp@x:	
   503                           ; 4 bytes @ 0x1E
   504                           
   505                           
   506                           ; 4 bytes @ 0x1E
   507  00BE                     	ds	2
   508  00C0                     measure_inductance@unit:	
   509                           
   510                           ; 1 bytes @ 0x20
   511  00C0                     	ds	1
   512  00C1                     _measure_inductance$8237:	
   513                           
   514                           ; 4 bytes @ 0x21
   515  00C1                     	ds	1
   516  00C2                     _exp$7878:	
   517  00C2                     _log10$8243:	
   518                           ; 4 bytes @ 0x22
   519                           
   520                           
   521                           ; 4 bytes @ 0x22
   522  00C2                     	ds	3
   523  00C5                     _measure_inductance$8238:	
   524                           
   525                           ; 4 bytes @ 0x25
   526  00C5                     	ds	1
   527  00C6                     exp@exp:	
   528                           
   529                           ; 2 bytes @ 0x26
   530  00C6                     	ds	2
   531  00C8                     exp@sign:	
   532                           
   533                           ; 1 bytes @ 0x28
   534  00C8                     	ds	1
   535  00C9                     ?_pow:	
   536  00C9                     measure_inductance@var:	
   537                           ; 4 bytes @ 0x29
   538                           
   539  00C9                     pow@x:	
   540                           ; 2 bytes @ 0x29
   541                           
   542                           
   543                           ; 4 bytes @ 0x29
   544  00C9                     	ds	2
   545  00CB                     measure_inductance@Lin:	
   546                           
   547                           ; 4 bytes @ 0x2B
   548  00CB                     	ds	2
   549  00CD                     pow@y:	
   550                           
   551                           ; 4 bytes @ 0x2D
   552  00CD                     	ds	4
   553  00D1                     _pow$8244:	
   554                           
   555                           ; 4 bytes @ 0x31
   556  00D1                     	ds	4
   557  00D5                     pow@sign:	
   558                           
   559                           ; 1 bytes @ 0x35
   560  00D5                     	ds	1
   561  00D6                     pow@yi:	
   562                           
   563                           ; 4 bytes @ 0x36
   564  00D6                     	ds	4
   565  00DA                     ?_format_double:	
   566  00DA                     format_double@num:	
   567                           ; 0 bytes @ 0x3A
   568                           
   569                           
   570                           ; 4 bytes @ 0x3A
   571  00DA                     	ds	4
   572  00DE                     _main$6508:	
   573                           
   574                           ; 1 bytes @ 0x3E
   575  00DE                     	ds	1
   576  00DF                     main@new_mode:	
   577                           
   578                           ; 1 bytes @ 0x3F
   579  00DF                     	ds	1
   580                           
   581                           	psect	cstackCOMMON
   582  0070                     __pcstackCOMMON:	
   583  0070                     ?_calibrate:	
   584  0070                     ?_measure_capacitance:	
   585                           ; 0 bytes @ 0x0
   586                           
   587  0070                     ?_measure_inductance:	
   588                           ; 0 bytes @ 0x0
   589                           
   590  0070                     ?_buffer_init:	
   591                           ; 0 bytes @ 0x0
   592                           
   593  0070                     ?_ser_putch:	
   594                           ; 0 bytes @ 0x0
   595                           
   596  0070                     ?_ser_puts:	
   597                           ; 0 bytes @ 0x0
   598                           
   599  0070                     ?_ser_init:	
   600                           ; 0 bytes @ 0x0
   601                           
   602  0070                     ?_timer0_init:	
   603                           ; 0 bytes @ 0x0
   604                           
   605  0070                     ?_timer2_init:	
   606                           ; 0 bytes @ 0x0
   607                           
   608  0070                     ?_print_unit:	
   609                           ; 0 bytes @ 0x0
   610                           
   611  0070                     ?_print_indicator:	
   612                           ; 0 bytes @ 0x0
   613                           
   614  0070                     ?_print_buffer:	
   615                           ; 0 bytes @ 0x0
   616                           
   617  0070                     ?_delay10ms:	
   618                           ; 0 bytes @ 0x0
   619                           
   620  0070                     ??_isr:	
   621                           ; 0 bytes @ 0x0
   622                           
   623  0070                     ?_main:	
   624                           ; 0 bytes @ 0x0
   625                           
   626  0070                     ?_buffer_putch:	
   627                           ; 0 bytes @ 0x0
   628                           
   629  0070                     ?_buffer_puts:	
   630                           ; 1 bytes @ 0x0
   631                           
   632  0070                     ?_isr:	
   633                           ; 1 bytes @ 0x0
   634                           
   635                           
   636                           ; 2 bytes @ 0x0
   637  0070                     	ds	4
   638  0074                     ??_frexp:	
   639  0074                     ??_buffer_init:	
   640                           ; 0 bytes @ 0x4
   641                           
   642  0074                     ??_ser_putch:	
   643                           ; 0 bytes @ 0x4
   644                           
   645  0074                     ??_ser_init:	
   646                           ; 0 bytes @ 0x4
   647                           
   648  0074                     ??_timer0_init:	
   649                           ; 0 bytes @ 0x4
   650                           
   651  0074                     ??_timer2_init:	
   652                           ; 0 bytes @ 0x4
   653                           
   654  0074                     ??_print_unit:	
   655                           ; 0 bytes @ 0x4
   656                           
   657  0074                     ?_print_reading:	
   658                           ; 0 bytes @ 0x4
   659                           
   660  0074                     ??_print_indicator:	
   661                           ; 0 bytes @ 0x4
   662                           
   663  0074                     ??_delay10ms:	
   664                           ; 0 bytes @ 0x4
   665                           
   666  0074                     ??___lwdiv:	
   667                           ; 0 bytes @ 0x4
   668                           
   669  0074                     ??___lwmod:	
   670                           ; 0 bytes @ 0x4
   671                           
   672  0074                     ??___flneg:	
   673                           ; 0 bytes @ 0x4
   674                           
   675  0074                     ??___lltofl:	
   676                           ; 0 bytes @ 0x4
   677                           
   678  0074                     ?_timer0_read_ps:	
   679                           ; 0 bytes @ 0x4
   680                           
   681  0074                     buffer_putch@ch:	
   682                           ; 2 bytes @ 0x4
   683                           
   684  0074                     ser_putch@c:	
   685                           ; 1 bytes @ 0x4
   686                           
   687  0074                     ___lwmod@counter:	
   688                           ; 1 bytes @ 0x4
   689                           
   690  0074                     print_reading@measurement:	
   691                           ; 1 bytes @ 0x4
   692                           
   693                           
   694                           ; 2 bytes @ 0x4
   695  0074                     	ds	1
   696  0075                     ??_buffer_puts:	
   697  0075                     ??_ser_puts:	
   698                           ; 0 bytes @ 0x5
   699                           
   700  0075                     ??_format_number:	
   701                           ; 0 bytes @ 0x5
   702                           
   703  0075                     buffer_puts@x:	
   704                           ; 0 bytes @ 0x5
   705                           
   706  0075                     ser_puts@s:	
   707                           ; 1 bytes @ 0x5
   708                           
   709                           
   710                           ; 1 bytes @ 0x5
   711  0075                     	ds	1
   712  0076                     ??_log10:	
   713  0076                     ??_pow:	
   714                           ; 0 bytes @ 0x6
   715                           
   716  0076                     ??_floor:	
   717                           ; 0 bytes @ 0x6
   718                           
   719  0076                     ??_calibrate:	
   720                           ; 0 bytes @ 0x6
   721                           
   722  0076                     ??_measure_capacitance:	
   723                           ; 0 bytes @ 0x6
   724                           
   725  0076                     ??_measure_inductance:	
   726                           ; 0 bytes @ 0x6
   727                           
   728  0076                     ??_exp:	
   729                           ; 0 bytes @ 0x6
   730                           
   731  0076                     ??_print_reading:	
   732                           ; 0 bytes @ 0x6
   733                           
   734  0076                     ??_print_buffer:	
   735                           ; 0 bytes @ 0x6
   736                           
   737  0076                     ??_format_xint32:	
   738                           ; 0 bytes @ 0x6
   739                           
   740  0076                     ??_format_double:	
   741                           ; 0 bytes @ 0x6
   742                           
   743  0076                     ??_main:	
   744                           ; 0 bytes @ 0x6
   745                           
   746  0076                     ??_log:	
   747                           ; 0 bytes @ 0x6
   748                           
   749  0076                     ??___flsub:	
   750                           ; 0 bytes @ 0x6
   751                           
   752  0076                     ??___awtofl:	
   753                           ; 0 bytes @ 0x6
   754                           
   755  0076                     ??___lwtofl:	
   756                           ; 0 bytes @ 0x6
   757                           
   758  0076                     ??___altofl:	
   759                           ; 0 bytes @ 0x6
   760                           
   761                           
   762                           	psect	cstackBANK0
   763  0020                     __pcstackBANK0:	
   764                           ; 0 bytes @ 0x6
   765                           
   766  0020                     ??_buffer_putch:	
   767  0020                     ??_timer0_read_ps:	
   768                           ; 0 bytes @ 0x0
   769                           
   770  0020                     ?___flge:	
   771                           ; 0 bytes @ 0x0
   772                           
   773  0020                     ?___lwdiv:	
   774                           ; 1 bit 
   775                           
   776  0020                     ?___lwmod:	
   777                           ; 2 bytes @ 0x0
   778                           
   779  0020                     ?_frexp:	
   780                           ; 2 bytes @ 0x0
   781                           
   782  0020                     ?___flpack:	
   783                           ; 4 bytes @ 0x0
   784                           
   785  0020                     ?___flneg:	
   786                           ; 4 bytes @ 0x0
   787                           
   788  0020                     _timer0_init$3401:	
   789                           ; 4 bytes @ 0x0
   790                           
   791  0020                     ___lwdiv@divisor:	
   792                           ; 2 bytes @ 0x0
   793                           
   794  0020                     ___lwmod@divisor:	
   795                           ; 2 bytes @ 0x0
   796                           
   797  0020                     frexp@value:	
   798                           ; 2 bytes @ 0x0
   799                           
   800  0020                     ___flneg@f1:	
   801                           ; 4 bytes @ 0x0
   802                           
   803  0020                     ___flge@ff1:	
   804                           ; 4 bytes @ 0x0
   805                           
   806  0020                     ___flpack@arg:	
   807                           ; 4 bytes @ 0x0
   808                           
   809                           
   810                           ; 4 bytes @ 0x0
   811  0020                     	ds	1
   812  0021                     timer2_init@ps:	
   813                           
   814                           ; 1 bytes @ 0x1
   815  0021                     	ds	1
   816  0022                     timer2_init@ps_mode:	
   817  0022                     _timer0_init$3402:	
   818                           ; 1 bytes @ 0x2
   819                           
   820  0022                     ___lwdiv@dividend:	
   821                           ; 2 bytes @ 0x2
   822                           
   823  0022                     ___lwmod@dividend:	
   824                           ; 2 bytes @ 0x2
   825                           
   826                           
   827                           ; 2 bytes @ 0x2
   828  0022                     	ds	2
   829  0024                     timer0_read_ps@prev:	
   830  0024                     frexp@eptr:	
   831                           ; 1 bytes @ 0x4
   832                           
   833  0024                     ___lwdiv@counter:	
   834                           ; 1 bytes @ 0x4
   835                           
   836  0024                     ___flpack@exp:	
   837                           ; 1 bytes @ 0x4
   838                           
   839  0024                     _timer0_init$3403:	
   840                           ; 1 bytes @ 0x4
   841                           
   842  0024                     ___flge@ff2:	
   843                           ; 2 bytes @ 0x4
   844                           
   845                           
   846                           ; 4 bytes @ 0x4
   847  0024                     	ds	1
   848  0025                     ___flpack@sign:	
   849  0025                     timer0_read_ps@count:	
   850                           ; 1 bytes @ 0x5
   851                           
   852  0025                     ___lwdiv@quotient:	
   853                           ; 2 bytes @ 0x5
   854                           
   855                           
   856                           ; 2 bytes @ 0x5
   857  0025                     	ds	1
   858  0026                     ??___flpack:	
   859  0026                     _timer0_init$3404:	
   860                           ; 0 bytes @ 0x6
   861                           
   862                           
   863                           ; 2 bytes @ 0x6
   864  0026                     	ds	1
   865  0027                     ?_format_number:	
   866  0027                     format_number@n:	
   867                           ; 0 bytes @ 0x7
   868                           
   869                           
   870                           ; 2 bytes @ 0x7
   871  0027                     	ds	1
   872  0028                     ??___flge:	
   873  0028                     timer0_init@prescaler:	
   874                           ; 0 bytes @ 0x8
   875                           
   876                           
   877                           ; 1 bytes @ 0x8
   878  0028                     	ds	1
   879  0029                     timer0_init@ps_mode:	
   880  0029                     format_number@base:	
   881                           ; 1 bytes @ 0x9
   882                           
   883                           
   884                           ; 1 bytes @ 0x9
   885  0029                     	ds	1
   886  002A                     ?___lltofl:	
   887  002A                     format_number@pad:	
   888                           ; 4 bytes @ 0xA
   889                           
   890  002A                     ___lltofl@c:	
   891                           ; 1 bytes @ 0xA
   892                           
   893                           
   894                           ; 4 bytes @ 0xA
   895  002A                     	ds	1
   896  002B                     format_number@buf:	
   897                           
   898                           ; 32 bytes @ 0xB
   899  002B                     	ds	1
   900  002C                     ?___fltol:	
   901  002C                     ___fltol@f1:	
   902                           ; 4 bytes @ 0xC
   903                           
   904                           
   905                           ; 4 bytes @ 0xC
   906  002C                     	ds	4
   907  0030                     ??___fltol:	
   908                           
   909                           ; 0 bytes @ 0x10
   910  0030                     	ds	4
   911  0034                     ___fltol@sign1:	
   912                           
   913                           ; 1 bytes @ 0x14
   914  0034                     	ds	1
   915  0035                     ___fltol@exp1:	
   916                           
   917                           ; 1 bytes @ 0x15
   918  0035                     	ds	1
   919  0036                     ?___fldiv:	
   920  0036                     ?___awtofl:	
   921                           ; 4 bytes @ 0x16
   922                           
   923  0036                     ?___altofl:	
   924                           ; 4 bytes @ 0x16
   925                           
   926  0036                     ___awtofl@c:	
   927                           ; 4 bytes @ 0x16
   928                           
   929  0036                     ___fldiv@f2:	
   930                           ; 2 bytes @ 0x16
   931                           
   932  0036                     ___altofl@c:	
   933                           ; 4 bytes @ 0x16
   934                           
   935                           
   936                           ; 4 bytes @ 0x16
   937  0036                     	ds	4
   938  003A                     ___awtofl@sign:	
   939  003A                     ___altofl@sign:	
   940                           ; 1 bytes @ 0x1A
   941                           
   942  003A                     ___fldiv@f1:	
   943                           ; 1 bytes @ 0x1A
   944                           
   945                           
   946                           ; 4 bytes @ 0x1A
   947  003A                     	ds	4
   948  003E                     ??___fldiv:	
   949                           
   950                           ; 0 bytes @ 0x1E
   951  003E                     	ds	4
   952  0042                     ___fldiv@f3:	
   953                           
   954                           ; 4 bytes @ 0x22
   955  0042                     	ds	4
   956  0046                     ___fldiv@cntr:	
   957                           
   958                           ; 1 bytes @ 0x26
   959  0046                     	ds	1
   960  0047                     ___fldiv@exp:	
   961                           
   962                           ; 1 bytes @ 0x27
   963  0047                     	ds	1
   964  0048                     ___fldiv@sign:	
   965                           
   966                           ; 1 bytes @ 0x28
   967  0048                     	ds	1
   968  0049                     ?___flmul:	
   969  0049                     ___flmul@f1:	
   970                           ; 4 bytes @ 0x29
   971                           
   972                           
   973                           ; 4 bytes @ 0x29
   974  0049                     	ds	2
   975  004B                     format_number@padchar:	
   976                           
   977                           ; 1 bytes @ 0x2B
   978  004B                     	ds	1
   979  004C                     _format_number$5705:	
   980                           
   981                           ; 2 bytes @ 0x2C
   982  004C                     	ds	1
   983  004D                     ___flmul@f2:	
   984                           
   985                           ; 4 bytes @ 0x2D
   986  004D                     	ds	1
   987  004E                     format_number@di:	
   988                           
   989                           ; 1 bytes @ 0x2E
   990  004E                     	ds	1
   991  004F                     format_number@i:	
   992                           
   993                           ; 1 bytes @ 0x2F
   994  004F                     	ds	1
   995  0050                     ?_format_xint32:	
   996  0050                     ?___lwtofl:	
   997                           ; 0 bytes @ 0x30
   998                           
   999  0050                     ___lwtofl@c:	
  1000                           ; 4 bytes @ 0x30
  1001                           
  1002  0050                     format_xint32@x:	
  1003                           ; 2 bytes @ 0x30
  1004                           
  1005                           
  1006                           ; 4 bytes @ 0x30
  1007  0050                     	ds	1
  1008  0051                     ??___flmul:	
  1009                           
  1010                           ; 0 bytes @ 0x31
  1011  0051                     	ds	3
  1012  0054                     print_buffer@i:	
  1013                           
  1014                           ; 1 bytes @ 0x34
  1015  0054                     	ds	1
  1016  0055                     ?_measure_freq:	
  1017  0055                     ___flmul@exp:	
  1018                           ; 2 bytes @ 0x35
  1019                           
  1020                           
  1021                           ; 1 bytes @ 0x35
  1022  0055                     	ds	1
  1023  0056                     ___flmul@f3_as_product:	
  1024                           
  1025                           ; 4 bytes @ 0x36
  1026  0056                     	ds	1
  1027  0057                     ??_measure_freq:	
  1028                           
  1029                           ; 0 bytes @ 0x37
  1030  0057                     	ds	2
  1031  0059                     measure_freq@count:	
  1032                           
  1033                           ; 2 bytes @ 0x39
  1034  0059                     	ds	1
  1035  005A                     ___flmul@cntr:	
  1036                           
  1037                           ; 1 bytes @ 0x3A
  1038  005A                     	ds	1
  1039  005B                     ___flmul@sign:	
  1040                           
  1041                           ; 1 bytes @ 0x3B
  1042  005B                     	ds	1
  1043  005C                     ?___fladd:	
  1044  005C                     ___fladd@f1:	
  1045                           ; 4 bytes @ 0x3C
  1046                           
  1047                           
  1048                           ; 4 bytes @ 0x3C
  1049  005C                     	ds	4
  1050  0060                     ___fladd@f2:	
  1051                           
  1052                           ; 4 bytes @ 0x40
  1053  0060                     	ds	4
  1054  0064                     ??___fladd:	
  1055                           
  1056                           ; 0 bytes @ 0x44
  1057  0064                     	ds	4
  1058  0068                     ___fladd@sign:	
  1059                           
  1060                           ; 1 bytes @ 0x48
  1061  0068                     	ds	1
  1062  0069                     ___fladd@exp2:	
  1063                           
  1064                           ; 1 bytes @ 0x49
  1065  0069                     	ds	1
  1066  006A                     ___fladd@exp1:	
  1067                           
  1068                           ; 1 bytes @ 0x4A
  1069  006A                     	ds	1
  1070  006B                     ??_ldexp:	
  1071  006B                     ?_floor:	
  1072                           ; 0 bytes @ 0x4B
  1073                           
  1074  006B                     floor@x:	
  1075                           ; 4 bytes @ 0x4B
  1076                           
  1077                           
  1078                           ; 4 bytes @ 0x4B
  1079  006B                     	ds	2
  1080  006D                     log@exp:	
  1081                           
  1082                           ; 2 bytes @ 0x4D
  1083  006D                     	ds	2
  1084                           
  1085                           	psect	maintext
  1086  0739                     __pmaintext:	
  1087 ;;Data sizes: Strings 77, constant 76, data 1, bss 80, persistent 8 stack 0
  1088 ;;Auto spaces:   Size  Autos    Used
  1089 ;; COMMON          14      6      10
  1090 ;; BANK0           80     79      80
  1091 ;; BANK1           80     64      71
  1092 ;; BANK3           96     12      89
  1093 ;; BANK2           96     19      19
  1094 ;;
  1095 ;; Pointer list with targets:
  1096 ;; ?___flpack	 size(1) Largest target is 0
  1097 ;;
  1098 ;; ?_ldexp	 size(1) Largest target is 0
  1099 ;;
  1100 ;; ?_exp	 size(1) Largest target is 0
  1101 ;;
  1102 ;; ?___flneg	 size(1) Largest target is 0
  1103 ;;
  1104 ;; ?___lltofl	 size(1) Largest target is 0
  1105 ;;
  1106 ;; ?_log	 size(1) Largest target is 0
  1107 ;;
  1108 ;; ?_eval_poly	 size(1) Largest target is 0
  1109 ;;
  1110 ;; ?___fladd	 size(1) Largest target is 0
  1111 ;;
  1112 ;; ?___altofl	 size(1) Largest target is 0
  1113 ;;
  1114 ;; ?_frexp	 size(1) Largest target is 0
  1115 ;;
  1116 ;; ?_measure_freq	unsigned short  size(1) Largest target is 0
  1117 ;;
  1118 ;; ?___lwtofl	unsigned short  size(1) Largest target is 0
  1119 ;;
  1120 ;; ?___flsub	unsigned short  size(1) Largest target is 0
  1121 ;;
  1122 ;; ?___flmul	unsigned short  size(1) Largest target is 0
  1123 ;;
  1124 ;; ?___fldiv	unsigned short  size(1) Largest target is 0
  1125 ;;
  1126 ;; ?_floor	unsigned short  size(1) Largest target is 0
  1127 ;;
  1128 ;; ?___awtofl	unsigned short  size(1) Largest target is 0
  1129 ;;
  1130 ;; ?_pow	unsigned short  size(1) Largest target is 0
  1131 ;;
  1132 ;; ?___fltol	long  size(1) Largest target is 0
  1133 ;;
  1134 ;; ?_log10	long  size(1) Largest target is 0
  1135 ;;
  1136 ;; ?___lwdiv	unsigned int  size(1) Largest target is 0
  1137 ;;
  1138 ;; ?___lwmod	unsigned int  size(1) Largest target is 0
  1139 ;;
  1140 ;; ?_timer0_read_ps	unsigned short  size(1) Largest target is 0
  1141 ;;
  1142 ;; eval_poly@d	PTR const  size(1) Largest target is 40
  1143 ;;		 -> exp@coeff(CODE[40]), log@coeff(CODE[36]), 
  1144 ;;
  1145 ;; frexp@eptr	PTR int  size(1) Largest target is 2
  1146 ;;		 -> log@exp(BANK0[2]), floor@expon(BANK1[2]), 
  1147 ;;
  1148 ;; main$6508	PTR const unsigned char  size(1) Largest target is 16
  1149 ;;		 -> STR_3(CODE[16]), STR_2(CODE[16]), 
  1150 ;;
  1151 ;; ser_puts@s	PTR const unsigned char  size(1) Largest target is 16
  1152 ;;		 -> STR_15(CODE[3]), STR_14(CODE[5]), STR_13(CODE[3]), STR_12(CODE[8]), 
  1153 ;;		 -> STR_11(CODE[6]), STR_10(CODE[6]), STR_9(CODE[6]), STR_8(CODE[5]), 
  1154 ;;		 -> STR_6(CODE[3]), STR_5(CODE[3]), STR_4(CODE[3]), STR_3(CODE[16]), 
  1155 ;;		 -> STR_2(CODE[16]), STR_1(CODE[3]), 
  1156 ;;
  1157 ;; buffer_puts@x	PTR const unsigned char  size(1) Largest target is 6
  1158 ;;		 -> STR_7(CODE[6]), 
  1159 ;;
  1160 ;;
  1161 ;; Critical Paths under _main in COMMON
  1162 ;;
  1163 ;;   _main->_ser_puts
  1164 ;;   _measure_capacitance->_ser_puts
  1165 ;;   _measure_capacitance->_print_reading
  1166 ;;   _measure_inductance->_print_reading
  1167 ;;   _calibrate->_ser_puts
  1168 ;;   _log->_frexp
  1169 ;;   _measure_freq->_timer0_read_ps
  1170 ;;   _measure_freq->_buffer_puts
  1171 ;;   _measure_freq->_format_number
  1172 ;;   _floor->_frexp
  1173 ;;   _format_xint32->_format_number
  1174 ;;   _print_buffer->_ser_puts
  1175 ;;   ___lwtofl->_timer0_read_ps
  1176 ;;   ___lwtofl->_buffer_puts
  1177 ;;   ___lwtofl->_format_number
  1178 ;;   ___lwtofl->_ser_puts
  1179 ;;   ___flmul->_frexp
  1180 ;;   ___fladd->_frexp
  1181 ;;   _format_number->___lwmod
  1182 ;;   _format_number->_buffer_putch
  1183 ;;   _ser_puts->_ser_putch
  1184 ;;   _buffer_puts->_buffer_putch
  1185 ;;   ___fltol->_frexp
  1186 ;;
  1187 ;; Critical Paths under _isr in COMMON
  1188 ;;
  1189 ;;   None.
  1190 ;;
  1191 ;; Critical Paths under _main in BANK0
  1192 ;;
  1193 ;;   _format_double->_floor
  1194 ;;   _calibrate->_measure_freq
  1195 ;;   _pow->_log
  1196 ;;   _log10->_log
  1197 ;;   _exp->_floor
  1198 ;;   _exp->_log
  1199 ;;   _measure_freq->_print_buffer
  1200 ;;   ___flsub->___fladd
  1201 ;;   _eval_poly->_ldexp
  1202 ;;   _floor->___fladd
  1203 ;;   _format_xint32->_format_number
  1204 ;;   _print_buffer->___lwtofl
  1205 ;;   ___lltofl->___flpack
  1206 ;;   ___altofl->___fltol
  1207 ;;   ___lwtofl->_format_number
  1208 ;;   ___awtofl->___fltol
  1209 ;;   ___flmul->___fldiv
  1210 ;;   ___fldiv->___fltol
  1211 ;;   ___fladd->___flmul
  1212 ;;   _ldexp->___fladd
  1213 ;;   _format_number->___lwdiv
  1214 ;;   _buffer_puts->_buffer_putch
  1215 ;;   ___fltol->___flge
  1216 ;;
  1217 ;; Critical Paths under _isr in BANK0
  1218 ;;
  1219 ;;   None.
  1220 ;;
  1221 ;; Critical Paths under _main in BANK1
  1222 ;;
  1223 ;;   _measure_capacitance->_format_double
  1224 ;;   _format_double->_pow
  1225 ;;   _measure_inductance->___flsub
  1226 ;;   _pow->_exp
  1227 ;;   _log10->_log
  1228 ;;   _exp->_log
  1229 ;;   _log->_eval_poly
  1230 ;;   _eval_poly->_ldexp
  1231 ;;
  1232 ;; Critical Paths under _isr in BANK1
  1233 ;;
  1234 ;;   None.
  1235 ;;
  1236 ;; Critical Paths under _main in BANK3
  1237 ;;
  1238 ;;   _measure_capacitance->_format_double
  1239 ;;
  1240 ;; Critical Paths under _isr in BANK3
  1241 ;;
  1242 ;;   None.
  1243 ;;
  1244 ;; Critical Paths under _main in BANK2
  1245 ;;
  1246 ;;   _main->_measure_capacitance
  1247 ;;
  1248 ;; Critical Paths under _isr in BANK2
  1249 ;;
  1250 ;;   None.
  1251 ;;
  1252 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1253 ;;
  1254 ;;
  1255 ;;Call Graph Tables:
  1256 ;;
  1257 ;; ---------------------------------------------------------------------------------
  1258 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  1259 ;; ---------------------------------------------------------------------------------
  1260 ;; (0) _main                                                 2     2      0   51196
  1261 ;;                                             62 BANK1      2     2      0
  1262 ;;                        _timer0_init
  1263 ;;                        _timer2_init
  1264 ;;                          _delay10ms
  1265 ;;                           _ser_init
  1266 ;;                          _calibrate
  1267 ;;                           _ser_puts
  1268 ;;                _measure_capacitance
  1269 ;;                 _measure_inductance
  1270 ;;                    _print_indicator
  1271 ;; ---------------------------------------------------------------------------------
  1272 ;; (1) _measure_capacitance                                 19    19      0   41931
  1273 ;;                                              0 BANK2     19    19      0
  1274 ;;                       _measure_freq
  1275 ;;                           ___lwtofl
  1276 ;;                           _ser_puts
  1277 ;;                      _format_xint32
  1278 ;;                      _format_double
  1279 ;;                          _ser_putch
  1280 ;;                             ___flge
  1281 ;;                            ___flmul
  1282 ;;                            ___flsub
  1283 ;;                            ___fldiv
  1284 ;;                            ___fltol
  1285 ;;                      _print_reading
  1286 ;;                         _print_unit
  1287 ;; ---------------------------------------------------------------------------------
  1288 ;; (2) _format_double                                       16    12      4   34272
  1289 ;;                                             58 BANK1      4     0      4
  1290 ;;                                              0 BANK3     12    12      0
  1291 ;;                              _log10
  1292 ;;                            ___fltol
  1293 ;;                           ___awtofl
  1294 ;;                                _pow
  1295 ;;                            ___fldiv
  1296 ;;                              _floor
  1297 ;;                            ___flmul
  1298 ;;                            ___flsub
  1299 ;;                       _buffer_putch
  1300 ;;                             ___flge
  1301 ;; ---------------------------------------------------------------------------------
  1302 ;; (1) _measure_inductance                                  47    47      0    6551
  1303 ;;                                              8 BANK1     39    39      0
  1304 ;;                       _measure_freq
  1305 ;;                           ___lwtofl
  1306 ;;                             ___flge
  1307 ;;                            ___flsub
  1308 ;;                            ___flmul
  1309 ;;                            ___fldiv
  1310 ;;                            ___fltol
  1311 ;;                      _print_reading
  1312 ;;                         _print_unit
  1313 ;; ---------------------------------------------------------------------------------
  1314 ;; (1) _calibrate                                            1     1      0    2131
  1315 ;;                       _measure_freq
  1316 ;;                           ___lwtofl
  1317 ;;                          _delay10ms
  1318 ;;                           _ser_puts
  1319 ;; ---------------------------------------------------------------------------------
  1320 ;; (3) _pow                                                 17     9      8   19556
  1321 ;;                                             41 BANK1     17     9      8
  1322 ;;                             ___flge
  1323 ;;                            ___fltol
  1324 ;;                           ___lltofl
  1325 ;;                            ___flneg
  1326 ;;                                _log
  1327 ;;                            ___flmul
  1328 ;;                                _exp
  1329 ;; ---------------------------------------------------------------------------------
  1330 ;; (3) _log10                                                8     4      4    7008
  1331 ;;                                             30 BANK1      8     4      4
  1332 ;;                                _log
  1333 ;;                            ___flmul
  1334 ;;                            ___fltol (ARG)
  1335 ;; ---------------------------------------------------------------------------------
  1336 ;; (4) _exp                                                 11     7      4   11184
  1337 ;;                                             30 BANK1     11     7      4
  1338 ;;                             ___flge
  1339 ;;                            ___flneg
  1340 ;;                            ___flmul
  1341 ;;                              _floor
  1342 ;;                            ___fltol
  1343 ;;                           ___awtofl
  1344 ;;                            ___flsub
  1345 ;;                          _eval_poly
  1346 ;;                              _ldexp
  1347 ;;                            ___fldiv
  1348 ;;                                _log (ARG)
  1349 ;; ---------------------------------------------------------------------------------
  1350 ;; (4) _log                                                  6     2      4    6143
  1351 ;;                                             77 BANK0      2     2      0
  1352 ;;                                             26 BANK1      4     0      4
  1353 ;;                             ___flge
  1354 ;;                              _frexp
  1355 ;;                            ___flmul
  1356 ;;                            ___fladd
  1357 ;;                          _eval_poly
  1358 ;;                           ___awtofl
  1359 ;;                            ___fltol (ARG)
  1360 ;; ---------------------------------------------------------------------------------
  1361 ;; (2) _measure_freq                                         6     4      2    1692
  1362 ;;                                             53 BANK0      6     4      2
  1363 ;;                     _timer0_read_ps
  1364 ;;                        _buffer_init
  1365 ;;                        _buffer_puts
  1366 ;;                      _format_number
  1367 ;;                       _print_buffer
  1368 ;;                           ___lwtofl (ARG)
  1369 ;; ---------------------------------------------------------------------------------
  1370 ;; (2) ___flsub                                              8     0      8    1602
  1371 ;;                                              0 BANK1      8     0      8
  1372 ;;                            ___fladd
  1373 ;;                            ___flmul (ARG)
  1374 ;;                           ___awtofl (ARG)
  1375 ;; ---------------------------------------------------------------------------------
  1376 ;; (5) _eval_poly                                           16     9      7    2591
  1377 ;;                                             10 BANK1     16     9      7
  1378 ;;                            ___flmul
  1379 ;;                            ___fladd
  1380 ;;                            ___fltol (ARG)
  1381 ;;                              _ldexp (ARG)
  1382 ;; ---------------------------------------------------------------------------------
  1383 ;; (3) _floor                                               10     6      4    3207
  1384 ;;                                             75 BANK0      4     0      4
  1385 ;;                                              0 BANK1      6     6      0
  1386 ;;                              _frexp
  1387 ;;                             ___flge
  1388 ;;                            ___fltol
  1389 ;;                           ___altofl
  1390 ;;                            ___fladd
  1391 ;;                            ___fldiv (ARG)
  1392 ;; ---------------------------------------------------------------------------------
  1393 ;; (2) _format_xint32                                        4     0      4    1262
  1394 ;;                                             48 BANK0      4     0      4
  1395 ;;                       _buffer_putch
  1396 ;;                      _format_number
  1397 ;; ---------------------------------------------------------------------------------
  1398 ;; (3) _print_buffer                                         1     1      0     195
  1399 ;;                                             52 BANK0      1     1      0
  1400 ;;                          _ser_putch
  1401 ;;                           _ser_puts
  1402 ;;                           ___lwtofl (ARG)
  1403 ;; ---------------------------------------------------------------------------------
  1404 ;; (4) ___lltofl                                             4     0      4     343
  1405 ;;                                             10 BANK0      4     0      4
  1406 ;;                           ___flpack
  1407 ;; ---------------------------------------------------------------------------------
  1408 ;; (4) ___altofl                                             5     1      4     445
  1409 ;;                                             22 BANK0      5     1      4
  1410 ;;                           ___flpack
  1411 ;;                            ___fltol (ARG)
  1412 ;; ---------------------------------------------------------------------------------
  1413 ;; (2) ___lwtofl                                             4     0      4     343
  1414 ;;                                             48 BANK0      4     0      4
  1415 ;;                           ___flpack
  1416 ;;                     _timer0_read_ps (ARG)
  1417 ;;                        _buffer_init (ARG)
  1418 ;;                        _buffer_puts (ARG)
  1419 ;;                      _format_number (ARG)
  1420 ;;                          _ser_putch (ARG)
  1421 ;;                           _ser_puts (ARG)
  1422 ;; ---------------------------------------------------------------------------------
  1423 ;; (5) ___awtofl                                             9     5      4     445
  1424 ;;                                             22 BANK0      5     1      4
  1425 ;;                           ___flpack
  1426 ;;                            ___fltol (ARG)
  1427 ;; ---------------------------------------------------------------------------------
  1428 ;; (2) ___flmul                                             19    11      8     800
  1429 ;;                                             41 BANK0     19    11      8
  1430 ;;                           ___flpack
  1431 ;;                            ___fltol (ARG)
  1432 ;;                           ___awtofl (ARG)
  1433 ;;                            ___fldiv (ARG)
  1434 ;;                              _frexp (ARG)
  1435 ;; ---------------------------------------------------------------------------------
  1436 ;; (2) ___fldiv                                             19    11      8     729
  1437 ;;                                             22 BANK0     19    11      8
  1438 ;;                           ___flpack
  1439 ;;                            ___fltol (ARG)
  1440 ;; ---------------------------------------------------------------------------------
  1441 ;; (3) ___fladd                                             15     7      8    1537
  1442 ;;                                             60 BANK0     15     7      8
  1443 ;;                           ___flpack
  1444 ;;                            ___fltol (ARG)
  1445 ;;                            ___flmul (ARG)
  1446 ;;                              _frexp (ARG)
  1447 ;;                           ___awtofl (ARG)
  1448 ;; ---------------------------------------------------------------------------------
  1449 ;; (5) _ldexp                                               12     6      6     659
  1450 ;;                                             75 BANK0      2     2      0
  1451 ;;                                              0 BANK1     10     4      6
  1452 ;;                             ___flge
  1453 ;;                            ___flneg
  1454 ;;                            ___flmul (ARG)
  1455 ;;                            ___fladd (ARG)
  1456 ;; ---------------------------------------------------------------------------------
  1457 ;; (3) _format_number                                       42    38      4    1169
  1458 ;;                                              5 COMMON     1     1      0
  1459 ;;                                              7 BANK0     41    37      4
  1460 ;;                            ___lwmod
  1461 ;;                            ___lwdiv
  1462 ;;                       _buffer_putch
  1463 ;; ---------------------------------------------------------------------------------
  1464 ;; (3) _timer0_read_ps                                       9     7      2     167
  1465 ;;                                              4 COMMON     2     0      2
  1466 ;;                                              0 BANK0      7     7      0
  1467 ;; ---------------------------------------------------------------------------------
  1468 ;; (4) _ser_puts                                             1     1      0      96
  1469 ;;                                              5 COMMON     1     1      0
  1470 ;;                          _ser_putch
  1471 ;; ---------------------------------------------------------------------------------
  1472 ;; (3) _buffer_puts                                          1     1      0      96
  1473 ;;                                              5 COMMON     1     1      0
  1474 ;;                       _buffer_putch
  1475 ;; ---------------------------------------------------------------------------------
  1476 ;; (2) ___flge                                              12     4      8     198
  1477 ;;                                              0 BANK0     12     4      8
  1478 ;; ---------------------------------------------------------------------------------
  1479 ;; (2) ___fltol                                             10     6      4     337
  1480 ;;                                             12 BANK0     10     6      4
  1481 ;;                             ___flge (ARG)
  1482 ;;                              _frexp (ARG)
  1483 ;;                           ___flpack (ARG)
  1484 ;; ---------------------------------------------------------------------------------
  1485 ;; (6) ___flneg                                              4     0      4      65
  1486 ;;                                              0 BANK0      4     0      4
  1487 ;; ---------------------------------------------------------------------------------
  1488 ;; (3) ___flpack                                            10     4      6     312
  1489 ;;                                              0 BANK0     10     4      6
  1490 ;; ---------------------------------------------------------------------------------
  1491 ;; (4) ___lwmod                                              5     1      4     232
  1492 ;;                                              4 COMMON     1     1      0
  1493 ;;                                              0 BANK0      4     0      4
  1494 ;; ---------------------------------------------------------------------------------
  1495 ;; (4) ___lwdiv                                              7     3      4     241
  1496 ;;                                              0 BANK0      7     3      4
  1497 ;; ---------------------------------------------------------------------------------
  1498 ;; (4) _frexp                                                7     2      5     322
  1499 ;;                                              4 COMMON     2     2      0
  1500 ;;                                              0 BANK0      5     0      5
  1501 ;; ---------------------------------------------------------------------------------
  1502 ;; (2) _delay10ms                                            0     0      0       0
  1503 ;; ---------------------------------------------------------------------------------
  1504 ;; (1) _print_indicator                                      0     0      0       0
  1505 ;; ---------------------------------------------------------------------------------
  1506 ;; (2) _print_reading                                        2     0      2       0
  1507 ;;                                              4 COMMON     2     0      2
  1508 ;; ---------------------------------------------------------------------------------
  1509 ;; (2) _print_unit                                           0     0      0       0
  1510 ;; ---------------------------------------------------------------------------------
  1511 ;; (1) _timer2_init                                          4     4      0     133
  1512 ;;                                              4 COMMON     1     1      0
  1513 ;;                                              0 BANK0      3     3      0
  1514 ;; ---------------------------------------------------------------------------------
  1515 ;; (1) _timer0_init                                         10    10      0     252
  1516 ;;                                              0 BANK0     10    10      0
  1517 ;; ---------------------------------------------------------------------------------
  1518 ;; (1) _ser_init                                             0     0      0       0
  1519 ;; ---------------------------------------------------------------------------------
  1520 ;; (5) _ser_putch                                            1     1      0      31
  1521 ;;                                              4 COMMON     1     1      0
  1522 ;; ---------------------------------------------------------------------------------
  1523 ;; (4) _buffer_putch                                         4     4      0      31
  1524 ;;                                              4 COMMON     1     1      0
  1525 ;;                                              0 BANK0      3     3      0
  1526 ;; ---------------------------------------------------------------------------------
  1527 ;; (3) _buffer_init                                          0     0      0       0
  1528 ;; ---------------------------------------------------------------------------------
  1529 ;; Estimated maximum stack depth 6
  1530 ;; ---------------------------------------------------------------------------------
  1531 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  1532 ;; ---------------------------------------------------------------------------------
  1533 ;; (8) _isr                                                  4     4      0       0
  1534 ;;                                              0 COMMON     4     4      0
  1535 ;; ---------------------------------------------------------------------------------
  1536 ;; Estimated maximum stack depth 8
  1537 ;; ---------------------------------------------------------------------------------
  1538 ;; Call Graph Graphs:
  1539 ;; _main (ROOT)
  1540 ;;   _timer0_init
  1541 ;;   _timer2_init
  1542 ;;   _delay10ms
  1543 ;;   _ser_init
  1544 ;;   _calibrate
  1545 ;;     _measure_freq
  1546 ;;       _timer0_read_ps
  1547 ;;       _buffer_init
  1548 ;;       _buffer_puts
  1549 ;;         _buffer_putch
  1550 ;;       _format_number
  1551 ;;         ___lwmod
  1552 ;;         ___lwdiv
  1553 ;;         _buffer_putch
  1554 ;;       _print_buffer
  1555 ;;         _ser_putch
  1556 ;;         _ser_puts
  1557 ;;           _ser_putch
  1558 ;;         ___lwtofl (ARG)
  1559 ;;           ___flpack
  1560 ;;           _timer0_read_ps (ARG)
  1561 ;;           _buffer_init (ARG)
  1562 ;;           _buffer_puts (ARG)
  1563 ;;             _buffer_putch
  1564 ;;           _format_number (ARG)
  1565 ;;             ___lwmod
  1566 ;;             ___lwdiv
  1567 ;;             _buffer_putch
  1568 ;;           _ser_putch (ARG)
  1569 ;;           _ser_puts (ARG)
  1570 ;;             _ser_putch
  1571 ;;       ___lwtofl (ARG)
  1572 ;;         ___flpack
  1573 ;;         _timer0_read_ps (ARG)
  1574 ;;         _buffer_init (ARG)
  1575 ;;         _buffer_puts (ARG)
  1576 ;;           _buffer_putch
  1577 ;;         _format_number (ARG)
  1578 ;;           ___lwmod
  1579 ;;           ___lwdiv
  1580 ;;           _buffer_putch
  1581 ;;         _ser_putch (ARG)
  1582 ;;         _ser_puts (ARG)
  1583 ;;           _ser_putch
  1584 ;;     ___lwtofl
  1585 ;;       ___flpack
  1586 ;;       _timer0_read_ps (ARG)
  1587 ;;       _buffer_init (ARG)
  1588 ;;       _buffer_puts (ARG)
  1589 ;;         _buffer_putch
  1590 ;;       _format_number (ARG)
  1591 ;;         ___lwmod
  1592 ;;         ___lwdiv
  1593 ;;         _buffer_putch
  1594 ;;       _ser_putch (ARG)
  1595 ;;       _ser_puts (ARG)
  1596 ;;         _ser_putch
  1597 ;;     _delay10ms
  1598 ;;     _ser_puts
  1599 ;;       _ser_putch
  1600 ;;   _ser_puts
  1601 ;;     _ser_putch
  1602 ;;   _measure_capacitance
  1603 ;;     _measure_freq
  1604 ;;       _timer0_read_ps
  1605 ;;       _buffer_init
  1606 ;;       _buffer_puts
  1607 ;;         _buffer_putch
  1608 ;;       _format_number
  1609 ;;         ___lwmod
  1610 ;;         ___lwdiv
  1611 ;;         _buffer_putch
  1612 ;;       _print_buffer
  1613 ;;         _ser_putch
  1614 ;;         _ser_puts
  1615 ;;           _ser_putch
  1616 ;;         ___lwtofl (ARG)
  1617 ;;           ___flpack
  1618 ;;           _timer0_read_ps (ARG)
  1619 ;;           _buffer_init (ARG)
  1620 ;;           _buffer_puts (ARG)
  1621 ;;             _buffer_putch
  1622 ;;           _format_number (ARG)
  1623 ;;             ___lwmod
  1624 ;;             ___lwdiv
  1625 ;;             _buffer_putch
  1626 ;;           _ser_putch (ARG)
  1627 ;;           _ser_puts (ARG)
  1628 ;;             _ser_putch
  1629 ;;       ___lwtofl (ARG)
  1630 ;;         ___flpack
  1631 ;;         _timer0_read_ps (ARG)
  1632 ;;         _buffer_init (ARG)
  1633 ;;         _buffer_puts (ARG)
  1634 ;;           _buffer_putch
  1635 ;;         _format_number (ARG)
  1636 ;;           ___lwmod
  1637 ;;           ___lwdiv
  1638 ;;           _buffer_putch
  1639 ;;         _ser_putch (ARG)
  1640 ;;         _ser_puts (ARG)
  1641 ;;           _ser_putch
  1642 ;;     ___lwtofl
  1643 ;;       ___flpack
  1644 ;;       _timer0_read_ps (ARG)
  1645 ;;       _buffer_init (ARG)
  1646 ;;       _buffer_puts (ARG)
  1647 ;;         _buffer_putch
  1648 ;;       _format_number (ARG)
  1649 ;;         ___lwmod
  1650 ;;         ___lwdiv
  1651 ;;         _buffer_putch
  1652 ;;       _ser_putch (ARG)
  1653 ;;       _ser_puts (ARG)
  1654 ;;         _ser_putch
  1655 ;;     _ser_puts
  1656 ;;       _ser_putch
  1657 ;;     _format_xint32
  1658 ;;       _buffer_putch
  1659 ;;       _format_number
  1660 ;;         ___lwmod
  1661 ;;         ___lwdiv
  1662 ;;         _buffer_putch
  1663 ;;     _format_double
  1664 ;;       _log10
  1665 ;;         _log
  1666 ;;           ___flge
  1667 ;;           _frexp
  1668 ;;           ___flmul
  1669 ;;             ___flpack
  1670 ;;             ___fltol (ARG)
  1671 ;;               ___flge (ARG)
  1672 ;;               _frexp (ARG)
  1673 ;;               ___flpack (ARG)
  1674 ;;             ___awtofl (ARG)
  1675 ;;               ___flpack
  1676 ;;               ___fltol (ARG)
  1677 ;;                 ___flge (ARG)
  1678 ;;                 _frexp (ARG)
  1679 ;;                 ___flpack (ARG)
  1680 ;;             ___fldiv (ARG)
  1681 ;;               ___flpack
  1682 ;;               ___fltol (ARG)
  1683 ;;                 ___flge (ARG)
  1684 ;;                 _frexp (ARG)
  1685 ;;                 ___flpack (ARG)
  1686 ;;             _frexp (ARG)
  1687 ;;           ___fladd
  1688 ;;             ___flpack
  1689 ;;             ___fltol (ARG)
  1690 ;;               ___flge (ARG)
  1691 ;;               _frexp (ARG)
  1692 ;;               ___flpack (ARG)
  1693 ;;             ___flmul (ARG)
  1694 ;;               ___flpack
  1695 ;;               ___fltol (ARG)
  1696 ;;                 ___flge (ARG)
  1697 ;;                 _frexp (ARG)
  1698 ;;                 ___flpack (ARG)
  1699 ;;               ___awtofl (ARG)
  1700 ;;                 ___flpack
  1701 ;;                 ___fltol (ARG)
  1702 ;;                   ___flge (ARG)
  1703 ;;                   _frexp (ARG)
  1704 ;;                   ___flpack (ARG)
  1705 ;;               ___fldiv (ARG)
  1706 ;;                 ___flpack
  1707 ;;                 ___fltol (ARG)
  1708 ;;                   ___flge (ARG)
  1709 ;;                   _frexp (ARG)
  1710 ;;                   ___flpack (ARG)
  1711 ;;               _frexp (ARG)
  1712 ;;             _frexp (ARG)
  1713 ;;             ___awtofl (ARG)
  1714 ;;               ___flpack
  1715 ;;               ___fltol (ARG)
  1716 ;;                 ___flge (ARG)
  1717 ;;                 _frexp (ARG)
  1718 ;;                 ___flpack (ARG)
  1719 ;;           _eval_poly
  1720 ;;             ___flmul
  1721 ;;               ___flpack
  1722 ;;               ___fltol (ARG)
  1723 ;;                 ___flge (ARG)
  1724 ;;                 _frexp (ARG)
  1725 ;;                 ___flpack (ARG)
  1726 ;;               ___awtofl (ARG)
  1727 ;;                 ___flpack
  1728 ;;                 ___fltol (ARG)
  1729 ;;                   ___flge (ARG)
  1730 ;;                   _frexp (ARG)
  1731 ;;                   ___flpack (ARG)
  1732 ;;               ___fldiv (ARG)
  1733 ;;                 ___flpack
  1734 ;;                 ___fltol (ARG)
  1735 ;;                   ___flge (ARG)
  1736 ;;                   _frexp (ARG)
  1737 ;;                   ___flpack (ARG)
  1738 ;;               _frexp (ARG)
  1739 ;;             ___fladd
  1740 ;;               ___flpack
  1741 ;;               ___fltol (ARG)
  1742 ;;                 ___flge (ARG)
  1743 ;;                 _frexp (ARG)
  1744 ;;                 ___flpack (ARG)
  1745 ;;               ___flmul (ARG)
  1746 ;;                 ___flpack
  1747 ;;                 ___fltol (ARG)
  1748 ;;                   ___flge (ARG)
  1749 ;;                   _frexp (ARG)
  1750 ;;                   ___flpack (ARG)
  1751 ;;                 ___awtofl (ARG)
  1752 ;;                   ___flpack
  1753 ;;                   ___fltol (ARG)
  1754 ;;                     ___flge (ARG)
  1755 ;;                     _frexp (ARG)
  1756 ;;                     ___flpack (ARG)
  1757 ;;                 ___fldiv (ARG)
  1758 ;;                   ___flpack
  1759 ;;                   ___fltol (ARG)
  1760 ;;                     ___flge (ARG)
  1761 ;;                     _frexp (ARG)
  1762 ;;                     ___flpack (ARG)
  1763 ;;                 _frexp (ARG)
  1764 ;;               _frexp (ARG)
  1765 ;;               ___awtofl (ARG)
  1766 ;;                 ___flpack
  1767 ;;                 ___fltol (ARG)
  1768 ;;                   ___flge (ARG)
  1769 ;;                   _frexp (ARG)
  1770 ;;                   ___flpack (ARG)
  1771 ;;             ___fltol (ARG)
  1772 ;;               ___flge (ARG)
  1773 ;;               _frexp (ARG)
  1774 ;;               ___flpack (ARG)
  1775 ;;             _ldexp (ARG)
  1776 ;;               ___flge
  1777 ;;               ___flneg
  1778 ;;               ___flmul (ARG)
  1779 ;;                 ___flpack
  1780 ;;                 ___fltol (ARG)
  1781 ;;                   ___flge (ARG)
  1782 ;;                   _frexp (ARG)
  1783 ;;                   ___flpack (ARG)
  1784 ;;                 ___awtofl (ARG)
  1785 ;;                   ___flpack
  1786 ;;                   ___fltol (ARG)
  1787 ;;                     ___flge (ARG)
  1788 ;;                     _frexp (ARG)
  1789 ;;                     ___flpack (ARG)
  1790 ;;                 ___fldiv (ARG)
  1791 ;;                   ___flpack
  1792 ;;                   ___fltol (ARG)
  1793 ;;                     ___flge (ARG)
  1794 ;;                     _frexp (ARG)
  1795 ;;                     ___flpack (ARG)
  1796 ;;                 _frexp (ARG)
  1797 ;;               ___fladd (ARG)
  1798 ;;                 ___flpack
  1799 ;;                 ___fltol (ARG)
  1800 ;;                   ___flge (ARG)
  1801 ;;                   _frexp (ARG)
  1802 ;;                   ___flpack (ARG)
  1803 ;;                 ___flmul (ARG)
  1804 ;;                   ___flpack
  1805 ;;                   ___fltol (ARG)
  1806 ;;                     ___flge (ARG)
  1807 ;;                     _frexp (ARG)
  1808 ;;                     ___flpack (ARG)
  1809 ;;                   ___awtofl (ARG)
  1810 ;;                     ___flpack
  1811 ;;                     ___fltol (ARG)
  1812 ;;                       ___flge (ARG)
  1813 ;;                       _frexp (ARG)
  1814 ;;                       ___flpack (ARG)
  1815 ;;                   ___fldiv (ARG)
  1816 ;;                     ___flpack
  1817 ;;                     ___fltol (ARG)
  1818 ;;                       ___flge (ARG)
  1819 ;;                       _frexp (ARG)
  1820 ;;                       ___flpack (ARG)
  1821 ;;                   _frexp (ARG)
  1822 ;;                 _frexp (ARG)
  1823 ;;                 ___awtofl (ARG)
  1824 ;;                   ___flpack
  1825 ;;                   ___fltol (ARG)
  1826 ;;                     ___flge (ARG)
  1827 ;;                     _frexp (ARG)
  1828 ;;                     ___flpack (ARG)
  1829 ;;           ___awtofl
  1830 ;;             ___flpack
  1831 ;;             ___fltol (ARG)
  1832 ;;               ___flge (ARG)
  1833 ;;               _frexp (ARG)
  1834 ;;               ___flpack (ARG)
  1835 ;;           ___fltol (ARG)
  1836 ;;             ___flge (ARG)
  1837 ;;             _frexp (ARG)
  1838 ;;             ___flpack (ARG)
  1839 ;;         ___flmul
  1840 ;;           ___flpack
  1841 ;;           ___fltol (ARG)
  1842 ;;             ___flge (ARG)
  1843 ;;             _frexp (ARG)
  1844 ;;             ___flpack (ARG)
  1845 ;;           ___awtofl (ARG)
  1846 ;;             ___flpack
  1847 ;;             ___fltol (ARG)
  1848 ;;               ___flge (ARG)
  1849 ;;               _frexp (ARG)
  1850 ;;               ___flpack (ARG)
  1851 ;;           ___fldiv (ARG)
  1852 ;;             ___flpack
  1853 ;;             ___fltol (ARG)
  1854 ;;               ___flge (ARG)
  1855 ;;               _frexp (ARG)
  1856 ;;               ___flpack (ARG)
  1857 ;;           _frexp (ARG)
  1858 ;;         ___fltol (ARG)
  1859 ;;           ___flge (ARG)
  1860 ;;           _frexp (ARG)
  1861 ;;           ___flpack (ARG)
  1862 ;;       ___fltol
  1863 ;;         ___flge (ARG)
  1864 ;;         _frexp (ARG)
  1865 ;;         ___flpack (ARG)
  1866 ;;       ___awtofl
  1867 ;;         ___flpack
  1868 ;;         ___fltol (ARG)
  1869 ;;           ___flge (ARG)
  1870 ;;           _frexp (ARG)
  1871 ;;           ___flpack (ARG)
  1872 ;;       _pow
  1873 ;;         ___flge
  1874 ;;         ___fltol
  1875 ;;           ___flge (ARG)
  1876 ;;           _frexp (ARG)
  1877 ;;           ___flpack (ARG)
  1878 ;;         ___lltofl
  1879 ;;           ___flpack
  1880 ;;         ___flneg
  1881 ;;         _log
  1882 ;;           ___flge
  1883 ;;           _frexp
  1884 ;;           ___flmul
  1885 ;;             ___flpack
  1886 ;;             ___fltol (ARG)
  1887 ;;               ___flge (ARG)
  1888 ;;               _frexp (ARG)
  1889 ;;               ___flpack (ARG)
  1890 ;;             ___awtofl (ARG)
  1891 ;;               ___flpack
  1892 ;;               ___fltol (ARG)
  1893 ;;                 ___flge (ARG)
  1894 ;;                 _frexp (ARG)
  1895 ;;                 ___flpack (ARG)
  1896 ;;             ___fldiv (ARG)
  1897 ;;               ___flpack
  1898 ;;               ___fltol (ARG)
  1899 ;;                 ___flge (ARG)
  1900 ;;                 _frexp (ARG)
  1901 ;;                 ___flpack (ARG)
  1902 ;;             _frexp (ARG)
  1903 ;;           ___fladd
  1904 ;;             ___flpack
  1905 ;;             ___fltol (ARG)
  1906 ;;               ___flge (ARG)
  1907 ;;               _frexp (ARG)
  1908 ;;               ___flpack (ARG)
  1909 ;;             ___flmul (ARG)
  1910 ;;               ___flpack
  1911 ;;               ___fltol (ARG)
  1912 ;;                 ___flge (ARG)
  1913 ;;                 _frexp (ARG)
  1914 ;;                 ___flpack (ARG)
  1915 ;;               ___awtofl (ARG)
  1916 ;;                 ___flpack
  1917 ;;                 ___fltol (ARG)
  1918 ;;                   ___flge (ARG)
  1919 ;;                   _frexp (ARG)
  1920 ;;                   ___flpack (ARG)
  1921 ;;               ___fldiv (ARG)
  1922 ;;                 ___flpack
  1923 ;;                 ___fltol (ARG)
  1924 ;;                   ___flge (ARG)
  1925 ;;                   _frexp (ARG)
  1926 ;;                   ___flpack (ARG)
  1927 ;;               _frexp (ARG)
  1928 ;;             _frexp (ARG)
  1929 ;;             ___awtofl (ARG)
  1930 ;;               ___flpack
  1931 ;;               ___fltol (ARG)
  1932 ;;                 ___flge (ARG)
  1933 ;;                 _frexp (ARG)
  1934 ;;                 ___flpack (ARG)
  1935 ;;           _eval_poly
  1936 ;;             ___flmul
  1937 ;;               ___flpack
  1938 ;;               ___fltol (ARG)
  1939 ;;                 ___flge (ARG)
  1940 ;;                 _frexp (ARG)
  1941 ;;                 ___flpack (ARG)
  1942 ;;               ___awtofl (ARG)
  1943 ;;                 ___flpack
  1944 ;;                 ___fltol (ARG)
  1945 ;;                   ___flge (ARG)
  1946 ;;                   _frexp (ARG)
  1947 ;;                   ___flpack (ARG)
  1948 ;;               ___fldiv (ARG)
  1949 ;;                 ___flpack
  1950 ;;                 ___fltol (ARG)
  1951 ;;                   ___flge (ARG)
  1952 ;;                   _frexp (ARG)
  1953 ;;                   ___flpack (ARG)
  1954 ;;               _frexp (ARG)
  1955 ;;             ___fladd
  1956 ;;               ___flpack
  1957 ;;               ___fltol (ARG)
  1958 ;;                 ___flge (ARG)
  1959 ;;                 _frexp (ARG)
  1960 ;;                 ___flpack (ARG)
  1961 ;;               ___flmul (ARG)
  1962 ;;                 ___flpack
  1963 ;;                 ___fltol (ARG)
  1964 ;;                   ___flge (ARG)
  1965 ;;                   _frexp (ARG)
  1966 ;;                   ___flpack (ARG)
  1967 ;;                 ___awtofl (ARG)
  1968 ;;                   ___flpack
  1969 ;;                   ___fltol (ARG)
  1970 ;;                     ___flge (ARG)
  1971 ;;                     _frexp (ARG)
  1972 ;;                     ___flpack (ARG)
  1973 ;;                 ___fldiv (ARG)
  1974 ;;                   ___flpack
  1975 ;;                   ___fltol (ARG)
  1976 ;;                     ___flge (ARG)
  1977 ;;                     _frexp (ARG)
  1978 ;;                     ___flpack (ARG)
  1979 ;;                 _frexp (ARG)
  1980 ;;               _frexp (ARG)
  1981 ;;               ___awtofl (ARG)
  1982 ;;                 ___flpack
  1983 ;;                 ___fltol (ARG)
  1984 ;;                   ___flge (ARG)
  1985 ;;                   _frexp (ARG)
  1986 ;;                   ___flpack (ARG)
  1987 ;;             ___fltol (ARG)
  1988 ;;               ___flge (ARG)
  1989 ;;               _frexp (ARG)
  1990 ;;               ___flpack (ARG)
  1991 ;;             _ldexp (ARG)
  1992 ;;               ___flge
  1993 ;;               ___flneg
  1994 ;;               ___flmul (ARG)
  1995 ;;                 ___flpack
  1996 ;;                 ___fltol (ARG)
  1997 ;;                   ___flge (ARG)
  1998 ;;                   _frexp (ARG)
  1999 ;;                   ___flpack (ARG)
  2000 ;;                 ___awtofl (ARG)
  2001 ;;                   ___flpack
  2002 ;;                   ___fltol (ARG)
  2003 ;;                     ___flge (ARG)
  2004 ;;                     _frexp (ARG)
  2005 ;;                     ___flpack (ARG)
  2006 ;;                 ___fldiv (ARG)
  2007 ;;                   ___flpack
  2008 ;;                   ___fltol (ARG)
  2009 ;;                     ___flge (ARG)
  2010 ;;                     _frexp (ARG)
  2011 ;;                     ___flpack (ARG)
  2012 ;;                 _frexp (ARG)
  2013 ;;               ___fladd (ARG)
  2014 ;;                 ___flpack
  2015 ;;                 ___fltol (ARG)
  2016 ;;                   ___flge (ARG)
  2017 ;;                   _frexp (ARG)
  2018 ;;                   ___flpack (ARG)
  2019 ;;                 ___flmul (ARG)
  2020 ;;                   ___flpack
  2021 ;;                   ___fltol (ARG)
  2022 ;;                     ___flge (ARG)
  2023 ;;                     _frexp (ARG)
  2024 ;;                     ___flpack (ARG)
  2025 ;;                   ___awtofl (ARG)
  2026 ;;                     ___flpack
  2027 ;;                     ___fltol (ARG)
  2028 ;;                       ___flge (ARG)
  2029 ;;                       _frexp (ARG)
  2030 ;;                       ___flpack (ARG)
  2031 ;;                   ___fldiv (ARG)
  2032 ;;                     ___flpack
  2033 ;;                     ___fltol (ARG)
  2034 ;;                       ___flge (ARG)
  2035 ;;                       _frexp (ARG)
  2036 ;;                       ___flpack (ARG)
  2037 ;;                   _frexp (ARG)
  2038 ;;                 _frexp (ARG)
  2039 ;;                 ___awtofl (ARG)
  2040 ;;                   ___flpack
  2041 ;;                   ___fltol (ARG)
  2042 ;;                     ___flge (ARG)
  2043 ;;                     _frexp (ARG)
  2044 ;;                     ___flpack (ARG)
  2045 ;;           ___awtofl
  2046 ;;             ___flpack
  2047 ;;             ___fltol (ARG)
  2048 ;;               ___flge (ARG)
  2049 ;;               _frexp (ARG)
  2050 ;;               ___flpack (ARG)
  2051 ;;           ___fltol (ARG)
  2052 ;;             ___flge (ARG)
  2053 ;;             _frexp (ARG)
  2054 ;;             ___flpack (ARG)
  2055 ;;         ___flmul
  2056 ;;           ___flpack
  2057 ;;           ___fltol (ARG)
  2058 ;;             ___flge (ARG)
  2059 ;;             _frexp (ARG)
  2060 ;;             ___flpack (ARG)
  2061 ;;           ___awtofl (ARG)
  2062 ;;             ___flpack
  2063 ;;             ___fltol (ARG)
  2064 ;;               ___flge (ARG)
  2065 ;;               _frexp (ARG)
  2066 ;;               ___flpack (ARG)
  2067 ;;           ___fldiv (ARG)
  2068 ;;             ___flpack
  2069 ;;             ___fltol (ARG)
  2070 ;;               ___flge (ARG)
  2071 ;;               _frexp (ARG)
  2072 ;;               ___flpack (ARG)
  2073 ;;           _frexp (ARG)
  2074 ;;         _exp
  2075 ;;           ___flge
  2076 ;;           ___flneg
  2077 ;;           ___flmul
  2078 ;;             ___flpack
  2079 ;;             ___fltol (ARG)
  2080 ;;               ___flge (ARG)
  2081 ;;               _frexp (ARG)
  2082 ;;               ___flpack (ARG)
  2083 ;;             ___awtofl (ARG)
  2084 ;;               ___flpack
  2085 ;;               ___fltol (ARG)
  2086 ;;                 ___flge (ARG)
  2087 ;;                 _frexp (ARG)
  2088 ;;                 ___flpack (ARG)
  2089 ;;             ___fldiv (ARG)
  2090 ;;               ___flpack
  2091 ;;               ___fltol (ARG)
  2092 ;;                 ___flge (ARG)
  2093 ;;                 _frexp (ARG)
  2094 ;;                 ___flpack (ARG)
  2095 ;;             _frexp (ARG)
  2096 ;;           _floor
  2097 ;;             _frexp
  2098 ;;             ___flge
  2099 ;;             ___fltol
  2100 ;;               ___flge (ARG)
  2101 ;;               _frexp (ARG)
  2102 ;;               ___flpack (ARG)
  2103 ;;             ___altofl
  2104 ;;               ___flpack
  2105 ;;               ___fltol (ARG)
  2106 ;;                 ___flge (ARG)
  2107 ;;                 _frexp (ARG)
  2108 ;;                 ___flpack (ARG)
  2109 ;;             ___fladd
  2110 ;;               ___flpack
  2111 ;;               ___fltol (ARG)
  2112 ;;                 ___flge (ARG)
  2113 ;;                 _frexp (ARG)
  2114 ;;                 ___flpack (ARG)
  2115 ;;               ___flmul (ARG)
  2116 ;;                 ___flpack
  2117 ;;                 ___fltol (ARG)
  2118 ;;                   ___flge (ARG)
  2119 ;;                   _frexp (ARG)
  2120 ;;                   ___flpack (ARG)
  2121 ;;                 ___awtofl (ARG)
  2122 ;;                   ___flpack
  2123 ;;                   ___fltol (ARG)
  2124 ;;                     ___flge (ARG)
  2125 ;;                     _frexp (ARG)
  2126 ;;                     ___flpack (ARG)
  2127 ;;                 ___fldiv (ARG)
  2128 ;;                   ___flpack
  2129 ;;                   ___fltol (ARG)
  2130 ;;                     ___flge (ARG)
  2131 ;;                     _frexp (ARG)
  2132 ;;                     ___flpack (ARG)
  2133 ;;                 _frexp (ARG)
  2134 ;;               _frexp (ARG)
  2135 ;;               ___awtofl (ARG)
  2136 ;;                 ___flpack
  2137 ;;                 ___fltol (ARG)
  2138 ;;                   ___flge (ARG)
  2139 ;;                   _frexp (ARG)
  2140 ;;                   ___flpack (ARG)
  2141 ;;             ___fldiv (ARG)
  2142 ;;               ___flpack
  2143 ;;               ___fltol (ARG)
  2144 ;;                 ___flge (ARG)
  2145 ;;                 _frexp (ARG)
  2146 ;;                 ___flpack (ARG)
  2147 ;;           ___fltol
  2148 ;;             ___flge (ARG)
  2149 ;;             _frexp (ARG)
  2150 ;;             ___flpack (ARG)
  2151 ;;           ___awtofl
  2152 ;;             ___flpack
  2153 ;;             ___fltol (ARG)
  2154 ;;               ___flge (ARG)
  2155 ;;               _frexp (ARG)
  2156 ;;               ___flpack (ARG)
  2157 ;;           ___flsub
  2158 ;;             ___fladd
  2159 ;;               ___flpack
  2160 ;;               ___fltol (ARG)
  2161 ;;                 ___flge (ARG)
  2162 ;;                 _frexp (ARG)
  2163 ;;                 ___flpack (ARG)
  2164 ;;               ___flmul (ARG)
  2165 ;;                 ___flpack
  2166 ;;                 ___fltol (ARG)
  2167 ;;                   ___flge (ARG)
  2168 ;;                   _frexp (ARG)
  2169 ;;                   ___flpack (ARG)
  2170 ;;                 ___awtofl (ARG)
  2171 ;;                   ___flpack
  2172 ;;                   ___fltol (ARG)
  2173 ;;                     ___flge (ARG)
  2174 ;;                     _frexp (ARG)
  2175 ;;                     ___flpack (ARG)
  2176 ;;                 ___fldiv (ARG)
  2177 ;;                   ___flpack
  2178 ;;                   ___fltol (ARG)
  2179 ;;                     ___flge (ARG)
  2180 ;;                     _frexp (ARG)
  2181 ;;                     ___flpack (ARG)
  2182 ;;                 _frexp (ARG)
  2183 ;;               _frexp (ARG)
  2184 ;;               ___awtofl (ARG)
  2185 ;;                 ___flpack
  2186 ;;                 ___fltol (ARG)
  2187 ;;                   ___flge (ARG)
  2188 ;;                   _frexp (ARG)
  2189 ;;                   ___flpack (ARG)
  2190 ;;             ___flmul (ARG)
  2191 ;;               ___flpack
  2192 ;;               ___fltol (ARG)
  2193 ;;                 ___flge (ARG)
  2194 ;;                 _frexp (ARG)
  2195 ;;                 ___flpack (ARG)
  2196 ;;               ___awtofl (ARG)
  2197 ;;                 ___flpack
  2198 ;;                 ___fltol (ARG)
  2199 ;;                   ___flge (ARG)
  2200 ;;                   _frexp (ARG)
  2201 ;;                   ___flpack (ARG)
  2202 ;;               ___fldiv (ARG)
  2203 ;;                 ___flpack
  2204 ;;                 ___fltol (ARG)
  2205 ;;                   ___flge (ARG)
  2206 ;;                   _frexp (ARG)
  2207 ;;                   ___flpack (ARG)
  2208 ;;               _frexp (ARG)
  2209 ;;             ___awtofl (ARG)
  2210 ;;               ___flpack
  2211 ;;               ___fltol (ARG)
  2212 ;;                 ___flge (ARG)
  2213 ;;                 _frexp (ARG)
  2214 ;;                 ___flpack (ARG)
  2215 ;;           _eval_poly
  2216 ;;             ___flmul
  2217 ;;               ___flpack
  2218 ;;               ___fltol (ARG)
  2219 ;;                 ___flge (ARG)
  2220 ;;                 _frexp (ARG)
  2221 ;;                 ___flpack (ARG)
  2222 ;;               ___awtofl (ARG)
  2223 ;;                 ___flpack
  2224 ;;                 ___fltol (ARG)
  2225 ;;                   ___flge (ARG)
  2226 ;;                   _frexp (ARG)
  2227 ;;                   ___flpack (ARG)
  2228 ;;               ___fldiv (ARG)
  2229 ;;                 ___flpack
  2230 ;;                 ___fltol (ARG)
  2231 ;;                   ___flge (ARG)
  2232 ;;                   _frexp (ARG)
  2233 ;;                   ___flpack (ARG)
  2234 ;;               _frexp (ARG)
  2235 ;;             ___fladd
  2236 ;;               ___flpack
  2237 ;;               ___fltol (ARG)
  2238 ;;                 ___flge (ARG)
  2239 ;;                 _frexp (ARG)
  2240 ;;                 ___flpack (ARG)
  2241 ;;               ___flmul (ARG)
  2242 ;;                 ___flpack
  2243 ;;                 ___fltol (ARG)
  2244 ;;                   ___flge (ARG)
  2245 ;;                   _frexp (ARG)
  2246 ;;                   ___flpack (ARG)
  2247 ;;                 ___awtofl (ARG)
  2248 ;;                   ___flpack
  2249 ;;                   ___fltol (ARG)
  2250 ;;                     ___flge (ARG)
  2251 ;;                     _frexp (ARG)
  2252 ;;                     ___flpack (ARG)
  2253 ;;                 ___fldiv (ARG)
  2254 ;;                   ___flpack
  2255 ;;                   ___fltol (ARG)
  2256 ;;                     ___flge (ARG)
  2257 ;;                     _frexp (ARG)
  2258 ;;                     ___flpack (ARG)
  2259 ;;                 _frexp (ARG)
  2260 ;;               _frexp (ARG)
  2261 ;;               ___awtofl (ARG)
  2262 ;;                 ___flpack
  2263 ;;                 ___fltol (ARG)
  2264 ;;                   ___flge (ARG)
  2265 ;;                   _frexp (ARG)
  2266 ;;                   ___flpack (ARG)
  2267 ;;             ___fltol (ARG)
  2268 ;;               ___flge (ARG)
  2269 ;;               _frexp (ARG)
  2270 ;;               ___flpack (ARG)
  2271 ;;             _ldexp (ARG)
  2272 ;;               ___flge
  2273 ;;               ___flneg
  2274 ;;               ___flmul (ARG)
  2275 ;;                 ___flpack
  2276 ;;                 ___fltol (ARG)
  2277 ;;                   ___flge (ARG)
  2278 ;;                   _frexp (ARG)
  2279 ;;                   ___flpack (ARG)
  2280 ;;                 ___awtofl (ARG)
  2281 ;;                   ___flpack
  2282 ;;                   ___fltol (ARG)
  2283 ;;                     ___flge (ARG)
  2284 ;;                     _frexp (ARG)
  2285 ;;                     ___flpack (ARG)
  2286 ;;                 ___fldiv (ARG)
  2287 ;;                   ___flpack
  2288 ;;                   ___fltol (ARG)
  2289 ;;                     ___flge (ARG)
  2290 ;;                     _frexp (ARG)
  2291 ;;                     ___flpack (ARG)
  2292 ;;                 _frexp (ARG)
  2293 ;;               ___fladd (ARG)
  2294 ;;                 ___flpack
  2295 ;;                 ___fltol (ARG)
  2296 ;;                   ___flge (ARG)
  2297 ;;                   _frexp (ARG)
  2298 ;;                   ___flpack (ARG)
  2299 ;;                 ___flmul (ARG)
  2300 ;;                   ___flpack
  2301 ;;                   ___fltol (ARG)
  2302 ;;                     ___flge (ARG)
  2303 ;;                     _frexp (ARG)
  2304 ;;                     ___flpack (ARG)
  2305 ;;                   ___awtofl (ARG)
  2306 ;;                     ___flpack
  2307 ;;                     ___fltol (ARG)
  2308 ;;                       ___flge (ARG)
  2309 ;;                       _frexp (ARG)
  2310 ;;                       ___flpack (ARG)
  2311 ;;                   ___fldiv (ARG)
  2312 ;;                     ___flpack
  2313 ;;                     ___fltol (ARG)
  2314 ;;                       ___flge (ARG)
  2315 ;;                       _frexp (ARG)
  2316 ;;                       ___flpack (ARG)
  2317 ;;                   _frexp (ARG)
  2318 ;;                 _frexp (ARG)
  2319 ;;                 ___awtofl (ARG)
  2320 ;;                   ___flpack
  2321 ;;                   ___fltol (ARG)
  2322 ;;                     ___flge (ARG)
  2323 ;;                     _frexp (ARG)
  2324 ;;                     ___flpack (ARG)
  2325 ;;           _ldexp
  2326 ;;             ___flge
  2327 ;;             ___flneg
  2328 ;;             ___flmul (ARG)
  2329 ;;               ___flpack
  2330 ;;               ___fltol (ARG)
  2331 ;;                 ___flge (ARG)
  2332 ;;                 _frexp (ARG)
  2333 ;;                 ___flpack (ARG)
  2334 ;;               ___awtofl (ARG)
  2335 ;;                 ___flpack
  2336 ;;                 ___fltol (ARG)
  2337 ;;                   ___flge (ARG)
  2338 ;;                   _frexp (ARG)
  2339 ;;                   ___flpack (ARG)
  2340 ;;               ___fldiv (ARG)
  2341 ;;                 ___flpack
  2342 ;;                 ___fltol (ARG)
  2343 ;;                   ___flge (ARG)
  2344 ;;                   _frexp (ARG)
  2345 ;;                   ___flpack (ARG)
  2346 ;;               _frexp (ARG)
  2347 ;;             ___fladd (ARG)
  2348 ;;               ___flpack
  2349 ;;               ___fltol (ARG)
  2350 ;;                 ___flge (ARG)
  2351 ;;                 _frexp (ARG)
  2352 ;;                 ___flpack (ARG)
  2353 ;;               ___flmul (ARG)
  2354 ;;                 ___flpack
  2355 ;;                 ___fltol (ARG)
  2356 ;;                   ___flge (ARG)
  2357 ;;                   _frexp (ARG)
  2358 ;;                   ___flpack (ARG)
  2359 ;;                 ___awtofl (ARG)
  2360 ;;                   ___flpack
  2361 ;;                   ___fltol (ARG)
  2362 ;;                     ___flge (ARG)
  2363 ;;                     _frexp (ARG)
  2364 ;;                     ___flpack (ARG)
  2365 ;;                 ___fldiv (ARG)
  2366 ;;                   ___flpack
  2367 ;;                   ___fltol (ARG)
  2368 ;;                     ___flge (ARG)
  2369 ;;                     _frexp (ARG)
  2370 ;;                     ___flpack (ARG)
  2371 ;;                 _frexp (ARG)
  2372 ;;               _frexp (ARG)
  2373 ;;               ___awtofl (ARG)
  2374 ;;                 ___flpack
  2375 ;;                 ___fltol (ARG)
  2376 ;;                   ___flge (ARG)
  2377 ;;                   _frexp (ARG)
  2378 ;;                   ___flpack (ARG)
  2379 ;;           ___fldiv
  2380 ;;             ___flpack
  2381 ;;             ___fltol (ARG)
  2382 ;;               ___flge (ARG)
  2383 ;;               _frexp (ARG)
  2384 ;;               ___flpack (ARG)
  2385 ;;           _log (ARG)
  2386 ;;             ___flge
  2387 ;;             _frexp
  2388 ;;             ___flmul
  2389 ;;               ___flpack
  2390 ;;               ___fltol (ARG)
  2391 ;;                 ___flge (ARG)
  2392 ;;                 _frexp (ARG)
  2393 ;;                 ___flpack (ARG)
  2394 ;;               ___awtofl (ARG)
  2395 ;;                 ___flpack
  2396 ;;                 ___fltol (ARG)
  2397 ;;                   ___flge (ARG)
  2398 ;;                   _frexp (ARG)
  2399 ;;                   ___flpack (ARG)
  2400 ;;               ___fldiv (ARG)
  2401 ;;                 ___flpack
  2402 ;;                 ___fltol (ARG)
  2403 ;;                   ___flge (ARG)
  2404 ;;                   _frexp (ARG)
  2405 ;;                   ___flpack (ARG)
  2406 ;;               _frexp (ARG)
  2407 ;;             ___fladd
  2408 ;;               ___flpack
  2409 ;;               ___fltol (ARG)
  2410 ;;                 ___flge (ARG)
  2411 ;;                 _frexp (ARG)
  2412 ;;                 ___flpack (ARG)
  2413 ;;               ___flmul (ARG)
  2414 ;;                 ___flpack
  2415 ;;                 ___fltol (ARG)
  2416 ;;                   ___flge (ARG)
  2417 ;;                   _frexp (ARG)
  2418 ;;                   ___flpack (ARG)
  2419 ;;                 ___awtofl (ARG)
  2420 ;;                   ___flpack
  2421 ;;                   ___fltol (ARG)
  2422 ;;                     ___flge (ARG)
  2423 ;;                     _frexp (ARG)
  2424 ;;                     ___flpack (ARG)
  2425 ;;                 ___fldiv (ARG)
  2426 ;;                   ___flpack
  2427 ;;                   ___fltol (ARG)
  2428 ;;                     ___flge (ARG)
  2429 ;;                     _frexp (ARG)
  2430 ;;                     ___flpack (ARG)
  2431 ;;                 _frexp (ARG)
  2432 ;;               _frexp (ARG)
  2433 ;;               ___awtofl (ARG)
  2434 ;;                 ___flpack
  2435 ;;                 ___fltol (ARG)
  2436 ;;                   ___flge (ARG)
  2437 ;;                   _frexp (ARG)
  2438 ;;                   ___flpack (ARG)
  2439 ;;             _eval_poly
  2440 ;;               ___flmul
  2441 ;;                 ___flpack
  2442 ;;                 ___fltol (ARG)
  2443 ;;                   ___flge (ARG)
  2444 ;;                   _frexp (ARG)
  2445 ;;                   ___flpack (ARG)
  2446 ;;                 ___awtofl (ARG)
  2447 ;;                   ___flpack
  2448 ;;                   ___fltol (ARG)
  2449 ;;                     ___flge (ARG)
  2450 ;;                     _frexp (ARG)
  2451 ;;                     ___flpack (ARG)
  2452 ;;                 ___fldiv (ARG)
  2453 ;;                   ___flpack
  2454 ;;                   ___fltol (ARG)
  2455 ;;                     ___flge (ARG)
  2456 ;;                     _frexp (ARG)
  2457 ;;                     ___flpack (ARG)
  2458 ;;                 _frexp (ARG)
  2459 ;;               ___fladd
  2460 ;;                 ___flpack
  2461 ;;                 ___fltol (ARG)
  2462 ;;                   ___flge (ARG)
  2463 ;;                   _frexp (ARG)
  2464 ;;                   ___flpack (ARG)
  2465 ;;                 ___flmul (ARG)
  2466 ;;                   ___flpack
  2467 ;;                   ___fltol (ARG)
  2468 ;;                     ___flge (ARG)
  2469 ;;                     _frexp (ARG)
  2470 ;;                     ___flpack (ARG)
  2471 ;;                   ___awtofl (ARG)
  2472 ;;                     ___flpack
  2473 ;;                     ___fltol (ARG)
  2474 ;;                       ___flge (ARG)
  2475 ;;                       _frexp (ARG)
  2476 ;;                       ___flpack (ARG)
  2477 ;;                   ___fldiv (ARG)
  2478 ;;                     ___flpack
  2479 ;;                     ___fltol (ARG)
  2480 ;;                       ___flge (ARG)
  2481 ;;                       _frexp (ARG)
  2482 ;;                       ___flpack (ARG)
  2483 ;;                   _frexp (ARG)
  2484 ;;                 _frexp (ARG)
  2485 ;;                 ___awtofl (ARG)
  2486 ;;                   ___flpack
  2487 ;;                   ___fltol (ARG)
  2488 ;;                     ___flge (ARG)
  2489 ;;                     _frexp (ARG)
  2490 ;;                     ___flpack (ARG)
  2491 ;;               ___fltol (ARG)
  2492 ;;                 ___flge (ARG)
  2493 ;;                 _frexp (ARG)
  2494 ;;                 ___flpack (ARG)
  2495 ;;               _ldexp (ARG)
  2496 ;;                 ___flge
  2497 ;;                 ___flneg
  2498 ;;                 ___flmul (ARG)
  2499 ;;                   ___flpack
  2500 ;;                   ___fltol (ARG)
  2501 ;;                     ___flge (ARG)
  2502 ;;                     _frexp (ARG)
  2503 ;;                     ___flpack (ARG)
  2504 ;;                   ___awtofl (ARG)
  2505 ;;                     ___flpack
  2506 ;;                     ___fltol (ARG)
  2507 ;;                       ___flge (ARG)
  2508 ;;                       _frexp (ARG)
  2509 ;;                       ___flpack (ARG)
  2510 ;;                   ___fldiv (ARG)
  2511 ;;                     ___flpack
  2512 ;;                     ___fltol (ARG)
  2513 ;;                       ___flge (ARG)
  2514 ;;                       _frexp (ARG)
  2515 ;;                       ___flpack (ARG)
  2516 ;;                   _frexp (ARG)
  2517 ;;                 ___fladd (ARG)
  2518 ;;                   ___flpack
  2519 ;;                   ___fltol (ARG)
  2520 ;;                     ___flge (ARG)
  2521 ;;                     _frexp (ARG)
  2522 ;;                     ___flpack (ARG)
  2523 ;;                   ___flmul (ARG)
  2524 ;;                     ___flpack
  2525 ;;                     ___fltol (ARG)
  2526 ;;                       ___flge (ARG)
  2527 ;;                       _frexp (ARG)
  2528 ;;                       ___flpack (ARG)
  2529 ;;                     ___awtofl (ARG)
  2530 ;;                       ___flpack
  2531 ;;                       ___fltol (ARG)
  2532 ;;                         ___flge (ARG)
  2533 ;;                         _frexp (ARG)
  2534 ;;                         ___flpack (ARG)
  2535 ;;                     ___fldiv (ARG)
  2536 ;;                       ___flpack
  2537 ;;                       ___fltol (ARG)
  2538 ;;                         ___flge (ARG)
  2539 ;;                         _frexp (ARG)
  2540 ;;                         ___flpack (ARG)
  2541 ;;                     _frexp (ARG)
  2542 ;;                   _frexp (ARG)
  2543 ;;                   ___awtofl (ARG)
  2544 ;;                     ___flpack
  2545 ;;                     ___fltol (ARG)
  2546 ;;                       ___flge (ARG)
  2547 ;;                       _frexp (ARG)
  2548 ;;                       ___flpack (ARG)
  2549 ;;             ___awtofl
  2550 ;;               ___flpack
  2551 ;;               ___fltol (ARG)
  2552 ;;                 ___flge (ARG)
  2553 ;;                 _frexp (ARG)
  2554 ;;                 ___flpack (ARG)
  2555 ;;             ___fltol (ARG)
  2556 ;;               ___flge (ARG)
  2557 ;;               _frexp (ARG)
  2558 ;;               ___flpack (ARG)
  2559 ;;       ___fldiv
  2560 ;;         ___flpack
  2561 ;;         ___fltol (ARG)
  2562 ;;           ___flge (ARG)
  2563 ;;           _frexp (ARG)
  2564 ;;           ___flpack (ARG)
  2565 ;;       _floor
  2566 ;;         _frexp
  2567 ;;         ___flge
  2568 ;;         ___fltol
  2569 ;;           ___flge (ARG)
  2570 ;;           _frexp (ARG)
  2571 ;;           ___flpack (ARG)
  2572 ;;         ___altofl
  2573 ;;           ___flpack
  2574 ;;           ___fltol (ARG)
  2575 ;;             ___flge (ARG)
  2576 ;;             _frexp (ARG)
  2577 ;;             ___flpack (ARG)
  2578 ;;         ___fladd
  2579 ;;           ___flpack
  2580 ;;           ___fltol (ARG)
  2581 ;;             ___flge (ARG)
  2582 ;;             _frexp (ARG)
  2583 ;;             ___flpack (ARG)
  2584 ;;           ___flmul (ARG)
  2585 ;;             ___flpack
  2586 ;;             ___fltol (ARG)
  2587 ;;               ___flge (ARG)
  2588 ;;               _frexp (ARG)
  2589 ;;               ___flpack (ARG)
  2590 ;;             ___awtofl (ARG)
  2591 ;;               ___flpack
  2592 ;;               ___fltol (ARG)
  2593 ;;                 ___flge (ARG)
  2594 ;;                 _frexp (ARG)
  2595 ;;                 ___flpack (ARG)
  2596 ;;             ___fldiv (ARG)
  2597 ;;               ___flpack
  2598 ;;               ___fltol (ARG)
  2599 ;;                 ___flge (ARG)
  2600 ;;                 _frexp (ARG)
  2601 ;;                 ___flpack (ARG)
  2602 ;;             _frexp (ARG)
  2603 ;;           _frexp (ARG)
  2604 ;;           ___awtofl (ARG)
  2605 ;;             ___flpack
  2606 ;;             ___fltol (ARG)
  2607 ;;               ___flge (ARG)
  2608 ;;               _frexp (ARG)
  2609 ;;               ___flpack (ARG)
  2610 ;;         ___fldiv (ARG)
  2611 ;;           ___flpack
  2612 ;;           ___fltol (ARG)
  2613 ;;             ___flge (ARG)
  2614 ;;             _frexp (ARG)
  2615 ;;             ___flpack (ARG)
  2616 ;;       ___flmul
  2617 ;;         ___flpack
  2618 ;;         ___fltol (ARG)
  2619 ;;           ___flge (ARG)
  2620 ;;           _frexp (ARG)
  2621 ;;           ___flpack (ARG)
  2622 ;;         ___awtofl (ARG)
  2623 ;;           ___flpack
  2624 ;;           ___fltol (ARG)
  2625 ;;             ___flge (ARG)
  2626 ;;             _frexp (ARG)
  2627 ;;             ___flpack (ARG)
  2628 ;;         ___fldiv (ARG)
  2629 ;;           ___flpack
  2630 ;;           ___fltol (ARG)
  2631 ;;             ___flge (ARG)
  2632 ;;             _frexp (ARG)
  2633 ;;             ___flpack (ARG)
  2634 ;;         _frexp (ARG)
  2635 ;;       ___flsub
  2636 ;;         ___fladd
  2637 ;;           ___flpack
  2638 ;;           ___fltol (ARG)
  2639 ;;             ___flge (ARG)
  2640 ;;             _frexp (ARG)
  2641 ;;             ___flpack (ARG)
  2642 ;;           ___flmul (ARG)
  2643 ;;             ___flpack
  2644 ;;             ___fltol (ARG)
  2645 ;;               ___flge (ARG)
  2646 ;;               _frexp (ARG)
  2647 ;;               ___flpack (ARG)
  2648 ;;             ___awtofl (ARG)
  2649 ;;               ___flpack
  2650 ;;               ___fltol (ARG)
  2651 ;;                 ___flge (ARG)
  2652 ;;                 _frexp (ARG)
  2653 ;;                 ___flpack (ARG)
  2654 ;;             ___fldiv (ARG)
  2655 ;;               ___flpack
  2656 ;;               ___fltol (ARG)
  2657 ;;                 ___flge (ARG)
  2658 ;;                 _frexp (ARG)
  2659 ;;                 ___flpack (ARG)
  2660 ;;             _frexp (ARG)
  2661 ;;           _frexp (ARG)
  2662 ;;           ___awtofl (ARG)
  2663 ;;             ___flpack
  2664 ;;             ___fltol (ARG)
  2665 ;;               ___flge (ARG)
  2666 ;;               _frexp (ARG)
  2667 ;;               ___flpack (ARG)
  2668 ;;         ___flmul (ARG)
  2669 ;;           ___flpack
  2670 ;;           ___fltol (ARG)
  2671 ;;             ___flge (ARG)
  2672 ;;             _frexp (ARG)
  2673 ;;             ___flpack (ARG)
  2674 ;;           ___awtofl (ARG)
  2675 ;;             ___flpack
  2676 ;;             ___fltol (ARG)
  2677 ;;               ___flge (ARG)
  2678 ;;               _frexp (ARG)
  2679 ;;               ___flpack (ARG)
  2680 ;;           ___fldiv (ARG)
  2681 ;;             ___flpack
  2682 ;;             ___fltol (ARG)
  2683 ;;               ___flge (ARG)
  2684 ;;               _frexp (ARG)
  2685 ;;               ___flpack (ARG)
  2686 ;;           _frexp (ARG)
  2687 ;;         ___awtofl (ARG)
  2688 ;;           ___flpack
  2689 ;;           ___fltol (ARG)
  2690 ;;             ___flge (ARG)
  2691 ;;             _frexp (ARG)
  2692 ;;             ___flpack (ARG)
  2693 ;;       _buffer_putch
  2694 ;;       ___flge
  2695 ;;     _ser_putch
  2696 ;;     ___flge
  2697 ;;     ___flmul
  2698 ;;       ___flpack
  2699 ;;       ___fltol (ARG)
  2700 ;;         ___flge (ARG)
  2701 ;;         _frexp (ARG)
  2702 ;;         ___flpack (ARG)
  2703 ;;       ___awtofl (ARG)
  2704 ;;         ___flpack
  2705 ;;         ___fltol (ARG)
  2706 ;;           ___flge (ARG)
  2707 ;;           _frexp (ARG)
  2708 ;;           ___flpack (ARG)
  2709 ;;       ___fldiv (ARG)
  2710 ;;         ___flpack
  2711 ;;         ___fltol (ARG)
  2712 ;;           ___flge (ARG)
  2713 ;;           _frexp (ARG)
  2714 ;;           ___flpack (ARG)
  2715 ;;       _frexp (ARG)
  2716 ;;     ___flsub
  2717 ;;       ___fladd
  2718 ;;         ___flpack
  2719 ;;         ___fltol (ARG)
  2720 ;;           ___flge (ARG)
  2721 ;;           _frexp (ARG)
  2722 ;;           ___flpack (ARG)
  2723 ;;         ___flmul (ARG)
  2724 ;;           ___flpack
  2725 ;;           ___fltol (ARG)
  2726 ;;             ___flge (ARG)
  2727 ;;             _frexp (ARG)
  2728 ;;             ___flpack (ARG)
  2729 ;;           ___awtofl (ARG)
  2730 ;;             ___flpack
  2731 ;;             ___fltol (ARG)
  2732 ;;               ___flge (ARG)
  2733 ;;               _frexp (ARG)
  2734 ;;               ___flpack (ARG)
  2735 ;;           ___fldiv (ARG)
  2736 ;;             ___flpack
  2737 ;;             ___fltol (ARG)
  2738 ;;               ___flge (ARG)
  2739 ;;               _frexp (ARG)
  2740 ;;               ___flpack (ARG)
  2741 ;;           _frexp (ARG)
  2742 ;;         _frexp (ARG)
  2743 ;;         ___awtofl (ARG)
  2744 ;;           ___flpack
  2745 ;;           ___fltol (ARG)
  2746 ;;             ___flge (ARG)
  2747 ;;             _frexp (ARG)
  2748 ;;             ___flpack (ARG)
  2749 ;;       ___flmul (ARG)
  2750 ;;         ___flpack
  2751 ;;         ___fltol (ARG)
  2752 ;;           ___flge (ARG)
  2753 ;;           _frexp (ARG)
  2754 ;;           ___flpack (ARG)
  2755 ;;         ___awtofl (ARG)
  2756 ;;           ___flpack
  2757 ;;           ___fltol (ARG)
  2758 ;;             ___flge (ARG)
  2759 ;;             _frexp (ARG)
  2760 ;;             ___flpack (ARG)
  2761 ;;         ___fldiv (ARG)
  2762 ;;           ___flpack
  2763 ;;           ___fltol (ARG)
  2764 ;;             ___flge (ARG)
  2765 ;;             _frexp (ARG)
  2766 ;;             ___flpack (ARG)
  2767 ;;         _frexp (ARG)
  2768 ;;       ___awtofl (ARG)
  2769 ;;         ___flpack
  2770 ;;         ___fltol (ARG)
  2771 ;;           ___flge (ARG)
  2772 ;;           _frexp (ARG)
  2773 ;;           ___flpack (ARG)
  2774 ;;     ___fldiv
  2775 ;;       ___flpack
  2776 ;;       ___fltol (ARG)
  2777 ;;         ___flge (ARG)
  2778 ;;         _frexp (ARG)
  2779 ;;         ___flpack (ARG)
  2780 ;;     ___fltol
  2781 ;;       ___flge (ARG)
  2782 ;;       _frexp (ARG)
  2783 ;;       ___flpack (ARG)
  2784 ;;     _print_reading
  2785 ;;     _print_unit
  2786 ;;   _measure_inductance
  2787 ;;     _measure_freq
  2788 ;;       _timer0_read_ps
  2789 ;;       _buffer_init
  2790 ;;       _buffer_puts
  2791 ;;         _buffer_putch
  2792 ;;       _format_number
  2793 ;;         ___lwmod
  2794 ;;         ___lwdiv
  2795 ;;         _buffer_putch
  2796 ;;       _print_buffer
  2797 ;;         _ser_putch
  2798 ;;         _ser_puts
  2799 ;;           _ser_putch
  2800 ;;         ___lwtofl (ARG)
  2801 ;;           ___flpack
  2802 ;;           _timer0_read_ps (ARG)
  2803 ;;           _buffer_init (ARG)
  2804 ;;           _buffer_puts (ARG)
  2805 ;;             _buffer_putch
  2806 ;;           _format_number (ARG)
  2807 ;;             ___lwmod
  2808 ;;             ___lwdiv
  2809 ;;             _buffer_putch
  2810 ;;           _ser_putch (ARG)
  2811 ;;           _ser_puts (ARG)
  2812 ;;             _ser_putch
  2813 ;;       ___lwtofl (ARG)
  2814 ;;         ___flpack
  2815 ;;         _timer0_read_ps (ARG)
  2816 ;;         _buffer_init (ARG)
  2817 ;;         _buffer_puts (ARG)
  2818 ;;           _buffer_putch
  2819 ;;         _format_number (ARG)
  2820 ;;           ___lwmod
  2821 ;;           ___lwdiv
  2822 ;;           _buffer_putch
  2823 ;;         _ser_putch (ARG)
  2824 ;;         _ser_puts (ARG)
  2825 ;;           _ser_putch
  2826 ;;     ___lwtofl
  2827 ;;       ___flpack
  2828 ;;       _timer0_read_ps (ARG)
  2829 ;;       _buffer_init (ARG)
  2830 ;;       _buffer_puts (ARG)
  2831 ;;         _buffer_putch
  2832 ;;       _format_number (ARG)
  2833 ;;         ___lwmod
  2834 ;;         ___lwdiv
  2835 ;;         _buffer_putch
  2836 ;;       _ser_putch (ARG)
  2837 ;;       _ser_puts (ARG)
  2838 ;;         _ser_putch
  2839 ;;     ___flge
  2840 ;;     ___flsub
  2841 ;;       ___fladd
  2842 ;;         ___flpack
  2843 ;;         ___fltol (ARG)
  2844 ;;           ___flge (ARG)
  2845 ;;           _frexp (ARG)
  2846 ;;           ___flpack (ARG)
  2847 ;;         ___flmul (ARG)
  2848 ;;           ___flpack
  2849 ;;           ___fltol (ARG)
  2850 ;;             ___flge (ARG)
  2851 ;;             _frexp (ARG)
  2852 ;;             ___flpack (ARG)
  2853 ;;           ___awtofl (ARG)
  2854 ;;             ___flpack
  2855 ;;             ___fltol (ARG)
  2856 ;;               ___flge (ARG)
  2857 ;;               _frexp (ARG)
  2858 ;;               ___flpack (ARG)
  2859 ;;           ___fldiv (ARG)
  2860 ;;             ___flpack
  2861 ;;             ___fltol (ARG)
  2862 ;;               ___flge (ARG)
  2863 ;;               _frexp (ARG)
  2864 ;;               ___flpack (ARG)
  2865 ;;           _frexp (ARG)
  2866 ;;         _frexp (ARG)
  2867 ;;         ___awtofl (ARG)
  2868 ;;           ___flpack
  2869 ;;           ___fltol (ARG)
  2870 ;;             ___flge (ARG)
  2871 ;;             _frexp (ARG)
  2872 ;;             ___flpack (ARG)
  2873 ;;       ___flmul (ARG)
  2874 ;;         ___flpack
  2875 ;;         ___fltol (ARG)
  2876 ;;           ___flge (ARG)
  2877 ;;           _frexp (ARG)
  2878 ;;           ___flpack (ARG)
  2879 ;;         ___awtofl (ARG)
  2880 ;;           ___flpack
  2881 ;;           ___fltol (ARG)
  2882 ;;             ___flge (ARG)
  2883 ;;             _frexp (ARG)
  2884 ;;             ___flpack (ARG)
  2885 ;;         ___fldiv (ARG)
  2886 ;;           ___flpack
  2887 ;;           ___fltol (ARG)
  2888 ;;             ___flge (ARG)
  2889 ;;             _frexp (ARG)
  2890 ;;             ___flpack (ARG)
  2891 ;;         _frexp (ARG)
  2892 ;;       ___awtofl (ARG)
  2893 ;;         ___flpack
  2894 ;;         ___fltol (ARG)
  2895 ;;           ___flge (ARG)
  2896 ;;           _frexp (ARG)
  2897 ;;           ___flpack (ARG)
  2898 ;;     ___flmul
  2899 ;;       ___flpack
  2900 ;;       ___fltol (ARG)
  2901 ;;         ___flge (ARG)
  2902 ;;         _frexp (ARG)
  2903 ;;         ___flpack (ARG)
  2904 ;;       ___awtofl (ARG)
  2905 ;;         ___flpack
  2906 ;;         ___fltol (ARG)
  2907 ;;           ___flge (ARG)
  2908 ;;           _frexp (ARG)
  2909 ;;           ___flpack (ARG)
  2910 ;;       ___fldiv (ARG)
  2911 ;;         ___flpack
  2912 ;;         ___fltol (ARG)
  2913 ;;           ___flge (ARG)
  2914 ;;           _frexp (ARG)
  2915 ;;           ___flpack (ARG)
  2916 ;;       _frexp (ARG)
  2917 ;;     ___fldiv
  2918 ;;       ___flpack
  2919 ;;       ___fltol (ARG)
  2920 ;;         ___flge (ARG)
  2921 ;;         _frexp (ARG)
  2922 ;;         ___flpack (ARG)
  2923 ;;     ___fltol
  2924 ;;       ___flge (ARG)
  2925 ;;       _frexp (ARG)
  2926 ;;       ___flpack (ARG)
  2927 ;;     _print_reading
  2928 ;;     _print_unit
  2929 ;;   _print_indicator
  2930 ;;
  2931 ;; _isr (ROOT)
  2932 ;;
  2933 ;; Address spaces:
  2934 ;;Name               Size   Autos  Total    Cost      Usage
  2935 ;;BANK3               60      C      59       9       92.7%
  2936 ;;BITBANK3            60      0       0       8        0.0%
  2937 ;;SFR3                 0      0       0       4        0.0%
  2938 ;;BITSFR3              0      0       0       4        0.0%
  2939 ;;BANK2               60     13      13      11       19.8%
  2940 ;;BITBANK2            60      0       0      10        0.0%
  2941 ;;SFR2                 0      0       0       5        0.0%
  2942 ;;BITSFR2              0      0       0       5        0.0%
  2943 ;;SFR1                 0      0       0       2        0.0%
  2944 ;;BITSFR1              0      0       0       2        0.0%
  2945 ;;BANK1               50     40      47       7       88.8%
  2946 ;;BITBANK1            50      0       0       6        0.0%
  2947 ;;CODE                 0      0       0       0        0.0%
  2948 ;;DATA                 0      0     114      12        0.0%
  2949 ;;ABS                  0      0     10D       3        0.0%
  2950 ;;NULL                 0      0       0       0        0.0%
  2951 ;;STACK                0      0       7       2        0.0%
  2952 ;;BANK0               50     4F      50       5      100.0%
  2953 ;;BITBANK0            50      0       0       4        0.0%
  2954 ;;SFR0                 0      0       0       1        0.0%
  2955 ;;BITSFR0              0      0       0       1        0.0%
  2956 ;;COMMON               E      6       A       1       71.4%
  2957 ;;BITCOMMON            E      0       0       0        0.0%
  2958 ;;EEDATA             100      0       0       0        0.0%
  2959                           
  2960                           
  2961 ;; *************** function _main *****************
  2962 ;; Defined at:
  2963 ;;		line 113 in file "../../../LC-meter.c"
  2964 ;; Parameters:    Size  Location     Type
  2965 ;;		None
  2966 ;; Auto vars:     Size  Location     Type
  2967 ;;  new_mode        1   63[BANK1 ] unsigned char 
  2968 ;; Return value:  Size  Location     Type
  2969 ;;		None               void
  2970 ;; Registers used:
  2971 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2972 ;; Tracked objects:
  2973 ;;		On entry : 17F/0
  2974 ;;		On exit  : 0/0
  2975 ;;		Unchanged: 0/0
  2976 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2977 ;;      Params:         0       0       0       0       0
  2978 ;;      Locals:         0       0       2       0       0
  2979 ;;      Temps:          0       0       0       0       0
  2980 ;;      Totals:         0       0       2       0       0
  2981 ;;Total ram usage:        2 bytes
  2982 ;; Hardware stack levels required when called:    8
  2983 ;; This function calls:
  2984 ;;		_timer0_init
  2985 ;;		_timer2_init
  2986 ;;		_delay10ms
  2987 ;;		_ser_init
  2988 ;;		_calibrate
  2989 ;;		_ser_puts
  2990 ;;		_measure_capacitance
  2991 ;;		_measure_inductance
  2992 ;;		_print_indicator
  2993 ;; This function is called by:
  2994 ;;		Startup code after reset
  2995 ;; This function uses a non-reentrant model
  2996 ;;
  2997  0739                     _main:	
  2998                           
  2999                           ;LC-meter.c: 114: bres = msecpart = msecs = seconds = 0;
  3000                           
  3001                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3002  0739  1683               	bsf	3,5	;RP0=1, select bank3
  3003  073A  1703               	bsf	3,6	;RP1=1, select bank3
  3004  073B  01CD               	clrf	_seconds^(0+384)	;volatile
  3005  073C  01CE               	clrf	(_seconds+1)^(0+384)	;volatile
  3006  073D  01CF               	clrf	(_seconds+2)^(0+384)	;volatile
  3007  073E  01D0               	clrf	(_seconds+3)^(0+384)	;volatile
  3008  073F  0850               	movf	(_seconds+3)^(0+384),w	;volatile
  3009  0740  00CC               	movwf	(_msecs+3)^(0+384)	;volatile
  3010  0741  084F               	movf	(_seconds+2)^(0+384),w	;volatile
  3011  0742  00CB               	movwf	(_msecs+2)^(0+384)	;volatile
  3012  0743  084E               	movf	(_seconds+1)^(0+384),w	;volatile
  3013  0744  00CA               	movwf	(_msecs+1)^(0+384)	;volatile
  3014  0745  084D               	movf	_seconds^(0+384),w	;volatile
  3015  0746  00C9               	movwf	_msecs^(0+384)	;volatile
  3016  0747  084A               	movf	(_msecs^(0+384)+1),w	;volatile
  3017  0748  1303               	bcf	3,6	;RP1=0, select bank1
  3018  0749  00E3               	movwf	(_msecpart+1)^(0+128)	;volatile
  3019  074A  1703               	bsf	3,6	;RP1=1, select bank3
  3020  074B  0849               	movf	_msecs^(0+384),w	;volatile
  3021  074C  1303               	bcf	3,6	;RP1=0, select bank1
  3022  074D  00E2               	movwf	_msecpart^(0+128)	;volatile
  3023  074E  0863               	movf	(_msecpart+1)^(0+128),w	;volatile
  3024  074F  00E1               	movwf	(_bres+1)^(0+128)	;volatile
  3025  0750  0862               	movf	_msecpart^(0+128),w	;volatile
  3026  0751  00E0               	movwf	_bres^(0+128)	;volatile
  3027                           
  3028                           ;LC-meter.c: 115: mode = -1;
  3029  0752  30FF               	movlw	255
  3030  0753  00E6               	movwf	_mode^(0+128)
  3031                           
  3032                           ;LC-meter.c: 117: CCal = 1000;
  3033  0754  3044               	movlw	68
  3034  0755  1703               	bsf	3,6	;RP1=1, select bank3
  3035  0756  00E8               	movwf	(_CCal+3)^(0+384)
  3036  0757  307A               	movlw	122
  3037  0758  00E7               	movwf	(_CCal+2)^(0+384)
  3038  0759  3005               	movlw	5
  3039  075A  01E6               	clrf	(_CCal+1)^(0+384)
  3040  075B  01E5               	clrf	_CCal^(0+384)
  3041                           
  3042                           ;LC-meter.c: 125: CMCON = 0b00000101;
  3043  075C  1303               	bcf	3,6	;RP1=0, select bank1
  3044  075D  009C               	movwf	28	;volatile
  3045                           
  3046                           ;LC-meter.c: 127: TRISA = 0b11001111;
  3047  075E  30CF               	movlw	207
  3048  075F  0085               	movwf	5	;volatile
  3049                           
  3050                           ;LC-meter.c: 130: timer0_init(0b1000 | 0x20 | 0x40);
  3051  0760  3068               	movlw	104
  3052  0761  120A  118A  27B7   	fcall	_timer0_init
      +       120A  118A         
  3053                           
  3054                           ;LC-meter.c: 139: OPTION_REG &= ~0b100000;
  3055  0766  1683               	bsf	3,5	;RP0=1, select bank1
  3056  0767  1281               	bcf	1,5	;volatile
  3057                           
  3058                           ;LC-meter.c: 145: TRISC = 0b10111011;
  3059  0768  30BB               	movlw	187
  3060  0769  0087               	movwf	7	;volatile
  3061                           
  3062                           ;LC-meter.c: 149: TRISC &= ~0b00000100;
  3063  076A  1107               	bcf	7,2	;volatile
  3064                           
  3065                           ;LC-meter.c: 150: PORTC &= ~0b00000100; PORTC |= (!!(1)) << 2;;
  3066  076B  1283               	bcf	3,5	;RP0=0, select bank0
  3067  076C  1107               	bcf	7,2	;volatile
  3068  076D  1507               	bsf	7,2	;volatile
  3069                           
  3070                           ;LC-meter.c: 152: timer2_init(0b000 | 0x80);
  3071  076E  3080               	movlw	128
  3072  076F  160A  158A  2712   	fcall	_timer2_init
      +       120A  118A         
  3073                           
  3074                           ;LC-meter.c: 164: TRISC |= (1 << 4);
  3075  0774  1607               	bsf	7,4	;volatile
  3076                           
  3077                           ;LC-meter.c: 165: TRISC &= ~(1 << 5);
  3078  0775  1287               	bcf	7,5	;volatile
  3079                           
  3080                           ;LC-meter.c: 167: PORTC &= ~(1 << 5);
  3081  0776  1283               	bcf	3,5	;RP0=0, select bank0
  3082  0777  1287               	bcf	7,5	;volatile
  3083                           
  3084                           ;LC-meter.c: 169: PORTC |= (1 << 5);
  3085                           
  3086                           ;LC-meter.c: 168: delay10ms(50);
  3087  0778  1687               	bsf	7,5	;volatile
  3088                           
  3089                           ;LC-meter.c: 171: PORTC &= ~(1 << 5);
  3090                           
  3091                           ;LC-meter.c: 170: delay10ms(50);
  3092  0779  1287               	bcf	7,5	;volatile
  3093                           
  3094                           ;LC-meter.c: 173: PORTC |= (1 << 5);
  3095                           
  3096                           ;LC-meter.c: 172: delay10ms(50);
  3097  077A  1687               	bsf	7,5	;volatile
  3098                           
  3099                           ;LC-meter.c: 175: PORTC &= ~(1 << 5);
  3100                           
  3101                           ;LC-meter.c: 174: delay10ms(50);
  3102  077B  1287               	bcf	7,5	;volatile
  3103                           
  3104                           ;LC-meter.c: 178: ser_init();
  3105  077C  160A  158A  273C   	fcall	_ser_init
      +       120A  118A         
  3106                           
  3107                           ;LC-meter.c: 185: INTCON |= 0xc0;
  3108  0781  30C0               	movlw	192
  3109  0782  048B               	iorwf	11,f	;volatile
  3110                           
  3111                           ;LC-meter.c: 203: calibrate();
  3112                           
  3113                           ;LC-meter.c: 200: delay10ms(200);
  3114  0783  120A  118A  269F   	fcall	_calibrate
      +       120A  118A         
  3115  0788                     l11683:	
  3116                           
  3117                           ;LC-meter.c: 215: char new_mode = (!!(PORTC & 0b10000));
  3118  0788  3000               	movlw	0
  3119  0789  1283               	bcf	3,5	;RP0=0, select bank0
  3120  078A  1303               	bcf	3,6	;RP1=0, select bank0
  3121  078B  1A07               	btfsc	7,4
  3122  078C  3001               	movlw	1
  3123  078D  1683               	bsf	3,5	;RP0=1, select bank1
  3124  078E  00DF               	movwf	main@new_mode^(0+128)
  3125                           
  3126                           ;LC-meter.c: 217: if(new_mode != mode) {
  3127  078F  0666               	xorwf	_mode^(0+128),w
  3128  0790  1903               	skipnz
  3129  0791  2FA8               	goto	l5147
  3130                           
  3131                           ;LC-meter.c: 218: ser_puts(mode ? "- C (Unit: F) -" : "- L (Unit: H) -");
  3132  0792  08E6               	movf	_mode^(0+128),f
  3133  0793  1D03               	skipz
  3134  0794  2F97               	goto	l11691
  3135  0795  305D               	movlw	(STR_3-__stringbase)& (0+255)
  3136  0796  2F98               	goto	L1
  3137  0797                     l11691:	
  3138  0797  304D               	movlw	(STR_2-__stringbase)& (0+255)
  3139  0798                     L1:	
  3140  0798  00DE               	movwf	_main$6508^(0+128)
  3141  0799  160A  118A  2420   	fcall	_ser_puts
      +       120A  118A         
  3142                           
  3143                           ;LC-meter.c: 219: ser_puts("\r\n");
  3144  079E  3097               	movlw	(STR_1-__stringbase)& (0+255)
  3145  079F  160A  118A  2420   	fcall	_ser_puts
      +       120A  118A         
  3146                           
  3147                           ;LC-meter.c: 221: mode = new_mode;
  3148  07A4  1683               	bsf	3,5	;RP0=1, select bank1
  3149  07A5  1303               	bcf	3,6	;RP1=0, select bank1
  3150  07A6  085F               	movf	main@new_mode^(0+128),w
  3151  07A7  00E6               	movwf	_mode^(0+128)
  3152  07A8                     l5147:	
  3153                           
  3154                           ;LC-meter.c: 222: }
  3155                           ;LC-meter.c: 224: if(mode)
  3156  07A8  0866               	movf	_mode^(0+128),w
  3157  07A9  1903               	btfsc	3,2
  3158  07AA  2FB1               	goto	l11699
  3159                           
  3160                           ;LC-meter.c: 225: measure_capacitance();
  3161  07AB  160A  118A  200D   	fcall	_measure_capacitance
      +       120A  118A         
  3162  07B0  2F88               	goto	l11683
  3163  07B1                     l11699:	
  3164                           
  3165                           ;LC-meter.c: 226: else
  3166                           ;LC-meter.c: 227: measure_inductance();
  3167  07B1  120A  158A  218C   	fcall	_measure_inductance
      +       120A  118A         
  3168                           
  3169                           ;LC-meter.c: 234: }
  3170                           
  3171                           ;LC-meter.c: 233: delay10ms(20);
  3172                           
  3173                           ;LC-meter.c: 232: print_indicator(0);
  3174                           
  3175                           ;LC-meter.c: 230: delay10ms(30);
  3176                           
  3177                           ;LC-meter.c: 229: print_indicator(1);
  3178  07B6  2F88               	goto	l11683
  3179  07B7                     __end_of_main:	
  3180                           
  3181                           	psect	text1243
  3182  100D                     __ptext1243:	
  3183 ;; =============== function _main ends ============
  3184                           
  3185                           
  3186 ;; *************** function _measure_capacitance *****************
  3187 ;; Defined at:
  3188 ;;		line 119 in file "../../../src/measure.c"
  3189 ;; Parameters:    Size  Location     Type
  3190 ;;		None
  3191 ;; Auto vars:     Size  Location     Type
  3192 ;;  Cin             4   15[BANK2 ] unsigned char 
  3193 ;;  var             2   13[BANK2 ] unsigned int 
  3194 ;;  unit            1   12[BANK2 ] unsigned char 
  3195 ;; Return value:  Size  Location     Type
  3196 ;;		None               void
  3197 ;; Registers used:
  3198 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3199 ;; Tracked objects:
  3200 ;;		On entry : 60/20
  3201 ;;		On exit  : 60/40
  3202 ;;		Unchanged: 0/0
  3203 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3204 ;;      Params:         0       0       0       0       0
  3205 ;;      Locals:         0       0       0       0      19
  3206 ;;      Temps:          0       0       0       0       0
  3207 ;;      Totals:         0       0       0       0      19
  3208 ;;Total ram usage:       19 bytes
  3209 ;; Hardware stack levels used:    1
  3210 ;; Hardware stack levels required when called:    7
  3211 ;; This function calls:
  3212 ;;		_measure_freq
  3213 ;;		___lwtofl
  3214 ;;		_ser_puts
  3215 ;;		_format_xint32
  3216 ;;		_format_double
  3217 ;;		_ser_putch
  3218 ;;		___flge
  3219 ;;		___flmul
  3220 ;;		___flsub
  3221 ;;		___fldiv
  3222 ;;		___fltol
  3223 ;;		_print_reading
  3224 ;;		_print_unit
  3225 ;; This function is called by:
  3226 ;;		_main
  3227 ;; This function uses a non-reentrant model
  3228 ;;
  3229  100D                     _measure_capacitance:	
  3230                           
  3231                           ;measure.c: 120: uint8_t unit;
  3232                           ;measure.c: 121: uint16_t var;
  3233                           ;measure.c: 123: double Cin;
  3234                           ;measure.c: 130: var = measure_freq();
  3235                           
  3236                           ; Regs used in _measure_capacitance: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3237  100D  120A  158A  2739   	fcall	_measure_freq
      +       160A  118A         
  3238  1012  0856               	movf	?_measure_freq+1,w
  3239  1013  1703               	bsf	3,6	;RP1=1, select bank2
  3240  1014  009E               	movwf	(measure_capacitance@var+1)^(0+256)
  3241  1015  1303               	bcf	3,6	;RP1=0, select bank0
  3242  1016  0855               	movf	?_measure_freq,w
  3243  1017  1703               	bsf	3,6	;RP1=1, select bank2
  3244  1018  009D               	movwf	measure_capacitance@var^(0+256)
  3245                           
  3246                           ;measure.c: 132: F3 = (double)var;
  3247  1019  081E               	movf	(measure_capacitance@var+1)^(0+256),w
  3248  101A  1303               	bcf	3,6	;RP1=0, select bank0
  3249  101B  00D1               	movwf	?___lwtofl+1
  3250  101C  1703               	bsf	3,6	;RP1=1, select bank2
  3251  101D  081D               	movf	measure_capacitance@var^(0+256),w
  3252  101E  1303               	bcf	3,6	;RP1=0, select bank0
  3253  101F  00D0               	movwf	?___lwtofl
  3254  1020  120A  158A  2724   	fcall	___lwtofl
      +       160A  118A         
  3255  1025  0853               	movf	?___lwtofl+3,w
  3256  1026  1683               	bsf	3,5	;RP0=1, select bank3
  3257  1027  1703               	bsf	3,6	;RP1=1, select bank3
  3258  1028  00C8               	movwf	(_F3+3)^(0+384)
  3259  1029  1283               	bcf	3,5	;RP0=0, select bank0
  3260  102A  1303               	bcf	3,6	;RP1=0, select bank0
  3261  102B  0852               	movf	?___lwtofl+2,w
  3262  102C  1683               	bsf	3,5	;RP0=1, select bank3
  3263  102D  1703               	bsf	3,6	;RP1=1, select bank3
  3264  102E  00C7               	movwf	(_F3+2)^(0+384)
  3265  102F  1283               	bcf	3,5	;RP0=0, select bank0
  3266  1030  1303               	bcf	3,6	;RP1=0, select bank0
  3267  1031  0851               	movf	?___lwtofl+1,w
  3268  1032  1683               	bsf	3,5	;RP0=1, select bank3
  3269  1033  1703               	bsf	3,6	;RP1=1, select bank3
  3270  1034  00C6               	movwf	(_F3+1)^(0+384)
  3271  1035  1283               	bcf	3,5	;RP0=0, select bank0
  3272  1036  1303               	bcf	3,6	;RP1=0, select bank0
  3273  1037  0850               	movf	?___lwtofl,w
  3274  1038  1683               	bsf	3,5	;RP0=1, select bank3
  3275  1039  1703               	bsf	3,6	;RP1=1, select bank3
  3276  103A  00C5               	movwf	_F3^(0+384)
  3277                           
  3278                           ;measure.c: 135: ser_puts("var=");
  3279  103B  3092               	movlw	(STR_8-__stringbase)& (0+255)
  3280  103C  2420  160A  118A   	fcall	_ser_puts
  3281                           
  3282                           ;measure.c: 136: format_xint32(var);
  3283  103F  1283               	bcf	3,5	;RP0=0, select bank2
  3284  1040  1703               	bsf	3,6	;RP1=1, select bank2
  3285  1041  081D               	movf	measure_capacitance@var^(0+256),w
  3286  1042  1303               	bcf	3,6	;RP1=0, select bank0
  3287  1043  00D0               	movwf	?_format_xint32
  3288  1044  1703               	bsf	3,6	;RP1=1, select bank2
  3289  1045  081E               	movf	(measure_capacitance@var+1)^(0+256),w
  3290  1046  1303               	bcf	3,6	;RP1=0, select bank0
  3291  1047  00D1               	movwf	?_format_xint32+1
  3292  1048  01D2               	clrf	?_format_xint32+2
  3293  1049  01D3               	clrf	?_format_xint32+3
  3294  104A  244C  160A  118A   	fcall	_format_xint32
  3295                           
  3296                           ;measure.c: 137: ser_puts("\r\nF1=");
  3297  104D  3075               	movlw	(STR_9-__stringbase)& (0+255)
  3298  104E  2420  160A  118A   	fcall	_ser_puts
  3299                           
  3300                           ;measure.c: 138: format_double(F1);
  3301  1051  1683               	bsf	3,5	;RP0=1, select bank3
  3302  1052  1703               	bsf	3,6	;RP1=1, select bank3
  3303  1053  0858               	movf	(_F1+3)^(0+384),w
  3304  1054  1303               	bcf	3,6	;RP1=0, select bank1
  3305  1055  00DD               	movwf	(?_format_double+3)^(0+128)
  3306  1056  1703               	bsf	3,6	;RP1=1, select bank3
  3307  1057  0857               	movf	(_F1+2)^(0+384),w
  3308  1058  1303               	bcf	3,6	;RP1=0, select bank1
  3309  1059  00DC               	movwf	(?_format_double+2)^(0+128)
  3310  105A  1703               	bsf	3,6	;RP1=1, select bank3
  3311  105B  0856               	movf	(_F1+1)^(0+384),w
  3312  105C  1303               	bcf	3,6	;RP1=0, select bank1
  3313  105D  00DB               	movwf	(?_format_double+1)^(0+128)
  3314  105E  1703               	bsf	3,6	;RP1=1, select bank3
  3315  105F  0855               	movf	_F1^(0+384),w
  3316  1060  1303               	bcf	3,6	;RP1=0, select bank1
  3317  1061  00DA               	movwf	?_format_double^(0+128)
  3318  1062  246A  160A  118A   	fcall	_format_double
  3319                           
  3320                           ;measure.c: 139: ser_putch(' ');
  3321  1065  3020               	movlw	32
  3322  1066  2437  160A  118A   	fcall	_ser_putch
  3323                           
  3324                           ;measure.c: 140: format_xint32(*(uint32_t*)&F1);
  3325  1069  1703               	bsf	3,6	;RP1=1, select bank3
  3326  106A  0858               	movf	(_F1+3)^(0+384),w
  3327  106B  1283               	bcf	3,5	;RP0=0, select bank0
  3328  106C  1303               	bcf	3,6	;RP1=0, select bank0
  3329  106D  00D3               	movwf	?_format_xint32+3
  3330  106E  1683               	bsf	3,5	;RP0=1, select bank3
  3331  106F  1703               	bsf	3,6	;RP1=1, select bank3
  3332  1070  0857               	movf	(_F1+2)^(0+384),w
  3333  1071  1283               	bcf	3,5	;RP0=0, select bank0
  3334  1072  1303               	bcf	3,6	;RP1=0, select bank0
  3335  1073  00D2               	movwf	?_format_xint32+2
  3336  1074  1683               	bsf	3,5	;RP0=1, select bank3
  3337  1075  1703               	bsf	3,6	;RP1=1, select bank3
  3338  1076  0856               	movf	(_F1+1)^(0+384),w
  3339  1077  1283               	bcf	3,5	;RP0=0, select bank0
  3340  1078  1303               	bcf	3,6	;RP1=0, select bank0
  3341  1079  00D1               	movwf	?_format_xint32+1
  3342  107A  1683               	bsf	3,5	;RP0=1, select bank3
  3343  107B  1703               	bsf	3,6	;RP1=1, select bank3
  3344  107C  0855               	movf	_F1^(0+384),w
  3345  107D  1283               	bcf	3,5	;RP0=0, select bank0
  3346  107E  1303               	bcf	3,6	;RP1=0, select bank0
  3347  107F  00D0               	movwf	?_format_xint32
  3348  1080  244C  160A  118A   	fcall	_format_xint32
  3349                           
  3350                           ;measure.c: 141: ser_puts("\r\nF2=");
  3351  1083  307B               	movlw	(STR_10-__stringbase)& (0+255)
  3352  1084  2420  160A  118A   	fcall	_ser_puts
  3353                           
  3354                           ;measure.c: 142: format_double(F2);
  3355  1087  1683               	bsf	3,5	;RP0=1, select bank3
  3356  1088  1703               	bsf	3,6	;RP1=1, select bank3
  3357  1089  0844               	movf	(_F2+3)^(0+384),w
  3358  108A  1303               	bcf	3,6	;RP1=0, select bank1
  3359  108B  00DD               	movwf	(?_format_double+3)^(0+128)
  3360  108C  1703               	bsf	3,6	;RP1=1, select bank3
  3361  108D  0843               	movf	(_F2+2)^(0+384),w
  3362  108E  1303               	bcf	3,6	;RP1=0, select bank1
  3363  108F  00DC               	movwf	(?_format_double+2)^(0+128)
  3364  1090  1703               	bsf	3,6	;RP1=1, select bank3
  3365  1091  0842               	movf	(_F2+1)^(0+384),w
  3366  1092  1303               	bcf	3,6	;RP1=0, select bank1
  3367  1093  00DB               	movwf	(?_format_double+1)^(0+128)
  3368  1094  1703               	bsf	3,6	;RP1=1, select bank3
  3369  1095  0841               	movf	_F2^(0+384),w
  3370  1096  1303               	bcf	3,6	;RP1=0, select bank1
  3371  1097  00DA               	movwf	?_format_double^(0+128)
  3372  1098  246A  160A  118A   	fcall	_format_double
  3373                           
  3374                           ;measure.c: 143: ser_putch(' ');
  3375  109B  3020               	movlw	32
  3376  109C  2437  160A  118A   	fcall	_ser_putch
  3377                           
  3378                           ;measure.c: 144: format_xint32(*(uint32_t*)&F2);
  3379  109F  1703               	bsf	3,6	;RP1=1, select bank3
  3380  10A0  0844               	movf	(_F2+3)^(0+384),w
  3381  10A1  1283               	bcf	3,5	;RP0=0, select bank0
  3382  10A2  1303               	bcf	3,6	;RP1=0, select bank0
  3383  10A3  00D3               	movwf	?_format_xint32+3
  3384  10A4  1683               	bsf	3,5	;RP0=1, select bank3
  3385  10A5  1703               	bsf	3,6	;RP1=1, select bank3
  3386  10A6  0843               	movf	(_F2+2)^(0+384),w
  3387  10A7  1283               	bcf	3,5	;RP0=0, select bank0
  3388  10A8  1303               	bcf	3,6	;RP1=0, select bank0
  3389  10A9  00D2               	movwf	?_format_xint32+2
  3390  10AA  1683               	bsf	3,5	;RP0=1, select bank3
  3391  10AB  1703               	bsf	3,6	;RP1=1, select bank3
  3392  10AC  0842               	movf	(_F2+1)^(0+384),w
  3393  10AD  1283               	bcf	3,5	;RP0=0, select bank0
  3394  10AE  1303               	bcf	3,6	;RP1=0, select bank0
  3395  10AF  00D1               	movwf	?_format_xint32+1
  3396  10B0  1683               	bsf	3,5	;RP0=1, select bank3
  3397  10B1  1703               	bsf	3,6	;RP1=1, select bank3
  3398  10B2  0841               	movf	_F2^(0+384),w
  3399  10B3  1283               	bcf	3,5	;RP0=0, select bank0
  3400  10B4  1303               	bcf	3,6	;RP1=0, select bank0
  3401  10B5  00D0               	movwf	?_format_xint32
  3402  10B6  244C  160A  118A   	fcall	_format_xint32
  3403                           
  3404                           ;measure.c: 145: ser_puts("\r\nF3=");
  3405  10B9  3081               	movlw	(STR_11-__stringbase)& (0+255)
  3406  10BA  2420  160A  118A   	fcall	_ser_puts
  3407                           
  3408                           ;measure.c: 146: format_double(F3);
  3409  10BD  1683               	bsf	3,5	;RP0=1, select bank3
  3410  10BE  1703               	bsf	3,6	;RP1=1, select bank3
  3411  10BF  0848               	movf	(_F3+3)^(0+384),w
  3412  10C0  1303               	bcf	3,6	;RP1=0, select bank1
  3413  10C1  00DD               	movwf	(?_format_double+3)^(0+128)
  3414  10C2  1703               	bsf	3,6	;RP1=1, select bank3
  3415  10C3  0847               	movf	(_F3+2)^(0+384),w
  3416  10C4  1303               	bcf	3,6	;RP1=0, select bank1
  3417  10C5  00DC               	movwf	(?_format_double+2)^(0+128)
  3418  10C6  1703               	bsf	3,6	;RP1=1, select bank3
  3419  10C7  0846               	movf	(_F3+1)^(0+384),w
  3420  10C8  1303               	bcf	3,6	;RP1=0, select bank1
  3421  10C9  00DB               	movwf	(?_format_double+1)^(0+128)
  3422  10CA  1703               	bsf	3,6	;RP1=1, select bank3
  3423  10CB  0845               	movf	_F3^(0+384),w
  3424  10CC  1303               	bcf	3,6	;RP1=0, select bank1
  3425  10CD  00DA               	movwf	?_format_double^(0+128)
  3426  10CE  246A  160A  118A   	fcall	_format_double
  3427                           
  3428                           ;measure.c: 147: ser_putch(' ');
  3429  10D1  3020               	movlw	32
  3430  10D2  2437  160A  118A   	fcall	_ser_putch
  3431                           
  3432                           ;measure.c: 148: format_xint32(*(uint32_t*)&F3);
  3433  10D5  1703               	bsf	3,6	;RP1=1, select bank3
  3434  10D6  0848               	movf	(_F3+3)^(0+384),w
  3435  10D7  1283               	bcf	3,5	;RP0=0, select bank0
  3436  10D8  1303               	bcf	3,6	;RP1=0, select bank0
  3437  10D9  00D3               	movwf	?_format_xint32+3
  3438  10DA  1683               	bsf	3,5	;RP0=1, select bank3
  3439  10DB  1703               	bsf	3,6	;RP1=1, select bank3
  3440  10DC  0847               	movf	(_F3+2)^(0+384),w
  3441  10DD  1283               	bcf	3,5	;RP0=0, select bank0
  3442  10DE  1303               	bcf	3,6	;RP1=0, select bank0
  3443  10DF  00D2               	movwf	?_format_xint32+2
  3444  10E0  1683               	bsf	3,5	;RP0=1, select bank3
  3445  10E1  1703               	bsf	3,6	;RP1=1, select bank3
  3446  10E2  0846               	movf	(_F3+1)^(0+384),w
  3447  10E3  1283               	bcf	3,5	;RP0=0, select bank0
  3448  10E4  1303               	bcf	3,6	;RP1=0, select bank0
  3449  10E5  00D1               	movwf	?_format_xint32+1
  3450  10E6  1683               	bsf	3,5	;RP0=1, select bank3
  3451  10E7  1703               	bsf	3,6	;RP1=1, select bank3
  3452  10E8  0845               	movf	_F3^(0+384),w
  3453  10E9  1283               	bcf	3,5	;RP0=0, select bank0
  3454  10EA  1303               	bcf	3,6	;RP1=0, select bank0
  3455  10EB  00D0               	movwf	?_format_xint32
  3456  10EC  244C  160A  118A   	fcall	_format_xint32
  3457                           
  3458                           ;measure.c: 149: ser_puts("\r\nCCal=");
  3459  10EF  306D               	movlw	(STR_12-__stringbase)& (0+255)
  3460  10F0  2420  160A  118A   	fcall	_ser_puts
  3461                           
  3462                           ;measure.c: 150: format_double(CCal);
  3463  10F3  1683               	bsf	3,5	;RP0=1, select bank3
  3464  10F4  1703               	bsf	3,6	;RP1=1, select bank3
  3465  10F5  0868               	movf	(_CCal+3)^(0+384),w
  3466  10F6  1303               	bcf	3,6	;RP1=0, select bank1
  3467  10F7  00DD               	movwf	(?_format_double+3)^(0+128)
  3468  10F8  1703               	bsf	3,6	;RP1=1, select bank3
  3469  10F9  0867               	movf	(_CCal+2)^(0+384),w
  3470  10FA  1303               	bcf	3,6	;RP1=0, select bank1
  3471  10FB  00DC               	movwf	(?_format_double+2)^(0+128)
  3472  10FC  1703               	bsf	3,6	;RP1=1, select bank3
  3473  10FD  0866               	movf	(_CCal+1)^(0+384),w
  3474  10FE  1303               	bcf	3,6	;RP1=0, select bank1
  3475  10FF  00DB               	movwf	(?_format_double+1)^(0+128)
  3476  1100  1703               	bsf	3,6	;RP1=1, select bank3
  3477  1101  0865               	movf	_CCal^(0+384),w
  3478  1102  1303               	bcf	3,6	;RP1=0, select bank1
  3479  1103  00DA               	movwf	?_format_double^(0+128)
  3480  1104  246A  160A  118A   	fcall	_format_double
  3481                           
  3482                           ;measure.c: 151: ser_putch(' ');
  3483  1107  3020               	movlw	32
  3484  1108  2437  160A  118A   	fcall	_ser_putch
  3485                           
  3486                           ;measure.c: 152: format_xint32(*(uint32_t*)&CCal);
  3487  110B  1703               	bsf	3,6	;RP1=1, select bank3
  3488  110C  0868               	movf	(_CCal+3)^(0+384),w
  3489  110D  1283               	bcf	3,5	;RP0=0, select bank0
  3490  110E  1303               	bcf	3,6	;RP1=0, select bank0
  3491  110F  00D3               	movwf	?_format_xint32+3
  3492  1110  1683               	bsf	3,5	;RP0=1, select bank3
  3493  1111  1703               	bsf	3,6	;RP1=1, select bank3
  3494  1112  0867               	movf	(_CCal+2)^(0+384),w
  3495  1113  1283               	bcf	3,5	;RP0=0, select bank0
  3496  1114  1303               	bcf	3,6	;RP1=0, select bank0
  3497  1115  00D2               	movwf	?_format_xint32+2
  3498  1116  1683               	bsf	3,5	;RP0=1, select bank3
  3499  1117  1703               	bsf	3,6	;RP1=1, select bank3
  3500  1118  0866               	movf	(_CCal+1)^(0+384),w
  3501  1119  1283               	bcf	3,5	;RP0=0, select bank0
  3502  111A  1303               	bcf	3,6	;RP1=0, select bank0
  3503  111B  00D1               	movwf	?_format_xint32+1
  3504  111C  1683               	bsf	3,5	;RP0=1, select bank3
  3505  111D  1703               	bsf	3,6	;RP1=1, select bank3
  3506  111E  0865               	movf	_CCal^(0+384),w
  3507  111F  1283               	bcf	3,5	;RP0=0, select bank0
  3508  1120  1303               	bcf	3,6	;RP1=0, select bank0
  3509  1121  00D0               	movwf	?_format_xint32
  3510  1122  244C  160A  118A   	fcall	_format_xint32
  3511                           
  3512                           ;measure.c: 153: ser_puts("\r\n");
  3513  1125  3097               	movlw	(STR_1-__stringbase)& (0+255)
  3514  1126  2420  160A  118A   	fcall	_ser_puts
  3515                           
  3516                           ;measure.c: 157: if(F3 > F1)
  3517  1129  1683               	bsf	3,5	;RP0=1, select bank3
  3518  112A  1703               	bsf	3,6	;RP1=1, select bank3
  3519  112B  0858               	movf	(_F1+3)^(0+384),w
  3520  112C  1283               	bcf	3,5	;RP0=0, select bank0
  3521  112D  1303               	bcf	3,6	;RP1=0, select bank0
  3522  112E  00A3               	movwf	?___flge+3
  3523  112F  1683               	bsf	3,5	;RP0=1, select bank3
  3524  1130  1703               	bsf	3,6	;RP1=1, select bank3
  3525  1131  0857               	movf	(_F1+2)^(0+384),w
  3526  1132  1283               	bcf	3,5	;RP0=0, select bank0
  3527  1133  1303               	bcf	3,6	;RP1=0, select bank0
  3528  1134  00A2               	movwf	?___flge+2
  3529  1135  1683               	bsf	3,5	;RP0=1, select bank3
  3530  1136  1703               	bsf	3,6	;RP1=1, select bank3
  3531  1137  0856               	movf	(_F1+1)^(0+384),w
  3532  1138  1283               	bcf	3,5	;RP0=0, select bank0
  3533  1139  1303               	bcf	3,6	;RP1=0, select bank0
  3534  113A  00A1               	movwf	?___flge+1
  3535  113B  1683               	bsf	3,5	;RP0=1, select bank3
  3536  113C  1703               	bsf	3,6	;RP1=1, select bank3
  3537  113D  0855               	movf	_F1^(0+384),w
  3538  113E  1283               	bcf	3,5	;RP0=0, select bank0
  3539  113F  1303               	bcf	3,6	;RP1=0, select bank0
  3540  1140  00A0               	movwf	?___flge
  3541  1141  1683               	bsf	3,5	;RP0=1, select bank3
  3542  1142  1703               	bsf	3,6	;RP1=1, select bank3
  3543  1143  0848               	movf	(_F3+3)^(0+384),w
  3544  1144  1283               	bcf	3,5	;RP0=0, select bank0
  3545  1145  1303               	bcf	3,6	;RP1=0, select bank0
  3546  1146  00A7               	movwf	?___flge+7
  3547  1147  1683               	bsf	3,5	;RP0=1, select bank3
  3548  1148  1703               	bsf	3,6	;RP1=1, select bank3
  3549  1149  0847               	movf	(_F3+2)^(0+384),w
  3550  114A  1283               	bcf	3,5	;RP0=0, select bank0
  3551  114B  1303               	bcf	3,6	;RP1=0, select bank0
  3552  114C  00A6               	movwf	?___flge+6
  3553  114D  1683               	bsf	3,5	;RP0=1, select bank3
  3554  114E  1703               	bsf	3,6	;RP1=1, select bank3
  3555  114F  0846               	movf	(_F3+1)^(0+384),w
  3556  1150  1283               	bcf	3,5	;RP0=0, select bank0
  3557  1151  1303               	bcf	3,6	;RP1=0, select bank0
  3558  1152  00A5               	movwf	?___flge+5
  3559  1153  1683               	bsf	3,5	;RP0=1, select bank3
  3560  1154  1703               	bsf	3,6	;RP1=1, select bank3
  3561  1155  0845               	movf	_F3^(0+384),w
  3562  1156  1283               	bcf	3,5	;RP0=0, select bank0
  3563  1157  1303               	bcf	3,6	;RP1=0, select bank0
  3564  1158  00A4               	movwf	?___flge+4
  3565  1159  120A  158A  26D8   	fcall	___flge
      +       160A  118A         
  3566  115E  1803               	btfsc	3,0
  3567  115F  296A               	goto	l11603
  3568                           
  3569                           ;measure.c: 158: F3 = F1;
  3570  1160  1683               	bsf	3,5	;RP0=1, select bank3
  3571  1161  1703               	bsf	3,6	;RP1=1, select bank3
  3572  1162  0858               	movf	(_F1+3)^(0+384),w
  3573  1163  00C8               	movwf	(_F3+3)^(0+384)
  3574  1164  0857               	movf	(_F1+2)^(0+384),w
  3575  1165  00C7               	movwf	(_F3+2)^(0+384)
  3576  1166  0856               	movf	(_F1+1)^(0+384),w
  3577  1167  00C6               	movwf	(_F3+1)^(0+384)
  3578  1168  0855               	movf	_F1^(0+384),w
  3579  1169  00C5               	movwf	_F3^(0+384)
  3580  116A                     l11603:	
  3581                           
  3582                           ;measure.c: 160: Cin = F2 * F2 * (F1 * F1 - F3 * F3) * CCal;
  3583  116A  1683               	bsf	3,5	;RP0=1, select bank3
  3584  116B  1703               	bsf	3,6	;RP1=1, select bank3
  3585  116C  0848               	movf	(_F3+3)^(0+384),w
  3586  116D  1283               	bcf	3,5	;RP0=0, select bank0
  3587  116E  1303               	bcf	3,6	;RP1=0, select bank0
  3588  116F  00CC               	movwf	?___flmul+3
  3589  1170  1683               	bsf	3,5	;RP0=1, select bank3
  3590  1171  1703               	bsf	3,6	;RP1=1, select bank3
  3591  1172  0847               	movf	(_F3+2)^(0+384),w
  3592  1173  1283               	bcf	3,5	;RP0=0, select bank0
  3593  1174  1303               	bcf	3,6	;RP1=0, select bank0
  3594  1175  00CB               	movwf	?___flmul+2
  3595  1176  1683               	bsf	3,5	;RP0=1, select bank3
  3596  1177  1703               	bsf	3,6	;RP1=1, select bank3
  3597  1178  0846               	movf	(_F3+1)^(0+384),w
  3598  1179  1283               	bcf	3,5	;RP0=0, select bank0
  3599  117A  1303               	bcf	3,6	;RP1=0, select bank0
  3600  117B  00CA               	movwf	?___flmul+1
  3601  117C  1683               	bsf	3,5	;RP0=1, select bank3
  3602  117D  1703               	bsf	3,6	;RP1=1, select bank3
  3603  117E  0845               	movf	_F3^(0+384),w
  3604  117F  1283               	bcf	3,5	;RP0=0, select bank0
  3605  1180  1303               	bcf	3,6	;RP1=0, select bank0
  3606  1181  00C9               	movwf	?___flmul
  3607  1182  1683               	bsf	3,5	;RP0=1, select bank3
  3608  1183  1703               	bsf	3,6	;RP1=1, select bank3
  3609  1184  0848               	movf	(_F3+3)^(0+384),w
  3610  1185  1283               	bcf	3,5	;RP0=0, select bank0
  3611  1186  1303               	bcf	3,6	;RP1=0, select bank0
  3612  1187  00D0               	movwf	?___flmul+7
  3613  1188  1683               	bsf	3,5	;RP0=1, select bank3
  3614  1189  1703               	bsf	3,6	;RP1=1, select bank3
  3615  118A  0847               	movf	(_F3+2)^(0+384),w
  3616  118B  1283               	bcf	3,5	;RP0=0, select bank0
  3617  118C  1303               	bcf	3,6	;RP1=0, select bank0
  3618  118D  00CF               	movwf	?___flmul+6
  3619  118E  1683               	bsf	3,5	;RP0=1, select bank3
  3620  118F  1703               	bsf	3,6	;RP1=1, select bank3
  3621  1190  0846               	movf	(_F3+1)^(0+384),w
  3622  1191  1283               	bcf	3,5	;RP0=0, select bank0
  3623  1192  1303               	bcf	3,6	;RP1=0, select bank0
  3624  1193  00CE               	movwf	?___flmul+5
  3625  1194  1683               	bsf	3,5	;RP0=1, select bank3
  3626  1195  1703               	bsf	3,6	;RP1=1, select bank3
  3627  1196  0845               	movf	_F3^(0+384),w
  3628  1197  1283               	bcf	3,5	;RP0=0, select bank0
  3629  1198  1303               	bcf	3,6	;RP1=0, select bank0
  3630  1199  00CD               	movwf	?___flmul+4
  3631  119A  120A  158A  2640   	fcall	___flmul
      +       160A  118A         
  3632  119F  084C               	movf	?___flmul+3,w
  3633  11A0  1683               	bsf	3,5	;RP0=1, select bank1
  3634  11A1  00A3               	movwf	(?___flsub+3)^(0+128)
  3635  11A2  1283               	bcf	3,5	;RP0=0, select bank0
  3636  11A3  084B               	movf	?___flmul+2,w
  3637  11A4  1683               	bsf	3,5	;RP0=1, select bank1
  3638  11A5  00A2               	movwf	(?___flsub+2)^(0+128)
  3639  11A6  1283               	bcf	3,5	;RP0=0, select bank0
  3640  11A7  084A               	movf	?___flmul+1,w
  3641  11A8  1683               	bsf	3,5	;RP0=1, select bank1
  3642  11A9  00A1               	movwf	(?___flsub+1)^(0+128)
  3643  11AA  1283               	bcf	3,5	;RP0=0, select bank0
  3644  11AB  0849               	movf	?___flmul,w
  3645  11AC  1683               	bsf	3,5	;RP0=1, select bank1
  3646  11AD  00A0               	movwf	?___flsub^(0+128)
  3647  11AE  1703               	bsf	3,6	;RP1=1, select bank3
  3648  11AF  0858               	movf	(_F1+3)^(0+384),w
  3649  11B0  1283               	bcf	3,5	;RP0=0, select bank0
  3650  11B1  1303               	bcf	3,6	;RP1=0, select bank0
  3651  11B2  00CC               	movwf	?___flmul+3
  3652  11B3  1683               	bsf	3,5	;RP0=1, select bank3
  3653  11B4  1703               	bsf	3,6	;RP1=1, select bank3
  3654  11B5  0857               	movf	(_F1+2)^(0+384),w
  3655  11B6  1283               	bcf	3,5	;RP0=0, select bank0
  3656  11B7  1303               	bcf	3,6	;RP1=0, select bank0
  3657  11B8  00CB               	movwf	?___flmul+2
  3658  11B9  1683               	bsf	3,5	;RP0=1, select bank3
  3659  11BA  1703               	bsf	3,6	;RP1=1, select bank3
  3660  11BB  0856               	movf	(_F1+1)^(0+384),w
  3661  11BC  1283               	bcf	3,5	;RP0=0, select bank0
  3662  11BD  1303               	bcf	3,6	;RP1=0, select bank0
  3663  11BE  00CA               	movwf	?___flmul+1
  3664  11BF  1683               	bsf	3,5	;RP0=1, select bank3
  3665  11C0  1703               	bsf	3,6	;RP1=1, select bank3
  3666  11C1  0855               	movf	_F1^(0+384),w
  3667  11C2  1283               	bcf	3,5	;RP0=0, select bank0
  3668  11C3  1303               	bcf	3,6	;RP1=0, select bank0
  3669  11C4  00C9               	movwf	?___flmul
  3670  11C5  1683               	bsf	3,5	;RP0=1, select bank3
  3671  11C6  1703               	bsf	3,6	;RP1=1, select bank3
  3672  11C7  0858               	movf	(_F1+3)^(0+384),w
  3673  11C8  1283               	bcf	3,5	;RP0=0, select bank0
  3674  11C9  1303               	bcf	3,6	;RP1=0, select bank0
  3675  11CA  00D0               	movwf	?___flmul+7
  3676  11CB  1683               	bsf	3,5	;RP0=1, select bank3
  3677  11CC  1703               	bsf	3,6	;RP1=1, select bank3
  3678  11CD  0857               	movf	(_F1+2)^(0+384),w
  3679  11CE  1283               	bcf	3,5	;RP0=0, select bank0
  3680  11CF  1303               	bcf	3,6	;RP1=0, select bank0
  3681  11D0  00CF               	movwf	?___flmul+6
  3682  11D1  1683               	bsf	3,5	;RP0=1, select bank3
  3683  11D2  1703               	bsf	3,6	;RP1=1, select bank3
  3684  11D3  0856               	movf	(_F1+1)^(0+384),w
  3685  11D4  1283               	bcf	3,5	;RP0=0, select bank0
  3686  11D5  1303               	bcf	3,6	;RP1=0, select bank0
  3687  11D6  00CE               	movwf	?___flmul+5
  3688  11D7  1683               	bsf	3,5	;RP0=1, select bank3
  3689  11D8  1703               	bsf	3,6	;RP1=1, select bank3
  3690  11D9  0855               	movf	_F1^(0+384),w
  3691  11DA  1283               	bcf	3,5	;RP0=0, select bank0
  3692  11DB  1303               	bcf	3,6	;RP1=0, select bank0
  3693  11DC  00CD               	movwf	?___flmul+4
  3694  11DD  120A  158A  2640   	fcall	___flmul
      +       160A  118A         
  3695  11E2  084C               	movf	?___flmul+3,w
  3696  11E3  1683               	bsf	3,5	;RP0=1, select bank1
  3697  11E4  00A7               	movwf	((?___flsub+3)^(0+128)+4)
  3698  11E5  1283               	bcf	3,5	;RP0=0, select bank0
  3699  11E6  084B               	movf	?___flmul+2,w
  3700  11E7  1683               	bsf	3,5	;RP0=1, select bank1
  3701  11E8  00A6               	movwf	((?___flsub+2)^(0+128)+4)
  3702  11E9  1283               	bcf	3,5	;RP0=0, select bank0
  3703  11EA  084A               	movf	?___flmul+1,w
  3704  11EB  1683               	bsf	3,5	;RP0=1, select bank1
  3705  11EC  00A5               	movwf	((?___flsub+1)^(0+128)+4)
  3706  11ED  1283               	bcf	3,5	;RP0=0, select bank0
  3707  11EE  0849               	movf	?___flmul,w
  3708  11EF  1683               	bsf	3,5	;RP0=1, select bank1
  3709  11F0  00A4               	movwf	(?___flsub^(0+128)+4)
  3710  11F1  26D6  160A  118A   	fcall	___flsub
  3711  11F4  0823               	movf	(?___flsub+3)^(0+128),w
  3712  11F5  1283               	bcf	3,5	;RP0=0, select bank2
  3713  11F6  1703               	bsf	3,6	;RP1=1, select bank2
  3714  11F7  0093               	movwf	(_measure_capacitance$8234+3)^(0+256)
  3715  11F8  1683               	bsf	3,5	;RP0=1, select bank1
  3716  11F9  1303               	bcf	3,6	;RP1=0, select bank1
  3717  11FA  0822               	movf	(?___flsub+2)^(0+128),w
  3718  11FB  1283               	bcf	3,5	;RP0=0, select bank2
  3719  11FC  1703               	bsf	3,6	;RP1=1, select bank2
  3720  11FD  0092               	movwf	(_measure_capacitance$8234+2)^(0+256)
  3721  11FE  1683               	bsf	3,5	;RP0=1, select bank1
  3722  11FF  1303               	bcf	3,6	;RP1=0, select bank1
  3723  1200  0821               	movf	(?___flsub+1)^(0+128),w
  3724  1201  1283               	bcf	3,5	;RP0=0, select bank2
  3725  1202  1703               	bsf	3,6	;RP1=1, select bank2
  3726  1203  0091               	movwf	(_measure_capacitance$8234+1)^(0+256)
  3727  1204  1683               	bsf	3,5	;RP0=1, select bank1
  3728  1205  1303               	bcf	3,6	;RP1=0, select bank1
  3729  1206  0820               	movf	?___flsub^(0+128),w
  3730  1207  1283               	bcf	3,5	;RP0=0, select bank2
  3731  1208  1703               	bsf	3,6	;RP1=1, select bank2
  3732  1209  0090               	movwf	_measure_capacitance$8234^(0+256)
  3733                           
  3734                           ;measure.c: 160: Cin = F2 * F2 * (F1 * F1 - F3 * F3) * CCal;
  3735  120A  1683               	bsf	3,5	;RP0=1, select bank3
  3736  120B  0844               	movf	(_F2+3)^(0+384),w
  3737  120C  1283               	bcf	3,5	;RP0=0, select bank0
  3738  120D  1303               	bcf	3,6	;RP1=0, select bank0
  3739  120E  00CC               	movwf	?___flmul+3
  3740  120F  1683               	bsf	3,5	;RP0=1, select bank3
  3741  1210  1703               	bsf	3,6	;RP1=1, select bank3
  3742  1211  0843               	movf	(_F2+2)^(0+384),w
  3743  1212  1283               	bcf	3,5	;RP0=0, select bank0
  3744  1213  1303               	bcf	3,6	;RP1=0, select bank0
  3745  1214  00CB               	movwf	?___flmul+2
  3746  1215  1683               	bsf	3,5	;RP0=1, select bank3
  3747  1216  1703               	bsf	3,6	;RP1=1, select bank3
  3748  1217  0842               	movf	(_F2+1)^(0+384),w
  3749  1218  1283               	bcf	3,5	;RP0=0, select bank0
  3750  1219  1303               	bcf	3,6	;RP1=0, select bank0
  3751  121A  00CA               	movwf	?___flmul+1
  3752  121B  1683               	bsf	3,5	;RP0=1, select bank3
  3753  121C  1703               	bsf	3,6	;RP1=1, select bank3
  3754  121D  0841               	movf	_F2^(0+384),w
  3755  121E  1283               	bcf	3,5	;RP0=0, select bank0
  3756  121F  1303               	bcf	3,6	;RP1=0, select bank0
  3757  1220  00C9               	movwf	?___flmul
  3758  1221  1703               	bsf	3,6	;RP1=1, select bank2
  3759  1222  0813               	movf	(_measure_capacitance$8234+3)^(0+256),w
  3760  1223  1303               	bcf	3,6	;RP1=0, select bank0
  3761  1224  00D0               	movwf	?___flmul+7
  3762  1225  1703               	bsf	3,6	;RP1=1, select bank2
  3763  1226  0812               	movf	(_measure_capacitance$8234+2)^(0+256),w
  3764  1227  1303               	bcf	3,6	;RP1=0, select bank0
  3765  1228  00CF               	movwf	?___flmul+6
  3766  1229  1703               	bsf	3,6	;RP1=1, select bank2
  3767  122A  0811               	movf	(_measure_capacitance$8234+1)^(0+256),w
  3768  122B  1303               	bcf	3,6	;RP1=0, select bank0
  3769  122C  00CE               	movwf	?___flmul+5
  3770  122D  1703               	bsf	3,6	;RP1=1, select bank2
  3771  122E  0810               	movf	_measure_capacitance$8234^(0+256),w
  3772  122F  1303               	bcf	3,6	;RP1=0, select bank0
  3773  1230  00CD               	movwf	?___flmul+4
  3774  1231  120A  158A  2640   	fcall	___flmul
      +       160A  118A         
  3775  1236  084C               	movf	?___flmul+3,w
  3776  1237  1703               	bsf	3,6	;RP1=1, select bank2
  3777  1238  0097               	movwf	(_measure_capacitance$8235+3)^(0+256)
  3778  1239  1303               	bcf	3,6	;RP1=0, select bank0
  3779  123A  084B               	movf	?___flmul+2,w
  3780  123B  1703               	bsf	3,6	;RP1=1, select bank2
  3781  123C  0096               	movwf	(_measure_capacitance$8235+2)^(0+256)
  3782  123D  1303               	bcf	3,6	;RP1=0, select bank0
  3783  123E  084A               	movf	?___flmul+1,w
  3784  123F  1703               	bsf	3,6	;RP1=1, select bank2
  3785  1240  0095               	movwf	(_measure_capacitance$8235+1)^(0+256)
  3786  1241  1303               	bcf	3,6	;RP1=0, select bank0
  3787  1242  0849               	movf	?___flmul,w
  3788  1243  1703               	bsf	3,6	;RP1=1, select bank2
  3789  1244  0094               	movwf	_measure_capacitance$8235^(0+256)
  3790                           
  3791                           ;measure.c: 160: Cin = F2 * F2 * (F1 * F1 - F3 * F3) * CCal;
  3792  1245  1683               	bsf	3,5	;RP0=1, select bank3
  3793  1246  0844               	movf	(_F2+3)^(0+384),w
  3794  1247  1283               	bcf	3,5	;RP0=0, select bank0
  3795  1248  1303               	bcf	3,6	;RP1=0, select bank0
  3796  1249  00CC               	movwf	?___flmul+3
  3797  124A  1683               	bsf	3,5	;RP0=1, select bank3
  3798  124B  1703               	bsf	3,6	;RP1=1, select bank3
  3799  124C  0843               	movf	(_F2+2)^(0+384),w
  3800  124D  1283               	bcf	3,5	;RP0=0, select bank0
  3801  124E  1303               	bcf	3,6	;RP1=0, select bank0
  3802  124F  00CB               	movwf	?___flmul+2
  3803  1250  1683               	bsf	3,5	;RP0=1, select bank3
  3804  1251  1703               	bsf	3,6	;RP1=1, select bank3
  3805  1252  0842               	movf	(_F2+1)^(0+384),w
  3806  1253  1283               	bcf	3,5	;RP0=0, select bank0
  3807  1254  1303               	bcf	3,6	;RP1=0, select bank0
  3808  1255  00CA               	movwf	?___flmul+1
  3809  1256  1683               	bsf	3,5	;RP0=1, select bank3
  3810  1257  1703               	bsf	3,6	;RP1=1, select bank3
  3811  1258  0841               	movf	_F2^(0+384),w
  3812  1259  1283               	bcf	3,5	;RP0=0, select bank0
  3813  125A  1303               	bcf	3,6	;RP1=0, select bank0
  3814  125B  00C9               	movwf	?___flmul
  3815  125C  1703               	bsf	3,6	;RP1=1, select bank2
  3816  125D  0817               	movf	(_measure_capacitance$8235+3)^(0+256),w
  3817  125E  1303               	bcf	3,6	;RP1=0, select bank0
  3818  125F  00D0               	movwf	?___flmul+7
  3819  1260  1703               	bsf	3,6	;RP1=1, select bank2
  3820  1261  0816               	movf	(_measure_capacitance$8235+2)^(0+256),w
  3821  1262  1303               	bcf	3,6	;RP1=0, select bank0
  3822  1263  00CF               	movwf	?___flmul+6
  3823  1264  1703               	bsf	3,6	;RP1=1, select bank2
  3824  1265  0815               	movf	(_measure_capacitance$8235+1)^(0+256),w
  3825  1266  1303               	bcf	3,6	;RP1=0, select bank0
  3826  1267  00CE               	movwf	?___flmul+5
  3827  1268  1703               	bsf	3,6	;RP1=1, select bank2
  3828  1269  0814               	movf	_measure_capacitance$8235^(0+256),w
  3829  126A  1303               	bcf	3,6	;RP1=0, select bank0
  3830  126B  00CD               	movwf	?___flmul+4
  3831  126C  120A  158A  2640   	fcall	___flmul
      +       160A  118A         
  3832  1271  084C               	movf	?___flmul+3,w
  3833  1272  1703               	bsf	3,6	;RP1=1, select bank2
  3834  1273  009B               	movwf	(_measure_capacitance$8236+3)^(0+256)
  3835  1274  1303               	bcf	3,6	;RP1=0, select bank0
  3836  1275  084B               	movf	?___flmul+2,w
  3837  1276  1703               	bsf	3,6	;RP1=1, select bank2
  3838  1277  009A               	movwf	(_measure_capacitance$8236+2)^(0+256)
  3839  1278  1303               	bcf	3,6	;RP1=0, select bank0
  3840  1279  084A               	movf	?___flmul+1,w
  3841  127A  1703               	bsf	3,6	;RP1=1, select bank2
  3842  127B  0099               	movwf	(_measure_capacitance$8236+1)^(0+256)
  3843  127C  1303               	bcf	3,6	;RP1=0, select bank0
  3844  127D  0849               	movf	?___flmul,w
  3845  127E  1703               	bsf	3,6	;RP1=1, select bank2
  3846  127F  0098               	movwf	_measure_capacitance$8236^(0+256)
  3847                           
  3848                           ;measure.c: 160: Cin = F2 * F2 * (F1 * F1 - F3 * F3) * CCal;
  3849  1280  1683               	bsf	3,5	;RP0=1, select bank3
  3850  1281  0868               	movf	(_CCal+3)^(0+384),w
  3851  1282  1283               	bcf	3,5	;RP0=0, select bank0
  3852  1283  1303               	bcf	3,6	;RP1=0, select bank0
  3853  1284  00CC               	movwf	?___flmul+3
  3854  1285  1683               	bsf	3,5	;RP0=1, select bank3
  3855  1286  1703               	bsf	3,6	;RP1=1, select bank3
  3856  1287  0867               	movf	(_CCal+2)^(0+384),w
  3857  1288  1283               	bcf	3,5	;RP0=0, select bank0
  3858  1289  1303               	bcf	3,6	;RP1=0, select bank0
  3859  128A  00CB               	movwf	?___flmul+2
  3860  128B  1683               	bsf	3,5	;RP0=1, select bank3
  3861  128C  1703               	bsf	3,6	;RP1=1, select bank3
  3862  128D  0866               	movf	(_CCal+1)^(0+384),w
  3863  128E  1283               	bcf	3,5	;RP0=0, select bank0
  3864  128F  1303               	bcf	3,6	;RP1=0, select bank0
  3865  1290  00CA               	movwf	?___flmul+1
  3866  1291  1683               	bsf	3,5	;RP0=1, select bank3
  3867  1292  1703               	bsf	3,6	;RP1=1, select bank3
  3868  1293  0865               	movf	_CCal^(0+384),w
  3869  1294  1283               	bcf	3,5	;RP0=0, select bank0
  3870  1295  1303               	bcf	3,6	;RP1=0, select bank0
  3871  1296  00C9               	movwf	?___flmul
  3872  1297  1703               	bsf	3,6	;RP1=1, select bank2
  3873  1298  081B               	movf	(_measure_capacitance$8236+3)^(0+256),w
  3874  1299  1303               	bcf	3,6	;RP1=0, select bank0
  3875  129A  00D0               	movwf	?___flmul+7
  3876  129B  1703               	bsf	3,6	;RP1=1, select bank2
  3877  129C  081A               	movf	(_measure_capacitance$8236+2)^(0+256),w
  3878  129D  1303               	bcf	3,6	;RP1=0, select bank0
  3879  129E  00CF               	movwf	?___flmul+6
  3880  129F  1703               	bsf	3,6	;RP1=1, select bank2
  3881  12A0  0819               	movf	(_measure_capacitance$8236+1)^(0+256),w
  3882  12A1  1303               	bcf	3,6	;RP1=0, select bank0
  3883  12A2  00CE               	movwf	?___flmul+5
  3884  12A3  1703               	bsf	3,6	;RP1=1, select bank2
  3885  12A4  0818               	movf	_measure_capacitance$8236^(0+256),w
  3886  12A5  1303               	bcf	3,6	;RP1=0, select bank0
  3887  12A6  00CD               	movwf	?___flmul+4
  3888  12A7  120A  158A  2640   	fcall	___flmul
      +       160A  118A         
  3889  12AC  084C               	movf	?___flmul+3,w
  3890  12AD  1703               	bsf	3,6	;RP1=1, select bank2
  3891  12AE  00A2               	movwf	(measure_capacitance@Cin+3)^(0+256)
  3892  12AF  1303               	bcf	3,6	;RP1=0, select bank0
  3893  12B0  084B               	movf	?___flmul+2,w
  3894  12B1  1703               	bsf	3,6	;RP1=1, select bank2
  3895  12B2  00A1               	movwf	(measure_capacitance@Cin+2)^(0+256)
  3896  12B3  1303               	bcf	3,6	;RP1=0, select bank0
  3897  12B4  084A               	movf	?___flmul+1,w
  3898  12B5  1703               	bsf	3,6	;RP1=1, select bank2
  3899  12B6  00A0               	movwf	(measure_capacitance@Cin+1)^(0+256)
  3900  12B7  1303               	bcf	3,6	;RP1=0, select bank0
  3901  12B8  0849               	movf	?___flmul,w
  3902  12B9  1703               	bsf	3,6	;RP1=1, select bank2
  3903  12BA  009F               	movwf	measure_capacitance@Cin^(0+256)
  3904                           
  3905                           ;measure.c: 164: ser_puts("Cin=");
  3906  12BB  308D               	movlw	(STR_14-__stringbase)& (0+255)
  3907  12BC  2420  160A  118A   	fcall	_ser_puts
  3908                           
  3909                           ;measure.c: 165: format_double(Cin);
  3910  12BF  1283               	bcf	3,5	;RP0=0, select bank2
  3911  12C0  1703               	bsf	3,6	;RP1=1, select bank2
  3912  12C1  0822               	movf	(measure_capacitance@Cin+3)^(0+256),w
  3913  12C2  1683               	bsf	3,5	;RP0=1, select bank1
  3914  12C3  1303               	bcf	3,6	;RP1=0, select bank1
  3915  12C4  00DD               	movwf	(?_format_double+3)^(0+128)
  3916  12C5  1283               	bcf	3,5	;RP0=0, select bank2
  3917  12C6  1703               	bsf	3,6	;RP1=1, select bank2
  3918  12C7  0821               	movf	(measure_capacitance@Cin+2)^(0+256),w
  3919  12C8  1683               	bsf	3,5	;RP0=1, select bank1
  3920  12C9  1303               	bcf	3,6	;RP1=0, select bank1
  3921  12CA  00DC               	movwf	(?_format_double+2)^(0+128)
  3922  12CB  1283               	bcf	3,5	;RP0=0, select bank2
  3923  12CC  1703               	bsf	3,6	;RP1=1, select bank2
  3924  12CD  0820               	movf	(measure_capacitance@Cin+1)^(0+256),w
  3925  12CE  1683               	bsf	3,5	;RP0=1, select bank1
  3926  12CF  1303               	bcf	3,6	;RP1=0, select bank1
  3927  12D0  00DB               	movwf	(?_format_double+1)^(0+128)
  3928  12D1  1283               	bcf	3,5	;RP0=0, select bank2
  3929  12D2  1703               	bsf	3,6	;RP1=1, select bank2
  3930  12D3  081F               	movf	measure_capacitance@Cin^(0+256),w
  3931  12D4  1683               	bsf	3,5	;RP0=1, select bank1
  3932  12D5  1303               	bcf	3,6	;RP1=0, select bank1
  3933  12D6  00DA               	movwf	?_format_double^(0+128)
  3934  12D7  246A  160A  118A   	fcall	_format_double
  3935                           
  3936                           ;measure.c: 166: ser_putch(' ');
  3937  12DA  3020               	movlw	32
  3938  12DB  2437  160A  118A   	fcall	_ser_putch
  3939                           
  3940                           ;measure.c: 167: format_xint32(*(uint32_t*)&Cin);
  3941  12DE  1283               	bcf	3,5	;RP0=0, select bank2
  3942  12DF  1703               	bsf	3,6	;RP1=1, select bank2
  3943  12E0  0822               	movf	(measure_capacitance@Cin+3)^(0+256),w
  3944  12E1  1303               	bcf	3,6	;RP1=0, select bank0
  3945  12E2  00D3               	movwf	?_format_xint32+3
  3946  12E3  1703               	bsf	3,6	;RP1=1, select bank2
  3947  12E4  0821               	movf	(measure_capacitance@Cin+2)^(0+256),w
  3948  12E5  1303               	bcf	3,6	;RP1=0, select bank0
  3949  12E6  00D2               	movwf	?_format_xint32+2
  3950  12E7  1703               	bsf	3,6	;RP1=1, select bank2
  3951  12E8  0820               	movf	(measure_capacitance@Cin+1)^(0+256),w
  3952  12E9  1303               	bcf	3,6	;RP1=0, select bank0
  3953  12EA  00D1               	movwf	?_format_xint32+1
  3954  12EB  1703               	bsf	3,6	;RP1=1, select bank2
  3955  12EC  081F               	movf	measure_capacitance@Cin^(0+256),w
  3956  12ED  1303               	bcf	3,6	;RP1=0, select bank0
  3957  12EE  00D0               	movwf	?_format_xint32
  3958  12EF  244C  160A  118A   	fcall	_format_xint32
  3959                           
  3960                           ;measure.c: 168: ser_puts("\r\n");
  3961  12F2  3097               	movlw	(STR_1-__stringbase)& (0+255)
  3962  12F3  2420               	fcall	_ser_puts
  3963                           
  3964                           ;measure.c: 170: if(Cin > 999) {
  3965  12F4  3044               	movlw	68
  3966  12F5  1283               	bcf	3,5	;RP0=0, select bank0
  3967  12F6  1303               	bcf	3,6	;RP1=0, select bank0
  3968  12F7  00A3               	movwf	?___flge+3
  3969  12F8  3079               	movlw	121
  3970  12F9  00A2               	movwf	?___flge+2
  3971  12FA  30C0               	movlw	192
  3972  12FB  00A1               	movwf	?___flge+1
  3973  12FC  01A0               	clrf	?___flge
  3974  12FD  1703               	bsf	3,6	;RP1=1, select bank2
  3975  12FE  0822               	movf	(measure_capacitance@Cin+3)^(0+256),w
  3976  12FF  1303               	bcf	3,6	;RP1=0, select bank0
  3977  1300  00A7               	movwf	?___flge+7
  3978  1301  1703               	bsf	3,6	;RP1=1, select bank2
  3979  1302  0821               	movf	(measure_capacitance@Cin+2)^(0+256),w
  3980  1303  1303               	bcf	3,6	;RP1=0, select bank0
  3981  1304  00A6               	movwf	?___flge+6
  3982  1305  1703               	bsf	3,6	;RP1=1, select bank2
  3983  1306  0820               	movf	(measure_capacitance@Cin+1)^(0+256),w
  3984  1307  1303               	bcf	3,6	;RP1=0, select bank0
  3985  1308  00A5               	movwf	?___flge+5
  3986  1309  1703               	bsf	3,6	;RP1=1, select bank2
  3987  130A  081F               	movf	measure_capacitance@Cin^(0+256),w
  3988  130B  1303               	bcf	3,6	;RP1=0, select bank0
  3989  130C  00A4               	movwf	?___flge+4
  3990  130D  120A  158A  26D8   	fcall	___flge
      +       160A  118A         
  3991  1312  1803               	btfsc	3,0
  3992  1313  2BD3               	goto	l11639
  3993                           
  3994                           ;measure.c: 171: if(Cin > (999e+03l)) {
  3995  1314  3049               	movlw	73
  3996  1315  00A3               	movwf	?___flge+3
  3997  1316  3073               	movlw	115
  3998  1317  00A2               	movwf	?___flge+2
  3999  1318  30E5               	movlw	229
  4000  1319  00A1               	movwf	?___flge+1
  4001  131A  3080               	movlw	128
  4002  131B  00A0               	movwf	?___flge
  4003  131C  1703               	bsf	3,6	;RP1=1, select bank2
  4004  131D  0822               	movf	(measure_capacitance@Cin+3)^(0+256),w
  4005  131E  1303               	bcf	3,6	;RP1=0, select bank0
  4006  131F  00A7               	movwf	?___flge+7
  4007  1320  1703               	bsf	3,6	;RP1=1, select bank2
  4008  1321  0821               	movf	(measure_capacitance@Cin+2)^(0+256),w
  4009  1322  1303               	bcf	3,6	;RP1=0, select bank0
  4010  1323  00A6               	movwf	?___flge+6
  4011  1324  1703               	bsf	3,6	;RP1=1, select bank2
  4012  1325  0820               	movf	(measure_capacitance@Cin+1)^(0+256),w
  4013  1326  1303               	bcf	3,6	;RP1=0, select bank0
  4014  1327  00A5               	movwf	?___flge+5
  4015  1328  1703               	bsf	3,6	;RP1=1, select bank2
  4016  1329  081F               	movf	measure_capacitance@Cin^(0+256),w
  4017  132A  1303               	bcf	3,6	;RP1=0, select bank0
  4018  132B  00A4               	movwf	?___flge+4
  4019  132C  120A  158A  26D8   	fcall	___flge
      +       160A  118A         
  4020  1331  1803               	btfsc	3,0
  4021  1332  2BA9               	goto	l11635
  4022                           
  4023                           ;measure.c: 172: if(Cin > (999e+06l)) {
  4024  1333  304E               	movlw	78
  4025  1334  00A3               	movwf	?___flge+3
  4026  1335  306E               	movlw	110
  4027  1336  00A2               	movwf	?___flge+2
  4028  1337  302E               	movlw	46
  4029  1338  00A1               	movwf	?___flge+1
  4030  1339  301F               	movlw	31
  4031  133A  00A0               	movwf	?___flge
  4032  133B  1703               	bsf	3,6	;RP1=1, select bank2
  4033  133C  0822               	movf	(measure_capacitance@Cin+3)^(0+256),w
  4034  133D  1303               	bcf	3,6	;RP1=0, select bank0
  4035  133E  00A7               	movwf	?___flge+7
  4036  133F  1703               	bsf	3,6	;RP1=1, select bank2
  4037  1340  0821               	movf	(measure_capacitance@Cin+2)^(0+256),w
  4038  1341  1303               	bcf	3,6	;RP1=0, select bank0
  4039  1342  00A6               	movwf	?___flge+6
  4040  1343  1703               	bsf	3,6	;RP1=1, select bank2
  4041  1344  0820               	movf	(measure_capacitance@Cin+1)^(0+256),w
  4042  1345  1303               	bcf	3,6	;RP1=0, select bank0
  4043  1346  00A5               	movwf	?___flge+5
  4044  1347  1703               	bsf	3,6	;RP1=1, select bank2
  4045  1348  081F               	movf	measure_capacitance@Cin^(0+256),w
  4046  1349  1303               	bcf	3,6	;RP1=0, select bank0
  4047  134A  00A4               	movwf	?___flge+4
  4048  134B  120A  158A  26D8   	fcall	___flge
      +       160A  118A         
  4049  1350  1803               	btfsc	3,0
  4050  1351  2B7E               	goto	l11631
  4051                           
  4052                           ;measure.c: 173: Cin = Cin / (1e+09);
  4053  1352  304E               	movlw	78
  4054  1353  00B9               	movwf	?___fldiv+3
  4055  1354  306E               	movlw	110
  4056  1355  00B8               	movwf	?___fldiv+2
  4057  1356  306B               	movlw	107
  4058  1357  00B7               	movwf	?___fldiv+1
  4059  1358  3028               	movlw	40
  4060  1359  00B6               	movwf	?___fldiv
  4061  135A  1703               	bsf	3,6	;RP1=1, select bank2
  4062  135B  0822               	movf	(measure_capacitance@Cin+3)^(0+256),w
  4063  135C  1303               	bcf	3,6	;RP1=0, select bank0
  4064  135D  00BD               	movwf	?___fldiv+7
  4065  135E  1703               	bsf	3,6	;RP1=1, select bank2
  4066  135F  0821               	movf	(measure_capacitance@Cin+2)^(0+256),w
  4067  1360  1303               	bcf	3,6	;RP1=0, select bank0
  4068  1361  00BC               	movwf	?___fldiv+6
  4069  1362  1703               	bsf	3,6	;RP1=1, select bank2
  4070  1363  0820               	movf	(measure_capacitance@Cin+1)^(0+256),w
  4071  1364  1303               	bcf	3,6	;RP1=0, select bank0
  4072  1365  00BB               	movwf	?___fldiv+5
  4073  1366  1703               	bsf	3,6	;RP1=1, select bank2
  4074  1367  081F               	movf	measure_capacitance@Cin^(0+256),w
  4075  1368  1303               	bcf	3,6	;RP1=0, select bank0
  4076  1369  00BA               	movwf	?___fldiv+4
  4077  136A  25E9  160A  118A   	fcall	___fldiv
  4078  136D  0839               	movf	?___fldiv+3,w
  4079  136E  1703               	bsf	3,6	;RP1=1, select bank2
  4080  136F  00A2               	movwf	(measure_capacitance@Cin+3)^(0+256)
  4081  1370  1303               	bcf	3,6	;RP1=0, select bank0
  4082  1371  0838               	movf	?___fldiv+2,w
  4083  1372  1703               	bsf	3,6	;RP1=1, select bank2
  4084  1373  00A1               	movwf	(measure_capacitance@Cin+2)^(0+256)
  4085  1374  1303               	bcf	3,6	;RP1=0, select bank0
  4086  1375  0837               	movf	?___fldiv+1,w
  4087  1376  1703               	bsf	3,6	;RP1=1, select bank2
  4088  1377  00A0               	movwf	(measure_capacitance@Cin+1)^(0+256)
  4089  1378  1303               	bcf	3,6	;RP1=0, select bank0
  4090  1379  0836               	movf	?___fldiv,w
  4091  137A  1703               	bsf	3,6	;RP1=1, select bank2
  4092  137B  009F               	movwf	measure_capacitance@Cin^(0+256)
  4093                           
  4094                           ;measure.c: 174: unit = 4;
  4095  137C  3004               	movlw	4
  4096  137D  2BD5               	goto	L2
  4097  137E                     l11631:	
  4098                           ;measure.c: 175: } else {
  4099                           
  4100                           
  4101                           ;measure.c: 176: Cin = Cin / (1e+06);
  4102  137E  3049               	movlw	73
  4103  137F  00B9               	movwf	?___fldiv+3
  4104  1380  3074               	movlw	116
  4105  1381  00B8               	movwf	?___fldiv+2
  4106  1382  3024               	movlw	36
  4107  1383  00B7               	movwf	?___fldiv+1
  4108  1384  01B6               	clrf	?___fldiv
  4109  1385  1703               	bsf	3,6	;RP1=1, select bank2
  4110  1386  0822               	movf	(measure_capacitance@Cin+3)^(0+256),w
  4111  1387  1303               	bcf	3,6	;RP1=0, select bank0
  4112  1388  00BD               	movwf	?___fldiv+7
  4113  1389  1703               	bsf	3,6	;RP1=1, select bank2
  4114  138A  0821               	movf	(measure_capacitance@Cin+2)^(0+256),w
  4115  138B  1303               	bcf	3,6	;RP1=0, select bank0
  4116  138C  00BC               	movwf	?___fldiv+6
  4117  138D  1703               	bsf	3,6	;RP1=1, select bank2
  4118  138E  0820               	movf	(measure_capacitance@Cin+1)^(0+256),w
  4119  138F  1303               	bcf	3,6	;RP1=0, select bank0
  4120  1390  00BB               	movwf	?___fldiv+5
  4121  1391  1703               	bsf	3,6	;RP1=1, select bank2
  4122  1392  081F               	movf	measure_capacitance@Cin^(0+256),w
  4123  1393  1303               	bcf	3,6	;RP1=0, select bank0
  4124  1394  00BA               	movwf	?___fldiv+4
  4125  1395  25E9  160A  118A   	fcall	___fldiv
  4126  1398  0839               	movf	?___fldiv+3,w
  4127  1399  1703               	bsf	3,6	;RP1=1, select bank2
  4128  139A  00A2               	movwf	(measure_capacitance@Cin+3)^(0+256)
  4129  139B  1303               	bcf	3,6	;RP1=0, select bank0
  4130  139C  0838               	movf	?___fldiv+2,w
  4131  139D  1703               	bsf	3,6	;RP1=1, select bank2
  4132  139E  00A1               	movwf	(measure_capacitance@Cin+2)^(0+256)
  4133  139F  1303               	bcf	3,6	;RP1=0, select bank0
  4134  13A0  0837               	movf	?___fldiv+1,w
  4135  13A1  1703               	bsf	3,6	;RP1=1, select bank2
  4136  13A2  00A0               	movwf	(measure_capacitance@Cin+1)^(0+256)
  4137  13A3  1303               	bcf	3,6	;RP1=0, select bank0
  4138  13A4  0836               	movf	?___fldiv,w
  4139  13A5  1703               	bsf	3,6	;RP1=1, select bank2
  4140  13A6  009F               	movwf	measure_capacitance@Cin^(0+256)
  4141                           
  4142                           ;measure.c: 177: unit = 5;
  4143  13A7  3005               	movlw	5
  4144  13A8  2BD5               	goto	L2
  4145  13A9                     l11635:	
  4146                           
  4147                           ;measure.c: 180: Cin = Cin / 1e+03;
  4148  13A9  3044               	movlw	68
  4149  13AA  00B9               	movwf	?___fldiv+3
  4150  13AB  307A               	movlw	122
  4151  13AC  00B8               	movwf	?___fldiv+2
  4152  13AD  01B7               	clrf	?___fldiv+1
  4153  13AE  01B6               	clrf	?___fldiv
  4154  13AF  1703               	bsf	3,6	;RP1=1, select bank2
  4155  13B0  0822               	movf	(measure_capacitance@Cin+3)^(0+256),w
  4156  13B1  1303               	bcf	3,6	;RP1=0, select bank0
  4157  13B2  00BD               	movwf	?___fldiv+7
  4158  13B3  1703               	bsf	3,6	;RP1=1, select bank2
  4159  13B4  0821               	movf	(measure_capacitance@Cin+2)^(0+256),w
  4160  13B5  1303               	bcf	3,6	;RP1=0, select bank0
  4161  13B6  00BC               	movwf	?___fldiv+6
  4162  13B7  1703               	bsf	3,6	;RP1=1, select bank2
  4163  13B8  0820               	movf	(measure_capacitance@Cin+1)^(0+256),w
  4164  13B9  1303               	bcf	3,6	;RP1=0, select bank0
  4165  13BA  00BB               	movwf	?___fldiv+5
  4166  13BB  1703               	bsf	3,6	;RP1=1, select bank2
  4167  13BC  081F               	movf	measure_capacitance@Cin^(0+256),w
  4168  13BD  1303               	bcf	3,6	;RP1=0, select bank0
  4169  13BE  00BA               	movwf	?___fldiv+4
  4170  13BF  25E9  160A  118A   	fcall	___fldiv
  4171  13C2  0839               	movf	?___fldiv+3,w
  4172  13C3  1703               	bsf	3,6	;RP1=1, select bank2
  4173  13C4  00A2               	movwf	(measure_capacitance@Cin+3)^(0+256)
  4174  13C5  1303               	bcf	3,6	;RP1=0, select bank0
  4175  13C6  0838               	movf	?___fldiv+2,w
  4176  13C7  1703               	bsf	3,6	;RP1=1, select bank2
  4177  13C8  00A1               	movwf	(measure_capacitance@Cin+2)^(0+256)
  4178  13C9  1303               	bcf	3,6	;RP1=0, select bank0
  4179  13CA  0837               	movf	?___fldiv+1,w
  4180  13CB  1703               	bsf	3,6	;RP1=1, select bank2
  4181  13CC  00A0               	movwf	(measure_capacitance@Cin+1)^(0+256)
  4182  13CD  1303               	bcf	3,6	;RP1=0, select bank0
  4183  13CE  0836               	movf	?___fldiv,w
  4184  13CF  1703               	bsf	3,6	;RP1=1, select bank2
  4185  13D0  009F               	movwf	measure_capacitance@Cin^(0+256)
  4186                           
  4187                           ;measure.c: 181: unit = 6;
  4188  13D1  3006               	movlw	6
  4189  13D2  2BD5               	goto	L2
  4190  13D3                     l11639:	
  4191                           
  4192                           ;measure.c: 184: unit = 7;
  4193  13D3  3007               	movlw	7
  4194  13D4  1703               	bsf	3,6	;RP1=1, select bank2
  4195  13D5                     L2:	
  4196  13D5  009C               	movwf	measure_capacitance@unit^(0+256)
  4197                           
  4198                           ;measure.c: 186: Cin = Cin * 100;
  4199  13D6  3042               	movlw	66
  4200  13D7  1303               	bcf	3,6	;RP1=0, select bank0
  4201  13D8  00CC               	movwf	?___flmul+3
  4202  13D9  30C8               	movlw	200
  4203  13DA  00CB               	movwf	?___flmul+2
  4204  13DB  01CA               	clrf	?___flmul+1
  4205  13DC  01C9               	clrf	?___flmul
  4206  13DD  1703               	bsf	3,6	;RP1=1, select bank2
  4207  13DE  0822               	movf	(measure_capacitance@Cin+3)^(0+256),w
  4208  13DF  1303               	bcf	3,6	;RP1=0, select bank0
  4209  13E0  00D0               	movwf	?___flmul+7
  4210  13E1  1703               	bsf	3,6	;RP1=1, select bank2
  4211  13E2  0821               	movf	(measure_capacitance@Cin+2)^(0+256),w
  4212  13E3  1303               	bcf	3,6	;RP1=0, select bank0
  4213  13E4  00CF               	movwf	?___flmul+6
  4214  13E5  1703               	bsf	3,6	;RP1=1, select bank2
  4215  13E6  0820               	movf	(measure_capacitance@Cin+1)^(0+256),w
  4216  13E7  1303               	bcf	3,6	;RP1=0, select bank0
  4217  13E8  00CE               	movwf	?___flmul+5
  4218  13E9  1703               	bsf	3,6	;RP1=1, select bank2
  4219  13EA  081F               	movf	measure_capacitance@Cin^(0+256),w
  4220  13EB  1303               	bcf	3,6	;RP1=0, select bank0
  4221  13EC  00CD               	movwf	?___flmul+4
  4222  13ED  120A  158A  2640   	fcall	___flmul
      +       160A  118A         
  4223  13F2  084C               	movf	?___flmul+3,w
  4224  13F3  1703               	bsf	3,6	;RP1=1, select bank2
  4225  13F4  00A2               	movwf	(measure_capacitance@Cin+3)^(0+256)
  4226  13F5  1303               	bcf	3,6	;RP1=0, select bank0
  4227  13F6  084B               	movf	?___flmul+2,w
  4228  13F7  1703               	bsf	3,6	;RP1=1, select bank2
  4229  13F8  00A1               	movwf	(measure_capacitance@Cin+2)^(0+256)
  4230  13F9  1303               	bcf	3,6	;RP1=0, select bank0
  4231  13FA  084A               	movf	?___flmul+1,w
  4232  13FB  1703               	bsf	3,6	;RP1=1, select bank2
  4233  13FC  00A0               	movwf	(measure_capacitance@Cin+1)^(0+256)
  4234  13FD  1303               	bcf	3,6	;RP1=0, select bank0
  4235  13FE  0849               	movf	?___flmul,w
  4236  13FF  1703               	bsf	3,6	;RP1=1, select bank2
  4237  1400  009F               	movwf	measure_capacitance@Cin^(0+256)
  4238                           
  4239                           ;measure.c: 187: var = (uint16_t)Cin;
  4240  1401  0822               	movf	(measure_capacitance@Cin+3)^(0+256),w
  4241  1402  1303               	bcf	3,6	;RP1=0, select bank0
  4242  1403  00AF               	movwf	?___fltol+3
  4243  1404  1703               	bsf	3,6	;RP1=1, select bank2
  4244  1405  0821               	movf	(measure_capacitance@Cin+2)^(0+256),w
  4245  1406  1303               	bcf	3,6	;RP1=0, select bank0
  4246  1407  00AE               	movwf	?___fltol+2
  4247  1408  1703               	bsf	3,6	;RP1=1, select bank2
  4248  1409  0820               	movf	(measure_capacitance@Cin+1)^(0+256),w
  4249  140A  1303               	bcf	3,6	;RP1=0, select bank0
  4250  140B  00AD               	movwf	?___fltol+1
  4251  140C  1703               	bsf	3,6	;RP1=1, select bank2
  4252  140D  081F               	movf	measure_capacitance@Cin^(0+256),w
  4253  140E  1303               	bcf	3,6	;RP1=0, select bank0
  4254  140F  00AC               	movwf	?___fltol
  4255  1410  2662  160A  118A   	fcall	___fltol
  4256  1413  082D               	movf	?___fltol+1,w
  4257  1414  1703               	bsf	3,6	;RP1=1, select bank2
  4258  1415  009E               	movwf	(measure_capacitance@var+1)^(0+256)
  4259  1416  1303               	bcf	3,6	;RP1=0, select bank0
  4260  1417  082C               	movf	?___fltol,w
  4261  1418  1703               	bsf	3,6	;RP1=1, select bank2
  4262  1419  009D               	movwf	measure_capacitance@var^(0+256)
  4263                           
  4264                           ;measure.c: 189: print_reading(var);
  4265  141A  081E               	movf	(measure_capacitance@var+1)^(0+256),w
  4266  141B  00F5               	movwf	?_print_reading+1
  4267  141C  081D               	movf	measure_capacitance@var^(0+256),w
  4268  141D  00F4               	movwf	?_print_reading
  4269                           
  4270                           ;measure.c: 190: print_unit(unit);
  4271  141E  081C               	movf	measure_capacitance@unit^(0+256),w
  4272  141F  2FFF               	ljmp	l3792
  4273  1420                     __end_of_measure_capacitance:	
  4274  1420                     __ptext1267:	
  4275 ;; =============== function _timer0_read_ps ends ============
  4276                           
  4277                           
  4278 ;; *************** function _ser_puts *****************
  4279 ;; Defined at:
  4280 ;;		line 65 in file "../../../lib/ser.c"
  4281 ;; Parameters:    Size  Location     Type
  4282 ;;  s               1    wreg     PTR const unsigned char 
  4283 ;;		 -> STR_15(3), STR_14(5), STR_13(3), STR_12(8), 
  4284 ;;		 -> STR_11(6), STR_10(6), STR_9(6), STR_8(5), 
  4285 ;;		 -> STR_6(3), STR_5(3), STR_4(3), STR_3(16), 
  4286 ;;		 -> STR_2(16), STR_1(3), 
  4287 ;; Auto vars:     Size  Location     Type
  4288 ;;  s               1    5[COMMON] PTR const unsigned char 
  4289 ;;		 -> STR_15(3), STR_14(5), STR_13(3), STR_12(8), 
  4290 ;;		 -> STR_11(6), STR_10(6), STR_9(6), STR_8(5), 
  4291 ;;		 -> STR_6(3), STR_5(3), STR_4(3), STR_3(16), 
  4292 ;;		 -> STR_2(16), STR_1(3), 
  4293 ;; Return value:  Size  Location     Type
  4294 ;;		None               void
  4295 ;; Registers used:
  4296 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4297 ;; Tracked objects:
  4298 ;;		On entry : 0/20
  4299 ;;		On exit  : 0/0
  4300 ;;		Unchanged: FFE9F/0
  4301 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4302 ;;      Params:         0       0       0       0       0
  4303 ;;      Locals:         1       0       0       0       0
  4304 ;;      Temps:          0       0       0       0       0
  4305 ;;      Totals:         1       0       0       0       0
  4306 ;;Total ram usage:        1 bytes
  4307 ;; Hardware stack levels used:    1
  4308 ;; Hardware stack levels required when called:    2
  4309 ;; This function calls:
  4310 ;;		_ser_putch
  4311 ;; This function is called by:
  4312 ;;		_print_buffer
  4313 ;;		_main
  4314 ;;		_calibrate
  4315 ;;		_measure_capacitance
  4316 ;; This function uses a non-reentrant model
  4317 ;;
  4318  1420                     _ser_puts:	
  4319                           
  4320                           ; Regs used in _ser_puts: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4321                           ;ser_puts@s stored from wreg
  4322  1420  00F5               	movwf	ser_puts@s
  4323  1421                     l10955:	
  4324                           ;ser.c: 66: while(*s) ser_putch(*s++);
  4325                           
  4326  1421  0875               	movf	ser_puts@s,w
  4327  1422  0084               	movwf	4
  4328  1423  120A  118A  2600   	fcall	stringdir
      +       160A  118A         
  4329  1428  3800               	iorlw	0
  4330  1429  1903               	btfsc	3,2
  4331  142A  0008               	return
  4332  142B  0875               	movf	ser_puts@s,w
  4333  142C  0084               	movwf	4
  4334  142D  120A  118A  2600   	fcall	stringdir
      +       160A  118A         
  4335  1432  2437  160A  118A   	fcall	_ser_putch
  4336  1435  0AF5               	incf	ser_puts@s,f
  4337  1436  2C21               	goto	l10955
  4338  1437                     __end_of_ser_puts:	
  4339  1437                     __ptext1283:	
  4340 ;; =============== function _ser_init ends ============
  4341                           
  4342                           
  4343 ;; *************** function _ser_putch *****************
  4344 ;; Defined at:
  4345 ;;		line 55 in file "../../../lib/ser.c"
  4346 ;; Parameters:    Size  Location     Type
  4347 ;;  c               1    wreg     unsigned char 
  4348 ;; Auto vars:     Size  Location     Type
  4349 ;;  c               1    4[COMMON] unsigned char 
  4350 ;; Return value:  Size  Location     Type
  4351 ;;		None               void
  4352 ;; Registers used:
  4353 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  4354 ;; Tracked objects:
  4355 ;;		On entry : 0/0
  4356 ;;		On exit  : 160/120
  4357 ;;		Unchanged: FFE9F/0
  4358 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4359 ;;      Params:         0       0       0       0       0
  4360 ;;      Locals:         1       0       0       0       0
  4361 ;;      Temps:          0       0       0       0       0
  4362 ;;      Totals:         1       0       0       0       0
  4363 ;;Total ram usage:        1 bytes
  4364 ;; Hardware stack levels used:    1
  4365 ;; Hardware stack levels required when called:    1
  4366 ;; This function calls:
  4367 ;;		Nothing
  4368 ;; This function is called by:
  4369 ;;		_ser_puts
  4370 ;;		_print_buffer
  4371 ;;		_measure_capacitance
  4372 ;; This function uses a non-reentrant model
  4373 ;;
  4374  1437                     _ser_putch:	
  4375                           
  4376                           ; Regs used in _ser_putch: [wreg-fsr0h+status,2+status,0]
  4377                           ;ser_putch@c stored from wreg
  4378  1437  00F4               	movwf	ser_putch@c
  4379  1438                     l10763:	
  4380                           ;ser.c: 56: while(((txiptr + 1) & ((uint8_t)16 - 1)) == txoptr) continue;
  4381                           
  4382  1438  0A78               	incf	_txiptr,w	;volatile
  4383  1439  390F               	andlw	15
  4384  143A  0679               	xorwf	_txoptr,w	;volatile
  4385  143B  1903               	skipnz
  4386  143C  2C38               	goto	l10763
  4387                           
  4388                           ;ser.c: 57: GIE = 0;
  4389  143D  138B               	bcf	11,7
  4390                           
  4391                           ;ser.c: 58: txfifo[txiptr] = c;
  4392  143E  0878               	movf	_txiptr,w
  4393  143F  3EB1               	addlw	_txfifo& (0+255)
  4394  1440  0084               	movwf	4
  4395  1441  0874               	movf	ser_putch@c,w
  4396  1442  1783               	bsf	3,7	;select IRP bank3
  4397  1443  0080               	movwf	0
  4398                           
  4399                           ;ser.c: 59: txiptr = (txiptr + 1) & ((uint8_t)16 - 1);
  4400  1444  0AF8               	incf	_txiptr,f	;volatile
  4401  1445  300F               	movlw	15
  4402  1446  05F8               	andwf	_txiptr,f	;volatile
  4403                           
  4404                           ;ser.c: 60: TXIE = 1;
  4405  1447  1683               	bsf	3,5	;RP0=1, select bank1
  4406  1448  1303               	bcf	3,6	;RP1=0, select bank1
  4407  1449  160C               	bsf	12,4
  4408                           
  4409                           ;ser.c: 61: GIE = 1;
  4410  144A  178B               	bsf	11,7
  4411  144B  0008               	return
  4412  144C                     __end_of_ser_putch:	
  4413  144C                     __ptext1255:	
  4414 ;; =============== function _floor ends ============
  4415                           
  4416                           
  4417 ;; *************** function _format_xint32 *****************
  4418 ;; Defined at:
  4419 ;;		line 51 in file "../../../lib/format.c"
  4420 ;; Parameters:    Size  Location     Type
  4421 ;;  x               4   48[BANK0 ] unsigned long 
  4422 ;; Auto vars:     Size  Location     Type
  4423 ;;		None
  4424 ;; Return value:  Size  Location     Type
  4425 ;;		None               void
  4426 ;; Registers used:
  4427 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4428 ;; Tracked objects:
  4429 ;;		On entry : 60/0
  4430 ;;		On exit  : 60/0
  4431 ;;		Unchanged: FFE00/0
  4432 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4433 ;;      Params:         0       4       0       0       0
  4434 ;;      Locals:         0       0       0       0       0
  4435 ;;      Temps:          0       0       0       0       0
  4436 ;;      Totals:         0       4       0       0       0
  4437 ;;Total ram usage:        4 bytes
  4438 ;; Hardware stack levels used:    1
  4439 ;; Hardware stack levels required when called:    3
  4440 ;; This function calls:
  4441 ;;		_buffer_putch
  4442 ;;		_format_number
  4443 ;; This function is called by:
  4444 ;;		_measure_capacitance
  4445 ;; This function uses a non-reentrant model
  4446 ;;
  4447  144C                     _format_xint32:	
  4448                           
  4449                           ;format.c: 52: buffer_putch('0');
  4450                           
  4451                           ; Regs used in _format_xint32: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4452  144C  3030               	movlw	48
  4453  144D  25B5  160A  118A   	fcall	_buffer_putch
  4454                           
  4455                           ;format.c: 53: buffer_putch('x');
  4456  1450  3078               	movlw	120
  4457  1451  25B5  160A  118A   	fcall	_buffer_putch
  4458                           
  4459                           ;format.c: 54: format_number((uint16_t)(x >> 16), 16, -4);
  4460  1454  1283               	bcf	3,5	;RP0=0, select bank0
  4461  1455  1303               	bcf	3,6	;RP1=0, select bank0
  4462  1456  0853               	movf	format_xint32@x+3,w
  4463  1457  00A8               	movwf	?_format_number+1
  4464  1458  0852               	movf	format_xint32@x+2,w
  4465  1459  00A7               	movwf	?_format_number
  4466  145A  3010               	movlw	16
  4467  145B  00A9               	movwf	?_format_number+2
  4468  145C  30FC               	movlw	-4
  4469  145D  00AA               	movwf	?_format_number+3
  4470  145E  270A  160A  118A   	fcall	_format_number
  4471                           
  4472                           ;format.c: 55: format_number((uint16_t)(x & 0xffff), 16, -4);
  4473  1461  0851               	movf	format_xint32@x+1,w
  4474  1462  00A8               	movwf	?_format_number+1
  4475  1463  0850               	movf	format_xint32@x,w
  4476  1464  00A7               	movwf	?_format_number
  4477  1465  3010               	movlw	16
  4478  1466  00A9               	movwf	?_format_number+2
  4479  1467  30FC               	movlw	-4
  4480  1468  00AA               	movwf	?_format_number+3
  4481  1469  2F0A               	ljmp	l10987
  4482  146A                     __end_of_format_xint32:	
  4483  146A                     __ptext1244:	
  4484 ;; =============== function _measure_capacitance ends ============
  4485                           
  4486                           
  4487 ;; *************** function _format_double *****************
  4488 ;; Defined at:
  4489 ;;		line 77 in file "../../../lib/format.c"
  4490 ;; Parameters:    Size  Location     Type
  4491 ;;  num             4   58[BANK1 ] unsigned char 
  4492 ;; Auto vars:     Size  Location     Type
  4493 ;;  weight          4    4[BANK3 ] unsigned char 
  4494 ;;  m               2   10[BANK3 ] short 
  4495 ;;  digit           2    8[BANK3 ] short 
  4496 ;; Return value:  Size  Location     Type
  4497 ;;		None               void
  4498 ;; Registers used:
  4499 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4500 ;; Tracked objects:
  4501 ;;		On entry : 60/20
  4502 ;;		On exit  : 60/0
  4503 ;;		Unchanged: FFE00/0
  4504 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4505 ;;      Params:         0       0       4       0       0
  4506 ;;      Locals:         0       0       0      12       0
  4507 ;;      Temps:          0       0       0       0       0
  4508 ;;      Totals:         0       0       4      12       0
  4509 ;;Total ram usage:       16 bytes
  4510 ;; Hardware stack levels used:    1
  4511 ;; Hardware stack levels required when called:    6
  4512 ;; This function calls:
  4513 ;;		_log10
  4514 ;;		___fltol
  4515 ;;		___awtofl
  4516 ;;		_pow
  4517 ;;		___fldiv
  4518 ;;		_floor
  4519 ;;		___flmul
  4520 ;;		___flsub
  4521 ;;		_buffer_putch
  4522 ;;		___flge
  4523 ;; This function is called by:
  4524 ;;		_measure_capacitance
  4525 ;; This function uses a non-reentrant model
  4526 ;;
  4527  146A                     _format_double:	
  4528                           
  4529                           ;format.c: 78: short m = (short)log10(num);
  4530                           
  4531                           ; Regs used in _format_double: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4532  146A  085D               	movf	(format_double@num+3)^(0+128),w
  4533  146B  00C1               	movwf	(?_log10+3)^(0+128)
  4534  146C  085C               	movf	(format_double@num+2)^(0+128),w
  4535  146D  00C0               	movwf	(?_log10+2)^(0+128)
  4536  146E  085B               	movf	(format_double@num+1)^(0+128),w
  4537  146F  00BF               	movwf	(?_log10+1)^(0+128)
  4538  1470  085A               	movf	format_double@num^(0+128),w
  4539  1471  00BE               	movwf	?_log10^(0+128)
  4540  1472  120A  118A  2328   	fcall	_log10
      +       160A  118A         
  4541  1477  0841               	movf	(?_log10+3)^(0+128),w
  4542  1478  1283               	bcf	3,5	;RP0=0, select bank0
  4543  1479  00AF               	movwf	?___fltol+3
  4544  147A  1683               	bsf	3,5	;RP0=1, select bank1
  4545  147B  0840               	movf	(?_log10+2)^(0+128),w
  4546  147C  1283               	bcf	3,5	;RP0=0, select bank0
  4547  147D  00AE               	movwf	?___fltol+2
  4548  147E  1683               	bsf	3,5	;RP0=1, select bank1
  4549  147F  083F               	movf	(?_log10+1)^(0+128),w
  4550  1480  1283               	bcf	3,5	;RP0=0, select bank0
  4551  1481  00AD               	movwf	?___fltol+1
  4552  1482  1683               	bsf	3,5	;RP0=1, select bank1
  4553  1483  083E               	movf	?_log10^(0+128),w
  4554  1484  1283               	bcf	3,5	;RP0=0, select bank0
  4555  1485  00AC               	movwf	?___fltol
  4556  1486  2662               	fcall	___fltol
  4557  1487  082D               	movf	?___fltol+1,w
  4558  1488  1683               	bsf	3,5	;RP0=1, select bank3
  4559  1489  1703               	bsf	3,6	;RP1=1, select bank3
  4560  148A  00E4               	movwf	(format_double@m+1)^(0+384)
  4561  148B  1283               	bcf	3,5	;RP0=0, select bank0
  4562  148C  1303               	bcf	3,6	;RP1=0, select bank0
  4563  148D  082C               	movf	?___fltol,w
  4564  148E  1683               	bsf	3,5	;RP0=1, select bank3
  4565  148F  1703               	bsf	3,6	;RP1=1, select bank3
  4566  1490  00E3               	movwf	format_double@m^(0+384)
  4567  1491                     l11557:	
  4568                           ;format.c: 79: short digit;
  4569                           ;format.c: 82: while(num > 0 + (sizeof(double) == sizeof(float) ? 3.05176e-05 : 1.192092
      +                          90e-07)) {
  4570                           
  4571  1491  3038               	movlw	56
  4572  1492  1283               	bcf	3,5	;RP0=0, select bank0
  4573  1493  1303               	bcf	3,6	;RP1=0, select bank0
  4574  1494  00A3               	movwf	?___flge+3
  4575  1495  3006               	movlw	6
  4576  1496  01A2               	clrf	?___flge+2
  4577  1497  01A1               	clrf	?___flge+1
  4578  1498  00A0               	movwf	?___flge
  4579  1499  1683               	bsf	3,5	;RP0=1, select bank1
  4580  149A  085D               	movf	(format_double@num+3)^(0+128),w
  4581  149B  1283               	bcf	3,5	;RP0=0, select bank0
  4582  149C  00A7               	movwf	?___flge+7
  4583  149D  1683               	bsf	3,5	;RP0=1, select bank1
  4584  149E  085C               	movf	(format_double@num+2)^(0+128),w
  4585  149F  1283               	bcf	3,5	;RP0=0, select bank0
  4586  14A0  00A6               	movwf	?___flge+6
  4587  14A1  1683               	bsf	3,5	;RP0=1, select bank1
  4588  14A2  085B               	movf	(format_double@num+1)^(0+128),w
  4589  14A3  1283               	bcf	3,5	;RP0=0, select bank0
  4590  14A4  00A5               	movwf	?___flge+5
  4591  14A5  1683               	bsf	3,5	;RP0=1, select bank1
  4592  14A6  085A               	movf	format_double@num^(0+128),w
  4593  14A7  1283               	bcf	3,5	;RP0=0, select bank0
  4594  14A8  00A4               	movwf	?___flge+4
  4595  14A9  120A  158A  26D8   	fcall	___flge
      +       160A  118A         
  4596  14AE  1803               	btfsc	3,0
  4597  14AF  0008               	return
  4598                           
  4599                           ;format.c: 83: double weight = pow(10.0l, m);
  4600  14B0  1683               	bsf	3,5	;RP0=1, select bank3
  4601  14B1  1703               	bsf	3,6	;RP1=1, select bank3
  4602  14B2  0864               	movf	(format_double@m+1)^(0+384),w
  4603  14B3  1283               	bcf	3,5	;RP0=0, select bank0
  4604  14B4  1303               	bcf	3,6	;RP1=0, select bank0
  4605  14B5  00B7               	movwf	?___awtofl+1
  4606  14B6  1683               	bsf	3,5	;RP0=1, select bank3
  4607  14B7  1703               	bsf	3,6	;RP1=1, select bank3
  4608  14B8  0863               	movf	format_double@m^(0+384),w
  4609  14B9  1283               	bcf	3,5	;RP0=0, select bank0
  4610  14BA  1303               	bcf	3,6	;RP1=0, select bank0
  4611  14BB  00B6               	movwf	?___awtofl
  4612  14BC  26B9  160A  118A   	fcall	___awtofl
  4613  14BF  0839               	movf	?___awtofl+3,w
  4614  14C0  1683               	bsf	3,5	;RP0=1, select bank3
  4615  14C1  1703               	bsf	3,6	;RP1=1, select bank3
  4616  14C2  00DC               	movwf	(_format_double$8233+3)^(0+384)
  4617  14C3  1283               	bcf	3,5	;RP0=0, select bank0
  4618  14C4  1303               	bcf	3,6	;RP1=0, select bank0
  4619  14C5  0838               	movf	?___awtofl+2,w
  4620  14C6  1683               	bsf	3,5	;RP0=1, select bank3
  4621  14C7  1703               	bsf	3,6	;RP1=1, select bank3
  4622  14C8  00DB               	movwf	(_format_double$8233+2)^(0+384)
  4623  14C9  1283               	bcf	3,5	;RP0=0, select bank0
  4624  14CA  1303               	bcf	3,6	;RP1=0, select bank0
  4625  14CB  0837               	movf	?___awtofl+1,w
  4626  14CC  1683               	bsf	3,5	;RP0=1, select bank3
  4627  14CD  1703               	bsf	3,6	;RP1=1, select bank3
  4628  14CE  00DA               	movwf	(_format_double$8233+1)^(0+384)
  4629  14CF  1283               	bcf	3,5	;RP0=0, select bank0
  4630  14D0  1303               	bcf	3,6	;RP1=0, select bank0
  4631  14D1  0836               	movf	?___awtofl,w
  4632  14D2  1683               	bsf	3,5	;RP0=1, select bank3
  4633  14D3  1703               	bsf	3,6	;RP1=1, select bank3
  4634  14D4  00D9               	movwf	_format_double$8233^(0+384)
  4635                           
  4636                           ;format.c: 83: double weight = pow(10.0l, m);
  4637  14D5  3041               	movlw	65
  4638  14D6  1303               	bcf	3,6	;RP1=0, select bank1
  4639  14D7  00CC               	movwf	(?_pow+3)^(0+128)
  4640  14D8  3020               	movlw	32
  4641  14D9  00CB               	movwf	(?_pow+2)^(0+128)
  4642  14DA  01CA               	clrf	(?_pow+1)^(0+128)
  4643  14DB  01C9               	clrf	?_pow^(0+128)
  4644  14DC  1703               	bsf	3,6	;RP1=1, select bank3
  4645  14DD  085C               	movf	(_format_double$8233+3)^(0+384),w
  4646  14DE  1303               	bcf	3,6	;RP1=0, select bank1
  4647  14DF  00D0               	movwf	((?_pow+3)^(0+128)+4)
  4648  14E0  1703               	bsf	3,6	;RP1=1, select bank3
  4649  14E1  085B               	movf	(_format_double$8233+2)^(0+384),w
  4650  14E2  1303               	bcf	3,6	;RP1=0, select bank1
  4651  14E3  00CF               	movwf	((?_pow+2)^(0+128)+4)
  4652  14E4  1703               	bsf	3,6	;RP1=1, select bank3
  4653  14E5  085A               	movf	(_format_double$8233+1)^(0+384),w
  4654  14E6  1303               	bcf	3,6	;RP1=0, select bank1
  4655  14E7  00CE               	movwf	((?_pow+1)^(0+128)+4)
  4656  14E8  1703               	bsf	3,6	;RP1=1, select bank3
  4657  14E9  0859               	movf	_format_double$8233^(0+384),w
  4658  14EA  1303               	bcf	3,6	;RP1=0, select bank1
  4659  14EB  00CD               	movwf	(?_pow^(0+128)+4)
  4660  14EC  120A  118A  2365   	fcall	_pow
      +       160A  118A         
  4661  14F1  084C               	movf	(?_pow+3)^(0+128),w
  4662  14F2  1703               	bsf	3,6	;RP1=1, select bank3
  4663  14F3  00E0               	movwf	(format_double@weight+3)^(0+384)
  4664  14F4  1303               	bcf	3,6	;RP1=0, select bank1
  4665  14F5  084B               	movf	(?_pow+2)^(0+128),w
  4666  14F6  1703               	bsf	3,6	;RP1=1, select bank3
  4667  14F7  00DF               	movwf	(format_double@weight+2)^(0+384)
  4668  14F8  1303               	bcf	3,6	;RP1=0, select bank1
  4669  14F9  084A               	movf	(?_pow+1)^(0+128),w
  4670  14FA  1703               	bsf	3,6	;RP1=1, select bank3
  4671  14FB  00DE               	movwf	(format_double@weight+1)^(0+384)
  4672  14FC  1303               	bcf	3,6	;RP1=0, select bank1
  4673  14FD  0849               	movf	?_pow^(0+128),w
  4674  14FE  1703               	bsf	3,6	;RP1=1, select bank3
  4675  14FF  00DD               	movwf	format_double@weight^(0+384)
  4676                           
  4677                           ;format.c: 84: digit = (short)floor(num / weight);
  4678  1500  1303               	bcf	3,6	;RP1=0, select bank1
  4679  1501  085D               	movf	(format_double@num+3)^(0+128),w
  4680  1502  1283               	bcf	3,5	;RP0=0, select bank0
  4681  1503  00BD               	movwf	?___fldiv+7
  4682  1504  1683               	bsf	3,5	;RP0=1, select bank1
  4683  1505  085C               	movf	(format_double@num+2)^(0+128),w
  4684  1506  1283               	bcf	3,5	;RP0=0, select bank0
  4685  1507  00BC               	movwf	?___fldiv+6
  4686  1508  1683               	bsf	3,5	;RP0=1, select bank1
  4687  1509  085B               	movf	(format_double@num+1)^(0+128),w
  4688  150A  1283               	bcf	3,5	;RP0=0, select bank0
  4689  150B  00BB               	movwf	?___fldiv+5
  4690  150C  1683               	bsf	3,5	;RP0=1, select bank1
  4691  150D  085A               	movf	format_double@num^(0+128),w
  4692  150E  1283               	bcf	3,5	;RP0=0, select bank0
  4693  150F  00BA               	movwf	?___fldiv+4
  4694  1510  1683               	bsf	3,5	;RP0=1, select bank3
  4695  1511  1703               	bsf	3,6	;RP1=1, select bank3
  4696  1512  0860               	movf	(format_double@weight+3)^(0+384),w
  4697  1513  1283               	bcf	3,5	;RP0=0, select bank0
  4698  1514  1303               	bcf	3,6	;RP1=0, select bank0
  4699  1515  00B9               	movwf	?___fldiv+3
  4700  1516  1683               	bsf	3,5	;RP0=1, select bank3
  4701  1517  1703               	bsf	3,6	;RP1=1, select bank3
  4702  1518  085F               	movf	(format_double@weight+2)^(0+384),w
  4703  1519  1283               	bcf	3,5	;RP0=0, select bank0
  4704  151A  1303               	bcf	3,6	;RP1=0, select bank0
  4705  151B  00B8               	movwf	?___fldiv+2
  4706  151C  1683               	bsf	3,5	;RP0=1, select bank3
  4707  151D  1703               	bsf	3,6	;RP1=1, select bank3
  4708  151E  085E               	movf	(format_double@weight+1)^(0+384),w
  4709  151F  1283               	bcf	3,5	;RP0=0, select bank0
  4710  1520  1303               	bcf	3,6	;RP1=0, select bank0
  4711  1521  00B7               	movwf	?___fldiv+1
  4712  1522  1683               	bsf	3,5	;RP0=1, select bank3
  4713  1523  1703               	bsf	3,6	;RP1=1, select bank3
  4714  1524  085D               	movf	format_double@weight^(0+384),w
  4715  1525  1283               	bcf	3,5	;RP0=0, select bank0
  4716  1526  1303               	bcf	3,6	;RP1=0, select bank0
  4717  1527  00B6               	movwf	?___fldiv
  4718  1528  25E9               	fcall	___fldiv
  4719  1529  0839               	movf	?___fldiv+3,w
  4720  152A  00EE               	movwf	?_floor+3
  4721  152B  0838               	movf	?___fldiv+2,w
  4722  152C  00ED               	movwf	?_floor+2
  4723  152D  0837               	movf	?___fldiv+1,w
  4724  152E  00EC               	movwf	?_floor+1
  4725  152F  0836               	movf	?___fldiv,w
  4726  1530  00EB               	movwf	?_floor
  4727  1531  120A  118A  224D   	fcall	_floor
      +       160A  118A         
  4728  1536  1283               	bcf	3,5	;RP0=0, select bank0
  4729  1537  086E               	movf	?_floor+3,w
  4730  1538  00AF               	movwf	?___fltol+3
  4731  1539  086D               	movf	?_floor+2,w
  4732  153A  00AE               	movwf	?___fltol+2
  4733  153B  086C               	movf	?_floor+1,w
  4734  153C  00AD               	movwf	?___fltol+1
  4735  153D  086B               	movf	?_floor,w
  4736  153E  00AC               	movwf	?___fltol
  4737  153F  2662  160A  118A   	fcall	___fltol
  4738  1542  082D               	movf	?___fltol+1,w
  4739  1543  1683               	bsf	3,5	;RP0=1, select bank3
  4740  1544  1703               	bsf	3,6	;RP1=1, select bank3
  4741  1545  00E2               	movwf	(format_double@digit+1)^(0+384)
  4742  1546  1283               	bcf	3,5	;RP0=0, select bank0
  4743  1547  1303               	bcf	3,6	;RP1=0, select bank0
  4744  1548  082C               	movf	?___fltol,w
  4745  1549  1683               	bsf	3,5	;RP0=1, select bank3
  4746  154A  1703               	bsf	3,6	;RP1=1, select bank3
  4747  154B  00E1               	movwf	format_double@digit^(0+384)
  4748                           
  4749                           ;format.c: 85: num -= (digit * weight);
  4750  154C  0862               	movf	(format_double@digit+1)^(0+384),w
  4751  154D  1283               	bcf	3,5	;RP0=0, select bank0
  4752  154E  1303               	bcf	3,6	;RP1=0, select bank0
  4753  154F  00B7               	movwf	?___awtofl+1
  4754  1550  1683               	bsf	3,5	;RP0=1, select bank3
  4755  1551  1703               	bsf	3,6	;RP1=1, select bank3
  4756  1552  0861               	movf	format_double@digit^(0+384),w
  4757  1553  1283               	bcf	3,5	;RP0=0, select bank0
  4758  1554  1303               	bcf	3,6	;RP1=0, select bank0
  4759  1555  00B6               	movwf	?___awtofl
  4760  1556  26B9               	fcall	___awtofl
  4761  1557  0839               	movf	?___awtofl+3,w
  4762  1558  00D0               	movwf	?___flmul+7
  4763  1559  0838               	movf	?___awtofl+2,w
  4764  155A  00CF               	movwf	?___flmul+6
  4765  155B  0837               	movf	?___awtofl+1,w
  4766  155C  00CE               	movwf	?___flmul+5
  4767  155D  0836               	movf	?___awtofl,w
  4768  155E  00CD               	movwf	?___flmul+4
  4769  155F  1683               	bsf	3,5	;RP0=1, select bank3
  4770  1560  1703               	bsf	3,6	;RP1=1, select bank3
  4771  1561  0860               	movf	(format_double@weight+3)^(0+384),w
  4772  1562  1283               	bcf	3,5	;RP0=0, select bank0
  4773  1563  1303               	bcf	3,6	;RP1=0, select bank0
  4774  1564  00CC               	movwf	?___flmul+3
  4775  1565  1683               	bsf	3,5	;RP0=1, select bank3
  4776  1566  1703               	bsf	3,6	;RP1=1, select bank3
  4777  1567  085F               	movf	(format_double@weight+2)^(0+384),w
  4778  1568  1283               	bcf	3,5	;RP0=0, select bank0
  4779  1569  1303               	bcf	3,6	;RP1=0, select bank0
  4780  156A  00CB               	movwf	?___flmul+2
  4781  156B  1683               	bsf	3,5	;RP0=1, select bank3
  4782  156C  1703               	bsf	3,6	;RP1=1, select bank3
  4783  156D  085E               	movf	(format_double@weight+1)^(0+384),w
  4784  156E  1283               	bcf	3,5	;RP0=0, select bank0
  4785  156F  1303               	bcf	3,6	;RP1=0, select bank0
  4786  1570  00CA               	movwf	?___flmul+1
  4787  1571  1683               	bsf	3,5	;RP0=1, select bank3
  4788  1572  1703               	bsf	3,6	;RP1=1, select bank3
  4789  1573  085D               	movf	format_double@weight^(0+384),w
  4790  1574  1283               	bcf	3,5	;RP0=0, select bank0
  4791  1575  1303               	bcf	3,6	;RP1=0, select bank0
  4792  1576  00C9               	movwf	?___flmul
  4793  1577  120A  158A  2640   	fcall	___flmul
      +       160A  118A         
  4794  157C  084C               	movf	?___flmul+3,w
  4795  157D  1683               	bsf	3,5	;RP0=1, select bank1
  4796  157E  00A3               	movwf	(?___flsub+3)^(0+128)
  4797  157F  1283               	bcf	3,5	;RP0=0, select bank0
  4798  1580  084B               	movf	?___flmul+2,w
  4799  1581  1683               	bsf	3,5	;RP0=1, select bank1
  4800  1582  00A2               	movwf	(?___flsub+2)^(0+128)
  4801  1583  1283               	bcf	3,5	;RP0=0, select bank0
  4802  1584  084A               	movf	?___flmul+1,w
  4803  1585  1683               	bsf	3,5	;RP0=1, select bank1
  4804  1586  00A1               	movwf	(?___flsub+1)^(0+128)
  4805  1587  1283               	bcf	3,5	;RP0=0, select bank0
  4806  1588  0849               	movf	?___flmul,w
  4807  1589  1683               	bsf	3,5	;RP0=1, select bank1
  4808  158A  00A0               	movwf	?___flsub^(0+128)
  4809  158B  085D               	movf	(format_double@num+3)^(0+128),w
  4810  158C  00A7               	movwf	((?___flsub+3)^(0+128)+4)
  4811  158D  085C               	movf	(format_double@num+2)^(0+128),w
  4812  158E  00A6               	movwf	((?___flsub+2)^(0+128)+4)
  4813  158F  085B               	movf	(format_double@num+1)^(0+128),w
  4814  1590  00A5               	movwf	((?___flsub+1)^(0+128)+4)
  4815  1591  085A               	movf	format_double@num^(0+128),w
  4816  1592  00A4               	movwf	(?___flsub^(0+128)+4)
  4817  1593  26D6  160A  118A   	fcall	___flsub
  4818  1596  0823               	movf	(?___flsub+3)^(0+128),w
  4819  1597  00DD               	movwf	(format_double@num+3)^(0+128)
  4820  1598  0822               	movf	(?___flsub+2)^(0+128),w
  4821  1599  00DC               	movwf	(format_double@num+2)^(0+128)
  4822  159A  0821               	movf	(?___flsub+1)^(0+128),w
  4823  159B  00DB               	movwf	(format_double@num+1)^(0+128)
  4824  159C  0820               	movf	?___flsub^(0+128),w
  4825  159D  00DA               	movwf	format_double@num^(0+128)
  4826                           
  4827                           ;format.c: 86: buffer_putch((char)('0' + digit));
  4828  159E  1703               	bsf	3,6	;RP1=1, select bank3
  4829  159F  0861               	movf	format_double@digit^(0+384),w
  4830  15A0  3E30               	addlw	48
  4831  15A1  25B5  160A  118A   	fcall	_buffer_putch
  4832                           
  4833                           ;format.c: 87: if(m == 0)
  4834  15A4  1683               	bsf	3,5	;RP0=1, select bank3
  4835  15A5  1703               	bsf	3,6	;RP1=1, select bank3
  4836  15A6  0864               	movf	(format_double@m+1)^(0+384),w
  4837  15A7  0463               	iorwf	format_double@m^(0+384),w
  4838  15A8  1D03               	skipz
  4839  15A9  2DAE               	goto	l11555
  4840                           
  4841                           ;format.c: 88: buffer_putch('.');
  4842  15AA  302E               	movlw	46
  4843  15AB  25B5  160A  118A   	fcall	_buffer_putch
  4844  15AE                     l11555:	
  4845                           
  4846                           ;format.c: 89: m--;
  4847  15AE  30FF               	movlw	-1
  4848  15AF  1683               	bsf	3,5	;RP0=1, select bank3
  4849  15B0  1703               	bsf	3,6	;RP1=1, select bank3
  4850  15B1  07E3               	addwf	format_double@m^(0+384),f
  4851  15B2  1C03               	skipc
  4852  15B3  03E4               	decf	(format_double@m+1)^(0+384),f
  4853  15B4  2C91               	goto	l11557
  4854  15B5                     __end_of_format_double:	
  4855  15B5                     __ptext1284:	
  4856 ;; =============== function _ser_putch ends ============
  4857                           
  4858                           
  4859 ;; *************** function _buffer_putch *****************
  4860 ;; Defined at:
  4861 ;;		line 30 in file "../../../lib/buffer.c"
  4862 ;; Parameters:    Size  Location     Type
  4863 ;;  ch              1    wreg     unsigned char 
  4864 ;; Auto vars:     Size  Location     Type
  4865 ;;  ch              1    4[COMMON] unsigned char 
  4866 ;; Return value:  Size  Location     Type
  4867 ;;                  1    wreg      unsigned char 
  4868 ;; Registers used:
  4869 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
  4870 ;; Tracked objects:
  4871 ;;		On entry : 0/60
  4872 ;;		On exit  : 0/0
  4873 ;;		Unchanged: FFE00/0
  4874 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4875 ;;      Params:         0       0       0       0       0
  4876 ;;      Locals:         1       0       0       0       0
  4877 ;;      Temps:          0       3       0       0       0
  4878 ;;      Totals:         1       3       0       0       0
  4879 ;;Total ram usage:        4 bytes
  4880 ;; Hardware stack levels used:    1
  4881 ;; Hardware stack levels required when called:    1
  4882 ;; This function calls:
  4883 ;;		Nothing
  4884 ;; This function is called by:
  4885 ;;		_buffer_puts
  4886 ;;		_format_number
  4887 ;;		_format_xint32
  4888 ;;		_format_double
  4889 ;; This function uses a non-reentrant model
  4890 ;;
  4891  15B5                     _buffer_putch:	
  4892                           
  4893                           ; Regs used in _buffer_putch: [wreg-fsr0h+status,2+status,0+btemp+1]
  4894                           ;buffer_putch@ch stored from wreg
  4895  15B5  00F4               	movwf	buffer_putch@ch
  4896                           
  4897                           ;buffer.c: 31: if(16 - buffer.n <= 0)
  4898  15B6  1683               	bsf	3,5	;RP0=1, select bank3
  4899  15B7  1703               	bsf	3,6	;RP1=1, select bank3
  4900  15B8  0E20               	swapf	(_buffer^(0+384)+16),w
  4901  15B9  390F               	andlw	15
  4902  15BA  1283               	bcf	3,5	;RP0=0, select bank0
  4903  15BB  1303               	bcf	3,6	;RP1=0, select bank0
  4904  15BC  00A0               	movwf	??_buffer_putch
  4905  15BD  01A2               	clrf	??_buffer_putch+2
  4906  15BE  3C10               	sublw	16
  4907  15BF  00A1               	movwf	??_buffer_putch+1
  4908  15C0  1C03               	skipc
  4909  15C1  03A2               	decf	??_buffer_putch+2,f
  4910  15C2  0822               	movf	??_buffer_putch+2,w
  4911  15C3  3A80               	xorlw	128
  4912  15C4  00FF               	movwf	127
  4913  15C5  3080               	movlw	128
  4914  15C6  027F               	subwf	127,w
  4915  15C7  1D03               	skipz
  4916  15C8  2DCB               	goto	u2495
  4917  15C9  3001               	movlw	1
  4918  15CA  0221               	subwf	??_buffer_putch+1,w
  4919  15CB                     u2495:	
  4920  15CB  1C03               	btfss	3,0
  4921  15CC  0008               	return
  4922                           
  4923                           ;buffer.c: 33: buffer.x[buffer.n] = ch;
  4924  15CD  1683               	bsf	3,5	;RP0=1, select bank3
  4925  15CE  1703               	bsf	3,6	;RP1=1, select bank3
  4926  15CF  0E20               	swapf	(_buffer^(0+384)+16),w
  4927  15D0  390F               	andlw	15
  4928  15D1  3E90               	addlw	_buffer& (0+255)
  4929  15D2  0084               	movwf	4
  4930  15D3  0874               	movf	buffer_putch@ch,w
  4931  15D4  1783               	bsf	3,7	;select IRP bank3
  4932  15D5  0080               	movwf	0
  4933                           
  4934                           ;buffer.c: 34: buffer.n++;
  4935  15D6  0E20               	swapf	(_buffer^(0+384)+16),w
  4936  15D7  390F               	andlw	15
  4937  15D8  1283               	bcf	3,5	;RP0=0, select bank0
  4938  15D9  1303               	bcf	3,6	;RP1=0, select bank0
  4939  15DA  00A0               	movwf	??_buffer_putch
  4940  15DB  0AA0               	incf	??_buffer_putch,f
  4941  15DC  0EA0               	swapf	??_buffer_putch,f
  4942  15DD  1683               	bsf	3,5	;RP0=1, select bank3
  4943  15DE  1703               	bsf	3,6	;RP1=1, select bank3
  4944  15DF  0820               	movf	(_buffer^(0+384)+16),w
  4945  15E0  1283               	bcf	3,5	;RP0=0, select bank0
  4946  15E1  1303               	bcf	3,6	;RP1=0, select bank0
  4947  15E2  0620               	xorwf	??_buffer_putch,w
  4948  15E3  390F               	andlw	-241
  4949  15E4  0620               	xorwf	??_buffer_putch,w
  4950  15E5  1683               	bsf	3,5	;RP0=1, select bank3
  4951  15E6  1703               	bsf	3,6	;RP1=1, select bank3
  4952  15E7  00A0               	movwf	(_buffer^(0+384)+16)
  4953  15E8  0008               	return
  4954  15E9                     __end_of_buffer_putch:	
  4955  15E9                     __ptext1262:	
  4956 ;; =============== function ___flmul ends ============
  4957                           
  4958                           
  4959 ;; *************** function ___fldiv *****************
  4960 ;; Defined at:
  4961 ;;		line 50 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\fldiv.c"
  4962 ;; Parameters:    Size  Location     Type
  4963 ;;  f2              4   22[BANK0 ] unsigned char 
  4964 ;;  f1              4   26[BANK0 ] unsigned char 
  4965 ;; Auto vars:     Size  Location     Type
  4966 ;;  f3              4   34[BANK0 ] unsigned char 
  4967 ;;  sign            1   40[BANK0 ] unsigned char 
  4968 ;;  exp             1   39[BANK0 ] unsigned char 
  4969 ;;  cntr            1   38[BANK0 ] unsigned char 
  4970 ;; Return value:  Size  Location     Type
  4971 ;;                  4   22[BANK0 ] unsigned char 
  4972 ;; Registers used:
  4973 ;;		wreg, status,2, status,0, pclath, cstack
  4974 ;; Tracked objects:
  4975 ;;		On entry : 60/100
  4976 ;;		On exit  : 60/100
  4977 ;;		Unchanged: FFF9F/0
  4978 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4979 ;;      Params:         0       8       0       0       0
  4980 ;;      Locals:         0       7       0       0       0
  4981 ;;      Temps:          0       4       0       0       0
  4982 ;;      Totals:         0      19       0       0       0
  4983 ;;Total ram usage:       19 bytes
  4984 ;; Hardware stack levels used:    1
  4985 ;; Hardware stack levels required when called:    2
  4986 ;; This function calls:
  4987 ;;		___flpack
  4988 ;; This function is called by:
  4989 ;;		_format_double
  4990 ;;		_measure_capacitance
  4991 ;;		_measure_inductance
  4992 ;;		_exp
  4993 ;; This function uses a non-reentrant model
  4994 ;;
  4995  15E9                     ___fldiv:	
  4996                           
  4997                           ; Regs used in ___fldiv: [wreg+status,2+status,0+pclath+cstack]
  4998  15E9  083A               	movf	___fldiv@f1,w
  4999  15EA  00BE               	movwf	??___fldiv
  5000  15EB  083B               	movf	___fldiv@f1+1,w
  5001  15EC  00BF               	movwf	??___fldiv+1
  5002  15ED  083C               	movf	___fldiv@f1+2,w
  5003  15EE  00C0               	movwf	??___fldiv+2
  5004  15EF  083D               	movf	___fldiv@f1+3,w
  5005  15F0  00C1               	movwf	??___fldiv+3
  5006  15F1  1003               	clrc
  5007  15F2  0D40               	rlf	??___fldiv+2,w
  5008  15F3  0D41               	rlf	??___fldiv+3,w
  5009  15F4  00C7               	movwf	___fldiv@exp
  5010  15F5  08C7               	movf	___fldiv@exp,f
  5011  15F6  1D03               	skipz
  5012  15F7  2DFD               	goto	l11149
  5013  15F8  01B6               	clrf	?___fldiv
  5014  15F9  01B7               	clrf	?___fldiv+1
  5015  15FA  01B8               	clrf	?___fldiv+2
  5016  15FB  01B9               	clrf	?___fldiv+3
  5017  15FC  0008               	return
  5018  15FD                     l11149:	
  5019  15FD  0836               	movf	___fldiv@f2,w
  5020  15FE  00BE               	movwf	??___fldiv
  5021  15FF  0837               	movf	___fldiv@f2+1,w
  5022  1600  00BF               	movwf	??___fldiv+1
  5023  1601  0838               	movf	___fldiv@f2+2,w
  5024  1602  00C0               	movwf	??___fldiv+2
  5025  1603  0839               	movf	___fldiv@f2+3,w
  5026  1604  00C1               	movwf	??___fldiv+3
  5027  1605  1003               	clrc
  5028  1606  0D40               	rlf	??___fldiv+2,w
  5029  1607  0D41               	rlf	??___fldiv+3,w
  5030  1608  00C8               	movwf	___fldiv@sign
  5031  1609  08C8               	movf	___fldiv@sign,f
  5032  160A  1D03               	skipz
  5033  160B  2E11               	goto	l11153
  5034  160C  01B6               	clrf	?___fldiv
  5035  160D  01B7               	clrf	?___fldiv+1
  5036  160E  01B8               	clrf	?___fldiv+2
  5037  160F  01B9               	clrf	?___fldiv+3
  5038  1610  0008               	return
  5039  1611                     l11153:	
  5040  1611  3089               	movlw	137
  5041  1612  0748               	addwf	___fldiv@sign,w
  5042  1613  00BE               	movwf	??___fldiv
  5043  1614  02C7               	subwf	___fldiv@exp,f
  5044  1615  083D               	movf	___fldiv@f1+3,w
  5045  1616  00C8               	movwf	___fldiv@sign
  5046  1617  0839               	movf	___fldiv@f2+3,w
  5047  1618  06C8               	xorwf	___fldiv@sign,f
  5048  1619  3080               	movlw	128
  5049  161A  05C8               	andwf	___fldiv@sign,f
  5050  161B  3020               	movlw	32
  5051  161C  17BC               	bsf	___fldiv@f1+2,7
  5052  161D  01BD               	clrf	___fldiv@f1+3
  5053  161E  17B8               	bsf	___fldiv@f2+2,7
  5054  161F  01B9               	clrf	___fldiv@f2+3
  5055  1620  00C6               	movwf	___fldiv@cntr
  5056  1621                     l11171:	
  5057  1621  1003               	clrc
  5058  1622  0DC2               	rlf	___fldiv@f3,f
  5059  1623  0DC3               	rlf	___fldiv@f3+1,f
  5060  1624  0DC4               	rlf	___fldiv@f3+2,f
  5061  1625  0DC5               	rlf	___fldiv@f3+3,f
  5062  1626  0839               	movf	___fldiv@f2+3,w
  5063  1627  023D               	subwf	___fldiv@f1+3,w
  5064  1628  1D03               	skipz
  5065  1629  2E34               	goto	u3165
  5066  162A  0838               	movf	___fldiv@f2+2,w
  5067  162B  023C               	subwf	___fldiv@f1+2,w
  5068  162C  1D03               	skipz
  5069  162D  2E34               	goto	u3165
  5070  162E  0837               	movf	___fldiv@f2+1,w
  5071  162F  023B               	subwf	___fldiv@f1+1,w
  5072  1630  1D03               	skipz
  5073  1631  2E34               	goto	u3165
  5074  1632  0836               	movf	___fldiv@f2,w
  5075  1633  023A               	subwf	___fldiv@f1,w
  5076  1634                     u3165:	
  5077  1634  1C03               	skipc
  5078  1635  2E46               	goto	L5
  5079  1636  0836               	movf	___fldiv@f2,w
  5080  1637  02BA               	subwf	___fldiv@f1,f
  5081  1638  0837               	movf	___fldiv@f2+1,w
  5082  1639  1C03               	skipc
  5083  163A  0F37               	incfsz	___fldiv@f2+1,w
  5084  163B  02BB               	subwf	___fldiv@f1+1,f
  5085  163C  0838               	movf	___fldiv@f2+2,w
  5086  163D  1C03               	skipc
  5087  163E  0F38               	incfsz	___fldiv@f2+2,w
  5088  163F  02BC               	subwf	___fldiv@f1+2,f
  5089  1640  0839               	movf	___fldiv@f2+3,w
  5090  1641  1C03               	skipc
  5091  1642  0F39               	incfsz	___fldiv@f2+3,w
  5092  1643  02BD               	subwf	___fldiv@f1+3,f
  5093  1644  1442               	bsf	___fldiv@f3,0
  5094  1645  1003               	clrc
  5095  1646                     L5:	
  5096  1646  0DBA               	rlf	___fldiv@f1,f
  5097  1647  0DBB               	rlf	___fldiv@f1+1,f
  5098  1648  0DBC               	rlf	___fldiv@f1+2,f
  5099  1649  0DBD               	rlf	___fldiv@f1+3,f
  5100  164A  0BC6               	decfsz	___fldiv@cntr,f
  5101  164B  2E21               	goto	l11171
  5102  164C  0845               	movf	___fldiv@f3+3,w
  5103  164D  00A3               	movwf	?___flpack+3
  5104  164E  0844               	movf	___fldiv@f3+2,w
  5105  164F  00A2               	movwf	?___flpack+2
  5106  1650  0843               	movf	___fldiv@f3+1,w
  5107  1651  00A1               	movwf	?___flpack+1
  5108  1652  0842               	movf	___fldiv@f3,w
  5109  1653  00A0               	movwf	?___flpack
  5110  1654  0847               	movf	___fldiv@exp,w
  5111  1655  00A4               	movwf	?___flpack+4
  5112  1656  0848               	movf	___fldiv@sign,w
  5113  1657  00A5               	movwf	?___flpack+5
  5114  1658  27B4               	fcall	___flpack
  5115  1659  0823               	movf	?___flpack+3,w
  5116  165A  00B9               	movwf	?___fldiv+3
  5117  165B  0822               	movf	?___flpack+2,w
  5118  165C  00B8               	movwf	?___fldiv+2
  5119  165D  0821               	movf	?___flpack+1,w
  5120  165E  00B7               	movwf	?___fldiv+1
  5121  165F  0820               	movf	?___flpack,w
  5122  1660  00B6               	movwf	?___fldiv
  5123  1661  0008               	return
  5124  1662                     __end_of___fldiv:	
  5125  1662                     __ptext1270:	
  5126 ;; =============== function ___flge ends ============
  5127                           
  5128                           
  5129 ;; *************** function ___fltol *****************
  5130 ;; Defined at:
  5131 ;;		line 44 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\fltol.c"
  5132 ;; Parameters:    Size  Location     Type
  5133 ;;  f1              4   12[BANK0 ] unsigned char 
  5134 ;; Auto vars:     Size  Location     Type
  5135 ;;  exp1            1   21[BANK0 ] unsigned char 
  5136 ;;  sign1           1   20[BANK0 ] unsigned char 
  5137 ;; Return value:  Size  Location     Type
  5138 ;;                  4   12[BANK0 ] long 
  5139 ;; Registers used:
  5140 ;;		wreg, status,2, status,0
  5141 ;; Tracked objects:
  5142 ;;		On entry : 60/100
  5143 ;;		On exit  : 60/100
  5144 ;;		Unchanged: FFF9F/0
  5145 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5146 ;;      Params:         0       4       0       0       0
  5147 ;;      Locals:         0       2       0       0       0
  5148 ;;      Temps:          0       4       0       0       0
  5149 ;;      Totals:         0      10       0       0       0
  5150 ;;Total ram usage:       10 bytes
  5151 ;; Hardware stack levels used:    1
  5152 ;; Hardware stack levels required when called:    1
  5153 ;; This function calls:
  5154 ;;		Nothing
  5155 ;; This function is called by:
  5156 ;;		_format_double
  5157 ;;		_measure_capacitance
  5158 ;;		_measure_inductance
  5159 ;;		_floor
  5160 ;;		_pow
  5161 ;;		_exp
  5162 ;; This function uses a non-reentrant model
  5163 ;;
  5164  1662                     ___fltol:	
  5165                           
  5166                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  5167  1662  082C               	movf	___fltol@f1,w
  5168  1663  00B0               	movwf	??___fltol
  5169  1664  082D               	movf	___fltol@f1+1,w
  5170  1665  00B1               	movwf	??___fltol+1
  5171  1666  082E               	movf	___fltol@f1+2,w
  5172  1667  00B2               	movwf	??___fltol+2
  5173  1668  082F               	movf	___fltol@f1+3,w
  5174  1669  00B3               	movwf	??___fltol+3
  5175  166A  1003               	clrc
  5176  166B  0D32               	rlf	??___fltol+2,w
  5177  166C  0D33               	rlf	??___fltol+3,w
  5178  166D  00B5               	movwf	___fltol@exp1
  5179  166E  08B5               	movf	___fltol@exp1,f
  5180  166F  1D03               	skipz
  5181  1670  2E76               	goto	l10899
  5182  1671                     l10897:	
  5183  1671  01AC               	clrf	?___fltol
  5184  1672  01AD               	clrf	?___fltol+1
  5185  1673  01AE               	clrf	?___fltol+2
  5186  1674  01AF               	clrf	?___fltol+3
  5187  1675  0008               	return
  5188  1676                     l10899:	
  5189  1676  082C               	movf	___fltol@f1,w
  5190  1677  00B0               	movwf	??___fltol
  5191  1678  082D               	movf	___fltol@f1+1,w
  5192  1679  00B1               	movwf	??___fltol+1
  5193  167A  082E               	movf	___fltol@f1+2,w
  5194  167B  00B2               	movwf	??___fltol+2
  5195  167C  082F               	movf	___fltol@f1+3,w
  5196  167D  00B3               	movwf	??___fltol+3
  5197  167E  301F               	movlw	31
  5198  167F                     u2695:	
  5199  167F  1003               	clrc
  5200  1680  0CB3               	rrf	??___fltol+3,f
  5201  1681  0CB2               	rrf	??___fltol+2,f
  5202  1682  0CB1               	rrf	??___fltol+1,f
  5203  1683  0CB0               	rrf	??___fltol,f
  5204  1684  3EFF               	addlw	-1
  5205  1685  1D03               	skipz
  5206  1686  2E7F               	goto	u2695
  5207  1687  0830               	movf	??___fltol,w
  5208  1688  00B4               	movwf	___fltol@sign1
  5209  1689  3096               	movlw	150
  5210  168A  17AE               	bsf	___fltol@f1+2,7
  5211  168B  01AF               	clrf	___fltol@f1+3
  5212  168C  02B5               	subwf	___fltol@exp1,f
  5213  168D  1FB5               	btfss	___fltol@exp1,7
  5214  168E  2E9C               	goto	l10917
  5215  168F  0835               	movf	___fltol@exp1,w
  5216  1690  3A80               	xorlw	128
  5217  1691  3E97               	addlw	151
  5218  1692  1C03               	btfss	3,0
  5219  1693  2E71               	goto	l10897
  5220  1694                     l10913:	
  5221  1694  1003               	clrc
  5222  1695  0CAF               	rrf	___fltol@f1+3,f
  5223  1696  0CAE               	rrf	___fltol@f1+2,f
  5224  1697  0CAD               	rrf	___fltol@f1+1,f
  5225  1698  0CAC               	rrf	___fltol@f1,f
  5226  1699  0FB5               	incfsz	___fltol@exp1,f
  5227  169A  2E94               	goto	l10913
  5228  169B  2EAA               	goto	l10923
  5229  169C                     l10917:	
  5230  169C  3020               	movlw	32
  5231  169D  0235               	subwf	___fltol@exp1,w
  5232  169E  1803               	btfsc	3,0
  5233  169F  2E71               	goto	l10897
  5234  16A0                     l6664:	
  5235  16A0  08B5               	movf	___fltol@exp1,f
  5236  16A1  1903               	btfsc	3,2
  5237  16A2  2EAA               	goto	l10923
  5238  16A3  1003               	clrc
  5239  16A4  0DAC               	rlf	___fltol@f1,f
  5240  16A5  0DAD               	rlf	___fltol@f1+1,f
  5241  16A6  0DAE               	rlf	___fltol@f1+2,f
  5242  16A7  0DAF               	rlf	___fltol@f1+3,f
  5243  16A8  03B5               	decf	___fltol@exp1,f
  5244  16A9  2EA0               	goto	l6664
  5245  16AA                     l10923:	
  5246  16AA  0834               	movf	___fltol@sign1,w
  5247  16AB  1903               	btfsc	3,2
  5248  16AC  0008               	return
  5249  16AD  09AC               	comf	___fltol@f1,f
  5250  16AE  09AD               	comf	___fltol@f1+1,f
  5251  16AF  09AE               	comf	___fltol@f1+2,f
  5252  16B0  09AF               	comf	___fltol@f1+3,f
  5253  16B1  0AAC               	incf	___fltol@f1,f
  5254  16B2  1903               	skipnz
  5255  16B3  0AAD               	incf	___fltol@f1+1,f
  5256  16B4  1903               	skipnz
  5257  16B5  0AAE               	incf	___fltol@f1+2,f
  5258  16B6  1903               	skipnz
  5259  16B7  0AAF               	incf	___fltol@f1+3,f
  5260  16B8  0008               	return
  5261  16B9                     __end_of___fltol:	
  5262  16B9                     __ptext1260:	
  5263 ;; =============== function ___lwtofl ends ============
  5264                           
  5265                           
  5266 ;; *************** function ___awtofl *****************
  5267 ;; Defined at:
  5268 ;;		line 32 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\awtofl.c"
  5269 ;; Parameters:    Size  Location     Type
  5270 ;;  c               2   22[BANK0 ] int 
  5271 ;; Auto vars:     Size  Location     Type
  5272 ;;  f1              4    0        int 
  5273 ;;  sign            1   26[BANK0 ] unsigned char 
  5274 ;; Return value:  Size  Location     Type
  5275 ;;                  4   22[BANK0 ] unsigned char 
  5276 ;; Registers used:
  5277 ;;		wreg, status,2, status,0, pclath, cstack
  5278 ;; Tracked objects:
  5279 ;;		On entry : 60/0
  5280 ;;		On exit  : 60/0
  5281 ;;		Unchanged: FFF9F/0
  5282 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5283 ;;      Params:         0       4       0       0       0
  5284 ;;      Locals:         0       1       0       0       0
  5285 ;;      Temps:          0       0       0       0       0
  5286 ;;      Totals:         0       5       0       0       0
  5287 ;;Total ram usage:        5 bytes
  5288 ;; Hardware stack levels used:    1
  5289 ;; Hardware stack levels required when called:    2
  5290 ;; This function calls:
  5291 ;;		___flpack
  5292 ;; This function is called by:
  5293 ;;		_format_double
  5294 ;;		_log
  5295 ;;		_exp
  5296 ;; This function uses a non-reentrant model
  5297 ;;
  5298  16B9                     ___awtofl:	
  5299                           
  5300                           ; Regs used in ___awtofl: [wreg+status,2+status,0+pclath+cstack]
  5301  16B9  01BA               	clrf	___awtofl@sign
  5302  16BA  1FB7               	btfss	___awtofl@c+1,7
  5303  16BB  2EC2               	goto	l11243
  5304  16BC  09B6               	comf	___awtofl@c,f
  5305  16BD  09B7               	comf	___awtofl@c+1,f
  5306  16BE  0AB6               	incf	___awtofl@c,f
  5307  16BF  1903               	skipnz
  5308  16C0  0AB7               	incf	___awtofl@c+1,f
  5309  16C1  0ABA               	incf	___awtofl@sign,f
  5310  16C2                     l11243:	
  5311  16C2  0836               	movf	___awtofl@c,w
  5312  16C3  00A0               	movwf	?___flpack
  5313  16C4  0837               	movf	___awtofl@c+1,w
  5314  16C5  00A1               	movwf	?___flpack+1
  5315  16C6  3096               	movlw	150
  5316  16C7  01A2               	clrf	?___flpack+2
  5317  16C8  01A3               	clrf	?___flpack+3
  5318  16C9  00A4               	movwf	?___flpack+4
  5319  16CA  083A               	movf	___awtofl@sign,w
  5320  16CB  00A5               	movwf	?___flpack+5
  5321  16CC  27B4               	fcall	___flpack
  5322  16CD  0823               	movf	?___flpack+3,w
  5323  16CE  00B9               	movwf	?___awtofl+3
  5324  16CF  0822               	movf	?___flpack+2,w
  5325  16D0  00B8               	movwf	?___awtofl+2
  5326  16D1  0821               	movf	?___flpack+1,w
  5327  16D2  00B7               	movwf	?___awtofl+1
  5328  16D3  0820               	movf	?___flpack,w
  5329  16D4  00B6               	movwf	?___awtofl
  5330  16D5  0008               	return
  5331  16D6                     __end_of___awtofl:	
  5332  16D6                     __ptext1252:	
  5333 ;; =============== function _measure_freq ends ============
  5334                           
  5335                           
  5336 ;; *************** function ___flsub *****************
  5337 ;; Defined at:
  5338 ;;		line 17 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\flsub.c"
  5339 ;; Parameters:    Size  Location     Type
  5340 ;;  f2              4    0[BANK1 ] unsigned short 
  5341 ;;  f1              4    4[BANK1 ] unsigned short 
  5342 ;; Auto vars:     Size  Location     Type
  5343 ;;		None
  5344 ;; Return value:  Size  Location     Type
  5345 ;;                  4    0[BANK1 ] unsigned short 
  5346 ;; Registers used:
  5347 ;;		wreg, status,2, status,0, pclath, cstack
  5348 ;; Tracked objects:
  5349 ;;		On entry : 60/120
  5350 ;;		On exit  : 60/120
  5351 ;;		Unchanged: FFF9F/0
  5352 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5353 ;;      Params:         0       0       8       0       0
  5354 ;;      Locals:         0       0       0       0       0
  5355 ;;      Temps:          0       0       0       0       0
  5356 ;;      Totals:         0       0       8       0       0
  5357 ;;Total ram usage:        8 bytes
  5358 ;; Hardware stack levels used:    1
  5359 ;; Hardware stack levels required when called:    3
  5360 ;; This function calls:
  5361 ;;		___fladd
  5362 ;; This function is called by:
  5363 ;;		_format_double
  5364 ;;		_measure_capacitance
  5365 ;;		_measure_inductance
  5366 ;;		_exp
  5367 ;; This function uses a non-reentrant model
  5368 ;;
  5369  16D6                     ___flsub:	
  5370                           
  5371                           ; Regs used in ___flsub: [wreg+status,2+status,0+pclath+cstack]
  5372  16D6  3080               	movlw	128
  5373  16D7  06A3               	xorwf	(___flsub@f2+3)^(0+128),f
  5374  16D8  0823               	movf	(___flsub@f2+3)^(0+128),w
  5375  16D9  1283               	bcf	3,5	;RP0=0, select bank0
  5376  16DA  00DF               	movwf	?___fladd+3
  5377  16DB  1683               	bsf	3,5	;RP0=1, select bank1
  5378  16DC  0822               	movf	(___flsub@f2+2)^(0+128),w
  5379  16DD  1283               	bcf	3,5	;RP0=0, select bank0
  5380  16DE  00DE               	movwf	?___fladd+2
  5381  16DF  1683               	bsf	3,5	;RP0=1, select bank1
  5382  16E0  0821               	movf	(___flsub@f2+1)^(0+128),w
  5383  16E1  1283               	bcf	3,5	;RP0=0, select bank0
  5384  16E2  00DD               	movwf	?___fladd+1
  5385  16E3  1683               	bsf	3,5	;RP0=1, select bank1
  5386  16E4  0820               	movf	___flsub@f2^(0+128),w
  5387  16E5  1283               	bcf	3,5	;RP0=0, select bank0
  5388  16E6  00DC               	movwf	?___fladd
  5389  16E7  1683               	bsf	3,5	;RP0=1, select bank1
  5390  16E8  0827               	movf	(___flsub@f1+3)^(0+128),w
  5391  16E9  1283               	bcf	3,5	;RP0=0, select bank0
  5392  16EA  00E3               	movwf	?___fladd+7
  5393  16EB  1683               	bsf	3,5	;RP0=1, select bank1
  5394  16EC  0826               	movf	(___flsub@f1+2)^(0+128),w
  5395  16ED  1283               	bcf	3,5	;RP0=0, select bank0
  5396  16EE  00E2               	movwf	?___fladd+6
  5397  16EF  1683               	bsf	3,5	;RP0=1, select bank1
  5398  16F0  0825               	movf	(___flsub@f1+1)^(0+128),w
  5399  16F1  1283               	bcf	3,5	;RP0=0, select bank0
  5400  16F2  00E1               	movwf	?___fladd+5
  5401  16F3  1683               	bsf	3,5	;RP0=1, select bank1
  5402  16F4  0824               	movf	___flsub@f1^(0+128),w
  5403  16F5  1283               	bcf	3,5	;RP0=0, select bank0
  5404  16F6  00E0               	movwf	?___fladd+4
  5405  16F7  120A  158A  20AD   	fcall	___fladd
  5406  16FA  085F               	movf	?___fladd+3,w
  5407  16FB  1683               	bsf	3,5	;RP0=1, select bank1
  5408  16FC  00A3               	movwf	(?___flsub+3)^(0+128)
  5409  16FD  1283               	bcf	3,5	;RP0=0, select bank0
  5410  16FE  085E               	movf	?___fladd+2,w
  5411  16FF  1683               	bsf	3,5	;RP0=1, select bank1
  5412  1700  00A2               	movwf	(?___flsub+2)^(0+128)
  5413  1701  1283               	bcf	3,5	;RP0=0, select bank0
  5414  1702  085D               	movf	?___fladd+1,w
  5415  1703  1683               	bsf	3,5	;RP0=1, select bank1
  5416  1704  00A1               	movwf	(?___flsub+1)^(0+128)
  5417  1705  1283               	bcf	3,5	;RP0=0, select bank0
  5418  1706  085C               	movf	?___fladd,w
  5419  1707  1683               	bsf	3,5	;RP0=1, select bank1
  5420  1708  00A0               	movwf	?___flsub^(0+128)
  5421  1709  0008               	return
  5422  170A                     __end_of___flsub:	
  5423  170A                     __ptext1265:	
  5424 ;; =============== function _ldexp ends ============
  5425                           
  5426                           
  5427 ;; *************** function _format_number *****************
  5428 ;; Defined at:
  5429 ;;		line 15 in file "../../../lib/format.c"
  5430 ;; Parameters:    Size  Location     Type
  5431 ;;  n               2    7[BANK0 ] unsigned int 
  5432 ;;  base            1    9[BANK0 ] unsigned char 
  5433 ;;  pad             1   10[BANK0 ] char 
  5434 ;; Auto vars:     Size  Location     Type
  5435 ;;  buf            32   11[BANK0 ] unsigned char [32]
  5436 ;;  i               1   47[BANK0 ] char 
  5437 ;;  di              1   46[BANK0 ] unsigned char 
  5438 ;;  padchar         1   43[BANK0 ] unsigned char 
  5439 ;; Return value:  Size  Location     Type
  5440 ;;		None               void
  5441 ;; Registers used:
  5442 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5443 ;; Tracked objects:
  5444 ;;		On entry : 60/0
  5445 ;;		On exit  : 60/0
  5446 ;;		Unchanged: FFE00/0
  5447 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5448 ;;      Params:         0       4       0       0       0
  5449 ;;      Locals:         0      37       0       0       0
  5450 ;;      Temps:          1       0       0       0       0
  5451 ;;      Totals:         1      41       0       0       0
  5452 ;;Total ram usage:       42 bytes
  5453 ;; Hardware stack levels used:    1
  5454 ;; Hardware stack levels required when called:    2
  5455 ;; This function calls:
  5456 ;;		___lwmod
  5457 ;;		___lwdiv
  5458 ;;		_buffer_putch
  5459 ;; This function is called by:
  5460 ;;		_format_xint32
  5461 ;;		_measure_freq
  5462 ;; This function uses a non-reentrant model
  5463 ;;
  5464  170A                     _format_number:	
  5465  170A                     l10987:	
  5466                           ; Regs used in _format_number: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5467                           
  5468  170A  3020               	movlw	32
  5469                           
  5470                           ;format.c: 16: char buf[8 * sizeof(long)];
  5471                           ;format.c: 17: uint8_t di;
  5472                           ;format.c: 18: int8_t i = 0;
  5473  170B  01CF               	clrf	format_number@i
  5474                           
  5475                           ;format.c: 19: char padchar = ' ';
  5476  170C  00CB               	movwf	format_number@padchar
  5477                           
  5478                           ;format.c: 21: if(pad < 0) {
  5479  170D  1FAA               	btfss	format_number@pad,7
  5480  170E  2F13               	goto	l10997
  5481  170F  3030               	movlw	48
  5482                           
  5483                           ;format.c: 22: pad = -pad;
  5484  1710  09AA               	comf	format_number@pad,f
  5485  1711  0AAA               	incf	format_number@pad,f
  5486                           
  5487                           ;format.c: 23: padchar = '0';
  5488  1712  00CB               	movwf	format_number@padchar
  5489  1713                     l10997:	
  5490                           
  5491                           ;format.c: 35: di = n % base;
  5492  1713  0829               	movf	format_number@base,w
  5493  1714  00A0               	movwf	?___lwmod
  5494  1715  01A1               	clrf	?___lwmod+1
  5495  1716  0828               	movf	format_number@n+1,w
  5496  1717  00A3               	movwf	?___lwmod+3
  5497  1718  0827               	movf	format_number@n,w
  5498  1719  00A2               	movwf	?___lwmod+2
  5499  171A  2790  160A  118A   	fcall	___lwmod
  5500  171D  0820               	movf	?___lwmod,w
  5501  171E  00CE               	movwf	format_number@di
  5502                           
  5503                           ;format.c: 36: buf[i++] = (di < 10 ? (uint8_t)'0' + di : (uint8_t)'A' + di - 10);
  5504  171F  300A               	movlw	10
  5505  1720  024E               	subwf	format_number@di,w
  5506  1721  084E               	movf	format_number@di,w
  5507  1722  00CC               	movwf	_format_number$5705
  5508  1723  1C03               	skipc
  5509  1724  2F27               	goto	L9
  5510  1725  3037               	movlw	55
  5511  1726  2F28               	goto	L8
  5512  1727                     L9:	
  5513  1727  3030               	movlw	48
  5514  1728                     L8:	
  5515  1728  01CD               	clrf	_format_number$5705+1
  5516  1729  07CC               	addwf	_format_number$5705,f
  5517  172A  1803               	skipnc
  5518  172B  0ACD               	incf	_format_number$5705+1,f
  5519  172C  084F               	movf	format_number@i,w
  5520  172D  3E2B               	addlw	format_number@buf& (0+255)
  5521  172E  0084               	movwf	4
  5522  172F  084C               	movf	_format_number$5705,w
  5523  1730  1383               	bcf	3,7	;select IRP bank0
  5524  1731  0080               	movwf	0
  5525  1732  0ACF               	incf	format_number@i,f
  5526                           
  5527                           ;format.c: 38: n /= base;
  5528  1733  0829               	movf	format_number@base,w
  5529  1734  00A0               	movwf	?___lwdiv
  5530  1735  01A1               	clrf	?___lwdiv+1
  5531  1736  0828               	movf	format_number@n+1,w
  5532  1737  00A3               	movwf	?___lwdiv+3
  5533  1738  0827               	movf	format_number@n,w
  5534  1739  00A2               	movwf	?___lwdiv+2
  5535  173A  2766  160A  118A   	fcall	___lwdiv
  5536  173D  0821               	movf	?___lwdiv+1,w
  5537  173E  00A8               	movwf	format_number@n+1
  5538  173F  0820               	movf	?___lwdiv,w
  5539  1740  00A7               	movwf	format_number@n
  5540                           
  5541                           ;format.c: 39: } while(n > 0);
  5542  1741  0428               	iorwf	format_number@n+1,w
  5543  1742  1903               	btfsc	3,2
  5544  1743  2F49               	goto	l11015
  5545  1744  2F13               	goto	l10997
  5546  1745                     l11013:	
  5547  1745  084B               	movf	format_number@padchar,w
  5548  1746  25B5  160A  118A   	fcall	_buffer_putch
  5549  1749                     l11015:	
  5550  1749  1283               	bcf	3,5	;RP0=0, select bank0
  5551  174A  1303               	bcf	3,6	;RP1=0, select bank0
  5552  174B  084F               	movf	format_number@i,w
  5553  174C  3A80               	xorlw	128
  5554  174D  00F5               	movwf	??_format_number
  5555  174E  082A               	movf	format_number@pad,w
  5556  174F  03AA               	decf	format_number@pad,f
  5557  1750  3A80               	xorlw	128
  5558  1751  02F5               	subwf	??_format_number,f
  5559  1752  1C03               	skipc
  5560  1753  2F45               	goto	l11013
  5561  1754                     l11017:	
  5562                           
  5563                           ;format.c: 43: for(; i > 0; i--) {
  5564  1754  084F               	movf	format_number@i,w
  5565  1755  3A80               	xorlw	128
  5566  1756  3E7F               	addlw	-129
  5567  1757  1C03               	btfss	3,0
  5568  1758  0008               	return
  5569                           
  5570                           ;format.c: 44: buffer_putch((char)buf[(int16_t)i - 1]);
  5571  1759  084F               	movf	format_number@i,w
  5572  175A  3EFF               	addlw	255
  5573  175B  3E2B               	addlw	format_number@buf& (0+255)
  5574  175C  0084               	movwf	4
  5575  175D  1383               	bcf	3,7	;select IRP bank0
  5576  175E  0800               	movf	0,w
  5577  175F  25B5  160A  118A   	fcall	_buffer_putch
  5578  1762  1283               	bcf	3,5	;RP0=0, select bank0
  5579  1763  1303               	bcf	3,6	;RP1=0, select bank0
  5580  1764  03CF               	decf	format_number@i,f
  5581  1765  2F54               	goto	l11017
  5582  1766                     __end_of_format_number:	
  5583  1766                     __ptext1274:	
  5584 ;; =============== function ___lwmod ends ============
  5585                           
  5586                           
  5587 ;; *************** function ___lwdiv *****************
  5588 ;; Defined at:
  5589 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\lwdiv.c"
  5590 ;; Parameters:    Size  Location     Type
  5591 ;;  divisor         2    0[BANK0 ] unsigned int 
  5592 ;;  dividend        2    2[BANK0 ] unsigned int 
  5593 ;; Auto vars:     Size  Location     Type
  5594 ;;  quotient        2    5[BANK0 ] unsigned int 
  5595 ;;  counter         1    4[BANK0 ] unsigned char 
  5596 ;; Return value:  Size  Location     Type
  5597 ;;                  2    0[BANK0 ] unsigned int 
  5598 ;; Registers used:
  5599 ;;		wreg, status,2, status,0
  5600 ;; Tracked objects:
  5601 ;;		On entry : 160/0
  5602 ;;		On exit  : 160/0
  5603 ;;		Unchanged: FFE9F/0
  5604 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5605 ;;      Params:         0       4       0       0       0
  5606 ;;      Locals:         0       3       0       0       0
  5607 ;;      Temps:          0       0       0       0       0
  5608 ;;      Totals:         0       7       0       0       0
  5609 ;;Total ram usage:        7 bytes
  5610 ;; Hardware stack levels used:    1
  5611 ;; Hardware stack levels required when called:    1
  5612 ;; This function calls:
  5613 ;;		Nothing
  5614 ;; This function is called by:
  5615 ;;		_format_number
  5616 ;; This function uses a non-reentrant model
  5617 ;;
  5618  1766                     ___lwdiv:	
  5619                           
  5620                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  5621  1766  01A5               	clrf	___lwdiv@quotient
  5622  1767  01A6               	clrf	___lwdiv@quotient+1
  5623  1768  0821               	movf	___lwdiv@divisor+1,w
  5624  1769  0420               	iorwf	___lwdiv@divisor,w
  5625  176A  1903               	skipnz
  5626  176B  2F8B               	goto	l10837
  5627  176C  01A4               	clrf	___lwdiv@counter
  5628  176D                     L13:	
  5629  176D  0AA4               	incf	___lwdiv@counter,f
  5630  176E  1BA1               	btfsc	___lwdiv@divisor+1,7
  5631  176F  2F74               	goto	l10825
  5632  1770  1003               	clrc
  5633  1771  0DA0               	rlf	___lwdiv@divisor,f
  5634  1772  0DA1               	rlf	___lwdiv@divisor+1,f
  5635  1773  2F6D               	goto	L13
  5636  1774                     l10825:	
  5637  1774  1003               	clrc
  5638  1775  0DA5               	rlf	___lwdiv@quotient,f
  5639  1776  0DA6               	rlf	___lwdiv@quotient+1,f
  5640  1777  0821               	movf	___lwdiv@divisor+1,w
  5641  1778  0223               	subwf	___lwdiv@dividend+1,w
  5642  1779  1D03               	skipz
  5643  177A  2F7D               	goto	u2545
  5644  177B  0820               	movf	___lwdiv@divisor,w
  5645  177C  0222               	subwf	___lwdiv@dividend,w
  5646  177D                     u2545:	
  5647  177D  1C03               	skipc
  5648  177E  2F87               	goto	L14
  5649  177F  0820               	movf	___lwdiv@divisor,w
  5650  1780  02A2               	subwf	___lwdiv@dividend,f
  5651  1781  0821               	movf	___lwdiv@divisor+1,w
  5652  1782  1C03               	skipc
  5653  1783  03A3               	decf	___lwdiv@dividend+1,f
  5654  1784  02A3               	subwf	___lwdiv@dividend+1,f
  5655  1785  1425               	bsf	___lwdiv@quotient,0
  5656  1786  1003               	clrc
  5657  1787                     L14:	
  5658  1787  0CA1               	rrf	___lwdiv@divisor+1,f
  5659  1788  0CA0               	rrf	___lwdiv@divisor,f
  5660  1789  0BA4               	decfsz	___lwdiv@counter,f
  5661  178A  2F74               	goto	l10825
  5662  178B                     l10837:	
  5663  178B  0826               	movf	___lwdiv@quotient+1,w
  5664  178C  00A1               	movwf	?___lwdiv+1
  5665  178D  0825               	movf	___lwdiv@quotient,w
  5666  178E  00A0               	movwf	?___lwdiv
  5667  178F  0008               	return
  5668  1790                     __end_of___lwdiv:	
  5669  1790                     __ptext1273:	
  5670 ;; =============== function ___flpack ends ============
  5671                           
  5672                           
  5673 ;; *************** function ___lwmod *****************
  5674 ;; Defined at:
  5675 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\lwmod.c"
  5676 ;; Parameters:    Size  Location     Type
  5677 ;;  divisor         2    0[BANK0 ] unsigned int 
  5678 ;;  dividend        2    2[BANK0 ] unsigned int 
  5679 ;; Auto vars:     Size  Location     Type
  5680 ;;  counter         1    4[COMMON] unsigned char 
  5681 ;; Return value:  Size  Location     Type
  5682 ;;                  2    0[BANK0 ] unsigned int 
  5683 ;; Registers used:
  5684 ;;		wreg, status,2, status,0
  5685 ;; Tracked objects:
  5686 ;;		On entry : 60/0
  5687 ;;		On exit  : 60/0
  5688 ;;		Unchanged: FFF9F/0
  5689 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5690 ;;      Params:         0       4       0       0       0
  5691 ;;      Locals:         1       0       0       0       0
  5692 ;;      Temps:          0       0       0       0       0
  5693 ;;      Totals:         1       4       0       0       0
  5694 ;;Total ram usage:        5 bytes
  5695 ;; Hardware stack levels used:    1
  5696 ;; Hardware stack levels required when called:    1
  5697 ;; This function calls:
  5698 ;;		Nothing
  5699 ;; This function is called by:
  5700 ;;		_format_number
  5701 ;; This function uses a non-reentrant model
  5702 ;;
  5703  1790                     ___lwmod:	
  5704                           
  5705                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  5706  1790  0821               	movf	___lwmod@divisor+1,w
  5707  1791  0420               	iorwf	___lwmod@divisor,w
  5708  1792  1903               	skipnz
  5709  1793  2FAF               	goto	l10857
  5710  1794  01F4               	clrf	___lwmod@counter
  5711  1795                     L11:	
  5712  1795  0AF4               	incf	___lwmod@counter,f
  5713  1796  1BA1               	btfsc	___lwmod@divisor+1,7
  5714  1797  2F9C               	goto	l10849
  5715  1798  1003               	clrc
  5716  1799  0DA0               	rlf	___lwmod@divisor,f
  5717  179A  0DA1               	rlf	___lwmod@divisor+1,f
  5718  179B  2F95               	goto	L11
  5719  179C                     l10849:	
  5720  179C  0821               	movf	___lwmod@divisor+1,w
  5721  179D  0223               	subwf	___lwmod@dividend+1,w
  5722  179E  1D03               	skipz
  5723  179F  2FA2               	goto	u2585
  5724  17A0  0820               	movf	___lwmod@divisor,w
  5725  17A1  0222               	subwf	___lwmod@dividend,w
  5726  17A2                     u2585:	
  5727  17A2  1C03               	skipc
  5728  17A3  2FAB               	goto	L12
  5729  17A4  0820               	movf	___lwmod@divisor,w
  5730  17A5  02A2               	subwf	___lwmod@dividend,f
  5731  17A6  0821               	movf	___lwmod@divisor+1,w
  5732  17A7  1C03               	skipc
  5733  17A8  03A3               	decf	___lwmod@dividend+1,f
  5734  17A9  02A3               	subwf	___lwmod@dividend+1,f
  5735  17AA  1003               	clrc
  5736  17AB                     L12:	
  5737  17AB  0CA1               	rrf	___lwmod@divisor+1,f
  5738  17AC  0CA0               	rrf	___lwmod@divisor,f
  5739  17AD  0BF4               	decfsz	___lwmod@counter,f
  5740  17AE  2F9C               	goto	l10849
  5741  17AF                     l10857:	
  5742  17AF  0823               	movf	___lwmod@dividend+1,w
  5743  17B0  00A1               	movwf	?___lwmod+1
  5744  17B1  0822               	movf	___lwmod@dividend,w
  5745  17B2  00A0               	movwf	?___lwmod
  5746  17B3  0008               	return
  5747  17B4                     __end_of___lwmod:	
  5748  17B4                     __ptext1272:	
  5749 ;; =============== function ___flneg ends ============
  5750                           
  5751                           
  5752 ;; *************** function ___flpack *****************
  5753 ;; Defined at:
  5754 ;;		line 64 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\double.c"
  5755 ;; Parameters:    Size  Location     Type
  5756 ;;  arg             4    0[BANK0 ] unsigned long 
  5757 ;;  exp             1    4[BANK0 ] unsigned char 
  5758 ;;  sign            1    5[BANK0 ] unsigned char 
  5759 ;; Auto vars:     Size  Location     Type
  5760 ;;		None
  5761 ;; Return value:  Size  Location     Type
  5762 ;;                  4    0[BANK0 ] unsigned char 
  5763 ;; Registers used:
  5764 ;;		wreg, status,2, status,0
  5765 ;; Tracked objects:
  5766 ;;		On entry : 60/0
  5767 ;;		On exit  : 60/0
  5768 ;;		Unchanged: FFF9F/0
  5769 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5770 ;;      Params:         0       6       0       0       0
  5771 ;;      Locals:         0       0       0       0       0
  5772 ;;      Temps:          0       4       0       0       0
  5773 ;;      Totals:         0      10       0       0       0
  5774 ;;Total ram usage:       10 bytes
  5775 ;; Hardware stack levels used:    1
  5776 ;; Hardware stack levels required when called:    1
  5777 ;; This function calls:
  5778 ;;		Nothing
  5779 ;; This function is called by:
  5780 ;;		___fladd
  5781 ;;		___fldiv
  5782 ;;		___flmul
  5783 ;;		___awtofl
  5784 ;;		___lwtofl
  5785 ;;		___altofl
  5786 ;;		___lltofl
  5787 ;; This function uses a non-reentrant model
  5788 ;;
  5789  17B4                     ___flpack:	
  5790                           
  5791                           ; Regs used in ___flpack: [wreg+status,2+status,0]
  5792  17B4  0824               	movf	___flpack@exp,w
  5793  17B5  1903               	btfsc	3,2
  5794  17B6  2FBD               	goto	l6881
  5795  17B7  0823               	movf	___flpack@arg+3,w
  5796  17B8  0422               	iorwf	___flpack@arg+2,w
  5797  17B9  0421               	iorwf	___flpack@arg+1,w
  5798  17BA  0420               	iorwf	___flpack@arg,w
  5799  17BB  1D03               	skipz
  5800  17BC  2FC8               	goto	l10867
  5801  17BD                     l6881:	
  5802  17BD  01A0               	clrf	?___flpack
  5803  17BE  01A1               	clrf	?___flpack+1
  5804  17BF  01A2               	clrf	?___flpack+2
  5805  17C0  01A3               	clrf	?___flpack+3
  5806  17C1  0008               	return
  5807  17C2                     l10865:	
  5808  17C2  0AA4               	incf	___flpack@exp,f
  5809  17C3  1003               	clrc
  5810  17C4  0CA3               	rrf	___flpack@arg+3,f
  5811  17C5  0CA2               	rrf	___flpack@arg+2,f
  5812  17C6  0CA1               	rrf	___flpack@arg+1,f
  5813  17C7  0CA0               	rrf	___flpack@arg,f
  5814  17C8                     l10867:	
  5815  17C8  30FE               	movlw	254
  5816  17C9  0523               	andwf	___flpack@arg+3,w
  5817  17CA  1903               	btfsc	3,2
  5818  17CB  2FDA               	goto	l10875
  5819  17CC  2FC2               	goto	l10865
  5820  17CD                     l10869:	
  5821  17CD  0AA4               	incf	___flpack@exp,f
  5822  17CE  0AA0               	incf	___flpack@arg,f
  5823  17CF  1903               	skipnz
  5824  17D0  0AA1               	incf	___flpack@arg+1,f
  5825  17D1  1903               	skipnz
  5826  17D2  0AA2               	incf	___flpack@arg+2,f
  5827  17D3  1903               	skipnz
  5828  17D4  0AA3               	incf	___flpack@arg+3,f
  5829  17D5  1003               	clrc
  5830  17D6  0CA3               	rrf	___flpack@arg+3,f
  5831  17D7  0CA2               	rrf	___flpack@arg+2,f
  5832  17D8  0CA1               	rrf	___flpack@arg+1,f
  5833  17D9  0CA0               	rrf	___flpack@arg,f
  5834  17DA                     l10875:	
  5835  17DA  30FF               	movlw	255
  5836  17DB  0523               	andwf	___flpack@arg+3,w
  5837  17DC  1903               	btfsc	3,2
  5838  17DD  2FE5               	goto	l10879
  5839  17DE  2FCD               	goto	l10869
  5840  17DF                     l10877:	
  5841  17DF  03A4               	decf	___flpack@exp,f
  5842  17E0  1003               	clrc
  5843  17E1  0DA0               	rlf	___flpack@arg,f
  5844  17E2  0DA1               	rlf	___flpack@arg+1,f
  5845  17E3  0DA2               	rlf	___flpack@arg+2,f
  5846  17E4  0DA3               	rlf	___flpack@arg+3,f
  5847  17E5                     l10879:	
  5848  17E5  1FA2               	btfss	___flpack@arg+2,7
  5849  17E6  2FDF               	goto	l10877
  5850  17E7  1824               	btfsc	___flpack@exp,0
  5851  17E8  2FEC               	goto	l10883
  5852  17E9  307F               	movlw	127
  5853  17EA  05A2               	andwf	___flpack@arg+2,f
  5854  17EB  30FF               	movlw	255
  5855  17EC                     l10883:	
  5856  17EC  1003               	clrc
  5857  17ED  0CA4               	rrf	___flpack@exp,f
  5858  17EE  0824               	movf	___flpack@exp,w
  5859  17EF  00A9               	movwf	??___flpack+3
  5860  17F0  01A8               	clrf	??___flpack+2
  5861  17F1  01A7               	clrf	??___flpack+1
  5862  17F2  01A6               	clrf	??___flpack
  5863  17F3  0826               	movf	??___flpack,w
  5864  17F4  04A0               	iorwf	___flpack@arg,f
  5865  17F5  0827               	movf	??___flpack+1,w
  5866  17F6  04A1               	iorwf	___flpack@arg+1,f
  5867  17F7  0828               	movf	??___flpack+2,w
  5868  17F8  04A2               	iorwf	___flpack@arg+2,f
  5869  17F9  0829               	movf	??___flpack+3,w
  5870  17FA  04A3               	iorwf	___flpack@arg+3,f
  5871  17FB  0825               	movf	___flpack@sign,w
  5872  17FC  1D03               	skipz
  5873  17FD  17A3               	bsf	___flpack@arg+3,7
  5874  17FE  0008               	return
  5875  17FF                     __end_of___flpack:	
  5876  17FF                     __ptext1279:	
  5877 ;; =============== function _print_reading ends ============
  5878                           
  5879                           
  5880 ;; *************** function _print_unit *****************
  5881 ;; Defined at:
  5882 ;;		line 123 in file "../../../src/print.c"
  5883 ;; Parameters:    Size  Location     Type
  5884 ;;  unit            1    wreg     unsigned char 
  5885 ;; Auto vars:     Size  Location     Type
  5886 ;;		None
  5887 ;; Return value:  Size  Location     Type
  5888 ;;		None               void
  5889 ;; Registers used:
  5890 ;;		wreg
  5891 ;; Tracked objects:
  5892 ;;		On entry : 0/140
  5893 ;;		On exit  : 0/140
  5894 ;;		Unchanged: FFFFFFFF/0
  5895 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5896 ;;      Params:         0       0       0       0       0
  5897 ;;      Locals:         0       0       0       0       0
  5898 ;;      Temps:          0       0       0       0       0
  5899 ;;      Totals:         0       0       0       0       0
  5900 ;;Total ram usage:        0 bytes
  5901 ;; Hardware stack levels used:    1
  5902 ;; Hardware stack levels required when called:    1
  5903 ;; This function calls:
  5904 ;;		Nothing
  5905 ;; This function is called by:
  5906 ;;		_measure_capacitance
  5907 ;;		_measure_inductance
  5908 ;; This function uses a non-reentrant model
  5909 ;;
  5910  17FF                     _print_unit:	
  5911  17FF                     l3792:	
  5912                           ; Regs used in _print_unit: [wreg]
  5913                           
  5914  17FF  0008               	return
  5915  1800                     __end_of_print_unit:	
  5916                           
  5917                           	psect	text1246
  5918  069F                     __ptext1246:	
  5919 ;; =============== function _measure_inductance ends ============
  5920                           
  5921                           
  5922 ;; *************** function _calibrate *****************
  5923 ;; Defined at:
  5924 ;;		line 25 in file "../../../src/measure.c"
  5925 ;; Parameters:    Size  Location     Type
  5926 ;;		None
  5927 ;; Auto vars:     Size  Location     Type
  5928 ;;  i               1    0        unsigned char 
  5929 ;; Return value:  Size  Location     Type
  5930 ;;		None               void
  5931 ;; Registers used:
  5932 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5933 ;; Tracked objects:
  5934 ;;		On entry : 17F/20
  5935 ;;		On exit  : 0/0
  5936 ;;		Unchanged: 0/0
  5937 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5938 ;;      Params:         0       0       0       0       0
  5939 ;;      Locals:         0       0       0       0       0
  5940 ;;      Temps:          0       0       0       0       0
  5941 ;;      Totals:         0       0       0       0       0
  5942 ;;Total ram usage:        0 bytes
  5943 ;; Hardware stack levels used:    1
  5944 ;; Hardware stack levels required when called:    5
  5945 ;; This function calls:
  5946 ;;		_measure_freq
  5947 ;;		___lwtofl
  5948 ;;		_delay10ms
  5949 ;;		_ser_puts
  5950 ;; This function is called by:
  5951 ;;		_main
  5952 ;; This function uses a non-reentrant model
  5953 ;;
  5954  069F                     _calibrate:	
  5955                           
  5956                           ;measure.c: 26: uint8_t i;
  5957                           ;measure.c: 39: PORTC &= ~(1 << 5);
  5958                           
  5959                           ; Regs used in _calibrate: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5960  069F  1283               	bcf	3,5	;RP0=0, select bank0
  5961  06A0  1287               	bcf	7,5	;volatile
  5962                           
  5963                           ;measure.c: 41: F1 = (double)measure_freq();
  5964  06A1  120A  158A  2739   	fcall	_measure_freq
      +       120A  118A         
  5965  06A6  0856               	movf	?_measure_freq+1,w
  5966  06A7  00D1               	movwf	?___lwtofl+1
  5967  06A8  0855               	movf	?_measure_freq,w
  5968  06A9  00D0               	movwf	?___lwtofl
  5969  06AA  120A  158A  2724   	fcall	___lwtofl
      +       120A  118A         
  5970  06AF  0853               	movf	?___lwtofl+3,w
  5971  06B0  1683               	bsf	3,5	;RP0=1, select bank3
  5972  06B1  1703               	bsf	3,6	;RP1=1, select bank3
  5973  06B2  00D8               	movwf	(_F1+3)^(0+384)
  5974  06B3  1283               	bcf	3,5	;RP0=0, select bank0
  5975  06B4  1303               	bcf	3,6	;RP1=0, select bank0
  5976  06B5  0852               	movf	?___lwtofl+2,w
  5977  06B6  1683               	bsf	3,5	;RP0=1, select bank3
  5978  06B7  1703               	bsf	3,6	;RP1=1, select bank3
  5979  06B8  00D7               	movwf	(_F1+2)^(0+384)
  5980  06B9  1283               	bcf	3,5	;RP0=0, select bank0
  5981  06BA  1303               	bcf	3,6	;RP1=0, select bank0
  5982  06BB  0851               	movf	?___lwtofl+1,w
  5983  06BC  1683               	bsf	3,5	;RP0=1, select bank3
  5984  06BD  1703               	bsf	3,6	;RP1=1, select bank3
  5985  06BE  00D6               	movwf	(_F1+1)^(0+384)
  5986  06BF  1283               	bcf	3,5	;RP0=0, select bank0
  5987  06C0  1303               	bcf	3,6	;RP1=0, select bank0
  5988  06C1  0850               	movf	?___lwtofl,w
  5989  06C2  1683               	bsf	3,5	;RP0=1, select bank3
  5990  06C3  1703               	bsf	3,6	;RP1=1, select bank3
  5991  06C4  00D5               	movwf	_F1^(0+384)
  5992                           
  5993                           ;measure.c: 44: F1 = (double)measure_freq();
  5994                           
  5995                           ;measure.c: 42: delay10ms(50);
  5996  06C5  120A  158A  2739   	fcall	_measure_freq
      +       120A  118A         
  5997  06CA  0856               	movf	?_measure_freq+1,w
  5998  06CB  00D1               	movwf	?___lwtofl+1
  5999  06CC  0855               	movf	?_measure_freq,w
  6000  06CD  00D0               	movwf	?___lwtofl
  6001  06CE  120A  158A  2724   	fcall	___lwtofl
      +       120A  118A         
  6002  06D3  0853               	movf	?___lwtofl+3,w
  6003  06D4  1683               	bsf	3,5	;RP0=1, select bank3
  6004  06D5  1703               	bsf	3,6	;RP1=1, select bank3
  6005  06D6  00D8               	movwf	(_F1+3)^(0+384)
  6006  06D7  1283               	bcf	3,5	;RP0=0, select bank0
  6007  06D8  1303               	bcf	3,6	;RP1=0, select bank0
  6008  06D9  0852               	movf	?___lwtofl+2,w
  6009  06DA  1683               	bsf	3,5	;RP0=1, select bank3
  6010  06DB  1703               	bsf	3,6	;RP1=1, select bank3
  6011  06DC  00D7               	movwf	(_F1+2)^(0+384)
  6012  06DD  1283               	bcf	3,5	;RP0=0, select bank0
  6013  06DE  1303               	bcf	3,6	;RP1=0, select bank0
  6014  06DF  0851               	movf	?___lwtofl+1,w
  6015  06E0  1683               	bsf	3,5	;RP0=1, select bank3
  6016  06E1  1703               	bsf	3,6	;RP1=1, select bank3
  6017  06E2  00D6               	movwf	(_F1+1)^(0+384)
  6018  06E3  1283               	bcf	3,5	;RP0=0, select bank0
  6019  06E4  1303               	bcf	3,6	;RP1=0, select bank0
  6020  06E5  0850               	movf	?___lwtofl,w
  6021  06E6  1683               	bsf	3,5	;RP0=1, select bank3
  6022  06E7  1703               	bsf	3,6	;RP1=1, select bank3
  6023  06E8  00D5               	movwf	_F1^(0+384)
  6024                           
  6025                           ;measure.c: 45: PORTC |= (1 << 5);
  6026  06E9  1283               	bcf	3,5	;RP0=0, select bank0
  6027  06EA  1303               	bcf	3,6	;RP1=0, select bank0
  6028  06EB  1687               	bsf	7,5	;volatile
  6029                           
  6030                           ;measure.c: 47: F2 = (double)measure_freq();
  6031  06EC  120A  158A  2739   	fcall	_measure_freq
      +       120A  118A         
  6032  06F1  0856               	movf	?_measure_freq+1,w
  6033  06F2  00D1               	movwf	?___lwtofl+1
  6034  06F3  0855               	movf	?_measure_freq,w
  6035  06F4  00D0               	movwf	?___lwtofl
  6036  06F5  120A  158A  2724   	fcall	___lwtofl
      +       120A  118A         
  6037  06FA  0853               	movf	?___lwtofl+3,w
  6038  06FB  1683               	bsf	3,5	;RP0=1, select bank3
  6039  06FC  1703               	bsf	3,6	;RP1=1, select bank3
  6040  06FD  00C4               	movwf	(_F2+3)^(0+384)
  6041  06FE  1283               	bcf	3,5	;RP0=0, select bank0
  6042  06FF  1303               	bcf	3,6	;RP1=0, select bank0
  6043  0700  0852               	movf	?___lwtofl+2,w
  6044  0701  1683               	bsf	3,5	;RP0=1, select bank3
  6045  0702  1703               	bsf	3,6	;RP1=1, select bank3
  6046  0703  00C3               	movwf	(_F2+2)^(0+384)
  6047  0704  1283               	bcf	3,5	;RP0=0, select bank0
  6048  0705  1303               	bcf	3,6	;RP1=0, select bank0
  6049  0706  0851               	movf	?___lwtofl+1,w
  6050  0707  1683               	bsf	3,5	;RP0=1, select bank3
  6051  0708  1703               	bsf	3,6	;RP1=1, select bank3
  6052  0709  00C2               	movwf	(_F2+1)^(0+384)
  6053  070A  1283               	bcf	3,5	;RP0=0, select bank0
  6054  070B  1303               	bcf	3,6	;RP1=0, select bank0
  6055  070C  0850               	movf	?___lwtofl,w
  6056  070D  1683               	bsf	3,5	;RP0=1, select bank3
  6057  070E  1703               	bsf	3,6	;RP1=1, select bank3
  6058  070F  00C1               	movwf	_F2^(0+384)
  6059                           
  6060                           ;measure.c: 50: F2 = (double)measure_freq();
  6061                           
  6062                           ;measure.c: 48: delay10ms(50);
  6063  0710  120A  158A  2739   	fcall	_measure_freq
      +       120A  118A         
  6064  0715  0856               	movf	?_measure_freq+1,w
  6065  0716  00D1               	movwf	?___lwtofl+1
  6066  0717  0855               	movf	?_measure_freq,w
  6067  0718  00D0               	movwf	?___lwtofl
  6068  0719  120A  158A  2724   	fcall	___lwtofl
  6069  071C  0853               	movf	?___lwtofl+3,w
  6070  071D  1683               	bsf	3,5	;RP0=1, select bank3
  6071  071E  1703               	bsf	3,6	;RP1=1, select bank3
  6072  071F  00C4               	movwf	(_F2+3)^(0+384)
  6073  0720  1283               	bcf	3,5	;RP0=0, select bank0
  6074  0721  1303               	bcf	3,6	;RP1=0, select bank0
  6075  0722  0852               	movf	?___lwtofl+2,w
  6076  0723  1683               	bsf	3,5	;RP0=1, select bank3
  6077  0724  1703               	bsf	3,6	;RP1=1, select bank3
  6078  0725  00C3               	movwf	(_F2+2)^(0+384)
  6079  0726  1283               	bcf	3,5	;RP0=0, select bank0
  6080  0727  1303               	bcf	3,6	;RP1=0, select bank0
  6081  0728  0851               	movf	?___lwtofl+1,w
  6082  0729  1683               	bsf	3,5	;RP0=1, select bank3
  6083  072A  1703               	bsf	3,6	;RP1=1, select bank3
  6084  072B  00C2               	movwf	(_F2+1)^(0+384)
  6085  072C  1283               	bcf	3,5	;RP0=0, select bank0
  6086  072D  1303               	bcf	3,6	;RP1=0, select bank0
  6087  072E  0850               	movf	?___lwtofl,w
  6088  072F  1683               	bsf	3,5	;RP0=1, select bank3
  6089  0730  1703               	bsf	3,6	;RP1=1, select bank3
  6090  0731  00C1               	movwf	_F2^(0+384)
  6091                           
  6092                           ;measure.c: 51: PORTC &= ~(1 << 5);
  6093  0732  1283               	bcf	3,5	;RP0=0, select bank0
  6094  0733  1303               	bcf	3,6	;RP1=0, select bank0
  6095  0734  1287               	bcf	7,5	;volatile
  6096                           
  6097                           ;measure.c: 61: ser_puts("\r\n");
  6098  0735  3097               	movlw	(STR_1-__stringbase)& (0+255)
  6099  0736  160A  118A  2C20   	ljmp	_ser_puts
  6100  0739                     __end_of_calibrate:	
  6101                           
  6102                           	psect	text1248
  6103  0328                     __ptext1248:	
  6104 ;; =============== function _pow ends ============
  6105                           
  6106                           
  6107 ;; *************** function _log10 *****************
  6108 ;; Defined at:
  6109 ;;		line 40 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\log.c"
  6110 ;; Parameters:    Size  Location     Type
  6111 ;;  x               4   30[BANK1 ] unsigned char 
  6112 ;; Auto vars:     Size  Location     Type
  6113 ;;		None
  6114 ;; Return value:  Size  Location     Type
  6115 ;;                  4   30[BANK1 ] unsigned char 
  6116 ;; Registers used:
  6117 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  6118 ;; Tracked objects:
  6119 ;;		On entry : 60/20
  6120 ;;		On exit  : 60/20
  6121 ;;		Unchanged: FFE9F/0
  6122 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6123 ;;      Params:         0       0       4       0       0
  6124 ;;      Locals:         0       0       4       0       0
  6125 ;;      Temps:          0       0       0       0       0
  6126 ;;      Totals:         0       0       8       0       0
  6127 ;;Total ram usage:        8 bytes
  6128 ;; Hardware stack levels used:    1
  6129 ;; Hardware stack levels required when called:    5
  6130 ;; This function calls:
  6131 ;;		_log
  6132 ;;		___flmul
  6133 ;; This function is called by:
  6134 ;;		_format_double
  6135 ;; This function uses a non-reentrant model
  6136 ;;
  6137  0328                     _log10:	
  6138                           
  6139                           ; Regs used in _log10: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  6140  0328  0841               	movf	(log10@x+3)^(0+128),w
  6141  0329  00BD               	movwf	(?_log+3)^(0+128)
  6142  032A  0840               	movf	(log10@x+2)^(0+128),w
  6143  032B  00BC               	movwf	(?_log+2)^(0+128)
  6144  032C  083F               	movf	(log10@x+1)^(0+128),w
  6145  032D  00BB               	movwf	(?_log+1)^(0+128)
  6146  032E  083E               	movf	log10@x^(0+128),w
  6147  032F  00BA               	movwf	?_log^(0+128)
  6148  0330  24BC               	fcall	_log
  6149  0331  083D               	movf	(?_log+3)^(0+128),w
  6150  0332  00C5               	movwf	(_log10$8243+3)^(0+128)
  6151  0333  083C               	movf	(?_log+2)^(0+128),w
  6152  0334  00C4               	movwf	(_log10$8243+2)^(0+128)
  6153  0335  083B               	movf	(?_log+1)^(0+128),w
  6154  0336  00C3               	movwf	(_log10$8243+1)^(0+128)
  6155  0337  083A               	movf	?_log^(0+128),w
  6156  0338  00C2               	movwf	_log10$8243^(0+128)
  6157  0339  303E               	movlw	62
  6158  033A  1283               	bcf	3,5	;RP0=0, select bank0
  6159  033B  00CC               	movwf	?___flmul+3
  6160  033C  30DE               	movlw	222
  6161  033D  00CB               	movwf	?___flmul+2
  6162  033E  305B               	movlw	91
  6163  033F  00CA               	movwf	?___flmul+1
  6164  0340  30D9               	movlw	217
  6165  0341  00C9               	movwf	?___flmul
  6166  0342  1683               	bsf	3,5	;RP0=1, select bank1
  6167  0343  0845               	movf	(_log10$8243+3)^(0+128),w
  6168  0344  1283               	bcf	3,5	;RP0=0, select bank0
  6169  0345  00D0               	movwf	?___flmul+7
  6170  0346  1683               	bsf	3,5	;RP0=1, select bank1
  6171  0347  0844               	movf	(_log10$8243+2)^(0+128),w
  6172  0348  1283               	bcf	3,5	;RP0=0, select bank0
  6173  0349  00CF               	movwf	?___flmul+6
  6174  034A  1683               	bsf	3,5	;RP0=1, select bank1
  6175  034B  0843               	movf	(_log10$8243+1)^(0+128),w
  6176  034C  1283               	bcf	3,5	;RP0=0, select bank0
  6177  034D  00CE               	movwf	?___flmul+5
  6178  034E  1683               	bsf	3,5	;RP0=1, select bank1
  6179  034F  0842               	movf	_log10$8243^(0+128),w
  6180  0350  1283               	bcf	3,5	;RP0=0, select bank0
  6181  0351  00CD               	movwf	?___flmul+4
  6182  0352  120A  158A  2640   	fcall	___flmul
  6183  0355  084C               	movf	?___flmul+3,w
  6184  0356  1683               	bsf	3,5	;RP0=1, select bank1
  6185  0357  00C1               	movwf	(?_log10+3)^(0+128)
  6186  0358  1283               	bcf	3,5	;RP0=0, select bank0
  6187  0359  084B               	movf	?___flmul+2,w
  6188  035A  1683               	bsf	3,5	;RP0=1, select bank1
  6189  035B  00C0               	movwf	(?_log10+2)^(0+128)
  6190  035C  1283               	bcf	3,5	;RP0=0, select bank0
  6191  035D  084A               	movf	?___flmul+1,w
  6192  035E  1683               	bsf	3,5	;RP0=1, select bank1
  6193  035F  00BF               	movwf	(?_log10+1)^(0+128)
  6194  0360  1283               	bcf	3,5	;RP0=0, select bank0
  6195  0361  0849               	movf	?___flmul,w
  6196  0362  1683               	bsf	3,5	;RP0=1, select bank1
  6197  0363  00BE               	movwf	?_log10^(0+128)
  6198  0364  0008               	return
  6199  0365                     __end_of_log10:	
  6200  0365                     __ptext1247:	
  6201 ;; =============== function _calibrate ends ============
  6202                           
  6203                           
  6204 ;; *************** function _pow *****************
  6205 ;; Defined at:
  6206 ;;		line 6 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\pow.c"
  6207 ;; Parameters:    Size  Location     Type
  6208 ;;  x               4   41[BANK1 ] unsigned char 
  6209 ;;  y               4   45[BANK1 ] unsigned char 
  6210 ;; Auto vars:     Size  Location     Type
  6211 ;;  yi              4   54[BANK1 ] unsigned long 
  6212 ;;  sign            1   53[BANK1 ] unsigned char 
  6213 ;; Return value:  Size  Location     Type
  6214 ;;                  4   41[BANK1 ] unsigned char 
  6215 ;; Registers used:
  6216 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  6217 ;; Tracked objects:
  6218 ;;		On entry : 60/20
  6219 ;;		On exit  : 60/20
  6220 ;;		Unchanged: FFE00/0
  6221 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6222 ;;      Params:         0       0       8       0       0
  6223 ;;      Locals:         0       0       9       0       0
  6224 ;;      Temps:          0       0       0       0       0
  6225 ;;      Totals:         0       0      17       0       0
  6226 ;;Total ram usage:       17 bytes
  6227 ;; Hardware stack levels used:    1
  6228 ;; Hardware stack levels required when called:    5
  6229 ;; This function calls:
  6230 ;;		___flge
  6231 ;;		___fltol
  6232 ;;		___lltofl
  6233 ;;		___flneg
  6234 ;;		_log
  6235 ;;		___flmul
  6236 ;;		_exp
  6237 ;; This function is called by:
  6238 ;;		_format_double
  6239 ;; This function uses a non-reentrant model
  6240 ;;
  6241  0365                     _pow:	
  6242                           
  6243                           ; Regs used in _pow: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  6244  0365  01D5               	clrf	pow@sign^(0+128)
  6245  0366  084C               	movf	(pow@x+3)^(0+128),w
  6246  0367  044B               	iorwf	(pow@x+2)^(0+128),w
  6247  0368  044A               	iorwf	(pow@x+1)^(0+128),w
  6248  0369  0449               	iorwf	pow@x^(0+128),w
  6249  036A  1D03               	skipz
  6250  036B  2B8A               	goto	l11437
  6251  036C  1283               	bcf	3,5	;RP0=0, select bank0
  6252  036D  01A0               	clrf	?___flge
  6253  036E  01A1               	clrf	?___flge+1
  6254  036F  01A2               	clrf	?___flge+2
  6255  0370  01A3               	clrf	?___flge+3
  6256  0371  1683               	bsf	3,5	;RP0=1, select bank1
  6257  0372  0850               	movf	(pow@y+3)^(0+128),w
  6258  0373  1283               	bcf	3,5	;RP0=0, select bank0
  6259  0374  00A7               	movwf	?___flge+7
  6260  0375  1683               	bsf	3,5	;RP0=1, select bank1
  6261  0376  084F               	movf	(pow@y+2)^(0+128),w
  6262  0377  1283               	bcf	3,5	;RP0=0, select bank0
  6263  0378  00A6               	movwf	?___flge+6
  6264  0379  1683               	bsf	3,5	;RP0=1, select bank1
  6265  037A  084E               	movf	(pow@y+1)^(0+128),w
  6266  037B  1283               	bcf	3,5	;RP0=0, select bank0
  6267  037C  00A5               	movwf	?___flge+5
  6268  037D  1683               	bsf	3,5	;RP0=1, select bank1
  6269  037E  084D               	movf	pow@y^(0+128),w
  6270  037F  1283               	bcf	3,5	;RP0=0, select bank0
  6271  0380  00A4               	movwf	?___flge+4
  6272  0381  120A  158A  26D8   	fcall	___flge
  6273  0384  1683               	bsf	3,5	;RP0=1, select bank1
  6274  0385  01C9               	clrf	?_pow^(0+128)
  6275  0386  01CA               	clrf	(?_pow+1)^(0+128)
  6276  0387  01CB               	clrf	(?_pow+2)^(0+128)
  6277  0388  01CC               	clrf	(?_pow+3)^(0+128)
  6278  0389  0008               	return
  6279  038A                     l11437:	
  6280  038A  0850               	movf	(pow@y+3)^(0+128),w
  6281  038B  044F               	iorwf	(pow@y+2)^(0+128),w
  6282  038C  044E               	iorwf	(pow@y+1)^(0+128),w
  6283  038D  044D               	iorwf	pow@y^(0+128),w
  6284  038E  1D03               	skipz
  6285  038F  2B98               	goto	l11443
  6286  0390  303F               	movlw	63
  6287  0391  00CC               	movwf	(?_pow+3)^(0+128)
  6288  0392  3080               	movlw	128
  6289  0393  00CB               	movwf	(?_pow+2)^(0+128)
  6290  0394  3000               	movlw	0
  6291  0395  01CA               	clrf	(?_pow+1)^(0+128)
  6292  0396  01C9               	clrf	?_pow^(0+128)
  6293  0397  0008               	return
  6294  0398                     l11443:	
  6295  0398  084C               	movf	(pow@x+3)^(0+128),w
  6296  0399  1283               	bcf	3,5	;RP0=0, select bank0
  6297  039A  00A3               	movwf	?___flge+3
  6298  039B  1683               	bsf	3,5	;RP0=1, select bank1
  6299  039C  084B               	movf	(pow@x+2)^(0+128),w
  6300  039D  1283               	bcf	3,5	;RP0=0, select bank0
  6301  039E  00A2               	movwf	?___flge+2
  6302  039F  1683               	bsf	3,5	;RP0=1, select bank1
  6303  03A0  084A               	movf	(pow@x+1)^(0+128),w
  6304  03A1  1283               	bcf	3,5	;RP0=0, select bank0
  6305  03A2  00A1               	movwf	?___flge+1
  6306  03A3  1683               	bsf	3,5	;RP0=1, select bank1
  6307  03A4  0849               	movf	pow@x^(0+128),w
  6308  03A5  1283               	bcf	3,5	;RP0=0, select bank0
  6309  03A6  00A0               	movwf	?___flge
  6310  03A7  01A4               	clrf	?___flge+4
  6311  03A8  01A5               	clrf	?___flge+5
  6312  03A9  01A6               	clrf	?___flge+6
  6313  03AA  01A7               	clrf	?___flge+7
  6314  03AB  120A  158A  26D8   	fcall	___flge
      +       120A  118A         
  6315  03B0  1803               	btfsc	3,0
  6316  03B1  2C2E               	goto	l11455
  6317  03B2  1683               	bsf	3,5	;RP0=1, select bank1
  6318  03B3  0850               	movf	(pow@y+3)^(0+128),w
  6319  03B4  1283               	bcf	3,5	;RP0=0, select bank0
  6320  03B5  00AF               	movwf	?___fltol+3
  6321  03B6  1683               	bsf	3,5	;RP0=1, select bank1
  6322  03B7  084F               	movf	(pow@y+2)^(0+128),w
  6323  03B8  1283               	bcf	3,5	;RP0=0, select bank0
  6324  03B9  00AE               	movwf	?___fltol+2
  6325  03BA  1683               	bsf	3,5	;RP0=1, select bank1
  6326  03BB  084E               	movf	(pow@y+1)^(0+128),w
  6327  03BC  1283               	bcf	3,5	;RP0=0, select bank0
  6328  03BD  00AD               	movwf	?___fltol+1
  6329  03BE  1683               	bsf	3,5	;RP0=1, select bank1
  6330  03BF  084D               	movf	pow@y^(0+128),w
  6331  03C0  1283               	bcf	3,5	;RP0=0, select bank0
  6332  03C1  00AC               	movwf	?___fltol
  6333  03C2  160A  118A  2662   	fcall	___fltol
      +       120A  118A         
  6334  03C7  082F               	movf	?___fltol+3,w
  6335  03C8  1683               	bsf	3,5	;RP0=1, select bank1
  6336  03C9  00D9               	movwf	(pow@yi+3)^(0+128)
  6337  03CA  1283               	bcf	3,5	;RP0=0, select bank0
  6338  03CB  082E               	movf	?___fltol+2,w
  6339  03CC  1683               	bsf	3,5	;RP0=1, select bank1
  6340  03CD  00D8               	movwf	(pow@yi+2)^(0+128)
  6341  03CE  1283               	bcf	3,5	;RP0=0, select bank0
  6342  03CF  082D               	movf	?___fltol+1,w
  6343  03D0  1683               	bsf	3,5	;RP0=1, select bank1
  6344  03D1  00D7               	movwf	(pow@yi+1)^(0+128)
  6345  03D2  1283               	bcf	3,5	;RP0=0, select bank0
  6346  03D3  082C               	movf	?___fltol,w
  6347  03D4  1683               	bsf	3,5	;RP0=1, select bank1
  6348  03D5  00D6               	movwf	pow@yi^(0+128)
  6349  03D6  0859               	movf	(pow@yi+3)^(0+128),w
  6350  03D7  1283               	bcf	3,5	;RP0=0, select bank0
  6351  03D8  00AD               	movwf	?___lltofl+3
  6352  03D9  1683               	bsf	3,5	;RP0=1, select bank1
  6353  03DA  0858               	movf	(pow@yi+2)^(0+128),w
  6354  03DB  1283               	bcf	3,5	;RP0=0, select bank0
  6355  03DC  00AC               	movwf	?___lltofl+2
  6356  03DD  1683               	bsf	3,5	;RP0=1, select bank1
  6357  03DE  0857               	movf	(pow@yi+1)^(0+128),w
  6358  03DF  1283               	bcf	3,5	;RP0=0, select bank0
  6359  03E0  00AB               	movwf	?___lltofl+1
  6360  03E1  1683               	bsf	3,5	;RP0=1, select bank1
  6361  03E2  0856               	movf	pow@yi^(0+128),w
  6362  03E3  1283               	bcf	3,5	;RP0=0, select bank0
  6363  03E4  00AA               	movwf	?___lltofl
  6364  03E5  24A5  120A  118A   	fcall	___lltofl
  6365  03E8  1683               	bsf	3,5	;RP0=1, select bank1
  6366  03E9  0850               	movf	(pow@y+3)^(0+128),w
  6367  03EA  1283               	bcf	3,5	;RP0=0, select bank0
  6368  03EB  062D               	xorwf	?___lltofl+3,w
  6369  03EC  1D03               	skipz
  6370  03ED  2BFE               	goto	u3455
  6371  03EE  1683               	bsf	3,5	;RP0=1, select bank1
  6372  03EF  084F               	movf	(pow@y+2)^(0+128),w
  6373  03F0  1283               	bcf	3,5	;RP0=0, select bank0
  6374  03F1  062C               	xorwf	?___lltofl+2,w
  6375  03F2  1D03               	skipz
  6376  03F3  2BFE               	goto	u3455
  6377  03F4  1683               	bsf	3,5	;RP0=1, select bank1
  6378  03F5  084E               	movf	(pow@y+1)^(0+128),w
  6379  03F6  1283               	bcf	3,5	;RP0=0, select bank0
  6380  03F7  062B               	xorwf	?___lltofl+1,w
  6381  03F8  1D03               	skipz
  6382  03F9  2BFE               	goto	u3455
  6383  03FA  1683               	bsf	3,5	;RP0=1, select bank1
  6384  03FB  084D               	movf	pow@y^(0+128),w
  6385  03FC  1283               	bcf	3,5	;RP0=0, select bank0
  6386  03FD  062A               	xorwf	?___lltofl,w
  6387  03FE                     u3455:	
  6388  03FE  1903               	skipnz
  6389  03FF  2C06               	goto	l11449
  6390  0400  1683               	bsf	3,5	;RP0=1, select bank1
  6391  0401  01C9               	clrf	?_pow^(0+128)
  6392  0402  01CA               	clrf	(?_pow+1)^(0+128)
  6393  0403  01CB               	clrf	(?_pow+2)^(0+128)
  6394  0404  01CC               	clrf	(?_pow+3)^(0+128)
  6395  0405  0008               	return
  6396  0406                     l11449:	
  6397  0406  1683               	bsf	3,5	;RP0=1, select bank1
  6398  0407  0856               	movf	pow@yi^(0+128),w
  6399  0408  00D5               	movwf	pow@sign^(0+128)
  6400  0409  3001               	movlw	1
  6401  040A  05D5               	andwf	pow@sign^(0+128),f
  6402  040B  084C               	movf	(pow@x+3)^(0+128),w
  6403  040C  1283               	bcf	3,5	;RP0=0, select bank0
  6404  040D  00A3               	movwf	?___flneg+3
  6405  040E  1683               	bsf	3,5	;RP0=1, select bank1
  6406  040F  084B               	movf	(pow@x+2)^(0+128),w
  6407  0410  1283               	bcf	3,5	;RP0=0, select bank0
  6408  0411  00A2               	movwf	?___flneg+2
  6409  0412  1683               	bsf	3,5	;RP0=1, select bank1
  6410  0413  084A               	movf	(pow@x+1)^(0+128),w
  6411  0414  1283               	bcf	3,5	;RP0=0, select bank0
  6412  0415  00A1               	movwf	?___flneg+1
  6413  0416  1683               	bsf	3,5	;RP0=1, select bank1
  6414  0417  0849               	movf	pow@x^(0+128),w
  6415  0418  1283               	bcf	3,5	;RP0=0, select bank0
  6416  0419  00A0               	movwf	?___flneg
  6417  041A  120A  118A  21A1   	fcall	___flneg
      +       120A  118A         
  6418  041F  0823               	movf	?___flneg+3,w
  6419  0420  1683               	bsf	3,5	;RP0=1, select bank1
  6420  0421  00CC               	movwf	(pow@x+3)^(0+128)
  6421  0422  1283               	bcf	3,5	;RP0=0, select bank0
  6422  0423  0822               	movf	?___flneg+2,w
  6423  0424  1683               	bsf	3,5	;RP0=1, select bank1
  6424  0425  00CB               	movwf	(pow@x+2)^(0+128)
  6425  0426  1283               	bcf	3,5	;RP0=0, select bank0
  6426  0427  0821               	movf	?___flneg+1,w
  6427  0428  1683               	bsf	3,5	;RP0=1, select bank1
  6428  0429  00CA               	movwf	(pow@x+1)^(0+128)
  6429  042A  1283               	bcf	3,5	;RP0=0, select bank0
  6430  042B  0820               	movf	?___flneg,w
  6431  042C  1683               	bsf	3,5	;RP0=1, select bank1
  6432  042D  00C9               	movwf	pow@x^(0+128)
  6433  042E                     l11455:	
  6434  042E  1683               	bsf	3,5	;RP0=1, select bank1
  6435  042F  084C               	movf	(pow@x+3)^(0+128),w
  6436  0430  00BD               	movwf	(?_log+3)^(0+128)
  6437  0431  084B               	movf	(pow@x+2)^(0+128),w
  6438  0432  00BC               	movwf	(?_log+2)^(0+128)
  6439  0433  084A               	movf	(pow@x+1)^(0+128),w
  6440  0434  00BB               	movwf	(?_log+1)^(0+128)
  6441  0435  0849               	movf	pow@x^(0+128),w
  6442  0436  00BA               	movwf	?_log^(0+128)
  6443  0437  24BC               	fcall	_log
  6444  0438  083D               	movf	(?_log+3)^(0+128),w
  6445  0439  00D4               	movwf	(_pow$8244+3)^(0+128)
  6446  043A  083C               	movf	(?_log+2)^(0+128),w
  6447  043B  00D3               	movwf	(_pow$8244+2)^(0+128)
  6448  043C  083B               	movf	(?_log+1)^(0+128),w
  6449  043D  00D2               	movwf	(_pow$8244+1)^(0+128)
  6450  043E  083A               	movf	?_log^(0+128),w
  6451  043F  00D1               	movwf	_pow$8244^(0+128)
  6452  0440  0850               	movf	(pow@y+3)^(0+128),w
  6453  0441  1283               	bcf	3,5	;RP0=0, select bank0
  6454  0442  00CC               	movwf	?___flmul+3
  6455  0443  1683               	bsf	3,5	;RP0=1, select bank1
  6456  0444  084F               	movf	(pow@y+2)^(0+128),w
  6457  0445  1283               	bcf	3,5	;RP0=0, select bank0
  6458  0446  00CB               	movwf	?___flmul+2
  6459  0447  1683               	bsf	3,5	;RP0=1, select bank1
  6460  0448  084E               	movf	(pow@y+1)^(0+128),w
  6461  0449  1283               	bcf	3,5	;RP0=0, select bank0
  6462  044A  00CA               	movwf	?___flmul+1
  6463  044B  1683               	bsf	3,5	;RP0=1, select bank1
  6464  044C  084D               	movf	pow@y^(0+128),w
  6465  044D  1283               	bcf	3,5	;RP0=0, select bank0
  6466  044E  00C9               	movwf	?___flmul
  6467  044F  1683               	bsf	3,5	;RP0=1, select bank1
  6468  0450  0854               	movf	(_pow$8244+3)^(0+128),w
  6469  0451  1283               	bcf	3,5	;RP0=0, select bank0
  6470  0452  00D0               	movwf	?___flmul+7
  6471  0453  1683               	bsf	3,5	;RP0=1, select bank1
  6472  0454  0853               	movf	(_pow$8244+2)^(0+128),w
  6473  0455  1283               	bcf	3,5	;RP0=0, select bank0
  6474  0456  00CF               	movwf	?___flmul+6
  6475  0457  1683               	bsf	3,5	;RP0=1, select bank1
  6476  0458  0852               	movf	(_pow$8244+1)^(0+128),w
  6477  0459  1283               	bcf	3,5	;RP0=0, select bank0
  6478  045A  00CE               	movwf	?___flmul+5
  6479  045B  1683               	bsf	3,5	;RP0=1, select bank1
  6480  045C  0851               	movf	_pow$8244^(0+128),w
  6481  045D  1283               	bcf	3,5	;RP0=0, select bank0
  6482  045E  00CD               	movwf	?___flmul+4
  6483  045F  120A  158A  2640   	fcall	___flmul
      +       120A  118A         
  6484  0464  084C               	movf	?___flmul+3,w
  6485  0465  1683               	bsf	3,5	;RP0=1, select bank1
  6486  0466  00C1               	movwf	(?_exp+3)^(0+128)
  6487  0467  1283               	bcf	3,5	;RP0=0, select bank0
  6488  0468  084B               	movf	?___flmul+2,w
  6489  0469  1683               	bsf	3,5	;RP0=1, select bank1
  6490  046A  00C0               	movwf	(?_exp+2)^(0+128)
  6491  046B  1283               	bcf	3,5	;RP0=0, select bank0
  6492  046C  084A               	movf	?___flmul+1,w
  6493  046D  1683               	bsf	3,5	;RP0=1, select bank1
  6494  046E  00BF               	movwf	(?_exp+1)^(0+128)
  6495  046F  1283               	bcf	3,5	;RP0=0, select bank0
  6496  0470  0849               	movf	?___flmul,w
  6497  0471  1683               	bsf	3,5	;RP0=1, select bank1
  6498  0472  00BE               	movwf	?_exp^(0+128)
  6499  0473  120A  118A  2011   	fcall	_exp
      +       120A  118A         
  6500  0478  0841               	movf	(?_exp+3)^(0+128),w
  6501  0479  00CC               	movwf	(pow@x+3)^(0+128)
  6502  047A  0840               	movf	(?_exp+2)^(0+128),w
  6503  047B  00CB               	movwf	(pow@x+2)^(0+128)
  6504  047C  083F               	movf	(?_exp+1)^(0+128),w
  6505  047D  00CA               	movwf	(pow@x+1)^(0+128)
  6506  047E  083E               	movf	?_exp^(0+128),w
  6507  047F  00C9               	movwf	pow@x^(0+128)
  6508  0480  0855               	movf	pow@sign^(0+128),w
  6509  0481  1903               	btfsc	3,2
  6510  0482  0008               	return
  6511  0483  084C               	movf	(pow@x+3)^(0+128),w
  6512  0484  1283               	bcf	3,5	;RP0=0, select bank0
  6513  0485  00A3               	movwf	?___flneg+3
  6514  0486  1683               	bsf	3,5	;RP0=1, select bank1
  6515  0487  084B               	movf	(pow@x+2)^(0+128),w
  6516  0488  1283               	bcf	3,5	;RP0=0, select bank0
  6517  0489  00A2               	movwf	?___flneg+2
  6518  048A  1683               	bsf	3,5	;RP0=1, select bank1
  6519  048B  084A               	movf	(pow@x+1)^(0+128),w
  6520  048C  1283               	bcf	3,5	;RP0=0, select bank0
  6521  048D  00A1               	movwf	?___flneg+1
  6522  048E  1683               	bsf	3,5	;RP0=1, select bank1
  6523  048F  0849               	movf	pow@x^(0+128),w
  6524  0490  1283               	bcf	3,5	;RP0=0, select bank0
  6525  0491  00A0               	movwf	?___flneg
  6526  0492  120A  118A  21A1   	fcall	___flneg
  6527  0495  0823               	movf	?___flneg+3,w
  6528  0496  1683               	bsf	3,5	;RP0=1, select bank1
  6529  0497  00CC               	movwf	(?_pow+3)^(0+128)
  6530  0498  1283               	bcf	3,5	;RP0=0, select bank0
  6531  0499  0822               	movf	?___flneg+2,w
  6532  049A  1683               	bsf	3,5	;RP0=1, select bank1
  6533  049B  00CB               	movwf	(?_pow+2)^(0+128)
  6534  049C  1283               	bcf	3,5	;RP0=0, select bank0
  6535  049D  0821               	movf	?___flneg+1,w
  6536  049E  1683               	bsf	3,5	;RP0=1, select bank1
  6537  049F  00CA               	movwf	(?_pow+1)^(0+128)
  6538  04A0  1283               	bcf	3,5	;RP0=0, select bank0
  6539  04A1  0820               	movf	?___flneg,w
  6540  04A2  1683               	bsf	3,5	;RP0=1, select bank1
  6541  04A3  00C9               	movwf	?_pow^(0+128)
  6542  04A4  0008               	return
  6543  04A5                     __end_of_pow:	
  6544  04A5                     __ptext1257:	
  6545 ;; =============== function _print_buffer ends ============
  6546                           
  6547                           
  6548 ;; *************** function ___lltofl *****************
  6549 ;; Defined at:
  6550 ;;		line 31 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\lltofl.c"
  6551 ;; Parameters:    Size  Location     Type
  6552 ;;  c               4   10[BANK0 ] unsigned long 
  6553 ;; Auto vars:     Size  Location     Type
  6554 ;;		None
  6555 ;; Return value:  Size  Location     Type
  6556 ;;                  4   10[BANK0 ] unsigned long 
  6557 ;; Registers used:
  6558 ;;		wreg, status,2, status,0, pclath, cstack
  6559 ;; Tracked objects:
  6560 ;;		On entry : 60/0
  6561 ;;		On exit  : 60/0
  6562 ;;		Unchanged: FFF9F/0
  6563 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6564 ;;      Params:         0       4       0       0       0
  6565 ;;      Locals:         0       0       0       0       0
  6566 ;;      Temps:          0       0       0       0       0
  6567 ;;      Totals:         0       4       0       0       0
  6568 ;;Total ram usage:        4 bytes
  6569 ;; Hardware stack levels used:    1
  6570 ;; Hardware stack levels required when called:    2
  6571 ;; This function calls:
  6572 ;;		___flpack
  6573 ;; This function is called by:
  6574 ;;		_pow
  6575 ;; This function uses a non-reentrant model
  6576 ;;
  6577  04A5                     ___lltofl:	
  6578                           
  6579                           ; Regs used in ___lltofl: [wreg+status,2+status,0+pclath+cstack]
  6580  04A5  082D               	movf	___lltofl@c+3,w
  6581  04A6  00A3               	movwf	?___flpack+3
  6582  04A7  082C               	movf	___lltofl@c+2,w
  6583  04A8  00A2               	movwf	?___flpack+2
  6584  04A9  082B               	movf	___lltofl@c+1,w
  6585  04AA  00A1               	movwf	?___flpack+1
  6586  04AB  082A               	movf	___lltofl@c,w
  6587  04AC  00A0               	movwf	?___flpack
  6588  04AD  3096               	movlw	150
  6589  04AE  00A4               	movwf	?___flpack+4
  6590  04AF  01A5               	clrf	?___flpack+5
  6591  04B0  160A  118A  27B4   	fcall	___flpack
  6592  04B3  0823               	movf	?___flpack+3,w
  6593  04B4  00AD               	movwf	?___lltofl+3
  6594  04B5  0822               	movf	?___flpack+2,w
  6595  04B6  00AC               	movwf	?___lltofl+2
  6596  04B7  0821               	movf	?___flpack+1,w
  6597  04B8  00AB               	movwf	?___lltofl+1
  6598  04B9  0820               	movf	?___flpack,w
  6599  04BA  00AA               	movwf	?___lltofl
  6600  04BB  0008               	return
  6601  04BC                     __end_of___lltofl:	
  6602  04BC                     __ptext1250:	
  6603 ;; =============== function _exp ends ============
  6604                           
  6605                           
  6606 ;; *************** function _log *****************
  6607 ;; Defined at:
  6608 ;;		line 6 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\log.c"
  6609 ;; Parameters:    Size  Location     Type
  6610 ;;  x               4   26[BANK1 ] unsigned char 
  6611 ;; Auto vars:     Size  Location     Type
  6612 ;;  exp             2   77[BANK0 ] int 
  6613 ;; Return value:  Size  Location     Type
  6614 ;;                  4   26[BANK1 ] int 
  6615 ;; Registers used:
  6616 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  6617 ;; Tracked objects:
  6618 ;;		On entry : 60/20
  6619 ;;		On exit  : 60/20
  6620 ;;		Unchanged: FFE9F/0
  6621 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6622 ;;      Params:         0       0       4       0       0
  6623 ;;      Locals:         0       2       0       0       0
  6624 ;;      Temps:          0       0       0       0       0
  6625 ;;      Totals:         0       2       4       0       0
  6626 ;;Total ram usage:        6 bytes
  6627 ;; Hardware stack levels used:    1
  6628 ;; Hardware stack levels required when called:    4
  6629 ;; This function calls:
  6630 ;;		___flge
  6631 ;;		_frexp
  6632 ;;		___flmul
  6633 ;;		___fladd
  6634 ;;		_eval_poly
  6635 ;;		___awtofl
  6636 ;; This function is called by:
  6637 ;;		_log10
  6638 ;;		_pow
  6639 ;; This function uses a non-reentrant model
  6640 ;;
  6641  04BC                     _log:	
  6642                           
  6643                           ; Regs used in _log: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  6644  04BC  083D               	movf	(log@x+3)^(0+128),w
  6645  04BD  1283               	bcf	3,5	;RP0=0, select bank0
  6646  04BE  00A3               	movwf	?___flge+3
  6647  04BF  1683               	bsf	3,5	;RP0=1, select bank1
  6648  04C0  083C               	movf	(log@x+2)^(0+128),w
  6649  04C1  1283               	bcf	3,5	;RP0=0, select bank0
  6650  04C2  00A2               	movwf	?___flge+2
  6651  04C3  1683               	bsf	3,5	;RP0=1, select bank1
  6652  04C4  083B               	movf	(log@x+1)^(0+128),w
  6653  04C5  1283               	bcf	3,5	;RP0=0, select bank0
  6654  04C6  00A1               	movwf	?___flge+1
  6655  04C7  1683               	bsf	3,5	;RP0=1, select bank1
  6656  04C8  083A               	movf	log@x^(0+128),w
  6657  04C9  1283               	bcf	3,5	;RP0=0, select bank0
  6658  04CA  00A0               	movwf	?___flge
  6659  04CB  01A4               	clrf	?___flge+4
  6660  04CC  01A5               	clrf	?___flge+5
  6661  04CD  01A6               	clrf	?___flge+6
  6662  04CE  01A7               	clrf	?___flge+7
  6663  04CF  120A  158A  26D8   	fcall	___flge
      +       120A  118A         
  6664  04D4  1803               	btfsc	3,0
  6665  04D5  2CDC               	goto	l11363
  6666  04D6  1683               	bsf	3,5	;RP0=1, select bank1
  6667  04D7  01BA               	clrf	?_log^(0+128)
  6668  04D8  01BB               	clrf	(?_log+1)^(0+128)
  6669  04D9  01BC               	clrf	(?_log+2)^(0+128)
  6670  04DA  01BD               	clrf	(?_log+3)^(0+128)
  6671  04DB  0008               	return
  6672  04DC                     l11363:	
  6673  04DC  1683               	bsf	3,5	;RP0=1, select bank1
  6674  04DD  083D               	movf	(log@x+3)^(0+128),w
  6675  04DE  043C               	iorwf	(log@x+2)^(0+128),w
  6676  04DF  043B               	iorwf	(log@x+1)^(0+128),w
  6677  04E0  043A               	iorwf	log@x^(0+128),w
  6678  04E1  1D03               	skipz
  6679  04E2  2CE8               	goto	l11367
  6680  04E3  01BA               	clrf	?_log^(0+128)
  6681  04E4  01BB               	clrf	(?_log+1)^(0+128)
  6682  04E5  01BC               	clrf	(?_log+2)^(0+128)
  6683  04E6  01BD               	clrf	(?_log+3)^(0+128)
  6684  04E7  0008               	return
  6685  04E8                     l11367:	
  6686  04E8  30BF               	movlw	191
  6687  04E9  1283               	bcf	3,5	;RP0=0, select bank0
  6688  04EA  00DF               	movwf	?___fladd+3
  6689  04EB  3080               	movlw	128
  6690  04EC  00DE               	movwf	?___fladd+2
  6691  04ED  3040               	movlw	64
  6692  04EE  01DD               	clrf	?___fladd+1
  6693  04EF  01DC               	clrf	?___fladd
  6694  04F0  00CC               	movwf	?___flmul+3
  6695  04F1  306D               	movlw	log@exp& (0+255)
  6696  04F2  01CB               	clrf	?___flmul+2
  6697  04F3  01CA               	clrf	?___flmul+1
  6698  04F4  01C9               	clrf	?___flmul
  6699  04F5  00A4               	movwf	?_frexp+4
  6700  04F6  1683               	bsf	3,5	;RP0=1, select bank1
  6701  04F7  083D               	movf	(log@x+3)^(0+128),w
  6702  04F8  1283               	bcf	3,5	;RP0=0, select bank0
  6703  04F9  00A3               	movwf	?_frexp+3
  6704  04FA  1683               	bsf	3,5	;RP0=1, select bank1
  6705  04FB  083C               	movf	(log@x+2)^(0+128),w
  6706  04FC  1283               	bcf	3,5	;RP0=0, select bank0
  6707  04FD  00A2               	movwf	?_frexp+2
  6708  04FE  1683               	bsf	3,5	;RP0=1, select bank1
  6709  04FF  083B               	movf	(log@x+1)^(0+128),w
  6710  0500  1283               	bcf	3,5	;RP0=0, select bank0
  6711  0501  00A1               	movwf	?_frexp+1
  6712  0502  1683               	bsf	3,5	;RP0=1, select bank1
  6713  0503  083A               	movf	log@x^(0+128),w
  6714  0504  1283               	bcf	3,5	;RP0=0, select bank0
  6715  0505  00A0               	movwf	?_frexp
  6716  0506  2598               	fcall	_frexp
  6717  0507  0823               	movf	?_frexp+3,w
  6718  0508  00D0               	movwf	?___flmul+7
  6719  0509  0822               	movf	?_frexp+2,w
  6720  050A  00CF               	movwf	?___flmul+6
  6721  050B  0821               	movf	?_frexp+1,w
  6722  050C  00CE               	movwf	?___flmul+5
  6723  050D  0820               	movf	?_frexp,w
  6724  050E  00CD               	movwf	?___flmul+4
  6725  050F  120A  158A  2640   	fcall	___flmul
      +       120A  118A         
  6726  0514  084C               	movf	?___flmul+3,w
  6727  0515  00E3               	movwf	?___fladd+7
  6728  0516  084B               	movf	?___flmul+2,w
  6729  0517  00E2               	movwf	?___fladd+6
  6730  0518  084A               	movf	?___flmul+1,w
  6731  0519  00E1               	movwf	?___fladd+5
  6732  051A  0849               	movf	?___flmul,w
  6733  051B  00E0               	movwf	?___fladd+4
  6734  051C  120A  158A  20AD   	fcall	___fladd
      +       120A  118A         
  6735  0521  085F               	movf	?___fladd+3,w
  6736  0522  1683               	bsf	3,5	;RP0=1, select bank1
  6737  0523  00BD               	movwf	(log@x+3)^(0+128)
  6738  0524  1283               	bcf	3,5	;RP0=0, select bank0
  6739  0525  085E               	movf	?___fladd+2,w
  6740  0526  1683               	bsf	3,5	;RP0=1, select bank1
  6741  0527  00BC               	movwf	(log@x+2)^(0+128)
  6742  0528  1283               	bcf	3,5	;RP0=0, select bank0
  6743  0529  085D               	movf	?___fladd+1,w
  6744  052A  1683               	bsf	3,5	;RP0=1, select bank1
  6745  052B  00BB               	movwf	(log@x+1)^(0+128)
  6746  052C  1283               	bcf	3,5	;RP0=0, select bank0
  6747  052D  085C               	movf	?___fladd,w
  6748  052E  1683               	bsf	3,5	;RP0=1, select bank1
  6749  052F  00BA               	movwf	log@x^(0+128)
  6750  0530  30FF               	movlw	-1
  6751  0531  1283               	bcf	3,5	;RP0=0, select bank0
  6752  0532  07ED               	addwf	log@exp,f
  6753  0533  1C03               	skipc
  6754  0534  03EE               	decf	log@exp+1,f
  6755  0535  1683               	bsf	3,5	;RP0=1, select bank1
  6756  0536  083D               	movf	(log@x+3)^(0+128),w
  6757  0537  00AD               	movwf	(?_eval_poly+3)^(0+128)
  6758  0538  083C               	movf	(log@x+2)^(0+128),w
  6759  0539  00AC               	movwf	(?_eval_poly+2)^(0+128)
  6760  053A  083B               	movf	(log@x+1)^(0+128),w
  6761  053B  00AB               	movwf	(?_eval_poly+1)^(0+128)
  6762  053C  083A               	movf	log@x^(0+128),w
  6763  053D  00AA               	movwf	?_eval_poly^(0+128)
  6764  053E  3029               	movlw	(log@coeff-__stringbase)& (0+255)
  6765  053F  00AE               	movwf	(?_eval_poly+4)^(0+128)
  6766  0540  3008               	movlw	8
  6767  0541  00AF               	movwf	(?_eval_poly^(0+128)+5)
  6768  0542  01B0               	clrf	((?_eval_poly+1)^(0+128)+5)
  6769  0543  120A  158A  2008   	fcall	_eval_poly
      +       120A  118A         
  6770  0548  082D               	movf	(?_eval_poly+3)^(0+128),w
  6771  0549  00BD               	movwf	(log@x+3)^(0+128)
  6772  054A  082C               	movf	(?_eval_poly+2)^(0+128),w
  6773  054B  00BC               	movwf	(log@x+2)^(0+128)
  6774  054C  082B               	movf	(?_eval_poly+1)^(0+128),w
  6775  054D  00BB               	movwf	(log@x+1)^(0+128)
  6776  054E  082A               	movf	?_eval_poly^(0+128),w
  6777  054F  00BA               	movwf	log@x^(0+128)
  6778  0550  083D               	movf	(log@x+3)^(0+128),w
  6779  0551  1283               	bcf	3,5	;RP0=0, select bank0
  6780  0552  00DF               	movwf	?___fladd+3
  6781  0553  1683               	bsf	3,5	;RP0=1, select bank1
  6782  0554  083C               	movf	(log@x+2)^(0+128),w
  6783  0555  1283               	bcf	3,5	;RP0=0, select bank0
  6784  0556  00DE               	movwf	?___fladd+2
  6785  0557  1683               	bsf	3,5	;RP0=1, select bank1
  6786  0558  083B               	movf	(log@x+1)^(0+128),w
  6787  0559  1283               	bcf	3,5	;RP0=0, select bank0
  6788  055A  00DD               	movwf	?___fladd+1
  6789  055B  1683               	bsf	3,5	;RP0=1, select bank1
  6790  055C  083A               	movf	log@x^(0+128),w
  6791  055D  1283               	bcf	3,5	;RP0=0, select bank0
  6792  055E  00DC               	movwf	?___fladd
  6793  055F  303F               	movlw	63
  6794  0560  00CC               	movwf	?___flmul+3
  6795  0561  3031               	movlw	49
  6796  0562  00CB               	movwf	?___flmul+2
  6797  0563  3072               	movlw	114
  6798  0564  00CA               	movwf	?___flmul+1
  6799  0565  3018               	movlw	24
  6800  0566  00C9               	movwf	?___flmul
  6801  0567  086E               	movf	log@exp+1,w
  6802  0568  00B7               	movwf	?___awtofl+1
  6803  0569  086D               	movf	log@exp,w
  6804  056A  00B6               	movwf	?___awtofl
  6805  056B  160A  118A  26B9   	fcall	___awtofl
      +       120A  118A         
  6806  0570  0839               	movf	?___awtofl+3,w
  6807  0571  00D0               	movwf	?___flmul+7
  6808  0572  0838               	movf	?___awtofl+2,w
  6809  0573  00CF               	movwf	?___flmul+6
  6810  0574  0837               	movf	?___awtofl+1,w
  6811  0575  00CE               	movwf	?___flmul+5
  6812  0576  0836               	movf	?___awtofl,w
  6813  0577  00CD               	movwf	?___flmul+4
  6814  0578  120A  158A  2640   	fcall	___flmul
      +       120A  118A         
  6815  057D  084C               	movf	?___flmul+3,w
  6816  057E  00E3               	movwf	?___fladd+7
  6817  057F  084B               	movf	?___flmul+2,w
  6818  0580  00E2               	movwf	?___fladd+6
  6819  0581  084A               	movf	?___flmul+1,w
  6820  0582  00E1               	movwf	?___fladd+5
  6821  0583  0849               	movf	?___flmul,w
  6822  0584  00E0               	movwf	?___fladd+4
  6823  0585  120A  158A  20AD   	fcall	___fladd
  6824  0588  085F               	movf	?___fladd+3,w
  6825  0589  1683               	bsf	3,5	;RP0=1, select bank1
  6826  058A  00BD               	movwf	(?_log+3)^(0+128)
  6827  058B  1283               	bcf	3,5	;RP0=0, select bank0
  6828  058C  085E               	movf	?___fladd+2,w
  6829  058D  1683               	bsf	3,5	;RP0=1, select bank1
  6830  058E  00BC               	movwf	(?_log+2)^(0+128)
  6831  058F  1283               	bcf	3,5	;RP0=0, select bank0
  6832  0590  085D               	movf	?___fladd+1,w
  6833  0591  1683               	bsf	3,5	;RP0=1, select bank1
  6834  0592  00BB               	movwf	(?_log+1)^(0+128)
  6835  0593  1283               	bcf	3,5	;RP0=0, select bank0
  6836  0594  085C               	movf	?___fladd,w
  6837  0595  1683               	bsf	3,5	;RP0=1, select bank1
  6838  0596  00BA               	movwf	?_log^(0+128)
  6839  0597  0008               	return
  6840  0598                     __end_of_log:	
  6841  0598                     __ptext1275:	
  6842 ;; =============== function ___lwdiv ends ============
  6843                           
  6844                           
  6845 ;; *************** function _frexp *****************
  6846 ;; Defined at:
  6847 ;;		line 255 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\frexp.c"
  6848 ;; Parameters:    Size  Location     Type
  6849 ;;  value           4    0[BANK0 ] unsigned int 
  6850 ;;  eptr            1    4[BANK0 ] PTR int 
  6851 ;;		 -> log@exp(2), floor@expon(2), 
  6852 ;; Auto vars:     Size  Location     Type
  6853 ;;		None
  6854 ;; Return value:  Size  Location     Type
  6855 ;;                  4    0[BANK0 ] PTR int 
  6856 ;; Registers used:
  6857 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
  6858 ;; Tracked objects:
  6859 ;;		On entry : 60/0
  6860 ;;		On exit  : 160/0
  6861 ;;		Unchanged: FFE9F/0
  6862 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6863 ;;      Params:         0       5       0       0       0
  6864 ;;      Locals:         0       0       0       0       0
  6865 ;;      Temps:          2       0       0       0       0
  6866 ;;      Totals:         2       5       0       0       0
  6867 ;;Total ram usage:        7 bytes
  6868 ;; Hardware stack levels used:    1
  6869 ;; Hardware stack levels required when called:    1
  6870 ;; This function calls:
  6871 ;;		Nothing
  6872 ;; This function is called by:
  6873 ;;		_floor
  6874 ;;		_log
  6875 ;; This function uses a non-reentrant model
  6876 ;;
  6877  0598                     _frexp:	
  6878                           
  6879                           ; Regs used in _frexp: [wreg-fsr0h+status,2+status,0+btemp+1]
  6880  0598  0823               	movf	frexp@value+3,w
  6881  0599  0422               	iorwf	frexp@value+2,w
  6882  059A  0421               	iorwf	frexp@value+1,w
  6883  059B  0420               	iorwf	frexp@value,w
  6884  059C  1D03               	skipz
  6885  059D  2DA9               	goto	l10803
  6886  059E  0824               	movf	frexp@eptr,w
  6887  059F  0084               	movwf	4
  6888  05A0  1383               	bcf	3,7	;select IRP bank0
  6889  05A1  0180               	clrf	0
  6890  05A2  0A84               	incf	4,f
  6891  05A3  0180               	clrf	0
  6892  05A4  01A0               	clrf	?_frexp
  6893  05A5  01A1               	clrf	?_frexp+1
  6894  05A6  01A2               	clrf	?_frexp+2
  6895  05A7  01A3               	clrf	?_frexp+3
  6896  05A8  0008               	return
  6897  05A9                     l10803:	
  6898  05A9  0823               	movf	frexp@value+3,w
  6899  05AA  397F               	andlw	127
  6900  05AB  00F4               	movwf	??_frexp
  6901  05AC  01F5               	clrf	??_frexp+1
  6902  05AD  1003               	clrc
  6903  05AE  0DF4               	rlf	??_frexp,f
  6904  05AF  0DF5               	rlf	??_frexp+1,f
  6905  05B0  0824               	movf	frexp@eptr,w
  6906  05B1  0084               	movwf	4
  6907  05B2  0874               	movf	??_frexp,w
  6908  05B3  1383               	bcf	3,7	;select IRP bank0
  6909  05B4  0080               	movwf	0
  6910  05B5  0A84               	incf	4,f
  6911  05B6  0875               	movf	??_frexp+1,w
  6912  05B7  0080               	movwf	0
  6913  05B8  0D22               	rlf	frexp@value+2,w
  6914  05B9  0D22               	rlf	frexp@value+2,w
  6915  05BA  3901               	andlw	1
  6916  05BB  00F4               	movwf	??_frexp
  6917  05BC  01F5               	clrf	??_frexp+1
  6918  05BD  0824               	movf	frexp@eptr,w
  6919  05BE  0084               	movwf	4
  6920  05BF  0874               	movf	??_frexp,w
  6921  05C0  0480               	iorwf	0,f
  6922  05C1  0A84               	incf	4,f
  6923  05C2  0875               	movf	??_frexp+1,w
  6924  05C3  0480               	iorwf	0,f
  6925  05C4  0824               	movf	frexp@eptr,w
  6926  05C5  0084               	movwf	4
  6927  05C6  3082               	movlw	130
  6928  05C7  0780               	addwf	0,f
  6929  05C8  0F84               	incfsz	4,f
  6930  05C9  0800               	movf	0,w
  6931  05CA  1803               	skipnc
  6932  05CB  0A00               	incf	0,w
  6933  05CC  00FF               	movwf	127
  6934  05CD  3EFF               	addlw	255
  6935  05CE  0080               	movwf	0
  6936  05CF  0384               	decf	4,f
  6937  05D0  0823               	movf	frexp@value+3,w
  6938  05D1  3980               	andlw	-128
  6939  05D2  383F               	iorlw	63
  6940  05D3  00A3               	movwf	frexp@value+3
  6941  05D4  13A2               	bcf	frexp@value+2,7
  6942  05D5  0008               	return
  6943  05D6                     __end_of_frexp:	
  6944                           
  6945                           	psect	text1249
  6946  0011                     __ptext1249:	
  6947 ;; =============== function _log10 ends ============
  6948                           
  6949                           
  6950 ;; *************** function _exp *****************
  6951 ;; Defined at:
  6952 ;;		line 13 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\exp.c"
  6953 ;; Parameters:    Size  Location     Type
  6954 ;;  x               4   30[BANK1 ] unsigned char 
  6955 ;; Auto vars:     Size  Location     Type
  6956 ;;  exp             2   38[BANK1 ] int 
  6957 ;;  sign            1   40[BANK1 ] unsigned char 
  6958 ;; Return value:  Size  Location     Type
  6959 ;;                  4   30[BANK1 ] unsigned char 
  6960 ;; Registers used:
  6961 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  6962 ;; Tracked objects:
  6963 ;;		On entry : 60/20
  6964 ;;		On exit  : 60/20
  6965 ;;		Unchanged: FFE00/0
  6966 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6967 ;;      Params:         0       0       4       0       0
  6968 ;;      Locals:         0       0       7       0       0
  6969 ;;      Temps:          0       0       0       0       0
  6970 ;;      Totals:         0       0      11       0       0
  6971 ;;Total ram usage:       11 bytes
  6972 ;; Hardware stack levels used:    1
  6973 ;; Hardware stack levels required when called:    4
  6974 ;; This function calls:
  6975 ;;		___flge
  6976 ;;		___flneg
  6977 ;;		___flmul
  6978 ;;		_floor
  6979 ;;		___fltol
  6980 ;;		___awtofl
  6981 ;;		___flsub
  6982 ;;		_eval_poly
  6983 ;;		_ldexp
  6984 ;;		___fldiv
  6985 ;; This function is called by:
  6986 ;;		_pow
  6987 ;; This function uses a non-reentrant model
  6988 ;;
  6989  0011                     _exp:	
  6990                           
  6991                           ; Regs used in _exp: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  6992  0011  0841               	movf	(exp@x+3)^(0+128),w
  6993  0012  0440               	iorwf	(exp@x+2)^(0+128),w
  6994  0013  043F               	iorwf	(exp@x+1)^(0+128),w
  6995  0014  043E               	iorwf	exp@x^(0+128),w
  6996  0015  1D03               	skipz
  6997  0016  281F               	goto	l11383
  6998  0017  303F               	movlw	63
  6999  0018  00C1               	movwf	(?_exp+3)^(0+128)
  7000  0019  3080               	movlw	128
  7001  001A  00C0               	movwf	(?_exp+2)^(0+128)
  7002  001B  3000               	movlw	0
  7003  001C  01BF               	clrf	(?_exp+1)^(0+128)
  7004  001D  01BE               	clrf	?_exp^(0+128)
  7005  001E  0008               	return
  7006  001F                     l11383:	
  7007  001F  3044               	movlw	68
  7008  0020  1283               	bcf	3,5	;RP0=0, select bank0
  7009  0021  00A3               	movwf	?___flge+3
  7010  0022  3031               	movlw	49
  7011  0023  00A2               	movwf	?___flge+2
  7012  0024  3072               	movlw	114
  7013  0025  00A1               	movwf	?___flge+1
  7014  0026  3018               	movlw	24
  7015  0027  00A0               	movwf	?___flge
  7016  0028  1683               	bsf	3,5	;RP0=1, select bank1
  7017  0029  0841               	movf	(exp@x+3)^(0+128),w
  7018  002A  1283               	bcf	3,5	;RP0=0, select bank0
  7019  002B  00A7               	movwf	?___flge+7
  7020  002C  1683               	bsf	3,5	;RP0=1, select bank1
  7021  002D  0840               	movf	(exp@x+2)^(0+128),w
  7022  002E  1283               	bcf	3,5	;RP0=0, select bank0
  7023  002F  00A6               	movwf	?___flge+6
  7024  0030  1683               	bsf	3,5	;RP0=1, select bank1
  7025  0031  083F               	movf	(exp@x+1)^(0+128),w
  7026  0032  1283               	bcf	3,5	;RP0=0, select bank0
  7027  0033  00A5               	movwf	?___flge+5
  7028  0034  1683               	bsf	3,5	;RP0=1, select bank1
  7029  0035  083E               	movf	exp@x^(0+128),w
  7030  0036  1283               	bcf	3,5	;RP0=0, select bank0
  7031  0037  00A4               	movwf	?___flge+4
  7032  0038  120A  158A  26D8   	fcall	___flge
      +       120A  118A         
  7033  003D  1803               	btfsc	3,0
  7034  003E  2848               	goto	l11393
  7035  003F  307F               	movlw	127
  7036  0040  1683               	bsf	3,5	;RP0=1, select bank1
  7037  0041  00C1               	movwf	(?_exp+3)^(0+128)
  7038  0042  00C0               	movwf	(?_exp+2)^(0+128)
  7039  0043  30FE               	movlw	254
  7040  0044  00BF               	movwf	(?_exp+1)^(0+128)
  7041  0045  30F7               	movlw	247
  7042  0046  00BE               	movwf	?_exp^(0+128)
  7043  0047  0008               	return
  7044  0048                     l11393:	
  7045  0048  1683               	bsf	3,5	;RP0=1, select bank1
  7046  0049  0841               	movf	(exp@x+3)^(0+128),w
  7047  004A  1283               	bcf	3,5	;RP0=0, select bank0
  7048  004B  00A3               	movwf	?___flge+3
  7049  004C  1683               	bsf	3,5	;RP0=1, select bank1
  7050  004D  0840               	movf	(exp@x+2)^(0+128),w
  7051  004E  1283               	bcf	3,5	;RP0=0, select bank0
  7052  004F  00A2               	movwf	?___flge+2
  7053  0050  1683               	bsf	3,5	;RP0=1, select bank1
  7054  0051  083F               	movf	(exp@x+1)^(0+128),w
  7055  0052  1283               	bcf	3,5	;RP0=0, select bank0
  7056  0053  00A1               	movwf	?___flge+1
  7057  0054  1683               	bsf	3,5	;RP0=1, select bank1
  7058  0055  083E               	movf	exp@x^(0+128),w
  7059  0056  1283               	bcf	3,5	;RP0=0, select bank0
  7060  0057  00A0               	movwf	?___flge
  7061  0058  30C4               	movlw	196
  7062  0059  00A7               	movwf	?___flge+7
  7063  005A  303A               	movlw	58
  7064  005B  00A6               	movwf	?___flge+6
  7065  005C  3048               	movlw	72
  7066  005D  00A5               	movwf	?___flge+5
  7067  005E  3087               	movlw	135
  7068  005F  00A4               	movwf	?___flge+4
  7069  0060  120A  158A  26D8   	fcall	___flge
      +       120A  118A         
  7070  0065  1803               	btfsc	3,0
  7071  0066  286D               	goto	l11397
  7072  0067  1683               	bsf	3,5	;RP0=1, select bank1
  7073  0068  01BE               	clrf	?_exp^(0+128)
  7074  0069  01BF               	clrf	(?_exp+1)^(0+128)
  7075  006A  01C0               	clrf	(?_exp+2)^(0+128)
  7076  006B  01C1               	clrf	(?_exp+3)^(0+128)
  7077  006C  0008               	return
  7078  006D                     l11397:	
  7079  006D  1683               	bsf	3,5	;RP0=1, select bank1
  7080  006E  0841               	movf	(exp@x+3)^(0+128),w
  7081  006F  1283               	bcf	3,5	;RP0=0, select bank0
  7082  0070  00A3               	movwf	?___flge+3
  7083  0071  1683               	bsf	3,5	;RP0=1, select bank1
  7084  0072  0840               	movf	(exp@x+2)^(0+128),w
  7085  0073  1283               	bcf	3,5	;RP0=0, select bank0
  7086  0074  00A2               	movwf	?___flge+2
  7087  0075  1683               	bsf	3,5	;RP0=1, select bank1
  7088  0076  083F               	movf	(exp@x+1)^(0+128),w
  7089  0077  1283               	bcf	3,5	;RP0=0, select bank0
  7090  0078  00A1               	movwf	?___flge+1
  7091  0079  1683               	bsf	3,5	;RP0=1, select bank1
  7092  007A  083E               	movf	exp@x^(0+128),w
  7093  007B  1283               	bcf	3,5	;RP0=0, select bank0
  7094  007C  00A0               	movwf	?___flge
  7095  007D  01A4               	clrf	?___flge+4
  7096  007E  01A5               	clrf	?___flge+5
  7097  007F  01A6               	clrf	?___flge+6
  7098  0080  01A7               	clrf	?___flge+7
  7099  0081  120A  158A  26D8   	fcall	___flge
      +       120A  118A         
  7100  0086  3000               	movlw	0
  7101  0087  1C03               	btfss	3,0
  7102  0088  3001               	movlw	1
  7103  0089  1683               	bsf	3,5	;RP0=1, select bank1
  7104  008A  00C8               	movwf	exp@sign^(0+128)
  7105  008B  0848               	movf	exp@sign^(0+128),w
  7106  008C  1903               	btfsc	3,2
  7107  008D  28AF               	goto	l11403
  7108  008E  0841               	movf	(exp@x+3)^(0+128),w
  7109  008F  1283               	bcf	3,5	;RP0=0, select bank0
  7110  0090  00A3               	movwf	?___flneg+3
  7111  0091  1683               	bsf	3,5	;RP0=1, select bank1
  7112  0092  0840               	movf	(exp@x+2)^(0+128),w
  7113  0093  1283               	bcf	3,5	;RP0=0, select bank0
  7114  0094  00A2               	movwf	?___flneg+2
  7115  0095  1683               	bsf	3,5	;RP0=1, select bank1
  7116  0096  083F               	movf	(exp@x+1)^(0+128),w
  7117  0097  1283               	bcf	3,5	;RP0=0, select bank0
  7118  0098  00A1               	movwf	?___flneg+1
  7119  0099  1683               	bsf	3,5	;RP0=1, select bank1
  7120  009A  083E               	movf	exp@x^(0+128),w
  7121  009B  1283               	bcf	3,5	;RP0=0, select bank0
  7122  009C  00A0               	movwf	?___flneg
  7123  009D  21A1  120A  118A   	fcall	___flneg
  7124  00A0  0823               	movf	?___flneg+3,w
  7125  00A1  1683               	bsf	3,5	;RP0=1, select bank1
  7126  00A2  00C1               	movwf	(exp@x+3)^(0+128)
  7127  00A3  1283               	bcf	3,5	;RP0=0, select bank0
  7128  00A4  0822               	movf	?___flneg+2,w
  7129  00A5  1683               	bsf	3,5	;RP0=1, select bank1
  7130  00A6  00C0               	movwf	(exp@x+2)^(0+128)
  7131  00A7  1283               	bcf	3,5	;RP0=0, select bank0
  7132  00A8  0821               	movf	?___flneg+1,w
  7133  00A9  1683               	bsf	3,5	;RP0=1, select bank1
  7134  00AA  00BF               	movwf	(exp@x+1)^(0+128)
  7135  00AB  1283               	bcf	3,5	;RP0=0, select bank0
  7136  00AC  0820               	movf	?___flneg,w
  7137  00AD  1683               	bsf	3,5	;RP0=1, select bank1
  7138  00AE  00BE               	movwf	exp@x^(0+128)
  7139  00AF                     l11403:	
  7140  00AF  303F               	movlw	63
  7141  00B0  1283               	bcf	3,5	;RP0=0, select bank0
  7142  00B1  00CC               	movwf	?___flmul+3
  7143  00B2  30B8               	movlw	184
  7144  00B3  00CB               	movwf	?___flmul+2
  7145  00B4  30AA               	movlw	170
  7146  00B5  00CA               	movwf	?___flmul+1
  7147  00B6  303B               	movlw	59
  7148  00B7  00C9               	movwf	?___flmul
  7149  00B8  1683               	bsf	3,5	;RP0=1, select bank1
  7150  00B9  0841               	movf	(exp@x+3)^(0+128),w
  7151  00BA  1283               	bcf	3,5	;RP0=0, select bank0
  7152  00BB  00D0               	movwf	?___flmul+7
  7153  00BC  1683               	bsf	3,5	;RP0=1, select bank1
  7154  00BD  0840               	movf	(exp@x+2)^(0+128),w
  7155  00BE  1283               	bcf	3,5	;RP0=0, select bank0
  7156  00BF  00CF               	movwf	?___flmul+6
  7157  00C0  1683               	bsf	3,5	;RP0=1, select bank1
  7158  00C1  083F               	movf	(exp@x+1)^(0+128),w
  7159  00C2  1283               	bcf	3,5	;RP0=0, select bank0
  7160  00C3  00CE               	movwf	?___flmul+5
  7161  00C4  1683               	bsf	3,5	;RP0=1, select bank1
  7162  00C5  083E               	movf	exp@x^(0+128),w
  7163  00C6  1283               	bcf	3,5	;RP0=0, select bank0
  7164  00C7  00CD               	movwf	?___flmul+4
  7165  00C8  120A  158A  2640   	fcall	___flmul
      +       120A  118A         
  7166  00CD  084C               	movf	?___flmul+3,w
  7167  00CE  1683               	bsf	3,5	;RP0=1, select bank1
  7168  00CF  00C1               	movwf	(exp@x+3)^(0+128)
  7169  00D0  1283               	bcf	3,5	;RP0=0, select bank0
  7170  00D1  084B               	movf	?___flmul+2,w
  7171  00D2  1683               	bsf	3,5	;RP0=1, select bank1
  7172  00D3  00C0               	movwf	(exp@x+2)^(0+128)
  7173  00D4  1283               	bcf	3,5	;RP0=0, select bank0
  7174  00D5  084A               	movf	?___flmul+1,w
  7175  00D6  1683               	bsf	3,5	;RP0=1, select bank1
  7176  00D7  00BF               	movwf	(exp@x+1)^(0+128)
  7177  00D8  1283               	bcf	3,5	;RP0=0, select bank0
  7178  00D9  0849               	movf	?___flmul,w
  7179  00DA  1683               	bsf	3,5	;RP0=1, select bank1
  7180  00DB  00BE               	movwf	exp@x^(0+128)
  7181  00DC  0841               	movf	(exp@x+3)^(0+128),w
  7182  00DD  1283               	bcf	3,5	;RP0=0, select bank0
  7183  00DE  00EE               	movwf	?_floor+3
  7184  00DF  1683               	bsf	3,5	;RP0=1, select bank1
  7185  00E0  0840               	movf	(exp@x+2)^(0+128),w
  7186  00E1  1283               	bcf	3,5	;RP0=0, select bank0
  7187  00E2  00ED               	movwf	?_floor+2
  7188  00E3  1683               	bsf	3,5	;RP0=1, select bank1
  7189  00E4  083F               	movf	(exp@x+1)^(0+128),w
  7190  00E5  1283               	bcf	3,5	;RP0=0, select bank0
  7191  00E6  00EC               	movwf	?_floor+1
  7192  00E7  1683               	bsf	3,5	;RP0=1, select bank1
  7193  00E8  083E               	movf	exp@x^(0+128),w
  7194  00E9  1283               	bcf	3,5	;RP0=0, select bank0
  7195  00EA  00EB               	movwf	?_floor
  7196  00EB  224D               	fcall	_floor
  7197  00EC  1283               	bcf	3,5	;RP0=0, select bank0
  7198  00ED  086E               	movf	?_floor+3,w
  7199  00EE  00AF               	movwf	?___fltol+3
  7200  00EF  086D               	movf	?_floor+2,w
  7201  00F0  00AE               	movwf	?___fltol+2
  7202  00F1  086C               	movf	?_floor+1,w
  7203  00F2  00AD               	movwf	?___fltol+1
  7204  00F3  086B               	movf	?_floor,w
  7205  00F4  00AC               	movwf	?___fltol
  7206  00F5  160A  118A  2662   	fcall	___fltol
      +       120A  118A         
  7207  00FA  082D               	movf	?___fltol+1,w
  7208  00FB  1683               	bsf	3,5	;RP0=1, select bank1
  7209  00FC  00C7               	movwf	(exp@exp+1)^(0+128)
  7210  00FD  1283               	bcf	3,5	;RP0=0, select bank0
  7211  00FE  082C               	movf	?___fltol,w
  7212  00FF  1683               	bsf	3,5	;RP0=1, select bank1
  7213  0100  00C6               	movwf	exp@exp^(0+128)
  7214  0101  0847               	movf	(exp@exp+1)^(0+128),w
  7215  0102  1283               	bcf	3,5	;RP0=0, select bank0
  7216  0103  00B7               	movwf	?___awtofl+1
  7217  0104  1683               	bsf	3,5	;RP0=1, select bank1
  7218  0105  0846               	movf	exp@exp^(0+128),w
  7219  0106  1283               	bcf	3,5	;RP0=0, select bank0
  7220  0107  00B6               	movwf	?___awtofl
  7221  0108  160A  118A  26B9   	fcall	___awtofl
      +       120A  118A         
  7222  010D  0839               	movf	?___awtofl+3,w
  7223  010E  1683               	bsf	3,5	;RP0=1, select bank1
  7224  010F  00A3               	movwf	(?___flsub+3)^(0+128)
  7225  0110  1283               	bcf	3,5	;RP0=0, select bank0
  7226  0111  0838               	movf	?___awtofl+2,w
  7227  0112  1683               	bsf	3,5	;RP0=1, select bank1
  7228  0113  00A2               	movwf	(?___flsub+2)^(0+128)
  7229  0114  1283               	bcf	3,5	;RP0=0, select bank0
  7230  0115  0837               	movf	?___awtofl+1,w
  7231  0116  1683               	bsf	3,5	;RP0=1, select bank1
  7232  0117  00A1               	movwf	(?___flsub+1)^(0+128)
  7233  0118  1283               	bcf	3,5	;RP0=0, select bank0
  7234  0119  0836               	movf	?___awtofl,w
  7235  011A  1683               	bsf	3,5	;RP0=1, select bank1
  7236  011B  00A0               	movwf	?___flsub^(0+128)
  7237  011C  0841               	movf	(exp@x+3)^(0+128),w
  7238  011D  00A7               	movwf	((?___flsub+3)^(0+128)+4)
  7239  011E  0840               	movf	(exp@x+2)^(0+128),w
  7240  011F  00A6               	movwf	((?___flsub+2)^(0+128)+4)
  7241  0120  083F               	movf	(exp@x+1)^(0+128),w
  7242  0121  00A5               	movwf	((?___flsub+1)^(0+128)+4)
  7243  0122  083E               	movf	exp@x^(0+128),w
  7244  0123  00A4               	movwf	(?___flsub^(0+128)+4)
  7245  0124  160A  118A  26D6   	fcall	___flsub
      +       120A  118A         
  7246  0129  0823               	movf	(?___flsub+3)^(0+128),w
  7247  012A  00C1               	movwf	(exp@x+3)^(0+128)
  7248  012B  0822               	movf	(?___flsub+2)^(0+128),w
  7249  012C  00C0               	movwf	(exp@x+2)^(0+128)
  7250  012D  0821               	movf	(?___flsub+1)^(0+128),w
  7251  012E  00BF               	movwf	(exp@x+1)^(0+128)
  7252  012F  0820               	movf	?___flsub^(0+128),w
  7253  0130  00BE               	movwf	exp@x^(0+128)
  7254  0131  0841               	movf	(exp@x+3)^(0+128),w
  7255  0132  00AD               	movwf	(?_eval_poly+3)^(0+128)
  7256  0133  0840               	movf	(exp@x+2)^(0+128),w
  7257  0134  00AC               	movwf	(?_eval_poly+2)^(0+128)
  7258  0135  083F               	movf	(exp@x+1)^(0+128),w
  7259  0136  00AB               	movwf	(?_eval_poly+1)^(0+128)
  7260  0137  083E               	movf	exp@x^(0+128),w
  7261  0138  00AA               	movwf	?_eval_poly^(0+128)
  7262  0139  3001               	movlw	(exp@coeff-__stringbase)& (0+255)
  7263  013A  00AE               	movwf	(?_eval_poly+4)^(0+128)
  7264  013B  3009               	movlw	9
  7265  013C  00AF               	movwf	(?_eval_poly^(0+128)+5)
  7266  013D  01B0               	clrf	((?_eval_poly+1)^(0+128)+5)
  7267  013E  120A  158A  2008   	fcall	_eval_poly
      +       120A  118A         
  7268  0143  082D               	movf	(?_eval_poly+3)^(0+128),w
  7269  0144  00A3               	movwf	(?_ldexp+3)^(0+128)
  7270  0145  082C               	movf	(?_eval_poly+2)^(0+128),w
  7271  0146  00A2               	movwf	(?_ldexp+2)^(0+128)
  7272  0147  082B               	movf	(?_eval_poly+1)^(0+128),w
  7273  0148  00A1               	movwf	(?_ldexp+1)^(0+128)
  7274  0149  082A               	movf	?_eval_poly^(0+128),w
  7275  014A  00A0               	movwf	?_ldexp^(0+128)
  7276  014B  0847               	movf	(exp@exp+1)^(0+128),w
  7277  014C  00A5               	movwf	((?_ldexp+1)^(0+128)+4)
  7278  014D  0846               	movf	exp@exp^(0+128),w
  7279  014E  00A4               	movwf	(?_ldexp^(0+128)+4)
  7280  014F  21AA  120A  118A   	fcall	_ldexp
  7281  0152  0823               	movf	(?_ldexp+3)^(0+128),w
  7282  0153  00C1               	movwf	(exp@x+3)^(0+128)
  7283  0154  0822               	movf	(?_ldexp+2)^(0+128),w
  7284  0155  00C0               	movwf	(exp@x+2)^(0+128)
  7285  0156  0821               	movf	(?_ldexp+1)^(0+128),w
  7286  0157  00BF               	movwf	(exp@x+1)^(0+128)
  7287  0158  0820               	movf	?_ldexp^(0+128),w
  7288  0159  00BE               	movwf	exp@x^(0+128)
  7289  015A  0848               	movf	exp@sign^(0+128),w
  7290  015B  1903               	btfsc	3,2
  7291  015C  0008               	return
  7292  015D  307F               	movlw	127
  7293  015E  00C5               	movwf	(_exp$7878+3)^(0+128)
  7294  015F  00C4               	movwf	(_exp$7878+2)^(0+128)
  7295  0160  30FE               	movlw	254
  7296  0161  00C3               	movwf	(_exp$7878+1)^(0+128)
  7297  0162  30F7               	movlw	247
  7298  0163  00C2               	movwf	_exp$7878^(0+128)
  7299  0164  0841               	movf	(exp@x+3)^(0+128),w
  7300  0165  0645               	xorwf	(_exp$7878+3)^(0+128),w
  7301  0166  1D03               	skipz
  7302  0167  2972               	goto	u3415
  7303  0168  0840               	movf	(exp@x+2)^(0+128),w
  7304  0169  0644               	xorwf	(_exp$7878+2)^(0+128),w
  7305  016A  1D03               	skipz
  7306  016B  2972               	goto	u3415
  7307  016C  083F               	movf	(exp@x+1)^(0+128),w
  7308  016D  0643               	xorwf	(_exp$7878+1)^(0+128),w
  7309  016E  1D03               	skipz
  7310  016F  2972               	goto	u3415
  7311  0170  083E               	movf	exp@x^(0+128),w
  7312  0171  0642               	xorwf	_exp$7878^(0+128),w
  7313  0172                     u3415:	
  7314  0172  1D03               	skipz
  7315  0173  2979               	goto	l11421
  7316  0174  01BE               	clrf	?_exp^(0+128)
  7317  0175  01BF               	clrf	(?_exp+1)^(0+128)
  7318  0176  01C0               	clrf	(?_exp+2)^(0+128)
  7319  0177  01C1               	clrf	(?_exp+3)^(0+128)
  7320  0178  0008               	return
  7321  0179                     l11421:	
  7322  0179  0841               	movf	(exp@x+3)^(0+128),w
  7323  017A  1283               	bcf	3,5	;RP0=0, select bank0
  7324  017B  00B9               	movwf	?___fldiv+3
  7325  017C  1683               	bsf	3,5	;RP0=1, select bank1
  7326  017D  0840               	movf	(exp@x+2)^(0+128),w
  7327  017E  1283               	bcf	3,5	;RP0=0, select bank0
  7328  017F  00B8               	movwf	?___fldiv+2
  7329  0180  1683               	bsf	3,5	;RP0=1, select bank1
  7330  0181  083F               	movf	(exp@x+1)^(0+128),w
  7331  0182  1283               	bcf	3,5	;RP0=0, select bank0
  7332  0183  00B7               	movwf	?___fldiv+1
  7333  0184  1683               	bsf	3,5	;RP0=1, select bank1
  7334  0185  083E               	movf	exp@x^(0+128),w
  7335  0186  1283               	bcf	3,5	;RP0=0, select bank0
  7336  0187  00B6               	movwf	?___fldiv
  7337  0188  303F               	movlw	63
  7338  0189  00BD               	movwf	?___fldiv+7
  7339  018A  3080               	movlw	128
  7340  018B  00BC               	movwf	?___fldiv+6
  7341  018C  01BB               	clrf	?___fldiv+5
  7342  018D  01BA               	clrf	?___fldiv+4
  7343  018E  160A  118A  25E9   	fcall	___fldiv
  7344  0191  0839               	movf	?___fldiv+3,w
  7345  0192  1683               	bsf	3,5	;RP0=1, select bank1
  7346  0193  00C1               	movwf	(?_exp+3)^(0+128)
  7347  0194  1283               	bcf	3,5	;RP0=0, select bank0
  7348  0195  0838               	movf	?___fldiv+2,w
  7349  0196  1683               	bsf	3,5	;RP0=1, select bank1
  7350  0197  00C0               	movwf	(?_exp+2)^(0+128)
  7351  0198  1283               	bcf	3,5	;RP0=0, select bank0
  7352  0199  0837               	movf	?___fldiv+1,w
  7353  019A  1683               	bsf	3,5	;RP0=1, select bank1
  7354  019B  00BF               	movwf	(?_exp+1)^(0+128)
  7355  019C  1283               	bcf	3,5	;RP0=0, select bank0
  7356  019D  0836               	movf	?___fldiv,w
  7357  019E  1683               	bsf	3,5	;RP0=1, select bank1
  7358  019F  00BE               	movwf	?_exp^(0+128)
  7359  01A0  0008               	return
  7360  01A1                     __end_of_exp:	
  7361  01A1                     __ptext1271:	
  7362 ;; =============== function ___fltol ends ============
  7363                           
  7364                           
  7365 ;; *************** function ___flneg *****************
  7366 ;; Defined at:
  7367 ;;		line 16 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\flneg.c"
  7368 ;; Parameters:    Size  Location     Type
  7369 ;;  f1              4    0[BANK0 ] long 
  7370 ;; Auto vars:     Size  Location     Type
  7371 ;;		None
  7372 ;; Return value:  Size  Location     Type
  7373 ;;                  4    0[BANK0 ] long 
  7374 ;; Registers used:
  7375 ;;		wreg
  7376 ;; Tracked objects:
  7377 ;;		On entry : 60/0
  7378 ;;		On exit  : 60/0
  7379 ;;		Unchanged: FFF9F/0
  7380 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7381 ;;      Params:         0       4       0       0       0
  7382 ;;      Locals:         0       0       0       0       0
  7383 ;;      Temps:          0       0       0       0       0
  7384 ;;      Totals:         0       4       0       0       0
  7385 ;;Total ram usage:        4 bytes
  7386 ;; Hardware stack levels used:    1
  7387 ;; Hardware stack levels required when called:    1
  7388 ;; This function calls:
  7389 ;;		Nothing
  7390 ;; This function is called by:
  7391 ;;		_pow
  7392 ;;		_ldexp
  7393 ;;		_exp
  7394 ;; This function uses a non-reentrant model
  7395 ;;
  7396  01A1                     ___flneg:	
  7397                           
  7398                           ; Regs used in ___flneg: [wreg]
  7399  01A1  0823               	movf	___flneg@f1+3,w
  7400  01A2  0422               	iorwf	___flneg@f1+2,w
  7401  01A3  0421               	iorwf	___flneg@f1+1,w
  7402  01A4  0420               	iorwf	___flneg@f1,w
  7403  01A5  1903               	skipnz
  7404  01A6  0008               	return
  7405  01A7  3080               	movlw	128
  7406  01A8  06A3               	xorwf	___flneg@f1+3,f
  7407  01A9  0008               	return
  7408  01AA                     __end_of___flneg:	
  7409  01AA                     __ptext1264:	
  7410 ;; =============== function ___fladd ends ============
  7411                           
  7412                           
  7413 ;; *************** function _ldexp *****************
  7414 ;; Defined at:
  7415 ;;		line 278 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\frexp.c"
  7416 ;; Parameters:    Size  Location     Type
  7417 ;;  value           4    0[BANK1 ] unsigned char 
  7418 ;;  newexp          2    4[BANK1 ] int 
  7419 ;; Auto vars:     Size  Location     Type
  7420 ;;		None
  7421 ;; Return value:  Size  Location     Type
  7422 ;;                  4    0[BANK1 ] int 
  7423 ;; Registers used:
  7424 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  7425 ;; Tracked objects:
  7426 ;;		On entry : 160/20
  7427 ;;		On exit  : 60/20
  7428 ;;		Unchanged: FFE00/0
  7429 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7430 ;;      Params:         0       0       6       0       0
  7431 ;;      Locals:         0       0       4       0       0
  7432 ;;      Temps:          0       2       0       0       0
  7433 ;;      Totals:         0       2      10       0       0
  7434 ;;Total ram usage:       12 bytes
  7435 ;; Hardware stack levels used:    1
  7436 ;; Hardware stack levels required when called:    2
  7437 ;; This function calls:
  7438 ;;		___flge
  7439 ;;		___flneg
  7440 ;; This function is called by:
  7441 ;;		_exp
  7442 ;; This function uses a non-reentrant model
  7443 ;;
  7444  01AA                     _ldexp:	
  7445                           
  7446                           ; Regs used in _ldexp: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  7447  01AA  0823               	movf	(ldexp@value+3)^(0+128),w
  7448  01AB  0422               	iorwf	(ldexp@value+2)^(0+128),w
  7449  01AC  0421               	iorwf	(ldexp@value+1)^(0+128),w
  7450  01AD  0420               	iorwf	ldexp@value^(0+128),w
  7451  01AE  1D03               	skipz
  7452  01AF  29B5               	goto	l11031
  7453  01B0  01A0               	clrf	?_ldexp^(0+128)
  7454  01B1  01A1               	clrf	(?_ldexp+1)^(0+128)
  7455  01B2  01A2               	clrf	(?_ldexp+2)^(0+128)
  7456  01B3  01A3               	clrf	(?_ldexp+3)^(0+128)
  7457  01B4  0008               	return
  7458  01B5                     l11031:	
  7459  01B5  0823               	movf	(ldexp@value^(0+128)+3),w
  7460  01B6  397F               	andlw	127
  7461  01B7  1283               	bcf	3,5	;RP0=0, select bank0
  7462  01B8  00EB               	movwf	??_ldexp
  7463  01B9  01EC               	clrf	??_ldexp+1
  7464  01BA  1003               	clrc
  7465  01BB  0DEB               	rlf	??_ldexp,f
  7466  01BC  0DEC               	rlf	??_ldexp+1,f
  7467  01BD  086B               	movf	??_ldexp,w
  7468  01BE  1683               	bsf	3,5	;RP0=1, select bank1
  7469  01BF  07A4               	addwf	ldexp@newexp^(0+128),f
  7470  01C0  1803               	skipnc
  7471  01C1  0AA5               	incf	(ldexp@newexp+1)^(0+128),f
  7472  01C2  1283               	bcf	3,5	;RP0=0, select bank0
  7473  01C3  086C               	movf	??_ldexp+1,w
  7474  01C4  1683               	bsf	3,5	;RP0=1, select bank1
  7475  01C5  07A5               	addwf	(ldexp@newexp+1)^(0+128),f
  7476  01C6  0D22               	rlf	(ldexp@value^(0+128)+2),w
  7477  01C7  0D22               	rlf	(ldexp@value^(0+128)+2),w
  7478  01C8  3901               	andlw	1
  7479  01C9  07A4               	addwf	ldexp@newexp^(0+128),f
  7480  01CA  1803               	skipnc
  7481  01CB  0AA5               	incf	(ldexp@newexp+1)^(0+128),f
  7482  01CC  1FA5               	btfss	(ldexp@newexp+1)^(0+128),7
  7483  01CD  29D3               	goto	l11039
  7484  01CE  01A0               	clrf	?_ldexp^(0+128)
  7485  01CF  01A1               	clrf	(?_ldexp+1)^(0+128)
  7486  01D0  01A2               	clrf	(?_ldexp+2)^(0+128)
  7487  01D1  01A3               	clrf	(?_ldexp+3)^(0+128)
  7488  01D2  0008               	return
  7489  01D3                     l11039:	
  7490  01D3  0825               	movf	(ldexp@newexp+1)^(0+128),w
  7491  01D4  3A80               	xorlw	128
  7492  01D5  00FF               	movwf	127
  7493  01D6  3081               	movlw	129
  7494  01D7  027F               	subwf	127,w
  7495  01D8  1D03               	skipz
  7496  01D9  29DC               	goto	u2925
  7497  01DA  3000               	movlw	0
  7498  01DB  0224               	subwf	ldexp@newexp^(0+128),w
  7499  01DC                     u2925:	
  7500  01DC  1C03               	skipc
  7501  01DD  2A2A               	goto	l11061
  7502  01DE  1683               	bsf	3,5	;RP0=1, select bank1
  7503  01DF  1303               	bcf	3,6	;RP1=0, select bank1
  7504  01E0  0823               	movf	(ldexp@value+3)^(0+128),w
  7505  01E1  1283               	bcf	3,5	;RP0=0, select bank0
  7506  01E2  00A3               	movwf	?___flge+3
  7507  01E3  1683               	bsf	3,5	;RP0=1, select bank1
  7508  01E4  0822               	movf	(ldexp@value+2)^(0+128),w
  7509  01E5  1283               	bcf	3,5	;RP0=0, select bank0
  7510  01E6  00A2               	movwf	?___flge+2
  7511  01E7  1683               	bsf	3,5	;RP0=1, select bank1
  7512  01E8  0821               	movf	(ldexp@value+1)^(0+128),w
  7513  01E9  1283               	bcf	3,5	;RP0=0, select bank0
  7514  01EA  00A1               	movwf	?___flge+1
  7515  01EB  1683               	bsf	3,5	;RP0=1, select bank1
  7516  01EC  0820               	movf	ldexp@value^(0+128),w
  7517  01ED  1283               	bcf	3,5	;RP0=0, select bank0
  7518  01EE  00A0               	movwf	?___flge
  7519  01EF  01A4               	clrf	?___flge+4
  7520  01F0  01A5               	clrf	?___flge+5
  7521  01F1  01A6               	clrf	?___flge+6
  7522  01F2  01A7               	clrf	?___flge+7
  7523  01F3  120A  158A  26D8   	fcall	___flge
      +       120A  118A         
  7524  01F8  307F               	movlw	127
  7525  01F9  1803               	btfsc	3,0
  7526  01FA  2A22               	goto	L7
  7527  01FB  1683               	bsf	3,5	;RP0=1, select bank1
  7528  01FC  00A9               	movwf	(_ldexp$7694+3)^(0+128)
  7529  01FD  00A8               	movwf	(_ldexp$7694+2)^(0+128)
  7530  01FE  30FE               	movlw	254
  7531  01FF  00A7               	movwf	(_ldexp$7694+1)^(0+128)
  7532  0200  30F7               	movlw	247
  7533  0201  00A6               	movwf	_ldexp$7694^(0+128)
  7534  0202  0829               	movf	(_ldexp$7694+3)^(0+128),w
  7535  0203  1283               	bcf	3,5	;RP0=0, select bank0
  7536  0204  00A3               	movwf	?___flneg+3
  7537  0205  1683               	bsf	3,5	;RP0=1, select bank1
  7538  0206  0828               	movf	(_ldexp$7694+2)^(0+128),w
  7539  0207  1283               	bcf	3,5	;RP0=0, select bank0
  7540  0208  00A2               	movwf	?___flneg+2
  7541  0209  1683               	bsf	3,5	;RP0=1, select bank1
  7542  020A  0827               	movf	(_ldexp$7694+1)^(0+128),w
  7543  020B  1283               	bcf	3,5	;RP0=0, select bank0
  7544  020C  00A1               	movwf	?___flneg+1
  7545  020D  1683               	bsf	3,5	;RP0=1, select bank1
  7546  020E  0826               	movf	_ldexp$7694^(0+128),w
  7547  020F  1283               	bcf	3,5	;RP0=0, select bank0
  7548  0210  00A0               	movwf	?___flneg
  7549  0211  21A1               	fcall	___flneg
  7550  0212  0823               	movf	?___flneg+3,w
  7551  0213  1683               	bsf	3,5	;RP0=1, select bank1
  7552  0214  00A3               	movwf	(?_ldexp+3)^(0+128)
  7553  0215  1283               	bcf	3,5	;RP0=0, select bank0
  7554  0216  0822               	movf	?___flneg+2,w
  7555  0217  1683               	bsf	3,5	;RP0=1, select bank1
  7556  0218  00A2               	movwf	(?_ldexp+2)^(0+128)
  7557  0219  1283               	bcf	3,5	;RP0=0, select bank0
  7558  021A  0821               	movf	?___flneg+1,w
  7559  021B  1683               	bsf	3,5	;RP0=1, select bank1
  7560  021C  00A1               	movwf	(?_ldexp+1)^(0+128)
  7561  021D  1283               	bcf	3,5	;RP0=0, select bank0
  7562  021E  0820               	movf	?___flneg,w
  7563  021F  1683               	bsf	3,5	;RP0=1, select bank1
  7564  0220  00A0               	movwf	?_ldexp^(0+128)
  7565  0221  0008               	return
  7566  0222                     L7:	
  7567  0222  1683               	bsf	3,5	;RP0=1, select bank1
  7568  0223  00A3               	movwf	(?_ldexp+3)^(0+128)
  7569  0224  00A2               	movwf	(?_ldexp+2)^(0+128)
  7570  0225  30FE               	movlw	254
  7571  0226  00A1               	movwf	(?_ldexp+1)^(0+128)
  7572  0227  30F7               	movlw	247
  7573  0228  00A0               	movwf	?_ldexp^(0+128)
  7574  0229  0008               	return
  7575  022A                     l11061:	
  7576  022A  1683               	bsf	3,5	;RP0=1, select bank1
  7577  022B  1303               	bcf	3,6	;RP1=0, select bank1
  7578  022C  0825               	movf	(ldexp@newexp+1)^(0+128),w
  7579  022D  1283               	bcf	3,5	;RP0=0, select bank0
  7580  022E  00EC               	movwf	??_ldexp+1
  7581  022F  1683               	bsf	3,5	;RP0=1, select bank1
  7582  0230  0824               	movf	ldexp@newexp^(0+128),w
  7583  0231  1283               	bcf	3,5	;RP0=0, select bank0
  7584  0232  00EB               	movwf	??_ldexp
  7585  0233  0D6C               	rlf	??_ldexp+1,w
  7586  0234  0CEC               	rrf	??_ldexp+1,f
  7587  0235  0CEB               	rrf	??_ldexp,f
  7588  0236  1683               	bsf	3,5	;RP0=1, select bank1
  7589  0237  0823               	movf	(ldexp@value^(0+128)+3),w
  7590  0238  1283               	bcf	3,5	;RP0=0, select bank0
  7591  0239  066B               	xorwf	??_ldexp,w
  7592  023A  3980               	andlw	-128
  7593  023B  066B               	xorwf	??_ldexp,w
  7594  023C  1683               	bsf	3,5	;RP0=1, select bank1
  7595  023D  00A3               	movwf	(ldexp@value^(0+128)+3)
  7596  023E  0824               	movf	ldexp@newexp^(0+128),w
  7597  023F  3901               	andlw	1
  7598  0240  1283               	bcf	3,5	;RP0=0, select bank0
  7599  0241  00EB               	movwf	??_ldexp
  7600  0242  0CEB               	rrf	??_ldexp,f
  7601  0243  0CEB               	rrf	??_ldexp,f
  7602  0244  1683               	bsf	3,5	;RP0=1, select bank1
  7603  0245  0822               	movf	(ldexp@value^(0+128)+2),w
  7604  0246  1283               	bcf	3,5	;RP0=0, select bank0
  7605  0247  066B               	xorwf	??_ldexp,w
  7606  0248  397F               	andlw	-129
  7607  0249  066B               	xorwf	??_ldexp,w
  7608  024A  1683               	bsf	3,5	;RP0=1, select bank1
  7609  024B  00A2               	movwf	(ldexp@value^(0+128)+2)
  7610  024C  0008               	return
  7611  024D                     __end_of_ldexp:	
  7612  024D                     __ptext1254:	
  7613 ;; =============== function _eval_poly ends ============
  7614                           
  7615                           
  7616 ;; *************** function _floor *****************
  7617 ;; Defined at:
  7618 ;;		line 14 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\floor.c"
  7619 ;; Parameters:    Size  Location     Type
  7620 ;;  x               4   75[BANK0 ] int 
  7621 ;; Auto vars:     Size  Location     Type
  7622 ;;  i               4    0[BANK1 ] int 
  7623 ;;  expon           2    4[BANK1 ] int 
  7624 ;; Return value:  Size  Location     Type
  7625 ;;                  4   75[BANK0 ] int 
  7626 ;; Registers used:
  7627 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  7628 ;; Tracked objects:
  7629 ;;		On entry : 60/0
  7630 ;;		On exit  : 140/0
  7631 ;;		Unchanged: FFE9F/0
  7632 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7633 ;;      Params:         0       4       0       0       0
  7634 ;;      Locals:         0       0       6       0       0
  7635 ;;      Temps:          0       0       0       0       0
  7636 ;;      Totals:         0       4       6       0       0
  7637 ;;Total ram usage:       10 bytes
  7638 ;; Hardware stack levels used:    1
  7639 ;; Hardware stack levels required when called:    3
  7640 ;; This function calls:
  7641 ;;		_frexp
  7642 ;;		___flge
  7643 ;;		___fltol
  7644 ;;		___altofl
  7645 ;;		___fladd
  7646 ;; This function is called by:
  7647 ;;		_format_double
  7648 ;;		_exp
  7649 ;; This function uses a non-reentrant model
  7650 ;;
  7651  024D                     _floor:	
  7652                           
  7653                           ; Regs used in _floor: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  7654  024D  086E               	movf	floor@x+3,w
  7655  024E  00A3               	movwf	?_frexp+3
  7656  024F  086D               	movf	floor@x+2,w
  7657  0250  00A2               	movwf	?_frexp+2
  7658  0251  086C               	movf	floor@x+1,w
  7659  0252  00A1               	movwf	?_frexp+1
  7660  0253  086B               	movf	floor@x,w
  7661  0254  00A0               	movwf	?_frexp
  7662  0255  30A4               	movlw	floor@expon& (0+255)
  7663  0256  00A4               	movwf	?_frexp+4
  7664  0257  120A  118A  2598   	fcall	_frexp
      +       120A  118A         
  7665  025C  1683               	bsf	3,5	;RP0=1, select bank1
  7666  025D  1FA5               	btfss	(floor@expon+1)^(0+128),7
  7667  025E  2A80               	goto	l11287
  7668  025F  1283               	bcf	3,5	;RP0=0, select bank0
  7669  0260  086E               	movf	floor@x+3,w
  7670  0261  00A3               	movwf	?___flge+3
  7671  0262  086D               	movf	floor@x+2,w
  7672  0263  00A2               	movwf	?___flge+2
  7673  0264  086C               	movf	floor@x+1,w
  7674  0265  00A1               	movwf	?___flge+1
  7675  0266  086B               	movf	floor@x,w
  7676  0267  00A0               	movwf	?___flge
  7677  0268  01A4               	clrf	?___flge+4
  7678  0269  01A5               	clrf	?___flge+5
  7679  026A  01A6               	clrf	?___flge+6
  7680  026B  01A7               	clrf	?___flge+7
  7681  026C  120A  158A  26D8   	fcall	___flge
      +       120A  118A         
  7682  0271  1803               	btfsc	3,0
  7683  0272  2A7B               	goto	l6451
  7684  0273  30BF               	movlw	191
  7685  0274  00EE               	movwf	?_floor+3
  7686  0275  3080               	movlw	128
  7687  0276  00ED               	movwf	?_floor+2
  7688  0277  3000               	movlw	0
  7689  0278  01EC               	clrf	?_floor+1
  7690  0279  01EB               	clrf	?_floor
  7691  027A  0008               	return
  7692  027B                     l6451:	
  7693  027B  01EB               	clrf	?_floor
  7694  027C  01EC               	clrf	?_floor+1
  7695  027D  01ED               	clrf	?_floor+2
  7696  027E  01EE               	clrf	?_floor+3
  7697  027F  0008               	return
  7698  0280                     l11287:	
  7699  0280  3000               	movlw	0
  7700  0281  0225               	subwf	(floor@expon+1)^(0+128),w
  7701  0282  301D               	movlw	29
  7702  0283  1903               	skipnz
  7703  0284  0224               	subwf	floor@expon^(0+128),w
  7704  0285  1803               	btfsc	3,0
  7705  0286  0008               	return
  7706  0287  1283               	bcf	3,5	;RP0=0, select bank0
  7707  0288  086E               	movf	floor@x+3,w
  7708  0289  00AF               	movwf	?___fltol+3
  7709  028A  086D               	movf	floor@x+2,w
  7710  028B  00AE               	movwf	?___fltol+2
  7711  028C  086C               	movf	floor@x+1,w
  7712  028D  00AD               	movwf	?___fltol+1
  7713  028E  086B               	movf	floor@x,w
  7714  028F  00AC               	movwf	?___fltol
  7715  0290  160A  118A  2662   	fcall	___fltol
      +       120A  118A         
  7716  0295  082F               	movf	?___fltol+3,w
  7717  0296  00B9               	movwf	?___altofl+3
  7718  0297  082E               	movf	?___fltol+2,w
  7719  0298  00B8               	movwf	?___altofl+2
  7720  0299  082D               	movf	?___fltol+1,w
  7721  029A  00B7               	movwf	?___altofl+1
  7722  029B  082C               	movf	?___fltol,w
  7723  029C  00B6               	movwf	?___altofl
  7724  029D  2300               	fcall	___altofl
  7725  029E  0839               	movf	?___altofl+3,w
  7726  029F  1683               	bsf	3,5	;RP0=1, select bank1
  7727  02A0  00A3               	movwf	(floor@i+3)^(0+128)
  7728  02A1  1283               	bcf	3,5	;RP0=0, select bank0
  7729  02A2  0838               	movf	?___altofl+2,w
  7730  02A3  1683               	bsf	3,5	;RP0=1, select bank1
  7731  02A4  00A2               	movwf	(floor@i+2)^(0+128)
  7732  02A5  1283               	bcf	3,5	;RP0=0, select bank0
  7733  02A6  0837               	movf	?___altofl+1,w
  7734  02A7  1683               	bsf	3,5	;RP0=1, select bank1
  7735  02A8  00A1               	movwf	(floor@i+1)^(0+128)
  7736  02A9  1283               	bcf	3,5	;RP0=0, select bank0
  7737  02AA  0836               	movf	?___altofl,w
  7738  02AB  1683               	bsf	3,5	;RP0=1, select bank1
  7739  02AC  00A0               	movwf	floor@i^(0+128)
  7740  02AD  1283               	bcf	3,5	;RP0=0, select bank0
  7741  02AE  086E               	movf	floor@x+3,w
  7742  02AF  00A3               	movwf	?___flge+3
  7743  02B0  086D               	movf	floor@x+2,w
  7744  02B1  00A2               	movwf	?___flge+2
  7745  02B2  086C               	movf	floor@x+1,w
  7746  02B3  00A1               	movwf	?___flge+1
  7747  02B4  086B               	movf	floor@x,w
  7748  02B5  00A0               	movwf	?___flge
  7749  02B6  1683               	bsf	3,5	;RP0=1, select bank1
  7750  02B7  0823               	movf	(floor@i+3)^(0+128),w
  7751  02B8  1283               	bcf	3,5	;RP0=0, select bank0
  7752  02B9  00A7               	movwf	?___flge+7
  7753  02BA  1683               	bsf	3,5	;RP0=1, select bank1
  7754  02BB  0822               	movf	(floor@i+2)^(0+128),w
  7755  02BC  1283               	bcf	3,5	;RP0=0, select bank0
  7756  02BD  00A6               	movwf	?___flge+6
  7757  02BE  1683               	bsf	3,5	;RP0=1, select bank1
  7758  02BF  0821               	movf	(floor@i+1)^(0+128),w
  7759  02C0  1283               	bcf	3,5	;RP0=0, select bank0
  7760  02C1  00A5               	movwf	?___flge+5
  7761  02C2  1683               	bsf	3,5	;RP0=1, select bank1
  7762  02C3  0820               	movf	floor@i^(0+128),w
  7763  02C4  1283               	bcf	3,5	;RP0=0, select bank0
  7764  02C5  00A4               	movwf	?___flge+4
  7765  02C6  120A  158A  26D8   	fcall	___flge
      +       120A  118A         
  7766  02CB  1803               	btfsc	3,0
  7767  02CC  2AEF               	goto	l11297
  7768  02CD  30BF               	movlw	191
  7769  02CE  00DF               	movwf	?___fladd+3
  7770  02CF  3080               	movlw	128
  7771  02D0  00DE               	movwf	?___fladd+2
  7772  02D1  01DD               	clrf	?___fladd+1
  7773  02D2  01DC               	clrf	?___fladd
  7774  02D3  1683               	bsf	3,5	;RP0=1, select bank1
  7775  02D4  0823               	movf	(floor@i+3)^(0+128),w
  7776  02D5  1283               	bcf	3,5	;RP0=0, select bank0
  7777  02D6  00E3               	movwf	?___fladd+7
  7778  02D7  1683               	bsf	3,5	;RP0=1, select bank1
  7779  02D8  0822               	movf	(floor@i+2)^(0+128),w
  7780  02D9  1283               	bcf	3,5	;RP0=0, select bank0
  7781  02DA  00E2               	movwf	?___fladd+6
  7782  02DB  1683               	bsf	3,5	;RP0=1, select bank1
  7783  02DC  0821               	movf	(floor@i+1)^(0+128),w
  7784  02DD  1283               	bcf	3,5	;RP0=0, select bank0
  7785  02DE  00E1               	movwf	?___fladd+5
  7786  02DF  1683               	bsf	3,5	;RP0=1, select bank1
  7787  02E0  0820               	movf	floor@i^(0+128),w
  7788  02E1  1283               	bcf	3,5	;RP0=0, select bank0
  7789  02E2  00E0               	movwf	?___fladd+4
  7790  02E3  120A  158A  20AD   	fcall	___fladd
  7791  02E6  085F               	movf	?___fladd+3,w
  7792  02E7  00EE               	movwf	?_floor+3
  7793  02E8  085E               	movf	?___fladd+2,w
  7794  02E9  00ED               	movwf	?_floor+2
  7795  02EA  085D               	movf	?___fladd+1,w
  7796  02EB  00EC               	movwf	?_floor+1
  7797  02EC  085C               	movf	?___fladd,w
  7798  02ED  00EB               	movwf	?_floor
  7799  02EE  0008               	return
  7800  02EF                     l11297:	
  7801  02EF  1683               	bsf	3,5	;RP0=1, select bank1
  7802  02F0  0823               	movf	(floor@i+3)^(0+128),w
  7803  02F1  1283               	bcf	3,5	;RP0=0, select bank0
  7804  02F2  00EE               	movwf	?_floor+3
  7805  02F3  1683               	bsf	3,5	;RP0=1, select bank1
  7806  02F4  0822               	movf	(floor@i+2)^(0+128),w
  7807  02F5  1283               	bcf	3,5	;RP0=0, select bank0
  7808  02F6  00ED               	movwf	?_floor+2
  7809  02F7  1683               	bsf	3,5	;RP0=1, select bank1
  7810  02F8  0821               	movf	(floor@i+1)^(0+128),w
  7811  02F9  1283               	bcf	3,5	;RP0=0, select bank0
  7812  02FA  00EC               	movwf	?_floor+1
  7813  02FB  1683               	bsf	3,5	;RP0=1, select bank1
  7814  02FC  0820               	movf	floor@i^(0+128),w
  7815  02FD  1283               	bcf	3,5	;RP0=0, select bank0
  7816  02FE  00EB               	movwf	?_floor
  7817  02FF  0008               	return
  7818  0300                     __end_of_floor:	
  7819  0300                     __ptext1258:	
  7820 ;; =============== function ___lltofl ends ============
  7821                           
  7822                           
  7823 ;; *************** function ___altofl *****************
  7824 ;; Defined at:
  7825 ;;		line 37 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\altofl.c"
  7826 ;; Parameters:    Size  Location     Type
  7827 ;;  c               4   22[BANK0 ] long 
  7828 ;; Auto vars:     Size  Location     Type
  7829 ;;  sign            1   26[BANK0 ] unsigned char 
  7830 ;; Return value:  Size  Location     Type
  7831 ;;                  4   22[BANK0 ] unsigned char 
  7832 ;; Registers used:
  7833 ;;		wreg, status,2, status,0, pclath, cstack
  7834 ;; Tracked objects:
  7835 ;;		On entry : 160/0
  7836 ;;		On exit  : 160/0
  7837 ;;		Unchanged: FFE9F/0
  7838 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7839 ;;      Params:         0       4       0       0       0
  7840 ;;      Locals:         0       1       0       0       0
  7841 ;;      Temps:          0       0       0       0       0
  7842 ;;      Totals:         0       5       0       0       0
  7843 ;;Total ram usage:        5 bytes
  7844 ;; Hardware stack levels used:    1
  7845 ;; Hardware stack levels required when called:    2
  7846 ;; This function calls:
  7847 ;;		___flpack
  7848 ;; This function is called by:
  7849 ;;		_floor
  7850 ;; This function uses a non-reentrant model
  7851 ;;
  7852  0300                     ___altofl:	
  7853                           
  7854                           ; Regs used in ___altofl: [wreg+status,2+status,0+pclath+cstack]
  7855  0300  01BA               	clrf	___altofl@sign
  7856  0301  1FB9               	btfss	___altofl@c+3,7
  7857  0302  2B10               	goto	l11257
  7858  0303  09B6               	comf	___altofl@c,f
  7859  0304  09B7               	comf	___altofl@c+1,f
  7860  0305  09B8               	comf	___altofl@c+2,f
  7861  0306  09B9               	comf	___altofl@c+3,f
  7862  0307  0AB6               	incf	___altofl@c,f
  7863  0308  1903               	skipnz
  7864  0309  0AB7               	incf	___altofl@c+1,f
  7865  030A  1903               	skipnz
  7866  030B  0AB8               	incf	___altofl@c+2,f
  7867  030C  1903               	skipnz
  7868  030D  0AB9               	incf	___altofl@c+3,f
  7869  030E  01BA               	clrf	___altofl@sign
  7870  030F  0ABA               	incf	___altofl@sign,f
  7871  0310                     l11257:	
  7872  0310  0839               	movf	___altofl@c+3,w
  7873  0311  00A3               	movwf	?___flpack+3
  7874  0312  0838               	movf	___altofl@c+2,w
  7875  0313  00A2               	movwf	?___flpack+2
  7876  0314  0837               	movf	___altofl@c+1,w
  7877  0315  00A1               	movwf	?___flpack+1
  7878  0316  0836               	movf	___altofl@c,w
  7879  0317  00A0               	movwf	?___flpack
  7880  0318  3096               	movlw	150
  7881  0319  00A4               	movwf	?___flpack+4
  7882  031A  083A               	movf	___altofl@sign,w
  7883  031B  00A5               	movwf	?___flpack+5
  7884  031C  160A  118A  27B4   	fcall	___flpack
  7885  031F  0823               	movf	?___flpack+3,w
  7886  0320  00B9               	movwf	?___altofl+3
  7887  0321  0822               	movf	?___flpack+2,w
  7888  0322  00B8               	movwf	?___altofl+2
  7889  0323  0821               	movf	?___flpack+1,w
  7890  0324  00B7               	movwf	?___altofl+1
  7891  0325  0820               	movf	?___flpack,w
  7892  0326  00B6               	movwf	?___altofl
  7893  0327  0008               	return
  7894  0328                     __end_of___altofl:	
  7895                           
  7896                           	psect	text1253
  7897  0808                     __ptext1253:	
  7898 ;; =============== function ___flsub ends ============
  7899                           
  7900                           
  7901 ;; *************** function _eval_poly *****************
  7902 ;; Defined at:
  7903 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\evalpoly.c"
  7904 ;; Parameters:    Size  Location     Type
  7905 ;;  x               4   10[BANK1 ] unsigned short 
  7906 ;;  d               1   14[BANK1 ] PTR const 
  7907 ;;		 -> exp@coeff(40), log@coeff(36), 
  7908 ;;  n               2   15[BANK1 ] int 
  7909 ;; Auto vars:     Size  Location     Type
  7910 ;;  res             4   22[BANK1 ] int 
  7911 ;; Return value:  Size  Location     Type
  7912 ;;                  4   10[BANK1 ] int 
  7913 ;; Registers used:
  7914 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  7915 ;; Tracked objects:
  7916 ;;		On entry : 160/20
  7917 ;;		On exit  : 160/20
  7918 ;;		Unchanged: FFE9F/0
  7919 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7920 ;;      Params:         0       0       7       0       0
  7921 ;;      Locals:         0       0       4       0       0
  7922 ;;      Temps:          0       0       5       0       0
  7923 ;;      Totals:         0       0      16       0       0
  7924 ;;Total ram usage:       16 bytes
  7925 ;; Hardware stack levels used:    1
  7926 ;; Hardware stack levels required when called:    3
  7927 ;; This function calls:
  7928 ;;		___flmul
  7929 ;;		___fladd
  7930 ;; This function is called by:
  7931 ;;		_log
  7932 ;;		_exp
  7933 ;; This function uses a non-reentrant model
  7934 ;;
  7935  0808                     _eval_poly:	
  7936                           
  7937 ;; using string table level
  7938                           ; Regs used in _eval_poly: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  7939  0808  082F               	movf	eval_poly@n^(0+128),w
  7940  0809  00B1               	movwf	??_eval_poly^(0+128)
  7941  080A  1003               	clrc
  7942  080B  0DB1               	rlf	??_eval_poly^(0+128),f
  7943  080C  1003               	clrc
  7944  080D  0D31               	rlf	??_eval_poly^(0+128),w
  7945  080E  072E               	addwf	eval_poly@d^(0+128),w
  7946  080F  0084               	movwf	4
  7947  0810  120A  118A  2600   	fcall	stringdir
      +       120A  158A         
  7948  0815  00B2               	movwf	(??_eval_poly+1)^(0+128)
  7949  0816  120A  118A  2600   	fcall	stringdir
      +       120A  158A         
  7950  081B  00B3               	movwf	((??_eval_poly+1)^(0+128)+1)
  7951  081C  120A  118A  2600   	fcall	stringdir
      +       120A  158A         
  7952  0821  00B4               	movwf	((??_eval_poly+1)^(0+128)+2)
  7953  0822  120A  118A  2600   	fcall	stringdir
      +       120A  158A         
  7954  0827  00B5               	movwf	((??_eval_poly+1)^(0+128)+3)
  7955  0828  0835               	movf	(??_eval_poly+4)^(0+128),w
  7956  0829  00B9               	movwf	(eval_poly@res+3)^(0+128)
  7957  082A  0834               	movf	(??_eval_poly+3)^(0+128),w
  7958  082B  00B8               	movwf	(eval_poly@res+2)^(0+128)
  7959  082C  0833               	movf	(??_eval_poly+2)^(0+128),w
  7960  082D  00B7               	movwf	(eval_poly@res+1)^(0+128)
  7961  082E  0832               	movf	(??_eval_poly+1)^(0+128),w
  7962  082F                     L4:	
  7963  082F  00B6               	movwf	eval_poly@res^(0+128)
  7964  0830  0830               	movf	(eval_poly@n+1)^(0+128),w
  7965  0831  042F               	iorwf	eval_poly@n^(0+128),w
  7966  0832  1903               	btfsc	3,2
  7967  0833  28A4               	goto	l11307
  7968  0834  30FF               	movlw	-1
  7969  0835  07AF               	addwf	eval_poly@n^(0+128),f
  7970  0836  1C03               	skipc
  7971  0837  03B0               	decf	(eval_poly@n+1)^(0+128),f
  7972  0838  082F               	movf	eval_poly@n^(0+128),w
  7973  0839  00B1               	movwf	??_eval_poly^(0+128)
  7974  083A  1003               	clrc
  7975  083B  0DB1               	rlf	??_eval_poly^(0+128),f
  7976  083C  1003               	clrc
  7977  083D  0D31               	rlf	??_eval_poly^(0+128),w
  7978  083E  072E               	addwf	eval_poly@d^(0+128),w
  7979  083F  0084               	movwf	4
  7980  0840  120A  118A  2600   	fcall	stringdir
      +       120A  158A         
  7981  0845  00B2               	movwf	(??_eval_poly+1)^(0+128)
  7982  0846  120A  118A  2600   	fcall	stringdir
      +       120A  158A         
  7983  084B  00B3               	movwf	((??_eval_poly+1)^(0+128)+1)
  7984  084C  120A  118A  2600   	fcall	stringdir
      +       120A  158A         
  7985  0851  00B4               	movwf	((??_eval_poly+1)^(0+128)+2)
  7986  0852  120A  118A  2600   	fcall	stringdir
      +       120A  158A         
  7987  0857  00B5               	movwf	((??_eval_poly+1)^(0+128)+3)
  7988  0858  0835               	movf	(??_eval_poly+4)^(0+128),w
  7989  0859  1283               	bcf	3,5	;RP0=0, select bank0
  7990  085A  00DF               	movwf	?___fladd+3
  7991  085B  1683               	bsf	3,5	;RP0=1, select bank1
  7992  085C  0834               	movf	(??_eval_poly+3)^(0+128),w
  7993  085D  1283               	bcf	3,5	;RP0=0, select bank0
  7994  085E  00DE               	movwf	?___fladd+2
  7995  085F  1683               	bsf	3,5	;RP0=1, select bank1
  7996  0860  0833               	movf	(??_eval_poly+2)^(0+128),w
  7997  0861  1283               	bcf	3,5	;RP0=0, select bank0
  7998  0862  00DD               	movwf	?___fladd+1
  7999  0863  1683               	bsf	3,5	;RP0=1, select bank1
  8000  0864  0832               	movf	(??_eval_poly+1)^(0+128),w
  8001  0865  1283               	bcf	3,5	;RP0=0, select bank0
  8002  0866  00DC               	movwf	?___fladd
  8003  0867  1683               	bsf	3,5	;RP0=1, select bank1
  8004  0868  0839               	movf	(eval_poly@res+3)^(0+128),w
  8005  0869  1283               	bcf	3,5	;RP0=0, select bank0
  8006  086A  00CC               	movwf	?___flmul+3
  8007  086B  1683               	bsf	3,5	;RP0=1, select bank1
  8008  086C  0838               	movf	(eval_poly@res+2)^(0+128),w
  8009  086D  1283               	bcf	3,5	;RP0=0, select bank0
  8010  086E  00CB               	movwf	?___flmul+2
  8011  086F  1683               	bsf	3,5	;RP0=1, select bank1
  8012  0870  0837               	movf	(eval_poly@res+1)^(0+128),w
  8013  0871  1283               	bcf	3,5	;RP0=0, select bank0
  8014  0872  00CA               	movwf	?___flmul+1
  8015  0873  1683               	bsf	3,5	;RP0=1, select bank1
  8016  0874  0836               	movf	eval_poly@res^(0+128),w
  8017  0875  1283               	bcf	3,5	;RP0=0, select bank0
  8018  0876  00C9               	movwf	?___flmul
  8019  0877  1683               	bsf	3,5	;RP0=1, select bank1
  8020  0878  082D               	movf	(eval_poly@x+3)^(0+128),w
  8021  0879  1283               	bcf	3,5	;RP0=0, select bank0
  8022  087A  00D0               	movwf	?___flmul+7
  8023  087B  1683               	bsf	3,5	;RP0=1, select bank1
  8024  087C  082C               	movf	(eval_poly@x+2)^(0+128),w
  8025  087D  1283               	bcf	3,5	;RP0=0, select bank0
  8026  087E  00CF               	movwf	?___flmul+6
  8027  087F  1683               	bsf	3,5	;RP0=1, select bank1
  8028  0880  082B               	movf	(eval_poly@x+1)^(0+128),w
  8029  0881  1283               	bcf	3,5	;RP0=0, select bank0
  8030  0882  00CE               	movwf	?___flmul+5
  8031  0883  1683               	bsf	3,5	;RP0=1, select bank1
  8032  0884  082A               	movf	eval_poly@x^(0+128),w
  8033  0885  1283               	bcf	3,5	;RP0=0, select bank0
  8034  0886  00CD               	movwf	?___flmul+4
  8035  0887  2640  120A  158A   	fcall	___flmul
  8036  088A  084C               	movf	?___flmul+3,w
  8037  088B  00E3               	movwf	?___fladd+7
  8038  088C  084B               	movf	?___flmul+2,w
  8039  088D  00E2               	movwf	?___fladd+6
  8040  088E  084A               	movf	?___flmul+1,w
  8041  088F  00E1               	movwf	?___fladd+5
  8042  0890  0849               	movf	?___flmul,w
  8043  0891  00E0               	movwf	?___fladd+4
  8044  0892  20AD  120A  158A   	fcall	___fladd
  8045  0895  085F               	movf	?___fladd+3,w
  8046  0896  1683               	bsf	3,5	;RP0=1, select bank1
  8047  0897  00B9               	movwf	(eval_poly@res+3)^(0+128)
  8048  0898  1283               	bcf	3,5	;RP0=0, select bank0
  8049  0899  085E               	movf	?___fladd+2,w
  8050  089A  1683               	bsf	3,5	;RP0=1, select bank1
  8051  089B  00B8               	movwf	(eval_poly@res+2)^(0+128)
  8052  089C  1283               	bcf	3,5	;RP0=0, select bank0
  8053  089D  085D               	movf	?___fladd+1,w
  8054  089E  1683               	bsf	3,5	;RP0=1, select bank1
  8055  089F  00B7               	movwf	(eval_poly@res+1)^(0+128)
  8056  08A0  1283               	bcf	3,5	;RP0=0, select bank0
  8057  08A1  085C               	movf	?___fladd,w
  8058  08A2  1683               	bsf	3,5	;RP0=1, select bank1
  8059  08A3  282F               	goto	L4
  8060  08A4                     l11307:	
  8061  08A4  0839               	movf	(eval_poly@res+3)^(0+128),w
  8062  08A5  00AD               	movwf	(?_eval_poly+3)^(0+128)
  8063  08A6  0838               	movf	(eval_poly@res+2)^(0+128),w
  8064  08A7  00AC               	movwf	(?_eval_poly+2)^(0+128)
  8065  08A8  0837               	movf	(eval_poly@res+1)^(0+128),w
  8066  08A9  00AB               	movwf	(?_eval_poly+1)^(0+128)
  8067  08AA  0836               	movf	eval_poly@res^(0+128),w
  8068  08AB  00AA               	movwf	?_eval_poly^(0+128)
  8069  08AC  0008               	return
  8070  08AD                     __end_of_eval_poly:	
  8071  08AD                     __ptext1263:	
  8072 ;; =============== function ___fldiv ends ============
  8073                           
  8074                           
  8075 ;; *************** function ___fladd *****************
  8076 ;; Defined at:
  8077 ;;		line 89 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\fladd.c"
  8078 ;; Parameters:    Size  Location     Type
  8079 ;;  f1              4   60[BANK0 ] unsigned char 
  8080 ;;  f2              4   64[BANK0 ] unsigned char 
  8081 ;; Auto vars:     Size  Location     Type
  8082 ;;  exp1            1   74[BANK0 ] unsigned char 
  8083 ;;  exp2            1   73[BANK0 ] unsigned char 
  8084 ;;  sign            1   72[BANK0 ] unsigned char 
  8085 ;; Return value:  Size  Location     Type
  8086 ;;                  4   60[BANK0 ] unsigned char 
  8087 ;; Registers used:
  8088 ;;		wreg, status,2, status,0, pclath, cstack
  8089 ;; Tracked objects:
  8090 ;;		On entry : 60/0
  8091 ;;		On exit  : 60/0
  8092 ;;		Unchanged: FFF9F/0
  8093 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8094 ;;      Params:         0       8       0       0       0
  8095 ;;      Locals:         0       3       0       0       0
  8096 ;;      Temps:          0       4       0       0       0
  8097 ;;      Totals:         0      15       0       0       0
  8098 ;;Total ram usage:       15 bytes
  8099 ;; Hardware stack levels used:    1
  8100 ;; Hardware stack levels required when called:    2
  8101 ;; This function calls:
  8102 ;;		___flpack
  8103 ;; This function is called by:
  8104 ;;		_floor
  8105 ;;		_log
  8106 ;;		___flsub
  8107 ;;		_eval_poly
  8108 ;; This function uses a non-reentrant model
  8109 ;;
  8110  08AD                     ___fladd:	
  8111                           
  8112                           ; Regs used in ___fladd: [wreg+status,2+status,0+pclath+cstack]
  8113  08AD  085C               	movf	___fladd@f1,w
  8114  08AE  00E4               	movwf	??___fladd
  8115  08AF  085D               	movf	___fladd@f1+1,w
  8116  08B0  00E5               	movwf	??___fladd+1
  8117  08B1  085E               	movf	___fladd@f1+2,w
  8118  08B2  00E6               	movwf	??___fladd+2
  8119  08B3  085F               	movf	___fladd@f1+3,w
  8120  08B4  00E7               	movwf	??___fladd+3
  8121  08B5  1003               	clrc
  8122  08B6  0D66               	rlf	??___fladd+2,w
  8123  08B7  0D67               	rlf	??___fladd+3,w
  8124  08B8  00EA               	movwf	___fladd@exp1
  8125  08B9  0860               	movf	___fladd@f2,w
  8126  08BA  00E4               	movwf	??___fladd
  8127  08BB  0861               	movf	___fladd@f2+1,w
  8128  08BC  00E5               	movwf	??___fladd+1
  8129  08BD  0862               	movf	___fladd@f2+2,w
  8130  08BE  00E6               	movwf	??___fladd+2
  8131  08BF  0863               	movf	___fladd@f2+3,w
  8132  08C0  00E7               	movwf	??___fladd+3
  8133  08C1  1003               	clrc
  8134  08C2  0D66               	rlf	??___fladd+2,w
  8135  08C3  0D67               	rlf	??___fladd+3,w
  8136  08C4  00E9               	movwf	___fladd@exp2
  8137  08C5  086A               	movf	___fladd@exp1,w
  8138  08C6  1903               	btfsc	3,2
  8139  08C7  28D4               	goto	l11075
  8140  08C8  0869               	movf	___fladd@exp2,w
  8141  08C9  026A               	subwf	___fladd@exp1,w
  8142  08CA  0869               	movf	___fladd@exp2,w
  8143  08CB  1803               	skipnc
  8144  08CC  28DE               	goto	L6
  8145  08CD  00E4               	movwf	??___fladd
  8146  08CE  086A               	movf	___fladd@exp1,w
  8147  08CF  02E4               	subwf	??___fladd,f
  8148  08D0  3021               	movlw	33
  8149  08D1  0264               	subwf	??___fladd,w
  8150  08D2  1C03               	skipc
  8151  08D3  28DD               	goto	l11079
  8152  08D4                     l11075:	
  8153  08D4  0863               	movf	___fladd@f2+3,w
  8154  08D5  00DF               	movwf	?___fladd+3
  8155  08D6  0862               	movf	___fladd@f2+2,w
  8156  08D7  00DE               	movwf	?___fladd+2
  8157  08D8  0861               	movf	___fladd@f2+1,w
  8158  08D9  00DD               	movwf	?___fladd+1
  8159  08DA  0860               	movf	___fladd@f2,w
  8160  08DB  00DC               	movwf	?___fladd
  8161  08DC  0008               	return
  8162  08DD                     l11079:	
  8163  08DD  0869               	movf	___fladd@exp2,w
  8164  08DE                     L6:	
  8165  08DE  1903               	btfsc	3,2
  8166  08DF  0008               	return
  8167  08E0  086A               	movf	___fladd@exp1,w
  8168  08E1  0269               	subwf	___fladd@exp2,w
  8169  08E2  1803               	skipnc
  8170  08E3  28EC               	goto	l11085
  8171  08E4  086A               	movf	___fladd@exp1,w
  8172  08E5  00E4               	movwf	??___fladd
  8173  08E6  0869               	movf	___fladd@exp2,w
  8174  08E7  02E4               	subwf	??___fladd,f
  8175  08E8  3021               	movlw	33
  8176  08E9  0264               	subwf	??___fladd,w
  8177  08EA  1803               	btfsc	3,0
  8178  08EB  0008               	return
  8179  08EC                     l11085:	
  8180  08EC  3006               	movlw	6
  8181  08ED  00E8               	movwf	___fladd@sign
  8182  08EE  1BDF               	btfsc	___fladd@f1+3,7
  8183  08EF  17E8               	bsf	___fladd@sign,7
  8184  08F0  1BE3               	btfsc	___fladd@f2+3,7
  8185  08F1  1768               	bsf	___fladd@sign,6
  8186  08F2  17DE               	bsf	___fladd@f1+2,7
  8187  08F3  01DF               	clrf	___fladd@f1+3
  8188  08F4  17E2               	bsf	___fladd@f2+2,7
  8189  08F5  01E3               	clrf	___fladd@f2+3
  8190  08F6  0869               	movf	___fladd@exp2,w
  8191  08F7  026A               	subwf	___fladd@exp1,w
  8192  08F8  1803               	skipnc
  8193  08F9  2915               	goto	l11107
  8194  08FA                     l11097:	
  8195  08FA  1003               	clrc
  8196  08FB  0DE0               	rlf	___fladd@f2,f
  8197  08FC  0DE1               	rlf	___fladd@f2+1,f
  8198  08FD  0DE2               	rlf	___fladd@f2+2,f
  8199  08FE  0DE3               	rlf	___fladd@f2+3,f
  8200  08FF  03E9               	decf	___fladd@exp2,f
  8201  0900  0869               	movf	___fladd@exp2,w
  8202  0901  066A               	xorwf	___fladd@exp1,w
  8203  0902  1903               	skipnz
  8204  0903  2910               	goto	l11105
  8205  0904  03E8               	decf	___fladd@sign,f
  8206  0905  0868               	movf	___fladd@sign,w
  8207  0906  3907               	andlw	7
  8208  0907  1903               	btfsc	3,2
  8209  0908  2910               	goto	l11105
  8210  0909  28FA               	goto	l11097
  8211  090A                     l11103:	
  8212  090A  1003               	clrc
  8213  090B  0CDF               	rrf	___fladd@f1+3,f
  8214  090C  0CDE               	rrf	___fladd@f1+2,f
  8215  090D  0CDD               	rrf	___fladd@f1+1,f
  8216  090E  0CDC               	rrf	___fladd@f1,f
  8217  090F  0AEA               	incf	___fladd@exp1,f
  8218  0910                     l11105:	
  8219  0910  086A               	movf	___fladd@exp1,w
  8220  0911  0669               	xorwf	___fladd@exp2,w
  8221  0912  1903               	btfsc	3,2
  8222  0913  2933               	goto	l6587
  8223  0914  290A               	goto	l11103
  8224  0915                     l11107:	
  8225  0915  086A               	movf	___fladd@exp1,w
  8226  0916  0269               	subwf	___fladd@exp2,w
  8227  0917  1803               	skipnc
  8228  0918  2933               	goto	l6587
  8229  0919                     l11109:	
  8230  0919  1003               	clrc
  8231  091A  0DDC               	rlf	___fladd@f1,f
  8232  091B  0DDD               	rlf	___fladd@f1+1,f
  8233  091C  0DDE               	rlf	___fladd@f1+2,f
  8234  091D  0DDF               	rlf	___fladd@f1+3,f
  8235  091E  03EA               	decf	___fladd@exp1,f
  8236  091F  0869               	movf	___fladd@exp2,w
  8237  0920  066A               	xorwf	___fladd@exp1,w
  8238  0921  1903               	skipnz
  8239  0922  292F               	goto	l11117
  8240  0923  03E8               	decf	___fladd@sign,f
  8241  0924  0868               	movf	___fladd@sign,w
  8242  0925  3907               	andlw	7
  8243  0926  1903               	btfsc	3,2
  8244  0927  292F               	goto	l11117
  8245  0928  2919               	goto	l11109
  8246  0929                     l11115:	
  8247  0929  1003               	clrc
  8248  092A  0CE3               	rrf	___fladd@f2+3,f
  8249  092B  0CE2               	rrf	___fladd@f2+2,f
  8250  092C  0CE1               	rrf	___fladd@f2+1,f
  8251  092D  0CE0               	rrf	___fladd@f2,f
  8252  092E  0AE9               	incf	___fladd@exp2,f
  8253  092F                     l11117:	
  8254  092F  086A               	movf	___fladd@exp1,w
  8255  0930  0669               	xorwf	___fladd@exp2,w
  8256  0931  1D03               	skipz
  8257  0932  2929               	goto	l11115
  8258  0933                     l6587:	
  8259  0933  1FE8               	btfss	___fladd@sign,7
  8260  0934  2941               	goto	l11123
  8261  0935  30FF               	movlw	255
  8262  0936  06DC               	xorwf	___fladd@f1,f
  8263  0937  06DD               	xorwf	___fladd@f1+1,f
  8264  0938  06DE               	xorwf	___fladd@f1+2,f
  8265  0939  06DF               	xorwf	___fladd@f1+3,f
  8266  093A  0ADC               	incf	___fladd@f1,f
  8267  093B  1903               	skipnz
  8268  093C  0ADD               	incf	___fladd@f1+1,f
  8269  093D  1903               	skipnz
  8270  093E  0ADE               	incf	___fladd@f1+2,f
  8271  093F  1903               	skipnz
  8272  0940  0ADF               	incf	___fladd@f1+3,f
  8273  0941                     l11123:	
  8274  0941  1F68               	btfss	___fladd@sign,6
  8275  0942  294F               	goto	l11129
  8276  0943  30FF               	movlw	255
  8277  0944  06E0               	xorwf	___fladd@f2,f
  8278  0945  06E1               	xorwf	___fladd@f2+1,f
  8279  0946  06E2               	xorwf	___fladd@f2+2,f
  8280  0947  06E3               	xorwf	___fladd@f2+3,f
  8281  0948  0AE0               	incf	___fladd@f2,f
  8282  0949  1903               	skipnz
  8283  094A  0AE1               	incf	___fladd@f2+1,f
  8284  094B  1903               	skipnz
  8285  094C  0AE2               	incf	___fladd@f2+2,f
  8286  094D  1903               	skipnz
  8287  094E  0AE3               	incf	___fladd@f2+3,f
  8288  094F                     l11129:	
  8289  094F  01E8               	clrf	___fladd@sign
  8290  0950  085C               	movf	___fladd@f1,w
  8291  0951  07E0               	addwf	___fladd@f2,f
  8292  0952  085D               	movf	___fladd@f1+1,w
  8293  0953  1103               	clrz
  8294  0954  1803               	skipnc
  8295  0955  3E01               	addlw	1
  8296  0956  1D03               	btfss	3,2
  8297  0957  07E1               	addwf	___fladd@f2+1,f
  8298  0958  085E               	movf	___fladd@f1+2,w
  8299  0959  1103               	clrz
  8300  095A  1803               	skipnc
  8301  095B  3E01               	addlw	1
  8302  095C  1D03               	btfss	3,2
  8303  095D  07E2               	addwf	___fladd@f2+2,f
  8304  095E  085F               	movf	___fladd@f1+3,w
  8305  095F  1103               	clrz
  8306  0960  1803               	skipnc
  8307  0961  3E01               	addlw	1
  8308  0962  1D03               	btfss	3,2
  8309  0963  07E3               	addwf	___fladd@f2+3,f
  8310  0964  1FE3               	btfss	___fladd@f2+3,7
  8311  0965  2974               	goto	l11141
  8312  0966  30FF               	movlw	255
  8313  0967  06E0               	xorwf	___fladd@f2,f
  8314  0968  06E1               	xorwf	___fladd@f2+1,f
  8315  0969  06E2               	xorwf	___fladd@f2+2,f
  8316  096A  06E3               	xorwf	___fladd@f2+3,f
  8317  096B  0AE0               	incf	___fladd@f2,f
  8318  096C  1903               	skipnz
  8319  096D  0AE1               	incf	___fladd@f2+1,f
  8320  096E  1903               	skipnz
  8321  096F  0AE2               	incf	___fladd@f2+2,f
  8322  0970  1903               	skipnz
  8323  0971  0AE3               	incf	___fladd@f2+3,f
  8324  0972  01E8               	clrf	___fladd@sign
  8325  0973  0AE8               	incf	___fladd@sign,f
  8326  0974                     l11141:	
  8327  0974  0863               	movf	___fladd@f2+3,w
  8328  0975  00A3               	movwf	?___flpack+3
  8329  0976  0862               	movf	___fladd@f2+2,w
  8330  0977  00A2               	movwf	?___flpack+2
  8331  0978  0861               	movf	___fladd@f2+1,w
  8332  0979  00A1               	movwf	?___flpack+1
  8333  097A  0860               	movf	___fladd@f2,w
  8334  097B  00A0               	movwf	?___flpack
  8335  097C  086A               	movf	___fladd@exp1,w
  8336  097D  00A4               	movwf	?___flpack+4
  8337  097E  0868               	movf	___fladd@sign,w
  8338  097F  00A5               	movwf	?___flpack+5
  8339  0980  160A  118A  27B4   	fcall	___flpack
  8340  0983  0823               	movf	?___flpack+3,w
  8341  0984  00DF               	movwf	?___fladd+3
  8342  0985  0822               	movf	?___flpack+2,w
  8343  0986  00DE               	movwf	?___fladd+2
  8344  0987  0821               	movf	?___flpack+1,w
  8345  0988  00DD               	movwf	?___fladd+1
  8346  0989  0820               	movf	?___flpack,w
  8347  098A  00DC               	movwf	?___fladd
  8348  098B  0008               	return
  8349  098C                     __end_of___fladd:	
  8350  098C                     __ptext1245:	
  8351 ;; =============== function _format_double ends ============
  8352                           
  8353                           
  8354 ;; *************** function _measure_inductance *****************
  8355 ;; Defined at:
  8356 ;;		line 197 in file "../../../src/measure.c"
  8357 ;; Parameters:    Size  Location     Type
  8358 ;;		None
  8359 ;; Auto vars:     Size  Location     Type
  8360 ;;  Lin             4   43[BANK1 ] short 
  8361 ;;  denominator     4   12[BANK1 ] short 
  8362 ;;  numerator       4    8[BANK1 ] short 
  8363 ;;  var             2   41[BANK1 ] unsigned int 
  8364 ;;  unit            1   32[BANK1 ] unsigned char 
  8365 ;; Return value:  Size  Location     Type
  8366 ;;		None               void
  8367 ;; Registers used:
  8368 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  8369 ;; Tracked objects:
  8370 ;;		On entry : 60/20
  8371 ;;		On exit  : 60/20
  8372 ;;		Unchanged: 0/0
  8373 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8374 ;;      Params:         0       0       0       0       0
  8375 ;;      Locals:         0       0      39       0       0
  8376 ;;      Temps:          0       0       0       0       0
  8377 ;;      Totals:         0       0      39       0       0
  8378 ;;Total ram usage:       39 bytes
  8379 ;; Hardware stack levels used:    1
  8380 ;; Hardware stack levels required when called:    5
  8381 ;; This function calls:
  8382 ;;		_measure_freq
  8383 ;;		___lwtofl
  8384 ;;		___flge
  8385 ;;		___flsub
  8386 ;;		___flmul
  8387 ;;		___fldiv
  8388 ;;		___fltol
  8389 ;;		_print_reading
  8390 ;;		_print_unit
  8391 ;; This function is called by:
  8392 ;;		_main
  8393 ;; This function uses a non-reentrant model
  8394 ;;
  8395  098C                     _measure_inductance:	
  8396                           
  8397                           ;measure.c: 198: uint8_t unit;
  8398                           ;measure.c: 199: uint16_t var;
  8399                           ;measure.c: 201: double Lin, numerator, denominator;
  8400                           ;measure.c: 207: var = measure_freq();
  8401                           
  8402                           ; Regs used in _measure_inductance: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  8403  098C  2739  120A  158A   	fcall	_measure_freq
  8404  098F  0856               	movf	?_measure_freq+1,w
  8405  0990  1683               	bsf	3,5	;RP0=1, select bank1
  8406  0991  00CA               	movwf	(measure_inductance@var+1)^(0+128)
  8407  0992  1283               	bcf	3,5	;RP0=0, select bank0
  8408  0993  0855               	movf	?_measure_freq,w
  8409  0994  1683               	bsf	3,5	;RP0=1, select bank1
  8410  0995  00C9               	movwf	measure_inductance@var^(0+128)
  8411                           
  8412                           ;measure.c: 209: F3 = (double)var;
  8413  0996  084A               	movf	(measure_inductance@var+1)^(0+128),w
  8414  0997  1283               	bcf	3,5	;RP0=0, select bank0
  8415  0998  00D1               	movwf	?___lwtofl+1
  8416  0999  1683               	bsf	3,5	;RP0=1, select bank1
  8417  099A  0849               	movf	measure_inductance@var^(0+128),w
  8418  099B  1283               	bcf	3,5	;RP0=0, select bank0
  8419  099C  00D0               	movwf	?___lwtofl
  8420  099D  2724  120A  158A   	fcall	___lwtofl
  8421  09A0  0853               	movf	?___lwtofl+3,w
  8422  09A1  1683               	bsf	3,5	;RP0=1, select bank3
  8423  09A2  1703               	bsf	3,6	;RP1=1, select bank3
  8424  09A3  00C8               	movwf	(_F3+3)^(0+384)
  8425  09A4  1283               	bcf	3,5	;RP0=0, select bank0
  8426  09A5  1303               	bcf	3,6	;RP1=0, select bank0
  8427  09A6  0852               	movf	?___lwtofl+2,w
  8428  09A7  1683               	bsf	3,5	;RP0=1, select bank3
  8429  09A8  1703               	bsf	3,6	;RP1=1, select bank3
  8430  09A9  00C7               	movwf	(_F3+2)^(0+384)
  8431  09AA  1283               	bcf	3,5	;RP0=0, select bank0
  8432  09AB  1303               	bcf	3,6	;RP1=0, select bank0
  8433  09AC  0851               	movf	?___lwtofl+1,w
  8434  09AD  1683               	bsf	3,5	;RP0=1, select bank3
  8435  09AE  1703               	bsf	3,6	;RP1=1, select bank3
  8436  09AF  00C6               	movwf	(_F3+1)^(0+384)
  8437  09B0  1283               	bcf	3,5	;RP0=0, select bank0
  8438  09B1  1303               	bcf	3,6	;RP1=0, select bank0
  8439  09B2  0850               	movf	?___lwtofl,w
  8440  09B3  1683               	bsf	3,5	;RP0=1, select bank3
  8441  09B4  1703               	bsf	3,6	;RP1=1, select bank3
  8442  09B5  00C5               	movwf	_F3^(0+384)
  8443                           
  8444                           ;measure.c: 210: if(F3 > F1)
  8445  09B6  0858               	movf	(_F1+3)^(0+384),w
  8446  09B7  1283               	bcf	3,5	;RP0=0, select bank0
  8447  09B8  1303               	bcf	3,6	;RP1=0, select bank0
  8448  09B9  00A3               	movwf	?___flge+3
  8449  09BA  1683               	bsf	3,5	;RP0=1, select bank3
  8450  09BB  1703               	bsf	3,6	;RP1=1, select bank3
  8451  09BC  0857               	movf	(_F1+2)^(0+384),w
  8452  09BD  1283               	bcf	3,5	;RP0=0, select bank0
  8453  09BE  1303               	bcf	3,6	;RP1=0, select bank0
  8454  09BF  00A2               	movwf	?___flge+2
  8455  09C0  1683               	bsf	3,5	;RP0=1, select bank3
  8456  09C1  1703               	bsf	3,6	;RP1=1, select bank3
  8457  09C2  0856               	movf	(_F1+1)^(0+384),w
  8458  09C3  1283               	bcf	3,5	;RP0=0, select bank0
  8459  09C4  1303               	bcf	3,6	;RP1=0, select bank0
  8460  09C5  00A1               	movwf	?___flge+1
  8461  09C6  1683               	bsf	3,5	;RP0=1, select bank3
  8462  09C7  1703               	bsf	3,6	;RP1=1, select bank3
  8463  09C8  0855               	movf	_F1^(0+384),w
  8464  09C9  1283               	bcf	3,5	;RP0=0, select bank0
  8465  09CA  1303               	bcf	3,6	;RP1=0, select bank0
  8466  09CB  00A0               	movwf	?___flge
  8467  09CC  1683               	bsf	3,5	;RP0=1, select bank3
  8468  09CD  1703               	bsf	3,6	;RP1=1, select bank3
  8469  09CE  0848               	movf	(_F3+3)^(0+384),w
  8470  09CF  1283               	bcf	3,5	;RP0=0, select bank0
  8471  09D0  1303               	bcf	3,6	;RP1=0, select bank0
  8472  09D1  00A7               	movwf	?___flge+7
  8473  09D2  1683               	bsf	3,5	;RP0=1, select bank3
  8474  09D3  1703               	bsf	3,6	;RP1=1, select bank3
  8475  09D4  0847               	movf	(_F3+2)^(0+384),w
  8476  09D5  1283               	bcf	3,5	;RP0=0, select bank0
  8477  09D6  1303               	bcf	3,6	;RP1=0, select bank0
  8478  09D7  00A6               	movwf	?___flge+6
  8479  09D8  1683               	bsf	3,5	;RP0=1, select bank3
  8480  09D9  1703               	bsf	3,6	;RP1=1, select bank3
  8481  09DA  0846               	movf	(_F3+1)^(0+384),w
  8482  09DB  1283               	bcf	3,5	;RP0=0, select bank0
  8483  09DC  1303               	bcf	3,6	;RP1=0, select bank0
  8484  09DD  00A5               	movwf	?___flge+5
  8485  09DE  1683               	bsf	3,5	;RP0=1, select bank3
  8486  09DF  1703               	bsf	3,6	;RP1=1, select bank3
  8487  09E0  0845               	movf	_F3^(0+384),w
  8488  09E1  1283               	bcf	3,5	;RP0=0, select bank0
  8489  09E2  1303               	bcf	3,6	;RP1=0, select bank0
  8490  09E3  00A4               	movwf	?___flge+4
  8491  09E4  26D8  120A  158A   	fcall	___flge
  8492  09E7  1803               	btfsc	3,0
  8493  09E8  29F3               	goto	l11491
  8494                           
  8495                           ;measure.c: 211: F3 = F1;
  8496  09E9  1683               	bsf	3,5	;RP0=1, select bank3
  8497  09EA  1703               	bsf	3,6	;RP1=1, select bank3
  8498  09EB  0858               	movf	(_F1+3)^(0+384),w
  8499  09EC  00C8               	movwf	(_F3+3)^(0+384)
  8500  09ED  0857               	movf	(_F1+2)^(0+384),w
  8501  09EE  00C7               	movwf	(_F3+2)^(0+384)
  8502  09EF  0856               	movf	(_F1+1)^(0+384),w
  8503  09F0  00C6               	movwf	(_F3+1)^(0+384)
  8504  09F1  0855               	movf	_F1^(0+384),w
  8505  09F2  00C5               	movwf	_F3^(0+384)
  8506  09F3                     l11491:	
  8507                           
  8508                           ;measure.c: 212: numerator = ((F1 * F1) - (F3 * F3)) * ((F1 * F1) - (F2 - F2)) * (100 * 
      +                          100);
  8509  09F3  1683               	bsf	3,5	;RP0=1, select bank3
  8510  09F4  1703               	bsf	3,6	;RP1=1, select bank3
  8511  09F5  0848               	movf	(_F3+3)^(0+384),w
  8512  09F6  1283               	bcf	3,5	;RP0=0, select bank0
  8513  09F7  1303               	bcf	3,6	;RP1=0, select bank0
  8514  09F8  00CC               	movwf	?___flmul+3
  8515  09F9  1683               	bsf	3,5	;RP0=1, select bank3
  8516  09FA  1703               	bsf	3,6	;RP1=1, select bank3
  8517  09FB  0847               	movf	(_F3+2)^(0+384),w
  8518  09FC  1283               	bcf	3,5	;RP0=0, select bank0
  8519  09FD  1303               	bcf	3,6	;RP1=0, select bank0
  8520  09FE  00CB               	movwf	?___flmul+2
  8521  09FF  1683               	bsf	3,5	;RP0=1, select bank3
  8522  0A00  1703               	bsf	3,6	;RP1=1, select bank3
  8523  0A01  0846               	movf	(_F3+1)^(0+384),w
  8524  0A02  1283               	bcf	3,5	;RP0=0, select bank0
  8525  0A03  1303               	bcf	3,6	;RP1=0, select bank0
  8526  0A04  00CA               	movwf	?___flmul+1
  8527  0A05  1683               	bsf	3,5	;RP0=1, select bank3
  8528  0A06  1703               	bsf	3,6	;RP1=1, select bank3
  8529  0A07  0845               	movf	_F3^(0+384),w
  8530  0A08  1283               	bcf	3,5	;RP0=0, select bank0
  8531  0A09  1303               	bcf	3,6	;RP1=0, select bank0
  8532  0A0A  00C9               	movwf	?___flmul
  8533  0A0B  1683               	bsf	3,5	;RP0=1, select bank3
  8534  0A0C  1703               	bsf	3,6	;RP1=1, select bank3
  8535  0A0D  0848               	movf	(_F3+3)^(0+384),w
  8536  0A0E  1283               	bcf	3,5	;RP0=0, select bank0
  8537  0A0F  1303               	bcf	3,6	;RP1=0, select bank0
  8538  0A10  00D0               	movwf	?___flmul+7
  8539  0A11  1683               	bsf	3,5	;RP0=1, select bank3
  8540  0A12  1703               	bsf	3,6	;RP1=1, select bank3
  8541  0A13  0847               	movf	(_F3+2)^(0+384),w
  8542  0A14  1283               	bcf	3,5	;RP0=0, select bank0
  8543  0A15  1303               	bcf	3,6	;RP1=0, select bank0
  8544  0A16  00CF               	movwf	?___flmul+6
  8545  0A17  1683               	bsf	3,5	;RP0=1, select bank3
  8546  0A18  1703               	bsf	3,6	;RP1=1, select bank3
  8547  0A19  0846               	movf	(_F3+1)^(0+384),w
  8548  0A1A  1283               	bcf	3,5	;RP0=0, select bank0
  8549  0A1B  1303               	bcf	3,6	;RP1=0, select bank0
  8550  0A1C  00CE               	movwf	?___flmul+5
  8551  0A1D  1683               	bsf	3,5	;RP0=1, select bank3
  8552  0A1E  1703               	bsf	3,6	;RP1=1, select bank3
  8553  0A1F  0845               	movf	_F3^(0+384),w
  8554  0A20  1283               	bcf	3,5	;RP0=0, select bank0
  8555  0A21  1303               	bcf	3,6	;RP1=0, select bank0
  8556  0A22  00CD               	movwf	?___flmul+4
  8557  0A23  2640  120A  158A   	fcall	___flmul
  8558  0A26  084C               	movf	?___flmul+3,w
  8559  0A27  1683               	bsf	3,5	;RP0=1, select bank1
  8560  0A28  00A3               	movwf	(?___flsub+3)^(0+128)
  8561  0A29  1283               	bcf	3,5	;RP0=0, select bank0
  8562  0A2A  084B               	movf	?___flmul+2,w
  8563  0A2B  1683               	bsf	3,5	;RP0=1, select bank1
  8564  0A2C  00A2               	movwf	(?___flsub+2)^(0+128)
  8565  0A2D  1283               	bcf	3,5	;RP0=0, select bank0
  8566  0A2E  084A               	movf	?___flmul+1,w
  8567  0A2F  1683               	bsf	3,5	;RP0=1, select bank1
  8568  0A30  00A1               	movwf	(?___flsub+1)^(0+128)
  8569  0A31  1283               	bcf	3,5	;RP0=0, select bank0
  8570  0A32  0849               	movf	?___flmul,w
  8571  0A33  1683               	bsf	3,5	;RP0=1, select bank1
  8572  0A34  00A0               	movwf	?___flsub^(0+128)
  8573  0A35  1703               	bsf	3,6	;RP1=1, select bank3
  8574  0A36  0858               	movf	(_F1+3)^(0+384),w
  8575  0A37  1283               	bcf	3,5	;RP0=0, select bank0
  8576  0A38  1303               	bcf	3,6	;RP1=0, select bank0
  8577  0A39  00CC               	movwf	?___flmul+3
  8578  0A3A  1683               	bsf	3,5	;RP0=1, select bank3
  8579  0A3B  1703               	bsf	3,6	;RP1=1, select bank3
  8580  0A3C  0857               	movf	(_F1+2)^(0+384),w
  8581  0A3D  1283               	bcf	3,5	;RP0=0, select bank0
  8582  0A3E  1303               	bcf	3,6	;RP1=0, select bank0
  8583  0A3F  00CB               	movwf	?___flmul+2
  8584  0A40  1683               	bsf	3,5	;RP0=1, select bank3
  8585  0A41  1703               	bsf	3,6	;RP1=1, select bank3
  8586  0A42  0856               	movf	(_F1+1)^(0+384),w
  8587  0A43  1283               	bcf	3,5	;RP0=0, select bank0
  8588  0A44  1303               	bcf	3,6	;RP1=0, select bank0
  8589  0A45  00CA               	movwf	?___flmul+1
  8590  0A46  1683               	bsf	3,5	;RP0=1, select bank3
  8591  0A47  1703               	bsf	3,6	;RP1=1, select bank3
  8592  0A48  0855               	movf	_F1^(0+384),w
  8593  0A49  1283               	bcf	3,5	;RP0=0, select bank0
  8594  0A4A  1303               	bcf	3,6	;RP1=0, select bank0
  8595  0A4B  00C9               	movwf	?___flmul
  8596  0A4C  1683               	bsf	3,5	;RP0=1, select bank3
  8597  0A4D  1703               	bsf	3,6	;RP1=1, select bank3
  8598  0A4E  0858               	movf	(_F1+3)^(0+384),w
  8599  0A4F  1283               	bcf	3,5	;RP0=0, select bank0
  8600  0A50  1303               	bcf	3,6	;RP1=0, select bank0
  8601  0A51  00D0               	movwf	?___flmul+7
  8602  0A52  1683               	bsf	3,5	;RP0=1, select bank3
  8603  0A53  1703               	bsf	3,6	;RP1=1, select bank3
  8604  0A54  0857               	movf	(_F1+2)^(0+384),w
  8605  0A55  1283               	bcf	3,5	;RP0=0, select bank0
  8606  0A56  1303               	bcf	3,6	;RP1=0, select bank0
  8607  0A57  00CF               	movwf	?___flmul+6
  8608  0A58  1683               	bsf	3,5	;RP0=1, select bank3
  8609  0A59  1703               	bsf	3,6	;RP1=1, select bank3
  8610  0A5A  0856               	movf	(_F1+1)^(0+384),w
  8611  0A5B  1283               	bcf	3,5	;RP0=0, select bank0
  8612  0A5C  1303               	bcf	3,6	;RP1=0, select bank0
  8613  0A5D  00CE               	movwf	?___flmul+5
  8614  0A5E  1683               	bsf	3,5	;RP0=1, select bank3
  8615  0A5F  1703               	bsf	3,6	;RP1=1, select bank3
  8616  0A60  0855               	movf	_F1^(0+384),w
  8617  0A61  1283               	bcf	3,5	;RP0=0, select bank0
  8618  0A62  1303               	bcf	3,6	;RP1=0, select bank0
  8619  0A63  00CD               	movwf	?___flmul+4
  8620  0A64  2640               	fcall	___flmul
  8621  0A65  084C               	movf	?___flmul+3,w
  8622  0A66  1683               	bsf	3,5	;RP0=1, select bank1
  8623  0A67  00A7               	movwf	((?___flsub+3)^(0+128)+4)
  8624  0A68  1283               	bcf	3,5	;RP0=0, select bank0
  8625  0A69  084B               	movf	?___flmul+2,w
  8626  0A6A  1683               	bsf	3,5	;RP0=1, select bank1
  8627  0A6B  00A6               	movwf	((?___flsub+2)^(0+128)+4)
  8628  0A6C  1283               	bcf	3,5	;RP0=0, select bank0
  8629  0A6D  084A               	movf	?___flmul+1,w
  8630  0A6E  1683               	bsf	3,5	;RP0=1, select bank1
  8631  0A6F  00A5               	movwf	((?___flsub+1)^(0+128)+4)
  8632  0A70  1283               	bcf	3,5	;RP0=0, select bank0
  8633  0A71  0849               	movf	?___flmul,w
  8634  0A72  1683               	bsf	3,5	;RP0=1, select bank1
  8635  0A73  00A4               	movwf	(?___flsub^(0+128)+4)
  8636  0A74  160A  118A  26D6   	fcall	___flsub
      +       120A  158A         
  8637  0A79  0823               	movf	(?___flsub+3)^(0+128),w
  8638  0A7A  00C4               	movwf	(_measure_inductance$8237+3)^(0+128)
  8639  0A7B  0822               	movf	(?___flsub+2)^(0+128),w
  8640  0A7C  00C3               	movwf	(_measure_inductance$8237+2)^(0+128)
  8641  0A7D  0821               	movf	(?___flsub+1)^(0+128),w
  8642  0A7E  00C2               	movwf	(_measure_inductance$8237+1)^(0+128)
  8643  0A7F  0820               	movf	?___flsub^(0+128),w
  8644  0A80  00C1               	movwf	_measure_inductance$8237^(0+128)
  8645                           
  8646                           ;measure.c: 212: numerator = ((F1 * F1) - (F3 * F3)) * ((F1 * F1) - (F2 - F2)) * (100 * 
      +                          100);
  8647  0A81  1703               	bsf	3,6	;RP1=1, select bank3
  8648  0A82  0844               	movf	(_F2+3)^(0+384),w
  8649  0A83  1303               	bcf	3,6	;RP1=0, select bank1
  8650  0A84  00A3               	movwf	(?___flsub+3)^(0+128)
  8651  0A85  1703               	bsf	3,6	;RP1=1, select bank3
  8652  0A86  0843               	movf	(_F2+2)^(0+384),w
  8653  0A87  1303               	bcf	3,6	;RP1=0, select bank1
  8654  0A88  00A2               	movwf	(?___flsub+2)^(0+128)
  8655  0A89  1703               	bsf	3,6	;RP1=1, select bank3
  8656  0A8A  0842               	movf	(_F2+1)^(0+384),w
  8657  0A8B  1303               	bcf	3,6	;RP1=0, select bank1
  8658  0A8C  00A1               	movwf	(?___flsub+1)^(0+128)
  8659  0A8D  1703               	bsf	3,6	;RP1=1, select bank3
  8660  0A8E  0841               	movf	_F2^(0+384),w
  8661  0A8F  1303               	bcf	3,6	;RP1=0, select bank1
  8662  0A90  00A0               	movwf	?___flsub^(0+128)
  8663  0A91  1703               	bsf	3,6	;RP1=1, select bank3
  8664  0A92  0844               	movf	(_F2+3)^(0+384),w
  8665  0A93  1303               	bcf	3,6	;RP1=0, select bank1
  8666  0A94  00A7               	movwf	((?___flsub+3)^(0+128)+4)
  8667  0A95  1703               	bsf	3,6	;RP1=1, select bank3
  8668  0A96  0843               	movf	(_F2+2)^(0+384),w
  8669  0A97  1303               	bcf	3,6	;RP1=0, select bank1
  8670  0A98  00A6               	movwf	((?___flsub+2)^(0+128)+4)
  8671  0A99  1703               	bsf	3,6	;RP1=1, select bank3
  8672  0A9A  0842               	movf	(_F2+1)^(0+384),w
  8673  0A9B  1303               	bcf	3,6	;RP1=0, select bank1
  8674  0A9C  00A5               	movwf	((?___flsub+1)^(0+128)+4)
  8675  0A9D  1703               	bsf	3,6	;RP1=1, select bank3
  8676  0A9E  0841               	movf	_F2^(0+384),w
  8677  0A9F  1303               	bcf	3,6	;RP1=0, select bank1
  8678  0AA0  00A4               	movwf	(?___flsub^(0+128)+4)
  8679  0AA1  160A  118A  26D6   	fcall	___flsub
      +       120A  158A         
  8680  0AA6  1703               	bsf	3,6	;RP1=1, select bank3
  8681  0AA7  0858               	movf	(_F1+3)^(0+384),w
  8682  0AA8  1283               	bcf	3,5	;RP0=0, select bank0
  8683  0AA9  1303               	bcf	3,6	;RP1=0, select bank0
  8684  0AAA  00CC               	movwf	?___flmul+3
  8685  0AAB  1683               	bsf	3,5	;RP0=1, select bank3
  8686  0AAC  1703               	bsf	3,6	;RP1=1, select bank3
  8687  0AAD  0857               	movf	(_F1+2)^(0+384),w
  8688  0AAE  1283               	bcf	3,5	;RP0=0, select bank0
  8689  0AAF  1303               	bcf	3,6	;RP1=0, select bank0
  8690  0AB0  00CB               	movwf	?___flmul+2
  8691  0AB1  1683               	bsf	3,5	;RP0=1, select bank3
  8692  0AB2  1703               	bsf	3,6	;RP1=1, select bank3
  8693  0AB3  0856               	movf	(_F1+1)^(0+384),w
  8694  0AB4  1283               	bcf	3,5	;RP0=0, select bank0
  8695  0AB5  1303               	bcf	3,6	;RP1=0, select bank0
  8696  0AB6  00CA               	movwf	?___flmul+1
  8697  0AB7  1683               	bsf	3,5	;RP0=1, select bank3
  8698  0AB8  1703               	bsf	3,6	;RP1=1, select bank3
  8699  0AB9  0855               	movf	_F1^(0+384),w
  8700  0ABA  1283               	bcf	3,5	;RP0=0, select bank0
  8701  0ABB  1303               	bcf	3,6	;RP1=0, select bank0
  8702  0ABC  00C9               	movwf	?___flmul
  8703  0ABD  1683               	bsf	3,5	;RP0=1, select bank3
  8704  0ABE  1703               	bsf	3,6	;RP1=1, select bank3
  8705  0ABF  0858               	movf	(_F1+3)^(0+384),w
  8706  0AC0  1283               	bcf	3,5	;RP0=0, select bank0
  8707  0AC1  1303               	bcf	3,6	;RP1=0, select bank0
  8708  0AC2  00D0               	movwf	?___flmul+7
  8709  0AC3  1683               	bsf	3,5	;RP0=1, select bank3
  8710  0AC4  1703               	bsf	3,6	;RP1=1, select bank3
  8711  0AC5  0857               	movf	(_F1+2)^(0+384),w
  8712  0AC6  1283               	bcf	3,5	;RP0=0, select bank0
  8713  0AC7  1303               	bcf	3,6	;RP1=0, select bank0
  8714  0AC8  00CF               	movwf	?___flmul+6
  8715  0AC9  1683               	bsf	3,5	;RP0=1, select bank3
  8716  0ACA  1703               	bsf	3,6	;RP1=1, select bank3
  8717  0ACB  0856               	movf	(_F1+1)^(0+384),w
  8718  0ACC  1283               	bcf	3,5	;RP0=0, select bank0
  8719  0ACD  1303               	bcf	3,6	;RP1=0, select bank0
  8720  0ACE  00CE               	movwf	?___flmul+5
  8721  0ACF  1683               	bsf	3,5	;RP0=1, select bank3
  8722  0AD0  1703               	bsf	3,6	;RP1=1, select bank3
  8723  0AD1  0855               	movf	_F1^(0+384),w
  8724  0AD2  1283               	bcf	3,5	;RP0=0, select bank0
  8725  0AD3  1303               	bcf	3,6	;RP1=0, select bank0
  8726  0AD4  00CD               	movwf	?___flmul+4
  8727  0AD5  2640               	fcall	___flmul
  8728  0AD6  084C               	movf	?___flmul+3,w
  8729  0AD7  1683               	bsf	3,5	;RP0=1, select bank1
  8730  0AD8  00A7               	movwf	((?___flsub+3)^(0+128)+4)
  8731  0AD9  1283               	bcf	3,5	;RP0=0, select bank0
  8732  0ADA  084B               	movf	?___flmul+2,w
  8733  0ADB  1683               	bsf	3,5	;RP0=1, select bank1
  8734  0ADC  00A6               	movwf	((?___flsub+2)^(0+128)+4)
  8735  0ADD  1283               	bcf	3,5	;RP0=0, select bank0
  8736  0ADE  084A               	movf	?___flmul+1,w
  8737  0ADF  1683               	bsf	3,5	;RP0=1, select bank1
  8738  0AE0  00A5               	movwf	((?___flsub+1)^(0+128)+4)
  8739  0AE1  1283               	bcf	3,5	;RP0=0, select bank0
  8740  0AE2  0849               	movf	?___flmul,w
  8741  0AE3  1683               	bsf	3,5	;RP0=1, select bank1
  8742  0AE4  00A4               	movwf	(?___flsub^(0+128)+4)
  8743  0AE5  160A  118A  26D6   	fcall	___flsub
      +       120A  158A         
  8744  0AEA  0823               	movf	(?___flsub+3)^(0+128),w
  8745  0AEB  1283               	bcf	3,5	;RP0=0, select bank0
  8746  0AEC  00CC               	movwf	?___flmul+3
  8747  0AED  1683               	bsf	3,5	;RP0=1, select bank1
  8748  0AEE  0822               	movf	(?___flsub+2)^(0+128),w
  8749  0AEF  1283               	bcf	3,5	;RP0=0, select bank0
  8750  0AF0  00CB               	movwf	?___flmul+2
  8751  0AF1  1683               	bsf	3,5	;RP0=1, select bank1
  8752  0AF2  0821               	movf	(?___flsub+1)^(0+128),w
  8753  0AF3  1283               	bcf	3,5	;RP0=0, select bank0
  8754  0AF4  00CA               	movwf	?___flmul+1
  8755  0AF5  1683               	bsf	3,5	;RP0=1, select bank1
  8756  0AF6  0820               	movf	?___flsub^(0+128),w
  8757  0AF7  1283               	bcf	3,5	;RP0=0, select bank0
  8758  0AF8  00C9               	movwf	?___flmul
  8759  0AF9  1683               	bsf	3,5	;RP0=1, select bank1
  8760  0AFA  0844               	movf	(_measure_inductance$8237+3)^(0+128),w
  8761  0AFB  1283               	bcf	3,5	;RP0=0, select bank0
  8762  0AFC  00D0               	movwf	?___flmul+7
  8763  0AFD  1683               	bsf	3,5	;RP0=1, select bank1
  8764  0AFE  0843               	movf	(_measure_inductance$8237+2)^(0+128),w
  8765  0AFF  1283               	bcf	3,5	;RP0=0, select bank0
  8766  0B00  00CF               	movwf	?___flmul+6
  8767  0B01  1683               	bsf	3,5	;RP0=1, select bank1
  8768  0B02  0842               	movf	(_measure_inductance$8237+1)^(0+128),w
  8769  0B03  1283               	bcf	3,5	;RP0=0, select bank0
  8770  0B04  00CE               	movwf	?___flmul+5
  8771  0B05  1683               	bsf	3,5	;RP0=1, select bank1
  8772  0B06  0841               	movf	_measure_inductance$8237^(0+128),w
  8773  0B07  1283               	bcf	3,5	;RP0=0, select bank0
  8774  0B08  00CD               	movwf	?___flmul+4
  8775  0B09  2640  120A  158A   	fcall	___flmul
  8776  0B0C  084C               	movf	?___flmul+3,w
  8777  0B0D  1683               	bsf	3,5	;RP0=1, select bank1
  8778  0B0E  00C8               	movwf	(_measure_inductance$8238+3)^(0+128)
  8779  0B0F  1283               	bcf	3,5	;RP0=0, select bank0
  8780  0B10  084B               	movf	?___flmul+2,w
  8781  0B11  1683               	bsf	3,5	;RP0=1, select bank1
  8782  0B12  00C7               	movwf	(_measure_inductance$8238+2)^(0+128)
  8783  0B13  1283               	bcf	3,5	;RP0=0, select bank0
  8784  0B14  084A               	movf	?___flmul+1,w
  8785  0B15  1683               	bsf	3,5	;RP0=1, select bank1
  8786  0B16  00C6               	movwf	(_measure_inductance$8238+1)^(0+128)
  8787  0B17  1283               	bcf	3,5	;RP0=0, select bank0
  8788  0B18  0849               	movf	?___flmul,w
  8789  0B19  1683               	bsf	3,5	;RP0=1, select bank1
  8790  0B1A  00C5               	movwf	_measure_inductance$8238^(0+128)
  8791                           
  8792                           ;measure.c: 212: numerator = ((F1 * F1) - (F3 * F3)) * ((F1 * F1) - (F2 - F2)) * (100 * 
      +                          100);
  8793  0B1B  3046               	movlw	70
  8794  0B1C  1283               	bcf	3,5	;RP0=0, select bank0
  8795  0B1D  00CC               	movwf	?___flmul+3
  8796  0B1E  301C               	movlw	28
  8797  0B1F  00CB               	movwf	?___flmul+2
  8798  0B20  3040               	movlw	64
  8799  0B21  00CA               	movwf	?___flmul+1
  8800  0B22  01C9               	clrf	?___flmul
  8801  0B23  1683               	bsf	3,5	;RP0=1, select bank1
  8802  0B24  0848               	movf	(_measure_inductance$8238+3)^(0+128),w
  8803  0B25  1283               	bcf	3,5	;RP0=0, select bank0
  8804  0B26  00D0               	movwf	?___flmul+7
  8805  0B27  1683               	bsf	3,5	;RP0=1, select bank1
  8806  0B28  0847               	movf	(_measure_inductance$8238+2)^(0+128),w
  8807  0B29  1283               	bcf	3,5	;RP0=0, select bank0
  8808  0B2A  00CF               	movwf	?___flmul+6
  8809  0B2B  1683               	bsf	3,5	;RP0=1, select bank1
  8810  0B2C  0846               	movf	(_measure_inductance$8238+1)^(0+128),w
  8811  0B2D  1283               	bcf	3,5	;RP0=0, select bank0
  8812  0B2E  00CE               	movwf	?___flmul+5
  8813  0B2F  1683               	bsf	3,5	;RP0=1, select bank1
  8814  0B30  0845               	movf	_measure_inductance$8238^(0+128),w
  8815  0B31  1283               	bcf	3,5	;RP0=0, select bank0
  8816  0B32  00CD               	movwf	?___flmul+4
  8817  0B33  2640  120A  158A   	fcall	___flmul
  8818  0B36  084C               	movf	?___flmul+3,w
  8819  0B37  1683               	bsf	3,5	;RP0=1, select bank1
  8820  0B38  00AB               	movwf	(measure_inductance@numerator+3)^(0+128)
  8821  0B39  1283               	bcf	3,5	;RP0=0, select bank0
  8822  0B3A  084B               	movf	?___flmul+2,w
  8823  0B3B  1683               	bsf	3,5	;RP0=1, select bank1
  8824  0B3C  00AA               	movwf	(measure_inductance@numerator+2)^(0+128)
  8825  0B3D  1283               	bcf	3,5	;RP0=0, select bank0
  8826  0B3E  084A               	movf	?___flmul+1,w
  8827  0B3F  1683               	bsf	3,5	;RP0=1, select bank1
  8828  0B40  00A9               	movwf	(measure_inductance@numerator+1)^(0+128)
  8829  0B41  1283               	bcf	3,5	;RP0=0, select bank0
  8830  0B42  0849               	movf	?___flmul,w
  8831  0B43  1683               	bsf	3,5	;RP0=1, select bank1
  8832  0B44  00A8               	movwf	measure_inductance@numerator^(0+128)
  8833                           
  8834                           ;measure.c: 213: denominator = 4 * 3.14159265358979323846l * 3.14159265358979323846l * F
      +                          1 * F1 * F2 * F2 * F3 * F3 * CCal;
  8835  0B45  1703               	bsf	3,6	;RP1=1, select bank3
  8836  0B46  0858               	movf	(_F1+3)^(0+384),w
  8837  0B47  1283               	bcf	3,5	;RP0=0, select bank0
  8838  0B48  1303               	bcf	3,6	;RP1=0, select bank0
  8839  0B49  00CC               	movwf	?___flmul+3
  8840  0B4A  1683               	bsf	3,5	;RP0=1, select bank3
  8841  0B4B  1703               	bsf	3,6	;RP1=1, select bank3
  8842  0B4C  0857               	movf	(_F1+2)^(0+384),w
  8843  0B4D  1283               	bcf	3,5	;RP0=0, select bank0
  8844  0B4E  1303               	bcf	3,6	;RP1=0, select bank0
  8845  0B4F  00CB               	movwf	?___flmul+2
  8846  0B50  1683               	bsf	3,5	;RP0=1, select bank3
  8847  0B51  1703               	bsf	3,6	;RP1=1, select bank3
  8848  0B52  0856               	movf	(_F1+1)^(0+384),w
  8849  0B53  1283               	bcf	3,5	;RP0=0, select bank0
  8850  0B54  1303               	bcf	3,6	;RP1=0, select bank0
  8851  0B55  00CA               	movwf	?___flmul+1
  8852  0B56  1683               	bsf	3,5	;RP0=1, select bank3
  8853  0B57  1703               	bsf	3,6	;RP1=1, select bank3
  8854  0B58  0855               	movf	_F1^(0+384),w
  8855  0B59  1283               	bcf	3,5	;RP0=0, select bank0
  8856  0B5A  1303               	bcf	3,6	;RP1=0, select bank0
  8857  0B5B  00C9               	movwf	?___flmul
  8858  0B5C  1683               	bsf	3,5	;RP0=1, select bank3
  8859  0B5D  1703               	bsf	3,6	;RP1=1, select bank3
  8860  0B5E  0858               	movf	(_F1+3)^(0+384),w
  8861  0B5F  1283               	bcf	3,5	;RP0=0, select bank0
  8862  0B60  1303               	bcf	3,6	;RP1=0, select bank0
  8863  0B61  00D0               	movwf	?___flmul+7
  8864  0B62  1683               	bsf	3,5	;RP0=1, select bank3
  8865  0B63  1703               	bsf	3,6	;RP1=1, select bank3
  8866  0B64  0857               	movf	(_F1+2)^(0+384),w
  8867  0B65  1283               	bcf	3,5	;RP0=0, select bank0
  8868  0B66  1303               	bcf	3,6	;RP1=0, select bank0
  8869  0B67  00CF               	movwf	?___flmul+6
  8870  0B68  1683               	bsf	3,5	;RP0=1, select bank3
  8871  0B69  1703               	bsf	3,6	;RP1=1, select bank3
  8872  0B6A  0856               	movf	(_F1+1)^(0+384),w
  8873  0B6B  1283               	bcf	3,5	;RP0=0, select bank0
  8874  0B6C  1303               	bcf	3,6	;RP1=0, select bank0
  8875  0B6D  00CE               	movwf	?___flmul+5
  8876  0B6E  1683               	bsf	3,5	;RP0=1, select bank3
  8877  0B6F  1703               	bsf	3,6	;RP1=1, select bank3
  8878  0B70  0855               	movf	_F1^(0+384),w
  8879  0B71  1283               	bcf	3,5	;RP0=0, select bank0
  8880  0B72  1303               	bcf	3,6	;RP1=0, select bank0
  8881  0B73  00CD               	movwf	?___flmul+4
  8882  0B74  2640  120A  158A   	fcall	___flmul
  8883  0B77  084C               	movf	?___flmul+3,w
  8884  0B78  1683               	bsf	3,5	;RP0=1, select bank1
  8885  0B79  00C4               	movwf	(_measure_inductance$8237+3)^(0+128)
  8886  0B7A  1283               	bcf	3,5	;RP0=0, select bank0
  8887  0B7B  084B               	movf	?___flmul+2,w
  8888  0B7C  1683               	bsf	3,5	;RP0=1, select bank1
  8889  0B7D  00C3               	movwf	(_measure_inductance$8237+2)^(0+128)
  8890  0B7E  1283               	bcf	3,5	;RP0=0, select bank0
  8891  0B7F  084A               	movf	?___flmul+1,w
  8892  0B80  1683               	bsf	3,5	;RP0=1, select bank1
  8893  0B81  00C2               	movwf	(_measure_inductance$8237+1)^(0+128)
  8894  0B82  1283               	bcf	3,5	;RP0=0, select bank0
  8895  0B83  0849               	movf	?___flmul,w
  8896  0B84  1683               	bsf	3,5	;RP0=1, select bank1
  8897  0B85  00C1               	movwf	_measure_inductance$8237^(0+128)
  8898                           
  8899                           ;measure.c: 213: denominator = 4 * 3.14159265358979323846l * 3.14159265358979323846l * F
      +                          1 * F1 * F2 * F2 * F3 * F3 * CCal;
  8900  0B86  1703               	bsf	3,6	;RP1=1, select bank3
  8901  0B87  0844               	movf	(_F2+3)^(0+384),w
  8902  0B88  1283               	bcf	3,5	;RP0=0, select bank0
  8903  0B89  1303               	bcf	3,6	;RP1=0, select bank0
  8904  0B8A  00CC               	movwf	?___flmul+3
  8905  0B8B  1683               	bsf	3,5	;RP0=1, select bank3
  8906  0B8C  1703               	bsf	3,6	;RP1=1, select bank3
  8907  0B8D  0843               	movf	(_F2+2)^(0+384),w
  8908  0B8E  1283               	bcf	3,5	;RP0=0, select bank0
  8909  0B8F  1303               	bcf	3,6	;RP1=0, select bank0
  8910  0B90  00CB               	movwf	?___flmul+2
  8911  0B91  1683               	bsf	3,5	;RP0=1, select bank3
  8912  0B92  1703               	bsf	3,6	;RP1=1, select bank3
  8913  0B93  0842               	movf	(_F2+1)^(0+384),w
  8914  0B94  1283               	bcf	3,5	;RP0=0, select bank0
  8915  0B95  1303               	bcf	3,6	;RP1=0, select bank0
  8916  0B96  00CA               	movwf	?___flmul+1
  8917  0B97  1683               	bsf	3,5	;RP0=1, select bank3
  8918  0B98  1703               	bsf	3,6	;RP1=1, select bank3
  8919  0B99  0841               	movf	_F2^(0+384),w
  8920  0B9A  1283               	bcf	3,5	;RP0=0, select bank0
  8921  0B9B  1303               	bcf	3,6	;RP1=0, select bank0
  8922  0B9C  00C9               	movwf	?___flmul
  8923  0B9D  1683               	bsf	3,5	;RP0=1, select bank1
  8924  0B9E  0844               	movf	(_measure_inductance$8237+3)^(0+128),w
  8925  0B9F  1283               	bcf	3,5	;RP0=0, select bank0
  8926  0BA0  00D0               	movwf	?___flmul+7
  8927  0BA1  1683               	bsf	3,5	;RP0=1, select bank1
  8928  0BA2  0843               	movf	(_measure_inductance$8237+2)^(0+128),w
  8929  0BA3  1283               	bcf	3,5	;RP0=0, select bank0
  8930  0BA4  00CF               	movwf	?___flmul+6
  8931  0BA5  1683               	bsf	3,5	;RP0=1, select bank1
  8932  0BA6  0842               	movf	(_measure_inductance$8237+1)^(0+128),w
  8933  0BA7  1283               	bcf	3,5	;RP0=0, select bank0
  8934  0BA8  00CE               	movwf	?___flmul+5
  8935  0BA9  1683               	bsf	3,5	;RP0=1, select bank1
  8936  0BAA  0841               	movf	_measure_inductance$8237^(0+128),w
  8937  0BAB  1283               	bcf	3,5	;RP0=0, select bank0
  8938  0BAC  00CD               	movwf	?___flmul+4
  8939  0BAD  2640  120A  158A   	fcall	___flmul
  8940  0BB0  084C               	movf	?___flmul+3,w
  8941  0BB1  1683               	bsf	3,5	;RP0=1, select bank1
  8942  0BB2  00C8               	movwf	(_measure_inductance$8238+3)^(0+128)
  8943  0BB3  1283               	bcf	3,5	;RP0=0, select bank0
  8944  0BB4  084B               	movf	?___flmul+2,w
  8945  0BB5  1683               	bsf	3,5	;RP0=1, select bank1
  8946  0BB6  00C7               	movwf	(_measure_inductance$8238+2)^(0+128)
  8947  0BB7  1283               	bcf	3,5	;RP0=0, select bank0
  8948  0BB8  084A               	movf	?___flmul+1,w
  8949  0BB9  1683               	bsf	3,5	;RP0=1, select bank1
  8950  0BBA  00C6               	movwf	(_measure_inductance$8238+1)^(0+128)
  8951  0BBB  1283               	bcf	3,5	;RP0=0, select bank0
  8952  0BBC  0849               	movf	?___flmul,w
  8953  0BBD  1683               	bsf	3,5	;RP0=1, select bank1
  8954  0BBE  00C5               	movwf	_measure_inductance$8238^(0+128)
  8955                           
  8956                           ;measure.c: 213: denominator = 4 * 3.14159265358979323846l * 3.14159265358979323846l * F
      +                          1 * F1 * F2 * F2 * F3 * F3 * CCal;
  8957  0BBF  1703               	bsf	3,6	;RP1=1, select bank3
  8958  0BC0  0844               	movf	(_F2+3)^(0+384),w
  8959  0BC1  1283               	bcf	3,5	;RP0=0, select bank0
  8960  0BC2  1303               	bcf	3,6	;RP1=0, select bank0
  8961  0BC3  00CC               	movwf	?___flmul+3
  8962  0BC4  1683               	bsf	3,5	;RP0=1, select bank3
  8963  0BC5  1703               	bsf	3,6	;RP1=1, select bank3
  8964  0BC6  0843               	movf	(_F2+2)^(0+384),w
  8965  0BC7  1283               	bcf	3,5	;RP0=0, select bank0
  8966  0BC8  1303               	bcf	3,6	;RP1=0, select bank0
  8967  0BC9  00CB               	movwf	?___flmul+2
  8968  0BCA  1683               	bsf	3,5	;RP0=1, select bank3
  8969  0BCB  1703               	bsf	3,6	;RP1=1, select bank3
  8970  0BCC  0842               	movf	(_F2+1)^(0+384),w
  8971  0BCD  1283               	bcf	3,5	;RP0=0, select bank0
  8972  0BCE  1303               	bcf	3,6	;RP1=0, select bank0
  8973  0BCF  00CA               	movwf	?___flmul+1
  8974  0BD0  1683               	bsf	3,5	;RP0=1, select bank3
  8975  0BD1  1703               	bsf	3,6	;RP1=1, select bank3
  8976  0BD2  0841               	movf	_F2^(0+384),w
  8977  0BD3  1283               	bcf	3,5	;RP0=0, select bank0
  8978  0BD4  1303               	bcf	3,6	;RP1=0, select bank0
  8979  0BD5  00C9               	movwf	?___flmul
  8980  0BD6  1683               	bsf	3,5	;RP0=1, select bank1
  8981  0BD7  0848               	movf	(_measure_inductance$8238+3)^(0+128),w
  8982  0BD8  1283               	bcf	3,5	;RP0=0, select bank0
  8983  0BD9  00D0               	movwf	?___flmul+7
  8984  0BDA  1683               	bsf	3,5	;RP0=1, select bank1
  8985  0BDB  0847               	movf	(_measure_inductance$8238+2)^(0+128),w
  8986  0BDC  1283               	bcf	3,5	;RP0=0, select bank0
  8987  0BDD  00CF               	movwf	?___flmul+6
  8988  0BDE  1683               	bsf	3,5	;RP0=1, select bank1
  8989  0BDF  0846               	movf	(_measure_inductance$8238+1)^(0+128),w
  8990  0BE0  1283               	bcf	3,5	;RP0=0, select bank0
  8991  0BE1  00CE               	movwf	?___flmul+5
  8992  0BE2  1683               	bsf	3,5	;RP0=1, select bank1
  8993  0BE3  0845               	movf	_measure_inductance$8238^(0+128),w
  8994  0BE4  1283               	bcf	3,5	;RP0=0, select bank0
  8995  0BE5  00CD               	movwf	?___flmul+4
  8996  0BE6  2640  120A  158A   	fcall	___flmul
  8997  0BE9  084C               	movf	?___flmul+3,w
  8998  0BEA  1683               	bsf	3,5	;RP0=1, select bank1
  8999  0BEB  00B3               	movwf	(_measure_inductance$8239+3)^(0+128)
  9000  0BEC  1283               	bcf	3,5	;RP0=0, select bank0
  9001  0BED  084B               	movf	?___flmul+2,w
  9002  0BEE  1683               	bsf	3,5	;RP0=1, select bank1
  9003  0BEF  00B2               	movwf	(_measure_inductance$8239+2)^(0+128)
  9004  0BF0  1283               	bcf	3,5	;RP0=0, select bank0
  9005  0BF1  084A               	movf	?___flmul+1,w
  9006  0BF2  1683               	bsf	3,5	;RP0=1, select bank1
  9007  0BF3  00B1               	movwf	(_measure_inductance$8239+1)^(0+128)
  9008  0BF4  1283               	bcf	3,5	;RP0=0, select bank0
  9009  0BF5  0849               	movf	?___flmul,w
  9010  0BF6  1683               	bsf	3,5	;RP0=1, select bank1
  9011  0BF7  00B0               	movwf	_measure_inductance$8239^(0+128)
  9012                           
  9013                           ;measure.c: 213: denominator = 4 * 3.14159265358979323846l * 3.14159265358979323846l * F
      +                          1 * F1 * F2 * F2 * F3 * F3 * CCal;
  9014  0BF8  1703               	bsf	3,6	;RP1=1, select bank3
  9015  0BF9  0848               	movf	(_F3+3)^(0+384),w
  9016  0BFA  1283               	bcf	3,5	;RP0=0, select bank0
  9017  0BFB  1303               	bcf	3,6	;RP1=0, select bank0
  9018  0BFC  00CC               	movwf	?___flmul+3
  9019  0BFD  1683               	bsf	3,5	;RP0=1, select bank3
  9020  0BFE  1703               	bsf	3,6	;RP1=1, select bank3
  9021  0BFF  0847               	movf	(_F3+2)^(0+384),w
  9022  0C00  1283               	bcf	3,5	;RP0=0, select bank0
  9023  0C01  1303               	bcf	3,6	;RP1=0, select bank0
  9024  0C02  00CB               	movwf	?___flmul+2
  9025  0C03  1683               	bsf	3,5	;RP0=1, select bank3
  9026  0C04  1703               	bsf	3,6	;RP1=1, select bank3
  9027  0C05  0846               	movf	(_F3+1)^(0+384),w
  9028  0C06  1283               	bcf	3,5	;RP0=0, select bank0
  9029  0C07  1303               	bcf	3,6	;RP1=0, select bank0
  9030  0C08  00CA               	movwf	?___flmul+1
  9031  0C09  1683               	bsf	3,5	;RP0=1, select bank3
  9032  0C0A  1703               	bsf	3,6	;RP1=1, select bank3
  9033  0C0B  0845               	movf	_F3^(0+384),w
  9034  0C0C  1283               	bcf	3,5	;RP0=0, select bank0
  9035  0C0D  1303               	bcf	3,6	;RP1=0, select bank0
  9036  0C0E  00C9               	movwf	?___flmul
  9037  0C0F  1683               	bsf	3,5	;RP0=1, select bank1
  9038  0C10  0833               	movf	(_measure_inductance$8239+3)^(0+128),w
  9039  0C11  1283               	bcf	3,5	;RP0=0, select bank0
  9040  0C12  00D0               	movwf	?___flmul+7
  9041  0C13  1683               	bsf	3,5	;RP0=1, select bank1
  9042  0C14  0832               	movf	(_measure_inductance$8239+2)^(0+128),w
  9043  0C15  1283               	bcf	3,5	;RP0=0, select bank0
  9044  0C16  00CF               	movwf	?___flmul+6
  9045  0C17  1683               	bsf	3,5	;RP0=1, select bank1
  9046  0C18  0831               	movf	(_measure_inductance$8239+1)^(0+128),w
  9047  0C19  1283               	bcf	3,5	;RP0=0, select bank0
  9048  0C1A  00CE               	movwf	?___flmul+5
  9049  0C1B  1683               	bsf	3,5	;RP0=1, select bank1
  9050  0C1C  0830               	movf	_measure_inductance$8239^(0+128),w
  9051  0C1D  1283               	bcf	3,5	;RP0=0, select bank0
  9052  0C1E  00CD               	movwf	?___flmul+4
  9053  0C1F  2640  120A  158A   	fcall	___flmul
  9054  0C22  084C               	movf	?___flmul+3,w
  9055  0C23  1683               	bsf	3,5	;RP0=1, select bank1
  9056  0C24  00B7               	movwf	(_measure_inductance$8240+3)^(0+128)
  9057  0C25  1283               	bcf	3,5	;RP0=0, select bank0
  9058  0C26  084B               	movf	?___flmul+2,w
  9059  0C27  1683               	bsf	3,5	;RP0=1, select bank1
  9060  0C28  00B6               	movwf	(_measure_inductance$8240+2)^(0+128)
  9061  0C29  1283               	bcf	3,5	;RP0=0, select bank0
  9062  0C2A  084A               	movf	?___flmul+1,w
  9063  0C2B  1683               	bsf	3,5	;RP0=1, select bank1
  9064  0C2C  00B5               	movwf	(_measure_inductance$8240+1)^(0+128)
  9065  0C2D  1283               	bcf	3,5	;RP0=0, select bank0
  9066  0C2E  0849               	movf	?___flmul,w
  9067  0C2F  1683               	bsf	3,5	;RP0=1, select bank1
  9068  0C30  00B4               	movwf	_measure_inductance$8240^(0+128)
  9069                           
  9070                           ;measure.c: 213: denominator = 4 * 3.14159265358979323846l * 3.14159265358979323846l * F
      +                          1 * F1 * F2 * F2 * F3 * F3 * CCal;
  9071  0C31  1703               	bsf	3,6	;RP1=1, select bank3
  9072  0C32  0848               	movf	(_F3+3)^(0+384),w
  9073  0C33  1283               	bcf	3,5	;RP0=0, select bank0
  9074  0C34  1303               	bcf	3,6	;RP1=0, select bank0
  9075  0C35  00CC               	movwf	?___flmul+3
  9076  0C36  1683               	bsf	3,5	;RP0=1, select bank3
  9077  0C37  1703               	bsf	3,6	;RP1=1, select bank3
  9078  0C38  0847               	movf	(_F3+2)^(0+384),w
  9079  0C39  1283               	bcf	3,5	;RP0=0, select bank0
  9080  0C3A  1303               	bcf	3,6	;RP1=0, select bank0
  9081  0C3B  00CB               	movwf	?___flmul+2
  9082  0C3C  1683               	bsf	3,5	;RP0=1, select bank3
  9083  0C3D  1703               	bsf	3,6	;RP1=1, select bank3
  9084  0C3E  0846               	movf	(_F3+1)^(0+384),w
  9085  0C3F  1283               	bcf	3,5	;RP0=0, select bank0
  9086  0C40  1303               	bcf	3,6	;RP1=0, select bank0
  9087  0C41  00CA               	movwf	?___flmul+1
  9088  0C42  1683               	bsf	3,5	;RP0=1, select bank3
  9089  0C43  1703               	bsf	3,6	;RP1=1, select bank3
  9090  0C44  0845               	movf	_F3^(0+384),w
  9091  0C45  1283               	bcf	3,5	;RP0=0, select bank0
  9092  0C46  1303               	bcf	3,6	;RP1=0, select bank0
  9093  0C47  00C9               	movwf	?___flmul
  9094  0C48  1683               	bsf	3,5	;RP0=1, select bank1
  9095  0C49  0837               	movf	(_measure_inductance$8240+3)^(0+128),w
  9096  0C4A  1283               	bcf	3,5	;RP0=0, select bank0
  9097  0C4B  00D0               	movwf	?___flmul+7
  9098  0C4C  1683               	bsf	3,5	;RP0=1, select bank1
  9099  0C4D  0836               	movf	(_measure_inductance$8240+2)^(0+128),w
  9100  0C4E  1283               	bcf	3,5	;RP0=0, select bank0
  9101  0C4F  00CF               	movwf	?___flmul+6
  9102  0C50  1683               	bsf	3,5	;RP0=1, select bank1
  9103  0C51  0835               	movf	(_measure_inductance$8240+1)^(0+128),w
  9104  0C52  1283               	bcf	3,5	;RP0=0, select bank0
  9105  0C53  00CE               	movwf	?___flmul+5
  9106  0C54  1683               	bsf	3,5	;RP0=1, select bank1
  9107  0C55  0834               	movf	_measure_inductance$8240^(0+128),w
  9108  0C56  1283               	bcf	3,5	;RP0=0, select bank0
  9109  0C57  00CD               	movwf	?___flmul+4
  9110  0C58  2640  120A  158A   	fcall	___flmul
  9111  0C5B  084C               	movf	?___flmul+3,w
  9112  0C5C  1683               	bsf	3,5	;RP0=1, select bank1
  9113  0C5D  00BB               	movwf	(_measure_inductance$8241+3)^(0+128)
  9114  0C5E  1283               	bcf	3,5	;RP0=0, select bank0
  9115  0C5F  084B               	movf	?___flmul+2,w
  9116  0C60  1683               	bsf	3,5	;RP0=1, select bank1
  9117  0C61  00BA               	movwf	(_measure_inductance$8241+2)^(0+128)
  9118  0C62  1283               	bcf	3,5	;RP0=0, select bank0
  9119  0C63  084A               	movf	?___flmul+1,w
  9120  0C64  1683               	bsf	3,5	;RP0=1, select bank1
  9121  0C65  00B9               	movwf	(_measure_inductance$8241+1)^(0+128)
  9122  0C66  1283               	bcf	3,5	;RP0=0, select bank0
  9123  0C67  0849               	movf	?___flmul,w
  9124  0C68  1683               	bsf	3,5	;RP0=1, select bank1
  9125  0C69  00B8               	movwf	_measure_inductance$8241^(0+128)
  9126                           
  9127                           ;measure.c: 213: denominator = 4 * 3.14159265358979323846l * 3.14159265358979323846l * F
      +                          1 * F1 * F2 * F2 * F3 * F3 * CCal;
  9128  0C6A  1703               	bsf	3,6	;RP1=1, select bank3
  9129  0C6B  0868               	movf	(_CCal+3)^(0+384),w
  9130  0C6C  1283               	bcf	3,5	;RP0=0, select bank0
  9131  0C6D  1303               	bcf	3,6	;RP1=0, select bank0
  9132  0C6E  00CC               	movwf	?___flmul+3
  9133  0C6F  1683               	bsf	3,5	;RP0=1, select bank3
  9134  0C70  1703               	bsf	3,6	;RP1=1, select bank3
  9135  0C71  0867               	movf	(_CCal+2)^(0+384),w
  9136  0C72  1283               	bcf	3,5	;RP0=0, select bank0
  9137  0C73  1303               	bcf	3,6	;RP1=0, select bank0
  9138  0C74  00CB               	movwf	?___flmul+2
  9139  0C75  1683               	bsf	3,5	;RP0=1, select bank3
  9140  0C76  1703               	bsf	3,6	;RP1=1, select bank3
  9141  0C77  0866               	movf	(_CCal+1)^(0+384),w
  9142  0C78  1283               	bcf	3,5	;RP0=0, select bank0
  9143  0C79  1303               	bcf	3,6	;RP1=0, select bank0
  9144  0C7A  00CA               	movwf	?___flmul+1
  9145  0C7B  1683               	bsf	3,5	;RP0=1, select bank3
  9146  0C7C  1703               	bsf	3,6	;RP1=1, select bank3
  9147  0C7D  0865               	movf	_CCal^(0+384),w
  9148  0C7E  1283               	bcf	3,5	;RP0=0, select bank0
  9149  0C7F  1303               	bcf	3,6	;RP1=0, select bank0
  9150  0C80  00C9               	movwf	?___flmul
  9151  0C81  1683               	bsf	3,5	;RP0=1, select bank1
  9152  0C82  083B               	movf	(_measure_inductance$8241+3)^(0+128),w
  9153  0C83  1283               	bcf	3,5	;RP0=0, select bank0
  9154  0C84  00D0               	movwf	?___flmul+7
  9155  0C85  1683               	bsf	3,5	;RP0=1, select bank1
  9156  0C86  083A               	movf	(_measure_inductance$8241+2)^(0+128),w
  9157  0C87  1283               	bcf	3,5	;RP0=0, select bank0
  9158  0C88  00CF               	movwf	?___flmul+6
  9159  0C89  1683               	bsf	3,5	;RP0=1, select bank1
  9160  0C8A  0839               	movf	(_measure_inductance$8241+1)^(0+128),w
  9161  0C8B  1283               	bcf	3,5	;RP0=0, select bank0
  9162  0C8C  00CE               	movwf	?___flmul+5
  9163  0C8D  1683               	bsf	3,5	;RP0=1, select bank1
  9164  0C8E  0838               	movf	_measure_inductance$8241^(0+128),w
  9165  0C8F  1283               	bcf	3,5	;RP0=0, select bank0
  9166  0C90  00CD               	movwf	?___flmul+4
  9167  0C91  2640  120A  158A   	fcall	___flmul
  9168  0C94  084C               	movf	?___flmul+3,w
  9169  0C95  1683               	bsf	3,5	;RP0=1, select bank1
  9170  0C96  00BF               	movwf	(_measure_inductance$8242+3)^(0+128)
  9171  0C97  1283               	bcf	3,5	;RP0=0, select bank0
  9172  0C98  084B               	movf	?___flmul+2,w
  9173  0C99  1683               	bsf	3,5	;RP0=1, select bank1
  9174  0C9A  00BE               	movwf	(_measure_inductance$8242+2)^(0+128)
  9175  0C9B  1283               	bcf	3,5	;RP0=0, select bank0
  9176  0C9C  084A               	movf	?___flmul+1,w
  9177  0C9D  1683               	bsf	3,5	;RP0=1, select bank1
  9178  0C9E  00BD               	movwf	(_measure_inductance$8242+1)^(0+128)
  9179  0C9F  1283               	bcf	3,5	;RP0=0, select bank0
  9180  0CA0  0849               	movf	?___flmul,w
  9181  0CA1  1683               	bsf	3,5	;RP0=1, select bank1
  9182  0CA2  00BC               	movwf	_measure_inductance$8242^(0+128)
  9183                           
  9184                           ;measure.c: 213: denominator = 4 * 3.14159265358979323846l * 3.14159265358979323846l * F
      +                          1 * F1 * F2 * F2 * F3 * F3 * CCal;
  9185  0CA3  3042               	movlw	66
  9186  0CA4  1283               	bcf	3,5	;RP0=0, select bank0
  9187  0CA5  00CC               	movwf	?___flmul+3
  9188  0CA6  301D               	movlw	29
  9189  0CA7  00CB               	movwf	?___flmul+2
  9190  0CA8  30E9               	movlw	233
  9191  0CA9  00CA               	movwf	?___flmul+1
  9192  0CAA  30E6               	movlw	230
  9193  0CAB  00C9               	movwf	?___flmul
  9194  0CAC  1683               	bsf	3,5	;RP0=1, select bank1
  9195  0CAD  083F               	movf	(_measure_inductance$8242+3)^(0+128),w
  9196  0CAE  1283               	bcf	3,5	;RP0=0, select bank0
  9197  0CAF  00D0               	movwf	?___flmul+7
  9198  0CB0  1683               	bsf	3,5	;RP0=1, select bank1
  9199  0CB1  083E               	movf	(_measure_inductance$8242+2)^(0+128),w
  9200  0CB2  1283               	bcf	3,5	;RP0=0, select bank0
  9201  0CB3  00CF               	movwf	?___flmul+6
  9202  0CB4  1683               	bsf	3,5	;RP0=1, select bank1
  9203  0CB5  083D               	movf	(_measure_inductance$8242+1)^(0+128),w
  9204  0CB6  1283               	bcf	3,5	;RP0=0, select bank0
  9205  0CB7  00CE               	movwf	?___flmul+5
  9206  0CB8  1683               	bsf	3,5	;RP0=1, select bank1
  9207  0CB9  083C               	movf	_measure_inductance$8242^(0+128),w
  9208  0CBA  1283               	bcf	3,5	;RP0=0, select bank0
  9209  0CBB  00CD               	movwf	?___flmul+4
  9210  0CBC  2640  120A  158A   	fcall	___flmul
  9211  0CBF  084C               	movf	?___flmul+3,w
  9212  0CC0  1683               	bsf	3,5	;RP0=1, select bank1
  9213  0CC1  00AF               	movwf	(measure_inductance@denominator+3)^(0+128)
  9214  0CC2  1283               	bcf	3,5	;RP0=0, select bank0
  9215  0CC3  084B               	movf	?___flmul+2,w
  9216  0CC4  1683               	bsf	3,5	;RP0=1, select bank1
  9217  0CC5  00AE               	movwf	(measure_inductance@denominator+2)^(0+128)
  9218  0CC6  1283               	bcf	3,5	;RP0=0, select bank0
  9219  0CC7  084A               	movf	?___flmul+1,w
  9220  0CC8  1683               	bsf	3,5	;RP0=1, select bank1
  9221  0CC9  00AD               	movwf	(measure_inductance@denominator+1)^(0+128)
  9222  0CCA  1283               	bcf	3,5	;RP0=0, select bank0
  9223  0CCB  0849               	movf	?___flmul,w
  9224  0CCC  1683               	bsf	3,5	;RP0=1, select bank1
  9225  0CCD  00AC               	movwf	measure_inductance@denominator^(0+128)
  9226                           
  9227                           ;measure.c: 214: Lin = (numerator / denominator) * 1e+15l;
  9228  0CCE  3058               	movlw	88
  9229  0CCF  1283               	bcf	3,5	;RP0=0, select bank0
  9230  0CD0  00CC               	movwf	?___flmul+3
  9231  0CD1  3063               	movlw	99
  9232  0CD2  00CB               	movwf	?___flmul+2
  9233  0CD3  305F               	movlw	95
  9234  0CD4  00CA               	movwf	?___flmul+1
  9235  0CD5  30A9               	movlw	169
  9236  0CD6  00C9               	movwf	?___flmul
  9237  0CD7  1683               	bsf	3,5	;RP0=1, select bank1
  9238  0CD8  082F               	movf	(measure_inductance@denominator+3)^(0+128),w
  9239  0CD9  1283               	bcf	3,5	;RP0=0, select bank0
  9240  0CDA  00B9               	movwf	?___fldiv+3
  9241  0CDB  1683               	bsf	3,5	;RP0=1, select bank1
  9242  0CDC  082E               	movf	(measure_inductance@denominator+2)^(0+128),w
  9243  0CDD  1283               	bcf	3,5	;RP0=0, select bank0
  9244  0CDE  00B8               	movwf	?___fldiv+2
  9245  0CDF  1683               	bsf	3,5	;RP0=1, select bank1
  9246  0CE0  082D               	movf	(measure_inductance@denominator+1)^(0+128),w
  9247  0CE1  1283               	bcf	3,5	;RP0=0, select bank0
  9248  0CE2  00B7               	movwf	?___fldiv+1
  9249  0CE3  1683               	bsf	3,5	;RP0=1, select bank1
  9250  0CE4  082C               	movf	measure_inductance@denominator^(0+128),w
  9251  0CE5  1283               	bcf	3,5	;RP0=0, select bank0
  9252  0CE6  00B6               	movwf	?___fldiv
  9253  0CE7  1683               	bsf	3,5	;RP0=1, select bank1
  9254  0CE8  082B               	movf	(measure_inductance@numerator+3)^(0+128),w
  9255  0CE9  1283               	bcf	3,5	;RP0=0, select bank0
  9256  0CEA  00BD               	movwf	?___fldiv+7
  9257  0CEB  1683               	bsf	3,5	;RP0=1, select bank1
  9258  0CEC  082A               	movf	(measure_inductance@numerator+2)^(0+128),w
  9259  0CED  1283               	bcf	3,5	;RP0=0, select bank0
  9260  0CEE  00BC               	movwf	?___fldiv+6
  9261  0CEF  1683               	bsf	3,5	;RP0=1, select bank1
  9262  0CF0  0829               	movf	(measure_inductance@numerator+1)^(0+128),w
  9263  0CF1  1283               	bcf	3,5	;RP0=0, select bank0
  9264  0CF2  00BB               	movwf	?___fldiv+5
  9265  0CF3  1683               	bsf	3,5	;RP0=1, select bank1
  9266  0CF4  0828               	movf	measure_inductance@numerator^(0+128),w
  9267  0CF5  1283               	bcf	3,5	;RP0=0, select bank0
  9268  0CF6  00BA               	movwf	?___fldiv+4
  9269  0CF7  160A  118A  25E9   	fcall	___fldiv
      +       120A  158A         
  9270  0CFC  0839               	movf	?___fldiv+3,w
  9271  0CFD  00D0               	movwf	?___flmul+7
  9272  0CFE  0838               	movf	?___fldiv+2,w
  9273  0CFF  00CF               	movwf	?___flmul+6
  9274  0D00  0837               	movf	?___fldiv+1,w
  9275  0D01  00CE               	movwf	?___flmul+5
  9276  0D02  0836               	movf	?___fldiv,w
  9277  0D03  00CD               	movwf	?___flmul+4
  9278  0D04  2640  120A  158A   	fcall	___flmul
  9279  0D07  084C               	movf	?___flmul+3,w
  9280  0D08  1683               	bsf	3,5	;RP0=1, select bank1
  9281  0D09  00CE               	movwf	(measure_inductance@Lin+3)^(0+128)
  9282  0D0A  1283               	bcf	3,5	;RP0=0, select bank0
  9283  0D0B  084B               	movf	?___flmul+2,w
  9284  0D0C  1683               	bsf	3,5	;RP0=1, select bank1
  9285  0D0D  00CD               	movwf	(measure_inductance@Lin+2)^(0+128)
  9286  0D0E  1283               	bcf	3,5	;RP0=0, select bank0
  9287  0D0F  084A               	movf	?___flmul+1,w
  9288  0D10  1683               	bsf	3,5	;RP0=1, select bank1
  9289  0D11  00CC               	movwf	(measure_inductance@Lin+1)^(0+128)
  9290  0D12  1283               	bcf	3,5	;RP0=0, select bank0
  9291  0D13  0849               	movf	?___flmul,w
  9292  0D14  1683               	bsf	3,5	;RP0=1, select bank1
  9293  0D15  00CB               	movwf	measure_inductance@Lin^(0+128)
  9294                           
  9295                           ;measure.c: 216: if(Lin > 999) {
  9296  0D16  3044               	movlw	68
  9297  0D17  1283               	bcf	3,5	;RP0=0, select bank0
  9298  0D18  00A3               	movwf	?___flge+3
  9299  0D19  3079               	movlw	121
  9300  0D1A  00A2               	movwf	?___flge+2
  9301  0D1B  30C0               	movlw	192
  9302  0D1C  00A1               	movwf	?___flge+1
  9303  0D1D  01A0               	clrf	?___flge
  9304  0D1E  1683               	bsf	3,5	;RP0=1, select bank1
  9305  0D1F  084E               	movf	(measure_inductance@Lin+3)^(0+128),w
  9306  0D20  1283               	bcf	3,5	;RP0=0, select bank0
  9307  0D21  00A7               	movwf	?___flge+7
  9308  0D22  1683               	bsf	3,5	;RP0=1, select bank1
  9309  0D23  084D               	movf	(measure_inductance@Lin+2)^(0+128),w
  9310  0D24  1283               	bcf	3,5	;RP0=0, select bank0
  9311  0D25  00A6               	movwf	?___flge+6
  9312  0D26  1683               	bsf	3,5	;RP0=1, select bank1
  9313  0D27  084C               	movf	(measure_inductance@Lin+1)^(0+128),w
  9314  0D28  1283               	bcf	3,5	;RP0=0, select bank0
  9315  0D29  00A5               	movwf	?___flge+5
  9316  0D2A  1683               	bsf	3,5	;RP0=1, select bank1
  9317  0D2B  084B               	movf	measure_inductance@Lin^(0+128),w
  9318  0D2C  1283               	bcf	3,5	;RP0=0, select bank0
  9319  0D2D  00A4               	movwf	?___flge+4
  9320  0D2E  26D8  120A  158A   	fcall	___flge
  9321  0D31  1803               	btfsc	3,0
  9322  0D32  2DF5               	goto	l11531
  9323                           
  9324                           ;measure.c: 217: if(Lin > (999e+03l)) {
  9325  0D33  3049               	movlw	73
  9326  0D34  00A3               	movwf	?___flge+3
  9327  0D35  3073               	movlw	115
  9328  0D36  00A2               	movwf	?___flge+2
  9329  0D37  30E5               	movlw	229
  9330  0D38  00A1               	movwf	?___flge+1
  9331  0D39  3080               	movlw	128
  9332  0D3A  00A0               	movwf	?___flge
  9333  0D3B  1683               	bsf	3,5	;RP0=1, select bank1
  9334  0D3C  084E               	movf	(measure_inductance@Lin+3)^(0+128),w
  9335  0D3D  1283               	bcf	3,5	;RP0=0, select bank0
  9336  0D3E  00A7               	movwf	?___flge+7
  9337  0D3F  1683               	bsf	3,5	;RP0=1, select bank1
  9338  0D40  084D               	movf	(measure_inductance@Lin+2)^(0+128),w
  9339  0D41  1283               	bcf	3,5	;RP0=0, select bank0
  9340  0D42  00A6               	movwf	?___flge+6
  9341  0D43  1683               	bsf	3,5	;RP0=1, select bank1
  9342  0D44  084C               	movf	(measure_inductance@Lin+1)^(0+128),w
  9343  0D45  1283               	bcf	3,5	;RP0=0, select bank0
  9344  0D46  00A5               	movwf	?___flge+5
  9345  0D47  1683               	bsf	3,5	;RP0=1, select bank1
  9346  0D48  084B               	movf	measure_inductance@Lin^(0+128),w
  9347  0D49  1283               	bcf	3,5	;RP0=0, select bank0
  9348  0D4A  00A4               	movwf	?___flge+4
  9349  0D4B  26D8  120A  158A   	fcall	___flge
  9350  0D4E  1803               	btfsc	3,0
  9351  0D4F  2DC9               	goto	l11527
  9352                           
  9353                           ;measure.c: 218: if(Lin > (999e+06l)) {
  9354  0D50  304E               	movlw	78
  9355  0D51  00A3               	movwf	?___flge+3
  9356  0D52  306E               	movlw	110
  9357  0D53  00A2               	movwf	?___flge+2
  9358  0D54  302E               	movlw	46
  9359  0D55  00A1               	movwf	?___flge+1
  9360  0D56  301F               	movlw	31
  9361  0D57  00A0               	movwf	?___flge
  9362  0D58  1683               	bsf	3,5	;RP0=1, select bank1
  9363  0D59  084E               	movf	(measure_inductance@Lin+3)^(0+128),w
  9364  0D5A  1283               	bcf	3,5	;RP0=0, select bank0
  9365  0D5B  00A7               	movwf	?___flge+7
  9366  0D5C  1683               	bsf	3,5	;RP0=1, select bank1
  9367  0D5D  084D               	movf	(measure_inductance@Lin+2)^(0+128),w
  9368  0D5E  1283               	bcf	3,5	;RP0=0, select bank0
  9369  0D5F  00A6               	movwf	?___flge+6
  9370  0D60  1683               	bsf	3,5	;RP0=1, select bank1
  9371  0D61  084C               	movf	(measure_inductance@Lin+1)^(0+128),w
  9372  0D62  1283               	bcf	3,5	;RP0=0, select bank0
  9373  0D63  00A5               	movwf	?___flge+5
  9374  0D64  1683               	bsf	3,5	;RP0=1, select bank1
  9375  0D65  084B               	movf	measure_inductance@Lin^(0+128),w
  9376  0D66  1283               	bcf	3,5	;RP0=0, select bank0
  9377  0D67  00A4               	movwf	?___flge+4
  9378  0D68  26D8  120A  158A   	fcall	___flge
  9379  0D6B  1803               	btfsc	3,0
  9380  0D6C  2D9B               	goto	l11523
  9381                           
  9382                           ;measure.c: 219: Lin = Lin / (1e+09l);
  9383  0D6D  304E               	movlw	78
  9384  0D6E  00B9               	movwf	?___fldiv+3
  9385  0D6F  306E               	movlw	110
  9386  0D70  00B8               	movwf	?___fldiv+2
  9387  0D71  306B               	movlw	107
  9388  0D72  00B7               	movwf	?___fldiv+1
  9389  0D73  3028               	movlw	40
  9390  0D74  00B6               	movwf	?___fldiv
  9391  0D75  1683               	bsf	3,5	;RP0=1, select bank1
  9392  0D76  084E               	movf	(measure_inductance@Lin+3)^(0+128),w
  9393  0D77  1283               	bcf	3,5	;RP0=0, select bank0
  9394  0D78  00BD               	movwf	?___fldiv+7
  9395  0D79  1683               	bsf	3,5	;RP0=1, select bank1
  9396  0D7A  084D               	movf	(measure_inductance@Lin+2)^(0+128),w
  9397  0D7B  1283               	bcf	3,5	;RP0=0, select bank0
  9398  0D7C  00BC               	movwf	?___fldiv+6
  9399  0D7D  1683               	bsf	3,5	;RP0=1, select bank1
  9400  0D7E  084C               	movf	(measure_inductance@Lin+1)^(0+128),w
  9401  0D7F  1283               	bcf	3,5	;RP0=0, select bank0
  9402  0D80  00BB               	movwf	?___fldiv+5
  9403  0D81  1683               	bsf	3,5	;RP0=1, select bank1
  9404  0D82  084B               	movf	measure_inductance@Lin^(0+128),w
  9405  0D83  1283               	bcf	3,5	;RP0=0, select bank0
  9406  0D84  00BA               	movwf	?___fldiv+4
  9407  0D85  160A  118A  25E9   	fcall	___fldiv
      +       120A  158A         
  9408  0D8A  0839               	movf	?___fldiv+3,w
  9409  0D8B  1683               	bsf	3,5	;RP0=1, select bank1
  9410  0D8C  00CE               	movwf	(measure_inductance@Lin+3)^(0+128)
  9411  0D8D  1283               	bcf	3,5	;RP0=0, select bank0
  9412  0D8E  0838               	movf	?___fldiv+2,w
  9413  0D8F  1683               	bsf	3,5	;RP0=1, select bank1
  9414  0D90  00CD               	movwf	(measure_inductance@Lin+2)^(0+128)
  9415  0D91  1283               	bcf	3,5	;RP0=0, select bank0
  9416  0D92  0837               	movf	?___fldiv+1,w
  9417  0D93  1683               	bsf	3,5	;RP0=1, select bank1
  9418  0D94  00CC               	movwf	(measure_inductance@Lin+1)^(0+128)
  9419  0D95  1283               	bcf	3,5	;RP0=0, select bank0
  9420  0D96  0836               	movf	?___fldiv,w
  9421  0D97  1683               	bsf	3,5	;RP0=1, select bank1
  9422  0D98  00CB               	movwf	measure_inductance@Lin^(0+128)
  9423                           
  9424                           ;measure.c: 220: unit = 0;
  9425  0D99  01C0               	clrf	measure_inductance@unit^(0+128)
  9426                           
  9427                           ;measure.c: 221: } else {
  9428  0D9A  2DF8               	goto	l11533
  9429  0D9B                     l11523:	
  9430                           
  9431                           ;measure.c: 222: Lin = Lin / (1e+06l);
  9432  0D9B  3049               	movlw	73
  9433  0D9C  00B9               	movwf	?___fldiv+3
  9434  0D9D  3074               	movlw	116
  9435  0D9E  00B8               	movwf	?___fldiv+2
  9436  0D9F  3024               	movlw	36
  9437  0DA0  00B7               	movwf	?___fldiv+1
  9438  0DA1  01B6               	clrf	?___fldiv
  9439  0DA2  1683               	bsf	3,5	;RP0=1, select bank1
  9440  0DA3  084E               	movf	(measure_inductance@Lin+3)^(0+128),w
  9441  0DA4  1283               	bcf	3,5	;RP0=0, select bank0
  9442  0DA5  00BD               	movwf	?___fldiv+7
  9443  0DA6  1683               	bsf	3,5	;RP0=1, select bank1
  9444  0DA7  084D               	movf	(measure_inductance@Lin+2)^(0+128),w
  9445  0DA8  1283               	bcf	3,5	;RP0=0, select bank0
  9446  0DA9  00BC               	movwf	?___fldiv+6
  9447  0DAA  1683               	bsf	3,5	;RP0=1, select bank1
  9448  0DAB  084C               	movf	(measure_inductance@Lin+1)^(0+128),w
  9449  0DAC  1283               	bcf	3,5	;RP0=0, select bank0
  9450  0DAD  00BB               	movwf	?___fldiv+5
  9451  0DAE  1683               	bsf	3,5	;RP0=1, select bank1
  9452  0DAF  084B               	movf	measure_inductance@Lin^(0+128),w
  9453  0DB0  1283               	bcf	3,5	;RP0=0, select bank0
  9454  0DB1  00BA               	movwf	?___fldiv+4
  9455  0DB2  160A  118A  25E9   	fcall	___fldiv
      +       120A  158A         
  9456  0DB7  0839               	movf	?___fldiv+3,w
  9457  0DB8  1683               	bsf	3,5	;RP0=1, select bank1
  9458  0DB9  00CE               	movwf	(measure_inductance@Lin+3)^(0+128)
  9459  0DBA  1283               	bcf	3,5	;RP0=0, select bank0
  9460  0DBB  0838               	movf	?___fldiv+2,w
  9461  0DBC  1683               	bsf	3,5	;RP0=1, select bank1
  9462  0DBD  00CD               	movwf	(measure_inductance@Lin+2)^(0+128)
  9463  0DBE  1283               	bcf	3,5	;RP0=0, select bank0
  9464  0DBF  0837               	movf	?___fldiv+1,w
  9465  0DC0  1683               	bsf	3,5	;RP0=1, select bank1
  9466  0DC1  00CC               	movwf	(measure_inductance@Lin+1)^(0+128)
  9467  0DC2  1283               	bcf	3,5	;RP0=0, select bank0
  9468  0DC3  0836               	movf	?___fldiv,w
  9469  0DC4  1683               	bsf	3,5	;RP0=1, select bank1
  9470  0DC5  00CB               	movwf	measure_inductance@Lin^(0+128)
  9471                           
  9472                           ;measure.c: 223: unit = 1;
  9473  0DC6  01C0               	clrf	measure_inductance@unit^(0+128)
  9474  0DC7  0AC0               	incf	measure_inductance@unit^(0+128),f
  9475  0DC8  2DF8               	goto	l11533
  9476  0DC9                     l11527:	
  9477                           
  9478                           ;measure.c: 226: Lin = Lin / 1e+03l;
  9479  0DC9  3044               	movlw	68
  9480  0DCA  00B9               	movwf	?___fldiv+3
  9481  0DCB  307A               	movlw	122
  9482  0DCC  00B8               	movwf	?___fldiv+2
  9483  0DCD  01B7               	clrf	?___fldiv+1
  9484  0DCE  01B6               	clrf	?___fldiv
  9485  0DCF  1683               	bsf	3,5	;RP0=1, select bank1
  9486  0DD0  084E               	movf	(measure_inductance@Lin+3)^(0+128),w
  9487  0DD1  1283               	bcf	3,5	;RP0=0, select bank0
  9488  0DD2  00BD               	movwf	?___fldiv+7
  9489  0DD3  1683               	bsf	3,5	;RP0=1, select bank1
  9490  0DD4  084D               	movf	(measure_inductance@Lin+2)^(0+128),w
  9491  0DD5  1283               	bcf	3,5	;RP0=0, select bank0
  9492  0DD6  00BC               	movwf	?___fldiv+6
  9493  0DD7  1683               	bsf	3,5	;RP0=1, select bank1
  9494  0DD8  084C               	movf	(measure_inductance@Lin+1)^(0+128),w
  9495  0DD9  1283               	bcf	3,5	;RP0=0, select bank0
  9496  0DDA  00BB               	movwf	?___fldiv+5
  9497  0DDB  1683               	bsf	3,5	;RP0=1, select bank1
  9498  0DDC  084B               	movf	measure_inductance@Lin^(0+128),w
  9499  0DDD  1283               	bcf	3,5	;RP0=0, select bank0
  9500  0DDE  00BA               	movwf	?___fldiv+4
  9501  0DDF  160A  118A  25E9   	fcall	___fldiv
      +       120A  158A         
  9502  0DE4  0839               	movf	?___fldiv+3,w
  9503  0DE5  1683               	bsf	3,5	;RP0=1, select bank1
  9504  0DE6  00CE               	movwf	(measure_inductance@Lin+3)^(0+128)
  9505  0DE7  1283               	bcf	3,5	;RP0=0, select bank0
  9506  0DE8  0838               	movf	?___fldiv+2,w
  9507  0DE9  1683               	bsf	3,5	;RP0=1, select bank1
  9508  0DEA  00CD               	movwf	(measure_inductance@Lin+2)^(0+128)
  9509  0DEB  1283               	bcf	3,5	;RP0=0, select bank0
  9510  0DEC  0837               	movf	?___fldiv+1,w
  9511  0DED  1683               	bsf	3,5	;RP0=1, select bank1
  9512  0DEE  00CC               	movwf	(measure_inductance@Lin+1)^(0+128)
  9513  0DEF  1283               	bcf	3,5	;RP0=0, select bank0
  9514  0DF0  0836               	movf	?___fldiv,w
  9515  0DF1  1683               	bsf	3,5	;RP0=1, select bank1
  9516  0DF2  00CB               	movwf	measure_inductance@Lin^(0+128)
  9517                           
  9518                           ;measure.c: 227: unit = 2;
  9519  0DF3  3002               	movlw	2
  9520  0DF4  2DF7               	goto	L3
  9521  0DF5                     l11531:	
  9522                           
  9523                           ;measure.c: 230: unit = 3;
  9524  0DF5  3003               	movlw	3
  9525  0DF6  1683               	bsf	3,5	;RP0=1, select bank1
  9526  0DF7                     L3:	
  9527  0DF7  00C0               	movwf	measure_inductance@unit^(0+128)
  9528  0DF8                     l11533:	
  9529                           
  9530                           ;measure.c: 232: Lin = Lin * 100;
  9531  0DF8  3042               	movlw	66
  9532  0DF9  1283               	bcf	3,5	;RP0=0, select bank0
  9533  0DFA  00CC               	movwf	?___flmul+3
  9534  0DFB  30C8               	movlw	200
  9535  0DFC  00CB               	movwf	?___flmul+2
  9536  0DFD  01CA               	clrf	?___flmul+1
  9537  0DFE  01C9               	clrf	?___flmul
  9538  0DFF  1683               	bsf	3,5	;RP0=1, select bank1
  9539  0E00  084E               	movf	(measure_inductance@Lin+3)^(0+128),w
  9540  0E01  1283               	bcf	3,5	;RP0=0, select bank0
  9541  0E02  00D0               	movwf	?___flmul+7
  9542  0E03  1683               	bsf	3,5	;RP0=1, select bank1
  9543  0E04  084D               	movf	(measure_inductance@Lin+2)^(0+128),w
  9544  0E05  1283               	bcf	3,5	;RP0=0, select bank0
  9545  0E06  00CF               	movwf	?___flmul+6
  9546  0E07  1683               	bsf	3,5	;RP0=1, select bank1
  9547  0E08  084C               	movf	(measure_inductance@Lin+1)^(0+128),w
  9548  0E09  1283               	bcf	3,5	;RP0=0, select bank0
  9549  0E0A  00CE               	movwf	?___flmul+5
  9550  0E0B  1683               	bsf	3,5	;RP0=1, select bank1
  9551  0E0C  084B               	movf	measure_inductance@Lin^(0+128),w
  9552  0E0D  1283               	bcf	3,5	;RP0=0, select bank0
  9553  0E0E  00CD               	movwf	?___flmul+4
  9554  0E0F  2640               	fcall	___flmul
  9555  0E10  084C               	movf	?___flmul+3,w
  9556  0E11  1683               	bsf	3,5	;RP0=1, select bank1
  9557  0E12  00CE               	movwf	(measure_inductance@Lin+3)^(0+128)
  9558  0E13  1283               	bcf	3,5	;RP0=0, select bank0
  9559  0E14  084B               	movf	?___flmul+2,w
  9560  0E15  1683               	bsf	3,5	;RP0=1, select bank1
  9561  0E16  00CD               	movwf	(measure_inductance@Lin+2)^(0+128)
  9562  0E17  1283               	bcf	3,5	;RP0=0, select bank0
  9563  0E18  084A               	movf	?___flmul+1,w
  9564  0E19  1683               	bsf	3,5	;RP0=1, select bank1
  9565  0E1A  00CC               	movwf	(measure_inductance@Lin+1)^(0+128)
  9566  0E1B  1283               	bcf	3,5	;RP0=0, select bank0
  9567  0E1C  0849               	movf	?___flmul,w
  9568  0E1D  1683               	bsf	3,5	;RP0=1, select bank1
  9569  0E1E  00CB               	movwf	measure_inductance@Lin^(0+128)
  9570                           
  9571                           ;measure.c: 233: var = (uint16_t)Lin;
  9572  0E1F  084E               	movf	(measure_inductance@Lin+3)^(0+128),w
  9573  0E20  1283               	bcf	3,5	;RP0=0, select bank0
  9574  0E21  00AF               	movwf	?___fltol+3
  9575  0E22  1683               	bsf	3,5	;RP0=1, select bank1
  9576  0E23  084D               	movf	(measure_inductance@Lin+2)^(0+128),w
  9577  0E24  1283               	bcf	3,5	;RP0=0, select bank0
  9578  0E25  00AE               	movwf	?___fltol+2
  9579  0E26  1683               	bsf	3,5	;RP0=1, select bank1
  9580  0E27  084C               	movf	(measure_inductance@Lin+1)^(0+128),w
  9581  0E28  1283               	bcf	3,5	;RP0=0, select bank0
  9582  0E29  00AD               	movwf	?___fltol+1
  9583  0E2A  1683               	bsf	3,5	;RP0=1, select bank1
  9584  0E2B  084B               	movf	measure_inductance@Lin^(0+128),w
  9585  0E2C  1283               	bcf	3,5	;RP0=0, select bank0
  9586  0E2D  00AC               	movwf	?___fltol
  9587  0E2E  160A  118A  2662   	fcall	___fltol
  9588  0E31  082D               	movf	?___fltol+1,w
  9589  0E32  1683               	bsf	3,5	;RP0=1, select bank1
  9590  0E33  00CA               	movwf	(measure_inductance@var+1)^(0+128)
  9591  0E34  1283               	bcf	3,5	;RP0=0, select bank0
  9592  0E35  082C               	movf	?___fltol,w
  9593  0E36  1683               	bsf	3,5	;RP0=1, select bank1
  9594  0E37  00C9               	movwf	measure_inductance@var^(0+128)
  9595                           
  9596                           ;measure.c: 235: print_reading(var);
  9597  0E38  084A               	movf	(measure_inductance@var+1)^(0+128),w
  9598  0E39  00F5               	movwf	?_print_reading+1
  9599  0E3A  0849               	movf	measure_inductance@var^(0+128),w
  9600  0E3B  00F4               	movwf	?_print_reading
  9601                           
  9602                           ;measure.c: 236: print_unit(unit);
  9603  0E3C  0840               	movf	measure_inductance@unit^(0+128),w
  9604  0E3D  160A  118A  2FFF   	ljmp	l3792
  9605  0E40                     __end_of_measure_inductance:	
  9606  0E40                     __ptext1261:	
  9607 ;; =============== function ___awtofl ends ============
  9608                           
  9609                           
  9610 ;; *************** function ___flmul *****************
  9611 ;; Defined at:
  9612 ;;		line 51 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\flmul.c"
  9613 ;; Parameters:    Size  Location     Type
  9614 ;;  f1              4   41[BANK0 ] unsigned char 
  9615 ;;  f2              4   45[BANK0 ] unsigned char 
  9616 ;; Auto vars:     Size  Location     Type
  9617 ;;  f3_as_produc    4   54[BANK0 ] unsigned long 
  9618 ;;  sign            1   59[BANK0 ] unsigned char 
  9619 ;;  cntr            1   58[BANK0 ] unsigned char 
  9620 ;;  exp             1   53[BANK0 ] unsigned char 
  9621 ;; Return value:  Size  Location     Type
  9622 ;;                  4   41[BANK0 ] unsigned char 
  9623 ;; Registers used:
  9624 ;;		wreg, status,2, status,0, pclath, cstack
  9625 ;; Tracked objects:
  9626 ;;		On entry : 60/100
  9627 ;;		On exit  : 60/100
  9628 ;;		Unchanged: FFF9F/0
  9629 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9630 ;;      Params:         0       8       0       0       0
  9631 ;;      Locals:         0       7       0       0       0
  9632 ;;      Temps:          0       4       0       0       0
  9633 ;;      Totals:         0      19       0       0       0
  9634 ;;Total ram usage:       19 bytes
  9635 ;; Hardware stack levels used:    1
  9636 ;; Hardware stack levels required when called:    2
  9637 ;; This function calls:
  9638 ;;		___flpack
  9639 ;; This function is called by:
  9640 ;;		_format_double
  9641 ;;		_measure_capacitance
  9642 ;;		_measure_inductance
  9643 ;;		_log
  9644 ;;		_log10
  9645 ;;		_pow
  9646 ;;		_eval_poly
  9647 ;;		_exp
  9648 ;; This function uses a non-reentrant model
  9649 ;;
  9650  0E40                     ___flmul:	
  9651                           
  9652                           ; Regs used in ___flmul: [wreg+status,2+status,0+pclath+cstack]
  9653  0E40  0849               	movf	___flmul@f1,w
  9654  0E41  00D1               	movwf	??___flmul
  9655  0E42  084A               	movf	___flmul@f1+1,w
  9656  0E43  00D2               	movwf	??___flmul+1
  9657  0E44  084B               	movf	___flmul@f1+2,w
  9658  0E45  00D3               	movwf	??___flmul+2
  9659  0E46  084C               	movf	___flmul@f1+3,w
  9660  0E47  00D4               	movwf	??___flmul+3
  9661  0E48  1003               	clrc
  9662  0E49  0D53               	rlf	??___flmul+2,w
  9663  0E4A  0D54               	rlf	??___flmul+3,w
  9664  0E4B  00D5               	movwf	___flmul@exp
  9665  0E4C  08D5               	movf	___flmul@exp,f
  9666  0E4D  1D03               	skipz
  9667  0E4E  2E54               	goto	l11189
  9668  0E4F  01C9               	clrf	?___flmul
  9669  0E50  01CA               	clrf	?___flmul+1
  9670  0E51  01CB               	clrf	?___flmul+2
  9671  0E52  01CC               	clrf	?___flmul+3
  9672  0E53  0008               	return
  9673  0E54                     l11189:	
  9674  0E54  084D               	movf	___flmul@f2,w
  9675  0E55  00D1               	movwf	??___flmul
  9676  0E56  084E               	movf	___flmul@f2+1,w
  9677  0E57  00D2               	movwf	??___flmul+1
  9678  0E58  084F               	movf	___flmul@f2+2,w
  9679  0E59  00D3               	movwf	??___flmul+2
  9680  0E5A  0850               	movf	___flmul@f2+3,w
  9681  0E5B  00D4               	movwf	??___flmul+3
  9682  0E5C  1003               	clrc
  9683  0E5D  0D53               	rlf	??___flmul+2,w
  9684  0E5E  0D54               	rlf	??___flmul+3,w
  9685  0E5F  00DB               	movwf	___flmul@sign
  9686  0E60  08DB               	movf	___flmul@sign,f
  9687  0E61  1D03               	skipz
  9688  0E62  2E68               	goto	l11193
  9689  0E63  01C9               	clrf	?___flmul
  9690  0E64  01CA               	clrf	?___flmul+1
  9691  0E65  01CB               	clrf	?___flmul+2
  9692  0E66  01CC               	clrf	?___flmul+3
  9693  0E67  0008               	return
  9694  0E68                     l11193:	
  9695  0E68  085B               	movf	___flmul@sign,w
  9696  0E69  3E7B               	addlw	123
  9697  0E6A  07D5               	addwf	___flmul@exp,f
  9698  0E6B  084C               	movf	___flmul@f1+3,w
  9699  0E6C  00DB               	movwf	___flmul@sign
  9700  0E6D  0850               	movf	___flmul@f2+3,w
  9701  0E6E  06DB               	xorwf	___flmul@sign,f
  9702  0E6F  3080               	movlw	128
  9703  0E70  05DB               	andwf	___flmul@sign,f
  9704  0E71  3007               	movlw	7
  9705  0E72  17CB               	bsf	___flmul@f1+2,7
  9706  0E73  17CF               	bsf	___flmul@f2+2,7
  9707  0E74  01D0               	clrf	___flmul@f2+3
  9708  0E75  01D6               	clrf	___flmul@f3_as_product
  9709  0E76  01D7               	clrf	___flmul@f3_as_product+1
  9710  0E77  01D8               	clrf	___flmul@f3_as_product+2
  9711  0E78  01D9               	clrf	___flmul@f3_as_product+3
  9712  0E79  00DA               	movwf	___flmul@cntr
  9713  0E7A                     l11211:	
  9714  0E7A  1C49               	btfss	___flmul@f1,0
  9715  0E7B  2E90               	goto	l11215
  9716  0E7C  084D               	movf	___flmul@f2,w
  9717  0E7D  07D6               	addwf	___flmul@f3_as_product,f
  9718  0E7E  084E               	movf	___flmul@f2+1,w
  9719  0E7F  1103               	clrz
  9720  0E80  1803               	skipnc
  9721  0E81  3E01               	addlw	1
  9722  0E82  1D03               	btfss	3,2
  9723  0E83  07D7               	addwf	___flmul@f3_as_product+1,f
  9724  0E84  084F               	movf	___flmul@f2+2,w
  9725  0E85  1103               	clrz
  9726  0E86  1803               	skipnc
  9727  0E87  3E01               	addlw	1
  9728  0E88  1D03               	btfss	3,2
  9729  0E89  07D8               	addwf	___flmul@f3_as_product+2,f
  9730  0E8A  0850               	movf	___flmul@f2+3,w
  9731  0E8B  1103               	clrz
  9732  0E8C  1803               	skipnc
  9733  0E8D  3E01               	addlw	1
  9734  0E8E  1D03               	btfss	3,2
  9735  0E8F  07D9               	addwf	___flmul@f3_as_product+3,f
  9736  0E90                     l11215:	
  9737  0E90  1003               	clrc
  9738  0E91  0CCC               	rrf	___flmul@f1+3,f
  9739  0E92  0CCB               	rrf	___flmul@f1+2,f
  9740  0E93  0CCA               	rrf	___flmul@f1+1,f
  9741  0E94  0CC9               	rrf	___flmul@f1,f
  9742  0E95  1003               	clrc
  9743  0E96  0DCD               	rlf	___flmul@f2,f
  9744  0E97  0DCE               	rlf	___flmul@f2+1,f
  9745  0E98  0DCF               	rlf	___flmul@f2+2,f
  9746  0E99  0DD0               	rlf	___flmul@f2+3,f
  9747  0E9A  0BDA               	decfsz	___flmul@cntr,f
  9748  0E9B  2E7A               	goto	l11211
  9749  0E9C  3011               	movlw	17
  9750  0E9D  00DA               	movwf	___flmul@cntr
  9751  0E9E                     l11223:	
  9752  0E9E  1C49               	btfss	___flmul@f1,0
  9753  0E9F  2EB4               	goto	l11227
  9754  0EA0  084D               	movf	___flmul@f2,w
  9755  0EA1  07D6               	addwf	___flmul@f3_as_product,f
  9756  0EA2  084E               	movf	___flmul@f2+1,w
  9757  0EA3  1103               	clrz
  9758  0EA4  1803               	skipnc
  9759  0EA5  3E01               	addlw	1
  9760  0EA6  1D03               	btfss	3,2
  9761  0EA7  07D7               	addwf	___flmul@f3_as_product+1,f
  9762  0EA8  084F               	movf	___flmul@f2+2,w
  9763  0EA9  1103               	clrz
  9764  0EAA  1803               	skipnc
  9765  0EAB  3E01               	addlw	1
  9766  0EAC  1D03               	btfss	3,2
  9767  0EAD  07D8               	addwf	___flmul@f3_as_product+2,f
  9768  0EAE  0850               	movf	___flmul@f2+3,w
  9769  0EAF  1103               	clrz
  9770  0EB0  1803               	skipnc
  9771  0EB1  3E01               	addlw	1
  9772  0EB2  1D03               	btfss	3,2
  9773  0EB3  07D9               	addwf	___flmul@f3_as_product+3,f
  9774  0EB4                     l11227:	
  9775  0EB4  1003               	clrc
  9776  0EB5  0CCC               	rrf	___flmul@f1+3,f
  9777  0EB6  0CCB               	rrf	___flmul@f1+2,f
  9778  0EB7  0CCA               	rrf	___flmul@f1+1,f
  9779  0EB8  0CC9               	rrf	___flmul@f1,f
  9780  0EB9  1003               	clrc
  9781  0EBA  0CD9               	rrf	___flmul@f3_as_product+3,f
  9782  0EBB  0CD8               	rrf	___flmul@f3_as_product+2,f
  9783  0EBC  0CD7               	rrf	___flmul@f3_as_product+1,f
  9784  0EBD  0CD6               	rrf	___flmul@f3_as_product,f
  9785  0EBE  0BDA               	decfsz	___flmul@cntr,f
  9786  0EBF  2E9E               	goto	l11223
  9787  0EC0  0859               	movf	___flmul@f3_as_product+3,w
  9788  0EC1  00A3               	movwf	?___flpack+3
  9789  0EC2  0858               	movf	___flmul@f3_as_product+2,w
  9790  0EC3  00A2               	movwf	?___flpack+2
  9791  0EC4  0857               	movf	___flmul@f3_as_product+1,w
  9792  0EC5  00A1               	movwf	?___flpack+1
  9793  0EC6  0856               	movf	___flmul@f3_as_product,w
  9794  0EC7  00A0               	movwf	?___flpack
  9795  0EC8  0855               	movf	___flmul@exp,w
  9796  0EC9  00A4               	movwf	?___flpack+4
  9797  0ECA  085B               	movf	___flmul@sign,w
  9798  0ECB  00A5               	movwf	?___flpack+5
  9799  0ECC  160A  118A  27B4   	fcall	___flpack
  9800  0ECF  0823               	movf	?___flpack+3,w
  9801  0ED0  00CC               	movwf	?___flmul+3
  9802  0ED1  0822               	movf	?___flpack+2,w
  9803  0ED2  00CB               	movwf	?___flmul+2
  9804  0ED3  0821               	movf	?___flpack+1,w
  9805  0ED4  00CA               	movwf	?___flmul+1
  9806  0ED5  0820               	movf	?___flpack,w
  9807  0ED6  00C9               	movwf	?___flmul
  9808  0ED7  0008               	return
  9809  0ED8                     __end_of___flmul:	
  9810  0ED8                     __ptext1269:	
  9811 ;; =============== function _buffer_puts ends ============
  9812                           
  9813                           
  9814 ;; *************** function ___flge *****************
  9815 ;; Defined at:
  9816 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\flge.c"
  9817 ;; Parameters:    Size  Location     Type
  9818 ;;  ff1             4    0[BANK0 ] unsigned char 
  9819 ;;  ff2             4    4[BANK0 ] unsigned char 
  9820 ;; Auto vars:     Size  Location     Type
  9821 ;;		None
  9822 ;; Return value:  Size  Location     Type
  9823 ;;		None               void
  9824 ;; Registers used:
  9825 ;;		wreg, status,2, status,0
  9826 ;; Tracked objects:
  9827 ;;		On entry : 60/100
  9828 ;;		On exit  : 60/100
  9829 ;;		Unchanged: FFF9F/0
  9830 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9831 ;;      Params:         0       8       0       0       0
  9832 ;;      Locals:         0       0       0       0       0
  9833 ;;      Temps:          0       4       0       0       0
  9834 ;;      Totals:         0      12       0       0       0
  9835 ;;Total ram usage:       12 bytes
  9836 ;; Hardware stack levels used:    1
  9837 ;; Hardware stack levels required when called:    1
  9838 ;; This function calls:
  9839 ;;		Nothing
  9840 ;; This function is called by:
  9841 ;;		_format_double
  9842 ;;		_measure_capacitance
  9843 ;;		_measure_inductance
  9844 ;;		_floor
  9845 ;;		_log
  9846 ;;		_pow
  9847 ;;		_ldexp
  9848 ;;		_exp
  9849 ;; This function uses a non-reentrant model
  9850 ;;
  9851  0ED8                     ___flge:	
  9852                           
  9853                           ; Regs used in ___flge: [wreg+status,2+status,0]
  9854  0ED8  1FA3               	btfss	___flge@ff1+3,7
  9855  0ED9  2EF5               	goto	l10931
  9856  0EDA  3080               	movlw	128
  9857  0EDB  01A8               	clrf	??___flge
  9858  0EDC  01A9               	clrf	??___flge+1
  9859  0EDD  01AA               	clrf	??___flge+2
  9860  0EDE  00AB               	movwf	??___flge+3
  9861  0EDF  0820               	movf	___flge@ff1,w
  9862  0EE0  02A8               	subwf	??___flge,f
  9863  0EE1  0821               	movf	___flge@ff1+1,w
  9864  0EE2  1C03               	skipc
  9865  0EE3  0F21               	incfsz	___flge@ff1+1,w
  9866  0EE4  02A9               	subwf	??___flge+1,f
  9867  0EE5  0822               	movf	___flge@ff1+2,w
  9868  0EE6  1C03               	skipc
  9869  0EE7  0F22               	incfsz	___flge@ff1+2,w
  9870  0EE8  02AA               	subwf	??___flge+2,f
  9871  0EE9  0823               	movf	___flge@ff1+3,w
  9872  0EEA  1C03               	skipc
  9873  0EEB  0F23               	incfsz	___flge@ff1+3,w
  9874  0EEC  02AB               	subwf	??___flge+3,f
  9875  0EED  082B               	movf	??___flge+3,w
  9876  0EEE  00A3               	movwf	___flge@ff1+3
  9877  0EEF  082A               	movf	??___flge+2,w
  9878  0EF0  00A2               	movwf	___flge@ff1+2
  9879  0EF1  0829               	movf	??___flge+1,w
  9880  0EF2  00A1               	movwf	___flge@ff1+1
  9881  0EF3  0828               	movf	??___flge,w
  9882  0EF4  00A0               	movwf	___flge@ff1
  9883  0EF5                     l10931:	
  9884  0EF5  1FA7               	btfss	___flge@ff2+3,7
  9885  0EF6  2F12               	goto	l6682
  9886  0EF7  3080               	movlw	128
  9887  0EF8  01A8               	clrf	??___flge
  9888  0EF9  01A9               	clrf	??___flge+1
  9889  0EFA  01AA               	clrf	??___flge+2
  9890  0EFB  00AB               	movwf	??___flge+3
  9891  0EFC  0824               	movf	___flge@ff2,w
  9892  0EFD  02A8               	subwf	??___flge,f
  9893  0EFE  0825               	movf	___flge@ff2+1,w
  9894  0EFF  1C03               	skipc
  9895  0F00  0F25               	incfsz	___flge@ff2+1,w
  9896  0F01  02A9               	subwf	??___flge+1,f
  9897  0F02  0826               	movf	___flge@ff2+2,w
  9898  0F03  1C03               	skipc
  9899  0F04  0F26               	incfsz	___flge@ff2+2,w
  9900  0F05  02AA               	subwf	??___flge+2,f
  9901  0F06  0827               	movf	___flge@ff2+3,w
  9902  0F07  1C03               	skipc
  9903  0F08  0F27               	incfsz	___flge@ff2+3,w
  9904  0F09  02AB               	subwf	??___flge+3,f
  9905  0F0A  082B               	movf	??___flge+3,w
  9906  0F0B  00A7               	movwf	___flge@ff2+3
  9907  0F0C  082A               	movf	??___flge+2,w
  9908  0F0D  00A6               	movwf	___flge@ff2+2
  9909  0F0E  0829               	movf	??___flge+1,w
  9910  0F0F  00A5               	movwf	___flge@ff2+1
  9911  0F10  0828               	movf	??___flge,w
  9912  0F11  00A4               	movwf	___flge@ff2
  9913  0F12                     l6682:	
  9914  0F12  3080               	movlw	128
  9915  0F13  06A3               	xorwf	___flge@ff1+3,f
  9916  0F14  06A7               	xorwf	___flge@ff2+3,f
  9917  0F15  0827               	movf	___flge@ff2+3,w
  9918  0F16  0223               	subwf	___flge@ff1+3,w
  9919  0F17  1D03               	skipz
  9920  0F18  0008               	return
  9921  0F19  0826               	movf	___flge@ff2+2,w
  9922  0F1A  0222               	subwf	___flge@ff1+2,w
  9923  0F1B  1D03               	skipz
  9924  0F1C  0008               	return
  9925  0F1D  0825               	movf	___flge@ff2+1,w
  9926  0F1E  0221               	subwf	___flge@ff1+1,w
  9927  0F1F  1D03               	skipz
  9928  0F20  0008               	return
  9929  0F21  0824               	movf	___flge@ff2,w
  9930  0F22  0220               	subwf	___flge@ff1,w
  9931  0F23  0008               	return
  9932  0F24                     __end_of___flge:	
  9933  0F24                     __ptext1259:	
  9934 ;; =============== function ___altofl ends ============
  9935                           
  9936                           
  9937 ;; *************** function ___lwtofl *****************
  9938 ;; Defined at:
  9939 ;;		line 29 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\lwtofl.c"
  9940 ;; Parameters:    Size  Location     Type
  9941 ;;  c               2   48[BANK0 ] unsigned int 
  9942 ;; Auto vars:     Size  Location     Type
  9943 ;;		None
  9944 ;; Return value:  Size  Location     Type
  9945 ;;                  4   48[BANK0 ] unsigned int 
  9946 ;; Registers used:
  9947 ;;		wreg, status,2, status,0, pclath, cstack
  9948 ;; Tracked objects:
  9949 ;;		On entry : 60/0
  9950 ;;		On exit  : 60/0
  9951 ;;		Unchanged: FFF9F/0
  9952 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9953 ;;      Params:         0       4       0       0       0
  9954 ;;      Locals:         0       0       0       0       0
  9955 ;;      Temps:          0       0       0       0       0
  9956 ;;      Totals:         0       4       0       0       0
  9957 ;;Total ram usage:        4 bytes
  9958 ;; Hardware stack levels used:    1
  9959 ;; Hardware stack levels required when called:    2
  9960 ;; This function calls:
  9961 ;;		___flpack
  9962 ;; This function is called by:
  9963 ;;		_calibrate
  9964 ;;		_measure_capacitance
  9965 ;;		_measure_inductance
  9966 ;; This function uses a non-reentrant model
  9967 ;;
  9968  0F24                     ___lwtofl:	
  9969                           
  9970                           ; Regs used in ___lwtofl: [wreg+status,2+status,0+pclath+cstack]
  9971  0F24  0850               	movf	___lwtofl@c,w
  9972  0F25  00A0               	movwf	?___flpack
  9973  0F26  0851               	movf	___lwtofl@c+1,w
  9974  0F27  00A1               	movwf	?___flpack+1
  9975  0F28  3096               	movlw	150
  9976  0F29  01A2               	clrf	?___flpack+2
  9977  0F2A  01A3               	clrf	?___flpack+3
  9978  0F2B  00A4               	movwf	?___flpack+4
  9979  0F2C  01A5               	clrf	?___flpack+5
  9980  0F2D  160A  118A  27B4   	fcall	___flpack
  9981  0F30  0823               	movf	?___flpack+3,w
  9982  0F31  00D3               	movwf	?___lwtofl+3
  9983  0F32  0822               	movf	?___flpack+2,w
  9984  0F33  00D2               	movwf	?___lwtofl+2
  9985  0F34  0821               	movf	?___flpack+1,w
  9986  0F35  00D1               	movwf	?___lwtofl+1
  9987  0F36  0820               	movf	?___flpack,w
  9988  0F37  00D0               	movwf	?___lwtofl
  9989  0F38  0008               	return
  9990  0F39                     __end_of___lwtofl:	
  9991  0F39                     __ptext1251:	
  9992 ;; =============== function _log ends ============
  9993                           
  9994                           
  9995 ;; *************** function _measure_freq *****************
  9996 ;; Defined at:
  9997 ;;		line 68 in file "../../../src/measure.c"
  9998 ;; Parameters:    Size  Location     Type
  9999 ;;		None
 10000 ;; Auto vars:     Size  Location     Type
 10001 ;;  count           2   57[BANK0 ] unsigned int 
 10002 ;; Return value:  Size  Location     Type
 10003 ;;                  2   53[BANK0 ] unsigned short 
 10004 ;; Registers used:
 10005 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 10006 ;; Tracked objects:
 10007 ;;		On entry : 0/20
 10008 ;;		On exit  : 60/0
 10009 ;;		Unchanged: 0/0
 10010 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10011 ;;      Params:         0       2       0       0       0
 10012 ;;      Locals:         0       2       0       0       0
 10013 ;;      Temps:          0       2       0       0       0
 10014 ;;      Totals:         0       6       0       0       0
 10015 ;;Total ram usage:        6 bytes
 10016 ;; Hardware stack levels used:    1
 10017 ;; Hardware stack levels required when called:    4
 10018 ;; This function calls:
 10019 ;;		_timer0_read_ps
 10020 ;;		_buffer_init
 10021 ;;		_buffer_puts
 10022 ;;		_format_number
 10023 ;;		_print_buffer
 10024 ;; This function is called by:
 10025 ;;		_calibrate
 10026 ;;		_measure_capacitance
 10027 ;;		_measure_inductance
 10028 ;; This function uses a non-reentrant model
 10029 ;;
 10030  0F39                     _measure_freq:	
 10031                           
 10032                           ;measure.c: 69: uint16_t count;
 10033                           ;measure.c: 71: INTCON &= ~0b100;
 10034                           
 10035                           ; Regs used in _measure_freq: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
 10036  0F39  110B               	bcf	11,2	;volatile
 10037                           
 10038                           ;measure.c: 75: TRISA &= ~0b00010000;
 10039  0F3A  1683               	bsf	3,5	;RP0=1, select bank1
 10040  0F3B  1303               	bcf	3,6	;RP1=0, select bank1
 10041  0F3C  1205               	bcf	5,4	;volatile
 10042                           
 10043                           ;measure.c: 77: _delay((unsigned long)((20)*(20000000/4000.0)));
 10044  0F3D  3082               	movlw	130
 10045  0F3E  1283               	bcf	3,5	;RP0=0, select bank0
 10046  0F3F  00D8               	movwf	??_measure_freq+1
 10047  0F40  30DD               	movlw	221
 10048  0F41  00D7               	movwf	??_measure_freq
 10049  0F42                     u3607:	
 10050  0F42  0BD7               	decfsz	??_measure_freq,f
 10051  0F43  2F42               	goto	u3607
 10052  0F44  0BD8               	decfsz	??_measure_freq+1,f
 10053  0F45  2F42               	goto	u3607
 10054  0F46  2F47               	nop2
 10055                           
 10056                           ;measure.c: 80: TMR0 = 0x00;
 10057  0F47  1283               	bcf	3,5	;RP0=0, select bank0
 10058  0F48  1303               	bcf	3,6	;RP1=0, select bank0
 10059  0F49  0181               	clrf	1	;volatile
 10060                           
 10061                           ;measure.c: 85: _delay((unsigned long)((10)*(20000000/4000.0)));
 10062  0F4A  3041               	movlw	65
 10063  0F4B  00D8               	movwf	??_measure_freq+1
 10064  0F4C  30EE               	movlw	238
 10065  0F4D  00D7               	movwf	??_measure_freq
 10066  0F4E                     u3617:	
 10067  0F4E  0BD7               	decfsz	??_measure_freq,f
 10068  0F4F  2F4E               	goto	u3617
 10069  0F50  0BD8               	decfsz	??_measure_freq+1,f
 10070  0F51  2F4E               	goto	u3617
 10071  0F52  0064               	clrwdt
 10072                           
 10073                           ;measure.c: 86: _delay((unsigned long)((10)*(20000000/4000.0)));
 10074  0F53  3041               	movlw	65
 10075  0F54  1283               	bcf	3,5	;RP0=0, select bank0
 10076  0F55  1303               	bcf	3,6	;RP1=0, select bank0
 10077  0F56  00D8               	movwf	??_measure_freq+1
 10078  0F57  30EE               	movlw	238
 10079  0F58  00D7               	movwf	??_measure_freq
 10080  0F59                     u3627:	
 10081  0F59  0BD7               	decfsz	??_measure_freq,f
 10082  0F5A  2F59               	goto	u3627
 10083  0F5B  0BD8               	decfsz	??_measure_freq+1,f
 10084  0F5C  2F59               	goto	u3627
 10085  0F5D  0064               	clrwdt
 10086                           
 10087                           ;measure.c: 87: _delay((unsigned long)((10)*(20000000/4000.0)));
 10088  0F5E  3041               	movlw	65
 10089  0F5F  1283               	bcf	3,5	;RP0=0, select bank0
 10090  0F60  1303               	bcf	3,6	;RP1=0, select bank0
 10091  0F61  00D8               	movwf	??_measure_freq+1
 10092  0F62  30EE               	movlw	238
 10093  0F63  00D7               	movwf	??_measure_freq
 10094  0F64                     u3637:	
 10095  0F64  0BD7               	decfsz	??_measure_freq,f
 10096  0F65  2F64               	goto	u3637
 10097  0F66  0BD8               	decfsz	??_measure_freq+1,f
 10098  0F67  2F64               	goto	u3637
 10099  0F68  0064               	clrwdt
 10100                           
 10101                           ;measure.c: 88: _delay((unsigned long)((10)*(20000000/4000.0)));
 10102  0F69  3041               	movlw	65
 10103  0F6A  1283               	bcf	3,5	;RP0=0, select bank0
 10104  0F6B  1303               	bcf	3,6	;RP1=0, select bank0
 10105  0F6C  00D8               	movwf	??_measure_freq+1
 10106  0F6D  30EE               	movlw	238
 10107  0F6E  00D7               	movwf	??_measure_freq
 10108  0F6F                     u3647:	
 10109  0F6F  0BD7               	decfsz	??_measure_freq,f
 10110  0F70  2F6F               	goto	u3647
 10111  0F71  0BD8               	decfsz	??_measure_freq+1,f
 10112  0F72  2F6F               	goto	u3647
 10113  0F73  0064               	clrwdt
 10114                           
 10115                           ;measure.c: 89: _delay((unsigned long)((10)*(20000000/4000.0)));
 10116  0F74  3041               	movlw	65
 10117  0F75  1283               	bcf	3,5	;RP0=0, select bank0
 10118  0F76  1303               	bcf	3,6	;RP1=0, select bank0
 10119  0F77  00D8               	movwf	??_measure_freq+1
 10120  0F78  30EE               	movlw	238
 10121  0F79  00D7               	movwf	??_measure_freq
 10122  0F7A                     u3657:	
 10123  0F7A  0BD7               	decfsz	??_measure_freq,f
 10124  0F7B  2F7A               	goto	u3657
 10125  0F7C  0BD8               	decfsz	??_measure_freq+1,f
 10126  0F7D  2F7A               	goto	u3657
 10127  0F7E  0064               	clrwdt
 10128                           
 10129                           ;measure.c: 90: _delay((unsigned long)((10)*(20000000/4000.0)));
 10130  0F7F  3041               	movlw	65
 10131  0F80  1283               	bcf	3,5	;RP0=0, select bank0
 10132  0F81  1303               	bcf	3,6	;RP1=0, select bank0
 10133  0F82  00D8               	movwf	??_measure_freq+1
 10134  0F83  30EE               	movlw	238
 10135  0F84  00D7               	movwf	??_measure_freq
 10136  0F85                     u3667:	
 10137  0F85  0BD7               	decfsz	??_measure_freq,f
 10138  0F86  2F85               	goto	u3667
 10139  0F87  0BD8               	decfsz	??_measure_freq+1,f
 10140  0F88  2F85               	goto	u3667
 10141  0F89  0064               	clrwdt
 10142                           
 10143                           ;measure.c: 91: _delay((unsigned long)((10)*(20000000/4000.0)));
 10144  0F8A  3041               	movlw	65
 10145  0F8B  1283               	bcf	3,5	;RP0=0, select bank0
 10146  0F8C  1303               	bcf	3,6	;RP1=0, select bank0
 10147  0F8D  00D8               	movwf	??_measure_freq+1
 10148  0F8E  30EE               	movlw	238
 10149  0F8F  00D7               	movwf	??_measure_freq
 10150  0F90                     u3677:	
 10151  0F90  0BD7               	decfsz	??_measure_freq,f
 10152  0F91  2F90               	goto	u3677
 10153  0F92  0BD8               	decfsz	??_measure_freq+1,f
 10154  0F93  2F90               	goto	u3677
 10155  0F94  0064               	clrwdt
 10156                           
 10157                           ;measure.c: 92: _delay((unsigned long)((10)*(20000000/4000.0)));
 10158  0F95  3041               	movlw	65
 10159  0F96  1283               	bcf	3,5	;RP0=0, select bank0
 10160  0F97  1303               	bcf	3,6	;RP1=0, select bank0
 10161  0F98  00D8               	movwf	??_measure_freq+1
 10162  0F99  30EE               	movlw	238
 10163  0F9A  00D7               	movwf	??_measure_freq
 10164  0F9B                     u3687:	
 10165  0F9B  0BD7               	decfsz	??_measure_freq,f
 10166  0F9C  2F9B               	goto	u3687
 10167  0F9D  0BD8               	decfsz	??_measure_freq+1,f
 10168  0F9E  2F9B               	goto	u3687
 10169  0F9F  0064               	clrwdt
 10170                           
 10171                           ;measure.c: 93: _delay((unsigned long)((10)*(20000000/4000.0)));
 10172  0FA0  3041               	movlw	65
 10173  0FA1  1283               	bcf	3,5	;RP0=0, select bank0
 10174  0FA2  1303               	bcf	3,6	;RP1=0, select bank0
 10175  0FA3  00D8               	movwf	??_measure_freq+1
 10176  0FA4  30EE               	movlw	238
 10177  0FA5  00D7               	movwf	??_measure_freq
 10178  0FA6                     u3697:	
 10179  0FA6  0BD7               	decfsz	??_measure_freq,f
 10180  0FA7  2FA6               	goto	u3697
 10181  0FA8  0BD8               	decfsz	??_measure_freq+1,f
 10182  0FA9  2FA6               	goto	u3697
 10183  0FAA  0064               	clrwdt
 10184                           
 10185                           ;measure.c: 94: _delay((unsigned long)((10)*(20000000/4000.0)));
 10186  0FAB  3041               	movlw	65
 10187  0FAC  1283               	bcf	3,5	;RP0=0, select bank0
 10188  0FAD  1303               	bcf	3,6	;RP1=0, select bank0
 10189  0FAE  00D8               	movwf	??_measure_freq+1
 10190  0FAF  30EE               	movlw	238
 10191  0FB0  00D7               	movwf	??_measure_freq
 10192  0FB1                     u3707:	
 10193  0FB1  0BD7               	decfsz	??_measure_freq,f
 10194  0FB2  2FB1               	goto	u3707
 10195  0FB3  0BD8               	decfsz	??_measure_freq+1,f
 10196  0FB4  2FB1               	goto	u3707
 10197  0FB5  0064               	clrwdt
 10198                           
 10199                           ;measure.c: 99: TRISA |= 0b00010000;
 10200  0FB6  1683               	bsf	3,5	;RP0=1, select bank1
 10201  0FB7  1303               	bcf	3,6	;RP1=0, select bank1
 10202  0FB8  1605               	bsf	5,4	;volatile
 10203                           
 10204                           ;measure.c: 102: count = timer0_read_ps();
 10205  0FB9  160A  158A  2753   	fcall	_timer0_read_ps
      +       120A  158A         
 10206  0FBE  0875               	movf	?_timer0_read_ps+1,w
 10207  0FBF  00DA               	movwf	measure_freq@count+1
 10208  0FC0  0874               	movf	?_timer0_read_ps,w
 10209  0FC1  00D9               	movwf	measure_freq@count
 10210                           
 10211                           ;measure.c: 107: buffer_init();
 10212  0FC2  27E0  120A  158A   	fcall	_buffer_init
 10213                           
 10214                           ;measure.c: 108: buffer_puts("Freq=");
 10215  0FC5  3087               	movlw	(STR_7-__stringbase)& (0+255)
 10216  0FC6  27E7               	fcall	_buffer_puts
 10217                           
 10218                           ;measure.c: 109: format_number(count, 10, 5);
 10219  0FC7  1283               	bcf	3,5	;RP0=0, select bank0
 10220  0FC8  1303               	bcf	3,6	;RP1=0, select bank0
 10221  0FC9  085A               	movf	measure_freq@count+1,w
 10222  0FCA  00A8               	movwf	?_format_number+1
 10223  0FCB  0859               	movf	measure_freq@count,w
 10224  0FCC  00A7               	movwf	?_format_number
 10225  0FCD  300A               	movlw	10
 10226  0FCE  00A9               	movwf	?_format_number+2
 10227  0FCF  3005               	movlw	5
 10228  0FD0  00AA               	movwf	?_format_number+3
 10229  0FD1  160A  118A  270A   	fcall	_format_number
      +       120A  158A         
 10230                           
 10231                           ;measure.c: 110: print_buffer();
 10232  0FD6  120A  118A  25D6   	fcall	_print_buffer
 10233                           
 10234                           ;measure.c: 112: return count;
 10235  0FD9  1283               	bcf	3,5	;RP0=0, select bank0
 10236  0FDA  1303               	bcf	3,6	;RP1=0, select bank0
 10237  0FDB  085A               	movf	measure_freq@count+1,w
 10238  0FDC  00D6               	movwf	?_measure_freq+1
 10239  0FDD  0859               	movf	measure_freq@count,w
 10240  0FDE  00D5               	movwf	?_measure_freq
 10241  0FDF  0008               	return
 10242  0FE0                     __end_of_measure_freq:	
 10243  0FE0                     __ptext1285:	
 10244 ;; =============== function _buffer_putch ends ============
 10245                           
 10246                           
 10247 ;; *************** function _buffer_init *****************
 10248 ;; Defined at:
 10249 ;;		line 10 in file "../../../lib/buffer.c"
 10250 ;; Parameters:    Size  Location     Type
 10251 ;;		None
 10252 ;; Auto vars:     Size  Location     Type
 10253 ;;		None
 10254 ;; Return value:  Size  Location     Type
 10255 ;;		None               void
 10256 ;; Registers used:
 10257 ;;		wreg, status,2, status,0
 10258 ;; Tracked objects:
 10259 ;;		On entry : 60/0
 10260 ;;		On exit  : 60/60
 10261 ;;		Unchanged: FFF9F/0
 10262 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10263 ;;      Params:         0       0       0       0       0
 10264 ;;      Locals:         0       0       0       0       0
 10265 ;;      Temps:          0       0       0       0       0
 10266 ;;      Totals:         0       0       0       0       0
 10267 ;;Total ram usage:        0 bytes
 10268 ;; Hardware stack levels used:    1
 10269 ;; Hardware stack levels required when called:    1
 10270 ;; This function calls:
 10271 ;;		Nothing
 10272 ;; This function is called by:
 10273 ;;		_measure_freq
 10274 ;; This function uses a non-reentrant model
 10275 ;;
 10276  0FE0                     _buffer_init:	
 10277                           
 10278                           ;buffer.c: 11: buffer.p = 0;
 10279                           
 10280                           ; Regs used in _buffer_init: [wreg+status,2+status,0]
 10281  0FE0  30F0               	movlw	-16
 10282  0FE1  1683               	bsf	3,5	;RP0=1, select bank3
 10283  0FE2  1703               	bsf	3,6	;RP1=1, select bank3
 10284  0FE3  05A0               	andwf	(_buffer^(0+384)+16),f
 10285                           
 10286                           ;buffer.c: 12: buffer.n = 0;
 10287  0FE4  300F               	movlw	-241
 10288  0FE5  05A0               	andwf	(_buffer^(0+384)+16),f
 10289  0FE6  0008               	return
 10290  0FE7                     __end_of_buffer_init:	
 10291  0FE7                     __ptext1268:	
 10292 ;; =============== function _ser_puts ends ============
 10293                           
 10294                           
 10295 ;; *************** function _buffer_puts *****************
 10296 ;; Defined at:
 10297 ;;		line 57 in file "../../../lib/buffer.c"
 10298 ;; Parameters:    Size  Location     Type
 10299 ;;  x               1    wreg     PTR const unsigned char 
 10300 ;;		 -> STR_7(6), 
 10301 ;; Auto vars:     Size  Location     Type
 10302 ;;  x               1    5[COMMON] PTR const unsigned char 
 10303 ;;		 -> STR_7(6), 
 10304 ;; Return value:  Size  Location     Type
 10305 ;;                  1    wreg      unsigned char 
 10306 ;; Registers used:
 10307 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 10308 ;; Tracked objects:
 10309 ;;		On entry : 60/60
 10310 ;;		On exit  : 0/0
 10311 ;;		Unchanged: FFE00/0
 10312 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10313 ;;      Params:         0       0       0       0       0
 10314 ;;      Locals:         1       0       0       0       0
 10315 ;;      Temps:          0       0       0       0       0
 10316 ;;      Totals:         1       0       0       0       0
 10317 ;;Total ram usage:        1 bytes
 10318 ;; Hardware stack levels used:    1
 10319 ;; Hardware stack levels required when called:    2
 10320 ;; This function calls:
 10321 ;;		_buffer_putch
 10322 ;; This function is called by:
 10323 ;;		_measure_freq
 10324 ;; This function uses a non-reentrant model
 10325 ;;
 10326  0FE7                     _buffer_puts:	
 10327                           
 10328                           ; Regs used in _buffer_puts: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
 10329                           ;buffer_puts@x stored from wreg
 10330  0FE7  00F5               	movwf	buffer_puts@x
 10331  0FE8                     l10947:	
 10332                           ;buffer.c: 58: while(*x) {
 10333                           
 10334  0FE8  0875               	movf	buffer_puts@x,w
 10335  0FE9  0084               	movwf	4
 10336  0FEA  120A  118A  2600   	fcall	stringdir
      +       120A  158A         
 10337  0FEF  3800               	iorlw	0
 10338  0FF0  1903               	btfsc	3,2
 10339  0FF1  0008               	return
 10340                           
 10341                           ;buffer.c: 59: buffer_putch(*x);
 10342  0FF2  0875               	movf	buffer_puts@x,w
 10343  0FF3  0084               	movwf	4
 10344  0FF4  120A  118A  2600   	fcall	stringdir
      +       120A  158A         
 10345  0FF9  160A  118A  25B5   	fcall	_buffer_putch
      +       120A  158A         
 10346                           
 10347                           ;buffer.c: 60: ++x;
 10348  0FFE  0AF5               	incf	buffer_puts@x,f
 10349  0FFF  2FE8               	goto	l10947
 10350  1000                     __end_of_buffer_puts:	
 10351                           
 10352                           	psect	text1256
 10353  05D6                     __ptext1256:	
 10354 ;; =============== function _format_xint32 ends ============
 10355                           
 10356                           
 10357 ;; *************** function _print_buffer *****************
 10358 ;; Defined at:
 10359 ;;		line 230 in file "../../../src/print.c"
 10360 ;; Parameters:    Size  Location     Type
 10361 ;;		None
 10362 ;; Auto vars:     Size  Location     Type
 10363 ;;  i               1   52[BANK0 ] unsigned char 
 10364 ;; Return value:  Size  Location     Type
 10365 ;;		None               void
 10366 ;; Registers used:
 10367 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 10368 ;; Tracked objects:
 10369 ;;		On entry : 60/0
 10370 ;;		On exit  : 0/0
 10371 ;;		Unchanged: FFE9F/0
 10372 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10373 ;;      Params:         0       0       0       0       0
 10374 ;;      Locals:         0       1       0       0       0
 10375 ;;      Temps:          0       0       0       0       0
 10376 ;;      Totals:         0       1       0       0       0
 10377 ;;Total ram usage:        1 bytes
 10378 ;; Hardware stack levels used:    1
 10379 ;; Hardware stack levels required when called:    3
 10380 ;; This function calls:
 10381 ;;		_ser_putch
 10382 ;;		_ser_puts
 10383 ;; This function is called by:
 10384 ;;		_measure_freq
 10385 ;; This function uses a non-reentrant model
 10386 ;;
 10387  05D6                     _print_buffer:	
 10388                           
 10389                           ;print.c: 231: uint8_t i;
 10390                           ;print.c: 232: for(i = 0; i < buffer.n; i++) {
 10391                           
 10392                           ; Regs used in _print_buffer: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 10393  05D6  01D4               	clrf	print_buffer@i
 10394  05D7                     l11271:	
 10395  05D7  1683               	bsf	3,5	;RP0=1, select bank3
 10396  05D8  1703               	bsf	3,6	;RP1=1, select bank3
 10397  05D9  0E20               	swapf	(_buffer^(0+384)+16),w
 10398  05DA  390F               	andlw	15
 10399  05DB  1283               	bcf	3,5	;RP0=0, select bank0
 10400  05DC  1303               	bcf	3,6	;RP1=0, select bank0
 10401  05DD  0254               	subwf	print_buffer@i,w
 10402  05DE  1803               	btfsc	3,0
 10403  05DF  2DED               	goto	l11273
 10404                           
 10405                           ;print.c: 233: ser_putch(buffer.x[i]);
 10406  05E0  0854               	movf	print_buffer@i,w
 10407  05E1  3E90               	addlw	_buffer& (0+255)
 10408  05E2  0084               	movwf	4
 10409  05E3  1783               	bsf	3,7	;select IRP bank3
 10410  05E4  0800               	movf	0,w
 10411  05E5  160A  118A  2437   	fcall	_ser_putch
      +       120A  118A         
 10412  05EA  1283               	bcf	3,5	;RP0=0, select bank0
 10413  05EB  0AD4               	incf	print_buffer@i,f
 10414  05EC  2DD7               	goto	l11271
 10415  05ED                     l11273:	
 10416                           
 10417                           ;print.c: 234: }
 10418                           ;print.c: 235: ser_puts("\r\n");
 10419  05ED  3097               	movlw	(STR_1-__stringbase)& (0+255)
 10420  05EE  160A  118A  2C20   	ljmp	_ser_puts
 10421  05F1                     __end_of_print_buffer:	
 10422                           
 10423                           	psect	text1266
 10424  1F53                     __ptext1266:	
 10425 ;; =============== function _format_number ends ============
 10426                           
 10427                           
 10428 ;; *************** function _timer0_read_ps *****************
 10429 ;; Defined at:
 10430 ;;		line 64 in file "../../../lib/timer.c"
 10431 ;; Parameters:    Size  Location     Type
 10432 ;;		None
 10433 ;; Auto vars:     Size  Location     Type
 10434 ;;  count           2    5[BANK0 ] unsigned int 
 10435 ;;  prev            1    4[BANK0 ] unsigned char 
 10436 ;; Return value:  Size  Location     Type
 10437 ;;                  2    4[COMMON] unsigned short 
 10438 ;; Registers used:
 10439 ;;		wreg, status,2, status,0, btemp+1
 10440 ;; Tracked objects:
 10441 ;;		On entry : 60/20
 10442 ;;		On exit  : 60/0
 10443 ;;		Unchanged: 0/0
 10444 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10445 ;;      Params:         2       0       0       0       0
 10446 ;;      Locals:         0       3       0       0       0
 10447 ;;      Temps:          0       4       0       0       0
 10448 ;;      Totals:         2       7       0       0       0
 10449 ;;Total ram usage:        9 bytes
 10450 ;; Hardware stack levels used:    1
 10451 ;; Hardware stack levels required when called:    1
 10452 ;; This function calls:
 10453 ;;		Nothing
 10454 ;; This function is called by:
 10455 ;;		_measure_freq
 10456 ;; This function uses a non-reentrant model
 10457 ;;
 10458  1F53                     _timer0_read_ps:	
 10459                           
 10460                           ;timer.c: 65: uint8_t prev = TMR0;
 10461                           
 10462                           ; Regs used in _timer0_read_ps: [wreg+status,2+status,0+btemp+1]
 10463  1F53  1283               	bcf	3,5	;RP0=0, select bank0
 10464  1F54  0801               	movf	1,w	;volatile
 10465  1F55  00A4               	movwf	timer0_read_ps@prev
 10466                           
 10467                           ;timer.c: 66: uint16_t count = 0;
 10468  1F56  01A5               	clrf	timer0_read_ps@count
 10469  1F57  01A6               	clrf	timer0_read_ps@count+1
 10470                           
 10471                           ;timer.c: 68: OPTION_REG |= 0x20;
 10472  1F58  1683               	bsf	3,5	;RP0=1, select bank1
 10473  1F59  1681               	bsf	1,5	;volatile
 10474  1F5A  2F62               	goto	l10963
 10475  1F5B                     l10979:	
 10476  1F5B  3001               	movlw	1
 10477  1F5C  0226               	subwf	timer0_read_ps@count+1,w
 10478  1F5D  3000               	movlw	0
 10479  1F5E  1903               	skipnz
 10480  1F5F  0225               	subwf	timer0_read_ps@count,w
 10481  1F60  1803               	btfsc	3,0
 10482  1F61  2F74               	goto	l10981
 10483  1F62                     l10963:	
 10484                           
 10485                           ;timer.c: 72: OPTION_REG |= 0x10;
 10486  1F62  1683               	bsf	3,5	;RP0=1, select bank1
 10487  1F63  1601               	bsf	1,4	;volatile
 10488                           
 10489                           ;timer.c: 74: _nop();
 10490  1F64  0000               	nop
 10491                           
 10492                           ;timer.c: 75: _nop();
 10493  1F65  0000               	nop
 10494                           
 10495                           ;timer.c: 77: OPTION_REG &= ~0x10;
 10496  1F66  1683               	bsf	3,5	;RP0=1, select bank1
 10497  1F67  1303               	bcf	3,6	;RP1=0, select bank1
 10498  1F68  1201               	bcf	1,4	;volatile
 10499                           
 10500                           ;timer.c: 79: _nop();
 10501  1F69  0000               	nop
 10502                           
 10503                           ;timer.c: 80: _nop();
 10504  1F6A  0000               	nop
 10505                           
 10506                           ;timer.c: 82: ++count;
 10507  1F6B  1283               	bcf	3,5	;RP0=0, select bank0
 10508  1F6C  1303               	bcf	3,6	;RP1=0, select bank0
 10509  1F6D  0AA5               	incf	timer0_read_ps@count,f
 10510  1F6E  1903               	skipnz
 10511  1F6F  0AA6               	incf	timer0_read_ps@count+1,f
 10512                           
 10513                           ;timer.c: 85: } while(prev == TMR0 && count <= 255);
 10514  1F70  0824               	movf	timer0_read_ps@prev,w
 10515  1F71  0601               	xorwf	1,w	;volatile
 10516  1F72  1903               	btfsc	3,2
 10517  1F73  2F5B               	goto	l10979
 10518  1F74                     l10981:	
 10519                           
 10520                           ;timer.c: 87: count = ((prev << 8) + (256 - count));
 10521  1F74  0824               	movf	timer0_read_ps@prev,w
 10522  1F75  00A0               	movwf	??_timer0_read_ps
 10523  1F76  01A1               	clrf	??_timer0_read_ps+1
 10524  1F77  00A1               	movwf	??_timer0_read_ps+1
 10525  1F78  01A0               	clrf	??_timer0_read_ps
 10526  1F79  0825               	movf	timer0_read_ps@count,w
 10527  1F7A  0220               	subwf	??_timer0_read_ps,w
 10528  1F7B  00A2               	movwf	??_timer0_read_ps+2
 10529  1F7C  0826               	movf	timer0_read_ps@count+1,w
 10530  1F7D  1C03               	skipc
 10531  1F7E  0A26               	incf	timer0_read_ps@count+1,w
 10532  1F7F  0221               	subwf	??_timer0_read_ps+1,w
 10533  1F80  00A3               	movwf	??_timer0_read_ps+3
 10534  1F81  0822               	movf	??_timer0_read_ps+2,w
 10535  1F82  3E00               	addlw	0
 10536  1F83  00A5               	movwf	timer0_read_ps@count
 10537  1F84  0823               	movf	??_timer0_read_ps+3,w
 10538  1F85  1803               	skipnc
 10539  1F86  3E01               	addlw	1
 10540  1F87  3E01               	addlw	1
 10541  1F88  00A6               	movwf	timer0_read_ps@count+1
 10542                           
 10543                           ;timer.c: 88: return count;
 10544  1F89  00F5               	movwf	?_timer0_read_ps+1
 10545  1F8A  0825               	movf	timer0_read_ps@count,w
 10546  1F8B  00F4               	movwf	?_timer0_read_ps
 10547  1F8C  0008               	return
 10548  1F8D                     __end_of_timer0_read_ps:	
 10549                           
 10550                           	psect	text1276
 10551  07FF                     __ptext1276:	
 10552 ;; =============== function _frexp ends ============
 10553                           
 10554                           
 10555 ;; *************** function _delay10ms *****************
 10556 ;; Defined at:
 10557 ;;		line 58 in file "../../../LC-meter.c"
 10558 ;; Parameters:    Size  Location     Type
 10559 ;;  period_10ms     1    wreg     unsigned char 
 10560 ;; Auto vars:     Size  Location     Type
 10561 ;;		None
 10562 ;; Return value:  Size  Location     Type
 10563 ;;		None               void
 10564 ;; Registers used:
 10565 ;;		wreg
 10566 ;; Tracked objects:
 10567 ;;		On entry : 0/0
 10568 ;;		On exit  : 0/0
 10569 ;;		Unchanged: FFFFFFFF/0
 10570 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10571 ;;      Params:         0       0       0       0       0
 10572 ;;      Locals:         0       0       0       0       0
 10573 ;;      Temps:          0       0       0       0       0
 10574 ;;      Totals:         0       0       0       0       0
 10575 ;;Total ram usage:        0 bytes
 10576 ;; Hardware stack levels used:    1
 10577 ;; Hardware stack levels required when called:    1
 10578 ;; This function calls:
 10579 ;;		Nothing
 10580 ;; This function is called by:
 10581 ;;		_main
 10582 ;;		_calibrate
 10583 ;; This function uses a non-reentrant model
 10584 ;;
 10585  07FF                     _delay10ms:	
 10586                           
 10587                           ; Regs used in _delay10ms: [wreg]
 10588  07FF  0008               	return
 10589  0800                     __end_of_delay10ms:	
 10590                           
 10591                           	psect	text1277
 10592  05F1                     __ptext1277:	
 10593 ;; =============== function _delay10ms ends ============
 10594                           
 10595                           
 10596 ;; *************** function _print_indicator *****************
 10597 ;; Defined at:
 10598 ;;		line 184 in file "../../../src/print.c"
 10599 ;; Parameters:    Size  Location     Type
 10600 ;;  indicate        1    wreg     unsigned char 
 10601 ;; Auto vars:     Size  Location     Type
 10602 ;;		None
 10603 ;; Return value:  Size  Location     Type
 10604 ;;		None               void
 10605 ;; Registers used:
 10606 ;;		wreg
 10607 ;; Tracked objects:
 10608 ;;		On entry : 0/40
 10609 ;;		On exit  : 0/40
 10610 ;;		Unchanged: FFFFFFFF/0
 10611 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10612 ;;      Params:         0       0       0       0       0
 10613 ;;      Locals:         0       0       0       0       0
 10614 ;;      Temps:          0       0       0       0       0
 10615 ;;      Totals:         0       0       0       0       0
 10616 ;;Total ram usage:        0 bytes
 10617 ;; Hardware stack levels used:    1
 10618 ;; Hardware stack levels required when called:    1
 10619 ;; This function calls:
 10620 ;;		Nothing
 10621 ;; This function is called by:
 10622 ;;		_main
 10623 ;; This function uses a non-reentrant model
 10624 ;;
 10625  05F1                     _print_indicator:	
 10626                           
 10627                           ; Regs used in _print_indicator: [wreg]
 10628  05F1  0008               	return
 10629  05F2                     __end_of_print_indicator:	
 10630                           
 10631                           	psect	text1278
 10632  05F2                     __ptext1278:	
 10633 ;; =============== function _print_indicator ends ============
 10634                           
 10635                           
 10636 ;; *************** function _print_reading *****************
 10637 ;; Defined at:
 10638 ;;		line 144 in file "../../../src/print.c"
 10639 ;; Parameters:    Size  Location     Type
 10640 ;;  measurement     2    4[COMMON] unsigned int 
 10641 ;; Auto vars:     Size  Location     Type
 10642 ;;		None
 10643 ;; Return value:  Size  Location     Type
 10644 ;;		None               void
 10645 ;; Registers used:
 10646 ;;		None
 10647 ;; Tracked objects:
 10648 ;;		On entry : 0/140
 10649 ;;		On exit  : 0/140
 10650 ;;		Unchanged: FFFFFFFF/0
 10651 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10652 ;;      Params:         2       0       0       0       0
 10653 ;;      Locals:         0       0       0       0       0
 10654 ;;      Temps:          0       0       0       0       0
 10655 ;;      Totals:         2       0       0       0       0
 10656 ;;Total ram usage:        2 bytes
 10657 ;; Hardware stack levels used:    1
 10658 ;; Hardware stack levels required when called:    1
 10659 ;; This function calls:
 10660 ;;		Nothing
 10661 ;; This function is called by:
 10662 ;;		_measure_capacitance
 10663 ;;		_measure_inductance
 10664 ;; This function uses a non-reentrant model
 10665 ;;
 10666  05F2                     _print_reading:	
 10667                           
 10668                           ; Regs used in _print_reading: []
 10669  05F2  0008               	return
 10670  05F3                     __end_of_print_reading:	
 10671                           
 10672                           	psect	text1280
 10673  1F12                     __ptext1280:	
 10674 ;; =============== function _print_unit ends ============
 10675                           
 10676                           
 10677 ;; *************** function _timer2_init *****************
 10678 ;; Defined at:
 10679 ;;		line 130 in file "../../../lib/timer.c"
 10680 ;; Parameters:    Size  Location     Type
 10681 ;;  ps_mode         1    wreg     unsigned char 
 10682 ;; Auto vars:     Size  Location     Type
 10683 ;;  ps_mode         1    2[BANK0 ] unsigned char 
 10684 ;;  ps              1    1[BANK0 ] unsigned char 
 10685 ;;  postscaler      1    0        unsigned char 
 10686 ;; Return value:  Size  Location     Type
 10687 ;;		None               void
 10688 ;; Registers used:
 10689 ;;		wreg, status,2, status,0
 10690 ;; Tracked objects:
 10691 ;;		On entry : 17F/0
 10692 ;;		On exit  : 17F/20
 10693 ;;		Unchanged: FFE80/0
 10694 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10695 ;;      Params:         0       0       0       0       0
 10696 ;;      Locals:         0       3       0       0       0
 10697 ;;      Temps:          1       0       0       0       0
 10698 ;;      Totals:         1       3       0       0       0
 10699 ;;Total ram usage:        4 bytes
 10700 ;; Hardware stack levels used:    1
 10701 ;; Hardware stack levels required when called:    1
 10702 ;; This function calls:
 10703 ;;		Nothing
 10704 ;; This function is called by:
 10705 ;;		_main
 10706 ;; This function uses a non-reentrant model
 10707 ;;
 10708  1F12                     _timer2_init:	
 10709                           
 10710                           ; Regs used in _timer2_init: [wreg+status,2+status,0]
 10711                           ;timer2_init@ps_mode stored from wreg
 10712  1F12  00A2               	movwf	timer2_init@ps_mode
 10713                           
 10714                           ;timer.c: 131: uint8_t ps = ps_mode & 0b1111;
 10715  1F13  00A1               	movwf	timer2_init@ps
 10716  1F14  300F               	movlw	15
 10717  1F15  05A1               	andwf	timer2_init@ps,f
 10718                           
 10719                           ;timer.c: 135: T2CON &= ~0b01111111;
 10720  1F16  3080               	movlw	128
 10721  1F17  0592               	andwf	18,f	;volatile
 10722                           
 10723                           ;timer.c: 137: T2CON |= (postscaler & 0b1111) << 3;
 10724  1F18  0812               	movf	18,w	;volatile
 10725                           
 10726                           ;timer.c: 138: T2CON |= (ps & 0b11);
 10727  1F19  0821               	movf	timer2_init@ps,w
 10728  1F1A  3903               	andlw	3
 10729  1F1B  0492               	iorwf	18,f	;volatile
 10730                           
 10731                           ;timer.c: 140: TMR2 = 0;
 10732  1F1C  0191               	clrf	17	;volatile
 10733                           
 10734                           ;timer.c: 142: T2CON |= 0b100;
 10735  1F1D  1512               	bsf	18,2	;volatile
 10736                           
 10737                           ;timer.c: 145: PIR1 &= ~0b10;
 10738  1F1E  108C               	bcf	12,1	;volatile
 10739                           
 10740                           ;timer.c: 146: PIE1 = (!!(ps_mode & 0x80)) << 1;
 10741  1F1F  3000               	movlw	0
 10742  1F20  1BA2               	btfsc	timer2_init@ps_mode,7
 10743  1F21  3001               	movlw	1
 10744  1F22  00F4               	movwf	??_timer2_init
 10745  1F23  0774               	addwf	??_timer2_init,w
 10746  1F24  1683               	bsf	3,5	;RP0=1, select bank1
 10747  1F25  008C               	movwf	12	;volatile
 10748  1F26  0008               	return
 10749  1F27                     __end_of_timer2_init:	
 10750                           
 10751                           	psect	text1281
 10752  07B7                     __ptext1281:	
 10753 ;; =============== function _timer2_init ends ============
 10754                           
 10755                           
 10756 ;; *************** function _timer0_init *****************
 10757 ;; Defined at:
 10758 ;;		line 27 in file "../../../lib/timer.c"
 10759 ;; Parameters:    Size  Location     Type
 10760 ;;  ps_mode         1    wreg     unsigned char 
 10761 ;; Auto vars:     Size  Location     Type
 10762 ;;  ps_mode         1    9[BANK0 ] unsigned char 
 10763 ;;  prescaler       1    8[BANK0 ] unsigned char 
 10764 ;; Return value:  Size  Location     Type
 10765 ;;		None               void
 10766 ;; Registers used:
 10767 ;;		wreg, status,2, status,0
 10768 ;; Tracked objects:
 10769 ;;		On entry : 17F/20
 10770 ;;		On exit  : 17F/0
 10771 ;;		Unchanged: FFE80/0
 10772 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10773 ;;      Params:         0       0       0       0       0
 10774 ;;      Locals:         0      10       0       0       0
 10775 ;;      Temps:          0       0       0       0       0
 10776 ;;      Totals:         0      10       0       0       0
 10777 ;;Total ram usage:       10 bytes
 10778 ;; Hardware stack levels used:    1
 10779 ;; Hardware stack levels required when called:    1
 10780 ;; This function calls:
 10781 ;;		Nothing
 10782 ;; This function is called by:
 10783 ;;		_main
 10784 ;; This function uses a non-reentrant model
 10785 ;;
 10786  07B7                     _timer0_init:	
 10787                           
 10788                           ; Regs used in _timer0_init: [wreg+status,2+status,0]
 10789                           ;timer0_init@ps_mode stored from wreg
 10790  07B7  1283               	bcf	3,5	;RP0=0, select bank0
 10791  07B8  00A9               	movwf	timer0_init@ps_mode
 10792                           
 10793                           ;timer.c: 28: uint8_t prescaler = ps_mode & 0b1111;
 10794  07B9  00A8               	movwf	timer0_init@prescaler
 10795  07BA  300F               	movlw	15
 10796  07BB  05A8               	andwf	timer0_init@prescaler,f
 10797                           
 10798                           ;timer.c: 30: TMR0 = 0;
 10799  07BC  0181               	clrf	1	;volatile
 10800                           
 10801                           ;timer.c: 33: OPTION_REG |= (!!(ps_mode & 0x20)) ? 0x20 : 0x00;
 10802  07BD  1AA9               	btfsc	timer0_init@ps_mode,5
 10803  07BE  2FC1               	goto	l9557
 10804  07BF  01A0               	clrf	_timer0_init$3401
 10805  07C0  2FC3               	goto	L15
 10806  07C1                     l9557:	
 10807  07C1  3020               	movlw	32
 10808  07C2  00A0               	movwf	_timer0_init$3401
 10809  07C3                     L15:	
 10810  07C3  01A1               	clrf	_timer0_init$3401+1
 10811  07C4  0820               	movf	_timer0_init$3401,w
 10812  07C5  1683               	bsf	3,5	;RP0=1, select bank1
 10813  07C6  0481               	iorwf	1,f	;volatile
 10814                           
 10815                           ;timer.c: 36: OPTION_REG |= (!!(ps_mode & 0x10)) ? 0x10 : 0x00;
 10816  07C7  1283               	bcf	3,5	;RP0=0, select bank0
 10817  07C8  1A29               	btfsc	timer0_init@ps_mode,4
 10818  07C9  2FCC               	goto	l9565
 10819  07CA  01A2               	clrf	_timer0_init$3402
 10820  07CB  2FCE               	goto	L16
 10821  07CC                     l9565:	
 10822  07CC  3010               	movlw	16
 10823  07CD  00A2               	movwf	_timer0_init$3402
 10824  07CE                     L16:	
 10825  07CE  01A3               	clrf	_timer0_init$3402+1
 10826  07CF  0822               	movf	_timer0_init$3402,w
 10827  07D0  1683               	bsf	3,5	;RP0=1, select bank1
 10828  07D1  0481               	iorwf	1,f	;volatile
 10829                           
 10830                           ;timer.c: 44: OPTION_REG &= (!!prescaler) ? ~0x08 : ~0x00;
 10831  07D2  1283               	bcf	3,5	;RP0=0, select bank0
 10832  07D3  08A8               	movf	timer0_init@prescaler,f
 10833  07D4  1D03               	skipz
 10834  07D5  2FD9               	goto	l9571
 10835  07D6  30FF               	movlw	255
 10836  07D7  00A4               	movwf	_timer0_init$3403
 10837  07D8  2FDC               	goto	L17
 10838  07D9                     l9571:	
 10839  07D9  30F7               	movlw	247
 10840  07DA  00A4               	movwf	_timer0_init$3403
 10841  07DB  30FF               	movlw	255
 10842  07DC                     L17:	
 10843  07DC  00A5               	movwf	_timer0_init$3403+1
 10844  07DD  0824               	movf	_timer0_init$3403,w
 10845  07DE  1683               	bsf	3,5	;RP0=1, select bank1
 10846  07DF  0581               	andwf	1,f	;volatile
 10847                           
 10848                           ;timer.c: 46: OPTION_REG &= ~0b111;
 10849  07E0  30F8               	movlw	248
 10850  07E1  0581               	andwf	1,f	;volatile
 10851                           
 10852                           ;timer.c: 48: if(prescaler > 0) {
 10853  07E2  1283               	bcf	3,5	;RP0=0, select bank0
 10854  07E3  0828               	movf	timer0_init@prescaler,w
 10855  07E4  1903               	btfsc	3,2
 10856  07E5  2FEB               	goto	l9579
 10857                           
 10858                           ;timer.c: 49: OPTION_REG |= (prescaler - 1) & 0b111;
 10859  07E6  0828               	movf	timer0_init@prescaler,w
 10860  07E7  3EFF               	addlw	255
 10861  07E8  3907               	andlw	7
 10862  07E9  1683               	bsf	3,5	;RP0=1, select bank1
 10863  07EA  0481               	iorwf	1,f	;volatile
 10864  07EB                     l9579:	
 10865                           
 10866                           ;timer.c: 55: }
 10867                           ;timer.c: 59: INTCON &= ~0x40;
 10868  07EB  130B               	bcf	11,6	;volatile
 10869                           
 10870                           ;timer.c: 60: INTCON |= (!!(ps_mode & 0x80)) ? 0x20 : 0x00;
 10871  07EC  1283               	bcf	3,5	;RP0=0, select bank0
 10872  07ED  1BA9               	btfsc	timer0_init@ps_mode,7
 10873  07EE  2FF1               	goto	l9585
 10874  07EF  01A6               	clrf	_timer0_init$3404
 10875  07F0  2FF3               	goto	L18
 10876  07F1                     l9585:	
 10877  07F1  3020               	movlw	32
 10878  07F2  00A6               	movwf	_timer0_init$3404
 10879  07F3                     L18:	
 10880  07F3  01A7               	clrf	_timer0_init$3404+1
 10881  07F4  0826               	movf	_timer0_init$3404,w
 10882  07F5  048B               	iorwf	11,f	;volatile
 10883  07F6  0008               	return
 10884  07F7                     __end_of_timer0_init:	
 10885                           
 10886                           	psect	text1282
 10887  1F3C                     __ptext1282:	
 10888 ;; =============== function _timer0_init ends ============
 10889                           
 10890                           
 10891 ;; *************** function _ser_init *****************
 10892 ;; Defined at:
 10893 ;;		line 98 in file "../../../lib/ser.c"
 10894 ;; Parameters:    Size  Location     Type
 10895 ;;		None
 10896 ;; Auto vars:     Size  Location     Type
 10897 ;;		None
 10898 ;; Return value:  Size  Location     Type
 10899 ;;		None               void
 10900 ;; Registers used:
 10901 ;;		wreg, status,2
 10902 ;; Tracked objects:
 10903 ;;		On entry : 17F/0
 10904 ;;		On exit  : 17F/20
 10905 ;;		Unchanged: FFE80/0
 10906 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10907 ;;      Params:         0       0       0       0       0
 10908 ;;      Locals:         0       0       0       0       0
 10909 ;;      Temps:          0       0       0       0       0
 10910 ;;      Totals:         0       0       0       0       0
 10911 ;;Total ram usage:        0 bytes
 10912 ;; Hardware stack levels used:    1
 10913 ;; Hardware stack levels required when called:    1
 10914 ;; This function calls:
 10915 ;;		Nothing
 10916 ;; This function is called by:
 10917 ;;		_main
 10918 ;; This function uses a non-reentrant model
 10919 ;;
 10920  1F3C                     _ser_init:	
 10921                           
 10922                           ;ser.c: 99: TRISC &= ~0x40;
 10923                           
 10924                           ; Regs used in _ser_init: [wreg+status,2]
 10925  1F3C  1683               	bsf	3,5	;RP0=1, select bank1
 10926  1F3D  1307               	bcf	7,6	;volatile
 10927                           
 10928                           ;ser.c: 101: TRISC |= 0x80;
 10929  1F3E  1787               	bsf	7,7	;volatile
 10930  1F3F  301F               	movlw	31
 10931                           
 10932                           ;ser.c: 103: BRGH = 1;
 10933  1F40  1518               	bsf	24,2
 10934                           
 10935                           ;ser.c: 109: SPBRG = ser_brg;
 10936  1F41  0099               	movwf	25	;volatile
 10937                           
 10938                           ;ser.c: 112: TX9 = 0;
 10939  1F42  1318               	bcf	24,6
 10940                           
 10941                           ;ser.c: 113: RX9 = 0;
 10942  1F43  1283               	bcf	3,5	;RP0=0, select bank0
 10943  1F44  1318               	bcf	24,6
 10944                           
 10945                           ;ser.c: 115: SYNC = 0;
 10946  1F45  1683               	bsf	3,5	;RP0=1, select bank1
 10947  1F46  1218               	bcf	24,4
 10948                           
 10949                           ;ser.c: 116: SPEN = 1;
 10950  1F47  1283               	bcf	3,5	;RP0=0, select bank0
 10951  1F48  1798               	bsf	24,7
 10952                           
 10953                           ;ser.c: 117: CREN = 1;
 10954  1F49  1618               	bsf	24,4
 10955                           
 10956                           ;ser.c: 118: TXIE = 0;
 10957  1F4A  1683               	bsf	3,5	;RP0=1, select bank1
 10958  1F4B  120C               	bcf	12,4
 10959                           
 10960                           ;ser.c: 120: TXEN = 1;
 10961  1F4C  1698               	bsf	24,5
 10962                           
 10963                           ;ser.c: 121: PEIE = 1;
 10964  1F4D  170B               	bsf	11,6
 10965                           
 10966                           ;ser.c: 123: rxiptr = rxoptr = txiptr = txoptr = 0;
 10967  1F4E  01F9               	clrf	_txoptr	;volatile
 10968  1F4F  01F8               	clrf	_txiptr	;volatile
 10969  1F50  01F7               	clrf	_rxoptr	;volatile
 10970  1F51  01F6               	clrf	_rxiptr	;volatile
 10971  1F52  0008               	return
 10972  1F53                     __end_of_ser_init:	
 10973                           
 10974                           	psect	text1286
 10975  1F8D                     __ptext1286:	
 10976 ;; =============== function _buffer_init ends ============
 10977                           
 10978                           
 10979 ;; *************** function _isr *****************
 10980 ;; Defined at:
 10981 ;;		line 83 in file "../../../LC-meter.c"
 10982 ;; Parameters:    Size  Location     Type
 10983 ;;		None
 10984 ;; Auto vars:     Size  Location     Type
 10985 ;;		None
 10986 ;; Return value:  Size  Location     Type
 10987 ;;                  2  5135[COMMON] int 
 10988 ;; Registers used:
 10989 ;;		wreg, fsr0l, fsr0h, status,2, status,0
 10990 ;; Tracked objects:
 10991 ;;		On entry : 0/0
 10992 ;;		On exit  : 40/0
 10993 ;;		Unchanged: FFE9F/0
 10994 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10995 ;;      Params:         0       0       0       0       0
 10996 ;;      Locals:         0       0       0       0       0
 10997 ;;      Temps:          4       0       0       0       0
 10998 ;;      Totals:         4       0       0       0       0
 10999 ;;Total ram usage:        4 bytes
 11000 ;; Hardware stack levels used:    1
 11001 ;; This function calls:
 11002 ;;		Nothing
 11003 ;; This function is called by:
 11004 ;;		Interrupt level 1
 11005 ;; This function uses a non-reentrant model
 11006 ;;
 11007  1F8D                     _isr:	
 11008                           
 11009                           ;LC-meter.c: 85: if(PIR1 & 0x02) {
 11010  1F8D  1283               	bcf	3,5	;RP0=0, select bank0
 11011  1F8E  1303               	bcf	3,6	;RP1=0, select bank0
 11012  1F8F  1C8C               	btfss	12,1
 11013  1F90  2FCF               	goto	i1l9627
 11014                           
 11015                           ;LC-meter.c: 86: bres += 256;
 11016  1F91  3001               	movlw	1
 11017  1F92  1683               	bsf	3,5	;RP0=1, select bank1
 11018  1F93  07E1               	addwf	(_bres+1)^(0+128),f	;volatile
 11019                           
 11020                           ;LC-meter.c: 87: if(bres >= ((unsigned long)((double)((20000000) / 4) / 1000))) {
 11021  1F94  3013               	movlw	19
 11022  1F95  0261               	subwf	(_bres+1)^(0+128),w	;volatile
 11023  1F96  3088               	movlw	136
 11024  1F97  1903               	skipnz
 11025  1F98  0260               	subwf	_bres^(0+128),w	;volatile
 11026  1F99  1C03               	skipc
 11027  1F9A  2FCD               	goto	i1l9625
 11028                           
 11029                           ;LC-meter.c: 88: bres -= ((unsigned long)((double)((20000000) / 4) / 1000));
 11030  1F9B  3088               	movlw	136
 11031  1F9C  02E0               	subwf	_bres^(0+128),f	;volatile
 11032  1F9D  3013               	movlw	19
 11033  1F9E  1C03               	skipc
 11034  1F9F  03E1               	decf	(_bres+1)^(0+128),f	;volatile
 11035  1FA0  02E1               	subwf	(_bres+1)^(0+128),f	;volatile
 11036                           
 11037                           ;LC-meter.c: 89: msecpart++;
 11038  1FA1  0AE2               	incf	_msecpart^(0+128),f	;volatile
 11039  1FA2  1903               	skipnz
 11040  1FA3  0AE3               	incf	(_msecpart+1)^(0+128),f	;volatile
 11041                           
 11042                           ;LC-meter.c: 90: PORTC &= ~0b00000100; PORTC |= (!!(msecpart >= 833)) << 2;;
 11043  1FA4  1283               	bcf	3,5	;RP0=0, select bank0
 11044  1FA5  1107               	bcf	7,2	;volatile
 11045  1FA6  3003               	movlw	3
 11046  1FA7  1683               	bsf	3,5	;RP0=1, select bank1
 11047  1FA8  0263               	subwf	(_msecpart+1)^(0+128),w	;volatile
 11048  1FA9  3041               	movlw	65
 11049  1FAA  1903               	skipnz
 11050  1FAB  0262               	subwf	_msecpart^(0+128),w	;volatile
 11051  1FAC  3000               	movlw	0
 11052  1FAD  1803               	skipnc
 11053  1FAE  3001               	movlw	1
 11054  1FAF  00F0               	movwf	??_isr
 11055  1FB0  1003               	clrc
 11056  1FB1  0DF0               	rlf	??_isr,f
 11057  1FB2  1003               	clrc
 11058  1FB3  0D70               	rlf	??_isr,w
 11059  1FB4  1283               	bcf	3,5	;RP0=0, select bank0
 11060  1FB5  0487               	iorwf	7,f	;volatile
 11061                           
 11062                           ;LC-meter.c: 92: if(msecpart >= 1000) {
 11063  1FB6  3003               	movlw	3
 11064  1FB7  1683               	bsf	3,5	;RP0=1, select bank1
 11065  1FB8  0263               	subwf	(_msecpart+1)^(0+128),w	;volatile
 11066  1FB9  30E8               	movlw	232
 11067  1FBA  1903               	skipnz
 11068  1FBB  0262               	subwf	_msecpart^(0+128),w	;volatile
 11069  1FBC  1C03               	skipc
 11070  1FBD  2FCD               	goto	i1l9625
 11071                           
 11072                           ;LC-meter.c: 94: seconds++;
 11073  1FBE  1703               	bsf	3,6	;RP1=1, select bank3
 11074  1FBF  0ACD               	incf	_seconds^(0+384),f	;volatile
 11075  1FC0  1903               	skipnz
 11076  1FC1  0ACE               	incf	(_seconds+1)^(0+384),f	;volatile
 11077  1FC2  1903               	skipnz
 11078  1FC3  0ACF               	incf	(_seconds+2)^(0+384),f	;volatile
 11079  1FC4  1903               	skipnz
 11080  1FC5  0AD0               	incf	(_seconds+3)^(0+384),f	;volatile
 11081                           
 11082                           ;LC-meter.c: 95: msecpart -= 1000;
 11083  1FC6  30E8               	movlw	232
 11084  1FC7  1303               	bcf	3,6	;RP1=0, select bank1
 11085  1FC8  02E2               	subwf	_msecpart^(0+128),f	;volatile
 11086  1FC9  3003               	movlw	3
 11087  1FCA  1C03               	skipc
 11088  1FCB  03E3               	decf	(_msecpart+1)^(0+128),f	;volatile
 11089  1FCC  02E3               	subwf	(_msecpart+1)^(0+128),f	;volatile
 11090  1FCD                     i1l9625:	
 11091                           
 11092                           ;LC-meter.c: 96: }
 11093                           ;LC-meter.c: 97: }
 11094                           ;LC-meter.c: 99: PIR1 &= ~0b10;
 11095  1FCD  1283               	bcf	3,5	;RP0=0, select bank0
 11096  1FCE  108C               	bcf	12,1	;volatile
 11097  1FCF                     i1l9627:	
 11098                           
 11099                           ;LC-meter.c: 100: }
 11100                           ;LC-meter.c: 102: if(RCIF) { rxfifo[rxiptr] = RCREG; ser_tmp = (rxiptr + 1) & ((uint8_t)
      +                          16 - 1); if(ser_tmp != rxoptr) rxiptr = ser_tmp; }; if(TXIF && TXIE) { TXREG = txfifo[tx
      +                          optr]; ++txoptr; txoptr &= ((uint8_t)16 - 1); if(txoptr == txiptr) { TXIE = 0; }; TXIF =
      +                           0; 
 11101  1FCF  1E8C               	btfss	12,5
 11102  1FD0  2FE1               	goto	i1l9639
 11103  1FD1  0876               	movf	_rxiptr,w
 11104  1FD2  3EA1               	addlw	_rxfifo& (0+255)
 11105  1FD3  0084               	movwf	4
 11106  1FD4  081A               	movf	26,w	;volatile
 11107  1FD5  1783               	bsf	3,7	;select IRP bank3
 11108  1FD6  0080               	movwf	0
 11109  1FD7  0A76               	incf	_rxiptr,w	;volatile
 11110  1FD8  00EF               	movwf	_ser_tmp
 11111  1FD9  300F               	movlw	15
 11112  1FDA  05EF               	andwf	_ser_tmp,f
 11113  1FDB  086F               	movf	_ser_tmp,w
 11114  1FDC  0677               	xorwf	_rxoptr,w	;volatile
 11115  1FDD  1903               	skipnz
 11116  1FDE  2FE1               	goto	i1l9639
 11117  1FDF  086F               	movf	_ser_tmp,w
 11118  1FE0  00F6               	movwf	_rxiptr	;volatile
 11119  1FE1                     i1l9639:	
 11120  1FE1  1E0C               	btfss	12,4
 11121  1FE2  2FF7               	goto	i1l5143
 11122  1FE3  1683               	bsf	3,5	;RP0=1, select bank1
 11123  1FE4  1E0C               	btfss	12,4
 11124  1FE5  2FF7               	goto	i1l5143
 11125  1FE6  0879               	movf	_txoptr,w
 11126  1FE7  3EB1               	addlw	_txfifo& (0+255)
 11127  1FE8  0084               	movwf	4
 11128  1FE9  1783               	bsf	3,7	;select IRP bank3
 11129  1FEA  0800               	movf	0,w
 11130  1FEB  1283               	bcf	3,5	;RP0=0, select bank0
 11131  1FEC  0099               	movwf	25	;volatile
 11132  1FED  0AF9               	incf	_txoptr,f	;volatile
 11133  1FEE  300F               	movlw	15
 11134  1FEF  05F9               	andwf	_txoptr,f	;volatile
 11135  1FF0  0879               	movf	_txoptr,w	;volatile
 11136  1FF1  0678               	xorwf	_txiptr,w	;volatile
 11137  1FF2  1683               	bsf	3,5	;RP0=1, select bank1
 11138  1FF3  1903               	btfsc	3,2
 11139  1FF4  120C               	bcf	12,4
 11140  1FF5  1283               	bcf	3,5	;RP0=0, select bank0
 11141  1FF6  120C               	bcf	12,4
 11142  1FF7                     i1l5143:	
 11143  1FF7  0873               	movf	??_isr+3,w
 11144  1FF8  008A               	movwf	10
 11145  1FF9  0872               	movf	??_isr+2,w
 11146  1FFA  0084               	movwf	4
 11147  1FFB  0E71               	swapf	(??_isr+1)^(0+-128),w
 11148  1FFC  0083               	movwf	3
 11149  1FFD  0EFE               	swapf	126,f
 11150  1FFE  0E7E               	swapf	126,w
 11151  1FFF  0009               	retfie
 11152  2000                     __end_of_isr:	
 11153                           
 11154                           	psect	intentry
 11155  0004                     __pintentry:	
 11156                           ; Regs used in _isr: [wreg-fsr0h+status,2+status,0]
 11157                           
 11158  0004                     interrupt_function:	
 11159  007E                     saved_w	set	btemp
 11160  0004  00FE               	movwf	btemp
 11161  0005  0E03               	swapf	3,w
 11162  0006  00F1               	movwf	??_isr+1
 11163  0007  0804               	movf	4,w
 11164  0008  00F2               	movwf	??_isr+2
 11165  0009  080A               	movf	10,w
 11166  000A  00F3               	movwf	??_isr+3
 11167  000B  160A  158A  2F8D   	ljmp	_isr
 11168                           
 11169                           	psect	text1287
 11170  0000                     __ptext1287:	
 11171 ;; =============== function _isr ends ============
 11172                           
 11173  007E                     btemp	set	126	;btemp
 11174  007E                     wtemp0	set	126


HI-TECH Software PICC Macro Assembler V9.83 build 10920 
Symbol Table                                                                                   Wed Nov 27 17:32:46 2019

                ___altofl@sign 003A                   ___fldiv@cntr 0046                              pc 0002  
                 ___fldiv@sign 0048                             _F1 01D5                             _F2 01C1  
                           _F3 01C5                             fsr 0004                   ___flpack@arg 0020  
                 ___flpack@exp 0024                            l615 0000                            l635 0000  
                          _GIE 005F                            _RX9 00C6                            _TX9 04C6  
                          _exp 0011                            _log 04BC                            _isr 1F8D  
                          _pow 0365                            fsr0 0004                            indf 0000  
           timer0_read_ps@prev 0024                   ___flmul@cntr 005A                   ___flmul@sign 005B  
                ___flpack@sign 0025                   ___fltol@exp1 0035                           l2554 0000  
                         l1915 0000                           l2547 0000                           l2557 0000  
                         l5133 0000                           l5147 07A8                           l4452 0000  
                         l1893 0000                           l3813 0000                           l1887 0000  
                         l4466 0000                           l3792 17FF                           l3795 0000  
                         l6451 027B                           l6603 0000                           l5812 0000  
                         ?_exp 00BE                           l6533 0000                           ?_log 00BA  
                         l3798 0000                           l6470 0000                           l6543 0000  
                         l5815 0000                           l6480 0000                           l5825 0000  
                         l5835 0000                           ?_isr 0070                           l6653 0000  
                         l6664 16A0                           l6737 0000                           l6682 0F12  
                         l6587 0933                           l6678 0000                           l6774 0000  
                         l6881 17BD                           l6769 0000                           l6849 0000  
                         l9531 0000                           l6876 0000                           l9541 0000  
                         l9533 0000                           l9525 0000                           l9543 0000  
                         l9535 0000                           l9527 0000                           l9551 0000  
                         l9545 0000                           l9537 0000                           l9529 0000  
                         l9561 0000                           l9553 0000                           l9539 0000  
                         l9571 07D9                           l9547 0000                           l9581 0000  
                         l9565 07CC                           l9557 07C1                           l9549 0000  
                         ?_pow 00C9                           l9575 0000                           l9585 07F1  
                         l9577 0000                           l9579 07EB                           STR_1 069C  
                         STR_2 0652                           STR_3 0662                           STR_4 069C  
                         STR_6 069C                           STR_7 068C                           STR_8 0697  
                         STR_9 067A                           _BRGH 04C2                           _CREN 00C4  
                         _CCal 01E5                           u3165 1634                           u3415 0172  
                         _PIE1 008C                           u2545 177D                           u2495 15CB  
                         u3607 0F42                           u3455 03FE                           u2585 17A2  
                         u3617 0F4E                           u2690 0000                           u3707 0FB1  
                         u3627 0F59                           _PEIE 005E                           u2925 01DC  
                         u3637 0F64                           u2695 167F                           u3647 0F6F  
                         u3657 0F7A                           u3667 0F85                           _RCIF 0065  
                         u3677 0F90                           u3687 0F9B                           u3697 0FA6  
                         _PIR1 000C                           _TMR0 0001                           _TMR2 0011  
                         _SPEN 00C7                           _TXIE 0464                           _TXEN 04C5  
                         _TXIF 0064                           _SYNC 04C4                           _bres 00E0  
                         _main 0739                           _mode 00E6                           btemp 007E  
                         exp@x 00BE                           log@x 00BA                           pow@x 00C9  
                         pow@y 00CD     __end_of_measure_inductance 0E40                           start 000E  
          timer0_read_ps@count 0025                 ??_buffer_putch 0020                   buffer_puts@x 0075  
                        ??_exp 0076                          ??_log 0076                          ??_isr 0070  
                        ??_pow 0076                          l11011 0000                          l11013 1745  
                        l11023 0000                          l11015 1749                          l11007 0000  
                        l11031 01B5                          l11111 0000                          l11103 090A  
                        l11017 1754                          l11009 0000                          l11033 0000  
                        l11121 0000                          l11105 0910                          l11201 0000  
                        l11027 0000                          l11131 0000                          l11123 0941  
                        l11115 0929                          l11107 0915                          l11211 0E7A  
                        l11203 0000                          l11061 022A                          l11141 0974  
                        l11133 0000                          l11117 092F                          l11109 0919  
                        l11221 0000                          l11205 0000                          l11301 0000  
                        l11063 0000                          l11039 01D3                          l11127 0000  
                        l11071 0000                          l11231 0000                          l11223 0E9E  
                        l11215 0E90                          l11207 0000                          l11311 0000  
                        l11049 0000                          l11137 0000                          l11129 094F  
                        l11081 0000                          l11161 0000                          l11153 1611  
                        l11145 0000                          l11233 0000                          l11217 0000  
                        l11209 0000                          l11313 0000                          l11321 0000  
                        l11401 0000                          l11139 0000                          l11075 08D4  
                        l11067 0000                          l11171 1621                          l11163 0000  
                        l11155 0000                          l11227 0EB4                          l11219 0000  
                        l11243 16C2                          l11251 0000                          l11307 08A4  
                        l11331 0000                          l11323 0000                          l11411 0000  
                        l11403 00AF                          l11093 0000                          l11085 08EC  
                        l11069 0000                          l11181 0000                          l11165 0000  
                        l11157 0000                          l11149 15FD                          l11229 0000  
                        l11237 0000                          l11253 0000                          l11261 0000  
                        l11341 0000                          l11333 0000                          l11325 0000  
                        l11317 0000                          l11421 0179                          l11405 0000  
                        l11501 0000                          l11095 0000                          l11087 0000  
                        l11079 08DD                          l11175 0000                          l11167 0000  
                        l11159 0000                          l11239 0000                          l11247 0000  
                        l11271 05D7                          l11351 0000                          l11343 0000  
                        l11335 0000                          l11327 0000                          l11319 0000  
                        l11407 0000                          l11431 0000                          l11511 0000  
                        l11503 0000                          l11097 08FA                          l11169 0000  
                        l11193 0E68                          l11185 0000                          l11257 0310  
                        l11273 05ED                          l11265 0000                          l11353 0000  
                        l11345 0000                          l11337 0000                          l11329 0000  
                        l11417 0000                          l11409 0000                          l11425 0000  
                        l11433 0000                          l11521 0000                          l11513 0000  
                        l11505 0000                          l10811 0000                          l10803 05A9  
                        l11099 0000                          l11179 0000                          l11195 0000  
                        l11275 0000                          l11355 0000                          l11347 0000  
                        l11339 0000                          l11371 0000                          l11363 04DC  
                        l11427 0000                          l11451 0000                          l11443 0398  
                        l11523 0D9B                          l11531 0DF5                          l11507 0000  
                        l11611 0000                          l11603 116A                          l10805 0000  
                        l10901 0000                          l11197 0000                          l11189 0E54  
                        l11269 0000                          l11277 0000                          l11349 0000  
                        l11373 0000                          l11461 0000                          l11453 0000  
                        l11437 038A                          l11525 0000                          l11533 0DF8  
                        l11509 0000                          l11541 0000                          l11621 0000  
                        l11613 0000                          l11605 0000                          l10751 0000  
                        l10807 0000                          l10831 0000                          l10815 0000  
                        l10903 0000                          l11199 0000                          l11287 0280  
                        l11279 0000                          l11367 04E8                          l11359 0000  
                        l11383 001F                          l11455 042E                          l11471 0000  
                        l11535 0000                          l11527 0DC9                          l11551 0000  
                        l11631 137E                          l11615 0000                          l11607 0000  
                        l11703 0000                          l10761 0000                          l10809 0000  
                        l10825 1774                          l10817 0000                          l10841 0000  
                        l10913 1694                          l10905 0000                          l11297 02EF  
                        l11289 0000                          l11369 0000                          l11393 0048  
                        l11377 0000                          l11457 0000                          l11449 0406  
                        l11481 0000                          l11473 0000                          l11465 0000  
                        l11537 0000                          l11529 0000                          l11545 0000  
                        l11633 0000                          l11617 0000                          l11609 0000  
                        l11561 0000                          l11705 0000                          l10771 0000  
                        l10763 1438                          l10835 0000                          l10827 0000  
                        l10923 16AA                          l10915 0000                          l10907 0000  
                        l10931 0EF5                          l11459 0000                          l11475 0000  
                        l11467 0000                          l11539 0000                          l11491 09F3  
                        l11483 0000                          l11555 15AE                          l11547 0000  
                        l11643 0000                          l11635 13A9                          l11619 0000  
                        l11571 0000                          l11563 0000                          l11707 0000  
                        l11651 0000                          l10749 0000                          l10757 0000  
                        l10773 0000                          l10765 0000                          l10781 0000  
                        l10837 178B                          l10861 0000                          l10925 0000  
                        l10917 169C                          l10941 0000                          l11397 006D  
                        l11477 0000                          l11469 0000                          l11493 0000  
                        l11485 0000                          l11549 0000                          l11557 1491  
                        l11645 0000                          l11637 0000                          l11629 0000  
                        l11581 0000                          l11573 0000                          l11565 0000  
                        l11661 0000                          l11653 0000                          l10767 0000  
                        l10791 0000                          l10783 0000                          l10775 0000  
                        l10855 0000                          l10871 0000                          l10863 0000  
                        l10927 0000                          l11399 0000                          l11479 0000  
                        l11495 0000                          l11487 0000                          l11647 0000  
                        l11639 13D3                          l11591 0000                          l11583 0000  
                        l11575 0000                          l11567 0000                          l11559 0000  
                        l11671 0000                          l11663 0000                          l11655 0000  
                        l10769 0000                          l10793 0000                          l10785 0000  
                        l10777 0000                          l10849 179C                          l10857 17AF  
                        l10873 0000                          l10865 17C2                          l10945 0000  
                        l10953 0000                          l10961 0000                          l11497 0000  
                        l11593 0000                          l11585 0000                          l11577 0000  
                        l11569 0000                          l11681 0000                          l11673 0000  
                        l11665 0000                          l11657 0000                          l11649 0000  
                        l10787 0000                          l10779 0000                          l10795 0000  
                        l10883 17EC                          l10875 17DA                          l10867 17C8  
                        l10947 0FE8                          l10955 1421                          l10971 0000  
                        l10963 1F62                          l11499 0000                          l11595 0000  
                        l11587 0000                          l11579 0000                          l11691 0797  
                        l11683 0788                          l11675 0000                          l11667 0000  
                        l11659 0000                          l10789 0000                          l10885 0000  
                        l10877 17DF                          l10869 17CD                          l10949 0000  
                        l10981 1F74                          l10973 0000                          l10965 0000  
                        l10957 0000                          l11597 0000                          l11589 0000  
                        l11685 0000                          l11677 0000                          l11669 0000  
                        l10799 0000                          l10879 17E5                          l10887 0000  
                        l10895 0000                          l10983 0000                          l10975 0000  
                        l10967 0000                          l10959 0000                          l10991 0000  
                        l11599 0000                          l11695 0000                          l11679 0000  
                        l10897 1671                          l10977 0000                          l10969 0000  
                        l11697 0000                          l10899 1676                          l10979 1F5B  
                        l10995 0000                          l10987 170A                          l11699 07B1  
                        l10997 1713                          l10989 0000                          l10999 0000  
                ___fltol@sign1 0034                __end_of___fladd 098C                          ?_main 0070  
              __end_of___fldiv 1662                __end_of___flneg 01AA                          STR_10 0680  
                        STR_11 0686                          STR_12 0672                          STR_13 069C  
                        STR_14 0692                          STR_15 069C                __end_of___flmul 0ED8  
              __end_of___flsub 170A                __end_of___fltol 16B9                          _CMCON 009C  
                        _T2CON 0012                __end_of___lwdiv 1790                __end_of___lwmod 17B4  
                        _RCREG 001A                          _SPBRG 0099                          _PORTC 0007  
                        _TRISA 0085                          _TRISC 0087                          _TXREG 0019  
                ___awtofl@sign 003A                   main@new_mode 00DF                          _log10 0328  
                        _blink 00E4                          _floor 024D                          _ldexp 01AA  
                        _frexp 0598                          _msecs 01C9                          pclath 000A  
                        pow@yi 00D6                format_number@di 004E                          status 0003  
                        wtemp0 007E                ??_print_reading 0076                  print_buffer@i 0054  
           _format_number$5705 004C                    ldexp@newexp 00A4                   __end_of_main 07B7  
             _timer0_init$3401 0020               _timer0_init$3402 0022               _timer0_init$3403 0024  
             _timer0_init$3404 0026               format_double@num 00DA                  ?_measure_freq 0055  
       __size_of_format_double 014B                         ??_main 0076            format_double@weight 01DD  
       __size_of_format_number 005C         __size_of_format_xint32 001E                         ?_log10 00BE  
                       ?_floor 006B                         ?_ldexp 00A0                         ?_frexp 0020  
             __end_of___altofl 0328               __end_of___flpack 17FF               __end_of___awtofl 16D6  
             __end_of___lltofl 04BC                         i1l5143 1FF7                         i1l9631 0000  
                       i1l9623 0000                         i1l9615 0000                         _INTCON 000B  
                       i1l9633 0000                         i1l9617 0000                         i1l9625 1FCD  
                       i1l9609 0000                         i1l9635 0000                         i1l9619 0000  
                       i1l9627 1FCF                         i1l9645 0000                         i1l9647 0000  
                       i1l9639 1FE1                         i1l9649 0000               __end_of___lwtofl 0F39  
                       ___flge 0ED8                      ??___fladd 0064                      ??___fldiv 003E  
                    ??___flneg 0074                      ??___flmul 0051                      ??___flsub 0076  
                    ??___fltol 0030                   ?_timer0_init 0070           __size_of_buffer_init 0007  
               ??_measure_freq 0057                      ??___lwdiv 0074                   ?_timer2_init 0070  
                    ??___lwmod 0074                         _buffer 0190           __size_of_buffer_puts 0019  
                       log10@x 00BE                         _rxfifo 01A1                         clrloop 07F8  
                       _txfifo 01B1                         _rxiptr 0076                         _rxoptr 0077  
                       floor@i 00A0                         _txiptr 0078                         floor@x 006B  
                       exp@exp 00C6                         log@exp 006D                         _txoptr 0079  
             __end_of_ser_init 1F53               __end_of_ser_puts 1437             timer2_init@ps_mode 0022  
                       saved_w 007E           __end_of_buffer_putch 15E9               format_number@buf 002B  
             format_number@pad 002A        _measure_inductance$8240 00B4        _measure_inductance$8241 00B8  
      _measure_inductance$8242 00BC        _measure_inductance$8237 00C1        _measure_inductance$8238 00C5  
      _measure_inductance$8239 00B0                     ___fladd@f1 005C                     ___fladd@f2 0060  
                   ___flge@ff1 0020                     ___flge@ff2 0024                  _format_double 146A  
                   ___altofl@c 0036                     ___fldiv@f1 003A                     ___fldiv@f2 0036  
                   ___fldiv@f3 0042                     ___flneg@f1 0020                  _format_number 170A  
                _format_xint32 144C                     ___flmul@f1 0049                     ___flmul@f2 004D  
                 eval_poly@res 00B6                     ___flsub@f1 00A4                     ___flsub@f2 00A0  
                   ___fltol@f1 002C                     ___awtofl@c 0036         measure_capacitance@Cin 011F  
 __size_of_measure_capacitance 0413         measure_capacitance@var 011D                 __pcstackCOMMON 0070  
           __size_of_calibrate 009A                   __pidataBANK1 0000                     ___lltofl@c 002A  
           __size_of_delay10ms 0001                  __end_of_log10 0365                  __end_of_floor 0300  
                __end_of_ldexp 024D                  __end_of_frexp 05D6                     ___lwtofl@c 0050  
               buffer_putch@ch 0074                        ??_log10 0076                        ??_floor 0076  
                      ??_ldexp 006B                        ??_frexp 0074                     _log10$8243 00C2  
                   __pbssBANK0 006F                     __pbssBANK1 00E4                 ?_format_double 00DA  
                   __pbssBANK3 0190             __size_of_eval_poly 00A5                 ?_format_number 0027  
               ?_format_xint32 0050       __size_of_print_indicator 0001                     __pmaintext 0739  
                      ?___flge 0020                     __pintentry 0004                      ?___altofl 0036  
      __size_of_timer0_read_ps 003A                     __ptext1250 04BC                     __ptext1251 0F39  
                   __ptext1243 100D                     __ptext1260 16B9                     __ptext1252 16D6  
                   __ptext1244 146A                     __ptext1261 0E40                     __ptext1253 0808  
                   __ptext1245 098C                     __ptext1270 1662                     __ptext1262 15E9  
                   __ptext1254 024D                     __ptext1246 069F                     __ptext1271 01A1  
                   __ptext1263 08AD                     __ptext1255 144C                     __ptext1247 0365  
                   __ptext1280 1F12                     __ptext1272 17B4                     __ptext1264 01AA  
                   __ptext1256 05D6                     __ptext1248 0328                     __ptext1281 07B7  
                   __ptext1273 1790                     __ptext1265 170A                     __ptext1257 04A5  
                   __ptext1249 0011                     __ptext1282 1F3C                     __ptext1274 1766  
                   __ptext1266 1F53                     __ptext1258 0300                     __ptext1283 1437  
                   __ptext1275 0598                     __ptext1267 1420                     __ptext1259 0F24  
                   __ptext1284 15B5                     __ptext1276 07FF                     __ptext1268 0FE7  
                   __ptext1285 0FE0                     __ptext1277 05F1                     __ptext1269 0ED8  
                   __ptext1286 1F8D                     __ptext1278 05F2                     __ptext1287 0000  
                   __ptext1279 17FF                      ?___flpack 0020                      ?___awtofl 0036  
                    ?___lltofl 002A             _measure_inductance 098C             __size_of_ser_putch 0015  
                    ?___lwtofl 0050            ?_measure_inductance 0070                     _ldexp$7694 00A6  
            __end_of_calibrate 0739              __end_of_delay10ms 0800           __end_of_measure_freq 0FE0  
                    ?_ser_init 0070           ??_measure_inductance 0076                      ?_ser_puts 0070  
              __size_of___flge 004C                        ___fladd 08AD                        ___fldiv 15E9  
                      ___flneg 01A1                        ___flmul 0E40                        ___flsub 16D6  
                      ___fltol 1662                        ___lwdiv 1766                        ___lwmod 1790  
                   ??___altofl 0076                     ??___flpack 0026                     ??___awtofl 0076  
            __end_of_eval_poly 08AD           __size_of_timer0_init 0040                     ??___lltofl 0074  
         __size_of_timer2_init 0015          __size_of_buffer_putch 0034                     ??___lwtofl 0076  
                 __size_of_exp 0190                   __size_of_log 00DC                   __size_of_isr 0073  
                 __size_of_pow 0140                        _seconds 01CD                        _ser_tmp 006F  
              ??_format_double 0076           end_of_initialization 1F38                ??_format_number 0075  
              ??_format_xint32 0076                        exp@sign 00C8              __end_of_ser_putch 144C  
                      pow@sign 00D5  measure_inductance@denominator 00AC          __end_of_print_reading 05F3  
                   ??_ser_init 0074                     ??_ser_puts 0075                   _buffer_putch 15B5  
            format_number@base 0029              ??_print_indicator 0074                     _print_unit 17FF  
                ?_print_buffer 0070            _measure_capacitance 100D                    ___fldiv@exp 0047  
                  ___flmul@exp 0055                  ??_buffer_init 0074           ?_measure_capacitance 0070  
                ??_buffer_puts 0075        measure_capacitance@unit 011C                 format_double@m 01E3  
       measure_inductance@unit 00C0                 __end_of___flge 0F24                 _timer0_read_ps 1F53  
                   floor@expon 00A4                 ??_print_buffer 0076                 format_number@i 004F  
               format_number@n 0027                 format_xint32@x 0050            start_initialization 1F27  
                   eval_poly@d 00AE                     eval_poly@n 00AF                     eval_poly@x 00AA  
        __size_of_measure_freq 00A7                     ldexp@value 00A0                    __end_of_exp 01A1  
                  __end_of_log 0598                    __end_of_isr 2000                    __end_of_pow 04A5  
           format_double@digit 01E1                     frexp@value 0020          ??_measure_capacitance 0076  
       __end_of_timer0_read_ps 1F8D                       ??___flge 0028                    __pdataBANK1 00E6  
                 _measure_freq 0F39            __end_of_buffer_init 0FE7            __end_of_buffer_puts 1000  
     print_reading@measurement 0074              __size_of___altofl 0028              __size_of___flpack 004B  
            __size_of___awtofl 001D                    ?_print_unit 0070              __size_of___lltofl 0017  
                  __pbssCOMMON 0076              __size_of___lwtofl 0015                  __pcstackBANK0 0020  
                __pcstackBANK1 00A0                  __pcstackBANK2 0110                  __pcstackBANK3 01D9  
            measure_freq@count 0059                      _calibrate 069F                      _delay10ms 07FF  
                    __pnvBANK1 00E0                      __pnvBANK3 01E5                      _main$6508 00DE  
             ___lwdiv@dividend 0022                ?_timer0_read_ps 0074                       ?___fladd 005C  
                     ?___fldiv 0036                       ?___flneg 0020                       ?___flmul 0049  
                     ?___flsub 00A0                       ?___fltol 002C              __size_of_ser_init 0017  
                     ?___lwdiv 0020                       ?___lwmod 0020              __size_of_ser_puts 0017  
                    __pstrings 0600                      _eval_poly 0808               ___lwdiv@quotient 0025  
               __size_of_log10 003D                 __size_of_floor 00B3                 __size_of_ldexp 00A3  
               __size_of_frexp 003E              interrupt_function 0004                     ?_calibrate 0070  
                   ser_putch@c 0074                     ?_delay10ms 0070                _print_indicator 05F1  
         __end_of_print_buffer 05F1            __size_of_print_unit 0001                    _buffer_init 0FE0  
                    _ser_putch 1437                    _buffer_puts 0FE7    __size_of_measure_inductance 04B4  
                ??_timer0_init 0074                  ??_timer2_init 0074                    __stringbase 0605  
                   ?_eval_poly 00AA          measure_inductance@Lin 00CB          measure_inductance@var 00C9  
        __end_of_format_double 15B5           format_number@padchar 004B          __end_of_format_number 1766  
        __end_of_format_xint32 146A                      frexp@eptr 0024                     ?_ser_putch 0070  
             __size_of___fladd 00DF               __size_of___fldiv 0079               __size_of___flneg 0009  
             __size_of___flmul 0098               __size_of___flsub 0034               __size_of___fltol 0057  
                     ___altofl 0300                       ___flpack 17B4               __size_of___lwdiv 002A  
             __size_of___lwmod 0024                       ___awtofl 16B9                       ___lltofl 04A5  
                timer2_init@ps 0021                       ___lwtofl 0F24            __end_of_timer0_init 07F7  
          __end_of_timer2_init 1F27                       _exp$7878 00C2                ___lwdiv@divisor 0020  
              ___lwdiv@counter 0024         __size_of_print_reading 0001           timer0_init@prescaler 0028  
      __end_of_print_indicator 05F2                       _pow$8244 00D1                    ??_calibrate 0076  
                __size_of_main 007E                    ??_delay10ms 0074                      ser_puts@s 0075  
                     _msecpart 00E2                       clear_ram 07F7                       _ser_init 1F3C  
                     _ser_puts 1420                       _timer1of 01D1                       exp@coeff 0606  
        ___flmul@f3_as_product 0056                       log@coeff 062E    measure_inductance@numerator 00A8  
                 ??_print_unit 0074                    ??_eval_poly 00B1                       intlevel1 0000  
  __end_of_measure_capacitance 1420          __size_of_print_buffer 001B               ___lwmod@dividend 0022  
             ??_timer0_read_ps 0020                      stringcode 0600                    ??_ser_putch 0074  
           __end_of_print_unit 1800                  _print_reading 05F2                    _timer0_init 07B7  
                  _timer2_init 1F12             _format_double$8233 01D9       _measure_capacitance$8234 0110  
     _measure_capacitance$8235 0114       _measure_capacitance$8236 0118                     _OPTION_REG 0081  
           timer0_init@ps_mode 0029                ___lwmod@divisor 0020                ___lwmod@counter 0074  
                 _print_buffer 05D6                       stringdir 0600                       stringtab 0600  
             ?_print_indicator 0070                   ___fladd@exp1 006A                   ___fladd@exp2 0069  
                 ___fladd@sign 0068                 ?_print_reading 0074                   ?_buffer_init 0070  
                 ?_buffer_puts 0070                  ?_buffer_putch 0070  
