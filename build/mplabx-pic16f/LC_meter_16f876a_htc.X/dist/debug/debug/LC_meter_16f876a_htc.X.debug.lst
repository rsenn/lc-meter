

HI-TECH Software PIC PRO Macro Assembler V9.83 build 10920 
                                                                                               Sun Jan 12 08:23:39 2020

HI-TECH Software Omniscient Code Generator (PRO mode) build 10920
     1                           	processor	16F876A
     2                           	opt	pw 120
     3                           	opt	pm
     4                           	psect	config,global,class=CONFIG,delta=2
     5                           	psect	idataBANK1,global,class=CODE,delta=2
     6                           	psect	strings,global,class=STRING,delta=2
     7                           	psect	nvBANK3,global,class=BANK3,space=1,delta=1
     8                           	psect	cinit,global,class=CODE,delta=2
     9                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    12                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    13                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    14                           	psect	clrtext,global,class=CODE,delta=2
    15                           	psect	cstackBANK3,global,class=BANK3,space=1,delta=1
    16                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1
    17                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    18                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    19                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    20                           	psect	maintext,global,class=CODE,delta=2
    21                           	psect	text1283,local,class=CODE,delta=2
    22                           	psect	text1286,local,class=CODE,delta=2
    23                           	psect	text1288,local,class=CODE,delta=2
    24                           	psect	text1289,local,class=CODE,delta=2
    25                           	psect	text1308,local,class=CODE,delta=2
    26                           	psect	text1319,local,class=CODE,delta=2
    27                           	psect	text1323,local,class=CODE,delta=2
    28                           	psect	text1324,local,class=CODE,delta=2
    29                           	psect	text1327,local,class=CODE,delta=2
    30                           	psect	intentry,global,class=CODE,delta=2
    31                           	psect	text1328,local,class=CODE,delta=2
    32                           	psect	pa_nodes,global,class=CODE,delta=2
    33                           	dabs	1,0x7E,2
    34  000A                     	;#
    35                           
    36                           	psect	config
    37  2007  F772               	dw	63346	;#
    38                           
    39                           	psect	idataBANK1
    40  07FA                     __pidataBANK1:	
    41                           
    42                           ;initializer for _mode
    43  07FA  34FF               	retlw	255
    44                           
    45                           	psect	strings
    46  1000                     __pstrings:	
    47  1000                     stringtab:	
    48                           ;	global	stringdir,stringtab,__stringbase
    49                           
    50  1000                     stringcode:	
    51                           ;	String table - string pointers are 1 byte each
    52                           
    53  1000                     stringdir:	
    54  1000  3010               	movlw	high stringdir
    55  1001  008A               	movwf	10
    56  1002  0804               	movf	4,w
    57  1003  0A84               	incf	4,f
    58  1004  0782               	addwf	2,f
    59  1005                     __stringbase:	
    60  1005  3400               	retlw	0
    61  1006                     exp@coeff:	
    62  1006  3400               	retlw	0
    63  1007  3400               	retlw	0
    64  1008  3480               	retlw	128
    65  1009  343F               	retlw	63
    66  100A  3418               	retlw	24
    67  100B  3472               	retlw	114
    68  100C  3431               	retlw	49
    69  100D  343F               	retlw	63
    70  100E  34F0               	retlw	240
    71  100F  34FD               	retlw	253
    72  1010  3475               	retlw	117
    73  1011  343E               	retlw	62
    74  1012  3447               	retlw	71
    75  1013  3458               	retlw	88
    76  1014  3463               	retlw	99
    77  1015  343D               	retlw	61
    78  1016  3458               	retlw	88
    79  1017  3495               	retlw	149
    80  1018  341D               	retlw	29
    81  1019  343C               	retlw	60
    82  101A  3482               	retlw	130
    83  101B  34C4               	retlw	196
    84  101C  34AE               	retlw	174
    85  101D  343A               	retlw	58
    86  101E  34A8               	retlw	168
    87  101F  3478               	retlw	120
    88  1020  3421               	retlw	33
    89  1021  3439               	retlw	57
    90  1022  34EF               	retlw	239
    91  1023  3493               	retlw	147
    92  1024  3480               	retlw	128
    93  1025  3437               	retlw	55
    94  1026  34A0               	retlw	160
    95  1027  3492               	retlw	146
    96  1028  34A7               	retlw	167
    97  1029  3435               	retlw	53
    98  102A  3446               	retlw	70
    99  102B  3456               	retlw	86
   100  102C  3415               	retlw	21
   101  102D  3434               	retlw	52
   102  102E                     log@coeff:	
   103  102E  3400               	retlw	0
   104  102F  3400               	retlw	0
   105  1030  3400               	retlw	0
   106  1031  3400               	retlw	0
   107  1032  34C4               	retlw	196
   108  1033  34FF               	retlw	255
   109  1034  347F               	retlw	127
   110  1035  343F               	retlw	63
   111  1036  3480               	retlw	128
   112  1037  34EF               	retlw	239
   113  1038  34FF               	retlw	255
   114  1039  34BE               	retlw	190
   115  103A  3490               	retlw	144
   116  103B  34E1               	retlw	225
   117  103C  34A9               	retlw	169
   118  103D  343E               	retlw	62
   119  103E  34EC               	retlw	236
   120  103F  3482               	retlw	130
   121  1040  3476               	retlw	118
   122  1041  34BE               	retlw	190
   123  1042  3482               	retlw	130
   124  1043  34AD               	retlw	173
   125  1044  342B               	retlw	43
   126  1045  343E               	retlw	62
   127  1046  340E               	retlw	14
   128  1047  343C               	retlw	60
   129  1048  34C3               	retlw	195
   130  1049  34BD               	retlw	189
   131  104A  3487               	retlw	135
   132  104B  34D1               	retlw	209
   133  104C  3413               	retlw	19
   134  104D  343D               	retlw	61
   135  104E  3441               	retlw	65
   136  104F  3478               	retlw	120
   137  1050  34D3               	retlw	211
   138  1051  34BB               	retlw	187
   139  1052                     STR_12:	
   140  1052  342D               	retlw	45	;'-'
   141  1053  3420               	retlw	32	;' '
   142  1054  3443               	retlw	67	;'C'
   143  1055  3420               	retlw	32	;' '
   144  1056  3428               	retlw	40	;'('
   145  1057  3455               	retlw	85	;'U'
   146  1058  346E               	retlw	110	;'n'
   147  1059  3469               	retlw	105	;'i'
   148  105A  3474               	retlw	116	;'t'
   149  105B  343A               	retlw	58	;':'
   150  105C  3420               	retlw	32	;' '
   151  105D  3446               	retlw	70	;'F'
   152  105E  3429               	retlw	41	;')'
   153  105F  3420               	retlw	32	;' '
   154  1060  342D               	retlw	45	;'-'
   155  1061  3400               	retlw	0
   156  1062                     STR_13:	
   157  1062  342D               	retlw	45	;'-'
   158  1063  3420               	retlw	32	;' '
   159  1064  344C               	retlw	76	;'L'
   160  1065  3420               	retlw	32	;' '
   161  1066  3428               	retlw	40	;'('
   162  1067  3455               	retlw	85	;'U'
   163  1068  346E               	retlw	110	;'n'
   164  1069  3469               	retlw	105	;'i'
   165  106A  3474               	retlw	116	;'t'
   166  106B  343A               	retlw	58	;':'
   167  106C  3420               	retlw	32	;' '
   168  106D  3448               	retlw	72	;'H'
   169  106E  3429               	retlw	41	;')'
   170  106F  3420               	retlw	32	;' '
   171  1070  342D               	retlw	45	;'-'
   172  1071  3400               	retlw	0
   173  1072                     STR_8:	
   174  1072  340D               	retlw	13
   175  1073  340A               	retlw	10
   176  1074  3443               	retlw	67	;'C'
   177  1075  3443               	retlw	67	;'C'
   178  1076  3461               	retlw	97	;'a'
   179  1077  346C               	retlw	108	;'l'
   180  1078  343D               	retlw	61	;'='
   181  1079  3400               	retlw	0
   182  107A                     STR_5:	
   183  107A  340D               	retlw	13
   184  107B  340A               	retlw	10
   185  107C  3446               	retlw	70	;'F'
   186  107D  3431               	retlw	49	;'1'
   187  107E  343D               	retlw	61	;'='
   188  107F  3400               	retlw	0
   189  1080                     STR_6:	
   190  1080  340D               	retlw	13
   191  1081  340A               	retlw	10
   192  1082  3446               	retlw	70	;'F'
   193  1083  3432               	retlw	50	;'2'
   194  1084  343D               	retlw	61	;'='
   195  1085  3400               	retlw	0
   196  1086                     STR_7:	
   197  1086  340D               	retlw	13
   198  1087  340A               	retlw	10
   199  1088  3446               	retlw	70	;'F'
   200  1089  3433               	retlw	51	;'3'
   201  108A  343D               	retlw	61	;'='
   202  108B  3400               	retlw	0
   203  108C                     STR_3:	
   204  108C  3446               	retlw	70	;'F'
   205  108D  3472               	retlw	114	;'r'
   206  108E  3465               	retlw	101	;'e'
   207  108F  3471               	retlw	113	;'q'
   208  1090  343D               	retlw	61	;'='
   209  1091  3400               	retlw	0
   210  1092                     STR_10:	
   211  1092  3443               	retlw	67	;'C'
   212  1093  3469               	retlw	105	;'i'
   213  1094  346E               	retlw	110	;'n'
   214  1095  343D               	retlw	61	;'='
   215  1096  3400               	retlw	0
   216  1097                     STR_4:	
   217  1097  3476               	retlw	118	;'v'
   218  1098  3461               	retlw	97	;'a'
   219  1099  3472               	retlw	114	;'r'
   220  109A  343D               	retlw	61	;'='
   221  109B  3400               	retlw	0
   222  109C                     STR_1:	
   223  109C  340D               	retlw	13
   224  109D  340A               	retlw	10
   225  109E  3400               	retlw	0
   226  109C                     
   227                           	psect	nvBANK3
   228  01DD                     __pnvBANK3:	
   229  01DD                     _CCal:	
   230  01DD                     	ds	4
   231  01E1                     _bres:	
   232  01E1                     	ds	2
   233  01E3                     _msecpart:	
   234  01E3                     	ds	2
   235  000B                     _INTCON	set	11
   236  0007                     _PORTC	set	7
   237  001A                     _RCREG	set	26
   238  0001                     _TMR0	set	1
   239  0019                     _TXREG	set	25
   240  00C4                     _CREN	set	196
   241  005F                     _GIE	set	95
   242  005E                     _PEIE	set	94
   243  003B                     _RC3	set	59
   244  0065                     _RCIF	set	101
   245  00C6                     _RX9	set	198
   246  00C7                     _SPEN	set	199
   247  005D                     _T0IE	set	93
   248  005A                     _TMR0IF	set	90
   249  0064                     _TXIF	set	100
   250  009C                     _CMCON	set	156
   251  0081                     _OPTION_REG	set	129
   252  0081                     _OPTION_REGbits	set	129
   253  0099                     _SPBRG	set	153
   254  0085                     _TRISA	set	133
   255  0086                     _TRISB	set	134
   256  0087                     _TRISC	set	135
   257  04C2                     _BRGH	set	1218
   258  040B                     _PSA	set	1035
   259  04C4                     _SYNC	set	1220
   260  040D                     _T0CS	set	1037
   261  040C                     _T0SE	set	1036
   262  04C6                     _TX9	set	1222
   263  04C5                     _TXEN	set	1221
   264  0464                     _TXIE	set	1124
   265                           
   266                           	psect	cinit
   267  1145                     start_initialization:	
   268  1145  30DC               	movlw	low __pbssBANK1
   269                           
   270                           ; Clear objects allocated to COMMON
   271  1146  01F8               	clrf	__pbssCOMMON& (0+127)
   272  1147  01F9               	clrf	(__pbssCOMMON+1)& (0+127)
   273  1148  01FA               	clrf	(__pbssCOMMON+2)& (0+127)
   274                           
   275                           ; Clear objects allocated to BANK0
   276  1149  01EF               	clrf	__pbssBANK0& (0+127)
   277                           
   278                           ; Clear objects allocated to BANK1
   279  114A  1383               	bcf	3,7	;select IRP bank0
   280  114B  0084               	movwf	4
   281  114C  30E7               	movlw	low (__pbssBANK1+11)
   282  114D  120A  118A  27F2   	fcall	clear_ram
      +       160A  118A         
   283  1152  3090               	movlw	low __pbssBANK3
   284                           
   285                           ; Clear objects allocated to BANK3
   286  1153  1783               	bsf	3,7	;select IRP bank2
   287  1154  0084               	movwf	4
   288  1155  30D1               	movlw	low (__pbssBANK3+65)
   289  1156  120A  118A  27F2   	fcall	clear_ram
   290  1159                     end_of_initialization:	
   291                           ;End of C runtime variable initialization code
   292                           
   293  1159  0183               	clrf	3
   294  115A  160A  118A  29C5   	ljmp	_main	;jump to C main() function
   295                           
   296                           	psect	bssCOMMON
   297  0078                     __pbssCOMMON:	
   298  0078                     _rxiptr:	
   299  0078                     	ds	1
   300  0079                     _txiptr:	
   301  0079                     	ds	1
   302  007A                     _txoptr:	
   303  007A                     	ds	1
   304                           
   305                           	psect	bssBANK0
   306  006F                     __pbssBANK0:	
   307  006F                     _rxoptr:	
   308  006F                     	ds	1
   309                           
   310                           	psect	bssBANK1
   311  00DC                     __pbssBANK1:	
   312  00DC                     _msecs:	
   313  00DC                     	ds	4
   314  00E0                     _seconds:	
   315  00E0                     	ds	4
   316  00E4                     _blink:	
   317  00E4                     	ds	2
   318  00E6                     _ser_tmp:	
   319  00E6                     	ds	1
   320                           
   321                           	psect	dataBANK1
   322  00E7                     __pdataBANK1:	
   323  00E7                     _mode:	
   324  00E7                     	ds	1
   325                           
   326                           	psect	bssBANK3
   327  0190                     __pbssBANK3:	
   328  0190                     _rxfifo:	
   329  0190                     	ds	16
   330  01A0                     _txfifo:	
   331  01A0                     	ds	16
   332  01B0                     _F2:	
   333  01B0                     	ds	4
   334  01B4                     _F3:	
   335  01B4                     	ds	4
   336  01B8                     _timer1of:	
   337  01B8                     	ds	4
   338  01BC                     _buffer:	
   339  01BC                     	ds	17
   340  01CD                     _F1:	
   341  01CD                     	ds	4
   342                           
   343                           	psect	clrtext
   344  07F2                     clear_ram:	
   345                           ;	Called with FSR containing the base address, and
   346                           ;	W with the last address+1
   347                           
   348  07F2  0064               	clrwdt	;clear the watchdog before getting into this loop
   349  07F3                     clrloop:	
   350  07F3  0180               	clrf	0	;clear RAM location pointed to by FSR
   351  07F4  0A84               	incf	4,f	;increment pointer
   352  07F5  0604               	xorwf	4,w	;XOR with final address
   353  07F6  1903               	btfsc	3,2	;have we reached the end yet?
   354  07F7  3400               	retlw	0	;all done for this memory range, return
   355  07F8  0604               	xorwf	4,w	;XOR again to restore value
   356  07F9  2FF3               	goto	clrloop	;do the next byte
   357                           
   358                           	psect	cstackBANK3
   359  01D1                     __pcstackBANK3:	
   360  01D1                     _format_double$5378:	
   361                           
   362                           ; 4 bytes @ 0x0
   363  01D1                     	ds	4
   364  01D5                     format_double@weight:	
   365                           
   366                           ; 4 bytes @ 0x4
   367  01D5                     	ds	4
   368  01D9                     format_double@digit:	
   369                           
   370                           ; 2 bytes @ 0x8
   371  01D9                     	ds	2
   372  01DB                     format_double@m:	
   373                           
   374                           ; 2 bytes @ 0xA
   375  01DB                     	ds	2
   376                           
   377                           	psect	cstackBANK2
   378  0110                     __pcstackBANK2:	
   379  0110                     _measure_capacitance$5379:	
   380                           
   381                           ; 4 bytes @ 0x0
   382  0110                     	ds	4
   383  0114                     _measure_capacitance$5380:	
   384                           
   385                           ; 4 bytes @ 0x4
   386  0114                     	ds	4
   387  0118                     _measure_capacitance$5381:	
   388                           
   389                           ; 4 bytes @ 0x8
   390  0118                     	ds	4
   391  011C                     measure_capacitance@unit:	
   392                           
   393                           ; 1 bytes @ 0xC
   394  011C                     	ds	1
   395  011D                     measure_capacitance@var:	
   396                           
   397                           ; 2 bytes @ 0xD
   398  011D                     	ds	2
   399  011F                     measure_capacitance@Cin:	
   400                           
   401                           ; 4 bytes @ 0xF
   402  011F                     	ds	4
   403                           
   404                           	psect	cstackBANK1
   405  00A0                     __pcstackBANK1:	
   406  00A0                     measure_inductance@numerator:	
   407  00A0                     floor@i:	
   408                           ; 4 bytes @ 0x0
   409                           
   410  00A0                     _ldexp$4713:	
   411                           ; 4 bytes @ 0x0
   412                           
   413                           
   414                           ; 4 bytes @ 0x0
   415  00A0                     	ds	4
   416  00A4                     ?_eval_poly:	
   417  00A4                     floor@expon:	
   418                           ; 4 bytes @ 0x4
   419                           
   420  00A4                     measure_inductance@denominator:	
   421                           ; 2 bytes @ 0x4
   422                           
   423  00A4                     eval_poly@x:	
   424                           ; 4 bytes @ 0x4
   425                           
   426                           
   427                           ; 4 bytes @ 0x4
   428  00A4                     	ds	4
   429  00A8                     eval_poly@d:	
   430  00A8                     _measure_inductance$5384:	
   431                           ; 1 bytes @ 0x8
   432                           
   433                           
   434                           ; 4 bytes @ 0x8
   435  00A8                     	ds	1
   436  00A9                     eval_poly@n:	
   437                           
   438                           ; 2 bytes @ 0x9
   439  00A9                     	ds	2
   440  00AB                     ??_eval_poly:	
   441                           
   442                           ; 0 bytes @ 0xB
   443  00AB                     	ds	1
   444  00AC                     _measure_inductance$5385:	
   445                           
   446                           ; 4 bytes @ 0xC
   447  00AC                     	ds	4
   448  00B0                     eval_poly@res:	
   449  00B0                     _measure_inductance$5386:	
   450                           ; 4 bytes @ 0x10
   451                           
   452                           
   453                           ; 4 bytes @ 0x10
   454  00B0                     	ds	4
   455  00B4                     ?_log:	
   456  00B4                     log@x:	
   457                           ; 4 bytes @ 0x14
   458                           
   459  00B4                     _measure_inductance$5387:	
   460                           ; 4 bytes @ 0x14
   461                           
   462                           
   463                           ; 4 bytes @ 0x14
   464  00B4                     	ds	4
   465  00B8                     measure_inductance@unit:	
   466  00B8                     log@exp:	
   467                           ; 1 bytes @ 0x18
   468                           
   469                           
   470                           ; 2 bytes @ 0x18
   471  00B8                     	ds	1
   472  00B9                     _measure_inductance$5382:	
   473                           
   474                           ; 4 bytes @ 0x19
   475  00B9                     	ds	1
   476  00BA                     ?_log10:	
   477  00BA                     ?_exp:	
   478                           ; 4 bytes @ 0x1A
   479                           
   480  00BA                     log10@x:	
   481                           ; 4 bytes @ 0x1A
   482                           
   483  00BA                     exp@x:	
   484                           ; 4 bytes @ 0x1A
   485                           
   486                           
   487                           ; 4 bytes @ 0x1A
   488  00BA                     	ds	3
   489  00BD                     _measure_inductance$5383:	
   490                           
   491                           ; 4 bytes @ 0x1D
   492  00BD                     	ds	1
   493  00BE                     _exp$4971:	
   494  00BE                     _log10$5388:	
   495                           ; 4 bytes @ 0x1E
   496                           
   497                           
   498                           ; 4 bytes @ 0x1E
   499  00BE                     	ds	3
   500  00C1                     measure_inductance@var:	
   501                           
   502                           ; 2 bytes @ 0x21
   503  00C1                     	ds	1
   504  00C2                     exp@exp:	
   505                           
   506                           ; 2 bytes @ 0x22
   507  00C2                     	ds	1
   508  00C3                     measure_inductance@Lin:	
   509                           
   510                           ; 4 bytes @ 0x23
   511  00C3                     	ds	1
   512  00C4                     exp@sign:	
   513                           
   514                           ; 1 bytes @ 0x24
   515  00C4                     	ds	1
   516  00C5                     ?_pow:	
   517  00C5                     pow@x:	
   518                           ; 4 bytes @ 0x25
   519                           
   520                           
   521                           ; 4 bytes @ 0x25
   522  00C5                     	ds	4
   523  00C9                     pow@y:	
   524                           
   525                           ; 4 bytes @ 0x29
   526  00C9                     	ds	4
   527  00CD                     _pow$5389:	
   528                           
   529                           ; 4 bytes @ 0x2D
   530  00CD                     	ds	4
   531  00D1                     pow@sign:	
   532                           
   533                           ; 1 bytes @ 0x31
   534  00D1                     	ds	1
   535  00D2                     pow@yi:	
   536                           
   537                           ; 4 bytes @ 0x32
   538  00D2                     	ds	4
   539  00D6                     ?_format_double:	
   540  00D6                     format_double@num:	
   541                           ; 0 bytes @ 0x36
   542                           
   543                           
   544                           ; 4 bytes @ 0x36
   545  00D6                     	ds	4
   546  00DA                     _main$4322:	
   547                           
   548                           ; 1 bytes @ 0x3A
   549  00DA                     	ds	1
   550  00DB                     main@new_mode:	
   551                           
   552                           ; 1 bytes @ 0x3B
   553  00DB                     	ds	1
   554                           
   555                           	psect	cstackCOMMON
   556  0070                     __pcstackCOMMON:	
   557  0070                     ?_delay10ms:	
   558  0070                     ?_ser_putch:	
   559                           ; 0 bytes @ 0x0
   560                           
   561  0070                     ?_ser_puts:	
   562                           ; 0 bytes @ 0x0
   563                           
   564  0070                     ?_ser_init:	
   565                           ; 0 bytes @ 0x0
   566                           
   567  0070                     ?_timer0_init:	
   568                           ; 0 bytes @ 0x0
   569                           
   570  0070                     ?_buffer_init:	
   571                           ; 0 bytes @ 0x0
   572                           
   573  0070                     ?_print_unit:	
   574                           ; 0 bytes @ 0x0
   575                           
   576  0070                     ?_print_indicator:	
   577                           ; 0 bytes @ 0x0
   578                           
   579  0070                     ?_print_buffer:	
   580                           ; 0 bytes @ 0x0
   581                           
   582  0070                     ?_calibrate:	
   583                           ; 0 bytes @ 0x0
   584                           
   585  0070                     ?_buf_to_ser:	
   586                           ; 0 bytes @ 0x0
   587                           
   588  0070                     ?_measure_capacitance:	
   589                           ; 0 bytes @ 0x0
   590                           
   591  0070                     ?_measure_inductance:	
   592                           ; 0 bytes @ 0x0
   593                           
   594  0070                     ??_isr:	
   595                           ; 0 bytes @ 0x0
   596                           
   597  0070                     ?_main:	
   598                           ; 0 bytes @ 0x0
   599                           
   600  0070                     ?_buffer_putch:	
   601                           ; 0 bytes @ 0x0
   602                           
   603  0070                     ?_buffer_puts:	
   604                           ; 1 bytes @ 0x0
   605                           
   606  0070                     ?_isr:	
   607                           ; 1 bytes @ 0x0
   608                           
   609                           
   610                           ; 2 bytes @ 0x0
   611  0070                     	ds	3
   612  0073                     ??_buffer_putch:	
   613  0073                     ??_delay10ms:	
   614                           ; 0 bytes @ 0x3
   615                           
   616  0073                     ??___flpack:	
   617                           ; 0 bytes @ 0x3
   618                           
   619  0073                     ??_ser_putch:	
   620                           ; 0 bytes @ 0x3
   621                           
   622  0073                     ??_ser_init:	
   623                           ; 0 bytes @ 0x3
   624                           
   625  0073                     ??_timer0_init:	
   626                           ; 0 bytes @ 0x3
   627                           
   628  0073                     ??_buffer_init:	
   629                           ; 0 bytes @ 0x3
   630                           
   631  0073                     ??_print_unit:	
   632                           ; 0 bytes @ 0x3
   633                           
   634  0073                     ?_print_reading:	
   635                           ; 0 bytes @ 0x3
   636                           
   637  0073                     ??_print_indicator:	
   638                           ; 0 bytes @ 0x3
   639                           
   640  0073                     ??___flge:	
   641                           ; 0 bytes @ 0x3
   642                           
   643  0073                     ?_timer0_read_ps:	
   644                           ; 0 bytes @ 0x3
   645                           
   646  0073                     ?___lwdiv:	
   647                           ; 2 bytes @ 0x3
   648                           
   649  0073                     ?___lwmod:	
   650                           ; 2 bytes @ 0x3
   651                           
   652  0073                     ?_frexp:	
   653                           ; 2 bytes @ 0x3
   654                           
   655  0073                     ?___flneg:	
   656                           ; 4 bytes @ 0x3
   657                           
   658  0073                     ser_putch@c:	
   659                           ; 4 bytes @ 0x3
   660                           
   661  0073                     print_reading@measurement:	
   662                           ; 1 bytes @ 0x3
   663                           
   664  0073                     ___lwdiv@divisor:	
   665                           ; 2 bytes @ 0x3
   666                           
   667  0073                     ___lwmod@divisor:	
   668                           ; 2 bytes @ 0x3
   669                           
   670  0073                     frexp@value:	
   671                           ; 2 bytes @ 0x3
   672                           
   673  0073                     ___flneg@f1:	
   674                           ; 4 bytes @ 0x3
   675                           
   676                           
   677                           ; 4 bytes @ 0x3
   678  0073                     	ds	1
   679  0074                     ??_ser_puts:	
   680  0074                     ?_ser_put:	
   681                           ; 0 bytes @ 0x4
   682                           
   683  0074                     ser_puts@s:	
   684                           ; 0 bytes @ 0x4
   685                           
   686  0074                     timer0_init@prescaler:	
   687                           ; 1 bytes @ 0x4
   688                           
   689  0074                     ser_put@n:	
   690                           ; 1 bytes @ 0x4
   691                           
   692                           
   693                           ; 2 bytes @ 0x4
   694  0074                     	ds	1
   695  0075                     ??_print_reading:	
   696  0075                     timer0_init@ps_mode:	
   697                           ; 0 bytes @ 0x5
   698                           
   699  0075                     timer0_read_ps@prev:	
   700                           ; 1 bytes @ 0x5
   701                           
   702  0075                     ___lwdiv@dividend:	
   703                           ; 1 bytes @ 0x5
   704                           
   705  0075                     ___lwmod@dividend:	
   706                           ; 2 bytes @ 0x5
   707                           
   708                           
   709                           ; 2 bytes @ 0x5
   710  0075                     	ds	1
   711  0076                     ??_ser_put:	
   712  0076                     ser_put@s:	
   713                           ; 0 bytes @ 0x6
   714                           
   715  0076                     buffer_putch@ch:	
   716                           ; 1 bytes @ 0x6
   717                           
   718  0076                     timer0_read_ps@count:	
   719                           ; 1 bytes @ 0x6
   720                           
   721                           
   722                           ; 2 bytes @ 0x6
   723  0076                     	ds	1
   724  0077                     ??_buffer_puts:	
   725  0077                     ??_buf_to_ser:	
   726                           ; 0 bytes @ 0x7
   727                           
   728  0077                     ??___lwdiv:	
   729                           ; 0 bytes @ 0x7
   730                           
   731  0077                     ??___lwmod:	
   732                           ; 0 bytes @ 0x7
   733                           
   734  0077                     ??___flneg:	
   735                           ; 0 bytes @ 0x7
   736                           
   737  0077                     ??___lltofl:	
   738                           ; 0 bytes @ 0x7
   739                           
   740  0077                     buffer_puts@x:	
   741                           ; 0 bytes @ 0x7
   742                           
   743  0077                     frexp@eptr:	
   744                           ; 1 bytes @ 0x7
   745                           
   746  0077                     ___lwmod@counter:	
   747                           ; 1 bytes @ 0x7
   748                           
   749                           
   750                           ; 1 bytes @ 0x7
   751  0077                     	ds	1
   752  0078                     ??_log10:	
   753  0078                     ??_pow:	
   754                           ; 0 bytes @ 0x8
   755                           
   756  0078                     ??_floor:	
   757                           ; 0 bytes @ 0x8
   758                           
   759  0078                     ??_exp:	
   760                           ; 0 bytes @ 0x8
   761                           
   762  0078                     ??_format_xint32:	
   763                           ; 0 bytes @ 0x8
   764                           
   765  0078                     ??_format_double:	
   766                           ; 0 bytes @ 0x8
   767                           
   768  0078                     ??_print_buffer:	
   769                           ; 0 bytes @ 0x8
   770                           
   771  0078                     ??_calibrate:	
   772                           ; 0 bytes @ 0x8
   773                           
   774  0078                     ??_measure_capacitance:	
   775                           ; 0 bytes @ 0x8
   776                           
   777  0078                     ??_measure_inductance:	
   778                           ; 0 bytes @ 0x8
   779                           
   780  0078                     ??_main:	
   781                           ; 0 bytes @ 0x8
   782                           
   783  0078                     ??_log:	
   784                           ; 0 bytes @ 0x8
   785                           
   786  0078                     ??___flsub:	
   787                           ; 0 bytes @ 0x8
   788                           
   789  0078                     ??___awtofl:	
   790                           ; 0 bytes @ 0x8
   791                           
   792  0078                     ??___lwtofl:	
   793                           ; 0 bytes @ 0x8
   794                           
   795  0078                     ??___altofl:	
   796                           ; 0 bytes @ 0x8
   797                           
   798                           
   799                           	psect	cstackBANK0
   800  0020                     __pcstackBANK0:	
   801                           ; 0 bytes @ 0x8
   802                           
   803  0020                     ??_frexp:	
   804  0020                     ??_timer0_read_ps:	
   805                           ; 0 bytes @ 0x0
   806                           
   807  0020                     ?___flge:	
   808                           ; 0 bytes @ 0x0
   809                           
   810  0020                     ?___flpack:	
   811                           ; 1 bit 
   812                           
   813  0020                     ___lwdiv@counter:	
   814                           ; 4 bytes @ 0x0
   815                           
   816  0020                     ___flge@ff1:	
   817                           ; 1 bytes @ 0x0
   818                           
   819  0020                     ___flpack@arg:	
   820                           ; 4 bytes @ 0x0
   821                           
   822                           
   823                           ; 4 bytes @ 0x0
   824  0020                     	ds	1
   825  0021                     ___lwdiv@quotient:	
   826                           
   827                           ; 2 bytes @ 0x1
   828  0021                     	ds	2
   829  0023                     ?_format_number:	
   830  0023                     format_number@n:	
   831                           ; 0 bytes @ 0x3
   832                           
   833                           
   834                           ; 2 bytes @ 0x3
   835  0023                     	ds	1
   836  0024                     ___flpack@exp:	
   837  0024                     ___flge@ff2:	
   838                           ; 1 bytes @ 0x4
   839                           
   840                           
   841                           ; 4 bytes @ 0x4
   842  0024                     	ds	1
   843  0025                     format_number@base:	
   844  0025                     ___flpack@sign:	
   845                           ; 1 bytes @ 0x5
   846                           
   847                           
   848                           ; 1 bytes @ 0x5
   849  0025                     	ds	1
   850  0026                     ?___lltofl:	
   851  0026                     format_number@pad:	
   852                           ; 4 bytes @ 0x6
   853                           
   854  0026                     ___lltofl@c:	
   855                           ; 1 bytes @ 0x6
   856                           
   857                           
   858                           ; 4 bytes @ 0x6
   859  0026                     	ds	1
   860  0027                     ??_format_number:	
   861                           
   862                           ; 0 bytes @ 0x7
   863  0027                     	ds	1
   864  0028                     ?___fltol:	
   865  0028                     ___fltol@f1:	
   866                           ; 4 bytes @ 0x8
   867                           
   868  0028                     format_number@buf:	
   869                           ; 4 bytes @ 0x8
   870                           
   871                           
   872                           ; 32 bytes @ 0x8
   873  0028                     	ds	4
   874  002C                     ??___fltol:	
   875                           
   876                           ; 0 bytes @ 0xC
   877  002C                     	ds	4
   878  0030                     ___fltol@sign1:	
   879                           
   880                           ; 1 bytes @ 0x10
   881  0030                     	ds	1
   882  0031                     ___fltol@exp1:	
   883                           
   884                           ; 1 bytes @ 0x11
   885  0031                     	ds	1
   886  0032                     ?___fldiv:	
   887  0032                     ?___awtofl:	
   888                           ; 4 bytes @ 0x12
   889                           
   890  0032                     ?___altofl:	
   891                           ; 4 bytes @ 0x12
   892                           
   893  0032                     ___awtofl@c:	
   894                           ; 4 bytes @ 0x12
   895                           
   896  0032                     ___fldiv@f2:	
   897                           ; 2 bytes @ 0x12
   898                           
   899  0032                     ___altofl@c:	
   900                           ; 4 bytes @ 0x12
   901                           
   902                           
   903                           ; 4 bytes @ 0x12
   904  0032                     	ds	4
   905  0036                     ___awtofl@sign:	
   906  0036                     ___altofl@sign:	
   907                           ; 1 bytes @ 0x16
   908                           
   909  0036                     ___fldiv@f1:	
   910                           ; 1 bytes @ 0x16
   911                           
   912                           
   913                           ; 4 bytes @ 0x16
   914  0036                     	ds	4
   915  003A                     ??___fldiv:	
   916                           
   917                           ; 0 bytes @ 0x1A
   918  003A                     	ds	4
   919  003E                     ___fldiv@f3:	
   920                           
   921                           ; 4 bytes @ 0x1E
   922  003E                     	ds	4
   923  0042                     ___fldiv@cntr:	
   924                           
   925                           ; 1 bytes @ 0x22
   926  0042                     	ds	1
   927  0043                     ___fldiv@exp:	
   928                           
   929                           ; 1 bytes @ 0x23
   930  0043                     	ds	1
   931  0044                     ___fldiv@sign:	
   932                           
   933                           ; 1 bytes @ 0x24
   934  0044                     	ds	1
   935  0045                     ?___flmul:	
   936  0045                     ___flmul@f1:	
   937                           ; 4 bytes @ 0x25
   938                           
   939                           
   940                           ; 4 bytes @ 0x25
   941  0045                     	ds	3
   942  0048                     format_number@padchar:	
   943                           
   944                           ; 1 bytes @ 0x28
   945  0048                     	ds	1
   946  0049                     _format_number$1145:	
   947  0049                     ___flmul@f2:	
   948                           ; 2 bytes @ 0x29
   949                           
   950                           
   951                           ; 4 bytes @ 0x29
   952  0049                     	ds	2
   953  004B                     format_number@di:	
   954                           
   955                           ; 1 bytes @ 0x2B
   956  004B                     	ds	1
   957  004C                     format_number@i:	
   958                           
   959                           ; 1 bytes @ 0x2C
   960  004C                     	ds	1
   961  004D                     ?_format_xint32:	
   962  004D                     ??___flmul:	
   963                           ; 0 bytes @ 0x2D
   964                           
   965  004D                     ?___lwtofl:	
   966                           ; 0 bytes @ 0x2D
   967                           
   968  004D                     ___lwtofl@c:	
   969                           ; 4 bytes @ 0x2D
   970                           
   971  004D                     format_xint32@x:	
   972                           ; 2 bytes @ 0x2D
   973                           
   974                           
   975                           ; 4 bytes @ 0x2D
   976  004D                     	ds	4
   977  0051                     print_buffer@i:	
   978  0051                     ___flmul@exp:	
   979                           ; 1 bytes @ 0x31
   980                           
   981                           
   982                           ; 1 bytes @ 0x31
   983  0051                     	ds	1
   984  0052                     ?_measure_freq:	
   985  0052                     ___flmul@f3_as_product:	
   986                           ; 2 bytes @ 0x32
   987                           
   988                           
   989                           ; 4 bytes @ 0x32
   990  0052                     	ds	2
   991  0054                     ??_measure_freq:	
   992                           
   993                           ; 0 bytes @ 0x34
   994  0054                     	ds	2
   995  0056                     ___flmul@cntr:	
   996  0056                     measure_freq@count:	
   997                           ; 1 bytes @ 0x36
   998                           
   999                           
  1000                           ; 2 bytes @ 0x36
  1001  0056                     	ds	1
  1002  0057                     ___flmul@sign:	
  1003                           
  1004                           ; 1 bytes @ 0x37
  1005  0057                     	ds	1
  1006  0058                     ?___fladd:	
  1007  0058                     ___fladd@f1:	
  1008                           ; 4 bytes @ 0x38
  1009                           
  1010                           
  1011                           ; 4 bytes @ 0x38
  1012  0058                     	ds	4
  1013  005C                     ___fladd@f2:	
  1014                           
  1015                           ; 4 bytes @ 0x3C
  1016  005C                     	ds	4
  1017  0060                     ??___fladd:	
  1018                           
  1019                           ; 0 bytes @ 0x40
  1020  0060                     	ds	4
  1021  0064                     ___fladd@sign:	
  1022                           
  1023                           ; 1 bytes @ 0x44
  1024  0064                     	ds	1
  1025  0065                     ___fladd@exp2:	
  1026                           
  1027                           ; 1 bytes @ 0x45
  1028  0065                     	ds	1
  1029  0066                     ___fladd@exp1:	
  1030                           
  1031                           ; 1 bytes @ 0x46
  1032  0066                     	ds	1
  1033  0067                     ?_floor:	
  1034  0067                     ?_ldexp:	
  1035                           ; 4 bytes @ 0x47
  1036                           
  1037  0067                     ?___flsub:	
  1038                           ; 4 bytes @ 0x47
  1039                           
  1040  0067                     floor@x:	
  1041                           ; 4 bytes @ 0x47
  1042                           
  1043  0067                     ldexp@value:	
  1044                           ; 4 bytes @ 0x47
  1045                           
  1046  0067                     ___flsub@f2:	
  1047                           ; 4 bytes @ 0x47
  1048                           
  1049                           
  1050                           ; 4 bytes @ 0x47
  1051  0067                     	ds	4
  1052  006B                     ldexp@newexp:	
  1053  006B                     ___flsub@f1:	
  1054                           ; 2 bytes @ 0x4B
  1055                           
  1056                           
  1057                           ; 4 bytes @ 0x4B
  1058  006B                     	ds	2
  1059  006D                     ??_ldexp:	
  1060                           
  1061                           ; 0 bytes @ 0x4D
  1062  006D                     	ds	2
  1063                           
  1064                           	psect	maintext
  1065  11C5                     __pmaintext:	
  1066 ;;Data sizes: Strings 77, constant 76, data 1, bss 80, persistent 8 stack 0
  1067 ;;Auto spaces:   Size  Autos    Used
  1068 ;; COMMON          14      8      11
  1069 ;; BANK0           80     79      80
  1070 ;; BANK1           80     60      72
  1071 ;; BANK3           96     12      85
  1072 ;; BANK2           96     19      19
  1073 ;;
  1074 ;; Pointer list with targets:
  1075 ;; ?___flpack	 size(1) Largest target is 0
  1076 ;;
  1077 ;; ?_ldexp	 size(1) Largest target is 0
  1078 ;;
  1079 ;; ?_exp	 size(1) Largest target is 0
  1080 ;;
  1081 ;; ?___flneg	 size(1) Largest target is 0
  1082 ;;
  1083 ;; ?___lltofl	 size(1) Largest target is 0
  1084 ;;
  1085 ;; ?_log	 size(1) Largest target is 0
  1086 ;;
  1087 ;; ?_eval_poly	 size(1) Largest target is 0
  1088 ;;
  1089 ;; ?___fladd	 size(1) Largest target is 0
  1090 ;;
  1091 ;; ?___altofl	 size(1) Largest target is 0
  1092 ;;
  1093 ;; ?_frexp	 size(1) Largest target is 0
  1094 ;;
  1095 ;; ?_measure_freq	unsigned short  size(1) Largest target is 0
  1096 ;;
  1097 ;; ?___lwtofl	unsigned short  size(1) Largest target is 0
  1098 ;;
  1099 ;; ?_timer0_read_ps	unsigned short  size(1) Largest target is 0
  1100 ;;
  1101 ;; ?___flsub	unsigned short  size(1) Largest target is 0
  1102 ;;
  1103 ;; ?___flmul	unsigned short  size(1) Largest target is 0
  1104 ;;
  1105 ;; ?___fldiv	unsigned short  size(1) Largest target is 0
  1106 ;;
  1107 ;; ?_floor	unsigned short  size(1) Largest target is 0
  1108 ;;
  1109 ;; ?___awtofl	unsigned short  size(1) Largest target is 0
  1110 ;;
  1111 ;; ?_pow	unsigned short  size(1) Largest target is 0
  1112 ;;
  1113 ;; ?___fltol	long  size(1) Largest target is 0
  1114 ;;
  1115 ;; ?_log10	long  size(1) Largest target is 0
  1116 ;;
  1117 ;; ?___lwdiv	unsigned int  size(1) Largest target is 0
  1118 ;;
  1119 ;; ?___lwmod	unsigned int  size(1) Largest target is 0
  1120 ;;
  1121 ;; eval_poly@d	PTR const  size(1) Largest target is 40
  1122 ;;		 -> exp@coeff(CODE[40]), log@coeff(CODE[36]), 
  1123 ;;
  1124 ;; frexp@eptr	PTR int  size(1) Largest target is 2
  1125 ;;		 -> log@exp(BANK1[2]), floor@expon(BANK1[2]), 
  1126 ;;
  1127 ;; main$4322	PTR const unsigned char  size(1) Largest target is 16
  1128 ;;		 -> STR_13(CODE[16]), STR_12(CODE[16]), 
  1129 ;;
  1130 ;; buffer_puts@x	PTR const unsigned char  size(1) Largest target is 6
  1131 ;;		 -> STR_3(CODE[6]), 
  1132 ;;
  1133 ;; ser_put@s	PTR const unsigned char  size(1) Largest target is 17
  1134 ;;		 -> buffer(BANK3[17]), 
  1135 ;;
  1136 ;; ser_puts@s	PTR const unsigned char  size(1) Largest target is 16
  1137 ;;		 -> STR_15(CODE[3]), STR_14(CODE[3]), STR_13(CODE[16]), STR_12(CODE[16]), 
  1138 ;;		 -> STR_11(CODE[3]), STR_10(CODE[5]), STR_9(CODE[3]), STR_8(CODE[8]), 
  1139 ;;		 -> STR_7(CODE[6]), STR_6(CODE[6]), STR_5(CODE[6]), STR_4(CODE[5]), 
  1140 ;;		 -> STR_2(CODE[3]), STR_1(CODE[3]), 
  1141 ;;
  1142 ;;
  1143 ;; Critical Paths under _main in COMMON
  1144 ;;
  1145 ;;   _log->_frexp
  1146 ;;   _measure_freq->_timer0_read_ps
  1147 ;;   _measure_freq->_buffer_puts
  1148 ;;   _buf_to_ser->_ser_put
  1149 ;;   _floor->_frexp
  1150 ;;   ___lltofl->___flpack
  1151 ;;   ___lwtofl->_timer0_read_ps
  1152 ;;   ___lwtofl->_buffer_puts
  1153 ;;   ___flmul->_frexp
  1154 ;;   ___fladd->_frexp
  1155 ;;   _buffer_puts->_buffer_putch
  1156 ;;   _ser_put->_ser_putch
  1157 ;;   _ser_puts->_ser_putch
  1158 ;;   _format_number->___lwmod
  1159 ;;   ___fltol->_frexp
  1160 ;;
  1161 ;; Critical Paths under _isr in COMMON
  1162 ;;
  1163 ;;   None.
  1164 ;;
  1165 ;; Critical Paths under _main in BANK0
  1166 ;;
  1167 ;;   _measure_capacitance->___flsub
  1168 ;;   _format_double->___flsub
  1169 ;;   _measure_inductance->___flsub
  1170 ;;   _calibrate->_measure_freq
  1171 ;;   _exp->___flsub
  1172 ;;   _exp->_ldexp
  1173 ;;   _measure_freq->_print_buffer
  1174 ;;   ___flsub->___fladd
  1175 ;;   _eval_poly->_ldexp
  1176 ;;   _print_buffer->___lwtofl
  1177 ;;   _floor->___fladd
  1178 ;;   _format_xint32->_format_number
  1179 ;;   ___lltofl->___flpack
  1180 ;;   ___altofl->___fltol
  1181 ;;   ___lwtofl->_format_number
  1182 ;;   ___awtofl->___fltol
  1183 ;;   ___flmul->___fldiv
  1184 ;;   ___fldiv->___fltol
  1185 ;;   ___fladd->___flmul
  1186 ;;   _ldexp->___fladd
  1187 ;;   _format_number->___lwdiv
  1188 ;;   ___fltol->___flge
  1189 ;;
  1190 ;; Critical Paths under _isr in BANK0
  1191 ;;
  1192 ;;   None.
  1193 ;;
  1194 ;; Critical Paths under _main in BANK1
  1195 ;;
  1196 ;;   _measure_capacitance->_format_double
  1197 ;;   _format_double->_pow
  1198 ;;   _pow->_exp
  1199 ;;   _log10->_log
  1200 ;;   _exp->_log
  1201 ;;   _log->_eval_poly
  1202 ;;   _eval_poly->_ldexp
  1203 ;;
  1204 ;; Critical Paths under _isr in BANK1
  1205 ;;
  1206 ;;   None.
  1207 ;;
  1208 ;; Critical Paths under _main in BANK3
  1209 ;;
  1210 ;;   _measure_capacitance->_format_double
  1211 ;;
  1212 ;; Critical Paths under _isr in BANK3
  1213 ;;
  1214 ;;   None.
  1215 ;;
  1216 ;; Critical Paths under _main in BANK2
  1217 ;;
  1218 ;;   _main->_measure_capacitance
  1219 ;;
  1220 ;; Critical Paths under _isr in BANK2
  1221 ;;
  1222 ;;   None.
  1223 ;;
  1224 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1225 ;;
  1226 ;;
  1227 ;;Call Graph Tables:
  1228 ;;
  1229 ;; ---------------------------------------------------------------------------------
  1230 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  1231 ;; ---------------------------------------------------------------------------------
  1232 ;; (0) _main                                                 2     2      0   51063
  1233 ;;                                             58 BANK1      2     2      0
  1234 ;;                        _timer0_init
  1235 ;;                          _delay10ms
  1236 ;;                           _ser_init
  1237 ;;                          _calibrate
  1238 ;;                           _ser_puts
  1239 ;;                _measure_capacitance
  1240 ;;                 _measure_inductance
  1241 ;;                    _print_indicator
  1242 ;; ---------------------------------------------------------------------------------
  1243 ;; (1) _measure_capacitance                                 19    19      0   42027
  1244 ;;                                              0 BANK2     19    19      0
  1245 ;;                       _measure_freq
  1246 ;;                           ___lwtofl
  1247 ;;                           _ser_puts
  1248 ;;                      _format_xint32
  1249 ;;                         _buf_to_ser
  1250 ;;                      _format_double
  1251 ;;                          _ser_putch
  1252 ;;                             ___flge
  1253 ;;                            ___flmul
  1254 ;;                            ___flsub
  1255 ;;                            ___fldiv
  1256 ;;                            ___fltol
  1257 ;;                      _print_reading
  1258 ;;                         _print_unit
  1259 ;; ---------------------------------------------------------------------------------
  1260 ;; (2) _format_double                                       16    12      4   34272
  1261 ;;                                             54 BANK1      4     0      4
  1262 ;;                                              0 BANK3     12    12      0
  1263 ;;                              _log10
  1264 ;;                            ___fltol
  1265 ;;                           ___awtofl
  1266 ;;                                _pow
  1267 ;;                            ___fldiv
  1268 ;;                              _floor
  1269 ;;                            ___flmul
  1270 ;;                            ___flsub
  1271 ;;                       _buffer_putch
  1272 ;;                             ___flge
  1273 ;; ---------------------------------------------------------------------------------
  1274 ;; (1) _measure_inductance                                  47    47      0    6551
  1275 ;;                                              0 BANK1     39    39      0
  1276 ;;                       _measure_freq
  1277 ;;                           ___lwtofl
  1278 ;;                             ___flge
  1279 ;;                            ___flsub
  1280 ;;                            ___flmul
  1281 ;;                            ___fldiv
  1282 ;;                            ___fltol
  1283 ;;                      _print_reading
  1284 ;;                         _print_unit
  1285 ;; ---------------------------------------------------------------------------------
  1286 ;; (1) _calibrate                                            1     1      0    2131
  1287 ;;                       _measure_freq
  1288 ;;                           ___lwtofl
  1289 ;;                          _delay10ms
  1290 ;;                           _ser_puts
  1291 ;; ---------------------------------------------------------------------------------
  1292 ;; (3) _pow                                                 17     9      8   19556
  1293 ;;                                             37 BANK1     17     9      8
  1294 ;;                             ___flge
  1295 ;;                            ___fltol
  1296 ;;                           ___lltofl
  1297 ;;                            ___flneg
  1298 ;;                                _log
  1299 ;;                            ___flmul
  1300 ;;                                _exp
  1301 ;; ---------------------------------------------------------------------------------
  1302 ;; (3) _log10                                                8     4      4    7008
  1303 ;;                                             26 BANK1      8     4      4
  1304 ;;                                _log
  1305 ;;                            ___flmul
  1306 ;;                            ___fltol (ARG)
  1307 ;; ---------------------------------------------------------------------------------
  1308 ;; (4) _exp                                                 11     7      4   11184
  1309 ;;                                             26 BANK1     11     7      4
  1310 ;;                             ___flge
  1311 ;;                            ___flneg
  1312 ;;                            ___flmul
  1313 ;;                              _floor
  1314 ;;                            ___fltol
  1315 ;;                           ___awtofl
  1316 ;;                            ___flsub
  1317 ;;                          _eval_poly
  1318 ;;                              _ldexp
  1319 ;;                            ___fldiv
  1320 ;;                                _log (ARG)
  1321 ;; ---------------------------------------------------------------------------------
  1322 ;; (4) _log                                                  6     2      4    6143
  1323 ;;                                             20 BANK1      6     2      4
  1324 ;;                             ___flge
  1325 ;;                              _frexp
  1326 ;;                            ___flmul
  1327 ;;                            ___fladd
  1328 ;;                          _eval_poly
  1329 ;;                           ___awtofl
  1330 ;;                            ___fltol (ARG)
  1331 ;; ---------------------------------------------------------------------------------
  1332 ;; (2) _measure_freq                                         6     4      2    1692
  1333 ;;                                             50 BANK0      6     4      2
  1334 ;;                     _timer0_read_ps
  1335 ;;                        _buffer_init
  1336 ;;                        _buffer_puts
  1337 ;;                      _format_number
  1338 ;;                       _print_buffer
  1339 ;;                           ___lwtofl (ARG)
  1340 ;; ---------------------------------------------------------------------------------
  1341 ;; (2) ___flsub                                              8     0      8    1602
  1342 ;;                                             71 BANK0      8     0      8
  1343 ;;                            ___fladd
  1344 ;;                            ___flmul (ARG)
  1345 ;;                           ___awtofl (ARG)
  1346 ;; ---------------------------------------------------------------------------------
  1347 ;; (5) _eval_poly                                           16     9      7    2591
  1348 ;;                                              4 BANK1     16     9      7
  1349 ;;                            ___flmul
  1350 ;;                            ___fladd
  1351 ;;                            ___fltol (ARG)
  1352 ;;                              _ldexp (ARG)
  1353 ;; ---------------------------------------------------------------------------------
  1354 ;; (2) _buf_to_ser                                           0     0      0      96
  1355 ;;                            _ser_put
  1356 ;; ---------------------------------------------------------------------------------
  1357 ;; (3) _print_buffer                                         1     1      0     195
  1358 ;;                                             49 BANK0      1     1      0
  1359 ;;                          _ser_putch
  1360 ;;                           _ser_puts
  1361 ;;                           ___lwtofl (ARG)
  1362 ;; ---------------------------------------------------------------------------------
  1363 ;; (3) _floor                                               10     6      4    3207
  1364 ;;                                             71 BANK0      4     0      4
  1365 ;;                                              0 BANK1      6     6      0
  1366 ;;                              _frexp
  1367 ;;                             ___flge
  1368 ;;                            ___fltol
  1369 ;;                           ___altofl
  1370 ;;                            ___fladd
  1371 ;;                            ___fldiv (ARG)
  1372 ;; ---------------------------------------------------------------------------------
  1373 ;; (2) _format_xint32                                        4     0      4    1262
  1374 ;;                                             45 BANK0      4     0      4
  1375 ;;                       _buffer_putch
  1376 ;;                      _format_number
  1377 ;; ---------------------------------------------------------------------------------
  1378 ;; (4) ___lltofl                                             4     0      4     343
  1379 ;;                                              6 BANK0      4     0      4
  1380 ;;                           ___flpack
  1381 ;; ---------------------------------------------------------------------------------
  1382 ;; (4) ___altofl                                             5     1      4     445
  1383 ;;                                             18 BANK0      5     1      4
  1384 ;;                           ___flpack
  1385 ;;                            ___fltol (ARG)
  1386 ;; ---------------------------------------------------------------------------------
  1387 ;; (2) ___lwtofl                                             4     0      4     343
  1388 ;;                                             45 BANK0      4     0      4
  1389 ;;                           ___flpack
  1390 ;;                     _timer0_read_ps (ARG)
  1391 ;;                        _buffer_init (ARG)
  1392 ;;                        _buffer_puts (ARG)
  1393 ;;                      _format_number (ARG)
  1394 ;;                          _ser_putch (ARG)
  1395 ;;                           _ser_puts (ARG)
  1396 ;; ---------------------------------------------------------------------------------
  1397 ;; (5) ___awtofl                                             9     5      4     445
  1398 ;;                                             18 BANK0      5     1      4
  1399 ;;                           ___flpack
  1400 ;;                            ___fltol (ARG)
  1401 ;; ---------------------------------------------------------------------------------
  1402 ;; (2) ___flmul                                             19    11      8     800
  1403 ;;                                             37 BANK0     19    11      8
  1404 ;;                           ___flpack
  1405 ;;                            ___fltol (ARG)
  1406 ;;                           ___awtofl (ARG)
  1407 ;;                            ___fldiv (ARG)
  1408 ;;                              _frexp (ARG)
  1409 ;; ---------------------------------------------------------------------------------
  1410 ;; (2) ___fldiv                                             19    11      8     729
  1411 ;;                                             18 BANK0     19    11      8
  1412 ;;                           ___flpack
  1413 ;;                            ___fltol (ARG)
  1414 ;; ---------------------------------------------------------------------------------
  1415 ;; (3) ___fladd                                             15     7      8    1537
  1416 ;;                                             56 BANK0     15     7      8
  1417 ;;                           ___flpack
  1418 ;;                            ___fltol (ARG)
  1419 ;;                            ___flmul (ARG)
  1420 ;;                              _frexp (ARG)
  1421 ;;                           ___awtofl (ARG)
  1422 ;; ---------------------------------------------------------------------------------
  1423 ;; (5) _ldexp                                               12     6      6     659
  1424 ;;                                             71 BANK0      8     2      6
  1425 ;;                                              0 BANK1      4     4      0
  1426 ;;                             ___flge
  1427 ;;                            ___flneg
  1428 ;;                            ___flmul (ARG)
  1429 ;;                            ___fladd (ARG)
  1430 ;; ---------------------------------------------------------------------------------
  1431 ;; (3) _buffer_puts                                          1     1      0      96
  1432 ;;                                              7 COMMON     1     1      0
  1433 ;;                       _buffer_putch
  1434 ;; ---------------------------------------------------------------------------------
  1435 ;; (3) _timer0_read_ps                                       9     7      2     167
  1436 ;;                                              3 COMMON     5     3      2
  1437 ;;                                              0 BANK0      4     4      0
  1438 ;; ---------------------------------------------------------------------------------
  1439 ;; (3) _ser_put                                              3     1      2      96
  1440 ;;                                              4 COMMON     3     1      2
  1441 ;;                          _ser_putch
  1442 ;; ---------------------------------------------------------------------------------
  1443 ;; (4) _ser_puts                                             1     1      0      96
  1444 ;;                                              4 COMMON     1     1      0
  1445 ;;                          _ser_putch
  1446 ;; ---------------------------------------------------------------------------------
  1447 ;; (3) _format_number                                       42    38      4    1169
  1448 ;;                                              3 BANK0     42    38      4
  1449 ;;                            ___lwmod
  1450 ;;                            ___lwdiv
  1451 ;;                       _buffer_putch
  1452 ;; ---------------------------------------------------------------------------------
  1453 ;; (2) ___flge                                              12     4      8     198
  1454 ;;                                              3 COMMON     4     4      0
  1455 ;;                                              0 BANK0      8     0      8
  1456 ;; ---------------------------------------------------------------------------------
  1457 ;; (2) ___fltol                                             10     6      4     337
  1458 ;;                                              8 BANK0     10     6      4
  1459 ;;                             ___flge (ARG)
  1460 ;;                              _frexp (ARG)
  1461 ;;                           ___flpack (ARG)
  1462 ;; ---------------------------------------------------------------------------------
  1463 ;; (6) ___flneg                                              4     0      4      65
  1464 ;;                                              3 COMMON     4     0      4
  1465 ;; ---------------------------------------------------------------------------------
  1466 ;; (3) ___flpack                                            10     4      6     312
  1467 ;;                                              3 COMMON     4     4      0
  1468 ;;                                              0 BANK0      6     0      6
  1469 ;; ---------------------------------------------------------------------------------
  1470 ;; (4) ___lwmod                                              5     1      4     232
  1471 ;;                                              3 COMMON     5     1      4
  1472 ;; ---------------------------------------------------------------------------------
  1473 ;; (4) ___lwdiv                                              7     3      4     241
  1474 ;;                                              3 COMMON     4     0      4
  1475 ;;                                              0 BANK0      3     3      0
  1476 ;; ---------------------------------------------------------------------------------
  1477 ;; (4) _frexp                                                7     2      5     322
  1478 ;;                                              3 COMMON     5     0      5
  1479 ;;                                              0 BANK0      2     2      0
  1480 ;; ---------------------------------------------------------------------------------
  1481 ;; (2) _delay10ms                                            0     0      0       0
  1482 ;; ---------------------------------------------------------------------------------
  1483 ;; (1) _print_indicator                                      0     0      0       0
  1484 ;; ---------------------------------------------------------------------------------
  1485 ;; (2) _print_reading                                        2     0      2       0
  1486 ;;                                              3 COMMON     2     0      2
  1487 ;; ---------------------------------------------------------------------------------
  1488 ;; (2) _print_unit                                           0     0      0       0
  1489 ;; ---------------------------------------------------------------------------------
  1490 ;; (3) _buffer_init                                          0     0      0       0
  1491 ;; ---------------------------------------------------------------------------------
  1492 ;; (1) _timer0_init                                          3     3      0     156
  1493 ;;                                              3 COMMON     3     3      0
  1494 ;; ---------------------------------------------------------------------------------
  1495 ;; (1) _ser_init                                             0     0      0       0
  1496 ;; ---------------------------------------------------------------------------------
  1497 ;; (5) _ser_putch                                            1     1      0      31
  1498 ;;                                              3 COMMON     1     1      0
  1499 ;; ---------------------------------------------------------------------------------
  1500 ;; (4) _buffer_putch                                         4     4      0      31
  1501 ;;                                              3 COMMON     4     4      0
  1502 ;; ---------------------------------------------------------------------------------
  1503 ;; Estimated maximum stack depth 6
  1504 ;; ---------------------------------------------------------------------------------
  1505 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  1506 ;; ---------------------------------------------------------------------------------
  1507 ;; (8) _isr                                                  3     3      0       0
  1508 ;;                                              0 COMMON     3     3      0
  1509 ;; ---------------------------------------------------------------------------------
  1510 ;; Estimated maximum stack depth 8
  1511 ;; ---------------------------------------------------------------------------------
  1512 ;; Call Graph Graphs:
  1513 ;; _main (ROOT)
  1514 ;;   _timer0_init
  1515 ;;   _delay10ms
  1516 ;;   _ser_init
  1517 ;;   _calibrate
  1518 ;;     _measure_freq
  1519 ;;       _timer0_read_ps
  1520 ;;       _buffer_init
  1521 ;;       _buffer_puts
  1522 ;;         _buffer_putch
  1523 ;;       _format_number
  1524 ;;         ___lwmod
  1525 ;;         ___lwdiv
  1526 ;;         _buffer_putch
  1527 ;;       _print_buffer
  1528 ;;         _ser_putch
  1529 ;;         _ser_puts
  1530 ;;           _ser_putch
  1531 ;;         ___lwtofl (ARG)
  1532 ;;           ___flpack
  1533 ;;           _timer0_read_ps (ARG)
  1534 ;;           _buffer_init (ARG)
  1535 ;;           _buffer_puts (ARG)
  1536 ;;             _buffer_putch
  1537 ;;           _format_number (ARG)
  1538 ;;             ___lwmod
  1539 ;;             ___lwdiv
  1540 ;;             _buffer_putch
  1541 ;;           _ser_putch (ARG)
  1542 ;;           _ser_puts (ARG)
  1543 ;;             _ser_putch
  1544 ;;       ___lwtofl (ARG)
  1545 ;;         ___flpack
  1546 ;;         _timer0_read_ps (ARG)
  1547 ;;         _buffer_init (ARG)
  1548 ;;         _buffer_puts (ARG)
  1549 ;;           _buffer_putch
  1550 ;;         _format_number (ARG)
  1551 ;;           ___lwmod
  1552 ;;           ___lwdiv
  1553 ;;           _buffer_putch
  1554 ;;         _ser_putch (ARG)
  1555 ;;         _ser_puts (ARG)
  1556 ;;           _ser_putch
  1557 ;;     ___lwtofl
  1558 ;;       ___flpack
  1559 ;;       _timer0_read_ps (ARG)
  1560 ;;       _buffer_init (ARG)
  1561 ;;       _buffer_puts (ARG)
  1562 ;;         _buffer_putch
  1563 ;;       _format_number (ARG)
  1564 ;;         ___lwmod
  1565 ;;         ___lwdiv
  1566 ;;         _buffer_putch
  1567 ;;       _ser_putch (ARG)
  1568 ;;       _ser_puts (ARG)
  1569 ;;         _ser_putch
  1570 ;;     _delay10ms
  1571 ;;     _ser_puts
  1572 ;;       _ser_putch
  1573 ;;   _ser_puts
  1574 ;;     _ser_putch
  1575 ;;   _measure_capacitance
  1576 ;;     _measure_freq
  1577 ;;       _timer0_read_ps
  1578 ;;       _buffer_init
  1579 ;;       _buffer_puts
  1580 ;;         _buffer_putch
  1581 ;;       _format_number
  1582 ;;         ___lwmod
  1583 ;;         ___lwdiv
  1584 ;;         _buffer_putch
  1585 ;;       _print_buffer
  1586 ;;         _ser_putch
  1587 ;;         _ser_puts
  1588 ;;           _ser_putch
  1589 ;;         ___lwtofl (ARG)
  1590 ;;           ___flpack
  1591 ;;           _timer0_read_ps (ARG)
  1592 ;;           _buffer_init (ARG)
  1593 ;;           _buffer_puts (ARG)
  1594 ;;             _buffer_putch
  1595 ;;           _format_number (ARG)
  1596 ;;             ___lwmod
  1597 ;;             ___lwdiv
  1598 ;;             _buffer_putch
  1599 ;;           _ser_putch (ARG)
  1600 ;;           _ser_puts (ARG)
  1601 ;;             _ser_putch
  1602 ;;       ___lwtofl (ARG)
  1603 ;;         ___flpack
  1604 ;;         _timer0_read_ps (ARG)
  1605 ;;         _buffer_init (ARG)
  1606 ;;         _buffer_puts (ARG)
  1607 ;;           _buffer_putch
  1608 ;;         _format_number (ARG)
  1609 ;;           ___lwmod
  1610 ;;           ___lwdiv
  1611 ;;           _buffer_putch
  1612 ;;         _ser_putch (ARG)
  1613 ;;         _ser_puts (ARG)
  1614 ;;           _ser_putch
  1615 ;;     ___lwtofl
  1616 ;;       ___flpack
  1617 ;;       _timer0_read_ps (ARG)
  1618 ;;       _buffer_init (ARG)
  1619 ;;       _buffer_puts (ARG)
  1620 ;;         _buffer_putch
  1621 ;;       _format_number (ARG)
  1622 ;;         ___lwmod
  1623 ;;         ___lwdiv
  1624 ;;         _buffer_putch
  1625 ;;       _ser_putch (ARG)
  1626 ;;       _ser_puts (ARG)
  1627 ;;         _ser_putch
  1628 ;;     _ser_puts
  1629 ;;       _ser_putch
  1630 ;;     _format_xint32
  1631 ;;       _buffer_putch
  1632 ;;       _format_number
  1633 ;;         ___lwmod
  1634 ;;         ___lwdiv
  1635 ;;         _buffer_putch
  1636 ;;     _buf_to_ser
  1637 ;;       _ser_put
  1638 ;;         _ser_putch
  1639 ;;     _format_double
  1640 ;;       _log10
  1641 ;;         _log
  1642 ;;           ___flge
  1643 ;;           _frexp
  1644 ;;           ___flmul
  1645 ;;             ___flpack
  1646 ;;             ___fltol (ARG)
  1647 ;;               ___flge (ARG)
  1648 ;;               _frexp (ARG)
  1649 ;;               ___flpack (ARG)
  1650 ;;             ___awtofl (ARG)
  1651 ;;               ___flpack
  1652 ;;               ___fltol (ARG)
  1653 ;;                 ___flge (ARG)
  1654 ;;                 _frexp (ARG)
  1655 ;;                 ___flpack (ARG)
  1656 ;;             ___fldiv (ARG)
  1657 ;;               ___flpack
  1658 ;;               ___fltol (ARG)
  1659 ;;                 ___flge (ARG)
  1660 ;;                 _frexp (ARG)
  1661 ;;                 ___flpack (ARG)
  1662 ;;             _frexp (ARG)
  1663 ;;           ___fladd
  1664 ;;             ___flpack
  1665 ;;             ___fltol (ARG)
  1666 ;;               ___flge (ARG)
  1667 ;;               _frexp (ARG)
  1668 ;;               ___flpack (ARG)
  1669 ;;             ___flmul (ARG)
  1670 ;;               ___flpack
  1671 ;;               ___fltol (ARG)
  1672 ;;                 ___flge (ARG)
  1673 ;;                 _frexp (ARG)
  1674 ;;                 ___flpack (ARG)
  1675 ;;               ___awtofl (ARG)
  1676 ;;                 ___flpack
  1677 ;;                 ___fltol (ARG)
  1678 ;;                   ___flge (ARG)
  1679 ;;                   _frexp (ARG)
  1680 ;;                   ___flpack (ARG)
  1681 ;;               ___fldiv (ARG)
  1682 ;;                 ___flpack
  1683 ;;                 ___fltol (ARG)
  1684 ;;                   ___flge (ARG)
  1685 ;;                   _frexp (ARG)
  1686 ;;                   ___flpack (ARG)
  1687 ;;               _frexp (ARG)
  1688 ;;             _frexp (ARG)
  1689 ;;             ___awtofl (ARG)
  1690 ;;               ___flpack
  1691 ;;               ___fltol (ARG)
  1692 ;;                 ___flge (ARG)
  1693 ;;                 _frexp (ARG)
  1694 ;;                 ___flpack (ARG)
  1695 ;;           _eval_poly
  1696 ;;             ___flmul
  1697 ;;               ___flpack
  1698 ;;               ___fltol (ARG)
  1699 ;;                 ___flge (ARG)
  1700 ;;                 _frexp (ARG)
  1701 ;;                 ___flpack (ARG)
  1702 ;;               ___awtofl (ARG)
  1703 ;;                 ___flpack
  1704 ;;                 ___fltol (ARG)
  1705 ;;                   ___flge (ARG)
  1706 ;;                   _frexp (ARG)
  1707 ;;                   ___flpack (ARG)
  1708 ;;               ___fldiv (ARG)
  1709 ;;                 ___flpack
  1710 ;;                 ___fltol (ARG)
  1711 ;;                   ___flge (ARG)
  1712 ;;                   _frexp (ARG)
  1713 ;;                   ___flpack (ARG)
  1714 ;;               _frexp (ARG)
  1715 ;;             ___fladd
  1716 ;;               ___flpack
  1717 ;;               ___fltol (ARG)
  1718 ;;                 ___flge (ARG)
  1719 ;;                 _frexp (ARG)
  1720 ;;                 ___flpack (ARG)
  1721 ;;               ___flmul (ARG)
  1722 ;;                 ___flpack
  1723 ;;                 ___fltol (ARG)
  1724 ;;                   ___flge (ARG)
  1725 ;;                   _frexp (ARG)
  1726 ;;                   ___flpack (ARG)
  1727 ;;                 ___awtofl (ARG)
  1728 ;;                   ___flpack
  1729 ;;                   ___fltol (ARG)
  1730 ;;                     ___flge (ARG)
  1731 ;;                     _frexp (ARG)
  1732 ;;                     ___flpack (ARG)
  1733 ;;                 ___fldiv (ARG)
  1734 ;;                   ___flpack
  1735 ;;                   ___fltol (ARG)
  1736 ;;                     ___flge (ARG)
  1737 ;;                     _frexp (ARG)
  1738 ;;                     ___flpack (ARG)
  1739 ;;                 _frexp (ARG)
  1740 ;;               _frexp (ARG)
  1741 ;;               ___awtofl (ARG)
  1742 ;;                 ___flpack
  1743 ;;                 ___fltol (ARG)
  1744 ;;                   ___flge (ARG)
  1745 ;;                   _frexp (ARG)
  1746 ;;                   ___flpack (ARG)
  1747 ;;             ___fltol (ARG)
  1748 ;;               ___flge (ARG)
  1749 ;;               _frexp (ARG)
  1750 ;;               ___flpack (ARG)
  1751 ;;             _ldexp (ARG)
  1752 ;;               ___flge
  1753 ;;               ___flneg
  1754 ;;               ___flmul (ARG)
  1755 ;;                 ___flpack
  1756 ;;                 ___fltol (ARG)
  1757 ;;                   ___flge (ARG)
  1758 ;;                   _frexp (ARG)
  1759 ;;                   ___flpack (ARG)
  1760 ;;                 ___awtofl (ARG)
  1761 ;;                   ___flpack
  1762 ;;                   ___fltol (ARG)
  1763 ;;                     ___flge (ARG)
  1764 ;;                     _frexp (ARG)
  1765 ;;                     ___flpack (ARG)
  1766 ;;                 ___fldiv (ARG)
  1767 ;;                   ___flpack
  1768 ;;                   ___fltol (ARG)
  1769 ;;                     ___flge (ARG)
  1770 ;;                     _frexp (ARG)
  1771 ;;                     ___flpack (ARG)
  1772 ;;                 _frexp (ARG)
  1773 ;;               ___fladd (ARG)
  1774 ;;                 ___flpack
  1775 ;;                 ___fltol (ARG)
  1776 ;;                   ___flge (ARG)
  1777 ;;                   _frexp (ARG)
  1778 ;;                   ___flpack (ARG)
  1779 ;;                 ___flmul (ARG)
  1780 ;;                   ___flpack
  1781 ;;                   ___fltol (ARG)
  1782 ;;                     ___flge (ARG)
  1783 ;;                     _frexp (ARG)
  1784 ;;                     ___flpack (ARG)
  1785 ;;                   ___awtofl (ARG)
  1786 ;;                     ___flpack
  1787 ;;                     ___fltol (ARG)
  1788 ;;                       ___flge (ARG)
  1789 ;;                       _frexp (ARG)
  1790 ;;                       ___flpack (ARG)
  1791 ;;                   ___fldiv (ARG)
  1792 ;;                     ___flpack
  1793 ;;                     ___fltol (ARG)
  1794 ;;                       ___flge (ARG)
  1795 ;;                       _frexp (ARG)
  1796 ;;                       ___flpack (ARG)
  1797 ;;                   _frexp (ARG)
  1798 ;;                 _frexp (ARG)
  1799 ;;                 ___awtofl (ARG)
  1800 ;;                   ___flpack
  1801 ;;                   ___fltol (ARG)
  1802 ;;                     ___flge (ARG)
  1803 ;;                     _frexp (ARG)
  1804 ;;                     ___flpack (ARG)
  1805 ;;           ___awtofl
  1806 ;;             ___flpack
  1807 ;;             ___fltol (ARG)
  1808 ;;               ___flge (ARG)
  1809 ;;               _frexp (ARG)
  1810 ;;               ___flpack (ARG)
  1811 ;;           ___fltol (ARG)
  1812 ;;             ___flge (ARG)
  1813 ;;             _frexp (ARG)
  1814 ;;             ___flpack (ARG)
  1815 ;;         ___flmul
  1816 ;;           ___flpack
  1817 ;;           ___fltol (ARG)
  1818 ;;             ___flge (ARG)
  1819 ;;             _frexp (ARG)
  1820 ;;             ___flpack (ARG)
  1821 ;;           ___awtofl (ARG)
  1822 ;;             ___flpack
  1823 ;;             ___fltol (ARG)
  1824 ;;               ___flge (ARG)
  1825 ;;               _frexp (ARG)
  1826 ;;               ___flpack (ARG)
  1827 ;;           ___fldiv (ARG)
  1828 ;;             ___flpack
  1829 ;;             ___fltol (ARG)
  1830 ;;               ___flge (ARG)
  1831 ;;               _frexp (ARG)
  1832 ;;               ___flpack (ARG)
  1833 ;;           _frexp (ARG)
  1834 ;;         ___fltol (ARG)
  1835 ;;           ___flge (ARG)
  1836 ;;           _frexp (ARG)
  1837 ;;           ___flpack (ARG)
  1838 ;;       ___fltol
  1839 ;;         ___flge (ARG)
  1840 ;;         _frexp (ARG)
  1841 ;;         ___flpack (ARG)
  1842 ;;       ___awtofl
  1843 ;;         ___flpack
  1844 ;;         ___fltol (ARG)
  1845 ;;           ___flge (ARG)
  1846 ;;           _frexp (ARG)
  1847 ;;           ___flpack (ARG)
  1848 ;;       _pow
  1849 ;;         ___flge
  1850 ;;         ___fltol
  1851 ;;           ___flge (ARG)
  1852 ;;           _frexp (ARG)
  1853 ;;           ___flpack (ARG)
  1854 ;;         ___lltofl
  1855 ;;           ___flpack
  1856 ;;         ___flneg
  1857 ;;         _log
  1858 ;;           ___flge
  1859 ;;           _frexp
  1860 ;;           ___flmul
  1861 ;;             ___flpack
  1862 ;;             ___fltol (ARG)
  1863 ;;               ___flge (ARG)
  1864 ;;               _frexp (ARG)
  1865 ;;               ___flpack (ARG)
  1866 ;;             ___awtofl (ARG)
  1867 ;;               ___flpack
  1868 ;;               ___fltol (ARG)
  1869 ;;                 ___flge (ARG)
  1870 ;;                 _frexp (ARG)
  1871 ;;                 ___flpack (ARG)
  1872 ;;             ___fldiv (ARG)
  1873 ;;               ___flpack
  1874 ;;               ___fltol (ARG)
  1875 ;;                 ___flge (ARG)
  1876 ;;                 _frexp (ARG)
  1877 ;;                 ___flpack (ARG)
  1878 ;;             _frexp (ARG)
  1879 ;;           ___fladd
  1880 ;;             ___flpack
  1881 ;;             ___fltol (ARG)
  1882 ;;               ___flge (ARG)
  1883 ;;               _frexp (ARG)
  1884 ;;               ___flpack (ARG)
  1885 ;;             ___flmul (ARG)
  1886 ;;               ___flpack
  1887 ;;               ___fltol (ARG)
  1888 ;;                 ___flge (ARG)
  1889 ;;                 _frexp (ARG)
  1890 ;;                 ___flpack (ARG)
  1891 ;;               ___awtofl (ARG)
  1892 ;;                 ___flpack
  1893 ;;                 ___fltol (ARG)
  1894 ;;                   ___flge (ARG)
  1895 ;;                   _frexp (ARG)
  1896 ;;                   ___flpack (ARG)
  1897 ;;               ___fldiv (ARG)
  1898 ;;                 ___flpack
  1899 ;;                 ___fltol (ARG)
  1900 ;;                   ___flge (ARG)
  1901 ;;                   _frexp (ARG)
  1902 ;;                   ___flpack (ARG)
  1903 ;;               _frexp (ARG)
  1904 ;;             _frexp (ARG)
  1905 ;;             ___awtofl (ARG)
  1906 ;;               ___flpack
  1907 ;;               ___fltol (ARG)
  1908 ;;                 ___flge (ARG)
  1909 ;;                 _frexp (ARG)
  1910 ;;                 ___flpack (ARG)
  1911 ;;           _eval_poly
  1912 ;;             ___flmul
  1913 ;;               ___flpack
  1914 ;;               ___fltol (ARG)
  1915 ;;                 ___flge (ARG)
  1916 ;;                 _frexp (ARG)
  1917 ;;                 ___flpack (ARG)
  1918 ;;               ___awtofl (ARG)
  1919 ;;                 ___flpack
  1920 ;;                 ___fltol (ARG)
  1921 ;;                   ___flge (ARG)
  1922 ;;                   _frexp (ARG)
  1923 ;;                   ___flpack (ARG)
  1924 ;;               ___fldiv (ARG)
  1925 ;;                 ___flpack
  1926 ;;                 ___fltol (ARG)
  1927 ;;                   ___flge (ARG)
  1928 ;;                   _frexp (ARG)
  1929 ;;                   ___flpack (ARG)
  1930 ;;               _frexp (ARG)
  1931 ;;             ___fladd
  1932 ;;               ___flpack
  1933 ;;               ___fltol (ARG)
  1934 ;;                 ___flge (ARG)
  1935 ;;                 _frexp (ARG)
  1936 ;;                 ___flpack (ARG)
  1937 ;;               ___flmul (ARG)
  1938 ;;                 ___flpack
  1939 ;;                 ___fltol (ARG)
  1940 ;;                   ___flge (ARG)
  1941 ;;                   _frexp (ARG)
  1942 ;;                   ___flpack (ARG)
  1943 ;;                 ___awtofl (ARG)
  1944 ;;                   ___flpack
  1945 ;;                   ___fltol (ARG)
  1946 ;;                     ___flge (ARG)
  1947 ;;                     _frexp (ARG)
  1948 ;;                     ___flpack (ARG)
  1949 ;;                 ___fldiv (ARG)
  1950 ;;                   ___flpack
  1951 ;;                   ___fltol (ARG)
  1952 ;;                     ___flge (ARG)
  1953 ;;                     _frexp (ARG)
  1954 ;;                     ___flpack (ARG)
  1955 ;;                 _frexp (ARG)
  1956 ;;               _frexp (ARG)
  1957 ;;               ___awtofl (ARG)
  1958 ;;                 ___flpack
  1959 ;;                 ___fltol (ARG)
  1960 ;;                   ___flge (ARG)
  1961 ;;                   _frexp (ARG)
  1962 ;;                   ___flpack (ARG)
  1963 ;;             ___fltol (ARG)
  1964 ;;               ___flge (ARG)
  1965 ;;               _frexp (ARG)
  1966 ;;               ___flpack (ARG)
  1967 ;;             _ldexp (ARG)
  1968 ;;               ___flge
  1969 ;;               ___flneg
  1970 ;;               ___flmul (ARG)
  1971 ;;                 ___flpack
  1972 ;;                 ___fltol (ARG)
  1973 ;;                   ___flge (ARG)
  1974 ;;                   _frexp (ARG)
  1975 ;;                   ___flpack (ARG)
  1976 ;;                 ___awtofl (ARG)
  1977 ;;                   ___flpack
  1978 ;;                   ___fltol (ARG)
  1979 ;;                     ___flge (ARG)
  1980 ;;                     _frexp (ARG)
  1981 ;;                     ___flpack (ARG)
  1982 ;;                 ___fldiv (ARG)
  1983 ;;                   ___flpack
  1984 ;;                   ___fltol (ARG)
  1985 ;;                     ___flge (ARG)
  1986 ;;                     _frexp (ARG)
  1987 ;;                     ___flpack (ARG)
  1988 ;;                 _frexp (ARG)
  1989 ;;               ___fladd (ARG)
  1990 ;;                 ___flpack
  1991 ;;                 ___fltol (ARG)
  1992 ;;                   ___flge (ARG)
  1993 ;;                   _frexp (ARG)
  1994 ;;                   ___flpack (ARG)
  1995 ;;                 ___flmul (ARG)
  1996 ;;                   ___flpack
  1997 ;;                   ___fltol (ARG)
  1998 ;;                     ___flge (ARG)
  1999 ;;                     _frexp (ARG)
  2000 ;;                     ___flpack (ARG)
  2001 ;;                   ___awtofl (ARG)
  2002 ;;                     ___flpack
  2003 ;;                     ___fltol (ARG)
  2004 ;;                       ___flge (ARG)
  2005 ;;                       _frexp (ARG)
  2006 ;;                       ___flpack (ARG)
  2007 ;;                   ___fldiv (ARG)
  2008 ;;                     ___flpack
  2009 ;;                     ___fltol (ARG)
  2010 ;;                       ___flge (ARG)
  2011 ;;                       _frexp (ARG)
  2012 ;;                       ___flpack (ARG)
  2013 ;;                   _frexp (ARG)
  2014 ;;                 _frexp (ARG)
  2015 ;;                 ___awtofl (ARG)
  2016 ;;                   ___flpack
  2017 ;;                   ___fltol (ARG)
  2018 ;;                     ___flge (ARG)
  2019 ;;                     _frexp (ARG)
  2020 ;;                     ___flpack (ARG)
  2021 ;;           ___awtofl
  2022 ;;             ___flpack
  2023 ;;             ___fltol (ARG)
  2024 ;;               ___flge (ARG)
  2025 ;;               _frexp (ARG)
  2026 ;;               ___flpack (ARG)
  2027 ;;           ___fltol (ARG)
  2028 ;;             ___flge (ARG)
  2029 ;;             _frexp (ARG)
  2030 ;;             ___flpack (ARG)
  2031 ;;         ___flmul
  2032 ;;           ___flpack
  2033 ;;           ___fltol (ARG)
  2034 ;;             ___flge (ARG)
  2035 ;;             _frexp (ARG)
  2036 ;;             ___flpack (ARG)
  2037 ;;           ___awtofl (ARG)
  2038 ;;             ___flpack
  2039 ;;             ___fltol (ARG)
  2040 ;;               ___flge (ARG)
  2041 ;;               _frexp (ARG)
  2042 ;;               ___flpack (ARG)
  2043 ;;           ___fldiv (ARG)
  2044 ;;             ___flpack
  2045 ;;             ___fltol (ARG)
  2046 ;;               ___flge (ARG)
  2047 ;;               _frexp (ARG)
  2048 ;;               ___flpack (ARG)
  2049 ;;           _frexp (ARG)
  2050 ;;         _exp
  2051 ;;           ___flge
  2052 ;;           ___flneg
  2053 ;;           ___flmul
  2054 ;;             ___flpack
  2055 ;;             ___fltol (ARG)
  2056 ;;               ___flge (ARG)
  2057 ;;               _frexp (ARG)
  2058 ;;               ___flpack (ARG)
  2059 ;;             ___awtofl (ARG)
  2060 ;;               ___flpack
  2061 ;;               ___fltol (ARG)
  2062 ;;                 ___flge (ARG)
  2063 ;;                 _frexp (ARG)
  2064 ;;                 ___flpack (ARG)
  2065 ;;             ___fldiv (ARG)
  2066 ;;               ___flpack
  2067 ;;               ___fltol (ARG)
  2068 ;;                 ___flge (ARG)
  2069 ;;                 _frexp (ARG)
  2070 ;;                 ___flpack (ARG)
  2071 ;;             _frexp (ARG)
  2072 ;;           _floor
  2073 ;;             _frexp
  2074 ;;             ___flge
  2075 ;;             ___fltol
  2076 ;;               ___flge (ARG)
  2077 ;;               _frexp (ARG)
  2078 ;;               ___flpack (ARG)
  2079 ;;             ___altofl
  2080 ;;               ___flpack
  2081 ;;               ___fltol (ARG)
  2082 ;;                 ___flge (ARG)
  2083 ;;                 _frexp (ARG)
  2084 ;;                 ___flpack (ARG)
  2085 ;;             ___fladd
  2086 ;;               ___flpack
  2087 ;;               ___fltol (ARG)
  2088 ;;                 ___flge (ARG)
  2089 ;;                 _frexp (ARG)
  2090 ;;                 ___flpack (ARG)
  2091 ;;               ___flmul (ARG)
  2092 ;;                 ___flpack
  2093 ;;                 ___fltol (ARG)
  2094 ;;                   ___flge (ARG)
  2095 ;;                   _frexp (ARG)
  2096 ;;                   ___flpack (ARG)
  2097 ;;                 ___awtofl (ARG)
  2098 ;;                   ___flpack
  2099 ;;                   ___fltol (ARG)
  2100 ;;                     ___flge (ARG)
  2101 ;;                     _frexp (ARG)
  2102 ;;                     ___flpack (ARG)
  2103 ;;                 ___fldiv (ARG)
  2104 ;;                   ___flpack
  2105 ;;                   ___fltol (ARG)
  2106 ;;                     ___flge (ARG)
  2107 ;;                     _frexp (ARG)
  2108 ;;                     ___flpack (ARG)
  2109 ;;                 _frexp (ARG)
  2110 ;;               _frexp (ARG)
  2111 ;;               ___awtofl (ARG)
  2112 ;;                 ___flpack
  2113 ;;                 ___fltol (ARG)
  2114 ;;                   ___flge (ARG)
  2115 ;;                   _frexp (ARG)
  2116 ;;                   ___flpack (ARG)
  2117 ;;             ___fldiv (ARG)
  2118 ;;               ___flpack
  2119 ;;               ___fltol (ARG)
  2120 ;;                 ___flge (ARG)
  2121 ;;                 _frexp (ARG)
  2122 ;;                 ___flpack (ARG)
  2123 ;;           ___fltol
  2124 ;;             ___flge (ARG)
  2125 ;;             _frexp (ARG)
  2126 ;;             ___flpack (ARG)
  2127 ;;           ___awtofl
  2128 ;;             ___flpack
  2129 ;;             ___fltol (ARG)
  2130 ;;               ___flge (ARG)
  2131 ;;               _frexp (ARG)
  2132 ;;               ___flpack (ARG)
  2133 ;;           ___flsub
  2134 ;;             ___fladd
  2135 ;;               ___flpack
  2136 ;;               ___fltol (ARG)
  2137 ;;                 ___flge (ARG)
  2138 ;;                 _frexp (ARG)
  2139 ;;                 ___flpack (ARG)
  2140 ;;               ___flmul (ARG)
  2141 ;;                 ___flpack
  2142 ;;                 ___fltol (ARG)
  2143 ;;                   ___flge (ARG)
  2144 ;;                   _frexp (ARG)
  2145 ;;                   ___flpack (ARG)
  2146 ;;                 ___awtofl (ARG)
  2147 ;;                   ___flpack
  2148 ;;                   ___fltol (ARG)
  2149 ;;                     ___flge (ARG)
  2150 ;;                     _frexp (ARG)
  2151 ;;                     ___flpack (ARG)
  2152 ;;                 ___fldiv (ARG)
  2153 ;;                   ___flpack
  2154 ;;                   ___fltol (ARG)
  2155 ;;                     ___flge (ARG)
  2156 ;;                     _frexp (ARG)
  2157 ;;                     ___flpack (ARG)
  2158 ;;                 _frexp (ARG)
  2159 ;;               _frexp (ARG)
  2160 ;;               ___awtofl (ARG)
  2161 ;;                 ___flpack
  2162 ;;                 ___fltol (ARG)
  2163 ;;                   ___flge (ARG)
  2164 ;;                   _frexp (ARG)
  2165 ;;                   ___flpack (ARG)
  2166 ;;             ___flmul (ARG)
  2167 ;;               ___flpack
  2168 ;;               ___fltol (ARG)
  2169 ;;                 ___flge (ARG)
  2170 ;;                 _frexp (ARG)
  2171 ;;                 ___flpack (ARG)
  2172 ;;               ___awtofl (ARG)
  2173 ;;                 ___flpack
  2174 ;;                 ___fltol (ARG)
  2175 ;;                   ___flge (ARG)
  2176 ;;                   _frexp (ARG)
  2177 ;;                   ___flpack (ARG)
  2178 ;;               ___fldiv (ARG)
  2179 ;;                 ___flpack
  2180 ;;                 ___fltol (ARG)
  2181 ;;                   ___flge (ARG)
  2182 ;;                   _frexp (ARG)
  2183 ;;                   ___flpack (ARG)
  2184 ;;               _frexp (ARG)
  2185 ;;             ___awtofl (ARG)
  2186 ;;               ___flpack
  2187 ;;               ___fltol (ARG)
  2188 ;;                 ___flge (ARG)
  2189 ;;                 _frexp (ARG)
  2190 ;;                 ___flpack (ARG)
  2191 ;;           _eval_poly
  2192 ;;             ___flmul
  2193 ;;               ___flpack
  2194 ;;               ___fltol (ARG)
  2195 ;;                 ___flge (ARG)
  2196 ;;                 _frexp (ARG)
  2197 ;;                 ___flpack (ARG)
  2198 ;;               ___awtofl (ARG)
  2199 ;;                 ___flpack
  2200 ;;                 ___fltol (ARG)
  2201 ;;                   ___flge (ARG)
  2202 ;;                   _frexp (ARG)
  2203 ;;                   ___flpack (ARG)
  2204 ;;               ___fldiv (ARG)
  2205 ;;                 ___flpack
  2206 ;;                 ___fltol (ARG)
  2207 ;;                   ___flge (ARG)
  2208 ;;                   _frexp (ARG)
  2209 ;;                   ___flpack (ARG)
  2210 ;;               _frexp (ARG)
  2211 ;;             ___fladd
  2212 ;;               ___flpack
  2213 ;;               ___fltol (ARG)
  2214 ;;                 ___flge (ARG)
  2215 ;;                 _frexp (ARG)
  2216 ;;                 ___flpack (ARG)
  2217 ;;               ___flmul (ARG)
  2218 ;;                 ___flpack
  2219 ;;                 ___fltol (ARG)
  2220 ;;                   ___flge (ARG)
  2221 ;;                   _frexp (ARG)
  2222 ;;                   ___flpack (ARG)
  2223 ;;                 ___awtofl (ARG)
  2224 ;;                   ___flpack
  2225 ;;                   ___fltol (ARG)
  2226 ;;                     ___flge (ARG)
  2227 ;;                     _frexp (ARG)
  2228 ;;                     ___flpack (ARG)
  2229 ;;                 ___fldiv (ARG)
  2230 ;;                   ___flpack
  2231 ;;                   ___fltol (ARG)
  2232 ;;                     ___flge (ARG)
  2233 ;;                     _frexp (ARG)
  2234 ;;                     ___flpack (ARG)
  2235 ;;                 _frexp (ARG)
  2236 ;;               _frexp (ARG)
  2237 ;;               ___awtofl (ARG)
  2238 ;;                 ___flpack
  2239 ;;                 ___fltol (ARG)
  2240 ;;                   ___flge (ARG)
  2241 ;;                   _frexp (ARG)
  2242 ;;                   ___flpack (ARG)
  2243 ;;             ___fltol (ARG)
  2244 ;;               ___flge (ARG)
  2245 ;;               _frexp (ARG)
  2246 ;;               ___flpack (ARG)
  2247 ;;             _ldexp (ARG)
  2248 ;;               ___flge
  2249 ;;               ___flneg
  2250 ;;               ___flmul (ARG)
  2251 ;;                 ___flpack
  2252 ;;                 ___fltol (ARG)
  2253 ;;                   ___flge (ARG)
  2254 ;;                   _frexp (ARG)
  2255 ;;                   ___flpack (ARG)
  2256 ;;                 ___awtofl (ARG)
  2257 ;;                   ___flpack
  2258 ;;                   ___fltol (ARG)
  2259 ;;                     ___flge (ARG)
  2260 ;;                     _frexp (ARG)
  2261 ;;                     ___flpack (ARG)
  2262 ;;                 ___fldiv (ARG)
  2263 ;;                   ___flpack
  2264 ;;                   ___fltol (ARG)
  2265 ;;                     ___flge (ARG)
  2266 ;;                     _frexp (ARG)
  2267 ;;                     ___flpack (ARG)
  2268 ;;                 _frexp (ARG)
  2269 ;;               ___fladd (ARG)
  2270 ;;                 ___flpack
  2271 ;;                 ___fltol (ARG)
  2272 ;;                   ___flge (ARG)
  2273 ;;                   _frexp (ARG)
  2274 ;;                   ___flpack (ARG)
  2275 ;;                 ___flmul (ARG)
  2276 ;;                   ___flpack
  2277 ;;                   ___fltol (ARG)
  2278 ;;                     ___flge (ARG)
  2279 ;;                     _frexp (ARG)
  2280 ;;                     ___flpack (ARG)
  2281 ;;                   ___awtofl (ARG)
  2282 ;;                     ___flpack
  2283 ;;                     ___fltol (ARG)
  2284 ;;                       ___flge (ARG)
  2285 ;;                       _frexp (ARG)
  2286 ;;                       ___flpack (ARG)
  2287 ;;                   ___fldiv (ARG)
  2288 ;;                     ___flpack
  2289 ;;                     ___fltol (ARG)
  2290 ;;                       ___flge (ARG)
  2291 ;;                       _frexp (ARG)
  2292 ;;                       ___flpack (ARG)
  2293 ;;                   _frexp (ARG)
  2294 ;;                 _frexp (ARG)
  2295 ;;                 ___awtofl (ARG)
  2296 ;;                   ___flpack
  2297 ;;                   ___fltol (ARG)
  2298 ;;                     ___flge (ARG)
  2299 ;;                     _frexp (ARG)
  2300 ;;                     ___flpack (ARG)
  2301 ;;           _ldexp
  2302 ;;             ___flge
  2303 ;;             ___flneg
  2304 ;;             ___flmul (ARG)
  2305 ;;               ___flpack
  2306 ;;               ___fltol (ARG)
  2307 ;;                 ___flge (ARG)
  2308 ;;                 _frexp (ARG)
  2309 ;;                 ___flpack (ARG)
  2310 ;;               ___awtofl (ARG)
  2311 ;;                 ___flpack
  2312 ;;                 ___fltol (ARG)
  2313 ;;                   ___flge (ARG)
  2314 ;;                   _frexp (ARG)
  2315 ;;                   ___flpack (ARG)
  2316 ;;               ___fldiv (ARG)
  2317 ;;                 ___flpack
  2318 ;;                 ___fltol (ARG)
  2319 ;;                   ___flge (ARG)
  2320 ;;                   _frexp (ARG)
  2321 ;;                   ___flpack (ARG)
  2322 ;;               _frexp (ARG)
  2323 ;;             ___fladd (ARG)
  2324 ;;               ___flpack
  2325 ;;               ___fltol (ARG)
  2326 ;;                 ___flge (ARG)
  2327 ;;                 _frexp (ARG)
  2328 ;;                 ___flpack (ARG)
  2329 ;;               ___flmul (ARG)
  2330 ;;                 ___flpack
  2331 ;;                 ___fltol (ARG)
  2332 ;;                   ___flge (ARG)
  2333 ;;                   _frexp (ARG)
  2334 ;;                   ___flpack (ARG)
  2335 ;;                 ___awtofl (ARG)
  2336 ;;                   ___flpack
  2337 ;;                   ___fltol (ARG)
  2338 ;;                     ___flge (ARG)
  2339 ;;                     _frexp (ARG)
  2340 ;;                     ___flpack (ARG)
  2341 ;;                 ___fldiv (ARG)
  2342 ;;                   ___flpack
  2343 ;;                   ___fltol (ARG)
  2344 ;;                     ___flge (ARG)
  2345 ;;                     _frexp (ARG)
  2346 ;;                     ___flpack (ARG)
  2347 ;;                 _frexp (ARG)
  2348 ;;               _frexp (ARG)
  2349 ;;               ___awtofl (ARG)
  2350 ;;                 ___flpack
  2351 ;;                 ___fltol (ARG)
  2352 ;;                   ___flge (ARG)
  2353 ;;                   _frexp (ARG)
  2354 ;;                   ___flpack (ARG)
  2355 ;;           ___fldiv
  2356 ;;             ___flpack
  2357 ;;             ___fltol (ARG)
  2358 ;;               ___flge (ARG)
  2359 ;;               _frexp (ARG)
  2360 ;;               ___flpack (ARG)
  2361 ;;           _log (ARG)
  2362 ;;             ___flge
  2363 ;;             _frexp
  2364 ;;             ___flmul
  2365 ;;               ___flpack
  2366 ;;               ___fltol (ARG)
  2367 ;;                 ___flge (ARG)
  2368 ;;                 _frexp (ARG)
  2369 ;;                 ___flpack (ARG)
  2370 ;;               ___awtofl (ARG)
  2371 ;;                 ___flpack
  2372 ;;                 ___fltol (ARG)
  2373 ;;                   ___flge (ARG)
  2374 ;;                   _frexp (ARG)
  2375 ;;                   ___flpack (ARG)
  2376 ;;               ___fldiv (ARG)
  2377 ;;                 ___flpack
  2378 ;;                 ___fltol (ARG)
  2379 ;;                   ___flge (ARG)
  2380 ;;                   _frexp (ARG)
  2381 ;;                   ___flpack (ARG)
  2382 ;;               _frexp (ARG)
  2383 ;;             ___fladd
  2384 ;;               ___flpack
  2385 ;;               ___fltol (ARG)
  2386 ;;                 ___flge (ARG)
  2387 ;;                 _frexp (ARG)
  2388 ;;                 ___flpack (ARG)
  2389 ;;               ___flmul (ARG)
  2390 ;;                 ___flpack
  2391 ;;                 ___fltol (ARG)
  2392 ;;                   ___flge (ARG)
  2393 ;;                   _frexp (ARG)
  2394 ;;                   ___flpack (ARG)
  2395 ;;                 ___awtofl (ARG)
  2396 ;;                   ___flpack
  2397 ;;                   ___fltol (ARG)
  2398 ;;                     ___flge (ARG)
  2399 ;;                     _frexp (ARG)
  2400 ;;                     ___flpack (ARG)
  2401 ;;                 ___fldiv (ARG)
  2402 ;;                   ___flpack
  2403 ;;                   ___fltol (ARG)
  2404 ;;                     ___flge (ARG)
  2405 ;;                     _frexp (ARG)
  2406 ;;                     ___flpack (ARG)
  2407 ;;                 _frexp (ARG)
  2408 ;;               _frexp (ARG)
  2409 ;;               ___awtofl (ARG)
  2410 ;;                 ___flpack
  2411 ;;                 ___fltol (ARG)
  2412 ;;                   ___flge (ARG)
  2413 ;;                   _frexp (ARG)
  2414 ;;                   ___flpack (ARG)
  2415 ;;             _eval_poly
  2416 ;;               ___flmul
  2417 ;;                 ___flpack
  2418 ;;                 ___fltol (ARG)
  2419 ;;                   ___flge (ARG)
  2420 ;;                   _frexp (ARG)
  2421 ;;                   ___flpack (ARG)
  2422 ;;                 ___awtofl (ARG)
  2423 ;;                   ___flpack
  2424 ;;                   ___fltol (ARG)
  2425 ;;                     ___flge (ARG)
  2426 ;;                     _frexp (ARG)
  2427 ;;                     ___flpack (ARG)
  2428 ;;                 ___fldiv (ARG)
  2429 ;;                   ___flpack
  2430 ;;                   ___fltol (ARG)
  2431 ;;                     ___flge (ARG)
  2432 ;;                     _frexp (ARG)
  2433 ;;                     ___flpack (ARG)
  2434 ;;                 _frexp (ARG)
  2435 ;;               ___fladd
  2436 ;;                 ___flpack
  2437 ;;                 ___fltol (ARG)
  2438 ;;                   ___flge (ARG)
  2439 ;;                   _frexp (ARG)
  2440 ;;                   ___flpack (ARG)
  2441 ;;                 ___flmul (ARG)
  2442 ;;                   ___flpack
  2443 ;;                   ___fltol (ARG)
  2444 ;;                     ___flge (ARG)
  2445 ;;                     _frexp (ARG)
  2446 ;;                     ___flpack (ARG)
  2447 ;;                   ___awtofl (ARG)
  2448 ;;                     ___flpack
  2449 ;;                     ___fltol (ARG)
  2450 ;;                       ___flge (ARG)
  2451 ;;                       _frexp (ARG)
  2452 ;;                       ___flpack (ARG)
  2453 ;;                   ___fldiv (ARG)
  2454 ;;                     ___flpack
  2455 ;;                     ___fltol (ARG)
  2456 ;;                       ___flge (ARG)
  2457 ;;                       _frexp (ARG)
  2458 ;;                       ___flpack (ARG)
  2459 ;;                   _frexp (ARG)
  2460 ;;                 _frexp (ARG)
  2461 ;;                 ___awtofl (ARG)
  2462 ;;                   ___flpack
  2463 ;;                   ___fltol (ARG)
  2464 ;;                     ___flge (ARG)
  2465 ;;                     _frexp (ARG)
  2466 ;;                     ___flpack (ARG)
  2467 ;;               ___fltol (ARG)
  2468 ;;                 ___flge (ARG)
  2469 ;;                 _frexp (ARG)
  2470 ;;                 ___flpack (ARG)
  2471 ;;               _ldexp (ARG)
  2472 ;;                 ___flge
  2473 ;;                 ___flneg
  2474 ;;                 ___flmul (ARG)
  2475 ;;                   ___flpack
  2476 ;;                   ___fltol (ARG)
  2477 ;;                     ___flge (ARG)
  2478 ;;                     _frexp (ARG)
  2479 ;;                     ___flpack (ARG)
  2480 ;;                   ___awtofl (ARG)
  2481 ;;                     ___flpack
  2482 ;;                     ___fltol (ARG)
  2483 ;;                       ___flge (ARG)
  2484 ;;                       _frexp (ARG)
  2485 ;;                       ___flpack (ARG)
  2486 ;;                   ___fldiv (ARG)
  2487 ;;                     ___flpack
  2488 ;;                     ___fltol (ARG)
  2489 ;;                       ___flge (ARG)
  2490 ;;                       _frexp (ARG)
  2491 ;;                       ___flpack (ARG)
  2492 ;;                   _frexp (ARG)
  2493 ;;                 ___fladd (ARG)
  2494 ;;                   ___flpack
  2495 ;;                   ___fltol (ARG)
  2496 ;;                     ___flge (ARG)
  2497 ;;                     _frexp (ARG)
  2498 ;;                     ___flpack (ARG)
  2499 ;;                   ___flmul (ARG)
  2500 ;;                     ___flpack
  2501 ;;                     ___fltol (ARG)
  2502 ;;                       ___flge (ARG)
  2503 ;;                       _frexp (ARG)
  2504 ;;                       ___flpack (ARG)
  2505 ;;                     ___awtofl (ARG)
  2506 ;;                       ___flpack
  2507 ;;                       ___fltol (ARG)
  2508 ;;                         ___flge (ARG)
  2509 ;;                         _frexp (ARG)
  2510 ;;                         ___flpack (ARG)
  2511 ;;                     ___fldiv (ARG)
  2512 ;;                       ___flpack
  2513 ;;                       ___fltol (ARG)
  2514 ;;                         ___flge (ARG)
  2515 ;;                         _frexp (ARG)
  2516 ;;                         ___flpack (ARG)
  2517 ;;                     _frexp (ARG)
  2518 ;;                   _frexp (ARG)
  2519 ;;                   ___awtofl (ARG)
  2520 ;;                     ___flpack
  2521 ;;                     ___fltol (ARG)
  2522 ;;                       ___flge (ARG)
  2523 ;;                       _frexp (ARG)
  2524 ;;                       ___flpack (ARG)
  2525 ;;             ___awtofl
  2526 ;;               ___flpack
  2527 ;;               ___fltol (ARG)
  2528 ;;                 ___flge (ARG)
  2529 ;;                 _frexp (ARG)
  2530 ;;                 ___flpack (ARG)
  2531 ;;             ___fltol (ARG)
  2532 ;;               ___flge (ARG)
  2533 ;;               _frexp (ARG)
  2534 ;;               ___flpack (ARG)
  2535 ;;       ___fldiv
  2536 ;;         ___flpack
  2537 ;;         ___fltol (ARG)
  2538 ;;           ___flge (ARG)
  2539 ;;           _frexp (ARG)
  2540 ;;           ___flpack (ARG)
  2541 ;;       _floor
  2542 ;;         _frexp
  2543 ;;         ___flge
  2544 ;;         ___fltol
  2545 ;;           ___flge (ARG)
  2546 ;;           _frexp (ARG)
  2547 ;;           ___flpack (ARG)
  2548 ;;         ___altofl
  2549 ;;           ___flpack
  2550 ;;           ___fltol (ARG)
  2551 ;;             ___flge (ARG)
  2552 ;;             _frexp (ARG)
  2553 ;;             ___flpack (ARG)
  2554 ;;         ___fladd
  2555 ;;           ___flpack
  2556 ;;           ___fltol (ARG)
  2557 ;;             ___flge (ARG)
  2558 ;;             _frexp (ARG)
  2559 ;;             ___flpack (ARG)
  2560 ;;           ___flmul (ARG)
  2561 ;;             ___flpack
  2562 ;;             ___fltol (ARG)
  2563 ;;               ___flge (ARG)
  2564 ;;               _frexp (ARG)
  2565 ;;               ___flpack (ARG)
  2566 ;;             ___awtofl (ARG)
  2567 ;;               ___flpack
  2568 ;;               ___fltol (ARG)
  2569 ;;                 ___flge (ARG)
  2570 ;;                 _frexp (ARG)
  2571 ;;                 ___flpack (ARG)
  2572 ;;             ___fldiv (ARG)
  2573 ;;               ___flpack
  2574 ;;               ___fltol (ARG)
  2575 ;;                 ___flge (ARG)
  2576 ;;                 _frexp (ARG)
  2577 ;;                 ___flpack (ARG)
  2578 ;;             _frexp (ARG)
  2579 ;;           _frexp (ARG)
  2580 ;;           ___awtofl (ARG)
  2581 ;;             ___flpack
  2582 ;;             ___fltol (ARG)
  2583 ;;               ___flge (ARG)
  2584 ;;               _frexp (ARG)
  2585 ;;               ___flpack (ARG)
  2586 ;;         ___fldiv (ARG)
  2587 ;;           ___flpack
  2588 ;;           ___fltol (ARG)
  2589 ;;             ___flge (ARG)
  2590 ;;             _frexp (ARG)
  2591 ;;             ___flpack (ARG)
  2592 ;;       ___flmul
  2593 ;;         ___flpack
  2594 ;;         ___fltol (ARG)
  2595 ;;           ___flge (ARG)
  2596 ;;           _frexp (ARG)
  2597 ;;           ___flpack (ARG)
  2598 ;;         ___awtofl (ARG)
  2599 ;;           ___flpack
  2600 ;;           ___fltol (ARG)
  2601 ;;             ___flge (ARG)
  2602 ;;             _frexp (ARG)
  2603 ;;             ___flpack (ARG)
  2604 ;;         ___fldiv (ARG)
  2605 ;;           ___flpack
  2606 ;;           ___fltol (ARG)
  2607 ;;             ___flge (ARG)
  2608 ;;             _frexp (ARG)
  2609 ;;             ___flpack (ARG)
  2610 ;;         _frexp (ARG)
  2611 ;;       ___flsub
  2612 ;;         ___fladd
  2613 ;;           ___flpack
  2614 ;;           ___fltol (ARG)
  2615 ;;             ___flge (ARG)
  2616 ;;             _frexp (ARG)
  2617 ;;             ___flpack (ARG)
  2618 ;;           ___flmul (ARG)
  2619 ;;             ___flpack
  2620 ;;             ___fltol (ARG)
  2621 ;;               ___flge (ARG)
  2622 ;;               _frexp (ARG)
  2623 ;;               ___flpack (ARG)
  2624 ;;             ___awtofl (ARG)
  2625 ;;               ___flpack
  2626 ;;               ___fltol (ARG)
  2627 ;;                 ___flge (ARG)
  2628 ;;                 _frexp (ARG)
  2629 ;;                 ___flpack (ARG)
  2630 ;;             ___fldiv (ARG)
  2631 ;;               ___flpack
  2632 ;;               ___fltol (ARG)
  2633 ;;                 ___flge (ARG)
  2634 ;;                 _frexp (ARG)
  2635 ;;                 ___flpack (ARG)
  2636 ;;             _frexp (ARG)
  2637 ;;           _frexp (ARG)
  2638 ;;           ___awtofl (ARG)
  2639 ;;             ___flpack
  2640 ;;             ___fltol (ARG)
  2641 ;;               ___flge (ARG)
  2642 ;;               _frexp (ARG)
  2643 ;;               ___flpack (ARG)
  2644 ;;         ___flmul (ARG)
  2645 ;;           ___flpack
  2646 ;;           ___fltol (ARG)
  2647 ;;             ___flge (ARG)
  2648 ;;             _frexp (ARG)
  2649 ;;             ___flpack (ARG)
  2650 ;;           ___awtofl (ARG)
  2651 ;;             ___flpack
  2652 ;;             ___fltol (ARG)
  2653 ;;               ___flge (ARG)
  2654 ;;               _frexp (ARG)
  2655 ;;               ___flpack (ARG)
  2656 ;;           ___fldiv (ARG)
  2657 ;;             ___flpack
  2658 ;;             ___fltol (ARG)
  2659 ;;               ___flge (ARG)
  2660 ;;               _frexp (ARG)
  2661 ;;               ___flpack (ARG)
  2662 ;;           _frexp (ARG)
  2663 ;;         ___awtofl (ARG)
  2664 ;;           ___flpack
  2665 ;;           ___fltol (ARG)
  2666 ;;             ___flge (ARG)
  2667 ;;             _frexp (ARG)
  2668 ;;             ___flpack (ARG)
  2669 ;;       _buffer_putch
  2670 ;;       ___flge
  2671 ;;     _ser_putch
  2672 ;;     ___flge
  2673 ;;     ___flmul
  2674 ;;       ___flpack
  2675 ;;       ___fltol (ARG)
  2676 ;;         ___flge (ARG)
  2677 ;;         _frexp (ARG)
  2678 ;;         ___flpack (ARG)
  2679 ;;       ___awtofl (ARG)
  2680 ;;         ___flpack
  2681 ;;         ___fltol (ARG)
  2682 ;;           ___flge (ARG)
  2683 ;;           _frexp (ARG)
  2684 ;;           ___flpack (ARG)
  2685 ;;       ___fldiv (ARG)
  2686 ;;         ___flpack
  2687 ;;         ___fltol (ARG)
  2688 ;;           ___flge (ARG)
  2689 ;;           _frexp (ARG)
  2690 ;;           ___flpack (ARG)
  2691 ;;       _frexp (ARG)
  2692 ;;     ___flsub
  2693 ;;       ___fladd
  2694 ;;         ___flpack
  2695 ;;         ___fltol (ARG)
  2696 ;;           ___flge (ARG)
  2697 ;;           _frexp (ARG)
  2698 ;;           ___flpack (ARG)
  2699 ;;         ___flmul (ARG)
  2700 ;;           ___flpack
  2701 ;;           ___fltol (ARG)
  2702 ;;             ___flge (ARG)
  2703 ;;             _frexp (ARG)
  2704 ;;             ___flpack (ARG)
  2705 ;;           ___awtofl (ARG)
  2706 ;;             ___flpack
  2707 ;;             ___fltol (ARG)
  2708 ;;               ___flge (ARG)
  2709 ;;               _frexp (ARG)
  2710 ;;               ___flpack (ARG)
  2711 ;;           ___fldiv (ARG)
  2712 ;;             ___flpack
  2713 ;;             ___fltol (ARG)
  2714 ;;               ___flge (ARG)
  2715 ;;               _frexp (ARG)
  2716 ;;               ___flpack (ARG)
  2717 ;;           _frexp (ARG)
  2718 ;;         _frexp (ARG)
  2719 ;;         ___awtofl (ARG)
  2720 ;;           ___flpack
  2721 ;;           ___fltol (ARG)
  2722 ;;             ___flge (ARG)
  2723 ;;             _frexp (ARG)
  2724 ;;             ___flpack (ARG)
  2725 ;;       ___flmul (ARG)
  2726 ;;         ___flpack
  2727 ;;         ___fltol (ARG)
  2728 ;;           ___flge (ARG)
  2729 ;;           _frexp (ARG)
  2730 ;;           ___flpack (ARG)
  2731 ;;         ___awtofl (ARG)
  2732 ;;           ___flpack
  2733 ;;           ___fltol (ARG)
  2734 ;;             ___flge (ARG)
  2735 ;;             _frexp (ARG)
  2736 ;;             ___flpack (ARG)
  2737 ;;         ___fldiv (ARG)
  2738 ;;           ___flpack
  2739 ;;           ___fltol (ARG)
  2740 ;;             ___flge (ARG)
  2741 ;;             _frexp (ARG)
  2742 ;;             ___flpack (ARG)
  2743 ;;         _frexp (ARG)
  2744 ;;       ___awtofl (ARG)
  2745 ;;         ___flpack
  2746 ;;         ___fltol (ARG)
  2747 ;;           ___flge (ARG)
  2748 ;;           _frexp (ARG)
  2749 ;;           ___flpack (ARG)
  2750 ;;     ___fldiv
  2751 ;;       ___flpack
  2752 ;;       ___fltol (ARG)
  2753 ;;         ___flge (ARG)
  2754 ;;         _frexp (ARG)
  2755 ;;         ___flpack (ARG)
  2756 ;;     ___fltol
  2757 ;;       ___flge (ARG)
  2758 ;;       _frexp (ARG)
  2759 ;;       ___flpack (ARG)
  2760 ;;     _print_reading
  2761 ;;     _print_unit
  2762 ;;   _measure_inductance
  2763 ;;     _measure_freq
  2764 ;;       _timer0_read_ps
  2765 ;;       _buffer_init
  2766 ;;       _buffer_puts
  2767 ;;         _buffer_putch
  2768 ;;       _format_number
  2769 ;;         ___lwmod
  2770 ;;         ___lwdiv
  2771 ;;         _buffer_putch
  2772 ;;       _print_buffer
  2773 ;;         _ser_putch
  2774 ;;         _ser_puts
  2775 ;;           _ser_putch
  2776 ;;         ___lwtofl (ARG)
  2777 ;;           ___flpack
  2778 ;;           _timer0_read_ps (ARG)
  2779 ;;           _buffer_init (ARG)
  2780 ;;           _buffer_puts (ARG)
  2781 ;;             _buffer_putch
  2782 ;;           _format_number (ARG)
  2783 ;;             ___lwmod
  2784 ;;             ___lwdiv
  2785 ;;             _buffer_putch
  2786 ;;           _ser_putch (ARG)
  2787 ;;           _ser_puts (ARG)
  2788 ;;             _ser_putch
  2789 ;;       ___lwtofl (ARG)
  2790 ;;         ___flpack
  2791 ;;         _timer0_read_ps (ARG)
  2792 ;;         _buffer_init (ARG)
  2793 ;;         _buffer_puts (ARG)
  2794 ;;           _buffer_putch
  2795 ;;         _format_number (ARG)
  2796 ;;           ___lwmod
  2797 ;;           ___lwdiv
  2798 ;;           _buffer_putch
  2799 ;;         _ser_putch (ARG)
  2800 ;;         _ser_puts (ARG)
  2801 ;;           _ser_putch
  2802 ;;     ___lwtofl
  2803 ;;       ___flpack
  2804 ;;       _timer0_read_ps (ARG)
  2805 ;;       _buffer_init (ARG)
  2806 ;;       _buffer_puts (ARG)
  2807 ;;         _buffer_putch
  2808 ;;       _format_number (ARG)
  2809 ;;         ___lwmod
  2810 ;;         ___lwdiv
  2811 ;;         _buffer_putch
  2812 ;;       _ser_putch (ARG)
  2813 ;;       _ser_puts (ARG)
  2814 ;;         _ser_putch
  2815 ;;     ___flge
  2816 ;;     ___flsub
  2817 ;;       ___fladd
  2818 ;;         ___flpack
  2819 ;;         ___fltol (ARG)
  2820 ;;           ___flge (ARG)
  2821 ;;           _frexp (ARG)
  2822 ;;           ___flpack (ARG)
  2823 ;;         ___flmul (ARG)
  2824 ;;           ___flpack
  2825 ;;           ___fltol (ARG)
  2826 ;;             ___flge (ARG)
  2827 ;;             _frexp (ARG)
  2828 ;;             ___flpack (ARG)
  2829 ;;           ___awtofl (ARG)
  2830 ;;             ___flpack
  2831 ;;             ___fltol (ARG)
  2832 ;;               ___flge (ARG)
  2833 ;;               _frexp (ARG)
  2834 ;;               ___flpack (ARG)
  2835 ;;           ___fldiv (ARG)
  2836 ;;             ___flpack
  2837 ;;             ___fltol (ARG)
  2838 ;;               ___flge (ARG)
  2839 ;;               _frexp (ARG)
  2840 ;;               ___flpack (ARG)
  2841 ;;           _frexp (ARG)
  2842 ;;         _frexp (ARG)
  2843 ;;         ___awtofl (ARG)
  2844 ;;           ___flpack
  2845 ;;           ___fltol (ARG)
  2846 ;;             ___flge (ARG)
  2847 ;;             _frexp (ARG)
  2848 ;;             ___flpack (ARG)
  2849 ;;       ___flmul (ARG)
  2850 ;;         ___flpack
  2851 ;;         ___fltol (ARG)
  2852 ;;           ___flge (ARG)
  2853 ;;           _frexp (ARG)
  2854 ;;           ___flpack (ARG)
  2855 ;;         ___awtofl (ARG)
  2856 ;;           ___flpack
  2857 ;;           ___fltol (ARG)
  2858 ;;             ___flge (ARG)
  2859 ;;             _frexp (ARG)
  2860 ;;             ___flpack (ARG)
  2861 ;;         ___fldiv (ARG)
  2862 ;;           ___flpack
  2863 ;;           ___fltol (ARG)
  2864 ;;             ___flge (ARG)
  2865 ;;             _frexp (ARG)
  2866 ;;             ___flpack (ARG)
  2867 ;;         _frexp (ARG)
  2868 ;;       ___awtofl (ARG)
  2869 ;;         ___flpack
  2870 ;;         ___fltol (ARG)
  2871 ;;           ___flge (ARG)
  2872 ;;           _frexp (ARG)
  2873 ;;           ___flpack (ARG)
  2874 ;;     ___flmul
  2875 ;;       ___flpack
  2876 ;;       ___fltol (ARG)
  2877 ;;         ___flge (ARG)
  2878 ;;         _frexp (ARG)
  2879 ;;         ___flpack (ARG)
  2880 ;;       ___awtofl (ARG)
  2881 ;;         ___flpack
  2882 ;;         ___fltol (ARG)
  2883 ;;           ___flge (ARG)
  2884 ;;           _frexp (ARG)
  2885 ;;           ___flpack (ARG)
  2886 ;;       ___fldiv (ARG)
  2887 ;;         ___flpack
  2888 ;;         ___fltol (ARG)
  2889 ;;           ___flge (ARG)
  2890 ;;           _frexp (ARG)
  2891 ;;           ___flpack (ARG)
  2892 ;;       _frexp (ARG)
  2893 ;;     ___fldiv
  2894 ;;       ___flpack
  2895 ;;       ___fltol (ARG)
  2896 ;;         ___flge (ARG)
  2897 ;;         _frexp (ARG)
  2898 ;;         ___flpack (ARG)
  2899 ;;     ___fltol
  2900 ;;       ___flge (ARG)
  2901 ;;       _frexp (ARG)
  2902 ;;       ___flpack (ARG)
  2903 ;;     _print_reading
  2904 ;;     _print_unit
  2905 ;;   _print_indicator
  2906 ;;
  2907 ;; _isr (ROOT)
  2908 ;;
  2909 ;; Address spaces:
  2910 ;;Name               Size   Autos  Total    Cost      Usage
  2911 ;;BITCOMMON            E      0       0       0        0.0%
  2912 ;;EEDATA             100      0       0       0        0.0%
  2913 ;;NULL                 0      0       0       0        0.0%
  2914 ;;CODE                 0      0       0       0        0.0%
  2915 ;;COMMON               E      8       B       1       78.6%
  2916 ;;BITSFR0              0      0       0       1        0.0%
  2917 ;;SFR0                 0      0       0       1        0.0%
  2918 ;;BITSFR1              0      0       0       2        0.0%
  2919 ;;SFR1                 0      0       0       2        0.0%
  2920 ;;STACK                0      0       7       2        0.0%
  2921 ;;ABS                  0      0     10B       3        0.0%
  2922 ;;BITBANK0            50      0       0       4        0.0%
  2923 ;;BITSFR3              0      0       0       4        0.0%
  2924 ;;SFR3                 0      0       0       4        0.0%
  2925 ;;BANK0               50     4F      50       5      100.0%
  2926 ;;BITSFR2              0      0       0       5        0.0%
  2927 ;;SFR2                 0      0       0       5        0.0%
  2928 ;;BITBANK1            50      0       0       6        0.0%
  2929 ;;BANK1               50     3C      48       7       90.0%
  2930 ;;BITBANK3            60      0       0       8        0.0%
  2931 ;;BANK3               60      C      55       9       88.5%
  2932 ;;BITBANK2            60      0       0      10        0.0%
  2933 ;;BANK2               60     13      13      11       19.8%
  2934 ;;DATA                 0      0     112      12        0.0%
  2935                           
  2936                           
  2937 ;; *************** function _main *****************
  2938 ;; Defined at:
  2939 ;;		line 109 in file "../../../LC-meter.c"
  2940 ;; Parameters:    Size  Location     Type
  2941 ;;		None
  2942 ;; Auto vars:     Size  Location     Type
  2943 ;;  new_mode        1   59[BANK1 ] unsigned char 
  2944 ;; Return value:  Size  Location     Type
  2945 ;;		None               void
  2946 ;; Registers used:
  2947 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2948 ;; Tracked objects:
  2949 ;;		On entry : 17F/0
  2950 ;;		On exit  : 0/0
  2951 ;;		Unchanged: 0/0
  2952 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2953 ;;      Params:         0       0       0       0       0
  2954 ;;      Locals:         0       0       2       0       0
  2955 ;;      Temps:          0       0       0       0       0
  2956 ;;      Totals:         0       0       2       0       0
  2957 ;;Total ram usage:        2 bytes
  2958 ;; Hardware stack levels required when called:    8
  2959 ;; This function calls:
  2960 ;;		_timer0_init
  2961 ;;		_delay10ms
  2962 ;;		_ser_init
  2963 ;;		_calibrate
  2964 ;;		_ser_puts
  2965 ;;		_measure_capacitance
  2966 ;;		_measure_inductance
  2967 ;;		_print_indicator
  2968 ;; This function is called by:
  2969 ;;		Startup code after reset
  2970 ;; This function uses a non-reentrant model
  2971 ;;
  2972  11C5                     _main:	
  2973                           
  2974                           ;LC-meter.c: 110: bres = msecpart = msecs = seconds = 0;
  2975                           
  2976                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2977  11C5  1683               	bsf	3,5	;RP0=1, select bank1
  2978  11C6  01E0               	clrf	_seconds^(0+128)	;volatile
  2979  11C7  01E1               	clrf	(_seconds+1)^(0+128)	;volatile
  2980  11C8  01E2               	clrf	(_seconds+2)^(0+128)	;volatile
  2981  11C9  01E3               	clrf	(_seconds+3)^(0+128)	;volatile
  2982  11CA  0863               	movf	(_seconds+3)^(0+128),w	;volatile
  2983  11CB  00DF               	movwf	(_msecs+3)^(0+128)	;volatile
  2984  11CC  0862               	movf	(_seconds+2)^(0+128),w	;volatile
  2985  11CD  00DE               	movwf	(_msecs+2)^(0+128)	;volatile
  2986  11CE  0861               	movf	(_seconds+1)^(0+128),w	;volatile
  2987  11CF  00DD               	movwf	(_msecs+1)^(0+128)	;volatile
  2988  11D0  0860               	movf	_seconds^(0+128),w	;volatile
  2989  11D1  00DC               	movwf	_msecs^(0+128)	;volatile
  2990  11D2  085D               	movf	(_msecs^(0+128)+1),w	;volatile
  2991  11D3  1703               	bsf	3,6	;RP1=1, select bank3
  2992  11D4  00E4               	movwf	(_msecpart+1)^(0+384)	;volatile
  2993  11D5  1303               	bcf	3,6	;RP1=0, select bank1
  2994  11D6  085C               	movf	_msecs^(0+128),w	;volatile
  2995  11D7  1703               	bsf	3,6	;RP1=1, select bank3
  2996  11D8  00E3               	movwf	_msecpart^(0+384)	;volatile
  2997  11D9  0864               	movf	(_msecpart+1)^(0+384),w	;volatile
  2998  11DA  00E2               	movwf	(_bres+1)^(0+384)	;volatile
  2999  11DB  0863               	movf	_msecpart^(0+384),w	;volatile
  3000  11DC  00E1               	movwf	_bres^(0+384)	;volatile
  3001                           
  3002                           ;LC-meter.c: 111: mode = -1;
  3003  11DD  30FF               	movlw	255
  3004  11DE  1303               	bcf	3,6	;RP1=0, select bank1
  3005  11DF  00E7               	movwf	_mode^(0+128)
  3006                           
  3007                           ;LC-meter.c: 113: CCal = 1000;
  3008  11E0  3044               	movlw	68
  3009  11E1  1703               	bsf	3,6	;RP1=1, select bank3
  3010  11E2  00E0               	movwf	(_CCal+3)^(0+384)
  3011  11E3  307A               	movlw	122
  3012  11E4  00DF               	movwf	(_CCal+2)^(0+384)
  3013  11E5  3005               	movlw	5
  3014  11E6  01DE               	clrf	(_CCal+1)^(0+384)
  3015  11E7  01DD               	clrf	_CCal^(0+384)
  3016                           
  3017                           ;LC-meter.c: 121: CMCON = 0b00000101;
  3018  11E8  1303               	bcf	3,6	;RP1=0, select bank1
  3019  11E9  009C               	movwf	28	;volatile
  3020                           
  3021                           ;LC-meter.c: 123: TRISA = 0b11001111;
  3022  11EA  30CF               	movlw	207
  3023  11EB  0085               	movwf	5	;volatile
  3024                           
  3025                           ;LC-meter.c: 125: TRISB &= 0b00001111;
  3026  11EC  300F               	movlw	15
  3027  11ED  0586               	andwf	6,f	;volatile
  3028                           
  3029                           ;LC-meter.c: 128: timer0_init(0b1000 | 0x20 | 0x40);
  3030  11EE  3068               	movlw	104
  3031  11EF  160A  118A  215D   	fcall	_timer0_init
      +       160A  118A         
  3032                           
  3033                           ;LC-meter.c: 137: OPTION_REG &= ~0b100000;
  3034  11F4  1683               	bsf	3,5	;RP0=1, select bank1
  3035  11F5  1303               	bcf	3,6	;RP1=0, select bank1
  3036  11F6  1281               	bcf	1,5	;volatile
  3037                           
  3038                           ;LC-meter.c: 143: TRISC = 0b10110011;
  3039  11F7  30B3               	movlw	179
  3040  11F8  0087               	movwf	7	;volatile
  3041                           
  3042                           ;LC-meter.c: 147: RC3 = 1;
  3043  11F9  1283               	bcf	3,5	;RP0=0, select bank0
  3044  11FA  1587               	bsf	7,3
  3045                           
  3046                           ;LC-meter.c: 150: TRISC &= ~0b00000100;
  3047  11FB  1683               	bsf	3,5	;RP0=1, select bank1
  3048  11FC  1107               	bcf	7,2	;volatile
  3049                           
  3050                           ;LC-meter.c: 151: PORTC &= ~0b00000100; PORTC |= (!!(1)) << 2;;
  3051  11FD  1283               	bcf	3,5	;RP0=0, select bank0
  3052  11FE  1107               	bcf	7,2	;volatile
  3053  11FF  1507               	bsf	7,2	;volatile
  3054                           
  3055                           ;LC-meter.c: 164: TRISC |= (1 << 4);
  3056  1200  1683               	bsf	3,5	;RP0=1, select bank1
  3057  1201  1607               	bsf	7,4	;volatile
  3058                           
  3059                           ;LC-meter.c: 165: TRISC &= ~(1 << 5);
  3060  1202  1287               	bcf	7,5	;volatile
  3061                           
  3062                           ;LC-meter.c: 167: PORTC &= ~(1 << 5);
  3063  1203  1283               	bcf	3,5	;RP0=0, select bank0
  3064  1204  1287               	bcf	7,5	;volatile
  3065                           
  3066                           ;LC-meter.c: 168: delay10ms(50);
  3067  1205  3032               	movlw	50
  3068  1206  120A  118A  2050   	fcall	_delay10ms
      +       160A  118A         
  3069                           
  3070                           ;LC-meter.c: 169: PORTC |= (1 << 5);
  3071  120B  1687               	bsf	7,5	;volatile
  3072                           
  3073                           ;LC-meter.c: 170: delay10ms(50);
  3074  120C  3032               	movlw	50
  3075  120D  120A  118A  2050   	fcall	_delay10ms
      +       160A  118A         
  3076                           
  3077                           ;LC-meter.c: 171: PORTC &= ~(1 << 5);
  3078  1212  1287               	bcf	7,5	;volatile
  3079                           
  3080                           ;LC-meter.c: 172: delay10ms(50);
  3081  1213  3032               	movlw	50
  3082  1214  120A  118A  2050   	fcall	_delay10ms
      +       160A  118A         
  3083                           
  3084                           ;LC-meter.c: 173: PORTC |= (1 << 5);
  3085  1219  1687               	bsf	7,5	;volatile
  3086                           
  3087                           ;LC-meter.c: 174: delay10ms(50);
  3088  121A  3032               	movlw	50
  3089  121B  120A  118A  2050   	fcall	_delay10ms
      +       160A  118A         
  3090                           
  3091                           ;LC-meter.c: 175: PORTC &= ~(1 << 5);
  3092  1220  1287               	bcf	7,5	;volatile
  3093                           
  3094                           ;LC-meter.c: 178: ser_init();
  3095  1221  160A  118A  212D   	fcall	_ser_init
      +       160A  118A         
  3096                           
  3097                           ;LC-meter.c: 185: INTCON |= 0xc0;
  3098  1226  30C0               	movlw	192
  3099  1227  048B               	iorwf	11,f	;volatile
  3100                           
  3101                           ;LC-meter.c: 198: delay10ms(5);
  3102  1228  3005               	movlw	5
  3103  1229  120A  118A  2050   	fcall	_delay10ms
      +       160A  118A         
  3104                           
  3105                           ;LC-meter.c: 203: calibrate();
  3106  122E  120A  118A  2011   	fcall	_calibrate
      +       160A  118A         
  3107  1233                     l9559:	
  3108                           
  3109                           ;LC-meter.c: 215: char new_mode = (!!(PORTC & 0b10000));
  3110  1233  3000               	movlw	0
  3111  1234  1283               	bcf	3,5	;RP0=0, select bank0
  3112  1235  1303               	bcf	3,6	;RP1=0, select bank0
  3113  1236  1A07               	btfsc	7,4
  3114  1237  3001               	movlw	1
  3115  1238  1683               	bsf	3,5	;RP0=1, select bank1
  3116  1239  00DB               	movwf	main@new_mode^(0+128)
  3117                           
  3118                           ;LC-meter.c: 217: if(new_mode != mode) {
  3119  123A  0667               	xorwf	_mode^(0+128),w
  3120  123B  1903               	skipnz
  3121  123C  2A53               	goto	l3362
  3122                           
  3123                           ;LC-meter.c: 219: ser_puts(mode ? "- C (Unit: F) -" : "- L (Unit: H) -");
  3124  123D  08E7               	movf	_mode^(0+128),f
  3125  123E  1D03               	skipz
  3126  123F  2A42               	goto	l9567
  3127  1240  305D               	movlw	(STR_13-__stringbase)& (0+255)
  3128  1241  2A43               	goto	L1
  3129  1242                     l9567:	
  3130  1242  304D               	movlw	(STR_12-__stringbase)& (0+255)
  3131  1243                     L1:	
  3132  1243  00DA               	movwf	_main$4322^(0+128)
  3133  1244  120A  158A  2437   	fcall	_ser_puts
      +       160A  118A         
  3134                           
  3135                           ;LC-meter.c: 220: ser_puts("\r\n");
  3136  1249  3097               	movlw	(STR_1-__stringbase)& (0+255)
  3137  124A  120A  158A  2437   	fcall	_ser_puts
      +       160A  118A         
  3138                           
  3139                           ;LC-meter.c: 222: mode = new_mode;
  3140  124F  1683               	bsf	3,5	;RP0=1, select bank1
  3141  1250  1303               	bcf	3,6	;RP1=0, select bank1
  3142  1251  085B               	movf	main@new_mode^(0+128),w
  3143  1252  00E7               	movwf	_mode^(0+128)
  3144  1253                     l3362:	
  3145                           
  3146                           ;LC-meter.c: 223: }
  3147                           ;LC-meter.c: 225: if(mode)
  3148  1253  0867               	movf	_mode^(0+128),w
  3149  1254  1903               	btfsc	3,2
  3150  1255  2A5C               	goto	l9575
  3151                           
  3152                           ;LC-meter.c: 226: measure_capacitance();
  3153  1256  120A  158A  200D   	fcall	_measure_capacitance
      +       160A  118A         
  3154  125B  2A61               	goto	l9577
  3155  125C                     l9575:	
  3156                           
  3157                           ;LC-meter.c: 227: else
  3158                           ;LC-meter.c: 228: measure_inductance();
  3159  125C  120A  118A  2209   	fcall	_measure_inductance
      +       160A  118A         
  3160  1261                     l9577:	
  3161                           
  3162                           ;LC-meter.c: 230: print_indicator(1);
  3163  1261  3001               	movlw	1
  3164  1262  120A  118A  27FB   	fcall	_print_indicator
      +       160A  118A         
  3165                           
  3166                           ;LC-meter.c: 231: delay10ms(30);
  3167  1267  301E               	movlw	30
  3168  1268  120A  118A  2050   	fcall	_delay10ms
      +       160A  118A         
  3169                           
  3170                           ;LC-meter.c: 233: print_indicator(0);
  3171  126D  3000               	movlw	0
  3172  126E  120A  118A  27FB   	fcall	_print_indicator
      +       160A  118A         
  3173                           
  3174                           ;LC-meter.c: 234: delay10ms(20);
  3175  1273  3014               	movlw	20
  3176  1274  120A  118A  2050   	fcall	_delay10ms
      +       160A  118A         
  3177                           
  3178                           ;LC-meter.c: 235: }
  3179  1279  2A33               	goto	l9559
  3180  127A                     __end_of_main:	
  3181                           
  3182                           	psect	text1283
  3183  080D                     __ptext1283:	
  3184 ;; =============== function _main ends ============
  3185                           
  3186                           
  3187 ;; *************** function _measure_capacitance *****************
  3188 ;; Defined at:
  3189 ;;		line 132 in file "../../../src/measure.c"
  3190 ;; Parameters:    Size  Location     Type
  3191 ;;		None
  3192 ;; Auto vars:     Size  Location     Type
  3193 ;;  Cin             4   15[BANK2 ] unsigned char 
  3194 ;;  var             2   13[BANK2 ] unsigned int 
  3195 ;;  unit            1   12[BANK2 ] unsigned char 
  3196 ;; Return value:  Size  Location     Type
  3197 ;;		None               void
  3198 ;; Registers used:
  3199 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3200 ;; Tracked objects:
  3201 ;;		On entry : 60/20
  3202 ;;		On exit  : 60/40
  3203 ;;		Unchanged: 0/0
  3204 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3205 ;;      Params:         0       0       0       0       0
  3206 ;;      Locals:         0       0       0       0      19
  3207 ;;      Temps:          0       0       0       0       0
  3208 ;;      Totals:         0       0       0       0      19
  3209 ;;Total ram usage:       19 bytes
  3210 ;; Hardware stack levels used:    1
  3211 ;; Hardware stack levels required when called:    7
  3212 ;; This function calls:
  3213 ;;		_measure_freq
  3214 ;;		___lwtofl
  3215 ;;		_ser_puts
  3216 ;;		_format_xint32
  3217 ;;		_buf_to_ser
  3218 ;;		_format_double
  3219 ;;		_ser_putch
  3220 ;;		___flge
  3221 ;;		___flmul
  3222 ;;		___flsub
  3223 ;;		___fldiv
  3224 ;;		___fltol
  3225 ;;		_print_reading
  3226 ;;		_print_unit
  3227 ;; This function is called by:
  3228 ;;		_main
  3229 ;; This function uses a non-reentrant model
  3230 ;;
  3231  080D                     _measure_capacitance:	
  3232                           
  3233                           ;measure.c: 133: uint8_t unit;
  3234                           ;measure.c: 134: uint16_t var;
  3235                           ;measure.c: 136: double Cin;
  3236                           ;measure.c: 143: var = measure_freq();
  3237                           
  3238                           ; Regs used in _measure_capacitance: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3239  080D  120A  118A  261F   	fcall	_measure_freq
      +       120A  158A         
  3240  0812  0853               	movf	?_measure_freq+1,w
  3241  0813  1703               	bsf	3,6	;RP1=1, select bank2
  3242  0814  009E               	movwf	(measure_capacitance@var+1)^(0+256)
  3243  0815  1303               	bcf	3,6	;RP1=0, select bank0
  3244  0816  0852               	movf	?_measure_freq,w
  3245  0817  1703               	bsf	3,6	;RP1=1, select bank2
  3246  0818  009D               	movwf	measure_capacitance@var^(0+256)
  3247                           
  3248                           ;measure.c: 145: F3 = (double)var;
  3249  0819  081E               	movf	(measure_capacitance@var+1)^(0+256),w
  3250  081A  1303               	bcf	3,6	;RP1=0, select bank0
  3251  081B  00CE               	movwf	?___lwtofl+1
  3252  081C  1703               	bsf	3,6	;RP1=1, select bank2
  3253  081D  081D               	movf	measure_capacitance@var^(0+256),w
  3254  081E  1303               	bcf	3,6	;RP1=0, select bank0
  3255  081F  00CD               	movwf	?___lwtofl
  3256  0820  120A  118A  260A   	fcall	___lwtofl
      +       120A  158A         
  3257  0825  0850               	movf	?___lwtofl+3,w
  3258  0826  1683               	bsf	3,5	;RP0=1, select bank3
  3259  0827  1703               	bsf	3,6	;RP1=1, select bank3
  3260  0828  00B7               	movwf	(_F3+3)^(0+384)
  3261  0829  1283               	bcf	3,5	;RP0=0, select bank0
  3262  082A  1303               	bcf	3,6	;RP1=0, select bank0
  3263  082B  084F               	movf	?___lwtofl+2,w
  3264  082C  1683               	bsf	3,5	;RP0=1, select bank3
  3265  082D  1703               	bsf	3,6	;RP1=1, select bank3
  3266  082E  00B6               	movwf	(_F3+2)^(0+384)
  3267  082F  1283               	bcf	3,5	;RP0=0, select bank0
  3268  0830  1303               	bcf	3,6	;RP1=0, select bank0
  3269  0831  084E               	movf	?___lwtofl+1,w
  3270  0832  1683               	bsf	3,5	;RP0=1, select bank3
  3271  0833  1703               	bsf	3,6	;RP1=1, select bank3
  3272  0834  00B5               	movwf	(_F3+1)^(0+384)
  3273  0835  1283               	bcf	3,5	;RP0=0, select bank0
  3274  0836  1303               	bcf	3,6	;RP1=0, select bank0
  3275  0837  084D               	movf	?___lwtofl,w
  3276  0838  1683               	bsf	3,5	;RP0=1, select bank3
  3277  0839  1703               	bsf	3,6	;RP1=1, select bank3
  3278  083A  00B4               	movwf	_F3^(0+384)
  3279                           
  3280                           ;measure.c: 148: ser_puts("var=");
  3281  083B  3092               	movlw	(STR_4-__stringbase)& (0+255)
  3282  083C  2437  120A  158A   	fcall	_ser_puts
  3283                           
  3284                           ;measure.c: 149: format_xint32(var); buf_to_ser();
  3285  083F  1283               	bcf	3,5	;RP0=0, select bank2
  3286  0840  1703               	bsf	3,6	;RP1=1, select bank2
  3287  0841  081D               	movf	measure_capacitance@var^(0+256),w
  3288  0842  1303               	bcf	3,6	;RP1=0, select bank0
  3289  0843  00CD               	movwf	?_format_xint32
  3290  0844  1703               	bsf	3,6	;RP1=1, select bank2
  3291  0845  081E               	movf	(measure_capacitance@var+1)^(0+256),w
  3292  0846  1303               	bcf	3,6	;RP1=0, select bank0
  3293  0847  00CE               	movwf	?_format_xint32+1
  3294  0848  01CF               	clrf	?_format_xint32+2
  3295  0849  01D0               	clrf	?_format_xint32+3
  3296  084A  2463  120A  158A   	fcall	_format_xint32
  3297  084D  2427  120A  158A   	fcall	_buf_to_ser
  3298                           
  3299                           ;measure.c: 150: ser_puts("\r\nF1=");
  3300  0850  3075               	movlw	(STR_5-__stringbase)& (0+255)
  3301  0851  2437  120A  158A   	fcall	_ser_puts
  3302                           
  3303                           ;measure.c: 151: format_double(F1); buf_to_ser();
  3304  0854  1683               	bsf	3,5	;RP0=1, select bank3
  3305  0855  1703               	bsf	3,6	;RP1=1, select bank3
  3306  0856  0850               	movf	(_F1+3)^(0+384),w
  3307  0857  1303               	bcf	3,6	;RP1=0, select bank1
  3308  0858  00D9               	movwf	(?_format_double+3)^(0+128)
  3309  0859  1703               	bsf	3,6	;RP1=1, select bank3
  3310  085A  084F               	movf	(_F1+2)^(0+384),w
  3311  085B  1303               	bcf	3,6	;RP1=0, select bank1
  3312  085C  00D8               	movwf	(?_format_double+2)^(0+128)
  3313  085D  1703               	bsf	3,6	;RP1=1, select bank3
  3314  085E  084E               	movf	(_F1+1)^(0+384),w
  3315  085F  1303               	bcf	3,6	;RP1=0, select bank1
  3316  0860  00D7               	movwf	(?_format_double+1)^(0+128)
  3317  0861  1703               	bsf	3,6	;RP1=1, select bank3
  3318  0862  084D               	movf	_F1^(0+384),w
  3319  0863  1303               	bcf	3,6	;RP1=0, select bank1
  3320  0864  00D6               	movwf	?_format_double^(0+128)
  3321  0865  247D  120A  158A   	fcall	_format_double
  3322  0868  2427  120A  158A   	fcall	_buf_to_ser
  3323                           
  3324                           ;measure.c: 152: ser_putch(' ');
  3325  086B  3020               	movlw	32
  3326  086C  244E  120A  158A   	fcall	_ser_putch
  3327                           
  3328                           ;measure.c: 153: format_xint32(*(uint32_t*)&F1); buf_to_ser();
  3329  086F  1703               	bsf	3,6	;RP1=1, select bank3
  3330  0870  0850               	movf	(_F1+3)^(0+384),w
  3331  0871  1283               	bcf	3,5	;RP0=0, select bank0
  3332  0872  1303               	bcf	3,6	;RP1=0, select bank0
  3333  0873  00D0               	movwf	?_format_xint32+3
  3334  0874  1683               	bsf	3,5	;RP0=1, select bank3
  3335  0875  1703               	bsf	3,6	;RP1=1, select bank3
  3336  0876  084F               	movf	(_F1+2)^(0+384),w
  3337  0877  1283               	bcf	3,5	;RP0=0, select bank0
  3338  0878  1303               	bcf	3,6	;RP1=0, select bank0
  3339  0879  00CF               	movwf	?_format_xint32+2
  3340  087A  1683               	bsf	3,5	;RP0=1, select bank3
  3341  087B  1703               	bsf	3,6	;RP1=1, select bank3
  3342  087C  084E               	movf	(_F1+1)^(0+384),w
  3343  087D  1283               	bcf	3,5	;RP0=0, select bank0
  3344  087E  1303               	bcf	3,6	;RP1=0, select bank0
  3345  087F  00CE               	movwf	?_format_xint32+1
  3346  0880  1683               	bsf	3,5	;RP0=1, select bank3
  3347  0881  1703               	bsf	3,6	;RP1=1, select bank3
  3348  0882  084D               	movf	_F1^(0+384),w
  3349  0883  1283               	bcf	3,5	;RP0=0, select bank0
  3350  0884  1303               	bcf	3,6	;RP1=0, select bank0
  3351  0885  00CD               	movwf	?_format_xint32
  3352  0886  2463  120A  158A   	fcall	_format_xint32
  3353  0889  2427  120A  158A   	fcall	_buf_to_ser
  3354                           
  3355                           ;measure.c: 154: ser_puts("\r\nF2=");
  3356  088C  307B               	movlw	(STR_6-__stringbase)& (0+255)
  3357  088D  2437  120A  158A   	fcall	_ser_puts
  3358                           
  3359                           ;measure.c: 155: format_double(F2); buf_to_ser();
  3360  0890  1683               	bsf	3,5	;RP0=1, select bank3
  3361  0891  1703               	bsf	3,6	;RP1=1, select bank3
  3362  0892  0833               	movf	(_F2+3)^(0+384),w
  3363  0893  1303               	bcf	3,6	;RP1=0, select bank1
  3364  0894  00D9               	movwf	(?_format_double+3)^(0+128)
  3365  0895  1703               	bsf	3,6	;RP1=1, select bank3
  3366  0896  0832               	movf	(_F2+2)^(0+384),w
  3367  0897  1303               	bcf	3,6	;RP1=0, select bank1
  3368  0898  00D8               	movwf	(?_format_double+2)^(0+128)
  3369  0899  1703               	bsf	3,6	;RP1=1, select bank3
  3370  089A  0831               	movf	(_F2+1)^(0+384),w
  3371  089B  1303               	bcf	3,6	;RP1=0, select bank1
  3372  089C  00D7               	movwf	(?_format_double+1)^(0+128)
  3373  089D  1703               	bsf	3,6	;RP1=1, select bank3
  3374  089E  0830               	movf	_F2^(0+384),w
  3375  089F  1303               	bcf	3,6	;RP1=0, select bank1
  3376  08A0  00D6               	movwf	?_format_double^(0+128)
  3377  08A1  247D  120A  158A   	fcall	_format_double
  3378  08A4  2427  120A  158A   	fcall	_buf_to_ser
  3379                           
  3380                           ;measure.c: 156: ser_putch(' ');
  3381  08A7  3020               	movlw	32
  3382  08A8  244E  120A  158A   	fcall	_ser_putch
  3383                           
  3384                           ;measure.c: 157: format_xint32(*(uint32_t*)&F2); buf_to_ser();
  3385  08AB  1703               	bsf	3,6	;RP1=1, select bank3
  3386  08AC  0833               	movf	(_F2+3)^(0+384),w
  3387  08AD  1283               	bcf	3,5	;RP0=0, select bank0
  3388  08AE  1303               	bcf	3,6	;RP1=0, select bank0
  3389  08AF  00D0               	movwf	?_format_xint32+3
  3390  08B0  1683               	bsf	3,5	;RP0=1, select bank3
  3391  08B1  1703               	bsf	3,6	;RP1=1, select bank3
  3392  08B2  0832               	movf	(_F2+2)^(0+384),w
  3393  08B3  1283               	bcf	3,5	;RP0=0, select bank0
  3394  08B4  1303               	bcf	3,6	;RP1=0, select bank0
  3395  08B5  00CF               	movwf	?_format_xint32+2
  3396  08B6  1683               	bsf	3,5	;RP0=1, select bank3
  3397  08B7  1703               	bsf	3,6	;RP1=1, select bank3
  3398  08B8  0831               	movf	(_F2+1)^(0+384),w
  3399  08B9  1283               	bcf	3,5	;RP0=0, select bank0
  3400  08BA  1303               	bcf	3,6	;RP1=0, select bank0
  3401  08BB  00CE               	movwf	?_format_xint32+1
  3402  08BC  1683               	bsf	3,5	;RP0=1, select bank3
  3403  08BD  1703               	bsf	3,6	;RP1=1, select bank3
  3404  08BE  0830               	movf	_F2^(0+384),w
  3405  08BF  1283               	bcf	3,5	;RP0=0, select bank0
  3406  08C0  1303               	bcf	3,6	;RP1=0, select bank0
  3407  08C1  00CD               	movwf	?_format_xint32
  3408  08C2  2463  120A  158A   	fcall	_format_xint32
  3409  08C5  2427  120A  158A   	fcall	_buf_to_ser
  3410                           
  3411                           ;measure.c: 158: ser_puts("\r\nF3=");
  3412  08C8  3081               	movlw	(STR_7-__stringbase)& (0+255)
  3413  08C9  2437  120A  158A   	fcall	_ser_puts
  3414                           
  3415                           ;measure.c: 159: format_double(F3); buf_to_ser();
  3416  08CC  1683               	bsf	3,5	;RP0=1, select bank3
  3417  08CD  1703               	bsf	3,6	;RP1=1, select bank3
  3418  08CE  0837               	movf	(_F3+3)^(0+384),w
  3419  08CF  1303               	bcf	3,6	;RP1=0, select bank1
  3420  08D0  00D9               	movwf	(?_format_double+3)^(0+128)
  3421  08D1  1703               	bsf	3,6	;RP1=1, select bank3
  3422  08D2  0836               	movf	(_F3+2)^(0+384),w
  3423  08D3  1303               	bcf	3,6	;RP1=0, select bank1
  3424  08D4  00D8               	movwf	(?_format_double+2)^(0+128)
  3425  08D5  1703               	bsf	3,6	;RP1=1, select bank3
  3426  08D6  0835               	movf	(_F3+1)^(0+384),w
  3427  08D7  1303               	bcf	3,6	;RP1=0, select bank1
  3428  08D8  00D7               	movwf	(?_format_double+1)^(0+128)
  3429  08D9  1703               	bsf	3,6	;RP1=1, select bank3
  3430  08DA  0834               	movf	_F3^(0+384),w
  3431  08DB  1303               	bcf	3,6	;RP1=0, select bank1
  3432  08DC  00D6               	movwf	?_format_double^(0+128)
  3433  08DD  247D  120A  158A   	fcall	_format_double
  3434  08E0  2427  120A  158A   	fcall	_buf_to_ser
  3435                           
  3436                           ;measure.c: 160: ser_putch(' ');
  3437  08E3  3020               	movlw	32
  3438  08E4  244E  120A  158A   	fcall	_ser_putch
  3439                           
  3440                           ;measure.c: 161: format_xint32(*(uint32_t*)&F3); buf_to_ser();
  3441  08E7  1703               	bsf	3,6	;RP1=1, select bank3
  3442  08E8  0837               	movf	(_F3+3)^(0+384),w
  3443  08E9  1283               	bcf	3,5	;RP0=0, select bank0
  3444  08EA  1303               	bcf	3,6	;RP1=0, select bank0
  3445  08EB  00D0               	movwf	?_format_xint32+3
  3446  08EC  1683               	bsf	3,5	;RP0=1, select bank3
  3447  08ED  1703               	bsf	3,6	;RP1=1, select bank3
  3448  08EE  0836               	movf	(_F3+2)^(0+384),w
  3449  08EF  1283               	bcf	3,5	;RP0=0, select bank0
  3450  08F0  1303               	bcf	3,6	;RP1=0, select bank0
  3451  08F1  00CF               	movwf	?_format_xint32+2
  3452  08F2  1683               	bsf	3,5	;RP0=1, select bank3
  3453  08F3  1703               	bsf	3,6	;RP1=1, select bank3
  3454  08F4  0835               	movf	(_F3+1)^(0+384),w
  3455  08F5  1283               	bcf	3,5	;RP0=0, select bank0
  3456  08F6  1303               	bcf	3,6	;RP1=0, select bank0
  3457  08F7  00CE               	movwf	?_format_xint32+1
  3458  08F8  1683               	bsf	3,5	;RP0=1, select bank3
  3459  08F9  1703               	bsf	3,6	;RP1=1, select bank3
  3460  08FA  0834               	movf	_F3^(0+384),w
  3461  08FB  1283               	bcf	3,5	;RP0=0, select bank0
  3462  08FC  1303               	bcf	3,6	;RP1=0, select bank0
  3463  08FD  00CD               	movwf	?_format_xint32
  3464  08FE  2463  120A  158A   	fcall	_format_xint32
  3465  0901  2427  120A  158A   	fcall	_buf_to_ser
  3466                           
  3467                           ;measure.c: 162: ser_puts("\r\nCCal=");
  3468  0904  306D               	movlw	(STR_8-__stringbase)& (0+255)
  3469  0905  2437  120A  158A   	fcall	_ser_puts
  3470                           
  3471                           ;measure.c: 163: format_double(CCal); buf_to_ser();
  3472  0908  1683               	bsf	3,5	;RP0=1, select bank3
  3473  0909  1703               	bsf	3,6	;RP1=1, select bank3
  3474  090A  0860               	movf	(_CCal+3)^(0+384),w
  3475  090B  1303               	bcf	3,6	;RP1=0, select bank1
  3476  090C  00D9               	movwf	(?_format_double+3)^(0+128)
  3477  090D  1703               	bsf	3,6	;RP1=1, select bank3
  3478  090E  085F               	movf	(_CCal+2)^(0+384),w
  3479  090F  1303               	bcf	3,6	;RP1=0, select bank1
  3480  0910  00D8               	movwf	(?_format_double+2)^(0+128)
  3481  0911  1703               	bsf	3,6	;RP1=1, select bank3
  3482  0912  085E               	movf	(_CCal+1)^(0+384),w
  3483  0913  1303               	bcf	3,6	;RP1=0, select bank1
  3484  0914  00D7               	movwf	(?_format_double+1)^(0+128)
  3485  0915  1703               	bsf	3,6	;RP1=1, select bank3
  3486  0916  085D               	movf	_CCal^(0+384),w
  3487  0917  1303               	bcf	3,6	;RP1=0, select bank1
  3488  0918  00D6               	movwf	?_format_double^(0+128)
  3489  0919  247D  120A  158A   	fcall	_format_double
  3490  091C  2427  120A  158A   	fcall	_buf_to_ser
  3491                           
  3492                           ;measure.c: 164: ser_putch(' ');
  3493  091F  3020               	movlw	32
  3494  0920  244E  120A  158A   	fcall	_ser_putch
  3495                           
  3496                           ;measure.c: 165: format_xint32(*(uint32_t*)&CCal); buf_to_ser();
  3497  0923  1703               	bsf	3,6	;RP1=1, select bank3
  3498  0924  0860               	movf	(_CCal+3)^(0+384),w
  3499  0925  1283               	bcf	3,5	;RP0=0, select bank0
  3500  0926  1303               	bcf	3,6	;RP1=0, select bank0
  3501  0927  00D0               	movwf	?_format_xint32+3
  3502  0928  1683               	bsf	3,5	;RP0=1, select bank3
  3503  0929  1703               	bsf	3,6	;RP1=1, select bank3
  3504  092A  085F               	movf	(_CCal+2)^(0+384),w
  3505  092B  1283               	bcf	3,5	;RP0=0, select bank0
  3506  092C  1303               	bcf	3,6	;RP1=0, select bank0
  3507  092D  00CF               	movwf	?_format_xint32+2
  3508  092E  1683               	bsf	3,5	;RP0=1, select bank3
  3509  092F  1703               	bsf	3,6	;RP1=1, select bank3
  3510  0930  085E               	movf	(_CCal+1)^(0+384),w
  3511  0931  1283               	bcf	3,5	;RP0=0, select bank0
  3512  0932  1303               	bcf	3,6	;RP1=0, select bank0
  3513  0933  00CE               	movwf	?_format_xint32+1
  3514  0934  1683               	bsf	3,5	;RP0=1, select bank3
  3515  0935  1703               	bsf	3,6	;RP1=1, select bank3
  3516  0936  085D               	movf	_CCal^(0+384),w
  3517  0937  1283               	bcf	3,5	;RP0=0, select bank0
  3518  0938  1303               	bcf	3,6	;RP1=0, select bank0
  3519  0939  00CD               	movwf	?_format_xint32
  3520  093A  2463  120A  158A   	fcall	_format_xint32
  3521  093D  2427  120A  158A   	fcall	_buf_to_ser
  3522                           
  3523                           ;measure.c: 166: ser_puts("\r\n");
  3524  0940  3097               	movlw	(STR_1-__stringbase)& (0+255)
  3525  0941  2437  120A  158A   	fcall	_ser_puts
  3526                           
  3527                           ;measure.c: 170: if(F3 > F1)
  3528  0944  1683               	bsf	3,5	;RP0=1, select bank3
  3529  0945  1703               	bsf	3,6	;RP1=1, select bank3
  3530  0946  0850               	movf	(_F1+3)^(0+384),w
  3531  0947  1283               	bcf	3,5	;RP0=0, select bank0
  3532  0948  1303               	bcf	3,6	;RP1=0, select bank0
  3533  0949  00A3               	movwf	?___flge+3
  3534  094A  1683               	bsf	3,5	;RP0=1, select bank3
  3535  094B  1703               	bsf	3,6	;RP1=1, select bank3
  3536  094C  084F               	movf	(_F1+2)^(0+384),w
  3537  094D  1283               	bcf	3,5	;RP0=0, select bank0
  3538  094E  1303               	bcf	3,6	;RP1=0, select bank0
  3539  094F  00A2               	movwf	?___flge+2
  3540  0950  1683               	bsf	3,5	;RP0=1, select bank3
  3541  0951  1703               	bsf	3,6	;RP1=1, select bank3
  3542  0952  084E               	movf	(_F1+1)^(0+384),w
  3543  0953  1283               	bcf	3,5	;RP0=0, select bank0
  3544  0954  1303               	bcf	3,6	;RP1=0, select bank0
  3545  0955  00A1               	movwf	?___flge+1
  3546  0956  1683               	bsf	3,5	;RP0=1, select bank3
  3547  0957  1703               	bsf	3,6	;RP1=1, select bank3
  3548  0958  084D               	movf	_F1^(0+384),w
  3549  0959  1283               	bcf	3,5	;RP0=0, select bank0
  3550  095A  1303               	bcf	3,6	;RP1=0, select bank0
  3551  095B  00A0               	movwf	?___flge
  3552  095C  1683               	bsf	3,5	;RP0=1, select bank3
  3553  095D  1703               	bsf	3,6	;RP1=1, select bank3
  3554  095E  0837               	movf	(_F3+3)^(0+384),w
  3555  095F  1283               	bcf	3,5	;RP0=0, select bank0
  3556  0960  1303               	bcf	3,6	;RP1=0, select bank0
  3557  0961  00A7               	movwf	?___flge+7
  3558  0962  1683               	bsf	3,5	;RP0=1, select bank3
  3559  0963  1703               	bsf	3,6	;RP1=1, select bank3
  3560  0964  0836               	movf	(_F3+2)^(0+384),w
  3561  0965  1283               	bcf	3,5	;RP0=0, select bank0
  3562  0966  1303               	bcf	3,6	;RP1=0, select bank0
  3563  0967  00A6               	movwf	?___flge+6
  3564  0968  1683               	bsf	3,5	;RP0=1, select bank3
  3565  0969  1703               	bsf	3,6	;RP1=1, select bank3
  3566  096A  0835               	movf	(_F3+1)^(0+384),w
  3567  096B  1283               	bcf	3,5	;RP0=0, select bank0
  3568  096C  1303               	bcf	3,6	;RP1=0, select bank0
  3569  096D  00A5               	movwf	?___flge+5
  3570  096E  1683               	bsf	3,5	;RP0=1, select bank3
  3571  096F  1703               	bsf	3,6	;RP1=1, select bank3
  3572  0970  0834               	movf	_F3^(0+384),w
  3573  0971  1283               	bcf	3,5	;RP0=0, select bank0
  3574  0972  1303               	bcf	3,6	;RP1=0, select bank0
  3575  0973  00A4               	movwf	?___flge+4
  3576  0974  120A  118A  25BE   	fcall	___flge
      +       120A  158A         
  3577  0979  1803               	btfsc	3,0
  3578  097A  2985               	goto	l9467
  3579                           
  3580                           ;measure.c: 171: F3 = F1;
  3581  097B  1683               	bsf	3,5	;RP0=1, select bank3
  3582  097C  1703               	bsf	3,6	;RP1=1, select bank3
  3583  097D  0850               	movf	(_F1+3)^(0+384),w
  3584  097E  00B7               	movwf	(_F3+3)^(0+384)
  3585  097F  084F               	movf	(_F1+2)^(0+384),w
  3586  0980  00B6               	movwf	(_F3+2)^(0+384)
  3587  0981  084E               	movf	(_F1+1)^(0+384),w
  3588  0982  00B5               	movwf	(_F3+1)^(0+384)
  3589  0983  084D               	movf	_F1^(0+384),w
  3590  0984  00B4               	movwf	_F3^(0+384)
  3591  0985                     l9467:	
  3592                           
  3593                           ;measure.c: 173: Cin = F2 * F2 * (F1 * F1 - F3 * F3) * CCal;
  3594  0985  1683               	bsf	3,5	;RP0=1, select bank3
  3595  0986  1703               	bsf	3,6	;RP1=1, select bank3
  3596  0987  0837               	movf	(_F3+3)^(0+384),w
  3597  0988  1283               	bcf	3,5	;RP0=0, select bank0
  3598  0989  1303               	bcf	3,6	;RP1=0, select bank0
  3599  098A  00C8               	movwf	?___flmul+3
  3600  098B  1683               	bsf	3,5	;RP0=1, select bank3
  3601  098C  1703               	bsf	3,6	;RP1=1, select bank3
  3602  098D  0836               	movf	(_F3+2)^(0+384),w
  3603  098E  1283               	bcf	3,5	;RP0=0, select bank0
  3604  098F  1303               	bcf	3,6	;RP1=0, select bank0
  3605  0990  00C7               	movwf	?___flmul+2
  3606  0991  1683               	bsf	3,5	;RP0=1, select bank3
  3607  0992  1703               	bsf	3,6	;RP1=1, select bank3
  3608  0993  0835               	movf	(_F3+1)^(0+384),w
  3609  0994  1283               	bcf	3,5	;RP0=0, select bank0
  3610  0995  1303               	bcf	3,6	;RP1=0, select bank0
  3611  0996  00C6               	movwf	?___flmul+1
  3612  0997  1683               	bsf	3,5	;RP0=1, select bank3
  3613  0998  1703               	bsf	3,6	;RP1=1, select bank3
  3614  0999  0834               	movf	_F3^(0+384),w
  3615  099A  1283               	bcf	3,5	;RP0=0, select bank0
  3616  099B  1303               	bcf	3,6	;RP1=0, select bank0
  3617  099C  00C5               	movwf	?___flmul
  3618  099D  1683               	bsf	3,5	;RP0=1, select bank3
  3619  099E  1703               	bsf	3,6	;RP1=1, select bank3
  3620  099F  0837               	movf	(_F3+3)^(0+384),w
  3621  09A0  1283               	bcf	3,5	;RP0=0, select bank0
  3622  09A1  1303               	bcf	3,6	;RP1=0, select bank0
  3623  09A2  00CC               	movwf	?___flmul+7
  3624  09A3  1683               	bsf	3,5	;RP0=1, select bank3
  3625  09A4  1703               	bsf	3,6	;RP1=1, select bank3
  3626  09A5  0836               	movf	(_F3+2)^(0+384),w
  3627  09A6  1283               	bcf	3,5	;RP0=0, select bank0
  3628  09A7  1303               	bcf	3,6	;RP1=0, select bank0
  3629  09A8  00CB               	movwf	?___flmul+6
  3630  09A9  1683               	bsf	3,5	;RP0=1, select bank3
  3631  09AA  1703               	bsf	3,6	;RP1=1, select bank3
  3632  09AB  0835               	movf	(_F3+1)^(0+384),w
  3633  09AC  1283               	bcf	3,5	;RP0=0, select bank0
  3634  09AD  1303               	bcf	3,6	;RP1=0, select bank0
  3635  09AE  00CA               	movwf	?___flmul+5
  3636  09AF  1683               	bsf	3,5	;RP0=1, select bank3
  3637  09B0  1703               	bsf	3,6	;RP1=1, select bank3
  3638  09B1  0834               	movf	_F3^(0+384),w
  3639  09B2  1283               	bcf	3,5	;RP0=0, select bank0
  3640  09B3  1303               	bcf	3,6	;RP1=0, select bank0
  3641  09B4  00C9               	movwf	?___flmul+4
  3642  09B5  120A  118A  253E   	fcall	___flmul
      +       120A  158A         
  3643  09BA  0848               	movf	?___flmul+3,w
  3644  09BB  00EA               	movwf	?___flsub+3
  3645  09BC  0847               	movf	?___flmul+2,w
  3646  09BD  00E9               	movwf	?___flsub+2
  3647  09BE  0846               	movf	?___flmul+1,w
  3648  09BF  00E8               	movwf	?___flsub+1
  3649  09C0  0845               	movf	?___flmul,w
  3650  09C1  00E7               	movwf	?___flsub
  3651  09C2  1683               	bsf	3,5	;RP0=1, select bank3
  3652  09C3  1703               	bsf	3,6	;RP1=1, select bank3
  3653  09C4  0850               	movf	(_F1+3)^(0+384),w
  3654  09C5  1283               	bcf	3,5	;RP0=0, select bank0
  3655  09C6  1303               	bcf	3,6	;RP1=0, select bank0
  3656  09C7  00C8               	movwf	?___flmul+3
  3657  09C8  1683               	bsf	3,5	;RP0=1, select bank3
  3658  09C9  1703               	bsf	3,6	;RP1=1, select bank3
  3659  09CA  084F               	movf	(_F1+2)^(0+384),w
  3660  09CB  1283               	bcf	3,5	;RP0=0, select bank0
  3661  09CC  1303               	bcf	3,6	;RP1=0, select bank0
  3662  09CD  00C7               	movwf	?___flmul+2
  3663  09CE  1683               	bsf	3,5	;RP0=1, select bank3
  3664  09CF  1703               	bsf	3,6	;RP1=1, select bank3
  3665  09D0  084E               	movf	(_F1+1)^(0+384),w
  3666  09D1  1283               	bcf	3,5	;RP0=0, select bank0
  3667  09D2  1303               	bcf	3,6	;RP1=0, select bank0
  3668  09D3  00C6               	movwf	?___flmul+1
  3669  09D4  1683               	bsf	3,5	;RP0=1, select bank3
  3670  09D5  1703               	bsf	3,6	;RP1=1, select bank3
  3671  09D6  084D               	movf	_F1^(0+384),w
  3672  09D7  1283               	bcf	3,5	;RP0=0, select bank0
  3673  09D8  1303               	bcf	3,6	;RP1=0, select bank0
  3674  09D9  00C5               	movwf	?___flmul
  3675  09DA  1683               	bsf	3,5	;RP0=1, select bank3
  3676  09DB  1703               	bsf	3,6	;RP1=1, select bank3
  3677  09DC  0850               	movf	(_F1+3)^(0+384),w
  3678  09DD  1283               	bcf	3,5	;RP0=0, select bank0
  3679  09DE  1303               	bcf	3,6	;RP1=0, select bank0
  3680  09DF  00CC               	movwf	?___flmul+7
  3681  09E0  1683               	bsf	3,5	;RP0=1, select bank3
  3682  09E1  1703               	bsf	3,6	;RP1=1, select bank3
  3683  09E2  084F               	movf	(_F1+2)^(0+384),w
  3684  09E3  1283               	bcf	3,5	;RP0=0, select bank0
  3685  09E4  1303               	bcf	3,6	;RP1=0, select bank0
  3686  09E5  00CB               	movwf	?___flmul+6
  3687  09E6  1683               	bsf	3,5	;RP0=1, select bank3
  3688  09E7  1703               	bsf	3,6	;RP1=1, select bank3
  3689  09E8  084E               	movf	(_F1+1)^(0+384),w
  3690  09E9  1283               	bcf	3,5	;RP0=0, select bank0
  3691  09EA  1303               	bcf	3,6	;RP1=0, select bank0
  3692  09EB  00CA               	movwf	?___flmul+5
  3693  09EC  1683               	bsf	3,5	;RP0=1, select bank3
  3694  09ED  1703               	bsf	3,6	;RP1=1, select bank3
  3695  09EE  084D               	movf	_F1^(0+384),w
  3696  09EF  1283               	bcf	3,5	;RP0=0, select bank0
  3697  09F0  1303               	bcf	3,6	;RP1=0, select bank0
  3698  09F1  00C9               	movwf	?___flmul+4
  3699  09F2  120A  118A  253E   	fcall	___flmul
      +       120A  158A         
  3700  09F7  0848               	movf	?___flmul+3,w
  3701  09F8  00EE               	movwf	?___flsub+7
  3702  09F9  0847               	movf	?___flmul+2,w
  3703  09FA  00ED               	movwf	?___flsub+6
  3704  09FB  0846               	movf	?___flmul+1,w
  3705  09FC  00EC               	movwf	?___flsub+5
  3706  09FD  0845               	movf	?___flmul,w
  3707  09FE  00EB               	movwf	?___flsub+4
  3708  09FF  26DC  120A  158A   	fcall	___flsub
  3709  0A02  086A               	movf	?___flsub+3,w
  3710  0A03  1703               	bsf	3,6	;RP1=1, select bank2
  3711  0A04  0093               	movwf	(_measure_capacitance$5379+3)^(0+256)
  3712  0A05  1303               	bcf	3,6	;RP1=0, select bank0
  3713  0A06  0869               	movf	?___flsub+2,w
  3714  0A07  1703               	bsf	3,6	;RP1=1, select bank2
  3715  0A08  0092               	movwf	(_measure_capacitance$5379+2)^(0+256)
  3716  0A09  1303               	bcf	3,6	;RP1=0, select bank0
  3717  0A0A  0868               	movf	?___flsub+1,w
  3718  0A0B  1703               	bsf	3,6	;RP1=1, select bank2
  3719  0A0C  0091               	movwf	(_measure_capacitance$5379+1)^(0+256)
  3720  0A0D  1303               	bcf	3,6	;RP1=0, select bank0
  3721  0A0E  0867               	movf	?___flsub,w
  3722  0A0F  1703               	bsf	3,6	;RP1=1, select bank2
  3723  0A10  0090               	movwf	_measure_capacitance$5379^(0+256)
  3724                           
  3725                           ;measure.c: 173: Cin = F2 * F2 * (F1 * F1 - F3 * F3) * CCal;
  3726  0A11  1683               	bsf	3,5	;RP0=1, select bank3
  3727  0A12  0833               	movf	(_F2+3)^(0+384),w
  3728  0A13  1283               	bcf	3,5	;RP0=0, select bank0
  3729  0A14  1303               	bcf	3,6	;RP1=0, select bank0
  3730  0A15  00C8               	movwf	?___flmul+3
  3731  0A16  1683               	bsf	3,5	;RP0=1, select bank3
  3732  0A17  1703               	bsf	3,6	;RP1=1, select bank3
  3733  0A18  0832               	movf	(_F2+2)^(0+384),w
  3734  0A19  1283               	bcf	3,5	;RP0=0, select bank0
  3735  0A1A  1303               	bcf	3,6	;RP1=0, select bank0
  3736  0A1B  00C7               	movwf	?___flmul+2
  3737  0A1C  1683               	bsf	3,5	;RP0=1, select bank3
  3738  0A1D  1703               	bsf	3,6	;RP1=1, select bank3
  3739  0A1E  0831               	movf	(_F2+1)^(0+384),w
  3740  0A1F  1283               	bcf	3,5	;RP0=0, select bank0
  3741  0A20  1303               	bcf	3,6	;RP1=0, select bank0
  3742  0A21  00C6               	movwf	?___flmul+1
  3743  0A22  1683               	bsf	3,5	;RP0=1, select bank3
  3744  0A23  1703               	bsf	3,6	;RP1=1, select bank3
  3745  0A24  0830               	movf	_F2^(0+384),w
  3746  0A25  1283               	bcf	3,5	;RP0=0, select bank0
  3747  0A26  1303               	bcf	3,6	;RP1=0, select bank0
  3748  0A27  00C5               	movwf	?___flmul
  3749  0A28  1703               	bsf	3,6	;RP1=1, select bank2
  3750  0A29  0813               	movf	(_measure_capacitance$5379+3)^(0+256),w
  3751  0A2A  1303               	bcf	3,6	;RP1=0, select bank0
  3752  0A2B  00CC               	movwf	?___flmul+7
  3753  0A2C  1703               	bsf	3,6	;RP1=1, select bank2
  3754  0A2D  0812               	movf	(_measure_capacitance$5379+2)^(0+256),w
  3755  0A2E  1303               	bcf	3,6	;RP1=0, select bank0
  3756  0A2F  00CB               	movwf	?___flmul+6
  3757  0A30  1703               	bsf	3,6	;RP1=1, select bank2
  3758  0A31  0811               	movf	(_measure_capacitance$5379+1)^(0+256),w
  3759  0A32  1303               	bcf	3,6	;RP1=0, select bank0
  3760  0A33  00CA               	movwf	?___flmul+5
  3761  0A34  1703               	bsf	3,6	;RP1=1, select bank2
  3762  0A35  0810               	movf	_measure_capacitance$5379^(0+256),w
  3763  0A36  1303               	bcf	3,6	;RP1=0, select bank0
  3764  0A37  00C9               	movwf	?___flmul+4
  3765  0A38  120A  118A  253E   	fcall	___flmul
      +       120A  158A         
  3766  0A3D  0848               	movf	?___flmul+3,w
  3767  0A3E  1703               	bsf	3,6	;RP1=1, select bank2
  3768  0A3F  0097               	movwf	(_measure_capacitance$5380+3)^(0+256)
  3769  0A40  1303               	bcf	3,6	;RP1=0, select bank0
  3770  0A41  0847               	movf	?___flmul+2,w
  3771  0A42  1703               	bsf	3,6	;RP1=1, select bank2
  3772  0A43  0096               	movwf	(_measure_capacitance$5380+2)^(0+256)
  3773  0A44  1303               	bcf	3,6	;RP1=0, select bank0
  3774  0A45  0846               	movf	?___flmul+1,w
  3775  0A46  1703               	bsf	3,6	;RP1=1, select bank2
  3776  0A47  0095               	movwf	(_measure_capacitance$5380+1)^(0+256)
  3777  0A48  1303               	bcf	3,6	;RP1=0, select bank0
  3778  0A49  0845               	movf	?___flmul,w
  3779  0A4A  1703               	bsf	3,6	;RP1=1, select bank2
  3780  0A4B  0094               	movwf	_measure_capacitance$5380^(0+256)
  3781                           
  3782                           ;measure.c: 173: Cin = F2 * F2 * (F1 * F1 - F3 * F3) * CCal;
  3783  0A4C  1683               	bsf	3,5	;RP0=1, select bank3
  3784  0A4D  0833               	movf	(_F2+3)^(0+384),w
  3785  0A4E  1283               	bcf	3,5	;RP0=0, select bank0
  3786  0A4F  1303               	bcf	3,6	;RP1=0, select bank0
  3787  0A50  00C8               	movwf	?___flmul+3
  3788  0A51  1683               	bsf	3,5	;RP0=1, select bank3
  3789  0A52  1703               	bsf	3,6	;RP1=1, select bank3
  3790  0A53  0832               	movf	(_F2+2)^(0+384),w
  3791  0A54  1283               	bcf	3,5	;RP0=0, select bank0
  3792  0A55  1303               	bcf	3,6	;RP1=0, select bank0
  3793  0A56  00C7               	movwf	?___flmul+2
  3794  0A57  1683               	bsf	3,5	;RP0=1, select bank3
  3795  0A58  1703               	bsf	3,6	;RP1=1, select bank3
  3796  0A59  0831               	movf	(_F2+1)^(0+384),w
  3797  0A5A  1283               	bcf	3,5	;RP0=0, select bank0
  3798  0A5B  1303               	bcf	3,6	;RP1=0, select bank0
  3799  0A5C  00C6               	movwf	?___flmul+1
  3800  0A5D  1683               	bsf	3,5	;RP0=1, select bank3
  3801  0A5E  1703               	bsf	3,6	;RP1=1, select bank3
  3802  0A5F  0830               	movf	_F2^(0+384),w
  3803  0A60  1283               	bcf	3,5	;RP0=0, select bank0
  3804  0A61  1303               	bcf	3,6	;RP1=0, select bank0
  3805  0A62  00C5               	movwf	?___flmul
  3806  0A63  1703               	bsf	3,6	;RP1=1, select bank2
  3807  0A64  0817               	movf	(_measure_capacitance$5380+3)^(0+256),w
  3808  0A65  1303               	bcf	3,6	;RP1=0, select bank0
  3809  0A66  00CC               	movwf	?___flmul+7
  3810  0A67  1703               	bsf	3,6	;RP1=1, select bank2
  3811  0A68  0816               	movf	(_measure_capacitance$5380+2)^(0+256),w
  3812  0A69  1303               	bcf	3,6	;RP1=0, select bank0
  3813  0A6A  00CB               	movwf	?___flmul+6
  3814  0A6B  1703               	bsf	3,6	;RP1=1, select bank2
  3815  0A6C  0815               	movf	(_measure_capacitance$5380+1)^(0+256),w
  3816  0A6D  1303               	bcf	3,6	;RP1=0, select bank0
  3817  0A6E  00CA               	movwf	?___flmul+5
  3818  0A6F  1703               	bsf	3,6	;RP1=1, select bank2
  3819  0A70  0814               	movf	_measure_capacitance$5380^(0+256),w
  3820  0A71  1303               	bcf	3,6	;RP1=0, select bank0
  3821  0A72  00C9               	movwf	?___flmul+4
  3822  0A73  120A  118A  253E   	fcall	___flmul
      +       120A  158A         
  3823  0A78  0848               	movf	?___flmul+3,w
  3824  0A79  1703               	bsf	3,6	;RP1=1, select bank2
  3825  0A7A  009B               	movwf	(_measure_capacitance$5381+3)^(0+256)
  3826  0A7B  1303               	bcf	3,6	;RP1=0, select bank0
  3827  0A7C  0847               	movf	?___flmul+2,w
  3828  0A7D  1703               	bsf	3,6	;RP1=1, select bank2
  3829  0A7E  009A               	movwf	(_measure_capacitance$5381+2)^(0+256)
  3830  0A7F  1303               	bcf	3,6	;RP1=0, select bank0
  3831  0A80  0846               	movf	?___flmul+1,w
  3832  0A81  1703               	bsf	3,6	;RP1=1, select bank2
  3833  0A82  0099               	movwf	(_measure_capacitance$5381+1)^(0+256)
  3834  0A83  1303               	bcf	3,6	;RP1=0, select bank0
  3835  0A84  0845               	movf	?___flmul,w
  3836  0A85  1703               	bsf	3,6	;RP1=1, select bank2
  3837  0A86  0098               	movwf	_measure_capacitance$5381^(0+256)
  3838                           
  3839                           ;measure.c: 173: Cin = F2 * F2 * (F1 * F1 - F3 * F3) * CCal;
  3840  0A87  1683               	bsf	3,5	;RP0=1, select bank3
  3841  0A88  0860               	movf	(_CCal+3)^(0+384),w
  3842  0A89  1283               	bcf	3,5	;RP0=0, select bank0
  3843  0A8A  1303               	bcf	3,6	;RP1=0, select bank0
  3844  0A8B  00C8               	movwf	?___flmul+3
  3845  0A8C  1683               	bsf	3,5	;RP0=1, select bank3
  3846  0A8D  1703               	bsf	3,6	;RP1=1, select bank3
  3847  0A8E  085F               	movf	(_CCal+2)^(0+384),w
  3848  0A8F  1283               	bcf	3,5	;RP0=0, select bank0
  3849  0A90  1303               	bcf	3,6	;RP1=0, select bank0
  3850  0A91  00C7               	movwf	?___flmul+2
  3851  0A92  1683               	bsf	3,5	;RP0=1, select bank3
  3852  0A93  1703               	bsf	3,6	;RP1=1, select bank3
  3853  0A94  085E               	movf	(_CCal+1)^(0+384),w
  3854  0A95  1283               	bcf	3,5	;RP0=0, select bank0
  3855  0A96  1303               	bcf	3,6	;RP1=0, select bank0
  3856  0A97  00C6               	movwf	?___flmul+1
  3857  0A98  1683               	bsf	3,5	;RP0=1, select bank3
  3858  0A99  1703               	bsf	3,6	;RP1=1, select bank3
  3859  0A9A  085D               	movf	_CCal^(0+384),w
  3860  0A9B  1283               	bcf	3,5	;RP0=0, select bank0
  3861  0A9C  1303               	bcf	3,6	;RP1=0, select bank0
  3862  0A9D  00C5               	movwf	?___flmul
  3863  0A9E  1703               	bsf	3,6	;RP1=1, select bank2
  3864  0A9F  081B               	movf	(_measure_capacitance$5381+3)^(0+256),w
  3865  0AA0  1303               	bcf	3,6	;RP1=0, select bank0
  3866  0AA1  00CC               	movwf	?___flmul+7
  3867  0AA2  1703               	bsf	3,6	;RP1=1, select bank2
  3868  0AA3  081A               	movf	(_measure_capacitance$5381+2)^(0+256),w
  3869  0AA4  1303               	bcf	3,6	;RP1=0, select bank0
  3870  0AA5  00CB               	movwf	?___flmul+6
  3871  0AA6  1703               	bsf	3,6	;RP1=1, select bank2
  3872  0AA7  0819               	movf	(_measure_capacitance$5381+1)^(0+256),w
  3873  0AA8  1303               	bcf	3,6	;RP1=0, select bank0
  3874  0AA9  00CA               	movwf	?___flmul+5
  3875  0AAA  1703               	bsf	3,6	;RP1=1, select bank2
  3876  0AAB  0818               	movf	_measure_capacitance$5381^(0+256),w
  3877  0AAC  1303               	bcf	3,6	;RP1=0, select bank0
  3878  0AAD  00C9               	movwf	?___flmul+4
  3879  0AAE  120A  118A  253E   	fcall	___flmul
      +       120A  158A         
  3880  0AB3  0848               	movf	?___flmul+3,w
  3881  0AB4  1703               	bsf	3,6	;RP1=1, select bank2
  3882  0AB5  00A2               	movwf	(measure_capacitance@Cin+3)^(0+256)
  3883  0AB6  1303               	bcf	3,6	;RP1=0, select bank0
  3884  0AB7  0847               	movf	?___flmul+2,w
  3885  0AB8  1703               	bsf	3,6	;RP1=1, select bank2
  3886  0AB9  00A1               	movwf	(measure_capacitance@Cin+2)^(0+256)
  3887  0ABA  1303               	bcf	3,6	;RP1=0, select bank0
  3888  0ABB  0846               	movf	?___flmul+1,w
  3889  0ABC  1703               	bsf	3,6	;RP1=1, select bank2
  3890  0ABD  00A0               	movwf	(measure_capacitance@Cin+1)^(0+256)
  3891  0ABE  1303               	bcf	3,6	;RP1=0, select bank0
  3892  0ABF  0845               	movf	?___flmul,w
  3893  0AC0  1703               	bsf	3,6	;RP1=1, select bank2
  3894  0AC1  009F               	movwf	measure_capacitance@Cin^(0+256)
  3895                           
  3896                           ;measure.c: 177: ser_puts("Cin=");
  3897  0AC2  308D               	movlw	(STR_10-__stringbase)& (0+255)
  3898  0AC3  2437  120A  158A   	fcall	_ser_puts
  3899                           
  3900                           ;measure.c: 178: format_double(Cin);
  3901  0AC6  1283               	bcf	3,5	;RP0=0, select bank2
  3902  0AC7  1703               	bsf	3,6	;RP1=1, select bank2
  3903  0AC8  0822               	movf	(measure_capacitance@Cin+3)^(0+256),w
  3904  0AC9  1683               	bsf	3,5	;RP0=1, select bank1
  3905  0ACA  1303               	bcf	3,6	;RP1=0, select bank1
  3906  0ACB  00D9               	movwf	(?_format_double+3)^(0+128)
  3907  0ACC  1283               	bcf	3,5	;RP0=0, select bank2
  3908  0ACD  1703               	bsf	3,6	;RP1=1, select bank2
  3909  0ACE  0821               	movf	(measure_capacitance@Cin+2)^(0+256),w
  3910  0ACF  1683               	bsf	3,5	;RP0=1, select bank1
  3911  0AD0  1303               	bcf	3,6	;RP1=0, select bank1
  3912  0AD1  00D8               	movwf	(?_format_double+2)^(0+128)
  3913  0AD2  1283               	bcf	3,5	;RP0=0, select bank2
  3914  0AD3  1703               	bsf	3,6	;RP1=1, select bank2
  3915  0AD4  0820               	movf	(measure_capacitance@Cin+1)^(0+256),w
  3916  0AD5  1683               	bsf	3,5	;RP0=1, select bank1
  3917  0AD6  1303               	bcf	3,6	;RP1=0, select bank1
  3918  0AD7  00D7               	movwf	(?_format_double+1)^(0+128)
  3919  0AD8  1283               	bcf	3,5	;RP0=0, select bank2
  3920  0AD9  1703               	bsf	3,6	;RP1=1, select bank2
  3921  0ADA  081F               	movf	measure_capacitance@Cin^(0+256),w
  3922  0ADB  1683               	bsf	3,5	;RP0=1, select bank1
  3923  0ADC  1303               	bcf	3,6	;RP1=0, select bank1
  3924  0ADD  00D6               	movwf	?_format_double^(0+128)
  3925  0ADE  247D  120A  158A   	fcall	_format_double
  3926                           
  3927                           ;measure.c: 179: ser_putch(' ');
  3928  0AE1  3020               	movlw	32
  3929  0AE2  244E  120A  158A   	fcall	_ser_putch
  3930                           
  3931                           ;measure.c: 180: format_xint32(*(uint32_t*)&Cin);
  3932  0AE5  1283               	bcf	3,5	;RP0=0, select bank2
  3933  0AE6  1703               	bsf	3,6	;RP1=1, select bank2
  3934  0AE7  0822               	movf	(measure_capacitance@Cin+3)^(0+256),w
  3935  0AE8  1303               	bcf	3,6	;RP1=0, select bank0
  3936  0AE9  00D0               	movwf	?_format_xint32+3
  3937  0AEA  1703               	bsf	3,6	;RP1=1, select bank2
  3938  0AEB  0821               	movf	(measure_capacitance@Cin+2)^(0+256),w
  3939  0AEC  1303               	bcf	3,6	;RP1=0, select bank0
  3940  0AED  00CF               	movwf	?_format_xint32+2
  3941  0AEE  1703               	bsf	3,6	;RP1=1, select bank2
  3942  0AEF  0820               	movf	(measure_capacitance@Cin+1)^(0+256),w
  3943  0AF0  1303               	bcf	3,6	;RP1=0, select bank0
  3944  0AF1  00CE               	movwf	?_format_xint32+1
  3945  0AF2  1703               	bsf	3,6	;RP1=1, select bank2
  3946  0AF3  081F               	movf	measure_capacitance@Cin^(0+256),w
  3947  0AF4  1303               	bcf	3,6	;RP1=0, select bank0
  3948  0AF5  00CD               	movwf	?_format_xint32
  3949  0AF6  2463  120A  158A   	fcall	_format_xint32
  3950                           
  3951                           ;measure.c: 181: ser_puts("\r\n");
  3952  0AF9  3097               	movlw	(STR_1-__stringbase)& (0+255)
  3953  0AFA  2437               	fcall	_ser_puts
  3954                           
  3955                           ;measure.c: 183: if(Cin > 999) {
  3956  0AFB  3044               	movlw	68
  3957  0AFC  1283               	bcf	3,5	;RP0=0, select bank0
  3958  0AFD  1303               	bcf	3,6	;RP1=0, select bank0
  3959  0AFE  00A3               	movwf	?___flge+3
  3960  0AFF  3079               	movlw	121
  3961  0B00  00A2               	movwf	?___flge+2
  3962  0B01  30C0               	movlw	192
  3963  0B02  00A1               	movwf	?___flge+1
  3964  0B03  01A0               	clrf	?___flge
  3965  0B04  1703               	bsf	3,6	;RP1=1, select bank2
  3966  0B05  0822               	movf	(measure_capacitance@Cin+3)^(0+256),w
  3967  0B06  1303               	bcf	3,6	;RP1=0, select bank0
  3968  0B07  00A7               	movwf	?___flge+7
  3969  0B08  1703               	bsf	3,6	;RP1=1, select bank2
  3970  0B09  0821               	movf	(measure_capacitance@Cin+2)^(0+256),w
  3971  0B0A  1303               	bcf	3,6	;RP1=0, select bank0
  3972  0B0B  00A6               	movwf	?___flge+6
  3973  0B0C  1703               	bsf	3,6	;RP1=1, select bank2
  3974  0B0D  0820               	movf	(measure_capacitance@Cin+1)^(0+256),w
  3975  0B0E  1303               	bcf	3,6	;RP1=0, select bank0
  3976  0B0F  00A5               	movwf	?___flge+5
  3977  0B10  1703               	bsf	3,6	;RP1=1, select bank2
  3978  0B11  081F               	movf	measure_capacitance@Cin^(0+256),w
  3979  0B12  1303               	bcf	3,6	;RP1=0, select bank0
  3980  0B13  00A4               	movwf	?___flge+4
  3981  0B14  120A  118A  25BE   	fcall	___flge
      +       120A  158A         
  3982  0B19  1803               	btfsc	3,0
  3983  0B1A  2BDA               	goto	l9503
  3984                           
  3985                           ;measure.c: 184: if(Cin > (999e+03l)) {
  3986  0B1B  3049               	movlw	73
  3987  0B1C  00A3               	movwf	?___flge+3
  3988  0B1D  3073               	movlw	115
  3989  0B1E  00A2               	movwf	?___flge+2
  3990  0B1F  30E5               	movlw	229
  3991  0B20  00A1               	movwf	?___flge+1
  3992  0B21  3080               	movlw	128
  3993  0B22  00A0               	movwf	?___flge
  3994  0B23  1703               	bsf	3,6	;RP1=1, select bank2
  3995  0B24  0822               	movf	(measure_capacitance@Cin+3)^(0+256),w
  3996  0B25  1303               	bcf	3,6	;RP1=0, select bank0
  3997  0B26  00A7               	movwf	?___flge+7
  3998  0B27  1703               	bsf	3,6	;RP1=1, select bank2
  3999  0B28  0821               	movf	(measure_capacitance@Cin+2)^(0+256),w
  4000  0B29  1303               	bcf	3,6	;RP1=0, select bank0
  4001  0B2A  00A6               	movwf	?___flge+6
  4002  0B2B  1703               	bsf	3,6	;RP1=1, select bank2
  4003  0B2C  0820               	movf	(measure_capacitance@Cin+1)^(0+256),w
  4004  0B2D  1303               	bcf	3,6	;RP1=0, select bank0
  4005  0B2E  00A5               	movwf	?___flge+5
  4006  0B2F  1703               	bsf	3,6	;RP1=1, select bank2
  4007  0B30  081F               	movf	measure_capacitance@Cin^(0+256),w
  4008  0B31  1303               	bcf	3,6	;RP1=0, select bank0
  4009  0B32  00A4               	movwf	?___flge+4
  4010  0B33  120A  118A  25BE   	fcall	___flge
      +       120A  158A         
  4011  0B38  1803               	btfsc	3,0
  4012  0B39  2BB0               	goto	l9499
  4013                           
  4014                           ;measure.c: 185: if(Cin > (999e+06l)) {
  4015  0B3A  304E               	movlw	78
  4016  0B3B  00A3               	movwf	?___flge+3
  4017  0B3C  306E               	movlw	110
  4018  0B3D  00A2               	movwf	?___flge+2
  4019  0B3E  302E               	movlw	46
  4020  0B3F  00A1               	movwf	?___flge+1
  4021  0B40  301F               	movlw	31
  4022  0B41  00A0               	movwf	?___flge
  4023  0B42  1703               	bsf	3,6	;RP1=1, select bank2
  4024  0B43  0822               	movf	(measure_capacitance@Cin+3)^(0+256),w
  4025  0B44  1303               	bcf	3,6	;RP1=0, select bank0
  4026  0B45  00A7               	movwf	?___flge+7
  4027  0B46  1703               	bsf	3,6	;RP1=1, select bank2
  4028  0B47  0821               	movf	(measure_capacitance@Cin+2)^(0+256),w
  4029  0B48  1303               	bcf	3,6	;RP1=0, select bank0
  4030  0B49  00A6               	movwf	?___flge+6
  4031  0B4A  1703               	bsf	3,6	;RP1=1, select bank2
  4032  0B4B  0820               	movf	(measure_capacitance@Cin+1)^(0+256),w
  4033  0B4C  1303               	bcf	3,6	;RP1=0, select bank0
  4034  0B4D  00A5               	movwf	?___flge+5
  4035  0B4E  1703               	bsf	3,6	;RP1=1, select bank2
  4036  0B4F  081F               	movf	measure_capacitance@Cin^(0+256),w
  4037  0B50  1303               	bcf	3,6	;RP1=0, select bank0
  4038  0B51  00A4               	movwf	?___flge+4
  4039  0B52  120A  118A  25BE   	fcall	___flge
      +       120A  158A         
  4040  0B57  1803               	btfsc	3,0
  4041  0B58  2B85               	goto	l9495
  4042                           
  4043                           ;measure.c: 186: Cin = Cin / (1e+09);
  4044  0B59  304E               	movlw	78
  4045  0B5A  00B5               	movwf	?___fldiv+3
  4046  0B5B  306E               	movlw	110
  4047  0B5C  00B4               	movwf	?___fldiv+2
  4048  0B5D  306B               	movlw	107
  4049  0B5E  00B3               	movwf	?___fldiv+1
  4050  0B5F  3028               	movlw	40
  4051  0B60  00B2               	movwf	?___fldiv
  4052  0B61  1703               	bsf	3,6	;RP1=1, select bank2
  4053  0B62  0822               	movf	(measure_capacitance@Cin+3)^(0+256),w
  4054  0B63  1303               	bcf	3,6	;RP1=0, select bank0
  4055  0B64  00B9               	movwf	?___fldiv+7
  4056  0B65  1703               	bsf	3,6	;RP1=1, select bank2
  4057  0B66  0821               	movf	(measure_capacitance@Cin+2)^(0+256),w
  4058  0B67  1303               	bcf	3,6	;RP1=0, select bank0
  4059  0B68  00B8               	movwf	?___fldiv+6
  4060  0B69  1703               	bsf	3,6	;RP1=1, select bank2
  4061  0B6A  0820               	movf	(measure_capacitance@Cin+1)^(0+256),w
  4062  0B6B  1303               	bcf	3,6	;RP1=0, select bank0
  4063  0B6C  00B7               	movwf	?___fldiv+5
  4064  0B6D  1703               	bsf	3,6	;RP1=1, select bank2
  4065  0B6E  081F               	movf	measure_capacitance@Cin^(0+256),w
  4066  0B6F  1303               	bcf	3,6	;RP1=0, select bank0
  4067  0B70  00B6               	movwf	?___fldiv+4
  4068  0B71  25F9  120A  158A   	fcall	___fldiv
  4069  0B74  0835               	movf	?___fldiv+3,w
  4070  0B75  1703               	bsf	3,6	;RP1=1, select bank2
  4071  0B76  00A2               	movwf	(measure_capacitance@Cin+3)^(0+256)
  4072  0B77  1303               	bcf	3,6	;RP1=0, select bank0
  4073  0B78  0834               	movf	?___fldiv+2,w
  4074  0B79  1703               	bsf	3,6	;RP1=1, select bank2
  4075  0B7A  00A1               	movwf	(measure_capacitance@Cin+2)^(0+256)
  4076  0B7B  1303               	bcf	3,6	;RP1=0, select bank0
  4077  0B7C  0833               	movf	?___fldiv+1,w
  4078  0B7D  1703               	bsf	3,6	;RP1=1, select bank2
  4079  0B7E  00A0               	movwf	(measure_capacitance@Cin+1)^(0+256)
  4080  0B7F  1303               	bcf	3,6	;RP1=0, select bank0
  4081  0B80  0832               	movf	?___fldiv,w
  4082  0B81  1703               	bsf	3,6	;RP1=1, select bank2
  4083  0B82  009F               	movwf	measure_capacitance@Cin^(0+256)
  4084                           
  4085                           ;measure.c: 187: unit = 4;
  4086  0B83  3004               	movlw	4
  4087  0B84  2BDC               	goto	L2
  4088  0B85                     l9495:	
  4089                           ;measure.c: 188: } else {
  4090                           
  4091                           
  4092                           ;measure.c: 189: Cin = Cin / (1e+06);
  4093  0B85  3049               	movlw	73
  4094  0B86  00B5               	movwf	?___fldiv+3
  4095  0B87  3074               	movlw	116
  4096  0B88  00B4               	movwf	?___fldiv+2
  4097  0B89  3024               	movlw	36
  4098  0B8A  00B3               	movwf	?___fldiv+1
  4099  0B8B  01B2               	clrf	?___fldiv
  4100  0B8C  1703               	bsf	3,6	;RP1=1, select bank2
  4101  0B8D  0822               	movf	(measure_capacitance@Cin+3)^(0+256),w
  4102  0B8E  1303               	bcf	3,6	;RP1=0, select bank0
  4103  0B8F  00B9               	movwf	?___fldiv+7
  4104  0B90  1703               	bsf	3,6	;RP1=1, select bank2
  4105  0B91  0821               	movf	(measure_capacitance@Cin+2)^(0+256),w
  4106  0B92  1303               	bcf	3,6	;RP1=0, select bank0
  4107  0B93  00B8               	movwf	?___fldiv+6
  4108  0B94  1703               	bsf	3,6	;RP1=1, select bank2
  4109  0B95  0820               	movf	(measure_capacitance@Cin+1)^(0+256),w
  4110  0B96  1303               	bcf	3,6	;RP1=0, select bank0
  4111  0B97  00B7               	movwf	?___fldiv+5
  4112  0B98  1703               	bsf	3,6	;RP1=1, select bank2
  4113  0B99  081F               	movf	measure_capacitance@Cin^(0+256),w
  4114  0B9A  1303               	bcf	3,6	;RP1=0, select bank0
  4115  0B9B  00B6               	movwf	?___fldiv+4
  4116  0B9C  25F9  120A  158A   	fcall	___fldiv
  4117  0B9F  0835               	movf	?___fldiv+3,w
  4118  0BA0  1703               	bsf	3,6	;RP1=1, select bank2
  4119  0BA1  00A2               	movwf	(measure_capacitance@Cin+3)^(0+256)
  4120  0BA2  1303               	bcf	3,6	;RP1=0, select bank0
  4121  0BA3  0834               	movf	?___fldiv+2,w
  4122  0BA4  1703               	bsf	3,6	;RP1=1, select bank2
  4123  0BA5  00A1               	movwf	(measure_capacitance@Cin+2)^(0+256)
  4124  0BA6  1303               	bcf	3,6	;RP1=0, select bank0
  4125  0BA7  0833               	movf	?___fldiv+1,w
  4126  0BA8  1703               	bsf	3,6	;RP1=1, select bank2
  4127  0BA9  00A0               	movwf	(measure_capacitance@Cin+1)^(0+256)
  4128  0BAA  1303               	bcf	3,6	;RP1=0, select bank0
  4129  0BAB  0832               	movf	?___fldiv,w
  4130  0BAC  1703               	bsf	3,6	;RP1=1, select bank2
  4131  0BAD  009F               	movwf	measure_capacitance@Cin^(0+256)
  4132                           
  4133                           ;measure.c: 190: unit = 5;
  4134  0BAE  3005               	movlw	5
  4135  0BAF  2BDC               	goto	L2
  4136  0BB0                     l9499:	
  4137                           
  4138                           ;measure.c: 193: Cin = Cin / 1e+03;
  4139  0BB0  3044               	movlw	68
  4140  0BB1  00B5               	movwf	?___fldiv+3
  4141  0BB2  307A               	movlw	122
  4142  0BB3  00B4               	movwf	?___fldiv+2
  4143  0BB4  01B3               	clrf	?___fldiv+1
  4144  0BB5  01B2               	clrf	?___fldiv
  4145  0BB6  1703               	bsf	3,6	;RP1=1, select bank2
  4146  0BB7  0822               	movf	(measure_capacitance@Cin+3)^(0+256),w
  4147  0BB8  1303               	bcf	3,6	;RP1=0, select bank0
  4148  0BB9  00B9               	movwf	?___fldiv+7
  4149  0BBA  1703               	bsf	3,6	;RP1=1, select bank2
  4150  0BBB  0821               	movf	(measure_capacitance@Cin+2)^(0+256),w
  4151  0BBC  1303               	bcf	3,6	;RP1=0, select bank0
  4152  0BBD  00B8               	movwf	?___fldiv+6
  4153  0BBE  1703               	bsf	3,6	;RP1=1, select bank2
  4154  0BBF  0820               	movf	(measure_capacitance@Cin+1)^(0+256),w
  4155  0BC0  1303               	bcf	3,6	;RP1=0, select bank0
  4156  0BC1  00B7               	movwf	?___fldiv+5
  4157  0BC2  1703               	bsf	3,6	;RP1=1, select bank2
  4158  0BC3  081F               	movf	measure_capacitance@Cin^(0+256),w
  4159  0BC4  1303               	bcf	3,6	;RP1=0, select bank0
  4160  0BC5  00B6               	movwf	?___fldiv+4
  4161  0BC6  25F9  120A  158A   	fcall	___fldiv
  4162  0BC9  0835               	movf	?___fldiv+3,w
  4163  0BCA  1703               	bsf	3,6	;RP1=1, select bank2
  4164  0BCB  00A2               	movwf	(measure_capacitance@Cin+3)^(0+256)
  4165  0BCC  1303               	bcf	3,6	;RP1=0, select bank0
  4166  0BCD  0834               	movf	?___fldiv+2,w
  4167  0BCE  1703               	bsf	3,6	;RP1=1, select bank2
  4168  0BCF  00A1               	movwf	(measure_capacitance@Cin+2)^(0+256)
  4169  0BD0  1303               	bcf	3,6	;RP1=0, select bank0
  4170  0BD1  0833               	movf	?___fldiv+1,w
  4171  0BD2  1703               	bsf	3,6	;RP1=1, select bank2
  4172  0BD3  00A0               	movwf	(measure_capacitance@Cin+1)^(0+256)
  4173  0BD4  1303               	bcf	3,6	;RP1=0, select bank0
  4174  0BD5  0832               	movf	?___fldiv,w
  4175  0BD6  1703               	bsf	3,6	;RP1=1, select bank2
  4176  0BD7  009F               	movwf	measure_capacitance@Cin^(0+256)
  4177                           
  4178                           ;measure.c: 194: unit = 6;
  4179  0BD8  3006               	movlw	6
  4180  0BD9  2BDC               	goto	L2
  4181  0BDA                     l9503:	
  4182                           
  4183                           ;measure.c: 197: unit = 7;
  4184  0BDA  3007               	movlw	7
  4185  0BDB  1703               	bsf	3,6	;RP1=1, select bank2
  4186  0BDC                     L2:	
  4187  0BDC  009C               	movwf	measure_capacitance@unit^(0+256)
  4188                           
  4189                           ;measure.c: 199: Cin = Cin * 100;
  4190  0BDD  3042               	movlw	66
  4191  0BDE  1303               	bcf	3,6	;RP1=0, select bank0
  4192  0BDF  00C8               	movwf	?___flmul+3
  4193  0BE0  30C8               	movlw	200
  4194  0BE1  00C7               	movwf	?___flmul+2
  4195  0BE2  01C6               	clrf	?___flmul+1
  4196  0BE3  01C5               	clrf	?___flmul
  4197  0BE4  1703               	bsf	3,6	;RP1=1, select bank2
  4198  0BE5  0822               	movf	(measure_capacitance@Cin+3)^(0+256),w
  4199  0BE6  1303               	bcf	3,6	;RP1=0, select bank0
  4200  0BE7  00CC               	movwf	?___flmul+7
  4201  0BE8  1703               	bsf	3,6	;RP1=1, select bank2
  4202  0BE9  0821               	movf	(measure_capacitance@Cin+2)^(0+256),w
  4203  0BEA  1303               	bcf	3,6	;RP1=0, select bank0
  4204  0BEB  00CB               	movwf	?___flmul+6
  4205  0BEC  1703               	bsf	3,6	;RP1=1, select bank2
  4206  0BED  0820               	movf	(measure_capacitance@Cin+1)^(0+256),w
  4207  0BEE  1303               	bcf	3,6	;RP1=0, select bank0
  4208  0BEF  00CA               	movwf	?___flmul+5
  4209  0BF0  1703               	bsf	3,6	;RP1=1, select bank2
  4210  0BF1  081F               	movf	measure_capacitance@Cin^(0+256),w
  4211  0BF2  1303               	bcf	3,6	;RP1=0, select bank0
  4212  0BF3  00C9               	movwf	?___flmul+4
  4213  0BF4  120A  118A  253E   	fcall	___flmul
      +       120A  158A         
  4214  0BF9  0848               	movf	?___flmul+3,w
  4215  0BFA  1703               	bsf	3,6	;RP1=1, select bank2
  4216  0BFB  00A2               	movwf	(measure_capacitance@Cin+3)^(0+256)
  4217  0BFC  1303               	bcf	3,6	;RP1=0, select bank0
  4218  0BFD  0847               	movf	?___flmul+2,w
  4219  0BFE  1703               	bsf	3,6	;RP1=1, select bank2
  4220  0BFF  00A1               	movwf	(measure_capacitance@Cin+2)^(0+256)
  4221  0C00  1303               	bcf	3,6	;RP1=0, select bank0
  4222  0C01  0846               	movf	?___flmul+1,w
  4223  0C02  1703               	bsf	3,6	;RP1=1, select bank2
  4224  0C03  00A0               	movwf	(measure_capacitance@Cin+1)^(0+256)
  4225  0C04  1303               	bcf	3,6	;RP1=0, select bank0
  4226  0C05  0845               	movf	?___flmul,w
  4227  0C06  1703               	bsf	3,6	;RP1=1, select bank2
  4228  0C07  009F               	movwf	measure_capacitance@Cin^(0+256)
  4229                           
  4230                           ;measure.c: 200: var = (uint16_t)Cin;
  4231  0C08  0822               	movf	(measure_capacitance@Cin+3)^(0+256),w
  4232  0C09  1303               	bcf	3,6	;RP1=0, select bank0
  4233  0C0A  00AB               	movwf	?___fltol+3
  4234  0C0B  1703               	bsf	3,6	;RP1=1, select bank2
  4235  0C0C  0821               	movf	(measure_capacitance@Cin+2)^(0+256),w
  4236  0C0D  1303               	bcf	3,6	;RP1=0, select bank0
  4237  0C0E  00AA               	movwf	?___fltol+2
  4238  0C0F  1703               	bsf	3,6	;RP1=1, select bank2
  4239  0C10  0820               	movf	(measure_capacitance@Cin+1)^(0+256),w
  4240  0C11  1303               	bcf	3,6	;RP1=0, select bank0
  4241  0C12  00A9               	movwf	?___fltol+1
  4242  0C13  1703               	bsf	3,6	;RP1=1, select bank2
  4243  0C14  081F               	movf	measure_capacitance@Cin^(0+256),w
  4244  0C15  1303               	bcf	3,6	;RP1=0, select bank0
  4245  0C16  00A8               	movwf	?___fltol
  4246  0C17  2672  120A  158A   	fcall	___fltol
  4247  0C1A  0829               	movf	?___fltol+1,w
  4248  0C1B  1703               	bsf	3,6	;RP1=1, select bank2
  4249  0C1C  009E               	movwf	(measure_capacitance@var+1)^(0+256)
  4250  0C1D  1303               	bcf	3,6	;RP1=0, select bank0
  4251  0C1E  0828               	movf	?___fltol,w
  4252  0C1F  1703               	bsf	3,6	;RP1=1, select bank2
  4253  0C20  009D               	movwf	measure_capacitance@var^(0+256)
  4254                           
  4255                           ;measure.c: 202: print_reading(var);
  4256  0C21  081E               	movf	(measure_capacitance@var+1)^(0+256),w
  4257  0C22  00F4               	movwf	?_print_reading+1
  4258  0C23  081D               	movf	measure_capacitance@var^(0+256),w
  4259  0C24  00F3               	movwf	?_print_reading
  4260                           
  4261                           ;measure.c: 203: print_unit(unit);
  4262  0C25  081C               	movf	measure_capacitance@unit^(0+256),w
  4263  0C26  2FF0               	ljmp	l1986
  4264  0C27                     __end_of_measure_capacitance:	
  4265  0C27                     __ptext1294:	
  4266 ;; =============== function _eval_poly ends ============
  4267                           
  4268                           
  4269 ;; *************** function _buf_to_ser *****************
  4270 ;; Defined at:
  4271 ;;		line 121 in file "../../../src/measure.c"
  4272 ;; Parameters:    Size  Location     Type
  4273 ;;		None
  4274 ;; Auto vars:     Size  Location     Type
  4275 ;;		None
  4276 ;; Return value:  Size  Location     Type
  4277 ;;		None               void
  4278 ;; Registers used:
  4279 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4280 ;; Tracked objects:
  4281 ;;		On entry : 60/0
  4282 ;;		On exit  : 60/60
  4283 ;;		Unchanged: FFE9F/0
  4284 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4285 ;;      Params:         0       0       0       0       0
  4286 ;;      Locals:         0       0       0       0       0
  4287 ;;      Temps:          0       0       0       0       0
  4288 ;;      Totals:         0       0       0       0       0
  4289 ;;Total ram usage:        0 bytes
  4290 ;; Hardware stack levels used:    1
  4291 ;; Hardware stack levels required when called:    3
  4292 ;; This function calls:
  4293 ;;		_ser_put
  4294 ;; This function is called by:
  4295 ;;		_measure_capacitance
  4296 ;; This function uses a non-reentrant model
  4297 ;;
  4298  0C27                     _buf_to_ser:	
  4299                           
  4300                           ;measure.c: 122: ser_put(buffer.x, buffer.n);
  4301                           
  4302                           ; Regs used in _buf_to_ser: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4303  0C27  1683               	bsf	3,5	;RP0=1, select bank3
  4304  0C28  1703               	bsf	3,6	;RP1=1, select bank3
  4305  0C29  0E4C               	swapf	(_buffer^(0+384)+16),w
  4306  0C2A  390F               	andlw	15
  4307  0C2B  00F4               	movwf	?_ser_put
  4308  0C2C  30BC               	movlw	_buffer& (0+255)
  4309  0C2D  01F5               	clrf	?_ser_put+1
  4310  0C2E  160A  118A  2116   	fcall	_ser_put
  4311                           
  4312                           ;measure.c: 123: buffer.p = 0, buffer.n = 0, 0;
  4313  0C31  30F0               	movlw	-16
  4314  0C32  1703               	bsf	3,6	;RP1=1, select bank3
  4315  0C33  05CC               	andwf	(_buffer^(0+384)+16),f
  4316  0C34  300F               	movlw	-241
  4317  0C35  05CC               	andwf	(_buffer^(0+384)+16),f
  4318  0C36  0008               	return
  4319  0C37                     __end_of_buf_to_ser:	
  4320  0C37                     __ptext1309:	
  4321 ;; =============== function _ser_put ends ============
  4322                           
  4323                           
  4324 ;; *************** function _ser_puts *****************
  4325 ;; Defined at:
  4326 ;;		line 70 in file "../../../lib/ser.c"
  4327 ;; Parameters:    Size  Location     Type
  4328 ;;  s               1    wreg     PTR const unsigned char 
  4329 ;;		 -> STR_15(3), STR_14(3), STR_13(16), STR_12(16), 
  4330 ;;		 -> STR_11(3), STR_10(5), STR_9(3), STR_8(8), 
  4331 ;;		 -> STR_7(6), STR_6(6), STR_5(6), STR_4(5), 
  4332 ;;		 -> STR_2(3), STR_1(3), 
  4333 ;; Auto vars:     Size  Location     Type
  4334 ;;  s               1    4[COMMON] PTR const unsigned char 
  4335 ;;		 -> STR_15(3), STR_14(3), STR_13(16), STR_12(16), 
  4336 ;;		 -> STR_11(3), STR_10(5), STR_9(3), STR_8(8), 
  4337 ;;		 -> STR_7(6), STR_6(6), STR_5(6), STR_4(5), 
  4338 ;;		 -> STR_2(3), STR_1(3), 
  4339 ;; Return value:  Size  Location     Type
  4340 ;;		None               void
  4341 ;; Registers used:
  4342 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4343 ;; Tracked objects:
  4344 ;;		On entry : 0/20
  4345 ;;		On exit  : 0/0
  4346 ;;		Unchanged: FFE9F/0
  4347 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4348 ;;      Params:         0       0       0       0       0
  4349 ;;      Locals:         1       0       0       0       0
  4350 ;;      Temps:          0       0       0       0       0
  4351 ;;      Totals:         1       0       0       0       0
  4352 ;;Total ram usage:        1 bytes
  4353 ;; Hardware stack levels used:    1
  4354 ;; Hardware stack levels required when called:    2
  4355 ;; This function calls:
  4356 ;;		_ser_putch
  4357 ;; This function is called by:
  4358 ;;		_print_buffer
  4359 ;;		_calibrate
  4360 ;;		_measure_capacitance
  4361 ;;		_main
  4362 ;; This function uses a non-reentrant model
  4363 ;;
  4364  0C37                     _ser_puts:	
  4365                           
  4366                           ; Regs used in _ser_puts: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4367                           ;ser_puts@s stored from wreg
  4368  0C37  00F4               	movwf	ser_puts@s
  4369  0C38                     l8823:	
  4370                           ;ser.c: 71: while(*s) ser_putch(*s++);
  4371                           
  4372  0C38  0874               	movf	ser_puts@s,w
  4373  0C39  0084               	movwf	4
  4374  0C3A  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  4375  0C3F  3800               	iorlw	0
  4376  0C40  1903               	btfsc	3,2
  4377  0C41  0008               	return
  4378  0C42  0874               	movf	ser_puts@s,w
  4379  0C43  0084               	movwf	4
  4380  0C44  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  4381  0C49  244E  120A  158A   	fcall	_ser_putch
  4382  0C4C  0AF4               	incf	ser_puts@s,f
  4383  0C4D  2C38               	goto	l8823
  4384  0C4E                     __end_of_ser_puts:	
  4385  0C4E                     __ptext1325:	
  4386 ;; =============== function _ser_init ends ============
  4387                           
  4388                           
  4389 ;; *************** function _ser_putch *****************
  4390 ;; Defined at:
  4391 ;;		line 60 in file "../../../lib/ser.c"
  4392 ;; Parameters:    Size  Location     Type
  4393 ;;  c               1    wreg     unsigned char 
  4394 ;; Auto vars:     Size  Location     Type
  4395 ;;  c               1    3[COMMON] unsigned char 
  4396 ;; Return value:  Size  Location     Type
  4397 ;;		None               void
  4398 ;; Registers used:
  4399 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  4400 ;; Tracked objects:
  4401 ;;		On entry : 0/60
  4402 ;;		On exit  : 160/120
  4403 ;;		Unchanged: FFE9F/0
  4404 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4405 ;;      Params:         0       0       0       0       0
  4406 ;;      Locals:         1       0       0       0       0
  4407 ;;      Temps:          0       0       0       0       0
  4408 ;;      Totals:         1       0       0       0       0
  4409 ;;Total ram usage:        1 bytes
  4410 ;; Hardware stack levels used:    1
  4411 ;; Hardware stack levels required when called:    1
  4412 ;; This function calls:
  4413 ;;		Nothing
  4414 ;; This function is called by:
  4415 ;;		_ser_puts
  4416 ;;		_ser_put
  4417 ;;		_print_buffer
  4418 ;;		_measure_capacitance
  4419 ;; This function uses a non-reentrant model
  4420 ;;
  4421  0C4E                     _ser_putch:	
  4422                           
  4423                           ; Regs used in _ser_putch: [wreg-fsr0h+status,2+status,0]
  4424                           ;ser_putch@c stored from wreg
  4425  0C4E  00F3               	movwf	ser_putch@c
  4426  0C4F                     l8617:	
  4427                           ;ser.c: 61: while(((txiptr + 1) & ((uint8_t)16 - 1)) == txoptr) continue;
  4428                           
  4429  0C4F  0A79               	incf	_txiptr,w	;volatile
  4430  0C50  390F               	andlw	15
  4431  0C51  067A               	xorwf	_txoptr,w	;volatile
  4432  0C52  1903               	skipnz
  4433  0C53  2C4F               	goto	l8617
  4434                           
  4435                           ;ser.c: 62: GIE = 0;
  4436  0C54  138B               	bcf	11,7
  4437                           
  4438                           ;ser.c: 63: txfifo[txiptr] = c;
  4439  0C55  0879               	movf	_txiptr,w
  4440  0C56  3EA0               	addlw	_txfifo& (0+255)
  4441  0C57  0084               	movwf	4
  4442  0C58  0873               	movf	ser_putch@c,w
  4443  0C59  1783               	bsf	3,7	;select IRP bank3
  4444  0C5A  0080               	movwf	0
  4445                           
  4446                           ;ser.c: 64: txiptr = (txiptr + 1) & ((uint8_t)16 - 1);
  4447  0C5B  0AF9               	incf	_txiptr,f	;volatile
  4448  0C5C  300F               	movlw	15
  4449  0C5D  05F9               	andwf	_txiptr,f	;volatile
  4450                           
  4451                           ;ser.c: 65: TXIE = 1;
  4452  0C5E  1683               	bsf	3,5	;RP0=1, select bank1
  4453  0C5F  1303               	bcf	3,6	;RP1=0, select bank1
  4454  0C60  160C               	bsf	12,4
  4455                           
  4456                           ;ser.c: 66: GIE = 1;
  4457  0C61  178B               	bsf	11,7
  4458  0C62  0008               	return
  4459  0C63                     __end_of_ser_putch:	
  4460  0C63                     __ptext1297:	
  4461 ;; =============== function _floor ends ============
  4462                           
  4463                           
  4464 ;; *************** function _format_xint32 *****************
  4465 ;; Defined at:
  4466 ;;		line 51 in file "../../../lib/format.c"
  4467 ;; Parameters:    Size  Location     Type
  4468 ;;  x               4   45[BANK0 ] unsigned long 
  4469 ;; Auto vars:     Size  Location     Type
  4470 ;;		None
  4471 ;; Return value:  Size  Location     Type
  4472 ;;		None               void
  4473 ;; Registers used:
  4474 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4475 ;; Tracked objects:
  4476 ;;		On entry : 60/0
  4477 ;;		On exit  : 60/0
  4478 ;;		Unchanged: FFE00/0
  4479 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4480 ;;      Params:         0       4       0       0       0
  4481 ;;      Locals:         0       0       0       0       0
  4482 ;;      Temps:          0       0       0       0       0
  4483 ;;      Totals:         0       4       0       0       0
  4484 ;;Total ram usage:        4 bytes
  4485 ;; Hardware stack levels used:    1
  4486 ;; Hardware stack levels required when called:    3
  4487 ;; This function calls:
  4488 ;;		_buffer_putch
  4489 ;;		_format_number
  4490 ;; This function is called by:
  4491 ;;		_measure_capacitance
  4492 ;; This function uses a non-reentrant model
  4493 ;;
  4494  0C63                     _format_xint32:	
  4495                           
  4496                           ;format.c: 52: buffer_putch('0');
  4497                           
  4498                           ; Regs used in _format_xint32: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4499  0C63  3030               	movlw	48
  4500  0C64  25CF  120A  158A   	fcall	_buffer_putch
  4501                           
  4502                           ;format.c: 53: buffer_putch('x');
  4503  0C67  3078               	movlw	120
  4504  0C68  25CF  120A  158A   	fcall	_buffer_putch
  4505                           
  4506                           ;format.c: 54: format_number((uint16_t)(x >> 16), 16, -4);
  4507  0C6B  1283               	bcf	3,5	;RP0=0, select bank0
  4508  0C6C  1303               	bcf	3,6	;RP1=0, select bank0
  4509  0C6D  0850               	movf	format_xint32@x+3,w
  4510  0C6E  00A4               	movwf	?_format_number+1
  4511  0C6F  084F               	movf	format_xint32@x+2,w
  4512  0C70  27FA  120A  158A   	fcall	PL20	;call to abstracted procedure
  4513  0C73  26FA  120A  158A   	fcall	_format_number
  4514                           
  4515                           ;format.c: 55: format_number((uint16_t)(x & 0xffff), 16, -4);
  4516  0C76  084E               	movf	format_xint32@x+1,w
  4517  0C77  00A4               	movwf	?_format_number+1
  4518  0C78  084D               	movf	format_xint32@x,w
  4519  0C79  27FA  120A  158A   	fcall	PL20	;call to abstracted procedure
  4520  0C7C  2EFA               	ljmp	l8777
  4521  0C7D                     __end_of_format_xint32:	
  4522  0C7D                     __ptext1284:	
  4523 ;; =============== function _measure_capacitance ends ============
  4524                           
  4525                           
  4526 ;; *************** function _format_double *****************
  4527 ;; Defined at:
  4528 ;;		line 77 in file "../../../lib/format.c"
  4529 ;; Parameters:    Size  Location     Type
  4530 ;;  num             4   54[BANK1 ] unsigned char 
  4531 ;; Auto vars:     Size  Location     Type
  4532 ;;  weight          4    4[BANK3 ] unsigned char 
  4533 ;;  m               2   10[BANK3 ] short 
  4534 ;;  digit           2    8[BANK3 ] short 
  4535 ;; Return value:  Size  Location     Type
  4536 ;;		None               void
  4537 ;; Registers used:
  4538 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4539 ;; Tracked objects:
  4540 ;;		On entry : 60/20
  4541 ;;		On exit  : 60/0
  4542 ;;		Unchanged: FFE00/0
  4543 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4544 ;;      Params:         0       0       4       0       0
  4545 ;;      Locals:         0       0       0      12       0
  4546 ;;      Temps:          0       0       0       0       0
  4547 ;;      Totals:         0       0       4      12       0
  4548 ;;Total ram usage:       16 bytes
  4549 ;; Hardware stack levels used:    1
  4550 ;; Hardware stack levels required when called:    6
  4551 ;; This function calls:
  4552 ;;		_log10
  4553 ;;		___fltol
  4554 ;;		___awtofl
  4555 ;;		_pow
  4556 ;;		___fldiv
  4557 ;;		_floor
  4558 ;;		___flmul
  4559 ;;		___flsub
  4560 ;;		_buffer_putch
  4561 ;;		___flge
  4562 ;; This function is called by:
  4563 ;;		_measure_capacitance
  4564 ;; This function uses a non-reentrant model
  4565 ;;
  4566  0C7D                     _format_double:	
  4567                           
  4568                           ;format.c: 78: short m = (short)log10(num);
  4569                           
  4570                           ; Regs used in _format_double: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4571  0C7D  0859               	movf	(format_double@num+3)^(0+128),w
  4572  0C7E  00BD               	movwf	(?_log10+3)^(0+128)
  4573  0C7F  0858               	movf	(format_double@num+2)^(0+128),w
  4574  0C80  00BC               	movwf	(?_log10+2)^(0+128)
  4575  0C81  0857               	movf	(format_double@num+1)^(0+128),w
  4576  0C82  00BB               	movwf	(?_log10+1)^(0+128)
  4577  0C83  0856               	movf	format_double@num^(0+128),w
  4578  0C84  00BA               	movwf	?_log10^(0+128)
  4579  0C85  160A  118A  227A   	fcall	_log10
      +       120A  158A         
  4580  0C8A  083D               	movf	(?_log10+3)^(0+128),w
  4581  0C8B  1283               	bcf	3,5	;RP0=0, select bank0
  4582  0C8C  00AB               	movwf	?___fltol+3
  4583  0C8D  1683               	bsf	3,5	;RP0=1, select bank1
  4584  0C8E  083C               	movf	(?_log10+2)^(0+128),w
  4585  0C8F  1283               	bcf	3,5	;RP0=0, select bank0
  4586  0C90  00AA               	movwf	?___fltol+2
  4587  0C91  1683               	bsf	3,5	;RP0=1, select bank1
  4588  0C92  083B               	movf	(?_log10+1)^(0+128),w
  4589  0C93  1283               	bcf	3,5	;RP0=0, select bank0
  4590  0C94  00A9               	movwf	?___fltol+1
  4591  0C95  1683               	bsf	3,5	;RP0=1, select bank1
  4592  0C96  083A               	movf	?_log10^(0+128),w
  4593  0C97  1283               	bcf	3,5	;RP0=0, select bank0
  4594  0C98  00A8               	movwf	?___fltol
  4595  0C99  2672               	fcall	___fltol
  4596  0C9A  0829               	movf	?___fltol+1,w
  4597  0C9B  1683               	bsf	3,5	;RP0=1, select bank3
  4598  0C9C  1703               	bsf	3,6	;RP1=1, select bank3
  4599  0C9D  00DC               	movwf	(format_double@m+1)^(0+384)
  4600  0C9E  1283               	bcf	3,5	;RP0=0, select bank0
  4601  0C9F  1303               	bcf	3,6	;RP1=0, select bank0
  4602  0CA0  0828               	movf	?___fltol,w
  4603  0CA1  1683               	bsf	3,5	;RP0=1, select bank3
  4604  0CA2  1703               	bsf	3,6	;RP1=1, select bank3
  4605  0CA3  00DB               	movwf	format_double@m^(0+384)
  4606  0CA4                     l9401:	
  4607                           ;format.c: 79: short digit;
  4608                           ;format.c: 82: while(num > 0 + (sizeof(double) == sizeof(float) ? 3.05176e-05 : 1.192092
      +                          90e-07)) {
  4609                           
  4610  0CA4  3034               	movlw	52
  4611  0CA5  1283               	bcf	3,5	;RP0=0, select bank0
  4612  0CA6  1303               	bcf	3,6	;RP1=0, select bank0
  4613  0CA7  00A3               	movwf	?___flge+3
  4614  0CA8  01A2               	clrf	?___flge+2
  4615  0CA9  01A1               	clrf	?___flge+1
  4616  0CAA  01A0               	clrf	?___flge
  4617  0CAB  1683               	bsf	3,5	;RP0=1, select bank1
  4618  0CAC  0859               	movf	(format_double@num+3)^(0+128),w
  4619  0CAD  1283               	bcf	3,5	;RP0=0, select bank0
  4620  0CAE  00A7               	movwf	?___flge+7
  4621  0CAF  1683               	bsf	3,5	;RP0=1, select bank1
  4622  0CB0  0858               	movf	(format_double@num+2)^(0+128),w
  4623  0CB1  1283               	bcf	3,5	;RP0=0, select bank0
  4624  0CB2  00A6               	movwf	?___flge+6
  4625  0CB3  1683               	bsf	3,5	;RP0=1, select bank1
  4626  0CB4  0857               	movf	(format_double@num+1)^(0+128),w
  4627  0CB5  1283               	bcf	3,5	;RP0=0, select bank0
  4628  0CB6  00A5               	movwf	?___flge+5
  4629  0CB7  1683               	bsf	3,5	;RP0=1, select bank1
  4630  0CB8  0856               	movf	format_double@num^(0+128),w
  4631  0CB9  1283               	bcf	3,5	;RP0=0, select bank0
  4632  0CBA  00A4               	movwf	?___flge+4
  4633  0CBB  120A  118A  25BE   	fcall	___flge
      +       120A  158A         
  4634  0CC0  1803               	btfsc	3,0
  4635  0CC1  0008               	return
  4636                           
  4637                           ;format.c: 83: double weight = pow(10.0l, m);
  4638  0CC2  1683               	bsf	3,5	;RP0=1, select bank3
  4639  0CC3  1703               	bsf	3,6	;RP1=1, select bank3
  4640  0CC4  085C               	movf	(format_double@m+1)^(0+384),w
  4641  0CC5  1283               	bcf	3,5	;RP0=0, select bank0
  4642  0CC6  1303               	bcf	3,6	;RP1=0, select bank0
  4643  0CC7  00B3               	movwf	?___awtofl+1
  4644  0CC8  1683               	bsf	3,5	;RP0=1, select bank3
  4645  0CC9  1703               	bsf	3,6	;RP1=1, select bank3
  4646  0CCA  085B               	movf	format_double@m^(0+384),w
  4647  0CCB  1283               	bcf	3,5	;RP0=0, select bank0
  4648  0CCC  1303               	bcf	3,6	;RP1=0, select bank0
  4649  0CCD  00B2               	movwf	?___awtofl
  4650  0CCE  26BF  120A  158A   	fcall	___awtofl
  4651  0CD1  0835               	movf	?___awtofl+3,w
  4652  0CD2  1683               	bsf	3,5	;RP0=1, select bank3
  4653  0CD3  1703               	bsf	3,6	;RP1=1, select bank3
  4654  0CD4  00D4               	movwf	(_format_double$5378+3)^(0+384)
  4655  0CD5  1283               	bcf	3,5	;RP0=0, select bank0
  4656  0CD6  1303               	bcf	3,6	;RP1=0, select bank0
  4657  0CD7  0834               	movf	?___awtofl+2,w
  4658  0CD8  1683               	bsf	3,5	;RP0=1, select bank3
  4659  0CD9  1703               	bsf	3,6	;RP1=1, select bank3
  4660  0CDA  00D3               	movwf	(_format_double$5378+2)^(0+384)
  4661  0CDB  1283               	bcf	3,5	;RP0=0, select bank0
  4662  0CDC  1303               	bcf	3,6	;RP1=0, select bank0
  4663  0CDD  0833               	movf	?___awtofl+1,w
  4664  0CDE  1683               	bsf	3,5	;RP0=1, select bank3
  4665  0CDF  1703               	bsf	3,6	;RP1=1, select bank3
  4666  0CE0  00D2               	movwf	(_format_double$5378+1)^(0+384)
  4667  0CE1  1283               	bcf	3,5	;RP0=0, select bank0
  4668  0CE2  1303               	bcf	3,6	;RP1=0, select bank0
  4669  0CE3  0832               	movf	?___awtofl,w
  4670  0CE4  1683               	bsf	3,5	;RP0=1, select bank3
  4671  0CE5  1703               	bsf	3,6	;RP1=1, select bank3
  4672  0CE6  00D1               	movwf	_format_double$5378^(0+384)
  4673                           
  4674                           ;format.c: 83: double weight = pow(10.0l, m);
  4675  0CE7  3041               	movlw	65
  4676  0CE8  1303               	bcf	3,6	;RP1=0, select bank1
  4677  0CE9  00C8               	movwf	(?_pow+3)^(0+128)
  4678  0CEA  3020               	movlw	32
  4679  0CEB  00C7               	movwf	(?_pow+2)^(0+128)
  4680  0CEC  01C6               	clrf	(?_pow+1)^(0+128)
  4681  0CED  01C5               	clrf	?_pow^(0+128)
  4682  0CEE  1703               	bsf	3,6	;RP1=1, select bank3
  4683  0CEF  0854               	movf	(_format_double$5378+3)^(0+384),w
  4684  0CF0  1303               	bcf	3,6	;RP1=0, select bank1
  4685  0CF1  00CC               	movwf	((?_pow+3)^(0+128)+4)
  4686  0CF2  1703               	bsf	3,6	;RP1=1, select bank3
  4687  0CF3  0853               	movf	(_format_double$5378+2)^(0+384),w
  4688  0CF4  1303               	bcf	3,6	;RP1=0, select bank1
  4689  0CF5  00CB               	movwf	((?_pow+2)^(0+128)+4)
  4690  0CF6  1703               	bsf	3,6	;RP1=1, select bank3
  4691  0CF7  0852               	movf	(_format_double$5378+1)^(0+384),w
  4692  0CF8  1303               	bcf	3,6	;RP1=0, select bank1
  4693  0CF9  00CA               	movwf	((?_pow+1)^(0+128)+4)
  4694  0CFA  1703               	bsf	3,6	;RP1=1, select bank3
  4695  0CFB  0851               	movf	_format_double$5378^(0+384),w
  4696  0CFC  1303               	bcf	3,6	;RP1=0, select bank1
  4697  0CFD  00C9               	movwf	(?_pow^(0+128)+4)
  4698  0CFE  160A  118A  22B7   	fcall	_pow
      +       120A  158A         
  4699  0D03  0848               	movf	(?_pow+3)^(0+128),w
  4700  0D04  1703               	bsf	3,6	;RP1=1, select bank3
  4701  0D05  00D8               	movwf	(format_double@weight+3)^(0+384)
  4702  0D06  1303               	bcf	3,6	;RP1=0, select bank1
  4703  0D07  0847               	movf	(?_pow+2)^(0+128),w
  4704  0D08  1703               	bsf	3,6	;RP1=1, select bank3
  4705  0D09  00D7               	movwf	(format_double@weight+2)^(0+384)
  4706  0D0A  1303               	bcf	3,6	;RP1=0, select bank1
  4707  0D0B  0846               	movf	(?_pow+1)^(0+128),w
  4708  0D0C  1703               	bsf	3,6	;RP1=1, select bank3
  4709  0D0D  00D6               	movwf	(format_double@weight+1)^(0+384)
  4710  0D0E  1303               	bcf	3,6	;RP1=0, select bank1
  4711  0D0F  0845               	movf	?_pow^(0+128),w
  4712  0D10  1703               	bsf	3,6	;RP1=1, select bank3
  4713  0D11  00D5               	movwf	format_double@weight^(0+384)
  4714                           
  4715                           ;format.c: 84: digit = (short)floor(num / weight);
  4716  0D12  1303               	bcf	3,6	;RP1=0, select bank1
  4717  0D13  0859               	movf	(format_double@num+3)^(0+128),w
  4718  0D14  1283               	bcf	3,5	;RP0=0, select bank0
  4719  0D15  00B9               	movwf	?___fldiv+7
  4720  0D16  1683               	bsf	3,5	;RP0=1, select bank1
  4721  0D17  0858               	movf	(format_double@num+2)^(0+128),w
  4722  0D18  1283               	bcf	3,5	;RP0=0, select bank0
  4723  0D19  00B8               	movwf	?___fldiv+6
  4724  0D1A  1683               	bsf	3,5	;RP0=1, select bank1
  4725  0D1B  0857               	movf	(format_double@num+1)^(0+128),w
  4726  0D1C  1283               	bcf	3,5	;RP0=0, select bank0
  4727  0D1D  00B7               	movwf	?___fldiv+5
  4728  0D1E  1683               	bsf	3,5	;RP0=1, select bank1
  4729  0D1F  0856               	movf	format_double@num^(0+128),w
  4730  0D20  1283               	bcf	3,5	;RP0=0, select bank0
  4731  0D21  00B6               	movwf	?___fldiv+4
  4732  0D22  1683               	bsf	3,5	;RP0=1, select bank3
  4733  0D23  1703               	bsf	3,6	;RP1=1, select bank3
  4734  0D24  0858               	movf	(format_double@weight+3)^(0+384),w
  4735  0D25  1283               	bcf	3,5	;RP0=0, select bank0
  4736  0D26  1303               	bcf	3,6	;RP1=0, select bank0
  4737  0D27  00B5               	movwf	?___fldiv+3
  4738  0D28  1683               	bsf	3,5	;RP0=1, select bank3
  4739  0D29  1703               	bsf	3,6	;RP1=1, select bank3
  4740  0D2A  0857               	movf	(format_double@weight+2)^(0+384),w
  4741  0D2B  1283               	bcf	3,5	;RP0=0, select bank0
  4742  0D2C  1303               	bcf	3,6	;RP1=0, select bank0
  4743  0D2D  00B4               	movwf	?___fldiv+2
  4744  0D2E  1683               	bsf	3,5	;RP0=1, select bank3
  4745  0D2F  1703               	bsf	3,6	;RP1=1, select bank3
  4746  0D30  0856               	movf	(format_double@weight+1)^(0+384),w
  4747  0D31  1283               	bcf	3,5	;RP0=0, select bank0
  4748  0D32  1303               	bcf	3,6	;RP1=0, select bank0
  4749  0D33  00B3               	movwf	?___fldiv+1
  4750  0D34  1683               	bsf	3,5	;RP0=1, select bank3
  4751  0D35  1703               	bsf	3,6	;RP1=1, select bank3
  4752  0D36  0855               	movf	format_double@weight^(0+384),w
  4753  0D37  1283               	bcf	3,5	;RP0=0, select bank0
  4754  0D38  1303               	bcf	3,6	;RP1=0, select bank0
  4755  0D39  00B2               	movwf	?___fldiv
  4756  0D3A  25F9               	fcall	___fldiv
  4757  0D3B  0835               	movf	?___fldiv+3,w
  4758  0D3C  00EA               	movwf	?_floor+3
  4759  0D3D  0834               	movf	?___fldiv+2,w
  4760  0D3E  00E9               	movwf	?_floor+2
  4761  0D3F  0833               	movf	?___fldiv+1,w
  4762  0D40  00E8               	movwf	?_floor+1
  4763  0D41  0832               	movf	?___fldiv,w
  4764  0D42  00E7               	movwf	?_floor
  4765  0D43  160A  118A  2728   	fcall	_floor
      +       120A  158A         
  4766  0D48  1283               	bcf	3,5	;RP0=0, select bank0
  4767  0D49  086A               	movf	?_floor+3,w
  4768  0D4A  00AB               	movwf	?___fltol+3
  4769  0D4B  0869               	movf	?_floor+2,w
  4770  0D4C  00AA               	movwf	?___fltol+2
  4771  0D4D  0868               	movf	?_floor+1,w
  4772  0D4E  00A9               	movwf	?___fltol+1
  4773  0D4F  0867               	movf	?_floor,w
  4774  0D50  00A8               	movwf	?___fltol
  4775  0D51  2672  120A  158A   	fcall	___fltol
  4776  0D54  0829               	movf	?___fltol+1,w
  4777  0D55  1683               	bsf	3,5	;RP0=1, select bank3
  4778  0D56  1703               	bsf	3,6	;RP1=1, select bank3
  4779  0D57  00DA               	movwf	(format_double@digit+1)^(0+384)
  4780  0D58  1283               	bcf	3,5	;RP0=0, select bank0
  4781  0D59  1303               	bcf	3,6	;RP1=0, select bank0
  4782  0D5A  0828               	movf	?___fltol,w
  4783  0D5B  1683               	bsf	3,5	;RP0=1, select bank3
  4784  0D5C  1703               	bsf	3,6	;RP1=1, select bank3
  4785  0D5D  00D9               	movwf	format_double@digit^(0+384)
  4786                           
  4787                           ;format.c: 85: num -= (digit * weight);
  4788  0D5E  085A               	movf	(format_double@digit+1)^(0+384),w
  4789  0D5F  1283               	bcf	3,5	;RP0=0, select bank0
  4790  0D60  1303               	bcf	3,6	;RP1=0, select bank0
  4791  0D61  00B3               	movwf	?___awtofl+1
  4792  0D62  1683               	bsf	3,5	;RP0=1, select bank3
  4793  0D63  1703               	bsf	3,6	;RP1=1, select bank3
  4794  0D64  0859               	movf	format_double@digit^(0+384),w
  4795  0D65  1283               	bcf	3,5	;RP0=0, select bank0
  4796  0D66  1303               	bcf	3,6	;RP1=0, select bank0
  4797  0D67  00B2               	movwf	?___awtofl
  4798  0D68  26BF               	fcall	___awtofl
  4799  0D69  0835               	movf	?___awtofl+3,w
  4800  0D6A  00CC               	movwf	?___flmul+7
  4801  0D6B  0834               	movf	?___awtofl+2,w
  4802  0D6C  00CB               	movwf	?___flmul+6
  4803  0D6D  0833               	movf	?___awtofl+1,w
  4804  0D6E  00CA               	movwf	?___flmul+5
  4805  0D6F  0832               	movf	?___awtofl,w
  4806  0D70  00C9               	movwf	?___flmul+4
  4807  0D71  1683               	bsf	3,5	;RP0=1, select bank3
  4808  0D72  1703               	bsf	3,6	;RP1=1, select bank3
  4809  0D73  0858               	movf	(format_double@weight+3)^(0+384),w
  4810  0D74  1283               	bcf	3,5	;RP0=0, select bank0
  4811  0D75  1303               	bcf	3,6	;RP1=0, select bank0
  4812  0D76  00C8               	movwf	?___flmul+3
  4813  0D77  1683               	bsf	3,5	;RP0=1, select bank3
  4814  0D78  1703               	bsf	3,6	;RP1=1, select bank3
  4815  0D79  0857               	movf	(format_double@weight+2)^(0+384),w
  4816  0D7A  1283               	bcf	3,5	;RP0=0, select bank0
  4817  0D7B  1303               	bcf	3,6	;RP1=0, select bank0
  4818  0D7C  00C7               	movwf	?___flmul+2
  4819  0D7D  1683               	bsf	3,5	;RP0=1, select bank3
  4820  0D7E  1703               	bsf	3,6	;RP1=1, select bank3
  4821  0D7F  0856               	movf	(format_double@weight+1)^(0+384),w
  4822  0D80  1283               	bcf	3,5	;RP0=0, select bank0
  4823  0D81  1303               	bcf	3,6	;RP1=0, select bank0
  4824  0D82  00C6               	movwf	?___flmul+1
  4825  0D83  1683               	bsf	3,5	;RP0=1, select bank3
  4826  0D84  1703               	bsf	3,6	;RP1=1, select bank3
  4827  0D85  0855               	movf	format_double@weight^(0+384),w
  4828  0D86  1283               	bcf	3,5	;RP0=0, select bank0
  4829  0D87  1303               	bcf	3,6	;RP1=0, select bank0
  4830  0D88  00C5               	movwf	?___flmul
  4831  0D89  120A  118A  253E   	fcall	___flmul
      +       120A  158A         
  4832  0D8E  0848               	movf	?___flmul+3,w
  4833  0D8F  00EA               	movwf	?___flsub+3
  4834  0D90  0847               	movf	?___flmul+2,w
  4835  0D91  00E9               	movwf	?___flsub+2
  4836  0D92  0846               	movf	?___flmul+1,w
  4837  0D93  00E8               	movwf	?___flsub+1
  4838  0D94  0845               	movf	?___flmul,w
  4839  0D95  00E7               	movwf	?___flsub
  4840  0D96  1683               	bsf	3,5	;RP0=1, select bank1
  4841  0D97  0859               	movf	(format_double@num+3)^(0+128),w
  4842  0D98  1283               	bcf	3,5	;RP0=0, select bank0
  4843  0D99  00EE               	movwf	?___flsub+7
  4844  0D9A  1683               	bsf	3,5	;RP0=1, select bank1
  4845  0D9B  0858               	movf	(format_double@num+2)^(0+128),w
  4846  0D9C  1283               	bcf	3,5	;RP0=0, select bank0
  4847  0D9D  00ED               	movwf	?___flsub+6
  4848  0D9E  1683               	bsf	3,5	;RP0=1, select bank1
  4849  0D9F  0857               	movf	(format_double@num+1)^(0+128),w
  4850  0DA0  1283               	bcf	3,5	;RP0=0, select bank0
  4851  0DA1  00EC               	movwf	?___flsub+5
  4852  0DA2  1683               	bsf	3,5	;RP0=1, select bank1
  4853  0DA3  0856               	movf	format_double@num^(0+128),w
  4854  0DA4  1283               	bcf	3,5	;RP0=0, select bank0
  4855  0DA5  00EB               	movwf	?___flsub+4
  4856  0DA6  26DC  120A  158A   	fcall	___flsub
  4857  0DA9  086A               	movf	?___flsub+3,w
  4858  0DAA  1683               	bsf	3,5	;RP0=1, select bank1
  4859  0DAB  00D9               	movwf	(format_double@num+3)^(0+128)
  4860  0DAC  1283               	bcf	3,5	;RP0=0, select bank0
  4861  0DAD  0869               	movf	?___flsub+2,w
  4862  0DAE  1683               	bsf	3,5	;RP0=1, select bank1
  4863  0DAF  00D8               	movwf	(format_double@num+2)^(0+128)
  4864  0DB0  1283               	bcf	3,5	;RP0=0, select bank0
  4865  0DB1  0868               	movf	?___flsub+1,w
  4866  0DB2  1683               	bsf	3,5	;RP0=1, select bank1
  4867  0DB3  00D7               	movwf	(format_double@num+1)^(0+128)
  4868  0DB4  1283               	bcf	3,5	;RP0=0, select bank0
  4869  0DB5  0867               	movf	?___flsub,w
  4870  0DB6  1683               	bsf	3,5	;RP0=1, select bank1
  4871  0DB7  00D6               	movwf	format_double@num^(0+128)
  4872                           
  4873                           ;format.c: 86: buffer_putch((char)('0' + digit));
  4874  0DB8  1703               	bsf	3,6	;RP1=1, select bank3
  4875  0DB9  0859               	movf	format_double@digit^(0+384),w
  4876  0DBA  3E30               	addlw	48
  4877  0DBB  25CF  120A  158A   	fcall	_buffer_putch
  4878                           
  4879                           ;format.c: 87: if(m == 0)
  4880  0DBE  1683               	bsf	3,5	;RP0=1, select bank3
  4881  0DBF  1703               	bsf	3,6	;RP1=1, select bank3
  4882  0DC0  085C               	movf	(format_double@m+1)^(0+384),w
  4883  0DC1  045B               	iorwf	format_double@m^(0+384),w
  4884  0DC2  1D03               	skipz
  4885  0DC3  2DC8               	goto	l9399
  4886                           
  4887                           ;format.c: 88: buffer_putch('.');
  4888  0DC4  302E               	movlw	46
  4889  0DC5  25CF  120A  158A   	fcall	_buffer_putch
  4890  0DC8                     l9399:	
  4891                           
  4892                           ;format.c: 89: m--;
  4893  0DC8  30FF               	movlw	-1
  4894  0DC9  1683               	bsf	3,5	;RP0=1, select bank3
  4895  0DCA  1703               	bsf	3,6	;RP1=1, select bank3
  4896  0DCB  07DB               	addwf	format_double@m^(0+384),f
  4897  0DCC  1C03               	skipc
  4898  0DCD  03DC               	decf	(format_double@m+1)^(0+384),f
  4899  0DCE  2CA4               	goto	l9401
  4900  0DCF                     __end_of_format_double:	
  4901  0DCF                     __ptext1326:	
  4902 ;; =============== function _ser_putch ends ============
  4903                           
  4904                           
  4905 ;; *************** function _buffer_putch *****************
  4906 ;; Defined at:
  4907 ;;		line 30 in file "../../../lib/buffer.c"
  4908 ;; Parameters:    Size  Location     Type
  4909 ;;  ch              1    wreg     unsigned char 
  4910 ;; Auto vars:     Size  Location     Type
  4911 ;;  ch              1    6[COMMON] unsigned char 
  4912 ;; Return value:  Size  Location     Type
  4913 ;;                  1    wreg      unsigned char 
  4914 ;; Registers used:
  4915 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
  4916 ;; Tracked objects:
  4917 ;;		On entry : 0/60
  4918 ;;		On exit  : 0/0
  4919 ;;		Unchanged: FFE00/0
  4920 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4921 ;;      Params:         0       0       0       0       0
  4922 ;;      Locals:         1       0       0       0       0
  4923 ;;      Temps:          3       0       0       0       0
  4924 ;;      Totals:         4       0       0       0       0
  4925 ;;Total ram usage:        4 bytes
  4926 ;; Hardware stack levels used:    1
  4927 ;; Hardware stack levels required when called:    1
  4928 ;; This function calls:
  4929 ;;		Nothing
  4930 ;; This function is called by:
  4931 ;;		_format_number
  4932 ;;		_format_xint32
  4933 ;;		_format_double
  4934 ;;		_buffer_puts
  4935 ;; This function uses a non-reentrant model
  4936 ;;
  4937  0DCF                     _buffer_putch:	
  4938                           
  4939                           ; Regs used in _buffer_putch: [wreg-fsr0h+status,2+status,0+btemp+1]
  4940                           ;buffer_putch@ch stored from wreg
  4941  0DCF  00F6               	movwf	buffer_putch@ch
  4942                           
  4943                           ;buffer.c: 31: if(16 - buffer.n <= 0)
  4944  0DD0  1683               	bsf	3,5	;RP0=1, select bank3
  4945  0DD1  1703               	bsf	3,6	;RP1=1, select bank3
  4946  0DD2  0E4C               	swapf	(_buffer^(0+384)+16),w
  4947  0DD3  390F               	andlw	15
  4948  0DD4  00F3               	movwf	??_buffer_putch
  4949  0DD5  01F5               	clrf	??_buffer_putch+2
  4950  0DD6  3C10               	sublw	16
  4951  0DD7  00F4               	movwf	??_buffer_putch+1
  4952  0DD8  1C03               	skipc
  4953  0DD9  03F5               	decf	??_buffer_putch+2,f
  4954  0DDA  0875               	movf	??_buffer_putch+2,w
  4955  0DDB  3A80               	xorlw	128
  4956  0DDC  00FF               	movwf	127
  4957  0DDD  3080               	movlw	128
  4958  0DDE  027F               	subwf	127,w
  4959  0DDF  1D03               	skipz
  4960  0DE0  2DE3               	goto	u2535
  4961  0DE1  3001               	movlw	1
  4962  0DE2  0274               	subwf	??_buffer_putch+1,w
  4963  0DE3                     u2535:	
  4964  0DE3  1C03               	btfss	3,0
  4965  0DE4  0008               	return
  4966                           
  4967                           ;buffer.c: 33: buffer.x[buffer.n] = ch;
  4968  0DE5  1683               	bsf	3,5	;RP0=1, select bank3
  4969  0DE6  1703               	bsf	3,6	;RP1=1, select bank3
  4970  0DE7  0E4C               	swapf	(_buffer^(0+384)+16),w
  4971  0DE8  390F               	andlw	15
  4972  0DE9  3EBC               	addlw	_buffer& (0+255)
  4973  0DEA  0084               	movwf	4
  4974  0DEB  0876               	movf	buffer_putch@ch,w
  4975  0DEC  1783               	bsf	3,7	;select IRP bank3
  4976  0DED  0080               	movwf	0
  4977                           
  4978                           ;buffer.c: 34: buffer.n++;
  4979  0DEE  0E4C               	swapf	(_buffer^(0+384)+16),w
  4980  0DEF  390F               	andlw	15
  4981  0DF0  00F3               	movwf	??_buffer_putch
  4982  0DF1  0AF3               	incf	??_buffer_putch,f
  4983  0DF2  0EF3               	swapf	??_buffer_putch,f
  4984  0DF3  084C               	movf	(_buffer^(0+384)+16),w
  4985  0DF4  0673               	xorwf	??_buffer_putch,w
  4986  0DF5  390F               	andlw	-241
  4987  0DF6  0673               	xorwf	??_buffer_putch,w
  4988  0DF7  00CC               	movwf	(_buffer^(0+384)+16)
  4989  0DF8  0008               	return
  4990  0DF9                     __end_of_buffer_putch:	
  4991  0DF9                     __ptext1303:	
  4992 ;; =============== function ___flmul ends ============
  4993                           
  4994                           
  4995 ;; *************** function ___fldiv *****************
  4996 ;; Defined at:
  4997 ;;		line 50 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\fldiv.c"
  4998 ;; Parameters:    Size  Location     Type
  4999 ;;  f2              4   18[BANK0 ] unsigned char 
  5000 ;;  f1              4   22[BANK0 ] unsigned char 
  5001 ;; Auto vars:     Size  Location     Type
  5002 ;;  f3              4   30[BANK0 ] unsigned char 
  5003 ;;  sign            1   36[BANK0 ] unsigned char 
  5004 ;;  exp             1   35[BANK0 ] unsigned char 
  5005 ;;  cntr            1   34[BANK0 ] unsigned char 
  5006 ;; Return value:  Size  Location     Type
  5007 ;;                  4   18[BANK0 ] unsigned char 
  5008 ;; Registers used:
  5009 ;;		wreg, status,2, status,0, pclath, cstack
  5010 ;; Tracked objects:
  5011 ;;		On entry : 60/100
  5012 ;;		On exit  : 60/100
  5013 ;;		Unchanged: FFF9F/0
  5014 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5015 ;;      Params:         0       8       0       0       0
  5016 ;;      Locals:         0       7       0       0       0
  5017 ;;      Temps:          0       4       0       0       0
  5018 ;;      Totals:         0      19       0       0       0
  5019 ;;Total ram usage:       19 bytes
  5020 ;; Hardware stack levels used:    1
  5021 ;; Hardware stack levels required when called:    2
  5022 ;; This function calls:
  5023 ;;		___flpack
  5024 ;; This function is called by:
  5025 ;;		_format_double
  5026 ;;		_measure_capacitance
  5027 ;;		_measure_inductance
  5028 ;;		_exp
  5029 ;; This function uses a non-reentrant model
  5030 ;;
  5031  0DF9                     ___fldiv:	
  5032                           
  5033                           ; Regs used in ___fldiv: [wreg+status,2+status,0+pclath+cstack]
  5034  0DF9  0836               	movf	___fldiv@f1,w
  5035  0DFA  00BA               	movwf	??___fldiv
  5036  0DFB  0837               	movf	___fldiv@f1+1,w
  5037  0DFC  00BB               	movwf	??___fldiv+1
  5038  0DFD  0838               	movf	___fldiv@f1+2,w
  5039  0DFE  00BC               	movwf	??___fldiv+2
  5040  0DFF  0839               	movf	___fldiv@f1+3,w
  5041  0E00  00BD               	movwf	??___fldiv+3
  5042  0E01  1003               	clrc
  5043  0E02  0D3C               	rlf	??___fldiv+2,w
  5044  0E03  0D3D               	rlf	??___fldiv+3,w
  5045  0E04  00C3               	movwf	___fldiv@exp
  5046  0E05  08C3               	movf	___fldiv@exp,f
  5047  0E06  1D03               	skipz
  5048  0E07  2E0D               	goto	l8991
  5049  0E08  01B2               	clrf	?___fldiv
  5050  0E09  01B3               	clrf	?___fldiv+1
  5051  0E0A  01B4               	clrf	?___fldiv+2
  5052  0E0B  01B5               	clrf	?___fldiv+3
  5053  0E0C  0008               	return
  5054  0E0D                     l8991:	
  5055  0E0D  0832               	movf	___fldiv@f2,w
  5056  0E0E  00BA               	movwf	??___fldiv
  5057  0E0F  0833               	movf	___fldiv@f2+1,w
  5058  0E10  00BB               	movwf	??___fldiv+1
  5059  0E11  0834               	movf	___fldiv@f2+2,w
  5060  0E12  00BC               	movwf	??___fldiv+2
  5061  0E13  0835               	movf	___fldiv@f2+3,w
  5062  0E14  00BD               	movwf	??___fldiv+3
  5063  0E15  1003               	clrc
  5064  0E16  0D3C               	rlf	??___fldiv+2,w
  5065  0E17  0D3D               	rlf	??___fldiv+3,w
  5066  0E18  00C4               	movwf	___fldiv@sign
  5067  0E19  08C4               	movf	___fldiv@sign,f
  5068  0E1A  1D03               	skipz
  5069  0E1B  2E21               	goto	l8995
  5070  0E1C  01B2               	clrf	?___fldiv
  5071  0E1D  01B3               	clrf	?___fldiv+1
  5072  0E1E  01B4               	clrf	?___fldiv+2
  5073  0E1F  01B5               	clrf	?___fldiv+3
  5074  0E20  0008               	return
  5075  0E21                     l8995:	
  5076  0E21  3089               	movlw	137
  5077  0E22  0744               	addwf	___fldiv@sign,w
  5078  0E23  00BA               	movwf	??___fldiv
  5079  0E24  02C3               	subwf	___fldiv@exp,f
  5080  0E25  0839               	movf	___fldiv@f1+3,w
  5081  0E26  00C4               	movwf	___fldiv@sign
  5082  0E27  0835               	movf	___fldiv@f2+3,w
  5083  0E28  06C4               	xorwf	___fldiv@sign,f
  5084  0E29  3080               	movlw	128
  5085  0E2A  05C4               	andwf	___fldiv@sign,f
  5086  0E2B  3020               	movlw	32
  5087  0E2C  17B8               	bsf	___fldiv@f1+2,7
  5088  0E2D  01B9               	clrf	___fldiv@f1+3
  5089  0E2E  17B4               	bsf	___fldiv@f2+2,7
  5090  0E2F  01B5               	clrf	___fldiv@f2+3
  5091  0E30  00C2               	movwf	___fldiv@cntr
  5092  0E31                     l9013:	
  5093  0E31  1003               	clrc
  5094  0E32  0DBE               	rlf	___fldiv@f3,f
  5095  0E33  0DBF               	rlf	___fldiv@f3+1,f
  5096  0E34  0DC0               	rlf	___fldiv@f3+2,f
  5097  0E35  0DC1               	rlf	___fldiv@f3+3,f
  5098  0E36  0835               	movf	___fldiv@f2+3,w
  5099  0E37  0239               	subwf	___fldiv@f1+3,w
  5100  0E38  1D03               	skipz
  5101  0E39  2E44               	goto	u3215
  5102  0E3A  0834               	movf	___fldiv@f2+2,w
  5103  0E3B  0238               	subwf	___fldiv@f1+2,w
  5104  0E3C  1D03               	skipz
  5105  0E3D  2E44               	goto	u3215
  5106  0E3E  0833               	movf	___fldiv@f2+1,w
  5107  0E3F  0237               	subwf	___fldiv@f1+1,w
  5108  0E40  1D03               	skipz
  5109  0E41  2E44               	goto	u3215
  5110  0E42  0832               	movf	___fldiv@f2,w
  5111  0E43  0236               	subwf	___fldiv@f1,w
  5112  0E44                     u3215:	
  5113  0E44  1C03               	skipc
  5114  0E45  2E56               	goto	L5
  5115  0E46  0832               	movf	___fldiv@f2,w
  5116  0E47  02B6               	subwf	___fldiv@f1,f
  5117  0E48  0833               	movf	___fldiv@f2+1,w
  5118  0E49  1C03               	skipc
  5119  0E4A  0F33               	incfsz	___fldiv@f2+1,w
  5120  0E4B  02B7               	subwf	___fldiv@f1+1,f
  5121  0E4C  0834               	movf	___fldiv@f2+2,w
  5122  0E4D  1C03               	skipc
  5123  0E4E  0F34               	incfsz	___fldiv@f2+2,w
  5124  0E4F  02B8               	subwf	___fldiv@f1+2,f
  5125  0E50  0835               	movf	___fldiv@f2+3,w
  5126  0E51  1C03               	skipc
  5127  0E52  0F35               	incfsz	___fldiv@f2+3,w
  5128  0E53  02B9               	subwf	___fldiv@f1+3,f
  5129  0E54  143E               	bsf	___fldiv@f3,0
  5130  0E55  1003               	clrc
  5131  0E56                     L5:	
  5132  0E56  0DB6               	rlf	___fldiv@f1,f
  5133  0E57  0DB7               	rlf	___fldiv@f1+1,f
  5134  0E58  0DB8               	rlf	___fldiv@f1+2,f
  5135  0E59  0DB9               	rlf	___fldiv@f1+3,f
  5136  0E5A  0BC2               	decfsz	___fldiv@cntr,f
  5137  0E5B  2E31               	goto	l9013
  5138  0E5C  0841               	movf	___fldiv@f3+3,w
  5139  0E5D  00A3               	movwf	?___flpack+3
  5140  0E5E  0840               	movf	___fldiv@f3+2,w
  5141  0E5F  00A2               	movwf	?___flpack+2
  5142  0E60  083F               	movf	___fldiv@f3+1,w
  5143  0E61  00A1               	movwf	?___flpack+1
  5144  0E62  083E               	movf	___fldiv@f3,w
  5145  0E63  00A0               	movwf	?___flpack
  5146  0E64  0843               	movf	___fldiv@exp,w
  5147  0E65  00A4               	movwf	?___flpack+4
  5148  0E66  0844               	movf	___fldiv@sign,w
  5149  0E67  00A5               	movwf	?___flpack+5
  5150  0E68  27A5               	fcall	___flpack
  5151  0E69  0823               	movf	?___flpack+3,w
  5152  0E6A  00B5               	movwf	?___fldiv+3
  5153  0E6B  0822               	movf	?___flpack+2,w
  5154  0E6C  00B4               	movwf	?___fldiv+2
  5155  0E6D  0821               	movf	?___flpack+1,w
  5156  0E6E  00B3               	movwf	?___fldiv+1
  5157  0E6F  0820               	movf	?___flpack,w
  5158  0E70  00B2               	movwf	?___fldiv
  5159  0E71  0008               	return
  5160  0E72                     __end_of___fldiv:	
  5161  0E72                     __ptext1312:	
  5162 ;; =============== function ___flge ends ============
  5163                           
  5164                           
  5165 ;; *************** function ___fltol *****************
  5166 ;; Defined at:
  5167 ;;		line 44 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\fltol.c"
  5168 ;; Parameters:    Size  Location     Type
  5169 ;;  f1              4    8[BANK0 ] unsigned char 
  5170 ;; Auto vars:     Size  Location     Type
  5171 ;;  exp1            1   17[BANK0 ] unsigned char 
  5172 ;;  sign1           1   16[BANK0 ] unsigned char 
  5173 ;; Return value:  Size  Location     Type
  5174 ;;                  4    8[BANK0 ] long 
  5175 ;; Registers used:
  5176 ;;		wreg, status,2, status,0
  5177 ;; Tracked objects:
  5178 ;;		On entry : 60/100
  5179 ;;		On exit  : 60/100
  5180 ;;		Unchanged: FFF9F/0
  5181 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5182 ;;      Params:         0       4       0       0       0
  5183 ;;      Locals:         0       2       0       0       0
  5184 ;;      Temps:          0       4       0       0       0
  5185 ;;      Totals:         0      10       0       0       0
  5186 ;;Total ram usage:       10 bytes
  5187 ;; Hardware stack levels used:    1
  5188 ;; Hardware stack levels required when called:    1
  5189 ;; This function calls:
  5190 ;;		Nothing
  5191 ;; This function is called by:
  5192 ;;		_format_double
  5193 ;;		_measure_capacitance
  5194 ;;		_measure_inductance
  5195 ;;		_floor
  5196 ;;		_pow
  5197 ;;		_exp
  5198 ;; This function uses a non-reentrant model
  5199 ;;
  5200  0E72                     ___fltol:	
  5201                           
  5202                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  5203  0E72  27F1  120A  158A   	fcall	PL13	;call to abstracted procedure
  5204  0E75  1003               	clrc
  5205  0E76  0D2E               	rlf	??___fltol+2,w
  5206  0E77  0D2F               	rlf	??___fltol+3,w
  5207  0E78  00B1               	movwf	___fltol@exp1
  5208  0E79  08B1               	movf	___fltol@exp1,f
  5209  0E7A  1D03               	skipz
  5210  0E7B  2E81               	goto	l8735
  5211  0E7C                     l8733:	
  5212  0E7C  01A8               	clrf	?___fltol
  5213  0E7D  01A9               	clrf	?___fltol+1
  5214  0E7E  01AA               	clrf	?___fltol+2
  5215  0E7F  01AB               	clrf	?___fltol+3
  5216  0E80  0008               	return
  5217  0E81                     l8735:	
  5218  0E81  27F1  120A  158A   	fcall	PL13	;call to abstracted procedure
  5219  0E84  301F               	movlw	31
  5220  0E85                     u2735:	
  5221  0E85  1003               	clrc
  5222  0E86  0CAF               	rrf	??___fltol+3,f
  5223  0E87  0CAE               	rrf	??___fltol+2,f
  5224  0E88  0CAD               	rrf	??___fltol+1,f
  5225  0E89  0CAC               	rrf	??___fltol,f
  5226  0E8A  3EFF               	addlw	-1
  5227  0E8B  1D03               	skipz
  5228  0E8C  2E85               	goto	u2735
  5229  0E8D  082C               	movf	??___fltol,w
  5230  0E8E  00B0               	movwf	___fltol@sign1
  5231  0E8F  3096               	movlw	150
  5232  0E90  17AA               	bsf	___fltol@f1+2,7
  5233  0E91  01AB               	clrf	___fltol@f1+3
  5234  0E92  02B1               	subwf	___fltol@exp1,f
  5235  0E93  1FB1               	btfss	___fltol@exp1,7
  5236  0E94  2EA2               	goto	l8753
  5237  0E95  0831               	movf	___fltol@exp1,w
  5238  0E96  3A80               	xorlw	128
  5239  0E97  3E97               	addlw	151
  5240  0E98  1C03               	btfss	3,0
  5241  0E99  2E7C               	goto	l8733
  5242  0E9A                     l8749:	
  5243  0E9A  1003               	clrc
  5244  0E9B  0CAB               	rrf	___fltol@f1+3,f
  5245  0E9C  0CAA               	rrf	___fltol@f1+2,f
  5246  0E9D  0CA9               	rrf	___fltol@f1+1,f
  5247  0E9E  0CA8               	rrf	___fltol@f1,f
  5248  0E9F  0FB1               	incfsz	___fltol@exp1,f
  5249  0EA0  2E9A               	goto	l8749
  5250  0EA1  2EB0               	goto	l8759
  5251  0EA2                     l8753:	
  5252  0EA2  3020               	movlw	32
  5253  0EA3  0231               	subwf	___fltol@exp1,w
  5254  0EA4  1803               	btfsc	3,0
  5255  0EA5  2E7C               	goto	l8733
  5256  0EA6                     l4303:	
  5257  0EA6  08B1               	movf	___fltol@exp1,f
  5258  0EA7  1903               	btfsc	3,2
  5259  0EA8  2EB0               	goto	l8759
  5260  0EA9  1003               	clrc
  5261  0EAA  0DA8               	rlf	___fltol@f1,f
  5262  0EAB  0DA9               	rlf	___fltol@f1+1,f
  5263  0EAC  0DAA               	rlf	___fltol@f1+2,f
  5264  0EAD  0DAB               	rlf	___fltol@f1+3,f
  5265  0EAE  03B1               	decf	___fltol@exp1,f
  5266  0EAF  2EA6               	goto	l4303
  5267  0EB0                     l8759:	
  5268  0EB0  0830               	movf	___fltol@sign1,w
  5269  0EB1  1903               	btfsc	3,2
  5270  0EB2  0008               	return
  5271  0EB3  09A8               	comf	___fltol@f1,f
  5272  0EB4  09A9               	comf	___fltol@f1+1,f
  5273  0EB5  09AA               	comf	___fltol@f1+2,f
  5274  0EB6  09AB               	comf	___fltol@f1+3,f
  5275  0EB7  0AA8               	incf	___fltol@f1,f
  5276  0EB8  1903               	skipnz
  5277  0EB9  0AA9               	incf	___fltol@f1+1,f
  5278  0EBA  1903               	skipnz
  5279  0EBB  0AAA               	incf	___fltol@f1+2,f
  5280  0EBC  1903               	skipnz
  5281  0EBD  0AAB               	incf	___fltol@f1+3,f
  5282  0EBE  0008               	return
  5283  0EBF                     __end_of___fltol:	
  5284  0EBF                     __ptext1301:	
  5285 ;; =============== function ___lwtofl ends ============
  5286                           
  5287                           
  5288 ;; *************** function ___awtofl *****************
  5289 ;; Defined at:
  5290 ;;		line 32 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\awtofl.c"
  5291 ;; Parameters:    Size  Location     Type
  5292 ;;  c               2   18[BANK0 ] int 
  5293 ;; Auto vars:     Size  Location     Type
  5294 ;;  f1              4    0        int 
  5295 ;;  sign            1   22[BANK0 ] unsigned char 
  5296 ;; Return value:  Size  Location     Type
  5297 ;;                  4   18[BANK0 ] unsigned char 
  5298 ;; Registers used:
  5299 ;;		wreg, status,2, status,0, pclath, cstack
  5300 ;; Tracked objects:
  5301 ;;		On entry : 60/0
  5302 ;;		On exit  : 60/0
  5303 ;;		Unchanged: FFF9F/0
  5304 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5305 ;;      Params:         0       4       0       0       0
  5306 ;;      Locals:         0       1       0       0       0
  5307 ;;      Temps:          0       0       0       0       0
  5308 ;;      Totals:         0       5       0       0       0
  5309 ;;Total ram usage:        5 bytes
  5310 ;; Hardware stack levels used:    1
  5311 ;; Hardware stack levels required when called:    2
  5312 ;; This function calls:
  5313 ;;		___flpack
  5314 ;; This function is called by:
  5315 ;;		_format_double
  5316 ;;		_log
  5317 ;;		_exp
  5318 ;; This function uses a non-reentrant model
  5319 ;;
  5320  0EBF                     ___awtofl:	
  5321                           
  5322                           ; Regs used in ___awtofl: [wreg+status,2+status,0+pclath+cstack]
  5323  0EBF  01B6               	clrf	___awtofl@sign
  5324  0EC0  1FB3               	btfss	___awtofl@c+1,7
  5325  0EC1  2EC8               	goto	l9085
  5326  0EC2  09B2               	comf	___awtofl@c,f
  5327  0EC3  09B3               	comf	___awtofl@c+1,f
  5328  0EC4  0AB2               	incf	___awtofl@c,f
  5329  0EC5  1903               	skipnz
  5330  0EC6  0AB3               	incf	___awtofl@c+1,f
  5331  0EC7  0AB6               	incf	___awtofl@sign,f
  5332  0EC8                     l9085:	
  5333  0EC8  0832               	movf	___awtofl@c,w
  5334  0EC9  00A0               	movwf	?___flpack
  5335  0ECA  0833               	movf	___awtofl@c+1,w
  5336  0ECB  00A1               	movwf	?___flpack+1
  5337  0ECC  3096               	movlw	150
  5338  0ECD  01A2               	clrf	?___flpack+2
  5339  0ECE  01A3               	clrf	?___flpack+3
  5340  0ECF  00A4               	movwf	?___flpack+4
  5341  0ED0  0836               	movf	___awtofl@sign,w
  5342  0ED1  00A5               	movwf	?___flpack+5
  5343  0ED2  27A5               	fcall	___flpack
  5344  0ED3  0823               	movf	?___flpack+3,w
  5345  0ED4  00B5               	movwf	?___awtofl+3
  5346  0ED5  0822               	movf	?___flpack+2,w
  5347  0ED6  00B4               	movwf	?___awtofl+2
  5348  0ED7  0821               	movf	?___flpack+1,w
  5349  0ED8  00B3               	movwf	?___awtofl+1
  5350  0ED9  0820               	movf	?___flpack,w
  5351  0EDA  00B2               	movwf	?___awtofl
  5352  0EDB  0008               	return
  5353  0EDC                     __end_of___awtofl:	
  5354  0EDC                     __ptext1292:	
  5355 ;; =============== function _measure_freq ends ============
  5356                           
  5357                           
  5358 ;; *************** function ___flsub *****************
  5359 ;; Defined at:
  5360 ;;		line 17 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\flsub.c"
  5361 ;; Parameters:    Size  Location     Type
  5362 ;;  f2              4   71[BANK0 ] unsigned short 
  5363 ;;  f1              4   75[BANK0 ] unsigned short 
  5364 ;; Auto vars:     Size  Location     Type
  5365 ;;		None
  5366 ;; Return value:  Size  Location     Type
  5367 ;;                  4   71[BANK0 ] unsigned short 
  5368 ;; Registers used:
  5369 ;;		wreg, status,2, status,0, pclath, cstack
  5370 ;; Tracked objects:
  5371 ;;		On entry : 60/100
  5372 ;;		On exit  : 60/100
  5373 ;;		Unchanged: FFF9F/0
  5374 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5375 ;;      Params:         0       8       0       0       0
  5376 ;;      Locals:         0       0       0       0       0
  5377 ;;      Temps:          0       0       0       0       0
  5378 ;;      Totals:         0       8       0       0       0
  5379 ;;Total ram usage:        8 bytes
  5380 ;; Hardware stack levels used:    1
  5381 ;; Hardware stack levels required when called:    3
  5382 ;; This function calls:
  5383 ;;		___fladd
  5384 ;; This function is called by:
  5385 ;;		_format_double
  5386 ;;		_measure_capacitance
  5387 ;;		_measure_inductance
  5388 ;;		_exp
  5389 ;; This function uses a non-reentrant model
  5390 ;;
  5391  0EDC                     ___flsub:	
  5392                           
  5393                           ; Regs used in ___flsub: [wreg+status,2+status,0+pclath+cstack]
  5394  0EDC  3080               	movlw	128
  5395  0EDD  06EA               	xorwf	___flsub@f2+3,f
  5396  0EDE  086A               	movf	___flsub@f2+3,w
  5397  0EDF  00DB               	movwf	?___fladd+3
  5398  0EE0  0869               	movf	___flsub@f2+2,w
  5399  0EE1  00DA               	movwf	?___fladd+2
  5400  0EE2  0868               	movf	___flsub@f2+1,w
  5401  0EE3  00D9               	movwf	?___fladd+1
  5402  0EE4  0867               	movf	___flsub@f2,w
  5403  0EE5  00D8               	movwf	?___fladd
  5404  0EE6  086E               	movf	___flsub@f1+3,w
  5405  0EE7  00DF               	movwf	?___fladd+7
  5406  0EE8  086D               	movf	___flsub@f1+2,w
  5407  0EE9  00DE               	movwf	?___fladd+6
  5408  0EEA  086C               	movf	___flsub@f1+1,w
  5409  0EEB  00DD               	movwf	?___fladd+5
  5410  0EEC  086B               	movf	___flsub@f1,w
  5411  0EED  00DC               	movwf	?___fladd+4
  5412  0EEE  120A  118A  212A   	fcall	___fladd
  5413  0EF1  085B               	movf	?___fladd+3,w
  5414  0EF2  00EA               	movwf	?___flsub+3
  5415  0EF3  085A               	movf	?___fladd+2,w
  5416  0EF4  00E9               	movwf	?___flsub+2
  5417  0EF5  0859               	movf	?___fladd+1,w
  5418  0EF6  00E8               	movwf	?___flsub+1
  5419  0EF7  0858               	movf	?___fladd,w
  5420  0EF8  00E7               	movwf	?___flsub
  5421  0EF9  0008               	return
  5422  0EFA                     __end_of___flsub:	
  5423  0EFA                     __ptext1310:	
  5424 ;; =============== function _ser_puts ends ============
  5425                           
  5426                           
  5427 ;; *************** function _format_number *****************
  5428 ;; Defined at:
  5429 ;;		line 15 in file "../../../lib/format.c"
  5430 ;; Parameters:    Size  Location     Type
  5431 ;;  n               2    3[BANK0 ] unsigned int 
  5432 ;;  base            1    5[BANK0 ] unsigned char 
  5433 ;;  pad             1    6[BANK0 ] char 
  5434 ;; Auto vars:     Size  Location     Type
  5435 ;;  buf            32    8[BANK0 ] unsigned char [32]
  5436 ;;  i               1   44[BANK0 ] char 
  5437 ;;  di              1   43[BANK0 ] unsigned char 
  5438 ;;  padchar         1   40[BANK0 ] unsigned char 
  5439 ;; Return value:  Size  Location     Type
  5440 ;;		None               void
  5441 ;; Registers used:
  5442 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5443 ;; Tracked objects:
  5444 ;;		On entry : 60/0
  5445 ;;		On exit  : 60/0
  5446 ;;		Unchanged: FFE00/0
  5447 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5448 ;;      Params:         0       4       0       0       0
  5449 ;;      Locals:         0      37       0       0       0
  5450 ;;      Temps:          0       1       0       0       0
  5451 ;;      Totals:         0      42       0       0       0
  5452 ;;Total ram usage:       42 bytes
  5453 ;; Hardware stack levels used:    1
  5454 ;; Hardware stack levels required when called:    2
  5455 ;; This function calls:
  5456 ;;		___lwmod
  5457 ;;		___lwdiv
  5458 ;;		_buffer_putch
  5459 ;; This function is called by:
  5460 ;;		_format_xint32
  5461 ;;		_measure_freq
  5462 ;; This function uses a non-reentrant model
  5463 ;;
  5464  0EFA                     _format_number:	
  5465  0EFA                     l8777:	
  5466                           ; Regs used in _format_number: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5467                           
  5468  0EFA  3020               	movlw	32
  5469                           
  5470                           ;format.c: 16: char buf[8 * sizeof(long)];
  5471                           ;format.c: 17: uint8_t di;
  5472                           ;format.c: 18: int8_t i = 0;
  5473  0EFB  01CC               	clrf	format_number@i
  5474                           
  5475                           ;format.c: 19: char padchar = ' ';
  5476  0EFC  00C8               	movwf	format_number@padchar
  5477                           
  5478                           ;format.c: 21: if(pad < 0) {
  5479  0EFD  1FA6               	btfss	format_number@pad,7
  5480  0EFE  2F03               	goto	l8787
  5481  0EFF  3030               	movlw	48
  5482                           
  5483                           ;format.c: 22: pad = -pad;
  5484  0F00  09A6               	comf	format_number@pad,f
  5485  0F01  0AA6               	incf	format_number@pad,f
  5486                           
  5487                           ;format.c: 23: padchar = '0';
  5488  0F02  00C8               	movwf	format_number@padchar
  5489  0F03                     l8787:	
  5490                           
  5491                           ;format.c: 35: di = n % base;
  5492  0F03  0825               	movf	format_number@base,w
  5493  0F04  00F3               	movwf	?___lwmod
  5494  0F05  01F4               	clrf	?___lwmod+1
  5495  0F06  0824               	movf	format_number@n+1,w
  5496  0F07  00F6               	movwf	?___lwmod+3
  5497  0F08  0823               	movf	format_number@n,w
  5498  0F09  00F5               	movwf	?___lwmod+2
  5499  0F0A  2781  120A  158A   	fcall	___lwmod
  5500  0F0D  0873               	movf	?___lwmod,w
  5501  0F0E  00CB               	movwf	format_number@di
  5502                           
  5503                           ;format.c: 36: buf[i++] = (di < 10 ? (uint8_t)'0' + di : (uint8_t)'A' + di - 10);
  5504  0F0F  300A               	movlw	10
  5505  0F10  024B               	subwf	format_number@di,w
  5506  0F11  084B               	movf	format_number@di,w
  5507  0F12  00C9               	movwf	_format_number$1145
  5508  0F13  1C03               	skipc
  5509  0F14  2F17               	goto	L9
  5510  0F15  3037               	movlw	55
  5511  0F16  2F18               	goto	L8
  5512  0F17                     L9:	
  5513  0F17  3030               	movlw	48
  5514  0F18                     L8:	
  5515  0F18  01CA               	clrf	_format_number$1145+1
  5516  0F19  07C9               	addwf	_format_number$1145,f
  5517  0F1A  1803               	skipnc
  5518  0F1B  0ACA               	incf	_format_number$1145+1,f
  5519  0F1C  084C               	movf	format_number@i,w
  5520  0F1D  3E28               	addlw	format_number@buf& (0+255)
  5521  0F1E  0084               	movwf	4
  5522  0F1F  0849               	movf	_format_number$1145,w
  5523  0F20  1383               	bcf	3,7	;select IRP bank0
  5524  0F21  0080               	movwf	0
  5525  0F22  0ACC               	incf	format_number@i,f
  5526                           
  5527                           ;format.c: 38: n /= base;
  5528  0F23  0825               	movf	format_number@base,w
  5529  0F24  00F3               	movwf	?___lwdiv
  5530  0F25  01F4               	clrf	?___lwdiv+1
  5531  0F26  0824               	movf	format_number@n+1,w
  5532  0F27  00F6               	movwf	?___lwdiv+3
  5533  0F28  0823               	movf	format_number@n,w
  5534  0F29  00F5               	movwf	?___lwdiv+2
  5535  0F2A  2757  120A  158A   	fcall	___lwdiv
  5536  0F2D  0874               	movf	?___lwdiv+1,w
  5537  0F2E  00A4               	movwf	format_number@n+1
  5538  0F2F  0873               	movf	?___lwdiv,w
  5539  0F30  00A3               	movwf	format_number@n
  5540                           
  5541                           ;format.c: 39: } while(n > 0);
  5542  0F31  0424               	iorwf	format_number@n+1,w
  5543  0F32  1903               	btfsc	3,2
  5544  0F33  2F39               	goto	l8805
  5545  0F34  2F03               	goto	l8787
  5546  0F35                     l8803:	
  5547  0F35  0848               	movf	format_number@padchar,w
  5548  0F36  25CF  120A  158A   	fcall	_buffer_putch
  5549  0F39                     l8805:	
  5550  0F39  1283               	bcf	3,5	;RP0=0, select bank0
  5551  0F3A  1303               	bcf	3,6	;RP1=0, select bank0
  5552  0F3B  084C               	movf	format_number@i,w
  5553  0F3C  3A80               	xorlw	128
  5554  0F3D  00A7               	movwf	??_format_number
  5555  0F3E  0826               	movf	format_number@pad,w
  5556  0F3F  03A6               	decf	format_number@pad,f
  5557  0F40  3A80               	xorlw	128
  5558  0F41  02A7               	subwf	??_format_number,f
  5559  0F42  1C03               	skipc
  5560  0F43  2F35               	goto	l8803
  5561  0F44                     l8807:	
  5562                           
  5563                           ;format.c: 43: for(; i > 0; i--) {
  5564  0F44  084C               	movf	format_number@i,w
  5565  0F45  3A80               	xorlw	128
  5566  0F46  3E7F               	addlw	-129
  5567  0F47  1C03               	btfss	3,0
  5568  0F48  0008               	return
  5569                           
  5570                           ;format.c: 44: buffer_putch((char)buf[(int16_t)i - 1]);
  5571  0F49  084C               	movf	format_number@i,w
  5572  0F4A  3EFF               	addlw	255
  5573  0F4B  3E28               	addlw	format_number@buf& (0+255)
  5574  0F4C  0084               	movwf	4
  5575  0F4D  1383               	bcf	3,7	;select IRP bank0
  5576  0F4E  0800               	movf	0,w
  5577  0F4F  25CF  120A  158A   	fcall	_buffer_putch
  5578  0F52  1283               	bcf	3,5	;RP0=0, select bank0
  5579  0F53  1303               	bcf	3,6	;RP1=0, select bank0
  5580  0F54  03CC               	decf	format_number@i,f
  5581  0F55  2F44               	goto	l8807
  5582  0F56                     __end_of_format_number:	
  5583  0F56                     __ptext1320:	
  5584 ;; =============== function _print_indicator ends ============
  5585                           
  5586                           
  5587 ;; *************** function _print_reading *****************
  5588 ;; Defined at:
  5589 ;;		line 146 in file "../../../src/print.c"
  5590 ;; Parameters:    Size  Location     Type
  5591 ;;  measurement     2    3[COMMON] unsigned int 
  5592 ;; Auto vars:     Size  Location     Type
  5593 ;;		None
  5594 ;; Return value:  Size  Location     Type
  5595 ;;		None               void
  5596 ;; Registers used:
  5597 ;;		None
  5598 ;; Tracked objects:
  5599 ;;		On entry : 0/140
  5600 ;;		On exit  : 0/140
  5601 ;;		Unchanged: FFFFFFFF/0
  5602 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5603 ;;      Params:         2       0       0       0       0
  5604 ;;      Locals:         0       0       0       0       0
  5605 ;;      Temps:          0       0       0       0       0
  5606 ;;      Totals:         2       0       0       0       0
  5607 ;;Total ram usage:        2 bytes
  5608 ;; Hardware stack levels used:    1
  5609 ;; Hardware stack levels required when called:    1
  5610 ;; This function calls:
  5611 ;;		Nothing
  5612 ;; This function is called by:
  5613 ;;		_measure_capacitance
  5614 ;;		_measure_inductance
  5615 ;; This function uses a non-reentrant model
  5616 ;;
  5617  0F56                     _print_reading:	
  5618                           
  5619                           ; Regs used in _print_reading: []
  5620  0F56  0008               	return
  5621  0F57                     __end_of_print_reading:	
  5622  0F57                     __ptext1316:	
  5623 ;; =============== function ___lwmod ends ============
  5624                           
  5625                           
  5626 ;; *************** function ___lwdiv *****************
  5627 ;; Defined at:
  5628 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\lwdiv.c"
  5629 ;; Parameters:    Size  Location     Type
  5630 ;;  divisor         2    3[COMMON] unsigned int 
  5631 ;;  dividend        2    5[COMMON] unsigned int 
  5632 ;; Auto vars:     Size  Location     Type
  5633 ;;  quotient        2    1[BANK0 ] unsigned int 
  5634 ;;  counter         1    0[BANK0 ] unsigned char 
  5635 ;; Return value:  Size  Location     Type
  5636 ;;                  2    3[COMMON] unsigned int 
  5637 ;; Registers used:
  5638 ;;		wreg, status,2, status,0
  5639 ;; Tracked objects:
  5640 ;;		On entry : 160/0
  5641 ;;		On exit  : 160/0
  5642 ;;		Unchanged: FFE9F/0
  5643 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5644 ;;      Params:         4       0       0       0       0
  5645 ;;      Locals:         0       3       0       0       0
  5646 ;;      Temps:          0       0       0       0       0
  5647 ;;      Totals:         4       3       0       0       0
  5648 ;;Total ram usage:        7 bytes
  5649 ;; Hardware stack levels used:    1
  5650 ;; Hardware stack levels required when called:    1
  5651 ;; This function calls:
  5652 ;;		Nothing
  5653 ;; This function is called by:
  5654 ;;		_format_number
  5655 ;; This function uses a non-reentrant model
  5656 ;;
  5657  0F57                     ___lwdiv:	
  5658                           
  5659                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  5660  0F57  01A1               	clrf	___lwdiv@quotient
  5661  0F58  01A2               	clrf	___lwdiv@quotient+1
  5662  0F59  0874               	movf	___lwdiv@divisor+1,w
  5663  0F5A  0473               	iorwf	___lwdiv@divisor,w
  5664  0F5B  1903               	skipnz
  5665  0F5C  2F7C               	goto	l8673
  5666  0F5D  01A0               	clrf	___lwdiv@counter
  5667  0F5E                     L13:	
  5668  0F5E  0AA0               	incf	___lwdiv@counter,f
  5669  0F5F  1BF4               	btfsc	___lwdiv@divisor+1,7
  5670  0F60  2F65               	goto	l8661
  5671  0F61  1003               	clrc
  5672  0F62  0DF3               	rlf	___lwdiv@divisor,f
  5673  0F63  0DF4               	rlf	___lwdiv@divisor+1,f
  5674  0F64  2F5E               	goto	L13
  5675  0F65                     l8661:	
  5676  0F65  1003               	clrc
  5677  0F66  0DA1               	rlf	___lwdiv@quotient,f
  5678  0F67  0DA2               	rlf	___lwdiv@quotient+1,f
  5679  0F68  0874               	movf	___lwdiv@divisor+1,w
  5680  0F69  0276               	subwf	___lwdiv@dividend+1,w
  5681  0F6A  1D03               	skipz
  5682  0F6B  2F6E               	goto	u2585
  5683  0F6C  0873               	movf	___lwdiv@divisor,w
  5684  0F6D  0275               	subwf	___lwdiv@dividend,w
  5685  0F6E                     u2585:	
  5686  0F6E  1C03               	skipc
  5687  0F6F  2F78               	goto	L14
  5688  0F70  0873               	movf	___lwdiv@divisor,w
  5689  0F71  02F5               	subwf	___lwdiv@dividend,f
  5690  0F72  0874               	movf	___lwdiv@divisor+1,w
  5691  0F73  1C03               	skipc
  5692  0F74  03F6               	decf	___lwdiv@dividend+1,f
  5693  0F75  02F6               	subwf	___lwdiv@dividend+1,f
  5694  0F76  1421               	bsf	___lwdiv@quotient,0
  5695  0F77  1003               	clrc
  5696  0F78                     L14:	
  5697  0F78  0CF4               	rrf	___lwdiv@divisor+1,f
  5698  0F79  0CF3               	rrf	___lwdiv@divisor,f
  5699  0F7A  0BA0               	decfsz	___lwdiv@counter,f
  5700  0F7B  2F65               	goto	l8661
  5701  0F7C                     l8673:	
  5702  0F7C  0822               	movf	___lwdiv@quotient+1,w
  5703  0F7D  00F4               	movwf	?___lwdiv+1
  5704  0F7E  0821               	movf	___lwdiv@quotient,w
  5705  0F7F  00F3               	movwf	?___lwdiv
  5706  0F80  0008               	return
  5707  0F81                     __end_of___lwdiv:	
  5708  0F81                     __ptext1315:	
  5709 ;; =============== function ___flpack ends ============
  5710                           
  5711                           
  5712 ;; *************** function ___lwmod *****************
  5713 ;; Defined at:
  5714 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\lwmod.c"
  5715 ;; Parameters:    Size  Location     Type
  5716 ;;  divisor         2    3[COMMON] unsigned int 
  5717 ;;  dividend        2    5[COMMON] unsigned int 
  5718 ;; Auto vars:     Size  Location     Type
  5719 ;;  counter         1    7[COMMON] unsigned char 
  5720 ;; Return value:  Size  Location     Type
  5721 ;;                  2    3[COMMON] unsigned int 
  5722 ;; Registers used:
  5723 ;;		wreg, status,2, status,0
  5724 ;; Tracked objects:
  5725 ;;		On entry : 60/0
  5726 ;;		On exit  : 60/0
  5727 ;;		Unchanged: FFF9F/0
  5728 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5729 ;;      Params:         4       0       0       0       0
  5730 ;;      Locals:         1       0       0       0       0
  5731 ;;      Temps:          0       0       0       0       0
  5732 ;;      Totals:         5       0       0       0       0
  5733 ;;Total ram usage:        5 bytes
  5734 ;; Hardware stack levels used:    1
  5735 ;; Hardware stack levels required when called:    1
  5736 ;; This function calls:
  5737 ;;		Nothing
  5738 ;; This function is called by:
  5739 ;;		_format_number
  5740 ;; This function uses a non-reentrant model
  5741 ;;
  5742  0F81                     ___lwmod:	
  5743                           
  5744                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  5745  0F81  0874               	movf	___lwmod@divisor+1,w
  5746  0F82  0473               	iorwf	___lwmod@divisor,w
  5747  0F83  1903               	skipnz
  5748  0F84  2FA0               	goto	l8693
  5749  0F85  01F7               	clrf	___lwmod@counter
  5750  0F86                     L11:	
  5751  0F86  0AF7               	incf	___lwmod@counter,f
  5752  0F87  1BF4               	btfsc	___lwmod@divisor+1,7
  5753  0F88  2F8D               	goto	l8685
  5754  0F89  1003               	clrc
  5755  0F8A  0DF3               	rlf	___lwmod@divisor,f
  5756  0F8B  0DF4               	rlf	___lwmod@divisor+1,f
  5757  0F8C  2F86               	goto	L11
  5758  0F8D                     l8685:	
  5759  0F8D  0874               	movf	___lwmod@divisor+1,w
  5760  0F8E  0276               	subwf	___lwmod@dividend+1,w
  5761  0F8F  1D03               	skipz
  5762  0F90  2F93               	goto	u2625
  5763  0F91  0873               	movf	___lwmod@divisor,w
  5764  0F92  0275               	subwf	___lwmod@dividend,w
  5765  0F93                     u2625:	
  5766  0F93  1C03               	skipc
  5767  0F94  2F9C               	goto	L12
  5768  0F95  0873               	movf	___lwmod@divisor,w
  5769  0F96  02F5               	subwf	___lwmod@dividend,f
  5770  0F97  0874               	movf	___lwmod@divisor+1,w
  5771  0F98  1C03               	skipc
  5772  0F99  03F6               	decf	___lwmod@dividend+1,f
  5773  0F9A  02F6               	subwf	___lwmod@dividend+1,f
  5774  0F9B  1003               	clrc
  5775  0F9C                     L12:	
  5776  0F9C  0CF4               	rrf	___lwmod@divisor+1,f
  5777  0F9D  0CF3               	rrf	___lwmod@divisor,f
  5778  0F9E  0BF7               	decfsz	___lwmod@counter,f
  5779  0F9F  2F8D               	goto	l8685
  5780  0FA0                     l8693:	
  5781  0FA0  0876               	movf	___lwmod@dividend+1,w
  5782  0FA1  00F4               	movwf	?___lwmod+1
  5783  0FA2  0875               	movf	___lwmod@dividend,w
  5784  0FA3  00F3               	movwf	?___lwmod
  5785  0FA4  0008               	return
  5786  0FA5                     __end_of___lwmod:	
  5787  0FA5                     __ptext1314:	
  5788 ;; =============== function ___flneg ends ============
  5789                           
  5790                           
  5791 ;; *************** function ___flpack *****************
  5792 ;; Defined at:
  5793 ;;		line 64 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\double.c"
  5794 ;; Parameters:    Size  Location     Type
  5795 ;;  arg             4    0[BANK0 ] unsigned long 
  5796 ;;  exp             1    4[BANK0 ] unsigned char 
  5797 ;;  sign            1    5[BANK0 ] unsigned char 
  5798 ;; Auto vars:     Size  Location     Type
  5799 ;;		None
  5800 ;; Return value:  Size  Location     Type
  5801 ;;                  4    0[BANK0 ] unsigned char 
  5802 ;; Registers used:
  5803 ;;		wreg, status,2, status,0
  5804 ;; Tracked objects:
  5805 ;;		On entry : 60/0
  5806 ;;		On exit  : 60/0
  5807 ;;		Unchanged: FFF9F/0
  5808 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5809 ;;      Params:         0       6       0       0       0
  5810 ;;      Locals:         0       0       0       0       0
  5811 ;;      Temps:          4       0       0       0       0
  5812 ;;      Totals:         4       6       0       0       0
  5813 ;;Total ram usage:       10 bytes
  5814 ;; Hardware stack levels used:    1
  5815 ;; Hardware stack levels required when called:    1
  5816 ;; This function calls:
  5817 ;;		Nothing
  5818 ;; This function is called by:
  5819 ;;		___fladd
  5820 ;;		___fldiv
  5821 ;;		___flmul
  5822 ;;		___awtofl
  5823 ;;		___lwtofl
  5824 ;;		___altofl
  5825 ;;		___lltofl
  5826 ;; This function uses a non-reentrant model
  5827 ;;
  5828  0FA5                     ___flpack:	
  5829                           
  5830                           ; Regs used in ___flpack: [wreg+status,2+status,0]
  5831  0FA5  0824               	movf	___flpack@exp,w
  5832  0FA6  1903               	btfsc	3,2
  5833  0FA7  2FAE               	goto	l4575
  5834  0FA8  0823               	movf	___flpack@arg+3,w
  5835  0FA9  0422               	iorwf	___flpack@arg+2,w
  5836  0FAA  0421               	iorwf	___flpack@arg+1,w
  5837  0FAB  0420               	iorwf	___flpack@arg,w
  5838  0FAC  1D03               	skipz
  5839  0FAD  2FB9               	goto	l8703
  5840  0FAE                     l4575:	
  5841  0FAE  01A0               	clrf	?___flpack
  5842  0FAF  01A1               	clrf	?___flpack+1
  5843  0FB0  01A2               	clrf	?___flpack+2
  5844  0FB1  01A3               	clrf	?___flpack+3
  5845  0FB2  0008               	return
  5846  0FB3                     l8701:	
  5847  0FB3  0AA4               	incf	___flpack@exp,f
  5848  0FB4  1003               	clrc
  5849  0FB5  0CA3               	rrf	___flpack@arg+3,f
  5850  0FB6  0CA2               	rrf	___flpack@arg+2,f
  5851  0FB7  0CA1               	rrf	___flpack@arg+1,f
  5852  0FB8  0CA0               	rrf	___flpack@arg,f
  5853  0FB9                     l8703:	
  5854  0FB9  30FE               	movlw	254
  5855  0FBA  0523               	andwf	___flpack@arg+3,w
  5856  0FBB  1903               	btfsc	3,2
  5857  0FBC  2FCB               	goto	l8711
  5858  0FBD  2FB3               	goto	l8701
  5859  0FBE                     l8705:	
  5860  0FBE  0AA4               	incf	___flpack@exp,f
  5861  0FBF  0AA0               	incf	___flpack@arg,f
  5862  0FC0  1903               	skipnz
  5863  0FC1  0AA1               	incf	___flpack@arg+1,f
  5864  0FC2  1903               	skipnz
  5865  0FC3  0AA2               	incf	___flpack@arg+2,f
  5866  0FC4  1903               	skipnz
  5867  0FC5  0AA3               	incf	___flpack@arg+3,f
  5868  0FC6  1003               	clrc
  5869  0FC7  0CA3               	rrf	___flpack@arg+3,f
  5870  0FC8  0CA2               	rrf	___flpack@arg+2,f
  5871  0FC9  0CA1               	rrf	___flpack@arg+1,f
  5872  0FCA  0CA0               	rrf	___flpack@arg,f
  5873  0FCB                     l8711:	
  5874  0FCB  30FF               	movlw	255
  5875  0FCC  0523               	andwf	___flpack@arg+3,w
  5876  0FCD  1903               	btfsc	3,2
  5877  0FCE  2FD6               	goto	l8715
  5878  0FCF  2FBE               	goto	l8705
  5879  0FD0                     l8713:	
  5880  0FD0  03A4               	decf	___flpack@exp,f
  5881  0FD1  1003               	clrc
  5882  0FD2  0DA0               	rlf	___flpack@arg,f
  5883  0FD3  0DA1               	rlf	___flpack@arg+1,f
  5884  0FD4  0DA2               	rlf	___flpack@arg+2,f
  5885  0FD5  0DA3               	rlf	___flpack@arg+3,f
  5886  0FD6                     l8715:	
  5887  0FD6  1FA2               	btfss	___flpack@arg+2,7
  5888  0FD7  2FD0               	goto	l8713
  5889  0FD8  1824               	btfsc	___flpack@exp,0
  5890  0FD9  2FDD               	goto	l8719
  5891  0FDA  307F               	movlw	127
  5892  0FDB  05A2               	andwf	___flpack@arg+2,f
  5893  0FDC  30FF               	movlw	255
  5894  0FDD                     l8719:	
  5895  0FDD  1003               	clrc
  5896  0FDE  0CA4               	rrf	___flpack@exp,f
  5897  0FDF  0824               	movf	___flpack@exp,w
  5898  0FE0  00F6               	movwf	??___flpack+3
  5899  0FE1  01F5               	clrf	??___flpack+2
  5900  0FE2  01F4               	clrf	??___flpack+1
  5901  0FE3  01F3               	clrf	??___flpack
  5902  0FE4  0873               	movf	??___flpack,w
  5903  0FE5  04A0               	iorwf	___flpack@arg,f
  5904  0FE6  0874               	movf	??___flpack+1,w
  5905  0FE7  04A1               	iorwf	___flpack@arg+1,f
  5906  0FE8  0875               	movf	??___flpack+2,w
  5907  0FE9  04A2               	iorwf	___flpack@arg+2,f
  5908  0FEA  0876               	movf	??___flpack+3,w
  5909  0FEB  04A3               	iorwf	___flpack@arg+3,f
  5910  0FEC  0825               	movf	___flpack@sign,w
  5911  0FED  1D03               	skipz
  5912  0FEE  17A3               	bsf	___flpack@arg+3,7
  5913  0FEF  0008               	return
  5914  0FF0                     __end_of___flpack:	
  5915  0FF0                     __ptext1321:	
  5916 ;; =============== function _print_reading ends ============
  5917                           
  5918                           
  5919 ;; *************** function _print_unit *****************
  5920 ;; Defined at:
  5921 ;;		line 123 in file "../../../src/print.c"
  5922 ;; Parameters:    Size  Location     Type
  5923 ;;  unit            1    wreg     unsigned char 
  5924 ;; Auto vars:     Size  Location     Type
  5925 ;;		None
  5926 ;; Return value:  Size  Location     Type
  5927 ;;		None               void
  5928 ;; Registers used:
  5929 ;;		wreg
  5930 ;; Tracked objects:
  5931 ;;		On entry : 0/140
  5932 ;;		On exit  : 0/140
  5933 ;;		Unchanged: FFFFFFFF/0
  5934 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5935 ;;      Params:         0       0       0       0       0
  5936 ;;      Locals:         0       0       0       0       0
  5937 ;;      Temps:          0       0       0       0       0
  5938 ;;      Totals:         0       0       0       0       0
  5939 ;;Total ram usage:        0 bytes
  5940 ;; Hardware stack levels used:    1
  5941 ;; Hardware stack levels required when called:    1
  5942 ;; This function calls:
  5943 ;;		Nothing
  5944 ;; This function is called by:
  5945 ;;		_measure_capacitance
  5946 ;;		_measure_inductance
  5947 ;; This function uses a non-reentrant model
  5948 ;;
  5949  0FF0                     _print_unit:	
  5950  0FF0                     l1986:	
  5951                           ; Regs used in _print_unit: [wreg]
  5952                           
  5953  0FF0  0008               	return
  5954  0FF1                     __end_of_print_unit:	
  5955  0FF1                     PL13:	
  5956  0FF1  0828               	movf	___fltol@f1,w
  5957  0FF2  00AC               	movwf	??___fltol
  5958  0FF3  0829               	movf	___fltol@f1+1,w
  5959  0FF4  00AD               	movwf	??___fltol+1
  5960  0FF5  082A               	movf	___fltol@f1+2,w
  5961  0FF6  00AE               	movwf	??___fltol+2
  5962  0FF7  082B               	movf	___fltol@f1+3,w
  5963  0FF8  00AF               	movwf	??___fltol+3
  5964  0FF9  0008               	return
  5965  0FFA                     PL20:	
  5966  0FFA  00A3               	movwf	?_format_number
  5967  0FFB  3010               	movlw	16
  5968  0FFC  00A5               	movwf	?_format_number+2
  5969  0FFD  30FC               	movlw	-4
  5970  0FFE  00A6               	movwf	?_format_number+3
  5971  0FFF  0008               	return
  5972                           
  5973                           	psect	text1286
  5974  0011                     __ptext1286:	
  5975 ;; =============== function _measure_inductance ends ============
  5976                           
  5977                           
  5978 ;; *************** function _calibrate *****************
  5979 ;; Defined at:
  5980 ;;		line 26 in file "../../../src/measure.c"
  5981 ;; Parameters:    Size  Location     Type
  5982 ;;		None
  5983 ;; Auto vars:     Size  Location     Type
  5984 ;;  i               1    0        unsigned char 
  5985 ;; Return value:  Size  Location     Type
  5986 ;;		None               void
  5987 ;; Registers used:
  5988 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5989 ;; Tracked objects:
  5990 ;;		On entry : 60/0
  5991 ;;		On exit  : 0/0
  5992 ;;		Unchanged: 0/0
  5993 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5994 ;;      Params:         0       0       0       0       0
  5995 ;;      Locals:         0       0       0       0       0
  5996 ;;      Temps:          0       0       0       0       0
  5997 ;;      Totals:         0       0       0       0       0
  5998 ;;Total ram usage:        0 bytes
  5999 ;; Hardware stack levels used:    1
  6000 ;; Hardware stack levels required when called:    5
  6001 ;; This function calls:
  6002 ;;		_measure_freq
  6003 ;;		___lwtofl
  6004 ;;		_delay10ms
  6005 ;;		_ser_puts
  6006 ;; This function is called by:
  6007 ;;		_main
  6008 ;; This function uses a non-reentrant model
  6009 ;;
  6010  0011                     _calibrate:	
  6011                           
  6012                           ;measure.c: 27: uint8_t i;
  6013                           ;measure.c: 42: PORTC &= ~(1 << 5);
  6014                           
  6015                           ; Regs used in _calibrate: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  6016  0011  1287               	bcf	7,5	;volatile
  6017                           
  6018                           ;measure.c: 44: F1 = (double)measure_freq();
  6019  0012  261F  120A  118A   	fcall	_measure_freq
  6020  0015  0853               	movf	?_measure_freq+1,w
  6021  0016  00CE               	movwf	?___lwtofl+1
  6022  0017  0852               	movf	?_measure_freq,w
  6023  0018  00CD               	movwf	?___lwtofl
  6024  0019  260A  120A  118A   	fcall	___lwtofl
  6025  001C  2051  120A  118A   	fcall	PL5	;call to abstracted procedure
  6026                           
  6027                           ;measure.c: 45: delay10ms(50);
  6028  001F  3032               	movlw	50
  6029                           
  6030                           ;measure.c: 47: F1 = (double)measure_freq();
  6031  0020  261F  120A  118A   	fcall	_measure_freq
  6032  0023  0853               	movf	?_measure_freq+1,w
  6033  0024  00CE               	movwf	?___lwtofl+1
  6034  0025  0852               	movf	?_measure_freq,w
  6035  0026  00CD               	movwf	?___lwtofl
  6036  0027  260A  120A  118A   	fcall	___lwtofl
  6037  002A  2051  120A  118A   	fcall	PL5	;call to abstracted procedure
  6038  002D  207F               	call	PL21	;select bank 0
  6039                           
  6040                           ;measure.c: 48: PORTC |= (1 << 5);
  6041  002E  1687               	bsf	7,5	;volatile
  6042                           
  6043                           ;measure.c: 50: F2 = (double)measure_freq();
  6044  002F  261F  120A  118A   	fcall	_measure_freq
  6045  0032  0853               	movf	?_measure_freq+1,w
  6046  0033  00CE               	movwf	?___lwtofl+1
  6047  0034  0852               	movf	?_measure_freq,w
  6048  0035  00CD               	movwf	?___lwtofl
  6049  0036  260A  120A  118A   	fcall	___lwtofl
  6050  0039  2068  120A  118A   	fcall	PL6	;call to abstracted procedure
  6051                           
  6052                           ;measure.c: 51: delay10ms(50);
  6053  003C  3032               	movlw	50
  6054                           
  6055                           ;measure.c: 53: F2 = (double)measure_freq();
  6056  003D  261F  120A  118A   	fcall	_measure_freq
  6057  0040  0853               	movf	?_measure_freq+1,w
  6058  0041  00CE               	movwf	?___lwtofl+1
  6059  0042  0852               	movf	?_measure_freq,w
  6060  0043  00CD               	movwf	?___lwtofl
  6061  0044  260A  120A  118A   	fcall	___lwtofl
  6062  0047  2068  120A  118A   	fcall	PL6	;call to abstracted procedure
  6063  004A  207F               	call	PL21	;select bank 0
  6064                           
  6065                           ;measure.c: 54: PORTC &= ~(1 << 5);
  6066  004B  1287               	bcf	7,5	;volatile
  6067                           
  6068                           ;measure.c: 65: ser_puts("\r\n");
  6069  004C  3097               	movlw	(STR_1-__stringbase)& (0+255)
  6070  004D  120A  158A  2C37   	ljmp	_ser_puts
  6071  0050                     __end_of_calibrate:	
  6072  0050                     __ptext1318:	
  6073 ;; =============== function _frexp ends ============
  6074                           
  6075                           
  6076 ;; *************** function _delay10ms *****************
  6077 ;; Defined at:
  6078 ;;		line 59 in file "../../../LC-meter.c"
  6079 ;; Parameters:    Size  Location     Type
  6080 ;;  period_10ms     1    wreg     unsigned char 
  6081 ;; Auto vars:     Size  Location     Type
  6082 ;;		None
  6083 ;; Return value:  Size  Location     Type
  6084 ;;		None               void
  6085 ;; Registers used:
  6086 ;;		wreg
  6087 ;; Tracked objects:
  6088 ;;		On entry : 0/0
  6089 ;;		On exit  : 0/0
  6090 ;;		Unchanged: FFFFFFFF/0
  6091 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6092 ;;      Params:         0       0       0       0       0
  6093 ;;      Locals:         0       0       0       0       0
  6094 ;;      Temps:          0       0       0       0       0
  6095 ;;      Totals:         0       0       0       0       0
  6096 ;;Total ram usage:        0 bytes
  6097 ;; Hardware stack levels used:    1
  6098 ;; Hardware stack levels required when called:    1
  6099 ;; This function calls:
  6100 ;;		Nothing
  6101 ;; This function is called by:
  6102 ;;		_calibrate
  6103 ;;		_main
  6104 ;; This function uses a non-reentrant model
  6105 ;;
  6106  0050                     _delay10ms:	
  6107                           
  6108                           ; Regs used in _delay10ms: [wreg]
  6109  0050  0008               	return
  6110  0051                     __end_of_delay10ms:	
  6111  0051                     PL5:	
  6112  0051  0850               	movf	?___lwtofl+3,w
  6113  0052  1683               	bsf	3,5	;RP0=1, select bank3
  6114  0053  1703               	bsf	3,6	;RP1=1, select bank3
  6115  0054  00D0               	movwf	(_F1+3)^(0+384)
  6116  0055  1283               	bcf	3,5	;RP0=0, select bank0
  6117  0056  1303               	bcf	3,6	;RP1=0, select bank0
  6118  0057  084F               	movf	?___lwtofl+2,w
  6119  0058  1683               	bsf	3,5	;RP0=1, select bank3
  6120  0059  1703               	bsf	3,6	;RP1=1, select bank3
  6121  005A  00CF               	movwf	(_F1+2)^(0+384)
  6122  005B  1283               	bcf	3,5	;RP0=0, select bank0
  6123  005C  1303               	bcf	3,6	;RP1=0, select bank0
  6124  005D  084E               	movf	?___lwtofl+1,w
  6125  005E  1683               	bsf	3,5	;RP0=1, select bank3
  6126  005F  1703               	bsf	3,6	;RP1=1, select bank3
  6127  0060  00CE               	movwf	(_F1+1)^(0+384)
  6128  0061  1283               	bcf	3,5	;RP0=0, select bank0
  6129  0062  1303               	bcf	3,6	;RP1=0, select bank0
  6130  0063  084D               	movf	?___lwtofl,w
  6131  0064  1683               	bsf	3,5	;RP0=1, select bank3
  6132  0065  1703               	bsf	3,6	;RP1=1, select bank3
  6133  0066  00CD               	movwf	_F1^(0+384)
  6134  0067  0008               	return
  6135  0068                     PL6:	
  6136  0068  0850               	movf	?___lwtofl+3,w
  6137  0069  1683               	bsf	3,5	;RP0=1, select bank3
  6138  006A  1703               	bsf	3,6	;RP1=1, select bank3
  6139  006B  00B3               	movwf	(_F2+3)^(0+384)
  6140  006C  1283               	bcf	3,5	;RP0=0, select bank0
  6141  006D  1303               	bcf	3,6	;RP1=0, select bank0
  6142  006E  084F               	movf	?___lwtofl+2,w
  6143  006F  1683               	bsf	3,5	;RP0=1, select bank3
  6144  0070  1703               	bsf	3,6	;RP1=1, select bank3
  6145  0071  00B2               	movwf	(_F2+2)^(0+384)
  6146  0072  1283               	bcf	3,5	;RP0=0, select bank0
  6147  0073  1303               	bcf	3,6	;RP1=0, select bank0
  6148  0074  084E               	movf	?___lwtofl+1,w
  6149  0075  1683               	bsf	3,5	;RP0=1, select bank3
  6150  0076  1703               	bsf	3,6	;RP1=1, select bank3
  6151  0077  00B1               	movwf	(_F2+1)^(0+384)
  6152  0078  1283               	bcf	3,5	;RP0=0, select bank0
  6153  0079  1303               	bcf	3,6	;RP1=0, select bank0
  6154  007A  084D               	movf	?___lwtofl,w
  6155  007B  1683               	bsf	3,5	;RP0=1, select bank3
  6156  007C  1703               	bsf	3,6	;RP1=1, select bank3
  6157  007D  00B0               	movwf	_F2^(0+384)
  6158  007E  0008               	return
  6159  007F                     PL21:	
  6160  007F  1283               	bcf	3,5	;RP0=0, select bank0
  6161  0080  1303               	bcf	3,6	;RP1=0, select bank0
  6162  0081  0008               	return
  6163  0082                     PL22:	
  6164  0082  1683               	bsf	3,5	;RP0=1, select bank3
  6165  0083  1703               	bsf	3,6	;RP1=1, select bank3
  6166  0084  0008               	return
  6167  0085                     PL26:	
  6168  0085  1683               	bsf	3,5	;RP0=1, select bank3
  6169  0086  1703               	bsf	3,6	;RP1=1, select bank3
  6170  0087  0008               	return
  6171  0088                     PL27:	
  6172  0088  1283               	bcf	3,5	;RP0=0, select bank0
  6173  0089  1303               	bcf	3,6	;RP1=0, select bank0
  6174  008A  0008               	return
  6175  008B                     PL29:	
  6176  008B  1683               	bsf	3,5	;RP0=1, select bank3
  6177  008C  1703               	bsf	3,6	;RP1=1, select bank3
  6178  008D  0008               	return
  6179  008E                     PL30:	
  6180  008E  1283               	bcf	3,5	;RP0=0, select bank0
  6181  008F  1303               	bcf	3,6	;RP1=0, select bank0
  6182  0090  0008               	return
  6183  0091                     __ptext1293:	
  6184 ;; =============== function ___flsub ends ============
  6185                           
  6186                           
  6187 ;; *************** function _eval_poly *****************
  6188 ;; Defined at:
  6189 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\evalpoly.c"
  6190 ;; Parameters:    Size  Location     Type
  6191 ;;  x               4    4[BANK1 ] unsigned short 
  6192 ;;  d               1    8[BANK1 ] PTR const 
  6193 ;;		 -> exp@coeff(40), log@coeff(36), 
  6194 ;;  n               2    9[BANK1 ] int 
  6195 ;; Auto vars:     Size  Location     Type
  6196 ;;  res             4   16[BANK1 ] int 
  6197 ;; Return value:  Size  Location     Type
  6198 ;;                  4    4[BANK1 ] int 
  6199 ;; Registers used:
  6200 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6201 ;; Tracked objects:
  6202 ;;		On entry : 160/20
  6203 ;;		On exit  : 160/20
  6204 ;;		Unchanged: FFE9F/0
  6205 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6206 ;;      Params:         0       0       7       0       0
  6207 ;;      Locals:         0       0       4       0       0
  6208 ;;      Temps:          0       0       5       0       0
  6209 ;;      Totals:         0       0      16       0       0
  6210 ;;Total ram usage:       16 bytes
  6211 ;; Hardware stack levels used:    1
  6212 ;; Hardware stack levels required when called:    3
  6213 ;; This function calls:
  6214 ;;		___flmul
  6215 ;;		___fladd
  6216 ;; This function is called by:
  6217 ;;		_log
  6218 ;;		_exp
  6219 ;; This function uses a non-reentrant model
  6220 ;;
  6221  0091                     _eval_poly:	
  6222                           
  6223 ;; using string table level
  6224                           ; Regs used in _eval_poly: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6225  0091  0829               	movf	eval_poly@n^(0+128),w
  6226  0092  2776               	fcall	PL17	;call to abstracted procedure
  6227  0093  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  6228  0098  00AC               	movwf	(??_eval_poly+1)^(0+128)
  6229  0099  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  6230  009E  00AD               	movwf	((??_eval_poly+1)^(0+128)+1)
  6231  009F  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  6232  00A4  00AE               	movwf	((??_eval_poly+1)^(0+128)+2)
  6233  00A5  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  6234  00AA  00AF               	movwf	((??_eval_poly+1)^(0+128)+3)
  6235  00AB  082F               	movf	(??_eval_poly+4)^(0+128),w
  6236  00AC  00B3               	movwf	(eval_poly@res+3)^(0+128)
  6237  00AD  082E               	movf	(??_eval_poly+3)^(0+128),w
  6238  00AE  00B2               	movwf	(eval_poly@res+2)^(0+128)
  6239  00AF  082D               	movf	(??_eval_poly+2)^(0+128),w
  6240  00B0  00B1               	movwf	(eval_poly@res+1)^(0+128)
  6241  00B1  082C               	movf	(??_eval_poly+1)^(0+128),w
  6242  00B2                     L4:	
  6243  00B2  00B0               	movwf	eval_poly@res^(0+128)
  6244  00B3  082A               	movf	(eval_poly@n+1)^(0+128),w
  6245  00B4  0429               	iorwf	eval_poly@n^(0+128),w
  6246  00B5  1903               	btfsc	3,2
  6247  00B6  2921               	goto	l9155
  6248  00B7  30FF               	movlw	-1
  6249  00B8  07A9               	addwf	eval_poly@n^(0+128),f
  6250  00B9  1C03               	skipc
  6251  00BA  03AA               	decf	(eval_poly@n+1)^(0+128),f
  6252  00BB  0829               	movf	eval_poly@n^(0+128),w
  6253  00BC  2776               	fcall	PL17	;call to abstracted procedure
  6254  00BD  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  6255  00C2  00AC               	movwf	(??_eval_poly+1)^(0+128)
  6256  00C3  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  6257  00C8  00AD               	movwf	((??_eval_poly+1)^(0+128)+1)
  6258  00C9  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  6259  00CE  00AE               	movwf	((??_eval_poly+1)^(0+128)+2)
  6260  00CF  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  6261  00D4  00AF               	movwf	((??_eval_poly+1)^(0+128)+3)
  6262  00D5  082F               	movf	(??_eval_poly+4)^(0+128),w
  6263  00D6  1283               	bcf	3,5	;RP0=0, select bank0
  6264  00D7  00DB               	movwf	?___fladd+3
  6265  00D8  1683               	bsf	3,5	;RP0=1, select bank1
  6266  00D9  082E               	movf	(??_eval_poly+3)^(0+128),w
  6267  00DA  1283               	bcf	3,5	;RP0=0, select bank0
  6268  00DB  00DA               	movwf	?___fladd+2
  6269  00DC  1683               	bsf	3,5	;RP0=1, select bank1
  6270  00DD  082D               	movf	(??_eval_poly+2)^(0+128),w
  6271  00DE  1283               	bcf	3,5	;RP0=0, select bank0
  6272  00DF  00D9               	movwf	?___fladd+1
  6273  00E0  1683               	bsf	3,5	;RP0=1, select bank1
  6274  00E1  082C               	movf	(??_eval_poly+1)^(0+128),w
  6275  00E2  1283               	bcf	3,5	;RP0=0, select bank0
  6276  00E3  00D8               	movwf	?___fladd
  6277  00E4  1683               	bsf	3,5	;RP0=1, select bank1
  6278  00E5  0833               	movf	(eval_poly@res+3)^(0+128),w
  6279  00E6  1283               	bcf	3,5	;RP0=0, select bank0
  6280  00E7  00C8               	movwf	?___flmul+3
  6281  00E8  1683               	bsf	3,5	;RP0=1, select bank1
  6282  00E9  0832               	movf	(eval_poly@res+2)^(0+128),w
  6283  00EA  1283               	bcf	3,5	;RP0=0, select bank0
  6284  00EB  00C7               	movwf	?___flmul+2
  6285  00EC  1683               	bsf	3,5	;RP0=1, select bank1
  6286  00ED  0831               	movf	(eval_poly@res+1)^(0+128),w
  6287  00EE  1283               	bcf	3,5	;RP0=0, select bank0
  6288  00EF  00C6               	movwf	?___flmul+1
  6289  00F0  1683               	bsf	3,5	;RP0=1, select bank1
  6290  00F1  0830               	movf	eval_poly@res^(0+128),w
  6291  00F2  1283               	bcf	3,5	;RP0=0, select bank0
  6292  00F3  00C5               	movwf	?___flmul
  6293  00F4  1683               	bsf	3,5	;RP0=1, select bank1
  6294  00F5  0827               	movf	(eval_poly@x+3)^(0+128),w
  6295  00F6  1283               	bcf	3,5	;RP0=0, select bank0
  6296  00F7  00CC               	movwf	?___flmul+7
  6297  00F8  1683               	bsf	3,5	;RP0=1, select bank1
  6298  00F9  0826               	movf	(eval_poly@x+2)^(0+128),w
  6299  00FA  1283               	bcf	3,5	;RP0=0, select bank0
  6300  00FB  00CB               	movwf	?___flmul+6
  6301  00FC  1683               	bsf	3,5	;RP0=1, select bank1
  6302  00FD  0825               	movf	(eval_poly@x+1)^(0+128),w
  6303  00FE  1283               	bcf	3,5	;RP0=0, select bank0
  6304  00FF  00CA               	movwf	?___flmul+5
  6305  0100  1683               	bsf	3,5	;RP0=1, select bank1
  6306  0101  0824               	movf	eval_poly@x^(0+128),w
  6307  0102  1283               	bcf	3,5	;RP0=0, select bank0
  6308  0103  00C9               	movwf	?___flmul+4
  6309  0104  253E  120A  118A   	fcall	___flmul
  6310  0107  0848               	movf	?___flmul+3,w
  6311  0108  00DF               	movwf	?___fladd+7
  6312  0109  0847               	movf	?___flmul+2,w
  6313  010A  00DE               	movwf	?___fladd+6
  6314  010B  0846               	movf	?___flmul+1,w
  6315  010C  00DD               	movwf	?___fladd+5
  6316  010D  0845               	movf	?___flmul,w
  6317  010E  00DC               	movwf	?___fladd+4
  6318  010F  212A  120A  118A   	fcall	___fladd
  6319  0112  085B               	movf	?___fladd+3,w
  6320  0113  1683               	bsf	3,5	;RP0=1, select bank1
  6321  0114  00B3               	movwf	(eval_poly@res+3)^(0+128)
  6322  0115  1283               	bcf	3,5	;RP0=0, select bank0
  6323  0116  085A               	movf	?___fladd+2,w
  6324  0117  1683               	bsf	3,5	;RP0=1, select bank1
  6325  0118  00B2               	movwf	(eval_poly@res+2)^(0+128)
  6326  0119  1283               	bcf	3,5	;RP0=0, select bank0
  6327  011A  0859               	movf	?___fladd+1,w
  6328  011B  1683               	bsf	3,5	;RP0=1, select bank1
  6329  011C  00B1               	movwf	(eval_poly@res+1)^(0+128)
  6330  011D  1283               	bcf	3,5	;RP0=0, select bank0
  6331  011E  0858               	movf	?___fladd,w
  6332  011F  1683               	bsf	3,5	;RP0=1, select bank1
  6333  0120  28B2               	goto	L4
  6334  0121                     l9155:	
  6335  0121  0833               	movf	(eval_poly@res+3)^(0+128),w
  6336  0122  00A7               	movwf	(?_eval_poly+3)^(0+128)
  6337  0123  0832               	movf	(eval_poly@res+2)^(0+128),w
  6338  0124  00A6               	movwf	(?_eval_poly+2)^(0+128)
  6339  0125  0831               	movf	(eval_poly@res+1)^(0+128),w
  6340  0126  00A5               	movwf	(?_eval_poly+1)^(0+128)
  6341  0127  0830               	movf	eval_poly@res^(0+128),w
  6342  0128  00A4               	movwf	?_eval_poly^(0+128)
  6343  0129  0008               	return
  6344  012A                     __end_of_eval_poly:	
  6345  012A                     __ptext1304:	
  6346 ;; =============== function ___fldiv ends ============
  6347                           
  6348                           
  6349 ;; *************** function ___fladd *****************
  6350 ;; Defined at:
  6351 ;;		line 89 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\fladd.c"
  6352 ;; Parameters:    Size  Location     Type
  6353 ;;  f1              4   56[BANK0 ] unsigned char 
  6354 ;;  f2              4   60[BANK0 ] unsigned char 
  6355 ;; Auto vars:     Size  Location     Type
  6356 ;;  exp1            1   70[BANK0 ] unsigned char 
  6357 ;;  exp2            1   69[BANK0 ] unsigned char 
  6358 ;;  sign            1   68[BANK0 ] unsigned char 
  6359 ;; Return value:  Size  Location     Type
  6360 ;;                  4   56[BANK0 ] unsigned char 
  6361 ;; Registers used:
  6362 ;;		wreg, status,2, status,0, pclath, cstack
  6363 ;; Tracked objects:
  6364 ;;		On entry : 60/0
  6365 ;;		On exit  : 60/0
  6366 ;;		Unchanged: FFF9F/0
  6367 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6368 ;;      Params:         0       8       0       0       0
  6369 ;;      Locals:         0       3       0       0       0
  6370 ;;      Temps:          0       4       0       0       0
  6371 ;;      Totals:         0      15       0       0       0
  6372 ;;Total ram usage:       15 bytes
  6373 ;; Hardware stack levels used:    1
  6374 ;; Hardware stack levels required when called:    2
  6375 ;; This function calls:
  6376 ;;		___flpack
  6377 ;; This function is called by:
  6378 ;;		_floor
  6379 ;;		_log
  6380 ;;		___flsub
  6381 ;;		_eval_poly
  6382 ;; This function uses a non-reentrant model
  6383 ;;
  6384  012A                     ___fladd:	
  6385                           
  6386                           ; Regs used in ___fladd: [wreg+status,2+status,0+pclath+cstack]
  6387  012A  0858               	movf	___fladd@f1,w
  6388  012B  00E0               	movwf	??___fladd
  6389  012C  0859               	movf	___fladd@f1+1,w
  6390  012D  00E1               	movwf	??___fladd+1
  6391  012E  085A               	movf	___fladd@f1+2,w
  6392  012F  00E2               	movwf	??___fladd+2
  6393  0130  085B               	movf	___fladd@f1+3,w
  6394  0131  00E3               	movwf	??___fladd+3
  6395  0132  1003               	clrc
  6396  0133  0D62               	rlf	??___fladd+2,w
  6397  0134  0D63               	rlf	??___fladd+3,w
  6398  0135  00E6               	movwf	___fladd@exp1
  6399  0136  085C               	movf	___fladd@f2,w
  6400  0137  00E0               	movwf	??___fladd
  6401  0138  085D               	movf	___fladd@f2+1,w
  6402  0139  00E1               	movwf	??___fladd+1
  6403  013A  085E               	movf	___fladd@f2+2,w
  6404  013B  00E2               	movwf	??___fladd+2
  6405  013C  085F               	movf	___fladd@f2+3,w
  6406  013D  00E3               	movwf	??___fladd+3
  6407  013E  1003               	clrc
  6408  013F  0D62               	rlf	??___fladd+2,w
  6409  0140  0D63               	rlf	??___fladd+3,w
  6410  0141  00E5               	movwf	___fladd@exp2
  6411  0142  0866               	movf	___fladd@exp1,w
  6412  0143  1903               	btfsc	3,2
  6413  0144  2951               	goto	l8917
  6414  0145  0865               	movf	___fladd@exp2,w
  6415  0146  0266               	subwf	___fladd@exp1,w
  6416  0147  0865               	movf	___fladd@exp2,w
  6417  0148  1803               	skipnc
  6418  0149  295B               	goto	L6
  6419  014A  00E0               	movwf	??___fladd
  6420  014B  0866               	movf	___fladd@exp1,w
  6421  014C  02E0               	subwf	??___fladd,f
  6422  014D  3021               	movlw	33
  6423  014E  0260               	subwf	??___fladd,w
  6424  014F  1C03               	skipc
  6425  0150  295A               	goto	l8921
  6426  0151                     l8917:	
  6427  0151  085F               	movf	___fladd@f2+3,w
  6428  0152  00DB               	movwf	?___fladd+3
  6429  0153  085E               	movf	___fladd@f2+2,w
  6430  0154  00DA               	movwf	?___fladd+2
  6431  0155  085D               	movf	___fladd@f2+1,w
  6432  0156  00D9               	movwf	?___fladd+1
  6433  0157  085C               	movf	___fladd@f2,w
  6434  0158  00D8               	movwf	?___fladd
  6435  0159  0008               	return
  6436  015A                     l8921:	
  6437  015A  0865               	movf	___fladd@exp2,w
  6438  015B                     L6:	
  6439  015B  1903               	btfsc	3,2
  6440  015C  0008               	return
  6441  015D  0866               	movf	___fladd@exp1,w
  6442  015E  0265               	subwf	___fladd@exp2,w
  6443  015F  1803               	skipnc
  6444  0160  2969               	goto	l8927
  6445  0161  0866               	movf	___fladd@exp1,w
  6446  0162  00E0               	movwf	??___fladd
  6447  0163  0865               	movf	___fladd@exp2,w
  6448  0164  02E0               	subwf	??___fladd,f
  6449  0165  3021               	movlw	33
  6450  0166  0260               	subwf	??___fladd,w
  6451  0167  1803               	btfsc	3,0
  6452  0168  0008               	return
  6453  0169                     l8927:	
  6454  0169  3006               	movlw	6
  6455  016A  00E4               	movwf	___fladd@sign
  6456  016B  1BDB               	btfsc	___fladd@f1+3,7
  6457  016C  17E4               	bsf	___fladd@sign,7
  6458  016D  1BDF               	btfsc	___fladd@f2+3,7
  6459  016E  1764               	bsf	___fladd@sign,6
  6460  016F  17DA               	bsf	___fladd@f1+2,7
  6461  0170  01DB               	clrf	___fladd@f1+3
  6462  0171  17DE               	bsf	___fladd@f2+2,7
  6463  0172  01DF               	clrf	___fladd@f2+3
  6464  0173  0865               	movf	___fladd@exp2,w
  6465  0174  0266               	subwf	___fladd@exp1,w
  6466  0175  1803               	skipnc
  6467  0176  2992               	goto	l8949
  6468  0177                     l8939:	
  6469  0177  1003               	clrc
  6470  0178  0DDC               	rlf	___fladd@f2,f
  6471  0179  0DDD               	rlf	___fladd@f2+1,f
  6472  017A  0DDE               	rlf	___fladd@f2+2,f
  6473  017B  0DDF               	rlf	___fladd@f2+3,f
  6474  017C  03E5               	decf	___fladd@exp2,f
  6475  017D  0865               	movf	___fladd@exp2,w
  6476  017E  0666               	xorwf	___fladd@exp1,w
  6477  017F  1903               	skipnz
  6478  0180  298D               	goto	l8947
  6479  0181  03E4               	decf	___fladd@sign,f
  6480  0182  0864               	movf	___fladd@sign,w
  6481  0183  3907               	andlw	7
  6482  0184  1903               	btfsc	3,2
  6483  0185  298D               	goto	l8947
  6484  0186  2977               	goto	l8939
  6485  0187                     l8945:	
  6486  0187  1003               	clrc
  6487  0188  0CDB               	rrf	___fladd@f1+3,f
  6488  0189  0CDA               	rrf	___fladd@f1+2,f
  6489  018A  0CD9               	rrf	___fladd@f1+1,f
  6490  018B  0CD8               	rrf	___fladd@f1,f
  6491  018C  0AE6               	incf	___fladd@exp1,f
  6492  018D                     l8947:	
  6493  018D  0866               	movf	___fladd@exp1,w
  6494  018E  0665               	xorwf	___fladd@exp2,w
  6495  018F  1903               	btfsc	3,2
  6496  0190  29B0               	goto	l4191
  6497  0191  2987               	goto	l8945
  6498  0192                     l8949:	
  6499  0192  0866               	movf	___fladd@exp1,w
  6500  0193  0265               	subwf	___fladd@exp2,w
  6501  0194  1803               	skipnc
  6502  0195  29B0               	goto	l4191
  6503  0196                     l8951:	
  6504  0196  1003               	clrc
  6505  0197  0DD8               	rlf	___fladd@f1,f
  6506  0198  0DD9               	rlf	___fladd@f1+1,f
  6507  0199  0DDA               	rlf	___fladd@f1+2,f
  6508  019A  0DDB               	rlf	___fladd@f1+3,f
  6509  019B  03E6               	decf	___fladd@exp1,f
  6510  019C  0865               	movf	___fladd@exp2,w
  6511  019D  0666               	xorwf	___fladd@exp1,w
  6512  019E  1903               	skipnz
  6513  019F  29AC               	goto	l8959
  6514  01A0  03E4               	decf	___fladd@sign,f
  6515  01A1  0864               	movf	___fladd@sign,w
  6516  01A2  3907               	andlw	7
  6517  01A3  1903               	btfsc	3,2
  6518  01A4  29AC               	goto	l8959
  6519  01A5  2996               	goto	l8951
  6520  01A6                     l8957:	
  6521  01A6  1003               	clrc
  6522  01A7  0CDF               	rrf	___fladd@f2+3,f
  6523  01A8  0CDE               	rrf	___fladd@f2+2,f
  6524  01A9  0CDD               	rrf	___fladd@f2+1,f
  6525  01AA  0CDC               	rrf	___fladd@f2,f
  6526  01AB  0AE5               	incf	___fladd@exp2,f
  6527  01AC                     l8959:	
  6528  01AC  0866               	movf	___fladd@exp1,w
  6529  01AD  0665               	xorwf	___fladd@exp2,w
  6530  01AE  1D03               	skipz
  6531  01AF  29A6               	goto	l8957
  6532  01B0                     l4191:	
  6533  01B0  1FE4               	btfss	___fladd@sign,7
  6534  01B1  29BE               	goto	l8965
  6535  01B2  30FF               	movlw	255
  6536  01B3  06D8               	xorwf	___fladd@f1,f
  6537  01B4  06D9               	xorwf	___fladd@f1+1,f
  6538  01B5  06DA               	xorwf	___fladd@f1+2,f
  6539  01B6  06DB               	xorwf	___fladd@f1+3,f
  6540  01B7  0AD8               	incf	___fladd@f1,f
  6541  01B8  1903               	skipnz
  6542  01B9  0AD9               	incf	___fladd@f1+1,f
  6543  01BA  1903               	skipnz
  6544  01BB  0ADA               	incf	___fladd@f1+2,f
  6545  01BC  1903               	skipnz
  6546  01BD  0ADB               	incf	___fladd@f1+3,f
  6547  01BE                     l8965:	
  6548  01BE  1F64               	btfss	___fladd@sign,6
  6549  01BF  29CC               	goto	l8971
  6550  01C0  30FF               	movlw	255
  6551  01C1  06DC               	xorwf	___fladd@f2,f
  6552  01C2  06DD               	xorwf	___fladd@f2+1,f
  6553  01C3  06DE               	xorwf	___fladd@f2+2,f
  6554  01C4  06DF               	xorwf	___fladd@f2+3,f
  6555  01C5  0ADC               	incf	___fladd@f2,f
  6556  01C6  1903               	skipnz
  6557  01C7  0ADD               	incf	___fladd@f2+1,f
  6558  01C8  1903               	skipnz
  6559  01C9  0ADE               	incf	___fladd@f2+2,f
  6560  01CA  1903               	skipnz
  6561  01CB  0ADF               	incf	___fladd@f2+3,f
  6562  01CC                     l8971:	
  6563  01CC  01E4               	clrf	___fladd@sign
  6564  01CD  0858               	movf	___fladd@f1,w
  6565  01CE  07DC               	addwf	___fladd@f2,f
  6566  01CF  0859               	movf	___fladd@f1+1,w
  6567  01D0  1103               	clrz
  6568  01D1  1803               	skipnc
  6569  01D2  3E01               	addlw	1
  6570  01D3  1D03               	btfss	3,2
  6571  01D4  07DD               	addwf	___fladd@f2+1,f
  6572  01D5  085A               	movf	___fladd@f1+2,w
  6573  01D6  1103               	clrz
  6574  01D7  1803               	skipnc
  6575  01D8  3E01               	addlw	1
  6576  01D9  1D03               	btfss	3,2
  6577  01DA  07DE               	addwf	___fladd@f2+2,f
  6578  01DB  085B               	movf	___fladd@f1+3,w
  6579  01DC  1103               	clrz
  6580  01DD  1803               	skipnc
  6581  01DE  3E01               	addlw	1
  6582  01DF  1D03               	btfss	3,2
  6583  01E0  07DF               	addwf	___fladd@f2+3,f
  6584  01E1  1FDF               	btfss	___fladd@f2+3,7
  6585  01E2  29F1               	goto	l8983
  6586  01E3  30FF               	movlw	255
  6587  01E4  06DC               	xorwf	___fladd@f2,f
  6588  01E5  06DD               	xorwf	___fladd@f2+1,f
  6589  01E6  06DE               	xorwf	___fladd@f2+2,f
  6590  01E7  06DF               	xorwf	___fladd@f2+3,f
  6591  01E8  0ADC               	incf	___fladd@f2,f
  6592  01E9  1903               	skipnz
  6593  01EA  0ADD               	incf	___fladd@f2+1,f
  6594  01EB  1903               	skipnz
  6595  01EC  0ADE               	incf	___fladd@f2+2,f
  6596  01ED  1903               	skipnz
  6597  01EE  0ADF               	incf	___fladd@f2+3,f
  6598  01EF  01E4               	clrf	___fladd@sign
  6599  01F0  0AE4               	incf	___fladd@sign,f
  6600  01F1                     l8983:	
  6601  01F1  085F               	movf	___fladd@f2+3,w
  6602  01F2  00A3               	movwf	?___flpack+3
  6603  01F3  085E               	movf	___fladd@f2+2,w
  6604  01F4  00A2               	movwf	?___flpack+2
  6605  01F5  085D               	movf	___fladd@f2+1,w
  6606  01F6  00A1               	movwf	?___flpack+1
  6607  01F7  085C               	movf	___fladd@f2,w
  6608  01F8  00A0               	movwf	?___flpack
  6609  01F9  0866               	movf	___fladd@exp1,w
  6610  01FA  00A4               	movwf	?___flpack+4
  6611  01FB  0864               	movf	___fladd@sign,w
  6612  01FC  00A5               	movwf	?___flpack+5
  6613  01FD  120A  158A  27A5   	fcall	___flpack
  6614  0200  0823               	movf	?___flpack+3,w
  6615  0201  00DB               	movwf	?___fladd+3
  6616  0202  0822               	movf	?___flpack+2,w
  6617  0203  00DA               	movwf	?___fladd+2
  6618  0204  0821               	movf	?___flpack+1,w
  6619  0205  00D9               	movwf	?___fladd+1
  6620  0206  0820               	movf	?___flpack,w
  6621  0207  00D8               	movwf	?___fladd
  6622  0208  0008               	return
  6623  0209                     __end_of___fladd:	
  6624  0209                     __ptext1285:	
  6625 ;; =============== function _format_double ends ============
  6626                           
  6627                           
  6628 ;; *************** function _measure_inductance *****************
  6629 ;; Defined at:
  6630 ;;		line 210 in file "../../../src/measure.c"
  6631 ;; Parameters:    Size  Location     Type
  6632 ;;		None
  6633 ;; Auto vars:     Size  Location     Type
  6634 ;;  Lin             4   35[BANK1 ] short 
  6635 ;;  denominator     4    4[BANK1 ] short 
  6636 ;;  numerator       4    0[BANK1 ] short 
  6637 ;;  var             2   33[BANK1 ] unsigned int 
  6638 ;;  unit            1   24[BANK1 ] unsigned char 
  6639 ;; Return value:  Size  Location     Type
  6640 ;;		None               void
  6641 ;; Registers used:
  6642 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  6643 ;; Tracked objects:
  6644 ;;		On entry : 60/20
  6645 ;;		On exit  : 60/20
  6646 ;;		Unchanged: 0/0
  6647 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6648 ;;      Params:         0       0       0       0       0
  6649 ;;      Locals:         0       0      39       0       0
  6650 ;;      Temps:          0       0       0       0       0
  6651 ;;      Totals:         0       0      39       0       0
  6652 ;;Total ram usage:       39 bytes
  6653 ;; Hardware stack levels used:    1
  6654 ;; Hardware stack levels required when called:    5
  6655 ;; This function calls:
  6656 ;;		_measure_freq
  6657 ;;		___lwtofl
  6658 ;;		___flge
  6659 ;;		___flsub
  6660 ;;		___flmul
  6661 ;;		___fldiv
  6662 ;;		___fltol
  6663 ;;		_print_reading
  6664 ;;		_print_unit
  6665 ;; This function is called by:
  6666 ;;		_main
  6667 ;; This function uses a non-reentrant model
  6668 ;;
  6669  0209                     _measure_inductance:	
  6670                           
  6671                           ;measure.c: 211: uint8_t unit;
  6672                           ;measure.c: 212: uint16_t var;
  6673                           ;measure.c: 214: double Lin, numerator, denominator;
  6674                           ;measure.c: 220: var = measure_freq();
  6675                           
  6676                           ; Regs used in _measure_inductance: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  6677  0209  261F  120A  118A   	fcall	_measure_freq
  6678  020C  0853               	movf	?_measure_freq+1,w
  6679  020D  1683               	bsf	3,5	;RP0=1, select bank1
  6680  020E  00C2               	movwf	(measure_inductance@var+1)^(0+128)
  6681  020F  1283               	bcf	3,5	;RP0=0, select bank0
  6682  0210  0852               	movf	?_measure_freq,w
  6683  0211  1683               	bsf	3,5	;RP0=1, select bank1
  6684  0212  00C1               	movwf	measure_inductance@var^(0+128)
  6685                           
  6686                           ;measure.c: 222: F3 = (double)var;
  6687  0213  0842               	movf	(measure_inductance@var+1)^(0+128),w
  6688  0214  1283               	bcf	3,5	;RP0=0, select bank0
  6689  0215  00CE               	movwf	?___lwtofl+1
  6690  0216  1683               	bsf	3,5	;RP0=1, select bank1
  6691  0217  0841               	movf	measure_inductance@var^(0+128),w
  6692  0218  1283               	bcf	3,5	;RP0=0, select bank0
  6693  0219  00CD               	movwf	?___lwtofl
  6694  021A  260A  120A  118A   	fcall	___lwtofl
  6695  021D  0850               	movf	?___lwtofl+3,w
  6696  021E  278B               	call	PL23	;select bank 3
  6697  021F  00B7               	movwf	(_F3+3)^(0+384)
  6698  0220  278E               	call	PL24	;select bank 0
  6699  0221  084F               	movf	?___lwtofl+2,w
  6700  0222  278B               	call	PL23	;select bank 3
  6701  0223  00B6               	movwf	(_F3+2)^(0+384)
  6702  0224  278E               	call	PL24	;select bank 0
  6703  0225  084E               	movf	?___lwtofl+1,w
  6704  0226  278B               	call	PL23	;select bank 3
  6705  0227  00B5               	movwf	(_F3+1)^(0+384)
  6706  0228  278E               	call	PL24	;select bank 0
  6707  0229  084D               	movf	?___lwtofl,w
  6708  022A  278B               	call	PL23	;select bank 3
  6709  022B  00B4               	movwf	_F3^(0+384)
  6710                           
  6711                           ;measure.c: 223: if(F3 > F1)
  6712  022C  0850               	movf	(_F1+3)^(0+384),w
  6713  022D  278E               	call	PL24	;select bank 0
  6714  022E  00A3               	movwf	?___flge+3
  6715  022F  278B               	call	PL23	;select bank 3
  6716  0230  084F               	movf	(_F1+2)^(0+384),w
  6717  0231  278E               	call	PL24	;select bank 0
  6718  0232  00A2               	movwf	?___flge+2
  6719  0233  278B               	call	PL23	;select bank 3
  6720  0234  084E               	movf	(_F1+1)^(0+384),w
  6721  0235  278E               	call	PL24	;select bank 0
  6722  0236  00A1               	movwf	?___flge+1
  6723  0237  278B               	call	PL23	;select bank 3
  6724  0238  084D               	movf	_F1^(0+384),w
  6725  0239  278E               	call	PL24	;select bank 0
  6726  023A  00A0               	movwf	?___flge
  6727  023B  278B               	call	PL23	;select bank 3
  6728  023C  0837               	movf	(_F3+3)^(0+384),w
  6729  023D  278E               	call	PL24	;select bank 0
  6730  023E  00A7               	movwf	?___flge+7
  6731  023F  278B               	call	PL23	;select bank 3
  6732  0240  0836               	movf	(_F3+2)^(0+384),w
  6733  0241  278E               	call	PL24	;select bank 0
  6734  0242  00A6               	movwf	?___flge+6
  6735  0243  278B               	call	PL23	;select bank 3
  6736  0244  0835               	movf	(_F3+1)^(0+384),w
  6737  0245  278E               	call	PL24	;select bank 0
  6738  0246  00A5               	movwf	?___flge+5
  6739  0247  278B               	call	PL23	;select bank 3
  6740  0248  0834               	movf	_F3^(0+384),w
  6741  0249  278E               	call	PL24	;select bank 0
  6742  024A  00A4               	movwf	?___flge+4
  6743  024B  25BE  120A  118A   	fcall	___flge
  6744  024E  1803               	btfsc	3,0
  6745  024F  2A59               	goto	l9335
  6746  0250  278B               	call	PL23	;select bank 3
  6747                           
  6748                           ;measure.c: 224: F3 = F1;
  6749  0251  0850               	movf	(_F1+3)^(0+384),w
  6750  0252  00B7               	movwf	(_F3+3)^(0+384)
  6751  0253  084F               	movf	(_F1+2)^(0+384),w
  6752  0254  00B6               	movwf	(_F3+2)^(0+384)
  6753  0255  084E               	movf	(_F1+1)^(0+384),w
  6754  0256  00B5               	movwf	(_F3+1)^(0+384)
  6755  0257  084D               	movf	_F1^(0+384),w
  6756  0258  00B4               	movwf	_F3^(0+384)
  6757  0259                     l9335:	
  6758  0259  278B               	call	PL23	;select bank 3
  6759                           
  6760                           ;measure.c: 225: numerator = ((F1 * F1) - (F3 * F3)) * ((F1 * F1) - (F2 - F2)) * (100 * 
      +                          100);
  6761  025A  0837               	movf	(_F3+3)^(0+384),w
  6762  025B  278E               	call	PL24	;select bank 0
  6763  025C  00C8               	movwf	?___flmul+3
  6764  025D  278B               	call	PL23	;select bank 3
  6765  025E  0836               	movf	(_F3+2)^(0+384),w
  6766  025F  278E               	call	PL24	;select bank 0
  6767  0260  00C7               	movwf	?___flmul+2
  6768  0261  278B               	call	PL23	;select bank 3
  6769  0262  0835               	movf	(_F3+1)^(0+384),w
  6770  0263  278E               	call	PL24	;select bank 0
  6771  0264  00C6               	movwf	?___flmul+1
  6772  0265  278B               	call	PL23	;select bank 3
  6773  0266  0834               	movf	_F3^(0+384),w
  6774  0267  278E               	call	PL24	;select bank 0
  6775  0268  00C5               	movwf	?___flmul
  6776  0269  278B               	call	PL23	;select bank 3
  6777  026A  0837               	movf	(_F3+3)^(0+384),w
  6778  026B  278E               	call	PL24	;select bank 0
  6779  026C  00CC               	movwf	?___flmul+7
  6780  026D  278B               	call	PL23	;select bank 3
  6781  026E  0836               	movf	(_F3+2)^(0+384),w
  6782  026F  278E               	call	PL24	;select bank 0
  6783  0270  00CB               	movwf	?___flmul+6
  6784  0271  278B               	call	PL23	;select bank 3
  6785  0272  0835               	movf	(_F3+1)^(0+384),w
  6786  0273  278E               	call	PL24	;select bank 0
  6787  0274  00CA               	movwf	?___flmul+5
  6788  0275  278B               	call	PL23	;select bank 3
  6789  0276  0834               	movf	_F3^(0+384),w
  6790  0277  278E               	call	PL24	;select bank 0
  6791  0278  00C9               	movwf	?___flmul+4
  6792  0279  253E  120A  118A   	fcall	___flmul
  6793  027C  0848               	movf	?___flmul+3,w
  6794  027D  00EA               	movwf	?___flsub+3
  6795  027E  0847               	movf	?___flmul+2,w
  6796  027F  00E9               	movwf	?___flsub+2
  6797  0280  0846               	movf	?___flmul+1,w
  6798  0281  00E8               	movwf	?___flsub+1
  6799  0282  0845               	movf	?___flmul,w
  6800  0283  00E7               	movwf	?___flsub
  6801  0284  278B               	call	PL23	;select bank 3
  6802  0285  0850               	movf	(_F1+3)^(0+384),w
  6803  0286  278E               	call	PL24	;select bank 0
  6804  0287  00C8               	movwf	?___flmul+3
  6805  0288  278B               	call	PL23	;select bank 3
  6806  0289  084F               	movf	(_F1+2)^(0+384),w
  6807  028A  278E               	call	PL24	;select bank 0
  6808  028B  00C7               	movwf	?___flmul+2
  6809  028C  278B               	call	PL23	;select bank 3
  6810  028D  084E               	movf	(_F1+1)^(0+384),w
  6811  028E  278E               	call	PL24	;select bank 0
  6812  028F  00C6               	movwf	?___flmul+1
  6813  0290  278B               	call	PL23	;select bank 3
  6814  0291  084D               	movf	_F1^(0+384),w
  6815  0292  278E               	call	PL24	;select bank 0
  6816  0293  00C5               	movwf	?___flmul
  6817  0294  278B               	call	PL23	;select bank 3
  6818  0295  0850               	movf	(_F1+3)^(0+384),w
  6819  0296  278E               	call	PL24	;select bank 0
  6820  0297  00CC               	movwf	?___flmul+7
  6821  0298  278B               	call	PL23	;select bank 3
  6822  0299  084F               	movf	(_F1+2)^(0+384),w
  6823  029A  278E               	call	PL24	;select bank 0
  6824  029B  00CB               	movwf	?___flmul+6
  6825  029C  278B               	call	PL23	;select bank 3
  6826  029D  084E               	movf	(_F1+1)^(0+384),w
  6827  029E  278E               	call	PL24	;select bank 0
  6828  029F  00CA               	movwf	?___flmul+5
  6829  02A0  2767  120A  118A   	fcall	PL15	;call to abstracted procedure
  6830  02A3  253E  120A  118A   	fcall	___flmul
  6831  02A6  275E               	fcall	PL12	;call to abstracted procedure
  6832  02A7  120A  158A  26DC   	fcall	___flsub
      +       120A  118A         
  6833  02AC  086A               	movf	?___flsub+3,w
  6834  02AD  1683               	bsf	3,5	;RP0=1, select bank1
  6835  02AE  00BC               	movwf	(_measure_inductance$5382+3)^(0+128)
  6836  02AF  1283               	bcf	3,5	;RP0=0, select bank0
  6837  02B0  0869               	movf	?___flsub+2,w
  6838  02B1  1683               	bsf	3,5	;RP0=1, select bank1
  6839  02B2  00BB               	movwf	(_measure_inductance$5382+2)^(0+128)
  6840  02B3  1283               	bcf	3,5	;RP0=0, select bank0
  6841  02B4  0868               	movf	?___flsub+1,w
  6842  02B5  1683               	bsf	3,5	;RP0=1, select bank1
  6843  02B6  00BA               	movwf	(_measure_inductance$5382+1)^(0+128)
  6844  02B7  1283               	bcf	3,5	;RP0=0, select bank0
  6845  02B8  0867               	movf	?___flsub,w
  6846                           
  6847                           ;measure.c: 225: numerator = ((F1 * F1) - (F3 * F3)) * ((F1 * F1) - (F2 - F2)) * (100 * 
      +                          100);
  6848  02B9  2784  120A  118A   	fcall	PL19	;call to abstracted procedure
  6849  02BC  00EA               	movwf	?___flsub+3
  6850  02BD  278B               	call	PL23	;select bank 3
  6851  02BE  0832               	movf	(_F2+2)^(0+384),w
  6852  02BF  278E               	call	PL24	;select bank 0
  6853  02C0  00E9               	movwf	?___flsub+2
  6854  02C1  278B               	call	PL23	;select bank 3
  6855  02C2  0831               	movf	(_F2+1)^(0+384),w
  6856  02C3  278E               	call	PL24	;select bank 0
  6857  02C4  00E8               	movwf	?___flsub+1
  6858  02C5  278B               	call	PL23	;select bank 3
  6859  02C6  0830               	movf	_F2^(0+384),w
  6860  02C7  278E               	call	PL24	;select bank 0
  6861  02C8  00E7               	movwf	?___flsub
  6862  02C9  278B               	call	PL23	;select bank 3
  6863  02CA  0833               	movf	(_F2+3)^(0+384),w
  6864  02CB  278E               	call	PL24	;select bank 0
  6865  02CC  00EE               	movwf	?___flsub+7
  6866  02CD  278B               	call	PL23	;select bank 3
  6867  02CE  0832               	movf	(_F2+2)^(0+384),w
  6868  02CF  278E               	call	PL24	;select bank 0
  6869  02D0  00ED               	movwf	?___flsub+6
  6870  02D1  278B               	call	PL23	;select bank 3
  6871  02D2  0831               	movf	(_F2+1)^(0+384),w
  6872  02D3  278E               	call	PL24	;select bank 0
  6873  02D4  00EC               	movwf	?___flsub+5
  6874  02D5  278B               	call	PL23	;select bank 3
  6875  02D6  0830               	movf	_F2^(0+384),w
  6876  02D7  278E               	call	PL24	;select bank 0
  6877  02D8  00EB               	movwf	?___flsub+4
  6878  02D9  120A  158A  26DC   	fcall	___flsub
      +       120A  118A         
  6879  02DE  278B               	call	PL23	;select bank 3
  6880  02DF  0850               	movf	(_F1+3)^(0+384),w
  6881  02E0  278E               	call	PL24	;select bank 0
  6882  02E1  00C8               	movwf	?___flmul+3
  6883  02E2  278B               	call	PL23	;select bank 3
  6884  02E3  084F               	movf	(_F1+2)^(0+384),w
  6885  02E4  278E               	call	PL24	;select bank 0
  6886  02E5  00C7               	movwf	?___flmul+2
  6887  02E6  278B               	call	PL23	;select bank 3
  6888  02E7  084E               	movf	(_F1+1)^(0+384),w
  6889  02E8  278E               	call	PL24	;select bank 0
  6890  02E9  00C6               	movwf	?___flmul+1
  6891  02EA  278B               	call	PL23	;select bank 3
  6892  02EB  084D               	movf	_F1^(0+384),w
  6893  02EC  278E               	call	PL24	;select bank 0
  6894  02ED  00C5               	movwf	?___flmul
  6895  02EE  278B               	call	PL23	;select bank 3
  6896  02EF  0850               	movf	(_F1+3)^(0+384),w
  6897  02F0  278E               	call	PL24	;select bank 0
  6898  02F1  00CC               	movwf	?___flmul+7
  6899  02F2  278B               	call	PL23	;select bank 3
  6900  02F3  084F               	movf	(_F1+2)^(0+384),w
  6901  02F4  278E               	call	PL24	;select bank 0
  6902  02F5  00CB               	movwf	?___flmul+6
  6903  02F6  278B               	call	PL23	;select bank 3
  6904  02F7  084E               	movf	(_F1+1)^(0+384),w
  6905  02F8  278E               	call	PL24	;select bank 0
  6906  02F9  00CA               	movwf	?___flmul+5
  6907  02FA  2767  120A  118A   	fcall	PL15	;call to abstracted procedure
  6908  02FD  253E  120A  118A   	fcall	___flmul
  6909  0300  275E               	fcall	PL12	;call to abstracted procedure
  6910  0301  120A  158A  26DC   	fcall	___flsub
      +       120A  118A         
  6911  0306  086A               	movf	?___flsub+3,w
  6912  0307  00C8               	movwf	?___flmul+3
  6913  0308  0869               	movf	?___flsub+2,w
  6914  0309  00C7               	movwf	?___flmul+2
  6915  030A  0868               	movf	?___flsub+1,w
  6916  030B  00C6               	movwf	?___flmul+1
  6917  030C  0867               	movf	?___flsub,w
  6918  030D  270B  120A  118A   	fcall	PL7	;call to abstracted procedure
  6919  0310  253E  120A  118A   	fcall	___flmul
  6920  0313  273E  120A  118A   	fcall	PL10	;call to abstracted procedure
  6921                           
  6922                           ;measure.c: 225: numerator = ((F1 * F1) - (F3 * F3)) * ((F1 * F1) - (F2 - F2)) * (100 * 
      +                          100);
  6923  0316  3046               	movlw	70
  6924  0317  1283               	bcf	3,5	;RP0=0, select bank0
  6925  0318  00C8               	movwf	?___flmul+3
  6926  0319  301C               	movlw	28
  6927  031A  00C7               	movwf	?___flmul+2
  6928  031B  3040               	movlw	64
  6929  031C  00C6               	movwf	?___flmul+1
  6930  031D  01C5               	clrf	?___flmul
  6931  031E  271D  120A  118A   	fcall	PL8	;call to abstracted procedure
  6932  0321  253E  120A  118A   	fcall	___flmul
  6933  0324  0848               	movf	?___flmul+3,w
  6934  0325  1683               	bsf	3,5	;RP0=1, select bank1
  6935  0326  00A3               	movwf	(measure_inductance@numerator+3)^(0+128)
  6936  0327  1283               	bcf	3,5	;RP0=0, select bank0
  6937  0328  0847               	movf	?___flmul+2,w
  6938  0329  1683               	bsf	3,5	;RP0=1, select bank1
  6939  032A  00A2               	movwf	(measure_inductance@numerator+2)^(0+128)
  6940  032B  1283               	bcf	3,5	;RP0=0, select bank0
  6941  032C  0846               	movf	?___flmul+1,w
  6942  032D  1683               	bsf	3,5	;RP0=1, select bank1
  6943  032E  00A1               	movwf	(measure_inductance@numerator+1)^(0+128)
  6944  032F  1283               	bcf	3,5	;RP0=0, select bank0
  6945  0330  0845               	movf	?___flmul,w
  6946  0331  1683               	bsf	3,5	;RP0=1, select bank1
  6947  0332  00A0               	movwf	measure_inductance@numerator^(0+128)
  6948                           
  6949                           ;measure.c: 226: denominator = 4 * 3.14159265358979323846l * 3.14159265358979323846l * F
      +                          1 * F1 * F2 * F2 * F3 * F3 * CCal;
  6950  0333  1703               	bsf	3,6	;RP1=1, select bank3
  6951  0334  0850               	movf	(_F1+3)^(0+384),w
  6952  0335  278E               	call	PL24	;select bank 0
  6953  0336  00C8               	movwf	?___flmul+3
  6954  0337  278B               	call	PL23	;select bank 3
  6955  0338  084F               	movf	(_F1+2)^(0+384),w
  6956  0339  278E               	call	PL24	;select bank 0
  6957  033A  00C7               	movwf	?___flmul+2
  6958  033B  278B               	call	PL23	;select bank 3
  6959  033C  084E               	movf	(_F1+1)^(0+384),w
  6960  033D  278E               	call	PL24	;select bank 0
  6961  033E  00C6               	movwf	?___flmul+1
  6962  033F  278B               	call	PL23	;select bank 3
  6963  0340  084D               	movf	_F1^(0+384),w
  6964  0341  278E               	call	PL24	;select bank 0
  6965  0342  00C5               	movwf	?___flmul
  6966  0343  278B               	call	PL23	;select bank 3
  6967  0344  0850               	movf	(_F1+3)^(0+384),w
  6968  0345  278E               	call	PL24	;select bank 0
  6969  0346  00CC               	movwf	?___flmul+7
  6970  0347  278B               	call	PL23	;select bank 3
  6971  0348  084F               	movf	(_F1+2)^(0+384),w
  6972  0349  278E               	call	PL24	;select bank 0
  6973  034A  00CB               	movwf	?___flmul+6
  6974  034B  278B               	call	PL23	;select bank 3
  6975  034C  084E               	movf	(_F1+1)^(0+384),w
  6976  034D  278E               	call	PL24	;select bank 0
  6977  034E  00CA               	movwf	?___flmul+5
  6978  034F  2767  120A  118A   	fcall	PL15	;call to abstracted procedure
  6979  0352  253E  120A  118A   	fcall	___flmul
  6980  0355  0848               	movf	?___flmul+3,w
  6981  0356  1683               	bsf	3,5	;RP0=1, select bank1
  6982  0357  00BC               	movwf	(_measure_inductance$5382+3)^(0+128)
  6983  0358  1283               	bcf	3,5	;RP0=0, select bank0
  6984  0359  0847               	movf	?___flmul+2,w
  6985  035A  1683               	bsf	3,5	;RP0=1, select bank1
  6986  035B  00BB               	movwf	(_measure_inductance$5382+2)^(0+128)
  6987  035C  1283               	bcf	3,5	;RP0=0, select bank0
  6988  035D  0846               	movf	?___flmul+1,w
  6989  035E  1683               	bsf	3,5	;RP0=1, select bank1
  6990  035F  00BA               	movwf	(_measure_inductance$5382+1)^(0+128)
  6991  0360  1283               	bcf	3,5	;RP0=0, select bank0
  6992  0361  0845               	movf	?___flmul,w
  6993                           
  6994                           ;measure.c: 226: denominator = 4 * 3.14159265358979323846l * 3.14159265358979323846l * F
      +                          1 * F1 * F2 * F2 * F3 * F3 * CCal;
  6995  0362  2784  120A  118A   	fcall	PL19	;call to abstracted procedure
  6996  0365  00C8               	movwf	?___flmul+3
  6997  0366  278B               	call	PL23	;select bank 3
  6998  0367  0832               	movf	(_F2+2)^(0+384),w
  6999  0368  278E               	call	PL24	;select bank 0
  7000  0369  00C7               	movwf	?___flmul+2
  7001  036A  278B               	call	PL23	;select bank 3
  7002  036B  0831               	movf	(_F2+1)^(0+384),w
  7003  036C  278E               	call	PL24	;select bank 0
  7004  036D  00C6               	movwf	?___flmul+1
  7005  036E  277E  120A  118A   	fcall	PL18	;call to abstracted procedure
  7006  0371  270B  120A  118A   	fcall	PL7	;call to abstracted procedure
  7007  0374  253E  120A  118A   	fcall	___flmul
  7008  0377  273E  120A  118A   	fcall	PL10	;call to abstracted procedure
  7009                           
  7010                           ;measure.c: 226: denominator = 4 * 3.14159265358979323846l * 3.14159265358979323846l * F
      +                          1 * F1 * F2 * F2 * F3 * F3 * CCal;
  7011  037A  1703               	bsf	3,6	;RP1=1, select bank3
  7012  037B  0833               	movf	(_F2+3)^(0+384),w
  7013  037C  278E               	call	PL24	;select bank 0
  7014  037D  00C8               	movwf	?___flmul+3
  7015  037E  278B               	call	PL23	;select bank 3
  7016  037F  0832               	movf	(_F2+2)^(0+384),w
  7017  0380  278E               	call	PL24	;select bank 0
  7018  0381  00C7               	movwf	?___flmul+2
  7019  0382  278B               	call	PL23	;select bank 3
  7020  0383  0831               	movf	(_F2+1)^(0+384),w
  7021  0384  278E               	call	PL24	;select bank 0
  7022  0385  00C6               	movwf	?___flmul+1
  7023  0386  277E  120A  118A   	fcall	PL18	;call to abstracted procedure
  7024  0389  00C5               	movwf	?___flmul
  7025  038A  271D  120A  118A   	fcall	PL8	;call to abstracted procedure
  7026  038D  253E  120A  118A   	fcall	___flmul
  7027  0390  0848               	movf	?___flmul+3,w
  7028  0391  1683               	bsf	3,5	;RP0=1, select bank1
  7029  0392  00AB               	movwf	(_measure_inductance$5384+3)^(0+128)
  7030  0393  1283               	bcf	3,5	;RP0=0, select bank0
  7031  0394  0847               	movf	?___flmul+2,w
  7032  0395  1683               	bsf	3,5	;RP0=1, select bank1
  7033  0396  00AA               	movwf	(_measure_inductance$5384+2)^(0+128)
  7034  0397  1283               	bcf	3,5	;RP0=0, select bank0
  7035  0398  0846               	movf	?___flmul+1,w
  7036  0399  1683               	bsf	3,5	;RP0=1, select bank1
  7037  039A  00A9               	movwf	(_measure_inductance$5384+1)^(0+128)
  7038  039B  1283               	bcf	3,5	;RP0=0, select bank0
  7039  039C  0845               	movf	?___flmul,w
  7040  039D  1683               	bsf	3,5	;RP0=1, select bank1
  7041  039E  00A8               	movwf	_measure_inductance$5384^(0+128)
  7042                           
  7043                           ;measure.c: 226: denominator = 4 * 3.14159265358979323846l * 3.14159265358979323846l * F
      +                          1 * F1 * F2 * F2 * F3 * F3 * CCal;
  7044  039F  1703               	bsf	3,6	;RP1=1, select bank3
  7045  03A0  0837               	movf	(_F3+3)^(0+384),w
  7046  03A1  278E               	call	PL24	;select bank 0
  7047  03A2  00C8               	movwf	?___flmul+3
  7048  03A3  278B               	call	PL23	;select bank 3
  7049  03A4  0836               	movf	(_F3+2)^(0+384),w
  7050  03A5  278E               	call	PL24	;select bank 0
  7051  03A6  00C7               	movwf	?___flmul+2
  7052  03A7  278B               	call	PL23	;select bank 3
  7053  03A8  0835               	movf	(_F3+1)^(0+384),w
  7054  03A9  278E               	call	PL24	;select bank 0
  7055  03AA  00C6               	movwf	?___flmul+1
  7056  03AB  276E  120A  118A   	fcall	PL16	;call to abstracted procedure
  7057  03AE  082B               	movf	(_measure_inductance$5384+3)^(0+128),w
  7058  03AF  1283               	bcf	3,5	;RP0=0, select bank0
  7059  03B0  00CC               	movwf	?___flmul+7
  7060  03B1  1683               	bsf	3,5	;RP0=1, select bank1
  7061  03B2  082A               	movf	(_measure_inductance$5384+2)^(0+128),w
  7062  03B3  1283               	bcf	3,5	;RP0=0, select bank0
  7063  03B4  00CB               	movwf	?___flmul+6
  7064  03B5  1683               	bsf	3,5	;RP0=1, select bank1
  7065  03B6  0829               	movf	(_measure_inductance$5384+1)^(0+128),w
  7066  03B7  1283               	bcf	3,5	;RP0=0, select bank0
  7067  03B8  00CA               	movwf	?___flmul+5
  7068  03B9  1683               	bsf	3,5	;RP0=1, select bank1
  7069  03BA  0828               	movf	_measure_inductance$5384^(0+128),w
  7070  03BB  1283               	bcf	3,5	;RP0=0, select bank0
  7071  03BC  00C9               	movwf	?___flmul+4
  7072  03BD  253E  120A  118A   	fcall	___flmul
  7073  03C0  0848               	movf	?___flmul+3,w
  7074  03C1  1683               	bsf	3,5	;RP0=1, select bank1
  7075  03C2  00AF               	movwf	(_measure_inductance$5385+3)^(0+128)
  7076  03C3  1283               	bcf	3,5	;RP0=0, select bank0
  7077  03C4  0847               	movf	?___flmul+2,w
  7078  03C5  1683               	bsf	3,5	;RP0=1, select bank1
  7079  03C6  00AE               	movwf	(_measure_inductance$5385+2)^(0+128)
  7080  03C7  1283               	bcf	3,5	;RP0=0, select bank0
  7081  03C8  0846               	movf	?___flmul+1,w
  7082  03C9  1683               	bsf	3,5	;RP0=1, select bank1
  7083  03CA  00AD               	movwf	(_measure_inductance$5385+1)^(0+128)
  7084  03CB  1283               	bcf	3,5	;RP0=0, select bank0
  7085  03CC  0845               	movf	?___flmul,w
  7086  03CD  1683               	bsf	3,5	;RP0=1, select bank1
  7087  03CE  00AC               	movwf	_measure_inductance$5385^(0+128)
  7088                           
  7089                           ;measure.c: 226: denominator = 4 * 3.14159265358979323846l * 3.14159265358979323846l * F
      +                          1 * F1 * F2 * F2 * F3 * F3 * CCal;
  7090  03CF  1703               	bsf	3,6	;RP1=1, select bank3
  7091  03D0  0837               	movf	(_F3+3)^(0+384),w
  7092  03D1  278E               	call	PL24	;select bank 0
  7093  03D2  00C8               	movwf	?___flmul+3
  7094  03D3  278B               	call	PL23	;select bank 3
  7095  03D4  0836               	movf	(_F3+2)^(0+384),w
  7096  03D5  278E               	call	PL24	;select bank 0
  7097  03D6  00C7               	movwf	?___flmul+2
  7098  03D7  278B               	call	PL23	;select bank 3
  7099  03D8  0835               	movf	(_F3+1)^(0+384),w
  7100  03D9  278E               	call	PL24	;select bank 0
  7101  03DA  00C6               	movwf	?___flmul+1
  7102  03DB  276E  120A  118A   	fcall	PL16	;call to abstracted procedure
  7103  03DE  082F               	movf	(_measure_inductance$5385+3)^(0+128),w
  7104  03DF  1283               	bcf	3,5	;RP0=0, select bank0
  7105  03E0  00CC               	movwf	?___flmul+7
  7106  03E1  1683               	bsf	3,5	;RP0=1, select bank1
  7107  03E2  082E               	movf	(_measure_inductance$5385+2)^(0+128),w
  7108  03E3  1283               	bcf	3,5	;RP0=0, select bank0
  7109  03E4  00CB               	movwf	?___flmul+6
  7110  03E5  1683               	bsf	3,5	;RP0=1, select bank1
  7111  03E6  082D               	movf	(_measure_inductance$5385+1)^(0+128),w
  7112  03E7  1283               	bcf	3,5	;RP0=0, select bank0
  7113  03E8  00CA               	movwf	?___flmul+5
  7114  03E9  1683               	bsf	3,5	;RP0=1, select bank1
  7115  03EA  082C               	movf	_measure_inductance$5385^(0+128),w
  7116  03EB  1283               	bcf	3,5	;RP0=0, select bank0
  7117  03EC  00C9               	movwf	?___flmul+4
  7118  03ED  253E  120A  118A   	fcall	___flmul
  7119  03F0  0848               	movf	?___flmul+3,w
  7120  03F1  1683               	bsf	3,5	;RP0=1, select bank1
  7121  03F2  00B3               	movwf	(_measure_inductance$5386+3)^(0+128)
  7122  03F3  1283               	bcf	3,5	;RP0=0, select bank0
  7123  03F4  0847               	movf	?___flmul+2,w
  7124  03F5  1683               	bsf	3,5	;RP0=1, select bank1
  7125  03F6  00B2               	movwf	(_measure_inductance$5386+2)^(0+128)
  7126  03F7  1283               	bcf	3,5	;RP0=0, select bank0
  7127  03F8  0846               	movf	?___flmul+1,w
  7128  03F9  1683               	bsf	3,5	;RP0=1, select bank1
  7129  03FA  00B1               	movwf	(_measure_inductance$5386+1)^(0+128)
  7130  03FB  1283               	bcf	3,5	;RP0=0, select bank0
  7131  03FC  0845               	movf	?___flmul,w
  7132  03FD  1683               	bsf	3,5	;RP0=1, select bank1
  7133  03FE  00B0               	movwf	_measure_inductance$5386^(0+128)
  7134                           
  7135                           ;measure.c: 226: denominator = 4 * 3.14159265358979323846l * 3.14159265358979323846l * F
      +                          1 * F1 * F2 * F2 * F3 * F3 * CCal;
  7136  03FF  1703               	bsf	3,6	;RP1=1, select bank3
  7137  0400  0860               	movf	(_CCal+3)^(0+384),w
  7138  0401  278E               	call	PL24	;select bank 0
  7139  0402  00C8               	movwf	?___flmul+3
  7140  0403  278B               	call	PL23	;select bank 3
  7141  0404  085F               	movf	(_CCal+2)^(0+384),w
  7142  0405  278E               	call	PL24	;select bank 0
  7143  0406  00C7               	movwf	?___flmul+2
  7144  0407  278B               	call	PL23	;select bank 3
  7145  0408  085E               	movf	(_CCal+1)^(0+384),w
  7146  0409  278E               	call	PL24	;select bank 0
  7147  040A  00C6               	movwf	?___flmul+1
  7148  040B  278B               	call	PL23	;select bank 3
  7149  040C  085D               	movf	_CCal^(0+384),w
  7150  040D  278E               	call	PL24	;select bank 0
  7151  040E  00C5               	movwf	?___flmul
  7152  040F  1683               	bsf	3,5	;RP0=1, select bank1
  7153  0410  0833               	movf	(_measure_inductance$5386+3)^(0+128),w
  7154  0411  1283               	bcf	3,5	;RP0=0, select bank0
  7155  0412  00CC               	movwf	?___flmul+7
  7156  0413  1683               	bsf	3,5	;RP0=1, select bank1
  7157  0414  0832               	movf	(_measure_inductance$5386+2)^(0+128),w
  7158  0415  1283               	bcf	3,5	;RP0=0, select bank0
  7159  0416  00CB               	movwf	?___flmul+6
  7160  0417  1683               	bsf	3,5	;RP0=1, select bank1
  7161  0418  0831               	movf	(_measure_inductance$5386+1)^(0+128),w
  7162  0419  1283               	bcf	3,5	;RP0=0, select bank0
  7163  041A  00CA               	movwf	?___flmul+5
  7164  041B  1683               	bsf	3,5	;RP0=1, select bank1
  7165  041C  0830               	movf	_measure_inductance$5386^(0+128),w
  7166  041D  1283               	bcf	3,5	;RP0=0, select bank0
  7167  041E  00C9               	movwf	?___flmul+4
  7168  041F  253E  120A  118A   	fcall	___flmul
  7169  0422  0848               	movf	?___flmul+3,w
  7170  0423  1683               	bsf	3,5	;RP0=1, select bank1
  7171  0424  00B7               	movwf	(_measure_inductance$5387+3)^(0+128)
  7172  0425  1283               	bcf	3,5	;RP0=0, select bank0
  7173  0426  0847               	movf	?___flmul+2,w
  7174  0427  1683               	bsf	3,5	;RP0=1, select bank1
  7175  0428  00B6               	movwf	(_measure_inductance$5387+2)^(0+128)
  7176  0429  1283               	bcf	3,5	;RP0=0, select bank0
  7177  042A  0846               	movf	?___flmul+1,w
  7178  042B  1683               	bsf	3,5	;RP0=1, select bank1
  7179  042C  00B5               	movwf	(_measure_inductance$5387+1)^(0+128)
  7180  042D  1283               	bcf	3,5	;RP0=0, select bank0
  7181  042E  0845               	movf	?___flmul,w
  7182  042F  1683               	bsf	3,5	;RP0=1, select bank1
  7183  0430  00B4               	movwf	_measure_inductance$5387^(0+128)
  7184                           
  7185                           ;measure.c: 226: denominator = 4 * 3.14159265358979323846l * 3.14159265358979323846l * F
      +                          1 * F1 * F2 * F2 * F3 * F3 * CCal;
  7186  0431  3042               	movlw	66
  7187  0432  1283               	bcf	3,5	;RP0=0, select bank0
  7188  0433  00C8               	movwf	?___flmul+3
  7189  0434  301D               	movlw	29
  7190  0435  00C7               	movwf	?___flmul+2
  7191  0436  30E9               	movlw	233
  7192  0437  00C6               	movwf	?___flmul+1
  7193  0438  30E6               	movlw	230
  7194  0439  00C5               	movwf	?___flmul
  7195  043A  1683               	bsf	3,5	;RP0=1, select bank1
  7196  043B  0837               	movf	(_measure_inductance$5387+3)^(0+128),w
  7197  043C  1283               	bcf	3,5	;RP0=0, select bank0
  7198  043D  00CC               	movwf	?___flmul+7
  7199  043E  1683               	bsf	3,5	;RP0=1, select bank1
  7200  043F  0836               	movf	(_measure_inductance$5387+2)^(0+128),w
  7201  0440  1283               	bcf	3,5	;RP0=0, select bank0
  7202  0441  00CB               	movwf	?___flmul+6
  7203  0442  1683               	bsf	3,5	;RP0=1, select bank1
  7204  0443  0835               	movf	(_measure_inductance$5387+1)^(0+128),w
  7205  0444  1283               	bcf	3,5	;RP0=0, select bank0
  7206  0445  00CA               	movwf	?___flmul+5
  7207  0446  1683               	bsf	3,5	;RP0=1, select bank1
  7208  0447  0834               	movf	_measure_inductance$5387^(0+128),w
  7209  0448  1283               	bcf	3,5	;RP0=0, select bank0
  7210  0449  00C9               	movwf	?___flmul+4
  7211  044A  253E  120A  118A   	fcall	___flmul
  7212  044D  0848               	movf	?___flmul+3,w
  7213  044E  1683               	bsf	3,5	;RP0=1, select bank1
  7214  044F  00A7               	movwf	(measure_inductance@denominator+3)^(0+128)
  7215  0450  1283               	bcf	3,5	;RP0=0, select bank0
  7216  0451  0847               	movf	?___flmul+2,w
  7217  0452  1683               	bsf	3,5	;RP0=1, select bank1
  7218  0453  00A6               	movwf	(measure_inductance@denominator+2)^(0+128)
  7219  0454  1283               	bcf	3,5	;RP0=0, select bank0
  7220  0455  0846               	movf	?___flmul+1,w
  7221  0456  1683               	bsf	3,5	;RP0=1, select bank1
  7222  0457  00A5               	movwf	(measure_inductance@denominator+1)^(0+128)
  7223  0458  1283               	bcf	3,5	;RP0=0, select bank0
  7224  0459  0845               	movf	?___flmul,w
  7225  045A  1683               	bsf	3,5	;RP0=1, select bank1
  7226  045B  00A4               	movwf	measure_inductance@denominator^(0+128)
  7227                           
  7228                           ;measure.c: 227: Lin = (numerator / denominator) * 1e+15l;
  7229  045C  3058               	movlw	88
  7230  045D  1283               	bcf	3,5	;RP0=0, select bank0
  7231  045E  00C8               	movwf	?___flmul+3
  7232  045F  3063               	movlw	99
  7233  0460  00C7               	movwf	?___flmul+2
  7234  0461  305F               	movlw	95
  7235  0462  00C6               	movwf	?___flmul+1
  7236  0463  30A9               	movlw	169
  7237  0464  00C5               	movwf	?___flmul
  7238  0465  1683               	bsf	3,5	;RP0=1, select bank1
  7239  0466  0827               	movf	(measure_inductance@denominator+3)^(0+128),w
  7240  0467  1283               	bcf	3,5	;RP0=0, select bank0
  7241  0468  00B5               	movwf	?___fldiv+3
  7242  0469  1683               	bsf	3,5	;RP0=1, select bank1
  7243  046A  0826               	movf	(measure_inductance@denominator+2)^(0+128),w
  7244  046B  1283               	bcf	3,5	;RP0=0, select bank0
  7245  046C  00B4               	movwf	?___fldiv+2
  7246  046D  1683               	bsf	3,5	;RP0=1, select bank1
  7247  046E  0825               	movf	(measure_inductance@denominator+1)^(0+128),w
  7248  046F  1283               	bcf	3,5	;RP0=0, select bank0
  7249  0470  00B3               	movwf	?___fldiv+1
  7250  0471  1683               	bsf	3,5	;RP0=1, select bank1
  7251  0472  0824               	movf	measure_inductance@denominator^(0+128),w
  7252  0473  1283               	bcf	3,5	;RP0=0, select bank0
  7253  0474  00B2               	movwf	?___fldiv
  7254  0475  1683               	bsf	3,5	;RP0=1, select bank1
  7255  0476  0823               	movf	(measure_inductance@numerator+3)^(0+128),w
  7256  0477  1283               	bcf	3,5	;RP0=0, select bank0
  7257  0478  00B9               	movwf	?___fldiv+7
  7258  0479  1683               	bsf	3,5	;RP0=1, select bank1
  7259  047A  0822               	movf	(measure_inductance@numerator+2)^(0+128),w
  7260  047B  1283               	bcf	3,5	;RP0=0, select bank0
  7261  047C  00B8               	movwf	?___fldiv+6
  7262  047D  1683               	bsf	3,5	;RP0=1, select bank1
  7263  047E  0821               	movf	(measure_inductance@numerator+1)^(0+128),w
  7264  047F  1283               	bcf	3,5	;RP0=0, select bank0
  7265  0480  00B7               	movwf	?___fldiv+5
  7266  0481  1683               	bsf	3,5	;RP0=1, select bank1
  7267  0482  0820               	movf	measure_inductance@numerator^(0+128),w
  7268  0483  1283               	bcf	3,5	;RP0=0, select bank0
  7269  0484  00B6               	movwf	?___fldiv+4
  7270  0485  120A  158A  25F9   	fcall	___fldiv
      +       120A  118A         
  7271  048A  0835               	movf	?___fldiv+3,w
  7272  048B  00CC               	movwf	?___flmul+7
  7273  048C  0834               	movf	?___fldiv+2,w
  7274  048D  00CB               	movwf	?___flmul+6
  7275  048E  0833               	movf	?___fldiv+1,w
  7276  048F  00CA               	movwf	?___flmul+5
  7277  0490  0832               	movf	?___fldiv,w
  7278  0491  00C9               	movwf	?___flmul+4
  7279  0492  253E  120A  118A   	fcall	___flmul
  7280  0495  274E  120A  118A   	fcall	PL11	;call to abstracted procedure
  7281                           
  7282                           ;measure.c: 229: if(Lin > 999) {
  7283  0498  3044               	movlw	68
  7284  0499  1283               	bcf	3,5	;RP0=0, select bank0
  7285  049A  00A3               	movwf	?___flge+3
  7286  049B  3079               	movlw	121
  7287  049C  00A2               	movwf	?___flge+2
  7288  049D  30C0               	movlw	192
  7289  049E  00A1               	movwf	?___flge+1
  7290  049F  01A0               	clrf	?___flge
  7291  04A0  26D9  120A  118A   	fcall	PL2	;call to abstracted procedure
  7292  04A3  25BE  120A  118A   	fcall	___flge
  7293  04A6  1803               	btfsc	3,0
  7294  04A7  2CFF               	goto	l9375
  7295                           
  7296                           ;measure.c: 230: if(Lin > (999e+03l)) {
  7297  04A8  3049               	movlw	73
  7298  04A9  00A3               	movwf	?___flge+3
  7299  04AA  3073               	movlw	115
  7300  04AB  00A2               	movwf	?___flge+2
  7301  04AC  30E5               	movlw	229
  7302  04AD  00A1               	movwf	?___flge+1
  7303  04AE  3080               	movlw	128
  7304  04AF  00A0               	movwf	?___flge
  7305  04B0  26D9  120A  118A   	fcall	PL2	;call to abstracted procedure
  7306  04B3  25BE  120A  118A   	fcall	___flge
  7307  04B6  1803               	btfsc	3,0
  7308  04B7  2CEE               	goto	l9371
  7309                           
  7310                           ;measure.c: 231: if(Lin > (999e+06l)) {
  7311  04B8  304E               	movlw	78
  7312  04B9  00A3               	movwf	?___flge+3
  7313  04BA  306E               	movlw	110
  7314  04BB  00A2               	movwf	?___flge+2
  7315  04BC  302E               	movlw	46
  7316  04BD  00A1               	movwf	?___flge+1
  7317  04BE  301F               	movlw	31
  7318  04BF  00A0               	movwf	?___flge
  7319  04C0  26D9  120A  118A   	fcall	PL2	;call to abstracted procedure
  7320  04C3  25BE  120A  118A   	fcall	___flge
  7321  04C6  1803               	btfsc	3,0
  7322  04C7  2CDB               	goto	l9367
  7323                           
  7324                           ;measure.c: 232: Lin = Lin / (1e+09l);
  7325  04C8  304E               	movlw	78
  7326  04C9  00B5               	movwf	?___fldiv+3
  7327  04CA  306E               	movlw	110
  7328  04CB  00B4               	movwf	?___fldiv+2
  7329  04CC  306B               	movlw	107
  7330  04CD  00B3               	movwf	?___fldiv+1
  7331  04CE  3028               	movlw	40
  7332  04CF  00B2               	movwf	?___fldiv
  7333  04D0  26EA               	fcall	PL3	;call to abstracted procedure
  7334  04D1  120A  158A  25F9   	fcall	___fldiv
      +       120A  118A         
  7335  04D6  26FB  120A  118A   	fcall	PL4	;call to abstracted procedure
  7336                           
  7337                           ;measure.c: 233: unit = 0;
  7338  04D9  01B8               	clrf	measure_inductance@unit^(0+128)
  7339                           
  7340                           ;measure.c: 234: } else {
  7341  04DA  2D02               	goto	l9377
  7342  04DB                     l9367:	
  7343                           
  7344                           ;measure.c: 235: Lin = Lin / (1e+06l);
  7345  04DB  3049               	movlw	73
  7346  04DC  00B5               	movwf	?___fldiv+3
  7347  04DD  3074               	movlw	116
  7348  04DE  00B4               	movwf	?___fldiv+2
  7349  04DF  3024               	movlw	36
  7350  04E0  00B3               	movwf	?___fldiv+1
  7351  04E1  01B2               	clrf	?___fldiv
  7352  04E2  26EA               	fcall	PL3	;call to abstracted procedure
  7353  04E3  120A  158A  25F9   	fcall	___fldiv
      +       120A  118A         
  7354  04E8  26FB  120A  118A   	fcall	PL4	;call to abstracted procedure
  7355                           
  7356                           ;measure.c: 236: unit = 1;
  7357  04EB  01B8               	clrf	measure_inductance@unit^(0+128)
  7358  04EC  0AB8               	incf	measure_inductance@unit^(0+128),f
  7359  04ED  2D02               	goto	l9377
  7360  04EE                     l9371:	
  7361                           
  7362                           ;measure.c: 239: Lin = Lin / 1e+03l;
  7363  04EE  3044               	movlw	68
  7364  04EF  00B5               	movwf	?___fldiv+3
  7365  04F0  307A               	movlw	122
  7366  04F1  00B4               	movwf	?___fldiv+2
  7367  04F2  01B3               	clrf	?___fldiv+1
  7368  04F3  01B2               	clrf	?___fldiv
  7369  04F4  26EA               	fcall	PL3	;call to abstracted procedure
  7370  04F5  120A  158A  25F9   	fcall	___fldiv
      +       120A  118A         
  7371  04FA  26FB  120A  118A   	fcall	PL4	;call to abstracted procedure
  7372                           
  7373                           ;measure.c: 240: unit = 2;
  7374  04FD  3002               	movlw	2
  7375  04FE  2D01               	goto	L3
  7376  04FF                     l9375:	
  7377                           
  7378                           ;measure.c: 243: unit = 3;
  7379  04FF  3003               	movlw	3
  7380  0500  1683               	bsf	3,5	;RP0=1, select bank1
  7381  0501                     L3:	
  7382  0501  00B8               	movwf	measure_inductance@unit^(0+128)
  7383  0502                     l9377:	
  7384                           
  7385                           ;measure.c: 245: Lin = Lin * 100;
  7386  0502  3042               	movlw	66
  7387  0503  1283               	bcf	3,5	;RP0=0, select bank0
  7388  0504  00C8               	movwf	?___flmul+3
  7389  0505  30C8               	movlw	200
  7390  0506  00C7               	movwf	?___flmul+2
  7391  0507  01C6               	clrf	?___flmul+1
  7392  0508  01C5               	clrf	?___flmul
  7393  0509  1683               	bsf	3,5	;RP0=1, select bank1
  7394  050A  0846               	movf	(measure_inductance@Lin+3)^(0+128),w
  7395  050B  1283               	bcf	3,5	;RP0=0, select bank0
  7396  050C  00CC               	movwf	?___flmul+7
  7397  050D  1683               	bsf	3,5	;RP0=1, select bank1
  7398  050E  0845               	movf	(measure_inductance@Lin+2)^(0+128),w
  7399  050F  1283               	bcf	3,5	;RP0=0, select bank0
  7400  0510  00CB               	movwf	?___flmul+6
  7401  0511  1683               	bsf	3,5	;RP0=1, select bank1
  7402  0512  0844               	movf	(measure_inductance@Lin+1)^(0+128),w
  7403  0513  1283               	bcf	3,5	;RP0=0, select bank0
  7404  0514  00CA               	movwf	?___flmul+5
  7405  0515  1683               	bsf	3,5	;RP0=1, select bank1
  7406  0516  0843               	movf	measure_inductance@Lin^(0+128),w
  7407  0517  1283               	bcf	3,5	;RP0=0, select bank0
  7408  0518  00C9               	movwf	?___flmul+4
  7409  0519  253E  120A  118A   	fcall	___flmul
  7410  051C  274E               	fcall	PL11	;call to abstracted procedure
  7411                           
  7412                           ;measure.c: 246: var = (uint16_t)Lin;
  7413  051D  0846               	movf	(measure_inductance@Lin+3)^(0+128),w
  7414  051E  1283               	bcf	3,5	;RP0=0, select bank0
  7415  051F  00AB               	movwf	?___fltol+3
  7416  0520  1683               	bsf	3,5	;RP0=1, select bank1
  7417  0521  0845               	movf	(measure_inductance@Lin+2)^(0+128),w
  7418  0522  1283               	bcf	3,5	;RP0=0, select bank0
  7419  0523  00AA               	movwf	?___fltol+2
  7420  0524  1683               	bsf	3,5	;RP0=1, select bank1
  7421  0525  0844               	movf	(measure_inductance@Lin+1)^(0+128),w
  7422  0526  1283               	bcf	3,5	;RP0=0, select bank0
  7423  0527  00A9               	movwf	?___fltol+1
  7424  0528  1683               	bsf	3,5	;RP0=1, select bank1
  7425  0529  0843               	movf	measure_inductance@Lin^(0+128),w
  7426  052A  1283               	bcf	3,5	;RP0=0, select bank0
  7427  052B  00A8               	movwf	?___fltol
  7428  052C  120A  158A  2672   	fcall	___fltol
  7429  052F  0829               	movf	?___fltol+1,w
  7430  0530  1683               	bsf	3,5	;RP0=1, select bank1
  7431  0531  00C2               	movwf	(measure_inductance@var+1)^(0+128)
  7432  0532  1283               	bcf	3,5	;RP0=0, select bank0
  7433  0533  0828               	movf	?___fltol,w
  7434  0534  1683               	bsf	3,5	;RP0=1, select bank1
  7435  0535  00C1               	movwf	measure_inductance@var^(0+128)
  7436                           
  7437                           ;measure.c: 248: print_reading(var);
  7438  0536  0842               	movf	(measure_inductance@var+1)^(0+128),w
  7439  0537  00F4               	movwf	?_print_reading+1
  7440  0538  0841               	movf	measure_inductance@var^(0+128),w
  7441  0539  00F3               	movwf	?_print_reading
  7442                           
  7443                           ;measure.c: 249: print_unit(unit);
  7444  053A  0838               	movf	measure_inductance@unit^(0+128),w
  7445  053B  120A  158A  2FF0   	ljmp	l1986
  7446  053E                     __end_of_measure_inductance:	
  7447  053E                     __ptext1302:	
  7448 ;; =============== function ___awtofl ends ============
  7449                           
  7450                           
  7451 ;; *************** function ___flmul *****************
  7452 ;; Defined at:
  7453 ;;		line 51 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\flmul.c"
  7454 ;; Parameters:    Size  Location     Type
  7455 ;;  f1              4   37[BANK0 ] unsigned char 
  7456 ;;  f2              4   41[BANK0 ] unsigned char 
  7457 ;; Auto vars:     Size  Location     Type
  7458 ;;  f3_as_produc    4   50[BANK0 ] unsigned long 
  7459 ;;  sign            1   55[BANK0 ] unsigned char 
  7460 ;;  cntr            1   54[BANK0 ] unsigned char 
  7461 ;;  exp             1   49[BANK0 ] unsigned char 
  7462 ;; Return value:  Size  Location     Type
  7463 ;;                  4   37[BANK0 ] unsigned char 
  7464 ;; Registers used:
  7465 ;;		wreg, status,2, status,0, pclath, cstack
  7466 ;; Tracked objects:
  7467 ;;		On entry : 60/100
  7468 ;;		On exit  : 60/100
  7469 ;;		Unchanged: FFF9F/0
  7470 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7471 ;;      Params:         0       8       0       0       0
  7472 ;;      Locals:         0       7       0       0       0
  7473 ;;      Temps:          0       4       0       0       0
  7474 ;;      Totals:         0      19       0       0       0
  7475 ;;Total ram usage:       19 bytes
  7476 ;; Hardware stack levels used:    1
  7477 ;; Hardware stack levels required when called:    2
  7478 ;; This function calls:
  7479 ;;		___flpack
  7480 ;; This function is called by:
  7481 ;;		_format_double
  7482 ;;		_measure_capacitance
  7483 ;;		_measure_inductance
  7484 ;;		_log
  7485 ;;		_log10
  7486 ;;		_pow
  7487 ;;		_eval_poly
  7488 ;;		_exp
  7489 ;; This function uses a non-reentrant model
  7490 ;;
  7491  053E                     ___flmul:	
  7492                           
  7493                           ; Regs used in ___flmul: [wreg+status,2+status,0+pclath+cstack]
  7494  053E  0845               	movf	___flmul@f1,w
  7495  053F  00CD               	movwf	??___flmul
  7496  0540  0846               	movf	___flmul@f1+1,w
  7497  0541  00CE               	movwf	??___flmul+1
  7498  0542  0847               	movf	___flmul@f1+2,w
  7499  0543  00CF               	movwf	??___flmul+2
  7500  0544  0848               	movf	___flmul@f1+3,w
  7501  0545  00D0               	movwf	??___flmul+3
  7502  0546  1003               	clrc
  7503  0547  0D4F               	rlf	??___flmul+2,w
  7504  0548  0D50               	rlf	??___flmul+3,w
  7505  0549  00D1               	movwf	___flmul@exp
  7506  054A  08D1               	movf	___flmul@exp,f
  7507  054B  1D03               	skipz
  7508  054C  2D52               	goto	l9031
  7509  054D  01C5               	clrf	?___flmul
  7510  054E  01C6               	clrf	?___flmul+1
  7511  054F  01C7               	clrf	?___flmul+2
  7512  0550  01C8               	clrf	?___flmul+3
  7513  0551  0008               	return
  7514  0552                     l9031:	
  7515  0552  0849               	movf	___flmul@f2,w
  7516  0553  00CD               	movwf	??___flmul
  7517  0554  084A               	movf	___flmul@f2+1,w
  7518  0555  00CE               	movwf	??___flmul+1
  7519  0556  084B               	movf	___flmul@f2+2,w
  7520  0557  00CF               	movwf	??___flmul+2
  7521  0558  084C               	movf	___flmul@f2+3,w
  7522  0559  00D0               	movwf	??___flmul+3
  7523  055A  1003               	clrc
  7524  055B  0D4F               	rlf	??___flmul+2,w
  7525  055C  0D50               	rlf	??___flmul+3,w
  7526  055D  00D7               	movwf	___flmul@sign
  7527  055E  08D7               	movf	___flmul@sign,f
  7528  055F  1D03               	skipz
  7529  0560  2D66               	goto	l9035
  7530  0561  01C5               	clrf	?___flmul
  7531  0562  01C6               	clrf	?___flmul+1
  7532  0563  01C7               	clrf	?___flmul+2
  7533  0564  01C8               	clrf	?___flmul+3
  7534  0565  0008               	return
  7535  0566                     l9035:	
  7536  0566  0857               	movf	___flmul@sign,w
  7537  0567  3E7B               	addlw	123
  7538  0568  07D1               	addwf	___flmul@exp,f
  7539  0569  0848               	movf	___flmul@f1+3,w
  7540  056A  00D7               	movwf	___flmul@sign
  7541  056B  084C               	movf	___flmul@f2+3,w
  7542  056C  06D7               	xorwf	___flmul@sign,f
  7543  056D  3080               	movlw	128
  7544  056E  05D7               	andwf	___flmul@sign,f
  7545  056F  3007               	movlw	7
  7546  0570  17C7               	bsf	___flmul@f1+2,7
  7547  0571  17CB               	bsf	___flmul@f2+2,7
  7548  0572  01CC               	clrf	___flmul@f2+3
  7549  0573  01D2               	clrf	___flmul@f3_as_product
  7550  0574  01D3               	clrf	___flmul@f3_as_product+1
  7551  0575  01D4               	clrf	___flmul@f3_as_product+2
  7552  0576  01D5               	clrf	___flmul@f3_as_product+3
  7553  0577  00D6               	movwf	___flmul@cntr
  7554  0578                     l9053:	
  7555  0578  1C45               	btfss	___flmul@f1,0
  7556  0579  2D82               	goto	l9057
  7557  057A  0849               	movf	___flmul@f2,w
  7558  057B  272E  120A  118A   	fcall	PL9	;call to abstracted procedure
  7559  057E  1803               	skipnc
  7560  057F  3E01               	addlw	1
  7561  0580  1D03               	btfss	3,2
  7562  0581  07D5               	addwf	___flmul@f3_as_product+3,f
  7563  0582                     l9057:	
  7564  0582  1003               	clrc
  7565  0583  0CC8               	rrf	___flmul@f1+3,f
  7566  0584  0CC7               	rrf	___flmul@f1+2,f
  7567  0585  0CC6               	rrf	___flmul@f1+1,f
  7568  0586  0CC5               	rrf	___flmul@f1,f
  7569  0587  1003               	clrc
  7570  0588  0DC9               	rlf	___flmul@f2,f
  7571  0589  0DCA               	rlf	___flmul@f2+1,f
  7572  058A  0DCB               	rlf	___flmul@f2+2,f
  7573  058B  0DCC               	rlf	___flmul@f2+3,f
  7574  058C  0BD6               	decfsz	___flmul@cntr,f
  7575  058D  2D78               	goto	l9053
  7576  058E  3011               	movlw	17
  7577  058F  00D6               	movwf	___flmul@cntr
  7578  0590                     l9065:	
  7579  0590  1C45               	btfss	___flmul@f1,0
  7580  0591  2D9A               	goto	l9069
  7581  0592  0849               	movf	___flmul@f2,w
  7582  0593  272E  120A  118A   	fcall	PL9	;call to abstracted procedure
  7583  0596  1803               	skipnc
  7584  0597  3E01               	addlw	1
  7585  0598  1D03               	btfss	3,2
  7586  0599  07D5               	addwf	___flmul@f3_as_product+3,f
  7587  059A                     l9069:	
  7588  059A  1003               	clrc
  7589  059B  0CC8               	rrf	___flmul@f1+3,f
  7590  059C  0CC7               	rrf	___flmul@f1+2,f
  7591  059D  0CC6               	rrf	___flmul@f1+1,f
  7592  059E  0CC5               	rrf	___flmul@f1,f
  7593  059F  1003               	clrc
  7594  05A0  0CD5               	rrf	___flmul@f3_as_product+3,f
  7595  05A1  0CD4               	rrf	___flmul@f3_as_product+2,f
  7596  05A2  0CD3               	rrf	___flmul@f3_as_product+1,f
  7597  05A3  0CD2               	rrf	___flmul@f3_as_product,f
  7598  05A4  0BD6               	decfsz	___flmul@cntr,f
  7599  05A5  2D90               	goto	l9065
  7600  05A6  0855               	movf	___flmul@f3_as_product+3,w
  7601  05A7  00A3               	movwf	?___flpack+3
  7602  05A8  0854               	movf	___flmul@f3_as_product+2,w
  7603  05A9  00A2               	movwf	?___flpack+2
  7604  05AA  0853               	movf	___flmul@f3_as_product+1,w
  7605  05AB  00A1               	movwf	?___flpack+1
  7606  05AC  0852               	movf	___flmul@f3_as_product,w
  7607  05AD  00A0               	movwf	?___flpack
  7608  05AE  0851               	movf	___flmul@exp,w
  7609  05AF  00A4               	movwf	?___flpack+4
  7610  05B0  0857               	movf	___flmul@sign,w
  7611  05B1  00A5               	movwf	?___flpack+5
  7612  05B2  120A  158A  27A5   	fcall	___flpack
  7613  05B5  0823               	movf	?___flpack+3,w
  7614  05B6  00C8               	movwf	?___flmul+3
  7615  05B7  0822               	movf	?___flpack+2,w
  7616  05B8  00C7               	movwf	?___flmul+2
  7617  05B9  0821               	movf	?___flpack+1,w
  7618  05BA  00C6               	movwf	?___flmul+1
  7619  05BB  0820               	movf	?___flpack,w
  7620  05BC  00C5               	movwf	?___flmul
  7621  05BD  0008               	return
  7622  05BE                     __end_of___flmul:	
  7623  05BE                     __ptext1311:	
  7624 ;; =============== function _format_number ends ============
  7625                           
  7626                           
  7627 ;; *************** function ___flge *****************
  7628 ;; Defined at:
  7629 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\flge.c"
  7630 ;; Parameters:    Size  Location     Type
  7631 ;;  ff1             4    0[BANK0 ] unsigned char 
  7632 ;;  ff2             4    4[BANK0 ] unsigned char 
  7633 ;; Auto vars:     Size  Location     Type
  7634 ;;		None
  7635 ;; Return value:  Size  Location     Type
  7636 ;;		None               void
  7637 ;; Registers used:
  7638 ;;		wreg, status,2, status,0
  7639 ;; Tracked objects:
  7640 ;;		On entry : 60/100
  7641 ;;		On exit  : 60/100
  7642 ;;		Unchanged: FFF9F/0
  7643 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7644 ;;      Params:         0       8       0       0       0
  7645 ;;      Locals:         0       0       0       0       0
  7646 ;;      Temps:          4       0       0       0       0
  7647 ;;      Totals:         4       8       0       0       0
  7648 ;;Total ram usage:       12 bytes
  7649 ;; Hardware stack levels used:    1
  7650 ;; Hardware stack levels required when called:    1
  7651 ;; This function calls:
  7652 ;;		Nothing
  7653 ;; This function is called by:
  7654 ;;		_format_double
  7655 ;;		_measure_capacitance
  7656 ;;		_measure_inductance
  7657 ;;		_floor
  7658 ;;		_log
  7659 ;;		_pow
  7660 ;;		_ldexp
  7661 ;;		_exp
  7662 ;; This function uses a non-reentrant model
  7663 ;;
  7664  05BE                     ___flge:	
  7665                           
  7666                           ; Regs used in ___flge: [wreg+status,2+status,0]
  7667  05BE  1FA3               	btfss	___flge@ff1+3,7
  7668  05BF  2DDB               	goto	l8767
  7669  05C0  3080               	movlw	128
  7670  05C1  01F3               	clrf	??___flge
  7671  05C2  01F4               	clrf	??___flge+1
  7672  05C3  01F5               	clrf	??___flge+2
  7673  05C4  00F6               	movwf	??___flge+3
  7674  05C5  0820               	movf	___flge@ff1,w
  7675  05C6  02F3               	subwf	??___flge,f
  7676  05C7  0821               	movf	___flge@ff1+1,w
  7677  05C8  1C03               	skipc
  7678  05C9  0F21               	incfsz	___flge@ff1+1,w
  7679  05CA  02F4               	subwf	??___flge+1,f
  7680  05CB  0822               	movf	___flge@ff1+2,w
  7681  05CC  1C03               	skipc
  7682  05CD  0F22               	incfsz	___flge@ff1+2,w
  7683  05CE  02F5               	subwf	??___flge+2,f
  7684  05CF  0823               	movf	___flge@ff1+3,w
  7685  05D0  1C03               	skipc
  7686  05D1  0F23               	incfsz	___flge@ff1+3,w
  7687  05D2  02F6               	subwf	??___flge+3,f
  7688  05D3  0876               	movf	??___flge+3,w
  7689  05D4  00A3               	movwf	___flge@ff1+3
  7690  05D5  0875               	movf	??___flge+2,w
  7691  05D6  00A2               	movwf	___flge@ff1+2
  7692  05D7  0874               	movf	??___flge+1,w
  7693  05D8  00A1               	movwf	___flge@ff1+1
  7694  05D9  0873               	movf	??___flge,w
  7695  05DA  00A0               	movwf	___flge@ff1
  7696  05DB                     l8767:	
  7697  05DB  1FA7               	btfss	___flge@ff2+3,7
  7698  05DC  2DF8               	goto	l4321
  7699  05DD  3080               	movlw	128
  7700  05DE  01F3               	clrf	??___flge
  7701  05DF  01F4               	clrf	??___flge+1
  7702  05E0  01F5               	clrf	??___flge+2
  7703  05E1  00F6               	movwf	??___flge+3
  7704  05E2  0824               	movf	___flge@ff2,w
  7705  05E3  02F3               	subwf	??___flge,f
  7706  05E4  0825               	movf	___flge@ff2+1,w
  7707  05E5  1C03               	skipc
  7708  05E6  0F25               	incfsz	___flge@ff2+1,w
  7709  05E7  02F4               	subwf	??___flge+1,f
  7710  05E8  0826               	movf	___flge@ff2+2,w
  7711  05E9  1C03               	skipc
  7712  05EA  0F26               	incfsz	___flge@ff2+2,w
  7713  05EB  02F5               	subwf	??___flge+2,f
  7714  05EC  0827               	movf	___flge@ff2+3,w
  7715  05ED  1C03               	skipc
  7716  05EE  0F27               	incfsz	___flge@ff2+3,w
  7717  05EF  02F6               	subwf	??___flge+3,f
  7718  05F0  0876               	movf	??___flge+3,w
  7719  05F1  00A7               	movwf	___flge@ff2+3
  7720  05F2  0875               	movf	??___flge+2,w
  7721  05F3  00A6               	movwf	___flge@ff2+2
  7722  05F4  0874               	movf	??___flge+1,w
  7723  05F5  00A5               	movwf	___flge@ff2+1
  7724  05F6  0873               	movf	??___flge,w
  7725  05F7  00A4               	movwf	___flge@ff2
  7726  05F8                     l4321:	
  7727  05F8  3080               	movlw	128
  7728  05F9  06A3               	xorwf	___flge@ff1+3,f
  7729  05FA  06A7               	xorwf	___flge@ff2+3,f
  7730  05FB  0827               	movf	___flge@ff2+3,w
  7731  05FC  0223               	subwf	___flge@ff1+3,w
  7732  05FD  1D03               	skipz
  7733  05FE  0008               	return
  7734  05FF  0826               	movf	___flge@ff2+2,w
  7735  0600  0222               	subwf	___flge@ff1+2,w
  7736  0601  1D03               	skipz
  7737  0602  0008               	return
  7738  0603  0825               	movf	___flge@ff2+1,w
  7739  0604  0221               	subwf	___flge@ff1+1,w
  7740  0605  1D03               	skipz
  7741  0606  0008               	return
  7742  0607  0824               	movf	___flge@ff2,w
  7743  0608  0220               	subwf	___flge@ff1,w
  7744  0609  0008               	return
  7745  060A                     __end_of___flge:	
  7746  060A                     __ptext1300:	
  7747 ;; =============== function ___altofl ends ============
  7748                           
  7749                           
  7750 ;; *************** function ___lwtofl *****************
  7751 ;; Defined at:
  7752 ;;		line 29 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\lwtofl.c"
  7753 ;; Parameters:    Size  Location     Type
  7754 ;;  c               2   45[BANK0 ] unsigned int 
  7755 ;; Auto vars:     Size  Location     Type
  7756 ;;		None
  7757 ;; Return value:  Size  Location     Type
  7758 ;;                  4   45[BANK0 ] unsigned int 
  7759 ;; Registers used:
  7760 ;;		wreg, status,2, status,0, pclath, cstack
  7761 ;; Tracked objects:
  7762 ;;		On entry : 60/0
  7763 ;;		On exit  : 60/0
  7764 ;;		Unchanged: FFF9F/0
  7765 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7766 ;;      Params:         0       4       0       0       0
  7767 ;;      Locals:         0       0       0       0       0
  7768 ;;      Temps:          0       0       0       0       0
  7769 ;;      Totals:         0       4       0       0       0
  7770 ;;Total ram usage:        4 bytes
  7771 ;; Hardware stack levels used:    1
  7772 ;; Hardware stack levels required when called:    2
  7773 ;; This function calls:
  7774 ;;		___flpack
  7775 ;; This function is called by:
  7776 ;;		_calibrate
  7777 ;;		_measure_capacitance
  7778 ;;		_measure_inductance
  7779 ;; This function uses a non-reentrant model
  7780 ;;
  7781  060A                     ___lwtofl:	
  7782                           
  7783                           ; Regs used in ___lwtofl: [wreg+status,2+status,0+pclath+cstack]
  7784  060A  084D               	movf	___lwtofl@c,w
  7785  060B  00A0               	movwf	?___flpack
  7786  060C  084E               	movf	___lwtofl@c+1,w
  7787  060D  00A1               	movwf	?___flpack+1
  7788  060E  3096               	movlw	150
  7789  060F  01A2               	clrf	?___flpack+2
  7790  0610  01A3               	clrf	?___flpack+3
  7791  0611  00A4               	movwf	?___flpack+4
  7792  0612  01A5               	clrf	?___flpack+5
  7793  0613  120A  158A  27A5   	fcall	___flpack
  7794  0616  0823               	movf	?___flpack+3,w
  7795  0617  00D0               	movwf	?___lwtofl+3
  7796  0618  0822               	movf	?___flpack+2,w
  7797  0619  00CF               	movwf	?___lwtofl+2
  7798  061A  0821               	movf	?___flpack+1,w
  7799  061B  00CE               	movwf	?___lwtofl+1
  7800  061C  0820               	movf	?___flpack,w
  7801  061D  00CD               	movwf	?___lwtofl
  7802  061E  0008               	return
  7803  061F                     __end_of___lwtofl:	
  7804  061F                     __ptext1291:	
  7805 ;; =============== function _log ends ============
  7806                           
  7807                           
  7808 ;; *************** function _measure_freq *****************
  7809 ;; Defined at:
  7810 ;;		line 73 in file "../../../src/measure.c"
  7811 ;; Parameters:    Size  Location     Type
  7812 ;;		None
  7813 ;; Auto vars:     Size  Location     Type
  7814 ;;  count           2   54[BANK0 ] unsigned int 
  7815 ;; Return value:  Size  Location     Type
  7816 ;;                  2   50[BANK0 ] unsigned short 
  7817 ;; Registers used:
  7818 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  7819 ;; Tracked objects:
  7820 ;;		On entry : 0/20
  7821 ;;		On exit  : 60/0
  7822 ;;		Unchanged: 0/0
  7823 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7824 ;;      Params:         0       2       0       0       0
  7825 ;;      Locals:         0       2       0       0       0
  7826 ;;      Temps:          0       2       0       0       0
  7827 ;;      Totals:         0       6       0       0       0
  7828 ;;Total ram usage:        6 bytes
  7829 ;; Hardware stack levels used:    1
  7830 ;; Hardware stack levels required when called:    4
  7831 ;; This function calls:
  7832 ;;		_timer0_read_ps
  7833 ;;		_buffer_init
  7834 ;;		_buffer_puts
  7835 ;;		_format_number
  7836 ;;		_print_buffer
  7837 ;; This function is called by:
  7838 ;;		_calibrate
  7839 ;;		_measure_capacitance
  7840 ;;		_measure_inductance
  7841 ;; This function uses a non-reentrant model
  7842 ;;
  7843  061F                     _measure_freq:	
  7844                           
  7845                           ;measure.c: 74: uint16_t count;
  7846                           ;measure.c: 76: TMR0IF = 0;
  7847                           
  7848                           ; Regs used in _measure_freq: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  7849  061F  110B               	bcf	11,2
  7850                           
  7851                           ;measure.c: 80: TRISA &= ~0b00010000;
  7852  0620  1683               	bsf	3,5	;RP0=1, select bank1
  7853  0621  1303               	bcf	3,6	;RP1=0, select bank1
  7854  0622  1205               	bcf	5,4	;volatile
  7855                           
  7856                           ;measure.c: 82: _delay((unsigned long)((20)*(20000000/4000.0)));
  7857  0623  3082               	movlw	130
  7858  0624  1283               	bcf	3,5	;RP0=0, select bank0
  7859  0625  00D5               	movwf	??_measure_freq+1
  7860  0626  30DD               	movlw	221
  7861  0627  00D4               	movwf	??_measure_freq
  7862  0628                     u3657:	
  7863  0628  0BD4               	decfsz	??_measure_freq,f
  7864  0629  2E28               	goto	u3657
  7865  062A  0BD5               	decfsz	??_measure_freq+1,f
  7866  062B  2E28               	goto	u3657
  7867  062C  2E2D               	nop2
  7868  062D  278E               	call	PL24	;select bank 0
  7869                           
  7870                           ;measure.c: 85: TMR0 = 0x00;
  7871  062E  0181               	clrf	1	;volatile
  7872                           
  7873                           ;measure.c: 90: _delay((unsigned long)((10)*(20000000/4000.0)));
  7874  062F  3041               	movlw	65
  7875  0630  00D5               	movwf	??_measure_freq+1
  7876  0631  30EE               	movlw	238
  7877  0632  00D4               	movwf	??_measure_freq
  7878  0633                     u3667:	
  7879  0633  0BD4               	decfsz	??_measure_freq,f
  7880  0634  2E33               	goto	u3667
  7881  0635  0BD5               	decfsz	??_measure_freq+1,f
  7882  0636  2E33               	goto	u3667
  7883  0637  0064               	clrwdt
  7884                           
  7885                           ;measure.c: 91: _delay((unsigned long)((10)*(20000000/4000.0)));
  7886  0638  3041               	movlw	65
  7887  0639  278E               	call	PL24	;select bank 0
  7888  063A  00D5               	movwf	??_measure_freq+1
  7889  063B  30EE               	movlw	238
  7890  063C  00D4               	movwf	??_measure_freq
  7891  063D                     u3677:	
  7892  063D  0BD4               	decfsz	??_measure_freq,f
  7893  063E  2E3D               	goto	u3677
  7894  063F  0BD5               	decfsz	??_measure_freq+1,f
  7895  0640  2E3D               	goto	u3677
  7896  0641  0064               	clrwdt
  7897                           
  7898                           ;measure.c: 92: _delay((unsigned long)((10)*(20000000/4000.0)));
  7899  0642  3041               	movlw	65
  7900  0643  278E               	call	PL24	;select bank 0
  7901  0644  00D5               	movwf	??_measure_freq+1
  7902  0645  30EE               	movlw	238
  7903  0646  00D4               	movwf	??_measure_freq
  7904  0647                     u3687:	
  7905  0647  0BD4               	decfsz	??_measure_freq,f
  7906  0648  2E47               	goto	u3687
  7907  0649  0BD5               	decfsz	??_measure_freq+1,f
  7908  064A  2E47               	goto	u3687
  7909  064B  0064               	clrwdt
  7910                           
  7911                           ;measure.c: 93: _delay((unsigned long)((10)*(20000000/4000.0)));
  7912  064C  3041               	movlw	65
  7913  064D  278E               	call	PL24	;select bank 0
  7914  064E  00D5               	movwf	??_measure_freq+1
  7915  064F  30EE               	movlw	238
  7916  0650  00D4               	movwf	??_measure_freq
  7917  0651                     u3697:	
  7918  0651  0BD4               	decfsz	??_measure_freq,f
  7919  0652  2E51               	goto	u3697
  7920  0653  0BD5               	decfsz	??_measure_freq+1,f
  7921  0654  2E51               	goto	u3697
  7922  0655  0064               	clrwdt
  7923                           
  7924                           ;measure.c: 94: _delay((unsigned long)((10)*(20000000/4000.0)));
  7925  0656  3041               	movlw	65
  7926  0657  278E               	call	PL24	;select bank 0
  7927  0658  00D5               	movwf	??_measure_freq+1
  7928  0659  30EE               	movlw	238
  7929  065A  00D4               	movwf	??_measure_freq
  7930  065B                     u3707:	
  7931  065B  0BD4               	decfsz	??_measure_freq,f
  7932  065C  2E5B               	goto	u3707
  7933  065D  0BD5               	decfsz	??_measure_freq+1,f
  7934  065E  2E5B               	goto	u3707
  7935  065F  0064               	clrwdt
  7936                           
  7937                           ;measure.c: 95: _delay((unsigned long)((10)*(20000000/4000.0)));
  7938  0660  3041               	movlw	65
  7939  0661  278E               	call	PL24	;select bank 0
  7940  0662  00D5               	movwf	??_measure_freq+1
  7941  0663  30EE               	movlw	238
  7942  0664  00D4               	movwf	??_measure_freq
  7943  0665                     u3717:	
  7944  0665  0BD4               	decfsz	??_measure_freq,f
  7945  0666  2E65               	goto	u3717
  7946  0667  0BD5               	decfsz	??_measure_freq+1,f
  7947  0668  2E65               	goto	u3717
  7948  0669  0064               	clrwdt
  7949                           
  7950                           ;measure.c: 96: _delay((unsigned long)((10)*(20000000/4000.0)));
  7951  066A  3041               	movlw	65
  7952  066B  278E               	call	PL24	;select bank 0
  7953  066C  00D5               	movwf	??_measure_freq+1
  7954  066D  30EE               	movlw	238
  7955  066E  00D4               	movwf	??_measure_freq
  7956  066F                     u3727:	
  7957  066F  0BD4               	decfsz	??_measure_freq,f
  7958  0670  2E6F               	goto	u3727
  7959  0671  0BD5               	decfsz	??_measure_freq+1,f
  7960  0672  2E6F               	goto	u3727
  7961  0673  0064               	clrwdt
  7962                           
  7963                           ;measure.c: 97: _delay((unsigned long)((10)*(20000000/4000.0)));
  7964  0674  3041               	movlw	65
  7965  0675  278E               	call	PL24	;select bank 0
  7966  0676  00D5               	movwf	??_measure_freq+1
  7967  0677  30EE               	movlw	238
  7968  0678  00D4               	movwf	??_measure_freq
  7969  0679                     u3737:	
  7970  0679  0BD4               	decfsz	??_measure_freq,f
  7971  067A  2E79               	goto	u3737
  7972  067B  0BD5               	decfsz	??_measure_freq+1,f
  7973  067C  2E79               	goto	u3737
  7974  067D  0064               	clrwdt
  7975                           
  7976                           ;measure.c: 98: _delay((unsigned long)((10)*(20000000/4000.0)));
  7977  067E  3041               	movlw	65
  7978  067F  278E               	call	PL24	;select bank 0
  7979  0680  00D5               	movwf	??_measure_freq+1
  7980  0681  30EE               	movlw	238
  7981  0682  00D4               	movwf	??_measure_freq
  7982  0683                     u3747:	
  7983  0683  0BD4               	decfsz	??_measure_freq,f
  7984  0684  2E83               	goto	u3747
  7985  0685  0BD5               	decfsz	??_measure_freq+1,f
  7986  0686  2E83               	goto	u3747
  7987  0687  0064               	clrwdt
  7988                           
  7989                           ;measure.c: 99: _delay((unsigned long)((10)*(20000000/4000.0)));
  7990  0688  3041               	movlw	65
  7991  0689  278E               	call	PL24	;select bank 0
  7992  068A  00D5               	movwf	??_measure_freq+1
  7993  068B  30EE               	movlw	238
  7994  068C  00D4               	movwf	??_measure_freq
  7995  068D                     u3757:	
  7996  068D  0BD4               	decfsz	??_measure_freq,f
  7997  068E  2E8D               	goto	u3757
  7998  068F  0BD5               	decfsz	??_measure_freq+1,f
  7999  0690  2E8D               	goto	u3757
  8000  0691  0064               	clrwdt
  8001                           
  8002                           ;measure.c: 104: TRISA |= 0b00010000;
  8003  0692  1683               	bsf	3,5	;RP0=1, select bank1
  8004  0693  1303               	bcf	3,6	;RP1=0, select bank1
  8005  0694  1605               	bsf	5,4	;volatile
  8006                           
  8007                           ;measure.c: 107: count = timer0_read_ps();
  8008  0695  2791  120A  118A   	fcall	_timer0_read_ps
  8009  0698  0874               	movf	?_timer0_read_ps+1,w
  8010  0699  00D7               	movwf	measure_freq@count+1
  8011  069A  0873               	movf	?_timer0_read_ps,w
  8012  069B  00D6               	movwf	measure_freq@count
  8013                           
  8014                           ;measure.c: 112: buffer_init();
  8015  069C  26BA  120A  118A   	fcall	_buffer_init
  8016                           
  8017                           ;measure.c: 113: buffer_puts("Freq=");
  8018  069F  3087               	movlw	(STR_3-__stringbase)& (0+255)
  8019  06A0  26C0  120A  118A   	fcall	_buffer_puts
  8020  06A3  278E               	call	PL24	;select bank 0
  8021                           
  8022                           ;measure.c: 114: format_number(count, 10, 5);
  8023  06A4  0857               	movf	measure_freq@count+1,w
  8024  06A5  00A4               	movwf	?_format_number+1
  8025  06A6  0856               	movf	measure_freq@count,w
  8026  06A7  00A3               	movwf	?_format_number
  8027  06A8  300A               	movlw	10
  8028  06A9  00A5               	movwf	?_format_number+2
  8029  06AA  3005               	movlw	5
  8030  06AB  00A6               	movwf	?_format_number+3
  8031  06AC  120A  158A  26FA   	fcall	_format_number
      +       120A  118A         
  8032                           
  8033                           ;measure.c: 115: print_buffer();
  8034  06B1  27CE  120A  118A   	fcall	_print_buffer
  8035  06B4  278E               	call	PL24	;select bank 0
  8036                           
  8037                           ;measure.c: 117: return count;
  8038  06B5  0857               	movf	measure_freq@count+1,w
  8039  06B6  00D3               	movwf	?_measure_freq+1
  8040  06B7  0856               	movf	measure_freq@count,w
  8041  06B8  00D2               	movwf	?_measure_freq
  8042  06B9  0008               	return
  8043  06BA                     __end_of_measure_freq:	
  8044  06BA                     __ptext1322:	
  8045 ;; =============== function _print_unit ends ============
  8046                           
  8047                           
  8048 ;; *************** function _buffer_init *****************
  8049 ;; Defined at:
  8050 ;;		line 10 in file "../../../lib/buffer.c"
  8051 ;; Parameters:    Size  Location     Type
  8052 ;;		None
  8053 ;; Auto vars:     Size  Location     Type
  8054 ;;		None
  8055 ;; Return value:  Size  Location     Type
  8056 ;;		None               void
  8057 ;; Registers used:
  8058 ;;		wreg, status,2, status,0
  8059 ;; Tracked objects:
  8060 ;;		On entry : 60/0
  8061 ;;		On exit  : 60/60
  8062 ;;		Unchanged: FFF9F/0
  8063 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8064 ;;      Params:         0       0       0       0       0
  8065 ;;      Locals:         0       0       0       0       0
  8066 ;;      Temps:          0       0       0       0       0
  8067 ;;      Totals:         0       0       0       0       0
  8068 ;;Total ram usage:        0 bytes
  8069 ;; Hardware stack levels used:    1
  8070 ;; Hardware stack levels required when called:    1
  8071 ;; This function calls:
  8072 ;;		Nothing
  8073 ;; This function is called by:
  8074 ;;		_measure_freq
  8075 ;; This function uses a non-reentrant model
  8076 ;;
  8077  06BA                     _buffer_init:	
  8078                           
  8079                           ;buffer.c: 11: buffer.p = 0;
  8080                           
  8081                           ; Regs used in _buffer_init: [wreg+status,2+status,0]
  8082  06BA  30F0               	movlw	-16
  8083  06BB  278B               	call	PL23	;select bank 3
  8084  06BC  05CC               	andwf	(_buffer^(0+384)+16),f
  8085                           
  8086                           ;buffer.c: 12: buffer.n = 0;
  8087  06BD  300F               	movlw	-241
  8088  06BE  05CC               	andwf	(_buffer^(0+384)+16),f
  8089  06BF  0008               	return
  8090  06C0                     __end_of_buffer_init:	
  8091  06C0                     __ptext1306:	
  8092 ;; =============== function _ldexp ends ============
  8093                           
  8094                           
  8095 ;; *************** function _buffer_puts *****************
  8096 ;; Defined at:
  8097 ;;		line 56 in file "../../../lib/buffer.c"
  8098 ;; Parameters:    Size  Location     Type
  8099 ;;  x               1    wreg     PTR const unsigned char 
  8100 ;;		 -> STR_3(6), 
  8101 ;; Auto vars:     Size  Location     Type
  8102 ;;  x               1    7[COMMON] PTR const unsigned char 
  8103 ;;		 -> STR_3(6), 
  8104 ;; Return value:  Size  Location     Type
  8105 ;;                  1    wreg      unsigned char 
  8106 ;; Registers used:
  8107 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  8108 ;; Tracked objects:
  8109 ;;		On entry : 60/60
  8110 ;;		On exit  : 0/0
  8111 ;;		Unchanged: FFE00/0
  8112 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8113 ;;      Params:         0       0       0       0       0
  8114 ;;      Locals:         1       0       0       0       0
  8115 ;;      Temps:          0       0       0       0       0
  8116 ;;      Totals:         1       0       0       0       0
  8117 ;;Total ram usage:        1 bytes
  8118 ;; Hardware stack levels used:    1
  8119 ;; Hardware stack levels required when called:    2
  8120 ;; This function calls:
  8121 ;;		_buffer_putch
  8122 ;; This function is called by:
  8123 ;;		_measure_freq
  8124 ;; This function uses a non-reentrant model
  8125 ;;
  8126  06C0                     _buffer_puts:	
  8127                           
  8128                           ; Regs used in _buffer_puts: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  8129                           ;buffer_puts@x stored from wreg
  8130  06C0  00F7               	movwf	buffer_puts@x
  8131  06C1                     l8869:	
  8132                           ;buffer.c: 57: while(*x) {
  8133                           
  8134  06C1  0877               	movf	buffer_puts@x,w
  8135  06C2  0084               	movwf	4
  8136  06C3  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  8137  06C8  3800               	iorlw	0
  8138  06C9  1903               	btfsc	3,2
  8139  06CA  0008               	return
  8140                           
  8141                           ;buffer.c: 58: buffer_putch(*x);
  8142  06CB  0877               	movf	buffer_puts@x,w
  8143  06CC  0084               	movwf	4
  8144  06CD  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  8145  06D2  120A  158A  25CF   	fcall	_buffer_putch
      +       120A  118A         
  8146                           
  8147                           ;buffer.c: 59: ++x;
  8148  06D7  0AF7               	incf	buffer_puts@x,f
  8149  06D8  2EC1               	goto	l8869
  8150  06D9                     __end_of_buffer_puts:	
  8151  06D9                     PL2:	
  8152  06D9  1683               	bsf	3,5	;RP0=1, select bank1
  8153  06DA  0846               	movf	(measure_inductance@Lin+3)^(0+128),w
  8154  06DB  1283               	bcf	3,5	;RP0=0, select bank0
  8155  06DC  00A7               	movwf	?___flge+7
  8156  06DD  1683               	bsf	3,5	;RP0=1, select bank1
  8157  06DE  0845               	movf	(measure_inductance@Lin+2)^(0+128),w
  8158  06DF  1283               	bcf	3,5	;RP0=0, select bank0
  8159  06E0  00A6               	movwf	?___flge+6
  8160  06E1  1683               	bsf	3,5	;RP0=1, select bank1
  8161  06E2  0844               	movf	(measure_inductance@Lin+1)^(0+128),w
  8162  06E3  1283               	bcf	3,5	;RP0=0, select bank0
  8163  06E4  00A5               	movwf	?___flge+5
  8164  06E5  1683               	bsf	3,5	;RP0=1, select bank1
  8165  06E6  0843               	movf	measure_inductance@Lin^(0+128),w
  8166  06E7  1283               	bcf	3,5	;RP0=0, select bank0
  8167  06E8  00A4               	movwf	?___flge+4
  8168  06E9  0008               	return
  8169  06EA                     PL3:	
  8170  06EA  1683               	bsf	3,5	;RP0=1, select bank1
  8171  06EB  0846               	movf	(measure_inductance@Lin+3)^(0+128),w
  8172  06EC  1283               	bcf	3,5	;RP0=0, select bank0
  8173  06ED  00B9               	movwf	?___fldiv+7
  8174  06EE  1683               	bsf	3,5	;RP0=1, select bank1
  8175  06EF  0845               	movf	(measure_inductance@Lin+2)^(0+128),w
  8176  06F0  1283               	bcf	3,5	;RP0=0, select bank0
  8177  06F1  00B8               	movwf	?___fldiv+6
  8178  06F2  1683               	bsf	3,5	;RP0=1, select bank1
  8179  06F3  0844               	movf	(measure_inductance@Lin+1)^(0+128),w
  8180  06F4  1283               	bcf	3,5	;RP0=0, select bank0
  8181  06F5  00B7               	movwf	?___fldiv+5
  8182  06F6  1683               	bsf	3,5	;RP0=1, select bank1
  8183  06F7  0843               	movf	measure_inductance@Lin^(0+128),w
  8184  06F8  1283               	bcf	3,5	;RP0=0, select bank0
  8185  06F9  00B6               	movwf	?___fldiv+4
  8186  06FA  0008               	return
  8187  06FB                     PL4:	
  8188  06FB  0835               	movf	?___fldiv+3,w
  8189  06FC  1683               	bsf	3,5	;RP0=1, select bank1
  8190  06FD  00C6               	movwf	(measure_inductance@Lin+3)^(0+128)
  8191  06FE  1283               	bcf	3,5	;RP0=0, select bank0
  8192  06FF  0834               	movf	?___fldiv+2,w
  8193  0700  1683               	bsf	3,5	;RP0=1, select bank1
  8194  0701  00C5               	movwf	(measure_inductance@Lin+2)^(0+128)
  8195  0702  1283               	bcf	3,5	;RP0=0, select bank0
  8196  0703  0833               	movf	?___fldiv+1,w
  8197  0704  1683               	bsf	3,5	;RP0=1, select bank1
  8198  0705  00C4               	movwf	(measure_inductance@Lin+1)^(0+128)
  8199  0706  1283               	bcf	3,5	;RP0=0, select bank0
  8200  0707  0832               	movf	?___fldiv,w
  8201  0708  1683               	bsf	3,5	;RP0=1, select bank1
  8202  0709  00C3               	movwf	measure_inductance@Lin^(0+128)
  8203  070A  0008               	return
  8204  070B                     PL7:	
  8205  070B  00C5               	movwf	?___flmul
  8206  070C  1683               	bsf	3,5	;RP0=1, select bank1
  8207  070D  083C               	movf	(_measure_inductance$5382+3)^(0+128),w
  8208  070E  1283               	bcf	3,5	;RP0=0, select bank0
  8209  070F  00CC               	movwf	?___flmul+7
  8210  0710  1683               	bsf	3,5	;RP0=1, select bank1
  8211  0711  083B               	movf	(_measure_inductance$5382+2)^(0+128),w
  8212  0712  1283               	bcf	3,5	;RP0=0, select bank0
  8213  0713  00CB               	movwf	?___flmul+6
  8214  0714  1683               	bsf	3,5	;RP0=1, select bank1
  8215  0715  083A               	movf	(_measure_inductance$5382+1)^(0+128),w
  8216  0716  1283               	bcf	3,5	;RP0=0, select bank0
  8217  0717  00CA               	movwf	?___flmul+5
  8218  0718  1683               	bsf	3,5	;RP0=1, select bank1
  8219  0719  0839               	movf	_measure_inductance$5382^(0+128),w
  8220  071A  1283               	bcf	3,5	;RP0=0, select bank0
  8221  071B  00C9               	movwf	?___flmul+4
  8222  071C  0008               	return
  8223  071D                     PL8:	
  8224  071D  1683               	bsf	3,5	;RP0=1, select bank1
  8225  071E  0840               	movf	(_measure_inductance$5383+3)^(0+128),w
  8226  071F  1283               	bcf	3,5	;RP0=0, select bank0
  8227  0720  00CC               	movwf	?___flmul+7
  8228  0721  1683               	bsf	3,5	;RP0=1, select bank1
  8229  0722  083F               	movf	(_measure_inductance$5383+2)^(0+128),w
  8230  0723  1283               	bcf	3,5	;RP0=0, select bank0
  8231  0724  00CB               	movwf	?___flmul+6
  8232  0725  1683               	bsf	3,5	;RP0=1, select bank1
  8233  0726  083E               	movf	(_measure_inductance$5383+1)^(0+128),w
  8234  0727  1283               	bcf	3,5	;RP0=0, select bank0
  8235  0728  00CA               	movwf	?___flmul+5
  8236  0729  1683               	bsf	3,5	;RP0=1, select bank1
  8237  072A  083D               	movf	_measure_inductance$5383^(0+128),w
  8238  072B  1283               	bcf	3,5	;RP0=0, select bank0
  8239  072C  00C9               	movwf	?___flmul+4
  8240  072D  0008               	return
  8241  072E                     PL9:	
  8242  072E  07D2               	addwf	___flmul@f3_as_product,f
  8243  072F  084A               	movf	___flmul@f2+1,w
  8244  0730  1103               	clrz
  8245  0731  1803               	skipnc
  8246  0732  3E01               	addlw	1
  8247  0733  1D03               	btfss	3,2
  8248  0734  07D3               	addwf	___flmul@f3_as_product+1,f
  8249  0735  084B               	movf	___flmul@f2+2,w
  8250  0736  1103               	clrz
  8251  0737  1803               	skipnc
  8252  0738  3E01               	addlw	1
  8253  0739  1D03               	btfss	3,2
  8254  073A  07D4               	addwf	___flmul@f3_as_product+2,f
  8255  073B  084C               	movf	___flmul@f2+3,w
  8256  073C  1103               	clrz
  8257  073D  0008               	return
  8258  073E                     PL10:	
  8259  073E  0848               	movf	?___flmul+3,w
  8260  073F  1683               	bsf	3,5	;RP0=1, select bank1
  8261  0740  00C0               	movwf	(_measure_inductance$5383+3)^(0+128)
  8262  0741  1283               	bcf	3,5	;RP0=0, select bank0
  8263  0742  0847               	movf	?___flmul+2,w
  8264  0743  1683               	bsf	3,5	;RP0=1, select bank1
  8265  0744  00BF               	movwf	(_measure_inductance$5383+2)^(0+128)
  8266  0745  1283               	bcf	3,5	;RP0=0, select bank0
  8267  0746  0846               	movf	?___flmul+1,w
  8268  0747  1683               	bsf	3,5	;RP0=1, select bank1
  8269  0748  00BE               	movwf	(_measure_inductance$5383+1)^(0+128)
  8270  0749  1283               	bcf	3,5	;RP0=0, select bank0
  8271  074A  0845               	movf	?___flmul,w
  8272  074B  1683               	bsf	3,5	;RP0=1, select bank1
  8273  074C  00BD               	movwf	_measure_inductance$5383^(0+128)
  8274  074D  0008               	return
  8275  074E                     PL11:	
  8276  074E  0848               	movf	?___flmul+3,w
  8277  074F  1683               	bsf	3,5	;RP0=1, select bank1
  8278  0750  00C6               	movwf	(measure_inductance@Lin+3)^(0+128)
  8279  0751  1283               	bcf	3,5	;RP0=0, select bank0
  8280  0752  0847               	movf	?___flmul+2,w
  8281  0753  1683               	bsf	3,5	;RP0=1, select bank1
  8282  0754  00C5               	movwf	(measure_inductance@Lin+2)^(0+128)
  8283  0755  1283               	bcf	3,5	;RP0=0, select bank0
  8284  0756  0846               	movf	?___flmul+1,w
  8285  0757  1683               	bsf	3,5	;RP0=1, select bank1
  8286  0758  00C4               	movwf	(measure_inductance@Lin+1)^(0+128)
  8287  0759  1283               	bcf	3,5	;RP0=0, select bank0
  8288  075A  0845               	movf	?___flmul,w
  8289  075B  1683               	bsf	3,5	;RP0=1, select bank1
  8290  075C  00C3               	movwf	measure_inductance@Lin^(0+128)
  8291  075D  0008               	return
  8292  075E                     PL12:	
  8293  075E  0848               	movf	?___flmul+3,w
  8294  075F  00EE               	movwf	?___flsub+7
  8295  0760  0847               	movf	?___flmul+2,w
  8296  0761  00ED               	movwf	?___flsub+6
  8297  0762  0846               	movf	?___flmul+1,w
  8298  0763  00EC               	movwf	?___flsub+5
  8299  0764  0845               	movf	?___flmul,w
  8300  0765  00EB               	movwf	?___flsub+4
  8301  0766  0008               	return
  8302  0767                     PL15:	
  8303  0767  1683               	bsf	3,5	;RP0=1, select bank3
  8304  0768  1703               	bsf	3,6	;RP1=1, select bank3
  8305  0769  084D               	movf	_F1^(0+384),w
  8306  076A  1283               	bcf	3,5	;RP0=0, select bank0
  8307  076B  1303               	bcf	3,6	;RP1=0, select bank0
  8308  076C  00C9               	movwf	?___flmul+4
  8309  076D  0008               	return
  8310  076E                     PL16:	
  8311  076E  1683               	bsf	3,5	;RP0=1, select bank3
  8312  076F  1703               	bsf	3,6	;RP1=1, select bank3
  8313  0770  0834               	movf	_F3^(0+384),w
  8314  0771  1283               	bcf	3,5	;RP0=0, select bank0
  8315  0772  1303               	bcf	3,6	;RP1=0, select bank0
  8316  0773  00C5               	movwf	?___flmul
  8317  0774  1683               	bsf	3,5	;RP0=1, select bank1
  8318  0775  0008               	return
  8319  0776                     PL17:	
  8320  0776  00AB               	movwf	??_eval_poly^(0+128)
  8321  0777  1003               	clrc
  8322  0778  0DAB               	rlf	??_eval_poly^(0+128),f
  8323  0779  1003               	clrc
  8324  077A  0D2B               	rlf	??_eval_poly^(0+128),w
  8325  077B  0728               	addwf	eval_poly@d^(0+128),w
  8326  077C  0084               	movwf	4
  8327  077D  0008               	return
  8328  077E                     PL18:	
  8329  077E  1683               	bsf	3,5	;RP0=1, select bank3
  8330  077F  1703               	bsf	3,6	;RP1=1, select bank3
  8331  0780  0830               	movf	_F2^(0+384),w
  8332  0781  1283               	bcf	3,5	;RP0=0, select bank0
  8333  0782  1303               	bcf	3,6	;RP1=0, select bank0
  8334  0783  0008               	return
  8335  0784                     PL19:	
  8336  0784  1683               	bsf	3,5	;RP0=1, select bank1
  8337  0785  00B9               	movwf	_measure_inductance$5382^(0+128)
  8338  0786  1703               	bsf	3,6	;RP1=1, select bank3
  8339  0787  0833               	movf	(_F2+3)^(0+384),w
  8340  0788  1283               	bcf	3,5	;RP0=0, select bank0
  8341  0789  1303               	bcf	3,6	;RP1=0, select bank0
  8342  078A  0008               	return
  8343  078B                     PL23:	
  8344  078B  1683               	bsf	3,5	;RP0=1, select bank3
  8345  078C  1703               	bsf	3,6	;RP1=1, select bank3
  8346  078D  0008               	return
  8347  078E                     PL24:	
  8348  078E  1283               	bcf	3,5	;RP0=0, select bank0
  8349  078F  1303               	bcf	3,6	;RP1=0, select bank0
  8350  0790  0008               	return
  8351  0791                     __ptext1307:	
  8352 ;; =============== function _buffer_puts ends ============
  8353                           
  8354                           
  8355 ;; *************** function _timer0_read_ps *****************
  8356 ;; Defined at:
  8357 ;;		line 80 in file "../../../lib/timer.c"
  8358 ;; Parameters:    Size  Location     Type
  8359 ;;		None
  8360 ;; Auto vars:     Size  Location     Type
  8361 ;;  count           2    6[COMMON] unsigned int 
  8362 ;;  prev            1    5[COMMON] unsigned char 
  8363 ;; Return value:  Size  Location     Type
  8364 ;;                  2    3[COMMON] unsigned short 
  8365 ;; Registers used:
  8366 ;;		wreg, status,2, status,0, btemp+1
  8367 ;; Tracked objects:
  8368 ;;		On entry : 60/20
  8369 ;;		On exit  : 60/0
  8370 ;;		Unchanged: 0/0
  8371 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8372 ;;      Params:         2       0       0       0       0
  8373 ;;      Locals:         3       0       0       0       0
  8374 ;;      Temps:          0       4       0       0       0
  8375 ;;      Totals:         5       4       0       0       0
  8376 ;;Total ram usage:        9 bytes
  8377 ;; Hardware stack levels used:    1
  8378 ;; Hardware stack levels required when called:    1
  8379 ;; This function calls:
  8380 ;;		Nothing
  8381 ;; This function is called by:
  8382 ;;		_measure_freq
  8383 ;; This function uses a non-reentrant model
  8384 ;;
  8385  0791                     _timer0_read_ps:	
  8386                           
  8387                           ;timer.c: 81: uint8_t prev = TMR0;
  8388                           
  8389                           ; Regs used in _timer0_read_ps: [wreg+status,2+status,0+btemp+1]
  8390  0791  1283               	bcf	3,5	;RP0=0, select bank0
  8391  0792  0801               	movf	1,w	;volatile
  8392  0793  00F5               	movwf	timer0_read_ps@prev
  8393                           
  8394                           ;timer.c: 82: uint16_t count = 0;
  8395  0794  01F6               	clrf	timer0_read_ps@count
  8396  0795  01F7               	clrf	timer0_read_ps@count+1
  8397                           
  8398                           ;timer.c: 84: T0CS = 1;
  8399  0796  1683               	bsf	3,5	;RP0=1, select bank1
  8400  0797  1681               	bsf	1,5
  8401  0798  2FA0               	goto	l8839
  8402  0799                     l8855:	
  8403  0799  3001               	movlw	1
  8404  079A  0277               	subwf	timer0_read_ps@count+1,w
  8405  079B  3000               	movlw	0
  8406  079C  1903               	skipnz
  8407  079D  0276               	subwf	timer0_read_ps@count,w
  8408  079E  1803               	btfsc	3,0
  8409  079F  2FB2               	goto	l8857
  8410  07A0                     l8839:	
  8411                           
  8412                           ;timer.c: 88: T0SE = 1;
  8413  07A0  1683               	bsf	3,5	;RP0=1, select bank1
  8414  07A1  1601               	bsf	1,4
  8415                           
  8416                           ;timer.c: 90: _nop();
  8417  07A2  0000               	nop
  8418                           
  8419                           ;timer.c: 91: _nop();
  8420  07A3  0000               	nop
  8421                           
  8422                           ;timer.c: 93: T0SE = 0;
  8423  07A4  1683               	bsf	3,5	;RP0=1, select bank1
  8424  07A5  1303               	bcf	3,6	;RP1=0, select bank1
  8425  07A6  1201               	bcf	1,4
  8426                           
  8427                           ;timer.c: 95: _nop();
  8428  07A7  0000               	nop
  8429                           
  8430                           ;timer.c: 96: _nop();
  8431  07A8  0000               	nop
  8432                           
  8433                           ;timer.c: 98: ++count;
  8434  07A9  0AF6               	incf	timer0_read_ps@count,f
  8435  07AA  1903               	skipnz
  8436  07AB  0AF7               	incf	timer0_read_ps@count+1,f
  8437                           
  8438                           ;timer.c: 101: } while(prev == TMR0 && count <= 255);
  8439  07AC  0875               	movf	timer0_read_ps@prev,w
  8440  07AD  1283               	bcf	3,5	;RP0=0, select bank0
  8441  07AE  1303               	bcf	3,6	;RP1=0, select bank0
  8442  07AF  0601               	xorwf	1,w	;volatile
  8443  07B0  1903               	btfsc	3,2
  8444  07B1  2F99               	goto	l8855
  8445  07B2                     l8857:	
  8446                           
  8447                           ;timer.c: 103: count = ((prev << 8) + (256 - count));
  8448  07B2  0875               	movf	timer0_read_ps@prev,w
  8449  07B3  00A0               	movwf	??_timer0_read_ps
  8450  07B4  01A1               	clrf	??_timer0_read_ps+1
  8451  07B5  00A1               	movwf	??_timer0_read_ps+1
  8452  07B6  01A0               	clrf	??_timer0_read_ps
  8453  07B7  0876               	movf	timer0_read_ps@count,w
  8454  07B8  0220               	subwf	??_timer0_read_ps,w
  8455  07B9  00A2               	movwf	??_timer0_read_ps+2
  8456  07BA  0877               	movf	timer0_read_ps@count+1,w
  8457  07BB  1C03               	skipc
  8458  07BC  0A77               	incf	timer0_read_ps@count+1,w
  8459  07BD  0221               	subwf	??_timer0_read_ps+1,w
  8460  07BE  00A3               	movwf	??_timer0_read_ps+3
  8461  07BF  0822               	movf	??_timer0_read_ps+2,w
  8462  07C0  3E00               	addlw	0
  8463  07C1  00F6               	movwf	timer0_read_ps@count
  8464  07C2  0823               	movf	??_timer0_read_ps+3,w
  8465  07C3  1803               	skipnc
  8466  07C4  3E01               	addlw	1
  8467  07C5  3E01               	addlw	1
  8468  07C6  00F7               	movwf	timer0_read_ps@count+1
  8469                           
  8470                           ;timer.c: 104: return count;
  8471  07C7  00F4               	movwf	?_timer0_read_ps+1
  8472  07C8  0876               	movf	timer0_read_ps@count,w
  8473  07C9  00F3               	movwf	?_timer0_read_ps
  8474  07CA  0008               	return
  8475  07CB                     __end_of_timer0_read_ps:	
  8476  07CB                     PL28:	
  8477  07CB  1283               	bcf	3,5	;RP0=0, select bank0
  8478  07CC  1303               	bcf	3,6	;RP1=0, select bank0
  8479  07CD  0008               	return
  8480  07CE                     __ptext1295:	
  8481 ;; =============== function _buf_to_ser ends ============
  8482                           
  8483                           
  8484 ;; *************** function _print_buffer *****************
  8485 ;; Defined at:
  8486 ;;		line 232 in file "../../../src/print.c"
  8487 ;; Parameters:    Size  Location     Type
  8488 ;;		None
  8489 ;; Auto vars:     Size  Location     Type
  8490 ;;  i               1   49[BANK0 ] unsigned char 
  8491 ;; Return value:  Size  Location     Type
  8492 ;;		None               void
  8493 ;; Registers used:
  8494 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  8495 ;; Tracked objects:
  8496 ;;		On entry : 60/0
  8497 ;;		On exit  : 0/0
  8498 ;;		Unchanged: FFE9F/0
  8499 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8500 ;;      Params:         0       0       0       0       0
  8501 ;;      Locals:         0       1       0       0       0
  8502 ;;      Temps:          0       0       0       0       0
  8503 ;;      Totals:         0       1       0       0       0
  8504 ;;Total ram usage:        1 bytes
  8505 ;; Hardware stack levels used:    1
  8506 ;; Hardware stack levels required when called:    3
  8507 ;; This function calls:
  8508 ;;		_ser_putch
  8509 ;;		_ser_puts
  8510 ;; This function is called by:
  8511 ;;		_measure_freq
  8512 ;; This function uses a non-reentrant model
  8513 ;;
  8514  07CE                     _print_buffer:	
  8515                           
  8516                           ;print.c: 234: uint8_t i;
  8517                           ;print.c: 235: for(i = 0; i < buffer.n; i++) {
  8518                           
  8519                           ; Regs used in _print_buffer: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8520  07CE  01D1               	clrf	print_buffer@i
  8521  07CF                     l9139:	
  8522  07CF  1683               	bsf	3,5	;RP0=1, select bank3
  8523  07D0  1703               	bsf	3,6	;RP1=1, select bank3
  8524  07D1  0E4C               	swapf	(_buffer^(0+384)+16),w
  8525  07D2  390F               	andlw	15
  8526  07D3  1283               	bcf	3,5	;RP0=0, select bank0
  8527  07D4  1303               	bcf	3,6	;RP1=0, select bank0
  8528  07D5  0251               	subwf	print_buffer@i,w
  8529  07D6  1803               	btfsc	3,0
  8530  07D7  2FE5               	goto	l9141
  8531                           
  8532                           ;print.c: 236: ser_putch(buffer.x[i]);
  8533  07D8  0851               	movf	print_buffer@i,w
  8534  07D9  3EBC               	addlw	_buffer& (0+255)
  8535  07DA  0084               	movwf	4
  8536  07DB  1783               	bsf	3,7	;select IRP bank3
  8537  07DC  0800               	movf	0,w
  8538  07DD  120A  158A  244E   	fcall	_ser_putch
      +       120A  118A         
  8539  07E2  1283               	bcf	3,5	;RP0=0, select bank0
  8540  07E3  0AD1               	incf	print_buffer@i,f
  8541  07E4  2FCF               	goto	l9139
  8542  07E5                     l9141:	
  8543                           
  8544                           ;print.c: 237: }
  8545                           ;print.c: 238: ser_puts("\r\n");
  8546  07E5  3097               	movlw	(STR_1-__stringbase)& (0+255)
  8547  07E6  120A  158A  2C37   	ljmp	_ser_puts
  8548  07E9                     __end_of_print_buffer:	
  8549  07E9                     PL31:	
  8550  07E9  1283               	bcf	3,5	;RP0=0, select bank0
  8551  07EA  1303               	bcf	3,6	;RP1=0, select bank0
  8552  07EB  0008               	return
  8553  07EC                     PL32:	
  8554  07EC  1683               	bsf	3,5	;RP0=1, select bank3
  8555  07ED  1703               	bsf	3,6	;RP1=1, select bank3
  8556  07EE  0008               	return
  8557  07EF                     PL33:	
  8558  07EF  1283               	bcf	3,5	;RP0=0, select bank0
  8559  07F0  1303               	bcf	3,6	;RP1=0, select bank0
  8560  07F1  0008               	return
  8561                           
  8562                           	psect	text1288
  8563  127A                     __ptext1288:	
  8564 ;; =============== function _pow ends ============
  8565                           
  8566                           
  8567 ;; *************** function _log10 *****************
  8568 ;; Defined at:
  8569 ;;		line 40 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\log.c"
  8570 ;; Parameters:    Size  Location     Type
  8571 ;;  x               4   26[BANK1 ] unsigned char 
  8572 ;; Auto vars:     Size  Location     Type
  8573 ;;		None
  8574 ;; Return value:  Size  Location     Type
  8575 ;;                  4   26[BANK1 ] unsigned char 
  8576 ;; Registers used:
  8577 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  8578 ;; Tracked objects:
  8579 ;;		On entry : 60/20
  8580 ;;		On exit  : 60/20
  8581 ;;		Unchanged: FFE9F/0
  8582 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8583 ;;      Params:         0       0       4       0       0
  8584 ;;      Locals:         0       0       4       0       0
  8585 ;;      Temps:          0       0       0       0       0
  8586 ;;      Totals:         0       0       8       0       0
  8587 ;;Total ram usage:        8 bytes
  8588 ;; Hardware stack levels used:    1
  8589 ;; Hardware stack levels required when called:    5
  8590 ;; This function calls:
  8591 ;;		_log
  8592 ;;		___flmul
  8593 ;; This function is called by:
  8594 ;;		_format_double
  8595 ;; This function uses a non-reentrant model
  8596 ;;
  8597  127A                     _log10:	
  8598                           
  8599                           ; Regs used in _log10: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  8600  127A  083D               	movf	(log10@x+3)^(0+128),w
  8601  127B  00B7               	movwf	(?_log+3)^(0+128)
  8602  127C  083C               	movf	(log10@x+2)^(0+128),w
  8603  127D  00B6               	movwf	(?_log+2)^(0+128)
  8604  127E  083B               	movf	(log10@x+1)^(0+128),w
  8605  127F  00B5               	movwf	(?_log+1)^(0+128)
  8606  1280  083A               	movf	log10@x^(0+128),w
  8607  1281  00B4               	movwf	?_log^(0+128)
  8608  1282  23F2               	fcall	_log
  8609  1283  0837               	movf	(?_log+3)^(0+128),w
  8610  1284  00C1               	movwf	(_log10$5388+3)^(0+128)
  8611  1285  0836               	movf	(?_log+2)^(0+128),w
  8612  1286  00C0               	movwf	(_log10$5388+2)^(0+128)
  8613  1287  0835               	movf	(?_log+1)^(0+128),w
  8614  1288  00BF               	movwf	(_log10$5388+1)^(0+128)
  8615  1289  0834               	movf	?_log^(0+128),w
  8616  128A  00BE               	movwf	_log10$5388^(0+128)
  8617  128B  303E               	movlw	62
  8618  128C  1283               	bcf	3,5	;RP0=0, select bank0
  8619  128D  00C8               	movwf	?___flmul+3
  8620  128E  30DE               	movlw	222
  8621  128F  00C7               	movwf	?___flmul+2
  8622  1290  305B               	movlw	91
  8623  1291  00C6               	movwf	?___flmul+1
  8624  1292  30D9               	movlw	217
  8625  1293  00C5               	movwf	?___flmul
  8626  1294  1683               	bsf	3,5	;RP0=1, select bank1
  8627  1295  0841               	movf	(_log10$5388+3)^(0+128),w
  8628  1296  1283               	bcf	3,5	;RP0=0, select bank0
  8629  1297  00CC               	movwf	?___flmul+7
  8630  1298  1683               	bsf	3,5	;RP0=1, select bank1
  8631  1299  0840               	movf	(_log10$5388+2)^(0+128),w
  8632  129A  1283               	bcf	3,5	;RP0=0, select bank0
  8633  129B  00CB               	movwf	?___flmul+6
  8634  129C  1683               	bsf	3,5	;RP0=1, select bank1
  8635  129D  083F               	movf	(_log10$5388+1)^(0+128),w
  8636  129E  1283               	bcf	3,5	;RP0=0, select bank0
  8637  129F  00CA               	movwf	?___flmul+5
  8638  12A0  1683               	bsf	3,5	;RP0=1, select bank1
  8639  12A1  083E               	movf	_log10$5388^(0+128),w
  8640  12A2  1283               	bcf	3,5	;RP0=0, select bank0
  8641  12A3  00C9               	movwf	?___flmul+4
  8642  12A4  120A  118A  253E   	fcall	___flmul
  8643  12A7  0848               	movf	?___flmul+3,w
  8644  12A8  1683               	bsf	3,5	;RP0=1, select bank1
  8645  12A9  00BD               	movwf	(?_log10+3)^(0+128)
  8646  12AA  1283               	bcf	3,5	;RP0=0, select bank0
  8647  12AB  0847               	movf	?___flmul+2,w
  8648  12AC  1683               	bsf	3,5	;RP0=1, select bank1
  8649  12AD  00BC               	movwf	(?_log10+2)^(0+128)
  8650  12AE  1283               	bcf	3,5	;RP0=0, select bank0
  8651  12AF  0846               	movf	?___flmul+1,w
  8652  12B0  1683               	bsf	3,5	;RP0=1, select bank1
  8653  12B1  00BB               	movwf	(?_log10+1)^(0+128)
  8654  12B2  1283               	bcf	3,5	;RP0=0, select bank0
  8655  12B3  0845               	movf	?___flmul,w
  8656  12B4  1683               	bsf	3,5	;RP0=1, select bank1
  8657  12B5  00BA               	movwf	?_log10^(0+128)
  8658  12B6  0008               	return
  8659  12B7                     __end_of_log10:	
  8660  12B7                     __ptext1287:	
  8661 ;; =============== function _calibrate ends ============
  8662                           
  8663                           
  8664 ;; *************** function _pow *****************
  8665 ;; Defined at:
  8666 ;;		line 6 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\pow.c"
  8667 ;; Parameters:    Size  Location     Type
  8668 ;;  x               4   37[BANK1 ] unsigned char 
  8669 ;;  y               4   41[BANK1 ] unsigned char 
  8670 ;; Auto vars:     Size  Location     Type
  8671 ;;  yi              4   50[BANK1 ] unsigned long 
  8672 ;;  sign            1   49[BANK1 ] unsigned char 
  8673 ;; Return value:  Size  Location     Type
  8674 ;;                  4   37[BANK1 ] unsigned char 
  8675 ;; Registers used:
  8676 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  8677 ;; Tracked objects:
  8678 ;;		On entry : 60/20
  8679 ;;		On exit  : 60/20
  8680 ;;		Unchanged: FFE00/0
  8681 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8682 ;;      Params:         0       0       8       0       0
  8683 ;;      Locals:         0       0       9       0       0
  8684 ;;      Temps:          0       0       0       0       0
  8685 ;;      Totals:         0       0      17       0       0
  8686 ;;Total ram usage:       17 bytes
  8687 ;; Hardware stack levels used:    1
  8688 ;; Hardware stack levels required when called:    5
  8689 ;; This function calls:
  8690 ;;		___flge
  8691 ;;		___fltol
  8692 ;;		___lltofl
  8693 ;;		___flneg
  8694 ;;		_log
  8695 ;;		___flmul
  8696 ;;		_exp
  8697 ;; This function is called by:
  8698 ;;		_format_double
  8699 ;; This function uses a non-reentrant model
  8700 ;;
  8701  12B7                     _pow:	
  8702                           
  8703                           ; Regs used in _pow: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  8704  12B7  01D1               	clrf	pow@sign^(0+128)
  8705  12B8  0848               	movf	(pow@x+3)^(0+128),w
  8706  12B9  0447               	iorwf	(pow@x+2)^(0+128),w
  8707  12BA  0446               	iorwf	(pow@x+1)^(0+128),w
  8708  12BB  0445               	iorwf	pow@x^(0+128),w
  8709  12BC  1D03               	skipz
  8710  12BD  2ADC               	goto	l9281
  8711  12BE  1283               	bcf	3,5	;RP0=0, select bank0
  8712  12BF  01A0               	clrf	?___flge
  8713  12C0  01A1               	clrf	?___flge+1
  8714  12C1  01A2               	clrf	?___flge+2
  8715  12C2  01A3               	clrf	?___flge+3
  8716  12C3  1683               	bsf	3,5	;RP0=1, select bank1
  8717  12C4  084C               	movf	(pow@y+3)^(0+128),w
  8718  12C5  1283               	bcf	3,5	;RP0=0, select bank0
  8719  12C6  00A7               	movwf	?___flge+7
  8720  12C7  1683               	bsf	3,5	;RP0=1, select bank1
  8721  12C8  084B               	movf	(pow@y+2)^(0+128),w
  8722  12C9  1283               	bcf	3,5	;RP0=0, select bank0
  8723  12CA  00A6               	movwf	?___flge+6
  8724  12CB  1683               	bsf	3,5	;RP0=1, select bank1
  8725  12CC  084A               	movf	(pow@y+1)^(0+128),w
  8726  12CD  1283               	bcf	3,5	;RP0=0, select bank0
  8727  12CE  00A5               	movwf	?___flge+5
  8728  12CF  1683               	bsf	3,5	;RP0=1, select bank1
  8729  12D0  0849               	movf	pow@y^(0+128),w
  8730  12D1  1283               	bcf	3,5	;RP0=0, select bank0
  8731  12D2  00A4               	movwf	?___flge+4
  8732  12D3  120A  118A  25BE   	fcall	___flge
  8733  12D6  1683               	bsf	3,5	;RP0=1, select bank1
  8734  12D7  01C5               	clrf	?_pow^(0+128)
  8735  12D8  01C6               	clrf	(?_pow+1)^(0+128)
  8736  12D9  01C7               	clrf	(?_pow+2)^(0+128)
  8737  12DA  01C8               	clrf	(?_pow+3)^(0+128)
  8738  12DB  0008               	return
  8739  12DC                     l9281:	
  8740  12DC  084C               	movf	(pow@y+3)^(0+128),w
  8741  12DD  044B               	iorwf	(pow@y+2)^(0+128),w
  8742  12DE  044A               	iorwf	(pow@y+1)^(0+128),w
  8743  12DF  0449               	iorwf	pow@y^(0+128),w
  8744  12E0  1D03               	skipz
  8745  12E1  2AEA               	goto	l9287
  8746  12E2  303F               	movlw	63
  8747  12E3  00C8               	movwf	(?_pow+3)^(0+128)
  8748  12E4  3080               	movlw	128
  8749  12E5  00C7               	movwf	(?_pow+2)^(0+128)
  8750  12E6  3000               	movlw	0
  8751  12E7  01C6               	clrf	(?_pow+1)^(0+128)
  8752  12E8  01C5               	clrf	?_pow^(0+128)
  8753  12E9  0008               	return
  8754  12EA                     l9287:	
  8755  12EA  0848               	movf	(pow@x+3)^(0+128),w
  8756  12EB  1283               	bcf	3,5	;RP0=0, select bank0
  8757  12EC  00A3               	movwf	?___flge+3
  8758  12ED  1683               	bsf	3,5	;RP0=1, select bank1
  8759  12EE  0847               	movf	(pow@x+2)^(0+128),w
  8760  12EF  1283               	bcf	3,5	;RP0=0, select bank0
  8761  12F0  00A2               	movwf	?___flge+2
  8762  12F1  1683               	bsf	3,5	;RP0=1, select bank1
  8763  12F2  0846               	movf	(pow@x+1)^(0+128),w
  8764  12F3  1283               	bcf	3,5	;RP0=0, select bank0
  8765  12F4  00A1               	movwf	?___flge+1
  8766  12F5  1683               	bsf	3,5	;RP0=1, select bank1
  8767  12F6  0845               	movf	pow@x^(0+128),w
  8768  12F7  1283               	bcf	3,5	;RP0=0, select bank0
  8769  12F8  00A0               	movwf	?___flge
  8770  12F9  01A4               	clrf	?___flge+4
  8771  12FA  01A5               	clrf	?___flge+5
  8772  12FB  01A6               	clrf	?___flge+6
  8773  12FC  01A7               	clrf	?___flge+7
  8774  12FD  120A  118A  25BE   	fcall	___flge
      +       160A  118A         
  8775  1302  1803               	btfsc	3,0
  8776  1303  2B72               	goto	l9299
  8777  1304  1683               	bsf	3,5	;RP0=1, select bank1
  8778  1305  084C               	movf	(pow@y+3)^(0+128),w
  8779  1306  1283               	bcf	3,5	;RP0=0, select bank0
  8780  1307  00AB               	movwf	?___fltol+3
  8781  1308  1683               	bsf	3,5	;RP0=1, select bank1
  8782  1309  084B               	movf	(pow@y+2)^(0+128),w
  8783  130A  1283               	bcf	3,5	;RP0=0, select bank0
  8784  130B  00AA               	movwf	?___fltol+2
  8785  130C  1683               	bsf	3,5	;RP0=1, select bank1
  8786  130D  084A               	movf	(pow@y+1)^(0+128),w
  8787  130E  1283               	bcf	3,5	;RP0=0, select bank0
  8788  130F  00A9               	movwf	?___fltol+1
  8789  1310  1683               	bsf	3,5	;RP0=1, select bank1
  8790  1311  0849               	movf	pow@y^(0+128),w
  8791  1312  1283               	bcf	3,5	;RP0=0, select bank0
  8792  1313  00A8               	movwf	?___fltol
  8793  1314  120A  158A  2672   	fcall	___fltol
      +       160A  118A         
  8794  1319  082B               	movf	?___fltol+3,w
  8795  131A  1683               	bsf	3,5	;RP0=1, select bank1
  8796  131B  00D5               	movwf	(pow@yi+3)^(0+128)
  8797  131C  1283               	bcf	3,5	;RP0=0, select bank0
  8798  131D  082A               	movf	?___fltol+2,w
  8799  131E  1683               	bsf	3,5	;RP0=1, select bank1
  8800  131F  00D4               	movwf	(pow@yi+2)^(0+128)
  8801  1320  1283               	bcf	3,5	;RP0=0, select bank0
  8802  1321  0829               	movf	?___fltol+1,w
  8803  1322  1683               	bsf	3,5	;RP0=1, select bank1
  8804  1323  00D3               	movwf	(pow@yi+1)^(0+128)
  8805  1324  1283               	bcf	3,5	;RP0=0, select bank0
  8806  1325  0828               	movf	?___fltol,w
  8807  1326  1683               	bsf	3,5	;RP0=1, select bank1
  8808  1327  00D2               	movwf	pow@yi^(0+128)
  8809  1328  0855               	movf	(pow@yi+3)^(0+128),w
  8810  1329  1283               	bcf	3,5	;RP0=0, select bank0
  8811  132A  00A9               	movwf	?___lltofl+3
  8812  132B  1683               	bsf	3,5	;RP0=1, select bank1
  8813  132C  0854               	movf	(pow@yi+2)^(0+128),w
  8814  132D  1283               	bcf	3,5	;RP0=0, select bank0
  8815  132E  00A8               	movwf	?___lltofl+2
  8816  132F  1683               	bsf	3,5	;RP0=1, select bank1
  8817  1330  0853               	movf	(pow@yi+1)^(0+128),w
  8818  1331  1283               	bcf	3,5	;RP0=0, select bank0
  8819  1332  00A7               	movwf	?___lltofl+1
  8820  1333  1683               	bsf	3,5	;RP0=1, select bank1
  8821  1334  0852               	movf	pow@yi^(0+128),w
  8822  1335  1283               	bcf	3,5	;RP0=0, select bank0
  8823  1336  00A6               	movwf	?___lltofl
  8824  1337  23DB  160A  118A   	fcall	___lltofl
  8825  133A  1683               	bsf	3,5	;RP0=1, select bank1
  8826  133B  084C               	movf	(pow@y+3)^(0+128),w
  8827  133C  1283               	bcf	3,5	;RP0=0, select bank0
  8828  133D  0629               	xorwf	?___lltofl+3,w
  8829  133E  1D03               	skipz
  8830  133F  2B50               	goto	u3505
  8831  1340  1683               	bsf	3,5	;RP0=1, select bank1
  8832  1341  084B               	movf	(pow@y+2)^(0+128),w
  8833  1342  1283               	bcf	3,5	;RP0=0, select bank0
  8834  1343  0628               	xorwf	?___lltofl+2,w
  8835  1344  1D03               	skipz
  8836  1345  2B50               	goto	u3505
  8837  1346  1683               	bsf	3,5	;RP0=1, select bank1
  8838  1347  084A               	movf	(pow@y+1)^(0+128),w
  8839  1348  1283               	bcf	3,5	;RP0=0, select bank0
  8840  1349  0627               	xorwf	?___lltofl+1,w
  8841  134A  1D03               	skipz
  8842  134B  2B50               	goto	u3505
  8843  134C  1683               	bsf	3,5	;RP0=1, select bank1
  8844  134D  0849               	movf	pow@y^(0+128),w
  8845  134E  1283               	bcf	3,5	;RP0=0, select bank0
  8846  134F  0626               	xorwf	?___lltofl,w
  8847  1350                     u3505:	
  8848  1350  1903               	skipnz
  8849  1351  2B58               	goto	l9293
  8850  1352  1683               	bsf	3,5	;RP0=1, select bank1
  8851  1353  01C5               	clrf	?_pow^(0+128)
  8852  1354  01C6               	clrf	(?_pow+1)^(0+128)
  8853  1355  01C7               	clrf	(?_pow+2)^(0+128)
  8854  1356  01C8               	clrf	(?_pow+3)^(0+128)
  8855  1357  0008               	return
  8856  1358                     l9293:	
  8857  1358  1683               	bsf	3,5	;RP0=1, select bank1
  8858  1359  0852               	movf	pow@yi^(0+128),w
  8859  135A  00D1               	movwf	pow@sign^(0+128)
  8860  135B  3001               	movlw	1
  8861  135C  05D1               	andwf	pow@sign^(0+128),f
  8862  135D  0848               	movf	(pow@x+3)^(0+128),w
  8863  135E  00F6               	movwf	?___flneg+3
  8864  135F  0847               	movf	(pow@x+2)^(0+128),w
  8865  1360  00F5               	movwf	?___flneg+2
  8866  1361  0846               	movf	(pow@x+1)^(0+128),w
  8867  1362  00F4               	movwf	?___flneg+1
  8868  1363  0845               	movf	pow@x^(0+128),w
  8869  1364  00F3               	movwf	?___flneg
  8870  1365  160A  118A  26A1   	fcall	___flneg
      +       160A  118A         
  8871  136A  0876               	movf	?___flneg+3,w
  8872  136B  00C8               	movwf	(pow@x+3)^(0+128)
  8873  136C  0875               	movf	?___flneg+2,w
  8874  136D  00C7               	movwf	(pow@x+2)^(0+128)
  8875  136E  0874               	movf	?___flneg+1,w
  8876  136F  00C6               	movwf	(pow@x+1)^(0+128)
  8877  1370  0873               	movf	?___flneg,w
  8878  1371  00C5               	movwf	pow@x^(0+128)
  8879  1372                     l9299:	
  8880  1372  1683               	bsf	3,5	;RP0=1, select bank1
  8881  1373  0848               	movf	(pow@x+3)^(0+128),w
  8882  1374  00B7               	movwf	(?_log+3)^(0+128)
  8883  1375  0847               	movf	(pow@x+2)^(0+128),w
  8884  1376  00B6               	movwf	(?_log+2)^(0+128)
  8885  1377  0846               	movf	(pow@x+1)^(0+128),w
  8886  1378  00B5               	movwf	(?_log+1)^(0+128)
  8887  1379  0845               	movf	pow@x^(0+128),w
  8888  137A  00B4               	movwf	?_log^(0+128)
  8889  137B  23F2               	fcall	_log
  8890  137C  0837               	movf	(?_log+3)^(0+128),w
  8891  137D  00D0               	movwf	(_pow$5389+3)^(0+128)
  8892  137E  0836               	movf	(?_log+2)^(0+128),w
  8893  137F  00CF               	movwf	(_pow$5389+2)^(0+128)
  8894  1380  0835               	movf	(?_log+1)^(0+128),w
  8895  1381  00CE               	movwf	(_pow$5389+1)^(0+128)
  8896  1382  0834               	movf	?_log^(0+128),w
  8897  1383  00CD               	movwf	_pow$5389^(0+128)
  8898  1384  084C               	movf	(pow@y+3)^(0+128),w
  8899  1385  1283               	bcf	3,5	;RP0=0, select bank0
  8900  1386  00C8               	movwf	?___flmul+3
  8901  1387  1683               	bsf	3,5	;RP0=1, select bank1
  8902  1388  084B               	movf	(pow@y+2)^(0+128),w
  8903  1389  1283               	bcf	3,5	;RP0=0, select bank0
  8904  138A  00C7               	movwf	?___flmul+2
  8905  138B  1683               	bsf	3,5	;RP0=1, select bank1
  8906  138C  084A               	movf	(pow@y+1)^(0+128),w
  8907  138D  1283               	bcf	3,5	;RP0=0, select bank0
  8908  138E  00C6               	movwf	?___flmul+1
  8909  138F  1683               	bsf	3,5	;RP0=1, select bank1
  8910  1390  0849               	movf	pow@y^(0+128),w
  8911  1391  1283               	bcf	3,5	;RP0=0, select bank0
  8912  1392  00C5               	movwf	?___flmul
  8913  1393  1683               	bsf	3,5	;RP0=1, select bank1
  8914  1394  0850               	movf	(_pow$5389+3)^(0+128),w
  8915  1395  1283               	bcf	3,5	;RP0=0, select bank0
  8916  1396  00CC               	movwf	?___flmul+7
  8917  1397  1683               	bsf	3,5	;RP0=1, select bank1
  8918  1398  084F               	movf	(_pow$5389+2)^(0+128),w
  8919  1399  1283               	bcf	3,5	;RP0=0, select bank0
  8920  139A  00CB               	movwf	?___flmul+6
  8921  139B  1683               	bsf	3,5	;RP0=1, select bank1
  8922  139C  084E               	movf	(_pow$5389+1)^(0+128),w
  8923  139D  1283               	bcf	3,5	;RP0=0, select bank0
  8924  139E  00CA               	movwf	?___flmul+5
  8925  139F  1683               	bsf	3,5	;RP0=1, select bank1
  8926  13A0  084D               	movf	_pow$5389^(0+128),w
  8927  13A1  1283               	bcf	3,5	;RP0=0, select bank0
  8928  13A2  00C9               	movwf	?___flmul+4
  8929  13A3  120A  118A  253E   	fcall	___flmul
      +       160A  118A         
  8930  13A8  0848               	movf	?___flmul+3,w
  8931  13A9  1683               	bsf	3,5	;RP0=1, select bank1
  8932  13AA  00BD               	movwf	(?_exp+3)^(0+128)
  8933  13AB  1283               	bcf	3,5	;RP0=0, select bank0
  8934  13AC  0847               	movf	?___flmul+2,w
  8935  13AD  1683               	bsf	3,5	;RP0=1, select bank1
  8936  13AE  00BC               	movwf	(?_exp+2)^(0+128)
  8937  13AF  1283               	bcf	3,5	;RP0=0, select bank0
  8938  13B0  0846               	movf	?___flmul+1,w
  8939  13B1  1683               	bsf	3,5	;RP0=1, select bank1
  8940  13B2  00BB               	movwf	(?_exp+1)^(0+128)
  8941  13B3  1283               	bcf	3,5	;RP0=0, select bank0
  8942  13B4  0845               	movf	?___flmul,w
  8943  13B5  1683               	bsf	3,5	;RP0=1, select bank1
  8944  13B6  00BA               	movwf	?_exp^(0+128)
  8945  13B7  160A  118A  2509   	fcall	_exp
      +       160A  118A         
  8946  13BC  083D               	movf	(?_exp+3)^(0+128),w
  8947  13BD  00C8               	movwf	(pow@x+3)^(0+128)
  8948  13BE  083C               	movf	(?_exp+2)^(0+128),w
  8949  13BF  00C7               	movwf	(pow@x+2)^(0+128)
  8950  13C0  083B               	movf	(?_exp+1)^(0+128),w
  8951  13C1  00C6               	movwf	(pow@x+1)^(0+128)
  8952  13C2  083A               	movf	?_exp^(0+128),w
  8953  13C3  00C5               	movwf	pow@x^(0+128)
  8954  13C4  0851               	movf	pow@sign^(0+128),w
  8955  13C5  1903               	btfsc	3,2
  8956  13C6  0008               	return
  8957  13C7  0848               	movf	(pow@x+3)^(0+128),w
  8958  13C8  00F6               	movwf	?___flneg+3
  8959  13C9  0847               	movf	(pow@x+2)^(0+128),w
  8960  13CA  00F5               	movwf	?___flneg+2
  8961  13CB  0846               	movf	(pow@x+1)^(0+128),w
  8962  13CC  00F4               	movwf	?___flneg+1
  8963  13CD  0845               	movf	pow@x^(0+128),w
  8964  13CE  00F3               	movwf	?___flneg
  8965  13CF  160A  118A  26A1   	fcall	___flneg
  8966  13D2  0876               	movf	?___flneg+3,w
  8967  13D3  00C8               	movwf	(?_pow+3)^(0+128)
  8968  13D4  0875               	movf	?___flneg+2,w
  8969  13D5  00C7               	movwf	(?_pow+2)^(0+128)
  8970  13D6  0874               	movf	?___flneg+1,w
  8971  13D7  00C6               	movwf	(?_pow+1)^(0+128)
  8972  13D8  0873               	movf	?___flneg,w
  8973  13D9  00C5               	movwf	?_pow^(0+128)
  8974  13DA  0008               	return
  8975  13DB                     __end_of_pow:	
  8976  13DB                     __ptext1298:	
  8977 ;; =============== function _format_xint32 ends ============
  8978                           
  8979                           
  8980 ;; *************** function ___lltofl *****************
  8981 ;; Defined at:
  8982 ;;		line 31 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\lltofl.c"
  8983 ;; Parameters:    Size  Location     Type
  8984 ;;  c               4    6[BANK0 ] unsigned long 
  8985 ;; Auto vars:     Size  Location     Type
  8986 ;;		None
  8987 ;; Return value:  Size  Location     Type
  8988 ;;                  4    6[BANK0 ] unsigned long 
  8989 ;; Registers used:
  8990 ;;		wreg, status,2, status,0, pclath, cstack
  8991 ;; Tracked objects:
  8992 ;;		On entry : 60/0
  8993 ;;		On exit  : 60/0
  8994 ;;		Unchanged: FFF9F/0
  8995 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8996 ;;      Params:         0       4       0       0       0
  8997 ;;      Locals:         0       0       0       0       0
  8998 ;;      Temps:          0       0       0       0       0
  8999 ;;      Totals:         0       4       0       0       0
  9000 ;;Total ram usage:        4 bytes
  9001 ;; Hardware stack levels used:    1
  9002 ;; Hardware stack levels required when called:    2
  9003 ;; This function calls:
  9004 ;;		___flpack
  9005 ;; This function is called by:
  9006 ;;		_pow
  9007 ;; This function uses a non-reentrant model
  9008 ;;
  9009  13DB                     ___lltofl:	
  9010                           
  9011                           ; Regs used in ___lltofl: [wreg+status,2+status,0+pclath+cstack]
  9012  13DB  0829               	movf	___lltofl@c+3,w
  9013  13DC  00A3               	movwf	?___flpack+3
  9014  13DD  0828               	movf	___lltofl@c+2,w
  9015  13DE  00A2               	movwf	?___flpack+2
  9016  13DF  0827               	movf	___lltofl@c+1,w
  9017  13E0  00A1               	movwf	?___flpack+1
  9018  13E1  0826               	movf	___lltofl@c,w
  9019  13E2  00A0               	movwf	?___flpack
  9020  13E3  3096               	movlw	150
  9021  13E4  00A4               	movwf	?___flpack+4
  9022  13E5  01A5               	clrf	?___flpack+5
  9023  13E6  120A  158A  27A5   	fcall	___flpack
  9024  13E9  0823               	movf	?___flpack+3,w
  9025  13EA  00A9               	movwf	?___lltofl+3
  9026  13EB  0822               	movf	?___flpack+2,w
  9027  13EC  00A8               	movwf	?___lltofl+2
  9028  13ED  0821               	movf	?___flpack+1,w
  9029  13EE  00A7               	movwf	?___lltofl+1
  9030  13EF  0820               	movf	?___flpack,w
  9031  13F0  00A6               	movwf	?___lltofl
  9032  13F1  0008               	return
  9033  13F2                     __end_of___lltofl:	
  9034  13F2                     __ptext1290:	
  9035 ;; =============== function _exp ends ============
  9036                           
  9037                           
  9038 ;; *************** function _log *****************
  9039 ;; Defined at:
  9040 ;;		line 6 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\log.c"
  9041 ;; Parameters:    Size  Location     Type
  9042 ;;  x               4   20[BANK1 ] unsigned char 
  9043 ;; Auto vars:     Size  Location     Type
  9044 ;;  exp             2   24[BANK1 ] int 
  9045 ;; Return value:  Size  Location     Type
  9046 ;;                  4   20[BANK1 ] int 
  9047 ;; Registers used:
  9048 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  9049 ;; Tracked objects:
  9050 ;;		On entry : 60/20
  9051 ;;		On exit  : 60/20
  9052 ;;		Unchanged: FFE9F/0
  9053 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9054 ;;      Params:         0       0       4       0       0
  9055 ;;      Locals:         0       0       2       0       0
  9056 ;;      Temps:          0       0       0       0       0
  9057 ;;      Totals:         0       0       6       0       0
  9058 ;;Total ram usage:        6 bytes
  9059 ;; Hardware stack levels used:    1
  9060 ;; Hardware stack levels required when called:    4
  9061 ;; This function calls:
  9062 ;;		___flge
  9063 ;;		_frexp
  9064 ;;		___flmul
  9065 ;;		___fladd
  9066 ;;		_eval_poly
  9067 ;;		___awtofl
  9068 ;; This function is called by:
  9069 ;;		_log10
  9070 ;;		_pow
  9071 ;; This function uses a non-reentrant model
  9072 ;;
  9073  13F2                     _log:	
  9074                           
  9075                           ; Regs used in _log: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  9076  13F2  0837               	movf	(log@x+3)^(0+128),w
  9077  13F3  1283               	bcf	3,5	;RP0=0, select bank0
  9078  13F4  00A3               	movwf	?___flge+3
  9079  13F5  1683               	bsf	3,5	;RP0=1, select bank1
  9080  13F6  0836               	movf	(log@x+2)^(0+128),w
  9081  13F7  1283               	bcf	3,5	;RP0=0, select bank0
  9082  13F8  00A2               	movwf	?___flge+2
  9083  13F9  1683               	bsf	3,5	;RP0=1, select bank1
  9084  13FA  0835               	movf	(log@x+1)^(0+128),w
  9085  13FB  1283               	bcf	3,5	;RP0=0, select bank0
  9086  13FC  00A1               	movwf	?___flge+1
  9087  13FD  1683               	bsf	3,5	;RP0=1, select bank1
  9088  13FE  0834               	movf	log@x^(0+128),w
  9089  13FF  1283               	bcf	3,5	;RP0=0, select bank0
  9090  1400  00A0               	movwf	?___flge
  9091  1401  01A4               	clrf	?___flge+4
  9092  1402  01A5               	clrf	?___flge+5
  9093  1403  01A6               	clrf	?___flge+6
  9094  1404  01A7               	clrf	?___flge+7
  9095  1405  120A  118A  25BE   	fcall	___flge
      +       160A  118A         
  9096  140A  1803               	btfsc	3,0
  9097  140B  2C12               	goto	l9211
  9098  140C  1683               	bsf	3,5	;RP0=1, select bank1
  9099  140D  01B4               	clrf	?_log^(0+128)
  9100  140E  01B5               	clrf	(?_log+1)^(0+128)
  9101  140F  01B6               	clrf	(?_log+2)^(0+128)
  9102  1410  01B7               	clrf	(?_log+3)^(0+128)
  9103  1411  0008               	return
  9104  1412                     l9211:	
  9105  1412  1683               	bsf	3,5	;RP0=1, select bank1
  9106  1413  0837               	movf	(log@x+3)^(0+128),w
  9107  1414  0436               	iorwf	(log@x+2)^(0+128),w
  9108  1415  0435               	iorwf	(log@x+1)^(0+128),w
  9109  1416  0434               	iorwf	log@x^(0+128),w
  9110  1417  1D03               	skipz
  9111  1418  2C1E               	goto	l9215
  9112  1419  01B4               	clrf	?_log^(0+128)
  9113  141A  01B5               	clrf	(?_log+1)^(0+128)
  9114  141B  01B6               	clrf	(?_log+2)^(0+128)
  9115  141C  01B7               	clrf	(?_log+3)^(0+128)
  9116  141D  0008               	return
  9117  141E                     l9215:	
  9118  141E  30BF               	movlw	191
  9119  141F  1283               	bcf	3,5	;RP0=0, select bank0
  9120  1420  00DB               	movwf	?___fladd+3
  9121  1421  3080               	movlw	128
  9122  1422  00DA               	movwf	?___fladd+2
  9123  1423  3040               	movlw	64
  9124  1424  01D9               	clrf	?___fladd+1
  9125  1425  01D8               	clrf	?___fladd
  9126  1426  00C8               	movwf	?___flmul+3
  9127  1427  30B8               	movlw	log@exp& (0+255)
  9128  1428  01C7               	clrf	?___flmul+2
  9129  1429  01C6               	clrf	?___flmul+1
  9130  142A  01C5               	clrf	?___flmul
  9131  142B  00F7               	movwf	?_frexp+4
  9132  142C  1683               	bsf	3,5	;RP0=1, select bank1
  9133  142D  0837               	movf	(log@x+3)^(0+128),w
  9134  142E  00F6               	movwf	?_frexp+3
  9135  142F  0836               	movf	(log@x+2)^(0+128),w
  9136  1430  00F5               	movwf	?_frexp+2
  9137  1431  0835               	movf	(log@x+1)^(0+128),w
  9138  1432  00F4               	movwf	?_frexp+1
  9139  1433  0834               	movf	log@x^(0+128),w
  9140  1434  00F3               	movwf	?_frexp
  9141  1435  24CA               	fcall	_frexp
  9142  1436  0876               	movf	?_frexp+3,w
  9143  1437  1283               	bcf	3,5	;RP0=0, select bank0
  9144  1438  00CC               	movwf	?___flmul+7
  9145  1439  0875               	movf	?_frexp+2,w
  9146  143A  00CB               	movwf	?___flmul+6
  9147  143B  0874               	movf	?_frexp+1,w
  9148  143C  00CA               	movwf	?___flmul+5
  9149  143D  0873               	movf	?_frexp,w
  9150  143E  00C9               	movwf	?___flmul+4
  9151  143F  120A  118A  253E   	fcall	___flmul
      +       160A  118A         
  9152  1444  0848               	movf	?___flmul+3,w
  9153  1445  00DF               	movwf	?___fladd+7
  9154  1446  0847               	movf	?___flmul+2,w
  9155  1447  00DE               	movwf	?___fladd+6
  9156  1448  0846               	movf	?___flmul+1,w
  9157  1449  00DD               	movwf	?___fladd+5
  9158  144A  0845               	movf	?___flmul,w
  9159  144B  00DC               	movwf	?___fladd+4
  9160  144C  120A  118A  212A   	fcall	___fladd
      +       160A  118A         
  9161  1451  085B               	movf	?___fladd+3,w
  9162  1452  1683               	bsf	3,5	;RP0=1, select bank1
  9163  1453  00B7               	movwf	(log@x+3)^(0+128)
  9164  1454  1283               	bcf	3,5	;RP0=0, select bank0
  9165  1455  085A               	movf	?___fladd+2,w
  9166  1456  1683               	bsf	3,5	;RP0=1, select bank1
  9167  1457  00B6               	movwf	(log@x+2)^(0+128)
  9168  1458  1283               	bcf	3,5	;RP0=0, select bank0
  9169  1459  0859               	movf	?___fladd+1,w
  9170  145A  1683               	bsf	3,5	;RP0=1, select bank1
  9171  145B  00B5               	movwf	(log@x+1)^(0+128)
  9172  145C  1283               	bcf	3,5	;RP0=0, select bank0
  9173  145D  0858               	movf	?___fladd,w
  9174  145E  1683               	bsf	3,5	;RP0=1, select bank1
  9175  145F  00B4               	movwf	log@x^(0+128)
  9176  1460  30FF               	movlw	-1
  9177  1461  07B8               	addwf	log@exp^(0+128),f
  9178  1462  1C03               	skipc
  9179  1463  03B9               	decf	(log@exp+1)^(0+128),f
  9180  1464  0837               	movf	(log@x+3)^(0+128),w
  9181  1465  00A7               	movwf	(?_eval_poly+3)^(0+128)
  9182  1466  0836               	movf	(log@x+2)^(0+128),w
  9183  1467  00A6               	movwf	(?_eval_poly+2)^(0+128)
  9184  1468  0835               	movf	(log@x+1)^(0+128),w
  9185  1469  00A5               	movwf	(?_eval_poly+1)^(0+128)
  9186  146A  0834               	movf	log@x^(0+128),w
  9187  146B  00A4               	movwf	?_eval_poly^(0+128)
  9188  146C  3029               	movlw	(log@coeff-__stringbase)& (0+255)
  9189  146D  00A8               	movwf	(?_eval_poly+4)^(0+128)
  9190  146E  3008               	movlw	8
  9191  146F  00A9               	movwf	(?_eval_poly^(0+128)+5)
  9192  1470  01AA               	clrf	((?_eval_poly+1)^(0+128)+5)
  9193  1471  120A  118A  2091   	fcall	_eval_poly
      +       160A  118A         
  9194  1476  0827               	movf	(?_eval_poly+3)^(0+128),w
  9195  1477  00B7               	movwf	(log@x+3)^(0+128)
  9196  1478  0826               	movf	(?_eval_poly+2)^(0+128),w
  9197  1479  00B6               	movwf	(log@x+2)^(0+128)
  9198  147A  0825               	movf	(?_eval_poly+1)^(0+128),w
  9199  147B  00B5               	movwf	(log@x+1)^(0+128)
  9200  147C  0824               	movf	?_eval_poly^(0+128),w
  9201  147D  00B4               	movwf	log@x^(0+128)
  9202  147E  0837               	movf	(log@x+3)^(0+128),w
  9203  147F  1283               	bcf	3,5	;RP0=0, select bank0
  9204  1480  00DB               	movwf	?___fladd+3
  9205  1481  1683               	bsf	3,5	;RP0=1, select bank1
  9206  1482  0836               	movf	(log@x+2)^(0+128),w
  9207  1483  1283               	bcf	3,5	;RP0=0, select bank0
  9208  1484  00DA               	movwf	?___fladd+2
  9209  1485  1683               	bsf	3,5	;RP0=1, select bank1
  9210  1486  0835               	movf	(log@x+1)^(0+128),w
  9211  1487  1283               	bcf	3,5	;RP0=0, select bank0
  9212  1488  00D9               	movwf	?___fladd+1
  9213  1489  1683               	bsf	3,5	;RP0=1, select bank1
  9214  148A  0834               	movf	log@x^(0+128),w
  9215  148B  1283               	bcf	3,5	;RP0=0, select bank0
  9216  148C  00D8               	movwf	?___fladd
  9217  148D  303F               	movlw	63
  9218  148E  00C8               	movwf	?___flmul+3
  9219  148F  3031               	movlw	49
  9220  1490  00C7               	movwf	?___flmul+2
  9221  1491  3072               	movlw	114
  9222  1492  00C6               	movwf	?___flmul+1
  9223  1493  3018               	movlw	24
  9224  1494  00C5               	movwf	?___flmul
  9225  1495  1683               	bsf	3,5	;RP0=1, select bank1
  9226  1496  0839               	movf	(log@exp+1)^(0+128),w
  9227  1497  1283               	bcf	3,5	;RP0=0, select bank0
  9228  1498  00B3               	movwf	?___awtofl+1
  9229  1499  1683               	bsf	3,5	;RP0=1, select bank1
  9230  149A  0838               	movf	log@exp^(0+128),w
  9231  149B  1283               	bcf	3,5	;RP0=0, select bank0
  9232  149C  00B2               	movwf	?___awtofl
  9233  149D  120A  158A  26BF   	fcall	___awtofl
      +       160A  118A         
  9234  14A2  0835               	movf	?___awtofl+3,w
  9235  14A3  00CC               	movwf	?___flmul+7
  9236  14A4  0834               	movf	?___awtofl+2,w
  9237  14A5  00CB               	movwf	?___flmul+6
  9238  14A6  0833               	movf	?___awtofl+1,w
  9239  14A7  00CA               	movwf	?___flmul+5
  9240  14A8  0832               	movf	?___awtofl,w
  9241  14A9  00C9               	movwf	?___flmul+4
  9242  14AA  120A  118A  253E   	fcall	___flmul
      +       160A  118A         
  9243  14AF  0848               	movf	?___flmul+3,w
  9244  14B0  00DF               	movwf	?___fladd+7
  9245  14B1  0847               	movf	?___flmul+2,w
  9246  14B2  00DE               	movwf	?___fladd+6
  9247  14B3  0846               	movf	?___flmul+1,w
  9248  14B4  00DD               	movwf	?___fladd+5
  9249  14B5  0845               	movf	?___flmul,w
  9250  14B6  00DC               	movwf	?___fladd+4
  9251  14B7  120A  118A  212A   	fcall	___fladd
  9252  14BA  085B               	movf	?___fladd+3,w
  9253  14BB  1683               	bsf	3,5	;RP0=1, select bank1
  9254  14BC  00B7               	movwf	(?_log+3)^(0+128)
  9255  14BD  1283               	bcf	3,5	;RP0=0, select bank0
  9256  14BE  085A               	movf	?___fladd+2,w
  9257  14BF  1683               	bsf	3,5	;RP0=1, select bank1
  9258  14C0  00B6               	movwf	(?_log+2)^(0+128)
  9259  14C1  1283               	bcf	3,5	;RP0=0, select bank0
  9260  14C2  0859               	movf	?___fladd+1,w
  9261  14C3  1683               	bsf	3,5	;RP0=1, select bank1
  9262  14C4  00B5               	movwf	(?_log+1)^(0+128)
  9263  14C5  1283               	bcf	3,5	;RP0=0, select bank0
  9264  14C6  0858               	movf	?___fladd,w
  9265  14C7  1683               	bsf	3,5	;RP0=1, select bank1
  9266  14C8  00B4               	movwf	?_log^(0+128)
  9267  14C9  0008               	return
  9268  14CA                     __end_of_log:	
  9269  14CA                     __ptext1317:	
  9270 ;; =============== function ___lwdiv ends ============
  9271                           
  9272                           
  9273 ;; *************** function _frexp *****************
  9274 ;; Defined at:
  9275 ;;		line 255 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\frexp.c"
  9276 ;; Parameters:    Size  Location     Type
  9277 ;;  value           4    3[COMMON] unsigned int 
  9278 ;;  eptr            1    7[COMMON] PTR int 
  9279 ;;		 -> log@exp(2), floor@expon(2), 
  9280 ;; Auto vars:     Size  Location     Type
  9281 ;;		None
  9282 ;; Return value:  Size  Location     Type
  9283 ;;                  4    3[COMMON] PTR int 
  9284 ;; Registers used:
  9285 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
  9286 ;; Tracked objects:
  9287 ;;		On entry : 40/20
  9288 ;;		On exit  : 140/0
  9289 ;;		Unchanged: FFE9F/0
  9290 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9291 ;;      Params:         5       0       0       0       0
  9292 ;;      Locals:         0       0       0       0       0
  9293 ;;      Temps:          0       2       0       0       0
  9294 ;;      Totals:         5       2       0       0       0
  9295 ;;Total ram usage:        7 bytes
  9296 ;; Hardware stack levels used:    1
  9297 ;; Hardware stack levels required when called:    1
  9298 ;; This function calls:
  9299 ;;		Nothing
  9300 ;; This function is called by:
  9301 ;;		_floor
  9302 ;;		_log
  9303 ;; This function uses a non-reentrant model
  9304 ;;
  9305  14CA                     _frexp:	
  9306                           
  9307                           ; Regs used in _frexp: [wreg-fsr0h+status,2+status,0+btemp+1]
  9308  14CA  0876               	movf	frexp@value+3,w
  9309  14CB  0475               	iorwf	frexp@value+2,w
  9310  14CC  0474               	iorwf	frexp@value+1,w
  9311  14CD  0473               	iorwf	frexp@value,w
  9312  14CE  1D03               	skipz
  9313  14CF  2CDB               	goto	l8639
  9314  14D0  0877               	movf	frexp@eptr,w
  9315  14D1  0084               	movwf	4
  9316  14D2  1383               	bcf	3,7	;select IRP bank0
  9317  14D3  0180               	clrf	0
  9318  14D4  0A84               	incf	4,f
  9319  14D5  0180               	clrf	0
  9320  14D6  01F3               	clrf	?_frexp
  9321  14D7  01F4               	clrf	?_frexp+1
  9322  14D8  01F5               	clrf	?_frexp+2
  9323  14D9  01F6               	clrf	?_frexp+3
  9324  14DA  0008               	return
  9325  14DB                     l8639:	
  9326  14DB  0876               	movf	frexp@value+3,w
  9327  14DC  397F               	andlw	127
  9328  14DD  1283               	bcf	3,5	;RP0=0, select bank0
  9329  14DE  00A0               	movwf	??_frexp
  9330  14DF  01A1               	clrf	??_frexp+1
  9331  14E0  1003               	clrc
  9332  14E1  0DA0               	rlf	??_frexp,f
  9333  14E2  0DA1               	rlf	??_frexp+1,f
  9334  14E3  0877               	movf	frexp@eptr,w
  9335  14E4  0084               	movwf	4
  9336  14E5  0820               	movf	??_frexp,w
  9337  14E6  1383               	bcf	3,7	;select IRP bank0
  9338  14E7  0080               	movwf	0
  9339  14E8  0A84               	incf	4,f
  9340  14E9  0821               	movf	??_frexp+1,w
  9341  14EA  0080               	movwf	0
  9342  14EB  0D75               	rlf	frexp@value+2,w
  9343  14EC  0D75               	rlf	frexp@value+2,w
  9344  14ED  3901               	andlw	1
  9345  14EE  00A0               	movwf	??_frexp
  9346  14EF  01A1               	clrf	??_frexp+1
  9347  14F0  0877               	movf	frexp@eptr,w
  9348  14F1  0084               	movwf	4
  9349  14F2  0820               	movf	??_frexp,w
  9350  14F3  0480               	iorwf	0,f
  9351  14F4  0A84               	incf	4,f
  9352  14F5  0821               	movf	??_frexp+1,w
  9353  14F6  0480               	iorwf	0,f
  9354  14F7  0877               	movf	frexp@eptr,w
  9355  14F8  0084               	movwf	4
  9356  14F9  3082               	movlw	130
  9357  14FA  0780               	addwf	0,f
  9358  14FB  0F84               	incfsz	4,f
  9359  14FC  0800               	movf	0,w
  9360  14FD  1803               	skipnc
  9361  14FE  0A00               	incf	0,w
  9362  14FF  00FF               	movwf	127
  9363  1500  3EFF               	addlw	255
  9364  1501  0080               	movwf	0
  9365  1502  0384               	decf	4,f
  9366  1503  0876               	movf	frexp@value+3,w
  9367  1504  3980               	andlw	-128
  9368  1505  383F               	iorlw	63
  9369  1506  00F6               	movwf	frexp@value+3
  9370  1507  13F5               	bcf	frexp@value+2,7
  9371  1508  0008               	return
  9372  1509                     __end_of_frexp:	
  9373                           
  9374                           	psect	text1289
  9375  1509                     __ptext1289:	
  9376 ;; =============== function _log10 ends ============
  9377                           
  9378                           
  9379 ;; *************** function _exp *****************
  9380 ;; Defined at:
  9381 ;;		line 13 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\exp.c"
  9382 ;; Parameters:    Size  Location     Type
  9383 ;;  x               4   26[BANK1 ] unsigned char 
  9384 ;; Auto vars:     Size  Location     Type
  9385 ;;  exp             2   34[BANK1 ] int 
  9386 ;;  sign            1   36[BANK1 ] unsigned char 
  9387 ;; Return value:  Size  Location     Type
  9388 ;;                  4   26[BANK1 ] unsigned char 
  9389 ;; Registers used:
  9390 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  9391 ;; Tracked objects:
  9392 ;;		On entry : 60/20
  9393 ;;		On exit  : 60/20
  9394 ;;		Unchanged: FFE00/0
  9395 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9396 ;;      Params:         0       0       4       0       0
  9397 ;;      Locals:         0       0       7       0       0
  9398 ;;      Temps:          0       0       0       0       0
  9399 ;;      Totals:         0       0      11       0       0
  9400 ;;Total ram usage:       11 bytes
  9401 ;; Hardware stack levels used:    1
  9402 ;; Hardware stack levels required when called:    4
  9403 ;; This function calls:
  9404 ;;		___flge
  9405 ;;		___flneg
  9406 ;;		___flmul
  9407 ;;		_floor
  9408 ;;		___fltol
  9409 ;;		___awtofl
  9410 ;;		___flsub
  9411 ;;		_eval_poly
  9412 ;;		_ldexp
  9413 ;;		___fldiv
  9414 ;; This function is called by:
  9415 ;;		_pow
  9416 ;; This function uses a non-reentrant model
  9417 ;;
  9418  1509                     _exp:	
  9419                           
  9420                           ; Regs used in _exp: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  9421  1509  083D               	movf	(exp@x+3)^(0+128),w
  9422  150A  043C               	iorwf	(exp@x+2)^(0+128),w
  9423  150B  043B               	iorwf	(exp@x+1)^(0+128),w
  9424  150C  043A               	iorwf	exp@x^(0+128),w
  9425  150D  1D03               	skipz
  9426  150E  2D17               	goto	l9231
  9427  150F  303F               	movlw	63
  9428  1510  00BD               	movwf	(?_exp+3)^(0+128)
  9429  1511  3080               	movlw	128
  9430  1512  00BC               	movwf	(?_exp+2)^(0+128)
  9431  1513  3000               	movlw	0
  9432  1514  01BB               	clrf	(?_exp+1)^(0+128)
  9433  1515  01BA               	clrf	?_exp^(0+128)
  9434  1516  0008               	return
  9435  1517                     l9231:	
  9436  1517  3044               	movlw	68
  9437  1518  1283               	bcf	3,5	;RP0=0, select bank0
  9438  1519  00A3               	movwf	?___flge+3
  9439  151A  3031               	movlw	49
  9440  151B  00A2               	movwf	?___flge+2
  9441  151C  3072               	movlw	114
  9442  151D  00A1               	movwf	?___flge+1
  9443  151E  3018               	movlw	24
  9444  151F  00A0               	movwf	?___flge
  9445  1520  1683               	bsf	3,5	;RP0=1, select bank1
  9446  1521  083D               	movf	(exp@x+3)^(0+128),w
  9447  1522  1283               	bcf	3,5	;RP0=0, select bank0
  9448  1523  00A7               	movwf	?___flge+7
  9449  1524  1683               	bsf	3,5	;RP0=1, select bank1
  9450  1525  083C               	movf	(exp@x+2)^(0+128),w
  9451  1526  1283               	bcf	3,5	;RP0=0, select bank0
  9452  1527  00A6               	movwf	?___flge+6
  9453  1528  1683               	bsf	3,5	;RP0=1, select bank1
  9454  1529  083B               	movf	(exp@x+1)^(0+128),w
  9455  152A  1283               	bcf	3,5	;RP0=0, select bank0
  9456  152B  00A5               	movwf	?___flge+5
  9457  152C  1683               	bsf	3,5	;RP0=1, select bank1
  9458  152D  083A               	movf	exp@x^(0+128),w
  9459  152E  1283               	bcf	3,5	;RP0=0, select bank0
  9460  152F  00A4               	movwf	?___flge+4
  9461  1530  120A  118A  25BE   	fcall	___flge
      +       160A  118A         
  9462  1535  1803               	btfsc	3,0
  9463  1536  2D3F               	goto	l9239
  9464  1537  307F               	movlw	127
  9465  1538  1683               	bsf	3,5	;RP0=1, select bank1
  9466  1539  00BD               	movwf	(?_exp+3)^(0+128)
  9467  153A  00BC               	movwf	(?_exp+2)^(0+128)
  9468  153B  30FF               	movlw	255
  9469  153C  00BB               	movwf	(?_exp+1)^(0+128)
  9470  153D  00BA               	movwf	?_exp^(0+128)
  9471  153E  0008               	return
  9472  153F                     l9239:	
  9473  153F  1683               	bsf	3,5	;RP0=1, select bank1
  9474  1540  083D               	movf	(exp@x+3)^(0+128),w
  9475  1541  1283               	bcf	3,5	;RP0=0, select bank0
  9476  1542  00A3               	movwf	?___flge+3
  9477  1543  1683               	bsf	3,5	;RP0=1, select bank1
  9478  1544  083C               	movf	(exp@x+2)^(0+128),w
  9479  1545  1283               	bcf	3,5	;RP0=0, select bank0
  9480  1546  00A2               	movwf	?___flge+2
  9481  1547  1683               	bsf	3,5	;RP0=1, select bank1
  9482  1548  083B               	movf	(exp@x+1)^(0+128),w
  9483  1549  1283               	bcf	3,5	;RP0=0, select bank0
  9484  154A  00A1               	movwf	?___flge+1
  9485  154B  1683               	bsf	3,5	;RP0=1, select bank1
  9486  154C  083A               	movf	exp@x^(0+128),w
  9487  154D  1283               	bcf	3,5	;RP0=0, select bank0
  9488  154E  00A0               	movwf	?___flge
  9489  154F  30C4               	movlw	196
  9490  1550  00A7               	movwf	?___flge+7
  9491  1551  303A               	movlw	58
  9492  1552  00A6               	movwf	?___flge+6
  9493  1553  3048               	movlw	72
  9494  1554  00A5               	movwf	?___flge+5
  9495  1555  3087               	movlw	135
  9496  1556  00A4               	movwf	?___flge+4
  9497  1557  120A  118A  25BE   	fcall	___flge
      +       160A  118A         
  9498  155C  1803               	btfsc	3,0
  9499  155D  2D64               	goto	l9243
  9500  155E  1683               	bsf	3,5	;RP0=1, select bank1
  9501  155F  01BA               	clrf	?_exp^(0+128)
  9502  1560  01BB               	clrf	(?_exp+1)^(0+128)
  9503  1561  01BC               	clrf	(?_exp+2)^(0+128)
  9504  1562  01BD               	clrf	(?_exp+3)^(0+128)
  9505  1563  0008               	return
  9506  1564                     l9243:	
  9507  1564  1683               	bsf	3,5	;RP0=1, select bank1
  9508  1565  083D               	movf	(exp@x+3)^(0+128),w
  9509  1566  1283               	bcf	3,5	;RP0=0, select bank0
  9510  1567  00A3               	movwf	?___flge+3
  9511  1568  1683               	bsf	3,5	;RP0=1, select bank1
  9512  1569  083C               	movf	(exp@x+2)^(0+128),w
  9513  156A  1283               	bcf	3,5	;RP0=0, select bank0
  9514  156B  00A2               	movwf	?___flge+2
  9515  156C  1683               	bsf	3,5	;RP0=1, select bank1
  9516  156D  083B               	movf	(exp@x+1)^(0+128),w
  9517  156E  1283               	bcf	3,5	;RP0=0, select bank0
  9518  156F  00A1               	movwf	?___flge+1
  9519  1570  1683               	bsf	3,5	;RP0=1, select bank1
  9520  1571  083A               	movf	exp@x^(0+128),w
  9521  1572  1283               	bcf	3,5	;RP0=0, select bank0
  9522  1573  00A0               	movwf	?___flge
  9523  1574  01A4               	clrf	?___flge+4
  9524  1575  01A5               	clrf	?___flge+5
  9525  1576  01A6               	clrf	?___flge+6
  9526  1577  01A7               	clrf	?___flge+7
  9527  1578  120A  118A  25BE   	fcall	___flge
      +       160A  118A         
  9528  157D  3000               	movlw	0
  9529  157E  1C03               	btfss	3,0
  9530  157F  3001               	movlw	1
  9531  1580  1683               	bsf	3,5	;RP0=1, select bank1
  9532  1581  00C4               	movwf	exp@sign^(0+128)
  9533  1582  0844               	movf	exp@sign^(0+128),w
  9534  1583  1903               	btfsc	3,2
  9535  1584  2D96               	goto	l9249
  9536  1585  083D               	movf	(exp@x+3)^(0+128),w
  9537  1586  00F6               	movwf	?___flneg+3
  9538  1587  083C               	movf	(exp@x+2)^(0+128),w
  9539  1588  00F5               	movwf	?___flneg+2
  9540  1589  083B               	movf	(exp@x+1)^(0+128),w
  9541  158A  00F4               	movwf	?___flneg+1
  9542  158B  083A               	movf	exp@x^(0+128),w
  9543  158C  00F3               	movwf	?___flneg
  9544  158D  26A1               	fcall	___flneg
  9545  158E  0876               	movf	?___flneg+3,w
  9546  158F  00BD               	movwf	(exp@x+3)^(0+128)
  9547  1590  0875               	movf	?___flneg+2,w
  9548  1591  00BC               	movwf	(exp@x+2)^(0+128)
  9549  1592  0874               	movf	?___flneg+1,w
  9550  1593  00BB               	movwf	(exp@x+1)^(0+128)
  9551  1594  0873               	movf	?___flneg,w
  9552  1595  00BA               	movwf	exp@x^(0+128)
  9553  1596                     l9249:	
  9554  1596  303F               	movlw	63
  9555  1597  1283               	bcf	3,5	;RP0=0, select bank0
  9556  1598  00C8               	movwf	?___flmul+3
  9557  1599  30B8               	movlw	184
  9558  159A  00C7               	movwf	?___flmul+2
  9559  159B  30AA               	movlw	170
  9560  159C  00C6               	movwf	?___flmul+1
  9561  159D  303B               	movlw	59
  9562  159E  00C5               	movwf	?___flmul
  9563  159F  1683               	bsf	3,5	;RP0=1, select bank1
  9564  15A0  083D               	movf	(exp@x+3)^(0+128),w
  9565  15A1  1283               	bcf	3,5	;RP0=0, select bank0
  9566  15A2  00CC               	movwf	?___flmul+7
  9567  15A3  1683               	bsf	3,5	;RP0=1, select bank1
  9568  15A4  083C               	movf	(exp@x+2)^(0+128),w
  9569  15A5  1283               	bcf	3,5	;RP0=0, select bank0
  9570  15A6  00CB               	movwf	?___flmul+6
  9571  15A7  1683               	bsf	3,5	;RP0=1, select bank1
  9572  15A8  083B               	movf	(exp@x+1)^(0+128),w
  9573  15A9  1283               	bcf	3,5	;RP0=0, select bank0
  9574  15AA  00CA               	movwf	?___flmul+5
  9575  15AB  1683               	bsf	3,5	;RP0=1, select bank1
  9576  15AC  083A               	movf	exp@x^(0+128),w
  9577  15AD  1283               	bcf	3,5	;RP0=0, select bank0
  9578  15AE  00C9               	movwf	?___flmul+4
  9579  15AF  120A  118A  253E   	fcall	___flmul
      +       160A  118A         
  9580  15B4  0848               	movf	?___flmul+3,w
  9581  15B5  1683               	bsf	3,5	;RP0=1, select bank1
  9582  15B6  00BD               	movwf	(exp@x+3)^(0+128)
  9583  15B7  1283               	bcf	3,5	;RP0=0, select bank0
  9584  15B8  0847               	movf	?___flmul+2,w
  9585  15B9  1683               	bsf	3,5	;RP0=1, select bank1
  9586  15BA  00BC               	movwf	(exp@x+2)^(0+128)
  9587  15BB  1283               	bcf	3,5	;RP0=0, select bank0
  9588  15BC  0846               	movf	?___flmul+1,w
  9589  15BD  1683               	bsf	3,5	;RP0=1, select bank1
  9590  15BE  00BB               	movwf	(exp@x+1)^(0+128)
  9591  15BF  1283               	bcf	3,5	;RP0=0, select bank0
  9592  15C0  0845               	movf	?___flmul,w
  9593  15C1  1683               	bsf	3,5	;RP0=1, select bank1
  9594  15C2  00BA               	movwf	exp@x^(0+128)
  9595  15C3  083D               	movf	(exp@x+3)^(0+128),w
  9596  15C4  1283               	bcf	3,5	;RP0=0, select bank0
  9597  15C5  00EA               	movwf	?_floor+3
  9598  15C6  1683               	bsf	3,5	;RP0=1, select bank1
  9599  15C7  083C               	movf	(exp@x+2)^(0+128),w
  9600  15C8  1283               	bcf	3,5	;RP0=0, select bank0
  9601  15C9  00E9               	movwf	?_floor+2
  9602  15CA  1683               	bsf	3,5	;RP0=1, select bank1
  9603  15CB  083B               	movf	(exp@x+1)^(0+128),w
  9604  15CC  1283               	bcf	3,5	;RP0=0, select bank0
  9605  15CD  00E8               	movwf	?_floor+1
  9606  15CE  1683               	bsf	3,5	;RP0=1, select bank1
  9607  15CF  083A               	movf	exp@x^(0+128),w
  9608  15D0  1283               	bcf	3,5	;RP0=0, select bank0
  9609  15D1  00E7               	movwf	?_floor
  9610  15D2  2728               	fcall	_floor
  9611  15D3  1283               	bcf	3,5	;RP0=0, select bank0
  9612  15D4  086A               	movf	?_floor+3,w
  9613  15D5  00AB               	movwf	?___fltol+3
  9614  15D6  0869               	movf	?_floor+2,w
  9615  15D7  00AA               	movwf	?___fltol+2
  9616  15D8  0868               	movf	?_floor+1,w
  9617  15D9  00A9               	movwf	?___fltol+1
  9618  15DA  0867               	movf	?_floor,w
  9619  15DB  00A8               	movwf	?___fltol
  9620  15DC  120A  158A  2672   	fcall	___fltol
      +       160A  118A         
  9621  15E1  0829               	movf	?___fltol+1,w
  9622  15E2  1683               	bsf	3,5	;RP0=1, select bank1
  9623  15E3  00C3               	movwf	(exp@exp+1)^(0+128)
  9624  15E4  1283               	bcf	3,5	;RP0=0, select bank0
  9625  15E5  0828               	movf	?___fltol,w
  9626  15E6  1683               	bsf	3,5	;RP0=1, select bank1
  9627  15E7  00C2               	movwf	exp@exp^(0+128)
  9628  15E8  0843               	movf	(exp@exp+1)^(0+128),w
  9629  15E9  1283               	bcf	3,5	;RP0=0, select bank0
  9630  15EA  00B3               	movwf	?___awtofl+1
  9631  15EB  1683               	bsf	3,5	;RP0=1, select bank1
  9632  15EC  0842               	movf	exp@exp^(0+128),w
  9633  15ED  1283               	bcf	3,5	;RP0=0, select bank0
  9634  15EE  00B2               	movwf	?___awtofl
  9635  15EF  120A  158A  26BF   	fcall	___awtofl
      +       160A  118A         
  9636  15F4  0835               	movf	?___awtofl+3,w
  9637  15F5  00EA               	movwf	?___flsub+3
  9638  15F6  0834               	movf	?___awtofl+2,w
  9639  15F7  00E9               	movwf	?___flsub+2
  9640  15F8  0833               	movf	?___awtofl+1,w
  9641  15F9  00E8               	movwf	?___flsub+1
  9642  15FA  0832               	movf	?___awtofl,w
  9643  15FB  00E7               	movwf	?___flsub
  9644  15FC  1683               	bsf	3,5	;RP0=1, select bank1
  9645  15FD  083D               	movf	(exp@x+3)^(0+128),w
  9646  15FE  1283               	bcf	3,5	;RP0=0, select bank0
  9647  15FF  00EE               	movwf	?___flsub+7
  9648  1600  1683               	bsf	3,5	;RP0=1, select bank1
  9649  1601  083C               	movf	(exp@x+2)^(0+128),w
  9650  1602  1283               	bcf	3,5	;RP0=0, select bank0
  9651  1603  00ED               	movwf	?___flsub+6
  9652  1604  1683               	bsf	3,5	;RP0=1, select bank1
  9653  1605  083B               	movf	(exp@x+1)^(0+128),w
  9654  1606  1283               	bcf	3,5	;RP0=0, select bank0
  9655  1607  00EC               	movwf	?___flsub+5
  9656  1608  1683               	bsf	3,5	;RP0=1, select bank1
  9657  1609  083A               	movf	exp@x^(0+128),w
  9658  160A  1283               	bcf	3,5	;RP0=0, select bank0
  9659  160B  00EB               	movwf	?___flsub+4
  9660  160C  120A  158A  26DC   	fcall	___flsub
      +       160A  118A         
  9661  1611  086A               	movf	?___flsub+3,w
  9662  1612  1683               	bsf	3,5	;RP0=1, select bank1
  9663  1613  00BD               	movwf	(exp@x+3)^(0+128)
  9664  1614  1283               	bcf	3,5	;RP0=0, select bank0
  9665  1615  0869               	movf	?___flsub+2,w
  9666  1616  1683               	bsf	3,5	;RP0=1, select bank1
  9667  1617  00BC               	movwf	(exp@x+2)^(0+128)
  9668  1618  1283               	bcf	3,5	;RP0=0, select bank0
  9669  1619  0868               	movf	?___flsub+1,w
  9670  161A  1683               	bsf	3,5	;RP0=1, select bank1
  9671  161B  00BB               	movwf	(exp@x+1)^(0+128)
  9672  161C  1283               	bcf	3,5	;RP0=0, select bank0
  9673  161D  0867               	movf	?___flsub,w
  9674  161E  1683               	bsf	3,5	;RP0=1, select bank1
  9675  161F  00BA               	movwf	exp@x^(0+128)
  9676  1620  083D               	movf	(exp@x+3)^(0+128),w
  9677  1621  00A7               	movwf	(?_eval_poly+3)^(0+128)
  9678  1622  083C               	movf	(exp@x+2)^(0+128),w
  9679  1623  00A6               	movwf	(?_eval_poly+2)^(0+128)
  9680  1624  083B               	movf	(exp@x+1)^(0+128),w
  9681  1625  00A5               	movwf	(?_eval_poly+1)^(0+128)
  9682  1626  083A               	movf	exp@x^(0+128),w
  9683  1627  00A4               	movwf	?_eval_poly^(0+128)
  9684  1628  3001               	movlw	(exp@coeff-__stringbase)& (0+255)
  9685  1629  00A8               	movwf	(?_eval_poly+4)^(0+128)
  9686  162A  3009               	movlw	9
  9687  162B  00A9               	movwf	(?_eval_poly^(0+128)+5)
  9688  162C  01AA               	clrf	((?_eval_poly+1)^(0+128)+5)
  9689  162D  120A  118A  2091   	fcall	_eval_poly
      +       160A  118A         
  9690  1632  0827               	movf	(?_eval_poly+3)^(0+128),w
  9691  1633  1283               	bcf	3,5	;RP0=0, select bank0
  9692  1634  00EA               	movwf	?_ldexp+3
  9693  1635  1683               	bsf	3,5	;RP0=1, select bank1
  9694  1636  0826               	movf	(?_eval_poly+2)^(0+128),w
  9695  1637  1283               	bcf	3,5	;RP0=0, select bank0
  9696  1638  00E9               	movwf	?_ldexp+2
  9697  1639  1683               	bsf	3,5	;RP0=1, select bank1
  9698  163A  0825               	movf	(?_eval_poly+1)^(0+128),w
  9699  163B  1283               	bcf	3,5	;RP0=0, select bank0
  9700  163C  00E8               	movwf	?_ldexp+1
  9701  163D  1683               	bsf	3,5	;RP0=1, select bank1
  9702  163E  0824               	movf	?_eval_poly^(0+128),w
  9703  163F  1283               	bcf	3,5	;RP0=0, select bank0
  9704  1640  00E7               	movwf	?_ldexp
  9705  1641  1683               	bsf	3,5	;RP0=1, select bank1
  9706  1642  0843               	movf	(exp@exp+1)^(0+128),w
  9707  1643  1283               	bcf	3,5	;RP0=0, select bank0
  9708  1644  00EC               	movwf	?_ldexp+5
  9709  1645  1683               	bsf	3,5	;RP0=1, select bank1
  9710  1646  0842               	movf	exp@exp^(0+128),w
  9711  1647  1283               	bcf	3,5	;RP0=0, select bank0
  9712  1648  00EB               	movwf	?_ldexp+4
  9713  1649  26AA  160A  118A   	fcall	_ldexp
  9714  164C  086A               	movf	?_ldexp+3,w
  9715  164D  1683               	bsf	3,5	;RP0=1, select bank1
  9716  164E  00BD               	movwf	(exp@x+3)^(0+128)
  9717  164F  1283               	bcf	3,5	;RP0=0, select bank0
  9718  1650  0869               	movf	?_ldexp+2,w
  9719  1651  1683               	bsf	3,5	;RP0=1, select bank1
  9720  1652  00BC               	movwf	(exp@x+2)^(0+128)
  9721  1653  1283               	bcf	3,5	;RP0=0, select bank0
  9722  1654  0868               	movf	?_ldexp+1,w
  9723  1655  1683               	bsf	3,5	;RP0=1, select bank1
  9724  1656  00BB               	movwf	(exp@x+1)^(0+128)
  9725  1657  1283               	bcf	3,5	;RP0=0, select bank0
  9726  1658  0867               	movf	?_ldexp,w
  9727  1659  1683               	bsf	3,5	;RP0=1, select bank1
  9728  165A  00BA               	movwf	exp@x^(0+128)
  9729  165B  0844               	movf	exp@sign^(0+128),w
  9730  165C  1903               	btfsc	3,2
  9731  165D  0008               	return
  9732  165E  307F               	movlw	127
  9733  165F  00C1               	movwf	(_exp$4971+3)^(0+128)
  9734  1660  00C0               	movwf	(_exp$4971+2)^(0+128)
  9735  1661  30FF               	movlw	255
  9736  1662  00BF               	movwf	(_exp$4971+1)^(0+128)
  9737  1663  00BE               	movwf	_exp$4971^(0+128)
  9738  1664  083D               	movf	(exp@x+3)^(0+128),w
  9739  1665  0641               	xorwf	(_exp$4971+3)^(0+128),w
  9740  1666  1D03               	skipz
  9741  1667  2E72               	goto	u3465
  9742  1668  083C               	movf	(exp@x+2)^(0+128),w
  9743  1669  0640               	xorwf	(_exp$4971+2)^(0+128),w
  9744  166A  1D03               	skipz
  9745  166B  2E72               	goto	u3465
  9746  166C  083B               	movf	(exp@x+1)^(0+128),w
  9747  166D  063F               	xorwf	(_exp$4971+1)^(0+128),w
  9748  166E  1D03               	skipz
  9749  166F  2E72               	goto	u3465
  9750  1670  083A               	movf	exp@x^(0+128),w
  9751  1671  063E               	xorwf	_exp$4971^(0+128),w
  9752  1672                     u3465:	
  9753  1672  1D03               	skipz
  9754  1673  2E79               	goto	l9265
  9755  1674  01BA               	clrf	?_exp^(0+128)
  9756  1675  01BB               	clrf	(?_exp+1)^(0+128)
  9757  1676  01BC               	clrf	(?_exp+2)^(0+128)
  9758  1677  01BD               	clrf	(?_exp+3)^(0+128)
  9759  1678  0008               	return
  9760  1679                     l9265:	
  9761  1679  083D               	movf	(exp@x+3)^(0+128),w
  9762  167A  1283               	bcf	3,5	;RP0=0, select bank0
  9763  167B  00B5               	movwf	?___fldiv+3
  9764  167C  1683               	bsf	3,5	;RP0=1, select bank1
  9765  167D  083C               	movf	(exp@x+2)^(0+128),w
  9766  167E  1283               	bcf	3,5	;RP0=0, select bank0
  9767  167F  00B4               	movwf	?___fldiv+2
  9768  1680  1683               	bsf	3,5	;RP0=1, select bank1
  9769  1681  083B               	movf	(exp@x+1)^(0+128),w
  9770  1682  1283               	bcf	3,5	;RP0=0, select bank0
  9771  1683  00B3               	movwf	?___fldiv+1
  9772  1684  1683               	bsf	3,5	;RP0=1, select bank1
  9773  1685  083A               	movf	exp@x^(0+128),w
  9774  1686  1283               	bcf	3,5	;RP0=0, select bank0
  9775  1687  00B2               	movwf	?___fldiv
  9776  1688  303F               	movlw	63
  9777  1689  00B9               	movwf	?___fldiv+7
  9778  168A  3080               	movlw	128
  9779  168B  00B8               	movwf	?___fldiv+6
  9780  168C  01B7               	clrf	?___fldiv+5
  9781  168D  01B6               	clrf	?___fldiv+4
  9782  168E  120A  158A  25F9   	fcall	___fldiv
  9783  1691  0835               	movf	?___fldiv+3,w
  9784  1692  1683               	bsf	3,5	;RP0=1, select bank1
  9785  1693  00BD               	movwf	(?_exp+3)^(0+128)
  9786  1694  1283               	bcf	3,5	;RP0=0, select bank0
  9787  1695  0834               	movf	?___fldiv+2,w
  9788  1696  1683               	bsf	3,5	;RP0=1, select bank1
  9789  1697  00BC               	movwf	(?_exp+2)^(0+128)
  9790  1698  1283               	bcf	3,5	;RP0=0, select bank0
  9791  1699  0833               	movf	?___fldiv+1,w
  9792  169A  1683               	bsf	3,5	;RP0=1, select bank1
  9793  169B  00BB               	movwf	(?_exp+1)^(0+128)
  9794  169C  1283               	bcf	3,5	;RP0=0, select bank0
  9795  169D  0832               	movf	?___fldiv,w
  9796  169E  1683               	bsf	3,5	;RP0=1, select bank1
  9797  169F  00BA               	movwf	?_exp^(0+128)
  9798  16A0  0008               	return
  9799  16A1                     __end_of_exp:	
  9800  16A1                     __ptext1313:	
  9801 ;; =============== function ___fltol ends ============
  9802                           
  9803                           
  9804 ;; *************** function ___flneg *****************
  9805 ;; Defined at:
  9806 ;;		line 16 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\flneg.c"
  9807 ;; Parameters:    Size  Location     Type
  9808 ;;  f1              4    3[COMMON] long 
  9809 ;; Auto vars:     Size  Location     Type
  9810 ;;		None
  9811 ;; Return value:  Size  Location     Type
  9812 ;;                  4    3[COMMON] long 
  9813 ;; Registers used:
  9814 ;;		wreg
  9815 ;; Tracked objects:
  9816 ;;		On entry : 60/20
  9817 ;;		On exit  : 60/20
  9818 ;;		Unchanged: FFF9F/0
  9819 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9820 ;;      Params:         4       0       0       0       0
  9821 ;;      Locals:         0       0       0       0       0
  9822 ;;      Temps:          0       0       0       0       0
  9823 ;;      Totals:         4       0       0       0       0
  9824 ;;Total ram usage:        4 bytes
  9825 ;; Hardware stack levels used:    1
  9826 ;; Hardware stack levels required when called:    1
  9827 ;; This function calls:
  9828 ;;		Nothing
  9829 ;; This function is called by:
  9830 ;;		_pow
  9831 ;;		_ldexp
  9832 ;;		_exp
  9833 ;; This function uses a non-reentrant model
  9834 ;;
  9835  16A1                     ___flneg:	
  9836                           
  9837                           ; Regs used in ___flneg: [wreg]
  9838  16A1  0876               	movf	___flneg@f1+3,w
  9839  16A2  0475               	iorwf	___flneg@f1+2,w
  9840  16A3  0474               	iorwf	___flneg@f1+1,w
  9841  16A4  0473               	iorwf	___flneg@f1,w
  9842  16A5  1903               	skipnz
  9843  16A6  0008               	return
  9844  16A7  3080               	movlw	128
  9845  16A8  06F6               	xorwf	___flneg@f1+3,f
  9846  16A9  0008               	return
  9847  16AA                     __end_of___flneg:	
  9848  16AA                     __ptext1305:	
  9849 ;; =============== function ___fladd ends ============
  9850                           
  9851                           
  9852 ;; *************** function _ldexp *****************
  9853 ;; Defined at:
  9854 ;;		line 278 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\frexp.c"
  9855 ;; Parameters:    Size  Location     Type
  9856 ;;  value           4   71[BANK0 ] unsigned char 
  9857 ;;  newexp          2   75[BANK0 ] int 
  9858 ;; Auto vars:     Size  Location     Type
  9859 ;;		None
  9860 ;; Return value:  Size  Location     Type
  9861 ;;                  4   71[BANK0 ] int 
  9862 ;; Registers used:
  9863 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  9864 ;; Tracked objects:
  9865 ;;		On entry : 160/0
  9866 ;;		On exit  : 60/0
  9867 ;;		Unchanged: FFE00/0
  9868 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9869 ;;      Params:         0       6       0       0       0
  9870 ;;      Locals:         0       0       4       0       0
  9871 ;;      Temps:          0       2       0       0       0
  9872 ;;      Totals:         0       8       4       0       0
  9873 ;;Total ram usage:       12 bytes
  9874 ;; Hardware stack levels used:    1
  9875 ;; Hardware stack levels required when called:    2
  9876 ;; This function calls:
  9877 ;;		___flge
  9878 ;;		___flneg
  9879 ;; This function is called by:
  9880 ;;		_exp
  9881 ;; This function uses a non-reentrant model
  9882 ;;
  9883  16AA                     _ldexp:	
  9884                           
  9885                           ; Regs used in _ldexp: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  9886  16AA  086A               	movf	ldexp@value+3,w
  9887  16AB  0469               	iorwf	ldexp@value+2,w
  9888  16AC  0468               	iorwf	ldexp@value+1,w
  9889  16AD  0467               	iorwf	ldexp@value,w
  9890  16AE  1D03               	skipz
  9891  16AF  2EB5               	goto	l8875
  9892  16B0  01E7               	clrf	?_ldexp
  9893  16B1  01E8               	clrf	?_ldexp+1
  9894  16B2  01E9               	clrf	?_ldexp+2
  9895  16B3  01EA               	clrf	?_ldexp+3
  9896  16B4  0008               	return
  9897  16B5                     l8875:	
  9898  16B5  086A               	movf	ldexp@value+3,w
  9899  16B6  397F               	andlw	127
  9900  16B7  00ED               	movwf	??_ldexp
  9901  16B8  01EE               	clrf	??_ldexp+1
  9902  16B9  1003               	clrc
  9903  16BA  0DED               	rlf	??_ldexp,f
  9904  16BB  0DEE               	rlf	??_ldexp+1,f
  9905  16BC  086D               	movf	??_ldexp,w
  9906  16BD  07EB               	addwf	ldexp@newexp,f
  9907  16BE  1803               	skipnc
  9908  16BF  0AEC               	incf	ldexp@newexp+1,f
  9909  16C0  086E               	movf	??_ldexp+1,w
  9910  16C1  07EC               	addwf	ldexp@newexp+1,f
  9911  16C2  0D69               	rlf	ldexp@value+2,w
  9912  16C3  0D69               	rlf	ldexp@value+2,w
  9913  16C4  3901               	andlw	1
  9914  16C5  07EB               	addwf	ldexp@newexp,f
  9915  16C6  1803               	skipnc
  9916  16C7  0AEC               	incf	ldexp@newexp+1,f
  9917  16C8  1FEC               	btfss	ldexp@newexp+1,7
  9918  16C9  2ECF               	goto	l8883
  9919  16CA  01E7               	clrf	?_ldexp
  9920  16CB  01E8               	clrf	?_ldexp+1
  9921  16CC  01E9               	clrf	?_ldexp+2
  9922  16CD  01EA               	clrf	?_ldexp+3
  9923  16CE  0008               	return
  9924  16CF                     l8883:	
  9925  16CF  086C               	movf	ldexp@newexp+1,w
  9926  16D0  3A80               	xorlw	128
  9927  16D1  00FF               	movwf	127
  9928  16D2  3081               	movlw	129
  9929  16D3  027F               	subwf	127,w
  9930  16D4  1D03               	skipz
  9931  16D5  2ED8               	goto	u2975
  9932  16D6  3000               	movlw	0
  9933  16D7  026B               	subwf	ldexp@newexp,w
  9934  16D8                     u2975:	
  9935  16D8  1C03               	skipc
  9936  16D9  2F0F               	goto	l8903
  9937  16DA  1283               	bcf	3,5	;RP0=0, select bank0
  9938  16DB  1303               	bcf	3,6	;RP1=0, select bank0
  9939  16DC  086A               	movf	ldexp@value+3,w
  9940  16DD  00A3               	movwf	?___flge+3
  9941  16DE  0869               	movf	ldexp@value+2,w
  9942  16DF  00A2               	movwf	?___flge+2
  9943  16E0  0868               	movf	ldexp@value+1,w
  9944  16E1  00A1               	movwf	?___flge+1
  9945  16E2  0867               	movf	ldexp@value,w
  9946  16E3  00A0               	movwf	?___flge
  9947  16E4  01A4               	clrf	?___flge+4
  9948  16E5  01A5               	clrf	?___flge+5
  9949  16E6  01A6               	clrf	?___flge+6
  9950  16E7  01A7               	clrf	?___flge+7
  9951  16E8  120A  118A  25BE   	fcall	___flge
      +       160A  118A         
  9952  16ED  307F               	movlw	127
  9953  16EE  1803               	btfsc	3,0
  9954  16EF  2F09               	goto	L7
  9955  16F0  1683               	bsf	3,5	;RP0=1, select bank1
  9956  16F1  00A3               	movwf	(_ldexp$4713+3)^(0+128)
  9957  16F2  00A2               	movwf	(_ldexp$4713+2)^(0+128)
  9958  16F3  30FF               	movlw	255
  9959  16F4  00A1               	movwf	(_ldexp$4713+1)^(0+128)
  9960  16F5  00A0               	movwf	_ldexp$4713^(0+128)
  9961  16F6  0823               	movf	(_ldexp$4713+3)^(0+128),w
  9962  16F7  00F6               	movwf	?___flneg+3
  9963  16F8  0822               	movf	(_ldexp$4713+2)^(0+128),w
  9964  16F9  00F5               	movwf	?___flneg+2
  9965  16FA  0821               	movf	(_ldexp$4713+1)^(0+128),w
  9966  16FB  00F4               	movwf	?___flneg+1
  9967  16FC  0820               	movf	_ldexp$4713^(0+128),w
  9968  16FD  00F3               	movwf	?___flneg
  9969  16FE  26A1               	fcall	___flneg
  9970  16FF  0876               	movf	?___flneg+3,w
  9971  1700  1283               	bcf	3,5	;RP0=0, select bank0
  9972  1701  00EA               	movwf	?_ldexp+3
  9973  1702  0875               	movf	?___flneg+2,w
  9974  1703  00E9               	movwf	?_ldexp+2
  9975  1704  0874               	movf	?___flneg+1,w
  9976  1705  00E8               	movwf	?_ldexp+1
  9977  1706  0873               	movf	?___flneg,w
  9978  1707  00E7               	movwf	?_ldexp
  9979  1708  0008               	return
  9980  1709                     L7:	
  9981  1709  00EA               	movwf	?_ldexp+3
  9982  170A  00E9               	movwf	?_ldexp+2
  9983  170B  30FF               	movlw	255
  9984  170C  00E8               	movwf	?_ldexp+1
  9985  170D  00E7               	movwf	?_ldexp
  9986  170E  0008               	return
  9987  170F                     l8903:	
  9988  170F  1283               	bcf	3,5	;RP0=0, select bank0
  9989  1710  1303               	bcf	3,6	;RP1=0, select bank0
  9990  1711  086C               	movf	ldexp@newexp+1,w
  9991  1712  00EE               	movwf	??_ldexp+1
  9992  1713  086B               	movf	ldexp@newexp,w
  9993  1714  00ED               	movwf	??_ldexp
  9994  1715  0D6E               	rlf	??_ldexp+1,w
  9995  1716  0CEE               	rrf	??_ldexp+1,f
  9996  1717  0CED               	rrf	??_ldexp,f
  9997  1718  086A               	movf	ldexp@value+3,w
  9998  1719  066D               	xorwf	??_ldexp,w
  9999  171A  3980               	andlw	-128
 10000  171B  066D               	xorwf	??_ldexp,w
 10001  171C  00EA               	movwf	ldexp@value+3
 10002  171D  086B               	movf	ldexp@newexp,w
 10003  171E  3901               	andlw	1
 10004  171F  00ED               	movwf	??_ldexp
 10005  1720  0CED               	rrf	??_ldexp,f
 10006  1721  0CED               	rrf	??_ldexp,f
 10007  1722  0869               	movf	ldexp@value+2,w
 10008  1723  066D               	xorwf	??_ldexp,w
 10009  1724  397F               	andlw	-129
 10010  1725  066D               	xorwf	??_ldexp,w
 10011  1726  00E9               	movwf	ldexp@value+2
 10012  1727  0008               	return
 10013  1728                     __end_of_ldexp:	
 10014  1728                     __ptext1296:	
 10015 ;; =============== function _print_buffer ends ============
 10016                           
 10017                           
 10018 ;; *************** function _floor *****************
 10019 ;; Defined at:
 10020 ;;		line 14 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\floor.c"
 10021 ;; Parameters:    Size  Location     Type
 10022 ;;  x               4   71[BANK0 ] unsigned char 
 10023 ;; Auto vars:     Size  Location     Type
 10024 ;;  i               4    0[BANK1 ] unsigned char 
 10025 ;;  expon           2    4[BANK1 ] int 
 10026 ;; Return value:  Size  Location     Type
 10027 ;;                  4   71[BANK0 ] int 
 10028 ;; Registers used:
 10029 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 10030 ;; Tracked objects:
 10031 ;;		On entry : 60/0
 10032 ;;		On exit  : 140/0
 10033 ;;		Unchanged: FFE9F/0
 10034 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10035 ;;      Params:         0       4       0       0       0
 10036 ;;      Locals:         0       0       6       0       0
 10037 ;;      Temps:          0       0       0       0       0
 10038 ;;      Totals:         0       4       6       0       0
 10039 ;;Total ram usage:       10 bytes
 10040 ;; Hardware stack levels used:    1
 10041 ;; Hardware stack levels required when called:    3
 10042 ;; This function calls:
 10043 ;;		_frexp
 10044 ;;		___flge
 10045 ;;		___fltol
 10046 ;;		___altofl
 10047 ;;		___fladd
 10048 ;; This function is called by:
 10049 ;;		_format_double
 10050 ;;		_exp
 10051 ;; This function uses a non-reentrant model
 10052 ;;
 10053  1728                     _floor:	
 10054                           
 10055                           ; Regs used in _floor: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
 10056  1728  086A               	movf	floor@x+3,w
 10057  1729  00F6               	movwf	?_frexp+3
 10058  172A  0869               	movf	floor@x+2,w
 10059  172B  00F5               	movwf	?_frexp+2
 10060  172C  0868               	movf	floor@x+1,w
 10061  172D  00F4               	movwf	?_frexp+1
 10062  172E  0867               	movf	floor@x,w
 10063  172F  00F3               	movwf	?_frexp
 10064  1730  30A4               	movlw	floor@expon& (0+255)
 10065  1731  00F7               	movwf	?_frexp+4
 10066  1732  160A  118A  24CA   	fcall	_frexp
      +       160A  118A         
 10067  1737  1683               	bsf	3,5	;RP0=1, select bank1
 10068  1738  1FA5               	btfss	(floor@expon+1)^(0+128),7
 10069  1739  2F54               	goto	l9119
 10070  173A  1283               	bcf	3,5	;RP0=0, select bank0
 10071  173B  27F7               	fcall	PL14	;call to abstracted procedure
 10072  173C  01A4               	clrf	?___flge+4
 10073  173D  01A5               	clrf	?___flge+5
 10074  173E  01A6               	clrf	?___flge+6
 10075  173F  01A7               	clrf	?___flge+7
 10076  1740  120A  118A  25BE   	fcall	___flge
      +       160A  118A         
 10077  1745  1803               	btfsc	3,0
 10078  1746  2F4F               	goto	l3994
 10079  1747  30BF               	movlw	191
 10080  1748  00EA               	movwf	?_floor+3
 10081  1749  3080               	movlw	128
 10082  174A  00E9               	movwf	?_floor+2
 10083  174B  3000               	movlw	0
 10084  174C  01E8               	clrf	?_floor+1
 10085  174D  01E7               	clrf	?_floor
 10086  174E  0008               	return
 10087  174F                     l3994:	
 10088  174F  01E7               	clrf	?_floor
 10089  1750  01E8               	clrf	?_floor+1
 10090  1751  01E9               	clrf	?_floor+2
 10091  1752  01EA               	clrf	?_floor+3
 10092  1753  0008               	return
 10093  1754                     l9119:	
 10094  1754  3000               	movlw	0
 10095  1755  0225               	subwf	(floor@expon+1)^(0+128),w
 10096  1756  301D               	movlw	29
 10097  1757  1903               	skipnz
 10098  1758  0224               	subwf	floor@expon^(0+128),w
 10099  1759  1803               	btfsc	3,0
 10100  175A  0008               	return
 10101  175B  1283               	bcf	3,5	;RP0=0, select bank0
 10102  175C  086A               	movf	floor@x+3,w
 10103  175D  00AB               	movwf	?___fltol+3
 10104  175E  0869               	movf	floor@x+2,w
 10105  175F  00AA               	movwf	?___fltol+2
 10106  1760  0868               	movf	floor@x+1,w
 10107  1761  00A9               	movwf	?___fltol+1
 10108  1762  0867               	movf	floor@x,w
 10109  1763  00A8               	movwf	?___fltol
 10110  1764  120A  158A  2672   	fcall	___fltol
      +       160A  118A         
 10111  1769  082B               	movf	?___fltol+3,w
 10112  176A  00B5               	movwf	?___altofl+3
 10113  176B  082A               	movf	?___fltol+2,w
 10114  176C  00B4               	movwf	?___altofl+2
 10115  176D  0829               	movf	?___fltol+1,w
 10116  176E  00B3               	movwf	?___altofl+1
 10117  176F  0828               	movf	?___fltol,w
 10118  1770  00B2               	movwf	?___altofl
 10119  1771  27CF  160A  118A   	fcall	___altofl
 10120  1774  0835               	movf	?___altofl+3,w
 10121  1775  1683               	bsf	3,5	;RP0=1, select bank1
 10122  1776  00A3               	movwf	(floor@i+3)^(0+128)
 10123  1777  1283               	bcf	3,5	;RP0=0, select bank0
 10124  1778  0834               	movf	?___altofl+2,w
 10125  1779  1683               	bsf	3,5	;RP0=1, select bank1
 10126  177A  00A2               	movwf	(floor@i+2)^(0+128)
 10127  177B  1283               	bcf	3,5	;RP0=0, select bank0
 10128  177C  0833               	movf	?___altofl+1,w
 10129  177D  1683               	bsf	3,5	;RP0=1, select bank1
 10130  177E  00A1               	movwf	(floor@i+1)^(0+128)
 10131  177F  1283               	bcf	3,5	;RP0=0, select bank0
 10132  1780  0832               	movf	?___altofl,w
 10133  1781  1683               	bsf	3,5	;RP0=1, select bank1
 10134  1782  00A0               	movwf	floor@i^(0+128)
 10135  1783  1283               	bcf	3,5	;RP0=0, select bank0
 10136  1784  27F7               	fcall	PL14	;call to abstracted procedure
 10137  1785  1683               	bsf	3,5	;RP0=1, select bank1
 10138  1786  0823               	movf	(floor@i+3)^(0+128),w
 10139  1787  1283               	bcf	3,5	;RP0=0, select bank0
 10140  1788  00A7               	movwf	?___flge+7
 10141  1789  1683               	bsf	3,5	;RP0=1, select bank1
 10142  178A  0822               	movf	(floor@i+2)^(0+128),w
 10143  178B  1283               	bcf	3,5	;RP0=0, select bank0
 10144  178C  00A6               	movwf	?___flge+6
 10145  178D  1683               	bsf	3,5	;RP0=1, select bank1
 10146  178E  0821               	movf	(floor@i+1)^(0+128),w
 10147  178F  1283               	bcf	3,5	;RP0=0, select bank0
 10148  1790  00A5               	movwf	?___flge+5
 10149  1791  1683               	bsf	3,5	;RP0=1, select bank1
 10150  1792  0820               	movf	floor@i^(0+128),w
 10151  1793  1283               	bcf	3,5	;RP0=0, select bank0
 10152  1794  00A4               	movwf	?___flge+4
 10153  1795  120A  118A  25BE   	fcall	___flge
      +       160A  118A         
 10154  179A  1803               	btfsc	3,0
 10155  179B  2FBE               	goto	l9129
 10156  179C  30BF               	movlw	191
 10157  179D  00DB               	movwf	?___fladd+3
 10158  179E  3080               	movlw	128
 10159  179F  00DA               	movwf	?___fladd+2
 10160  17A0  01D9               	clrf	?___fladd+1
 10161  17A1  01D8               	clrf	?___fladd
 10162  17A2  1683               	bsf	3,5	;RP0=1, select bank1
 10163  17A3  0823               	movf	(floor@i+3)^(0+128),w
 10164  17A4  1283               	bcf	3,5	;RP0=0, select bank0
 10165  17A5  00DF               	movwf	?___fladd+7
 10166  17A6  1683               	bsf	3,5	;RP0=1, select bank1
 10167  17A7  0822               	movf	(floor@i+2)^(0+128),w
 10168  17A8  1283               	bcf	3,5	;RP0=0, select bank0
 10169  17A9  00DE               	movwf	?___fladd+6
 10170  17AA  1683               	bsf	3,5	;RP0=1, select bank1
 10171  17AB  0821               	movf	(floor@i+1)^(0+128),w
 10172  17AC  1283               	bcf	3,5	;RP0=0, select bank0
 10173  17AD  00DD               	movwf	?___fladd+5
 10174  17AE  1683               	bsf	3,5	;RP0=1, select bank1
 10175  17AF  0820               	movf	floor@i^(0+128),w
 10176  17B0  1283               	bcf	3,5	;RP0=0, select bank0
 10177  17B1  00DC               	movwf	?___fladd+4
 10178  17B2  120A  118A  212A   	fcall	___fladd
 10179  17B5  085B               	movf	?___fladd+3,w
 10180  17B6  00EA               	movwf	?_floor+3
 10181  17B7  085A               	movf	?___fladd+2,w
 10182  17B8  00E9               	movwf	?_floor+2
 10183  17B9  0859               	movf	?___fladd+1,w
 10184  17BA  00E8               	movwf	?_floor+1
 10185  17BB  0858               	movf	?___fladd,w
 10186  17BC  00E7               	movwf	?_floor
 10187  17BD  0008               	return
 10188  17BE                     l9129:	
 10189  17BE  1683               	bsf	3,5	;RP0=1, select bank1
 10190  17BF  0823               	movf	(floor@i+3)^(0+128),w
 10191  17C0  1283               	bcf	3,5	;RP0=0, select bank0
 10192  17C1  00EA               	movwf	?_floor+3
 10193  17C2  1683               	bsf	3,5	;RP0=1, select bank1
 10194  17C3  0822               	movf	(floor@i+2)^(0+128),w
 10195  17C4  1283               	bcf	3,5	;RP0=0, select bank0
 10196  17C5  00E9               	movwf	?_floor+2
 10197  17C6  1683               	bsf	3,5	;RP0=1, select bank1
 10198  17C7  0821               	movf	(floor@i+1)^(0+128),w
 10199  17C8  1283               	bcf	3,5	;RP0=0, select bank0
 10200  17C9  00E8               	movwf	?_floor+1
 10201  17CA  1683               	bsf	3,5	;RP0=1, select bank1
 10202  17CB  0820               	movf	floor@i^(0+128),w
 10203  17CC  1283               	bcf	3,5	;RP0=0, select bank0
 10204  17CD  00E7               	movwf	?_floor
 10205  17CE  0008               	return
 10206  17CF                     __end_of_floor:	
 10207  17CF                     __ptext1299:	
 10208 ;; =============== function ___lltofl ends ============
 10209                           
 10210                           
 10211 ;; *************** function ___altofl *****************
 10212 ;; Defined at:
 10213 ;;		line 37 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\altofl.c"
 10214 ;; Parameters:    Size  Location     Type
 10215 ;;  c               4   18[BANK0 ] long 
 10216 ;; Auto vars:     Size  Location     Type
 10217 ;;  sign            1   22[BANK0 ] unsigned char 
 10218 ;; Return value:  Size  Location     Type
 10219 ;;                  4   18[BANK0 ] unsigned char 
 10220 ;; Registers used:
 10221 ;;		wreg, status,2, status,0, pclath, cstack
 10222 ;; Tracked objects:
 10223 ;;		On entry : 160/0
 10224 ;;		On exit  : 160/0
 10225 ;;		Unchanged: FFE9F/0
 10226 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10227 ;;      Params:         0       4       0       0       0
 10228 ;;      Locals:         0       1       0       0       0
 10229 ;;      Temps:          0       0       0       0       0
 10230 ;;      Totals:         0       5       0       0       0
 10231 ;;Total ram usage:        5 bytes
 10232 ;; Hardware stack levels used:    1
 10233 ;; Hardware stack levels required when called:    2
 10234 ;; This function calls:
 10235 ;;		___flpack
 10236 ;; This function is called by:
 10237 ;;		_floor
 10238 ;; This function uses a non-reentrant model
 10239 ;;
 10240  17CF                     ___altofl:	
 10241                           
 10242                           ; Regs used in ___altofl: [wreg+status,2+status,0+pclath+cstack]
 10243  17CF  01B6               	clrf	___altofl@sign
 10244  17D0  1FB5               	btfss	___altofl@c+3,7
 10245  17D1  2FDF               	goto	l9099
 10246  17D2  09B2               	comf	___altofl@c,f
 10247  17D3  09B3               	comf	___altofl@c+1,f
 10248  17D4  09B4               	comf	___altofl@c+2,f
 10249  17D5  09B5               	comf	___altofl@c+3,f
 10250  17D6  0AB2               	incf	___altofl@c,f
 10251  17D7  1903               	skipnz
 10252  17D8  0AB3               	incf	___altofl@c+1,f
 10253  17D9  1903               	skipnz
 10254  17DA  0AB4               	incf	___altofl@c+2,f
 10255  17DB  1903               	skipnz
 10256  17DC  0AB5               	incf	___altofl@c+3,f
 10257  17DD  01B6               	clrf	___altofl@sign
 10258  17DE  0AB6               	incf	___altofl@sign,f
 10259  17DF                     l9099:	
 10260  17DF  0835               	movf	___altofl@c+3,w
 10261  17E0  00A3               	movwf	?___flpack+3
 10262  17E1  0834               	movf	___altofl@c+2,w
 10263  17E2  00A2               	movwf	?___flpack+2
 10264  17E3  0833               	movf	___altofl@c+1,w
 10265  17E4  00A1               	movwf	?___flpack+1
 10266  17E5  0832               	movf	___altofl@c,w
 10267  17E6  00A0               	movwf	?___flpack
 10268  17E7  3096               	movlw	150
 10269  17E8  00A4               	movwf	?___flpack+4
 10270  17E9  0836               	movf	___altofl@sign,w
 10271  17EA  00A5               	movwf	?___flpack+5
 10272  17EB  120A  158A  27A5   	fcall	___flpack
 10273  17EE  0823               	movf	?___flpack+3,w
 10274  17EF  00B5               	movwf	?___altofl+3
 10275  17F0  0822               	movf	?___flpack+2,w
 10276  17F1  00B4               	movwf	?___altofl+2
 10277  17F2  0821               	movf	?___flpack+1,w
 10278  17F3  00B3               	movwf	?___altofl+1
 10279  17F4  0820               	movf	?___flpack,w
 10280  17F5  00B2               	movwf	?___altofl
 10281  17F6  0008               	return
 10282  17F7                     __end_of___altofl:	
 10283  17F7                     PL14:	
 10284  17F7  086A               	movf	floor@x+3,w
 10285  17F8  00A3               	movwf	?___flge+3
 10286  17F9  0869               	movf	floor@x+2,w
 10287  17FA  00A2               	movwf	?___flge+2
 10288  17FB  0868               	movf	floor@x+1,w
 10289  17FC  00A1               	movwf	?___flge+1
 10290  17FD  0867               	movf	floor@x,w
 10291  17FE  00A0               	movwf	?___flge
 10292  17FF  0008               	return
 10293                           
 10294                           	psect	text1308
 10295  1116                     __ptext1308:	
 10296 ;; =============== function _timer0_read_ps ends ============
 10297                           
 10298                           
 10299 ;; *************** function _ser_put *****************
 10300 ;; Defined at:
 10301 ;;		line 74 in file "../../../lib/ser.c"
 10302 ;; Parameters:    Size  Location     Type
 10303 ;;  s               1    wreg     PTR const unsigned char 
 10304 ;;		 -> buffer(17), 
 10305 ;;  n               2    4[COMMON] unsigned int 
 10306 ;; Auto vars:     Size  Location     Type
 10307 ;;  s               1    6[COMMON] PTR const unsigned char 
 10308 ;;		 -> buffer(17), 
 10309 ;; Return value:  Size  Location     Type
 10310 ;;		None               void
 10311 ;; Registers used:
 10312 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 10313 ;; Tracked objects:
 10314 ;;		On entry : 60/60
 10315 ;;		On exit  : 20/20
 10316 ;;		Unchanged: FFE9F/0
 10317 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10318 ;;      Params:         2       0       0       0       0
 10319 ;;      Locals:         1       0       0       0       0
 10320 ;;      Temps:          0       0       0       0       0
 10321 ;;      Totals:         3       0       0       0       0
 10322 ;;Total ram usage:        3 bytes
 10323 ;; Hardware stack levels used:    1
 10324 ;; Hardware stack levels required when called:    2
 10325 ;; This function calls:
 10326 ;;		_ser_putch
 10327 ;; This function is called by:
 10328 ;;		_buf_to_ser
 10329 ;; This function uses a non-reentrant model
 10330 ;;
 10331  1116                     _ser_put:	
 10332                           
 10333                           ; Regs used in _ser_put: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 10334                           ;ser_put@s stored from wreg
 10335  1116  00F6               	movwf	ser_put@s
 10336  1117                     l8831:	
 10337                           ;ser.c: 75: while(n--) ser_putch(*s++);
 10338                           
 10339  1117  3001               	movlw	1
 10340  1118  02F4               	subwf	ser_put@n,f
 10341  1119  3000               	movlw	0
 10342  111A  1C03               	skipc
 10343  111B  03F5               	decf	ser_put@n+1,f
 10344  111C  02F5               	subwf	ser_put@n+1,f
 10345  111D  0A74               	incf	ser_put@n,w
 10346  111E  1903               	skipnz
 10347  111F  0A75               	incf	ser_put@n+1,w
 10348  1120  1903               	btfsc	3,2
 10349  1121  0008               	return
 10350  1122  0876               	movf	ser_put@s,w
 10351  1123  0084               	movwf	4
 10352  1124  1783               	bsf	3,7	;select IRP bank2
 10353  1125  0800               	movf	0,w
 10354  1126  120A  158A  244E   	fcall	_ser_putch
      +       160A  118A         
 10355  112B  0AF6               	incf	ser_put@s,f
 10356  112C  2917               	goto	l8831
 10357  112D                     __end_of_ser_put:	
 10358                           
 10359                           	psect	text1319
 10360  07FB                     __ptext1319:	
 10361 ;; =============== function _delay10ms ends ============
 10362                           
 10363                           
 10364 ;; *************** function _print_indicator *****************
 10365 ;; Defined at:
 10366 ;;		line 186 in file "../../../src/print.c"
 10367 ;; Parameters:    Size  Location     Type
 10368 ;;  indicate        1    wreg     unsigned char 
 10369 ;; Auto vars:     Size  Location     Type
 10370 ;;		None
 10371 ;; Return value:  Size  Location     Type
 10372 ;;		None               void
 10373 ;; Registers used:
 10374 ;;		wreg
 10375 ;; Tracked objects:
 10376 ;;		On entry : 0/40
 10377 ;;		On exit  : 0/40
 10378 ;;		Unchanged: FFFFFFFF/0
 10379 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10380 ;;      Params:         0       0       0       0       0
 10381 ;;      Locals:         0       0       0       0       0
 10382 ;;      Temps:          0       0       0       0       0
 10383 ;;      Totals:         0       0       0       0       0
 10384 ;;Total ram usage:        0 bytes
 10385 ;; Hardware stack levels used:    1
 10386 ;; Hardware stack levels required when called:    1
 10387 ;; This function calls:
 10388 ;;		Nothing
 10389 ;; This function is called by:
 10390 ;;		_main
 10391 ;; This function uses a non-reentrant model
 10392 ;;
 10393  07FB                     _print_indicator:	
 10394                           
 10395                           ; Regs used in _print_indicator: [wreg]
 10396  07FB  0008               	return
 10397  07FC                     __end_of_print_indicator:	
 10398                           
 10399                           	psect	text1323
 10400  115D                     __ptext1323:	
 10401 ;; =============== function _buffer_init ends ============
 10402                           
 10403                           
 10404 ;; *************** function _timer0_init *****************
 10405 ;; Defined at:
 10406 ;;		line 28 in file "../../../lib/timer.c"
 10407 ;; Parameters:    Size  Location     Type
 10408 ;;  ps_mode         1    wreg     unsigned char 
 10409 ;; Auto vars:     Size  Location     Type
 10410 ;;  ps_mode         1    5[COMMON] unsigned char 
 10411 ;;  prescaler       1    4[COMMON] unsigned char 
 10412 ;; Return value:  Size  Location     Type
 10413 ;;		None               void
 10414 ;; Registers used:
 10415 ;;		wreg, status,2, status,0
 10416 ;; Tracked objects:
 10417 ;;		On entry : 17F/20
 10418 ;;		On exit  : 0/0
 10419 ;;		Unchanged: FFE00/0
 10420 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10421 ;;      Params:         0       0       0       0       0
 10422 ;;      Locals:         2       0       0       0       0
 10423 ;;      Temps:          1       0       0       0       0
 10424 ;;      Totals:         3       0       0       0       0
 10425 ;;Total ram usage:        3 bytes
 10426 ;; Hardware stack levels used:    1
 10427 ;; Hardware stack levels required when called:    1
 10428 ;; This function calls:
 10429 ;;		Nothing
 10430 ;; This function is called by:
 10431 ;;		_main
 10432 ;; This function uses a non-reentrant model
 10433 ;;
 10434  115D                     _timer0_init:	
 10435                           
 10436                           ; Regs used in _timer0_init: [wreg+status,2+status,0]
 10437                           ;timer0_init@ps_mode stored from wreg
 10438  115D  00F5               	movwf	timer0_init@ps_mode
 10439                           
 10440                           ;timer.c: 29: uint8_t prescaler = ps_mode & 0b1111;
 10441  115E  00F4               	movwf	timer0_init@prescaler
 10442  115F  300F               	movlw	15
 10443  1160  05F4               	andwf	timer0_init@prescaler,f
 10444                           
 10445                           ;timer.c: 31: TMR0 = 0;
 10446  1161  1283               	bcf	3,5	;RP0=0, select bank0
 10447  1162  0181               	clrf	1	;volatile
 10448                           
 10449                           ;timer.c: 41: T0CS = (ps_mode & 0x20) ? 1 : 0;
 10450  1163  1EF5               	btfss	timer0_init@ps_mode,5
 10451  1164  2968               	goto	u1290
 10452  1165  218B               	call	PL25	;select bank 1
 10453  1166  1681               	bsf	1,5
 10454  1167  296A               	goto	l7429
 10455  1168                     u1290:	
 10456  1168  218B               	call	PL25	;select bank 1
 10457  1169  1281               	bcf	1,5
 10458  116A                     l7429:	
 10459                           
 10460                           ;timer.c: 42: T0SE = (ps_mode & 0x10) ? 1 : 0;
 10461  116A  1E75               	btfss	timer0_init@ps_mode,4
 10462  116B  296F               	goto	u1310
 10463  116C  218B               	call	PL25	;select bank 1
 10464  116D  1601               	bsf	1,4
 10465  116E  2971               	goto	l7431
 10466  116F                     u1310:	
 10467  116F  218B               	call	PL25	;select bank 1
 10468  1170  1201               	bcf	1,4
 10469  1171                     l7431:	
 10470                           
 10471                           ;timer.c: 44: if(prescaler > 0) {
 10472  1171  0874               	movf	timer0_init@prescaler,w
 10473  1172  1903               	btfsc	3,2
 10474  1173  2984               	goto	l7437
 10475                           
 10476                           ;timer.c: 45: PSA = prescaler > 0;
 10477  1174  08F4               	movf	timer0_init@prescaler,f
 10478  1175  1903               	btfsc	3,2
 10479  1176  297A               	goto	u1340
 10480  1177  218B               	call	PL25	;select bank 1
 10481  1178  1581               	bsf	1,3
 10482  1179  297C               	goto	l7435
 10483  117A                     u1340:	
 10484  117A  218B               	call	PL25	;select bank 1
 10485  117B  1181               	bcf	1,3
 10486  117C                     l7435:	
 10487                           
 10488                           ;timer.c: 46: OPTION_REGbits.PS = prescaler - 1;
 10489  117C  30FF               	movlw	255
 10490  117D  0774               	addwf	timer0_init@prescaler,w
 10491  117E  00F3               	movwf	??_timer0_init
 10492  117F  0801               	movf	1,w	;volatile
 10493  1180  0673               	xorwf	??_timer0_init,w
 10494  1181  39F8               	andlw	-8
 10495  1182  0673               	xorwf	??_timer0_init,w
 10496  1183  0081               	movwf	1	;volatile
 10497  1184                     l7437:	
 10498                           
 10499                           ;timer.c: 47: }
 10500                           ;timer.c: 75: TMR0IF = 0;
 10501  1184  110B               	bcf	11,2
 10502                           
 10503                           ;timer.c: 76: T0IE = (ps_mode & 0x80) ? 1 : 0;
 10504  1185  1FF5               	btfss	timer0_init@ps_mode,7
 10505  1186  2989               	goto	u1360
 10506  1187  168B               	bsf	11,5
 10507  1188  0008               	return
 10508  1189                     u1360:	
 10509  1189  128B               	bcf	11,5
 10510  118A  0008               	return
 10511  118B                     __end_of_timer0_init:	
 10512  118B                     PL25:	
 10513  118B  1683               	bsf	3,5	;RP0=1, select bank1
 10514  118C  1303               	bcf	3,6	;RP1=0, select bank1
 10515  118D  0008               	return
 10516                           
 10517                           	psect	text1324
 10518  112D                     __ptext1324:	
 10519 ;; =============== function _timer0_init ends ============
 10520                           
 10521                           
 10522 ;; *************** function _ser_init *****************
 10523 ;; Defined at:
 10524 ;;		line 103 in file "../../../lib/ser.c"
 10525 ;; Parameters:    Size  Location     Type
 10526 ;;		None
 10527 ;; Auto vars:     Size  Location     Type
 10528 ;;		None
 10529 ;; Return value:  Size  Location     Type
 10530 ;;		None               void
 10531 ;; Registers used:
 10532 ;;		wreg, status,2
 10533 ;; Tracked objects:
 10534 ;;		On entry : 60/0
 10535 ;;		On exit  : 60/0
 10536 ;;		Unchanged: FFF9F/0
 10537 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10538 ;;      Params:         0       0       0       0       0
 10539 ;;      Locals:         0       0       0       0       0
 10540 ;;      Temps:          0       0       0       0       0
 10541 ;;      Totals:         0       0       0       0       0
 10542 ;;Total ram usage:        0 bytes
 10543 ;; Hardware stack levels used:    1
 10544 ;; Hardware stack levels required when called:    1
 10545 ;; This function calls:
 10546 ;;		Nothing
 10547 ;; This function is called by:
 10548 ;;		_main
 10549 ;; This function uses a non-reentrant model
 10550 ;;
 10551  112D                     _ser_init:	
 10552                           
 10553                           ;ser.c: 104: TRISC &= ~0x40;
 10554                           
 10555                           ; Regs used in _ser_init: [wreg+status,2]
 10556  112D  1683               	bsf	3,5	;RP0=1, select bank1
 10557  112E  1307               	bcf	7,6	;volatile
 10558                           
 10559                           ;ser.c: 106: TRISC |= 0x80;
 10560  112F  1787               	bsf	7,7	;volatile
 10561  1130  301F               	movlw	31
 10562                           
 10563                           ;ser.c: 108: BRGH = 1;
 10564  1131  1518               	bsf	24,2
 10565                           
 10566                           ;ser.c: 114: SPBRG = ser_brg;
 10567  1132  0099               	movwf	25	;volatile
 10568                           
 10569                           ;ser.c: 117: TX9 = 0;
 10570  1133  1318               	bcf	24,6
 10571                           
 10572                           ;ser.c: 118: RX9 = 0;
 10573  1134  1283               	bcf	3,5	;RP0=0, select bank0
 10574  1135  1318               	bcf	24,6
 10575                           
 10576                           ;ser.c: 120: SYNC = 0;
 10577  1136  1683               	bsf	3,5	;RP0=1, select bank1
 10578  1137  1218               	bcf	24,4
 10579                           
 10580                           ;ser.c: 121: SPEN = 1;
 10581  1138  1283               	bcf	3,5	;RP0=0, select bank0
 10582  1139  1798               	bsf	24,7
 10583                           
 10584                           ;ser.c: 122: CREN = 1;
 10585  113A  1618               	bsf	24,4
 10586                           
 10587                           ;ser.c: 123: TXIE = 0;
 10588  113B  1683               	bsf	3,5	;RP0=1, select bank1
 10589  113C  120C               	bcf	12,4
 10590                           
 10591                           ;ser.c: 125: TXEN = 1;
 10592  113D  1698               	bsf	24,5
 10593                           
 10594                           ;ser.c: 126: PEIE = 1;
 10595  113E  170B               	bsf	11,6
 10596                           
 10597                           ;ser.c: 128: rxiptr = rxoptr = txiptr = txoptr = 0;
 10598  113F  01FA               	clrf	_txoptr	;volatile
 10599  1140  01F9               	clrf	_txiptr	;volatile
 10600  1141  1283               	bcf	3,5	;RP0=0, select bank0
 10601  1142  01EF               	clrf	_rxoptr	;volatile
 10602  1143  01F8               	clrf	_rxiptr	;volatile
 10603  1144  0008               	return
 10604  1145                     __end_of_ser_init:	
 10605                           
 10606                           	psect	text1327
 10607  118E                     __ptext1327:	
 10608 ;; =============== function _buffer_putch ends ============
 10609                           
 10610                           
 10611 ;; *************** function _isr *****************
 10612 ;; Defined at:
 10613 ;;		line 80 in file "../../../LC-meter.c"
 10614 ;; Parameters:    Size  Location     Type
 10615 ;;		None
 10616 ;; Auto vars:     Size  Location     Type
 10617 ;;		None
 10618 ;; Return value:  Size  Location     Type
 10619 ;;                  2  3353[COMMON] int 
 10620 ;; Registers used:
 10621 ;;		wreg, fsr0l, fsr0h, status,2, status,0
 10622 ;; Tracked objects:
 10623 ;;		On entry : 0/0
 10624 ;;		On exit  : 40/0
 10625 ;;		Unchanged: FFE9F/0
 10626 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10627 ;;      Params:         0       0       0       0       0
 10628 ;;      Locals:         0       0       0       0       0
 10629 ;;      Temps:          3       0       0       0       0
 10630 ;;      Totals:         3       0       0       0       0
 10631 ;;Total ram usage:        3 bytes
 10632 ;; Hardware stack levels used:    1
 10633 ;; This function calls:
 10634 ;;		Nothing
 10635 ;; This function is called by:
 10636 ;;		Interrupt level 1
 10637 ;; This function uses a non-reentrant model
 10638 ;;
 10639  118E                     _isr:	
 10640                           
 10641                           ;LC-meter.c: 98: if(RCIF) { rxfifo[rxiptr] = RCREG; ser_tmp = (rxiptr + 1) & ((uint8_t)1
      +                          6 - 1); if(ser_tmp != rxoptr) rxiptr = ser_tmp; }; if(TXIF && TXIE) { TXREG = txfifo[txo
      +                          ptr]; ++txoptr; txoptr &= ((uint8_t)16 - 1); if(txoptr == txiptr) { TXIE = 0; }; TXIF = 
      +                          0; 
 10642  118E  1283               	bcf	3,5	;RP0=0, select bank0
 10643  118F  1303               	bcf	3,6	;RP1=0, select bank0
 10644  1190  1E8C               	btfss	12,5
 10645  1191  29A5               	goto	i1l7455
 10646  1192  0878               	movf	_rxiptr,w
 10647  1193  3E90               	addlw	_rxfifo& (0+255)
 10648  1194  0084               	movwf	4
 10649  1195  081A               	movf	26,w	;volatile
 10650  1196  1783               	bsf	3,7	;select IRP bank3
 10651  1197  0080               	movwf	0
 10652  1198  0A78               	incf	_rxiptr,w	;volatile
 10653  1199  1683               	bsf	3,5	;RP0=1, select bank1
 10654  119A  00E6               	movwf	_ser_tmp^(0+128)
 10655  119B  300F               	movlw	15
 10656  119C  05E6               	andwf	_ser_tmp^(0+128),f
 10657  119D  0866               	movf	_ser_tmp^(0+128),w
 10658  119E  1283               	bcf	3,5	;RP0=0, select bank0
 10659  119F  066F               	xorwf	_rxoptr,w	;volatile
 10660  11A0  1903               	skipnz
 10661  11A1  29A5               	goto	i1l7455
 10662  11A2  1683               	bsf	3,5	;RP0=1, select bank1
 10663  11A3  0866               	movf	_ser_tmp^(0+128),w
 10664  11A4  00F8               	movwf	_rxiptr	;volatile
 10665  11A5                     i1l7455:	
 10666  11A5  1283               	bcf	3,5	;RP0=0, select bank0
 10667  11A6  1E0C               	btfss	12,4
 10668  11A7  29BC               	goto	i1l3358
 10669  11A8  1683               	bsf	3,5	;RP0=1, select bank1
 10670  11A9  1E0C               	btfss	12,4
 10671  11AA  29BC               	goto	i1l3358
 10672  11AB  087A               	movf	_txoptr,w
 10673  11AC  3EA0               	addlw	_txfifo& (0+255)
 10674  11AD  0084               	movwf	4
 10675  11AE  1783               	bsf	3,7	;select IRP bank3
 10676  11AF  0800               	movf	0,w
 10677  11B0  1283               	bcf	3,5	;RP0=0, select bank0
 10678  11B1  0099               	movwf	25	;volatile
 10679  11B2  0AFA               	incf	_txoptr,f	;volatile
 10680  11B3  300F               	movlw	15
 10681  11B4  05FA               	andwf	_txoptr,f	;volatile
 10682  11B5  087A               	movf	_txoptr,w	;volatile
 10683  11B6  0679               	xorwf	_txiptr,w	;volatile
 10684  11B7  1683               	bsf	3,5	;RP0=1, select bank1
 10685  11B8  1903               	btfsc	3,2
 10686  11B9  120C               	bcf	12,4
 10687  11BA  1283               	bcf	3,5	;RP0=0, select bank0
 10688  11BB  120C               	bcf	12,4
 10689  11BC                     i1l3358:	
 10690  11BC  0872               	movf	??_isr+2,w
 10691  11BD  008A               	movwf	10
 10692  11BE  0871               	movf	??_isr+1,w
 10693  11BF  0084               	movwf	4
 10694  11C0  0E70               	swapf	??_isr^(0+-128),w
 10695  11C1  0083               	movwf	3
 10696  11C2  0EFE               	swapf	126,f
 10697  11C3  0E7E               	swapf	126,w
 10698  11C4  0009               	retfie
 10699  11C5                     __end_of_isr:	
 10700                           
 10701                           	psect	intentry
 10702  0004                     __pintentry:	
 10703                           ; Regs used in _isr: [wreg-fsr0h+status,2+status,0]
 10704                           
 10705  0004                     interrupt_function:	
 10706  007E                     saved_w	set	btemp
 10707  0004  00FE               	movwf	btemp
 10708  0005  0E03               	swapf	3,w
 10709  0006  00F0               	movwf	??_isr
 10710  0007  0804               	movf	4,w
 10711  0008  00F1               	movwf	??_isr+1
 10712  0009  080A               	movf	10,w
 10713  000A  00F2               	movwf	??_isr+2
 10714  000B  160A  118A  298E   	ljmp	_isr
 10715                           
 10716                           	psect	text1328
 10717  0000                     __ptext1328:	
 10718 ;; =============== function _isr ends ============
 10719                           
 10720  007E                     btemp	set	126	;btemp
 10721  007E                     wtemp0	set	126


HI-TECH Software PICC Macro Assembler V9.83 build 10920 
Symbol Table                                                                                   Sun Jan 12 08:23:39 2020

                ___altofl@sign 0036                   ___fldiv@cntr 0042                              pc 0002  
                 ___fldiv@sign 0044                             _F1 01CD                             _F2 01B0  
                           _F3 01B4                             fsr 0004                   ___flpack@arg 0020  
                 ___flpack@exp 0024                            l653 0000                            l639 0000  
                          _GIE 005F                            _RC3 003B                            _PSA 040B  
                          _RX9 00C6                            _TX9 04C6                            _exp 1509  
                          _log 13F2                            _isr 118E                            _pow 12B7  
                          fsr0 0004                            indf 0000             timer0_read_ps@prev 0075  
                 ___flmul@cntr 0056                   ___flmul@sign 0057                  ___flpack@sign 0025  
                 ___fltol@exp1 0031                           l1301 0000                           l2007 0000  
                         l1323 0000                           l1307 0000                           l4013 0000  
                         l1295 0000                           l4023 0000                           l3351 0000  
                         l4303 0EA6                           l4207 0000                           l4321 05F8  
                         l3362 1253                           l4076 0000                           l2660 0000  
                         l4317 0000                           l4086 0000                           l1951 0000  
                         l4191 01B0                           l2663 0000                           l4440 0000  
                         l1946 0000                           l2666 0000                           l1939 0000  
                         l1971 0000                           l4435 0000                           l4292 0000  
                         l2676 0000                           l4526 0000                           l2686 0000  
                         l1992 0000                           l4553 0000                           l1986 0FF0  
                         l4386 0000                           l1989 0000                           l4575 0FAE  
                         l7401 0000                           l9001 0000                           l7411 0000  
                         l7403 0000                           l9011 0000                           l9003 0000  
                         ?_exp 00BA                           l7413 0000                           l7405 0000  
                         l7421 0000                           l9021 0000                           l9013 0E31  
                         l9005 0000                           ?_log 00B4                           l7415 0000  
                         l7407 0000                           l7431 1171                           l7423 0000  
                         l9023 0000                           l9007 0000                           l9031 0552  
                         l9103 0000                           l9111 0000                           l7417 0000  
                         l7409 0000                           l7433 0000                           l7425 0000  
                         l9017 0000                           l9009 0000                           l9041 0000  
                         l9121 0000                           l9201 0000                           l3994 174F  
                         l7419 0000                           l7435 117C                           l7427 0000  
                         l9051 0000                           l9043 0000                           l9035 0566  
                         l9027 0000                           l9107 0000                           l9203 0000  
                         l9211 1412                           ?_isr 0070                           l7437 1184  
                         l7429 116A                           l9061 0000                           l9053 0578  
                         l9045 0000                           l9037 0000                           l9109 0000  
                         l9141 07E5                           l9133 0000                           l9221 0000  
                         l9301 0000                           l7439 0000                           l9071 0000  
                         l9063 0000                           l9047 0000                           l9039 0000  
                         l9119 1754                           l9143 0000                           l9215 141E  
                         l9207 0000                           l9231 1517                           l9303 0000  
                         l9311 0000                           l9073 0000                           l9065 0590  
                         l9057 0582                           l9049 0000                           l9081 0000  
                         l9129 17BE                           l9137 0000                           l9145 0000  
                         l9161 0000                           l9217 0000                           l9225 0000  
                         l9305 0000                           l9321 0000                           l9313 0000  
                         l9401 0CA4                           l8611 0000                           l9075 0000  
                         l9059 0000                           l9139 07CF                           l9147 0000  
                         l9155 0121                           l9171 0000                           l9219 0000  
                         l9251 0000                           l9243 1564                           l9323 0000  
                         l9315 0000                           l9331 0000                           l9411 0000  
                         l9403 0000                           l8605 0000                           l8621 0000  
                         l8701 0FB3                           l9069 059A                           l9085 0EC8  
                         l9093 0000                           l9149 0000                           l9181 0000  
                         l9173 0000                           l9165 0000                           l9253 0000  
                         l9245 0000                           l9325 0000                           l9317 0000  
                         l9309 0000                           l9341 0000                           l9501 0000  
                         l9421 0000                           l9413 0000                           l9405 0000  
                         l8623 0000                           l8615 0000                           l7399 0000  
                         l8631 0000                           l8711 0FCB                           l8703 0FB9  
                         l9079 0000                           l9095 0000                           l9159 0000  
                         l9191 0000                           l9183 0000                           l9175 0000  
                         l9167 0000                           l9255 0000                           l9247 0000  
                         l9239 153F                           l9271 0000                           l9319 0000  
                         l9351 0000                           l9343 0000                           l9335 0259  
                         l9327 0000                           l9511 0000                           l9503 0BDA  
                         l9431 0000                           l9423 0000                           l9415 0000  
                         l9407 0000                           l8625 0000                           l8617 0C4F  
                         l8641 0000                           l8721 0000                           l8713 0FD0  
                         l8705 0FBE                           l8801 0000                           l9089 0000  
                         l9193 0000                           l9185 0000                           l9177 0000  
                         l9169 0000                           l9265 1679                           l9257 0000  
                         l9249 1596                           l9281 12DC                           l9353 0000  
                         l9345 0000                           l9337 0000                           l9329 0000  
                         l9441 0000                           l9433 0000                           l9425 0000  
                         l9417 0000                           l9409 0000                           l9521 0000  
                         l9513 0000                           l8627 0000                           l8619 0000  
                         l8643 0000                           l8635 0000                           l8651 0000  
                         l8715 0FD6                           l8707 0000                           l8723 0000  
                         l8731 0000                           l8803 0F35                           l9099 17DF  
                         l9195 0000                           l9187 0000                           l9179 0000  
                         l9259 0000                           l9275 0000                           l9371 04EE  
                         l9355 0000                           l9347 0000                           l9339 0000  
                         l9507 0000                           l9451 0000                           l9443 0000  
                         l9435 0000                           l9427 0000                           l9419 0000  
                         l9531 0000                           l9523 0000                           l9515 0000  
                         l8629 0000                           l8645 0000                           l8661 0F65  
                         l8653 0000                           l8709 0000                           l8741 0000  
                         l8733 0E7C                           l8813 0000                           l8805 0F39  
                         l8821 0000                           l9197 0000                           l9189 0000  
                         l9269 0000                           l9293 1358                           l9277 0000  
                         l9381 0000                           l9373 0000                           l9365 0000  
                         l9357 0000                           l9349 0000                           l9509 0000  
                         l9461 0000                           l9453 0000                           l9445 0000  
                         l9437 0000                           l9429 0000                           l9541 0000  
                         l9533 0000                           l9525 0000                           l9517 0000  
                         l8647 0000                           l8639 14DB                           l8671 0000  
                         l8663 0000                           l8719 0FDD                           l8751 0000  
                         l8743 0000                           l8735 0E81                           l8807 0F44  
                         l8823 0C38                           l8831 1117                           l8903 170F  
                         l8911 0000                           l9199 0000                           l9295 0000  
                         l9287 12EA                           l9383 0000                           l9367 04DB  
                         l9375 04FF                           l9391 0000                           l9471 0000  
                         l9463 0000                           l9455 0000                           l9447 0000  
                         l9439 0000                           l9551 0000                           l9543 0000  
                         l9535 0000                           l9527 0000                           l9519 0000  
                         l8673 0F7C                           l8761 0000                           l8753 0EA2  
                         l8737 0000                           l8817 0000                           l8825 0000  
                         l8841 0000                           l8833 0000                           l8905 0000  
                         l8921 015A                           l8913 0000                           l9297 0000  
                         l9369 0000                           l9377 0502                           l9393 0000  
                         l9385 0000                           l9481 0000                           l9473 0000  
                         l9457 0000                           l9449 0000                           l9561 0000  
                         l9553 0000                           l9545 0000                           l9537 0000  
                         l9529 0000                           l8667 0000                           l8691 0000  
                         l8739 0000                           l8763 0000                           l8851 0000  
                         l8843 0000                           l8835 0000                           l8923 0000  
                         l9299 1372                           l9379 0000                           l9395 0000  
                         l9483 0000                           l9475 0000                           l9467 0985  
                         l9459 0000                           l9571 0000                           l9555 0000  
                         l9547 0000                           l9539 0000                           l8685 0F8D  
                         l8693 0FA0                           l8677 0000                           l8749 0E9A  
                         l8781 0000                           l8829 0000                           l8853 0000  
                         l8845 0000                           l8837 0000                           l8941 0000  
                         l8917 0151                           l8909 0000                           l9389 0000  
                         l9493 0000                           l9485 0000                           l9477 0000  
                         l9469 0000                           l9581 0000                           l9573 0000  
                         l9557 0000                           l9549 0000                           ?_pow 00C5  
                         l8759 0EB0                           l8767 05DB                           l8855 0799  
                         l8847 0000                           l8839 07A0                           l8863 0000  
                         l8871 0000                           l8951 0196                           l8935 0000  
                         l8927 0169                           l9399 0DC8                           l9495 0B85  
                         l9479 0000                           l9583 0000                           l9575 125C  
                         l9567 1242                           l9559 1233                           l8697 0000  
                         l8785 0000                           l8777 0EFA                           l8857 07B2  
                         l8849 0000                           l8953 0000                           l8945 0187  
                         l8937 0000                           l8929 0000                           l9497 0000  
                         l9577 1261                           l8699 0000                           l8787 0F03  
                         l8779 0000                           l8859 0000                           l8867 0000  
                         l8891 0000                           l8883 16CF                           l8875 16B5  
                         l8971 01CC                           l8963 0000                           l8947 018D  
                         l8939 0177                           l9499 0BB0                           l9579 0000  
                         l8797 0000                           l8789 0000                           l8869 06C1  
                         l8877 0000                           l8981 0000                           l8973 0000  
                         l8965 01BE                           l8957 01A6                           l8949 0192  
                         l8799 0000                           l8983 01F1                           l8975 0000  
                         l8959 01AC                           l8991 0E0D                           STR_1 109C  
                         STR_2 109C                           l8969 0000                           STR_3 108C  
                         STR_4 1097                           l8979 0000                           l8995 0E21  
                         l8987 0000                           STR_5 107A                           STR_6 1080  
                         l8997 0000                           STR_7 1086                           STR_8 1072  
                         l8999 0000                           STR_9 109C                           _BRGH 04C2  
                         _T0IE 005D                           _CREN 00C4                           _T0CS 040D  
                         u1310 116F                           _T0SE 040C                           u1340 117A  
                         u1360 1189                           u1290 1168                           _CCal 01DD  
                         u3215 0E44                           u2535 0DE3                           u2625 0F93  
                         u3505 1350                           u2730 0000                           u2735 0E85  
                         u2585 0F6E                           u3465 1672                           u3707 065B  
                         _PEIE 005E                           u3717 0665                           u3727 066F  
                         u3737 0679                           u3657 0628                           u3747 0683  
                         u3667 0633                           _RCIF 0065                           u3757 068D  
                         u3677 063D                           u2975 16D8                           u3687 0647  
                         u3697 0651                           _TMR0 0001                           _SPEN 00C7  
                         _TXIE 0464                           _TXEN 04C5                           _TXIF 0064  
                         _SYNC 04C4                           _bres 01E1                           _main 11C5  
                         _mode 00E7                           btemp 007E                           exp@x 00BA  
                         log@x 00B4                           pow@x 00C5                           pow@y 00C9  
   __end_of_measure_inductance 053E                           start 000E            timer0_read_ps@count 0076  
               ??_buffer_putch 0073                   buffer_puts@x 0077                          ??_exp 0078  
                        ??_log 0078                          ??_isr 0070                          ??_pow 0078  
                ___fltol@sign1 0030                __end_of___fladd 0209                          ?_main 0070  
              __end_of___fldiv 0E72                __end_of___flneg 16AA                          STR_10 1092  
                        STR_11 109C                          STR_12 1052                          STR_13 1062  
                        STR_14 109C                __end_of___flmul 05BE                __end_of___flsub 0EFA  
              __end_of___fltol 0EBF                          _CMCON 009C                __end_of___lwdiv 0F81  
              __end_of___lwmod 0FA5                          _RCREG 001A                          _SPBRG 0099  
                        _PORTC 0007                          _TRISA 0085                          _TRISB 0086  
                        _TRISC 0087                          _TXREG 0019                  ___awtofl@sign 0036  
                 main@new_mode 00DB                          _log10 127A                          _blink 00E4  
                        _floor 1728                          _ldexp 16AA                          _frexp 14CA  
                        _msecs 00DC                          pclath 000A                __end_of_ser_put 112D  
                        pow@yi 00D2                format_number@di 004B                          status 0003  
                        wtemp0 007E                ??_print_reading 0075                  print_buffer@i 0051  
           _format_number$1145 0049                    ldexp@newexp 006B                   __end_of_main 127A  
             format_double@num 00D6                  ?_measure_freq 0052         __size_of_format_double 0152  
                       ??_main 0078            format_double@weight 01D5         __size_of_format_number 005C  
       __size_of_format_xint32 001A                         ?_log10 00BA                         ?_floor 0067  
                       ?_ldexp 0067                         ?_frexp 0073               __end_of___altofl 17F7  
             __end_of___flpack 0FF0               __end_of___awtofl 0EDC               __end_of___lltofl 13F2  
                       i1l3358 11BC                         i1l7451 0000                         i1l7443 0000  
                       i1l7461 0000                         i1l7463 0000                         i1l7447 0000  
                       i1l7455 11A5                         i1l7465 0000                         i1l7449 0000  
                       _INTCON 000B               __end_of___lwtofl 061F                         _TMR0IF 005A  
                       ___flge 05BE                      ??___fladd 0060                      ??___fldiv 003A  
                    ??___flneg 0077                      ??___flmul 004D                      ??___flsub 0078  
                    ??___fltol 002C                   ?_timer0_init 0070           __size_of_buffer_init 0006  
               ??_measure_freq 0054                      ??___lwdiv 0077                      ??___lwmod 0077  
                       _buffer 01BC           __size_of_buffer_puts 0019                         log10@x 00BA  
                       _rxfifo 0190                         clrloop 07F3                         _txfifo 01A0  
                       _rxiptr 0078                         _rxoptr 006F                         floor@i 00A0  
                       _txiptr 0079                         floor@x 0067                         exp@exp 00C2  
                       log@exp 00B8                         _txoptr 007A               __end_of_ser_init 1145  
             __end_of_ser_puts 0C4E                         saved_w 007E                      ??_ser_put 0076  
         __end_of_buffer_putch 0DF9               format_number@buf 0028               format_number@pad 0026  
      _measure_inductance$5382 00B9        _measure_inductance$5383 00BD        _measure_inductance$5384 00A8  
      _measure_inductance$5385 00AC        _measure_inductance$5386 00B0        _measure_inductance$5387 00B4  
                   ___fladd@f1 0058                     ___fladd@f2 005C                     ___flge@ff1 0020  
                   ___flge@ff2 0024                  _format_double 0C7D                     ___altofl@c 0032  
                   ___fldiv@f1 0036                     ___fldiv@f2 0032                     ___fldiv@f3 003E  
                   ___flneg@f1 0073                  _format_number 0EFA                  _format_xint32 0C63  
                   ___flmul@f1 0045                     ___flmul@f2 0049                   eval_poly@res 00B0  
                   ___flsub@f1 006B                     ___flsub@f2 0067                     ___fltol@f1 0028  
                   ___awtofl@c 0032         measure_capacitance@Cin 011F   __size_of_measure_capacitance 041A  
       measure_capacitance@var 011D                 __pcstackCOMMON 0070             __size_of_calibrate 003F  
                 __pidataBANK1 07FA                     ___lltofl@c 0026             __size_of_delay10ms 0001  
                __end_of_log10 12B7                  __end_of_floor 17CF                  __end_of_ldexp 1728  
                __end_of_frexp 1509                     ___lwtofl@c 004D                 _OPTION_REGbits 0081  
               buffer_putch@ch 0076                        ??_log10 0078                        ??_floor 0078  
                      ??_ldexp 006D                        ??_frexp 0020                     _log10$5388 00BE  
                   __pbssBANK0 006F                     __pbssBANK1 00DC                 ?_format_double 00D6  
                   __pbssBANK3 0190             __size_of_eval_poly 0099                 ?_format_number 0023  
               ?_format_xint32 004D       __size_of_print_indicator 0001                     __pmaintext 11C5  
                      ?___flge 0020                     __pintentry 0004                      ?___altofl 0032  
      __size_of_timer0_read_ps 003A                     __ptext1300 060A                     __ptext1301 0EBF  
                   __ptext1310 0EFA                     __ptext1302 053E                     __ptext1311 05BE  
                   __ptext1303 0DF9                     __ptext1320 0F56                     __ptext1312 0E72  
                   __ptext1304 012A                     __ptext1321 0FF0                     __ptext1313 16A1  
                   __ptext1305 16AA                     __ptext1322 06BA                     __ptext1314 0FA5  
                   __ptext1306 06C0                     __ptext1323 115D                     __ptext1315 0F81  
                   __ptext1307 0791                     __ptext1324 112D                     __ptext1316 0F57  
                   __ptext1308 1116                     __ptext1325 0C4E                     __ptext1317 14CA  
                   __ptext1309 0C37                     __ptext1326 0DCF                     __ptext1318 0050  
                   __ptext1327 118E                     __ptext1319 07FB                     __ptext1328 0000  
                   __ptext1290 13F2                     __ptext1291 061F                     __ptext1283 080D  
                   __ptext1292 0EDC                     __ptext1284 0C7D                     __ptext1293 0091  
                   __ptext1285 0209                     __ptext1294 0C27                     __ptext1286 0011  
                   __ptext1295 07CE                     __ptext1287 12B7                     __ptext1296 1728  
                   __ptext1288 127A                     __ptext1297 0C63                     __ptext1289 1509  
                   __ptext1298 13DB                     __ptext1299 17CF                      ?___flpack 0020  
                    ?___awtofl 0032                      ?___lltofl 0026             _measure_inductance 0209  
           __size_of_ser_putch 0015                      ?___lwtofl 004D                     _buf_to_ser 0C27  
          ?_measure_inductance 0070                     _ldexp$4713 00A0              __end_of_calibrate 0050  
            __end_of_delay10ms 0051           __end_of_measure_freq 06BA                      ?_ser_init 0070  
         ??_measure_inductance 0078                      ?_ser_puts 0070                __size_of___flge 004C  
                      ___fladd 012A                        ___fldiv 0DF9                        ___flneg 16A1  
                      ___flmul 053E                        ___flsub 0EDC                        ___fltol 0E72  
                      ___lwdiv 0F57                        ___lwmod 0F81                     ??___altofl 0078  
                   ??___flpack 0073                     ??___awtofl 0078              __end_of_eval_poly 012A  
         __size_of_timer0_init 002E                     ??___lltofl 0077          __size_of_buffer_putch 002A  
                   ??___lwtofl 0078                   __size_of_exp 0198                   __size_of_log 00D8  
                 __size_of_isr 0037                   __size_of_pow 0124                        _seconds 00E0  
                      _ser_tmp 00E6                        _ser_put 1116                ??_format_double 0078  
         end_of_initialization 1159                ??_format_number 0027                ??_format_xint32 0078  
                      exp@sign 00C4              __end_of_ser_putch 0C63                        pow@sign 00D1  
measure_inductance@denominator 00A4          __end_of_print_reading 0F57                     ??_ser_init 0073  
                   ??_ser_puts 0074                   _buffer_putch 0DCF              format_number@base 0025  
            ??_print_indicator 0073                     _print_unit 0FF0                  ?_print_buffer 0070  
          _measure_capacitance 080D                    ?_buf_to_ser 0070                    ___fldiv@exp 0043  
                  ___flmul@exp 0051                  ??_buffer_init 0073           ?_measure_capacitance 0070  
                ??_buffer_puts 0077        measure_capacitance@unit 011C                 format_double@m 01DB  
       measure_inductance@unit 00B8                 __end_of___flge 060A                 _timer0_read_ps 0791  
                   floor@expon 00A4                 ??_print_buffer 0078                 format_number@i 004C  
               format_number@n 0023                 format_xint32@x 004D            start_initialization 1145  
                   eval_poly@d 00A8                     eval_poly@n 00A9                     eval_poly@x 00A4  
        __size_of_measure_freq 009B                     ldexp@value 0067                    __end_of_exp 16A1  
                  __end_of_log 14CA                    __end_of_isr 11C5                    __end_of_pow 13DB  
           format_double@digit 01D9                     frexp@value 0073          ??_measure_capacitance 0078  
       __end_of_timer0_read_ps 07CB                       ??___flge 0073            __size_of_buf_to_ser 0010  
                  __pdataBANK1 00E7                   _measure_freq 061F            __end_of_buffer_init 06C0  
          __end_of_buffer_puts 06D9       print_reading@measurement 0073              __size_of___altofl 0028  
            __size_of___flpack 004B              __size_of___awtofl 001D                    ?_print_unit 0070  
            __size_of___lltofl 0017                    __pbssCOMMON 0078              __size_of___lwtofl 0015  
                __pcstackBANK0 0020                  __pcstackBANK1 00A0                  __pcstackBANK2 0110  
                __pcstackBANK3 01D1              measure_freq@count 0056                      _calibrate 0011  
                    _delay10ms 0050                      __pnvBANK3 01DD                      _main$4322 00DA  
             ___lwdiv@dividend 0075                ?_timer0_read_ps 0073                       ?___fladd 0058  
                     ?___fldiv 0032                       ?___flneg 0073                       ?___flmul 0045  
                     ?___flsub 0067                       ?___fltol 0028              __size_of_ser_init 0018  
                     ?___lwdiv 0073                       ?___lwmod 0073              __size_of_ser_puts 0017  
                    __pstrings 1000                      _eval_poly 0091                       ?_ser_put 0074  
             ___lwdiv@quotient 0021                 __size_of_log10 003D                 __size_of_floor 00A7  
               __size_of_ldexp 007E                 __size_of_frexp 003F              interrupt_function 0004  
                   ?_calibrate 0070                     ser_putch@c 0073                     ?_delay10ms 0070  
              _print_indicator 07FB           __end_of_print_buffer 07E9            __size_of_print_unit 0001  
                  _buffer_init 06BA                      _ser_putch 0C4E                    _buffer_puts 06C0  
  __size_of_measure_inductance 0335                  ??_timer0_init 0073                    __stringbase 1005  
                   ?_eval_poly 00A4                   ??_buf_to_ser 0077          measure_inductance@Lin 00C3  
        measure_inductance@var 00C1          __end_of_format_double 0DCF           format_number@padchar 0048  
        __end_of_format_number 0F56          __end_of_format_xint32 0C7D                      frexp@eptr 0077  
                   ?_ser_putch 0070             __end_of_buf_to_ser 0C37               __size_of___fladd 00DF  
             __size_of___fldiv 0079               __size_of___flneg 0009               __size_of___flmul 0080  
             __size_of___flsub 001E               __size_of___fltol 004D                       ___altofl 17CF  
                     ___flpack 0FA5               __size_of___lwdiv 002A               __size_of___lwmod 0024  
                     ___awtofl 0EBF                       ___lltofl 13DB                       ___lwtofl 060A  
          __end_of_timer0_init 118B                       _exp$4971 00BE                ___lwdiv@divisor 0073  
              ___lwdiv@counter 0020         __size_of_print_reading 0001           timer0_init@prescaler 0074  
             __size_of_ser_put 0017        __end_of_print_indicator 07FC                       _pow$5389 00CD  
                  ??_calibrate 0078                  __size_of_main 00B5                    ??_delay10ms 0073  
                    ser_puts@s 0074                       _msecpart 01E3                       clear_ram 07F2  
                     _ser_init 112D                       _ser_puts 0C37                       _timer1of 01B8  
                     exp@coeff 1006          ___flmul@f3_as_product 0052                       log@coeff 102E  
  measure_inductance@numerator 00A0                   ??_print_unit 0073                    ??_eval_poly 00AB  
                     intlevel1 0000    __end_of_measure_capacitance 0C27          __size_of_print_buffer 001B  
             ___lwmod@dividend 0075               ??_timer0_read_ps 0020                      stringcode 1000  
                     ser_put@n 0074                       ser_put@s 0076                    ??_ser_putch 0073  
           __end_of_print_unit 0FF1                  _print_reading 0F56                    _timer0_init 115D  
           _format_double$5378 01D1       _measure_capacitance$5380 0114       _measure_capacitance$5381 0118  
     _measure_capacitance$5379 0110                     _OPTION_REG 0081             timer0_init@ps_mode 0075  
              ___lwmod@divisor 0073                ___lwmod@counter 0077                   _print_buffer 07CE  
                     stringdir 1000                       stringtab 1000               ?_print_indicator 0070  
                 ___fladd@exp1 0066                   ___fladd@exp2 0065                   ___fladd@sign 0064  
               ?_print_reading 0073                   ?_buffer_init 0070                   ?_buffer_puts 0070  
                ?_buffer_putch 0070  
