

Microchip Technology PIC PRO Macro Assembler V1.34 build -361300703 
                                                                                               Wed Sep 11 23:29:20 2019

Microchip Technology Omniscient Code Generator (PRO mode) build 201502162209
     1                           	processor	16F876A
     2                           	opt	pw 120
     3                           	opt	pm
     4                           	psect	idataCOMMON,global,class=CODE,delta=2
     5                           	psect	idataBANK3,global,class=CODE,delta=2
     6                           	psect	strings,global,class=STRING,delta=2
     7                           	psect	nvBANK3,global,class=BANK3,space=1,delta=1
     8                           	psect	cinit,global,class=CODE,merge=1,delta=2
     9                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
    10                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    12                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    13                           	psect	dataBANK3,global,class=BANK3,space=1,delta=1
    14                           	psect	clrtext,global,class=CODE,delta=2
    15                           	psect	cstackBANK3,global,class=BANK3,space=1,delta=1
    16                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    17                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    18                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    19                           	psect	maintext,global,class=CODE,split=1,delta=2
    20                           	psect	text1,local,class=CODE,merge=1,delta=2
    21                           	psect	text3,local,class=CODE,merge=1,delta=2
    22                           	psect	text4,local,class=CODE,merge=1,delta=2
    23                           	psect	text9,local,class=CODE,merge=1,delta=2
    24                           	psect	text11,local,class=CODE,merge=1,delta=2
    25                           	psect	text13,local,class=CODE,merge=1,delta=2
    26                           	psect	text15,local,class=CODE,merge=1,delta=2
    27                           	psect	text27,local,class=CODE,merge=1,delta=2
    28                           	psect	text32,local,class=CODE,merge=1,delta=2
    29                           	psect	text40,local,class=CODE,merge=1,delta=2
    30                           	psect	text52,local,class=CODE,merge=1,delta=2
    31                           	psect	intentry,global,class=CODE,delta=2
    32                           	psect	functab,global,reloc=256,class=CODE,delta=2
    33                           	psect	pa_nodes,global,class=CODE,delta=2
    34                           	dabs	1,0x7E,2
    35  0000                     	;# 
    36  0001                     	;# 
    37  0002                     	;# 
    38  0003                     	;# 
    39  0004                     	;# 
    40  0005                     	;# 
    41  0006                     	;# 
    42  0007                     	;# 
    43  000A                     	;# 
    44  000B                     	;# 
    45  000C                     	;# 
    46  000D                     	;# 
    47  000E                     	;# 
    48  000E                     	;# 
    49  000F                     	;# 
    50  0010                     	;# 
    51  0011                     	;# 
    52  0012                     	;# 
    53  0013                     	;# 
    54  0014                     	;# 
    55  0015                     	;# 
    56  0015                     	;# 
    57  0016                     	;# 
    58  0017                     	;# 
    59  0018                     	;# 
    60  0019                     	;# 
    61  001A                     	;# 
    62  001B                     	;# 
    63  001B                     	;# 
    64  001C                     	;# 
    65  001D                     	;# 
    66  001E                     	;# 
    67  001F                     	;# 
    68  0081                     	;# 
    69  0085                     	;# 
    70  0086                     	;# 
    71  0087                     	;# 
    72  008C                     	;# 
    73  008D                     	;# 
    74  008E                     	;# 
    75  0091                     	;# 
    76  0092                     	;# 
    77  0093                     	;# 
    78  0094                     	;# 
    79  0098                     	;# 
    80  0099                     	;# 
    81  009C                     	;# 
    82  009D                     	;# 
    83  009E                     	;# 
    84  009F                     	;# 
    85  010C                     	;# 
    86  010D                     	;# 
    87  010E                     	;# 
    88  010F                     	;# 
    89  018C                     	;# 
    90  018D                     	;# 
    91  0000                     	;# 
    92  0001                     	;# 
    93  0002                     	;# 
    94  0003                     	;# 
    95  0004                     	;# 
    96  0005                     	;# 
    97  0006                     	;# 
    98  0007                     	;# 
    99  000A                     	;# 
   100  000B                     	;# 
   101  000C                     	;# 
   102  000D                     	;# 
   103  000E                     	;# 
   104  000E                     	;# 
   105  000F                     	;# 
   106  0010                     	;# 
   107  0011                     	;# 
   108  0012                     	;# 
   109  0013                     	;# 
   110  0014                     	;# 
   111  0015                     	;# 
   112  0015                     	;# 
   113  0016                     	;# 
   114  0017                     	;# 
   115  0018                     	;# 
   116  0019                     	;# 
   117  001A                     	;# 
   118  001B                     	;# 
   119  001B                     	;# 
   120  001C                     	;# 
   121  001D                     	;# 
   122  001E                     	;# 
   123  001F                     	;# 
   124  0081                     	;# 
   125  0085                     	;# 
   126  0086                     	;# 
   127  0087                     	;# 
   128  008C                     	;# 
   129  008D                     	;# 
   130  008E                     	;# 
   131  0091                     	;# 
   132  0092                     	;# 
   133  0093                     	;# 
   134  0094                     	;# 
   135  0098                     	;# 
   136  0099                     	;# 
   137  009C                     	;# 
   138  009D                     	;# 
   139  009E                     	;# 
   140  009F                     	;# 
   141  010C                     	;# 
   142  010D                     	;# 
   143  010E                     	;# 
   144  010F                     	;# 
   145  018C                     	;# 
   146  018D                     	;# 
   147  0000                     	;# 
   148  0001                     	;# 
   149  0002                     	;# 
   150  0003                     	;# 
   151  0004                     	;# 
   152  0005                     	;# 
   153  0006                     	;# 
   154  0007                     	;# 
   155  000A                     	;# 
   156  000B                     	;# 
   157  000C                     	;# 
   158  000D                     	;# 
   159  000E                     	;# 
   160  000E                     	;# 
   161  000F                     	;# 
   162  0010                     	;# 
   163  0011                     	;# 
   164  0012                     	;# 
   165  0013                     	;# 
   166  0014                     	;# 
   167  0015                     	;# 
   168  0015                     	;# 
   169  0016                     	;# 
   170  0017                     	;# 
   171  0018                     	;# 
   172  0019                     	;# 
   173  001A                     	;# 
   174  001B                     	;# 
   175  001B                     	;# 
   176  001C                     	;# 
   177  001D                     	;# 
   178  001E                     	;# 
   179  001F                     	;# 
   180  0081                     	;# 
   181  0085                     	;# 
   182  0086                     	;# 
   183  0087                     	;# 
   184  008C                     	;# 
   185  008D                     	;# 
   186  008E                     	;# 
   187  0091                     	;# 
   188  0092                     	;# 
   189  0093                     	;# 
   190  0094                     	;# 
   191  0098                     	;# 
   192  0099                     	;# 
   193  009C                     	;# 
   194  009D                     	;# 
   195  009E                     	;# 
   196  009F                     	;# 
   197  010C                     	;# 
   198  010D                     	;# 
   199  010E                     	;# 
   200  010F                     	;# 
   201  018C                     	;# 
   202  018D                     	;# 
   203  0000                     	;# 
   204  0001                     	;# 
   205  0002                     	;# 
   206  0003                     	;# 
   207  0004                     	;# 
   208  0005                     	;# 
   209  0006                     	;# 
   210  0007                     	;# 
   211  000A                     	;# 
   212  000B                     	;# 
   213  000C                     	;# 
   214  000D                     	;# 
   215  000E                     	;# 
   216  000E                     	;# 
   217  000F                     	;# 
   218  0010                     	;# 
   219  0011                     	;# 
   220  0012                     	;# 
   221  0013                     	;# 
   222  0014                     	;# 
   223  0015                     	;# 
   224  0015                     	;# 
   225  0016                     	;# 
   226  0017                     	;# 
   227  0018                     	;# 
   228  0019                     	;# 
   229  001A                     	;# 
   230  001B                     	;# 
   231  001B                     	;# 
   232  001C                     	;# 
   233  001D                     	;# 
   234  001E                     	;# 
   235  001F                     	;# 
   236  0081                     	;# 
   237  0085                     	;# 
   238  0086                     	;# 
   239  0087                     	;# 
   240  008C                     	;# 
   241  008D                     	;# 
   242  008E                     	;# 
   243  0091                     	;# 
   244  0092                     	;# 
   245  0093                     	;# 
   246  0094                     	;# 
   247  0098                     	;# 
   248  0099                     	;# 
   249  009C                     	;# 
   250  009D                     	;# 
   251  009E                     	;# 
   252  009F                     	;# 
   253  010C                     	;# 
   254  010D                     	;# 
   255  010E                     	;# 
   256  010F                     	;# 
   257  018C                     	;# 
   258  018D                     	;# 
   259  0000                     	;# 
   260  0001                     	;# 
   261  0002                     	;# 
   262  0003                     	;# 
   263  0004                     	;# 
   264  0005                     	;# 
   265  0006                     	;# 
   266  0007                     	;# 
   267  000A                     	;# 
   268  000B                     	;# 
   269  000C                     	;# 
   270  000D                     	;# 
   271  000E                     	;# 
   272  000E                     	;# 
   273  000F                     	;# 
   274  0010                     	;# 
   275  0011                     	;# 
   276  0012                     	;# 
   277  0013                     	;# 
   278  0014                     	;# 
   279  0015                     	;# 
   280  0015                     	;# 
   281  0016                     	;# 
   282  0017                     	;# 
   283  0018                     	;# 
   284  0019                     	;# 
   285  001A                     	;# 
   286  001B                     	;# 
   287  001B                     	;# 
   288  001C                     	;# 
   289  001D                     	;# 
   290  001E                     	;# 
   291  001F                     	;# 
   292  0081                     	;# 
   293  0085                     	;# 
   294  0086                     	;# 
   295  0087                     	;# 
   296  008C                     	;# 
   297  008D                     	;# 
   298  008E                     	;# 
   299  0091                     	;# 
   300  0092                     	;# 
   301  0093                     	;# 
   302  0094                     	;# 
   303  0098                     	;# 
   304  0099                     	;# 
   305  009C                     	;# 
   306  009D                     	;# 
   307  009E                     	;# 
   308  009F                     	;# 
   309  010C                     	;# 
   310  010D                     	;# 
   311  010E                     	;# 
   312  010F                     	;# 
   313  018C                     	;# 
   314  018D                     	;# 
   315  0000                     	;# 
   316  0001                     	;# 
   317  0002                     	;# 
   318  0003                     	;# 
   319  0004                     	;# 
   320  0005                     	;# 
   321  0006                     	;# 
   322  0007                     	;# 
   323  000A                     	;# 
   324  000B                     	;# 
   325  000C                     	;# 
   326  000D                     	;# 
   327  000E                     	;# 
   328  000E                     	;# 
   329  000F                     	;# 
   330  0010                     	;# 
   331  0011                     	;# 
   332  0012                     	;# 
   333  0013                     	;# 
   334  0014                     	;# 
   335  0015                     	;# 
   336  0015                     	;# 
   337  0016                     	;# 
   338  0017                     	;# 
   339  0018                     	;# 
   340  0019                     	;# 
   341  001A                     	;# 
   342  001B                     	;# 
   343  001B                     	;# 
   344  001C                     	;# 
   345  001D                     	;# 
   346  001E                     	;# 
   347  001F                     	;# 
   348  0081                     	;# 
   349  0085                     	;# 
   350  0086                     	;# 
   351  0087                     	;# 
   352  008C                     	;# 
   353  008D                     	;# 
   354  008E                     	;# 
   355  0091                     	;# 
   356  0092                     	;# 
   357  0093                     	;# 
   358  0094                     	;# 
   359  0098                     	;# 
   360  0099                     	;# 
   361  009C                     	;# 
   362  009D                     	;# 
   363  009E                     	;# 
   364  009F                     	;# 
   365  010C                     	;# 
   366  010D                     	;# 
   367  010E                     	;# 
   368  010F                     	;# 
   369  018C                     	;# 
   370  018D                     	;# 
   371  0000                     	;# 
   372  0001                     	;# 
   373  0002                     	;# 
   374  0003                     	;# 
   375  0004                     	;# 
   376  0005                     	;# 
   377  0006                     	;# 
   378  0007                     	;# 
   379  000A                     	;# 
   380  000B                     	;# 
   381  000C                     	;# 
   382  000D                     	;# 
   383  000E                     	;# 
   384  000E                     	;# 
   385  000F                     	;# 
   386  0010                     	;# 
   387  0011                     	;# 
   388  0012                     	;# 
   389  0013                     	;# 
   390  0014                     	;# 
   391  0015                     	;# 
   392  0015                     	;# 
   393  0016                     	;# 
   394  0017                     	;# 
   395  0018                     	;# 
   396  0019                     	;# 
   397  001A                     	;# 
   398  001B                     	;# 
   399  001B                     	;# 
   400  001C                     	;# 
   401  001D                     	;# 
   402  001E                     	;# 
   403  001F                     	;# 
   404  0081                     	;# 
   405  0085                     	;# 
   406  0086                     	;# 
   407  0087                     	;# 
   408  008C                     	;# 
   409  008D                     	;# 
   410  008E                     	;# 
   411  0091                     	;# 
   412  0092                     	;# 
   413  0093                     	;# 
   414  0094                     	;# 
   415  0098                     	;# 
   416  0099                     	;# 
   417  009C                     	;# 
   418  009D                     	;# 
   419  009E                     	;# 
   420  009F                     	;# 
   421  010C                     	;# 
   422  010D                     	;# 
   423  010E                     	;# 
   424  010F                     	;# 
   425  018C                     	;# 
   426  018D                     	;# 
   427  0000                     	;# 
   428  0001                     	;# 
   429  0002                     	;# 
   430  0003                     	;# 
   431  0004                     	;# 
   432  0005                     	;# 
   433  0006                     	;# 
   434  0007                     	;# 
   435  000A                     	;# 
   436  000B                     	;# 
   437  000C                     	;# 
   438  000D                     	;# 
   439  000E                     	;# 
   440  000E                     	;# 
   441  000F                     	;# 
   442  0010                     	;# 
   443  0011                     	;# 
   444  0012                     	;# 
   445  0013                     	;# 
   446  0014                     	;# 
   447  0015                     	;# 
   448  0015                     	;# 
   449  0016                     	;# 
   450  0017                     	;# 
   451  0018                     	;# 
   452  0019                     	;# 
   453  001A                     	;# 
   454  001B                     	;# 
   455  001B                     	;# 
   456  001C                     	;# 
   457  001D                     	;# 
   458  001E                     	;# 
   459  001F                     	;# 
   460  0081                     	;# 
   461  0085                     	;# 
   462  0086                     	;# 
   463  0087                     	;# 
   464  008C                     	;# 
   465  008D                     	;# 
   466  008E                     	;# 
   467  0091                     	;# 
   468  0092                     	;# 
   469  0093                     	;# 
   470  0094                     	;# 
   471  0098                     	;# 
   472  0099                     	;# 
   473  009C                     	;# 
   474  009D                     	;# 
   475  009E                     	;# 
   476  009F                     	;# 
   477  010C                     	;# 
   478  010D                     	;# 
   479  010E                     	;# 
   480  010F                     	;# 
   481  018C                     	;# 
   482  018D                     	;# 
   483                           
   484                           	psect	idataCOMMON
   485  0000                     __pidataCOMMON:	
   486                           
   487                           	psect	idataBANK3
   488  0000                     __pidataBANK3:	
   489                           
   490                           	psect	strings
   491  0030                     __pstrings:	
   492  0030                     stringtab:	
   493  0030                     __stringtab:	
   494  0030                     stringcode:	
   495                           ;	String table - string pointers are 1 byte each
   496                           
   497  0030                     stringdir:	
   498  0030  3000               	movlw	high stringdir
   499  0031  008A               	movwf	10
   500  0032  0804               	movf	4,w
   501  0033  0A84               	incf	4,f
   502  0034  0782               	addwf	2,f
   503  0035                     __stringbase:	
   504  0035  3400               	retlw	0
   505  0036                     __end_of__stringtab:	
   506  0036                     exp@coeff:	
   507  0036  3400               	retlw	0
   508  0037  3400               	retlw	0
   509  0038  3480               	retlw	128
   510  0039  343F               	retlw	63
   511  003A  3418               	retlw	24
   512  003B  3472               	retlw	114
   513  003C  3431               	retlw	49
   514  003D  343F               	retlw	63
   515  003E  34F0               	retlw	240
   516  003F  34FD               	retlw	253
   517  0040  3475               	retlw	117
   518  0041  343E               	retlw	62
   519  0042  3447               	retlw	71
   520  0043  3458               	retlw	88
   521  0044  3463               	retlw	99
   522  0045  343D               	retlw	61
   523  0046  3458               	retlw	88
   524  0047  3495               	retlw	149
   525  0048  341D               	retlw	29
   526  0049  343C               	retlw	60
   527  004A  3482               	retlw	130
   528  004B  34C4               	retlw	196
   529  004C  34AE               	retlw	174
   530  004D  343A               	retlw	58
   531  004E  34A8               	retlw	168
   532  004F  3478               	retlw	120
   533  0050  3421               	retlw	33
   534  0051  3439               	retlw	57
   535  0052  34EF               	retlw	239
   536  0053  3493               	retlw	147
   537  0054  3480               	retlw	128
   538  0055  3437               	retlw	55
   539  0056  34A0               	retlw	160
   540  0057  3492               	retlw	146
   541  0058  34A7               	retlw	167
   542  0059  3435               	retlw	53
   543  005A  3446               	retlw	70
   544  005B  3456               	retlw	86
   545  005C  3415               	retlw	21
   546  005D  3434               	retlw	52
   547  005E                     __end_ofexp@coeff:	
   548  005E                     log@coeff:	
   549  005E  3400               	retlw	0
   550  005F  3400               	retlw	0
   551  0060  3400               	retlw	0
   552  0061  3400               	retlw	0
   553  0062  34C4               	retlw	196
   554  0063  34FF               	retlw	255
   555  0064  347F               	retlw	127
   556  0065  343F               	retlw	63
   557  0066  3480               	retlw	128
   558  0067  34EF               	retlw	239
   559  0068  34FF               	retlw	255
   560  0069  34BE               	retlw	190
   561  006A  3490               	retlw	144
   562  006B  34E1               	retlw	225
   563  006C  34A9               	retlw	169
   564  006D  343E               	retlw	62
   565  006E  34EC               	retlw	236
   566  006F  3482               	retlw	130
   567  0070  3476               	retlw	118
   568  0071  34BE               	retlw	190
   569  0072  3482               	retlw	130
   570  0073  34AD               	retlw	173
   571  0074  342B               	retlw	43
   572  0075  343E               	retlw	62
   573  0076  340E               	retlw	14
   574  0077  343C               	retlw	60
   575  0078  34C3               	retlw	195
   576  0079  34BD               	retlw	189
   577  007A  3487               	retlw	135
   578  007B  34D1               	retlw	209
   579  007C  3413               	retlw	19
   580  007D  343D               	retlw	61
   581  007E  3441               	retlw	65
   582  007F  3478               	retlw	120
   583  0080  34D3               	retlw	211
   584  0081  34BB               	retlw	187
   585  0082                     __end_oflog@coeff:	
   586  0082                     STR_21:	
   587  0082  3470               	retlw	112	;'p'
   588  0083  346C               	retlw	108	;'l'
   589  0084  3465               	retlw	101	;'e'
   590  0085  3461               	retlw	97	;'a'
   591  0086  3473               	retlw	115	;'s'
   592  0087  3465               	retlw	101	;'e'
   593  0088  3420               	retlw	32	;' '
   594  0089  3477               	retlw	119	;'w'
   595  008A  3461               	retlw	97	;'a'
   596  008B  3469               	retlw	105	;'i'
   597  008C  3474               	retlw	116	;'t'
   598  008D  342E               	retlw	46	;'.'
   599  008E  342E               	retlw	46	;'.'
   600  008F  342E               	retlw	46	;'.'
   601  0090  3400               	retlw	0
   602  0091                     STR_25:	
   603  0091  3449               	retlw	73	;'I'
   604  0092  346E               	retlw	110	;'n'
   605  0093  3464               	retlw	100	;'d'
   606  0094  3475               	retlw	117	;'u'
   607  0095  3463               	retlw	99	;'c'
   608  0096  3474               	retlw	116	;'t'
   609  0097  3469               	retlw	105	;'i'
   610  0098  3476               	retlw	118	;'v'
   611  0099  3469               	retlw	105	;'i'
   612  009A  3474               	retlw	116	;'t'
   613  009B  3479               	retlw	121	;'y'
   614  009C  3420               	retlw	32	;' '
   615  009D  3400               	retlw	0
   616  009E                     STR_19:	
   617  009E  3443               	retlw	67	;'C'
   618  009F  3461               	retlw	97	;'a'
   619  00A0  346C               	retlw	108	;'l'
   620  00A1  3469               	retlw	105	;'i'
   621  00A2  3462               	retlw	98	;'b'
   622  00A3  3472               	retlw	114	;'r'
   623  00A4  3461               	retlw	97	;'a'
   624  00A5  3474               	retlw	116	;'t'
   625  00A6  3469               	retlw	105	;'i'
   626  00A7  346E               	retlw	110	;'n'
   627  00A8  3467               	retlw	103	;'g'
   628  00A9  3400               	retlw	0
   629  00AA                     STR_24:	
   630  00AA  3443               	retlw	67	;'C'
   631  00AB  3461               	retlw	97	;'a'
   632  00AC  3470               	retlw	112	;'p'
   633  00AD  3461               	retlw	97	;'a'
   634  00AE  3463               	retlw	99	;'c'
   635  00AF  3469               	retlw	105	;'i'
   636  00B0  3474               	retlw	116	;'t'
   637  00B1  3479               	retlw	121	;'y'
   638  00B2  3420               	retlw	32	;' '
   639  00B3  3400               	retlw	0
   640  00B4                     STR_13:	
   641  00B4  344C               	retlw	76	;'L'
   642  00B5  3443               	retlw	67	;'C'
   643  00B6  342D               	retlw	45	;'-'
   644  00B7  346D               	retlw	109	;'m'
   645  00B8  3465               	retlw	101	;'e'
   646  00B9  3474               	retlw	116	;'t'
   647  00BA  3465               	retlw	101	;'e'
   648  00BB  3472               	retlw	114	;'r'
   649  00BC  3420               	retlw	32	;' '
   650  00BD  3400               	retlw	0
   651  00BE                     STR_15:	
   652  00BE  3420               	retlw	32	;' '
   653  00BF  3420               	retlw	32	;' '
   654  00C0  3420               	retlw	32	;' '
   655  00C1  3420               	retlw	32	;' '
   656  00C2  3420               	retlw	32	;' '
   657  00C3  3420               	retlw	32	;' '
   658  00C4  3400               	retlw	0
   659  00C5                     STR_23:	
   660  00C5  3446               	retlw	70	;'F'
   661  00C6  3472               	retlw	114	;'r'
   662  00C7  3465               	retlw	101	;'e'
   663  00C8  3471               	retlw	113	;'q'
   664  00C9  343D               	retlw	61	;'='
   665  00CA  3400               	retlw	0
   666  00CB                     STR_14:	
   667  00CB  342E               	retlw	46	;'.'
   668  00CC  342E               	retlw	46	;'.'
   669  00CD  342E               	retlw	46	;'.'
   670  00CE  340D               	retlw	13
   671  00CF  340A               	retlw	10
   672  00D0  3400               	retlw	0
   673  00D1                     STR_18:	
   674  00D1  3452               	retlw	82	;'R'
   675  00D2  3443               	retlw	67	;'C'
   676  00D3  3434               	retlw	52	;'4'
   677  00D4  343D               	retlw	61	;'='
   678  00D5  3400               	retlw	0
   679  00D6                     STR_11:	
   680  00D6  342D               	retlw	45	;'-'
   681  00D7  342A               	retlw	42	;'*'
   682  00D8  342D               	retlw	45	;'-'
   683  00D9  3400               	retlw	0
   684  00DA                     STR_5:	
   685  00DA  346D               	retlw	109	;'m'
   686  00DB  3446               	retlw	70	;'F'
   687  00DC  3400               	retlw	0
   688  00DD                     STR_7:	
   689  00DD  346E               	retlw	110	;'n'
   690  00DE  3446               	retlw	70	;'F'
   691  00DF  3400               	retlw	0
   692  00E0                     STR_8:	
   693  00E0  3470               	retlw	112	;'p'
   694  00E1  3446               	retlw	70	;'F'
   695  00E2  3400               	retlw	0
   696  00E3                     STR_6:	
   697  00E3  3475               	retlw	117	;'u'
   698  00E4  3446               	retlw	70	;'F'
   699  00E5  3400               	retlw	0
   700  00E6                     STR_2:	
   701  00E6  346D               	retlw	109	;'m'
   702  00E7  3448               	retlw	72	;'H'
   703  00E8  3400               	retlw	0
   704  00E9                     STR_4:	
   705  00E9  346E               	retlw	110	;'n'
   706  00EA  3448               	retlw	72	;'H'
   707  00EB  3400               	retlw	0
   708  00EC                     STR_3:	
   709  00EC  3475               	retlw	117	;'u'
   710  00ED  3448               	retlw	72	;'H'
   711  00EE  3400               	retlw	0
   712  00CE                     
   713                           ; #config settings
   714  0000                     
   715                           	psect	nvBANK3
   716  01C7                     __pnvBANK3:	
   717  01C7                     _CCal:	
   718  01C7                     	ds	4
   719  01CB                     _bres:	
   720  01CB                     	ds	2
   721  01CD                     _msecpart:	
   722  01CD                     	ds	2
   723  000B                     _INTCON	set	11
   724  0007                     _PORTC	set	7
   725  0018                     _RCSTA	set	24
   726  0001                     _TMR0	set	1
   727  0011                     _TMR2	set	17
   728  0019                     _TXREG	set	25
   729  005F                     _GIE	set	95
   730  005E                     _PEIE	set	94
   731  0032                     _RB2	set	50
   732  0033                     _RB3	set	51
   733  0034                     _RB4	set	52
   734  0035                     _RB5	set	53
   735  0036                     _RB6	set	54
   736  0037                     _RB7	set	55
   737  003B                     _RC3	set	59
   738  003C                     _RC4	set	60
   739  003E                     _RC6	set	62
   740  00A5                     _SSPEN	set	165
   741  0090                     _T2CKPS0	set	144
   742  0091                     _T2CKPS1	set	145
   743  005A                     _TMR0IF	set	90
   744  0061                     _TMR2IF	set	97
   745  0092                     _TMR2ON	set	146
   746  0093                     _TOUTPS0	set	147
   747  0094                     _TOUTPS1	set	148
   748  0095                     _TOUTPS2	set	149
   749  0064                     _TXIF	set	100
   750  009C                     _CMCON	set	156
   751  0081                     _OPTION_REG	set	129
   752  0099                     _SPBRG	set	153
   753  0085                     _TRISA	set	133
   754  0087                     _TRISC	set	135
   755  0098                     _TXSTA	set	152
   756  0465                     _RCIE	set	1125
   757  040C                     _T0SE	set	1036
   758  0461                     _TMR2IE	set	1121
   759  0432                     _TRISB2	set	1074
   760  0433                     _TRISB3	set	1075
   761  0434                     _TRISB4	set	1076
   762  0435                     _TRISB5	set	1077
   763  0436                     _TRISB6	set	1078
   764  0437                     _TRISB7	set	1079
   765  043B                     _TRISC3	set	1083
   766  043E                     _TRISC6	set	1086
   767  043F                     _TRISC7	set	1087
   768  04C6                     _TX9	set	1222
   769  04C5                     _TXEN	set	1221
   770  040F                     _nRBPU	set	1039
   771                           
   772                           	psect	cinit
   773  000F                     start_initialization:	
   774  000F                     __initialization:	
   775                           
   776                           ; Clear objects allocated to COMMON
   777  000F  01FA               	clrf	__pbssCOMMON& (0+127)
   778                           
   779                           ; Clear objects allocated to BANK1
   780  0010  1383               	bcf	3,7	;select IRP bank0
   781  0011  30E4               	movlw	low __pbssBANK1
   782  0012  0084               	movwf	4
   783  0013  30F0               	movlw	low (__pbssBANK1+12)
   784  0014  120A  118A  27F2  120A  118A  	fcall	clear_ram0
   785                           
   786                           ; Clear objects allocated to BANK3
   787  0019  1783               	bsf	3,7	;select IRP bank2
   788  001A  3090               	movlw	low __pbssBANK3
   789  001B  0084               	movwf	4
   790  001C  30B3               	movlw	low (__pbssBANK3+35)
   791  001D  120A  118A  27F2   	fcall	clear_ram0
   792                           
   793                           ; Initialize objects allocated to BANK3
   794  0020  1683               	bsf	3,5	;RP0=1, select bank3
   795  0021  1703               	bsf	3,6	;RP1=1, select bank3
   796                           
   797                           ;initializer for lcd_gotoxy@F1126
   798  0022  3000               	movlw	0
   799  0023  00CF               	movwf	__pdataBANK3& (0+127)
   800  0024  3040               	movlw	64
   801  0025  00D0               	movwf	(__pdataBANK3+1)& (0+127)
   802  0026  3014               	movlw	20
   803  0027  00D1               	movwf	(__pdataBANK3+2)& (0+127)
   804  0028  3054               	movlw	84
   805  0029  00D2               	movwf	(__pdataBANK3+3)& (0+127)
   806                           
   807                           ;initializer for _putchar_ptr
   808  002A  3007               	movlw	low (fp__format_putchar-fpbase)
   809  002B  00FB               	movwf	__pdataCOMMON& (0+127)
   810  002C                     end_of_initialization:	
   811                           ;End of C runtime variable initialization code
   812                           
   813  002C                     __end_of__initialization:	
   814  002C  0183               	clrf	3
   815  002D  120A  118A  2EE1   	ljmp	_main	;jump to C main() function
   816                           
   817                           	psect	bssCOMMON
   818  007A                     __pbssCOMMON:	
   819  007A                     _LCD_function:	
   820  007A                     	ds	1
   821                           
   822                           	psect	dataCOMMON
   823  007B                     __pdataCOMMON:	
   824  007B                     _putchar_ptr:	
   825  007B                     	ds	1
   826                           
   827                           	psect	bssBANK1
   828  00E4                     __pbssBANK1:	
   829  00E4                     _F2:	
   830  00E4                     	ds	4
   831  00E8                     _F3:	
   832  00E8                     	ds	4
   833  00EC                     _F1:	
   834  00EC                     	ds	4
   835                           
   836                           	psect	bssBANK3
   837  0190                     __pbssBANK3:	
   838  0190                     _msecs:	
   839  0190                     	ds	4
   840  0194                     _seconds:	
   841  0194                     	ds	4
   842  0198                     _timer1of:	
   843  0198                     	ds	4
   844  019C                     _blink:	
   845  019C                     	ds	2
   846  019E                     _LCD_ctrl:	
   847  019E                     	ds	1
   848  019F                     _LCD_lines:	
   849  019F                     	ds	1
   850  01A0                     _LCD_mode:	
   851  01A0                     	ds	1
   852  01A1                     _buffer:	
   853  01A1                     	ds	18
   854                           
   855                           	psect	dataBANK3
   856  01CF                     __pdataBANK3:	
   857  01CF                     lcd_gotoxy@F1126:	
   858  01CF                     	ds	4
   859                           
   860                           	psect	clrtext
   861  07F2                     clear_ram0:	
   862                           ;	Called with FSR containing the base address, and
   863                           ;	W with the last address+1
   864                           
   865  07F2  0064               	clrwdt	;clear the watchdog before getting into this loop
   866  07F3                     clrloop0:	
   867  07F3  0180               	clrf	0	;clear RAM location pointed to by FSR
   868  07F4  0A84               	incf	4,f	;increment pointer
   869  07F5  0604               	xorwf	4,w	;XOR with final address
   870  07F6  1903               	btfsc	3,2	;have we reached the end yet?
   871  07F7  3400               	retlw	0	;all done for this memory range, return
   872  07F8  0604               	xorwf	4,w	;XOR again to restore value
   873  07F9  2FF3               	goto	clrloop0	;do the next byte
   874                           
   875                           	psect	cstackBANK3
   876  01B3                     __pcstackBANK3:	
   877  01B3                     ?_format_double:	
   878  01B3                     format_double@num:	
   879                           ; 0 bytes @ 0x0
   880                           
   881                           
   882                           ; 4 bytes @ 0x0
   883  01B3                     	ds	4
   884  01B7                     _format_double$1046:	
   885                           
   886                           ; 4 bytes @ 0x4
   887  01B7                     	ds	4
   888  01BB                     _format_double$1047:	
   889                           
   890                           ; 4 bytes @ 0x8
   891  01BB                     	ds	4
   892  01BF                     format_double@weight:	
   893                           
   894                           ; 4 bytes @ 0xC
   895  01BF                     	ds	4
   896  01C3                     format_double@digit:	
   897                           
   898                           ; 2 bytes @ 0x10
   899  01C3                     	ds	2
   900  01C5                     format_double@m:	
   901                           
   902                           ; 2 bytes @ 0x12
   903  01C5                     	ds	2
   904                           
   905                           	psect	cstackBANK1
   906  00A0                     __pcstackBANK1:	
   907  00A0                     ??_ldexp:	
   908  00A0                     ?_log10:	
   909                           ; 0 bytes @ 0x0
   910                           
   911  00A0                     log10@x:	
   912                           ; 4 bytes @ 0x0
   913                           
   914                           
   915                           ; 4 bytes @ 0x0
   916  00A0                     	ds	2
   917  00A2                     _ldexp$686:	
   918                           
   919                           ; 4 bytes @ 0x2
   920  00A2                     	ds	2
   921  00A4                     _log10$1058:	
   922                           
   923                           ; 4 bytes @ 0x4
   924  00A4                     	ds	4
   925  00A8                     ?___fltol:	
   926  00A8                     ___fltol@f1:	
   927                           ; 4 bytes @ 0x8
   928                           
   929                           
   930                           ; 4 bytes @ 0x8
   931  00A8                     	ds	4
   932  00AC                     ??___fltol:	
   933                           
   934                           ; 0 bytes @ 0xC
   935  00AC                     	ds	4
   936  00B0                     ___fltol@sign1:	
   937                           
   938                           ; 1 bytes @ 0x10
   939  00B0                     	ds	1
   940  00B1                     ___fltol@exp1:	
   941                           
   942                           ; 1 bytes @ 0x11
   943  00B1                     	ds	1
   944  00B2                     ?___altofl:	
   945  00B2                     measure_inductance@numerator:	
   946                           ; 4 bytes @ 0x12
   947                           
   948  00B2                     ___altofl@c:	
   949                           ; 4 bytes @ 0x12
   950                           
   951  00B2                     _measure_capacitance$1048:	
   952                           ; 4 bytes @ 0x12
   953                           
   954                           
   955                           ; 4 bytes @ 0x12
   956  00B2                     	ds	4
   957  00B6                     ?_floor:	
   958  00B6                     measure_inductance@denominator:	
   959                           ; 4 bytes @ 0x16
   960                           
   961  00B6                     floor@x:	
   962                           ; 4 bytes @ 0x16
   963                           
   964  00B6                     _measure_capacitance$1049:	
   965                           ; 4 bytes @ 0x16
   966                           
   967                           
   968                           ; 4 bytes @ 0x16
   969  00B6                     	ds	4
   970  00BA                     floor@i:	
   971  00BA                     _measure_capacitance$1050:	
   972                           ; 4 bytes @ 0x1A
   973                           
   974  00BA                     _measure_inductance$1051:	
   975                           ; 4 bytes @ 0x1A
   976                           
   977                           
   978                           ; 4 bytes @ 0x1A
   979  00BA                     	ds	4
   980  00BE                     measure_capacitance@unit:	
   981  00BE                     floor@expon:	
   982                           ; 1 bytes @ 0x1E
   983                           
   984  00BE                     _measure_inductance$1055:	
   985                           ; 2 bytes @ 0x1E
   986                           
   987                           
   988                           ; 4 bytes @ 0x1E
   989  00BE                     	ds	1
   990  00BF                     measure_capacitance@var:	
   991                           
   992                           ; 2 bytes @ 0x1F
   993  00BF                     	ds	1
   994  00C0                     ?_exp:	
   995  00C0                     exp@x:	
   996                           ; 4 bytes @ 0x20
   997                           
   998                           
   999                           ; 4 bytes @ 0x20
  1000  00C0                     	ds	1
  1001  00C1                     measure_capacitance@Cin:	
  1002                           
  1003                           ; 4 bytes @ 0x21
  1004  00C1                     	ds	1
  1005  00C2                     _measure_inductance$1056:	
  1006                           
  1007                           ; 4 bytes @ 0x22
  1008  00C2                     	ds	2
  1009  00C4                     _exp$1061:	
  1010                           
  1011                           ; 4 bytes @ 0x24
  1012  00C4                     	ds	2
  1013  00C6                     _measure_inductance$1057:	
  1014                           
  1015                           ; 4 bytes @ 0x26
  1016  00C6                     	ds	2
  1017  00C8                     _exp$786:	
  1018                           
  1019                           ; 4 bytes @ 0x28
  1020  00C8                     	ds	2
  1021  00CA                     measure_inductance@unit:	
  1022                           
  1023                           ; 1 bytes @ 0x2A
  1024  00CA                     	ds	1
  1025  00CB                     _measure_inductance$1052:	
  1026                           
  1027                           ; 4 bytes @ 0x2B
  1028  00CB                     	ds	1
  1029  00CC                     exp@exponent:	
  1030                           
  1031                           ; 2 bytes @ 0x2C
  1032  00CC                     	ds	2
  1033  00CE                     exp@sign:	
  1034                           
  1035                           ; 1 bytes @ 0x2E
  1036  00CE                     	ds	1
  1037  00CF                     ?_pow:	
  1038  00CF                     pow@x:	
  1039                           ; 4 bytes @ 0x2F
  1040                           
  1041  00CF                     _measure_inductance$1053:	
  1042                           ; 4 bytes @ 0x2F
  1043                           
  1044                           
  1045                           ; 4 bytes @ 0x2F
  1046  00CF                     	ds	4
  1047  00D3                     pow@y:	
  1048  00D3                     _measure_inductance$1054:	
  1049                           ; 4 bytes @ 0x33
  1050                           
  1051                           
  1052                           ; 4 bytes @ 0x33
  1053  00D3                     	ds	4
  1054  00D7                     measure_inductance@var:	
  1055  00D7                     _pow$1059:	
  1056                           ; 2 bytes @ 0x37
  1057                           
  1058                           
  1059                           ; 4 bytes @ 0x37
  1060  00D7                     	ds	2
  1061  00D9                     measure_inductance@Lin:	
  1062                           
  1063                           ; 4 bytes @ 0x39
  1064  00D9                     	ds	2
  1065  00DB                     _pow$1060:	
  1066                           
  1067                           ; 4 bytes @ 0x3B
  1068  00DB                     	ds	4
  1069  00DF                     pow@sign:	
  1070                           
  1071                           ; 1 bytes @ 0x3F
  1072  00DF                     	ds	1
  1073  00E0                     pow@yi:	
  1074                           
  1075                           ; 4 bytes @ 0x40
  1076  00E0                     	ds	4
  1077                           
  1078                           	psect	cstackCOMMON
  1079  0070                     __pcstackCOMMON:	
  1080  0070                     ?_uart_puts:	
  1081  0070                     ?_lcd_puts:	
  1082                           ; 0 bytes @ 0x0
  1083                           
  1084  0070                     ?_lcd_init:	
  1085                           ; 0 bytes @ 0x0
  1086                           
  1087  0070                     ?_uart_init:	
  1088                           ; 0 bytes @ 0x0
  1089                           
  1090  0070                     ?_calibrate:	
  1091                           ; 0 bytes @ 0x0
  1092                           
  1093  0070                     ?_lcd_clear:	
  1094                           ; 0 bytes @ 0x0
  1095                           
  1096  0070                     ?_measure_capacitance:	
  1097                           ; 0 bytes @ 0x0
  1098                           
  1099  0070                     ?_measure_inductance:	
  1100                           ; 0 bytes @ 0x0
  1101                           
  1102  0070                     ?_print_unit:	
  1103                           ; 0 bytes @ 0x0
  1104                           
  1105  0070                     ?_indicator:	
  1106                           ; 0 bytes @ 0x0
  1107                           
  1108  0070                     ?_put_str:	
  1109                           ; 0 bytes @ 0x0
  1110                           
  1111  0070                     ?_timer0_init:	
  1112                           ; 0 bytes @ 0x0
  1113                           
  1114  0070                     ?_timer2_init:	
  1115                           ; 0 bytes @ 0x0
  1116                           
  1117  0070                     ?_delay10ms:	
  1118                           ; 0 bytes @ 0x0
  1119                           
  1120  0070                     ??_isr:	
  1121                           ; 0 bytes @ 0x0
  1122                           
  1123  0070                     ?_main:	
  1124                           ; 0 bytes @ 0x0
  1125                           
  1126  0070                     ?_lcd_write4bits:	
  1127                           ; 0 bytes @ 0x0
  1128                           
  1129  0070                     ?_lcd_command:	
  1130                           ; 0 bytes @ 0x0
  1131                           
  1132  0070                     ?_uart_putch:	
  1133                           ; 0 bytes @ 0x0
  1134                           
  1135  0070                     ?_uart_enable:	
  1136                           ; 0 bytes @ 0x0
  1137                           
  1138  0070                     ?_isr:	
  1139                           ; 0 bytes @ 0x0
  1140                           
  1141  0070                     print_unit@unit:	
  1142                           ; 2 bytes @ 0x0
  1143                           
  1144  0070                     delay10ms@period_10ms:	
  1145                           ; 1 bytes @ 0x0
  1146                           
  1147                           
  1148                           ; 1 bytes @ 0x0
  1149  0070                     	ds	2
  1150  0072                     ??_lcd_init:	
  1151  0072                     ??_uart_init:	
  1152                           ; 0 bytes @ 0x2
  1153                           
  1154  0072                     ??_timer0_init:	
  1155                           ; 0 bytes @ 0x2
  1156                           
  1157  0072                     ??_timer2_init:	
  1158                           ; 0 bytes @ 0x2
  1159                           
  1160  0072                     ??_delay10ms:	
  1161                           ; 0 bytes @ 0x2
  1162                           
  1163  0072                     ??_lcd_write4bits:	
  1164                           ; 0 bytes @ 0x2
  1165                           
  1166  0072                     ??_uart_putch:	
  1167                           ; 0 bytes @ 0x2
  1168                           
  1169  0072                     ??_uart_enable:	
  1170                           ; 0 bytes @ 0x2
  1171                           
  1172  0072                     ?___flge:	
  1173                           ; 0 bytes @ 0x2
  1174                           
  1175  0072                     ?_timer0_read_ps:	
  1176                           ; 1 bit 
  1177                           
  1178  0072                     ?___lwdiv:	
  1179                           ; 2 bytes @ 0x2
  1180                           
  1181  0072                     ?___lwmod:	
  1182                           ; 2 bytes @ 0x2
  1183                           
  1184  0072                     ?___flpack:	
  1185                           ; 2 bytes @ 0x2
  1186                           
  1187  0072                     ?_frexp:	
  1188                           ; 4 bytes @ 0x2
  1189                           
  1190  0072                     ?___flneg:	
  1191                           ; 4 bytes @ 0x2
  1192                           
  1193  0072                     lcd_init@fourbitmode:	
  1194                           ; 4 bytes @ 0x2
  1195                           
  1196  0072                     uart_putch@byte:	
  1197                           ; 1 bytes @ 0x2
  1198                           
  1199  0072                     ___lwdiv@divisor:	
  1200                           ; 1 bytes @ 0x2
  1201                           
  1202  0072                     ___lwmod@divisor:	
  1203                           ; 2 bytes @ 0x2
  1204                           
  1205  0072                     ___flpack@arg:	
  1206                           ; 2 bytes @ 0x2
  1207                           
  1208  0072                     ___flge@ff1:	
  1209                           ; 4 bytes @ 0x2
  1210                           
  1211  0072                     ___flneg@f1:	
  1212                           ; 4 bytes @ 0x2
  1213                           
  1214  0072                     frexp@value:	
  1215                           ; 4 bytes @ 0x2
  1216                           
  1217                           
  1218                           ; 4 bytes @ 0x2
  1219  0072                     	ds	1
  1220  0073                     ??_uart_puts:	
  1221  0073                     timer2_init@ps_mode:	
  1222                           ; 0 bytes @ 0x3
  1223                           
  1224  0073                     lcd_write4bits@value:	
  1225                           ; 1 bytes @ 0x3
  1226                           
  1227  0073                     uart_puts@s:	
  1228                           ; 1 bytes @ 0x3
  1229                           
  1230  0073                     _lcd_init$338:	
  1231                           ; 1 bytes @ 0x3
  1232                           
  1233                           
  1234                           ; 2 bytes @ 0x3
  1235  0073                     	ds	1
  1236  0074                     ??_timer0_read_ps:	
  1237  0074                     ?_lcd_send:	
  1238                           ; 0 bytes @ 0x4
  1239                           
  1240  0074                     timer2_init@ps:	
  1241                           ; 0 bytes @ 0x4
  1242                           
  1243  0074                     lcd_send@mode:	
  1244                           ; 1 bytes @ 0x4
  1245                           
  1246  0074                     ___lwdiv@dividend:	
  1247                           ; 1 bytes @ 0x4
  1248                           
  1249  0074                     ___lwmod@dividend:	
  1250                           ; 2 bytes @ 0x4
  1251                           
  1252                           
  1253                           ; 2 bytes @ 0x4
  1254  0074                     	ds	1
  1255  0075                     ??_lcd_send:	
  1256  0075                     lcd_send@value:	
  1257                           ; 0 bytes @ 0x5
  1258                           
  1259                           
  1260                           ; 1 bytes @ 0x5
  1261  0075                     	ds	1
  1262  0076                     ??_lcd_command:	
  1263  0076                     ??___flneg:	
  1264                           ; 0 bytes @ 0x6
  1265                           
  1266  0076                     ??___lwdiv:	
  1267                           ; 0 bytes @ 0x6
  1268                           
  1269  0076                     ??___lwmod:	
  1270                           ; 0 bytes @ 0x6
  1271                           
  1272  0076                     lcd_command@value:	
  1273                           ; 0 bytes @ 0x6
  1274                           
  1275  0076                     ___flpack@exp:	
  1276                           ; 1 bytes @ 0x6
  1277                           
  1278  0076                     frexp@eptr:	
  1279                           ; 1 bytes @ 0x6
  1280                           
  1281  0076                     ___lwmod@counter:	
  1282                           ; 1 bytes @ 0x6
  1283                           
  1284  0076                     ___lwdiv@quotient:	
  1285                           ; 1 bytes @ 0x6
  1286                           
  1287  0076                     ___flge@ff2:	
  1288                           ; 2 bytes @ 0x6
  1289                           
  1290                           
  1291                           ; 4 bytes @ 0x6
  1292  0076                     	ds	1
  1293  0077                     ?_lcd_putch:	
  1294  0077                     ??_lcd_putch:	
  1295                           ; 0 bytes @ 0x7
  1296                           
  1297  0077                     ?_lcd_gotoxy:	
  1298                           ; 0 bytes @ 0x7
  1299                           
  1300  0077                     ?_lcd_begin:	
  1301                           ; 0 bytes @ 0x7
  1302                           
  1303  0077                     ??_lcd_clear:	
  1304                           ; 0 bytes @ 0x7
  1305                           
  1306  0077                     ??_frexp:	
  1307                           ; 0 bytes @ 0x7
  1308                           
  1309  0077                     ?_output_putch:	
  1310                           ; 0 bytes @ 0x7
  1311                           
  1312  0077                     ?_format_putchar:	
  1313                           ; 0 bytes @ 0x7
  1314                           
  1315  0077                     output_putch@c:	
  1316                           ; 0 bytes @ 0x7
  1317                           
  1318  0077                     format_putchar@c:	
  1319                           ; 1 bytes @ 0x7
  1320                           
  1321  0077                     lcd_putch@value:	
  1322                           ; 1 bytes @ 0x7
  1323                           
  1324  0077                     lcd_gotoxy@row:	
  1325                           ; 1 bytes @ 0x7
  1326                           
  1327  0077                     lcd_begin@dotsize:	
  1328                           ; 1 bytes @ 0x7
  1329                           
  1330  0077                     ___flpack@sign:	
  1331                           ; 1 bytes @ 0x7
  1332                           
  1333                           
  1334                           ; 1 bytes @ 0x7
  1335  0077                     	ds	1
  1336  0078                     ??_lcd_gotoxy:	
  1337  0078                     ??_lcd_puts:	
  1338                           ; 0 bytes @ 0x8
  1339                           
  1340  0078                     ??_lcd_begin:	
  1341                           ; 0 bytes @ 0x8
  1342                           
  1343  0078                     ??_print_unit:	
  1344                           ; 0 bytes @ 0x8
  1345                           
  1346  0078                     ??_output_putch:	
  1347                           ; 0 bytes @ 0x8
  1348                           
  1349  0078                     ??_put_str:	
  1350                           ; 0 bytes @ 0x8
  1351                           
  1352  0078                     ??_format_putchar:	
  1353                           ; 0 bytes @ 0x8
  1354                           
  1355  0078                     ??___awtofl:	
  1356                           ; 0 bytes @ 0x8
  1357                           
  1358  0078                     ??___lltofl:	
  1359                           ; 0 bytes @ 0x8
  1360                           
  1361  0078                     lcd_puts@i:	
  1362                           ; 0 bytes @ 0x8
  1363                           
  1364  0078                     ___awtofl@sign:	
  1365                           ; 1 bytes @ 0x8
  1366                           
  1367  0078                     ___lwdiv@counter:	
  1368                           ; 1 bytes @ 0x8
  1369                           
  1370                           
  1371                           ; 1 bytes @ 0x8
  1372  0078                     	ds	1
  1373  0079                     ??_format_number:	
  1374  0079                     ??___flsub:	
  1375                           ; 0 bytes @ 0x9
  1376                           
  1377  0079                     lcd_puts@string:	
  1378                           ; 0 bytes @ 0x9
  1379                           
  1380                           
  1381                           ; 1 bytes @ 0x9
  1382  0079                     	ds	1
  1383  007A                     ??_log10:	
  1384  007A                     ??_pow:	
  1385                           ; 0 bytes @ 0xA
  1386                           
  1387  007A                     ??_floor:	
  1388                           ; 0 bytes @ 0xA
  1389                           
  1390  007A                     ??_calibrate:	
  1391                           ; 0 bytes @ 0xA
  1392                           
  1393  007A                     ??_measure_capacitance:	
  1394                           ; 0 bytes @ 0xA
  1395                           
  1396  007A                     ??_measure_inductance:	
  1397                           ; 0 bytes @ 0xA
  1398                           
  1399  007A                     ??_exp:	
  1400                           ; 0 bytes @ 0xA
  1401                           
  1402  007A                     ??_print_reading:	
  1403                           ; 0 bytes @ 0xA
  1404                           
  1405  007A                     ??_indicator:	
  1406                           ; 0 bytes @ 0xA
  1407                           
  1408  007A                     ??_format_double:	
  1409                           ; 0 bytes @ 0xA
  1410                           
  1411  007A                     ??_main:	
  1412                           ; 0 bytes @ 0xA
  1413                           
  1414  007A                     ??___altofl:	
  1415                           ; 0 bytes @ 0xA
  1416                           
  1417  007A                     ??_log:	
  1418                           ; 0 bytes @ 0xA
  1419                           
  1420  007A                     ??___lwtofl:	
  1421                           ; 0 bytes @ 0xA
  1422                           
  1423                           
  1424                           	psect	cstackBANK0
  1425  0020                     __pcstackBANK0:	
  1426                           ; 0 bytes @ 0xA
  1427                           
  1428  0020                     ?_format_number:	
  1429  0020                     ??___flpack:	
  1430                           ; 0 bytes @ 0x0
  1431                           
  1432  0020                     ??___flge:	
  1433                           ; 0 bytes @ 0x0
  1434                           
  1435  0020                     timer0_read_ps@prev:	
  1436                           ; 0 bytes @ 0x0
  1437                           
  1438  0020                     lcd_gotoxy@col:	
  1439                           ; 1 bytes @ 0x0
  1440                           
  1441  0020                     lcd_begin@lines:	
  1442                           ; 1 bytes @ 0x0
  1443                           
  1444  0020                     put_str@i:	
  1445                           ; 1 bytes @ 0x0
  1446                           
  1447  0020                     _timer0_init$124:	
  1448                           ; 2 bytes @ 0x0
  1449                           
  1450  0020                     format_number@n:	
  1451                           ; 2 bytes @ 0x0
  1452                           
  1453                           
  1454                           ; 2 bytes @ 0x0
  1455  0020                     	ds	1
  1456  0021                     timer0_read_ps@count:	
  1457  0021                     lcd_gotoxy@row_offsets:	
  1458                           ; 2 bytes @ 0x1
  1459                           
  1460                           
  1461                           ; 4 bytes @ 0x1
  1462  0021                     	ds	1
  1463  0022                     put_str@s:	
  1464  0022                     format_number@base:	
  1465                           ; 1 bytes @ 0x2
  1466                           
  1467  0022                     _timer0_init$125:	
  1468                           ; 1 bytes @ 0x2
  1469                           
  1470                           
  1471                           ; 2 bytes @ 0x2
  1472  0022                     	ds	1
  1473  0023                     format_number@pad:	
  1474                           
  1475                           ; 1 bytes @ 0x3
  1476  0023                     	ds	1
  1477  0024                     ?___awtofl:	
  1478  0024                     ?___fldiv:	
  1479                           ; 4 bytes @ 0x4
  1480                           
  1481  0024                     ?___lltofl:	
  1482                           ; 4 bytes @ 0x4
  1483                           
  1484  0024                     _timer0_init$126:	
  1485                           ; 4 bytes @ 0x4
  1486                           
  1487  0024                     ___awtofl@c:	
  1488                           ; 2 bytes @ 0x4
  1489                           
  1490  0024                     ___fldiv@f2:	
  1491                           ; 2 bytes @ 0x4
  1492                           
  1493  0024                     ___lltofl@c:	
  1494                           ; 4 bytes @ 0x4
  1495                           
  1496  0024                     format_number@buf:	
  1497                           ; 4 bytes @ 0x4
  1498                           
  1499                           
  1500                           ; 32 bytes @ 0x4
  1501  0024                     	ds	1
  1502  0025                     indicator@indicate:	
  1503                           
  1504                           ; 1 bytes @ 0x5
  1505  0025                     	ds	1
  1506  0026                     _timer0_init$127:	
  1507                           
  1508                           ; 2 bytes @ 0x6
  1509  0026                     	ds	2
  1510  0028                     timer0_init@prescaler:	
  1511  0028                     ___fldiv@f1:	
  1512                           ; 1 bytes @ 0x8
  1513                           
  1514                           
  1515                           ; 4 bytes @ 0x8
  1516  0028                     	ds	1
  1517  0029                     timer0_init@ps_mode:	
  1518                           
  1519                           ; 1 bytes @ 0x9
  1520  0029                     	ds	3
  1521  002C                     ??___fldiv:	
  1522                           
  1523                           ; 0 bytes @ 0xC
  1524  002C                     	ds	4
  1525  0030                     ___fldiv@f3:	
  1526                           
  1527                           ; 4 bytes @ 0x10
  1528  0030                     	ds	4
  1529  0034                     ___fldiv@cntr:	
  1530                           
  1531                           ; 1 bytes @ 0x14
  1532  0034                     	ds	1
  1533  0035                     ___fldiv@exp:	
  1534                           
  1535                           ; 1 bytes @ 0x15
  1536  0035                     	ds	1
  1537  0036                     ___fldiv@sign:	
  1538                           
  1539                           ; 1 bytes @ 0x16
  1540  0036                     	ds	1
  1541  0037                     ?___flmul:	
  1542  0037                     ___flmul@f1:	
  1543                           ; 4 bytes @ 0x17
  1544                           
  1545                           
  1546                           ; 4 bytes @ 0x17
  1547  0037                     	ds	4
  1548  003B                     ___flmul@f2:	
  1549                           
  1550                           ; 4 bytes @ 0x1B
  1551  003B                     	ds	4
  1552  003F                     ??___flmul:	
  1553                           
  1554                           ; 0 bytes @ 0x1F
  1555  003F                     	ds	4
  1556  0043                     ___flmul@exp:	
  1557                           
  1558                           ; 1 bytes @ 0x23
  1559  0043                     	ds	1
  1560  0044                     format_number@padchar:	
  1561  0044                     ___flmul@f3_as_product:	
  1562                           ; 1 bytes @ 0x24
  1563                           
  1564                           
  1565                           ; 4 bytes @ 0x24
  1566  0044                     	ds	1
  1567  0045                     _format_number$169:	
  1568                           
  1569                           ; 2 bytes @ 0x25
  1570  0045                     	ds	2
  1571  0047                     format_number@di:	
  1572                           
  1573                           ; 1 bytes @ 0x27
  1574  0047                     	ds	1
  1575  0048                     format_number@i:	
  1576  0048                     ___flmul@cntr:	
  1577                           ; 1 bytes @ 0x28
  1578                           
  1579                           
  1580                           ; 1 bytes @ 0x28
  1581  0048                     	ds	1
  1582  0049                     ?_print_reading:	
  1583  0049                     ?_measure_freq:	
  1584                           ; 0 bytes @ 0x29
  1585                           
  1586  0049                     ___flmul@sign:	
  1587                           ; 2 bytes @ 0x29
  1588                           
  1589  0049                     print_reading@measurement:	
  1590                           ; 1 bytes @ 0x29
  1591                           
  1592                           
  1593                           ; 2 bytes @ 0x29
  1594  0049                     	ds	1
  1595  004A                     ?___fladd:	
  1596  004A                     ___fladd@f1:	
  1597                           ; 4 bytes @ 0x2A
  1598                           
  1599                           
  1600                           ; 4 bytes @ 0x2A
  1601  004A                     	ds	1
  1602  004B                     ??_measure_freq:	
  1603  004B                     _print_reading$1042:	
  1604                           ; 0 bytes @ 0x2B
  1605                           
  1606                           
  1607                           ; 2 bytes @ 0x2B
  1608  004B                     	ds	2
  1609  004D                     measure_freq@count:	
  1610  004D                     _print_reading$1043:	
  1611                           ; 2 bytes @ 0x2D
  1612                           
  1613                           
  1614                           ; 2 bytes @ 0x2D
  1615  004D                     	ds	1
  1616  004E                     ___fladd@f2:	
  1617                           
  1618                           ; 4 bytes @ 0x2E
  1619  004E                     	ds	1
  1620  004F                     ?___lwtofl:	
  1621  004F                     ___lwtofl@c:	
  1622                           ; 4 bytes @ 0x2F
  1623                           
  1624                           
  1625                           ; 2 bytes @ 0x2F
  1626  004F                     	ds	3
  1627  0052                     ??___fladd:	
  1628                           
  1629                           ; 0 bytes @ 0x32
  1630  0052                     	ds	1
  1631  0053                     calibrate@i:	
  1632                           
  1633                           ; 1 bytes @ 0x33
  1634  0053                     	ds	3
  1635  0056                     ___fladd@sign:	
  1636                           
  1637                           ; 1 bytes @ 0x36
  1638  0056                     	ds	1
  1639  0057                     ___fladd@exp2:	
  1640                           
  1641                           ; 1 bytes @ 0x37
  1642  0057                     	ds	1
  1643  0058                     ___fladd@exp1:	
  1644                           
  1645                           ; 1 bytes @ 0x38
  1646  0058                     	ds	1
  1647  0059                     ?_eval_poly:	
  1648  0059                     ?___flsub:	
  1649                           ; 4 bytes @ 0x39
  1650                           
  1651  0059                     ___flsub@f2:	
  1652                           ; 4 bytes @ 0x39
  1653                           
  1654  0059                     eval_poly@x:	
  1655                           ; 4 bytes @ 0x39
  1656                           
  1657                           
  1658                           ; 4 bytes @ 0x39
  1659  0059                     	ds	4
  1660  005D                     eval_poly@d:	
  1661  005D                     ___flsub@f1:	
  1662                           ; 1 bytes @ 0x3D
  1663                           
  1664                           
  1665                           ; 4 bytes @ 0x3D
  1666  005D                     	ds	1
  1667  005E                     eval_poly@n:	
  1668                           
  1669                           ; 2 bytes @ 0x3E
  1670  005E                     	ds	2
  1671  0060                     ??_eval_poly:	
  1672                           
  1673                           ; 0 bytes @ 0x40
  1674  0060                     	ds	5
  1675  0065                     eval_poly@res:	
  1676                           
  1677                           ; 4 bytes @ 0x45
  1678  0065                     	ds	4
  1679  0069                     ?_ldexp:	
  1680  0069                     ?_log:	
  1681                           ; 4 bytes @ 0x49
  1682                           
  1683  0069                     ldexp@value:	
  1684                           ; 4 bytes @ 0x49
  1685                           
  1686  0069                     log@x:	
  1687                           ; 4 bytes @ 0x49
  1688                           
  1689                           
  1690                           ; 4 bytes @ 0x49
  1691  0069                     	ds	4
  1692  006D                     ldexp@newexp:	
  1693  006D                     log@exponent:	
  1694                           ; 2 bytes @ 0x4D
  1695                           
  1696                           
  1697                           ; 2 bytes @ 0x4D
  1698  006D                     	ds	2
  1699  006F                     ___altofl@sign:	
  1700                           
  1701                           ; 1 bytes @ 0x4F
  1702  006F                     	ds	1
  1703                           
  1704                           	psect	maintext
  1705  06E1                     __pmaintext:	
  1706 ;;
  1707 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1708 ;;
  1709 ;; *************** function _main *****************
  1710 ;; Defined at:
  1711 ;;		line 112 in file "../../../src/LC-meter.c"
  1712 ;; Parameters:    Size  Location     Type
  1713 ;;		None
  1714 ;; Auto vars:     Size  Location     Type
  1715 ;;		None
  1716 ;; Return value:  Size  Location     Type
  1717 ;;		None               void
  1718 ;; Registers used:
  1719 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1720 ;; Tracked objects:
  1721 ;;		On entry : B00/0
  1722 ;;		On exit  : 0/0
  1723 ;;		Unchanged: 0/0
  1724 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1725 ;;      Params:         0       0       0       0       0
  1726 ;;      Locals:         0       0       0       0       0
  1727 ;;      Temps:          0       0       0       0       0
  1728 ;;      Totals:         0       0       0       0       0
  1729 ;;Total ram usage:        0 bytes
  1730 ;; Hardware stack levels required when called:    8
  1731 ;; This function calls:
  1732 ;;		_calibrate
  1733 ;;		_delay10ms
  1734 ;;		_format_double
  1735 ;;		_indicator
  1736 ;;		_lcd_begin
  1737 ;;		_lcd_clear
  1738 ;;		_lcd_gotoxy
  1739 ;;		_lcd_init
  1740 ;;		_lcd_puts
  1741 ;;		_measure_capacitance
  1742 ;;		_measure_inductance
  1743 ;;		_timer0_init
  1744 ;;		_timer2_init
  1745 ;;		_uart_init
  1746 ;;		_uart_puts
  1747 ;; This function is called by:
  1748 ;;		Startup code after reset
  1749 ;; This function uses a non-reentrant model
  1750 ;;
  1751                           
  1752                           
  1753                           ;psect for function _main
  1754  06E1                     _main:	
  1755                           
  1756                           ;LC-meter.c: 113: bres = msecpart = msecs = seconds = 0;
  1757                           
  1758                           ;incstack = 0
  1759                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1760  06E1  1683               	bsf	3,5	;RP0=1, select bank3
  1761  06E2  1703               	bsf	3,6	;RP1=1, select bank3
  1762  06E3  0194               	clrf	_seconds^(0+384)	;volatile
  1763  06E4  0195               	clrf	(_seconds+1)^(0+384)	;volatile
  1764  06E5  0196               	clrf	(_seconds+2)^(0+384)	;volatile
  1765  06E6  0197               	clrf	(_seconds+3)^(0+384)	;volatile
  1766  06E7  0817               	movf	(_seconds+3)^(0+384),w	;volatile
  1767  06E8  0093               	movwf	(_msecs+3)^(0+384)	;volatile
  1768  06E9  0816               	movf	(_seconds+2)^(0+384),w	;volatile
  1769  06EA  0092               	movwf	(_msecs+2)^(0+384)	;volatile
  1770  06EB  0815               	movf	(_seconds+1)^(0+384),w	;volatile
  1771  06EC  0091               	movwf	(_msecs+1)^(0+384)	;volatile
  1772  06ED  0814               	movf	_seconds^(0+384),w	;volatile
  1773  06EE  0090               	movwf	_msecs^(0+384)	;volatile
  1774  06EF  0811               	movf	(_msecs^(0+384)+1),w	;volatile
  1775  06F0  00CE               	movwf	(_msecpart+1)^(0+384)	;volatile
  1776  06F1  0810               	movf	_msecs^(0+384),w	;volatile
  1777  06F2  00CD               	movwf	_msecpart^(0+384)	;volatile
  1778  06F3  084E               	movf	(_msecpart+1)^(0+384),w	;volatile
  1779  06F4  00CC               	movwf	(_bres+1)^(0+384)	;volatile
  1780  06F5  084D               	movf	_msecpart^(0+384),w	;volatile
  1781  06F6  00CB               	movwf	_bres^(0+384)	;volatile
  1782                           
  1783                           ;LC-meter.c: 115: CCal = 1000;
  1784  06F7  3044               	movlw	68
  1785  06F8  00CA               	movwf	(_CCal+3)^(0+384)
  1786  06F9  307A               	movlw	122
  1787  06FA  00C9               	movwf	(_CCal+2)^(0+384)
  1788  06FB  3005               	movlw	5
  1789  06FC  01C8               	clrf	(_CCal+1)^(0+384)
  1790  06FD  01C7               	clrf	_CCal^(0+384)
  1791                           
  1792                           ;LC-meter.c: 122: CMCON = 0b00000101;
  1793  06FE  1303               	bcf	3,6	;RP1=0, select bank1
  1794  06FF  009C               	movwf	28	;volatile
  1795                           
  1796                           ;LC-meter.c: 124: TRISA = 0b11001111;
  1797  0700  30CF               	movlw	207
  1798  0701  0085               	movwf	5	;volatile
  1799                           
  1800                           ;LC-meter.c: 127: timer0_init(0b100 | 0x40);
  1801  0702  3044               	movlw	68
  1802  0703  120A  118A  27B2  120A  118A  	fcall	_timer0_init
  1803                           
  1804                           ;LC-meter.c: 130: T0SE = 1;
  1805  0708  1683               	bsf	3,5	;RP0=1, select bank1
  1806  0709  1601               	bsf	1,4	;volatile
  1807                           
  1808                           ;LC-meter.c: 141: nRBPU = 0;
  1809  070A  1381               	bcf	1,7	;volatile
  1810                           
  1811                           ;LC-meter.c: 144: TRISC3 = 0;
  1812  070B  1187               	bcf	7,3	;volatile
  1813                           
  1814                           ;LC-meter.c: 145: RC3 = ((1) == 0);
  1815  070C  1283               	bcf	3,5	;RP0=0, select bank0
  1816  070D  1187               	bcf	7,3	;volatile
  1817                           
  1818                           ;LC-meter.c: 147: SSPEN = 0;
  1819  070E  1294               	bcf	20,5	;volatile
  1820                           
  1821                           ;LC-meter.c: 152: timer2_init(0b000 | 0x80);
  1822  070F  3080               	movlw	128
  1823  0710  160A  158A  2773  120A  118A  	fcall	_timer2_init
  1824                           
  1825                           ;LC-meter.c: 157: TRISC &= 0b10110101;
  1826  0715  30B5               	movlw	181
  1827  0716  0587               	andwf	7,f	;volatile
  1828                           
  1829                           ;LC-meter.c: 169: lcd_init(!0);
  1830  0717  3001               	movlw	1
  1831  0718  160A  158A  2756  120A  118A  	fcall	_lcd_init
  1832  071D  3002               	movlw	2
  1833                           
  1834                           ;LC-meter.c: 170: lcd_begin(2, 1);
  1835  071E  01F7               	clrf	lcd_begin@dotsize
  1836  071F  0AF7               	incf	lcd_begin@dotsize,f
  1837  0720  160A  118A  2740  120A  118A  	fcall	_lcd_begin
  1838                           
  1839                           ;LC-meter.c: 173: TRISC |= (1 << 4);
  1840  0725  1683               	bsf	3,5	;RP0=1, select bank1
  1841  0726  1303               	bcf	3,6	;RP1=0, select bank1
  1842  0727  1607               	bsf	7,4	;volatile
  1843                           
  1844                           ;LC-meter.c: 174: TRISC &= ~(1 << 5);
  1845  0728  1287               	bcf	7,5	;volatile
  1846                           
  1847                           ;LC-meter.c: 176: PORTC &= ~(1 << 5);
  1848  0729  1283               	bcf	3,5	;RP0=0, select bank0
  1849  072A  1287               	bcf	7,5	;volatile
  1850                           
  1851                           ;LC-meter.c: 177: delay10ms(50);
  1852  072B  3032               	movlw	50
  1853  072C  120A  118A  26B1  120A  118A  	fcall	_delay10ms
  1854                           
  1855                           ;LC-meter.c: 178: PORTC |= (1 << 5);
  1856  0731  1283               	bcf	3,5	;RP0=0, select bank0
  1857  0732  1303               	bcf	3,6	;RP1=0, select bank0
  1858  0733  1687               	bsf	7,5	;volatile
  1859                           
  1860                           ;LC-meter.c: 179: delay10ms(50);
  1861  0734  3032               	movlw	50
  1862  0735  120A  118A  26B1  120A  118A  	fcall	_delay10ms
  1863                           
  1864                           ;LC-meter.c: 180: PORTC &= ~(1 << 5);
  1865  073A  1283               	bcf	3,5	;RP0=0, select bank0
  1866  073B  1303               	bcf	3,6	;RP1=0, select bank0
  1867  073C  1287               	bcf	7,5	;volatile
  1868                           
  1869                           ;LC-meter.c: 181: delay10ms(50);
  1870  073D  3032               	movlw	50
  1871  073E  120A  118A  26B1  120A  118A  	fcall	_delay10ms
  1872                           
  1873                           ;LC-meter.c: 182: PORTC |= (1 << 5);
  1874  0743  1283               	bcf	3,5	;RP0=0, select bank0
  1875  0744  1303               	bcf	3,6	;RP1=0, select bank0
  1876  0745  1687               	bsf	7,5	;volatile
  1877                           
  1878                           ;LC-meter.c: 183: delay10ms(50);
  1879  0746  3032               	movlw	50
  1880  0747  120A  118A  26B1  120A  118A  	fcall	_delay10ms
  1881                           
  1882                           ;LC-meter.c: 184: PORTC &= ~(1 << 5);
  1883  074C  1283               	bcf	3,5	;RP0=0, select bank0
  1884  074D  1303               	bcf	3,6	;RP1=0, select bank0
  1885  074E  1287               	bcf	7,5	;volatile
  1886                           
  1887                           ;LC-meter.c: 190: uart_init();
  1888  074F  160A  158A  273D  120A  118A  	fcall	_uart_init
  1889                           
  1890                           ;LC-meter.c: 194: PEIE = 1;
  1891  0754  170B               	bsf	11,6	;volatile
  1892                           
  1893                           ;LC-meter.c: 195: GIE = 1;
  1894  0755  178B               	bsf	11,7	;volatile
  1895                           
  1896                           ;LC-meter.c: 198: putchar_ptr = &lcd_putch;
  1897  0756  3004               	movlw	(low (fp__lcd_putch-fpbase))& (0+255)
  1898  0757  00FB               	movwf	_putchar_ptr
  1899  0758  3000               	movlw	0
  1900                           
  1901                           ;LC-meter.c: 205: lcd_gotoxy(0, 0);
  1902  0759  01F7               	clrf	lcd_gotoxy@row
  1903  075A  160A  118A  25AA  120A  118A  	fcall	_lcd_gotoxy
  1904                           
  1905                           ;LC-meter.c: 207: lcd_puts("LC-meter ");
  1906  075F  307F               	movlw	(low ((STR_13-__stringbase)| (0+32768)))& (0+255)
  1907  0760  120A  118A  25DB  120A  118A  	fcall	_lcd_puts
  1908                           
  1909                           ;LC-meter.c: 208: format_double( CCal);
  1910  0765  1683               	bsf	3,5	;RP0=1, select bank3
  1911  0766  1703               	bsf	3,6	;RP1=1, select bank3
  1912  0767  084A               	movf	(_CCal+3)^(0+384),w
  1913  0768  00B6               	movwf	(format_double@num+3)^(0+384)
  1914  0769  0849               	movf	(_CCal+2)^(0+384),w
  1915  076A  00B5               	movwf	(format_double@num+2)^(0+384)
  1916  076B  0848               	movf	(_CCal+1)^(0+384),w
  1917  076C  00B4               	movwf	(format_double@num+1)^(0+384)
  1918  076D  0847               	movf	_CCal^(0+384),w
  1919  076E  00B3               	movwf	format_double@num^(0+384)
  1920  076F  120A  118A  210F  120A  118A  	fcall	_format_double
  1921                           
  1922                           ;LC-meter.c: 214: delay10ms(200);
  1923  0774  30C8               	movlw	200
  1924  0775  120A  118A  26B1  120A  118A  	fcall	_delay10ms
  1925                           
  1926                           ;LC-meter.c: 217: calibrate();
  1927  077A  120A  118A  25F8  120A  118A  	fcall	_calibrate
  1928                           
  1929                           ;LC-meter.c: 219: lcd_clear();
  1930  077F  120A  118A  26C9  120A  118A  	fcall	_lcd_clear
  1931  0784                     l4409:	
  1932                           
  1933                           ;LC-meter.c: 230: uart_puts("...\r\n");
  1934  0784  3096               	movlw	(low ((STR_14-__stringbase)| (0+32768)))& (0+255)
  1935  0785  120A  118A  26B2  120A  118A  	fcall	_uart_puts
  1936                           
  1937                           ;LC-meter.c: 231: if(RC4)
  1938  078A  1283               	bcf	3,5	;RP0=0, select bank0
  1939  078B  1303               	bcf	3,6	;RP1=0, select bank0
  1940  078C  1E07               	btfss	7,4	;volatile
  1941  078D  2F94               	goto	l4415
  1942                           
  1943                           ;LC-meter.c: 232: measure_capacitance();
  1944  078E  160A  118A  2257  120A  118A  	fcall	_measure_capacitance
  1945  0793  2F99               	goto	l4417
  1946  0794                     l4415:	
  1947                           
  1948                           ;LC-meter.c: 233: else
  1949                           ;LC-meter.c: 234: measure_inductance();
  1950  0794  120A  158A  217C  120A  118A  	fcall	_measure_inductance
  1951  0799                     l4417:	
  1952                           
  1953                           ;LC-meter.c: 236: indicator(1);
  1954  0799  3001               	movlw	1
  1955  079A  120A  118A  24D5  120A  118A  	fcall	_indicator
  1956                           
  1957                           ;LC-meter.c: 237: delay10ms(30);
  1958  079F  301E               	movlw	30
  1959  07A0  120A  118A  26B1  120A  118A  	fcall	_delay10ms
  1960                           
  1961                           ;LC-meter.c: 238: indicator(0);
  1962  07A5  3000               	movlw	0
  1963  07A6  120A  118A  24D5  120A  118A  	fcall	_indicator
  1964                           
  1965                           ;LC-meter.c: 239: delay10ms(20);
  1966  07AB  3014               	movlw	20
  1967  07AC  120A  118A  26B1  120A  118A  	fcall	_delay10ms
  1968                           
  1969                           ;LC-meter.c: 240: }
  1970  07B1  2F84               	goto	l4409
  1971  07B2                     __end_of_main:	
  1972                           
  1973                           	psect	text1
  1974  1F3D                     __ptext1:	
  1975 ;; *************** function _uart_init *****************
  1976 ;; Defined at:
  1977 ;;		line 93 in file "../../../lib/uart.c"
  1978 ;; Parameters:    Size  Location     Type
  1979 ;;		None
  1980 ;; Auto vars:     Size  Location     Type
  1981 ;;		None
  1982 ;; Return value:  Size  Location     Type
  1983 ;;		None               void
  1984 ;; Registers used:
  1985 ;;		wreg, status,2, status,0, pclath, cstack
  1986 ;; Tracked objects:
  1987 ;;		On entry : 300/0
  1988 ;;		On exit  : 300/100
  1989 ;;		Unchanged: 0/0
  1990 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1991 ;;      Params:         0       0       0       0       0
  1992 ;;      Locals:         4       0       0       0       0
  1993 ;;      Temps:          0       0       0       0       0
  1994 ;;      Totals:         4       0       0       0       0
  1995 ;;Total ram usage:        4 bytes
  1996 ;; Hardware stack levels used:    1
  1997 ;; Hardware stack levels required when called:    2
  1998 ;; This function calls:
  1999 ;;		_uart_enable
  2000 ;; This function is called by:
  2001 ;;		_main
  2002 ;; This function uses a non-reentrant model
  2003 ;;
  2004                           
  2005                           
  2006                           ;psect for function _uart_init
  2007  1F3D                     _uart_init:	
  2008                           
  2009                           ;uart.c: 96: TRISC7 = 1;
  2010                           
  2011                           ;incstack = 0
  2012                           ; Regs used in _uart_init: [wreg+status,2+status,0+pclath+cstack]
  2013  1F3D  1683               	bsf	3,5	;RP0=1, select bank1
  2014  1F3E  1787               	bsf	7,7	;volatile
  2015                           
  2016                           ;uart.c: 97: TRISC6 = 0;
  2017  1F3F  1307               	bcf	7,6	;volatile
  2018                           
  2019                           ;uart.c: 98: RC6 = 0;
  2020  1F40  1283               	bcf	3,5	;RP0=0, select bank0
  2021  1F41  1307               	bcf	7,6	;volatile
  2022                           
  2023                           ;uart.c: 99: SPBRG = ((unsigned short int)((double)(20000000) / (16 * (double)(38400))) 
      +                          - 1);
  2024  1F42  301F               	movlw	31
  2025  1F43  1683               	bsf	3,5	;RP0=1, select bank1
  2026  1F44  0099               	movwf	25	;volatile
  2027                           
  2028                           ;uart.c: 101: RCSTA |= 0x90
  2029                           ;uart.c: 102: | (0 == 1 ? 0b1 : 0);
  2030  1F45  3090               	movlw	144
  2031  1F46  1283               	bcf	3,5	;RP0=0, select bank0
  2032  1F47  0498               	iorwf	24,f	;volatile
  2033                           
  2034                           ;uart.c: 106: TX9 |= (0 == 1) ? 0b01000000 : 0;
  2035                           
  2036                           ;uart.c: 104: TXSTA |= (1 == 1) ? 0b100 : 0b000;
  2037  1F48  1683               	bsf	3,5	;RP0=1, select bank1
  2038  1F49  1518               	bsf	24,2	;volatile
  2039                           
  2040                           ;uart.c: 108: uart_enable();
  2041  1F4A  2F4B               	ljmp	l3035
  2042  1F4B                     __end_of_uart_init:	
  2043  1F4B                     __ptext2:	
  2044 ;; *************** function _uart_enable *****************
  2045 ;; Defined at:
  2046 ;;		line 75 in file "../../../lib/uart.c"
  2047 ;; Parameters:    Size  Location     Type
  2048 ;;		None
  2049 ;; Auto vars:     Size  Location     Type
  2050 ;;		None
  2051 ;; Return value:  Size  Location     Type
  2052 ;;		None               void
  2053 ;; Registers used:
  2054 ;;		None
  2055 ;; Tracked objects:
  2056 ;;		On entry : 300/100
  2057 ;;		On exit  : 300/100
  2058 ;;		Unchanged: 0/0
  2059 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2060 ;;      Params:         0       0       0       0       0
  2061 ;;      Locals:         0       0       0       0       0
  2062 ;;      Temps:          0       0       0       0       0
  2063 ;;      Totals:         0       0       0       0       0
  2064 ;;Total ram usage:        0 bytes
  2065 ;; Hardware stack levels used:    1
  2066 ;; Hardware stack levels required when called:    1
  2067 ;; This function calls:
  2068 ;;		Nothing
  2069 ;; This function is called by:
  2070 ;;		_uart_init
  2071 ;; This function uses a non-reentrant model
  2072 ;;
  2073                           
  2074                           
  2075                           ;psect for function _uart_enable
  2076  1F4B                     _uart_enable:	
  2077  1F4B                     l3035:	
  2078                           ;incstack = 0
  2079                           ; Regs used in _uart_enable: []
  2080                           
  2081                           
  2082                           ;uart.c: 76: TRISC7 = 1;
  2083  1F4B  1787               	bsf	7,7	;volatile
  2084                           
  2085                           ;uart.c: 77: TRISC6 = RC6 = 0;
  2086  1F4C  1283               	bcf	3,5	;RP0=0, select bank0
  2087  1F4D  1307               	bcf	7,6	;volatile
  2088  1F4E  1683               	bsf	3,5	;RP0=1, select bank1
  2089  1F4F  1307               	bcf	7,6	;volatile
  2090                           
  2091                           ;uart.c: 78: TXEN = 1;
  2092  1F50  1698               	bsf	24,5	;volatile
  2093                           
  2094                           ;uart.c: 79: RCSTA |= 0x80;
  2095  1F51  1283               	bcf	3,5	;RP0=0, select bank0
  2096  1F52  1798               	bsf	24,7	;volatile
  2097                           
  2098                           ;uart.c: 80: RCIE = 0;
  2099  1F53  1683               	bsf	3,5	;RP0=1, select bank1
  2100  1F54  128C               	bcf	12,5	;volatile
  2101  1F55  0008               	return
  2102  1F56                     __end_of_uart_enable:	
  2103                           
  2104                           	psect	text3
  2105  1F73                     __ptext3:	
  2106 ;; *************** function _timer2_init *****************
  2107 ;; Defined at:
  2108 ;;		line 110 in file "../../../lib/timer.c"
  2109 ;; Parameters:    Size  Location     Type
  2110 ;;  ps_mode         1    wreg     unsigned char 
  2111 ;; Auto vars:     Size  Location     Type
  2112 ;;  ps_mode         1    3[COMMON] unsigned char 
  2113 ;;  postscaler      1    0        unsigned char 
  2114 ;;  ps              1    4[COMMON] unsigned char 
  2115 ;; Return value:  Size  Location     Type
  2116 ;;		None               void
  2117 ;; Registers used:
  2118 ;;		wreg, status,2, status,0
  2119 ;; Tracked objects:
  2120 ;;		On entry : B00/0
  2121 ;;		On exit  : 300/100
  2122 ;;		Unchanged: 0/0
  2123 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2124 ;;      Params:         0       0       0       0       0
  2125 ;;      Locals:         3       0       0       0       0
  2126 ;;      Temps:          1       0       0       0       0
  2127 ;;      Totals:         4       0       0       0       0
  2128 ;;Total ram usage:        4 bytes
  2129 ;; Hardware stack levels used:    1
  2130 ;; Hardware stack levels required when called:    1
  2131 ;; This function calls:
  2132 ;;		Nothing
  2133 ;; This function is called by:
  2134 ;;		_main
  2135 ;; This function uses a non-reentrant model
  2136 ;;
  2137                           
  2138                           
  2139                           ;psect for function _timer2_init
  2140  1F73                     _timer2_init:	
  2141                           
  2142                           ;incstack = 0
  2143                           ; Regs used in _timer2_init: [wreg+status,2+status,0]
  2144                           ;timer2_init@ps_mode stored from wreg
  2145  1F73  00F3               	movwf	timer2_init@ps_mode
  2146                           
  2147                           ;timer.c: 111: unsigned char ps = ps_mode & 0b1111;
  2148  1F74  00F4               	movwf	timer2_init@ps
  2149  1F75  300F               	movlw	15
  2150  1F76  05F4               	andwf	timer2_init@ps,f
  2151                           
  2152                           ;timer.c: 115: TOUTPS0 = postscaler & 1;
  2153  1F77  1192               	bcf	18,3	;volatile
  2154                           
  2155                           ;timer.c: 116: TOUTPS1 = (postscaler >> 1) & 1;
  2156  1F78  1212               	bcf	18,4	;volatile
  2157                           
  2158                           ;timer.c: 117: TOUTPS2 = (postscaler >> 2) & 1;
  2159  1F79  1292               	bcf	18,5	;volatile
  2160                           
  2161                           ;timer.c: 119: T2CKPS0 = (ps >> 1) & 1;
  2162  1F7A  0874               	movf	timer2_init@ps,w
  2163  1F7B  00F2               	movwf	??_timer2_init
  2164  1F7C  1003               	clrc
  2165  1F7D  0CF2               	rrf	??_timer2_init,f
  2166  1F7E  1C72               	btfss	??_timer2_init,0
  2167  1F7F  2F84               	goto	u2700
  2168  1F80  1283               	bcf	3,5	;RP0=0, select bank0
  2169  1F81  1303               	bcf	3,6	;RP1=0, select bank0
  2170  1F82  1412               	bsf	18,0	;volatile
  2171  1F83  2F87               	goto	l3109
  2172  1F84                     u2700:	
  2173  1F84  1283               	bcf	3,5	;RP0=0, select bank0
  2174  1F85  1303               	bcf	3,6	;RP1=0, select bank0
  2175  1F86  1012               	bcf	18,0	;volatile
  2176  1F87                     l3109:	
  2177                           
  2178                           ;timer.c: 120: T2CKPS1 = (ps >> 2) & 1;
  2179  1F87  0874               	movf	timer2_init@ps,w
  2180  1F88  00F2               	movwf	??_timer2_init
  2181  1F89  1003               	clrc
  2182  1F8A  0CF2               	rrf	??_timer2_init,f
  2183  1F8B  1003               	clrc
  2184  1F8C  0CF2               	rrf	??_timer2_init,f
  2185  1F8D  1C72               	btfss	??_timer2_init,0
  2186  1F8E  2F93               	goto	u2720
  2187  1F8F  1283               	bcf	3,5	;RP0=0, select bank0
  2188  1F90  1303               	bcf	3,6	;RP1=0, select bank0
  2189  1F91  1492               	bsf	18,1	;volatile
  2190  1F92  2F96               	goto	l3111
  2191  1F93                     u2720:	
  2192  1F93  1283               	bcf	3,5	;RP0=0, select bank0
  2193  1F94  1303               	bcf	3,6	;RP1=0, select bank0
  2194  1F95  1092               	bcf	18,1	;volatile
  2195  1F96                     l3111:	
  2196                           
  2197                           ;timer.c: 122: TMR2 = 0;
  2198  1F96  0191               	clrf	17	;volatile
  2199                           
  2200                           ;timer.c: 124: TMR2ON = 1;
  2201  1F97  1512               	bsf	18,2	;volatile
  2202                           
  2203                           ;timer.c: 126: TMR2IF = 0;
  2204  1F98  108C               	bcf	12,1	;volatile
  2205                           
  2206                           ;timer.c: 127: TMR2IE = !!(ps_mode & 0x80);
  2207  1F99  1FF3               	btfss	timer2_init@ps_mode,7
  2208  1F9A  2F9F               	goto	u2740
  2209  1F9B  1683               	bsf	3,5	;RP0=1, select bank1
  2210  1F9C  1303               	bcf	3,6	;RP1=0, select bank1
  2211  1F9D  148C               	bsf	12,1	;volatile
  2212  1F9E  0008               	return
  2213  1F9F                     u2740:	
  2214  1F9F  1683               	bsf	3,5	;RP0=1, select bank1
  2215  1FA0  1303               	bcf	3,6	;RP1=0, select bank1
  2216  1FA1  108C               	bcf	12,1	;volatile
  2217  1FA2  0008               	return
  2218  1FA3                     __end_of_timer2_init:	
  2219                           
  2220                           	psect	text4
  2221  07B2                     __ptext4:	
  2222 ;; *************** function _timer0_init *****************
  2223 ;; Defined at:
  2224 ;;		line 7 in file "../../../lib/timer.c"
  2225 ;; Parameters:    Size  Location     Type
  2226 ;;  ps_mode         1    wreg     unsigned char 
  2227 ;; Auto vars:     Size  Location     Type
  2228 ;;  ps_mode         1    9[BANK0 ] unsigned char 
  2229 ;;  prescaler       1    8[BANK0 ] unsigned char 
  2230 ;; Return value:  Size  Location     Type
  2231 ;;		None               void
  2232 ;; Registers used:
  2233 ;;		wreg, status,2, status,0
  2234 ;; Tracked objects:
  2235 ;;		On entry : B00/100
  2236 ;;		On exit  : B00/0
  2237 ;;		Unchanged: 800/0
  2238 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2239 ;;      Params:         0       0       0       0       0
  2240 ;;      Locals:         0      10       0       0       0
  2241 ;;      Temps:          0       0       0       0       0
  2242 ;;      Totals:         0      10       0       0       0
  2243 ;;Total ram usage:       10 bytes
  2244 ;; Hardware stack levels used:    1
  2245 ;; Hardware stack levels required when called:    1
  2246 ;; This function calls:
  2247 ;;		Nothing
  2248 ;; This function is called by:
  2249 ;;		_main
  2250 ;; This function uses a non-reentrant model
  2251 ;;
  2252                           
  2253                           
  2254                           ;psect for function _timer0_init
  2255  07B2                     _timer0_init:	
  2256                           
  2257                           ;incstack = 0
  2258                           ; Regs used in _timer0_init: [wreg+status,2+status,0]
  2259                           ;timer0_init@ps_mode stored from wreg
  2260  07B2  1283               	bcf	3,5	;RP0=0, select bank0
  2261  07B3  00A9               	movwf	timer0_init@ps_mode
  2262                           
  2263                           ;timer.c: 8: unsigned char prescaler = ps_mode & 0b1111;
  2264  07B4  00A8               	movwf	timer0_init@prescaler
  2265  07B5  300F               	movlw	15
  2266  07B6  05A8               	andwf	timer0_init@prescaler,f
  2267                           
  2268                           ;timer.c: 10: TMR0 = 0;
  2269  07B7  0181               	clrf	1	;volatile
  2270                           
  2271                           ;timer.c: 13: OPTION_REG |= (!!(ps_mode & 0x40)) ? 0x20 : 0x00;
  2272  07B8  1B29               	btfsc	timer0_init@ps_mode,6
  2273  07B9  2FBC               	goto	l4089
  2274  07BA  01A0               	clrf	_timer0_init$124
  2275  07BB  2FBE               	goto	L1
  2276  07BC                     l4089:	
  2277  07BC  3020               	movlw	32
  2278  07BD  00A0               	movwf	_timer0_init$124
  2279  07BE                     L1:	
  2280  07BE  01A1               	clrf	_timer0_init$124+1
  2281  07BF  0820               	movf	_timer0_init$124,w
  2282  07C0  1683               	bsf	3,5	;RP0=1, select bank1
  2283  07C1  0481               	iorwf	1,f	;volatile
  2284                           
  2285                           ;timer.c: 16: OPTION_REG |= (!!(ps_mode & 0x10)) ? 0x10 : 0x00;
  2286  07C2  1283               	bcf	3,5	;RP0=0, select bank0
  2287  07C3  1A29               	btfsc	timer0_init@ps_mode,4
  2288  07C4  2FC7               	goto	l4097
  2289  07C5  01A2               	clrf	_timer0_init$125
  2290  07C6  2FC9               	goto	L2
  2291  07C7                     l4097:	
  2292  07C7  3010               	movlw	16
  2293  07C8  00A2               	movwf	_timer0_init$125
  2294  07C9                     L2:	
  2295  07C9  01A3               	clrf	_timer0_init$125+1
  2296  07CA  0822               	movf	_timer0_init$125,w
  2297  07CB  1683               	bsf	3,5	;RP0=1, select bank1
  2298  07CC  0481               	iorwf	1,f	;volatile
  2299                           
  2300                           ;timer.c: 19: OPTION_REG &= (!!prescaler) ? ~0x08 : ~0x00;
  2301  07CD  1283               	bcf	3,5	;RP0=0, select bank0
  2302  07CE  0828               	movf	timer0_init@prescaler,w
  2303  07CF  1D03               	btfss	3,2
  2304  07D0  2FD4               	goto	l4105
  2305  07D1  30FF               	movlw	255
  2306  07D2  00A4               	movwf	_timer0_init$126
  2307  07D3  2FD7               	goto	L3
  2308  07D4                     l4105:	
  2309  07D4  30F7               	movlw	247
  2310  07D5  00A4               	movwf	_timer0_init$126
  2311  07D6  30FF               	movlw	255
  2312  07D7                     L3:	
  2313  07D7  00A5               	movwf	_timer0_init$126+1
  2314  07D8  0824               	movf	_timer0_init$126,w
  2315  07D9  1683               	bsf	3,5	;RP0=1, select bank1
  2316  07DA  0581               	andwf	1,f	;volatile
  2317                           
  2318                           ;timer.c: 26: OPTION_REG &= ~0b111;
  2319  07DB  30F8               	movlw	248
  2320  07DC  0581               	andwf	1,f	;volatile
  2321                           
  2322                           ;timer.c: 28: if(prescaler > 0) {
  2323  07DD  1283               	bcf	3,5	;RP0=0, select bank0
  2324  07DE  0828               	movf	timer0_init@prescaler,w
  2325  07DF  1903               	btfsc	3,2
  2326  07E0  2FE6               	goto	l4115
  2327                           
  2328                           ;timer.c: 29: OPTION_REG |= (prescaler - 1) & 0b111;
  2329  07E1  0828               	movf	timer0_init@prescaler,w
  2330  07E2  3EFF               	addlw	255
  2331  07E3  3907               	andlw	7
  2332  07E4  1683               	bsf	3,5	;RP0=1, select bank1
  2333  07E5  0481               	iorwf	1,f	;volatile
  2334  07E6                     l4115:	
  2335                           
  2336                           ;timer.c: 35: }
  2337                           ;timer.c: 40: INTCON &= ~0x40;
  2338  07E6  130B               	bcf	11,6	;volatile
  2339                           
  2340                           ;timer.c: 41: INTCON |= (!!(ps_mode & 0x80)) ? 0x20 : 0x00;
  2341  07E7  1283               	bcf	3,5	;RP0=0, select bank0
  2342  07E8  1BA9               	btfsc	timer0_init@ps_mode,7
  2343  07E9  2FEC               	goto	l4121
  2344  07EA  01A6               	clrf	_timer0_init$127
  2345  07EB  2FEE               	goto	L4
  2346  07EC                     l4121:	
  2347  07EC  3020               	movlw	32
  2348  07ED  00A6               	movwf	_timer0_init$127
  2349  07EE                     L4:	
  2350  07EE  01A7               	clrf	_timer0_init$127+1
  2351  07EF  0826               	movf	_timer0_init$127,w
  2352  07F0  048B               	iorwf	11,f	;volatile
  2353  07F1  0008               	return
  2354  07F2                     __end_of_timer0_init:	
  2355                           
  2356                           	psect	text9
  2357  1F56                     __ptext9:	
  2358 ;; *************** function _lcd_init *****************
  2359 ;; Defined at:
  2360 ;;		line 503 in file "../../../lib/lcd44780.c"
  2361 ;; Parameters:    Size  Location     Type
  2362 ;;  fourbitmode     1    wreg     unsigned char 
  2363 ;; Auto vars:     Size  Location     Type
  2364 ;;  fourbitmode     1    2[COMMON] unsigned char 
  2365 ;; Return value:  Size  Location     Type
  2366 ;;		None               void
  2367 ;; Registers used:
  2368 ;;		wreg, status,2, status,0
  2369 ;; Tracked objects:
  2370 ;;		On entry : 300/100
  2371 ;;		On exit  : 300/100
  2372 ;;		Unchanged: 0/0
  2373 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2374 ;;      Params:         0       0       0       0       0
  2375 ;;      Locals:         3       0       0       0       0
  2376 ;;      Temps:          0       0       0       0       0
  2377 ;;      Totals:         3       0       0       0       0
  2378 ;;Total ram usage:        3 bytes
  2379 ;; Hardware stack levels used:    1
  2380 ;; Hardware stack levels required when called:    1
  2381 ;; This function calls:
  2382 ;;		Nothing
  2383 ;; This function is called by:
  2384 ;;		_main
  2385 ;; This function uses a non-reentrant model
  2386 ;;
  2387                           
  2388                           
  2389                           ;psect for function _lcd_init
  2390  1F56                     _lcd_init:	
  2391                           
  2392                           ;incstack = 0
  2393                           ; Regs used in _lcd_init: [wreg+status,2+status,0]
  2394                           ;lcd_init@fourbitmode stored from wreg
  2395  1F56  00F2               	movwf	lcd_init@fourbitmode
  2396                           
  2397                           ;lcd44780.c: 505: LCD_ctrl = 0;
  2398  1F57  1703               	bsf	3,6	;RP1=1, select bank3
  2399  1F58  019E               	clrf	_LCD_ctrl^(0+384)
  2400                           
  2401                           ;lcd44780.c: 506: LCD_function = (fourbitmode ? 0x00 : 0x10);
  2402  1F59  0872               	movf	lcd_init@fourbitmode,w
  2403  1F5A  1D03               	btfss	3,2
  2404  1F5B  2F5F               	goto	l3141
  2405  1F5C  3010               	movlw	16
  2406  1F5D  00F3               	movwf	_lcd_init$338
  2407  1F5E  2F60               	goto	L7
  2408  1F5F                     l3141:	
  2409  1F5F  01F3               	clrf	_lcd_init$338
  2410  1F60                     L7:	
  2411  1F60  01F4               	clrf	_lcd_init$338+1
  2412  1F61  0873               	movf	_lcd_init$338,w
  2413  1F62  00FA               	movwf	_LCD_function
  2414                           
  2415                           ;lcd44780.c: 508: LCD_lines = 0;
  2416  1F63  019F               	clrf	_LCD_lines^(0+384)
  2417                           
  2418                           ;lcd44780.c: 510: LCD_mode = 0;
  2419  1F64  01A0               	clrf	_LCD_mode^(0+384)
  2420                           
  2421                           ;lcd44780.c: 512: TRISB2 = 0;
  2422  1F65  1303               	bcf	3,6	;RP1=0, select bank1
  2423  1F66  1106               	bcf	6,2	;volatile
  2424                           
  2425                           ;lcd44780.c: 513: RB2 = 0;
  2426  1F67  1283               	bcf	3,5	;RP0=0, select bank0
  2427  1F68  1106               	bcf	6,2	;volatile
  2428                           
  2429                           ;lcd44780.c: 518: TRISB3 = 0;
  2430  1F69  1683               	bsf	3,5	;RP0=1, select bank1
  2431  1F6A  1186               	bcf	6,3	;volatile
  2432                           
  2433                           ;lcd44780.c: 519: RB3 = 0;
  2434  1F6B  1283               	bcf	3,5	;RP0=0, select bank0
  2435  1F6C  1186               	bcf	6,3	;volatile
  2436                           
  2437                           ;lcd44780.c: 521: TRISB4 = 0;
  2438  1F6D  1683               	bsf	3,5	;RP0=1, select bank1
  2439  1F6E  1206               	bcf	6,4	;volatile
  2440                           
  2441                           ;lcd44780.c: 522: TRISB5 = 0;
  2442  1F6F  1286               	bcf	6,5	;volatile
  2443                           
  2444                           ;lcd44780.c: 523: TRISB6 = 0;
  2445  1F70  1306               	bcf	6,6	;volatile
  2446                           
  2447                           ;lcd44780.c: 524: TRISB7 = 0;
  2448  1F71  1386               	bcf	6,7	;volatile
  2449  1F72  0008               	return
  2450  1F73                     __end_of_lcd_init:	
  2451                           
  2452                           	psect	text11
  2453  04D5                     __ptext11:	
  2454 ;; *************** function _indicator *****************
  2455 ;; Defined at:
  2456 ;;		line 472 in file "../../../src/print.c"
  2457 ;; Parameters:    Size  Location     Type
  2458 ;;  indicate        1    wreg     unsigned char 
  2459 ;; Auto vars:     Size  Location     Type
  2460 ;;  indicate        1    5[BANK0 ] unsigned char 
  2461 ;; Return value:  Size  Location     Type
  2462 ;;		None               void
  2463 ;; Registers used:
  2464 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2465 ;; Tracked objects:
  2466 ;;		On entry : 0/0
  2467 ;;		On exit  : 0/0
  2468 ;;		Unchanged: 0/0
  2469 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2470 ;;      Params:         0       0       0       0       0
  2471 ;;      Locals:         0       1       0       0       0
  2472 ;;      Temps:          0       0       0       0       0
  2473 ;;      Totals:         0       1       0       0       0
  2474 ;;Total ram usage:        1 bytes
  2475 ;; Hardware stack levels used:    1
  2476 ;; Hardware stack levels required when called:    5
  2477 ;; This function calls:
  2478 ;;		_lcd_gotoxy
  2479 ;;		_lcd_puts
  2480 ;; This function is called by:
  2481 ;;		_main
  2482 ;; This function uses a non-reentrant model
  2483 ;;
  2484                           
  2485                           
  2486                           ;psect for function _indicator
  2487  04D5                     _indicator:	
  2488                           
  2489                           ;incstack = 0
  2490                           ; Regs used in _indicator: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2491                           ;indicator@indicate stored from wreg
  2492  04D5  1283               	bcf	3,5	;RP0=0, select bank0
  2493  04D6  1303               	bcf	3,6	;RP1=0, select bank0
  2494  04D7  00A5               	movwf	indicator@indicate
  2495  04D8  3000               	movlw	0
  2496                           
  2497                           ;print.c: 486: lcd_gotoxy(0, 1);
  2498  04D9  01F7               	clrf	lcd_gotoxy@row
  2499  04DA  0AF7               	incf	lcd_gotoxy@row,f
  2500  04DB  160A  118A  25AA  120A  118A  	fcall	_lcd_gotoxy
  2501                           
  2502                           ;print.c: 487: if(indicate) {
  2503  04E0  1283               	bcf	3,5	;RP0=0, select bank0
  2504  04E1  1303               	bcf	3,6	;RP1=0, select bank0
  2505  04E2  0825               	movf	indicator@indicate,w
  2506  04E3  1903               	btfsc	3,2
  2507  04E4  2CE7               	goto	l4077
  2508                           
  2509                           ;print.c: 488: lcd_puts("-*-");
  2510  04E5  30A1               	movlw	(low ((STR_11-__stringbase)| (0+32768)))& (0+255)
  2511  04E6  2DDB               	ljmp	_lcd_puts
  2512  04E7                     l4077:	
  2513                           ;print.c: 489: } else {
  2514                           
  2515                           
  2516                           ;print.c: 490: lcd_puts("   ");
  2517  04E7  308C               	movlw	(low (((STR_15+3)-__stringbase)| (0+32768)))& (0+255)
  2518  04E8  2DDB               	ljmp	_lcd_puts
  2519  04E9                     __end_of_indicator:	
  2520  04E9                     __ptext8:	
  2521 ;; *************** function _print_reading *****************
  2522 ;; Defined at:
  2523 ;;		line 432 in file "../../../src/print.c"
  2524 ;; Parameters:    Size  Location     Type
  2525 ;;  measurement     2   41[BANK0 ] unsigned short 
  2526 ;; Auto vars:     Size  Location     Type
  2527 ;;		None
  2528 ;; Return value:  Size  Location     Type
  2529 ;;		None               void
  2530 ;; Registers used:
  2531 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2532 ;; Tracked objects:
  2533 ;;		On entry : 300/0
  2534 ;;		On exit  : 300/0
  2535 ;;		Unchanged: 0/0
  2536 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2537 ;;      Params:         0       2       0       0       0
  2538 ;;      Locals:         0       4       0       0       0
  2539 ;;      Temps:          0       0       0       0       0
  2540 ;;      Totals:         0       6       0       0       0
  2541 ;;Total ram usage:        6 bytes
  2542 ;; Hardware stack levels used:    1
  2543 ;; Hardware stack levels required when called:    6
  2544 ;; This function calls:
  2545 ;;		___lwdiv
  2546 ;;		___lwmod
  2547 ;;		_format_number
  2548 ;;		_lcd_gotoxy
  2549 ;;		_lcd_puts
  2550 ;; This function is called by:
  2551 ;;		_measure_capacitance
  2552 ;;		_measure_inductance
  2553 ;; This function uses a non-reentrant model
  2554 ;;
  2555                           
  2556                           
  2557                           ;psect for function _print_reading
  2558  04E9                     _print_reading:	
  2559                           
  2560                           ;incstack = 0
  2561                           ; Regs used in _print_reading: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2562  04E9  3009               	movlw	9
  2563                           
  2564                           ;print.c: 459: lcd_gotoxy(9, 0);
  2565  04EA  01F7               	clrf	lcd_gotoxy@row
  2566  04EB  160A  118A  25AA  120A  118A  	fcall	_lcd_gotoxy
  2567                           
  2568                           ;print.c: 460: lcd_puts("     ");
  2569  04F0  308A               	movlw	(low (((STR_15+1)-__stringbase)| (0+32768)))& (0+255)
  2570  04F1  25DB               	fcall	_lcd_puts
  2571  04F2  3009               	movlw	9
  2572                           
  2573                           ;print.c: 461: lcd_gotoxy(9, 0);
  2574  04F3  01F7               	clrf	lcd_gotoxy@row
  2575  04F4  160A  118A  25AA  120A  118A  	fcall	_lcd_gotoxy
  2576                           
  2577                           ;print.c: 463: format_number( measurement / 100, 10, 0);
  2578  04F9  3064               	movlw	100
  2579  04FA  00F2               	movwf	___lwdiv@divisor
  2580  04FB  01F3               	clrf	___lwdiv@divisor+1
  2581  04FC  1283               	bcf	3,5	;RP0=0, select bank0
  2582  04FD  1303               	bcf	3,6	;RP1=0, select bank0
  2583  04FE  084A               	movf	print_reading@measurement+1,w
  2584  04FF  00F5               	movwf	___lwdiv@dividend+1
  2585  0500  0849               	movf	print_reading@measurement,w
  2586  0501  00F4               	movwf	___lwdiv@dividend
  2587  0502  258D  120A  118A   	fcall	___lwdiv
  2588  0505  0873               	movf	?___lwdiv+1,w
  2589  0506  00CC               	movwf	_print_reading$1042+1
  2590  0507  0872               	movf	?___lwdiv,w
  2591  0508  00CB               	movwf	_print_reading$1042
  2592                           
  2593                           ;print.c: 463: format_number( measurement / 100, 10, 0);
  2594  0509  084C               	movf	_print_reading$1042+1,w
  2595  050A  00A1               	movwf	format_number@n+1
  2596  050B  084B               	movf	_print_reading$1042,w
  2597  050C  00A0               	movwf	format_number@n
  2598  050D  300A               	movlw	10
  2599  050E  00A2               	movwf	format_number@base
  2600  050F  01A3               	clrf	format_number@pad
  2601  0510  2529  120A  118A   	fcall	_format_number
  2602                           
  2603                           ;print.c: 465: format_number( measurement % 100, 10, 0);
  2604  0513  3064               	movlw	100
  2605  0514  00F2               	movwf	___lwmod@divisor
  2606  0515  01F3               	clrf	___lwmod@divisor+1
  2607  0516  084A               	movf	print_reading@measurement+1,w
  2608  0517  00F5               	movwf	___lwmod@dividend+1
  2609  0518  0849               	movf	print_reading@measurement,w
  2610  0519  00F4               	movwf	___lwmod@dividend
  2611  051A  25B7  120A  118A   	fcall	___lwmod
  2612  051D  0873               	movf	?___lwmod+1,w
  2613  051E  00CE               	movwf	_print_reading$1043+1
  2614  051F  0872               	movf	?___lwmod,w
  2615  0520  00CD               	movwf	_print_reading$1043
  2616                           
  2617                           ;print.c: 465: format_number( measurement % 100, 10, 0);
  2618  0521  084E               	movf	_print_reading$1043+1,w
  2619  0522  00A1               	movwf	format_number@n+1
  2620  0523  084D               	movf	_print_reading$1043,w
  2621  0524  00A0               	movwf	format_number@n
  2622  0525  300A               	movlw	10
  2623  0526  00A2               	movwf	format_number@base
  2624  0527  01A3               	clrf	format_number@pad
  2625  0528  2D29               	ljmp	l3819
  2626  0529                     __end_of_print_reading:	
  2627  0529                     __ptext39:	
  2628 ;; *************** function _format_number *****************
  2629 ;; Defined at:
  2630 ;;		line 14 in file "../../../lib/format.c"
  2631 ;; Parameters:    Size  Location     Type
  2632 ;;  n               2    0[BANK0 ] unsigned short 
  2633 ;;  base            1    2[BANK0 ] unsigned char 
  2634 ;;  pad             1    3[BANK0 ] char 
  2635 ;; Auto vars:     Size  Location     Type
  2636 ;;  buf            32    4[BANK0 ] unsigned char [32]
  2637 ;;  i               1   40[BANK0 ] char 
  2638 ;;  di              1   39[BANK0 ] unsigned char 
  2639 ;;  padchar         1   36[BANK0 ] unsigned char 
  2640 ;; Return value:  Size  Location     Type
  2641 ;;		None               void
  2642 ;; Registers used:
  2643 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2644 ;; Tracked objects:
  2645 ;;		On entry : 300/0
  2646 ;;		On exit  : 300/0
  2647 ;;		Unchanged: 0/0
  2648 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2649 ;;      Params:         0       4       0       0       0
  2650 ;;      Locals:         0      37       0       0       0
  2651 ;;      Temps:          1       0       0       0       0
  2652 ;;      Totals:         1      41       0       0       0
  2653 ;;Total ram usage:       42 bytes
  2654 ;; Hardware stack levels used:    1
  2655 ;; Hardware stack levels required when called:    5
  2656 ;; This function calls:
  2657 ;;		___lwdiv
  2658 ;;		___lwmod
  2659 ;;		_format_putchar
  2660 ;;		_lcd_putch
  2661 ;;		_output_putch
  2662 ;; This function is called by:
  2663 ;;		_print_reading
  2664 ;;		_measure_freq
  2665 ;; This function uses a non-reentrant model
  2666 ;;
  2667                           
  2668                           
  2669                           ;psect for function _format_number
  2670  0529                     _format_number:	
  2671  0529                     l3819:	
  2672                           ;incstack = 0
  2673                           ; Regs used in _format_number: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2674                           
  2675  0529  3020               	movlw	32
  2676                           
  2677                           ;format.c: 15: char buf[8 * sizeof(long)];
  2678                           ;format.c: 16: unsigned char di;
  2679                           ;format.c: 17: signed char i = 0;
  2680  052A  01C8               	clrf	format_number@i
  2681                           
  2682                           ;format.c: 18: char padchar = ' ';
  2683  052B  00C4               	movwf	format_number@padchar
  2684                           
  2685                           ;format.c: 20: if(pad < 0) {
  2686  052C  1FA3               	btfss	format_number@pad,7
  2687  052D  2D32               	goto	l3829
  2688  052E  3030               	movlw	48
  2689                           
  2690                           ;format.c: 21: pad = -pad;
  2691  052F  09A3               	comf	format_number@pad,f
  2692  0530  0AA3               	incf	format_number@pad,f
  2693                           
  2694                           ;format.c: 22: padchar = '0';
  2695  0531  00C4               	movwf	format_number@padchar
  2696  0532                     l3829:	
  2697                           
  2698                           ;format.c: 34: di = n % base;
  2699  0532  0822               	movf	format_number@base,w
  2700  0533  00F2               	movwf	___lwmod@divisor
  2701  0534  01F3               	clrf	___lwmod@divisor+1
  2702  0535  0821               	movf	format_number@n+1,w
  2703  0536  00F5               	movwf	___lwmod@dividend+1
  2704  0537  0820               	movf	format_number@n,w
  2705  0538  00F4               	movwf	___lwmod@dividend
  2706  0539  25B7  120A  118A   	fcall	___lwmod
  2707  053C  0872               	movf	?___lwmod,w
  2708  053D  00C7               	movwf	format_number@di
  2709                           
  2710                           ;format.c: 35: buf[i++] = (di < 10 ? (unsigned char)'0' + di : (unsigned char)'A' + di -
      +                           10);
  2711  053E  300A               	movlw	10
  2712  053F  0247               	subwf	format_number@di,w
  2713  0540  0847               	movf	format_number@di,w
  2714  0541  00C5               	movwf	_format_number$169
  2715  0542  1C03               	skipc
  2716  0543  2D46               	goto	L16
  2717  0544  3037               	movlw	55
  2718  0545  2D47               	goto	L15
  2719  0546                     L16:	
  2720  0546  3030               	movlw	48
  2721  0547                     L15:	
  2722  0547  01C6               	clrf	_format_number$169+1
  2723  0548  07C5               	addwf	_format_number$169,f
  2724  0549  1803               	skipnc
  2725  054A  0AC6               	incf	_format_number$169+1,f
  2726  054B  0848               	movf	format_number@i,w
  2727  054C  3E24               	addlw	(low (format_number@buf| 0))& (0+255)
  2728  054D  0084               	movwf	4
  2729  054E  0845               	movf	_format_number$169,w
  2730  054F  1383               	bcf	3,7	;select IRP bank0
  2731  0550  0080               	movwf	0
  2732  0551  0AC8               	incf	format_number@i,f
  2733                           
  2734                           ;format.c: 37: n /= base;
  2735  0552  0822               	movf	format_number@base,w
  2736  0553  00F2               	movwf	___lwdiv@divisor
  2737  0554  01F3               	clrf	___lwdiv@divisor+1
  2738  0555  0821               	movf	format_number@n+1,w
  2739  0556  00F5               	movwf	___lwdiv@dividend+1
  2740  0557  0820               	movf	format_number@n,w
  2741  0558  00F4               	movwf	___lwdiv@dividend
  2742  0559  258D  120A  118A   	fcall	___lwdiv
  2743  055C  0873               	movf	?___lwdiv+1,w
  2744  055D  00A1               	movwf	format_number@n+1
  2745  055E  0872               	movf	?___lwdiv,w
  2746  055F  00A0               	movwf	format_number@n
  2747                           
  2748                           ;format.c: 38: } while(n > 0);
  2749  0560  0421               	iorwf	format_number@n+1,w
  2750  0561  1903               	btfsc	3,2
  2751  0562  2D6C               	goto	l3847
  2752  0563  2D32               	goto	l3829
  2753  0564                     l3845:	
  2754  0564  0844               	movf	format_number@padchar,w
  2755  0565  00F7               	movwf	format_putchar@c
  2756  0566  087B               	movf	_putchar_ptr,w
  2757  0567  120A  118A  2100  120A  118A  	fcall	fptable
  2758  056C                     l3847:	
  2759  056C  1283               	bcf	3,5	;RP0=0, select bank0
  2760  056D  1303               	bcf	3,6	;RP1=0, select bank0
  2761  056E  0848               	movf	format_number@i,w
  2762  056F  3A80               	xorlw	128
  2763  0570  00F9               	movwf	??_format_number
  2764  0571  0823               	movf	format_number@pad,w
  2765  0572  03A3               	decf	format_number@pad,f
  2766  0573  3A80               	xorlw	128
  2767  0574  02F9               	subwf	??_format_number,f
  2768  0575  1C03               	skipc
  2769  0576  2D64               	goto	l3845
  2770  0577                     l3849:	
  2771                           
  2772                           ;format.c: 42: for(; i > 0; i--) putchar_ptr((char)buf[(signed short int)i - 1]);
  2773  0577  0848               	movf	format_number@i,w
  2774  0578  3A80               	xorlw	128
  2775  0579  3E7F               	addlw	-129
  2776  057A  1C03               	btfss	3,0
  2777  057B  0008               	return
  2778  057C  0848               	movf	format_number@i,w
  2779  057D  3EFF               	addlw	255
  2780  057E  3E24               	addlw	(low (format_number@buf| 0))& (0+255)
  2781  057F  0084               	movwf	4
  2782  0580  1383               	bcf	3,7	;select IRP bank0
  2783  0581  0800               	movf	0,w
  2784  0582  00F7               	movwf	format_putchar@c
  2785  0583  087B               	movf	_putchar_ptr,w
  2786  0584  120A  118A  2100  120A  118A  	fcall	fptable
  2787  0589  1283               	bcf	3,5	;RP0=0, select bank0
  2788  058A  1303               	bcf	3,6	;RP1=0, select bank0
  2789  058B  03C8               	decf	format_number@i,f
  2790  058C  2D77               	goto	l3849
  2791  058D                     __end_of_format_number:	
  2792  058D                     __ptext44:	
  2793 ;; *************** function ___lwdiv *****************
  2794 ;; Defined at:
  2795 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lwdiv.c"
  2796 ;; Parameters:    Size  Location     Type
  2797 ;;  divisor         2    2[COMMON] unsigned int 
  2798 ;;  dividend        2    4[COMMON] unsigned int 
  2799 ;; Auto vars:     Size  Location     Type
  2800 ;;  quotient        2    6[COMMON] unsigned int 
  2801 ;;  counter         1    8[COMMON] unsigned char 
  2802 ;; Return value:  Size  Location     Type
  2803 ;;                  2    2[COMMON] unsigned int 
  2804 ;; Registers used:
  2805 ;;		wreg, status,2, status,0
  2806 ;; Tracked objects:
  2807 ;;		On entry : 300/0
  2808 ;;		On exit  : 300/0
  2809 ;;		Unchanged: 300/0
  2810 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2811 ;;      Params:         4       0       0       0       0
  2812 ;;      Locals:         3       0       0       0       0
  2813 ;;      Temps:          0       0       0       0       0
  2814 ;;      Totals:         7       0       0       0       0
  2815 ;;Total ram usage:        7 bytes
  2816 ;; Hardware stack levels used:    1
  2817 ;; Hardware stack levels required when called:    1
  2818 ;; This function calls:
  2819 ;;		Nothing
  2820 ;; This function is called by:
  2821 ;;		_print_reading
  2822 ;;		_format_number
  2823 ;; This function uses a non-reentrant model
  2824 ;;
  2825                           
  2826                           
  2827                           ;psect for function ___lwdiv
  2828  058D                     ___lwdiv:	
  2829                           
  2830                           ;incstack = 0
  2831                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  2832  058D  01F6               	clrf	___lwdiv@quotient
  2833  058E  01F7               	clrf	___lwdiv@quotient+1
  2834  058F  0872               	movf	___lwdiv@divisor,w
  2835  0590  0473               	iorwf	___lwdiv@divisor+1,w
  2836  0591  1903               	btfsc	3,2
  2837  0592  2DB2               	goto	l2739
  2838  0593  01F8               	clrf	___lwdiv@counter
  2839  0594                     L19:	
  2840  0594  0AF8               	incf	___lwdiv@counter,f
  2841  0595  1BF3               	btfsc	___lwdiv@divisor+1,7
  2842  0596  2D9B               	goto	l2727
  2843  0597  1003               	clrc
  2844  0598  0DF2               	rlf	___lwdiv@divisor,f
  2845  0599  0DF3               	rlf	___lwdiv@divisor+1,f
  2846  059A  2D94               	goto	L19
  2847  059B                     l2727:	
  2848  059B  1003               	clrc
  2849  059C  0DF6               	rlf	___lwdiv@quotient,f
  2850  059D  0DF7               	rlf	___lwdiv@quotient+1,f
  2851  059E  0873               	movf	___lwdiv@divisor+1,w
  2852  059F  0275               	subwf	___lwdiv@dividend+1,w
  2853  05A0  1D03               	skipz
  2854  05A1  2DA4               	goto	u2325
  2855  05A2  0872               	movf	___lwdiv@divisor,w
  2856  05A3  0274               	subwf	___lwdiv@dividend,w
  2857  05A4                     u2325:	
  2858  05A4  1C03               	skipc
  2859  05A5  2DAE               	goto	L20
  2860  05A6  0872               	movf	___lwdiv@divisor,w
  2861  05A7  02F4               	subwf	___lwdiv@dividend,f
  2862  05A8  0873               	movf	___lwdiv@divisor+1,w
  2863  05A9  1C03               	skipc
  2864  05AA  03F5               	decf	___lwdiv@dividend+1,f
  2865  05AB  02F5               	subwf	___lwdiv@dividend+1,f
  2866  05AC  1476               	bsf	___lwdiv@quotient,0
  2867  05AD  1003               	clrc
  2868  05AE                     L20:	
  2869  05AE  0CF3               	rrf	___lwdiv@divisor+1,f
  2870  05AF  0CF2               	rrf	___lwdiv@divisor,f
  2871  05B0  0BF8               	decfsz	___lwdiv@counter,f
  2872  05B1  2D9B               	goto	l2727
  2873  05B2                     l2739:	
  2874  05B2  0877               	movf	___lwdiv@quotient+1,w
  2875  05B3  00F3               	movwf	?___lwdiv+1
  2876  05B4  0876               	movf	___lwdiv@quotient,w
  2877  05B5  00F2               	movwf	?___lwdiv
  2878  05B6  0008               	return
  2879  05B7                     __end_of___lwdiv:	
  2880  05B7                     __ptext43:	
  2881 ;; *************** function ___lwmod *****************
  2882 ;; Defined at:
  2883 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lwmod.c"
  2884 ;; Parameters:    Size  Location     Type
  2885 ;;  divisor         2    2[COMMON] unsigned int 
  2886 ;;  dividend        2    4[COMMON] unsigned int 
  2887 ;; Auto vars:     Size  Location     Type
  2888 ;;  counter         1    6[COMMON] unsigned char 
  2889 ;; Return value:  Size  Location     Type
  2890 ;;                  2    2[COMMON] unsigned int 
  2891 ;; Registers used:
  2892 ;;		wreg, status,2, status,0
  2893 ;; Tracked objects:
  2894 ;;		On entry : 300/0
  2895 ;;		On exit  : 300/0
  2896 ;;		Unchanged: 300/0
  2897 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2898 ;;      Params:         4       0       0       0       0
  2899 ;;      Locals:         1       0       0       0       0
  2900 ;;      Temps:          0       0       0       0       0
  2901 ;;      Totals:         5       0       0       0       0
  2902 ;;Total ram usage:        5 bytes
  2903 ;; Hardware stack levels used:    1
  2904 ;; Hardware stack levels required when called:    1
  2905 ;; This function calls:
  2906 ;;		Nothing
  2907 ;; This function is called by:
  2908 ;;		_print_reading
  2909 ;;		_format_number
  2910 ;; This function uses a non-reentrant model
  2911 ;;
  2912                           
  2913                           
  2914                           ;psect for function ___lwmod
  2915  05B7                     ___lwmod:	
  2916                           
  2917                           ;incstack = 0
  2918                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  2919  05B7  0872               	movf	___lwmod@divisor,w
  2920  05B8  0473               	iorwf	___lwmod@divisor+1,w
  2921  05B9  1903               	btfsc	3,2
  2922  05BA  2DD6               	goto	l2759
  2923  05BB  01F6               	clrf	___lwmod@counter
  2924  05BC                     L17:	
  2925  05BC  0AF6               	incf	___lwmod@counter,f
  2926  05BD  1BF3               	btfsc	___lwmod@divisor+1,7
  2927  05BE  2DC3               	goto	l2751
  2928  05BF  1003               	clrc
  2929  05C0  0DF2               	rlf	___lwmod@divisor,f
  2930  05C1  0DF3               	rlf	___lwmod@divisor+1,f
  2931  05C2  2DBC               	goto	L17
  2932  05C3                     l2751:	
  2933  05C3  0873               	movf	___lwmod@divisor+1,w
  2934  05C4  0275               	subwf	___lwmod@dividend+1,w
  2935  05C5  1D03               	skipz
  2936  05C6  2DC9               	goto	u2365
  2937  05C7  0872               	movf	___lwmod@divisor,w
  2938  05C8  0274               	subwf	___lwmod@dividend,w
  2939  05C9                     u2365:	
  2940  05C9  1C03               	skipc
  2941  05CA  2DD2               	goto	L18
  2942  05CB  0872               	movf	___lwmod@divisor,w
  2943  05CC  02F4               	subwf	___lwmod@dividend,f
  2944  05CD  0873               	movf	___lwmod@divisor+1,w
  2945  05CE  1C03               	skipc
  2946  05CF  03F5               	decf	___lwmod@dividend+1,f
  2947  05D0  02F5               	subwf	___lwmod@dividend+1,f
  2948  05D1  1003               	clrc
  2949  05D2                     L18:	
  2950  05D2  0CF3               	rrf	___lwmod@divisor+1,f
  2951  05D3  0CF2               	rrf	___lwmod@divisor,f
  2952  05D4  0BF6               	decfsz	___lwmod@counter,f
  2953  05D5  2DC3               	goto	l2751
  2954  05D6                     l2759:	
  2955  05D6  0875               	movf	___lwmod@dividend+1,w
  2956  05D7  00F3               	movwf	?___lwmod+1
  2957  05D8  0874               	movf	___lwmod@dividend,w
  2958  05D9  00F2               	movwf	?___lwmod
  2959  05DA  0008               	return
  2960  05DB                     __end_of___lwmod:	
  2961  05DB                     __ptext12:	
  2962 ;; *************** function _lcd_puts *****************
  2963 ;; Defined at:
  2964 ;;		line 182 in file "../../../lib/lcd44780.c"
  2965 ;; Parameters:    Size  Location     Type
  2966 ;;  string          1    wreg     PTR const unsigned char 
  2967 ;;		 -> STR_18(5), STR_17(6), STR_16(7), STR_15(7), 
  2968 ;;		 -> STR_13(10), STR_12(4), STR_11(4), STR_10(6), 
  2969 ;; Auto vars:     Size  Location     Type
  2970 ;;  string          1    9[COMMON] PTR const unsigned char 
  2971 ;;		 -> STR_18(5), STR_17(6), STR_16(7), STR_15(7), 
  2972 ;;		 -> STR_13(10), STR_12(4), STR_11(4), STR_10(6), 
  2973 ;;  i               1    8[COMMON] unsigned char 
  2974 ;; Return value:  Size  Location     Type
  2975 ;;		None               void
  2976 ;; Registers used:
  2977 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2978 ;; Tracked objects:
  2979 ;;		On entry : 0/100
  2980 ;;		On exit  : 0/0
  2981 ;;		Unchanged: 0/0
  2982 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2983 ;;      Params:         0       0       0       0       0
  2984 ;;      Locals:         2       0       0       0       0
  2985 ;;      Temps:          0       0       0       0       0
  2986 ;;      Totals:         2       0       0       0       0
  2987 ;;Total ram usage:        2 bytes
  2988 ;; Hardware stack levels used:    1
  2989 ;; Hardware stack levels required when called:    4
  2990 ;; This function calls:
  2991 ;;		_lcd_putch
  2992 ;; This function is called by:
  2993 ;;		_print_reading
  2994 ;;		_indicator
  2995 ;;		_main
  2996 ;; This function uses a non-reentrant model
  2997 ;;
  2998                           
  2999                           
  3000                           ;psect for function _lcd_puts
  3001  05DB                     _lcd_puts:	
  3002                           
  3003                           ;incstack = 0
  3004                           ; Regs used in _lcd_puts: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3005                           ;lcd_puts@string stored from wreg
  3006  05DB  00F9               	movwf	lcd_puts@string
  3007                           
  3008                           ;lcd44780.c: 183: unsigned char i;
  3009                           ;lcd44780.c: 184: for(i = 0; string[i]; i++) lcd_putch(string[i]);
  3010  05DC  01F8               	clrf	lcd_puts@i
  3011  05DD                     l3817:	
  3012  05DD  0878               	movf	lcd_puts@i,w
  3013  05DE  0779               	addwf	lcd_puts@string,w
  3014  05DF  0084               	movwf	4
  3015  05E0  120A  118A  2030  120A  118A  	fcall	stringdir
  3016  05E5  3A00               	xorlw	0
  3017  05E6  1903               	btfsc	3,2
  3018  05E7  0008               	return
  3019  05E8  0878               	movf	lcd_puts@i,w
  3020  05E9  0779               	addwf	lcd_puts@string,w
  3021  05EA  0084               	movwf	4
  3022  05EB  120A  118A  2030  120A  118A  	fcall	stringdir
  3023  05F0  00F7               	movwf	lcd_putch@value
  3024  05F1  160A  118A  2638  120A  118A  	fcall	_lcd_putch
  3025  05F6  0AF8               	incf	lcd_puts@i,f
  3026  05F7  2DDD               	goto	l3817
  3027  05F8                     __end_of_lcd_puts:	
  3028                           
  3029                           	psect	text13
  3030  010F                     __ptext13:	
  3031 ;; *************** function _format_double *****************
  3032 ;; Defined at:
  3033 ;;		line 74 in file "../../../lib/format.c"
  3034 ;; Parameters:    Size  Location     Type
  3035 ;;  num             4    0[BANK3 ] unsigned char 
  3036 ;; Auto vars:     Size  Location     Type
  3037 ;;  weight          4   12[BANK3 ] unsigned char 
  3038 ;;  m               2   18[BANK3 ] short 
  3039 ;;  digit           2   16[BANK3 ] short 
  3040 ;; Return value:  Size  Location     Type
  3041 ;;		None               void
  3042 ;; Registers used:
  3043 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3044 ;; Tracked objects:
  3045 ;;		On entry : 300/300
  3046 ;;		On exit  : 0/0
  3047 ;;		Unchanged: 0/0
  3048 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3049 ;;      Params:         0       0       0       4       0
  3050 ;;      Locals:         0       0       0      16       0
  3051 ;;      Temps:          0       0       0       0       0
  3052 ;;      Totals:         0       0       0      20       0
  3053 ;;Total ram usage:       20 bytes
  3054 ;; Hardware stack levels used:    1
  3055 ;; Hardware stack levels required when called:    6
  3056 ;; This function calls:
  3057 ;;		___awtofl
  3058 ;;		___fldiv
  3059 ;;		___flge
  3060 ;;		___flmul
  3061 ;;		___flsub
  3062 ;;		___fltol
  3063 ;;		_floor
  3064 ;;		_format_putchar
  3065 ;;		_lcd_putch
  3066 ;;		_log10
  3067 ;;		_output_putch
  3068 ;;		_pow
  3069 ;; This function is called by:
  3070 ;;		_main
  3071 ;; This function uses a non-reentrant model
  3072 ;;
  3073                           
  3074                           
  3075                           ;psect for function _format_double
  3076  010F                     _format_double:	
  3077                           
  3078                           ;format.c: 75: short m = (short)log10(num);
  3079                           
  3080                           ;incstack = 0
  3081                           ; Regs used in _format_double: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3082  010F  0836               	movf	(format_double@num+3)^(0+384),w
  3083  0110  1303               	bcf	3,6	;RP1=0, select bank1
  3084  0111  00A3               	movwf	(log10@x+3)^(0+128)
  3085  0112  1703               	bsf	3,6	;RP1=1, select bank3
  3086  0113  0835               	movf	(format_double@num+2)^(0+384),w
  3087  0114  1303               	bcf	3,6	;RP1=0, select bank1
  3088  0115  00A2               	movwf	(log10@x+2)^(0+128)
  3089  0116  1703               	bsf	3,6	;RP1=1, select bank3
  3090  0117  0834               	movf	(format_double@num+1)^(0+384),w
  3091  0118  1303               	bcf	3,6	;RP1=0, select bank1
  3092  0119  00A1               	movwf	(log10@x+1)^(0+128)
  3093  011A  1703               	bsf	3,6	;RP1=1, select bank3
  3094  011B  0833               	movf	format_double@num^(0+384),w
  3095  011C  1303               	bcf	3,6	;RP1=0, select bank1
  3096  011D  00A0               	movwf	log10@x^(0+128)
  3097  011E  2296               	fcall	_log10
  3098  011F  0823               	movf	(?_log10+3)^(0+128),w
  3099  0120  00AB               	movwf	(___fltol@f1+3)^(0+128)
  3100  0121  0822               	movf	(?_log10+2)^(0+128),w
  3101  0122  00AA               	movwf	(___fltol@f1+2)^(0+128)
  3102  0123  0821               	movf	(?_log10+1)^(0+128),w
  3103  0124  00A9               	movwf	(___fltol@f1+1)^(0+128)
  3104  0125  0820               	movf	?_log10^(0+128),w
  3105  0126  00A8               	movwf	___fltol@f1^(0+128)
  3106  0127  120A  158A  278F  120A  118A  	fcall	___fltol
  3107  012C  0829               	movf	(?___fltol^(0+128)+1),w
  3108  012D  1703               	bsf	3,6	;RP1=1, select bank3
  3109  012E  00C6               	movwf	(format_double@m+1)^(0+384)
  3110  012F  1303               	bcf	3,6	;RP1=0, select bank1
  3111  0130  0828               	movf	?___fltol^(0+128),w
  3112  0131  1703               	bsf	3,6	;RP1=1, select bank3
  3113  0132  00C5               	movwf	format_double@m^(0+384)
  3114  0133                     l4139:	
  3115                           ;format.c: 76: short digit;
  3116                           ;format.c: 79: while(num > 0 + (sizeof(double) == sizeof(float) ? 3.05176e-05 : 1.192092
      +                          90e-07)) {
  3117                           
  3118  0133  3038               	movlw	56
  3119  0134  00F5               	movwf	___flge@ff1+3
  3120  0135  3006               	movlw	6
  3121  0136  01F4               	clrf	___flge@ff1+2
  3122  0137  01F3               	clrf	___flge@ff1+1
  3123  0138  00F2               	movwf	___flge@ff1
  3124  0139  0836               	movf	(format_double@num+3)^(0+384),w
  3125  013A  00F9               	movwf	___flge@ff2+3
  3126  013B  0835               	movf	(format_double@num+2)^(0+384),w
  3127  013C  00F8               	movwf	___flge@ff2+2
  3128  013D  0834               	movf	(format_double@num+1)^(0+384),w
  3129  013E  00F7               	movwf	___flge@ff2+1
  3130  013F  0833               	movf	format_double@num^(0+384),w
  3131  0140  00F6               	movwf	___flge@ff2
  3132  0141  120A  158A  265F  120A  118A  	fcall	___flge
  3133  0146  1803               	btfsc	3,0
  3134  0147  0008               	return
  3135                           
  3136                           ;format.c: 80: double weight = pow(10.0l, m);
  3137  0148  1683               	bsf	3,5	;RP0=1, select bank3
  3138  0149  1703               	bsf	3,6	;RP1=1, select bank3
  3139  014A  0846               	movf	(format_double@m+1)^(0+384),w
  3140  014B  1283               	bcf	3,5	;RP0=0, select bank0
  3141  014C  1303               	bcf	3,6	;RP1=0, select bank0
  3142  014D  00A5               	movwf	___awtofl@c+1
  3143  014E  1683               	bsf	3,5	;RP0=1, select bank3
  3144  014F  1703               	bsf	3,6	;RP1=1, select bank3
  3145  0150  0845               	movf	format_double@m^(0+384),w
  3146  0151  1283               	bcf	3,5	;RP0=0, select bank0
  3147  0152  1303               	bcf	3,6	;RP1=0, select bank0
  3148  0153  00A4               	movwf	___awtofl@c
  3149  0154  160A  118A  2194  120A  118A  	fcall	___awtofl
  3150  0159  0827               	movf	?___awtofl+3,w
  3151  015A  1683               	bsf	3,5	;RP0=1, select bank3
  3152  015B  1703               	bsf	3,6	;RP1=1, select bank3
  3153  015C  00BA               	movwf	(_format_double$1046+3)^(0+384)
  3154  015D  1283               	bcf	3,5	;RP0=0, select bank0
  3155  015E  1303               	bcf	3,6	;RP1=0, select bank0
  3156  015F  0826               	movf	?___awtofl+2,w
  3157  0160  1683               	bsf	3,5	;RP0=1, select bank3
  3158  0161  1703               	bsf	3,6	;RP1=1, select bank3
  3159  0162  00B9               	movwf	(_format_double$1046+2)^(0+384)
  3160  0163  1283               	bcf	3,5	;RP0=0, select bank0
  3161  0164  1303               	bcf	3,6	;RP1=0, select bank0
  3162  0165  0825               	movf	?___awtofl+1,w
  3163  0166  1683               	bsf	3,5	;RP0=1, select bank3
  3164  0167  1703               	bsf	3,6	;RP1=1, select bank3
  3165  0168  00B8               	movwf	(_format_double$1046+1)^(0+384)
  3166  0169  1283               	bcf	3,5	;RP0=0, select bank0
  3167  016A  1303               	bcf	3,6	;RP1=0, select bank0
  3168  016B  0824               	movf	?___awtofl,w
  3169  016C  1683               	bsf	3,5	;RP0=1, select bank3
  3170  016D  1703               	bsf	3,6	;RP1=1, select bank3
  3171  016E  00B7               	movwf	_format_double$1046^(0+384)
  3172                           
  3173                           ;format.c: 80: double weight = pow(10.0l, m);
  3174  016F  3041               	movlw	65
  3175  0170  1303               	bcf	3,6	;RP1=0, select bank1
  3176  0171  00D2               	movwf	(pow@x+3)^(0+128)
  3177  0172  3020               	movlw	32
  3178  0173  00D1               	movwf	(pow@x+2)^(0+128)
  3179  0174  01D0               	clrf	(pow@x+1)^(0+128)
  3180  0175  01CF               	clrf	pow@x^(0+128)
  3181  0176  1703               	bsf	3,6	;RP1=1, select bank3
  3182  0177  083A               	movf	(_format_double$1046+3)^(0+384),w
  3183  0178  1303               	bcf	3,6	;RP1=0, select bank1
  3184  0179  00D6               	movwf	(pow@y+3)^(0+128)
  3185  017A  1703               	bsf	3,6	;RP1=1, select bank3
  3186  017B  0839               	movf	(_format_double$1046+2)^(0+384),w
  3187  017C  1303               	bcf	3,6	;RP1=0, select bank1
  3188  017D  00D5               	movwf	(pow@y+2)^(0+128)
  3189  017E  1703               	bsf	3,6	;RP1=1, select bank3
  3190  017F  0838               	movf	(_format_double$1046+1)^(0+384),w
  3191  0180  1303               	bcf	3,6	;RP1=0, select bank1
  3192  0181  00D4               	movwf	(pow@y+1)^(0+128)
  3193  0182  1703               	bsf	3,6	;RP1=1, select bank3
  3194  0183  0837               	movf	_format_double$1046^(0+384),w
  3195  0184  1303               	bcf	3,6	;RP1=0, select bank1
  3196  0185  00D3               	movwf	pow@y^(0+128)
  3197  0186  239D  120A  118A   	fcall	_pow
  3198  0189  0852               	movf	(?_pow+3)^(0+128),w
  3199  018A  1703               	bsf	3,6	;RP1=1, select bank3
  3200  018B  00C2               	movwf	(format_double@weight+3)^(0+384)
  3201  018C  1303               	bcf	3,6	;RP1=0, select bank1
  3202  018D  0851               	movf	(?_pow+2)^(0+128),w
  3203  018E  1703               	bsf	3,6	;RP1=1, select bank3
  3204  018F  00C1               	movwf	(format_double@weight+2)^(0+384)
  3205  0190  1303               	bcf	3,6	;RP1=0, select bank1
  3206  0191  0850               	movf	(?_pow+1)^(0+128),w
  3207  0192  1703               	bsf	3,6	;RP1=1, select bank3
  3208  0193  00C0               	movwf	(format_double@weight+1)^(0+384)
  3209  0194  1303               	bcf	3,6	;RP1=0, select bank1
  3210  0195  084F               	movf	?_pow^(0+128),w
  3211  0196  1703               	bsf	3,6	;RP1=1, select bank3
  3212  0197  00BF               	movwf	format_double@weight^(0+384)
  3213                           
  3214                           ;format.c: 81: digit = (short)floor(num / weight);
  3215  0198  0836               	movf	(format_double@num+3)^(0+384),w
  3216  0199  1283               	bcf	3,5	;RP0=0, select bank0
  3217  019A  1303               	bcf	3,6	;RP1=0, select bank0
  3218  019B  00AB               	movwf	___fldiv@f1+3
  3219  019C  1683               	bsf	3,5	;RP0=1, select bank3
  3220  019D  1703               	bsf	3,6	;RP1=1, select bank3
  3221  019E  0835               	movf	(format_double@num+2)^(0+384),w
  3222  019F  1283               	bcf	3,5	;RP0=0, select bank0
  3223  01A0  1303               	bcf	3,6	;RP1=0, select bank0
  3224  01A1  00AA               	movwf	___fldiv@f1+2
  3225  01A2  1683               	bsf	3,5	;RP0=1, select bank3
  3226  01A3  1703               	bsf	3,6	;RP1=1, select bank3
  3227  01A4  0834               	movf	(format_double@num+1)^(0+384),w
  3228  01A5  1283               	bcf	3,5	;RP0=0, select bank0
  3229  01A6  1303               	bcf	3,6	;RP1=0, select bank0
  3230  01A7  00A9               	movwf	___fldiv@f1+1
  3231  01A8  1683               	bsf	3,5	;RP0=1, select bank3
  3232  01A9  1703               	bsf	3,6	;RP1=1, select bank3
  3233  01AA  0833               	movf	format_double@num^(0+384),w
  3234  01AB  1283               	bcf	3,5	;RP0=0, select bank0
  3235  01AC  1303               	bcf	3,6	;RP1=0, select bank0
  3236  01AD  00A8               	movwf	___fldiv@f1
  3237  01AE  1683               	bsf	3,5	;RP0=1, select bank3
  3238  01AF  1703               	bsf	3,6	;RP1=1, select bank3
  3239  01B0  0842               	movf	(format_double@weight+3)^(0+384),w
  3240  01B1  1283               	bcf	3,5	;RP0=0, select bank0
  3241  01B2  1303               	bcf	3,6	;RP1=0, select bank0
  3242  01B3  00A7               	movwf	___fldiv@f2+3
  3243  01B4  1683               	bsf	3,5	;RP0=1, select bank3
  3244  01B5  1703               	bsf	3,6	;RP1=1, select bank3
  3245  01B6  0841               	movf	(format_double@weight+2)^(0+384),w
  3246  01B7  1283               	bcf	3,5	;RP0=0, select bank0
  3247  01B8  1303               	bcf	3,6	;RP1=0, select bank0
  3248  01B9  00A6               	movwf	___fldiv@f2+2
  3249  01BA  1683               	bsf	3,5	;RP0=1, select bank3
  3250  01BB  1703               	bsf	3,6	;RP1=1, select bank3
  3251  01BC  0840               	movf	(format_double@weight+1)^(0+384),w
  3252  01BD  1283               	bcf	3,5	;RP0=0, select bank0
  3253  01BE  1303               	bcf	3,6	;RP1=0, select bank0
  3254  01BF  00A5               	movwf	___fldiv@f2+1
  3255  01C0  1683               	bsf	3,5	;RP0=1, select bank3
  3256  01C1  1703               	bsf	3,6	;RP1=1, select bank3
  3257  01C2  083F               	movf	format_double@weight^(0+384),w
  3258  01C3  1283               	bcf	3,5	;RP0=0, select bank0
  3259  01C4  1303               	bcf	3,6	;RP1=0, select bank0
  3260  01C5  00A4               	movwf	___fldiv@f2
  3261  01C6  160A  118A  24CF  120A  118A  	fcall	___fldiv
  3262  01CB  0827               	movf	?___fldiv+3,w
  3263  01CC  1683               	bsf	3,5	;RP0=1, select bank1
  3264  01CD  00B9               	movwf	(floor@x+3)^(0+128)
  3265  01CE  1283               	bcf	3,5	;RP0=0, select bank0
  3266  01CF  0826               	movf	?___fldiv+2,w
  3267  01D0  1683               	bsf	3,5	;RP0=1, select bank1
  3268  01D1  00B8               	movwf	(floor@x+2)^(0+128)
  3269  01D2  1283               	bcf	3,5	;RP0=0, select bank0
  3270  01D3  0825               	movf	?___fldiv+1,w
  3271  01D4  1683               	bsf	3,5	;RP0=1, select bank1
  3272  01D5  00B7               	movwf	(floor@x+1)^(0+128)
  3273  01D6  1283               	bcf	3,5	;RP0=0, select bank0
  3274  01D7  0824               	movf	?___fldiv,w
  3275  01D8  1683               	bsf	3,5	;RP0=1, select bank1
  3276  01D9  00B6               	movwf	floor@x^(0+128)
  3277  01DA  160A  118A  21B1  120A  118A  	fcall	_floor
  3278  01DF  0839               	movf	(?_floor+3)^(0+128),w
  3279  01E0  1703               	bsf	3,6	;RP1=1, select bank3
  3280  01E1  00BE               	movwf	(_format_double$1047+3)^(0+384)
  3281  01E2  1303               	bcf	3,6	;RP1=0, select bank1
  3282  01E3  0838               	movf	(?_floor+2)^(0+128),w
  3283  01E4  1703               	bsf	3,6	;RP1=1, select bank3
  3284  01E5  00BD               	movwf	(_format_double$1047+2)^(0+384)
  3285  01E6  1303               	bcf	3,6	;RP1=0, select bank1
  3286  01E7  0837               	movf	(?_floor+1)^(0+128),w
  3287  01E8  1703               	bsf	3,6	;RP1=1, select bank3
  3288  01E9  00BC               	movwf	(_format_double$1047+1)^(0+384)
  3289  01EA  1303               	bcf	3,6	;RP1=0, select bank1
  3290  01EB  0836               	movf	?_floor^(0+128),w
  3291  01EC  1703               	bsf	3,6	;RP1=1, select bank3
  3292  01ED  00BB               	movwf	_format_double$1047^(0+384)
  3293                           
  3294                           ;format.c: 81: digit = (short)floor(num / weight);
  3295  01EE  083E               	movf	(_format_double$1047+3)^(0+384),w
  3296  01EF  1303               	bcf	3,6	;RP1=0, select bank1
  3297  01F0  00AB               	movwf	(___fltol@f1+3)^(0+128)
  3298  01F1  1703               	bsf	3,6	;RP1=1, select bank3
  3299  01F2  083D               	movf	(_format_double$1047+2)^(0+384),w
  3300  01F3  1303               	bcf	3,6	;RP1=0, select bank1
  3301  01F4  00AA               	movwf	(___fltol@f1+2)^(0+128)
  3302  01F5  1703               	bsf	3,6	;RP1=1, select bank3
  3303  01F6  083C               	movf	(_format_double$1047+1)^(0+384),w
  3304  01F7  1303               	bcf	3,6	;RP1=0, select bank1
  3305  01F8  00A9               	movwf	(___fltol@f1+1)^(0+128)
  3306  01F9  1703               	bsf	3,6	;RP1=1, select bank3
  3307  01FA  083B               	movf	_format_double$1047^(0+384),w
  3308  01FB  1303               	bcf	3,6	;RP1=0, select bank1
  3309  01FC  00A8               	movwf	___fltol@f1^(0+128)
  3310  01FD  120A  158A  278F  120A  118A  	fcall	___fltol
  3311  0202  0829               	movf	(?___fltol^(0+128)+1),w
  3312  0203  1703               	bsf	3,6	;RP1=1, select bank3
  3313  0204  00C4               	movwf	(format_double@digit+1)^(0+384)
  3314  0205  1303               	bcf	3,6	;RP1=0, select bank1
  3315  0206  0828               	movf	?___fltol^(0+128),w
  3316  0207  1703               	bsf	3,6	;RP1=1, select bank3
  3317  0208  00C3               	movwf	format_double@digit^(0+384)
  3318                           
  3319                           ;format.c: 82: num -= (digit * weight);
  3320  0209  0844               	movf	(format_double@digit+1)^(0+384),w
  3321  020A  1283               	bcf	3,5	;RP0=0, select bank0
  3322  020B  1303               	bcf	3,6	;RP1=0, select bank0
  3323  020C  00A5               	movwf	___awtofl@c+1
  3324  020D  1683               	bsf	3,5	;RP0=1, select bank3
  3325  020E  1703               	bsf	3,6	;RP1=1, select bank3
  3326  020F  0843               	movf	format_double@digit^(0+384),w
  3327  0210  1283               	bcf	3,5	;RP0=0, select bank0
  3328  0211  1303               	bcf	3,6	;RP1=0, select bank0
  3329  0212  00A4               	movwf	___awtofl@c
  3330  0213  160A  118A  2194  120A  118A  	fcall	___awtofl
  3331  0218  0827               	movf	?___awtofl+3,w
  3332  0219  00BE               	movwf	___flmul@f2+3
  3333  021A  0826               	movf	?___awtofl+2,w
  3334  021B  00BD               	movwf	___flmul@f2+2
  3335  021C  0825               	movf	?___awtofl+1,w
  3336  021D  00BC               	movwf	___flmul@f2+1
  3337  021E  0824               	movf	?___awtofl,w
  3338  021F  00BB               	movwf	___flmul@f2
  3339  0220  1683               	bsf	3,5	;RP0=1, select bank3
  3340  0221  1703               	bsf	3,6	;RP1=1, select bank3
  3341  0222  0842               	movf	(format_double@weight+3)^(0+384),w
  3342  0223  1283               	bcf	3,5	;RP0=0, select bank0
  3343  0224  1303               	bcf	3,6	;RP1=0, select bank0
  3344  0225  00BA               	movwf	___flmul@f1+3
  3345  0226  1683               	bsf	3,5	;RP0=1, select bank3
  3346  0227  1703               	bsf	3,6	;RP1=1, select bank3
  3347  0228  0841               	movf	(format_double@weight+2)^(0+384),w
  3348  0229  1283               	bcf	3,5	;RP0=0, select bank0
  3349  022A  1303               	bcf	3,6	;RP1=0, select bank0
  3350  022B  00B9               	movwf	___flmul@f1+2
  3351  022C  1683               	bsf	3,5	;RP0=1, select bank3
  3352  022D  1703               	bsf	3,6	;RP1=1, select bank3
  3353  022E  0840               	movf	(format_double@weight+1)^(0+384),w
  3354  022F  1283               	bcf	3,5	;RP0=0, select bank0
  3355  0230  1303               	bcf	3,6	;RP1=0, select bank0
  3356  0231  00B8               	movwf	___flmul@f1+1
  3357  0232  1683               	bsf	3,5	;RP0=1, select bank3
  3358  0233  1703               	bsf	3,6	;RP1=1, select bank3
  3359  0234  083F               	movf	format_double@weight^(0+384),w
  3360  0235  1283               	bcf	3,5	;RP0=0, select bank0
  3361  0236  1303               	bcf	3,6	;RP1=0, select bank0
  3362  0237  00B7               	movwf	___flmul@f1
  3363  0238  120A  158A  25C7  120A  118A  	fcall	___flmul
  3364  023D  083A               	movf	?___flmul+3,w
  3365  023E  00DC               	movwf	___flsub@f2+3
  3366  023F  0839               	movf	?___flmul+2,w
  3367  0240  00DB               	movwf	___flsub@f2+2
  3368  0241  0838               	movf	?___flmul+1,w
  3369  0242  00DA               	movwf	___flsub@f2+1
  3370  0243  0837               	movf	?___flmul,w
  3371  0244  00D9               	movwf	___flsub@f2
  3372  0245  1683               	bsf	3,5	;RP0=1, select bank3
  3373  0246  1703               	bsf	3,6	;RP1=1, select bank3
  3374  0247  0836               	movf	(format_double@num+3)^(0+384),w
  3375  0248  1283               	bcf	3,5	;RP0=0, select bank0
  3376  0249  1303               	bcf	3,6	;RP1=0, select bank0
  3377  024A  00E0               	movwf	___flsub@f1+3
  3378  024B  1683               	bsf	3,5	;RP0=1, select bank3
  3379  024C  1703               	bsf	3,6	;RP1=1, select bank3
  3380  024D  0835               	movf	(format_double@num+2)^(0+384),w
  3381  024E  1283               	bcf	3,5	;RP0=0, select bank0
  3382  024F  1303               	bcf	3,6	;RP1=0, select bank0
  3383  0250  00DF               	movwf	___flsub@f1+2
  3384  0251  1683               	bsf	3,5	;RP0=1, select bank3
  3385  0252  1703               	bsf	3,6	;RP1=1, select bank3
  3386  0253  0834               	movf	(format_double@num+1)^(0+384),w
  3387  0254  1283               	bcf	3,5	;RP0=0, select bank0
  3388  0255  1303               	bcf	3,6	;RP1=0, select bank0
  3389  0256  00DE               	movwf	___flsub@f1+1
  3390  0257  1683               	bsf	3,5	;RP0=1, select bank3
  3391  0258  1703               	bsf	3,6	;RP1=1, select bank3
  3392  0259  0833               	movf	format_double@num^(0+384),w
  3393  025A  1283               	bcf	3,5	;RP0=0, select bank0
  3394  025B  1303               	bcf	3,6	;RP1=0, select bank0
  3395  025C  00DD               	movwf	___flsub@f1
  3396  025D  160A  118A  2600  120A  118A  	fcall	___flsub
  3397  0262  085C               	movf	?___flsub+3,w
  3398  0263  1683               	bsf	3,5	;RP0=1, select bank3
  3399  0264  1703               	bsf	3,6	;RP1=1, select bank3
  3400  0265  00B6               	movwf	(format_double@num+3)^(0+384)
  3401  0266  1283               	bcf	3,5	;RP0=0, select bank0
  3402  0267  1303               	bcf	3,6	;RP1=0, select bank0
  3403  0268  085B               	movf	?___flsub+2,w
  3404  0269  1683               	bsf	3,5	;RP0=1, select bank3
  3405  026A  1703               	bsf	3,6	;RP1=1, select bank3
  3406  026B  00B5               	movwf	(format_double@num+2)^(0+384)
  3407  026C  1283               	bcf	3,5	;RP0=0, select bank0
  3408  026D  1303               	bcf	3,6	;RP1=0, select bank0
  3409  026E  085A               	movf	?___flsub+1,w
  3410  026F  1683               	bsf	3,5	;RP0=1, select bank3
  3411  0270  1703               	bsf	3,6	;RP1=1, select bank3
  3412  0271  00B4               	movwf	(format_double@num+1)^(0+384)
  3413  0272  1283               	bcf	3,5	;RP0=0, select bank0
  3414  0273  1303               	bcf	3,6	;RP1=0, select bank0
  3415  0274  0859               	movf	?___flsub,w
  3416  0275  1683               	bsf	3,5	;RP0=1, select bank3
  3417  0276  1703               	bsf	3,6	;RP1=1, select bank3
  3418  0277  00B3               	movwf	format_double@num^(0+384)
  3419                           
  3420                           ;format.c: 83: putchar_ptr((char)('0' + digit));
  3421  0278  0843               	movf	format_double@digit^(0+384),w
  3422  0279  3E30               	addlw	48
  3423  027A  00F7               	movwf	format_putchar@c
  3424  027B  087B               	movf	_putchar_ptr,w
  3425  027C  120A  118A  2100  120A  118A  	fcall	fptable
  3426                           
  3427                           ;format.c: 84: if(m == 0)
  3428  0281  1683               	bsf	3,5	;RP0=1, select bank3
  3429  0282  1703               	bsf	3,6	;RP1=1, select bank3
  3430  0283  0845               	movf	format_double@m^(0+384),w
  3431  0284  0446               	iorwf	(format_double@m+1)^(0+384),w
  3432  0285  1D03               	btfss	3,2
  3433  0286  2A8F               	goto	l4137
  3434                           
  3435                           ;format.c: 85: putchar_ptr('.');
  3436  0287  302E               	movlw	46
  3437  0288  00F7               	movwf	format_putchar@c
  3438  0289  087B               	movf	_putchar_ptr,w
  3439  028A  120A  118A  2100  120A  118A  	fcall	fptable
  3440  028F                     l4137:	
  3441                           
  3442                           ;format.c: 86: m--;
  3443  028F  30FF               	movlw	-1
  3444  0290  1683               	bsf	3,5	;RP0=1, select bank3
  3445  0291  1703               	bsf	3,6	;RP1=1, select bank3
  3446  0292  07C5               	addwf	format_double@m^(0+384),f
  3447  0293  1C03               	skipc
  3448  0294  03C6               	decf	(format_double@m+1)^(0+384),f
  3449  0295  2933               	goto	l4139
  3450  0296                     __end_of_format_double:	
  3451  0296                     __ptext24:	
  3452 ;; *************** function _log10 *****************
  3453 ;; Defined at:
  3454 ;;		line 39 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\log.c"
  3455 ;; Parameters:    Size  Location     Type
  3456 ;;  x               4    0[BANK1 ] unsigned long 
  3457 ;; Auto vars:     Size  Location     Type
  3458 ;;		None
  3459 ;; Return value:  Size  Location     Type
  3460 ;;                  4    0[BANK1 ] unsigned long 
  3461 ;; Registers used:
  3462 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3463 ;; Tracked objects:
  3464 ;;		On entry : 300/100
  3465 ;;		On exit  : 300/100
  3466 ;;		Unchanged: 0/0
  3467 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3468 ;;      Params:         0       0       4       0       0
  3469 ;;      Locals:         0       0       4       0       0
  3470 ;;      Temps:          0       0       0       0       0
  3471 ;;      Totals:         0       0       8       0       0
  3472 ;;Total ram usage:        8 bytes
  3473 ;; Hardware stack levels used:    1
  3474 ;; Hardware stack levels required when called:    5
  3475 ;; This function calls:
  3476 ;;		___flmul
  3477 ;;		_log
  3478 ;; This function is called by:
  3479 ;;		_format_double
  3480 ;; This function uses a non-reentrant model
  3481 ;;
  3482                           
  3483                           
  3484                           ;psect for function _log10
  3485  0296                     _log10:	
  3486                           
  3487                           ;incstack = 0
  3488                           ; Regs used in _log10: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3489  0296  0823               	movf	(log10@x+3)^(0+128),w
  3490  0297  1283               	bcf	3,5	;RP0=0, select bank0
  3491  0298  00EC               	movwf	log@x+3
  3492  0299  1683               	bsf	3,5	;RP0=1, select bank1
  3493  029A  0822               	movf	(log10@x+2)^(0+128),w
  3494  029B  1283               	bcf	3,5	;RP0=0, select bank0
  3495  029C  00EB               	movwf	log@x+2
  3496  029D  1683               	bsf	3,5	;RP0=1, select bank1
  3497  029E  0821               	movf	(log10@x+1)^(0+128),w
  3498  029F  1283               	bcf	3,5	;RP0=0, select bank0
  3499  02A0  00EA               	movwf	log@x+1
  3500  02A1  1683               	bsf	3,5	;RP0=1, select bank1
  3501  02A2  0820               	movf	log10@x^(0+128),w
  3502  02A3  1283               	bcf	3,5	;RP0=0, select bank0
  3503  02A4  00E9               	movwf	log@x
  3504  02A5  22E1               	fcall	_log
  3505  02A6  086C               	movf	?_log+3,w
  3506  02A7  1683               	bsf	3,5	;RP0=1, select bank1
  3507  02A8  00A7               	movwf	(_log10$1058+3)^(0+128)
  3508  02A9  1283               	bcf	3,5	;RP0=0, select bank0
  3509  02AA  086B               	movf	?_log+2,w
  3510  02AB  1683               	bsf	3,5	;RP0=1, select bank1
  3511  02AC  00A6               	movwf	(_log10$1058+2)^(0+128)
  3512  02AD  1283               	bcf	3,5	;RP0=0, select bank0
  3513  02AE  086A               	movf	?_log+1,w
  3514  02AF  1683               	bsf	3,5	;RP0=1, select bank1
  3515  02B0  00A5               	movwf	(_log10$1058+1)^(0+128)
  3516  02B1  1283               	bcf	3,5	;RP0=0, select bank0
  3517  02B2  0869               	movf	?_log,w
  3518  02B3  1683               	bsf	3,5	;RP0=1, select bank1
  3519  02B4  00A4               	movwf	_log10$1058^(0+128)
  3520  02B5  303E               	movlw	62
  3521  02B6  1283               	bcf	3,5	;RP0=0, select bank0
  3522  02B7  00BA               	movwf	___flmul@f1+3
  3523  02B8  30DE               	movlw	222
  3524  02B9  00B9               	movwf	___flmul@f1+2
  3525  02BA  305B               	movlw	91
  3526  02BB  00B8               	movwf	___flmul@f1+1
  3527  02BC  30D9               	movlw	217
  3528  02BD  00B7               	movwf	___flmul@f1
  3529  02BE  1683               	bsf	3,5	;RP0=1, select bank1
  3530  02BF  0827               	movf	(_log10$1058+3)^(0+128),w
  3531  02C0  1283               	bcf	3,5	;RP0=0, select bank0
  3532  02C1  00BE               	movwf	___flmul@f2+3
  3533  02C2  1683               	bsf	3,5	;RP0=1, select bank1
  3534  02C3  0826               	movf	(_log10$1058+2)^(0+128),w
  3535  02C4  1283               	bcf	3,5	;RP0=0, select bank0
  3536  02C5  00BD               	movwf	___flmul@f2+2
  3537  02C6  1683               	bsf	3,5	;RP0=1, select bank1
  3538  02C7  0825               	movf	(_log10$1058+1)^(0+128),w
  3539  02C8  1283               	bcf	3,5	;RP0=0, select bank0
  3540  02C9  00BC               	movwf	___flmul@f2+1
  3541  02CA  1683               	bsf	3,5	;RP0=1, select bank1
  3542  02CB  0824               	movf	_log10$1058^(0+128),w
  3543  02CC  1283               	bcf	3,5	;RP0=0, select bank0
  3544  02CD  00BB               	movwf	___flmul@f2
  3545  02CE  120A  158A  25C7   	fcall	___flmul
  3546  02D1  083A               	movf	?___flmul+3,w
  3547  02D2  1683               	bsf	3,5	;RP0=1, select bank1
  3548  02D3  00A3               	movwf	(?_log10+3)^(0+128)
  3549  02D4  1283               	bcf	3,5	;RP0=0, select bank0
  3550  02D5  0839               	movf	?___flmul+2,w
  3551  02D6  1683               	bsf	3,5	;RP0=1, select bank1
  3552  02D7  00A2               	movwf	(?_log10+2)^(0+128)
  3553  02D8  1283               	bcf	3,5	;RP0=0, select bank0
  3554  02D9  0838               	movf	?___flmul+1,w
  3555  02DA  1683               	bsf	3,5	;RP0=1, select bank1
  3556  02DB  00A1               	movwf	(?_log10+1)^(0+128)
  3557  02DC  1283               	bcf	3,5	;RP0=0, select bank0
  3558  02DD  0837               	movf	?___flmul,w
  3559  02DE  1683               	bsf	3,5	;RP0=1, select bank1
  3560  02DF  00A0               	movwf	?_log10^(0+128)
  3561  02E0  0008               	return
  3562  02E1                     __end_of_log10:	
  3563  02E1                     __ptext25:	
  3564 ;; *************** function _log *****************
  3565 ;; Defined at:
  3566 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\log.c"
  3567 ;; Parameters:    Size  Location     Type
  3568 ;;  x               4   73[BANK0 ] unsigned long 
  3569 ;; Auto vars:     Size  Location     Type
  3570 ;;  exponent        2   77[BANK0 ] int 
  3571 ;; Return value:  Size  Location     Type
  3572 ;;                  4   73[BANK0 ] int 
  3573 ;; Registers used:
  3574 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3575 ;; Tracked objects:
  3576 ;;		On entry : 300/0
  3577 ;;		On exit  : 300/0
  3578 ;;		Unchanged: 0/0
  3579 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3580 ;;      Params:         0       4       0       0       0
  3581 ;;      Locals:         0       2       0       0       0
  3582 ;;      Temps:          0       0       0       0       0
  3583 ;;      Totals:         0       6       0       0       0
  3584 ;;Total ram usage:        6 bytes
  3585 ;; Hardware stack levels used:    1
  3586 ;; Hardware stack levels required when called:    4
  3587 ;; This function calls:
  3588 ;;		___awtofl
  3589 ;;		___fladd
  3590 ;;		___flge
  3591 ;;		___flmul
  3592 ;;		_eval_poly
  3593 ;;		_frexp
  3594 ;; This function is called by:
  3595 ;;		_log10
  3596 ;;		_pow
  3597 ;; This function uses a non-reentrant model
  3598 ;;
  3599                           
  3600                           
  3601                           ;psect for function _log
  3602  02E1                     _log:	
  3603                           
  3604                           ;incstack = 0
  3605                           ; Regs used in _log: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3606  02E1  086C               	movf	log@x+3,w
  3607  02E2  00F5               	movwf	___flge@ff1+3
  3608  02E3  086B               	movf	log@x+2,w
  3609  02E4  00F4               	movwf	___flge@ff1+2
  3610  02E5  086A               	movf	log@x+1,w
  3611  02E6  00F3               	movwf	___flge@ff1+1
  3612  02E7  0869               	movf	log@x,w
  3613  02E8  00F2               	movwf	___flge@ff1
  3614  02E9  01F6               	clrf	___flge@ff2
  3615  02EA  01F7               	clrf	___flge@ff2+1
  3616  02EB  01F8               	clrf	___flge@ff2+2
  3617  02EC  01F9               	clrf	___flge@ff2+3
  3618  02ED  120A  158A  265F  120A  118A  	fcall	___flge
  3619  02F2  1803               	btfsc	3,0
  3620  02F3  2AFB               	goto	l3905
  3621  02F4  1283               	bcf	3,5	;RP0=0, select bank0
  3622  02F5  1303               	bcf	3,6	;RP1=0, select bank0
  3623  02F6  01E9               	clrf	?_log
  3624  02F7  01EA               	clrf	?_log+1
  3625  02F8  01EB               	clrf	?_log+2
  3626  02F9  01EC               	clrf	?_log+3
  3627  02FA  0008               	return
  3628  02FB                     l3905:	
  3629  02FB  1283               	bcf	3,5	;RP0=0, select bank0
  3630  02FC  1303               	bcf	3,6	;RP1=0, select bank0
  3631  02FD  086C               	movf	log@x+3,w
  3632  02FE  046B               	iorwf	log@x+2,w
  3633  02FF  046A               	iorwf	log@x+1,w
  3634  0300  0469               	iorwf	log@x,w
  3635  0301  1D03               	skipz
  3636  0302  2B08               	goto	l3909
  3637  0303  01E9               	clrf	?_log
  3638  0304  01EA               	clrf	?_log+1
  3639  0305  01EB               	clrf	?_log+2
  3640  0306  01EC               	clrf	?_log+3
  3641  0307  0008               	return
  3642  0308                     l3909:	
  3643  0308  30BF               	movlw	191
  3644  0309  00CD               	movwf	___fladd@f1+3
  3645  030A  3080               	movlw	128
  3646  030B  00CC               	movwf	___fladd@f1+2
  3647  030C  3040               	movlw	64
  3648  030D  01CB               	clrf	___fladd@f1+1
  3649  030E  01CA               	clrf	___fladd@f1
  3650  030F  00BA               	movwf	___flmul@f1+3
  3651  0310  306D               	movlw	(low (log@exponent| 0))& (0+255)
  3652  0311  01B9               	clrf	___flmul@f1+2
  3653  0312  01B8               	clrf	___flmul@f1+1
  3654  0313  01B7               	clrf	___flmul@f1
  3655  0314  00F6               	movwf	frexp@eptr
  3656  0315  086C               	movf	log@x+3,w
  3657  0316  00F5               	movwf	frexp@value+3
  3658  0317  086B               	movf	log@x+2,w
  3659  0318  00F4               	movwf	frexp@value+2
  3660  0319  086A               	movf	log@x+1,w
  3661  031A  00F3               	movwf	frexp@value+1
  3662  031B  0869               	movf	log@x,w
  3663  031C  00F2               	movwf	frexp@value
  3664  031D  160A  118A  263C  120A  118A  	fcall	_frexp
  3665  0322  0875               	movf	?_frexp+3,w
  3666  0323  1283               	bcf	3,5	;RP0=0, select bank0
  3667  0324  00BE               	movwf	___flmul@f2+3
  3668  0325  0874               	movf	?_frexp+2,w
  3669  0326  00BD               	movwf	___flmul@f2+2
  3670  0327  0873               	movf	?_frexp+1,w
  3671  0328  00BC               	movwf	___flmul@f2+1
  3672  0329  0872               	movf	?_frexp,w
  3673  032A  00BB               	movwf	___flmul@f2
  3674  032B  120A  158A  25C7  120A  118A  	fcall	___flmul
  3675  0330  083A               	movf	?___flmul+3,w
  3676  0331  00D1               	movwf	___fladd@f2+3
  3677  0332  0839               	movf	?___flmul+2,w
  3678  0333  00D0               	movwf	___fladd@f2+2
  3679  0334  0838               	movf	?___flmul+1,w
  3680  0335  00CF               	movwf	___fladd@f2+1
  3681  0336  0837               	movf	?___flmul,w
  3682  0337  00CE               	movwf	___fladd@f2
  3683  0338  120A  158A  209D  120A  118A  	fcall	___fladd
  3684  033D  084D               	movf	?___fladd+3,w
  3685  033E  00EC               	movwf	log@x+3
  3686  033F  084C               	movf	?___fladd+2,w
  3687  0340  00EB               	movwf	log@x+2
  3688  0341  084B               	movf	?___fladd+1,w
  3689  0342  00EA               	movwf	log@x+1
  3690  0343  084A               	movf	?___fladd,w
  3691  0344  00E9               	movwf	log@x
  3692  0345  30FF               	movlw	-1
  3693  0346  07ED               	addwf	log@exponent,f
  3694  0347  1C03               	skipc
  3695  0348  03EE               	decf	log@exponent+1,f
  3696  0349  086C               	movf	log@x+3,w
  3697  034A  00DC               	movwf	eval_poly@x+3
  3698  034B  086B               	movf	log@x+2,w
  3699  034C  00DB               	movwf	eval_poly@x+2
  3700  034D  086A               	movf	log@x+1,w
  3701  034E  00DA               	movwf	eval_poly@x+1
  3702  034F  0869               	movf	log@x,w
  3703  0350  00D9               	movwf	eval_poly@x
  3704  0351  3029               	movlw	(low ((log@coeff-__stringbase)| (0+32768)))& (0+255)
  3705  0352  00DD               	movwf	eval_poly@d
  3706  0353  3008               	movlw	8
  3707  0354  00DE               	movwf	eval_poly@n
  3708  0355  01DF               	clrf	eval_poly@n+1
  3709  0356  120A  158A  2010  120A  118A  	fcall	_eval_poly
  3710  035B  085C               	movf	?_eval_poly+3,w
  3711  035C  00EC               	movwf	log@x+3
  3712  035D  085B               	movf	?_eval_poly+2,w
  3713  035E  00EB               	movwf	log@x+2
  3714  035F  085A               	movf	?_eval_poly+1,w
  3715  0360  00EA               	movwf	log@x+1
  3716  0361  0859               	movf	?_eval_poly,w
  3717  0362  00E9               	movwf	log@x
  3718  0363  086C               	movf	log@x+3,w
  3719  0364  00CD               	movwf	___fladd@f1+3
  3720  0365  086B               	movf	log@x+2,w
  3721  0366  00CC               	movwf	___fladd@f1+2
  3722  0367  086A               	movf	log@x+1,w
  3723  0368  00CB               	movwf	___fladd@f1+1
  3724  0369  0869               	movf	log@x,w
  3725  036A  00CA               	movwf	___fladd@f1
  3726  036B  303F               	movlw	63
  3727  036C  00BA               	movwf	___flmul@f1+3
  3728  036D  3031               	movlw	49
  3729  036E  00B9               	movwf	___flmul@f1+2
  3730  036F  3072               	movlw	114
  3731  0370  00B8               	movwf	___flmul@f1+1
  3732  0371  3018               	movlw	24
  3733  0372  00B7               	movwf	___flmul@f1
  3734  0373  086E               	movf	log@exponent+1,w
  3735  0374  00A5               	movwf	___awtofl@c+1
  3736  0375  086D               	movf	log@exponent,w
  3737  0376  00A4               	movwf	___awtofl@c
  3738  0377  160A  118A  2194  120A  118A  	fcall	___awtofl
  3739  037C  0827               	movf	?___awtofl+3,w
  3740  037D  00BE               	movwf	___flmul@f2+3
  3741  037E  0826               	movf	?___awtofl+2,w
  3742  037F  00BD               	movwf	___flmul@f2+2
  3743  0380  0825               	movf	?___awtofl+1,w
  3744  0381  00BC               	movwf	___flmul@f2+1
  3745  0382  0824               	movf	?___awtofl,w
  3746  0383  00BB               	movwf	___flmul@f2
  3747  0384  120A  158A  25C7  120A  118A  	fcall	___flmul
  3748  0389  083A               	movf	?___flmul+3,w
  3749  038A  00D1               	movwf	___fladd@f2+3
  3750  038B  0839               	movf	?___flmul+2,w
  3751  038C  00D0               	movwf	___fladd@f2+2
  3752  038D  0838               	movf	?___flmul+1,w
  3753  038E  00CF               	movwf	___fladd@f2+1
  3754  038F  0837               	movf	?___flmul,w
  3755  0390  00CE               	movwf	___fladd@f2
  3756  0391  120A  158A  209D   	fcall	___fladd
  3757  0394  084D               	movf	?___fladd+3,w
  3758  0395  00EC               	movwf	?_log+3
  3759  0396  084C               	movf	?___fladd+2,w
  3760  0397  00EB               	movwf	?_log+2
  3761  0398  084B               	movf	?___fladd+1,w
  3762  0399  00EA               	movwf	?_log+1
  3763  039A  084A               	movf	?___fladd,w
  3764  039B  00E9               	movwf	?_log
  3765  039C  0008               	return
  3766  039D                     __end_of_log:	
  3767  039D                     __ptext14:	
  3768 ;; *************** function _pow *****************
  3769 ;; Defined at:
  3770 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\pow.c"
  3771 ;; Parameters:    Size  Location     Type
  3772 ;;  x               4   47[BANK1 ] short 
  3773 ;;  y               4   51[BANK1 ] short 
  3774 ;; Auto vars:     Size  Location     Type
  3775 ;;  yi              4   64[BANK1 ] unsigned long 
  3776 ;;  sign            1   63[BANK1 ] unsigned char 
  3777 ;; Return value:  Size  Location     Type
  3778 ;;                  4   47[BANK1 ] unsigned char 
  3779 ;; Registers used:
  3780 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3781 ;; Tracked objects:
  3782 ;;		On entry : 300/100
  3783 ;;		On exit  : 300/100
  3784 ;;		Unchanged: 0/0
  3785 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3786 ;;      Params:         0       0       8       0       0
  3787 ;;      Locals:         0       0      13       0       0
  3788 ;;      Temps:          0       0       0       0       0
  3789 ;;      Totals:         0       0      21       0       0
  3790 ;;Total ram usage:       21 bytes
  3791 ;; Hardware stack levels used:    1
  3792 ;; Hardware stack levels required when called:    5
  3793 ;; This function calls:
  3794 ;;		___flge
  3795 ;;		___flmul
  3796 ;;		___flneg
  3797 ;;		___fltol
  3798 ;;		___lltofl
  3799 ;;		_exp
  3800 ;;		_log
  3801 ;; This function is called by:
  3802 ;;		_format_double
  3803 ;; This function uses a non-reentrant model
  3804 ;;
  3805                           
  3806                           
  3807                           ;psect for function _pow
  3808  039D                     _pow:	
  3809                           
  3810                           ;incstack = 0
  3811                           ; Regs used in _pow: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3812  039D  01DF               	clrf	pow@sign^(0+128)
  3813  039E  0852               	movf	(pow@x+3)^(0+128),w
  3814  039F  0451               	iorwf	(pow@x+2)^(0+128),w
  3815  03A0  0450               	iorwf	(pow@x+1)^(0+128),w
  3816  03A1  044F               	iorwf	pow@x^(0+128),w
  3817  03A2  1D03               	skipz
  3818  03A3  2BBA               	goto	l3991
  3819  03A4  01F2               	clrf	___flge@ff1
  3820  03A5  01F3               	clrf	___flge@ff1+1
  3821  03A6  01F4               	clrf	___flge@ff1+2
  3822  03A7  01F5               	clrf	___flge@ff1+3
  3823  03A8  0856               	movf	(pow@y+3)^(0+128),w
  3824  03A9  00F9               	movwf	___flge@ff2+3
  3825  03AA  0855               	movf	(pow@y+2)^(0+128),w
  3826  03AB  00F8               	movwf	___flge@ff2+2
  3827  03AC  0854               	movf	(pow@y+1)^(0+128),w
  3828  03AD  00F7               	movwf	___flge@ff2+1
  3829  03AE  0853               	movf	pow@y^(0+128),w
  3830  03AF  00F6               	movwf	___flge@ff2
  3831  03B0  120A  158A  265F   	fcall	___flge
  3832  03B3  1683               	bsf	3,5	;RP0=1, select bank1
  3833  03B4  1303               	bcf	3,6	;RP1=0, select bank1
  3834  03B5  01CF               	clrf	?_pow^(0+128)
  3835  03B6  01D0               	clrf	(?_pow+1)^(0+128)
  3836  03B7  01D1               	clrf	(?_pow+2)^(0+128)
  3837  03B8  01D2               	clrf	(?_pow+3)^(0+128)
  3838  03B9  0008               	return
  3839  03BA                     l3991:	
  3840  03BA  0856               	movf	(pow@y+3)^(0+128),w
  3841  03BB  0455               	iorwf	(pow@y+2)^(0+128),w
  3842  03BC  0454               	iorwf	(pow@y+1)^(0+128),w
  3843  03BD  0453               	iorwf	pow@y^(0+128),w
  3844  03BE  1D03               	skipz
  3845  03BF  2BC8               	goto	l3997
  3846  03C0  303F               	movlw	63
  3847  03C1  00D2               	movwf	(?_pow+3)^(0+128)
  3848  03C2  3080               	movlw	128
  3849  03C3  00D1               	movwf	(?_pow+2)^(0+128)
  3850  03C4  3000               	movlw	0
  3851  03C5  01D0               	clrf	(?_pow+1)^(0+128)
  3852  03C6  01CF               	clrf	?_pow^(0+128)
  3853  03C7  0008               	return
  3854  03C8                     l3997:	
  3855  03C8  0852               	movf	(pow@x+3)^(0+128),w
  3856  03C9  00F5               	movwf	___flge@ff1+3
  3857  03CA  0851               	movf	(pow@x+2)^(0+128),w
  3858  03CB  00F4               	movwf	___flge@ff1+2
  3859  03CC  0850               	movf	(pow@x+1)^(0+128),w
  3860  03CD  00F3               	movwf	___flge@ff1+1
  3861  03CE  084F               	movf	pow@x^(0+128),w
  3862  03CF  00F2               	movwf	___flge@ff1
  3863  03D0  01F6               	clrf	___flge@ff2
  3864  03D1  01F7               	clrf	___flge@ff2+1
  3865  03D2  01F8               	clrf	___flge@ff2+2
  3866  03D3  01F9               	clrf	___flge@ff2+3
  3867  03D4  120A  158A  265F  120A  118A  	fcall	___flge
  3868  03D9  1803               	btfsc	3,0
  3869  03DA  2C3C               	goto	l4009
  3870  03DB  1683               	bsf	3,5	;RP0=1, select bank1
  3871  03DC  1303               	bcf	3,6	;RP1=0, select bank1
  3872  03DD  0856               	movf	(pow@y+3)^(0+128),w
  3873  03DE  00AB               	movwf	(___fltol@f1+3)^(0+128)
  3874  03DF  0855               	movf	(pow@y+2)^(0+128),w
  3875  03E0  00AA               	movwf	(___fltol@f1+2)^(0+128)
  3876  03E1  0854               	movf	(pow@y+1)^(0+128),w
  3877  03E2  00A9               	movwf	(___fltol@f1+1)^(0+128)
  3878  03E3  0853               	movf	pow@y^(0+128),w
  3879  03E4  00A8               	movwf	___fltol@f1^(0+128)
  3880  03E5  120A  158A  278F  120A  118A  	fcall	___fltol
  3881  03EA  082B               	movf	(?___fltol+3)^(0+128),w
  3882  03EB  00E3               	movwf	(pow@yi+3)^(0+128)
  3883  03EC  082A               	movf	(?___fltol+2)^(0+128),w
  3884  03ED  00E2               	movwf	(pow@yi+2)^(0+128)
  3885  03EE  0829               	movf	(?___fltol+1)^(0+128),w
  3886  03EF  00E1               	movwf	(pow@yi+1)^(0+128)
  3887  03F0  0828               	movf	?___fltol^(0+128),w
  3888  03F1  00E0               	movwf	pow@yi^(0+128)
  3889  03F2  0863               	movf	(pow@yi+3)^(0+128),w
  3890  03F3  1283               	bcf	3,5	;RP0=0, select bank0
  3891  03F4  00A7               	movwf	___lltofl@c+3
  3892  03F5  1683               	bsf	3,5	;RP0=1, select bank1
  3893  03F6  0862               	movf	(pow@yi+2)^(0+128),w
  3894  03F7  1283               	bcf	3,5	;RP0=0, select bank0
  3895  03F8  00A6               	movwf	___lltofl@c+2
  3896  03F9  1683               	bsf	3,5	;RP0=1, select bank1
  3897  03FA  0861               	movf	(pow@yi+1)^(0+128),w
  3898  03FB  1283               	bcf	3,5	;RP0=0, select bank0
  3899  03FC  00A5               	movwf	___lltofl@c+1
  3900  03FD  1683               	bsf	3,5	;RP0=1, select bank1
  3901  03FE  0860               	movf	pow@yi^(0+128),w
  3902  03FF  1283               	bcf	3,5	;RP0=0, select bank0
  3903  0400  00A4               	movwf	___lltofl@c
  3904  0401  24BE  120A  118A   	fcall	___lltofl
  3905  0404  1683               	bsf	3,5	;RP0=1, select bank1
  3906  0405  0856               	movf	(pow@y+3)^(0+128),w
  3907  0406  1283               	bcf	3,5	;RP0=0, select bank0
  3908  0407  0627               	xorwf	?___lltofl+3,w
  3909  0408  1D03               	skipz
  3910  0409  2C1A               	goto	u3865
  3911  040A  1683               	bsf	3,5	;RP0=1, select bank1
  3912  040B  0855               	movf	(pow@y+2)^(0+128),w
  3913  040C  1283               	bcf	3,5	;RP0=0, select bank0
  3914  040D  0626               	xorwf	?___lltofl+2,w
  3915  040E  1D03               	skipz
  3916  040F  2C1A               	goto	u3865
  3917  0410  1683               	bsf	3,5	;RP0=1, select bank1
  3918  0411  0854               	movf	(pow@y+1)^(0+128),w
  3919  0412  1283               	bcf	3,5	;RP0=0, select bank0
  3920  0413  0625               	xorwf	?___lltofl+1,w
  3921  0414  1D03               	skipz
  3922  0415  2C1A               	goto	u3865
  3923  0416  1683               	bsf	3,5	;RP0=1, select bank1
  3924  0417  0853               	movf	pow@y^(0+128),w
  3925  0418  1283               	bcf	3,5	;RP0=0, select bank0
  3926  0419  0624               	xorwf	?___lltofl,w
  3927  041A                     u3865:	
  3928  041A  1903               	skipnz
  3929  041B  2C22               	goto	l4003
  3930  041C  1683               	bsf	3,5	;RP0=1, select bank1
  3931  041D  01CF               	clrf	?_pow^(0+128)
  3932  041E  01D0               	clrf	(?_pow+1)^(0+128)
  3933  041F  01D1               	clrf	(?_pow+2)^(0+128)
  3934  0420  01D2               	clrf	(?_pow+3)^(0+128)
  3935  0421  0008               	return
  3936  0422                     l4003:	
  3937  0422  1683               	bsf	3,5	;RP0=1, select bank1
  3938  0423  0860               	movf	pow@yi^(0+128),w
  3939  0424  00DF               	movwf	pow@sign^(0+128)
  3940  0425  3001               	movlw	1
  3941  0426  05DF               	andwf	pow@sign^(0+128),f
  3942  0427  0852               	movf	(pow@x+3)^(0+128),w
  3943  0428  00F5               	movwf	___flneg@f1+3
  3944  0429  0851               	movf	(pow@x+2)^(0+128),w
  3945  042A  00F4               	movwf	___flneg@f1+2
  3946  042B  0850               	movf	(pow@x+1)^(0+128),w
  3947  042C  00F3               	movwf	___flneg@f1+1
  3948  042D  084F               	movf	pow@x^(0+128),w
  3949  042E  00F2               	movwf	___flneg@f1
  3950  042F  160A  118A  26A6  120A  118A  	fcall	___flneg
  3951  0434  0875               	movf	?___flneg+3,w
  3952  0435  00D2               	movwf	(pow@x+3)^(0+128)
  3953  0436  0874               	movf	?___flneg+2,w
  3954  0437  00D1               	movwf	(pow@x+2)^(0+128)
  3955  0438  0873               	movf	?___flneg+1,w
  3956  0439  00D0               	movwf	(pow@x+1)^(0+128)
  3957  043A  0872               	movf	?___flneg,w
  3958  043B  00CF               	movwf	pow@x^(0+128)
  3959  043C                     l4009:	
  3960  043C  1683               	bsf	3,5	;RP0=1, select bank1
  3961  043D  1303               	bcf	3,6	;RP1=0, select bank1
  3962  043E  0852               	movf	(pow@x+3)^(0+128),w
  3963  043F  1283               	bcf	3,5	;RP0=0, select bank0
  3964  0440  00EC               	movwf	log@x+3
  3965  0441  1683               	bsf	3,5	;RP0=1, select bank1
  3966  0442  0851               	movf	(pow@x+2)^(0+128),w
  3967  0443  1283               	bcf	3,5	;RP0=0, select bank0
  3968  0444  00EB               	movwf	log@x+2
  3969  0445  1683               	bsf	3,5	;RP0=1, select bank1
  3970  0446  0850               	movf	(pow@x+1)^(0+128),w
  3971  0447  1283               	bcf	3,5	;RP0=0, select bank0
  3972  0448  00EA               	movwf	log@x+1
  3973  0449  1683               	bsf	3,5	;RP0=1, select bank1
  3974  044A  084F               	movf	pow@x^(0+128),w
  3975  044B  1283               	bcf	3,5	;RP0=0, select bank0
  3976  044C  00E9               	movwf	log@x
  3977  044D  22E1  120A  118A   	fcall	_log
  3978  0450  086C               	movf	?_log+3,w
  3979  0451  1683               	bsf	3,5	;RP0=1, select bank1
  3980  0452  00DA               	movwf	(_pow$1059+3)^(0+128)
  3981  0453  1283               	bcf	3,5	;RP0=0, select bank0
  3982  0454  086B               	movf	?_log+2,w
  3983  0455  1683               	bsf	3,5	;RP0=1, select bank1
  3984  0456  00D9               	movwf	(_pow$1059+2)^(0+128)
  3985  0457  1283               	bcf	3,5	;RP0=0, select bank0
  3986  0458  086A               	movf	?_log+1,w
  3987  0459  1683               	bsf	3,5	;RP0=1, select bank1
  3988  045A  00D8               	movwf	(_pow$1059+1)^(0+128)
  3989  045B  1283               	bcf	3,5	;RP0=0, select bank0
  3990  045C  0869               	movf	?_log,w
  3991  045D  1683               	bsf	3,5	;RP0=1, select bank1
  3992  045E  00D7               	movwf	_pow$1059^(0+128)
  3993  045F  0856               	movf	(pow@y+3)^(0+128),w
  3994  0460  1283               	bcf	3,5	;RP0=0, select bank0
  3995  0461  00BA               	movwf	___flmul@f1+3
  3996  0462  1683               	bsf	3,5	;RP0=1, select bank1
  3997  0463  0855               	movf	(pow@y+2)^(0+128),w
  3998  0464  1283               	bcf	3,5	;RP0=0, select bank0
  3999  0465  00B9               	movwf	___flmul@f1+2
  4000  0466  1683               	bsf	3,5	;RP0=1, select bank1
  4001  0467  0854               	movf	(pow@y+1)^(0+128),w
  4002  0468  1283               	bcf	3,5	;RP0=0, select bank0
  4003  0469  00B8               	movwf	___flmul@f1+1
  4004  046A  1683               	bsf	3,5	;RP0=1, select bank1
  4005  046B  0853               	movf	pow@y^(0+128),w
  4006  046C  1283               	bcf	3,5	;RP0=0, select bank0
  4007  046D  00B7               	movwf	___flmul@f1
  4008  046E  1683               	bsf	3,5	;RP0=1, select bank1
  4009  046F  085A               	movf	(_pow$1059+3)^(0+128),w
  4010  0470  1283               	bcf	3,5	;RP0=0, select bank0
  4011  0471  00BE               	movwf	___flmul@f2+3
  4012  0472  1683               	bsf	3,5	;RP0=1, select bank1
  4013  0473  0859               	movf	(_pow$1059+2)^(0+128),w
  4014  0474  1283               	bcf	3,5	;RP0=0, select bank0
  4015  0475  00BD               	movwf	___flmul@f2+2
  4016  0476  1683               	bsf	3,5	;RP0=1, select bank1
  4017  0477  0858               	movf	(_pow$1059+1)^(0+128),w
  4018  0478  1283               	bcf	3,5	;RP0=0, select bank0
  4019  0479  00BC               	movwf	___flmul@f2+1
  4020  047A  1683               	bsf	3,5	;RP0=1, select bank1
  4021  047B  0857               	movf	_pow$1059^(0+128),w
  4022  047C  1283               	bcf	3,5	;RP0=0, select bank0
  4023  047D  00BB               	movwf	___flmul@f2
  4024  047E  120A  158A  25C7  120A  118A  	fcall	___flmul
  4025  0483  083A               	movf	?___flmul+3,w
  4026  0484  1683               	bsf	3,5	;RP0=1, select bank1
  4027  0485  00DE               	movwf	(_pow$1060+3)^(0+128)
  4028  0486  1283               	bcf	3,5	;RP0=0, select bank0
  4029  0487  0839               	movf	?___flmul+2,w
  4030  0488  1683               	bsf	3,5	;RP0=1, select bank1
  4031  0489  00DD               	movwf	(_pow$1060+2)^(0+128)
  4032  048A  1283               	bcf	3,5	;RP0=0, select bank0
  4033  048B  0838               	movf	?___flmul+1,w
  4034  048C  1683               	bsf	3,5	;RP0=1, select bank1
  4035  048D  00DC               	movwf	(_pow$1060+1)^(0+128)
  4036  048E  1283               	bcf	3,5	;RP0=0, select bank0
  4037  048F  0837               	movf	?___flmul,w
  4038  0490  1683               	bsf	3,5	;RP0=1, select bank1
  4039  0491  00DB               	movwf	_pow$1060^(0+128)
  4040  0492  085E               	movf	(_pow$1060+3)^(0+128),w
  4041  0493  00C3               	movwf	(exp@x+3)^(0+128)
  4042  0494  085D               	movf	(_pow$1060+2)^(0+128),w
  4043  0495  00C2               	movwf	(exp@x+2)^(0+128)
  4044  0496  085C               	movf	(_pow$1060+1)^(0+128),w
  4045  0497  00C1               	movwf	(exp@x+1)^(0+128)
  4046  0498  085B               	movf	_pow$1060^(0+128),w
  4047  0499  00C0               	movwf	exp@x^(0+128)
  4048  049A  160A  118A  2015  120A  118A  	fcall	_exp
  4049  049F  0843               	movf	(?_exp+3)^(0+128),w
  4050  04A0  00D2               	movwf	(pow@x+3)^(0+128)
  4051  04A1  0842               	movf	(?_exp+2)^(0+128),w
  4052  04A2  00D1               	movwf	(pow@x+2)^(0+128)
  4053  04A3  0841               	movf	(?_exp+1)^(0+128),w
  4054  04A4  00D0               	movwf	(pow@x+1)^(0+128)
  4055  04A5  0840               	movf	?_exp^(0+128),w
  4056  04A6  00CF               	movwf	pow@x^(0+128)
  4057  04A7  085F               	movf	pow@sign^(0+128),w
  4058  04A8  1903               	btfsc	3,2
  4059  04A9  0008               	return
  4060  04AA  0852               	movf	(pow@x+3)^(0+128),w
  4061  04AB  00F5               	movwf	___flneg@f1+3
  4062  04AC  0851               	movf	(pow@x+2)^(0+128),w
  4063  04AD  00F4               	movwf	___flneg@f1+2
  4064  04AE  0850               	movf	(pow@x+1)^(0+128),w
  4065  04AF  00F3               	movwf	___flneg@f1+1
  4066  04B0  084F               	movf	pow@x^(0+128),w
  4067  04B1  00F2               	movwf	___flneg@f1
  4068  04B2  160A  118A  26A6   	fcall	___flneg
  4069  04B5  0875               	movf	?___flneg+3,w
  4070  04B6  00D2               	movwf	(?_pow+3)^(0+128)
  4071  04B7  0874               	movf	?___flneg+2,w
  4072  04B8  00D1               	movwf	(?_pow+2)^(0+128)
  4073  04B9  0873               	movf	?___flneg+1,w
  4074  04BA  00D0               	movwf	(?_pow+1)^(0+128)
  4075  04BB  0872               	movf	?___flneg,w
  4076  04BC  00CF               	movwf	?_pow^(0+128)
  4077  04BD  0008               	return
  4078  04BE                     __end_of_pow:	
  4079  04BE                     __ptext23:	
  4080 ;; *************** function ___lltofl *****************
  4081 ;; Defined at:
  4082 ;;		line 30 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lltofl.c"
  4083 ;; Parameters:    Size  Location     Type
  4084 ;;  c               4    4[BANK0 ] unsigned long 
  4085 ;; Auto vars:     Size  Location     Type
  4086 ;;		None
  4087 ;; Return value:  Size  Location     Type
  4088 ;;                  4    4[BANK0 ] unsigned long 
  4089 ;; Registers used:
  4090 ;;		wreg, status,2, status,0, pclath, cstack
  4091 ;; Tracked objects:
  4092 ;;		On entry : 300/0
  4093 ;;		On exit  : 300/0
  4094 ;;		Unchanged: 0/0
  4095 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4096 ;;      Params:         0       4       0       0       0
  4097 ;;      Locals:         0       0       0       0       0
  4098 ;;      Temps:          0       0       0       0       0
  4099 ;;      Totals:         0       4       0       0       0
  4100 ;;Total ram usage:        4 bytes
  4101 ;; Hardware stack levels used:    1
  4102 ;; Hardware stack levels required when called:    2
  4103 ;; This function calls:
  4104 ;;		___flpack
  4105 ;; This function is called by:
  4106 ;;		_pow
  4107 ;; This function uses a non-reentrant model
  4108 ;;
  4109                           
  4110                           
  4111                           ;psect for function ___lltofl
  4112  04BE                     ___lltofl:	
  4113                           
  4114                           ;incstack = 0
  4115                           ; Regs used in ___lltofl: [wreg+status,2+status,0+pclath+cstack]
  4116  04BE  0827               	movf	___lltofl@c+3,w
  4117  04BF  00F5               	movwf	___flpack@arg+3
  4118  04C0  0826               	movf	___lltofl@c+2,w
  4119  04C1  00F4               	movwf	___flpack@arg+2
  4120  04C2  0825               	movf	___lltofl@c+1,w
  4121  04C3  00F3               	movwf	___flpack@arg+1
  4122  04C4  0824               	movf	___lltofl@c,w
  4123  04C5  00F2               	movwf	___flpack@arg
  4124  04C6  3096               	movlw	150
  4125  04C7  00F6               	movwf	___flpack@exp
  4126  04C8  01F7               	clrf	___flpack@sign
  4127  04C9  160A  118A  255B   	fcall	___flpack
  4128  04CC  0875               	movf	?___flpack+3,w
  4129  04CD  00A7               	movwf	?___lltofl+3
  4130  04CE  0874               	movf	?___flpack+2,w
  4131  04CF  00A6               	movwf	?___lltofl+2
  4132  04D0  0873               	movf	?___flpack+1,w
  4133  04D1  00A5               	movwf	?___lltofl+1
  4134  04D2  0872               	movf	?___flpack,w
  4135  04D3  00A4               	movwf	?___lltofl
  4136  04D4  0008               	return
  4137  04D5                     __end_of___lltofl:	
  4138                           
  4139                           	psect	text15
  4140  1015                     __ptext15:	
  4141 ;; *************** function _exp *****************
  4142 ;; Defined at:
  4143 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\exp.c"
  4144 ;; Parameters:    Size  Location     Type
  4145 ;;  x               4   32[BANK1 ] unsigned char 
  4146 ;; Auto vars:     Size  Location     Type
  4147 ;;  exponent        2   44[BANK1 ] int 
  4148 ;;  sign            1   46[BANK1 ] unsigned char 
  4149 ;; Return value:  Size  Location     Type
  4150 ;;                  4   32[BANK1 ] unsigned char 
  4151 ;; Registers used:
  4152 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4153 ;; Tracked objects:
  4154 ;;		On entry : 300/100
  4155 ;;		On exit  : 300/100
  4156 ;;		Unchanged: 0/0
  4157 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4158 ;;      Params:         0       0       4       0       0
  4159 ;;      Locals:         0       0      11       0       0
  4160 ;;      Temps:          0       0       0       0       0
  4161 ;;      Totals:         0       0      15       0       0
  4162 ;;Total ram usage:       15 bytes
  4163 ;; Hardware stack levels used:    1
  4164 ;; Hardware stack levels required when called:    4
  4165 ;; This function calls:
  4166 ;;		___awtofl
  4167 ;;		___fldiv
  4168 ;;		___flge
  4169 ;;		___flmul
  4170 ;;		___flneg
  4171 ;;		___flsub
  4172 ;;		___fltol
  4173 ;;		_eval_poly
  4174 ;;		_floor
  4175 ;;		_ldexp
  4176 ;; This function is called by:
  4177 ;;		_pow
  4178 ;; This function uses a non-reentrant model
  4179 ;;
  4180                           
  4181                           
  4182                           ;psect for function _exp
  4183  1015                     _exp:	
  4184                           
  4185                           ;incstack = 0
  4186                           ; Regs used in _exp: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4187  1015  0843               	movf	(exp@x+3)^(0+128),w
  4188  1016  0442               	iorwf	(exp@x+2)^(0+128),w
  4189  1017  0441               	iorwf	(exp@x+1)^(0+128),w
  4190  1018  0440               	iorwf	exp@x^(0+128),w
  4191  1019  1D03               	skipz
  4192  101A  2823               	goto	l3925
  4193  101B  303F               	movlw	63
  4194  101C  00C3               	movwf	(?_exp+3)^(0+128)
  4195  101D  3080               	movlw	128
  4196  101E  00C2               	movwf	(?_exp+2)^(0+128)
  4197  101F  3000               	movlw	0
  4198  1020  01C1               	clrf	(?_exp+1)^(0+128)
  4199  1021  01C0               	clrf	?_exp^(0+128)
  4200  1022  0008               	return
  4201  1023                     l3925:	
  4202  1023  3044               	movlw	68
  4203  1024  00F5               	movwf	___flge@ff1+3
  4204  1025  3031               	movlw	49
  4205  1026  00F4               	movwf	___flge@ff1+2
  4206  1027  3072               	movlw	114
  4207  1028  00F3               	movwf	___flge@ff1+1
  4208  1029  3018               	movlw	24
  4209  102A  00F2               	movwf	___flge@ff1
  4210  102B  0843               	movf	(exp@x+3)^(0+128),w
  4211  102C  00F9               	movwf	___flge@ff2+3
  4212  102D  0842               	movf	(exp@x+2)^(0+128),w
  4213  102E  00F8               	movwf	___flge@ff2+2
  4214  102F  0841               	movf	(exp@x+1)^(0+128),w
  4215  1030  00F7               	movwf	___flge@ff2+1
  4216  1031  0840               	movf	exp@x^(0+128),w
  4217  1032  00F6               	movwf	___flge@ff2
  4218  1033  120A  158A  265F  160A  118A  	fcall	___flge
  4219  1038  1803               	btfsc	3,0
  4220  1039  2844               	goto	l3935
  4221  103A  307F               	movlw	127
  4222  103B  1683               	bsf	3,5	;RP0=1, select bank1
  4223  103C  1303               	bcf	3,6	;RP1=0, select bank1
  4224  103D  00C3               	movwf	(?_exp+3)^(0+128)
  4225  103E  00C2               	movwf	(?_exp+2)^(0+128)
  4226  103F  30FE               	movlw	254
  4227  1040  00C1               	movwf	(?_exp+1)^(0+128)
  4228  1041  30F7               	movlw	247
  4229  1042  00C0               	movwf	?_exp^(0+128)
  4230  1043  0008               	return
  4231  1044                     l3935:	
  4232  1044  1683               	bsf	3,5	;RP0=1, select bank1
  4233  1045  1303               	bcf	3,6	;RP1=0, select bank1
  4234  1046  0843               	movf	(exp@x+3)^(0+128),w
  4235  1047  00F5               	movwf	___flge@ff1+3
  4236  1048  0842               	movf	(exp@x+2)^(0+128),w
  4237  1049  00F4               	movwf	___flge@ff1+2
  4238  104A  0841               	movf	(exp@x+1)^(0+128),w
  4239  104B  00F3               	movwf	___flge@ff1+1
  4240  104C  0840               	movf	exp@x^(0+128),w
  4241  104D  00F2               	movwf	___flge@ff1
  4242  104E  30C4               	movlw	196
  4243  104F  00F9               	movwf	___flge@ff2+3
  4244  1050  303A               	movlw	58
  4245  1051  00F8               	movwf	___flge@ff2+2
  4246  1052  3048               	movlw	72
  4247  1053  00F7               	movwf	___flge@ff2+1
  4248  1054  3087               	movlw	135
  4249  1055  00F6               	movwf	___flge@ff2
  4250  1056  120A  158A  265F  160A  118A  	fcall	___flge
  4251  105B  1803               	btfsc	3,0
  4252  105C  2864               	goto	l3939
  4253  105D  1683               	bsf	3,5	;RP0=1, select bank1
  4254  105E  1303               	bcf	3,6	;RP1=0, select bank1
  4255  105F  01C0               	clrf	?_exp^(0+128)
  4256  1060  01C1               	clrf	(?_exp+1)^(0+128)
  4257  1061  01C2               	clrf	(?_exp+2)^(0+128)
  4258  1062  01C3               	clrf	(?_exp+3)^(0+128)
  4259  1063  0008               	return
  4260  1064                     l3939:	
  4261  1064  1683               	bsf	3,5	;RP0=1, select bank1
  4262  1065  1303               	bcf	3,6	;RP1=0, select bank1
  4263  1066  0843               	movf	(exp@x+3)^(0+128),w
  4264  1067  00F5               	movwf	___flge@ff1+3
  4265  1068  0842               	movf	(exp@x+2)^(0+128),w
  4266  1069  00F4               	movwf	___flge@ff1+2
  4267  106A  0841               	movf	(exp@x+1)^(0+128),w
  4268  106B  00F3               	movwf	___flge@ff1+1
  4269  106C  0840               	movf	exp@x^(0+128),w
  4270  106D  00F2               	movwf	___flge@ff1
  4271  106E  01F6               	clrf	___flge@ff2
  4272  106F  01F7               	clrf	___flge@ff2+1
  4273  1070  01F8               	clrf	___flge@ff2+2
  4274  1071  01F9               	clrf	___flge@ff2+3
  4275  1072  120A  158A  265F  160A  118A  	fcall	___flge
  4276  1077  1803               	btfsc	3,0
  4277  1078  287B               	goto	u3780
  4278  1079  3001               	movlw	1
  4279  107A  287C               	goto	u3790
  4280  107B                     u3780:	
  4281  107B  3000               	movlw	0
  4282  107C                     u3790:	
  4283  107C  1683               	bsf	3,5	;RP0=1, select bank1
  4284  107D  1303               	bcf	3,6	;RP1=0, select bank1
  4285  107E  00CE               	movwf	exp@sign^(0+128)
  4286  107F  084E               	movf	exp@sign^(0+128),w
  4287  1080  1903               	btfsc	3,2
  4288  1081  2893               	goto	l3945
  4289  1082  0843               	movf	(exp@x+3)^(0+128),w
  4290  1083  00F5               	movwf	___flneg@f1+3
  4291  1084  0842               	movf	(exp@x+2)^(0+128),w
  4292  1085  00F4               	movwf	___flneg@f1+2
  4293  1086  0841               	movf	(exp@x+1)^(0+128),w
  4294  1087  00F3               	movwf	___flneg@f1+1
  4295  1088  0840               	movf	exp@x^(0+128),w
  4296  1089  00F2               	movwf	___flneg@f1
  4297  108A  26A6               	fcall	___flneg
  4298  108B  0875               	movf	?___flneg+3,w
  4299  108C  00C3               	movwf	(exp@x+3)^(0+128)
  4300  108D  0874               	movf	?___flneg+2,w
  4301  108E  00C2               	movwf	(exp@x+2)^(0+128)
  4302  108F  0873               	movf	?___flneg+1,w
  4303  1090  00C1               	movwf	(exp@x+1)^(0+128)
  4304  1091  0872               	movf	?___flneg,w
  4305  1092  00C0               	movwf	exp@x^(0+128)
  4306  1093                     l3945:	
  4307  1093  303F               	movlw	63
  4308  1094  1283               	bcf	3,5	;RP0=0, select bank0
  4309  1095  00BA               	movwf	___flmul@f1+3
  4310  1096  30B8               	movlw	184
  4311  1097  00B9               	movwf	___flmul@f1+2
  4312  1098  30AA               	movlw	170
  4313  1099  00B8               	movwf	___flmul@f1+1
  4314  109A  303B               	movlw	59
  4315  109B  00B7               	movwf	___flmul@f1
  4316  109C  1683               	bsf	3,5	;RP0=1, select bank1
  4317  109D  0843               	movf	(exp@x+3)^(0+128),w
  4318  109E  1283               	bcf	3,5	;RP0=0, select bank0
  4319  109F  00BE               	movwf	___flmul@f2+3
  4320  10A0  1683               	bsf	3,5	;RP0=1, select bank1
  4321  10A1  0842               	movf	(exp@x+2)^(0+128),w
  4322  10A2  1283               	bcf	3,5	;RP0=0, select bank0
  4323  10A3  00BD               	movwf	___flmul@f2+2
  4324  10A4  1683               	bsf	3,5	;RP0=1, select bank1
  4325  10A5  0841               	movf	(exp@x+1)^(0+128),w
  4326  10A6  1283               	bcf	3,5	;RP0=0, select bank0
  4327  10A7  00BC               	movwf	___flmul@f2+1
  4328  10A8  1683               	bsf	3,5	;RP0=1, select bank1
  4329  10A9  0840               	movf	exp@x^(0+128),w
  4330  10AA  1283               	bcf	3,5	;RP0=0, select bank0
  4331  10AB  00BB               	movwf	___flmul@f2
  4332  10AC  120A  158A  25C7  160A  118A  	fcall	___flmul
  4333  10B1  083A               	movf	?___flmul+3,w
  4334  10B2  1683               	bsf	3,5	;RP0=1, select bank1
  4335  10B3  00C3               	movwf	(exp@x+3)^(0+128)
  4336  10B4  1283               	bcf	3,5	;RP0=0, select bank0
  4337  10B5  0839               	movf	?___flmul+2,w
  4338  10B6  1683               	bsf	3,5	;RP0=1, select bank1
  4339  10B7  00C2               	movwf	(exp@x+2)^(0+128)
  4340  10B8  1283               	bcf	3,5	;RP0=0, select bank0
  4341  10B9  0838               	movf	?___flmul+1,w
  4342  10BA  1683               	bsf	3,5	;RP0=1, select bank1
  4343  10BB  00C1               	movwf	(exp@x+1)^(0+128)
  4344  10BC  1283               	bcf	3,5	;RP0=0, select bank0
  4345  10BD  0837               	movf	?___flmul,w
  4346  10BE  1683               	bsf	3,5	;RP0=1, select bank1
  4347  10BF  00C0               	movwf	exp@x^(0+128)
  4348  10C0  0843               	movf	(exp@x+3)^(0+128),w
  4349  10C1  00B9               	movwf	(floor@x+3)^(0+128)
  4350  10C2  0842               	movf	(exp@x+2)^(0+128),w
  4351  10C3  00B8               	movwf	(floor@x+2)^(0+128)
  4352  10C4  0841               	movf	(exp@x+1)^(0+128),w
  4353  10C5  00B7               	movwf	(floor@x+1)^(0+128)
  4354  10C6  0840               	movf	exp@x^(0+128),w
  4355  10C7  00B6               	movwf	floor@x^(0+128)
  4356  10C8  21B1               	fcall	_floor
  4357  10C9  0839               	movf	(?_floor+3)^(0+128),w
  4358  10CA  00C7               	movwf	(_exp$1061+3)^(0+128)
  4359  10CB  0838               	movf	(?_floor+2)^(0+128),w
  4360  10CC  00C6               	movwf	(_exp$1061+2)^(0+128)
  4361  10CD  0837               	movf	(?_floor+1)^(0+128),w
  4362  10CE  00C5               	movwf	(_exp$1061+1)^(0+128)
  4363  10CF  0836               	movf	?_floor^(0+128),w
  4364  10D0  00C4               	movwf	_exp$1061^(0+128)
  4365  10D1  0847               	movf	(_exp$1061+3)^(0+128),w
  4366  10D2  00AB               	movwf	(___fltol@f1+3)^(0+128)
  4367  10D3  0846               	movf	(_exp$1061+2)^(0+128),w
  4368  10D4  00AA               	movwf	(___fltol@f1+2)^(0+128)
  4369  10D5  0845               	movf	(_exp$1061+1)^(0+128),w
  4370  10D6  00A9               	movwf	(___fltol@f1+1)^(0+128)
  4371  10D7  0844               	movf	_exp$1061^(0+128),w
  4372  10D8  00A8               	movwf	___fltol@f1^(0+128)
  4373  10D9  120A  158A  278F  160A  118A  	fcall	___fltol
  4374  10DE  0829               	movf	(?___fltol^(0+128)+1),w
  4375  10DF  00CD               	movwf	(exp@exponent+1)^(0+128)
  4376  10E0  0828               	movf	?___fltol^(0+128),w
  4377  10E1  00CC               	movwf	exp@exponent^(0+128)
  4378  10E2  084D               	movf	(exp@exponent+1)^(0+128),w
  4379  10E3  1283               	bcf	3,5	;RP0=0, select bank0
  4380  10E4  00A5               	movwf	___awtofl@c+1
  4381  10E5  1683               	bsf	3,5	;RP0=1, select bank1
  4382  10E6  084C               	movf	exp@exponent^(0+128),w
  4383  10E7  1283               	bcf	3,5	;RP0=0, select bank0
  4384  10E8  00A4               	movwf	___awtofl@c
  4385  10E9  2194  160A  118A   	fcall	___awtofl
  4386  10EC  0827               	movf	?___awtofl+3,w
  4387  10ED  00DC               	movwf	___flsub@f2+3
  4388  10EE  0826               	movf	?___awtofl+2,w
  4389  10EF  00DB               	movwf	___flsub@f2+2
  4390  10F0  0825               	movf	?___awtofl+1,w
  4391  10F1  00DA               	movwf	___flsub@f2+1
  4392  10F2  0824               	movf	?___awtofl,w
  4393  10F3  00D9               	movwf	___flsub@f2
  4394  10F4  1683               	bsf	3,5	;RP0=1, select bank1
  4395  10F5  0843               	movf	(exp@x+3)^(0+128),w
  4396  10F6  1283               	bcf	3,5	;RP0=0, select bank0
  4397  10F7  00E0               	movwf	___flsub@f1+3
  4398  10F8  1683               	bsf	3,5	;RP0=1, select bank1
  4399  10F9  0842               	movf	(exp@x+2)^(0+128),w
  4400  10FA  1283               	bcf	3,5	;RP0=0, select bank0
  4401  10FB  00DF               	movwf	___flsub@f1+2
  4402  10FC  1683               	bsf	3,5	;RP0=1, select bank1
  4403  10FD  0841               	movf	(exp@x+1)^(0+128),w
  4404  10FE  1283               	bcf	3,5	;RP0=0, select bank0
  4405  10FF  00DE               	movwf	___flsub@f1+1
  4406  1100  1683               	bsf	3,5	;RP0=1, select bank1
  4407  1101  0840               	movf	exp@x^(0+128),w
  4408  1102  1283               	bcf	3,5	;RP0=0, select bank0
  4409  1103  00DD               	movwf	___flsub@f1
  4410  1104  2600               	fcall	___flsub
  4411  1105  085C               	movf	?___flsub+3,w
  4412  1106  1683               	bsf	3,5	;RP0=1, select bank1
  4413  1107  00C3               	movwf	(exp@x+3)^(0+128)
  4414  1108  1283               	bcf	3,5	;RP0=0, select bank0
  4415  1109  085B               	movf	?___flsub+2,w
  4416  110A  1683               	bsf	3,5	;RP0=1, select bank1
  4417  110B  00C2               	movwf	(exp@x+2)^(0+128)
  4418  110C  1283               	bcf	3,5	;RP0=0, select bank0
  4419  110D  085A               	movf	?___flsub+1,w
  4420  110E  1683               	bsf	3,5	;RP0=1, select bank1
  4421  110F  00C1               	movwf	(exp@x+1)^(0+128)
  4422  1110  1283               	bcf	3,5	;RP0=0, select bank0
  4423  1111  0859               	movf	?___flsub,w
  4424  1112  1683               	bsf	3,5	;RP0=1, select bank1
  4425  1113  00C0               	movwf	exp@x^(0+128)
  4426  1114  0843               	movf	(exp@x+3)^(0+128),w
  4427  1115  1283               	bcf	3,5	;RP0=0, select bank0
  4428  1116  00DC               	movwf	eval_poly@x+3
  4429  1117  1683               	bsf	3,5	;RP0=1, select bank1
  4430  1118  0842               	movf	(exp@x+2)^(0+128),w
  4431  1119  1283               	bcf	3,5	;RP0=0, select bank0
  4432  111A  00DB               	movwf	eval_poly@x+2
  4433  111B  1683               	bsf	3,5	;RP0=1, select bank1
  4434  111C  0841               	movf	(exp@x+1)^(0+128),w
  4435  111D  1283               	bcf	3,5	;RP0=0, select bank0
  4436  111E  00DA               	movwf	eval_poly@x+1
  4437  111F  1683               	bsf	3,5	;RP0=1, select bank1
  4438  1120  0840               	movf	exp@x^(0+128),w
  4439  1121  1283               	bcf	3,5	;RP0=0, select bank0
  4440  1122  00D9               	movwf	eval_poly@x
  4441  1123  3001               	movlw	(low ((exp@coeff-__stringbase)| (0+32768)))& (0+255)
  4442  1124  00DD               	movwf	eval_poly@d
  4443  1125  3009               	movlw	9
  4444  1126  00DE               	movwf	eval_poly@n
  4445  1127  01DF               	clrf	eval_poly@n+1
  4446  1128  120A  158A  2010  160A  118A  	fcall	_eval_poly
  4447  112D  085C               	movf	?_eval_poly+3,w
  4448  112E  00EC               	movwf	ldexp@value+3
  4449  112F  085B               	movf	?_eval_poly+2,w
  4450  1130  00EB               	movwf	ldexp@value+2
  4451  1131  085A               	movf	?_eval_poly+1,w
  4452  1132  00EA               	movwf	ldexp@value+1
  4453  1133  0859               	movf	?_eval_poly,w
  4454  1134  00E9               	movwf	ldexp@value
  4455  1135  1683               	bsf	3,5	;RP0=1, select bank1
  4456  1136  084D               	movf	(exp@exponent+1)^(0+128),w
  4457  1137  1283               	bcf	3,5	;RP0=0, select bank0
  4458  1138  00EE               	movwf	ldexp@newexp+1
  4459  1139  1683               	bsf	3,5	;RP0=1, select bank1
  4460  113A  084C               	movf	exp@exponent^(0+128),w
  4461  113B  1283               	bcf	3,5	;RP0=0, select bank0
  4462  113C  00ED               	movwf	ldexp@newexp
  4463  113D  26AF  160A  118A   	fcall	_ldexp
  4464  1140  086C               	movf	?_ldexp+3,w
  4465  1141  1683               	bsf	3,5	;RP0=1, select bank1
  4466  1142  00C3               	movwf	(exp@x+3)^(0+128)
  4467  1143  1283               	bcf	3,5	;RP0=0, select bank0
  4468  1144  086B               	movf	?_ldexp+2,w
  4469  1145  1683               	bsf	3,5	;RP0=1, select bank1
  4470  1146  00C2               	movwf	(exp@x+2)^(0+128)
  4471  1147  1283               	bcf	3,5	;RP0=0, select bank0
  4472  1148  086A               	movf	?_ldexp+1,w
  4473  1149  1683               	bsf	3,5	;RP0=1, select bank1
  4474  114A  00C1               	movwf	(exp@x+1)^(0+128)
  4475  114B  1283               	bcf	3,5	;RP0=0, select bank0
  4476  114C  0869               	movf	?_ldexp,w
  4477  114D  1683               	bsf	3,5	;RP0=1, select bank1
  4478  114E  00C0               	movwf	exp@x^(0+128)
  4479  114F  084E               	movf	exp@sign^(0+128),w
  4480  1150  1903               	btfsc	3,2
  4481  1151  0008               	return
  4482  1152  307F               	movlw	127
  4483  1153  00CB               	movwf	(_exp$786+3)^(0+128)
  4484  1154  00CA               	movwf	(_exp$786+2)^(0+128)
  4485  1155  30FE               	movlw	254
  4486  1156  00C9               	movwf	(_exp$786+1)^(0+128)
  4487  1157  30F7               	movlw	247
  4488  1158  00C8               	movwf	_exp$786^(0+128)
  4489  1159  0843               	movf	(exp@x+3)^(0+128),w
  4490  115A  064B               	xorwf	(_exp$786+3)^(0+128),w
  4491  115B  1D03               	skipz
  4492  115C  2967               	goto	u3825
  4493  115D  0842               	movf	(exp@x+2)^(0+128),w
  4494  115E  064A               	xorwf	(_exp$786+2)^(0+128),w
  4495  115F  1D03               	skipz
  4496  1160  2967               	goto	u3825
  4497  1161  0841               	movf	(exp@x+1)^(0+128),w
  4498  1162  0649               	xorwf	(_exp$786+1)^(0+128),w
  4499  1163  1D03               	skipz
  4500  1164  2967               	goto	u3825
  4501  1165  0840               	movf	exp@x^(0+128),w
  4502  1166  0648               	xorwf	_exp$786^(0+128),w
  4503  1167                     u3825:	
  4504  1167  1D03               	skipz
  4505  1168  296E               	goto	l3965
  4506  1169  01C0               	clrf	?_exp^(0+128)
  4507  116A  01C1               	clrf	(?_exp+1)^(0+128)
  4508  116B  01C2               	clrf	(?_exp+2)^(0+128)
  4509  116C  01C3               	clrf	(?_exp+3)^(0+128)
  4510  116D  0008               	return
  4511  116E                     l3965:	
  4512  116E  0843               	movf	(exp@x+3)^(0+128),w
  4513  116F  1283               	bcf	3,5	;RP0=0, select bank0
  4514  1170  00A7               	movwf	___fldiv@f2+3
  4515  1171  1683               	bsf	3,5	;RP0=1, select bank1
  4516  1172  0842               	movf	(exp@x+2)^(0+128),w
  4517  1173  1283               	bcf	3,5	;RP0=0, select bank0
  4518  1174  00A6               	movwf	___fldiv@f2+2
  4519  1175  1683               	bsf	3,5	;RP0=1, select bank1
  4520  1176  0841               	movf	(exp@x+1)^(0+128),w
  4521  1177  1283               	bcf	3,5	;RP0=0, select bank0
  4522  1178  00A5               	movwf	___fldiv@f2+1
  4523  1179  1683               	bsf	3,5	;RP0=1, select bank1
  4524  117A  0840               	movf	exp@x^(0+128),w
  4525  117B  1283               	bcf	3,5	;RP0=0, select bank0
  4526  117C  00A4               	movwf	___fldiv@f2
  4527  117D  303F               	movlw	63
  4528  117E  00AB               	movwf	___fldiv@f1+3
  4529  117F  3080               	movlw	128
  4530  1180  00AA               	movwf	___fldiv@f1+2
  4531  1181  01A9               	clrf	___fldiv@f1+1
  4532  1182  01A8               	clrf	___fldiv@f1
  4533  1183  24CF               	fcall	___fldiv
  4534  1184  0827               	movf	?___fldiv+3,w
  4535  1185  1683               	bsf	3,5	;RP0=1, select bank1
  4536  1186  00C3               	movwf	(?_exp+3)^(0+128)
  4537  1187  1283               	bcf	3,5	;RP0=0, select bank0
  4538  1188  0826               	movf	?___fldiv+2,w
  4539  1189  1683               	bsf	3,5	;RP0=1, select bank1
  4540  118A  00C2               	movwf	(?_exp+2)^(0+128)
  4541  118B  1283               	bcf	3,5	;RP0=0, select bank0
  4542  118C  0825               	movf	?___fldiv+1,w
  4543  118D  1683               	bsf	3,5	;RP0=1, select bank1
  4544  118E  00C1               	movwf	(?_exp+1)^(0+128)
  4545  118F  1283               	bcf	3,5	;RP0=0, select bank0
  4546  1190  0824               	movf	?___fldiv,w
  4547  1191  1683               	bsf	3,5	;RP0=1, select bank1
  4548  1192  00C0               	movwf	?_exp^(0+128)
  4549  1193  0008               	return
  4550  1194                     __end_of_exp:	
  4551  1194                     __ptext31:	
  4552 ;; *************** function ___awtofl *****************
  4553 ;; Defined at:
  4554 ;;		line 31 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\awtofl.c"
  4555 ;; Parameters:    Size  Location     Type
  4556 ;;  c               2    4[BANK0 ] int 
  4557 ;; Auto vars:     Size  Location     Type
  4558 ;;  f1              4    0        int 
  4559 ;;  sign            1    8[COMMON] unsigned char 
  4560 ;; Return value:  Size  Location     Type
  4561 ;;                  4    4[BANK0 ] unsigned char 
  4562 ;; Registers used:
  4563 ;;		wreg, status,2, status,0, pclath, cstack
  4564 ;; Tracked objects:
  4565 ;;		On entry : 300/0
  4566 ;;		On exit  : 300/0
  4567 ;;		Unchanged: 0/0
  4568 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4569 ;;      Params:         0       4       0       0       0
  4570 ;;      Locals:         1       0       0       0       0
  4571 ;;      Temps:          0       0       0       0       0
  4572 ;;      Totals:         1       4       0       0       0
  4573 ;;Total ram usage:        5 bytes
  4574 ;; Hardware stack levels used:    1
  4575 ;; Hardware stack levels required when called:    2
  4576 ;; This function calls:
  4577 ;;		___flpack
  4578 ;; This function is called by:
  4579 ;;		_format_double
  4580 ;;		_log
  4581 ;;		_exp
  4582 ;; This function uses a non-reentrant model
  4583 ;;
  4584                           
  4585                           
  4586                           ;psect for function ___awtofl
  4587  1194                     ___awtofl:	
  4588                           
  4589                           ;incstack = 0
  4590                           ; Regs used in ___awtofl: [wreg+status,2+status,0+pclath+cstack]
  4591  1194  01F8               	clrf	___awtofl@sign
  4592  1195  1FA5               	btfss	___awtofl@c+1,7
  4593  1196  299D               	goto	l3701
  4594  1197  09A4               	comf	___awtofl@c,f
  4595  1198  09A5               	comf	___awtofl@c+1,f
  4596  1199  0AA4               	incf	___awtofl@c,f
  4597  119A  1903               	skipnz
  4598  119B  0AA5               	incf	___awtofl@c+1,f
  4599  119C  0AF8               	incf	___awtofl@sign,f
  4600  119D                     l3701:	
  4601  119D  0824               	movf	___awtofl@c,w
  4602  119E  00F2               	movwf	___flpack@arg
  4603  119F  0825               	movf	___awtofl@c+1,w
  4604  11A0  00F3               	movwf	___flpack@arg+1
  4605  11A1  3096               	movlw	150
  4606  11A2  01F4               	clrf	___flpack@arg+2
  4607  11A3  01F5               	clrf	___flpack@arg+3
  4608  11A4  00F6               	movwf	___flpack@exp
  4609  11A5  0878               	movf	___awtofl@sign,w
  4610  11A6  00F7               	movwf	___flpack@sign
  4611  11A7  255B               	fcall	___flpack
  4612  11A8  0875               	movf	?___flpack+3,w
  4613  11A9  00A7               	movwf	?___awtofl+3
  4614  11AA  0874               	movf	?___flpack+2,w
  4615  11AB  00A6               	movwf	?___awtofl+2
  4616  11AC  0873               	movf	?___flpack+1,w
  4617  11AD  00A5               	movwf	?___awtofl+1
  4618  11AE  0872               	movf	?___flpack,w
  4619  11AF  00A4               	movwf	?___awtofl
  4620  11B0  0008               	return
  4621  11B1                     __end_of___awtofl:	
  4622  11B1                     __ptext18:	
  4623 ;; *************** function _floor *****************
  4624 ;; Defined at:
  4625 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\floor.c"
  4626 ;; Parameters:    Size  Location     Type
  4627 ;;  x               4   22[BANK1 ] int 
  4628 ;; Auto vars:     Size  Location     Type
  4629 ;;  i               4   26[BANK1 ] int 
  4630 ;;  expon           2   30[BANK1 ] int 
  4631 ;; Return value:  Size  Location     Type
  4632 ;;                  4   22[BANK1 ] int 
  4633 ;; Registers used:
  4634 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4635 ;; Tracked objects:
  4636 ;;		On entry : 300/100
  4637 ;;		On exit  : 300/100
  4638 ;;		Unchanged: 0/0
  4639 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4640 ;;      Params:         0       0       4       0       0
  4641 ;;      Locals:         0       0       6       0       0
  4642 ;;      Temps:          0       0       0       0       0
  4643 ;;      Totals:         0       0      10       0       0
  4644 ;;Total ram usage:       10 bytes
  4645 ;; Hardware stack levels used:    1
  4646 ;; Hardware stack levels required when called:    3
  4647 ;; This function calls:
  4648 ;;		___altofl
  4649 ;;		___fladd
  4650 ;;		___flge
  4651 ;;		___fltol
  4652 ;;		_frexp
  4653 ;; This function is called by:
  4654 ;;		_format_double
  4655 ;;		_exp
  4656 ;; This function uses a non-reentrant model
  4657 ;;
  4658                           
  4659                           
  4660                           ;psect for function _floor
  4661  11B1                     _floor:	
  4662                           
  4663                           ;incstack = 0
  4664                           ; Regs used in _floor: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4665  11B1  0839               	movf	(floor@x+3)^(0+128),w
  4666  11B2  00F5               	movwf	frexp@value+3
  4667  11B3  0838               	movf	(floor@x+2)^(0+128),w
  4668  11B4  00F4               	movwf	frexp@value+2
  4669  11B5  0837               	movf	(floor@x+1)^(0+128),w
  4670  11B6  00F3               	movwf	frexp@value+1
  4671  11B7  0836               	movf	floor@x^(0+128),w
  4672  11B8  00F2               	movwf	frexp@value
  4673  11B9  30BE               	movlw	(low (floor@expon| 0))& (0+255)
  4674  11BA  00F6               	movwf	frexp@eptr
  4675  11BB  263C  160A  118A   	fcall	_frexp
  4676  11BE  1683               	bsf	3,5	;RP0=1, select bank1
  4677  11BF  1FBF               	btfss	(floor@expon+1)^(0+128),7
  4678  11C0  29E5               	goto	l3679
  4679  11C1  0839               	movf	(floor@x+3)^(0+128),w
  4680  11C2  00F5               	movwf	___flge@ff1+3
  4681  11C3  0838               	movf	(floor@x+2)^(0+128),w
  4682  11C4  00F4               	movwf	___flge@ff1+2
  4683  11C5  0837               	movf	(floor@x+1)^(0+128),w
  4684  11C6  00F3               	movwf	___flge@ff1+1
  4685  11C7  0836               	movf	floor@x^(0+128),w
  4686  11C8  00F2               	movwf	___flge@ff1
  4687  11C9  01F6               	clrf	___flge@ff2
  4688  11CA  01F7               	clrf	___flge@ff2+1
  4689  11CB  01F8               	clrf	___flge@ff2+2
  4690  11CC  01F9               	clrf	___flge@ff2+3
  4691  11CD  120A  158A  265F  160A  118A  	fcall	___flge
  4692  11D2  1803               	btfsc	3,0
  4693  11D3  29DE               	goto	l902
  4694  11D4  30BF               	movlw	191
  4695  11D5  1683               	bsf	3,5	;RP0=1, select bank1
  4696  11D6  1303               	bcf	3,6	;RP1=0, select bank1
  4697  11D7  00B9               	movwf	(?_floor+3)^(0+128)
  4698  11D8  3080               	movlw	128
  4699  11D9  00B8               	movwf	(?_floor+2)^(0+128)
  4700  11DA  3000               	movlw	0
  4701  11DB  01B7               	clrf	(?_floor+1)^(0+128)
  4702  11DC  01B6               	clrf	?_floor^(0+128)
  4703  11DD  0008               	return
  4704  11DE                     l902:	
  4705  11DE  1683               	bsf	3,5	;RP0=1, select bank1
  4706  11DF  1303               	bcf	3,6	;RP1=0, select bank1
  4707  11E0  01B6               	clrf	?_floor^(0+128)
  4708  11E1  01B7               	clrf	(?_floor+1)^(0+128)
  4709  11E2  01B8               	clrf	(?_floor+2)^(0+128)
  4710  11E3  01B9               	clrf	(?_floor+3)^(0+128)
  4711  11E4  0008               	return
  4712  11E5                     l3679:	
  4713  11E5  3000               	movlw	0
  4714  11E6  023F               	subwf	(floor@expon+1)^(0+128),w
  4715  11E7  301D               	movlw	29
  4716  11E8  1903               	skipnz
  4717  11E9  023E               	subwf	floor@expon^(0+128),w
  4718  11EA  1803               	btfsc	3,0
  4719  11EB  0008               	return
  4720  11EC  0839               	movf	(floor@x+3)^(0+128),w
  4721  11ED  00AB               	movwf	(___fltol@f1+3)^(0+128)
  4722  11EE  0838               	movf	(floor@x+2)^(0+128),w
  4723  11EF  00AA               	movwf	(___fltol@f1+2)^(0+128)
  4724  11F0  0837               	movf	(floor@x+1)^(0+128),w
  4725  11F1  00A9               	movwf	(___fltol@f1+1)^(0+128)
  4726  11F2  0836               	movf	floor@x^(0+128),w
  4727  11F3  00A8               	movwf	___fltol@f1^(0+128)
  4728  11F4  120A  158A  278F  160A  118A  	fcall	___fltol
  4729  11F9  082B               	movf	(?___fltol+3)^(0+128),w
  4730  11FA  00B5               	movwf	(___altofl@c+3)^(0+128)
  4731  11FB  082A               	movf	(?___fltol+2)^(0+128),w
  4732  11FC  00B4               	movwf	(___altofl@c+2)^(0+128)
  4733  11FD  0829               	movf	(?___fltol+1)^(0+128),w
  4734  11FE  00B3               	movwf	(___altofl@c+1)^(0+128)
  4735  11FF  0828               	movf	?___fltol^(0+128),w
  4736  1200  00B2               	movwf	___altofl@c^(0+128)
  4737  1201  267A               	fcall	___altofl
  4738  1202  0835               	movf	(?___altofl+3)^(0+128),w
  4739  1203  00BD               	movwf	(floor@i+3)^(0+128)
  4740  1204  0834               	movf	(?___altofl+2)^(0+128),w
  4741  1205  00BC               	movwf	(floor@i+2)^(0+128)
  4742  1206  0833               	movf	(?___altofl+1)^(0+128),w
  4743  1207  00BB               	movwf	(floor@i+1)^(0+128)
  4744  1208  0832               	movf	?___altofl^(0+128),w
  4745  1209  00BA               	movwf	floor@i^(0+128)
  4746  120A  0839               	movf	(floor@x+3)^(0+128),w
  4747  120B  00F5               	movwf	___flge@ff1+3
  4748  120C  0838               	movf	(floor@x+2)^(0+128),w
  4749  120D  00F4               	movwf	___flge@ff1+2
  4750  120E  0837               	movf	(floor@x+1)^(0+128),w
  4751  120F  00F3               	movwf	___flge@ff1+1
  4752  1210  0836               	movf	floor@x^(0+128),w
  4753  1211  00F2               	movwf	___flge@ff1
  4754  1212  083D               	movf	(floor@i+3)^(0+128),w
  4755  1213  00F9               	movwf	___flge@ff2+3
  4756  1214  083C               	movf	(floor@i+2)^(0+128),w
  4757  1215  00F8               	movwf	___flge@ff2+2
  4758  1216  083B               	movf	(floor@i+1)^(0+128),w
  4759  1217  00F7               	movwf	___flge@ff2+1
  4760  1218  083A               	movf	floor@i^(0+128),w
  4761  1219  00F6               	movwf	___flge@ff2
  4762  121A  120A  158A  265F  160A  118A  	fcall	___flge
  4763  121F  1803               	btfsc	3,0
  4764  1220  2A4C               	goto	l3689
  4765  1221  30BF               	movlw	191
  4766  1222  1283               	bcf	3,5	;RP0=0, select bank0
  4767  1223  1303               	bcf	3,6	;RP1=0, select bank0
  4768  1224  00CD               	movwf	___fladd@f1+3
  4769  1225  3080               	movlw	128
  4770  1226  00CC               	movwf	___fladd@f1+2
  4771  1227  01CB               	clrf	___fladd@f1+1
  4772  1228  01CA               	clrf	___fladd@f1
  4773  1229  1683               	bsf	3,5	;RP0=1, select bank1
  4774  122A  083D               	movf	(floor@i+3)^(0+128),w
  4775  122B  1283               	bcf	3,5	;RP0=0, select bank0
  4776  122C  00D1               	movwf	___fladd@f2+3
  4777  122D  1683               	bsf	3,5	;RP0=1, select bank1
  4778  122E  083C               	movf	(floor@i+2)^(0+128),w
  4779  122F  1283               	bcf	3,5	;RP0=0, select bank0
  4780  1230  00D0               	movwf	___fladd@f2+2
  4781  1231  1683               	bsf	3,5	;RP0=1, select bank1
  4782  1232  083B               	movf	(floor@i+1)^(0+128),w
  4783  1233  1283               	bcf	3,5	;RP0=0, select bank0
  4784  1234  00CF               	movwf	___fladd@f2+1
  4785  1235  1683               	bsf	3,5	;RP0=1, select bank1
  4786  1236  083A               	movf	floor@i^(0+128),w
  4787  1237  1283               	bcf	3,5	;RP0=0, select bank0
  4788  1238  00CE               	movwf	___fladd@f2
  4789  1239  120A  158A  209D   	fcall	___fladd
  4790  123C  084D               	movf	?___fladd+3,w
  4791  123D  1683               	bsf	3,5	;RP0=1, select bank1
  4792  123E  00B9               	movwf	(?_floor+3)^(0+128)
  4793  123F  1283               	bcf	3,5	;RP0=0, select bank0
  4794  1240  084C               	movf	?___fladd+2,w
  4795  1241  1683               	bsf	3,5	;RP0=1, select bank1
  4796  1242  00B8               	movwf	(?_floor+2)^(0+128)
  4797  1243  1283               	bcf	3,5	;RP0=0, select bank0
  4798  1244  084B               	movf	?___fladd+1,w
  4799  1245  1683               	bsf	3,5	;RP0=1, select bank1
  4800  1246  00B7               	movwf	(?_floor+1)^(0+128)
  4801  1247  1283               	bcf	3,5	;RP0=0, select bank0
  4802  1248  084A               	movf	?___fladd,w
  4803  1249  1683               	bsf	3,5	;RP0=1, select bank1
  4804  124A  00B6               	movwf	?_floor^(0+128)
  4805  124B  0008               	return
  4806  124C                     l3689:	
  4807  124C  1683               	bsf	3,5	;RP0=1, select bank1
  4808  124D  1303               	bcf	3,6	;RP1=0, select bank1
  4809  124E  083D               	movf	(floor@i+3)^(0+128),w
  4810  124F  00B9               	movwf	(?_floor+3)^(0+128)
  4811  1250  083C               	movf	(floor@i+2)^(0+128),w
  4812  1251  00B8               	movwf	(?_floor+2)^(0+128)
  4813  1252  083B               	movf	(floor@i+1)^(0+128),w
  4814  1253  00B7               	movwf	(?_floor+1)^(0+128)
  4815  1254  083A               	movf	floor@i^(0+128),w
  4816  1255  00B6               	movwf	?_floor^(0+128)
  4817  1256  0008               	return
  4818  1257                     __end_of_floor:	
  4819  1257                     __ptext6:	
  4820 ;; *************** function _measure_capacitance *****************
  4821 ;; Defined at:
  4822 ;;		line 113 in file "../../../lib/../src/measure.c"
  4823 ;; Parameters:    Size  Location     Type
  4824 ;;		None
  4825 ;; Auto vars:     Size  Location     Type
  4826 ;;  Cin             4   33[BANK1 ] unsigned char 
  4827 ;;  var             2   31[BANK1 ] unsigned short 
  4828 ;;  unit            1   30[BANK1 ] unsigned char 
  4829 ;; Return value:  Size  Location     Type
  4830 ;;		None               void
  4831 ;; Registers used:
  4832 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4833 ;; Tracked objects:
  4834 ;;		On entry : 300/0
  4835 ;;		On exit  : 0/0
  4836 ;;		Unchanged: 0/0
  4837 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4838 ;;      Params:         0       0       0       0       0
  4839 ;;      Locals:         0       0      19       0       0
  4840 ;;      Temps:          0       0       0       0       0
  4841 ;;      Totals:         0       0      19       0       0
  4842 ;;Total ram usage:       19 bytes
  4843 ;; Hardware stack levels used:    1
  4844 ;; Hardware stack levels required when called:    7
  4845 ;; This function calls:
  4846 ;;		___fldiv
  4847 ;;		___flge
  4848 ;;		___flmul
  4849 ;;		___flsub
  4850 ;;		___fltol
  4851 ;;		___lwtofl
  4852 ;;		_lcd_gotoxy
  4853 ;;		_measure_freq
  4854 ;;		_print_reading
  4855 ;;		_print_unit
  4856 ;;		_put_str
  4857 ;; This function is called by:
  4858 ;;		_main
  4859 ;; This function uses a non-reentrant model
  4860 ;;
  4861                           
  4862                           
  4863                           ;psect for function _measure_capacitance
  4864  1257                     _measure_capacitance:	
  4865                           
  4866                           ;incstack = 0
  4867                           ; Regs used in _measure_capacitance: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack
      +                          ]
  4868  1257  3000               	movlw	0
  4869                           
  4870                           ;measure.c: 114: unsigned char unit;
  4871                           ;measure.c: 115: unsigned short int var;
  4872                           ;measure.c: 117: double Cin;
  4873                           ;measure.c: 121: lcd_gotoxy(0, 0);
  4874  1258  01F7               	clrf	lcd_gotoxy@row
  4875  1259  25AA  160A  118A   	fcall	_lcd_gotoxy
  4876                           
  4877                           ;measure.c: 122: put_str("Capacity ");
  4878  125C  3075               	movlw	(low ((STR_24-__stringbase)| (0+32768)))& (0+255)
  4879  125D  25DB               	fcall	_put_str
  4880                           
  4881                           ;measure.c: 124: var = measure_freq();
  4882  125E  120A  158A  26AF  160A  118A  	fcall	_measure_freq
  4883  1263  084A               	movf	?_measure_freq+1,w
  4884  1264  1683               	bsf	3,5	;RP0=1, select bank1
  4885  1265  00C0               	movwf	(measure_capacitance@var+1)^(0+128)
  4886  1266  1283               	bcf	3,5	;RP0=0, select bank0
  4887  1267  0849               	movf	?_measure_freq,w
  4888  1268  1683               	bsf	3,5	;RP0=1, select bank1
  4889  1269  00BF               	movwf	measure_capacitance@var^(0+128)
  4890                           
  4891                           ;measure.c: 126: F3 = (double)var;
  4892  126A  0840               	movf	(measure_capacitance@var+1)^(0+128),w
  4893  126B  1283               	bcf	3,5	;RP0=0, select bank0
  4894  126C  00D0               	movwf	___lwtofl@c+1
  4895  126D  1683               	bsf	3,5	;RP0=1, select bank1
  4896  126E  083F               	movf	measure_capacitance@var^(0+128),w
  4897  126F  1283               	bcf	3,5	;RP0=0, select bank0
  4898  1270  00CF               	movwf	___lwtofl@c
  4899  1271  2548               	fcall	___lwtofl
  4900  1272  0852               	movf	?___lwtofl+3,w
  4901  1273  1683               	bsf	3,5	;RP0=1, select bank1
  4902  1274  00EB               	movwf	(_F3+3)^(0+128)
  4903  1275  1283               	bcf	3,5	;RP0=0, select bank0
  4904  1276  0851               	movf	?___lwtofl+2,w
  4905  1277  1683               	bsf	3,5	;RP0=1, select bank1
  4906  1278  00EA               	movwf	(_F3+2)^(0+128)
  4907  1279  1283               	bcf	3,5	;RP0=0, select bank0
  4908  127A  0850               	movf	?___lwtofl+1,w
  4909  127B  1683               	bsf	3,5	;RP0=1, select bank1
  4910  127C  00E9               	movwf	(_F3+1)^(0+128)
  4911  127D  1283               	bcf	3,5	;RP0=0, select bank0
  4912  127E  084F               	movf	?___lwtofl,w
  4913  127F  1683               	bsf	3,5	;RP0=1, select bank1
  4914  1280  00E8               	movwf	_F3^(0+128)
  4915                           
  4916                           ;measure.c: 149: putchar_ptr = &output_putch;
  4917  1281  3001               	movlw	(low (fp__output_putch-fpbase))& (0+255)
  4918  1282  00FB               	movwf	_putchar_ptr
  4919                           
  4920                           ;measure.c: 151: if(F3 > F1)
  4921  1283  086F               	movf	(_F1+3)^(0+128),w
  4922  1284  00F5               	movwf	___flge@ff1+3
  4923  1285  086E               	movf	(_F1+2)^(0+128),w
  4924  1286  00F4               	movwf	___flge@ff1+2
  4925  1287  086D               	movf	(_F1+1)^(0+128),w
  4926  1288  00F3               	movwf	___flge@ff1+1
  4927  1289  086C               	movf	_F1^(0+128),w
  4928  128A  00F2               	movwf	___flge@ff1
  4929  128B  086B               	movf	(_F3+3)^(0+128),w
  4930  128C  00F9               	movwf	___flge@ff2+3
  4931  128D  086A               	movf	(_F3+2)^(0+128),w
  4932  128E  00F8               	movwf	___flge@ff2+2
  4933  128F  0869               	movf	(_F3+1)^(0+128),w
  4934  1290  00F7               	movwf	___flge@ff2+1
  4935  1291  0868               	movf	_F3^(0+128),w
  4936  1292  00F6               	movwf	___flge@ff2
  4937  1293  120A  158A  265F  160A  118A  	fcall	___flge
  4938  1298  1803               	btfsc	3,0
  4939  1299  2AA4               	goto	l4245
  4940                           
  4941                           ;measure.c: 152: F3 = F1;
  4942  129A  1683               	bsf	3,5	;RP0=1, select bank1
  4943  129B  1303               	bcf	3,6	;RP1=0, select bank1
  4944  129C  086F               	movf	(_F1+3)^(0+128),w
  4945  129D  00EB               	movwf	(_F3+3)^(0+128)
  4946  129E  086E               	movf	(_F1+2)^(0+128),w
  4947  129F  00EA               	movwf	(_F3+2)^(0+128)
  4948  12A0  086D               	movf	(_F1+1)^(0+128),w
  4949  12A1  00E9               	movwf	(_F3+1)^(0+128)
  4950  12A2  086C               	movf	_F1^(0+128),w
  4951  12A3  00E8               	movwf	_F3^(0+128)
  4952  12A4                     l4245:	
  4953                           
  4954                           ;measure.c: 154: Cin = F2 * F2 * (F1 * F1 - F3 * F3) * CCal;
  4955  12A4  1683               	bsf	3,5	;RP0=1, select bank1
  4956  12A5  1303               	bcf	3,6	;RP1=0, select bank1
  4957  12A6  086B               	movf	(_F3+3)^(0+128),w
  4958  12A7  1283               	bcf	3,5	;RP0=0, select bank0
  4959  12A8  00BA               	movwf	___flmul@f1+3
  4960  12A9  1683               	bsf	3,5	;RP0=1, select bank1
  4961  12AA  086A               	movf	(_F3+2)^(0+128),w
  4962  12AB  1283               	bcf	3,5	;RP0=0, select bank0
  4963  12AC  00B9               	movwf	___flmul@f1+2
  4964  12AD  1683               	bsf	3,5	;RP0=1, select bank1
  4965  12AE  0869               	movf	(_F3+1)^(0+128),w
  4966  12AF  1283               	bcf	3,5	;RP0=0, select bank0
  4967  12B0  00B8               	movwf	___flmul@f1+1
  4968  12B1  1683               	bsf	3,5	;RP0=1, select bank1
  4969  12B2  0868               	movf	_F3^(0+128),w
  4970  12B3  1283               	bcf	3,5	;RP0=0, select bank0
  4971  12B4  00B7               	movwf	___flmul@f1
  4972  12B5  1683               	bsf	3,5	;RP0=1, select bank1
  4973  12B6  086B               	movf	(_F3+3)^(0+128),w
  4974  12B7  1283               	bcf	3,5	;RP0=0, select bank0
  4975  12B8  00BE               	movwf	___flmul@f2+3
  4976  12B9  1683               	bsf	3,5	;RP0=1, select bank1
  4977  12BA  086A               	movf	(_F3+2)^(0+128),w
  4978  12BB  1283               	bcf	3,5	;RP0=0, select bank0
  4979  12BC  00BD               	movwf	___flmul@f2+2
  4980  12BD  1683               	bsf	3,5	;RP0=1, select bank1
  4981  12BE  0869               	movf	(_F3+1)^(0+128),w
  4982  12BF  1283               	bcf	3,5	;RP0=0, select bank0
  4983  12C0  00BC               	movwf	___flmul@f2+1
  4984  12C1  1683               	bsf	3,5	;RP0=1, select bank1
  4985  12C2  0868               	movf	_F3^(0+128),w
  4986  12C3  1283               	bcf	3,5	;RP0=0, select bank0
  4987  12C4  00BB               	movwf	___flmul@f2
  4988  12C5  120A  158A  25C7  160A  118A  	fcall	___flmul
  4989  12CA  083A               	movf	?___flmul+3,w
  4990  12CB  00DC               	movwf	___flsub@f2+3
  4991  12CC  0839               	movf	?___flmul+2,w
  4992  12CD  00DB               	movwf	___flsub@f2+2
  4993  12CE  0838               	movf	?___flmul+1,w
  4994  12CF  00DA               	movwf	___flsub@f2+1
  4995  12D0  0837               	movf	?___flmul,w
  4996  12D1  00D9               	movwf	___flsub@f2
  4997  12D2  1683               	bsf	3,5	;RP0=1, select bank1
  4998  12D3  086F               	movf	(_F1+3)^(0+128),w
  4999  12D4  1283               	bcf	3,5	;RP0=0, select bank0
  5000  12D5  00BA               	movwf	___flmul@f1+3
  5001  12D6  1683               	bsf	3,5	;RP0=1, select bank1
  5002  12D7  086E               	movf	(_F1+2)^(0+128),w
  5003  12D8  1283               	bcf	3,5	;RP0=0, select bank0
  5004  12D9  00B9               	movwf	___flmul@f1+2
  5005  12DA  1683               	bsf	3,5	;RP0=1, select bank1
  5006  12DB  086D               	movf	(_F1+1)^(0+128),w
  5007  12DC  1283               	bcf	3,5	;RP0=0, select bank0
  5008  12DD  00B8               	movwf	___flmul@f1+1
  5009  12DE  1683               	bsf	3,5	;RP0=1, select bank1
  5010  12DF  086C               	movf	_F1^(0+128),w
  5011  12E0  1283               	bcf	3,5	;RP0=0, select bank0
  5012  12E1  00B7               	movwf	___flmul@f1
  5013  12E2  1683               	bsf	3,5	;RP0=1, select bank1
  5014  12E3  086F               	movf	(_F1+3)^(0+128),w
  5015  12E4  1283               	bcf	3,5	;RP0=0, select bank0
  5016  12E5  00BE               	movwf	___flmul@f2+3
  5017  12E6  1683               	bsf	3,5	;RP0=1, select bank1
  5018  12E7  086E               	movf	(_F1+2)^(0+128),w
  5019  12E8  1283               	bcf	3,5	;RP0=0, select bank0
  5020  12E9  00BD               	movwf	___flmul@f2+2
  5021  12EA  1683               	bsf	3,5	;RP0=1, select bank1
  5022  12EB  086D               	movf	(_F1+1)^(0+128),w
  5023  12EC  1283               	bcf	3,5	;RP0=0, select bank0
  5024  12ED  00BC               	movwf	___flmul@f2+1
  5025  12EE  1683               	bsf	3,5	;RP0=1, select bank1
  5026  12EF  086C               	movf	_F1^(0+128),w
  5027  12F0  1283               	bcf	3,5	;RP0=0, select bank0
  5028  12F1  00BB               	movwf	___flmul@f2
  5029  12F2  120A  158A  25C7  160A  118A  	fcall	___flmul
  5030  12F7  083A               	movf	?___flmul+3,w
  5031  12F8  00E0               	movwf	___flsub@f1+3
  5032  12F9  0839               	movf	?___flmul+2,w
  5033  12FA  00DF               	movwf	___flsub@f1+2
  5034  12FB  0838               	movf	?___flmul+1,w
  5035  12FC  00DE               	movwf	___flsub@f1+1
  5036  12FD  0837               	movf	?___flmul,w
  5037  12FE  00DD               	movwf	___flsub@f1
  5038  12FF  2600  160A  118A   	fcall	___flsub
  5039  1302  085C               	movf	?___flsub+3,w
  5040  1303  1683               	bsf	3,5	;RP0=1, select bank1
  5041  1304  00B5               	movwf	(_measure_capacitance$1048+3)^(0+128)
  5042  1305  1283               	bcf	3,5	;RP0=0, select bank0
  5043  1306  085B               	movf	?___flsub+2,w
  5044  1307  1683               	bsf	3,5	;RP0=1, select bank1
  5045  1308  00B4               	movwf	(_measure_capacitance$1048+2)^(0+128)
  5046  1309  1283               	bcf	3,5	;RP0=0, select bank0
  5047  130A  085A               	movf	?___flsub+1,w
  5048  130B  1683               	bsf	3,5	;RP0=1, select bank1
  5049  130C  00B3               	movwf	(_measure_capacitance$1048+1)^(0+128)
  5050  130D  1283               	bcf	3,5	;RP0=0, select bank0
  5051  130E  0859               	movf	?___flsub,w
  5052  130F  1683               	bsf	3,5	;RP0=1, select bank1
  5053  1310  00B2               	movwf	_measure_capacitance$1048^(0+128)
  5054                           
  5055                           ;measure.c: 154: Cin = F2 * F2 * (F1 * F1 - F3 * F3) * CCal;
  5056  1311  0867               	movf	(_F2+3)^(0+128),w
  5057  1312  1283               	bcf	3,5	;RP0=0, select bank0
  5058  1313  00BA               	movwf	___flmul@f1+3
  5059  1314  1683               	bsf	3,5	;RP0=1, select bank1
  5060  1315  0866               	movf	(_F2+2)^(0+128),w
  5061  1316  1283               	bcf	3,5	;RP0=0, select bank0
  5062  1317  00B9               	movwf	___flmul@f1+2
  5063  1318  1683               	bsf	3,5	;RP0=1, select bank1
  5064  1319  0865               	movf	(_F2+1)^(0+128),w
  5065  131A  1283               	bcf	3,5	;RP0=0, select bank0
  5066  131B  00B8               	movwf	___flmul@f1+1
  5067  131C  1683               	bsf	3,5	;RP0=1, select bank1
  5068  131D  0864               	movf	_F2^(0+128),w
  5069  131E  1283               	bcf	3,5	;RP0=0, select bank0
  5070  131F  00B7               	movwf	___flmul@f1
  5071  1320  1683               	bsf	3,5	;RP0=1, select bank1
  5072  1321  0835               	movf	(_measure_capacitance$1048+3)^(0+128),w
  5073  1322  1283               	bcf	3,5	;RP0=0, select bank0
  5074  1323  00BE               	movwf	___flmul@f2+3
  5075  1324  1683               	bsf	3,5	;RP0=1, select bank1
  5076  1325  0834               	movf	(_measure_capacitance$1048+2)^(0+128),w
  5077  1326  1283               	bcf	3,5	;RP0=0, select bank0
  5078  1327  00BD               	movwf	___flmul@f2+2
  5079  1328  1683               	bsf	3,5	;RP0=1, select bank1
  5080  1329  0833               	movf	(_measure_capacitance$1048+1)^(0+128),w
  5081  132A  1283               	bcf	3,5	;RP0=0, select bank0
  5082  132B  00BC               	movwf	___flmul@f2+1
  5083  132C  1683               	bsf	3,5	;RP0=1, select bank1
  5084  132D  0832               	movf	_measure_capacitance$1048^(0+128),w
  5085  132E  1283               	bcf	3,5	;RP0=0, select bank0
  5086  132F  00BB               	movwf	___flmul@f2
  5087  1330  120A  158A  25C7  160A  118A  	fcall	___flmul
  5088  1335  083A               	movf	?___flmul+3,w
  5089  1336  1683               	bsf	3,5	;RP0=1, select bank1
  5090  1337  00B9               	movwf	(_measure_capacitance$1049+3)^(0+128)
  5091  1338  1283               	bcf	3,5	;RP0=0, select bank0
  5092  1339  0839               	movf	?___flmul+2,w
  5093  133A  1683               	bsf	3,5	;RP0=1, select bank1
  5094  133B  00B8               	movwf	(_measure_capacitance$1049+2)^(0+128)
  5095  133C  1283               	bcf	3,5	;RP0=0, select bank0
  5096  133D  0838               	movf	?___flmul+1,w
  5097  133E  1683               	bsf	3,5	;RP0=1, select bank1
  5098  133F  00B7               	movwf	(_measure_capacitance$1049+1)^(0+128)
  5099  1340  1283               	bcf	3,5	;RP0=0, select bank0
  5100  1341  0837               	movf	?___flmul,w
  5101  1342  1683               	bsf	3,5	;RP0=1, select bank1
  5102  1343  00B6               	movwf	_measure_capacitance$1049^(0+128)
  5103                           
  5104                           ;measure.c: 154: Cin = F2 * F2 * (F1 * F1 - F3 * F3) * CCal;
  5105  1344  0867               	movf	(_F2+3)^(0+128),w
  5106  1345  1283               	bcf	3,5	;RP0=0, select bank0
  5107  1346  00BA               	movwf	___flmul@f1+3
  5108  1347  1683               	bsf	3,5	;RP0=1, select bank1
  5109  1348  0866               	movf	(_F2+2)^(0+128),w
  5110  1349  1283               	bcf	3,5	;RP0=0, select bank0
  5111  134A  00B9               	movwf	___flmul@f1+2
  5112  134B  1683               	bsf	3,5	;RP0=1, select bank1
  5113  134C  0865               	movf	(_F2+1)^(0+128),w
  5114  134D  1283               	bcf	3,5	;RP0=0, select bank0
  5115  134E  00B8               	movwf	___flmul@f1+1
  5116  134F  1683               	bsf	3,5	;RP0=1, select bank1
  5117  1350  0864               	movf	_F2^(0+128),w
  5118  1351  1283               	bcf	3,5	;RP0=0, select bank0
  5119  1352  00B7               	movwf	___flmul@f1
  5120  1353  1683               	bsf	3,5	;RP0=1, select bank1
  5121  1354  0839               	movf	(_measure_capacitance$1049+3)^(0+128),w
  5122  1355  1283               	bcf	3,5	;RP0=0, select bank0
  5123  1356  00BE               	movwf	___flmul@f2+3
  5124  1357  1683               	bsf	3,5	;RP0=1, select bank1
  5125  1358  0838               	movf	(_measure_capacitance$1049+2)^(0+128),w
  5126  1359  1283               	bcf	3,5	;RP0=0, select bank0
  5127  135A  00BD               	movwf	___flmul@f2+2
  5128  135B  1683               	bsf	3,5	;RP0=1, select bank1
  5129  135C  0837               	movf	(_measure_capacitance$1049+1)^(0+128),w
  5130  135D  1283               	bcf	3,5	;RP0=0, select bank0
  5131  135E  00BC               	movwf	___flmul@f2+1
  5132  135F  1683               	bsf	3,5	;RP0=1, select bank1
  5133  1360  0836               	movf	_measure_capacitance$1049^(0+128),w
  5134  1361  1283               	bcf	3,5	;RP0=0, select bank0
  5135  1362  00BB               	movwf	___flmul@f2
  5136  1363  120A  158A  25C7  160A  118A  	fcall	___flmul
  5137  1368  083A               	movf	?___flmul+3,w
  5138  1369  1683               	bsf	3,5	;RP0=1, select bank1
  5139  136A  00BD               	movwf	(_measure_capacitance$1050+3)^(0+128)
  5140  136B  1283               	bcf	3,5	;RP0=0, select bank0
  5141  136C  0839               	movf	?___flmul+2,w
  5142  136D  1683               	bsf	3,5	;RP0=1, select bank1
  5143  136E  00BC               	movwf	(_measure_capacitance$1050+2)^(0+128)
  5144  136F  1283               	bcf	3,5	;RP0=0, select bank0
  5145  1370  0838               	movf	?___flmul+1,w
  5146  1371  1683               	bsf	3,5	;RP0=1, select bank1
  5147  1372  00BB               	movwf	(_measure_capacitance$1050+1)^(0+128)
  5148  1373  1283               	bcf	3,5	;RP0=0, select bank0
  5149  1374  0837               	movf	?___flmul,w
  5150  1375  1683               	bsf	3,5	;RP0=1, select bank1
  5151  1376  00BA               	movwf	_measure_capacitance$1050^(0+128)
  5152                           
  5153                           ;measure.c: 154: Cin = F2 * F2 * (F1 * F1 - F3 * F3) * CCal;
  5154  1377  1703               	bsf	3,6	;RP1=1, select bank3
  5155  1378  084A               	movf	(_CCal+3)^(0+384),w
  5156  1379  1283               	bcf	3,5	;RP0=0, select bank0
  5157  137A  1303               	bcf	3,6	;RP1=0, select bank0
  5158  137B  00BA               	movwf	___flmul@f1+3
  5159  137C  1683               	bsf	3,5	;RP0=1, select bank3
  5160  137D  1703               	bsf	3,6	;RP1=1, select bank3
  5161  137E  0849               	movf	(_CCal+2)^(0+384),w
  5162  137F  1283               	bcf	3,5	;RP0=0, select bank0
  5163  1380  1303               	bcf	3,6	;RP1=0, select bank0
  5164  1381  00B9               	movwf	___flmul@f1+2
  5165  1382  1683               	bsf	3,5	;RP0=1, select bank3
  5166  1383  1703               	bsf	3,6	;RP1=1, select bank3
  5167  1384  0848               	movf	(_CCal+1)^(0+384),w
  5168  1385  1283               	bcf	3,5	;RP0=0, select bank0
  5169  1386  1303               	bcf	3,6	;RP1=0, select bank0
  5170  1387  00B8               	movwf	___flmul@f1+1
  5171  1388  1683               	bsf	3,5	;RP0=1, select bank3
  5172  1389  1703               	bsf	3,6	;RP1=1, select bank3
  5173  138A  0847               	movf	_CCal^(0+384),w
  5174  138B  1283               	bcf	3,5	;RP0=0, select bank0
  5175  138C  1303               	bcf	3,6	;RP1=0, select bank0
  5176  138D  00B7               	movwf	___flmul@f1
  5177  138E  1683               	bsf	3,5	;RP0=1, select bank1
  5178  138F  083D               	movf	(_measure_capacitance$1050+3)^(0+128),w
  5179  1390  1283               	bcf	3,5	;RP0=0, select bank0
  5180  1391  00BE               	movwf	___flmul@f2+3
  5181  1392  1683               	bsf	3,5	;RP0=1, select bank1
  5182  1393  083C               	movf	(_measure_capacitance$1050+2)^(0+128),w
  5183  1394  1283               	bcf	3,5	;RP0=0, select bank0
  5184  1395  00BD               	movwf	___flmul@f2+2
  5185  1396  1683               	bsf	3,5	;RP0=1, select bank1
  5186  1397  083B               	movf	(_measure_capacitance$1050+1)^(0+128),w
  5187  1398  1283               	bcf	3,5	;RP0=0, select bank0
  5188  1399  00BC               	movwf	___flmul@f2+1
  5189  139A  1683               	bsf	3,5	;RP0=1, select bank1
  5190  139B  083A               	movf	_measure_capacitance$1050^(0+128),w
  5191  139C  1283               	bcf	3,5	;RP0=0, select bank0
  5192  139D  00BB               	movwf	___flmul@f2
  5193  139E  120A  158A  25C7  160A  118A  	fcall	___flmul
  5194  13A3  083A               	movf	?___flmul+3,w
  5195  13A4  1683               	bsf	3,5	;RP0=1, select bank1
  5196  13A5  00C4               	movwf	(measure_capacitance@Cin+3)^(0+128)
  5197  13A6  1283               	bcf	3,5	;RP0=0, select bank0
  5198  13A7  0839               	movf	?___flmul+2,w
  5199  13A8  1683               	bsf	3,5	;RP0=1, select bank1
  5200  13A9  00C3               	movwf	(measure_capacitance@Cin+2)^(0+128)
  5201  13AA  1283               	bcf	3,5	;RP0=0, select bank0
  5202  13AB  0838               	movf	?___flmul+1,w
  5203  13AC  1683               	bsf	3,5	;RP0=1, select bank1
  5204  13AD  00C2               	movwf	(measure_capacitance@Cin+1)^(0+128)
  5205  13AE  1283               	bcf	3,5	;RP0=0, select bank0
  5206  13AF  0837               	movf	?___flmul,w
  5207  13B0  1683               	bsf	3,5	;RP0=1, select bank1
  5208  13B1  00C1               	movwf	measure_capacitance@Cin^(0+128)
  5209                           
  5210                           ;measure.c: 164: if(Cin > 999) {
  5211  13B2  3044               	movlw	68
  5212  13B3  00F5               	movwf	___flge@ff1+3
  5213  13B4  3079               	movlw	121
  5214  13B5  00F4               	movwf	___flge@ff1+2
  5215  13B6  30C0               	movlw	192
  5216  13B7  00F3               	movwf	___flge@ff1+1
  5217  13B8  01F2               	clrf	___flge@ff1
  5218  13B9  0844               	movf	(measure_capacitance@Cin+3)^(0+128),w
  5219  13BA  00F9               	movwf	___flge@ff2+3
  5220  13BB  0843               	movf	(measure_capacitance@Cin+2)^(0+128),w
  5221  13BC  00F8               	movwf	___flge@ff2+2
  5222  13BD  0842               	movf	(measure_capacitance@Cin+1)^(0+128),w
  5223  13BE  00F7               	movwf	___flge@ff2+1
  5224  13BF  0841               	movf	measure_capacitance@Cin^(0+128),w
  5225  13C0  00F6               	movwf	___flge@ff2
  5226  13C1  120A  158A  265F  160A  118A  	fcall	___flge
  5227  13C6  1803               	btfsc	3,0
  5228  13C7  2C81               	goto	l4271
  5229                           
  5230                           ;measure.c: 165: if(Cin > (999e+03l)) {
  5231  13C8  3049               	movlw	73
  5232  13C9  00F5               	movwf	___flge@ff1+3
  5233  13CA  3073               	movlw	115
  5234  13CB  00F4               	movwf	___flge@ff1+2
  5235  13CC  30E5               	movlw	229
  5236  13CD  00F3               	movwf	___flge@ff1+1
  5237  13CE  3080               	movlw	128
  5238  13CF  00F2               	movwf	___flge@ff1
  5239  13D0  1683               	bsf	3,5	;RP0=1, select bank1
  5240  13D1  1303               	bcf	3,6	;RP1=0, select bank1
  5241  13D2  0844               	movf	(measure_capacitance@Cin+3)^(0+128),w
  5242  13D3  00F9               	movwf	___flge@ff2+3
  5243  13D4  0843               	movf	(measure_capacitance@Cin+2)^(0+128),w
  5244  13D5  00F8               	movwf	___flge@ff2+2
  5245  13D6  0842               	movf	(measure_capacitance@Cin+1)^(0+128),w
  5246  13D7  00F7               	movwf	___flge@ff2+1
  5247  13D8  0841               	movf	measure_capacitance@Cin^(0+128),w
  5248  13D9  00F6               	movwf	___flge@ff2
  5249  13DA  120A  158A  265F  160A  118A  	fcall	___flge
  5250  13DF  1803               	btfsc	3,0
  5251  13E0  2C55               	goto	l4267
  5252                           
  5253                           ;measure.c: 166: if(Cin > (999e+06l)) {
  5254  13E1  304E               	movlw	78
  5255  13E2  00F5               	movwf	___flge@ff1+3
  5256  13E3  306E               	movlw	110
  5257  13E4  00F4               	movwf	___flge@ff1+2
  5258  13E5  302E               	movlw	46
  5259  13E6  00F3               	movwf	___flge@ff1+1
  5260  13E7  301F               	movlw	31
  5261  13E8  00F2               	movwf	___flge@ff1
  5262  13E9  1683               	bsf	3,5	;RP0=1, select bank1
  5263  13EA  1303               	bcf	3,6	;RP1=0, select bank1
  5264  13EB  0844               	movf	(measure_capacitance@Cin+3)^(0+128),w
  5265  13EC  00F9               	movwf	___flge@ff2+3
  5266  13ED  0843               	movf	(measure_capacitance@Cin+2)^(0+128),w
  5267  13EE  00F8               	movwf	___flge@ff2+2
  5268  13EF  0842               	movf	(measure_capacitance@Cin+1)^(0+128),w
  5269  13F0  00F7               	movwf	___flge@ff2+1
  5270  13F1  0841               	movf	measure_capacitance@Cin^(0+128),w
  5271  13F2  00F6               	movwf	___flge@ff2
  5272  13F3  120A  158A  265F  160A  118A  	fcall	___flge
  5273  13F8  1803               	btfsc	3,0
  5274  13F9  2C28               	goto	l4263
  5275                           
  5276                           ;measure.c: 167: Cin = Cin / (1e+09);
  5277  13FA  304E               	movlw	78
  5278  13FB  1283               	bcf	3,5	;RP0=0, select bank0
  5279  13FC  1303               	bcf	3,6	;RP1=0, select bank0
  5280  13FD  00A7               	movwf	___fldiv@f2+3
  5281  13FE  306E               	movlw	110
  5282  13FF  00A6               	movwf	___fldiv@f2+2
  5283  1400  306B               	movlw	107
  5284  1401  00A5               	movwf	___fldiv@f2+1
  5285  1402  3028               	movlw	40
  5286  1403  00A4               	movwf	___fldiv@f2
  5287  1404  1683               	bsf	3,5	;RP0=1, select bank1
  5288  1405  0844               	movf	(measure_capacitance@Cin+3)^(0+128),w
  5289  1406  1283               	bcf	3,5	;RP0=0, select bank0
  5290  1407  00AB               	movwf	___fldiv@f1+3
  5291  1408  1683               	bsf	3,5	;RP0=1, select bank1
  5292  1409  0843               	movf	(measure_capacitance@Cin+2)^(0+128),w
  5293  140A  1283               	bcf	3,5	;RP0=0, select bank0
  5294  140B  00AA               	movwf	___fldiv@f1+2
  5295  140C  1683               	bsf	3,5	;RP0=1, select bank1
  5296  140D  0842               	movf	(measure_capacitance@Cin+1)^(0+128),w
  5297  140E  1283               	bcf	3,5	;RP0=0, select bank0
  5298  140F  00A9               	movwf	___fldiv@f1+1
  5299  1410  1683               	bsf	3,5	;RP0=1, select bank1
  5300  1411  0841               	movf	measure_capacitance@Cin^(0+128),w
  5301  1412  1283               	bcf	3,5	;RP0=0, select bank0
  5302  1413  00A8               	movwf	___fldiv@f1
  5303  1414  24CF  160A  118A   	fcall	___fldiv
  5304  1417  0827               	movf	?___fldiv+3,w
  5305  1418  1683               	bsf	3,5	;RP0=1, select bank1
  5306  1419  00C4               	movwf	(measure_capacitance@Cin+3)^(0+128)
  5307  141A  1283               	bcf	3,5	;RP0=0, select bank0
  5308  141B  0826               	movf	?___fldiv+2,w
  5309  141C  1683               	bsf	3,5	;RP0=1, select bank1
  5310  141D  00C3               	movwf	(measure_capacitance@Cin+2)^(0+128)
  5311  141E  1283               	bcf	3,5	;RP0=0, select bank0
  5312  141F  0825               	movf	?___fldiv+1,w
  5313  1420  1683               	bsf	3,5	;RP0=1, select bank1
  5314  1421  00C2               	movwf	(measure_capacitance@Cin+1)^(0+128)
  5315  1422  1283               	bcf	3,5	;RP0=0, select bank0
  5316  1423  0824               	movf	?___fldiv,w
  5317  1424  1683               	bsf	3,5	;RP0=1, select bank1
  5318  1425  00C1               	movwf	measure_capacitance@Cin^(0+128)
  5319                           
  5320                           ;measure.c: 168: unit = 4;
  5321  1426  3004               	movlw	4
  5322  1427  2C84               	goto	L6
  5323  1428                     l4263:	
  5324                           ;measure.c: 169: } else {
  5325                           
  5326                           
  5327                           ;measure.c: 170: Cin = Cin / (1e+06);
  5328  1428  3049               	movlw	73
  5329  1429  1283               	bcf	3,5	;RP0=0, select bank0
  5330  142A  1303               	bcf	3,6	;RP1=0, select bank0
  5331  142B  00A7               	movwf	___fldiv@f2+3
  5332  142C  3074               	movlw	116
  5333  142D  00A6               	movwf	___fldiv@f2+2
  5334  142E  3024               	movlw	36
  5335  142F  00A5               	movwf	___fldiv@f2+1
  5336  1430  01A4               	clrf	___fldiv@f2
  5337  1431  1683               	bsf	3,5	;RP0=1, select bank1
  5338  1432  0844               	movf	(measure_capacitance@Cin+3)^(0+128),w
  5339  1433  1283               	bcf	3,5	;RP0=0, select bank0
  5340  1434  00AB               	movwf	___fldiv@f1+3
  5341  1435  1683               	bsf	3,5	;RP0=1, select bank1
  5342  1436  0843               	movf	(measure_capacitance@Cin+2)^(0+128),w
  5343  1437  1283               	bcf	3,5	;RP0=0, select bank0
  5344  1438  00AA               	movwf	___fldiv@f1+2
  5345  1439  1683               	bsf	3,5	;RP0=1, select bank1
  5346  143A  0842               	movf	(measure_capacitance@Cin+1)^(0+128),w
  5347  143B  1283               	bcf	3,5	;RP0=0, select bank0
  5348  143C  00A9               	movwf	___fldiv@f1+1
  5349  143D  1683               	bsf	3,5	;RP0=1, select bank1
  5350  143E  0841               	movf	measure_capacitance@Cin^(0+128),w
  5351  143F  1283               	bcf	3,5	;RP0=0, select bank0
  5352  1440  00A8               	movwf	___fldiv@f1
  5353  1441  24CF  160A  118A   	fcall	___fldiv
  5354  1444  0827               	movf	?___fldiv+3,w
  5355  1445  1683               	bsf	3,5	;RP0=1, select bank1
  5356  1446  00C4               	movwf	(measure_capacitance@Cin+3)^(0+128)
  5357  1447  1283               	bcf	3,5	;RP0=0, select bank0
  5358  1448  0826               	movf	?___fldiv+2,w
  5359  1449  1683               	bsf	3,5	;RP0=1, select bank1
  5360  144A  00C3               	movwf	(measure_capacitance@Cin+2)^(0+128)
  5361  144B  1283               	bcf	3,5	;RP0=0, select bank0
  5362  144C  0825               	movf	?___fldiv+1,w
  5363  144D  1683               	bsf	3,5	;RP0=1, select bank1
  5364  144E  00C2               	movwf	(measure_capacitance@Cin+1)^(0+128)
  5365  144F  1283               	bcf	3,5	;RP0=0, select bank0
  5366  1450  0824               	movf	?___fldiv,w
  5367  1451  1683               	bsf	3,5	;RP0=1, select bank1
  5368  1452  00C1               	movwf	measure_capacitance@Cin^(0+128)
  5369                           
  5370                           ;measure.c: 171: unit = 5;
  5371  1453  3005               	movlw	5
  5372  1454  2C84               	goto	L6
  5373  1455                     l4267:	
  5374                           
  5375                           ;measure.c: 174: Cin = Cin / 1e+03;
  5376  1455  3044               	movlw	68
  5377  1456  1283               	bcf	3,5	;RP0=0, select bank0
  5378  1457  1303               	bcf	3,6	;RP1=0, select bank0
  5379  1458  00A7               	movwf	___fldiv@f2+3
  5380  1459  307A               	movlw	122
  5381  145A  00A6               	movwf	___fldiv@f2+2
  5382  145B  01A5               	clrf	___fldiv@f2+1
  5383  145C  01A4               	clrf	___fldiv@f2
  5384  145D  1683               	bsf	3,5	;RP0=1, select bank1
  5385  145E  0844               	movf	(measure_capacitance@Cin+3)^(0+128),w
  5386  145F  1283               	bcf	3,5	;RP0=0, select bank0
  5387  1460  00AB               	movwf	___fldiv@f1+3
  5388  1461  1683               	bsf	3,5	;RP0=1, select bank1
  5389  1462  0843               	movf	(measure_capacitance@Cin+2)^(0+128),w
  5390  1463  1283               	bcf	3,5	;RP0=0, select bank0
  5391  1464  00AA               	movwf	___fldiv@f1+2
  5392  1465  1683               	bsf	3,5	;RP0=1, select bank1
  5393  1466  0842               	movf	(measure_capacitance@Cin+1)^(0+128),w
  5394  1467  1283               	bcf	3,5	;RP0=0, select bank0
  5395  1468  00A9               	movwf	___fldiv@f1+1
  5396  1469  1683               	bsf	3,5	;RP0=1, select bank1
  5397  146A  0841               	movf	measure_capacitance@Cin^(0+128),w
  5398  146B  1283               	bcf	3,5	;RP0=0, select bank0
  5399  146C  00A8               	movwf	___fldiv@f1
  5400  146D  24CF  160A  118A   	fcall	___fldiv
  5401  1470  0827               	movf	?___fldiv+3,w
  5402  1471  1683               	bsf	3,5	;RP0=1, select bank1
  5403  1472  00C4               	movwf	(measure_capacitance@Cin+3)^(0+128)
  5404  1473  1283               	bcf	3,5	;RP0=0, select bank0
  5405  1474  0826               	movf	?___fldiv+2,w
  5406  1475  1683               	bsf	3,5	;RP0=1, select bank1
  5407  1476  00C3               	movwf	(measure_capacitance@Cin+2)^(0+128)
  5408  1477  1283               	bcf	3,5	;RP0=0, select bank0
  5409  1478  0825               	movf	?___fldiv+1,w
  5410  1479  1683               	bsf	3,5	;RP0=1, select bank1
  5411  147A  00C2               	movwf	(measure_capacitance@Cin+1)^(0+128)
  5412  147B  1283               	bcf	3,5	;RP0=0, select bank0
  5413  147C  0824               	movf	?___fldiv,w
  5414  147D  1683               	bsf	3,5	;RP0=1, select bank1
  5415  147E  00C1               	movwf	measure_capacitance@Cin^(0+128)
  5416                           
  5417                           ;measure.c: 175: unit = 6;
  5418  147F  3006               	movlw	6
  5419  1480  2C84               	goto	L6
  5420  1481                     l4271:	
  5421                           
  5422                           ;measure.c: 178: unit = 7;
  5423  1481  3007               	movlw	7
  5424  1482  1683               	bsf	3,5	;RP0=1, select bank1
  5425  1483  1303               	bcf	3,6	;RP1=0, select bank1
  5426  1484                     L6:	
  5427  1484  00BE               	movwf	measure_capacitance@unit^(0+128)
  5428                           
  5429                           ;measure.c: 180: Cin = Cin * 100;
  5430  1485  3042               	movlw	66
  5431  1486  1283               	bcf	3,5	;RP0=0, select bank0
  5432  1487  00BA               	movwf	___flmul@f1+3
  5433  1488  30C8               	movlw	200
  5434  1489  00B9               	movwf	___flmul@f1+2
  5435  148A  01B8               	clrf	___flmul@f1+1
  5436  148B  01B7               	clrf	___flmul@f1
  5437  148C  1683               	bsf	3,5	;RP0=1, select bank1
  5438  148D  0844               	movf	(measure_capacitance@Cin+3)^(0+128),w
  5439  148E  1283               	bcf	3,5	;RP0=0, select bank0
  5440  148F  00BE               	movwf	___flmul@f2+3
  5441  1490  1683               	bsf	3,5	;RP0=1, select bank1
  5442  1491  0843               	movf	(measure_capacitance@Cin+2)^(0+128),w
  5443  1492  1283               	bcf	3,5	;RP0=0, select bank0
  5444  1493  00BD               	movwf	___flmul@f2+2
  5445  1494  1683               	bsf	3,5	;RP0=1, select bank1
  5446  1495  0842               	movf	(measure_capacitance@Cin+1)^(0+128),w
  5447  1496  1283               	bcf	3,5	;RP0=0, select bank0
  5448  1497  00BC               	movwf	___flmul@f2+1
  5449  1498  1683               	bsf	3,5	;RP0=1, select bank1
  5450  1499  0841               	movf	measure_capacitance@Cin^(0+128),w
  5451  149A  1283               	bcf	3,5	;RP0=0, select bank0
  5452  149B  00BB               	movwf	___flmul@f2
  5453  149C  120A  158A  25C7  160A  118A  	fcall	___flmul
  5454  14A1  083A               	movf	?___flmul+3,w
  5455  14A2  1683               	bsf	3,5	;RP0=1, select bank1
  5456  14A3  00C4               	movwf	(measure_capacitance@Cin+3)^(0+128)
  5457  14A4  1283               	bcf	3,5	;RP0=0, select bank0
  5458  14A5  0839               	movf	?___flmul+2,w
  5459  14A6  1683               	bsf	3,5	;RP0=1, select bank1
  5460  14A7  00C3               	movwf	(measure_capacitance@Cin+2)^(0+128)
  5461  14A8  1283               	bcf	3,5	;RP0=0, select bank0
  5462  14A9  0838               	movf	?___flmul+1,w
  5463  14AA  1683               	bsf	3,5	;RP0=1, select bank1
  5464  14AB  00C2               	movwf	(measure_capacitance@Cin+1)^(0+128)
  5465  14AC  1283               	bcf	3,5	;RP0=0, select bank0
  5466  14AD  0837               	movf	?___flmul,w
  5467  14AE  1683               	bsf	3,5	;RP0=1, select bank1
  5468  14AF  00C1               	movwf	measure_capacitance@Cin^(0+128)
  5469                           
  5470                           ;measure.c: 181: var = (unsigned short int)Cin;
  5471  14B0  0844               	movf	(measure_capacitance@Cin+3)^(0+128),w
  5472  14B1  00AB               	movwf	(___fltol@f1+3)^(0+128)
  5473  14B2  0843               	movf	(measure_capacitance@Cin+2)^(0+128),w
  5474  14B3  00AA               	movwf	(___fltol@f1+2)^(0+128)
  5475  14B4  0842               	movf	(measure_capacitance@Cin+1)^(0+128),w
  5476  14B5  00A9               	movwf	(___fltol@f1+1)^(0+128)
  5477  14B6  0841               	movf	measure_capacitance@Cin^(0+128),w
  5478  14B7  00A8               	movwf	___fltol@f1^(0+128)
  5479  14B8  120A  158A  278F  160A  118A  	fcall	___fltol
  5480  14BD  0829               	movf	(?___fltol^(0+128)+1),w
  5481  14BE  00C0               	movwf	(measure_capacitance@var+1)^(0+128)
  5482  14BF  0828               	movf	?___fltol^(0+128),w
  5483  14C0  00BF               	movwf	measure_capacitance@var^(0+128)
  5484                           
  5485                           ;measure.c: 183: print_reading(var);
  5486  14C1  0840               	movf	(measure_capacitance@var+1)^(0+128),w
  5487  14C2  1283               	bcf	3,5	;RP0=0, select bank0
  5488  14C3  00CA               	movwf	print_reading@measurement+1
  5489  14C4  1683               	bsf	3,5	;RP0=1, select bank1
  5490  14C5  083F               	movf	measure_capacitance@var^(0+128),w
  5491  14C6  1283               	bcf	3,5	;RP0=0, select bank0
  5492  14C7  00C9               	movwf	print_reading@measurement
  5493  14C8  120A  118A  24E9   	fcall	_print_reading
  5494                           
  5495                           ;measure.c: 184: print_unit(unit);
  5496  14CB  1683               	bsf	3,5	;RP0=1, select bank1
  5497  14CC  120A  158A  2FE6   	ljmp	l3969
  5498  14CF                     __end_of_measure_capacitance:	
  5499  14CF                     __ptext22:	
  5500 ;; *************** function ___fldiv *****************
  5501 ;; Defined at:
  5502 ;;		line 56 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\fldiv.c"
  5503 ;; Parameters:    Size  Location     Type
  5504 ;;  f2              4    4[BANK0 ] unsigned char 
  5505 ;;  f1              4    8[BANK0 ] unsigned char 
  5506 ;; Auto vars:     Size  Location     Type
  5507 ;;  f3              4   16[BANK0 ] unsigned char 
  5508 ;;  sign            1   22[BANK0 ] unsigned char 
  5509 ;;  exp             1   21[BANK0 ] unsigned char 
  5510 ;;  cntr            1   20[BANK0 ] unsigned char 
  5511 ;; Return value:  Size  Location     Type
  5512 ;;                  4    4[BANK0 ] unsigned char 
  5513 ;; Registers used:
  5514 ;;		wreg, status,2, status,0, pclath, cstack
  5515 ;; Tracked objects:
  5516 ;;		On entry : 300/0
  5517 ;;		On exit  : 300/0
  5518 ;;		Unchanged: 0/0
  5519 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5520 ;;      Params:         0       8       0       0       0
  5521 ;;      Locals:         0       7       0       0       0
  5522 ;;      Temps:          0       4       0       0       0
  5523 ;;      Totals:         0      19       0       0       0
  5524 ;;Total ram usage:       19 bytes
  5525 ;; Hardware stack levels used:    1
  5526 ;; Hardware stack levels required when called:    2
  5527 ;; This function calls:
  5528 ;;		___flpack
  5529 ;; This function is called by:
  5530 ;;		_format_double
  5531 ;;		_measure_capacitance
  5532 ;;		_measure_inductance
  5533 ;;		_exp
  5534 ;; This function uses a non-reentrant model
  5535 ;;
  5536                           
  5537                           
  5538                           ;psect for function ___fldiv
  5539  14CF                     ___fldiv:	
  5540                           
  5541                           ;incstack = 0
  5542                           ; Regs used in ___fldiv: [wreg+status,2+status,0+pclath+cstack]
  5543  14CF  0828               	movf	___fldiv@f1,w
  5544  14D0  00AC               	movwf	??___fldiv
  5545  14D1  0829               	movf	___fldiv@f1+1,w
  5546  14D2  00AD               	movwf	??___fldiv+1
  5547  14D3  082A               	movf	___fldiv@f1+2,w
  5548  14D4  00AE               	movwf	??___fldiv+2
  5549  14D5  082B               	movf	___fldiv@f1+3,w
  5550  14D6  00AF               	movwf	??___fldiv+3
  5551  14D7  1003               	clrc
  5552  14D8  0D2E               	rlf	??___fldiv+2,w
  5553  14D9  0D2F               	rlf	??___fldiv+3,w
  5554  14DA  00B5               	movwf	___fldiv@exp
  5555  14DB  0835               	movf	___fldiv@exp,w
  5556  14DC  1D03               	btfss	3,2
  5557  14DD  2CE3               	goto	l3709
  5558  14DE  01A4               	clrf	?___fldiv
  5559  14DF  01A5               	clrf	?___fldiv+1
  5560  14E0  01A6               	clrf	?___fldiv+2
  5561  14E1  01A7               	clrf	?___fldiv+3
  5562  14E2  0008               	return
  5563  14E3                     l3709:	
  5564  14E3  0824               	movf	___fldiv@f2,w
  5565  14E4  00AC               	movwf	??___fldiv
  5566  14E5  0825               	movf	___fldiv@f2+1,w
  5567  14E6  00AD               	movwf	??___fldiv+1
  5568  14E7  0826               	movf	___fldiv@f2+2,w
  5569  14E8  00AE               	movwf	??___fldiv+2
  5570  14E9  0827               	movf	___fldiv@f2+3,w
  5571  14EA  00AF               	movwf	??___fldiv+3
  5572  14EB  1003               	clrc
  5573  14EC  0D2E               	rlf	??___fldiv+2,w
  5574  14ED  0D2F               	rlf	??___fldiv+3,w
  5575  14EE  00B6               	movwf	___fldiv@sign
  5576  14EF  0836               	movf	___fldiv@sign,w
  5577  14F0  1D03               	btfss	3,2
  5578  14F1  2CF7               	goto	l3713
  5579  14F2  01A4               	clrf	?___fldiv
  5580  14F3  01A5               	clrf	?___fldiv+1
  5581  14F4  01A6               	clrf	?___fldiv+2
  5582  14F5  01A7               	clrf	?___fldiv+3
  5583  14F6  0008               	return
  5584  14F7                     l3713:	
  5585  14F7  3089               	movlw	137
  5586  14F8  0736               	addwf	___fldiv@sign,w
  5587  14F9  00AC               	movwf	??___fldiv
  5588  14FA  02B5               	subwf	___fldiv@exp,f
  5589  14FB  082B               	movf	___fldiv@f1+3,w
  5590  14FC  00B6               	movwf	___fldiv@sign
  5591  14FD  0827               	movf	___fldiv@f2+3,w
  5592  14FE  06B6               	xorwf	___fldiv@sign,f
  5593  14FF  3080               	movlw	128
  5594  1500  05B6               	andwf	___fldiv@sign,f
  5595  1501  3020               	movlw	32
  5596  1502  17AA               	bsf	___fldiv@f1+2,7
  5597  1503  01AB               	clrf	___fldiv@f1+3
  5598  1504  17A6               	bsf	___fldiv@f2+2,7
  5599  1505  01A7               	clrf	___fldiv@f2+3
  5600  1506  00B4               	movwf	___fldiv@cntr
  5601  1507                     l3731:	
  5602  1507  1003               	clrc
  5603  1508  0DB0               	rlf	___fldiv@f3,f
  5604  1509  0DB1               	rlf	___fldiv@f3+1,f
  5605  150A  0DB2               	rlf	___fldiv@f3+2,f
  5606  150B  0DB3               	rlf	___fldiv@f3+3,f
  5607  150C  0827               	movf	___fldiv@f2+3,w
  5608  150D  022B               	subwf	___fldiv@f1+3,w
  5609  150E  1D03               	skipz
  5610  150F  2D1A               	goto	u3535
  5611  1510  0826               	movf	___fldiv@f2+2,w
  5612  1511  022A               	subwf	___fldiv@f1+2,w
  5613  1512  1D03               	skipz
  5614  1513  2D1A               	goto	u3535
  5615  1514  0825               	movf	___fldiv@f2+1,w
  5616  1515  0229               	subwf	___fldiv@f1+1,w
  5617  1516  1D03               	skipz
  5618  1517  2D1A               	goto	u3535
  5619  1518  0824               	movf	___fldiv@f2,w
  5620  1519  0228               	subwf	___fldiv@f1,w
  5621  151A                     u3535:	
  5622  151A  1C03               	skipc
  5623  151B  2D2C               	goto	L9
  5624  151C  0824               	movf	___fldiv@f2,w
  5625  151D  02A8               	subwf	___fldiv@f1,f
  5626  151E  0825               	movf	___fldiv@f2+1,w
  5627  151F  1C03               	skipc
  5628  1520  0F25               	incfsz	___fldiv@f2+1,w
  5629  1521  02A9               	subwf	___fldiv@f1+1,f
  5630  1522  0826               	movf	___fldiv@f2+2,w
  5631  1523  1C03               	skipc
  5632  1524  0F26               	incfsz	___fldiv@f2+2,w
  5633  1525  02AA               	subwf	___fldiv@f1+2,f
  5634  1526  0827               	movf	___fldiv@f2+3,w
  5635  1527  1C03               	skipc
  5636  1528  0F27               	incfsz	___fldiv@f2+3,w
  5637  1529  02AB               	subwf	___fldiv@f1+3,f
  5638  152A  1430               	bsf	___fldiv@f3,0
  5639  152B  1003               	clrc
  5640  152C                     L9:	
  5641  152C  0DA8               	rlf	___fldiv@f1,f
  5642  152D  0DA9               	rlf	___fldiv@f1+1,f
  5643  152E  0DAA               	rlf	___fldiv@f1+2,f
  5644  152F  0DAB               	rlf	___fldiv@f1+3,f
  5645  1530  0BB4               	decfsz	___fldiv@cntr,f
  5646  1531  2D07               	goto	l3731
  5647  1532  0833               	movf	___fldiv@f3+3,w
  5648  1533  00F5               	movwf	___flpack@arg+3
  5649  1534  0832               	movf	___fldiv@f3+2,w
  5650  1535  00F4               	movwf	___flpack@arg+2
  5651  1536  0831               	movf	___fldiv@f3+1,w
  5652  1537  00F3               	movwf	___flpack@arg+1
  5653  1538  0830               	movf	___fldiv@f3,w
  5654  1539  00F2               	movwf	___flpack@arg
  5655  153A  0835               	movf	___fldiv@exp,w
  5656  153B  00F6               	movwf	___flpack@exp
  5657  153C  0836               	movf	___fldiv@sign,w
  5658  153D  00F7               	movwf	___flpack@sign
  5659  153E  255B               	fcall	___flpack
  5660  153F  0875               	movf	?___flpack+3,w
  5661  1540  00A7               	movwf	?___fldiv+3
  5662  1541  0874               	movf	?___flpack+2,w
  5663  1542  00A6               	movwf	?___fldiv+2
  5664  1543  0873               	movf	?___flpack+1,w
  5665  1544  00A5               	movwf	?___fldiv+1
  5666  1545  0872               	movf	?___flpack,w
  5667  1546  00A4               	movwf	?___fldiv
  5668  1547  0008               	return
  5669  1548                     __end_of___fldiv:	
  5670  1548                     __ptext50:	
  5671 ;; *************** function ___lwtofl *****************
  5672 ;; Defined at:
  5673 ;;		line 28 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lwtofl.c"
  5674 ;; Parameters:    Size  Location     Type
  5675 ;;  c               2   47[BANK0 ] unsigned int 
  5676 ;; Auto vars:     Size  Location     Type
  5677 ;;		None
  5678 ;; Return value:  Size  Location     Type
  5679 ;;                  4   47[BANK0 ] unsigned int 
  5680 ;; Registers used:
  5681 ;;		wreg, status,2, status,0, pclath, cstack
  5682 ;; Tracked objects:
  5683 ;;		On entry : 300/0
  5684 ;;		On exit  : 300/0
  5685 ;;		Unchanged: 0/0
  5686 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5687 ;;      Params:         0       4       0       0       0
  5688 ;;      Locals:         0       0       0       0       0
  5689 ;;      Temps:          0       0       0       0       0
  5690 ;;      Totals:         0       4       0       0       0
  5691 ;;Total ram usage:        4 bytes
  5692 ;; Hardware stack levels used:    1
  5693 ;; Hardware stack levels required when called:    2
  5694 ;; This function calls:
  5695 ;;		___flpack
  5696 ;; This function is called by:
  5697 ;;		_calibrate
  5698 ;;		_measure_capacitance
  5699 ;;		_measure_inductance
  5700 ;; This function uses a non-reentrant model
  5701 ;;
  5702                           
  5703                           
  5704                           ;psect for function ___lwtofl
  5705  1548                     ___lwtofl:	
  5706                           
  5707                           ;incstack = 0
  5708                           ; Regs used in ___lwtofl: [wreg+status,2+status,0+pclath+cstack]
  5709  1548  084F               	movf	___lwtofl@c,w
  5710  1549  00F2               	movwf	___flpack@arg
  5711  154A  0850               	movf	___lwtofl@c+1,w
  5712  154B  00F3               	movwf	___flpack@arg+1
  5713  154C  3096               	movlw	150
  5714  154D  01F4               	clrf	___flpack@arg+2
  5715  154E  01F5               	clrf	___flpack@arg+3
  5716  154F  00F6               	movwf	___flpack@exp
  5717  1550  01F7               	clrf	___flpack@sign
  5718  1551  255B               	fcall	___flpack
  5719  1552  0875               	movf	?___flpack+3,w
  5720  1553  00D2               	movwf	?___lwtofl+3
  5721  1554  0874               	movf	?___flpack+2,w
  5722  1555  00D1               	movwf	?___lwtofl+2
  5723  1556  0873               	movf	?___flpack+1,w
  5724  1557  00D0               	movwf	?___lwtofl+1
  5725  1558  0872               	movf	?___flpack,w
  5726  1559  00CF               	movwf	?___lwtofl
  5727  155A  0008               	return
  5728  155B                     __end_of___lwtofl:	
  5729  155B                     __ptext51:	
  5730 ;; *************** function ___flpack *****************
  5731 ;; Defined at:
  5732 ;;		line 63 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\double.c"
  5733 ;; Parameters:    Size  Location     Type
  5734 ;;  arg             4    2[COMMON] unsigned long 
  5735 ;;  exp             1    6[COMMON] unsigned char 
  5736 ;;  sign            1    7[COMMON] unsigned char 
  5737 ;; Auto vars:     Size  Location     Type
  5738 ;;		None
  5739 ;; Return value:  Size  Location     Type
  5740 ;;                  4    2[COMMON] unsigned char 
  5741 ;; Registers used:
  5742 ;;		wreg, status,2, status,0
  5743 ;; Tracked objects:
  5744 ;;		On entry : 300/0
  5745 ;;		On exit  : 300/0
  5746 ;;		Unchanged: 0/0
  5747 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5748 ;;      Params:         6       0       0       0       0
  5749 ;;      Locals:         0       0       0       0       0
  5750 ;;      Temps:          0       4       0       0       0
  5751 ;;      Totals:         6       4       0       0       0
  5752 ;;Total ram usage:       10 bytes
  5753 ;; Hardware stack levels used:    1
  5754 ;; Hardware stack levels required when called:    1
  5755 ;; This function calls:
  5756 ;;		Nothing
  5757 ;; This function is called by:
  5758 ;;		___altofl
  5759 ;;		___awtofl
  5760 ;;		___fladd
  5761 ;;		___fldiv
  5762 ;;		___flmul
  5763 ;;		___lltofl
  5764 ;;		___lwtofl
  5765 ;; This function uses a non-reentrant model
  5766 ;;
  5767                           
  5768                           
  5769                           ;psect for function ___flpack
  5770  155B                     ___flpack:	
  5771                           
  5772                           ;incstack = 0
  5773                           ; Regs used in ___flpack: [wreg+status,2+status,0]
  5774  155B  0876               	movf	___flpack@exp,w
  5775  155C  1903               	btfsc	3,2
  5776  155D  2D64               	goto	l817
  5777  155E  0875               	movf	___flpack@arg+3,w
  5778  155F  0474               	iorwf	___flpack@arg+2,w
  5779  1560  0473               	iorwf	___flpack@arg+1,w
  5780  1561  0472               	iorwf	___flpack@arg,w
  5781  1562  1D03               	skipz
  5782  1563  2D6F               	goto	l3507
  5783  1564                     l817:	
  5784  1564  01F2               	clrf	?___flpack
  5785  1565  01F3               	clrf	?___flpack+1
  5786  1566  01F4               	clrf	?___flpack+2
  5787  1567  01F5               	clrf	?___flpack+3
  5788  1568  0008               	return
  5789  1569                     l3505:	
  5790  1569  0AF6               	incf	___flpack@exp,f
  5791  156A  1003               	clrc
  5792  156B  0CF5               	rrf	___flpack@arg+3,f
  5793  156C  0CF4               	rrf	___flpack@arg+2,f
  5794  156D  0CF3               	rrf	___flpack@arg+1,f
  5795  156E  0CF2               	rrf	___flpack@arg,f
  5796  156F                     l3507:	
  5797  156F  30FE               	movlw	254
  5798  1570  0575               	andwf	___flpack@arg+3,w
  5799  1571  1903               	btfsc	3,2
  5800  1572  2D81               	goto	l3511
  5801  1573  2D69               	goto	l3505
  5802  1574                     l3509:	
  5803  1574  0AF6               	incf	___flpack@exp,f
  5804  1575  0AF2               	incf	___flpack@arg,f
  5805  1576  1903               	skipnz
  5806  1577  0AF3               	incf	___flpack@arg+1,f
  5807  1578  1903               	skipnz
  5808  1579  0AF4               	incf	___flpack@arg+2,f
  5809  157A  1903               	skipnz
  5810  157B  0AF5               	incf	___flpack@arg+3,f
  5811  157C  1003               	clrc
  5812  157D  0CF5               	rrf	___flpack@arg+3,f
  5813  157E  0CF4               	rrf	___flpack@arg+2,f
  5814  157F  0CF3               	rrf	___flpack@arg+1,f
  5815  1580  0CF2               	rrf	___flpack@arg,f
  5816  1581                     l3511:	
  5817  1581  30FF               	movlw	255
  5818  1582  0575               	andwf	___flpack@arg+3,w
  5819  1583  1903               	btfsc	3,2
  5820  1584  2D90               	goto	l3515
  5821  1585  2D74               	goto	l3509
  5822  1586                     l3517:	
  5823  1586  3002               	movlw	2
  5824  1587  0276               	subwf	___flpack@exp,w
  5825  1588  1C03               	btfss	3,0
  5826  1589  2D92               	goto	l829
  5827  158A  03F6               	decf	___flpack@exp,f
  5828  158B  1003               	clrc
  5829  158C  0DF2               	rlf	___flpack@arg,f
  5830  158D  0DF3               	rlf	___flpack@arg+1,f
  5831  158E  0DF4               	rlf	___flpack@arg+2,f
  5832  158F  0DF5               	rlf	___flpack@arg+3,f
  5833  1590                     l3515:	
  5834  1590  1FF4               	btfss	___flpack@arg+2,7
  5835  1591  2D86               	goto	l3517
  5836  1592                     l829:	
  5837  1592  1876               	btfsc	___flpack@exp,0
  5838  1593  2D97               	goto	l3521
  5839  1594  307F               	movlw	127
  5840  1595  05F4               	andwf	___flpack@arg+2,f
  5841  1596  30FF               	movlw	255
  5842  1597                     l3521:	
  5843  1597  1003               	clrc
  5844  1598  0CF6               	rrf	___flpack@exp,f
  5845  1599  0876               	movf	___flpack@exp,w
  5846  159A  00A3               	movwf	??___flpack+3
  5847  159B  01A2               	clrf	??___flpack+2
  5848  159C  01A1               	clrf	??___flpack+1
  5849  159D  01A0               	clrf	??___flpack
  5850  159E  0820               	movf	??___flpack,w
  5851  159F  04F2               	iorwf	___flpack@arg,f
  5852  15A0  0821               	movf	??___flpack+1,w
  5853  15A1  04F3               	iorwf	___flpack@arg+1,f
  5854  15A2  0822               	movf	??___flpack+2,w
  5855  15A3  04F4               	iorwf	___flpack@arg+2,f
  5856  15A4  0823               	movf	??___flpack+3,w
  5857  15A5  04F5               	iorwf	___flpack@arg+3,f
  5858  15A6  0877               	movf	___flpack@sign,w
  5859  15A7  1D03               	btfss	3,2
  5860  15A8  17F5               	bsf	___flpack@arg+3,7
  5861  15A9  0008               	return
  5862  15AA                     __end_of___flpack:	
  5863  15AA                     __ptext38:	
  5864 ;; *************** function _lcd_gotoxy *****************
  5865 ;; Defined at:
  5866 ;;		line 154 in file "../../../lib/lcd44780.c"
  5867 ;; Parameters:    Size  Location     Type
  5868 ;;  col             1    wreg     unsigned char 
  5869 ;;  row             1    7[COMMON] unsigned char 
  5870 ;; Auto vars:     Size  Location     Type
  5871 ;;  col             1    0[BANK0 ] unsigned char 
  5872 ;;  row_offsets     4    1[BANK0 ] unsigned char [4]
  5873 ;; Return value:  Size  Location     Type
  5874 ;;		None               void
  5875 ;; Registers used:
  5876 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5877 ;; Tracked objects:
  5878 ;;		On entry : 0/100
  5879 ;;		On exit  : 0/0
  5880 ;;		Unchanged: 0/0
  5881 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5882 ;;      Params:         1       0       0       0       0
  5883 ;;      Locals:         0       5       0       0       0
  5884 ;;      Temps:          0       0       0       0       0
  5885 ;;      Totals:         1       5       0       0       0
  5886 ;;Total ram usage:        6 bytes
  5887 ;; Hardware stack levels used:    1
  5888 ;; Hardware stack levels required when called:    4
  5889 ;; This function calls:
  5890 ;;		_lcd_command
  5891 ;; This function is called by:
  5892 ;;		_print_unit
  5893 ;;		_print_reading
  5894 ;;		_indicator
  5895 ;;		_main
  5896 ;;		_calibrate
  5897 ;;		_measure_freq
  5898 ;;		_measure_capacitance
  5899 ;;		_measure_inductance
  5900 ;; This function uses a non-reentrant model
  5901 ;;
  5902                           
  5903                           
  5904                           ;psect for function _lcd_gotoxy
  5905  15AA                     _lcd_gotoxy:	
  5906                           
  5907                           ;incstack = 0
  5908                           ; Regs used in _lcd_gotoxy: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5909                           ;lcd_gotoxy@col stored from wreg
  5910  15AA  1283               	bcf	3,5	;RP0=0, select bank0
  5911  15AB  1303               	bcf	3,6	;RP1=0, select bank0
  5912  15AC  00A0               	movwf	lcd_gotoxy@col
  5913                           
  5914                           ;lcd44780.c: 156: unsigned char row_offsets[] = {0x00, 0x40, 0x14, 0x54};
  5915  15AD  1683               	bsf	3,5	;RP0=1, select bank3
  5916  15AE  1703               	bsf	3,6	;RP1=1, select bank3
  5917  15AF  0852               	movf	(lcd_gotoxy@F1126+3)^(0+384),w
  5918  15B0  1283               	bcf	3,5	;RP0=0, select bank0
  5919  15B1  1303               	bcf	3,6	;RP1=0, select bank0
  5920  15B2  00A4               	movwf	lcd_gotoxy@row_offsets+3
  5921  15B3  1683               	bsf	3,5	;RP0=1, select bank3
  5922  15B4  1703               	bsf	3,6	;RP1=1, select bank3
  5923  15B5  0851               	movf	(lcd_gotoxy@F1126+2)^(0+384),w
  5924  15B6  1283               	bcf	3,5	;RP0=0, select bank0
  5925  15B7  1303               	bcf	3,6	;RP1=0, select bank0
  5926  15B8  00A3               	movwf	lcd_gotoxy@row_offsets+2
  5927  15B9  1683               	bsf	3,5	;RP0=1, select bank3
  5928  15BA  1703               	bsf	3,6	;RP1=1, select bank3
  5929  15BB  0850               	movf	(lcd_gotoxy@F1126+1)^(0+384),w
  5930  15BC  1283               	bcf	3,5	;RP0=0, select bank0
  5931  15BD  1303               	bcf	3,6	;RP1=0, select bank0
  5932  15BE  00A2               	movwf	lcd_gotoxy@row_offsets+1
  5933  15BF  1683               	bsf	3,5	;RP0=1, select bank3
  5934  15C0  1703               	bsf	3,6	;RP1=1, select bank3
  5935  15C1  084F               	movf	lcd_gotoxy@F1126^(0+384),w
  5936  15C2  1283               	bcf	3,5	;RP0=0, select bank0
  5937  15C3  1303               	bcf	3,6	;RP1=0, select bank0
  5938  15C4  00A1               	movwf	lcd_gotoxy@row_offsets
  5939                           
  5940                           ;lcd44780.c: 165: if(LCD_lines == 1) {
  5941  15C5  1683               	bsf	3,5	;RP0=1, select bank3
  5942  15C6  1703               	bsf	3,6	;RP1=1, select bank3
  5943  15C7  0B1F               	decfsz	_LCD_lines^(0+384),w
  5944  15C8  2DD1               	goto	l3809
  5945                           
  5946                           ;lcd44780.c: 166: row_offsets[1] = 0x14;
  5947  15C9  3014               	movlw	20
  5948  15CA  1283               	bcf	3,5	;RP0=0, select bank0
  5949  15CB  1303               	bcf	3,6	;RP1=0, select bank0
  5950  15CC  00A2               	movwf	lcd_gotoxy@row_offsets+1
  5951                           
  5952                           ;lcd44780.c: 167: row_offsets[2] = 0x28;
  5953  15CD  3028               	movlw	40
  5954  15CE  00A3               	movwf	lcd_gotoxy@row_offsets+2
  5955                           
  5956                           ;lcd44780.c: 168: row_offsets[3] = 0x3C;
  5957  15CF  303C               	movlw	60
  5958  15D0  00A4               	movwf	lcd_gotoxy@row_offsets+3
  5959  15D1                     l3809:	
  5960                           
  5961                           ;lcd44780.c: 169: }
  5962                           ;lcd44780.c: 175: lcd_command(0x80 | (col + row_offsets[row]));
  5963  15D1  0877               	movf	lcd_gotoxy@row,w
  5964  15D2  3E21               	addlw	(low (lcd_gotoxy@row_offsets| 0))& (0+255)
  5965  15D3  0084               	movwf	4
  5966  15D4  1283               	bcf	3,5	;RP0=0, select bank0
  5967  15D5  1303               	bcf	3,6	;RP1=0, select bank0
  5968  15D6  0820               	movf	lcd_gotoxy@col,w
  5969  15D7  1383               	bcf	3,7	;select IRP bank0
  5970  15D8  0700               	addwf	0,w
  5971  15D9  3880               	iorlw	128
  5972  15DA  2E24               	ljmp	_lcd_command
  5973  15DB                     __end_of_lcd_gotoxy:	
  5974  15DB                     __ptext37:	
  5975 ;; *************** function _put_str *****************
  5976 ;; Defined at:
  5977 ;;		line 511 in file "../../../src/print.c"
  5978 ;; Parameters:    Size  Location     Type
  5979 ;;  s               1    wreg     PTR const unsigned char 
  5980 ;;		 -> STR_25(13), STR_24(10), STR_23(6), STR_21(15), 
  5981 ;;		 -> STR_19(12), 
  5982 ;; Auto vars:     Size  Location     Type
  5983 ;;  s               1    2[BANK0 ] PTR const unsigned char 
  5984 ;;		 -> STR_25(13), STR_24(10), STR_23(6), STR_21(15), 
  5985 ;;		 -> STR_19(12), 
  5986 ;;  i               2    0[BANK0 ] int 
  5987 ;; Return value:  Size  Location     Type
  5988 ;;		None               void
  5989 ;; Registers used:
  5990 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5991 ;; Tracked objects:
  5992 ;;		On entry : 0/0
  5993 ;;		On exit  : 300/0
  5994 ;;		Unchanged: 0/0
  5995 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5996 ;;      Params:         0       0       0       0       0
  5997 ;;      Locals:         0       3       0       0       0
  5998 ;;      Temps:          0       0       0       0       0
  5999 ;;      Totals:         0       3       0       0       0
  6000 ;;Total ram usage:        3 bytes
  6001 ;; Hardware stack levels used:    1
  6002 ;; Hardware stack levels required when called:    5
  6003 ;; This function calls:
  6004 ;;		_output_putch
  6005 ;; This function is called by:
  6006 ;;		_calibrate
  6007 ;;		_measure_freq
  6008 ;;		_measure_capacitance
  6009 ;;		_measure_inductance
  6010 ;; This function uses a non-reentrant model
  6011 ;;
  6012                           
  6013                           
  6014                           ;psect for function _put_str
  6015  15DB                     _put_str:	
  6016                           
  6017                           ;incstack = 0
  6018                           ; Regs used in _put_str: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6019                           ;put_str@s stored from wreg
  6020  15DB  1283               	bcf	3,5	;RP0=0, select bank0
  6021  15DC  1303               	bcf	3,6	;RP1=0, select bank0
  6022  15DD  00A2               	movwf	put_str@s
  6023                           
  6024                           ;print.c: 512: int i;
  6025                           ;print.c: 514: for(i = 0; s[i]; i++) {
  6026  15DE  01A0               	clrf	put_str@i
  6027  15DF  01A1               	clrf	put_str@i+1
  6028  15E0                     l3865:	
  6029  15E0  0820               	movf	put_str@i,w
  6030  15E1  0722               	addwf	put_str@s,w
  6031  15E2  0084               	movwf	4
  6032  15E3  120A  118A  2030  160A  118A  	fcall	stringdir
  6033  15E8  3A00               	xorlw	0
  6034  15E9  1903               	btfsc	3,2
  6035  15EA  0008               	return
  6036                           
  6037                           ;print.c: 515: output_putch(s[i]);
  6038  15EB  0820               	movf	put_str@i,w
  6039  15EC  0722               	addwf	put_str@s,w
  6040  15ED  0084               	movwf	4
  6041  15EE  120A  118A  2030  160A  118A  	fcall	stringdir
  6042  15F3  00F7               	movwf	output_putch@c
  6043  15F4  25FD  160A  118A   	fcall	_output_putch
  6044  15F7  1283               	bcf	3,5	;RP0=0, select bank0
  6045  15F8  1303               	bcf	3,6	;RP1=0, select bank0
  6046  15F9  0AA0               	incf	put_str@i,f
  6047  15FA  1903               	skipnz
  6048  15FB  0AA1               	incf	put_str@i+1,f
  6049  15FC  2DE0               	goto	l3865
  6050  15FD                     __end_of_put_str:	
  6051  15FD                     __ptext42:	
  6052 ;; *************** function _output_putch *****************
  6053 ;; Defined at:
  6054 ;;		line 498 in file "../../../src/print.c"
  6055 ;; Parameters:    Size  Location     Type
  6056 ;;  c               1    7[COMMON] unsigned char 
  6057 ;; Auto vars:     Size  Location     Type
  6058 ;;		None
  6059 ;; Return value:  Size  Location     Type
  6060 ;;		None               void
  6061 ;; Registers used:
  6062 ;;		wreg, status,2, status,0, pclath, cstack
  6063 ;; Tracked objects:
  6064 ;;		On entry : 0/300
  6065 ;;		On exit  : 0/0
  6066 ;;		Unchanged: 0/0
  6067 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6068 ;;      Params:         1       0       0       0       0
  6069 ;;      Locals:         0       0       0       0       0
  6070 ;;      Temps:          0       0       0       0       0
  6071 ;;      Totals:         1       0       0       0       0
  6072 ;;Total ram usage:        1 bytes
  6073 ;; Hardware stack levels used:    1
  6074 ;; Hardware stack levels required when called:    4
  6075 ;; This function calls:
  6076 ;;		_lcd_putch
  6077 ;; This function is called by:
  6078 ;;		_put_str
  6079 ;;		_measure_capacitance
  6080 ;;		_format_number
  6081 ;;		_format_double
  6082 ;; This function uses a non-reentrant model
  6083 ;;
  6084                           
  6085                           
  6086                           ;psect for function _output_putch
  6087  15FD                     _output_putch:	
  6088                           
  6089                           ;print.c: 500: lcd_putch(c);
  6090                           
  6091                           ;incstack = 0
  6092                           ; Regs used in _output_putch: [wreg+status,2+status,0+pclath+cstack]
  6093  15FD  0877               	movf	output_putch@c,w
  6094  15FE  00F7               	movwf	lcd_putch@value
  6095  15FF  2E38               	ljmp	_lcd_putch
  6096  1600                     __end_of_output_putch:	
  6097  1600                     __ptext21:	
  6098 ;; *************** function ___flsub *****************
  6099 ;; Defined at:
  6100 ;;		line 18 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\flsub.c"
  6101 ;; Parameters:    Size  Location     Type
  6102 ;;  f2              4   57[BANK0 ] unsigned char 
  6103 ;;  f1              4   61[BANK0 ] unsigned char 
  6104 ;; Auto vars:     Size  Location     Type
  6105 ;;		None
  6106 ;; Return value:  Size  Location     Type
  6107 ;;                  4   57[BANK0 ] unsigned char 
  6108 ;; Registers used:
  6109 ;;		wreg, status,2, status,0, pclath, cstack
  6110 ;; Tracked objects:
  6111 ;;		On entry : 300/0
  6112 ;;		On exit  : 300/0
  6113 ;;		Unchanged: 0/0
  6114 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6115 ;;      Params:         0       8       0       0       0
  6116 ;;      Locals:         0       0       0       0       0
  6117 ;;      Temps:          0       0       0       0       0
  6118 ;;      Totals:         0       8       0       0       0
  6119 ;;Total ram usage:        8 bytes
  6120 ;; Hardware stack levels used:    1
  6121 ;; Hardware stack levels required when called:    3
  6122 ;; This function calls:
  6123 ;;		___fladd
  6124 ;; This function is called by:
  6125 ;;		_format_double
  6126 ;;		_measure_capacitance
  6127 ;;		_measure_inductance
  6128 ;;		_exp
  6129 ;; This function uses a non-reentrant model
  6130 ;;
  6131                           
  6132                           
  6133                           ;psect for function ___flsub
  6134  1600                     ___flsub:	
  6135                           
  6136                           ;incstack = 0
  6137                           ; Regs used in ___flsub: [wreg+status,2+status,0+pclath+cstack]
  6138  1600  085C               	movf	___flsub@f2+3,w
  6139  1601  045B               	iorwf	___flsub@f2+2,w
  6140  1602  045A               	iorwf	___flsub@f2+1,w
  6141  1603  0459               	iorwf	___flsub@f2,w
  6142  1604  1903               	skipnz
  6143  1605  2E08               	goto	l3749
  6144  1606  3080               	movlw	128
  6145  1607  06DC               	xorwf	___flsub@f2+3,f
  6146  1608                     l3749:	
  6147  1608  085C               	movf	___flsub@f2+3,w
  6148  1609  00CD               	movwf	___fladd@f1+3
  6149  160A  085B               	movf	___flsub@f2+2,w
  6150  160B  00CC               	movwf	___fladd@f1+2
  6151  160C  085A               	movf	___flsub@f2+1,w
  6152  160D  00CB               	movwf	___fladd@f1+1
  6153  160E  0859               	movf	___flsub@f2,w
  6154  160F  00CA               	movwf	___fladd@f1
  6155  1610  0860               	movf	___flsub@f1+3,w
  6156  1611  00D1               	movwf	___fladd@f2+3
  6157  1612  085F               	movf	___flsub@f1+2,w
  6158  1613  00D0               	movwf	___fladd@f2+2
  6159  1614  085E               	movf	___flsub@f1+1,w
  6160  1615  00CF               	movwf	___fladd@f2+1
  6161  1616  085D               	movf	___flsub@f1,w
  6162  1617  00CE               	movwf	___fladd@f2
  6163  1618  120A  158A  209D   	fcall	___fladd
  6164  161B  084D               	movf	?___fladd+3,w
  6165  161C  00DC               	movwf	?___flsub+3
  6166  161D  084C               	movf	?___fladd+2,w
  6167  161E  00DB               	movwf	?___flsub+2
  6168  161F  084B               	movf	?___fladd+1,w
  6169  1620  00DA               	movwf	?___flsub+1
  6170  1621  084A               	movf	?___fladd,w
  6171  1622  00D9               	movwf	?___flsub
  6172  1623  0008               	return
  6173  1624                     __end_of___flsub:	
  6174  1624                     __ptext46:	
  6175 ;; *************** function _lcd_command *****************
  6176 ;; Defined at:
  6177 ;;		line 146 in file "../../../lib/lcd44780.c"
  6178 ;; Parameters:    Size  Location     Type
  6179 ;;  value           1    wreg     unsigned char 
  6180 ;; Auto vars:     Size  Location     Type
  6181 ;;  value           1    6[COMMON] unsigned char 
  6182 ;; Return value:  Size  Location     Type
  6183 ;;		None               void
  6184 ;; Registers used:
  6185 ;;		wreg, status,2, status,0, pclath, cstack
  6186 ;; Tracked objects:
  6187 ;;		On entry : 0/0
  6188 ;;		On exit  : 0/0
  6189 ;;		Unchanged: 0/0
  6190 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6191 ;;      Params:         0       0       0       0       0
  6192 ;;      Locals:         1       0       0       0       0
  6193 ;;      Temps:          0       0       0       0       0
  6194 ;;      Totals:         1       0       0       0       0
  6195 ;;Total ram usage:        1 bytes
  6196 ;; Hardware stack levels used:    1
  6197 ;; Hardware stack levels required when called:    3
  6198 ;; This function calls:
  6199 ;;		_lcd_send
  6200 ;; This function is called by:
  6201 ;;		_lcd_gotoxy
  6202 ;;		_lcd_clear
  6203 ;;		_lcd_begin
  6204 ;; This function uses a non-reentrant model
  6205 ;;
  6206                           
  6207                           
  6208                           ;psect for function _lcd_command
  6209  1624                     _lcd_command:	
  6210                           
  6211                           ;incstack = 0
  6212                           ; Regs used in _lcd_command: [wreg+status,2+status,0+pclath+cstack]
  6213                           ;lcd_command@value stored from wreg
  6214  1624  00F6               	movwf	lcd_command@value
  6215                           
  6216                           ;lcd44780.c: 147: lcd_send(value, 0);
  6217  1625  01F4               	clrf	lcd_send@mode
  6218  1626  2E27               	ljmp	_lcd_send
  6219  1627                     __end_of_lcd_command:	
  6220  1627                     __ptext47:	
  6221 ;; *************** function _lcd_send *****************
  6222 ;; Defined at:
  6223 ;;		line 122 in file "../../../lib/lcd44780.c"
  6224 ;; Parameters:    Size  Location     Type
  6225 ;;  value           1    wreg     unsigned char 
  6226 ;;  mode            1    4[COMMON] unsigned char 
  6227 ;; Auto vars:     Size  Location     Type
  6228 ;;  value           1    5[COMMON] unsigned char 
  6229 ;; Return value:  Size  Location     Type
  6230 ;;		None               void
  6231 ;; Registers used:
  6232 ;;		wreg, status,2, status,0, pclath, cstack
  6233 ;; Tracked objects:
  6234 ;;		On entry : 0/100
  6235 ;;		On exit  : 0/0
  6236 ;;		Unchanged: 0/0
  6237 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6238 ;;      Params:         1       0       0       0       0
  6239 ;;      Locals:         1       0       0       0       0
  6240 ;;      Temps:          0       0       0       0       0
  6241 ;;      Totals:         2       0       0       0       0
  6242 ;;Total ram usage:        2 bytes
  6243 ;; Hardware stack levels used:    1
  6244 ;; Hardware stack levels required when called:    2
  6245 ;; This function calls:
  6246 ;;		_lcd_write4bits
  6247 ;; This function is called by:
  6248 ;;		_lcd_putch
  6249 ;;		_lcd_command
  6250 ;; This function uses a non-reentrant model
  6251 ;;
  6252                           
  6253                           
  6254                           ;psect for function _lcd_send
  6255  1627                     _lcd_send:	
  6256                           
  6257                           ;incstack = 0
  6258                           ; Regs used in _lcd_send: [wreg+status,2+status,0+pclath+cstack]
  6259                           ;lcd_send@value stored from wreg
  6260  1627  00F5               	movwf	lcd_send@value
  6261                           
  6262                           ;lcd44780.c: 123: RB2 = mode;
  6263  1628  1C74               	btfss	lcd_send@mode,0
  6264  1629  2E2E               	goto	u3070
  6265  162A  1283               	bcf	3,5	;RP0=0, select bank0
  6266  162B  1303               	bcf	3,6	;RP1=0, select bank0
  6267  162C  1506               	bsf	6,2	;volatile
  6268  162D  2E31               	goto	l3499
  6269  162E                     u3070:	
  6270  162E  1283               	bcf	3,5	;RP0=0, select bank0
  6271  162F  1303               	bcf	3,6	;RP1=0, select bank0
  6272  1630  1106               	bcf	6,2	;volatile
  6273  1631                     l3499:	
  6274                           
  6275                           ;lcd44780.c: 130: {
  6276                           ;lcd44780.c: 131: lcd_write4bits(value >> 4);
  6277  1631  0E75               	swapf	lcd_send@value,w
  6278  1632  390F               	andlw	15
  6279  1633  27C6  160A  118A   	fcall	_lcd_write4bits
  6280                           
  6281                           ;lcd44780.c: 132: lcd_write4bits(value);
  6282  1636  0875               	movf	lcd_send@value,w
  6283  1637  2FC6               	ljmp	_lcd_write4bits
  6284  1638                     __end_of_lcd_send:	
  6285  1638                     __ptext41:	
  6286 ;; *************** function _lcd_putch *****************
  6287 ;; Defined at:
  6288 ;;		line 139 in file "../../../lib/lcd44780.c"
  6289 ;; Parameters:    Size  Location     Type
  6290 ;;  value           1    7[COMMON] unsigned char 
  6291 ;; Auto vars:     Size  Location     Type
  6292 ;;		None
  6293 ;; Return value:  Size  Location     Type
  6294 ;;		None               void
  6295 ;; Registers used:
  6296 ;;		wreg, status,2, status,0, pclath, cstack
  6297 ;; Tracked objects:
  6298 ;;		On entry : 0/100
  6299 ;;		On exit  : 0/0
  6300 ;;		Unchanged: 0/0
  6301 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6302 ;;      Params:         1       0       0       0       0
  6303 ;;      Locals:         0       0       0       0       0
  6304 ;;      Temps:          0       0       0       0       0
  6305 ;;      Totals:         1       0       0       0       0
  6306 ;;Total ram usage:        1 bytes
  6307 ;; Hardware stack levels used:    1
  6308 ;; Hardware stack levels required when called:    3
  6309 ;; This function calls:
  6310 ;;		_lcd_send
  6311 ;; This function is called by:
  6312 ;;		_output_putch
  6313 ;;		_main
  6314 ;;		_lcd_puts
  6315 ;;		_calibrate
  6316 ;;		_format_number
  6317 ;;		_format_double
  6318 ;; This function uses a non-reentrant model
  6319 ;;
  6320                           
  6321                           
  6322                           ;psect for function _lcd_putch
  6323  1638                     _lcd_putch:	
  6324                           
  6325                           ;lcd44780.c: 140: lcd_send((unsigned)value, 1);
  6326                           
  6327                           ;incstack = 0
  6328                           ; Regs used in _lcd_putch: [wreg+status,2+status,0+pclath+cstack]
  6329  1638  01F4               	clrf	lcd_send@mode
  6330  1639  0AF4               	incf	lcd_send@mode,f
  6331  163A  0877               	movf	lcd_putch@value,w
  6332  163B  2E27               	ljmp	_lcd_send
  6333  163C                     __end_of_lcd_putch:	
  6334  163C                     __ptext26:	
  6335 ;; *************** function _frexp *****************
  6336 ;; Defined at:
  6337 ;;		line 254 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\frexp.c"
  6338 ;; Parameters:    Size  Location     Type
  6339 ;;  value           4    2[COMMON] int 
  6340 ;;  eptr            1    6[COMMON] PTR int 
  6341 ;;		 -> log@exponent(2), floor@expon(2), 
  6342 ;; Auto vars:     Size  Location     Type
  6343 ;;		None
  6344 ;; Return value:  Size  Location     Type
  6345 ;;                  4    2[COMMON] PTR int 
  6346 ;; Registers used:
  6347 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
  6348 ;; Tracked objects:
  6349 ;;		On entry : 200/100
  6350 ;;		On exit  : A00/0
  6351 ;;		Unchanged: 200/0
  6352 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6353 ;;      Params:         5       0       0       0       0
  6354 ;;      Locals:         0       0       0       0       0
  6355 ;;      Temps:          2       0       0       0       0
  6356 ;;      Totals:         7       0       0       0       0
  6357 ;;Total ram usage:        7 bytes
  6358 ;; Hardware stack levels used:    1
  6359 ;; Hardware stack levels required when called:    1
  6360 ;; This function calls:
  6361 ;;		Nothing
  6362 ;; This function is called by:
  6363 ;;		_floor
  6364 ;;		_log
  6365 ;; This function uses a non-reentrant model
  6366 ;;
  6367                           
  6368                           
  6369                           ;psect for function _frexp
  6370  163C                     _frexp:	
  6371                           
  6372                           ;incstack = 0
  6373                           ; Regs used in _frexp: [wreg-fsr0h+status,2+status,0+btemp+1]
  6374  163C  0875               	movf	frexp@value+3,w
  6375  163D  0474               	iorwf	frexp@value+2,w
  6376  163E  0473               	iorwf	frexp@value+1,w
  6377  163F  0472               	iorwf	frexp@value,w
  6378  1640  1D03               	skipz
  6379  1641  2E4D               	goto	l2529
  6380  1642  0876               	movf	frexp@eptr,w
  6381  1643  0084               	movwf	4
  6382  1644  1383               	bcf	3,7	;select IRP bank0
  6383  1645  0180               	clrf	0
  6384  1646  0A84               	incf	4,f
  6385  1647  0180               	clrf	0
  6386  1648  01F2               	clrf	?_frexp
  6387  1649  01F3               	clrf	?_frexp+1
  6388  164A  01F4               	clrf	?_frexp+2
  6389  164B  01F5               	clrf	?_frexp+3
  6390  164C  0008               	return
  6391  164D                     l2529:	
  6392  164D  0875               	movf	frexp@value+3,w
  6393  164E  397F               	andlw	127
  6394  164F  00F7               	movwf	??_frexp
  6395  1650  01F8               	clrf	??_frexp+1
  6396  1651  1003               	clrc
  6397  1652  0DF7               	rlf	??_frexp,f
  6398  1653  0DF8               	rlf	??_frexp+1,f
  6399  1654  0876               	movf	frexp@eptr,w
  6400  1655  0084               	movwf	4
  6401  1656  0877               	movf	??_frexp,w
  6402  1657  1383               	bcf	3,7	;select IRP bank0
  6403  1658  0080               	movwf	0
  6404  1659  0A84               	incf	4,f
  6405  165A  0878               	movf	??_frexp+1,w
  6406  165B  0080               	movwf	0
  6407  165C  0D74               	rlf	frexp@value+2,w
  6408  165D  0D74               	rlf	frexp@value+2,w
  6409  165E  3901               	andlw	1
  6410  165F  00F7               	movwf	??_frexp
  6411  1660  01F8               	clrf	??_frexp+1
  6412  1661  0876               	movf	frexp@eptr,w
  6413  1662  0084               	movwf	4
  6414  1663  0877               	movf	??_frexp,w
  6415  1664  0480               	iorwf	0,f
  6416  1665  0A84               	incf	4,f
  6417  1666  0878               	movf	??_frexp+1,w
  6418  1667  0480               	iorwf	0,f
  6419  1668  0876               	movf	frexp@eptr,w
  6420  1669  0084               	movwf	4
  6421  166A  3082               	movlw	130
  6422  166B  0780               	addwf	0,f
  6423  166C  0F84               	incfsz	4,f
  6424  166D  0800               	movf	0,w
  6425  166E  1803               	skipnc
  6426  166F  0A00               	incf	0,w
  6427  1670  00FF               	movwf	127
  6428  1671  3EFF               	addlw	255
  6429  1672  0080               	movwf	0
  6430  1673  0384               	decf	4,f
  6431  1674  0875               	movf	frexp@value+3,w
  6432  1675  3980               	andlw	-128
  6433  1676  383F               	iorlw	63
  6434  1677  00F5               	movwf	frexp@value+3
  6435  1678  13F4               	bcf	frexp@value+2,7
  6436  1679  0008               	return
  6437  167A                     __end_of_frexp:	
  6438  167A                     __ptext20:	
  6439 ;; *************** function ___altofl *****************
  6440 ;; Defined at:
  6441 ;;		line 36 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\altofl.c"
  6442 ;; Parameters:    Size  Location     Type
  6443 ;;  c               4   18[BANK1 ] long 
  6444 ;; Auto vars:     Size  Location     Type
  6445 ;;  sign            1   79[BANK0 ] unsigned char 
  6446 ;; Return value:  Size  Location     Type
  6447 ;;                  4   18[BANK1 ] unsigned char 
  6448 ;; Registers used:
  6449 ;;		wreg, status,2, status,0, pclath, cstack
  6450 ;; Tracked objects:
  6451 ;;		On entry : 300/100
  6452 ;;		On exit  : 300/100
  6453 ;;		Unchanged: 0/0
  6454 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6455 ;;      Params:         0       0       4       0       0
  6456 ;;      Locals:         0       1       0       0       0
  6457 ;;      Temps:          0       0       0       0       0
  6458 ;;      Totals:         0       1       4       0       0
  6459 ;;Total ram usage:        5 bytes
  6460 ;; Hardware stack levels used:    1
  6461 ;; Hardware stack levels required when called:    2
  6462 ;; This function calls:
  6463 ;;		___flpack
  6464 ;; This function is called by:
  6465 ;;		_floor
  6466 ;; This function uses a non-reentrant model
  6467 ;;
  6468                           
  6469                           
  6470                           ;psect for function ___altofl
  6471  167A                     ___altofl:	
  6472                           
  6473                           ;incstack = 0
  6474                           ; Regs used in ___altofl: [wreg+status,2+status,0+pclath+cstack]
  6475  167A  1283               	bcf	3,5	;RP0=0, select bank0
  6476  167B  01EF               	clrf	___altofl@sign
  6477  167C  1683               	bsf	3,5	;RP0=1, select bank1
  6478  167D  1FB5               	btfss	(___altofl@c+3)^(0+128),7
  6479  167E  2E8D               	goto	l3535
  6480  167F  09B2               	comf	___altofl@c^(0+128),f
  6481  1680  09B3               	comf	(___altofl@c+1)^(0+128),f
  6482  1681  09B4               	comf	(___altofl@c+2)^(0+128),f
  6483  1682  09B5               	comf	(___altofl@c+3)^(0+128),f
  6484  1683  0AB2               	incf	___altofl@c^(0+128),f
  6485  1684  1903               	skipnz
  6486  1685  0AB3               	incf	(___altofl@c+1)^(0+128),f
  6487  1686  1903               	skipnz
  6488  1687  0AB4               	incf	(___altofl@c+2)^(0+128),f
  6489  1688  1903               	skipnz
  6490  1689  0AB5               	incf	(___altofl@c+3)^(0+128),f
  6491  168A  1283               	bcf	3,5	;RP0=0, select bank0
  6492  168B  01EF               	clrf	___altofl@sign
  6493  168C  0AEF               	incf	___altofl@sign,f
  6494  168D                     l3535:	
  6495  168D  1683               	bsf	3,5	;RP0=1, select bank1
  6496  168E  0835               	movf	(___altofl@c+3)^(0+128),w
  6497  168F  00F5               	movwf	___flpack@arg+3
  6498  1690  0834               	movf	(___altofl@c+2)^(0+128),w
  6499  1691  00F4               	movwf	___flpack@arg+2
  6500  1692  0833               	movf	(___altofl@c+1)^(0+128),w
  6501  1693  00F3               	movwf	___flpack@arg+1
  6502  1694  0832               	movf	___altofl@c^(0+128),w
  6503  1695  00F2               	movwf	___flpack@arg
  6504  1696  3096               	movlw	150
  6505  1697  00F6               	movwf	___flpack@exp
  6506  1698  1283               	bcf	3,5	;RP0=0, select bank0
  6507  1699  086F               	movf	___altofl@sign,w
  6508  169A  00F7               	movwf	___flpack@sign
  6509  169B  255B               	fcall	___flpack
  6510  169C  0875               	movf	?___flpack+3,w
  6511  169D  1683               	bsf	3,5	;RP0=1, select bank1
  6512  169E  00B5               	movwf	(?___altofl+3)^(0+128)
  6513  169F  0874               	movf	?___flpack+2,w
  6514  16A0  00B4               	movwf	(?___altofl+2)^(0+128)
  6515  16A1  0873               	movf	?___flpack+1,w
  6516  16A2  00B3               	movwf	(?___altofl+1)^(0+128)
  6517  16A3  0872               	movf	?___flpack,w
  6518  16A4  00B2               	movwf	?___altofl^(0+128)
  6519  16A5  0008               	return
  6520  16A6                     __end_of___altofl:	
  6521  16A6                     __ptext17:	
  6522 ;; *************** function ___flneg *****************
  6523 ;; Defined at:
  6524 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\flneg.c"
  6525 ;; Parameters:    Size  Location     Type
  6526 ;;  f1              4    2[COMMON] int 
  6527 ;; Auto vars:     Size  Location     Type
  6528 ;;		None
  6529 ;; Return value:  Size  Location     Type
  6530 ;;                  4    2[COMMON] int 
  6531 ;; Registers used:
  6532 ;;		wreg
  6533 ;; Tracked objects:
  6534 ;;		On entry : 300/100
  6535 ;;		On exit  : 300/100
  6536 ;;		Unchanged: 300/0
  6537 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6538 ;;      Params:         4       0       0       0       0
  6539 ;;      Locals:         0       0       0       0       0
  6540 ;;      Temps:          0       0       0       0       0
  6541 ;;      Totals:         4       0       0       0       0
  6542 ;;Total ram usage:        4 bytes
  6543 ;; Hardware stack levels used:    1
  6544 ;; Hardware stack levels required when called:    1
  6545 ;; This function calls:
  6546 ;;		Nothing
  6547 ;; This function is called by:
  6548 ;;		_ldexp
  6549 ;;		_pow
  6550 ;;		_exp
  6551 ;; This function uses a non-reentrant model
  6552 ;;
  6553                           
  6554                           
  6555                           ;psect for function ___flneg
  6556  16A6                     ___flneg:	
  6557                           
  6558                           ;incstack = 0
  6559                           ; Regs used in ___flneg: [wreg]
  6560  16A6  0875               	movf	___flneg@f1+3,w
  6561  16A7  0474               	iorwf	___flneg@f1+2,w
  6562  16A8  0473               	iorwf	___flneg@f1+1,w
  6563  16A9  0472               	iorwf	___flneg@f1,w
  6564  16AA  1903               	skipnz
  6565  16AB  0008               	return
  6566  16AC  3080               	movlw	128
  6567  16AD  06F5               	xorwf	___flneg@f1+3,f
  6568  16AE  0008               	return
  6569  16AF                     __end_of___flneg:	
  6570  16AF                     __ptext16:	
  6571 ;; *************** function _ldexp *****************
  6572 ;; Defined at:
  6573 ;;		line 277 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\frexp.c"
  6574 ;; Parameters:    Size  Location     Type
  6575 ;;  value           4   73[BANK0 ] unsigned char 
  6576 ;;  newexp          2   77[BANK0 ] int 
  6577 ;; Auto vars:     Size  Location     Type
  6578 ;;		None
  6579 ;; Return value:  Size  Location     Type
  6580 ;;                  4   73[BANK0 ] int 
  6581 ;; Registers used:
  6582 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  6583 ;; Tracked objects:
  6584 ;;		On entry : 300/0
  6585 ;;		On exit  : 300/0
  6586 ;;		Unchanged: 0/0
  6587 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6588 ;;      Params:         0       6       0       0       0
  6589 ;;      Locals:         0       0       4       0       0
  6590 ;;      Temps:          0       0       2       0       0
  6591 ;;      Totals:         0       6       6       0       0
  6592 ;;Total ram usage:       12 bytes
  6593 ;; Hardware stack levels used:    1
  6594 ;; Hardware stack levels required when called:    2
  6595 ;; This function calls:
  6596 ;;		___flge
  6597 ;;		___flneg
  6598 ;; This function is called by:
  6599 ;;		_exp
  6600 ;; This function uses a non-reentrant model
  6601 ;;
  6602                           
  6603                           
  6604                           ;psect for function _ldexp
  6605  16AF                     _ldexp:	
  6606                           
  6607                           ;incstack = 0
  6608                           ; Regs used in _ldexp: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  6609  16AF  086C               	movf	ldexp@value+3,w
  6610  16B0  046B               	iorwf	ldexp@value+2,w
  6611  16B1  046A               	iorwf	ldexp@value+1,w
  6612  16B2  0469               	iorwf	ldexp@value,w
  6613  16B3  1D03               	skipz
  6614  16B4  2EBA               	goto	l3757
  6615  16B5  01E9               	clrf	?_ldexp
  6616  16B6  01EA               	clrf	?_ldexp+1
  6617  16B7  01EB               	clrf	?_ldexp+2
  6618  16B8  01EC               	clrf	?_ldexp+3
  6619  16B9  0008               	return
  6620  16BA                     l3757:	
  6621  16BA  086C               	movf	ldexp@value+3,w
  6622  16BB  397F               	andlw	127
  6623  16BC  1683               	bsf	3,5	;RP0=1, select bank1
  6624  16BD  00A0               	movwf	??_ldexp^(0+128)
  6625  16BE  01A1               	clrf	(??_ldexp^(0+128)+1)
  6626  16BF  1003               	clrc
  6627  16C0  0DA0               	rlf	??_ldexp^(0+128),f
  6628  16C1  0DA1               	rlf	(??_ldexp^(0+128)+1),f
  6629  16C2  0820               	movf	??_ldexp^(0+128),w
  6630  16C3  1283               	bcf	3,5	;RP0=0, select bank0
  6631  16C4  07ED               	addwf	ldexp@newexp,f
  6632  16C5  1803               	skipnc
  6633  16C6  0AEE               	incf	ldexp@newexp+1,f
  6634  16C7  1683               	bsf	3,5	;RP0=1, select bank1
  6635  16C8  0821               	movf	(??_ldexp+1)^(0+128),w
  6636  16C9  1283               	bcf	3,5	;RP0=0, select bank0
  6637  16CA  07EE               	addwf	ldexp@newexp+1,f
  6638  16CB  0D6B               	rlf	ldexp@value+2,w
  6639  16CC  0D6B               	rlf	ldexp@value+2,w
  6640  16CD  3901               	andlw	1
  6641  16CE  07ED               	addwf	ldexp@newexp,f
  6642  16CF  1803               	skipnc
  6643  16D0  0AEE               	incf	ldexp@newexp+1,f
  6644  16D1  1FEE               	btfss	ldexp@newexp+1,7
  6645  16D2  2ED8               	goto	l3765
  6646  16D3  01E9               	clrf	?_ldexp
  6647  16D4  01EA               	clrf	?_ldexp+1
  6648  16D5  01EB               	clrf	?_ldexp+2
  6649  16D6  01EC               	clrf	?_ldexp+3
  6650  16D7  0008               	return
  6651  16D8                     l3765:	
  6652  16D8  086E               	movf	ldexp@newexp+1,w
  6653  16D9  3A80               	xorlw	128
  6654  16DA  00FF               	movwf	127
  6655  16DB  3081               	movlw	129
  6656  16DC  027F               	subwf	127,w
  6657  16DD  1D03               	skipz
  6658  16DE  2EE1               	goto	u3585
  6659  16DF  3000               	movlw	0
  6660  16E0  026D               	subwf	ldexp@newexp,w
  6661  16E1                     u3585:	
  6662  16E1  1C03               	skipc
  6663  16E2  2F1D               	goto	l3787
  6664  16E3  1283               	bcf	3,5	;RP0=0, select bank0
  6665  16E4  1303               	bcf	3,6	;RP1=0, select bank0
  6666  16E5  086C               	movf	ldexp@value+3,w
  6667  16E6  00F5               	movwf	___flge@ff1+3
  6668  16E7  086B               	movf	ldexp@value+2,w
  6669  16E8  00F4               	movwf	___flge@ff1+2
  6670  16E9  086A               	movf	ldexp@value+1,w
  6671  16EA  00F3               	movwf	___flge@ff1+1
  6672  16EB  0869               	movf	ldexp@value,w
  6673  16EC  00F2               	movwf	___flge@ff1
  6674  16ED  01F6               	clrf	___flge@ff2
  6675  16EE  01F7               	clrf	___flge@ff2+1
  6676  16EF  01F8               	clrf	___flge@ff2+2
  6677  16F0  01F9               	clrf	___flge@ff2+3
  6678  16F1  120A  158A  265F  160A  118A  	fcall	___flge
  6679  16F6  307F               	movlw	127
  6680  16F7  1803               	btfsc	3,0
  6681  16F8  2F14               	goto	L8
  6682  16F9  1683               	bsf	3,5	;RP0=1, select bank1
  6683  16FA  1303               	bcf	3,6	;RP1=0, select bank1
  6684  16FB  00A5               	movwf	(_ldexp$686+3)^(0+128)
  6685  16FC  00A4               	movwf	(_ldexp$686+2)^(0+128)
  6686  16FD  30FE               	movlw	254
  6687  16FE  00A3               	movwf	(_ldexp$686+1)^(0+128)
  6688  16FF  30F7               	movlw	247
  6689  1700  00A2               	movwf	_ldexp$686^(0+128)
  6690  1701  0825               	movf	(_ldexp$686+3)^(0+128),w
  6691  1702  00F5               	movwf	___flneg@f1+3
  6692  1703  0824               	movf	(_ldexp$686+2)^(0+128),w
  6693  1704  00F4               	movwf	___flneg@f1+2
  6694  1705  0823               	movf	(_ldexp$686+1)^(0+128),w
  6695  1706  00F3               	movwf	___flneg@f1+1
  6696  1707  0822               	movf	_ldexp$686^(0+128),w
  6697  1708  00F2               	movwf	___flneg@f1
  6698  1709  26A6               	fcall	___flneg
  6699  170A  0875               	movf	?___flneg+3,w
  6700  170B  1283               	bcf	3,5	;RP0=0, select bank0
  6701  170C  00EC               	movwf	?_ldexp+3
  6702  170D  0874               	movf	?___flneg+2,w
  6703  170E  00EB               	movwf	?_ldexp+2
  6704  170F  0873               	movf	?___flneg+1,w
  6705  1710  00EA               	movwf	?_ldexp+1
  6706  1711  0872               	movf	?___flneg,w
  6707  1712  00E9               	movwf	?_ldexp
  6708  1713  0008               	return
  6709  1714                     L8:	
  6710  1714  1283               	bcf	3,5	;RP0=0, select bank0
  6711  1715  1303               	bcf	3,6	;RP1=0, select bank0
  6712  1716  00EC               	movwf	?_ldexp+3
  6713  1717  00EB               	movwf	?_ldexp+2
  6714  1718  30FE               	movlw	254
  6715  1719  00EA               	movwf	?_ldexp+1
  6716  171A  30F7               	movlw	247
  6717  171B  00E9               	movwf	?_ldexp
  6718  171C  0008               	return
  6719  171D                     l3787:	
  6720  171D  1283               	bcf	3,5	;RP0=0, select bank0
  6721  171E  1303               	bcf	3,6	;RP1=0, select bank0
  6722  171F  086E               	movf	ldexp@newexp+1,w
  6723  1720  1683               	bsf	3,5	;RP0=1, select bank1
  6724  1721  00A1               	movwf	(??_ldexp^(0+128)+1)
  6725  1722  1283               	bcf	3,5	;RP0=0, select bank0
  6726  1723  086D               	movf	ldexp@newexp,w
  6727  1724  1683               	bsf	3,5	;RP0=1, select bank1
  6728  1725  00A0               	movwf	??_ldexp^(0+128)
  6729  1726  0D21               	rlf	(??_ldexp^(0+128)+1),w
  6730  1727  0CA1               	rrf	(??_ldexp^(0+128)+1),f
  6731  1728  0CA0               	rrf	??_ldexp^(0+128),f
  6732  1729  1283               	bcf	3,5	;RP0=0, select bank0
  6733  172A  086C               	movf	ldexp@value+3,w
  6734  172B  1683               	bsf	3,5	;RP0=1, select bank1
  6735  172C  0620               	xorwf	??_ldexp^(0+128),w
  6736  172D  3980               	andlw	-128
  6737  172E  0620               	xorwf	??_ldexp^(0+128),w
  6738  172F  1283               	bcf	3,5	;RP0=0, select bank0
  6739  1730  00EC               	movwf	ldexp@value+3
  6740  1731  086D               	movf	ldexp@newexp,w
  6741  1732  3901               	andlw	1
  6742  1733  1683               	bsf	3,5	;RP0=1, select bank1
  6743  1734  00A0               	movwf	??_ldexp^(0+128)
  6744  1735  0CA0               	rrf	??_ldexp^(0+128),f
  6745  1736  0CA0               	rrf	??_ldexp^(0+128),f
  6746  1737  1283               	bcf	3,5	;RP0=0, select bank0
  6747  1738  086B               	movf	ldexp@value+2,w
  6748  1739  1683               	bsf	3,5	;RP0=1, select bank1
  6749  173A  0620               	xorwf	??_ldexp^(0+128),w
  6750  173B  397F               	andlw	-129
  6751  173C  0620               	xorwf	??_ldexp^(0+128),w
  6752  173D  1283               	bcf	3,5	;RP0=0, select bank0
  6753  173E  00EB               	movwf	ldexp@value+2
  6754  173F  0008               	return
  6755  1740                     __end_of_ldexp:	
  6756  1740                     __ptext10:	
  6757 ;; *************** function _lcd_begin *****************
  6758 ;; Defined at:
  6759 ;;		line 430 in file "../../../lib/lcd44780.c"
  6760 ;; Parameters:    Size  Location     Type
  6761 ;;  lines           1    wreg     unsigned char 
  6762 ;;  dotsize         1    7[COMMON] unsigned char 
  6763 ;; Auto vars:     Size  Location     Type
  6764 ;;  lines           1    0[BANK0 ] unsigned char 
  6765 ;; Return value:  Size  Location     Type
  6766 ;;		None               void
  6767 ;; Registers used:
  6768 ;;		wreg, status,2, status,0, pclath, cstack
  6769 ;; Tracked objects:
  6770 ;;		On entry : 300/100
  6771 ;;		On exit  : 0/0
  6772 ;;		Unchanged: 0/0
  6773 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6774 ;;      Params:         1       0       0       0       0
  6775 ;;      Locals:         0       1       0       0       0
  6776 ;;      Temps:          2       0       0       0       0
  6777 ;;      Totals:         3       1       0       0       0
  6778 ;;Total ram usage:        4 bytes
  6779 ;; Hardware stack levels used:    1
  6780 ;; Hardware stack levels required when called:    4
  6781 ;; This function calls:
  6782 ;;		_lcd_command
  6783 ;;		_lcd_write4bits
  6784 ;; This function is called by:
  6785 ;;		_main
  6786 ;; This function uses a non-reentrant model
  6787 ;;
  6788                           
  6789                           
  6790                           ;psect for function _lcd_begin
  6791  1740                     _lcd_begin:	
  6792                           
  6793                           ;incstack = 0
  6794                           ; Regs used in _lcd_begin: [wreg+status,2+status,0+pclath+cstack]
  6795                           ;lcd_begin@lines stored from wreg
  6796  1740  1283               	bcf	3,5	;RP0=0, select bank0
  6797  1741  00A0               	movwf	lcd_begin@lines
  6798                           
  6799                           ;lcd44780.c: 431: if(lines > 1)
  6800  1742  3002               	movlw	2
  6801  1743  0220               	subwf	lcd_begin@lines,w
  6802  1744  1803               	btfsc	3,0
  6803                           
  6804                           ;lcd44780.c: 432: LCD_function |= 0x08;
  6805  1745  15FA               	bsf	_LCD_function,3
  6806                           
  6807                           ;lcd44780.c: 435: LCD_lines = lines;
  6808  1746  0820               	movf	lcd_begin@lines,w
  6809  1747  1683               	bsf	3,5	;RP0=1, select bank3
  6810  1748  1703               	bsf	3,6	;RP1=1, select bank3
  6811  1749  009F               	movwf	_LCD_lines^(0+384)
  6812                           
  6813                           ;lcd44780.c: 439: if((dotsize != 0) && (lines == 1))
  6814  174A  0877               	movf	lcd_begin@dotsize,w
  6815  174B  1903               	btfsc	3,2
  6816  174C  2F52               	goto	l4153
  6817  174D  1283               	bcf	3,5	;RP0=0, select bank0
  6818  174E  1303               	bcf	3,6	;RP1=0, select bank0
  6819  174F  0320               	decf	lcd_begin@lines,w
  6820  1750  1903               	btfsc	3,2
  6821                           
  6822                           ;lcd44780.c: 440: LCD_function |= 0x04;
  6823  1751  157A               	bsf	_LCD_function,2
  6824  1752                     l4153:	
  6825                           
  6826                           ;lcd44780.c: 442: _delay((unsigned long)((15)*(20000000/4000.0)));
  6827  1752  3062               	movlw	98
  6828  1753  00F9               	movwf	??_lcd_begin+1
  6829  1754  3065               	movlw	101
  6830  1755  00F8               	movwf	??_lcd_begin
  6831  1756                     u4107:	
  6832  1756  0BF8               	decfsz	??_lcd_begin,f
  6833  1757  2F56               	goto	u4107
  6834  1758  0BF9               	decfsz	??_lcd_begin+1,f
  6835  1759  2F56               	goto	u4107
  6836  175A  2F5B               	nop2
  6837                           
  6838                           ;lcd44780.c: 445: RB2 = 0;
  6839  175B  1283               	bcf	3,5	;RP0=0, select bank0
  6840  175C  1303               	bcf	3,6	;RP1=0, select bank0
  6841  175D  1106               	bcf	6,2	;volatile
  6842                           
  6843                           ;lcd44780.c: 446: RB3 = 0;
  6844  175E  1186               	bcf	6,3	;volatile
  6845                           
  6846                           ;lcd44780.c: 449: if(!(LCD_function & 0x10)) {
  6847  175F  1A7A               	btfsc	_LCD_function,4
  6848  1760  2F85               	goto	l4171
  6849                           
  6850                           ;lcd44780.c: 453: lcd_write4bits(0x03);
  6851  1761  3003               	movlw	3
  6852  1762  27C6  160A  118A   	fcall	_lcd_write4bits
  6853                           
  6854                           ;lcd44780.c: 454: _delay((unsigned long)((5)*(20000000/4000.0)));
  6855  1765  3021               	movlw	33
  6856  1766  00F9               	movwf	??_lcd_begin+1
  6857  1767  3076               	movlw	118
  6858  1768  00F8               	movwf	??_lcd_begin
  6859  1769                     u4117:	
  6860  1769  0BF8               	decfsz	??_lcd_begin,f
  6861  176A  2F69               	goto	u4117
  6862  176B  0BF9               	decfsz	??_lcd_begin+1,f
  6863  176C  2F69               	goto	u4117
  6864  176D  0000               	nop
  6865                           
  6866                           ;lcd44780.c: 456: lcd_write4bits(0x03);
  6867  176E  3003               	movlw	3
  6868  176F  27C6  160A  118A   	fcall	_lcd_write4bits
  6869                           
  6870                           ;lcd44780.c: 457: _delay((unsigned long)((150)*(20000000/4000000.0)));
  6871  1772  30F9               	movlw	249
  6872  1773  00F8               	movwf	??_lcd_begin
  6873  1774                     u4127:	
  6874  1774  0BF8               	decfsz	??_lcd_begin,f
  6875  1775  2F74               	goto	u4127
  6876  1776  2F77               	nop2	;nop
  6877                           
  6878                           ;lcd44780.c: 459: lcd_write4bits(0x03);
  6879  1777  3003               	movlw	3
  6880  1778  27C6  160A  118A   	fcall	_lcd_write4bits
  6881                           
  6882                           ;lcd44780.c: 460: _delay((unsigned long)((150)*(20000000/4000000.0)));
  6883  177B  30F9               	movlw	249
  6884  177C  00F8               	movwf	??_lcd_begin
  6885  177D                     u4137:	
  6886  177D  0BF8               	decfsz	??_lcd_begin,f
  6887  177E  2F7D               	goto	u4137
  6888  177F  2F80               	nop2	;nop
  6889                           
  6890                           ;lcd44780.c: 462: lcd_write4bits(0x02);
  6891  1780  3002               	movlw	2
  6892  1781  27C6  160A  118A   	fcall	_lcd_write4bits
  6893                           
  6894                           ;lcd44780.c: 463: }
  6895  1784  2FA6               	goto	l4179
  6896  1785                     l4171:	
  6897                           
  6898                           ;lcd44780.c: 465: else {
  6899                           ;lcd44780.c: 469: lcd_command(0x20 | LCD_function);
  6900  1785  087A               	movf	_LCD_function,w
  6901  1786  3820               	iorlw	32
  6902  1787  2624  160A  118A   	fcall	_lcd_command
  6903                           
  6904                           ;lcd44780.c: 470: _delay((unsigned long)((5)*(20000000/4000.0)));
  6905  178A  3021               	movlw	33
  6906  178B  00F9               	movwf	??_lcd_begin+1
  6907  178C  3076               	movlw	118
  6908  178D  00F8               	movwf	??_lcd_begin
  6909  178E                     u4147:	
  6910  178E  0BF8               	decfsz	??_lcd_begin,f
  6911  178F  2F8E               	goto	u4147
  6912  1790  0BF9               	decfsz	??_lcd_begin+1,f
  6913  1791  2F8E               	goto	u4147
  6914  1792  0000               	nop
  6915                           
  6916                           ;lcd44780.c: 473: lcd_command(0x20 | LCD_function);
  6917  1793  087A               	movf	_LCD_function,w
  6918  1794  3820               	iorlw	32
  6919  1795  2624  160A  118A   	fcall	_lcd_command
  6920                           
  6921                           ;lcd44780.c: 474: _delay((unsigned long)((5)*(20000000/4000.0)));
  6922  1798  3021               	movlw	33
  6923  1799  00F9               	movwf	??_lcd_begin+1
  6924  179A  3076               	movlw	118
  6925  179B  00F8               	movwf	??_lcd_begin
  6926  179C                     u4157:	
  6927  179C  0BF8               	decfsz	??_lcd_begin,f
  6928  179D  2F9C               	goto	u4157
  6929  179E  0BF9               	decfsz	??_lcd_begin+1,f
  6930  179F  2F9C               	goto	u4157
  6931  17A0  0000               	nop
  6932                           
  6933                           ;lcd44780.c: 478: lcd_command(0x20 | LCD_function);
  6934  17A1  087A               	movf	_LCD_function,w
  6935  17A2  3820               	iorlw	32
  6936  17A3  2624  160A  118A   	fcall	_lcd_command
  6937  17A6                     l4179:	
  6938                           
  6939                           ;lcd44780.c: 479: }
  6940                           ;lcd44780.c: 482: lcd_command(0x20 | LCD_function);
  6941  17A6  087A               	movf	_LCD_function,w
  6942  17A7  3820               	iorlw	32
  6943  17A8  2624  160A  118A   	fcall	_lcd_command
  6944                           
  6945                           ;lcd44780.c: 485: LCD_ctrl = 0x04 | 0x00 | 0x00;
  6946  17AB  3004               	movlw	4
  6947  17AC  1683               	bsf	3,5	;RP0=1, select bank3
  6948  17AD  1703               	bsf	3,6	;RP1=1, select bank3
  6949  17AE  009E               	movwf	_LCD_ctrl^(0+384)
  6950                           
  6951                           ;lcd44780.c: 486: lcd_command(0x08 | LCD_ctrl);
  6952  17AF  3808               	iorlw	8
  6953  17B0  2624  160A  118A   	fcall	_lcd_command
  6954                           
  6955                           ;lcd44780.c: 489: lcd_command(0x01);
  6956  17B3  3001               	movlw	1
  6957  17B4  2624  160A  118A   	fcall	_lcd_command
  6958                           
  6959                           ;lcd44780.c: 490: _delay((unsigned long)((2)*(20000000/4000.0)));
  6960  17B7  300D               	movlw	13
  6961  17B8  00F9               	movwf	??_lcd_begin+1
  6962  17B9  30FB               	movlw	251
  6963  17BA  00F8               	movwf	??_lcd_begin
  6964  17BB                     u4167:	
  6965  17BB  0BF8               	decfsz	??_lcd_begin,f
  6966  17BC  2FBB               	goto	u4167
  6967  17BD  0BF9               	decfsz	??_lcd_begin+1,f
  6968  17BE  2FBB               	goto	u4167
  6969  17BF  2FC0               	nop2
  6970                           
  6971                           ;lcd44780.c: 493: LCD_mode = 0x02 | 0x00;
  6972  17C0  3002               	movlw	2
  6973  17C1  1683               	bsf	3,5	;RP0=1, select bank3
  6974  17C2  1703               	bsf	3,6	;RP1=1, select bank3
  6975  17C3  00A0               	movwf	_LCD_mode^(0+384)
  6976                           
  6977                           ;lcd44780.c: 495: lcd_command(0x04 | LCD_mode);
  6978  17C4  3804               	iorlw	4
  6979  17C5  2E24               	ljmp	_lcd_command
  6980  17C6                     __end_of_lcd_begin:	
  6981  17C6                     __ptext48:	
  6982 ;; *************** function _lcd_write4bits *****************
  6983 ;; Defined at:
  6984 ;;		line 57 in file "../../../lib/lcd44780.c"
  6985 ;; Parameters:    Size  Location     Type
  6986 ;;  value           1    wreg     unsigned char 
  6987 ;; Auto vars:     Size  Location     Type
  6988 ;;  value           1    3[COMMON] unsigned char 
  6989 ;; Return value:  Size  Location     Type
  6990 ;;		None               void
  6991 ;; Registers used:
  6992 ;;		wreg
  6993 ;; Tracked objects:
  6994 ;;		On entry : 0/0
  6995 ;;		On exit  : 0/0
  6996 ;;		Unchanged: 0/0
  6997 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6998 ;;      Params:         0       0       0       0       0
  6999 ;;      Locals:         1       0       0       0       0
  7000 ;;      Temps:          1       0       0       0       0
  7001 ;;      Totals:         2       0       0       0       0
  7002 ;;Total ram usage:        2 bytes
  7003 ;; Hardware stack levels used:    1
  7004 ;; Hardware stack levels required when called:    1
  7005 ;; This function calls:
  7006 ;;		Nothing
  7007 ;; This function is called by:
  7008 ;;		_lcd_send
  7009 ;;		_lcd_begin
  7010 ;; This function uses a non-reentrant model
  7011 ;;
  7012                           
  7013                           
  7014                           ;psect for function _lcd_write4bits
  7015  17C6                     _lcd_write4bits:	
  7016                           
  7017                           ;incstack = 0
  7018                           ; Regs used in _lcd_write4bits: [wreg]
  7019                           ;lcd_write4bits@value stored from wreg
  7020  17C6  00F3               	movwf	lcd_write4bits@value
  7021                           
  7022                           ;lcd44780.c: 62: RB4 = value & 1;
  7023  17C7  1C73               	btfss	lcd_write4bits@value,0
  7024  17C8  2FCD               	goto	u2990
  7025  17C9  1283               	bcf	3,5	;RP0=0, select bank0
  7026  17CA  1303               	bcf	3,6	;RP1=0, select bank0
  7027  17CB  1606               	bsf	6,4	;volatile
  7028  17CC  2FD0               	goto	u3004
  7029  17CD                     u2990:	
  7030  17CD  1283               	bcf	3,5	;RP0=0, select bank0
  7031  17CE  1303               	bcf	3,6	;RP1=0, select bank0
  7032  17CF  1206               	bcf	6,4	;volatile
  7033  17D0                     u3004:	
  7034                           
  7035                           ;lcd44780.c: 63: value >>= 1;
  7036  17D0  1003               	clrc
  7037  17D1  0CF3               	rrf	lcd_write4bits@value,f
  7038                           
  7039                           ;lcd44780.c: 64: RB5 = value & 1;
  7040  17D2  1C73               	btfss	lcd_write4bits@value,0
  7041  17D3  2FD8               	goto	u3010
  7042  17D4  1283               	bcf	3,5	;RP0=0, select bank0
  7043  17D5  1303               	bcf	3,6	;RP1=0, select bank0
  7044  17D6  1686               	bsf	6,5	;volatile
  7045  17D7  2FDB               	goto	u3024
  7046  17D8                     u3010:	
  7047  17D8  1283               	bcf	3,5	;RP0=0, select bank0
  7048  17D9  1303               	bcf	3,6	;RP1=0, select bank0
  7049  17DA  1286               	bcf	6,5	;volatile
  7050  17DB                     u3024:	
  7051                           
  7052                           ;lcd44780.c: 65: value >>= 1;
  7053  17DB  1003               	clrc
  7054  17DC  0CF3               	rrf	lcd_write4bits@value,f
  7055                           
  7056                           ;lcd44780.c: 66: RB6 = value & 1;
  7057  17DD  1C73               	btfss	lcd_write4bits@value,0
  7058  17DE  2FE3               	goto	u3030
  7059  17DF  1283               	bcf	3,5	;RP0=0, select bank0
  7060  17E0  1303               	bcf	3,6	;RP1=0, select bank0
  7061  17E1  1706               	bsf	6,6	;volatile
  7062  17E2  2FE6               	goto	u3044
  7063  17E3                     u3030:	
  7064  17E3  1283               	bcf	3,5	;RP0=0, select bank0
  7065  17E4  1303               	bcf	3,6	;RP1=0, select bank0
  7066  17E5  1306               	bcf	6,6	;volatile
  7067  17E6                     u3044:	
  7068                           
  7069                           ;lcd44780.c: 67: value >>= 1;
  7070  17E6  1003               	clrc
  7071  17E7  0CF3               	rrf	lcd_write4bits@value,f
  7072                           
  7073                           ;lcd44780.c: 68: RB7 = value & 1;
  7074  17E8  1C73               	btfss	lcd_write4bits@value,0
  7075  17E9  2FEE               	goto	u3050
  7076  17EA  1283               	bcf	3,5	;RP0=0, select bank0
  7077  17EB  1303               	bcf	3,6	;RP1=0, select bank0
  7078  17EC  1786               	bsf	6,7	;volatile
  7079  17ED  2FF1               	goto	u3064
  7080  17EE                     u3050:	
  7081  17EE  1283               	bcf	3,5	;RP0=0, select bank0
  7082  17EF  1303               	bcf	3,6	;RP1=0, select bank0
  7083  17F0  1386               	bcf	6,7	;volatile
  7084  17F1                     u3064:	
  7085                           
  7086                           ;lcd44780.c: 74: RB3 = 1; _delay((unsigned long)((4)*(20000000/4000000.0))); RB3 = 0; _d
      +                          elay((unsigned long)((100)*(20000000/4000000.0)));;
  7087  17F1  1586               	bsf	6,3	;volatile
  7088  17F2  3006               	movlw	6
  7089  17F3  00F2               	movwf	??_lcd_write4bits
  7090  17F4                     u4297:	
  7091  17F4  0BF2               	decfsz	??_lcd_write4bits,f
  7092  17F5  2FF4               	goto	u4297
  7093  17F6  0000               	nop
  7094  17F7  1283               	bcf	3,5	;RP0=0, select bank0
  7095  17F8  1303               	bcf	3,6	;RP1=0, select bank0
  7096  17F9  1186               	bcf	6,3	;volatile
  7097  17FA  30A6               	movlw	166
  7098  17FB  00F2               	movwf	??_lcd_write4bits
  7099  17FC                     u4307:	
  7100  17FC  0BF2               	decfsz	??_lcd_write4bits,f
  7101  17FD  2FFC               	goto	u4307
  7102  17FE  0000               	nop
  7103  17FF  0008               	return
  7104  1800                     __end_of_lcd_write4bits:	
  7105                           
  7106                           	psect	text27
  7107  0810                     __ptext27:	
  7108 ;; *************** function _eval_poly *****************
  7109 ;; Defined at:
  7110 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\evalpoly.c"
  7111 ;; Parameters:    Size  Location     Type
  7112 ;;  x               4   57[BANK0 ] PTR int 
  7113 ;;  d               1   61[BANK0 ] PTR const 
  7114 ;;		 -> exp@coeff(40), log@coeff(36), 
  7115 ;;  n               2   62[BANK0 ] int 
  7116 ;; Auto vars:     Size  Location     Type
  7117 ;;  res             4   69[BANK0 ] int 
  7118 ;; Return value:  Size  Location     Type
  7119 ;;                  4   57[BANK0 ] int 
  7120 ;; Registers used:
  7121 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  7122 ;; Tracked objects:
  7123 ;;		On entry : 300/0
  7124 ;;		On exit  : 300/0
  7125 ;;		Unchanged: 0/0
  7126 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7127 ;;      Params:         0       7       0       0       0
  7128 ;;      Locals:         0       4       0       0       0
  7129 ;;      Temps:          0       5       0       0       0
  7130 ;;      Totals:         0      16       0       0       0
  7131 ;;Total ram usage:       16 bytes
  7132 ;; Hardware stack levels used:    1
  7133 ;; Hardware stack levels required when called:    3
  7134 ;; This function calls:
  7135 ;;		___fladd
  7136 ;;		___flmul
  7137 ;; This function is called by:
  7138 ;;		_log
  7139 ;;		_exp
  7140 ;; This function uses a non-reentrant model
  7141 ;;
  7142                           
  7143                           
  7144                           ;psect for function _eval_poly
  7145  0810                     _eval_poly:	
  7146                           
  7147                           ;incstack = 0
  7148                           ; Regs used in _eval_poly: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  7149  0810  085E               	movf	eval_poly@n,w
  7150  0811  00E0               	movwf	??_eval_poly
  7151  0812  3001               	movlw	1
  7152  0813  1003               	clrc
  7153  0814                     L10:	
  7154  0814  0DE0               	rlf	??_eval_poly,f
  7155  0815  3EFF               	addlw	-1
  7156  0816  1003               	clrc
  7157  0817  1D03               	skipz
  7158  0818  2814               	goto	L10
  7159  0819  0D60               	rlf	??_eval_poly,w
  7160  081A  075D               	addwf	eval_poly@d,w
  7161  081B  0084               	movwf	4
  7162  081C  120A  118A  2030  120A  158A  	fcall	stringdir
  7163  0821  00E1               	movwf	??_eval_poly+1
  7164  0822  120A  118A  2030  120A  158A  	fcall	stringdir
  7165  0827  00E2               	movwf	??_eval_poly+2
  7166  0828  120A  118A  2030  120A  158A  	fcall	stringdir
  7167  082D  00E3               	movwf	??_eval_poly+3
  7168  082E  120A  118A  2030  120A  158A  	fcall	stringdir
  7169  0833  00E4               	movwf	??_eval_poly+4
  7170  0834  00E8               	movwf	eval_poly@res+3
  7171  0835  0863               	movf	??_eval_poly+3,w
  7172  0836  00E7               	movwf	eval_poly@res+2
  7173  0837  0862               	movf	??_eval_poly+2,w
  7174  0838  00E6               	movwf	eval_poly@res+1
  7175  0839  0861               	movf	??_eval_poly+1,w
  7176  083A                     L12:	
  7177  083A  00E5               	movwf	eval_poly@res
  7178  083B  085E               	movf	eval_poly@n,w
  7179  083C  045F               	iorwf	eval_poly@n+1,w
  7180  083D  1903               	btfsc	3,2
  7181  083E  2894               	goto	l3799
  7182  083F  30FF               	movlw	-1
  7183  0840  07DE               	addwf	eval_poly@n,f
  7184  0841  1C03               	skipc
  7185  0842  03DF               	decf	eval_poly@n+1,f
  7186  0843  085E               	movf	eval_poly@n,w
  7187  0844  00E0               	movwf	??_eval_poly
  7188  0845  3001               	movlw	1
  7189  0846  1003               	clrc
  7190  0847                     L11:	
  7191  0847  0DE0               	rlf	??_eval_poly,f
  7192  0848  3EFF               	addlw	-1
  7193  0849  1003               	clrc
  7194  084A  1D03               	skipz
  7195  084B  2847               	goto	L11
  7196  084C  0D60               	rlf	??_eval_poly,w
  7197  084D  075D               	addwf	eval_poly@d,w
  7198  084E  0084               	movwf	4
  7199  084F  120A  118A  2030  120A  158A  	fcall	stringdir
  7200  0854  00E1               	movwf	??_eval_poly+1
  7201  0855  120A  118A  2030  120A  158A  	fcall	stringdir
  7202  085A  00E2               	movwf	??_eval_poly+2
  7203  085B  120A  118A  2030  120A  158A  	fcall	stringdir
  7204  0860  00E3               	movwf	??_eval_poly+3
  7205  0861  120A  118A  2030  120A  158A  	fcall	stringdir
  7206  0866  00E4               	movwf	??_eval_poly+4
  7207  0867  00CD               	movwf	___fladd@f1+3
  7208  0868  0863               	movf	??_eval_poly+3,w
  7209  0869  00CC               	movwf	___fladd@f1+2
  7210  086A  0862               	movf	??_eval_poly+2,w
  7211  086B  00CB               	movwf	___fladd@f1+1
  7212  086C  0861               	movf	??_eval_poly+1,w
  7213  086D  00CA               	movwf	___fladd@f1
  7214  086E  0868               	movf	eval_poly@res+3,w
  7215  086F  00BA               	movwf	___flmul@f1+3
  7216  0870  0867               	movf	eval_poly@res+2,w
  7217  0871  00B9               	movwf	___flmul@f1+2
  7218  0872  0866               	movf	eval_poly@res+1,w
  7219  0873  00B8               	movwf	___flmul@f1+1
  7220  0874  0865               	movf	eval_poly@res,w
  7221  0875  00B7               	movwf	___flmul@f1
  7222  0876  085C               	movf	eval_poly@x+3,w
  7223  0877  00BE               	movwf	___flmul@f2+3
  7224  0878  085B               	movf	eval_poly@x+2,w
  7225  0879  00BD               	movwf	___flmul@f2+2
  7226  087A  085A               	movf	eval_poly@x+1,w
  7227  087B  00BC               	movwf	___flmul@f2+1
  7228  087C  0859               	movf	eval_poly@x,w
  7229  087D  00BB               	movwf	___flmul@f2
  7230  087E  25C7  120A  158A   	fcall	___flmul
  7231  0881  083A               	movf	?___flmul+3,w
  7232  0882  00D1               	movwf	___fladd@f2+3
  7233  0883  0839               	movf	?___flmul+2,w
  7234  0884  00D0               	movwf	___fladd@f2+2
  7235  0885  0838               	movf	?___flmul+1,w
  7236  0886  00CF               	movwf	___fladd@f2+1
  7237  0887  0837               	movf	?___flmul,w
  7238  0888  00CE               	movwf	___fladd@f2
  7239  0889  209D  120A  158A   	fcall	___fladd
  7240  088C  084D               	movf	?___fladd+3,w
  7241  088D  00E8               	movwf	eval_poly@res+3
  7242  088E  084C               	movf	?___fladd+2,w
  7243  088F  00E7               	movwf	eval_poly@res+2
  7244  0890  084B               	movf	?___fladd+1,w
  7245  0891  00E6               	movwf	eval_poly@res+1
  7246  0892  084A               	movf	?___fladd,w
  7247  0893  283A               	goto	L12
  7248  0894                     l3799:	
  7249  0894  0868               	movf	eval_poly@res+3,w
  7250  0895  00DC               	movwf	?_eval_poly+3
  7251  0896  0867               	movf	eval_poly@res+2,w
  7252  0897  00DB               	movwf	?_eval_poly+2
  7253  0898  0866               	movf	eval_poly@res+1,w
  7254  0899  00DA               	movwf	?_eval_poly+1
  7255  089A  0865               	movf	eval_poly@res,w
  7256  089B  00D9               	movwf	?_eval_poly
  7257  089C  0008               	return
  7258  089D                     __end_of_eval_poly:	
  7259  089D                     __ptext29:	
  7260 ;; *************** function ___fladd *****************
  7261 ;; Defined at:
  7262 ;;		line 88 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\fladd.c"
  7263 ;; Parameters:    Size  Location     Type
  7264 ;;  f1              4   42[BANK0 ] unsigned char 
  7265 ;;  f2              4   46[BANK0 ] unsigned char 
  7266 ;; Auto vars:     Size  Location     Type
  7267 ;;  exp1            1   56[BANK0 ] unsigned char 
  7268 ;;  exp2            1   55[BANK0 ] unsigned char 
  7269 ;;  sign            1   54[BANK0 ] unsigned char 
  7270 ;; Return value:  Size  Location     Type
  7271 ;;                  4   42[BANK0 ] unsigned char 
  7272 ;; Registers used:
  7273 ;;		wreg, status,2, status,0, pclath, cstack
  7274 ;; Tracked objects:
  7275 ;;		On entry : 300/0
  7276 ;;		On exit  : 300/0
  7277 ;;		Unchanged: 0/0
  7278 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7279 ;;      Params:         0       8       0       0       0
  7280 ;;      Locals:         0       3       0       0       0
  7281 ;;      Temps:          0       4       0       0       0
  7282 ;;      Totals:         0      15       0       0       0
  7283 ;;Total ram usage:       15 bytes
  7284 ;; Hardware stack levels used:    1
  7285 ;; Hardware stack levels required when called:    2
  7286 ;; This function calls:
  7287 ;;		___flpack
  7288 ;; This function is called by:
  7289 ;;		_floor
  7290 ;;		___flsub
  7291 ;;		_log
  7292 ;;		_eval_poly
  7293 ;; This function uses a non-reentrant model
  7294 ;;
  7295                           
  7296                           
  7297                           ;psect for function ___fladd
  7298  089D                     ___fladd:	
  7299                           
  7300                           ;incstack = 0
  7301                           ; Regs used in ___fladd: [wreg+status,2+status,0+pclath+cstack]
  7302  089D  084A               	movf	___fladd@f1,w
  7303  089E  00D2               	movwf	??___fladd
  7304  089F  084B               	movf	___fladd@f1+1,w
  7305  08A0  00D3               	movwf	??___fladd+1
  7306  08A1  084C               	movf	___fladd@f1+2,w
  7307  08A2  00D4               	movwf	??___fladd+2
  7308  08A3  084D               	movf	___fladd@f1+3,w
  7309  08A4  00D5               	movwf	??___fladd+3
  7310  08A5  1003               	clrc
  7311  08A6  0D54               	rlf	??___fladd+2,w
  7312  08A7  0D55               	rlf	??___fladd+3,w
  7313  08A8  00D8               	movwf	___fladd@exp1
  7314  08A9  084E               	movf	___fladd@f2,w
  7315  08AA  00D2               	movwf	??___fladd
  7316  08AB  084F               	movf	___fladd@f2+1,w
  7317  08AC  00D3               	movwf	??___fladd+1
  7318  08AD  0850               	movf	___fladd@f2+2,w
  7319  08AE  00D4               	movwf	??___fladd+2
  7320  08AF  0851               	movf	___fladd@f2+3,w
  7321  08B0  00D5               	movwf	??___fladd+3
  7322  08B1  1003               	clrc
  7323  08B2  0D54               	rlf	??___fladd+2,w
  7324  08B3  0D55               	rlf	??___fladd+3,w
  7325  08B4  00D7               	movwf	___fladd@exp2
  7326  08B5  0858               	movf	___fladd@exp1,w
  7327  08B6  1903               	btfsc	3,2
  7328  08B7  28C4               	goto	l3545
  7329  08B8  0857               	movf	___fladd@exp2,w
  7330  08B9  0258               	subwf	___fladd@exp1,w
  7331  08BA  0857               	movf	___fladd@exp2,w
  7332  08BB  1803               	skipnc
  7333  08BC  28CE               	goto	L13
  7334  08BD  00D2               	movwf	??___fladd
  7335  08BE  0858               	movf	___fladd@exp1,w
  7336  08BF  02D2               	subwf	??___fladd,f
  7337  08C0  3021               	movlw	33
  7338  08C1  0252               	subwf	??___fladd,w
  7339  08C2  1C03               	skipc
  7340  08C3  28CD               	goto	l3549
  7341  08C4                     l3545:	
  7342  08C4  0851               	movf	___fladd@f2+3,w
  7343  08C5  00CD               	movwf	?___fladd+3
  7344  08C6  0850               	movf	___fladd@f2+2,w
  7345  08C7  00CC               	movwf	?___fladd+2
  7346  08C8  084F               	movf	___fladd@f2+1,w
  7347  08C9  00CB               	movwf	?___fladd+1
  7348  08CA  084E               	movf	___fladd@f2,w
  7349  08CB  00CA               	movwf	?___fladd
  7350  08CC  0008               	return
  7351  08CD                     l3549:	
  7352  08CD  0857               	movf	___fladd@exp2,w
  7353  08CE                     L13:	
  7354  08CE  1903               	btfsc	3,2
  7355  08CF  0008               	return
  7356  08D0  0858               	movf	___fladd@exp1,w
  7357  08D1  0257               	subwf	___fladd@exp2,w
  7358  08D2  1803               	skipnc
  7359  08D3  28DC               	goto	l3555
  7360  08D4  0858               	movf	___fladd@exp1,w
  7361  08D5  00D2               	movwf	??___fladd
  7362  08D6  0857               	movf	___fladd@exp2,w
  7363  08D7  02D2               	subwf	??___fladd,f
  7364  08D8  3021               	movlw	33
  7365  08D9  0252               	subwf	??___fladd,w
  7366  08DA  1803               	btfsc	3,0
  7367  08DB  0008               	return
  7368  08DC                     l3555:	
  7369  08DC  3006               	movlw	6
  7370  08DD  00D6               	movwf	___fladd@sign
  7371  08DE  1BCD               	btfsc	___fladd@f1+3,7
  7372  08DF  17D6               	bsf	___fladd@sign,7
  7373  08E0  1BD1               	btfsc	___fladd@f2+3,7
  7374  08E1  1756               	bsf	___fladd@sign,6
  7375  08E2  17CC               	bsf	___fladd@f1+2,7
  7376  08E3  01CD               	clrf	___fladd@f1+3
  7377  08E4  17D0               	bsf	___fladd@f2+2,7
  7378  08E5  01D1               	clrf	___fladd@f2+3
  7379  08E6  0857               	movf	___fladd@exp2,w
  7380  08E7  0258               	subwf	___fladd@exp1,w
  7381  08E8  1803               	skipnc
  7382  08E9  2905               	goto	l3577
  7383  08EA                     l3567:	
  7384  08EA  1003               	clrc
  7385  08EB  0DCE               	rlf	___fladd@f2,f
  7386  08EC  0DCF               	rlf	___fladd@f2+1,f
  7387  08ED  0DD0               	rlf	___fladd@f2+2,f
  7388  08EE  0DD1               	rlf	___fladd@f2+3,f
  7389  08EF  03D7               	decf	___fladd@exp2,f
  7390  08F0  0857               	movf	___fladd@exp2,w
  7391  08F1  0658               	xorwf	___fladd@exp1,w
  7392  08F2  1903               	skipnz
  7393  08F3  2900               	goto	l3575
  7394  08F4  03D6               	decf	___fladd@sign,f
  7395  08F5  0856               	movf	___fladd@sign,w
  7396  08F6  3907               	andlw	7
  7397  08F7  1903               	btfsc	3,2
  7398  08F8  2900               	goto	l3575
  7399  08F9  28EA               	goto	l3567
  7400  08FA                     l3573:	
  7401  08FA  1003               	clrc
  7402  08FB  0CCD               	rrf	___fladd@f1+3,f
  7403  08FC  0CCC               	rrf	___fladd@f1+2,f
  7404  08FD  0CCB               	rrf	___fladd@f1+1,f
  7405  08FE  0CCA               	rrf	___fladd@f1,f
  7406  08FF  0AD8               	incf	___fladd@exp1,f
  7407  0900                     l3575:	
  7408  0900  0858               	movf	___fladd@exp1,w
  7409  0901  0657               	xorwf	___fladd@exp2,w
  7410  0902  1903               	btfsc	3,2
  7411  0903  2923               	goto	l853
  7412  0904  28FA               	goto	l3573
  7413  0905                     l3577:	
  7414  0905  0858               	movf	___fladd@exp1,w
  7415  0906  0257               	subwf	___fladd@exp2,w
  7416  0907  1803               	skipnc
  7417  0908  2923               	goto	l853
  7418  0909                     l3579:	
  7419  0909  1003               	clrc
  7420  090A  0DCA               	rlf	___fladd@f1,f
  7421  090B  0DCB               	rlf	___fladd@f1+1,f
  7422  090C  0DCC               	rlf	___fladd@f1+2,f
  7423  090D  0DCD               	rlf	___fladd@f1+3,f
  7424  090E  03D8               	decf	___fladd@exp1,f
  7425  090F  0857               	movf	___fladd@exp2,w
  7426  0910  0658               	xorwf	___fladd@exp1,w
  7427  0911  1903               	skipnz
  7428  0912  291F               	goto	l3587
  7429  0913  03D6               	decf	___fladd@sign,f
  7430  0914  0856               	movf	___fladd@sign,w
  7431  0915  3907               	andlw	7
  7432  0916  1903               	btfsc	3,2
  7433  0917  291F               	goto	l3587
  7434  0918  2909               	goto	l3579
  7435  0919                     l3585:	
  7436  0919  1003               	clrc
  7437  091A  0CD1               	rrf	___fladd@f2+3,f
  7438  091B  0CD0               	rrf	___fladd@f2+2,f
  7439  091C  0CCF               	rrf	___fladd@f2+1,f
  7440  091D  0CCE               	rrf	___fladd@f2,f
  7441  091E  0AD7               	incf	___fladd@exp2,f
  7442  091F                     l3587:	
  7443  091F  0858               	movf	___fladd@exp1,w
  7444  0920  0657               	xorwf	___fladd@exp2,w
  7445  0921  1D03               	skipz
  7446  0922  2919               	goto	l3585
  7447  0923                     l853:	
  7448  0923  1FD6               	btfss	___fladd@sign,7
  7449  0924  2931               	goto	l3593
  7450  0925  30FF               	movlw	255
  7451  0926  06CA               	xorwf	___fladd@f1,f
  7452  0927  06CB               	xorwf	___fladd@f1+1,f
  7453  0928  06CC               	xorwf	___fladd@f1+2,f
  7454  0929  06CD               	xorwf	___fladd@f1+3,f
  7455  092A  0ACA               	incf	___fladd@f1,f
  7456  092B  1903               	skipnz
  7457  092C  0ACB               	incf	___fladd@f1+1,f
  7458  092D  1903               	skipnz
  7459  092E  0ACC               	incf	___fladd@f1+2,f
  7460  092F  1903               	skipnz
  7461  0930  0ACD               	incf	___fladd@f1+3,f
  7462  0931                     l3593:	
  7463  0931  1F56               	btfss	___fladd@sign,6
  7464  0932  293F               	goto	l3599
  7465  0933  30FF               	movlw	255
  7466  0934  06CE               	xorwf	___fladd@f2,f
  7467  0935  06CF               	xorwf	___fladd@f2+1,f
  7468  0936  06D0               	xorwf	___fladd@f2+2,f
  7469  0937  06D1               	xorwf	___fladd@f2+3,f
  7470  0938  0ACE               	incf	___fladd@f2,f
  7471  0939  1903               	skipnz
  7472  093A  0ACF               	incf	___fladd@f2+1,f
  7473  093B  1903               	skipnz
  7474  093C  0AD0               	incf	___fladd@f2+2,f
  7475  093D  1903               	skipnz
  7476  093E  0AD1               	incf	___fladd@f2+3,f
  7477  093F                     l3599:	
  7478  093F  01D6               	clrf	___fladd@sign
  7479  0940  084A               	movf	___fladd@f1,w
  7480  0941  07CE               	addwf	___fladd@f2,f
  7481  0942  084B               	movf	___fladd@f1+1,w
  7482  0943  1103               	clrz
  7483  0944  1803               	skipnc
  7484  0945  3E01               	addlw	1
  7485  0946  1D03               	btfss	3,2
  7486  0947  07CF               	addwf	___fladd@f2+1,f
  7487  0948  084C               	movf	___fladd@f1+2,w
  7488  0949  1103               	clrz
  7489  094A  1803               	skipnc
  7490  094B  3E01               	addlw	1
  7491  094C  1D03               	btfss	3,2
  7492  094D  07D0               	addwf	___fladd@f2+2,f
  7493  094E  084D               	movf	___fladd@f1+3,w
  7494  094F  1103               	clrz
  7495  0950  1803               	skipnc
  7496  0951  3E01               	addlw	1
  7497  0952  1D03               	btfss	3,2
  7498  0953  07D1               	addwf	___fladd@f2+3,f
  7499  0954  1FD1               	btfss	___fladd@f2+3,7
  7500  0955  2964               	goto	l3611
  7501  0956  30FF               	movlw	255
  7502  0957  06CE               	xorwf	___fladd@f2,f
  7503  0958  06CF               	xorwf	___fladd@f2+1,f
  7504  0959  06D0               	xorwf	___fladd@f2+2,f
  7505  095A  06D1               	xorwf	___fladd@f2+3,f
  7506  095B  0ACE               	incf	___fladd@f2,f
  7507  095C  1903               	skipnz
  7508  095D  0ACF               	incf	___fladd@f2+1,f
  7509  095E  1903               	skipnz
  7510  095F  0AD0               	incf	___fladd@f2+2,f
  7511  0960  1903               	skipnz
  7512  0961  0AD1               	incf	___fladd@f2+3,f
  7513  0962  01D6               	clrf	___fladd@sign
  7514  0963  0AD6               	incf	___fladd@sign,f
  7515  0964                     l3611:	
  7516  0964  0851               	movf	___fladd@f2+3,w
  7517  0965  00F5               	movwf	___flpack@arg+3
  7518  0966  0850               	movf	___fladd@f2+2,w
  7519  0967  00F4               	movwf	___flpack@arg+2
  7520  0968  084F               	movf	___fladd@f2+1,w
  7521  0969  00F3               	movwf	___flpack@arg+1
  7522  096A  084E               	movf	___fladd@f2,w
  7523  096B  00F2               	movwf	___flpack@arg
  7524  096C  0858               	movf	___fladd@exp1,w
  7525  096D  00F6               	movwf	___flpack@exp
  7526  096E  0856               	movf	___fladd@sign,w
  7527  096F  00F7               	movwf	___flpack@sign
  7528  0970  160A  118A  255B   	fcall	___flpack
  7529  0973  0875               	movf	?___flpack+3,w
  7530  0974  00CD               	movwf	?___fladd+3
  7531  0975  0874               	movf	?___flpack+2,w
  7532  0976  00CC               	movwf	?___fladd+2
  7533  0977  0873               	movf	?___flpack+1,w
  7534  0978  00CB               	movwf	?___fladd+1
  7535  0979  0872               	movf	?___flpack,w
  7536  097A  00CA               	movwf	?___fladd
  7537  097B  0008               	return
  7538  097C                     __end_of___fladd:	
  7539  097C                     __ptext5:	
  7540 ;; *************** function _measure_inductance *****************
  7541 ;; Defined at:
  7542 ;;		line 192 in file "../../../lib/../src/measure.c"
  7543 ;; Parameters:    Size  Location     Type
  7544 ;;		None
  7545 ;; Auto vars:     Size  Location     Type
  7546 ;;  Lin             4   57[BANK1 ] unsigned char 
  7547 ;;  denominator     4   22[BANK1 ] unsigned char 
  7548 ;;  numerator       4   18[BANK1 ] unsigned char 
  7549 ;;  var             2   55[BANK1 ] unsigned short 
  7550 ;;  unit            1   42[BANK1 ] unsigned char 
  7551 ;; Return value:  Size  Location     Type
  7552 ;;		None               void
  7553 ;; Registers used:
  7554 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  7555 ;; Tracked objects:
  7556 ;;		On entry : 300/0
  7557 ;;		On exit  : 0/0
  7558 ;;		Unchanged: 0/0
  7559 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7560 ;;      Params:         0       0       0       0       0
  7561 ;;      Locals:         0       0      43       0       0
  7562 ;;      Temps:          0       0       0       0       0
  7563 ;;      Totals:         0       0      43       0       0
  7564 ;;Total ram usage:       43 bytes
  7565 ;; Hardware stack levels used:    1
  7566 ;; Hardware stack levels required when called:    7
  7567 ;; This function calls:
  7568 ;;		___fldiv
  7569 ;;		___flge
  7570 ;;		___flmul
  7571 ;;		___flsub
  7572 ;;		___fltol
  7573 ;;		___lwtofl
  7574 ;;		_lcd_gotoxy
  7575 ;;		_measure_freq
  7576 ;;		_print_reading
  7577 ;;		_print_unit
  7578 ;;		_put_str
  7579 ;; This function is called by:
  7580 ;;		_main
  7581 ;; This function uses a non-reentrant model
  7582 ;;
  7583                           
  7584                           
  7585                           ;psect for function _measure_inductance
  7586  097C                     _measure_inductance:	
  7587                           
  7588                           ;incstack = 0
  7589                           ; Regs used in _measure_inductance: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  7590  097C  3000               	movlw	0
  7591                           
  7592                           ;measure.c: 193: unsigned char unit;
  7593                           ;measure.c: 194: unsigned short int var;
  7594                           ;measure.c: 196: double Lin, numerator, denominator;
  7595                           ;measure.c: 199: lcd_gotoxy(0, 0);
  7596  097D  01F7               	clrf	lcd_gotoxy@row
  7597  097E  160A  118A  25AA  120A  158A  	fcall	_lcd_gotoxy
  7598                           
  7599                           ;measure.c: 200: put_str("Inductivity ");
  7600  0983  305C               	movlw	(low ((STR_25-__stringbase)| (0+32768)))& (0+255)
  7601  0984  160A  118A  25DB  120A  158A  	fcall	_put_str
  7602                           
  7603                           ;measure.c: 202: var = measure_freq();
  7604  0989  26AF               	fcall	_measure_freq
  7605  098A  084A               	movf	?_measure_freq+1,w
  7606  098B  1683               	bsf	3,5	;RP0=1, select bank1
  7607  098C  00D8               	movwf	(measure_inductance@var+1)^(0+128)
  7608  098D  1283               	bcf	3,5	;RP0=0, select bank0
  7609  098E  0849               	movf	?_measure_freq,w
  7610  098F  1683               	bsf	3,5	;RP0=1, select bank1
  7611  0990  00D7               	movwf	measure_inductance@var^(0+128)
  7612                           
  7613                           ;measure.c: 204: F3 = (double)var;
  7614  0991  0858               	movf	(measure_inductance@var+1)^(0+128),w
  7615  0992  1283               	bcf	3,5	;RP0=0, select bank0
  7616  0993  00D0               	movwf	___lwtofl@c+1
  7617  0994  1683               	bsf	3,5	;RP0=1, select bank1
  7618  0995  0857               	movf	measure_inductance@var^(0+128),w
  7619  0996  1283               	bcf	3,5	;RP0=0, select bank0
  7620  0997  00CF               	movwf	___lwtofl@c
  7621  0998  160A  118A  2548  120A  158A  	fcall	___lwtofl
  7622  099D  0852               	movf	?___lwtofl+3,w
  7623  099E  1683               	bsf	3,5	;RP0=1, select bank1
  7624  099F  00EB               	movwf	(_F3+3)^(0+128)
  7625  09A0  1283               	bcf	3,5	;RP0=0, select bank0
  7626  09A1  0851               	movf	?___lwtofl+2,w
  7627  09A2  1683               	bsf	3,5	;RP0=1, select bank1
  7628  09A3  00EA               	movwf	(_F3+2)^(0+128)
  7629  09A4  1283               	bcf	3,5	;RP0=0, select bank0
  7630  09A5  0850               	movf	?___lwtofl+1,w
  7631  09A6  1683               	bsf	3,5	;RP0=1, select bank1
  7632  09A7  00E9               	movwf	(_F3+1)^(0+128)
  7633  09A8  1283               	bcf	3,5	;RP0=0, select bank0
  7634  09A9  084F               	movf	?___lwtofl,w
  7635  09AA  1683               	bsf	3,5	;RP0=1, select bank1
  7636  09AB  00E8               	movwf	_F3^(0+128)
  7637                           
  7638                           ;measure.c: 205: if(F3 > F1)
  7639  09AC  086F               	movf	(_F1+3)^(0+128),w
  7640  09AD  00F5               	movwf	___flge@ff1+3
  7641  09AE  086E               	movf	(_F1+2)^(0+128),w
  7642  09AF  00F4               	movwf	___flge@ff1+2
  7643  09B0  086D               	movf	(_F1+1)^(0+128),w
  7644  09B1  00F3               	movwf	___flge@ff1+1
  7645  09B2  086C               	movf	_F1^(0+128),w
  7646  09B3  00F2               	movwf	___flge@ff1
  7647  09B4  086B               	movf	(_F3+3)^(0+128),w
  7648  09B5  00F9               	movwf	___flge@ff2+3
  7649  09B6  086A               	movf	(_F3+2)^(0+128),w
  7650  09B7  00F8               	movwf	___flge@ff2+2
  7651  09B8  0869               	movf	(_F3+1)^(0+128),w
  7652  09B9  00F7               	movwf	___flge@ff2+1
  7653  09BA  0868               	movf	_F3^(0+128),w
  7654  09BB  00F6               	movwf	___flge@ff2
  7655  09BC  265F  120A  158A   	fcall	___flge
  7656  09BF  1803               	btfsc	3,0
  7657  09C0  29CB               	goto	l4291
  7658                           
  7659                           ;measure.c: 206: F3 = F1;
  7660  09C1  1683               	bsf	3,5	;RP0=1, select bank1
  7661  09C2  1303               	bcf	3,6	;RP1=0, select bank1
  7662  09C3  086F               	movf	(_F1+3)^(0+128),w
  7663  09C4  00EB               	movwf	(_F3+3)^(0+128)
  7664  09C5  086E               	movf	(_F1+2)^(0+128),w
  7665  09C6  00EA               	movwf	(_F3+2)^(0+128)
  7666  09C7  086D               	movf	(_F1+1)^(0+128),w
  7667  09C8  00E9               	movwf	(_F3+1)^(0+128)
  7668  09C9  086C               	movf	_F1^(0+128),w
  7669  09CA  00E8               	movwf	_F3^(0+128)
  7670  09CB                     l4291:	
  7671                           
  7672                           ;measure.c: 208: numerator = ((F1 * F1) - (F3 * F3)) * ((F1 * F1) - (F2 - F2)) * (100 * 
      +                          100);
  7673  09CB  1683               	bsf	3,5	;RP0=1, select bank1
  7674  09CC  1303               	bcf	3,6	;RP1=0, select bank1
  7675  09CD  0867               	movf	(_F2+3)^(0+128),w
  7676  09CE  1283               	bcf	3,5	;RP0=0, select bank0
  7677  09CF  00DC               	movwf	___flsub@f2+3
  7678  09D0  1683               	bsf	3,5	;RP0=1, select bank1
  7679  09D1  0866               	movf	(_F2+2)^(0+128),w
  7680  09D2  1283               	bcf	3,5	;RP0=0, select bank0
  7681  09D3  00DB               	movwf	___flsub@f2+2
  7682  09D4  1683               	bsf	3,5	;RP0=1, select bank1
  7683  09D5  0865               	movf	(_F2+1)^(0+128),w
  7684  09D6  1283               	bcf	3,5	;RP0=0, select bank0
  7685  09D7  00DA               	movwf	___flsub@f2+1
  7686  09D8  1683               	bsf	3,5	;RP0=1, select bank1
  7687  09D9  0864               	movf	_F2^(0+128),w
  7688  09DA  1283               	bcf	3,5	;RP0=0, select bank0
  7689  09DB  00D9               	movwf	___flsub@f2
  7690  09DC  1683               	bsf	3,5	;RP0=1, select bank1
  7691  09DD  0867               	movf	(_F2+3)^(0+128),w
  7692  09DE  1283               	bcf	3,5	;RP0=0, select bank0
  7693  09DF  00E0               	movwf	___flsub@f1+3
  7694  09E0  1683               	bsf	3,5	;RP0=1, select bank1
  7695  09E1  0866               	movf	(_F2+2)^(0+128),w
  7696  09E2  1283               	bcf	3,5	;RP0=0, select bank0
  7697  09E3  00DF               	movwf	___flsub@f1+2
  7698  09E4  1683               	bsf	3,5	;RP0=1, select bank1
  7699  09E5  0865               	movf	(_F2+1)^(0+128),w
  7700  09E6  1283               	bcf	3,5	;RP0=0, select bank0
  7701  09E7  00DE               	movwf	___flsub@f1+1
  7702  09E8  1683               	bsf	3,5	;RP0=1, select bank1
  7703  09E9  0864               	movf	_F2^(0+128),w
  7704  09EA  1283               	bcf	3,5	;RP0=0, select bank0
  7705  09EB  00DD               	movwf	___flsub@f1
  7706  09EC  160A  118A  2600  120A  158A  	fcall	___flsub
  7707  09F1  085C               	movf	?___flsub+3,w
  7708  09F2  1683               	bsf	3,5	;RP0=1, select bank1
  7709  09F3  00BD               	movwf	(_measure_inductance$1051+3)^(0+128)
  7710  09F4  1283               	bcf	3,5	;RP0=0, select bank0
  7711  09F5  085B               	movf	?___flsub+2,w
  7712  09F6  1683               	bsf	3,5	;RP0=1, select bank1
  7713  09F7  00BC               	movwf	(_measure_inductance$1051+2)^(0+128)
  7714  09F8  1283               	bcf	3,5	;RP0=0, select bank0
  7715  09F9  085A               	movf	?___flsub+1,w
  7716  09FA  1683               	bsf	3,5	;RP0=1, select bank1
  7717  09FB  00BB               	movwf	(_measure_inductance$1051+1)^(0+128)
  7718  09FC  1283               	bcf	3,5	;RP0=0, select bank0
  7719  09FD  0859               	movf	?___flsub,w
  7720  09FE  1683               	bsf	3,5	;RP0=1, select bank1
  7721  09FF  00BA               	movwf	_measure_inductance$1051^(0+128)
  7722                           
  7723                           ;measure.c: 208: numerator = ((F1 * F1) - (F3 * F3)) * ((F1 * F1) - (F2 - F2)) * (100 * 
      +                          100);
  7724  0A00  083D               	movf	(_measure_inductance$1051+3)^(0+128),w
  7725  0A01  1283               	bcf	3,5	;RP0=0, select bank0
  7726  0A02  00DC               	movwf	___flsub@f2+3
  7727  0A03  1683               	bsf	3,5	;RP0=1, select bank1
  7728  0A04  083C               	movf	(_measure_inductance$1051+2)^(0+128),w
  7729  0A05  1283               	bcf	3,5	;RP0=0, select bank0
  7730  0A06  00DB               	movwf	___flsub@f2+2
  7731  0A07  1683               	bsf	3,5	;RP0=1, select bank1
  7732  0A08  083B               	movf	(_measure_inductance$1051+1)^(0+128),w
  7733  0A09  1283               	bcf	3,5	;RP0=0, select bank0
  7734  0A0A  00DA               	movwf	___flsub@f2+1
  7735  0A0B  1683               	bsf	3,5	;RP0=1, select bank1
  7736  0A0C  083A               	movf	_measure_inductance$1051^(0+128),w
  7737  0A0D  1283               	bcf	3,5	;RP0=0, select bank0
  7738  0A0E  00D9               	movwf	___flsub@f2
  7739  0A0F  1683               	bsf	3,5	;RP0=1, select bank1
  7740  0A10  086F               	movf	(_F1+3)^(0+128),w
  7741  0A11  1283               	bcf	3,5	;RP0=0, select bank0
  7742  0A12  00BA               	movwf	___flmul@f1+3
  7743  0A13  1683               	bsf	3,5	;RP0=1, select bank1
  7744  0A14  086E               	movf	(_F1+2)^(0+128),w
  7745  0A15  1283               	bcf	3,5	;RP0=0, select bank0
  7746  0A16  00B9               	movwf	___flmul@f1+2
  7747  0A17  1683               	bsf	3,5	;RP0=1, select bank1
  7748  0A18  086D               	movf	(_F1+1)^(0+128),w
  7749  0A19  1283               	bcf	3,5	;RP0=0, select bank0
  7750  0A1A  00B8               	movwf	___flmul@f1+1
  7751  0A1B  1683               	bsf	3,5	;RP0=1, select bank1
  7752  0A1C  086C               	movf	_F1^(0+128),w
  7753  0A1D  1283               	bcf	3,5	;RP0=0, select bank0
  7754  0A1E  00B7               	movwf	___flmul@f1
  7755  0A1F  1683               	bsf	3,5	;RP0=1, select bank1
  7756  0A20  086F               	movf	(_F1+3)^(0+128),w
  7757  0A21  1283               	bcf	3,5	;RP0=0, select bank0
  7758  0A22  00BE               	movwf	___flmul@f2+3
  7759  0A23  1683               	bsf	3,5	;RP0=1, select bank1
  7760  0A24  086E               	movf	(_F1+2)^(0+128),w
  7761  0A25  1283               	bcf	3,5	;RP0=0, select bank0
  7762  0A26  00BD               	movwf	___flmul@f2+2
  7763  0A27  1683               	bsf	3,5	;RP0=1, select bank1
  7764  0A28  086D               	movf	(_F1+1)^(0+128),w
  7765  0A29  1283               	bcf	3,5	;RP0=0, select bank0
  7766  0A2A  00BC               	movwf	___flmul@f2+1
  7767  0A2B  1683               	bsf	3,5	;RP0=1, select bank1
  7768  0A2C  086C               	movf	_F1^(0+128),w
  7769  0A2D  1283               	bcf	3,5	;RP0=0, select bank0
  7770  0A2E  00BB               	movwf	___flmul@f2
  7771  0A2F  25C7               	fcall	___flmul
  7772  0A30  083A               	movf	?___flmul+3,w
  7773  0A31  00E0               	movwf	___flsub@f1+3
  7774  0A32  0839               	movf	?___flmul+2,w
  7775  0A33  00DF               	movwf	___flsub@f1+2
  7776  0A34  0838               	movf	?___flmul+1,w
  7777  0A35  00DE               	movwf	___flsub@f1+1
  7778  0A36  0837               	movf	?___flmul,w
  7779  0A37  00DD               	movwf	___flsub@f1
  7780  0A38  160A  118A  2600  120A  158A  	fcall	___flsub
  7781  0A3D  085C               	movf	?___flsub+3,w
  7782  0A3E  1683               	bsf	3,5	;RP0=1, select bank1
  7783  0A3F  00CE               	movwf	(_measure_inductance$1052+3)^(0+128)
  7784  0A40  1283               	bcf	3,5	;RP0=0, select bank0
  7785  0A41  085B               	movf	?___flsub+2,w
  7786  0A42  1683               	bsf	3,5	;RP0=1, select bank1
  7787  0A43  00CD               	movwf	(_measure_inductance$1052+2)^(0+128)
  7788  0A44  1283               	bcf	3,5	;RP0=0, select bank0
  7789  0A45  085A               	movf	?___flsub+1,w
  7790  0A46  1683               	bsf	3,5	;RP0=1, select bank1
  7791  0A47  00CC               	movwf	(_measure_inductance$1052+1)^(0+128)
  7792  0A48  1283               	bcf	3,5	;RP0=0, select bank0
  7793  0A49  0859               	movf	?___flsub,w
  7794  0A4A  1683               	bsf	3,5	;RP0=1, select bank1
  7795  0A4B  00CB               	movwf	_measure_inductance$1052^(0+128)
  7796                           
  7797                           ;measure.c: 208: numerator = ((F1 * F1) - (F3 * F3)) * ((F1 * F1) - (F2 - F2)) * (100 * 
      +                          100);
  7798  0A4C  086B               	movf	(_F3+3)^(0+128),w
  7799  0A4D  1283               	bcf	3,5	;RP0=0, select bank0
  7800  0A4E  00BA               	movwf	___flmul@f1+3
  7801  0A4F  1683               	bsf	3,5	;RP0=1, select bank1
  7802  0A50  086A               	movf	(_F3+2)^(0+128),w
  7803  0A51  1283               	bcf	3,5	;RP0=0, select bank0
  7804  0A52  00B9               	movwf	___flmul@f1+2
  7805  0A53  1683               	bsf	3,5	;RP0=1, select bank1
  7806  0A54  0869               	movf	(_F3+1)^(0+128),w
  7807  0A55  1283               	bcf	3,5	;RP0=0, select bank0
  7808  0A56  00B8               	movwf	___flmul@f1+1
  7809  0A57  1683               	bsf	3,5	;RP0=1, select bank1
  7810  0A58  0868               	movf	_F3^(0+128),w
  7811  0A59  1283               	bcf	3,5	;RP0=0, select bank0
  7812  0A5A  00B7               	movwf	___flmul@f1
  7813  0A5B  1683               	bsf	3,5	;RP0=1, select bank1
  7814  0A5C  086B               	movf	(_F3+3)^(0+128),w
  7815  0A5D  1283               	bcf	3,5	;RP0=0, select bank0
  7816  0A5E  00BE               	movwf	___flmul@f2+3
  7817  0A5F  1683               	bsf	3,5	;RP0=1, select bank1
  7818  0A60  086A               	movf	(_F3+2)^(0+128),w
  7819  0A61  1283               	bcf	3,5	;RP0=0, select bank0
  7820  0A62  00BD               	movwf	___flmul@f2+2
  7821  0A63  1683               	bsf	3,5	;RP0=1, select bank1
  7822  0A64  0869               	movf	(_F3+1)^(0+128),w
  7823  0A65  1283               	bcf	3,5	;RP0=0, select bank0
  7824  0A66  00BC               	movwf	___flmul@f2+1
  7825  0A67  1683               	bsf	3,5	;RP0=1, select bank1
  7826  0A68  0868               	movf	_F3^(0+128),w
  7827  0A69  1283               	bcf	3,5	;RP0=0, select bank0
  7828  0A6A  00BB               	movwf	___flmul@f2
  7829  0A6B  25C7  120A  158A   	fcall	___flmul
  7830  0A6E  083A               	movf	?___flmul+3,w
  7831  0A6F  00DC               	movwf	___flsub@f2+3
  7832  0A70  0839               	movf	?___flmul+2,w
  7833  0A71  00DB               	movwf	___flsub@f2+2
  7834  0A72  0838               	movf	?___flmul+1,w
  7835  0A73  00DA               	movwf	___flsub@f2+1
  7836  0A74  0837               	movf	?___flmul,w
  7837  0A75  00D9               	movwf	___flsub@f2
  7838  0A76  1683               	bsf	3,5	;RP0=1, select bank1
  7839  0A77  086F               	movf	(_F1+3)^(0+128),w
  7840  0A78  1283               	bcf	3,5	;RP0=0, select bank0
  7841  0A79  00BA               	movwf	___flmul@f1+3
  7842  0A7A  1683               	bsf	3,5	;RP0=1, select bank1
  7843  0A7B  086E               	movf	(_F1+2)^(0+128),w
  7844  0A7C  1283               	bcf	3,5	;RP0=0, select bank0
  7845  0A7D  00B9               	movwf	___flmul@f1+2
  7846  0A7E  1683               	bsf	3,5	;RP0=1, select bank1
  7847  0A7F  086D               	movf	(_F1+1)^(0+128),w
  7848  0A80  1283               	bcf	3,5	;RP0=0, select bank0
  7849  0A81  00B8               	movwf	___flmul@f1+1
  7850  0A82  1683               	bsf	3,5	;RP0=1, select bank1
  7851  0A83  086C               	movf	_F1^(0+128),w
  7852  0A84  1283               	bcf	3,5	;RP0=0, select bank0
  7853  0A85  00B7               	movwf	___flmul@f1
  7854  0A86  1683               	bsf	3,5	;RP0=1, select bank1
  7855  0A87  086F               	movf	(_F1+3)^(0+128),w
  7856  0A88  1283               	bcf	3,5	;RP0=0, select bank0
  7857  0A89  00BE               	movwf	___flmul@f2+3
  7858  0A8A  1683               	bsf	3,5	;RP0=1, select bank1
  7859  0A8B  086E               	movf	(_F1+2)^(0+128),w
  7860  0A8C  1283               	bcf	3,5	;RP0=0, select bank0
  7861  0A8D  00BD               	movwf	___flmul@f2+2
  7862  0A8E  1683               	bsf	3,5	;RP0=1, select bank1
  7863  0A8F  086D               	movf	(_F1+1)^(0+128),w
  7864  0A90  1283               	bcf	3,5	;RP0=0, select bank0
  7865  0A91  00BC               	movwf	___flmul@f2+1
  7866  0A92  1683               	bsf	3,5	;RP0=1, select bank1
  7867  0A93  086C               	movf	_F1^(0+128),w
  7868  0A94  1283               	bcf	3,5	;RP0=0, select bank0
  7869  0A95  00BB               	movwf	___flmul@f2
  7870  0A96  25C7               	fcall	___flmul
  7871  0A97  083A               	movf	?___flmul+3,w
  7872  0A98  00E0               	movwf	___flsub@f1+3
  7873  0A99  0839               	movf	?___flmul+2,w
  7874  0A9A  00DF               	movwf	___flsub@f1+2
  7875  0A9B  0838               	movf	?___flmul+1,w
  7876  0A9C  00DE               	movwf	___flsub@f1+1
  7877  0A9D  0837               	movf	?___flmul,w
  7878  0A9E  00DD               	movwf	___flsub@f1
  7879  0A9F  160A  118A  2600  120A  158A  	fcall	___flsub
  7880  0AA4  085C               	movf	?___flsub+3,w
  7881  0AA5  1683               	bsf	3,5	;RP0=1, select bank1
  7882  0AA6  00D2               	movwf	(_measure_inductance$1053+3)^(0+128)
  7883  0AA7  1283               	bcf	3,5	;RP0=0, select bank0
  7884  0AA8  085B               	movf	?___flsub+2,w
  7885  0AA9  1683               	bsf	3,5	;RP0=1, select bank1
  7886  0AAA  00D1               	movwf	(_measure_inductance$1053+2)^(0+128)
  7887  0AAB  1283               	bcf	3,5	;RP0=0, select bank0
  7888  0AAC  085A               	movf	?___flsub+1,w
  7889  0AAD  1683               	bsf	3,5	;RP0=1, select bank1
  7890  0AAE  00D0               	movwf	(_measure_inductance$1053+1)^(0+128)
  7891  0AAF  1283               	bcf	3,5	;RP0=0, select bank0
  7892  0AB0  0859               	movf	?___flsub,w
  7893  0AB1  1683               	bsf	3,5	;RP0=1, select bank1
  7894  0AB2  00CF               	movwf	_measure_inductance$1053^(0+128)
  7895                           
  7896                           ;measure.c: 208: numerator = ((F1 * F1) - (F3 * F3)) * ((F1 * F1) - (F2 - F2)) * (100 * 
      +                          100);
  7897  0AB3  084E               	movf	(_measure_inductance$1052+3)^(0+128),w
  7898  0AB4  1283               	bcf	3,5	;RP0=0, select bank0
  7899  0AB5  00BA               	movwf	___flmul@f1+3
  7900  0AB6  1683               	bsf	3,5	;RP0=1, select bank1
  7901  0AB7  084D               	movf	(_measure_inductance$1052+2)^(0+128),w
  7902  0AB8  1283               	bcf	3,5	;RP0=0, select bank0
  7903  0AB9  00B9               	movwf	___flmul@f1+2
  7904  0ABA  1683               	bsf	3,5	;RP0=1, select bank1
  7905  0ABB  084C               	movf	(_measure_inductance$1052+1)^(0+128),w
  7906  0ABC  1283               	bcf	3,5	;RP0=0, select bank0
  7907  0ABD  00B8               	movwf	___flmul@f1+1
  7908  0ABE  1683               	bsf	3,5	;RP0=1, select bank1
  7909  0ABF  084B               	movf	_measure_inductance$1052^(0+128),w
  7910  0AC0  1283               	bcf	3,5	;RP0=0, select bank0
  7911  0AC1  00B7               	movwf	___flmul@f1
  7912  0AC2  1683               	bsf	3,5	;RP0=1, select bank1
  7913  0AC3  0852               	movf	(_measure_inductance$1053+3)^(0+128),w
  7914  0AC4  1283               	bcf	3,5	;RP0=0, select bank0
  7915  0AC5  00BE               	movwf	___flmul@f2+3
  7916  0AC6  1683               	bsf	3,5	;RP0=1, select bank1
  7917  0AC7  0851               	movf	(_measure_inductance$1053+2)^(0+128),w
  7918  0AC8  1283               	bcf	3,5	;RP0=0, select bank0
  7919  0AC9  00BD               	movwf	___flmul@f2+2
  7920  0ACA  1683               	bsf	3,5	;RP0=1, select bank1
  7921  0ACB  0850               	movf	(_measure_inductance$1053+1)^(0+128),w
  7922  0ACC  1283               	bcf	3,5	;RP0=0, select bank0
  7923  0ACD  00BC               	movwf	___flmul@f2+1
  7924  0ACE  1683               	bsf	3,5	;RP0=1, select bank1
  7925  0ACF  084F               	movf	_measure_inductance$1053^(0+128),w
  7926  0AD0  1283               	bcf	3,5	;RP0=0, select bank0
  7927  0AD1  00BB               	movwf	___flmul@f2
  7928  0AD2  25C7  120A  158A   	fcall	___flmul
  7929  0AD5  083A               	movf	?___flmul+3,w
  7930  0AD6  1683               	bsf	3,5	;RP0=1, select bank1
  7931  0AD7  00D6               	movwf	(_measure_inductance$1054+3)^(0+128)
  7932  0AD8  1283               	bcf	3,5	;RP0=0, select bank0
  7933  0AD9  0839               	movf	?___flmul+2,w
  7934  0ADA  1683               	bsf	3,5	;RP0=1, select bank1
  7935  0ADB  00D5               	movwf	(_measure_inductance$1054+2)^(0+128)
  7936  0ADC  1283               	bcf	3,5	;RP0=0, select bank0
  7937  0ADD  0838               	movf	?___flmul+1,w
  7938  0ADE  1683               	bsf	3,5	;RP0=1, select bank1
  7939  0ADF  00D4               	movwf	(_measure_inductance$1054+1)^(0+128)
  7940  0AE0  1283               	bcf	3,5	;RP0=0, select bank0
  7941  0AE1  0837               	movf	?___flmul,w
  7942  0AE2  1683               	bsf	3,5	;RP0=1, select bank1
  7943  0AE3  00D3               	movwf	_measure_inductance$1054^(0+128)
  7944                           
  7945                           ;measure.c: 208: numerator = ((F1 * F1) - (F3 * F3)) * ((F1 * F1) - (F2 - F2)) * (100 * 
      +                          100);
  7946  0AE4  3046               	movlw	70
  7947  0AE5  1283               	bcf	3,5	;RP0=0, select bank0
  7948  0AE6  00BA               	movwf	___flmul@f1+3
  7949  0AE7  301C               	movlw	28
  7950  0AE8  00B9               	movwf	___flmul@f1+2
  7951  0AE9  3040               	movlw	64
  7952  0AEA  00B8               	movwf	___flmul@f1+1
  7953  0AEB  01B7               	clrf	___flmul@f1
  7954  0AEC  1683               	bsf	3,5	;RP0=1, select bank1
  7955  0AED  0856               	movf	(_measure_inductance$1054+3)^(0+128),w
  7956  0AEE  1283               	bcf	3,5	;RP0=0, select bank0
  7957  0AEF  00BE               	movwf	___flmul@f2+3
  7958  0AF0  1683               	bsf	3,5	;RP0=1, select bank1
  7959  0AF1  0855               	movf	(_measure_inductance$1054+2)^(0+128),w
  7960  0AF2  1283               	bcf	3,5	;RP0=0, select bank0
  7961  0AF3  00BD               	movwf	___flmul@f2+2
  7962  0AF4  1683               	bsf	3,5	;RP0=1, select bank1
  7963  0AF5  0854               	movf	(_measure_inductance$1054+1)^(0+128),w
  7964  0AF6  1283               	bcf	3,5	;RP0=0, select bank0
  7965  0AF7  00BC               	movwf	___flmul@f2+1
  7966  0AF8  1683               	bsf	3,5	;RP0=1, select bank1
  7967  0AF9  0853               	movf	_measure_inductance$1054^(0+128),w
  7968  0AFA  1283               	bcf	3,5	;RP0=0, select bank0
  7969  0AFB  00BB               	movwf	___flmul@f2
  7970  0AFC  25C7  120A  158A   	fcall	___flmul
  7971  0AFF  083A               	movf	?___flmul+3,w
  7972  0B00  1683               	bsf	3,5	;RP0=1, select bank1
  7973  0B01  00B5               	movwf	(measure_inductance@numerator+3)^(0+128)
  7974  0B02  1283               	bcf	3,5	;RP0=0, select bank0
  7975  0B03  0839               	movf	?___flmul+2,w
  7976  0B04  1683               	bsf	3,5	;RP0=1, select bank1
  7977  0B05  00B4               	movwf	(measure_inductance@numerator+2)^(0+128)
  7978  0B06  1283               	bcf	3,5	;RP0=0, select bank0
  7979  0B07  0838               	movf	?___flmul+1,w
  7980  0B08  1683               	bsf	3,5	;RP0=1, select bank1
  7981  0B09  00B3               	movwf	(measure_inductance@numerator+1)^(0+128)
  7982  0B0A  1283               	bcf	3,5	;RP0=0, select bank0
  7983  0B0B  0837               	movf	?___flmul,w
  7984  0B0C  1683               	bsf	3,5	;RP0=1, select bank1
  7985  0B0D  00B2               	movwf	measure_inductance@numerator^(0+128)
  7986                           
  7987                           ;measure.c: 210: denominator = 4 * 3.14159265358979323846l * 3.14159265358979323846l * F
      +                          1 * F1 * F2 * F2 * F3 * F3 * CCal;
  7988  0B0E  086F               	movf	(_F1+3)^(0+128),w
  7989  0B0F  1283               	bcf	3,5	;RP0=0, select bank0
  7990  0B10  00BA               	movwf	___flmul@f1+3
  7991  0B11  1683               	bsf	3,5	;RP0=1, select bank1
  7992  0B12  086E               	movf	(_F1+2)^(0+128),w
  7993  0B13  1283               	bcf	3,5	;RP0=0, select bank0
  7994  0B14  00B9               	movwf	___flmul@f1+2
  7995  0B15  1683               	bsf	3,5	;RP0=1, select bank1
  7996  0B16  086D               	movf	(_F1+1)^(0+128),w
  7997  0B17  1283               	bcf	3,5	;RP0=0, select bank0
  7998  0B18  00B8               	movwf	___flmul@f1+1
  7999  0B19  1683               	bsf	3,5	;RP0=1, select bank1
  8000  0B1A  086C               	movf	_F1^(0+128),w
  8001  0B1B  1283               	bcf	3,5	;RP0=0, select bank0
  8002  0B1C  00B7               	movwf	___flmul@f1
  8003  0B1D  1683               	bsf	3,5	;RP0=1, select bank1
  8004  0B1E  086F               	movf	(_F1+3)^(0+128),w
  8005  0B1F  1283               	bcf	3,5	;RP0=0, select bank0
  8006  0B20  00BE               	movwf	___flmul@f2+3
  8007  0B21  1683               	bsf	3,5	;RP0=1, select bank1
  8008  0B22  086E               	movf	(_F1+2)^(0+128),w
  8009  0B23  1283               	bcf	3,5	;RP0=0, select bank0
  8010  0B24  00BD               	movwf	___flmul@f2+2
  8011  0B25  1683               	bsf	3,5	;RP0=1, select bank1
  8012  0B26  086D               	movf	(_F1+1)^(0+128),w
  8013  0B27  1283               	bcf	3,5	;RP0=0, select bank0
  8014  0B28  00BC               	movwf	___flmul@f2+1
  8015  0B29  1683               	bsf	3,5	;RP0=1, select bank1
  8016  0B2A  086C               	movf	_F1^(0+128),w
  8017  0B2B  1283               	bcf	3,5	;RP0=0, select bank0
  8018  0B2C  00BB               	movwf	___flmul@f2
  8019  0B2D  25C7  120A  158A   	fcall	___flmul
  8020  0B30  083A               	movf	?___flmul+3,w
  8021  0B31  1683               	bsf	3,5	;RP0=1, select bank1
  8022  0B32  00C1               	movwf	(_measure_inductance$1055+3)^(0+128)
  8023  0B33  1283               	bcf	3,5	;RP0=0, select bank0
  8024  0B34  0839               	movf	?___flmul+2,w
  8025  0B35  1683               	bsf	3,5	;RP0=1, select bank1
  8026  0B36  00C0               	movwf	(_measure_inductance$1055+2)^(0+128)
  8027  0B37  1283               	bcf	3,5	;RP0=0, select bank0
  8028  0B38  0838               	movf	?___flmul+1,w
  8029  0B39  1683               	bsf	3,5	;RP0=1, select bank1
  8030  0B3A  00BF               	movwf	(_measure_inductance$1055+1)^(0+128)
  8031  0B3B  1283               	bcf	3,5	;RP0=0, select bank0
  8032  0B3C  0837               	movf	?___flmul,w
  8033  0B3D  1683               	bsf	3,5	;RP0=1, select bank1
  8034  0B3E  00BE               	movwf	_measure_inductance$1055^(0+128)
  8035                           
  8036                           ;measure.c: 210: denominator = 4 * 3.14159265358979323846l * 3.14159265358979323846l * F
      +                          1 * F1 * F2 * F2 * F3 * F3 * CCal;
  8037  0B3F  0867               	movf	(_F2+3)^(0+128),w
  8038  0B40  1283               	bcf	3,5	;RP0=0, select bank0
  8039  0B41  00BA               	movwf	___flmul@f1+3
  8040  0B42  1683               	bsf	3,5	;RP0=1, select bank1
  8041  0B43  0866               	movf	(_F2+2)^(0+128),w
  8042  0B44  1283               	bcf	3,5	;RP0=0, select bank0
  8043  0B45  00B9               	movwf	___flmul@f1+2
  8044  0B46  1683               	bsf	3,5	;RP0=1, select bank1
  8045  0B47  0865               	movf	(_F2+1)^(0+128),w
  8046  0B48  1283               	bcf	3,5	;RP0=0, select bank0
  8047  0B49  00B8               	movwf	___flmul@f1+1
  8048  0B4A  1683               	bsf	3,5	;RP0=1, select bank1
  8049  0B4B  0864               	movf	_F2^(0+128),w
  8050  0B4C  1283               	bcf	3,5	;RP0=0, select bank0
  8051  0B4D  00B7               	movwf	___flmul@f1
  8052  0B4E  1683               	bsf	3,5	;RP0=1, select bank1
  8053  0B4F  0841               	movf	(_measure_inductance$1055+3)^(0+128),w
  8054  0B50  1283               	bcf	3,5	;RP0=0, select bank0
  8055  0B51  00BE               	movwf	___flmul@f2+3
  8056  0B52  1683               	bsf	3,5	;RP0=1, select bank1
  8057  0B53  0840               	movf	(_measure_inductance$1055+2)^(0+128),w
  8058  0B54  1283               	bcf	3,5	;RP0=0, select bank0
  8059  0B55  00BD               	movwf	___flmul@f2+2
  8060  0B56  1683               	bsf	3,5	;RP0=1, select bank1
  8061  0B57  083F               	movf	(_measure_inductance$1055+1)^(0+128),w
  8062  0B58  1283               	bcf	3,5	;RP0=0, select bank0
  8063  0B59  00BC               	movwf	___flmul@f2+1
  8064  0B5A  1683               	bsf	3,5	;RP0=1, select bank1
  8065  0B5B  083E               	movf	_measure_inductance$1055^(0+128),w
  8066  0B5C  1283               	bcf	3,5	;RP0=0, select bank0
  8067  0B5D  00BB               	movwf	___flmul@f2
  8068  0B5E  25C7  120A  158A   	fcall	___flmul
  8069  0B61  083A               	movf	?___flmul+3,w
  8070  0B62  1683               	bsf	3,5	;RP0=1, select bank1
  8071  0B63  00CE               	movwf	(_measure_inductance$1052+3)^(0+128)
  8072  0B64  1283               	bcf	3,5	;RP0=0, select bank0
  8073  0B65  0839               	movf	?___flmul+2,w
  8074  0B66  1683               	bsf	3,5	;RP0=1, select bank1
  8075  0B67  00CD               	movwf	(_measure_inductance$1052+2)^(0+128)
  8076  0B68  1283               	bcf	3,5	;RP0=0, select bank0
  8077  0B69  0838               	movf	?___flmul+1,w
  8078  0B6A  1683               	bsf	3,5	;RP0=1, select bank1
  8079  0B6B  00CC               	movwf	(_measure_inductance$1052+1)^(0+128)
  8080  0B6C  1283               	bcf	3,5	;RP0=0, select bank0
  8081  0B6D  0837               	movf	?___flmul,w
  8082  0B6E  1683               	bsf	3,5	;RP0=1, select bank1
  8083  0B6F  00CB               	movwf	_measure_inductance$1052^(0+128)
  8084                           
  8085                           ;measure.c: 210: denominator = 4 * 3.14159265358979323846l * 3.14159265358979323846l * F
      +                          1 * F1 * F2 * F2 * F3 * F3 * CCal;
  8086  0B70  0867               	movf	(_F2+3)^(0+128),w
  8087  0B71  1283               	bcf	3,5	;RP0=0, select bank0
  8088  0B72  00BA               	movwf	___flmul@f1+3
  8089  0B73  1683               	bsf	3,5	;RP0=1, select bank1
  8090  0B74  0866               	movf	(_F2+2)^(0+128),w
  8091  0B75  1283               	bcf	3,5	;RP0=0, select bank0
  8092  0B76  00B9               	movwf	___flmul@f1+2
  8093  0B77  1683               	bsf	3,5	;RP0=1, select bank1
  8094  0B78  0865               	movf	(_F2+1)^(0+128),w
  8095  0B79  1283               	bcf	3,5	;RP0=0, select bank0
  8096  0B7A  00B8               	movwf	___flmul@f1+1
  8097  0B7B  1683               	bsf	3,5	;RP0=1, select bank1
  8098  0B7C  0864               	movf	_F2^(0+128),w
  8099  0B7D  1283               	bcf	3,5	;RP0=0, select bank0
  8100  0B7E  00B7               	movwf	___flmul@f1
  8101  0B7F  1683               	bsf	3,5	;RP0=1, select bank1
  8102  0B80  084E               	movf	(_measure_inductance$1052+3)^(0+128),w
  8103  0B81  1283               	bcf	3,5	;RP0=0, select bank0
  8104  0B82  00BE               	movwf	___flmul@f2+3
  8105  0B83  1683               	bsf	3,5	;RP0=1, select bank1
  8106  0B84  084D               	movf	(_measure_inductance$1052+2)^(0+128),w
  8107  0B85  1283               	bcf	3,5	;RP0=0, select bank0
  8108  0B86  00BD               	movwf	___flmul@f2+2
  8109  0B87  1683               	bsf	3,5	;RP0=1, select bank1
  8110  0B88  084C               	movf	(_measure_inductance$1052+1)^(0+128),w
  8111  0B89  1283               	bcf	3,5	;RP0=0, select bank0
  8112  0B8A  00BC               	movwf	___flmul@f2+1
  8113  0B8B  1683               	bsf	3,5	;RP0=1, select bank1
  8114  0B8C  084B               	movf	_measure_inductance$1052^(0+128),w
  8115  0B8D  1283               	bcf	3,5	;RP0=0, select bank0
  8116  0B8E  00BB               	movwf	___flmul@f2
  8117  0B8F  25C7  120A  158A   	fcall	___flmul
  8118  0B92  083A               	movf	?___flmul+3,w
  8119  0B93  1683               	bsf	3,5	;RP0=1, select bank1
  8120  0B94  00D2               	movwf	(_measure_inductance$1053+3)^(0+128)
  8121  0B95  1283               	bcf	3,5	;RP0=0, select bank0
  8122  0B96  0839               	movf	?___flmul+2,w
  8123  0B97  1683               	bsf	3,5	;RP0=1, select bank1
  8124  0B98  00D1               	movwf	(_measure_inductance$1053+2)^(0+128)
  8125  0B99  1283               	bcf	3,5	;RP0=0, select bank0
  8126  0B9A  0838               	movf	?___flmul+1,w
  8127  0B9B  1683               	bsf	3,5	;RP0=1, select bank1
  8128  0B9C  00D0               	movwf	(_measure_inductance$1053+1)^(0+128)
  8129  0B9D  1283               	bcf	3,5	;RP0=0, select bank0
  8130  0B9E  0837               	movf	?___flmul,w
  8131  0B9F  1683               	bsf	3,5	;RP0=1, select bank1
  8132  0BA0  00CF               	movwf	_measure_inductance$1053^(0+128)
  8133                           
  8134                           ;measure.c: 210: denominator = 4 * 3.14159265358979323846l * 3.14159265358979323846l * F
      +                          1 * F1 * F2 * F2 * F3 * F3 * CCal;
  8135  0BA1  086B               	movf	(_F3+3)^(0+128),w
  8136  0BA2  1283               	bcf	3,5	;RP0=0, select bank0
  8137  0BA3  00BA               	movwf	___flmul@f1+3
  8138  0BA4  1683               	bsf	3,5	;RP0=1, select bank1
  8139  0BA5  086A               	movf	(_F3+2)^(0+128),w
  8140  0BA6  1283               	bcf	3,5	;RP0=0, select bank0
  8141  0BA7  00B9               	movwf	___flmul@f1+2
  8142  0BA8  1683               	bsf	3,5	;RP0=1, select bank1
  8143  0BA9  0869               	movf	(_F3+1)^(0+128),w
  8144  0BAA  1283               	bcf	3,5	;RP0=0, select bank0
  8145  0BAB  00B8               	movwf	___flmul@f1+1
  8146  0BAC  1683               	bsf	3,5	;RP0=1, select bank1
  8147  0BAD  0868               	movf	_F3^(0+128),w
  8148  0BAE  1283               	bcf	3,5	;RP0=0, select bank0
  8149  0BAF  00B7               	movwf	___flmul@f1
  8150  0BB0  1683               	bsf	3,5	;RP0=1, select bank1
  8151  0BB1  0852               	movf	(_measure_inductance$1053+3)^(0+128),w
  8152  0BB2  1283               	bcf	3,5	;RP0=0, select bank0
  8153  0BB3  00BE               	movwf	___flmul@f2+3
  8154  0BB4  1683               	bsf	3,5	;RP0=1, select bank1
  8155  0BB5  0851               	movf	(_measure_inductance$1053+2)^(0+128),w
  8156  0BB6  1283               	bcf	3,5	;RP0=0, select bank0
  8157  0BB7  00BD               	movwf	___flmul@f2+2
  8158  0BB8  1683               	bsf	3,5	;RP0=1, select bank1
  8159  0BB9  0850               	movf	(_measure_inductance$1053+1)^(0+128),w
  8160  0BBA  1283               	bcf	3,5	;RP0=0, select bank0
  8161  0BBB  00BC               	movwf	___flmul@f2+1
  8162  0BBC  1683               	bsf	3,5	;RP0=1, select bank1
  8163  0BBD  084F               	movf	_measure_inductance$1053^(0+128),w
  8164  0BBE  1283               	bcf	3,5	;RP0=0, select bank0
  8165  0BBF  00BB               	movwf	___flmul@f2
  8166  0BC0  25C7  120A  158A   	fcall	___flmul
  8167  0BC3  083A               	movf	?___flmul+3,w
  8168  0BC4  1683               	bsf	3,5	;RP0=1, select bank1
  8169  0BC5  00D6               	movwf	(_measure_inductance$1054+3)^(0+128)
  8170  0BC6  1283               	bcf	3,5	;RP0=0, select bank0
  8171  0BC7  0839               	movf	?___flmul+2,w
  8172  0BC8  1683               	bsf	3,5	;RP0=1, select bank1
  8173  0BC9  00D5               	movwf	(_measure_inductance$1054+2)^(0+128)
  8174  0BCA  1283               	bcf	3,5	;RP0=0, select bank0
  8175  0BCB  0838               	movf	?___flmul+1,w
  8176  0BCC  1683               	bsf	3,5	;RP0=1, select bank1
  8177  0BCD  00D4               	movwf	(_measure_inductance$1054+1)^(0+128)
  8178  0BCE  1283               	bcf	3,5	;RP0=0, select bank0
  8179  0BCF  0837               	movf	?___flmul,w
  8180  0BD0  1683               	bsf	3,5	;RP0=1, select bank1
  8181  0BD1  00D3               	movwf	_measure_inductance$1054^(0+128)
  8182                           
  8183                           ;measure.c: 210: denominator = 4 * 3.14159265358979323846l * 3.14159265358979323846l * F
      +                          1 * F1 * F2 * F2 * F3 * F3 * CCal;
  8184  0BD2  086B               	movf	(_F3+3)^(0+128),w
  8185  0BD3  1283               	bcf	3,5	;RP0=0, select bank0
  8186  0BD4  00BA               	movwf	___flmul@f1+3
  8187  0BD5  1683               	bsf	3,5	;RP0=1, select bank1
  8188  0BD6  086A               	movf	(_F3+2)^(0+128),w
  8189  0BD7  1283               	bcf	3,5	;RP0=0, select bank0
  8190  0BD8  00B9               	movwf	___flmul@f1+2
  8191  0BD9  1683               	bsf	3,5	;RP0=1, select bank1
  8192  0BDA  0869               	movf	(_F3+1)^(0+128),w
  8193  0BDB  1283               	bcf	3,5	;RP0=0, select bank0
  8194  0BDC  00B8               	movwf	___flmul@f1+1
  8195  0BDD  1683               	bsf	3,5	;RP0=1, select bank1
  8196  0BDE  0868               	movf	_F3^(0+128),w
  8197  0BDF  1283               	bcf	3,5	;RP0=0, select bank0
  8198  0BE0  00B7               	movwf	___flmul@f1
  8199  0BE1  1683               	bsf	3,5	;RP0=1, select bank1
  8200  0BE2  0856               	movf	(_measure_inductance$1054+3)^(0+128),w
  8201  0BE3  1283               	bcf	3,5	;RP0=0, select bank0
  8202  0BE4  00BE               	movwf	___flmul@f2+3
  8203  0BE5  1683               	bsf	3,5	;RP0=1, select bank1
  8204  0BE6  0855               	movf	(_measure_inductance$1054+2)^(0+128),w
  8205  0BE7  1283               	bcf	3,5	;RP0=0, select bank0
  8206  0BE8  00BD               	movwf	___flmul@f2+2
  8207  0BE9  1683               	bsf	3,5	;RP0=1, select bank1
  8208  0BEA  0854               	movf	(_measure_inductance$1054+1)^(0+128),w
  8209  0BEB  1283               	bcf	3,5	;RP0=0, select bank0
  8210  0BEC  00BC               	movwf	___flmul@f2+1
  8211  0BED  1683               	bsf	3,5	;RP0=1, select bank1
  8212  0BEE  0853               	movf	_measure_inductance$1054^(0+128),w
  8213  0BEF  1283               	bcf	3,5	;RP0=0, select bank0
  8214  0BF0  00BB               	movwf	___flmul@f2
  8215  0BF1  25C7  120A  158A   	fcall	___flmul
  8216  0BF4  083A               	movf	?___flmul+3,w
  8217  0BF5  1683               	bsf	3,5	;RP0=1, select bank1
  8218  0BF6  00C5               	movwf	(_measure_inductance$1056+3)^(0+128)
  8219  0BF7  1283               	bcf	3,5	;RP0=0, select bank0
  8220  0BF8  0839               	movf	?___flmul+2,w
  8221  0BF9  1683               	bsf	3,5	;RP0=1, select bank1
  8222  0BFA  00C4               	movwf	(_measure_inductance$1056+2)^(0+128)
  8223  0BFB  1283               	bcf	3,5	;RP0=0, select bank0
  8224  0BFC  0838               	movf	?___flmul+1,w
  8225  0BFD  1683               	bsf	3,5	;RP0=1, select bank1
  8226  0BFE  00C3               	movwf	(_measure_inductance$1056+1)^(0+128)
  8227  0BFF  1283               	bcf	3,5	;RP0=0, select bank0
  8228  0C00  0837               	movf	?___flmul,w
  8229  0C01  1683               	bsf	3,5	;RP0=1, select bank1
  8230  0C02  00C2               	movwf	_measure_inductance$1056^(0+128)
  8231                           
  8232                           ;measure.c: 210: denominator = 4 * 3.14159265358979323846l * 3.14159265358979323846l * F
      +                          1 * F1 * F2 * F2 * F3 * F3 * CCal;
  8233  0C03  1703               	bsf	3,6	;RP1=1, select bank3
  8234  0C04  084A               	movf	(_CCal+3)^(0+384),w
  8235  0C05  1283               	bcf	3,5	;RP0=0, select bank0
  8236  0C06  1303               	bcf	3,6	;RP1=0, select bank0
  8237  0C07  00BA               	movwf	___flmul@f1+3
  8238  0C08  1683               	bsf	3,5	;RP0=1, select bank3
  8239  0C09  1703               	bsf	3,6	;RP1=1, select bank3
  8240  0C0A  0849               	movf	(_CCal+2)^(0+384),w
  8241  0C0B  1283               	bcf	3,5	;RP0=0, select bank0
  8242  0C0C  1303               	bcf	3,6	;RP1=0, select bank0
  8243  0C0D  00B9               	movwf	___flmul@f1+2
  8244  0C0E  1683               	bsf	3,5	;RP0=1, select bank3
  8245  0C0F  1703               	bsf	3,6	;RP1=1, select bank3
  8246  0C10  0848               	movf	(_CCal+1)^(0+384),w
  8247  0C11  1283               	bcf	3,5	;RP0=0, select bank0
  8248  0C12  1303               	bcf	3,6	;RP1=0, select bank0
  8249  0C13  00B8               	movwf	___flmul@f1+1
  8250  0C14  1683               	bsf	3,5	;RP0=1, select bank3
  8251  0C15  1703               	bsf	3,6	;RP1=1, select bank3
  8252  0C16  0847               	movf	_CCal^(0+384),w
  8253  0C17  1283               	bcf	3,5	;RP0=0, select bank0
  8254  0C18  1303               	bcf	3,6	;RP1=0, select bank0
  8255  0C19  00B7               	movwf	___flmul@f1
  8256  0C1A  1683               	bsf	3,5	;RP0=1, select bank1
  8257  0C1B  0845               	movf	(_measure_inductance$1056+3)^(0+128),w
  8258  0C1C  1283               	bcf	3,5	;RP0=0, select bank0
  8259  0C1D  00BE               	movwf	___flmul@f2+3
  8260  0C1E  1683               	bsf	3,5	;RP0=1, select bank1
  8261  0C1F  0844               	movf	(_measure_inductance$1056+2)^(0+128),w
  8262  0C20  1283               	bcf	3,5	;RP0=0, select bank0
  8263  0C21  00BD               	movwf	___flmul@f2+2
  8264  0C22  1683               	bsf	3,5	;RP0=1, select bank1
  8265  0C23  0843               	movf	(_measure_inductance$1056+1)^(0+128),w
  8266  0C24  1283               	bcf	3,5	;RP0=0, select bank0
  8267  0C25  00BC               	movwf	___flmul@f2+1
  8268  0C26  1683               	bsf	3,5	;RP0=1, select bank1
  8269  0C27  0842               	movf	_measure_inductance$1056^(0+128),w
  8270  0C28  1283               	bcf	3,5	;RP0=0, select bank0
  8271  0C29  00BB               	movwf	___flmul@f2
  8272  0C2A  25C7  120A  158A   	fcall	___flmul
  8273  0C2D  083A               	movf	?___flmul+3,w
  8274  0C2E  1683               	bsf	3,5	;RP0=1, select bank1
  8275  0C2F  00C9               	movwf	(_measure_inductance$1057+3)^(0+128)
  8276  0C30  1283               	bcf	3,5	;RP0=0, select bank0
  8277  0C31  0839               	movf	?___flmul+2,w
  8278  0C32  1683               	bsf	3,5	;RP0=1, select bank1
  8279  0C33  00C8               	movwf	(_measure_inductance$1057+2)^(0+128)
  8280  0C34  1283               	bcf	3,5	;RP0=0, select bank0
  8281  0C35  0838               	movf	?___flmul+1,w
  8282  0C36  1683               	bsf	3,5	;RP0=1, select bank1
  8283  0C37  00C7               	movwf	(_measure_inductance$1057+1)^(0+128)
  8284  0C38  1283               	bcf	3,5	;RP0=0, select bank0
  8285  0C39  0837               	movf	?___flmul,w
  8286  0C3A  1683               	bsf	3,5	;RP0=1, select bank1
  8287  0C3B  00C6               	movwf	_measure_inductance$1057^(0+128)
  8288                           
  8289                           ;measure.c: 210: denominator = 4 * 3.14159265358979323846l * 3.14159265358979323846l * F
      +                          1 * F1 * F2 * F2 * F3 * F3 * CCal;
  8290  0C3C  3042               	movlw	66
  8291  0C3D  1283               	bcf	3,5	;RP0=0, select bank0
  8292  0C3E  00BA               	movwf	___flmul@f1+3
  8293  0C3F  301D               	movlw	29
  8294  0C40  00B9               	movwf	___flmul@f1+2
  8295  0C41  30E9               	movlw	233
  8296  0C42  00B8               	movwf	___flmul@f1+1
  8297  0C43  30E6               	movlw	230
  8298  0C44  00B7               	movwf	___flmul@f1
  8299  0C45  1683               	bsf	3,5	;RP0=1, select bank1
  8300  0C46  0849               	movf	(_measure_inductance$1057+3)^(0+128),w
  8301  0C47  1283               	bcf	3,5	;RP0=0, select bank0
  8302  0C48  00BE               	movwf	___flmul@f2+3
  8303  0C49  1683               	bsf	3,5	;RP0=1, select bank1
  8304  0C4A  0848               	movf	(_measure_inductance$1057+2)^(0+128),w
  8305  0C4B  1283               	bcf	3,5	;RP0=0, select bank0
  8306  0C4C  00BD               	movwf	___flmul@f2+2
  8307  0C4D  1683               	bsf	3,5	;RP0=1, select bank1
  8308  0C4E  0847               	movf	(_measure_inductance$1057+1)^(0+128),w
  8309  0C4F  1283               	bcf	3,5	;RP0=0, select bank0
  8310  0C50  00BC               	movwf	___flmul@f2+1
  8311  0C51  1683               	bsf	3,5	;RP0=1, select bank1
  8312  0C52  0846               	movf	_measure_inductance$1057^(0+128),w
  8313  0C53  1283               	bcf	3,5	;RP0=0, select bank0
  8314  0C54  00BB               	movwf	___flmul@f2
  8315  0C55  25C7  120A  158A   	fcall	___flmul
  8316  0C58  083A               	movf	?___flmul+3,w
  8317  0C59  1683               	bsf	3,5	;RP0=1, select bank1
  8318  0C5A  00B9               	movwf	(measure_inductance@denominator+3)^(0+128)
  8319  0C5B  1283               	bcf	3,5	;RP0=0, select bank0
  8320  0C5C  0839               	movf	?___flmul+2,w
  8321  0C5D  1683               	bsf	3,5	;RP0=1, select bank1
  8322  0C5E  00B8               	movwf	(measure_inductance@denominator+2)^(0+128)
  8323  0C5F  1283               	bcf	3,5	;RP0=0, select bank0
  8324  0C60  0838               	movf	?___flmul+1,w
  8325  0C61  1683               	bsf	3,5	;RP0=1, select bank1
  8326  0C62  00B7               	movwf	(measure_inductance@denominator+1)^(0+128)
  8327  0C63  1283               	bcf	3,5	;RP0=0, select bank0
  8328  0C64  0837               	movf	?___flmul,w
  8329  0C65  1683               	bsf	3,5	;RP0=1, select bank1
  8330  0C66  00B6               	movwf	measure_inductance@denominator^(0+128)
  8331                           
  8332                           ;measure.c: 212: Lin = (numerator / denominator) * 1e+15l;
  8333  0C67  3058               	movlw	88
  8334  0C68  1283               	bcf	3,5	;RP0=0, select bank0
  8335  0C69  00BA               	movwf	___flmul@f1+3
  8336  0C6A  3063               	movlw	99
  8337  0C6B  00B9               	movwf	___flmul@f1+2
  8338  0C6C  305F               	movlw	95
  8339  0C6D  00B8               	movwf	___flmul@f1+1
  8340  0C6E  30A9               	movlw	169
  8341  0C6F  00B7               	movwf	___flmul@f1
  8342  0C70  1683               	bsf	3,5	;RP0=1, select bank1
  8343  0C71  0839               	movf	(measure_inductance@denominator+3)^(0+128),w
  8344  0C72  1283               	bcf	3,5	;RP0=0, select bank0
  8345  0C73  00A7               	movwf	___fldiv@f2+3
  8346  0C74  1683               	bsf	3,5	;RP0=1, select bank1
  8347  0C75  0838               	movf	(measure_inductance@denominator+2)^(0+128),w
  8348  0C76  1283               	bcf	3,5	;RP0=0, select bank0
  8349  0C77  00A6               	movwf	___fldiv@f2+2
  8350  0C78  1683               	bsf	3,5	;RP0=1, select bank1
  8351  0C79  0837               	movf	(measure_inductance@denominator+1)^(0+128),w
  8352  0C7A  1283               	bcf	3,5	;RP0=0, select bank0
  8353  0C7B  00A5               	movwf	___fldiv@f2+1
  8354  0C7C  1683               	bsf	3,5	;RP0=1, select bank1
  8355  0C7D  0836               	movf	measure_inductance@denominator^(0+128),w
  8356  0C7E  1283               	bcf	3,5	;RP0=0, select bank0
  8357  0C7F  00A4               	movwf	___fldiv@f2
  8358  0C80  1683               	bsf	3,5	;RP0=1, select bank1
  8359  0C81  0835               	movf	(measure_inductance@numerator+3)^(0+128),w
  8360  0C82  1283               	bcf	3,5	;RP0=0, select bank0
  8361  0C83  00AB               	movwf	___fldiv@f1+3
  8362  0C84  1683               	bsf	3,5	;RP0=1, select bank1
  8363  0C85  0834               	movf	(measure_inductance@numerator+2)^(0+128),w
  8364  0C86  1283               	bcf	3,5	;RP0=0, select bank0
  8365  0C87  00AA               	movwf	___fldiv@f1+2
  8366  0C88  1683               	bsf	3,5	;RP0=1, select bank1
  8367  0C89  0833               	movf	(measure_inductance@numerator+1)^(0+128),w
  8368  0C8A  1283               	bcf	3,5	;RP0=0, select bank0
  8369  0C8B  00A9               	movwf	___fldiv@f1+1
  8370  0C8C  1683               	bsf	3,5	;RP0=1, select bank1
  8371  0C8D  0832               	movf	measure_inductance@numerator^(0+128),w
  8372  0C8E  1283               	bcf	3,5	;RP0=0, select bank0
  8373  0C8F  00A8               	movwf	___fldiv@f1
  8374  0C90  160A  118A  24CF  120A  158A  	fcall	___fldiv
  8375  0C95  0827               	movf	?___fldiv+3,w
  8376  0C96  00BE               	movwf	___flmul@f2+3
  8377  0C97  0826               	movf	?___fldiv+2,w
  8378  0C98  00BD               	movwf	___flmul@f2+2
  8379  0C99  0825               	movf	?___fldiv+1,w
  8380  0C9A  00BC               	movwf	___flmul@f2+1
  8381  0C9B  0824               	movf	?___fldiv,w
  8382  0C9C  00BB               	movwf	___flmul@f2
  8383  0C9D  25C7  120A  158A   	fcall	___flmul
  8384  0CA0  083A               	movf	?___flmul+3,w
  8385  0CA1  1683               	bsf	3,5	;RP0=1, select bank1
  8386  0CA2  00DC               	movwf	(measure_inductance@Lin+3)^(0+128)
  8387  0CA3  1283               	bcf	3,5	;RP0=0, select bank0
  8388  0CA4  0839               	movf	?___flmul+2,w
  8389  0CA5  1683               	bsf	3,5	;RP0=1, select bank1
  8390  0CA6  00DB               	movwf	(measure_inductance@Lin+2)^(0+128)
  8391  0CA7  1283               	bcf	3,5	;RP0=0, select bank0
  8392  0CA8  0838               	movf	?___flmul+1,w
  8393  0CA9  1683               	bsf	3,5	;RP0=1, select bank1
  8394  0CAA  00DA               	movwf	(measure_inductance@Lin+1)^(0+128)
  8395  0CAB  1283               	bcf	3,5	;RP0=0, select bank0
  8396  0CAC  0837               	movf	?___flmul,w
  8397  0CAD  1683               	bsf	3,5	;RP0=1, select bank1
  8398  0CAE  00D9               	movwf	measure_inductance@Lin^(0+128)
  8399                           
  8400                           ;measure.c: 214: if(Lin > 999) {
  8401  0CAF  3044               	movlw	68
  8402  0CB0  00F5               	movwf	___flge@ff1+3
  8403  0CB1  3079               	movlw	121
  8404  0CB2  00F4               	movwf	___flge@ff1+2
  8405  0CB3  30C0               	movlw	192
  8406  0CB4  00F3               	movwf	___flge@ff1+1
  8407  0CB5  01F2               	clrf	___flge@ff1
  8408  0CB6  085C               	movf	(measure_inductance@Lin+3)^(0+128),w
  8409  0CB7  00F9               	movwf	___flge@ff2+3
  8410  0CB8  085B               	movf	(measure_inductance@Lin+2)^(0+128),w
  8411  0CB9  00F8               	movwf	___flge@ff2+2
  8412  0CBA  085A               	movf	(measure_inductance@Lin+1)^(0+128),w
  8413  0CBB  00F7               	movwf	___flge@ff2+1
  8414  0CBC  0859               	movf	measure_inductance@Lin^(0+128),w
  8415  0CBD  00F6               	movwf	___flge@ff2
  8416  0CBE  265F  120A  158A   	fcall	___flge
  8417  0CC1  1803               	btfsc	3,0
  8418  0CC2  2D7F               	goto	l4335
  8419                           
  8420                           ;measure.c: 215: if(Lin > (999e+03l)) {
  8421  0CC3  3049               	movlw	73
  8422  0CC4  00F5               	movwf	___flge@ff1+3
  8423  0CC5  3073               	movlw	115
  8424  0CC6  00F4               	movwf	___flge@ff1+2
  8425  0CC7  30E5               	movlw	229
  8426  0CC8  00F3               	movwf	___flge@ff1+1
  8427  0CC9  3080               	movlw	128
  8428  0CCA  00F2               	movwf	___flge@ff1
  8429  0CCB  1683               	bsf	3,5	;RP0=1, select bank1
  8430  0CCC  1303               	bcf	3,6	;RP1=0, select bank1
  8431  0CCD  085C               	movf	(measure_inductance@Lin+3)^(0+128),w
  8432  0CCE  00F9               	movwf	___flge@ff2+3
  8433  0CCF  085B               	movf	(measure_inductance@Lin+2)^(0+128),w
  8434  0CD0  00F8               	movwf	___flge@ff2+2
  8435  0CD1  085A               	movf	(measure_inductance@Lin+1)^(0+128),w
  8436  0CD2  00F7               	movwf	___flge@ff2+1
  8437  0CD3  0859               	movf	measure_inductance@Lin^(0+128),w
  8438  0CD4  00F6               	movwf	___flge@ff2
  8439  0CD5  265F  120A  158A   	fcall	___flge
  8440  0CD8  1803               	btfsc	3,0
  8441  0CD9  2D51               	goto	l4331
  8442                           
  8443                           ;measure.c: 216: if(Lin > (999e+06l)) {
  8444  0CDA  304E               	movlw	78
  8445  0CDB  00F5               	movwf	___flge@ff1+3
  8446  0CDC  306E               	movlw	110
  8447  0CDD  00F4               	movwf	___flge@ff1+2
  8448  0CDE  302E               	movlw	46
  8449  0CDF  00F3               	movwf	___flge@ff1+1
  8450  0CE0  301F               	movlw	31
  8451  0CE1  00F2               	movwf	___flge@ff1
  8452  0CE2  1683               	bsf	3,5	;RP0=1, select bank1
  8453  0CE3  1303               	bcf	3,6	;RP1=0, select bank1
  8454  0CE4  085C               	movf	(measure_inductance@Lin+3)^(0+128),w
  8455  0CE5  00F9               	movwf	___flge@ff2+3
  8456  0CE6  085B               	movf	(measure_inductance@Lin+2)^(0+128),w
  8457  0CE7  00F8               	movwf	___flge@ff2+2
  8458  0CE8  085A               	movf	(measure_inductance@Lin+1)^(0+128),w
  8459  0CE9  00F7               	movwf	___flge@ff2+1
  8460  0CEA  0859               	movf	measure_inductance@Lin^(0+128),w
  8461  0CEB  00F6               	movwf	___flge@ff2
  8462  0CEC  265F  120A  158A   	fcall	___flge
  8463  0CEF  1803               	btfsc	3,0
  8464  0CF0  2D21               	goto	l4327
  8465                           
  8466                           ;measure.c: 217: Lin = Lin / (1e+09l);
  8467  0CF1  304E               	movlw	78
  8468  0CF2  1283               	bcf	3,5	;RP0=0, select bank0
  8469  0CF3  1303               	bcf	3,6	;RP1=0, select bank0
  8470  0CF4  00A7               	movwf	___fldiv@f2+3
  8471  0CF5  306E               	movlw	110
  8472  0CF6  00A6               	movwf	___fldiv@f2+2
  8473  0CF7  306B               	movlw	107
  8474  0CF8  00A5               	movwf	___fldiv@f2+1
  8475  0CF9  3028               	movlw	40
  8476  0CFA  00A4               	movwf	___fldiv@f2
  8477  0CFB  1683               	bsf	3,5	;RP0=1, select bank1
  8478  0CFC  085C               	movf	(measure_inductance@Lin+3)^(0+128),w
  8479  0CFD  1283               	bcf	3,5	;RP0=0, select bank0
  8480  0CFE  00AB               	movwf	___fldiv@f1+3
  8481  0CFF  1683               	bsf	3,5	;RP0=1, select bank1
  8482  0D00  085B               	movf	(measure_inductance@Lin+2)^(0+128),w
  8483  0D01  1283               	bcf	3,5	;RP0=0, select bank0
  8484  0D02  00AA               	movwf	___fldiv@f1+2
  8485  0D03  1683               	bsf	3,5	;RP0=1, select bank1
  8486  0D04  085A               	movf	(measure_inductance@Lin+1)^(0+128),w
  8487  0D05  1283               	bcf	3,5	;RP0=0, select bank0
  8488  0D06  00A9               	movwf	___fldiv@f1+1
  8489  0D07  1683               	bsf	3,5	;RP0=1, select bank1
  8490  0D08  0859               	movf	measure_inductance@Lin^(0+128),w
  8491  0D09  1283               	bcf	3,5	;RP0=0, select bank0
  8492  0D0A  00A8               	movwf	___fldiv@f1
  8493  0D0B  160A  118A  24CF  120A  158A  	fcall	___fldiv
  8494  0D10  0827               	movf	?___fldiv+3,w
  8495  0D11  1683               	bsf	3,5	;RP0=1, select bank1
  8496  0D12  00DC               	movwf	(measure_inductance@Lin+3)^(0+128)
  8497  0D13  1283               	bcf	3,5	;RP0=0, select bank0
  8498  0D14  0826               	movf	?___fldiv+2,w
  8499  0D15  1683               	bsf	3,5	;RP0=1, select bank1
  8500  0D16  00DB               	movwf	(measure_inductance@Lin+2)^(0+128)
  8501  0D17  1283               	bcf	3,5	;RP0=0, select bank0
  8502  0D18  0825               	movf	?___fldiv+1,w
  8503  0D19  1683               	bsf	3,5	;RP0=1, select bank1
  8504  0D1A  00DA               	movwf	(measure_inductance@Lin+1)^(0+128)
  8505  0D1B  1283               	bcf	3,5	;RP0=0, select bank0
  8506  0D1C  0824               	movf	?___fldiv,w
  8507  0D1D  1683               	bsf	3,5	;RP0=1, select bank1
  8508  0D1E  00D9               	movwf	measure_inductance@Lin^(0+128)
  8509                           
  8510                           ;measure.c: 218: unit = 0;
  8511  0D1F  01CA               	clrf	measure_inductance@unit^(0+128)
  8512                           
  8513                           ;measure.c: 219: } else {
  8514  0D20  2D83               	goto	l4337
  8515  0D21                     l4327:	
  8516                           
  8517                           ;measure.c: 220: Lin = Lin / (1e+06l);
  8518  0D21  3049               	movlw	73
  8519  0D22  1283               	bcf	3,5	;RP0=0, select bank0
  8520  0D23  1303               	bcf	3,6	;RP1=0, select bank0
  8521  0D24  00A7               	movwf	___fldiv@f2+3
  8522  0D25  3074               	movlw	116
  8523  0D26  00A6               	movwf	___fldiv@f2+2
  8524  0D27  3024               	movlw	36
  8525  0D28  00A5               	movwf	___fldiv@f2+1
  8526  0D29  01A4               	clrf	___fldiv@f2
  8527  0D2A  1683               	bsf	3,5	;RP0=1, select bank1
  8528  0D2B  085C               	movf	(measure_inductance@Lin+3)^(0+128),w
  8529  0D2C  1283               	bcf	3,5	;RP0=0, select bank0
  8530  0D2D  00AB               	movwf	___fldiv@f1+3
  8531  0D2E  1683               	bsf	3,5	;RP0=1, select bank1
  8532  0D2F  085B               	movf	(measure_inductance@Lin+2)^(0+128),w
  8533  0D30  1283               	bcf	3,5	;RP0=0, select bank0
  8534  0D31  00AA               	movwf	___fldiv@f1+2
  8535  0D32  1683               	bsf	3,5	;RP0=1, select bank1
  8536  0D33  085A               	movf	(measure_inductance@Lin+1)^(0+128),w
  8537  0D34  1283               	bcf	3,5	;RP0=0, select bank0
  8538  0D35  00A9               	movwf	___fldiv@f1+1
  8539  0D36  1683               	bsf	3,5	;RP0=1, select bank1
  8540  0D37  0859               	movf	measure_inductance@Lin^(0+128),w
  8541  0D38  1283               	bcf	3,5	;RP0=0, select bank0
  8542  0D39  00A8               	movwf	___fldiv@f1
  8543  0D3A  160A  118A  24CF  120A  158A  	fcall	___fldiv
  8544  0D3F  0827               	movf	?___fldiv+3,w
  8545  0D40  1683               	bsf	3,5	;RP0=1, select bank1
  8546  0D41  00DC               	movwf	(measure_inductance@Lin+3)^(0+128)
  8547  0D42  1283               	bcf	3,5	;RP0=0, select bank0
  8548  0D43  0826               	movf	?___fldiv+2,w
  8549  0D44  1683               	bsf	3,5	;RP0=1, select bank1
  8550  0D45  00DB               	movwf	(measure_inductance@Lin+2)^(0+128)
  8551  0D46  1283               	bcf	3,5	;RP0=0, select bank0
  8552  0D47  0825               	movf	?___fldiv+1,w
  8553  0D48  1683               	bsf	3,5	;RP0=1, select bank1
  8554  0D49  00DA               	movwf	(measure_inductance@Lin+1)^(0+128)
  8555  0D4A  1283               	bcf	3,5	;RP0=0, select bank0
  8556  0D4B  0824               	movf	?___fldiv,w
  8557  0D4C  1683               	bsf	3,5	;RP0=1, select bank1
  8558  0D4D  00D9               	movwf	measure_inductance@Lin^(0+128)
  8559                           
  8560                           ;measure.c: 221: unit = 1;
  8561  0D4E  01CA               	clrf	measure_inductance@unit^(0+128)
  8562  0D4F  0ACA               	incf	measure_inductance@unit^(0+128),f
  8563  0D50  2D83               	goto	l4337
  8564  0D51                     l4331:	
  8565                           
  8566                           ;measure.c: 224: Lin = Lin / 1e+03l;
  8567  0D51  3044               	movlw	68
  8568  0D52  1283               	bcf	3,5	;RP0=0, select bank0
  8569  0D53  1303               	bcf	3,6	;RP1=0, select bank0
  8570  0D54  00A7               	movwf	___fldiv@f2+3
  8571  0D55  307A               	movlw	122
  8572  0D56  00A6               	movwf	___fldiv@f2+2
  8573  0D57  01A5               	clrf	___fldiv@f2+1
  8574  0D58  01A4               	clrf	___fldiv@f2
  8575  0D59  1683               	bsf	3,5	;RP0=1, select bank1
  8576  0D5A  085C               	movf	(measure_inductance@Lin+3)^(0+128),w
  8577  0D5B  1283               	bcf	3,5	;RP0=0, select bank0
  8578  0D5C  00AB               	movwf	___fldiv@f1+3
  8579  0D5D  1683               	bsf	3,5	;RP0=1, select bank1
  8580  0D5E  085B               	movf	(measure_inductance@Lin+2)^(0+128),w
  8581  0D5F  1283               	bcf	3,5	;RP0=0, select bank0
  8582  0D60  00AA               	movwf	___fldiv@f1+2
  8583  0D61  1683               	bsf	3,5	;RP0=1, select bank1
  8584  0D62  085A               	movf	(measure_inductance@Lin+1)^(0+128),w
  8585  0D63  1283               	bcf	3,5	;RP0=0, select bank0
  8586  0D64  00A9               	movwf	___fldiv@f1+1
  8587  0D65  1683               	bsf	3,5	;RP0=1, select bank1
  8588  0D66  0859               	movf	measure_inductance@Lin^(0+128),w
  8589  0D67  1283               	bcf	3,5	;RP0=0, select bank0
  8590  0D68  00A8               	movwf	___fldiv@f1
  8591  0D69  160A  118A  24CF  120A  158A  	fcall	___fldiv
  8592  0D6E  0827               	movf	?___fldiv+3,w
  8593  0D6F  1683               	bsf	3,5	;RP0=1, select bank1
  8594  0D70  00DC               	movwf	(measure_inductance@Lin+3)^(0+128)
  8595  0D71  1283               	bcf	3,5	;RP0=0, select bank0
  8596  0D72  0826               	movf	?___fldiv+2,w
  8597  0D73  1683               	bsf	3,5	;RP0=1, select bank1
  8598  0D74  00DB               	movwf	(measure_inductance@Lin+2)^(0+128)
  8599  0D75  1283               	bcf	3,5	;RP0=0, select bank0
  8600  0D76  0825               	movf	?___fldiv+1,w
  8601  0D77  1683               	bsf	3,5	;RP0=1, select bank1
  8602  0D78  00DA               	movwf	(measure_inductance@Lin+1)^(0+128)
  8603  0D79  1283               	bcf	3,5	;RP0=0, select bank0
  8604  0D7A  0824               	movf	?___fldiv,w
  8605  0D7B  1683               	bsf	3,5	;RP0=1, select bank1
  8606  0D7C  00D9               	movwf	measure_inductance@Lin^(0+128)
  8607                           
  8608                           ;measure.c: 225: unit = 2;
  8609  0D7D  3002               	movlw	2
  8610  0D7E  2D82               	goto	L5
  8611  0D7F                     l4335:	
  8612                           
  8613                           ;measure.c: 228: unit = 3;
  8614  0D7F  3003               	movlw	3
  8615  0D80  1683               	bsf	3,5	;RP0=1, select bank1
  8616  0D81  1303               	bcf	3,6	;RP1=0, select bank1
  8617  0D82                     L5:	
  8618  0D82  00CA               	movwf	measure_inductance@unit^(0+128)
  8619  0D83                     l4337:	
  8620                           
  8621                           ;measure.c: 230: Lin = Lin * 100;
  8622  0D83  3042               	movlw	66
  8623  0D84  1283               	bcf	3,5	;RP0=0, select bank0
  8624  0D85  00BA               	movwf	___flmul@f1+3
  8625  0D86  30C8               	movlw	200
  8626  0D87  00B9               	movwf	___flmul@f1+2
  8627  0D88  01B8               	clrf	___flmul@f1+1
  8628  0D89  01B7               	clrf	___flmul@f1
  8629  0D8A  1683               	bsf	3,5	;RP0=1, select bank1
  8630  0D8B  085C               	movf	(measure_inductance@Lin+3)^(0+128),w
  8631  0D8C  1283               	bcf	3,5	;RP0=0, select bank0
  8632  0D8D  00BE               	movwf	___flmul@f2+3
  8633  0D8E  1683               	bsf	3,5	;RP0=1, select bank1
  8634  0D8F  085B               	movf	(measure_inductance@Lin+2)^(0+128),w
  8635  0D90  1283               	bcf	3,5	;RP0=0, select bank0
  8636  0D91  00BD               	movwf	___flmul@f2+2
  8637  0D92  1683               	bsf	3,5	;RP0=1, select bank1
  8638  0D93  085A               	movf	(measure_inductance@Lin+1)^(0+128),w
  8639  0D94  1283               	bcf	3,5	;RP0=0, select bank0
  8640  0D95  00BC               	movwf	___flmul@f2+1
  8641  0D96  1683               	bsf	3,5	;RP0=1, select bank1
  8642  0D97  0859               	movf	measure_inductance@Lin^(0+128),w
  8643  0D98  1283               	bcf	3,5	;RP0=0, select bank0
  8644  0D99  00BB               	movwf	___flmul@f2
  8645  0D9A  25C7  120A  158A   	fcall	___flmul
  8646  0D9D  083A               	movf	?___flmul+3,w
  8647  0D9E  1683               	bsf	3,5	;RP0=1, select bank1
  8648  0D9F  00DC               	movwf	(measure_inductance@Lin+3)^(0+128)
  8649  0DA0  1283               	bcf	3,5	;RP0=0, select bank0
  8650  0DA1  0839               	movf	?___flmul+2,w
  8651  0DA2  1683               	bsf	3,5	;RP0=1, select bank1
  8652  0DA3  00DB               	movwf	(measure_inductance@Lin+2)^(0+128)
  8653  0DA4  1283               	bcf	3,5	;RP0=0, select bank0
  8654  0DA5  0838               	movf	?___flmul+1,w
  8655  0DA6  1683               	bsf	3,5	;RP0=1, select bank1
  8656  0DA7  00DA               	movwf	(measure_inductance@Lin+1)^(0+128)
  8657  0DA8  1283               	bcf	3,5	;RP0=0, select bank0
  8658  0DA9  0837               	movf	?___flmul,w
  8659  0DAA  1683               	bsf	3,5	;RP0=1, select bank1
  8660  0DAB  00D9               	movwf	measure_inductance@Lin^(0+128)
  8661                           
  8662                           ;measure.c: 231: var = (unsigned short int)Lin;
  8663  0DAC  085C               	movf	(measure_inductance@Lin+3)^(0+128),w
  8664  0DAD  00AB               	movwf	(___fltol@f1+3)^(0+128)
  8665  0DAE  085B               	movf	(measure_inductance@Lin+2)^(0+128),w
  8666  0DAF  00AA               	movwf	(___fltol@f1+2)^(0+128)
  8667  0DB0  085A               	movf	(measure_inductance@Lin+1)^(0+128),w
  8668  0DB1  00A9               	movwf	(___fltol@f1+1)^(0+128)
  8669  0DB2  0859               	movf	measure_inductance@Lin^(0+128),w
  8670  0DB3  00A8               	movwf	___fltol@f1^(0+128)
  8671  0DB4  278F               	fcall	___fltol
  8672  0DB5  0829               	movf	(?___fltol^(0+128)+1),w
  8673  0DB6  00D8               	movwf	(measure_inductance@var+1)^(0+128)
  8674  0DB7  0828               	movf	?___fltol^(0+128),w
  8675  0DB8  00D7               	movwf	measure_inductance@var^(0+128)
  8676                           
  8677                           ;measure.c: 233: print_reading(var);
  8678  0DB9  0858               	movf	(measure_inductance@var+1)^(0+128),w
  8679  0DBA  1283               	bcf	3,5	;RP0=0, select bank0
  8680  0DBB  00CA               	movwf	print_reading@measurement+1
  8681  0DBC  1683               	bsf	3,5	;RP0=1, select bank1
  8682  0DBD  0857               	movf	measure_inductance@var^(0+128),w
  8683  0DBE  1283               	bcf	3,5	;RP0=0, select bank0
  8684  0DBF  00C9               	movwf	print_reading@measurement
  8685  0DC0  120A  118A  24E9  120A  158A  	fcall	_print_reading
  8686                           
  8687                           ;measure.c: 234: print_unit(unit);
  8688  0DC5  1683               	bsf	3,5	;RP0=1, select bank1
  8689  0DC6  2FE6               	ljmp	l3969
  8690  0DC7                     __end_of_measure_inductance:	
  8691  0DC7                     __ptext28:	
  8692 ;; *************** function ___flmul *****************
  8693 ;; Defined at:
  8694 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\flmul.c"
  8695 ;; Parameters:    Size  Location     Type
  8696 ;;  f1              4   23[BANK0 ] int 
  8697 ;;  f2              4   27[BANK0 ] int 
  8698 ;; Auto vars:     Size  Location     Type
  8699 ;;  f3_as_produc    4   36[BANK0 ] unsigned long 
  8700 ;;  sign            1   41[BANK0 ] unsigned char 
  8701 ;;  cntr            1   40[BANK0 ] unsigned char 
  8702 ;;  exp             1   35[BANK0 ] unsigned char 
  8703 ;; Return value:  Size  Location     Type
  8704 ;;                  4   23[BANK0 ] unsigned char 
  8705 ;; Registers used:
  8706 ;;		wreg, status,2, status,0, pclath, cstack
  8707 ;; Tracked objects:
  8708 ;;		On entry : 300/0
  8709 ;;		On exit  : 300/0
  8710 ;;		Unchanged: 0/0
  8711 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8712 ;;      Params:         0       8       0       0       0
  8713 ;;      Locals:         0       7       0       0       0
  8714 ;;      Temps:          0       4       0       0       0
  8715 ;;      Totals:         0      19       0       0       0
  8716 ;;Total ram usage:       19 bytes
  8717 ;; Hardware stack levels used:    1
  8718 ;; Hardware stack levels required when called:    2
  8719 ;; This function calls:
  8720 ;;		___flpack
  8721 ;; This function is called by:
  8722 ;;		_format_double
  8723 ;;		_measure_capacitance
  8724 ;;		_measure_inductance
  8725 ;;		_log
  8726 ;;		_log10
  8727 ;;		_pow
  8728 ;;		_eval_poly
  8729 ;;		_exp
  8730 ;; This function uses a non-reentrant model
  8731 ;;
  8732                           
  8733                           
  8734                           ;psect for function ___flmul
  8735  0DC7                     ___flmul:	
  8736                           
  8737                           ;incstack = 0
  8738                           ; Regs used in ___flmul: [wreg+status,2+status,0+pclath+cstack]
  8739  0DC7  0837               	movf	___flmul@f1,w
  8740  0DC8  00BF               	movwf	??___flmul
  8741  0DC9  0838               	movf	___flmul@f1+1,w
  8742  0DCA  00C0               	movwf	??___flmul+1
  8743  0DCB  0839               	movf	___flmul@f1+2,w
  8744  0DCC  00C1               	movwf	??___flmul+2
  8745  0DCD  083A               	movf	___flmul@f1+3,w
  8746  0DCE  00C2               	movwf	??___flmul+3
  8747  0DCF  1003               	clrc
  8748  0DD0  0D41               	rlf	??___flmul+2,w
  8749  0DD1  0D42               	rlf	??___flmul+3,w
  8750  0DD2  00C3               	movwf	___flmul@exp
  8751  0DD3  0843               	movf	___flmul@exp,w
  8752  0DD4  1D03               	btfss	3,2
  8753  0DD5  2DDB               	goto	l3619
  8754  0DD6  01B7               	clrf	?___flmul
  8755  0DD7  01B8               	clrf	?___flmul+1
  8756  0DD8  01B9               	clrf	?___flmul+2
  8757  0DD9  01BA               	clrf	?___flmul+3
  8758  0DDA  0008               	return
  8759  0DDB                     l3619:	
  8760  0DDB  083B               	movf	___flmul@f2,w
  8761  0DDC  00BF               	movwf	??___flmul
  8762  0DDD  083C               	movf	___flmul@f2+1,w
  8763  0DDE  00C0               	movwf	??___flmul+1
  8764  0DDF  083D               	movf	___flmul@f2+2,w
  8765  0DE0  00C1               	movwf	??___flmul+2
  8766  0DE1  083E               	movf	___flmul@f2+3,w
  8767  0DE2  00C2               	movwf	??___flmul+3
  8768  0DE3  1003               	clrc
  8769  0DE4  0D41               	rlf	??___flmul+2,w
  8770  0DE5  0D42               	rlf	??___flmul+3,w
  8771  0DE6  00C9               	movwf	___flmul@sign
  8772  0DE7  0849               	movf	___flmul@sign,w
  8773  0DE8  1D03               	btfss	3,2
  8774  0DE9  2DEF               	goto	l3623
  8775  0DEA  01B7               	clrf	?___flmul
  8776  0DEB  01B8               	clrf	?___flmul+1
  8777  0DEC  01B9               	clrf	?___flmul+2
  8778  0DED  01BA               	clrf	?___flmul+3
  8779  0DEE  0008               	return
  8780  0DEF                     l3623:	
  8781  0DEF  0849               	movf	___flmul@sign,w
  8782  0DF0  3E7B               	addlw	123
  8783  0DF1  07C3               	addwf	___flmul@exp,f
  8784  0DF2  083A               	movf	___flmul@f1+3,w
  8785  0DF3  00C9               	movwf	___flmul@sign
  8786  0DF4  083E               	movf	___flmul@f2+3,w
  8787  0DF5  06C9               	xorwf	___flmul@sign,f
  8788  0DF6  3080               	movlw	128
  8789  0DF7  05C9               	andwf	___flmul@sign,f
  8790  0DF8  3007               	movlw	7
  8791  0DF9  17B9               	bsf	___flmul@f1+2,7
  8792  0DFA  17BD               	bsf	___flmul@f2+2,7
  8793  0DFB  01BE               	clrf	___flmul@f2+3
  8794  0DFC  01C4               	clrf	___flmul@f3_as_product
  8795  0DFD  01C5               	clrf	___flmul@f3_as_product+1
  8796  0DFE  01C6               	clrf	___flmul@f3_as_product+2
  8797  0DFF  01C7               	clrf	___flmul@f3_as_product+3
  8798  0E00  00C8               	movwf	___flmul@cntr
  8799  0E01                     l3641:	
  8800  0E01  1C37               	btfss	___flmul@f1,0
  8801  0E02  2E17               	goto	l3645
  8802  0E03  083B               	movf	___flmul@f2,w
  8803  0E04  07C4               	addwf	___flmul@f3_as_product,f
  8804  0E05  083C               	movf	___flmul@f2+1,w
  8805  0E06  1103               	clrz
  8806  0E07  1803               	skipnc
  8807  0E08  3E01               	addlw	1
  8808  0E09  1D03               	btfss	3,2
  8809  0E0A  07C5               	addwf	___flmul@f3_as_product+1,f
  8810  0E0B  083D               	movf	___flmul@f2+2,w
  8811  0E0C  1103               	clrz
  8812  0E0D  1803               	skipnc
  8813  0E0E  3E01               	addlw	1
  8814  0E0F  1D03               	btfss	3,2
  8815  0E10  07C6               	addwf	___flmul@f3_as_product+2,f
  8816  0E11  083E               	movf	___flmul@f2+3,w
  8817  0E12  1103               	clrz
  8818  0E13  1803               	skipnc
  8819  0E14  3E01               	addlw	1
  8820  0E15  1D03               	btfss	3,2
  8821  0E16  07C7               	addwf	___flmul@f3_as_product+3,f
  8822  0E17                     l3645:	
  8823  0E17  1003               	clrc
  8824  0E18  0CBA               	rrf	___flmul@f1+3,f
  8825  0E19  0CB9               	rrf	___flmul@f1+2,f
  8826  0E1A  0CB8               	rrf	___flmul@f1+1,f
  8827  0E1B  0CB7               	rrf	___flmul@f1,f
  8828  0E1C  1003               	clrc
  8829  0E1D  0DBB               	rlf	___flmul@f2,f
  8830  0E1E  0DBC               	rlf	___flmul@f2+1,f
  8831  0E1F  0DBD               	rlf	___flmul@f2+2,f
  8832  0E20  0DBE               	rlf	___flmul@f2+3,f
  8833  0E21  0BC8               	decfsz	___flmul@cntr,f
  8834  0E22  2E01               	goto	l3641
  8835  0E23  3011               	movlw	17
  8836  0E24  00C8               	movwf	___flmul@cntr
  8837  0E25                     l3653:	
  8838  0E25  1C37               	btfss	___flmul@f1,0
  8839  0E26  2E3B               	goto	l3657
  8840  0E27  083B               	movf	___flmul@f2,w
  8841  0E28  07C4               	addwf	___flmul@f3_as_product,f
  8842  0E29  083C               	movf	___flmul@f2+1,w
  8843  0E2A  1103               	clrz
  8844  0E2B  1803               	skipnc
  8845  0E2C  3E01               	addlw	1
  8846  0E2D  1D03               	btfss	3,2
  8847  0E2E  07C5               	addwf	___flmul@f3_as_product+1,f
  8848  0E2F  083D               	movf	___flmul@f2+2,w
  8849  0E30  1103               	clrz
  8850  0E31  1803               	skipnc
  8851  0E32  3E01               	addlw	1
  8852  0E33  1D03               	btfss	3,2
  8853  0E34  07C6               	addwf	___flmul@f3_as_product+2,f
  8854  0E35  083E               	movf	___flmul@f2+3,w
  8855  0E36  1103               	clrz
  8856  0E37  1803               	skipnc
  8857  0E38  3E01               	addlw	1
  8858  0E39  1D03               	btfss	3,2
  8859  0E3A  07C7               	addwf	___flmul@f3_as_product+3,f
  8860  0E3B                     l3657:	
  8861  0E3B  1003               	clrc
  8862  0E3C  0CBA               	rrf	___flmul@f1+3,f
  8863  0E3D  0CB9               	rrf	___flmul@f1+2,f
  8864  0E3E  0CB8               	rrf	___flmul@f1+1,f
  8865  0E3F  0CB7               	rrf	___flmul@f1,f
  8866  0E40  1003               	clrc
  8867  0E41  0CC7               	rrf	___flmul@f3_as_product+3,f
  8868  0E42  0CC6               	rrf	___flmul@f3_as_product+2,f
  8869  0E43  0CC5               	rrf	___flmul@f3_as_product+1,f
  8870  0E44  0CC4               	rrf	___flmul@f3_as_product,f
  8871  0E45  0BC8               	decfsz	___flmul@cntr,f
  8872  0E46  2E25               	goto	l3653
  8873  0E47  0847               	movf	___flmul@f3_as_product+3,w
  8874  0E48  00F5               	movwf	___flpack@arg+3
  8875  0E49  0846               	movf	___flmul@f3_as_product+2,w
  8876  0E4A  00F4               	movwf	___flpack@arg+2
  8877  0E4B  0845               	movf	___flmul@f3_as_product+1,w
  8878  0E4C  00F3               	movwf	___flpack@arg+1
  8879  0E4D  0844               	movf	___flmul@f3_as_product,w
  8880  0E4E  00F2               	movwf	___flpack@arg
  8881  0E4F  0843               	movf	___flmul@exp,w
  8882  0E50  00F6               	movwf	___flpack@exp
  8883  0E51  0849               	movf	___flmul@sign,w
  8884  0E52  00F7               	movwf	___flpack@sign
  8885  0E53  160A  118A  255B   	fcall	___flpack
  8886  0E56  0875               	movf	?___flpack+3,w
  8887  0E57  00BA               	movwf	?___flmul+3
  8888  0E58  0874               	movf	?___flpack+2,w
  8889  0E59  00B9               	movwf	?___flmul+2
  8890  0E5A  0873               	movf	?___flpack+1,w
  8891  0E5B  00B8               	movwf	?___flmul+1
  8892  0E5C  0872               	movf	?___flpack,w
  8893  0E5D  00B7               	movwf	?___flmul
  8894  0E5E  0008               	return
  8895  0E5F                     __end_of___flmul:	
  8896  0E5F                     __ptext30:	
  8897 ;; *************** function ___flge *****************
  8898 ;; Defined at:
  8899 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\flge.c"
  8900 ;; Parameters:    Size  Location     Type
  8901 ;;  ff1             4    2[COMMON] unsigned char 
  8902 ;;  ff2             4    6[COMMON] unsigned char 
  8903 ;; Auto vars:     Size  Location     Type
  8904 ;;		None
  8905 ;; Return value:  Size  Location     Type
  8906 ;;		None               void
  8907 ;; Registers used:
  8908 ;;		wreg, status,2, status,0
  8909 ;; Tracked objects:
  8910 ;;		On entry : 0/100
  8911 ;;		On exit  : 0/0
  8912 ;;		Unchanged: 0/0
  8913 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8914 ;;      Params:         8       0       0       0       0
  8915 ;;      Locals:         0       0       0       0       0
  8916 ;;      Temps:          0       4       0       0       0
  8917 ;;      Totals:         8       4       0       0       0
  8918 ;;Total ram usage:       12 bytes
  8919 ;; Hardware stack levels used:    1
  8920 ;; Hardware stack levels required when called:    1
  8921 ;; This function calls:
  8922 ;;		Nothing
  8923 ;; This function is called by:
  8924 ;;		_format_double
  8925 ;;		_measure_capacitance
  8926 ;;		_measure_inductance
  8927 ;;		_floor
  8928 ;;		_ldexp
  8929 ;;		_log
  8930 ;;		_pow
  8931 ;;		_exp
  8932 ;; This function uses a non-reentrant model
  8933 ;;
  8934                           
  8935                           
  8936                           ;psect for function ___flge
  8937  0E5F                     ___flge:	
  8938                           
  8939                           ;incstack = 0
  8940                           ; Regs used in ___flge: [wreg+status,2+status,0]
  8941  0E5F  1FF5               	btfss	___flge@ff1+3,7
  8942  0E60  2E7E               	goto	l2451
  8943  0E61  1283               	bcf	3,5	;RP0=0, select bank0
  8944  0E62  1303               	bcf	3,6	;RP1=0, select bank0
  8945  0E63  3080               	movlw	128
  8946  0E64  01A0               	clrf	??___flge
  8947  0E65  01A1               	clrf	??___flge+1
  8948  0E66  01A2               	clrf	??___flge+2
  8949  0E67  00A3               	movwf	??___flge+3
  8950  0E68  0872               	movf	___flge@ff1,w
  8951  0E69  02A0               	subwf	??___flge,f
  8952  0E6A  0873               	movf	___flge@ff1+1,w
  8953  0E6B  1C03               	skipc
  8954  0E6C  0F73               	incfsz	___flge@ff1+1,w
  8955  0E6D  02A1               	subwf	??___flge+1,f
  8956  0E6E  0874               	movf	___flge@ff1+2,w
  8957  0E6F  1C03               	skipc
  8958  0E70  0F74               	incfsz	___flge@ff1+2,w
  8959  0E71  02A2               	subwf	??___flge+2,f
  8960  0E72  0875               	movf	___flge@ff1+3,w
  8961  0E73  1C03               	skipc
  8962  0E74  0F75               	incfsz	___flge@ff1+3,w
  8963  0E75  02A3               	subwf	??___flge+3,f
  8964  0E76  0823               	movf	??___flge+3,w
  8965  0E77  00F5               	movwf	___flge@ff1+3
  8966  0E78  0822               	movf	??___flge+2,w
  8967  0E79  00F4               	movwf	___flge@ff1+2
  8968  0E7A  0821               	movf	??___flge+1,w
  8969  0E7B  00F3               	movwf	___flge@ff1+1
  8970  0E7C  0820               	movf	??___flge,w
  8971  0E7D  00F2               	movwf	___flge@ff1
  8972  0E7E                     l2451:	
  8973  0E7E  1FF9               	btfss	___flge@ff2+3,7
  8974  0E7F  2E9D               	goto	l878
  8975  0E80  1283               	bcf	3,5	;RP0=0, select bank0
  8976  0E81  1303               	bcf	3,6	;RP1=0, select bank0
  8977  0E82  3080               	movlw	128
  8978  0E83  01A0               	clrf	??___flge
  8979  0E84  01A1               	clrf	??___flge+1
  8980  0E85  01A2               	clrf	??___flge+2
  8981  0E86  00A3               	movwf	??___flge+3
  8982  0E87  0876               	movf	___flge@ff2,w
  8983  0E88  02A0               	subwf	??___flge,f
  8984  0E89  0877               	movf	___flge@ff2+1,w
  8985  0E8A  1C03               	skipc
  8986  0E8B  0F77               	incfsz	___flge@ff2+1,w
  8987  0E8C  02A1               	subwf	??___flge+1,f
  8988  0E8D  0878               	movf	___flge@ff2+2,w
  8989  0E8E  1C03               	skipc
  8990  0E8F  0F78               	incfsz	___flge@ff2+2,w
  8991  0E90  02A2               	subwf	??___flge+2,f
  8992  0E91  0879               	movf	___flge@ff2+3,w
  8993  0E92  1C03               	skipc
  8994  0E93  0F79               	incfsz	___flge@ff2+3,w
  8995  0E94  02A3               	subwf	??___flge+3,f
  8996  0E95  0823               	movf	??___flge+3,w
  8997  0E96  00F9               	movwf	___flge@ff2+3
  8998  0E97  0822               	movf	??___flge+2,w
  8999  0E98  00F8               	movwf	___flge@ff2+2
  9000  0E99  0821               	movf	??___flge+1,w
  9001  0E9A  00F7               	movwf	___flge@ff2+1
  9002  0E9B  0820               	movf	??___flge,w
  9003  0E9C  00F6               	movwf	___flge@ff2
  9004  0E9D                     l878:	
  9005  0E9D  3080               	movlw	128
  9006  0E9E  06F5               	xorwf	___flge@ff1+3,f
  9007  0E9F  06F9               	xorwf	___flge@ff2+3,f
  9008  0EA0  0879               	movf	___flge@ff2+3,w
  9009  0EA1  0275               	subwf	___flge@ff1+3,w
  9010  0EA2  1D03               	skipz
  9011  0EA3  0008               	return
  9012  0EA4  0878               	movf	___flge@ff2+2,w
  9013  0EA5  0274               	subwf	___flge@ff1+2,w
  9014  0EA6  1D03               	skipz
  9015  0EA7  0008               	return
  9016  0EA8  0877               	movf	___flge@ff2+1,w
  9017  0EA9  0273               	subwf	___flge@ff1+1,w
  9018  0EAA  1D03               	skipz
  9019  0EAB  0008               	return
  9020  0EAC  0876               	movf	___flge@ff2,w
  9021  0EAD  0272               	subwf	___flge@ff1,w
  9022  0EAE  0008               	return
  9023  0EAF                     __end_of___flge:	
  9024  0EAF                     __ptext35:	
  9025 ;; *************** function _measure_freq *****************
  9026 ;; Defined at:
  9027 ;;		line 71 in file "../../../lib/../src/measure.c"
  9028 ;; Parameters:    Size  Location     Type
  9029 ;;		None
  9030 ;; Auto vars:     Size  Location     Type
  9031 ;;  count           2   45[BANK0 ] unsigned short 
  9032 ;; Return value:  Size  Location     Type
  9033 ;;                  2   41[BANK0 ] unsigned short 
  9034 ;; Registers used:
  9035 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  9036 ;; Tracked objects:
  9037 ;;		On entry : 0/0
  9038 ;;		On exit  : 300/0
  9039 ;;		Unchanged: 0/0
  9040 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9041 ;;      Params:         0       2       0       0       0
  9042 ;;      Locals:         0       2       0       0       0
  9043 ;;      Temps:          0       2       0       0       0
  9044 ;;      Totals:         0       6       0       0       0
  9045 ;;Total ram usage:        6 bytes
  9046 ;; Hardware stack levels used:    1
  9047 ;; Hardware stack levels required when called:    6
  9048 ;; This function calls:
  9049 ;;		_format_number
  9050 ;;		_lcd_gotoxy
  9051 ;;		_put_str
  9052 ;;		_timer0_read_ps
  9053 ;; This function is called by:
  9054 ;;		_calibrate
  9055 ;;		_measure_capacitance
  9056 ;;		_measure_inductance
  9057 ;; This function uses a non-reentrant model
  9058 ;;
  9059                           
  9060                           
  9061                           ;psect for function _measure_freq
  9062  0EAF                     _measure_freq:	
  9063                           
  9064                           ;measure.c: 72: unsigned short int count;
  9065                           ;measure.c: 74: TMR0IF = 0;
  9066                           
  9067                           ;incstack = 0
  9068                           ; Regs used in _measure_freq: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  9069  0EAF  110B               	bcf	11,2	;volatile
  9070                           
  9071                           ;measure.c: 78: TRISA &= ~0b00010000;
  9072  0EB0  1683               	bsf	3,5	;RP0=1, select bank1
  9073  0EB1  1303               	bcf	3,6	;RP1=0, select bank1
  9074  0EB2  1205               	bcf	5,4	;volatile
  9075                           
  9076                           ;measure.c: 80: _delay((unsigned long)((20)*(20000000/4000.0)));
  9077  0EB3  3082               	movlw	130
  9078  0EB4  1283               	bcf	3,5	;RP0=0, select bank0
  9079  0EB5  00CC               	movwf	??_measure_freq+1
  9080  0EB6  30DD               	movlw	221
  9081  0EB7  00CB               	movwf	??_measure_freq
  9082  0EB8                     u4177:	
  9083  0EB8  0BCB               	decfsz	??_measure_freq,f
  9084  0EB9  2EB8               	goto	u4177
  9085  0EBA  0BCC               	decfsz	??_measure_freq+1,f
  9086  0EBB  2EB8               	goto	u4177
  9087  0EBC  2EBD               	nop2
  9088                           
  9089                           ;measure.c: 83: TMR0 = 0x00;
  9090  0EBD  1283               	bcf	3,5	;RP0=0, select bank0
  9091  0EBE  1303               	bcf	3,6	;RP1=0, select bank0
  9092  0EBF  0181               	clrf	1	;volatile
  9093                           
  9094                           ;measure.c: 85: RC3 = ((1) == 0);
  9095  0EC0  1187               	bcf	7,3	;volatile
  9096                           
  9097                           ;measure.c: 88: _delay((unsigned long)((10)*(20000000/4000.0))); _delay((unsigned long)(
      +                          (10)*(20000000/4000.0))); _delay((unsigned long)((10)*(20000000/4000.0))); _delay((unsig
      +                          ned long)((10)*(20000000/4000.0))); _delay((unsigned long)((10)*(20000000/4000.0)));
  9098  0EC1  3041               	movlw	65
  9099  0EC2  00CC               	movwf	??_measure_freq+1
  9100  0EC3  30EE               	movlw	238
  9101  0EC4  00CB               	movwf	??_measure_freq
  9102  0EC5                     u4187:	
  9103  0EC5  0BCB               	decfsz	??_measure_freq,f
  9104  0EC6  2EC5               	goto	u4187
  9105  0EC7  0BCC               	decfsz	??_measure_freq+1,f
  9106  0EC8  2EC5               	goto	u4187
  9107  0EC9  0000               	nop
  9108  0ECA  3041               	movlw	65
  9109  0ECB  1283               	bcf	3,5	;RP0=0, select bank0
  9110  0ECC  1303               	bcf	3,6	;RP1=0, select bank0
  9111  0ECD  00CC               	movwf	??_measure_freq+1
  9112  0ECE  30EE               	movlw	238
  9113  0ECF  00CB               	movwf	??_measure_freq
  9114  0ED0                     u4197:	
  9115  0ED0  0BCB               	decfsz	??_measure_freq,f
  9116  0ED1  2ED0               	goto	u4197
  9117  0ED2  0BCC               	decfsz	??_measure_freq+1,f
  9118  0ED3  2ED0               	goto	u4197
  9119  0ED4  0000               	nop
  9120  0ED5  3041               	movlw	65
  9121  0ED6  1283               	bcf	3,5	;RP0=0, select bank0
  9122  0ED7  1303               	bcf	3,6	;RP1=0, select bank0
  9123  0ED8  00CC               	movwf	??_measure_freq+1
  9124  0ED9  30EE               	movlw	238
  9125  0EDA  00CB               	movwf	??_measure_freq
  9126  0EDB                     u4207:	
  9127  0EDB  0BCB               	decfsz	??_measure_freq,f
  9128  0EDC  2EDB               	goto	u4207
  9129  0EDD  0BCC               	decfsz	??_measure_freq+1,f
  9130  0EDE  2EDB               	goto	u4207
  9131  0EDF  0000               	nop
  9132  0EE0  3041               	movlw	65
  9133  0EE1  1283               	bcf	3,5	;RP0=0, select bank0
  9134  0EE2  1303               	bcf	3,6	;RP1=0, select bank0
  9135  0EE3  00CC               	movwf	??_measure_freq+1
  9136  0EE4  30EE               	movlw	238
  9137  0EE5  00CB               	movwf	??_measure_freq
  9138  0EE6                     u4217:	
  9139  0EE6  0BCB               	decfsz	??_measure_freq,f
  9140  0EE7  2EE6               	goto	u4217
  9141  0EE8  0BCC               	decfsz	??_measure_freq+1,f
  9142  0EE9  2EE6               	goto	u4217
  9143  0EEA  0000               	nop
  9144  0EEB  3041               	movlw	65
  9145  0EEC  1283               	bcf	3,5	;RP0=0, select bank0
  9146  0EED  1303               	bcf	3,6	;RP1=0, select bank0
  9147  0EEE  00CC               	movwf	??_measure_freq+1
  9148  0EEF  30EE               	movlw	238
  9149  0EF0  00CB               	movwf	??_measure_freq
  9150  0EF1                     u4227:	
  9151  0EF1  0BCB               	decfsz	??_measure_freq,f
  9152  0EF2  2EF1               	goto	u4227
  9153  0EF3  0BCC               	decfsz	??_measure_freq+1,f
  9154  0EF4  2EF1               	goto	u4227
  9155  0EF5  0000               	nop
  9156                           
  9157                           ;measure.c: 89: _delay((unsigned long)((10)*(20000000/4000.0))); _delay((unsigned long)(
      +                          (10)*(20000000/4000.0))); _delay((unsigned long)((10)*(20000000/4000.0))); _delay((unsig
      +                          ned long)((10)*(20000000/4000.0))); _delay((unsigned long)((10)*(20000000/4000.0)));
  9158  0EF6  3041               	movlw	65
  9159  0EF7  1283               	bcf	3,5	;RP0=0, select bank0
  9160  0EF8  1303               	bcf	3,6	;RP1=0, select bank0
  9161  0EF9  00CC               	movwf	??_measure_freq+1
  9162  0EFA  30EE               	movlw	238
  9163  0EFB  00CB               	movwf	??_measure_freq
  9164  0EFC                     u4237:	
  9165  0EFC  0BCB               	decfsz	??_measure_freq,f
  9166  0EFD  2EFC               	goto	u4237
  9167  0EFE  0BCC               	decfsz	??_measure_freq+1,f
  9168  0EFF  2EFC               	goto	u4237
  9169  0F00  0000               	nop
  9170  0F01  3041               	movlw	65
  9171  0F02  1283               	bcf	3,5	;RP0=0, select bank0
  9172  0F03  1303               	bcf	3,6	;RP1=0, select bank0
  9173  0F04  00CC               	movwf	??_measure_freq+1
  9174  0F05  30EE               	movlw	238
  9175  0F06  00CB               	movwf	??_measure_freq
  9176  0F07                     u4247:	
  9177  0F07  0BCB               	decfsz	??_measure_freq,f
  9178  0F08  2F07               	goto	u4247
  9179  0F09  0BCC               	decfsz	??_measure_freq+1,f
  9180  0F0A  2F07               	goto	u4247
  9181  0F0B  0000               	nop
  9182  0F0C  3041               	movlw	65
  9183  0F0D  1283               	bcf	3,5	;RP0=0, select bank0
  9184  0F0E  1303               	bcf	3,6	;RP1=0, select bank0
  9185  0F0F  00CC               	movwf	??_measure_freq+1
  9186  0F10  30EE               	movlw	238
  9187  0F11  00CB               	movwf	??_measure_freq
  9188  0F12                     u4257:	
  9189  0F12  0BCB               	decfsz	??_measure_freq,f
  9190  0F13  2F12               	goto	u4257
  9191  0F14  0BCC               	decfsz	??_measure_freq+1,f
  9192  0F15  2F12               	goto	u4257
  9193  0F16  0000               	nop
  9194  0F17  3041               	movlw	65
  9195  0F18  1283               	bcf	3,5	;RP0=0, select bank0
  9196  0F19  1303               	bcf	3,6	;RP1=0, select bank0
  9197  0F1A  00CC               	movwf	??_measure_freq+1
  9198  0F1B  30EE               	movlw	238
  9199  0F1C  00CB               	movwf	??_measure_freq
  9200  0F1D                     u4267:	
  9201  0F1D  0BCB               	decfsz	??_measure_freq,f
  9202  0F1E  2F1D               	goto	u4267
  9203  0F1F  0BCC               	decfsz	??_measure_freq+1,f
  9204  0F20  2F1D               	goto	u4267
  9205  0F21  0000               	nop
  9206  0F22  3041               	movlw	65
  9207  0F23  1283               	bcf	3,5	;RP0=0, select bank0
  9208  0F24  1303               	bcf	3,6	;RP1=0, select bank0
  9209  0F25  00CC               	movwf	??_measure_freq+1
  9210  0F26  30EE               	movlw	238
  9211  0F27  00CB               	movwf	??_measure_freq
  9212  0F28                     u4277:	
  9213  0F28  0BCB               	decfsz	??_measure_freq,f
  9214  0F29  2F28               	goto	u4277
  9215  0F2A  0BCC               	decfsz	??_measure_freq+1,f
  9216  0F2B  2F28               	goto	u4277
  9217  0F2C  0000               	nop
  9218                           
  9219                           ;measure.c: 91: RC3 = ((0) == 0);
  9220  0F2D  1283               	bcf	3,5	;RP0=0, select bank0
  9221  0F2E  1303               	bcf	3,6	;RP1=0, select bank0
  9222  0F2F  1587               	bsf	7,3	;volatile
  9223                           
  9224                           ;measure.c: 94: TRISA |= 0b00010000;
  9225  0F30  1683               	bsf	3,5	;RP0=1, select bank1
  9226  0F31  1605               	bsf	5,4	;volatile
  9227                           
  9228                           ;measure.c: 97: count = timer0_read_ps();
  9229  0F32  2755               	fcall	_timer0_read_ps
  9230  0F33  0873               	movf	?_timer0_read_ps+1,w
  9231  0F34  00CE               	movwf	measure_freq@count+1
  9232  0F35  0872               	movf	?_timer0_read_ps,w
  9233  0F36  00CD               	movwf	measure_freq@count
  9234  0F37  3000               	movlw	0
  9235                           
  9236                           ;measure.c: 100: lcd_gotoxy(0, 1);
  9237  0F38  01F7               	clrf	lcd_gotoxy@row
  9238  0F39  0AF7               	incf	lcd_gotoxy@row,f
  9239  0F3A  160A  118A  25AA  120A  158A  	fcall	_lcd_gotoxy
  9240                           
  9241                           ;measure.c: 101: put_str("Freq=");
  9242  0F3F  3090               	movlw	(low ((STR_23-__stringbase)| (0+32768)))& (0+255)
  9243  0F40  160A  118A  25DB  120A  158A  	fcall	_put_str
  9244                           
  9245                           ;measure.c: 102: format_number( count, 10, 5);
  9246  0F45  084E               	movf	measure_freq@count+1,w
  9247  0F46  00A1               	movwf	format_number@n+1
  9248  0F47  084D               	movf	measure_freq@count,w
  9249  0F48  00A0               	movwf	format_number@n
  9250  0F49  300A               	movlw	10
  9251  0F4A  00A2               	movwf	format_number@base
  9252  0F4B  3005               	movlw	5
  9253  0F4C  00A3               	movwf	format_number@pad
  9254  0F4D  120A  118A  2529   	fcall	_format_number
  9255                           
  9256                           ;measure.c: 105: return count;
  9257  0F50  084E               	movf	measure_freq@count+1,w
  9258  0F51  00CA               	movwf	?_measure_freq+1
  9259  0F52  084D               	movf	measure_freq@count,w
  9260  0F53  00C9               	movwf	?_measure_freq
  9261  0F54  0008               	return
  9262  0F55                     __end_of_measure_freq:	
  9263  0F55                     __ptext36:	
  9264 ;; *************** function _timer0_read_ps *****************
  9265 ;; Defined at:
  9266 ;;		line 45 in file "../../../lib/timer.c"
  9267 ;; Parameters:    Size  Location     Type
  9268 ;;		None
  9269 ;; Auto vars:     Size  Location     Type
  9270 ;;  count           2    1[BANK0 ] unsigned short 
  9271 ;;  prev            1    0[BANK0 ] unsigned char 
  9272 ;; Return value:  Size  Location     Type
  9273 ;;                  2    2[COMMON] unsigned short 
  9274 ;; Registers used:
  9275 ;;		wreg, status,2, status,0, btemp+1
  9276 ;; Tracked objects:
  9277 ;;		On entry : 300/100
  9278 ;;		On exit  : 300/0
  9279 ;;		Unchanged: 0/0
  9280 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9281 ;;      Params:         2       0       0       0       0
  9282 ;;      Locals:         0       3       0       0       0
  9283 ;;      Temps:          4       0       0       0       0
  9284 ;;      Totals:         6       3       0       0       0
  9285 ;;Total ram usage:        9 bytes
  9286 ;; Hardware stack levels used:    1
  9287 ;; Hardware stack levels required when called:    1
  9288 ;; This function calls:
  9289 ;;		Nothing
  9290 ;; This function is called by:
  9291 ;;		_measure_freq
  9292 ;; This function uses a non-reentrant model
  9293 ;;
  9294                           
  9295                           
  9296                           ;psect for function _timer0_read_ps
  9297  0F55                     _timer0_read_ps:	
  9298                           
  9299                           ;timer.c: 46: unsigned char prev = TMR0;
  9300                           
  9301                           ;incstack = 0
  9302                           ; Regs used in _timer0_read_ps: [wreg+status,2+status,0+btemp+1]
  9303  0F55  1283               	bcf	3,5	;RP0=0, select bank0
  9304  0F56  0801               	movf	1,w	;volatile
  9305  0F57  00A0               	movwf	timer0_read_ps@prev
  9306                           
  9307                           ;timer.c: 47: unsigned short int count = 0;
  9308  0F58  01A1               	clrf	timer0_read_ps@count
  9309  0F59  01A2               	clrf	timer0_read_ps@count+1
  9310                           
  9311                           ;timer.c: 49: OPTION_REG |= 0x20;
  9312  0F5A  1683               	bsf	3,5	;RP0=1, select bank1
  9313  0F5B  1681               	bsf	1,5	;volatile
  9314  0F5C  2F64               	goto	l3873
  9315  0F5D                     l3889:	
  9316  0F5D  3001               	movlw	1
  9317  0F5E  0222               	subwf	timer0_read_ps@count+1,w
  9318  0F5F  3000               	movlw	0
  9319  0F60  1903               	skipnz
  9320  0F61  0221               	subwf	timer0_read_ps@count,w
  9321  0F62  1803               	btfsc	3,0
  9322  0F63  2F76               	goto	l3891
  9323  0F64                     l3873:	
  9324                           
  9325                           ;timer.c: 53: OPTION_REG |= 0x10;
  9326  0F64  1683               	bsf	3,5	;RP0=1, select bank1
  9327  0F65  1601               	bsf	1,4	;volatile
  9328                           
  9329                           ;timer.c: 55: __nop();
  9330  0F66  0000               	nop
  9331                           
  9332                           ;timer.c: 56: __nop();
  9333  0F67  0000               	nop
  9334                           
  9335                           ;timer.c: 58: OPTION_REG &= ~0x10;
  9336  0F68  1683               	bsf	3,5	;RP0=1, select bank1
  9337  0F69  1303               	bcf	3,6	;RP1=0, select bank1
  9338  0F6A  1201               	bcf	1,4	;volatile
  9339                           
  9340                           ;timer.c: 60: __nop();
  9341  0F6B  0000               	nop
  9342                           
  9343                           ;timer.c: 61: __nop();
  9344  0F6C  0000               	nop
  9345                           
  9346                           ;timer.c: 63: ++count;
  9347  0F6D  1283               	bcf	3,5	;RP0=0, select bank0
  9348  0F6E  1303               	bcf	3,6	;RP1=0, select bank0
  9349  0F6F  0AA1               	incf	timer0_read_ps@count,f
  9350  0F70  1903               	skipnz
  9351  0F71  0AA2               	incf	timer0_read_ps@count+1,f
  9352                           
  9353                           ;timer.c: 66: } while(prev == TMR0 && count <= 255);
  9354  0F72  0820               	movf	timer0_read_ps@prev,w
  9355  0F73  0601               	xorwf	1,w	;volatile
  9356  0F74  1903               	btfsc	3,2
  9357  0F75  2F5D               	goto	l3889
  9358  0F76                     l3891:	
  9359                           
  9360                           ;timer.c: 68: count = ((prev << 8) + (256 - count));
  9361  0F76  0820               	movf	timer0_read_ps@prev,w
  9362  0F77  00F4               	movwf	??_timer0_read_ps
  9363  0F78  01F5               	clrf	??_timer0_read_ps+1
  9364  0F79  00F5               	movwf	??_timer0_read_ps+1
  9365  0F7A  01F4               	clrf	??_timer0_read_ps
  9366  0F7B  0821               	movf	timer0_read_ps@count,w
  9367  0F7C  0274               	subwf	??_timer0_read_ps,w
  9368  0F7D  00F6               	movwf	??_timer0_read_ps+2
  9369  0F7E  0822               	movf	timer0_read_ps@count+1,w
  9370  0F7F  1C03               	skipc
  9371  0F80  0A22               	incf	timer0_read_ps@count+1,w
  9372  0F81  0275               	subwf	??_timer0_read_ps+1,w
  9373  0F82  00F7               	movwf	??_timer0_read_ps+3
  9374  0F83  0876               	movf	??_timer0_read_ps+2,w
  9375  0F84  3E00               	addlw	0
  9376  0F85  00A1               	movwf	timer0_read_ps@count
  9377  0F86  0877               	movf	??_timer0_read_ps+3,w
  9378  0F87  1803               	skipnc
  9379  0F88  3E01               	addlw	1
  9380  0F89  3E01               	addlw	1
  9381  0F8A  00A2               	movwf	timer0_read_ps@count+1
  9382                           
  9383                           ;timer.c: 69: return count;
  9384  0F8B  00F3               	movwf	?_timer0_read_ps+1
  9385  0F8C  0821               	movf	timer0_read_ps@count,w
  9386  0F8D  00F2               	movwf	?_timer0_read_ps
  9387  0F8E  0008               	return
  9388  0F8F                     __end_of_timer0_read_ps:	
  9389  0F8F                     __ptext19:	
  9390 ;; *************** function ___fltol *****************
  9391 ;; Defined at:
  9392 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\fltol.c"
  9393 ;; Parameters:    Size  Location     Type
  9394 ;;  f1              4    8[BANK1 ] int 
  9395 ;; Auto vars:     Size  Location     Type
  9396 ;;  exp1            1   17[BANK1 ] unsigned char 
  9397 ;;  sign1           1   16[BANK1 ] unsigned char 
  9398 ;; Return value:  Size  Location     Type
  9399 ;;                  4    8[BANK1 ] long 
  9400 ;; Registers used:
  9401 ;;		wreg, status,2, status,0
  9402 ;; Tracked objects:
  9403 ;;		On entry : 300/100
  9404 ;;		On exit  : 300/100
  9405 ;;		Unchanged: 0/0
  9406 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9407 ;;      Params:         0       0       4       0       0
  9408 ;;      Locals:         0       0       2       0       0
  9409 ;;      Temps:          0       0       4       0       0
  9410 ;;      Totals:         0       0      10       0       0
  9411 ;;Total ram usage:       10 bytes
  9412 ;; Hardware stack levels used:    1
  9413 ;; Hardware stack levels required when called:    1
  9414 ;; This function calls:
  9415 ;;		Nothing
  9416 ;; This function is called by:
  9417 ;;		_format_double
  9418 ;;		_measure_capacitance
  9419 ;;		_measure_inductance
  9420 ;;		_floor
  9421 ;;		_pow
  9422 ;;		_exp
  9423 ;; This function uses a non-reentrant model
  9424 ;;
  9425                           
  9426                           
  9427                           ;psect for function ___fltol
  9428  0F8F                     ___fltol:	
  9429                           
  9430                           ;incstack = 0
  9431                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  9432  0F8F  0828               	movf	___fltol@f1^(0+128),w
  9433  0F90  00AC               	movwf	??___fltol^(0+128)
  9434  0F91  0829               	movf	(___fltol@f1+1)^(0+128),w
  9435  0F92  00AD               	movwf	(??___fltol^(0+128)+1)
  9436  0F93  082A               	movf	(___fltol@f1+2)^(0+128),w
  9437  0F94  00AE               	movwf	(??___fltol^(0+128)+2)
  9438  0F95  082B               	movf	(___fltol@f1+3)^(0+128),w
  9439  0F96  00AF               	movwf	(??___fltol^(0+128)+3)
  9440  0F97  1003               	clrc
  9441  0F98  0D2E               	rlf	(??___fltol^(0+128)+2),w
  9442  0F99  0D2F               	rlf	(??___fltol^(0+128)+3),w
  9443  0F9A  00B1               	movwf	___fltol@exp1^(0+128)
  9444  0F9B  0831               	movf	___fltol@exp1^(0+128),w
  9445  0F9C  1D03               	btfss	3,2
  9446  0F9D  2FA3               	goto	l2545
  9447  0F9E                     l2543:	
  9448  0F9E  01A8               	clrf	?___fltol^(0+128)
  9449  0F9F  01A9               	clrf	(?___fltol+1)^(0+128)
  9450  0FA0  01AA               	clrf	(?___fltol+2)^(0+128)
  9451  0FA1  01AB               	clrf	(?___fltol+3)^(0+128)
  9452  0FA2  0008               	return
  9453  0FA3                     l2545:	
  9454  0FA3  0828               	movf	___fltol@f1^(0+128),w
  9455  0FA4  00AC               	movwf	??___fltol^(0+128)
  9456  0FA5  0829               	movf	(___fltol@f1+1)^(0+128),w
  9457  0FA6  00AD               	movwf	(??___fltol^(0+128)+1)
  9458  0FA7  082A               	movf	(___fltol@f1+2)^(0+128),w
  9459  0FA8  00AE               	movwf	(??___fltol^(0+128)+2)
  9460  0FA9  082B               	movf	(___fltol@f1+3)^(0+128),w
  9461  0FAA  00AF               	movwf	(??___fltol^(0+128)+3)
  9462  0FAB  301F               	movlw	31
  9463  0FAC                     u2055:	
  9464  0FAC  1003               	clrc
  9465  0FAD  0CAF               	rrf	(??___fltol^(0+128)+3),f
  9466  0FAE  0CAE               	rrf	(??___fltol^(0+128)+2),f
  9467  0FAF  0CAD               	rrf	(??___fltol^(0+128)+1),f
  9468  0FB0  0CAC               	rrf	??___fltol^(0+128),f
  9469  0FB1  3EFF               	addlw	-1
  9470  0FB2  1D03               	skipz
  9471  0FB3  2FAC               	goto	u2055
  9472  0FB4  082C               	movf	??___fltol^(0+128),w
  9473  0FB5  00B0               	movwf	___fltol@sign1^(0+128)
  9474  0FB6  3096               	movlw	150
  9475  0FB7  17AA               	bsf	(___fltol@f1^(0+128)+2),7
  9476  0FB8  01AB               	clrf	(___fltol@f1+3)^(0+128)
  9477  0FB9  02B1               	subwf	___fltol@exp1^(0+128),f
  9478  0FBA  1FB1               	btfss	___fltol@exp1^(0+128),7
  9479  0FBB  2FC9               	goto	l2563
  9480  0FBC  0831               	movf	___fltol@exp1^(0+128),w
  9481  0FBD  3A80               	xorlw	128
  9482  0FBE  3E97               	addlw	151
  9483  0FBF  1C03               	btfss	3,0
  9484  0FC0  2F9E               	goto	l2543
  9485  0FC1                     l2559:	
  9486  0FC1  1003               	clrc
  9487  0FC2  0CAB               	rrf	(___fltol@f1+3)^(0+128),f
  9488  0FC3  0CAA               	rrf	(___fltol@f1+2)^(0+128),f
  9489  0FC4  0CA9               	rrf	(___fltol@f1+1)^(0+128),f
  9490  0FC5  0CA8               	rrf	___fltol@f1^(0+128),f
  9491  0FC6  0FB1               	incfsz	___fltol@exp1^(0+128),f
  9492  0FC7  2FC1               	goto	l2559
  9493  0FC8  2FD7               	goto	l2571
  9494  0FC9                     l2563:	
  9495  0FC9  3020               	movlw	32
  9496  0FCA  0231               	subwf	___fltol@exp1^(0+128),w
  9497  0FCB  1803               	btfsc	3,0
  9498  0FCC  2F9E               	goto	l2543
  9499  0FCD                     l2569:	
  9500  0FCD  0831               	movf	___fltol@exp1^(0+128),w
  9501  0FCE  1903               	btfsc	3,2
  9502  0FCF  2FD7               	goto	l2571
  9503  0FD0  1003               	clrc
  9504  0FD1  0DA8               	rlf	___fltol@f1^(0+128),f
  9505  0FD2  0DA9               	rlf	(___fltol@f1+1)^(0+128),f
  9506  0FD3  0DAA               	rlf	(___fltol@f1+2)^(0+128),f
  9507  0FD4  0DAB               	rlf	(___fltol@f1+3)^(0+128),f
  9508  0FD5  03B1               	decf	___fltol@exp1^(0+128),f
  9509  0FD6  2FCD               	goto	l2569
  9510  0FD7                     l2571:	
  9511  0FD7  0830               	movf	___fltol@sign1^(0+128),w
  9512  0FD8  1903               	btfsc	3,2
  9513  0FD9  0008               	return
  9514  0FDA  09A8               	comf	___fltol@f1^(0+128),f
  9515  0FDB  09A9               	comf	(___fltol@f1+1)^(0+128),f
  9516  0FDC  09AA               	comf	(___fltol@f1+2)^(0+128),f
  9517  0FDD  09AB               	comf	(___fltol@f1+3)^(0+128),f
  9518  0FDE  0AA8               	incf	___fltol@f1^(0+128),f
  9519  0FDF  1903               	skipnz
  9520  0FE0  0AA9               	incf	(___fltol@f1+1)^(0+128),f
  9521  0FE1  1903               	skipnz
  9522  0FE2  0AAA               	incf	(___fltol@f1+2)^(0+128),f
  9523  0FE3  1903               	skipnz
  9524  0FE4  0AAB               	incf	(___fltol@f1+3)^(0+128),f
  9525  0FE5  0008               	return
  9526  0FE6                     __end_of___fltol:	
  9527  0FE6                     __ptext7:	
  9528 ;; *************** function _print_unit *****************
  9529 ;; Defined at:
  9530 ;;		line 411 in file "../../../src/print.c"
  9531 ;; Parameters:    Size  Location     Type
  9532 ;;  unit            1    wreg     unsigned char 
  9533 ;; Auto vars:     Size  Location     Type
  9534 ;;  unit            1    0[COMMON] unsigned char 
  9535 ;; Return value:  Size  Location     Type
  9536 ;;		None               void
  9537 ;; Registers used:
  9538 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  9539 ;; Tracked objects:
  9540 ;;		On entry : 300/100
  9541 ;;		On exit  : 0/0
  9542 ;;		Unchanged: 0/0
  9543 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9544 ;;      Params:         0       0       0       0       0
  9545 ;;      Locals:         0       0       0       0       0
  9546 ;;      Temps:          2       0       0       0       0
  9547 ;;      Totals:         2       0       0       0       0
  9548 ;;Total ram usage:        2 bytes
  9549 ;; Hardware stack levels used:    1
  9550 ;; Hardware stack levels required when called:    5
  9551 ;; This function calls:
  9552 ;;		_lcd_gotoxy
  9553 ;;		_uart_puts
  9554 ;; This function is called by:
  9555 ;;		_measure_capacitance
  9556 ;;		_measure_inductance
  9557 ;; This function uses a non-reentrant model
  9558 ;;
  9559                           
  9560                           
  9561                           ;psect for function _print_unit
  9562  0FE6                     _print_unit:	
  9563  0FE6                     l3969:	
  9564                           ;incstack = 0
  9565                           ; Regs used in _print_unit: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  9566                           
  9567  0FE6  300E               	movlw	14
  9568                           
  9569                           ;print.c: 419: static const char* units[8] = {"H", "mH", "uH", "nH", "mF", "uF", "nF", "
      +                          pF"};
  9570                           ;print.c: 420: lcd_gotoxy(14, 0);
  9571  0FE7  01F7               	clrf	lcd_gotoxy@row
  9572  0FE8  160A  118A  25AA  120A  158A  	fcall	_lcd_gotoxy
  9573                           
  9574                           ;print.c: 424: lcd_gotoxy(16 - (buffer.n - buffer.p), 0);
  9575  0FED  01F7               	clrf	lcd_gotoxy@row
  9576  0FEE  1683               	bsf	3,5	;RP0=1, select bank3
  9577  0FEF  1703               	bsf	3,6	;RP1=1, select bank3
  9578  0FF0  0E31               	swapf	(_buffer^(0+384)+16),w
  9579  0FF1  390F               	andlw	15
  9580  0FF2  00F8               	movwf	??_print_unit
  9581  0FF3  0831               	movf	(_buffer^(0+384)+16),w
  9582  0FF4  390F               	andlw	15
  9583  0FF5  00F9               	movwf	??_print_unit+1
  9584  0FF6  0878               	movf	??_print_unit,w
  9585  0FF7  0279               	subwf	??_print_unit+1,w
  9586  0FF8  3E10               	addlw	16
  9587  0FF9  160A  118A  25AA   	fcall	_lcd_gotoxy
  9588                           
  9589                           ;print.c: 427: uart_puts("\r\n");
  9590  0FFC  3099               	movlw	(low (((STR_14+3)-__stringbase)| (0+32768)))& (0+255)
  9591  0FFD  120A  118A  2EB2   	ljmp	_uart_puts
  9592  1000                     __end_of_print_unit:	
  9593                           
  9594                           	psect	text32
  9595  05F8                     __ptext32:	
  9596 ;; *************** function _calibrate *****************
  9597 ;; Defined at:
  9598 ;;		line 25 in file "../../../lib/../src/measure.c"
  9599 ;; Parameters:    Size  Location     Type
  9600 ;;		None
  9601 ;; Auto vars:     Size  Location     Type
  9602 ;;  i               1   51[BANK0 ] unsigned char 
  9603 ;; Return value:  Size  Location     Type
  9604 ;;		None               void
  9605 ;; Registers used:
  9606 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  9607 ;; Tracked objects:
  9608 ;;		On entry : 0/100
  9609 ;;		On exit  : 0/0
  9610 ;;		Unchanged: 0/0
  9611 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9612 ;;      Params:         0       0       0       0       0
  9613 ;;      Locals:         0       1       0       0       0
  9614 ;;      Temps:          0       0       0       0       0
  9615 ;;      Totals:         0       1       0       0       0
  9616 ;;Total ram usage:        1 bytes
  9617 ;; Hardware stack levels used:    1
  9618 ;; Hardware stack levels required when called:    7
  9619 ;; This function calls:
  9620 ;;		___lwtofl
  9621 ;;		_delay10ms
  9622 ;;		_lcd_clear
  9623 ;;		_lcd_gotoxy
  9624 ;;		_lcd_putch
  9625 ;;		_measure_freq
  9626 ;;		_put_str
  9627 ;;		_uart_puts
  9628 ;; This function is called by:
  9629 ;;		_main
  9630 ;; This function uses a non-reentrant model
  9631 ;;
  9632                           
  9633                           
  9634                           ;psect for function _calibrate
  9635  05F8                     _calibrate:	
  9636                           
  9637                           ;measure.c: 26: unsigned char i;
  9638                           ;measure.c: 29: lcd_clear();
  9639                           
  9640                           ;incstack = 0
  9641                           ; Regs used in _calibrate: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  9642  05F8  26C9               	fcall	_lcd_clear
  9643  05F9  3000               	movlw	0
  9644                           
  9645                           ;measure.c: 31: lcd_gotoxy(0, 0);
  9646  05FA  01F7               	clrf	lcd_gotoxy@row
  9647  05FB  160A  118A  25AA  120A  118A  	fcall	_lcd_gotoxy
  9648                           
  9649                           ;measure.c: 32: put_str("Calibrating");
  9650  0600  3069               	movlw	(low ((STR_19-__stringbase)| (0+32768)))& (0+255)
  9651  0601  160A  118A  25DB  120A  118A  	fcall	_put_str
  9652  0606  3000               	movlw	0
  9653                           
  9654                           ;measure.c: 34: lcd_gotoxy(0, 1);
  9655  0607  01F7               	clrf	lcd_gotoxy@row
  9656  0608  0AF7               	incf	lcd_gotoxy@row,f
  9657  0609  160A  118A  25AA  120A  118A  	fcall	_lcd_gotoxy
  9658                           
  9659                           ;measure.c: 35: uart_puts("\r\n");
  9660  060E  3099               	movlw	(low (((STR_14+3)-__stringbase)| (0+32768)))& (0+255)
  9661  060F  26B2               	fcall	_uart_puts
  9662                           
  9663                           ;measure.c: 36: put_str("please wait...");
  9664  0610  304D               	movlw	(low ((STR_21-__stringbase)| (0+32768)))& (0+255)
  9665  0611  160A  118A  25DB  120A  118A  	fcall	_put_str
  9666                           
  9667                           ;measure.c: 39: PORTC &= ~(1 << 5);
  9668  0616  1287               	bcf	7,5	;volatile
  9669                           
  9670                           ;measure.c: 41: F1 = (double)measure_freq();
  9671  0617  120A  158A  26AF  120A  118A  	fcall	_measure_freq
  9672  061C  084A               	movf	?_measure_freq+1,w
  9673  061D  00D0               	movwf	___lwtofl@c+1
  9674  061E  0849               	movf	?_measure_freq,w
  9675  061F  00CF               	movwf	___lwtofl@c
  9676  0620  160A  118A  2548  120A  118A  	fcall	___lwtofl
  9677  0625  0852               	movf	?___lwtofl+3,w
  9678  0626  1683               	bsf	3,5	;RP0=1, select bank1
  9679  0627  00EF               	movwf	(_F1+3)^(0+128)
  9680  0628  1283               	bcf	3,5	;RP0=0, select bank0
  9681  0629  0851               	movf	?___lwtofl+2,w
  9682  062A  1683               	bsf	3,5	;RP0=1, select bank1
  9683  062B  00EE               	movwf	(_F1+2)^(0+128)
  9684  062C  1283               	bcf	3,5	;RP0=0, select bank0
  9685  062D  0850               	movf	?___lwtofl+1,w
  9686  062E  1683               	bsf	3,5	;RP0=1, select bank1
  9687  062F  00ED               	movwf	(_F1+1)^(0+128)
  9688  0630  1283               	bcf	3,5	;RP0=0, select bank0
  9689  0631  084F               	movf	?___lwtofl,w
  9690  0632  1683               	bsf	3,5	;RP0=1, select bank1
  9691  0633  00EC               	movwf	_F1^(0+128)
  9692                           
  9693                           ;measure.c: 42: delay10ms(50);
  9694  0634  3032               	movlw	50
  9695  0635  26B1               	fcall	_delay10ms
  9696                           
  9697                           ;measure.c: 44: F1 = (double)measure_freq();
  9698  0636  120A  158A  26AF  120A  118A  	fcall	_measure_freq
  9699  063B  084A               	movf	?_measure_freq+1,w
  9700  063C  00D0               	movwf	___lwtofl@c+1
  9701  063D  0849               	movf	?_measure_freq,w
  9702  063E  00CF               	movwf	___lwtofl@c
  9703  063F  160A  118A  2548  120A  118A  	fcall	___lwtofl
  9704  0644  0852               	movf	?___lwtofl+3,w
  9705  0645  1683               	bsf	3,5	;RP0=1, select bank1
  9706  0646  00EF               	movwf	(_F1+3)^(0+128)
  9707  0647  1283               	bcf	3,5	;RP0=0, select bank0
  9708  0648  0851               	movf	?___lwtofl+2,w
  9709  0649  1683               	bsf	3,5	;RP0=1, select bank1
  9710  064A  00EE               	movwf	(_F1+2)^(0+128)
  9711  064B  1283               	bcf	3,5	;RP0=0, select bank0
  9712  064C  0850               	movf	?___lwtofl+1,w
  9713  064D  1683               	bsf	3,5	;RP0=1, select bank1
  9714  064E  00ED               	movwf	(_F1+1)^(0+128)
  9715  064F  1283               	bcf	3,5	;RP0=0, select bank0
  9716  0650  084F               	movf	?___lwtofl,w
  9717  0651  1683               	bsf	3,5	;RP0=1, select bank1
  9718  0652  00EC               	movwf	_F1^(0+128)
  9719                           
  9720                           ;measure.c: 45: PORTC |= (1 << 5);
  9721  0653  1283               	bcf	3,5	;RP0=0, select bank0
  9722  0654  1687               	bsf	7,5	;volatile
  9723                           
  9724                           ;measure.c: 47: F2 = (double)measure_freq();
  9725  0655  120A  158A  26AF  120A  118A  	fcall	_measure_freq
  9726  065A  084A               	movf	?_measure_freq+1,w
  9727  065B  00D0               	movwf	___lwtofl@c+1
  9728  065C  0849               	movf	?_measure_freq,w
  9729  065D  00CF               	movwf	___lwtofl@c
  9730  065E  160A  118A  2548  120A  118A  	fcall	___lwtofl
  9731  0663  0852               	movf	?___lwtofl+3,w
  9732  0664  1683               	bsf	3,5	;RP0=1, select bank1
  9733  0665  00E7               	movwf	(_F2+3)^(0+128)
  9734  0666  1283               	bcf	3,5	;RP0=0, select bank0
  9735  0667  0851               	movf	?___lwtofl+2,w
  9736  0668  1683               	bsf	3,5	;RP0=1, select bank1
  9737  0669  00E6               	movwf	(_F2+2)^(0+128)
  9738  066A  1283               	bcf	3,5	;RP0=0, select bank0
  9739  066B  0850               	movf	?___lwtofl+1,w
  9740  066C  1683               	bsf	3,5	;RP0=1, select bank1
  9741  066D  00E5               	movwf	(_F2+1)^(0+128)
  9742  066E  1283               	bcf	3,5	;RP0=0, select bank0
  9743  066F  084F               	movf	?___lwtofl,w
  9744  0670  1683               	bsf	3,5	;RP0=1, select bank1
  9745  0671  00E4               	movwf	_F2^(0+128)
  9746                           
  9747                           ;measure.c: 48: delay10ms(50);
  9748  0672  3032               	movlw	50
  9749  0673  26B1               	fcall	_delay10ms
  9750                           
  9751                           ;measure.c: 50: F2 = (double)measure_freq();
  9752  0674  120A  158A  26AF  120A  118A  	fcall	_measure_freq
  9753  0679  084A               	movf	?_measure_freq+1,w
  9754  067A  00D0               	movwf	___lwtofl@c+1
  9755  067B  0849               	movf	?_measure_freq,w
  9756  067C  00CF               	movwf	___lwtofl@c
  9757  067D  160A  118A  2548  120A  118A  	fcall	___lwtofl
  9758  0682  0852               	movf	?___lwtofl+3,w
  9759  0683  1683               	bsf	3,5	;RP0=1, select bank1
  9760  0684  00E7               	movwf	(_F2+3)^(0+128)
  9761  0685  1283               	bcf	3,5	;RP0=0, select bank0
  9762  0686  0851               	movf	?___lwtofl+2,w
  9763  0687  1683               	bsf	3,5	;RP0=1, select bank1
  9764  0688  00E6               	movwf	(_F2+2)^(0+128)
  9765  0689  1283               	bcf	3,5	;RP0=0, select bank0
  9766  068A  0850               	movf	?___lwtofl+1,w
  9767  068B  1683               	bsf	3,5	;RP0=1, select bank1
  9768  068C  00E5               	movwf	(_F2+1)^(0+128)
  9769  068D  1283               	bcf	3,5	;RP0=0, select bank0
  9770  068E  084F               	movf	?___lwtofl,w
  9771  068F  1683               	bsf	3,5	;RP0=1, select bank1
  9772  0690  00E4               	movwf	_F2^(0+128)
  9773                           
  9774                           ;measure.c: 51: PORTC &= ~(1 << 5);
  9775  0691  1283               	bcf	3,5	;RP0=0, select bank0
  9776  0692  1287               	bcf	7,5	;volatile
  9777  0693  300B               	movlw	11
  9778                           
  9779                           ;measure.c: 55: lcd_gotoxy(11, 0);
  9780  0694  01F7               	clrf	lcd_gotoxy@row
  9781  0695  160A  118A  25AA  120A  118A  	fcall	_lcd_gotoxy
  9782                           
  9783                           ;measure.c: 57: for(i = 0; i < 6; i++) {
  9784  069A  1283               	bcf	3,5	;RP0=0, select bank0
  9785  069B  1303               	bcf	3,6	;RP1=0, select bank0
  9786  069C  01D3               	clrf	calibrate@i
  9787  069D                     l4225:	
  9788                           
  9789                           ;measure.c: 58: lcd_putch('=');
  9790  069D  303D               	movlw	61
  9791  069E  00F7               	movwf	lcd_putch@value
  9792  069F  160A  118A  2638  120A  118A  	fcall	_lcd_putch
  9793                           
  9794                           ;measure.c: 60: delay10ms(28);
  9795  06A4  301C               	movlw	28
  9796  06A5  26B1  120A  118A   	fcall	_delay10ms
  9797  06A8  1283               	bcf	3,5	;RP0=0, select bank0
  9798  06A9  1303               	bcf	3,6	;RP1=0, select bank0
  9799  06AA  3006               	movlw	6
  9800  06AB  0AD3               	incf	calibrate@i,f
  9801  06AC  0253               	subwf	calibrate@i,w
  9802  06AD  1C03               	skipc
  9803  06AE  2E9D               	goto	l4225
  9804                           
  9805                           ;measure.c: 61: }
  9806                           ;measure.c: 63: uart_puts("\r\n");
  9807  06AF  3099               	movlw	(low (((STR_14+3)-__stringbase)| (0+32768)))& (0+255)
  9808  06B0  2EB2               	ljmp	_uart_puts
  9809  06B1                     __end_of_calibrate:	
  9810  06B1                     __ptext49:	
  9811 ;; *************** function _delay10ms *****************
  9812 ;; Defined at:
  9813 ;;		line 55 in file "../../../src/LC-meter.c"
  9814 ;; Parameters:    Size  Location     Type
  9815 ;;  period_10ms     1    wreg     unsigned char 
  9816 ;; Auto vars:     Size  Location     Type
  9817 ;;  period_10ms     1    0[COMMON] unsigned char 
  9818 ;; Return value:  Size  Location     Type
  9819 ;;		None               void
  9820 ;; Registers used:
  9821 ;;		wreg
  9822 ;; Tracked objects:
  9823 ;;		On entry : 0/0
  9824 ;;		On exit  : 0/0
  9825 ;;		Unchanged: 0/0
  9826 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9827 ;;      Params:         0       0       0       0       0
  9828 ;;      Locals:         0       0       0       0       0
  9829 ;;      Temps:          0       0       0       0       0
  9830 ;;      Totals:         0       0       0       0       0
  9831 ;;Total ram usage:        0 bytes
  9832 ;; Hardware stack levels used:    1
  9833 ;; Hardware stack levels required when called:    1
  9834 ;; This function calls:
  9835 ;;		Nothing
  9836 ;; This function is called by:
  9837 ;;		_main
  9838 ;;		_calibrate
  9839 ;; This function uses a non-reentrant model
  9840 ;;
  9841                           
  9842                           
  9843                           ;psect for function _delay10ms
  9844  06B1                     _delay10ms:	
  9845                           
  9846                           ;incstack = 0
  9847                           ; Regs used in _delay10ms: [wreg]
  9848  06B1  0008               	return
  9849  06B2                     __end_of_delay10ms:	
  9850  06B2                     __ptext33:	
  9851 ;; *************** function _uart_puts *****************
  9852 ;; Defined at:
  9853 ;;		line 112 in file "../../../lib/uart.c"
  9854 ;; Parameters:    Size  Location     Type
  9855 ;;  s               1    wreg     PTR const unsigned char 
  9856 ;;		 -> STR_22(3), STR_20(3), STR_14(6), STR_9(3), 
  9857 ;; Auto vars:     Size  Location     Type
  9858 ;;  s               1    3[COMMON] PTR const unsigned char 
  9859 ;;		 -> STR_22(3), STR_20(3), STR_14(6), STR_9(3), 
  9860 ;; Return value:  Size  Location     Type
  9861 ;;		None               void
  9862 ;; Registers used:
  9863 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  9864 ;; Tracked objects:
  9865 ;;		On entry : 0/100
  9866 ;;		On exit  : 0/0
  9867 ;;		Unchanged: 0/0
  9868 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9869 ;;      Params:         0       0       0       0       0
  9870 ;;      Locals:         1       0       0       0       0
  9871 ;;      Temps:          0       0       0       0       0
  9872 ;;      Totals:         1       0       0       0       0
  9873 ;;Total ram usage:        1 bytes
  9874 ;; Hardware stack levels used:    1
  9875 ;; Hardware stack levels required when called:    2
  9876 ;; This function calls:
  9877 ;;		_uart_putch
  9878 ;; This function is called by:
  9879 ;;		_print_unit
  9880 ;;		_main
  9881 ;;		_calibrate
  9882 ;; This function uses a non-reentrant model
  9883 ;;
  9884                           
  9885                           
  9886                           ;psect for function _uart_puts
  9887  06B2                     _uart_puts:	
  9888                           
  9889                           ;incstack = 0
  9890                           ; Regs used in _uart_puts: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  9891                           ;uart_puts@s stored from wreg
  9892  06B2  00F3               	movwf	uart_puts@s
  9893  06B3                     l2777:	
  9894                           ;uart.c: 113: while(*s) uart_putch(*s++);
  9895                           
  9896  06B3  0873               	movf	uart_puts@s,w
  9897  06B4  0084               	movwf	4
  9898  06B5  120A  118A  2030  120A  118A  	fcall	stringdir
  9899  06BA  3A00               	xorlw	0
  9900  06BB  1903               	btfsc	3,2
  9901  06BC  0008               	return
  9902  06BD  0873               	movf	uart_puts@s,w
  9903  06BE  0084               	movwf	4
  9904  06BF  120A  118A  2030  120A  118A  	fcall	stringdir
  9905  06C4  26D9  120A  118A   	fcall	_uart_putch
  9906  06C7  0AF3               	incf	uart_puts@s,f
  9907  06C8  2EB3               	goto	l2777
  9908  06C9                     __end_of_uart_puts:	
  9909  06C9                     __ptext45:	
  9910 ;; *************** function _lcd_clear *****************
  9911 ;; Defined at:
  9912 ;;		line 306 in file "../../../lib/lcd44780.c"
  9913 ;; Parameters:    Size  Location     Type
  9914 ;;		None
  9915 ;; Auto vars:     Size  Location     Type
  9916 ;;		None
  9917 ;; Return value:  Size  Location     Type
  9918 ;;		None               void
  9919 ;; Registers used:
  9920 ;;		wreg, status,2, status,0, pclath, cstack
  9921 ;; Tracked objects:
  9922 ;;		On entry : 0/100
  9923 ;;		On exit  : 0/0
  9924 ;;		Unchanged: 0/0
  9925 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9926 ;;      Params:         0       0       0       0       0
  9927 ;;      Locals:         0       0       0       0       0
  9928 ;;      Temps:          2       0       0       0       0
  9929 ;;      Totals:         2       0       0       0       0
  9930 ;;Total ram usage:        2 bytes
  9931 ;; Hardware stack levels used:    1
  9932 ;; Hardware stack levels required when called:    4
  9933 ;; This function calls:
  9934 ;;		_lcd_command
  9935 ;; This function is called by:
  9936 ;;		_main
  9937 ;;		_calibrate
  9938 ;; This function uses a non-reentrant model
  9939 ;;
  9940                           
  9941                           
  9942                           ;psect for function _lcd_clear
  9943  06C9                     _lcd_clear:	
  9944                           
  9945                           ;lcd44780.c: 307: lcd_command(0x01);
  9946                           
  9947                           ;incstack = 0
  9948                           ; Regs used in _lcd_clear: [wreg+status,2+status,0+pclath+cstack]
  9949  06C9  3001               	movlw	1
  9950  06CA  160A  118A  2624  120A  118A  	fcall	_lcd_command
  9951                           
  9952                           ;lcd44780.c: 308: _delay((unsigned long)((2)*(20000000/4000.0)));
  9953  06CF  300D               	movlw	13
  9954  06D0  00F8               	movwf	??_lcd_clear+1
  9955  06D1  30FB               	movlw	251
  9956  06D2  00F7               	movwf	??_lcd_clear
  9957  06D3                     u4287:	
  9958  06D3  0BF7               	decfsz	??_lcd_clear,f
  9959  06D4  2ED3               	goto	u4287
  9960  06D5  0BF8               	decfsz	??_lcd_clear+1,f
  9961  06D6  2ED3               	goto	u4287
  9962  06D7  2ED8               	nop2
  9963  06D8  0008               	return
  9964  06D9                     __end_of_lcd_clear:	
  9965  06D9                     __ptext34:	
  9966 ;; *************** function _uart_putch *****************
  9967 ;; Defined at:
  9968 ;;		line 23 in file "../../../lib/uart.c"
  9969 ;; Parameters:    Size  Location     Type
  9970 ;;  byte            1    wreg     unsigned char 
  9971 ;; Auto vars:     Size  Location     Type
  9972 ;;  byte            1    2[COMMON] unsigned char 
  9973 ;; Return value:  Size  Location     Type
  9974 ;;		None               void
  9975 ;; Registers used:
  9976 ;;		wreg
  9977 ;; Tracked objects:
  9978 ;;		On entry : 0/100
  9979 ;;		On exit  : 300/0
  9980 ;;		Unchanged: 0/0
  9981 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9982 ;;      Params:         0       0       0       0       0
  9983 ;;      Locals:         1       0       0       0       0
  9984 ;;      Temps:          0       0       0       0       0
  9985 ;;      Totals:         1       0       0       0       0
  9986 ;;Total ram usage:        1 bytes
  9987 ;; Hardware stack levels used:    1
  9988 ;; Hardware stack levels required when called:    1
  9989 ;; This function calls:
  9990 ;;		Nothing
  9991 ;; This function is called by:
  9992 ;;		_uart_puts
  9993 ;; This function uses a non-reentrant model
  9994 ;;
  9995                           
  9996                           
  9997                           ;psect for function _uart_putch
  9998  06D9                     _uart_putch:	
  9999                           
 10000                           ;incstack = 0
 10001                           ; Regs used in _uart_putch: [wreg]
 10002                           ;uart_putch@byte stored from wreg
 10003  06D9  00F2               	movwf	uart_putch@byte
 10004  06DA                     l528:	
 10005                           ;uart.c: 25: while(!TXIF) {
 10006                           
 10007  06DA  1283               	bcf	3,5	;RP0=0, select bank0
 10008  06DB  1303               	bcf	3,6	;RP1=0, select bank0
 10009  06DC  1E0C               	btfss	12,4	;volatile
 10010  06DD  2EDA               	goto	l528
 10011                           
 10012                           ;uart.c: 28: }
 10013                           ;uart.c: 29: TXREG = (unsigned char)byte;
 10014  06DE  0872               	movf	uart_putch@byte,w
 10015  06DF  0099               	movwf	25	;volatile
 10016  06E0  0008               	return
 10017  06E1                     __end_of_uart_putch:	
 10018                           
 10019                           	psect	text40
 10020  07FA                     __ptext40:	
 10021 ;; *************** function _format_putchar *****************
 10022 ;; Defined at:
 10023 ;;		line 6 in file "../../../lib/format.c"
 10024 ;; Parameters:    Size  Location     Type
 10025 ;;  c               1    7[COMMON] unsigned char 
 10026 ;; Auto vars:     Size  Location     Type
 10027 ;;		None
 10028 ;; Return value:  Size  Location     Type
 10029 ;;		None               void
 10030 ;; Registers used:
 10031 ;;		None
 10032 ;; Tracked objects:
 10033 ;;		On entry : 0/300
 10034 ;;		On exit  : 0/0
 10035 ;;		Unchanged: 0/0
 10036 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10037 ;;      Params:         1       0       0       0       0
 10038 ;;      Locals:         0       0       0       0       0
 10039 ;;      Temps:          0       0       0       0       0
 10040 ;;      Totals:         1       0       0       0       0
 10041 ;;Total ram usage:        1 bytes
 10042 ;; Hardware stack levels used:    1
 10043 ;; Hardware stack levels required when called:    1
 10044 ;; This function calls:
 10045 ;;		Nothing
 10046 ;; This function is called by:
 10047 ;;		_format_number
 10048 ;;		_format_double
 10049 ;; This function uses a non-reentrant model
 10050 ;;
 10051                           
 10052                           
 10053                           ;psect for function _format_putchar
 10054  07FA                     _format_putchar:	
 10055                           
 10056                           ;format.c: 7: return;
 10057                           
 10058                           ;incstack = 0
 10059                           ; Regs used in _format_putchar: []
 10060  07FA  0008               	return
 10061  07FB                     __end_of_format_putchar:	
 10062                           
 10063                           	psect	text52
 10064  1FA3                     __ptext52:	
 10065 ;; *************** function _isr *****************
 10066 ;; Defined at:
 10067 ;;		line 76 in file "../../../src/LC-meter.c"
 10068 ;; Parameters:    Size  Location     Type
 10069 ;;		None
 10070 ;; Auto vars:     Size  Location     Type
 10071 ;;		None
 10072 ;; Return value:  Size  Location     Type
 10073 ;;                  2  255[None  ] int 
 10074 ;; Registers used:
 10075 ;;		wreg, status,2, status,0
 10076 ;; Tracked objects:
 10077 ;;		On entry : 0/0
 10078 ;;		On exit  : 300/0
 10079 ;;		Unchanged: 0/0
 10080 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10081 ;;      Params:         0       0       0       0       0
 10082 ;;      Locals:         0       0       0       0       0
 10083 ;;      Temps:          2       0       0       0       0
 10084 ;;      Totals:         2       0       0       0       0
 10085 ;;Total ram usage:        2 bytes
 10086 ;; Hardware stack levels used:    1
 10087 ;; This function calls:
 10088 ;;		Nothing
 10089 ;; This function is called by:
 10090 ;;		Interrupt level 1
 10091 ;; This function uses a non-reentrant model
 10092 ;;
 10093                           
 10094                           
 10095                           ;psect for function _isr
 10096  1FA3                     _isr:	
 10097                           
 10098                           ;LC-meter.c: 78: if(TMR2IF) {
 10099  1FA3  1283               	bcf	3,5	;RP0=0, select bank0
 10100  1FA4  1303               	bcf	3,6	;RP1=0, select bank0
 10101  1FA5  1C8C               	btfss	12,1	;volatile
 10102  1FA6  2FF9               	goto	i1l260
 10103                           
 10104                           ;LC-meter.c: 80: bres += 256;
 10105  1FA7  3001               	movlw	1
 10106  1FA8  1683               	bsf	3,5	;RP0=1, select bank3
 10107  1FA9  1703               	bsf	3,6	;RP1=1, select bank3
 10108  1FAA  07CC               	addwf	(_bres+1)^(0+384),f	;volatile
 10109                           
 10110                           ;LC-meter.c: 82: if(bres >= 5000) {
 10111  1FAB  3013               	movlw	19
 10112  1FAC  024C               	subwf	(_bres+1)^(0+384),w	;volatile
 10113  1FAD  3088               	movlw	136
 10114  1FAE  1903               	skipnz
 10115  1FAF  024B               	subwf	_bres^(0+384),w	;volatile
 10116  1FB0  1C03               	skipc
 10117  1FB1  2FF6               	goto	i1l3409
 10118                           
 10119                           ;LC-meter.c: 83: bres -= 5000;
 10120  1FB2  3088               	movlw	136
 10121  1FB3  02CB               	subwf	_bres^(0+384),f	;volatile
 10122  1FB4  3013               	movlw	19
 10123  1FB5  1C03               	skipc
 10124  1FB6  03CC               	decf	(_bres+1)^(0+384),f	;volatile
 10125  1FB7  02CC               	subwf	(_bres+1)^(0+384),f	;volatile
 10126                           
 10127                           ;LC-meter.c: 84: msecpart++;
 10128  1FB8  0ACD               	incf	_msecpart^(0+384),f	;volatile
 10129  1FB9  1903               	skipnz
 10130  1FBA  0ACE               	incf	(_msecpart+1)^(0+384),f	;volatile
 10131                           
 10132                           ;LC-meter.c: 85: msecs++;
 10133  1FBB  0A90               	incf	_msecs^(0+384),f	;volatile
 10134  1FBC  1903               	skipnz
 10135  1FBD  0A91               	incf	(_msecs+1)^(0+384),f	;volatile
 10136  1FBE  1903               	skipnz
 10137  1FBF  0A92               	incf	(_msecs+2)^(0+384),f	;volatile
 10138  1FC0  1903               	skipnz
 10139  1FC1  0A93               	incf	(_msecs+3)^(0+384),f	;volatile
 10140                           
 10141                           ;LC-meter.c: 87: RC3 = (((blink > 200)) == 0);
 10142  1FC2  3000               	movlw	0
 10143  1FC3  021D               	subwf	(_blink+1)^(0+384),w	;volatile
 10144  1FC4  30C9               	movlw	201
 10145  1FC5  1903               	skipnz
 10146  1FC6  021C               	subwf	_blink^(0+384),w	;volatile
 10147  1FC7  1803               	btfsc	3,0
 10148  1FC8  2FCD               	goto	u294_20
 10149  1FC9  1283               	bcf	3,5	;RP0=0, select bank0
 10150  1FCA  1303               	bcf	3,6	;RP1=0, select bank0
 10151  1FCB  1587               	bsf	7,3	;volatile
 10152  1FCC  2FD0               	goto	u295_24
 10153  1FCD                     u294_20:	
 10154  1FCD  1283               	bcf	3,5	;RP0=0, select bank0
 10155  1FCE  1303               	bcf	3,6	;RP1=0, select bank0
 10156  1FCF  1187               	bcf	7,3	;volatile
 10157  1FD0                     u295_24:	
 10158                           
 10159                           ;LC-meter.c: 88: if(blink >= 400)
 10160  1FD0  3001               	movlw	1
 10161  1FD1  1683               	bsf	3,5	;RP0=1, select bank3
 10162  1FD2  1703               	bsf	3,6	;RP1=1, select bank3
 10163  1FD3  021D               	subwf	(_blink+1)^(0+384),w	;volatile
 10164  1FD4  3090               	movlw	144
 10165  1FD5  1903               	skipnz
 10166  1FD6  021C               	subwf	_blink^(0+384),w	;volatile
 10167  1FD7  1C03               	skipc
 10168  1FD8  2FDF               	goto	i1l3401
 10169                           
 10170                           ;LC-meter.c: 89: blink -= 400;
 10171  1FD9  3090               	movlw	144
 10172  1FDA  029C               	subwf	_blink^(0+384),f	;volatile
 10173  1FDB  3001               	movlw	1
 10174  1FDC  1C03               	skipc
 10175  1FDD  039D               	decf	(_blink+1)^(0+384),f	;volatile
 10176  1FDE  029D               	subwf	(_blink+1)^(0+384),f	;volatile
 10177  1FDF                     i1l3401:	
 10178                           
 10179                           ;LC-meter.c: 90: ++blink;
 10180  1FDF  0A9C               	incf	_blink^(0+384),f	;volatile
 10181  1FE0  1903               	skipnz
 10182  1FE1  0A9D               	incf	(_blink+1)^(0+384),f	;volatile
 10183                           
 10184                           ;LC-meter.c: 93: if(msecpart >= 1000) {
 10185  1FE2  3003               	movlw	3
 10186  1FE3  024E               	subwf	(_msecpart+1)^(0+384),w	;volatile
 10187  1FE4  30E8               	movlw	232
 10188  1FE5  1903               	skipnz
 10189  1FE6  024D               	subwf	_msecpart^(0+384),w	;volatile
 10190  1FE7  1C03               	skipc
 10191  1FE8  2FF6               	goto	i1l3409
 10192                           
 10193                           ;LC-meter.c: 95: seconds++;
 10194  1FE9  0A94               	incf	_seconds^(0+384),f	;volatile
 10195  1FEA  1903               	skipnz
 10196  1FEB  0A95               	incf	(_seconds+1)^(0+384),f	;volatile
 10197  1FEC  1903               	skipnz
 10198  1FED  0A96               	incf	(_seconds+2)^(0+384),f	;volatile
 10199  1FEE  1903               	skipnz
 10200  1FEF  0A97               	incf	(_seconds+3)^(0+384),f	;volatile
 10201                           
 10202                           ;LC-meter.c: 96: msecpart -= 1000;
 10203  1FF0  30E8               	movlw	232
 10204  1FF1  02CD               	subwf	_msecpart^(0+384),f	;volatile
 10205  1FF2  3003               	movlw	3
 10206  1FF3  1C03               	skipc
 10207  1FF4  03CE               	decf	(_msecpart+1)^(0+384),f	;volatile
 10208  1FF5  02CE               	subwf	(_msecpart+1)^(0+384),f	;volatile
 10209  1FF6                     i1l3409:	
 10210                           
 10211                           ;LC-meter.c: 97: }
 10212                           ;LC-meter.c: 98: }
 10213                           ;LC-meter.c: 100: TMR2IF = 0;
 10214  1FF6  1283               	bcf	3,5	;RP0=0, select bank0
 10215  1FF7  1303               	bcf	3,6	;RP1=0, select bank0
 10216  1FF8  108C               	bcf	12,1	;volatile
 10217  1FF9                     i1l260:	
 10218  1FF9  0871               	movf	??_isr+1,w
 10219  1FFA  008A               	movwf	10
 10220  1FFB  0E70               	swapf	??_isr^(0+-128),w
 10221  1FFC  0083               	movwf	3
 10222  1FFD  0EFE               	swapf	126,f
 10223  1FFE  0E7E               	swapf	126,w
 10224  1FFF  0009               	retfie
 10225  2000                     __end_of_isr:	
 10226  0006                     
 10227                           	psect	intentry
 10228  0004                     __pintentry:	
 10229                           ;incstack = 0
 10230                           ; Regs used in _isr: [wreg+status,2+status,0]
 10231                           
 10232  0004                     interrupt_function:	
 10233  007E                     saved_w	set	btemp
 10234  0004  00FE               	movwf	btemp
 10235  0005  0E03               	swapf	3,w
 10236  0006  00F0               	movwf	??_isr
 10237  0007  080A               	movf	10,w
 10238  0008  00F1               	movwf	??_isr+1
 10239  0009  160A  158A  2FA3   	ljmp	_isr
 10240                           
 10241                           	psect	functab
 10242  0100                     __pfunctab:	
 10243  0100                     __fptable:	
 10244  0100                     fptable:	
 10245  0100  00FF               	movwf	(btemp+1)& (0+127)
 10246  0101  3001               	movlw	high fptable
 10247  0102  008A               	movwf	10
 10248  0103  087F               	movf	(btemp+1)& (0+127),w
 10249  0104  0782               	addwf	2,f
 10250  0105                     fpbase:	
 10251  0105  2905               	goto	fpbase	; Call via a null pointer and you will get stuck here.
 10252  0106                     fp__output_putch:	
 10253  0106                     entry__output_putch:	
 10254  0106  160A  118A  2DFD   	ljmp	_output_putch
 10255  0109                     fp__lcd_putch:	
 10256  0109                     entry__lcd_putch:	
 10257  0109  160A  118A  2E38   	ljmp	_lcd_putch
 10258  010C                     fp__format_putchar:	
 10259  010C  120A  118A  2FFA   	ljmp	_format_putchar
 10260  010F                     __end_of__fptable:	
 10261  007E                     btemp	set	126	;btemp
 10262  007E                     wtemp	set	126
 10263  007E                     wtemp0	set	126
 10264  0080                     wtemp1	set	128
 10265  0082                     wtemp2	set	130
 10266  0084                     wtemp3	set	132
 10267  0086                     wtemp4	set	134
 10268  0088                     wtemp5	set	136
 10269  007F                     wtemp6	set	127
 10270  007E                     ttemp	set	126
 10271  007E                     ttemp0	set	126
 10272  0081                     ttemp1	set	129
 10273  0084                     ttemp2	set	132
 10274  0087                     ttemp3	set	135
 10275  007F                     ttemp4	set	127
 10276  007E                     ltemp	set	126
 10277  007E                     ltemp0	set	126
 10278  0082                     ltemp1	set	130
 10279  0086                     ltemp2	set	134
 10280  0080                     ltemp3	set	128


Data Sizes:
    Strings     109
    Constant    76
    Data        5
    BSS         48
    Persistent  8
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      12
    BANK0            80     80      80
    BANK1            80     68      80
    BANK3            96     20      67
    BANK2            96      0       0

Pointer List with Targets:

    eval_poly@d	PTR const  size(1) Largest target is 40
		 -> exp@coeff(CODE[40]), log@coeff(CODE[36]), 

    frexp@eptr	PTR int  size(1) Largest target is 2
		 -> log@exponent(BANK0[2]), floor@expon(BANK1[2]), 

    uart_puts@s	PTR const unsigned char  size(1) Largest target is 6
		 -> STR_22(CODE[3]), STR_20(CODE[3]), STR_14(CODE[6]), STR_9(CODE[3]), 

    sp__memcpy	PTR void  size(1) Largest target is 18
		 -> buffer.x(BANK3[16]), buffer(BANK3[18]), 

    lcd_puts@string	PTR const unsigned char  size(1) Largest target is 10
		 -> STR_18(CODE[5]), STR_17(CODE[6]), STR_16(CODE[7]), STR_15(CODE[7]), 
		 -> STR_13(CODE[10]), STR_12(CODE[4]), STR_11(CODE[4]), STR_10(CODE[6]), 

    putchar_ptr	PTR FTN(unsigned char ,)void  size(1) Largest target is 0
		 -> format_putchar(), output_putch(), lcd_putch(), 

    put_str@s	PTR const unsigned char  size(1) Largest target is 15
		 -> STR_25(CODE[13]), STR_24(CODE[10]), STR_23(CODE[6]), STR_21(CODE[15]), 
		 -> STR_19(CODE[12]), 

    print_unit@units	PTR const unsigned char [8] size(1) Largest target is 3
		 -> STR_8(CODE[3]), STR_7(CODE[3]), STR_6(CODE[3]), STR_5(CODE[3]), 
		 -> STR_4(CODE[3]), STR_3(CODE[3]), STR_2(CODE[3]), STR_1(CODE[2]), 

    S31$op	PTR FTN(unsigned char ,)void  size(1) Largest target is 0

    buffer.op	PTR FTN(unsigned char ,)void  size(1) Largest target is 0


Critical Paths under _main in COMMON

    _main->_lcd_begin
    _main->_lcd_puts
    _measure_inductance->___flge
    _measure_inductance->_print_unit
    _measure_capacitance->___flge
    _measure_capacitance->_print_unit
    _print_unit->_lcd_gotoxy
    _print_reading->_format_number
    _print_reading->_lcd_puts
    _lcd_begin->_lcd_command
    _indicator->_lcd_puts
    _lcd_puts->_lcd_putch
    _format_double->___flge
    _pow->___flge
    _exp->___flge
    _ldexp->___flge
    _floor->___flge
    ___flsub->___awtofl
    ___fldiv->___flpack
    ___lltofl->___flpack
    _log->___flge
    ___flmul->___awtofl
    ___flmul->_frexp
    ___fladd->___awtofl
    ___fladd->_frexp
    ___awtofl->___flpack
    _uart_puts->_uart_putch
    _measure_freq->_format_number
    _put_str->_output_putch
    _lcd_gotoxy->_lcd_command
    _format_number->___lwdiv
    _lcd_clear->_lcd_command
    _lcd_command->_lcd_send
    _lcd_send->_lcd_write4bits

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _print_unit->_lcd_gotoxy
    _print_reading->_format_number
    _indicator->_lcd_gotoxy
    _ldexp->_eval_poly
    _floor->___altofl
    ___flsub->___fladd
    ___fldiv->___flpack
    ___lltofl->___flpack
    _log10->_log
    _log->_eval_poly
    _eval_poly->___fladd
    ___flmul->___fldiv
    ___fladd->___flmul
    ___awtofl->___flpack
    _calibrate->___lwtofl
    _measure_freq->_format_number
    ___lwtofl->_measure_freq

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    _measure_inductance->___fltol
    _measure_capacitance->___fltol
    _format_double->_pow
    _pow->_exp
    _exp->_floor
    _floor->___altofl
    ___fltol->_log10
    ___altofl->___fltol

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    _main->_format_double

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0  258740
                          _calibrate
                          _delay10ms
                      _format_double
                          _indicator
                          _lcd_begin
                          _lcd_clear
                         _lcd_gotoxy
                           _lcd_init
                           _lcd_puts
                _measure_capacitance
                 _measure_inductance
                        _timer0_init
                        _timer2_init
                          _uart_init
                          _uart_puts
 ---------------------------------------------------------------------------------
 (1) _uart_init                                            4     4      0      48
                                              2 COMMON     4     4      0
                        _uart_enable
 ---------------------------------------------------------------------------------
 (2) _uart_enable                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _timer2_init                                          4     4      0     157
                                              2 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 (1) _timer0_init                                         10    10      0     371
                                              0 BANK0     10    10      0
 ---------------------------------------------------------------------------------
 (1) _measure_inductance                                  55    55      0   42294
                                             18 BANK1     43    43      0
                            ___fldiv
                             ___flge
                            ___flmul
                            ___flsub
                            ___fltol
                           ___lwtofl
                         _lcd_gotoxy
                       _measure_freq
                      _print_reading
                         _print_unit
                            _put_str
 ---------------------------------------------------------------------------------
 (1) _measure_capacitance                                 19    19      0   41784
                                             18 BANK1     19    19      0
                            ___fldiv
                             ___flge
                            ___flmul
                            ___flsub
                            ___fltol
                           ___lwtofl
                         _lcd_gotoxy
                       _measure_freq
                      _print_reading
                         _print_unit
                            _put_str
 ---------------------------------------------------------------------------------
 (2) _print_unit                                           3     3      0    1867
                                              8 COMMON     2     2      0
                         _lcd_gotoxy
                          _uart_puts
 ---------------------------------------------------------------------------------
 (2) _print_reading                                        6     4      2    8384
                                             41 BANK0      6     4      2
                            ___lwdiv
                            ___lwmod
                      _format_number
                         _lcd_gotoxy
                           _lcd_puts
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             3     3      0      46
                                              2 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _lcd_begin                                            4     3      1     709
                                              7 COMMON     3     2      1
                                              0 BANK0      1     1      0
                        _lcd_command
                     _lcd_write4bits
 ---------------------------------------------------------------------------------
 (1) _indicator                                            1     1      0    2812
                                              5 BANK0      1     1      0
                         _lcd_gotoxy
                           _lcd_puts
 ---------------------------------------------------------------------------------
 (3) _lcd_puts                                             2     2      0    1089
                                              8 COMMON     2     2      0
                          _lcd_putch
 ---------------------------------------------------------------------------------
 (1) _format_double                                       20    16      4  152936
                                              0 BANK3     20    16      4
                           ___awtofl
                            ___fldiv
                             ___flge
                            ___flmul
                            ___flsub
                            ___fltol
                              _floor
                     _format_putchar *
                          _lcd_putch *
                              _log10
                       _output_putch *
                                _pow
 ---------------------------------------------------------------------------------
 (2) _pow                                                 21    13      8   85814
                                             47 BANK1     21    13      8
                             ___flge
                            ___flmul
                            ___flneg
                            ___fltol
                           ___lltofl
                                _exp
                                _log
 ---------------------------------------------------------------------------------
 (3) _exp                                                 15    11      4   46127
                                             32 BANK1     15    11      4
                           ___awtofl
                            ___fldiv
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                          _eval_poly
                              _floor
                              _ldexp
                                _log (ARG)
 ---------------------------------------------------------------------------------
 (4) _ldexp                                               12     6      6    2907
                                             73 BANK0      6     0      6
                                              0 BANK1      6     6      0
                             ___flge
                            ___flneg
                          _eval_poly (ARG)
 ---------------------------------------------------------------------------------
 (5) ___flneg                                              4     0      4     257
                                              2 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 (4) _floor                                               10     6      4   10352
                                             22 BANK1     10     6      4
                           ___altofl
                            ___fladd
                            ___fldiv (ARG)
                             ___flge
                            ___fltol
                              _frexp
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             10     6      4     680
                                              8 BANK1     10     6      4
                            ___fldiv (ARG)
                              _log10 (ARG)
 ---------------------------------------------------------------------------------
 (5) ___altofl                                             5     1      4    2446
                                             79 BANK0      1     1      0
                                             18 BANK1      4     0      4
                           ___flpack
                            ___fltol (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flsub                                              8     0      8    5089
                                             57 BANK0      8     0      8
                           ___awtofl (ARG)
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (2) ___fldiv                                             19    11      8    3931
                                              4 BANK0     19    11      8
                           ___flpack
 ---------------------------------------------------------------------------------
 (3) ___lltofl                                             4     0      4    2344
                                              4 BANK0      4     0      4
                           ___flpack
 ---------------------------------------------------------------------------------
 (2) _log10                                                8     4      4   33717
                                              0 BANK1      8     4      4
                            ___flmul
                                _log
 ---------------------------------------------------------------------------------
 (3) _log                                                  6     2      4   27200
                                             73 BANK0      6     2      4
                           ___awtofl
                            ___fladd
                             ___flge
                            ___flmul
                          _eval_poly
                              _frexp
 ---------------------------------------------------------------------------------
 (4) _frexp                                                7     2      5     436
                                              2 COMMON     7     2      5
 ---------------------------------------------------------------------------------
 (4) _eval_poly                                           16     9      7   11109
                                             57 BANK0     16     9      7
                            ___fladd
                            ___flmul
 ---------------------------------------------------------------------------------
 (2) ___flmul                                             19    11      8    6342
                                             23 BANK0     19    11      8
                           ___awtofl (ARG)
                            ___fldiv (ARG)
                           ___flpack
                              _frexp (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fladd                                             15     7      8    4123
                                             42 BANK0     15     7      8
                           ___awtofl (ARG)
                            ___flmul (ARG)
                           ___flpack
                              _frexp (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flge                                              12     4      8    2124
                                              2 COMMON     8     0      8
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (4) ___awtofl                                             9     5      4    2686
                                              8 COMMON     1     1      0
                                              4 BANK0      4     0      4
                           ___flpack
 ---------------------------------------------------------------------------------
 (1) _calibrate                                            1     1      0   14240
                                             51 BANK0      1     1      0
                           ___lwtofl
                          _delay10ms
                          _lcd_clear
                         _lcd_gotoxy
                          _lcd_putch
                       _measure_freq
                            _put_str
                          _uart_puts
 ---------------------------------------------------------------------------------
 (1) _uart_puts                                            1     1      0     175
                                              3 COMMON     1     1      0
                         _uart_putch
 ---------------------------------------------------------------------------------
 (2) _uart_putch                                           1     1      0      22
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _measure_freq                                         6     4      2    7446
                                             41 BANK0      6     4      2
                      _format_number
                         _lcd_gotoxy
                            _put_str
                     _timer0_read_ps
 ---------------------------------------------------------------------------------
 (3) _timer0_read_ps                                       9     7      2     167
                                              2 COMMON     6     4      2
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (2) _put_str                                              3     3      0    1084
                                              0 BANK0      3     3      0
                       _output_putch
 ---------------------------------------------------------------------------------
 (3) _lcd_gotoxy                                           6     5      1    1692
                                              7 COMMON     1     0      1
                                              0 BANK0      5     5      0
                        _lcd_command
 ---------------------------------------------------------------------------------
 (3) _format_number                                       42    38      4    4438
                                              9 COMMON     1     1      0
                                              0 BANK0     41    37      4
                            ___lwdiv
                            ___lwmod
                     _format_putchar *
                          _lcd_putch *
                       _output_putch *
 ---------------------------------------------------------------------------------
 (3) _output_putch                                         1     0      1     804
                                              7 COMMON     1     0      1
                          _lcd_putch
 ---------------------------------------------------------------------------------
 (4) _lcd_putch                                            1     0      1     719
                                              7 COMMON     1     0      1
                           _lcd_send
 ---------------------------------------------------------------------------------
 (4) _format_putchar                                       1     0      1     220
                                              7 COMMON     1     0      1
 ---------------------------------------------------------------------------------
 (4) ___lwmod                                              5     1      4     451
                                              2 COMMON     5     1      4
 ---------------------------------------------------------------------------------
 (4) ___lwdiv                                              7     3      4     454
                                              2 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (1) _lcd_clear                                            2     2      0     387
                                              7 COMMON     2     2      0
                        _lcd_command
 ---------------------------------------------------------------------------------
 (4) _lcd_command                                          1     1      0     387
                                              6 COMMON     1     1      0
                           _lcd_send
 ---------------------------------------------------------------------------------
 (5) _lcd_send                                             2     1      1     356
                                              4 COMMON     2     1      1
                     _lcd_write4bits
 ---------------------------------------------------------------------------------
 (6) _lcd_write4bits                                       2     2      0     133
                                              2 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _delay10ms                                            1     1      0       0
 ---------------------------------------------------------------------------------
 (2) ___lwtofl                                             4     0      4    2669
                                             47 BANK0      4     0      4
                           ___flpack
                       _measure_freq (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flpack                                            10     4      6    2248
                                              2 COMMON     6     0      6
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (8) _isr                                                  2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _calibrate
     ___lwtofl
       ___flpack
       _measure_freq (ARG)
         _format_number
           ___lwdiv
           ___lwmod
           _format_putchar *
           _lcd_putch *
             _lcd_send
               _lcd_write4bits
           _output_putch *
             _lcd_putch
               _lcd_send
                 _lcd_write4bits
         _lcd_gotoxy
           _lcd_command
             _lcd_send
               _lcd_write4bits
         _put_str
           _output_putch
             _lcd_putch
               _lcd_send
                 _lcd_write4bits
         _timer0_read_ps
     _delay10ms
     _lcd_clear
       _lcd_command
         _lcd_send
           _lcd_write4bits
     _lcd_gotoxy
       _lcd_command
         _lcd_send
           _lcd_write4bits
     _lcd_putch
       _lcd_send
         _lcd_write4bits
     _measure_freq
       _format_number
         ___lwdiv
         ___lwmod
         _format_putchar *
         _lcd_putch *
           _lcd_send
             _lcd_write4bits
         _output_putch *
           _lcd_putch
             _lcd_send
               _lcd_write4bits
       _lcd_gotoxy
         _lcd_command
           _lcd_send
             _lcd_write4bits
       _put_str
         _output_putch
           _lcd_putch
             _lcd_send
               _lcd_write4bits
       _timer0_read_ps
     _put_str
       _output_putch
         _lcd_putch
           _lcd_send
             _lcd_write4bits
     _uart_puts
       _uart_putch
   _delay10ms
   _format_double
     ___awtofl
       ___flpack
     ___fldiv
       ___flpack
     ___flge
     ___flmul
       ___awtofl (ARG)
         ___flpack
       ___fldiv (ARG)
         ___flpack
       ___flpack (ARG)
       _frexp (ARG)
     ___flsub
       ___awtofl (ARG)
         ___flpack
       ___fladd (ARG)
         ___awtofl (ARG)
           ___flpack
         ___flmul (ARG)
           ___awtofl (ARG)
             ___flpack
           ___fldiv (ARG)
             ___flpack
           ___flpack (ARG)
           _frexp (ARG)
         ___flpack (ARG)
         _frexp (ARG)
       ___flmul (ARG)
         ___awtofl (ARG)
           ___flpack
         ___fldiv (ARG)
           ___flpack
         ___flpack (ARG)
         _frexp (ARG)
     ___fltol
       ___fldiv (ARG)
         ___flpack
       _log10 (ARG)
         ___flmul
           ___awtofl (ARG)
             ___flpack
           ___fldiv (ARG)
             ___flpack
           ___flpack (ARG)
           _frexp (ARG)
         _log
           ___awtofl
             ___flpack
           ___fladd
             ___awtofl (ARG)
               ___flpack
             ___flmul (ARG)
               ___awtofl (ARG)
                 ___flpack
               ___fldiv (ARG)
                 ___flpack
               ___flpack (ARG)
               _frexp (ARG)
             ___flpack (ARG)
             _frexp (ARG)
           ___flge
           ___flmul
             ___awtofl (ARG)
               ___flpack
             ___fldiv (ARG)
               ___flpack
             ___flpack (ARG)
             _frexp (ARG)
           _eval_poly
             ___fladd
               ___awtofl (ARG)
                 ___flpack
               ___flmul (ARG)
                 ___awtofl (ARG)
                   ___flpack
                 ___fldiv (ARG)
                   ___flpack
                 ___flpack (ARG)
                 _frexp (ARG)
               ___flpack (ARG)
               _frexp (ARG)
             ___flmul
               ___awtofl (ARG)
                 ___flpack
               ___fldiv (ARG)
                 ___flpack
               ___flpack (ARG)
               _frexp (ARG)
           _frexp
     _floor
       ___altofl
         ___flpack
         ___fltol (ARG)
           ___fldiv (ARG)
             ___flpack
           _log10 (ARG)
             ___flmul
               ___awtofl (ARG)
                 ___flpack
               ___fldiv (ARG)
                 ___flpack
               ___flpack (ARG)
               _frexp (ARG)
             _log
               ___awtofl
                 ___flpack
               ___fladd
                 ___awtofl (ARG)
                   ___flpack
                 ___flmul (ARG)
                   ___awtofl (ARG)
                     ___flpack
                   ___fldiv (ARG)
                     ___flpack
                   ___flpack (ARG)
                   _frexp (ARG)
                 ___flpack (ARG)
                 _frexp (ARG)
               ___flge
               ___flmul
                 ___awtofl (ARG)
                   ___flpack
                 ___fldiv (ARG)
                   ___flpack
                 ___flpack (ARG)
                 _frexp (ARG)
               _eval_poly
                 ___fladd
                   ___awtofl (ARG)
                     ___flpack
                   ___flmul (ARG)
                     ___awtofl (ARG)
                       ___flpack
                     ___fldiv (ARG)
                       ___flpack
                     ___flpack (ARG)
                     _frexp (ARG)
                   ___flpack (ARG)
                   _frexp (ARG)
                 ___flmul
                   ___awtofl (ARG)
                     ___flpack
                   ___fldiv (ARG)
                     ___flpack
                   ___flpack (ARG)
                   _frexp (ARG)
               _frexp
       ___fladd
         ___awtofl (ARG)
           ___flpack
         ___flmul (ARG)
           ___awtofl (ARG)
             ___flpack
           ___fldiv (ARG)
             ___flpack
           ___flpack (ARG)
           _frexp (ARG)
         ___flpack (ARG)
         _frexp (ARG)
       ___fldiv (ARG)
         ___flpack
       ___flge (ARG)
       ___fltol (ARG)
         ___fldiv (ARG)
           ___flpack
         _log10 (ARG)
           ___flmul
             ___awtofl (ARG)
               ___flpack
             ___fldiv (ARG)
               ___flpack
             ___flpack (ARG)
             _frexp (ARG)
           _log
             ___awtofl
               ___flpack
             ___fladd
               ___awtofl (ARG)
                 ___flpack
               ___flmul (ARG)
                 ___awtofl (ARG)
                   ___flpack
                 ___fldiv (ARG)
                   ___flpack
                 ___flpack (ARG)
                 _frexp (ARG)
               ___flpack (ARG)
               _frexp (ARG)
             ___flge
             ___flmul
               ___awtofl (ARG)
                 ___flpack
               ___fldiv (ARG)
                 ___flpack
               ___flpack (ARG)
               _frexp (ARG)
             _eval_poly
               ___fladd
                 ___awtofl (ARG)
                   ___flpack
                 ___flmul (ARG)
                   ___awtofl (ARG)
                     ___flpack
                   ___fldiv (ARG)
                     ___flpack
                   ___flpack (ARG)
                   _frexp (ARG)
                 ___flpack (ARG)
                 _frexp (ARG)
               ___flmul
                 ___awtofl (ARG)
                   ___flpack
                 ___fldiv (ARG)
                   ___flpack
                 ___flpack (ARG)
                 _frexp (ARG)
             _frexp
       _frexp (ARG)
     _format_putchar *
     _lcd_putch *
       _lcd_send
         _lcd_write4bits
     _log10 *
       ___flmul
         ___awtofl (ARG)
           ___flpack
         ___fldiv (ARG)
           ___flpack
         ___flpack (ARG)
         _frexp (ARG)
       _log
         ___awtofl
           ___flpack
         ___fladd
           ___awtofl (ARG)
             ___flpack
           ___flmul (ARG)
             ___awtofl (ARG)
               ___flpack
             ___fldiv (ARG)
               ___flpack
             ___flpack (ARG)
             _frexp (ARG)
           ___flpack (ARG)
           _frexp (ARG)
         ___flge
         ___flmul
           ___awtofl (ARG)
             ___flpack
           ___fldiv (ARG)
             ___flpack
           ___flpack (ARG)
           _frexp (ARG)
         _eval_poly
           ___fladd
             ___awtofl (ARG)
               ___flpack
             ___flmul (ARG)
               ___awtofl (ARG)
                 ___flpack
               ___fldiv (ARG)
                 ___flpack
               ___flpack (ARG)
               _frexp (ARG)
             ___flpack (ARG)
             _frexp (ARG)
           ___flmul
             ___awtofl (ARG)
               ___flpack
             ___fldiv (ARG)
               ___flpack
             ___flpack (ARG)
             _frexp (ARG)
         _frexp
     _output_putch *
       _lcd_putch
         _lcd_send
           _lcd_write4bits
     _pow *
       ___flge
       ___flmul
         ___awtofl (ARG)
           ___flpack
         ___fldiv (ARG)
           ___flpack
         ___flpack (ARG)
         _frexp (ARG)
       ___flneg
       ___fltol
         ___fldiv (ARG)
           ___flpack
         _log10 (ARG)
           ___flmul
             ___awtofl (ARG)
               ___flpack
             ___fldiv (ARG)
               ___flpack
             ___flpack (ARG)
             _frexp (ARG)
           _log
             ___awtofl
               ___flpack
             ___fladd
               ___awtofl (ARG)
                 ___flpack
               ___flmul (ARG)
                 ___awtofl (ARG)
                   ___flpack
                 ___fldiv (ARG)
                   ___flpack
                 ___flpack (ARG)
                 _frexp (ARG)
               ___flpack (ARG)
               _frexp (ARG)
             ___flge
             ___flmul
               ___awtofl (ARG)
                 ___flpack
               ___fldiv (ARG)
                 ___flpack
               ___flpack (ARG)
               _frexp (ARG)
             _eval_poly
               ___fladd
                 ___awtofl (ARG)
                   ___flpack
                 ___flmul (ARG)
                   ___awtofl (ARG)
                     ___flpack
                   ___fldiv (ARG)
                     ___flpack
                   ___flpack (ARG)
                   _frexp (ARG)
                 ___flpack (ARG)
                 _frexp (ARG)
               ___flmul
                 ___awtofl (ARG)
                   ___flpack
                 ___fldiv (ARG)
                   ___flpack
                 ___flpack (ARG)
                 _frexp (ARG)
             _frexp
       ___lltofl
         ___flpack
       _exp
         ___awtofl
           ___flpack
         ___fldiv
           ___flpack
         ___flge
         ___flmul
           ___awtofl (ARG)
             ___flpack
           ___fldiv (ARG)
             ___flpack
           ___flpack (ARG)
           _frexp (ARG)
         ___flneg
         ___flsub
           ___awtofl (ARG)
             ___flpack
           ___fladd (ARG)
             ___awtofl (ARG)
               ___flpack
             ___flmul (ARG)
               ___awtofl (ARG)
                 ___flpack
               ___fldiv (ARG)
                 ___flpack
               ___flpack (ARG)
               _frexp (ARG)
             ___flpack (ARG)
             _frexp (ARG)
           ___flmul (ARG)
             ___awtofl (ARG)
               ___flpack
             ___fldiv (ARG)
               ___flpack
             ___flpack (ARG)
             _frexp (ARG)
         ___fltol
           ___fldiv (ARG)
             ___flpack
           _log10 (ARG)
             ___flmul
               ___awtofl (ARG)
                 ___flpack
               ___fldiv (ARG)
                 ___flpack
               ___flpack (ARG)
               _frexp (ARG)
             _log
               ___awtofl
                 ___flpack
               ___fladd
                 ___awtofl (ARG)
                   ___flpack
                 ___flmul (ARG)
                   ___awtofl (ARG)
                     ___flpack
                   ___fldiv (ARG)
                     ___flpack
                   ___flpack (ARG)
                   _frexp (ARG)
                 ___flpack (ARG)
                 _frexp (ARG)
               ___flge
               ___flmul
                 ___awtofl (ARG)
                   ___flpack
                 ___fldiv (ARG)
                   ___flpack
                 ___flpack (ARG)
                 _frexp (ARG)
               _eval_poly
                 ___fladd
                   ___awtofl (ARG)
                     ___flpack
                   ___flmul (ARG)
                     ___awtofl (ARG)
                       ___flpack
                     ___fldiv (ARG)
                       ___flpack
                     ___flpack (ARG)
                     _frexp (ARG)
                   ___flpack (ARG)
                   _frexp (ARG)
                 ___flmul
                   ___awtofl (ARG)
                     ___flpack
                   ___fldiv (ARG)
                     ___flpack
                   ___flpack (ARG)
                   _frexp (ARG)
               _frexp
         _eval_poly
           ___fladd
             ___awtofl (ARG)
               ___flpack
             ___flmul (ARG)
               ___awtofl (ARG)
                 ___flpack
               ___fldiv (ARG)
                 ___flpack
               ___flpack (ARG)
               _frexp (ARG)
             ___flpack (ARG)
             _frexp (ARG)
           ___flmul
             ___awtofl (ARG)
               ___flpack
             ___fldiv (ARG)
               ___flpack
             ___flpack (ARG)
             _frexp (ARG)
         _floor
           ___altofl
             ___flpack
             ___fltol (ARG)
               ___fldiv (ARG)
                 ___flpack
               _log10 (ARG)
                 ___flmul
                   ___awtofl (ARG)
                     ___flpack
                   ___fldiv (ARG)
                     ___flpack
                   ___flpack (ARG)
                   _frexp (ARG)
                 _log
                   ___awtofl
                     ___flpack
                   ___fladd
                     ___awtofl (ARG)
                       ___flpack
                     ___flmul (ARG)
                       ___awtofl (ARG)
                         ___flpack
                       ___fldiv (ARG)
                         ___flpack
                       ___flpack (ARG)
                       _frexp (ARG)
                     ___flpack (ARG)
                     _frexp (ARG)
                   ___flge
                   ___flmul
                     ___awtofl (ARG)
                       ___flpack
                     ___fldiv (ARG)
                       ___flpack
                     ___flpack (ARG)
                     _frexp (ARG)
                   _eval_poly
                     ___fladd
                       ___awtofl (ARG)
                         ___flpack
                       ___flmul (ARG)
                         ___awtofl (ARG)
                           ___flpack
                         ___fldiv (ARG)
                           ___flpack
                         ___flpack (ARG)
                         _frexp (ARG)
                       ___flpack (ARG)
                       _frexp (ARG)
                     ___flmul
                       ___awtofl (ARG)
                         ___flpack
                       ___fldiv (ARG)
                         ___flpack
                       ___flpack (ARG)
                       _frexp (ARG)
                   _frexp
           ___fladd
             ___awtofl (ARG)
               ___flpack
             ___flmul (ARG)
               ___awtofl (ARG)
                 ___flpack
               ___fldiv (ARG)
                 ___flpack
               ___flpack (ARG)
               _frexp (ARG)
             ___flpack (ARG)
             _frexp (ARG)
           ___fldiv (ARG)
             ___flpack
           ___flge (ARG)
           ___fltol (ARG)
             ___fldiv (ARG)
               ___flpack
             _log10 (ARG)
               ___flmul
                 ___awtofl (ARG)
                   ___flpack
                 ___fldiv (ARG)
                   ___flpack
                 ___flpack (ARG)
                 _frexp (ARG)
               _log
                 ___awtofl
                   ___flpack
                 ___fladd
                   ___awtofl (ARG)
                     ___flpack
                   ___flmul (ARG)
                     ___awtofl (ARG)
                       ___flpack
                     ___fldiv (ARG)
                       ___flpack
                     ___flpack (ARG)
                     _frexp (ARG)
                   ___flpack (ARG)
                   _frexp (ARG)
                 ___flge
                 ___flmul
                   ___awtofl (ARG)
                     ___flpack
                   ___fldiv (ARG)
                     ___flpack
                   ___flpack (ARG)
                   _frexp (ARG)
                 _eval_poly
                   ___fladd
                     ___awtofl (ARG)
                       ___flpack
                     ___flmul (ARG)
                       ___awtofl (ARG)
                         ___flpack
                       ___fldiv (ARG)
                         ___flpack
                       ___flpack (ARG)
                       _frexp (ARG)
                     ___flpack (ARG)
                     _frexp (ARG)
                   ___flmul
                     ___awtofl (ARG)
                       ___flpack
                     ___fldiv (ARG)
                       ___flpack
                     ___flpack (ARG)
                     _frexp (ARG)
                 _frexp
           _frexp (ARG)
         _ldexp
           ___flge
           ___flneg
           _eval_poly (ARG)
             ___fladd
               ___awtofl (ARG)
                 ___flpack
               ___flmul (ARG)
                 ___awtofl (ARG)
                   ___flpack
                 ___fldiv (ARG)
                   ___flpack
                 ___flpack (ARG)
                 _frexp (ARG)
               ___flpack (ARG)
               _frexp (ARG)
             ___flmul
               ___awtofl (ARG)
                 ___flpack
               ___fldiv (ARG)
                 ___flpack
               ___flpack (ARG)
               _frexp (ARG)
         _log (ARG)
           ___awtofl
             ___flpack
           ___fladd
             ___awtofl (ARG)
               ___flpack
             ___flmul (ARG)
               ___awtofl (ARG)
                 ___flpack
               ___fldiv (ARG)
                 ___flpack
               ___flpack (ARG)
               _frexp (ARG)
             ___flpack (ARG)
             _frexp (ARG)
           ___flge
           ___flmul
             ___awtofl (ARG)
               ___flpack
             ___fldiv (ARG)
               ___flpack
             ___flpack (ARG)
             _frexp (ARG)
           _eval_poly
             ___fladd
               ___awtofl (ARG)
                 ___flpack
               ___flmul (ARG)
                 ___awtofl (ARG)
                   ___flpack
                 ___fldiv (ARG)
                   ___flpack
                 ___flpack (ARG)
                 _frexp (ARG)
               ___flpack (ARG)
               _frexp (ARG)
             ___flmul
               ___awtofl (ARG)
                 ___flpack
               ___fldiv (ARG)
                 ___flpack
               ___flpack (ARG)
               _frexp (ARG)
           _frexp
       _log
         ___awtofl
           ___flpack
         ___fladd
           ___awtofl (ARG)
             ___flpack
           ___flmul (ARG)
             ___awtofl (ARG)
               ___flpack
             ___fldiv (ARG)
               ___flpack
             ___flpack (ARG)
             _frexp (ARG)
           ___flpack (ARG)
           _frexp (ARG)
         ___flge
         ___flmul
           ___awtofl (ARG)
             ___flpack
           ___fldiv (ARG)
             ___flpack
           ___flpack (ARG)
           _frexp (ARG)
         _eval_poly
           ___fladd
             ___awtofl (ARG)
               ___flpack
             ___flmul (ARG)
               ___awtofl (ARG)
                 ___flpack
               ___fldiv (ARG)
                 ___flpack
               ___flpack (ARG)
               _frexp (ARG)
             ___flpack (ARG)
             _frexp (ARG)
           ___flmul
             ___awtofl (ARG)
               ___flpack
             ___fldiv (ARG)
               ___flpack
             ___flpack (ARG)
             _frexp (ARG)
         _frexp
   _indicator
     _lcd_gotoxy
       _lcd_command
         _lcd_send
           _lcd_write4bits
     _lcd_puts
       _lcd_putch
         _lcd_send
           _lcd_write4bits
   _lcd_begin
     _lcd_command
       _lcd_send
         _lcd_write4bits
     _lcd_write4bits
   _lcd_clear
     _lcd_command
       _lcd_send
         _lcd_write4bits
   _lcd_gotoxy
     _lcd_command
       _lcd_send
         _lcd_write4bits
   _lcd_init
   _lcd_puts
     _lcd_putch
       _lcd_send
         _lcd_write4bits
   _measure_capacitance
     ___fldiv
       ___flpack
     ___flge
     ___flmul
       ___awtofl (ARG)
         ___flpack
       ___fldiv (ARG)
         ___flpack
       ___flpack (ARG)
       _frexp (ARG)
     ___flsub
       ___awtofl (ARG)
         ___flpack
       ___fladd (ARG)
         ___awtofl (ARG)
           ___flpack
         ___flmul (ARG)
           ___awtofl (ARG)
             ___flpack
           ___fldiv (ARG)
             ___flpack
           ___flpack (ARG)
           _frexp (ARG)
         ___flpack (ARG)
         _frexp (ARG)
       ___flmul (ARG)
         ___awtofl (ARG)
           ___flpack
         ___fldiv (ARG)
           ___flpack
         ___flpack (ARG)
         _frexp (ARG)
     ___fltol
       ___fldiv (ARG)
         ___flpack
       _log10 (ARG)
         ___flmul
           ___awtofl (ARG)
             ___flpack
           ___fldiv (ARG)
             ___flpack
           ___flpack (ARG)
           _frexp (ARG)
         _log
           ___awtofl
             ___flpack
           ___fladd
             ___awtofl (ARG)
               ___flpack
             ___flmul (ARG)
               ___awtofl (ARG)
                 ___flpack
               ___fldiv (ARG)
                 ___flpack
               ___flpack (ARG)
               _frexp (ARG)
             ___flpack (ARG)
             _frexp (ARG)
           ___flge
           ___flmul
             ___awtofl (ARG)
               ___flpack
             ___fldiv (ARG)
               ___flpack
             ___flpack (ARG)
             _frexp (ARG)
           _eval_poly
             ___fladd
               ___awtofl (ARG)
                 ___flpack
               ___flmul (ARG)
                 ___awtofl (ARG)
                   ___flpack
                 ___fldiv (ARG)
                   ___flpack
                 ___flpack (ARG)
                 _frexp (ARG)
               ___flpack (ARG)
               _frexp (ARG)
             ___flmul
               ___awtofl (ARG)
                 ___flpack
               ___fldiv (ARG)
                 ___flpack
               ___flpack (ARG)
               _frexp (ARG)
           _frexp
     ___lwtofl
       ___flpack
       _measure_freq (ARG)
         _format_number
           ___lwdiv
           ___lwmod
           _format_putchar *
           _lcd_putch *
             _lcd_send
               _lcd_write4bits
           _output_putch *
             _lcd_putch
               _lcd_send
                 _lcd_write4bits
         _lcd_gotoxy
           _lcd_command
             _lcd_send
               _lcd_write4bits
         _put_str
           _output_putch
             _lcd_putch
               _lcd_send
                 _lcd_write4bits
         _timer0_read_ps
     _lcd_gotoxy
       _lcd_command
         _lcd_send
           _lcd_write4bits
     _measure_freq
       _format_number
         ___lwdiv
         ___lwmod
         _format_putchar *
         _lcd_putch *
           _lcd_send
             _lcd_write4bits
         _output_putch *
           _lcd_putch
             _lcd_send
               _lcd_write4bits
       _lcd_gotoxy
         _lcd_command
           _lcd_send
             _lcd_write4bits
       _put_str
         _output_putch
           _lcd_putch
             _lcd_send
               _lcd_write4bits
       _timer0_read_ps
     _print_reading
       ___lwdiv
       ___lwmod
       _format_number
         ___lwdiv
         ___lwmod
         _format_putchar *
         _lcd_putch *
           _lcd_send
             _lcd_write4bits
         _output_putch *
           _lcd_putch
             _lcd_send
               _lcd_write4bits
       _lcd_gotoxy
         _lcd_command
           _lcd_send
             _lcd_write4bits
       _lcd_puts
         _lcd_putch
           _lcd_send
             _lcd_write4bits
     _print_unit
       _lcd_gotoxy
         _lcd_command
           _lcd_send
             _lcd_write4bits
       _uart_puts
         _uart_putch
     _put_str
       _output_putch
         _lcd_putch
           _lcd_send
             _lcd_write4bits
   _measure_inductance
     ___fldiv
       ___flpack
     ___flge
     ___flmul
       ___awtofl (ARG)
         ___flpack
       ___fldiv (ARG)
         ___flpack
       ___flpack (ARG)
       _frexp (ARG)
     ___flsub
       ___awtofl (ARG)
         ___flpack
       ___fladd (ARG)
         ___awtofl (ARG)
           ___flpack
         ___flmul (ARG)
           ___awtofl (ARG)
             ___flpack
           ___fldiv (ARG)
             ___flpack
           ___flpack (ARG)
           _frexp (ARG)
         ___flpack (ARG)
         _frexp (ARG)
       ___flmul (ARG)
         ___awtofl (ARG)
           ___flpack
         ___fldiv (ARG)
           ___flpack
         ___flpack (ARG)
         _frexp (ARG)
     ___fltol
       ___fldiv (ARG)
         ___flpack
       _log10 (ARG)
         ___flmul
           ___awtofl (ARG)
             ___flpack
           ___fldiv (ARG)
             ___flpack
           ___flpack (ARG)
           _frexp (ARG)
         _log
           ___awtofl
             ___flpack
           ___fladd
             ___awtofl (ARG)
               ___flpack
             ___flmul (ARG)
               ___awtofl (ARG)
                 ___flpack
               ___fldiv (ARG)
                 ___flpack
               ___flpack (ARG)
               _frexp (ARG)
             ___flpack (ARG)
             _frexp (ARG)
           ___flge
           ___flmul
             ___awtofl (ARG)
               ___flpack
             ___fldiv (ARG)
               ___flpack
             ___flpack (ARG)
             _frexp (ARG)
           _eval_poly
             ___fladd
               ___awtofl (ARG)
                 ___flpack
               ___flmul (ARG)
                 ___awtofl (ARG)
                   ___flpack
                 ___fldiv (ARG)
                   ___flpack
                 ___flpack (ARG)
                 _frexp (ARG)
               ___flpack (ARG)
               _frexp (ARG)
             ___flmul
               ___awtofl (ARG)
                 ___flpack
               ___fldiv (ARG)
                 ___flpack
               ___flpack (ARG)
               _frexp (ARG)
           _frexp
     ___lwtofl
       ___flpack
       _measure_freq (ARG)
         _format_number
           ___lwdiv
           ___lwmod
           _format_putchar *
           _lcd_putch *
             _lcd_send
               _lcd_write4bits
           _output_putch *
             _lcd_putch
               _lcd_send
                 _lcd_write4bits
         _lcd_gotoxy
           _lcd_command
             _lcd_send
               _lcd_write4bits
         _put_str
           _output_putch
             _lcd_putch
               _lcd_send
                 _lcd_write4bits
         _timer0_read_ps
     _lcd_gotoxy
       _lcd_command
         _lcd_send
           _lcd_write4bits
     _measure_freq
       _format_number
         ___lwdiv
         ___lwmod
         _format_putchar *
         _lcd_putch *
           _lcd_send
             _lcd_write4bits
         _output_putch *
           _lcd_putch
             _lcd_send
               _lcd_write4bits
       _lcd_gotoxy
         _lcd_command
           _lcd_send
             _lcd_write4bits
       _put_str
         _output_putch
           _lcd_putch
             _lcd_send
               _lcd_write4bits
       _timer0_read_ps
     _print_reading
       ___lwdiv
       ___lwmod
       _format_number
         ___lwdiv
         ___lwmod
         _format_putchar *
         _lcd_putch *
           _lcd_send
             _lcd_write4bits
         _output_putch *
           _lcd_putch
             _lcd_send
               _lcd_write4bits
       _lcd_gotoxy
         _lcd_command
           _lcd_send
             _lcd_write4bits
       _lcd_puts
         _lcd_putch
           _lcd_send
             _lcd_write4bits
     _print_unit
       _lcd_gotoxy
         _lcd_command
           _lcd_send
             _lcd_write4bits
       _uart_puts
         _uart_putch
     _put_str
       _output_putch
         _lcd_putch
           _lcd_send
             _lcd_write4bits
   _timer0_init
   _timer2_init
   _uart_init
     _uart_enable
   _uart_puts
     _uart_putch

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60     14      43       9       69.8%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50     44      50       7      100.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     50      50       5      100.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      A       C       1       85.7%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      EF      12        0.0%
ABS                  0      0      EF       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V1.34 build -361300703 
Symbol Table                                                                                   Wed Sep 11 23:29:20 2019

                ___altofl@sign 006F                   ___fldiv@cntr 0034                              pc 0002  
                 ___fldiv@sign 0036                             _F1 00EC                             _F2 00E4  
                           _F3 00E8                             fsr 0004                   ___flpack@arg 0072  
                 ___flpack@exp 0076                    _putchar_ptr 007B                            l528 06DA  
                          l902 11DE                            l817 1564                            l829 1592  
                          l853 0923                            l878 0E9D                            _GIE 005F  
                          _RB2 0032                            _RB3 0033                            _RB4 0034  
                          _RC3 003B                            _RB5 0035                            _RC4 003C  
                          _RB6 0036                            _RB7 0037                            _RC6 003E  
                 __CFG_CPD$OFF 0000                 lcd_begin@lines 0020                            _TX9 04C6  
                          _exp 1015                            _log 02E1                            _isr 1FA3  
                          _pow 039D                            fsr0 0004                            indf 0000  
                 __CFG_FOSC$HS 0000             timer0_read_ps@prev 0020                   ___flmul@cntr 0048  
                 ___flmul@sign 0049                   __CFG_LVP$OFF 0000         __end_of_lcd_write4bits 1800  
                ___flpack@sign 0077                   ___fltol@exp1 00B1                           l3111 1F96  
                         l4003 0422                           l3035 1F4B                           l3141 1F5F  
                         l3109 1F87                           l4009 043C                           l4121 07EC  
                         l4105 07D4                           l2451 0E7E                           l4115 07E6  
                         l3511 1581                           l2543 0F9E                           l3521 1597  
                         l3505 1569                           l4225 069D                           l2529 164D  
                         l2545 0FA3                           l4137 028F                           l4153 1752  
                         l3515 1590                           l3507 156F                           l3611 0964  
                         l2571 0FD7                           l2563 0FC9                           l4139 0133  
                         l4171 1785                           l4331 0D51                           l3517 1586  
                         l3509 1574                           l3701 119D                           l4077 04E7  
                         l4245 12A4                           l2727 059B                           l2751 05C3  
                         l3623 0DEF                           l3535 168D                           l2559 0FC1  
                         l4263 1428                           l4271 1481                           l4327 0D21  
                         l4335 0D7F                           l4415 0794                           l3545 08C4  
                         l3641 0E01                           l3713 14F7                           l2569 0FCD  
                         l4337 0D83                           l4097 07C7                           l4089 07BC  
                         l4417 0799                           l4409 0784                           l2739 05B2  
                         l3555 08DC                           l3619 0DDB                           l3731 1507  
                         l4179 17A6                           l4267 1455                           l4291 09CB  
                         l3573 08FA                           l3549 08CD                           l3653 0E25  
                         l3645 0E17                           l3709 14E3                           l2759 05D6  
                         l3575 0900                           l3567 08EA                           l3809 15D1  
                         l2777 06B3                           l3593 0931                           l3585 0919  
                         l3577 0905                           l3657 0E3B                           l3905 02FB  
                         l3817 05DD                           l3499 1631                           l3819 0529  
                         l3587 091F                           l3579 0909                           l3845 0564  
                         l3829 0532                           l3909 0308                           l3749 1608  
                         l3765 16D8                           l3757 16BA                           l3925 1023  
                         l3847 056C                           l3599 093F                           l3679 11E5  
                         l3935 1044                           l3849 0577                           l3865 15E0  
                         l3873 0F64                           l3689 124C                           l3945 1093  
                         l3891 0F76                           l3787 171D                           l3939 1064  
                         ?_exp 00C0                           l3965 116E                           ?_log 0069  
                         l3799 0894                           l3991 03BA                           l3889 0F5D  
                         l3969 0FE6                           ?_isr 0070                           l3997 03C8  
                         ?_pow 00CF                           STR_2 00E6                           STR_3 00EC  
                         STR_4 00E9                           STR_5 00DA                           STR_6 00E3  
                         STR_7 00DD                           STR_8 00E0                           STR_9 00CE  
                         u3010 17D8                           _T0SE 040C                           u3004 17D0  
                         u3030 17E3                           u2055 0FAC                           u3024 17DB  
                         u3050 17EE                           _CCal 01C7                           u3044 17E6  
                         u2325 05A4                           u3070 162E                           u3064 17F1  
                         u4107 1756                           u2700 1F84                           u2365 05C9  
                         u4117 1769                           u4207 0EDB                           u4127 1774  
                         u2720 1F93                           u4217 0EE6                           u4137 177D  
                         u4307 17FC                           u4227 0EF1                           u4147 178E  
                         u2740 1F9F                           u4237 0EFC                           u4157 179C  
                         u4247 0F07                           u3535 151A                           u4167 17BB  
                         u4257 0F12                           u4177 0EB8                           u4267 0F1D  
                         u4187 0EC5                           _PEIE 005E                           u4277 0F28  
                         u4197 0ED0                           u4287 06D3                           u4297 17F4  
                         u3585 16E1                           u3825 1167                           _RCIE 0465  
                         u3780 107B                           u2990 17CD                           u3790 107C  
                         u3865 041A                           _TMR0 0001                           _TMR2 0011  
                         _TXEN 04C5                           _TXIF 0064                           _bres 01CB  
                         _main 06E1                           btemp 007E                           exp@x 00C0  
                         log@x 0069          __size_of_output_putch 0003                           ltemp 007E  
                         pow@x 00CF                           pow@y 00D3     __end_of_measure_inductance 0DC7  
                         start 000C                           ttemp 007E                           wtemp 007E  
          timer0_read_ps@count 0021              _format_number$169 0045                _timer0_init$124 0020  
              _timer0_init$125 0022                _timer0_init$126 0024                _timer0_init$127 0026  
          lcd_write4bits@value 0073                   lcd_send@mode 0074                          ??_exp 007A  
                        ??_log 007A                          ??_isr 0070                          ??_pow 007A  
                ___fltol@sign1 00B0                __end_of___fladd 097C                          ?_main 0070  
              __end_of___fldiv 1548                __end_of___flneg 16AF                          STR_10 00BF  
                        STR_11 00D6                          STR_20 00CE                          STR_12 00C1  
                        STR_13 00B4                          STR_21 0082                          STR_22 00CE  
                        STR_14 00CB                          STR_23 00C5                          STR_15 00BE  
                        STR_24 00AA                          STR_25 0091                  __CFG_WDTE$OFF 0000  
                        STR_18 00D1                          STR_19 009E                __end_of___flmul 0E5F  
              __end_of___flsub 1624                __end_of___fltol 0FE6                          _CMCON 009C  
              __end_of___lwdiv 05B7                          i1l260 1FF9                __end_of___lwmod 05DB  
                        _RCSTA 0018               lcd_begin@dotsize 0077                          _SPBRG 0099  
                        _PORTC 0007                          _TRISA 0085                          _TRISC 0087  
                        _SSPEN 00A5                          _TXREG 0019                          _TXSTA 0098  
                ___awtofl@sign 0078                          _nRBPU 040F                          _log10 0296  
                        _blink 019C                          _floor 11B1                          _ldexp 16AF  
                        _frexp 163C                   _output_putch 15FD                ?_lcd_write4bits 0070  
                        _msecs 0190                          fpbase 0105                 __CFG_BOREN$OFF 0000  
                        pclath 000A                          ltemp0 007E                          ltemp1 0082  
                        ltemp2 0086                          ltemp3 0080                          pow@yi 00E0  
              format_number@di 0047                          ttemp0 007E                          ttemp1 0081  
                        ttemp2 0084                          ttemp3 0087                          ttemp4 007F  
                        status 0003                __end_of_put_str 15FD                          wtemp0 007E  
                        wtemp1 0080                          wtemp2 0082                          wtemp3 0084  
                        wtemp4 0086                          wtemp5 0088                          wtemp6 007F  
              ??_print_reading 007A                    exp@exponent 00CC                    ldexp@newexp 006D  
              __initialization 000F                format_putchar@c 0077                    log@exponent 006D  
                 __end_of_main 07B2               format_double@num 01B3                  lcd_gotoxy@col 0020  
                lcd_gotoxy@row 0077                  ?_measure_freq 0049         __size_of_format_double 0187  
                       ??_main 007A                  lcd_send@value 0075            format_double@weight 01BF  
       __size_of_format_number 0064            lcd_init@fourbitmode 0072                         ?_log10 00A0  
                       ?_floor 00B6                         ?_ldexp 0069                         ?_frexp 0072  
             __end_of___altofl 16A6               __end_of___flpack 15AA               __end_of___awtofl 11B1  
             __end_of___lltofl 04D5                         i1l3401 1FDF                         i1l3409 1FF6  
                       _INTCON 000B               __end_of___lwtofl 155B                         u294_20 1FCD  
                       u295_24 1FD0                         _TMR0IF 005A                         _TMR2IE 0461  
                       _TMR2IF 0061                         _TMR2ON 0092             entry__output_putch 0106  
                       _TRISB2 0432                         _TRISB3 0433                         _TRISB4 0434  
                       _TRISC3 043B                         _TRISB5 0435                         _TRISB6 0436  
                       _TRISB7 0437                         _TRISC6 043E                         _TRISC7 043F  
             __end_of__fptable 010F               __end_of_lcd_init 1F73           __size_of_lcd_command 0003  
             __end_of_lcd_send 1638                         ___flge 0E5F               __end_of_lcd_puts 05F8  
                    ??___fladd 0052                      ??___fldiv 002C                      ??___flneg 0076  
                    ??___flmul 003F                      ??___flsub 0079                      ??___fltol 00AC  
                 ?_timer0_init 0070                 ??_measure_freq 004B                      ??___lwdiv 0076  
                 ?_timer2_init 0070                      ??___lwmod 0076                         _buffer 01A1  
                       log10@x 00A0                   ?_uart_enable 0070                         floor@i 00BA  
                       floor@x 00B6                         fptable 0100                   __pdataCOMMON 007B  
                       fptotal 0006             timer2_init@ps_mode 0073                         saved_w 007E  
             format_number@buf 0024               format_number@pad 0023        _measure_inductance$1051 00BA  
      _measure_inductance$1052 00CB        _measure_inductance$1053 00CF        _measure_inductance$1054 00D3  
      _measure_inductance$1055 00BE        _measure_inductance$1056 00C2        _measure_inductance$1057 00C6  
                    ??_put_str 0078                     ___fladd@f1 004A                     ___fladd@f2 004E  
                   ___flge@ff1 0072                     ___flge@ff2 0076               __end_ofexp@coeff 005E  
                _format_double 010F               __end_oflog@coeff 0082                     ___altofl@c 00B2  
                   ___fldiv@f1 0028                     ___fldiv@f2 0024                     ___fldiv@f3 0030  
      __end_of__initialization 002C                     ___flneg@f1 0072                  _format_number 0529  
                   ___flmul@f1 0037                     ___flmul@f2 003B                   eval_poly@res 0065  
                   ___flsub@f1 005D                     ___flsub@f2 0059                     ___fltol@f1 00A8  
                   ___awtofl@c 0024         measure_capacitance@Cin 00C1   __size_of_measure_capacitance 0278  
       measure_capacitance@var 00BF          lcd_gotoxy@row_offsets 0021                 __pcstackCOMMON 0070  
           __size_of_calibrate 00B9                   __pidataBANK3 0000                     ___lltofl@c 0024  
           __size_of_delay10ms 0001                  __end_of_log10 02E1                  __end_of_floor 1257  
                __end_of_ldexp 1740                  __end_of_frexp 167A                     ___lwtofl@c 004F  
           __size_of_lcd_begin 0086             __size_of_lcd_clear 0010                        ??_log10 007A  
           __size_of_lcd_putch 0004                        ??_floor 007A                        ??_ldexp 00A0  
                      ??_frexp 0077                     _log10$1058 00A4                     __pbssBANK1 00E4  
               ?_format_double 01B3                     __pbssBANK3 0190             __size_of_eval_poly 008D  
           __size_of_indicator 0014        __size_of_format_putchar 0001              fp__format_putchar 010C  
               ?_format_number 0020                 print_unit@unit 0070                entry__lcd_putch 0109  
                   __pmaintext 06E1                        ?___flge 0072                     __pintentry 0004  
                    ?___altofl 00B2        __size_of_timer0_read_ps 003A                      ?___flpack 0072  
                    ?___awtofl 0024                      ?___lltofl 0024             _measure_inductance 097C  
                      _T2CKPS0 0090                        _T2CKPS1 0091                      ?___lwtofl 004F  
           __size_of_uart_init 000E               ??_lcd_write4bits 0072             __size_of_uart_puts 0017  
                   _lcd_gotoxy 15AA            ?_measure_inductance 0070              __end_of_calibrate 06B1  
                    ?_lcd_init 0070                      ?_lcd_send 0074                        _TOUTPS0 0093  
                      _TOUTPS1 0094                        _TOUTPS2 0095              __end_of_delay10ms 06B2  
                    ?_lcd_puts 0070                     __stringtab 0030           __end_of_measure_freq 0F55  
                   calibrate@i 0053           ??_measure_inductance 007A              __end_of_lcd_begin 17C6  
            __end_of_lcd_clear 06D9                __size_of___flge 0050                        ___fladd 089D  
            __end_of_lcd_putch 163C                        ___fldiv 14CF                        ___flneg 16A6  
                      ___flmul 0DC7                        ___flsub 1600                        ___fltol 0F8F  
                      ___lwdiv 058D                        ___lwmod 05B7                     ??___altofl 007A  
                   ??___flpack 0020                        _exp$786 00C8                     ??___awtofl 0078  
            __end_of_eval_poly 089D              __end_of_indicator 04E9           __size_of_timer0_init 0040  
                   ??___lltofl 0078                        __ptext1 1F3D                        __ptext2 1F4B  
                      __ptext3 1F73                        __ptext4 07B2                        __ptext5 097C  
                      __ptext6 1257                        __ptext7 0FE6                        __ptext8 04E9  
                      __ptext9 1F56           __size_of_timer2_init 0030                     ??___lwtofl 007A  
                 __size_of_exp 017F                   __size_of_log 00BC                   __size_of_isr 005D  
                 __size_of_pow 0121           __size_of_uart_enable 000B                        _seconds 0194  
               lcd_putch@value 0077                ??_format_double 007A                        _put_str 15DB  
                      clrloop0 07F3                     ??_lcd_init 0072                     ??_lcd_send 0075  
                   ??_lcd_puts 0078           end_of_initialization 002C                ??_format_number 0079  
                      exp@sign 00CE                      _LCD_lines 019F                   _lcd_init$338 0073  
               lcd_puts@string 0079              __end_of_uart_init 1F4B              __end_of_uart_puts 06C9  
                      pow@sign 00DF  measure_inductance@denominator 00B6          __end_of_print_reading 0529  
            format_number@base 0022                     _uart_putch 06D9                     _print_unit 0FE6  
          _measure_capacitance 1257                    ?_lcd_gotoxy 0077                    ___fldiv@exp 0035  
               _format_putchar 07FA                    ___flmul@exp 0043                  ??_lcd_command 0076  
         ?_measure_capacitance 0070        measure_capacitance@unit 00BE                 format_double@m 01C5  
       measure_inductance@unit 00CA                 __end_of___flge 0EAF                 _timer0_read_ps 0F55  
                __pidataCOMMON 0000                lcd_gotoxy@F1126 01CF                     floor@expon 00BE  
              fp__output_putch 0106                 format_number@i 0048                 format_number@n 0020  
          start_initialization 000F                     eval_poly@d 005D                     eval_poly@n 005E  
                   eval_poly@x 0059          __size_of_measure_freq 00A6                     ldexp@value 0069  
                  __end_of_exp 1194                    __end_of_log 039D                    __end_of_isr 2000  
                  __end_of_pow 04BE                   _LCD_function 007A         __end_of_format_putchar 07FB  
           format_double@digit 01C3                     frexp@value 0072          ??_measure_capacitance 007A  
       __end_of_timer0_read_ps 0F8F                       ??___flge 0020            __size_of_lcd_gotoxy 0031  
          __end_of_lcd_command 1627                    __pdataBANK3 01CF                   _measure_freq 0EAF  
                  ?_uart_putch 0070       print_reading@measurement 0049              __size_of___altofl 002C  
            __size_of___flpack 004F              __size_of___awtofl 001D                    ?_print_unit 0070  
            __size_of___lltofl 0017                    __pbssCOMMON 007A                      ___latbits 0002  
            __size_of___lwtofl 0013                  __pcstackBANK0 0020                  __pcstackBANK1 00A0  
                __pcstackBANK3 01B3              __size_of__fptable 000F                  ?_output_putch 0077  
              ?_format_putchar 0077              measure_freq@count 004D               lcd_command@value 0076  
            __size_of_lcd_init 001D              __size_of_lcd_send 0011                      _calibrate 05F8  
            __size_of_lcd_puts 001D                      _delay10ms 06B1                      __pnvBANK3 01C7  
             ___lwdiv@dividend 0074                      __pfunctab 0100                ?_timer0_read_ps 0072  
                     ?___fladd 004A                       ?___fldiv 0024                       ?___flneg 0072  
                     ?___flmul 0037                       ?___flsub 0059                       ?___fltol 00A8  
                     ?___lwdiv 0072                       ?___lwmod 0072                      _lcd_begin 1740  
                    _lcd_clear 06C9                      __pstrings 0030                      _ldexp$686 00A2  
                    _lcd_putch 1638                      _eval_poly 0810                  output_putch@c 0077  
                    _indicator 04D5                 ??_output_putch 0078               ___lwdiv@quotient 0076  
               __size_of_log10 004B                       ?_put_str 0070                 __size_of_floor 00A6  
               __size_of_ldexp 0091                 __size_of_frexp 003E              interrupt_function 0004  
                   ?_calibrate 0070            __size_of_uart_putch 0008                     ?_delay10ms 0070  
                     _LCD_ctrl 019E                       _LCD_mode 01A0                      clear_ram0 07F2  
                  _lcd_command 1624            __size_of_print_unit 001A    __size_of_measure_inductance 044B  
                    _uart_init 1F3D                  ??_timer0_init 0072                  ??_timer2_init 0072  
                    _uart_puts 06B2              indicator@indicate 0025                     ?_lcd_begin 0077  
                   ?_lcd_clear 0070                     uart_puts@s 0073                  ??_uart_enable 0072  
                   ?_lcd_putch 0077                    __stringbase 0035                     ?_eval_poly 0059  
                   ?_indicator 0070                      lcd_puts@i 0078                   ??_lcd_gotoxy 0078  
        measure_inductance@Lin 00D9          measure_inductance@var 00D7          __end_of_format_double 0296  
         format_number@padchar 0044        __size_of_lcd_write4bits 003A          __end_of_format_number 058D  
                    frexp@eptr 0076                     ?_uart_init 0070                     ?_uart_puts 0070  
           __end_of_lcd_gotoxy 15DB               __size_of___fladd 00DF               __size_of___fldiv 0079  
             __size_of___flneg 0009               __size_of___flmul 0098               __size_of___flsub 0024  
             __size_of___fltol 0057                       ___altofl 167A                       ___flpack 155B  
             __size_of___lwdiv 002A               __size_of___lwmod 0024                       ___awtofl 1194  
           __end_of__stringtab 0036                       ___lltofl 04BE                  timer2_init@ps 0074  
                     ___lwtofl 1548            __end_of_timer0_init 07F2                       _exp$1061 00C4  
          __end_of_timer2_init 1FA3                       __fptable 0100                ___lwdiv@divisor 0072  
              ___lwdiv@counter 0078         __size_of_print_reading 0040           timer0_init@prescaler 0028  
          __end_of_uart_enable 1F56                       __ptext10 1740                       __ptext11 04D5  
                     __ptext20 167A                       __ptext12 05DB                       __ptext21 1600  
                     __ptext13 010F                       __ptext30 0E5F                       __ptext22 14CF  
                     __ptext14 039D                       __ptext31 1194                       __ptext23 04BE  
                     __ptext15 1015                       __ptext40 07FA                       __ptext32 05F8  
                     __ptext24 0296                       __ptext16 16AF                       __ptext41 1638  
                     __ptext33 06B2                       __ptext25 02E1                       __ptext17 16A6  
                     __ptext50 1548                       __ptext42 15FD                       __ptext34 06D9  
                     __ptext26 163C                       __ptext18 11B1                       __ptext51 155B  
                     __ptext43 05B7                       __ptext35 0EAF                       __ptext27 0810  
                     __ptext19 0F8F                       __ptext52 1FA3                       __ptext44 058D  
                     __ptext36 0F55                       __ptext28 0DC7                       __ptext45 06C9  
                     __ptext37 15DB                       __ptext29 089D                       __ptext46 1624  
                     __ptext38 15AA                       __ptext47 1627                       __ptext39 0529  
                     __ptext48 17C6                       __ptext49 06B1                       _lcd_init 1F56  
                     _lcd_send 1627                       _pow$1060 00DB                       _pow$1059 00D7  
                     _lcd_puts 05DB               __size_of_put_str 0022                    ??_calibrate 007A  
                __size_of_main 00D1                    ??_delay10ms 0072                       _msecpart 01CD  
                     _timer1of 0198           __end_of_output_putch 1600                    ??_lcd_begin 0078  
                  ??_lcd_clear 0077                   ??_uart_putch 0072                    ??_lcd_putch 0077  
                     exp@coeff 0036          ___flmul@f3_as_product 0044                       log@coeff 005E  
  measure_inductance@numerator 00B2               ??_format_putchar 0078                   ??_print_unit 0078  
                  ??_eval_poly 0060                    ??_indicator 007A             _print_reading$1042 004B  
           _print_reading$1043 004D                       intlevel1 0100    __end_of_measure_capacitance 14CF  
             ___lwmod@dividend 0074               ??_timer0_read_ps 0074             __end_of_uart_putch 06E1  
                    stringcode 0030             __end_of_print_unit 1000                  _print_reading 04E9  
                  ??_uart_init 0072                    ??_uart_puts 0073           delay10ms@period_10ms 0070  
                  _timer0_init 07B2                    _timer2_init 1F73             _format_double$1046 01B7  
           _format_double$1047 01BB       _measure_capacitance$1050 00BA       _measure_capacitance$1048 00B2  
     _measure_capacitance$1049 00B6                       put_str@i 0020                       put_str@s 0022  
                  _uart_enable 1F4B                     _OPTION_REG 0081             timer0_init@ps_mode 0029  
              ___lwmod@divisor 0072                ___lwmod@counter 0076                       stringdir 0030  
                     stringtab 0030                 uart_putch@byte 0072                 _lcd_write4bits 17C6  
                 ___fladd@exp1 0058                   ___fladd@exp2 0057                   ___fladd@sign 0056  
                 ?_lcd_command 0070                   fp__lcd_putch 0109                 ?_print_reading 0049  
