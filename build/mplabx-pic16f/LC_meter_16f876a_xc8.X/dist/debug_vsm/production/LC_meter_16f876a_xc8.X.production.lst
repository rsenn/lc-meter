

Microchip Technology PIC PRO Macro Assembler V1.34 build -361300703 
                                                                                               Thu Sep 26 08:23:05 2019

Microchip Technology Omniscient Code Generator (PRO mode) build 201502162209
     1                           	processor	16F876A
     2                           	opt	pw 120
     3                           	opt	pm
     4                           	psect	idataBANK3,global,class=CODE,delta=2
     5                           	psect	stringtext,global,reloc=256,class=STRCODE,delta=2
     6                           	psect	nvBANK3,global,class=BANK3,space=1,delta=1
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    10                           	psect	dataBANK3,global,class=BANK3,space=1,delta=1
    11                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    12                           	psect	clrtext,global,class=CODE,delta=2
    13                           	psect	cstackBANK3,global,class=BANK3,space=1,delta=1
    14                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1
    15                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    16                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    17                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    18                           	psect	maintext,global,class=CODE,split=1,delta=2
    19                           	psect	text1,local,class=CODE,merge=1,delta=2
    20                           	psect	text2,local,class=CODE,merge=1,delta=2
    21                           	psect	text3,local,class=CODE,merge=1,delta=2
    22                           	psect	text4,local,class=CODE,merge=1,delta=2
    23                           	psect	text6,local,class=CODE,merge=1,delta=2
    24                           	psect	text7,local,class=CODE,merge=1,delta=2
    25                           	psect	text12,local,class=CODE,merge=1,delta=2
    26                           	psect	text13,local,class=CODE,merge=1,delta=2
    27                           	psect	text14,local,class=CODE,merge=1,delta=2
    28                           	psect	text22,local,class=CODE,merge=1,delta=2
    29                           	psect	text25,local,class=CODE,merge=1,delta=2
    30                           	psect	text30,local,class=CODE,merge=1,delta=2
    31                           	psect	text32,local,class=CODE,merge=1,delta=2
    32                           	psect	text54,local,class=CODE,merge=1,delta=2
    33                           	psect	intentry,global,class=CODE,delta=2
    34                           	psect	pa_nodes,global,class=CODE,delta=2
    35                           	dabs	1,0x7E,2
    36  0000                     	;# 
    37  0001                     	;# 
    38  0002                     	;# 
    39  0003                     	;# 
    40  0004                     	;# 
    41  0005                     	;# 
    42  0006                     	;# 
    43  0007                     	;# 
    44  000A                     	;# 
    45  000B                     	;# 
    46  000C                     	;# 
    47  000D                     	;# 
    48  000E                     	;# 
    49  000E                     	;# 
    50  000F                     	;# 
    51  0010                     	;# 
    52  0011                     	;# 
    53  0012                     	;# 
    54  0013                     	;# 
    55  0014                     	;# 
    56  0015                     	;# 
    57  0015                     	;# 
    58  0016                     	;# 
    59  0017                     	;# 
    60  0018                     	;# 
    61  0019                     	;# 
    62  001A                     	;# 
    63  001B                     	;# 
    64  001B                     	;# 
    65  001C                     	;# 
    66  001D                     	;# 
    67  001E                     	;# 
    68  001F                     	;# 
    69  0081                     	;# 
    70  0085                     	;# 
    71  0086                     	;# 
    72  0087                     	;# 
    73  008C                     	;# 
    74  008D                     	;# 
    75  008E                     	;# 
    76  0091                     	;# 
    77  0092                     	;# 
    78  0093                     	;# 
    79  0094                     	;# 
    80  0098                     	;# 
    81  0099                     	;# 
    82  009C                     	;# 
    83  009D                     	;# 
    84  009E                     	;# 
    85  009F                     	;# 
    86  010C                     	;# 
    87  010D                     	;# 
    88  010E                     	;# 
    89  010F                     	;# 
    90  018C                     	;# 
    91  018D                     	;# 
    92  0000                     	;# 
    93  0001                     	;# 
    94  0002                     	;# 
    95  0003                     	;# 
    96  0004                     	;# 
    97  0005                     	;# 
    98  0006                     	;# 
    99  0007                     	;# 
   100  000A                     	;# 
   101  000B                     	;# 
   102  000C                     	;# 
   103  000D                     	;# 
   104  000E                     	;# 
   105  000E                     	;# 
   106  000F                     	;# 
   107  0010                     	;# 
   108  0011                     	;# 
   109  0012                     	;# 
   110  0013                     	;# 
   111  0014                     	;# 
   112  0015                     	;# 
   113  0015                     	;# 
   114  0016                     	;# 
   115  0017                     	;# 
   116  0018                     	;# 
   117  0019                     	;# 
   118  001A                     	;# 
   119  001B                     	;# 
   120  001B                     	;# 
   121  001C                     	;# 
   122  001D                     	;# 
   123  001E                     	;# 
   124  001F                     	;# 
   125  0081                     	;# 
   126  0085                     	;# 
   127  0086                     	;# 
   128  0087                     	;# 
   129  008C                     	;# 
   130  008D                     	;# 
   131  008E                     	;# 
   132  0091                     	;# 
   133  0092                     	;# 
   134  0093                     	;# 
   135  0094                     	;# 
   136  0098                     	;# 
   137  0099                     	;# 
   138  009C                     	;# 
   139  009D                     	;# 
   140  009E                     	;# 
   141  009F                     	;# 
   142  010C                     	;# 
   143  010D                     	;# 
   144  010E                     	;# 
   145  010F                     	;# 
   146  018C                     	;# 
   147  018D                     	;# 
   148  0000                     	;# 
   149  0001                     	;# 
   150  0002                     	;# 
   151  0003                     	;# 
   152  0004                     	;# 
   153  0005                     	;# 
   154  0006                     	;# 
   155  0007                     	;# 
   156  000A                     	;# 
   157  000B                     	;# 
   158  000C                     	;# 
   159  000D                     	;# 
   160  000E                     	;# 
   161  000E                     	;# 
   162  000F                     	;# 
   163  0010                     	;# 
   164  0011                     	;# 
   165  0012                     	;# 
   166  0013                     	;# 
   167  0014                     	;# 
   168  0015                     	;# 
   169  0015                     	;# 
   170  0016                     	;# 
   171  0017                     	;# 
   172  0018                     	;# 
   173  0019                     	;# 
   174  001A                     	;# 
   175  001B                     	;# 
   176  001B                     	;# 
   177  001C                     	;# 
   178  001D                     	;# 
   179  001E                     	;# 
   180  001F                     	;# 
   181  0081                     	;# 
   182  0085                     	;# 
   183  0086                     	;# 
   184  0087                     	;# 
   185  008C                     	;# 
   186  008D                     	;# 
   187  008E                     	;# 
   188  0091                     	;# 
   189  0092                     	;# 
   190  0093                     	;# 
   191  0094                     	;# 
   192  0098                     	;# 
   193  0099                     	;# 
   194  009C                     	;# 
   195  009D                     	;# 
   196  009E                     	;# 
   197  009F                     	;# 
   198  010C                     	;# 
   199  010D                     	;# 
   200  010E                     	;# 
   201  010F                     	;# 
   202  018C                     	;# 
   203  018D                     	;# 
   204  0000                     	;# 
   205  0001                     	;# 
   206  0002                     	;# 
   207  0003                     	;# 
   208  0004                     	;# 
   209  0005                     	;# 
   210  0006                     	;# 
   211  0007                     	;# 
   212  000A                     	;# 
   213  000B                     	;# 
   214  000C                     	;# 
   215  000D                     	;# 
   216  000E                     	;# 
   217  000E                     	;# 
   218  000F                     	;# 
   219  0010                     	;# 
   220  0011                     	;# 
   221  0012                     	;# 
   222  0013                     	;# 
   223  0014                     	;# 
   224  0015                     	;# 
   225  0015                     	;# 
   226  0016                     	;# 
   227  0017                     	;# 
   228  0018                     	;# 
   229  0019                     	;# 
   230  001A                     	;# 
   231  001B                     	;# 
   232  001B                     	;# 
   233  001C                     	;# 
   234  001D                     	;# 
   235  001E                     	;# 
   236  001F                     	;# 
   237  0081                     	;# 
   238  0085                     	;# 
   239  0086                     	;# 
   240  0087                     	;# 
   241  008C                     	;# 
   242  008D                     	;# 
   243  008E                     	;# 
   244  0091                     	;# 
   245  0092                     	;# 
   246  0093                     	;# 
   247  0094                     	;# 
   248  0098                     	;# 
   249  0099                     	;# 
   250  009C                     	;# 
   251  009D                     	;# 
   252  009E                     	;# 
   253  009F                     	;# 
   254  010C                     	;# 
   255  010D                     	;# 
   256  010E                     	;# 
   257  010F                     	;# 
   258  018C                     	;# 
   259  018D                     	;# 
   260  0000                     	;# 
   261  0001                     	;# 
   262  0002                     	;# 
   263  0003                     	;# 
   264  0004                     	;# 
   265  0005                     	;# 
   266  0006                     	;# 
   267  0007                     	;# 
   268  000A                     	;# 
   269  000B                     	;# 
   270  000C                     	;# 
   271  000D                     	;# 
   272  000E                     	;# 
   273  000E                     	;# 
   274  000F                     	;# 
   275  0010                     	;# 
   276  0011                     	;# 
   277  0012                     	;# 
   278  0013                     	;# 
   279  0014                     	;# 
   280  0015                     	;# 
   281  0015                     	;# 
   282  0016                     	;# 
   283  0017                     	;# 
   284  0018                     	;# 
   285  0019                     	;# 
   286  001A                     	;# 
   287  001B                     	;# 
   288  001B                     	;# 
   289  001C                     	;# 
   290  001D                     	;# 
   291  001E                     	;# 
   292  001F                     	;# 
   293  0081                     	;# 
   294  0085                     	;# 
   295  0086                     	;# 
   296  0087                     	;# 
   297  008C                     	;# 
   298  008D                     	;# 
   299  008E                     	;# 
   300  0091                     	;# 
   301  0092                     	;# 
   302  0093                     	;# 
   303  0094                     	;# 
   304  0098                     	;# 
   305  0099                     	;# 
   306  009C                     	;# 
   307  009D                     	;# 
   308  009E                     	;# 
   309  009F                     	;# 
   310  010C                     	;# 
   311  010D                     	;# 
   312  010E                     	;# 
   313  010F                     	;# 
   314  018C                     	;# 
   315  018D                     	;# 
   316  0000                     	;# 
   317  0001                     	;# 
   318  0002                     	;# 
   319  0003                     	;# 
   320  0004                     	;# 
   321  0005                     	;# 
   322  0006                     	;# 
   323  0007                     	;# 
   324  000A                     	;# 
   325  000B                     	;# 
   326  000C                     	;# 
   327  000D                     	;# 
   328  000E                     	;# 
   329  000E                     	;# 
   330  000F                     	;# 
   331  0010                     	;# 
   332  0011                     	;# 
   333  0012                     	;# 
   334  0013                     	;# 
   335  0014                     	;# 
   336  0015                     	;# 
   337  0015                     	;# 
   338  0016                     	;# 
   339  0017                     	;# 
   340  0018                     	;# 
   341  0019                     	;# 
   342  001A                     	;# 
   343  001B                     	;# 
   344  001B                     	;# 
   345  001C                     	;# 
   346  001D                     	;# 
   347  001E                     	;# 
   348  001F                     	;# 
   349  0081                     	;# 
   350  0085                     	;# 
   351  0086                     	;# 
   352  0087                     	;# 
   353  008C                     	;# 
   354  008D                     	;# 
   355  008E                     	;# 
   356  0091                     	;# 
   357  0092                     	;# 
   358  0093                     	;# 
   359  0094                     	;# 
   360  0098                     	;# 
   361  0099                     	;# 
   362  009C                     	;# 
   363  009D                     	;# 
   364  009E                     	;# 
   365  009F                     	;# 
   366  010C                     	;# 
   367  010D                     	;# 
   368  010E                     	;# 
   369  010F                     	;# 
   370  018C                     	;# 
   371  018D                     	;# 
   372  0000                     	;# 
   373  0001                     	;# 
   374  0002                     	;# 
   375  0003                     	;# 
   376  0004                     	;# 
   377  0005                     	;# 
   378  0006                     	;# 
   379  0007                     	;# 
   380  000A                     	;# 
   381  000B                     	;# 
   382  000C                     	;# 
   383  000D                     	;# 
   384  000E                     	;# 
   385  000E                     	;# 
   386  000F                     	;# 
   387  0010                     	;# 
   388  0011                     	;# 
   389  0012                     	;# 
   390  0013                     	;# 
   391  0014                     	;# 
   392  0015                     	;# 
   393  0015                     	;# 
   394  0016                     	;# 
   395  0017                     	;# 
   396  0018                     	;# 
   397  0019                     	;# 
   398  001A                     	;# 
   399  001B                     	;# 
   400  001B                     	;# 
   401  001C                     	;# 
   402  001D                     	;# 
   403  001E                     	;# 
   404  001F                     	;# 
   405  0081                     	;# 
   406  0085                     	;# 
   407  0086                     	;# 
   408  0087                     	;# 
   409  008C                     	;# 
   410  008D                     	;# 
   411  008E                     	;# 
   412  0091                     	;# 
   413  0092                     	;# 
   414  0093                     	;# 
   415  0094                     	;# 
   416  0098                     	;# 
   417  0099                     	;# 
   418  009C                     	;# 
   419  009D                     	;# 
   420  009E                     	;# 
   421  009F                     	;# 
   422  010C                     	;# 
   423  010D                     	;# 
   424  010E                     	;# 
   425  010F                     	;# 
   426  018C                     	;# 
   427  018D                     	;# 
   428  0000                     	;# 
   429  0001                     	;# 
   430  0002                     	;# 
   431  0003                     	;# 
   432  0004                     	;# 
   433  0005                     	;# 
   434  0006                     	;# 
   435  0007                     	;# 
   436  000A                     	;# 
   437  000B                     	;# 
   438  000C                     	;# 
   439  000D                     	;# 
   440  000E                     	;# 
   441  000E                     	;# 
   442  000F                     	;# 
   443  0010                     	;# 
   444  0011                     	;# 
   445  0012                     	;# 
   446  0013                     	;# 
   447  0014                     	;# 
   448  0015                     	;# 
   449  0015                     	;# 
   450  0016                     	;# 
   451  0017                     	;# 
   452  0018                     	;# 
   453  0019                     	;# 
   454  001A                     	;# 
   455  001B                     	;# 
   456  001B                     	;# 
   457  001C                     	;# 
   458  001D                     	;# 
   459  001E                     	;# 
   460  001F                     	;# 
   461  0081                     	;# 
   462  0085                     	;# 
   463  0086                     	;# 
   464  0087                     	;# 
   465  008C                     	;# 
   466  008D                     	;# 
   467  008E                     	;# 
   468  0091                     	;# 
   469  0092                     	;# 
   470  0093                     	;# 
   471  0094                     	;# 
   472  0098                     	;# 
   473  0099                     	;# 
   474  009C                     	;# 
   475  009D                     	;# 
   476  009E                     	;# 
   477  009F                     	;# 
   478  010C                     	;# 
   479  010D                     	;# 
   480  010E                     	;# 
   481  010F                     	;# 
   482  018C                     	;# 
   483  018D                     	;# 
   484                           
   485                           	psect	idataBANK3
   486  0000                     __pidataBANK3:	
   487                           
   488                           	psect	stringtext
   489  1800                     __pstringtext:	
   490  1800                     stringtab:	
   491  1800                     __stringtab:	
   492                           
   493                           ;	String table - string pointers are 2 bytes each
   494  1800  1BFF               	btfsc	btemp+1,7
   495  1801  280A               	ljmp	stringcode
   496  1802  1383               	bcf	3,7
   497  1803  187F               	btfsc	btemp+1,0
   498  1804  1783               	bsf	3,7
   499  1805  0800               	movf	0,w
   500  1806  0A84               	incf	4,f
   501  1807  1903               	skipnz
   502  1808  0AFF               	incf	btemp+1,f
   503  1809  0008               	return
   504  180A                     stringcode:	
   505  180A  087F               	movf	btemp+1,w
   506  180B  397F               	andlw	127
   507  180C  008A               	movwf	10
   508  180D  0804               	movf	4,w
   509  180E  0A84               	incf	4,f
   510  180F  1903               	skipnz
   511  1810  0AFF               	incf	btemp+1,f
   512  1811  0082               	movwf	2
   513  1812                     __stringbase:	
   514  1812                     __end_of__stringtab:	
   515  1812                     exp@coeff:	
   516  1812  3400               	retlw	0
   517  1813  3400               	retlw	0
   518  1814  3480               	retlw	128
   519  1815  343F               	retlw	63
   520  1816  3418               	retlw	24
   521  1817  3472               	retlw	114
   522  1818  3431               	retlw	49
   523  1819  343F               	retlw	63
   524  181A  34F0               	retlw	240
   525  181B  34FD               	retlw	253
   526  181C  3475               	retlw	117
   527  181D  343E               	retlw	62
   528  181E  3447               	retlw	71
   529  181F  3458               	retlw	88
   530  1820  3463               	retlw	99
   531  1821  343D               	retlw	61
   532  1822  3458               	retlw	88
   533  1823  3495               	retlw	149
   534  1824  341D               	retlw	29
   535  1825  343C               	retlw	60
   536  1826  3482               	retlw	130
   537  1827  34C4               	retlw	196
   538  1828  34AE               	retlw	174
   539  1829  343A               	retlw	58
   540  182A  34A8               	retlw	168
   541  182B  3478               	retlw	120
   542  182C  3421               	retlw	33
   543  182D  3439               	retlw	57
   544  182E  34EF               	retlw	239
   545  182F  3493               	retlw	147
   546  1830  3480               	retlw	128
   547  1831  3437               	retlw	55
   548  1832  34A0               	retlw	160
   549  1833  3492               	retlw	146
   550  1834  34A7               	retlw	167
   551  1835  3435               	retlw	53
   552  1836  3446               	retlw	70
   553  1837  3456               	retlw	86
   554  1838  3415               	retlw	21
   555  1839  3434               	retlw	52
   556  183A                     __end_ofexp@coeff:	
   557  183A                     log@coeff:	
   558  183A  3400               	retlw	0
   559  183B  3400               	retlw	0
   560  183C  3400               	retlw	0
   561  183D  3400               	retlw	0
   562  183E  34C4               	retlw	196
   563  183F  34FF               	retlw	255
   564  1840  347F               	retlw	127
   565  1841  343F               	retlw	63
   566  1842  3480               	retlw	128
   567  1843  34EF               	retlw	239
   568  1844  34FF               	retlw	255
   569  1845  34BE               	retlw	190
   570  1846  3490               	retlw	144
   571  1847  34E1               	retlw	225
   572  1848  34A9               	retlw	169
   573  1849  343E               	retlw	62
   574  184A  34EC               	retlw	236
   575  184B  3482               	retlw	130
   576  184C  3476               	retlw	118
   577  184D  34BE               	retlw	190
   578  184E  3482               	retlw	130
   579  184F  34AD               	retlw	173
   580  1850  342B               	retlw	43
   581  1851  343E               	retlw	62
   582  1852  340E               	retlw	14
   583  1853  343C               	retlw	60
   584  1854  34C3               	retlw	195
   585  1855  34BD               	retlw	189
   586  1856  3487               	retlw	135
   587  1857  34D1               	retlw	209
   588  1858  3413               	retlw	19
   589  1859  343D               	retlw	61
   590  185A  3441               	retlw	65
   591  185B  3478               	retlw	120
   592  185C  34D3               	retlw	211
   593  185D  34BB               	retlw	187
   594  185E                     __end_oflog@coeff:	
   595  185E                     STR_15:	
   596  185E  342D               	retlw	45	;'-'
   597  185F  3420               	retlw	32	;' '
   598  1860  3443               	retlw	67	;'C'
   599  1861  3420               	retlw	32	;' '
   600  1862  3428               	retlw	40	;'('
   601  1863  3455               	retlw	85	;'U'
   602  1864  346E               	retlw	110	;'n'
   603  1865  3469               	retlw	105	;'i'
   604  1866  3474               	retlw	116	;'t'
   605  1867  343A               	retlw	58	;':'
   606  1868  3420               	retlw	32	;' '
   607  1869  3446               	retlw	70	;'F'
   608  186A  3429               	retlw	41	;')'
   609  186B  3420               	retlw	32	;' '
   610  186C  342D               	retlw	45	;'-'
   611  186D  3400               	retlw	0
   612  186E                     STR_16:	
   613  186E  342D               	retlw	45	;'-'
   614  186F  3420               	retlw	32	;' '
   615  1870  344C               	retlw	76	;'L'
   616  1871  3420               	retlw	32	;' '
   617  1872  3428               	retlw	40	;'('
   618  1873  3455               	retlw	85	;'U'
   619  1874  346E               	retlw	110	;'n'
   620  1875  3469               	retlw	105	;'i'
   621  1876  3474               	retlw	116	;'t'
   622  1877  343A               	retlw	58	;':'
   623  1878  3420               	retlw	32	;' '
   624  1879  3448               	retlw	72	;'H'
   625  187A  3429               	retlw	41	;')'
   626  187B  3420               	retlw	32	;' '
   627  187C  342D               	retlw	45	;'-'
   628  187D  3400               	retlw	0
   629  187E                     STR_25:	
   630  187E  3470               	retlw	112	;'p'
   631  187F  346C               	retlw	108	;'l'
   632  1880  3465               	retlw	101	;'e'
   633  1881  3461               	retlw	97	;'a'
   634  1882  3473               	retlw	115	;'s'
   635  1883  3465               	retlw	101	;'e'
   636  1884  3420               	retlw	32	;' '
   637  1885  3477               	retlw	119	;'w'
   638  1886  3461               	retlw	97	;'a'
   639  1887  3469               	retlw	105	;'i'
   640  1888  3474               	retlw	116	;'t'
   641  1889  342E               	retlw	46	;'.'
   642  188A  342E               	retlw	46	;'.'
   643  188B  342E               	retlw	46	;'.'
   644  188C  3400               	retlw	0
   645  188D                     STR_37:	
   646  188D  3449               	retlw	73	;'I'
   647  188E  346E               	retlw	110	;'n'
   648  188F  3464               	retlw	100	;'d'
   649  1890  3475               	retlw	117	;'u'
   650  1891  3463               	retlw	99	;'c'
   651  1892  3474               	retlw	116	;'t'
   652  1893  3469               	retlw	105	;'i'
   653  1894  3476               	retlw	118	;'v'
   654  1895  3469               	retlw	105	;'i'
   655  1896  3474               	retlw	116	;'t'
   656  1897  3479               	retlw	121	;'y'
   657  1898  3420               	retlw	32	;' '
   658  1899  3400               	retlw	0
   659  189A                     STR_23:	
   660  189A  3443               	retlw	67	;'C'
   661  189B  3461               	retlw	97	;'a'
   662  189C  346C               	retlw	108	;'l'
   663  189D  3469               	retlw	105	;'i'
   664  189E  3462               	retlw	98	;'b'
   665  189F  3472               	retlw	114	;'r'
   666  18A0  3461               	retlw	97	;'a'
   667  18A1  3474               	retlw	116	;'t'
   668  18A2  3469               	retlw	105	;'i'
   669  18A3  346E               	retlw	110	;'n'
   670  18A4  3467               	retlw	103	;'g'
   671  18A5  3400               	retlw	0
   672  18A6                     STR_28:	
   673  18A6  3443               	retlw	67	;'C'
   674  18A7  3461               	retlw	97	;'a'
   675  18A8  3470               	retlw	112	;'p'
   676  18A9  3461               	retlw	97	;'a'
   677  18AA  3463               	retlw	99	;'c'
   678  18AB  3469               	retlw	105	;'i'
   679  18AC  3474               	retlw	116	;'t'
   680  18AD  3479               	retlw	121	;'y'
   681  18AE  3420               	retlw	32	;' '
   682  18AF  3400               	retlw	0
   683  18B0                     STR_14:	
   684  18B0  344C               	retlw	76	;'L'
   685  18B1  3443               	retlw	67	;'C'
   686  18B2  342D               	retlw	45	;'-'
   687  18B3  346D               	retlw	109	;'m'
   688  18B4  3465               	retlw	101	;'e'
   689  18B5  3474               	retlw	116	;'t'
   690  18B6  3465               	retlw	101	;'e'
   691  18B7  3472               	retlw	114	;'r'
   692  18B8  3420               	retlw	32	;' '
   693  18B9  3400               	retlw	0
   694  18BA                     STR_33:	
   695  18BA  340D               	retlw	13
   696  18BB  340A               	retlw	10
   697  18BC  3443               	retlw	67	;'C'
   698  18BD  3443               	retlw	67	;'C'
   699  18BE  3461               	retlw	97	;'a'
   700  18BF  346C               	retlw	108	;'l'
   701  18C0  343D               	retlw	61	;'='
   702  18C1  3400               	retlw	0
   703  18C2                     STR_18:	
   704  18C2  3420               	retlw	32	;' '
   705  18C3  3420               	retlw	32	;' '
   706  18C4  3420               	retlw	32	;' '
   707  18C5  3420               	retlw	32	;' '
   708  18C6  3420               	retlw	32	;' '
   709  18C7  3420               	retlw	32	;' '
   710  18C8  3400               	retlw	0
   711  18C9                     STR_30:	
   712  18C9  340D               	retlw	13
   713  18CA  340A               	retlw	10
   714  18CB  3446               	retlw	70	;'F'
   715  18CC  3431               	retlw	49	;'1'
   716  18CD  343D               	retlw	61	;'='
   717  18CE  3400               	retlw	0
   718  18CF                     STR_31:	
   719  18CF  340D               	retlw	13
   720  18D0  340A               	retlw	10
   721  18D1  3446               	retlw	70	;'F'
   722  18D2  3432               	retlw	50	;'2'
   723  18D3  343D               	retlw	61	;'='
   724  18D4  3400               	retlw	0
   725  18D5                     STR_32:	
   726  18D5  340D               	retlw	13
   727  18D6  340A               	retlw	10
   728  18D7  3446               	retlw	70	;'F'
   729  18D8  3433               	retlw	51	;'3'
   730  18D9  343D               	retlw	61	;'='
   731  18DA  3400               	retlw	0
   732  18DB                     STR_27:	
   733  18DB  3446               	retlw	70	;'F'
   734  18DC  3472               	retlw	114	;'r'
   735  18DD  3465               	retlw	101	;'e'
   736  18DE  3471               	retlw	113	;'q'
   737  18DF  343D               	retlw	61	;'='
   738  18E0  3400               	retlw	0
   739  18E1                     STR_35:	
   740  18E1  3443               	retlw	67	;'C'
   741  18E2  3469               	retlw	105	;'i'
   742  18E3  346E               	retlw	110	;'n'
   743  18E4  343D               	retlw	61	;'='
   744  18E5  3400               	retlw	0
   745  18E6                     STR_29:	
   746  18E6  3476               	retlw	118	;'v'
   747  18E7  3461               	retlw	97	;'a'
   748  18E8  3472               	retlw	114	;'r'
   749  18E9  343D               	retlw	61	;'='
   750  18EA  3400               	retlw	0
   751  18EB                     STR_21:	
   752  18EB  3452               	retlw	82	;'R'
   753  18EC  3443               	retlw	67	;'C'
   754  18ED  3434               	retlw	52	;'4'
   755  18EE  343D               	retlw	61	;'='
   756  18EF  3400               	retlw	0
   757  18F0                     STR_11:	
   758  18F0  342D               	retlw	45	;'-'
   759  18F1  342A               	retlw	42	;'*'
   760  18F2  342D               	retlw	45	;'-'
   761  18F3  3400               	retlw	0
   762  18F4                     STR_9:	
   763  18F4  340D               	retlw	13
   764  18F5  340A               	retlw	10
   765  18F6  3400               	retlw	0
   766  18F7                     STR_5:	
   767  18F7  346D               	retlw	109	;'m'
   768  18F8  3446               	retlw	70	;'F'
   769  18F9  3400               	retlw	0
   770  18FA                     STR_7:	
   771  18FA  346E               	retlw	110	;'n'
   772  18FB  3446               	retlw	70	;'F'
   773  18FC  3400               	retlw	0
   774  18FD                     STR_8:	
   775  18FD  3470               	retlw	112	;'p'
   776  18FE  3446               	retlw	70	;'F'
   777  18FF  3400               	retlw	0
   778  1900                     STR_6:	
   779  1900  3475               	retlw	117	;'u'
   780  1901  3446               	retlw	70	;'F'
   781  1902  3400               	retlw	0
   782  1903                     STR_2:	
   783  1903  346D               	retlw	109	;'m'
   784  1904  3448               	retlw	72	;'H'
   785  1905  3400               	retlw	0
   786  1906                     STR_4:	
   787  1906  346E               	retlw	110	;'n'
   788  1907  3448               	retlw	72	;'H'
   789  1908  3400               	retlw	0
   790  1909                     STR_3:	
   791  1909  3475               	retlw	117	;'u'
   792  190A  3448               	retlw	72	;'H'
   793  190B  3400               	retlw	0
   794  18F4                     
   795                           ; #config settings
   796  0000                     
   797                           	psect	nvBANK3
   798  01D7                     __pnvBANK3:	
   799  01D7                     _CCal:	
   800  01D7                     	ds	4
   801  01DB                     _bres:	
   802  01DB                     	ds	2
   803  01DD                     _msecpart:	
   804  01DD                     	ds	2
   805  000B                     _INTCON	set	11
   806  000C                     _PIR1	set	12
   807  0006                     _PORTB	set	6
   808  0007                     _PORTC	set	7
   809  001A                     _RCREG	set	26
   810  0012                     _T2CON	set	18
   811  0001                     _TMR0	set	1
   812  0011                     _TMR2	set	17
   813  0019                     _TXREG	set	25
   814  00C4                     _CREN	set	196
   815  005F                     _GIE	set	95
   816  005E                     _PEIE	set	94
   817  0065                     _RCIF	set	101
   818  00C6                     _RX9	set	198
   819  00C7                     _SPEN	set	199
   820  0064                     _TXIF	set	100
   821  009C                     _CMCON	set	156
   822  0081                     _OPTION_REG	set	129
   823  008C                     _PIE1	set	140
   824  0099                     _SPBRG	set	153
   825  0085                     _TRISA	set	133
   826  0086                     _TRISB	set	134
   827  0087                     _TRISC	set	135
   828  04C2                     _BRGH	set	1218
   829  04C4                     _SYNC	set	1220
   830  04C6                     _TX9	set	1222
   831  04C5                     _TXEN	set	1221
   832  0464                     _TXIE	set	1124
   833                           
   834                           	psect	cinit
   835  07DD                     start_initialization:	
   836  07DD                     __initialization:	
   837                           
   838                           ; Clear objects allocated to COMMON
   839  07DD  01F6               	clrf	__pbssCOMMON& (0+127)
   840  07DE  01F7               	clrf	(__pbssCOMMON+1)& (0+127)
   841  07DF  01F8               	clrf	(__pbssCOMMON+2)& (0+127)
   842  07E0  01F9               	clrf	(__pbssCOMMON+3)& (0+127)
   843                           
   844                           ; Clear objects allocated to BANK3
   845  07E1  1783               	bsf	3,7	;select IRP bank2
   846  07E2  3090               	movlw	low __pbssBANK3
   847  07E3  0084               	movwf	4
   848  07E4  30C0               	movlw	low (__pbssBANK3+48)
   849  07E5  160A  118A  2004  120A  118A  	fcall	clear_ram0
   850                           
   851                           ; Clear objects allocated to BANK2
   852  07EA  3010               	movlw	low __pbssBANK2
   853  07EB  0084               	movwf	4
   854  07EC  3030               	movlw	low (__pbssBANK2+32)
   855  07ED  160A  118A  2004   	fcall	clear_ram0
   856                           
   857                           ; Initialize objects allocated to BANK3
   858  07F0  1683               	bsf	3,5	;RP0=1, select bank3
   859  07F1  1703               	bsf	3,6	;RP1=1, select bank3
   860                           
   861                           ;initializer for lcd_gotoxy@F1148
   862  07F2  3000               	movlw	0
   863  07F3  00DF               	movwf	__pdataBANK3& (0+127)
   864  07F4  3040               	movlw	64
   865  07F5  00E0               	movwf	(__pdataBANK3+1)& (0+127)
   866  07F6  3014               	movlw	20
   867  07F7  00E1               	movwf	(__pdataBANK3+2)& (0+127)
   868  07F8  3054               	movlw	84
   869  07F9  00E2               	movwf	(__pdataBANK3+3)& (0+127)
   870                           
   871                           ;initializer for _mode
   872  07FA  30FF               	movlw	255
   873  07FB  00E3               	movwf	(__pdataBANK3+4)& (0+127)
   874  07FC                     end_of_initialization:	
   875                           ;End of C runtime variable initialization code
   876                           
   877  07FC                     __end_of__initialization:	
   878  07FC  0183               	clrf	3
   879  07FD  120A  118A  2838   	ljmp	_main	;jump to C main() function
   880                           
   881                           	psect	bssCOMMON
   882  0076                     __pbssCOMMON:	
   883  0076                     _LCD_function:	
   884  0076                     	ds	1
   885  0077                     _rxiptr:	
   886  0077                     	ds	1
   887  0078                     _txiptr:	
   888  0078                     	ds	1
   889  0079                     _txoptr:	
   890  0079                     	ds	1
   891                           
   892                           	psect	bssBANK3
   893  0190                     __pbssBANK3:	
   894  0190                     _F2:	
   895  0190                     	ds	4
   896  0194                     _F3:	
   897  0194                     	ds	4
   898  0198                     _msecs:	
   899  0198                     	ds	4
   900  019C                     _seconds:	
   901  019C                     	ds	4
   902  01A0                     _timer1of:	
   903  01A0                     	ds	4
   904  01A4                     _blink:	
   905  01A4                     	ds	2
   906  01A6                     _LCD_ctrl:	
   907  01A6                     	ds	1
   908  01A7                     _LCD_lines:	
   909  01A7                     	ds	1
   910  01A8                     _LCD_mode:	
   911  01A8                     	ds	1
   912  01A9                     _rxoptr:	
   913  01A9                     	ds	1
   914  01AA                     _ser_tmp:	
   915  01AA                     	ds	1
   916  01AB                     _buffer:	
   917  01AB                     	ds	17
   918  01BC                     _F1:	
   919  01BC                     	ds	4
   920                           
   921                           	psect	dataBANK3
   922  01DF                     __pdataBANK3:	
   923  01DF                     lcd_gotoxy@F1148:	
   924  01DF                     	ds	4
   925  01E3                     _mode:	
   926  01E3                     	ds	1
   927                           
   928                           	psect	bssBANK2
   929  0110                     __pbssBANK2:	
   930  0110                     _rxfifo:	
   931  0110                     	ds	16
   932  0120                     _txfifo:	
   933  0120                     	ds	16
   934                           
   935                           	psect	clrtext
   936  1004                     clear_ram0:	
   937                           ;	Called with FSR containing the base address, and
   938                           ;	W with the last address+1
   939                           
   940  1004  0064               	clrwdt	;clear the watchdog before getting into this loop
   941  1005                     clrloop0:	
   942  1005  0180               	clrf	0	;clear RAM location pointed to by FSR
   943  1006  0A84               	incf	4,f	;increment pointer
   944  1007  0604               	xorwf	4,w	;XOR with final address
   945  1008  1903               	btfsc	3,2	;have we reached the end yet?
   946  1009  3400               	retlw	0	;all done for this memory range, return
   947  100A  0604               	xorwf	4,w	;XOR again to restore value
   948  100B  2805               	goto	clrloop0	;do the next byte
   949                           
   950                           	psect	cstackBANK3
   951  01C0                     __pcstackBANK3:	
   952  01C0                     ?_format_double:	
   953  01C0                     format_double@num:	
   954                           ; 0 bytes @ 0x0
   955                           
   956                           
   957                           ; 4 bytes @ 0x0
   958  01C0                     	ds	4
   959  01C4                     _format_double$1007:	
   960                           
   961                           ; 4 bytes @ 0x4
   962  01C4                     	ds	4
   963  01C8                     _format_double$1008:	
   964                           
   965                           ; 4 bytes @ 0x8
   966  01C8                     	ds	4
   967  01CC                     format_double@weight:	
   968                           
   969                           ; 4 bytes @ 0xC
   970  01CC                     	ds	4
   971  01D0                     format_double@digit:	
   972                           
   973                           ; 2 bytes @ 0x10
   974  01D0                     	ds	2
   975  01D2                     format_double@m:	
   976                           
   977                           ; 2 bytes @ 0x12
   978  01D2                     	ds	2
   979  01D4                     _main$257:	
   980                           
   981                           ; 2 bytes @ 0x14
   982  01D4                     	ds	2
   983  01D6                     main@new_mode:	
   984                           
   985                           ; 1 bytes @ 0x16
   986  01D6                     	ds	1
   987                           
   988                           	psect	cstackBANK2
   989  0130                     __pcstackBANK2:	
   990  0130                     _measure_capacitance$1009:	
   991                           
   992                           ; 4 bytes @ 0x0
   993  0130                     	ds	4
   994  0134                     _measure_capacitance$1010:	
   995                           
   996                           ; 4 bytes @ 0x4
   997  0134                     	ds	4
   998  0138                     _measure_capacitance$1011:	
   999                           
  1000                           ; 4 bytes @ 0x8
  1001  0138                     	ds	4
  1002  013C                     measure_capacitance@unit:	
  1003                           
  1004                           ; 1 bytes @ 0xC
  1005  013C                     	ds	1
  1006  013D                     measure_capacitance@var:	
  1007                           
  1008                           ; 2 bytes @ 0xD
  1009  013D                     	ds	2
  1010  013F                     measure_capacitance@Cin:	
  1011                           
  1012                           ; 4 bytes @ 0xF
  1013  013F                     	ds	4
  1014                           
  1015                           	psect	cstackBANK1
  1016  00A0                     __pcstackBANK1:	
  1017  00A0                     eval_poly@res:	
  1018                           
  1019                           ; 4 bytes @ 0x0
  1020  00A0                     	ds	4
  1021  00A4                     ?_ldexp:	
  1022  00A4                     ?_log:	
  1023                           ; 4 bytes @ 0x4
  1024                           
  1025  00A4                     ldexp@value:	
  1026                           ; 4 bytes @ 0x4
  1027                           
  1028  00A4                     log@x:	
  1029                           ; 4 bytes @ 0x4
  1030                           
  1031                           
  1032                           ; 4 bytes @ 0x4
  1033  00A4                     	ds	4
  1034  00A8                     ldexp@newexp:	
  1035  00A8                     log@exponent:	
  1036                           ; 2 bytes @ 0x8
  1037                           
  1038                           
  1039                           ; 2 bytes @ 0x8
  1040  00A8                     	ds	2
  1041  00AA                     ??_ldexp:	
  1042  00AA                     ?_log10:	
  1043                           ; 0 bytes @ 0xA
  1044                           
  1045  00AA                     log10@x:	
  1046                           ; 4 bytes @ 0xA
  1047                           
  1048                           
  1049                           ; 4 bytes @ 0xA
  1050  00AA                     	ds	2
  1051  00AC                     _ldexp$660:	
  1052                           
  1053                           ; 4 bytes @ 0xC
  1054  00AC                     	ds	2
  1055  00AE                     _log10$1019:	
  1056                           
  1057                           ; 4 bytes @ 0xE
  1058  00AE                     	ds	4
  1059  00B2                     ?___fltol:	
  1060  00B2                     ___fltol@f1:	
  1061                           ; 4 bytes @ 0x12
  1062                           
  1063                           
  1064                           ; 4 bytes @ 0x12
  1065  00B2                     	ds	4
  1066  00B6                     ??___fltol:	
  1067                           
  1068                           ; 0 bytes @ 0x16
  1069  00B6                     	ds	4
  1070  00BA                     ___fltol@sign1:	
  1071                           
  1072                           ; 1 bytes @ 0x1A
  1073  00BA                     	ds	1
  1074  00BB                     ___fltol@exp1:	
  1075                           
  1076                           ; 1 bytes @ 0x1B
  1077  00BB                     	ds	1
  1078  00BC                     ?___altofl:	
  1079  00BC                     measure_inductance@numerator:	
  1080                           ; 4 bytes @ 0x1C
  1081                           
  1082  00BC                     ___altofl@c:	
  1083                           ; 4 bytes @ 0x1C
  1084                           
  1085                           
  1086                           ; 4 bytes @ 0x1C
  1087  00BC                     	ds	4
  1088  00C0                     ___altofl@sign:	
  1089  00C0                     measure_inductance@denominator:	
  1090                           ; 1 bytes @ 0x20
  1091                           
  1092                           
  1093                           ; 4 bytes @ 0x20
  1094  00C0                     	ds	1
  1095  00C1                     ?_floor:	
  1096  00C1                     floor@x:	
  1097                           ; 4 bytes @ 0x21
  1098                           
  1099                           
  1100                           ; 4 bytes @ 0x21
  1101  00C1                     	ds	3
  1102  00C4                     _measure_inductance$1012:	
  1103                           
  1104                           ; 4 bytes @ 0x24
  1105  00C4                     	ds	1
  1106  00C5                     floor@i:	
  1107                           
  1108                           ; 4 bytes @ 0x25
  1109  00C5                     	ds	3
  1110  00C8                     _measure_inductance$1016:	
  1111                           
  1112                           ; 4 bytes @ 0x28
  1113  00C8                     	ds	1
  1114  00C9                     floor@expon:	
  1115                           
  1116                           ; 2 bytes @ 0x29
  1117  00C9                     	ds	2
  1118  00CB                     ?_exp:	
  1119  00CB                     exp@x:	
  1120                           ; 4 bytes @ 0x2B
  1121                           
  1122                           
  1123                           ; 4 bytes @ 0x2B
  1124  00CB                     	ds	1
  1125  00CC                     _measure_inductance$1017:	
  1126                           
  1127                           ; 4 bytes @ 0x2C
  1128  00CC                     	ds	3
  1129  00CF                     _exp$1022:	
  1130                           
  1131                           ; 4 bytes @ 0x2F
  1132  00CF                     	ds	1
  1133  00D0                     _measure_inductance$1018:	
  1134                           
  1135                           ; 4 bytes @ 0x30
  1136  00D0                     	ds	3
  1137  00D3                     _exp$754:	
  1138                           
  1139                           ; 4 bytes @ 0x33
  1140  00D3                     	ds	1
  1141  00D4                     measure_inductance@unit:	
  1142                           
  1143                           ; 1 bytes @ 0x34
  1144  00D4                     	ds	1
  1145  00D5                     _measure_inductance$1013:	
  1146                           
  1147                           ; 4 bytes @ 0x35
  1148  00D5                     	ds	2
  1149  00D7                     exp@exponent:	
  1150                           
  1151                           ; 2 bytes @ 0x37
  1152  00D7                     	ds	2
  1153  00D9                     exp@sign:	
  1154  00D9                     _measure_inductance$1014:	
  1155                           ; 1 bytes @ 0x39
  1156                           
  1157                           
  1158                           ; 4 bytes @ 0x39
  1159  00D9                     	ds	1
  1160  00DA                     ?_pow:	
  1161  00DA                     pow@x:	
  1162                           ; 4 bytes @ 0x3A
  1163                           
  1164                           
  1165                           ; 4 bytes @ 0x3A
  1166  00DA                     	ds	3
  1167  00DD                     _measure_inductance$1015:	
  1168                           
  1169                           ; 4 bytes @ 0x3D
  1170  00DD                     	ds	1
  1171  00DE                     pow@y:	
  1172                           
  1173                           ; 4 bytes @ 0x3E
  1174  00DE                     	ds	3
  1175  00E1                     measure_inductance@var:	
  1176                           
  1177                           ; 2 bytes @ 0x41
  1178  00E1                     	ds	1
  1179  00E2                     _pow$1020:	
  1180                           
  1181                           ; 4 bytes @ 0x42
  1182  00E2                     	ds	1
  1183  00E3                     measure_inductance@Lin:	
  1184                           
  1185                           ; 4 bytes @ 0x43
  1186  00E3                     	ds	3
  1187  00E6                     _pow$1021:	
  1188                           
  1189                           ; 4 bytes @ 0x46
  1190  00E6                     	ds	4
  1191  00EA                     pow@sign:	
  1192                           
  1193                           ; 1 bytes @ 0x4A
  1194  00EA                     	ds	1
  1195  00EB                     pow@yi:	
  1196                           
  1197                           ; 4 bytes @ 0x4B
  1198  00EB                     	ds	4
  1199                           
  1200                           	psect	cstackCOMMON
  1201  0070                     __pcstackCOMMON:	
  1202  0070                     ?_ser_putch:	
  1203  0070                     ?_lcd_init:	
  1204                           ; 0 bytes @ 0x0
  1205                           
  1206  0070                     ?_ser_init:	
  1207                           ; 0 bytes @ 0x0
  1208                           
  1209  0070                     ?_calibrate:	
  1210                           ; 0 bytes @ 0x0
  1211                           
  1212  0070                     ?_lcd_clear:	
  1213                           ; 0 bytes @ 0x0
  1214                           
  1215  0070                     ?_measure_capacitance:	
  1216                           ; 0 bytes @ 0x0
  1217                           
  1218  0070                     ?_measure_inductance:	
  1219                           ; 0 bytes @ 0x0
  1220                           
  1221  0070                     ?_print_unit:	
  1222                           ; 0 bytes @ 0x0
  1223                           
  1224  0070                     ?_print_indicator:	
  1225                           ; 0 bytes @ 0x0
  1226                           
  1227  0070                     ?_output_putch:	
  1228                           ; 0 bytes @ 0x0
  1229                           
  1230  0070                     ?_print_buffer:	
  1231                           ; 0 bytes @ 0x0
  1232                           
  1233  0070                     ?_timer0_init:	
  1234                           ; 0 bytes @ 0x0
  1235                           
  1236  0070                     ?_timer2_init:	
  1237                           ; 0 bytes @ 0x0
  1238                           
  1239  0070                     ?_delay10ms:	
  1240                           ; 0 bytes @ 0x0
  1241                           
  1242  0070                     ?_global_int:	
  1243                           ; 0 bytes @ 0x0
  1244                           
  1245  0070                     ??_global_int:	
  1246                           ; 0 bytes @ 0x0
  1247                           
  1248  0070                     ?_main:	
  1249                           ; 0 bytes @ 0x0
  1250                           
  1251  0070                     ?_lcd_write4bits:	
  1252                           ; 0 bytes @ 0x0
  1253                           
  1254  0070                     ?_lcd_command:	
  1255                           ; 0 bytes @ 0x0
  1256                           
  1257  0070                     ?_buffer_init:	
  1258                           ; 0 bytes @ 0x0
  1259                           
  1260  0070                     ?_buffer_putch:	
  1261                           ; 0 bytes @ 0x0
  1262                           
  1263  0070                     print_unit@unit:	
  1264                           ; 1 bytes @ 0x0
  1265                           
  1266  0070                     delay10ms@period_10ms:	
  1267                           ; 1 bytes @ 0x0
  1268                           
  1269                           
  1270                           ; 1 bytes @ 0x0
  1271  0070                     	ds	4
  1272  0074                     ??_ser_putch:	
  1273  0074                     ??_lcd_init:	
  1274                           ; 0 bytes @ 0x4
  1275                           
  1276  0074                     ??_ser_init:	
  1277                           ; 0 bytes @ 0x4
  1278                           
  1279  0074                     ??_frexp:	
  1280                           ; 0 bytes @ 0x4
  1281                           
  1282  0074                     ??_timer0_init:	
  1283                           ; 0 bytes @ 0x4
  1284                           
  1285  0074                     ??_timer2_init:	
  1286                           ; 0 bytes @ 0x4
  1287                           
  1288  0074                     ??_delay10ms:	
  1289                           ; 0 bytes @ 0x4
  1290                           
  1291  0074                     ??_lcd_write4bits:	
  1292                           ; 0 bytes @ 0x4
  1293                           
  1294  0074                     ??_buffer_init:	
  1295                           ; 0 bytes @ 0x4
  1296                           
  1297  0074                     ??___awtofl:	
  1298                           ; 0 bytes @ 0x4
  1299                           
  1300  0074                     ??___flneg:	
  1301                           ; 0 bytes @ 0x4
  1302                           
  1303  0074                     ??___lltofl:	
  1304                           ; 0 bytes @ 0x4
  1305                           
  1306  0074                     ??___lwdiv:	
  1307                           ; 0 bytes @ 0x4
  1308                           
  1309  0074                     ??___lwmod:	
  1310                           ; 0 bytes @ 0x4
  1311                           
  1312  0074                     ?_timer0_read_ps:	
  1313                           ; 0 bytes @ 0x4
  1314                           
  1315  0074                     buffer_putch@ch:	
  1316                           ; 2 bytes @ 0x4
  1317                           
  1318  0074                     ser_putch@c:	
  1319                           ; 1 bytes @ 0x4
  1320                           
  1321  0074                     ___awtofl@sign:	
  1322                           ; 1 bytes @ 0x4
  1323                           
  1324  0074                     ___lwmod@counter:	
  1325                           ; 1 bytes @ 0x4
  1326                           
  1327                           
  1328                           ; 1 bytes @ 0x4
  1329  0074                     	ds	1
  1330  0075                     ??_ser_puts:	
  1331  0075                     ??_format_number:	
  1332                           ; 0 bytes @ 0x5
  1333                           
  1334  0075                     ??_print_buffer:	
  1335                           ; 0 bytes @ 0x5
  1336                           
  1337  0075                     ??_buffer_puts:	
  1338                           ; 0 bytes @ 0x5
  1339                           
  1340  0075                     print_buffer@i:	
  1341                           ; 0 bytes @ 0x5
  1342                           
  1343  0075                     lcd_write4bits@value:	
  1344                           ; 1 bytes @ 0x5
  1345                           
  1346                           
  1347                           ; 1 bytes @ 0x5
  1348  0075                     	ds	1
  1349  0076                     ??_lcd_send:	
  1350  0076                     ??_lcd_gotoxy:	
  1351                           ; 0 bytes @ 0x6
  1352                           
  1353  0076                     ??_lcd_puts:	
  1354                           ; 0 bytes @ 0x6
  1355                           
  1356  0076                     ??_log10:	
  1357                           ; 0 bytes @ 0x6
  1358                           
  1359  0076                     ??_pow:	
  1360                           ; 0 bytes @ 0x6
  1361                           
  1362  0076                     ??_floor:	
  1363                           ; 0 bytes @ 0x6
  1364                           
  1365  0076                     ??_calibrate:	
  1366                           ; 0 bytes @ 0x6
  1367                           
  1368  0076                     ??_measure_capacitance:	
  1369                           ; 0 bytes @ 0x6
  1370                           
  1371  0076                     ??_measure_inductance:	
  1372                           ; 0 bytes @ 0x6
  1373                           
  1374  0076                     ??_exp:	
  1375                           ; 0 bytes @ 0x6
  1376                           
  1377  0076                     ??_print_reading:	
  1378                           ; 0 bytes @ 0x6
  1379                           
  1380  0076                     ??_print_indicator:	
  1381                           ; 0 bytes @ 0x6
  1382                           
  1383  0076                     ??_output_putch:	
  1384                           ; 0 bytes @ 0x6
  1385                           
  1386  0076                     ??_format_xint32:	
  1387                           ; 0 bytes @ 0x6
  1388                           
  1389  0076                     ??_format_double:	
  1390                           ; 0 bytes @ 0x6
  1391                           
  1392  0076                     ??_main:	
  1393                           ; 0 bytes @ 0x6
  1394                           
  1395  0076                     ??_lcd_command:	
  1396                           ; 0 bytes @ 0x6
  1397                           
  1398  0076                     ??___altofl:	
  1399                           ; 0 bytes @ 0x6
  1400                           
  1401  0076                     ??___flsub:	
  1402                           ; 0 bytes @ 0x6
  1403                           
  1404  0076                     ??_log:	
  1405                           ; 0 bytes @ 0x6
  1406                           
  1407  0076                     ??___lwtofl:	
  1408                           ; 0 bytes @ 0x6
  1409                           
  1410                           
  1411                           	psect	cstackBANK0
  1412  0021                     __pcstackBANK0:	
  1413                           ; 0 bytes @ 0x6
  1414                           
  1415  0021                     ?_lcd_send:	
  1416  0021                     ?_ser_puts:	
  1417                           ; 0 bytes @ 0x0
  1418                           
  1419  0021                     ??_buffer_putch:	
  1420                           ; 0 bytes @ 0x0
  1421                           
  1422  0021                     ??_timer0_read_ps:	
  1423                           ; 0 bytes @ 0x0
  1424                           
  1425  0021                     ?___flge:	
  1426                           ; 0 bytes @ 0x0
  1427                           
  1428  0021                     ?___lwdiv:	
  1429                           ; 1 bit 
  1430                           
  1431  0021                     ?___lwmod:	
  1432                           ; 2 bytes @ 0x0
  1433                           
  1434  0021                     ?___flpack:	
  1435                           ; 2 bytes @ 0x0
  1436                           
  1437  0021                     ?_frexp:	
  1438                           ; 4 bytes @ 0x0
  1439                           
  1440  0021                     ?___flneg:	
  1441                           ; 4 bytes @ 0x0
  1442                           
  1443  0021                     lcd_send@mode:	
  1444                           ; 4 bytes @ 0x0
  1445                           
  1446  0021                     lcd_init@fourbitmode:	
  1447                           ; 1 bytes @ 0x0
  1448                           
  1449  0021                     _timer0_init$114:	
  1450                           ; 1 bytes @ 0x0
  1451                           
  1452  0021                     ser_puts@s:	
  1453                           ; 2 bytes @ 0x0
  1454                           
  1455  0021                     ___lwdiv@divisor:	
  1456                           ; 2 bytes @ 0x0
  1457                           
  1458  0021                     ___lwmod@divisor:	
  1459                           ; 2 bytes @ 0x0
  1460                           
  1461  0021                     ___flpack@arg:	
  1462                           ; 2 bytes @ 0x0
  1463                           
  1464  0021                     ___flge@ff1:	
  1465                           ; 4 bytes @ 0x0
  1466                           
  1467  0021                     ___flneg@f1:	
  1468                           ; 4 bytes @ 0x0
  1469                           
  1470  0021                     frexp@value:	
  1471                           ; 4 bytes @ 0x0
  1472                           
  1473                           
  1474                           ; 4 bytes @ 0x0
  1475  0021                     	ds	1
  1476  0022                     timer2_init@ps:	
  1477  0022                     lcd_send@value:	
  1478                           ; 1 bytes @ 0x1
  1479                           
  1480  0022                     _lcd_init$321:	
  1481                           ; 1 bytes @ 0x1
  1482                           
  1483                           
  1484                           ; 2 bytes @ 0x1
  1485  0022                     	ds	1
  1486  0023                     ?_lcd_puts:	
  1487  0023                     output_putch@c:	
  1488                           ; 0 bytes @ 0x2
  1489                           
  1490  0023                     timer2_init@ps_mode:	
  1491                           ; 1 bytes @ 0x2
  1492                           
  1493  0023                     lcd_command@value:	
  1494                           ; 1 bytes @ 0x2
  1495                           
  1496  0023                     _timer0_init$115:	
  1497                           ; 1 bytes @ 0x2
  1498                           
  1499  0023                     lcd_puts@string:	
  1500                           ; 2 bytes @ 0x2
  1501                           
  1502  0023                     ___lwdiv@dividend:	
  1503                           ; 2 bytes @ 0x2
  1504                           
  1505  0023                     ___lwmod@dividend:	
  1506                           ; 2 bytes @ 0x2
  1507                           
  1508                           
  1509                           ; 2 bytes @ 0x2
  1510  0023                     	ds	1
  1511  0024                     ?_lcd_gotoxy:	
  1512  0024                     ?_lcd_begin:	
  1513                           ; 0 bytes @ 0x3
  1514                           
  1515  0024                     ??_lcd_clear:	
  1516                           ; 0 bytes @ 0x3
  1517                           
  1518  0024                     ?_put_str:	
  1519                           ; 0 bytes @ 0x3
  1520                           
  1521  0024                     ?_buffer_puts:	
  1522                           ; 0 bytes @ 0x3
  1523                           
  1524  0024                     lcd_gotoxy@row:	
  1525                           ; 1 bytes @ 0x3
  1526                           
  1527  0024                     lcd_begin@dotsize:	
  1528                           ; 1 bytes @ 0x3
  1529                           
  1530  0024                     put_str@s:	
  1531                           ; 1 bytes @ 0x3
  1532                           
  1533  0024                     buffer_puts@x:	
  1534                           ; 2 bytes @ 0x3
  1535                           
  1536                           
  1537                           ; 2 bytes @ 0x3
  1538  0024                     	ds	1
  1539  0025                     ??_lcd_begin:	
  1540  0025                     timer0_read_ps@prev:	
  1541                           ; 0 bytes @ 0x4
  1542                           
  1543  0025                     lcd_gotoxy@col:	
  1544                           ; 1 bytes @ 0x4
  1545                           
  1546  0025                     lcd_puts@i:	
  1547                           ; 1 bytes @ 0x4
  1548                           
  1549  0025                     ___flpack@exp:	
  1550                           ; 1 bytes @ 0x4
  1551                           
  1552  0025                     frexp@eptr:	
  1553                           ; 1 bytes @ 0x4
  1554                           
  1555  0025                     ___lwdiv@counter:	
  1556                           ; 1 bytes @ 0x4
  1557                           
  1558  0025                     _timer0_init$116:	
  1559                           ; 1 bytes @ 0x4
  1560                           
  1561  0025                     ___flge@ff2:	
  1562                           ; 2 bytes @ 0x4
  1563                           
  1564                           
  1565                           ; 4 bytes @ 0x4
  1566  0025                     	ds	1
  1567  0026                     ??_put_str:	
  1568  0026                     ___flpack@sign:	
  1569                           ; 0 bytes @ 0x5
  1570                           
  1571  0026                     timer0_read_ps@count:	
  1572                           ; 1 bytes @ 0x5
  1573                           
  1574  0026                     ___lwdiv@quotient:	
  1575                           ; 2 bytes @ 0x5
  1576                           
  1577  0026                     lcd_gotoxy@row_offsets:	
  1578                           ; 2 bytes @ 0x5
  1579                           
  1580                           
  1581                           ; 4 bytes @ 0x5
  1582  0026                     	ds	1
  1583  0027                     ??___flpack:	
  1584  0027                     lcd_begin@lines:	
  1585                           ; 0 bytes @ 0x6
  1586                           
  1587  0027                     _timer0_init$117:	
  1588                           ; 1 bytes @ 0x6
  1589                           
  1590                           
  1591                           ; 2 bytes @ 0x6
  1592  0027                     	ds	1
  1593  0028                     ?_format_number:	
  1594  0028                     format_number@n:	
  1595                           ; 0 bytes @ 0x7
  1596                           
  1597                           
  1598                           ; 2 bytes @ 0x7
  1599  0028                     	ds	1
  1600  0029                     ??___flge:	
  1601  0029                     timer0_init@prescaler:	
  1602                           ; 0 bytes @ 0x8
  1603                           
  1604  0029                     put_str@i:	
  1605                           ; 1 bytes @ 0x8
  1606                           
  1607                           
  1608                           ; 2 bytes @ 0x8
  1609  0029                     	ds	1
  1610  002A                     ??_print_unit:	
  1611  002A                     print_indicator@indicate:	
  1612                           ; 0 bytes @ 0x9
  1613                           
  1614  002A                     timer0_init@ps_mode:	
  1615                           ; 1 bytes @ 0x9
  1616                           
  1617  002A                     format_number@base:	
  1618                           ; 1 bytes @ 0x9
  1619                           
  1620                           
  1621                           ; 1 bytes @ 0x9
  1622  002A                     	ds	1
  1623  002B                     ?___awtofl:	
  1624  002B                     ?___fldiv:	
  1625                           ; 4 bytes @ 0xA
  1626                           
  1627  002B                     ?___lltofl:	
  1628                           ; 4 bytes @ 0xA
  1629                           
  1630  002B                     format_number@pad:	
  1631                           ; 4 bytes @ 0xA
  1632                           
  1633  002B                     ___awtofl@c:	
  1634                           ; 1 bytes @ 0xA
  1635                           
  1636  002B                     ___fldiv@f2:	
  1637                           ; 2 bytes @ 0xA
  1638                           
  1639  002B                     ___lltofl@c:	
  1640                           ; 4 bytes @ 0xA
  1641                           
  1642                           
  1643                           ; 4 bytes @ 0xA
  1644  002B                     	ds	1
  1645  002C                     format_number@buf:	
  1646                           
  1647                           ; 32 bytes @ 0xB
  1648  002C                     	ds	3
  1649  002F                     ___fldiv@f1:	
  1650                           
  1651                           ; 4 bytes @ 0xE
  1652  002F                     	ds	4
  1653  0033                     ??___fldiv:	
  1654                           
  1655                           ; 0 bytes @ 0x12
  1656  0033                     	ds	4
  1657  0037                     ___fldiv@f3:	
  1658                           
  1659                           ; 4 bytes @ 0x16
  1660  0037                     	ds	4
  1661  003B                     ___fldiv@cntr:	
  1662                           
  1663                           ; 1 bytes @ 0x1A
  1664  003B                     	ds	1
  1665  003C                     ___fldiv@exp:	
  1666                           
  1667                           ; 1 bytes @ 0x1B
  1668  003C                     	ds	1
  1669  003D                     ___fldiv@sign:	
  1670                           
  1671                           ; 1 bytes @ 0x1C
  1672  003D                     	ds	1
  1673  003E                     ?___flmul:	
  1674  003E                     ___flmul@f1:	
  1675                           ; 4 bytes @ 0x1D
  1676                           
  1677                           
  1678                           ; 4 bytes @ 0x1D
  1679  003E                     	ds	4
  1680  0042                     ___flmul@f2:	
  1681                           
  1682                           ; 4 bytes @ 0x21
  1683  0042                     	ds	4
  1684  0046                     ??___flmul:	
  1685                           
  1686                           ; 0 bytes @ 0x25
  1687  0046                     	ds	4
  1688  004A                     ___flmul@exp:	
  1689                           
  1690                           ; 1 bytes @ 0x29
  1691  004A                     	ds	1
  1692  004B                     ___flmul@f3_as_product:	
  1693                           
  1694                           ; 4 bytes @ 0x2A
  1695  004B                     	ds	1
  1696  004C                     format_number@padchar:	
  1697                           
  1698                           ; 1 bytes @ 0x2B
  1699  004C                     	ds	1
  1700  004D                     _format_number$158:	
  1701                           
  1702                           ; 2 bytes @ 0x2C
  1703  004D                     	ds	2
  1704  004F                     format_number@di:	
  1705  004F                     ___flmul@cntr:	
  1706                           ; 1 bytes @ 0x2E
  1707                           
  1708                           
  1709                           ; 1 bytes @ 0x2E
  1710  004F                     	ds	1
  1711  0050                     format_number@i:	
  1712  0050                     ___flmul@sign:	
  1713                           ; 1 bytes @ 0x2F
  1714                           
  1715                           
  1716                           ; 1 bytes @ 0x2F
  1717  0050                     	ds	1
  1718  0051                     ?_print_reading:	
  1719  0051                     ?_format_xint32:	
  1720                           ; 0 bytes @ 0x30
  1721                           
  1722  0051                     ?_measure_freq:	
  1723                           ; 0 bytes @ 0x30
  1724                           
  1725  0051                     ?___fladd:	
  1726                           ; 2 bytes @ 0x30
  1727                           
  1728  0051                     print_reading@measurement:	
  1729                           ; 4 bytes @ 0x30
  1730                           
  1731  0051                     format_xint32@x:	
  1732                           ; 2 bytes @ 0x30
  1733                           
  1734  0051                     ___fladd@f1:	
  1735                           ; 4 bytes @ 0x30
  1736                           
  1737                           
  1738                           ; 4 bytes @ 0x30
  1739  0051                     	ds	2
  1740  0053                     ??_measure_freq:	
  1741  0053                     _print_reading$1003:	
  1742                           ; 0 bytes @ 0x32
  1743                           
  1744                           
  1745                           ; 2 bytes @ 0x32
  1746  0053                     	ds	2
  1747  0055                     measure_freq@count:	
  1748  0055                     _print_reading$1004:	
  1749                           ; 2 bytes @ 0x34
  1750                           
  1751  0055                     ___fladd@f2:	
  1752                           ; 2 bytes @ 0x34
  1753                           
  1754                           
  1755                           ; 4 bytes @ 0x34
  1756  0055                     	ds	2
  1757  0057                     ?___lwtofl:	
  1758  0057                     ___lwtofl@c:	
  1759                           ; 4 bytes @ 0x36
  1760                           
  1761                           
  1762                           ; 2 bytes @ 0x36
  1763  0057                     	ds	2
  1764  0059                     ??___fladd:	
  1765                           
  1766                           ; 0 bytes @ 0x38
  1767  0059                     	ds	2
  1768  005B                     calibrate@i:	
  1769                           
  1770                           ; 1 bytes @ 0x3A
  1771  005B                     	ds	2
  1772  005D                     ___fladd@sign:	
  1773                           
  1774                           ; 1 bytes @ 0x3C
  1775  005D                     	ds	1
  1776  005E                     ___fladd@exp2:	
  1777                           
  1778                           ; 1 bytes @ 0x3D
  1779  005E                     	ds	1
  1780  005F                     ___fladd@exp1:	
  1781                           
  1782                           ; 1 bytes @ 0x3E
  1783  005F                     	ds	1
  1784  0060                     ?_eval_poly:	
  1785  0060                     ?___flsub:	
  1786                           ; 4 bytes @ 0x3F
  1787                           
  1788  0060                     ___flsub@f2:	
  1789                           ; 4 bytes @ 0x3F
  1790                           
  1791  0060                     eval_poly@x:	
  1792                           ; 4 bytes @ 0x3F
  1793                           
  1794                           
  1795                           ; 4 bytes @ 0x3F
  1796  0060                     	ds	4
  1797  0064                     eval_poly@d:	
  1798  0064                     ___flsub@f1:	
  1799                           ; 2 bytes @ 0x43
  1800                           
  1801                           
  1802                           ; 4 bytes @ 0x43
  1803  0064                     	ds	2
  1804  0066                     eval_poly@n:	
  1805                           
  1806                           ; 2 bytes @ 0x45
  1807  0066                     	ds	2
  1808  0068                     ??_eval_poly:	
  1809                           
  1810                           ; 0 bytes @ 0x47
  1811  0068                     	ds	8
  1812                           
  1813                           	psect	maintext
  1814  0038                     __pmaintext:	
  1815 ;;
  1816 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1817 ;;
  1818 ;; *************** function _main *****************
  1819 ;; Defined at:
  1820 ;;		line 113 in file "../../../LC-meter.c"
  1821 ;; Parameters:    Size  Location     Type
  1822 ;;		None
  1823 ;; Auto vars:     Size  Location     Type
  1824 ;;  new_mode        1   22[BANK3 ] unsigned char 
  1825 ;; Return value:  Size  Location     Type
  1826 ;;		None               void
  1827 ;; Registers used:
  1828 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1829 ;; Tracked objects:
  1830 ;;		On entry : B00/0
  1831 ;;		On exit  : 0/0
  1832 ;;		Unchanged: 0/0
  1833 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1834 ;;      Params:         0       0       0       0       0
  1835 ;;      Locals:         0       0       0       3       0
  1836 ;;      Temps:          0       0       0       0       0
  1837 ;;      Totals:         0       0       0       3       0
  1838 ;;Total ram usage:        3 bytes
  1839 ;; Hardware stack levels required when called:    8
  1840 ;; This function calls:
  1841 ;;		_calibrate
  1842 ;;		_delay10ms
  1843 ;;		_format_double
  1844 ;;		_lcd_begin
  1845 ;;		_lcd_clear
  1846 ;;		_lcd_gotoxy
  1847 ;;		_lcd_init
  1848 ;;		_lcd_puts
  1849 ;;		_measure_capacitance
  1850 ;;		_measure_inductance
  1851 ;;		_print_indicator
  1852 ;;		_ser_init
  1853 ;;		_ser_puts
  1854 ;;		_timer0_init
  1855 ;;		_timer2_init
  1856 ;; This function is called by:
  1857 ;;		Startup code after reset
  1858 ;; This function uses a non-reentrant model
  1859 ;;
  1860                           
  1861                           
  1862                           ;psect for function _main
  1863  0038                     _main:	
  1864                           
  1865                           ;LC-meter.c: 114: bres = msecpart = msecs = seconds = 0;
  1866                           
  1867                           ;incstack = 0
  1868                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1869  0038  1683               	bsf	3,5	;RP0=1, select bank3
  1870  0039  1703               	bsf	3,6	;RP1=1, select bank3
  1871  003A  019C               	clrf	_seconds^(0+384)	;volatile
  1872  003B  019D               	clrf	(_seconds+1)^(0+384)	;volatile
  1873  003C  019E               	clrf	(_seconds+2)^(0+384)	;volatile
  1874  003D  019F               	clrf	(_seconds+3)^(0+384)	;volatile
  1875  003E  081F               	movf	(_seconds+3)^(0+384),w	;volatile
  1876  003F  009B               	movwf	(_msecs+3)^(0+384)	;volatile
  1877  0040  081E               	movf	(_seconds+2)^(0+384),w	;volatile
  1878  0041  009A               	movwf	(_msecs+2)^(0+384)	;volatile
  1879  0042  081D               	movf	(_seconds+1)^(0+384),w	;volatile
  1880  0043  0099               	movwf	(_msecs+1)^(0+384)	;volatile
  1881  0044  081C               	movf	_seconds^(0+384),w	;volatile
  1882  0045  0098               	movwf	_msecs^(0+384)	;volatile
  1883  0046  0819               	movf	(_msecs^(0+384)+1),w	;volatile
  1884  0047  00DE               	movwf	(_msecpart+1)^(0+384)	;volatile
  1885  0048  0818               	movf	_msecs^(0+384),w	;volatile
  1886  0049  00DD               	movwf	_msecpart^(0+384)	;volatile
  1887  004A  085E               	movf	(_msecpart+1)^(0+384),w	;volatile
  1888  004B  00DC               	movwf	(_bres+1)^(0+384)	;volatile
  1889  004C  085D               	movf	_msecpart^(0+384),w	;volatile
  1890  004D  00DB               	movwf	_bres^(0+384)	;volatile
  1891                           
  1892                           ;LC-meter.c: 115: mode = -1;
  1893  004E  30FF               	movlw	255
  1894  004F  00E3               	movwf	_mode^(0+384)
  1895                           
  1896                           ;LC-meter.c: 117: CCal = 1000;
  1897  0050  3044               	movlw	68
  1898  0051  00DA               	movwf	(_CCal+3)^(0+384)
  1899  0052  307A               	movlw	122
  1900  0053  00D9               	movwf	(_CCal+2)^(0+384)
  1901  0054  3005               	movlw	5
  1902  0055  01D8               	clrf	(_CCal+1)^(0+384)
  1903  0056  01D7               	clrf	_CCal^(0+384)
  1904                           
  1905                           ;LC-meter.c: 125: CMCON = 0b00000101;
  1906  0057  1303               	bcf	3,6	;RP1=0, select bank1
  1907  0058  009C               	movwf	28	;volatile
  1908                           
  1909                           ;LC-meter.c: 127: TRISA = 0b11001111;
  1910  0059  30CF               	movlw	207
  1911  005A  0085               	movwf	5	;volatile
  1912                           
  1913                           ;LC-meter.c: 130: timer0_init(0b1000 | 0x20 | 0x40);
  1914  005B  3068               	movlw	104
  1915  005C  160A  158A  243D  120A  118A  	fcall	_timer0_init
  1916                           
  1917                           ;LC-meter.c: 139: OPTION_REG &= ~0b100000;
  1918  0061  1683               	bsf	3,5	;RP0=1, select bank1
  1919  0062  1281               	bcf	1,5	;volatile
  1920                           
  1921                           ;LC-meter.c: 145: TRISC = 0b10111011;
  1922  0063  30BB               	movlw	187
  1923  0064  0087               	movwf	7	;volatile
  1924                           
  1925                           ;LC-meter.c: 149: TRISC &= ~0b00000100;
  1926  0065  1107               	bcf	7,2	;volatile
  1927                           
  1928                           ;LC-meter.c: 150: PORTC &= ~0b00000100; PORTC |= (!!(1)) << 2;;
  1929  0066  1283               	bcf	3,5	;RP0=0, select bank0
  1930  0067  1107               	bcf	7,2	;volatile
  1931  0068  1507               	bsf	7,2	;volatile
  1932                           
  1933                           ;LC-meter.c: 152: timer2_init(0b000 | 0x80);
  1934  0069  3080               	movlw	128
  1935  006A  160A  158A  23E5  120A  118A  	fcall	_timer2_init
  1936                           
  1937                           ;LC-meter.c: 160: lcd_init(1);
  1938  006F  3001               	movlw	1
  1939  0070  120A  118A  2018  120A  118A  	fcall	_lcd_init
  1940  0075  3002               	movlw	2
  1941                           
  1942                           ;LC-meter.c: 161: lcd_begin(2, 1);
  1943  0076  01A4               	clrf	lcd_begin@dotsize
  1944  0077  0AA4               	incf	lcd_begin@dotsize,f
  1945  0078  120A  118A  233C  120A  118A  	fcall	_lcd_begin
  1946                           
  1947                           ;LC-meter.c: 164: TRISC |= (1 << 4);
  1948  007D  1683               	bsf	3,5	;RP0=1, select bank1
  1949  007E  1303               	bcf	3,6	;RP1=0, select bank1
  1950  007F  1607               	bsf	7,4	;volatile
  1951                           
  1952                           ;LC-meter.c: 165: TRISC &= ~(1 << 5);
  1953  0080  1287               	bcf	7,5	;volatile
  1954                           
  1955                           ;LC-meter.c: 167: PORTC &= ~(1 << 5);
  1956  0081  1283               	bcf	3,5	;RP0=0, select bank0
  1957  0082  1287               	bcf	7,5	;volatile
  1958                           
  1959                           ;LC-meter.c: 168: delay10ms(50);
  1960  0083  3032               	movlw	50
  1961  0084  120A  118A  22CA  120A  118A  	fcall	_delay10ms
  1962                           
  1963                           ;LC-meter.c: 169: PORTC |= (1 << 5);
  1964  0089  1283               	bcf	3,5	;RP0=0, select bank0
  1965  008A  1303               	bcf	3,6	;RP1=0, select bank0
  1966  008B  1687               	bsf	7,5	;volatile
  1967                           
  1968                           ;LC-meter.c: 170: delay10ms(50);
  1969  008C  3032               	movlw	50
  1970  008D  120A  118A  22CA  120A  118A  	fcall	_delay10ms
  1971                           
  1972                           ;LC-meter.c: 171: PORTC &= ~(1 << 5);
  1973  0092  1283               	bcf	3,5	;RP0=0, select bank0
  1974  0093  1303               	bcf	3,6	;RP1=0, select bank0
  1975  0094  1287               	bcf	7,5	;volatile
  1976                           
  1977                           ;LC-meter.c: 172: delay10ms(50);
  1978  0095  3032               	movlw	50
  1979  0096  120A  118A  22CA  120A  118A  	fcall	_delay10ms
  1980                           
  1981                           ;LC-meter.c: 173: PORTC |= (1 << 5);
  1982  009B  1283               	bcf	3,5	;RP0=0, select bank0
  1983  009C  1303               	bcf	3,6	;RP1=0, select bank0
  1984  009D  1687               	bsf	7,5	;volatile
  1985                           
  1986                           ;LC-meter.c: 174: delay10ms(50);
  1987  009E  3032               	movlw	50
  1988  009F  120A  118A  22CA  120A  118A  	fcall	_delay10ms
  1989                           
  1990                           ;LC-meter.c: 175: PORTC &= ~(1 << 5);
  1991  00A4  1283               	bcf	3,5	;RP0=0, select bank0
  1992  00A5  1303               	bcf	3,6	;RP1=0, select bank0
  1993  00A6  1287               	bcf	7,5	;volatile
  1994                           
  1995                           ;LC-meter.c: 178: ser_init();
  1996  00A7  160A  158A  23FC  120A  118A  	fcall	_ser_init
  1997                           
  1998                           ;LC-meter.c: 185: INTCON |= 0xc0;
  1999  00AC  30C0               	movlw	192
  2000  00AD  048B               	iorwf	11,f	;volatile
  2001                           
  2002                           ;LC-meter.c: 191: lcd_gotoxy(0, 0);
  2003  00AE  1283               	bcf	3,5	;RP0=0, select bank0
  2004  00AF  1303               	bcf	3,6	;RP1=0, select bank0
  2005  00B0  3000               	movlw	0
  2006  00B1  01A4               	clrf	lcd_gotoxy@row
  2007  00B2  120A  158A  277C  120A  118A  	fcall	_lcd_gotoxy
  2008                           
  2009                           ;LC-meter.c: 193: lcd_puts("LC-meter ");
  2010  00B7  30B0               	movlw	low (STR_14| (0+32768))
  2011  00B8  1283               	bcf	3,5	;RP0=0, select bank0
  2012  00B9  1303               	bcf	3,6	;RP1=0, select bank0
  2013  00BA  00A3               	movwf	lcd_puts@string
  2014  00BB  3098               	movlw	high (STR_14| (0+32768))
  2015  00BC  00A4               	movwf	lcd_puts@string+1
  2016  00BD  160A  158A  2660  120A  118A  	fcall	_lcd_puts
  2017                           
  2018                           ;LC-meter.c: 194: format_double( CCal);
  2019  00C2  1683               	bsf	3,5	;RP0=1, select bank3
  2020  00C3  1703               	bsf	3,6	;RP1=1, select bank3
  2021  00C4  085A               	movf	(_CCal+3)^(0+384),w
  2022  00C5  00C3               	movwf	(format_double@num+3)^(0+384)
  2023  00C6  0859               	movf	(_CCal+2)^(0+384),w
  2024  00C7  00C2               	movwf	(format_double@num+2)^(0+384)
  2025  00C8  0858               	movf	(_CCal+1)^(0+384),w
  2026  00C9  00C1               	movwf	(format_double@num+1)^(0+384)
  2027  00CA  0857               	movf	_CCal^(0+384),w
  2028  00CB  00C0               	movwf	format_double@num^(0+384)
  2029  00CC  160A  118A  2474  120A  118A  	fcall	_format_double
  2030                           
  2031                           ;LC-meter.c: 200: delay10ms(200);
  2032  00D1  30C8               	movlw	200
  2033  00D2  120A  118A  22CA  120A  118A  	fcall	_delay10ms
  2034                           
  2035                           ;LC-meter.c: 203: calibrate();
  2036  00D7  120A  118A  213C  120A  118A  	fcall	_calibrate
  2037                           
  2038                           ;LC-meter.c: 206: lcd_clear();
  2039  00DC  120A  118A  22CB  120A  118A  	fcall	_lcd_clear
  2040  00E1                     l4892:	
  2041                           
  2042                           ;LC-meter.c: 215: char new_mode = (!!(PORTC & 0b10000));
  2043  00E1  1283               	bcf	3,5	;RP0=0, select bank0
  2044  00E2  1303               	bcf	3,6	;RP1=0, select bank0
  2045  00E3  1E07               	btfss	7,4	;volatile
  2046  00E4  28E7               	goto	u4350
  2047  00E5  3001               	movlw	1
  2048  00E6  28E8               	goto	u4360
  2049  00E7                     u4350:	
  2050  00E7  3000               	movlw	0
  2051  00E8                     u4360:	
  2052  00E8  1683               	bsf	3,5	;RP0=1, select bank3
  2053  00E9  1703               	bsf	3,6	;RP1=1, select bank3
  2054  00EA  00D6               	movwf	main@new_mode^(0+384)
  2055                           
  2056                           ;LC-meter.c: 217: if(new_mode != mode) {
  2057  00EB  0663               	xorwf	_mode^(0+384),w
  2058  00EC  1903               	skipnz
  2059  00ED  2915               	goto	l4906
  2060                           
  2061                           ;LC-meter.c: 218: ser_puts(mode ? "- C (Unit: F) -" : "- L (Unit: H) -");
  2062  00EE  0863               	movf	_mode^(0+384),w
  2063  00EF  1D03               	btfss	3,2
  2064  00F0  28F5               	goto	l4900
  2065  00F1  306E               	movlw	low (STR_16| (0+32768))
  2066  00F2  00D4               	movwf	_main$257^(0+384)
  2067  00F3  3098               	movlw	high (STR_16| (0+32768))
  2068  00F4  28F8               	goto	L1
  2069  00F5                     l4900:	
  2070  00F5  305E               	movlw	low (STR_15| (0+32768))
  2071  00F6  00D4               	movwf	_main$257^(0+384)
  2072  00F7  3098               	movlw	high (STR_15| (0+32768))
  2073  00F8                     L1:	
  2074  00F8  00D5               	movwf	(_main$257^(0+384)+1)
  2075  00F9  0854               	movf	_main$257^(0+384),w
  2076  00FA  1283               	bcf	3,5	;RP0=0, select bank0
  2077  00FB  1303               	bcf	3,6	;RP1=0, select bank0
  2078  00FC  00A1               	movwf	ser_puts@s
  2079  00FD  1683               	bsf	3,5	;RP0=1, select bank3
  2080  00FE  1703               	bsf	3,6	;RP1=1, select bank3
  2081  00FF  0855               	movf	(_main$257+1)^(0+384),w
  2082  0100  1283               	bcf	3,5	;RP0=0, select bank0
  2083  0101  1303               	bcf	3,6	;RP1=0, select bank0
  2084  0102  00A2               	movwf	ser_puts@s+1
  2085  0103  160A  118A  2423  120A  118A  	fcall	_ser_puts
  2086                           
  2087                           ;LC-meter.c: 219: ser_puts("\r\n");
  2088  0108  30F4               	movlw	low (STR_9| (0+32768))
  2089  0109  00A1               	movwf	ser_puts@s
  2090  010A  3098               	movlw	high (STR_9| (0+32768))
  2091  010B  00A2               	movwf	ser_puts@s+1
  2092  010C  160A  118A  2423  120A  118A  	fcall	_ser_puts
  2093                           
  2094                           ;LC-meter.c: 221: mode = new_mode;
  2095  0111  1683               	bsf	3,5	;RP0=1, select bank3
  2096  0112  1703               	bsf	3,6	;RP1=1, select bank3
  2097  0113  0856               	movf	main@new_mode^(0+384),w
  2098  0114  00E3               	movwf	_mode^(0+384)
  2099  0115                     l4906:	
  2100                           
  2101                           ;LC-meter.c: 222: }
  2102                           ;LC-meter.c: 224: if(mode)
  2103  0115  0863               	movf	_mode^(0+384),w
  2104  0116  1903               	btfsc	3,2
  2105  0117  291E               	goto	l4910
  2106                           
  2107                           ;LC-meter.c: 225: measure_capacitance();
  2108  0118  160A  118A  200C  120A  118A  	fcall	_measure_capacitance
  2109  011D  2923               	goto	l269
  2110  011E                     l4910:	
  2111                           
  2112                           ;LC-meter.c: 226: else
  2113                           ;LC-meter.c: 227: measure_inductance();
  2114  011E  120A  158A  21A4  120A  118A  	fcall	_measure_inductance
  2115  0123                     l269:	
  2116                           
  2117                           ;LC-meter.c: 229: print_indicator(1);
  2118  0123  3001               	movlw	1
  2119  0124  160A  158A  25D7  120A  118A  	fcall	_print_indicator
  2120                           
  2121                           ;LC-meter.c: 230: delay10ms(30);
  2122  0129  301E               	movlw	30
  2123  012A  120A  118A  22CA  120A  118A  	fcall	_delay10ms
  2124                           
  2125                           ;LC-meter.c: 232: print_indicator(0);
  2126  012F  3000               	movlw	0
  2127  0130  160A  158A  25D7  120A  118A  	fcall	_print_indicator
  2128                           
  2129                           ;LC-meter.c: 233: delay10ms(20);
  2130  0135  3014               	movlw	20
  2131  0136  120A  118A  22CA  120A  118A  	fcall	_delay10ms
  2132                           
  2133                           ;LC-meter.c: 234: }
  2134  013B  28E1               	goto	l4892
  2135  013C                     __end_of_main:	
  2136                           
  2137                           	psect	text1
  2138  1BE5                     __ptext1:	
  2139 ;; *************** function _timer2_init *****************
  2140 ;; Defined at:
  2141 ;;		line 130 in file "../../../lib/timer.c"
  2142 ;; Parameters:    Size  Location     Type
  2143 ;;  ps_mode         1    wreg     unsigned char 
  2144 ;; Auto vars:     Size  Location     Type
  2145 ;;  ps_mode         1    2[BANK0 ] unsigned char 
  2146 ;;  ps              1    1[BANK0 ] unsigned char 
  2147 ;;  postscaler      1    0        unsigned char 
  2148 ;; Return value:  Size  Location     Type
  2149 ;;		None               void
  2150 ;; Registers used:
  2151 ;;		wreg, status,2, status,0
  2152 ;; Tracked objects:
  2153 ;;		On entry : B00/0
  2154 ;;		On exit  : B00/100
  2155 ;;		Unchanged: 800/0
  2156 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2157 ;;      Params:         0       0       0       0       0
  2158 ;;      Locals:         0       3       0       0       0
  2159 ;;      Temps:          1       0       0       0       0
  2160 ;;      Totals:         1       3       0       0       0
  2161 ;;Total ram usage:        4 bytes
  2162 ;; Hardware stack levels used:    1
  2163 ;; Hardware stack levels required when called:    1
  2164 ;; This function calls:
  2165 ;;		Nothing
  2166 ;; This function is called by:
  2167 ;;		_main
  2168 ;; This function uses a non-reentrant model
  2169 ;;
  2170                           
  2171                           
  2172                           ;psect for function _timer2_init
  2173  1BE5                     _timer2_init:	
  2174                           
  2175                           ;incstack = 0
  2176                           ; Regs used in _timer2_init: [wreg+status,2+status,0]
  2177                           ;timer2_init@ps_mode stored from wreg
  2178  1BE5  00A3               	movwf	timer2_init@ps_mode
  2179                           
  2180                           ;timer.c: 131: uint8_t ps = ps_mode & 0b1111;
  2181  1BE6  00A2               	movwf	timer2_init@ps
  2182  1BE7  300F               	movlw	15
  2183  1BE8  05A2               	andwf	timer2_init@ps,f
  2184                           
  2185                           ;timer.c: 135: T2CON &= ~0b01111111;
  2186  1BE9  3080               	movlw	128
  2187  1BEA  0592               	andwf	18,f	;volatile
  2188                           
  2189                           ;timer.c: 137: T2CON |= (postscaler & 0b1111) << 3;
  2190  1BEB  0812               	movf	18,w	;volatile
  2191                           
  2192                           ;timer.c: 138: T2CON |= (ps & 0b11);
  2193  1BEC  0822               	movf	timer2_init@ps,w
  2194  1BED  3903               	andlw	3
  2195  1BEE  0492               	iorwf	18,f	;volatile
  2196                           
  2197                           ;timer.c: 140: TMR2 = 0;
  2198  1BEF  0191               	clrf	17	;volatile
  2199                           
  2200                           ;timer.c: 142: T2CON |= 0b100;
  2201  1BF0  1512               	bsf	18,2	;volatile
  2202                           
  2203                           ;timer.c: 145: PIR1 &= ~0b10;
  2204  1BF1  108C               	bcf	12,1	;volatile
  2205                           
  2206                           ;timer.c: 146: PIE1 = (!!(ps_mode & 0x80)) << 1;
  2207  1BF2  1FA3               	btfss	timer2_init@ps_mode,7
  2208  1BF3  2BF6               	goto	u4190
  2209  1BF4  3001               	movlw	1
  2210  1BF5  2BF7               	goto	u4200
  2211  1BF6                     u4190:	
  2212  1BF6  3000               	movlw	0
  2213  1BF7                     u4200:	
  2214  1BF7  00F4               	movwf	??_timer2_init
  2215  1BF8  0774               	addwf	??_timer2_init,w
  2216  1BF9  1683               	bsf	3,5	;RP0=1, select bank1
  2217  1BFA  008C               	movwf	12	;volatile
  2218  1BFB  0008               	return
  2219  1BFC                     __end_of_timer2_init:	
  2220                           
  2221                           	psect	text2
  2222  1C3D                     __ptext2:	
  2223 ;; *************** function _timer0_init *****************
  2224 ;; Defined at:
  2225 ;;		line 27 in file "../../../lib/timer.c"
  2226 ;; Parameters:    Size  Location     Type
  2227 ;;  ps_mode         1    wreg     unsigned char 
  2228 ;; Auto vars:     Size  Location     Type
  2229 ;;  ps_mode         1    9[BANK0 ] unsigned char 
  2230 ;;  prescaler       1    8[BANK0 ] unsigned char 
  2231 ;; Return value:  Size  Location     Type
  2232 ;;		None               void
  2233 ;; Registers used:
  2234 ;;		wreg, status,2, status,0
  2235 ;; Tracked objects:
  2236 ;;		On entry : B00/100
  2237 ;;		On exit  : B00/0
  2238 ;;		Unchanged: 800/0
  2239 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2240 ;;      Params:         0       0       0       0       0
  2241 ;;      Locals:         0      10       0       0       0
  2242 ;;      Temps:          0       0       0       0       0
  2243 ;;      Totals:         0      10       0       0       0
  2244 ;;Total ram usage:       10 bytes
  2245 ;; Hardware stack levels used:    1
  2246 ;; Hardware stack levels required when called:    1
  2247 ;; This function calls:
  2248 ;;		Nothing
  2249 ;; This function is called by:
  2250 ;;		_main
  2251 ;; This function uses a non-reentrant model
  2252 ;;
  2253                           
  2254                           
  2255                           ;psect for function _timer0_init
  2256  1C3D                     _timer0_init:	
  2257                           
  2258                           ;incstack = 0
  2259                           ; Regs used in _timer0_init: [wreg+status,2+status,0]
  2260                           ;timer0_init@ps_mode stored from wreg
  2261  1C3D  1283               	bcf	3,5	;RP0=0, select bank0
  2262  1C3E  00AA               	movwf	timer0_init@ps_mode
  2263                           
  2264                           ;timer.c: 28: uint8_t prescaler = ps_mode & 0b1111;
  2265  1C3F  00A9               	movwf	timer0_init@prescaler
  2266  1C40  300F               	movlw	15
  2267  1C41  05A9               	andwf	timer0_init@prescaler,f
  2268                           
  2269                           ;timer.c: 30: TMR0 = 0;
  2270  1C42  0181               	clrf	1	;volatile
  2271                           
  2272                           ;timer.c: 33: OPTION_REG |= (!!(ps_mode & 0x20)) ? 0x20 : 0x00;
  2273  1C43  1AAA               	btfsc	timer0_init@ps_mode,5
  2274  1C44  2C47               	goto	l4498
  2275  1C45  01A1               	clrf	_timer0_init$114
  2276  1C46  2C49               	goto	L2
  2277  1C47                     l4498:	
  2278  1C47  3020               	movlw	32
  2279  1C48  00A1               	movwf	_timer0_init$114
  2280  1C49                     L2:	
  2281  1C49  01A2               	clrf	_timer0_init$114+1
  2282  1C4A  0821               	movf	_timer0_init$114,w
  2283  1C4B  1683               	bsf	3,5	;RP0=1, select bank1
  2284  1C4C  0481               	iorwf	1,f	;volatile
  2285                           
  2286                           ;timer.c: 36: OPTION_REG |= (!!(ps_mode & 0x10)) ? 0x10 : 0x00;
  2287  1C4D  1283               	bcf	3,5	;RP0=0, select bank0
  2288  1C4E  1A2A               	btfsc	timer0_init@ps_mode,4
  2289  1C4F  2C52               	goto	l4506
  2290  1C50  01A3               	clrf	_timer0_init$115
  2291  1C51  2C54               	goto	L3
  2292  1C52                     l4506:	
  2293  1C52  3010               	movlw	16
  2294  1C53  00A3               	movwf	_timer0_init$115
  2295  1C54                     L3:	
  2296  1C54  01A4               	clrf	_timer0_init$115+1
  2297  1C55  0823               	movf	_timer0_init$115,w
  2298  1C56  1683               	bsf	3,5	;RP0=1, select bank1
  2299  1C57  0481               	iorwf	1,f	;volatile
  2300                           
  2301                           ;timer.c: 44: OPTION_REG &= (!!prescaler) ? ~0x08 : ~0x00;
  2302  1C58  1283               	bcf	3,5	;RP0=0, select bank0
  2303  1C59  0829               	movf	timer0_init@prescaler,w
  2304  1C5A  1D03               	btfss	3,2
  2305  1C5B  2C5F               	goto	l4514
  2306  1C5C  30FF               	movlw	255
  2307  1C5D  00A5               	movwf	_timer0_init$116
  2308  1C5E  2C62               	goto	L4
  2309  1C5F                     l4514:	
  2310  1C5F  30F7               	movlw	247
  2311  1C60  00A5               	movwf	_timer0_init$116
  2312  1C61  30FF               	movlw	255
  2313  1C62                     L4:	
  2314  1C62  00A6               	movwf	_timer0_init$116+1
  2315  1C63  0825               	movf	_timer0_init$116,w
  2316  1C64  1683               	bsf	3,5	;RP0=1, select bank1
  2317  1C65  0581               	andwf	1,f	;volatile
  2318                           
  2319                           ;timer.c: 46: OPTION_REG &= ~0b111;
  2320  1C66  30F8               	movlw	248
  2321  1C67  0581               	andwf	1,f	;volatile
  2322                           
  2323                           ;timer.c: 48: if(prescaler > 0) {
  2324  1C68  1283               	bcf	3,5	;RP0=0, select bank0
  2325  1C69  0829               	movf	timer0_init@prescaler,w
  2326  1C6A  1903               	btfsc	3,2
  2327  1C6B  2C71               	goto	l4524
  2328                           
  2329                           ;timer.c: 49: OPTION_REG |= (prescaler - 1) & 0b111;
  2330  1C6C  0829               	movf	timer0_init@prescaler,w
  2331  1C6D  3EFF               	addlw	255
  2332  1C6E  3907               	andlw	7
  2333  1C6F  1683               	bsf	3,5	;RP0=1, select bank1
  2334  1C70  0481               	iorwf	1,f	;volatile
  2335  1C71                     l4524:	
  2336                           
  2337                           ;timer.c: 55: }
  2338                           ;timer.c: 59: INTCON &= ~0x40;
  2339  1C71  130B               	bcf	11,6	;volatile
  2340                           
  2341                           ;timer.c: 60: INTCON |= (!!(ps_mode & 0x80)) ? 0x20 : 0x00;
  2342  1C72  1283               	bcf	3,5	;RP0=0, select bank0
  2343  1C73  1BAA               	btfsc	timer0_init@ps_mode,7
  2344  1C74  2C77               	goto	l4530
  2345  1C75  01A7               	clrf	_timer0_init$117
  2346  1C76  2C79               	goto	L5
  2347  1C77                     l4530:	
  2348  1C77  3020               	movlw	32
  2349  1C78  00A7               	movwf	_timer0_init$117
  2350  1C79                     L5:	
  2351  1C79  01A8               	clrf	_timer0_init$117+1
  2352  1C7A  0827               	movf	_timer0_init$117,w
  2353  1C7B  048B               	iorwf	11,f	;volatile
  2354  1C7C  0008               	return
  2355  1C7D                     __end_of_timer0_init:	
  2356                           
  2357                           	psect	text3
  2358  1BFC                     __ptext3:	
  2359 ;; *************** function _ser_init *****************
  2360 ;; Defined at:
  2361 ;;		line 98 in file "../../../lib/ser.c"
  2362 ;; Parameters:    Size  Location     Type
  2363 ;;		None
  2364 ;; Auto vars:     Size  Location     Type
  2365 ;;		None
  2366 ;; Return value:  Size  Location     Type
  2367 ;;		None               void
  2368 ;; Registers used:
  2369 ;;		wreg, status,2
  2370 ;; Tracked objects:
  2371 ;;		On entry : 300/0
  2372 ;;		On exit  : 300/300
  2373 ;;		Unchanged: 0/0
  2374 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2375 ;;      Params:         0       0       0       0       0
  2376 ;;      Locals:         0       0       0       0       0
  2377 ;;      Temps:          0       0       0       0       0
  2378 ;;      Totals:         0       0       0       0       0
  2379 ;;Total ram usage:        0 bytes
  2380 ;; Hardware stack levels used:    1
  2381 ;; Hardware stack levels required when called:    1
  2382 ;; This function calls:
  2383 ;;		Nothing
  2384 ;; This function is called by:
  2385 ;;		_main
  2386 ;; This function uses a non-reentrant model
  2387 ;;
  2388                           
  2389                           
  2390                           ;psect for function _ser_init
  2391  1BFC                     _ser_init:	
  2392                           
  2393                           ;ser.c: 99: TRISC &= ~0x40;
  2394                           
  2395                           ;incstack = 0
  2396                           ; Regs used in _ser_init: [wreg+status,2]
  2397  1BFC  1683               	bsf	3,5	;RP0=1, select bank1
  2398  1BFD  1307               	bcf	7,6	;volatile
  2399                           
  2400                           ;ser.c: 101: TRISC |= 0x80;
  2401  1BFE  1787               	bsf	7,7	;volatile
  2402                           
  2403                           ;ser.c: 103: BRGH = 1;
  2404  1BFF  1518               	bsf	24,2	;volatile
  2405                           
  2406                           ;ser.c: 109: SPBRG = ser_brg;
  2407  1C00  301F               	movlw	31
  2408  1C01  0099               	movwf	25	;volatile
  2409                           
  2410                           ;ser.c: 112: TX9 = 0;
  2411  1C02  1318               	bcf	24,6	;volatile
  2412                           
  2413                           ;ser.c: 113: RX9 = 0;
  2414  1C03  1283               	bcf	3,5	;RP0=0, select bank0
  2415  1C04  1318               	bcf	24,6	;volatile
  2416                           
  2417                           ;ser.c: 115: SYNC = 0;
  2418  1C05  1683               	bsf	3,5	;RP0=1, select bank1
  2419  1C06  1218               	bcf	24,4	;volatile
  2420                           
  2421                           ;ser.c: 116: SPEN = 1;
  2422  1C07  1283               	bcf	3,5	;RP0=0, select bank0
  2423  1C08  1798               	bsf	24,7	;volatile
  2424                           
  2425                           ;ser.c: 117: CREN = 1;
  2426  1C09  1618               	bsf	24,4	;volatile
  2427                           
  2428                           ;ser.c: 118: TXIE = 0;
  2429  1C0A  1683               	bsf	3,5	;RP0=1, select bank1
  2430  1C0B  120C               	bcf	12,4	;volatile
  2431                           
  2432                           ;ser.c: 120: TXEN = 1;
  2433  1C0C  1698               	bsf	24,5	;volatile
  2434                           
  2435                           ;ser.c: 121: PEIE = 1;
  2436  1C0D  170B               	bsf	11,6	;volatile
  2437                           
  2438                           ;ser.c: 123: rxiptr = rxoptr = txiptr = txoptr = 0;
  2439  1C0E  01F9               	clrf	_txoptr	;volatile
  2440  1C0F  01F8               	clrf	_txiptr	;volatile
  2441  1C10  1703               	bsf	3,6	;RP1=1, select bank3
  2442  1C11  01A9               	clrf	_rxoptr^(0+384)	;volatile
  2443  1C12  01F7               	clrf	_rxiptr	;volatile
  2444  1C13  0008               	return
  2445  1C14                     __end_of_ser_init:	
  2446                           
  2447                           	psect	text4
  2448  1DD7                     __ptext4:	
  2449 ;; *************** function _print_indicator *****************
  2450 ;; Defined at:
  2451 ;;		line 184 in file "../../../src/print.c"
  2452 ;; Parameters:    Size  Location     Type
  2453 ;;  indicate        1    wreg     unsigned char 
  2454 ;; Auto vars:     Size  Location     Type
  2455 ;;  indicate        1    9[BANK0 ] unsigned char 
  2456 ;; Return value:  Size  Location     Type
  2457 ;;		None               void
  2458 ;; Registers used:
  2459 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2460 ;; Tracked objects:
  2461 ;;		On entry : 0/0
  2462 ;;		On exit  : 300/0
  2463 ;;		Unchanged: 0/0
  2464 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2465 ;;      Params:         0       0       0       0       0
  2466 ;;      Locals:         0       1       0       0       0
  2467 ;;      Temps:          0       0       0       0       0
  2468 ;;      Totals:         0       1       0       0       0
  2469 ;;Total ram usage:        1 bytes
  2470 ;; Hardware stack levels used:    1
  2471 ;; Hardware stack levels required when called:    5
  2472 ;; This function calls:
  2473 ;;		_lcd_gotoxy
  2474 ;;		_lcd_puts
  2475 ;; This function is called by:
  2476 ;;		_main
  2477 ;; This function uses a non-reentrant model
  2478 ;;
  2479                           
  2480                           
  2481                           ;psect for function _print_indicator
  2482  1DD7                     _print_indicator:	
  2483                           
  2484                           ;incstack = 0
  2485                           ; Regs used in _print_indicator: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2486                           ;print_indicator@indicate stored from wreg
  2487  1DD7  1283               	bcf	3,5	;RP0=0, select bank0
  2488  1DD8  1303               	bcf	3,6	;RP1=0, select bank0
  2489  1DD9  00AA               	movwf	print_indicator@indicate
  2490  1DDA  3000               	movlw	0
  2491                           
  2492                           ;print.c: 198: lcd_gotoxy(0, 1);
  2493  1DDB  01A4               	clrf	lcd_gotoxy@row
  2494  1DDC  0AA4               	incf	lcd_gotoxy@row,f
  2495  1DDD  120A  158A  277C  160A  158A  	fcall	_lcd_gotoxy
  2496                           
  2497                           ;print.c: 199: if(indicate) {
  2498  1DE2  1283               	bcf	3,5	;RP0=0, select bank0
  2499  1DE3  1303               	bcf	3,6	;RP1=0, select bank0
  2500  1DE4  082A               	movf	print_indicator@indicate,w
  2501  1DE5  1903               	btfsc	3,2
  2502  1DE6  2DEC               	goto	l4486
  2503                           
  2504                           ;print.c: 200: lcd_puts("-*-");
  2505  1DE7  30F0               	movlw	low (STR_11| (0+32768))
  2506  1DE8  00A3               	movwf	lcd_puts@string
  2507  1DE9  3098               	movlw	high (STR_11| (0+32768))
  2508  1DEA  00A4               	movwf	lcd_puts@string+1
  2509  1DEB  2E60               	ljmp	l4242
  2510  1DEC                     l4486:	
  2511                           ;print.c: 201: } else {
  2512                           
  2513                           
  2514                           ;print.c: 202: lcd_puts("   ");
  2515  1DEC  30C5               	movlw	low ((STR_18+3)| (0+32768))
  2516  1DED  00A3               	movwf	lcd_puts@string
  2517  1DEE  3098               	movlw	high ((STR_18+3)| (0+32768))
  2518  1DEF  00A4               	movwf	lcd_puts@string+1
  2519  1DF0  2E60               	ljmp	l4242
  2520  1DF1                     __end_of_print_indicator:	
  2521  1DF1                     __ptext8:	
  2522 ;; *************** function _print_reading *****************
  2523 ;; Defined at:
  2524 ;;		line 144 in file "../../../src/print.c"
  2525 ;; Parameters:    Size  Location     Type
  2526 ;;  measurement     2   48[BANK0 ] unsigned int 
  2527 ;; Auto vars:     Size  Location     Type
  2528 ;;		None
  2529 ;; Return value:  Size  Location     Type
  2530 ;;		None               void
  2531 ;; Registers used:
  2532 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2533 ;; Tracked objects:
  2534 ;;		On entry : 300/0
  2535 ;;		On exit  : 300/0
  2536 ;;		Unchanged: 0/0
  2537 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2538 ;;      Params:         0       2       0       0       0
  2539 ;;      Locals:         0       4       0       0       0
  2540 ;;      Temps:          0       0       0       0       0
  2541 ;;      Totals:         0       6       0       0       0
  2542 ;;Total ram usage:        6 bytes
  2543 ;; Hardware stack levels used:    1
  2544 ;; Hardware stack levels required when called:    5
  2545 ;; This function calls:
  2546 ;;		___lwdiv
  2547 ;;		___lwmod
  2548 ;;		_format_number
  2549 ;;		_lcd_gotoxy
  2550 ;;		_lcd_puts
  2551 ;; This function is called by:
  2552 ;;		_measure_capacitance
  2553 ;;		_measure_inductance
  2554 ;; This function uses a non-reentrant model
  2555 ;;
  2556                           
  2557                           
  2558                           ;psect for function _print_reading
  2559  1DF1                     _print_reading:	
  2560                           
  2561                           ;incstack = 0
  2562                           ; Regs used in _print_reading: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2563  1DF1  3009               	movlw	9
  2564                           
  2565                           ;print.c: 171: lcd_gotoxy(9, 0);
  2566  1DF2  01A4               	clrf	lcd_gotoxy@row
  2567  1DF3  120A  158A  277C  160A  158A  	fcall	_lcd_gotoxy
  2568                           
  2569                           ;print.c: 172: lcd_puts("     ");
  2570  1DF8  30C3               	movlw	low ((STR_18+1)| (0+32768))
  2571  1DF9  1283               	bcf	3,5	;RP0=0, select bank0
  2572  1DFA  1303               	bcf	3,6	;RP1=0, select bank0
  2573  1DFB  00A3               	movwf	lcd_puts@string
  2574  1DFC  3098               	movlw	high ((STR_18+1)| (0+32768))
  2575  1DFD  00A4               	movwf	lcd_puts@string+1
  2576  1DFE  2660               	fcall	_lcd_puts
  2577  1DFF  3009               	movlw	9
  2578                           
  2579                           ;print.c: 173: lcd_gotoxy(9, 0);
  2580  1E00  01A4               	clrf	lcd_gotoxy@row
  2581  1E01  120A  158A  277C  160A  158A  	fcall	_lcd_gotoxy
  2582                           
  2583                           ;print.c: 175: format_number(measurement / 100, 10, 0);
  2584  1E06  3064               	movlw	100
  2585  1E07  1283               	bcf	3,5	;RP0=0, select bank0
  2586  1E08  1303               	bcf	3,6	;RP1=0, select bank0
  2587  1E09  00A1               	movwf	___lwdiv@divisor
  2588  1E0A  01A2               	clrf	___lwdiv@divisor+1
  2589  1E0B  0852               	movf	print_reading@measurement+1,w
  2590  1E0C  00A4               	movwf	___lwdiv@dividend+1
  2591  1E0D  0851               	movf	print_reading@measurement,w
  2592  1E0E  00A3               	movwf	___lwdiv@dividend
  2593  1E0F  2636               	fcall	___lwdiv
  2594  1E10  0822               	movf	?___lwdiv+1,w
  2595  1E11  00D4               	movwf	_print_reading$1003+1
  2596  1E12  0821               	movf	?___lwdiv,w
  2597  1E13  00D3               	movwf	_print_reading$1003
  2598                           
  2599                           ;print.c: 175: format_number(measurement / 100, 10, 0);
  2600  1E14  0854               	movf	_print_reading$1003+1,w
  2601  1E15  00A9               	movwf	format_number@n+1
  2602  1E16  0853               	movf	_print_reading$1003,w
  2603  1E17  00A8               	movwf	format_number@n
  2604  1E18  300A               	movlw	10
  2605  1E19  00AA               	movwf	format_number@base
  2606  1E1A  01AB               	clrf	format_number@pad
  2607  1E1B  160A  118A  273E  160A  158A  	fcall	_format_number
  2608                           
  2609                           ;print.c: 177: format_number(measurement % 100, 10, 0);
  2610  1E20  3064               	movlw	100
  2611  1E21  00A1               	movwf	___lwmod@divisor
  2612  1E22  01A2               	clrf	___lwmod@divisor+1
  2613  1E23  0852               	movf	print_reading@measurement+1,w
  2614  1E24  00A4               	movwf	___lwmod@dividend+1
  2615  1E25  0851               	movf	print_reading@measurement,w
  2616  1E26  00A3               	movwf	___lwmod@dividend
  2617  1E27  2687               	fcall	___lwmod
  2618  1E28  0822               	movf	?___lwmod+1,w
  2619  1E29  00D6               	movwf	_print_reading$1004+1
  2620  1E2A  0821               	movf	?___lwmod,w
  2621  1E2B  00D5               	movwf	_print_reading$1004
  2622                           
  2623                           ;print.c: 177: format_number(measurement % 100, 10, 0);
  2624  1E2C  0856               	movf	_print_reading$1004+1,w
  2625  1E2D  00A9               	movwf	format_number@n+1
  2626  1E2E  0855               	movf	_print_reading$1004,w
  2627  1E2F  00A8               	movwf	format_number@n
  2628  1E30  300A               	movlw	10
  2629  1E31  00AA               	movwf	format_number@base
  2630  1E32  01AB               	clrf	format_number@pad
  2631  1E33  160A  118A  2F3E   	ljmp	l4250
  2632  1E36                     __end_of_print_reading:	
  2633  1E36                     __ptext43:	
  2634 ;; *************** function ___lwdiv *****************
  2635 ;; Defined at:
  2636 ;;		line 6 in file "/opt/microchip/xc8/v1.34/sources/common/lwdiv.c"
  2637 ;; Parameters:    Size  Location     Type
  2638 ;;  divisor         2    0[BANK0 ] unsigned int 
  2639 ;;  dividend        2    2[BANK0 ] unsigned int 
  2640 ;; Auto vars:     Size  Location     Type
  2641 ;;  quotient        2    5[BANK0 ] unsigned int 
  2642 ;;  counter         1    4[BANK0 ] unsigned char 
  2643 ;; Return value:  Size  Location     Type
  2644 ;;                  2    0[BANK0 ] unsigned int 
  2645 ;; Registers used:
  2646 ;;		wreg, status,2, status,0
  2647 ;; Tracked objects:
  2648 ;;		On entry : 300/0
  2649 ;;		On exit  : 300/0
  2650 ;;		Unchanged: 0/0
  2651 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2652 ;;      Params:         0       4       0       0       0
  2653 ;;      Locals:         0       3       0       0       0
  2654 ;;      Temps:          0       0       0       0       0
  2655 ;;      Totals:         0       7       0       0       0
  2656 ;;Total ram usage:        7 bytes
  2657 ;; Hardware stack levels used:    1
  2658 ;; Hardware stack levels required when called:    1
  2659 ;; This function calls:
  2660 ;;		Nothing
  2661 ;; This function is called by:
  2662 ;;		_print_reading
  2663 ;;		_format_number
  2664 ;; This function uses a non-reentrant model
  2665 ;;
  2666                           
  2667                           
  2668                           ;psect for function ___lwdiv
  2669  1E36                     ___lwdiv:	
  2670                           
  2671                           ;incstack = 0
  2672                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  2673  1E36  01A6               	clrf	___lwdiv@quotient
  2674  1E37  01A7               	clrf	___lwdiv@quotient+1
  2675  1E38  0821               	movf	___lwdiv@divisor,w
  2676  1E39  0422               	iorwf	___lwdiv@divisor+1,w
  2677  1E3A  1903               	btfsc	3,2
  2678  1E3B  2E5B               	goto	l4160
  2679  1E3C  01A5               	clrf	___lwdiv@counter
  2680  1E3D                     L18:	
  2681  1E3D  0AA5               	incf	___lwdiv@counter,f
  2682  1E3E  1BA2               	btfsc	___lwdiv@divisor+1,7
  2683  1E3F  2E44               	goto	l4148
  2684  1E40  1003               	clrc
  2685  1E41  0DA1               	rlf	___lwdiv@divisor,f
  2686  1E42  0DA2               	rlf	___lwdiv@divisor+1,f
  2687  1E43  2E3D               	goto	L18
  2688  1E44                     l4148:	
  2689  1E44  1003               	clrc
  2690  1E45  0DA6               	rlf	___lwdiv@quotient,f
  2691  1E46  0DA7               	rlf	___lwdiv@quotient+1,f
  2692  1E47  0822               	movf	___lwdiv@divisor+1,w
  2693  1E48  0224               	subwf	___lwdiv@dividend+1,w
  2694  1E49  1D03               	skipz
  2695  1E4A  2E4D               	goto	u3785
  2696  1E4B  0821               	movf	___lwdiv@divisor,w
  2697  1E4C  0223               	subwf	___lwdiv@dividend,w
  2698  1E4D                     u3785:	
  2699  1E4D  1C03               	skipc
  2700  1E4E  2E57               	goto	L19
  2701  1E4F  0821               	movf	___lwdiv@divisor,w
  2702  1E50  02A3               	subwf	___lwdiv@dividend,f
  2703  1E51  0822               	movf	___lwdiv@divisor+1,w
  2704  1E52  1C03               	skipc
  2705  1E53  03A4               	decf	___lwdiv@dividend+1,f
  2706  1E54  02A4               	subwf	___lwdiv@dividend+1,f
  2707  1E55  1426               	bsf	___lwdiv@quotient,0
  2708  1E56  1003               	clrc
  2709  1E57                     L19:	
  2710  1E57  0CA2               	rrf	___lwdiv@divisor+1,f
  2711  1E58  0CA1               	rrf	___lwdiv@divisor,f
  2712  1E59  0BA5               	decfsz	___lwdiv@counter,f
  2713  1E5A  2E44               	goto	l4148
  2714  1E5B                     l4160:	
  2715  1E5B  0827               	movf	___lwdiv@quotient+1,w
  2716  1E5C  00A2               	movwf	?___lwdiv+1
  2717  1E5D  0826               	movf	___lwdiv@quotient,w
  2718  1E5E  00A1               	movwf	?___lwdiv
  2719  1E5F  0008               	return
  2720  1E60                     __end_of___lwdiv:	
  2721  1E60                     __ptext9:	
  2722 ;; *************** function _lcd_puts *****************
  2723 ;; Defined at:
  2724 ;;		line 163 in file "../../../lib/lcd44780.c"
  2725 ;; Parameters:    Size  Location     Type
  2726 ;;  string          2    2[BANK0 ] PTR const unsigned char 
  2727 ;;		 -> STR_21(5), STR_20(6), STR_19(7), STR_18(7), 
  2728 ;;		 -> STR_14(10), STR_12(4), STR_11(4), STR_10(6), 
  2729 ;; Auto vars:     Size  Location     Type
  2730 ;;  i               1    4[BANK0 ] unsigned char 
  2731 ;; Return value:  Size  Location     Type
  2732 ;;		None               void
  2733 ;; Registers used:
  2734 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2735 ;; Tracked objects:
  2736 ;;		On entry : 300/0
  2737 ;;		On exit  : 300/0
  2738 ;;		Unchanged: 0/0
  2739 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2740 ;;      Params:         0       2       0       0       0
  2741 ;;      Locals:         0       1       0       0       0
  2742 ;;      Temps:          0       0       0       0       0
  2743 ;;      Totals:         0       3       0       0       0
  2744 ;;Total ram usage:        3 bytes
  2745 ;; Hardware stack levels used:    1
  2746 ;; Hardware stack levels required when called:    3
  2747 ;; This function calls:
  2748 ;;		_lcd_send
  2749 ;; This function is called by:
  2750 ;;		_print_reading
  2751 ;;		_print_indicator
  2752 ;;		_main
  2753 ;; This function uses a non-reentrant model
  2754 ;;
  2755                           
  2756                           
  2757                           ;psect for function _lcd_puts
  2758  1E60                     _lcd_puts:	
  2759  1E60                     l4242:	
  2760                           ;incstack = 0
  2761                           ; Regs used in _lcd_puts: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2762                           
  2763                           
  2764                           ;lcd44780.c: 164: uint8_t i;
  2765                           ;lcd44780.c: 165: for(i = 0; string[i]; i++) lcd_send((string[i]), 1);
  2766  1E60  01A5               	clrf	lcd_puts@i
  2767  1E61                     l4248:	
  2768  1E61  0825               	movf	lcd_puts@i,w
  2769  1E62  0723               	addwf	lcd_puts@string,w
  2770  1E63  0084               	movwf	4
  2771  1E64  0824               	movf	lcd_puts@string+1,w
  2772  1E65  1803               	skipnc
  2773  1E66  0A24               	incf	lcd_puts@string+1,w
  2774  1E67  00FF               	movwf	127
  2775  1E68  160A  158A  2000  160A  158A  	fcall	stringtab
  2776  1E6D  3A00               	xorlw	0
  2777  1E6E  1903               	btfsc	3,2
  2778  1E6F  0008               	return
  2779  1E70  01A1               	clrf	lcd_send@mode
  2780  1E71  0AA1               	incf	lcd_send@mode,f
  2781  1E72  0825               	movf	lcd_puts@i,w
  2782  1E73  0723               	addwf	lcd_puts@string,w
  2783  1E74  0084               	movwf	4
  2784  1E75  0824               	movf	lcd_puts@string+1,w
  2785  1E76  1803               	skipnc
  2786  1E77  0A24               	incf	lcd_puts@string+1,w
  2787  1E78  00FF               	movwf	127
  2788  1E79  160A  158A  2000  160A  158A  	fcall	stringtab
  2789  1E7E  120A  158A  27EE  160A  158A  	fcall	_lcd_send
  2790  1E83  1283               	bcf	3,5	;RP0=0, select bank0
  2791  1E84  1303               	bcf	3,6	;RP1=0, select bank0
  2792  1E85  0AA5               	incf	lcd_puts@i,f
  2793  1E86  2E61               	goto	l4248
  2794  1E87                     __end_of_lcd_puts:	
  2795  1E87                     __ptext42:	
  2796 ;; *************** function ___lwmod *****************
  2797 ;; Defined at:
  2798 ;;		line 6 in file "/opt/microchip/xc8/v1.34/sources/common/lwmod.c"
  2799 ;; Parameters:    Size  Location     Type
  2800 ;;  divisor         2    0[BANK0 ] unsigned int 
  2801 ;;  dividend        2    2[BANK0 ] unsigned int 
  2802 ;; Auto vars:     Size  Location     Type
  2803 ;;  counter         1    4[COMMON] unsigned char 
  2804 ;; Return value:  Size  Location     Type
  2805 ;;                  2    0[BANK0 ] unsigned int 
  2806 ;; Registers used:
  2807 ;;		wreg, status,2, status,0
  2808 ;; Tracked objects:
  2809 ;;		On entry : 300/0
  2810 ;;		On exit  : 300/0
  2811 ;;		Unchanged: 0/0
  2812 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2813 ;;      Params:         0       4       0       0       0
  2814 ;;      Locals:         1       0       0       0       0
  2815 ;;      Temps:          0       0       0       0       0
  2816 ;;      Totals:         1       4       0       0       0
  2817 ;;Total ram usage:        5 bytes
  2818 ;; Hardware stack levels used:    1
  2819 ;; Hardware stack levels required when called:    1
  2820 ;; This function calls:
  2821 ;;		Nothing
  2822 ;; This function is called by:
  2823 ;;		_print_reading
  2824 ;;		_format_number
  2825 ;; This function uses a non-reentrant model
  2826 ;;
  2827                           
  2828                           
  2829                           ;psect for function ___lwmod
  2830  1E87                     ___lwmod:	
  2831                           
  2832                           ;incstack = 0
  2833                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  2834  1E87  0821               	movf	___lwmod@divisor,w
  2835  1E88  0422               	iorwf	___lwmod@divisor+1,w
  2836  1E89  1903               	btfsc	3,2
  2837  1E8A  2EA6               	goto	l4180
  2838  1E8B  01F4               	clrf	___lwmod@counter
  2839  1E8C                     L16:	
  2840  1E8C  0AF4               	incf	___lwmod@counter,f
  2841  1E8D  1BA2               	btfsc	___lwmod@divisor+1,7
  2842  1E8E  2E93               	goto	l4172
  2843  1E8F  1003               	clrc
  2844  1E90  0DA1               	rlf	___lwmod@divisor,f
  2845  1E91  0DA2               	rlf	___lwmod@divisor+1,f
  2846  1E92  2E8C               	goto	L16
  2847  1E93                     l4172:	
  2848  1E93  0822               	movf	___lwmod@divisor+1,w
  2849  1E94  0224               	subwf	___lwmod@dividend+1,w
  2850  1E95  1D03               	skipz
  2851  1E96  2E99               	goto	u3825
  2852  1E97  0821               	movf	___lwmod@divisor,w
  2853  1E98  0223               	subwf	___lwmod@dividend,w
  2854  1E99                     u3825:	
  2855  1E99  1C03               	skipc
  2856  1E9A  2EA2               	goto	L17
  2857  1E9B  0821               	movf	___lwmod@divisor,w
  2858  1E9C  02A3               	subwf	___lwmod@dividend,f
  2859  1E9D  0822               	movf	___lwmod@divisor+1,w
  2860  1E9E  1C03               	skipc
  2861  1E9F  03A4               	decf	___lwmod@dividend+1,f
  2862  1EA0  02A4               	subwf	___lwmod@dividend+1,f
  2863  1EA1  1003               	clrc
  2864  1EA2                     L17:	
  2865  1EA2  0CA2               	rrf	___lwmod@divisor+1,f
  2866  1EA3  0CA1               	rrf	___lwmod@divisor,f
  2867  1EA4  0BF4               	decfsz	___lwmod@counter,f
  2868  1EA5  2E93               	goto	l4172
  2869  1EA6                     l4180:	
  2870  1EA6  0824               	movf	___lwmod@dividend+1,w
  2871  1EA7  00A2               	movwf	?___lwmod+1
  2872  1EA8  0823               	movf	___lwmod@dividend,w
  2873  1EA9  00A1               	movwf	?___lwmod
  2874  1EAA  0008               	return
  2875  1EAB                     __end_of___lwmod:	
  2876                           
  2877                           	psect	text6
  2878  100C                     __ptext6:	
  2879 ;; *************** function _measure_capacitance *****************
  2880 ;; Defined at:
  2881 ;;		line 119 in file "../../../lib/../src/measure.c"
  2882 ;; Parameters:    Size  Location     Type
  2883 ;;		None
  2884 ;; Auto vars:     Size  Location     Type
  2885 ;;  Cin             4   15[BANK2 ] unsigned char 
  2886 ;;  var             2   13[BANK2 ] unsigned int 
  2887 ;;  unit            1   12[BANK2 ] unsigned char 
  2888 ;; Return value:  Size  Location     Type
  2889 ;;		None               void
  2890 ;; Registers used:
  2891 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2892 ;; Tracked objects:
  2893 ;;		On entry : 300/300
  2894 ;;		On exit  : 300/0
  2895 ;;		Unchanged: 0/0
  2896 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2897 ;;      Params:         0       0       0       0       0
  2898 ;;      Locals:         0       0       0       0      19
  2899 ;;      Temps:          0       0       0       0       0
  2900 ;;      Totals:         0       0       0       0      19
  2901 ;;Total ram usage:       19 bytes
  2902 ;; Hardware stack levels used:    1
  2903 ;; Hardware stack levels required when called:    7
  2904 ;; This function calls:
  2905 ;;		___fldiv
  2906 ;;		___flge
  2907 ;;		___flmul
  2908 ;;		___flsub
  2909 ;;		___fltol
  2910 ;;		___lwtofl
  2911 ;;		_format_double
  2912 ;;		_format_xint32
  2913 ;;		_lcd_gotoxy
  2914 ;;		_measure_freq
  2915 ;;		_print_reading
  2916 ;;		_print_unit
  2917 ;;		_put_str
  2918 ;;		_ser_putch
  2919 ;;		_ser_puts
  2920 ;; This function is called by:
  2921 ;;		_main
  2922 ;; This function uses a non-reentrant model
  2923 ;;
  2924                           
  2925                           
  2926                           ;psect for function _measure_capacitance
  2927  100C                     _measure_capacitance:	
  2928                           
  2929                           ;measure.c: 120: uint8_t unit;
  2930                           ;measure.c: 121: uint16_t var;
  2931                           ;measure.c: 123: double Cin;
  2932                           ;measure.c: 127: lcd_gotoxy(0, 0);
  2933                           
  2934                           ;incstack = 0
  2935                           ; Regs used in _measure_capacitance: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack
      +                          ]
  2936  100C  1283               	bcf	3,5	;RP0=0, select bank0
  2937  100D  1303               	bcf	3,6	;RP1=0, select bank0
  2938  100E  3000               	movlw	0
  2939  100F  01A4               	clrf	lcd_gotoxy@row
  2940  1010  120A  158A  277C  160A  118A  	fcall	_lcd_gotoxy
  2941                           
  2942                           ;measure.c: 128: put_str("Capacity ");
  2943  1015  30A6               	movlw	low (STR_28| (0+32768))
  2944  1016  1283               	bcf	3,5	;RP0=0, select bank0
  2945  1017  1303               	bcf	3,6	;RP1=0, select bank0
  2946  1018  00A4               	movwf	put_str@s
  2947  1019  3098               	movlw	high (STR_28| (0+32768))
  2948  101A  00A5               	movwf	put_str@s+1
  2949  101B  120A  158A  27AD  160A  118A  	fcall	_put_str
  2950                           
  2951                           ;measure.c: 130: var = measure_freq();
  2952  1020  120A  118A  2220  160A  118A  	fcall	_measure_freq
  2953  1025  0852               	movf	?_measure_freq+1,w
  2954  1026  1703               	bsf	3,6	;RP1=1, select bank2
  2955  1027  00BE               	movwf	(measure_capacitance@var+1)^(0+256)
  2956  1028  1303               	bcf	3,6	;RP1=0, select bank0
  2957  1029  0851               	movf	?_measure_freq,w
  2958  102A  1703               	bsf	3,6	;RP1=1, select bank2
  2959  102B  00BD               	movwf	measure_capacitance@var^(0+256)
  2960                           
  2961                           ;measure.c: 132: F3 = (double)var;
  2962  102C  083E               	movf	(measure_capacitance@var+1)^(0+256),w
  2963  102D  1303               	bcf	3,6	;RP1=0, select bank0
  2964  102E  00D8               	movwf	___lwtofl@c+1
  2965  102F  1703               	bsf	3,6	;RP1=1, select bank2
  2966  1030  083D               	movf	measure_capacitance@var^(0+256),w
  2967  1031  1303               	bcf	3,6	;RP1=0, select bank0
  2968  1032  00D7               	movwf	___lwtofl@c
  2969  1033  27ED  160A  118A   	fcall	___lwtofl
  2970  1036  085A               	movf	?___lwtofl+3,w
  2971  1037  1683               	bsf	3,5	;RP0=1, select bank3
  2972  1038  1703               	bsf	3,6	;RP1=1, select bank3
  2973  1039  0097               	movwf	(_F3+3)^(0+384)
  2974  103A  1283               	bcf	3,5	;RP0=0, select bank0
  2975  103B  1303               	bcf	3,6	;RP1=0, select bank0
  2976  103C  0859               	movf	?___lwtofl+2,w
  2977  103D  1683               	bsf	3,5	;RP0=1, select bank3
  2978  103E  1703               	bsf	3,6	;RP1=1, select bank3
  2979  103F  0096               	movwf	(_F3+2)^(0+384)
  2980  1040  1283               	bcf	3,5	;RP0=0, select bank0
  2981  1041  1303               	bcf	3,6	;RP1=0, select bank0
  2982  1042  0858               	movf	?___lwtofl+1,w
  2983  1043  1683               	bsf	3,5	;RP0=1, select bank3
  2984  1044  1703               	bsf	3,6	;RP1=1, select bank3
  2985  1045  0095               	movwf	(_F3+1)^(0+384)
  2986  1046  1283               	bcf	3,5	;RP0=0, select bank0
  2987  1047  1303               	bcf	3,6	;RP1=0, select bank0
  2988  1048  0857               	movf	?___lwtofl,w
  2989  1049  1683               	bsf	3,5	;RP0=1, select bank3
  2990  104A  1703               	bsf	3,6	;RP1=1, select bank3
  2991  104B  0094               	movwf	_F3^(0+384)
  2992                           
  2993                           ;measure.c: 135: ser_puts("var=");
  2994  104C  30E6               	movlw	low (STR_29| (0+32768))
  2995  104D  1283               	bcf	3,5	;RP0=0, select bank0
  2996  104E  1303               	bcf	3,6	;RP1=0, select bank0
  2997  104F  00A1               	movwf	ser_puts@s
  2998  1050  3098               	movlw	high (STR_29| (0+32768))
  2999  1051  00A2               	movwf	ser_puts@s+1
  3000  1052  2423  160A  118A   	fcall	_ser_puts
  3001                           
  3002                           ;measure.c: 136: format_xint32(var);
  3003  1055  1703               	bsf	3,6	;RP1=1, select bank2
  3004  1056  083D               	movf	measure_capacitance@var^(0+256),w
  3005  1057  1303               	bcf	3,6	;RP1=0, select bank0
  3006  1058  00D1               	movwf	format_xint32@x
  3007  1059  1703               	bsf	3,6	;RP1=1, select bank2
  3008  105A  083E               	movf	(measure_capacitance@var+1)^(0+256),w
  3009  105B  1303               	bcf	3,6	;RP1=0, select bank0
  3010  105C  00D2               	movwf	format_xint32@x+1
  3011  105D  01D3               	clrf	format_xint32@x+2
  3012  105E  01D4               	clrf	format_xint32@x+3
  3013  105F  2456  160A  118A   	fcall	_format_xint32
  3014                           
  3015                           ;measure.c: 137: ser_puts("\r\nF1=");
  3016  1062  30C9               	movlw	low (STR_30| (0+32768))
  3017  1063  00A1               	movwf	ser_puts@s
  3018  1064  3098               	movlw	high (STR_30| (0+32768))
  3019  1065  00A2               	movwf	ser_puts@s+1
  3020  1066  2423  160A  118A   	fcall	_ser_puts
  3021                           
  3022                           ;measure.c: 138: format_double(F1);
  3023  1069  1683               	bsf	3,5	;RP0=1, select bank3
  3024  106A  1703               	bsf	3,6	;RP1=1, select bank3
  3025  106B  083F               	movf	(_F1+3)^(0+384),w
  3026  106C  00C3               	movwf	(format_double@num+3)^(0+384)
  3027  106D  083E               	movf	(_F1+2)^(0+384),w
  3028  106E  00C2               	movwf	(format_double@num+2)^(0+384)
  3029  106F  083D               	movf	(_F1+1)^(0+384),w
  3030  1070  00C1               	movwf	(format_double@num+1)^(0+384)
  3031  1071  083C               	movf	_F1^(0+384),w
  3032  1072  00C0               	movwf	format_double@num^(0+384)
  3033  1073  2474  160A  118A   	fcall	_format_double
  3034                           
  3035                           ;measure.c: 139: ser_putch(' ');
  3036  1076  3020               	movlw	32
  3037  1077  2440  160A  118A   	fcall	_ser_putch
  3038                           
  3039                           ;measure.c: 140: format_xint32(*(uint32_t*)&F1);
  3040  107A  1703               	bsf	3,6	;RP1=1, select bank3
  3041  107B  083F               	movf	(_F1+3)^(0+384),w
  3042  107C  1283               	bcf	3,5	;RP0=0, select bank0
  3043  107D  1303               	bcf	3,6	;RP1=0, select bank0
  3044  107E  00D4               	movwf	format_xint32@x+3
  3045  107F  1683               	bsf	3,5	;RP0=1, select bank3
  3046  1080  1703               	bsf	3,6	;RP1=1, select bank3
  3047  1081  083E               	movf	(_F1+2)^(0+384),w
  3048  1082  1283               	bcf	3,5	;RP0=0, select bank0
  3049  1083  1303               	bcf	3,6	;RP1=0, select bank0
  3050  1084  00D3               	movwf	format_xint32@x+2
  3051  1085  1683               	bsf	3,5	;RP0=1, select bank3
  3052  1086  1703               	bsf	3,6	;RP1=1, select bank3
  3053  1087  083D               	movf	(_F1+1)^(0+384),w
  3054  1088  1283               	bcf	3,5	;RP0=0, select bank0
  3055  1089  1303               	bcf	3,6	;RP1=0, select bank0
  3056  108A  00D2               	movwf	format_xint32@x+1
  3057  108B  1683               	bsf	3,5	;RP0=1, select bank3
  3058  108C  1703               	bsf	3,6	;RP1=1, select bank3
  3059  108D  083C               	movf	_F1^(0+384),w
  3060  108E  1283               	bcf	3,5	;RP0=0, select bank0
  3061  108F  1303               	bcf	3,6	;RP1=0, select bank0
  3062  1090  00D1               	movwf	format_xint32@x
  3063  1091  2456  160A  118A   	fcall	_format_xint32
  3064                           
  3065                           ;measure.c: 141: ser_puts("\r\nF2=");
  3066  1094  30CF               	movlw	low (STR_31| (0+32768))
  3067  1095  00A1               	movwf	ser_puts@s
  3068  1096  3098               	movlw	high (STR_31| (0+32768))
  3069  1097  00A2               	movwf	ser_puts@s+1
  3070  1098  2423  160A  118A   	fcall	_ser_puts
  3071                           
  3072                           ;measure.c: 142: format_double(F2);
  3073  109B  1683               	bsf	3,5	;RP0=1, select bank3
  3074  109C  1703               	bsf	3,6	;RP1=1, select bank3
  3075  109D  0813               	movf	(_F2+3)^(0+384),w
  3076  109E  00C3               	movwf	(format_double@num+3)^(0+384)
  3077  109F  0812               	movf	(_F2+2)^(0+384),w
  3078  10A0  00C2               	movwf	(format_double@num+2)^(0+384)
  3079  10A1  0811               	movf	(_F2+1)^(0+384),w
  3080  10A2  00C1               	movwf	(format_double@num+1)^(0+384)
  3081  10A3  0810               	movf	_F2^(0+384),w
  3082  10A4  00C0               	movwf	format_double@num^(0+384)
  3083  10A5  2474  160A  118A   	fcall	_format_double
  3084                           
  3085                           ;measure.c: 143: ser_putch(' ');
  3086  10A8  3020               	movlw	32
  3087  10A9  2440  160A  118A   	fcall	_ser_putch
  3088                           
  3089                           ;measure.c: 144: format_xint32(*(uint32_t*)&F2);
  3090  10AC  1703               	bsf	3,6	;RP1=1, select bank3
  3091  10AD  0813               	movf	(_F2+3)^(0+384),w
  3092  10AE  1283               	bcf	3,5	;RP0=0, select bank0
  3093  10AF  1303               	bcf	3,6	;RP1=0, select bank0
  3094  10B0  00D4               	movwf	format_xint32@x+3
  3095  10B1  1683               	bsf	3,5	;RP0=1, select bank3
  3096  10B2  1703               	bsf	3,6	;RP1=1, select bank3
  3097  10B3  0812               	movf	(_F2+2)^(0+384),w
  3098  10B4  1283               	bcf	3,5	;RP0=0, select bank0
  3099  10B5  1303               	bcf	3,6	;RP1=0, select bank0
  3100  10B6  00D3               	movwf	format_xint32@x+2
  3101  10B7  1683               	bsf	3,5	;RP0=1, select bank3
  3102  10B8  1703               	bsf	3,6	;RP1=1, select bank3
  3103  10B9  0811               	movf	(_F2+1)^(0+384),w
  3104  10BA  1283               	bcf	3,5	;RP0=0, select bank0
  3105  10BB  1303               	bcf	3,6	;RP1=0, select bank0
  3106  10BC  00D2               	movwf	format_xint32@x+1
  3107  10BD  1683               	bsf	3,5	;RP0=1, select bank3
  3108  10BE  1703               	bsf	3,6	;RP1=1, select bank3
  3109  10BF  0810               	movf	_F2^(0+384),w
  3110  10C0  1283               	bcf	3,5	;RP0=0, select bank0
  3111  10C1  1303               	bcf	3,6	;RP1=0, select bank0
  3112  10C2  00D1               	movwf	format_xint32@x
  3113  10C3  2456  160A  118A   	fcall	_format_xint32
  3114                           
  3115                           ;measure.c: 145: ser_puts("\r\nF3=");
  3116  10C6  30D5               	movlw	low (STR_32| (0+32768))
  3117  10C7  00A1               	movwf	ser_puts@s
  3118  10C8  3098               	movlw	high (STR_32| (0+32768))
  3119  10C9  00A2               	movwf	ser_puts@s+1
  3120  10CA  2423  160A  118A   	fcall	_ser_puts
  3121                           
  3122                           ;measure.c: 146: format_double(F3);
  3123  10CD  1683               	bsf	3,5	;RP0=1, select bank3
  3124  10CE  1703               	bsf	3,6	;RP1=1, select bank3
  3125  10CF  0817               	movf	(_F3+3)^(0+384),w
  3126  10D0  00C3               	movwf	(format_double@num+3)^(0+384)
  3127  10D1  0816               	movf	(_F3+2)^(0+384),w
  3128  10D2  00C2               	movwf	(format_double@num+2)^(0+384)
  3129  10D3  0815               	movf	(_F3+1)^(0+384),w
  3130  10D4  00C1               	movwf	(format_double@num+1)^(0+384)
  3131  10D5  0814               	movf	_F3^(0+384),w
  3132  10D6  00C0               	movwf	format_double@num^(0+384)
  3133  10D7  2474  160A  118A   	fcall	_format_double
  3134                           
  3135                           ;measure.c: 147: ser_putch(' ');
  3136  10DA  3020               	movlw	32
  3137  10DB  2440  160A  118A   	fcall	_ser_putch
  3138                           
  3139                           ;measure.c: 148: format_xint32(*(uint32_t*)&F3);
  3140  10DE  1703               	bsf	3,6	;RP1=1, select bank3
  3141  10DF  0817               	movf	(_F3+3)^(0+384),w
  3142  10E0  1283               	bcf	3,5	;RP0=0, select bank0
  3143  10E1  1303               	bcf	3,6	;RP1=0, select bank0
  3144  10E2  00D4               	movwf	format_xint32@x+3
  3145  10E3  1683               	bsf	3,5	;RP0=1, select bank3
  3146  10E4  1703               	bsf	3,6	;RP1=1, select bank3
  3147  10E5  0816               	movf	(_F3+2)^(0+384),w
  3148  10E6  1283               	bcf	3,5	;RP0=0, select bank0
  3149  10E7  1303               	bcf	3,6	;RP1=0, select bank0
  3150  10E8  00D3               	movwf	format_xint32@x+2
  3151  10E9  1683               	bsf	3,5	;RP0=1, select bank3
  3152  10EA  1703               	bsf	3,6	;RP1=1, select bank3
  3153  10EB  0815               	movf	(_F3+1)^(0+384),w
  3154  10EC  1283               	bcf	3,5	;RP0=0, select bank0
  3155  10ED  1303               	bcf	3,6	;RP1=0, select bank0
  3156  10EE  00D2               	movwf	format_xint32@x+1
  3157  10EF  1683               	bsf	3,5	;RP0=1, select bank3
  3158  10F0  1703               	bsf	3,6	;RP1=1, select bank3
  3159  10F1  0814               	movf	_F3^(0+384),w
  3160  10F2  1283               	bcf	3,5	;RP0=0, select bank0
  3161  10F3  1303               	bcf	3,6	;RP1=0, select bank0
  3162  10F4  00D1               	movwf	format_xint32@x
  3163  10F5  2456  160A  118A   	fcall	_format_xint32
  3164                           
  3165                           ;measure.c: 149: ser_puts("\r\nCCal=");
  3166  10F8  30BA               	movlw	low (STR_33| (0+32768))
  3167  10F9  00A1               	movwf	ser_puts@s
  3168  10FA  3098               	movlw	high (STR_33| (0+32768))
  3169  10FB  00A2               	movwf	ser_puts@s+1
  3170  10FC  2423  160A  118A   	fcall	_ser_puts
  3171                           
  3172                           ;measure.c: 150: format_double(CCal);
  3173  10FF  1683               	bsf	3,5	;RP0=1, select bank3
  3174  1100  1703               	bsf	3,6	;RP1=1, select bank3
  3175  1101  085A               	movf	(_CCal+3)^(0+384),w
  3176  1102  00C3               	movwf	(format_double@num+3)^(0+384)
  3177  1103  0859               	movf	(_CCal+2)^(0+384),w
  3178  1104  00C2               	movwf	(format_double@num+2)^(0+384)
  3179  1105  0858               	movf	(_CCal+1)^(0+384),w
  3180  1106  00C1               	movwf	(format_double@num+1)^(0+384)
  3181  1107  0857               	movf	_CCal^(0+384),w
  3182  1108  00C0               	movwf	format_double@num^(0+384)
  3183  1109  2474  160A  118A   	fcall	_format_double
  3184                           
  3185                           ;measure.c: 151: ser_putch(' ');
  3186  110C  3020               	movlw	32
  3187  110D  2440  160A  118A   	fcall	_ser_putch
  3188                           
  3189                           ;measure.c: 152: format_xint32(*(uint32_t*)&CCal);
  3190  1110  1703               	bsf	3,6	;RP1=1, select bank3
  3191  1111  085A               	movf	(_CCal+3)^(0+384),w
  3192  1112  1283               	bcf	3,5	;RP0=0, select bank0
  3193  1113  1303               	bcf	3,6	;RP1=0, select bank0
  3194  1114  00D4               	movwf	format_xint32@x+3
  3195  1115  1683               	bsf	3,5	;RP0=1, select bank3
  3196  1116  1703               	bsf	3,6	;RP1=1, select bank3
  3197  1117  0859               	movf	(_CCal+2)^(0+384),w
  3198  1118  1283               	bcf	3,5	;RP0=0, select bank0
  3199  1119  1303               	bcf	3,6	;RP1=0, select bank0
  3200  111A  00D3               	movwf	format_xint32@x+2
  3201  111B  1683               	bsf	3,5	;RP0=1, select bank3
  3202  111C  1703               	bsf	3,6	;RP1=1, select bank3
  3203  111D  0858               	movf	(_CCal+1)^(0+384),w
  3204  111E  1283               	bcf	3,5	;RP0=0, select bank0
  3205  111F  1303               	bcf	3,6	;RP1=0, select bank0
  3206  1120  00D2               	movwf	format_xint32@x+1
  3207  1121  1683               	bsf	3,5	;RP0=1, select bank3
  3208  1122  1703               	bsf	3,6	;RP1=1, select bank3
  3209  1123  0857               	movf	_CCal^(0+384),w
  3210  1124  1283               	bcf	3,5	;RP0=0, select bank0
  3211  1125  1303               	bcf	3,6	;RP1=0, select bank0
  3212  1126  00D1               	movwf	format_xint32@x
  3213  1127  2456  160A  118A   	fcall	_format_xint32
  3214                           
  3215                           ;measure.c: 153: ser_puts("\r\n");
  3216  112A  30F4               	movlw	low (STR_9| (0+32768))
  3217  112B  00A1               	movwf	ser_puts@s
  3218  112C  3098               	movlw	high (STR_9| (0+32768))
  3219  112D  00A2               	movwf	ser_puts@s+1
  3220  112E  2423  160A  118A   	fcall	_ser_puts
  3221                           
  3222                           ;measure.c: 157: if(F3 > F1)
  3223  1131  1683               	bsf	3,5	;RP0=1, select bank3
  3224  1132  1703               	bsf	3,6	;RP1=1, select bank3
  3225  1133  083F               	movf	(_F1+3)^(0+384),w
  3226  1134  1283               	bcf	3,5	;RP0=0, select bank0
  3227  1135  1303               	bcf	3,6	;RP1=0, select bank0
  3228  1136  00A4               	movwf	___flge@ff1+3
  3229  1137  1683               	bsf	3,5	;RP0=1, select bank3
  3230  1138  1703               	bsf	3,6	;RP1=1, select bank3
  3231  1139  083E               	movf	(_F1+2)^(0+384),w
  3232  113A  1283               	bcf	3,5	;RP0=0, select bank0
  3233  113B  1303               	bcf	3,6	;RP1=0, select bank0
  3234  113C  00A3               	movwf	___flge@ff1+2
  3235  113D  1683               	bsf	3,5	;RP0=1, select bank3
  3236  113E  1703               	bsf	3,6	;RP1=1, select bank3
  3237  113F  083D               	movf	(_F1+1)^(0+384),w
  3238  1140  1283               	bcf	3,5	;RP0=0, select bank0
  3239  1141  1303               	bcf	3,6	;RP1=0, select bank0
  3240  1142  00A2               	movwf	___flge@ff1+1
  3241  1143  1683               	bsf	3,5	;RP0=1, select bank3
  3242  1144  1703               	bsf	3,6	;RP1=1, select bank3
  3243  1145  083C               	movf	_F1^(0+384),w
  3244  1146  1283               	bcf	3,5	;RP0=0, select bank0
  3245  1147  1303               	bcf	3,6	;RP1=0, select bank0
  3246  1148  00A1               	movwf	___flge@ff1
  3247  1149  1683               	bsf	3,5	;RP0=1, select bank3
  3248  114A  1703               	bsf	3,6	;RP1=1, select bank3
  3249  114B  0817               	movf	(_F3+3)^(0+384),w
  3250  114C  1283               	bcf	3,5	;RP0=0, select bank0
  3251  114D  1303               	bcf	3,6	;RP1=0, select bank0
  3252  114E  00A8               	movwf	___flge@ff2+3
  3253  114F  1683               	bsf	3,5	;RP0=1, select bank3
  3254  1150  1703               	bsf	3,6	;RP1=1, select bank3
  3255  1151  0816               	movf	(_F3+2)^(0+384),w
  3256  1152  1283               	bcf	3,5	;RP0=0, select bank0
  3257  1153  1303               	bcf	3,6	;RP1=0, select bank0
  3258  1154  00A7               	movwf	___flge@ff2+2
  3259  1155  1683               	bsf	3,5	;RP0=1, select bank3
  3260  1156  1703               	bsf	3,6	;RP1=1, select bank3
  3261  1157  0815               	movf	(_F3+1)^(0+384),w
  3262  1158  1283               	bcf	3,5	;RP0=0, select bank0
  3263  1159  1303               	bcf	3,6	;RP1=0, select bank0
  3264  115A  00A6               	movwf	___flge@ff2+1
  3265  115B  1683               	bsf	3,5	;RP0=1, select bank3
  3266  115C  1703               	bsf	3,6	;RP1=1, select bank3
  3267  115D  0814               	movf	_F3^(0+384),w
  3268  115E  1283               	bcf	3,5	;RP0=0, select bank0
  3269  115F  1303               	bcf	3,6	;RP1=0, select bank0
  3270  1160  00A5               	movwf	___flge@ff2
  3271  1161  120A  158A  2730  160A  118A  	fcall	___flge
  3272  1166  1803               	btfsc	3,0
  3273  1167  2972               	goto	l4738
  3274                           
  3275                           ;measure.c: 158: F3 = F1;
  3276  1168  1683               	bsf	3,5	;RP0=1, select bank3
  3277  1169  1703               	bsf	3,6	;RP1=1, select bank3
  3278  116A  083F               	movf	(_F1+3)^(0+384),w
  3279  116B  0097               	movwf	(_F3+3)^(0+384)
  3280  116C  083E               	movf	(_F1+2)^(0+384),w
  3281  116D  0096               	movwf	(_F3+2)^(0+384)
  3282  116E  083D               	movf	(_F1+1)^(0+384),w
  3283  116F  0095               	movwf	(_F3+1)^(0+384)
  3284  1170  083C               	movf	_F1^(0+384),w
  3285  1171  0094               	movwf	_F3^(0+384)
  3286  1172                     l4738:	
  3287                           
  3288                           ;measure.c: 160: Cin = F2 * F2 * (F1 * F1 - F3 * F3) * CCal;
  3289  1172  1683               	bsf	3,5	;RP0=1, select bank3
  3290  1173  1703               	bsf	3,6	;RP1=1, select bank3
  3291  1174  0817               	movf	(_F3+3)^(0+384),w
  3292  1175  1283               	bcf	3,5	;RP0=0, select bank0
  3293  1176  1303               	bcf	3,6	;RP1=0, select bank0
  3294  1177  00C1               	movwf	___flmul@f1+3
  3295  1178  1683               	bsf	3,5	;RP0=1, select bank3
  3296  1179  1703               	bsf	3,6	;RP1=1, select bank3
  3297  117A  0816               	movf	(_F3+2)^(0+384),w
  3298  117B  1283               	bcf	3,5	;RP0=0, select bank0
  3299  117C  1303               	bcf	3,6	;RP1=0, select bank0
  3300  117D  00C0               	movwf	___flmul@f1+2
  3301  117E  1683               	bsf	3,5	;RP0=1, select bank3
  3302  117F  1703               	bsf	3,6	;RP1=1, select bank3
  3303  1180  0815               	movf	(_F3+1)^(0+384),w
  3304  1181  1283               	bcf	3,5	;RP0=0, select bank0
  3305  1182  1303               	bcf	3,6	;RP1=0, select bank0
  3306  1183  00BF               	movwf	___flmul@f1+1
  3307  1184  1683               	bsf	3,5	;RP0=1, select bank3
  3308  1185  1703               	bsf	3,6	;RP1=1, select bank3
  3309  1186  0814               	movf	_F3^(0+384),w
  3310  1187  1283               	bcf	3,5	;RP0=0, select bank0
  3311  1188  1303               	bcf	3,6	;RP1=0, select bank0
  3312  1189  00BE               	movwf	___flmul@f1
  3313  118A  1683               	bsf	3,5	;RP0=1, select bank3
  3314  118B  1703               	bsf	3,6	;RP1=1, select bank3
  3315  118C  0817               	movf	(_F3+3)^(0+384),w
  3316  118D  1283               	bcf	3,5	;RP0=0, select bank0
  3317  118E  1303               	bcf	3,6	;RP1=0, select bank0
  3318  118F  00C5               	movwf	___flmul@f2+3
  3319  1190  1683               	bsf	3,5	;RP0=1, select bank3
  3320  1191  1703               	bsf	3,6	;RP1=1, select bank3
  3321  1192  0816               	movf	(_F3+2)^(0+384),w
  3322  1193  1283               	bcf	3,5	;RP0=0, select bank0
  3323  1194  1303               	bcf	3,6	;RP1=0, select bank0
  3324  1195  00C4               	movwf	___flmul@f2+2
  3325  1196  1683               	bsf	3,5	;RP0=1, select bank3
  3326  1197  1703               	bsf	3,6	;RP1=1, select bank3
  3327  1198  0815               	movf	(_F3+1)^(0+384),w
  3328  1199  1283               	bcf	3,5	;RP0=0, select bank0
  3329  119A  1303               	bcf	3,6	;RP1=0, select bank0
  3330  119B  00C3               	movwf	___flmul@f2+1
  3331  119C  1683               	bsf	3,5	;RP0=1, select bank3
  3332  119D  1703               	bsf	3,6	;RP1=1, select bank3
  3333  119E  0814               	movf	_F3^(0+384),w
  3334  119F  1283               	bcf	3,5	;RP0=0, select bank0
  3335  11A0  1303               	bcf	3,6	;RP1=0, select bank0
  3336  11A1  00C2               	movwf	___flmul@f2
  3337  11A2  120A  158A  2698  160A  118A  	fcall	___flmul
  3338  11A7  0841               	movf	?___flmul+3,w
  3339  11A8  00E3               	movwf	___flsub@f2+3
  3340  11A9  0840               	movf	?___flmul+2,w
  3341  11AA  00E2               	movwf	___flsub@f2+2
  3342  11AB  083F               	movf	?___flmul+1,w
  3343  11AC  00E1               	movwf	___flsub@f2+1
  3344  11AD  083E               	movf	?___flmul,w
  3345  11AE  00E0               	movwf	___flsub@f2
  3346  11AF  1683               	bsf	3,5	;RP0=1, select bank3
  3347  11B0  1703               	bsf	3,6	;RP1=1, select bank3
  3348  11B1  083F               	movf	(_F1+3)^(0+384),w
  3349  11B2  1283               	bcf	3,5	;RP0=0, select bank0
  3350  11B3  1303               	bcf	3,6	;RP1=0, select bank0
  3351  11B4  00C1               	movwf	___flmul@f1+3
  3352  11B5  1683               	bsf	3,5	;RP0=1, select bank3
  3353  11B6  1703               	bsf	3,6	;RP1=1, select bank3
  3354  11B7  083E               	movf	(_F1+2)^(0+384),w
  3355  11B8  1283               	bcf	3,5	;RP0=0, select bank0
  3356  11B9  1303               	bcf	3,6	;RP1=0, select bank0
  3357  11BA  00C0               	movwf	___flmul@f1+2
  3358  11BB  1683               	bsf	3,5	;RP0=1, select bank3
  3359  11BC  1703               	bsf	3,6	;RP1=1, select bank3
  3360  11BD  083D               	movf	(_F1+1)^(0+384),w
  3361  11BE  1283               	bcf	3,5	;RP0=0, select bank0
  3362  11BF  1303               	bcf	3,6	;RP1=0, select bank0
  3363  11C0  00BF               	movwf	___flmul@f1+1
  3364  11C1  1683               	bsf	3,5	;RP0=1, select bank3
  3365  11C2  1703               	bsf	3,6	;RP1=1, select bank3
  3366  11C3  083C               	movf	_F1^(0+384),w
  3367  11C4  1283               	bcf	3,5	;RP0=0, select bank0
  3368  11C5  1303               	bcf	3,6	;RP1=0, select bank0
  3369  11C6  00BE               	movwf	___flmul@f1
  3370  11C7  1683               	bsf	3,5	;RP0=1, select bank3
  3371  11C8  1703               	bsf	3,6	;RP1=1, select bank3
  3372  11C9  083F               	movf	(_F1+3)^(0+384),w
  3373  11CA  1283               	bcf	3,5	;RP0=0, select bank0
  3374  11CB  1303               	bcf	3,6	;RP1=0, select bank0
  3375  11CC  00C5               	movwf	___flmul@f2+3
  3376  11CD  1683               	bsf	3,5	;RP0=1, select bank3
  3377  11CE  1703               	bsf	3,6	;RP1=1, select bank3
  3378  11CF  083E               	movf	(_F1+2)^(0+384),w
  3379  11D0  1283               	bcf	3,5	;RP0=0, select bank0
  3380  11D1  1303               	bcf	3,6	;RP1=0, select bank0
  3381  11D2  00C4               	movwf	___flmul@f2+2
  3382  11D3  1683               	bsf	3,5	;RP0=1, select bank3
  3383  11D4  1703               	bsf	3,6	;RP1=1, select bank3
  3384  11D5  083D               	movf	(_F1+1)^(0+384),w
  3385  11D6  1283               	bcf	3,5	;RP0=0, select bank0
  3386  11D7  1303               	bcf	3,6	;RP1=0, select bank0
  3387  11D8  00C3               	movwf	___flmul@f2+1
  3388  11D9  1683               	bsf	3,5	;RP0=1, select bank3
  3389  11DA  1703               	bsf	3,6	;RP1=1, select bank3
  3390  11DB  083C               	movf	_F1^(0+384),w
  3391  11DC  1283               	bcf	3,5	;RP0=0, select bank0
  3392  11DD  1303               	bcf	3,6	;RP1=0, select bank0
  3393  11DE  00C2               	movwf	___flmul@f2
  3394  11DF  120A  158A  2698  160A  118A  	fcall	___flmul
  3395  11E4  0841               	movf	?___flmul+3,w
  3396  11E5  00E7               	movwf	___flsub@f1+3
  3397  11E6  0840               	movf	?___flmul+2,w
  3398  11E7  00E6               	movwf	___flsub@f1+2
  3399  11E8  083F               	movf	?___flmul+1,w
  3400  11E9  00E5               	movwf	___flsub@f1+1
  3401  11EA  083E               	movf	?___flmul,w
  3402  11EB  00E4               	movwf	___flsub@f1
  3403  11EC  271A  160A  118A   	fcall	___flsub
  3404  11EF  0863               	movf	?___flsub+3,w
  3405  11F0  1703               	bsf	3,6	;RP1=1, select bank2
  3406  11F1  00B3               	movwf	(_measure_capacitance$1009+3)^(0+256)
  3407  11F2  1303               	bcf	3,6	;RP1=0, select bank0
  3408  11F3  0862               	movf	?___flsub+2,w
  3409  11F4  1703               	bsf	3,6	;RP1=1, select bank2
  3410  11F5  00B2               	movwf	(_measure_capacitance$1009+2)^(0+256)
  3411  11F6  1303               	bcf	3,6	;RP1=0, select bank0
  3412  11F7  0861               	movf	?___flsub+1,w
  3413  11F8  1703               	bsf	3,6	;RP1=1, select bank2
  3414  11F9  00B1               	movwf	(_measure_capacitance$1009+1)^(0+256)
  3415  11FA  1303               	bcf	3,6	;RP1=0, select bank0
  3416  11FB  0860               	movf	?___flsub,w
  3417  11FC  1703               	bsf	3,6	;RP1=1, select bank2
  3418  11FD  00B0               	movwf	_measure_capacitance$1009^(0+256)
  3419                           
  3420                           ;measure.c: 160: Cin = F2 * F2 * (F1 * F1 - F3 * F3) * CCal;
  3421  11FE  1683               	bsf	3,5	;RP0=1, select bank3
  3422  11FF  0813               	movf	(_F2+3)^(0+384),w
  3423  1200  1283               	bcf	3,5	;RP0=0, select bank0
  3424  1201  1303               	bcf	3,6	;RP1=0, select bank0
  3425  1202  00C1               	movwf	___flmul@f1+3
  3426  1203  1683               	bsf	3,5	;RP0=1, select bank3
  3427  1204  1703               	bsf	3,6	;RP1=1, select bank3
  3428  1205  0812               	movf	(_F2+2)^(0+384),w
  3429  1206  1283               	bcf	3,5	;RP0=0, select bank0
  3430  1207  1303               	bcf	3,6	;RP1=0, select bank0
  3431  1208  00C0               	movwf	___flmul@f1+2
  3432  1209  1683               	bsf	3,5	;RP0=1, select bank3
  3433  120A  1703               	bsf	3,6	;RP1=1, select bank3
  3434  120B  0811               	movf	(_F2+1)^(0+384),w
  3435  120C  1283               	bcf	3,5	;RP0=0, select bank0
  3436  120D  1303               	bcf	3,6	;RP1=0, select bank0
  3437  120E  00BF               	movwf	___flmul@f1+1
  3438  120F  1683               	bsf	3,5	;RP0=1, select bank3
  3439  1210  1703               	bsf	3,6	;RP1=1, select bank3
  3440  1211  0810               	movf	_F2^(0+384),w
  3441  1212  1283               	bcf	3,5	;RP0=0, select bank0
  3442  1213  1303               	bcf	3,6	;RP1=0, select bank0
  3443  1214  00BE               	movwf	___flmul@f1
  3444  1215  1703               	bsf	3,6	;RP1=1, select bank2
  3445  1216  0833               	movf	(_measure_capacitance$1009+3)^(0+256),w
  3446  1217  1303               	bcf	3,6	;RP1=0, select bank0
  3447  1218  00C5               	movwf	___flmul@f2+3
  3448  1219  1703               	bsf	3,6	;RP1=1, select bank2
  3449  121A  0832               	movf	(_measure_capacitance$1009+2)^(0+256),w
  3450  121B  1303               	bcf	3,6	;RP1=0, select bank0
  3451  121C  00C4               	movwf	___flmul@f2+2
  3452  121D  1703               	bsf	3,6	;RP1=1, select bank2
  3453  121E  0831               	movf	(_measure_capacitance$1009+1)^(0+256),w
  3454  121F  1303               	bcf	3,6	;RP1=0, select bank0
  3455  1220  00C3               	movwf	___flmul@f2+1
  3456  1221  1703               	bsf	3,6	;RP1=1, select bank2
  3457  1222  0830               	movf	_measure_capacitance$1009^(0+256),w
  3458  1223  1303               	bcf	3,6	;RP1=0, select bank0
  3459  1224  00C2               	movwf	___flmul@f2
  3460  1225  120A  158A  2698  160A  118A  	fcall	___flmul
  3461  122A  0841               	movf	?___flmul+3,w
  3462  122B  1703               	bsf	3,6	;RP1=1, select bank2
  3463  122C  00B7               	movwf	(_measure_capacitance$1010+3)^(0+256)
  3464  122D  1303               	bcf	3,6	;RP1=0, select bank0
  3465  122E  0840               	movf	?___flmul+2,w
  3466  122F  1703               	bsf	3,6	;RP1=1, select bank2
  3467  1230  00B6               	movwf	(_measure_capacitance$1010+2)^(0+256)
  3468  1231  1303               	bcf	3,6	;RP1=0, select bank0
  3469  1232  083F               	movf	?___flmul+1,w
  3470  1233  1703               	bsf	3,6	;RP1=1, select bank2
  3471  1234  00B5               	movwf	(_measure_capacitance$1010+1)^(0+256)
  3472  1235  1303               	bcf	3,6	;RP1=0, select bank0
  3473  1236  083E               	movf	?___flmul,w
  3474  1237  1703               	bsf	3,6	;RP1=1, select bank2
  3475  1238  00B4               	movwf	_measure_capacitance$1010^(0+256)
  3476                           
  3477                           ;measure.c: 160: Cin = F2 * F2 * (F1 * F1 - F3 * F3) * CCal;
  3478  1239  1683               	bsf	3,5	;RP0=1, select bank3
  3479  123A  0813               	movf	(_F2+3)^(0+384),w
  3480  123B  1283               	bcf	3,5	;RP0=0, select bank0
  3481  123C  1303               	bcf	3,6	;RP1=0, select bank0
  3482  123D  00C1               	movwf	___flmul@f1+3
  3483  123E  1683               	bsf	3,5	;RP0=1, select bank3
  3484  123F  1703               	bsf	3,6	;RP1=1, select bank3
  3485  1240  0812               	movf	(_F2+2)^(0+384),w
  3486  1241  1283               	bcf	3,5	;RP0=0, select bank0
  3487  1242  1303               	bcf	3,6	;RP1=0, select bank0
  3488  1243  00C0               	movwf	___flmul@f1+2
  3489  1244  1683               	bsf	3,5	;RP0=1, select bank3
  3490  1245  1703               	bsf	3,6	;RP1=1, select bank3
  3491  1246  0811               	movf	(_F2+1)^(0+384),w
  3492  1247  1283               	bcf	3,5	;RP0=0, select bank0
  3493  1248  1303               	bcf	3,6	;RP1=0, select bank0
  3494  1249  00BF               	movwf	___flmul@f1+1
  3495  124A  1683               	bsf	3,5	;RP0=1, select bank3
  3496  124B  1703               	bsf	3,6	;RP1=1, select bank3
  3497  124C  0810               	movf	_F2^(0+384),w
  3498  124D  1283               	bcf	3,5	;RP0=0, select bank0
  3499  124E  1303               	bcf	3,6	;RP1=0, select bank0
  3500  124F  00BE               	movwf	___flmul@f1
  3501  1250  1703               	bsf	3,6	;RP1=1, select bank2
  3502  1251  0837               	movf	(_measure_capacitance$1010+3)^(0+256),w
  3503  1252  1303               	bcf	3,6	;RP1=0, select bank0
  3504  1253  00C5               	movwf	___flmul@f2+3
  3505  1254  1703               	bsf	3,6	;RP1=1, select bank2
  3506  1255  0836               	movf	(_measure_capacitance$1010+2)^(0+256),w
  3507  1256  1303               	bcf	3,6	;RP1=0, select bank0
  3508  1257  00C4               	movwf	___flmul@f2+2
  3509  1258  1703               	bsf	3,6	;RP1=1, select bank2
  3510  1259  0835               	movf	(_measure_capacitance$1010+1)^(0+256),w
  3511  125A  1303               	bcf	3,6	;RP1=0, select bank0
  3512  125B  00C3               	movwf	___flmul@f2+1
  3513  125C  1703               	bsf	3,6	;RP1=1, select bank2
  3514  125D  0834               	movf	_measure_capacitance$1010^(0+256),w
  3515  125E  1303               	bcf	3,6	;RP1=0, select bank0
  3516  125F  00C2               	movwf	___flmul@f2
  3517  1260  120A  158A  2698  160A  118A  	fcall	___flmul
  3518  1265  0841               	movf	?___flmul+3,w
  3519  1266  1703               	bsf	3,6	;RP1=1, select bank2
  3520  1267  00BB               	movwf	(_measure_capacitance$1011+3)^(0+256)
  3521  1268  1303               	bcf	3,6	;RP1=0, select bank0
  3522  1269  0840               	movf	?___flmul+2,w
  3523  126A  1703               	bsf	3,6	;RP1=1, select bank2
  3524  126B  00BA               	movwf	(_measure_capacitance$1011+2)^(0+256)
  3525  126C  1303               	bcf	3,6	;RP1=0, select bank0
  3526  126D  083F               	movf	?___flmul+1,w
  3527  126E  1703               	bsf	3,6	;RP1=1, select bank2
  3528  126F  00B9               	movwf	(_measure_capacitance$1011+1)^(0+256)
  3529  1270  1303               	bcf	3,6	;RP1=0, select bank0
  3530  1271  083E               	movf	?___flmul,w
  3531  1272  1703               	bsf	3,6	;RP1=1, select bank2
  3532  1273  00B8               	movwf	_measure_capacitance$1011^(0+256)
  3533                           
  3534                           ;measure.c: 160: Cin = F2 * F2 * (F1 * F1 - F3 * F3) * CCal;
  3535  1274  1683               	bsf	3,5	;RP0=1, select bank3
  3536  1275  085A               	movf	(_CCal+3)^(0+384),w
  3537  1276  1283               	bcf	3,5	;RP0=0, select bank0
  3538  1277  1303               	bcf	3,6	;RP1=0, select bank0
  3539  1278  00C1               	movwf	___flmul@f1+3
  3540  1279  1683               	bsf	3,5	;RP0=1, select bank3
  3541  127A  1703               	bsf	3,6	;RP1=1, select bank3
  3542  127B  0859               	movf	(_CCal+2)^(0+384),w
  3543  127C  1283               	bcf	3,5	;RP0=0, select bank0
  3544  127D  1303               	bcf	3,6	;RP1=0, select bank0
  3545  127E  00C0               	movwf	___flmul@f1+2
  3546  127F  1683               	bsf	3,5	;RP0=1, select bank3
  3547  1280  1703               	bsf	3,6	;RP1=1, select bank3
  3548  1281  0858               	movf	(_CCal+1)^(0+384),w
  3549  1282  1283               	bcf	3,5	;RP0=0, select bank0
  3550  1283  1303               	bcf	3,6	;RP1=0, select bank0
  3551  1284  00BF               	movwf	___flmul@f1+1
  3552  1285  1683               	bsf	3,5	;RP0=1, select bank3
  3553  1286  1703               	bsf	3,6	;RP1=1, select bank3
  3554  1287  0857               	movf	_CCal^(0+384),w
  3555  1288  1283               	bcf	3,5	;RP0=0, select bank0
  3556  1289  1303               	bcf	3,6	;RP1=0, select bank0
  3557  128A  00BE               	movwf	___flmul@f1
  3558  128B  1703               	bsf	3,6	;RP1=1, select bank2
  3559  128C  083B               	movf	(_measure_capacitance$1011+3)^(0+256),w
  3560  128D  1303               	bcf	3,6	;RP1=0, select bank0
  3561  128E  00C5               	movwf	___flmul@f2+3
  3562  128F  1703               	bsf	3,6	;RP1=1, select bank2
  3563  1290  083A               	movf	(_measure_capacitance$1011+2)^(0+256),w
  3564  1291  1303               	bcf	3,6	;RP1=0, select bank0
  3565  1292  00C4               	movwf	___flmul@f2+2
  3566  1293  1703               	bsf	3,6	;RP1=1, select bank2
  3567  1294  0839               	movf	(_measure_capacitance$1011+1)^(0+256),w
  3568  1295  1303               	bcf	3,6	;RP1=0, select bank0
  3569  1296  00C3               	movwf	___flmul@f2+1
  3570  1297  1703               	bsf	3,6	;RP1=1, select bank2
  3571  1298  0838               	movf	_measure_capacitance$1011^(0+256),w
  3572  1299  1303               	bcf	3,6	;RP1=0, select bank0
  3573  129A  00C2               	movwf	___flmul@f2
  3574  129B  120A  158A  2698  160A  118A  	fcall	___flmul
  3575  12A0  0841               	movf	?___flmul+3,w
  3576  12A1  1703               	bsf	3,6	;RP1=1, select bank2
  3577  12A2  00C2               	movwf	(measure_capacitance@Cin+3)^(0+256)
  3578  12A3  1303               	bcf	3,6	;RP1=0, select bank0
  3579  12A4  0840               	movf	?___flmul+2,w
  3580  12A5  1703               	bsf	3,6	;RP1=1, select bank2
  3581  12A6  00C1               	movwf	(measure_capacitance@Cin+2)^(0+256)
  3582  12A7  1303               	bcf	3,6	;RP1=0, select bank0
  3583  12A8  083F               	movf	?___flmul+1,w
  3584  12A9  1703               	bsf	3,6	;RP1=1, select bank2
  3585  12AA  00C0               	movwf	(measure_capacitance@Cin+1)^(0+256)
  3586  12AB  1303               	bcf	3,6	;RP1=0, select bank0
  3587  12AC  083E               	movf	?___flmul,w
  3588  12AD  1703               	bsf	3,6	;RP1=1, select bank2
  3589  12AE  00BF               	movwf	measure_capacitance@Cin^(0+256)
  3590                           
  3591                           ;measure.c: 164: ser_puts("Cin=");
  3592  12AF  30E1               	movlw	low (STR_35| (0+32768))
  3593  12B0  1303               	bcf	3,6	;RP1=0, select bank0
  3594  12B1  00A1               	movwf	ser_puts@s
  3595  12B2  3098               	movlw	high (STR_35| (0+32768))
  3596  12B3  00A2               	movwf	ser_puts@s+1
  3597  12B4  2423  160A  118A   	fcall	_ser_puts
  3598                           
  3599                           ;measure.c: 165: format_double(Cin);
  3600  12B7  1703               	bsf	3,6	;RP1=1, select bank2
  3601  12B8  0842               	movf	(measure_capacitance@Cin+3)^(0+256),w
  3602  12B9  1683               	bsf	3,5	;RP0=1, select bank3
  3603  12BA  00C3               	movwf	(format_double@num+3)^(0+384)
  3604  12BB  1283               	bcf	3,5	;RP0=0, select bank2
  3605  12BC  0841               	movf	(measure_capacitance@Cin+2)^(0+256),w
  3606  12BD  1683               	bsf	3,5	;RP0=1, select bank3
  3607  12BE  00C2               	movwf	(format_double@num+2)^(0+384)
  3608  12BF  1283               	bcf	3,5	;RP0=0, select bank2
  3609  12C0  0840               	movf	(measure_capacitance@Cin+1)^(0+256),w
  3610  12C1  1683               	bsf	3,5	;RP0=1, select bank3
  3611  12C2  00C1               	movwf	(format_double@num+1)^(0+384)
  3612  12C3  1283               	bcf	3,5	;RP0=0, select bank2
  3613  12C4  083F               	movf	measure_capacitance@Cin^(0+256),w
  3614  12C5  1683               	bsf	3,5	;RP0=1, select bank3
  3615  12C6  00C0               	movwf	format_double@num^(0+384)
  3616  12C7  2474  160A  118A   	fcall	_format_double
  3617                           
  3618                           ;measure.c: 166: ser_putch(' ');
  3619  12CA  3020               	movlw	32
  3620  12CB  2440  160A  118A   	fcall	_ser_putch
  3621                           
  3622                           ;measure.c: 167: format_xint32(*(uint32_t*)&Cin);
  3623  12CE  1283               	bcf	3,5	;RP0=0, select bank2
  3624  12CF  1703               	bsf	3,6	;RP1=1, select bank2
  3625  12D0  0842               	movf	(measure_capacitance@Cin+3)^(0+256),w
  3626  12D1  1303               	bcf	3,6	;RP1=0, select bank0
  3627  12D2  00D4               	movwf	format_xint32@x+3
  3628  12D3  1703               	bsf	3,6	;RP1=1, select bank2
  3629  12D4  0841               	movf	(measure_capacitance@Cin+2)^(0+256),w
  3630  12D5  1303               	bcf	3,6	;RP1=0, select bank0
  3631  12D6  00D3               	movwf	format_xint32@x+2
  3632  12D7  1703               	bsf	3,6	;RP1=1, select bank2
  3633  12D8  0840               	movf	(measure_capacitance@Cin+1)^(0+256),w
  3634  12D9  1303               	bcf	3,6	;RP1=0, select bank0
  3635  12DA  00D2               	movwf	format_xint32@x+1
  3636  12DB  1703               	bsf	3,6	;RP1=1, select bank2
  3637  12DC  083F               	movf	measure_capacitance@Cin^(0+256),w
  3638  12DD  1303               	bcf	3,6	;RP1=0, select bank0
  3639  12DE  00D1               	movwf	format_xint32@x
  3640  12DF  2456  160A  118A   	fcall	_format_xint32
  3641                           
  3642                           ;measure.c: 168: ser_puts("\r\n");
  3643  12E2  30F4               	movlw	low (STR_9| (0+32768))
  3644  12E3  00A1               	movwf	ser_puts@s
  3645  12E4  3098               	movlw	high (STR_9| (0+32768))
  3646  12E5  00A2               	movwf	ser_puts@s+1
  3647  12E6  2423               	fcall	_ser_puts
  3648                           
  3649                           ;measure.c: 170: if(Cin > 999) {
  3650  12E7  3044               	movlw	68
  3651  12E8  00A4               	movwf	___flge@ff1+3
  3652  12E9  3079               	movlw	121
  3653  12EA  00A3               	movwf	___flge@ff1+2
  3654  12EB  30C0               	movlw	192
  3655  12EC  00A2               	movwf	___flge@ff1+1
  3656  12ED  01A1               	clrf	___flge@ff1
  3657  12EE  1703               	bsf	3,6	;RP1=1, select bank2
  3658  12EF  0842               	movf	(measure_capacitance@Cin+3)^(0+256),w
  3659  12F0  1303               	bcf	3,6	;RP1=0, select bank0
  3660  12F1  00A8               	movwf	___flge@ff2+3
  3661  12F2  1703               	bsf	3,6	;RP1=1, select bank2
  3662  12F3  0841               	movf	(measure_capacitance@Cin+2)^(0+256),w
  3663  12F4  1303               	bcf	3,6	;RP1=0, select bank0
  3664  12F5  00A7               	movwf	___flge@ff2+2
  3665  12F6  1703               	bsf	3,6	;RP1=1, select bank2
  3666  12F7  0840               	movf	(measure_capacitance@Cin+1)^(0+256),w
  3667  12F8  1303               	bcf	3,6	;RP1=0, select bank0
  3668  12F9  00A6               	movwf	___flge@ff2+1
  3669  12FA  1703               	bsf	3,6	;RP1=1, select bank2
  3670  12FB  083F               	movf	measure_capacitance@Cin^(0+256),w
  3671  12FC  1303               	bcf	3,6	;RP1=0, select bank0
  3672  12FD  00A5               	movwf	___flge@ff2
  3673  12FE  120A  158A  2730  160A  118A  	fcall	___flge
  3674  1303  1803               	btfsc	3,0
  3675  1304  2BC4               	goto	l4774
  3676                           
  3677                           ;measure.c: 171: if(Cin > (999e+03l)) {
  3678  1305  3049               	movlw	73
  3679  1306  00A4               	movwf	___flge@ff1+3
  3680  1307  3073               	movlw	115
  3681  1308  00A3               	movwf	___flge@ff1+2
  3682  1309  30E5               	movlw	229
  3683  130A  00A2               	movwf	___flge@ff1+1
  3684  130B  3080               	movlw	128
  3685  130C  00A1               	movwf	___flge@ff1
  3686  130D  1703               	bsf	3,6	;RP1=1, select bank2
  3687  130E  0842               	movf	(measure_capacitance@Cin+3)^(0+256),w
  3688  130F  1303               	bcf	3,6	;RP1=0, select bank0
  3689  1310  00A8               	movwf	___flge@ff2+3
  3690  1311  1703               	bsf	3,6	;RP1=1, select bank2
  3691  1312  0841               	movf	(measure_capacitance@Cin+2)^(0+256),w
  3692  1313  1303               	bcf	3,6	;RP1=0, select bank0
  3693  1314  00A7               	movwf	___flge@ff2+2
  3694  1315  1703               	bsf	3,6	;RP1=1, select bank2
  3695  1316  0840               	movf	(measure_capacitance@Cin+1)^(0+256),w
  3696  1317  1303               	bcf	3,6	;RP1=0, select bank0
  3697  1318  00A6               	movwf	___flge@ff2+1
  3698  1319  1703               	bsf	3,6	;RP1=1, select bank2
  3699  131A  083F               	movf	measure_capacitance@Cin^(0+256),w
  3700  131B  1303               	bcf	3,6	;RP1=0, select bank0
  3701  131C  00A5               	movwf	___flge@ff2
  3702  131D  120A  158A  2730  160A  118A  	fcall	___flge
  3703  1322  1803               	btfsc	3,0
  3704  1323  2B9A               	goto	l4770
  3705                           
  3706                           ;measure.c: 172: if(Cin > (999e+06l)) {
  3707  1324  304E               	movlw	78
  3708  1325  00A4               	movwf	___flge@ff1+3
  3709  1326  306E               	movlw	110
  3710  1327  00A3               	movwf	___flge@ff1+2
  3711  1328  302E               	movlw	46
  3712  1329  00A2               	movwf	___flge@ff1+1
  3713  132A  301F               	movlw	31
  3714  132B  00A1               	movwf	___flge@ff1
  3715  132C  1703               	bsf	3,6	;RP1=1, select bank2
  3716  132D  0842               	movf	(measure_capacitance@Cin+3)^(0+256),w
  3717  132E  1303               	bcf	3,6	;RP1=0, select bank0
  3718  132F  00A8               	movwf	___flge@ff2+3
  3719  1330  1703               	bsf	3,6	;RP1=1, select bank2
  3720  1331  0841               	movf	(measure_capacitance@Cin+2)^(0+256),w
  3721  1332  1303               	bcf	3,6	;RP1=0, select bank0
  3722  1333  00A7               	movwf	___flge@ff2+2
  3723  1334  1703               	bsf	3,6	;RP1=1, select bank2
  3724  1335  0840               	movf	(measure_capacitance@Cin+1)^(0+256),w
  3725  1336  1303               	bcf	3,6	;RP1=0, select bank0
  3726  1337  00A6               	movwf	___flge@ff2+1
  3727  1338  1703               	bsf	3,6	;RP1=1, select bank2
  3728  1339  083F               	movf	measure_capacitance@Cin^(0+256),w
  3729  133A  1303               	bcf	3,6	;RP1=0, select bank0
  3730  133B  00A5               	movwf	___flge@ff2
  3731  133C  120A  158A  2730  160A  118A  	fcall	___flge
  3732  1341  1803               	btfsc	3,0
  3733  1342  2B6F               	goto	l4766
  3734                           
  3735                           ;measure.c: 173: Cin = Cin / (1e+09);
  3736  1343  304E               	movlw	78
  3737  1344  00AE               	movwf	___fldiv@f2+3
  3738  1345  306E               	movlw	110
  3739  1346  00AD               	movwf	___fldiv@f2+2
  3740  1347  306B               	movlw	107
  3741  1348  00AC               	movwf	___fldiv@f2+1
  3742  1349  3028               	movlw	40
  3743  134A  00AB               	movwf	___fldiv@f2
  3744  134B  1703               	bsf	3,6	;RP1=1, select bank2
  3745  134C  0842               	movf	(measure_capacitance@Cin+3)^(0+256),w
  3746  134D  1303               	bcf	3,6	;RP1=0, select bank0
  3747  134E  00B2               	movwf	___fldiv@f1+3
  3748  134F  1703               	bsf	3,6	;RP1=1, select bank2
  3749  1350  0841               	movf	(measure_capacitance@Cin+2)^(0+256),w
  3750  1351  1303               	bcf	3,6	;RP1=0, select bank0
  3751  1352  00B1               	movwf	___fldiv@f1+2
  3752  1353  1703               	bsf	3,6	;RP1=1, select bank2
  3753  1354  0840               	movf	(measure_capacitance@Cin+1)^(0+256),w
  3754  1355  1303               	bcf	3,6	;RP1=0, select bank0
  3755  1356  00B0               	movwf	___fldiv@f1+1
  3756  1357  1703               	bsf	3,6	;RP1=1, select bank2
  3757  1358  083F               	movf	measure_capacitance@Cin^(0+256),w
  3758  1359  1303               	bcf	3,6	;RP1=0, select bank0
  3759  135A  00AF               	movwf	___fldiv@f1
  3760  135B  262D  160A  118A   	fcall	___fldiv
  3761  135E  082E               	movf	?___fldiv+3,w
  3762  135F  1703               	bsf	3,6	;RP1=1, select bank2
  3763  1360  00C2               	movwf	(measure_capacitance@Cin+3)^(0+256)
  3764  1361  1303               	bcf	3,6	;RP1=0, select bank0
  3765  1362  082D               	movf	?___fldiv+2,w
  3766  1363  1703               	bsf	3,6	;RP1=1, select bank2
  3767  1364  00C1               	movwf	(measure_capacitance@Cin+2)^(0+256)
  3768  1365  1303               	bcf	3,6	;RP1=0, select bank0
  3769  1366  082C               	movf	?___fldiv+1,w
  3770  1367  1703               	bsf	3,6	;RP1=1, select bank2
  3771  1368  00C0               	movwf	(measure_capacitance@Cin+1)^(0+256)
  3772  1369  1303               	bcf	3,6	;RP1=0, select bank0
  3773  136A  082B               	movf	?___fldiv,w
  3774  136B  1703               	bsf	3,6	;RP1=1, select bank2
  3775  136C  00BF               	movwf	measure_capacitance@Cin^(0+256)
  3776                           
  3777                           ;measure.c: 174: unit = 4;
  3778  136D  3004               	movlw	4
  3779  136E  2BC6               	goto	L7
  3780  136F                     l4766:	
  3781                           ;measure.c: 175: } else {
  3782                           
  3783                           
  3784                           ;measure.c: 176: Cin = Cin / (1e+06);
  3785  136F  3049               	movlw	73
  3786  1370  00AE               	movwf	___fldiv@f2+3
  3787  1371  3074               	movlw	116
  3788  1372  00AD               	movwf	___fldiv@f2+2
  3789  1373  3024               	movlw	36
  3790  1374  00AC               	movwf	___fldiv@f2+1
  3791  1375  01AB               	clrf	___fldiv@f2
  3792  1376  1703               	bsf	3,6	;RP1=1, select bank2
  3793  1377  0842               	movf	(measure_capacitance@Cin+3)^(0+256),w
  3794  1378  1303               	bcf	3,6	;RP1=0, select bank0
  3795  1379  00B2               	movwf	___fldiv@f1+3
  3796  137A  1703               	bsf	3,6	;RP1=1, select bank2
  3797  137B  0841               	movf	(measure_capacitance@Cin+2)^(0+256),w
  3798  137C  1303               	bcf	3,6	;RP1=0, select bank0
  3799  137D  00B1               	movwf	___fldiv@f1+2
  3800  137E  1703               	bsf	3,6	;RP1=1, select bank2
  3801  137F  0840               	movf	(measure_capacitance@Cin+1)^(0+256),w
  3802  1380  1303               	bcf	3,6	;RP1=0, select bank0
  3803  1381  00B0               	movwf	___fldiv@f1+1
  3804  1382  1703               	bsf	3,6	;RP1=1, select bank2
  3805  1383  083F               	movf	measure_capacitance@Cin^(0+256),w
  3806  1384  1303               	bcf	3,6	;RP1=0, select bank0
  3807  1385  00AF               	movwf	___fldiv@f1
  3808  1386  262D  160A  118A   	fcall	___fldiv
  3809  1389  082E               	movf	?___fldiv+3,w
  3810  138A  1703               	bsf	3,6	;RP1=1, select bank2
  3811  138B  00C2               	movwf	(measure_capacitance@Cin+3)^(0+256)
  3812  138C  1303               	bcf	3,6	;RP1=0, select bank0
  3813  138D  082D               	movf	?___fldiv+2,w
  3814  138E  1703               	bsf	3,6	;RP1=1, select bank2
  3815  138F  00C1               	movwf	(measure_capacitance@Cin+2)^(0+256)
  3816  1390  1303               	bcf	3,6	;RP1=0, select bank0
  3817  1391  082C               	movf	?___fldiv+1,w
  3818  1392  1703               	bsf	3,6	;RP1=1, select bank2
  3819  1393  00C0               	movwf	(measure_capacitance@Cin+1)^(0+256)
  3820  1394  1303               	bcf	3,6	;RP1=0, select bank0
  3821  1395  082B               	movf	?___fldiv,w
  3822  1396  1703               	bsf	3,6	;RP1=1, select bank2
  3823  1397  00BF               	movwf	measure_capacitance@Cin^(0+256)
  3824                           
  3825                           ;measure.c: 177: unit = 5;
  3826  1398  3005               	movlw	5
  3827  1399  2BC6               	goto	L7
  3828  139A                     l4770:	
  3829                           
  3830                           ;measure.c: 180: Cin = Cin / 1e+03;
  3831  139A  3044               	movlw	68
  3832  139B  00AE               	movwf	___fldiv@f2+3
  3833  139C  307A               	movlw	122
  3834  139D  00AD               	movwf	___fldiv@f2+2
  3835  139E  01AC               	clrf	___fldiv@f2+1
  3836  139F  01AB               	clrf	___fldiv@f2
  3837  13A0  1703               	bsf	3,6	;RP1=1, select bank2
  3838  13A1  0842               	movf	(measure_capacitance@Cin+3)^(0+256),w
  3839  13A2  1303               	bcf	3,6	;RP1=0, select bank0
  3840  13A3  00B2               	movwf	___fldiv@f1+3
  3841  13A4  1703               	bsf	3,6	;RP1=1, select bank2
  3842  13A5  0841               	movf	(measure_capacitance@Cin+2)^(0+256),w
  3843  13A6  1303               	bcf	3,6	;RP1=0, select bank0
  3844  13A7  00B1               	movwf	___fldiv@f1+2
  3845  13A8  1703               	bsf	3,6	;RP1=1, select bank2
  3846  13A9  0840               	movf	(measure_capacitance@Cin+1)^(0+256),w
  3847  13AA  1303               	bcf	3,6	;RP1=0, select bank0
  3848  13AB  00B0               	movwf	___fldiv@f1+1
  3849  13AC  1703               	bsf	3,6	;RP1=1, select bank2
  3850  13AD  083F               	movf	measure_capacitance@Cin^(0+256),w
  3851  13AE  1303               	bcf	3,6	;RP1=0, select bank0
  3852  13AF  00AF               	movwf	___fldiv@f1
  3853  13B0  262D  160A  118A   	fcall	___fldiv
  3854  13B3  082E               	movf	?___fldiv+3,w
  3855  13B4  1703               	bsf	3,6	;RP1=1, select bank2
  3856  13B5  00C2               	movwf	(measure_capacitance@Cin+3)^(0+256)
  3857  13B6  1303               	bcf	3,6	;RP1=0, select bank0
  3858  13B7  082D               	movf	?___fldiv+2,w
  3859  13B8  1703               	bsf	3,6	;RP1=1, select bank2
  3860  13B9  00C1               	movwf	(measure_capacitance@Cin+2)^(0+256)
  3861  13BA  1303               	bcf	3,6	;RP1=0, select bank0
  3862  13BB  082C               	movf	?___fldiv+1,w
  3863  13BC  1703               	bsf	3,6	;RP1=1, select bank2
  3864  13BD  00C0               	movwf	(measure_capacitance@Cin+1)^(0+256)
  3865  13BE  1303               	bcf	3,6	;RP1=0, select bank0
  3866  13BF  082B               	movf	?___fldiv,w
  3867  13C0  1703               	bsf	3,6	;RP1=1, select bank2
  3868  13C1  00BF               	movwf	measure_capacitance@Cin^(0+256)
  3869                           
  3870                           ;measure.c: 181: unit = 6;
  3871  13C2  3006               	movlw	6
  3872  13C3  2BC6               	goto	L7
  3873  13C4                     l4774:	
  3874                           
  3875                           ;measure.c: 184: unit = 7;
  3876  13C4  3007               	movlw	7
  3877  13C5  1703               	bsf	3,6	;RP1=1, select bank2
  3878  13C6                     L7:	
  3879  13C6  00BC               	movwf	measure_capacitance@unit^(0+256)
  3880                           
  3881                           ;measure.c: 186: Cin = Cin * 100;
  3882  13C7  3042               	movlw	66
  3883  13C8  1303               	bcf	3,6	;RP1=0, select bank0
  3884  13C9  00C1               	movwf	___flmul@f1+3
  3885  13CA  30C8               	movlw	200
  3886  13CB  00C0               	movwf	___flmul@f1+2
  3887  13CC  01BF               	clrf	___flmul@f1+1
  3888  13CD  01BE               	clrf	___flmul@f1
  3889  13CE  1703               	bsf	3,6	;RP1=1, select bank2
  3890  13CF  0842               	movf	(measure_capacitance@Cin+3)^(0+256),w
  3891  13D0  1303               	bcf	3,6	;RP1=0, select bank0
  3892  13D1  00C5               	movwf	___flmul@f2+3
  3893  13D2  1703               	bsf	3,6	;RP1=1, select bank2
  3894  13D3  0841               	movf	(measure_capacitance@Cin+2)^(0+256),w
  3895  13D4  1303               	bcf	3,6	;RP1=0, select bank0
  3896  13D5  00C4               	movwf	___flmul@f2+2
  3897  13D6  1703               	bsf	3,6	;RP1=1, select bank2
  3898  13D7  0840               	movf	(measure_capacitance@Cin+1)^(0+256),w
  3899  13D8  1303               	bcf	3,6	;RP1=0, select bank0
  3900  13D9  00C3               	movwf	___flmul@f2+1
  3901  13DA  1703               	bsf	3,6	;RP1=1, select bank2
  3902  13DB  083F               	movf	measure_capacitance@Cin^(0+256),w
  3903  13DC  1303               	bcf	3,6	;RP1=0, select bank0
  3904  13DD  00C2               	movwf	___flmul@f2
  3905  13DE  120A  158A  2698  160A  118A  	fcall	___flmul
  3906  13E3  0841               	movf	?___flmul+3,w
  3907  13E4  1703               	bsf	3,6	;RP1=1, select bank2
  3908  13E5  00C2               	movwf	(measure_capacitance@Cin+3)^(0+256)
  3909  13E6  1303               	bcf	3,6	;RP1=0, select bank0
  3910  13E7  0840               	movf	?___flmul+2,w
  3911  13E8  1703               	bsf	3,6	;RP1=1, select bank2
  3912  13E9  00C1               	movwf	(measure_capacitance@Cin+2)^(0+256)
  3913  13EA  1303               	bcf	3,6	;RP1=0, select bank0
  3914  13EB  083F               	movf	?___flmul+1,w
  3915  13EC  1703               	bsf	3,6	;RP1=1, select bank2
  3916  13ED  00C0               	movwf	(measure_capacitance@Cin+1)^(0+256)
  3917  13EE  1303               	bcf	3,6	;RP1=0, select bank0
  3918  13EF  083E               	movf	?___flmul,w
  3919  13F0  1703               	bsf	3,6	;RP1=1, select bank2
  3920  13F1  00BF               	movwf	measure_capacitance@Cin^(0+256)
  3921                           
  3922                           ;measure.c: 187: var = (uint16_t)Cin;
  3923  13F2  0842               	movf	(measure_capacitance@Cin+3)^(0+256),w
  3924  13F3  1683               	bsf	3,5	;RP0=1, select bank1
  3925  13F4  1303               	bcf	3,6	;RP1=0, select bank1
  3926  13F5  00B5               	movwf	(___fltol@f1+3)^(0+128)
  3927  13F6  1283               	bcf	3,5	;RP0=0, select bank2
  3928  13F7  1703               	bsf	3,6	;RP1=1, select bank2
  3929  13F8  0841               	movf	(measure_capacitance@Cin+2)^(0+256),w
  3930  13F9  1683               	bsf	3,5	;RP0=1, select bank1
  3931  13FA  1303               	bcf	3,6	;RP1=0, select bank1
  3932  13FB  00B4               	movwf	(___fltol@f1+2)^(0+128)
  3933  13FC  1283               	bcf	3,5	;RP0=0, select bank2
  3934  13FD  1703               	bsf	3,6	;RP1=1, select bank2
  3935  13FE  0840               	movf	(measure_capacitance@Cin+1)^(0+256),w
  3936  13FF  1683               	bsf	3,5	;RP0=1, select bank1
  3937  1400  1303               	bcf	3,6	;RP1=0, select bank1
  3938  1401  00B3               	movwf	(___fltol@f1+1)^(0+128)
  3939  1402  1283               	bcf	3,5	;RP0=0, select bank2
  3940  1403  1703               	bsf	3,6	;RP1=1, select bank2
  3941  1404  083F               	movf	measure_capacitance@Cin^(0+256),w
  3942  1405  1683               	bsf	3,5	;RP0=1, select bank1
  3943  1406  1303               	bcf	3,6	;RP1=0, select bank1
  3944  1407  00B2               	movwf	___fltol@f1^(0+128)
  3945  1408  26A6               	fcall	___fltol
  3946  1409  0833               	movf	(?___fltol^(0+128)+1),w
  3947  140A  1283               	bcf	3,5	;RP0=0, select bank2
  3948  140B  1703               	bsf	3,6	;RP1=1, select bank2
  3949  140C  00BE               	movwf	(measure_capacitance@var+1)^(0+256)
  3950  140D  1683               	bsf	3,5	;RP0=1, select bank1
  3951  140E  1303               	bcf	3,6	;RP1=0, select bank1
  3952  140F  0832               	movf	?___fltol^(0+128),w
  3953  1410  1283               	bcf	3,5	;RP0=0, select bank2
  3954  1411  1703               	bsf	3,6	;RP1=1, select bank2
  3955  1412  00BD               	movwf	measure_capacitance@var^(0+256)
  3956                           
  3957                           ;measure.c: 189: print_reading(var);
  3958  1413  083E               	movf	(measure_capacitance@var+1)^(0+256),w
  3959  1414  1303               	bcf	3,6	;RP1=0, select bank0
  3960  1415  00D2               	movwf	print_reading@measurement+1
  3961  1416  1703               	bsf	3,6	;RP1=1, select bank2
  3962  1417  083D               	movf	measure_capacitance@var^(0+256),w
  3963  1418  1303               	bcf	3,6	;RP1=0, select bank0
  3964  1419  00D1               	movwf	print_reading@measurement
  3965  141A  160A  158A  25F1  160A  118A  	fcall	_print_reading
  3966                           
  3967                           ;measure.c: 190: print_unit(unit);
  3968  141F  1703               	bsf	3,6	;RP1=1, select bank2
  3969  1420  160A  158A  2C14   	ljmp	l4384
  3970  1423                     __end_of_measure_capacitance:	
  3971  1423                     __ptext38:	
  3972 ;; *************** function _ser_puts *****************
  3973 ;; Defined at:
  3974 ;;		line 65 in file "../../../lib/ser.c"
  3975 ;; Parameters:    Size  Location     Type
  3976 ;;  s               2    0[BANK0 ] PTR const unsigned char 
  3977 ;;		 -> STR_36(3), STR_35(5), STR_34(3), STR_33(8), 
  3978 ;;		 -> STR_32(6), STR_31(6), STR_30(6), STR_29(5), 
  3979 ;;		 -> STR_26(3), STR_24(3), STR_22(3), STR_17(3), 
  3980 ;;		 -> STR_16(16), STR_15(16), STR_13(3), STR_9(3), 
  3981 ;; Auto vars:     Size  Location     Type
  3982 ;;		None
  3983 ;; Return value:  Size  Location     Type
  3984 ;;		None               void
  3985 ;; Registers used:
  3986 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3987 ;; Tracked objects:
  3988 ;;		On entry : 300/0
  3989 ;;		On exit  : 300/0
  3990 ;;		Unchanged: 0/0
  3991 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3992 ;;      Params:         0       2       0       0       0
  3993 ;;      Locals:         0       0       0       0       0
  3994 ;;      Temps:          0       0       0       0       0
  3995 ;;      Totals:         0       2       0       0       0
  3996 ;;Total ram usage:        2 bytes
  3997 ;; Hardware stack levels used:    1
  3998 ;; Hardware stack levels required when called:    2
  3999 ;; This function calls:
  4000 ;;		_ser_putch
  4001 ;; This function is called by:
  4002 ;;		_print_unit
  4003 ;;		_print_buffer
  4004 ;;		_main
  4005 ;;		_calibrate
  4006 ;;		_measure_capacitance
  4007 ;; This function uses a non-reentrant model
  4008 ;;
  4009                           
  4010                           
  4011                           ;psect for function _ser_puts
  4012  1423                     _ser_puts:	
  4013  1423                     l4096:	
  4014                           ;incstack = 0
  4015                           ; Regs used in _ser_puts: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4016                           
  4017  1423                     l4102:	
  4018                           ;ser.c: 66: while(*s) ser_putch(*s++);
  4019                           
  4020  1423  0822               	movf	ser_puts@s+1,w
  4021  1424  00FF               	movwf	127
  4022  1425  0821               	movf	ser_puts@s,w
  4023  1426  0084               	movwf	4
  4024  1427  160A  158A  2000  160A  118A  	fcall	stringtab
  4025  142C  3A00               	xorlw	0
  4026  142D  1903               	btfsc	3,2
  4027  142E  0008               	return
  4028  142F  0822               	movf	ser_puts@s+1,w
  4029  1430  00FF               	movwf	127
  4030  1431  0821               	movf	ser_puts@s,w
  4031  1432  0084               	movwf	4
  4032  1433  160A  158A  2000  160A  118A  	fcall	stringtab
  4033  1438  2440  160A  118A   	fcall	_ser_putch
  4034  143B  1283               	bcf	3,5	;RP0=0, select bank0
  4035  143C  0AA1               	incf	ser_puts@s,f
  4036  143D  1903               	skipnz
  4037  143E  0AA2               	incf	ser_puts@s+1,f
  4038  143F  2C23               	goto	l4102
  4039  1440                     __end_of_ser_puts:	
  4040  1440                     __ptext39:	
  4041 ;; *************** function _ser_putch *****************
  4042 ;; Defined at:
  4043 ;;		line 55 in file "../../../lib/ser.c"
  4044 ;; Parameters:    Size  Location     Type
  4045 ;;  c               1    wreg     unsigned char 
  4046 ;; Auto vars:     Size  Location     Type
  4047 ;;  c               1    4[COMMON] unsigned char 
  4048 ;; Return value:  Size  Location     Type
  4049 ;;		None               void
  4050 ;; Registers used:
  4051 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  4052 ;; Tracked objects:
  4053 ;;		On entry : 0/0
  4054 ;;		On exit  : B00/900
  4055 ;;		Unchanged: 0/0
  4056 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4057 ;;      Params:         0       0       0       0       0
  4058 ;;      Locals:         1       0       0       0       0
  4059 ;;      Temps:          0       0       0       0       0
  4060 ;;      Totals:         1       0       0       0       0
  4061 ;;Total ram usage:        1 bytes
  4062 ;; Hardware stack levels used:    1
  4063 ;; Hardware stack levels required when called:    1
  4064 ;; This function calls:
  4065 ;;		Nothing
  4066 ;; This function is called by:
  4067 ;;		_output_putch
  4068 ;;		_print_buffer
  4069 ;;		_measure_capacitance
  4070 ;;		_ser_puts
  4071 ;; This function uses a non-reentrant model
  4072 ;;
  4073                           
  4074                           
  4075                           ;psect for function _ser_putch
  4076  1440                     _ser_putch:	
  4077                           
  4078                           ;incstack = 0
  4079                           ; Regs used in _ser_putch: [wreg-fsr0h+status,2+status,0]
  4080                           ;ser_putch@c stored from wreg
  4081  1440  00F4               	movwf	ser_putch@c
  4082  1441                     l3952:	
  4083                           ;ser.c: 56: while(((txiptr + 1) & ((uint8_t)16 - 1)) == txoptr) continue;
  4084                           
  4085  1441  0878               	movf	_txiptr,w	;volatile
  4086  1442  3E01               	addlw	1
  4087  1443  390F               	andlw	15
  4088  1444  0679               	xorwf	_txoptr,w	;volatile
  4089  1445  1903               	skipnz
  4090  1446  2C41               	goto	l3952
  4091                           
  4092                           ;ser.c: 57: GIE = 0;
  4093  1447  138B               	bcf	11,7	;volatile
  4094                           
  4095                           ;ser.c: 58: txfifo[txiptr] = c;
  4096  1448  0878               	movf	_txiptr,w
  4097  1449  3E20               	addlw	(low (_txfifo| (0+256)))& (0+255)
  4098  144A  0084               	movwf	4
  4099  144B  0874               	movf	ser_putch@c,w
  4100  144C  1783               	bsf	3,7	;select IRP bank2
  4101  144D  0080               	movwf	0
  4102                           
  4103                           ;ser.c: 59: txiptr = (txiptr + 1) & ((uint8_t)16 - 1);
  4104  144E  0AF8               	incf	_txiptr,f	;volatile
  4105  144F  300F               	movlw	15
  4106  1450  05F8               	andwf	_txiptr,f	;volatile
  4107                           
  4108                           ;ser.c: 60: TXIE = 1;
  4109  1451  1683               	bsf	3,5	;RP0=1, select bank1
  4110  1452  1303               	bcf	3,6	;RP1=0, select bank1
  4111  1453  160C               	bsf	12,4	;volatile
  4112                           
  4113                           ;ser.c: 61: GIE = 1;
  4114  1454  178B               	bsf	11,7	;volatile
  4115  1455  0008               	return
  4116  1456                     __end_of_ser_putch:	
  4117  1456                     __ptext10:	
  4118 ;; *************** function _format_xint32 *****************
  4119 ;; Defined at:
  4120 ;;		line 51 in file "../../../lib/format.c"
  4121 ;; Parameters:    Size  Location     Type
  4122 ;;  x               4   48[BANK0 ] unsigned long 
  4123 ;; Auto vars:     Size  Location     Type
  4124 ;;		None
  4125 ;; Return value:  Size  Location     Type
  4126 ;;		None               void
  4127 ;; Registers used:
  4128 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4129 ;; Tracked objects:
  4130 ;;		On entry : 300/0
  4131 ;;		On exit  : 300/0
  4132 ;;		Unchanged: 0/0
  4133 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4134 ;;      Params:         0       4       0       0       0
  4135 ;;      Locals:         0       0       0       0       0
  4136 ;;      Temps:          0       0       0       0       0
  4137 ;;      Totals:         0       4       0       0       0
  4138 ;;Total ram usage:        4 bytes
  4139 ;; Hardware stack levels used:    1
  4140 ;; Hardware stack levels required when called:    3
  4141 ;; This function calls:
  4142 ;;		_buffer_putch
  4143 ;;		_format_number
  4144 ;; This function is called by:
  4145 ;;		_measure_capacitance
  4146 ;; This function uses a non-reentrant model
  4147 ;;
  4148                           
  4149                           
  4150                           ;psect for function _format_xint32
  4151  1456                     _format_xint32:	
  4152                           
  4153                           ;format.c: 52: buffer_putch('0');
  4154                           
  4155                           ;incstack = 0
  4156                           ; Regs used in _format_xint32: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4157  1456  3030               	movlw	48
  4158  1457  25F9  160A  118A   	fcall	_buffer_putch
  4159                           
  4160                           ;format.c: 53: buffer_putch('x');
  4161  145A  3078               	movlw	120
  4162  145B  25F9  160A  118A   	fcall	_buffer_putch
  4163                           
  4164                           ;format.c: 54: format_number((uint16_t)(x >> 16), 16, -4);
  4165  145E  1283               	bcf	3,5	;RP0=0, select bank0
  4166  145F  1303               	bcf	3,6	;RP1=0, select bank0
  4167  1460  0854               	movf	format_xint32@x+3,w
  4168  1461  00A9               	movwf	format_number@n+1
  4169  1462  0853               	movf	format_xint32@x+2,w
  4170  1463  00A8               	movwf	format_number@n
  4171  1464  3010               	movlw	16
  4172  1465  00AA               	movwf	format_number@base
  4173  1466  30FC               	movlw	252
  4174  1467  00AB               	movwf	format_number@pad
  4175  1468  273E  160A  118A   	fcall	_format_number
  4176                           
  4177                           ;format.c: 55: format_number((uint16_t)(x & 0xffff), 16, -4);
  4178  146B  0852               	movf	format_xint32@x+1,w
  4179  146C  00A9               	movwf	format_number@n+1
  4180  146D  0851               	movf	format_xint32@x,w
  4181  146E  00A8               	movwf	format_number@n
  4182  146F  3010               	movlw	16
  4183  1470  00AA               	movwf	format_number@base
  4184  1471  30FC               	movlw	252
  4185  1472  00AB               	movwf	format_number@pad
  4186  1473  2F3E               	ljmp	l4250
  4187  1474                     __end_of_format_xint32:	
  4188  1474                     __ptext11:	
  4189 ;; *************** function _format_double *****************
  4190 ;; Defined at:
  4191 ;;		line 77 in file "../../../lib/format.c"
  4192 ;; Parameters:    Size  Location     Type
  4193 ;;  num             4    0[BANK3 ] unsigned long 
  4194 ;; Auto vars:     Size  Location     Type
  4195 ;;  weight          4   12[BANK3 ] unsigned long 
  4196 ;;  m               2   18[BANK3 ] short 
  4197 ;;  digit           2   16[BANK3 ] short 
  4198 ;; Return value:  Size  Location     Type
  4199 ;;		None               void
  4200 ;; Registers used:
  4201 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4202 ;; Tracked objects:
  4203 ;;		On entry : 300/300
  4204 ;;		On exit  : 300/0
  4205 ;;		Unchanged: 0/0
  4206 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4207 ;;      Params:         0       0       0       4       0
  4208 ;;      Locals:         0       0       0      16       0
  4209 ;;      Temps:          0       0       0       0       0
  4210 ;;      Totals:         0       0       0      20       0
  4211 ;;Total ram usage:       20 bytes
  4212 ;; Hardware stack levels used:    1
  4213 ;; Hardware stack levels required when called:    6
  4214 ;; This function calls:
  4215 ;;		___awtofl
  4216 ;;		___fldiv
  4217 ;;		___flge
  4218 ;;		___flmul
  4219 ;;		___flsub
  4220 ;;		___fltol
  4221 ;;		_buffer_putch
  4222 ;;		_floor
  4223 ;;		_log10
  4224 ;;		_pow
  4225 ;; This function is called by:
  4226 ;;		_main
  4227 ;;		_measure_capacitance
  4228 ;; This function uses a non-reentrant model
  4229 ;;
  4230                           
  4231                           
  4232                           ;psect for function _format_double
  4233  1474                     _format_double:	
  4234                           
  4235                           ;format.c: 78: short m = (short)log10(num);
  4236                           
  4237                           ;incstack = 0
  4238                           ; Regs used in _format_double: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4239  1474  0843               	movf	(format_double@num+3)^(0+384),w
  4240  1475  1303               	bcf	3,6	;RP1=0, select bank1
  4241  1476  00AD               	movwf	(log10@x+3)^(0+128)
  4242  1477  1703               	bsf	3,6	;RP1=1, select bank3
  4243  1478  0842               	movf	(format_double@num+2)^(0+384),w
  4244  1479  1303               	bcf	3,6	;RP1=0, select bank1
  4245  147A  00AC               	movwf	(log10@x+2)^(0+128)
  4246  147B  1703               	bsf	3,6	;RP1=1, select bank3
  4247  147C  0841               	movf	(format_double@num+1)^(0+384),w
  4248  147D  1303               	bcf	3,6	;RP1=0, select bank1
  4249  147E  00AB               	movwf	(log10@x+1)^(0+128)
  4250  147F  1703               	bsf	3,6	;RP1=1, select bank3
  4251  1480  0840               	movf	format_double@num^(0+384),w
  4252  1481  1303               	bcf	3,6	;RP1=0, select bank1
  4253  1482  00AA               	movwf	log10@x^(0+128)
  4254  1483  160A  158A  247D  160A  118A  	fcall	_log10
  4255  1488  082D               	movf	(?_log10+3)^(0+128),w
  4256  1489  00B5               	movwf	(___fltol@f1+3)^(0+128)
  4257  148A  082C               	movf	(?_log10+2)^(0+128),w
  4258  148B  00B4               	movwf	(___fltol@f1+2)^(0+128)
  4259  148C  082B               	movf	(?_log10+1)^(0+128),w
  4260  148D  00B3               	movwf	(___fltol@f1+1)^(0+128)
  4261  148E  082A               	movf	?_log10^(0+128),w
  4262  148F  00B2               	movwf	___fltol@f1^(0+128)
  4263  1490  26A6               	fcall	___fltol
  4264  1491  0833               	movf	(?___fltol^(0+128)+1),w
  4265  1492  1703               	bsf	3,6	;RP1=1, select bank3
  4266  1493  00D3               	movwf	(format_double@m+1)^(0+384)
  4267  1494  1303               	bcf	3,6	;RP1=0, select bank1
  4268  1495  0832               	movf	?___fltol^(0+128),w
  4269  1496  1703               	bsf	3,6	;RP1=1, select bank3
  4270  1497  00D2               	movwf	format_double@m^(0+384)
  4271  1498                     l4426:	
  4272                           ;format.c: 79: short digit;
  4273                           ;format.c: 82: while(num > 0 + (sizeof(double) == sizeof(float) ? 3.05176e-05 : 1.192092
      +                          90e-07)) {
  4274                           
  4275  1498  3038               	movlw	56
  4276  1499  1283               	bcf	3,5	;RP0=0, select bank0
  4277  149A  1303               	bcf	3,6	;RP1=0, select bank0
  4278  149B  00A4               	movwf	___flge@ff1+3
  4279  149C  3006               	movlw	6
  4280  149D  01A3               	clrf	___flge@ff1+2
  4281  149E  01A2               	clrf	___flge@ff1+1
  4282  149F  00A1               	movwf	___flge@ff1
  4283  14A0  1683               	bsf	3,5	;RP0=1, select bank3
  4284  14A1  1703               	bsf	3,6	;RP1=1, select bank3
  4285  14A2  0843               	movf	(format_double@num+3)^(0+384),w
  4286  14A3  1283               	bcf	3,5	;RP0=0, select bank0
  4287  14A4  1303               	bcf	3,6	;RP1=0, select bank0
  4288  14A5  00A8               	movwf	___flge@ff2+3
  4289  14A6  1683               	bsf	3,5	;RP0=1, select bank3
  4290  14A7  1703               	bsf	3,6	;RP1=1, select bank3
  4291  14A8  0842               	movf	(format_double@num+2)^(0+384),w
  4292  14A9  1283               	bcf	3,5	;RP0=0, select bank0
  4293  14AA  1303               	bcf	3,6	;RP1=0, select bank0
  4294  14AB  00A7               	movwf	___flge@ff2+2
  4295  14AC  1683               	bsf	3,5	;RP0=1, select bank3
  4296  14AD  1703               	bsf	3,6	;RP1=1, select bank3
  4297  14AE  0841               	movf	(format_double@num+1)^(0+384),w
  4298  14AF  1283               	bcf	3,5	;RP0=0, select bank0
  4299  14B0  1303               	bcf	3,6	;RP1=0, select bank0
  4300  14B1  00A6               	movwf	___flge@ff2+1
  4301  14B2  1683               	bsf	3,5	;RP0=1, select bank3
  4302  14B3  1703               	bsf	3,6	;RP1=1, select bank3
  4303  14B4  0840               	movf	format_double@num^(0+384),w
  4304  14B5  1283               	bcf	3,5	;RP0=0, select bank0
  4305  14B6  1303               	bcf	3,6	;RP1=0, select bank0
  4306  14B7  00A5               	movwf	___flge@ff2
  4307  14B8  120A  158A  2730  160A  118A  	fcall	___flge
  4308  14BD  1803               	btfsc	3,0
  4309  14BE  0008               	return
  4310                           
  4311                           ;format.c: 83: double weight = pow(10.0l, m);
  4312  14BF  1683               	bsf	3,5	;RP0=1, select bank3
  4313  14C0  1703               	bsf	3,6	;RP1=1, select bank3
  4314  14C1  0853               	movf	(format_double@m+1)^(0+384),w
  4315  14C2  1283               	bcf	3,5	;RP0=0, select bank0
  4316  14C3  1303               	bcf	3,6	;RP1=0, select bank0
  4317  14C4  00AC               	movwf	___awtofl@c+1
  4318  14C5  1683               	bsf	3,5	;RP0=1, select bank3
  4319  14C6  1703               	bsf	3,6	;RP1=1, select bank3
  4320  14C7  0852               	movf	format_double@m^(0+384),w
  4321  14C8  1283               	bcf	3,5	;RP0=0, select bank0
  4322  14C9  1303               	bcf	3,6	;RP1=0, select bank0
  4323  14CA  00AB               	movwf	___awtofl@c
  4324  14CB  26FD  160A  118A   	fcall	___awtofl
  4325  14CE  082E               	movf	?___awtofl+3,w
  4326  14CF  1683               	bsf	3,5	;RP0=1, select bank3
  4327  14D0  1703               	bsf	3,6	;RP1=1, select bank3
  4328  14D1  00C7               	movwf	(_format_double$1007+3)^(0+384)
  4329  14D2  1283               	bcf	3,5	;RP0=0, select bank0
  4330  14D3  1303               	bcf	3,6	;RP1=0, select bank0
  4331  14D4  082D               	movf	?___awtofl+2,w
  4332  14D5  1683               	bsf	3,5	;RP0=1, select bank3
  4333  14D6  1703               	bsf	3,6	;RP1=1, select bank3
  4334  14D7  00C6               	movwf	(_format_double$1007+2)^(0+384)
  4335  14D8  1283               	bcf	3,5	;RP0=0, select bank0
  4336  14D9  1303               	bcf	3,6	;RP1=0, select bank0
  4337  14DA  082C               	movf	?___awtofl+1,w
  4338  14DB  1683               	bsf	3,5	;RP0=1, select bank3
  4339  14DC  1703               	bsf	3,6	;RP1=1, select bank3
  4340  14DD  00C5               	movwf	(_format_double$1007+1)^(0+384)
  4341  14DE  1283               	bcf	3,5	;RP0=0, select bank0
  4342  14DF  1303               	bcf	3,6	;RP1=0, select bank0
  4343  14E0  082B               	movf	?___awtofl,w
  4344  14E1  1683               	bsf	3,5	;RP0=1, select bank3
  4345  14E2  1703               	bsf	3,6	;RP1=1, select bank3
  4346  14E3  00C4               	movwf	_format_double$1007^(0+384)
  4347                           
  4348                           ;format.c: 83: double weight = pow(10.0l, m);
  4349  14E4  3041               	movlw	65
  4350  14E5  1303               	bcf	3,6	;RP1=0, select bank1
  4351  14E6  00DD               	movwf	(pow@x+3)^(0+128)
  4352  14E7  3020               	movlw	32
  4353  14E8  00DC               	movwf	(pow@x+2)^(0+128)
  4354  14E9  01DB               	clrf	(pow@x+1)^(0+128)
  4355  14EA  01DA               	clrf	pow@x^(0+128)
  4356  14EB  1703               	bsf	3,6	;RP1=1, select bank3
  4357  14EC  0847               	movf	(_format_double$1007+3)^(0+384),w
  4358  14ED  1303               	bcf	3,6	;RP1=0, select bank1
  4359  14EE  00E1               	movwf	(pow@y+3)^(0+128)
  4360  14EF  1703               	bsf	3,6	;RP1=1, select bank3
  4361  14F0  0846               	movf	(_format_double$1007+2)^(0+384),w
  4362  14F1  1303               	bcf	3,6	;RP1=0, select bank1
  4363  14F2  00E0               	movwf	(pow@y+2)^(0+128)
  4364  14F3  1703               	bsf	3,6	;RP1=1, select bank3
  4365  14F4  0845               	movf	(_format_double$1007+1)^(0+384),w
  4366  14F5  1303               	bcf	3,6	;RP1=0, select bank1
  4367  14F6  00DF               	movwf	(pow@y+1)^(0+128)
  4368  14F7  1703               	bsf	3,6	;RP1=1, select bank3
  4369  14F8  0844               	movf	_format_double$1007^(0+384),w
  4370  14F9  1303               	bcf	3,6	;RP1=0, select bank1
  4371  14FA  00DE               	movwf	pow@y^(0+128)
  4372  14FB  160A  158A  26AB  160A  118A  	fcall	_pow
  4373  1500  085D               	movf	(?_pow+3)^(0+128),w
  4374  1501  1703               	bsf	3,6	;RP1=1, select bank3
  4375  1502  00CF               	movwf	(format_double@weight+3)^(0+384)
  4376  1503  1303               	bcf	3,6	;RP1=0, select bank1
  4377  1504  085C               	movf	(?_pow+2)^(0+128),w
  4378  1505  1703               	bsf	3,6	;RP1=1, select bank3
  4379  1506  00CE               	movwf	(format_double@weight+2)^(0+384)
  4380  1507  1303               	bcf	3,6	;RP1=0, select bank1
  4381  1508  085B               	movf	(?_pow+1)^(0+128),w
  4382  1509  1703               	bsf	3,6	;RP1=1, select bank3
  4383  150A  00CD               	movwf	(format_double@weight+1)^(0+384)
  4384  150B  1303               	bcf	3,6	;RP1=0, select bank1
  4385  150C  085A               	movf	?_pow^(0+128),w
  4386  150D  1703               	bsf	3,6	;RP1=1, select bank3
  4387  150E  00CC               	movwf	format_double@weight^(0+384)
  4388                           
  4389                           ;format.c: 84: digit = (short)floor(num / weight);
  4390  150F  0843               	movf	(format_double@num+3)^(0+384),w
  4391  1510  1283               	bcf	3,5	;RP0=0, select bank0
  4392  1511  1303               	bcf	3,6	;RP1=0, select bank0
  4393  1512  00B2               	movwf	___fldiv@f1+3
  4394  1513  1683               	bsf	3,5	;RP0=1, select bank3
  4395  1514  1703               	bsf	3,6	;RP1=1, select bank3
  4396  1515  0842               	movf	(format_double@num+2)^(0+384),w
  4397  1516  1283               	bcf	3,5	;RP0=0, select bank0
  4398  1517  1303               	bcf	3,6	;RP1=0, select bank0
  4399  1518  00B1               	movwf	___fldiv@f1+2
  4400  1519  1683               	bsf	3,5	;RP0=1, select bank3
  4401  151A  1703               	bsf	3,6	;RP1=1, select bank3
  4402  151B  0841               	movf	(format_double@num+1)^(0+384),w
  4403  151C  1283               	bcf	3,5	;RP0=0, select bank0
  4404  151D  1303               	bcf	3,6	;RP1=0, select bank0
  4405  151E  00B0               	movwf	___fldiv@f1+1
  4406  151F  1683               	bsf	3,5	;RP0=1, select bank3
  4407  1520  1703               	bsf	3,6	;RP1=1, select bank3
  4408  1521  0840               	movf	format_double@num^(0+384),w
  4409  1522  1283               	bcf	3,5	;RP0=0, select bank0
  4410  1523  1303               	bcf	3,6	;RP1=0, select bank0
  4411  1524  00AF               	movwf	___fldiv@f1
  4412  1525  1683               	bsf	3,5	;RP0=1, select bank3
  4413  1526  1703               	bsf	3,6	;RP1=1, select bank3
  4414  1527  084F               	movf	(format_double@weight+3)^(0+384),w
  4415  1528  1283               	bcf	3,5	;RP0=0, select bank0
  4416  1529  1303               	bcf	3,6	;RP1=0, select bank0
  4417  152A  00AE               	movwf	___fldiv@f2+3
  4418  152B  1683               	bsf	3,5	;RP0=1, select bank3
  4419  152C  1703               	bsf	3,6	;RP1=1, select bank3
  4420  152D  084E               	movf	(format_double@weight+2)^(0+384),w
  4421  152E  1283               	bcf	3,5	;RP0=0, select bank0
  4422  152F  1303               	bcf	3,6	;RP1=0, select bank0
  4423  1530  00AD               	movwf	___fldiv@f2+2
  4424  1531  1683               	bsf	3,5	;RP0=1, select bank3
  4425  1532  1703               	bsf	3,6	;RP1=1, select bank3
  4426  1533  084D               	movf	(format_double@weight+1)^(0+384),w
  4427  1534  1283               	bcf	3,5	;RP0=0, select bank0
  4428  1535  1303               	bcf	3,6	;RP1=0, select bank0
  4429  1536  00AC               	movwf	___fldiv@f2+1
  4430  1537  1683               	bsf	3,5	;RP0=1, select bank3
  4431  1538  1703               	bsf	3,6	;RP1=1, select bank3
  4432  1539  084C               	movf	format_double@weight^(0+384),w
  4433  153A  1283               	bcf	3,5	;RP0=0, select bank0
  4434  153B  1303               	bcf	3,6	;RP1=0, select bank0
  4435  153C  00AB               	movwf	___fldiv@f2
  4436  153D  262D               	fcall	___fldiv
  4437  153E  082E               	movf	?___fldiv+3,w
  4438  153F  1683               	bsf	3,5	;RP0=1, select bank1
  4439  1540  00C4               	movwf	(floor@x+3)^(0+128)
  4440  1541  1283               	bcf	3,5	;RP0=0, select bank0
  4441  1542  082D               	movf	?___fldiv+2,w
  4442  1543  1683               	bsf	3,5	;RP0=1, select bank1
  4443  1544  00C3               	movwf	(floor@x+2)^(0+128)
  4444  1545  1283               	bcf	3,5	;RP0=0, select bank0
  4445  1546  082C               	movf	?___fldiv+1,w
  4446  1547  1683               	bsf	3,5	;RP0=1, select bank1
  4447  1548  00C2               	movwf	(floor@x+1)^(0+128)
  4448  1549  1283               	bcf	3,5	;RP0=0, select bank0
  4449  154A  082B               	movf	?___fldiv,w
  4450  154B  1683               	bsf	3,5	;RP0=1, select bank1
  4451  154C  00C1               	movwf	floor@x^(0+128)
  4452  154D  120A  118A  25B2  160A  118A  	fcall	_floor
  4453  1552  0844               	movf	(?_floor+3)^(0+128),w
  4454  1553  1703               	bsf	3,6	;RP1=1, select bank3
  4455  1554  00CB               	movwf	(_format_double$1008+3)^(0+384)
  4456  1555  1303               	bcf	3,6	;RP1=0, select bank1
  4457  1556  0843               	movf	(?_floor+2)^(0+128),w
  4458  1557  1703               	bsf	3,6	;RP1=1, select bank3
  4459  1558  00CA               	movwf	(_format_double$1008+2)^(0+384)
  4460  1559  1303               	bcf	3,6	;RP1=0, select bank1
  4461  155A  0842               	movf	(?_floor+1)^(0+128),w
  4462  155B  1703               	bsf	3,6	;RP1=1, select bank3
  4463  155C  00C9               	movwf	(_format_double$1008+1)^(0+384)
  4464  155D  1303               	bcf	3,6	;RP1=0, select bank1
  4465  155E  0841               	movf	?_floor^(0+128),w
  4466  155F  1703               	bsf	3,6	;RP1=1, select bank3
  4467  1560  00C8               	movwf	_format_double$1008^(0+384)
  4468                           
  4469                           ;format.c: 84: digit = (short)floor(num / weight);
  4470  1561  084B               	movf	(_format_double$1008+3)^(0+384),w
  4471  1562  1303               	bcf	3,6	;RP1=0, select bank1
  4472  1563  00B5               	movwf	(___fltol@f1+3)^(0+128)
  4473  1564  1703               	bsf	3,6	;RP1=1, select bank3
  4474  1565  084A               	movf	(_format_double$1008+2)^(0+384),w
  4475  1566  1303               	bcf	3,6	;RP1=0, select bank1
  4476  1567  00B4               	movwf	(___fltol@f1+2)^(0+128)
  4477  1568  1703               	bsf	3,6	;RP1=1, select bank3
  4478  1569  0849               	movf	(_format_double$1008+1)^(0+384),w
  4479  156A  1303               	bcf	3,6	;RP1=0, select bank1
  4480  156B  00B3               	movwf	(___fltol@f1+1)^(0+128)
  4481  156C  1703               	bsf	3,6	;RP1=1, select bank3
  4482  156D  0848               	movf	_format_double$1008^(0+384),w
  4483  156E  1303               	bcf	3,6	;RP1=0, select bank1
  4484  156F  00B2               	movwf	___fltol@f1^(0+128)
  4485  1570  26A6  160A  118A   	fcall	___fltol
  4486  1573  0833               	movf	(?___fltol^(0+128)+1),w
  4487  1574  1703               	bsf	3,6	;RP1=1, select bank3
  4488  1575  00D1               	movwf	(format_double@digit+1)^(0+384)
  4489  1576  1303               	bcf	3,6	;RP1=0, select bank1
  4490  1577  0832               	movf	?___fltol^(0+128),w
  4491  1578  1703               	bsf	3,6	;RP1=1, select bank3
  4492  1579  00D0               	movwf	format_double@digit^(0+384)
  4493                           
  4494                           ;format.c: 85: num -= (digit * weight);
  4495  157A  0851               	movf	(format_double@digit+1)^(0+384),w
  4496  157B  1283               	bcf	3,5	;RP0=0, select bank0
  4497  157C  1303               	bcf	3,6	;RP1=0, select bank0
  4498  157D  00AC               	movwf	___awtofl@c+1
  4499  157E  1683               	bsf	3,5	;RP0=1, select bank3
  4500  157F  1703               	bsf	3,6	;RP1=1, select bank3
  4501  1580  0850               	movf	format_double@digit^(0+384),w
  4502  1581  1283               	bcf	3,5	;RP0=0, select bank0
  4503  1582  1303               	bcf	3,6	;RP1=0, select bank0
  4504  1583  00AB               	movwf	___awtofl@c
  4505  1584  26FD               	fcall	___awtofl
  4506  1585  082E               	movf	?___awtofl+3,w
  4507  1586  00C5               	movwf	___flmul@f2+3
  4508  1587  082D               	movf	?___awtofl+2,w
  4509  1588  00C4               	movwf	___flmul@f2+2
  4510  1589  082C               	movf	?___awtofl+1,w
  4511  158A  00C3               	movwf	___flmul@f2+1
  4512  158B  082B               	movf	?___awtofl,w
  4513  158C  00C2               	movwf	___flmul@f2
  4514  158D  1683               	bsf	3,5	;RP0=1, select bank3
  4515  158E  1703               	bsf	3,6	;RP1=1, select bank3
  4516  158F  084F               	movf	(format_double@weight+3)^(0+384),w
  4517  1590  1283               	bcf	3,5	;RP0=0, select bank0
  4518  1591  1303               	bcf	3,6	;RP1=0, select bank0
  4519  1592  00C1               	movwf	___flmul@f1+3
  4520  1593  1683               	bsf	3,5	;RP0=1, select bank3
  4521  1594  1703               	bsf	3,6	;RP1=1, select bank3
  4522  1595  084E               	movf	(format_double@weight+2)^(0+384),w
  4523  1596  1283               	bcf	3,5	;RP0=0, select bank0
  4524  1597  1303               	bcf	3,6	;RP1=0, select bank0
  4525  1598  00C0               	movwf	___flmul@f1+2
  4526  1599  1683               	bsf	3,5	;RP0=1, select bank3
  4527  159A  1703               	bsf	3,6	;RP1=1, select bank3
  4528  159B  084D               	movf	(format_double@weight+1)^(0+384),w
  4529  159C  1283               	bcf	3,5	;RP0=0, select bank0
  4530  159D  1303               	bcf	3,6	;RP1=0, select bank0
  4531  159E  00BF               	movwf	___flmul@f1+1
  4532  159F  1683               	bsf	3,5	;RP0=1, select bank3
  4533  15A0  1703               	bsf	3,6	;RP1=1, select bank3
  4534  15A1  084C               	movf	format_double@weight^(0+384),w
  4535  15A2  1283               	bcf	3,5	;RP0=0, select bank0
  4536  15A3  1303               	bcf	3,6	;RP1=0, select bank0
  4537  15A4  00BE               	movwf	___flmul@f1
  4538  15A5  120A  158A  2698  160A  118A  	fcall	___flmul
  4539  15AA  0841               	movf	?___flmul+3,w
  4540  15AB  00E3               	movwf	___flsub@f2+3
  4541  15AC  0840               	movf	?___flmul+2,w
  4542  15AD  00E2               	movwf	___flsub@f2+2
  4543  15AE  083F               	movf	?___flmul+1,w
  4544  15AF  00E1               	movwf	___flsub@f2+1
  4545  15B0  083E               	movf	?___flmul,w
  4546  15B1  00E0               	movwf	___flsub@f2
  4547  15B2  1683               	bsf	3,5	;RP0=1, select bank3
  4548  15B3  1703               	bsf	3,6	;RP1=1, select bank3
  4549  15B4  0843               	movf	(format_double@num+3)^(0+384),w
  4550  15B5  1283               	bcf	3,5	;RP0=0, select bank0
  4551  15B6  1303               	bcf	3,6	;RP1=0, select bank0
  4552  15B7  00E7               	movwf	___flsub@f1+3
  4553  15B8  1683               	bsf	3,5	;RP0=1, select bank3
  4554  15B9  1703               	bsf	3,6	;RP1=1, select bank3
  4555  15BA  0842               	movf	(format_double@num+2)^(0+384),w
  4556  15BB  1283               	bcf	3,5	;RP0=0, select bank0
  4557  15BC  1303               	bcf	3,6	;RP1=0, select bank0
  4558  15BD  00E6               	movwf	___flsub@f1+2
  4559  15BE  1683               	bsf	3,5	;RP0=1, select bank3
  4560  15BF  1703               	bsf	3,6	;RP1=1, select bank3
  4561  15C0  0841               	movf	(format_double@num+1)^(0+384),w
  4562  15C1  1283               	bcf	3,5	;RP0=0, select bank0
  4563  15C2  1303               	bcf	3,6	;RP1=0, select bank0
  4564  15C3  00E5               	movwf	___flsub@f1+1
  4565  15C4  1683               	bsf	3,5	;RP0=1, select bank3
  4566  15C5  1703               	bsf	3,6	;RP1=1, select bank3
  4567  15C6  0840               	movf	format_double@num^(0+384),w
  4568  15C7  1283               	bcf	3,5	;RP0=0, select bank0
  4569  15C8  1303               	bcf	3,6	;RP1=0, select bank0
  4570  15C9  00E4               	movwf	___flsub@f1
  4571  15CA  271A  160A  118A   	fcall	___flsub
  4572  15CD  0863               	movf	?___flsub+3,w
  4573  15CE  1683               	bsf	3,5	;RP0=1, select bank3
  4574  15CF  1703               	bsf	3,6	;RP1=1, select bank3
  4575  15D0  00C3               	movwf	(format_double@num+3)^(0+384)
  4576  15D1  1283               	bcf	3,5	;RP0=0, select bank0
  4577  15D2  1303               	bcf	3,6	;RP1=0, select bank0
  4578  15D3  0862               	movf	?___flsub+2,w
  4579  15D4  1683               	bsf	3,5	;RP0=1, select bank3
  4580  15D5  1703               	bsf	3,6	;RP1=1, select bank3
  4581  15D6  00C2               	movwf	(format_double@num+2)^(0+384)
  4582  15D7  1283               	bcf	3,5	;RP0=0, select bank0
  4583  15D8  1303               	bcf	3,6	;RP1=0, select bank0
  4584  15D9  0861               	movf	?___flsub+1,w
  4585  15DA  1683               	bsf	3,5	;RP0=1, select bank3
  4586  15DB  1703               	bsf	3,6	;RP1=1, select bank3
  4587  15DC  00C1               	movwf	(format_double@num+1)^(0+384)
  4588  15DD  1283               	bcf	3,5	;RP0=0, select bank0
  4589  15DE  1303               	bcf	3,6	;RP1=0, select bank0
  4590  15DF  0860               	movf	?___flsub,w
  4591  15E0  1683               	bsf	3,5	;RP0=1, select bank3
  4592  15E1  1703               	bsf	3,6	;RP1=1, select bank3
  4593  15E2  00C0               	movwf	format_double@num^(0+384)
  4594                           
  4595                           ;format.c: 86: buffer_putch((char)('0' + digit));
  4596  15E3  0850               	movf	format_double@digit^(0+384),w
  4597  15E4  3E30               	addlw	48
  4598  15E5  25F9  160A  118A   	fcall	_buffer_putch
  4599                           
  4600                           ;format.c: 87: if(m == 0)
  4601  15E8  1683               	bsf	3,5	;RP0=1, select bank3
  4602  15E9  1703               	bsf	3,6	;RP1=1, select bank3
  4603  15EA  0852               	movf	format_double@m^(0+384),w
  4604  15EB  0453               	iorwf	(format_double@m+1)^(0+384),w
  4605  15EC  1D03               	btfss	3,2
  4606  15ED  2DF2               	goto	l4424
  4607                           
  4608                           ;format.c: 88: buffer_putch('.');
  4609  15EE  302E               	movlw	46
  4610  15EF  25F9  160A  118A   	fcall	_buffer_putch
  4611  15F2                     l4424:	
  4612                           
  4613                           ;format.c: 89: m--;
  4614  15F2  30FF               	movlw	-1
  4615  15F3  1683               	bsf	3,5	;RP0=1, select bank3
  4616  15F4  1703               	bsf	3,6	;RP1=1, select bank3
  4617  15F5  07D2               	addwf	format_double@m^(0+384),f
  4618  15F6  1C03               	skipc
  4619  15F7  03D3               	decf	(format_double@m+1)^(0+384),f
  4620  15F8  2C98               	goto	l4426
  4621  15F9                     __end_of_format_double:	
  4622  15F9                     __ptext45:	
  4623 ;; *************** function _buffer_putch *****************
  4624 ;; Defined at:
  4625 ;;		line 30 in file "../../../lib/buffer.c"
  4626 ;; Parameters:    Size  Location     Type
  4627 ;;  ch              1    wreg     unsigned char 
  4628 ;; Auto vars:     Size  Location     Type
  4629 ;;  ch              1    4[COMMON] unsigned char 
  4630 ;; Return value:  Size  Location     Type
  4631 ;;                  1    wreg      unsigned char 
  4632 ;; Registers used:
  4633 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
  4634 ;; Tracked objects:
  4635 ;;		On entry : 0/0
  4636 ;;		On exit  : 0/0
  4637 ;;		Unchanged: 0/0
  4638 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4639 ;;      Params:         0       0       0       0       0
  4640 ;;      Locals:         1       0       0       0       0
  4641 ;;      Temps:          0       3       0       0       0
  4642 ;;      Totals:         1       3       0       0       0
  4643 ;;Total ram usage:        4 bytes
  4644 ;; Hardware stack levels used:    1
  4645 ;; Hardware stack levels required when called:    1
  4646 ;; This function calls:
  4647 ;;		Nothing
  4648 ;; This function is called by:
  4649 ;;		_format_number
  4650 ;;		_format_xint32
  4651 ;;		_format_double
  4652 ;;		_buffer_puts
  4653 ;; This function uses a non-reentrant model
  4654 ;;
  4655                           
  4656                           
  4657                           ;psect for function _buffer_putch
  4658  15F9                     _buffer_putch:	
  4659                           
  4660                           ;incstack = 0
  4661                           ; Regs used in _buffer_putch: [wreg-fsr0h+status,2+status,0+btemp+1]
  4662                           ;buffer_putch@ch stored from wreg
  4663  15F9  00F4               	movwf	buffer_putch@ch
  4664                           
  4665                           ;buffer.c: 31: if(16 - buffer.n <= 0)
  4666  15FA  1683               	bsf	3,5	;RP0=1, select bank3
  4667  15FB  1703               	bsf	3,6	;RP1=1, select bank3
  4668  15FC  0E3B               	swapf	(_buffer^(0+384)+16),w
  4669  15FD  390F               	andlw	15
  4670  15FE  1283               	bcf	3,5	;RP0=0, select bank0
  4671  15FF  1303               	bcf	3,6	;RP1=0, select bank0
  4672  1600  00A1               	movwf	??_buffer_putch
  4673  1601  01A3               	clrf	??_buffer_putch+2
  4674  1602  3C10               	sublw	16
  4675  1603  00A2               	movwf	??_buffer_putch+1
  4676  1604  1C03               	skipc
  4677  1605  03A3               	decf	??_buffer_putch+2,f
  4678  1606  0823               	movf	??_buffer_putch+2,w
  4679  1607  3A80               	xorlw	128
  4680  1608  00FF               	movwf	127
  4681  1609  3080               	movlw	128
  4682  160A  027F               	subwf	127,w
  4683  160B  1D03               	skipz
  4684  160C  2E0F               	goto	u3735
  4685  160D  3001               	movlw	1
  4686  160E  0222               	subwf	??_buffer_putch+1,w
  4687  160F                     u3735:	
  4688  160F  1C03               	btfss	3,0
  4689  1610  0008               	return
  4690                           
  4691                           ;buffer.c: 33: buffer.x[buffer.n] = ch;
  4692  1611  1683               	bsf	3,5	;RP0=1, select bank3
  4693  1612  1703               	bsf	3,6	;RP1=1, select bank3
  4694  1613  0E3B               	swapf	(_buffer^(0+384)+16),w
  4695  1614  390F               	andlw	15
  4696  1615  3EAB               	addlw	(low (_buffer| (0+256)))& (0+255)
  4697  1616  0084               	movwf	4
  4698  1617  0874               	movf	buffer_putch@ch,w
  4699  1618  1783               	bsf	3,7	;select IRP bank3
  4700  1619  0080               	movwf	0
  4701                           
  4702                           ;buffer.c: 34: buffer.n++;
  4703  161A  0E3B               	swapf	(_buffer^(0+384)+16),w
  4704  161B  390F               	andlw	15
  4705  161C  1283               	bcf	3,5	;RP0=0, select bank0
  4706  161D  1303               	bcf	3,6	;RP1=0, select bank0
  4707  161E  00A1               	movwf	??_buffer_putch
  4708  161F  0AA1               	incf	??_buffer_putch,f
  4709  1620  0EA1               	swapf	??_buffer_putch,f
  4710  1621  1683               	bsf	3,5	;RP0=1, select bank3
  4711  1622  1703               	bsf	3,6	;RP1=1, select bank3
  4712  1623  083B               	movf	(_buffer^(0+384)+16),w
  4713  1624  1283               	bcf	3,5	;RP0=0, select bank0
  4714  1625  1303               	bcf	3,6	;RP1=0, select bank0
  4715  1626  0621               	xorwf	??_buffer_putch,w
  4716  1627  390F               	andlw	-241
  4717  1628  0621               	xorwf	??_buffer_putch,w
  4718  1629  1683               	bsf	3,5	;RP0=1, select bank3
  4719  162A  1703               	bsf	3,6	;RP1=1, select bank3
  4720  162B  00BB               	movwf	(_buffer^(0+384)+16)
  4721  162C  0008               	return
  4722  162D                     __end_of_buffer_putch:	
  4723  162D                     __ptext20:	
  4724 ;; *************** function ___fldiv *****************
  4725 ;; Defined at:
  4726 ;;		line 56 in file "/opt/microchip/xc8/v1.34/sources/common/fldiv.c"
  4727 ;; Parameters:    Size  Location     Type
  4728 ;;  f2              4   10[BANK0 ] unsigned char 
  4729 ;;  f1              4   14[BANK0 ] unsigned char 
  4730 ;; Auto vars:     Size  Location     Type
  4731 ;;  f3              4   22[BANK0 ] unsigned char 
  4732 ;;  sign            1   28[BANK0 ] unsigned char 
  4733 ;;  exp             1   27[BANK0 ] unsigned char 
  4734 ;;  cntr            1   26[BANK0 ] unsigned char 
  4735 ;; Return value:  Size  Location     Type
  4736 ;;                  4   10[BANK0 ] unsigned char 
  4737 ;; Registers used:
  4738 ;;		wreg, status,2, status,0, pclath, cstack
  4739 ;; Tracked objects:
  4740 ;;		On entry : 300/0
  4741 ;;		On exit  : 300/0
  4742 ;;		Unchanged: 0/0
  4743 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4744 ;;      Params:         0       8       0       0       0
  4745 ;;      Locals:         0       7       0       0       0
  4746 ;;      Temps:          0       4       0       0       0
  4747 ;;      Totals:         0      19       0       0       0
  4748 ;;Total ram usage:       19 bytes
  4749 ;; Hardware stack levels used:    1
  4750 ;; Hardware stack levels required when called:    2
  4751 ;; This function calls:
  4752 ;;		___flpack
  4753 ;; This function is called by:
  4754 ;;		_format_double
  4755 ;;		_measure_capacitance
  4756 ;;		_measure_inductance
  4757 ;;		_exp
  4758 ;; This function uses a non-reentrant model
  4759 ;;
  4760                           
  4761                           
  4762                           ;psect for function ___fldiv
  4763  162D                     ___fldiv:	
  4764                           
  4765                           ;incstack = 0
  4766                           ; Regs used in ___fldiv: [wreg+status,2+status,0+pclath+cstack]
  4767  162D  082F               	movf	___fldiv@f1,w
  4768  162E  00B3               	movwf	??___fldiv
  4769  162F  0830               	movf	___fldiv@f1+1,w
  4770  1630  00B4               	movwf	??___fldiv+1
  4771  1631  0831               	movf	___fldiv@f1+2,w
  4772  1632  00B5               	movwf	??___fldiv+2
  4773  1633  0832               	movf	___fldiv@f1+3,w
  4774  1634  00B6               	movwf	??___fldiv+3
  4775  1635  1003               	clrc
  4776  1636  0D35               	rlf	??___fldiv+2,w
  4777  1637  0D36               	rlf	??___fldiv+3,w
  4778  1638  00BC               	movwf	___fldiv@exp
  4779  1639  083C               	movf	___fldiv@exp,w
  4780  163A  1D03               	btfss	3,2
  4781  163B  2E41               	goto	l4002
  4782  163C  01AB               	clrf	?___fldiv
  4783  163D  01AC               	clrf	?___fldiv+1
  4784  163E  01AD               	clrf	?___fldiv+2
  4785  163F  01AE               	clrf	?___fldiv+3
  4786  1640  0008               	return
  4787  1641                     l4002:	
  4788  1641  082B               	movf	___fldiv@f2,w
  4789  1642  00B3               	movwf	??___fldiv
  4790  1643  082C               	movf	___fldiv@f2+1,w
  4791  1644  00B4               	movwf	??___fldiv+1
  4792  1645  082D               	movf	___fldiv@f2+2,w
  4793  1646  00B5               	movwf	??___fldiv+2
  4794  1647  082E               	movf	___fldiv@f2+3,w
  4795  1648  00B6               	movwf	??___fldiv+3
  4796  1649  1003               	clrc
  4797  164A  0D35               	rlf	??___fldiv+2,w
  4798  164B  0D36               	rlf	??___fldiv+3,w
  4799  164C  00BD               	movwf	___fldiv@sign
  4800  164D  083D               	movf	___fldiv@sign,w
  4801  164E  1D03               	btfss	3,2
  4802  164F  2E55               	goto	l4006
  4803  1650  01AB               	clrf	?___fldiv
  4804  1651  01AC               	clrf	?___fldiv+1
  4805  1652  01AD               	clrf	?___fldiv+2
  4806  1653  01AE               	clrf	?___fldiv+3
  4807  1654  0008               	return
  4808  1655                     l4006:	
  4809  1655  3089               	movlw	137
  4810  1656  073D               	addwf	___fldiv@sign,w
  4811  1657  00B3               	movwf	??___fldiv
  4812  1658  02BC               	subwf	___fldiv@exp,f
  4813  1659  0832               	movf	___fldiv@f1+3,w
  4814  165A  00BD               	movwf	___fldiv@sign
  4815  165B  082E               	movf	___fldiv@f2+3,w
  4816  165C  06BD               	xorwf	___fldiv@sign,f
  4817  165D  3080               	movlw	128
  4818  165E  05BD               	andwf	___fldiv@sign,f
  4819  165F  3020               	movlw	32
  4820  1660  17B1               	bsf	___fldiv@f1+2,7
  4821  1661  01B2               	clrf	___fldiv@f1+3
  4822  1662  17AD               	bsf	___fldiv@f2+2,7
  4823  1663  01AE               	clrf	___fldiv@f2+3
  4824  1664  00BB               	movwf	___fldiv@cntr
  4825  1665                     l4024:	
  4826  1665  1003               	clrc
  4827  1666  0DB7               	rlf	___fldiv@f3,f
  4828  1667  0DB8               	rlf	___fldiv@f3+1,f
  4829  1668  0DB9               	rlf	___fldiv@f3+2,f
  4830  1669  0DBA               	rlf	___fldiv@f3+3,f
  4831  166A  082E               	movf	___fldiv@f2+3,w
  4832  166B  0232               	subwf	___fldiv@f1+3,w
  4833  166C  1D03               	skipz
  4834  166D  2E78               	goto	u3625
  4835  166E  082D               	movf	___fldiv@f2+2,w
  4836  166F  0231               	subwf	___fldiv@f1+2,w
  4837  1670  1D03               	skipz
  4838  1671  2E78               	goto	u3625
  4839  1672  082C               	movf	___fldiv@f2+1,w
  4840  1673  0230               	subwf	___fldiv@f1+1,w
  4841  1674  1D03               	skipz
  4842  1675  2E78               	goto	u3625
  4843  1676  082B               	movf	___fldiv@f2,w
  4844  1677  022F               	subwf	___fldiv@f1,w
  4845  1678                     u3625:	
  4846  1678  1C03               	skipc
  4847  1679  2E8A               	goto	L9
  4848  167A  082B               	movf	___fldiv@f2,w
  4849  167B  02AF               	subwf	___fldiv@f1,f
  4850  167C  082C               	movf	___fldiv@f2+1,w
  4851  167D  1C03               	skipc
  4852  167E  0F2C               	incfsz	___fldiv@f2+1,w
  4853  167F  02B0               	subwf	___fldiv@f1+1,f
  4854  1680  082D               	movf	___fldiv@f2+2,w
  4855  1681  1C03               	skipc
  4856  1682  0F2D               	incfsz	___fldiv@f2+2,w
  4857  1683  02B1               	subwf	___fldiv@f1+2,f
  4858  1684  082E               	movf	___fldiv@f2+3,w
  4859  1685  1C03               	skipc
  4860  1686  0F2E               	incfsz	___fldiv@f2+3,w
  4861  1687  02B2               	subwf	___fldiv@f1+3,f
  4862  1688  1437               	bsf	___fldiv@f3,0
  4863  1689  1003               	clrc
  4864  168A                     L9:	
  4865  168A  0DAF               	rlf	___fldiv@f1,f
  4866  168B  0DB0               	rlf	___fldiv@f1+1,f
  4867  168C  0DB1               	rlf	___fldiv@f1+2,f
  4868  168D  0DB2               	rlf	___fldiv@f1+3,f
  4869  168E  0BBB               	decfsz	___fldiv@cntr,f
  4870  168F  2E65               	goto	l4024
  4871  1690  083A               	movf	___fldiv@f3+3,w
  4872  1691  00A4               	movwf	___flpack@arg+3
  4873  1692  0839               	movf	___fldiv@f3+2,w
  4874  1693  00A3               	movwf	___flpack@arg+2
  4875  1694  0838               	movf	___fldiv@f3+1,w
  4876  1695  00A2               	movwf	___flpack@arg+1
  4877  1696  0837               	movf	___fldiv@f3,w
  4878  1697  00A1               	movwf	___flpack@arg
  4879  1698  083C               	movf	___fldiv@exp,w
  4880  1699  00A5               	movwf	___flpack@exp
  4881  169A  083D               	movf	___fldiv@sign,w
  4882  169B  00A6               	movwf	___flpack@sign
  4883  169C  279E               	fcall	___flpack
  4884  169D  0824               	movf	?___flpack+3,w
  4885  169E  00AE               	movwf	?___fldiv+3
  4886  169F  0823               	movf	?___flpack+2,w
  4887  16A0  00AD               	movwf	?___fldiv+2
  4888  16A1  0822               	movf	?___flpack+1,w
  4889  16A2  00AC               	movwf	?___fldiv+1
  4890  16A3  0821               	movf	?___flpack,w
  4891  16A4  00AB               	movwf	?___fldiv
  4892  16A5  0008               	return
  4893  16A6                     __end_of___fldiv:	
  4894  16A6                     __ptext17:	
  4895 ;; *************** function ___fltol *****************
  4896 ;; Defined at:
  4897 ;;		line 43 in file "/opt/microchip/xc8/v1.34/sources/common/fltol.c"
  4898 ;; Parameters:    Size  Location     Type
  4899 ;;  f1              4   18[BANK1 ] int 
  4900 ;; Auto vars:     Size  Location     Type
  4901 ;;  exp1            1   27[BANK1 ] unsigned char 
  4902 ;;  sign1           1   26[BANK1 ] unsigned char 
  4903 ;; Return value:  Size  Location     Type
  4904 ;;                  4   18[BANK1 ] long 
  4905 ;; Registers used:
  4906 ;;		wreg, status,2, status,0
  4907 ;; Tracked objects:
  4908 ;;		On entry : 300/100
  4909 ;;		On exit  : 300/100
  4910 ;;		Unchanged: 0/0
  4911 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4912 ;;      Params:         0       0       4       0       0
  4913 ;;      Locals:         0       0       2       0       0
  4914 ;;      Temps:          0       0       4       0       0
  4915 ;;      Totals:         0       0      10       0       0
  4916 ;;Total ram usage:       10 bytes
  4917 ;; Hardware stack levels used:    1
  4918 ;; Hardware stack levels required when called:    1
  4919 ;; This function calls:
  4920 ;;		Nothing
  4921 ;; This function is called by:
  4922 ;;		_format_double
  4923 ;;		_measure_capacitance
  4924 ;;		_measure_inductance
  4925 ;;		_floor
  4926 ;;		_pow
  4927 ;;		_exp
  4928 ;; This function uses a non-reentrant model
  4929 ;;
  4930                           
  4931                           
  4932                           ;psect for function ___fltol
  4933  16A6                     ___fltol:	
  4934                           
  4935                           ;incstack = 0
  4936                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  4937  16A6  0832               	movf	___fltol@f1^(0+128),w
  4938  16A7  00B6               	movwf	??___fltol^(0+128)
  4939  16A8  0833               	movf	(___fltol@f1+1)^(0+128),w
  4940  16A9  00B7               	movwf	(??___fltol^(0+128)+1)
  4941  16AA  0834               	movf	(___fltol@f1+2)^(0+128),w
  4942  16AB  00B8               	movwf	(??___fltol^(0+128)+2)
  4943  16AC  0835               	movf	(___fltol@f1+3)^(0+128),w
  4944  16AD  00B9               	movwf	(??___fltol^(0+128)+3)
  4945  16AE  1003               	clrc
  4946  16AF  0D38               	rlf	(??___fltol^(0+128)+2),w
  4947  16B0  0D39               	rlf	(??___fltol^(0+128)+3),w
  4948  16B1  00BB               	movwf	___fltol@exp1^(0+128)
  4949  16B2  083B               	movf	___fltol@exp1^(0+128),w
  4950  16B3  1D03               	btfss	3,2
  4951  16B4  2EBA               	goto	l3914
  4952  16B5                     l3912:	
  4953  16B5  01B2               	clrf	?___fltol^(0+128)
  4954  16B6  01B3               	clrf	(?___fltol+1)^(0+128)
  4955  16B7  01B4               	clrf	(?___fltol+2)^(0+128)
  4956  16B8  01B5               	clrf	(?___fltol+3)^(0+128)
  4957  16B9  0008               	return
  4958  16BA                     l3914:	
  4959  16BA  0832               	movf	___fltol@f1^(0+128),w
  4960  16BB  00B6               	movwf	??___fltol^(0+128)
  4961  16BC  0833               	movf	(___fltol@f1+1)^(0+128),w
  4962  16BD  00B7               	movwf	(??___fltol^(0+128)+1)
  4963  16BE  0834               	movf	(___fltol@f1+2)^(0+128),w
  4964  16BF  00B8               	movwf	(??___fltol^(0+128)+2)
  4965  16C0  0835               	movf	(___fltol@f1+3)^(0+128),w
  4966  16C1  00B9               	movwf	(??___fltol^(0+128)+3)
  4967  16C2  301F               	movlw	31
  4968  16C3                     u3465:	
  4969  16C3  1003               	clrc
  4970  16C4  0CB9               	rrf	(??___fltol^(0+128)+3),f
  4971  16C5  0CB8               	rrf	(??___fltol^(0+128)+2),f
  4972  16C6  0CB7               	rrf	(??___fltol^(0+128)+1),f
  4973  16C7  0CB6               	rrf	??___fltol^(0+128),f
  4974  16C8  3EFF               	addlw	-1
  4975  16C9  1D03               	skipz
  4976  16CA  2EC3               	goto	u3465
  4977  16CB  0836               	movf	??___fltol^(0+128),w
  4978  16CC  00BA               	movwf	___fltol@sign1^(0+128)
  4979  16CD  3096               	movlw	150
  4980  16CE  17B4               	bsf	(___fltol@f1^(0+128)+2),7
  4981  16CF  01B5               	clrf	(___fltol@f1+3)^(0+128)
  4982  16D0  02BB               	subwf	___fltol@exp1^(0+128),f
  4983  16D1  1FBB               	btfss	___fltol@exp1^(0+128),7
  4984  16D2  2EE0               	goto	l3932
  4985  16D3  083B               	movf	___fltol@exp1^(0+128),w
  4986  16D4  3A80               	xorlw	128
  4987  16D5  3E97               	addlw	151
  4988  16D6  1C03               	btfss	3,0
  4989  16D7  2EB5               	goto	l3912
  4990  16D8                     l3928:	
  4991  16D8  1003               	clrc
  4992  16D9  0CB5               	rrf	(___fltol@f1+3)^(0+128),f
  4993  16DA  0CB4               	rrf	(___fltol@f1+2)^(0+128),f
  4994  16DB  0CB3               	rrf	(___fltol@f1+1)^(0+128),f
  4995  16DC  0CB2               	rrf	___fltol@f1^(0+128),f
  4996  16DD  0FBB               	incfsz	___fltol@exp1^(0+128),f
  4997  16DE  2ED8               	goto	l3928
  4998  16DF  2EEE               	goto	l3940
  4999  16E0                     l3932:	
  5000  16E0  3020               	movlw	32
  5001  16E1  023B               	subwf	___fltol@exp1^(0+128),w
  5002  16E2  1803               	btfsc	3,0
  5003  16E3  2EB5               	goto	l3912
  5004  16E4                     l3938:	
  5005  16E4  083B               	movf	___fltol@exp1^(0+128),w
  5006  16E5  1903               	btfsc	3,2
  5007  16E6  2EEE               	goto	l3940
  5008  16E7  1003               	clrc
  5009  16E8  0DB2               	rlf	___fltol@f1^(0+128),f
  5010  16E9  0DB3               	rlf	(___fltol@f1+1)^(0+128),f
  5011  16EA  0DB4               	rlf	(___fltol@f1+2)^(0+128),f
  5012  16EB  0DB5               	rlf	(___fltol@f1+3)^(0+128),f
  5013  16EC  03BB               	decf	___fltol@exp1^(0+128),f
  5014  16ED  2EE4               	goto	l3938
  5015  16EE                     l3940:	
  5016  16EE  083A               	movf	___fltol@sign1^(0+128),w
  5017  16EF  1903               	btfsc	3,2
  5018  16F0  0008               	return
  5019  16F1  09B2               	comf	___fltol@f1^(0+128),f
  5020  16F2  09B3               	comf	(___fltol@f1+1)^(0+128),f
  5021  16F3  09B4               	comf	(___fltol@f1+2)^(0+128),f
  5022  16F4  09B5               	comf	(___fltol@f1+3)^(0+128),f
  5023  16F5  0AB2               	incf	___fltol@f1^(0+128),f
  5024  16F6  1903               	skipnz
  5025  16F7  0AB3               	incf	(___fltol@f1+1)^(0+128),f
  5026  16F8  1903               	skipnz
  5027  16F9  0AB4               	incf	(___fltol@f1+2)^(0+128),f
  5028  16FA  1903               	skipnz
  5029  16FB  0AB5               	incf	(___fltol@f1+3)^(0+128),f
  5030  16FC  0008               	return
  5031  16FD                     __end_of___fltol:	
  5032  16FD                     __ptext29:	
  5033 ;; *************** function ___awtofl *****************
  5034 ;; Defined at:
  5035 ;;		line 31 in file "/opt/microchip/xc8/v1.34/sources/common/awtofl.c"
  5036 ;; Parameters:    Size  Location     Type
  5037 ;;  c               2   10[BANK0 ] int 
  5038 ;; Auto vars:     Size  Location     Type
  5039 ;;  f1              4    0        int 
  5040 ;;  sign            1    4[COMMON] unsigned char 
  5041 ;; Return value:  Size  Location     Type
  5042 ;;                  4   10[BANK0 ] unsigned char 
  5043 ;; Registers used:
  5044 ;;		wreg, status,2, status,0, pclath, cstack
  5045 ;; Tracked objects:
  5046 ;;		On entry : 300/0
  5047 ;;		On exit  : 300/0
  5048 ;;		Unchanged: 0/0
  5049 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5050 ;;      Params:         0       4       0       0       0
  5051 ;;      Locals:         1       0       0       0       0
  5052 ;;      Temps:          0       0       0       0       0
  5053 ;;      Totals:         1       4       0       0       0
  5054 ;;Total ram usage:        5 bytes
  5055 ;; Hardware stack levels used:    1
  5056 ;; Hardware stack levels required when called:    2
  5057 ;; This function calls:
  5058 ;;		___flpack
  5059 ;; This function is called by:
  5060 ;;		_format_double
  5061 ;;		_log
  5062 ;;		_exp
  5063 ;; This function uses a non-reentrant model
  5064 ;;
  5065                           
  5066                           
  5067                           ;psect for function ___awtofl
  5068  16FD                     ___awtofl:	
  5069                           
  5070                           ;incstack = 0
  5071                           ; Regs used in ___awtofl: [wreg+status,2+status,0+pclath+cstack]
  5072  16FD  01F4               	clrf	___awtofl@sign
  5073  16FE  1FAC               	btfss	___awtofl@c+1,7
  5074  16FF  2F06               	goto	l3994
  5075  1700  09AB               	comf	___awtofl@c,f
  5076  1701  09AC               	comf	___awtofl@c+1,f
  5077  1702  0AAB               	incf	___awtofl@c,f
  5078  1703  1903               	skipnz
  5079  1704  0AAC               	incf	___awtofl@c+1,f
  5080  1705  0AF4               	incf	___awtofl@sign,f
  5081  1706                     l3994:	
  5082  1706  082B               	movf	___awtofl@c,w
  5083  1707  00A1               	movwf	___flpack@arg
  5084  1708  082C               	movf	___awtofl@c+1,w
  5085  1709  00A2               	movwf	___flpack@arg+1
  5086  170A  3096               	movlw	150
  5087  170B  01A3               	clrf	___flpack@arg+2
  5088  170C  01A4               	clrf	___flpack@arg+3
  5089  170D  00A5               	movwf	___flpack@exp
  5090  170E  0874               	movf	___awtofl@sign,w
  5091  170F  00A6               	movwf	___flpack@sign
  5092  1710  279E               	fcall	___flpack
  5093  1711  0824               	movf	?___flpack+3,w
  5094  1712  00AE               	movwf	?___awtofl+3
  5095  1713  0823               	movf	?___flpack+2,w
  5096  1714  00AD               	movwf	?___awtofl+2
  5097  1715  0822               	movf	?___flpack+1,w
  5098  1716  00AC               	movwf	?___awtofl+1
  5099  1717  0821               	movf	?___flpack,w
  5100  1718  00AB               	movwf	?___awtofl
  5101  1719  0008               	return
  5102  171A                     __end_of___awtofl:	
  5103  171A                     __ptext19:	
  5104 ;; *************** function ___flsub *****************
  5105 ;; Defined at:
  5106 ;;		line 18 in file "/opt/microchip/xc8/v1.34/sources/common/flsub.c"
  5107 ;; Parameters:    Size  Location     Type
  5108 ;;  f2              4   63[BANK0 ] unsigned char 
  5109 ;;  f1              4   67[BANK0 ] unsigned char 
  5110 ;; Auto vars:     Size  Location     Type
  5111 ;;		None
  5112 ;; Return value:  Size  Location     Type
  5113 ;;                  4   63[BANK0 ] unsigned char 
  5114 ;; Registers used:
  5115 ;;		wreg, status,2, status,0, pclath, cstack
  5116 ;; Tracked objects:
  5117 ;;		On entry : 300/0
  5118 ;;		On exit  : 300/0
  5119 ;;		Unchanged: 0/0
  5120 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5121 ;;      Params:         0       8       0       0       0
  5122 ;;      Locals:         0       0       0       0       0
  5123 ;;      Temps:          0       0       0       0       0
  5124 ;;      Totals:         0       8       0       0       0
  5125 ;;Total ram usage:        8 bytes
  5126 ;; Hardware stack levels used:    1
  5127 ;; Hardware stack levels required when called:    3
  5128 ;; This function calls:
  5129 ;;		___fladd
  5130 ;; This function is called by:
  5131 ;;		_format_double
  5132 ;;		_measure_capacitance
  5133 ;;		_measure_inductance
  5134 ;;		_exp
  5135 ;; This function uses a non-reentrant model
  5136 ;;
  5137                           
  5138                           
  5139                           ;psect for function ___flsub
  5140  171A                     ___flsub:	
  5141                           
  5142                           ;incstack = 0
  5143                           ; Regs used in ___flsub: [wreg+status,2+status,0+pclath+cstack]
  5144  171A  0863               	movf	___flsub@f2+3,w
  5145  171B  0462               	iorwf	___flsub@f2+2,w
  5146  171C  0461               	iorwf	___flsub@f2+1,w
  5147  171D  0460               	iorwf	___flsub@f2,w
  5148  171E  1903               	skipnz
  5149  171F  2F22               	goto	l4042
  5150  1720  3080               	movlw	128
  5151  1721  06E3               	xorwf	___flsub@f2+3,f
  5152  1722                     l4042:	
  5153  1722  0863               	movf	___flsub@f2+3,w
  5154  1723  00D4               	movwf	___fladd@f1+3
  5155  1724  0862               	movf	___flsub@f2+2,w
  5156  1725  00D3               	movwf	___fladd@f1+2
  5157  1726  0861               	movf	___flsub@f2+1,w
  5158  1727  00D2               	movwf	___fladd@f1+1
  5159  1728  0860               	movf	___flsub@f2,w
  5160  1729  00D1               	movwf	___fladd@f1
  5161  172A  0867               	movf	___flsub@f1+3,w
  5162  172B  00D8               	movwf	___fladd@f2+3
  5163  172C  0866               	movf	___flsub@f1+2,w
  5164  172D  00D7               	movwf	___fladd@f2+2
  5165  172E  0865               	movf	___flsub@f1+1,w
  5166  172F  00D6               	movwf	___fladd@f2+1
  5167  1730  0864               	movf	___flsub@f1,w
  5168  1731  00D5               	movwf	___fladd@f2
  5169  1732  120A  158A  20C5   	fcall	___fladd
  5170  1735  0854               	movf	?___fladd+3,w
  5171  1736  00E3               	movwf	?___flsub+3
  5172  1737  0853               	movf	?___fladd+2,w
  5173  1738  00E2               	movwf	?___flsub+2
  5174  1739  0852               	movf	?___fladd+1,w
  5175  173A  00E1               	movwf	?___flsub+1
  5176  173B  0851               	movf	?___fladd,w
  5177  173C  00E0               	movwf	?___flsub
  5178  173D  0008               	return
  5179  173E                     __end_of___flsub:	
  5180  173E                     __ptext41:	
  5181 ;; *************** function _format_number *****************
  5182 ;; Defined at:
  5183 ;;		line 15 in file "../../../lib/format.c"
  5184 ;; Parameters:    Size  Location     Type
  5185 ;;  n               2    7[BANK0 ] unsigned int 
  5186 ;;  base            1    9[BANK0 ] unsigned char 
  5187 ;;  pad             1   10[BANK0 ] char 
  5188 ;; Auto vars:     Size  Location     Type
  5189 ;;  buf            32   11[BANK0 ] unsigned char [32]
  5190 ;;  i               1   47[BANK0 ] char 
  5191 ;;  di              1   46[BANK0 ] unsigned char 
  5192 ;;  padchar         1   43[BANK0 ] unsigned char 
  5193 ;; Return value:  Size  Location     Type
  5194 ;;		None               void
  5195 ;; Registers used:
  5196 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5197 ;; Tracked objects:
  5198 ;;		On entry : 300/0
  5199 ;;		On exit  : 300/0
  5200 ;;		Unchanged: 0/0
  5201 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5202 ;;      Params:         0       4       0       0       0
  5203 ;;      Locals:         0      37       0       0       0
  5204 ;;      Temps:          1       0       0       0       0
  5205 ;;      Totals:         1      41       0       0       0
  5206 ;;Total ram usage:       42 bytes
  5207 ;; Hardware stack levels used:    1
  5208 ;; Hardware stack levels required when called:    2
  5209 ;; This function calls:
  5210 ;;		___lwdiv
  5211 ;;		___lwmod
  5212 ;;		_buffer_putch
  5213 ;; This function is called by:
  5214 ;;		_print_reading
  5215 ;;		_format_xint32
  5216 ;;		_measure_freq
  5217 ;; This function uses a non-reentrant model
  5218 ;;
  5219                           
  5220                           
  5221                           ;psect for function _format_number
  5222  173E                     _format_number:	
  5223  173E                     l4250:	
  5224                           ;incstack = 0
  5225                           ; Regs used in _format_number: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5226                           
  5227  173E  3020               	movlw	32
  5228                           
  5229                           ;format.c: 16: char buf[8 * sizeof(long)];
  5230                           ;format.c: 17: uint8_t di;
  5231                           ;format.c: 18: int8_t i = 0;
  5232  173F  01D0               	clrf	format_number@i
  5233                           
  5234                           ;format.c: 19: char padchar = ' ';
  5235  1740  00CC               	movwf	format_number@padchar
  5236                           
  5237                           ;format.c: 21: if(pad < 0) {
  5238  1741  1FAB               	btfss	format_number@pad,7
  5239  1742  2F47               	goto	l4260
  5240  1743  3030               	movlw	48
  5241                           
  5242                           ;format.c: 22: pad = -pad;
  5243  1744  09AB               	comf	format_number@pad,f
  5244  1745  0AAB               	incf	format_number@pad,f
  5245                           
  5246                           ;format.c: 23: padchar = '0';
  5247  1746  00CC               	movwf	format_number@padchar
  5248  1747                     l4260:	
  5249                           
  5250                           ;format.c: 35: di = n % base;
  5251  1747  082A               	movf	format_number@base,w
  5252  1748  00A1               	movwf	___lwmod@divisor
  5253  1749  01A2               	clrf	___lwmod@divisor+1
  5254  174A  0829               	movf	format_number@n+1,w
  5255  174B  00A4               	movwf	___lwmod@dividend+1
  5256  174C  0828               	movf	format_number@n,w
  5257  174D  00A3               	movwf	___lwmod@dividend
  5258  174E  160A  158A  2687  160A  118A  	fcall	___lwmod
  5259  1753  0821               	movf	?___lwmod,w
  5260  1754  00CF               	movwf	format_number@di
  5261                           
  5262                           ;format.c: 36: buf[i++] = (di < 10 ? (uint8_t)'0' + di : (uint8_t)'A' + di - 10);
  5263  1755  300A               	movlw	10
  5264  1756  024F               	subwf	format_number@di,w
  5265  1757  084F               	movf	format_number@di,w
  5266  1758  00CD               	movwf	_format_number$158
  5267  1759  1C03               	skipc
  5268  175A  2F5D               	goto	L15
  5269  175B  3037               	movlw	55
  5270  175C  2F5E               	goto	L14
  5271  175D                     L15:	
  5272  175D  3030               	movlw	48
  5273  175E                     L14:	
  5274  175E  01CE               	clrf	_format_number$158+1
  5275  175F  07CD               	addwf	_format_number$158,f
  5276  1760  1803               	skipnc
  5277  1761  0ACE               	incf	_format_number$158+1,f
  5278  1762  0850               	movf	format_number@i,w
  5279  1763  3E2C               	addlw	(low (format_number@buf| 0))& (0+255)
  5280  1764  0084               	movwf	4
  5281  1765  084D               	movf	_format_number$158,w
  5282  1766  1383               	bcf	3,7	;select IRP bank0
  5283  1767  0080               	movwf	0
  5284  1768  0AD0               	incf	format_number@i,f
  5285                           
  5286                           ;format.c: 38: n /= base;
  5287  1769  082A               	movf	format_number@base,w
  5288  176A  00A1               	movwf	___lwdiv@divisor
  5289  176B  01A2               	clrf	___lwdiv@divisor+1
  5290  176C  0829               	movf	format_number@n+1,w
  5291  176D  00A4               	movwf	___lwdiv@dividend+1
  5292  176E  0828               	movf	format_number@n,w
  5293  176F  00A3               	movwf	___lwdiv@dividend
  5294  1770  160A  158A  2636  160A  118A  	fcall	___lwdiv
  5295  1775  0822               	movf	?___lwdiv+1,w
  5296  1776  00A9               	movwf	format_number@n+1
  5297  1777  0821               	movf	?___lwdiv,w
  5298  1778  00A8               	movwf	format_number@n
  5299                           
  5300                           ;format.c: 39: } while(n > 0);
  5301  1779  0429               	iorwf	format_number@n+1,w
  5302  177A  1903               	btfsc	3,2
  5303  177B  2F81               	goto	l4278
  5304  177C  2F47               	goto	l4260
  5305  177D                     l4276:	
  5306  177D  084C               	movf	format_number@padchar,w
  5307  177E  25F9  160A  118A   	fcall	_buffer_putch
  5308  1781                     l4278:	
  5309  1781  1283               	bcf	3,5	;RP0=0, select bank0
  5310  1782  1303               	bcf	3,6	;RP1=0, select bank0
  5311  1783  0850               	movf	format_number@i,w
  5312  1784  3A80               	xorlw	128
  5313  1785  00F5               	movwf	??_format_number
  5314  1786  082B               	movf	format_number@pad,w
  5315  1787  03AB               	decf	format_number@pad,f
  5316  1788  3A80               	xorlw	128
  5317  1789  02F5               	subwf	??_format_number,f
  5318  178A  1C03               	skipc
  5319  178B  2F7D               	goto	l4276
  5320  178C                     l4280:	
  5321                           
  5322                           ;format.c: 43: for(; i > 0; i--) {
  5323  178C  0850               	movf	format_number@i,w
  5324  178D  3A80               	xorlw	128
  5325  178E  3E7F               	addlw	-129
  5326  178F  1C03               	btfss	3,0
  5327  1790  0008               	return
  5328                           
  5329                           ;format.c: 44: buffer_putch((char)buf[(int16_t)i - 1]);
  5330  1791  0850               	movf	format_number@i,w
  5331  1792  3EFF               	addlw	255
  5332  1793  3E2C               	addlw	(low (format_number@buf| 0))& (0+255)
  5333  1794  0084               	movwf	4
  5334  1795  1383               	bcf	3,7	;select IRP bank0
  5335  1796  0800               	movf	0,w
  5336  1797  25F9  160A  118A   	fcall	_buffer_putch
  5337  179A  1283               	bcf	3,5	;RP0=0, select bank0
  5338  179B  1303               	bcf	3,6	;RP1=0, select bank0
  5339  179C  03D0               	decf	format_number@i,f
  5340  179D  2F8C               	goto	l4280
  5341  179E                     __end_of_format_number:	
  5342  179E                     __ptext53:	
  5343 ;; *************** function ___flpack *****************
  5344 ;; Defined at:
  5345 ;;		line 63 in file "/opt/microchip/xc8/v1.34/sources/common/double.c"
  5346 ;; Parameters:    Size  Location     Type
  5347 ;;  arg             4    0[BANK0 ] unsigned long 
  5348 ;;  exp             1    4[BANK0 ] unsigned char 
  5349 ;;  sign            1    5[BANK0 ] unsigned char 
  5350 ;; Auto vars:     Size  Location     Type
  5351 ;;		None
  5352 ;; Return value:  Size  Location     Type
  5353 ;;                  4    0[BANK0 ] unsigned char 
  5354 ;; Registers used:
  5355 ;;		wreg, status,2, status,0
  5356 ;; Tracked objects:
  5357 ;;		On entry : 300/0
  5358 ;;		On exit  : 300/0
  5359 ;;		Unchanged: 0/0
  5360 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5361 ;;      Params:         0       6       0       0       0
  5362 ;;      Locals:         0       0       0       0       0
  5363 ;;      Temps:          0       4       0       0       0
  5364 ;;      Totals:         0      10       0       0       0
  5365 ;;Total ram usage:       10 bytes
  5366 ;; Hardware stack levels used:    1
  5367 ;; Hardware stack levels required when called:    1
  5368 ;; This function calls:
  5369 ;;		Nothing
  5370 ;; This function is called by:
  5371 ;;		___altofl
  5372 ;;		___awtofl
  5373 ;;		___fladd
  5374 ;;		___fldiv
  5375 ;;		___flmul
  5376 ;;		___lltofl
  5377 ;;		___lwtofl
  5378 ;; This function uses a non-reentrant model
  5379 ;;
  5380                           
  5381                           
  5382                           ;psect for function ___flpack
  5383  179E                     ___flpack:	
  5384                           
  5385                           ;incstack = 0
  5386                           ; Regs used in ___flpack: [wreg+status,2+status,0]
  5387  179E  0825               	movf	___flpack@exp,w
  5388  179F  1903               	btfsc	3,2
  5389  17A0  2FA7               	goto	l806
  5390  17A1  0824               	movf	___flpack@arg+3,w
  5391  17A2  0423               	iorwf	___flpack@arg+2,w
  5392  17A3  0422               	iorwf	___flpack@arg+1,w
  5393  17A4  0421               	iorwf	___flpack@arg,w
  5394  17A5  1D03               	skipz
  5395  17A6  2FB2               	goto	l3700
  5396  17A7                     l806:	
  5397  17A7  01A1               	clrf	?___flpack
  5398  17A8  01A2               	clrf	?___flpack+1
  5399  17A9  01A3               	clrf	?___flpack+2
  5400  17AA  01A4               	clrf	?___flpack+3
  5401  17AB  0008               	return
  5402  17AC                     l3698:	
  5403  17AC  0AA5               	incf	___flpack@exp,f
  5404  17AD  1003               	clrc
  5405  17AE  0CA4               	rrf	___flpack@arg+3,f
  5406  17AF  0CA3               	rrf	___flpack@arg+2,f
  5407  17B0  0CA2               	rrf	___flpack@arg+1,f
  5408  17B1  0CA1               	rrf	___flpack@arg,f
  5409  17B2                     l3700:	
  5410  17B2  30FE               	movlw	254
  5411  17B3  0524               	andwf	___flpack@arg+3,w
  5412  17B4  1903               	btfsc	3,2
  5413  17B5  2FC4               	goto	l3704
  5414  17B6  2FAC               	goto	l3698
  5415  17B7                     l3702:	
  5416  17B7  0AA5               	incf	___flpack@exp,f
  5417  17B8  0AA1               	incf	___flpack@arg,f
  5418  17B9  1903               	skipnz
  5419  17BA  0AA2               	incf	___flpack@arg+1,f
  5420  17BB  1903               	skipnz
  5421  17BC  0AA3               	incf	___flpack@arg+2,f
  5422  17BD  1903               	skipnz
  5423  17BE  0AA4               	incf	___flpack@arg+3,f
  5424  17BF  1003               	clrc
  5425  17C0  0CA4               	rrf	___flpack@arg+3,f
  5426  17C1  0CA3               	rrf	___flpack@arg+2,f
  5427  17C2  0CA2               	rrf	___flpack@arg+1,f
  5428  17C3  0CA1               	rrf	___flpack@arg,f
  5429  17C4                     l3704:	
  5430  17C4  30FF               	movlw	255
  5431  17C5  0524               	andwf	___flpack@arg+3,w
  5432  17C6  1903               	btfsc	3,2
  5433  17C7  2FD3               	goto	l3708
  5434  17C8  2FB7               	goto	l3702
  5435  17C9                     l3710:	
  5436  17C9  3002               	movlw	2
  5437  17CA  0225               	subwf	___flpack@exp,w
  5438  17CB  1C03               	btfss	3,0
  5439  17CC  2FD5               	goto	l818
  5440  17CD  03A5               	decf	___flpack@exp,f
  5441  17CE  1003               	clrc
  5442  17CF  0DA1               	rlf	___flpack@arg,f
  5443  17D0  0DA2               	rlf	___flpack@arg+1,f
  5444  17D1  0DA3               	rlf	___flpack@arg+2,f
  5445  17D2  0DA4               	rlf	___flpack@arg+3,f
  5446  17D3                     l3708:	
  5447  17D3  1FA3               	btfss	___flpack@arg+2,7
  5448  17D4  2FC9               	goto	l3710
  5449  17D5                     l818:	
  5450  17D5  1825               	btfsc	___flpack@exp,0
  5451  17D6  2FDA               	goto	l3714
  5452  17D7  307F               	movlw	127
  5453  17D8  05A3               	andwf	___flpack@arg+2,f
  5454  17D9  30FF               	movlw	255
  5455  17DA                     l3714:	
  5456  17DA  1003               	clrc
  5457  17DB  0CA5               	rrf	___flpack@exp,f
  5458  17DC  0825               	movf	___flpack@exp,w
  5459  17DD  00AA               	movwf	??___flpack+3
  5460  17DE  01A9               	clrf	??___flpack+2
  5461  17DF  01A8               	clrf	??___flpack+1
  5462  17E0  01A7               	clrf	??___flpack
  5463  17E1  0827               	movf	??___flpack,w
  5464  17E2  04A1               	iorwf	___flpack@arg,f
  5465  17E3  0828               	movf	??___flpack+1,w
  5466  17E4  04A2               	iorwf	___flpack@arg+1,f
  5467  17E5  0829               	movf	??___flpack+2,w
  5468  17E6  04A3               	iorwf	___flpack@arg+2,f
  5469  17E7  082A               	movf	??___flpack+3,w
  5470  17E8  04A4               	iorwf	___flpack@arg+3,f
  5471  17E9  0826               	movf	___flpack@sign,w
  5472  17EA  1D03               	btfss	3,2
  5473  17EB  17A4               	bsf	___flpack@arg+3,7
  5474  17EC  0008               	return
  5475  17ED                     __end_of___flpack:	
  5476  17ED                     __ptext52:	
  5477 ;; *************** function ___lwtofl *****************
  5478 ;; Defined at:
  5479 ;;		line 28 in file "/opt/microchip/xc8/v1.34/sources/common/lwtofl.c"
  5480 ;; Parameters:    Size  Location     Type
  5481 ;;  c               2   54[BANK0 ] unsigned int 
  5482 ;; Auto vars:     Size  Location     Type
  5483 ;;		None
  5484 ;; Return value:  Size  Location     Type
  5485 ;;                  4   54[BANK0 ] unsigned int 
  5486 ;; Registers used:
  5487 ;;		wreg, status,2, status,0, pclath, cstack
  5488 ;; Tracked objects:
  5489 ;;		On entry : 300/0
  5490 ;;		On exit  : 300/0
  5491 ;;		Unchanged: 0/0
  5492 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5493 ;;      Params:         0       4       0       0       0
  5494 ;;      Locals:         0       0       0       0       0
  5495 ;;      Temps:          0       0       0       0       0
  5496 ;;      Totals:         0       4       0       0       0
  5497 ;;Total ram usage:        4 bytes
  5498 ;; Hardware stack levels used:    1
  5499 ;; Hardware stack levels required when called:    2
  5500 ;; This function calls:
  5501 ;;		___flpack
  5502 ;; This function is called by:
  5503 ;;		_calibrate
  5504 ;;		_measure_capacitance
  5505 ;;		_measure_inductance
  5506 ;; This function uses a non-reentrant model
  5507 ;;
  5508                           
  5509                           
  5510                           ;psect for function ___lwtofl
  5511  17ED                     ___lwtofl:	
  5512                           
  5513                           ;incstack = 0
  5514                           ; Regs used in ___lwtofl: [wreg+status,2+status,0+pclath+cstack]
  5515  17ED  0857               	movf	___lwtofl@c,w
  5516  17EE  00A1               	movwf	___flpack@arg
  5517  17EF  0858               	movf	___lwtofl@c+1,w
  5518  17F0  00A2               	movwf	___flpack@arg+1
  5519  17F1  3096               	movlw	150
  5520  17F2  01A3               	clrf	___flpack@arg+2
  5521  17F3  01A4               	clrf	___flpack@arg+3
  5522  17F4  00A5               	movwf	___flpack@exp
  5523  17F5  01A6               	clrf	___flpack@sign
  5524  17F6  279E               	fcall	___flpack
  5525  17F7  0824               	movf	?___flpack+3,w
  5526  17F8  00DA               	movwf	?___lwtofl+3
  5527  17F9  0823               	movf	?___flpack+2,w
  5528  17FA  00D9               	movwf	?___lwtofl+2
  5529  17FB  0822               	movf	?___flpack+1,w
  5530  17FC  00D8               	movwf	?___lwtofl+1
  5531  17FD  0821               	movf	?___flpack,w
  5532  17FE  00D7               	movwf	?___lwtofl
  5533  17FF  0008               	return
  5534  1800                     __end_of___lwtofl:	
  5535                           
  5536                           	psect	text7
  5537  1C14                     __ptext7:	
  5538 ;; *************** function _print_unit *****************
  5539 ;; Defined at:
  5540 ;;		line 123 in file "../../../src/print.c"
  5541 ;; Parameters:    Size  Location     Type
  5542 ;;  unit            1    wreg     unsigned char 
  5543 ;; Auto vars:     Size  Location     Type
  5544 ;;  unit            1    0[COMMON] unsigned char 
  5545 ;; Return value:  Size  Location     Type
  5546 ;;		None               void
  5547 ;; Registers used:
  5548 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5549 ;; Tracked objects:
  5550 ;;		On entry : 0/100
  5551 ;;		On exit  : 300/0
  5552 ;;		Unchanged: 0/0
  5553 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5554 ;;      Params:         0       0       0       0       0
  5555 ;;      Locals:         0       0       0       0       0
  5556 ;;      Temps:          0       2       0       0       0
  5557 ;;      Totals:         0       2       0       0       0
  5558 ;;Total ram usage:        2 bytes
  5559 ;; Hardware stack levels used:    1
  5560 ;; Hardware stack levels required when called:    5
  5561 ;; This function calls:
  5562 ;;		_lcd_gotoxy
  5563 ;;		_ser_puts
  5564 ;; This function is called by:
  5565 ;;		_measure_capacitance
  5566 ;;		_measure_inductance
  5567 ;; This function uses a non-reentrant model
  5568 ;;
  5569                           
  5570                           
  5571                           ;psect for function _print_unit
  5572  1C14                     _print_unit:	
  5573  1C14                     l4384:	
  5574                           ;incstack = 0
  5575                           ; Regs used in _print_unit: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5576                           
  5577                           
  5578                           ;print.c: 131: static const char* units[8] = {"H", "mH", "uH", "nH", "mF", "uF", "nF", "
      +                          pF"};
  5579                           ;print.c: 132: lcd_gotoxy(14, 0);
  5580  1C14  1283               	bcf	3,5	;RP0=0, select bank0
  5581  1C15  1303               	bcf	3,6	;RP1=0, select bank0
  5582  1C16  300E               	movlw	14
  5583  1C17  01A4               	clrf	lcd_gotoxy@row
  5584  1C18  120A  158A  277C  160A  158A  	fcall	_lcd_gotoxy
  5585                           
  5586                           ;print.c: 136: lcd_gotoxy(16 - (buffer.n - buffer.p), 0);
  5587  1C1D  1283               	bcf	3,5	;RP0=0, select bank0
  5588  1C1E  1303               	bcf	3,6	;RP1=0, select bank0
  5589  1C1F  01A4               	clrf	lcd_gotoxy@row
  5590  1C20  1683               	bsf	3,5	;RP0=1, select bank3
  5591  1C21  1703               	bsf	3,6	;RP1=1, select bank3
  5592  1C22  0E3B               	swapf	(_buffer^(0+384)+16),w
  5593  1C23  390F               	andlw	15
  5594  1C24  1283               	bcf	3,5	;RP0=0, select bank0
  5595  1C25  1303               	bcf	3,6	;RP1=0, select bank0
  5596  1C26  00AA               	movwf	??_print_unit
  5597  1C27  1683               	bsf	3,5	;RP0=1, select bank3
  5598  1C28  1703               	bsf	3,6	;RP1=1, select bank3
  5599  1C29  083B               	movf	(_buffer^(0+384)+16),w
  5600  1C2A  390F               	andlw	15
  5601  1C2B  1283               	bcf	3,5	;RP0=0, select bank0
  5602  1C2C  1303               	bcf	3,6	;RP1=0, select bank0
  5603  1C2D  00AB               	movwf	??_print_unit+1
  5604  1C2E  082A               	movf	??_print_unit,w
  5605  1C2F  022B               	subwf	??_print_unit+1,w
  5606  1C30  3E10               	addlw	16
  5607  1C31  120A  158A  277C   	fcall	_lcd_gotoxy
  5608                           
  5609                           ;print.c: 139: ser_puts("\r\n");
  5610  1C34  30F4               	movlw	low (STR_9| (0+32768))
  5611  1C35  1283               	bcf	3,5	;RP0=0, select bank0
  5612  1C36  1303               	bcf	3,6	;RP1=0, select bank0
  5613  1C37  00A1               	movwf	ser_puts@s
  5614  1C38  3098               	movlw	high (STR_9| (0+32768))
  5615  1C39  00A2               	movwf	ser_puts@s+1
  5616  1C3A  160A  118A  2C23   	ljmp	l4096
  5617  1C3D                     __end_of_print_unit:	
  5618                           
  5619                           	psect	text12
  5620  1EAB                     __ptext12:	
  5621 ;; *************** function _pow *****************
  5622 ;; Defined at:
  5623 ;;		line 5 in file "/opt/microchip/xc8/v1.34/sources/common/pow.c"
  5624 ;; Parameters:    Size  Location     Type
  5625 ;;  x               4   58[BANK1 ] short 
  5626 ;;  y               4   62[BANK1 ] short 
  5627 ;; Auto vars:     Size  Location     Type
  5628 ;;  yi              4   75[BANK1 ] unsigned long 
  5629 ;;  sign            1   74[BANK1 ] unsigned char 
  5630 ;; Return value:  Size  Location     Type
  5631 ;;                  4   58[BANK1 ] unsigned char 
  5632 ;; Registers used:
  5633 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5634 ;; Tracked objects:
  5635 ;;		On entry : 300/100
  5636 ;;		On exit  : 300/100
  5637 ;;		Unchanged: 0/0
  5638 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5639 ;;      Params:         0       0       8       0       0
  5640 ;;      Locals:         0       0      13       0       0
  5641 ;;      Temps:          0       0       0       0       0
  5642 ;;      Totals:         0       0      21       0       0
  5643 ;;Total ram usage:       21 bytes
  5644 ;; Hardware stack levels used:    1
  5645 ;; Hardware stack levels required when called:    5
  5646 ;; This function calls:
  5647 ;;		___flge
  5648 ;;		___flmul
  5649 ;;		___flneg
  5650 ;;		___fltol
  5651 ;;		___lltofl
  5652 ;;		_exp
  5653 ;;		_log
  5654 ;; This function is called by:
  5655 ;;		_format_double
  5656 ;; This function uses a non-reentrant model
  5657 ;;
  5658                           
  5659                           
  5660                           ;psect for function _pow
  5661  1EAB                     _pow:	
  5662                           
  5663                           ;incstack = 0
  5664                           ; Regs used in _pow: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5665  1EAB  01EA               	clrf	pow@sign^(0+128)
  5666  1EAC  085D               	movf	(pow@x+3)^(0+128),w
  5667  1EAD  045C               	iorwf	(pow@x+2)^(0+128),w
  5668  1EAE  045B               	iorwf	(pow@x+1)^(0+128),w
  5669  1EAF  045A               	iorwf	pow@x^(0+128),w
  5670  1EB0  1D03               	skipz
  5671  1EB1  2ED0               	goto	l4346
  5672  1EB2  1283               	bcf	3,5	;RP0=0, select bank0
  5673  1EB3  01A1               	clrf	___flge@ff1
  5674  1EB4  01A2               	clrf	___flge@ff1+1
  5675  1EB5  01A3               	clrf	___flge@ff1+2
  5676  1EB6  01A4               	clrf	___flge@ff1+3
  5677  1EB7  1683               	bsf	3,5	;RP0=1, select bank1
  5678  1EB8  0861               	movf	(pow@y+3)^(0+128),w
  5679  1EB9  1283               	bcf	3,5	;RP0=0, select bank0
  5680  1EBA  00A8               	movwf	___flge@ff2+3
  5681  1EBB  1683               	bsf	3,5	;RP0=1, select bank1
  5682  1EBC  0860               	movf	(pow@y+2)^(0+128),w
  5683  1EBD  1283               	bcf	3,5	;RP0=0, select bank0
  5684  1EBE  00A7               	movwf	___flge@ff2+2
  5685  1EBF  1683               	bsf	3,5	;RP0=1, select bank1
  5686  1EC0  085F               	movf	(pow@y+1)^(0+128),w
  5687  1EC1  1283               	bcf	3,5	;RP0=0, select bank0
  5688  1EC2  00A6               	movwf	___flge@ff2+1
  5689  1EC3  1683               	bsf	3,5	;RP0=1, select bank1
  5690  1EC4  085E               	movf	pow@y^(0+128),w
  5691  1EC5  1283               	bcf	3,5	;RP0=0, select bank0
  5692  1EC6  00A5               	movwf	___flge@ff2
  5693  1EC7  120A  158A  2730   	fcall	___flge
  5694  1ECA  1683               	bsf	3,5	;RP0=1, select bank1
  5695  1ECB  01DA               	clrf	?_pow^(0+128)
  5696  1ECC  01DB               	clrf	(?_pow+1)^(0+128)
  5697  1ECD  01DC               	clrf	(?_pow+2)^(0+128)
  5698  1ECE  01DD               	clrf	(?_pow+3)^(0+128)
  5699  1ECF  0008               	return
  5700  1ED0                     l4346:	
  5701  1ED0  0861               	movf	(pow@y+3)^(0+128),w
  5702  1ED1  0460               	iorwf	(pow@y+2)^(0+128),w
  5703  1ED2  045F               	iorwf	(pow@y+1)^(0+128),w
  5704  1ED3  045E               	iorwf	pow@y^(0+128),w
  5705  1ED4  1D03               	skipz
  5706  1ED5  2EDE               	goto	l4352
  5707  1ED6  303F               	movlw	63
  5708  1ED7  00DD               	movwf	(?_pow+3)^(0+128)
  5709  1ED8  3080               	movlw	128
  5710  1ED9  00DC               	movwf	(?_pow+2)^(0+128)
  5711  1EDA  3000               	movlw	0
  5712  1EDB  01DB               	clrf	(?_pow+1)^(0+128)
  5713  1EDC  01DA               	clrf	?_pow^(0+128)
  5714  1EDD  0008               	return
  5715  1EDE                     l4352:	
  5716  1EDE  085D               	movf	(pow@x+3)^(0+128),w
  5717  1EDF  1283               	bcf	3,5	;RP0=0, select bank0
  5718  1EE0  00A4               	movwf	___flge@ff1+3
  5719  1EE1  1683               	bsf	3,5	;RP0=1, select bank1
  5720  1EE2  085C               	movf	(pow@x+2)^(0+128),w
  5721  1EE3  1283               	bcf	3,5	;RP0=0, select bank0
  5722  1EE4  00A3               	movwf	___flge@ff1+2
  5723  1EE5  1683               	bsf	3,5	;RP0=1, select bank1
  5724  1EE6  085B               	movf	(pow@x+1)^(0+128),w
  5725  1EE7  1283               	bcf	3,5	;RP0=0, select bank0
  5726  1EE8  00A2               	movwf	___flge@ff1+1
  5727  1EE9  1683               	bsf	3,5	;RP0=1, select bank1
  5728  1EEA  085A               	movf	pow@x^(0+128),w
  5729  1EEB  1283               	bcf	3,5	;RP0=0, select bank0
  5730  1EEC  00A1               	movwf	___flge@ff1
  5731  1EED  01A5               	clrf	___flge@ff2
  5732  1EEE  01A6               	clrf	___flge@ff2+1
  5733  1EEF  01A7               	clrf	___flge@ff2+2
  5734  1EF0  01A8               	clrf	___flge@ff2+3
  5735  1EF1  120A  158A  2730  160A  158A  	fcall	___flge
  5736  1EF6  1803               	btfsc	3,0
  5737  1EF7  2F66               	goto	l4364
  5738  1EF8  1683               	bsf	3,5	;RP0=1, select bank1
  5739  1EF9  0861               	movf	(pow@y+3)^(0+128),w
  5740  1EFA  00B5               	movwf	(___fltol@f1+3)^(0+128)
  5741  1EFB  0860               	movf	(pow@y+2)^(0+128),w
  5742  1EFC  00B4               	movwf	(___fltol@f1+2)^(0+128)
  5743  1EFD  085F               	movf	(pow@y+1)^(0+128),w
  5744  1EFE  00B3               	movwf	(___fltol@f1+1)^(0+128)
  5745  1EFF  085E               	movf	pow@y^(0+128),w
  5746  1F00  00B2               	movwf	___fltol@f1^(0+128)
  5747  1F01  160A  118A  26A6  160A  158A  	fcall	___fltol
  5748  1F06  0835               	movf	(?___fltol+3)^(0+128),w
  5749  1F07  00EE               	movwf	(pow@yi+3)^(0+128)
  5750  1F08  0834               	movf	(?___fltol+2)^(0+128),w
  5751  1F09  00ED               	movwf	(pow@yi+2)^(0+128)
  5752  1F0A  0833               	movf	(?___fltol+1)^(0+128),w
  5753  1F0B  00EC               	movwf	(pow@yi+1)^(0+128)
  5754  1F0C  0832               	movf	?___fltol^(0+128),w
  5755  1F0D  00EB               	movwf	pow@yi^(0+128)
  5756  1F0E  086E               	movf	(pow@yi+3)^(0+128),w
  5757  1F0F  1283               	bcf	3,5	;RP0=0, select bank0
  5758  1F10  00AE               	movwf	___lltofl@c+3
  5759  1F11  1683               	bsf	3,5	;RP0=1, select bank1
  5760  1F12  086D               	movf	(pow@yi+2)^(0+128),w
  5761  1F13  1283               	bcf	3,5	;RP0=0, select bank0
  5762  1F14  00AD               	movwf	___lltofl@c+2
  5763  1F15  1683               	bsf	3,5	;RP0=1, select bank1
  5764  1F16  086C               	movf	(pow@yi+1)^(0+128),w
  5765  1F17  1283               	bcf	3,5	;RP0=0, select bank0
  5766  1F18  00AC               	movwf	___lltofl@c+1
  5767  1F19  1683               	bsf	3,5	;RP0=1, select bank1
  5768  1F1A  086B               	movf	pow@yi^(0+128),w
  5769  1F1B  1283               	bcf	3,5	;RP0=0, select bank0
  5770  1F1C  00AB               	movwf	___lltofl@c
  5771  1F1D  27E9  160A  158A   	fcall	___lltofl
  5772  1F20  1683               	bsf	3,5	;RP0=1, select bank1
  5773  1F21  0861               	movf	(pow@y+3)^(0+128),w
  5774  1F22  1283               	bcf	3,5	;RP0=0, select bank0
  5775  1F23  062E               	xorwf	?___lltofl+3,w
  5776  1F24  1D03               	skipz
  5777  1F25  2F36               	goto	u4055
  5778  1F26  1683               	bsf	3,5	;RP0=1, select bank1
  5779  1F27  0860               	movf	(pow@y+2)^(0+128),w
  5780  1F28  1283               	bcf	3,5	;RP0=0, select bank0
  5781  1F29  062D               	xorwf	?___lltofl+2,w
  5782  1F2A  1D03               	skipz
  5783  1F2B  2F36               	goto	u4055
  5784  1F2C  1683               	bsf	3,5	;RP0=1, select bank1
  5785  1F2D  085F               	movf	(pow@y+1)^(0+128),w
  5786  1F2E  1283               	bcf	3,5	;RP0=0, select bank0
  5787  1F2F  062C               	xorwf	?___lltofl+1,w
  5788  1F30  1D03               	skipz
  5789  1F31  2F36               	goto	u4055
  5790  1F32  1683               	bsf	3,5	;RP0=1, select bank1
  5791  1F33  085E               	movf	pow@y^(0+128),w
  5792  1F34  1283               	bcf	3,5	;RP0=0, select bank0
  5793  1F35  062B               	xorwf	?___lltofl,w
  5794  1F36                     u4055:	
  5795  1F36  1903               	skipnz
  5796  1F37  2F3E               	goto	l4358
  5797  1F38  1683               	bsf	3,5	;RP0=1, select bank1
  5798  1F39  01DA               	clrf	?_pow^(0+128)
  5799  1F3A  01DB               	clrf	(?_pow+1)^(0+128)
  5800  1F3B  01DC               	clrf	(?_pow+2)^(0+128)
  5801  1F3C  01DD               	clrf	(?_pow+3)^(0+128)
  5802  1F3D  0008               	return
  5803  1F3E                     l4358:	
  5804  1F3E  1683               	bsf	3,5	;RP0=1, select bank1
  5805  1F3F  086B               	movf	pow@yi^(0+128),w
  5806  1F40  00EA               	movwf	pow@sign^(0+128)
  5807  1F41  3001               	movlw	1
  5808  1F42  05EA               	andwf	pow@sign^(0+128),f
  5809  1F43  085D               	movf	(pow@x+3)^(0+128),w
  5810  1F44  1283               	bcf	3,5	;RP0=0, select bank0
  5811  1F45  00A4               	movwf	___flneg@f1+3
  5812  1F46  1683               	bsf	3,5	;RP0=1, select bank1
  5813  1F47  085C               	movf	(pow@x+2)^(0+128),w
  5814  1F48  1283               	bcf	3,5	;RP0=0, select bank0
  5815  1F49  00A3               	movwf	___flneg@f1+2
  5816  1F4A  1683               	bsf	3,5	;RP0=1, select bank1
  5817  1F4B  085B               	movf	(pow@x+1)^(0+128),w
  5818  1F4C  1283               	bcf	3,5	;RP0=0, select bank0
  5819  1F4D  00A2               	movwf	___flneg@f1+1
  5820  1F4E  1683               	bsf	3,5	;RP0=1, select bank1
  5821  1F4F  085A               	movf	pow@x^(0+128),w
  5822  1F50  1283               	bcf	3,5	;RP0=0, select bank0
  5823  1F51  00A1               	movwf	___flneg@f1
  5824  1F52  120A  118A  27D4  160A  158A  	fcall	___flneg
  5825  1F57  0824               	movf	?___flneg+3,w
  5826  1F58  1683               	bsf	3,5	;RP0=1, select bank1
  5827  1F59  00DD               	movwf	(pow@x+3)^(0+128)
  5828  1F5A  1283               	bcf	3,5	;RP0=0, select bank0
  5829  1F5B  0823               	movf	?___flneg+2,w
  5830  1F5C  1683               	bsf	3,5	;RP0=1, select bank1
  5831  1F5D  00DC               	movwf	(pow@x+2)^(0+128)
  5832  1F5E  1283               	bcf	3,5	;RP0=0, select bank0
  5833  1F5F  0822               	movf	?___flneg+1,w
  5834  1F60  1683               	bsf	3,5	;RP0=1, select bank1
  5835  1F61  00DB               	movwf	(pow@x+1)^(0+128)
  5836  1F62  1283               	bcf	3,5	;RP0=0, select bank0
  5837  1F63  0821               	movf	?___flneg,w
  5838  1F64  1683               	bsf	3,5	;RP0=1, select bank1
  5839  1F65  00DA               	movwf	pow@x^(0+128)
  5840  1F66                     l4364:	
  5841  1F66  1683               	bsf	3,5	;RP0=1, select bank1
  5842  1F67  085D               	movf	(pow@x+3)^(0+128),w
  5843  1F68  00A7               	movwf	(log@x+3)^(0+128)
  5844  1F69  085C               	movf	(pow@x+2)^(0+128),w
  5845  1F6A  00A6               	movwf	(log@x+2)^(0+128)
  5846  1F6B  085B               	movf	(pow@x+1)^(0+128),w
  5847  1F6C  00A5               	movwf	(log@x+1)^(0+128)
  5848  1F6D  085A               	movf	pow@x^(0+128),w
  5849  1F6E  00A4               	movwf	log@x^(0+128)
  5850  1F6F  120A  118A  2670  160A  158A  	fcall	_log
  5851  1F74  0827               	movf	(?_log+3)^(0+128),w
  5852  1F75  00E5               	movwf	(_pow$1020+3)^(0+128)
  5853  1F76  0826               	movf	(?_log+2)^(0+128),w
  5854  1F77  00E4               	movwf	(_pow$1020+2)^(0+128)
  5855  1F78  0825               	movf	(?_log+1)^(0+128),w
  5856  1F79  00E3               	movwf	(_pow$1020+1)^(0+128)
  5857  1F7A  0824               	movf	?_log^(0+128),w
  5858  1F7B  00E2               	movwf	_pow$1020^(0+128)
  5859  1F7C  0861               	movf	(pow@y+3)^(0+128),w
  5860  1F7D  1283               	bcf	3,5	;RP0=0, select bank0
  5861  1F7E  00C1               	movwf	___flmul@f1+3
  5862  1F7F  1683               	bsf	3,5	;RP0=1, select bank1
  5863  1F80  0860               	movf	(pow@y+2)^(0+128),w
  5864  1F81  1283               	bcf	3,5	;RP0=0, select bank0
  5865  1F82  00C0               	movwf	___flmul@f1+2
  5866  1F83  1683               	bsf	3,5	;RP0=1, select bank1
  5867  1F84  085F               	movf	(pow@y+1)^(0+128),w
  5868  1F85  1283               	bcf	3,5	;RP0=0, select bank0
  5869  1F86  00BF               	movwf	___flmul@f1+1
  5870  1F87  1683               	bsf	3,5	;RP0=1, select bank1
  5871  1F88  085E               	movf	pow@y^(0+128),w
  5872  1F89  1283               	bcf	3,5	;RP0=0, select bank0
  5873  1F8A  00BE               	movwf	___flmul@f1
  5874  1F8B  1683               	bsf	3,5	;RP0=1, select bank1
  5875  1F8C  0865               	movf	(_pow$1020+3)^(0+128),w
  5876  1F8D  1283               	bcf	3,5	;RP0=0, select bank0
  5877  1F8E  00C5               	movwf	___flmul@f2+3
  5878  1F8F  1683               	bsf	3,5	;RP0=1, select bank1
  5879  1F90  0864               	movf	(_pow$1020+2)^(0+128),w
  5880  1F91  1283               	bcf	3,5	;RP0=0, select bank0
  5881  1F92  00C4               	movwf	___flmul@f2+2
  5882  1F93  1683               	bsf	3,5	;RP0=1, select bank1
  5883  1F94  0863               	movf	(_pow$1020+1)^(0+128),w
  5884  1F95  1283               	bcf	3,5	;RP0=0, select bank0
  5885  1F96  00C3               	movwf	___flmul@f2+1
  5886  1F97  1683               	bsf	3,5	;RP0=1, select bank1
  5887  1F98  0862               	movf	_pow$1020^(0+128),w
  5888  1F99  1283               	bcf	3,5	;RP0=0, select bank0
  5889  1F9A  00C2               	movwf	___flmul@f2
  5890  1F9B  120A  158A  2698  160A  158A  	fcall	___flmul
  5891  1FA0  0841               	movf	?___flmul+3,w
  5892  1FA1  1683               	bsf	3,5	;RP0=1, select bank1
  5893  1FA2  00E9               	movwf	(_pow$1021+3)^(0+128)
  5894  1FA3  1283               	bcf	3,5	;RP0=0, select bank0
  5895  1FA4  0840               	movf	?___flmul+2,w
  5896  1FA5  1683               	bsf	3,5	;RP0=1, select bank1
  5897  1FA6  00E8               	movwf	(_pow$1021+2)^(0+128)
  5898  1FA7  1283               	bcf	3,5	;RP0=0, select bank0
  5899  1FA8  083F               	movf	?___flmul+1,w
  5900  1FA9  1683               	bsf	3,5	;RP0=1, select bank1
  5901  1FAA  00E7               	movwf	(_pow$1021+1)^(0+128)
  5902  1FAB  1283               	bcf	3,5	;RP0=0, select bank0
  5903  1FAC  083E               	movf	?___flmul,w
  5904  1FAD  1683               	bsf	3,5	;RP0=1, select bank1
  5905  1FAE  00E6               	movwf	_pow$1021^(0+128)
  5906  1FAF  0869               	movf	(_pow$1021+3)^(0+128),w
  5907  1FB0  00CE               	movwf	(exp@x+3)^(0+128)
  5908  1FB1  0868               	movf	(_pow$1021+2)^(0+128),w
  5909  1FB2  00CD               	movwf	(exp@x+2)^(0+128)
  5910  1FB3  0867               	movf	(_pow$1021+1)^(0+128),w
  5911  1FB4  00CC               	movwf	(exp@x+1)^(0+128)
  5912  1FB5  0866               	movf	_pow$1021^(0+128),w
  5913  1FB6  00CB               	movwf	exp@x^(0+128)
  5914  1FB7  120A  118A  2409  160A  158A  	fcall	_exp
  5915  1FBC  084E               	movf	(?_exp+3)^(0+128),w
  5916  1FBD  00DD               	movwf	(pow@x+3)^(0+128)
  5917  1FBE  084D               	movf	(?_exp+2)^(0+128),w
  5918  1FBF  00DC               	movwf	(pow@x+2)^(0+128)
  5919  1FC0  084C               	movf	(?_exp+1)^(0+128),w
  5920  1FC1  00DB               	movwf	(pow@x+1)^(0+128)
  5921  1FC2  084B               	movf	?_exp^(0+128),w
  5922  1FC3  00DA               	movwf	pow@x^(0+128)
  5923  1FC4  086A               	movf	pow@sign^(0+128),w
  5924  1FC5  1903               	btfsc	3,2
  5925  1FC6  0008               	return
  5926  1FC7  085D               	movf	(pow@x+3)^(0+128),w
  5927  1FC8  1283               	bcf	3,5	;RP0=0, select bank0
  5928  1FC9  00A4               	movwf	___flneg@f1+3
  5929  1FCA  1683               	bsf	3,5	;RP0=1, select bank1
  5930  1FCB  085C               	movf	(pow@x+2)^(0+128),w
  5931  1FCC  1283               	bcf	3,5	;RP0=0, select bank0
  5932  1FCD  00A3               	movwf	___flneg@f1+2
  5933  1FCE  1683               	bsf	3,5	;RP0=1, select bank1
  5934  1FCF  085B               	movf	(pow@x+1)^(0+128),w
  5935  1FD0  1283               	bcf	3,5	;RP0=0, select bank0
  5936  1FD1  00A2               	movwf	___flneg@f1+1
  5937  1FD2  1683               	bsf	3,5	;RP0=1, select bank1
  5938  1FD3  085A               	movf	pow@x^(0+128),w
  5939  1FD4  1283               	bcf	3,5	;RP0=0, select bank0
  5940  1FD5  00A1               	movwf	___flneg@f1
  5941  1FD6  120A  118A  27D4   	fcall	___flneg
  5942  1FD9  0824               	movf	?___flneg+3,w
  5943  1FDA  1683               	bsf	3,5	;RP0=1, select bank1
  5944  1FDB  00DD               	movwf	(?_pow+3)^(0+128)
  5945  1FDC  1283               	bcf	3,5	;RP0=0, select bank0
  5946  1FDD  0823               	movf	?___flneg+2,w
  5947  1FDE  1683               	bsf	3,5	;RP0=1, select bank1
  5948  1FDF  00DC               	movwf	(?_pow+2)^(0+128)
  5949  1FE0  1283               	bcf	3,5	;RP0=0, select bank0
  5950  1FE1  0822               	movf	?___flneg+1,w
  5951  1FE2  1683               	bsf	3,5	;RP0=1, select bank1
  5952  1FE3  00DB               	movwf	(?_pow+1)^(0+128)
  5953  1FE4  1283               	bcf	3,5	;RP0=0, select bank0
  5954  1FE5  0821               	movf	?___flneg,w
  5955  1FE6  1683               	bsf	3,5	;RP0=1, select bank1
  5956  1FE7  00DA               	movwf	?_pow^(0+128)
  5957  1FE8  0008               	return
  5958  1FE9                     __end_of_pow:	
  5959  1FE9                     __ptext21:	
  5960 ;; *************** function ___lltofl *****************
  5961 ;; Defined at:
  5962 ;;		line 30 in file "/opt/microchip/xc8/v1.34/sources/common/lltofl.c"
  5963 ;; Parameters:    Size  Location     Type
  5964 ;;  c               4   10[BANK0 ] unsigned long 
  5965 ;; Auto vars:     Size  Location     Type
  5966 ;;		None
  5967 ;; Return value:  Size  Location     Type
  5968 ;;                  4   10[BANK0 ] unsigned long 
  5969 ;; Registers used:
  5970 ;;		wreg, status,2, status,0, pclath, cstack
  5971 ;; Tracked objects:
  5972 ;;		On entry : 300/0
  5973 ;;		On exit  : 300/0
  5974 ;;		Unchanged: 0/0
  5975 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5976 ;;      Params:         0       4       0       0       0
  5977 ;;      Locals:         0       0       0       0       0
  5978 ;;      Temps:          0       0       0       0       0
  5979 ;;      Totals:         0       4       0       0       0
  5980 ;;Total ram usage:        4 bytes
  5981 ;; Hardware stack levels used:    1
  5982 ;; Hardware stack levels required when called:    2
  5983 ;; This function calls:
  5984 ;;		___flpack
  5985 ;; This function is called by:
  5986 ;;		_pow
  5987 ;; This function uses a non-reentrant model
  5988 ;;
  5989                           
  5990                           
  5991                           ;psect for function ___lltofl
  5992  1FE9                     ___lltofl:	
  5993                           
  5994                           ;incstack = 0
  5995                           ; Regs used in ___lltofl: [wreg+status,2+status,0+pclath+cstack]
  5996  1FE9  082E               	movf	___lltofl@c+3,w
  5997  1FEA  00A4               	movwf	___flpack@arg+3
  5998  1FEB  082D               	movf	___lltofl@c+2,w
  5999  1FEC  00A3               	movwf	___flpack@arg+2
  6000  1FED  082C               	movf	___lltofl@c+1,w
  6001  1FEE  00A2               	movwf	___flpack@arg+1
  6002  1FEF  082B               	movf	___lltofl@c,w
  6003  1FF0  00A1               	movwf	___flpack@arg
  6004  1FF1  3096               	movlw	150
  6005  1FF2  00A5               	movwf	___flpack@exp
  6006  1FF3  01A6               	clrf	___flpack@sign
  6007  1FF4  160A  118A  279E   	fcall	___flpack
  6008  1FF7  0824               	movf	?___flpack+3,w
  6009  1FF8  00AE               	movwf	?___lltofl+3
  6010  1FF9  0823               	movf	?___flpack+2,w
  6011  1FFA  00AD               	movwf	?___lltofl+2
  6012  1FFB  0822               	movf	?___flpack+1,w
  6013  1FFC  00AC               	movwf	?___lltofl+1
  6014  1FFD  0821               	movf	?___flpack,w
  6015  1FFE  00AB               	movwf	?___lltofl
  6016  1FFF  0008               	return
  6017  2000                     __end_of___lltofl:	
  6018                           
  6019                           	psect	text13
  6020  0409                     __ptext13:	
  6021 ;; *************** function _exp *****************
  6022 ;; Defined at:
  6023 ;;		line 12 in file "/opt/microchip/xc8/v1.34/sources/common/exp.c"
  6024 ;; Parameters:    Size  Location     Type
  6025 ;;  x               4   43[BANK1 ] unsigned char 
  6026 ;; Auto vars:     Size  Location     Type
  6027 ;;  exponent        2   55[BANK1 ] int 
  6028 ;;  sign            1   57[BANK1 ] unsigned char 
  6029 ;; Return value:  Size  Location     Type
  6030 ;;                  4   43[BANK1 ] unsigned char 
  6031 ;; Registers used:
  6032 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  6033 ;; Tracked objects:
  6034 ;;		On entry : 300/100
  6035 ;;		On exit  : 300/100
  6036 ;;		Unchanged: 0/0
  6037 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6038 ;;      Params:         0       0       4       0       0
  6039 ;;      Locals:         0       0      11       0       0
  6040 ;;      Temps:          0       0       0       0       0
  6041 ;;      Totals:         0       0      15       0       0
  6042 ;;Total ram usage:       15 bytes
  6043 ;; Hardware stack levels used:    1
  6044 ;; Hardware stack levels required when called:    4
  6045 ;; This function calls:
  6046 ;;		___awtofl
  6047 ;;		___fldiv
  6048 ;;		___flge
  6049 ;;		___flmul
  6050 ;;		___flneg
  6051 ;;		___flsub
  6052 ;;		___fltol
  6053 ;;		_eval_poly
  6054 ;;		_floor
  6055 ;;		_ldexp
  6056 ;; This function is called by:
  6057 ;;		_pow
  6058 ;; This function uses a non-reentrant model
  6059 ;;
  6060                           
  6061                           
  6062                           ;psect for function _exp
  6063  0409                     _exp:	
  6064                           
  6065                           ;incstack = 0
  6066                           ; Regs used in _exp: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  6067  0409  084E               	movf	(exp@x+3)^(0+128),w
  6068  040A  044D               	iorwf	(exp@x+2)^(0+128),w
  6069  040B  044C               	iorwf	(exp@x+1)^(0+128),w
  6070  040C  044B               	iorwf	exp@x^(0+128),w
  6071  040D  1D03               	skipz
  6072  040E  2C17               	goto	l4190
  6073  040F  303F               	movlw	63
  6074  0410  00CE               	movwf	(?_exp+3)^(0+128)
  6075  0411  3080               	movlw	128
  6076  0412  00CD               	movwf	(?_exp+2)^(0+128)
  6077  0413  3000               	movlw	0
  6078  0414  01CC               	clrf	(?_exp+1)^(0+128)
  6079  0415  01CB               	clrf	?_exp^(0+128)
  6080  0416  0008               	return
  6081  0417                     l4190:	
  6082  0417  3044               	movlw	68
  6083  0418  1283               	bcf	3,5	;RP0=0, select bank0
  6084  0419  00A4               	movwf	___flge@ff1+3
  6085  041A  3031               	movlw	49
  6086  041B  00A3               	movwf	___flge@ff1+2
  6087  041C  3072               	movlw	114
  6088  041D  00A2               	movwf	___flge@ff1+1
  6089  041E  3018               	movlw	24
  6090  041F  00A1               	movwf	___flge@ff1
  6091  0420  1683               	bsf	3,5	;RP0=1, select bank1
  6092  0421  084E               	movf	(exp@x+3)^(0+128),w
  6093  0422  1283               	bcf	3,5	;RP0=0, select bank0
  6094  0423  00A8               	movwf	___flge@ff2+3
  6095  0424  1683               	bsf	3,5	;RP0=1, select bank1
  6096  0425  084D               	movf	(exp@x+2)^(0+128),w
  6097  0426  1283               	bcf	3,5	;RP0=0, select bank0
  6098  0427  00A7               	movwf	___flge@ff2+2
  6099  0428  1683               	bsf	3,5	;RP0=1, select bank1
  6100  0429  084C               	movf	(exp@x+1)^(0+128),w
  6101  042A  1283               	bcf	3,5	;RP0=0, select bank0
  6102  042B  00A6               	movwf	___flge@ff2+1
  6103  042C  1683               	bsf	3,5	;RP0=1, select bank1
  6104  042D  084B               	movf	exp@x^(0+128),w
  6105  042E  1283               	bcf	3,5	;RP0=0, select bank0
  6106  042F  00A5               	movwf	___flge@ff2
  6107  0430  120A  158A  2730  120A  118A  	fcall	___flge
  6108  0435  1803               	btfsc	3,0
  6109  0436  2C40               	goto	l4200
  6110  0437  307F               	movlw	127
  6111  0438  1683               	bsf	3,5	;RP0=1, select bank1
  6112  0439  00CE               	movwf	(?_exp+3)^(0+128)
  6113  043A  00CD               	movwf	(?_exp+2)^(0+128)
  6114  043B  30FE               	movlw	254
  6115  043C  00CC               	movwf	(?_exp+1)^(0+128)
  6116  043D  30F7               	movlw	247
  6117  043E  00CB               	movwf	?_exp^(0+128)
  6118  043F  0008               	return
  6119  0440                     l4200:	
  6120  0440  1683               	bsf	3,5	;RP0=1, select bank1
  6121  0441  084E               	movf	(exp@x+3)^(0+128),w
  6122  0442  1283               	bcf	3,5	;RP0=0, select bank0
  6123  0443  00A4               	movwf	___flge@ff1+3
  6124  0444  1683               	bsf	3,5	;RP0=1, select bank1
  6125  0445  084D               	movf	(exp@x+2)^(0+128),w
  6126  0446  1283               	bcf	3,5	;RP0=0, select bank0
  6127  0447  00A3               	movwf	___flge@ff1+2
  6128  0448  1683               	bsf	3,5	;RP0=1, select bank1
  6129  0449  084C               	movf	(exp@x+1)^(0+128),w
  6130  044A  1283               	bcf	3,5	;RP0=0, select bank0
  6131  044B  00A2               	movwf	___flge@ff1+1
  6132  044C  1683               	bsf	3,5	;RP0=1, select bank1
  6133  044D  084B               	movf	exp@x^(0+128),w
  6134  044E  1283               	bcf	3,5	;RP0=0, select bank0
  6135  044F  00A1               	movwf	___flge@ff1
  6136  0450  30C4               	movlw	196
  6137  0451  00A8               	movwf	___flge@ff2+3
  6138  0452  303A               	movlw	58
  6139  0453  00A7               	movwf	___flge@ff2+2
  6140  0454  3048               	movlw	72
  6141  0455  00A6               	movwf	___flge@ff2+1
  6142  0456  3087               	movlw	135
  6143  0457  00A5               	movwf	___flge@ff2
  6144  0458  120A  158A  2730  120A  118A  	fcall	___flge
  6145  045D  1803               	btfsc	3,0
  6146  045E  2C65               	goto	l4204
  6147  045F  1683               	bsf	3,5	;RP0=1, select bank1
  6148  0460  01CB               	clrf	?_exp^(0+128)
  6149  0461  01CC               	clrf	(?_exp+1)^(0+128)
  6150  0462  01CD               	clrf	(?_exp+2)^(0+128)
  6151  0463  01CE               	clrf	(?_exp+3)^(0+128)
  6152  0464  0008               	return
  6153  0465                     l4204:	
  6154  0465  1683               	bsf	3,5	;RP0=1, select bank1
  6155  0466  084E               	movf	(exp@x+3)^(0+128),w
  6156  0467  1283               	bcf	3,5	;RP0=0, select bank0
  6157  0468  00A4               	movwf	___flge@ff1+3
  6158  0469  1683               	bsf	3,5	;RP0=1, select bank1
  6159  046A  084D               	movf	(exp@x+2)^(0+128),w
  6160  046B  1283               	bcf	3,5	;RP0=0, select bank0
  6161  046C  00A3               	movwf	___flge@ff1+2
  6162  046D  1683               	bsf	3,5	;RP0=1, select bank1
  6163  046E  084C               	movf	(exp@x+1)^(0+128),w
  6164  046F  1283               	bcf	3,5	;RP0=0, select bank0
  6165  0470  00A2               	movwf	___flge@ff1+1
  6166  0471  1683               	bsf	3,5	;RP0=1, select bank1
  6167  0472  084B               	movf	exp@x^(0+128),w
  6168  0473  1283               	bcf	3,5	;RP0=0, select bank0
  6169  0474  00A1               	movwf	___flge@ff1
  6170  0475  01A5               	clrf	___flge@ff2
  6171  0476  01A6               	clrf	___flge@ff2+1
  6172  0477  01A7               	clrf	___flge@ff2+2
  6173  0478  01A8               	clrf	___flge@ff2+3
  6174  0479  120A  158A  2730  120A  118A  	fcall	___flge
  6175  047E  1803               	btfsc	3,0
  6176  047F  2C82               	goto	u3870
  6177  0480  3001               	movlw	1
  6178  0481  2C83               	goto	u3880
  6179  0482                     u3870:	
  6180  0482  3000               	movlw	0
  6181  0483                     u3880:	
  6182  0483  1683               	bsf	3,5	;RP0=1, select bank1
  6183  0484  00D9               	movwf	exp@sign^(0+128)
  6184  0485  0859               	movf	exp@sign^(0+128),w
  6185  0486  1903               	btfsc	3,2
  6186  0487  2CA9               	goto	l4210
  6187  0488  084E               	movf	(exp@x+3)^(0+128),w
  6188  0489  1283               	bcf	3,5	;RP0=0, select bank0
  6189  048A  00A4               	movwf	___flneg@f1+3
  6190  048B  1683               	bsf	3,5	;RP0=1, select bank1
  6191  048C  084D               	movf	(exp@x+2)^(0+128),w
  6192  048D  1283               	bcf	3,5	;RP0=0, select bank0
  6193  048E  00A3               	movwf	___flneg@f1+2
  6194  048F  1683               	bsf	3,5	;RP0=1, select bank1
  6195  0490  084C               	movf	(exp@x+1)^(0+128),w
  6196  0491  1283               	bcf	3,5	;RP0=0, select bank0
  6197  0492  00A2               	movwf	___flneg@f1+1
  6198  0493  1683               	bsf	3,5	;RP0=1, select bank1
  6199  0494  084B               	movf	exp@x^(0+128),w
  6200  0495  1283               	bcf	3,5	;RP0=0, select bank0
  6201  0496  00A1               	movwf	___flneg@f1
  6202  0497  27D4  120A  118A   	fcall	___flneg
  6203  049A  0824               	movf	?___flneg+3,w
  6204  049B  1683               	bsf	3,5	;RP0=1, select bank1
  6205  049C  00CE               	movwf	(exp@x+3)^(0+128)
  6206  049D  1283               	bcf	3,5	;RP0=0, select bank0
  6207  049E  0823               	movf	?___flneg+2,w
  6208  049F  1683               	bsf	3,5	;RP0=1, select bank1
  6209  04A0  00CD               	movwf	(exp@x+2)^(0+128)
  6210  04A1  1283               	bcf	3,5	;RP0=0, select bank0
  6211  04A2  0822               	movf	?___flneg+1,w
  6212  04A3  1683               	bsf	3,5	;RP0=1, select bank1
  6213  04A4  00CC               	movwf	(exp@x+1)^(0+128)
  6214  04A5  1283               	bcf	3,5	;RP0=0, select bank0
  6215  04A6  0821               	movf	?___flneg,w
  6216  04A7  1683               	bsf	3,5	;RP0=1, select bank1
  6217  04A8  00CB               	movwf	exp@x^(0+128)
  6218  04A9                     l4210:	
  6219  04A9  303F               	movlw	63
  6220  04AA  1283               	bcf	3,5	;RP0=0, select bank0
  6221  04AB  00C1               	movwf	___flmul@f1+3
  6222  04AC  30B8               	movlw	184
  6223  04AD  00C0               	movwf	___flmul@f1+2
  6224  04AE  30AA               	movlw	170
  6225  04AF  00BF               	movwf	___flmul@f1+1
  6226  04B0  303B               	movlw	59
  6227  04B1  00BE               	movwf	___flmul@f1
  6228  04B2  1683               	bsf	3,5	;RP0=1, select bank1
  6229  04B3  084E               	movf	(exp@x+3)^(0+128),w
  6230  04B4  1283               	bcf	3,5	;RP0=0, select bank0
  6231  04B5  00C5               	movwf	___flmul@f2+3
  6232  04B6  1683               	bsf	3,5	;RP0=1, select bank1
  6233  04B7  084D               	movf	(exp@x+2)^(0+128),w
  6234  04B8  1283               	bcf	3,5	;RP0=0, select bank0
  6235  04B9  00C4               	movwf	___flmul@f2+2
  6236  04BA  1683               	bsf	3,5	;RP0=1, select bank1
  6237  04BB  084C               	movf	(exp@x+1)^(0+128),w
  6238  04BC  1283               	bcf	3,5	;RP0=0, select bank0
  6239  04BD  00C3               	movwf	___flmul@f2+1
  6240  04BE  1683               	bsf	3,5	;RP0=1, select bank1
  6241  04BF  084B               	movf	exp@x^(0+128),w
  6242  04C0  1283               	bcf	3,5	;RP0=0, select bank0
  6243  04C1  00C2               	movwf	___flmul@f2
  6244  04C2  120A  158A  2698  120A  118A  	fcall	___flmul
  6245  04C7  0841               	movf	?___flmul+3,w
  6246  04C8  1683               	bsf	3,5	;RP0=1, select bank1
  6247  04C9  00CE               	movwf	(exp@x+3)^(0+128)
  6248  04CA  1283               	bcf	3,5	;RP0=0, select bank0
  6249  04CB  0840               	movf	?___flmul+2,w
  6250  04CC  1683               	bsf	3,5	;RP0=1, select bank1
  6251  04CD  00CD               	movwf	(exp@x+2)^(0+128)
  6252  04CE  1283               	bcf	3,5	;RP0=0, select bank0
  6253  04CF  083F               	movf	?___flmul+1,w
  6254  04D0  1683               	bsf	3,5	;RP0=1, select bank1
  6255  04D1  00CC               	movwf	(exp@x+1)^(0+128)
  6256  04D2  1283               	bcf	3,5	;RP0=0, select bank0
  6257  04D3  083E               	movf	?___flmul,w
  6258  04D4  1683               	bsf	3,5	;RP0=1, select bank1
  6259  04D5  00CB               	movwf	exp@x^(0+128)
  6260  04D6  084E               	movf	(exp@x+3)^(0+128),w
  6261  04D7  00C4               	movwf	(floor@x+3)^(0+128)
  6262  04D8  084D               	movf	(exp@x+2)^(0+128),w
  6263  04D9  00C3               	movwf	(floor@x+2)^(0+128)
  6264  04DA  084C               	movf	(exp@x+1)^(0+128),w
  6265  04DB  00C2               	movwf	(floor@x+1)^(0+128)
  6266  04DC  084B               	movf	exp@x^(0+128),w
  6267  04DD  00C1               	movwf	floor@x^(0+128)
  6268  04DE  25B2               	fcall	_floor
  6269  04DF  0844               	movf	(?_floor+3)^(0+128),w
  6270  04E0  00D2               	movwf	(_exp$1022+3)^(0+128)
  6271  04E1  0843               	movf	(?_floor+2)^(0+128),w
  6272  04E2  00D1               	movwf	(_exp$1022+2)^(0+128)
  6273  04E3  0842               	movf	(?_floor+1)^(0+128),w
  6274  04E4  00D0               	movwf	(_exp$1022+1)^(0+128)
  6275  04E5  0841               	movf	?_floor^(0+128),w
  6276  04E6  00CF               	movwf	_exp$1022^(0+128)
  6277  04E7  0852               	movf	(_exp$1022+3)^(0+128),w
  6278  04E8  00B5               	movwf	(___fltol@f1+3)^(0+128)
  6279  04E9  0851               	movf	(_exp$1022+2)^(0+128),w
  6280  04EA  00B4               	movwf	(___fltol@f1+2)^(0+128)
  6281  04EB  0850               	movf	(_exp$1022+1)^(0+128),w
  6282  04EC  00B3               	movwf	(___fltol@f1+1)^(0+128)
  6283  04ED  084F               	movf	_exp$1022^(0+128),w
  6284  04EE  00B2               	movwf	___fltol@f1^(0+128)
  6285  04EF  160A  118A  26A6  120A  118A  	fcall	___fltol
  6286  04F4  0833               	movf	(?___fltol^(0+128)+1),w
  6287  04F5  00D8               	movwf	(exp@exponent+1)^(0+128)
  6288  04F6  0832               	movf	?___fltol^(0+128),w
  6289  04F7  00D7               	movwf	exp@exponent^(0+128)
  6290  04F8  0858               	movf	(exp@exponent+1)^(0+128),w
  6291  04F9  1283               	bcf	3,5	;RP0=0, select bank0
  6292  04FA  00AC               	movwf	___awtofl@c+1
  6293  04FB  1683               	bsf	3,5	;RP0=1, select bank1
  6294  04FC  0857               	movf	exp@exponent^(0+128),w
  6295  04FD  1283               	bcf	3,5	;RP0=0, select bank0
  6296  04FE  00AB               	movwf	___awtofl@c
  6297  04FF  160A  118A  26FD  120A  118A  	fcall	___awtofl
  6298  0504  082E               	movf	?___awtofl+3,w
  6299  0505  00E3               	movwf	___flsub@f2+3
  6300  0506  082D               	movf	?___awtofl+2,w
  6301  0507  00E2               	movwf	___flsub@f2+2
  6302  0508  082C               	movf	?___awtofl+1,w
  6303  0509  00E1               	movwf	___flsub@f2+1
  6304  050A  082B               	movf	?___awtofl,w
  6305  050B  00E0               	movwf	___flsub@f2
  6306  050C  1683               	bsf	3,5	;RP0=1, select bank1
  6307  050D  084E               	movf	(exp@x+3)^(0+128),w
  6308  050E  1283               	bcf	3,5	;RP0=0, select bank0
  6309  050F  00E7               	movwf	___flsub@f1+3
  6310  0510  1683               	bsf	3,5	;RP0=1, select bank1
  6311  0511  084D               	movf	(exp@x+2)^(0+128),w
  6312  0512  1283               	bcf	3,5	;RP0=0, select bank0
  6313  0513  00E6               	movwf	___flsub@f1+2
  6314  0514  1683               	bsf	3,5	;RP0=1, select bank1
  6315  0515  084C               	movf	(exp@x+1)^(0+128),w
  6316  0516  1283               	bcf	3,5	;RP0=0, select bank0
  6317  0517  00E5               	movwf	___flsub@f1+1
  6318  0518  1683               	bsf	3,5	;RP0=1, select bank1
  6319  0519  084B               	movf	exp@x^(0+128),w
  6320  051A  1283               	bcf	3,5	;RP0=0, select bank0
  6321  051B  00E4               	movwf	___flsub@f1
  6322  051C  160A  118A  271A  120A  118A  	fcall	___flsub
  6323  0521  0863               	movf	?___flsub+3,w
  6324  0522  1683               	bsf	3,5	;RP0=1, select bank1
  6325  0523  00CE               	movwf	(exp@x+3)^(0+128)
  6326  0524  1283               	bcf	3,5	;RP0=0, select bank0
  6327  0525  0862               	movf	?___flsub+2,w
  6328  0526  1683               	bsf	3,5	;RP0=1, select bank1
  6329  0527  00CD               	movwf	(exp@x+2)^(0+128)
  6330  0528  1283               	bcf	3,5	;RP0=0, select bank0
  6331  0529  0861               	movf	?___flsub+1,w
  6332  052A  1683               	bsf	3,5	;RP0=1, select bank1
  6333  052B  00CC               	movwf	(exp@x+1)^(0+128)
  6334  052C  1283               	bcf	3,5	;RP0=0, select bank0
  6335  052D  0860               	movf	?___flsub,w
  6336  052E  1683               	bsf	3,5	;RP0=1, select bank1
  6337  052F  00CB               	movwf	exp@x^(0+128)
  6338  0530  084E               	movf	(exp@x+3)^(0+128),w
  6339  0531  1283               	bcf	3,5	;RP0=0, select bank0
  6340  0532  00E3               	movwf	eval_poly@x+3
  6341  0533  1683               	bsf	3,5	;RP0=1, select bank1
  6342  0534  084D               	movf	(exp@x+2)^(0+128),w
  6343  0535  1283               	bcf	3,5	;RP0=0, select bank0
  6344  0536  00E2               	movwf	eval_poly@x+2
  6345  0537  1683               	bsf	3,5	;RP0=1, select bank1
  6346  0538  084C               	movf	(exp@x+1)^(0+128),w
  6347  0539  1283               	bcf	3,5	;RP0=0, select bank0
  6348  053A  00E1               	movwf	eval_poly@x+1
  6349  053B  1683               	bsf	3,5	;RP0=1, select bank1
  6350  053C  084B               	movf	exp@x^(0+128),w
  6351  053D  1283               	bcf	3,5	;RP0=0, select bank0
  6352  053E  00E0               	movwf	eval_poly@x
  6353  053F  3012               	movlw	low (exp@coeff| (0+32768))
  6354  0540  00E4               	movwf	eval_poly@d
  6355  0541  3098               	movlw	high (exp@coeff| (0+32768))
  6356  0542  00E5               	movwf	eval_poly@d+1
  6357  0543  3009               	movlw	9
  6358  0544  00E6               	movwf	eval_poly@n
  6359  0545  01E7               	clrf	eval_poly@n+1
  6360  0546  120A  158A  2006  120A  118A  	fcall	_eval_poly
  6361  054B  0863               	movf	?_eval_poly+3,w
  6362  054C  1683               	bsf	3,5	;RP0=1, select bank1
  6363  054D  00A7               	movwf	(ldexp@value+3)^(0+128)
  6364  054E  1283               	bcf	3,5	;RP0=0, select bank0
  6365  054F  0862               	movf	?_eval_poly+2,w
  6366  0550  1683               	bsf	3,5	;RP0=1, select bank1
  6367  0551  00A6               	movwf	(ldexp@value+2)^(0+128)
  6368  0552  1283               	bcf	3,5	;RP0=0, select bank0
  6369  0553  0861               	movf	?_eval_poly+1,w
  6370  0554  1683               	bsf	3,5	;RP0=1, select bank1
  6371  0555  00A5               	movwf	(ldexp@value+1)^(0+128)
  6372  0556  1283               	bcf	3,5	;RP0=0, select bank0
  6373  0557  0860               	movf	?_eval_poly,w
  6374  0558  1683               	bsf	3,5	;RP0=1, select bank1
  6375  0559  00A4               	movwf	ldexp@value^(0+128)
  6376  055A  0858               	movf	(exp@exponent+1)^(0+128),w
  6377  055B  00A9               	movwf	(ldexp@newexp+1)^(0+128)
  6378  055C  0857               	movf	exp@exponent^(0+128),w
  6379  055D  00A8               	movwf	ldexp@newexp^(0+128)
  6380  055E  160A  158A  2540  120A  118A  	fcall	_ldexp
  6381  0563  0827               	movf	(?_ldexp+3)^(0+128),w
  6382  0564  00CE               	movwf	(exp@x+3)^(0+128)
  6383  0565  0826               	movf	(?_ldexp+2)^(0+128),w
  6384  0566  00CD               	movwf	(exp@x+2)^(0+128)
  6385  0567  0825               	movf	(?_ldexp+1)^(0+128),w
  6386  0568  00CC               	movwf	(exp@x+1)^(0+128)
  6387  0569  0824               	movf	?_ldexp^(0+128),w
  6388  056A  00CB               	movwf	exp@x^(0+128)
  6389  056B  0859               	movf	exp@sign^(0+128),w
  6390  056C  1903               	btfsc	3,2
  6391  056D  0008               	return
  6392  056E  307F               	movlw	127
  6393  056F  00D6               	movwf	(_exp$754+3)^(0+128)
  6394  0570  00D5               	movwf	(_exp$754+2)^(0+128)
  6395  0571  30FE               	movlw	254
  6396  0572  00D4               	movwf	(_exp$754+1)^(0+128)
  6397  0573  30F7               	movlw	247
  6398  0574  00D3               	movwf	_exp$754^(0+128)
  6399  0575  084E               	movf	(exp@x+3)^(0+128),w
  6400  0576  0656               	xorwf	(_exp$754+3)^(0+128),w
  6401  0577  1D03               	skipz
  6402  0578  2D83               	goto	u3915
  6403  0579  084D               	movf	(exp@x+2)^(0+128),w
  6404  057A  0655               	xorwf	(_exp$754+2)^(0+128),w
  6405  057B  1D03               	skipz
  6406  057C  2D83               	goto	u3915
  6407  057D  084C               	movf	(exp@x+1)^(0+128),w
  6408  057E  0654               	xorwf	(_exp$754+1)^(0+128),w
  6409  057F  1D03               	skipz
  6410  0580  2D83               	goto	u3915
  6411  0581  084B               	movf	exp@x^(0+128),w
  6412  0582  0653               	xorwf	_exp$754^(0+128),w
  6413  0583                     u3915:	
  6414  0583  1D03               	skipz
  6415  0584  2D8A               	goto	l4230
  6416  0585  01CB               	clrf	?_exp^(0+128)
  6417  0586  01CC               	clrf	(?_exp+1)^(0+128)
  6418  0587  01CD               	clrf	(?_exp+2)^(0+128)
  6419  0588  01CE               	clrf	(?_exp+3)^(0+128)
  6420  0589  0008               	return
  6421  058A                     l4230:	
  6422  058A  084E               	movf	(exp@x+3)^(0+128),w
  6423  058B  1283               	bcf	3,5	;RP0=0, select bank0
  6424  058C  00AE               	movwf	___fldiv@f2+3
  6425  058D  1683               	bsf	3,5	;RP0=1, select bank1
  6426  058E  084D               	movf	(exp@x+2)^(0+128),w
  6427  058F  1283               	bcf	3,5	;RP0=0, select bank0
  6428  0590  00AD               	movwf	___fldiv@f2+2
  6429  0591  1683               	bsf	3,5	;RP0=1, select bank1
  6430  0592  084C               	movf	(exp@x+1)^(0+128),w
  6431  0593  1283               	bcf	3,5	;RP0=0, select bank0
  6432  0594  00AC               	movwf	___fldiv@f2+1
  6433  0595  1683               	bsf	3,5	;RP0=1, select bank1
  6434  0596  084B               	movf	exp@x^(0+128),w
  6435  0597  1283               	bcf	3,5	;RP0=0, select bank0
  6436  0598  00AB               	movwf	___fldiv@f2
  6437  0599  303F               	movlw	63
  6438  059A  00B2               	movwf	___fldiv@f1+3
  6439  059B  3080               	movlw	128
  6440  059C  00B1               	movwf	___fldiv@f1+2
  6441  059D  01B0               	clrf	___fldiv@f1+1
  6442  059E  01AF               	clrf	___fldiv@f1
  6443  059F  160A  118A  262D   	fcall	___fldiv
  6444  05A2  082E               	movf	?___fldiv+3,w
  6445  05A3  1683               	bsf	3,5	;RP0=1, select bank1
  6446  05A4  00CE               	movwf	(?_exp+3)^(0+128)
  6447  05A5  1283               	bcf	3,5	;RP0=0, select bank0
  6448  05A6  082D               	movf	?___fldiv+2,w
  6449  05A7  1683               	bsf	3,5	;RP0=1, select bank1
  6450  05A8  00CD               	movwf	(?_exp+2)^(0+128)
  6451  05A9  1283               	bcf	3,5	;RP0=0, select bank0
  6452  05AA  082C               	movf	?___fldiv+1,w
  6453  05AB  1683               	bsf	3,5	;RP0=1, select bank1
  6454  05AC  00CC               	movwf	(?_exp+1)^(0+128)
  6455  05AD  1283               	bcf	3,5	;RP0=0, select bank0
  6456  05AE  082B               	movf	?___fldiv,w
  6457  05AF  1683               	bsf	3,5	;RP0=1, select bank1
  6458  05B0  00CB               	movwf	?_exp^(0+128)
  6459  05B1  0008               	return
  6460  05B2                     __end_of_exp:	
  6461  05B2                     __ptext16:	
  6462 ;; *************** function _floor *****************
  6463 ;; Defined at:
  6464 ;;		line 13 in file "/opt/microchip/xc8/v1.34/sources/common/floor.c"
  6465 ;; Parameters:    Size  Location     Type
  6466 ;;  x               4   33[BANK1 ] int 
  6467 ;; Auto vars:     Size  Location     Type
  6468 ;;  i               4   37[BANK1 ] int 
  6469 ;;  expon           2   41[BANK1 ] int 
  6470 ;; Return value:  Size  Location     Type
  6471 ;;                  4   33[BANK1 ] int 
  6472 ;; Registers used:
  6473 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  6474 ;; Tracked objects:
  6475 ;;		On entry : 300/100
  6476 ;;		On exit  : 300/100
  6477 ;;		Unchanged: 0/0
  6478 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6479 ;;      Params:         0       0       4       0       0
  6480 ;;      Locals:         0       0       6       0       0
  6481 ;;      Temps:          0       0       0       0       0
  6482 ;;      Totals:         0       0      10       0       0
  6483 ;;Total ram usage:       10 bytes
  6484 ;; Hardware stack levels used:    1
  6485 ;; Hardware stack levels required when called:    3
  6486 ;; This function calls:
  6487 ;;		___altofl
  6488 ;;		___fladd
  6489 ;;		___flge
  6490 ;;		___fltol
  6491 ;;		_frexp
  6492 ;; This function is called by:
  6493 ;;		_format_double
  6494 ;;		_exp
  6495 ;; This function uses a non-reentrant model
  6496 ;;
  6497                           
  6498                           
  6499                           ;psect for function _floor
  6500  05B2                     _floor:	
  6501                           
  6502                           ;incstack = 0
  6503                           ; Regs used in _floor: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  6504  05B2  0844               	movf	(floor@x+3)^(0+128),w
  6505  05B3  1283               	bcf	3,5	;RP0=0, select bank0
  6506  05B4  00A4               	movwf	frexp@value+3
  6507  05B5  1683               	bsf	3,5	;RP0=1, select bank1
  6508  05B6  0843               	movf	(floor@x+2)^(0+128),w
  6509  05B7  1283               	bcf	3,5	;RP0=0, select bank0
  6510  05B8  00A3               	movwf	frexp@value+2
  6511  05B9  1683               	bsf	3,5	;RP0=1, select bank1
  6512  05BA  0842               	movf	(floor@x+1)^(0+128),w
  6513  05BB  1283               	bcf	3,5	;RP0=0, select bank0
  6514  05BC  00A2               	movwf	frexp@value+1
  6515  05BD  1683               	bsf	3,5	;RP0=1, select bank1
  6516  05BE  0841               	movf	floor@x^(0+128),w
  6517  05BF  1283               	bcf	3,5	;RP0=0, select bank0
  6518  05C0  00A1               	movwf	frexp@value
  6519  05C1  30C9               	movlw	(low (floor@expon| 0))& (0+255)
  6520  05C2  00A5               	movwf	frexp@eptr
  6521  05C3  275E  120A  118A   	fcall	_frexp
  6522  05C6  1683               	bsf	3,5	;RP0=1, select bank1
  6523  05C7  1FCA               	btfss	(floor@expon+1)^(0+128),7
  6524  05C8  2DF2               	goto	l3974
  6525  05C9  0844               	movf	(floor@x+3)^(0+128),w
  6526  05CA  1283               	bcf	3,5	;RP0=0, select bank0
  6527  05CB  00A4               	movwf	___flge@ff1+3
  6528  05CC  1683               	bsf	3,5	;RP0=1, select bank1
  6529  05CD  0843               	movf	(floor@x+2)^(0+128),w
  6530  05CE  1283               	bcf	3,5	;RP0=0, select bank0
  6531  05CF  00A3               	movwf	___flge@ff1+2
  6532  05D0  1683               	bsf	3,5	;RP0=1, select bank1
  6533  05D1  0842               	movf	(floor@x+1)^(0+128),w
  6534  05D2  1283               	bcf	3,5	;RP0=0, select bank0
  6535  05D3  00A2               	movwf	___flge@ff1+1
  6536  05D4  1683               	bsf	3,5	;RP0=1, select bank1
  6537  05D5  0841               	movf	floor@x^(0+128),w
  6538  05D6  1283               	bcf	3,5	;RP0=0, select bank0
  6539  05D7  00A1               	movwf	___flge@ff1
  6540  05D8  01A5               	clrf	___flge@ff2
  6541  05D9  01A6               	clrf	___flge@ff2+1
  6542  05DA  01A7               	clrf	___flge@ff2+2
  6543  05DB  01A8               	clrf	___flge@ff2+3
  6544  05DC  120A  158A  2730  120A  118A  	fcall	___flge
  6545  05E1  1803               	btfsc	3,0
  6546  05E2  2DEC               	goto	l891
  6547  05E3  30BF               	movlw	191
  6548  05E4  1683               	bsf	3,5	;RP0=1, select bank1
  6549  05E5  00C4               	movwf	(?_floor+3)^(0+128)
  6550  05E6  3080               	movlw	128
  6551  05E7  00C3               	movwf	(?_floor+2)^(0+128)
  6552  05E8  3000               	movlw	0
  6553  05E9  01C2               	clrf	(?_floor+1)^(0+128)
  6554  05EA  01C1               	clrf	?_floor^(0+128)
  6555  05EB  0008               	return
  6556  05EC                     l891:	
  6557  05EC  1683               	bsf	3,5	;RP0=1, select bank1
  6558  05ED  01C1               	clrf	?_floor^(0+128)
  6559  05EE  01C2               	clrf	(?_floor+1)^(0+128)
  6560  05EF  01C3               	clrf	(?_floor+2)^(0+128)
  6561  05F0  01C4               	clrf	(?_floor+3)^(0+128)
  6562  05F1  0008               	return
  6563  05F2                     l3974:	
  6564  05F2  3000               	movlw	0
  6565  05F3  024A               	subwf	(floor@expon+1)^(0+128),w
  6566  05F4  301D               	movlw	29
  6567  05F5  1903               	skipnz
  6568  05F6  0249               	subwf	floor@expon^(0+128),w
  6569  05F7  1803               	btfsc	3,0
  6570  05F8  0008               	return
  6571  05F9  0844               	movf	(floor@x+3)^(0+128),w
  6572  05FA  00B5               	movwf	(___fltol@f1+3)^(0+128)
  6573  05FB  0843               	movf	(floor@x+2)^(0+128),w
  6574  05FC  00B4               	movwf	(___fltol@f1+2)^(0+128)
  6575  05FD  0842               	movf	(floor@x+1)^(0+128),w
  6576  05FE  00B3               	movwf	(___fltol@f1+1)^(0+128)
  6577  05FF  0841               	movf	floor@x^(0+128),w
  6578  0600  00B2               	movwf	___fltol@f1^(0+128)
  6579  0601  160A  118A  26A6  120A  118A  	fcall	___fltol
  6580  0606  0835               	movf	(?___fltol+3)^(0+128),w
  6581  0607  00BF               	movwf	(___altofl@c+3)^(0+128)
  6582  0608  0834               	movf	(?___fltol+2)^(0+128),w
  6583  0609  00BE               	movwf	(___altofl@c+2)^(0+128)
  6584  060A  0833               	movf	(?___fltol+1)^(0+128),w
  6585  060B  00BD               	movwf	(___altofl@c+1)^(0+128)
  6586  060C  0832               	movf	?___fltol^(0+128),w
  6587  060D  00BC               	movwf	___altofl@c^(0+128)
  6588  060E  279C               	fcall	___altofl
  6589  060F  083F               	movf	(?___altofl+3)^(0+128),w
  6590  0610  00C8               	movwf	(floor@i+3)^(0+128)
  6591  0611  083E               	movf	(?___altofl+2)^(0+128),w
  6592  0612  00C7               	movwf	(floor@i+2)^(0+128)
  6593  0613  083D               	movf	(?___altofl+1)^(0+128),w
  6594  0614  00C6               	movwf	(floor@i+1)^(0+128)
  6595  0615  083C               	movf	?___altofl^(0+128),w
  6596  0616  00C5               	movwf	floor@i^(0+128)
  6597  0617  0844               	movf	(floor@x+3)^(0+128),w
  6598  0618  1283               	bcf	3,5	;RP0=0, select bank0
  6599  0619  00A4               	movwf	___flge@ff1+3
  6600  061A  1683               	bsf	3,5	;RP0=1, select bank1
  6601  061B  0843               	movf	(floor@x+2)^(0+128),w
  6602  061C  1283               	bcf	3,5	;RP0=0, select bank0
  6603  061D  00A3               	movwf	___flge@ff1+2
  6604  061E  1683               	bsf	3,5	;RP0=1, select bank1
  6605  061F  0842               	movf	(floor@x+1)^(0+128),w
  6606  0620  1283               	bcf	3,5	;RP0=0, select bank0
  6607  0621  00A2               	movwf	___flge@ff1+1
  6608  0622  1683               	bsf	3,5	;RP0=1, select bank1
  6609  0623  0841               	movf	floor@x^(0+128),w
  6610  0624  1283               	bcf	3,5	;RP0=0, select bank0
  6611  0625  00A1               	movwf	___flge@ff1
  6612  0626  1683               	bsf	3,5	;RP0=1, select bank1
  6613  0627  0848               	movf	(floor@i+3)^(0+128),w
  6614  0628  1283               	bcf	3,5	;RP0=0, select bank0
  6615  0629  00A8               	movwf	___flge@ff2+3
  6616  062A  1683               	bsf	3,5	;RP0=1, select bank1
  6617  062B  0847               	movf	(floor@i+2)^(0+128),w
  6618  062C  1283               	bcf	3,5	;RP0=0, select bank0
  6619  062D  00A7               	movwf	___flge@ff2+2
  6620  062E  1683               	bsf	3,5	;RP0=1, select bank1
  6621  062F  0846               	movf	(floor@i+1)^(0+128),w
  6622  0630  1283               	bcf	3,5	;RP0=0, select bank0
  6623  0631  00A6               	movwf	___flge@ff2+1
  6624  0632  1683               	bsf	3,5	;RP0=1, select bank1
  6625  0633  0845               	movf	floor@i^(0+128),w
  6626  0634  1283               	bcf	3,5	;RP0=0, select bank0
  6627  0635  00A5               	movwf	___flge@ff2
  6628  0636  120A  158A  2730  120A  118A  	fcall	___flge
  6629  063B  1803               	btfsc	3,0
  6630  063C  2E66               	goto	l3984
  6631  063D  30BF               	movlw	191
  6632  063E  00D4               	movwf	___fladd@f1+3
  6633  063F  3080               	movlw	128
  6634  0640  00D3               	movwf	___fladd@f1+2
  6635  0641  01D2               	clrf	___fladd@f1+1
  6636  0642  01D1               	clrf	___fladd@f1
  6637  0643  1683               	bsf	3,5	;RP0=1, select bank1
  6638  0644  0848               	movf	(floor@i+3)^(0+128),w
  6639  0645  1283               	bcf	3,5	;RP0=0, select bank0
  6640  0646  00D8               	movwf	___fladd@f2+3
  6641  0647  1683               	bsf	3,5	;RP0=1, select bank1
  6642  0648  0847               	movf	(floor@i+2)^(0+128),w
  6643  0649  1283               	bcf	3,5	;RP0=0, select bank0
  6644  064A  00D7               	movwf	___fladd@f2+2
  6645  064B  1683               	bsf	3,5	;RP0=1, select bank1
  6646  064C  0846               	movf	(floor@i+1)^(0+128),w
  6647  064D  1283               	bcf	3,5	;RP0=0, select bank0
  6648  064E  00D6               	movwf	___fladd@f2+1
  6649  064F  1683               	bsf	3,5	;RP0=1, select bank1
  6650  0650  0845               	movf	floor@i^(0+128),w
  6651  0651  1283               	bcf	3,5	;RP0=0, select bank0
  6652  0652  00D5               	movwf	___fladd@f2
  6653  0653  120A  158A  20C5   	fcall	___fladd
  6654  0656  0854               	movf	?___fladd+3,w
  6655  0657  1683               	bsf	3,5	;RP0=1, select bank1
  6656  0658  00C4               	movwf	(?_floor+3)^(0+128)
  6657  0659  1283               	bcf	3,5	;RP0=0, select bank0
  6658  065A  0853               	movf	?___fladd+2,w
  6659  065B  1683               	bsf	3,5	;RP0=1, select bank1
  6660  065C  00C3               	movwf	(?_floor+2)^(0+128)
  6661  065D  1283               	bcf	3,5	;RP0=0, select bank0
  6662  065E  0852               	movf	?___fladd+1,w
  6663  065F  1683               	bsf	3,5	;RP0=1, select bank1
  6664  0660  00C2               	movwf	(?_floor+1)^(0+128)
  6665  0661  1283               	bcf	3,5	;RP0=0, select bank0
  6666  0662  0851               	movf	?___fladd,w
  6667  0663  1683               	bsf	3,5	;RP0=1, select bank1
  6668  0664  00C1               	movwf	?_floor^(0+128)
  6669  0665  0008               	return
  6670  0666                     l3984:	
  6671  0666  1683               	bsf	3,5	;RP0=1, select bank1
  6672  0667  0848               	movf	(floor@i+3)^(0+128),w
  6673  0668  00C4               	movwf	(?_floor+3)^(0+128)
  6674  0669  0847               	movf	(floor@i+2)^(0+128),w
  6675  066A  00C3               	movwf	(?_floor+2)^(0+128)
  6676  066B  0846               	movf	(floor@i+1)^(0+128),w
  6677  066C  00C2               	movwf	(?_floor+1)^(0+128)
  6678  066D  0845               	movf	floor@i^(0+128),w
  6679  066E  00C1               	movwf	?_floor^(0+128)
  6680  066F  0008               	return
  6681  0670                     __end_of_floor:	
  6682  0670                     __ptext23:	
  6683 ;; *************** function _log *****************
  6684 ;; Defined at:
  6685 ;;		line 5 in file "/opt/microchip/xc8/v1.34/sources/common/log.c"
  6686 ;; Parameters:    Size  Location     Type
  6687 ;;  x               4    4[BANK1 ] unsigned long 
  6688 ;; Auto vars:     Size  Location     Type
  6689 ;;  exponent        2    8[BANK1 ] int 
  6690 ;; Return value:  Size  Location     Type
  6691 ;;                  4    4[BANK1 ] int 
  6692 ;; Registers used:
  6693 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  6694 ;; Tracked objects:
  6695 ;;		On entry : 300/100
  6696 ;;		On exit  : 300/100
  6697 ;;		Unchanged: 0/0
  6698 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6699 ;;      Params:         0       0       4       0       0
  6700 ;;      Locals:         0       0       2       0       0
  6701 ;;      Temps:          0       0       0       0       0
  6702 ;;      Totals:         0       0       6       0       0
  6703 ;;Total ram usage:        6 bytes
  6704 ;; Hardware stack levels used:    1
  6705 ;; Hardware stack levels required when called:    4
  6706 ;; This function calls:
  6707 ;;		___awtofl
  6708 ;;		___fladd
  6709 ;;		___flge
  6710 ;;		___flmul
  6711 ;;		_eval_poly
  6712 ;;		_frexp
  6713 ;; This function is called by:
  6714 ;;		_log10
  6715 ;;		_pow
  6716 ;; This function uses a non-reentrant model
  6717 ;;
  6718                           
  6719                           
  6720                           ;psect for function _log
  6721  0670                     _log:	
  6722                           
  6723                           ;incstack = 0
  6724                           ; Regs used in _log: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  6725  0670  0827               	movf	(log@x+3)^(0+128),w
  6726  0671  1283               	bcf	3,5	;RP0=0, select bank0
  6727  0672  00A4               	movwf	___flge@ff1+3
  6728  0673  1683               	bsf	3,5	;RP0=1, select bank1
  6729  0674  0826               	movf	(log@x+2)^(0+128),w
  6730  0675  1283               	bcf	3,5	;RP0=0, select bank0
  6731  0676  00A3               	movwf	___flge@ff1+2
  6732  0677  1683               	bsf	3,5	;RP0=1, select bank1
  6733  0678  0825               	movf	(log@x+1)^(0+128),w
  6734  0679  1283               	bcf	3,5	;RP0=0, select bank0
  6735  067A  00A2               	movwf	___flge@ff1+1
  6736  067B  1683               	bsf	3,5	;RP0=1, select bank1
  6737  067C  0824               	movf	log@x^(0+128),w
  6738  067D  1283               	bcf	3,5	;RP0=0, select bank0
  6739  067E  00A1               	movwf	___flge@ff1
  6740  067F  01A5               	clrf	___flge@ff2
  6741  0680  01A6               	clrf	___flge@ff2+1
  6742  0681  01A7               	clrf	___flge@ff2+2
  6743  0682  01A8               	clrf	___flge@ff2+3
  6744  0683  120A  158A  2730  120A  118A  	fcall	___flge
  6745  0688  1803               	btfsc	3,0
  6746  0689  2E90               	goto	l4124
  6747  068A  1683               	bsf	3,5	;RP0=1, select bank1
  6748  068B  01A4               	clrf	?_log^(0+128)
  6749  068C  01A5               	clrf	(?_log+1)^(0+128)
  6750  068D  01A6               	clrf	(?_log+2)^(0+128)
  6751  068E  01A7               	clrf	(?_log+3)^(0+128)
  6752  068F  0008               	return
  6753  0690                     l4124:	
  6754  0690  1683               	bsf	3,5	;RP0=1, select bank1
  6755  0691  0827               	movf	(log@x+3)^(0+128),w
  6756  0692  0426               	iorwf	(log@x+2)^(0+128),w
  6757  0693  0425               	iorwf	(log@x+1)^(0+128),w
  6758  0694  0424               	iorwf	log@x^(0+128),w
  6759  0695  1D03               	skipz
  6760  0696  2E9C               	goto	l4128
  6761  0697  01A4               	clrf	?_log^(0+128)
  6762  0698  01A5               	clrf	(?_log+1)^(0+128)
  6763  0699  01A6               	clrf	(?_log+2)^(0+128)
  6764  069A  01A7               	clrf	(?_log+3)^(0+128)
  6765  069B  0008               	return
  6766  069C                     l4128:	
  6767  069C  30BF               	movlw	191
  6768  069D  1283               	bcf	3,5	;RP0=0, select bank0
  6769  069E  00D4               	movwf	___fladd@f1+3
  6770  069F  3080               	movlw	128
  6771  06A0  00D3               	movwf	___fladd@f1+2
  6772  06A1  3040               	movlw	64
  6773  06A2  01D2               	clrf	___fladd@f1+1
  6774  06A3  01D1               	clrf	___fladd@f1
  6775  06A4  00C1               	movwf	___flmul@f1+3
  6776  06A5  30A8               	movlw	(low (log@exponent| 0))& (0+255)
  6777  06A6  01C0               	clrf	___flmul@f1+2
  6778  06A7  01BF               	clrf	___flmul@f1+1
  6779  06A8  01BE               	clrf	___flmul@f1
  6780  06A9  00A5               	movwf	frexp@eptr
  6781  06AA  1683               	bsf	3,5	;RP0=1, select bank1
  6782  06AB  0827               	movf	(log@x+3)^(0+128),w
  6783  06AC  1283               	bcf	3,5	;RP0=0, select bank0
  6784  06AD  00A4               	movwf	frexp@value+3
  6785  06AE  1683               	bsf	3,5	;RP0=1, select bank1
  6786  06AF  0826               	movf	(log@x+2)^(0+128),w
  6787  06B0  1283               	bcf	3,5	;RP0=0, select bank0
  6788  06B1  00A3               	movwf	frexp@value+2
  6789  06B2  1683               	bsf	3,5	;RP0=1, select bank1
  6790  06B3  0825               	movf	(log@x+1)^(0+128),w
  6791  06B4  1283               	bcf	3,5	;RP0=0, select bank0
  6792  06B5  00A2               	movwf	frexp@value+1
  6793  06B6  1683               	bsf	3,5	;RP0=1, select bank1
  6794  06B7  0824               	movf	log@x^(0+128),w
  6795  06B8  1283               	bcf	3,5	;RP0=0, select bank0
  6796  06B9  00A1               	movwf	frexp@value
  6797  06BA  275E               	fcall	_frexp
  6798  06BB  0824               	movf	?_frexp+3,w
  6799  06BC  00C5               	movwf	___flmul@f2+3
  6800  06BD  0823               	movf	?_frexp+2,w
  6801  06BE  00C4               	movwf	___flmul@f2+2
  6802  06BF  0822               	movf	?_frexp+1,w
  6803  06C0  00C3               	movwf	___flmul@f2+1
  6804  06C1  0821               	movf	?_frexp,w
  6805  06C2  00C2               	movwf	___flmul@f2
  6806  06C3  120A  158A  2698  120A  118A  	fcall	___flmul
  6807  06C8  0841               	movf	?___flmul+3,w
  6808  06C9  00D8               	movwf	___fladd@f2+3
  6809  06CA  0840               	movf	?___flmul+2,w
  6810  06CB  00D7               	movwf	___fladd@f2+2
  6811  06CC  083F               	movf	?___flmul+1,w
  6812  06CD  00D6               	movwf	___fladd@f2+1
  6813  06CE  083E               	movf	?___flmul,w
  6814  06CF  00D5               	movwf	___fladd@f2
  6815  06D0  120A  158A  20C5  120A  118A  	fcall	___fladd
  6816  06D5  0854               	movf	?___fladd+3,w
  6817  06D6  1683               	bsf	3,5	;RP0=1, select bank1
  6818  06D7  00A7               	movwf	(log@x+3)^(0+128)
  6819  06D8  1283               	bcf	3,5	;RP0=0, select bank0
  6820  06D9  0853               	movf	?___fladd+2,w
  6821  06DA  1683               	bsf	3,5	;RP0=1, select bank1
  6822  06DB  00A6               	movwf	(log@x+2)^(0+128)
  6823  06DC  1283               	bcf	3,5	;RP0=0, select bank0
  6824  06DD  0852               	movf	?___fladd+1,w
  6825  06DE  1683               	bsf	3,5	;RP0=1, select bank1
  6826  06DF  00A5               	movwf	(log@x+1)^(0+128)
  6827  06E0  1283               	bcf	3,5	;RP0=0, select bank0
  6828  06E1  0851               	movf	?___fladd,w
  6829  06E2  1683               	bsf	3,5	;RP0=1, select bank1
  6830  06E3  00A4               	movwf	log@x^(0+128)
  6831  06E4  30FF               	movlw	-1
  6832  06E5  07A8               	addwf	log@exponent^(0+128),f
  6833  06E6  1C03               	skipc
  6834  06E7  03A9               	decf	(log@exponent+1)^(0+128),f
  6835  06E8  0827               	movf	(log@x+3)^(0+128),w
  6836  06E9  1283               	bcf	3,5	;RP0=0, select bank0
  6837  06EA  00E3               	movwf	eval_poly@x+3
  6838  06EB  1683               	bsf	3,5	;RP0=1, select bank1
  6839  06EC  0826               	movf	(log@x+2)^(0+128),w
  6840  06ED  1283               	bcf	3,5	;RP0=0, select bank0
  6841  06EE  00E2               	movwf	eval_poly@x+2
  6842  06EF  1683               	bsf	3,5	;RP0=1, select bank1
  6843  06F0  0825               	movf	(log@x+1)^(0+128),w
  6844  06F1  1283               	bcf	3,5	;RP0=0, select bank0
  6845  06F2  00E1               	movwf	eval_poly@x+1
  6846  06F3  1683               	bsf	3,5	;RP0=1, select bank1
  6847  06F4  0824               	movf	log@x^(0+128),w
  6848  06F5  1283               	bcf	3,5	;RP0=0, select bank0
  6849  06F6  00E0               	movwf	eval_poly@x
  6850  06F7  303A               	movlw	low (log@coeff| (0+32768))
  6851  06F8  00E4               	movwf	eval_poly@d
  6852  06F9  3098               	movlw	high (log@coeff| (0+32768))
  6853  06FA  00E5               	movwf	eval_poly@d+1
  6854  06FB  3008               	movlw	8
  6855  06FC  00E6               	movwf	eval_poly@n
  6856  06FD  01E7               	clrf	eval_poly@n+1
  6857  06FE  120A  158A  2006  120A  118A  	fcall	_eval_poly
  6858  0703  0863               	movf	?_eval_poly+3,w
  6859  0704  1683               	bsf	3,5	;RP0=1, select bank1
  6860  0705  00A7               	movwf	(log@x+3)^(0+128)
  6861  0706  1283               	bcf	3,5	;RP0=0, select bank0
  6862  0707  0862               	movf	?_eval_poly+2,w
  6863  0708  1683               	bsf	3,5	;RP0=1, select bank1
  6864  0709  00A6               	movwf	(log@x+2)^(0+128)
  6865  070A  1283               	bcf	3,5	;RP0=0, select bank0
  6866  070B  0861               	movf	?_eval_poly+1,w
  6867  070C  1683               	bsf	3,5	;RP0=1, select bank1
  6868  070D  00A5               	movwf	(log@x+1)^(0+128)
  6869  070E  1283               	bcf	3,5	;RP0=0, select bank0
  6870  070F  0860               	movf	?_eval_poly,w
  6871  0710  1683               	bsf	3,5	;RP0=1, select bank1
  6872  0711  00A4               	movwf	log@x^(0+128)
  6873  0712  0827               	movf	(log@x+3)^(0+128),w
  6874  0713  1283               	bcf	3,5	;RP0=0, select bank0
  6875  0714  00D4               	movwf	___fladd@f1+3
  6876  0715  1683               	bsf	3,5	;RP0=1, select bank1
  6877  0716  0826               	movf	(log@x+2)^(0+128),w
  6878  0717  1283               	bcf	3,5	;RP0=0, select bank0
  6879  0718  00D3               	movwf	___fladd@f1+2
  6880  0719  1683               	bsf	3,5	;RP0=1, select bank1
  6881  071A  0825               	movf	(log@x+1)^(0+128),w
  6882  071B  1283               	bcf	3,5	;RP0=0, select bank0
  6883  071C  00D2               	movwf	___fladd@f1+1
  6884  071D  1683               	bsf	3,5	;RP0=1, select bank1
  6885  071E  0824               	movf	log@x^(0+128),w
  6886  071F  1283               	bcf	3,5	;RP0=0, select bank0
  6887  0720  00D1               	movwf	___fladd@f1
  6888  0721  303F               	movlw	63
  6889  0722  00C1               	movwf	___flmul@f1+3
  6890  0723  3031               	movlw	49
  6891  0724  00C0               	movwf	___flmul@f1+2
  6892  0725  3072               	movlw	114
  6893  0726  00BF               	movwf	___flmul@f1+1
  6894  0727  3018               	movlw	24
  6895  0728  00BE               	movwf	___flmul@f1
  6896  0729  1683               	bsf	3,5	;RP0=1, select bank1
  6897  072A  0829               	movf	(log@exponent+1)^(0+128),w
  6898  072B  1283               	bcf	3,5	;RP0=0, select bank0
  6899  072C  00AC               	movwf	___awtofl@c+1
  6900  072D  1683               	bsf	3,5	;RP0=1, select bank1
  6901  072E  0828               	movf	log@exponent^(0+128),w
  6902  072F  1283               	bcf	3,5	;RP0=0, select bank0
  6903  0730  00AB               	movwf	___awtofl@c
  6904  0731  160A  118A  26FD  120A  118A  	fcall	___awtofl
  6905  0736  082E               	movf	?___awtofl+3,w
  6906  0737  00C5               	movwf	___flmul@f2+3
  6907  0738  082D               	movf	?___awtofl+2,w
  6908  0739  00C4               	movwf	___flmul@f2+2
  6909  073A  082C               	movf	?___awtofl+1,w
  6910  073B  00C3               	movwf	___flmul@f2+1
  6911  073C  082B               	movf	?___awtofl,w
  6912  073D  00C2               	movwf	___flmul@f2
  6913  073E  120A  158A  2698  120A  118A  	fcall	___flmul
  6914  0743  0841               	movf	?___flmul+3,w
  6915  0744  00D8               	movwf	___fladd@f2+3
  6916  0745  0840               	movf	?___flmul+2,w
  6917  0746  00D7               	movwf	___fladd@f2+2
  6918  0747  083F               	movf	?___flmul+1,w
  6919  0748  00D6               	movwf	___fladd@f2+1
  6920  0749  083E               	movf	?___flmul,w
  6921  074A  00D5               	movwf	___fladd@f2
  6922  074B  120A  158A  20C5   	fcall	___fladd
  6923  074E  0854               	movf	?___fladd+3,w
  6924  074F  1683               	bsf	3,5	;RP0=1, select bank1
  6925  0750  00A7               	movwf	(?_log+3)^(0+128)
  6926  0751  1283               	bcf	3,5	;RP0=0, select bank0
  6927  0752  0853               	movf	?___fladd+2,w
  6928  0753  1683               	bsf	3,5	;RP0=1, select bank1
  6929  0754  00A6               	movwf	(?_log+2)^(0+128)
  6930  0755  1283               	bcf	3,5	;RP0=0, select bank0
  6931  0756  0852               	movf	?___fladd+1,w
  6932  0757  1683               	bsf	3,5	;RP0=1, select bank1
  6933  0758  00A5               	movwf	(?_log+1)^(0+128)
  6934  0759  1283               	bcf	3,5	;RP0=0, select bank0
  6935  075A  0851               	movf	?___fladd,w
  6936  075B  1683               	bsf	3,5	;RP0=1, select bank1
  6937  075C  00A4               	movwf	?_log^(0+128)
  6938  075D  0008               	return
  6939  075E                     __end_of_log:	
  6940  075E                     __ptext24:	
  6941 ;; *************** function _frexp *****************
  6942 ;; Defined at:
  6943 ;;		line 254 in file "/opt/microchip/xc8/v1.34/sources/common/frexp.c"
  6944 ;; Parameters:    Size  Location     Type
  6945 ;;  value           4    0[BANK0 ] int 
  6946 ;;  eptr            1    4[BANK0 ] PTR int 
  6947 ;;		 -> log@exponent(2), floor@expon(2), 
  6948 ;; Auto vars:     Size  Location     Type
  6949 ;;		None
  6950 ;; Return value:  Size  Location     Type
  6951 ;;                  4    0[BANK0 ] PTR int 
  6952 ;; Registers used:
  6953 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
  6954 ;; Tracked objects:
  6955 ;;		On entry : 300/0
  6956 ;;		On exit  : B00/0
  6957 ;;		Unchanged: 0/0
  6958 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6959 ;;      Params:         0       5       0       0       0
  6960 ;;      Locals:         0       0       0       0       0
  6961 ;;      Temps:          2       0       0       0       0
  6962 ;;      Totals:         2       5       0       0       0
  6963 ;;Total ram usage:        7 bytes
  6964 ;; Hardware stack levels used:    1
  6965 ;; Hardware stack levels required when called:    1
  6966 ;; This function calls:
  6967 ;;		Nothing
  6968 ;; This function is called by:
  6969 ;;		_floor
  6970 ;;		_log
  6971 ;; This function uses a non-reentrant model
  6972 ;;
  6973                           
  6974                           
  6975                           ;psect for function _frexp
  6976  075E                     _frexp:	
  6977                           
  6978                           ;incstack = 0
  6979                           ; Regs used in _frexp: [wreg-fsr0h+status,2+status,0+btemp+1]
  6980  075E  0824               	movf	frexp@value+3,w
  6981  075F  0423               	iorwf	frexp@value+2,w
  6982  0760  0422               	iorwf	frexp@value+1,w
  6983  0761  0421               	iorwf	frexp@value,w
  6984  0762  1D03               	skipz
  6985  0763  2F6F               	goto	l3898
  6986  0764  0825               	movf	frexp@eptr,w
  6987  0765  0084               	movwf	4
  6988  0766  1383               	bcf	3,7	;select IRP bank0
  6989  0767  0180               	clrf	0
  6990  0768  0A84               	incf	4,f
  6991  0769  0180               	clrf	0
  6992  076A  01A1               	clrf	?_frexp
  6993  076B  01A2               	clrf	?_frexp+1
  6994  076C  01A3               	clrf	?_frexp+2
  6995  076D  01A4               	clrf	?_frexp+3
  6996  076E  0008               	return
  6997  076F                     l3898:	
  6998  076F  0824               	movf	frexp@value+3,w
  6999  0770  397F               	andlw	127
  7000  0771  00F4               	movwf	??_frexp
  7001  0772  01F5               	clrf	??_frexp+1
  7002  0773  1003               	clrc
  7003  0774  0DF4               	rlf	??_frexp,f
  7004  0775  0DF5               	rlf	??_frexp+1,f
  7005  0776  0825               	movf	frexp@eptr,w
  7006  0777  0084               	movwf	4
  7007  0778  0874               	movf	??_frexp,w
  7008  0779  1383               	bcf	3,7	;select IRP bank0
  7009  077A  0080               	movwf	0
  7010  077B  0A84               	incf	4,f
  7011  077C  0875               	movf	??_frexp+1,w
  7012  077D  0080               	movwf	0
  7013  077E  0D23               	rlf	frexp@value+2,w
  7014  077F  0D23               	rlf	frexp@value+2,w
  7015  0780  3901               	andlw	1
  7016  0781  00F4               	movwf	??_frexp
  7017  0782  01F5               	clrf	??_frexp+1
  7018  0783  0825               	movf	frexp@eptr,w
  7019  0784  0084               	movwf	4
  7020  0785  0874               	movf	??_frexp,w
  7021  0786  0480               	iorwf	0,f
  7022  0787  0A84               	incf	4,f
  7023  0788  0875               	movf	??_frexp+1,w
  7024  0789  0480               	iorwf	0,f
  7025  078A  0825               	movf	frexp@eptr,w
  7026  078B  0084               	movwf	4
  7027  078C  3082               	movlw	130
  7028  078D  0780               	addwf	0,f
  7029  078E  0F84               	incfsz	4,f
  7030  078F  0800               	movf	0,w
  7031  0790  1803               	skipnc
  7032  0791  0A00               	incf	0,w
  7033  0792  00FF               	movwf	127
  7034  0793  3EFF               	addlw	255
  7035  0794  0080               	movwf	0
  7036  0795  0384               	decf	4,f
  7037  0796  0824               	movf	frexp@value+3,w
  7038  0797  3980               	andlw	-128
  7039  0798  383F               	iorlw	63
  7040  0799  00A4               	movwf	frexp@value+3
  7041  079A  13A3               	bcf	frexp@value+2,7
  7042  079B  0008               	return
  7043  079C                     __end_of_frexp:	
  7044  079C                     __ptext18:	
  7045 ;; *************** function ___altofl *****************
  7046 ;; Defined at:
  7047 ;;		line 36 in file "/opt/microchip/xc8/v1.34/sources/common/altofl.c"
  7048 ;; Parameters:    Size  Location     Type
  7049 ;;  c               4   28[BANK1 ] long 
  7050 ;; Auto vars:     Size  Location     Type
  7051 ;;  sign            1   32[BANK1 ] unsigned char 
  7052 ;; Return value:  Size  Location     Type
  7053 ;;                  4   28[BANK1 ] unsigned char 
  7054 ;; Registers used:
  7055 ;;		wreg, status,2, status,0, pclath, cstack
  7056 ;; Tracked objects:
  7057 ;;		On entry : 300/100
  7058 ;;		On exit  : 300/100
  7059 ;;		Unchanged: 0/0
  7060 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7061 ;;      Params:         0       0       4       0       0
  7062 ;;      Locals:         0       0       1       0       0
  7063 ;;      Temps:          0       0       0       0       0
  7064 ;;      Totals:         0       0       5       0       0
  7065 ;;Total ram usage:        5 bytes
  7066 ;; Hardware stack levels used:    1
  7067 ;; Hardware stack levels required when called:    2
  7068 ;; This function calls:
  7069 ;;		___flpack
  7070 ;; This function is called by:
  7071 ;;		_floor
  7072 ;; This function uses a non-reentrant model
  7073 ;;
  7074                           
  7075                           
  7076                           ;psect for function ___altofl
  7077  079C                     ___altofl:	
  7078                           
  7079                           ;incstack = 0
  7080                           ; Regs used in ___altofl: [wreg+status,2+status,0+pclath+cstack]
  7081  079C  01C0               	clrf	___altofl@sign^(0+128)
  7082  079D  1FBF               	btfss	(___altofl@c+3)^(0+128),7
  7083  079E  2FAC               	goto	l3736
  7084  079F  09BC               	comf	___altofl@c^(0+128),f
  7085  07A0  09BD               	comf	(___altofl@c+1)^(0+128),f
  7086  07A1  09BE               	comf	(___altofl@c+2)^(0+128),f
  7087  07A2  09BF               	comf	(___altofl@c+3)^(0+128),f
  7088  07A3  0ABC               	incf	___altofl@c^(0+128),f
  7089  07A4  1903               	skipnz
  7090  07A5  0ABD               	incf	(___altofl@c+1)^(0+128),f
  7091  07A6  1903               	skipnz
  7092  07A7  0ABE               	incf	(___altofl@c+2)^(0+128),f
  7093  07A8  1903               	skipnz
  7094  07A9  0ABF               	incf	(___altofl@c+3)^(0+128),f
  7095  07AA  01C0               	clrf	___altofl@sign^(0+128)
  7096  07AB  0AC0               	incf	___altofl@sign^(0+128),f
  7097  07AC                     l3736:	
  7098  07AC  083F               	movf	(___altofl@c+3)^(0+128),w
  7099  07AD  1283               	bcf	3,5	;RP0=0, select bank0
  7100  07AE  00A4               	movwf	___flpack@arg+3
  7101  07AF  1683               	bsf	3,5	;RP0=1, select bank1
  7102  07B0  083E               	movf	(___altofl@c+2)^(0+128),w
  7103  07B1  1283               	bcf	3,5	;RP0=0, select bank0
  7104  07B2  00A3               	movwf	___flpack@arg+2
  7105  07B3  1683               	bsf	3,5	;RP0=1, select bank1
  7106  07B4  083D               	movf	(___altofl@c+1)^(0+128),w
  7107  07B5  1283               	bcf	3,5	;RP0=0, select bank0
  7108  07B6  00A2               	movwf	___flpack@arg+1
  7109  07B7  1683               	bsf	3,5	;RP0=1, select bank1
  7110  07B8  083C               	movf	___altofl@c^(0+128),w
  7111  07B9  1283               	bcf	3,5	;RP0=0, select bank0
  7112  07BA  00A1               	movwf	___flpack@arg
  7113  07BB  3096               	movlw	150
  7114  07BC  00A5               	movwf	___flpack@exp
  7115  07BD  1683               	bsf	3,5	;RP0=1, select bank1
  7116  07BE  0840               	movf	___altofl@sign^(0+128),w
  7117  07BF  1283               	bcf	3,5	;RP0=0, select bank0
  7118  07C0  00A6               	movwf	___flpack@sign
  7119  07C1  160A  118A  279E   	fcall	___flpack
  7120  07C4  0824               	movf	?___flpack+3,w
  7121  07C5  1683               	bsf	3,5	;RP0=1, select bank1
  7122  07C6  00BF               	movwf	(?___altofl+3)^(0+128)
  7123  07C7  1283               	bcf	3,5	;RP0=0, select bank0
  7124  07C8  0823               	movf	?___flpack+2,w
  7125  07C9  1683               	bsf	3,5	;RP0=1, select bank1
  7126  07CA  00BE               	movwf	(?___altofl+2)^(0+128)
  7127  07CB  1283               	bcf	3,5	;RP0=0, select bank0
  7128  07CC  0822               	movf	?___flpack+1,w
  7129  07CD  1683               	bsf	3,5	;RP0=1, select bank1
  7130  07CE  00BD               	movwf	(?___altofl+1)^(0+128)
  7131  07CF  1283               	bcf	3,5	;RP0=0, select bank0
  7132  07D0  0821               	movf	?___flpack,w
  7133  07D1  1683               	bsf	3,5	;RP0=1, select bank1
  7134  07D2  00BC               	movwf	?___altofl^(0+128)
  7135  07D3  0008               	return
  7136  07D4                     __end_of___altofl:	
  7137  07D4                     __ptext15:	
  7138 ;; *************** function ___flneg *****************
  7139 ;; Defined at:
  7140 ;;		line 15 in file "/opt/microchip/xc8/v1.34/sources/common/flneg.c"
  7141 ;; Parameters:    Size  Location     Type
  7142 ;;  f1              4    0[BANK0 ] int 
  7143 ;; Auto vars:     Size  Location     Type
  7144 ;;		None
  7145 ;; Return value:  Size  Location     Type
  7146 ;;                  4    0[BANK0 ] int 
  7147 ;; Registers used:
  7148 ;;		wreg
  7149 ;; Tracked objects:
  7150 ;;		On entry : 300/0
  7151 ;;		On exit  : 300/0
  7152 ;;		Unchanged: 0/0
  7153 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7154 ;;      Params:         0       4       0       0       0
  7155 ;;      Locals:         0       0       0       0       0
  7156 ;;      Temps:          0       0       0       0       0
  7157 ;;      Totals:         0       4       0       0       0
  7158 ;;Total ram usage:        4 bytes
  7159 ;; Hardware stack levels used:    1
  7160 ;; Hardware stack levels required when called:    1
  7161 ;; This function calls:
  7162 ;;		Nothing
  7163 ;; This function is called by:
  7164 ;;		_ldexp
  7165 ;;		_pow
  7166 ;;		_exp
  7167 ;; This function uses a non-reentrant model
  7168 ;;
  7169                           
  7170                           
  7171                           ;psect for function ___flneg
  7172  07D4                     ___flneg:	
  7173                           
  7174                           ;incstack = 0
  7175                           ; Regs used in ___flneg: [wreg]
  7176  07D4  0824               	movf	___flneg@f1+3,w
  7177  07D5  0423               	iorwf	___flneg@f1+2,w
  7178  07D6  0422               	iorwf	___flneg@f1+1,w
  7179  07D7  0421               	iorwf	___flneg@f1,w
  7180  07D8  1903               	skipnz
  7181  07D9  0008               	return
  7182  07DA  3080               	movlw	128
  7183  07DB  06A4               	xorwf	___flneg@f1+3,f
  7184  07DC  0008               	return
  7185  07DD                     __end_of___flneg:	
  7186                           
  7187                           	psect	text14
  7188  1D40                     __ptext14:	
  7189 ;; *************** function _ldexp *****************
  7190 ;; Defined at:
  7191 ;;		line 277 in file "/opt/microchip/xc8/v1.34/sources/common/frexp.c"
  7192 ;; Parameters:    Size  Location     Type
  7193 ;;  value           4    4[BANK1 ] unsigned char 
  7194 ;;  newexp          2    8[BANK1 ] int 
  7195 ;; Auto vars:     Size  Location     Type
  7196 ;;		None
  7197 ;; Return value:  Size  Location     Type
  7198 ;;                  4    4[BANK1 ] int 
  7199 ;; Registers used:
  7200 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  7201 ;; Tracked objects:
  7202 ;;		On entry : 300/100
  7203 ;;		On exit  : 300/100
  7204 ;;		Unchanged: 0/0
  7205 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7206 ;;      Params:         0       0       6       0       0
  7207 ;;      Locals:         0       0       4       0       0
  7208 ;;      Temps:          0       0       2       0       0
  7209 ;;      Totals:         0       0      12       0       0
  7210 ;;Total ram usage:       12 bytes
  7211 ;; Hardware stack levels used:    1
  7212 ;; Hardware stack levels required when called:    2
  7213 ;; This function calls:
  7214 ;;		___flge
  7215 ;;		___flneg
  7216 ;; This function is called by:
  7217 ;;		_exp
  7218 ;; This function uses a non-reentrant model
  7219 ;;
  7220                           
  7221                           
  7222                           ;psect for function _ldexp
  7223  1D40                     _ldexp:	
  7224                           
  7225                           ;incstack = 0
  7226                           ; Regs used in _ldexp: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  7227  1D40  0827               	movf	(ldexp@value+3)^(0+128),w
  7228  1D41  0426               	iorwf	(ldexp@value+2)^(0+128),w
  7229  1D42  0425               	iorwf	(ldexp@value+1)^(0+128),w
  7230  1D43  0424               	iorwf	ldexp@value^(0+128),w
  7231  1D44  1D03               	skipz
  7232  1D45  2D4B               	goto	l4050
  7233  1D46  01A4               	clrf	?_ldexp^(0+128)
  7234  1D47  01A5               	clrf	(?_ldexp+1)^(0+128)
  7235  1D48  01A6               	clrf	(?_ldexp+2)^(0+128)
  7236  1D49  01A7               	clrf	(?_ldexp+3)^(0+128)
  7237  1D4A  0008               	return
  7238  1D4B                     l4050:	
  7239  1D4B  0827               	movf	(ldexp@value^(0+128)+3),w
  7240  1D4C  397F               	andlw	127
  7241  1D4D  00AA               	movwf	??_ldexp^(0+128)
  7242  1D4E  01AB               	clrf	(??_ldexp^(0+128)+1)
  7243  1D4F  1003               	clrc
  7244  1D50  0DAA               	rlf	??_ldexp^(0+128),f
  7245  1D51  0DAB               	rlf	(??_ldexp^(0+128)+1),f
  7246  1D52  082A               	movf	??_ldexp^(0+128),w
  7247  1D53  07A8               	addwf	ldexp@newexp^(0+128),f
  7248  1D54  1803               	skipnc
  7249  1D55  0AA9               	incf	(ldexp@newexp+1)^(0+128),f
  7250  1D56  082B               	movf	(??_ldexp+1)^(0+128),w
  7251  1D57  07A9               	addwf	(ldexp@newexp+1)^(0+128),f
  7252  1D58  0D26               	rlf	(ldexp@value^(0+128)+2),w
  7253  1D59  0D26               	rlf	(ldexp@value^(0+128)+2),w
  7254  1D5A  3901               	andlw	1
  7255  1D5B  07A8               	addwf	ldexp@newexp^(0+128),f
  7256  1D5C  1803               	skipnc
  7257  1D5D  0AA9               	incf	(ldexp@newexp+1)^(0+128),f
  7258  1D5E  1FA9               	btfss	(ldexp@newexp+1)^(0+128),7
  7259  1D5F  2D65               	goto	l4058
  7260  1D60  01A4               	clrf	?_ldexp^(0+128)
  7261  1D61  01A5               	clrf	(?_ldexp+1)^(0+128)
  7262  1D62  01A6               	clrf	(?_ldexp+2)^(0+128)
  7263  1D63  01A7               	clrf	(?_ldexp+3)^(0+128)
  7264  1D64  0008               	return
  7265  1D65                     l4058:	
  7266  1D65  0829               	movf	(ldexp@newexp+1)^(0+128),w
  7267  1D66  3A80               	xorlw	128
  7268  1D67  00FF               	movwf	127
  7269  1D68  3081               	movlw	129
  7270  1D69  027F               	subwf	127,w
  7271  1D6A  1D03               	skipz
  7272  1D6B  2D6E               	goto	u3675
  7273  1D6C  3000               	movlw	0
  7274  1D6D  0228               	subwf	ldexp@newexp^(0+128),w
  7275  1D6E                     u3675:	
  7276  1D6E  1C03               	skipc
  7277  1D6F  2DBE               	goto	l4080
  7278  1D70  1683               	bsf	3,5	;RP0=1, select bank1
  7279  1D71  1303               	bcf	3,6	;RP1=0, select bank1
  7280  1D72  0827               	movf	(ldexp@value+3)^(0+128),w
  7281  1D73  1283               	bcf	3,5	;RP0=0, select bank0
  7282  1D74  00A4               	movwf	___flge@ff1+3
  7283  1D75  1683               	bsf	3,5	;RP0=1, select bank1
  7284  1D76  0826               	movf	(ldexp@value+2)^(0+128),w
  7285  1D77  1283               	bcf	3,5	;RP0=0, select bank0
  7286  1D78  00A3               	movwf	___flge@ff1+2
  7287  1D79  1683               	bsf	3,5	;RP0=1, select bank1
  7288  1D7A  0825               	movf	(ldexp@value+1)^(0+128),w
  7289  1D7B  1283               	bcf	3,5	;RP0=0, select bank0
  7290  1D7C  00A2               	movwf	___flge@ff1+1
  7291  1D7D  1683               	bsf	3,5	;RP0=1, select bank1
  7292  1D7E  0824               	movf	ldexp@value^(0+128),w
  7293  1D7F  1283               	bcf	3,5	;RP0=0, select bank0
  7294  1D80  00A1               	movwf	___flge@ff1
  7295  1D81  01A5               	clrf	___flge@ff2
  7296  1D82  01A6               	clrf	___flge@ff2+1
  7297  1D83  01A7               	clrf	___flge@ff2+2
  7298  1D84  01A8               	clrf	___flge@ff2+3
  7299  1D85  120A  158A  2730  160A  158A  	fcall	___flge
  7300  1D8A  307F               	movlw	127
  7301  1D8B  1803               	btfsc	3,0
  7302  1D8C  2DB6               	goto	L8
  7303  1D8D  1683               	bsf	3,5	;RP0=1, select bank1
  7304  1D8E  00AF               	movwf	(_ldexp$660+3)^(0+128)
  7305  1D8F  00AE               	movwf	(_ldexp$660+2)^(0+128)
  7306  1D90  30FE               	movlw	254
  7307  1D91  00AD               	movwf	(_ldexp$660+1)^(0+128)
  7308  1D92  30F7               	movlw	247
  7309  1D93  00AC               	movwf	_ldexp$660^(0+128)
  7310  1D94  082F               	movf	(_ldexp$660+3)^(0+128),w
  7311  1D95  1283               	bcf	3,5	;RP0=0, select bank0
  7312  1D96  00A4               	movwf	___flneg@f1+3
  7313  1D97  1683               	bsf	3,5	;RP0=1, select bank1
  7314  1D98  082E               	movf	(_ldexp$660+2)^(0+128),w
  7315  1D99  1283               	bcf	3,5	;RP0=0, select bank0
  7316  1D9A  00A3               	movwf	___flneg@f1+2
  7317  1D9B  1683               	bsf	3,5	;RP0=1, select bank1
  7318  1D9C  082D               	movf	(_ldexp$660+1)^(0+128),w
  7319  1D9D  1283               	bcf	3,5	;RP0=0, select bank0
  7320  1D9E  00A2               	movwf	___flneg@f1+1
  7321  1D9F  1683               	bsf	3,5	;RP0=1, select bank1
  7322  1DA0  082C               	movf	_ldexp$660^(0+128),w
  7323  1DA1  1283               	bcf	3,5	;RP0=0, select bank0
  7324  1DA2  00A1               	movwf	___flneg@f1
  7325  1DA3  120A  118A  27D4   	fcall	___flneg
  7326  1DA6  0824               	movf	?___flneg+3,w
  7327  1DA7  1683               	bsf	3,5	;RP0=1, select bank1
  7328  1DA8  00A7               	movwf	(?_ldexp+3)^(0+128)
  7329  1DA9  1283               	bcf	3,5	;RP0=0, select bank0
  7330  1DAA  0823               	movf	?___flneg+2,w
  7331  1DAB  1683               	bsf	3,5	;RP0=1, select bank1
  7332  1DAC  00A6               	movwf	(?_ldexp+2)^(0+128)
  7333  1DAD  1283               	bcf	3,5	;RP0=0, select bank0
  7334  1DAE  0822               	movf	?___flneg+1,w
  7335  1DAF  1683               	bsf	3,5	;RP0=1, select bank1
  7336  1DB0  00A5               	movwf	(?_ldexp+1)^(0+128)
  7337  1DB1  1283               	bcf	3,5	;RP0=0, select bank0
  7338  1DB2  0821               	movf	?___flneg,w
  7339  1DB3  1683               	bsf	3,5	;RP0=1, select bank1
  7340  1DB4  00A4               	movwf	?_ldexp^(0+128)
  7341  1DB5  0008               	return
  7342  1DB6                     L8:	
  7343  1DB6  1683               	bsf	3,5	;RP0=1, select bank1
  7344  1DB7  00A7               	movwf	(?_ldexp+3)^(0+128)
  7345  1DB8  00A6               	movwf	(?_ldexp+2)^(0+128)
  7346  1DB9  30FE               	movlw	254
  7347  1DBA  00A5               	movwf	(?_ldexp+1)^(0+128)
  7348  1DBB  30F7               	movlw	247
  7349  1DBC  00A4               	movwf	?_ldexp^(0+128)
  7350  1DBD  0008               	return
  7351  1DBE                     l4080:	
  7352  1DBE  1683               	bsf	3,5	;RP0=1, select bank1
  7353  1DBF  1303               	bcf	3,6	;RP1=0, select bank1
  7354  1DC0  0829               	movf	(ldexp@newexp+1)^(0+128),w
  7355  1DC1  00AB               	movwf	(??_ldexp^(0+128)+1)
  7356  1DC2  0828               	movf	ldexp@newexp^(0+128),w
  7357  1DC3  00AA               	movwf	??_ldexp^(0+128)
  7358  1DC4  0D2B               	rlf	(??_ldexp^(0+128)+1),w
  7359  1DC5  0CAB               	rrf	(??_ldexp^(0+128)+1),f
  7360  1DC6  0CAA               	rrf	??_ldexp^(0+128),f
  7361  1DC7  0827               	movf	(ldexp@value^(0+128)+3),w
  7362  1DC8  062A               	xorwf	??_ldexp^(0+128),w
  7363  1DC9  3980               	andlw	-128
  7364  1DCA  062A               	xorwf	??_ldexp^(0+128),w
  7365  1DCB  00A7               	movwf	(ldexp@value^(0+128)+3)
  7366  1DCC  0828               	movf	ldexp@newexp^(0+128),w
  7367  1DCD  3901               	andlw	1
  7368  1DCE  00AA               	movwf	??_ldexp^(0+128)
  7369  1DCF  0CAA               	rrf	??_ldexp^(0+128),f
  7370  1DD0  0CAA               	rrf	??_ldexp^(0+128),f
  7371  1DD1  0826               	movf	(ldexp@value^(0+128)+2),w
  7372  1DD2  062A               	xorwf	??_ldexp^(0+128),w
  7373  1DD3  397F               	andlw	-129
  7374  1DD4  062A               	xorwf	??_ldexp^(0+128),w
  7375  1DD5  00A6               	movwf	(ldexp@value^(0+128)+2)
  7376  1DD6  0008               	return
  7377  1DD7                     __end_of_ldexp:	
  7378                           
  7379                           	psect	text22
  7380  1C7D                     __ptext22:	
  7381 ;; *************** function _log10 *****************
  7382 ;; Defined at:
  7383 ;;		line 39 in file "/opt/microchip/xc8/v1.34/sources/common/log.c"
  7384 ;; Parameters:    Size  Location     Type
  7385 ;;  x               4   10[BANK1 ] unsigned long 
  7386 ;; Auto vars:     Size  Location     Type
  7387 ;;		None
  7388 ;; Return value:  Size  Location     Type
  7389 ;;                  4   10[BANK1 ] unsigned long 
  7390 ;; Registers used:
  7391 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  7392 ;; Tracked objects:
  7393 ;;		On entry : 300/100
  7394 ;;		On exit  : 300/100
  7395 ;;		Unchanged: 0/0
  7396 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7397 ;;      Params:         0       0       4       0       0
  7398 ;;      Locals:         0       0       4       0       0
  7399 ;;      Temps:          0       0       0       0       0
  7400 ;;      Totals:         0       0       8       0       0
  7401 ;;Total ram usage:        8 bytes
  7402 ;; Hardware stack levels used:    1
  7403 ;; Hardware stack levels required when called:    5
  7404 ;; This function calls:
  7405 ;;		___flmul
  7406 ;;		_log
  7407 ;; This function is called by:
  7408 ;;		_format_double
  7409 ;; This function uses a non-reentrant model
  7410 ;;
  7411                           
  7412                           
  7413                           ;psect for function _log10
  7414  1C7D                     _log10:	
  7415                           
  7416                           ;incstack = 0
  7417                           ; Regs used in _log10: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  7418  1C7D  082D               	movf	(log10@x+3)^(0+128),w
  7419  1C7E  00A7               	movwf	(log@x+3)^(0+128)
  7420  1C7F  082C               	movf	(log10@x+2)^(0+128),w
  7421  1C80  00A6               	movwf	(log@x+2)^(0+128)
  7422  1C81  082B               	movf	(log10@x+1)^(0+128),w
  7423  1C82  00A5               	movwf	(log@x+1)^(0+128)
  7424  1C83  082A               	movf	log10@x^(0+128),w
  7425  1C84  00A4               	movwf	log@x^(0+128)
  7426  1C85  120A  118A  2670  160A  158A  	fcall	_log
  7427  1C8A  0827               	movf	(?_log+3)^(0+128),w
  7428  1C8B  00B1               	movwf	(_log10$1019+3)^(0+128)
  7429  1C8C  0826               	movf	(?_log+2)^(0+128),w
  7430  1C8D  00B0               	movwf	(_log10$1019+2)^(0+128)
  7431  1C8E  0825               	movf	(?_log+1)^(0+128),w
  7432  1C8F  00AF               	movwf	(_log10$1019+1)^(0+128)
  7433  1C90  0824               	movf	?_log^(0+128),w
  7434  1C91  00AE               	movwf	_log10$1019^(0+128)
  7435  1C92  303E               	movlw	62
  7436  1C93  1283               	bcf	3,5	;RP0=0, select bank0
  7437  1C94  00C1               	movwf	___flmul@f1+3
  7438  1C95  30DE               	movlw	222
  7439  1C96  00C0               	movwf	___flmul@f1+2
  7440  1C97  305B               	movlw	91
  7441  1C98  00BF               	movwf	___flmul@f1+1
  7442  1C99  30D9               	movlw	217
  7443  1C9A  00BE               	movwf	___flmul@f1
  7444  1C9B  1683               	bsf	3,5	;RP0=1, select bank1
  7445  1C9C  0831               	movf	(_log10$1019+3)^(0+128),w
  7446  1C9D  1283               	bcf	3,5	;RP0=0, select bank0
  7447  1C9E  00C5               	movwf	___flmul@f2+3
  7448  1C9F  1683               	bsf	3,5	;RP0=1, select bank1
  7449  1CA0  0830               	movf	(_log10$1019+2)^(0+128),w
  7450  1CA1  1283               	bcf	3,5	;RP0=0, select bank0
  7451  1CA2  00C4               	movwf	___flmul@f2+2
  7452  1CA3  1683               	bsf	3,5	;RP0=1, select bank1
  7453  1CA4  082F               	movf	(_log10$1019+1)^(0+128),w
  7454  1CA5  1283               	bcf	3,5	;RP0=0, select bank0
  7455  1CA6  00C3               	movwf	___flmul@f2+1
  7456  1CA7  1683               	bsf	3,5	;RP0=1, select bank1
  7457  1CA8  082E               	movf	_log10$1019^(0+128),w
  7458  1CA9  1283               	bcf	3,5	;RP0=0, select bank0
  7459  1CAA  00C2               	movwf	___flmul@f2
  7460  1CAB  120A  158A  2698   	fcall	___flmul
  7461  1CAE  0841               	movf	?___flmul+3,w
  7462  1CAF  1683               	bsf	3,5	;RP0=1, select bank1
  7463  1CB0  00AD               	movwf	(?_log10+3)^(0+128)
  7464  1CB1  1283               	bcf	3,5	;RP0=0, select bank0
  7465  1CB2  0840               	movf	?___flmul+2,w
  7466  1CB3  1683               	bsf	3,5	;RP0=1, select bank1
  7467  1CB4  00AC               	movwf	(?_log10+2)^(0+128)
  7468  1CB5  1283               	bcf	3,5	;RP0=0, select bank0
  7469  1CB6  083F               	movf	?___flmul+1,w
  7470  1CB7  1683               	bsf	3,5	;RP0=1, select bank1
  7471  1CB8  00AB               	movwf	(?_log10+1)^(0+128)
  7472  1CB9  1283               	bcf	3,5	;RP0=0, select bank0
  7473  1CBA  083E               	movf	?___flmul,w
  7474  1CBB  1683               	bsf	3,5	;RP0=1, select bank1
  7475  1CBC  00AA               	movwf	?_log10^(0+128)
  7476  1CBD  0008               	return
  7477  1CBE                     __end_of_log10:	
  7478                           
  7479                           	psect	text25
  7480  0806                     __ptext25:	
  7481 ;; *************** function _eval_poly *****************
  7482 ;; Defined at:
  7483 ;;		line 4 in file "/opt/microchip/xc8/v1.34/sources/common/evalpoly.c"
  7484 ;; Parameters:    Size  Location     Type
  7485 ;;  x               4   63[BANK0 ] PTR int 
  7486 ;;  d               2   67[BANK0 ] PTR const 
  7487 ;;		 -> exp@coeff(40), log@coeff(36), 
  7488 ;;  n               2   69[BANK0 ] int 
  7489 ;; Auto vars:     Size  Location     Type
  7490 ;;  res             4    0[BANK1 ] int 
  7491 ;; Return value:  Size  Location     Type
  7492 ;;                  4   63[BANK0 ] int 
  7493 ;; Registers used:
  7494 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  7495 ;; Tracked objects:
  7496 ;;		On entry : 300/0
  7497 ;;		On exit  : 300/0
  7498 ;;		Unchanged: 0/0
  7499 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7500 ;;      Params:         0       8       0       0       0
  7501 ;;      Locals:         0       0       4       0       0
  7502 ;;      Temps:          0       8       0       0       0
  7503 ;;      Totals:         0      16       4       0       0
  7504 ;;Total ram usage:       20 bytes
  7505 ;; Hardware stack levels used:    1
  7506 ;; Hardware stack levels required when called:    3
  7507 ;; This function calls:
  7508 ;;		___fladd
  7509 ;;		___flmul
  7510 ;; This function is called by:
  7511 ;;		_log
  7512 ;;		_exp
  7513 ;; This function uses a non-reentrant model
  7514 ;;
  7515                           
  7516                           
  7517                           ;psect for function _eval_poly
  7518  0806                     _eval_poly:	
  7519                           
  7520                           ;incstack = 0
  7521 ;; using string table level
  7522                           ; Regs used in _eval_poly: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  7523  0806  0866               	movf	eval_poly@n,w
  7524  0807  00E8               	movwf	??_eval_poly
  7525  0808  1003               	clrc
  7526  0809  0DE8               	rlf	??_eval_poly,f
  7527  080A  1003               	clrc
  7528  080B  0DE8               	rlf	??_eval_poly,f
  7529  080C  0868               	movf	??_eval_poly,w
  7530  080D  0764               	addwf	eval_poly@d,w
  7531  080E  00EA               	movwf	??_eval_poly+2
  7532  080F  0865               	movf	eval_poly@d+1,w
  7533  0810  00E9               	movwf	??_eval_poly+1
  7534  0811  1803               	skipnc
  7535  0812  0AE9               	incf	??_eval_poly+1,f
  7536  0813  1BE8               	btfsc	??_eval_poly,7
  7537  0814  03E9               	decf	??_eval_poly+1,f
  7538  0815  1283               	bcf	3,5	;RP0=0, select bank0
  7539  0816  1303               	bcf	3,6	;RP1=0, select bank0
  7540  0817  0869               	movf	??_eval_poly+1,w
  7541  0818  00EB               	movwf	??_eval_poly+3
  7542  0819  00FF               	movwf	127
  7543  081A  086A               	movf	??_eval_poly+2,w
  7544  081B  0084               	movwf	4
  7545  081C  160A  158A  2000  120A  158A  	fcall	stringtab
  7546  0821  00EC               	movwf	??_eval_poly+4
  7547  0822  160A  158A  2000  120A  158A  	fcall	stringtab
  7548  0827  00ED               	movwf	??_eval_poly+5
  7549  0828  160A  158A  2000  120A  158A  	fcall	stringtab
  7550  082D  00EE               	movwf	??_eval_poly+6
  7551  082E  160A  158A  2000  120A  158A  	fcall	stringtab
  7552  0833  00EF               	movwf	??_eval_poly+7
  7553  0834  1683               	bsf	3,5	;RP0=1, select bank1
  7554  0835  00A3               	movwf	(eval_poly@res+3)^(0+128)
  7555  0836  1283               	bcf	3,5	;RP0=0, select bank0
  7556  0837  086E               	movf	??_eval_poly+6,w
  7557  0838  1683               	bsf	3,5	;RP0=1, select bank1
  7558  0839  00A2               	movwf	(eval_poly@res+2)^(0+128)
  7559  083A  1283               	bcf	3,5	;RP0=0, select bank0
  7560  083B  086D               	movf	??_eval_poly+5,w
  7561  083C  1683               	bsf	3,5	;RP0=1, select bank1
  7562  083D  00A1               	movwf	(eval_poly@res+1)^(0+128)
  7563  083E  1283               	bcf	3,5	;RP0=0, select bank0
  7564  083F  086C               	movf	??_eval_poly+4,w
  7565  0840                     L10:	
  7566  0840  1683               	bsf	3,5	;RP0=1, select bank1
  7567  0841  00A0               	movwf	eval_poly@res^(0+128)
  7568  0842  1283               	bcf	3,5	;RP0=0, select bank0
  7569  0843  0866               	movf	eval_poly@n,w
  7570  0844  0467               	iorwf	eval_poly@n+1,w
  7571  0845  1903               	btfsc	3,2
  7572  0846  28B4               	goto	l4092
  7573  0847  30FF               	movlw	-1
  7574  0848  07E6               	addwf	eval_poly@n,f
  7575  0849  1C03               	skipc
  7576  084A  03E7               	decf	eval_poly@n+1,f
  7577  084B  0866               	movf	eval_poly@n,w
  7578  084C  00E8               	movwf	??_eval_poly
  7579  084D  1003               	clrc
  7580  084E  0DE8               	rlf	??_eval_poly,f
  7581  084F  1003               	clrc
  7582  0850  0DE8               	rlf	??_eval_poly,f
  7583  0851  0868               	movf	??_eval_poly,w
  7584  0852  0764               	addwf	eval_poly@d,w
  7585  0853  00EA               	movwf	??_eval_poly+2
  7586  0854  0865               	movf	eval_poly@d+1,w
  7587  0855  00E9               	movwf	??_eval_poly+1
  7588  0856  1803               	skipnc
  7589  0857  0AE9               	incf	??_eval_poly+1,f
  7590  0858  1BE8               	btfsc	??_eval_poly,7
  7591  0859  03E9               	decf	??_eval_poly+1,f
  7592  085A  1283               	bcf	3,5	;RP0=0, select bank0
  7593  085B  1303               	bcf	3,6	;RP1=0, select bank0
  7594  085C  0869               	movf	??_eval_poly+1,w
  7595  085D  00EB               	movwf	??_eval_poly+3
  7596  085E  00FF               	movwf	127
  7597  085F  086A               	movf	??_eval_poly+2,w
  7598  0860  0084               	movwf	4
  7599  0861  160A  158A  2000  120A  158A  	fcall	stringtab
  7600  0866  00EC               	movwf	??_eval_poly+4
  7601  0867  160A  158A  2000  120A  158A  	fcall	stringtab
  7602  086C  00ED               	movwf	??_eval_poly+5
  7603  086D  160A  158A  2000  120A  158A  	fcall	stringtab
  7604  0872  00EE               	movwf	??_eval_poly+6
  7605  0873  160A  158A  2000  120A  158A  	fcall	stringtab
  7606  0878  00EF               	movwf	??_eval_poly+7
  7607  0879  00D4               	movwf	___fladd@f1+3
  7608  087A  086E               	movf	??_eval_poly+6,w
  7609  087B  00D3               	movwf	___fladd@f1+2
  7610  087C  086D               	movf	??_eval_poly+5,w
  7611  087D  00D2               	movwf	___fladd@f1+1
  7612  087E  086C               	movf	??_eval_poly+4,w
  7613  087F  00D1               	movwf	___fladd@f1
  7614  0880  1683               	bsf	3,5	;RP0=1, select bank1
  7615  0881  0823               	movf	(eval_poly@res+3)^(0+128),w
  7616  0882  1283               	bcf	3,5	;RP0=0, select bank0
  7617  0883  00C1               	movwf	___flmul@f1+3
  7618  0884  1683               	bsf	3,5	;RP0=1, select bank1
  7619  0885  0822               	movf	(eval_poly@res+2)^(0+128),w
  7620  0886  1283               	bcf	3,5	;RP0=0, select bank0
  7621  0887  00C0               	movwf	___flmul@f1+2
  7622  0888  1683               	bsf	3,5	;RP0=1, select bank1
  7623  0889  0821               	movf	(eval_poly@res+1)^(0+128),w
  7624  088A  1283               	bcf	3,5	;RP0=0, select bank0
  7625  088B  00BF               	movwf	___flmul@f1+1
  7626  088C  1683               	bsf	3,5	;RP0=1, select bank1
  7627  088D  0820               	movf	eval_poly@res^(0+128),w
  7628  088E  1283               	bcf	3,5	;RP0=0, select bank0
  7629  088F  00BE               	movwf	___flmul@f1
  7630  0890  0863               	movf	eval_poly@x+3,w
  7631  0891  00C5               	movwf	___flmul@f2+3
  7632  0892  0862               	movf	eval_poly@x+2,w
  7633  0893  00C4               	movwf	___flmul@f2+2
  7634  0894  0861               	movf	eval_poly@x+1,w
  7635  0895  00C3               	movwf	___flmul@f2+1
  7636  0896  0860               	movf	eval_poly@x,w
  7637  0897  00C2               	movwf	___flmul@f2
  7638  0898  2698  120A  158A   	fcall	___flmul
  7639  089B  0841               	movf	?___flmul+3,w
  7640  089C  00D8               	movwf	___fladd@f2+3
  7641  089D  0840               	movf	?___flmul+2,w
  7642  089E  00D7               	movwf	___fladd@f2+2
  7643  089F  083F               	movf	?___flmul+1,w
  7644  08A0  00D6               	movwf	___fladd@f2+1
  7645  08A1  083E               	movf	?___flmul,w
  7646  08A2  00D5               	movwf	___fladd@f2
  7647  08A3  20C5  120A  158A   	fcall	___fladd
  7648  08A6  0854               	movf	?___fladd+3,w
  7649  08A7  1683               	bsf	3,5	;RP0=1, select bank1
  7650  08A8  00A3               	movwf	(eval_poly@res+3)^(0+128)
  7651  08A9  1283               	bcf	3,5	;RP0=0, select bank0
  7652  08AA  0853               	movf	?___fladd+2,w
  7653  08AB  1683               	bsf	3,5	;RP0=1, select bank1
  7654  08AC  00A2               	movwf	(eval_poly@res+2)^(0+128)
  7655  08AD  1283               	bcf	3,5	;RP0=0, select bank0
  7656  08AE  0852               	movf	?___fladd+1,w
  7657  08AF  1683               	bsf	3,5	;RP0=1, select bank1
  7658  08B0  00A1               	movwf	(eval_poly@res+1)^(0+128)
  7659  08B1  1283               	bcf	3,5	;RP0=0, select bank0
  7660  08B2  0851               	movf	?___fladd,w
  7661  08B3  2840               	goto	L10
  7662  08B4                     l4092:	
  7663  08B4  1683               	bsf	3,5	;RP0=1, select bank1
  7664  08B5  0823               	movf	(eval_poly@res+3)^(0+128),w
  7665  08B6  1283               	bcf	3,5	;RP0=0, select bank0
  7666  08B7  00E3               	movwf	?_eval_poly+3
  7667  08B8  1683               	bsf	3,5	;RP0=1, select bank1
  7668  08B9  0822               	movf	(eval_poly@res+2)^(0+128),w
  7669  08BA  1283               	bcf	3,5	;RP0=0, select bank0
  7670  08BB  00E2               	movwf	?_eval_poly+2
  7671  08BC  1683               	bsf	3,5	;RP0=1, select bank1
  7672  08BD  0821               	movf	(eval_poly@res+1)^(0+128),w
  7673  08BE  1283               	bcf	3,5	;RP0=0, select bank0
  7674  08BF  00E1               	movwf	?_eval_poly+1
  7675  08C0  1683               	bsf	3,5	;RP0=1, select bank1
  7676  08C1  0820               	movf	eval_poly@res^(0+128),w
  7677  08C2  1283               	bcf	3,5	;RP0=0, select bank0
  7678  08C3  00E0               	movwf	?_eval_poly
  7679  08C4  0008               	return
  7680  08C5                     __end_of_eval_poly:	
  7681  08C5                     __ptext27:	
  7682 ;; *************** function ___fladd *****************
  7683 ;; Defined at:
  7684 ;;		line 88 in file "/opt/microchip/xc8/v1.34/sources/common/fladd.c"
  7685 ;; Parameters:    Size  Location     Type
  7686 ;;  f1              4   48[BANK0 ] unsigned char 
  7687 ;;  f2              4   52[BANK0 ] unsigned char 
  7688 ;; Auto vars:     Size  Location     Type
  7689 ;;  exp1            1   62[BANK0 ] unsigned char 
  7690 ;;  exp2            1   61[BANK0 ] unsigned char 
  7691 ;;  sign            1   60[BANK0 ] unsigned char 
  7692 ;; Return value:  Size  Location     Type
  7693 ;;                  4   48[BANK0 ] unsigned char 
  7694 ;; Registers used:
  7695 ;;		wreg, status,2, status,0, pclath, cstack
  7696 ;; Tracked objects:
  7697 ;;		On entry : 300/0
  7698 ;;		On exit  : 300/0
  7699 ;;		Unchanged: 0/0
  7700 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7701 ;;      Params:         0       8       0       0       0
  7702 ;;      Locals:         0       3       0       0       0
  7703 ;;      Temps:          0       4       0       0       0
  7704 ;;      Totals:         0      15       0       0       0
  7705 ;;Total ram usage:       15 bytes
  7706 ;; Hardware stack levels used:    1
  7707 ;; Hardware stack levels required when called:    2
  7708 ;; This function calls:
  7709 ;;		___flpack
  7710 ;; This function is called by:
  7711 ;;		_floor
  7712 ;;		___flsub
  7713 ;;		_log
  7714 ;;		_eval_poly
  7715 ;; This function uses a non-reentrant model
  7716 ;;
  7717                           
  7718                           
  7719                           ;psect for function ___fladd
  7720  08C5                     ___fladd:	
  7721                           
  7722                           ;incstack = 0
  7723                           ; Regs used in ___fladd: [wreg+status,2+status,0+pclath+cstack]
  7724  08C5  0851               	movf	___fladd@f1,w
  7725  08C6  00D9               	movwf	??___fladd
  7726  08C7  0852               	movf	___fladd@f1+1,w
  7727  08C8  00DA               	movwf	??___fladd+1
  7728  08C9  0853               	movf	___fladd@f1+2,w
  7729  08CA  00DB               	movwf	??___fladd+2
  7730  08CB  0854               	movf	___fladd@f1+3,w
  7731  08CC  00DC               	movwf	??___fladd+3
  7732  08CD  1003               	clrc
  7733  08CE  0D5B               	rlf	??___fladd+2,w
  7734  08CF  0D5C               	rlf	??___fladd+3,w
  7735  08D0  00DF               	movwf	___fladd@exp1
  7736  08D1  0855               	movf	___fladd@f2,w
  7737  08D2  00D9               	movwf	??___fladd
  7738  08D3  0856               	movf	___fladd@f2+1,w
  7739  08D4  00DA               	movwf	??___fladd+1
  7740  08D5  0857               	movf	___fladd@f2+2,w
  7741  08D6  00DB               	movwf	??___fladd+2
  7742  08D7  0858               	movf	___fladd@f2+3,w
  7743  08D8  00DC               	movwf	??___fladd+3
  7744  08D9  1003               	clrc
  7745  08DA  0D5B               	rlf	??___fladd+2,w
  7746  08DB  0D5C               	rlf	??___fladd+3,w
  7747  08DC  00DE               	movwf	___fladd@exp2
  7748  08DD  085F               	movf	___fladd@exp1,w
  7749  08DE  1903               	btfsc	3,2
  7750  08DF  28EC               	goto	l3746
  7751  08E0  085E               	movf	___fladd@exp2,w
  7752  08E1  025F               	subwf	___fladd@exp1,w
  7753  08E2  085E               	movf	___fladd@exp2,w
  7754  08E3  1803               	skipnc
  7755  08E4  28F6               	goto	L11
  7756  08E5  00D9               	movwf	??___fladd
  7757  08E6  085F               	movf	___fladd@exp1,w
  7758  08E7  02D9               	subwf	??___fladd,f
  7759  08E8  3021               	movlw	33
  7760  08E9  0259               	subwf	??___fladd,w
  7761  08EA  1C03               	skipc
  7762  08EB  28F5               	goto	l3750
  7763  08EC                     l3746:	
  7764  08EC  0858               	movf	___fladd@f2+3,w
  7765  08ED  00D4               	movwf	?___fladd+3
  7766  08EE  0857               	movf	___fladd@f2+2,w
  7767  08EF  00D3               	movwf	?___fladd+2
  7768  08F0  0856               	movf	___fladd@f2+1,w
  7769  08F1  00D2               	movwf	?___fladd+1
  7770  08F2  0855               	movf	___fladd@f2,w
  7771  08F3  00D1               	movwf	?___fladd
  7772  08F4  0008               	return
  7773  08F5                     l3750:	
  7774  08F5  085E               	movf	___fladd@exp2,w
  7775  08F6                     L11:	
  7776  08F6  1903               	btfsc	3,2
  7777  08F7  0008               	return
  7778  08F8  085F               	movf	___fladd@exp1,w
  7779  08F9  025E               	subwf	___fladd@exp2,w
  7780  08FA  1803               	skipnc
  7781  08FB  2904               	goto	l3756
  7782  08FC  085F               	movf	___fladd@exp1,w
  7783  08FD  00D9               	movwf	??___fladd
  7784  08FE  085E               	movf	___fladd@exp2,w
  7785  08FF  02D9               	subwf	??___fladd,f
  7786  0900  3021               	movlw	33
  7787  0901  0259               	subwf	??___fladd,w
  7788  0902  1803               	btfsc	3,0
  7789  0903  0008               	return
  7790  0904                     l3756:	
  7791  0904  3006               	movlw	6
  7792  0905  00DD               	movwf	___fladd@sign
  7793  0906  1BD4               	btfsc	___fladd@f1+3,7
  7794  0907  17DD               	bsf	___fladd@sign,7
  7795  0908  1BD8               	btfsc	___fladd@f2+3,7
  7796  0909  175D               	bsf	___fladd@sign,6
  7797  090A  17D3               	bsf	___fladd@f1+2,7
  7798  090B  01D4               	clrf	___fladd@f1+3
  7799  090C  17D7               	bsf	___fladd@f2+2,7
  7800  090D  01D8               	clrf	___fladd@f2+3
  7801  090E  085E               	movf	___fladd@exp2,w
  7802  090F  025F               	subwf	___fladd@exp1,w
  7803  0910  1803               	skipnc
  7804  0911  292D               	goto	l3778
  7805  0912                     l3768:	
  7806  0912  1003               	clrc
  7807  0913  0DD5               	rlf	___fladd@f2,f
  7808  0914  0DD6               	rlf	___fladd@f2+1,f
  7809  0915  0DD7               	rlf	___fladd@f2+2,f
  7810  0916  0DD8               	rlf	___fladd@f2+3,f
  7811  0917  03DE               	decf	___fladd@exp2,f
  7812  0918  085E               	movf	___fladd@exp2,w
  7813  0919  065F               	xorwf	___fladd@exp1,w
  7814  091A  1903               	skipnz
  7815  091B  2928               	goto	l3776
  7816  091C  03DD               	decf	___fladd@sign,f
  7817  091D  085D               	movf	___fladd@sign,w
  7818  091E  3907               	andlw	7
  7819  091F  1903               	btfsc	3,2
  7820  0920  2928               	goto	l3776
  7821  0921  2912               	goto	l3768
  7822  0922                     l3774:	
  7823  0922  1003               	clrc
  7824  0923  0CD4               	rrf	___fladd@f1+3,f
  7825  0924  0CD3               	rrf	___fladd@f1+2,f
  7826  0925  0CD2               	rrf	___fladd@f1+1,f
  7827  0926  0CD1               	rrf	___fladd@f1,f
  7828  0927  0ADF               	incf	___fladd@exp1,f
  7829  0928                     l3776:	
  7830  0928  085F               	movf	___fladd@exp1,w
  7831  0929  065E               	xorwf	___fladd@exp2,w
  7832  092A  1903               	btfsc	3,2
  7833  092B  294B               	goto	l842
  7834  092C  2922               	goto	l3774
  7835  092D                     l3778:	
  7836  092D  085F               	movf	___fladd@exp1,w
  7837  092E  025E               	subwf	___fladd@exp2,w
  7838  092F  1803               	skipnc
  7839  0930  294B               	goto	l842
  7840  0931                     l3780:	
  7841  0931  1003               	clrc
  7842  0932  0DD1               	rlf	___fladd@f1,f
  7843  0933  0DD2               	rlf	___fladd@f1+1,f
  7844  0934  0DD3               	rlf	___fladd@f1+2,f
  7845  0935  0DD4               	rlf	___fladd@f1+3,f
  7846  0936  03DF               	decf	___fladd@exp1,f
  7847  0937  085E               	movf	___fladd@exp2,w
  7848  0938  065F               	xorwf	___fladd@exp1,w
  7849  0939  1903               	skipnz
  7850  093A  2947               	goto	l3788
  7851  093B  03DD               	decf	___fladd@sign,f
  7852  093C  085D               	movf	___fladd@sign,w
  7853  093D  3907               	andlw	7
  7854  093E  1903               	btfsc	3,2
  7855  093F  2947               	goto	l3788
  7856  0940  2931               	goto	l3780
  7857  0941                     l3786:	
  7858  0941  1003               	clrc
  7859  0942  0CD8               	rrf	___fladd@f2+3,f
  7860  0943  0CD7               	rrf	___fladd@f2+2,f
  7861  0944  0CD6               	rrf	___fladd@f2+1,f
  7862  0945  0CD5               	rrf	___fladd@f2,f
  7863  0946  0ADE               	incf	___fladd@exp2,f
  7864  0947                     l3788:	
  7865  0947  085F               	movf	___fladd@exp1,w
  7866  0948  065E               	xorwf	___fladd@exp2,w
  7867  0949  1D03               	skipz
  7868  094A  2941               	goto	l3786
  7869  094B                     l842:	
  7870  094B  1FDD               	btfss	___fladd@sign,7
  7871  094C  2959               	goto	l3794
  7872  094D  30FF               	movlw	255
  7873  094E  06D1               	xorwf	___fladd@f1,f
  7874  094F  06D2               	xorwf	___fladd@f1+1,f
  7875  0950  06D3               	xorwf	___fladd@f1+2,f
  7876  0951  06D4               	xorwf	___fladd@f1+3,f
  7877  0952  0AD1               	incf	___fladd@f1,f
  7878  0953  1903               	skipnz
  7879  0954  0AD2               	incf	___fladd@f1+1,f
  7880  0955  1903               	skipnz
  7881  0956  0AD3               	incf	___fladd@f1+2,f
  7882  0957  1903               	skipnz
  7883  0958  0AD4               	incf	___fladd@f1+3,f
  7884  0959                     l3794:	
  7885  0959  1F5D               	btfss	___fladd@sign,6
  7886  095A  2967               	goto	l3800
  7887  095B  30FF               	movlw	255
  7888  095C  06D5               	xorwf	___fladd@f2,f
  7889  095D  06D6               	xorwf	___fladd@f2+1,f
  7890  095E  06D7               	xorwf	___fladd@f2+2,f
  7891  095F  06D8               	xorwf	___fladd@f2+3,f
  7892  0960  0AD5               	incf	___fladd@f2,f
  7893  0961  1903               	skipnz
  7894  0962  0AD6               	incf	___fladd@f2+1,f
  7895  0963  1903               	skipnz
  7896  0964  0AD7               	incf	___fladd@f2+2,f
  7897  0965  1903               	skipnz
  7898  0966  0AD8               	incf	___fladd@f2+3,f
  7899  0967                     l3800:	
  7900  0967  01DD               	clrf	___fladd@sign
  7901  0968  0851               	movf	___fladd@f1,w
  7902  0969  07D5               	addwf	___fladd@f2,f
  7903  096A  0852               	movf	___fladd@f1+1,w
  7904  096B  1103               	clrz
  7905  096C  1803               	skipnc
  7906  096D  3E01               	addlw	1
  7907  096E  1D03               	btfss	3,2
  7908  096F  07D6               	addwf	___fladd@f2+1,f
  7909  0970  0853               	movf	___fladd@f1+2,w
  7910  0971  1103               	clrz
  7911  0972  1803               	skipnc
  7912  0973  3E01               	addlw	1
  7913  0974  1D03               	btfss	3,2
  7914  0975  07D7               	addwf	___fladd@f2+2,f
  7915  0976  0854               	movf	___fladd@f1+3,w
  7916  0977  1103               	clrz
  7917  0978  1803               	skipnc
  7918  0979  3E01               	addlw	1
  7919  097A  1D03               	btfss	3,2
  7920  097B  07D8               	addwf	___fladd@f2+3,f
  7921  097C  1FD8               	btfss	___fladd@f2+3,7
  7922  097D  298C               	goto	l3812
  7923  097E  30FF               	movlw	255
  7924  097F  06D5               	xorwf	___fladd@f2,f
  7925  0980  06D6               	xorwf	___fladd@f2+1,f
  7926  0981  06D7               	xorwf	___fladd@f2+2,f
  7927  0982  06D8               	xorwf	___fladd@f2+3,f
  7928  0983  0AD5               	incf	___fladd@f2,f
  7929  0984  1903               	skipnz
  7930  0985  0AD6               	incf	___fladd@f2+1,f
  7931  0986  1903               	skipnz
  7932  0987  0AD7               	incf	___fladd@f2+2,f
  7933  0988  1903               	skipnz
  7934  0989  0AD8               	incf	___fladd@f2+3,f
  7935  098A  01DD               	clrf	___fladd@sign
  7936  098B  0ADD               	incf	___fladd@sign,f
  7937  098C                     l3812:	
  7938  098C  0858               	movf	___fladd@f2+3,w
  7939  098D  00A4               	movwf	___flpack@arg+3
  7940  098E  0857               	movf	___fladd@f2+2,w
  7941  098F  00A3               	movwf	___flpack@arg+2
  7942  0990  0856               	movf	___fladd@f2+1,w
  7943  0991  00A2               	movwf	___flpack@arg+1
  7944  0992  0855               	movf	___fladd@f2,w
  7945  0993  00A1               	movwf	___flpack@arg
  7946  0994  085F               	movf	___fladd@exp1,w
  7947  0995  00A5               	movwf	___flpack@exp
  7948  0996  085D               	movf	___fladd@sign,w
  7949  0997  00A6               	movwf	___flpack@sign
  7950  0998  160A  118A  279E   	fcall	___flpack
  7951  099B  0824               	movf	?___flpack+3,w
  7952  099C  00D4               	movwf	?___fladd+3
  7953  099D  0823               	movf	?___flpack+2,w
  7954  099E  00D3               	movwf	?___fladd+2
  7955  099F  0822               	movf	?___flpack+1,w
  7956  09A0  00D2               	movwf	?___fladd+1
  7957  09A1  0821               	movf	?___flpack,w
  7958  09A2  00D1               	movwf	?___fladd
  7959  09A3  0008               	return
  7960  09A4                     __end_of___fladd:	
  7961  09A4                     __ptext5:	
  7962 ;; *************** function _measure_inductance *****************
  7963 ;; Defined at:
  7964 ;;		line 197 in file "../../../lib/../src/measure.c"
  7965 ;; Parameters:    Size  Location     Type
  7966 ;;		None
  7967 ;; Auto vars:     Size  Location     Type
  7968 ;;  Lin             4   67[BANK1 ] unsigned char 
  7969 ;;  denominator     4   32[BANK1 ] unsigned char 
  7970 ;;  numerator       4   28[BANK1 ] unsigned char 
  7971 ;;  var             2   65[BANK1 ] unsigned int 
  7972 ;;  unit            1   52[BANK1 ] unsigned char 
  7973 ;; Return value:  Size  Location     Type
  7974 ;;		None               void
  7975 ;; Registers used:
  7976 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  7977 ;; Tracked objects:
  7978 ;;		On entry : 300/300
  7979 ;;		On exit  : 300/0
  7980 ;;		Unchanged: 0/0
  7981 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7982 ;;      Params:         0       0       0       0       0
  7983 ;;      Locals:         0       0      43       0       0
  7984 ;;      Temps:          0       0       0       0       0
  7985 ;;      Totals:         0       0      43       0       0
  7986 ;;Total ram usage:       43 bytes
  7987 ;; Hardware stack levels used:    1
  7988 ;; Hardware stack levels required when called:    6
  7989 ;; This function calls:
  7990 ;;		___fldiv
  7991 ;;		___flge
  7992 ;;		___flmul
  7993 ;;		___flsub
  7994 ;;		___fltol
  7995 ;;		___lwtofl
  7996 ;;		_lcd_gotoxy
  7997 ;;		_measure_freq
  7998 ;;		_print_reading
  7999 ;;		_print_unit
  8000 ;;		_put_str
  8001 ;; This function is called by:
  8002 ;;		_main
  8003 ;; This function uses a non-reentrant model
  8004 ;;
  8005                           
  8006                           
  8007                           ;psect for function _measure_inductance
  8008  09A4                     _measure_inductance:	
  8009                           
  8010                           ;measure.c: 198: uint8_t unit;
  8011                           ;measure.c: 199: uint16_t var;
  8012                           ;measure.c: 201: double Lin, numerator, denominator;
  8013                           ;measure.c: 204: lcd_gotoxy(0, 0);
  8014                           
  8015                           ;incstack = 0
  8016                           ; Regs used in _measure_inductance: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  8017  09A4  1283               	bcf	3,5	;RP0=0, select bank0
  8018  09A5  1303               	bcf	3,6	;RP1=0, select bank0
  8019  09A6  3000               	movlw	0
  8020  09A7  01A4               	clrf	lcd_gotoxy@row
  8021  09A8  277C  120A  158A   	fcall	_lcd_gotoxy
  8022                           
  8023                           ;measure.c: 205: put_str("Inductivity ");
  8024  09AB  308D               	movlw	low (STR_37| (0+32768))
  8025  09AC  1283               	bcf	3,5	;RP0=0, select bank0
  8026  09AD  1303               	bcf	3,6	;RP1=0, select bank0
  8027  09AE  00A4               	movwf	put_str@s
  8028  09AF  3098               	movlw	high (STR_37| (0+32768))
  8029  09B0  00A5               	movwf	put_str@s+1
  8030  09B1  27AD               	fcall	_put_str
  8031                           
  8032                           ;measure.c: 207: var = measure_freq();
  8033  09B2  120A  118A  2220  120A  158A  	fcall	_measure_freq
  8034  09B7  0852               	movf	?_measure_freq+1,w
  8035  09B8  1683               	bsf	3,5	;RP0=1, select bank1
  8036  09B9  00E2               	movwf	(measure_inductance@var+1)^(0+128)
  8037  09BA  1283               	bcf	3,5	;RP0=0, select bank0
  8038  09BB  0851               	movf	?_measure_freq,w
  8039  09BC  1683               	bsf	3,5	;RP0=1, select bank1
  8040  09BD  00E1               	movwf	measure_inductance@var^(0+128)
  8041                           
  8042                           ;measure.c: 209: F3 = (double)var;
  8043  09BE  0862               	movf	(measure_inductance@var+1)^(0+128),w
  8044  09BF  1283               	bcf	3,5	;RP0=0, select bank0
  8045  09C0  00D8               	movwf	___lwtofl@c+1
  8046  09C1  1683               	bsf	3,5	;RP0=1, select bank1
  8047  09C2  0861               	movf	measure_inductance@var^(0+128),w
  8048  09C3  1283               	bcf	3,5	;RP0=0, select bank0
  8049  09C4  00D7               	movwf	___lwtofl@c
  8050  09C5  160A  118A  27ED  120A  158A  	fcall	___lwtofl
  8051  09CA  085A               	movf	?___lwtofl+3,w
  8052  09CB  1683               	bsf	3,5	;RP0=1, select bank3
  8053  09CC  1703               	bsf	3,6	;RP1=1, select bank3
  8054  09CD  0097               	movwf	(_F3+3)^(0+384)
  8055  09CE  1283               	bcf	3,5	;RP0=0, select bank0
  8056  09CF  1303               	bcf	3,6	;RP1=0, select bank0
  8057  09D0  0859               	movf	?___lwtofl+2,w
  8058  09D1  1683               	bsf	3,5	;RP0=1, select bank3
  8059  09D2  1703               	bsf	3,6	;RP1=1, select bank3
  8060  09D3  0096               	movwf	(_F3+2)^(0+384)
  8061  09D4  1283               	bcf	3,5	;RP0=0, select bank0
  8062  09D5  1303               	bcf	3,6	;RP1=0, select bank0
  8063  09D6  0858               	movf	?___lwtofl+1,w
  8064  09D7  1683               	bsf	3,5	;RP0=1, select bank3
  8065  09D8  1703               	bsf	3,6	;RP1=1, select bank3
  8066  09D9  0095               	movwf	(_F3+1)^(0+384)
  8067  09DA  1283               	bcf	3,5	;RP0=0, select bank0
  8068  09DB  1303               	bcf	3,6	;RP1=0, select bank0
  8069  09DC  0857               	movf	?___lwtofl,w
  8070  09DD  1683               	bsf	3,5	;RP0=1, select bank3
  8071  09DE  1703               	bsf	3,6	;RP1=1, select bank3
  8072  09DF  0094               	movwf	_F3^(0+384)
  8073                           
  8074                           ;measure.c: 210: if(F3 > F1)
  8075  09E0  083F               	movf	(_F1+3)^(0+384),w
  8076  09E1  1283               	bcf	3,5	;RP0=0, select bank0
  8077  09E2  1303               	bcf	3,6	;RP1=0, select bank0
  8078  09E3  00A4               	movwf	___flge@ff1+3
  8079  09E4  1683               	bsf	3,5	;RP0=1, select bank3
  8080  09E5  1703               	bsf	3,6	;RP1=1, select bank3
  8081  09E6  083E               	movf	(_F1+2)^(0+384),w
  8082  09E7  1283               	bcf	3,5	;RP0=0, select bank0
  8083  09E8  1303               	bcf	3,6	;RP1=0, select bank0
  8084  09E9  00A3               	movwf	___flge@ff1+2
  8085  09EA  1683               	bsf	3,5	;RP0=1, select bank3
  8086  09EB  1703               	bsf	3,6	;RP1=1, select bank3
  8087  09EC  083D               	movf	(_F1+1)^(0+384),w
  8088  09ED  1283               	bcf	3,5	;RP0=0, select bank0
  8089  09EE  1303               	bcf	3,6	;RP1=0, select bank0
  8090  09EF  00A2               	movwf	___flge@ff1+1
  8091  09F0  1683               	bsf	3,5	;RP0=1, select bank3
  8092  09F1  1703               	bsf	3,6	;RP1=1, select bank3
  8093  09F2  083C               	movf	_F1^(0+384),w
  8094  09F3  1283               	bcf	3,5	;RP0=0, select bank0
  8095  09F4  1303               	bcf	3,6	;RP1=0, select bank0
  8096  09F5  00A1               	movwf	___flge@ff1
  8097  09F6  1683               	bsf	3,5	;RP0=1, select bank3
  8098  09F7  1703               	bsf	3,6	;RP1=1, select bank3
  8099  09F8  0817               	movf	(_F3+3)^(0+384),w
  8100  09F9  1283               	bcf	3,5	;RP0=0, select bank0
  8101  09FA  1303               	bcf	3,6	;RP1=0, select bank0
  8102  09FB  00A8               	movwf	___flge@ff2+3
  8103  09FC  1683               	bsf	3,5	;RP0=1, select bank3
  8104  09FD  1703               	bsf	3,6	;RP1=1, select bank3
  8105  09FE  0816               	movf	(_F3+2)^(0+384),w
  8106  09FF  1283               	bcf	3,5	;RP0=0, select bank0
  8107  0A00  1303               	bcf	3,6	;RP1=0, select bank0
  8108  0A01  00A7               	movwf	___flge@ff2+2
  8109  0A02  1683               	bsf	3,5	;RP0=1, select bank3
  8110  0A03  1703               	bsf	3,6	;RP1=1, select bank3
  8111  0A04  0815               	movf	(_F3+1)^(0+384),w
  8112  0A05  1283               	bcf	3,5	;RP0=0, select bank0
  8113  0A06  1303               	bcf	3,6	;RP1=0, select bank0
  8114  0A07  00A6               	movwf	___flge@ff2+1
  8115  0A08  1683               	bsf	3,5	;RP0=1, select bank3
  8116  0A09  1703               	bsf	3,6	;RP1=1, select bank3
  8117  0A0A  0814               	movf	_F3^(0+384),w
  8118  0A0B  1283               	bcf	3,5	;RP0=0, select bank0
  8119  0A0C  1303               	bcf	3,6	;RP1=0, select bank0
  8120  0A0D  00A5               	movwf	___flge@ff2
  8121  0A0E  2730  120A  158A   	fcall	___flge
  8122  0A11  1803               	btfsc	3,0
  8123  0A12  2A1D               	goto	l4796
  8124                           
  8125                           ;measure.c: 211: F3 = F1;
  8126  0A13  1683               	bsf	3,5	;RP0=1, select bank3
  8127  0A14  1703               	bsf	3,6	;RP1=1, select bank3
  8128  0A15  083F               	movf	(_F1+3)^(0+384),w
  8129  0A16  0097               	movwf	(_F3+3)^(0+384)
  8130  0A17  083E               	movf	(_F1+2)^(0+384),w
  8131  0A18  0096               	movwf	(_F3+2)^(0+384)
  8132  0A19  083D               	movf	(_F1+1)^(0+384),w
  8133  0A1A  0095               	movwf	(_F3+1)^(0+384)
  8134  0A1B  083C               	movf	_F1^(0+384),w
  8135  0A1C  0094               	movwf	_F3^(0+384)
  8136  0A1D                     l4796:	
  8137                           
  8138                           ;measure.c: 212: numerator = ((F1 * F1) - (F3 * F3)) * ((F1 * F1) - (F2 - F2)) * (100 * 
      +                          100);
  8139  0A1D  1683               	bsf	3,5	;RP0=1, select bank3
  8140  0A1E  1703               	bsf	3,6	;RP1=1, select bank3
  8141  0A1F  0813               	movf	(_F2+3)^(0+384),w
  8142  0A20  1283               	bcf	3,5	;RP0=0, select bank0
  8143  0A21  1303               	bcf	3,6	;RP1=0, select bank0
  8144  0A22  00E3               	movwf	___flsub@f2+3
  8145  0A23  1683               	bsf	3,5	;RP0=1, select bank3
  8146  0A24  1703               	bsf	3,6	;RP1=1, select bank3
  8147  0A25  0812               	movf	(_F2+2)^(0+384),w
  8148  0A26  1283               	bcf	3,5	;RP0=0, select bank0
  8149  0A27  1303               	bcf	3,6	;RP1=0, select bank0
  8150  0A28  00E2               	movwf	___flsub@f2+2
  8151  0A29  1683               	bsf	3,5	;RP0=1, select bank3
  8152  0A2A  1703               	bsf	3,6	;RP1=1, select bank3
  8153  0A2B  0811               	movf	(_F2+1)^(0+384),w
  8154  0A2C  1283               	bcf	3,5	;RP0=0, select bank0
  8155  0A2D  1303               	bcf	3,6	;RP1=0, select bank0
  8156  0A2E  00E1               	movwf	___flsub@f2+1
  8157  0A2F  1683               	bsf	3,5	;RP0=1, select bank3
  8158  0A30  1703               	bsf	3,6	;RP1=1, select bank3
  8159  0A31  0810               	movf	_F2^(0+384),w
  8160  0A32  1283               	bcf	3,5	;RP0=0, select bank0
  8161  0A33  1303               	bcf	3,6	;RP1=0, select bank0
  8162  0A34  00E0               	movwf	___flsub@f2
  8163  0A35  1683               	bsf	3,5	;RP0=1, select bank3
  8164  0A36  1703               	bsf	3,6	;RP1=1, select bank3
  8165  0A37  0813               	movf	(_F2+3)^(0+384),w
  8166  0A38  1283               	bcf	3,5	;RP0=0, select bank0
  8167  0A39  1303               	bcf	3,6	;RP1=0, select bank0
  8168  0A3A  00E7               	movwf	___flsub@f1+3
  8169  0A3B  1683               	bsf	3,5	;RP0=1, select bank3
  8170  0A3C  1703               	bsf	3,6	;RP1=1, select bank3
  8171  0A3D  0812               	movf	(_F2+2)^(0+384),w
  8172  0A3E  1283               	bcf	3,5	;RP0=0, select bank0
  8173  0A3F  1303               	bcf	3,6	;RP1=0, select bank0
  8174  0A40  00E6               	movwf	___flsub@f1+2
  8175  0A41  1683               	bsf	3,5	;RP0=1, select bank3
  8176  0A42  1703               	bsf	3,6	;RP1=1, select bank3
  8177  0A43  0811               	movf	(_F2+1)^(0+384),w
  8178  0A44  1283               	bcf	3,5	;RP0=0, select bank0
  8179  0A45  1303               	bcf	3,6	;RP1=0, select bank0
  8180  0A46  00E5               	movwf	___flsub@f1+1
  8181  0A47  1683               	bsf	3,5	;RP0=1, select bank3
  8182  0A48  1703               	bsf	3,6	;RP1=1, select bank3
  8183  0A49  0810               	movf	_F2^(0+384),w
  8184  0A4A  1283               	bcf	3,5	;RP0=0, select bank0
  8185  0A4B  1303               	bcf	3,6	;RP1=0, select bank0
  8186  0A4C  00E4               	movwf	___flsub@f1
  8187  0A4D  160A  118A  271A  120A  158A  	fcall	___flsub
  8188  0A52  0863               	movf	?___flsub+3,w
  8189  0A53  1683               	bsf	3,5	;RP0=1, select bank1
  8190  0A54  00C7               	movwf	(_measure_inductance$1012+3)^(0+128)
  8191  0A55  1283               	bcf	3,5	;RP0=0, select bank0
  8192  0A56  0862               	movf	?___flsub+2,w
  8193  0A57  1683               	bsf	3,5	;RP0=1, select bank1
  8194  0A58  00C6               	movwf	(_measure_inductance$1012+2)^(0+128)
  8195  0A59  1283               	bcf	3,5	;RP0=0, select bank0
  8196  0A5A  0861               	movf	?___flsub+1,w
  8197  0A5B  1683               	bsf	3,5	;RP0=1, select bank1
  8198  0A5C  00C5               	movwf	(_measure_inductance$1012+1)^(0+128)
  8199  0A5D  1283               	bcf	3,5	;RP0=0, select bank0
  8200  0A5E  0860               	movf	?___flsub,w
  8201  0A5F  1683               	bsf	3,5	;RP0=1, select bank1
  8202  0A60  00C4               	movwf	_measure_inductance$1012^(0+128)
  8203                           
  8204                           ;measure.c: 212: numerator = ((F1 * F1) - (F3 * F3)) * ((F1 * F1) - (F2 - F2)) * (100 * 
      +                          100);
  8205  0A61  0847               	movf	(_measure_inductance$1012+3)^(0+128),w
  8206  0A62  1283               	bcf	3,5	;RP0=0, select bank0
  8207  0A63  00E3               	movwf	___flsub@f2+3
  8208  0A64  1683               	bsf	3,5	;RP0=1, select bank1
  8209  0A65  0846               	movf	(_measure_inductance$1012+2)^(0+128),w
  8210  0A66  1283               	bcf	3,5	;RP0=0, select bank0
  8211  0A67  00E2               	movwf	___flsub@f2+2
  8212  0A68  1683               	bsf	3,5	;RP0=1, select bank1
  8213  0A69  0845               	movf	(_measure_inductance$1012+1)^(0+128),w
  8214  0A6A  1283               	bcf	3,5	;RP0=0, select bank0
  8215  0A6B  00E1               	movwf	___flsub@f2+1
  8216  0A6C  1683               	bsf	3,5	;RP0=1, select bank1
  8217  0A6D  0844               	movf	_measure_inductance$1012^(0+128),w
  8218  0A6E  1283               	bcf	3,5	;RP0=0, select bank0
  8219  0A6F  00E0               	movwf	___flsub@f2
  8220  0A70  1683               	bsf	3,5	;RP0=1, select bank3
  8221  0A71  1703               	bsf	3,6	;RP1=1, select bank3
  8222  0A72  083F               	movf	(_F1+3)^(0+384),w
  8223  0A73  1283               	bcf	3,5	;RP0=0, select bank0
  8224  0A74  1303               	bcf	3,6	;RP1=0, select bank0
  8225  0A75  00C1               	movwf	___flmul@f1+3
  8226  0A76  1683               	bsf	3,5	;RP0=1, select bank3
  8227  0A77  1703               	bsf	3,6	;RP1=1, select bank3
  8228  0A78  083E               	movf	(_F1+2)^(0+384),w
  8229  0A79  1283               	bcf	3,5	;RP0=0, select bank0
  8230  0A7A  1303               	bcf	3,6	;RP1=0, select bank0
  8231  0A7B  00C0               	movwf	___flmul@f1+2
  8232  0A7C  1683               	bsf	3,5	;RP0=1, select bank3
  8233  0A7D  1703               	bsf	3,6	;RP1=1, select bank3
  8234  0A7E  083D               	movf	(_F1+1)^(0+384),w
  8235  0A7F  1283               	bcf	3,5	;RP0=0, select bank0
  8236  0A80  1303               	bcf	3,6	;RP1=0, select bank0
  8237  0A81  00BF               	movwf	___flmul@f1+1
  8238  0A82  1683               	bsf	3,5	;RP0=1, select bank3
  8239  0A83  1703               	bsf	3,6	;RP1=1, select bank3
  8240  0A84  083C               	movf	_F1^(0+384),w
  8241  0A85  1283               	bcf	3,5	;RP0=0, select bank0
  8242  0A86  1303               	bcf	3,6	;RP1=0, select bank0
  8243  0A87  00BE               	movwf	___flmul@f1
  8244  0A88  1683               	bsf	3,5	;RP0=1, select bank3
  8245  0A89  1703               	bsf	3,6	;RP1=1, select bank3
  8246  0A8A  083F               	movf	(_F1+3)^(0+384),w
  8247  0A8B  1283               	bcf	3,5	;RP0=0, select bank0
  8248  0A8C  1303               	bcf	3,6	;RP1=0, select bank0
  8249  0A8D  00C5               	movwf	___flmul@f2+3
  8250  0A8E  1683               	bsf	3,5	;RP0=1, select bank3
  8251  0A8F  1703               	bsf	3,6	;RP1=1, select bank3
  8252  0A90  083E               	movf	(_F1+2)^(0+384),w
  8253  0A91  1283               	bcf	3,5	;RP0=0, select bank0
  8254  0A92  1303               	bcf	3,6	;RP1=0, select bank0
  8255  0A93  00C4               	movwf	___flmul@f2+2
  8256  0A94  1683               	bsf	3,5	;RP0=1, select bank3
  8257  0A95  1703               	bsf	3,6	;RP1=1, select bank3
  8258  0A96  083D               	movf	(_F1+1)^(0+384),w
  8259  0A97  1283               	bcf	3,5	;RP0=0, select bank0
  8260  0A98  1303               	bcf	3,6	;RP1=0, select bank0
  8261  0A99  00C3               	movwf	___flmul@f2+1
  8262  0A9A  1683               	bsf	3,5	;RP0=1, select bank3
  8263  0A9B  1703               	bsf	3,6	;RP1=1, select bank3
  8264  0A9C  083C               	movf	_F1^(0+384),w
  8265  0A9D  1283               	bcf	3,5	;RP0=0, select bank0
  8266  0A9E  1303               	bcf	3,6	;RP1=0, select bank0
  8267  0A9F  00C2               	movwf	___flmul@f2
  8268  0AA0  2698               	fcall	___flmul
  8269  0AA1  0841               	movf	?___flmul+3,w
  8270  0AA2  00E7               	movwf	___flsub@f1+3
  8271  0AA3  0840               	movf	?___flmul+2,w
  8272  0AA4  00E6               	movwf	___flsub@f1+2
  8273  0AA5  083F               	movf	?___flmul+1,w
  8274  0AA6  00E5               	movwf	___flsub@f1+1
  8275  0AA7  083E               	movf	?___flmul,w
  8276  0AA8  00E4               	movwf	___flsub@f1
  8277  0AA9  160A  118A  271A  120A  158A  	fcall	___flsub
  8278  0AAE  0863               	movf	?___flsub+3,w
  8279  0AAF  1683               	bsf	3,5	;RP0=1, select bank1
  8280  0AB0  00D8               	movwf	(_measure_inductance$1013+3)^(0+128)
  8281  0AB1  1283               	bcf	3,5	;RP0=0, select bank0
  8282  0AB2  0862               	movf	?___flsub+2,w
  8283  0AB3  1683               	bsf	3,5	;RP0=1, select bank1
  8284  0AB4  00D7               	movwf	(_measure_inductance$1013+2)^(0+128)
  8285  0AB5  1283               	bcf	3,5	;RP0=0, select bank0
  8286  0AB6  0861               	movf	?___flsub+1,w
  8287  0AB7  1683               	bsf	3,5	;RP0=1, select bank1
  8288  0AB8  00D6               	movwf	(_measure_inductance$1013+1)^(0+128)
  8289  0AB9  1283               	bcf	3,5	;RP0=0, select bank0
  8290  0ABA  0860               	movf	?___flsub,w
  8291  0ABB  1683               	bsf	3,5	;RP0=1, select bank1
  8292  0ABC  00D5               	movwf	_measure_inductance$1013^(0+128)
  8293                           
  8294                           ;measure.c: 212: numerator = ((F1 * F1) - (F3 * F3)) * ((F1 * F1) - (F2 - F2)) * (100 * 
      +                          100);
  8295  0ABD  1703               	bsf	3,6	;RP1=1, select bank3
  8296  0ABE  0817               	movf	(_F3+3)^(0+384),w
  8297  0ABF  1283               	bcf	3,5	;RP0=0, select bank0
  8298  0AC0  1303               	bcf	3,6	;RP1=0, select bank0
  8299  0AC1  00C1               	movwf	___flmul@f1+3
  8300  0AC2  1683               	bsf	3,5	;RP0=1, select bank3
  8301  0AC3  1703               	bsf	3,6	;RP1=1, select bank3
  8302  0AC4  0816               	movf	(_F3+2)^(0+384),w
  8303  0AC5  1283               	bcf	3,5	;RP0=0, select bank0
  8304  0AC6  1303               	bcf	3,6	;RP1=0, select bank0
  8305  0AC7  00C0               	movwf	___flmul@f1+2
  8306  0AC8  1683               	bsf	3,5	;RP0=1, select bank3
  8307  0AC9  1703               	bsf	3,6	;RP1=1, select bank3
  8308  0ACA  0815               	movf	(_F3+1)^(0+384),w
  8309  0ACB  1283               	bcf	3,5	;RP0=0, select bank0
  8310  0ACC  1303               	bcf	3,6	;RP1=0, select bank0
  8311  0ACD  00BF               	movwf	___flmul@f1+1
  8312  0ACE  1683               	bsf	3,5	;RP0=1, select bank3
  8313  0ACF  1703               	bsf	3,6	;RP1=1, select bank3
  8314  0AD0  0814               	movf	_F3^(0+384),w
  8315  0AD1  1283               	bcf	3,5	;RP0=0, select bank0
  8316  0AD2  1303               	bcf	3,6	;RP1=0, select bank0
  8317  0AD3  00BE               	movwf	___flmul@f1
  8318  0AD4  1683               	bsf	3,5	;RP0=1, select bank3
  8319  0AD5  1703               	bsf	3,6	;RP1=1, select bank3
  8320  0AD6  0817               	movf	(_F3+3)^(0+384),w
  8321  0AD7  1283               	bcf	3,5	;RP0=0, select bank0
  8322  0AD8  1303               	bcf	3,6	;RP1=0, select bank0
  8323  0AD9  00C5               	movwf	___flmul@f2+3
  8324  0ADA  1683               	bsf	3,5	;RP0=1, select bank3
  8325  0ADB  1703               	bsf	3,6	;RP1=1, select bank3
  8326  0ADC  0816               	movf	(_F3+2)^(0+384),w
  8327  0ADD  1283               	bcf	3,5	;RP0=0, select bank0
  8328  0ADE  1303               	bcf	3,6	;RP1=0, select bank0
  8329  0ADF  00C4               	movwf	___flmul@f2+2
  8330  0AE0  1683               	bsf	3,5	;RP0=1, select bank3
  8331  0AE1  1703               	bsf	3,6	;RP1=1, select bank3
  8332  0AE2  0815               	movf	(_F3+1)^(0+384),w
  8333  0AE3  1283               	bcf	3,5	;RP0=0, select bank0
  8334  0AE4  1303               	bcf	3,6	;RP1=0, select bank0
  8335  0AE5  00C3               	movwf	___flmul@f2+1
  8336  0AE6  1683               	bsf	3,5	;RP0=1, select bank3
  8337  0AE7  1703               	bsf	3,6	;RP1=1, select bank3
  8338  0AE8  0814               	movf	_F3^(0+384),w
  8339  0AE9  1283               	bcf	3,5	;RP0=0, select bank0
  8340  0AEA  1303               	bcf	3,6	;RP1=0, select bank0
  8341  0AEB  00C2               	movwf	___flmul@f2
  8342  0AEC  2698  120A  158A   	fcall	___flmul
  8343  0AEF  0841               	movf	?___flmul+3,w
  8344  0AF0  00E3               	movwf	___flsub@f2+3
  8345  0AF1  0840               	movf	?___flmul+2,w
  8346  0AF2  00E2               	movwf	___flsub@f2+2
  8347  0AF3  083F               	movf	?___flmul+1,w
  8348  0AF4  00E1               	movwf	___flsub@f2+1
  8349  0AF5  083E               	movf	?___flmul,w
  8350  0AF6  00E0               	movwf	___flsub@f2
  8351  0AF7  1683               	bsf	3,5	;RP0=1, select bank3
  8352  0AF8  1703               	bsf	3,6	;RP1=1, select bank3
  8353  0AF9  083F               	movf	(_F1+3)^(0+384),w
  8354  0AFA  1283               	bcf	3,5	;RP0=0, select bank0
  8355  0AFB  1303               	bcf	3,6	;RP1=0, select bank0
  8356  0AFC  00C1               	movwf	___flmul@f1+3
  8357  0AFD  1683               	bsf	3,5	;RP0=1, select bank3
  8358  0AFE  1703               	bsf	3,6	;RP1=1, select bank3
  8359  0AFF  083E               	movf	(_F1+2)^(0+384),w
  8360  0B00  1283               	bcf	3,5	;RP0=0, select bank0
  8361  0B01  1303               	bcf	3,6	;RP1=0, select bank0
  8362  0B02  00C0               	movwf	___flmul@f1+2
  8363  0B03  1683               	bsf	3,5	;RP0=1, select bank3
  8364  0B04  1703               	bsf	3,6	;RP1=1, select bank3
  8365  0B05  083D               	movf	(_F1+1)^(0+384),w
  8366  0B06  1283               	bcf	3,5	;RP0=0, select bank0
  8367  0B07  1303               	bcf	3,6	;RP1=0, select bank0
  8368  0B08  00BF               	movwf	___flmul@f1+1
  8369  0B09  1683               	bsf	3,5	;RP0=1, select bank3
  8370  0B0A  1703               	bsf	3,6	;RP1=1, select bank3
  8371  0B0B  083C               	movf	_F1^(0+384),w
  8372  0B0C  1283               	bcf	3,5	;RP0=0, select bank0
  8373  0B0D  1303               	bcf	3,6	;RP1=0, select bank0
  8374  0B0E  00BE               	movwf	___flmul@f1
  8375  0B0F  1683               	bsf	3,5	;RP0=1, select bank3
  8376  0B10  1703               	bsf	3,6	;RP1=1, select bank3
  8377  0B11  083F               	movf	(_F1+3)^(0+384),w
  8378  0B12  1283               	bcf	3,5	;RP0=0, select bank0
  8379  0B13  1303               	bcf	3,6	;RP1=0, select bank0
  8380  0B14  00C5               	movwf	___flmul@f2+3
  8381  0B15  1683               	bsf	3,5	;RP0=1, select bank3
  8382  0B16  1703               	bsf	3,6	;RP1=1, select bank3
  8383  0B17  083E               	movf	(_F1+2)^(0+384),w
  8384  0B18  1283               	bcf	3,5	;RP0=0, select bank0
  8385  0B19  1303               	bcf	3,6	;RP1=0, select bank0
  8386  0B1A  00C4               	movwf	___flmul@f2+2
  8387  0B1B  1683               	bsf	3,5	;RP0=1, select bank3
  8388  0B1C  1703               	bsf	3,6	;RP1=1, select bank3
  8389  0B1D  083D               	movf	(_F1+1)^(0+384),w
  8390  0B1E  1283               	bcf	3,5	;RP0=0, select bank0
  8391  0B1F  1303               	bcf	3,6	;RP1=0, select bank0
  8392  0B20  00C3               	movwf	___flmul@f2+1
  8393  0B21  1683               	bsf	3,5	;RP0=1, select bank3
  8394  0B22  1703               	bsf	3,6	;RP1=1, select bank3
  8395  0B23  083C               	movf	_F1^(0+384),w
  8396  0B24  1283               	bcf	3,5	;RP0=0, select bank0
  8397  0B25  1303               	bcf	3,6	;RP1=0, select bank0
  8398  0B26  00C2               	movwf	___flmul@f2
  8399  0B27  2698               	fcall	___flmul
  8400  0B28  0841               	movf	?___flmul+3,w
  8401  0B29  00E7               	movwf	___flsub@f1+3
  8402  0B2A  0840               	movf	?___flmul+2,w
  8403  0B2B  00E6               	movwf	___flsub@f1+2
  8404  0B2C  083F               	movf	?___flmul+1,w
  8405  0B2D  00E5               	movwf	___flsub@f1+1
  8406  0B2E  083E               	movf	?___flmul,w
  8407  0B2F  00E4               	movwf	___flsub@f1
  8408  0B30  160A  118A  271A  120A  158A  	fcall	___flsub
  8409  0B35  0863               	movf	?___flsub+3,w
  8410  0B36  1683               	bsf	3,5	;RP0=1, select bank1
  8411  0B37  00DC               	movwf	(_measure_inductance$1014+3)^(0+128)
  8412  0B38  1283               	bcf	3,5	;RP0=0, select bank0
  8413  0B39  0862               	movf	?___flsub+2,w
  8414  0B3A  1683               	bsf	3,5	;RP0=1, select bank1
  8415  0B3B  00DB               	movwf	(_measure_inductance$1014+2)^(0+128)
  8416  0B3C  1283               	bcf	3,5	;RP0=0, select bank0
  8417  0B3D  0861               	movf	?___flsub+1,w
  8418  0B3E  1683               	bsf	3,5	;RP0=1, select bank1
  8419  0B3F  00DA               	movwf	(_measure_inductance$1014+1)^(0+128)
  8420  0B40  1283               	bcf	3,5	;RP0=0, select bank0
  8421  0B41  0860               	movf	?___flsub,w
  8422  0B42  1683               	bsf	3,5	;RP0=1, select bank1
  8423  0B43  00D9               	movwf	_measure_inductance$1014^(0+128)
  8424                           
  8425                           ;measure.c: 212: numerator = ((F1 * F1) - (F3 * F3)) * ((F1 * F1) - (F2 - F2)) * (100 * 
      +                          100);
  8426  0B44  0858               	movf	(_measure_inductance$1013+3)^(0+128),w
  8427  0B45  1283               	bcf	3,5	;RP0=0, select bank0
  8428  0B46  00C1               	movwf	___flmul@f1+3
  8429  0B47  1683               	bsf	3,5	;RP0=1, select bank1
  8430  0B48  0857               	movf	(_measure_inductance$1013+2)^(0+128),w
  8431  0B49  1283               	bcf	3,5	;RP0=0, select bank0
  8432  0B4A  00C0               	movwf	___flmul@f1+2
  8433  0B4B  1683               	bsf	3,5	;RP0=1, select bank1
  8434  0B4C  0856               	movf	(_measure_inductance$1013+1)^(0+128),w
  8435  0B4D  1283               	bcf	3,5	;RP0=0, select bank0
  8436  0B4E  00BF               	movwf	___flmul@f1+1
  8437  0B4F  1683               	bsf	3,5	;RP0=1, select bank1
  8438  0B50  0855               	movf	_measure_inductance$1013^(0+128),w
  8439  0B51  1283               	bcf	3,5	;RP0=0, select bank0
  8440  0B52  00BE               	movwf	___flmul@f1
  8441  0B53  1683               	bsf	3,5	;RP0=1, select bank1
  8442  0B54  085C               	movf	(_measure_inductance$1014+3)^(0+128),w
  8443  0B55  1283               	bcf	3,5	;RP0=0, select bank0
  8444  0B56  00C5               	movwf	___flmul@f2+3
  8445  0B57  1683               	bsf	3,5	;RP0=1, select bank1
  8446  0B58  085B               	movf	(_measure_inductance$1014+2)^(0+128),w
  8447  0B59  1283               	bcf	3,5	;RP0=0, select bank0
  8448  0B5A  00C4               	movwf	___flmul@f2+2
  8449  0B5B  1683               	bsf	3,5	;RP0=1, select bank1
  8450  0B5C  085A               	movf	(_measure_inductance$1014+1)^(0+128),w
  8451  0B5D  1283               	bcf	3,5	;RP0=0, select bank0
  8452  0B5E  00C3               	movwf	___flmul@f2+1
  8453  0B5F  1683               	bsf	3,5	;RP0=1, select bank1
  8454  0B60  0859               	movf	_measure_inductance$1014^(0+128),w
  8455  0B61  1283               	bcf	3,5	;RP0=0, select bank0
  8456  0B62  00C2               	movwf	___flmul@f2
  8457  0B63  2698  120A  158A   	fcall	___flmul
  8458  0B66  0841               	movf	?___flmul+3,w
  8459  0B67  1683               	bsf	3,5	;RP0=1, select bank1
  8460  0B68  00E0               	movwf	(_measure_inductance$1015+3)^(0+128)
  8461  0B69  1283               	bcf	3,5	;RP0=0, select bank0
  8462  0B6A  0840               	movf	?___flmul+2,w
  8463  0B6B  1683               	bsf	3,5	;RP0=1, select bank1
  8464  0B6C  00DF               	movwf	(_measure_inductance$1015+2)^(0+128)
  8465  0B6D  1283               	bcf	3,5	;RP0=0, select bank0
  8466  0B6E  083F               	movf	?___flmul+1,w
  8467  0B6F  1683               	bsf	3,5	;RP0=1, select bank1
  8468  0B70  00DE               	movwf	(_measure_inductance$1015+1)^(0+128)
  8469  0B71  1283               	bcf	3,5	;RP0=0, select bank0
  8470  0B72  083E               	movf	?___flmul,w
  8471  0B73  1683               	bsf	3,5	;RP0=1, select bank1
  8472  0B74  00DD               	movwf	_measure_inductance$1015^(0+128)
  8473                           
  8474                           ;measure.c: 212: numerator = ((F1 * F1) - (F3 * F3)) * ((F1 * F1) - (F2 - F2)) * (100 * 
      +                          100);
  8475  0B75  3046               	movlw	70
  8476  0B76  1283               	bcf	3,5	;RP0=0, select bank0
  8477  0B77  00C1               	movwf	___flmul@f1+3
  8478  0B78  301C               	movlw	28
  8479  0B79  00C0               	movwf	___flmul@f1+2
  8480  0B7A  3040               	movlw	64
  8481  0B7B  00BF               	movwf	___flmul@f1+1
  8482  0B7C  01BE               	clrf	___flmul@f1
  8483  0B7D  1683               	bsf	3,5	;RP0=1, select bank1
  8484  0B7E  0860               	movf	(_measure_inductance$1015+3)^(0+128),w
  8485  0B7F  1283               	bcf	3,5	;RP0=0, select bank0
  8486  0B80  00C5               	movwf	___flmul@f2+3
  8487  0B81  1683               	bsf	3,5	;RP0=1, select bank1
  8488  0B82  085F               	movf	(_measure_inductance$1015+2)^(0+128),w
  8489  0B83  1283               	bcf	3,5	;RP0=0, select bank0
  8490  0B84  00C4               	movwf	___flmul@f2+2
  8491  0B85  1683               	bsf	3,5	;RP0=1, select bank1
  8492  0B86  085E               	movf	(_measure_inductance$1015+1)^(0+128),w
  8493  0B87  1283               	bcf	3,5	;RP0=0, select bank0
  8494  0B88  00C3               	movwf	___flmul@f2+1
  8495  0B89  1683               	bsf	3,5	;RP0=1, select bank1
  8496  0B8A  085D               	movf	_measure_inductance$1015^(0+128),w
  8497  0B8B  1283               	bcf	3,5	;RP0=0, select bank0
  8498  0B8C  00C2               	movwf	___flmul@f2
  8499  0B8D  2698  120A  158A   	fcall	___flmul
  8500  0B90  0841               	movf	?___flmul+3,w
  8501  0B91  1683               	bsf	3,5	;RP0=1, select bank1
  8502  0B92  00BF               	movwf	(measure_inductance@numerator+3)^(0+128)
  8503  0B93  1283               	bcf	3,5	;RP0=0, select bank0
  8504  0B94  0840               	movf	?___flmul+2,w
  8505  0B95  1683               	bsf	3,5	;RP0=1, select bank1
  8506  0B96  00BE               	movwf	(measure_inductance@numerator+2)^(0+128)
  8507  0B97  1283               	bcf	3,5	;RP0=0, select bank0
  8508  0B98  083F               	movf	?___flmul+1,w
  8509  0B99  1683               	bsf	3,5	;RP0=1, select bank1
  8510  0B9A  00BD               	movwf	(measure_inductance@numerator+1)^(0+128)
  8511  0B9B  1283               	bcf	3,5	;RP0=0, select bank0
  8512  0B9C  083E               	movf	?___flmul,w
  8513  0B9D  1683               	bsf	3,5	;RP0=1, select bank1
  8514  0B9E  00BC               	movwf	measure_inductance@numerator^(0+128)
  8515                           
  8516                           ;measure.c: 213: denominator = 4 * 3.14159265358979323846l * 3.14159265358979323846l * F
      +                          1 * F1 * F2 * F2 * F3 * F3 * CCal;
  8517  0B9F  1703               	bsf	3,6	;RP1=1, select bank3
  8518  0BA0  083F               	movf	(_F1+3)^(0+384),w
  8519  0BA1  1283               	bcf	3,5	;RP0=0, select bank0
  8520  0BA2  1303               	bcf	3,6	;RP1=0, select bank0
  8521  0BA3  00C1               	movwf	___flmul@f1+3
  8522  0BA4  1683               	bsf	3,5	;RP0=1, select bank3
  8523  0BA5  1703               	bsf	3,6	;RP1=1, select bank3
  8524  0BA6  083E               	movf	(_F1+2)^(0+384),w
  8525  0BA7  1283               	bcf	3,5	;RP0=0, select bank0
  8526  0BA8  1303               	bcf	3,6	;RP1=0, select bank0
  8527  0BA9  00C0               	movwf	___flmul@f1+2
  8528  0BAA  1683               	bsf	3,5	;RP0=1, select bank3
  8529  0BAB  1703               	bsf	3,6	;RP1=1, select bank3
  8530  0BAC  083D               	movf	(_F1+1)^(0+384),w
  8531  0BAD  1283               	bcf	3,5	;RP0=0, select bank0
  8532  0BAE  1303               	bcf	3,6	;RP1=0, select bank0
  8533  0BAF  00BF               	movwf	___flmul@f1+1
  8534  0BB0  1683               	bsf	3,5	;RP0=1, select bank3
  8535  0BB1  1703               	bsf	3,6	;RP1=1, select bank3
  8536  0BB2  083C               	movf	_F1^(0+384),w
  8537  0BB3  1283               	bcf	3,5	;RP0=0, select bank0
  8538  0BB4  1303               	bcf	3,6	;RP1=0, select bank0
  8539  0BB5  00BE               	movwf	___flmul@f1
  8540  0BB6  1683               	bsf	3,5	;RP0=1, select bank3
  8541  0BB7  1703               	bsf	3,6	;RP1=1, select bank3
  8542  0BB8  083F               	movf	(_F1+3)^(0+384),w
  8543  0BB9  1283               	bcf	3,5	;RP0=0, select bank0
  8544  0BBA  1303               	bcf	3,6	;RP1=0, select bank0
  8545  0BBB  00C5               	movwf	___flmul@f2+3
  8546  0BBC  1683               	bsf	3,5	;RP0=1, select bank3
  8547  0BBD  1703               	bsf	3,6	;RP1=1, select bank3
  8548  0BBE  083E               	movf	(_F1+2)^(0+384),w
  8549  0BBF  1283               	bcf	3,5	;RP0=0, select bank0
  8550  0BC0  1303               	bcf	3,6	;RP1=0, select bank0
  8551  0BC1  00C4               	movwf	___flmul@f2+2
  8552  0BC2  1683               	bsf	3,5	;RP0=1, select bank3
  8553  0BC3  1703               	bsf	3,6	;RP1=1, select bank3
  8554  0BC4  083D               	movf	(_F1+1)^(0+384),w
  8555  0BC5  1283               	bcf	3,5	;RP0=0, select bank0
  8556  0BC6  1303               	bcf	3,6	;RP1=0, select bank0
  8557  0BC7  00C3               	movwf	___flmul@f2+1
  8558  0BC8  1683               	bsf	3,5	;RP0=1, select bank3
  8559  0BC9  1703               	bsf	3,6	;RP1=1, select bank3
  8560  0BCA  083C               	movf	_F1^(0+384),w
  8561  0BCB  1283               	bcf	3,5	;RP0=0, select bank0
  8562  0BCC  1303               	bcf	3,6	;RP1=0, select bank0
  8563  0BCD  00C2               	movwf	___flmul@f2
  8564  0BCE  2698  120A  158A   	fcall	___flmul
  8565  0BD1  0841               	movf	?___flmul+3,w
  8566  0BD2  1683               	bsf	3,5	;RP0=1, select bank1
  8567  0BD3  00CB               	movwf	(_measure_inductance$1016+3)^(0+128)
  8568  0BD4  1283               	bcf	3,5	;RP0=0, select bank0
  8569  0BD5  0840               	movf	?___flmul+2,w
  8570  0BD6  1683               	bsf	3,5	;RP0=1, select bank1
  8571  0BD7  00CA               	movwf	(_measure_inductance$1016+2)^(0+128)
  8572  0BD8  1283               	bcf	3,5	;RP0=0, select bank0
  8573  0BD9  083F               	movf	?___flmul+1,w
  8574  0BDA  1683               	bsf	3,5	;RP0=1, select bank1
  8575  0BDB  00C9               	movwf	(_measure_inductance$1016+1)^(0+128)
  8576  0BDC  1283               	bcf	3,5	;RP0=0, select bank0
  8577  0BDD  083E               	movf	?___flmul,w
  8578  0BDE  1683               	bsf	3,5	;RP0=1, select bank1
  8579  0BDF  00C8               	movwf	_measure_inductance$1016^(0+128)
  8580                           
  8581                           ;measure.c: 213: denominator = 4 * 3.14159265358979323846l * 3.14159265358979323846l * F
      +                          1 * F1 * F2 * F2 * F3 * F3 * CCal;
  8582  0BE0  1703               	bsf	3,6	;RP1=1, select bank3
  8583  0BE1  0813               	movf	(_F2+3)^(0+384),w
  8584  0BE2  1283               	bcf	3,5	;RP0=0, select bank0
  8585  0BE3  1303               	bcf	3,6	;RP1=0, select bank0
  8586  0BE4  00C1               	movwf	___flmul@f1+3
  8587  0BE5  1683               	bsf	3,5	;RP0=1, select bank3
  8588  0BE6  1703               	bsf	3,6	;RP1=1, select bank3
  8589  0BE7  0812               	movf	(_F2+2)^(0+384),w
  8590  0BE8  1283               	bcf	3,5	;RP0=0, select bank0
  8591  0BE9  1303               	bcf	3,6	;RP1=0, select bank0
  8592  0BEA  00C0               	movwf	___flmul@f1+2
  8593  0BEB  1683               	bsf	3,5	;RP0=1, select bank3
  8594  0BEC  1703               	bsf	3,6	;RP1=1, select bank3
  8595  0BED  0811               	movf	(_F2+1)^(0+384),w
  8596  0BEE  1283               	bcf	3,5	;RP0=0, select bank0
  8597  0BEF  1303               	bcf	3,6	;RP1=0, select bank0
  8598  0BF0  00BF               	movwf	___flmul@f1+1
  8599  0BF1  1683               	bsf	3,5	;RP0=1, select bank3
  8600  0BF2  1703               	bsf	3,6	;RP1=1, select bank3
  8601  0BF3  0810               	movf	_F2^(0+384),w
  8602  0BF4  1283               	bcf	3,5	;RP0=0, select bank0
  8603  0BF5  1303               	bcf	3,6	;RP1=0, select bank0
  8604  0BF6  00BE               	movwf	___flmul@f1
  8605  0BF7  1683               	bsf	3,5	;RP0=1, select bank1
  8606  0BF8  084B               	movf	(_measure_inductance$1016+3)^(0+128),w
  8607  0BF9  1283               	bcf	3,5	;RP0=0, select bank0
  8608  0BFA  00C5               	movwf	___flmul@f2+3
  8609  0BFB  1683               	bsf	3,5	;RP0=1, select bank1
  8610  0BFC  084A               	movf	(_measure_inductance$1016+2)^(0+128),w
  8611  0BFD  1283               	bcf	3,5	;RP0=0, select bank0
  8612  0BFE  00C4               	movwf	___flmul@f2+2
  8613  0BFF  1683               	bsf	3,5	;RP0=1, select bank1
  8614  0C00  0849               	movf	(_measure_inductance$1016+1)^(0+128),w
  8615  0C01  1283               	bcf	3,5	;RP0=0, select bank0
  8616  0C02  00C3               	movwf	___flmul@f2+1
  8617  0C03  1683               	bsf	3,5	;RP0=1, select bank1
  8618  0C04  0848               	movf	_measure_inductance$1016^(0+128),w
  8619  0C05  1283               	bcf	3,5	;RP0=0, select bank0
  8620  0C06  00C2               	movwf	___flmul@f2
  8621  0C07  2698  120A  158A   	fcall	___flmul
  8622  0C0A  0841               	movf	?___flmul+3,w
  8623  0C0B  1683               	bsf	3,5	;RP0=1, select bank1
  8624  0C0C  00D8               	movwf	(_measure_inductance$1013+3)^(0+128)
  8625  0C0D  1283               	bcf	3,5	;RP0=0, select bank0
  8626  0C0E  0840               	movf	?___flmul+2,w
  8627  0C0F  1683               	bsf	3,5	;RP0=1, select bank1
  8628  0C10  00D7               	movwf	(_measure_inductance$1013+2)^(0+128)
  8629  0C11  1283               	bcf	3,5	;RP0=0, select bank0
  8630  0C12  083F               	movf	?___flmul+1,w
  8631  0C13  1683               	bsf	3,5	;RP0=1, select bank1
  8632  0C14  00D6               	movwf	(_measure_inductance$1013+1)^(0+128)
  8633  0C15  1283               	bcf	3,5	;RP0=0, select bank0
  8634  0C16  083E               	movf	?___flmul,w
  8635  0C17  1683               	bsf	3,5	;RP0=1, select bank1
  8636  0C18  00D5               	movwf	_measure_inductance$1013^(0+128)
  8637                           
  8638                           ;measure.c: 213: denominator = 4 * 3.14159265358979323846l * 3.14159265358979323846l * F
      +                          1 * F1 * F2 * F2 * F3 * F3 * CCal;
  8639  0C19  1703               	bsf	3,6	;RP1=1, select bank3
  8640  0C1A  0813               	movf	(_F2+3)^(0+384),w
  8641  0C1B  1283               	bcf	3,5	;RP0=0, select bank0
  8642  0C1C  1303               	bcf	3,6	;RP1=0, select bank0
  8643  0C1D  00C1               	movwf	___flmul@f1+3
  8644  0C1E  1683               	bsf	3,5	;RP0=1, select bank3
  8645  0C1F  1703               	bsf	3,6	;RP1=1, select bank3
  8646  0C20  0812               	movf	(_F2+2)^(0+384),w
  8647  0C21  1283               	bcf	3,5	;RP0=0, select bank0
  8648  0C22  1303               	bcf	3,6	;RP1=0, select bank0
  8649  0C23  00C0               	movwf	___flmul@f1+2
  8650  0C24  1683               	bsf	3,5	;RP0=1, select bank3
  8651  0C25  1703               	bsf	3,6	;RP1=1, select bank3
  8652  0C26  0811               	movf	(_F2+1)^(0+384),w
  8653  0C27  1283               	bcf	3,5	;RP0=0, select bank0
  8654  0C28  1303               	bcf	3,6	;RP1=0, select bank0
  8655  0C29  00BF               	movwf	___flmul@f1+1
  8656  0C2A  1683               	bsf	3,5	;RP0=1, select bank3
  8657  0C2B  1703               	bsf	3,6	;RP1=1, select bank3
  8658  0C2C  0810               	movf	_F2^(0+384),w
  8659  0C2D  1283               	bcf	3,5	;RP0=0, select bank0
  8660  0C2E  1303               	bcf	3,6	;RP1=0, select bank0
  8661  0C2F  00BE               	movwf	___flmul@f1
  8662  0C30  1683               	bsf	3,5	;RP0=1, select bank1
  8663  0C31  0858               	movf	(_measure_inductance$1013+3)^(0+128),w
  8664  0C32  1283               	bcf	3,5	;RP0=0, select bank0
  8665  0C33  00C5               	movwf	___flmul@f2+3
  8666  0C34  1683               	bsf	3,5	;RP0=1, select bank1
  8667  0C35  0857               	movf	(_measure_inductance$1013+2)^(0+128),w
  8668  0C36  1283               	bcf	3,5	;RP0=0, select bank0
  8669  0C37  00C4               	movwf	___flmul@f2+2
  8670  0C38  1683               	bsf	3,5	;RP0=1, select bank1
  8671  0C39  0856               	movf	(_measure_inductance$1013+1)^(0+128),w
  8672  0C3A  1283               	bcf	3,5	;RP0=0, select bank0
  8673  0C3B  00C3               	movwf	___flmul@f2+1
  8674  0C3C  1683               	bsf	3,5	;RP0=1, select bank1
  8675  0C3D  0855               	movf	_measure_inductance$1013^(0+128),w
  8676  0C3E  1283               	bcf	3,5	;RP0=0, select bank0
  8677  0C3F  00C2               	movwf	___flmul@f2
  8678  0C40  2698  120A  158A   	fcall	___flmul
  8679  0C43  0841               	movf	?___flmul+3,w
  8680  0C44  1683               	bsf	3,5	;RP0=1, select bank1
  8681  0C45  00DC               	movwf	(_measure_inductance$1014+3)^(0+128)
  8682  0C46  1283               	bcf	3,5	;RP0=0, select bank0
  8683  0C47  0840               	movf	?___flmul+2,w
  8684  0C48  1683               	bsf	3,5	;RP0=1, select bank1
  8685  0C49  00DB               	movwf	(_measure_inductance$1014+2)^(0+128)
  8686  0C4A  1283               	bcf	3,5	;RP0=0, select bank0
  8687  0C4B  083F               	movf	?___flmul+1,w
  8688  0C4C  1683               	bsf	3,5	;RP0=1, select bank1
  8689  0C4D  00DA               	movwf	(_measure_inductance$1014+1)^(0+128)
  8690  0C4E  1283               	bcf	3,5	;RP0=0, select bank0
  8691  0C4F  083E               	movf	?___flmul,w
  8692  0C50  1683               	bsf	3,5	;RP0=1, select bank1
  8693  0C51  00D9               	movwf	_measure_inductance$1014^(0+128)
  8694                           
  8695                           ;measure.c: 213: denominator = 4 * 3.14159265358979323846l * 3.14159265358979323846l * F
      +                          1 * F1 * F2 * F2 * F3 * F3 * CCal;
  8696  0C52  1703               	bsf	3,6	;RP1=1, select bank3
  8697  0C53  0817               	movf	(_F3+3)^(0+384),w
  8698  0C54  1283               	bcf	3,5	;RP0=0, select bank0
  8699  0C55  1303               	bcf	3,6	;RP1=0, select bank0
  8700  0C56  00C1               	movwf	___flmul@f1+3
  8701  0C57  1683               	bsf	3,5	;RP0=1, select bank3
  8702  0C58  1703               	bsf	3,6	;RP1=1, select bank3
  8703  0C59  0816               	movf	(_F3+2)^(0+384),w
  8704  0C5A  1283               	bcf	3,5	;RP0=0, select bank0
  8705  0C5B  1303               	bcf	3,6	;RP1=0, select bank0
  8706  0C5C  00C0               	movwf	___flmul@f1+2
  8707  0C5D  1683               	bsf	3,5	;RP0=1, select bank3
  8708  0C5E  1703               	bsf	3,6	;RP1=1, select bank3
  8709  0C5F  0815               	movf	(_F3+1)^(0+384),w
  8710  0C60  1283               	bcf	3,5	;RP0=0, select bank0
  8711  0C61  1303               	bcf	3,6	;RP1=0, select bank0
  8712  0C62  00BF               	movwf	___flmul@f1+1
  8713  0C63  1683               	bsf	3,5	;RP0=1, select bank3
  8714  0C64  1703               	bsf	3,6	;RP1=1, select bank3
  8715  0C65  0814               	movf	_F3^(0+384),w
  8716  0C66  1283               	bcf	3,5	;RP0=0, select bank0
  8717  0C67  1303               	bcf	3,6	;RP1=0, select bank0
  8718  0C68  00BE               	movwf	___flmul@f1
  8719  0C69  1683               	bsf	3,5	;RP0=1, select bank1
  8720  0C6A  085C               	movf	(_measure_inductance$1014+3)^(0+128),w
  8721  0C6B  1283               	bcf	3,5	;RP0=0, select bank0
  8722  0C6C  00C5               	movwf	___flmul@f2+3
  8723  0C6D  1683               	bsf	3,5	;RP0=1, select bank1
  8724  0C6E  085B               	movf	(_measure_inductance$1014+2)^(0+128),w
  8725  0C6F  1283               	bcf	3,5	;RP0=0, select bank0
  8726  0C70  00C4               	movwf	___flmul@f2+2
  8727  0C71  1683               	bsf	3,5	;RP0=1, select bank1
  8728  0C72  085A               	movf	(_measure_inductance$1014+1)^(0+128),w
  8729  0C73  1283               	bcf	3,5	;RP0=0, select bank0
  8730  0C74  00C3               	movwf	___flmul@f2+1
  8731  0C75  1683               	bsf	3,5	;RP0=1, select bank1
  8732  0C76  0859               	movf	_measure_inductance$1014^(0+128),w
  8733  0C77  1283               	bcf	3,5	;RP0=0, select bank0
  8734  0C78  00C2               	movwf	___flmul@f2
  8735  0C79  2698  120A  158A   	fcall	___flmul
  8736  0C7C  0841               	movf	?___flmul+3,w
  8737  0C7D  1683               	bsf	3,5	;RP0=1, select bank1
  8738  0C7E  00E0               	movwf	(_measure_inductance$1015+3)^(0+128)
  8739  0C7F  1283               	bcf	3,5	;RP0=0, select bank0
  8740  0C80  0840               	movf	?___flmul+2,w
  8741  0C81  1683               	bsf	3,5	;RP0=1, select bank1
  8742  0C82  00DF               	movwf	(_measure_inductance$1015+2)^(0+128)
  8743  0C83  1283               	bcf	3,5	;RP0=0, select bank0
  8744  0C84  083F               	movf	?___flmul+1,w
  8745  0C85  1683               	bsf	3,5	;RP0=1, select bank1
  8746  0C86  00DE               	movwf	(_measure_inductance$1015+1)^(0+128)
  8747  0C87  1283               	bcf	3,5	;RP0=0, select bank0
  8748  0C88  083E               	movf	?___flmul,w
  8749  0C89  1683               	bsf	3,5	;RP0=1, select bank1
  8750  0C8A  00DD               	movwf	_measure_inductance$1015^(0+128)
  8751                           
  8752                           ;measure.c: 213: denominator = 4 * 3.14159265358979323846l * 3.14159265358979323846l * F
      +                          1 * F1 * F2 * F2 * F3 * F3 * CCal;
  8753  0C8B  1703               	bsf	3,6	;RP1=1, select bank3
  8754  0C8C  0817               	movf	(_F3+3)^(0+384),w
  8755  0C8D  1283               	bcf	3,5	;RP0=0, select bank0
  8756  0C8E  1303               	bcf	3,6	;RP1=0, select bank0
  8757  0C8F  00C1               	movwf	___flmul@f1+3
  8758  0C90  1683               	bsf	3,5	;RP0=1, select bank3
  8759  0C91  1703               	bsf	3,6	;RP1=1, select bank3
  8760  0C92  0816               	movf	(_F3+2)^(0+384),w
  8761  0C93  1283               	bcf	3,5	;RP0=0, select bank0
  8762  0C94  1303               	bcf	3,6	;RP1=0, select bank0
  8763  0C95  00C0               	movwf	___flmul@f1+2
  8764  0C96  1683               	bsf	3,5	;RP0=1, select bank3
  8765  0C97  1703               	bsf	3,6	;RP1=1, select bank3
  8766  0C98  0815               	movf	(_F3+1)^(0+384),w
  8767  0C99  1283               	bcf	3,5	;RP0=0, select bank0
  8768  0C9A  1303               	bcf	3,6	;RP1=0, select bank0
  8769  0C9B  00BF               	movwf	___flmul@f1+1
  8770  0C9C  1683               	bsf	3,5	;RP0=1, select bank3
  8771  0C9D  1703               	bsf	3,6	;RP1=1, select bank3
  8772  0C9E  0814               	movf	_F3^(0+384),w
  8773  0C9F  1283               	bcf	3,5	;RP0=0, select bank0
  8774  0CA0  1303               	bcf	3,6	;RP1=0, select bank0
  8775  0CA1  00BE               	movwf	___flmul@f1
  8776  0CA2  1683               	bsf	3,5	;RP0=1, select bank1
  8777  0CA3  0860               	movf	(_measure_inductance$1015+3)^(0+128),w
  8778  0CA4  1283               	bcf	3,5	;RP0=0, select bank0
  8779  0CA5  00C5               	movwf	___flmul@f2+3
  8780  0CA6  1683               	bsf	3,5	;RP0=1, select bank1
  8781  0CA7  085F               	movf	(_measure_inductance$1015+2)^(0+128),w
  8782  0CA8  1283               	bcf	3,5	;RP0=0, select bank0
  8783  0CA9  00C4               	movwf	___flmul@f2+2
  8784  0CAA  1683               	bsf	3,5	;RP0=1, select bank1
  8785  0CAB  085E               	movf	(_measure_inductance$1015+1)^(0+128),w
  8786  0CAC  1283               	bcf	3,5	;RP0=0, select bank0
  8787  0CAD  00C3               	movwf	___flmul@f2+1
  8788  0CAE  1683               	bsf	3,5	;RP0=1, select bank1
  8789  0CAF  085D               	movf	_measure_inductance$1015^(0+128),w
  8790  0CB0  1283               	bcf	3,5	;RP0=0, select bank0
  8791  0CB1  00C2               	movwf	___flmul@f2
  8792  0CB2  2698  120A  158A   	fcall	___flmul
  8793  0CB5  0841               	movf	?___flmul+3,w
  8794  0CB6  1683               	bsf	3,5	;RP0=1, select bank1
  8795  0CB7  00CF               	movwf	(_measure_inductance$1017+3)^(0+128)
  8796  0CB8  1283               	bcf	3,5	;RP0=0, select bank0
  8797  0CB9  0840               	movf	?___flmul+2,w
  8798  0CBA  1683               	bsf	3,5	;RP0=1, select bank1
  8799  0CBB  00CE               	movwf	(_measure_inductance$1017+2)^(0+128)
  8800  0CBC  1283               	bcf	3,5	;RP0=0, select bank0
  8801  0CBD  083F               	movf	?___flmul+1,w
  8802  0CBE  1683               	bsf	3,5	;RP0=1, select bank1
  8803  0CBF  00CD               	movwf	(_measure_inductance$1017+1)^(0+128)
  8804  0CC0  1283               	bcf	3,5	;RP0=0, select bank0
  8805  0CC1  083E               	movf	?___flmul,w
  8806  0CC2  1683               	bsf	3,5	;RP0=1, select bank1
  8807  0CC3  00CC               	movwf	_measure_inductance$1017^(0+128)
  8808                           
  8809                           ;measure.c: 213: denominator = 4 * 3.14159265358979323846l * 3.14159265358979323846l * F
      +                          1 * F1 * F2 * F2 * F3 * F3 * CCal;
  8810  0CC4  1703               	bsf	3,6	;RP1=1, select bank3
  8811  0CC5  085A               	movf	(_CCal+3)^(0+384),w
  8812  0CC6  1283               	bcf	3,5	;RP0=0, select bank0
  8813  0CC7  1303               	bcf	3,6	;RP1=0, select bank0
  8814  0CC8  00C1               	movwf	___flmul@f1+3
  8815  0CC9  1683               	bsf	3,5	;RP0=1, select bank3
  8816  0CCA  1703               	bsf	3,6	;RP1=1, select bank3
  8817  0CCB  0859               	movf	(_CCal+2)^(0+384),w
  8818  0CCC  1283               	bcf	3,5	;RP0=0, select bank0
  8819  0CCD  1303               	bcf	3,6	;RP1=0, select bank0
  8820  0CCE  00C0               	movwf	___flmul@f1+2
  8821  0CCF  1683               	bsf	3,5	;RP0=1, select bank3
  8822  0CD0  1703               	bsf	3,6	;RP1=1, select bank3
  8823  0CD1  0858               	movf	(_CCal+1)^(0+384),w
  8824  0CD2  1283               	bcf	3,5	;RP0=0, select bank0
  8825  0CD3  1303               	bcf	3,6	;RP1=0, select bank0
  8826  0CD4  00BF               	movwf	___flmul@f1+1
  8827  0CD5  1683               	bsf	3,5	;RP0=1, select bank3
  8828  0CD6  1703               	bsf	3,6	;RP1=1, select bank3
  8829  0CD7  0857               	movf	_CCal^(0+384),w
  8830  0CD8  1283               	bcf	3,5	;RP0=0, select bank0
  8831  0CD9  1303               	bcf	3,6	;RP1=0, select bank0
  8832  0CDA  00BE               	movwf	___flmul@f1
  8833  0CDB  1683               	bsf	3,5	;RP0=1, select bank1
  8834  0CDC  084F               	movf	(_measure_inductance$1017+3)^(0+128),w
  8835  0CDD  1283               	bcf	3,5	;RP0=0, select bank0
  8836  0CDE  00C5               	movwf	___flmul@f2+3
  8837  0CDF  1683               	bsf	3,5	;RP0=1, select bank1
  8838  0CE0  084E               	movf	(_measure_inductance$1017+2)^(0+128),w
  8839  0CE1  1283               	bcf	3,5	;RP0=0, select bank0
  8840  0CE2  00C4               	movwf	___flmul@f2+2
  8841  0CE3  1683               	bsf	3,5	;RP0=1, select bank1
  8842  0CE4  084D               	movf	(_measure_inductance$1017+1)^(0+128),w
  8843  0CE5  1283               	bcf	3,5	;RP0=0, select bank0
  8844  0CE6  00C3               	movwf	___flmul@f2+1
  8845  0CE7  1683               	bsf	3,5	;RP0=1, select bank1
  8846  0CE8  084C               	movf	_measure_inductance$1017^(0+128),w
  8847  0CE9  1283               	bcf	3,5	;RP0=0, select bank0
  8848  0CEA  00C2               	movwf	___flmul@f2
  8849  0CEB  2698  120A  158A   	fcall	___flmul
  8850  0CEE  0841               	movf	?___flmul+3,w
  8851  0CEF  1683               	bsf	3,5	;RP0=1, select bank1
  8852  0CF0  00D3               	movwf	(_measure_inductance$1018+3)^(0+128)
  8853  0CF1  1283               	bcf	3,5	;RP0=0, select bank0
  8854  0CF2  0840               	movf	?___flmul+2,w
  8855  0CF3  1683               	bsf	3,5	;RP0=1, select bank1
  8856  0CF4  00D2               	movwf	(_measure_inductance$1018+2)^(0+128)
  8857  0CF5  1283               	bcf	3,5	;RP0=0, select bank0
  8858  0CF6  083F               	movf	?___flmul+1,w
  8859  0CF7  1683               	bsf	3,5	;RP0=1, select bank1
  8860  0CF8  00D1               	movwf	(_measure_inductance$1018+1)^(0+128)
  8861  0CF9  1283               	bcf	3,5	;RP0=0, select bank0
  8862  0CFA  083E               	movf	?___flmul,w
  8863  0CFB  1683               	bsf	3,5	;RP0=1, select bank1
  8864  0CFC  00D0               	movwf	_measure_inductance$1018^(0+128)
  8865                           
  8866                           ;measure.c: 213: denominator = 4 * 3.14159265358979323846l * 3.14159265358979323846l * F
      +                          1 * F1 * F2 * F2 * F3 * F3 * CCal;
  8867  0CFD  3042               	movlw	66
  8868  0CFE  1283               	bcf	3,5	;RP0=0, select bank0
  8869  0CFF  00C1               	movwf	___flmul@f1+3
  8870  0D00  301D               	movlw	29
  8871  0D01  00C0               	movwf	___flmul@f1+2
  8872  0D02  30E9               	movlw	233
  8873  0D03  00BF               	movwf	___flmul@f1+1
  8874  0D04  30E6               	movlw	230
  8875  0D05  00BE               	movwf	___flmul@f1
  8876  0D06  1683               	bsf	3,5	;RP0=1, select bank1
  8877  0D07  0853               	movf	(_measure_inductance$1018+3)^(0+128),w
  8878  0D08  1283               	bcf	3,5	;RP0=0, select bank0
  8879  0D09  00C5               	movwf	___flmul@f2+3
  8880  0D0A  1683               	bsf	3,5	;RP0=1, select bank1
  8881  0D0B  0852               	movf	(_measure_inductance$1018+2)^(0+128),w
  8882  0D0C  1283               	bcf	3,5	;RP0=0, select bank0
  8883  0D0D  00C4               	movwf	___flmul@f2+2
  8884  0D0E  1683               	bsf	3,5	;RP0=1, select bank1
  8885  0D0F  0851               	movf	(_measure_inductance$1018+1)^(0+128),w
  8886  0D10  1283               	bcf	3,5	;RP0=0, select bank0
  8887  0D11  00C3               	movwf	___flmul@f2+1
  8888  0D12  1683               	bsf	3,5	;RP0=1, select bank1
  8889  0D13  0850               	movf	_measure_inductance$1018^(0+128),w
  8890  0D14  1283               	bcf	3,5	;RP0=0, select bank0
  8891  0D15  00C2               	movwf	___flmul@f2
  8892  0D16  2698  120A  158A   	fcall	___flmul
  8893  0D19  0841               	movf	?___flmul+3,w
  8894  0D1A  1683               	bsf	3,5	;RP0=1, select bank1
  8895  0D1B  00C3               	movwf	(measure_inductance@denominator+3)^(0+128)
  8896  0D1C  1283               	bcf	3,5	;RP0=0, select bank0
  8897  0D1D  0840               	movf	?___flmul+2,w
  8898  0D1E  1683               	bsf	3,5	;RP0=1, select bank1
  8899  0D1F  00C2               	movwf	(measure_inductance@denominator+2)^(0+128)
  8900  0D20  1283               	bcf	3,5	;RP0=0, select bank0
  8901  0D21  083F               	movf	?___flmul+1,w
  8902  0D22  1683               	bsf	3,5	;RP0=1, select bank1
  8903  0D23  00C1               	movwf	(measure_inductance@denominator+1)^(0+128)
  8904  0D24  1283               	bcf	3,5	;RP0=0, select bank0
  8905  0D25  083E               	movf	?___flmul,w
  8906  0D26  1683               	bsf	3,5	;RP0=1, select bank1
  8907  0D27  00C0               	movwf	measure_inductance@denominator^(0+128)
  8908                           
  8909                           ;measure.c: 214: Lin = (numerator / denominator) * 1e+15l;
  8910  0D28  3058               	movlw	88
  8911  0D29  1283               	bcf	3,5	;RP0=0, select bank0
  8912  0D2A  00C1               	movwf	___flmul@f1+3
  8913  0D2B  3063               	movlw	99
  8914  0D2C  00C0               	movwf	___flmul@f1+2
  8915  0D2D  305F               	movlw	95
  8916  0D2E  00BF               	movwf	___flmul@f1+1
  8917  0D2F  30A9               	movlw	169
  8918  0D30  00BE               	movwf	___flmul@f1
  8919  0D31  1683               	bsf	3,5	;RP0=1, select bank1
  8920  0D32  0843               	movf	(measure_inductance@denominator+3)^(0+128),w
  8921  0D33  1283               	bcf	3,5	;RP0=0, select bank0
  8922  0D34  00AE               	movwf	___fldiv@f2+3
  8923  0D35  1683               	bsf	3,5	;RP0=1, select bank1
  8924  0D36  0842               	movf	(measure_inductance@denominator+2)^(0+128),w
  8925  0D37  1283               	bcf	3,5	;RP0=0, select bank0
  8926  0D38  00AD               	movwf	___fldiv@f2+2
  8927  0D39  1683               	bsf	3,5	;RP0=1, select bank1
  8928  0D3A  0841               	movf	(measure_inductance@denominator+1)^(0+128),w
  8929  0D3B  1283               	bcf	3,5	;RP0=0, select bank0
  8930  0D3C  00AC               	movwf	___fldiv@f2+1
  8931  0D3D  1683               	bsf	3,5	;RP0=1, select bank1
  8932  0D3E  0840               	movf	measure_inductance@denominator^(0+128),w
  8933  0D3F  1283               	bcf	3,5	;RP0=0, select bank0
  8934  0D40  00AB               	movwf	___fldiv@f2
  8935  0D41  1683               	bsf	3,5	;RP0=1, select bank1
  8936  0D42  083F               	movf	(measure_inductance@numerator+3)^(0+128),w
  8937  0D43  1283               	bcf	3,5	;RP0=0, select bank0
  8938  0D44  00B2               	movwf	___fldiv@f1+3
  8939  0D45  1683               	bsf	3,5	;RP0=1, select bank1
  8940  0D46  083E               	movf	(measure_inductance@numerator+2)^(0+128),w
  8941  0D47  1283               	bcf	3,5	;RP0=0, select bank0
  8942  0D48  00B1               	movwf	___fldiv@f1+2
  8943  0D49  1683               	bsf	3,5	;RP0=1, select bank1
  8944  0D4A  083D               	movf	(measure_inductance@numerator+1)^(0+128),w
  8945  0D4B  1283               	bcf	3,5	;RP0=0, select bank0
  8946  0D4C  00B0               	movwf	___fldiv@f1+1
  8947  0D4D  1683               	bsf	3,5	;RP0=1, select bank1
  8948  0D4E  083C               	movf	measure_inductance@numerator^(0+128),w
  8949  0D4F  1283               	bcf	3,5	;RP0=0, select bank0
  8950  0D50  00AF               	movwf	___fldiv@f1
  8951  0D51  160A  118A  262D  120A  158A  	fcall	___fldiv
  8952  0D56  082E               	movf	?___fldiv+3,w
  8953  0D57  00C5               	movwf	___flmul@f2+3
  8954  0D58  082D               	movf	?___fldiv+2,w
  8955  0D59  00C4               	movwf	___flmul@f2+2
  8956  0D5A  082C               	movf	?___fldiv+1,w
  8957  0D5B  00C3               	movwf	___flmul@f2+1
  8958  0D5C  082B               	movf	?___fldiv,w
  8959  0D5D  00C2               	movwf	___flmul@f2
  8960  0D5E  2698  120A  158A   	fcall	___flmul
  8961  0D61  0841               	movf	?___flmul+3,w
  8962  0D62  1683               	bsf	3,5	;RP0=1, select bank1
  8963  0D63  00E6               	movwf	(measure_inductance@Lin+3)^(0+128)
  8964  0D64  1283               	bcf	3,5	;RP0=0, select bank0
  8965  0D65  0840               	movf	?___flmul+2,w
  8966  0D66  1683               	bsf	3,5	;RP0=1, select bank1
  8967  0D67  00E5               	movwf	(measure_inductance@Lin+2)^(0+128)
  8968  0D68  1283               	bcf	3,5	;RP0=0, select bank0
  8969  0D69  083F               	movf	?___flmul+1,w
  8970  0D6A  1683               	bsf	3,5	;RP0=1, select bank1
  8971  0D6B  00E4               	movwf	(measure_inductance@Lin+1)^(0+128)
  8972  0D6C  1283               	bcf	3,5	;RP0=0, select bank0
  8973  0D6D  083E               	movf	?___flmul,w
  8974  0D6E  1683               	bsf	3,5	;RP0=1, select bank1
  8975  0D6F  00E3               	movwf	measure_inductance@Lin^(0+128)
  8976                           
  8977                           ;measure.c: 216: if(Lin > 999) {
  8978  0D70  3044               	movlw	68
  8979  0D71  1283               	bcf	3,5	;RP0=0, select bank0
  8980  0D72  00A4               	movwf	___flge@ff1+3
  8981  0D73  3079               	movlw	121
  8982  0D74  00A3               	movwf	___flge@ff1+2
  8983  0D75  30C0               	movlw	192
  8984  0D76  00A2               	movwf	___flge@ff1+1
  8985  0D77  01A1               	clrf	___flge@ff1
  8986  0D78  1683               	bsf	3,5	;RP0=1, select bank1
  8987  0D79  0866               	movf	(measure_inductance@Lin+3)^(0+128),w
  8988  0D7A  1283               	bcf	3,5	;RP0=0, select bank0
  8989  0D7B  00A8               	movwf	___flge@ff2+3
  8990  0D7C  1683               	bsf	3,5	;RP0=1, select bank1
  8991  0D7D  0865               	movf	(measure_inductance@Lin+2)^(0+128),w
  8992  0D7E  1283               	bcf	3,5	;RP0=0, select bank0
  8993  0D7F  00A7               	movwf	___flge@ff2+2
  8994  0D80  1683               	bsf	3,5	;RP0=1, select bank1
  8995  0D81  0864               	movf	(measure_inductance@Lin+1)^(0+128),w
  8996  0D82  1283               	bcf	3,5	;RP0=0, select bank0
  8997  0D83  00A6               	movwf	___flge@ff2+1
  8998  0D84  1683               	bsf	3,5	;RP0=1, select bank1
  8999  0D85  0863               	movf	measure_inductance@Lin^(0+128),w
  9000  0D86  1283               	bcf	3,5	;RP0=0, select bank0
  9001  0D87  00A5               	movwf	___flge@ff2
  9002  0D88  2730  120A  158A   	fcall	___flge
  9003  0D8B  1803               	btfsc	3,0
  9004  0D8C  2E4F               	goto	l4840
  9005                           
  9006                           ;measure.c: 217: if(Lin > (999e+03l)) {
  9007  0D8D  3049               	movlw	73
  9008  0D8E  00A4               	movwf	___flge@ff1+3
  9009  0D8F  3073               	movlw	115
  9010  0D90  00A3               	movwf	___flge@ff1+2
  9011  0D91  30E5               	movlw	229
  9012  0D92  00A2               	movwf	___flge@ff1+1
  9013  0D93  3080               	movlw	128
  9014  0D94  00A1               	movwf	___flge@ff1
  9015  0D95  1683               	bsf	3,5	;RP0=1, select bank1
  9016  0D96  0866               	movf	(measure_inductance@Lin+3)^(0+128),w
  9017  0D97  1283               	bcf	3,5	;RP0=0, select bank0
  9018  0D98  00A8               	movwf	___flge@ff2+3
  9019  0D99  1683               	bsf	3,5	;RP0=1, select bank1
  9020  0D9A  0865               	movf	(measure_inductance@Lin+2)^(0+128),w
  9021  0D9B  1283               	bcf	3,5	;RP0=0, select bank0
  9022  0D9C  00A7               	movwf	___flge@ff2+2
  9023  0D9D  1683               	bsf	3,5	;RP0=1, select bank1
  9024  0D9E  0864               	movf	(measure_inductance@Lin+1)^(0+128),w
  9025  0D9F  1283               	bcf	3,5	;RP0=0, select bank0
  9026  0DA0  00A6               	movwf	___flge@ff2+1
  9027  0DA1  1683               	bsf	3,5	;RP0=1, select bank1
  9028  0DA2  0863               	movf	measure_inductance@Lin^(0+128),w
  9029  0DA3  1283               	bcf	3,5	;RP0=0, select bank0
  9030  0DA4  00A5               	movwf	___flge@ff2
  9031  0DA5  2730  120A  158A   	fcall	___flge
  9032  0DA8  1803               	btfsc	3,0
  9033  0DA9  2E23               	goto	l4836
  9034                           
  9035                           ;measure.c: 218: if(Lin > (999e+06l)) {
  9036  0DAA  304E               	movlw	78
  9037  0DAB  00A4               	movwf	___flge@ff1+3
  9038  0DAC  306E               	movlw	110
  9039  0DAD  00A3               	movwf	___flge@ff1+2
  9040  0DAE  302E               	movlw	46
  9041  0DAF  00A2               	movwf	___flge@ff1+1
  9042  0DB0  301F               	movlw	31
  9043  0DB1  00A1               	movwf	___flge@ff1
  9044  0DB2  1683               	bsf	3,5	;RP0=1, select bank1
  9045  0DB3  0866               	movf	(measure_inductance@Lin+3)^(0+128),w
  9046  0DB4  1283               	bcf	3,5	;RP0=0, select bank0
  9047  0DB5  00A8               	movwf	___flge@ff2+3
  9048  0DB6  1683               	bsf	3,5	;RP0=1, select bank1
  9049  0DB7  0865               	movf	(measure_inductance@Lin+2)^(0+128),w
  9050  0DB8  1283               	bcf	3,5	;RP0=0, select bank0
  9051  0DB9  00A7               	movwf	___flge@ff2+2
  9052  0DBA  1683               	bsf	3,5	;RP0=1, select bank1
  9053  0DBB  0864               	movf	(measure_inductance@Lin+1)^(0+128),w
  9054  0DBC  1283               	bcf	3,5	;RP0=0, select bank0
  9055  0DBD  00A6               	movwf	___flge@ff2+1
  9056  0DBE  1683               	bsf	3,5	;RP0=1, select bank1
  9057  0DBF  0863               	movf	measure_inductance@Lin^(0+128),w
  9058  0DC0  1283               	bcf	3,5	;RP0=0, select bank0
  9059  0DC1  00A5               	movwf	___flge@ff2
  9060  0DC2  2730  120A  158A   	fcall	___flge
  9061  0DC5  1803               	btfsc	3,0
  9062  0DC6  2DF5               	goto	l4832
  9063                           
  9064                           ;measure.c: 219: Lin = Lin / (1e+09l);
  9065  0DC7  304E               	movlw	78
  9066  0DC8  00AE               	movwf	___fldiv@f2+3
  9067  0DC9  306E               	movlw	110
  9068  0DCA  00AD               	movwf	___fldiv@f2+2
  9069  0DCB  306B               	movlw	107
  9070  0DCC  00AC               	movwf	___fldiv@f2+1
  9071  0DCD  3028               	movlw	40
  9072  0DCE  00AB               	movwf	___fldiv@f2
  9073  0DCF  1683               	bsf	3,5	;RP0=1, select bank1
  9074  0DD0  0866               	movf	(measure_inductance@Lin+3)^(0+128),w
  9075  0DD1  1283               	bcf	3,5	;RP0=0, select bank0
  9076  0DD2  00B2               	movwf	___fldiv@f1+3
  9077  0DD3  1683               	bsf	3,5	;RP0=1, select bank1
  9078  0DD4  0865               	movf	(measure_inductance@Lin+2)^(0+128),w
  9079  0DD5  1283               	bcf	3,5	;RP0=0, select bank0
  9080  0DD6  00B1               	movwf	___fldiv@f1+2
  9081  0DD7  1683               	bsf	3,5	;RP0=1, select bank1
  9082  0DD8  0864               	movf	(measure_inductance@Lin+1)^(0+128),w
  9083  0DD9  1283               	bcf	3,5	;RP0=0, select bank0
  9084  0DDA  00B0               	movwf	___fldiv@f1+1
  9085  0DDB  1683               	bsf	3,5	;RP0=1, select bank1
  9086  0DDC  0863               	movf	measure_inductance@Lin^(0+128),w
  9087  0DDD  1283               	bcf	3,5	;RP0=0, select bank0
  9088  0DDE  00AF               	movwf	___fldiv@f1
  9089  0DDF  160A  118A  262D  120A  158A  	fcall	___fldiv
  9090  0DE4  082E               	movf	?___fldiv+3,w
  9091  0DE5  1683               	bsf	3,5	;RP0=1, select bank1
  9092  0DE6  00E6               	movwf	(measure_inductance@Lin+3)^(0+128)
  9093  0DE7  1283               	bcf	3,5	;RP0=0, select bank0
  9094  0DE8  082D               	movf	?___fldiv+2,w
  9095  0DE9  1683               	bsf	3,5	;RP0=1, select bank1
  9096  0DEA  00E5               	movwf	(measure_inductance@Lin+2)^(0+128)
  9097  0DEB  1283               	bcf	3,5	;RP0=0, select bank0
  9098  0DEC  082C               	movf	?___fldiv+1,w
  9099  0DED  1683               	bsf	3,5	;RP0=1, select bank1
  9100  0DEE  00E4               	movwf	(measure_inductance@Lin+1)^(0+128)
  9101  0DEF  1283               	bcf	3,5	;RP0=0, select bank0
  9102  0DF0  082B               	movf	?___fldiv,w
  9103  0DF1  1683               	bsf	3,5	;RP0=1, select bank1
  9104  0DF2  00E3               	movwf	measure_inductance@Lin^(0+128)
  9105                           
  9106                           ;measure.c: 220: unit = 0;
  9107  0DF3  01D4               	clrf	measure_inductance@unit^(0+128)
  9108                           
  9109                           ;measure.c: 221: } else {
  9110  0DF4  2E52               	goto	l4842
  9111  0DF5                     l4832:	
  9112                           
  9113                           ;measure.c: 222: Lin = Lin / (1e+06l);
  9114  0DF5  3049               	movlw	73
  9115  0DF6  00AE               	movwf	___fldiv@f2+3
  9116  0DF7  3074               	movlw	116
  9117  0DF8  00AD               	movwf	___fldiv@f2+2
  9118  0DF9  3024               	movlw	36
  9119  0DFA  00AC               	movwf	___fldiv@f2+1
  9120  0DFB  01AB               	clrf	___fldiv@f2
  9121  0DFC  1683               	bsf	3,5	;RP0=1, select bank1
  9122  0DFD  0866               	movf	(measure_inductance@Lin+3)^(0+128),w
  9123  0DFE  1283               	bcf	3,5	;RP0=0, select bank0
  9124  0DFF  00B2               	movwf	___fldiv@f1+3
  9125  0E00  1683               	bsf	3,5	;RP0=1, select bank1
  9126  0E01  0865               	movf	(measure_inductance@Lin+2)^(0+128),w
  9127  0E02  1283               	bcf	3,5	;RP0=0, select bank0
  9128  0E03  00B1               	movwf	___fldiv@f1+2
  9129  0E04  1683               	bsf	3,5	;RP0=1, select bank1
  9130  0E05  0864               	movf	(measure_inductance@Lin+1)^(0+128),w
  9131  0E06  1283               	bcf	3,5	;RP0=0, select bank0
  9132  0E07  00B0               	movwf	___fldiv@f1+1
  9133  0E08  1683               	bsf	3,5	;RP0=1, select bank1
  9134  0E09  0863               	movf	measure_inductance@Lin^(0+128),w
  9135  0E0A  1283               	bcf	3,5	;RP0=0, select bank0
  9136  0E0B  00AF               	movwf	___fldiv@f1
  9137  0E0C  160A  118A  262D  120A  158A  	fcall	___fldiv
  9138  0E11  082E               	movf	?___fldiv+3,w
  9139  0E12  1683               	bsf	3,5	;RP0=1, select bank1
  9140  0E13  00E6               	movwf	(measure_inductance@Lin+3)^(0+128)
  9141  0E14  1283               	bcf	3,5	;RP0=0, select bank0
  9142  0E15  082D               	movf	?___fldiv+2,w
  9143  0E16  1683               	bsf	3,5	;RP0=1, select bank1
  9144  0E17  00E5               	movwf	(measure_inductance@Lin+2)^(0+128)
  9145  0E18  1283               	bcf	3,5	;RP0=0, select bank0
  9146  0E19  082C               	movf	?___fldiv+1,w
  9147  0E1A  1683               	bsf	3,5	;RP0=1, select bank1
  9148  0E1B  00E4               	movwf	(measure_inductance@Lin+1)^(0+128)
  9149  0E1C  1283               	bcf	3,5	;RP0=0, select bank0
  9150  0E1D  082B               	movf	?___fldiv,w
  9151  0E1E  1683               	bsf	3,5	;RP0=1, select bank1
  9152  0E1F  00E3               	movwf	measure_inductance@Lin^(0+128)
  9153                           
  9154                           ;measure.c: 223: unit = 1;
  9155  0E20  01D4               	clrf	measure_inductance@unit^(0+128)
  9156  0E21  0AD4               	incf	measure_inductance@unit^(0+128),f
  9157  0E22  2E52               	goto	l4842
  9158  0E23                     l4836:	
  9159                           
  9160                           ;measure.c: 226: Lin = Lin / 1e+03l;
  9161  0E23  3044               	movlw	68
  9162  0E24  00AE               	movwf	___fldiv@f2+3
  9163  0E25  307A               	movlw	122
  9164  0E26  00AD               	movwf	___fldiv@f2+2
  9165  0E27  01AC               	clrf	___fldiv@f2+1
  9166  0E28  01AB               	clrf	___fldiv@f2
  9167  0E29  1683               	bsf	3,5	;RP0=1, select bank1
  9168  0E2A  0866               	movf	(measure_inductance@Lin+3)^(0+128),w
  9169  0E2B  1283               	bcf	3,5	;RP0=0, select bank0
  9170  0E2C  00B2               	movwf	___fldiv@f1+3
  9171  0E2D  1683               	bsf	3,5	;RP0=1, select bank1
  9172  0E2E  0865               	movf	(measure_inductance@Lin+2)^(0+128),w
  9173  0E2F  1283               	bcf	3,5	;RP0=0, select bank0
  9174  0E30  00B1               	movwf	___fldiv@f1+2
  9175  0E31  1683               	bsf	3,5	;RP0=1, select bank1
  9176  0E32  0864               	movf	(measure_inductance@Lin+1)^(0+128),w
  9177  0E33  1283               	bcf	3,5	;RP0=0, select bank0
  9178  0E34  00B0               	movwf	___fldiv@f1+1
  9179  0E35  1683               	bsf	3,5	;RP0=1, select bank1
  9180  0E36  0863               	movf	measure_inductance@Lin^(0+128),w
  9181  0E37  1283               	bcf	3,5	;RP0=0, select bank0
  9182  0E38  00AF               	movwf	___fldiv@f1
  9183  0E39  160A  118A  262D  120A  158A  	fcall	___fldiv
  9184  0E3E  082E               	movf	?___fldiv+3,w
  9185  0E3F  1683               	bsf	3,5	;RP0=1, select bank1
  9186  0E40  00E6               	movwf	(measure_inductance@Lin+3)^(0+128)
  9187  0E41  1283               	bcf	3,5	;RP0=0, select bank0
  9188  0E42  082D               	movf	?___fldiv+2,w
  9189  0E43  1683               	bsf	3,5	;RP0=1, select bank1
  9190  0E44  00E5               	movwf	(measure_inductance@Lin+2)^(0+128)
  9191  0E45  1283               	bcf	3,5	;RP0=0, select bank0
  9192  0E46  082C               	movf	?___fldiv+1,w
  9193  0E47  1683               	bsf	3,5	;RP0=1, select bank1
  9194  0E48  00E4               	movwf	(measure_inductance@Lin+1)^(0+128)
  9195  0E49  1283               	bcf	3,5	;RP0=0, select bank0
  9196  0E4A  082B               	movf	?___fldiv,w
  9197  0E4B  1683               	bsf	3,5	;RP0=1, select bank1
  9198  0E4C  00E3               	movwf	measure_inductance@Lin^(0+128)
  9199                           
  9200                           ;measure.c: 227: unit = 2;
  9201  0E4D  3002               	movlw	2
  9202  0E4E  2E51               	goto	L6
  9203  0E4F                     l4840:	
  9204                           
  9205                           ;measure.c: 230: unit = 3;
  9206  0E4F  3003               	movlw	3
  9207  0E50  1683               	bsf	3,5	;RP0=1, select bank1
  9208  0E51                     L6:	
  9209  0E51  00D4               	movwf	measure_inductance@unit^(0+128)
  9210  0E52                     l4842:	
  9211                           
  9212                           ;measure.c: 232: Lin = Lin * 100;
  9213  0E52  3042               	movlw	66
  9214  0E53  1283               	bcf	3,5	;RP0=0, select bank0
  9215  0E54  00C1               	movwf	___flmul@f1+3
  9216  0E55  30C8               	movlw	200
  9217  0E56  00C0               	movwf	___flmul@f1+2
  9218  0E57  01BF               	clrf	___flmul@f1+1
  9219  0E58  01BE               	clrf	___flmul@f1
  9220  0E59  1683               	bsf	3,5	;RP0=1, select bank1
  9221  0E5A  0866               	movf	(measure_inductance@Lin+3)^(0+128),w
  9222  0E5B  1283               	bcf	3,5	;RP0=0, select bank0
  9223  0E5C  00C5               	movwf	___flmul@f2+3
  9224  0E5D  1683               	bsf	3,5	;RP0=1, select bank1
  9225  0E5E  0865               	movf	(measure_inductance@Lin+2)^(0+128),w
  9226  0E5F  1283               	bcf	3,5	;RP0=0, select bank0
  9227  0E60  00C4               	movwf	___flmul@f2+2
  9228  0E61  1683               	bsf	3,5	;RP0=1, select bank1
  9229  0E62  0864               	movf	(measure_inductance@Lin+1)^(0+128),w
  9230  0E63  1283               	bcf	3,5	;RP0=0, select bank0
  9231  0E64  00C3               	movwf	___flmul@f2+1
  9232  0E65  1683               	bsf	3,5	;RP0=1, select bank1
  9233  0E66  0863               	movf	measure_inductance@Lin^(0+128),w
  9234  0E67  1283               	bcf	3,5	;RP0=0, select bank0
  9235  0E68  00C2               	movwf	___flmul@f2
  9236  0E69  2698               	fcall	___flmul
  9237  0E6A  0841               	movf	?___flmul+3,w
  9238  0E6B  1683               	bsf	3,5	;RP0=1, select bank1
  9239  0E6C  00E6               	movwf	(measure_inductance@Lin+3)^(0+128)
  9240  0E6D  1283               	bcf	3,5	;RP0=0, select bank0
  9241  0E6E  0840               	movf	?___flmul+2,w
  9242  0E6F  1683               	bsf	3,5	;RP0=1, select bank1
  9243  0E70  00E5               	movwf	(measure_inductance@Lin+2)^(0+128)
  9244  0E71  1283               	bcf	3,5	;RP0=0, select bank0
  9245  0E72  083F               	movf	?___flmul+1,w
  9246  0E73  1683               	bsf	3,5	;RP0=1, select bank1
  9247  0E74  00E4               	movwf	(measure_inductance@Lin+1)^(0+128)
  9248  0E75  1283               	bcf	3,5	;RP0=0, select bank0
  9249  0E76  083E               	movf	?___flmul,w
  9250  0E77  1683               	bsf	3,5	;RP0=1, select bank1
  9251  0E78  00E3               	movwf	measure_inductance@Lin^(0+128)
  9252                           
  9253                           ;measure.c: 233: var = (uint16_t)Lin;
  9254  0E79  0866               	movf	(measure_inductance@Lin+3)^(0+128),w
  9255  0E7A  00B5               	movwf	(___fltol@f1+3)^(0+128)
  9256  0E7B  0865               	movf	(measure_inductance@Lin+2)^(0+128),w
  9257  0E7C  00B4               	movwf	(___fltol@f1+2)^(0+128)
  9258  0E7D  0864               	movf	(measure_inductance@Lin+1)^(0+128),w
  9259  0E7E  00B3               	movwf	(___fltol@f1+1)^(0+128)
  9260  0E7F  0863               	movf	measure_inductance@Lin^(0+128),w
  9261  0E80  00B2               	movwf	___fltol@f1^(0+128)
  9262  0E81  160A  118A  26A6  120A  158A  	fcall	___fltol
  9263  0E86  0833               	movf	(?___fltol^(0+128)+1),w
  9264  0E87  00E2               	movwf	(measure_inductance@var+1)^(0+128)
  9265  0E88  0832               	movf	?___fltol^(0+128),w
  9266  0E89  00E1               	movwf	measure_inductance@var^(0+128)
  9267                           
  9268                           ;measure.c: 235: print_reading(var);
  9269  0E8A  0862               	movf	(measure_inductance@var+1)^(0+128),w
  9270  0E8B  1283               	bcf	3,5	;RP0=0, select bank0
  9271  0E8C  00D2               	movwf	print_reading@measurement+1
  9272  0E8D  1683               	bsf	3,5	;RP0=1, select bank1
  9273  0E8E  0861               	movf	measure_inductance@var^(0+128),w
  9274  0E8F  1283               	bcf	3,5	;RP0=0, select bank0
  9275  0E90  00D1               	movwf	print_reading@measurement
  9276  0E91  160A  158A  25F1   	fcall	_print_reading
  9277                           
  9278                           ;measure.c: 236: print_unit(unit);
  9279  0E94  1683               	bsf	3,5	;RP0=1, select bank1
  9280  0E95  160A  158A  2C14   	ljmp	l4384
  9281  0E98                     __end_of_measure_inductance:	
  9282  0E98                     __ptext26:	
  9283 ;; *************** function ___flmul *****************
  9284 ;; Defined at:
  9285 ;;		line 62 in file "/opt/microchip/xc8/v1.34/sources/common/flmul.c"
  9286 ;; Parameters:    Size  Location     Type
  9287 ;;  f1              4   29[BANK0 ] int 
  9288 ;;  f2              4   33[BANK0 ] int 
  9289 ;; Auto vars:     Size  Location     Type
  9290 ;;  f3_as_produc    4   42[BANK0 ] unsigned long 
  9291 ;;  sign            1   47[BANK0 ] unsigned char 
  9292 ;;  cntr            1   46[BANK0 ] unsigned char 
  9293 ;;  exp             1   41[BANK0 ] unsigned char 
  9294 ;; Return value:  Size  Location     Type
  9295 ;;                  4   29[BANK0 ] unsigned char 
  9296 ;; Registers used:
  9297 ;;		wreg, status,2, status,0, pclath, cstack
  9298 ;; Tracked objects:
  9299 ;;		On entry : 300/0
  9300 ;;		On exit  : 300/0
  9301 ;;		Unchanged: 0/0
  9302 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9303 ;;      Params:         0       8       0       0       0
  9304 ;;      Locals:         0       7       0       0       0
  9305 ;;      Temps:          0       4       0       0       0
  9306 ;;      Totals:         0      19       0       0       0
  9307 ;;Total ram usage:       19 bytes
  9308 ;; Hardware stack levels used:    1
  9309 ;; Hardware stack levels required when called:    2
  9310 ;; This function calls:
  9311 ;;		___flpack
  9312 ;; This function is called by:
  9313 ;;		_format_double
  9314 ;;		_measure_capacitance
  9315 ;;		_measure_inductance
  9316 ;;		_log
  9317 ;;		_log10
  9318 ;;		_pow
  9319 ;;		_eval_poly
  9320 ;;		_exp
  9321 ;; This function uses a non-reentrant model
  9322 ;;
  9323                           
  9324                           
  9325                           ;psect for function ___flmul
  9326  0E98                     ___flmul:	
  9327                           
  9328                           ;incstack = 0
  9329                           ; Regs used in ___flmul: [wreg+status,2+status,0+pclath+cstack]
  9330  0E98  083E               	movf	___flmul@f1,w
  9331  0E99  00C6               	movwf	??___flmul
  9332  0E9A  083F               	movf	___flmul@f1+1,w
  9333  0E9B  00C7               	movwf	??___flmul+1
  9334  0E9C  0840               	movf	___flmul@f1+2,w
  9335  0E9D  00C8               	movwf	??___flmul+2
  9336  0E9E  0841               	movf	___flmul@f1+3,w
  9337  0E9F  00C9               	movwf	??___flmul+3
  9338  0EA0  1003               	clrc
  9339  0EA1  0D48               	rlf	??___flmul+2,w
  9340  0EA2  0D49               	rlf	??___flmul+3,w
  9341  0EA3  00CA               	movwf	___flmul@exp
  9342  0EA4  084A               	movf	___flmul@exp,w
  9343  0EA5  1D03               	btfss	3,2
  9344  0EA6  2EAC               	goto	l3834
  9345  0EA7  01BE               	clrf	?___flmul
  9346  0EA8  01BF               	clrf	?___flmul+1
  9347  0EA9  01C0               	clrf	?___flmul+2
  9348  0EAA  01C1               	clrf	?___flmul+3
  9349  0EAB  0008               	return
  9350  0EAC                     l3834:	
  9351  0EAC  0842               	movf	___flmul@f2,w
  9352  0EAD  00C6               	movwf	??___flmul
  9353  0EAE  0843               	movf	___flmul@f2+1,w
  9354  0EAF  00C7               	movwf	??___flmul+1
  9355  0EB0  0844               	movf	___flmul@f2+2,w
  9356  0EB1  00C8               	movwf	??___flmul+2
  9357  0EB2  0845               	movf	___flmul@f2+3,w
  9358  0EB3  00C9               	movwf	??___flmul+3
  9359  0EB4  1003               	clrc
  9360  0EB5  0D48               	rlf	??___flmul+2,w
  9361  0EB6  0D49               	rlf	??___flmul+3,w
  9362  0EB7  00D0               	movwf	___flmul@sign
  9363  0EB8  0850               	movf	___flmul@sign,w
  9364  0EB9  1D03               	btfss	3,2
  9365  0EBA  2EC0               	goto	l3838
  9366  0EBB  01BE               	clrf	?___flmul
  9367  0EBC  01BF               	clrf	?___flmul+1
  9368  0EBD  01C0               	clrf	?___flmul+2
  9369  0EBE  01C1               	clrf	?___flmul+3
  9370  0EBF  0008               	return
  9371  0EC0                     l3838:	
  9372  0EC0  0850               	movf	___flmul@sign,w
  9373  0EC1  3E7B               	addlw	123
  9374  0EC2  07CA               	addwf	___flmul@exp,f
  9375  0EC3  0841               	movf	___flmul@f1+3,w
  9376  0EC4  00D0               	movwf	___flmul@sign
  9377  0EC5  0845               	movf	___flmul@f2+3,w
  9378  0EC6  06D0               	xorwf	___flmul@sign,f
  9379  0EC7  3080               	movlw	128
  9380  0EC8  05D0               	andwf	___flmul@sign,f
  9381  0EC9  3007               	movlw	7
  9382  0ECA  17C0               	bsf	___flmul@f1+2,7
  9383  0ECB  17C4               	bsf	___flmul@f2+2,7
  9384  0ECC  01C5               	clrf	___flmul@f2+3
  9385  0ECD  01CB               	clrf	___flmul@f3_as_product
  9386  0ECE  01CC               	clrf	___flmul@f3_as_product+1
  9387  0ECF  01CD               	clrf	___flmul@f3_as_product+2
  9388  0ED0  01CE               	clrf	___flmul@f3_as_product+3
  9389  0ED1  00CF               	movwf	___flmul@cntr
  9390  0ED2                     l3856:	
  9391  0ED2  1C3E               	btfss	___flmul@f1,0
  9392  0ED3  2EE8               	goto	l3860
  9393  0ED4  0842               	movf	___flmul@f2,w
  9394  0ED5  07CB               	addwf	___flmul@f3_as_product,f
  9395  0ED6  0843               	movf	___flmul@f2+1,w
  9396  0ED7  1103               	clrz
  9397  0ED8  1803               	skipnc
  9398  0ED9  3E01               	addlw	1
  9399  0EDA  1D03               	btfss	3,2
  9400  0EDB  07CC               	addwf	___flmul@f3_as_product+1,f
  9401  0EDC  0844               	movf	___flmul@f2+2,w
  9402  0EDD  1103               	clrz
  9403  0EDE  1803               	skipnc
  9404  0EDF  3E01               	addlw	1
  9405  0EE0  1D03               	btfss	3,2
  9406  0EE1  07CD               	addwf	___flmul@f3_as_product+2,f
  9407  0EE2  0845               	movf	___flmul@f2+3,w
  9408  0EE3  1103               	clrz
  9409  0EE4  1803               	skipnc
  9410  0EE5  3E01               	addlw	1
  9411  0EE6  1D03               	btfss	3,2
  9412  0EE7  07CE               	addwf	___flmul@f3_as_product+3,f
  9413  0EE8                     l3860:	
  9414  0EE8  1003               	clrc
  9415  0EE9  0CC1               	rrf	___flmul@f1+3,f
  9416  0EEA  0CC0               	rrf	___flmul@f1+2,f
  9417  0EEB  0CBF               	rrf	___flmul@f1+1,f
  9418  0EEC  0CBE               	rrf	___flmul@f1,f
  9419  0EED  1003               	clrc
  9420  0EEE  0DC2               	rlf	___flmul@f2,f
  9421  0EEF  0DC3               	rlf	___flmul@f2+1,f
  9422  0EF0  0DC4               	rlf	___flmul@f2+2,f
  9423  0EF1  0DC5               	rlf	___flmul@f2+3,f
  9424  0EF2  0BCF               	decfsz	___flmul@cntr,f
  9425  0EF3  2ED2               	goto	l3856
  9426  0EF4  3011               	movlw	17
  9427  0EF5  00CF               	movwf	___flmul@cntr
  9428  0EF6                     l3868:	
  9429  0EF6  1C3E               	btfss	___flmul@f1,0
  9430  0EF7  2F0C               	goto	l3872
  9431  0EF8  0842               	movf	___flmul@f2,w
  9432  0EF9  07CB               	addwf	___flmul@f3_as_product,f
  9433  0EFA  0843               	movf	___flmul@f2+1,w
  9434  0EFB  1103               	clrz
  9435  0EFC  1803               	skipnc
  9436  0EFD  3E01               	addlw	1
  9437  0EFE  1D03               	btfss	3,2
  9438  0EFF  07CC               	addwf	___flmul@f3_as_product+1,f
  9439  0F00  0844               	movf	___flmul@f2+2,w
  9440  0F01  1103               	clrz
  9441  0F02  1803               	skipnc
  9442  0F03  3E01               	addlw	1
  9443  0F04  1D03               	btfss	3,2
  9444  0F05  07CD               	addwf	___flmul@f3_as_product+2,f
  9445  0F06  0845               	movf	___flmul@f2+3,w
  9446  0F07  1103               	clrz
  9447  0F08  1803               	skipnc
  9448  0F09  3E01               	addlw	1
  9449  0F0A  1D03               	btfss	3,2
  9450  0F0B  07CE               	addwf	___flmul@f3_as_product+3,f
  9451  0F0C                     l3872:	
  9452  0F0C  1003               	clrc
  9453  0F0D  0CC1               	rrf	___flmul@f1+3,f
  9454  0F0E  0CC0               	rrf	___flmul@f1+2,f
  9455  0F0F  0CBF               	rrf	___flmul@f1+1,f
  9456  0F10  0CBE               	rrf	___flmul@f1,f
  9457  0F11  1003               	clrc
  9458  0F12  0CCE               	rrf	___flmul@f3_as_product+3,f
  9459  0F13  0CCD               	rrf	___flmul@f3_as_product+2,f
  9460  0F14  0CCC               	rrf	___flmul@f3_as_product+1,f
  9461  0F15  0CCB               	rrf	___flmul@f3_as_product,f
  9462  0F16  0BCF               	decfsz	___flmul@cntr,f
  9463  0F17  2EF6               	goto	l3868
  9464  0F18  084E               	movf	___flmul@f3_as_product+3,w
  9465  0F19  00A4               	movwf	___flpack@arg+3
  9466  0F1A  084D               	movf	___flmul@f3_as_product+2,w
  9467  0F1B  00A3               	movwf	___flpack@arg+2
  9468  0F1C  084C               	movf	___flmul@f3_as_product+1,w
  9469  0F1D  00A2               	movwf	___flpack@arg+1
  9470  0F1E  084B               	movf	___flmul@f3_as_product,w
  9471  0F1F  00A1               	movwf	___flpack@arg
  9472  0F20  084A               	movf	___flmul@exp,w
  9473  0F21  00A5               	movwf	___flpack@exp
  9474  0F22  0850               	movf	___flmul@sign,w
  9475  0F23  00A6               	movwf	___flpack@sign
  9476  0F24  160A  118A  279E   	fcall	___flpack
  9477  0F27  0824               	movf	?___flpack+3,w
  9478  0F28  00C1               	movwf	?___flmul+3
  9479  0F29  0823               	movf	?___flpack+2,w
  9480  0F2A  00C0               	movwf	?___flmul+2
  9481  0F2B  0822               	movf	?___flpack+1,w
  9482  0F2C  00BF               	movwf	?___flmul+1
  9483  0F2D  0821               	movf	?___flpack,w
  9484  0F2E  00BE               	movwf	?___flmul
  9485  0F2F  0008               	return
  9486  0F30                     __end_of___flmul:	
  9487  0F30                     __ptext28:	
  9488 ;; *************** function ___flge *****************
  9489 ;; Defined at:
  9490 ;;		line 4 in file "/opt/microchip/xc8/v1.34/sources/common/flge.c"
  9491 ;; Parameters:    Size  Location     Type
  9492 ;;  ff1             4    0[BANK0 ] unsigned char 
  9493 ;;  ff2             4    4[BANK0 ] unsigned char 
  9494 ;; Auto vars:     Size  Location     Type
  9495 ;;		None
  9496 ;; Return value:  Size  Location     Type
  9497 ;;		None               void
  9498 ;; Registers used:
  9499 ;;		wreg, status,2, status,0
  9500 ;; Tracked objects:
  9501 ;;		On entry : 300/0
  9502 ;;		On exit  : 300/0
  9503 ;;		Unchanged: 0/0
  9504 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9505 ;;      Params:         0       8       0       0       0
  9506 ;;      Locals:         0       0       0       0       0
  9507 ;;      Temps:          0       4       0       0       0
  9508 ;;      Totals:         0      12       0       0       0
  9509 ;;Total ram usage:       12 bytes
  9510 ;; Hardware stack levels used:    1
  9511 ;; Hardware stack levels required when called:    1
  9512 ;; This function calls:
  9513 ;;		Nothing
  9514 ;; This function is called by:
  9515 ;;		_format_double
  9516 ;;		_measure_capacitance
  9517 ;;		_measure_inductance
  9518 ;;		_floor
  9519 ;;		_ldexp
  9520 ;;		_log
  9521 ;;		_pow
  9522 ;;		_exp
  9523 ;; This function uses a non-reentrant model
  9524 ;;
  9525                           
  9526                           
  9527                           ;psect for function ___flge
  9528  0F30                     ___flge:	
  9529                           
  9530                           ;incstack = 0
  9531                           ; Regs used in ___flge: [wreg+status,2+status,0]
  9532  0F30  1FA4               	btfss	___flge@ff1+3,7
  9533  0F31  2F4D               	goto	l3820
  9534  0F32  3080               	movlw	128
  9535  0F33  01A9               	clrf	??___flge
  9536  0F34  01AA               	clrf	??___flge+1
  9537  0F35  01AB               	clrf	??___flge+2
  9538  0F36  00AC               	movwf	??___flge+3
  9539  0F37  0821               	movf	___flge@ff1,w
  9540  0F38  02A9               	subwf	??___flge,f
  9541  0F39  0822               	movf	___flge@ff1+1,w
  9542  0F3A  1C03               	skipc
  9543  0F3B  0F22               	incfsz	___flge@ff1+1,w
  9544  0F3C  02AA               	subwf	??___flge+1,f
  9545  0F3D  0823               	movf	___flge@ff1+2,w
  9546  0F3E  1C03               	skipc
  9547  0F3F  0F23               	incfsz	___flge@ff1+2,w
  9548  0F40  02AB               	subwf	??___flge+2,f
  9549  0F41  0824               	movf	___flge@ff1+3,w
  9550  0F42  1C03               	skipc
  9551  0F43  0F24               	incfsz	___flge@ff1+3,w
  9552  0F44  02AC               	subwf	??___flge+3,f
  9553  0F45  082C               	movf	??___flge+3,w
  9554  0F46  00A4               	movwf	___flge@ff1+3
  9555  0F47  082B               	movf	??___flge+2,w
  9556  0F48  00A3               	movwf	___flge@ff1+2
  9557  0F49  082A               	movf	??___flge+1,w
  9558  0F4A  00A2               	movwf	___flge@ff1+1
  9559  0F4B  0829               	movf	??___flge,w
  9560  0F4C  00A1               	movwf	___flge@ff1
  9561  0F4D                     l3820:	
  9562  0F4D  1FA8               	btfss	___flge@ff2+3,7
  9563  0F4E  2F6A               	goto	l867
  9564  0F4F  3080               	movlw	128
  9565  0F50  01A9               	clrf	??___flge
  9566  0F51  01AA               	clrf	??___flge+1
  9567  0F52  01AB               	clrf	??___flge+2
  9568  0F53  00AC               	movwf	??___flge+3
  9569  0F54  0825               	movf	___flge@ff2,w
  9570  0F55  02A9               	subwf	??___flge,f
  9571  0F56  0826               	movf	___flge@ff2+1,w
  9572  0F57  1C03               	skipc
  9573  0F58  0F26               	incfsz	___flge@ff2+1,w
  9574  0F59  02AA               	subwf	??___flge+1,f
  9575  0F5A  0827               	movf	___flge@ff2+2,w
  9576  0F5B  1C03               	skipc
  9577  0F5C  0F27               	incfsz	___flge@ff2+2,w
  9578  0F5D  02AB               	subwf	??___flge+2,f
  9579  0F5E  0828               	movf	___flge@ff2+3,w
  9580  0F5F  1C03               	skipc
  9581  0F60  0F28               	incfsz	___flge@ff2+3,w
  9582  0F61  02AC               	subwf	??___flge+3,f
  9583  0F62  082C               	movf	??___flge+3,w
  9584  0F63  00A8               	movwf	___flge@ff2+3
  9585  0F64  082B               	movf	??___flge+2,w
  9586  0F65  00A7               	movwf	___flge@ff2+2
  9587  0F66  082A               	movf	??___flge+1,w
  9588  0F67  00A6               	movwf	___flge@ff2+1
  9589  0F68  0829               	movf	??___flge,w
  9590  0F69  00A5               	movwf	___flge@ff2
  9591  0F6A                     l867:	
  9592  0F6A  3080               	movlw	128
  9593  0F6B  06A4               	xorwf	___flge@ff1+3,f
  9594  0F6C  06A8               	xorwf	___flge@ff2+3,f
  9595  0F6D  0828               	movf	___flge@ff2+3,w
  9596  0F6E  0224               	subwf	___flge@ff1+3,w
  9597  0F6F  1D03               	skipz
  9598  0F70  0008               	return
  9599  0F71  0827               	movf	___flge@ff2+2,w
  9600  0F72  0223               	subwf	___flge@ff1+2,w
  9601  0F73  1D03               	skipz
  9602  0F74  0008               	return
  9603  0F75  0826               	movf	___flge@ff2+1,w
  9604  0F76  0222               	subwf	___flge@ff1+1,w
  9605  0F77  1D03               	skipz
  9606  0F78  0008               	return
  9607  0F79  0825               	movf	___flge@ff2,w
  9608  0F7A  0221               	subwf	___flge@ff1,w
  9609  0F7B  0008               	return
  9610  0F7C                     __end_of___flge:	
  9611  0F7C                     __ptext40:	
  9612 ;; *************** function _lcd_gotoxy *****************
  9613 ;; Defined at:
  9614 ;;		line 135 in file "../../../lib/lcd44780.c"
  9615 ;; Parameters:    Size  Location     Type
  9616 ;;  col             1    wreg     unsigned char 
  9617 ;;  row             1    3[BANK0 ] unsigned char 
  9618 ;; Auto vars:     Size  Location     Type
  9619 ;;  col             1    4[BANK0 ] unsigned char 
  9620 ;;  row_offsets     4    5[BANK0 ] unsigned char [4]
  9621 ;; Return value:  Size  Location     Type
  9622 ;;		None               void
  9623 ;; Registers used:
  9624 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  9625 ;; Tracked objects:
  9626 ;;		On entry : 300/0
  9627 ;;		On exit  : 0/0
  9628 ;;		Unchanged: 0/0
  9629 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9630 ;;      Params:         0       1       0       0       0
  9631 ;;      Locals:         0       5       0       0       0
  9632 ;;      Temps:          0       0       0       0       0
  9633 ;;      Totals:         0       6       0       0       0
  9634 ;;Total ram usage:        6 bytes
  9635 ;; Hardware stack levels used:    1
  9636 ;; Hardware stack levels required when called:    4
  9637 ;; This function calls:
  9638 ;;		_lcd_command
  9639 ;; This function is called by:
  9640 ;;		_print_unit
  9641 ;;		_print_reading
  9642 ;;		_print_indicator
  9643 ;;		_main
  9644 ;;		_calibrate
  9645 ;;		_measure_freq
  9646 ;;		_measure_capacitance
  9647 ;;		_measure_inductance
  9648 ;; This function uses a non-reentrant model
  9649 ;;
  9650                           
  9651                           
  9652                           ;psect for function _lcd_gotoxy
  9653  0F7C                     _lcd_gotoxy:	
  9654                           
  9655                           ;incstack = 0
  9656                           ; Regs used in _lcd_gotoxy: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  9657                           ;lcd_gotoxy@col stored from wreg
  9658  0F7C  00A5               	movwf	lcd_gotoxy@col
  9659                           
  9660                           ;lcd44780.c: 137: uint8_t row_offsets[] = {0x00, 0x40, 0x14, 0x54};
  9661  0F7D  1683               	bsf	3,5	;RP0=1, select bank3
  9662  0F7E  1703               	bsf	3,6	;RP1=1, select bank3
  9663  0F7F  0862               	movf	(lcd_gotoxy@F1148+3)^(0+384),w
  9664  0F80  1283               	bcf	3,5	;RP0=0, select bank0
  9665  0F81  1303               	bcf	3,6	;RP1=0, select bank0
  9666  0F82  00A9               	movwf	lcd_gotoxy@row_offsets+3
  9667  0F83  1683               	bsf	3,5	;RP0=1, select bank3
  9668  0F84  1703               	bsf	3,6	;RP1=1, select bank3
  9669  0F85  0861               	movf	(lcd_gotoxy@F1148+2)^(0+384),w
  9670  0F86  1283               	bcf	3,5	;RP0=0, select bank0
  9671  0F87  1303               	bcf	3,6	;RP1=0, select bank0
  9672  0F88  00A8               	movwf	lcd_gotoxy@row_offsets+2
  9673  0F89  1683               	bsf	3,5	;RP0=1, select bank3
  9674  0F8A  1703               	bsf	3,6	;RP1=1, select bank3
  9675  0F8B  0860               	movf	(lcd_gotoxy@F1148+1)^(0+384),w
  9676  0F8C  1283               	bcf	3,5	;RP0=0, select bank0
  9677  0F8D  1303               	bcf	3,6	;RP1=0, select bank0
  9678  0F8E  00A7               	movwf	lcd_gotoxy@row_offsets+1
  9679  0F8F  1683               	bsf	3,5	;RP0=1, select bank3
  9680  0F90  1703               	bsf	3,6	;RP1=1, select bank3
  9681  0F91  085F               	movf	lcd_gotoxy@F1148^(0+384),w
  9682  0F92  1283               	bcf	3,5	;RP0=0, select bank0
  9683  0F93  1303               	bcf	3,6	;RP1=0, select bank0
  9684  0F94  00A6               	movwf	lcd_gotoxy@row_offsets
  9685                           
  9686                           ;lcd44780.c: 146: if(LCD_lines == 1) {
  9687  0F95  1683               	bsf	3,5	;RP0=1, select bank3
  9688  0F96  1703               	bsf	3,6	;RP1=1, select bank3
  9689  0F97  0B27               	decfsz	_LCD_lines^(0+384),w
  9690  0F98  2FA1               	goto	l4240
  9691                           
  9692                           ;lcd44780.c: 147: row_offsets[1] = 0x14;
  9693  0F99  3014               	movlw	20
  9694  0F9A  1283               	bcf	3,5	;RP0=0, select bank0
  9695  0F9B  1303               	bcf	3,6	;RP1=0, select bank0
  9696  0F9C  00A7               	movwf	lcd_gotoxy@row_offsets+1
  9697                           
  9698                           ;lcd44780.c: 148: row_offsets[2] = 0x28;
  9699  0F9D  3028               	movlw	40
  9700  0F9E  00A8               	movwf	lcd_gotoxy@row_offsets+2
  9701                           
  9702                           ;lcd44780.c: 149: row_offsets[3] = 0x3C;
  9703  0F9F  303C               	movlw	60
  9704  0FA0  00A9               	movwf	lcd_gotoxy@row_offsets+3
  9705  0FA1                     l4240:	
  9706                           
  9707                           ;lcd44780.c: 150: }
  9708                           ;lcd44780.c: 156: lcd_command(0x80 | (col + row_offsets[row]));
  9709  0FA1  1283               	bcf	3,5	;RP0=0, select bank0
  9710  0FA2  1303               	bcf	3,6	;RP1=0, select bank0
  9711  0FA3  0824               	movf	lcd_gotoxy@row,w
  9712  0FA4  3E26               	addlw	(low (lcd_gotoxy@row_offsets| 0))& (0+255)
  9713  0FA5  0084               	movwf	4
  9714  0FA6  0825               	movf	lcd_gotoxy@col,w
  9715  0FA7  1383               	bcf	3,7	;select IRP bank0
  9716  0FA8  0700               	addwf	0,w
  9717  0FA9  3880               	iorlw	128
  9718  0FAA  120A  118A  2BCE   	ljmp	_lcd_command
  9719  0FAD                     __end_of_lcd_gotoxy:	
  9720  0FAD                     __ptext33:	
  9721 ;; *************** function _put_str *****************
  9722 ;; Defined at:
  9723 ;;		line 221 in file "../../../src/print.c"
  9724 ;; Parameters:    Size  Location     Type
  9725 ;;  s               2    3[BANK0 ] PTR const unsigned char 
  9726 ;;		 -> STR_37(13), STR_28(10), STR_25(15), STR_23(12), 
  9727 ;; Auto vars:     Size  Location     Type
  9728 ;;  i               2    8[BANK0 ] int 
  9729 ;; Return value:  Size  Location     Type
  9730 ;;		None               void
  9731 ;; Registers used:
  9732 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  9733 ;; Tracked objects:
  9734 ;;		On entry : 300/0
  9735 ;;		On exit  : 300/0
  9736 ;;		Unchanged: 0/0
  9737 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9738 ;;      Params:         0       2       0       0       0
  9739 ;;      Locals:         0       2       0       0       0
  9740 ;;      Temps:          0       3       0       0       0
  9741 ;;      Totals:         0       7       0       0       0
  9742 ;;Total ram usage:        7 bytes
  9743 ;; Hardware stack levels used:    1
  9744 ;; Hardware stack levels required when called:    4
  9745 ;; This function calls:
  9746 ;;		_output_putch
  9747 ;; This function is called by:
  9748 ;;		_calibrate
  9749 ;;		_measure_capacitance
  9750 ;;		_measure_inductance
  9751 ;; This function uses a non-reentrant model
  9752 ;;
  9753                           
  9754                           
  9755                           ;psect for function _put_str
  9756  0FAD                     _put_str:	
  9757                           
  9758                           ;print.c: 222: int i;
  9759                           ;print.c: 224: for(i = 0; s[i]; i++) {
  9760                           
  9761                           ;incstack = 0
  9762                           ; Regs used in _put_str: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  9763  0FAD  01A9               	clrf	put_str@i
  9764  0FAE  01AA               	clrf	put_str@i+1
  9765  0FAF                     l4406:	
  9766  0FAF  0829               	movf	put_str@i,w
  9767  0FB0  0724               	addwf	put_str@s,w
  9768  0FB1  00A7               	movwf	??_put_str+1
  9769  0FB2  0825               	movf	put_str@s+1,w
  9770  0FB3  00A6               	movwf	??_put_str
  9771  0FB4  1803               	skipnc
  9772  0FB5  0AA6               	incf	??_put_str,f
  9773  0FB6  1BA9               	btfsc	put_str@i,7
  9774  0FB7  03A6               	decf	??_put_str,f
  9775  0FB8  1283               	bcf	3,5	;RP0=0, select bank0
  9776  0FB9  1303               	bcf	3,6	;RP1=0, select bank0
  9777  0FBA  0826               	movf	??_put_str,w
  9778  0FBB  00A8               	movwf	??_put_str+2
  9779  0FBC  00FF               	movwf	127
  9780  0FBD  0827               	movf	??_put_str+1,w
  9781  0FBE  0084               	movwf	4
  9782  0FBF  160A  158A  2000  120A  158A  	fcall	stringtab
  9783  0FC4  3A00               	xorlw	0
  9784  0FC5  1903               	btfsc	3,2
  9785  0FC6  0008               	return
  9786                           
  9787                           ;print.c: 225: output_putch(s[i]);
  9788  0FC7  0829               	movf	put_str@i,w
  9789  0FC8  0724               	addwf	put_str@s,w
  9790  0FC9  00A7               	movwf	??_put_str+1
  9791  0FCA  0825               	movf	put_str@s+1,w
  9792  0FCB  00A6               	movwf	??_put_str
  9793  0FCC  1803               	skipnc
  9794  0FCD  0AA6               	incf	??_put_str,f
  9795  0FCE  1BA9               	btfsc	put_str@i,7
  9796  0FCF  03A6               	decf	??_put_str,f
  9797  0FD0  1283               	bcf	3,5	;RP0=0, select bank0
  9798  0FD1  1303               	bcf	3,6	;RP1=0, select bank0
  9799  0FD2  0826               	movf	??_put_str,w
  9800  0FD3  00A8               	movwf	??_put_str+2
  9801  0FD4  00FF               	movwf	127
  9802  0FD5  0827               	movf	??_put_str+1,w
  9803  0FD6  0084               	movwf	4
  9804  0FD7  160A  158A  2000  120A  158A  	fcall	stringtab
  9805  0FDC  27E4  120A  158A   	fcall	_output_putch
  9806  0FDF  1283               	bcf	3,5	;RP0=0, select bank0
  9807  0FE0  0AA9               	incf	put_str@i,f
  9808  0FE1  1903               	skipnz
  9809  0FE2  0AAA               	incf	put_str@i+1,f
  9810  0FE3  2FAF               	goto	l4406
  9811  0FE4                     __end_of_put_str:	
  9812  0FE4                     __ptext34:	
  9813 ;; *************** function _output_putch *****************
  9814 ;; Defined at:
  9815 ;;		line 208 in file "../../../src/print.c"
  9816 ;; Parameters:    Size  Location     Type
  9817 ;;  c               1    wreg     unsigned char 
  9818 ;; Auto vars:     Size  Location     Type
  9819 ;;  c               1    2[BANK0 ] unsigned char 
  9820 ;; Return value:  Size  Location     Type
  9821 ;;		None               void
  9822 ;; Registers used:
  9823 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  9824 ;; Tracked objects:
  9825 ;;		On entry : 300/0
  9826 ;;		On exit  : B00/900
  9827 ;;		Unchanged: 0/0
  9828 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9829 ;;      Params:         0       0       0       0       0
  9830 ;;      Locals:         0       1       0       0       0
  9831 ;;      Temps:          0       0       0       0       0
  9832 ;;      Totals:         0       1       0       0       0
  9833 ;;Total ram usage:        1 bytes
  9834 ;; Hardware stack levels used:    1
  9835 ;; Hardware stack levels required when called:    3
  9836 ;; This function calls:
  9837 ;;		_lcd_send
  9838 ;;		_ser_putch
  9839 ;; This function is called by:
  9840 ;;		_put_str
  9841 ;; This function uses a non-reentrant model
  9842 ;;
  9843                           
  9844                           
  9845                           ;psect for function _output_putch
  9846  0FE4                     _output_putch:	
  9847                           
  9848                           ;incstack = 0
  9849                           ; Regs used in _output_putch: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  9850                           ;output_putch@c stored from wreg
  9851  0FE4  00A3               	movwf	output_putch@c
  9852                           
  9853                           ;print.c: 210: lcd_send((c), 1);
  9854  0FE5  01A1               	clrf	lcd_send@mode
  9855  0FE6  0AA1               	incf	lcd_send@mode,f
  9856  0FE7  27EE               	fcall	_lcd_send
  9857                           
  9858                           ;print.c: 213: ser_putch(c);
  9859  0FE8  1283               	bcf	3,5	;RP0=0, select bank0
  9860  0FE9  1303               	bcf	3,6	;RP1=0, select bank0
  9861  0FEA  0823               	movf	output_putch@c,w
  9862  0FEB  160A  118A  2C40   	ljmp	_ser_putch
  9863  0FEE                     __end_of_output_putch:	
  9864  0FEE                     __ptext49:	
  9865 ;; *************** function _lcd_send *****************
  9866 ;; Defined at:
  9867 ;;		line 103 in file "../../../lib/lcd44780.c"
  9868 ;; Parameters:    Size  Location     Type
  9869 ;;  value           1    wreg     unsigned char 
  9870 ;;  mode            1    0[BANK0 ] unsigned char 
  9871 ;; Auto vars:     Size  Location     Type
  9872 ;;  value           1    1[BANK0 ] unsigned char 
  9873 ;; Return value:  Size  Location     Type
  9874 ;;		None               void
  9875 ;; Registers used:
  9876 ;;		wreg, status,2, status,0, pclath, cstack
  9877 ;; Tracked objects:
  9878 ;;		On entry : 300/0
  9879 ;;		On exit  : 0/0
  9880 ;;		Unchanged: 0/0
  9881 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9882 ;;      Params:         0       1       0       0       0
  9883 ;;      Locals:         0       1       0       0       0
  9884 ;;      Temps:          0       0       0       0       0
  9885 ;;      Totals:         0       2       0       0       0
  9886 ;;Total ram usage:        2 bytes
  9887 ;; Hardware stack levels used:    1
  9888 ;; Hardware stack levels required when called:    2
  9889 ;; This function calls:
  9890 ;;		_lcd_write4bits
  9891 ;; This function is called by:
  9892 ;;		_output_putch
  9893 ;;		_lcd_command
  9894 ;;		_lcd_puts
  9895 ;;		_calibrate
  9896 ;; This function uses a non-reentrant model
  9897 ;;
  9898                           
  9899                           
  9900                           ;psect for function _lcd_send
  9901  0FEE                     _lcd_send:	
  9902                           
  9903                           ;incstack = 0
  9904                           ; Regs used in _lcd_send: [wreg+status,2+status,0+pclath+cstack]
  9905                           ;lcd_send@value stored from wreg
  9906  0FEE  00A2               	movwf	lcd_send@value
  9907                           
  9908                           ;lcd44780.c: 104: if(mode) {
  9909  0FEF  0821               	movf	lcd_send@mode,w
  9910  0FF0  1903               	btfsc	3,2
  9911  0FF1  2FF4               	goto	l303
  9912                           
  9913                           ;lcd44780.c: 105: PORTB |= 0b0100;
  9914  0FF2  1506               	bsf	6,2	;volatile
  9915                           
  9916                           ;lcd44780.c: 106: } else {
  9917  0FF3  2FF5               	goto	l3948
  9918  0FF4                     l303:	
  9919                           
  9920                           ;lcd44780.c: 107: PORTB &= ~0b0100;
  9921  0FF4  1106               	bcf	6,2	;volatile
  9922  0FF5                     l3948:	
  9923                           
  9924                           ;lcd44780.c: 108: }
  9925                           ;lcd44780.c: 115: {
  9926                           ;lcd44780.c: 116: lcd_write4bits(value >> 4);
  9927  0FF5  0E22               	swapf	lcd_send@value,w
  9928  0FF6  390F               	andlw	15
  9929  0FF7  120A  118A  23D5   	fcall	_lcd_write4bits
  9930                           
  9931                           ;lcd44780.c: 117: lcd_write4bits(value);
  9932  0FFA  1283               	bcf	3,5	;RP0=0, select bank0
  9933  0FFB  1303               	bcf	3,6	;RP1=0, select bank0
  9934  0FFC  0822               	movf	lcd_send@value,w
  9935  0FFD  120A  118A  2BD5   	ljmp	_lcd_write4bits
  9936  1000                     __end_of_lcd_send:	
  9937                           
  9938                           	psect	text30
  9939  0018                     __ptext30:	
  9940 ;; *************** function _lcd_init *****************
  9941 ;; Defined at:
  9942 ;;		line 484 in file "../../../lib/lcd44780.c"
  9943 ;; Parameters:    Size  Location     Type
  9944 ;;  fourbitmode     1    wreg     unsigned char 
  9945 ;; Auto vars:     Size  Location     Type
  9946 ;;  fourbitmode     1    0[BANK0 ] unsigned char 
  9947 ;; Return value:  Size  Location     Type
  9948 ;;		None               void
  9949 ;; Registers used:
  9950 ;;		wreg, status,2, status,0
  9951 ;; Tracked objects:
  9952 ;;		On entry : B00/100
  9953 ;;		On exit  : B00/0
  9954 ;;		Unchanged: 800/0
  9955 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9956 ;;      Params:         0       0       0       0       0
  9957 ;;      Locals:         0       3       0       0       0
  9958 ;;      Temps:          0       0       0       0       0
  9959 ;;      Totals:         0       3       0       0       0
  9960 ;;Total ram usage:        3 bytes
  9961 ;; Hardware stack levels used:    1
  9962 ;; Hardware stack levels required when called:    1
  9963 ;; This function calls:
  9964 ;;		Nothing
  9965 ;; This function is called by:
  9966 ;;		_main
  9967 ;; This function uses a non-reentrant model
  9968 ;;
  9969                           
  9970                           
  9971                           ;psect for function _lcd_init
  9972  0018                     _lcd_init:	
  9973                           
  9974                           ;incstack = 0
  9975                           ; Regs used in _lcd_init: [wreg+status,2+status,0]
  9976                           ;lcd_init@fourbitmode stored from wreg
  9977  0018  1283               	bcf	3,5	;RP0=0, select bank0
  9978  0019  00A1               	movwf	lcd_init@fourbitmode
  9979                           
  9980                           ;lcd44780.c: 486: LCD_ctrl = 0;
  9981  001A  1683               	bsf	3,5	;RP0=1, select bank3
  9982  001B  1703               	bsf	3,6	;RP1=1, select bank3
  9983  001C  01A6               	clrf	_LCD_ctrl^(0+384)
  9984                           
  9985                           ;lcd44780.c: 487: LCD_function = (fourbitmode ? 0x00 : 0x10);
  9986  001D  1283               	bcf	3,5	;RP0=0, select bank0
  9987  001E  1303               	bcf	3,6	;RP1=0, select bank0
  9988  001F  0821               	movf	lcd_init@fourbitmode,w
  9989  0020  1D03               	btfss	3,2
  9990  0021  2825               	goto	l4560
  9991  0022  3010               	movlw	16
  9992  0023  00A2               	movwf	_lcd_init$321
  9993  0024  2826               	goto	L13
  9994  0025                     l4560:	
  9995  0025  01A2               	clrf	_lcd_init$321
  9996  0026                     L13:	
  9997  0026  01A3               	clrf	_lcd_init$321+1
  9998  0027  0822               	movf	_lcd_init$321,w
  9999  0028  00F6               	movwf	_LCD_function
 10000                           
 10001                           ;lcd44780.c: 489: LCD_lines = 0;
 10002  0029  1683               	bsf	3,5	;RP0=1, select bank3
 10003  002A  1703               	bsf	3,6	;RP1=1, select bank3
 10004  002B  01A7               	clrf	_LCD_lines^(0+384)
 10005                           
 10006                           ;lcd44780.c: 491: LCD_mode = 0;
 10007  002C  01A8               	clrf	_LCD_mode^(0+384)
 10008                           
 10009                           ;lcd44780.c: 493: TRISB &= ~0b0100;
 10010  002D  1303               	bcf	3,6	;RP1=0, select bank1
 10011  002E  1106               	bcf	6,2	;volatile
 10012                           
 10013                           ;lcd44780.c: 494: PORTB &= ~0b0100;
 10014  002F  1283               	bcf	3,5	;RP0=0, select bank0
 10015  0030  1106               	bcf	6,2	;volatile
 10016                           
 10017                           ;lcd44780.c: 499: TRISB &= ~0b1000;
 10018  0031  1683               	bsf	3,5	;RP0=1, select bank1
 10019  0032  1186               	bcf	6,3	;volatile
 10020                           
 10021                           ;lcd44780.c: 500: PORTB &= ~0b1000;
 10022  0033  1283               	bcf	3,5	;RP0=0, select bank0
 10023  0034  1186               	bcf	6,3	;volatile
 10024                           
 10025                           ;lcd44780.c: 502: PORTB &= ~0b11110000;
 10026  0035  300F               	movlw	15
 10027  0036  0586               	andwf	6,f	;volatile
 10028  0037  0008               	return
 10029  0038                     __end_of_lcd_init:	
 10030                           
 10031                           	psect	text32
 10032  013C                     __ptext32:	
 10033 ;; *************** function _calibrate *****************
 10034 ;; Defined at:
 10035 ;;		line 25 in file "../../../lib/../src/measure.c"
 10036 ;; Parameters:    Size  Location     Type
 10037 ;;		None
 10038 ;; Auto vars:     Size  Location     Type
 10039 ;;  i               1   58[BANK0 ] unsigned char 
 10040 ;; Return value:  Size  Location     Type
 10041 ;;		None               void
 10042 ;; Registers used:
 10043 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 10044 ;; Tracked objects:
 10045 ;;		On entry : 0/0
 10046 ;;		On exit  : 300/0
 10047 ;;		Unchanged: 0/0
 10048 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10049 ;;      Params:         0       0       0       0       0
 10050 ;;      Locals:         0       1       0       0       0
 10051 ;;      Temps:          0       0       0       0       0
 10052 ;;      Totals:         0       1       0       0       0
 10053 ;;Total ram usage:        1 bytes
 10054 ;; Hardware stack levels used:    1
 10055 ;; Hardware stack levels required when called:    6
 10056 ;; This function calls:
 10057 ;;		___lwtofl
 10058 ;;		_delay10ms
 10059 ;;		_lcd_clear
 10060 ;;		_lcd_gotoxy
 10061 ;;		_lcd_send
 10062 ;;		_measure_freq
 10063 ;;		_put_str
 10064 ;;		_ser_puts
 10065 ;; This function is called by:
 10066 ;;		_main
 10067 ;; This function uses a non-reentrant model
 10068 ;;
 10069                           
 10070                           
 10071                           ;psect for function _calibrate
 10072  013C                     _calibrate:	
 10073                           
 10074                           ;measure.c: 26: uint8_t i;
 10075                           ;measure.c: 29: lcd_clear();
 10076                           
 10077                           ;incstack = 0
 10078                           ; Regs used in _calibrate: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
 10079  013C  22CB               	fcall	_lcd_clear
 10080                           
 10081                           ;measure.c: 31: lcd_gotoxy(0, 0);
 10082  013D  1283               	bcf	3,5	;RP0=0, select bank0
 10083  013E  1303               	bcf	3,6	;RP1=0, select bank0
 10084  013F  3000               	movlw	0
 10085  0140  01A4               	clrf	lcd_gotoxy@row
 10086  0141  120A  158A  277C  120A  118A  	fcall	_lcd_gotoxy
 10087                           
 10088                           ;measure.c: 32: put_str("Calibrating");
 10089  0146  309A               	movlw	low (STR_23| (0+32768))
 10090  0147  1283               	bcf	3,5	;RP0=0, select bank0
 10091  0148  1303               	bcf	3,6	;RP1=0, select bank0
 10092  0149  00A4               	movwf	put_str@s
 10093  014A  3098               	movlw	high (STR_23| (0+32768))
 10094  014B  00A5               	movwf	put_str@s+1
 10095  014C  120A  158A  27AD  120A  118A  	fcall	_put_str
 10096  0151  3000               	movlw	0
 10097                           
 10098                           ;measure.c: 34: lcd_gotoxy(0, 1);
 10099  0152  01A4               	clrf	lcd_gotoxy@row
 10100  0153  0AA4               	incf	lcd_gotoxy@row,f
 10101  0154  120A  158A  277C  120A  118A  	fcall	_lcd_gotoxy
 10102                           
 10103                           ;measure.c: 35: ser_puts("\r\n");
 10104  0159  30F4               	movlw	low (STR_9| (0+32768))
 10105  015A  1283               	bcf	3,5	;RP0=0, select bank0
 10106  015B  1303               	bcf	3,6	;RP1=0, select bank0
 10107  015C  00A1               	movwf	ser_puts@s
 10108  015D  3098               	movlw	high (STR_9| (0+32768))
 10109  015E  00A2               	movwf	ser_puts@s+1
 10110  015F  160A  118A  2423  120A  118A  	fcall	_ser_puts
 10111                           
 10112                           ;measure.c: 36: put_str("please wait...");
 10113  0164  307E               	movlw	low (STR_25| (0+32768))
 10114  0165  00A4               	movwf	put_str@s
 10115  0166  3098               	movlw	high (STR_25| (0+32768))
 10116  0167  00A5               	movwf	put_str@s+1
 10117  0168  120A  158A  27AD  120A  118A  	fcall	_put_str
 10118                           
 10119                           ;measure.c: 39: PORTC &= ~(1 << 5);
 10120  016D  1287               	bcf	7,5	;volatile
 10121                           
 10122                           ;measure.c: 41: F1 = (double)measure_freq();
 10123  016E  2220               	fcall	_measure_freq
 10124  016F  0852               	movf	?_measure_freq+1,w
 10125  0170  00D8               	movwf	___lwtofl@c+1
 10126  0171  0851               	movf	?_measure_freq,w
 10127  0172  00D7               	movwf	___lwtofl@c
 10128  0173  160A  118A  27ED  120A  118A  	fcall	___lwtofl
 10129  0178  085A               	movf	?___lwtofl+3,w
 10130  0179  1683               	bsf	3,5	;RP0=1, select bank3
 10131  017A  1703               	bsf	3,6	;RP1=1, select bank3
 10132  017B  00BF               	movwf	(_F1+3)^(0+384)
 10133  017C  1283               	bcf	3,5	;RP0=0, select bank0
 10134  017D  1303               	bcf	3,6	;RP1=0, select bank0
 10135  017E  0859               	movf	?___lwtofl+2,w
 10136  017F  1683               	bsf	3,5	;RP0=1, select bank3
 10137  0180  1703               	bsf	3,6	;RP1=1, select bank3
 10138  0181  00BE               	movwf	(_F1+2)^(0+384)
 10139  0182  1283               	bcf	3,5	;RP0=0, select bank0
 10140  0183  1303               	bcf	3,6	;RP1=0, select bank0
 10141  0184  0858               	movf	?___lwtofl+1,w
 10142  0185  1683               	bsf	3,5	;RP0=1, select bank3
 10143  0186  1703               	bsf	3,6	;RP1=1, select bank3
 10144  0187  00BD               	movwf	(_F1+1)^(0+384)
 10145  0188  1283               	bcf	3,5	;RP0=0, select bank0
 10146  0189  1303               	bcf	3,6	;RP1=0, select bank0
 10147  018A  0857               	movf	?___lwtofl,w
 10148  018B  1683               	bsf	3,5	;RP0=1, select bank3
 10149  018C  1703               	bsf	3,6	;RP1=1, select bank3
 10150  018D  00BC               	movwf	_F1^(0+384)
 10151                           
 10152                           ;measure.c: 42: delay10ms(50);
 10153  018E  3032               	movlw	50
 10154  018F  22CA  120A  118A   	fcall	_delay10ms
 10155                           
 10156                           ;measure.c: 44: F1 = (double)measure_freq();
 10157  0192  2220               	fcall	_measure_freq
 10158  0193  0852               	movf	?_measure_freq+1,w
 10159  0194  00D8               	movwf	___lwtofl@c+1
 10160  0195  0851               	movf	?_measure_freq,w
 10161  0196  00D7               	movwf	___lwtofl@c
 10162  0197  160A  118A  27ED  120A  118A  	fcall	___lwtofl
 10163  019C  085A               	movf	?___lwtofl+3,w
 10164  019D  1683               	bsf	3,5	;RP0=1, select bank3
 10165  019E  1703               	bsf	3,6	;RP1=1, select bank3
 10166  019F  00BF               	movwf	(_F1+3)^(0+384)
 10167  01A0  1283               	bcf	3,5	;RP0=0, select bank0
 10168  01A1  1303               	bcf	3,6	;RP1=0, select bank0
 10169  01A2  0859               	movf	?___lwtofl+2,w
 10170  01A3  1683               	bsf	3,5	;RP0=1, select bank3
 10171  01A4  1703               	bsf	3,6	;RP1=1, select bank3
 10172  01A5  00BE               	movwf	(_F1+2)^(0+384)
 10173  01A6  1283               	bcf	3,5	;RP0=0, select bank0
 10174  01A7  1303               	bcf	3,6	;RP1=0, select bank0
 10175  01A8  0858               	movf	?___lwtofl+1,w
 10176  01A9  1683               	bsf	3,5	;RP0=1, select bank3
 10177  01AA  1703               	bsf	3,6	;RP1=1, select bank3
 10178  01AB  00BD               	movwf	(_F1+1)^(0+384)
 10179  01AC  1283               	bcf	3,5	;RP0=0, select bank0
 10180  01AD  1303               	bcf	3,6	;RP1=0, select bank0
 10181  01AE  0857               	movf	?___lwtofl,w
 10182  01AF  1683               	bsf	3,5	;RP0=1, select bank3
 10183  01B0  1703               	bsf	3,6	;RP1=1, select bank3
 10184  01B1  00BC               	movwf	_F1^(0+384)
 10185                           
 10186                           ;measure.c: 45: PORTC |= (1 << 5);
 10187  01B2  1283               	bcf	3,5	;RP0=0, select bank0
 10188  01B3  1303               	bcf	3,6	;RP1=0, select bank0
 10189  01B4  1687               	bsf	7,5	;volatile
 10190                           
 10191                           ;measure.c: 47: F2 = (double)measure_freq();
 10192  01B5  2220               	fcall	_measure_freq
 10193  01B6  0852               	movf	?_measure_freq+1,w
 10194  01B7  00D8               	movwf	___lwtofl@c+1
 10195  01B8  0851               	movf	?_measure_freq,w
 10196  01B9  00D7               	movwf	___lwtofl@c
 10197  01BA  160A  118A  27ED  120A  118A  	fcall	___lwtofl
 10198  01BF  085A               	movf	?___lwtofl+3,w
 10199  01C0  1683               	bsf	3,5	;RP0=1, select bank3
 10200  01C1  1703               	bsf	3,6	;RP1=1, select bank3
 10201  01C2  0093               	movwf	(_F2+3)^(0+384)
 10202  01C3  1283               	bcf	3,5	;RP0=0, select bank0
 10203  01C4  1303               	bcf	3,6	;RP1=0, select bank0
 10204  01C5  0859               	movf	?___lwtofl+2,w
 10205  01C6  1683               	bsf	3,5	;RP0=1, select bank3
 10206  01C7  1703               	bsf	3,6	;RP1=1, select bank3
 10207  01C8  0092               	movwf	(_F2+2)^(0+384)
 10208  01C9  1283               	bcf	3,5	;RP0=0, select bank0
 10209  01CA  1303               	bcf	3,6	;RP1=0, select bank0
 10210  01CB  0858               	movf	?___lwtofl+1,w
 10211  01CC  1683               	bsf	3,5	;RP0=1, select bank3
 10212  01CD  1703               	bsf	3,6	;RP1=1, select bank3
 10213  01CE  0091               	movwf	(_F2+1)^(0+384)
 10214  01CF  1283               	bcf	3,5	;RP0=0, select bank0
 10215  01D0  1303               	bcf	3,6	;RP1=0, select bank0
 10216  01D1  0857               	movf	?___lwtofl,w
 10217  01D2  1683               	bsf	3,5	;RP0=1, select bank3
 10218  01D3  1703               	bsf	3,6	;RP1=1, select bank3
 10219  01D4  0090               	movwf	_F2^(0+384)
 10220                           
 10221                           ;measure.c: 48: delay10ms(50);
 10222  01D5  3032               	movlw	50
 10223  01D6  22CA  120A  118A   	fcall	_delay10ms
 10224                           
 10225                           ;measure.c: 50: F2 = (double)measure_freq();
 10226  01D9  2220               	fcall	_measure_freq
 10227  01DA  0852               	movf	?_measure_freq+1,w
 10228  01DB  00D8               	movwf	___lwtofl@c+1
 10229  01DC  0851               	movf	?_measure_freq,w
 10230  01DD  00D7               	movwf	___lwtofl@c
 10231  01DE  160A  118A  27ED  120A  118A  	fcall	___lwtofl
 10232  01E3  085A               	movf	?___lwtofl+3,w
 10233  01E4  1683               	bsf	3,5	;RP0=1, select bank3
 10234  01E5  1703               	bsf	3,6	;RP1=1, select bank3
 10235  01E6  0093               	movwf	(_F2+3)^(0+384)
 10236  01E7  1283               	bcf	3,5	;RP0=0, select bank0
 10237  01E8  1303               	bcf	3,6	;RP1=0, select bank0
 10238  01E9  0859               	movf	?___lwtofl+2,w
 10239  01EA  1683               	bsf	3,5	;RP0=1, select bank3
 10240  01EB  1703               	bsf	3,6	;RP1=1, select bank3
 10241  01EC  0092               	movwf	(_F2+2)^(0+384)
 10242  01ED  1283               	bcf	3,5	;RP0=0, select bank0
 10243  01EE  1303               	bcf	3,6	;RP1=0, select bank0
 10244  01EF  0858               	movf	?___lwtofl+1,w
 10245  01F0  1683               	bsf	3,5	;RP0=1, select bank3
 10246  01F1  1703               	bsf	3,6	;RP1=1, select bank3
 10247  01F2  0091               	movwf	(_F2+1)^(0+384)
 10248  01F3  1283               	bcf	3,5	;RP0=0, select bank0
 10249  01F4  1303               	bcf	3,6	;RP1=0, select bank0
 10250  01F5  0857               	movf	?___lwtofl,w
 10251  01F6  1683               	bsf	3,5	;RP0=1, select bank3
 10252  01F7  1703               	bsf	3,6	;RP1=1, select bank3
 10253  01F8  0090               	movwf	_F2^(0+384)
 10254                           
 10255                           ;measure.c: 51: PORTC &= ~(1 << 5);
 10256  01F9  1283               	bcf	3,5	;RP0=0, select bank0
 10257  01FA  1303               	bcf	3,6	;RP1=0, select bank0
 10258  01FB  1287               	bcf	7,5	;volatile
 10259  01FC  300B               	movlw	11
 10260                           
 10261                           ;measure.c: 54: lcd_gotoxy(11, 0);
 10262  01FD  01A4               	clrf	lcd_gotoxy@row
 10263  01FE  120A  158A  277C  120A  118A  	fcall	_lcd_gotoxy
 10264                           
 10265                           ;measure.c: 55: for(i = 0; i < 6; i++) {
 10266  0203  1283               	bcf	3,5	;RP0=0, select bank0
 10267  0204  1303               	bcf	3,6	;RP1=0, select bank0
 10268  0205  01DB               	clrf	calibrate@i
 10269  0206                     l4680:	
 10270  0206  303D               	movlw	61
 10271                           
 10272                           ;measure.c: 56: lcd_send(('='), 1);
 10273  0207  01A1               	clrf	lcd_send@mode
 10274  0208  0AA1               	incf	lcd_send@mode,f
 10275  0209  120A  158A  27EE  120A  118A  	fcall	_lcd_send
 10276                           
 10277                           ;measure.c: 58: delay10ms(28);
 10278  020E  301C               	movlw	28
 10279  020F  22CA  120A  118A   	fcall	_delay10ms
 10280  0212  1283               	bcf	3,5	;RP0=0, select bank0
 10281  0213  1303               	bcf	3,6	;RP1=0, select bank0
 10282  0214  3006               	movlw	6
 10283  0215  0ADB               	incf	calibrate@i,f
 10284  0216  025B               	subwf	calibrate@i,w
 10285  0217  1C03               	skipc
 10286  0218  2A06               	goto	l4680
 10287                           
 10288                           ;measure.c: 59: }
 10289                           ;measure.c: 61: ser_puts("\r\n");
 10290  0219  30F4               	movlw	low (STR_9| (0+32768))
 10291  021A  00A1               	movwf	ser_puts@s
 10292  021B  3098               	movlw	high (STR_9| (0+32768))
 10293  021C  00A2               	movwf	ser_puts@s+1
 10294  021D  160A  118A  2C23   	ljmp	l4096
 10295  0220                     __end_of_calibrate:	
 10296  0220                     __ptext35:	
 10297 ;; *************** function _measure_freq *****************
 10298 ;; Defined at:
 10299 ;;		line 68 in file "../../../lib/../src/measure.c"
 10300 ;; Parameters:    Size  Location     Type
 10301 ;;		None
 10302 ;; Auto vars:     Size  Location     Type
 10303 ;;  count           2   52[BANK0 ] unsigned int 
 10304 ;; Return value:  Size  Location     Type
 10305 ;;                  2   48[BANK0 ] unsigned short 
 10306 ;; Registers used:
 10307 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 10308 ;; Tracked objects:
 10309 ;;		On entry : 0/0
 10310 ;;		On exit  : 300/0
 10311 ;;		Unchanged: 0/0
 10312 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10313 ;;      Params:         0       2       0       0       0
 10314 ;;      Locals:         0       2       0       0       0
 10315 ;;      Temps:          0       2       0       0       0
 10316 ;;      Totals:         0       6       0       0       0
 10317 ;;Total ram usage:        6 bytes
 10318 ;; Hardware stack levels used:    1
 10319 ;; Hardware stack levels required when called:    5
 10320 ;; This function calls:
 10321 ;;		_buffer_init
 10322 ;;		_buffer_puts
 10323 ;;		_format_number
 10324 ;;		_lcd_gotoxy
 10325 ;;		_print_buffer
 10326 ;;		_timer0_read_ps
 10327 ;; This function is called by:
 10328 ;;		_calibrate
 10329 ;;		_measure_capacitance
 10330 ;;		_measure_inductance
 10331 ;; This function uses a non-reentrant model
 10332 ;;
 10333                           
 10334                           
 10335                           ;psect for function _measure_freq
 10336  0220                     _measure_freq:	
 10337                           
 10338                           ;measure.c: 69: uint16_t count;
 10339                           ;measure.c: 71: INTCON &= ~0b100;
 10340                           
 10341                           ;incstack = 0
 10342                           ; Regs used in _measure_freq: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
 10343  0220  110B               	bcf	11,2	;volatile
 10344                           
 10345                           ;measure.c: 75: TRISA &= ~0b00010000;
 10346  0221  1683               	bsf	3,5	;RP0=1, select bank1
 10347  0222  1303               	bcf	3,6	;RP1=0, select bank1
 10348  0223  1205               	bcf	5,4	;volatile
 10349                           
 10350                           ;measure.c: 77: _delay((unsigned long)((20)*(20000000/4000.0)));
 10351  0224  3082               	movlw	130
 10352  0225  1283               	bcf	3,5	;RP0=0, select bank0
 10353  0226  00D4               	movwf	??_measure_freq+1
 10354  0227  30DD               	movlw	221
 10355  0228  00D3               	movwf	??_measure_freq
 10356  0229                     u4477:	
 10357  0229  0BD3               	decfsz	??_measure_freq,f
 10358  022A  2A29               	goto	u4477
 10359  022B  0BD4               	decfsz	??_measure_freq+1,f
 10360  022C  2A29               	goto	u4477
 10361  022D  2A2E               	nop2
 10362                           
 10363                           ;measure.c: 80: TMR0 = 0x00;
 10364  022E  1283               	bcf	3,5	;RP0=0, select bank0
 10365  022F  1303               	bcf	3,6	;RP1=0, select bank0
 10366  0230  0181               	clrf	1	;volatile
 10367                           
 10368                           ;measure.c: 85: _delay((unsigned long)((10)*(20000000/4000.0)));
 10369  0231  3041               	movlw	65
 10370  0232  00D4               	movwf	??_measure_freq+1
 10371  0233  30EE               	movlw	238
 10372  0234  00D3               	movwf	??_measure_freq
 10373  0235                     u4487:	
 10374  0235  0BD3               	decfsz	??_measure_freq,f
 10375  0236  2A35               	goto	u4487
 10376  0237  0BD4               	decfsz	??_measure_freq+1,f
 10377  0238  2A35               	goto	u4487
 10378  0239  0000               	nop
 10379                           
 10380                           ;measure.c: 86: _delay((unsigned long)((10)*(20000000/4000.0)));
 10381  023A  3041               	movlw	65
 10382  023B  1283               	bcf	3,5	;RP0=0, select bank0
 10383  023C  1303               	bcf	3,6	;RP1=0, select bank0
 10384  023D  00D4               	movwf	??_measure_freq+1
 10385  023E  30EE               	movlw	238
 10386  023F  00D3               	movwf	??_measure_freq
 10387  0240                     u4497:	
 10388  0240  0BD3               	decfsz	??_measure_freq,f
 10389  0241  2A40               	goto	u4497
 10390  0242  0BD4               	decfsz	??_measure_freq+1,f
 10391  0243  2A40               	goto	u4497
 10392  0244  0000               	nop
 10393                           
 10394                           ;measure.c: 87: _delay((unsigned long)((10)*(20000000/4000.0)));
 10395  0245  3041               	movlw	65
 10396  0246  1283               	bcf	3,5	;RP0=0, select bank0
 10397  0247  1303               	bcf	3,6	;RP1=0, select bank0
 10398  0248  00D4               	movwf	??_measure_freq+1
 10399  0249  30EE               	movlw	238
 10400  024A  00D3               	movwf	??_measure_freq
 10401  024B                     u4507:	
 10402  024B  0BD3               	decfsz	??_measure_freq,f
 10403  024C  2A4B               	goto	u4507
 10404  024D  0BD4               	decfsz	??_measure_freq+1,f
 10405  024E  2A4B               	goto	u4507
 10406  024F  0000               	nop
 10407                           
 10408                           ;measure.c: 88: _delay((unsigned long)((10)*(20000000/4000.0)));
 10409  0250  3041               	movlw	65
 10410  0251  1283               	bcf	3,5	;RP0=0, select bank0
 10411  0252  1303               	bcf	3,6	;RP1=0, select bank0
 10412  0253  00D4               	movwf	??_measure_freq+1
 10413  0254  30EE               	movlw	238
 10414  0255  00D3               	movwf	??_measure_freq
 10415  0256                     u4517:	
 10416  0256  0BD3               	decfsz	??_measure_freq,f
 10417  0257  2A56               	goto	u4517
 10418  0258  0BD4               	decfsz	??_measure_freq+1,f
 10419  0259  2A56               	goto	u4517
 10420  025A  0000               	nop
 10421                           
 10422                           ;measure.c: 89: _delay((unsigned long)((10)*(20000000/4000.0)));
 10423  025B  3041               	movlw	65
 10424  025C  1283               	bcf	3,5	;RP0=0, select bank0
 10425  025D  1303               	bcf	3,6	;RP1=0, select bank0
 10426  025E  00D4               	movwf	??_measure_freq+1
 10427  025F  30EE               	movlw	238
 10428  0260  00D3               	movwf	??_measure_freq
 10429  0261                     u4527:	
 10430  0261  0BD3               	decfsz	??_measure_freq,f
 10431  0262  2A61               	goto	u4527
 10432  0263  0BD4               	decfsz	??_measure_freq+1,f
 10433  0264  2A61               	goto	u4527
 10434  0265  0000               	nop
 10435                           
 10436                           ;measure.c: 90: _delay((unsigned long)((10)*(20000000/4000.0)));
 10437  0266  3041               	movlw	65
 10438  0267  1283               	bcf	3,5	;RP0=0, select bank0
 10439  0268  1303               	bcf	3,6	;RP1=0, select bank0
 10440  0269  00D4               	movwf	??_measure_freq+1
 10441  026A  30EE               	movlw	238
 10442  026B  00D3               	movwf	??_measure_freq
 10443  026C                     u4537:	
 10444  026C  0BD3               	decfsz	??_measure_freq,f
 10445  026D  2A6C               	goto	u4537
 10446  026E  0BD4               	decfsz	??_measure_freq+1,f
 10447  026F  2A6C               	goto	u4537
 10448  0270  0000               	nop
 10449                           
 10450                           ;measure.c: 91: _delay((unsigned long)((10)*(20000000/4000.0)));
 10451  0271  3041               	movlw	65
 10452  0272  1283               	bcf	3,5	;RP0=0, select bank0
 10453  0273  1303               	bcf	3,6	;RP1=0, select bank0
 10454  0274  00D4               	movwf	??_measure_freq+1
 10455  0275  30EE               	movlw	238
 10456  0276  00D3               	movwf	??_measure_freq
 10457  0277                     u4547:	
 10458  0277  0BD3               	decfsz	??_measure_freq,f
 10459  0278  2A77               	goto	u4547
 10460  0279  0BD4               	decfsz	??_measure_freq+1,f
 10461  027A  2A77               	goto	u4547
 10462  027B  0000               	nop
 10463                           
 10464                           ;measure.c: 92: _delay((unsigned long)((10)*(20000000/4000.0)));
 10465  027C  3041               	movlw	65
 10466  027D  1283               	bcf	3,5	;RP0=0, select bank0
 10467  027E  1303               	bcf	3,6	;RP1=0, select bank0
 10468  027F  00D4               	movwf	??_measure_freq+1
 10469  0280  30EE               	movlw	238
 10470  0281  00D3               	movwf	??_measure_freq
 10471  0282                     u4557:	
 10472  0282  0BD3               	decfsz	??_measure_freq,f
 10473  0283  2A82               	goto	u4557
 10474  0284  0BD4               	decfsz	??_measure_freq+1,f
 10475  0285  2A82               	goto	u4557
 10476  0286  0000               	nop
 10477                           
 10478                           ;measure.c: 93: _delay((unsigned long)((10)*(20000000/4000.0)));
 10479  0287  3041               	movlw	65
 10480  0288  1283               	bcf	3,5	;RP0=0, select bank0
 10481  0289  1303               	bcf	3,6	;RP1=0, select bank0
 10482  028A  00D4               	movwf	??_measure_freq+1
 10483  028B  30EE               	movlw	238
 10484  028C  00D3               	movwf	??_measure_freq
 10485  028D                     u4567:	
 10486  028D  0BD3               	decfsz	??_measure_freq,f
 10487  028E  2A8D               	goto	u4567
 10488  028F  0BD4               	decfsz	??_measure_freq+1,f
 10489  0290  2A8D               	goto	u4567
 10490  0291  0000               	nop
 10491                           
 10492                           ;measure.c: 94: _delay((unsigned long)((10)*(20000000/4000.0)));
 10493  0292  3041               	movlw	65
 10494  0293  1283               	bcf	3,5	;RP0=0, select bank0
 10495  0294  1303               	bcf	3,6	;RP1=0, select bank0
 10496  0295  00D4               	movwf	??_measure_freq+1
 10497  0296  30EE               	movlw	238
 10498  0297  00D3               	movwf	??_measure_freq
 10499  0298                     u4577:	
 10500  0298  0BD3               	decfsz	??_measure_freq,f
 10501  0299  2A98               	goto	u4577
 10502  029A  0BD4               	decfsz	??_measure_freq+1,f
 10503  029B  2A98               	goto	u4577
 10504  029C  0000               	nop
 10505                           
 10506                           ;measure.c: 99: TRISA |= 0b00010000;
 10507  029D  1683               	bsf	3,5	;RP0=1, select bank1
 10508  029E  1303               	bcf	3,6	;RP1=0, select bank1
 10509  029F  1605               	bsf	5,4	;volatile
 10510                           
 10511                           ;measure.c: 102: count = timer0_read_ps();
 10512  02A0  2302               	fcall	_timer0_read_ps
 10513  02A1  0875               	movf	?_timer0_read_ps+1,w
 10514  02A2  00D6               	movwf	measure_freq@count+1
 10515  02A3  0874               	movf	?_timer0_read_ps,w
 10516  02A4  00D5               	movwf	measure_freq@count
 10517  02A5  3000               	movlw	0
 10518                           
 10519                           ;measure.c: 105: lcd_gotoxy(0, 1);
 10520  02A6  01A4               	clrf	lcd_gotoxy@row
 10521  02A7  0AA4               	incf	lcd_gotoxy@row,f
 10522  02A8  120A  158A  277C  120A  118A  	fcall	_lcd_gotoxy
 10523                           
 10524                           ;measure.c: 107: buffer_init();
 10525  02AD  22DB  120A  118A   	fcall	_buffer_init
 10526                           
 10527                           ;measure.c: 108: buffer_puts("Freq=");
 10528  02B0  30DB               	movlw	low (STR_27| (0+32768))
 10529  02B1  1283               	bcf	3,5	;RP0=0, select bank0
 10530  02B2  1303               	bcf	3,6	;RP1=0, select bank0
 10531  02B3  00A4               	movwf	buffer_puts@x
 10532  02B4  3098               	movlw	high (STR_27| (0+32768))
 10533  02B5  00A5               	movwf	buffer_puts@x+1
 10534  02B6  22E2               	fcall	_buffer_puts
 10535                           
 10536                           ;measure.c: 109: format_number(count, 10, 5);
 10537  02B7  0856               	movf	measure_freq@count+1,w
 10538  02B8  00A9               	movwf	format_number@n+1
 10539  02B9  0855               	movf	measure_freq@count,w
 10540  02BA  00A8               	movwf	format_number@n
 10541  02BB  300A               	movlw	10
 10542  02BC  00AA               	movwf	format_number@base
 10543  02BD  3005               	movlw	5
 10544  02BE  00AB               	movwf	format_number@pad
 10545  02BF  160A  118A  273E  120A  118A  	fcall	_format_number
 10546                           
 10547                           ;measure.c: 110: print_buffer();
 10548  02C4  23EC               	fcall	_print_buffer
 10549                           
 10550                           ;measure.c: 112: return count;
 10551  02C5  0856               	movf	measure_freq@count+1,w
 10552  02C6  00D2               	movwf	?_measure_freq+1
 10553  02C7  0855               	movf	measure_freq@count,w
 10554  02C8  00D1               	movwf	?_measure_freq
 10555  02C9  0008               	return
 10556  02CA                     __end_of_measure_freq:	
 10557  02CA                     __ptext51:	
 10558 ;; *************** function _delay10ms *****************
 10559 ;; Defined at:
 10560 ;;		line 58 in file "../../../LC-meter.c"
 10561 ;; Parameters:    Size  Location     Type
 10562 ;;  period_10ms     1    wreg     unsigned char 
 10563 ;; Auto vars:     Size  Location     Type
 10564 ;;  period_10ms     1    0[COMMON] unsigned char 
 10565 ;; Return value:  Size  Location     Type
 10566 ;;		None               void
 10567 ;; Registers used:
 10568 ;;		wreg
 10569 ;; Tracked objects:
 10570 ;;		On entry : 0/0
 10571 ;;		On exit  : 0/0
 10572 ;;		Unchanged: 0/0
 10573 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10574 ;;      Params:         0       0       0       0       0
 10575 ;;      Locals:         0       0       0       0       0
 10576 ;;      Temps:          0       0       0       0       0
 10577 ;;      Totals:         0       0       0       0       0
 10578 ;;Total ram usage:        0 bytes
 10579 ;; Hardware stack levels used:    1
 10580 ;; Hardware stack levels required when called:    1
 10581 ;; This function calls:
 10582 ;;		Nothing
 10583 ;; This function is called by:
 10584 ;;		_main
 10585 ;;		_calibrate
 10586 ;; This function uses a non-reentrant model
 10587 ;;
 10588                           
 10589                           
 10590                           ;psect for function _delay10ms
 10591  02CA                     _delay10ms:	
 10592                           
 10593                           ;incstack = 0
 10594                           ; Regs used in _delay10ms: [wreg]
 10595  02CA  0008               	return
 10596  02CB                     __end_of_delay10ms:	
 10597  02CB                     __ptext47:	
 10598 ;; *************** function _lcd_clear *****************
 10599 ;; Defined at:
 10600 ;;		line 287 in file "../../../lib/lcd44780.c"
 10601 ;; Parameters:    Size  Location     Type
 10602 ;;		None
 10603 ;; Auto vars:     Size  Location     Type
 10604 ;;		None
 10605 ;; Return value:  Size  Location     Type
 10606 ;;		None               void
 10607 ;; Registers used:
 10608 ;;		wreg, status,2, status,0, pclath, cstack
 10609 ;; Tracked objects:
 10610 ;;		On entry : 0/0
 10611 ;;		On exit  : 0/0
 10612 ;;		Unchanged: 0/0
 10613 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10614 ;;      Params:         0       0       0       0       0
 10615 ;;      Locals:         0       0       0       0       0
 10616 ;;      Temps:          0       2       0       0       0
 10617 ;;      Totals:         0       2       0       0       0
 10618 ;;Total ram usage:        2 bytes
 10619 ;; Hardware stack levels used:    1
 10620 ;; Hardware stack levels required when called:    4
 10621 ;; This function calls:
 10622 ;;		_lcd_command
 10623 ;; This function is called by:
 10624 ;;		_main
 10625 ;;		_calibrate
 10626 ;; This function uses a non-reentrant model
 10627 ;;
 10628                           
 10629                           
 10630                           ;psect for function _lcd_clear
 10631  02CB                     _lcd_clear:	
 10632                           
 10633                           ;lcd44780.c: 288: lcd_command(0x01);
 10634                           
 10635                           ;incstack = 0
 10636                           ; Regs used in _lcd_clear: [wreg+status,2+status,0+pclath+cstack]
 10637  02CB  3001               	movlw	1
 10638  02CC  23CE  120A  118A   	fcall	_lcd_command
 10639                           
 10640                           ;lcd44780.c: 289: _delay((unsigned long)((2)*(20000000/4000.0)));
 10641  02CF  300D               	movlw	13
 10642  02D0  1283               	bcf	3,5	;RP0=0, select bank0
 10643  02D1  1303               	bcf	3,6	;RP1=0, select bank0
 10644  02D2  00A5               	movwf	??_lcd_clear+1
 10645  02D3  30FB               	movlw	251
 10646  02D4  00A4               	movwf	??_lcd_clear
 10647  02D5                     u4587:	
 10648  02D5  0BA4               	decfsz	??_lcd_clear,f
 10649  02D6  2AD5               	goto	u4587
 10650  02D7  0BA5               	decfsz	??_lcd_clear+1,f
 10651  02D8  2AD5               	goto	u4587
 10652  02D9  2ADA               	nop2
 10653  02DA  0008               	return
 10654  02DB                     __end_of_lcd_clear:	
 10655  02DB                     __ptext46:	
 10656 ;; *************** function _buffer_init *****************
 10657 ;; Defined at:
 10658 ;;		line 10 in file "../../../lib/buffer.c"
 10659 ;; Parameters:    Size  Location     Type
 10660 ;;		None
 10661 ;; Auto vars:     Size  Location     Type
 10662 ;;		None
 10663 ;; Return value:  Size  Location     Type
 10664 ;;		None               void
 10665 ;; Registers used:
 10666 ;;		wreg, status,2, status,0
 10667 ;; Tracked objects:
 10668 ;;		On entry : 0/0
 10669 ;;		On exit  : 300/300
 10670 ;;		Unchanged: 0/0
 10671 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10672 ;;      Params:         0       0       0       0       0
 10673 ;;      Locals:         0       0       0       0       0
 10674 ;;      Temps:          0       0       0       0       0
 10675 ;;      Totals:         0       0       0       0       0
 10676 ;;Total ram usage:        0 bytes
 10677 ;; Hardware stack levels used:    1
 10678 ;; Hardware stack levels required when called:    1
 10679 ;; This function calls:
 10680 ;;		Nothing
 10681 ;; This function is called by:
 10682 ;;		_measure_freq
 10683 ;; This function uses a non-reentrant model
 10684 ;;
 10685                           
 10686                           
 10687                           ;psect for function _buffer_init
 10688  02DB                     _buffer_init:	
 10689                           
 10690                           ;buffer.c: 11: buffer.p = 0;
 10691                           
 10692                           ;incstack = 0
 10693                           ; Regs used in _buffer_init: [wreg+status,2+status,0]
 10694  02DB  30F0               	movlw	-16
 10695  02DC  1683               	bsf	3,5	;RP0=1, select bank3
 10696  02DD  1703               	bsf	3,6	;RP1=1, select bank3
 10697  02DE  05BB               	andwf	(_buffer^(0+384)+16),f
 10698                           
 10699                           ;buffer.c: 12: buffer.n = 0;
 10700  02DF  300F               	movlw	-241
 10701  02E0  05BB               	andwf	(_buffer^(0+384)+16),f
 10702  02E1  0008               	return
 10703  02E2                     __end_of_buffer_init:	
 10704  02E2                     __ptext44:	
 10705 ;; *************** function _buffer_puts *****************
 10706 ;; Defined at:
 10707 ;;		line 57 in file "../../../lib/buffer.c"
 10708 ;; Parameters:    Size  Location     Type
 10709 ;;  x               2    3[BANK0 ] PTR const unsigned char 
 10710 ;;		 -> STR_27(6), 
 10711 ;; Auto vars:     Size  Location     Type
 10712 ;;		None
 10713 ;; Return value:  Size  Location     Type
 10714 ;;                  1    wreg      unsigned char 
 10715 ;; Registers used:
 10716 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 10717 ;; Tracked objects:
 10718 ;;		On entry : 300/0
 10719 ;;		On exit  : 300/0
 10720 ;;		Unchanged: 0/0
 10721 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10722 ;;      Params:         0       2       0       0       0
 10723 ;;      Locals:         0       0       0       0       0
 10724 ;;      Temps:          0       0       0       0       0
 10725 ;;      Totals:         0       2       0       0       0
 10726 ;;Total ram usage:        2 bytes
 10727 ;; Hardware stack levels used:    1
 10728 ;; Hardware stack levels required when called:    2
 10729 ;; This function calls:
 10730 ;;		_buffer_putch
 10731 ;; This function is called by:
 10732 ;;		_measure_freq
 10733 ;; This function uses a non-reentrant model
 10734 ;;
 10735                           
 10736                           
 10737                           ;psect for function _buffer_puts
 10738  02E2                     _buffer_puts:	
 10739  02E2                     l4382:	
 10740                           ;buffer.c: 58: while(*x) {
 10741                           
 10742                           ;incstack = 0
 10743                           ; Regs used in _buffer_puts: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
 10744                           
 10745  02E2  0825               	movf	buffer_puts@x+1,w
 10746  02E3  00FF               	movwf	127
 10747  02E4  0824               	movf	buffer_puts@x,w
 10748  02E5  0084               	movwf	4
 10749  02E6  160A  158A  2000  120A  118A  	fcall	stringtab
 10750  02EB  3A00               	xorlw	0
 10751  02EC  1903               	btfsc	3,2
 10752  02ED  0008               	return
 10753                           
 10754                           ;buffer.c: 59: buffer_putch(*x);
 10755  02EE  0825               	movf	buffer_puts@x+1,w
 10756  02EF  00FF               	movwf	127
 10757  02F0  0824               	movf	buffer_puts@x,w
 10758  02F1  0084               	movwf	4
 10759  02F2  160A  158A  2000  120A  118A  	fcall	stringtab
 10760  02F7  160A  118A  25F9  120A  118A  	fcall	_buffer_putch
 10761                           
 10762                           ;buffer.c: 60: ++x;
 10763  02FC  1283               	bcf	3,5	;RP0=0, select bank0
 10764  02FD  1303               	bcf	3,6	;RP1=0, select bank0
 10765  02FE  0AA4               	incf	buffer_puts@x,f
 10766  02FF  1903               	skipnz
 10767  0300  0AA5               	incf	buffer_puts@x+1,f
 10768  0301  2AE2               	goto	l4382
 10769  0302                     __end_of_buffer_puts:	
 10770  0302                     __ptext36:	
 10771 ;; *************** function _timer0_read_ps *****************
 10772 ;; Defined at:
 10773 ;;		line 64 in file "../../../lib/timer.c"
 10774 ;; Parameters:    Size  Location     Type
 10775 ;;		None
 10776 ;; Auto vars:     Size  Location     Type
 10777 ;;  count           2    5[BANK0 ] unsigned int 
 10778 ;;  prev            1    4[BANK0 ] unsigned char 
 10779 ;; Return value:  Size  Location     Type
 10780 ;;                  2    4[COMMON] unsigned short 
 10781 ;; Registers used:
 10782 ;;		wreg, status,2, status,0, btemp+1
 10783 ;; Tracked objects:
 10784 ;;		On entry : 300/100
 10785 ;;		On exit  : 300/0
 10786 ;;		Unchanged: 0/0
 10787 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10788 ;;      Params:         2       0       0       0       0
 10789 ;;      Locals:         0       3       0       0       0
 10790 ;;      Temps:          0       4       0       0       0
 10791 ;;      Totals:         2       7       0       0       0
 10792 ;;Total ram usage:        9 bytes
 10793 ;; Hardware stack levels used:    1
 10794 ;; Hardware stack levels required when called:    1
 10795 ;; This function calls:
 10796 ;;		Nothing
 10797 ;; This function is called by:
 10798 ;;		_measure_freq
 10799 ;; This function uses a non-reentrant model
 10800 ;;
 10801                           
 10802                           
 10803                           ;psect for function _timer0_read_ps
 10804  0302                     _timer0_read_ps:	
 10805                           
 10806                           ;timer.c: 65: uint8_t prev = TMR0;
 10807                           
 10808                           ;incstack = 0
 10809                           ; Regs used in _timer0_read_ps: [wreg+status,2+status,0+btemp+1]
 10810  0302  1283               	bcf	3,5	;RP0=0, select bank0
 10811  0303  0801               	movf	1,w	;volatile
 10812  0304  00A5               	movwf	timer0_read_ps@prev
 10813                           
 10814                           ;timer.c: 66: uint16_t count = 0;
 10815  0305  01A6               	clrf	timer0_read_ps@count
 10816  0306  01A7               	clrf	timer0_read_ps@count+1
 10817                           
 10818                           ;timer.c: 68: OPTION_REG |= 0x20;
 10819  0307  1683               	bsf	3,5	;RP0=1, select bank1
 10820  0308  1681               	bsf	1,5	;volatile
 10821  0309  2B11               	goto	l4310
 10822  030A                     l4326:	
 10823  030A  3001               	movlw	1
 10824  030B  0227               	subwf	timer0_read_ps@count+1,w
 10825  030C  3000               	movlw	0
 10826  030D  1903               	skipnz
 10827  030E  0226               	subwf	timer0_read_ps@count,w
 10828  030F  1803               	btfsc	3,0
 10829  0310  2B23               	goto	l4328
 10830  0311                     l4310:	
 10831                           
 10832                           ;timer.c: 72: OPTION_REG |= 0x10;
 10833  0311  1683               	bsf	3,5	;RP0=1, select bank1
 10834  0312  1601               	bsf	1,4	;volatile
 10835                           
 10836                           ;timer.c: 74: __nop();
 10837  0313  0000               	nop
 10838                           
 10839                           ;timer.c: 75: __nop();
 10840  0314  0000               	nop
 10841                           
 10842                           ;timer.c: 77: OPTION_REG &= ~0x10;
 10843  0315  1683               	bsf	3,5	;RP0=1, select bank1
 10844  0316  1303               	bcf	3,6	;RP1=0, select bank1
 10845  0317  1201               	bcf	1,4	;volatile
 10846                           
 10847                           ;timer.c: 79: __nop();
 10848  0318  0000               	nop
 10849                           
 10850                           ;timer.c: 80: __nop();
 10851  0319  0000               	nop
 10852                           
 10853                           ;timer.c: 82: ++count;
 10854  031A  1283               	bcf	3,5	;RP0=0, select bank0
 10855  031B  1303               	bcf	3,6	;RP1=0, select bank0
 10856  031C  0AA6               	incf	timer0_read_ps@count,f
 10857  031D  1903               	skipnz
 10858  031E  0AA7               	incf	timer0_read_ps@count+1,f
 10859                           
 10860                           ;timer.c: 85: } while(prev == TMR0 && count <= 255);
 10861  031F  0825               	movf	timer0_read_ps@prev,w
 10862  0320  0601               	xorwf	1,w	;volatile
 10863  0321  1903               	btfsc	3,2
 10864  0322  2B0A               	goto	l4326
 10865  0323                     l4328:	
 10866                           
 10867                           ;timer.c: 87: count = ((prev << 8) + (256 - count));
 10868  0323  0825               	movf	timer0_read_ps@prev,w
 10869  0324  00A1               	movwf	??_timer0_read_ps
 10870  0325  01A2               	clrf	??_timer0_read_ps+1
 10871  0326  00A2               	movwf	??_timer0_read_ps+1
 10872  0327  01A1               	clrf	??_timer0_read_ps
 10873  0328  0826               	movf	timer0_read_ps@count,w
 10874  0329  0221               	subwf	??_timer0_read_ps,w
 10875  032A  00A3               	movwf	??_timer0_read_ps+2
 10876  032B  0827               	movf	timer0_read_ps@count+1,w
 10877  032C  1C03               	skipc
 10878  032D  0A27               	incf	timer0_read_ps@count+1,w
 10879  032E  0222               	subwf	??_timer0_read_ps+1,w
 10880  032F  00A4               	movwf	??_timer0_read_ps+3
 10881  0330  0823               	movf	??_timer0_read_ps+2,w
 10882  0331  3E00               	addlw	0
 10883  0332  00A6               	movwf	timer0_read_ps@count
 10884  0333  0824               	movf	??_timer0_read_ps+3,w
 10885  0334  1803               	skipnc
 10886  0335  3E01               	addlw	1
 10887  0336  3E01               	addlw	1
 10888  0337  00A7               	movwf	timer0_read_ps@count+1
 10889                           
 10890                           ;timer.c: 88: return count;
 10891  0338  00F5               	movwf	?_timer0_read_ps+1
 10892  0339  0826               	movf	timer0_read_ps@count,w
 10893  033A  00F4               	movwf	?_timer0_read_ps
 10894  033B  0008               	return
 10895  033C                     __end_of_timer0_read_ps:	
 10896  033C                     __ptext31:	
 10897 ;; *************** function _lcd_begin *****************
 10898 ;; Defined at:
 10899 ;;		line 411 in file "../../../lib/lcd44780.c"
 10900 ;; Parameters:    Size  Location     Type
 10901 ;;  lines           1    wreg     unsigned char 
 10902 ;;  dotsize         1    3[BANK0 ] unsigned char 
 10903 ;; Auto vars:     Size  Location     Type
 10904 ;;  lines           1    6[BANK0 ] unsigned char 
 10905 ;; Return value:  Size  Location     Type
 10906 ;;		None               void
 10907 ;; Registers used:
 10908 ;;		wreg, status,2, status,0, pclath, cstack
 10909 ;; Tracked objects:
 10910 ;;		On entry : B00/0
 10911 ;;		On exit  : 0/0
 10912 ;;		Unchanged: 0/0
 10913 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10914 ;;      Params:         0       1       0       0       0
 10915 ;;      Locals:         0       1       0       0       0
 10916 ;;      Temps:          0       2       0       0       0
 10917 ;;      Totals:         0       4       0       0       0
 10918 ;;Total ram usage:        4 bytes
 10919 ;; Hardware stack levels used:    1
 10920 ;; Hardware stack levels required when called:    4
 10921 ;; This function calls:
 10922 ;;		_lcd_command
 10923 ;;		_lcd_write4bits
 10924 ;; This function is called by:
 10925 ;;		_main
 10926 ;; This function uses a non-reentrant model
 10927 ;;
 10928                           
 10929                           
 10930                           ;psect for function _lcd_begin
 10931  033C                     _lcd_begin:	
 10932                           
 10933                           ;incstack = 0
 10934                           ; Regs used in _lcd_begin: [wreg+status,2+status,0+pclath+cstack]
 10935                           ;lcd_begin@lines stored from wreg
 10936  033C  00A7               	movwf	lcd_begin@lines
 10937                           
 10938                           ;lcd44780.c: 412: if(lines > 1)
 10939  033D  3002               	movlw	2
 10940  033E  0227               	subwf	lcd_begin@lines,w
 10941  033F  1803               	btfsc	3,0
 10942                           
 10943                           ;lcd44780.c: 413: LCD_function |= 0x08;
 10944  0340  15F6               	bsf	_LCD_function,3
 10945                           
 10946                           ;lcd44780.c: 416: LCD_lines = lines;
 10947  0341  0827               	movf	lcd_begin@lines,w
 10948  0342  1683               	bsf	3,5	;RP0=1, select bank3
 10949  0343  1703               	bsf	3,6	;RP1=1, select bank3
 10950  0344  00A7               	movwf	_LCD_lines^(0+384)
 10951                           
 10952                           ;lcd44780.c: 420: if((dotsize != 0) && (lines == 1))
 10953  0345  1283               	bcf	3,5	;RP0=0, select bank0
 10954  0346  1303               	bcf	3,6	;RP1=0, select bank0
 10955  0347  0824               	movf	lcd_begin@dotsize,w
 10956  0348  1903               	btfsc	3,2
 10957  0349  2B4E               	goto	l4590
 10958  034A  0327               	decf	lcd_begin@lines,w
 10959  034B  1D03               	btfss	3,2
 10960  034C  2B4E               	goto	l4590
 10961                           
 10962                           ;lcd44780.c: 421: LCD_function |= 0x04;
 10963  034D  1576               	bsf	_LCD_function,2
 10964  034E                     l4590:	
 10965                           
 10966                           ;lcd44780.c: 423: _delay((unsigned long)((15)*(20000000/4000.0)));
 10967  034E  3062               	movlw	98
 10968  034F  00A6               	movwf	??_lcd_begin+1
 10969  0350  3065               	movlw	101
 10970  0351  00A5               	movwf	??_lcd_begin
 10971  0352                     u4407:	
 10972  0352  0BA5               	decfsz	??_lcd_begin,f
 10973  0353  2B52               	goto	u4407
 10974  0354  0BA6               	decfsz	??_lcd_begin+1,f
 10975  0355  2B52               	goto	u4407
 10976  0356  2B57               	nop2
 10977                           
 10978                           ;lcd44780.c: 426: PORTB &= ~0b0100;
 10979  0357  1283               	bcf	3,5	;RP0=0, select bank0
 10980  0358  1303               	bcf	3,6	;RP1=0, select bank0
 10981  0359  1106               	bcf	6,2	;volatile
 10982                           
 10983                           ;lcd44780.c: 427: PORTB &= ~0b1000;
 10984  035A  1186               	bcf	6,3	;volatile
 10985                           
 10986                           ;lcd44780.c: 430: if(!(LCD_function & 0x10)) {
 10987  035B  1A76               	btfsc	_LCD_function,4
 10988  035C  2B87               	goto	l4608
 10989                           
 10990                           ;lcd44780.c: 434: lcd_write4bits(0x03);
 10991  035D  3003               	movlw	3
 10992  035E  23D5  120A  118A   	fcall	_lcd_write4bits
 10993                           
 10994                           ;lcd44780.c: 435: _delay((unsigned long)((5)*(20000000/4000.0)));
 10995  0361  3021               	movlw	33
 10996  0362  1283               	bcf	3,5	;RP0=0, select bank0
 10997  0363  1303               	bcf	3,6	;RP1=0, select bank0
 10998  0364  00A6               	movwf	??_lcd_begin+1
 10999  0365  3076               	movlw	118
 11000  0366  00A5               	movwf	??_lcd_begin
 11001  0367                     u4417:	
 11002  0367  0BA5               	decfsz	??_lcd_begin,f
 11003  0368  2B67               	goto	u4417
 11004  0369  0BA6               	decfsz	??_lcd_begin+1,f
 11005  036A  2B67               	goto	u4417
 11006  036B  0000               	nop
 11007                           
 11008                           ;lcd44780.c: 437: lcd_write4bits(0x03);
 11009  036C  3003               	movlw	3
 11010  036D  23D5  120A  118A   	fcall	_lcd_write4bits
 11011                           
 11012                           ;lcd44780.c: 438: _delay((unsigned long)((150)*(20000000/4000000.0)));
 11013  0370  30F9               	movlw	249
 11014  0371  1283               	bcf	3,5	;RP0=0, select bank0
 11015  0372  1303               	bcf	3,6	;RP1=0, select bank0
 11016  0373  00A5               	movwf	??_lcd_begin
 11017  0374                     u4427:	
 11018  0374  0BA5               	decfsz	??_lcd_begin,f
 11019  0375  2B74               	goto	u4427
 11020  0376  2B77               	nop2	;nop
 11021                           
 11022                           ;lcd44780.c: 440: lcd_write4bits(0x03);
 11023  0377  3003               	movlw	3
 11024  0378  23D5  120A  118A   	fcall	_lcd_write4bits
 11025                           
 11026                           ;lcd44780.c: 441: _delay((unsigned long)((150)*(20000000/4000000.0)));
 11027  037B  30F9               	movlw	249
 11028  037C  1283               	bcf	3,5	;RP0=0, select bank0
 11029  037D  1303               	bcf	3,6	;RP1=0, select bank0
 11030  037E  00A5               	movwf	??_lcd_begin
 11031  037F                     u4437:	
 11032  037F  0BA5               	decfsz	??_lcd_begin,f
 11033  0380  2B7F               	goto	u4437
 11034  0381  2B82               	nop2	;nop
 11035                           
 11036                           ;lcd44780.c: 443: lcd_write4bits(0x02);
 11037  0382  3002               	movlw	2
 11038  0383  23D5  120A  118A   	fcall	_lcd_write4bits
 11039                           
 11040                           ;lcd44780.c: 444: }
 11041  0386  2BAC               	goto	l4616
 11042  0387                     l4608:	
 11043                           
 11044                           ;lcd44780.c: 446: else {
 11045                           ;lcd44780.c: 450: lcd_command(0x20 | LCD_function);
 11046  0387  0876               	movf	_LCD_function,w
 11047  0388  3820               	iorlw	32
 11048  0389  23CE  120A  118A   	fcall	_lcd_command
 11049                           
 11050                           ;lcd44780.c: 451: _delay((unsigned long)((5)*(20000000/4000.0)));
 11051  038C  3021               	movlw	33
 11052  038D  1283               	bcf	3,5	;RP0=0, select bank0
 11053  038E  1303               	bcf	3,6	;RP1=0, select bank0
 11054  038F  00A6               	movwf	??_lcd_begin+1
 11055  0390  3076               	movlw	118
 11056  0391  00A5               	movwf	??_lcd_begin
 11057  0392                     u4447:	
 11058  0392  0BA5               	decfsz	??_lcd_begin,f
 11059  0393  2B92               	goto	u4447
 11060  0394  0BA6               	decfsz	??_lcd_begin+1,f
 11061  0395  2B92               	goto	u4447
 11062  0396  0000               	nop
 11063                           
 11064                           ;lcd44780.c: 454: lcd_command(0x20 | LCD_function);
 11065  0397  0876               	movf	_LCD_function,w
 11066  0398  3820               	iorlw	32
 11067  0399  23CE  120A  118A   	fcall	_lcd_command
 11068                           
 11069                           ;lcd44780.c: 455: _delay((unsigned long)((5)*(20000000/4000.0)));
 11070  039C  3021               	movlw	33
 11071  039D  1283               	bcf	3,5	;RP0=0, select bank0
 11072  039E  1303               	bcf	3,6	;RP1=0, select bank0
 11073  039F  00A6               	movwf	??_lcd_begin+1
 11074  03A0  3076               	movlw	118
 11075  03A1  00A5               	movwf	??_lcd_begin
 11076  03A2                     u4457:	
 11077  03A2  0BA5               	decfsz	??_lcd_begin,f
 11078  03A3  2BA2               	goto	u4457
 11079  03A4  0BA6               	decfsz	??_lcd_begin+1,f
 11080  03A5  2BA2               	goto	u4457
 11081  03A6  0000               	nop
 11082                           
 11083                           ;lcd44780.c: 459: lcd_command(0x20 | LCD_function);
 11084  03A7  0876               	movf	_LCD_function,w
 11085  03A8  3820               	iorlw	32
 11086  03A9  23CE  120A  118A   	fcall	_lcd_command
 11087  03AC                     l4616:	
 11088                           
 11089                           ;lcd44780.c: 460: }
 11090                           ;lcd44780.c: 463: lcd_command(0x20 | LCD_function);
 11091  03AC  0876               	movf	_LCD_function,w
 11092  03AD  3820               	iorlw	32
 11093  03AE  23CE  120A  118A   	fcall	_lcd_command
 11094                           
 11095                           ;lcd44780.c: 466: LCD_ctrl = 0x04 | 0x00 | 0x00;
 11096  03B1  3004               	movlw	4
 11097  03B2  1683               	bsf	3,5	;RP0=1, select bank3
 11098  03B3  1703               	bsf	3,6	;RP1=1, select bank3
 11099  03B4  00A6               	movwf	_LCD_ctrl^(0+384)
 11100                           
 11101                           ;lcd44780.c: 467: lcd_command(0x08 | LCD_ctrl);
 11102  03B5  3808               	iorlw	8
 11103  03B6  23CE  120A  118A   	fcall	_lcd_command
 11104                           
 11105                           ;lcd44780.c: 470: lcd_command(0x01);
 11106  03B9  3001               	movlw	1
 11107  03BA  23CE  120A  118A   	fcall	_lcd_command
 11108                           
 11109                           ;lcd44780.c: 471: _delay((unsigned long)((2)*(20000000/4000.0)));
 11110  03BD  300D               	movlw	13
 11111  03BE  1283               	bcf	3,5	;RP0=0, select bank0
 11112  03BF  1303               	bcf	3,6	;RP1=0, select bank0
 11113  03C0  00A6               	movwf	??_lcd_begin+1
 11114  03C1  30FB               	movlw	251
 11115  03C2  00A5               	movwf	??_lcd_begin
 11116  03C3                     u4467:	
 11117  03C3  0BA5               	decfsz	??_lcd_begin,f
 11118  03C4  2BC3               	goto	u4467
 11119  03C5  0BA6               	decfsz	??_lcd_begin+1,f
 11120  03C6  2BC3               	goto	u4467
 11121  03C7  2BC8               	nop2
 11122                           
 11123                           ;lcd44780.c: 474: LCD_mode = 0x02 | 0x00;
 11124  03C8  3002               	movlw	2
 11125  03C9  1683               	bsf	3,5	;RP0=1, select bank3
 11126  03CA  1703               	bsf	3,6	;RP1=1, select bank3
 11127  03CB  00A8               	movwf	_LCD_mode^(0+384)
 11128                           
 11129                           ;lcd44780.c: 476: lcd_command(0x04 | LCD_mode);
 11130  03CC  3804               	iorlw	4
 11131  03CD  2BCE               	ljmp	_lcd_command
 11132  03CE                     __end_of_lcd_begin:	
 11133  03CE                     __ptext48:	
 11134 ;; *************** function _lcd_command *****************
 11135 ;; Defined at:
 11136 ;;		line 127 in file "../../../lib/lcd44780.c"
 11137 ;; Parameters:    Size  Location     Type
 11138 ;;  value           1    wreg     unsigned char 
 11139 ;; Auto vars:     Size  Location     Type
 11140 ;;  value           1    2[BANK0 ] unsigned char 
 11141 ;; Return value:  Size  Location     Type
 11142 ;;		None               void
 11143 ;; Registers used:
 11144 ;;		wreg, status,2, status,0, pclath, cstack
 11145 ;; Tracked objects:
 11146 ;;		On entry : 0/0
 11147 ;;		On exit  : 0/0
 11148 ;;		Unchanged: 0/0
 11149 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11150 ;;      Params:         0       0       0       0       0
 11151 ;;      Locals:         0       1       0       0       0
 11152 ;;      Temps:          0       0       0       0       0
 11153 ;;      Totals:         0       1       0       0       0
 11154 ;;Total ram usage:        1 bytes
 11155 ;; Hardware stack levels used:    1
 11156 ;; Hardware stack levels required when called:    3
 11157 ;; This function calls:
 11158 ;;		_lcd_send
 11159 ;; This function is called by:
 11160 ;;		_lcd_gotoxy
 11161 ;;		_lcd_clear
 11162 ;;		_lcd_begin
 11163 ;; This function uses a non-reentrant model
 11164 ;;
 11165                           
 11166                           
 11167                           ;psect for function _lcd_command
 11168  03CE                     _lcd_command:	
 11169                           
 11170                           ;incstack = 0
 11171                           ; Regs used in _lcd_command: [wreg+status,2+status,0+pclath+cstack]
 11172                           ;lcd_command@value stored from wreg
 11173  03CE  1283               	bcf	3,5	;RP0=0, select bank0
 11174  03CF  1303               	bcf	3,6	;RP1=0, select bank0
 11175  03D0  00A3               	movwf	lcd_command@value
 11176                           
 11177                           ;lcd44780.c: 128: lcd_send(value, 0);
 11178  03D1  01A1               	clrf	lcd_send@mode
 11179  03D2  120A  158A  2FEE   	ljmp	_lcd_send
 11180  03D5                     __end_of_lcd_command:	
 11181  03D5                     __ptext50:	
 11182 ;; *************** function _lcd_write4bits *****************
 11183 ;; Defined at:
 11184 ;;		line 34 in file "../../../lib/lcd44780.c"
 11185 ;; Parameters:    Size  Location     Type
 11186 ;;  value           1    wreg     unsigned char 
 11187 ;; Auto vars:     Size  Location     Type
 11188 ;;  value           1    5[COMMON] unsigned char 
 11189 ;; Return value:  Size  Location     Type
 11190 ;;		None               void
 11191 ;; Registers used:
 11192 ;;		wreg, status,2, status,0
 11193 ;; Tracked objects:
 11194 ;;		On entry : 0/0
 11195 ;;		On exit  : 0/0
 11196 ;;		Unchanged: 0/0
 11197 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11198 ;;      Params:         0       0       0       0       0
 11199 ;;      Locals:         1       0       0       0       0
 11200 ;;      Temps:          1       0       0       0       0
 11201 ;;      Totals:         2       0       0       0       0
 11202 ;;Total ram usage:        2 bytes
 11203 ;; Hardware stack levels used:    1
 11204 ;; Hardware stack levels required when called:    1
 11205 ;; This function calls:
 11206 ;;		Nothing
 11207 ;; This function is called by:
 11208 ;;		_lcd_send
 11209 ;;		_lcd_begin
 11210 ;; This function uses a non-reentrant model
 11211 ;;
 11212                           
 11213                           
 11214                           ;psect for function _lcd_write4bits
 11215  03D5                     _lcd_write4bits:	
 11216                           
 11217                           ;incstack = 0
 11218                           ; Regs used in _lcd_write4bits: [wreg+status,2+status,0]
 11219                           ;lcd_write4bits@value stored from wreg
 11220  03D5  00F5               	movwf	lcd_write4bits@value
 11221                           
 11222                           ;lcd44780.c: 39: PORTB &= 0b00001111;
 11223  03D6  300F               	movlw	15
 11224  03D7  1283               	bcf	3,5	;RP0=0, select bank0
 11225  03D8  1303               	bcf	3,6	;RP1=0, select bank0
 11226  03D9  0586               	andwf	6,f	;volatile
 11227                           
 11228                           ;lcd44780.c: 40: PORTB |= value << 4;
 11229  03DA  0E75               	swapf	lcd_write4bits@value,w
 11230  03DB  39F0               	andlw	240
 11231  03DC  0486               	iorwf	6,f	;volatile
 11232                           
 11233                           ;lcd44780.c: 55: PORTB |= 0b1000; _delay((unsigned long)((4)*(20000000/4000000.0))); POR
      +                          TB &= ~0b1000; _delay((unsigned long)((100)*(20000000/4000000.0)));;
 11234  03DD  1586               	bsf	6,3	;volatile
 11235  03DE  3006               	movlw	6
 11236  03DF  00F4               	movwf	??_lcd_write4bits
 11237  03E0                     u4597:	
 11238  03E0  0BF4               	decfsz	??_lcd_write4bits,f
 11239  03E1  2BE0               	goto	u4597
 11240  03E2  0000               	nop
 11241  03E3  1283               	bcf	3,5	;RP0=0, select bank0
 11242  03E4  1303               	bcf	3,6	;RP1=0, select bank0
 11243  03E5  1186               	bcf	6,3	;volatile
 11244  03E6  30A6               	movlw	166
 11245  03E7  00F4               	movwf	??_lcd_write4bits
 11246  03E8                     u4607:	
 11247  03E8  0BF4               	decfsz	??_lcd_write4bits,f
 11248  03E9  2BE8               	goto	u4607
 11249  03EA  0000               	nop
 11250  03EB  0008               	return
 11251  03EC                     __end_of_lcd_write4bits:	
 11252  03EC                     __ptext37:	
 11253 ;; *************** function _print_buffer *****************
 11254 ;; Defined at:
 11255 ;;		line 230 in file "../../../src/print.c"
 11256 ;; Parameters:    Size  Location     Type
 11257 ;;		None
 11258 ;; Auto vars:     Size  Location     Type
 11259 ;;  i               1    5[COMMON] unsigned char 
 11260 ;; Return value:  Size  Location     Type
 11261 ;;		None               void
 11262 ;; Registers used:
 11263 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 11264 ;; Tracked objects:
 11265 ;;		On entry : 300/0
 11266 ;;		On exit  : 300/0
 11267 ;;		Unchanged: 0/0
 11268 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11269 ;;      Params:         0       0       0       0       0
 11270 ;;      Locals:         1       0       0       0       0
 11271 ;;      Temps:          0       0       0       0       0
 11272 ;;      Totals:         1       0       0       0       0
 11273 ;;Total ram usage:        1 bytes
 11274 ;; Hardware stack levels used:    1
 11275 ;; Hardware stack levels required when called:    3
 11276 ;; This function calls:
 11277 ;;		_ser_putch
 11278 ;;		_ser_puts
 11279 ;; This function is called by:
 11280 ;;		_measure_freq
 11281 ;; This function uses a non-reentrant model
 11282 ;;
 11283                           
 11284                           
 11285                           ;psect for function _print_buffer
 11286  03EC                     _print_buffer:	
 11287                           
 11288                           ;print.c: 231: uint8_t i;
 11289                           ;print.c: 232: for(i = 0; i < buffer.n; i++) {
 11290                           
 11291                           ;incstack = 0
 11292                           ; Regs used in _print_buffer: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
 11293  03EC  01F5               	clrf	print_buffer@i
 11294  03ED                     l4300:	
 11295  03ED  1683               	bsf	3,5	;RP0=1, select bank3
 11296  03EE  1703               	bsf	3,6	;RP1=1, select bank3
 11297  03EF  0E3B               	swapf	(_buffer^(0+384)+16),w
 11298  03F0  390F               	andlw	15
 11299  03F1  0275               	subwf	print_buffer@i,w
 11300  03F2  1803               	btfsc	3,0
 11301  03F3  2C00               	goto	l4302
 11302                           
 11303                           ;print.c: 233: ser_putch(buffer.x[i]);
 11304  03F4  0875               	movf	print_buffer@i,w
 11305  03F5  3EAB               	addlw	(low (_buffer| (0+256)))& (0+255)
 11306  03F6  0084               	movwf	4
 11307  03F7  1783               	bsf	3,7	;select IRP bank3
 11308  03F8  0800               	movf	0,w
 11309  03F9  160A  118A  2440  120A  118A  	fcall	_ser_putch
 11310  03FE  0AF5               	incf	print_buffer@i,f
 11311  03FF  2BED               	goto	l4300
 11312  0400                     l4302:	
 11313                           
 11314                           ;print.c: 234: }
 11315                           ;print.c: 235: ser_puts("\r\n");
 11316  0400  30F4               	movlw	low (STR_9| (0+32768))
 11317  0401  1283               	bcf	3,5	;RP0=0, select bank0
 11318  0402  1303               	bcf	3,6	;RP1=0, select bank0
 11319  0403  00A1               	movwf	ser_puts@s
 11320  0404  3098               	movlw	high (STR_9| (0+32768))
 11321  0405  00A2               	movwf	ser_puts@s+1
 11322  0406  160A  118A  2C23   	ljmp	l4096
 11323  0409                     __end_of_print_buffer:	
 11324                           
 11325                           	psect	text54
 11326  1CBE                     __ptext54:	
 11327 ;; *************** function _global_int *****************
 11328 ;; Defined at:
 11329 ;;		line 81 in file "../../../LC-meter.c"
 11330 ;; Parameters:    Size  Location     Type
 11331 ;;		None
 11332 ;; Auto vars:     Size  Location     Type
 11333 ;;		None
 11334 ;; Return value:  Size  Location     Type
 11335 ;;		None               void
 11336 ;; Registers used:
 11337 ;;		wreg, fsr0l, fsr0h, status,2, status,0
 11338 ;; Tracked objects:
 11339 ;;		On entry : 0/0
 11340 ;;		On exit  : 200/0
 11341 ;;		Unchanged: 0/0
 11342 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11343 ;;      Params:         0       0       0       0       0
 11344 ;;      Locals:         0       0       0       0       0
 11345 ;;      Temps:          4       0       0       0       0
 11346 ;;      Totals:         4       0       0       0       0
 11347 ;;Total ram usage:        4 bytes
 11348 ;; Hardware stack levels used:    1
 11349 ;; This function calls:
 11350 ;;		Nothing
 11351 ;; This function is called by:
 11352 ;;		Interrupt level 1
 11353 ;; This function uses a non-reentrant model
 11354 ;;
 11355                           
 11356                           
 11357                           ;psect for function _global_int
 11358  1CBE                     _global_int:	
 11359                           
 11360                           ;LC-meter.c: 85: if(PIR1 & 0x02) {
 11361  1CBE  1283               	bcf	3,5	;RP0=0, select bank0
 11362  1CBF  1303               	bcf	3,6	;RP1=0, select bank0
 11363  1CC0  1C8C               	btfss	12,1	;volatile
 11364  1CC1  2D0A               	goto	i1l3598
 11365                           
 11366                           ;LC-meter.c: 86: bres += 256;
 11367  1CC2  3001               	movlw	1
 11368  1CC3  1683               	bsf	3,5	;RP0=1, select bank3
 11369  1CC4  1703               	bsf	3,6	;RP1=1, select bank3
 11370  1CC5  07DC               	addwf	(_bres+1)^(0+384),f	;volatile
 11371                           
 11372                           ;LC-meter.c: 87: if(bres >= ((unsigned long)((double)((20000000) / 4) / 1000))) {
 11373  1CC6  3013               	movlw	19
 11374  1CC7  025C               	subwf	(_bres+1)^(0+384),w	;volatile
 11375  1CC8  3088               	movlw	136
 11376  1CC9  1903               	skipnz
 11377  1CCA  025B               	subwf	_bres^(0+384),w	;volatile
 11378  1CCB  1C03               	skipc
 11379  1CCC  2D07               	goto	i1l3596
 11380                           
 11381                           ;LC-meter.c: 88: bres -= ((unsigned long)((double)((20000000) / 4) / 1000));
 11382  1CCD  3088               	movlw	136
 11383  1CCE  02DB               	subwf	_bres^(0+384),f	;volatile
 11384  1CCF  3013               	movlw	19
 11385  1CD0  1C03               	skipc
 11386  1CD1  03DC               	decf	(_bres+1)^(0+384),f	;volatile
 11387  1CD2  02DC               	subwf	(_bres+1)^(0+384),f	;volatile
 11388                           
 11389                           ;LC-meter.c: 89: msecpart++;
 11390  1CD3  0ADD               	incf	_msecpart^(0+384),f	;volatile
 11391  1CD4  1903               	skipnz
 11392  1CD5  0ADE               	incf	(_msecpart+1)^(0+384),f	;volatile
 11393                           
 11394                           ;LC-meter.c: 90: PORTC &= ~0b00000100; PORTC |= (!!(msecpart >= 833)) << 2;;
 11395  1CD6  1283               	bcf	3,5	;RP0=0, select bank0
 11396  1CD7  1303               	bcf	3,6	;RP1=0, select bank0
 11397  1CD8  1107               	bcf	7,2	;volatile
 11398  1CD9  3003               	movlw	3
 11399  1CDA  1683               	bsf	3,5	;RP0=1, select bank3
 11400  1CDB  1703               	bsf	3,6	;RP1=1, select bank3
 11401  1CDC  025E               	subwf	(_msecpart+1)^(0+384),w	;volatile
 11402  1CDD  3041               	movlw	65
 11403  1CDE  1903               	skipnz
 11404  1CDF  025D               	subwf	_msecpart^(0+384),w	;volatile
 11405  1CE0  1C03               	btfss	3,0
 11406  1CE1  2CE4               	goto	u287_20
 11407  1CE2  3001               	movlw	1
 11408  1CE3  2CE5               	goto	u288_20
 11409  1CE4                     u287_20:	
 11410  1CE4  3000               	movlw	0
 11411  1CE5                     u288_20:	
 11412  1CE5  00F0               	movwf	??_global_int
 11413  1CE6  3001               	movlw	1
 11414  1CE7  1003               	clrc
 11415  1CE8                     L20:	
 11416  1CE8  0DF0               	rlf	??_global_int,f
 11417  1CE9  3EFF               	addlw	-1
 11418  1CEA  1003               	clrc
 11419  1CEB  1D03               	skipz
 11420  1CEC  2CE8               	goto	L20
 11421  1CED  0D70               	rlf	??_global_int,w
 11422  1CEE  1283               	bcf	3,5	;RP0=0, select bank0
 11423  1CEF  1303               	bcf	3,6	;RP1=0, select bank0
 11424  1CF0  0487               	iorwf	7,f	;volatile
 11425                           
 11426                           ;LC-meter.c: 92: if(msecpart >= 1000) {
 11427  1CF1  3003               	movlw	3
 11428  1CF2  1683               	bsf	3,5	;RP0=1, select bank3
 11429  1CF3  1703               	bsf	3,6	;RP1=1, select bank3
 11430  1CF4  025E               	subwf	(_msecpart+1)^(0+384),w	;volatile
 11431  1CF5  30E8               	movlw	232
 11432  1CF6  1903               	skipnz
 11433  1CF7  025D               	subwf	_msecpart^(0+384),w	;volatile
 11434  1CF8  1C03               	skipc
 11435  1CF9  2D07               	goto	i1l3596
 11436                           
 11437                           ;LC-meter.c: 94: seconds++;
 11438  1CFA  0A9C               	incf	_seconds^(0+384),f	;volatile
 11439  1CFB  1903               	skipnz
 11440  1CFC  0A9D               	incf	(_seconds+1)^(0+384),f	;volatile
 11441  1CFD  1903               	skipnz
 11442  1CFE  0A9E               	incf	(_seconds+2)^(0+384),f	;volatile
 11443  1CFF  1903               	skipnz
 11444  1D00  0A9F               	incf	(_seconds+3)^(0+384),f	;volatile
 11445                           
 11446                           ;LC-meter.c: 95: msecpart -= 1000;
 11447  1D01  30E8               	movlw	232
 11448  1D02  02DD               	subwf	_msecpart^(0+384),f	;volatile
 11449  1D03  3003               	movlw	3
 11450  1D04  1C03               	skipc
 11451  1D05  03DE               	decf	(_msecpart+1)^(0+384),f	;volatile
 11452  1D06  02DE               	subwf	(_msecpart+1)^(0+384),f	;volatile
 11453  1D07                     i1l3596:	
 11454                           
 11455                           ;LC-meter.c: 96: }
 11456                           ;LC-meter.c: 97: }
 11457                           ;LC-meter.c: 99: PIR1 &= ~0b10;
 11458  1D07  1283               	bcf	3,5	;RP0=0, select bank0
 11459  1D08  1303               	bcf	3,6	;RP1=0, select bank0
 11460  1D09  108C               	bcf	12,1	;volatile
 11461  1D0A                     i1l3598:	
 11462                           
 11463                           ;LC-meter.c: 100: }
 11464                           ;LC-meter.c: 102: if(RCIF) { rxfifo[rxiptr] = RCREG; ser_tmp = (rxiptr + 1) & ((uint8_t)
      +                          16 - 1); if(ser_tmp != rxoptr) rxiptr = ser_tmp; }; if(TXIF && TXIE) { TXREG = txfifo[tx
      +                          optr]; ++txoptr; txoptr &= ((uint8_t)16 - 1); if(txoptr == txiptr) { TXIE = 0; }; TXIF =
      +                           0; 
 11465  1D0A  1E8C               	btfss	12,5	;volatile
 11466  1D0B  2D1F               	goto	i1l3610
 11467  1D0C  0877               	movf	_rxiptr,w
 11468  1D0D  3E10               	addlw	(low (_rxfifo| (0+256)))& (0+255)
 11469  1D0E  0084               	movwf	4
 11470  1D0F  081A               	movf	26,w	;volatile
 11471  1D10  1783               	bsf	3,7	;select IRP bank2
 11472  1D11  0080               	movwf	0
 11473  1D12  0877               	movf	_rxiptr,w	;volatile
 11474  1D13  3E01               	addlw	1
 11475  1D14  1683               	bsf	3,5	;RP0=1, select bank3
 11476  1D15  1703               	bsf	3,6	;RP1=1, select bank3
 11477  1D16  00AA               	movwf	_ser_tmp^(0+384)
 11478  1D17  300F               	movlw	15
 11479  1D18  05AA               	andwf	_ser_tmp^(0+384),f
 11480  1D19  082A               	movf	_ser_tmp^(0+384),w
 11481  1D1A  0629               	xorwf	_rxoptr^(0+384),w	;volatile
 11482  1D1B  1903               	skipnz
 11483  1D1C  2D1F               	goto	i1l3610
 11484  1D1D  082A               	movf	_ser_tmp^(0+384),w
 11485  1D1E  00F7               	movwf	_rxiptr	;volatile
 11486  1D1F                     i1l3610:	
 11487  1D1F  1283               	bcf	3,5	;RP0=0, select bank0
 11488  1D20  1303               	bcf	3,6	;RP1=0, select bank0
 11489  1D21  1E0C               	btfss	12,4	;volatile
 11490  1D22  2D37               	goto	i1l259
 11491  1D23  1683               	bsf	3,5	;RP0=1, select bank1
 11492  1D24  1E0C               	btfss	12,4	;volatile
 11493  1D25  2D37               	goto	i1l259
 11494  1D26  0879               	movf	_txoptr,w
 11495  1D27  3E20               	addlw	(low (_txfifo| (0+256)))& (0+255)
 11496  1D28  0084               	movwf	4
 11497  1D29  1783               	bsf	3,7	;select IRP bank2
 11498  1D2A  0800               	movf	0,w
 11499  1D2B  1283               	bcf	3,5	;RP0=0, select bank0
 11500  1D2C  0099               	movwf	25	;volatile
 11501  1D2D  0AF9               	incf	_txoptr,f	;volatile
 11502  1D2E  300F               	movlw	15
 11503  1D2F  05F9               	andwf	_txoptr,f	;volatile
 11504  1D30  0879               	movf	_txoptr,w	;volatile
 11505  1D31  0678               	xorwf	_txiptr,w	;volatile
 11506  1D32  1683               	bsf	3,5	;RP0=1, select bank1
 11507  1D33  1903               	btfsc	3,2
 11508  1D34  120C               	bcf	12,4	;volatile
 11509  1D35  1283               	bcf	3,5	;RP0=0, select bank0
 11510  1D36  120C               	bcf	12,4	;volatile
 11511  1D37                     i1l259:	
 11512  1D37  0873               	movf	??_global_int+3,w
 11513  1D38  008A               	movwf	10
 11514  1D39  0872               	movf	??_global_int+2,w
 11515  1D3A  0084               	movwf	4
 11516  1D3B  0E71               	swapf	(??_global_int+1)^(0+-128),w
 11517  1D3C  0083               	movwf	3
 11518  1D3D  0EFE               	swapf	126,f
 11519  1D3E  0E7E               	swapf	126,w
 11520  1D3F  0009               	retfie
 11521  1D40                     __end_of_global_int:	
 11522  007E                     btemp	set	126	;btemp
 11523  007E                     wtemp	set	126
 11524  007E                     wtemp0	set	126
 11525  0080                     wtemp1	set	128
 11526  0082                     wtemp2	set	130
 11527  0084                     wtemp3	set	132
 11528  0086                     wtemp4	set	134
 11529  0088                     wtemp5	set	136
 11530  007F                     wtemp6	set	127
 11531  007E                     ttemp	set	126
 11532  007E                     ttemp0	set	126
 11533  0081                     ttemp1	set	129
 11534  0084                     ttemp2	set	132
 11535  0087                     ttemp3	set	135
 11536  007F                     ttemp4	set	127
 11537  007E                     ltemp	set	126
 11538  007E                     ltemp0	set	126
 11539  0082                     ltemp1	set	130
 11540  0086                     ltemp2	set	134
 11541  0080                     ltemp3	set	128
 11542                           
 11543                           	psect	intentry
 11544  0004                     __pintentry:	
 11545                           ;incstack = 0
 11546                           ; Regs used in _global_int: [wreg-fsr0h+status,2+status,0]
 11547                           
 11548  0004                     interrupt_function:	
 11549  007E                     saved_w	set	btemp
 11550  0004  00FE               	movwf	btemp
 11551  0005  0E03               	swapf	3,w
 11552  0006  00F1               	movwf	??_global_int+1
 11553  0007  0804               	movf	4,w
 11554  0008  00F2               	movwf	??_global_int+2
 11555  0009  080A               	movf	10,w
 11556  000A  00F3               	movwf	??_global_int+3
 11557  000B  160A  158A  2CBE   	ljmp	_global_int


Data Sizes:
    Strings     174
    Constant    76
    Data        5
    BSS         84
    Persistent  8
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6      10
    BANK0            79     79      79
    BANK1            80     79      79
    BANK3            96     23      84
    BANK2            96     19      51

Pointer List with Targets:

    eval_poly@d	PTR const  size(2) Largest target is 40
		 -> exp@coeff(CODE[40]), log@coeff(CODE[36]), 

    frexp@eptr	PTR int  size(1) Largest target is 2
		 -> log@exponent(BANK1[2]), floor@expon(BANK1[2]), 

    ser_puts@s	PTR const unsigned char  size(2) Largest target is 16
		 -> STR_36(CODE[3]), STR_35(CODE[5]), STR_34(CODE[3]), STR_33(CODE[8]), 
		 -> STR_32(CODE[6]), STR_31(CODE[6]), STR_30(CODE[6]), STR_29(CODE[5]), 
		 -> STR_26(CODE[3]), STR_24(CODE[3]), STR_22(CODE[3]), STR_17(CODE[3]), 
		 -> STR_16(CODE[16]), STR_15(CODE[16]), STR_13(CODE[3]), STR_9(CODE[3]), 

    buffer_puts@x	PTR const unsigned char  size(2) Largest target is 6
		 -> STR_27(CODE[6]), 

    lcd_puts@string	PTR const unsigned char  size(2) Largest target is 10
		 -> STR_21(CODE[5]), STR_20(CODE[6]), STR_19(CODE[7]), STR_18(CODE[7]), 
		 -> STR_14(CODE[10]), STR_12(CODE[4]), STR_11(CODE[4]), STR_10(CODE[6]), 

    main$257	PTR const unsigned char  size(2) Largest target is 16
		 -> STR_16(CODE[16]), STR_15(CODE[16]), 

    put_str@s	PTR const unsigned char  size(2) Largest target is 15
		 -> STR_37(CODE[13]), STR_28(CODE[10]), STR_25(CODE[15]), STR_23(CODE[12]), 

    print_unit@units	PTR const unsigned char [8] size(2) Largest target is 3
		 -> STR_8(CODE[3]), STR_7(CODE[3]), STR_6(CODE[3]), STR_5(CODE[3]), 
		 -> STR_4(CODE[3]), STR_3(CODE[3]), STR_2(CODE[3]), STR_1(CODE[2]), 


Critical Paths under _main in COMMON

    _print_reading->_format_number
    _format_xint32->_format_number
    _floor->_frexp
    _log->_frexp
    ___flmul->_frexp
    ___fladd->_frexp
    _lcd_begin->_lcd_write4bits
    _measure_freq->_format_number
    _measure_freq->_print_buffer
    _measure_freq->_timer0_read_ps
    _print_buffer->_ser_putch
    _ser_puts->_ser_putch
    _format_number->___lwmod
    _format_number->_buffer_putch
    _buffer_puts->_buffer_putch
    _lcd_send->_lcd_write4bits

Critical Paths under _global_int in COMMON

    None.

Critical Paths under _main in BANK0

    _print_indicator->_lcd_gotoxy
    _print_unit->_lcd_gotoxy
    _print_reading->_format_number
    _lcd_puts->_lcd_send
    _format_xint32->_format_number
    _exp->_eval_poly
    _ldexp->_eval_poly
    ___flsub->___fladd
    ___fldiv->___flpack
    ___lltofl->___flpack
    _log->_eval_poly
    _eval_poly->___fladd
    ___flmul->___fldiv
    ___fladd->___flmul
    ___awtofl->___flpack
    _lcd_begin->_lcd_command
    _calibrate->___lwtofl
    _put_str->_output_putch
    _output_putch->_lcd_send
    _measure_freq->_format_number
    _print_buffer->_ser_puts
    _lcd_gotoxy->_lcd_command
    _format_number->___lwdiv
    _buffer_puts->_buffer_putch
    _lcd_clear->_lcd_command
    _lcd_command->_lcd_send
    ___lwtofl->_measure_freq

Critical Paths under _global_int in BANK0

    None.

Critical Paths under _main in BANK1

    _measure_inductance->___fltol
    _format_double->_pow
    _pow->_exp
    _exp->_floor
    _ldexp->_eval_poly
    _floor->___altofl
    ___fltol->_log10
    ___altofl->___fltol
    _log10->_log
    _log->_eval_poly

Critical Paths under _global_int in BANK1

    None.

Critical Paths under _main in BANK3

    _main->_format_double
    _measure_capacitance->_format_double

Critical Paths under _global_int in BANK3

    None.

Critical Paths under _main in BANK2

    _main->_measure_capacitance

Critical Paths under _global_int in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0  429679
                                             20 BANK3      3     3      0
                          _calibrate
                          _delay10ms
                      _format_double
                          _lcd_begin
                          _lcd_clear
                         _lcd_gotoxy
                           _lcd_init
                           _lcd_puts
                _measure_capacitance
                 _measure_inductance
                    _print_indicator
                           _ser_init
                           _ser_puts
                        _timer0_init
                        _timer2_init
 ---------------------------------------------------------------------------------
 (1) _timer2_init                                          4     4      0     133
                                              4 COMMON     1     1      0
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _timer0_init                                         10    10      0     371
                                              0 BANK0     10    10      0
 ---------------------------------------------------------------------------------
 (1) _ser_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _print_indicator                                      1     1      0    3155
                                              9 BANK0      1     1      0
                         _lcd_gotoxy
                           _lcd_puts
 ---------------------------------------------------------------------------------
 (1) _measure_inductance                                  55    55      0   43103
                                             28 BANK1     43    43      0
                            ___fldiv
                             ___flge
                            ___flmul
                            ___flsub
                            ___fltol
                           ___lwtofl
                         _lcd_gotoxy
                       _measure_freq
                      _print_reading
                         _print_unit
                            _put_str
 ---------------------------------------------------------------------------------
 (1) _measure_capacitance                                 19    19      0  204882
                                              0 BANK2     19    19      0
                            ___fldiv
                             ___flge
                            ___flmul
                            ___flsub
                            ___fltol
                           ___lwtofl
                      _format_double
                      _format_xint32
                         _lcd_gotoxy
                       _measure_freq
                      _print_reading
                         _print_unit
                            _put_str
                          _ser_putch
                           _ser_puts
 ---------------------------------------------------------------------------------
 (2) _print_unit                                           3     3      0    2996
                                              9 BANK0      2     2      0
                         _lcd_gotoxy
                           _ser_puts
 ---------------------------------------------------------------------------------
 (2) _print_reading                                        6     4      2    7806
                                             48 BANK0      6     4      2
                            ___lwdiv
                            ___lwmod
                      _format_number
                         _lcd_gotoxy
                           _lcd_puts
 ---------------------------------------------------------------------------------
 (2) _lcd_puts                                             3     1      2    1179
                                              2 BANK0      3     1      2
                           _lcd_send
 ---------------------------------------------------------------------------------
 (2) _format_xint32                                        4     0      4    3735
                                             48 BANK0      4     0      4
                       _buffer_putch
                      _format_number
 ---------------------------------------------------------------------------------
 (2) _format_double                                       20    16      4  157379
                                              0 BANK3     20    16      4
                           ___awtofl
                            ___fldiv
                             ___flge
                            ___flmul
                            ___flsub
                            ___fltol
                       _buffer_putch
                              _floor
                              _log10
                                _pow
 ---------------------------------------------------------------------------------
 (3) _pow                                                 21    13      8   89436
                                             58 BANK1     21    13      8
                             ___flge
                            ___flmul
                            ___flneg
                            ___fltol
                           ___lltofl
                                _exp
                                _log
 ---------------------------------------------------------------------------------
 (4) _exp                                                 15    11      4   48325
                                             43 BANK1     15    11      4
                           ___awtofl
                            ___fldiv
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                          _eval_poly
                              _floor
                              _ldexp
                                _log (ARG)
 ---------------------------------------------------------------------------------
 (5) _ldexp                                               12     6      6    3479
                                              4 BANK1     12     6      6
                             ___flge
                            ___flneg
                          _eval_poly (ARG)
 ---------------------------------------------------------------------------------
 (6) ___flneg                                              4     0      4     325
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (5) _floor                                               10     6      4   11204
                                             33 BANK1     10     6      4
                           ___altofl
                            ___fladd
                            ___fldiv (ARG)
                             ___flge
                            ___fltol
                              _frexp
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             10     6      4     882
                                             18 BANK1     10     6      4
                            ___fldiv (ARG)
                              _log10 (ARG)
 ---------------------------------------------------------------------------------
 (6) ___altofl                                             5     1      4    2446
                                             28 BANK1      5     1      4
                           ___flpack
                            ___fltol (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flsub                                              8     0      8    5089
                                             63 BANK0      8     0      8
                           ___awtofl (ARG)
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (2) ___fldiv                                             19    11      8    3931
                                             10 BANK0     19    11      8
                           ___flpack
 ---------------------------------------------------------------------------------
 (4) ___lltofl                                             4     0      4    2344
                                             10 BANK0      4     0      4
                           ___flpack
 ---------------------------------------------------------------------------------
 (3) _log10                                                8     4      4   34367
                                             10 BANK1      8     4      4
                            ___flmul
                                _log
 ---------------------------------------------------------------------------------
 (4) _log                                                  6     2      4   27850
                                              4 BANK1      6     2      4
                           ___awtofl
                            ___fladd
                             ___flge
                            ___flmul
                          _eval_poly
                              _frexp
 ---------------------------------------------------------------------------------
 (5) _frexp                                                7     2      5     582
                                              4 COMMON     2     2      0
                                              0 BANK0      5     0      5
 ---------------------------------------------------------------------------------
 (5) _eval_poly                                           20    12      8   11109
                                             63 BANK0     16     8      8
                                              0 BANK1      4     4      0
                            ___fladd
                            ___flmul
 ---------------------------------------------------------------------------------
 (2) ___flmul                                             19    11      8    6342
                                             29 BANK0     19    11      8
                           ___awtofl (ARG)
                            ___fldiv (ARG)
                           ___flpack
                              _frexp (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fladd                                             15     7      8    4123
                                             48 BANK0     15     7      8
                           ___awtofl (ARG)
                            ___flmul (ARG)
                           ___flpack
                              _frexp (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flge                                              12     4      8    2628
                                              0 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (5) ___awtofl                                             9     5      4    2686
                                              4 COMMON     1     1      0
                                             10 BANK0      4     0      4
                           ___flpack
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             3     3      0      68
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _lcd_begin                                            4     3      1     860
                                              3 BANK0      4     3      1
                        _lcd_command
                     _lcd_write4bits
 ---------------------------------------------------------------------------------
 (1) _calibrate                                            1     1      0   14811
                                             58 BANK0      1     1      0
                           ___lwtofl
                          _delay10ms
                          _lcd_clear
                         _lcd_gotoxy
                           _lcd_send
                       _measure_freq
                            _put_str
                           _ser_puts
 ---------------------------------------------------------------------------------
 (2) _put_str                                              7     5      2    1092
                                              3 BANK0      7     5      2
                       _output_putch
 ---------------------------------------------------------------------------------
 (3) _output_putch                                         1     1      0     702
                                              2 BANK0      1     1      0
                           _lcd_send
                          _ser_putch
 ---------------------------------------------------------------------------------
 (2) _measure_freq                                         6     4      2    6737
                                             48 BANK0      6     4      2
                        _buffer_init
                        _buffer_puts
                      _format_number
                         _lcd_gotoxy
                       _print_buffer
                     _timer0_read_ps
 ---------------------------------------------------------------------------------
 (3) _timer0_read_ps                                       9     7      2     167
                                              4 COMMON     2     0      2
                                              0 BANK0      7     7      0
 ---------------------------------------------------------------------------------
 (3) _print_buffer                                         1     1      0    1150
                                              5 COMMON     1     1      0
                          _ser_putch
                           _ser_puts
 ---------------------------------------------------------------------------------
 (1) _ser_puts                                             2     0      2    1051
                                              0 BANK0      2     0      2
                          _ser_putch
 ---------------------------------------------------------------------------------
 (2) _ser_putch                                            1     1      0      31
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _lcd_gotoxy                                           6     5      1    1945
                                              3 BANK0      6     5      1
                        _lcd_command
 ---------------------------------------------------------------------------------
 (3) _format_number                                       42    38      4    3249
                                              5 COMMON     1     1      0
                                              7 BANK0     41    37      4
                            ___lwdiv
                            ___lwmod
                       _buffer_putch
 ---------------------------------------------------------------------------------
 (4) ___lwmod                                              5     1      4     582
                                              4 COMMON     1     1      0
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (4) ___lwdiv                                              7     3      4     591
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (3) _buffer_puts                                          2     0      2     161
                                              3 BANK0      2     0      2
                       _buffer_putch
 ---------------------------------------------------------------------------------
 (4) _buffer_putch                                         4     4      0      31
                                              4 COMMON     1     1      0
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (3) _buffer_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _lcd_clear                                            2     2      0     640
                                              3 BANK0      2     2      0
                        _lcd_command
 ---------------------------------------------------------------------------------
 (3) _lcd_command                                          1     1      0     640
                                              2 BANK0      1     1      0
                           _lcd_send
 ---------------------------------------------------------------------------------
 (3) _lcd_send                                             2     1      1     609
                                              0 BANK0      2     1      1
                     _lcd_write4bits
 ---------------------------------------------------------------------------------
 (4) _lcd_write4bits                                       2     2      0      31
                                              4 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _delay10ms                                            1     1      0       0
 ---------------------------------------------------------------------------------
 (2) ___lwtofl                                             4     0      4    2669
                                             54 BANK0      4     0      4
                           ___flpack
                       _measure_freq (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flpack                                            10     4      6    2248
                                              0 BANK0     10     4      6
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (8) _global_int                                           4     4      0       0
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _calibrate
     ___lwtofl
       ___flpack
       _measure_freq (ARG)
         _buffer_init
         _buffer_puts
           _buffer_putch
         _format_number
           ___lwdiv
           ___lwmod
           _buffer_putch
         _lcd_gotoxy
           _lcd_command
             _lcd_send
               _lcd_write4bits
         _print_buffer
           _ser_putch
           _ser_puts
             _ser_putch
         _timer0_read_ps
     _delay10ms
     _lcd_clear
       _lcd_command
         _lcd_send
           _lcd_write4bits
     _lcd_gotoxy
       _lcd_command
         _lcd_send
           _lcd_write4bits
     _lcd_send
       _lcd_write4bits
     _measure_freq
       _buffer_init
       _buffer_puts
         _buffer_putch
       _format_number
         ___lwdiv
         ___lwmod
         _buffer_putch
       _lcd_gotoxy
         _lcd_command
           _lcd_send
             _lcd_write4bits
       _print_buffer
         _ser_putch
         _ser_puts
           _ser_putch
       _timer0_read_ps
     _put_str
       _output_putch
         _lcd_send
           _lcd_write4bits
         _ser_putch
     _ser_puts
       _ser_putch
   _delay10ms
   _format_double
     ___awtofl
       ___flpack
     ___fldiv
       ___flpack
     ___flge
     ___flmul
       ___awtofl (ARG)
         ___flpack
       ___fldiv (ARG)
         ___flpack
       ___flpack (ARG)
       _frexp (ARG)
     ___flsub
       ___awtofl (ARG)
         ___flpack
       ___fladd (ARG)
         ___awtofl (ARG)
           ___flpack
         ___flmul (ARG)
           ___awtofl (ARG)
             ___flpack
           ___fldiv (ARG)
             ___flpack
           ___flpack (ARG)
           _frexp (ARG)
         ___flpack (ARG)
         _frexp (ARG)
       ___flmul (ARG)
         ___awtofl (ARG)
           ___flpack
         ___fldiv (ARG)
           ___flpack
         ___flpack (ARG)
         _frexp (ARG)
     ___fltol
       ___fldiv (ARG)
         ___flpack
       _log10 (ARG)
         ___flmul
           ___awtofl (ARG)
             ___flpack
           ___fldiv (ARG)
             ___flpack
           ___flpack (ARG)
           _frexp (ARG)
         _log
           ___awtofl
             ___flpack
           ___fladd
             ___awtofl (ARG)
               ___flpack
             ___flmul (ARG)
               ___awtofl (ARG)
                 ___flpack
               ___fldiv (ARG)
                 ___flpack
               ___flpack (ARG)
               _frexp (ARG)
             ___flpack (ARG)
             _frexp (ARG)
           ___flge
           ___flmul
             ___awtofl (ARG)
               ___flpack
             ___fldiv (ARG)
               ___flpack
             ___flpack (ARG)
             _frexp (ARG)
           _eval_poly
             ___fladd
               ___awtofl (ARG)
                 ___flpack
               ___flmul (ARG)
                 ___awtofl (ARG)
                   ___flpack
                 ___fldiv (ARG)
                   ___flpack
                 ___flpack (ARG)
                 _frexp (ARG)
               ___flpack (ARG)
               _frexp (ARG)
             ___flmul
               ___awtofl (ARG)
                 ___flpack
               ___fldiv (ARG)
                 ___flpack
               ___flpack (ARG)
               _frexp (ARG)
           _frexp
     _buffer_putch
     _floor
       ___altofl
         ___flpack
         ___fltol (ARG)
           ___fldiv (ARG)
             ___flpack
           _log10 (ARG)
             ___flmul
               ___awtofl (ARG)
                 ___flpack
               ___fldiv (ARG)
                 ___flpack
               ___flpack (ARG)
               _frexp (ARG)
             _log
               ___awtofl
                 ___flpack
               ___fladd
                 ___awtofl (ARG)
                   ___flpack
                 ___flmul (ARG)
                   ___awtofl (ARG)
                     ___flpack
                   ___fldiv (ARG)
                     ___flpack
                   ___flpack (ARG)
                   _frexp (ARG)
                 ___flpack (ARG)
                 _frexp (ARG)
               ___flge
               ___flmul
                 ___awtofl (ARG)
                   ___flpack
                 ___fldiv (ARG)
                   ___flpack
                 ___flpack (ARG)
                 _frexp (ARG)
               _eval_poly
                 ___fladd
                   ___awtofl (ARG)
                     ___flpack
                   ___flmul (ARG)
                     ___awtofl (ARG)
                       ___flpack
                     ___fldiv (ARG)
                       ___flpack
                     ___flpack (ARG)
                     _frexp (ARG)
                   ___flpack (ARG)
                   _frexp (ARG)
                 ___flmul
                   ___awtofl (ARG)
                     ___flpack
                   ___fldiv (ARG)
                     ___flpack
                   ___flpack (ARG)
                   _frexp (ARG)
               _frexp
       ___fladd
         ___awtofl (ARG)
           ___flpack
         ___flmul (ARG)
           ___awtofl (ARG)
             ___flpack
           ___fldiv (ARG)
             ___flpack
           ___flpack (ARG)
           _frexp (ARG)
         ___flpack (ARG)
         _frexp (ARG)
       ___fldiv (ARG)
         ___flpack
       ___flge (ARG)
       ___fltol (ARG)
         ___fldiv (ARG)
           ___flpack
         _log10 (ARG)
           ___flmul
             ___awtofl (ARG)
               ___flpack
             ___fldiv (ARG)
               ___flpack
             ___flpack (ARG)
             _frexp (ARG)
           _log
             ___awtofl
               ___flpack
             ___fladd
               ___awtofl (ARG)
                 ___flpack
               ___flmul (ARG)
                 ___awtofl (ARG)
                   ___flpack
                 ___fldiv (ARG)
                   ___flpack
                 ___flpack (ARG)
                 _frexp (ARG)
               ___flpack (ARG)
               _frexp (ARG)
             ___flge
             ___flmul
               ___awtofl (ARG)
                 ___flpack
               ___fldiv (ARG)
                 ___flpack
               ___flpack (ARG)
               _frexp (ARG)
             _eval_poly
               ___fladd
                 ___awtofl (ARG)
                   ___flpack
                 ___flmul (ARG)
                   ___awtofl (ARG)
                     ___flpack
                   ___fldiv (ARG)
                     ___flpack
                   ___flpack (ARG)
                   _frexp (ARG)
                 ___flpack (ARG)
                 _frexp (ARG)
               ___flmul
                 ___awtofl (ARG)
                   ___flpack
                 ___fldiv (ARG)
                   ___flpack
                 ___flpack (ARG)
                 _frexp (ARG)
             _frexp
       _frexp (ARG)
     _log10
       ___flmul
         ___awtofl (ARG)
           ___flpack
         ___fldiv (ARG)
           ___flpack
         ___flpack (ARG)
         _frexp (ARG)
       _log
         ___awtofl
           ___flpack
         ___fladd
           ___awtofl (ARG)
             ___flpack
           ___flmul (ARG)
             ___awtofl (ARG)
               ___flpack
             ___fldiv (ARG)
               ___flpack
             ___flpack (ARG)
             _frexp (ARG)
           ___flpack (ARG)
           _frexp (ARG)
         ___flge
         ___flmul
           ___awtofl (ARG)
             ___flpack
           ___fldiv (ARG)
             ___flpack
           ___flpack (ARG)
           _frexp (ARG)
         _eval_poly
           ___fladd
             ___awtofl (ARG)
               ___flpack
             ___flmul (ARG)
               ___awtofl (ARG)
                 ___flpack
               ___fldiv (ARG)
                 ___flpack
               ___flpack (ARG)
               _frexp (ARG)
             ___flpack (ARG)
             _frexp (ARG)
           ___flmul
             ___awtofl (ARG)
               ___flpack
             ___fldiv (ARG)
               ___flpack
             ___flpack (ARG)
             _frexp (ARG)
         _frexp
     _pow
       ___flge
       ___flmul
         ___awtofl (ARG)
           ___flpack
         ___fldiv (ARG)
           ___flpack
         ___flpack (ARG)
         _frexp (ARG)
       ___flneg
       ___fltol
         ___fldiv (ARG)
           ___flpack
         _log10 (ARG)
           ___flmul
             ___awtofl (ARG)
               ___flpack
             ___fldiv (ARG)
               ___flpack
             ___flpack (ARG)
             _frexp (ARG)
           _log
             ___awtofl
               ___flpack
             ___fladd
               ___awtofl (ARG)
                 ___flpack
               ___flmul (ARG)
                 ___awtofl (ARG)
                   ___flpack
                 ___fldiv (ARG)
                   ___flpack
                 ___flpack (ARG)
                 _frexp (ARG)
               ___flpack (ARG)
               _frexp (ARG)
             ___flge
             ___flmul
               ___awtofl (ARG)
                 ___flpack
               ___fldiv (ARG)
                 ___flpack
               ___flpack (ARG)
               _frexp (ARG)
             _eval_poly
               ___fladd
                 ___awtofl (ARG)
                   ___flpack
                 ___flmul (ARG)
                   ___awtofl (ARG)
                     ___flpack
                   ___fldiv (ARG)
                     ___flpack
                   ___flpack (ARG)
                   _frexp (ARG)
                 ___flpack (ARG)
                 _frexp (ARG)
               ___flmul
                 ___awtofl (ARG)
                   ___flpack
                 ___fldiv (ARG)
                   ___flpack
                 ___flpack (ARG)
                 _frexp (ARG)
             _frexp
       ___lltofl
         ___flpack
       _exp
         ___awtofl
           ___flpack
         ___fldiv
           ___flpack
         ___flge
         ___flmul
           ___awtofl (ARG)
             ___flpack
           ___fldiv (ARG)
             ___flpack
           ___flpack (ARG)
           _frexp (ARG)
         ___flneg
         ___flsub
           ___awtofl (ARG)
             ___flpack
           ___fladd (ARG)
             ___awtofl (ARG)
               ___flpack
             ___flmul (ARG)
               ___awtofl (ARG)
                 ___flpack
               ___fldiv (ARG)
                 ___flpack
               ___flpack (ARG)
               _frexp (ARG)
             ___flpack (ARG)
             _frexp (ARG)
           ___flmul (ARG)
             ___awtofl (ARG)
               ___flpack
             ___fldiv (ARG)
               ___flpack
             ___flpack (ARG)
             _frexp (ARG)
         ___fltol
           ___fldiv (ARG)
             ___flpack
           _log10 (ARG)
             ___flmul
               ___awtofl (ARG)
                 ___flpack
               ___fldiv (ARG)
                 ___flpack
               ___flpack (ARG)
               _frexp (ARG)
             _log
               ___awtofl
                 ___flpack
               ___fladd
                 ___awtofl (ARG)
                   ___flpack
                 ___flmul (ARG)
                   ___awtofl (ARG)
                     ___flpack
                   ___fldiv (ARG)
                     ___flpack
                   ___flpack (ARG)
                   _frexp (ARG)
                 ___flpack (ARG)
                 _frexp (ARG)
               ___flge
               ___flmul
                 ___awtofl (ARG)
                   ___flpack
                 ___fldiv (ARG)
                   ___flpack
                 ___flpack (ARG)
                 _frexp (ARG)
               _eval_poly
                 ___fladd
                   ___awtofl (ARG)
                     ___flpack
                   ___flmul (ARG)
                     ___awtofl (ARG)
                       ___flpack
                     ___fldiv (ARG)
                       ___flpack
                     ___flpack (ARG)
                     _frexp (ARG)
                   ___flpack (ARG)
                   _frexp (ARG)
                 ___flmul
                   ___awtofl (ARG)
                     ___flpack
                   ___fldiv (ARG)
                     ___flpack
                   ___flpack (ARG)
                   _frexp (ARG)
               _frexp
         _eval_poly
           ___fladd
             ___awtofl (ARG)
               ___flpack
             ___flmul (ARG)
               ___awtofl (ARG)
                 ___flpack
               ___fldiv (ARG)
                 ___flpack
               ___flpack (ARG)
               _frexp (ARG)
             ___flpack (ARG)
             _frexp (ARG)
           ___flmul
             ___awtofl (ARG)
               ___flpack
             ___fldiv (ARG)
               ___flpack
             ___flpack (ARG)
             _frexp (ARG)
         _floor
           ___altofl
             ___flpack
             ___fltol (ARG)
               ___fldiv (ARG)
                 ___flpack
               _log10 (ARG)
                 ___flmul
                   ___awtofl (ARG)
                     ___flpack
                   ___fldiv (ARG)
                     ___flpack
                   ___flpack (ARG)
                   _frexp (ARG)
                 _log
                   ___awtofl
                     ___flpack
                   ___fladd
                     ___awtofl (ARG)
                       ___flpack
                     ___flmul (ARG)
                       ___awtofl (ARG)
                         ___flpack
                       ___fldiv (ARG)
                         ___flpack
                       ___flpack (ARG)
                       _frexp (ARG)
                     ___flpack (ARG)
                     _frexp (ARG)
                   ___flge
                   ___flmul
                     ___awtofl (ARG)
                       ___flpack
                     ___fldiv (ARG)
                       ___flpack
                     ___flpack (ARG)
                     _frexp (ARG)
                   _eval_poly
                     ___fladd
                       ___awtofl (ARG)
                         ___flpack
                       ___flmul (ARG)
                         ___awtofl (ARG)
                           ___flpack
                         ___fldiv (ARG)
                           ___flpack
                         ___flpack (ARG)
                         _frexp (ARG)
                       ___flpack (ARG)
                       _frexp (ARG)
                     ___flmul
                       ___awtofl (ARG)
                         ___flpack
                       ___fldiv (ARG)
                         ___flpack
                       ___flpack (ARG)
                       _frexp (ARG)
                   _frexp
           ___fladd
             ___awtofl (ARG)
               ___flpack
             ___flmul (ARG)
               ___awtofl (ARG)
                 ___flpack
               ___fldiv (ARG)
                 ___flpack
               ___flpack (ARG)
               _frexp (ARG)
             ___flpack (ARG)
             _frexp (ARG)
           ___fldiv (ARG)
             ___flpack
           ___flge (ARG)
           ___fltol (ARG)
             ___fldiv (ARG)
               ___flpack
             _log10 (ARG)
               ___flmul
                 ___awtofl (ARG)
                   ___flpack
                 ___fldiv (ARG)
                   ___flpack
                 ___flpack (ARG)
                 _frexp (ARG)
               _log
                 ___awtofl
                   ___flpack
                 ___fladd
                   ___awtofl (ARG)
                     ___flpack
                   ___flmul (ARG)
                     ___awtofl (ARG)
                       ___flpack
                     ___fldiv (ARG)
                       ___flpack
                     ___flpack (ARG)
                     _frexp (ARG)
                   ___flpack (ARG)
                   _frexp (ARG)
                 ___flge
                 ___flmul
                   ___awtofl (ARG)
                     ___flpack
                   ___fldiv (ARG)
                     ___flpack
                   ___flpack (ARG)
                   _frexp (ARG)
                 _eval_poly
                   ___fladd
                     ___awtofl (ARG)
                       ___flpack
                     ___flmul (ARG)
                       ___awtofl (ARG)
                         ___flpack
                       ___fldiv (ARG)
                         ___flpack
                       ___flpack (ARG)
                       _frexp (ARG)
                     ___flpack (ARG)
                     _frexp (ARG)
                   ___flmul
                     ___awtofl (ARG)
                       ___flpack
                     ___fldiv (ARG)
                       ___flpack
                     ___flpack (ARG)
                     _frexp (ARG)
                 _frexp
           _frexp (ARG)
         _ldexp
           ___flge
           ___flneg
           _eval_poly (ARG)
             ___fladd
               ___awtofl (ARG)
                 ___flpack
               ___flmul (ARG)
                 ___awtofl (ARG)
                   ___flpack
                 ___fldiv (ARG)
                   ___flpack
                 ___flpack (ARG)
                 _frexp (ARG)
               ___flpack (ARG)
               _frexp (ARG)
             ___flmul
               ___awtofl (ARG)
                 ___flpack
               ___fldiv (ARG)
                 ___flpack
               ___flpack (ARG)
               _frexp (ARG)
         _log (ARG)
           ___awtofl
             ___flpack
           ___fladd
             ___awtofl (ARG)
               ___flpack
             ___flmul (ARG)
               ___awtofl (ARG)
                 ___flpack
               ___fldiv (ARG)
                 ___flpack
               ___flpack (ARG)
               _frexp (ARG)
             ___flpack (ARG)
             _frexp (ARG)
           ___flge
           ___flmul
             ___awtofl (ARG)
               ___flpack
             ___fldiv (ARG)
               ___flpack
             ___flpack (ARG)
             _frexp (ARG)
           _eval_poly
             ___fladd
               ___awtofl (ARG)
                 ___flpack
               ___flmul (ARG)
                 ___awtofl (ARG)
                   ___flpack
                 ___fldiv (ARG)
                   ___flpack
                 ___flpack (ARG)
                 _frexp (ARG)
               ___flpack (ARG)
               _frexp (ARG)
             ___flmul
               ___awtofl (ARG)
                 ___flpack
               ___fldiv (ARG)
                 ___flpack
               ___flpack (ARG)
               _frexp (ARG)
           _frexp
       _log
         ___awtofl
           ___flpack
         ___fladd
           ___awtofl (ARG)
             ___flpack
           ___flmul (ARG)
             ___awtofl (ARG)
               ___flpack
             ___fldiv (ARG)
               ___flpack
             ___flpack (ARG)
             _frexp (ARG)
           ___flpack (ARG)
           _frexp (ARG)
         ___flge
         ___flmul
           ___awtofl (ARG)
             ___flpack
           ___fldiv (ARG)
             ___flpack
           ___flpack (ARG)
           _frexp (ARG)
         _eval_poly
           ___fladd
             ___awtofl (ARG)
               ___flpack
             ___flmul (ARG)
               ___awtofl (ARG)
                 ___flpack
               ___fldiv (ARG)
                 ___flpack
               ___flpack (ARG)
               _frexp (ARG)
             ___flpack (ARG)
             _frexp (ARG)
           ___flmul
             ___awtofl (ARG)
               ___flpack
             ___fldiv (ARG)
               ___flpack
             ___flpack (ARG)
             _frexp (ARG)
         _frexp
   _lcd_begin
     _lcd_command
       _lcd_send
         _lcd_write4bits
     _lcd_write4bits
   _lcd_clear
     _lcd_command
       _lcd_send
         _lcd_write4bits
   _lcd_gotoxy
     _lcd_command
       _lcd_send
         _lcd_write4bits
   _lcd_init
   _lcd_puts
     _lcd_send
       _lcd_write4bits
   _measure_capacitance
     ___fldiv
       ___flpack
     ___flge
     ___flmul
       ___awtofl (ARG)
         ___flpack
       ___fldiv (ARG)
         ___flpack
       ___flpack (ARG)
       _frexp (ARG)
     ___flsub
       ___awtofl (ARG)
         ___flpack
       ___fladd (ARG)
         ___awtofl (ARG)
           ___flpack
         ___flmul (ARG)
           ___awtofl (ARG)
             ___flpack
           ___fldiv (ARG)
             ___flpack
           ___flpack (ARG)
           _frexp (ARG)
         ___flpack (ARG)
         _frexp (ARG)
       ___flmul (ARG)
         ___awtofl (ARG)
           ___flpack
         ___fldiv (ARG)
           ___flpack
         ___flpack (ARG)
         _frexp (ARG)
     ___fltol
       ___fldiv (ARG)
         ___flpack
       _log10 (ARG)
         ___flmul
           ___awtofl (ARG)
             ___flpack
           ___fldiv (ARG)
             ___flpack
           ___flpack (ARG)
           _frexp (ARG)
         _log
           ___awtofl
             ___flpack
           ___fladd
             ___awtofl (ARG)
               ___flpack
             ___flmul (ARG)
               ___awtofl (ARG)
                 ___flpack
               ___fldiv (ARG)
                 ___flpack
               ___flpack (ARG)
               _frexp (ARG)
             ___flpack (ARG)
             _frexp (ARG)
           ___flge
           ___flmul
             ___awtofl (ARG)
               ___flpack
             ___fldiv (ARG)
               ___flpack
             ___flpack (ARG)
             _frexp (ARG)
           _eval_poly
             ___fladd
               ___awtofl (ARG)
                 ___flpack
               ___flmul (ARG)
                 ___awtofl (ARG)
                   ___flpack
                 ___fldiv (ARG)
                   ___flpack
                 ___flpack (ARG)
                 _frexp (ARG)
               ___flpack (ARG)
               _frexp (ARG)
             ___flmul
               ___awtofl (ARG)
                 ___flpack
               ___fldiv (ARG)
                 ___flpack
               ___flpack (ARG)
               _frexp (ARG)
           _frexp
     ___lwtofl
       ___flpack
       _measure_freq (ARG)
         _buffer_init
         _buffer_puts
           _buffer_putch
         _format_number
           ___lwdiv
           ___lwmod
           _buffer_putch
         _lcd_gotoxy
           _lcd_command
             _lcd_send
               _lcd_write4bits
         _print_buffer
           _ser_putch
           _ser_puts
             _ser_putch
         _timer0_read_ps
     _format_double
       ___awtofl
         ___flpack
       ___fldiv
         ___flpack
       ___flge
       ___flmul
         ___awtofl (ARG)
           ___flpack
         ___fldiv (ARG)
           ___flpack
         ___flpack (ARG)
         _frexp (ARG)
       ___flsub
         ___awtofl (ARG)
           ___flpack
         ___fladd (ARG)
           ___awtofl (ARG)
             ___flpack
           ___flmul (ARG)
             ___awtofl (ARG)
               ___flpack
             ___fldiv (ARG)
               ___flpack
             ___flpack (ARG)
             _frexp (ARG)
           ___flpack (ARG)
           _frexp (ARG)
         ___flmul (ARG)
           ___awtofl (ARG)
             ___flpack
           ___fldiv (ARG)
             ___flpack
           ___flpack (ARG)
           _frexp (ARG)
       ___fltol
         ___fldiv (ARG)
           ___flpack
         _log10 (ARG)
           ___flmul
             ___awtofl (ARG)
               ___flpack
             ___fldiv (ARG)
               ___flpack
             ___flpack (ARG)
             _frexp (ARG)
           _log
             ___awtofl
               ___flpack
             ___fladd
               ___awtofl (ARG)
                 ___flpack
               ___flmul (ARG)
                 ___awtofl (ARG)
                   ___flpack
                 ___fldiv (ARG)
                   ___flpack
                 ___flpack (ARG)
                 _frexp (ARG)
               ___flpack (ARG)
               _frexp (ARG)
             ___flge
             ___flmul
               ___awtofl (ARG)
                 ___flpack
               ___fldiv (ARG)
                 ___flpack
               ___flpack (ARG)
               _frexp (ARG)
             _eval_poly
               ___fladd
                 ___awtofl (ARG)
                   ___flpack
                 ___flmul (ARG)
                   ___awtofl (ARG)
                     ___flpack
                   ___fldiv (ARG)
                     ___flpack
                   ___flpack (ARG)
                   _frexp (ARG)
                 ___flpack (ARG)
                 _frexp (ARG)
               ___flmul
                 ___awtofl (ARG)
                   ___flpack
                 ___fldiv (ARG)
                   ___flpack
                 ___flpack (ARG)
                 _frexp (ARG)
             _frexp
       _buffer_putch
       _floor
         ___altofl
           ___flpack
           ___fltol (ARG)
             ___fldiv (ARG)
               ___flpack
             _log10 (ARG)
               ___flmul
                 ___awtofl (ARG)
                   ___flpack
                 ___fldiv (ARG)
                   ___flpack
                 ___flpack (ARG)
                 _frexp (ARG)
               _log
                 ___awtofl
                   ___flpack
                 ___fladd
                   ___awtofl (ARG)
                     ___flpack
                   ___flmul (ARG)
                     ___awtofl (ARG)
                       ___flpack
                     ___fldiv (ARG)
                       ___flpack
                     ___flpack (ARG)
                     _frexp (ARG)
                   ___flpack (ARG)
                   _frexp (ARG)
                 ___flge
                 ___flmul
                   ___awtofl (ARG)
                     ___flpack
                   ___fldiv (ARG)
                     ___flpack
                   ___flpack (ARG)
                   _frexp (ARG)
                 _eval_poly
                   ___fladd
                     ___awtofl (ARG)
                       ___flpack
                     ___flmul (ARG)
                       ___awtofl (ARG)
                         ___flpack
                       ___fldiv (ARG)
                         ___flpack
                       ___flpack (ARG)
                       _frexp (ARG)
                     ___flpack (ARG)
                     _frexp (ARG)
                   ___flmul
                     ___awtofl (ARG)
                       ___flpack
                     ___fldiv (ARG)
                       ___flpack
                     ___flpack (ARG)
                     _frexp (ARG)
                 _frexp
         ___fladd
           ___awtofl (ARG)
             ___flpack
           ___flmul (ARG)
             ___awtofl (ARG)
               ___flpack
             ___fldiv (ARG)
               ___flpack
             ___flpack (ARG)
             _frexp (ARG)
           ___flpack (ARG)
           _frexp (ARG)
         ___fldiv (ARG)
           ___flpack
         ___flge (ARG)
         ___fltol (ARG)
           ___fldiv (ARG)
             ___flpack
           _log10 (ARG)
             ___flmul
               ___awtofl (ARG)
                 ___flpack
               ___fldiv (ARG)
                 ___flpack
               ___flpack (ARG)
               _frexp (ARG)
             _log
               ___awtofl
                 ___flpack
               ___fladd
                 ___awtofl (ARG)
                   ___flpack
                 ___flmul (ARG)
                   ___awtofl (ARG)
                     ___flpack
                   ___fldiv (ARG)
                     ___flpack
                   ___flpack (ARG)
                   _frexp (ARG)
                 ___flpack (ARG)
                 _frexp (ARG)
               ___flge
               ___flmul
                 ___awtofl (ARG)
                   ___flpack
                 ___fldiv (ARG)
                   ___flpack
                 ___flpack (ARG)
                 _frexp (ARG)
               _eval_poly
                 ___fladd
                   ___awtofl (ARG)
                     ___flpack
                   ___flmul (ARG)
                     ___awtofl (ARG)
                       ___flpack
                     ___fldiv (ARG)
                       ___flpack
                     ___flpack (ARG)
                     _frexp (ARG)
                   ___flpack (ARG)
                   _frexp (ARG)
                 ___flmul
                   ___awtofl (ARG)
                     ___flpack
                   ___fldiv (ARG)
                     ___flpack
                   ___flpack (ARG)
                   _frexp (ARG)
               _frexp
         _frexp (ARG)
       _log10
         ___flmul
           ___awtofl (ARG)
             ___flpack
           ___fldiv (ARG)
             ___flpack
           ___flpack (ARG)
           _frexp (ARG)
         _log
           ___awtofl
             ___flpack
           ___fladd
             ___awtofl (ARG)
               ___flpack
             ___flmul (ARG)
               ___awtofl (ARG)
                 ___flpack
               ___fldiv (ARG)
                 ___flpack
               ___flpack (ARG)
               _frexp (ARG)
             ___flpack (ARG)
             _frexp (ARG)
           ___flge
           ___flmul
             ___awtofl (ARG)
               ___flpack
             ___fldiv (ARG)
               ___flpack
             ___flpack (ARG)
             _frexp (ARG)
           _eval_poly
             ___fladd
               ___awtofl (ARG)
                 ___flpack
               ___flmul (ARG)
                 ___awtofl (ARG)
                   ___flpack
                 ___fldiv (ARG)
                   ___flpack
                 ___flpack (ARG)
                 _frexp (ARG)
               ___flpack (ARG)
               _frexp (ARG)
             ___flmul
               ___awtofl (ARG)
                 ___flpack
               ___fldiv (ARG)
                 ___flpack
               ___flpack (ARG)
               _frexp (ARG)
           _frexp
       _pow
         ___flge
         ___flmul
           ___awtofl (ARG)
             ___flpack
           ___fldiv (ARG)
             ___flpack
           ___flpack (ARG)
           _frexp (ARG)
         ___flneg
         ___fltol
           ___fldiv (ARG)
             ___flpack
           _log10 (ARG)
             ___flmul
               ___awtofl (ARG)
                 ___flpack
               ___fldiv (ARG)
                 ___flpack
               ___flpack (ARG)
               _frexp (ARG)
             _log
               ___awtofl
                 ___flpack
               ___fladd
                 ___awtofl (ARG)
                   ___flpack
                 ___flmul (ARG)
                   ___awtofl (ARG)
                     ___flpack
                   ___fldiv (ARG)
                     ___flpack
                   ___flpack (ARG)
                   _frexp (ARG)
                 ___flpack (ARG)
                 _frexp (ARG)
               ___flge
               ___flmul
                 ___awtofl (ARG)
                   ___flpack
                 ___fldiv (ARG)
                   ___flpack
                 ___flpack (ARG)
                 _frexp (ARG)
               _eval_poly
                 ___fladd
                   ___awtofl (ARG)
                     ___flpack
                   ___flmul (ARG)
                     ___awtofl (ARG)
                       ___flpack
                     ___fldiv (ARG)
                       ___flpack
                     ___flpack (ARG)
                     _frexp (ARG)
                   ___flpack (ARG)
                   _frexp (ARG)
                 ___flmul
                   ___awtofl (ARG)
                     ___flpack
                   ___fldiv (ARG)
                     ___flpack
                   ___flpack (ARG)
                   _frexp (ARG)
               _frexp
         ___lltofl
           ___flpack
         _exp
           ___awtofl
             ___flpack
           ___fldiv
             ___flpack
           ___flge
           ___flmul
             ___awtofl (ARG)
               ___flpack
             ___fldiv (ARG)
               ___flpack
             ___flpack (ARG)
             _frexp (ARG)
           ___flneg
           ___flsub
             ___awtofl (ARG)
               ___flpack
             ___fladd (ARG)
               ___awtofl (ARG)
                 ___flpack
               ___flmul (ARG)
                 ___awtofl (ARG)
                   ___flpack
                 ___fldiv (ARG)
                   ___flpack
                 ___flpack (ARG)
                 _frexp (ARG)
               ___flpack (ARG)
               _frexp (ARG)
             ___flmul (ARG)
               ___awtofl (ARG)
                 ___flpack
               ___fldiv (ARG)
                 ___flpack
               ___flpack (ARG)
               _frexp (ARG)
           ___fltol
             ___fldiv (ARG)
               ___flpack
             _log10 (ARG)
               ___flmul
                 ___awtofl (ARG)
                   ___flpack
                 ___fldiv (ARG)
                   ___flpack
                 ___flpack (ARG)
                 _frexp (ARG)
               _log
                 ___awtofl
                   ___flpack
                 ___fladd
                   ___awtofl (ARG)
                     ___flpack
                   ___flmul (ARG)
                     ___awtofl (ARG)
                       ___flpack
                     ___fldiv (ARG)
                       ___flpack
                     ___flpack (ARG)
                     _frexp (ARG)
                   ___flpack (ARG)
                   _frexp (ARG)
                 ___flge
                 ___flmul
                   ___awtofl (ARG)
                     ___flpack
                   ___fldiv (ARG)
                     ___flpack
                   ___flpack (ARG)
                   _frexp (ARG)
                 _eval_poly
                   ___fladd
                     ___awtofl (ARG)
                       ___flpack
                     ___flmul (ARG)
                       ___awtofl (ARG)
                         ___flpack
                       ___fldiv (ARG)
                         ___flpack
                       ___flpack (ARG)
                       _frexp (ARG)
                     ___flpack (ARG)
                     _frexp (ARG)
                   ___flmul
                     ___awtofl (ARG)
                       ___flpack
                     ___fldiv (ARG)
                       ___flpack
                     ___flpack (ARG)
                     _frexp (ARG)
                 _frexp
           _eval_poly
             ___fladd
               ___awtofl (ARG)
                 ___flpack
               ___flmul (ARG)
                 ___awtofl (ARG)
                   ___flpack
                 ___fldiv (ARG)
                   ___flpack
                 ___flpack (ARG)
                 _frexp (ARG)
               ___flpack (ARG)
               _frexp (ARG)
             ___flmul
               ___awtofl (ARG)
                 ___flpack
               ___fldiv (ARG)
                 ___flpack
               ___flpack (ARG)
               _frexp (ARG)
           _floor
             ___altofl
               ___flpack
               ___fltol (ARG)
                 ___fldiv (ARG)
                   ___flpack
                 _log10 (ARG)
                   ___flmul
                     ___awtofl (ARG)
                       ___flpack
                     ___fldiv (ARG)
                       ___flpack
                     ___flpack (ARG)
                     _frexp (ARG)
                   _log
                     ___awtofl
                       ___flpack
                     ___fladd
                       ___awtofl (ARG)
                         ___flpack
                       ___flmul (ARG)
                         ___awtofl (ARG)
                           ___flpack
                         ___fldiv (ARG)
                           ___flpack
                         ___flpack (ARG)
                         _frexp (ARG)
                       ___flpack (ARG)
                       _frexp (ARG)
                     ___flge
                     ___flmul
                       ___awtofl (ARG)
                         ___flpack
                       ___fldiv (ARG)
                         ___flpack
                       ___flpack (ARG)
                       _frexp (ARG)
                     _eval_poly
                       ___fladd
                         ___awtofl (ARG)
                           ___flpack
                         ___flmul (ARG)
                           ___awtofl (ARG)
                             ___flpack
                           ___fldiv (ARG)
                             ___flpack
                           ___flpack (ARG)
                           _frexp (ARG)
                         ___flpack (ARG)
                         _frexp (ARG)
                       ___flmul
                         ___awtofl (ARG)
                           ___flpack
                         ___fldiv (ARG)
                           ___flpack
                         ___flpack (ARG)
                         _frexp (ARG)
                     _frexp
             ___fladd
               ___awtofl (ARG)
                 ___flpack
               ___flmul (ARG)
                 ___awtofl (ARG)
                   ___flpack
                 ___fldiv (ARG)
                   ___flpack
                 ___flpack (ARG)
                 _frexp (ARG)
               ___flpack (ARG)
               _frexp (ARG)
             ___fldiv (ARG)
               ___flpack
             ___flge (ARG)
             ___fltol (ARG)
               ___fldiv (ARG)
                 ___flpack
               _log10 (ARG)
                 ___flmul
                   ___awtofl (ARG)
                     ___flpack
                   ___fldiv (ARG)
                     ___flpack
                   ___flpack (ARG)
                   _frexp (ARG)
                 _log
                   ___awtofl
                     ___flpack
                   ___fladd
                     ___awtofl (ARG)
                       ___flpack
                     ___flmul (ARG)
                       ___awtofl (ARG)
                         ___flpack
                       ___fldiv (ARG)
                         ___flpack
                       ___flpack (ARG)
                       _frexp (ARG)
                     ___flpack (ARG)
                     _frexp (ARG)
                   ___flge
                   ___flmul
                     ___awtofl (ARG)
                       ___flpack
                     ___fldiv (ARG)
                       ___flpack
                     ___flpack (ARG)
                     _frexp (ARG)
                   _eval_poly
                     ___fladd
                       ___awtofl (ARG)
                         ___flpack
                       ___flmul (ARG)
                         ___awtofl (ARG)
                           ___flpack
                         ___fldiv (ARG)
                           ___flpack
                         ___flpack (ARG)
                         _frexp (ARG)
                       ___flpack (ARG)
                       _frexp (ARG)
                     ___flmul
                       ___awtofl (ARG)
                         ___flpack
                       ___fldiv (ARG)
                         ___flpack
                       ___flpack (ARG)
                       _frexp (ARG)
                   _frexp
             _frexp (ARG)
           _ldexp
             ___flge
             ___flneg
             _eval_poly (ARG)
               ___fladd
                 ___awtofl (ARG)
                   ___flpack
                 ___flmul (ARG)
                   ___awtofl (ARG)
                     ___flpack
                   ___fldiv (ARG)
                     ___flpack
                   ___flpack (ARG)
                   _frexp (ARG)
                 ___flpack (ARG)
                 _frexp (ARG)
               ___flmul
                 ___awtofl (ARG)
                   ___flpack
                 ___fldiv (ARG)
                   ___flpack
                 ___flpack (ARG)
                 _frexp (ARG)
           _log (ARG)
             ___awtofl
               ___flpack
             ___fladd
               ___awtofl (ARG)
                 ___flpack
               ___flmul (ARG)
                 ___awtofl (ARG)
                   ___flpack
                 ___fldiv (ARG)
                   ___flpack
                 ___flpack (ARG)
                 _frexp (ARG)
               ___flpack (ARG)
               _frexp (ARG)
             ___flge
             ___flmul
               ___awtofl (ARG)
                 ___flpack
               ___fldiv (ARG)
                 ___flpack
               ___flpack (ARG)
               _frexp (ARG)
             _eval_poly
               ___fladd
                 ___awtofl (ARG)
                   ___flpack
                 ___flmul (ARG)
                   ___awtofl (ARG)
                     ___flpack
                   ___fldiv (ARG)
                     ___flpack
                   ___flpack (ARG)
                   _frexp (ARG)
                 ___flpack (ARG)
                 _frexp (ARG)
               ___flmul
                 ___awtofl (ARG)
                   ___flpack
                 ___fldiv (ARG)
                   ___flpack
                 ___flpack (ARG)
                 _frexp (ARG)
             _frexp
         _log
           ___awtofl
             ___flpack
           ___fladd
             ___awtofl (ARG)
               ___flpack
             ___flmul (ARG)
               ___awtofl (ARG)
                 ___flpack
               ___fldiv (ARG)
                 ___flpack
               ___flpack (ARG)
               _frexp (ARG)
             ___flpack (ARG)
             _frexp (ARG)
           ___flge
           ___flmul
             ___awtofl (ARG)
               ___flpack
             ___fldiv (ARG)
               ___flpack
             ___flpack (ARG)
             _frexp (ARG)
           _eval_poly
             ___fladd
               ___awtofl (ARG)
                 ___flpack
               ___flmul (ARG)
                 ___awtofl (ARG)
                   ___flpack
                 ___fldiv (ARG)
                   ___flpack
                 ___flpack (ARG)
                 _frexp (ARG)
               ___flpack (ARG)
               _frexp (ARG)
             ___flmul
               ___awtofl (ARG)
                 ___flpack
               ___fldiv (ARG)
                 ___flpack
               ___flpack (ARG)
               _frexp (ARG)
           _frexp
     _format_xint32
       _buffer_putch
       _format_number
         ___lwdiv
         ___lwmod
         _buffer_putch
     _lcd_gotoxy
       _lcd_command
         _lcd_send
           _lcd_write4bits
     _measure_freq
       _buffer_init
       _buffer_puts
         _buffer_putch
       _format_number
         ___lwdiv
         ___lwmod
         _buffer_putch
       _lcd_gotoxy
         _lcd_command
           _lcd_send
             _lcd_write4bits
       _print_buffer
         _ser_putch
         _ser_puts
           _ser_putch
       _timer0_read_ps
     _print_reading
       ___lwdiv
       ___lwmod
       _format_number
         ___lwdiv
         ___lwmod
         _buffer_putch
       _lcd_gotoxy
         _lcd_command
           _lcd_send
             _lcd_write4bits
       _lcd_puts
         _lcd_send
           _lcd_write4bits
     _print_unit
       _lcd_gotoxy
         _lcd_command
           _lcd_send
             _lcd_write4bits
       _ser_puts
         _ser_putch
     _put_str
       _output_putch
         _lcd_send
           _lcd_write4bits
         _ser_putch
     _ser_putch
     _ser_puts
       _ser_putch
   _measure_inductance
     ___fldiv
       ___flpack
     ___flge
     ___flmul
       ___awtofl (ARG)
         ___flpack
       ___fldiv (ARG)
         ___flpack
       ___flpack (ARG)
       _frexp (ARG)
     ___flsub
       ___awtofl (ARG)
         ___flpack
       ___fladd (ARG)
         ___awtofl (ARG)
           ___flpack
         ___flmul (ARG)
           ___awtofl (ARG)
             ___flpack
           ___fldiv (ARG)
             ___flpack
           ___flpack (ARG)
           _frexp (ARG)
         ___flpack (ARG)
         _frexp (ARG)
       ___flmul (ARG)
         ___awtofl (ARG)
           ___flpack
         ___fldiv (ARG)
           ___flpack
         ___flpack (ARG)
         _frexp (ARG)
     ___fltol
       ___fldiv (ARG)
         ___flpack
       _log10 (ARG)
         ___flmul
           ___awtofl (ARG)
             ___flpack
           ___fldiv (ARG)
             ___flpack
           ___flpack (ARG)
           _frexp (ARG)
         _log
           ___awtofl
             ___flpack
           ___fladd
             ___awtofl (ARG)
               ___flpack
             ___flmul (ARG)
               ___awtofl (ARG)
                 ___flpack
               ___fldiv (ARG)
                 ___flpack
               ___flpack (ARG)
               _frexp (ARG)
             ___flpack (ARG)
             _frexp (ARG)
           ___flge
           ___flmul
             ___awtofl (ARG)
               ___flpack
             ___fldiv (ARG)
               ___flpack
             ___flpack (ARG)
             _frexp (ARG)
           _eval_poly
             ___fladd
               ___awtofl (ARG)
                 ___flpack
               ___flmul (ARG)
                 ___awtofl (ARG)
                   ___flpack
                 ___fldiv (ARG)
                   ___flpack
                 ___flpack (ARG)
                 _frexp (ARG)
               ___flpack (ARG)
               _frexp (ARG)
             ___flmul
               ___awtofl (ARG)
                 ___flpack
               ___fldiv (ARG)
                 ___flpack
               ___flpack (ARG)
               _frexp (ARG)
           _frexp
     ___lwtofl
       ___flpack
       _measure_freq (ARG)
         _buffer_init
         _buffer_puts
           _buffer_putch
         _format_number
           ___lwdiv
           ___lwmod
           _buffer_putch
         _lcd_gotoxy
           _lcd_command
             _lcd_send
               _lcd_write4bits
         _print_buffer
           _ser_putch
           _ser_puts
             _ser_putch
         _timer0_read_ps
     _lcd_gotoxy
       _lcd_command
         _lcd_send
           _lcd_write4bits
     _measure_freq
       _buffer_init
       _buffer_puts
         _buffer_putch
       _format_number
         ___lwdiv
         ___lwmod
         _buffer_putch
       _lcd_gotoxy
         _lcd_command
           _lcd_send
             _lcd_write4bits
       _print_buffer
         _ser_putch
         _ser_puts
           _ser_putch
       _timer0_read_ps
     _print_reading
       ___lwdiv
       ___lwmod
       _format_number
         ___lwdiv
         ___lwmod
         _buffer_putch
       _lcd_gotoxy
         _lcd_command
           _lcd_send
             _lcd_write4bits
       _lcd_puts
         _lcd_send
           _lcd_write4bits
     _print_unit
       _lcd_gotoxy
         _lcd_command
           _lcd_send
             _lcd_write4bits
       _ser_puts
         _ser_putch
     _put_str
       _output_putch
         _lcd_send
           _lcd_write4bits
         _ser_putch
   _print_indicator
     _lcd_gotoxy
       _lcd_command
         _lcd_send
           _lcd_write4bits
     _lcd_puts
       _lcd_send
         _lcd_write4bits
   _ser_init
   _ser_puts
     _ser_putch
   _timer0_init
   _timer2_init

 _global_int (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60     17      54       8       87.5%
BITBANK3            60      0       0       7        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60     13      33       9       53.1%
BITBANK2            60      0       0      12        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50     4F      4F       6       98.8%
BITBANK1            50      0       0       5        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               4F     4F      4F       4      100.0%
BITBANK0            4F      0       0       3        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      6       A       1       71.4%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0     12F      11        0.0%
ABS                  0      0     12F      10        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V1.34 build -361300703 
Symbol Table                                                                                   Thu Sep 26 08:23:05 2019

                ___altofl@sign 00C0                   ___fldiv@cntr 003B                              pc 0002  
                 ___fldiv@sign 003D                             _F1 01BC                             _F2 0190  
                           _F3 0194                             fsr 0004                   ___flpack@arg 0021  
                 ___flpack@exp 0025                            l303 0FF4                            l269 0123  
                          l806 17A7                            l818 17D5                            l842 094B  
                          l867 0F6A                            l891 05EC                            _GIE 005F  
                 __CFG_CPD$OFF 0000                 lcd_begin@lines 0027                            _RX9 00C6  
                          _TX9 04C6                            _exp 0409                            _log 0670  
                          _pow 1EAB                            fsr0 0004                            indf 0000  
                 __CFG_FOSC$HS 0000             timer0_read_ps@prev 0025                   ___flmul@cntr 004F  
                 ___flmul@sign 0050                   __CFG_LVP$OFF 0000         __end_of_lcd_write4bits 03EC  
                ___flpack@sign 0026                   ___fltol@exp1 00BB                           l4002 1641  
                         l4102 1423                           l4006 1655                           l4024 1665  
                         l4200 0440                           l4042 1722                           l4050 1D4B  
                         l4210 04A9                           l4300 03ED                           l4124 0690  
                         l4204 0465                           l4302 0400                           l4310 0311  
                         l4230 058A                           l4160 1E5B                           l4240 0FA1  
                         l4128 069C                           l4080 1DBE                           l4250 173E  
                         l4058 1D65                           l4242 1E60                           l3700 17B2  
                         l4148 1E44                           l4172 1E93                           l4180 1EA6  
                         l4260 1747                           l4092 08B4                           l3710 17C9  
                         l3702 17B7                           l4326 030A                           l4406 0FAF  
                         l4190 0417                           l3704 17C4                           l4280 178C  
                         l4096 1423                           l4328 0323                           l3800 0967  
                         l4352 1EDE                           l4424 15F2                           l4248 1E61  
                         l3714 17DA                           l4346 1ED0                           l4426 1498  
                         l4530 1C77                           l4514 1C5F                           l4506 1C52  
                         l3708 17D3                           l4276 177D                           l3820 0F4D  
                         l3812 098C                           l4364 1F66                           l4524 1C71  
                         l4382 02E2                           l4278 1781                           l3750 08F5  
                         l4358 1F3E                           l4616 03AC                           l4608 0387  
                         l4560 0025                           l3736 07AC                           l3912 16B5  
                         l4384 1C14                           l3746 08EC                           l3834 0EAC  
                         l3914 16BA                           l3780 0931                           l3756 0904  
                         l3860 0EE8                           l3940 16EE                           l3932 16E0  
                         l4900 00F5                           l4590 034E                           l3774 0922  
                         l3838 0EC0                           l4486 1DEC                           l4910 011E  
                         l3952 1441                           l4680 0206                           l3776 0928  
                         l3768 0912                           l3872 0F0C                           l3856 0ED2  
                         l3928 16D8                           l4832 0DF5                           l4840 0E4F  
                         l3698 17AC                           l3794 0959                           l3786 0941  
                         l3778 092D                           l3938 16E4                           l4770 139A  
                         l4738 1172                           l4842 0E52                           l4498 1C47  
                         l4906 0115                           l3948 0FF5                           l3788 0947  
                         l3868 0EF6                           l4836 0E23                           ?_exp 00CB  
                         ?_log 00A4                           l3974 05F2                           l4766 136F  
                         l4774 13C4                           l3984 0666                           l3994 1706  
                         l3898 076F                           l4796 0A1D                           l4892 00E1  
                         ?_pow 00DA                           STR_2 1903                           STR_3 1909  
                         STR_4 1906                           STR_5 18F7                           STR_6 1900  
                         STR_7 18FA                           STR_8 18FD                           STR_9 18F4  
                         _BRGH 04C2                           _CREN 00C4                           _CCal 01D7  
                         u4200 1BF7                           u4055 1F36                           _PIE1 008C  
                         u4190 1BF6                           u4350 00E7                           u4407 0352  
                         u4360 00E8                           u4417 0367                           u3625 1678  
                         u3465 16C3                           u4507 024B                           u4427 0374  
                         _PEIE 005E                           u4517 0256                           u4437 037F  
                         u4607 03E8                           u3735 160F                           u4527 0261  
                         u4447 0392                           u3825 1E99                           u4537 026C  
                         u4457 03A2                           u4547 0277                           u4467 03C3  
                         u3675 1D6E                           u3915 0583                           _RCIF 0065  
                         u4557 0282                           u4477 0229                           u3870 0482  
                         u4567 028D                           u4487 0235                           u3880 0483  
                         u3785 1E4D                           u4577 0298                           u4497 0240  
                         _PIR1 000C                           u4587 02D5                           u4597 03E0  
                         _TMR0 0001                           _TMR2 0011                           _SPEN 00C7  
                         _TXIE 0464                           _TXEN 04C5                           _TXIF 0064  
                         _SYNC 04C4                           _bres 01DB                           _main 0038  
                         _mode 01E3                           btemp 007E                           exp@x 00CB  
                         log@x 00A4          __size_of_output_putch 000A                           ltemp 007E  
                         pow@x 00DA                           pow@y 00DE     __end_of_measure_inductance 0E98  
                         start 000E                           ttemp 007E                           wtemp 007E  
          timer0_read_ps@count 0026                 ??_buffer_putch 0021              _format_number$158 004D  
              _timer0_init$114 0021                _timer0_init$115 0023                _timer0_init$116 0025  
              _timer0_init$117 0027                   buffer_puts@x 0024            lcd_write4bits@value 0075  
                 lcd_send@mode 0021                          ??_exp 0076                          ??_log 0076  
                        ??_pow 0076                  ___fltol@sign1 00BA                __end_of___fladd 09A4  
                        ?_main 0070                __end_of___fldiv 16A6                __end_of___flneg 07DD  
                        STR_10 18C3                          STR_11 18F0                          STR_12 18C5  
                        STR_13 18F4                          STR_21 18EB                          STR_30 18C9  
                        STR_14 18B0                          STR_31 18CF                          STR_23 189A  
                        STR_15 185E                          STR_24 18F4                          STR_32 18D5  
                        STR_16 186E                          STR_17 18F4                          STR_33 18BA  
                        STR_25 187E                  __CFG_WDTE$OFF 0000                          STR_34 18F4  
                        STR_26 18F4                          STR_18 18C2                          STR_35 18E1  
                        STR_27 18DB                          STR_36 18F4                          STR_28 18A6  
                        STR_29 18E6                          STR_37 188D                __end_of___flmul 0F30  
              __end_of___flsub 173E                __end_of___fltol 16FD                          _CMCON 009C  
                        _T2CON 0012                __end_of___lwdiv 1E60                __end_of___lwmod 1EAB  
                        i1l259 1D37                          _RCREG 001A               lcd_begin@dotsize 0024  
                        _SPBRG 0099                          _PORTB 0006                          _PORTC 0007  
                        _TRISA 0085                          _TRISB 0086                          _TRISC 0087  
                        _TXREG 0019                  ___awtofl@sign 0074                   main@new_mode 01D6  
                        _log10 1C7D                          _blink 01A4                          _floor 05B2  
                        _ldexp 1D40                          _frexp 075E                   _output_putch 0FE4  
              ?_lcd_write4bits 0070                          _msecs 0198                 __CFG_BOREN$OFF 0000  
                        pclath 000A                          ltemp0 007E                          ltemp1 0082  
                        ltemp2 0086                          ltemp3 0080                          pow@yi 00EB  
              format_number@di 004F                          ttemp0 007E                          ttemp1 0081  
                        ttemp2 0084                          ttemp3 0087                          ttemp4 007F  
                        status 0003                __end_of_put_str 0FE4                          wtemp0 007E  
                        wtemp1 0080                          wtemp2 0082                          wtemp3 0084  
                        wtemp4 0086                          wtemp5 0088                          wtemp6 007F  
              ??_print_reading 0076                  print_buffer@i 0075                    exp@exponent 00D7  
                  ldexp@newexp 00A8                __initialization 07DD                    log@exponent 00A8  
                 __end_of_main 013C               format_double@num 01C0                  lcd_gotoxy@col 0025  
                lcd_gotoxy@row 0024                  ?_measure_freq 0051         __size_of_format_double 0185  
                       ??_main 0076                  lcd_send@value 0022            format_double@weight 01CC  
       __size_of_format_number 0060         __size_of_format_xint32 001E            lcd_init@fourbitmode 0021  
                       ?_log10 00AA                         ?_floor 00C1                         ?_ldexp 00A4  
                       ?_frexp 0021               __end_of___altofl 07D4               __end_of___flpack 17ED  
             __end_of___awtofl 171A               __end_of___lltofl 2000                         i1l3610 1D1F  
                       i1l3596 1D07                         i1l3598 1D0A                         _INTCON 000B  
             __end_of___lwtofl 1800                         u287_20 1CE4                         u288_20 1CE5  
             __end_of_lcd_init 0038           __size_of_lcd_command 0007               __end_of_lcd_send 1000  
                       ___flge 0F30               __end_of_lcd_puts 1E87                      ??___fladd 0059  
                    ??___fldiv 0033                      ??___flneg 0074                      ??___flmul 0046  
                    ??___flsub 0076                      ??___fltol 00B6                   ?_timer0_init 0070  
         __size_of_buffer_init 0007                 ??_measure_freq 0053                      ??___lwdiv 0074  
                 ?_timer2_init 0070                      ??___lwmod 0074                         _buffer 01AB  
         __size_of_buffer_puts 0020                         log10@x 00AA                         _rxfifo 0110  
                       _txfifo 0120                         _rxiptr 0077                         _rxoptr 01A9  
                       floor@i 00C5                         _txiptr 0078                         floor@x 00C1  
                       _txoptr 0079               __end_of_ser_init 1C14               __end_of_ser_puts 1440  
           timer2_init@ps_mode 0023                         saved_w 007E           __end_of_buffer_putch 162D  
             format_number@buf 002C               format_number@pad 002B        _measure_inductance$1012 00C4  
      _measure_inductance$1013 00D5        _measure_inductance$1014 00D9        _measure_inductance$1015 00DD  
      _measure_inductance$1016 00C8        _measure_inductance$1017 00CC        _measure_inductance$1018 00D0  
                    ??_put_str 0026                     ___fladd@f1 0051                     ___fladd@f2 0055  
                   ___flge@ff1 0021                     ___flge@ff2 0025               __end_ofexp@coeff 183A  
                _format_double 1474               __end_oflog@coeff 185E                     ___altofl@c 00BC  
                   ___fldiv@f1 002F                     ___fldiv@f2 002B                     ___fldiv@f3 0037  
      __end_of__initialization 07FC                     ___flneg@f1 0021                  _format_number 173E  
                _format_xint32 1456                     ___flmul@f1 003E                     ___flmul@f2 0042  
                 eval_poly@res 00A0                     ___flsub@f1 0064                     ___flsub@f2 0060  
                   ___fltol@f1 00B2                     ___awtofl@c 002B         measure_capacitance@Cin 013F  
 __size_of_measure_capacitance 0417         measure_capacitance@var 013D          lcd_gotoxy@row_offsets 0026  
               __pcstackCOMMON 0070             __size_of_calibrate 00E4                   __pidataBANK3 0000  
                   ___lltofl@c 002B             __size_of_delay10ms 0001                  __end_of_log10 1CBE  
                __end_of_floor 0670                  __end_of_ldexp 1DD7                  __end_of_frexp 079C  
                   ___lwtofl@c 0057                 buffer_putch@ch 0074             __size_of_lcd_begin 0092  
           __size_of_lcd_clear 0010                        ??_log10 0076                        ??_floor 0076  
                      ??_ldexp 00AA                        ??_frexp 0074                     _log10$1019 00AE  
               ?_format_double 01C0                     __pbssBANK2 0110                     __pbssBANK3 0190  
           __size_of_eval_poly 00BF                 ?_format_number 0028                 ?_format_xint32 0051  
               print_unit@unit 0070       __size_of_print_indicator 001A                     __pmaintext 0038  
                      ?___flge 0021                     __pintentry 0004                      ?___altofl 00BC  
      __size_of_timer0_read_ps 003A                      ?___flpack 0021                      ?___awtofl 002B  
                    ?___lltofl 002B             _measure_inductance 09A4             __size_of_ser_putch 0016  
                    ?___lwtofl 0057               ??_lcd_write4bits 0074                     _lcd_gotoxy 0F7C  
          ?_measure_inductance 0070              __end_of_calibrate 0220                      ?_lcd_init 0070  
                    ?_lcd_send 0021              __end_of_delay10ms 02CB                      ?_lcd_puts 0023  
                   __stringtab 1800           __end_of_measure_freq 02CA                     _global_int 1CBE  
                   calibrate@i 005B                      ?_ser_init 0070           ??_measure_inductance 0076  
            __end_of_lcd_begin 03CE                      ?_ser_puts 0021              __end_of_lcd_clear 02DB  
              __size_of___flge 004C                        ___fladd 08C5                        ___fldiv 162D  
                      ___flneg 07D4                        ___flmul 0E98                        ___flsub 171A  
                      ___fltol 16A6                        ___lwdiv 1E36                        ___lwmod 1E87  
                   ??___altofl 0076                        _exp$754 00D3                     ??___flpack 0027  
                   ??___awtofl 0074              __end_of_eval_poly 08C5           __size_of_timer0_init 0040  
                   ??___lltofl 0074                        __ptext1 1BE5                        __ptext2 1C3D  
                      __ptext3 1BFC                        __ptext4 1DD7                        __ptext5 09A4  
                      __ptext6 100C                        __ptext7 1C14                        __ptext8 1DF1  
                      __ptext9 1E60           __size_of_timer2_init 0017          __size_of_buffer_putch 0034  
                   ??___lwtofl 0076                   __size_of_exp 01A9                   __size_of_log 00EE  
                 __size_of_pow 013E                        _seconds 019C                        _ser_tmp 01AA  
              ??_format_double 0076                        _put_str 0FAD                        clrloop0 1005  
                   ??_lcd_init 0074                     ??_lcd_send 0076                     ??_lcd_puts 0076  
         end_of_initialization 07FC                ??_format_number 0075                ??_format_xint32 0076  
                      exp@sign 00D9                      _LCD_lines 01A7                   _lcd_init$321 0022  
               lcd_puts@string 0023              __end_of_ser_putch 1456                        pow@sign 00EA  
measure_inductance@denominator 00C0          __end_of_print_reading 1E36                     ??_ser_init 0074  
                   ??_ser_puts 0075                   _buffer_putch 15F9              format_number@base 002A  
                 __pstringtext 1800              ??_print_indicator 0076                     _print_unit 1C14  
                ?_print_buffer 0070            _measure_capacitance 100C                    ?_lcd_gotoxy 0024  
                  ___fldiv@exp 003C                    ?_global_int 0070                    ___flmul@exp 004A  
                ??_lcd_command 0076                  ??_buffer_init 0074           ?_measure_capacitance 0070  
                ??_buffer_puts 0075        measure_capacitance@unit 013C                 format_double@m 01D2  
       measure_inductance@unit 00D4                 __end_of___flge 0F7C                 _timer0_read_ps 0302  
              lcd_gotoxy@F1148 01DF                     floor@expon 00C9                 ??_print_buffer 0075  
               format_number@i 0050                 format_number@n 0028                 format_xint32@x 0051  
          start_initialization 07DD                     eval_poly@d 0064                     eval_poly@n 0066  
                   eval_poly@x 0060          __size_of_measure_freq 00AA                     ldexp@value 00A4  
                  __end_of_exp 05B2                    __end_of_log 075E                    __end_of_pow 1FE9  
                 _LCD_function 0076             format_double@digit 01D0                     frexp@value 0021  
        ??_measure_capacitance 0076         __end_of_timer0_read_ps 033C                       ??___flge 0029  
          __size_of_lcd_gotoxy 0031            __end_of_lcd_command 03D5                    __pdataBANK3 01DF  
                 _measure_freq 0220            __end_of_buffer_init 02E2            __end_of_buffer_puts 0302  
          __size_of_global_int 0082       print_reading@measurement 0051              __size_of___altofl 0038  
            __size_of___flpack 004F              __size_of___awtofl 001D                    ?_print_unit 0070  
            __size_of___lltofl 0017                    __pbssCOMMON 0076                      ___latbits 0002  
            __size_of___lwtofl 0013                  __pcstackBANK0 0021                  __pcstackBANK1 00A0  
                __pcstackBANK2 0130                  __pcstackBANK3 01C0                  ?_output_putch 0070  
            measure_freq@count 0055               lcd_command@value 0023              __size_of_lcd_init 0020  
            __size_of_lcd_send 0012                      _calibrate 013C              __size_of_lcd_puts 0027  
                    _delay10ms 02CA                      __pnvBANK3 01D7               ___lwdiv@dividend 0023  
              ?_timer0_read_ps 0074                       ?___fladd 0051                       ?___fldiv 002B  
                     ?___flneg 0021                       ?___flmul 003E                       ?___flsub 0060  
                     ?___fltol 00B2              __size_of_ser_init 0018                       ?___lwdiv 0021  
                     ?___lwmod 0021              __size_of_ser_puts 001D                      _lcd_begin 033C  
                    _lcd_clear 02CB                      _ldexp$660 00AC                      _eval_poly 0806  
                output_putch@c 0023                 ??_output_putch 0076               ___lwdiv@quotient 0026  
               __size_of_log10 0041                       ?_put_str 0024                 __size_of_floor 00BE  
               __size_of_ldexp 0097                 __size_of_frexp 003E              interrupt_function 0004  
                   ?_calibrate 0070                     ser_putch@c 0074                     ?_delay10ms 0070  
                     _LCD_ctrl 01A6                       _LCD_mode 01A8                      clear_ram0 1004  
              _print_indicator 1DD7                    _lcd_command 03CE           __end_of_print_buffer 0409  
          __size_of_print_unit 0029                    _buffer_init 02DB                      _ser_putch 1440  
                  _buffer_puts 02E2    __size_of_measure_inductance 04F4                  ??_timer0_init 0074  
                ??_timer2_init 0074                     ?_lcd_begin 0024                     ?_lcd_clear 0070  
                  __stringbase 1812                     ?_eval_poly 0060                      lcd_puts@i 0025  
                 ??_lcd_gotoxy 0076          measure_inductance@Lin 00E3          measure_inductance@var 00E1  
        __end_of_format_double 15F9                   ??_global_int 0070           format_number@padchar 004C  
      __size_of_lcd_write4bits 0017          __end_of_format_number 179E          __end_of_format_xint32 1474  
                    frexp@eptr 0025                     ?_ser_putch 0070             __end_of_lcd_gotoxy 0FAD  
             __size_of___fladd 00DF               __size_of___fldiv 0079               __size_of___flneg 0009  
             __size_of___flmul 0098               __size_of___flsub 0024               __size_of___fltol 0057  
                     ___altofl 079C                       ___flpack 179E               __size_of___lwdiv 002A  
             __size_of___lwmod 0024                       ___awtofl 16FD             __end_of__stringtab 1812  
                     ___lltofl 1FE9                  timer2_init@ps 0022                       ___lwtofl 17ED  
           __end_of_global_int 1D40            __end_of_timer0_init 1C7D                       _exp$1022 00CF  
          __end_of_timer2_init 1BFC                       _main$257 01D4                ___lwdiv@divisor 0021  
              ___lwdiv@counter 0025         __size_of_print_reading 0045           timer0_init@prescaler 0029  
                     __ptext10 1456                       __ptext11 1474                       __ptext20 162D  
                     __ptext12 1EAB                       __ptext21 1FE9                       __ptext13 0409  
                     __ptext30 0018                       __ptext22 1C7D                       __ptext14 1D40  
                     __ptext31 033C                       __ptext23 0670                       __ptext15 07D4  
                     __ptext40 0F7C                       __ptext32 013C                       __ptext24 075E  
                     __ptext16 05B2                       __ptext41 173E                       __ptext33 0FAD  
                     __ptext25 0806                       __ptext17 16A6                       __ptext50 03D5  
                     __ptext42 1E87                       __ptext34 0FE4                       __ptext26 0E98  
                     __ptext18 079C                       __ptext51 02CA                       __ptext43 1E36  
                     __ptext35 0220                       __ptext27 08C5                       __ptext19 171A  
                     __ptext52 17ED                       __ptext44 02E2                       __ptext36 0302  
                     __ptext28 0F30                       __ptext53 179E                       __ptext45 15F9  
                     __ptext37 03EC                       __ptext29 16FD                       __ptext54 1CBE  
                     __ptext46 02DB                       __ptext38 1423                       __ptext47 02CB  
                     __ptext39 1440                       __ptext48 03CE                       __ptext49 0FEE  
                     _lcd_init 0018                       _lcd_send 0FEE                       _pow$1020 00E2  
                     _pow$1021 00E6        __end_of_print_indicator 1DF1                       _lcd_puts 1E60  
             __size_of_put_str 0037                    ??_calibrate 0076                  __size_of_main 0104  
                  ??_delay10ms 0074                      ser_puts@s 0021                       _msecpart 01DD  
                     _ser_init 1BFC                       _ser_puts 1423                       _timer1of 01A0  
         __end_of_output_putch 0FEE                    ??_lcd_begin 0025                    ??_lcd_clear 0024  
                     exp@coeff 1812          ___flmul@f3_as_product 004B                       log@coeff 183A  
  measure_inductance@numerator 00BC                   ??_print_unit 002A                    ??_eval_poly 0068  
           _print_reading$1003 0053             _print_reading$1004 0055                       intlevel1 0000  
  __end_of_measure_capacitance 1423          __size_of_print_buffer 001D               ___lwmod@dividend 0023  
             ??_timer0_read_ps 0021                      stringcode 180A                    ??_ser_putch 0074  
           __end_of_print_unit 1C3D                  _print_reading 1DF1           delay10ms@period_10ms 0070  
                  _timer0_init 1C3D                    _timer2_init 1BE5             _format_double$1007 01C4  
           _format_double$1008 01C8       _measure_capacitance$1010 0134       _measure_capacitance$1011 0138  
     _measure_capacitance$1009 0130                       put_str@i 0029                       put_str@s 0024  
                   _OPTION_REG 0081             timer0_init@ps_mode 002A                ___lwmod@divisor 0021  
              ___lwmod@counter 0074                   _print_buffer 03EC                       stringtab 1800  
      print_indicator@indicate 002A               ?_print_indicator 0070                 _lcd_write4bits 03D5  
                 ___fladd@exp1 005F                   ___fladd@exp2 005E                   ___fladd@sign 005D  
                 ?_lcd_command 0070                 ?_print_reading 0051                   ?_buffer_init 0070  
                 ?_buffer_puts 0024                  ?_buffer_putch 0070  
