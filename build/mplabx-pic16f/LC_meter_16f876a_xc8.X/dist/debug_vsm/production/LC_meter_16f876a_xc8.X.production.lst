

Microchip Technology PIC PRO Macro Assembler V1.34 build -361300703 
                                                                                               Wed Sep 11 20:00:24 2019

Microchip Technology Omniscient Code Generator (PRO mode) build 201502162209
     1                           	processor	16F876A
     2                           	opt	pw 120
     3                           	opt	pm
     4                           	psect	idataCOMMON,global,class=CODE,delta=2
     5                           	psect	idataBANK3,global,class=CODE,delta=2
     6                           	psect	strings,global,class=STRING,delta=2
     7                           	psect	nvBANK3,global,class=BANK3,space=1,delta=1
     8                           	psect	cinit,global,class=CODE,merge=1,delta=2
     9                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
    10                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    12                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    13                           	psect	dataBANK3,global,class=BANK3,space=1,delta=1
    14                           	psect	clrtext,global,class=CODE,delta=2
    15                           	psect	cstackBANK3,global,class=BANK3,space=1,delta=1
    16                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    17                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    18                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    19                           	psect	maintext,global,class=CODE,split=1,delta=2
    20                           	psect	text1,local,class=CODE,merge=1,delta=2
    21                           	psect	text3,local,class=CODE,merge=1,delta=2
    22                           	psect	text4,local,class=CODE,merge=1,delta=2
    23                           	psect	text7,local,class=CODE,merge=1,delta=2
    24                           	psect	text9,local,class=CODE,merge=1,delta=2
    25                           	psect	text10,local,class=CODE,merge=1,delta=2
    26                           	psect	text11,local,class=CODE,merge=1,delta=2
    27                           	psect	text13,local,class=CODE,merge=1,delta=2
    28                           	psect	text15,local,class=CODE,merge=1,delta=2
    29                           	psect	text27,local,class=CODE,merge=1,delta=2
    30                           	psect	text40,local,class=CODE,merge=1,delta=2
    31                           	psect	text43,local,class=CODE,merge=1,delta=2
    32                           	psect	text44,local,class=CODE,merge=1,delta=2
    33                           	psect	text52,local,class=CODE,merge=1,delta=2
    34                           	psect	intentry,global,class=CODE,delta=2
    35                           	psect	functab,global,reloc=256,class=CODE,delta=2
    36                           	psect	pa_nodes,global,class=CODE,delta=2
    37                           	dabs	1,0x7E,2
    38  0000                     	;# 
    39  0001                     	;# 
    40  0002                     	;# 
    41  0003                     	;# 
    42  0004                     	;# 
    43  0005                     	;# 
    44  0006                     	;# 
    45  0007                     	;# 
    46  000A                     	;# 
    47  000B                     	;# 
    48  000C                     	;# 
    49  000D                     	;# 
    50  000E                     	;# 
    51  000E                     	;# 
    52  000F                     	;# 
    53  0010                     	;# 
    54  0011                     	;# 
    55  0012                     	;# 
    56  0013                     	;# 
    57  0014                     	;# 
    58  0015                     	;# 
    59  0015                     	;# 
    60  0016                     	;# 
    61  0017                     	;# 
    62  0018                     	;# 
    63  0019                     	;# 
    64  001A                     	;# 
    65  001B                     	;# 
    66  001B                     	;# 
    67  001C                     	;# 
    68  001D                     	;# 
    69  001E                     	;# 
    70  001F                     	;# 
    71  0081                     	;# 
    72  0085                     	;# 
    73  0086                     	;# 
    74  0087                     	;# 
    75  008C                     	;# 
    76  008D                     	;# 
    77  008E                     	;# 
    78  0091                     	;# 
    79  0092                     	;# 
    80  0093                     	;# 
    81  0094                     	;# 
    82  0098                     	;# 
    83  0099                     	;# 
    84  009C                     	;# 
    85  009D                     	;# 
    86  009E                     	;# 
    87  009F                     	;# 
    88  010C                     	;# 
    89  010D                     	;# 
    90  010E                     	;# 
    91  010F                     	;# 
    92  018C                     	;# 
    93  018D                     	;# 
    94  0000                     	;# 
    95  0001                     	;# 
    96  0002                     	;# 
    97  0003                     	;# 
    98  0004                     	;# 
    99  0005                     	;# 
   100  0006                     	;# 
   101  0007                     	;# 
   102  000A                     	;# 
   103  000B                     	;# 
   104  000C                     	;# 
   105  000D                     	;# 
   106  000E                     	;# 
   107  000E                     	;# 
   108  000F                     	;# 
   109  0010                     	;# 
   110  0011                     	;# 
   111  0012                     	;# 
   112  0013                     	;# 
   113  0014                     	;# 
   114  0015                     	;# 
   115  0015                     	;# 
   116  0016                     	;# 
   117  0017                     	;# 
   118  0018                     	;# 
   119  0019                     	;# 
   120  001A                     	;# 
   121  001B                     	;# 
   122  001B                     	;# 
   123  001C                     	;# 
   124  001D                     	;# 
   125  001E                     	;# 
   126  001F                     	;# 
   127  0081                     	;# 
   128  0085                     	;# 
   129  0086                     	;# 
   130  0087                     	;# 
   131  008C                     	;# 
   132  008D                     	;# 
   133  008E                     	;# 
   134  0091                     	;# 
   135  0092                     	;# 
   136  0093                     	;# 
   137  0094                     	;# 
   138  0098                     	;# 
   139  0099                     	;# 
   140  009C                     	;# 
   141  009D                     	;# 
   142  009E                     	;# 
   143  009F                     	;# 
   144  010C                     	;# 
   145  010D                     	;# 
   146  010E                     	;# 
   147  010F                     	;# 
   148  018C                     	;# 
   149  018D                     	;# 
   150  0000                     	;# 
   151  0001                     	;# 
   152  0002                     	;# 
   153  0003                     	;# 
   154  0004                     	;# 
   155  0005                     	;# 
   156  0006                     	;# 
   157  0007                     	;# 
   158  000A                     	;# 
   159  000B                     	;# 
   160  000C                     	;# 
   161  000D                     	;# 
   162  000E                     	;# 
   163  000E                     	;# 
   164  000F                     	;# 
   165  0010                     	;# 
   166  0011                     	;# 
   167  0012                     	;# 
   168  0013                     	;# 
   169  0014                     	;# 
   170  0015                     	;# 
   171  0015                     	;# 
   172  0016                     	;# 
   173  0017                     	;# 
   174  0018                     	;# 
   175  0019                     	;# 
   176  001A                     	;# 
   177  001B                     	;# 
   178  001B                     	;# 
   179  001C                     	;# 
   180  001D                     	;# 
   181  001E                     	;# 
   182  001F                     	;# 
   183  0081                     	;# 
   184  0085                     	;# 
   185  0086                     	;# 
   186  0087                     	;# 
   187  008C                     	;# 
   188  008D                     	;# 
   189  008E                     	;# 
   190  0091                     	;# 
   191  0092                     	;# 
   192  0093                     	;# 
   193  0094                     	;# 
   194  0098                     	;# 
   195  0099                     	;# 
   196  009C                     	;# 
   197  009D                     	;# 
   198  009E                     	;# 
   199  009F                     	;# 
   200  010C                     	;# 
   201  010D                     	;# 
   202  010E                     	;# 
   203  010F                     	;# 
   204  018C                     	;# 
   205  018D                     	;# 
   206  0000                     	;# 
   207  0001                     	;# 
   208  0002                     	;# 
   209  0003                     	;# 
   210  0004                     	;# 
   211  0005                     	;# 
   212  0006                     	;# 
   213  0007                     	;# 
   214  000A                     	;# 
   215  000B                     	;# 
   216  000C                     	;# 
   217  000D                     	;# 
   218  000E                     	;# 
   219  000E                     	;# 
   220  000F                     	;# 
   221  0010                     	;# 
   222  0011                     	;# 
   223  0012                     	;# 
   224  0013                     	;# 
   225  0014                     	;# 
   226  0015                     	;# 
   227  0015                     	;# 
   228  0016                     	;# 
   229  0017                     	;# 
   230  0018                     	;# 
   231  0019                     	;# 
   232  001A                     	;# 
   233  001B                     	;# 
   234  001B                     	;# 
   235  001C                     	;# 
   236  001D                     	;# 
   237  001E                     	;# 
   238  001F                     	;# 
   239  0081                     	;# 
   240  0085                     	;# 
   241  0086                     	;# 
   242  0087                     	;# 
   243  008C                     	;# 
   244  008D                     	;# 
   245  008E                     	;# 
   246  0091                     	;# 
   247  0092                     	;# 
   248  0093                     	;# 
   249  0094                     	;# 
   250  0098                     	;# 
   251  0099                     	;# 
   252  009C                     	;# 
   253  009D                     	;# 
   254  009E                     	;# 
   255  009F                     	;# 
   256  010C                     	;# 
   257  010D                     	;# 
   258  010E                     	;# 
   259  010F                     	;# 
   260  018C                     	;# 
   261  018D                     	;# 
   262  0000                     	;# 
   263  0001                     	;# 
   264  0002                     	;# 
   265  0003                     	;# 
   266  0004                     	;# 
   267  0005                     	;# 
   268  0006                     	;# 
   269  0007                     	;# 
   270  000A                     	;# 
   271  000B                     	;# 
   272  000C                     	;# 
   273  000D                     	;# 
   274  000E                     	;# 
   275  000E                     	;# 
   276  000F                     	;# 
   277  0010                     	;# 
   278  0011                     	;# 
   279  0012                     	;# 
   280  0013                     	;# 
   281  0014                     	;# 
   282  0015                     	;# 
   283  0015                     	;# 
   284  0016                     	;# 
   285  0017                     	;# 
   286  0018                     	;# 
   287  0019                     	;# 
   288  001A                     	;# 
   289  001B                     	;# 
   290  001B                     	;# 
   291  001C                     	;# 
   292  001D                     	;# 
   293  001E                     	;# 
   294  001F                     	;# 
   295  0081                     	;# 
   296  0085                     	;# 
   297  0086                     	;# 
   298  0087                     	;# 
   299  008C                     	;# 
   300  008D                     	;# 
   301  008E                     	;# 
   302  0091                     	;# 
   303  0092                     	;# 
   304  0093                     	;# 
   305  0094                     	;# 
   306  0098                     	;# 
   307  0099                     	;# 
   308  009C                     	;# 
   309  009D                     	;# 
   310  009E                     	;# 
   311  009F                     	;# 
   312  010C                     	;# 
   313  010D                     	;# 
   314  010E                     	;# 
   315  010F                     	;# 
   316  018C                     	;# 
   317  018D                     	;# 
   318  0000                     	;# 
   319  0001                     	;# 
   320  0002                     	;# 
   321  0003                     	;# 
   322  0004                     	;# 
   323  0005                     	;# 
   324  0006                     	;# 
   325  0007                     	;# 
   326  000A                     	;# 
   327  000B                     	;# 
   328  000C                     	;# 
   329  000D                     	;# 
   330  000E                     	;# 
   331  000E                     	;# 
   332  000F                     	;# 
   333  0010                     	;# 
   334  0011                     	;# 
   335  0012                     	;# 
   336  0013                     	;# 
   337  0014                     	;# 
   338  0015                     	;# 
   339  0015                     	;# 
   340  0016                     	;# 
   341  0017                     	;# 
   342  0018                     	;# 
   343  0019                     	;# 
   344  001A                     	;# 
   345  001B                     	;# 
   346  001B                     	;# 
   347  001C                     	;# 
   348  001D                     	;# 
   349  001E                     	;# 
   350  001F                     	;# 
   351  0081                     	;# 
   352  0085                     	;# 
   353  0086                     	;# 
   354  0087                     	;# 
   355  008C                     	;# 
   356  008D                     	;# 
   357  008E                     	;# 
   358  0091                     	;# 
   359  0092                     	;# 
   360  0093                     	;# 
   361  0094                     	;# 
   362  0098                     	;# 
   363  0099                     	;# 
   364  009C                     	;# 
   365  009D                     	;# 
   366  009E                     	;# 
   367  009F                     	;# 
   368  010C                     	;# 
   369  010D                     	;# 
   370  010E                     	;# 
   371  010F                     	;# 
   372  018C                     	;# 
   373  018D                     	;# 
   374  0000                     	;# 
   375  0001                     	;# 
   376  0002                     	;# 
   377  0003                     	;# 
   378  0004                     	;# 
   379  0005                     	;# 
   380  0006                     	;# 
   381  0007                     	;# 
   382  000A                     	;# 
   383  000B                     	;# 
   384  000C                     	;# 
   385  000D                     	;# 
   386  000E                     	;# 
   387  000E                     	;# 
   388  000F                     	;# 
   389  0010                     	;# 
   390  0011                     	;# 
   391  0012                     	;# 
   392  0013                     	;# 
   393  0014                     	;# 
   394  0015                     	;# 
   395  0015                     	;# 
   396  0016                     	;# 
   397  0017                     	;# 
   398  0018                     	;# 
   399  0019                     	;# 
   400  001A                     	;# 
   401  001B                     	;# 
   402  001B                     	;# 
   403  001C                     	;# 
   404  001D                     	;# 
   405  001E                     	;# 
   406  001F                     	;# 
   407  0081                     	;# 
   408  0085                     	;# 
   409  0086                     	;# 
   410  0087                     	;# 
   411  008C                     	;# 
   412  008D                     	;# 
   413  008E                     	;# 
   414  0091                     	;# 
   415  0092                     	;# 
   416  0093                     	;# 
   417  0094                     	;# 
   418  0098                     	;# 
   419  0099                     	;# 
   420  009C                     	;# 
   421  009D                     	;# 
   422  009E                     	;# 
   423  009F                     	;# 
   424  010C                     	;# 
   425  010D                     	;# 
   426  010E                     	;# 
   427  010F                     	;# 
   428  018C                     	;# 
   429  018D                     	;# 
   430  0000                     	;# 
   431  0001                     	;# 
   432  0002                     	;# 
   433  0003                     	;# 
   434  0004                     	;# 
   435  0005                     	;# 
   436  0006                     	;# 
   437  0007                     	;# 
   438  000A                     	;# 
   439  000B                     	;# 
   440  000C                     	;# 
   441  000D                     	;# 
   442  000E                     	;# 
   443  000E                     	;# 
   444  000F                     	;# 
   445  0010                     	;# 
   446  0011                     	;# 
   447  0012                     	;# 
   448  0013                     	;# 
   449  0014                     	;# 
   450  0015                     	;# 
   451  0015                     	;# 
   452  0016                     	;# 
   453  0017                     	;# 
   454  0018                     	;# 
   455  0019                     	;# 
   456  001A                     	;# 
   457  001B                     	;# 
   458  001B                     	;# 
   459  001C                     	;# 
   460  001D                     	;# 
   461  001E                     	;# 
   462  001F                     	;# 
   463  0081                     	;# 
   464  0085                     	;# 
   465  0086                     	;# 
   466  0087                     	;# 
   467  008C                     	;# 
   468  008D                     	;# 
   469  008E                     	;# 
   470  0091                     	;# 
   471  0092                     	;# 
   472  0093                     	;# 
   473  0094                     	;# 
   474  0098                     	;# 
   475  0099                     	;# 
   476  009C                     	;# 
   477  009D                     	;# 
   478  009E                     	;# 
   479  009F                     	;# 
   480  010C                     	;# 
   481  010D                     	;# 
   482  010E                     	;# 
   483  010F                     	;# 
   484  018C                     	;# 
   485  018D                     	;# 
   486                           
   487                           	psect	idataCOMMON
   488  0000                     __pidataCOMMON:	
   489                           
   490                           	psect	idataBANK3
   491  0000                     __pidataBANK3:	
   492                           
   493                           	psect	strings
   494  0012                     __pstrings:	
   495  0012                     stringtab:	
   496  0012                     __stringtab:	
   497  0012                     stringcode:	
   498                           ;	String table - string pointers are 1 byte each
   499                           
   500  0012                     stringdir:	
   501  0012  3000               	movlw	high stringdir
   502  0013  008A               	movwf	10
   503  0014  0804               	movf	4,w
   504  0015  0A84               	incf	4,f
   505  0016  0782               	addwf	2,f
   506  0017                     __stringbase:	
   507  0017  3400               	retlw	0
   508  0018                     __end_of__stringtab:	
   509  0018                     exp@coeff:	
   510  0018  3400               	retlw	0
   511  0019  3400               	retlw	0
   512  001A  3480               	retlw	128
   513  001B  343F               	retlw	63
   514  001C  3418               	retlw	24
   515  001D  3472               	retlw	114
   516  001E  3431               	retlw	49
   517  001F  343F               	retlw	63
   518  0020  34F0               	retlw	240
   519  0021  34FD               	retlw	253
   520  0022  3475               	retlw	117
   521  0023  343E               	retlw	62
   522  0024  3447               	retlw	71
   523  0025  3458               	retlw	88
   524  0026  3463               	retlw	99
   525  0027  343D               	retlw	61
   526  0028  3458               	retlw	88
   527  0029  3495               	retlw	149
   528  002A  341D               	retlw	29
   529  002B  343C               	retlw	60
   530  002C  3482               	retlw	130
   531  002D  34C4               	retlw	196
   532  002E  34AE               	retlw	174
   533  002F  343A               	retlw	58
   534  0030  34A8               	retlw	168
   535  0031  3478               	retlw	120
   536  0032  3421               	retlw	33
   537  0033  3439               	retlw	57
   538  0034  34EF               	retlw	239
   539  0035  3493               	retlw	147
   540  0036  3480               	retlw	128
   541  0037  3437               	retlw	55
   542  0038  34A0               	retlw	160
   543  0039  3492               	retlw	146
   544  003A  34A7               	retlw	167
   545  003B  3435               	retlw	53
   546  003C  3446               	retlw	70
   547  003D  3456               	retlw	86
   548  003E  3415               	retlw	21
   549  003F  3434               	retlw	52
   550  0040                     __end_ofexp@coeff:	
   551  0040                     log@coeff:	
   552  0040  3400               	retlw	0
   553  0041  3400               	retlw	0
   554  0042  3400               	retlw	0
   555  0043  3400               	retlw	0
   556  0044  34C4               	retlw	196
   557  0045  34FF               	retlw	255
   558  0046  347F               	retlw	127
   559  0047  343F               	retlw	63
   560  0048  3480               	retlw	128
   561  0049  34EF               	retlw	239
   562  004A  34FF               	retlw	255
   563  004B  34BE               	retlw	190
   564  004C  3490               	retlw	144
   565  004D  34E1               	retlw	225
   566  004E  34A9               	retlw	169
   567  004F  343E               	retlw	62
   568  0050  34EC               	retlw	236
   569  0051  3482               	retlw	130
   570  0052  3476               	retlw	118
   571  0053  34BE               	retlw	190
   572  0054  3482               	retlw	130
   573  0055  34AD               	retlw	173
   574  0056  342B               	retlw	43
   575  0057  343E               	retlw	62
   576  0058  340E               	retlw	14
   577  0059  343C               	retlw	60
   578  005A  34C3               	retlw	195
   579  005B  34BD               	retlw	189
   580  005C  3487               	retlw	135
   581  005D  34D1               	retlw	209
   582  005E  3413               	retlw	19
   583  005F  343D               	retlw	61
   584  0060  3441               	retlw	65
   585  0061  3478               	retlw	120
   586  0062  34D3               	retlw	211
   587  0063  34BB               	retlw	187
   588  0064                     __end_oflog@coeff:	
   589  0064                     STR_21:	
   590  0064  3470               	retlw	112	;'p'
   591  0065  346C               	retlw	108	;'l'
   592  0066  3465               	retlw	101	;'e'
   593  0067  3461               	retlw	97	;'a'
   594  0068  3473               	retlw	115	;'s'
   595  0069  3465               	retlw	101	;'e'
   596  006A  3420               	retlw	32	;' '
   597  006B  3477               	retlw	119	;'w'
   598  006C  3461               	retlw	97	;'a'
   599  006D  3469               	retlw	105	;'i'
   600  006E  3474               	retlw	116	;'t'
   601  006F  342E               	retlw	46	;'.'
   602  0070  342E               	retlw	46	;'.'
   603  0071  342E               	retlw	46	;'.'
   604  0072  3400               	retlw	0
   605  0073                     STR_25:	
   606  0073  3449               	retlw	73	;'I'
   607  0074  346E               	retlw	110	;'n'
   608  0075  3464               	retlw	100	;'d'
   609  0076  3475               	retlw	117	;'u'
   610  0077  3463               	retlw	99	;'c'
   611  0078  3474               	retlw	116	;'t'
   612  0079  3469               	retlw	105	;'i'
   613  007A  3476               	retlw	118	;'v'
   614  007B  3469               	retlw	105	;'i'
   615  007C  3474               	retlw	116	;'t'
   616  007D  3479               	retlw	121	;'y'
   617  007E  3420               	retlw	32	;' '
   618  007F  3400               	retlw	0
   619  0080                     STR_19:	
   620  0080  3443               	retlw	67	;'C'
   621  0081  3461               	retlw	97	;'a'
   622  0082  346C               	retlw	108	;'l'
   623  0083  3469               	retlw	105	;'i'
   624  0084  3462               	retlw	98	;'b'
   625  0085  3472               	retlw	114	;'r'
   626  0086  3461               	retlw	97	;'a'
   627  0087  3474               	retlw	116	;'t'
   628  0088  3469               	retlw	105	;'i'
   629  0089  346E               	retlw	110	;'n'
   630  008A  3467               	retlw	103	;'g'
   631  008B  3400               	retlw	0
   632  008C                     STR_24:	
   633  008C  3443               	retlw	67	;'C'
   634  008D  3461               	retlw	97	;'a'
   635  008E  3470               	retlw	112	;'p'
   636  008F  3461               	retlw	97	;'a'
   637  0090  3463               	retlw	99	;'c'
   638  0091  3469               	retlw	105	;'i'
   639  0092  3474               	retlw	116	;'t'
   640  0093  3479               	retlw	121	;'y'
   641  0094  3420               	retlw	32	;' '
   642  0095  3400               	retlw	0
   643  0096                     STR_13:	
   644  0096  344C               	retlw	76	;'L'
   645  0097  3443               	retlw	67	;'C'
   646  0098  342D               	retlw	45	;'-'
   647  0099  346D               	retlw	109	;'m'
   648  009A  3465               	retlw	101	;'e'
   649  009B  3474               	retlw	116	;'t'
   650  009C  3465               	retlw	101	;'e'
   651  009D  3472               	retlw	114	;'r'
   652  009E  3420               	retlw	32	;' '
   653  009F  3400               	retlw	0
   654  00A0                     STR_15:	
   655  00A0  3420               	retlw	32	;' '
   656  00A1  3420               	retlw	32	;' '
   657  00A2  3420               	retlw	32	;' '
   658  00A3  3420               	retlw	32	;' '
   659  00A4  3420               	retlw	32	;' '
   660  00A5  3420               	retlw	32	;' '
   661  00A6  3400               	retlw	0
   662  00A7                     STR_23:	
   663  00A7  3446               	retlw	70	;'F'
   664  00A8  3472               	retlw	114	;'r'
   665  00A9  3465               	retlw	101	;'e'
   666  00AA  3471               	retlw	113	;'q'
   667  00AB  343D               	retlw	61	;'='
   668  00AC  3400               	retlw	0
   669  00AD                     STR_14:	
   670  00AD  342E               	retlw	46	;'.'
   671  00AE  342E               	retlw	46	;'.'
   672  00AF  342E               	retlw	46	;'.'
   673  00B0  340D               	retlw	13
   674  00B1  340A               	retlw	10
   675  00B2  3400               	retlw	0
   676  00B3                     STR_18:	
   677  00B3  3452               	retlw	82	;'R'
   678  00B4  3443               	retlw	67	;'C'
   679  00B5  3434               	retlw	52	;'4'
   680  00B6  343D               	retlw	61	;'='
   681  00B7  3400               	retlw	0
   682  00B8                     STR_11:	
   683  00B8  342D               	retlw	45	;'-'
   684  00B9  342A               	retlw	42	;'*'
   685  00BA  342D               	retlw	45	;'-'
   686  00BB  3400               	retlw	0
   687  00BC                     STR_5:	
   688  00BC  346D               	retlw	109	;'m'
   689  00BD  3446               	retlw	70	;'F'
   690  00BE  3400               	retlw	0
   691  00BF                     STR_7:	
   692  00BF  346E               	retlw	110	;'n'
   693  00C0  3446               	retlw	70	;'F'
   694  00C1  3400               	retlw	0
   695  00C2                     STR_8:	
   696  00C2  3470               	retlw	112	;'p'
   697  00C3  3446               	retlw	70	;'F'
   698  00C4  3400               	retlw	0
   699  00C5                     STR_6:	
   700  00C5  3475               	retlw	117	;'u'
   701  00C6  3446               	retlw	70	;'F'
   702  00C7  3400               	retlw	0
   703  00C8                     STR_2:	
   704  00C8  346D               	retlw	109	;'m'
   705  00C9  3448               	retlw	72	;'H'
   706  00CA  3400               	retlw	0
   707  00CB                     STR_4:	
   708  00CB  346E               	retlw	110	;'n'
   709  00CC  3448               	retlw	72	;'H'
   710  00CD  3400               	retlw	0
   711  00CE                     STR_3:	
   712  00CE  3475               	retlw	117	;'u'
   713  00CF  3448               	retlw	72	;'H'
   714  00D0  3400               	retlw	0
   715  00B0                     
   716                           ; #config settings
   717  0000                     
   718                           	psect	nvBANK3
   719  01C8                     __pnvBANK3:	
   720  01C8                     _CCal:	
   721  01C8                     	ds	4
   722  01CC                     _bres:	
   723  01CC                     	ds	2
   724  01CE                     _msecpart:	
   725  01CE                     	ds	2
   726  000B                     _INTCON	set	11
   727  0007                     _PORTC	set	7
   728  0018                     _RCSTA	set	24
   729  0001                     _TMR0	set	1
   730  0011                     _TMR2	set	17
   731  0019                     _TXREG	set	25
   732  005F                     _GIE	set	95
   733  005E                     _PEIE	set	94
   734  0032                     _RB2	set	50
   735  0033                     _RB3	set	51
   736  0034                     _RB4	set	52
   737  0035                     _RB5	set	53
   738  0036                     _RB6	set	54
   739  0037                     _RB7	set	55
   740  003B                     _RC3	set	59
   741  003C                     _RC4	set	60
   742  003E                     _RC6	set	62
   743  00A5                     _SSPEN	set	165
   744  0090                     _T2CKPS0	set	144
   745  0091                     _T2CKPS1	set	145
   746  005A                     _TMR0IF	set	90
   747  0061                     _TMR2IF	set	97
   748  0092                     _TMR2ON	set	146
   749  0093                     _TOUTPS0	set	147
   750  0094                     _TOUTPS1	set	148
   751  0095                     _TOUTPS2	set	149
   752  0064                     _TXIF	set	100
   753  009C                     _CMCON	set	156
   754  0081                     _OPTION_REG	set	129
   755  0099                     _SPBRG	set	153
   756  0085                     _TRISA	set	133
   757  0087                     _TRISC	set	135
   758  0098                     _TXSTA	set	152
   759  0465                     _RCIE	set	1125
   760  040C                     _T0SE	set	1036
   761  0461                     _TMR2IE	set	1121
   762  0432                     _TRISB2	set	1074
   763  0433                     _TRISB3	set	1075
   764  0434                     _TRISB4	set	1076
   765  0435                     _TRISB5	set	1077
   766  0436                     _TRISB6	set	1078
   767  0437                     _TRISB7	set	1079
   768  043B                     _TRISC3	set	1083
   769  043E                     _TRISC6	set	1086
   770  043F                     _TRISC7	set	1087
   771  04C6                     _TX9	set	1222
   772  04C5                     _TXEN	set	1221
   773  040F                     _nRBPU	set	1039
   774                           
   775                           	psect	cinit
   776  07DF                     start_initialization:	
   777  07DF                     __initialization:	
   778                           
   779                           ; Clear objects allocated to COMMON
   780  07DF  01FA               	clrf	__pbssCOMMON& (0+127)
   781                           
   782                           ; Clear objects allocated to BANK1
   783  07E0  1383               	bcf	3,7	;select IRP bank0
   784  07E1  30E5               	movlw	low __pbssBANK1
   785  07E2  0084               	movwf	4
   786  07E3  30F0               	movlw	low (__pbssBANK1+11)
   787  07E4  160A  118A  2001  120A  118A  	fcall	clear_ram0
   788                           
   789                           ; Clear objects allocated to BANK3
   790  07E9  1783               	bsf	3,7	;select IRP bank2
   791  07EA  3090               	movlw	low __pbssBANK3
   792  07EB  0084               	movwf	4
   793  07EC  30B4               	movlw	low (__pbssBANK3+36)
   794  07ED  160A  118A  2001   	fcall	clear_ram0
   795                           
   796                           ; Initialize objects allocated to BANK3
   797  07F0  1683               	bsf	3,5	;RP0=1, select bank3
   798  07F1  1703               	bsf	3,6	;RP1=1, select bank3
   799                           
   800                           ;initializer for lcd_gotoxy@F1126
   801  07F2  3000               	movlw	0
   802  07F3  00D0               	movwf	__pdataBANK3& (0+127)
   803  07F4  3040               	movlw	64
   804  07F5  00D1               	movwf	(__pdataBANK3+1)& (0+127)
   805  07F6  3014               	movlw	20
   806  07F7  00D2               	movwf	(__pdataBANK3+2)& (0+127)
   807  07F8  3054               	movlw	84
   808  07F9  00D3               	movwf	(__pdataBANK3+3)& (0+127)
   809                           
   810                           ;initializer for _putchar_ptr
   811  07FA  3007               	movlw	low (fp__format_putchar-fpbase)
   812  07FB  00FB               	movwf	__pdataCOMMON& (0+127)
   813  07FC                     end_of_initialization:	
   814                           ;End of C runtime variable initialization code
   815                           
   816  07FC                     __end_of__initialization:	
   817  07FC  0183               	clrf	3
   818  07FD  120A  118A  2956   	ljmp	_main	;jump to C main() function
   819                           
   820                           	psect	bssCOMMON
   821  007A                     __pbssCOMMON:	
   822  007A                     _LCD_function:	
   823  007A                     	ds	1
   824                           
   825                           	psect	dataCOMMON
   826  007B                     __pdataCOMMON:	
   827  007B                     _putchar_ptr:	
   828  007B                     	ds	1
   829                           
   830                           	psect	bssBANK1
   831  00E5                     __pbssBANK1:	
   832  00E5                     _F3:	
   833  00E5                     	ds	4
   834  00E9                     _blink:	
   835  00E9                     	ds	2
   836  00EB                     _LCD_ctrl:	
   837  00EB                     	ds	1
   838  00EC                     _F1:	
   839  00EC                     	ds	4
   840                           
   841                           	psect	bssBANK3
   842  0190                     __pbssBANK3:	
   843  0190                     _F2:	
   844  0190                     	ds	4
   845  0194                     _msecs:	
   846  0194                     	ds	4
   847  0198                     _seconds:	
   848  0198                     	ds	4
   849  019C                     _timer1of:	
   850  019C                     	ds	4
   851  01A0                     _LCD_lines:	
   852  01A0                     	ds	1
   853  01A1                     _LCD_mode:	
   854  01A1                     	ds	1
   855  01A2                     _buffer:	
   856  01A2                     	ds	18
   857                           
   858                           	psect	dataBANK3
   859  01D0                     __pdataBANK3:	
   860  01D0                     lcd_gotoxy@F1126:	
   861  01D0                     	ds	4
   862                           
   863                           	psect	clrtext
   864  1001                     clear_ram0:	
   865                           ;	Called with FSR containing the base address, and
   866                           ;	W with the last address+1
   867                           
   868  1001  0064               	clrwdt	;clear the watchdog before getting into this loop
   869  1002                     clrloop0:	
   870  1002  0180               	clrf	0	;clear RAM location pointed to by FSR
   871  1003  0A84               	incf	4,f	;increment pointer
   872  1004  0604               	xorwf	4,w	;XOR with final address
   873  1005  1903               	btfsc	3,2	;have we reached the end yet?
   874  1006  3400               	retlw	0	;all done for this memory range, return
   875  1007  0604               	xorwf	4,w	;XOR again to restore value
   876  1008  2802               	goto	clrloop0	;do the next byte
   877                           
   878                           	psect	cstackBANK3
   879  01B4                     __pcstackBANK3:	
   880  01B4                     ?_format_double:	
   881  01B4                     format_double@num:	
   882                           ; 0 bytes @ 0x0
   883                           
   884                           
   885                           ; 4 bytes @ 0x0
   886  01B4                     	ds	4
   887  01B8                     _format_double$1046:	
   888                           
   889                           ; 4 bytes @ 0x4
   890  01B8                     	ds	4
   891  01BC                     _format_double$1047:	
   892                           
   893                           ; 4 bytes @ 0x8
   894  01BC                     	ds	4
   895  01C0                     format_double@weight:	
   896                           
   897                           ; 4 bytes @ 0xC
   898  01C0                     	ds	4
   899  01C4                     format_double@digit:	
   900                           
   901                           ; 2 bytes @ 0x10
   902  01C4                     	ds	2
   903  01C6                     format_double@m:	
   904                           
   905                           ; 2 bytes @ 0x12
   906  01C6                     	ds	2
   907                           
   908                           	psect	cstackBANK1
   909  00A0                     __pcstackBANK1:	
   910  00A0                     ??_ldexp:	
   911  00A0                     ?_log10:	
   912                           ; 0 bytes @ 0x0
   913                           
   914  00A0                     log10@x:	
   915                           ; 4 bytes @ 0x0
   916                           
   917                           
   918                           ; 4 bytes @ 0x0
   919  00A0                     	ds	2
   920  00A2                     _ldexp$686:	
   921                           
   922                           ; 4 bytes @ 0x2
   923  00A2                     	ds	2
   924  00A4                     _log10$1058:	
   925                           
   926                           ; 4 bytes @ 0x4
   927  00A4                     	ds	4
   928  00A8                     ?___fltol:	
   929  00A8                     ___fltol@f1:	
   930                           ; 4 bytes @ 0x8
   931                           
   932                           
   933                           ; 4 bytes @ 0x8
   934  00A8                     	ds	4
   935  00AC                     ??___fltol:	
   936                           
   937                           ; 0 bytes @ 0xC
   938  00AC                     	ds	4
   939  00B0                     ___fltol@sign1:	
   940                           
   941                           ; 1 bytes @ 0x10
   942  00B0                     	ds	1
   943  00B1                     ___fltol@exp1:	
   944                           
   945                           ; 1 bytes @ 0x11
   946  00B1                     	ds	1
   947  00B2                     ?___altofl:	
   948  00B2                     measure_inductance@numerator:	
   949                           ; 4 bytes @ 0x12
   950                           
   951  00B2                     ___altofl@c:	
   952                           ; 4 bytes @ 0x12
   953                           
   954  00B2                     _measure_capacitance$1048:	
   955                           ; 4 bytes @ 0x12
   956                           
   957                           
   958                           ; 4 bytes @ 0x12
   959  00B2                     	ds	4
   960  00B6                     ___altofl@sign:	
   961  00B6                     measure_inductance@denominator:	
   962                           ; 1 bytes @ 0x16
   963                           
   964  00B6                     _measure_capacitance$1049:	
   965                           ; 4 bytes @ 0x16
   966                           
   967                           
   968                           ; 4 bytes @ 0x16
   969  00B6                     	ds	1
   970  00B7                     ?_floor:	
   971  00B7                     floor@x:	
   972                           ; 4 bytes @ 0x17
   973                           
   974                           
   975                           ; 4 bytes @ 0x17
   976  00B7                     	ds	3
   977  00BA                     _measure_capacitance$1050:	
   978  00BA                     _measure_inductance$1051:	
   979                           ; 4 bytes @ 0x1A
   980                           
   981                           
   982                           ; 4 bytes @ 0x1A
   983  00BA                     	ds	1
   984  00BB                     floor@i:	
   985                           
   986                           ; 4 bytes @ 0x1B
   987  00BB                     	ds	3
   988  00BE                     measure_capacitance@unit:	
   989  00BE                     _measure_inductance$1055:	
   990                           ; 1 bytes @ 0x1E
   991                           
   992                           
   993                           ; 4 bytes @ 0x1E
   994  00BE                     	ds	1
   995  00BF                     measure_capacitance@var:	
   996  00BF                     floor@expon:	
   997                           ; 2 bytes @ 0x1F
   998                           
   999                           
  1000                           ; 2 bytes @ 0x1F
  1001  00BF                     	ds	2
  1002  00C1                     ?_exp:	
  1003  00C1                     measure_capacitance@Cin:	
  1004                           ; 4 bytes @ 0x21
  1005                           
  1006  00C1                     exp@x:	
  1007                           ; 4 bytes @ 0x21
  1008                           
  1009                           
  1010                           ; 4 bytes @ 0x21
  1011  00C1                     	ds	1
  1012  00C2                     _measure_inductance$1056:	
  1013                           
  1014                           ; 4 bytes @ 0x22
  1015  00C2                     	ds	3
  1016  00C5                     _exp$1061:	
  1017                           
  1018                           ; 4 bytes @ 0x25
  1019  00C5                     	ds	1
  1020  00C6                     _measure_inductance$1057:	
  1021                           
  1022                           ; 4 bytes @ 0x26
  1023  00C6                     	ds	3
  1024  00C9                     _exp$786:	
  1025                           
  1026                           ; 4 bytes @ 0x29
  1027  00C9                     	ds	1
  1028  00CA                     measure_inductance@unit:	
  1029                           
  1030                           ; 1 bytes @ 0x2A
  1031  00CA                     	ds	1
  1032  00CB                     _measure_inductance$1052:	
  1033                           
  1034                           ; 4 bytes @ 0x2B
  1035  00CB                     	ds	2
  1036  00CD                     exp@exponent:	
  1037                           
  1038                           ; 2 bytes @ 0x2D
  1039  00CD                     	ds	2
  1040  00CF                     exp@sign:	
  1041  00CF                     _measure_inductance$1053:	
  1042                           ; 1 bytes @ 0x2F
  1043                           
  1044                           
  1045                           ; 4 bytes @ 0x2F
  1046  00CF                     	ds	1
  1047  00D0                     ?_pow:	
  1048  00D0                     pow@x:	
  1049                           ; 4 bytes @ 0x30
  1050                           
  1051                           
  1052                           ; 4 bytes @ 0x30
  1053  00D0                     	ds	3
  1054  00D3                     _measure_inductance$1054:	
  1055                           
  1056                           ; 4 bytes @ 0x33
  1057  00D3                     	ds	1
  1058  00D4                     pow@y:	
  1059                           
  1060                           ; 4 bytes @ 0x34
  1061  00D4                     	ds	3
  1062  00D7                     measure_inductance@var:	
  1063                           
  1064                           ; 2 bytes @ 0x37
  1065  00D7                     	ds	1
  1066  00D8                     _pow$1059:	
  1067                           
  1068                           ; 4 bytes @ 0x38
  1069  00D8                     	ds	1
  1070  00D9                     measure_inductance@Lin:	
  1071                           
  1072                           ; 4 bytes @ 0x39
  1073  00D9                     	ds	3
  1074  00DC                     _pow$1060:	
  1075                           
  1076                           ; 4 bytes @ 0x3C
  1077  00DC                     	ds	4
  1078  00E0                     pow@sign:	
  1079                           
  1080                           ; 1 bytes @ 0x40
  1081  00E0                     	ds	1
  1082  00E1                     pow@yi:	
  1083                           
  1084                           ; 4 bytes @ 0x41
  1085  00E1                     	ds	4
  1086                           
  1087                           	psect	cstackCOMMON
  1088  0070                     __pcstackCOMMON:	
  1089  0070                     ?_uart_puts:	
  1090  0070                     ?_lcd_puts:	
  1091                           ; 0 bytes @ 0x0
  1092                           
  1093  0070                     ?_lcd_init:	
  1094                           ; 0 bytes @ 0x0
  1095                           
  1096  0070                     ?_uart_init:	
  1097                           ; 0 bytes @ 0x0
  1098                           
  1099  0070                     ?_calibrate:	
  1100                           ; 0 bytes @ 0x0
  1101                           
  1102  0070                     ?_lcd_clear:	
  1103                           ; 0 bytes @ 0x0
  1104                           
  1105  0070                     ?_measure_capacitance:	
  1106                           ; 0 bytes @ 0x0
  1107                           
  1108  0070                     ?_measure_inductance:	
  1109                           ; 0 bytes @ 0x0
  1110                           
  1111  0070                     ?_print_unit:	
  1112                           ; 0 bytes @ 0x0
  1113                           
  1114  0070                     ?_indicator:	
  1115                           ; 0 bytes @ 0x0
  1116                           
  1117  0070                     ?_put_str:	
  1118                           ; 0 bytes @ 0x0
  1119                           
  1120  0070                     ?_timer0_init:	
  1121                           ; 0 bytes @ 0x0
  1122                           
  1123  0070                     ?_timer2_init:	
  1124                           ; 0 bytes @ 0x0
  1125                           
  1126  0070                     ?_delay10ms:	
  1127                           ; 0 bytes @ 0x0
  1128                           
  1129  0070                     ??_isr:	
  1130                           ; 0 bytes @ 0x0
  1131                           
  1132  0070                     ?_main:	
  1133                           ; 0 bytes @ 0x0
  1134                           
  1135  0070                     ?_lcd_write4bits:	
  1136                           ; 0 bytes @ 0x0
  1137                           
  1138  0070                     ?_lcd_command:	
  1139                           ; 0 bytes @ 0x0
  1140                           
  1141  0070                     ?_uart_putch:	
  1142                           ; 0 bytes @ 0x0
  1143                           
  1144  0070                     ?_uart_enable:	
  1145                           ; 0 bytes @ 0x0
  1146                           
  1147  0070                     ?_isr:	
  1148                           ; 0 bytes @ 0x0
  1149                           
  1150  0070                     print_unit@unit:	
  1151                           ; 2 bytes @ 0x0
  1152                           
  1153  0070                     delay10ms@period_10ms:	
  1154                           ; 1 bytes @ 0x0
  1155                           
  1156                           
  1157                           ; 1 bytes @ 0x0
  1158  0070                     	ds	2
  1159  0072                     ??_lcd_init:	
  1160  0072                     ??_uart_init:	
  1161                           ; 0 bytes @ 0x2
  1162                           
  1163  0072                     ??_timer0_init:	
  1164                           ; 0 bytes @ 0x2
  1165                           
  1166  0072                     ??_timer2_init:	
  1167                           ; 0 bytes @ 0x2
  1168                           
  1169  0072                     ??_delay10ms:	
  1170                           ; 0 bytes @ 0x2
  1171                           
  1172  0072                     ??_lcd_write4bits:	
  1173                           ; 0 bytes @ 0x2
  1174                           
  1175  0072                     ??_uart_putch:	
  1176                           ; 0 bytes @ 0x2
  1177                           
  1178  0072                     ??_uart_enable:	
  1179                           ; 0 bytes @ 0x2
  1180                           
  1181  0072                     ?___flge:	
  1182                           ; 0 bytes @ 0x2
  1183                           
  1184  0072                     ?_timer0_read_ps:	
  1185                           ; 1 bit 
  1186                           
  1187  0072                     ?___lwdiv:	
  1188                           ; 2 bytes @ 0x2
  1189                           
  1190  0072                     ?___lwmod:	
  1191                           ; 2 bytes @ 0x2
  1192                           
  1193  0072                     ?___flpack:	
  1194                           ; 2 bytes @ 0x2
  1195                           
  1196  0072                     ?_frexp:	
  1197                           ; 4 bytes @ 0x2
  1198                           
  1199  0072                     ?___flneg:	
  1200                           ; 4 bytes @ 0x2
  1201                           
  1202  0072                     lcd_init@fourbitmode:	
  1203                           ; 4 bytes @ 0x2
  1204                           
  1205  0072                     uart_putch@byte:	
  1206                           ; 1 bytes @ 0x2
  1207                           
  1208  0072                     ___lwdiv@divisor:	
  1209                           ; 1 bytes @ 0x2
  1210                           
  1211  0072                     ___lwmod@divisor:	
  1212                           ; 2 bytes @ 0x2
  1213                           
  1214  0072                     ___flpack@arg:	
  1215                           ; 2 bytes @ 0x2
  1216                           
  1217  0072                     ___flge@ff1:	
  1218                           ; 4 bytes @ 0x2
  1219                           
  1220  0072                     ___flneg@f1:	
  1221                           ; 4 bytes @ 0x2
  1222                           
  1223  0072                     frexp@value:	
  1224                           ; 4 bytes @ 0x2
  1225                           
  1226                           
  1227                           ; 4 bytes @ 0x2
  1228  0072                     	ds	1
  1229  0073                     ??_uart_puts:	
  1230  0073                     timer2_init@ps_mode:	
  1231                           ; 0 bytes @ 0x3
  1232                           
  1233  0073                     lcd_write4bits@value:	
  1234                           ; 1 bytes @ 0x3
  1235                           
  1236  0073                     uart_puts@s:	
  1237                           ; 1 bytes @ 0x3
  1238                           
  1239  0073                     _lcd_init$338:	
  1240                           ; 1 bytes @ 0x3
  1241                           
  1242                           
  1243                           ; 2 bytes @ 0x3
  1244  0073                     	ds	1
  1245  0074                     ??_timer0_read_ps:	
  1246  0074                     ?_lcd_send:	
  1247                           ; 0 bytes @ 0x4
  1248                           
  1249  0074                     timer2_init@ps:	
  1250                           ; 0 bytes @ 0x4
  1251                           
  1252  0074                     lcd_send@mode:	
  1253                           ; 1 bytes @ 0x4
  1254                           
  1255  0074                     ___lwdiv@dividend:	
  1256                           ; 1 bytes @ 0x4
  1257                           
  1258  0074                     ___lwmod@dividend:	
  1259                           ; 2 bytes @ 0x4
  1260                           
  1261                           
  1262                           ; 2 bytes @ 0x4
  1263  0074                     	ds	1
  1264  0075                     ??_lcd_send:	
  1265  0075                     lcd_send@value:	
  1266                           ; 0 bytes @ 0x5
  1267                           
  1268                           
  1269                           ; 1 bytes @ 0x5
  1270  0075                     	ds	1
  1271  0076                     ??_lcd_command:	
  1272  0076                     ??___flneg:	
  1273                           ; 0 bytes @ 0x6
  1274                           
  1275  0076                     ??___lwdiv:	
  1276                           ; 0 bytes @ 0x6
  1277                           
  1278  0076                     ??___lwmod:	
  1279                           ; 0 bytes @ 0x6
  1280                           
  1281  0076                     lcd_command@value:	
  1282                           ; 0 bytes @ 0x6
  1283                           
  1284  0076                     ___flpack@exp:	
  1285                           ; 1 bytes @ 0x6
  1286                           
  1287  0076                     frexp@eptr:	
  1288                           ; 1 bytes @ 0x6
  1289                           
  1290  0076                     ___lwmod@counter:	
  1291                           ; 1 bytes @ 0x6
  1292                           
  1293  0076                     ___lwdiv@quotient:	
  1294                           ; 1 bytes @ 0x6
  1295                           
  1296  0076                     ___flge@ff2:	
  1297                           ; 2 bytes @ 0x6
  1298                           
  1299                           
  1300                           ; 4 bytes @ 0x6
  1301  0076                     	ds	1
  1302  0077                     ?_lcd_putch:	
  1303  0077                     ??_lcd_putch:	
  1304                           ; 0 bytes @ 0x7
  1305                           
  1306  0077                     ?_lcd_gotoxy:	
  1307                           ; 0 bytes @ 0x7
  1308                           
  1309  0077                     ?_lcd_begin:	
  1310                           ; 0 bytes @ 0x7
  1311                           
  1312  0077                     ??_lcd_clear:	
  1313                           ; 0 bytes @ 0x7
  1314                           
  1315  0077                     ??_frexp:	
  1316                           ; 0 bytes @ 0x7
  1317                           
  1318  0077                     ?_output_putch:	
  1319                           ; 0 bytes @ 0x7
  1320                           
  1321  0077                     ?_format_putchar:	
  1322                           ; 0 bytes @ 0x7
  1323                           
  1324  0077                     output_putch@c:	
  1325                           ; 0 bytes @ 0x7
  1326                           
  1327  0077                     format_putchar@c:	
  1328                           ; 1 bytes @ 0x7
  1329                           
  1330  0077                     lcd_putch@value:	
  1331                           ; 1 bytes @ 0x7
  1332                           
  1333  0077                     lcd_gotoxy@row:	
  1334                           ; 1 bytes @ 0x7
  1335                           
  1336  0077                     lcd_begin@dotsize:	
  1337                           ; 1 bytes @ 0x7
  1338                           
  1339  0077                     ___flpack@sign:	
  1340                           ; 1 bytes @ 0x7
  1341                           
  1342                           
  1343                           ; 1 bytes @ 0x7
  1344  0077                     	ds	1
  1345  0078                     ??_lcd_gotoxy:	
  1346  0078                     ??_lcd_puts:	
  1347                           ; 0 bytes @ 0x8
  1348                           
  1349  0078                     ??_lcd_begin:	
  1350                           ; 0 bytes @ 0x8
  1351                           
  1352  0078                     ??_print_unit:	
  1353                           ; 0 bytes @ 0x8
  1354                           
  1355  0078                     ??_output_putch:	
  1356                           ; 0 bytes @ 0x8
  1357                           
  1358  0078                     ??_put_str:	
  1359                           ; 0 bytes @ 0x8
  1360                           
  1361  0078                     ??_format_putchar:	
  1362                           ; 0 bytes @ 0x8
  1363                           
  1364  0078                     ??___awtofl:	
  1365                           ; 0 bytes @ 0x8
  1366                           
  1367  0078                     ??___lltofl:	
  1368                           ; 0 bytes @ 0x8
  1369                           
  1370  0078                     lcd_puts@i:	
  1371                           ; 0 bytes @ 0x8
  1372                           
  1373  0078                     ___awtofl@sign:	
  1374                           ; 1 bytes @ 0x8
  1375                           
  1376  0078                     ___lwdiv@counter:	
  1377                           ; 1 bytes @ 0x8
  1378                           
  1379                           
  1380                           ; 1 bytes @ 0x8
  1381  0078                     	ds	1
  1382  0079                     ??_format_number:	
  1383  0079                     ??___flsub:	
  1384                           ; 0 bytes @ 0x9
  1385                           
  1386  0079                     lcd_puts@string:	
  1387                           ; 0 bytes @ 0x9
  1388                           
  1389                           
  1390                           ; 1 bytes @ 0x9
  1391  0079                     	ds	1
  1392  007A                     ??_log10:	
  1393  007A                     ??_pow:	
  1394                           ; 0 bytes @ 0xA
  1395                           
  1396  007A                     ??_floor:	
  1397                           ; 0 bytes @ 0xA
  1398                           
  1399  007A                     ??_calibrate:	
  1400                           ; 0 bytes @ 0xA
  1401                           
  1402  007A                     ??_measure_capacitance:	
  1403                           ; 0 bytes @ 0xA
  1404                           
  1405  007A                     ??_measure_inductance:	
  1406                           ; 0 bytes @ 0xA
  1407                           
  1408  007A                     ??_exp:	
  1409                           ; 0 bytes @ 0xA
  1410                           
  1411  007A                     ??_print_reading:	
  1412                           ; 0 bytes @ 0xA
  1413                           
  1414  007A                     ??_indicator:	
  1415                           ; 0 bytes @ 0xA
  1416                           
  1417  007A                     ??_format_double:	
  1418                           ; 0 bytes @ 0xA
  1419                           
  1420  007A                     ??_main:	
  1421                           ; 0 bytes @ 0xA
  1422                           
  1423  007A                     ??___altofl:	
  1424                           ; 0 bytes @ 0xA
  1425                           
  1426  007A                     ??_log:	
  1427                           ; 0 bytes @ 0xA
  1428                           
  1429  007A                     ??___lwtofl:	
  1430                           ; 0 bytes @ 0xA
  1431                           
  1432                           
  1433                           	psect	cstackBANK0
  1434  0021                     __pcstackBANK0:	
  1435                           ; 0 bytes @ 0xA
  1436                           
  1437  0021                     ?_format_number:	
  1438  0021                     ??___flpack:	
  1439                           ; 0 bytes @ 0x0
  1440                           
  1441  0021                     ??___flge:	
  1442                           ; 0 bytes @ 0x0
  1443                           
  1444  0021                     timer0_read_ps@prev:	
  1445                           ; 0 bytes @ 0x0
  1446                           
  1447  0021                     lcd_gotoxy@col:	
  1448                           ; 1 bytes @ 0x0
  1449                           
  1450  0021                     lcd_begin@lines:	
  1451                           ; 1 bytes @ 0x0
  1452                           
  1453  0021                     put_str@i:	
  1454                           ; 1 bytes @ 0x0
  1455                           
  1456  0021                     _timer0_init$124:	
  1457                           ; 2 bytes @ 0x0
  1458                           
  1459  0021                     format_number@n:	
  1460                           ; 2 bytes @ 0x0
  1461                           
  1462                           
  1463                           ; 2 bytes @ 0x0
  1464  0021                     	ds	1
  1465  0022                     timer0_read_ps@count:	
  1466  0022                     lcd_gotoxy@row_offsets:	
  1467                           ; 2 bytes @ 0x1
  1468                           
  1469                           
  1470                           ; 4 bytes @ 0x1
  1471  0022                     	ds	1
  1472  0023                     put_str@s:	
  1473  0023                     format_number@base:	
  1474                           ; 1 bytes @ 0x2
  1475                           
  1476  0023                     _timer0_init$125:	
  1477                           ; 1 bytes @ 0x2
  1478                           
  1479                           
  1480                           ; 2 bytes @ 0x2
  1481  0023                     	ds	1
  1482  0024                     format_number@pad:	
  1483                           
  1484                           ; 1 bytes @ 0x3
  1485  0024                     	ds	1
  1486  0025                     ?___awtofl:	
  1487  0025                     ?___fldiv:	
  1488                           ; 4 bytes @ 0x4
  1489                           
  1490  0025                     ?___lltofl:	
  1491                           ; 4 bytes @ 0x4
  1492                           
  1493  0025                     _timer0_init$126:	
  1494                           ; 4 bytes @ 0x4
  1495                           
  1496  0025                     ___awtofl@c:	
  1497                           ; 2 bytes @ 0x4
  1498                           
  1499  0025                     ___fldiv@f2:	
  1500                           ; 2 bytes @ 0x4
  1501                           
  1502  0025                     ___lltofl@c:	
  1503                           ; 4 bytes @ 0x4
  1504                           
  1505  0025                     format_number@buf:	
  1506                           ; 4 bytes @ 0x4
  1507                           
  1508                           
  1509                           ; 32 bytes @ 0x4
  1510  0025                     	ds	1
  1511  0026                     indicator@indicate:	
  1512                           
  1513                           ; 1 bytes @ 0x5
  1514  0026                     	ds	1
  1515  0027                     _timer0_init$127:	
  1516                           
  1517                           ; 2 bytes @ 0x6
  1518  0027                     	ds	2
  1519  0029                     timer0_init@prescaler:	
  1520  0029                     ___fldiv@f1:	
  1521                           ; 1 bytes @ 0x8
  1522                           
  1523                           
  1524                           ; 4 bytes @ 0x8
  1525  0029                     	ds	1
  1526  002A                     timer0_init@ps_mode:	
  1527                           
  1528                           ; 1 bytes @ 0x9
  1529  002A                     	ds	3
  1530  002D                     ??___fldiv:	
  1531                           
  1532                           ; 0 bytes @ 0xC
  1533  002D                     	ds	4
  1534  0031                     ___fldiv@f3:	
  1535                           
  1536                           ; 4 bytes @ 0x10
  1537  0031                     	ds	4
  1538  0035                     ___fldiv@cntr:	
  1539                           
  1540                           ; 1 bytes @ 0x14
  1541  0035                     	ds	1
  1542  0036                     ___fldiv@exp:	
  1543                           
  1544                           ; 1 bytes @ 0x15
  1545  0036                     	ds	1
  1546  0037                     ___fldiv@sign:	
  1547                           
  1548                           ; 1 bytes @ 0x16
  1549  0037                     	ds	1
  1550  0038                     ?___flmul:	
  1551  0038                     ___flmul@f1:	
  1552                           ; 4 bytes @ 0x17
  1553                           
  1554                           
  1555                           ; 4 bytes @ 0x17
  1556  0038                     	ds	4
  1557  003C                     ___flmul@f2:	
  1558                           
  1559                           ; 4 bytes @ 0x1B
  1560  003C                     	ds	4
  1561  0040                     ??___flmul:	
  1562                           
  1563                           ; 0 bytes @ 0x1F
  1564  0040                     	ds	4
  1565  0044                     ___flmul@exp:	
  1566                           
  1567                           ; 1 bytes @ 0x23
  1568  0044                     	ds	1
  1569  0045                     format_number@padchar:	
  1570  0045                     ___flmul@f3_as_product:	
  1571                           ; 1 bytes @ 0x24
  1572                           
  1573                           
  1574                           ; 4 bytes @ 0x24
  1575  0045                     	ds	1
  1576  0046                     _format_number$169:	
  1577                           
  1578                           ; 2 bytes @ 0x25
  1579  0046                     	ds	2
  1580  0048                     format_number@di:	
  1581                           
  1582                           ; 1 bytes @ 0x27
  1583  0048                     	ds	1
  1584  0049                     format_number@i:	
  1585  0049                     ___flmul@cntr:	
  1586                           ; 1 bytes @ 0x28
  1587                           
  1588                           
  1589                           ; 1 bytes @ 0x28
  1590  0049                     	ds	1
  1591  004A                     ?_print_reading:	
  1592  004A                     ?_measure_freq:	
  1593                           ; 0 bytes @ 0x29
  1594                           
  1595  004A                     ___flmul@sign:	
  1596                           ; 2 bytes @ 0x29
  1597                           
  1598  004A                     print_reading@measurement:	
  1599                           ; 1 bytes @ 0x29
  1600                           
  1601                           
  1602                           ; 2 bytes @ 0x29
  1603  004A                     	ds	1
  1604  004B                     ?___fladd:	
  1605  004B                     ___fladd@f1:	
  1606                           ; 4 bytes @ 0x2A
  1607                           
  1608                           
  1609                           ; 4 bytes @ 0x2A
  1610  004B                     	ds	1
  1611  004C                     ??_measure_freq:	
  1612  004C                     _print_reading$1042:	
  1613                           ; 0 bytes @ 0x2B
  1614                           
  1615                           
  1616                           ; 2 bytes @ 0x2B
  1617  004C                     	ds	2
  1618  004E                     measure_freq@count:	
  1619  004E                     _print_reading$1043:	
  1620                           ; 2 bytes @ 0x2D
  1621                           
  1622                           
  1623                           ; 2 bytes @ 0x2D
  1624  004E                     	ds	1
  1625  004F                     ___fladd@f2:	
  1626                           
  1627                           ; 4 bytes @ 0x2E
  1628  004F                     	ds	1
  1629  0050                     ?___lwtofl:	
  1630  0050                     ___lwtofl@c:	
  1631                           ; 4 bytes @ 0x2F
  1632                           
  1633                           
  1634                           ; 2 bytes @ 0x2F
  1635  0050                     	ds	3
  1636  0053                     ??___fladd:	
  1637                           
  1638                           ; 0 bytes @ 0x32
  1639  0053                     	ds	1
  1640  0054                     calibrate@i:	
  1641                           
  1642                           ; 1 bytes @ 0x33
  1643  0054                     	ds	3
  1644  0057                     ___fladd@sign:	
  1645                           
  1646                           ; 1 bytes @ 0x36
  1647  0057                     	ds	1
  1648  0058                     ___fladd@exp2:	
  1649                           
  1650                           ; 1 bytes @ 0x37
  1651  0058                     	ds	1
  1652  0059                     ___fladd@exp1:	
  1653                           
  1654                           ; 1 bytes @ 0x38
  1655  0059                     	ds	1
  1656  005A                     ?_eval_poly:	
  1657  005A                     ?___flsub:	
  1658                           ; 4 bytes @ 0x39
  1659                           
  1660  005A                     ___flsub@f2:	
  1661                           ; 4 bytes @ 0x39
  1662                           
  1663  005A                     eval_poly@x:	
  1664                           ; 4 bytes @ 0x39
  1665                           
  1666                           
  1667                           ; 4 bytes @ 0x39
  1668  005A                     	ds	4
  1669  005E                     eval_poly@d:	
  1670  005E                     ___flsub@f1:	
  1671                           ; 1 bytes @ 0x3D
  1672                           
  1673                           
  1674                           ; 4 bytes @ 0x3D
  1675  005E                     	ds	1
  1676  005F                     eval_poly@n:	
  1677                           
  1678                           ; 2 bytes @ 0x3E
  1679  005F                     	ds	2
  1680  0061                     ??_eval_poly:	
  1681                           
  1682                           ; 0 bytes @ 0x40
  1683  0061                     	ds	5
  1684  0066                     eval_poly@res:	
  1685                           
  1686                           ; 4 bytes @ 0x45
  1687  0066                     	ds	4
  1688  006A                     ?_ldexp:	
  1689  006A                     ?_log:	
  1690                           ; 4 bytes @ 0x49
  1691                           
  1692  006A                     ldexp@value:	
  1693                           ; 4 bytes @ 0x49
  1694                           
  1695  006A                     log@x:	
  1696                           ; 4 bytes @ 0x49
  1697                           
  1698                           
  1699                           ; 4 bytes @ 0x49
  1700  006A                     	ds	4
  1701  006E                     ldexp@newexp:	
  1702  006E                     log@exponent:	
  1703                           ; 2 bytes @ 0x4D
  1704                           
  1705                           
  1706                           ; 2 bytes @ 0x4D
  1707  006E                     	ds	2
  1708                           
  1709                           	psect	maintext
  1710  0156                     __pmaintext:	
  1711 ;;
  1712 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1713 ;;
  1714 ;; *************** function _main *****************
  1715 ;; Defined at:
  1716 ;;		line 112 in file "../../../src/LC-meter.c"
  1717 ;; Parameters:    Size  Location     Type
  1718 ;;		None
  1719 ;; Auto vars:     Size  Location     Type
  1720 ;;		None
  1721 ;; Return value:  Size  Location     Type
  1722 ;;		None               void
  1723 ;; Registers used:
  1724 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1725 ;; Tracked objects:
  1726 ;;		On entry : B00/0
  1727 ;;		On exit  : 0/0
  1728 ;;		Unchanged: 0/0
  1729 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1730 ;;      Params:         0       0       0       0       0
  1731 ;;      Locals:         0       0       0       0       0
  1732 ;;      Temps:          0       0       0       0       0
  1733 ;;      Totals:         0       0       0       0       0
  1734 ;;Total ram usage:        0 bytes
  1735 ;; Hardware stack levels required when called:    8
  1736 ;; This function calls:
  1737 ;;		_calibrate
  1738 ;;		_delay10ms
  1739 ;;		_format_double
  1740 ;;		_indicator
  1741 ;;		_lcd_begin
  1742 ;;		_lcd_clear
  1743 ;;		_lcd_gotoxy
  1744 ;;		_lcd_init
  1745 ;;		_lcd_puts
  1746 ;;		_measure_capacitance
  1747 ;;		_measure_inductance
  1748 ;;		_timer0_init
  1749 ;;		_timer2_init
  1750 ;;		_uart_init
  1751 ;;		_uart_puts
  1752 ;; This function is called by:
  1753 ;;		Startup code after reset
  1754 ;; This function uses a non-reentrant model
  1755 ;;
  1756                           
  1757                           
  1758                           ;psect for function _main
  1759  0156                     _main:	
  1760                           
  1761                           ;LC-meter.c: 113: bres = msecpart = msecs = seconds = 0;
  1762                           
  1763                           ;incstack = 0
  1764                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1765  0156  1683               	bsf	3,5	;RP0=1, select bank3
  1766  0157  1703               	bsf	3,6	;RP1=1, select bank3
  1767  0158  0198               	clrf	_seconds^(0+384)	;volatile
  1768  0159  0199               	clrf	(_seconds+1)^(0+384)	;volatile
  1769  015A  019A               	clrf	(_seconds+2)^(0+384)	;volatile
  1770  015B  019B               	clrf	(_seconds+3)^(0+384)	;volatile
  1771  015C  081B               	movf	(_seconds+3)^(0+384),w	;volatile
  1772  015D  0097               	movwf	(_msecs+3)^(0+384)	;volatile
  1773  015E  081A               	movf	(_seconds+2)^(0+384),w	;volatile
  1774  015F  0096               	movwf	(_msecs+2)^(0+384)	;volatile
  1775  0160  0819               	movf	(_seconds+1)^(0+384),w	;volatile
  1776  0161  0095               	movwf	(_msecs+1)^(0+384)	;volatile
  1777  0162  0818               	movf	_seconds^(0+384),w	;volatile
  1778  0163  0094               	movwf	_msecs^(0+384)	;volatile
  1779  0164  0815               	movf	(_msecs^(0+384)+1),w	;volatile
  1780  0165  00CF               	movwf	(_msecpart+1)^(0+384)	;volatile
  1781  0166  0814               	movf	_msecs^(0+384),w	;volatile
  1782  0167  00CE               	movwf	_msecpart^(0+384)	;volatile
  1783  0168  084F               	movf	(_msecpart+1)^(0+384),w	;volatile
  1784  0169  00CD               	movwf	(_bres+1)^(0+384)	;volatile
  1785  016A  084E               	movf	_msecpart^(0+384),w	;volatile
  1786  016B  00CC               	movwf	_bres^(0+384)	;volatile
  1787                           
  1788                           ;LC-meter.c: 115: CCal = 1000;
  1789  016C  3044               	movlw	68
  1790  016D  00CB               	movwf	(_CCal+3)^(0+384)
  1791  016E  307A               	movlw	122
  1792  016F  00CA               	movwf	(_CCal+2)^(0+384)
  1793  0170  3005               	movlw	5
  1794  0171  01C9               	clrf	(_CCal+1)^(0+384)
  1795  0172  01C8               	clrf	_CCal^(0+384)
  1796                           
  1797                           ;LC-meter.c: 122: CMCON = 0b00000101;
  1798  0173  1303               	bcf	3,6	;RP1=0, select bank1
  1799  0174  009C               	movwf	28	;volatile
  1800                           
  1801                           ;LC-meter.c: 124: TRISA = 0b11001111;
  1802  0175  30CF               	movlw	207
  1803  0176  0085               	movwf	5	;volatile
  1804                           
  1805                           ;LC-meter.c: 127: timer0_init(0b100 | 0x40);
  1806  0177  3044               	movlw	68
  1807  0178  160A  158A  27C0  120A  118A  	fcall	_timer0_init
  1808                           
  1809                           ;LC-meter.c: 130: T0SE = 1;
  1810  017D  1683               	bsf	3,5	;RP0=1, select bank1
  1811  017E  1601               	bsf	1,4	;volatile
  1812                           
  1813                           ;LC-meter.c: 141: nRBPU = 0;
  1814  017F  1381               	bcf	1,7	;volatile
  1815                           
  1816                           ;LC-meter.c: 144: TRISC3 = 0;
  1817  0180  1187               	bcf	7,3	;volatile
  1818                           
  1819                           ;LC-meter.c: 145: RC3 = ((1) == 0);
  1820  0181  1283               	bcf	3,5	;RP0=0, select bank0
  1821  0182  1187               	bcf	7,3	;volatile
  1822                           
  1823                           ;LC-meter.c: 147: SSPEN = 0;
  1824  0183  1294               	bcf	20,5	;volatile
  1825                           
  1826                           ;LC-meter.c: 152: timer2_init(0b000 | 0x80);
  1827  0184  3080               	movlw	128
  1828  0185  160A  158A  2790  120A  118A  	fcall	_timer2_init
  1829                           
  1830                           ;LC-meter.c: 157: TRISC &= 0b10110101;
  1831  018A  30B5               	movlw	181
  1832  018B  0587               	andwf	7,f	;volatile
  1833                           
  1834                           ;LC-meter.c: 169: lcd_init(!0);
  1835  018C  3001               	movlw	1
  1836  018D  160A  158A  2749  120A  118A  	fcall	_lcd_init
  1837  0192  3002               	movlw	2
  1838                           
  1839                           ;LC-meter.c: 170: lcd_begin(2, 1);
  1840  0193  01F7               	clrf	lcd_begin@dotsize
  1841  0194  0AF7               	incf	lcd_begin@dotsize,f
  1842  0195  120A  118A  270F  120A  118A  	fcall	_lcd_begin
  1843                           
  1844                           ;LC-meter.c: 173: TRISC |= (1 << 4);
  1845  019A  1683               	bsf	3,5	;RP0=1, select bank1
  1846  019B  1303               	bcf	3,6	;RP1=0, select bank1
  1847  019C  1607               	bsf	7,4	;volatile
  1848                           
  1849                           ;LC-meter.c: 174: TRISC &= ~(1 << 5);
  1850  019D  1287               	bcf	7,5	;volatile
  1851                           
  1852                           ;LC-meter.c: 176: PORTC &= ~(1 << 5);
  1853  019E  1283               	bcf	3,5	;RP0=0, select bank0
  1854  019F  1287               	bcf	7,5	;volatile
  1855                           
  1856                           ;LC-meter.c: 177: delay10ms(50);
  1857  01A0  3032               	movlw	50
  1858  01A1  120A  118A  2309  120A  118A  	fcall	_delay10ms
  1859                           
  1860                           ;LC-meter.c: 178: PORTC |= (1 << 5);
  1861  01A6  1283               	bcf	3,5	;RP0=0, select bank0
  1862  01A7  1303               	bcf	3,6	;RP1=0, select bank0
  1863  01A8  1687               	bsf	7,5	;volatile
  1864                           
  1865                           ;LC-meter.c: 179: delay10ms(50);
  1866  01A9  3032               	movlw	50
  1867  01AA  120A  118A  2309  120A  118A  	fcall	_delay10ms
  1868                           
  1869                           ;LC-meter.c: 180: PORTC &= ~(1 << 5);
  1870  01AF  1283               	bcf	3,5	;RP0=0, select bank0
  1871  01B0  1303               	bcf	3,6	;RP1=0, select bank0
  1872  01B1  1287               	bcf	7,5	;volatile
  1873                           
  1874                           ;LC-meter.c: 181: delay10ms(50);
  1875  01B2  3032               	movlw	50
  1876  01B3  120A  118A  2309  120A  118A  	fcall	_delay10ms
  1877                           
  1878                           ;LC-meter.c: 182: PORTC |= (1 << 5);
  1879  01B8  1283               	bcf	3,5	;RP0=0, select bank0
  1880  01B9  1303               	bcf	3,6	;RP1=0, select bank0
  1881  01BA  1687               	bsf	7,5	;volatile
  1882                           
  1883                           ;LC-meter.c: 183: delay10ms(50);
  1884  01BB  3032               	movlw	50
  1885  01BC  120A  118A  2309  120A  118A  	fcall	_delay10ms
  1886                           
  1887                           ;LC-meter.c: 184: PORTC &= ~(1 << 5);
  1888  01C1  1283               	bcf	3,5	;RP0=0, select bank0
  1889  01C2  1303               	bcf	3,6	;RP1=0, select bank0
  1890  01C3  1287               	bcf	7,5	;volatile
  1891                           
  1892                           ;LC-meter.c: 190: uart_init();
  1893  01C4  160A  158A  2730  120A  118A  	fcall	_uart_init
  1894                           
  1895                           ;LC-meter.c: 194: PEIE = 1;
  1896  01C9  170B               	bsf	11,6	;volatile
  1897                           
  1898                           ;LC-meter.c: 195: GIE = 1;
  1899  01CA  178B               	bsf	11,7	;volatile
  1900                           
  1901                           ;LC-meter.c: 198: putchar_ptr = &lcd_putch;
  1902  01CB  3004               	movlw	(low (fp__lcd_putch-fpbase))& (0+255)
  1903  01CC  00FB               	movwf	_putchar_ptr
  1904  01CD  3000               	movlw	0
  1905                           
  1906                           ;LC-meter.c: 205: lcd_gotoxy(0, 0);
  1907  01CE  01F7               	clrf	lcd_gotoxy@row
  1908  01CF  120A  158A  25AC  120A  118A  	fcall	_lcd_gotoxy
  1909                           
  1910                           ;LC-meter.c: 207: lcd_puts("LC-meter ");
  1911  01D4  307F               	movlw	(low ((STR_13-__stringbase)| (0+32768)))& (0+255)
  1912  01D5  120A  158A  27E5  120A  118A  	fcall	_lcd_puts
  1913                           
  1914                           ;LC-meter.c: 208: format_double( CCal);
  1915  01DA  1683               	bsf	3,5	;RP0=1, select bank3
  1916  01DB  1703               	bsf	3,6	;RP1=1, select bank3
  1917  01DC  084B               	movf	(_CCal+3)^(0+384),w
  1918  01DD  00B7               	movwf	(format_double@num+3)^(0+384)
  1919  01DE  084A               	movf	(_CCal+2)^(0+384),w
  1920  01DF  00B6               	movwf	(format_double@num+2)^(0+384)
  1921  01E0  0849               	movf	(_CCal+1)^(0+384),w
  1922  01E1  00B5               	movwf	(format_double@num+1)^(0+384)
  1923  01E2  0848               	movf	_CCal^(0+384),w
  1924  01E3  00B4               	movwf	format_double@num^(0+384)
  1925  01E4  120A  118A  2339  120A  118A  	fcall	_format_double
  1926                           
  1927                           ;LC-meter.c: 214: delay10ms(200);
  1928  01E9  30C8               	movlw	200
  1929  01EA  120A  118A  2309  120A  118A  	fcall	_delay10ms
  1930                           
  1931                           ;LC-meter.c: 217: calibrate();
  1932  01EF  120A  118A  2241  120A  118A  	fcall	_calibrate
  1933                           
  1934                           ;LC-meter.c: 219: lcd_clear();
  1935  01F4  120A  118A  2321  120A  118A  	fcall	_lcd_clear
  1936  01F9                     l4409:	
  1937                           
  1938                           ;LC-meter.c: 230: uart_puts("...\r\n");
  1939  01F9  3096               	movlw	(low ((STR_14-__stringbase)| (0+32768)))& (0+255)
  1940  01FA  120A  118A  230A  120A  118A  	fcall	_uart_puts
  1941                           
  1942                           ;LC-meter.c: 231: if(RC4)
  1943  01FF  1283               	bcf	3,5	;RP0=0, select bank0
  1944  0200  1303               	bcf	3,6	;RP1=0, select bank0
  1945  0201  1E07               	btfss	7,4	;volatile
  1946  0202  2A09               	goto	l4415
  1947                           
  1948                           ;LC-meter.c: 232: measure_capacitance();
  1949  0203  120A  158A  2248  120A  118A  	fcall	_measure_capacitance
  1950  0208  2A0E               	goto	l4417
  1951  0209                     l4415:	
  1952                           
  1953                           ;LC-meter.c: 233: else
  1954                           ;LC-meter.c: 234: measure_inductance();
  1955  0209  160A  118A  2176  120A  118A  	fcall	_measure_inductance
  1956  020E                     l4417:	
  1957                           
  1958                           ;LC-meter.c: 236: indicator(1);
  1959  020E  3001               	movlw	1
  1960  020F  160A  158A  2718  120A  118A  	fcall	_indicator
  1961                           
  1962                           ;LC-meter.c: 237: delay10ms(30);
  1963  0214  301E               	movlw	30
  1964  0215  120A  118A  2309  120A  118A  	fcall	_delay10ms
  1965                           
  1966                           ;LC-meter.c: 238: indicator(0);
  1967  021A  3000               	movlw	0
  1968  021B  160A  158A  2718  120A  118A  	fcall	_indicator
  1969                           
  1970                           ;LC-meter.c: 239: delay10ms(20);
  1971  0220  3014               	movlw	20
  1972  0221  120A  118A  2309  120A  118A  	fcall	_delay10ms
  1973                           
  1974                           ;LC-meter.c: 240: }
  1975  0226  29F9               	goto	l4409
  1976  0227                     __end_of_main:	
  1977                           
  1978                           	psect	text1
  1979  1F30                     __ptext1:	
  1980 ;; *************** function _uart_init *****************
  1981 ;; Defined at:
  1982 ;;		line 93 in file "../../../lib/uart.c"
  1983 ;; Parameters:    Size  Location     Type
  1984 ;;		None
  1985 ;; Auto vars:     Size  Location     Type
  1986 ;;		None
  1987 ;; Return value:  Size  Location     Type
  1988 ;;		None               void
  1989 ;; Registers used:
  1990 ;;		wreg, status,2, status,0, pclath, cstack
  1991 ;; Tracked objects:
  1992 ;;		On entry : 300/0
  1993 ;;		On exit  : 300/100
  1994 ;;		Unchanged: 0/0
  1995 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1996 ;;      Params:         0       0       0       0       0
  1997 ;;      Locals:         4       0       0       0       0
  1998 ;;      Temps:          0       0       0       0       0
  1999 ;;      Totals:         4       0       0       0       0
  2000 ;;Total ram usage:        4 bytes
  2001 ;; Hardware stack levels used:    1
  2002 ;; Hardware stack levels required when called:    2
  2003 ;; This function calls:
  2004 ;;		_uart_enable
  2005 ;; This function is called by:
  2006 ;;		_main
  2007 ;; This function uses a non-reentrant model
  2008 ;;
  2009                           
  2010                           
  2011                           ;psect for function _uart_init
  2012  1F30                     _uart_init:	
  2013                           
  2014                           ;uart.c: 96: TRISC7 = 1;
  2015                           
  2016                           ;incstack = 0
  2017                           ; Regs used in _uart_init: [wreg+status,2+status,0+pclath+cstack]
  2018  1F30  1683               	bsf	3,5	;RP0=1, select bank1
  2019  1F31  1787               	bsf	7,7	;volatile
  2020                           
  2021                           ;uart.c: 97: TRISC6 = 0;
  2022  1F32  1307               	bcf	7,6	;volatile
  2023                           
  2024                           ;uart.c: 98: RC6 = 0;
  2025  1F33  1283               	bcf	3,5	;RP0=0, select bank0
  2026  1F34  1307               	bcf	7,6	;volatile
  2027                           
  2028                           ;uart.c: 99: SPBRG = ((unsigned short int)((double)(20000000) / (16 * (double)(38400))) 
      +                          - 1);
  2029  1F35  301F               	movlw	31
  2030  1F36  1683               	bsf	3,5	;RP0=1, select bank1
  2031  1F37  0099               	movwf	25	;volatile
  2032                           
  2033                           ;uart.c: 101: RCSTA |= 0x90
  2034                           ;uart.c: 102: | (0 == 1 ? 0b1 : 0);
  2035  1F38  3090               	movlw	144
  2036  1F39  1283               	bcf	3,5	;RP0=0, select bank0
  2037  1F3A  0498               	iorwf	24,f	;volatile
  2038                           
  2039                           ;uart.c: 106: TX9 |= (0 == 1) ? 0b01000000 : 0;
  2040                           
  2041                           ;uart.c: 104: TXSTA |= (1 == 1) ? 0b100 : 0b000;
  2042  1F3B  1683               	bsf	3,5	;RP0=1, select bank1
  2043  1F3C  1518               	bsf	24,2	;volatile
  2044                           
  2045                           ;uart.c: 108: uart_enable();
  2046  1F3D  2F3E               	ljmp	l3035
  2047  1F3E                     __end_of_uart_init:	
  2048  1F3E                     __ptext2:	
  2049 ;; *************** function _uart_enable *****************
  2050 ;; Defined at:
  2051 ;;		line 75 in file "../../../lib/uart.c"
  2052 ;; Parameters:    Size  Location     Type
  2053 ;;		None
  2054 ;; Auto vars:     Size  Location     Type
  2055 ;;		None
  2056 ;; Return value:  Size  Location     Type
  2057 ;;		None               void
  2058 ;; Registers used:
  2059 ;;		None
  2060 ;; Tracked objects:
  2061 ;;		On entry : 300/100
  2062 ;;		On exit  : 300/100
  2063 ;;		Unchanged: 0/0
  2064 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2065 ;;      Params:         0       0       0       0       0
  2066 ;;      Locals:         0       0       0       0       0
  2067 ;;      Temps:          0       0       0       0       0
  2068 ;;      Totals:         0       0       0       0       0
  2069 ;;Total ram usage:        0 bytes
  2070 ;; Hardware stack levels used:    1
  2071 ;; Hardware stack levels required when called:    1
  2072 ;; This function calls:
  2073 ;;		Nothing
  2074 ;; This function is called by:
  2075 ;;		_uart_init
  2076 ;; This function uses a non-reentrant model
  2077 ;;
  2078                           
  2079                           
  2080                           ;psect for function _uart_enable
  2081  1F3E                     _uart_enable:	
  2082  1F3E                     l3035:	
  2083                           ;incstack = 0
  2084                           ; Regs used in _uart_enable: []
  2085                           
  2086                           
  2087                           ;uart.c: 76: TRISC7 = 1;
  2088  1F3E  1787               	bsf	7,7	;volatile
  2089                           
  2090                           ;uart.c: 77: TRISC6 = RC6 = 0;
  2091  1F3F  1283               	bcf	3,5	;RP0=0, select bank0
  2092  1F40  1307               	bcf	7,6	;volatile
  2093  1F41  1683               	bsf	3,5	;RP0=1, select bank1
  2094  1F42  1307               	bcf	7,6	;volatile
  2095                           
  2096                           ;uart.c: 78: TXEN = 1;
  2097  1F43  1698               	bsf	24,5	;volatile
  2098                           
  2099                           ;uart.c: 79: RCSTA |= 0x80;
  2100  1F44  1283               	bcf	3,5	;RP0=0, select bank0
  2101  1F45  1798               	bsf	24,7	;volatile
  2102                           
  2103                           ;uart.c: 80: RCIE = 0;
  2104  1F46  1683               	bsf	3,5	;RP0=1, select bank1
  2105  1F47  128C               	bcf	12,5	;volatile
  2106  1F48  0008               	return
  2107  1F49                     __end_of_uart_enable:	
  2108                           
  2109                           	psect	text3
  2110  1F90                     __ptext3:	
  2111 ;; *************** function _timer2_init *****************
  2112 ;; Defined at:
  2113 ;;		line 110 in file "../../../lib/timer.c"
  2114 ;; Parameters:    Size  Location     Type
  2115 ;;  ps_mode         1    wreg     unsigned char 
  2116 ;; Auto vars:     Size  Location     Type
  2117 ;;  ps_mode         1    3[COMMON] unsigned char 
  2118 ;;  postscaler      1    0        unsigned char 
  2119 ;;  ps              1    4[COMMON] unsigned char 
  2120 ;; Return value:  Size  Location     Type
  2121 ;;		None               void
  2122 ;; Registers used:
  2123 ;;		wreg, status,2, status,0
  2124 ;; Tracked objects:
  2125 ;;		On entry : B00/0
  2126 ;;		On exit  : 300/100
  2127 ;;		Unchanged: 0/0
  2128 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2129 ;;      Params:         0       0       0       0       0
  2130 ;;      Locals:         3       0       0       0       0
  2131 ;;      Temps:          1       0       0       0       0
  2132 ;;      Totals:         4       0       0       0       0
  2133 ;;Total ram usage:        4 bytes
  2134 ;; Hardware stack levels used:    1
  2135 ;; Hardware stack levels required when called:    1
  2136 ;; This function calls:
  2137 ;;		Nothing
  2138 ;; This function is called by:
  2139 ;;		_main
  2140 ;; This function uses a non-reentrant model
  2141 ;;
  2142                           
  2143                           
  2144                           ;psect for function _timer2_init
  2145  1F90                     _timer2_init:	
  2146                           
  2147                           ;incstack = 0
  2148                           ; Regs used in _timer2_init: [wreg+status,2+status,0]
  2149                           ;timer2_init@ps_mode stored from wreg
  2150  1F90  00F3               	movwf	timer2_init@ps_mode
  2151                           
  2152                           ;timer.c: 111: unsigned char ps = ps_mode & 0b1111;
  2153  1F91  00F4               	movwf	timer2_init@ps
  2154  1F92  300F               	movlw	15
  2155  1F93  05F4               	andwf	timer2_init@ps,f
  2156                           
  2157                           ;timer.c: 115: TOUTPS0 = postscaler & 1;
  2158  1F94  1192               	bcf	18,3	;volatile
  2159                           
  2160                           ;timer.c: 116: TOUTPS1 = (postscaler >> 1) & 1;
  2161  1F95  1212               	bcf	18,4	;volatile
  2162                           
  2163                           ;timer.c: 117: TOUTPS2 = (postscaler >> 2) & 1;
  2164  1F96  1292               	bcf	18,5	;volatile
  2165                           
  2166                           ;timer.c: 119: T2CKPS0 = (ps >> 1) & 1;
  2167  1F97  0874               	movf	timer2_init@ps,w
  2168  1F98  00F2               	movwf	??_timer2_init
  2169  1F99  1003               	clrc
  2170  1F9A  0CF2               	rrf	??_timer2_init,f
  2171  1F9B  1C72               	btfss	??_timer2_init,0
  2172  1F9C  2FA1               	goto	u2700
  2173  1F9D  1283               	bcf	3,5	;RP0=0, select bank0
  2174  1F9E  1303               	bcf	3,6	;RP1=0, select bank0
  2175  1F9F  1412               	bsf	18,0	;volatile
  2176  1FA0  2FA4               	goto	l3109
  2177  1FA1                     u2700:	
  2178  1FA1  1283               	bcf	3,5	;RP0=0, select bank0
  2179  1FA2  1303               	bcf	3,6	;RP1=0, select bank0
  2180  1FA3  1012               	bcf	18,0	;volatile
  2181  1FA4                     l3109:	
  2182                           
  2183                           ;timer.c: 120: T2CKPS1 = (ps >> 2) & 1;
  2184  1FA4  0874               	movf	timer2_init@ps,w
  2185  1FA5  00F2               	movwf	??_timer2_init
  2186  1FA6  1003               	clrc
  2187  1FA7  0CF2               	rrf	??_timer2_init,f
  2188  1FA8  1003               	clrc
  2189  1FA9  0CF2               	rrf	??_timer2_init,f
  2190  1FAA  1C72               	btfss	??_timer2_init,0
  2191  1FAB  2FB0               	goto	u2720
  2192  1FAC  1283               	bcf	3,5	;RP0=0, select bank0
  2193  1FAD  1303               	bcf	3,6	;RP1=0, select bank0
  2194  1FAE  1492               	bsf	18,1	;volatile
  2195  1FAF  2FB3               	goto	l3111
  2196  1FB0                     u2720:	
  2197  1FB0  1283               	bcf	3,5	;RP0=0, select bank0
  2198  1FB1  1303               	bcf	3,6	;RP1=0, select bank0
  2199  1FB2  1092               	bcf	18,1	;volatile
  2200  1FB3                     l3111:	
  2201                           
  2202                           ;timer.c: 122: TMR2 = 0;
  2203  1FB3  0191               	clrf	17	;volatile
  2204                           
  2205                           ;timer.c: 124: TMR2ON = 1;
  2206  1FB4  1512               	bsf	18,2	;volatile
  2207                           
  2208                           ;timer.c: 126: TMR2IF = 0;
  2209  1FB5  108C               	bcf	12,1	;volatile
  2210                           
  2211                           ;timer.c: 127: TMR2IE = !!(ps_mode & 0x80);
  2212  1FB6  1FF3               	btfss	timer2_init@ps_mode,7
  2213  1FB7  2FBC               	goto	u2740
  2214  1FB8  1683               	bsf	3,5	;RP0=1, select bank1
  2215  1FB9  1303               	bcf	3,6	;RP1=0, select bank1
  2216  1FBA  148C               	bsf	12,1	;volatile
  2217  1FBB  0008               	return
  2218  1FBC                     u2740:	
  2219  1FBC  1683               	bsf	3,5	;RP0=1, select bank1
  2220  1FBD  1303               	bcf	3,6	;RP1=0, select bank1
  2221  1FBE  108C               	bcf	12,1	;volatile
  2222  1FBF  0008               	return
  2223  1FC0                     __end_of_timer2_init:	
  2224                           
  2225                           	psect	text4
  2226  1FC0                     __ptext4:	
  2227 ;; *************** function _timer0_init *****************
  2228 ;; Defined at:
  2229 ;;		line 7 in file "../../../lib/timer.c"
  2230 ;; Parameters:    Size  Location     Type
  2231 ;;  ps_mode         1    wreg     unsigned char 
  2232 ;; Auto vars:     Size  Location     Type
  2233 ;;  ps_mode         1    9[BANK0 ] unsigned char 
  2234 ;;  prescaler       1    8[BANK0 ] unsigned char 
  2235 ;; Return value:  Size  Location     Type
  2236 ;;		None               void
  2237 ;; Registers used:
  2238 ;;		wreg, status,2, status,0
  2239 ;; Tracked objects:
  2240 ;;		On entry : B00/100
  2241 ;;		On exit  : B00/0
  2242 ;;		Unchanged: 800/0
  2243 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2244 ;;      Params:         0       0       0       0       0
  2245 ;;      Locals:         0      10       0       0       0
  2246 ;;      Temps:          0       0       0       0       0
  2247 ;;      Totals:         0      10       0       0       0
  2248 ;;Total ram usage:       10 bytes
  2249 ;; Hardware stack levels used:    1
  2250 ;; Hardware stack levels required when called:    1
  2251 ;; This function calls:
  2252 ;;		Nothing
  2253 ;; This function is called by:
  2254 ;;		_main
  2255 ;; This function uses a non-reentrant model
  2256 ;;
  2257                           
  2258                           
  2259                           ;psect for function _timer0_init
  2260  1FC0                     _timer0_init:	
  2261                           
  2262                           ;incstack = 0
  2263                           ; Regs used in _timer0_init: [wreg+status,2+status,0]
  2264                           ;timer0_init@ps_mode stored from wreg
  2265  1FC0  1283               	bcf	3,5	;RP0=0, select bank0
  2266  1FC1  00AA               	movwf	timer0_init@ps_mode
  2267                           
  2268                           ;timer.c: 8: unsigned char prescaler = ps_mode & 0b1111;
  2269  1FC2  00A9               	movwf	timer0_init@prescaler
  2270  1FC3  300F               	movlw	15
  2271  1FC4  05A9               	andwf	timer0_init@prescaler,f
  2272                           
  2273                           ;timer.c: 10: TMR0 = 0;
  2274  1FC5  0181               	clrf	1	;volatile
  2275                           
  2276                           ;timer.c: 13: OPTION_REG |= (!!(ps_mode & 0x40)) ? 0x20 : 0x00;
  2277  1FC6  1B2A               	btfsc	timer0_init@ps_mode,6
  2278  1FC7  2FCA               	goto	l4089
  2279  1FC8  01A1               	clrf	_timer0_init$124
  2280  1FC9  2FCC               	goto	L1
  2281  1FCA                     l4089:	
  2282  1FCA  3020               	movlw	32
  2283  1FCB  00A1               	movwf	_timer0_init$124
  2284  1FCC                     L1:	
  2285  1FCC  01A2               	clrf	_timer0_init$124+1
  2286  1FCD  0821               	movf	_timer0_init$124,w
  2287  1FCE  1683               	bsf	3,5	;RP0=1, select bank1
  2288  1FCF  0481               	iorwf	1,f	;volatile
  2289                           
  2290                           ;timer.c: 16: OPTION_REG |= (!!(ps_mode & 0x10)) ? 0x10 : 0x00;
  2291  1FD0  1283               	bcf	3,5	;RP0=0, select bank0
  2292  1FD1  1A2A               	btfsc	timer0_init@ps_mode,4
  2293  1FD2  2FD5               	goto	l4097
  2294  1FD3  01A3               	clrf	_timer0_init$125
  2295  1FD4  2FD7               	goto	L2
  2296  1FD5                     l4097:	
  2297  1FD5  3010               	movlw	16
  2298  1FD6  00A3               	movwf	_timer0_init$125
  2299  1FD7                     L2:	
  2300  1FD7  01A4               	clrf	_timer0_init$125+1
  2301  1FD8  0823               	movf	_timer0_init$125,w
  2302  1FD9  1683               	bsf	3,5	;RP0=1, select bank1
  2303  1FDA  0481               	iorwf	1,f	;volatile
  2304                           
  2305                           ;timer.c: 19: OPTION_REG &= (!!prescaler) ? ~0x08 : ~0x00;
  2306  1FDB  1283               	bcf	3,5	;RP0=0, select bank0
  2307  1FDC  0829               	movf	timer0_init@prescaler,w
  2308  1FDD  1D03               	btfss	3,2
  2309  1FDE  2FE2               	goto	l4105
  2310  1FDF  30FF               	movlw	255
  2311  1FE0  00A5               	movwf	_timer0_init$126
  2312  1FE1  2FE5               	goto	L3
  2313  1FE2                     l4105:	
  2314  1FE2  30F7               	movlw	247
  2315  1FE3  00A5               	movwf	_timer0_init$126
  2316  1FE4  30FF               	movlw	255
  2317  1FE5                     L3:	
  2318  1FE5  00A6               	movwf	_timer0_init$126+1
  2319  1FE6  0825               	movf	_timer0_init$126,w
  2320  1FE7  1683               	bsf	3,5	;RP0=1, select bank1
  2321  1FE8  0581               	andwf	1,f	;volatile
  2322                           
  2323                           ;timer.c: 26: OPTION_REG &= ~0b111;
  2324  1FE9  30F8               	movlw	248
  2325  1FEA  0581               	andwf	1,f	;volatile
  2326                           
  2327                           ;timer.c: 28: if(prescaler > 0) {
  2328  1FEB  1283               	bcf	3,5	;RP0=0, select bank0
  2329  1FEC  0829               	movf	timer0_init@prescaler,w
  2330  1FED  1903               	btfsc	3,2
  2331  1FEE  2FF4               	goto	l4115
  2332                           
  2333                           ;timer.c: 29: OPTION_REG |= (prescaler - 1) & 0b111;
  2334  1FEF  0829               	movf	timer0_init@prescaler,w
  2335  1FF0  3EFF               	addlw	255
  2336  1FF1  3907               	andlw	7
  2337  1FF2  1683               	bsf	3,5	;RP0=1, select bank1
  2338  1FF3  0481               	iorwf	1,f	;volatile
  2339  1FF4                     l4115:	
  2340                           
  2341                           ;timer.c: 35: }
  2342                           ;timer.c: 40: INTCON &= ~0x40;
  2343  1FF4  130B               	bcf	11,6	;volatile
  2344                           
  2345                           ;timer.c: 41: INTCON |= (!!(ps_mode & 0x80)) ? 0x20 : 0x00;
  2346  1FF5  1283               	bcf	3,5	;RP0=0, select bank0
  2347  1FF6  1BAA               	btfsc	timer0_init@ps_mode,7
  2348  1FF7  2FFA               	goto	l4121
  2349  1FF8  01A7               	clrf	_timer0_init$127
  2350  1FF9  2FFC               	goto	L4
  2351  1FFA                     l4121:	
  2352  1FFA  3020               	movlw	32
  2353  1FFB  00A7               	movwf	_timer0_init$127
  2354  1FFC                     L4:	
  2355  1FFC  01A8               	clrf	_timer0_init$127+1
  2356  1FFD  0827               	movf	_timer0_init$127,w
  2357  1FFE  048B               	iorwf	11,f	;volatile
  2358  1FFF  0008               	return
  2359  2000                     __end_of_timer0_init:	
  2360                           
  2361                           	psect	text7
  2362  0227                     __ptext7:	
  2363 ;; *************** function _print_unit *****************
  2364 ;; Defined at:
  2365 ;;		line 411 in file "../../../src/print.c"
  2366 ;; Parameters:    Size  Location     Type
  2367 ;;  unit            1    wreg     unsigned char 
  2368 ;; Auto vars:     Size  Location     Type
  2369 ;;  unit            1    0[COMMON] unsigned char 
  2370 ;; Return value:  Size  Location     Type
  2371 ;;		None               void
  2372 ;; Registers used:
  2373 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2374 ;; Tracked objects:
  2375 ;;		On entry : 300/100
  2376 ;;		On exit  : 0/0
  2377 ;;		Unchanged: 0/0
  2378 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2379 ;;      Params:         0       0       0       0       0
  2380 ;;      Locals:         0       0       0       0       0
  2381 ;;      Temps:          2       0       0       0       0
  2382 ;;      Totals:         2       0       0       0       0
  2383 ;;Total ram usage:        2 bytes
  2384 ;; Hardware stack levels used:    1
  2385 ;; Hardware stack levels required when called:    5
  2386 ;; This function calls:
  2387 ;;		_lcd_gotoxy
  2388 ;;		_uart_puts
  2389 ;; This function is called by:
  2390 ;;		_measure_capacitance
  2391 ;;		_measure_inductance
  2392 ;; This function uses a non-reentrant model
  2393 ;;
  2394                           
  2395                           
  2396                           ;psect for function _print_unit
  2397  0227                     _print_unit:	
  2398  0227                     l3969:	
  2399                           ;incstack = 0
  2400                           ; Regs used in _print_unit: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2401                           
  2402  0227  300E               	movlw	14
  2403                           
  2404                           ;print.c: 419: static const char* units[8] = {"H", "mH", "uH", "nH", "mF", "uF", "nF", "
      +                          pF"};
  2405                           ;print.c: 420: lcd_gotoxy(14, 0);
  2406  0228  01F7               	clrf	lcd_gotoxy@row
  2407  0229  120A  158A  25AC  120A  118A  	fcall	_lcd_gotoxy
  2408                           
  2409                           ;print.c: 424: lcd_gotoxy(16 - (buffer.n - buffer.p), 0);
  2410  022E  01F7               	clrf	lcd_gotoxy@row
  2411  022F  1683               	bsf	3,5	;RP0=1, select bank3
  2412  0230  1703               	bsf	3,6	;RP1=1, select bank3
  2413  0231  0E32               	swapf	(_buffer^(0+384)+16),w
  2414  0232  390F               	andlw	15
  2415  0233  00F8               	movwf	??_print_unit
  2416  0234  0832               	movf	(_buffer^(0+384)+16),w
  2417  0235  390F               	andlw	15
  2418  0236  00F9               	movwf	??_print_unit+1
  2419  0237  0878               	movf	??_print_unit,w
  2420  0238  0279               	subwf	??_print_unit+1,w
  2421  0239  3E10               	addlw	16
  2422  023A  120A  158A  25AC  120A  118A  	fcall	_lcd_gotoxy
  2423                           
  2424                           ;print.c: 427: uart_puts("\r\n");
  2425  023F  3099               	movlw	(low (((STR_14+3)-__stringbase)| (0+32768)))& (0+255)
  2426  0240  2B0A               	ljmp	_uart_puts
  2427  0241                     __end_of_print_unit:	
  2428  0241                     __ptext32:	
  2429 ;; *************** function _calibrate *****************
  2430 ;; Defined at:
  2431 ;;		line 25 in file "../../../lib/../src/measure.c"
  2432 ;; Parameters:    Size  Location     Type
  2433 ;;		None
  2434 ;; Auto vars:     Size  Location     Type
  2435 ;;  i               1   51[BANK0 ] unsigned char 
  2436 ;; Return value:  Size  Location     Type
  2437 ;;		None               void
  2438 ;; Registers used:
  2439 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2440 ;; Tracked objects:
  2441 ;;		On entry : 0/100
  2442 ;;		On exit  : 0/0
  2443 ;;		Unchanged: 0/0
  2444 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2445 ;;      Params:         0       0       0       0       0
  2446 ;;      Locals:         0       1       0       0       0
  2447 ;;      Temps:          0       0       0       0       0
  2448 ;;      Totals:         0       1       0       0       0
  2449 ;;Total ram usage:        1 bytes
  2450 ;; Hardware stack levels used:    1
  2451 ;; Hardware stack levels required when called:    7
  2452 ;; This function calls:
  2453 ;;		___lwtofl
  2454 ;;		_delay10ms
  2455 ;;		_lcd_clear
  2456 ;;		_lcd_gotoxy
  2457 ;;		_lcd_putch
  2458 ;;		_measure_freq
  2459 ;;		_put_str
  2460 ;;		_uart_puts
  2461 ;; This function is called by:
  2462 ;;		_main
  2463 ;; This function uses a non-reentrant model
  2464 ;;
  2465                           
  2466                           
  2467                           ;psect for function _calibrate
  2468  0241                     _calibrate:	
  2469                           
  2470                           ;measure.c: 26: unsigned char i;
  2471                           ;measure.c: 29: lcd_clear();
  2472                           
  2473                           ;incstack = 0
  2474                           ; Regs used in _calibrate: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2475  0241  2321               	fcall	_lcd_clear
  2476  0242  3000               	movlw	0
  2477                           
  2478                           ;measure.c: 31: lcd_gotoxy(0, 0);
  2479  0243  01F7               	clrf	lcd_gotoxy@row
  2480  0244  120A  158A  25AC  120A  118A  	fcall	_lcd_gotoxy
  2481                           
  2482                           ;measure.c: 32: put_str("Calibrating");
  2483  0249  3069               	movlw	(low ((STR_19-__stringbase)| (0+32768)))& (0+255)
  2484  024A  120A  158A  25DD  120A  118A  	fcall	_put_str
  2485  024F  3000               	movlw	0
  2486                           
  2487                           ;measure.c: 34: lcd_gotoxy(0, 1);
  2488  0250  01F7               	clrf	lcd_gotoxy@row
  2489  0251  0AF7               	incf	lcd_gotoxy@row,f
  2490  0252  120A  158A  25AC  120A  118A  	fcall	_lcd_gotoxy
  2491                           
  2492                           ;measure.c: 35: uart_puts("\r\n");
  2493  0257  3099               	movlw	(low (((STR_14+3)-__stringbase)| (0+32768)))& (0+255)
  2494  0258  230A               	fcall	_uart_puts
  2495                           
  2496                           ;measure.c: 36: put_str("please wait...");
  2497  0259  304D               	movlw	(low ((STR_21-__stringbase)| (0+32768)))& (0+255)
  2498  025A  120A  158A  25DD  120A  118A  	fcall	_put_str
  2499                           
  2500                           ;measure.c: 39: PORTC &= ~(1 << 5);
  2501  025F  1287               	bcf	7,5	;volatile
  2502                           
  2503                           ;measure.c: 41: F1 = (double)measure_freq();
  2504  0260  160A  118A  26C9  120A  118A  	fcall	_measure_freq
  2505  0265  084B               	movf	?_measure_freq+1,w
  2506  0266  00D1               	movwf	___lwtofl@c+1
  2507  0267  084A               	movf	?_measure_freq,w
  2508  0268  00D0               	movwf	___lwtofl@c
  2509  0269  120A  158A  2548  120A  118A  	fcall	___lwtofl
  2510  026E  0853               	movf	?___lwtofl+3,w
  2511  026F  1683               	bsf	3,5	;RP0=1, select bank1
  2512  0270  00EF               	movwf	(_F1+3)^(0+128)
  2513  0271  1283               	bcf	3,5	;RP0=0, select bank0
  2514  0272  0852               	movf	?___lwtofl+2,w
  2515  0273  1683               	bsf	3,5	;RP0=1, select bank1
  2516  0274  00EE               	movwf	(_F1+2)^(0+128)
  2517  0275  1283               	bcf	3,5	;RP0=0, select bank0
  2518  0276  0851               	movf	?___lwtofl+1,w
  2519  0277  1683               	bsf	3,5	;RP0=1, select bank1
  2520  0278  00ED               	movwf	(_F1+1)^(0+128)
  2521  0279  1283               	bcf	3,5	;RP0=0, select bank0
  2522  027A  0850               	movf	?___lwtofl,w
  2523  027B  1683               	bsf	3,5	;RP0=1, select bank1
  2524  027C  00EC               	movwf	_F1^(0+128)
  2525                           
  2526                           ;measure.c: 42: delay10ms(50);
  2527  027D  3032               	movlw	50
  2528  027E  2309               	fcall	_delay10ms
  2529                           
  2530                           ;measure.c: 44: F1 = (double)measure_freq();
  2531  027F  160A  118A  26C9  120A  118A  	fcall	_measure_freq
  2532  0284  084B               	movf	?_measure_freq+1,w
  2533  0285  00D1               	movwf	___lwtofl@c+1
  2534  0286  084A               	movf	?_measure_freq,w
  2535  0287  00D0               	movwf	___lwtofl@c
  2536  0288  120A  158A  2548  120A  118A  	fcall	___lwtofl
  2537  028D  0853               	movf	?___lwtofl+3,w
  2538  028E  1683               	bsf	3,5	;RP0=1, select bank1
  2539  028F  00EF               	movwf	(_F1+3)^(0+128)
  2540  0290  1283               	bcf	3,5	;RP0=0, select bank0
  2541  0291  0852               	movf	?___lwtofl+2,w
  2542  0292  1683               	bsf	3,5	;RP0=1, select bank1
  2543  0293  00EE               	movwf	(_F1+2)^(0+128)
  2544  0294  1283               	bcf	3,5	;RP0=0, select bank0
  2545  0295  0851               	movf	?___lwtofl+1,w
  2546  0296  1683               	bsf	3,5	;RP0=1, select bank1
  2547  0297  00ED               	movwf	(_F1+1)^(0+128)
  2548  0298  1283               	bcf	3,5	;RP0=0, select bank0
  2549  0299  0850               	movf	?___lwtofl,w
  2550  029A  1683               	bsf	3,5	;RP0=1, select bank1
  2551  029B  00EC               	movwf	_F1^(0+128)
  2552                           
  2553                           ;measure.c: 45: PORTC |= (1 << 5);
  2554  029C  1283               	bcf	3,5	;RP0=0, select bank0
  2555  029D  1687               	bsf	7,5	;volatile
  2556                           
  2557                           ;measure.c: 47: F2 = (double)measure_freq();
  2558  029E  160A  118A  26C9  120A  118A  	fcall	_measure_freq
  2559  02A3  084B               	movf	?_measure_freq+1,w
  2560  02A4  00D1               	movwf	___lwtofl@c+1
  2561  02A5  084A               	movf	?_measure_freq,w
  2562  02A6  00D0               	movwf	___lwtofl@c
  2563  02A7  120A  158A  2548  120A  118A  	fcall	___lwtofl
  2564  02AC  0853               	movf	?___lwtofl+3,w
  2565  02AD  1683               	bsf	3,5	;RP0=1, select bank3
  2566  02AE  1703               	bsf	3,6	;RP1=1, select bank3
  2567  02AF  0093               	movwf	(_F2+3)^(0+384)
  2568  02B0  1283               	bcf	3,5	;RP0=0, select bank0
  2569  02B1  1303               	bcf	3,6	;RP1=0, select bank0
  2570  02B2  0852               	movf	?___lwtofl+2,w
  2571  02B3  1683               	bsf	3,5	;RP0=1, select bank3
  2572  02B4  1703               	bsf	3,6	;RP1=1, select bank3
  2573  02B5  0092               	movwf	(_F2+2)^(0+384)
  2574  02B6  1283               	bcf	3,5	;RP0=0, select bank0
  2575  02B7  1303               	bcf	3,6	;RP1=0, select bank0
  2576  02B8  0851               	movf	?___lwtofl+1,w
  2577  02B9  1683               	bsf	3,5	;RP0=1, select bank3
  2578  02BA  1703               	bsf	3,6	;RP1=1, select bank3
  2579  02BB  0091               	movwf	(_F2+1)^(0+384)
  2580  02BC  1283               	bcf	3,5	;RP0=0, select bank0
  2581  02BD  1303               	bcf	3,6	;RP1=0, select bank0
  2582  02BE  0850               	movf	?___lwtofl,w
  2583  02BF  1683               	bsf	3,5	;RP0=1, select bank3
  2584  02C0  1703               	bsf	3,6	;RP1=1, select bank3
  2585  02C1  0090               	movwf	_F2^(0+384)
  2586                           
  2587                           ;measure.c: 48: delay10ms(50);
  2588  02C2  3032               	movlw	50
  2589  02C3  2309               	fcall	_delay10ms
  2590                           
  2591                           ;measure.c: 50: F2 = (double)measure_freq();
  2592  02C4  160A  118A  26C9  120A  118A  	fcall	_measure_freq
  2593  02C9  084B               	movf	?_measure_freq+1,w
  2594  02CA  00D1               	movwf	___lwtofl@c+1
  2595  02CB  084A               	movf	?_measure_freq,w
  2596  02CC  00D0               	movwf	___lwtofl@c
  2597  02CD  120A  158A  2548  120A  118A  	fcall	___lwtofl
  2598  02D2  0853               	movf	?___lwtofl+3,w
  2599  02D3  1683               	bsf	3,5	;RP0=1, select bank3
  2600  02D4  1703               	bsf	3,6	;RP1=1, select bank3
  2601  02D5  0093               	movwf	(_F2+3)^(0+384)
  2602  02D6  1283               	bcf	3,5	;RP0=0, select bank0
  2603  02D7  1303               	bcf	3,6	;RP1=0, select bank0
  2604  02D8  0852               	movf	?___lwtofl+2,w
  2605  02D9  1683               	bsf	3,5	;RP0=1, select bank3
  2606  02DA  1703               	bsf	3,6	;RP1=1, select bank3
  2607  02DB  0092               	movwf	(_F2+2)^(0+384)
  2608  02DC  1283               	bcf	3,5	;RP0=0, select bank0
  2609  02DD  1303               	bcf	3,6	;RP1=0, select bank0
  2610  02DE  0851               	movf	?___lwtofl+1,w
  2611  02DF  1683               	bsf	3,5	;RP0=1, select bank3
  2612  02E0  1703               	bsf	3,6	;RP1=1, select bank3
  2613  02E1  0091               	movwf	(_F2+1)^(0+384)
  2614  02E2  1283               	bcf	3,5	;RP0=0, select bank0
  2615  02E3  1303               	bcf	3,6	;RP1=0, select bank0
  2616  02E4  0850               	movf	?___lwtofl,w
  2617  02E5  1683               	bsf	3,5	;RP0=1, select bank3
  2618  02E6  1703               	bsf	3,6	;RP1=1, select bank3
  2619  02E7  0090               	movwf	_F2^(0+384)
  2620                           
  2621                           ;measure.c: 51: PORTC &= ~(1 << 5);
  2622  02E8  1283               	bcf	3,5	;RP0=0, select bank0
  2623  02E9  1303               	bcf	3,6	;RP1=0, select bank0
  2624  02EA  1287               	bcf	7,5	;volatile
  2625  02EB  300B               	movlw	11
  2626                           
  2627                           ;measure.c: 55: lcd_gotoxy(11, 0);
  2628  02EC  01F7               	clrf	lcd_gotoxy@row
  2629  02ED  120A  158A  25AC  120A  118A  	fcall	_lcd_gotoxy
  2630                           
  2631                           ;measure.c: 57: for(i = 0; i < 6; i++) {
  2632  02F2  1283               	bcf	3,5	;RP0=0, select bank0
  2633  02F3  1303               	bcf	3,6	;RP1=0, select bank0
  2634  02F4  01D4               	clrf	calibrate@i
  2635  02F5                     l4225:	
  2636                           
  2637                           ;measure.c: 58: lcd_putch('=');
  2638  02F5  303D               	movlw	61
  2639  02F6  00F7               	movwf	lcd_putch@value
  2640  02F7  120A  158A  263C  120A  118A  	fcall	_lcd_putch
  2641                           
  2642                           ;measure.c: 60: delay10ms(28);
  2643  02FC  301C               	movlw	28
  2644  02FD  2309  120A  118A   	fcall	_delay10ms
  2645  0300  1283               	bcf	3,5	;RP0=0, select bank0
  2646  0301  1303               	bcf	3,6	;RP1=0, select bank0
  2647  0302  3006               	movlw	6
  2648  0303  0AD4               	incf	calibrate@i,f
  2649  0304  0254               	subwf	calibrate@i,w
  2650  0305  1C03               	skipc
  2651  0306  2AF5               	goto	l4225
  2652                           
  2653                           ;measure.c: 61: }
  2654                           ;measure.c: 63: uart_puts("\r\n");
  2655  0307  3099               	movlw	(low (((STR_14+3)-__stringbase)| (0+32768)))& (0+255)
  2656  0308  2B0A               	ljmp	_uart_puts
  2657  0309                     __end_of_calibrate:	
  2658  0309                     __ptext49:	
  2659 ;; *************** function _delay10ms *****************
  2660 ;; Defined at:
  2661 ;;		line 55 in file "../../../src/LC-meter.c"
  2662 ;; Parameters:    Size  Location     Type
  2663 ;;  period_10ms     1    wreg     unsigned char 
  2664 ;; Auto vars:     Size  Location     Type
  2665 ;;  period_10ms     1    0[COMMON] unsigned char 
  2666 ;; Return value:  Size  Location     Type
  2667 ;;		None               void
  2668 ;; Registers used:
  2669 ;;		wreg
  2670 ;; Tracked objects:
  2671 ;;		On entry : 0/0
  2672 ;;		On exit  : 0/0
  2673 ;;		Unchanged: 0/0
  2674 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2675 ;;      Params:         0       0       0       0       0
  2676 ;;      Locals:         0       0       0       0       0
  2677 ;;      Temps:          0       0       0       0       0
  2678 ;;      Totals:         0       0       0       0       0
  2679 ;;Total ram usage:        0 bytes
  2680 ;; Hardware stack levels used:    1
  2681 ;; Hardware stack levels required when called:    1
  2682 ;; This function calls:
  2683 ;;		Nothing
  2684 ;; This function is called by:
  2685 ;;		_main
  2686 ;;		_calibrate
  2687 ;; This function uses a non-reentrant model
  2688 ;;
  2689                           
  2690                           
  2691                           ;psect for function _delay10ms
  2692  0309                     _delay10ms:	
  2693                           
  2694                           ;incstack = 0
  2695                           ; Regs used in _delay10ms: [wreg]
  2696  0309  0008               	return
  2697  030A                     __end_of_delay10ms:	
  2698  030A                     __ptext33:	
  2699 ;; *************** function _uart_puts *****************
  2700 ;; Defined at:
  2701 ;;		line 112 in file "../../../lib/uart.c"
  2702 ;; Parameters:    Size  Location     Type
  2703 ;;  s               1    wreg     PTR const unsigned char 
  2704 ;;		 -> STR_22(3), STR_20(3), STR_14(6), STR_9(3), 
  2705 ;; Auto vars:     Size  Location     Type
  2706 ;;  s               1    3[COMMON] PTR const unsigned char 
  2707 ;;		 -> STR_22(3), STR_20(3), STR_14(6), STR_9(3), 
  2708 ;; Return value:  Size  Location     Type
  2709 ;;		None               void
  2710 ;; Registers used:
  2711 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2712 ;; Tracked objects:
  2713 ;;		On entry : 0/100
  2714 ;;		On exit  : 0/0
  2715 ;;		Unchanged: 0/0
  2716 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2717 ;;      Params:         0       0       0       0       0
  2718 ;;      Locals:         1       0       0       0       0
  2719 ;;      Temps:          0       0       0       0       0
  2720 ;;      Totals:         1       0       0       0       0
  2721 ;;Total ram usage:        1 bytes
  2722 ;; Hardware stack levels used:    1
  2723 ;; Hardware stack levels required when called:    2
  2724 ;; This function calls:
  2725 ;;		_uart_putch
  2726 ;; This function is called by:
  2727 ;;		_print_unit
  2728 ;;		_main
  2729 ;;		_calibrate
  2730 ;; This function uses a non-reentrant model
  2731 ;;
  2732                           
  2733                           
  2734                           ;psect for function _uart_puts
  2735  030A                     _uart_puts:	
  2736                           
  2737                           ;incstack = 0
  2738                           ; Regs used in _uart_puts: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2739                           ;uart_puts@s stored from wreg
  2740  030A  00F3               	movwf	uart_puts@s
  2741  030B                     l2777:	
  2742                           ;uart.c: 113: while(*s) uart_putch(*s++);
  2743                           
  2744  030B  0873               	movf	uart_puts@s,w
  2745  030C  0084               	movwf	4
  2746  030D  120A  118A  2012  120A  118A  	fcall	stringdir
  2747  0312  3A00               	xorlw	0
  2748  0313  1903               	btfsc	3,2
  2749  0314  0008               	return
  2750  0315  0873               	movf	uart_puts@s,w
  2751  0316  0084               	movwf	4
  2752  0317  120A  118A  2012  120A  118A  	fcall	stringdir
  2753  031C  2331  120A  118A   	fcall	_uart_putch
  2754  031F  0AF3               	incf	uart_puts@s,f
  2755  0320  2B0B               	goto	l2777
  2756  0321                     __end_of_uart_puts:	
  2757  0321                     __ptext45:	
  2758 ;; *************** function _lcd_clear *****************
  2759 ;; Defined at:
  2760 ;;		line 306 in file "../../../lib/lcd44780.c"
  2761 ;; Parameters:    Size  Location     Type
  2762 ;;		None
  2763 ;; Auto vars:     Size  Location     Type
  2764 ;;		None
  2765 ;; Return value:  Size  Location     Type
  2766 ;;		None               void
  2767 ;; Registers used:
  2768 ;;		wreg, status,2, status,0, pclath, cstack
  2769 ;; Tracked objects:
  2770 ;;		On entry : 0/100
  2771 ;;		On exit  : 0/0
  2772 ;;		Unchanged: 0/0
  2773 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2774 ;;      Params:         0       0       0       0       0
  2775 ;;      Locals:         0       0       0       0       0
  2776 ;;      Temps:          2       0       0       0       0
  2777 ;;      Totals:         2       0       0       0       0
  2778 ;;Total ram usage:        2 bytes
  2779 ;; Hardware stack levels used:    1
  2780 ;; Hardware stack levels required when called:    4
  2781 ;; This function calls:
  2782 ;;		_lcd_command
  2783 ;; This function is called by:
  2784 ;;		_main
  2785 ;;		_calibrate
  2786 ;; This function uses a non-reentrant model
  2787 ;;
  2788                           
  2789                           
  2790                           ;psect for function _lcd_clear
  2791  0321                     _lcd_clear:	
  2792                           
  2793                           ;lcd44780.c: 307: lcd_command(0x01);
  2794                           
  2795                           ;incstack = 0
  2796                           ; Regs used in _lcd_clear: [wreg+status,2+status,0+pclath+cstack]
  2797  0321  3001               	movlw	1
  2798  0322  120A  158A  2626  120A  118A  	fcall	_lcd_command
  2799                           
  2800                           ;lcd44780.c: 308: _delay((unsigned long)((2)*(20000000/4000.0)));
  2801  0327  300D               	movlw	13
  2802  0328  00F8               	movwf	??_lcd_clear+1
  2803  0329  30FB               	movlw	251
  2804  032A  00F7               	movwf	??_lcd_clear
  2805  032B                     u4287:	
  2806  032B  0BF7               	decfsz	??_lcd_clear,f
  2807  032C  2B2B               	goto	u4287
  2808  032D  0BF8               	decfsz	??_lcd_clear+1,f
  2809  032E  2B2B               	goto	u4287
  2810  032F  2B30               	nop2
  2811  0330  0008               	return
  2812  0331                     __end_of_lcd_clear:	
  2813  0331                     __ptext34:	
  2814 ;; *************** function _uart_putch *****************
  2815 ;; Defined at:
  2816 ;;		line 23 in file "../../../lib/uart.c"
  2817 ;; Parameters:    Size  Location     Type
  2818 ;;  byte            1    wreg     unsigned char 
  2819 ;; Auto vars:     Size  Location     Type
  2820 ;;  byte            1    2[COMMON] unsigned char 
  2821 ;; Return value:  Size  Location     Type
  2822 ;;		None               void
  2823 ;; Registers used:
  2824 ;;		wreg
  2825 ;; Tracked objects:
  2826 ;;		On entry : 0/100
  2827 ;;		On exit  : 300/0
  2828 ;;		Unchanged: 0/0
  2829 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2830 ;;      Params:         0       0       0       0       0
  2831 ;;      Locals:         1       0       0       0       0
  2832 ;;      Temps:          0       0       0       0       0
  2833 ;;      Totals:         1       0       0       0       0
  2834 ;;Total ram usage:        1 bytes
  2835 ;; Hardware stack levels used:    1
  2836 ;; Hardware stack levels required when called:    1
  2837 ;; This function calls:
  2838 ;;		Nothing
  2839 ;; This function is called by:
  2840 ;;		_uart_puts
  2841 ;; This function uses a non-reentrant model
  2842 ;;
  2843                           
  2844                           
  2845                           ;psect for function _uart_putch
  2846  0331                     _uart_putch:	
  2847                           
  2848                           ;incstack = 0
  2849                           ; Regs used in _uart_putch: [wreg]
  2850                           ;uart_putch@byte stored from wreg
  2851  0331  00F2               	movwf	uart_putch@byte
  2852  0332                     l528:	
  2853                           ;uart.c: 25: while(!TXIF) {
  2854                           
  2855  0332  1283               	bcf	3,5	;RP0=0, select bank0
  2856  0333  1303               	bcf	3,6	;RP1=0, select bank0
  2857  0334  1E0C               	btfss	12,4	;volatile
  2858  0335  2B32               	goto	l528
  2859                           
  2860                           ;uart.c: 28: }
  2861                           ;uart.c: 29: TXREG = (unsigned char)byte;
  2862  0336  0872               	movf	uart_putch@byte,w
  2863  0337  0099               	movwf	25	;volatile
  2864  0338  0008               	return
  2865  0339                     __end_of_uart_putch:	
  2866                           
  2867                           	psect	text9
  2868  1F49                     __ptext9:	
  2869 ;; *************** function _lcd_init *****************
  2870 ;; Defined at:
  2871 ;;		line 503 in file "../../../lib/lcd44780.c"
  2872 ;; Parameters:    Size  Location     Type
  2873 ;;  fourbitmode     1    wreg     unsigned char 
  2874 ;; Auto vars:     Size  Location     Type
  2875 ;;  fourbitmode     1    2[COMMON] unsigned char 
  2876 ;; Return value:  Size  Location     Type
  2877 ;;		None               void
  2878 ;; Registers used:
  2879 ;;		wreg, status,2, status,0
  2880 ;; Tracked objects:
  2881 ;;		On entry : 300/100
  2882 ;;		On exit  : 300/100
  2883 ;;		Unchanged: 0/0
  2884 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2885 ;;      Params:         0       0       0       0       0
  2886 ;;      Locals:         3       0       0       0       0
  2887 ;;      Temps:          0       0       0       0       0
  2888 ;;      Totals:         3       0       0       0       0
  2889 ;;Total ram usage:        3 bytes
  2890 ;; Hardware stack levels used:    1
  2891 ;; Hardware stack levels required when called:    1
  2892 ;; This function calls:
  2893 ;;		Nothing
  2894 ;; This function is called by:
  2895 ;;		_main
  2896 ;; This function uses a non-reentrant model
  2897 ;;
  2898                           
  2899                           
  2900                           ;psect for function _lcd_init
  2901  1F49                     _lcd_init:	
  2902                           
  2903                           ;incstack = 0
  2904                           ; Regs used in _lcd_init: [wreg+status,2+status,0]
  2905                           ;lcd_init@fourbitmode stored from wreg
  2906  1F49  00F2               	movwf	lcd_init@fourbitmode
  2907                           
  2908                           ;lcd44780.c: 505: LCD_ctrl = 0;
  2909  1F4A  01EB               	clrf	_LCD_ctrl^(0+128)
  2910                           
  2911                           ;lcd44780.c: 506: LCD_function = (fourbitmode ? 0x00 : 0x10);
  2912  1F4B  0872               	movf	lcd_init@fourbitmode,w
  2913  1F4C  1D03               	btfss	3,2
  2914  1F4D  2F51               	goto	l3141
  2915  1F4E  3010               	movlw	16
  2916  1F4F  00F3               	movwf	_lcd_init$338
  2917  1F50  2F52               	goto	L7
  2918  1F51                     l3141:	
  2919  1F51  01F3               	clrf	_lcd_init$338
  2920  1F52                     L7:	
  2921  1F52  01F4               	clrf	_lcd_init$338+1
  2922  1F53  0873               	movf	_lcd_init$338,w
  2923  1F54  00FA               	movwf	_LCD_function
  2924                           
  2925                           ;lcd44780.c: 508: LCD_lines = 0;
  2926  1F55  1703               	bsf	3,6	;RP1=1, select bank3
  2927  1F56  01A0               	clrf	_LCD_lines^(0+384)
  2928                           
  2929                           ;lcd44780.c: 510: LCD_mode = 0;
  2930  1F57  01A1               	clrf	_LCD_mode^(0+384)
  2931                           
  2932                           ;lcd44780.c: 512: TRISB2 = 0;
  2933  1F58  1303               	bcf	3,6	;RP1=0, select bank1
  2934  1F59  1106               	bcf	6,2	;volatile
  2935                           
  2936                           ;lcd44780.c: 513: RB2 = 0;
  2937  1F5A  1283               	bcf	3,5	;RP0=0, select bank0
  2938  1F5B  1106               	bcf	6,2	;volatile
  2939                           
  2940                           ;lcd44780.c: 518: TRISB3 = 0;
  2941  1F5C  1683               	bsf	3,5	;RP0=1, select bank1
  2942  1F5D  1186               	bcf	6,3	;volatile
  2943                           
  2944                           ;lcd44780.c: 519: RB3 = 0;
  2945  1F5E  1283               	bcf	3,5	;RP0=0, select bank0
  2946  1F5F  1186               	bcf	6,3	;volatile
  2947                           
  2948                           ;lcd44780.c: 521: TRISB4 = 0;
  2949  1F60  1683               	bsf	3,5	;RP0=1, select bank1
  2950  1F61  1206               	bcf	6,4	;volatile
  2951                           
  2952                           ;lcd44780.c: 522: TRISB5 = 0;
  2953  1F62  1286               	bcf	6,5	;volatile
  2954                           
  2955                           ;lcd44780.c: 523: TRISB6 = 0;
  2956  1F63  1306               	bcf	6,6	;volatile
  2957                           
  2958                           ;lcd44780.c: 524: TRISB7 = 0;
  2959  1F64  1386               	bcf	6,7	;volatile
  2960  1F65  0008               	return
  2961  1F66                     __end_of_lcd_init:	
  2962                           
  2963                           	psect	text10
  2964  070F                     __ptext10:	
  2965 ;; *************** function _lcd_begin *****************
  2966 ;; Defined at:
  2967 ;;		line 430 in file "../../../lib/lcd44780.c"
  2968 ;; Parameters:    Size  Location     Type
  2969 ;;  lines           1    wreg     unsigned char 
  2970 ;;  dotsize         1    7[COMMON] unsigned char 
  2971 ;; Auto vars:     Size  Location     Type
  2972 ;;  lines           1    0[BANK0 ] unsigned char 
  2973 ;; Return value:  Size  Location     Type
  2974 ;;		None               void
  2975 ;; Registers used:
  2976 ;;		wreg, status,2, status,0, pclath, cstack
  2977 ;; Tracked objects:
  2978 ;;		On entry : 300/100
  2979 ;;		On exit  : 0/0
  2980 ;;		Unchanged: 0/0
  2981 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2982 ;;      Params:         1       0       0       0       0
  2983 ;;      Locals:         0       1       0       0       0
  2984 ;;      Temps:          2       0       0       0       0
  2985 ;;      Totals:         3       1       0       0       0
  2986 ;;Total ram usage:        4 bytes
  2987 ;; Hardware stack levels used:    1
  2988 ;; Hardware stack levels required when called:    4
  2989 ;; This function calls:
  2990 ;;		_lcd_command
  2991 ;;		_lcd_write4bits
  2992 ;; This function is called by:
  2993 ;;		_main
  2994 ;; This function uses a non-reentrant model
  2995 ;;
  2996                           
  2997                           
  2998                           ;psect for function _lcd_begin
  2999  070F                     _lcd_begin:	
  3000                           
  3001                           ;incstack = 0
  3002                           ; Regs used in _lcd_begin: [wreg+status,2+status,0+pclath+cstack]
  3003                           ;lcd_begin@lines stored from wreg
  3004  070F  1283               	bcf	3,5	;RP0=0, select bank0
  3005  0710  00A1               	movwf	lcd_begin@lines
  3006                           
  3007                           ;lcd44780.c: 431: if(lines > 1)
  3008  0711  3002               	movlw	2
  3009  0712  0221               	subwf	lcd_begin@lines,w
  3010  0713  1803               	btfsc	3,0
  3011                           
  3012                           ;lcd44780.c: 432: LCD_function |= 0x08;
  3013  0714  15FA               	bsf	_LCD_function,3
  3014                           
  3015                           ;lcd44780.c: 435: LCD_lines = lines;
  3016  0715  0821               	movf	lcd_begin@lines,w
  3017  0716  1683               	bsf	3,5	;RP0=1, select bank3
  3018  0717  1703               	bsf	3,6	;RP1=1, select bank3
  3019  0718  00A0               	movwf	_LCD_lines^(0+384)
  3020                           
  3021                           ;lcd44780.c: 439: if((dotsize != 0) && (lines == 1))
  3022  0719  0877               	movf	lcd_begin@dotsize,w
  3023  071A  1903               	btfsc	3,2
  3024  071B  2F21               	goto	l4153
  3025  071C  1283               	bcf	3,5	;RP0=0, select bank0
  3026  071D  1303               	bcf	3,6	;RP1=0, select bank0
  3027  071E  0321               	decf	lcd_begin@lines,w
  3028  071F  1903               	btfsc	3,2
  3029                           
  3030                           ;lcd44780.c: 440: LCD_function |= 0x04;
  3031  0720  157A               	bsf	_LCD_function,2
  3032  0721                     l4153:	
  3033                           
  3034                           ;lcd44780.c: 442: _delay((unsigned long)((15)*(20000000/4000.0)));
  3035  0721  3062               	movlw	98
  3036  0722  00F9               	movwf	??_lcd_begin+1
  3037  0723  3065               	movlw	101
  3038  0724  00F8               	movwf	??_lcd_begin
  3039  0725                     u4107:	
  3040  0725  0BF8               	decfsz	??_lcd_begin,f
  3041  0726  2F25               	goto	u4107
  3042  0727  0BF9               	decfsz	??_lcd_begin+1,f
  3043  0728  2F25               	goto	u4107
  3044  0729  2F2A               	nop2
  3045                           
  3046                           ;lcd44780.c: 445: RB2 = 0;
  3047  072A  1283               	bcf	3,5	;RP0=0, select bank0
  3048  072B  1303               	bcf	3,6	;RP1=0, select bank0
  3049  072C  1106               	bcf	6,2	;volatile
  3050                           
  3051                           ;lcd44780.c: 446: RB3 = 0;
  3052  072D  1186               	bcf	6,3	;volatile
  3053                           
  3054                           ;lcd44780.c: 449: if(!(LCD_function & 0x10)) {
  3055  072E  1A7A               	btfsc	_LCD_function,4
  3056  072F  2F54               	goto	l4171
  3057                           
  3058                           ;lcd44780.c: 453: lcd_write4bits(0x03);
  3059  0730  3003               	movlw	3
  3060  0731  27A3  120A  118A   	fcall	_lcd_write4bits
  3061                           
  3062                           ;lcd44780.c: 454: _delay((unsigned long)((5)*(20000000/4000.0)));
  3063  0734  3021               	movlw	33
  3064  0735  00F9               	movwf	??_lcd_begin+1
  3065  0736  3076               	movlw	118
  3066  0737  00F8               	movwf	??_lcd_begin
  3067  0738                     u4117:	
  3068  0738  0BF8               	decfsz	??_lcd_begin,f
  3069  0739  2F38               	goto	u4117
  3070  073A  0BF9               	decfsz	??_lcd_begin+1,f
  3071  073B  2F38               	goto	u4117
  3072  073C  0000               	nop
  3073                           
  3074                           ;lcd44780.c: 456: lcd_write4bits(0x03);
  3075  073D  3003               	movlw	3
  3076  073E  27A3  120A  118A   	fcall	_lcd_write4bits
  3077                           
  3078                           ;lcd44780.c: 457: _delay((unsigned long)((150)*(20000000/4000000.0)));
  3079  0741  30F9               	movlw	249
  3080  0742  00F8               	movwf	??_lcd_begin
  3081  0743                     u4127:	
  3082  0743  0BF8               	decfsz	??_lcd_begin,f
  3083  0744  2F43               	goto	u4127
  3084  0745  2F46               	nop2	;nop
  3085                           
  3086                           ;lcd44780.c: 459: lcd_write4bits(0x03);
  3087  0746  3003               	movlw	3
  3088  0747  27A3  120A  118A   	fcall	_lcd_write4bits
  3089                           
  3090                           ;lcd44780.c: 460: _delay((unsigned long)((150)*(20000000/4000000.0)));
  3091  074A  30F9               	movlw	249
  3092  074B  00F8               	movwf	??_lcd_begin
  3093  074C                     u4137:	
  3094  074C  0BF8               	decfsz	??_lcd_begin,f
  3095  074D  2F4C               	goto	u4137
  3096  074E  2F4F               	nop2	;nop
  3097                           
  3098                           ;lcd44780.c: 462: lcd_write4bits(0x02);
  3099  074F  3002               	movlw	2
  3100  0750  27A3  120A  118A   	fcall	_lcd_write4bits
  3101                           
  3102                           ;lcd44780.c: 463: }
  3103  0753  2F7B               	goto	l4179
  3104  0754                     l4171:	
  3105                           
  3106                           ;lcd44780.c: 465: else {
  3107                           ;lcd44780.c: 469: lcd_command(0x20 | LCD_function);
  3108  0754  087A               	movf	_LCD_function,w
  3109  0755  3820               	iorlw	32
  3110  0756  120A  158A  2626  120A  118A  	fcall	_lcd_command
  3111                           
  3112                           ;lcd44780.c: 470: _delay((unsigned long)((5)*(20000000/4000.0)));
  3113  075B  3021               	movlw	33
  3114  075C  00F9               	movwf	??_lcd_begin+1
  3115  075D  3076               	movlw	118
  3116  075E  00F8               	movwf	??_lcd_begin
  3117  075F                     u4147:	
  3118  075F  0BF8               	decfsz	??_lcd_begin,f
  3119  0760  2F5F               	goto	u4147
  3120  0761  0BF9               	decfsz	??_lcd_begin+1,f
  3121  0762  2F5F               	goto	u4147
  3122  0763  0000               	nop
  3123                           
  3124                           ;lcd44780.c: 473: lcd_command(0x20 | LCD_function);
  3125  0764  087A               	movf	_LCD_function,w
  3126  0765  3820               	iorlw	32
  3127  0766  120A  158A  2626  120A  118A  	fcall	_lcd_command
  3128                           
  3129                           ;lcd44780.c: 474: _delay((unsigned long)((5)*(20000000/4000.0)));
  3130  076B  3021               	movlw	33
  3131  076C  00F9               	movwf	??_lcd_begin+1
  3132  076D  3076               	movlw	118
  3133  076E  00F8               	movwf	??_lcd_begin
  3134  076F                     u4157:	
  3135  076F  0BF8               	decfsz	??_lcd_begin,f
  3136  0770  2F6F               	goto	u4157
  3137  0771  0BF9               	decfsz	??_lcd_begin+1,f
  3138  0772  2F6F               	goto	u4157
  3139  0773  0000               	nop
  3140                           
  3141                           ;lcd44780.c: 478: lcd_command(0x20 | LCD_function);
  3142  0774  087A               	movf	_LCD_function,w
  3143  0775  3820               	iorlw	32
  3144  0776  120A  158A  2626  120A  118A  	fcall	_lcd_command
  3145  077B                     l4179:	
  3146                           
  3147                           ;lcd44780.c: 479: }
  3148                           ;lcd44780.c: 482: lcd_command(0x20 | LCD_function);
  3149  077B  087A               	movf	_LCD_function,w
  3150  077C  3820               	iorlw	32
  3151  077D  120A  158A  2626  120A  118A  	fcall	_lcd_command
  3152                           
  3153                           ;lcd44780.c: 485: LCD_ctrl = 0x04 | 0x00 | 0x00;
  3154  0782  3004               	movlw	4
  3155  0783  1683               	bsf	3,5	;RP0=1, select bank1
  3156  0784  1303               	bcf	3,6	;RP1=0, select bank1
  3157  0785  00EB               	movwf	_LCD_ctrl^(0+128)
  3158                           
  3159                           ;lcd44780.c: 486: lcd_command(0x08 | LCD_ctrl);
  3160  0786  3808               	iorlw	8
  3161  0787  120A  158A  2626  120A  118A  	fcall	_lcd_command
  3162                           
  3163                           ;lcd44780.c: 489: lcd_command(0x01);
  3164  078C  3001               	movlw	1
  3165  078D  120A  158A  2626  120A  118A  	fcall	_lcd_command
  3166                           
  3167                           ;lcd44780.c: 490: _delay((unsigned long)((2)*(20000000/4000.0)));
  3168  0792  300D               	movlw	13
  3169  0793  00F9               	movwf	??_lcd_begin+1
  3170  0794  30FB               	movlw	251
  3171  0795  00F8               	movwf	??_lcd_begin
  3172  0796                     u4167:	
  3173  0796  0BF8               	decfsz	??_lcd_begin,f
  3174  0797  2F96               	goto	u4167
  3175  0798  0BF9               	decfsz	??_lcd_begin+1,f
  3176  0799  2F96               	goto	u4167
  3177  079A  2F9B               	nop2
  3178                           
  3179                           ;lcd44780.c: 493: LCD_mode = 0x02 | 0x00;
  3180  079B  3002               	movlw	2
  3181  079C  1683               	bsf	3,5	;RP0=1, select bank3
  3182  079D  1703               	bsf	3,6	;RP1=1, select bank3
  3183  079E  00A1               	movwf	_LCD_mode^(0+384)
  3184                           
  3185                           ;lcd44780.c: 495: lcd_command(0x04 | LCD_mode);
  3186  079F  3804               	iorlw	4
  3187  07A0  120A  158A  2E26   	ljmp	_lcd_command
  3188  07A3                     __end_of_lcd_begin:	
  3189  07A3                     __ptext48:	
  3190 ;; *************** function _lcd_write4bits *****************
  3191 ;; Defined at:
  3192 ;;		line 57 in file "../../../lib/lcd44780.c"
  3193 ;; Parameters:    Size  Location     Type
  3194 ;;  value           1    wreg     unsigned char 
  3195 ;; Auto vars:     Size  Location     Type
  3196 ;;  value           1    3[COMMON] unsigned char 
  3197 ;; Return value:  Size  Location     Type
  3198 ;;		None               void
  3199 ;; Registers used:
  3200 ;;		wreg
  3201 ;; Tracked objects:
  3202 ;;		On entry : 0/0
  3203 ;;		On exit  : 0/0
  3204 ;;		Unchanged: 0/0
  3205 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3206 ;;      Params:         0       0       0       0       0
  3207 ;;      Locals:         1       0       0       0       0
  3208 ;;      Temps:          1       0       0       0       0
  3209 ;;      Totals:         2       0       0       0       0
  3210 ;;Total ram usage:        2 bytes
  3211 ;; Hardware stack levels used:    1
  3212 ;; Hardware stack levels required when called:    1
  3213 ;; This function calls:
  3214 ;;		Nothing
  3215 ;; This function is called by:
  3216 ;;		_lcd_send
  3217 ;;		_lcd_begin
  3218 ;; This function uses a non-reentrant model
  3219 ;;
  3220                           
  3221                           
  3222                           ;psect for function _lcd_write4bits
  3223  07A3                     _lcd_write4bits:	
  3224                           
  3225                           ;incstack = 0
  3226                           ; Regs used in _lcd_write4bits: [wreg]
  3227                           ;lcd_write4bits@value stored from wreg
  3228  07A3  00F3               	movwf	lcd_write4bits@value
  3229                           
  3230                           ;lcd44780.c: 62: RB4 = value & 1;
  3231  07A4  1C73               	btfss	lcd_write4bits@value,0
  3232  07A5  2FAA               	goto	u2990
  3233  07A6  1283               	bcf	3,5	;RP0=0, select bank0
  3234  07A7  1303               	bcf	3,6	;RP1=0, select bank0
  3235  07A8  1606               	bsf	6,4	;volatile
  3236  07A9  2FAD               	goto	u3004
  3237  07AA                     u2990:	
  3238  07AA  1283               	bcf	3,5	;RP0=0, select bank0
  3239  07AB  1303               	bcf	3,6	;RP1=0, select bank0
  3240  07AC  1206               	bcf	6,4	;volatile
  3241  07AD                     u3004:	
  3242                           
  3243                           ;lcd44780.c: 63: value >>= 1;
  3244  07AD  1003               	clrc
  3245  07AE  0CF3               	rrf	lcd_write4bits@value,f
  3246                           
  3247                           ;lcd44780.c: 64: RB5 = value & 1;
  3248  07AF  1C73               	btfss	lcd_write4bits@value,0
  3249  07B0  2FB5               	goto	u3010
  3250  07B1  1283               	bcf	3,5	;RP0=0, select bank0
  3251  07B2  1303               	bcf	3,6	;RP1=0, select bank0
  3252  07B3  1686               	bsf	6,5	;volatile
  3253  07B4  2FB8               	goto	u3024
  3254  07B5                     u3010:	
  3255  07B5  1283               	bcf	3,5	;RP0=0, select bank0
  3256  07B6  1303               	bcf	3,6	;RP1=0, select bank0
  3257  07B7  1286               	bcf	6,5	;volatile
  3258  07B8                     u3024:	
  3259                           
  3260                           ;lcd44780.c: 65: value >>= 1;
  3261  07B8  1003               	clrc
  3262  07B9  0CF3               	rrf	lcd_write4bits@value,f
  3263                           
  3264                           ;lcd44780.c: 66: RB6 = value & 1;
  3265  07BA  1C73               	btfss	lcd_write4bits@value,0
  3266  07BB  2FC0               	goto	u3030
  3267  07BC  1283               	bcf	3,5	;RP0=0, select bank0
  3268  07BD  1303               	bcf	3,6	;RP1=0, select bank0
  3269  07BE  1706               	bsf	6,6	;volatile
  3270  07BF  2FC3               	goto	u3044
  3271  07C0                     u3030:	
  3272  07C0  1283               	bcf	3,5	;RP0=0, select bank0
  3273  07C1  1303               	bcf	3,6	;RP1=0, select bank0
  3274  07C2  1306               	bcf	6,6	;volatile
  3275  07C3                     u3044:	
  3276                           
  3277                           ;lcd44780.c: 67: value >>= 1;
  3278  07C3  1003               	clrc
  3279  07C4  0CF3               	rrf	lcd_write4bits@value,f
  3280                           
  3281                           ;lcd44780.c: 68: RB7 = value & 1;
  3282  07C5  1C73               	btfss	lcd_write4bits@value,0
  3283  07C6  2FCB               	goto	u3050
  3284  07C7  1283               	bcf	3,5	;RP0=0, select bank0
  3285  07C8  1303               	bcf	3,6	;RP1=0, select bank0
  3286  07C9  1786               	bsf	6,7	;volatile
  3287  07CA  2FCE               	goto	u3064
  3288  07CB                     u3050:	
  3289  07CB  1283               	bcf	3,5	;RP0=0, select bank0
  3290  07CC  1303               	bcf	3,6	;RP1=0, select bank0
  3291  07CD  1386               	bcf	6,7	;volatile
  3292  07CE                     u3064:	
  3293                           
  3294                           ;lcd44780.c: 74: RB3 = 1; _delay((unsigned long)((4)*(20000000/4000000.0))); RB3 = 0; _d
      +                          elay((unsigned long)((100)*(20000000/4000000.0)));;
  3295  07CE  1586               	bsf	6,3	;volatile
  3296  07CF  3006               	movlw	6
  3297  07D0  00F2               	movwf	??_lcd_write4bits
  3298  07D1                     u4297:	
  3299  07D1  0BF2               	decfsz	??_lcd_write4bits,f
  3300  07D2  2FD1               	goto	u4297
  3301  07D3  0000               	nop
  3302  07D4  1283               	bcf	3,5	;RP0=0, select bank0
  3303  07D5  1303               	bcf	3,6	;RP1=0, select bank0
  3304  07D6  1186               	bcf	6,3	;volatile
  3305  07D7  30A6               	movlw	166
  3306  07D8  00F2               	movwf	??_lcd_write4bits
  3307  07D9                     u4307:	
  3308  07D9  0BF2               	decfsz	??_lcd_write4bits,f
  3309  07DA  2FD9               	goto	u4307
  3310  07DB  0000               	nop
  3311  07DC  0008               	return
  3312  07DD                     __end_of_lcd_write4bits:	
  3313                           
  3314                           	psect	text11
  3315  1F18                     __ptext11:	
  3316 ;; *************** function _indicator *****************
  3317 ;; Defined at:
  3318 ;;		line 472 in file "../../../src/print.c"
  3319 ;; Parameters:    Size  Location     Type
  3320 ;;  indicate        1    wreg     unsigned char 
  3321 ;; Auto vars:     Size  Location     Type
  3322 ;;  indicate        1    5[BANK0 ] unsigned char 
  3323 ;; Return value:  Size  Location     Type
  3324 ;;		None               void
  3325 ;; Registers used:
  3326 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3327 ;; Tracked objects:
  3328 ;;		On entry : 0/0
  3329 ;;		On exit  : 0/0
  3330 ;;		Unchanged: 0/0
  3331 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3332 ;;      Params:         0       0       0       0       0
  3333 ;;      Locals:         0       1       0       0       0
  3334 ;;      Temps:          0       0       0       0       0
  3335 ;;      Totals:         0       1       0       0       0
  3336 ;;Total ram usage:        1 bytes
  3337 ;; Hardware stack levels used:    1
  3338 ;; Hardware stack levels required when called:    5
  3339 ;; This function calls:
  3340 ;;		_lcd_gotoxy
  3341 ;;		_lcd_puts
  3342 ;; This function is called by:
  3343 ;;		_main
  3344 ;; This function uses a non-reentrant model
  3345 ;;
  3346                           
  3347                           
  3348                           ;psect for function _indicator
  3349  1F18                     _indicator:	
  3350                           
  3351                           ;incstack = 0
  3352                           ; Regs used in _indicator: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3353                           ;indicator@indicate stored from wreg
  3354  1F18  1283               	bcf	3,5	;RP0=0, select bank0
  3355  1F19  1303               	bcf	3,6	;RP1=0, select bank0
  3356  1F1A  00A6               	movwf	indicator@indicate
  3357  1F1B  3000               	movlw	0
  3358                           
  3359                           ;print.c: 486: lcd_gotoxy(0, 1);
  3360  1F1C  01F7               	clrf	lcd_gotoxy@row
  3361  1F1D  0AF7               	incf	lcd_gotoxy@row,f
  3362  1F1E  120A  158A  25AC  160A  158A  	fcall	_lcd_gotoxy
  3363                           
  3364                           ;print.c: 487: if(indicate) {
  3365  1F23  1283               	bcf	3,5	;RP0=0, select bank0
  3366  1F24  1303               	bcf	3,6	;RP1=0, select bank0
  3367  1F25  0826               	movf	indicator@indicate,w
  3368  1F26  1903               	btfsc	3,2
  3369  1F27  2F2C               	goto	l4077
  3370                           
  3371                           ;print.c: 488: lcd_puts("-*-");
  3372  1F28  30A1               	movlw	(low ((STR_11-__stringbase)| (0+32768)))& (0+255)
  3373  1F29  120A  158A  2FE5   	ljmp	_lcd_puts
  3374  1F2C                     l4077:	
  3375                           ;print.c: 489: } else {
  3376                           
  3377                           
  3378                           ;print.c: 490: lcd_puts("   ");
  3379  1F2C  308C               	movlw	(low (((STR_15+3)-__stringbase)| (0+32768)))& (0+255)
  3380  1F2D  120A  158A  2FE5   	ljmp	_lcd_puts
  3381  1F30                     __end_of_indicator:	
  3382                           
  3383                           	psect	text13
  3384  0339                     __ptext13:	
  3385 ;; *************** function _format_double *****************
  3386 ;; Defined at:
  3387 ;;		line 74 in file "../../../lib/format.c"
  3388 ;; Parameters:    Size  Location     Type
  3389 ;;  num             4    0[BANK3 ] unsigned char 
  3390 ;; Auto vars:     Size  Location     Type
  3391 ;;  weight          4   12[BANK3 ] unsigned char 
  3392 ;;  m               2   18[BANK3 ] short 
  3393 ;;  digit           2   16[BANK3 ] short 
  3394 ;; Return value:  Size  Location     Type
  3395 ;;		None               void
  3396 ;; Registers used:
  3397 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3398 ;; Tracked objects:
  3399 ;;		On entry : 300/300
  3400 ;;		On exit  : 0/0
  3401 ;;		Unchanged: 0/0
  3402 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3403 ;;      Params:         0       0       0       4       0
  3404 ;;      Locals:         0       0       0      16       0
  3405 ;;      Temps:          0       0       0       0       0
  3406 ;;      Totals:         0       0       0      20       0
  3407 ;;Total ram usage:       20 bytes
  3408 ;; Hardware stack levels used:    1
  3409 ;; Hardware stack levels required when called:    6
  3410 ;; This function calls:
  3411 ;;		___awtofl
  3412 ;;		___fldiv
  3413 ;;		___flge
  3414 ;;		___flmul
  3415 ;;		___flsub
  3416 ;;		___fltol
  3417 ;;		_floor
  3418 ;;		_format_putchar
  3419 ;;		_lcd_putch
  3420 ;;		_log10
  3421 ;;		_output_putch
  3422 ;;		_pow
  3423 ;; This function is called by:
  3424 ;;		_main
  3425 ;; This function uses a non-reentrant model
  3426 ;;
  3427                           
  3428                           
  3429                           ;psect for function _format_double
  3430  0339                     _format_double:	
  3431                           
  3432                           ;format.c: 75: short m = (short)log10(num);
  3433                           
  3434                           ;incstack = 0
  3435                           ; Regs used in _format_double: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3436  0339  0837               	movf	(format_double@num+3)^(0+384),w
  3437  033A  1303               	bcf	3,6	;RP1=0, select bank1
  3438  033B  00A3               	movwf	(log10@x+3)^(0+128)
  3439  033C  1703               	bsf	3,6	;RP1=1, select bank3
  3440  033D  0836               	movf	(format_double@num+2)^(0+384),w
  3441  033E  1303               	bcf	3,6	;RP1=0, select bank1
  3442  033F  00A2               	movwf	(log10@x+2)^(0+128)
  3443  0340  1703               	bsf	3,6	;RP1=1, select bank3
  3444  0341  0835               	movf	(format_double@num+1)^(0+384),w
  3445  0342  1303               	bcf	3,6	;RP1=0, select bank1
  3446  0343  00A1               	movwf	(log10@x+1)^(0+128)
  3447  0344  1703               	bsf	3,6	;RP1=1, select bank3
  3448  0345  0834               	movf	format_double@num^(0+384),w
  3449  0346  1303               	bcf	3,6	;RP1=0, select bank1
  3450  0347  00A0               	movwf	log10@x^(0+128)
  3451  0348  24C0               	fcall	_log10
  3452  0349  0823               	movf	(?_log10+3)^(0+128),w
  3453  034A  00AB               	movwf	(___fltol@f1+3)^(0+128)
  3454  034B  0822               	movf	(?_log10+2)^(0+128),w
  3455  034C  00AA               	movwf	(___fltol@f1+2)^(0+128)
  3456  034D  0821               	movf	(?_log10+1)^(0+128),w
  3457  034E  00A9               	movwf	(___fltol@f1+1)^(0+128)
  3458  034F  0820               	movf	?_log10^(0+128),w
  3459  0350  00A8               	movwf	___fltol@f1^(0+128)
  3460  0351  160A  118A  27A9  120A  118A  	fcall	___fltol
  3461  0356  0829               	movf	(?___fltol^(0+128)+1),w
  3462  0357  1703               	bsf	3,6	;RP1=1, select bank3
  3463  0358  00C7               	movwf	(format_double@m+1)^(0+384)
  3464  0359  1303               	bcf	3,6	;RP1=0, select bank1
  3465  035A  0828               	movf	?___fltol^(0+128),w
  3466  035B  1703               	bsf	3,6	;RP1=1, select bank3
  3467  035C  00C6               	movwf	format_double@m^(0+384)
  3468  035D                     l4139:	
  3469                           ;format.c: 76: short digit;
  3470                           ;format.c: 79: while(num > 0 + (sizeof(double) == sizeof(float) ? 3.05176e-05 : 1.192092
      +                          90e-07)) {
  3471                           
  3472  035D  3038               	movlw	56
  3473  035E  00F5               	movwf	___flge@ff1+3
  3474  035F  3006               	movlw	6
  3475  0360  01F4               	clrf	___flge@ff1+2
  3476  0361  01F3               	clrf	___flge@ff1+1
  3477  0362  00F2               	movwf	___flge@ff1
  3478  0363  0837               	movf	(format_double@num+3)^(0+384),w
  3479  0364  00F9               	movwf	___flge@ff2+3
  3480  0365  0836               	movf	(format_double@num+2)^(0+384),w
  3481  0366  00F8               	movwf	___flge@ff2+2
  3482  0367  0835               	movf	(format_double@num+1)^(0+384),w
  3483  0368  00F7               	movwf	___flge@ff2+1
  3484  0369  0834               	movf	format_double@num^(0+384),w
  3485  036A  00F6               	movwf	___flge@ff2
  3486  036B  160A  118A  2679  120A  118A  	fcall	___flge
  3487  0370  1803               	btfsc	3,0
  3488  0371  0008               	return
  3489                           
  3490                           ;format.c: 80: double weight = pow(10.0l, m);
  3491  0372  1683               	bsf	3,5	;RP0=1, select bank3
  3492  0373  1703               	bsf	3,6	;RP1=1, select bank3
  3493  0374  0847               	movf	(format_double@m+1)^(0+384),w
  3494  0375  1283               	bcf	3,5	;RP0=0, select bank0
  3495  0376  1303               	bcf	3,6	;RP1=0, select bank0
  3496  0377  00A6               	movwf	___awtofl@c+1
  3497  0378  1683               	bsf	3,5	;RP0=1, select bank3
  3498  0379  1703               	bsf	3,6	;RP1=1, select bank3
  3499  037A  0846               	movf	format_double@m^(0+384),w
  3500  037B  1283               	bcf	3,5	;RP0=0, select bank0
  3501  037C  1303               	bcf	3,6	;RP1=0, select bank0
  3502  037D  00A5               	movwf	___awtofl@c
  3503  037E  120A  158A  2184  120A  118A  	fcall	___awtofl
  3504  0383  0828               	movf	?___awtofl+3,w
  3505  0384  1683               	bsf	3,5	;RP0=1, select bank3
  3506  0385  1703               	bsf	3,6	;RP1=1, select bank3
  3507  0386  00BB               	movwf	(_format_double$1046+3)^(0+384)
  3508  0387  1283               	bcf	3,5	;RP0=0, select bank0
  3509  0388  1303               	bcf	3,6	;RP1=0, select bank0
  3510  0389  0827               	movf	?___awtofl+2,w
  3511  038A  1683               	bsf	3,5	;RP0=1, select bank3
  3512  038B  1703               	bsf	3,6	;RP1=1, select bank3
  3513  038C  00BA               	movwf	(_format_double$1046+2)^(0+384)
  3514  038D  1283               	bcf	3,5	;RP0=0, select bank0
  3515  038E  1303               	bcf	3,6	;RP1=0, select bank0
  3516  038F  0826               	movf	?___awtofl+1,w
  3517  0390  1683               	bsf	3,5	;RP0=1, select bank3
  3518  0391  1703               	bsf	3,6	;RP1=1, select bank3
  3519  0392  00B9               	movwf	(_format_double$1046+1)^(0+384)
  3520  0393  1283               	bcf	3,5	;RP0=0, select bank0
  3521  0394  1303               	bcf	3,6	;RP1=0, select bank0
  3522  0395  0825               	movf	?___awtofl,w
  3523  0396  1683               	bsf	3,5	;RP0=1, select bank3
  3524  0397  1703               	bsf	3,6	;RP1=1, select bank3
  3525  0398  00B8               	movwf	_format_double$1046^(0+384)
  3526                           
  3527                           ;format.c: 80: double weight = pow(10.0l, m);
  3528  0399  3041               	movlw	65
  3529  039A  1303               	bcf	3,6	;RP1=0, select bank1
  3530  039B  00D3               	movwf	(pow@x+3)^(0+128)
  3531  039C  3020               	movlw	32
  3532  039D  00D2               	movwf	(pow@x+2)^(0+128)
  3533  039E  01D1               	clrf	(pow@x+1)^(0+128)
  3534  039F  01D0               	clrf	pow@x^(0+128)
  3535  03A0  1703               	bsf	3,6	;RP1=1, select bank3
  3536  03A1  083B               	movf	(_format_double$1046+3)^(0+384),w
  3537  03A2  1303               	bcf	3,6	;RP1=0, select bank1
  3538  03A3  00D7               	movwf	(pow@y+3)^(0+128)
  3539  03A4  1703               	bsf	3,6	;RP1=1, select bank3
  3540  03A5  083A               	movf	(_format_double$1046+2)^(0+384),w
  3541  03A6  1303               	bcf	3,6	;RP1=0, select bank1
  3542  03A7  00D6               	movwf	(pow@y+2)^(0+128)
  3543  03A8  1703               	bsf	3,6	;RP1=1, select bank3
  3544  03A9  0839               	movf	(_format_double$1046+1)^(0+384),w
  3545  03AA  1303               	bcf	3,6	;RP1=0, select bank1
  3546  03AB  00D5               	movwf	(pow@y+1)^(0+128)
  3547  03AC  1703               	bsf	3,6	;RP1=1, select bank3
  3548  03AD  0838               	movf	_format_double$1046^(0+384),w
  3549  03AE  1303               	bcf	3,6	;RP1=0, select bank1
  3550  03AF  00D4               	movwf	pow@y^(0+128)
  3551  03B0  25C7  120A  118A   	fcall	_pow
  3552  03B3  0853               	movf	(?_pow+3)^(0+128),w
  3553  03B4  1703               	bsf	3,6	;RP1=1, select bank3
  3554  03B5  00C3               	movwf	(format_double@weight+3)^(0+384)
  3555  03B6  1303               	bcf	3,6	;RP1=0, select bank1
  3556  03B7  0852               	movf	(?_pow+2)^(0+128),w
  3557  03B8  1703               	bsf	3,6	;RP1=1, select bank3
  3558  03B9  00C2               	movwf	(format_double@weight+2)^(0+384)
  3559  03BA  1303               	bcf	3,6	;RP1=0, select bank1
  3560  03BB  0851               	movf	(?_pow+1)^(0+128),w
  3561  03BC  1703               	bsf	3,6	;RP1=1, select bank3
  3562  03BD  00C1               	movwf	(format_double@weight+1)^(0+384)
  3563  03BE  1303               	bcf	3,6	;RP1=0, select bank1
  3564  03BF  0850               	movf	?_pow^(0+128),w
  3565  03C0  1703               	bsf	3,6	;RP1=1, select bank3
  3566  03C1  00C0               	movwf	format_double@weight^(0+384)
  3567                           
  3568                           ;format.c: 81: digit = (short)floor(num / weight);
  3569  03C2  0837               	movf	(format_double@num+3)^(0+384),w
  3570  03C3  1283               	bcf	3,5	;RP0=0, select bank0
  3571  03C4  1303               	bcf	3,6	;RP1=0, select bank0
  3572  03C5  00AC               	movwf	___fldiv@f1+3
  3573  03C6  1683               	bsf	3,5	;RP0=1, select bank3
  3574  03C7  1703               	bsf	3,6	;RP1=1, select bank3
  3575  03C8  0836               	movf	(format_double@num+2)^(0+384),w
  3576  03C9  1283               	bcf	3,5	;RP0=0, select bank0
  3577  03CA  1303               	bcf	3,6	;RP1=0, select bank0
  3578  03CB  00AB               	movwf	___fldiv@f1+2
  3579  03CC  1683               	bsf	3,5	;RP0=1, select bank3
  3580  03CD  1703               	bsf	3,6	;RP1=1, select bank3
  3581  03CE  0835               	movf	(format_double@num+1)^(0+384),w
  3582  03CF  1283               	bcf	3,5	;RP0=0, select bank0
  3583  03D0  1303               	bcf	3,6	;RP1=0, select bank0
  3584  03D1  00AA               	movwf	___fldiv@f1+1
  3585  03D2  1683               	bsf	3,5	;RP0=1, select bank3
  3586  03D3  1703               	bsf	3,6	;RP1=1, select bank3
  3587  03D4  0834               	movf	format_double@num^(0+384),w
  3588  03D5  1283               	bcf	3,5	;RP0=0, select bank0
  3589  03D6  1303               	bcf	3,6	;RP1=0, select bank0
  3590  03D7  00A9               	movwf	___fldiv@f1
  3591  03D8  1683               	bsf	3,5	;RP0=1, select bank3
  3592  03D9  1703               	bsf	3,6	;RP1=1, select bank3
  3593  03DA  0843               	movf	(format_double@weight+3)^(0+384),w
  3594  03DB  1283               	bcf	3,5	;RP0=0, select bank0
  3595  03DC  1303               	bcf	3,6	;RP1=0, select bank0
  3596  03DD  00A8               	movwf	___fldiv@f2+3
  3597  03DE  1683               	bsf	3,5	;RP0=1, select bank3
  3598  03DF  1703               	bsf	3,6	;RP1=1, select bank3
  3599  03E0  0842               	movf	(format_double@weight+2)^(0+384),w
  3600  03E1  1283               	bcf	3,5	;RP0=0, select bank0
  3601  03E2  1303               	bcf	3,6	;RP1=0, select bank0
  3602  03E3  00A7               	movwf	___fldiv@f2+2
  3603  03E4  1683               	bsf	3,5	;RP0=1, select bank3
  3604  03E5  1703               	bsf	3,6	;RP1=1, select bank3
  3605  03E6  0841               	movf	(format_double@weight+1)^(0+384),w
  3606  03E7  1283               	bcf	3,5	;RP0=0, select bank0
  3607  03E8  1303               	bcf	3,6	;RP1=0, select bank0
  3608  03E9  00A6               	movwf	___fldiv@f2+1
  3609  03EA  1683               	bsf	3,5	;RP0=1, select bank3
  3610  03EB  1703               	bsf	3,6	;RP1=1, select bank3
  3611  03EC  0840               	movf	format_double@weight^(0+384),w
  3612  03ED  1283               	bcf	3,5	;RP0=0, select bank0
  3613  03EE  1303               	bcf	3,6	;RP1=0, select bank0
  3614  03EF  00A5               	movwf	___fldiv@f2
  3615  03F0  120A  158A  24CE  120A  118A  	fcall	___fldiv
  3616  03F5  0828               	movf	?___fldiv+3,w
  3617  03F6  1683               	bsf	3,5	;RP0=1, select bank1
  3618  03F7  00BA               	movwf	(floor@x+3)^(0+128)
  3619  03F8  1283               	bcf	3,5	;RP0=0, select bank0
  3620  03F9  0827               	movf	?___fldiv+2,w
  3621  03FA  1683               	bsf	3,5	;RP0=1, select bank1
  3622  03FB  00B9               	movwf	(floor@x+2)^(0+128)
  3623  03FC  1283               	bcf	3,5	;RP0=0, select bank0
  3624  03FD  0826               	movf	?___fldiv+1,w
  3625  03FE  1683               	bsf	3,5	;RP0=1, select bank1
  3626  03FF  00B8               	movwf	(floor@x+1)^(0+128)
  3627  0400  1283               	bcf	3,5	;RP0=0, select bank0
  3628  0401  0825               	movf	?___fldiv,w
  3629  0402  1683               	bsf	3,5	;RP0=1, select bank1
  3630  0403  00B7               	movwf	floor@x^(0+128)
  3631  0404  120A  158A  21A2  120A  118A  	fcall	_floor
  3632  0409  083A               	movf	(?_floor+3)^(0+128),w
  3633  040A  1703               	bsf	3,6	;RP1=1, select bank3
  3634  040B  00BF               	movwf	(_format_double$1047+3)^(0+384)
  3635  040C  1303               	bcf	3,6	;RP1=0, select bank1
  3636  040D  0839               	movf	(?_floor+2)^(0+128),w
  3637  040E  1703               	bsf	3,6	;RP1=1, select bank3
  3638  040F  00BE               	movwf	(_format_double$1047+2)^(0+384)
  3639  0410  1303               	bcf	3,6	;RP1=0, select bank1
  3640  0411  0838               	movf	(?_floor+1)^(0+128),w
  3641  0412  1703               	bsf	3,6	;RP1=1, select bank3
  3642  0413  00BD               	movwf	(_format_double$1047+1)^(0+384)
  3643  0414  1303               	bcf	3,6	;RP1=0, select bank1
  3644  0415  0837               	movf	?_floor^(0+128),w
  3645  0416  1703               	bsf	3,6	;RP1=1, select bank3
  3646  0417  00BC               	movwf	_format_double$1047^(0+384)
  3647                           
  3648                           ;format.c: 81: digit = (short)floor(num / weight);
  3649  0418  083F               	movf	(_format_double$1047+3)^(0+384),w
  3650  0419  1303               	bcf	3,6	;RP1=0, select bank1
  3651  041A  00AB               	movwf	(___fltol@f1+3)^(0+128)
  3652  041B  1703               	bsf	3,6	;RP1=1, select bank3
  3653  041C  083E               	movf	(_format_double$1047+2)^(0+384),w
  3654  041D  1303               	bcf	3,6	;RP1=0, select bank1
  3655  041E  00AA               	movwf	(___fltol@f1+2)^(0+128)
  3656  041F  1703               	bsf	3,6	;RP1=1, select bank3
  3657  0420  083D               	movf	(_format_double$1047+1)^(0+384),w
  3658  0421  1303               	bcf	3,6	;RP1=0, select bank1
  3659  0422  00A9               	movwf	(___fltol@f1+1)^(0+128)
  3660  0423  1703               	bsf	3,6	;RP1=1, select bank3
  3661  0424  083C               	movf	_format_double$1047^(0+384),w
  3662  0425  1303               	bcf	3,6	;RP1=0, select bank1
  3663  0426  00A8               	movwf	___fltol@f1^(0+128)
  3664  0427  160A  118A  27A9  120A  118A  	fcall	___fltol
  3665  042C  0829               	movf	(?___fltol^(0+128)+1),w
  3666  042D  1703               	bsf	3,6	;RP1=1, select bank3
  3667  042E  00C5               	movwf	(format_double@digit+1)^(0+384)
  3668  042F  1303               	bcf	3,6	;RP1=0, select bank1
  3669  0430  0828               	movf	?___fltol^(0+128),w
  3670  0431  1703               	bsf	3,6	;RP1=1, select bank3
  3671  0432  00C4               	movwf	format_double@digit^(0+384)
  3672                           
  3673                           ;format.c: 82: num -= (digit * weight);
  3674  0433  0845               	movf	(format_double@digit+1)^(0+384),w
  3675  0434  1283               	bcf	3,5	;RP0=0, select bank0
  3676  0435  1303               	bcf	3,6	;RP1=0, select bank0
  3677  0436  00A6               	movwf	___awtofl@c+1
  3678  0437  1683               	bsf	3,5	;RP0=1, select bank3
  3679  0438  1703               	bsf	3,6	;RP1=1, select bank3
  3680  0439  0844               	movf	format_double@digit^(0+384),w
  3681  043A  1283               	bcf	3,5	;RP0=0, select bank0
  3682  043B  1303               	bcf	3,6	;RP1=0, select bank0
  3683  043C  00A5               	movwf	___awtofl@c
  3684  043D  120A  158A  2184  120A  118A  	fcall	___awtofl
  3685  0442  0828               	movf	?___awtofl+3,w
  3686  0443  00BF               	movwf	___flmul@f2+3
  3687  0444  0827               	movf	?___awtofl+2,w
  3688  0445  00BE               	movwf	___flmul@f2+2
  3689  0446  0826               	movf	?___awtofl+1,w
  3690  0447  00BD               	movwf	___flmul@f2+1
  3691  0448  0825               	movf	?___awtofl,w
  3692  0449  00BC               	movwf	___flmul@f2
  3693  044A  1683               	bsf	3,5	;RP0=1, select bank3
  3694  044B  1703               	bsf	3,6	;RP1=1, select bank3
  3695  044C  0843               	movf	(format_double@weight+3)^(0+384),w
  3696  044D  1283               	bcf	3,5	;RP0=0, select bank0
  3697  044E  1303               	bcf	3,6	;RP1=0, select bank0
  3698  044F  00BB               	movwf	___flmul@f1+3
  3699  0450  1683               	bsf	3,5	;RP0=1, select bank3
  3700  0451  1703               	bsf	3,6	;RP1=1, select bank3
  3701  0452  0842               	movf	(format_double@weight+2)^(0+384),w
  3702  0453  1283               	bcf	3,5	;RP0=0, select bank0
  3703  0454  1303               	bcf	3,6	;RP1=0, select bank0
  3704  0455  00BA               	movwf	___flmul@f1+2
  3705  0456  1683               	bsf	3,5	;RP0=1, select bank3
  3706  0457  1703               	bsf	3,6	;RP1=1, select bank3
  3707  0458  0841               	movf	(format_double@weight+1)^(0+384),w
  3708  0459  1283               	bcf	3,5	;RP0=0, select bank0
  3709  045A  1303               	bcf	3,6	;RP1=0, select bank0
  3710  045B  00B9               	movwf	___flmul@f1+1
  3711  045C  1683               	bsf	3,5	;RP0=1, select bank3
  3712  045D  1703               	bsf	3,6	;RP1=1, select bank3
  3713  045E  0840               	movf	format_double@weight^(0+384),w
  3714  045F  1283               	bcf	3,5	;RP0=0, select bank0
  3715  0460  1303               	bcf	3,6	;RP1=0, select bank0
  3716  0461  00B8               	movwf	___flmul@f1
  3717  0462  160A  118A  25E0  120A  118A  	fcall	___flmul
  3718  0467  083B               	movf	?___flmul+3,w
  3719  0468  00DD               	movwf	___flsub@f2+3
  3720  0469  083A               	movf	?___flmul+2,w
  3721  046A  00DC               	movwf	___flsub@f2+2
  3722  046B  0839               	movf	?___flmul+1,w
  3723  046C  00DB               	movwf	___flsub@f2+1
  3724  046D  0838               	movf	?___flmul,w
  3725  046E  00DA               	movwf	___flsub@f2
  3726  046F  1683               	bsf	3,5	;RP0=1, select bank3
  3727  0470  1703               	bsf	3,6	;RP1=1, select bank3
  3728  0471  0837               	movf	(format_double@num+3)^(0+384),w
  3729  0472  1283               	bcf	3,5	;RP0=0, select bank0
  3730  0473  1303               	bcf	3,6	;RP1=0, select bank0
  3731  0474  00E1               	movwf	___flsub@f1+3
  3732  0475  1683               	bsf	3,5	;RP0=1, select bank3
  3733  0476  1703               	bsf	3,6	;RP1=1, select bank3
  3734  0477  0836               	movf	(format_double@num+2)^(0+384),w
  3735  0478  1283               	bcf	3,5	;RP0=0, select bank0
  3736  0479  1303               	bcf	3,6	;RP1=0, select bank0
  3737  047A  00E0               	movwf	___flsub@f1+2
  3738  047B  1683               	bsf	3,5	;RP0=1, select bank3
  3739  047C  1703               	bsf	3,6	;RP1=1, select bank3
  3740  047D  0835               	movf	(format_double@num+1)^(0+384),w
  3741  047E  1283               	bcf	3,5	;RP0=0, select bank0
  3742  047F  1303               	bcf	3,6	;RP1=0, select bank0
  3743  0480  00DF               	movwf	___flsub@f1+1
  3744  0481  1683               	bsf	3,5	;RP0=1, select bank3
  3745  0482  1703               	bsf	3,6	;RP1=1, select bank3
  3746  0483  0834               	movf	format_double@num^(0+384),w
  3747  0484  1283               	bcf	3,5	;RP0=0, select bank0
  3748  0485  1303               	bcf	3,6	;RP1=0, select bank0
  3749  0486  00DE               	movwf	___flsub@f1
  3750  0487  120A  158A  2602  120A  118A  	fcall	___flsub
  3751  048C  085D               	movf	?___flsub+3,w
  3752  048D  1683               	bsf	3,5	;RP0=1, select bank3
  3753  048E  1703               	bsf	3,6	;RP1=1, select bank3
  3754  048F  00B7               	movwf	(format_double@num+3)^(0+384)
  3755  0490  1283               	bcf	3,5	;RP0=0, select bank0
  3756  0491  1303               	bcf	3,6	;RP1=0, select bank0
  3757  0492  085C               	movf	?___flsub+2,w
  3758  0493  1683               	bsf	3,5	;RP0=1, select bank3
  3759  0494  1703               	bsf	3,6	;RP1=1, select bank3
  3760  0495  00B6               	movwf	(format_double@num+2)^(0+384)
  3761  0496  1283               	bcf	3,5	;RP0=0, select bank0
  3762  0497  1303               	bcf	3,6	;RP1=0, select bank0
  3763  0498  085B               	movf	?___flsub+1,w
  3764  0499  1683               	bsf	3,5	;RP0=1, select bank3
  3765  049A  1703               	bsf	3,6	;RP1=1, select bank3
  3766  049B  00B5               	movwf	(format_double@num+1)^(0+384)
  3767  049C  1283               	bcf	3,5	;RP0=0, select bank0
  3768  049D  1303               	bcf	3,6	;RP1=0, select bank0
  3769  049E  085A               	movf	?___flsub,w
  3770  049F  1683               	bsf	3,5	;RP0=1, select bank3
  3771  04A0  1703               	bsf	3,6	;RP1=1, select bank3
  3772  04A1  00B4               	movwf	format_double@num^(0+384)
  3773                           
  3774                           ;format.c: 83: putchar_ptr((char)('0' + digit));
  3775  04A2  0844               	movf	format_double@digit^(0+384),w
  3776  04A3  3E30               	addlw	48
  3777  04A4  00F7               	movwf	format_putchar@c
  3778  04A5  087B               	movf	_putchar_ptr,w
  3779  04A6  120A  118A  2700  120A  118A  	fcall	fptable
  3780                           
  3781                           ;format.c: 84: if(m == 0)
  3782  04AB  1683               	bsf	3,5	;RP0=1, select bank3
  3783  04AC  1703               	bsf	3,6	;RP1=1, select bank3
  3784  04AD  0846               	movf	format_double@m^(0+384),w
  3785  04AE  0447               	iorwf	(format_double@m+1)^(0+384),w
  3786  04AF  1D03               	btfss	3,2
  3787  04B0  2CB9               	goto	l4137
  3788                           
  3789                           ;format.c: 85: putchar_ptr('.');
  3790  04B1  302E               	movlw	46
  3791  04B2  00F7               	movwf	format_putchar@c
  3792  04B3  087B               	movf	_putchar_ptr,w
  3793  04B4  120A  118A  2700  120A  118A  	fcall	fptable
  3794  04B9                     l4137:	
  3795                           
  3796                           ;format.c: 86: m--;
  3797  04B9  30FF               	movlw	-1
  3798  04BA  1683               	bsf	3,5	;RP0=1, select bank3
  3799  04BB  1703               	bsf	3,6	;RP1=1, select bank3
  3800  04BC  07C6               	addwf	format_double@m^(0+384),f
  3801  04BD  1C03               	skipc
  3802  04BE  03C7               	decf	(format_double@m+1)^(0+384),f
  3803  04BF  2B5D               	goto	l4139
  3804  04C0                     __end_of_format_double:	
  3805  04C0                     __ptext24:	
  3806 ;; *************** function _log10 *****************
  3807 ;; Defined at:
  3808 ;;		line 39 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\log.c"
  3809 ;; Parameters:    Size  Location     Type
  3810 ;;  x               4    0[BANK1 ] unsigned long 
  3811 ;; Auto vars:     Size  Location     Type
  3812 ;;		None
  3813 ;; Return value:  Size  Location     Type
  3814 ;;                  4    0[BANK1 ] unsigned long 
  3815 ;; Registers used:
  3816 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3817 ;; Tracked objects:
  3818 ;;		On entry : 300/100
  3819 ;;		On exit  : 300/100
  3820 ;;		Unchanged: 0/0
  3821 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3822 ;;      Params:         0       0       4       0       0
  3823 ;;      Locals:         0       0       4       0       0
  3824 ;;      Temps:          0       0       0       0       0
  3825 ;;      Totals:         0       0       8       0       0
  3826 ;;Total ram usage:        8 bytes
  3827 ;; Hardware stack levels used:    1
  3828 ;; Hardware stack levels required when called:    5
  3829 ;; This function calls:
  3830 ;;		___flmul
  3831 ;;		_log
  3832 ;; This function is called by:
  3833 ;;		_format_double
  3834 ;; This function uses a non-reentrant model
  3835 ;;
  3836                           
  3837                           
  3838                           ;psect for function _log10
  3839  04C0                     _log10:	
  3840                           
  3841                           ;incstack = 0
  3842                           ; Regs used in _log10: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3843  04C0  0823               	movf	(log10@x+3)^(0+128),w
  3844  04C1  1283               	bcf	3,5	;RP0=0, select bank0
  3845  04C2  00ED               	movwf	log@x+3
  3846  04C3  1683               	bsf	3,5	;RP0=1, select bank1
  3847  04C4  0822               	movf	(log10@x+2)^(0+128),w
  3848  04C5  1283               	bcf	3,5	;RP0=0, select bank0
  3849  04C6  00EC               	movwf	log@x+2
  3850  04C7  1683               	bsf	3,5	;RP0=1, select bank1
  3851  04C8  0821               	movf	(log10@x+1)^(0+128),w
  3852  04C9  1283               	bcf	3,5	;RP0=0, select bank0
  3853  04CA  00EB               	movwf	log@x+1
  3854  04CB  1683               	bsf	3,5	;RP0=1, select bank1
  3855  04CC  0820               	movf	log10@x^(0+128),w
  3856  04CD  1283               	bcf	3,5	;RP0=0, select bank0
  3857  04CE  00EA               	movwf	log@x
  3858  04CF  250B               	fcall	_log
  3859  04D0  086D               	movf	?_log+3,w
  3860  04D1  1683               	bsf	3,5	;RP0=1, select bank1
  3861  04D2  00A7               	movwf	(_log10$1058+3)^(0+128)
  3862  04D3  1283               	bcf	3,5	;RP0=0, select bank0
  3863  04D4  086C               	movf	?_log+2,w
  3864  04D5  1683               	bsf	3,5	;RP0=1, select bank1
  3865  04D6  00A6               	movwf	(_log10$1058+2)^(0+128)
  3866  04D7  1283               	bcf	3,5	;RP0=0, select bank0
  3867  04D8  086B               	movf	?_log+1,w
  3868  04D9  1683               	bsf	3,5	;RP0=1, select bank1
  3869  04DA  00A5               	movwf	(_log10$1058+1)^(0+128)
  3870  04DB  1283               	bcf	3,5	;RP0=0, select bank0
  3871  04DC  086A               	movf	?_log,w
  3872  04DD  1683               	bsf	3,5	;RP0=1, select bank1
  3873  04DE  00A4               	movwf	_log10$1058^(0+128)
  3874  04DF  303E               	movlw	62
  3875  04E0  1283               	bcf	3,5	;RP0=0, select bank0
  3876  04E1  00BB               	movwf	___flmul@f1+3
  3877  04E2  30DE               	movlw	222
  3878  04E3  00BA               	movwf	___flmul@f1+2
  3879  04E4  305B               	movlw	91
  3880  04E5  00B9               	movwf	___flmul@f1+1
  3881  04E6  30D9               	movlw	217
  3882  04E7  00B8               	movwf	___flmul@f1
  3883  04E8  1683               	bsf	3,5	;RP0=1, select bank1
  3884  04E9  0827               	movf	(_log10$1058+3)^(0+128),w
  3885  04EA  1283               	bcf	3,5	;RP0=0, select bank0
  3886  04EB  00BF               	movwf	___flmul@f2+3
  3887  04EC  1683               	bsf	3,5	;RP0=1, select bank1
  3888  04ED  0826               	movf	(_log10$1058+2)^(0+128),w
  3889  04EE  1283               	bcf	3,5	;RP0=0, select bank0
  3890  04EF  00BE               	movwf	___flmul@f2+2
  3891  04F0  1683               	bsf	3,5	;RP0=1, select bank1
  3892  04F1  0825               	movf	(_log10$1058+1)^(0+128),w
  3893  04F2  1283               	bcf	3,5	;RP0=0, select bank0
  3894  04F3  00BD               	movwf	___flmul@f2+1
  3895  04F4  1683               	bsf	3,5	;RP0=1, select bank1
  3896  04F5  0824               	movf	_log10$1058^(0+128),w
  3897  04F6  1283               	bcf	3,5	;RP0=0, select bank0
  3898  04F7  00BC               	movwf	___flmul@f2
  3899  04F8  160A  118A  25E0   	fcall	___flmul
  3900  04FB  083B               	movf	?___flmul+3,w
  3901  04FC  1683               	bsf	3,5	;RP0=1, select bank1
  3902  04FD  00A3               	movwf	(?_log10+3)^(0+128)
  3903  04FE  1283               	bcf	3,5	;RP0=0, select bank0
  3904  04FF  083A               	movf	?___flmul+2,w
  3905  0500  1683               	bsf	3,5	;RP0=1, select bank1
  3906  0501  00A2               	movwf	(?_log10+2)^(0+128)
  3907  0502  1283               	bcf	3,5	;RP0=0, select bank0
  3908  0503  0839               	movf	?___flmul+1,w
  3909  0504  1683               	bsf	3,5	;RP0=1, select bank1
  3910  0505  00A1               	movwf	(?_log10+1)^(0+128)
  3911  0506  1283               	bcf	3,5	;RP0=0, select bank0
  3912  0507  0838               	movf	?___flmul,w
  3913  0508  1683               	bsf	3,5	;RP0=1, select bank1
  3914  0509  00A0               	movwf	?_log10^(0+128)
  3915  050A  0008               	return
  3916  050B                     __end_of_log10:	
  3917  050B                     __ptext25:	
  3918 ;; *************** function _log *****************
  3919 ;; Defined at:
  3920 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\log.c"
  3921 ;; Parameters:    Size  Location     Type
  3922 ;;  x               4   73[BANK0 ] unsigned long 
  3923 ;; Auto vars:     Size  Location     Type
  3924 ;;  exponent        2   77[BANK0 ] int 
  3925 ;; Return value:  Size  Location     Type
  3926 ;;                  4   73[BANK0 ] int 
  3927 ;; Registers used:
  3928 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3929 ;; Tracked objects:
  3930 ;;		On entry : 300/0
  3931 ;;		On exit  : 300/0
  3932 ;;		Unchanged: 0/0
  3933 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3934 ;;      Params:         0       4       0       0       0
  3935 ;;      Locals:         0       2       0       0       0
  3936 ;;      Temps:          0       0       0       0       0
  3937 ;;      Totals:         0       6       0       0       0
  3938 ;;Total ram usage:        6 bytes
  3939 ;; Hardware stack levels used:    1
  3940 ;; Hardware stack levels required when called:    4
  3941 ;; This function calls:
  3942 ;;		___awtofl
  3943 ;;		___fladd
  3944 ;;		___flge
  3945 ;;		___flmul
  3946 ;;		_eval_poly
  3947 ;;		_frexp
  3948 ;; This function is called by:
  3949 ;;		_log10
  3950 ;;		_pow
  3951 ;; This function uses a non-reentrant model
  3952 ;;
  3953                           
  3954                           
  3955                           ;psect for function _log
  3956  050B                     _log:	
  3957                           
  3958                           ;incstack = 0
  3959                           ; Regs used in _log: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3960  050B  086D               	movf	log@x+3,w
  3961  050C  00F5               	movwf	___flge@ff1+3
  3962  050D  086C               	movf	log@x+2,w
  3963  050E  00F4               	movwf	___flge@ff1+2
  3964  050F  086B               	movf	log@x+1,w
  3965  0510  00F3               	movwf	___flge@ff1+1
  3966  0511  086A               	movf	log@x,w
  3967  0512  00F2               	movwf	___flge@ff1
  3968  0513  01F6               	clrf	___flge@ff2
  3969  0514  01F7               	clrf	___flge@ff2+1
  3970  0515  01F8               	clrf	___flge@ff2+2
  3971  0516  01F9               	clrf	___flge@ff2+3
  3972  0517  160A  118A  2679  120A  118A  	fcall	___flge
  3973  051C  1803               	btfsc	3,0
  3974  051D  2D25               	goto	l3905
  3975  051E  1283               	bcf	3,5	;RP0=0, select bank0
  3976  051F  1303               	bcf	3,6	;RP1=0, select bank0
  3977  0520  01EA               	clrf	?_log
  3978  0521  01EB               	clrf	?_log+1
  3979  0522  01EC               	clrf	?_log+2
  3980  0523  01ED               	clrf	?_log+3
  3981  0524  0008               	return
  3982  0525                     l3905:	
  3983  0525  1283               	bcf	3,5	;RP0=0, select bank0
  3984  0526  1303               	bcf	3,6	;RP1=0, select bank0
  3985  0527  086D               	movf	log@x+3,w
  3986  0528  046C               	iorwf	log@x+2,w
  3987  0529  046B               	iorwf	log@x+1,w
  3988  052A  046A               	iorwf	log@x,w
  3989  052B  1D03               	skipz
  3990  052C  2D32               	goto	l3909
  3991  052D  01EA               	clrf	?_log
  3992  052E  01EB               	clrf	?_log+1
  3993  052F  01EC               	clrf	?_log+2
  3994  0530  01ED               	clrf	?_log+3
  3995  0531  0008               	return
  3996  0532                     l3909:	
  3997  0532  30BF               	movlw	191
  3998  0533  00CE               	movwf	___fladd@f1+3
  3999  0534  3080               	movlw	128
  4000  0535  00CD               	movwf	___fladd@f1+2
  4001  0536  3040               	movlw	64
  4002  0537  01CC               	clrf	___fladd@f1+1
  4003  0538  01CB               	clrf	___fladd@f1
  4004  0539  00BB               	movwf	___flmul@f1+3
  4005  053A  306E               	movlw	(low (log@exponent| 0))& (0+255)
  4006  053B  01BA               	clrf	___flmul@f1+2
  4007  053C  01B9               	clrf	___flmul@f1+1
  4008  053D  01B8               	clrf	___flmul@f1
  4009  053E  00F6               	movwf	frexp@eptr
  4010  053F  086D               	movf	log@x+3,w
  4011  0540  00F5               	movwf	frexp@value+3
  4012  0541  086C               	movf	log@x+2,w
  4013  0542  00F4               	movwf	frexp@value+2
  4014  0543  086B               	movf	log@x+1,w
  4015  0544  00F3               	movwf	frexp@value+1
  4016  0545  086A               	movf	log@x,w
  4017  0546  00F2               	movwf	frexp@value
  4018  0547  120A  158A  2640  120A  118A  	fcall	_frexp
  4019  054C  0875               	movf	?_frexp+3,w
  4020  054D  1283               	bcf	3,5	;RP0=0, select bank0
  4021  054E  00BF               	movwf	___flmul@f2+3
  4022  054F  0874               	movf	?_frexp+2,w
  4023  0550  00BE               	movwf	___flmul@f2+2
  4024  0551  0873               	movf	?_frexp+1,w
  4025  0552  00BD               	movwf	___flmul@f2+1
  4026  0553  0872               	movf	?_frexp,w
  4027  0554  00BC               	movwf	___flmul@f2
  4028  0555  160A  118A  25E0  120A  118A  	fcall	___flmul
  4029  055A  083B               	movf	?___flmul+3,w
  4030  055B  00D2               	movwf	___fladd@f2+3
  4031  055C  083A               	movf	?___flmul+2,w
  4032  055D  00D1               	movwf	___fladd@f2+2
  4033  055E  0839               	movf	?___flmul+1,w
  4034  055F  00D0               	movwf	___fladd@f2+1
  4035  0560  0838               	movf	?___flmul,w
  4036  0561  00CF               	movwf	___fladd@f2
  4037  0562  160A  118A  2096  120A  118A  	fcall	___fladd
  4038  0567  084E               	movf	?___fladd+3,w
  4039  0568  00ED               	movwf	log@x+3
  4040  0569  084D               	movf	?___fladd+2,w
  4041  056A  00EC               	movwf	log@x+2
  4042  056B  084C               	movf	?___fladd+1,w
  4043  056C  00EB               	movwf	log@x+1
  4044  056D  084B               	movf	?___fladd,w
  4045  056E  00EA               	movwf	log@x
  4046  056F  30FF               	movlw	-1
  4047  0570  07EE               	addwf	log@exponent,f
  4048  0571  1C03               	skipc
  4049  0572  03EF               	decf	log@exponent+1,f
  4050  0573  086D               	movf	log@x+3,w
  4051  0574  00DD               	movwf	eval_poly@x+3
  4052  0575  086C               	movf	log@x+2,w
  4053  0576  00DC               	movwf	eval_poly@x+2
  4054  0577  086B               	movf	log@x+1,w
  4055  0578  00DB               	movwf	eval_poly@x+1
  4056  0579  086A               	movf	log@x,w
  4057  057A  00DA               	movwf	eval_poly@x
  4058  057B  3029               	movlw	(low ((log@coeff-__stringbase)| (0+32768)))& (0+255)
  4059  057C  00DE               	movwf	eval_poly@d
  4060  057D  3008               	movlw	8
  4061  057E  00DF               	movwf	eval_poly@n
  4062  057F  01E0               	clrf	eval_poly@n+1
  4063  0580  160A  118A  2009  120A  118A  	fcall	_eval_poly
  4064  0585  085D               	movf	?_eval_poly+3,w
  4065  0586  00ED               	movwf	log@x+3
  4066  0587  085C               	movf	?_eval_poly+2,w
  4067  0588  00EC               	movwf	log@x+2
  4068  0589  085B               	movf	?_eval_poly+1,w
  4069  058A  00EB               	movwf	log@x+1
  4070  058B  085A               	movf	?_eval_poly,w
  4071  058C  00EA               	movwf	log@x
  4072  058D  086D               	movf	log@x+3,w
  4073  058E  00CE               	movwf	___fladd@f1+3
  4074  058F  086C               	movf	log@x+2,w
  4075  0590  00CD               	movwf	___fladd@f1+2
  4076  0591  086B               	movf	log@x+1,w
  4077  0592  00CC               	movwf	___fladd@f1+1
  4078  0593  086A               	movf	log@x,w
  4079  0594  00CB               	movwf	___fladd@f1
  4080  0595  303F               	movlw	63
  4081  0596  00BB               	movwf	___flmul@f1+3
  4082  0597  3031               	movlw	49
  4083  0598  00BA               	movwf	___flmul@f1+2
  4084  0599  3072               	movlw	114
  4085  059A  00B9               	movwf	___flmul@f1+1
  4086  059B  3018               	movlw	24
  4087  059C  00B8               	movwf	___flmul@f1
  4088  059D  086F               	movf	log@exponent+1,w
  4089  059E  00A6               	movwf	___awtofl@c+1
  4090  059F  086E               	movf	log@exponent,w
  4091  05A0  00A5               	movwf	___awtofl@c
  4092  05A1  120A  158A  2184  120A  118A  	fcall	___awtofl
  4093  05A6  0828               	movf	?___awtofl+3,w
  4094  05A7  00BF               	movwf	___flmul@f2+3
  4095  05A8  0827               	movf	?___awtofl+2,w
  4096  05A9  00BE               	movwf	___flmul@f2+2
  4097  05AA  0826               	movf	?___awtofl+1,w
  4098  05AB  00BD               	movwf	___flmul@f2+1
  4099  05AC  0825               	movf	?___awtofl,w
  4100  05AD  00BC               	movwf	___flmul@f2
  4101  05AE  160A  118A  25E0  120A  118A  	fcall	___flmul
  4102  05B3  083B               	movf	?___flmul+3,w
  4103  05B4  00D2               	movwf	___fladd@f2+3
  4104  05B5  083A               	movf	?___flmul+2,w
  4105  05B6  00D1               	movwf	___fladd@f2+2
  4106  05B7  0839               	movf	?___flmul+1,w
  4107  05B8  00D0               	movwf	___fladd@f2+1
  4108  05B9  0838               	movf	?___flmul,w
  4109  05BA  00CF               	movwf	___fladd@f2
  4110  05BB  160A  118A  2096   	fcall	___fladd
  4111  05BE  084E               	movf	?___fladd+3,w
  4112  05BF  00ED               	movwf	?_log+3
  4113  05C0  084D               	movf	?___fladd+2,w
  4114  05C1  00EC               	movwf	?_log+2
  4115  05C2  084C               	movf	?___fladd+1,w
  4116  05C3  00EB               	movwf	?_log+1
  4117  05C4  084B               	movf	?___fladd,w
  4118  05C5  00EA               	movwf	?_log
  4119  05C6  0008               	return
  4120  05C7                     __end_of_log:	
  4121  05C7                     __ptext14:	
  4122 ;; *************** function _pow *****************
  4123 ;; Defined at:
  4124 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\pow.c"
  4125 ;; Parameters:    Size  Location     Type
  4126 ;;  x               4   48[BANK1 ] short 
  4127 ;;  y               4   52[BANK1 ] short 
  4128 ;; Auto vars:     Size  Location     Type
  4129 ;;  yi              4   65[BANK1 ] unsigned long 
  4130 ;;  sign            1   64[BANK1 ] unsigned char 
  4131 ;; Return value:  Size  Location     Type
  4132 ;;                  4   48[BANK1 ] unsigned char 
  4133 ;; Registers used:
  4134 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4135 ;; Tracked objects:
  4136 ;;		On entry : 300/100
  4137 ;;		On exit  : 300/100
  4138 ;;		Unchanged: 0/0
  4139 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4140 ;;      Params:         0       0       8       0       0
  4141 ;;      Locals:         0       0      13       0       0
  4142 ;;      Temps:          0       0       0       0       0
  4143 ;;      Totals:         0       0      21       0       0
  4144 ;;Total ram usage:       21 bytes
  4145 ;; Hardware stack levels used:    1
  4146 ;; Hardware stack levels required when called:    5
  4147 ;; This function calls:
  4148 ;;		___flge
  4149 ;;		___flmul
  4150 ;;		___flneg
  4151 ;;		___fltol
  4152 ;;		___lltofl
  4153 ;;		_exp
  4154 ;;		_log
  4155 ;; This function is called by:
  4156 ;;		_format_double
  4157 ;; This function uses a non-reentrant model
  4158 ;;
  4159                           
  4160                           
  4161                           ;psect for function _pow
  4162  05C7                     _pow:	
  4163                           
  4164                           ;incstack = 0
  4165                           ; Regs used in _pow: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4166  05C7  01E0               	clrf	pow@sign^(0+128)
  4167  05C8  0853               	movf	(pow@x+3)^(0+128),w
  4168  05C9  0452               	iorwf	(pow@x+2)^(0+128),w
  4169  05CA  0451               	iorwf	(pow@x+1)^(0+128),w
  4170  05CB  0450               	iorwf	pow@x^(0+128),w
  4171  05CC  1D03               	skipz
  4172  05CD  2DE4               	goto	l3991
  4173  05CE  01F2               	clrf	___flge@ff1
  4174  05CF  01F3               	clrf	___flge@ff1+1
  4175  05D0  01F4               	clrf	___flge@ff1+2
  4176  05D1  01F5               	clrf	___flge@ff1+3
  4177  05D2  0857               	movf	(pow@y+3)^(0+128),w
  4178  05D3  00F9               	movwf	___flge@ff2+3
  4179  05D4  0856               	movf	(pow@y+2)^(0+128),w
  4180  05D5  00F8               	movwf	___flge@ff2+2
  4181  05D6  0855               	movf	(pow@y+1)^(0+128),w
  4182  05D7  00F7               	movwf	___flge@ff2+1
  4183  05D8  0854               	movf	pow@y^(0+128),w
  4184  05D9  00F6               	movwf	___flge@ff2
  4185  05DA  160A  118A  2679   	fcall	___flge
  4186  05DD  1683               	bsf	3,5	;RP0=1, select bank1
  4187  05DE  1303               	bcf	3,6	;RP1=0, select bank1
  4188  05DF  01D0               	clrf	?_pow^(0+128)
  4189  05E0  01D1               	clrf	(?_pow+1)^(0+128)
  4190  05E1  01D2               	clrf	(?_pow+2)^(0+128)
  4191  05E2  01D3               	clrf	(?_pow+3)^(0+128)
  4192  05E3  0008               	return
  4193  05E4                     l3991:	
  4194  05E4  0857               	movf	(pow@y+3)^(0+128),w
  4195  05E5  0456               	iorwf	(pow@y+2)^(0+128),w
  4196  05E6  0455               	iorwf	(pow@y+1)^(0+128),w
  4197  05E7  0454               	iorwf	pow@y^(0+128),w
  4198  05E8  1D03               	skipz
  4199  05E9  2DF2               	goto	l3997
  4200  05EA  303F               	movlw	63
  4201  05EB  00D3               	movwf	(?_pow+3)^(0+128)
  4202  05EC  3080               	movlw	128
  4203  05ED  00D2               	movwf	(?_pow+2)^(0+128)
  4204  05EE  3000               	movlw	0
  4205  05EF  01D1               	clrf	(?_pow+1)^(0+128)
  4206  05F0  01D0               	clrf	?_pow^(0+128)
  4207  05F1  0008               	return
  4208  05F2                     l3997:	
  4209  05F2  0853               	movf	(pow@x+3)^(0+128),w
  4210  05F3  00F5               	movwf	___flge@ff1+3
  4211  05F4  0852               	movf	(pow@x+2)^(0+128),w
  4212  05F5  00F4               	movwf	___flge@ff1+2
  4213  05F6  0851               	movf	(pow@x+1)^(0+128),w
  4214  05F7  00F3               	movwf	___flge@ff1+1
  4215  05F8  0850               	movf	pow@x^(0+128),w
  4216  05F9  00F2               	movwf	___flge@ff1
  4217  05FA  01F6               	clrf	___flge@ff2
  4218  05FB  01F7               	clrf	___flge@ff2+1
  4219  05FC  01F8               	clrf	___flge@ff2+2
  4220  05FD  01F9               	clrf	___flge@ff2+3
  4221  05FE  160A  118A  2679  120A  118A  	fcall	___flge
  4222  0603  1803               	btfsc	3,0
  4223  0604  2E66               	goto	l4009
  4224  0605  1683               	bsf	3,5	;RP0=1, select bank1
  4225  0606  1303               	bcf	3,6	;RP1=0, select bank1
  4226  0607  0857               	movf	(pow@y+3)^(0+128),w
  4227  0608  00AB               	movwf	(___fltol@f1+3)^(0+128)
  4228  0609  0856               	movf	(pow@y+2)^(0+128),w
  4229  060A  00AA               	movwf	(___fltol@f1+2)^(0+128)
  4230  060B  0855               	movf	(pow@y+1)^(0+128),w
  4231  060C  00A9               	movwf	(___fltol@f1+1)^(0+128)
  4232  060D  0854               	movf	pow@y^(0+128),w
  4233  060E  00A8               	movwf	___fltol@f1^(0+128)
  4234  060F  160A  118A  27A9  120A  118A  	fcall	___fltol
  4235  0614  082B               	movf	(?___fltol+3)^(0+128),w
  4236  0615  00E4               	movwf	(pow@yi+3)^(0+128)
  4237  0616  082A               	movf	(?___fltol+2)^(0+128),w
  4238  0617  00E3               	movwf	(pow@yi+2)^(0+128)
  4239  0618  0829               	movf	(?___fltol+1)^(0+128),w
  4240  0619  00E2               	movwf	(pow@yi+1)^(0+128)
  4241  061A  0828               	movf	?___fltol^(0+128),w
  4242  061B  00E1               	movwf	pow@yi^(0+128)
  4243  061C  0864               	movf	(pow@yi+3)^(0+128),w
  4244  061D  1283               	bcf	3,5	;RP0=0, select bank0
  4245  061E  00A8               	movwf	___lltofl@c+3
  4246  061F  1683               	bsf	3,5	;RP0=1, select bank1
  4247  0620  0863               	movf	(pow@yi+2)^(0+128),w
  4248  0621  1283               	bcf	3,5	;RP0=0, select bank0
  4249  0622  00A7               	movwf	___lltofl@c+2
  4250  0623  1683               	bsf	3,5	;RP0=1, select bank1
  4251  0624  0862               	movf	(pow@yi+1)^(0+128),w
  4252  0625  1283               	bcf	3,5	;RP0=0, select bank0
  4253  0626  00A6               	movwf	___lltofl@c+1
  4254  0627  1683               	bsf	3,5	;RP0=1, select bank1
  4255  0628  0861               	movf	pow@yi^(0+128),w
  4256  0629  1283               	bcf	3,5	;RP0=0, select bank0
  4257  062A  00A5               	movwf	___lltofl@c
  4258  062B  26E8  120A  118A   	fcall	___lltofl
  4259  062E  1683               	bsf	3,5	;RP0=1, select bank1
  4260  062F  0857               	movf	(pow@y+3)^(0+128),w
  4261  0630  1283               	bcf	3,5	;RP0=0, select bank0
  4262  0631  0628               	xorwf	?___lltofl+3,w
  4263  0632  1D03               	skipz
  4264  0633  2E44               	goto	u3865
  4265  0634  1683               	bsf	3,5	;RP0=1, select bank1
  4266  0635  0856               	movf	(pow@y+2)^(0+128),w
  4267  0636  1283               	bcf	3,5	;RP0=0, select bank0
  4268  0637  0627               	xorwf	?___lltofl+2,w
  4269  0638  1D03               	skipz
  4270  0639  2E44               	goto	u3865
  4271  063A  1683               	bsf	3,5	;RP0=1, select bank1
  4272  063B  0855               	movf	(pow@y+1)^(0+128),w
  4273  063C  1283               	bcf	3,5	;RP0=0, select bank0
  4274  063D  0626               	xorwf	?___lltofl+1,w
  4275  063E  1D03               	skipz
  4276  063F  2E44               	goto	u3865
  4277  0640  1683               	bsf	3,5	;RP0=1, select bank1
  4278  0641  0854               	movf	pow@y^(0+128),w
  4279  0642  1283               	bcf	3,5	;RP0=0, select bank0
  4280  0643  0625               	xorwf	?___lltofl,w
  4281  0644                     u3865:	
  4282  0644  1903               	skipnz
  4283  0645  2E4C               	goto	l4003
  4284  0646  1683               	bsf	3,5	;RP0=1, select bank1
  4285  0647  01D0               	clrf	?_pow^(0+128)
  4286  0648  01D1               	clrf	(?_pow+1)^(0+128)
  4287  0649  01D2               	clrf	(?_pow+2)^(0+128)
  4288  064A  01D3               	clrf	(?_pow+3)^(0+128)
  4289  064B  0008               	return
  4290  064C                     l4003:	
  4291  064C  1683               	bsf	3,5	;RP0=1, select bank1
  4292  064D  0861               	movf	pow@yi^(0+128),w
  4293  064E  00E0               	movwf	pow@sign^(0+128)
  4294  064F  3001               	movlw	1
  4295  0650  05E0               	andwf	pow@sign^(0+128),f
  4296  0651  0853               	movf	(pow@x+3)^(0+128),w
  4297  0652  00F5               	movwf	___flneg@f1+3
  4298  0653  0852               	movf	(pow@x+2)^(0+128),w
  4299  0654  00F4               	movwf	___flneg@f1+2
  4300  0655  0851               	movf	(pow@x+1)^(0+128),w
  4301  0656  00F3               	movwf	___flneg@f1+1
  4302  0657  0850               	movf	pow@x^(0+128),w
  4303  0658  00F2               	movwf	___flneg@f1
  4304  0659  120A  158A  26A5  120A  118A  	fcall	___flneg
  4305  065E  0875               	movf	?___flneg+3,w
  4306  065F  00D3               	movwf	(pow@x+3)^(0+128)
  4307  0660  0874               	movf	?___flneg+2,w
  4308  0661  00D2               	movwf	(pow@x+2)^(0+128)
  4309  0662  0873               	movf	?___flneg+1,w
  4310  0663  00D1               	movwf	(pow@x+1)^(0+128)
  4311  0664  0872               	movf	?___flneg,w
  4312  0665  00D0               	movwf	pow@x^(0+128)
  4313  0666                     l4009:	
  4314  0666  1683               	bsf	3,5	;RP0=1, select bank1
  4315  0667  1303               	bcf	3,6	;RP1=0, select bank1
  4316  0668  0853               	movf	(pow@x+3)^(0+128),w
  4317  0669  1283               	bcf	3,5	;RP0=0, select bank0
  4318  066A  00ED               	movwf	log@x+3
  4319  066B  1683               	bsf	3,5	;RP0=1, select bank1
  4320  066C  0852               	movf	(pow@x+2)^(0+128),w
  4321  066D  1283               	bcf	3,5	;RP0=0, select bank0
  4322  066E  00EC               	movwf	log@x+2
  4323  066F  1683               	bsf	3,5	;RP0=1, select bank1
  4324  0670  0851               	movf	(pow@x+1)^(0+128),w
  4325  0671  1283               	bcf	3,5	;RP0=0, select bank0
  4326  0672  00EB               	movwf	log@x+1
  4327  0673  1683               	bsf	3,5	;RP0=1, select bank1
  4328  0674  0850               	movf	pow@x^(0+128),w
  4329  0675  1283               	bcf	3,5	;RP0=0, select bank0
  4330  0676  00EA               	movwf	log@x
  4331  0677  250B  120A  118A   	fcall	_log
  4332  067A  086D               	movf	?_log+3,w
  4333  067B  1683               	bsf	3,5	;RP0=1, select bank1
  4334  067C  00DB               	movwf	(_pow$1059+3)^(0+128)
  4335  067D  1283               	bcf	3,5	;RP0=0, select bank0
  4336  067E  086C               	movf	?_log+2,w
  4337  067F  1683               	bsf	3,5	;RP0=1, select bank1
  4338  0680  00DA               	movwf	(_pow$1059+2)^(0+128)
  4339  0681  1283               	bcf	3,5	;RP0=0, select bank0
  4340  0682  086B               	movf	?_log+1,w
  4341  0683  1683               	bsf	3,5	;RP0=1, select bank1
  4342  0684  00D9               	movwf	(_pow$1059+1)^(0+128)
  4343  0685  1283               	bcf	3,5	;RP0=0, select bank0
  4344  0686  086A               	movf	?_log,w
  4345  0687  1683               	bsf	3,5	;RP0=1, select bank1
  4346  0688  00D8               	movwf	_pow$1059^(0+128)
  4347  0689  0857               	movf	(pow@y+3)^(0+128),w
  4348  068A  1283               	bcf	3,5	;RP0=0, select bank0
  4349  068B  00BB               	movwf	___flmul@f1+3
  4350  068C  1683               	bsf	3,5	;RP0=1, select bank1
  4351  068D  0856               	movf	(pow@y+2)^(0+128),w
  4352  068E  1283               	bcf	3,5	;RP0=0, select bank0
  4353  068F  00BA               	movwf	___flmul@f1+2
  4354  0690  1683               	bsf	3,5	;RP0=1, select bank1
  4355  0691  0855               	movf	(pow@y+1)^(0+128),w
  4356  0692  1283               	bcf	3,5	;RP0=0, select bank0
  4357  0693  00B9               	movwf	___flmul@f1+1
  4358  0694  1683               	bsf	3,5	;RP0=1, select bank1
  4359  0695  0854               	movf	pow@y^(0+128),w
  4360  0696  1283               	bcf	3,5	;RP0=0, select bank0
  4361  0697  00B8               	movwf	___flmul@f1
  4362  0698  1683               	bsf	3,5	;RP0=1, select bank1
  4363  0699  085B               	movf	(_pow$1059+3)^(0+128),w
  4364  069A  1283               	bcf	3,5	;RP0=0, select bank0
  4365  069B  00BF               	movwf	___flmul@f2+3
  4366  069C  1683               	bsf	3,5	;RP0=1, select bank1
  4367  069D  085A               	movf	(_pow$1059+2)^(0+128),w
  4368  069E  1283               	bcf	3,5	;RP0=0, select bank0
  4369  069F  00BE               	movwf	___flmul@f2+2
  4370  06A0  1683               	bsf	3,5	;RP0=1, select bank1
  4371  06A1  0859               	movf	(_pow$1059+1)^(0+128),w
  4372  06A2  1283               	bcf	3,5	;RP0=0, select bank0
  4373  06A3  00BD               	movwf	___flmul@f2+1
  4374  06A4  1683               	bsf	3,5	;RP0=1, select bank1
  4375  06A5  0858               	movf	_pow$1059^(0+128),w
  4376  06A6  1283               	bcf	3,5	;RP0=0, select bank0
  4377  06A7  00BC               	movwf	___flmul@f2
  4378  06A8  160A  118A  25E0  120A  118A  	fcall	___flmul
  4379  06AD  083B               	movf	?___flmul+3,w
  4380  06AE  1683               	bsf	3,5	;RP0=1, select bank1
  4381  06AF  00DF               	movwf	(_pow$1060+3)^(0+128)
  4382  06B0  1283               	bcf	3,5	;RP0=0, select bank0
  4383  06B1  083A               	movf	?___flmul+2,w
  4384  06B2  1683               	bsf	3,5	;RP0=1, select bank1
  4385  06B3  00DE               	movwf	(_pow$1060+2)^(0+128)
  4386  06B4  1283               	bcf	3,5	;RP0=0, select bank0
  4387  06B5  0839               	movf	?___flmul+1,w
  4388  06B6  1683               	bsf	3,5	;RP0=1, select bank1
  4389  06B7  00DD               	movwf	(_pow$1060+1)^(0+128)
  4390  06B8  1283               	bcf	3,5	;RP0=0, select bank0
  4391  06B9  0838               	movf	?___flmul,w
  4392  06BA  1683               	bsf	3,5	;RP0=1, select bank1
  4393  06BB  00DC               	movwf	_pow$1060^(0+128)
  4394  06BC  085F               	movf	(_pow$1060+3)^(0+128),w
  4395  06BD  00C4               	movwf	(exp@x+3)^(0+128)
  4396  06BE  085E               	movf	(_pow$1060+2)^(0+128),w
  4397  06BF  00C3               	movwf	(exp@x+2)^(0+128)
  4398  06C0  085D               	movf	(_pow$1060+1)^(0+128),w
  4399  06C1  00C2               	movwf	(exp@x+1)^(0+128)
  4400  06C2  085C               	movf	_pow$1060^(0+128),w
  4401  06C3  00C1               	movwf	exp@x^(0+128)
  4402  06C4  120A  158A  2005  120A  118A  	fcall	_exp
  4403  06C9  0844               	movf	(?_exp+3)^(0+128),w
  4404  06CA  00D3               	movwf	(pow@x+3)^(0+128)
  4405  06CB  0843               	movf	(?_exp+2)^(0+128),w
  4406  06CC  00D2               	movwf	(pow@x+2)^(0+128)
  4407  06CD  0842               	movf	(?_exp+1)^(0+128),w
  4408  06CE  00D1               	movwf	(pow@x+1)^(0+128)
  4409  06CF  0841               	movf	?_exp^(0+128),w
  4410  06D0  00D0               	movwf	pow@x^(0+128)
  4411  06D1  0860               	movf	pow@sign^(0+128),w
  4412  06D2  1903               	btfsc	3,2
  4413  06D3  0008               	return
  4414  06D4  0853               	movf	(pow@x+3)^(0+128),w
  4415  06D5  00F5               	movwf	___flneg@f1+3
  4416  06D6  0852               	movf	(pow@x+2)^(0+128),w
  4417  06D7  00F4               	movwf	___flneg@f1+2
  4418  06D8  0851               	movf	(pow@x+1)^(0+128),w
  4419  06D9  00F3               	movwf	___flneg@f1+1
  4420  06DA  0850               	movf	pow@x^(0+128),w
  4421  06DB  00F2               	movwf	___flneg@f1
  4422  06DC  120A  158A  26A5   	fcall	___flneg
  4423  06DF  0875               	movf	?___flneg+3,w
  4424  06E0  00D3               	movwf	(?_pow+3)^(0+128)
  4425  06E1  0874               	movf	?___flneg+2,w
  4426  06E2  00D2               	movwf	(?_pow+2)^(0+128)
  4427  06E3  0873               	movf	?___flneg+1,w
  4428  06E4  00D1               	movwf	(?_pow+1)^(0+128)
  4429  06E5  0872               	movf	?___flneg,w
  4430  06E6  00D0               	movwf	?_pow^(0+128)
  4431  06E7  0008               	return
  4432  06E8                     __end_of_pow:	
  4433  06E8                     __ptext23:	
  4434 ;; *************** function ___lltofl *****************
  4435 ;; Defined at:
  4436 ;;		line 30 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lltofl.c"
  4437 ;; Parameters:    Size  Location     Type
  4438 ;;  c               4    4[BANK0 ] unsigned long 
  4439 ;; Auto vars:     Size  Location     Type
  4440 ;;		None
  4441 ;; Return value:  Size  Location     Type
  4442 ;;                  4    4[BANK0 ] unsigned long 
  4443 ;; Registers used:
  4444 ;;		wreg, status,2, status,0, pclath, cstack
  4445 ;; Tracked objects:
  4446 ;;		On entry : 300/0
  4447 ;;		On exit  : 300/0
  4448 ;;		Unchanged: 0/0
  4449 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4450 ;;      Params:         0       4       0       0       0
  4451 ;;      Locals:         0       0       0       0       0
  4452 ;;      Temps:          0       0       0       0       0
  4453 ;;      Totals:         0       4       0       0       0
  4454 ;;Total ram usage:        4 bytes
  4455 ;; Hardware stack levels used:    1
  4456 ;; Hardware stack levels required when called:    2
  4457 ;; This function calls:
  4458 ;;		___flpack
  4459 ;; This function is called by:
  4460 ;;		_pow
  4461 ;; This function uses a non-reentrant model
  4462 ;;
  4463                           
  4464                           
  4465                           ;psect for function ___lltofl
  4466  06E8                     ___lltofl:	
  4467                           
  4468                           ;incstack = 0
  4469                           ; Regs used in ___lltofl: [wreg+status,2+status,0+pclath+cstack]
  4470  06E8  0828               	movf	___lltofl@c+3,w
  4471  06E9  00F5               	movwf	___flpack@arg+3
  4472  06EA  0827               	movf	___lltofl@c+2,w
  4473  06EB  00F4               	movwf	___flpack@arg+2
  4474  06EC  0826               	movf	___lltofl@c+1,w
  4475  06ED  00F3               	movwf	___flpack@arg+1
  4476  06EE  0825               	movf	___lltofl@c,w
  4477  06EF  00F2               	movwf	___flpack@arg
  4478  06F0  3096               	movlw	150
  4479  06F1  00F6               	movwf	___flpack@exp
  4480  06F2  01F7               	clrf	___flpack@sign
  4481  06F3  120A  158A  255C   	fcall	___flpack
  4482  06F6  0875               	movf	?___flpack+3,w
  4483  06F7  1283               	bcf	3,5	;RP0=0, select bank0
  4484  06F8  00A8               	movwf	?___lltofl+3
  4485  06F9  0874               	movf	?___flpack+2,w
  4486  06FA  00A7               	movwf	?___lltofl+2
  4487  06FB  0873               	movf	?___flpack+1,w
  4488  06FC  00A6               	movwf	?___lltofl+1
  4489  06FD  0872               	movf	?___flpack,w
  4490  06FE  00A5               	movwf	?___lltofl
  4491  06FF  0008               	return
  4492  0700                     __end_of___lltofl:	
  4493                           
  4494                           	psect	text15
  4495  0805                     __ptext15:	
  4496 ;; *************** function _exp *****************
  4497 ;; Defined at:
  4498 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\exp.c"
  4499 ;; Parameters:    Size  Location     Type
  4500 ;;  x               4   33[BANK1 ] unsigned char 
  4501 ;; Auto vars:     Size  Location     Type
  4502 ;;  exponent        2   45[BANK1 ] int 
  4503 ;;  sign            1   47[BANK1 ] unsigned char 
  4504 ;; Return value:  Size  Location     Type
  4505 ;;                  4   33[BANK1 ] unsigned char 
  4506 ;; Registers used:
  4507 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4508 ;; Tracked objects:
  4509 ;;		On entry : 300/100
  4510 ;;		On exit  : 300/100
  4511 ;;		Unchanged: 0/0
  4512 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4513 ;;      Params:         0       0       4       0       0
  4514 ;;      Locals:         0       0      11       0       0
  4515 ;;      Temps:          0       0       0       0       0
  4516 ;;      Totals:         0       0      15       0       0
  4517 ;;Total ram usage:       15 bytes
  4518 ;; Hardware stack levels used:    1
  4519 ;; Hardware stack levels required when called:    4
  4520 ;; This function calls:
  4521 ;;		___awtofl
  4522 ;;		___fldiv
  4523 ;;		___flge
  4524 ;;		___flmul
  4525 ;;		___flneg
  4526 ;;		___flsub
  4527 ;;		___fltol
  4528 ;;		_eval_poly
  4529 ;;		_floor
  4530 ;;		_ldexp
  4531 ;; This function is called by:
  4532 ;;		_pow
  4533 ;; This function uses a non-reentrant model
  4534 ;;
  4535                           
  4536                           
  4537                           ;psect for function _exp
  4538  0805                     _exp:	
  4539                           
  4540                           ;incstack = 0
  4541                           ; Regs used in _exp: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4542  0805  0844               	movf	(exp@x+3)^(0+128),w
  4543  0806  0443               	iorwf	(exp@x+2)^(0+128),w
  4544  0807  0442               	iorwf	(exp@x+1)^(0+128),w
  4545  0808  0441               	iorwf	exp@x^(0+128),w
  4546  0809  1D03               	skipz
  4547  080A  2813               	goto	l3925
  4548  080B  303F               	movlw	63
  4549  080C  00C4               	movwf	(?_exp+3)^(0+128)
  4550  080D  3080               	movlw	128
  4551  080E  00C3               	movwf	(?_exp+2)^(0+128)
  4552  080F  3000               	movlw	0
  4553  0810  01C2               	clrf	(?_exp+1)^(0+128)
  4554  0811  01C1               	clrf	?_exp^(0+128)
  4555  0812  0008               	return
  4556  0813                     l3925:	
  4557  0813  3044               	movlw	68
  4558  0814  00F5               	movwf	___flge@ff1+3
  4559  0815  3031               	movlw	49
  4560  0816  00F4               	movwf	___flge@ff1+2
  4561  0817  3072               	movlw	114
  4562  0818  00F3               	movwf	___flge@ff1+1
  4563  0819  3018               	movlw	24
  4564  081A  00F2               	movwf	___flge@ff1
  4565  081B  0844               	movf	(exp@x+3)^(0+128),w
  4566  081C  00F9               	movwf	___flge@ff2+3
  4567  081D  0843               	movf	(exp@x+2)^(0+128),w
  4568  081E  00F8               	movwf	___flge@ff2+2
  4569  081F  0842               	movf	(exp@x+1)^(0+128),w
  4570  0820  00F7               	movwf	___flge@ff2+1
  4571  0821  0841               	movf	exp@x^(0+128),w
  4572  0822  00F6               	movwf	___flge@ff2
  4573  0823  160A  118A  2679  120A  158A  	fcall	___flge
  4574  0828  1803               	btfsc	3,0
  4575  0829  2834               	goto	l3935
  4576  082A  307F               	movlw	127
  4577  082B  1683               	bsf	3,5	;RP0=1, select bank1
  4578  082C  1303               	bcf	3,6	;RP1=0, select bank1
  4579  082D  00C4               	movwf	(?_exp+3)^(0+128)
  4580  082E  00C3               	movwf	(?_exp+2)^(0+128)
  4581  082F  30FE               	movlw	254
  4582  0830  00C2               	movwf	(?_exp+1)^(0+128)
  4583  0831  30F7               	movlw	247
  4584  0832  00C1               	movwf	?_exp^(0+128)
  4585  0833  0008               	return
  4586  0834                     l3935:	
  4587  0834  1683               	bsf	3,5	;RP0=1, select bank1
  4588  0835  1303               	bcf	3,6	;RP1=0, select bank1
  4589  0836  0844               	movf	(exp@x+3)^(0+128),w
  4590  0837  00F5               	movwf	___flge@ff1+3
  4591  0838  0843               	movf	(exp@x+2)^(0+128),w
  4592  0839  00F4               	movwf	___flge@ff1+2
  4593  083A  0842               	movf	(exp@x+1)^(0+128),w
  4594  083B  00F3               	movwf	___flge@ff1+1
  4595  083C  0841               	movf	exp@x^(0+128),w
  4596  083D  00F2               	movwf	___flge@ff1
  4597  083E  30C4               	movlw	196
  4598  083F  00F9               	movwf	___flge@ff2+3
  4599  0840  303A               	movlw	58
  4600  0841  00F8               	movwf	___flge@ff2+2
  4601  0842  3048               	movlw	72
  4602  0843  00F7               	movwf	___flge@ff2+1
  4603  0844  3087               	movlw	135
  4604  0845  00F6               	movwf	___flge@ff2
  4605  0846  160A  118A  2679  120A  158A  	fcall	___flge
  4606  084B  1803               	btfsc	3,0
  4607  084C  2854               	goto	l3939
  4608  084D  1683               	bsf	3,5	;RP0=1, select bank1
  4609  084E  1303               	bcf	3,6	;RP1=0, select bank1
  4610  084F  01C1               	clrf	?_exp^(0+128)
  4611  0850  01C2               	clrf	(?_exp+1)^(0+128)
  4612  0851  01C3               	clrf	(?_exp+2)^(0+128)
  4613  0852  01C4               	clrf	(?_exp+3)^(0+128)
  4614  0853  0008               	return
  4615  0854                     l3939:	
  4616  0854  1683               	bsf	3,5	;RP0=1, select bank1
  4617  0855  1303               	bcf	3,6	;RP1=0, select bank1
  4618  0856  0844               	movf	(exp@x+3)^(0+128),w
  4619  0857  00F5               	movwf	___flge@ff1+3
  4620  0858  0843               	movf	(exp@x+2)^(0+128),w
  4621  0859  00F4               	movwf	___flge@ff1+2
  4622  085A  0842               	movf	(exp@x+1)^(0+128),w
  4623  085B  00F3               	movwf	___flge@ff1+1
  4624  085C  0841               	movf	exp@x^(0+128),w
  4625  085D  00F2               	movwf	___flge@ff1
  4626  085E  01F6               	clrf	___flge@ff2
  4627  085F  01F7               	clrf	___flge@ff2+1
  4628  0860  01F8               	clrf	___flge@ff2+2
  4629  0861  01F9               	clrf	___flge@ff2+3
  4630  0862  160A  118A  2679  120A  158A  	fcall	___flge
  4631  0867  1803               	btfsc	3,0
  4632  0868  286B               	goto	u3780
  4633  0869  3001               	movlw	1
  4634  086A  286C               	goto	u3790
  4635  086B                     u3780:	
  4636  086B  3000               	movlw	0
  4637  086C                     u3790:	
  4638  086C  1683               	bsf	3,5	;RP0=1, select bank1
  4639  086D  1303               	bcf	3,6	;RP1=0, select bank1
  4640  086E  00CF               	movwf	exp@sign^(0+128)
  4641  086F  084F               	movf	exp@sign^(0+128),w
  4642  0870  1903               	btfsc	3,2
  4643  0871  2883               	goto	l3945
  4644  0872  0844               	movf	(exp@x+3)^(0+128),w
  4645  0873  00F5               	movwf	___flneg@f1+3
  4646  0874  0843               	movf	(exp@x+2)^(0+128),w
  4647  0875  00F4               	movwf	___flneg@f1+2
  4648  0876  0842               	movf	(exp@x+1)^(0+128),w
  4649  0877  00F3               	movwf	___flneg@f1+1
  4650  0878  0841               	movf	exp@x^(0+128),w
  4651  0879  00F2               	movwf	___flneg@f1
  4652  087A  26A5               	fcall	___flneg
  4653  087B  0875               	movf	?___flneg+3,w
  4654  087C  00C4               	movwf	(exp@x+3)^(0+128)
  4655  087D  0874               	movf	?___flneg+2,w
  4656  087E  00C3               	movwf	(exp@x+2)^(0+128)
  4657  087F  0873               	movf	?___flneg+1,w
  4658  0880  00C2               	movwf	(exp@x+1)^(0+128)
  4659  0881  0872               	movf	?___flneg,w
  4660  0882  00C1               	movwf	exp@x^(0+128)
  4661  0883                     l3945:	
  4662  0883  303F               	movlw	63
  4663  0884  1283               	bcf	3,5	;RP0=0, select bank0
  4664  0885  00BB               	movwf	___flmul@f1+3
  4665  0886  30B8               	movlw	184
  4666  0887  00BA               	movwf	___flmul@f1+2
  4667  0888  30AA               	movlw	170
  4668  0889  00B9               	movwf	___flmul@f1+1
  4669  088A  303B               	movlw	59
  4670  088B  00B8               	movwf	___flmul@f1
  4671  088C  1683               	bsf	3,5	;RP0=1, select bank1
  4672  088D  0844               	movf	(exp@x+3)^(0+128),w
  4673  088E  1283               	bcf	3,5	;RP0=0, select bank0
  4674  088F  00BF               	movwf	___flmul@f2+3
  4675  0890  1683               	bsf	3,5	;RP0=1, select bank1
  4676  0891  0843               	movf	(exp@x+2)^(0+128),w
  4677  0892  1283               	bcf	3,5	;RP0=0, select bank0
  4678  0893  00BE               	movwf	___flmul@f2+2
  4679  0894  1683               	bsf	3,5	;RP0=1, select bank1
  4680  0895  0842               	movf	(exp@x+1)^(0+128),w
  4681  0896  1283               	bcf	3,5	;RP0=0, select bank0
  4682  0897  00BD               	movwf	___flmul@f2+1
  4683  0898  1683               	bsf	3,5	;RP0=1, select bank1
  4684  0899  0841               	movf	exp@x^(0+128),w
  4685  089A  1283               	bcf	3,5	;RP0=0, select bank0
  4686  089B  00BC               	movwf	___flmul@f2
  4687  089C  160A  118A  25E0  120A  158A  	fcall	___flmul
  4688  08A1  083B               	movf	?___flmul+3,w
  4689  08A2  1683               	bsf	3,5	;RP0=1, select bank1
  4690  08A3  00C4               	movwf	(exp@x+3)^(0+128)
  4691  08A4  1283               	bcf	3,5	;RP0=0, select bank0
  4692  08A5  083A               	movf	?___flmul+2,w
  4693  08A6  1683               	bsf	3,5	;RP0=1, select bank1
  4694  08A7  00C3               	movwf	(exp@x+2)^(0+128)
  4695  08A8  1283               	bcf	3,5	;RP0=0, select bank0
  4696  08A9  0839               	movf	?___flmul+1,w
  4697  08AA  1683               	bsf	3,5	;RP0=1, select bank1
  4698  08AB  00C2               	movwf	(exp@x+1)^(0+128)
  4699  08AC  1283               	bcf	3,5	;RP0=0, select bank0
  4700  08AD  0838               	movf	?___flmul,w
  4701  08AE  1683               	bsf	3,5	;RP0=1, select bank1
  4702  08AF  00C1               	movwf	exp@x^(0+128)
  4703  08B0  0844               	movf	(exp@x+3)^(0+128),w
  4704  08B1  00BA               	movwf	(floor@x+3)^(0+128)
  4705  08B2  0843               	movf	(exp@x+2)^(0+128),w
  4706  08B3  00B9               	movwf	(floor@x+2)^(0+128)
  4707  08B4  0842               	movf	(exp@x+1)^(0+128),w
  4708  08B5  00B8               	movwf	(floor@x+1)^(0+128)
  4709  08B6  0841               	movf	exp@x^(0+128),w
  4710  08B7  00B7               	movwf	floor@x^(0+128)
  4711  08B8  21A2               	fcall	_floor
  4712  08B9  083A               	movf	(?_floor+3)^(0+128),w
  4713  08BA  00C8               	movwf	(_exp$1061+3)^(0+128)
  4714  08BB  0839               	movf	(?_floor+2)^(0+128),w
  4715  08BC  00C7               	movwf	(_exp$1061+2)^(0+128)
  4716  08BD  0838               	movf	(?_floor+1)^(0+128),w
  4717  08BE  00C6               	movwf	(_exp$1061+1)^(0+128)
  4718  08BF  0837               	movf	?_floor^(0+128),w
  4719  08C0  00C5               	movwf	_exp$1061^(0+128)
  4720  08C1  0848               	movf	(_exp$1061+3)^(0+128),w
  4721  08C2  00AB               	movwf	(___fltol@f1+3)^(0+128)
  4722  08C3  0847               	movf	(_exp$1061+2)^(0+128),w
  4723  08C4  00AA               	movwf	(___fltol@f1+2)^(0+128)
  4724  08C5  0846               	movf	(_exp$1061+1)^(0+128),w
  4725  08C6  00A9               	movwf	(___fltol@f1+1)^(0+128)
  4726  08C7  0845               	movf	_exp$1061^(0+128),w
  4727  08C8  00A8               	movwf	___fltol@f1^(0+128)
  4728  08C9  160A  118A  27A9  120A  158A  	fcall	___fltol
  4729  08CE  0829               	movf	(?___fltol^(0+128)+1),w
  4730  08CF  00CE               	movwf	(exp@exponent+1)^(0+128)
  4731  08D0  0828               	movf	?___fltol^(0+128),w
  4732  08D1  00CD               	movwf	exp@exponent^(0+128)
  4733  08D2  084E               	movf	(exp@exponent+1)^(0+128),w
  4734  08D3  1283               	bcf	3,5	;RP0=0, select bank0
  4735  08D4  00A6               	movwf	___awtofl@c+1
  4736  08D5  1683               	bsf	3,5	;RP0=1, select bank1
  4737  08D6  084D               	movf	exp@exponent^(0+128),w
  4738  08D7  1283               	bcf	3,5	;RP0=0, select bank0
  4739  08D8  00A5               	movwf	___awtofl@c
  4740  08D9  2184  120A  158A   	fcall	___awtofl
  4741  08DC  0828               	movf	?___awtofl+3,w
  4742  08DD  00DD               	movwf	___flsub@f2+3
  4743  08DE  0827               	movf	?___awtofl+2,w
  4744  08DF  00DC               	movwf	___flsub@f2+2
  4745  08E0  0826               	movf	?___awtofl+1,w
  4746  08E1  00DB               	movwf	___flsub@f2+1
  4747  08E2  0825               	movf	?___awtofl,w
  4748  08E3  00DA               	movwf	___flsub@f2
  4749  08E4  1683               	bsf	3,5	;RP0=1, select bank1
  4750  08E5  0844               	movf	(exp@x+3)^(0+128),w
  4751  08E6  1283               	bcf	3,5	;RP0=0, select bank0
  4752  08E7  00E1               	movwf	___flsub@f1+3
  4753  08E8  1683               	bsf	3,5	;RP0=1, select bank1
  4754  08E9  0843               	movf	(exp@x+2)^(0+128),w
  4755  08EA  1283               	bcf	3,5	;RP0=0, select bank0
  4756  08EB  00E0               	movwf	___flsub@f1+2
  4757  08EC  1683               	bsf	3,5	;RP0=1, select bank1
  4758  08ED  0842               	movf	(exp@x+1)^(0+128),w
  4759  08EE  1283               	bcf	3,5	;RP0=0, select bank0
  4760  08EF  00DF               	movwf	___flsub@f1+1
  4761  08F0  1683               	bsf	3,5	;RP0=1, select bank1
  4762  08F1  0841               	movf	exp@x^(0+128),w
  4763  08F2  1283               	bcf	3,5	;RP0=0, select bank0
  4764  08F3  00DE               	movwf	___flsub@f1
  4765  08F4  2602               	fcall	___flsub
  4766  08F5  085D               	movf	?___flsub+3,w
  4767  08F6  1683               	bsf	3,5	;RP0=1, select bank1
  4768  08F7  00C4               	movwf	(exp@x+3)^(0+128)
  4769  08F8  1283               	bcf	3,5	;RP0=0, select bank0
  4770  08F9  085C               	movf	?___flsub+2,w
  4771  08FA  1683               	bsf	3,5	;RP0=1, select bank1
  4772  08FB  00C3               	movwf	(exp@x+2)^(0+128)
  4773  08FC  1283               	bcf	3,5	;RP0=0, select bank0
  4774  08FD  085B               	movf	?___flsub+1,w
  4775  08FE  1683               	bsf	3,5	;RP0=1, select bank1
  4776  08FF  00C2               	movwf	(exp@x+1)^(0+128)
  4777  0900  1283               	bcf	3,5	;RP0=0, select bank0
  4778  0901  085A               	movf	?___flsub,w
  4779  0902  1683               	bsf	3,5	;RP0=1, select bank1
  4780  0903  00C1               	movwf	exp@x^(0+128)
  4781  0904  0844               	movf	(exp@x+3)^(0+128),w
  4782  0905  1283               	bcf	3,5	;RP0=0, select bank0
  4783  0906  00DD               	movwf	eval_poly@x+3
  4784  0907  1683               	bsf	3,5	;RP0=1, select bank1
  4785  0908  0843               	movf	(exp@x+2)^(0+128),w
  4786  0909  1283               	bcf	3,5	;RP0=0, select bank0
  4787  090A  00DC               	movwf	eval_poly@x+2
  4788  090B  1683               	bsf	3,5	;RP0=1, select bank1
  4789  090C  0842               	movf	(exp@x+1)^(0+128),w
  4790  090D  1283               	bcf	3,5	;RP0=0, select bank0
  4791  090E  00DB               	movwf	eval_poly@x+1
  4792  090F  1683               	bsf	3,5	;RP0=1, select bank1
  4793  0910  0841               	movf	exp@x^(0+128),w
  4794  0911  1283               	bcf	3,5	;RP0=0, select bank0
  4795  0912  00DA               	movwf	eval_poly@x
  4796  0913  3001               	movlw	(low ((exp@coeff-__stringbase)| (0+32768)))& (0+255)
  4797  0914  00DE               	movwf	eval_poly@d
  4798  0915  3009               	movlw	9
  4799  0916  00DF               	movwf	eval_poly@n
  4800  0917  01E0               	clrf	eval_poly@n+1
  4801  0918  160A  118A  2009  120A  158A  	fcall	_eval_poly
  4802  091D  085D               	movf	?_eval_poly+3,w
  4803  091E  00ED               	movwf	ldexp@value+3
  4804  091F  085C               	movf	?_eval_poly+2,w
  4805  0920  00EC               	movwf	ldexp@value+2
  4806  0921  085B               	movf	?_eval_poly+1,w
  4807  0922  00EB               	movwf	ldexp@value+1
  4808  0923  085A               	movf	?_eval_poly,w
  4809  0924  00EA               	movwf	ldexp@value
  4810  0925  1683               	bsf	3,5	;RP0=1, select bank1
  4811  0926  084E               	movf	(exp@exponent+1)^(0+128),w
  4812  0927  1283               	bcf	3,5	;RP0=0, select bank0
  4813  0928  00EF               	movwf	ldexp@newexp+1
  4814  0929  1683               	bsf	3,5	;RP0=1, select bank1
  4815  092A  084D               	movf	exp@exponent^(0+128),w
  4816  092B  1283               	bcf	3,5	;RP0=0, select bank0
  4817  092C  00EE               	movwf	ldexp@newexp
  4818  092D  26AE  120A  158A   	fcall	_ldexp
  4819  0930  086D               	movf	?_ldexp+3,w
  4820  0931  1683               	bsf	3,5	;RP0=1, select bank1
  4821  0932  00C4               	movwf	(exp@x+3)^(0+128)
  4822  0933  1283               	bcf	3,5	;RP0=0, select bank0
  4823  0934  086C               	movf	?_ldexp+2,w
  4824  0935  1683               	bsf	3,5	;RP0=1, select bank1
  4825  0936  00C3               	movwf	(exp@x+2)^(0+128)
  4826  0937  1283               	bcf	3,5	;RP0=0, select bank0
  4827  0938  086B               	movf	?_ldexp+1,w
  4828  0939  1683               	bsf	3,5	;RP0=1, select bank1
  4829  093A  00C2               	movwf	(exp@x+1)^(0+128)
  4830  093B  1283               	bcf	3,5	;RP0=0, select bank0
  4831  093C  086A               	movf	?_ldexp,w
  4832  093D  1683               	bsf	3,5	;RP0=1, select bank1
  4833  093E  00C1               	movwf	exp@x^(0+128)
  4834  093F  084F               	movf	exp@sign^(0+128),w
  4835  0940  1903               	btfsc	3,2
  4836  0941  0008               	return
  4837  0942  307F               	movlw	127
  4838  0943  00CC               	movwf	(_exp$786+3)^(0+128)
  4839  0944  00CB               	movwf	(_exp$786+2)^(0+128)
  4840  0945  30FE               	movlw	254
  4841  0946  00CA               	movwf	(_exp$786+1)^(0+128)
  4842  0947  30F7               	movlw	247
  4843  0948  00C9               	movwf	_exp$786^(0+128)
  4844  0949  0844               	movf	(exp@x+3)^(0+128),w
  4845  094A  064C               	xorwf	(_exp$786+3)^(0+128),w
  4846  094B  1D03               	skipz
  4847  094C  2957               	goto	u3825
  4848  094D  0843               	movf	(exp@x+2)^(0+128),w
  4849  094E  064B               	xorwf	(_exp$786+2)^(0+128),w
  4850  094F  1D03               	skipz
  4851  0950  2957               	goto	u3825
  4852  0951  0842               	movf	(exp@x+1)^(0+128),w
  4853  0952  064A               	xorwf	(_exp$786+1)^(0+128),w
  4854  0953  1D03               	skipz
  4855  0954  2957               	goto	u3825
  4856  0955  0841               	movf	exp@x^(0+128),w
  4857  0956  0649               	xorwf	_exp$786^(0+128),w
  4858  0957                     u3825:	
  4859  0957  1D03               	skipz
  4860  0958  295E               	goto	l3965
  4861  0959  01C1               	clrf	?_exp^(0+128)
  4862  095A  01C2               	clrf	(?_exp+1)^(0+128)
  4863  095B  01C3               	clrf	(?_exp+2)^(0+128)
  4864  095C  01C4               	clrf	(?_exp+3)^(0+128)
  4865  095D  0008               	return
  4866  095E                     l3965:	
  4867  095E  0844               	movf	(exp@x+3)^(0+128),w
  4868  095F  1283               	bcf	3,5	;RP0=0, select bank0
  4869  0960  00A8               	movwf	___fldiv@f2+3
  4870  0961  1683               	bsf	3,5	;RP0=1, select bank1
  4871  0962  0843               	movf	(exp@x+2)^(0+128),w
  4872  0963  1283               	bcf	3,5	;RP0=0, select bank0
  4873  0964  00A7               	movwf	___fldiv@f2+2
  4874  0965  1683               	bsf	3,5	;RP0=1, select bank1
  4875  0966  0842               	movf	(exp@x+1)^(0+128),w
  4876  0967  1283               	bcf	3,5	;RP0=0, select bank0
  4877  0968  00A6               	movwf	___fldiv@f2+1
  4878  0969  1683               	bsf	3,5	;RP0=1, select bank1
  4879  096A  0841               	movf	exp@x^(0+128),w
  4880  096B  1283               	bcf	3,5	;RP0=0, select bank0
  4881  096C  00A5               	movwf	___fldiv@f2
  4882  096D  303F               	movlw	63
  4883  096E  00AC               	movwf	___fldiv@f1+3
  4884  096F  3080               	movlw	128
  4885  0970  00AB               	movwf	___fldiv@f1+2
  4886  0971  01AA               	clrf	___fldiv@f1+1
  4887  0972  01A9               	clrf	___fldiv@f1
  4888  0973  24CE               	fcall	___fldiv
  4889  0974  0828               	movf	?___fldiv+3,w
  4890  0975  1683               	bsf	3,5	;RP0=1, select bank1
  4891  0976  00C4               	movwf	(?_exp+3)^(0+128)
  4892  0977  1283               	bcf	3,5	;RP0=0, select bank0
  4893  0978  0827               	movf	?___fldiv+2,w
  4894  0979  1683               	bsf	3,5	;RP0=1, select bank1
  4895  097A  00C3               	movwf	(?_exp+2)^(0+128)
  4896  097B  1283               	bcf	3,5	;RP0=0, select bank0
  4897  097C  0826               	movf	?___fldiv+1,w
  4898  097D  1683               	bsf	3,5	;RP0=1, select bank1
  4899  097E  00C2               	movwf	(?_exp+1)^(0+128)
  4900  097F  1283               	bcf	3,5	;RP0=0, select bank0
  4901  0980  0825               	movf	?___fldiv,w
  4902  0981  1683               	bsf	3,5	;RP0=1, select bank1
  4903  0982  00C1               	movwf	?_exp^(0+128)
  4904  0983  0008               	return
  4905  0984                     __end_of_exp:	
  4906  0984                     __ptext31:	
  4907 ;; *************** function ___awtofl *****************
  4908 ;; Defined at:
  4909 ;;		line 31 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\awtofl.c"
  4910 ;; Parameters:    Size  Location     Type
  4911 ;;  c               2    4[BANK0 ] int 
  4912 ;; Auto vars:     Size  Location     Type
  4913 ;;  f1              4    0        int 
  4914 ;;  sign            1    8[COMMON] unsigned char 
  4915 ;; Return value:  Size  Location     Type
  4916 ;;                  4    4[BANK0 ] unsigned char 
  4917 ;; Registers used:
  4918 ;;		wreg, status,2, status,0, pclath, cstack
  4919 ;; Tracked objects:
  4920 ;;		On entry : 300/0
  4921 ;;		On exit  : 300/0
  4922 ;;		Unchanged: 0/0
  4923 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4924 ;;      Params:         0       4       0       0       0
  4925 ;;      Locals:         1       0       0       0       0
  4926 ;;      Temps:          0       0       0       0       0
  4927 ;;      Totals:         1       4       0       0       0
  4928 ;;Total ram usage:        5 bytes
  4929 ;; Hardware stack levels used:    1
  4930 ;; Hardware stack levels required when called:    2
  4931 ;; This function calls:
  4932 ;;		___flpack
  4933 ;; This function is called by:
  4934 ;;		_format_double
  4935 ;;		_log
  4936 ;;		_exp
  4937 ;; This function uses a non-reentrant model
  4938 ;;
  4939                           
  4940                           
  4941                           ;psect for function ___awtofl
  4942  0984                     ___awtofl:	
  4943                           
  4944                           ;incstack = 0
  4945                           ; Regs used in ___awtofl: [wreg+status,2+status,0+pclath+cstack]
  4946  0984  01F8               	clrf	___awtofl@sign
  4947  0985  1FA6               	btfss	___awtofl@c+1,7
  4948  0986  298D               	goto	l3701
  4949  0987  09A5               	comf	___awtofl@c,f
  4950  0988  09A6               	comf	___awtofl@c+1,f
  4951  0989  0AA5               	incf	___awtofl@c,f
  4952  098A  1903               	skipnz
  4953  098B  0AA6               	incf	___awtofl@c+1,f
  4954  098C  0AF8               	incf	___awtofl@sign,f
  4955  098D                     l3701:	
  4956  098D  0825               	movf	___awtofl@c,w
  4957  098E  00F2               	movwf	___flpack@arg
  4958  098F  0826               	movf	___awtofl@c+1,w
  4959  0990  00F3               	movwf	___flpack@arg+1
  4960  0991  3096               	movlw	150
  4961  0992  01F4               	clrf	___flpack@arg+2
  4962  0993  01F5               	clrf	___flpack@arg+3
  4963  0994  00F6               	movwf	___flpack@exp
  4964  0995  0878               	movf	___awtofl@sign,w
  4965  0996  00F7               	movwf	___flpack@sign
  4966  0997  255C               	fcall	___flpack
  4967  0998  0875               	movf	?___flpack+3,w
  4968  0999  1283               	bcf	3,5	;RP0=0, select bank0
  4969  099A  00A8               	movwf	?___awtofl+3
  4970  099B  0874               	movf	?___flpack+2,w
  4971  099C  00A7               	movwf	?___awtofl+2
  4972  099D  0873               	movf	?___flpack+1,w
  4973  099E  00A6               	movwf	?___awtofl+1
  4974  099F  0872               	movf	?___flpack,w
  4975  09A0  00A5               	movwf	?___awtofl
  4976  09A1  0008               	return
  4977  09A2                     __end_of___awtofl:	
  4978  09A2                     __ptext18:	
  4979 ;; *************** function _floor *****************
  4980 ;; Defined at:
  4981 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\floor.c"
  4982 ;; Parameters:    Size  Location     Type
  4983 ;;  x               4   23[BANK1 ] int 
  4984 ;; Auto vars:     Size  Location     Type
  4985 ;;  i               4   27[BANK1 ] int 
  4986 ;;  expon           2   31[BANK1 ] int 
  4987 ;; Return value:  Size  Location     Type
  4988 ;;                  4   23[BANK1 ] int 
  4989 ;; Registers used:
  4990 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4991 ;; Tracked objects:
  4992 ;;		On entry : 300/100
  4993 ;;		On exit  : 300/100
  4994 ;;		Unchanged: 0/0
  4995 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4996 ;;      Params:         0       0       4       0       0
  4997 ;;      Locals:         0       0       6       0       0
  4998 ;;      Temps:          0       0       0       0       0
  4999 ;;      Totals:         0       0      10       0       0
  5000 ;;Total ram usage:       10 bytes
  5001 ;; Hardware stack levels used:    1
  5002 ;; Hardware stack levels required when called:    3
  5003 ;; This function calls:
  5004 ;;		___altofl
  5005 ;;		___fladd
  5006 ;;		___flge
  5007 ;;		___fltol
  5008 ;;		_frexp
  5009 ;; This function is called by:
  5010 ;;		_format_double
  5011 ;;		_exp
  5012 ;; This function uses a non-reentrant model
  5013 ;;
  5014                           
  5015                           
  5016                           ;psect for function _floor
  5017  09A2                     _floor:	
  5018                           
  5019                           ;incstack = 0
  5020                           ; Regs used in _floor: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5021  09A2  083A               	movf	(floor@x+3)^(0+128),w
  5022  09A3  00F5               	movwf	frexp@value+3
  5023  09A4  0839               	movf	(floor@x+2)^(0+128),w
  5024  09A5  00F4               	movwf	frexp@value+2
  5025  09A6  0838               	movf	(floor@x+1)^(0+128),w
  5026  09A7  00F3               	movwf	frexp@value+1
  5027  09A8  0837               	movf	floor@x^(0+128),w
  5028  09A9  00F2               	movwf	frexp@value
  5029  09AA  30BF               	movlw	(low (floor@expon| 0))& (0+255)
  5030  09AB  00F6               	movwf	frexp@eptr
  5031  09AC  2640  120A  158A   	fcall	_frexp
  5032  09AF  1683               	bsf	3,5	;RP0=1, select bank1
  5033  09B0  1FC0               	btfss	(floor@expon+1)^(0+128),7
  5034  09B1  29D6               	goto	l3679
  5035  09B2  083A               	movf	(floor@x+3)^(0+128),w
  5036  09B3  00F5               	movwf	___flge@ff1+3
  5037  09B4  0839               	movf	(floor@x+2)^(0+128),w
  5038  09B5  00F4               	movwf	___flge@ff1+2
  5039  09B6  0838               	movf	(floor@x+1)^(0+128),w
  5040  09B7  00F3               	movwf	___flge@ff1+1
  5041  09B8  0837               	movf	floor@x^(0+128),w
  5042  09B9  00F2               	movwf	___flge@ff1
  5043  09BA  01F6               	clrf	___flge@ff2
  5044  09BB  01F7               	clrf	___flge@ff2+1
  5045  09BC  01F8               	clrf	___flge@ff2+2
  5046  09BD  01F9               	clrf	___flge@ff2+3
  5047  09BE  160A  118A  2679  120A  158A  	fcall	___flge
  5048  09C3  1803               	btfsc	3,0
  5049  09C4  29CF               	goto	l902
  5050  09C5  30BF               	movlw	191
  5051  09C6  1683               	bsf	3,5	;RP0=1, select bank1
  5052  09C7  1303               	bcf	3,6	;RP1=0, select bank1
  5053  09C8  00BA               	movwf	(?_floor+3)^(0+128)
  5054  09C9  3080               	movlw	128
  5055  09CA  00B9               	movwf	(?_floor+2)^(0+128)
  5056  09CB  3000               	movlw	0
  5057  09CC  01B8               	clrf	(?_floor+1)^(0+128)
  5058  09CD  01B7               	clrf	?_floor^(0+128)
  5059  09CE  0008               	return
  5060  09CF                     l902:	
  5061  09CF  1683               	bsf	3,5	;RP0=1, select bank1
  5062  09D0  1303               	bcf	3,6	;RP1=0, select bank1
  5063  09D1  01B7               	clrf	?_floor^(0+128)
  5064  09D2  01B8               	clrf	(?_floor+1)^(0+128)
  5065  09D3  01B9               	clrf	(?_floor+2)^(0+128)
  5066  09D4  01BA               	clrf	(?_floor+3)^(0+128)
  5067  09D5  0008               	return
  5068  09D6                     l3679:	
  5069  09D6  3000               	movlw	0
  5070  09D7  0240               	subwf	(floor@expon+1)^(0+128),w
  5071  09D8  301D               	movlw	29
  5072  09D9  1903               	skipnz
  5073  09DA  023F               	subwf	floor@expon^(0+128),w
  5074  09DB  1803               	btfsc	3,0
  5075  09DC  0008               	return
  5076  09DD  083A               	movf	(floor@x+3)^(0+128),w
  5077  09DE  00AB               	movwf	(___fltol@f1+3)^(0+128)
  5078  09DF  0839               	movf	(floor@x+2)^(0+128),w
  5079  09E0  00AA               	movwf	(___fltol@f1+2)^(0+128)
  5080  09E1  0838               	movf	(floor@x+1)^(0+128),w
  5081  09E2  00A9               	movwf	(___fltol@f1+1)^(0+128)
  5082  09E3  0837               	movf	floor@x^(0+128),w
  5083  09E4  00A8               	movwf	___fltol@f1^(0+128)
  5084  09E5  160A  118A  27A9  120A  158A  	fcall	___fltol
  5085  09EA  082B               	movf	(?___fltol+3)^(0+128),w
  5086  09EB  00B5               	movwf	(___altofl@c+3)^(0+128)
  5087  09EC  082A               	movf	(?___fltol+2)^(0+128),w
  5088  09ED  00B4               	movwf	(___altofl@c+2)^(0+128)
  5089  09EE  0829               	movf	(?___fltol+1)^(0+128),w
  5090  09EF  00B3               	movwf	(___altofl@c+1)^(0+128)
  5091  09F0  0828               	movf	?___fltol^(0+128),w
  5092  09F1  00B2               	movwf	___altofl@c^(0+128)
  5093  09F2  267E               	fcall	___altofl
  5094  09F3  0835               	movf	(?___altofl+3)^(0+128),w
  5095  09F4  00BE               	movwf	(floor@i+3)^(0+128)
  5096  09F5  0834               	movf	(?___altofl+2)^(0+128),w
  5097  09F6  00BD               	movwf	(floor@i+2)^(0+128)
  5098  09F7  0833               	movf	(?___altofl+1)^(0+128),w
  5099  09F8  00BC               	movwf	(floor@i+1)^(0+128)
  5100  09F9  0832               	movf	?___altofl^(0+128),w
  5101  09FA  00BB               	movwf	floor@i^(0+128)
  5102  09FB  083A               	movf	(floor@x+3)^(0+128),w
  5103  09FC  00F5               	movwf	___flge@ff1+3
  5104  09FD  0839               	movf	(floor@x+2)^(0+128),w
  5105  09FE  00F4               	movwf	___flge@ff1+2
  5106  09FF  0838               	movf	(floor@x+1)^(0+128),w
  5107  0A00  00F3               	movwf	___flge@ff1+1
  5108  0A01  0837               	movf	floor@x^(0+128),w
  5109  0A02  00F2               	movwf	___flge@ff1
  5110  0A03  083E               	movf	(floor@i+3)^(0+128),w
  5111  0A04  00F9               	movwf	___flge@ff2+3
  5112  0A05  083D               	movf	(floor@i+2)^(0+128),w
  5113  0A06  00F8               	movwf	___flge@ff2+2
  5114  0A07  083C               	movf	(floor@i+1)^(0+128),w
  5115  0A08  00F7               	movwf	___flge@ff2+1
  5116  0A09  083B               	movf	floor@i^(0+128),w
  5117  0A0A  00F6               	movwf	___flge@ff2
  5118  0A0B  160A  118A  2679  120A  158A  	fcall	___flge
  5119  0A10  1803               	btfsc	3,0
  5120  0A11  2A3D               	goto	l3689
  5121  0A12  30BF               	movlw	191
  5122  0A13  1283               	bcf	3,5	;RP0=0, select bank0
  5123  0A14  1303               	bcf	3,6	;RP1=0, select bank0
  5124  0A15  00CE               	movwf	___fladd@f1+3
  5125  0A16  3080               	movlw	128
  5126  0A17  00CD               	movwf	___fladd@f1+2
  5127  0A18  01CC               	clrf	___fladd@f1+1
  5128  0A19  01CB               	clrf	___fladd@f1
  5129  0A1A  1683               	bsf	3,5	;RP0=1, select bank1
  5130  0A1B  083E               	movf	(floor@i+3)^(0+128),w
  5131  0A1C  1283               	bcf	3,5	;RP0=0, select bank0
  5132  0A1D  00D2               	movwf	___fladd@f2+3
  5133  0A1E  1683               	bsf	3,5	;RP0=1, select bank1
  5134  0A1F  083D               	movf	(floor@i+2)^(0+128),w
  5135  0A20  1283               	bcf	3,5	;RP0=0, select bank0
  5136  0A21  00D1               	movwf	___fladd@f2+2
  5137  0A22  1683               	bsf	3,5	;RP0=1, select bank1
  5138  0A23  083C               	movf	(floor@i+1)^(0+128),w
  5139  0A24  1283               	bcf	3,5	;RP0=0, select bank0
  5140  0A25  00D0               	movwf	___fladd@f2+1
  5141  0A26  1683               	bsf	3,5	;RP0=1, select bank1
  5142  0A27  083B               	movf	floor@i^(0+128),w
  5143  0A28  1283               	bcf	3,5	;RP0=0, select bank0
  5144  0A29  00CF               	movwf	___fladd@f2
  5145  0A2A  160A  118A  2096   	fcall	___fladd
  5146  0A2D  084E               	movf	?___fladd+3,w
  5147  0A2E  1683               	bsf	3,5	;RP0=1, select bank1
  5148  0A2F  00BA               	movwf	(?_floor+3)^(0+128)
  5149  0A30  1283               	bcf	3,5	;RP0=0, select bank0
  5150  0A31  084D               	movf	?___fladd+2,w
  5151  0A32  1683               	bsf	3,5	;RP0=1, select bank1
  5152  0A33  00B9               	movwf	(?_floor+2)^(0+128)
  5153  0A34  1283               	bcf	3,5	;RP0=0, select bank0
  5154  0A35  084C               	movf	?___fladd+1,w
  5155  0A36  1683               	bsf	3,5	;RP0=1, select bank1
  5156  0A37  00B8               	movwf	(?_floor+1)^(0+128)
  5157  0A38  1283               	bcf	3,5	;RP0=0, select bank0
  5158  0A39  084B               	movf	?___fladd,w
  5159  0A3A  1683               	bsf	3,5	;RP0=1, select bank1
  5160  0A3B  00B7               	movwf	?_floor^(0+128)
  5161  0A3C  0008               	return
  5162  0A3D                     l3689:	
  5163  0A3D  1683               	bsf	3,5	;RP0=1, select bank1
  5164  0A3E  1303               	bcf	3,6	;RP1=0, select bank1
  5165  0A3F  083E               	movf	(floor@i+3)^(0+128),w
  5166  0A40  00BA               	movwf	(?_floor+3)^(0+128)
  5167  0A41  083D               	movf	(floor@i+2)^(0+128),w
  5168  0A42  00B9               	movwf	(?_floor+2)^(0+128)
  5169  0A43  083C               	movf	(floor@i+1)^(0+128),w
  5170  0A44  00B8               	movwf	(?_floor+1)^(0+128)
  5171  0A45  083B               	movf	floor@i^(0+128),w
  5172  0A46  00B7               	movwf	?_floor^(0+128)
  5173  0A47  0008               	return
  5174  0A48                     __end_of_floor:	
  5175  0A48                     __ptext6:	
  5176 ;; *************** function _measure_capacitance *****************
  5177 ;; Defined at:
  5178 ;;		line 113 in file "../../../lib/../src/measure.c"
  5179 ;; Parameters:    Size  Location     Type
  5180 ;;		None
  5181 ;; Auto vars:     Size  Location     Type
  5182 ;;  Cin             4   33[BANK1 ] unsigned char 
  5183 ;;  var             2   31[BANK1 ] unsigned short 
  5184 ;;  unit            1   30[BANK1 ] unsigned char 
  5185 ;; Return value:  Size  Location     Type
  5186 ;;		None               void
  5187 ;; Registers used:
  5188 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5189 ;; Tracked objects:
  5190 ;;		On entry : 300/0
  5191 ;;		On exit  : 0/0
  5192 ;;		Unchanged: 0/0
  5193 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5194 ;;      Params:         0       0       0       0       0
  5195 ;;      Locals:         0       0      19       0       0
  5196 ;;      Temps:          0       0       0       0       0
  5197 ;;      Totals:         0       0      19       0       0
  5198 ;;Total ram usage:       19 bytes
  5199 ;; Hardware stack levels used:    1
  5200 ;; Hardware stack levels required when called:    7
  5201 ;; This function calls:
  5202 ;;		___fldiv
  5203 ;;		___flge
  5204 ;;		___flmul
  5205 ;;		___flsub
  5206 ;;		___fltol
  5207 ;;		___lwtofl
  5208 ;;		_lcd_gotoxy
  5209 ;;		_measure_freq
  5210 ;;		_print_reading
  5211 ;;		_print_unit
  5212 ;;		_put_str
  5213 ;; This function is called by:
  5214 ;;		_main
  5215 ;; This function uses a non-reentrant model
  5216 ;;
  5217                           
  5218                           
  5219                           ;psect for function _measure_capacitance
  5220  0A48                     _measure_capacitance:	
  5221                           
  5222                           ;incstack = 0
  5223                           ; Regs used in _measure_capacitance: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack
      +                          ]
  5224  0A48  3000               	movlw	0
  5225                           
  5226                           ;measure.c: 114: unsigned char unit;
  5227                           ;measure.c: 115: unsigned short int var;
  5228                           ;measure.c: 117: double Cin;
  5229                           ;measure.c: 121: lcd_gotoxy(0, 0);
  5230  0A49  01F7               	clrf	lcd_gotoxy@row
  5231  0A4A  25AC  120A  158A   	fcall	_lcd_gotoxy
  5232                           
  5233                           ;measure.c: 122: put_str("Capacity ");
  5234  0A4D  3075               	movlw	(low ((STR_24-__stringbase)| (0+32768)))& (0+255)
  5235  0A4E  25DD               	fcall	_put_str
  5236                           
  5237                           ;measure.c: 124: var = measure_freq();
  5238  0A4F  160A  118A  26C9  120A  158A  	fcall	_measure_freq
  5239  0A54  084B               	movf	?_measure_freq+1,w
  5240  0A55  1683               	bsf	3,5	;RP0=1, select bank1
  5241  0A56  00C0               	movwf	(measure_capacitance@var+1)^(0+128)
  5242  0A57  1283               	bcf	3,5	;RP0=0, select bank0
  5243  0A58  084A               	movf	?_measure_freq,w
  5244  0A59  1683               	bsf	3,5	;RP0=1, select bank1
  5245  0A5A  00BF               	movwf	measure_capacitance@var^(0+128)
  5246                           
  5247                           ;measure.c: 126: F3 = (double)var;
  5248  0A5B  0840               	movf	(measure_capacitance@var+1)^(0+128),w
  5249  0A5C  1283               	bcf	3,5	;RP0=0, select bank0
  5250  0A5D  00D1               	movwf	___lwtofl@c+1
  5251  0A5E  1683               	bsf	3,5	;RP0=1, select bank1
  5252  0A5F  083F               	movf	measure_capacitance@var^(0+128),w
  5253  0A60  1283               	bcf	3,5	;RP0=0, select bank0
  5254  0A61  00D0               	movwf	___lwtofl@c
  5255  0A62  2548               	fcall	___lwtofl
  5256  0A63  0853               	movf	?___lwtofl+3,w
  5257  0A64  1683               	bsf	3,5	;RP0=1, select bank1
  5258  0A65  00E8               	movwf	(_F3+3)^(0+128)
  5259  0A66  1283               	bcf	3,5	;RP0=0, select bank0
  5260  0A67  0852               	movf	?___lwtofl+2,w
  5261  0A68  1683               	bsf	3,5	;RP0=1, select bank1
  5262  0A69  00E7               	movwf	(_F3+2)^(0+128)
  5263  0A6A  1283               	bcf	3,5	;RP0=0, select bank0
  5264  0A6B  0851               	movf	?___lwtofl+1,w
  5265  0A6C  1683               	bsf	3,5	;RP0=1, select bank1
  5266  0A6D  00E6               	movwf	(_F3+1)^(0+128)
  5267  0A6E  1283               	bcf	3,5	;RP0=0, select bank0
  5268  0A6F  0850               	movf	?___lwtofl,w
  5269  0A70  1683               	bsf	3,5	;RP0=1, select bank1
  5270  0A71  00E5               	movwf	_F3^(0+128)
  5271                           
  5272                           ;measure.c: 149: putchar_ptr = &output_putch;
  5273  0A72  3001               	movlw	(low (fp__output_putch-fpbase))& (0+255)
  5274  0A73  00FB               	movwf	_putchar_ptr
  5275                           
  5276                           ;measure.c: 151: if(F3 > F1)
  5277  0A74  086F               	movf	(_F1+3)^(0+128),w
  5278  0A75  00F5               	movwf	___flge@ff1+3
  5279  0A76  086E               	movf	(_F1+2)^(0+128),w
  5280  0A77  00F4               	movwf	___flge@ff1+2
  5281  0A78  086D               	movf	(_F1+1)^(0+128),w
  5282  0A79  00F3               	movwf	___flge@ff1+1
  5283  0A7A  086C               	movf	_F1^(0+128),w
  5284  0A7B  00F2               	movwf	___flge@ff1
  5285  0A7C  0868               	movf	(_F3+3)^(0+128),w
  5286  0A7D  00F9               	movwf	___flge@ff2+3
  5287  0A7E  0867               	movf	(_F3+2)^(0+128),w
  5288  0A7F  00F8               	movwf	___flge@ff2+2
  5289  0A80  0866               	movf	(_F3+1)^(0+128),w
  5290  0A81  00F7               	movwf	___flge@ff2+1
  5291  0A82  0865               	movf	_F3^(0+128),w
  5292  0A83  00F6               	movwf	___flge@ff2
  5293  0A84  160A  118A  2679  120A  158A  	fcall	___flge
  5294  0A89  1803               	btfsc	3,0
  5295  0A8A  2A95               	goto	l4245
  5296                           
  5297                           ;measure.c: 152: F3 = F1;
  5298  0A8B  1683               	bsf	3,5	;RP0=1, select bank1
  5299  0A8C  1303               	bcf	3,6	;RP1=0, select bank1
  5300  0A8D  086F               	movf	(_F1+3)^(0+128),w
  5301  0A8E  00E8               	movwf	(_F3+3)^(0+128)
  5302  0A8F  086E               	movf	(_F1+2)^(0+128),w
  5303  0A90  00E7               	movwf	(_F3+2)^(0+128)
  5304  0A91  086D               	movf	(_F1+1)^(0+128),w
  5305  0A92  00E6               	movwf	(_F3+1)^(0+128)
  5306  0A93  086C               	movf	_F1^(0+128),w
  5307  0A94  00E5               	movwf	_F3^(0+128)
  5308  0A95                     l4245:	
  5309                           
  5310                           ;measure.c: 154: Cin = F2 * F2 * (F1 * F1 - F3 * F3) * CCal;
  5311  0A95  1683               	bsf	3,5	;RP0=1, select bank1
  5312  0A96  1303               	bcf	3,6	;RP1=0, select bank1
  5313  0A97  0868               	movf	(_F3+3)^(0+128),w
  5314  0A98  1283               	bcf	3,5	;RP0=0, select bank0
  5315  0A99  00BB               	movwf	___flmul@f1+3
  5316  0A9A  1683               	bsf	3,5	;RP0=1, select bank1
  5317  0A9B  0867               	movf	(_F3+2)^(0+128),w
  5318  0A9C  1283               	bcf	3,5	;RP0=0, select bank0
  5319  0A9D  00BA               	movwf	___flmul@f1+2
  5320  0A9E  1683               	bsf	3,5	;RP0=1, select bank1
  5321  0A9F  0866               	movf	(_F3+1)^(0+128),w
  5322  0AA0  1283               	bcf	3,5	;RP0=0, select bank0
  5323  0AA1  00B9               	movwf	___flmul@f1+1
  5324  0AA2  1683               	bsf	3,5	;RP0=1, select bank1
  5325  0AA3  0865               	movf	_F3^(0+128),w
  5326  0AA4  1283               	bcf	3,5	;RP0=0, select bank0
  5327  0AA5  00B8               	movwf	___flmul@f1
  5328  0AA6  1683               	bsf	3,5	;RP0=1, select bank1
  5329  0AA7  0868               	movf	(_F3+3)^(0+128),w
  5330  0AA8  1283               	bcf	3,5	;RP0=0, select bank0
  5331  0AA9  00BF               	movwf	___flmul@f2+3
  5332  0AAA  1683               	bsf	3,5	;RP0=1, select bank1
  5333  0AAB  0867               	movf	(_F3+2)^(0+128),w
  5334  0AAC  1283               	bcf	3,5	;RP0=0, select bank0
  5335  0AAD  00BE               	movwf	___flmul@f2+2
  5336  0AAE  1683               	bsf	3,5	;RP0=1, select bank1
  5337  0AAF  0866               	movf	(_F3+1)^(0+128),w
  5338  0AB0  1283               	bcf	3,5	;RP0=0, select bank0
  5339  0AB1  00BD               	movwf	___flmul@f2+1
  5340  0AB2  1683               	bsf	3,5	;RP0=1, select bank1
  5341  0AB3  0865               	movf	_F3^(0+128),w
  5342  0AB4  1283               	bcf	3,5	;RP0=0, select bank0
  5343  0AB5  00BC               	movwf	___flmul@f2
  5344  0AB6  160A  118A  25E0  120A  158A  	fcall	___flmul
  5345  0ABB  083B               	movf	?___flmul+3,w
  5346  0ABC  00DD               	movwf	___flsub@f2+3
  5347  0ABD  083A               	movf	?___flmul+2,w
  5348  0ABE  00DC               	movwf	___flsub@f2+2
  5349  0ABF  0839               	movf	?___flmul+1,w
  5350  0AC0  00DB               	movwf	___flsub@f2+1
  5351  0AC1  0838               	movf	?___flmul,w
  5352  0AC2  00DA               	movwf	___flsub@f2
  5353  0AC3  1683               	bsf	3,5	;RP0=1, select bank1
  5354  0AC4  086F               	movf	(_F1+3)^(0+128),w
  5355  0AC5  1283               	bcf	3,5	;RP0=0, select bank0
  5356  0AC6  00BB               	movwf	___flmul@f1+3
  5357  0AC7  1683               	bsf	3,5	;RP0=1, select bank1
  5358  0AC8  086E               	movf	(_F1+2)^(0+128),w
  5359  0AC9  1283               	bcf	3,5	;RP0=0, select bank0
  5360  0ACA  00BA               	movwf	___flmul@f1+2
  5361  0ACB  1683               	bsf	3,5	;RP0=1, select bank1
  5362  0ACC  086D               	movf	(_F1+1)^(0+128),w
  5363  0ACD  1283               	bcf	3,5	;RP0=0, select bank0
  5364  0ACE  00B9               	movwf	___flmul@f1+1
  5365  0ACF  1683               	bsf	3,5	;RP0=1, select bank1
  5366  0AD0  086C               	movf	_F1^(0+128),w
  5367  0AD1  1283               	bcf	3,5	;RP0=0, select bank0
  5368  0AD2  00B8               	movwf	___flmul@f1
  5369  0AD3  1683               	bsf	3,5	;RP0=1, select bank1
  5370  0AD4  086F               	movf	(_F1+3)^(0+128),w
  5371  0AD5  1283               	bcf	3,5	;RP0=0, select bank0
  5372  0AD6  00BF               	movwf	___flmul@f2+3
  5373  0AD7  1683               	bsf	3,5	;RP0=1, select bank1
  5374  0AD8  086E               	movf	(_F1+2)^(0+128),w
  5375  0AD9  1283               	bcf	3,5	;RP0=0, select bank0
  5376  0ADA  00BE               	movwf	___flmul@f2+2
  5377  0ADB  1683               	bsf	3,5	;RP0=1, select bank1
  5378  0ADC  086D               	movf	(_F1+1)^(0+128),w
  5379  0ADD  1283               	bcf	3,5	;RP0=0, select bank0
  5380  0ADE  00BD               	movwf	___flmul@f2+1
  5381  0ADF  1683               	bsf	3,5	;RP0=1, select bank1
  5382  0AE0  086C               	movf	_F1^(0+128),w
  5383  0AE1  1283               	bcf	3,5	;RP0=0, select bank0
  5384  0AE2  00BC               	movwf	___flmul@f2
  5385  0AE3  160A  118A  25E0  120A  158A  	fcall	___flmul
  5386  0AE8  083B               	movf	?___flmul+3,w
  5387  0AE9  00E1               	movwf	___flsub@f1+3
  5388  0AEA  083A               	movf	?___flmul+2,w
  5389  0AEB  00E0               	movwf	___flsub@f1+2
  5390  0AEC  0839               	movf	?___flmul+1,w
  5391  0AED  00DF               	movwf	___flsub@f1+1
  5392  0AEE  0838               	movf	?___flmul,w
  5393  0AEF  00DE               	movwf	___flsub@f1
  5394  0AF0  2602  120A  158A   	fcall	___flsub
  5395  0AF3  085D               	movf	?___flsub+3,w
  5396  0AF4  1683               	bsf	3,5	;RP0=1, select bank1
  5397  0AF5  00B5               	movwf	(_measure_capacitance$1048+3)^(0+128)
  5398  0AF6  1283               	bcf	3,5	;RP0=0, select bank0
  5399  0AF7  085C               	movf	?___flsub+2,w
  5400  0AF8  1683               	bsf	3,5	;RP0=1, select bank1
  5401  0AF9  00B4               	movwf	(_measure_capacitance$1048+2)^(0+128)
  5402  0AFA  1283               	bcf	3,5	;RP0=0, select bank0
  5403  0AFB  085B               	movf	?___flsub+1,w
  5404  0AFC  1683               	bsf	3,5	;RP0=1, select bank1
  5405  0AFD  00B3               	movwf	(_measure_capacitance$1048+1)^(0+128)
  5406  0AFE  1283               	bcf	3,5	;RP0=0, select bank0
  5407  0AFF  085A               	movf	?___flsub,w
  5408  0B00  1683               	bsf	3,5	;RP0=1, select bank1
  5409  0B01  00B2               	movwf	_measure_capacitance$1048^(0+128)
  5410                           
  5411                           ;measure.c: 154: Cin = F2 * F2 * (F1 * F1 - F3 * F3) * CCal;
  5412  0B02  1703               	bsf	3,6	;RP1=1, select bank3
  5413  0B03  0813               	movf	(_F2+3)^(0+384),w
  5414  0B04  1283               	bcf	3,5	;RP0=0, select bank0
  5415  0B05  1303               	bcf	3,6	;RP1=0, select bank0
  5416  0B06  00BB               	movwf	___flmul@f1+3
  5417  0B07  1683               	bsf	3,5	;RP0=1, select bank3
  5418  0B08  1703               	bsf	3,6	;RP1=1, select bank3
  5419  0B09  0812               	movf	(_F2+2)^(0+384),w
  5420  0B0A  1283               	bcf	3,5	;RP0=0, select bank0
  5421  0B0B  1303               	bcf	3,6	;RP1=0, select bank0
  5422  0B0C  00BA               	movwf	___flmul@f1+2
  5423  0B0D  1683               	bsf	3,5	;RP0=1, select bank3
  5424  0B0E  1703               	bsf	3,6	;RP1=1, select bank3
  5425  0B0F  0811               	movf	(_F2+1)^(0+384),w
  5426  0B10  1283               	bcf	3,5	;RP0=0, select bank0
  5427  0B11  1303               	bcf	3,6	;RP1=0, select bank0
  5428  0B12  00B9               	movwf	___flmul@f1+1
  5429  0B13  1683               	bsf	3,5	;RP0=1, select bank3
  5430  0B14  1703               	bsf	3,6	;RP1=1, select bank3
  5431  0B15  0810               	movf	_F2^(0+384),w
  5432  0B16  1283               	bcf	3,5	;RP0=0, select bank0
  5433  0B17  1303               	bcf	3,6	;RP1=0, select bank0
  5434  0B18  00B8               	movwf	___flmul@f1
  5435  0B19  1683               	bsf	3,5	;RP0=1, select bank1
  5436  0B1A  0835               	movf	(_measure_capacitance$1048+3)^(0+128),w
  5437  0B1B  1283               	bcf	3,5	;RP0=0, select bank0
  5438  0B1C  00BF               	movwf	___flmul@f2+3
  5439  0B1D  1683               	bsf	3,5	;RP0=1, select bank1
  5440  0B1E  0834               	movf	(_measure_capacitance$1048+2)^(0+128),w
  5441  0B1F  1283               	bcf	3,5	;RP0=0, select bank0
  5442  0B20  00BE               	movwf	___flmul@f2+2
  5443  0B21  1683               	bsf	3,5	;RP0=1, select bank1
  5444  0B22  0833               	movf	(_measure_capacitance$1048+1)^(0+128),w
  5445  0B23  1283               	bcf	3,5	;RP0=0, select bank0
  5446  0B24  00BD               	movwf	___flmul@f2+1
  5447  0B25  1683               	bsf	3,5	;RP0=1, select bank1
  5448  0B26  0832               	movf	_measure_capacitance$1048^(0+128),w
  5449  0B27  1283               	bcf	3,5	;RP0=0, select bank0
  5450  0B28  00BC               	movwf	___flmul@f2
  5451  0B29  160A  118A  25E0  120A  158A  	fcall	___flmul
  5452  0B2E  083B               	movf	?___flmul+3,w
  5453  0B2F  1683               	bsf	3,5	;RP0=1, select bank1
  5454  0B30  00B9               	movwf	(_measure_capacitance$1049+3)^(0+128)
  5455  0B31  1283               	bcf	3,5	;RP0=0, select bank0
  5456  0B32  083A               	movf	?___flmul+2,w
  5457  0B33  1683               	bsf	3,5	;RP0=1, select bank1
  5458  0B34  00B8               	movwf	(_measure_capacitance$1049+2)^(0+128)
  5459  0B35  1283               	bcf	3,5	;RP0=0, select bank0
  5460  0B36  0839               	movf	?___flmul+1,w
  5461  0B37  1683               	bsf	3,5	;RP0=1, select bank1
  5462  0B38  00B7               	movwf	(_measure_capacitance$1049+1)^(0+128)
  5463  0B39  1283               	bcf	3,5	;RP0=0, select bank0
  5464  0B3A  0838               	movf	?___flmul,w
  5465  0B3B  1683               	bsf	3,5	;RP0=1, select bank1
  5466  0B3C  00B6               	movwf	_measure_capacitance$1049^(0+128)
  5467                           
  5468                           ;measure.c: 154: Cin = F2 * F2 * (F1 * F1 - F3 * F3) * CCal;
  5469  0B3D  1703               	bsf	3,6	;RP1=1, select bank3
  5470  0B3E  0813               	movf	(_F2+3)^(0+384),w
  5471  0B3F  1283               	bcf	3,5	;RP0=0, select bank0
  5472  0B40  1303               	bcf	3,6	;RP1=0, select bank0
  5473  0B41  00BB               	movwf	___flmul@f1+3
  5474  0B42  1683               	bsf	3,5	;RP0=1, select bank3
  5475  0B43  1703               	bsf	3,6	;RP1=1, select bank3
  5476  0B44  0812               	movf	(_F2+2)^(0+384),w
  5477  0B45  1283               	bcf	3,5	;RP0=0, select bank0
  5478  0B46  1303               	bcf	3,6	;RP1=0, select bank0
  5479  0B47  00BA               	movwf	___flmul@f1+2
  5480  0B48  1683               	bsf	3,5	;RP0=1, select bank3
  5481  0B49  1703               	bsf	3,6	;RP1=1, select bank3
  5482  0B4A  0811               	movf	(_F2+1)^(0+384),w
  5483  0B4B  1283               	bcf	3,5	;RP0=0, select bank0
  5484  0B4C  1303               	bcf	3,6	;RP1=0, select bank0
  5485  0B4D  00B9               	movwf	___flmul@f1+1
  5486  0B4E  1683               	bsf	3,5	;RP0=1, select bank3
  5487  0B4F  1703               	bsf	3,6	;RP1=1, select bank3
  5488  0B50  0810               	movf	_F2^(0+384),w
  5489  0B51  1283               	bcf	3,5	;RP0=0, select bank0
  5490  0B52  1303               	bcf	3,6	;RP1=0, select bank0
  5491  0B53  00B8               	movwf	___flmul@f1
  5492  0B54  1683               	bsf	3,5	;RP0=1, select bank1
  5493  0B55  0839               	movf	(_measure_capacitance$1049+3)^(0+128),w
  5494  0B56  1283               	bcf	3,5	;RP0=0, select bank0
  5495  0B57  00BF               	movwf	___flmul@f2+3
  5496  0B58  1683               	bsf	3,5	;RP0=1, select bank1
  5497  0B59  0838               	movf	(_measure_capacitance$1049+2)^(0+128),w
  5498  0B5A  1283               	bcf	3,5	;RP0=0, select bank0
  5499  0B5B  00BE               	movwf	___flmul@f2+2
  5500  0B5C  1683               	bsf	3,5	;RP0=1, select bank1
  5501  0B5D  0837               	movf	(_measure_capacitance$1049+1)^(0+128),w
  5502  0B5E  1283               	bcf	3,5	;RP0=0, select bank0
  5503  0B5F  00BD               	movwf	___flmul@f2+1
  5504  0B60  1683               	bsf	3,5	;RP0=1, select bank1
  5505  0B61  0836               	movf	_measure_capacitance$1049^(0+128),w
  5506  0B62  1283               	bcf	3,5	;RP0=0, select bank0
  5507  0B63  00BC               	movwf	___flmul@f2
  5508  0B64  160A  118A  25E0  120A  158A  	fcall	___flmul
  5509  0B69  083B               	movf	?___flmul+3,w
  5510  0B6A  1683               	bsf	3,5	;RP0=1, select bank1
  5511  0B6B  00BD               	movwf	(_measure_capacitance$1050+3)^(0+128)
  5512  0B6C  1283               	bcf	3,5	;RP0=0, select bank0
  5513  0B6D  083A               	movf	?___flmul+2,w
  5514  0B6E  1683               	bsf	3,5	;RP0=1, select bank1
  5515  0B6F  00BC               	movwf	(_measure_capacitance$1050+2)^(0+128)
  5516  0B70  1283               	bcf	3,5	;RP0=0, select bank0
  5517  0B71  0839               	movf	?___flmul+1,w
  5518  0B72  1683               	bsf	3,5	;RP0=1, select bank1
  5519  0B73  00BB               	movwf	(_measure_capacitance$1050+1)^(0+128)
  5520  0B74  1283               	bcf	3,5	;RP0=0, select bank0
  5521  0B75  0838               	movf	?___flmul,w
  5522  0B76  1683               	bsf	3,5	;RP0=1, select bank1
  5523  0B77  00BA               	movwf	_measure_capacitance$1050^(0+128)
  5524                           
  5525                           ;measure.c: 154: Cin = F2 * F2 * (F1 * F1 - F3 * F3) * CCal;
  5526  0B78  1703               	bsf	3,6	;RP1=1, select bank3
  5527  0B79  084B               	movf	(_CCal+3)^(0+384),w
  5528  0B7A  1283               	bcf	3,5	;RP0=0, select bank0
  5529  0B7B  1303               	bcf	3,6	;RP1=0, select bank0
  5530  0B7C  00BB               	movwf	___flmul@f1+3
  5531  0B7D  1683               	bsf	3,5	;RP0=1, select bank3
  5532  0B7E  1703               	bsf	3,6	;RP1=1, select bank3
  5533  0B7F  084A               	movf	(_CCal+2)^(0+384),w
  5534  0B80  1283               	bcf	3,5	;RP0=0, select bank0
  5535  0B81  1303               	bcf	3,6	;RP1=0, select bank0
  5536  0B82  00BA               	movwf	___flmul@f1+2
  5537  0B83  1683               	bsf	3,5	;RP0=1, select bank3
  5538  0B84  1703               	bsf	3,6	;RP1=1, select bank3
  5539  0B85  0849               	movf	(_CCal+1)^(0+384),w
  5540  0B86  1283               	bcf	3,5	;RP0=0, select bank0
  5541  0B87  1303               	bcf	3,6	;RP1=0, select bank0
  5542  0B88  00B9               	movwf	___flmul@f1+1
  5543  0B89  1683               	bsf	3,5	;RP0=1, select bank3
  5544  0B8A  1703               	bsf	3,6	;RP1=1, select bank3
  5545  0B8B  0848               	movf	_CCal^(0+384),w
  5546  0B8C  1283               	bcf	3,5	;RP0=0, select bank0
  5547  0B8D  1303               	bcf	3,6	;RP1=0, select bank0
  5548  0B8E  00B8               	movwf	___flmul@f1
  5549  0B8F  1683               	bsf	3,5	;RP0=1, select bank1
  5550  0B90  083D               	movf	(_measure_capacitance$1050+3)^(0+128),w
  5551  0B91  1283               	bcf	3,5	;RP0=0, select bank0
  5552  0B92  00BF               	movwf	___flmul@f2+3
  5553  0B93  1683               	bsf	3,5	;RP0=1, select bank1
  5554  0B94  083C               	movf	(_measure_capacitance$1050+2)^(0+128),w
  5555  0B95  1283               	bcf	3,5	;RP0=0, select bank0
  5556  0B96  00BE               	movwf	___flmul@f2+2
  5557  0B97  1683               	bsf	3,5	;RP0=1, select bank1
  5558  0B98  083B               	movf	(_measure_capacitance$1050+1)^(0+128),w
  5559  0B99  1283               	bcf	3,5	;RP0=0, select bank0
  5560  0B9A  00BD               	movwf	___flmul@f2+1
  5561  0B9B  1683               	bsf	3,5	;RP0=1, select bank1
  5562  0B9C  083A               	movf	_measure_capacitance$1050^(0+128),w
  5563  0B9D  1283               	bcf	3,5	;RP0=0, select bank0
  5564  0B9E  00BC               	movwf	___flmul@f2
  5565  0B9F  160A  118A  25E0  120A  158A  	fcall	___flmul
  5566  0BA4  083B               	movf	?___flmul+3,w
  5567  0BA5  1683               	bsf	3,5	;RP0=1, select bank1
  5568  0BA6  00C4               	movwf	(measure_capacitance@Cin+3)^(0+128)
  5569  0BA7  1283               	bcf	3,5	;RP0=0, select bank0
  5570  0BA8  083A               	movf	?___flmul+2,w
  5571  0BA9  1683               	bsf	3,5	;RP0=1, select bank1
  5572  0BAA  00C3               	movwf	(measure_capacitance@Cin+2)^(0+128)
  5573  0BAB  1283               	bcf	3,5	;RP0=0, select bank0
  5574  0BAC  0839               	movf	?___flmul+1,w
  5575  0BAD  1683               	bsf	3,5	;RP0=1, select bank1
  5576  0BAE  00C2               	movwf	(measure_capacitance@Cin+1)^(0+128)
  5577  0BAF  1283               	bcf	3,5	;RP0=0, select bank0
  5578  0BB0  0838               	movf	?___flmul,w
  5579  0BB1  1683               	bsf	3,5	;RP0=1, select bank1
  5580  0BB2  00C1               	movwf	measure_capacitance@Cin^(0+128)
  5581                           
  5582                           ;measure.c: 164: if(Cin > 999) {
  5583  0BB3  3044               	movlw	68
  5584  0BB4  00F5               	movwf	___flge@ff1+3
  5585  0BB5  3079               	movlw	121
  5586  0BB6  00F4               	movwf	___flge@ff1+2
  5587  0BB7  30C0               	movlw	192
  5588  0BB8  00F3               	movwf	___flge@ff1+1
  5589  0BB9  01F2               	clrf	___flge@ff1
  5590  0BBA  0844               	movf	(measure_capacitance@Cin+3)^(0+128),w
  5591  0BBB  00F9               	movwf	___flge@ff2+3
  5592  0BBC  0843               	movf	(measure_capacitance@Cin+2)^(0+128),w
  5593  0BBD  00F8               	movwf	___flge@ff2+2
  5594  0BBE  0842               	movf	(measure_capacitance@Cin+1)^(0+128),w
  5595  0BBF  00F7               	movwf	___flge@ff2+1
  5596  0BC0  0841               	movf	measure_capacitance@Cin^(0+128),w
  5597  0BC1  00F6               	movwf	___flge@ff2
  5598  0BC2  160A  118A  2679  120A  158A  	fcall	___flge
  5599  0BC7  1803               	btfsc	3,0
  5600  0BC8  2C82               	goto	l4271
  5601                           
  5602                           ;measure.c: 165: if(Cin > (999e+03l)) {
  5603  0BC9  3049               	movlw	73
  5604  0BCA  00F5               	movwf	___flge@ff1+3
  5605  0BCB  3073               	movlw	115
  5606  0BCC  00F4               	movwf	___flge@ff1+2
  5607  0BCD  30E5               	movlw	229
  5608  0BCE  00F3               	movwf	___flge@ff1+1
  5609  0BCF  3080               	movlw	128
  5610  0BD0  00F2               	movwf	___flge@ff1
  5611  0BD1  1683               	bsf	3,5	;RP0=1, select bank1
  5612  0BD2  1303               	bcf	3,6	;RP1=0, select bank1
  5613  0BD3  0844               	movf	(measure_capacitance@Cin+3)^(0+128),w
  5614  0BD4  00F9               	movwf	___flge@ff2+3
  5615  0BD5  0843               	movf	(measure_capacitance@Cin+2)^(0+128),w
  5616  0BD6  00F8               	movwf	___flge@ff2+2
  5617  0BD7  0842               	movf	(measure_capacitance@Cin+1)^(0+128),w
  5618  0BD8  00F7               	movwf	___flge@ff2+1
  5619  0BD9  0841               	movf	measure_capacitance@Cin^(0+128),w
  5620  0BDA  00F6               	movwf	___flge@ff2
  5621  0BDB  160A  118A  2679  120A  158A  	fcall	___flge
  5622  0BE0  1803               	btfsc	3,0
  5623  0BE1  2C56               	goto	l4267
  5624                           
  5625                           ;measure.c: 166: if(Cin > (999e+06l)) {
  5626  0BE2  304E               	movlw	78
  5627  0BE3  00F5               	movwf	___flge@ff1+3
  5628  0BE4  306E               	movlw	110
  5629  0BE5  00F4               	movwf	___flge@ff1+2
  5630  0BE6  302E               	movlw	46
  5631  0BE7  00F3               	movwf	___flge@ff1+1
  5632  0BE8  301F               	movlw	31
  5633  0BE9  00F2               	movwf	___flge@ff1
  5634  0BEA  1683               	bsf	3,5	;RP0=1, select bank1
  5635  0BEB  1303               	bcf	3,6	;RP1=0, select bank1
  5636  0BEC  0844               	movf	(measure_capacitance@Cin+3)^(0+128),w
  5637  0BED  00F9               	movwf	___flge@ff2+3
  5638  0BEE  0843               	movf	(measure_capacitance@Cin+2)^(0+128),w
  5639  0BEF  00F8               	movwf	___flge@ff2+2
  5640  0BF0  0842               	movf	(measure_capacitance@Cin+1)^(0+128),w
  5641  0BF1  00F7               	movwf	___flge@ff2+1
  5642  0BF2  0841               	movf	measure_capacitance@Cin^(0+128),w
  5643  0BF3  00F6               	movwf	___flge@ff2
  5644  0BF4  160A  118A  2679  120A  158A  	fcall	___flge
  5645  0BF9  1803               	btfsc	3,0
  5646  0BFA  2C29               	goto	l4263
  5647                           
  5648                           ;measure.c: 167: Cin = Cin / (1e+09);
  5649  0BFB  304E               	movlw	78
  5650  0BFC  1283               	bcf	3,5	;RP0=0, select bank0
  5651  0BFD  1303               	bcf	3,6	;RP1=0, select bank0
  5652  0BFE  00A8               	movwf	___fldiv@f2+3
  5653  0BFF  306E               	movlw	110
  5654  0C00  00A7               	movwf	___fldiv@f2+2
  5655  0C01  306B               	movlw	107
  5656  0C02  00A6               	movwf	___fldiv@f2+1
  5657  0C03  3028               	movlw	40
  5658  0C04  00A5               	movwf	___fldiv@f2
  5659  0C05  1683               	bsf	3,5	;RP0=1, select bank1
  5660  0C06  0844               	movf	(measure_capacitance@Cin+3)^(0+128),w
  5661  0C07  1283               	bcf	3,5	;RP0=0, select bank0
  5662  0C08  00AC               	movwf	___fldiv@f1+3
  5663  0C09  1683               	bsf	3,5	;RP0=1, select bank1
  5664  0C0A  0843               	movf	(measure_capacitance@Cin+2)^(0+128),w
  5665  0C0B  1283               	bcf	3,5	;RP0=0, select bank0
  5666  0C0C  00AB               	movwf	___fldiv@f1+2
  5667  0C0D  1683               	bsf	3,5	;RP0=1, select bank1
  5668  0C0E  0842               	movf	(measure_capacitance@Cin+1)^(0+128),w
  5669  0C0F  1283               	bcf	3,5	;RP0=0, select bank0
  5670  0C10  00AA               	movwf	___fldiv@f1+1
  5671  0C11  1683               	bsf	3,5	;RP0=1, select bank1
  5672  0C12  0841               	movf	measure_capacitance@Cin^(0+128),w
  5673  0C13  1283               	bcf	3,5	;RP0=0, select bank0
  5674  0C14  00A9               	movwf	___fldiv@f1
  5675  0C15  24CE  120A  158A   	fcall	___fldiv
  5676  0C18  0828               	movf	?___fldiv+3,w
  5677  0C19  1683               	bsf	3,5	;RP0=1, select bank1
  5678  0C1A  00C4               	movwf	(measure_capacitance@Cin+3)^(0+128)
  5679  0C1B  1283               	bcf	3,5	;RP0=0, select bank0
  5680  0C1C  0827               	movf	?___fldiv+2,w
  5681  0C1D  1683               	bsf	3,5	;RP0=1, select bank1
  5682  0C1E  00C3               	movwf	(measure_capacitance@Cin+2)^(0+128)
  5683  0C1F  1283               	bcf	3,5	;RP0=0, select bank0
  5684  0C20  0826               	movf	?___fldiv+1,w
  5685  0C21  1683               	bsf	3,5	;RP0=1, select bank1
  5686  0C22  00C2               	movwf	(measure_capacitance@Cin+1)^(0+128)
  5687  0C23  1283               	bcf	3,5	;RP0=0, select bank0
  5688  0C24  0825               	movf	?___fldiv,w
  5689  0C25  1683               	bsf	3,5	;RP0=1, select bank1
  5690  0C26  00C1               	movwf	measure_capacitance@Cin^(0+128)
  5691                           
  5692                           ;measure.c: 168: unit = 4;
  5693  0C27  3004               	movlw	4
  5694  0C28  2C85               	goto	L6
  5695  0C29                     l4263:	
  5696                           ;measure.c: 169: } else {
  5697                           
  5698                           
  5699                           ;measure.c: 170: Cin = Cin / (1e+06);
  5700  0C29  3049               	movlw	73
  5701  0C2A  1283               	bcf	3,5	;RP0=0, select bank0
  5702  0C2B  1303               	bcf	3,6	;RP1=0, select bank0
  5703  0C2C  00A8               	movwf	___fldiv@f2+3
  5704  0C2D  3074               	movlw	116
  5705  0C2E  00A7               	movwf	___fldiv@f2+2
  5706  0C2F  3024               	movlw	36
  5707  0C30  00A6               	movwf	___fldiv@f2+1
  5708  0C31  01A5               	clrf	___fldiv@f2
  5709  0C32  1683               	bsf	3,5	;RP0=1, select bank1
  5710  0C33  0844               	movf	(measure_capacitance@Cin+3)^(0+128),w
  5711  0C34  1283               	bcf	3,5	;RP0=0, select bank0
  5712  0C35  00AC               	movwf	___fldiv@f1+3
  5713  0C36  1683               	bsf	3,5	;RP0=1, select bank1
  5714  0C37  0843               	movf	(measure_capacitance@Cin+2)^(0+128),w
  5715  0C38  1283               	bcf	3,5	;RP0=0, select bank0
  5716  0C39  00AB               	movwf	___fldiv@f1+2
  5717  0C3A  1683               	bsf	3,5	;RP0=1, select bank1
  5718  0C3B  0842               	movf	(measure_capacitance@Cin+1)^(0+128),w
  5719  0C3C  1283               	bcf	3,5	;RP0=0, select bank0
  5720  0C3D  00AA               	movwf	___fldiv@f1+1
  5721  0C3E  1683               	bsf	3,5	;RP0=1, select bank1
  5722  0C3F  0841               	movf	measure_capacitance@Cin^(0+128),w
  5723  0C40  1283               	bcf	3,5	;RP0=0, select bank0
  5724  0C41  00A9               	movwf	___fldiv@f1
  5725  0C42  24CE  120A  158A   	fcall	___fldiv
  5726  0C45  0828               	movf	?___fldiv+3,w
  5727  0C46  1683               	bsf	3,5	;RP0=1, select bank1
  5728  0C47  00C4               	movwf	(measure_capacitance@Cin+3)^(0+128)
  5729  0C48  1283               	bcf	3,5	;RP0=0, select bank0
  5730  0C49  0827               	movf	?___fldiv+2,w
  5731  0C4A  1683               	bsf	3,5	;RP0=1, select bank1
  5732  0C4B  00C3               	movwf	(measure_capacitance@Cin+2)^(0+128)
  5733  0C4C  1283               	bcf	3,5	;RP0=0, select bank0
  5734  0C4D  0826               	movf	?___fldiv+1,w
  5735  0C4E  1683               	bsf	3,5	;RP0=1, select bank1
  5736  0C4F  00C2               	movwf	(measure_capacitance@Cin+1)^(0+128)
  5737  0C50  1283               	bcf	3,5	;RP0=0, select bank0
  5738  0C51  0825               	movf	?___fldiv,w
  5739  0C52  1683               	bsf	3,5	;RP0=1, select bank1
  5740  0C53  00C1               	movwf	measure_capacitance@Cin^(0+128)
  5741                           
  5742                           ;measure.c: 171: unit = 5;
  5743  0C54  3005               	movlw	5
  5744  0C55  2C85               	goto	L6
  5745  0C56                     l4267:	
  5746                           
  5747                           ;measure.c: 174: Cin = Cin / 1e+03;
  5748  0C56  3044               	movlw	68
  5749  0C57  1283               	bcf	3,5	;RP0=0, select bank0
  5750  0C58  1303               	bcf	3,6	;RP1=0, select bank0
  5751  0C59  00A8               	movwf	___fldiv@f2+3
  5752  0C5A  307A               	movlw	122
  5753  0C5B  00A7               	movwf	___fldiv@f2+2
  5754  0C5C  01A6               	clrf	___fldiv@f2+1
  5755  0C5D  01A5               	clrf	___fldiv@f2
  5756  0C5E  1683               	bsf	3,5	;RP0=1, select bank1
  5757  0C5F  0844               	movf	(measure_capacitance@Cin+3)^(0+128),w
  5758  0C60  1283               	bcf	3,5	;RP0=0, select bank0
  5759  0C61  00AC               	movwf	___fldiv@f1+3
  5760  0C62  1683               	bsf	3,5	;RP0=1, select bank1
  5761  0C63  0843               	movf	(measure_capacitance@Cin+2)^(0+128),w
  5762  0C64  1283               	bcf	3,5	;RP0=0, select bank0
  5763  0C65  00AB               	movwf	___fldiv@f1+2
  5764  0C66  1683               	bsf	3,5	;RP0=1, select bank1
  5765  0C67  0842               	movf	(measure_capacitance@Cin+1)^(0+128),w
  5766  0C68  1283               	bcf	3,5	;RP0=0, select bank0
  5767  0C69  00AA               	movwf	___fldiv@f1+1
  5768  0C6A  1683               	bsf	3,5	;RP0=1, select bank1
  5769  0C6B  0841               	movf	measure_capacitance@Cin^(0+128),w
  5770  0C6C  1283               	bcf	3,5	;RP0=0, select bank0
  5771  0C6D  00A9               	movwf	___fldiv@f1
  5772  0C6E  24CE  120A  158A   	fcall	___fldiv
  5773  0C71  0828               	movf	?___fldiv+3,w
  5774  0C72  1683               	bsf	3,5	;RP0=1, select bank1
  5775  0C73  00C4               	movwf	(measure_capacitance@Cin+3)^(0+128)
  5776  0C74  1283               	bcf	3,5	;RP0=0, select bank0
  5777  0C75  0827               	movf	?___fldiv+2,w
  5778  0C76  1683               	bsf	3,5	;RP0=1, select bank1
  5779  0C77  00C3               	movwf	(measure_capacitance@Cin+2)^(0+128)
  5780  0C78  1283               	bcf	3,5	;RP0=0, select bank0
  5781  0C79  0826               	movf	?___fldiv+1,w
  5782  0C7A  1683               	bsf	3,5	;RP0=1, select bank1
  5783  0C7B  00C2               	movwf	(measure_capacitance@Cin+1)^(0+128)
  5784  0C7C  1283               	bcf	3,5	;RP0=0, select bank0
  5785  0C7D  0825               	movf	?___fldiv,w
  5786  0C7E  1683               	bsf	3,5	;RP0=1, select bank1
  5787  0C7F  00C1               	movwf	measure_capacitance@Cin^(0+128)
  5788                           
  5789                           ;measure.c: 175: unit = 6;
  5790  0C80  3006               	movlw	6
  5791  0C81  2C85               	goto	L6
  5792  0C82                     l4271:	
  5793                           
  5794                           ;measure.c: 178: unit = 7;
  5795  0C82  3007               	movlw	7
  5796  0C83  1683               	bsf	3,5	;RP0=1, select bank1
  5797  0C84  1303               	bcf	3,6	;RP1=0, select bank1
  5798  0C85                     L6:	
  5799  0C85  00BE               	movwf	measure_capacitance@unit^(0+128)
  5800                           
  5801                           ;measure.c: 180: Cin = Cin * 100;
  5802  0C86  3042               	movlw	66
  5803  0C87  1283               	bcf	3,5	;RP0=0, select bank0
  5804  0C88  00BB               	movwf	___flmul@f1+3
  5805  0C89  30C8               	movlw	200
  5806  0C8A  00BA               	movwf	___flmul@f1+2
  5807  0C8B  01B9               	clrf	___flmul@f1+1
  5808  0C8C  01B8               	clrf	___flmul@f1
  5809  0C8D  1683               	bsf	3,5	;RP0=1, select bank1
  5810  0C8E  0844               	movf	(measure_capacitance@Cin+3)^(0+128),w
  5811  0C8F  1283               	bcf	3,5	;RP0=0, select bank0
  5812  0C90  00BF               	movwf	___flmul@f2+3
  5813  0C91  1683               	bsf	3,5	;RP0=1, select bank1
  5814  0C92  0843               	movf	(measure_capacitance@Cin+2)^(0+128),w
  5815  0C93  1283               	bcf	3,5	;RP0=0, select bank0
  5816  0C94  00BE               	movwf	___flmul@f2+2
  5817  0C95  1683               	bsf	3,5	;RP0=1, select bank1
  5818  0C96  0842               	movf	(measure_capacitance@Cin+1)^(0+128),w
  5819  0C97  1283               	bcf	3,5	;RP0=0, select bank0
  5820  0C98  00BD               	movwf	___flmul@f2+1
  5821  0C99  1683               	bsf	3,5	;RP0=1, select bank1
  5822  0C9A  0841               	movf	measure_capacitance@Cin^(0+128),w
  5823  0C9B  1283               	bcf	3,5	;RP0=0, select bank0
  5824  0C9C  00BC               	movwf	___flmul@f2
  5825  0C9D  160A  118A  25E0  120A  158A  	fcall	___flmul
  5826  0CA2  083B               	movf	?___flmul+3,w
  5827  0CA3  1683               	bsf	3,5	;RP0=1, select bank1
  5828  0CA4  00C4               	movwf	(measure_capacitance@Cin+3)^(0+128)
  5829  0CA5  1283               	bcf	3,5	;RP0=0, select bank0
  5830  0CA6  083A               	movf	?___flmul+2,w
  5831  0CA7  1683               	bsf	3,5	;RP0=1, select bank1
  5832  0CA8  00C3               	movwf	(measure_capacitance@Cin+2)^(0+128)
  5833  0CA9  1283               	bcf	3,5	;RP0=0, select bank0
  5834  0CAA  0839               	movf	?___flmul+1,w
  5835  0CAB  1683               	bsf	3,5	;RP0=1, select bank1
  5836  0CAC  00C2               	movwf	(measure_capacitance@Cin+1)^(0+128)
  5837  0CAD  1283               	bcf	3,5	;RP0=0, select bank0
  5838  0CAE  0838               	movf	?___flmul,w
  5839  0CAF  1683               	bsf	3,5	;RP0=1, select bank1
  5840  0CB0  00C1               	movwf	measure_capacitance@Cin^(0+128)
  5841                           
  5842                           ;measure.c: 181: var = (unsigned short int)Cin;
  5843  0CB1  0844               	movf	(measure_capacitance@Cin+3)^(0+128),w
  5844  0CB2  00AB               	movwf	(___fltol@f1+3)^(0+128)
  5845  0CB3  0843               	movf	(measure_capacitance@Cin+2)^(0+128),w
  5846  0CB4  00AA               	movwf	(___fltol@f1+2)^(0+128)
  5847  0CB5  0842               	movf	(measure_capacitance@Cin+1)^(0+128),w
  5848  0CB6  00A9               	movwf	(___fltol@f1+1)^(0+128)
  5849  0CB7  0841               	movf	measure_capacitance@Cin^(0+128),w
  5850  0CB8  00A8               	movwf	___fltol@f1^(0+128)
  5851  0CB9  160A  118A  27A9  120A  158A  	fcall	___fltol
  5852  0CBE  0829               	movf	(?___fltol^(0+128)+1),w
  5853  0CBF  00C0               	movwf	(measure_capacitance@var+1)^(0+128)
  5854  0CC0  0828               	movf	?___fltol^(0+128),w
  5855  0CC1  00BF               	movwf	measure_capacitance@var^(0+128)
  5856                           
  5857                           ;measure.c: 183: print_reading(var);
  5858  0CC2  0840               	movf	(measure_capacitance@var+1)^(0+128),w
  5859  0CC3  1283               	bcf	3,5	;RP0=0, select bank0
  5860  0CC4  00CB               	movwf	print_reading@measurement+1
  5861  0CC5  1683               	bsf	3,5	;RP0=1, select bank1
  5862  0CC6  083F               	movf	measure_capacitance@var^(0+128),w
  5863  0CC7  1283               	bcf	3,5	;RP0=0, select bank0
  5864  0CC8  00CA               	movwf	print_reading@measurement
  5865  0CC9  273F               	fcall	_print_reading
  5866                           
  5867                           ;measure.c: 184: print_unit(unit);
  5868  0CCA  1683               	bsf	3,5	;RP0=1, select bank1
  5869  0CCB  120A  118A  2A27   	ljmp	l3969
  5870  0CCE                     __end_of_measure_capacitance:	
  5871  0CCE                     __ptext22:	
  5872 ;; *************** function ___fldiv *****************
  5873 ;; Defined at:
  5874 ;;		line 56 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\fldiv.c"
  5875 ;; Parameters:    Size  Location     Type
  5876 ;;  f2              4    4[BANK0 ] unsigned char 
  5877 ;;  f1              4    8[BANK0 ] unsigned char 
  5878 ;; Auto vars:     Size  Location     Type
  5879 ;;  f3              4   16[BANK0 ] unsigned char 
  5880 ;;  sign            1   22[BANK0 ] unsigned char 
  5881 ;;  exp             1   21[BANK0 ] unsigned char 
  5882 ;;  cntr            1   20[BANK0 ] unsigned char 
  5883 ;; Return value:  Size  Location     Type
  5884 ;;                  4    4[BANK0 ] unsigned char 
  5885 ;; Registers used:
  5886 ;;		wreg, status,2, status,0, pclath, cstack
  5887 ;; Tracked objects:
  5888 ;;		On entry : 300/0
  5889 ;;		On exit  : 300/0
  5890 ;;		Unchanged: 0/0
  5891 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5892 ;;      Params:         0       8       0       0       0
  5893 ;;      Locals:         0       7       0       0       0
  5894 ;;      Temps:          0       4       0       0       0
  5895 ;;      Totals:         0      19       0       0       0
  5896 ;;Total ram usage:       19 bytes
  5897 ;; Hardware stack levels used:    1
  5898 ;; Hardware stack levels required when called:    2
  5899 ;; This function calls:
  5900 ;;		___flpack
  5901 ;; This function is called by:
  5902 ;;		_format_double
  5903 ;;		_measure_capacitance
  5904 ;;		_measure_inductance
  5905 ;;		_exp
  5906 ;; This function uses a non-reentrant model
  5907 ;;
  5908                           
  5909                           
  5910                           ;psect for function ___fldiv
  5911  0CCE                     ___fldiv:	
  5912                           
  5913                           ;incstack = 0
  5914                           ; Regs used in ___fldiv: [wreg+status,2+status,0+pclath+cstack]
  5915  0CCE  0829               	movf	___fldiv@f1,w
  5916  0CCF  00AD               	movwf	??___fldiv
  5917  0CD0  082A               	movf	___fldiv@f1+1,w
  5918  0CD1  00AE               	movwf	??___fldiv+1
  5919  0CD2  082B               	movf	___fldiv@f1+2,w
  5920  0CD3  00AF               	movwf	??___fldiv+2
  5921  0CD4  082C               	movf	___fldiv@f1+3,w
  5922  0CD5  00B0               	movwf	??___fldiv+3
  5923  0CD6  1003               	clrc
  5924  0CD7  0D2F               	rlf	??___fldiv+2,w
  5925  0CD8  0D30               	rlf	??___fldiv+3,w
  5926  0CD9  00B6               	movwf	___fldiv@exp
  5927  0CDA  0836               	movf	___fldiv@exp,w
  5928  0CDB  1D03               	btfss	3,2
  5929  0CDC  2CE2               	goto	l3709
  5930  0CDD  01A5               	clrf	?___fldiv
  5931  0CDE  01A6               	clrf	?___fldiv+1
  5932  0CDF  01A7               	clrf	?___fldiv+2
  5933  0CE0  01A8               	clrf	?___fldiv+3
  5934  0CE1  0008               	return
  5935  0CE2                     l3709:	
  5936  0CE2  0825               	movf	___fldiv@f2,w
  5937  0CE3  00AD               	movwf	??___fldiv
  5938  0CE4  0826               	movf	___fldiv@f2+1,w
  5939  0CE5  00AE               	movwf	??___fldiv+1
  5940  0CE6  0827               	movf	___fldiv@f2+2,w
  5941  0CE7  00AF               	movwf	??___fldiv+2
  5942  0CE8  0828               	movf	___fldiv@f2+3,w
  5943  0CE9  00B0               	movwf	??___fldiv+3
  5944  0CEA  1003               	clrc
  5945  0CEB  0D2F               	rlf	??___fldiv+2,w
  5946  0CEC  0D30               	rlf	??___fldiv+3,w
  5947  0CED  00B7               	movwf	___fldiv@sign
  5948  0CEE  0837               	movf	___fldiv@sign,w
  5949  0CEF  1D03               	btfss	3,2
  5950  0CF0  2CF6               	goto	l3713
  5951  0CF1  01A5               	clrf	?___fldiv
  5952  0CF2  01A6               	clrf	?___fldiv+1
  5953  0CF3  01A7               	clrf	?___fldiv+2
  5954  0CF4  01A8               	clrf	?___fldiv+3
  5955  0CF5  0008               	return
  5956  0CF6                     l3713:	
  5957  0CF6  3089               	movlw	137
  5958  0CF7  0737               	addwf	___fldiv@sign,w
  5959  0CF8  00AD               	movwf	??___fldiv
  5960  0CF9  02B6               	subwf	___fldiv@exp,f
  5961  0CFA  082C               	movf	___fldiv@f1+3,w
  5962  0CFB  00B7               	movwf	___fldiv@sign
  5963  0CFC  0828               	movf	___fldiv@f2+3,w
  5964  0CFD  06B7               	xorwf	___fldiv@sign,f
  5965  0CFE  3080               	movlw	128
  5966  0CFF  05B7               	andwf	___fldiv@sign,f
  5967  0D00  3020               	movlw	32
  5968  0D01  17AB               	bsf	___fldiv@f1+2,7
  5969  0D02  01AC               	clrf	___fldiv@f1+3
  5970  0D03  17A7               	bsf	___fldiv@f2+2,7
  5971  0D04  01A8               	clrf	___fldiv@f2+3
  5972  0D05  00B5               	movwf	___fldiv@cntr
  5973  0D06                     l3731:	
  5974  0D06  1003               	clrc
  5975  0D07  0DB1               	rlf	___fldiv@f3,f
  5976  0D08  0DB2               	rlf	___fldiv@f3+1,f
  5977  0D09  0DB3               	rlf	___fldiv@f3+2,f
  5978  0D0A  0DB4               	rlf	___fldiv@f3+3,f
  5979  0D0B  0828               	movf	___fldiv@f2+3,w
  5980  0D0C  022C               	subwf	___fldiv@f1+3,w
  5981  0D0D  1D03               	skipz
  5982  0D0E  2D19               	goto	u3535
  5983  0D0F  0827               	movf	___fldiv@f2+2,w
  5984  0D10  022B               	subwf	___fldiv@f1+2,w
  5985  0D11  1D03               	skipz
  5986  0D12  2D19               	goto	u3535
  5987  0D13  0826               	movf	___fldiv@f2+1,w
  5988  0D14  022A               	subwf	___fldiv@f1+1,w
  5989  0D15  1D03               	skipz
  5990  0D16  2D19               	goto	u3535
  5991  0D17  0825               	movf	___fldiv@f2,w
  5992  0D18  0229               	subwf	___fldiv@f1,w
  5993  0D19                     u3535:	
  5994  0D19  1C03               	skipc
  5995  0D1A  2D2B               	goto	L9
  5996  0D1B  0825               	movf	___fldiv@f2,w
  5997  0D1C  02A9               	subwf	___fldiv@f1,f
  5998  0D1D  0826               	movf	___fldiv@f2+1,w
  5999  0D1E  1C03               	skipc
  6000  0D1F  0F26               	incfsz	___fldiv@f2+1,w
  6001  0D20  02AA               	subwf	___fldiv@f1+1,f
  6002  0D21  0827               	movf	___fldiv@f2+2,w
  6003  0D22  1C03               	skipc
  6004  0D23  0F27               	incfsz	___fldiv@f2+2,w
  6005  0D24  02AB               	subwf	___fldiv@f1+2,f
  6006  0D25  0828               	movf	___fldiv@f2+3,w
  6007  0D26  1C03               	skipc
  6008  0D27  0F28               	incfsz	___fldiv@f2+3,w
  6009  0D28  02AC               	subwf	___fldiv@f1+3,f
  6010  0D29  1431               	bsf	___fldiv@f3,0
  6011  0D2A  1003               	clrc
  6012  0D2B                     L9:	
  6013  0D2B  0DA9               	rlf	___fldiv@f1,f
  6014  0D2C  0DAA               	rlf	___fldiv@f1+1,f
  6015  0D2D  0DAB               	rlf	___fldiv@f1+2,f
  6016  0D2E  0DAC               	rlf	___fldiv@f1+3,f
  6017  0D2F  0BB5               	decfsz	___fldiv@cntr,f
  6018  0D30  2D06               	goto	l3731
  6019  0D31  0834               	movf	___fldiv@f3+3,w
  6020  0D32  00F5               	movwf	___flpack@arg+3
  6021  0D33  0833               	movf	___fldiv@f3+2,w
  6022  0D34  00F4               	movwf	___flpack@arg+2
  6023  0D35  0832               	movf	___fldiv@f3+1,w
  6024  0D36  00F3               	movwf	___flpack@arg+1
  6025  0D37  0831               	movf	___fldiv@f3,w
  6026  0D38  00F2               	movwf	___flpack@arg
  6027  0D39  0836               	movf	___fldiv@exp,w
  6028  0D3A  00F6               	movwf	___flpack@exp
  6029  0D3B  0837               	movf	___fldiv@sign,w
  6030  0D3C  00F7               	movwf	___flpack@sign
  6031  0D3D  255C               	fcall	___flpack
  6032  0D3E  0875               	movf	?___flpack+3,w
  6033  0D3F  1283               	bcf	3,5	;RP0=0, select bank0
  6034  0D40  00A8               	movwf	?___fldiv+3
  6035  0D41  0874               	movf	?___flpack+2,w
  6036  0D42  00A7               	movwf	?___fldiv+2
  6037  0D43  0873               	movf	?___flpack+1,w
  6038  0D44  00A6               	movwf	?___fldiv+1
  6039  0D45  0872               	movf	?___flpack,w
  6040  0D46  00A5               	movwf	?___fldiv
  6041  0D47  0008               	return
  6042  0D48                     __end_of___fldiv:	
  6043  0D48                     __ptext50:	
  6044 ;; *************** function ___lwtofl *****************
  6045 ;; Defined at:
  6046 ;;		line 28 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lwtofl.c"
  6047 ;; Parameters:    Size  Location     Type
  6048 ;;  c               2   47[BANK0 ] unsigned int 
  6049 ;; Auto vars:     Size  Location     Type
  6050 ;;		None
  6051 ;; Return value:  Size  Location     Type
  6052 ;;                  4   47[BANK0 ] unsigned int 
  6053 ;; Registers used:
  6054 ;;		wreg, status,2, status,0, pclath, cstack
  6055 ;; Tracked objects:
  6056 ;;		On entry : 300/0
  6057 ;;		On exit  : 300/0
  6058 ;;		Unchanged: 0/0
  6059 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6060 ;;      Params:         0       4       0       0       0
  6061 ;;      Locals:         0       0       0       0       0
  6062 ;;      Temps:          0       0       0       0       0
  6063 ;;      Totals:         0       4       0       0       0
  6064 ;;Total ram usage:        4 bytes
  6065 ;; Hardware stack levels used:    1
  6066 ;; Hardware stack levels required when called:    2
  6067 ;; This function calls:
  6068 ;;		___flpack
  6069 ;; This function is called by:
  6070 ;;		_calibrate
  6071 ;;		_measure_capacitance
  6072 ;;		_measure_inductance
  6073 ;; This function uses a non-reentrant model
  6074 ;;
  6075                           
  6076                           
  6077                           ;psect for function ___lwtofl
  6078  0D48                     ___lwtofl:	
  6079                           
  6080                           ;incstack = 0
  6081                           ; Regs used in ___lwtofl: [wreg+status,2+status,0+pclath+cstack]
  6082  0D48  0850               	movf	___lwtofl@c,w
  6083  0D49  00F2               	movwf	___flpack@arg
  6084  0D4A  0851               	movf	___lwtofl@c+1,w
  6085  0D4B  00F3               	movwf	___flpack@arg+1
  6086  0D4C  3096               	movlw	150
  6087  0D4D  01F4               	clrf	___flpack@arg+2
  6088  0D4E  01F5               	clrf	___flpack@arg+3
  6089  0D4F  00F6               	movwf	___flpack@exp
  6090  0D50  01F7               	clrf	___flpack@sign
  6091  0D51  255C               	fcall	___flpack
  6092  0D52  0875               	movf	?___flpack+3,w
  6093  0D53  1283               	bcf	3,5	;RP0=0, select bank0
  6094  0D54  00D3               	movwf	?___lwtofl+3
  6095  0D55  0874               	movf	?___flpack+2,w
  6096  0D56  00D2               	movwf	?___lwtofl+2
  6097  0D57  0873               	movf	?___flpack+1,w
  6098  0D58  00D1               	movwf	?___lwtofl+1
  6099  0D59  0872               	movf	?___flpack,w
  6100  0D5A  00D0               	movwf	?___lwtofl
  6101  0D5B  0008               	return
  6102  0D5C                     __end_of___lwtofl:	
  6103  0D5C                     __ptext51:	
  6104 ;; *************** function ___flpack *****************
  6105 ;; Defined at:
  6106 ;;		line 63 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\double.c"
  6107 ;; Parameters:    Size  Location     Type
  6108 ;;  arg             4    2[COMMON] unsigned long 
  6109 ;;  exp             1    6[COMMON] unsigned char 
  6110 ;;  sign            1    7[COMMON] unsigned char 
  6111 ;; Auto vars:     Size  Location     Type
  6112 ;;		None
  6113 ;; Return value:  Size  Location     Type
  6114 ;;                  4    2[COMMON] unsigned char 
  6115 ;; Registers used:
  6116 ;;		wreg, status,2, status,0
  6117 ;; Tracked objects:
  6118 ;;		On entry : 200/100
  6119 ;;		On exit  : 200/0
  6120 ;;		Unchanged: 0/0
  6121 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6122 ;;      Params:         6       0       0       0       0
  6123 ;;      Locals:         0       0       0       0       0
  6124 ;;      Temps:          0       4       0       0       0
  6125 ;;      Totals:         6       4       0       0       0
  6126 ;;Total ram usage:       10 bytes
  6127 ;; Hardware stack levels used:    1
  6128 ;; Hardware stack levels required when called:    1
  6129 ;; This function calls:
  6130 ;;		Nothing
  6131 ;; This function is called by:
  6132 ;;		___altofl
  6133 ;;		___awtofl
  6134 ;;		___fladd
  6135 ;;		___fldiv
  6136 ;;		___flmul
  6137 ;;		___lltofl
  6138 ;;		___lwtofl
  6139 ;; This function uses a non-reentrant model
  6140 ;;
  6141                           
  6142                           
  6143                           ;psect for function ___flpack
  6144  0D5C                     ___flpack:	
  6145                           
  6146                           ;incstack = 0
  6147                           ; Regs used in ___flpack: [wreg+status,2+status,0]
  6148  0D5C  0876               	movf	___flpack@exp,w
  6149  0D5D  1903               	btfsc	3,2
  6150  0D5E  2D65               	goto	l817
  6151  0D5F  0875               	movf	___flpack@arg+3,w
  6152  0D60  0474               	iorwf	___flpack@arg+2,w
  6153  0D61  0473               	iorwf	___flpack@arg+1,w
  6154  0D62  0472               	iorwf	___flpack@arg,w
  6155  0D63  1D03               	skipz
  6156  0D64  2D70               	goto	l3507
  6157  0D65                     l817:	
  6158  0D65  01F2               	clrf	?___flpack
  6159  0D66  01F3               	clrf	?___flpack+1
  6160  0D67  01F4               	clrf	?___flpack+2
  6161  0D68  01F5               	clrf	?___flpack+3
  6162  0D69  0008               	return
  6163  0D6A                     l3505:	
  6164  0D6A  0AF6               	incf	___flpack@exp,f
  6165  0D6B  1003               	clrc
  6166  0D6C  0CF5               	rrf	___flpack@arg+3,f
  6167  0D6D  0CF4               	rrf	___flpack@arg+2,f
  6168  0D6E  0CF3               	rrf	___flpack@arg+1,f
  6169  0D6F  0CF2               	rrf	___flpack@arg,f
  6170  0D70                     l3507:	
  6171  0D70  30FE               	movlw	254
  6172  0D71  0575               	andwf	___flpack@arg+3,w
  6173  0D72  1903               	btfsc	3,2
  6174  0D73  2D82               	goto	l3511
  6175  0D74  2D6A               	goto	l3505
  6176  0D75                     l3509:	
  6177  0D75  0AF6               	incf	___flpack@exp,f
  6178  0D76  0AF2               	incf	___flpack@arg,f
  6179  0D77  1903               	skipnz
  6180  0D78  0AF3               	incf	___flpack@arg+1,f
  6181  0D79  1903               	skipnz
  6182  0D7A  0AF4               	incf	___flpack@arg+2,f
  6183  0D7B  1903               	skipnz
  6184  0D7C  0AF5               	incf	___flpack@arg+3,f
  6185  0D7D  1003               	clrc
  6186  0D7E  0CF5               	rrf	___flpack@arg+3,f
  6187  0D7F  0CF4               	rrf	___flpack@arg+2,f
  6188  0D80  0CF3               	rrf	___flpack@arg+1,f
  6189  0D81  0CF2               	rrf	___flpack@arg,f
  6190  0D82                     l3511:	
  6191  0D82  30FF               	movlw	255
  6192  0D83  0575               	andwf	___flpack@arg+3,w
  6193  0D84  1903               	btfsc	3,2
  6194  0D85  2D91               	goto	l3515
  6195  0D86  2D75               	goto	l3509
  6196  0D87                     l3517:	
  6197  0D87  3002               	movlw	2
  6198  0D88  0276               	subwf	___flpack@exp,w
  6199  0D89  1C03               	btfss	3,0
  6200  0D8A  2D93               	goto	l829
  6201  0D8B  03F6               	decf	___flpack@exp,f
  6202  0D8C  1003               	clrc
  6203  0D8D  0DF2               	rlf	___flpack@arg,f
  6204  0D8E  0DF3               	rlf	___flpack@arg+1,f
  6205  0D8F  0DF4               	rlf	___flpack@arg+2,f
  6206  0D90  0DF5               	rlf	___flpack@arg+3,f
  6207  0D91                     l3515:	
  6208  0D91  1FF4               	btfss	___flpack@arg+2,7
  6209  0D92  2D87               	goto	l3517
  6210  0D93                     l829:	
  6211  0D93  1876               	btfsc	___flpack@exp,0
  6212  0D94  2D98               	goto	l3521
  6213  0D95  307F               	movlw	127
  6214  0D96  05F4               	andwf	___flpack@arg+2,f
  6215  0D97  30FF               	movlw	255
  6216  0D98                     l3521:	
  6217  0D98  1003               	clrc
  6218  0D99  0CF6               	rrf	___flpack@exp,f
  6219  0D9A  0876               	movf	___flpack@exp,w
  6220  0D9B  1283               	bcf	3,5	;RP0=0, select bank0
  6221  0D9C  00A4               	movwf	??___flpack+3
  6222  0D9D  01A3               	clrf	??___flpack+2
  6223  0D9E  01A2               	clrf	??___flpack+1
  6224  0D9F  01A1               	clrf	??___flpack
  6225  0DA0  0821               	movf	??___flpack,w
  6226  0DA1  04F2               	iorwf	___flpack@arg,f
  6227  0DA2  0822               	movf	??___flpack+1,w
  6228  0DA3  04F3               	iorwf	___flpack@arg+1,f
  6229  0DA4  0823               	movf	??___flpack+2,w
  6230  0DA5  04F4               	iorwf	___flpack@arg+2,f
  6231  0DA6  0824               	movf	??___flpack+3,w
  6232  0DA7  04F5               	iorwf	___flpack@arg+3,f
  6233  0DA8  0877               	movf	___flpack@sign,w
  6234  0DA9  1D03               	btfss	3,2
  6235  0DAA  17F5               	bsf	___flpack@arg+3,7
  6236  0DAB  0008               	return
  6237  0DAC                     __end_of___flpack:	
  6238  0DAC                     __ptext38:	
  6239 ;; *************** function _lcd_gotoxy *****************
  6240 ;; Defined at:
  6241 ;;		line 154 in file "../../../lib/lcd44780.c"
  6242 ;; Parameters:    Size  Location     Type
  6243 ;;  col             1    wreg     unsigned char 
  6244 ;;  row             1    7[COMMON] unsigned char 
  6245 ;; Auto vars:     Size  Location     Type
  6246 ;;  col             1    0[BANK0 ] unsigned char 
  6247 ;;  row_offsets     4    1[BANK0 ] unsigned char [4]
  6248 ;; Return value:  Size  Location     Type
  6249 ;;		None               void
  6250 ;; Registers used:
  6251 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6252 ;; Tracked objects:
  6253 ;;		On entry : 0/100
  6254 ;;		On exit  : 0/0
  6255 ;;		Unchanged: 0/0
  6256 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6257 ;;      Params:         1       0       0       0       0
  6258 ;;      Locals:         0       5       0       0       0
  6259 ;;      Temps:          0       0       0       0       0
  6260 ;;      Totals:         1       5       0       0       0
  6261 ;;Total ram usage:        6 bytes
  6262 ;; Hardware stack levels used:    1
  6263 ;; Hardware stack levels required when called:    4
  6264 ;; This function calls:
  6265 ;;		_lcd_command
  6266 ;; This function is called by:
  6267 ;;		_print_unit
  6268 ;;		_print_reading
  6269 ;;		_indicator
  6270 ;;		_main
  6271 ;;		_calibrate
  6272 ;;		_measure_freq
  6273 ;;		_measure_capacitance
  6274 ;;		_measure_inductance
  6275 ;; This function uses a non-reentrant model
  6276 ;;
  6277                           
  6278                           
  6279                           ;psect for function _lcd_gotoxy
  6280  0DAC                     _lcd_gotoxy:	
  6281                           
  6282                           ;incstack = 0
  6283                           ; Regs used in _lcd_gotoxy: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6284                           ;lcd_gotoxy@col stored from wreg
  6285  0DAC  1283               	bcf	3,5	;RP0=0, select bank0
  6286  0DAD  1303               	bcf	3,6	;RP1=0, select bank0
  6287  0DAE  00A1               	movwf	lcd_gotoxy@col
  6288                           
  6289                           ;lcd44780.c: 156: unsigned char row_offsets[] = {0x00, 0x40, 0x14, 0x54};
  6290  0DAF  1683               	bsf	3,5	;RP0=1, select bank3
  6291  0DB0  1703               	bsf	3,6	;RP1=1, select bank3
  6292  0DB1  0853               	movf	(lcd_gotoxy@F1126+3)^(0+384),w
  6293  0DB2  1283               	bcf	3,5	;RP0=0, select bank0
  6294  0DB3  1303               	bcf	3,6	;RP1=0, select bank0
  6295  0DB4  00A5               	movwf	lcd_gotoxy@row_offsets+3
  6296  0DB5  1683               	bsf	3,5	;RP0=1, select bank3
  6297  0DB6  1703               	bsf	3,6	;RP1=1, select bank3
  6298  0DB7  0852               	movf	(lcd_gotoxy@F1126+2)^(0+384),w
  6299  0DB8  1283               	bcf	3,5	;RP0=0, select bank0
  6300  0DB9  1303               	bcf	3,6	;RP1=0, select bank0
  6301  0DBA  00A4               	movwf	lcd_gotoxy@row_offsets+2
  6302  0DBB  1683               	bsf	3,5	;RP0=1, select bank3
  6303  0DBC  1703               	bsf	3,6	;RP1=1, select bank3
  6304  0DBD  0851               	movf	(lcd_gotoxy@F1126+1)^(0+384),w
  6305  0DBE  1283               	bcf	3,5	;RP0=0, select bank0
  6306  0DBF  1303               	bcf	3,6	;RP1=0, select bank0
  6307  0DC0  00A3               	movwf	lcd_gotoxy@row_offsets+1
  6308  0DC1  1683               	bsf	3,5	;RP0=1, select bank3
  6309  0DC2  1703               	bsf	3,6	;RP1=1, select bank3
  6310  0DC3  0850               	movf	lcd_gotoxy@F1126^(0+384),w
  6311  0DC4  1283               	bcf	3,5	;RP0=0, select bank0
  6312  0DC5  1303               	bcf	3,6	;RP1=0, select bank0
  6313  0DC6  00A2               	movwf	lcd_gotoxy@row_offsets
  6314                           
  6315                           ;lcd44780.c: 165: if(LCD_lines == 1) {
  6316  0DC7  1683               	bsf	3,5	;RP0=1, select bank3
  6317  0DC8  1703               	bsf	3,6	;RP1=1, select bank3
  6318  0DC9  0B20               	decfsz	_LCD_lines^(0+384),w
  6319  0DCA  2DD3               	goto	l3809
  6320                           
  6321                           ;lcd44780.c: 166: row_offsets[1] = 0x14;
  6322  0DCB  3014               	movlw	20
  6323  0DCC  1283               	bcf	3,5	;RP0=0, select bank0
  6324  0DCD  1303               	bcf	3,6	;RP1=0, select bank0
  6325  0DCE  00A3               	movwf	lcd_gotoxy@row_offsets+1
  6326                           
  6327                           ;lcd44780.c: 167: row_offsets[2] = 0x28;
  6328  0DCF  3028               	movlw	40
  6329  0DD0  00A4               	movwf	lcd_gotoxy@row_offsets+2
  6330                           
  6331                           ;lcd44780.c: 168: row_offsets[3] = 0x3C;
  6332  0DD1  303C               	movlw	60
  6333  0DD2  00A5               	movwf	lcd_gotoxy@row_offsets+3
  6334  0DD3                     l3809:	
  6335                           
  6336                           ;lcd44780.c: 169: }
  6337                           ;lcd44780.c: 175: lcd_command(0x80 | (col + row_offsets[row]));
  6338  0DD3  0877               	movf	lcd_gotoxy@row,w
  6339  0DD4  3E22               	addlw	(low (lcd_gotoxy@row_offsets| 0))& (0+255)
  6340  0DD5  0084               	movwf	4
  6341  0DD6  1283               	bcf	3,5	;RP0=0, select bank0
  6342  0DD7  1303               	bcf	3,6	;RP1=0, select bank0
  6343  0DD8  0821               	movf	lcd_gotoxy@col,w
  6344  0DD9  1383               	bcf	3,7	;select IRP bank0
  6345  0DDA  0700               	addwf	0,w
  6346  0DDB  3880               	iorlw	128
  6347  0DDC  2E26               	ljmp	_lcd_command
  6348  0DDD                     __end_of_lcd_gotoxy:	
  6349  0DDD                     __ptext37:	
  6350 ;; *************** function _put_str *****************
  6351 ;; Defined at:
  6352 ;;		line 511 in file "../../../src/print.c"
  6353 ;; Parameters:    Size  Location     Type
  6354 ;;  s               1    wreg     PTR const unsigned char 
  6355 ;;		 -> STR_25(13), STR_24(10), STR_23(6), STR_21(15), 
  6356 ;;		 -> STR_19(12), 
  6357 ;; Auto vars:     Size  Location     Type
  6358 ;;  s               1    2[BANK0 ] PTR const unsigned char 
  6359 ;;		 -> STR_25(13), STR_24(10), STR_23(6), STR_21(15), 
  6360 ;;		 -> STR_19(12), 
  6361 ;;  i               2    0[BANK0 ] int 
  6362 ;; Return value:  Size  Location     Type
  6363 ;;		None               void
  6364 ;; Registers used:
  6365 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6366 ;; Tracked objects:
  6367 ;;		On entry : 0/0
  6368 ;;		On exit  : 300/0
  6369 ;;		Unchanged: 0/0
  6370 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6371 ;;      Params:         0       0       0       0       0
  6372 ;;      Locals:         0       3       0       0       0
  6373 ;;      Temps:          0       0       0       0       0
  6374 ;;      Totals:         0       3       0       0       0
  6375 ;;Total ram usage:        3 bytes
  6376 ;; Hardware stack levels used:    1
  6377 ;; Hardware stack levels required when called:    5
  6378 ;; This function calls:
  6379 ;;		_output_putch
  6380 ;; This function is called by:
  6381 ;;		_calibrate
  6382 ;;		_measure_freq
  6383 ;;		_measure_capacitance
  6384 ;;		_measure_inductance
  6385 ;; This function uses a non-reentrant model
  6386 ;;
  6387                           
  6388                           
  6389                           ;psect for function _put_str
  6390  0DDD                     _put_str:	
  6391                           
  6392                           ;incstack = 0
  6393                           ; Regs used in _put_str: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6394                           ;put_str@s stored from wreg
  6395  0DDD  1283               	bcf	3,5	;RP0=0, select bank0
  6396  0DDE  1303               	bcf	3,6	;RP1=0, select bank0
  6397  0DDF  00A3               	movwf	put_str@s
  6398                           
  6399                           ;print.c: 512: int i;
  6400                           ;print.c: 514: for(i = 0; s[i]; i++) {
  6401  0DE0  01A1               	clrf	put_str@i
  6402  0DE1  01A2               	clrf	put_str@i+1
  6403  0DE2                     l3865:	
  6404  0DE2  0821               	movf	put_str@i,w
  6405  0DE3  0723               	addwf	put_str@s,w
  6406  0DE4  0084               	movwf	4
  6407  0DE5  120A  118A  2012  120A  158A  	fcall	stringdir
  6408  0DEA  3A00               	xorlw	0
  6409  0DEB  1903               	btfsc	3,2
  6410  0DEC  0008               	return
  6411                           
  6412                           ;print.c: 515: output_putch(s[i]);
  6413  0DED  0821               	movf	put_str@i,w
  6414  0DEE  0723               	addwf	put_str@s,w
  6415  0DEF  0084               	movwf	4
  6416  0DF0  120A  118A  2012  120A  158A  	fcall	stringdir
  6417  0DF5  00F7               	movwf	output_putch@c
  6418  0DF6  25FF  120A  158A   	fcall	_output_putch
  6419  0DF9  1283               	bcf	3,5	;RP0=0, select bank0
  6420  0DFA  1303               	bcf	3,6	;RP1=0, select bank0
  6421  0DFB  0AA1               	incf	put_str@i,f
  6422  0DFC  1903               	skipnz
  6423  0DFD  0AA2               	incf	put_str@i+1,f
  6424  0DFE  2DE2               	goto	l3865
  6425  0DFF                     __end_of_put_str:	
  6426  0DFF                     __ptext42:	
  6427 ;; *************** function _output_putch *****************
  6428 ;; Defined at:
  6429 ;;		line 498 in file "../../../src/print.c"
  6430 ;; Parameters:    Size  Location     Type
  6431 ;;  c               1    7[COMMON] unsigned char 
  6432 ;; Auto vars:     Size  Location     Type
  6433 ;;		None
  6434 ;; Return value:  Size  Location     Type
  6435 ;;		None               void
  6436 ;; Registers used:
  6437 ;;		wreg, status,2, status,0, pclath, cstack
  6438 ;; Tracked objects:
  6439 ;;		On entry : 0/300
  6440 ;;		On exit  : 0/0
  6441 ;;		Unchanged: 0/0
  6442 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6443 ;;      Params:         1       0       0       0       0
  6444 ;;      Locals:         0       0       0       0       0
  6445 ;;      Temps:          0       0       0       0       0
  6446 ;;      Totals:         1       0       0       0       0
  6447 ;;Total ram usage:        1 bytes
  6448 ;; Hardware stack levels used:    1
  6449 ;; Hardware stack levels required when called:    4
  6450 ;; This function calls:
  6451 ;;		_lcd_putch
  6452 ;; This function is called by:
  6453 ;;		_put_str
  6454 ;;		_measure_capacitance
  6455 ;;		_format_number
  6456 ;;		_format_double
  6457 ;; This function uses a non-reentrant model
  6458 ;;
  6459                           
  6460                           
  6461                           ;psect for function _output_putch
  6462  0DFF                     _output_putch:	
  6463                           
  6464                           ;print.c: 500: lcd_putch(c);
  6465                           
  6466                           ;incstack = 0
  6467                           ; Regs used in _output_putch: [wreg+status,2+status,0+pclath+cstack]
  6468  0DFF  0877               	movf	output_putch@c,w
  6469  0E00  00F7               	movwf	lcd_putch@value
  6470  0E01  2E3C               	ljmp	_lcd_putch
  6471  0E02                     __end_of_output_putch:	
  6472  0E02                     __ptext21:	
  6473 ;; *************** function ___flsub *****************
  6474 ;; Defined at:
  6475 ;;		line 18 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\flsub.c"
  6476 ;; Parameters:    Size  Location     Type
  6477 ;;  f2              4   57[BANK0 ] unsigned char 
  6478 ;;  f1              4   61[BANK0 ] unsigned char 
  6479 ;; Auto vars:     Size  Location     Type
  6480 ;;		None
  6481 ;; Return value:  Size  Location     Type
  6482 ;;                  4   57[BANK0 ] unsigned char 
  6483 ;; Registers used:
  6484 ;;		wreg, status,2, status,0, pclath, cstack
  6485 ;; Tracked objects:
  6486 ;;		On entry : 300/0
  6487 ;;		On exit  : 300/0
  6488 ;;		Unchanged: 0/0
  6489 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6490 ;;      Params:         0       8       0       0       0
  6491 ;;      Locals:         0       0       0       0       0
  6492 ;;      Temps:          0       0       0       0       0
  6493 ;;      Totals:         0       8       0       0       0
  6494 ;;Total ram usage:        8 bytes
  6495 ;; Hardware stack levels used:    1
  6496 ;; Hardware stack levels required when called:    3
  6497 ;; This function calls:
  6498 ;;		___fladd
  6499 ;; This function is called by:
  6500 ;;		_format_double
  6501 ;;		_measure_capacitance
  6502 ;;		_measure_inductance
  6503 ;;		_exp
  6504 ;; This function uses a non-reentrant model
  6505 ;;
  6506                           
  6507                           
  6508                           ;psect for function ___flsub
  6509  0E02                     ___flsub:	
  6510                           
  6511                           ;incstack = 0
  6512                           ; Regs used in ___flsub: [wreg+status,2+status,0+pclath+cstack]
  6513  0E02  085D               	movf	___flsub@f2+3,w
  6514  0E03  045C               	iorwf	___flsub@f2+2,w
  6515  0E04  045B               	iorwf	___flsub@f2+1,w
  6516  0E05  045A               	iorwf	___flsub@f2,w
  6517  0E06  1903               	skipnz
  6518  0E07  2E0A               	goto	l3749
  6519  0E08  3080               	movlw	128
  6520  0E09  06DD               	xorwf	___flsub@f2+3,f
  6521  0E0A                     l3749:	
  6522  0E0A  085D               	movf	___flsub@f2+3,w
  6523  0E0B  00CE               	movwf	___fladd@f1+3
  6524  0E0C  085C               	movf	___flsub@f2+2,w
  6525  0E0D  00CD               	movwf	___fladd@f1+2
  6526  0E0E  085B               	movf	___flsub@f2+1,w
  6527  0E0F  00CC               	movwf	___fladd@f1+1
  6528  0E10  085A               	movf	___flsub@f2,w
  6529  0E11  00CB               	movwf	___fladd@f1
  6530  0E12  0861               	movf	___flsub@f1+3,w
  6531  0E13  00D2               	movwf	___fladd@f2+3
  6532  0E14  0860               	movf	___flsub@f1+2,w
  6533  0E15  00D1               	movwf	___fladd@f2+2
  6534  0E16  085F               	movf	___flsub@f1+1,w
  6535  0E17  00D0               	movwf	___fladd@f2+1
  6536  0E18  085E               	movf	___flsub@f1,w
  6537  0E19  00CF               	movwf	___fladd@f2
  6538  0E1A  160A  118A  2096   	fcall	___fladd
  6539  0E1D  084E               	movf	?___fladd+3,w
  6540  0E1E  00DD               	movwf	?___flsub+3
  6541  0E1F  084D               	movf	?___fladd+2,w
  6542  0E20  00DC               	movwf	?___flsub+2
  6543  0E21  084C               	movf	?___fladd+1,w
  6544  0E22  00DB               	movwf	?___flsub+1
  6545  0E23  084B               	movf	?___fladd,w
  6546  0E24  00DA               	movwf	?___flsub
  6547  0E25  0008               	return
  6548  0E26                     __end_of___flsub:	
  6549  0E26                     __ptext46:	
  6550 ;; *************** function _lcd_command *****************
  6551 ;; Defined at:
  6552 ;;		line 146 in file "../../../lib/lcd44780.c"
  6553 ;; Parameters:    Size  Location     Type
  6554 ;;  value           1    wreg     unsigned char 
  6555 ;; Auto vars:     Size  Location     Type
  6556 ;;  value           1    6[COMMON] unsigned char 
  6557 ;; Return value:  Size  Location     Type
  6558 ;;		None               void
  6559 ;; Registers used:
  6560 ;;		wreg, status,2, status,0, pclath, cstack
  6561 ;; Tracked objects:
  6562 ;;		On entry : 0/0
  6563 ;;		On exit  : 0/0
  6564 ;;		Unchanged: 0/0
  6565 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6566 ;;      Params:         0       0       0       0       0
  6567 ;;      Locals:         1       0       0       0       0
  6568 ;;      Temps:          0       0       0       0       0
  6569 ;;      Totals:         1       0       0       0       0
  6570 ;;Total ram usage:        1 bytes
  6571 ;; Hardware stack levels used:    1
  6572 ;; Hardware stack levels required when called:    3
  6573 ;; This function calls:
  6574 ;;		_lcd_send
  6575 ;; This function is called by:
  6576 ;;		_lcd_gotoxy
  6577 ;;		_lcd_clear
  6578 ;;		_lcd_begin
  6579 ;; This function uses a non-reentrant model
  6580 ;;
  6581                           
  6582                           
  6583                           ;psect for function _lcd_command
  6584  0E26                     _lcd_command:	
  6585                           
  6586                           ;incstack = 0
  6587                           ; Regs used in _lcd_command: [wreg+status,2+status,0+pclath+cstack]
  6588                           ;lcd_command@value stored from wreg
  6589  0E26  00F6               	movwf	lcd_command@value
  6590                           
  6591                           ;lcd44780.c: 147: lcd_send(value, 0);
  6592  0E27  01F4               	clrf	lcd_send@mode
  6593  0E28  2E29               	ljmp	_lcd_send
  6594  0E29                     __end_of_lcd_command:	
  6595  0E29                     __ptext47:	
  6596 ;; *************** function _lcd_send *****************
  6597 ;; Defined at:
  6598 ;;		line 122 in file "../../../lib/lcd44780.c"
  6599 ;; Parameters:    Size  Location     Type
  6600 ;;  value           1    wreg     unsigned char 
  6601 ;;  mode            1    4[COMMON] unsigned char 
  6602 ;; Auto vars:     Size  Location     Type
  6603 ;;  value           1    5[COMMON] unsigned char 
  6604 ;; Return value:  Size  Location     Type
  6605 ;;		None               void
  6606 ;; Registers used:
  6607 ;;		wreg, status,2, status,0, pclath, cstack
  6608 ;; Tracked objects:
  6609 ;;		On entry : 0/100
  6610 ;;		On exit  : 0/0
  6611 ;;		Unchanged: 0/0
  6612 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6613 ;;      Params:         1       0       0       0       0
  6614 ;;      Locals:         1       0       0       0       0
  6615 ;;      Temps:          0       0       0       0       0
  6616 ;;      Totals:         2       0       0       0       0
  6617 ;;Total ram usage:        2 bytes
  6618 ;; Hardware stack levels used:    1
  6619 ;; Hardware stack levels required when called:    2
  6620 ;; This function calls:
  6621 ;;		_lcd_write4bits
  6622 ;; This function is called by:
  6623 ;;		_lcd_putch
  6624 ;;		_lcd_command
  6625 ;; This function uses a non-reentrant model
  6626 ;;
  6627                           
  6628                           
  6629                           ;psect for function _lcd_send
  6630  0E29                     _lcd_send:	
  6631                           
  6632                           ;incstack = 0
  6633                           ; Regs used in _lcd_send: [wreg+status,2+status,0+pclath+cstack]
  6634                           ;lcd_send@value stored from wreg
  6635  0E29  00F5               	movwf	lcd_send@value
  6636                           
  6637                           ;lcd44780.c: 123: RB2 = mode;
  6638  0E2A  1C74               	btfss	lcd_send@mode,0
  6639  0E2B  2E30               	goto	u3070
  6640  0E2C  1283               	bcf	3,5	;RP0=0, select bank0
  6641  0E2D  1303               	bcf	3,6	;RP1=0, select bank0
  6642  0E2E  1506               	bsf	6,2	;volatile
  6643  0E2F  2E33               	goto	l3499
  6644  0E30                     u3070:	
  6645  0E30  1283               	bcf	3,5	;RP0=0, select bank0
  6646  0E31  1303               	bcf	3,6	;RP1=0, select bank0
  6647  0E32  1106               	bcf	6,2	;volatile
  6648  0E33                     l3499:	
  6649                           
  6650                           ;lcd44780.c: 130: {
  6651                           ;lcd44780.c: 131: lcd_write4bits(value >> 4);
  6652  0E33  0E75               	swapf	lcd_send@value,w
  6653  0E34  390F               	andlw	15
  6654  0E35  120A  118A  27A3   	fcall	_lcd_write4bits
  6655                           
  6656                           ;lcd44780.c: 132: lcd_write4bits(value);
  6657  0E38  0875               	movf	lcd_send@value,w
  6658  0E39  120A  118A  2FA3   	ljmp	_lcd_write4bits
  6659  0E3C                     __end_of_lcd_send:	
  6660  0E3C                     __ptext41:	
  6661 ;; *************** function _lcd_putch *****************
  6662 ;; Defined at:
  6663 ;;		line 139 in file "../../../lib/lcd44780.c"
  6664 ;; Parameters:    Size  Location     Type
  6665 ;;  value           1    7[COMMON] unsigned char 
  6666 ;; Auto vars:     Size  Location     Type
  6667 ;;		None
  6668 ;; Return value:  Size  Location     Type
  6669 ;;		None               void
  6670 ;; Registers used:
  6671 ;;		wreg, status,2, status,0, pclath, cstack
  6672 ;; Tracked objects:
  6673 ;;		On entry : 0/100
  6674 ;;		On exit  : 0/0
  6675 ;;		Unchanged: 0/0
  6676 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6677 ;;      Params:         1       0       0       0       0
  6678 ;;      Locals:         0       0       0       0       0
  6679 ;;      Temps:          0       0       0       0       0
  6680 ;;      Totals:         1       0       0       0       0
  6681 ;;Total ram usage:        1 bytes
  6682 ;; Hardware stack levels used:    1
  6683 ;; Hardware stack levels required when called:    3
  6684 ;; This function calls:
  6685 ;;		_lcd_send
  6686 ;; This function is called by:
  6687 ;;		_output_putch
  6688 ;;		_main
  6689 ;;		_lcd_puts
  6690 ;;		_calibrate
  6691 ;;		_format_number
  6692 ;;		_format_double
  6693 ;; This function uses a non-reentrant model
  6694 ;;
  6695                           
  6696                           
  6697                           ;psect for function _lcd_putch
  6698  0E3C                     _lcd_putch:	
  6699                           
  6700                           ;lcd44780.c: 140: lcd_send((unsigned)value, 1);
  6701                           
  6702                           ;incstack = 0
  6703                           ; Regs used in _lcd_putch: [wreg+status,2+status,0+pclath+cstack]
  6704  0E3C  01F4               	clrf	lcd_send@mode
  6705  0E3D  0AF4               	incf	lcd_send@mode,f
  6706  0E3E  0877               	movf	lcd_putch@value,w
  6707  0E3F  2E29               	ljmp	_lcd_send
  6708  0E40                     __end_of_lcd_putch:	
  6709  0E40                     __ptext26:	
  6710 ;; *************** function _frexp *****************
  6711 ;; Defined at:
  6712 ;;		line 254 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\frexp.c"
  6713 ;; Parameters:    Size  Location     Type
  6714 ;;  value           4    2[COMMON] int 
  6715 ;;  eptr            1    6[COMMON] PTR int 
  6716 ;;		 -> log@exponent(2), floor@expon(2), 
  6717 ;; Auto vars:     Size  Location     Type
  6718 ;;		None
  6719 ;; Return value:  Size  Location     Type
  6720 ;;                  4    2[COMMON] PTR int 
  6721 ;; Registers used:
  6722 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
  6723 ;; Tracked objects:
  6724 ;;		On entry : 200/100
  6725 ;;		On exit  : A00/0
  6726 ;;		Unchanged: 200/0
  6727 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6728 ;;      Params:         5       0       0       0       0
  6729 ;;      Locals:         0       0       0       0       0
  6730 ;;      Temps:          2       0       0       0       0
  6731 ;;      Totals:         7       0       0       0       0
  6732 ;;Total ram usage:        7 bytes
  6733 ;; Hardware stack levels used:    1
  6734 ;; Hardware stack levels required when called:    1
  6735 ;; This function calls:
  6736 ;;		Nothing
  6737 ;; This function is called by:
  6738 ;;		_floor
  6739 ;;		_log
  6740 ;; This function uses a non-reentrant model
  6741 ;;
  6742                           
  6743                           
  6744                           ;psect for function _frexp
  6745  0E40                     _frexp:	
  6746                           
  6747                           ;incstack = 0
  6748                           ; Regs used in _frexp: [wreg-fsr0h+status,2+status,0+btemp+1]
  6749  0E40  0875               	movf	frexp@value+3,w
  6750  0E41  0474               	iorwf	frexp@value+2,w
  6751  0E42  0473               	iorwf	frexp@value+1,w
  6752  0E43  0472               	iorwf	frexp@value,w
  6753  0E44  1D03               	skipz
  6754  0E45  2E51               	goto	l2529
  6755  0E46  0876               	movf	frexp@eptr,w
  6756  0E47  0084               	movwf	4
  6757  0E48  1383               	bcf	3,7	;select IRP bank0
  6758  0E49  0180               	clrf	0
  6759  0E4A  0A84               	incf	4,f
  6760  0E4B  0180               	clrf	0
  6761  0E4C  01F2               	clrf	?_frexp
  6762  0E4D  01F3               	clrf	?_frexp+1
  6763  0E4E  01F4               	clrf	?_frexp+2
  6764  0E4F  01F5               	clrf	?_frexp+3
  6765  0E50  0008               	return
  6766  0E51                     l2529:	
  6767  0E51  0875               	movf	frexp@value+3,w
  6768  0E52  397F               	andlw	127
  6769  0E53  00F7               	movwf	??_frexp
  6770  0E54  01F8               	clrf	??_frexp+1
  6771  0E55  1003               	clrc
  6772  0E56  0DF7               	rlf	??_frexp,f
  6773  0E57  0DF8               	rlf	??_frexp+1,f
  6774  0E58  0876               	movf	frexp@eptr,w
  6775  0E59  0084               	movwf	4
  6776  0E5A  0877               	movf	??_frexp,w
  6777  0E5B  1383               	bcf	3,7	;select IRP bank0
  6778  0E5C  0080               	movwf	0
  6779  0E5D  0A84               	incf	4,f
  6780  0E5E  0878               	movf	??_frexp+1,w
  6781  0E5F  0080               	movwf	0
  6782  0E60  0D74               	rlf	frexp@value+2,w
  6783  0E61  0D74               	rlf	frexp@value+2,w
  6784  0E62  3901               	andlw	1
  6785  0E63  00F7               	movwf	??_frexp
  6786  0E64  01F8               	clrf	??_frexp+1
  6787  0E65  0876               	movf	frexp@eptr,w
  6788  0E66  0084               	movwf	4
  6789  0E67  0877               	movf	??_frexp,w
  6790  0E68  0480               	iorwf	0,f
  6791  0E69  0A84               	incf	4,f
  6792  0E6A  0878               	movf	??_frexp+1,w
  6793  0E6B  0480               	iorwf	0,f
  6794  0E6C  0876               	movf	frexp@eptr,w
  6795  0E6D  0084               	movwf	4
  6796  0E6E  3082               	movlw	130
  6797  0E6F  0780               	addwf	0,f
  6798  0E70  0F84               	incfsz	4,f
  6799  0E71  0800               	movf	0,w
  6800  0E72  1803               	skipnc
  6801  0E73  0A00               	incf	0,w
  6802  0E74  00FF               	movwf	127
  6803  0E75  3EFF               	addlw	255
  6804  0E76  0080               	movwf	0
  6805  0E77  0384               	decf	4,f
  6806  0E78  0875               	movf	frexp@value+3,w
  6807  0E79  3980               	andlw	-128
  6808  0E7A  383F               	iorlw	63
  6809  0E7B  00F5               	movwf	frexp@value+3
  6810  0E7C  13F4               	bcf	frexp@value+2,7
  6811  0E7D  0008               	return
  6812  0E7E                     __end_of_frexp:	
  6813  0E7E                     __ptext20:	
  6814 ;; *************** function ___altofl *****************
  6815 ;; Defined at:
  6816 ;;		line 36 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\altofl.c"
  6817 ;; Parameters:    Size  Location     Type
  6818 ;;  c               4   18[BANK1 ] long 
  6819 ;; Auto vars:     Size  Location     Type
  6820 ;;  sign            1   22[BANK1 ] unsigned char 
  6821 ;; Return value:  Size  Location     Type
  6822 ;;                  4   18[BANK1 ] unsigned char 
  6823 ;; Registers used:
  6824 ;;		wreg, status,2, status,0, pclath, cstack
  6825 ;; Tracked objects:
  6826 ;;		On entry : 300/100
  6827 ;;		On exit  : 300/100
  6828 ;;		Unchanged: 0/0
  6829 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6830 ;;      Params:         0       0       4       0       0
  6831 ;;      Locals:         0       0       1       0       0
  6832 ;;      Temps:          0       0       0       0       0
  6833 ;;      Totals:         0       0       5       0       0
  6834 ;;Total ram usage:        5 bytes
  6835 ;; Hardware stack levels used:    1
  6836 ;; Hardware stack levels required when called:    2
  6837 ;; This function calls:
  6838 ;;		___flpack
  6839 ;; This function is called by:
  6840 ;;		_floor
  6841 ;; This function uses a non-reentrant model
  6842 ;;
  6843                           
  6844                           
  6845                           ;psect for function ___altofl
  6846  0E7E                     ___altofl:	
  6847                           
  6848                           ;incstack = 0
  6849                           ; Regs used in ___altofl: [wreg+status,2+status,0+pclath+cstack]
  6850  0E7E  01B6               	clrf	___altofl@sign^(0+128)
  6851  0E7F  1FB5               	btfss	(___altofl@c+3)^(0+128),7
  6852  0E80  2E8E               	goto	l3535
  6853  0E81  09B2               	comf	___altofl@c^(0+128),f
  6854  0E82  09B3               	comf	(___altofl@c+1)^(0+128),f
  6855  0E83  09B4               	comf	(___altofl@c+2)^(0+128),f
  6856  0E84  09B5               	comf	(___altofl@c+3)^(0+128),f
  6857  0E85  0AB2               	incf	___altofl@c^(0+128),f
  6858  0E86  1903               	skipnz
  6859  0E87  0AB3               	incf	(___altofl@c+1)^(0+128),f
  6860  0E88  1903               	skipnz
  6861  0E89  0AB4               	incf	(___altofl@c+2)^(0+128),f
  6862  0E8A  1903               	skipnz
  6863  0E8B  0AB5               	incf	(___altofl@c+3)^(0+128),f
  6864  0E8C  01B6               	clrf	___altofl@sign^(0+128)
  6865  0E8D  0AB6               	incf	___altofl@sign^(0+128),f
  6866  0E8E                     l3535:	
  6867  0E8E  0835               	movf	(___altofl@c+3)^(0+128),w
  6868  0E8F  00F5               	movwf	___flpack@arg+3
  6869  0E90  0834               	movf	(___altofl@c+2)^(0+128),w
  6870  0E91  00F4               	movwf	___flpack@arg+2
  6871  0E92  0833               	movf	(___altofl@c+1)^(0+128),w
  6872  0E93  00F3               	movwf	___flpack@arg+1
  6873  0E94  0832               	movf	___altofl@c^(0+128),w
  6874  0E95  00F2               	movwf	___flpack@arg
  6875  0E96  3096               	movlw	150
  6876  0E97  00F6               	movwf	___flpack@exp
  6877  0E98  0836               	movf	___altofl@sign^(0+128),w
  6878  0E99  00F7               	movwf	___flpack@sign
  6879  0E9A  255C               	fcall	___flpack
  6880  0E9B  0875               	movf	?___flpack+3,w
  6881  0E9C  1683               	bsf	3,5	;RP0=1, select bank1
  6882  0E9D  00B5               	movwf	(?___altofl+3)^(0+128)
  6883  0E9E  0874               	movf	?___flpack+2,w
  6884  0E9F  00B4               	movwf	(?___altofl+2)^(0+128)
  6885  0EA0  0873               	movf	?___flpack+1,w
  6886  0EA1  00B3               	movwf	(?___altofl+1)^(0+128)
  6887  0EA2  0872               	movf	?___flpack,w
  6888  0EA3  00B2               	movwf	?___altofl^(0+128)
  6889  0EA4  0008               	return
  6890  0EA5                     __end_of___altofl:	
  6891  0EA5                     __ptext17:	
  6892 ;; *************** function ___flneg *****************
  6893 ;; Defined at:
  6894 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\flneg.c"
  6895 ;; Parameters:    Size  Location     Type
  6896 ;;  f1              4    2[COMMON] int 
  6897 ;; Auto vars:     Size  Location     Type
  6898 ;;		None
  6899 ;; Return value:  Size  Location     Type
  6900 ;;                  4    2[COMMON] int 
  6901 ;; Registers used:
  6902 ;;		wreg
  6903 ;; Tracked objects:
  6904 ;;		On entry : 300/100
  6905 ;;		On exit  : 300/100
  6906 ;;		Unchanged: 300/0
  6907 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6908 ;;      Params:         4       0       0       0       0
  6909 ;;      Locals:         0       0       0       0       0
  6910 ;;      Temps:          0       0       0       0       0
  6911 ;;      Totals:         4       0       0       0       0
  6912 ;;Total ram usage:        4 bytes
  6913 ;; Hardware stack levels used:    1
  6914 ;; Hardware stack levels required when called:    1
  6915 ;; This function calls:
  6916 ;;		Nothing
  6917 ;; This function is called by:
  6918 ;;		_ldexp
  6919 ;;		_pow
  6920 ;;		_exp
  6921 ;; This function uses a non-reentrant model
  6922 ;;
  6923                           
  6924                           
  6925                           ;psect for function ___flneg
  6926  0EA5                     ___flneg:	
  6927                           
  6928                           ;incstack = 0
  6929                           ; Regs used in ___flneg: [wreg]
  6930  0EA5  0875               	movf	___flneg@f1+3,w
  6931  0EA6  0474               	iorwf	___flneg@f1+2,w
  6932  0EA7  0473               	iorwf	___flneg@f1+1,w
  6933  0EA8  0472               	iorwf	___flneg@f1,w
  6934  0EA9  1903               	skipnz
  6935  0EAA  0008               	return
  6936  0EAB  3080               	movlw	128
  6937  0EAC  06F5               	xorwf	___flneg@f1+3,f
  6938  0EAD  0008               	return
  6939  0EAE                     __end_of___flneg:	
  6940  0EAE                     __ptext16:	
  6941 ;; *************** function _ldexp *****************
  6942 ;; Defined at:
  6943 ;;		line 277 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\frexp.c"
  6944 ;; Parameters:    Size  Location     Type
  6945 ;;  value           4   73[BANK0 ] unsigned char 
  6946 ;;  newexp          2   77[BANK0 ] int 
  6947 ;; Auto vars:     Size  Location     Type
  6948 ;;		None
  6949 ;; Return value:  Size  Location     Type
  6950 ;;                  4   73[BANK0 ] int 
  6951 ;; Registers used:
  6952 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  6953 ;; Tracked objects:
  6954 ;;		On entry : 300/0
  6955 ;;		On exit  : 300/0
  6956 ;;		Unchanged: 0/0
  6957 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6958 ;;      Params:         0       6       0       0       0
  6959 ;;      Locals:         0       0       4       0       0
  6960 ;;      Temps:          0       0       2       0       0
  6961 ;;      Totals:         0       6       6       0       0
  6962 ;;Total ram usage:       12 bytes
  6963 ;; Hardware stack levels used:    1
  6964 ;; Hardware stack levels required when called:    2
  6965 ;; This function calls:
  6966 ;;		___flge
  6967 ;;		___flneg
  6968 ;; This function is called by:
  6969 ;;		_exp
  6970 ;; This function uses a non-reentrant model
  6971 ;;
  6972                           
  6973                           
  6974                           ;psect for function _ldexp
  6975  0EAE                     _ldexp:	
  6976                           
  6977                           ;incstack = 0
  6978                           ; Regs used in _ldexp: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  6979  0EAE  086D               	movf	ldexp@value+3,w
  6980  0EAF  046C               	iorwf	ldexp@value+2,w
  6981  0EB0  046B               	iorwf	ldexp@value+1,w
  6982  0EB1  046A               	iorwf	ldexp@value,w
  6983  0EB2  1D03               	skipz
  6984  0EB3  2EB9               	goto	l3757
  6985  0EB4  01EA               	clrf	?_ldexp
  6986  0EB5  01EB               	clrf	?_ldexp+1
  6987  0EB6  01EC               	clrf	?_ldexp+2
  6988  0EB7  01ED               	clrf	?_ldexp+3
  6989  0EB8  0008               	return
  6990  0EB9                     l3757:	
  6991  0EB9  086D               	movf	ldexp@value+3,w
  6992  0EBA  397F               	andlw	127
  6993  0EBB  1683               	bsf	3,5	;RP0=1, select bank1
  6994  0EBC  00A0               	movwf	??_ldexp^(0+128)
  6995  0EBD  01A1               	clrf	(??_ldexp^(0+128)+1)
  6996  0EBE  1003               	clrc
  6997  0EBF  0DA0               	rlf	??_ldexp^(0+128),f
  6998  0EC0  0DA1               	rlf	(??_ldexp^(0+128)+1),f
  6999  0EC1  0820               	movf	??_ldexp^(0+128),w
  7000  0EC2  1283               	bcf	3,5	;RP0=0, select bank0
  7001  0EC3  07EE               	addwf	ldexp@newexp,f
  7002  0EC4  1803               	skipnc
  7003  0EC5  0AEF               	incf	ldexp@newexp+1,f
  7004  0EC6  1683               	bsf	3,5	;RP0=1, select bank1
  7005  0EC7  0821               	movf	(??_ldexp+1)^(0+128),w
  7006  0EC8  1283               	bcf	3,5	;RP0=0, select bank0
  7007  0EC9  07EF               	addwf	ldexp@newexp+1,f
  7008  0ECA  0D6C               	rlf	ldexp@value+2,w
  7009  0ECB  0D6C               	rlf	ldexp@value+2,w
  7010  0ECC  3901               	andlw	1
  7011  0ECD  07EE               	addwf	ldexp@newexp,f
  7012  0ECE  1803               	skipnc
  7013  0ECF  0AEF               	incf	ldexp@newexp+1,f
  7014  0ED0  1FEF               	btfss	ldexp@newexp+1,7
  7015  0ED1  2ED7               	goto	l3765
  7016  0ED2  01EA               	clrf	?_ldexp
  7017  0ED3  01EB               	clrf	?_ldexp+1
  7018  0ED4  01EC               	clrf	?_ldexp+2
  7019  0ED5  01ED               	clrf	?_ldexp+3
  7020  0ED6  0008               	return
  7021  0ED7                     l3765:	
  7022  0ED7  086F               	movf	ldexp@newexp+1,w
  7023  0ED8  3A80               	xorlw	128
  7024  0ED9  00FF               	movwf	127
  7025  0EDA  3081               	movlw	129
  7026  0EDB  027F               	subwf	127,w
  7027  0EDC  1D03               	skipz
  7028  0EDD  2EE0               	goto	u3585
  7029  0EDE  3000               	movlw	0
  7030  0EDF  026E               	subwf	ldexp@newexp,w
  7031  0EE0                     u3585:	
  7032  0EE0  1C03               	skipc
  7033  0EE1  2F1C               	goto	l3787
  7034  0EE2  1283               	bcf	3,5	;RP0=0, select bank0
  7035  0EE3  1303               	bcf	3,6	;RP1=0, select bank0
  7036  0EE4  086D               	movf	ldexp@value+3,w
  7037  0EE5  00F5               	movwf	___flge@ff1+3
  7038  0EE6  086C               	movf	ldexp@value+2,w
  7039  0EE7  00F4               	movwf	___flge@ff1+2
  7040  0EE8  086B               	movf	ldexp@value+1,w
  7041  0EE9  00F3               	movwf	___flge@ff1+1
  7042  0EEA  086A               	movf	ldexp@value,w
  7043  0EEB  00F2               	movwf	___flge@ff1
  7044  0EEC  01F6               	clrf	___flge@ff2
  7045  0EED  01F7               	clrf	___flge@ff2+1
  7046  0EEE  01F8               	clrf	___flge@ff2+2
  7047  0EEF  01F9               	clrf	___flge@ff2+3
  7048  0EF0  160A  118A  2679  120A  158A  	fcall	___flge
  7049  0EF5  307F               	movlw	127
  7050  0EF6  1803               	btfsc	3,0
  7051  0EF7  2F13               	goto	L8
  7052  0EF8  1683               	bsf	3,5	;RP0=1, select bank1
  7053  0EF9  1303               	bcf	3,6	;RP1=0, select bank1
  7054  0EFA  00A5               	movwf	(_ldexp$686+3)^(0+128)
  7055  0EFB  00A4               	movwf	(_ldexp$686+2)^(0+128)
  7056  0EFC  30FE               	movlw	254
  7057  0EFD  00A3               	movwf	(_ldexp$686+1)^(0+128)
  7058  0EFE  30F7               	movlw	247
  7059  0EFF  00A2               	movwf	_ldexp$686^(0+128)
  7060  0F00  0825               	movf	(_ldexp$686+3)^(0+128),w
  7061  0F01  00F5               	movwf	___flneg@f1+3
  7062  0F02  0824               	movf	(_ldexp$686+2)^(0+128),w
  7063  0F03  00F4               	movwf	___flneg@f1+2
  7064  0F04  0823               	movf	(_ldexp$686+1)^(0+128),w
  7065  0F05  00F3               	movwf	___flneg@f1+1
  7066  0F06  0822               	movf	_ldexp$686^(0+128),w
  7067  0F07  00F2               	movwf	___flneg@f1
  7068  0F08  26A5               	fcall	___flneg
  7069  0F09  0875               	movf	?___flneg+3,w
  7070  0F0A  1283               	bcf	3,5	;RP0=0, select bank0
  7071  0F0B  00ED               	movwf	?_ldexp+3
  7072  0F0C  0874               	movf	?___flneg+2,w
  7073  0F0D  00EC               	movwf	?_ldexp+2
  7074  0F0E  0873               	movf	?___flneg+1,w
  7075  0F0F  00EB               	movwf	?_ldexp+1
  7076  0F10  0872               	movf	?___flneg,w
  7077  0F11  00EA               	movwf	?_ldexp
  7078  0F12  0008               	return
  7079  0F13                     L8:	
  7080  0F13  1283               	bcf	3,5	;RP0=0, select bank0
  7081  0F14  1303               	bcf	3,6	;RP1=0, select bank0
  7082  0F15  00ED               	movwf	?_ldexp+3
  7083  0F16  00EC               	movwf	?_ldexp+2
  7084  0F17  30FE               	movlw	254
  7085  0F18  00EB               	movwf	?_ldexp+1
  7086  0F19  30F7               	movlw	247
  7087  0F1A  00EA               	movwf	?_ldexp
  7088  0F1B  0008               	return
  7089  0F1C                     l3787:	
  7090  0F1C  1283               	bcf	3,5	;RP0=0, select bank0
  7091  0F1D  1303               	bcf	3,6	;RP1=0, select bank0
  7092  0F1E  086F               	movf	ldexp@newexp+1,w
  7093  0F1F  1683               	bsf	3,5	;RP0=1, select bank1
  7094  0F20  00A1               	movwf	(??_ldexp^(0+128)+1)
  7095  0F21  1283               	bcf	3,5	;RP0=0, select bank0
  7096  0F22  086E               	movf	ldexp@newexp,w
  7097  0F23  1683               	bsf	3,5	;RP0=1, select bank1
  7098  0F24  00A0               	movwf	??_ldexp^(0+128)
  7099  0F25  0D21               	rlf	(??_ldexp^(0+128)+1),w
  7100  0F26  0CA1               	rrf	(??_ldexp^(0+128)+1),f
  7101  0F27  0CA0               	rrf	??_ldexp^(0+128),f
  7102  0F28  1283               	bcf	3,5	;RP0=0, select bank0
  7103  0F29  086D               	movf	ldexp@value+3,w
  7104  0F2A  1683               	bsf	3,5	;RP0=1, select bank1
  7105  0F2B  0620               	xorwf	??_ldexp^(0+128),w
  7106  0F2C  3980               	andlw	-128
  7107  0F2D  0620               	xorwf	??_ldexp^(0+128),w
  7108  0F2E  1283               	bcf	3,5	;RP0=0, select bank0
  7109  0F2F  00ED               	movwf	ldexp@value+3
  7110  0F30  086E               	movf	ldexp@newexp,w
  7111  0F31  3901               	andlw	1
  7112  0F32  1683               	bsf	3,5	;RP0=1, select bank1
  7113  0F33  00A0               	movwf	??_ldexp^(0+128)
  7114  0F34  0CA0               	rrf	??_ldexp^(0+128),f
  7115  0F35  0CA0               	rrf	??_ldexp^(0+128),f
  7116  0F36  1283               	bcf	3,5	;RP0=0, select bank0
  7117  0F37  086C               	movf	ldexp@value+2,w
  7118  0F38  1683               	bsf	3,5	;RP0=1, select bank1
  7119  0F39  0620               	xorwf	??_ldexp^(0+128),w
  7120  0F3A  397F               	andlw	-129
  7121  0F3B  0620               	xorwf	??_ldexp^(0+128),w
  7122  0F3C  1283               	bcf	3,5	;RP0=0, select bank0
  7123  0F3D  00EC               	movwf	ldexp@value+2
  7124  0F3E  0008               	return
  7125  0F3F                     __end_of_ldexp:	
  7126  0F3F                     __ptext8:	
  7127 ;; *************** function _print_reading *****************
  7128 ;; Defined at:
  7129 ;;		line 432 in file "../../../src/print.c"
  7130 ;; Parameters:    Size  Location     Type
  7131 ;;  measurement     2   41[BANK0 ] unsigned short 
  7132 ;; Auto vars:     Size  Location     Type
  7133 ;;		None
  7134 ;; Return value:  Size  Location     Type
  7135 ;;		None               void
  7136 ;; Registers used:
  7137 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  7138 ;; Tracked objects:
  7139 ;;		On entry : 300/0
  7140 ;;		On exit  : 300/0
  7141 ;;		Unchanged: 0/0
  7142 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7143 ;;      Params:         0       2       0       0       0
  7144 ;;      Locals:         0       4       0       0       0
  7145 ;;      Temps:          0       0       0       0       0
  7146 ;;      Totals:         0       6       0       0       0
  7147 ;;Total ram usage:        6 bytes
  7148 ;; Hardware stack levels used:    1
  7149 ;; Hardware stack levels required when called:    6
  7150 ;; This function calls:
  7151 ;;		___lwdiv
  7152 ;;		___lwmod
  7153 ;;		_format_number
  7154 ;;		_lcd_gotoxy
  7155 ;;		_lcd_puts
  7156 ;; This function is called by:
  7157 ;;		_measure_capacitance
  7158 ;;		_measure_inductance
  7159 ;; This function uses a non-reentrant model
  7160 ;;
  7161                           
  7162                           
  7163                           ;psect for function _print_reading
  7164  0F3F                     _print_reading:	
  7165                           
  7166                           ;incstack = 0
  7167                           ; Regs used in _print_reading: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  7168  0F3F  3009               	movlw	9
  7169                           
  7170                           ;print.c: 459: lcd_gotoxy(9, 0);
  7171  0F40  01F7               	clrf	lcd_gotoxy@row
  7172  0F41  25AC  120A  158A   	fcall	_lcd_gotoxy
  7173                           
  7174                           ;print.c: 460: lcd_puts("     ");
  7175  0F44  308A               	movlw	(low (((STR_15+1)-__stringbase)| (0+32768)))& (0+255)
  7176  0F45  27E5  120A  158A   	fcall	_lcd_puts
  7177  0F48  3009               	movlw	9
  7178                           
  7179                           ;print.c: 461: lcd_gotoxy(9, 0);
  7180  0F49  01F7               	clrf	lcd_gotoxy@row
  7181  0F4A  25AC               	fcall	_lcd_gotoxy
  7182                           
  7183                           ;print.c: 463: format_number( measurement / 100, 10, 0);
  7184  0F4B  3064               	movlw	100
  7185  0F4C  00F2               	movwf	___lwdiv@divisor
  7186  0F4D  01F3               	clrf	___lwdiv@divisor+1
  7187  0F4E  1283               	bcf	3,5	;RP0=0, select bank0
  7188  0F4F  1303               	bcf	3,6	;RP1=0, select bank0
  7189  0F50  084B               	movf	print_reading@measurement+1,w
  7190  0F51  00F5               	movwf	___lwdiv@dividend+1
  7191  0F52  084A               	movf	print_reading@measurement,w
  7192  0F53  00F4               	movwf	___lwdiv@dividend
  7193  0F54  160A  158A  2766  120A  158A  	fcall	___lwdiv
  7194  0F59  0873               	movf	?___lwdiv+1,w
  7195  0F5A  00CD               	movwf	_print_reading$1042+1
  7196  0F5B  0872               	movf	?___lwdiv,w
  7197  0F5C  00CC               	movwf	_print_reading$1042
  7198                           
  7199                           ;print.c: 463: format_number( measurement / 100, 10, 0);
  7200  0F5D  084D               	movf	_print_reading$1042+1,w
  7201  0F5E  00A2               	movwf	format_number@n+1
  7202  0F5F  084C               	movf	_print_reading$1042,w
  7203  0F60  00A1               	movwf	format_number@n
  7204  0F61  300A               	movlw	10
  7205  0F62  00A3               	movwf	format_number@base
  7206  0F63  01A4               	clrf	format_number@pad
  7207  0F64  277D               	fcall	_format_number
  7208                           
  7209                           ;print.c: 465: format_number( measurement % 100, 10, 0);
  7210  0F65  3064               	movlw	100
  7211  0F66  00F2               	movwf	___lwmod@divisor
  7212  0F67  01F3               	clrf	___lwmod@divisor+1
  7213  0F68  084B               	movf	print_reading@measurement+1,w
  7214  0F69  00F5               	movwf	___lwmod@dividend+1
  7215  0F6A  084A               	movf	print_reading@measurement,w
  7216  0F6B  00F4               	movwf	___lwmod@dividend
  7217  0F6C  120A  118A  20D4  120A  158A  	fcall	___lwmod
  7218  0F71  0873               	movf	?___lwmod+1,w
  7219  0F72  00CF               	movwf	_print_reading$1043+1
  7220  0F73  0872               	movf	?___lwmod,w
  7221  0F74  00CE               	movwf	_print_reading$1043
  7222                           
  7223                           ;print.c: 465: format_number( measurement % 100, 10, 0);
  7224  0F75  084F               	movf	_print_reading$1043+1,w
  7225  0F76  00A2               	movwf	format_number@n+1
  7226  0F77  084E               	movf	_print_reading$1043,w
  7227  0F78  00A1               	movwf	format_number@n
  7228  0F79  300A               	movlw	10
  7229  0F7A  00A3               	movwf	format_number@base
  7230  0F7B  01A4               	clrf	format_number@pad
  7231  0F7C  2F7D               	ljmp	l3819
  7232  0F7D                     __end_of_print_reading:	
  7233  0F7D                     __ptext39:	
  7234 ;; *************** function _format_number *****************
  7235 ;; Defined at:
  7236 ;;		line 14 in file "../../../lib/format.c"
  7237 ;; Parameters:    Size  Location     Type
  7238 ;;  n               2    0[BANK0 ] unsigned short 
  7239 ;;  base            1    2[BANK0 ] unsigned char 
  7240 ;;  pad             1    3[BANK0 ] char 
  7241 ;; Auto vars:     Size  Location     Type
  7242 ;;  buf            32    4[BANK0 ] unsigned char [32]
  7243 ;;  i               1   40[BANK0 ] char 
  7244 ;;  di              1   39[BANK0 ] unsigned char 
  7245 ;;  padchar         1   36[BANK0 ] unsigned char 
  7246 ;; Return value:  Size  Location     Type
  7247 ;;		None               void
  7248 ;; Registers used:
  7249 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  7250 ;; Tracked objects:
  7251 ;;		On entry : 300/0
  7252 ;;		On exit  : 300/0
  7253 ;;		Unchanged: 0/0
  7254 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7255 ;;      Params:         0       4       0       0       0
  7256 ;;      Locals:         0      37       0       0       0
  7257 ;;      Temps:          1       0       0       0       0
  7258 ;;      Totals:         1      41       0       0       0
  7259 ;;Total ram usage:       42 bytes
  7260 ;; Hardware stack levels used:    1
  7261 ;; Hardware stack levels required when called:    5
  7262 ;; This function calls:
  7263 ;;		___lwdiv
  7264 ;;		___lwmod
  7265 ;;		_format_putchar
  7266 ;;		_lcd_putch
  7267 ;;		_output_putch
  7268 ;; This function is called by:
  7269 ;;		_print_reading
  7270 ;;		_measure_freq
  7271 ;; This function uses a non-reentrant model
  7272 ;;
  7273                           
  7274                           
  7275                           ;psect for function _format_number
  7276  0F7D                     _format_number:	
  7277  0F7D                     l3819:	
  7278                           ;incstack = 0
  7279                           ; Regs used in _format_number: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  7280                           
  7281  0F7D  3020               	movlw	32
  7282                           
  7283                           ;format.c: 15: char buf[8 * sizeof(long)];
  7284                           ;format.c: 16: unsigned char di;
  7285                           ;format.c: 17: signed char i = 0;
  7286  0F7E  01C9               	clrf	format_number@i
  7287                           
  7288                           ;format.c: 18: char padchar = ' ';
  7289  0F7F  00C5               	movwf	format_number@padchar
  7290                           
  7291                           ;format.c: 20: if(pad < 0) {
  7292  0F80  1FA4               	btfss	format_number@pad,7
  7293  0F81  2F86               	goto	l3829
  7294  0F82  3030               	movlw	48
  7295                           
  7296                           ;format.c: 21: pad = -pad;
  7297  0F83  09A4               	comf	format_number@pad,f
  7298  0F84  0AA4               	incf	format_number@pad,f
  7299                           
  7300                           ;format.c: 22: padchar = '0';
  7301  0F85  00C5               	movwf	format_number@padchar
  7302  0F86                     l3829:	
  7303                           
  7304                           ;format.c: 34: di = n % base;
  7305  0F86  0823               	movf	format_number@base,w
  7306  0F87  00F2               	movwf	___lwmod@divisor
  7307  0F88  01F3               	clrf	___lwmod@divisor+1
  7308  0F89  0822               	movf	format_number@n+1,w
  7309  0F8A  00F5               	movwf	___lwmod@dividend+1
  7310  0F8B  0821               	movf	format_number@n,w
  7311  0F8C  00F4               	movwf	___lwmod@dividend
  7312  0F8D  120A  118A  20D4  120A  158A  	fcall	___lwmod
  7313  0F92  0872               	movf	?___lwmod,w
  7314  0F93  00C8               	movwf	format_number@di
  7315                           
  7316                           ;format.c: 35: buf[i++] = (di < 10 ? (unsigned char)'0' + di : (unsigned char)'A' + di -
      +                           10);
  7317  0F94  300A               	movlw	10
  7318  0F95  0248               	subwf	format_number@di,w
  7319  0F96  0848               	movf	format_number@di,w
  7320  0F97  00C6               	movwf	_format_number$169
  7321  0F98  1C03               	skipc
  7322  0F99  2F9C               	goto	L16
  7323  0F9A  3037               	movlw	55
  7324  0F9B  2F9D               	goto	L15
  7325  0F9C                     L16:	
  7326  0F9C  3030               	movlw	48
  7327  0F9D                     L15:	
  7328  0F9D  01C7               	clrf	_format_number$169+1
  7329  0F9E  07C6               	addwf	_format_number$169,f
  7330  0F9F  1803               	skipnc
  7331  0FA0  0AC7               	incf	_format_number$169+1,f
  7332  0FA1  0849               	movf	format_number@i,w
  7333  0FA2  3E25               	addlw	(low (format_number@buf| 0))& (0+255)
  7334  0FA3  0084               	movwf	4
  7335  0FA4  0846               	movf	_format_number$169,w
  7336  0FA5  1383               	bcf	3,7	;select IRP bank0
  7337  0FA6  0080               	movwf	0
  7338  0FA7  0AC9               	incf	format_number@i,f
  7339                           
  7340                           ;format.c: 37: n /= base;
  7341  0FA8  0823               	movf	format_number@base,w
  7342  0FA9  00F2               	movwf	___lwdiv@divisor
  7343  0FAA  01F3               	clrf	___lwdiv@divisor+1
  7344  0FAB  0822               	movf	format_number@n+1,w
  7345  0FAC  00F5               	movwf	___lwdiv@dividend+1
  7346  0FAD  0821               	movf	format_number@n,w
  7347  0FAE  00F4               	movwf	___lwdiv@dividend
  7348  0FAF  160A  158A  2766  120A  158A  	fcall	___lwdiv
  7349  0FB4  0873               	movf	?___lwdiv+1,w
  7350  0FB5  00A2               	movwf	format_number@n+1
  7351  0FB6  0872               	movf	?___lwdiv,w
  7352  0FB7  00A1               	movwf	format_number@n
  7353                           
  7354                           ;format.c: 38: } while(n > 0);
  7355  0FB8  0422               	iorwf	format_number@n+1,w
  7356  0FB9  1903               	btfsc	3,2
  7357  0FBA  2FC4               	goto	l3847
  7358  0FBB  2F86               	goto	l3829
  7359  0FBC                     l3845:	
  7360  0FBC  0845               	movf	format_number@padchar,w
  7361  0FBD  00F7               	movwf	format_putchar@c
  7362  0FBE  087B               	movf	_putchar_ptr,w
  7363  0FBF  120A  118A  2700  120A  158A  	fcall	fptable
  7364  0FC4                     l3847:	
  7365  0FC4  1283               	bcf	3,5	;RP0=0, select bank0
  7366  0FC5  1303               	bcf	3,6	;RP1=0, select bank0
  7367  0FC6  0849               	movf	format_number@i,w
  7368  0FC7  3A80               	xorlw	128
  7369  0FC8  00F9               	movwf	??_format_number
  7370  0FC9  0824               	movf	format_number@pad,w
  7371  0FCA  03A4               	decf	format_number@pad,f
  7372  0FCB  3A80               	xorlw	128
  7373  0FCC  02F9               	subwf	??_format_number,f
  7374  0FCD  1C03               	skipc
  7375  0FCE  2FBC               	goto	l3845
  7376  0FCF                     l3849:	
  7377                           
  7378                           ;format.c: 42: for(; i > 0; i--) putchar_ptr((char)buf[(signed short int)i - 1]);
  7379  0FCF  0849               	movf	format_number@i,w
  7380  0FD0  3A80               	xorlw	128
  7381  0FD1  3E7F               	addlw	-129
  7382  0FD2  1C03               	btfss	3,0
  7383  0FD3  0008               	return
  7384  0FD4  0849               	movf	format_number@i,w
  7385  0FD5  3EFF               	addlw	255
  7386  0FD6  3E25               	addlw	(low (format_number@buf| 0))& (0+255)
  7387  0FD7  0084               	movwf	4
  7388  0FD8  1383               	bcf	3,7	;select IRP bank0
  7389  0FD9  0800               	movf	0,w
  7390  0FDA  00F7               	movwf	format_putchar@c
  7391  0FDB  087B               	movf	_putchar_ptr,w
  7392  0FDC  120A  118A  2700  120A  158A  	fcall	fptable
  7393  0FE1  1283               	bcf	3,5	;RP0=0, select bank0
  7394  0FE2  1303               	bcf	3,6	;RP1=0, select bank0
  7395  0FE3  03C9               	decf	format_number@i,f
  7396  0FE4  2FCF               	goto	l3849
  7397  0FE5                     __end_of_format_number:	
  7398  0FE5                     __ptext12:	
  7399 ;; *************** function _lcd_puts *****************
  7400 ;; Defined at:
  7401 ;;		line 182 in file "../../../lib/lcd44780.c"
  7402 ;; Parameters:    Size  Location     Type
  7403 ;;  string          1    wreg     PTR const unsigned char 
  7404 ;;		 -> STR_18(5), STR_17(6), STR_16(7), STR_15(7), 
  7405 ;;		 -> STR_13(10), STR_12(4), STR_11(4), STR_10(6), 
  7406 ;; Auto vars:     Size  Location     Type
  7407 ;;  string          1    9[COMMON] PTR const unsigned char 
  7408 ;;		 -> STR_18(5), STR_17(6), STR_16(7), STR_15(7), 
  7409 ;;		 -> STR_13(10), STR_12(4), STR_11(4), STR_10(6), 
  7410 ;;  i               1    8[COMMON] unsigned char 
  7411 ;; Return value:  Size  Location     Type
  7412 ;;		None               void
  7413 ;; Registers used:
  7414 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  7415 ;; Tracked objects:
  7416 ;;		On entry : 0/100
  7417 ;;		On exit  : 0/0
  7418 ;;		Unchanged: 0/0
  7419 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7420 ;;      Params:         0       0       0       0       0
  7421 ;;      Locals:         2       0       0       0       0
  7422 ;;      Temps:          0       0       0       0       0
  7423 ;;      Totals:         2       0       0       0       0
  7424 ;;Total ram usage:        2 bytes
  7425 ;; Hardware stack levels used:    1
  7426 ;; Hardware stack levels required when called:    4
  7427 ;; This function calls:
  7428 ;;		_lcd_putch
  7429 ;; This function is called by:
  7430 ;;		_print_reading
  7431 ;;		_indicator
  7432 ;;		_main
  7433 ;; This function uses a non-reentrant model
  7434 ;;
  7435                           
  7436                           
  7437                           ;psect for function _lcd_puts
  7438  0FE5                     _lcd_puts:	
  7439                           
  7440                           ;incstack = 0
  7441                           ; Regs used in _lcd_puts: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  7442                           ;lcd_puts@string stored from wreg
  7443  0FE5  00F9               	movwf	lcd_puts@string
  7444                           
  7445                           ;lcd44780.c: 183: unsigned char i;
  7446                           ;lcd44780.c: 184: for(i = 0; string[i]; i++) lcd_putch(string[i]);
  7447  0FE6  01F8               	clrf	lcd_puts@i
  7448  0FE7                     l3817:	
  7449  0FE7  0878               	movf	lcd_puts@i,w
  7450  0FE8  0779               	addwf	lcd_puts@string,w
  7451  0FE9  0084               	movwf	4
  7452  0FEA  120A  118A  2012  120A  158A  	fcall	stringdir
  7453  0FEF  3A00               	xorlw	0
  7454  0FF0  1903               	btfsc	3,2
  7455  0FF1  0008               	return
  7456  0FF2  0878               	movf	lcd_puts@i,w
  7457  0FF3  0779               	addwf	lcd_puts@string,w
  7458  0FF4  0084               	movwf	4
  7459  0FF5  120A  118A  2012  120A  158A  	fcall	stringdir
  7460  0FFA  00F7               	movwf	lcd_putch@value
  7461  0FFB  263C  120A  158A   	fcall	_lcd_putch
  7462  0FFE  0AF8               	incf	lcd_puts@i,f
  7463  0FFF  2FE7               	goto	l3817
  7464  1000                     __end_of_lcd_puts:	
  7465                           
  7466                           	psect	text27
  7467  1009                     __ptext27:	
  7468 ;; *************** function _eval_poly *****************
  7469 ;; Defined at:
  7470 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\evalpoly.c"
  7471 ;; Parameters:    Size  Location     Type
  7472 ;;  x               4   57[BANK0 ] PTR int 
  7473 ;;  d               1   61[BANK0 ] PTR const 
  7474 ;;		 -> exp@coeff(40), log@coeff(36), 
  7475 ;;  n               2   62[BANK0 ] int 
  7476 ;; Auto vars:     Size  Location     Type
  7477 ;;  res             4   69[BANK0 ] int 
  7478 ;; Return value:  Size  Location     Type
  7479 ;;                  4   57[BANK0 ] int 
  7480 ;; Registers used:
  7481 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  7482 ;; Tracked objects:
  7483 ;;		On entry : 300/0
  7484 ;;		On exit  : 300/0
  7485 ;;		Unchanged: 0/0
  7486 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7487 ;;      Params:         0       7       0       0       0
  7488 ;;      Locals:         0       4       0       0       0
  7489 ;;      Temps:          0       5       0       0       0
  7490 ;;      Totals:         0      16       0       0       0
  7491 ;;Total ram usage:       16 bytes
  7492 ;; Hardware stack levels used:    1
  7493 ;; Hardware stack levels required when called:    3
  7494 ;; This function calls:
  7495 ;;		___fladd
  7496 ;;		___flmul
  7497 ;; This function is called by:
  7498 ;;		_log
  7499 ;;		_exp
  7500 ;; This function uses a non-reentrant model
  7501 ;;
  7502                           
  7503                           
  7504                           ;psect for function _eval_poly
  7505  1009                     _eval_poly:	
  7506                           
  7507                           ;incstack = 0
  7508                           ; Regs used in _eval_poly: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  7509  1009  085F               	movf	eval_poly@n,w
  7510  100A  00E1               	movwf	??_eval_poly
  7511  100B  3001               	movlw	1
  7512  100C  1003               	clrc
  7513  100D                     L10:	
  7514  100D  0DE1               	rlf	??_eval_poly,f
  7515  100E  3EFF               	addlw	-1
  7516  100F  1003               	clrc
  7517  1010  1D03               	skipz
  7518  1011  280D               	goto	L10
  7519  1012  0D61               	rlf	??_eval_poly,w
  7520  1013  075E               	addwf	eval_poly@d,w
  7521  1014  0084               	movwf	4
  7522  1015  120A  118A  2012  160A  118A  	fcall	stringdir
  7523  101A  00E2               	movwf	??_eval_poly+1
  7524  101B  120A  118A  2012  160A  118A  	fcall	stringdir
  7525  1020  00E3               	movwf	??_eval_poly+2
  7526  1021  120A  118A  2012  160A  118A  	fcall	stringdir
  7527  1026  00E4               	movwf	??_eval_poly+3
  7528  1027  120A  118A  2012  160A  118A  	fcall	stringdir
  7529  102C  00E5               	movwf	??_eval_poly+4
  7530  102D  00E9               	movwf	eval_poly@res+3
  7531  102E  0864               	movf	??_eval_poly+3,w
  7532  102F  00E8               	movwf	eval_poly@res+2
  7533  1030  0863               	movf	??_eval_poly+2,w
  7534  1031  00E7               	movwf	eval_poly@res+1
  7535  1032  0862               	movf	??_eval_poly+1,w
  7536  1033                     L12:	
  7537  1033  00E6               	movwf	eval_poly@res
  7538  1034  085F               	movf	eval_poly@n,w
  7539  1035  0460               	iorwf	eval_poly@n+1,w
  7540  1036  1903               	btfsc	3,2
  7541  1037  288D               	goto	l3799
  7542  1038  30FF               	movlw	-1
  7543  1039  07DF               	addwf	eval_poly@n,f
  7544  103A  1C03               	skipc
  7545  103B  03E0               	decf	eval_poly@n+1,f
  7546  103C  085F               	movf	eval_poly@n,w
  7547  103D  00E1               	movwf	??_eval_poly
  7548  103E  3001               	movlw	1
  7549  103F  1003               	clrc
  7550  1040                     L11:	
  7551  1040  0DE1               	rlf	??_eval_poly,f
  7552  1041  3EFF               	addlw	-1
  7553  1042  1003               	clrc
  7554  1043  1D03               	skipz
  7555  1044  2840               	goto	L11
  7556  1045  0D61               	rlf	??_eval_poly,w
  7557  1046  075E               	addwf	eval_poly@d,w
  7558  1047  0084               	movwf	4
  7559  1048  120A  118A  2012  160A  118A  	fcall	stringdir
  7560  104D  00E2               	movwf	??_eval_poly+1
  7561  104E  120A  118A  2012  160A  118A  	fcall	stringdir
  7562  1053  00E3               	movwf	??_eval_poly+2
  7563  1054  120A  118A  2012  160A  118A  	fcall	stringdir
  7564  1059  00E4               	movwf	??_eval_poly+3
  7565  105A  120A  118A  2012  160A  118A  	fcall	stringdir
  7566  105F  00E5               	movwf	??_eval_poly+4
  7567  1060  00CE               	movwf	___fladd@f1+3
  7568  1061  0864               	movf	??_eval_poly+3,w
  7569  1062  00CD               	movwf	___fladd@f1+2
  7570  1063  0863               	movf	??_eval_poly+2,w
  7571  1064  00CC               	movwf	___fladd@f1+1
  7572  1065  0862               	movf	??_eval_poly+1,w
  7573  1066  00CB               	movwf	___fladd@f1
  7574  1067  0869               	movf	eval_poly@res+3,w
  7575  1068  00BB               	movwf	___flmul@f1+3
  7576  1069  0868               	movf	eval_poly@res+2,w
  7577  106A  00BA               	movwf	___flmul@f1+2
  7578  106B  0867               	movf	eval_poly@res+1,w
  7579  106C  00B9               	movwf	___flmul@f1+1
  7580  106D  0866               	movf	eval_poly@res,w
  7581  106E  00B8               	movwf	___flmul@f1
  7582  106F  085D               	movf	eval_poly@x+3,w
  7583  1070  00BF               	movwf	___flmul@f2+3
  7584  1071  085C               	movf	eval_poly@x+2,w
  7585  1072  00BE               	movwf	___flmul@f2+2
  7586  1073  085B               	movf	eval_poly@x+1,w
  7587  1074  00BD               	movwf	___flmul@f2+1
  7588  1075  085A               	movf	eval_poly@x,w
  7589  1076  00BC               	movwf	___flmul@f2
  7590  1077  25E0  160A  118A   	fcall	___flmul
  7591  107A  083B               	movf	?___flmul+3,w
  7592  107B  00D2               	movwf	___fladd@f2+3
  7593  107C  083A               	movf	?___flmul+2,w
  7594  107D  00D1               	movwf	___fladd@f2+2
  7595  107E  0839               	movf	?___flmul+1,w
  7596  107F  00D0               	movwf	___fladd@f2+1
  7597  1080  0838               	movf	?___flmul,w
  7598  1081  00CF               	movwf	___fladd@f2
  7599  1082  2096  160A  118A   	fcall	___fladd
  7600  1085  084E               	movf	?___fladd+3,w
  7601  1086  00E9               	movwf	eval_poly@res+3
  7602  1087  084D               	movf	?___fladd+2,w
  7603  1088  00E8               	movwf	eval_poly@res+2
  7604  1089  084C               	movf	?___fladd+1,w
  7605  108A  00E7               	movwf	eval_poly@res+1
  7606  108B  084B               	movf	?___fladd,w
  7607  108C  2833               	goto	L12
  7608  108D                     l3799:	
  7609  108D  0869               	movf	eval_poly@res+3,w
  7610  108E  00DD               	movwf	?_eval_poly+3
  7611  108F  0868               	movf	eval_poly@res+2,w
  7612  1090  00DC               	movwf	?_eval_poly+2
  7613  1091  0867               	movf	eval_poly@res+1,w
  7614  1092  00DB               	movwf	?_eval_poly+1
  7615  1093  0866               	movf	eval_poly@res,w
  7616  1094  00DA               	movwf	?_eval_poly
  7617  1095  0008               	return
  7618  1096                     __end_of_eval_poly:	
  7619  1096                     __ptext29:	
  7620 ;; *************** function ___fladd *****************
  7621 ;; Defined at:
  7622 ;;		line 88 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\fladd.c"
  7623 ;; Parameters:    Size  Location     Type
  7624 ;;  f1              4   42[BANK0 ] unsigned char 
  7625 ;;  f2              4   46[BANK0 ] unsigned char 
  7626 ;; Auto vars:     Size  Location     Type
  7627 ;;  exp1            1   56[BANK0 ] unsigned char 
  7628 ;;  exp2            1   55[BANK0 ] unsigned char 
  7629 ;;  sign            1   54[BANK0 ] unsigned char 
  7630 ;; Return value:  Size  Location     Type
  7631 ;;                  4   42[BANK0 ] unsigned char 
  7632 ;; Registers used:
  7633 ;;		wreg, status,2, status,0, pclath, cstack
  7634 ;; Tracked objects:
  7635 ;;		On entry : 300/0
  7636 ;;		On exit  : 300/0
  7637 ;;		Unchanged: 0/0
  7638 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7639 ;;      Params:         0       8       0       0       0
  7640 ;;      Locals:         0       3       0       0       0
  7641 ;;      Temps:          0       4       0       0       0
  7642 ;;      Totals:         0      15       0       0       0
  7643 ;;Total ram usage:       15 bytes
  7644 ;; Hardware stack levels used:    1
  7645 ;; Hardware stack levels required when called:    2
  7646 ;; This function calls:
  7647 ;;		___flpack
  7648 ;; This function is called by:
  7649 ;;		_floor
  7650 ;;		___flsub
  7651 ;;		_log
  7652 ;;		_eval_poly
  7653 ;; This function uses a non-reentrant model
  7654 ;;
  7655                           
  7656                           
  7657                           ;psect for function ___fladd
  7658  1096                     ___fladd:	
  7659                           
  7660                           ;incstack = 0
  7661                           ; Regs used in ___fladd: [wreg+status,2+status,0+pclath+cstack]
  7662  1096  084B               	movf	___fladd@f1,w
  7663  1097  00D3               	movwf	??___fladd
  7664  1098  084C               	movf	___fladd@f1+1,w
  7665  1099  00D4               	movwf	??___fladd+1
  7666  109A  084D               	movf	___fladd@f1+2,w
  7667  109B  00D5               	movwf	??___fladd+2
  7668  109C  084E               	movf	___fladd@f1+3,w
  7669  109D  00D6               	movwf	??___fladd+3
  7670  109E  1003               	clrc
  7671  109F  0D55               	rlf	??___fladd+2,w
  7672  10A0  0D56               	rlf	??___fladd+3,w
  7673  10A1  00D9               	movwf	___fladd@exp1
  7674  10A2  084F               	movf	___fladd@f2,w
  7675  10A3  00D3               	movwf	??___fladd
  7676  10A4  0850               	movf	___fladd@f2+1,w
  7677  10A5  00D4               	movwf	??___fladd+1
  7678  10A6  0851               	movf	___fladd@f2+2,w
  7679  10A7  00D5               	movwf	??___fladd+2
  7680  10A8  0852               	movf	___fladd@f2+3,w
  7681  10A9  00D6               	movwf	??___fladd+3
  7682  10AA  1003               	clrc
  7683  10AB  0D55               	rlf	??___fladd+2,w
  7684  10AC  0D56               	rlf	??___fladd+3,w
  7685  10AD  00D8               	movwf	___fladd@exp2
  7686  10AE  0859               	movf	___fladd@exp1,w
  7687  10AF  1903               	btfsc	3,2
  7688  10B0  28BD               	goto	l3545
  7689  10B1  0858               	movf	___fladd@exp2,w
  7690  10B2  0259               	subwf	___fladd@exp1,w
  7691  10B3  0858               	movf	___fladd@exp2,w
  7692  10B4  1803               	skipnc
  7693  10B5  28C7               	goto	L13
  7694  10B6  00D3               	movwf	??___fladd
  7695  10B7  0859               	movf	___fladd@exp1,w
  7696  10B8  02D3               	subwf	??___fladd,f
  7697  10B9  3021               	movlw	33
  7698  10BA  0253               	subwf	??___fladd,w
  7699  10BB  1C03               	skipc
  7700  10BC  28C6               	goto	l3549
  7701  10BD                     l3545:	
  7702  10BD  0852               	movf	___fladd@f2+3,w
  7703  10BE  00CE               	movwf	?___fladd+3
  7704  10BF  0851               	movf	___fladd@f2+2,w
  7705  10C0  00CD               	movwf	?___fladd+2
  7706  10C1  0850               	movf	___fladd@f2+1,w
  7707  10C2  00CC               	movwf	?___fladd+1
  7708  10C3  084F               	movf	___fladd@f2,w
  7709  10C4  00CB               	movwf	?___fladd
  7710  10C5  0008               	return
  7711  10C6                     l3549:	
  7712  10C6  0858               	movf	___fladd@exp2,w
  7713  10C7                     L13:	
  7714  10C7  1903               	btfsc	3,2
  7715  10C8  0008               	return
  7716  10C9  0859               	movf	___fladd@exp1,w
  7717  10CA  0258               	subwf	___fladd@exp2,w
  7718  10CB  1803               	skipnc
  7719  10CC  28D5               	goto	l3555
  7720  10CD  0859               	movf	___fladd@exp1,w
  7721  10CE  00D3               	movwf	??___fladd
  7722  10CF  0858               	movf	___fladd@exp2,w
  7723  10D0  02D3               	subwf	??___fladd,f
  7724  10D1  3021               	movlw	33
  7725  10D2  0253               	subwf	??___fladd,w
  7726  10D3  1803               	btfsc	3,0
  7727  10D4  0008               	return
  7728  10D5                     l3555:	
  7729  10D5  3006               	movlw	6
  7730  10D6  00D7               	movwf	___fladd@sign
  7731  10D7  1BCE               	btfsc	___fladd@f1+3,7
  7732  10D8  17D7               	bsf	___fladd@sign,7
  7733  10D9  1BD2               	btfsc	___fladd@f2+3,7
  7734  10DA  1757               	bsf	___fladd@sign,6
  7735  10DB  17CD               	bsf	___fladd@f1+2,7
  7736  10DC  01CE               	clrf	___fladd@f1+3
  7737  10DD  17D1               	bsf	___fladd@f2+2,7
  7738  10DE  01D2               	clrf	___fladd@f2+3
  7739  10DF  0858               	movf	___fladd@exp2,w
  7740  10E0  0259               	subwf	___fladd@exp1,w
  7741  10E1  1803               	skipnc
  7742  10E2  28FE               	goto	l3577
  7743  10E3                     l3567:	
  7744  10E3  1003               	clrc
  7745  10E4  0DCF               	rlf	___fladd@f2,f
  7746  10E5  0DD0               	rlf	___fladd@f2+1,f
  7747  10E6  0DD1               	rlf	___fladd@f2+2,f
  7748  10E7  0DD2               	rlf	___fladd@f2+3,f
  7749  10E8  03D8               	decf	___fladd@exp2,f
  7750  10E9  0858               	movf	___fladd@exp2,w
  7751  10EA  0659               	xorwf	___fladd@exp1,w
  7752  10EB  1903               	skipnz
  7753  10EC  28F9               	goto	l3575
  7754  10ED  03D7               	decf	___fladd@sign,f
  7755  10EE  0857               	movf	___fladd@sign,w
  7756  10EF  3907               	andlw	7
  7757  10F0  1903               	btfsc	3,2
  7758  10F1  28F9               	goto	l3575
  7759  10F2  28E3               	goto	l3567
  7760  10F3                     l3573:	
  7761  10F3  1003               	clrc
  7762  10F4  0CCE               	rrf	___fladd@f1+3,f
  7763  10F5  0CCD               	rrf	___fladd@f1+2,f
  7764  10F6  0CCC               	rrf	___fladd@f1+1,f
  7765  10F7  0CCB               	rrf	___fladd@f1,f
  7766  10F8  0AD9               	incf	___fladd@exp1,f
  7767  10F9                     l3575:	
  7768  10F9  0859               	movf	___fladd@exp1,w
  7769  10FA  0658               	xorwf	___fladd@exp2,w
  7770  10FB  1903               	btfsc	3,2
  7771  10FC  291C               	goto	l853
  7772  10FD  28F3               	goto	l3573
  7773  10FE                     l3577:	
  7774  10FE  0859               	movf	___fladd@exp1,w
  7775  10FF  0258               	subwf	___fladd@exp2,w
  7776  1100  1803               	skipnc
  7777  1101  291C               	goto	l853
  7778  1102                     l3579:	
  7779  1102  1003               	clrc
  7780  1103  0DCB               	rlf	___fladd@f1,f
  7781  1104  0DCC               	rlf	___fladd@f1+1,f
  7782  1105  0DCD               	rlf	___fladd@f1+2,f
  7783  1106  0DCE               	rlf	___fladd@f1+3,f
  7784  1107  03D9               	decf	___fladd@exp1,f
  7785  1108  0858               	movf	___fladd@exp2,w
  7786  1109  0659               	xorwf	___fladd@exp1,w
  7787  110A  1903               	skipnz
  7788  110B  2918               	goto	l3587
  7789  110C  03D7               	decf	___fladd@sign,f
  7790  110D  0857               	movf	___fladd@sign,w
  7791  110E  3907               	andlw	7
  7792  110F  1903               	btfsc	3,2
  7793  1110  2918               	goto	l3587
  7794  1111  2902               	goto	l3579
  7795  1112                     l3585:	
  7796  1112  1003               	clrc
  7797  1113  0CD2               	rrf	___fladd@f2+3,f
  7798  1114  0CD1               	rrf	___fladd@f2+2,f
  7799  1115  0CD0               	rrf	___fladd@f2+1,f
  7800  1116  0CCF               	rrf	___fladd@f2,f
  7801  1117  0AD8               	incf	___fladd@exp2,f
  7802  1118                     l3587:	
  7803  1118  0859               	movf	___fladd@exp1,w
  7804  1119  0658               	xorwf	___fladd@exp2,w
  7805  111A  1D03               	skipz
  7806  111B  2912               	goto	l3585
  7807  111C                     l853:	
  7808  111C  1FD7               	btfss	___fladd@sign,7
  7809  111D  292A               	goto	l3593
  7810  111E  30FF               	movlw	255
  7811  111F  06CB               	xorwf	___fladd@f1,f
  7812  1120  06CC               	xorwf	___fladd@f1+1,f
  7813  1121  06CD               	xorwf	___fladd@f1+2,f
  7814  1122  06CE               	xorwf	___fladd@f1+3,f
  7815  1123  0ACB               	incf	___fladd@f1,f
  7816  1124  1903               	skipnz
  7817  1125  0ACC               	incf	___fladd@f1+1,f
  7818  1126  1903               	skipnz
  7819  1127  0ACD               	incf	___fladd@f1+2,f
  7820  1128  1903               	skipnz
  7821  1129  0ACE               	incf	___fladd@f1+3,f
  7822  112A                     l3593:	
  7823  112A  1F57               	btfss	___fladd@sign,6
  7824  112B  2938               	goto	l3599
  7825  112C  30FF               	movlw	255
  7826  112D  06CF               	xorwf	___fladd@f2,f
  7827  112E  06D0               	xorwf	___fladd@f2+1,f
  7828  112F  06D1               	xorwf	___fladd@f2+2,f
  7829  1130  06D2               	xorwf	___fladd@f2+3,f
  7830  1131  0ACF               	incf	___fladd@f2,f
  7831  1132  1903               	skipnz
  7832  1133  0AD0               	incf	___fladd@f2+1,f
  7833  1134  1903               	skipnz
  7834  1135  0AD1               	incf	___fladd@f2+2,f
  7835  1136  1903               	skipnz
  7836  1137  0AD2               	incf	___fladd@f2+3,f
  7837  1138                     l3599:	
  7838  1138  01D7               	clrf	___fladd@sign
  7839  1139  084B               	movf	___fladd@f1,w
  7840  113A  07CF               	addwf	___fladd@f2,f
  7841  113B  084C               	movf	___fladd@f1+1,w
  7842  113C  1103               	clrz
  7843  113D  1803               	skipnc
  7844  113E  3E01               	addlw	1
  7845  113F  1D03               	btfss	3,2
  7846  1140  07D0               	addwf	___fladd@f2+1,f
  7847  1141  084D               	movf	___fladd@f1+2,w
  7848  1142  1103               	clrz
  7849  1143  1803               	skipnc
  7850  1144  3E01               	addlw	1
  7851  1145  1D03               	btfss	3,2
  7852  1146  07D1               	addwf	___fladd@f2+2,f
  7853  1147  084E               	movf	___fladd@f1+3,w
  7854  1148  1103               	clrz
  7855  1149  1803               	skipnc
  7856  114A  3E01               	addlw	1
  7857  114B  1D03               	btfss	3,2
  7858  114C  07D2               	addwf	___fladd@f2+3,f
  7859  114D  1FD2               	btfss	___fladd@f2+3,7
  7860  114E  295D               	goto	l3611
  7861  114F  30FF               	movlw	255
  7862  1150  06CF               	xorwf	___fladd@f2,f
  7863  1151  06D0               	xorwf	___fladd@f2+1,f
  7864  1152  06D1               	xorwf	___fladd@f2+2,f
  7865  1153  06D2               	xorwf	___fladd@f2+3,f
  7866  1154  0ACF               	incf	___fladd@f2,f
  7867  1155  1903               	skipnz
  7868  1156  0AD0               	incf	___fladd@f2+1,f
  7869  1157  1903               	skipnz
  7870  1158  0AD1               	incf	___fladd@f2+2,f
  7871  1159  1903               	skipnz
  7872  115A  0AD2               	incf	___fladd@f2+3,f
  7873  115B  01D7               	clrf	___fladd@sign
  7874  115C  0AD7               	incf	___fladd@sign,f
  7875  115D                     l3611:	
  7876  115D  0852               	movf	___fladd@f2+3,w
  7877  115E  00F5               	movwf	___flpack@arg+3
  7878  115F  0851               	movf	___fladd@f2+2,w
  7879  1160  00F4               	movwf	___flpack@arg+2
  7880  1161  0850               	movf	___fladd@f2+1,w
  7881  1162  00F3               	movwf	___flpack@arg+1
  7882  1163  084F               	movf	___fladd@f2,w
  7883  1164  00F2               	movwf	___flpack@arg
  7884  1165  0859               	movf	___fladd@exp1,w
  7885  1166  00F6               	movwf	___flpack@exp
  7886  1167  0857               	movf	___fladd@sign,w
  7887  1168  00F7               	movwf	___flpack@sign
  7888  1169  120A  158A  255C   	fcall	___flpack
  7889  116C  0875               	movf	?___flpack+3,w
  7890  116D  1283               	bcf	3,5	;RP0=0, select bank0
  7891  116E  00CE               	movwf	?___fladd+3
  7892  116F  0874               	movf	?___flpack+2,w
  7893  1170  00CD               	movwf	?___fladd+2
  7894  1171  0873               	movf	?___flpack+1,w
  7895  1172  00CC               	movwf	?___fladd+1
  7896  1173  0872               	movf	?___flpack,w
  7897  1174  00CB               	movwf	?___fladd
  7898  1175  0008               	return
  7899  1176                     __end_of___fladd:	
  7900  1176                     __ptext5:	
  7901 ;; *************** function _measure_inductance *****************
  7902 ;; Defined at:
  7903 ;;		line 192 in file "../../../lib/../src/measure.c"
  7904 ;; Parameters:    Size  Location     Type
  7905 ;;		None
  7906 ;; Auto vars:     Size  Location     Type
  7907 ;;  Lin             4   57[BANK1 ] unsigned char 
  7908 ;;  denominator     4   22[BANK1 ] unsigned char 
  7909 ;;  numerator       4   18[BANK1 ] unsigned char 
  7910 ;;  var             2   55[BANK1 ] unsigned short 
  7911 ;;  unit            1   42[BANK1 ] unsigned char 
  7912 ;; Return value:  Size  Location     Type
  7913 ;;		None               void
  7914 ;; Registers used:
  7915 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  7916 ;; Tracked objects:
  7917 ;;		On entry : 300/0
  7918 ;;		On exit  : 0/0
  7919 ;;		Unchanged: 0/0
  7920 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7921 ;;      Params:         0       0       0       0       0
  7922 ;;      Locals:         0       0      43       0       0
  7923 ;;      Temps:          0       0       0       0       0
  7924 ;;      Totals:         0       0      43       0       0
  7925 ;;Total ram usage:       43 bytes
  7926 ;; Hardware stack levels used:    1
  7927 ;; Hardware stack levels required when called:    7
  7928 ;; This function calls:
  7929 ;;		___fldiv
  7930 ;;		___flge
  7931 ;;		___flmul
  7932 ;;		___flsub
  7933 ;;		___fltol
  7934 ;;		___lwtofl
  7935 ;;		_lcd_gotoxy
  7936 ;;		_measure_freq
  7937 ;;		_print_reading
  7938 ;;		_print_unit
  7939 ;;		_put_str
  7940 ;; This function is called by:
  7941 ;;		_main
  7942 ;; This function uses a non-reentrant model
  7943 ;;
  7944                           
  7945                           
  7946                           ;psect for function _measure_inductance
  7947  1176                     _measure_inductance:	
  7948                           
  7949                           ;incstack = 0
  7950                           ; Regs used in _measure_inductance: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  7951  1176  3000               	movlw	0
  7952                           
  7953                           ;measure.c: 193: unsigned char unit;
  7954                           ;measure.c: 194: unsigned short int var;
  7955                           ;measure.c: 196: double Lin, numerator, denominator;
  7956                           ;measure.c: 199: lcd_gotoxy(0, 0);
  7957  1177  01F7               	clrf	lcd_gotoxy@row
  7958  1178  120A  158A  25AC  160A  118A  	fcall	_lcd_gotoxy
  7959                           
  7960                           ;measure.c: 200: put_str("Inductivity ");
  7961  117D  305C               	movlw	(low ((STR_25-__stringbase)| (0+32768)))& (0+255)
  7962  117E  120A  158A  25DD  160A  118A  	fcall	_put_str
  7963                           
  7964                           ;measure.c: 202: var = measure_freq();
  7965  1183  26C9               	fcall	_measure_freq
  7966  1184  084B               	movf	?_measure_freq+1,w
  7967  1185  1683               	bsf	3,5	;RP0=1, select bank1
  7968  1186  00D8               	movwf	(measure_inductance@var+1)^(0+128)
  7969  1187  1283               	bcf	3,5	;RP0=0, select bank0
  7970  1188  084A               	movf	?_measure_freq,w
  7971  1189  1683               	bsf	3,5	;RP0=1, select bank1
  7972  118A  00D7               	movwf	measure_inductance@var^(0+128)
  7973                           
  7974                           ;measure.c: 204: F3 = (double)var;
  7975  118B  0858               	movf	(measure_inductance@var+1)^(0+128),w
  7976  118C  1283               	bcf	3,5	;RP0=0, select bank0
  7977  118D  00D1               	movwf	___lwtofl@c+1
  7978  118E  1683               	bsf	3,5	;RP0=1, select bank1
  7979  118F  0857               	movf	measure_inductance@var^(0+128),w
  7980  1190  1283               	bcf	3,5	;RP0=0, select bank0
  7981  1191  00D0               	movwf	___lwtofl@c
  7982  1192  120A  158A  2548  160A  118A  	fcall	___lwtofl
  7983  1197  0853               	movf	?___lwtofl+3,w
  7984  1198  1683               	bsf	3,5	;RP0=1, select bank1
  7985  1199  00E8               	movwf	(_F3+3)^(0+128)
  7986  119A  1283               	bcf	3,5	;RP0=0, select bank0
  7987  119B  0852               	movf	?___lwtofl+2,w
  7988  119C  1683               	bsf	3,5	;RP0=1, select bank1
  7989  119D  00E7               	movwf	(_F3+2)^(0+128)
  7990  119E  1283               	bcf	3,5	;RP0=0, select bank0
  7991  119F  0851               	movf	?___lwtofl+1,w
  7992  11A0  1683               	bsf	3,5	;RP0=1, select bank1
  7993  11A1  00E6               	movwf	(_F3+1)^(0+128)
  7994  11A2  1283               	bcf	3,5	;RP0=0, select bank0
  7995  11A3  0850               	movf	?___lwtofl,w
  7996  11A4  1683               	bsf	3,5	;RP0=1, select bank1
  7997  11A5  00E5               	movwf	_F3^(0+128)
  7998                           
  7999                           ;measure.c: 205: if(F3 > F1)
  8000  11A6  086F               	movf	(_F1+3)^(0+128),w
  8001  11A7  00F5               	movwf	___flge@ff1+3
  8002  11A8  086E               	movf	(_F1+2)^(0+128),w
  8003  11A9  00F4               	movwf	___flge@ff1+2
  8004  11AA  086D               	movf	(_F1+1)^(0+128),w
  8005  11AB  00F3               	movwf	___flge@ff1+1
  8006  11AC  086C               	movf	_F1^(0+128),w
  8007  11AD  00F2               	movwf	___flge@ff1
  8008  11AE  0868               	movf	(_F3+3)^(0+128),w
  8009  11AF  00F9               	movwf	___flge@ff2+3
  8010  11B0  0867               	movf	(_F3+2)^(0+128),w
  8011  11B1  00F8               	movwf	___flge@ff2+2
  8012  11B2  0866               	movf	(_F3+1)^(0+128),w
  8013  11B3  00F7               	movwf	___flge@ff2+1
  8014  11B4  0865               	movf	_F3^(0+128),w
  8015  11B5  00F6               	movwf	___flge@ff2
  8016  11B6  2679  160A  118A   	fcall	___flge
  8017  11B9  1803               	btfsc	3,0
  8018  11BA  29C5               	goto	l4291
  8019                           
  8020                           ;measure.c: 206: F3 = F1;
  8021  11BB  1683               	bsf	3,5	;RP0=1, select bank1
  8022  11BC  1303               	bcf	3,6	;RP1=0, select bank1
  8023  11BD  086F               	movf	(_F1+3)^(0+128),w
  8024  11BE  00E8               	movwf	(_F3+3)^(0+128)
  8025  11BF  086E               	movf	(_F1+2)^(0+128),w
  8026  11C0  00E7               	movwf	(_F3+2)^(0+128)
  8027  11C1  086D               	movf	(_F1+1)^(0+128),w
  8028  11C2  00E6               	movwf	(_F3+1)^(0+128)
  8029  11C3  086C               	movf	_F1^(0+128),w
  8030  11C4  00E5               	movwf	_F3^(0+128)
  8031  11C5                     l4291:	
  8032                           
  8033                           ;measure.c: 208: numerator = ((F1 * F1) - (F3 * F3)) * ((F1 * F1) - (F2 - F2)) * (100 * 
      +                          100);
  8034  11C5  1683               	bsf	3,5	;RP0=1, select bank3
  8035  11C6  1703               	bsf	3,6	;RP1=1, select bank3
  8036  11C7  0813               	movf	(_F2+3)^(0+384),w
  8037  11C8  1283               	bcf	3,5	;RP0=0, select bank0
  8038  11C9  1303               	bcf	3,6	;RP1=0, select bank0
  8039  11CA  00DD               	movwf	___flsub@f2+3
  8040  11CB  1683               	bsf	3,5	;RP0=1, select bank3
  8041  11CC  1703               	bsf	3,6	;RP1=1, select bank3
  8042  11CD  0812               	movf	(_F2+2)^(0+384),w
  8043  11CE  1283               	bcf	3,5	;RP0=0, select bank0
  8044  11CF  1303               	bcf	3,6	;RP1=0, select bank0
  8045  11D0  00DC               	movwf	___flsub@f2+2
  8046  11D1  1683               	bsf	3,5	;RP0=1, select bank3
  8047  11D2  1703               	bsf	3,6	;RP1=1, select bank3
  8048  11D3  0811               	movf	(_F2+1)^(0+384),w
  8049  11D4  1283               	bcf	3,5	;RP0=0, select bank0
  8050  11D5  1303               	bcf	3,6	;RP1=0, select bank0
  8051  11D6  00DB               	movwf	___flsub@f2+1
  8052  11D7  1683               	bsf	3,5	;RP0=1, select bank3
  8053  11D8  1703               	bsf	3,6	;RP1=1, select bank3
  8054  11D9  0810               	movf	_F2^(0+384),w
  8055  11DA  1283               	bcf	3,5	;RP0=0, select bank0
  8056  11DB  1303               	bcf	3,6	;RP1=0, select bank0
  8057  11DC  00DA               	movwf	___flsub@f2
  8058  11DD  1683               	bsf	3,5	;RP0=1, select bank3
  8059  11DE  1703               	bsf	3,6	;RP1=1, select bank3
  8060  11DF  0813               	movf	(_F2+3)^(0+384),w
  8061  11E0  1283               	bcf	3,5	;RP0=0, select bank0
  8062  11E1  1303               	bcf	3,6	;RP1=0, select bank0
  8063  11E2  00E1               	movwf	___flsub@f1+3
  8064  11E3  1683               	bsf	3,5	;RP0=1, select bank3
  8065  11E4  1703               	bsf	3,6	;RP1=1, select bank3
  8066  11E5  0812               	movf	(_F2+2)^(0+384),w
  8067  11E6  1283               	bcf	3,5	;RP0=0, select bank0
  8068  11E7  1303               	bcf	3,6	;RP1=0, select bank0
  8069  11E8  00E0               	movwf	___flsub@f1+2
  8070  11E9  1683               	bsf	3,5	;RP0=1, select bank3
  8071  11EA  1703               	bsf	3,6	;RP1=1, select bank3
  8072  11EB  0811               	movf	(_F2+1)^(0+384),w
  8073  11EC  1283               	bcf	3,5	;RP0=0, select bank0
  8074  11ED  1303               	bcf	3,6	;RP1=0, select bank0
  8075  11EE  00DF               	movwf	___flsub@f1+1
  8076  11EF  1683               	bsf	3,5	;RP0=1, select bank3
  8077  11F0  1703               	bsf	3,6	;RP1=1, select bank3
  8078  11F1  0810               	movf	_F2^(0+384),w
  8079  11F2  1283               	bcf	3,5	;RP0=0, select bank0
  8080  11F3  1303               	bcf	3,6	;RP1=0, select bank0
  8081  11F4  00DE               	movwf	___flsub@f1
  8082  11F5  120A  158A  2602  160A  118A  	fcall	___flsub
  8083  11FA  085D               	movf	?___flsub+3,w
  8084  11FB  1683               	bsf	3,5	;RP0=1, select bank1
  8085  11FC  00BD               	movwf	(_measure_inductance$1051+3)^(0+128)
  8086  11FD  1283               	bcf	3,5	;RP0=0, select bank0
  8087  11FE  085C               	movf	?___flsub+2,w
  8088  11FF  1683               	bsf	3,5	;RP0=1, select bank1
  8089  1200  00BC               	movwf	(_measure_inductance$1051+2)^(0+128)
  8090  1201  1283               	bcf	3,5	;RP0=0, select bank0
  8091  1202  085B               	movf	?___flsub+1,w
  8092  1203  1683               	bsf	3,5	;RP0=1, select bank1
  8093  1204  00BB               	movwf	(_measure_inductance$1051+1)^(0+128)
  8094  1205  1283               	bcf	3,5	;RP0=0, select bank0
  8095  1206  085A               	movf	?___flsub,w
  8096  1207  1683               	bsf	3,5	;RP0=1, select bank1
  8097  1208  00BA               	movwf	_measure_inductance$1051^(0+128)
  8098                           
  8099                           ;measure.c: 208: numerator = ((F1 * F1) - (F3 * F3)) * ((F1 * F1) - (F2 - F2)) * (100 * 
      +                          100);
  8100  1209  083D               	movf	(_measure_inductance$1051+3)^(0+128),w
  8101  120A  1283               	bcf	3,5	;RP0=0, select bank0
  8102  120B  00DD               	movwf	___flsub@f2+3
  8103  120C  1683               	bsf	3,5	;RP0=1, select bank1
  8104  120D  083C               	movf	(_measure_inductance$1051+2)^(0+128),w
  8105  120E  1283               	bcf	3,5	;RP0=0, select bank0
  8106  120F  00DC               	movwf	___flsub@f2+2
  8107  1210  1683               	bsf	3,5	;RP0=1, select bank1
  8108  1211  083B               	movf	(_measure_inductance$1051+1)^(0+128),w
  8109  1212  1283               	bcf	3,5	;RP0=0, select bank0
  8110  1213  00DB               	movwf	___flsub@f2+1
  8111  1214  1683               	bsf	3,5	;RP0=1, select bank1
  8112  1215  083A               	movf	_measure_inductance$1051^(0+128),w
  8113  1216  1283               	bcf	3,5	;RP0=0, select bank0
  8114  1217  00DA               	movwf	___flsub@f2
  8115  1218  1683               	bsf	3,5	;RP0=1, select bank1
  8116  1219  086F               	movf	(_F1+3)^(0+128),w
  8117  121A  1283               	bcf	3,5	;RP0=0, select bank0
  8118  121B  00BB               	movwf	___flmul@f1+3
  8119  121C  1683               	bsf	3,5	;RP0=1, select bank1
  8120  121D  086E               	movf	(_F1+2)^(0+128),w
  8121  121E  1283               	bcf	3,5	;RP0=0, select bank0
  8122  121F  00BA               	movwf	___flmul@f1+2
  8123  1220  1683               	bsf	3,5	;RP0=1, select bank1
  8124  1221  086D               	movf	(_F1+1)^(0+128),w
  8125  1222  1283               	bcf	3,5	;RP0=0, select bank0
  8126  1223  00B9               	movwf	___flmul@f1+1
  8127  1224  1683               	bsf	3,5	;RP0=1, select bank1
  8128  1225  086C               	movf	_F1^(0+128),w
  8129  1226  1283               	bcf	3,5	;RP0=0, select bank0
  8130  1227  00B8               	movwf	___flmul@f1
  8131  1228  1683               	bsf	3,5	;RP0=1, select bank1
  8132  1229  086F               	movf	(_F1+3)^(0+128),w
  8133  122A  1283               	bcf	3,5	;RP0=0, select bank0
  8134  122B  00BF               	movwf	___flmul@f2+3
  8135  122C  1683               	bsf	3,5	;RP0=1, select bank1
  8136  122D  086E               	movf	(_F1+2)^(0+128),w
  8137  122E  1283               	bcf	3,5	;RP0=0, select bank0
  8138  122F  00BE               	movwf	___flmul@f2+2
  8139  1230  1683               	bsf	3,5	;RP0=1, select bank1
  8140  1231  086D               	movf	(_F1+1)^(0+128),w
  8141  1232  1283               	bcf	3,5	;RP0=0, select bank0
  8142  1233  00BD               	movwf	___flmul@f2+1
  8143  1234  1683               	bsf	3,5	;RP0=1, select bank1
  8144  1235  086C               	movf	_F1^(0+128),w
  8145  1236  1283               	bcf	3,5	;RP0=0, select bank0
  8146  1237  00BC               	movwf	___flmul@f2
  8147  1238  25E0               	fcall	___flmul
  8148  1239  083B               	movf	?___flmul+3,w
  8149  123A  00E1               	movwf	___flsub@f1+3
  8150  123B  083A               	movf	?___flmul+2,w
  8151  123C  00E0               	movwf	___flsub@f1+2
  8152  123D  0839               	movf	?___flmul+1,w
  8153  123E  00DF               	movwf	___flsub@f1+1
  8154  123F  0838               	movf	?___flmul,w
  8155  1240  00DE               	movwf	___flsub@f1
  8156  1241  120A  158A  2602  160A  118A  	fcall	___flsub
  8157  1246  085D               	movf	?___flsub+3,w
  8158  1247  1683               	bsf	3,5	;RP0=1, select bank1
  8159  1248  00CE               	movwf	(_measure_inductance$1052+3)^(0+128)
  8160  1249  1283               	bcf	3,5	;RP0=0, select bank0
  8161  124A  085C               	movf	?___flsub+2,w
  8162  124B  1683               	bsf	3,5	;RP0=1, select bank1
  8163  124C  00CD               	movwf	(_measure_inductance$1052+2)^(0+128)
  8164  124D  1283               	bcf	3,5	;RP0=0, select bank0
  8165  124E  085B               	movf	?___flsub+1,w
  8166  124F  1683               	bsf	3,5	;RP0=1, select bank1
  8167  1250  00CC               	movwf	(_measure_inductance$1052+1)^(0+128)
  8168  1251  1283               	bcf	3,5	;RP0=0, select bank0
  8169  1252  085A               	movf	?___flsub,w
  8170  1253  1683               	bsf	3,5	;RP0=1, select bank1
  8171  1254  00CB               	movwf	_measure_inductance$1052^(0+128)
  8172                           
  8173                           ;measure.c: 208: numerator = ((F1 * F1) - (F3 * F3)) * ((F1 * F1) - (F2 - F2)) * (100 * 
      +                          100);
  8174  1255  0868               	movf	(_F3+3)^(0+128),w
  8175  1256  1283               	bcf	3,5	;RP0=0, select bank0
  8176  1257  00BB               	movwf	___flmul@f1+3
  8177  1258  1683               	bsf	3,5	;RP0=1, select bank1
  8178  1259  0867               	movf	(_F3+2)^(0+128),w
  8179  125A  1283               	bcf	3,5	;RP0=0, select bank0
  8180  125B  00BA               	movwf	___flmul@f1+2
  8181  125C  1683               	bsf	3,5	;RP0=1, select bank1
  8182  125D  0866               	movf	(_F3+1)^(0+128),w
  8183  125E  1283               	bcf	3,5	;RP0=0, select bank0
  8184  125F  00B9               	movwf	___flmul@f1+1
  8185  1260  1683               	bsf	3,5	;RP0=1, select bank1
  8186  1261  0865               	movf	_F3^(0+128),w
  8187  1262  1283               	bcf	3,5	;RP0=0, select bank0
  8188  1263  00B8               	movwf	___flmul@f1
  8189  1264  1683               	bsf	3,5	;RP0=1, select bank1
  8190  1265  0868               	movf	(_F3+3)^(0+128),w
  8191  1266  1283               	bcf	3,5	;RP0=0, select bank0
  8192  1267  00BF               	movwf	___flmul@f2+3
  8193  1268  1683               	bsf	3,5	;RP0=1, select bank1
  8194  1269  0867               	movf	(_F3+2)^(0+128),w
  8195  126A  1283               	bcf	3,5	;RP0=0, select bank0
  8196  126B  00BE               	movwf	___flmul@f2+2
  8197  126C  1683               	bsf	3,5	;RP0=1, select bank1
  8198  126D  0866               	movf	(_F3+1)^(0+128),w
  8199  126E  1283               	bcf	3,5	;RP0=0, select bank0
  8200  126F  00BD               	movwf	___flmul@f2+1
  8201  1270  1683               	bsf	3,5	;RP0=1, select bank1
  8202  1271  0865               	movf	_F3^(0+128),w
  8203  1272  1283               	bcf	3,5	;RP0=0, select bank0
  8204  1273  00BC               	movwf	___flmul@f2
  8205  1274  25E0  160A  118A   	fcall	___flmul
  8206  1277  083B               	movf	?___flmul+3,w
  8207  1278  00DD               	movwf	___flsub@f2+3
  8208  1279  083A               	movf	?___flmul+2,w
  8209  127A  00DC               	movwf	___flsub@f2+2
  8210  127B  0839               	movf	?___flmul+1,w
  8211  127C  00DB               	movwf	___flsub@f2+1
  8212  127D  0838               	movf	?___flmul,w
  8213  127E  00DA               	movwf	___flsub@f2
  8214  127F  1683               	bsf	3,5	;RP0=1, select bank1
  8215  1280  086F               	movf	(_F1+3)^(0+128),w
  8216  1281  1283               	bcf	3,5	;RP0=0, select bank0
  8217  1282  00BB               	movwf	___flmul@f1+3
  8218  1283  1683               	bsf	3,5	;RP0=1, select bank1
  8219  1284  086E               	movf	(_F1+2)^(0+128),w
  8220  1285  1283               	bcf	3,5	;RP0=0, select bank0
  8221  1286  00BA               	movwf	___flmul@f1+2
  8222  1287  1683               	bsf	3,5	;RP0=1, select bank1
  8223  1288  086D               	movf	(_F1+1)^(0+128),w
  8224  1289  1283               	bcf	3,5	;RP0=0, select bank0
  8225  128A  00B9               	movwf	___flmul@f1+1
  8226  128B  1683               	bsf	3,5	;RP0=1, select bank1
  8227  128C  086C               	movf	_F1^(0+128),w
  8228  128D  1283               	bcf	3,5	;RP0=0, select bank0
  8229  128E  00B8               	movwf	___flmul@f1
  8230  128F  1683               	bsf	3,5	;RP0=1, select bank1
  8231  1290  086F               	movf	(_F1+3)^(0+128),w
  8232  1291  1283               	bcf	3,5	;RP0=0, select bank0
  8233  1292  00BF               	movwf	___flmul@f2+3
  8234  1293  1683               	bsf	3,5	;RP0=1, select bank1
  8235  1294  086E               	movf	(_F1+2)^(0+128),w
  8236  1295  1283               	bcf	3,5	;RP0=0, select bank0
  8237  1296  00BE               	movwf	___flmul@f2+2
  8238  1297  1683               	bsf	3,5	;RP0=1, select bank1
  8239  1298  086D               	movf	(_F1+1)^(0+128),w
  8240  1299  1283               	bcf	3,5	;RP0=0, select bank0
  8241  129A  00BD               	movwf	___flmul@f2+1
  8242  129B  1683               	bsf	3,5	;RP0=1, select bank1
  8243  129C  086C               	movf	_F1^(0+128),w
  8244  129D  1283               	bcf	3,5	;RP0=0, select bank0
  8245  129E  00BC               	movwf	___flmul@f2
  8246  129F  25E0               	fcall	___flmul
  8247  12A0  083B               	movf	?___flmul+3,w
  8248  12A1  00E1               	movwf	___flsub@f1+3
  8249  12A2  083A               	movf	?___flmul+2,w
  8250  12A3  00E0               	movwf	___flsub@f1+2
  8251  12A4  0839               	movf	?___flmul+1,w
  8252  12A5  00DF               	movwf	___flsub@f1+1
  8253  12A6  0838               	movf	?___flmul,w
  8254  12A7  00DE               	movwf	___flsub@f1
  8255  12A8  120A  158A  2602  160A  118A  	fcall	___flsub
  8256  12AD  085D               	movf	?___flsub+3,w
  8257  12AE  1683               	bsf	3,5	;RP0=1, select bank1
  8258  12AF  00D2               	movwf	(_measure_inductance$1053+3)^(0+128)
  8259  12B0  1283               	bcf	3,5	;RP0=0, select bank0
  8260  12B1  085C               	movf	?___flsub+2,w
  8261  12B2  1683               	bsf	3,5	;RP0=1, select bank1
  8262  12B3  00D1               	movwf	(_measure_inductance$1053+2)^(0+128)
  8263  12B4  1283               	bcf	3,5	;RP0=0, select bank0
  8264  12B5  085B               	movf	?___flsub+1,w
  8265  12B6  1683               	bsf	3,5	;RP0=1, select bank1
  8266  12B7  00D0               	movwf	(_measure_inductance$1053+1)^(0+128)
  8267  12B8  1283               	bcf	3,5	;RP0=0, select bank0
  8268  12B9  085A               	movf	?___flsub,w
  8269  12BA  1683               	bsf	3,5	;RP0=1, select bank1
  8270  12BB  00CF               	movwf	_measure_inductance$1053^(0+128)
  8271                           
  8272                           ;measure.c: 208: numerator = ((F1 * F1) - (F3 * F3)) * ((F1 * F1) - (F2 - F2)) * (100 * 
      +                          100);
  8273  12BC  084E               	movf	(_measure_inductance$1052+3)^(0+128),w
  8274  12BD  1283               	bcf	3,5	;RP0=0, select bank0
  8275  12BE  00BB               	movwf	___flmul@f1+3
  8276  12BF  1683               	bsf	3,5	;RP0=1, select bank1
  8277  12C0  084D               	movf	(_measure_inductance$1052+2)^(0+128),w
  8278  12C1  1283               	bcf	3,5	;RP0=0, select bank0
  8279  12C2  00BA               	movwf	___flmul@f1+2
  8280  12C3  1683               	bsf	3,5	;RP0=1, select bank1
  8281  12C4  084C               	movf	(_measure_inductance$1052+1)^(0+128),w
  8282  12C5  1283               	bcf	3,5	;RP0=0, select bank0
  8283  12C6  00B9               	movwf	___flmul@f1+1
  8284  12C7  1683               	bsf	3,5	;RP0=1, select bank1
  8285  12C8  084B               	movf	_measure_inductance$1052^(0+128),w
  8286  12C9  1283               	bcf	3,5	;RP0=0, select bank0
  8287  12CA  00B8               	movwf	___flmul@f1
  8288  12CB  1683               	bsf	3,5	;RP0=1, select bank1
  8289  12CC  0852               	movf	(_measure_inductance$1053+3)^(0+128),w
  8290  12CD  1283               	bcf	3,5	;RP0=0, select bank0
  8291  12CE  00BF               	movwf	___flmul@f2+3
  8292  12CF  1683               	bsf	3,5	;RP0=1, select bank1
  8293  12D0  0851               	movf	(_measure_inductance$1053+2)^(0+128),w
  8294  12D1  1283               	bcf	3,5	;RP0=0, select bank0
  8295  12D2  00BE               	movwf	___flmul@f2+2
  8296  12D3  1683               	bsf	3,5	;RP0=1, select bank1
  8297  12D4  0850               	movf	(_measure_inductance$1053+1)^(0+128),w
  8298  12D5  1283               	bcf	3,5	;RP0=0, select bank0
  8299  12D6  00BD               	movwf	___flmul@f2+1
  8300  12D7  1683               	bsf	3,5	;RP0=1, select bank1
  8301  12D8  084F               	movf	_measure_inductance$1053^(0+128),w
  8302  12D9  1283               	bcf	3,5	;RP0=0, select bank0
  8303  12DA  00BC               	movwf	___flmul@f2
  8304  12DB  25E0  160A  118A   	fcall	___flmul
  8305  12DE  083B               	movf	?___flmul+3,w
  8306  12DF  1683               	bsf	3,5	;RP0=1, select bank1
  8307  12E0  00D6               	movwf	(_measure_inductance$1054+3)^(0+128)
  8308  12E1  1283               	bcf	3,5	;RP0=0, select bank0
  8309  12E2  083A               	movf	?___flmul+2,w
  8310  12E3  1683               	bsf	3,5	;RP0=1, select bank1
  8311  12E4  00D5               	movwf	(_measure_inductance$1054+2)^(0+128)
  8312  12E5  1283               	bcf	3,5	;RP0=0, select bank0
  8313  12E6  0839               	movf	?___flmul+1,w
  8314  12E7  1683               	bsf	3,5	;RP0=1, select bank1
  8315  12E8  00D4               	movwf	(_measure_inductance$1054+1)^(0+128)
  8316  12E9  1283               	bcf	3,5	;RP0=0, select bank0
  8317  12EA  0838               	movf	?___flmul,w
  8318  12EB  1683               	bsf	3,5	;RP0=1, select bank1
  8319  12EC  00D3               	movwf	_measure_inductance$1054^(0+128)
  8320                           
  8321                           ;measure.c: 208: numerator = ((F1 * F1) - (F3 * F3)) * ((F1 * F1) - (F2 - F2)) * (100 * 
      +                          100);
  8322  12ED  3046               	movlw	70
  8323  12EE  1283               	bcf	3,5	;RP0=0, select bank0
  8324  12EF  00BB               	movwf	___flmul@f1+3
  8325  12F0  301C               	movlw	28
  8326  12F1  00BA               	movwf	___flmul@f1+2
  8327  12F2  3040               	movlw	64
  8328  12F3  00B9               	movwf	___flmul@f1+1
  8329  12F4  01B8               	clrf	___flmul@f1
  8330  12F5  1683               	bsf	3,5	;RP0=1, select bank1
  8331  12F6  0856               	movf	(_measure_inductance$1054+3)^(0+128),w
  8332  12F7  1283               	bcf	3,5	;RP0=0, select bank0
  8333  12F8  00BF               	movwf	___flmul@f2+3
  8334  12F9  1683               	bsf	3,5	;RP0=1, select bank1
  8335  12FA  0855               	movf	(_measure_inductance$1054+2)^(0+128),w
  8336  12FB  1283               	bcf	3,5	;RP0=0, select bank0
  8337  12FC  00BE               	movwf	___flmul@f2+2
  8338  12FD  1683               	bsf	3,5	;RP0=1, select bank1
  8339  12FE  0854               	movf	(_measure_inductance$1054+1)^(0+128),w
  8340  12FF  1283               	bcf	3,5	;RP0=0, select bank0
  8341  1300  00BD               	movwf	___flmul@f2+1
  8342  1301  1683               	bsf	3,5	;RP0=1, select bank1
  8343  1302  0853               	movf	_measure_inductance$1054^(0+128),w
  8344  1303  1283               	bcf	3,5	;RP0=0, select bank0
  8345  1304  00BC               	movwf	___flmul@f2
  8346  1305  25E0  160A  118A   	fcall	___flmul
  8347  1308  083B               	movf	?___flmul+3,w
  8348  1309  1683               	bsf	3,5	;RP0=1, select bank1
  8349  130A  00B5               	movwf	(measure_inductance@numerator+3)^(0+128)
  8350  130B  1283               	bcf	3,5	;RP0=0, select bank0
  8351  130C  083A               	movf	?___flmul+2,w
  8352  130D  1683               	bsf	3,5	;RP0=1, select bank1
  8353  130E  00B4               	movwf	(measure_inductance@numerator+2)^(0+128)
  8354  130F  1283               	bcf	3,5	;RP0=0, select bank0
  8355  1310  0839               	movf	?___flmul+1,w
  8356  1311  1683               	bsf	3,5	;RP0=1, select bank1
  8357  1312  00B3               	movwf	(measure_inductance@numerator+1)^(0+128)
  8358  1313  1283               	bcf	3,5	;RP0=0, select bank0
  8359  1314  0838               	movf	?___flmul,w
  8360  1315  1683               	bsf	3,5	;RP0=1, select bank1
  8361  1316  00B2               	movwf	measure_inductance@numerator^(0+128)
  8362                           
  8363                           ;measure.c: 210: denominator = 4 * 3.14159265358979323846l * 3.14159265358979323846l * F
      +                          1 * F1 * F2 * F2 * F3 * F3 * CCal;
  8364  1317  086F               	movf	(_F1+3)^(0+128),w
  8365  1318  1283               	bcf	3,5	;RP0=0, select bank0
  8366  1319  00BB               	movwf	___flmul@f1+3
  8367  131A  1683               	bsf	3,5	;RP0=1, select bank1
  8368  131B  086E               	movf	(_F1+2)^(0+128),w
  8369  131C  1283               	bcf	3,5	;RP0=0, select bank0
  8370  131D  00BA               	movwf	___flmul@f1+2
  8371  131E  1683               	bsf	3,5	;RP0=1, select bank1
  8372  131F  086D               	movf	(_F1+1)^(0+128),w
  8373  1320  1283               	bcf	3,5	;RP0=0, select bank0
  8374  1321  00B9               	movwf	___flmul@f1+1
  8375  1322  1683               	bsf	3,5	;RP0=1, select bank1
  8376  1323  086C               	movf	_F1^(0+128),w
  8377  1324  1283               	bcf	3,5	;RP0=0, select bank0
  8378  1325  00B8               	movwf	___flmul@f1
  8379  1326  1683               	bsf	3,5	;RP0=1, select bank1
  8380  1327  086F               	movf	(_F1+3)^(0+128),w
  8381  1328  1283               	bcf	3,5	;RP0=0, select bank0
  8382  1329  00BF               	movwf	___flmul@f2+3
  8383  132A  1683               	bsf	3,5	;RP0=1, select bank1
  8384  132B  086E               	movf	(_F1+2)^(0+128),w
  8385  132C  1283               	bcf	3,5	;RP0=0, select bank0
  8386  132D  00BE               	movwf	___flmul@f2+2
  8387  132E  1683               	bsf	3,5	;RP0=1, select bank1
  8388  132F  086D               	movf	(_F1+1)^(0+128),w
  8389  1330  1283               	bcf	3,5	;RP0=0, select bank0
  8390  1331  00BD               	movwf	___flmul@f2+1
  8391  1332  1683               	bsf	3,5	;RP0=1, select bank1
  8392  1333  086C               	movf	_F1^(0+128),w
  8393  1334  1283               	bcf	3,5	;RP0=0, select bank0
  8394  1335  00BC               	movwf	___flmul@f2
  8395  1336  25E0  160A  118A   	fcall	___flmul
  8396  1339  083B               	movf	?___flmul+3,w
  8397  133A  1683               	bsf	3,5	;RP0=1, select bank1
  8398  133B  00C1               	movwf	(_measure_inductance$1055+3)^(0+128)
  8399  133C  1283               	bcf	3,5	;RP0=0, select bank0
  8400  133D  083A               	movf	?___flmul+2,w
  8401  133E  1683               	bsf	3,5	;RP0=1, select bank1
  8402  133F  00C0               	movwf	(_measure_inductance$1055+2)^(0+128)
  8403  1340  1283               	bcf	3,5	;RP0=0, select bank0
  8404  1341  0839               	movf	?___flmul+1,w
  8405  1342  1683               	bsf	3,5	;RP0=1, select bank1
  8406  1343  00BF               	movwf	(_measure_inductance$1055+1)^(0+128)
  8407  1344  1283               	bcf	3,5	;RP0=0, select bank0
  8408  1345  0838               	movf	?___flmul,w
  8409  1346  1683               	bsf	3,5	;RP0=1, select bank1
  8410  1347  00BE               	movwf	_measure_inductance$1055^(0+128)
  8411                           
  8412                           ;measure.c: 210: denominator = 4 * 3.14159265358979323846l * 3.14159265358979323846l * F
      +                          1 * F1 * F2 * F2 * F3 * F3 * CCal;
  8413  1348  1703               	bsf	3,6	;RP1=1, select bank3
  8414  1349  0813               	movf	(_F2+3)^(0+384),w
  8415  134A  1283               	bcf	3,5	;RP0=0, select bank0
  8416  134B  1303               	bcf	3,6	;RP1=0, select bank0
  8417  134C  00BB               	movwf	___flmul@f1+3
  8418  134D  1683               	bsf	3,5	;RP0=1, select bank3
  8419  134E  1703               	bsf	3,6	;RP1=1, select bank3
  8420  134F  0812               	movf	(_F2+2)^(0+384),w
  8421  1350  1283               	bcf	3,5	;RP0=0, select bank0
  8422  1351  1303               	bcf	3,6	;RP1=0, select bank0
  8423  1352  00BA               	movwf	___flmul@f1+2
  8424  1353  1683               	bsf	3,5	;RP0=1, select bank3
  8425  1354  1703               	bsf	3,6	;RP1=1, select bank3
  8426  1355  0811               	movf	(_F2+1)^(0+384),w
  8427  1356  1283               	bcf	3,5	;RP0=0, select bank0
  8428  1357  1303               	bcf	3,6	;RP1=0, select bank0
  8429  1358  00B9               	movwf	___flmul@f1+1
  8430  1359  1683               	bsf	3,5	;RP0=1, select bank3
  8431  135A  1703               	bsf	3,6	;RP1=1, select bank3
  8432  135B  0810               	movf	_F2^(0+384),w
  8433  135C  1283               	bcf	3,5	;RP0=0, select bank0
  8434  135D  1303               	bcf	3,6	;RP1=0, select bank0
  8435  135E  00B8               	movwf	___flmul@f1
  8436  135F  1683               	bsf	3,5	;RP0=1, select bank1
  8437  1360  0841               	movf	(_measure_inductance$1055+3)^(0+128),w
  8438  1361  1283               	bcf	3,5	;RP0=0, select bank0
  8439  1362  00BF               	movwf	___flmul@f2+3
  8440  1363  1683               	bsf	3,5	;RP0=1, select bank1
  8441  1364  0840               	movf	(_measure_inductance$1055+2)^(0+128),w
  8442  1365  1283               	bcf	3,5	;RP0=0, select bank0
  8443  1366  00BE               	movwf	___flmul@f2+2
  8444  1367  1683               	bsf	3,5	;RP0=1, select bank1
  8445  1368  083F               	movf	(_measure_inductance$1055+1)^(0+128),w
  8446  1369  1283               	bcf	3,5	;RP0=0, select bank0
  8447  136A  00BD               	movwf	___flmul@f2+1
  8448  136B  1683               	bsf	3,5	;RP0=1, select bank1
  8449  136C  083E               	movf	_measure_inductance$1055^(0+128),w
  8450  136D  1283               	bcf	3,5	;RP0=0, select bank0
  8451  136E  00BC               	movwf	___flmul@f2
  8452  136F  25E0  160A  118A   	fcall	___flmul
  8453  1372  083B               	movf	?___flmul+3,w
  8454  1373  1683               	bsf	3,5	;RP0=1, select bank1
  8455  1374  00CE               	movwf	(_measure_inductance$1052+3)^(0+128)
  8456  1375  1283               	bcf	3,5	;RP0=0, select bank0
  8457  1376  083A               	movf	?___flmul+2,w
  8458  1377  1683               	bsf	3,5	;RP0=1, select bank1
  8459  1378  00CD               	movwf	(_measure_inductance$1052+2)^(0+128)
  8460  1379  1283               	bcf	3,5	;RP0=0, select bank0
  8461  137A  0839               	movf	?___flmul+1,w
  8462  137B  1683               	bsf	3,5	;RP0=1, select bank1
  8463  137C  00CC               	movwf	(_measure_inductance$1052+1)^(0+128)
  8464  137D  1283               	bcf	3,5	;RP0=0, select bank0
  8465  137E  0838               	movf	?___flmul,w
  8466  137F  1683               	bsf	3,5	;RP0=1, select bank1
  8467  1380  00CB               	movwf	_measure_inductance$1052^(0+128)
  8468                           
  8469                           ;measure.c: 210: denominator = 4 * 3.14159265358979323846l * 3.14159265358979323846l * F
      +                          1 * F1 * F2 * F2 * F3 * F3 * CCal;
  8470  1381  1703               	bsf	3,6	;RP1=1, select bank3
  8471  1382  0813               	movf	(_F2+3)^(0+384),w
  8472  1383  1283               	bcf	3,5	;RP0=0, select bank0
  8473  1384  1303               	bcf	3,6	;RP1=0, select bank0
  8474  1385  00BB               	movwf	___flmul@f1+3
  8475  1386  1683               	bsf	3,5	;RP0=1, select bank3
  8476  1387  1703               	bsf	3,6	;RP1=1, select bank3
  8477  1388  0812               	movf	(_F2+2)^(0+384),w
  8478  1389  1283               	bcf	3,5	;RP0=0, select bank0
  8479  138A  1303               	bcf	3,6	;RP1=0, select bank0
  8480  138B  00BA               	movwf	___flmul@f1+2
  8481  138C  1683               	bsf	3,5	;RP0=1, select bank3
  8482  138D  1703               	bsf	3,6	;RP1=1, select bank3
  8483  138E  0811               	movf	(_F2+1)^(0+384),w
  8484  138F  1283               	bcf	3,5	;RP0=0, select bank0
  8485  1390  1303               	bcf	3,6	;RP1=0, select bank0
  8486  1391  00B9               	movwf	___flmul@f1+1
  8487  1392  1683               	bsf	3,5	;RP0=1, select bank3
  8488  1393  1703               	bsf	3,6	;RP1=1, select bank3
  8489  1394  0810               	movf	_F2^(0+384),w
  8490  1395  1283               	bcf	3,5	;RP0=0, select bank0
  8491  1396  1303               	bcf	3,6	;RP1=0, select bank0
  8492  1397  00B8               	movwf	___flmul@f1
  8493  1398  1683               	bsf	3,5	;RP0=1, select bank1
  8494  1399  084E               	movf	(_measure_inductance$1052+3)^(0+128),w
  8495  139A  1283               	bcf	3,5	;RP0=0, select bank0
  8496  139B  00BF               	movwf	___flmul@f2+3
  8497  139C  1683               	bsf	3,5	;RP0=1, select bank1
  8498  139D  084D               	movf	(_measure_inductance$1052+2)^(0+128),w
  8499  139E  1283               	bcf	3,5	;RP0=0, select bank0
  8500  139F  00BE               	movwf	___flmul@f2+2
  8501  13A0  1683               	bsf	3,5	;RP0=1, select bank1
  8502  13A1  084C               	movf	(_measure_inductance$1052+1)^(0+128),w
  8503  13A2  1283               	bcf	3,5	;RP0=0, select bank0
  8504  13A3  00BD               	movwf	___flmul@f2+1
  8505  13A4  1683               	bsf	3,5	;RP0=1, select bank1
  8506  13A5  084B               	movf	_measure_inductance$1052^(0+128),w
  8507  13A6  1283               	bcf	3,5	;RP0=0, select bank0
  8508  13A7  00BC               	movwf	___flmul@f2
  8509  13A8  25E0  160A  118A   	fcall	___flmul
  8510  13AB  083B               	movf	?___flmul+3,w
  8511  13AC  1683               	bsf	3,5	;RP0=1, select bank1
  8512  13AD  00D2               	movwf	(_measure_inductance$1053+3)^(0+128)
  8513  13AE  1283               	bcf	3,5	;RP0=0, select bank0
  8514  13AF  083A               	movf	?___flmul+2,w
  8515  13B0  1683               	bsf	3,5	;RP0=1, select bank1
  8516  13B1  00D1               	movwf	(_measure_inductance$1053+2)^(0+128)
  8517  13B2  1283               	bcf	3,5	;RP0=0, select bank0
  8518  13B3  0839               	movf	?___flmul+1,w
  8519  13B4  1683               	bsf	3,5	;RP0=1, select bank1
  8520  13B5  00D0               	movwf	(_measure_inductance$1053+1)^(0+128)
  8521  13B6  1283               	bcf	3,5	;RP0=0, select bank0
  8522  13B7  0838               	movf	?___flmul,w
  8523  13B8  1683               	bsf	3,5	;RP0=1, select bank1
  8524  13B9  00CF               	movwf	_measure_inductance$1053^(0+128)
  8525                           
  8526                           ;measure.c: 210: denominator = 4 * 3.14159265358979323846l * 3.14159265358979323846l * F
      +                          1 * F1 * F2 * F2 * F3 * F3 * CCal;
  8527  13BA  0868               	movf	(_F3+3)^(0+128),w
  8528  13BB  1283               	bcf	3,5	;RP0=0, select bank0
  8529  13BC  00BB               	movwf	___flmul@f1+3
  8530  13BD  1683               	bsf	3,5	;RP0=1, select bank1
  8531  13BE  0867               	movf	(_F3+2)^(0+128),w
  8532  13BF  1283               	bcf	3,5	;RP0=0, select bank0
  8533  13C0  00BA               	movwf	___flmul@f1+2
  8534  13C1  1683               	bsf	3,5	;RP0=1, select bank1
  8535  13C2  0866               	movf	(_F3+1)^(0+128),w
  8536  13C3  1283               	bcf	3,5	;RP0=0, select bank0
  8537  13C4  00B9               	movwf	___flmul@f1+1
  8538  13C5  1683               	bsf	3,5	;RP0=1, select bank1
  8539  13C6  0865               	movf	_F3^(0+128),w
  8540  13C7  1283               	bcf	3,5	;RP0=0, select bank0
  8541  13C8  00B8               	movwf	___flmul@f1
  8542  13C9  1683               	bsf	3,5	;RP0=1, select bank1
  8543  13CA  0852               	movf	(_measure_inductance$1053+3)^(0+128),w
  8544  13CB  1283               	bcf	3,5	;RP0=0, select bank0
  8545  13CC  00BF               	movwf	___flmul@f2+3
  8546  13CD  1683               	bsf	3,5	;RP0=1, select bank1
  8547  13CE  0851               	movf	(_measure_inductance$1053+2)^(0+128),w
  8548  13CF  1283               	bcf	3,5	;RP0=0, select bank0
  8549  13D0  00BE               	movwf	___flmul@f2+2
  8550  13D1  1683               	bsf	3,5	;RP0=1, select bank1
  8551  13D2  0850               	movf	(_measure_inductance$1053+1)^(0+128),w
  8552  13D3  1283               	bcf	3,5	;RP0=0, select bank0
  8553  13D4  00BD               	movwf	___flmul@f2+1
  8554  13D5  1683               	bsf	3,5	;RP0=1, select bank1
  8555  13D6  084F               	movf	_measure_inductance$1053^(0+128),w
  8556  13D7  1283               	bcf	3,5	;RP0=0, select bank0
  8557  13D8  00BC               	movwf	___flmul@f2
  8558  13D9  25E0  160A  118A   	fcall	___flmul
  8559  13DC  083B               	movf	?___flmul+3,w
  8560  13DD  1683               	bsf	3,5	;RP0=1, select bank1
  8561  13DE  00D6               	movwf	(_measure_inductance$1054+3)^(0+128)
  8562  13DF  1283               	bcf	3,5	;RP0=0, select bank0
  8563  13E0  083A               	movf	?___flmul+2,w
  8564  13E1  1683               	bsf	3,5	;RP0=1, select bank1
  8565  13E2  00D5               	movwf	(_measure_inductance$1054+2)^(0+128)
  8566  13E3  1283               	bcf	3,5	;RP0=0, select bank0
  8567  13E4  0839               	movf	?___flmul+1,w
  8568  13E5  1683               	bsf	3,5	;RP0=1, select bank1
  8569  13E6  00D4               	movwf	(_measure_inductance$1054+1)^(0+128)
  8570  13E7  1283               	bcf	3,5	;RP0=0, select bank0
  8571  13E8  0838               	movf	?___flmul,w
  8572  13E9  1683               	bsf	3,5	;RP0=1, select bank1
  8573  13EA  00D3               	movwf	_measure_inductance$1054^(0+128)
  8574                           
  8575                           ;measure.c: 210: denominator = 4 * 3.14159265358979323846l * 3.14159265358979323846l * F
      +                          1 * F1 * F2 * F2 * F3 * F3 * CCal;
  8576  13EB  0868               	movf	(_F3+3)^(0+128),w
  8577  13EC  1283               	bcf	3,5	;RP0=0, select bank0
  8578  13ED  00BB               	movwf	___flmul@f1+3
  8579  13EE  1683               	bsf	3,5	;RP0=1, select bank1
  8580  13EF  0867               	movf	(_F3+2)^(0+128),w
  8581  13F0  1283               	bcf	3,5	;RP0=0, select bank0
  8582  13F1  00BA               	movwf	___flmul@f1+2
  8583  13F2  1683               	bsf	3,5	;RP0=1, select bank1
  8584  13F3  0866               	movf	(_F3+1)^(0+128),w
  8585  13F4  1283               	bcf	3,5	;RP0=0, select bank0
  8586  13F5  00B9               	movwf	___flmul@f1+1
  8587  13F6  1683               	bsf	3,5	;RP0=1, select bank1
  8588  13F7  0865               	movf	_F3^(0+128),w
  8589  13F8  1283               	bcf	3,5	;RP0=0, select bank0
  8590  13F9  00B8               	movwf	___flmul@f1
  8591  13FA  1683               	bsf	3,5	;RP0=1, select bank1
  8592  13FB  0856               	movf	(_measure_inductance$1054+3)^(0+128),w
  8593  13FC  1283               	bcf	3,5	;RP0=0, select bank0
  8594  13FD  00BF               	movwf	___flmul@f2+3
  8595  13FE  1683               	bsf	3,5	;RP0=1, select bank1
  8596  13FF  0855               	movf	(_measure_inductance$1054+2)^(0+128),w
  8597  1400  1283               	bcf	3,5	;RP0=0, select bank0
  8598  1401  00BE               	movwf	___flmul@f2+2
  8599  1402  1683               	bsf	3,5	;RP0=1, select bank1
  8600  1403  0854               	movf	(_measure_inductance$1054+1)^(0+128),w
  8601  1404  1283               	bcf	3,5	;RP0=0, select bank0
  8602  1405  00BD               	movwf	___flmul@f2+1
  8603  1406  1683               	bsf	3,5	;RP0=1, select bank1
  8604  1407  0853               	movf	_measure_inductance$1054^(0+128),w
  8605  1408  1283               	bcf	3,5	;RP0=0, select bank0
  8606  1409  00BC               	movwf	___flmul@f2
  8607  140A  25E0  160A  118A   	fcall	___flmul
  8608  140D  083B               	movf	?___flmul+3,w
  8609  140E  1683               	bsf	3,5	;RP0=1, select bank1
  8610  140F  00C5               	movwf	(_measure_inductance$1056+3)^(0+128)
  8611  1410  1283               	bcf	3,5	;RP0=0, select bank0
  8612  1411  083A               	movf	?___flmul+2,w
  8613  1412  1683               	bsf	3,5	;RP0=1, select bank1
  8614  1413  00C4               	movwf	(_measure_inductance$1056+2)^(0+128)
  8615  1414  1283               	bcf	3,5	;RP0=0, select bank0
  8616  1415  0839               	movf	?___flmul+1,w
  8617  1416  1683               	bsf	3,5	;RP0=1, select bank1
  8618  1417  00C3               	movwf	(_measure_inductance$1056+1)^(0+128)
  8619  1418  1283               	bcf	3,5	;RP0=0, select bank0
  8620  1419  0838               	movf	?___flmul,w
  8621  141A  1683               	bsf	3,5	;RP0=1, select bank1
  8622  141B  00C2               	movwf	_measure_inductance$1056^(0+128)
  8623                           
  8624                           ;measure.c: 210: denominator = 4 * 3.14159265358979323846l * 3.14159265358979323846l * F
      +                          1 * F1 * F2 * F2 * F3 * F3 * CCal;
  8625  141C  1703               	bsf	3,6	;RP1=1, select bank3
  8626  141D  084B               	movf	(_CCal+3)^(0+384),w
  8627  141E  1283               	bcf	3,5	;RP0=0, select bank0
  8628  141F  1303               	bcf	3,6	;RP1=0, select bank0
  8629  1420  00BB               	movwf	___flmul@f1+3
  8630  1421  1683               	bsf	3,5	;RP0=1, select bank3
  8631  1422  1703               	bsf	3,6	;RP1=1, select bank3
  8632  1423  084A               	movf	(_CCal+2)^(0+384),w
  8633  1424  1283               	bcf	3,5	;RP0=0, select bank0
  8634  1425  1303               	bcf	3,6	;RP1=0, select bank0
  8635  1426  00BA               	movwf	___flmul@f1+2
  8636  1427  1683               	bsf	3,5	;RP0=1, select bank3
  8637  1428  1703               	bsf	3,6	;RP1=1, select bank3
  8638  1429  0849               	movf	(_CCal+1)^(0+384),w
  8639  142A  1283               	bcf	3,5	;RP0=0, select bank0
  8640  142B  1303               	bcf	3,6	;RP1=0, select bank0
  8641  142C  00B9               	movwf	___flmul@f1+1
  8642  142D  1683               	bsf	3,5	;RP0=1, select bank3
  8643  142E  1703               	bsf	3,6	;RP1=1, select bank3
  8644  142F  0848               	movf	_CCal^(0+384),w
  8645  1430  1283               	bcf	3,5	;RP0=0, select bank0
  8646  1431  1303               	bcf	3,6	;RP1=0, select bank0
  8647  1432  00B8               	movwf	___flmul@f1
  8648  1433  1683               	bsf	3,5	;RP0=1, select bank1
  8649  1434  0845               	movf	(_measure_inductance$1056+3)^(0+128),w
  8650  1435  1283               	bcf	3,5	;RP0=0, select bank0
  8651  1436  00BF               	movwf	___flmul@f2+3
  8652  1437  1683               	bsf	3,5	;RP0=1, select bank1
  8653  1438  0844               	movf	(_measure_inductance$1056+2)^(0+128),w
  8654  1439  1283               	bcf	3,5	;RP0=0, select bank0
  8655  143A  00BE               	movwf	___flmul@f2+2
  8656  143B  1683               	bsf	3,5	;RP0=1, select bank1
  8657  143C  0843               	movf	(_measure_inductance$1056+1)^(0+128),w
  8658  143D  1283               	bcf	3,5	;RP0=0, select bank0
  8659  143E  00BD               	movwf	___flmul@f2+1
  8660  143F  1683               	bsf	3,5	;RP0=1, select bank1
  8661  1440  0842               	movf	_measure_inductance$1056^(0+128),w
  8662  1441  1283               	bcf	3,5	;RP0=0, select bank0
  8663  1442  00BC               	movwf	___flmul@f2
  8664  1443  25E0  160A  118A   	fcall	___flmul
  8665  1446  083B               	movf	?___flmul+3,w
  8666  1447  1683               	bsf	3,5	;RP0=1, select bank1
  8667  1448  00C9               	movwf	(_measure_inductance$1057+3)^(0+128)
  8668  1449  1283               	bcf	3,5	;RP0=0, select bank0
  8669  144A  083A               	movf	?___flmul+2,w
  8670  144B  1683               	bsf	3,5	;RP0=1, select bank1
  8671  144C  00C8               	movwf	(_measure_inductance$1057+2)^(0+128)
  8672  144D  1283               	bcf	3,5	;RP0=0, select bank0
  8673  144E  0839               	movf	?___flmul+1,w
  8674  144F  1683               	bsf	3,5	;RP0=1, select bank1
  8675  1450  00C7               	movwf	(_measure_inductance$1057+1)^(0+128)
  8676  1451  1283               	bcf	3,5	;RP0=0, select bank0
  8677  1452  0838               	movf	?___flmul,w
  8678  1453  1683               	bsf	3,5	;RP0=1, select bank1
  8679  1454  00C6               	movwf	_measure_inductance$1057^(0+128)
  8680                           
  8681                           ;measure.c: 210: denominator = 4 * 3.14159265358979323846l * 3.14159265358979323846l * F
      +                          1 * F1 * F2 * F2 * F3 * F3 * CCal;
  8682  1455  3042               	movlw	66
  8683  1456  1283               	bcf	3,5	;RP0=0, select bank0
  8684  1457  00BB               	movwf	___flmul@f1+3
  8685  1458  301D               	movlw	29
  8686  1459  00BA               	movwf	___flmul@f1+2
  8687  145A  30E9               	movlw	233
  8688  145B  00B9               	movwf	___flmul@f1+1
  8689  145C  30E6               	movlw	230
  8690  145D  00B8               	movwf	___flmul@f1
  8691  145E  1683               	bsf	3,5	;RP0=1, select bank1
  8692  145F  0849               	movf	(_measure_inductance$1057+3)^(0+128),w
  8693  1460  1283               	bcf	3,5	;RP0=0, select bank0
  8694  1461  00BF               	movwf	___flmul@f2+3
  8695  1462  1683               	bsf	3,5	;RP0=1, select bank1
  8696  1463  0848               	movf	(_measure_inductance$1057+2)^(0+128),w
  8697  1464  1283               	bcf	3,5	;RP0=0, select bank0
  8698  1465  00BE               	movwf	___flmul@f2+2
  8699  1466  1683               	bsf	3,5	;RP0=1, select bank1
  8700  1467  0847               	movf	(_measure_inductance$1057+1)^(0+128),w
  8701  1468  1283               	bcf	3,5	;RP0=0, select bank0
  8702  1469  00BD               	movwf	___flmul@f2+1
  8703  146A  1683               	bsf	3,5	;RP0=1, select bank1
  8704  146B  0846               	movf	_measure_inductance$1057^(0+128),w
  8705  146C  1283               	bcf	3,5	;RP0=0, select bank0
  8706  146D  00BC               	movwf	___flmul@f2
  8707  146E  25E0  160A  118A   	fcall	___flmul
  8708  1471  083B               	movf	?___flmul+3,w
  8709  1472  1683               	bsf	3,5	;RP0=1, select bank1
  8710  1473  00B9               	movwf	(measure_inductance@denominator+3)^(0+128)
  8711  1474  1283               	bcf	3,5	;RP0=0, select bank0
  8712  1475  083A               	movf	?___flmul+2,w
  8713  1476  1683               	bsf	3,5	;RP0=1, select bank1
  8714  1477  00B8               	movwf	(measure_inductance@denominator+2)^(0+128)
  8715  1478  1283               	bcf	3,5	;RP0=0, select bank0
  8716  1479  0839               	movf	?___flmul+1,w
  8717  147A  1683               	bsf	3,5	;RP0=1, select bank1
  8718  147B  00B7               	movwf	(measure_inductance@denominator+1)^(0+128)
  8719  147C  1283               	bcf	3,5	;RP0=0, select bank0
  8720  147D  0838               	movf	?___flmul,w
  8721  147E  1683               	bsf	3,5	;RP0=1, select bank1
  8722  147F  00B6               	movwf	measure_inductance@denominator^(0+128)
  8723                           
  8724                           ;measure.c: 212: Lin = (numerator / denominator) * 1e+15l;
  8725  1480  3058               	movlw	88
  8726  1481  1283               	bcf	3,5	;RP0=0, select bank0
  8727  1482  00BB               	movwf	___flmul@f1+3
  8728  1483  3063               	movlw	99
  8729  1484  00BA               	movwf	___flmul@f1+2
  8730  1485  305F               	movlw	95
  8731  1486  00B9               	movwf	___flmul@f1+1
  8732  1487  30A9               	movlw	169
  8733  1488  00B8               	movwf	___flmul@f1
  8734  1489  1683               	bsf	3,5	;RP0=1, select bank1
  8735  148A  0839               	movf	(measure_inductance@denominator+3)^(0+128),w
  8736  148B  1283               	bcf	3,5	;RP0=0, select bank0
  8737  148C  00A8               	movwf	___fldiv@f2+3
  8738  148D  1683               	bsf	3,5	;RP0=1, select bank1
  8739  148E  0838               	movf	(measure_inductance@denominator+2)^(0+128),w
  8740  148F  1283               	bcf	3,5	;RP0=0, select bank0
  8741  1490  00A7               	movwf	___fldiv@f2+2
  8742  1491  1683               	bsf	3,5	;RP0=1, select bank1
  8743  1492  0837               	movf	(measure_inductance@denominator+1)^(0+128),w
  8744  1493  1283               	bcf	3,5	;RP0=0, select bank0
  8745  1494  00A6               	movwf	___fldiv@f2+1
  8746  1495  1683               	bsf	3,5	;RP0=1, select bank1
  8747  1496  0836               	movf	measure_inductance@denominator^(0+128),w
  8748  1497  1283               	bcf	3,5	;RP0=0, select bank0
  8749  1498  00A5               	movwf	___fldiv@f2
  8750  1499  1683               	bsf	3,5	;RP0=1, select bank1
  8751  149A  0835               	movf	(measure_inductance@numerator+3)^(0+128),w
  8752  149B  1283               	bcf	3,5	;RP0=0, select bank0
  8753  149C  00AC               	movwf	___fldiv@f1+3
  8754  149D  1683               	bsf	3,5	;RP0=1, select bank1
  8755  149E  0834               	movf	(measure_inductance@numerator+2)^(0+128),w
  8756  149F  1283               	bcf	3,5	;RP0=0, select bank0
  8757  14A0  00AB               	movwf	___fldiv@f1+2
  8758  14A1  1683               	bsf	3,5	;RP0=1, select bank1
  8759  14A2  0833               	movf	(measure_inductance@numerator+1)^(0+128),w
  8760  14A3  1283               	bcf	3,5	;RP0=0, select bank0
  8761  14A4  00AA               	movwf	___fldiv@f1+1
  8762  14A5  1683               	bsf	3,5	;RP0=1, select bank1
  8763  14A6  0832               	movf	measure_inductance@numerator^(0+128),w
  8764  14A7  1283               	bcf	3,5	;RP0=0, select bank0
  8765  14A8  00A9               	movwf	___fldiv@f1
  8766  14A9  120A  158A  24CE  160A  118A  	fcall	___fldiv
  8767  14AE  0828               	movf	?___fldiv+3,w
  8768  14AF  00BF               	movwf	___flmul@f2+3
  8769  14B0  0827               	movf	?___fldiv+2,w
  8770  14B1  00BE               	movwf	___flmul@f2+2
  8771  14B2  0826               	movf	?___fldiv+1,w
  8772  14B3  00BD               	movwf	___flmul@f2+1
  8773  14B4  0825               	movf	?___fldiv,w
  8774  14B5  00BC               	movwf	___flmul@f2
  8775  14B6  25E0  160A  118A   	fcall	___flmul
  8776  14B9  083B               	movf	?___flmul+3,w
  8777  14BA  1683               	bsf	3,5	;RP0=1, select bank1
  8778  14BB  00DC               	movwf	(measure_inductance@Lin+3)^(0+128)
  8779  14BC  1283               	bcf	3,5	;RP0=0, select bank0
  8780  14BD  083A               	movf	?___flmul+2,w
  8781  14BE  1683               	bsf	3,5	;RP0=1, select bank1
  8782  14BF  00DB               	movwf	(measure_inductance@Lin+2)^(0+128)
  8783  14C0  1283               	bcf	3,5	;RP0=0, select bank0
  8784  14C1  0839               	movf	?___flmul+1,w
  8785  14C2  1683               	bsf	3,5	;RP0=1, select bank1
  8786  14C3  00DA               	movwf	(measure_inductance@Lin+1)^(0+128)
  8787  14C4  1283               	bcf	3,5	;RP0=0, select bank0
  8788  14C5  0838               	movf	?___flmul,w
  8789  14C6  1683               	bsf	3,5	;RP0=1, select bank1
  8790  14C7  00D9               	movwf	measure_inductance@Lin^(0+128)
  8791                           
  8792                           ;measure.c: 214: if(Lin > 999) {
  8793  14C8  3044               	movlw	68
  8794  14C9  00F5               	movwf	___flge@ff1+3
  8795  14CA  3079               	movlw	121
  8796  14CB  00F4               	movwf	___flge@ff1+2
  8797  14CC  30C0               	movlw	192
  8798  14CD  00F3               	movwf	___flge@ff1+1
  8799  14CE  01F2               	clrf	___flge@ff1
  8800  14CF  085C               	movf	(measure_inductance@Lin+3)^(0+128),w
  8801  14D0  00F9               	movwf	___flge@ff2+3
  8802  14D1  085B               	movf	(measure_inductance@Lin+2)^(0+128),w
  8803  14D2  00F8               	movwf	___flge@ff2+2
  8804  14D3  085A               	movf	(measure_inductance@Lin+1)^(0+128),w
  8805  14D4  00F7               	movwf	___flge@ff2+1
  8806  14D5  0859               	movf	measure_inductance@Lin^(0+128),w
  8807  14D6  00F6               	movwf	___flge@ff2
  8808  14D7  2679  160A  118A   	fcall	___flge
  8809  14DA  1803               	btfsc	3,0
  8810  14DB  2D98               	goto	l4335
  8811                           
  8812                           ;measure.c: 215: if(Lin > (999e+03l)) {
  8813  14DC  3049               	movlw	73
  8814  14DD  00F5               	movwf	___flge@ff1+3
  8815  14DE  3073               	movlw	115
  8816  14DF  00F4               	movwf	___flge@ff1+2
  8817  14E0  30E5               	movlw	229
  8818  14E1  00F3               	movwf	___flge@ff1+1
  8819  14E2  3080               	movlw	128
  8820  14E3  00F2               	movwf	___flge@ff1
  8821  14E4  1683               	bsf	3,5	;RP0=1, select bank1
  8822  14E5  1303               	bcf	3,6	;RP1=0, select bank1
  8823  14E6  085C               	movf	(measure_inductance@Lin+3)^(0+128),w
  8824  14E7  00F9               	movwf	___flge@ff2+3
  8825  14E8  085B               	movf	(measure_inductance@Lin+2)^(0+128),w
  8826  14E9  00F8               	movwf	___flge@ff2+2
  8827  14EA  085A               	movf	(measure_inductance@Lin+1)^(0+128),w
  8828  14EB  00F7               	movwf	___flge@ff2+1
  8829  14EC  0859               	movf	measure_inductance@Lin^(0+128),w
  8830  14ED  00F6               	movwf	___flge@ff2
  8831  14EE  2679  160A  118A   	fcall	___flge
  8832  14F1  1803               	btfsc	3,0
  8833  14F2  2D6A               	goto	l4331
  8834                           
  8835                           ;measure.c: 216: if(Lin > (999e+06l)) {
  8836  14F3  304E               	movlw	78
  8837  14F4  00F5               	movwf	___flge@ff1+3
  8838  14F5  306E               	movlw	110
  8839  14F6  00F4               	movwf	___flge@ff1+2
  8840  14F7  302E               	movlw	46
  8841  14F8  00F3               	movwf	___flge@ff1+1
  8842  14F9  301F               	movlw	31
  8843  14FA  00F2               	movwf	___flge@ff1
  8844  14FB  1683               	bsf	3,5	;RP0=1, select bank1
  8845  14FC  1303               	bcf	3,6	;RP1=0, select bank1
  8846  14FD  085C               	movf	(measure_inductance@Lin+3)^(0+128),w
  8847  14FE  00F9               	movwf	___flge@ff2+3
  8848  14FF  085B               	movf	(measure_inductance@Lin+2)^(0+128),w
  8849  1500  00F8               	movwf	___flge@ff2+2
  8850  1501  085A               	movf	(measure_inductance@Lin+1)^(0+128),w
  8851  1502  00F7               	movwf	___flge@ff2+1
  8852  1503  0859               	movf	measure_inductance@Lin^(0+128),w
  8853  1504  00F6               	movwf	___flge@ff2
  8854  1505  2679  160A  118A   	fcall	___flge
  8855  1508  1803               	btfsc	3,0
  8856  1509  2D3A               	goto	l4327
  8857                           
  8858                           ;measure.c: 217: Lin = Lin / (1e+09l);
  8859  150A  304E               	movlw	78
  8860  150B  1283               	bcf	3,5	;RP0=0, select bank0
  8861  150C  1303               	bcf	3,6	;RP1=0, select bank0
  8862  150D  00A8               	movwf	___fldiv@f2+3
  8863  150E  306E               	movlw	110
  8864  150F  00A7               	movwf	___fldiv@f2+2
  8865  1510  306B               	movlw	107
  8866  1511  00A6               	movwf	___fldiv@f2+1
  8867  1512  3028               	movlw	40
  8868  1513  00A5               	movwf	___fldiv@f2
  8869  1514  1683               	bsf	3,5	;RP0=1, select bank1
  8870  1515  085C               	movf	(measure_inductance@Lin+3)^(0+128),w
  8871  1516  1283               	bcf	3,5	;RP0=0, select bank0
  8872  1517  00AC               	movwf	___fldiv@f1+3
  8873  1518  1683               	bsf	3,5	;RP0=1, select bank1
  8874  1519  085B               	movf	(measure_inductance@Lin+2)^(0+128),w
  8875  151A  1283               	bcf	3,5	;RP0=0, select bank0
  8876  151B  00AB               	movwf	___fldiv@f1+2
  8877  151C  1683               	bsf	3,5	;RP0=1, select bank1
  8878  151D  085A               	movf	(measure_inductance@Lin+1)^(0+128),w
  8879  151E  1283               	bcf	3,5	;RP0=0, select bank0
  8880  151F  00AA               	movwf	___fldiv@f1+1
  8881  1520  1683               	bsf	3,5	;RP0=1, select bank1
  8882  1521  0859               	movf	measure_inductance@Lin^(0+128),w
  8883  1522  1283               	bcf	3,5	;RP0=0, select bank0
  8884  1523  00A9               	movwf	___fldiv@f1
  8885  1524  120A  158A  24CE  160A  118A  	fcall	___fldiv
  8886  1529  0828               	movf	?___fldiv+3,w
  8887  152A  1683               	bsf	3,5	;RP0=1, select bank1
  8888  152B  00DC               	movwf	(measure_inductance@Lin+3)^(0+128)
  8889  152C  1283               	bcf	3,5	;RP0=0, select bank0
  8890  152D  0827               	movf	?___fldiv+2,w
  8891  152E  1683               	bsf	3,5	;RP0=1, select bank1
  8892  152F  00DB               	movwf	(measure_inductance@Lin+2)^(0+128)
  8893  1530  1283               	bcf	3,5	;RP0=0, select bank0
  8894  1531  0826               	movf	?___fldiv+1,w
  8895  1532  1683               	bsf	3,5	;RP0=1, select bank1
  8896  1533  00DA               	movwf	(measure_inductance@Lin+1)^(0+128)
  8897  1534  1283               	bcf	3,5	;RP0=0, select bank0
  8898  1535  0825               	movf	?___fldiv,w
  8899  1536  1683               	bsf	3,5	;RP0=1, select bank1
  8900  1537  00D9               	movwf	measure_inductance@Lin^(0+128)
  8901                           
  8902                           ;measure.c: 218: unit = 0;
  8903  1538  01CA               	clrf	measure_inductance@unit^(0+128)
  8904                           
  8905                           ;measure.c: 219: } else {
  8906  1539  2D9C               	goto	l4337
  8907  153A                     l4327:	
  8908                           
  8909                           ;measure.c: 220: Lin = Lin / (1e+06l);
  8910  153A  3049               	movlw	73
  8911  153B  1283               	bcf	3,5	;RP0=0, select bank0
  8912  153C  1303               	bcf	3,6	;RP1=0, select bank0
  8913  153D  00A8               	movwf	___fldiv@f2+3
  8914  153E  3074               	movlw	116
  8915  153F  00A7               	movwf	___fldiv@f2+2
  8916  1540  3024               	movlw	36
  8917  1541  00A6               	movwf	___fldiv@f2+1
  8918  1542  01A5               	clrf	___fldiv@f2
  8919  1543  1683               	bsf	3,5	;RP0=1, select bank1
  8920  1544  085C               	movf	(measure_inductance@Lin+3)^(0+128),w
  8921  1545  1283               	bcf	3,5	;RP0=0, select bank0
  8922  1546  00AC               	movwf	___fldiv@f1+3
  8923  1547  1683               	bsf	3,5	;RP0=1, select bank1
  8924  1548  085B               	movf	(measure_inductance@Lin+2)^(0+128),w
  8925  1549  1283               	bcf	3,5	;RP0=0, select bank0
  8926  154A  00AB               	movwf	___fldiv@f1+2
  8927  154B  1683               	bsf	3,5	;RP0=1, select bank1
  8928  154C  085A               	movf	(measure_inductance@Lin+1)^(0+128),w
  8929  154D  1283               	bcf	3,5	;RP0=0, select bank0
  8930  154E  00AA               	movwf	___fldiv@f1+1
  8931  154F  1683               	bsf	3,5	;RP0=1, select bank1
  8932  1550  0859               	movf	measure_inductance@Lin^(0+128),w
  8933  1551  1283               	bcf	3,5	;RP0=0, select bank0
  8934  1552  00A9               	movwf	___fldiv@f1
  8935  1553  120A  158A  24CE  160A  118A  	fcall	___fldiv
  8936  1558  0828               	movf	?___fldiv+3,w
  8937  1559  1683               	bsf	3,5	;RP0=1, select bank1
  8938  155A  00DC               	movwf	(measure_inductance@Lin+3)^(0+128)
  8939  155B  1283               	bcf	3,5	;RP0=0, select bank0
  8940  155C  0827               	movf	?___fldiv+2,w
  8941  155D  1683               	bsf	3,5	;RP0=1, select bank1
  8942  155E  00DB               	movwf	(measure_inductance@Lin+2)^(0+128)
  8943  155F  1283               	bcf	3,5	;RP0=0, select bank0
  8944  1560  0826               	movf	?___fldiv+1,w
  8945  1561  1683               	bsf	3,5	;RP0=1, select bank1
  8946  1562  00DA               	movwf	(measure_inductance@Lin+1)^(0+128)
  8947  1563  1283               	bcf	3,5	;RP0=0, select bank0
  8948  1564  0825               	movf	?___fldiv,w
  8949  1565  1683               	bsf	3,5	;RP0=1, select bank1
  8950  1566  00D9               	movwf	measure_inductance@Lin^(0+128)
  8951                           
  8952                           ;measure.c: 221: unit = 1;
  8953  1567  01CA               	clrf	measure_inductance@unit^(0+128)
  8954  1568  0ACA               	incf	measure_inductance@unit^(0+128),f
  8955  1569  2D9C               	goto	l4337
  8956  156A                     l4331:	
  8957                           
  8958                           ;measure.c: 224: Lin = Lin / 1e+03l;
  8959  156A  3044               	movlw	68
  8960  156B  1283               	bcf	3,5	;RP0=0, select bank0
  8961  156C  1303               	bcf	3,6	;RP1=0, select bank0
  8962  156D  00A8               	movwf	___fldiv@f2+3
  8963  156E  307A               	movlw	122
  8964  156F  00A7               	movwf	___fldiv@f2+2
  8965  1570  01A6               	clrf	___fldiv@f2+1
  8966  1571  01A5               	clrf	___fldiv@f2
  8967  1572  1683               	bsf	3,5	;RP0=1, select bank1
  8968  1573  085C               	movf	(measure_inductance@Lin+3)^(0+128),w
  8969  1574  1283               	bcf	3,5	;RP0=0, select bank0
  8970  1575  00AC               	movwf	___fldiv@f1+3
  8971  1576  1683               	bsf	3,5	;RP0=1, select bank1
  8972  1577  085B               	movf	(measure_inductance@Lin+2)^(0+128),w
  8973  1578  1283               	bcf	3,5	;RP0=0, select bank0
  8974  1579  00AB               	movwf	___fldiv@f1+2
  8975  157A  1683               	bsf	3,5	;RP0=1, select bank1
  8976  157B  085A               	movf	(measure_inductance@Lin+1)^(0+128),w
  8977  157C  1283               	bcf	3,5	;RP0=0, select bank0
  8978  157D  00AA               	movwf	___fldiv@f1+1
  8979  157E  1683               	bsf	3,5	;RP0=1, select bank1
  8980  157F  0859               	movf	measure_inductance@Lin^(0+128),w
  8981  1580  1283               	bcf	3,5	;RP0=0, select bank0
  8982  1581  00A9               	movwf	___fldiv@f1
  8983  1582  120A  158A  24CE  160A  118A  	fcall	___fldiv
  8984  1587  0828               	movf	?___fldiv+3,w
  8985  1588  1683               	bsf	3,5	;RP0=1, select bank1
  8986  1589  00DC               	movwf	(measure_inductance@Lin+3)^(0+128)
  8987  158A  1283               	bcf	3,5	;RP0=0, select bank0
  8988  158B  0827               	movf	?___fldiv+2,w
  8989  158C  1683               	bsf	3,5	;RP0=1, select bank1
  8990  158D  00DB               	movwf	(measure_inductance@Lin+2)^(0+128)
  8991  158E  1283               	bcf	3,5	;RP0=0, select bank0
  8992  158F  0826               	movf	?___fldiv+1,w
  8993  1590  1683               	bsf	3,5	;RP0=1, select bank1
  8994  1591  00DA               	movwf	(measure_inductance@Lin+1)^(0+128)
  8995  1592  1283               	bcf	3,5	;RP0=0, select bank0
  8996  1593  0825               	movf	?___fldiv,w
  8997  1594  1683               	bsf	3,5	;RP0=1, select bank1
  8998  1595  00D9               	movwf	measure_inductance@Lin^(0+128)
  8999                           
  9000                           ;measure.c: 225: unit = 2;
  9001  1596  3002               	movlw	2
  9002  1597  2D9B               	goto	L5
  9003  1598                     l4335:	
  9004                           
  9005                           ;measure.c: 228: unit = 3;
  9006  1598  3003               	movlw	3
  9007  1599  1683               	bsf	3,5	;RP0=1, select bank1
  9008  159A  1303               	bcf	3,6	;RP1=0, select bank1
  9009  159B                     L5:	
  9010  159B  00CA               	movwf	measure_inductance@unit^(0+128)
  9011  159C                     l4337:	
  9012                           
  9013                           ;measure.c: 230: Lin = Lin * 100;
  9014  159C  3042               	movlw	66
  9015  159D  1283               	bcf	3,5	;RP0=0, select bank0
  9016  159E  00BB               	movwf	___flmul@f1+3
  9017  159F  30C8               	movlw	200
  9018  15A0  00BA               	movwf	___flmul@f1+2
  9019  15A1  01B9               	clrf	___flmul@f1+1
  9020  15A2  01B8               	clrf	___flmul@f1
  9021  15A3  1683               	bsf	3,5	;RP0=1, select bank1
  9022  15A4  085C               	movf	(measure_inductance@Lin+3)^(0+128),w
  9023  15A5  1283               	bcf	3,5	;RP0=0, select bank0
  9024  15A6  00BF               	movwf	___flmul@f2+3
  9025  15A7  1683               	bsf	3,5	;RP0=1, select bank1
  9026  15A8  085B               	movf	(measure_inductance@Lin+2)^(0+128),w
  9027  15A9  1283               	bcf	3,5	;RP0=0, select bank0
  9028  15AA  00BE               	movwf	___flmul@f2+2
  9029  15AB  1683               	bsf	3,5	;RP0=1, select bank1
  9030  15AC  085A               	movf	(measure_inductance@Lin+1)^(0+128),w
  9031  15AD  1283               	bcf	3,5	;RP0=0, select bank0
  9032  15AE  00BD               	movwf	___flmul@f2+1
  9033  15AF  1683               	bsf	3,5	;RP0=1, select bank1
  9034  15B0  0859               	movf	measure_inductance@Lin^(0+128),w
  9035  15B1  1283               	bcf	3,5	;RP0=0, select bank0
  9036  15B2  00BC               	movwf	___flmul@f2
  9037  15B3  25E0  160A  118A   	fcall	___flmul
  9038  15B6  083B               	movf	?___flmul+3,w
  9039  15B7  1683               	bsf	3,5	;RP0=1, select bank1
  9040  15B8  00DC               	movwf	(measure_inductance@Lin+3)^(0+128)
  9041  15B9  1283               	bcf	3,5	;RP0=0, select bank0
  9042  15BA  083A               	movf	?___flmul+2,w
  9043  15BB  1683               	bsf	3,5	;RP0=1, select bank1
  9044  15BC  00DB               	movwf	(measure_inductance@Lin+2)^(0+128)
  9045  15BD  1283               	bcf	3,5	;RP0=0, select bank0
  9046  15BE  0839               	movf	?___flmul+1,w
  9047  15BF  1683               	bsf	3,5	;RP0=1, select bank1
  9048  15C0  00DA               	movwf	(measure_inductance@Lin+1)^(0+128)
  9049  15C1  1283               	bcf	3,5	;RP0=0, select bank0
  9050  15C2  0838               	movf	?___flmul,w
  9051  15C3  1683               	bsf	3,5	;RP0=1, select bank1
  9052  15C4  00D9               	movwf	measure_inductance@Lin^(0+128)
  9053                           
  9054                           ;measure.c: 231: var = (unsigned short int)Lin;
  9055  15C5  085C               	movf	(measure_inductance@Lin+3)^(0+128),w
  9056  15C6  00AB               	movwf	(___fltol@f1+3)^(0+128)
  9057  15C7  085B               	movf	(measure_inductance@Lin+2)^(0+128),w
  9058  15C8  00AA               	movwf	(___fltol@f1+2)^(0+128)
  9059  15C9  085A               	movf	(measure_inductance@Lin+1)^(0+128),w
  9060  15CA  00A9               	movwf	(___fltol@f1+1)^(0+128)
  9061  15CB  0859               	movf	measure_inductance@Lin^(0+128),w
  9062  15CC  00A8               	movwf	___fltol@f1^(0+128)
  9063  15CD  27A9               	fcall	___fltol
  9064  15CE  0829               	movf	(?___fltol^(0+128)+1),w
  9065  15CF  00D8               	movwf	(measure_inductance@var+1)^(0+128)
  9066  15D0  0828               	movf	?___fltol^(0+128),w
  9067  15D1  00D7               	movwf	measure_inductance@var^(0+128)
  9068                           
  9069                           ;measure.c: 233: print_reading(var);
  9070  15D2  0858               	movf	(measure_inductance@var+1)^(0+128),w
  9071  15D3  1283               	bcf	3,5	;RP0=0, select bank0
  9072  15D4  00CB               	movwf	print_reading@measurement+1
  9073  15D5  1683               	bsf	3,5	;RP0=1, select bank1
  9074  15D6  0857               	movf	measure_inductance@var^(0+128),w
  9075  15D7  1283               	bcf	3,5	;RP0=0, select bank0
  9076  15D8  00CA               	movwf	print_reading@measurement
  9077  15D9  120A  158A  273F   	fcall	_print_reading
  9078                           
  9079                           ;measure.c: 234: print_unit(unit);
  9080  15DC  1683               	bsf	3,5	;RP0=1, select bank1
  9081  15DD  120A  118A  2A27   	ljmp	l3969
  9082  15E0                     __end_of_measure_inductance:	
  9083  15E0                     __ptext28:	
  9084 ;; *************** function ___flmul *****************
  9085 ;; Defined at:
  9086 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\flmul.c"
  9087 ;; Parameters:    Size  Location     Type
  9088 ;;  f1              4   23[BANK0 ] int 
  9089 ;;  f2              4   27[BANK0 ] int 
  9090 ;; Auto vars:     Size  Location     Type
  9091 ;;  f3_as_produc    4   36[BANK0 ] unsigned long 
  9092 ;;  sign            1   41[BANK0 ] unsigned char 
  9093 ;;  cntr            1   40[BANK0 ] unsigned char 
  9094 ;;  exp             1   35[BANK0 ] unsigned char 
  9095 ;; Return value:  Size  Location     Type
  9096 ;;                  4   23[BANK0 ] unsigned char 
  9097 ;; Registers used:
  9098 ;;		wreg, status,2, status,0, pclath, cstack
  9099 ;; Tracked objects:
  9100 ;;		On entry : 300/0
  9101 ;;		On exit  : 300/0
  9102 ;;		Unchanged: 0/0
  9103 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9104 ;;      Params:         0       8       0       0       0
  9105 ;;      Locals:         0       7       0       0       0
  9106 ;;      Temps:          0       4       0       0       0
  9107 ;;      Totals:         0      19       0       0       0
  9108 ;;Total ram usage:       19 bytes
  9109 ;; Hardware stack levels used:    1
  9110 ;; Hardware stack levels required when called:    2
  9111 ;; This function calls:
  9112 ;;		___flpack
  9113 ;; This function is called by:
  9114 ;;		_format_double
  9115 ;;		_measure_capacitance
  9116 ;;		_measure_inductance
  9117 ;;		_log
  9118 ;;		_log10
  9119 ;;		_pow
  9120 ;;		_eval_poly
  9121 ;;		_exp
  9122 ;; This function uses a non-reentrant model
  9123 ;;
  9124                           
  9125                           
  9126                           ;psect for function ___flmul
  9127  15E0                     ___flmul:	
  9128                           
  9129                           ;incstack = 0
  9130                           ; Regs used in ___flmul: [wreg+status,2+status,0+pclath+cstack]
  9131  15E0  0838               	movf	___flmul@f1,w
  9132  15E1  00C0               	movwf	??___flmul
  9133  15E2  0839               	movf	___flmul@f1+1,w
  9134  15E3  00C1               	movwf	??___flmul+1
  9135  15E4  083A               	movf	___flmul@f1+2,w
  9136  15E5  00C2               	movwf	??___flmul+2
  9137  15E6  083B               	movf	___flmul@f1+3,w
  9138  15E7  00C3               	movwf	??___flmul+3
  9139  15E8  1003               	clrc
  9140  15E9  0D42               	rlf	??___flmul+2,w
  9141  15EA  0D43               	rlf	??___flmul+3,w
  9142  15EB  00C4               	movwf	___flmul@exp
  9143  15EC  0844               	movf	___flmul@exp,w
  9144  15ED  1D03               	btfss	3,2
  9145  15EE  2DF4               	goto	l3619
  9146  15EF  01B8               	clrf	?___flmul
  9147  15F0  01B9               	clrf	?___flmul+1
  9148  15F1  01BA               	clrf	?___flmul+2
  9149  15F2  01BB               	clrf	?___flmul+3
  9150  15F3  0008               	return
  9151  15F4                     l3619:	
  9152  15F4  083C               	movf	___flmul@f2,w
  9153  15F5  00C0               	movwf	??___flmul
  9154  15F6  083D               	movf	___flmul@f2+1,w
  9155  15F7  00C1               	movwf	??___flmul+1
  9156  15F8  083E               	movf	___flmul@f2+2,w
  9157  15F9  00C2               	movwf	??___flmul+2
  9158  15FA  083F               	movf	___flmul@f2+3,w
  9159  15FB  00C3               	movwf	??___flmul+3
  9160  15FC  1003               	clrc
  9161  15FD  0D42               	rlf	??___flmul+2,w
  9162  15FE  0D43               	rlf	??___flmul+3,w
  9163  15FF  00CA               	movwf	___flmul@sign
  9164  1600  084A               	movf	___flmul@sign,w
  9165  1601  1D03               	btfss	3,2
  9166  1602  2E08               	goto	l3623
  9167  1603  01B8               	clrf	?___flmul
  9168  1604  01B9               	clrf	?___flmul+1
  9169  1605  01BA               	clrf	?___flmul+2
  9170  1606  01BB               	clrf	?___flmul+3
  9171  1607  0008               	return
  9172  1608                     l3623:	
  9173  1608  084A               	movf	___flmul@sign,w
  9174  1609  3E7B               	addlw	123
  9175  160A  07C4               	addwf	___flmul@exp,f
  9176  160B  083B               	movf	___flmul@f1+3,w
  9177  160C  00CA               	movwf	___flmul@sign
  9178  160D  083F               	movf	___flmul@f2+3,w
  9179  160E  06CA               	xorwf	___flmul@sign,f
  9180  160F  3080               	movlw	128
  9181  1610  05CA               	andwf	___flmul@sign,f
  9182  1611  3007               	movlw	7
  9183  1612  17BA               	bsf	___flmul@f1+2,7
  9184  1613  17BE               	bsf	___flmul@f2+2,7
  9185  1614  01BF               	clrf	___flmul@f2+3
  9186  1615  01C5               	clrf	___flmul@f3_as_product
  9187  1616  01C6               	clrf	___flmul@f3_as_product+1
  9188  1617  01C7               	clrf	___flmul@f3_as_product+2
  9189  1618  01C8               	clrf	___flmul@f3_as_product+3
  9190  1619  00C9               	movwf	___flmul@cntr
  9191  161A                     l3641:	
  9192  161A  1C38               	btfss	___flmul@f1,0
  9193  161B  2E30               	goto	l3645
  9194  161C  083C               	movf	___flmul@f2,w
  9195  161D  07C5               	addwf	___flmul@f3_as_product,f
  9196  161E  083D               	movf	___flmul@f2+1,w
  9197  161F  1103               	clrz
  9198  1620  1803               	skipnc
  9199  1621  3E01               	addlw	1
  9200  1622  1D03               	btfss	3,2
  9201  1623  07C6               	addwf	___flmul@f3_as_product+1,f
  9202  1624  083E               	movf	___flmul@f2+2,w
  9203  1625  1103               	clrz
  9204  1626  1803               	skipnc
  9205  1627  3E01               	addlw	1
  9206  1628  1D03               	btfss	3,2
  9207  1629  07C7               	addwf	___flmul@f3_as_product+2,f
  9208  162A  083F               	movf	___flmul@f2+3,w
  9209  162B  1103               	clrz
  9210  162C  1803               	skipnc
  9211  162D  3E01               	addlw	1
  9212  162E  1D03               	btfss	3,2
  9213  162F  07C8               	addwf	___flmul@f3_as_product+3,f
  9214  1630                     l3645:	
  9215  1630  1003               	clrc
  9216  1631  0CBB               	rrf	___flmul@f1+3,f
  9217  1632  0CBA               	rrf	___flmul@f1+2,f
  9218  1633  0CB9               	rrf	___flmul@f1+1,f
  9219  1634  0CB8               	rrf	___flmul@f1,f
  9220  1635  1003               	clrc
  9221  1636  0DBC               	rlf	___flmul@f2,f
  9222  1637  0DBD               	rlf	___flmul@f2+1,f
  9223  1638  0DBE               	rlf	___flmul@f2+2,f
  9224  1639  0DBF               	rlf	___flmul@f2+3,f
  9225  163A  0BC9               	decfsz	___flmul@cntr,f
  9226  163B  2E1A               	goto	l3641
  9227  163C  3011               	movlw	17
  9228  163D  00C9               	movwf	___flmul@cntr
  9229  163E                     l3653:	
  9230  163E  1C38               	btfss	___flmul@f1,0
  9231  163F  2E54               	goto	l3657
  9232  1640  083C               	movf	___flmul@f2,w
  9233  1641  07C5               	addwf	___flmul@f3_as_product,f
  9234  1642  083D               	movf	___flmul@f2+1,w
  9235  1643  1103               	clrz
  9236  1644  1803               	skipnc
  9237  1645  3E01               	addlw	1
  9238  1646  1D03               	btfss	3,2
  9239  1647  07C6               	addwf	___flmul@f3_as_product+1,f
  9240  1648  083E               	movf	___flmul@f2+2,w
  9241  1649  1103               	clrz
  9242  164A  1803               	skipnc
  9243  164B  3E01               	addlw	1
  9244  164C  1D03               	btfss	3,2
  9245  164D  07C7               	addwf	___flmul@f3_as_product+2,f
  9246  164E  083F               	movf	___flmul@f2+3,w
  9247  164F  1103               	clrz
  9248  1650  1803               	skipnc
  9249  1651  3E01               	addlw	1
  9250  1652  1D03               	btfss	3,2
  9251  1653  07C8               	addwf	___flmul@f3_as_product+3,f
  9252  1654                     l3657:	
  9253  1654  1003               	clrc
  9254  1655  0CBB               	rrf	___flmul@f1+3,f
  9255  1656  0CBA               	rrf	___flmul@f1+2,f
  9256  1657  0CB9               	rrf	___flmul@f1+1,f
  9257  1658  0CB8               	rrf	___flmul@f1,f
  9258  1659  1003               	clrc
  9259  165A  0CC8               	rrf	___flmul@f3_as_product+3,f
  9260  165B  0CC7               	rrf	___flmul@f3_as_product+2,f
  9261  165C  0CC6               	rrf	___flmul@f3_as_product+1,f
  9262  165D  0CC5               	rrf	___flmul@f3_as_product,f
  9263  165E  0BC9               	decfsz	___flmul@cntr,f
  9264  165F  2E3E               	goto	l3653
  9265  1660  0848               	movf	___flmul@f3_as_product+3,w
  9266  1661  00F5               	movwf	___flpack@arg+3
  9267  1662  0847               	movf	___flmul@f3_as_product+2,w
  9268  1663  00F4               	movwf	___flpack@arg+2
  9269  1664  0846               	movf	___flmul@f3_as_product+1,w
  9270  1665  00F3               	movwf	___flpack@arg+1
  9271  1666  0845               	movf	___flmul@f3_as_product,w
  9272  1667  00F2               	movwf	___flpack@arg
  9273  1668  0844               	movf	___flmul@exp,w
  9274  1669  00F6               	movwf	___flpack@exp
  9275  166A  084A               	movf	___flmul@sign,w
  9276  166B  00F7               	movwf	___flpack@sign
  9277  166C  120A  158A  255C   	fcall	___flpack
  9278  166F  0875               	movf	?___flpack+3,w
  9279  1670  1283               	bcf	3,5	;RP0=0, select bank0
  9280  1671  00BB               	movwf	?___flmul+3
  9281  1672  0874               	movf	?___flpack+2,w
  9282  1673  00BA               	movwf	?___flmul+2
  9283  1674  0873               	movf	?___flpack+1,w
  9284  1675  00B9               	movwf	?___flmul+1
  9285  1676  0872               	movf	?___flpack,w
  9286  1677  00B8               	movwf	?___flmul
  9287  1678  0008               	return
  9288  1679                     __end_of___flmul:	
  9289  1679                     __ptext30:	
  9290 ;; *************** function ___flge *****************
  9291 ;; Defined at:
  9292 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\flge.c"
  9293 ;; Parameters:    Size  Location     Type
  9294 ;;  ff1             4    2[COMMON] unsigned char 
  9295 ;;  ff2             4    6[COMMON] unsigned char 
  9296 ;; Auto vars:     Size  Location     Type
  9297 ;;		None
  9298 ;; Return value:  Size  Location     Type
  9299 ;;		None               void
  9300 ;; Registers used:
  9301 ;;		wreg, status,2, status,0
  9302 ;; Tracked objects:
  9303 ;;		On entry : 0/100
  9304 ;;		On exit  : 0/0
  9305 ;;		Unchanged: 0/0
  9306 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9307 ;;      Params:         8       0       0       0       0
  9308 ;;      Locals:         0       0       0       0       0
  9309 ;;      Temps:          0       4       0       0       0
  9310 ;;      Totals:         8       4       0       0       0
  9311 ;;Total ram usage:       12 bytes
  9312 ;; Hardware stack levels used:    1
  9313 ;; Hardware stack levels required when called:    1
  9314 ;; This function calls:
  9315 ;;		Nothing
  9316 ;; This function is called by:
  9317 ;;		_format_double
  9318 ;;		_measure_capacitance
  9319 ;;		_measure_inductance
  9320 ;;		_floor
  9321 ;;		_ldexp
  9322 ;;		_log
  9323 ;;		_pow
  9324 ;;		_exp
  9325 ;; This function uses a non-reentrant model
  9326 ;;
  9327                           
  9328                           
  9329                           ;psect for function ___flge
  9330  1679                     ___flge:	
  9331                           
  9332                           ;incstack = 0
  9333                           ; Regs used in ___flge: [wreg+status,2+status,0]
  9334  1679  1FF5               	btfss	___flge@ff1+3,7
  9335  167A  2E98               	goto	l2451
  9336  167B  1283               	bcf	3,5	;RP0=0, select bank0
  9337  167C  1303               	bcf	3,6	;RP1=0, select bank0
  9338  167D  3080               	movlw	128
  9339  167E  01A1               	clrf	??___flge
  9340  167F  01A2               	clrf	??___flge+1
  9341  1680  01A3               	clrf	??___flge+2
  9342  1681  00A4               	movwf	??___flge+3
  9343  1682  0872               	movf	___flge@ff1,w
  9344  1683  02A1               	subwf	??___flge,f
  9345  1684  0873               	movf	___flge@ff1+1,w
  9346  1685  1C03               	skipc
  9347  1686  0F73               	incfsz	___flge@ff1+1,w
  9348  1687  02A2               	subwf	??___flge+1,f
  9349  1688  0874               	movf	___flge@ff1+2,w
  9350  1689  1C03               	skipc
  9351  168A  0F74               	incfsz	___flge@ff1+2,w
  9352  168B  02A3               	subwf	??___flge+2,f
  9353  168C  0875               	movf	___flge@ff1+3,w
  9354  168D  1C03               	skipc
  9355  168E  0F75               	incfsz	___flge@ff1+3,w
  9356  168F  02A4               	subwf	??___flge+3,f
  9357  1690  0824               	movf	??___flge+3,w
  9358  1691  00F5               	movwf	___flge@ff1+3
  9359  1692  0823               	movf	??___flge+2,w
  9360  1693  00F4               	movwf	___flge@ff1+2
  9361  1694  0822               	movf	??___flge+1,w
  9362  1695  00F3               	movwf	___flge@ff1+1
  9363  1696  0821               	movf	??___flge,w
  9364  1697  00F2               	movwf	___flge@ff1
  9365  1698                     l2451:	
  9366  1698  1FF9               	btfss	___flge@ff2+3,7
  9367  1699  2EB7               	goto	l878
  9368  169A  1283               	bcf	3,5	;RP0=0, select bank0
  9369  169B  1303               	bcf	3,6	;RP1=0, select bank0
  9370  169C  3080               	movlw	128
  9371  169D  01A1               	clrf	??___flge
  9372  169E  01A2               	clrf	??___flge+1
  9373  169F  01A3               	clrf	??___flge+2
  9374  16A0  00A4               	movwf	??___flge+3
  9375  16A1  0876               	movf	___flge@ff2,w
  9376  16A2  02A1               	subwf	??___flge,f
  9377  16A3  0877               	movf	___flge@ff2+1,w
  9378  16A4  1C03               	skipc
  9379  16A5  0F77               	incfsz	___flge@ff2+1,w
  9380  16A6  02A2               	subwf	??___flge+1,f
  9381  16A7  0878               	movf	___flge@ff2+2,w
  9382  16A8  1C03               	skipc
  9383  16A9  0F78               	incfsz	___flge@ff2+2,w
  9384  16AA  02A3               	subwf	??___flge+2,f
  9385  16AB  0879               	movf	___flge@ff2+3,w
  9386  16AC  1C03               	skipc
  9387  16AD  0F79               	incfsz	___flge@ff2+3,w
  9388  16AE  02A4               	subwf	??___flge+3,f
  9389  16AF  0824               	movf	??___flge+3,w
  9390  16B0  00F9               	movwf	___flge@ff2+3
  9391  16B1  0823               	movf	??___flge+2,w
  9392  16B2  00F8               	movwf	___flge@ff2+2
  9393  16B3  0822               	movf	??___flge+1,w
  9394  16B4  00F7               	movwf	___flge@ff2+1
  9395  16B5  0821               	movf	??___flge,w
  9396  16B6  00F6               	movwf	___flge@ff2
  9397  16B7                     l878:	
  9398  16B7  3080               	movlw	128
  9399  16B8  06F5               	xorwf	___flge@ff1+3,f
  9400  16B9  06F9               	xorwf	___flge@ff2+3,f
  9401  16BA  0879               	movf	___flge@ff2+3,w
  9402  16BB  0275               	subwf	___flge@ff1+3,w
  9403  16BC  1D03               	skipz
  9404  16BD  0008               	return
  9405  16BE  0878               	movf	___flge@ff2+2,w
  9406  16BF  0274               	subwf	___flge@ff1+2,w
  9407  16C0  1D03               	skipz
  9408  16C1  0008               	return
  9409  16C2  0877               	movf	___flge@ff2+1,w
  9410  16C3  0273               	subwf	___flge@ff1+1,w
  9411  16C4  1D03               	skipz
  9412  16C5  0008               	return
  9413  16C6  0876               	movf	___flge@ff2,w
  9414  16C7  0272               	subwf	___flge@ff1,w
  9415  16C8  0008               	return
  9416  16C9                     __end_of___flge:	
  9417  16C9                     __ptext35:	
  9418 ;; *************** function _measure_freq *****************
  9419 ;; Defined at:
  9420 ;;		line 71 in file "../../../lib/../src/measure.c"
  9421 ;; Parameters:    Size  Location     Type
  9422 ;;		None
  9423 ;; Auto vars:     Size  Location     Type
  9424 ;;  count           2   45[BANK0 ] unsigned short 
  9425 ;; Return value:  Size  Location     Type
  9426 ;;                  2   41[BANK0 ] unsigned short 
  9427 ;; Registers used:
  9428 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  9429 ;; Tracked objects:
  9430 ;;		On entry : 0/0
  9431 ;;		On exit  : 300/0
  9432 ;;		Unchanged: 0/0
  9433 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9434 ;;      Params:         0       2       0       0       0
  9435 ;;      Locals:         0       2       0       0       0
  9436 ;;      Temps:          0       2       0       0       0
  9437 ;;      Totals:         0       6       0       0       0
  9438 ;;Total ram usage:        6 bytes
  9439 ;; Hardware stack levels used:    1
  9440 ;; Hardware stack levels required when called:    6
  9441 ;; This function calls:
  9442 ;;		_format_number
  9443 ;;		_lcd_gotoxy
  9444 ;;		_put_str
  9445 ;;		_timer0_read_ps
  9446 ;; This function is called by:
  9447 ;;		_calibrate
  9448 ;;		_measure_capacitance
  9449 ;;		_measure_inductance
  9450 ;; This function uses a non-reentrant model
  9451 ;;
  9452                           
  9453                           
  9454                           ;psect for function _measure_freq
  9455  16C9                     _measure_freq:	
  9456                           
  9457                           ;measure.c: 72: unsigned short int count;
  9458                           ;measure.c: 74: TMR0IF = 0;
  9459                           
  9460                           ;incstack = 0
  9461                           ; Regs used in _measure_freq: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  9462  16C9  110B               	bcf	11,2	;volatile
  9463                           
  9464                           ;measure.c: 78: TRISA &= ~0b00010000;
  9465  16CA  1683               	bsf	3,5	;RP0=1, select bank1
  9466  16CB  1303               	bcf	3,6	;RP1=0, select bank1
  9467  16CC  1205               	bcf	5,4	;volatile
  9468                           
  9469                           ;measure.c: 80: _delay((unsigned long)((20)*(20000000/4000.0)));
  9470  16CD  3082               	movlw	130
  9471  16CE  1283               	bcf	3,5	;RP0=0, select bank0
  9472  16CF  00CD               	movwf	??_measure_freq+1
  9473  16D0  30DD               	movlw	221
  9474  16D1  00CC               	movwf	??_measure_freq
  9475  16D2                     u4177:	
  9476  16D2  0BCC               	decfsz	??_measure_freq,f
  9477  16D3  2ED2               	goto	u4177
  9478  16D4  0BCD               	decfsz	??_measure_freq+1,f
  9479  16D5  2ED2               	goto	u4177
  9480  16D6  2ED7               	nop2
  9481                           
  9482                           ;measure.c: 83: TMR0 = 0x00;
  9483  16D7  1283               	bcf	3,5	;RP0=0, select bank0
  9484  16D8  1303               	bcf	3,6	;RP1=0, select bank0
  9485  16D9  0181               	clrf	1	;volatile
  9486                           
  9487                           ;measure.c: 85: RC3 = ((1) == 0);
  9488  16DA  1187               	bcf	7,3	;volatile
  9489                           
  9490                           ;measure.c: 88: _delay((unsigned long)((10)*(20000000/4000.0))); _delay((unsigned long)(
      +                          (10)*(20000000/4000.0))); _delay((unsigned long)((10)*(20000000/4000.0))); _delay((unsig
      +                          ned long)((10)*(20000000/4000.0))); _delay((unsigned long)((10)*(20000000/4000.0)));
  9491  16DB  3041               	movlw	65
  9492  16DC  00CD               	movwf	??_measure_freq+1
  9493  16DD  30EE               	movlw	238
  9494  16DE  00CC               	movwf	??_measure_freq
  9495  16DF                     u4187:	
  9496  16DF  0BCC               	decfsz	??_measure_freq,f
  9497  16E0  2EDF               	goto	u4187
  9498  16E1  0BCD               	decfsz	??_measure_freq+1,f
  9499  16E2  2EDF               	goto	u4187
  9500  16E3  0000               	nop
  9501  16E4  3041               	movlw	65
  9502  16E5  1283               	bcf	3,5	;RP0=0, select bank0
  9503  16E6  1303               	bcf	3,6	;RP1=0, select bank0
  9504  16E7  00CD               	movwf	??_measure_freq+1
  9505  16E8  30EE               	movlw	238
  9506  16E9  00CC               	movwf	??_measure_freq
  9507  16EA                     u4197:	
  9508  16EA  0BCC               	decfsz	??_measure_freq,f
  9509  16EB  2EEA               	goto	u4197
  9510  16EC  0BCD               	decfsz	??_measure_freq+1,f
  9511  16ED  2EEA               	goto	u4197
  9512  16EE  0000               	nop
  9513  16EF  3041               	movlw	65
  9514  16F0  1283               	bcf	3,5	;RP0=0, select bank0
  9515  16F1  1303               	bcf	3,6	;RP1=0, select bank0
  9516  16F2  00CD               	movwf	??_measure_freq+1
  9517  16F3  30EE               	movlw	238
  9518  16F4  00CC               	movwf	??_measure_freq
  9519  16F5                     u4207:	
  9520  16F5  0BCC               	decfsz	??_measure_freq,f
  9521  16F6  2EF5               	goto	u4207
  9522  16F7  0BCD               	decfsz	??_measure_freq+1,f
  9523  16F8  2EF5               	goto	u4207
  9524  16F9  0000               	nop
  9525  16FA  3041               	movlw	65
  9526  16FB  1283               	bcf	3,5	;RP0=0, select bank0
  9527  16FC  1303               	bcf	3,6	;RP1=0, select bank0
  9528  16FD  00CD               	movwf	??_measure_freq+1
  9529  16FE  30EE               	movlw	238
  9530  16FF  00CC               	movwf	??_measure_freq
  9531  1700                     u4217:	
  9532  1700  0BCC               	decfsz	??_measure_freq,f
  9533  1701  2F00               	goto	u4217
  9534  1702  0BCD               	decfsz	??_measure_freq+1,f
  9535  1703  2F00               	goto	u4217
  9536  1704  0000               	nop
  9537  1705  3041               	movlw	65
  9538  1706  1283               	bcf	3,5	;RP0=0, select bank0
  9539  1707  1303               	bcf	3,6	;RP1=0, select bank0
  9540  1708  00CD               	movwf	??_measure_freq+1
  9541  1709  30EE               	movlw	238
  9542  170A  00CC               	movwf	??_measure_freq
  9543  170B                     u4227:	
  9544  170B  0BCC               	decfsz	??_measure_freq,f
  9545  170C  2F0B               	goto	u4227
  9546  170D  0BCD               	decfsz	??_measure_freq+1,f
  9547  170E  2F0B               	goto	u4227
  9548  170F  0000               	nop
  9549                           
  9550                           ;measure.c: 89: _delay((unsigned long)((10)*(20000000/4000.0))); _delay((unsigned long)(
      +                          (10)*(20000000/4000.0))); _delay((unsigned long)((10)*(20000000/4000.0))); _delay((unsig
      +                          ned long)((10)*(20000000/4000.0))); _delay((unsigned long)((10)*(20000000/4000.0)));
  9551  1710  3041               	movlw	65
  9552  1711  1283               	bcf	3,5	;RP0=0, select bank0
  9553  1712  1303               	bcf	3,6	;RP1=0, select bank0
  9554  1713  00CD               	movwf	??_measure_freq+1
  9555  1714  30EE               	movlw	238
  9556  1715  00CC               	movwf	??_measure_freq
  9557  1716                     u4237:	
  9558  1716  0BCC               	decfsz	??_measure_freq,f
  9559  1717  2F16               	goto	u4237
  9560  1718  0BCD               	decfsz	??_measure_freq+1,f
  9561  1719  2F16               	goto	u4237
  9562  171A  0000               	nop
  9563  171B  3041               	movlw	65
  9564  171C  1283               	bcf	3,5	;RP0=0, select bank0
  9565  171D  1303               	bcf	3,6	;RP1=0, select bank0
  9566  171E  00CD               	movwf	??_measure_freq+1
  9567  171F  30EE               	movlw	238
  9568  1720  00CC               	movwf	??_measure_freq
  9569  1721                     u4247:	
  9570  1721  0BCC               	decfsz	??_measure_freq,f
  9571  1722  2F21               	goto	u4247
  9572  1723  0BCD               	decfsz	??_measure_freq+1,f
  9573  1724  2F21               	goto	u4247
  9574  1725  0000               	nop
  9575  1726  3041               	movlw	65
  9576  1727  1283               	bcf	3,5	;RP0=0, select bank0
  9577  1728  1303               	bcf	3,6	;RP1=0, select bank0
  9578  1729  00CD               	movwf	??_measure_freq+1
  9579  172A  30EE               	movlw	238
  9580  172B  00CC               	movwf	??_measure_freq
  9581  172C                     u4257:	
  9582  172C  0BCC               	decfsz	??_measure_freq,f
  9583  172D  2F2C               	goto	u4257
  9584  172E  0BCD               	decfsz	??_measure_freq+1,f
  9585  172F  2F2C               	goto	u4257
  9586  1730  0000               	nop
  9587  1731  3041               	movlw	65
  9588  1732  1283               	bcf	3,5	;RP0=0, select bank0
  9589  1733  1303               	bcf	3,6	;RP1=0, select bank0
  9590  1734  00CD               	movwf	??_measure_freq+1
  9591  1735  30EE               	movlw	238
  9592  1736  00CC               	movwf	??_measure_freq
  9593  1737                     u4267:	
  9594  1737  0BCC               	decfsz	??_measure_freq,f
  9595  1738  2F37               	goto	u4267
  9596  1739  0BCD               	decfsz	??_measure_freq+1,f
  9597  173A  2F37               	goto	u4267
  9598  173B  0000               	nop
  9599  173C  3041               	movlw	65
  9600  173D  1283               	bcf	3,5	;RP0=0, select bank0
  9601  173E  1303               	bcf	3,6	;RP1=0, select bank0
  9602  173F  00CD               	movwf	??_measure_freq+1
  9603  1740  30EE               	movlw	238
  9604  1741  00CC               	movwf	??_measure_freq
  9605  1742                     u4277:	
  9606  1742  0BCC               	decfsz	??_measure_freq,f
  9607  1743  2F42               	goto	u4277
  9608  1744  0BCD               	decfsz	??_measure_freq+1,f
  9609  1745  2F42               	goto	u4277
  9610  1746  0000               	nop
  9611                           
  9612                           ;measure.c: 91: RC3 = ((0) == 0);
  9613  1747  1283               	bcf	3,5	;RP0=0, select bank0
  9614  1748  1303               	bcf	3,6	;RP1=0, select bank0
  9615  1749  1587               	bsf	7,3	;volatile
  9616                           
  9617                           ;measure.c: 94: TRISA |= 0b00010000;
  9618  174A  1683               	bsf	3,5	;RP0=1, select bank1
  9619  174B  1605               	bsf	5,4	;volatile
  9620                           
  9621                           ;measure.c: 97: count = timer0_read_ps();
  9622  174C  276F               	fcall	_timer0_read_ps
  9623  174D  0873               	movf	?_timer0_read_ps+1,w
  9624  174E  00CF               	movwf	measure_freq@count+1
  9625  174F  0872               	movf	?_timer0_read_ps,w
  9626  1750  00CE               	movwf	measure_freq@count
  9627  1751  3000               	movlw	0
  9628                           
  9629                           ;measure.c: 100: lcd_gotoxy(0, 1);
  9630  1752  01F7               	clrf	lcd_gotoxy@row
  9631  1753  0AF7               	incf	lcd_gotoxy@row,f
  9632  1754  120A  158A  25AC  160A  118A  	fcall	_lcd_gotoxy
  9633                           
  9634                           ;measure.c: 101: put_str("Freq=");
  9635  1759  3090               	movlw	(low ((STR_23-__stringbase)| (0+32768)))& (0+255)
  9636  175A  120A  158A  25DD  160A  118A  	fcall	_put_str
  9637                           
  9638                           ;measure.c: 102: format_number( count, 10, 5);
  9639  175F  084F               	movf	measure_freq@count+1,w
  9640  1760  00A2               	movwf	format_number@n+1
  9641  1761  084E               	movf	measure_freq@count,w
  9642  1762  00A1               	movwf	format_number@n
  9643  1763  300A               	movlw	10
  9644  1764  00A3               	movwf	format_number@base
  9645  1765  3005               	movlw	5
  9646  1766  00A4               	movwf	format_number@pad
  9647  1767  120A  158A  277D   	fcall	_format_number
  9648                           
  9649                           ;measure.c: 105: return count;
  9650  176A  084F               	movf	measure_freq@count+1,w
  9651  176B  00CB               	movwf	?_measure_freq+1
  9652  176C  084E               	movf	measure_freq@count,w
  9653  176D  00CA               	movwf	?_measure_freq
  9654  176E  0008               	return
  9655  176F                     __end_of_measure_freq:	
  9656  176F                     __ptext36:	
  9657 ;; *************** function _timer0_read_ps *****************
  9658 ;; Defined at:
  9659 ;;		line 45 in file "../../../lib/timer.c"
  9660 ;; Parameters:    Size  Location     Type
  9661 ;;		None
  9662 ;; Auto vars:     Size  Location     Type
  9663 ;;  count           2    1[BANK0 ] unsigned short 
  9664 ;;  prev            1    0[BANK0 ] unsigned char 
  9665 ;; Return value:  Size  Location     Type
  9666 ;;                  2    2[COMMON] unsigned short 
  9667 ;; Registers used:
  9668 ;;		wreg, status,2, status,0, btemp+1
  9669 ;; Tracked objects:
  9670 ;;		On entry : 300/100
  9671 ;;		On exit  : 300/0
  9672 ;;		Unchanged: 0/0
  9673 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9674 ;;      Params:         2       0       0       0       0
  9675 ;;      Locals:         0       3       0       0       0
  9676 ;;      Temps:          4       0       0       0       0
  9677 ;;      Totals:         6       3       0       0       0
  9678 ;;Total ram usage:        9 bytes
  9679 ;; Hardware stack levels used:    1
  9680 ;; Hardware stack levels required when called:    1
  9681 ;; This function calls:
  9682 ;;		Nothing
  9683 ;; This function is called by:
  9684 ;;		_measure_freq
  9685 ;; This function uses a non-reentrant model
  9686 ;;
  9687                           
  9688                           
  9689                           ;psect for function _timer0_read_ps
  9690  176F                     _timer0_read_ps:	
  9691                           
  9692                           ;timer.c: 46: unsigned char prev = TMR0;
  9693                           
  9694                           ;incstack = 0
  9695                           ; Regs used in _timer0_read_ps: [wreg+status,2+status,0+btemp+1]
  9696  176F  1283               	bcf	3,5	;RP0=0, select bank0
  9697  1770  0801               	movf	1,w	;volatile
  9698  1771  00A1               	movwf	timer0_read_ps@prev
  9699                           
  9700                           ;timer.c: 47: unsigned short int count = 0;
  9701  1772  01A2               	clrf	timer0_read_ps@count
  9702  1773  01A3               	clrf	timer0_read_ps@count+1
  9703                           
  9704                           ;timer.c: 49: OPTION_REG |= 0x20;
  9705  1774  1683               	bsf	3,5	;RP0=1, select bank1
  9706  1775  1681               	bsf	1,5	;volatile
  9707  1776  2F7E               	goto	l3873
  9708  1777                     l3889:	
  9709  1777  3001               	movlw	1
  9710  1778  0223               	subwf	timer0_read_ps@count+1,w
  9711  1779  3000               	movlw	0
  9712  177A  1903               	skipnz
  9713  177B  0222               	subwf	timer0_read_ps@count,w
  9714  177C  1803               	btfsc	3,0
  9715  177D  2F90               	goto	l3891
  9716  177E                     l3873:	
  9717                           
  9718                           ;timer.c: 53: OPTION_REG |= 0x10;
  9719  177E  1683               	bsf	3,5	;RP0=1, select bank1
  9720  177F  1601               	bsf	1,4	;volatile
  9721                           
  9722                           ;timer.c: 55: __nop();
  9723  1780  0000               	nop
  9724                           
  9725                           ;timer.c: 56: __nop();
  9726  1781  0000               	nop
  9727                           
  9728                           ;timer.c: 58: OPTION_REG &= ~0x10;
  9729  1782  1683               	bsf	3,5	;RP0=1, select bank1
  9730  1783  1303               	bcf	3,6	;RP1=0, select bank1
  9731  1784  1201               	bcf	1,4	;volatile
  9732                           
  9733                           ;timer.c: 60: __nop();
  9734  1785  0000               	nop
  9735                           
  9736                           ;timer.c: 61: __nop();
  9737  1786  0000               	nop
  9738                           
  9739                           ;timer.c: 63: ++count;
  9740  1787  1283               	bcf	3,5	;RP0=0, select bank0
  9741  1788  1303               	bcf	3,6	;RP1=0, select bank0
  9742  1789  0AA2               	incf	timer0_read_ps@count,f
  9743  178A  1903               	skipnz
  9744  178B  0AA3               	incf	timer0_read_ps@count+1,f
  9745                           
  9746                           ;timer.c: 66: } while(prev == TMR0 && count <= 255);
  9747  178C  0821               	movf	timer0_read_ps@prev,w
  9748  178D  0601               	xorwf	1,w	;volatile
  9749  178E  1903               	btfsc	3,2
  9750  178F  2F77               	goto	l3889
  9751  1790                     l3891:	
  9752                           
  9753                           ;timer.c: 68: count = ((prev << 8) + (256 - count));
  9754  1790  0821               	movf	timer0_read_ps@prev,w
  9755  1791  00F4               	movwf	??_timer0_read_ps
  9756  1792  01F5               	clrf	??_timer0_read_ps+1
  9757  1793  00F5               	movwf	??_timer0_read_ps+1
  9758  1794  01F4               	clrf	??_timer0_read_ps
  9759  1795  0822               	movf	timer0_read_ps@count,w
  9760  1796  0274               	subwf	??_timer0_read_ps,w
  9761  1797  00F6               	movwf	??_timer0_read_ps+2
  9762  1798  0823               	movf	timer0_read_ps@count+1,w
  9763  1799  1C03               	skipc
  9764  179A  0A23               	incf	timer0_read_ps@count+1,w
  9765  179B  0275               	subwf	??_timer0_read_ps+1,w
  9766  179C  00F7               	movwf	??_timer0_read_ps+3
  9767  179D  0876               	movf	??_timer0_read_ps+2,w
  9768  179E  3E00               	addlw	0
  9769  179F  00A2               	movwf	timer0_read_ps@count
  9770  17A0  0877               	movf	??_timer0_read_ps+3,w
  9771  17A1  1803               	skipnc
  9772  17A2  3E01               	addlw	1
  9773  17A3  3E01               	addlw	1
  9774  17A4  00A3               	movwf	timer0_read_ps@count+1
  9775                           
  9776                           ;timer.c: 69: return count;
  9777  17A5  00F3               	movwf	?_timer0_read_ps+1
  9778  17A6  0822               	movf	timer0_read_ps@count,w
  9779  17A7  00F2               	movwf	?_timer0_read_ps
  9780  17A8  0008               	return
  9781  17A9                     __end_of_timer0_read_ps:	
  9782  17A9                     __ptext19:	
  9783 ;; *************** function ___fltol *****************
  9784 ;; Defined at:
  9785 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\fltol.c"
  9786 ;; Parameters:    Size  Location     Type
  9787 ;;  f1              4    8[BANK1 ] int 
  9788 ;; Auto vars:     Size  Location     Type
  9789 ;;  exp1            1   17[BANK1 ] unsigned char 
  9790 ;;  sign1           1   16[BANK1 ] unsigned char 
  9791 ;; Return value:  Size  Location     Type
  9792 ;;                  4    8[BANK1 ] long 
  9793 ;; Registers used:
  9794 ;;		wreg, status,2, status,0
  9795 ;; Tracked objects:
  9796 ;;		On entry : 300/100
  9797 ;;		On exit  : 300/100
  9798 ;;		Unchanged: 0/0
  9799 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9800 ;;      Params:         0       0       4       0       0
  9801 ;;      Locals:         0       0       2       0       0
  9802 ;;      Temps:          0       0       4       0       0
  9803 ;;      Totals:         0       0      10       0       0
  9804 ;;Total ram usage:       10 bytes
  9805 ;; Hardware stack levels used:    1
  9806 ;; Hardware stack levels required when called:    1
  9807 ;; This function calls:
  9808 ;;		Nothing
  9809 ;; This function is called by:
  9810 ;;		_format_double
  9811 ;;		_measure_capacitance
  9812 ;;		_measure_inductance
  9813 ;;		_floor
  9814 ;;		_pow
  9815 ;;		_exp
  9816 ;; This function uses a non-reentrant model
  9817 ;;
  9818                           
  9819                           
  9820                           ;psect for function ___fltol
  9821  17A9                     ___fltol:	
  9822                           
  9823                           ;incstack = 0
  9824                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  9825  17A9  0828               	movf	___fltol@f1^(0+128),w
  9826  17AA  00AC               	movwf	??___fltol^(0+128)
  9827  17AB  0829               	movf	(___fltol@f1+1)^(0+128),w
  9828  17AC  00AD               	movwf	(??___fltol^(0+128)+1)
  9829  17AD  082A               	movf	(___fltol@f1+2)^(0+128),w
  9830  17AE  00AE               	movwf	(??___fltol^(0+128)+2)
  9831  17AF  082B               	movf	(___fltol@f1+3)^(0+128),w
  9832  17B0  00AF               	movwf	(??___fltol^(0+128)+3)
  9833  17B1  1003               	clrc
  9834  17B2  0D2E               	rlf	(??___fltol^(0+128)+2),w
  9835  17B3  0D2F               	rlf	(??___fltol^(0+128)+3),w
  9836  17B4  00B1               	movwf	___fltol@exp1^(0+128)
  9837  17B5  0831               	movf	___fltol@exp1^(0+128),w
  9838  17B6  1D03               	btfss	3,2
  9839  17B7  2FBD               	goto	l2545
  9840  17B8                     l2543:	
  9841  17B8  01A8               	clrf	?___fltol^(0+128)
  9842  17B9  01A9               	clrf	(?___fltol+1)^(0+128)
  9843  17BA  01AA               	clrf	(?___fltol+2)^(0+128)
  9844  17BB  01AB               	clrf	(?___fltol+3)^(0+128)
  9845  17BC  0008               	return
  9846  17BD                     l2545:	
  9847  17BD  0828               	movf	___fltol@f1^(0+128),w
  9848  17BE  00AC               	movwf	??___fltol^(0+128)
  9849  17BF  0829               	movf	(___fltol@f1+1)^(0+128),w
  9850  17C0  00AD               	movwf	(??___fltol^(0+128)+1)
  9851  17C1  082A               	movf	(___fltol@f1+2)^(0+128),w
  9852  17C2  00AE               	movwf	(??___fltol^(0+128)+2)
  9853  17C3  082B               	movf	(___fltol@f1+3)^(0+128),w
  9854  17C4  00AF               	movwf	(??___fltol^(0+128)+3)
  9855  17C5  301F               	movlw	31
  9856  17C6                     u2055:	
  9857  17C6  1003               	clrc
  9858  17C7  0CAF               	rrf	(??___fltol^(0+128)+3),f
  9859  17C8  0CAE               	rrf	(??___fltol^(0+128)+2),f
  9860  17C9  0CAD               	rrf	(??___fltol^(0+128)+1),f
  9861  17CA  0CAC               	rrf	??___fltol^(0+128),f
  9862  17CB  3EFF               	addlw	-1
  9863  17CC  1D03               	skipz
  9864  17CD  2FC6               	goto	u2055
  9865  17CE  082C               	movf	??___fltol^(0+128),w
  9866  17CF  00B0               	movwf	___fltol@sign1^(0+128)
  9867  17D0  3096               	movlw	150
  9868  17D1  17AA               	bsf	(___fltol@f1^(0+128)+2),7
  9869  17D2  01AB               	clrf	(___fltol@f1+3)^(0+128)
  9870  17D3  02B1               	subwf	___fltol@exp1^(0+128),f
  9871  17D4  1FB1               	btfss	___fltol@exp1^(0+128),7
  9872  17D5  2FE3               	goto	l2563
  9873  17D6  0831               	movf	___fltol@exp1^(0+128),w
  9874  17D7  3A80               	xorlw	128
  9875  17D8  3E97               	addlw	151
  9876  17D9  1C03               	btfss	3,0
  9877  17DA  2FB8               	goto	l2543
  9878  17DB                     l2559:	
  9879  17DB  1003               	clrc
  9880  17DC  0CAB               	rrf	(___fltol@f1+3)^(0+128),f
  9881  17DD  0CAA               	rrf	(___fltol@f1+2)^(0+128),f
  9882  17DE  0CA9               	rrf	(___fltol@f1+1)^(0+128),f
  9883  17DF  0CA8               	rrf	___fltol@f1^(0+128),f
  9884  17E0  0FB1               	incfsz	___fltol@exp1^(0+128),f
  9885  17E1  2FDB               	goto	l2559
  9886  17E2  2FF1               	goto	l2571
  9887  17E3                     l2563:	
  9888  17E3  3020               	movlw	32
  9889  17E4  0231               	subwf	___fltol@exp1^(0+128),w
  9890  17E5  1803               	btfsc	3,0
  9891  17E6  2FB8               	goto	l2543
  9892  17E7                     l2569:	
  9893  17E7  0831               	movf	___fltol@exp1^(0+128),w
  9894  17E8  1903               	btfsc	3,2
  9895  17E9  2FF1               	goto	l2571
  9896  17EA  1003               	clrc
  9897  17EB  0DA8               	rlf	___fltol@f1^(0+128),f
  9898  17EC  0DA9               	rlf	(___fltol@f1+1)^(0+128),f
  9899  17ED  0DAA               	rlf	(___fltol@f1+2)^(0+128),f
  9900  17EE  0DAB               	rlf	(___fltol@f1+3)^(0+128),f
  9901  17EF  03B1               	decf	___fltol@exp1^(0+128),f
  9902  17F0  2FE7               	goto	l2569
  9903  17F1                     l2571:	
  9904  17F1  0830               	movf	___fltol@sign1^(0+128),w
  9905  17F2  1903               	btfsc	3,2
  9906  17F3  0008               	return
  9907  17F4  09A8               	comf	___fltol@f1^(0+128),f
  9908  17F5  09A9               	comf	(___fltol@f1+1)^(0+128),f
  9909  17F6  09AA               	comf	(___fltol@f1+2)^(0+128),f
  9910  17F7  09AB               	comf	(___fltol@f1+3)^(0+128),f
  9911  17F8  0AA8               	incf	___fltol@f1^(0+128),f
  9912  17F9  1903               	skipnz
  9913  17FA  0AA9               	incf	(___fltol@f1+1)^(0+128),f
  9914  17FB  1903               	skipnz
  9915  17FC  0AAA               	incf	(___fltol@f1+2)^(0+128),f
  9916  17FD  1903               	skipnz
  9917  17FE  0AAB               	incf	(___fltol@f1+3)^(0+128),f
  9918  17FF  0008               	return
  9919  1800                     __end_of___fltol:	
  9920                           
  9921                           	psect	text40
  9922  07DD                     __ptext40:	
  9923 ;; *************** function _format_putchar *****************
  9924 ;; Defined at:
  9925 ;;		line 6 in file "../../../lib/format.c"
  9926 ;; Parameters:    Size  Location     Type
  9927 ;;  c               1    7[COMMON] unsigned char 
  9928 ;; Auto vars:     Size  Location     Type
  9929 ;;		None
  9930 ;; Return value:  Size  Location     Type
  9931 ;;		None               void
  9932 ;; Registers used:
  9933 ;;		None
  9934 ;; Tracked objects:
  9935 ;;		On entry : 0/300
  9936 ;;		On exit  : 0/0
  9937 ;;		Unchanged: 0/0
  9938 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9939 ;;      Params:         1       0       0       0       0
  9940 ;;      Locals:         0       0       0       0       0
  9941 ;;      Temps:          0       0       0       0       0
  9942 ;;      Totals:         1       0       0       0       0
  9943 ;;Total ram usage:        1 bytes
  9944 ;; Hardware stack levels used:    1
  9945 ;; Hardware stack levels required when called:    1
  9946 ;; This function calls:
  9947 ;;		Nothing
  9948 ;; This function is called by:
  9949 ;;		_format_number
  9950 ;;		_format_double
  9951 ;; This function uses a non-reentrant model
  9952 ;;
  9953                           
  9954                           
  9955                           ;psect for function _format_putchar
  9956  07DD                     _format_putchar:	
  9957                           
  9958                           ;format.c: 7: return;
  9959                           
  9960                           ;incstack = 0
  9961                           ; Regs used in _format_putchar: []
  9962  07DD  0008               	return
  9963  07DE                     __end_of_format_putchar:	
  9964                           
  9965                           	psect	text43
  9966  00D4                     __ptext43:	
  9967 ;; *************** function ___lwmod *****************
  9968 ;; Defined at:
  9969 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lwmod.c"
  9970 ;; Parameters:    Size  Location     Type
  9971 ;;  divisor         2    2[COMMON] unsigned int 
  9972 ;;  dividend        2    4[COMMON] unsigned int 
  9973 ;; Auto vars:     Size  Location     Type
  9974 ;;  counter         1    6[COMMON] unsigned char 
  9975 ;; Return value:  Size  Location     Type
  9976 ;;                  2    2[COMMON] unsigned int 
  9977 ;; Registers used:
  9978 ;;		wreg, status,2, status,0
  9979 ;; Tracked objects:
  9980 ;;		On entry : 300/0
  9981 ;;		On exit  : 300/0
  9982 ;;		Unchanged: 300/0
  9983 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9984 ;;      Params:         4       0       0       0       0
  9985 ;;      Locals:         1       0       0       0       0
  9986 ;;      Temps:          0       0       0       0       0
  9987 ;;      Totals:         5       0       0       0       0
  9988 ;;Total ram usage:        5 bytes
  9989 ;; Hardware stack levels used:    1
  9990 ;; Hardware stack levels required when called:    1
  9991 ;; This function calls:
  9992 ;;		Nothing
  9993 ;; This function is called by:
  9994 ;;		_print_reading
  9995 ;;		_format_number
  9996 ;; This function uses a non-reentrant model
  9997 ;;
  9998                           
  9999                           
 10000                           ;psect for function ___lwmod
 10001  00D4                     ___lwmod:	
 10002                           
 10003                           ;incstack = 0
 10004                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
 10005  00D4  0872               	movf	___lwmod@divisor,w
 10006  00D5  0473               	iorwf	___lwmod@divisor+1,w
 10007  00D6  1903               	btfsc	3,2
 10008  00D7  28F3               	goto	l2759
 10009  00D8  01F6               	clrf	___lwmod@counter
 10010  00D9                     L17:	
 10011  00D9  0AF6               	incf	___lwmod@counter,f
 10012  00DA  1BF3               	btfsc	___lwmod@divisor+1,7
 10013  00DB  28E0               	goto	l2751
 10014  00DC  1003               	clrc
 10015  00DD  0DF2               	rlf	___lwmod@divisor,f
 10016  00DE  0DF3               	rlf	___lwmod@divisor+1,f
 10017  00DF  28D9               	goto	L17
 10018  00E0                     l2751:	
 10019  00E0  0873               	movf	___lwmod@divisor+1,w
 10020  00E1  0275               	subwf	___lwmod@dividend+1,w
 10021  00E2  1D03               	skipz
 10022  00E3  28E6               	goto	u2365
 10023  00E4  0872               	movf	___lwmod@divisor,w
 10024  00E5  0274               	subwf	___lwmod@dividend,w
 10025  00E6                     u2365:	
 10026  00E6  1C03               	skipc
 10027  00E7  28EF               	goto	L18
 10028  00E8  0872               	movf	___lwmod@divisor,w
 10029  00E9  02F4               	subwf	___lwmod@dividend,f
 10030  00EA  0873               	movf	___lwmod@divisor+1,w
 10031  00EB  1C03               	skipc
 10032  00EC  03F5               	decf	___lwmod@dividend+1,f
 10033  00ED  02F5               	subwf	___lwmod@dividend+1,f
 10034  00EE  1003               	clrc
 10035  00EF                     L18:	
 10036  00EF  0CF3               	rrf	___lwmod@divisor+1,f
 10037  00F0  0CF2               	rrf	___lwmod@divisor,f
 10038  00F1  0BF6               	decfsz	___lwmod@counter,f
 10039  00F2  28E0               	goto	l2751
 10040  00F3                     l2759:	
 10041  00F3  0875               	movf	___lwmod@dividend+1,w
 10042  00F4  00F3               	movwf	?___lwmod+1
 10043  00F5  0874               	movf	___lwmod@dividend,w
 10044  00F6  00F2               	movwf	?___lwmod
 10045  00F7  0008               	return
 10046  00F8                     __end_of___lwmod:	
 10047                           
 10048                           	psect	text44
 10049  1F66                     __ptext44:	
 10050 ;; *************** function ___lwdiv *****************
 10051 ;; Defined at:
 10052 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lwdiv.c"
 10053 ;; Parameters:    Size  Location     Type
 10054 ;;  divisor         2    2[COMMON] unsigned int 
 10055 ;;  dividend        2    4[COMMON] unsigned int 
 10056 ;; Auto vars:     Size  Location     Type
 10057 ;;  quotient        2    6[COMMON] unsigned int 
 10058 ;;  counter         1    8[COMMON] unsigned char 
 10059 ;; Return value:  Size  Location     Type
 10060 ;;                  2    2[COMMON] unsigned int 
 10061 ;; Registers used:
 10062 ;;		wreg, status,2, status,0
 10063 ;; Tracked objects:
 10064 ;;		On entry : 300/0
 10065 ;;		On exit  : 300/0
 10066 ;;		Unchanged: 300/0
 10067 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10068 ;;      Params:         4       0       0       0       0
 10069 ;;      Locals:         3       0       0       0       0
 10070 ;;      Temps:          0       0       0       0       0
 10071 ;;      Totals:         7       0       0       0       0
 10072 ;;Total ram usage:        7 bytes
 10073 ;; Hardware stack levels used:    1
 10074 ;; Hardware stack levels required when called:    1
 10075 ;; This function calls:
 10076 ;;		Nothing
 10077 ;; This function is called by:
 10078 ;;		_print_reading
 10079 ;;		_format_number
 10080 ;; This function uses a non-reentrant model
 10081 ;;
 10082                           
 10083                           
 10084                           ;psect for function ___lwdiv
 10085  1F66                     ___lwdiv:	
 10086                           
 10087                           ;incstack = 0
 10088                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
 10089  1F66  01F6               	clrf	___lwdiv@quotient
 10090  1F67  01F7               	clrf	___lwdiv@quotient+1
 10091  1F68  0872               	movf	___lwdiv@divisor,w
 10092  1F69  0473               	iorwf	___lwdiv@divisor+1,w
 10093  1F6A  1903               	btfsc	3,2
 10094  1F6B  2F8B               	goto	l2739
 10095  1F6C  01F8               	clrf	___lwdiv@counter
 10096  1F6D                     L19:	
 10097  1F6D  0AF8               	incf	___lwdiv@counter,f
 10098  1F6E  1BF3               	btfsc	___lwdiv@divisor+1,7
 10099  1F6F  2F74               	goto	l2727
 10100  1F70  1003               	clrc
 10101  1F71  0DF2               	rlf	___lwdiv@divisor,f
 10102  1F72  0DF3               	rlf	___lwdiv@divisor+1,f
 10103  1F73  2F6D               	goto	L19
 10104  1F74                     l2727:	
 10105  1F74  1003               	clrc
 10106  1F75  0DF6               	rlf	___lwdiv@quotient,f
 10107  1F76  0DF7               	rlf	___lwdiv@quotient+1,f
 10108  1F77  0873               	movf	___lwdiv@divisor+1,w
 10109  1F78  0275               	subwf	___lwdiv@dividend+1,w
 10110  1F79  1D03               	skipz
 10111  1F7A  2F7D               	goto	u2325
 10112  1F7B  0872               	movf	___lwdiv@divisor,w
 10113  1F7C  0274               	subwf	___lwdiv@dividend,w
 10114  1F7D                     u2325:	
 10115  1F7D  1C03               	skipc
 10116  1F7E  2F87               	goto	L20
 10117  1F7F  0872               	movf	___lwdiv@divisor,w
 10118  1F80  02F4               	subwf	___lwdiv@dividend,f
 10119  1F81  0873               	movf	___lwdiv@divisor+1,w
 10120  1F82  1C03               	skipc
 10121  1F83  03F5               	decf	___lwdiv@dividend+1,f
 10122  1F84  02F5               	subwf	___lwdiv@dividend+1,f
 10123  1F85  1476               	bsf	___lwdiv@quotient,0
 10124  1F86  1003               	clrc
 10125  1F87                     L20:	
 10126  1F87  0CF3               	rrf	___lwdiv@divisor+1,f
 10127  1F88  0CF2               	rrf	___lwdiv@divisor,f
 10128  1F89  0BF8               	decfsz	___lwdiv@counter,f
 10129  1F8A  2F74               	goto	l2727
 10130  1F8B                     l2739:	
 10131  1F8B  0877               	movf	___lwdiv@quotient+1,w
 10132  1F8C  00F3               	movwf	?___lwdiv+1
 10133  1F8D  0876               	movf	___lwdiv@quotient,w
 10134  1F8E  00F2               	movwf	?___lwdiv
 10135  1F8F  0008               	return
 10136  1F90                     __end_of___lwdiv:	
 10137                           
 10138                           	psect	text52
 10139  00F8                     __ptext52:	
 10140 ;; *************** function _isr *****************
 10141 ;; Defined at:
 10142 ;;		line 76 in file "../../../src/LC-meter.c"
 10143 ;; Parameters:    Size  Location     Type
 10144 ;;		None
 10145 ;; Auto vars:     Size  Location     Type
 10146 ;;		None
 10147 ;; Return value:  Size  Location     Type
 10148 ;;                  2  255[None  ] int 
 10149 ;; Registers used:
 10150 ;;		wreg, status,2, status,0
 10151 ;; Tracked objects:
 10152 ;;		On entry : 0/0
 10153 ;;		On exit  : 300/0
 10154 ;;		Unchanged: 0/0
 10155 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10156 ;;      Params:         0       0       0       0       0
 10157 ;;      Locals:         0       0       0       0       0
 10158 ;;      Temps:          2       0       0       0       0
 10159 ;;      Totals:         2       0       0       0       0
 10160 ;;Total ram usage:        2 bytes
 10161 ;; Hardware stack levels used:    1
 10162 ;; This function calls:
 10163 ;;		Nothing
 10164 ;; This function is called by:
 10165 ;;		Interrupt level 1
 10166 ;; This function uses a non-reentrant model
 10167 ;;
 10168                           
 10169                           
 10170                           ;psect for function _isr
 10171  00F8                     _isr:	
 10172                           
 10173                           ;LC-meter.c: 78: if(TMR2IF) {
 10174  00F8  1283               	bcf	3,5	;RP0=0, select bank0
 10175  00F9  1303               	bcf	3,6	;RP1=0, select bank0
 10176  00FA  1C8C               	btfss	12,1	;volatile
 10177  00FB  294F               	goto	i1l260
 10178                           
 10179                           ;LC-meter.c: 80: bres += 256;
 10180  00FC  3001               	movlw	1
 10181  00FD  1683               	bsf	3,5	;RP0=1, select bank3
 10182  00FE  1703               	bsf	3,6	;RP1=1, select bank3
 10183  00FF  07CD               	addwf	(_bres+1)^(0+384),f	;volatile
 10184                           
 10185                           ;LC-meter.c: 82: if(bres >= 5000) {
 10186  0100  3013               	movlw	19
 10187  0101  024D               	subwf	(_bres+1)^(0+384),w	;volatile
 10188  0102  3088               	movlw	136
 10189  0103  1903               	skipnz
 10190  0104  024C               	subwf	_bres^(0+384),w	;volatile
 10191  0105  1C03               	skipc
 10192  0106  294C               	goto	i1l3409
 10193                           
 10194                           ;LC-meter.c: 83: bres -= 5000;
 10195  0107  3088               	movlw	136
 10196  0108  02CC               	subwf	_bres^(0+384),f	;volatile
 10197  0109  3013               	movlw	19
 10198  010A  1C03               	skipc
 10199  010B  03CD               	decf	(_bres+1)^(0+384),f	;volatile
 10200  010C  02CD               	subwf	(_bres+1)^(0+384),f	;volatile
 10201                           
 10202                           ;LC-meter.c: 84: msecpart++;
 10203  010D  0ACE               	incf	_msecpart^(0+384),f	;volatile
 10204  010E  1903               	skipnz
 10205  010F  0ACF               	incf	(_msecpart+1)^(0+384),f	;volatile
 10206                           
 10207                           ;LC-meter.c: 85: msecs++;
 10208  0110  0A94               	incf	_msecs^(0+384),f	;volatile
 10209  0111  1903               	skipnz
 10210  0112  0A95               	incf	(_msecs+1)^(0+384),f	;volatile
 10211  0113  1903               	skipnz
 10212  0114  0A96               	incf	(_msecs+2)^(0+384),f	;volatile
 10213  0115  1903               	skipnz
 10214  0116  0A97               	incf	(_msecs+3)^(0+384),f	;volatile
 10215                           
 10216                           ;LC-meter.c: 87: RC3 = (((blink > 200)) == 0);
 10217  0117  3000               	movlw	0
 10218  0118  1303               	bcf	3,6	;RP1=0, select bank1
 10219  0119  026A               	subwf	(_blink+1)^(0+128),w	;volatile
 10220  011A  30C9               	movlw	201
 10221  011B  1903               	skipnz
 10222  011C  0269               	subwf	_blink^(0+128),w	;volatile
 10223  011D  1803               	btfsc	3,0
 10224  011E  2923               	goto	u294_20
 10225  011F  1283               	bcf	3,5	;RP0=0, select bank0
 10226  0120  1303               	bcf	3,6	;RP1=0, select bank0
 10227  0121  1587               	bsf	7,3	;volatile
 10228  0122  2926               	goto	u295_24
 10229  0123                     u294_20:	
 10230  0123  1283               	bcf	3,5	;RP0=0, select bank0
 10231  0124  1303               	bcf	3,6	;RP1=0, select bank0
 10232  0125  1187               	bcf	7,3	;volatile
 10233  0126                     u295_24:	
 10234                           
 10235                           ;LC-meter.c: 88: if(blink >= 400)
 10236  0126  3001               	movlw	1
 10237  0127  1683               	bsf	3,5	;RP0=1, select bank1
 10238  0128  026A               	subwf	(_blink+1)^(0+128),w	;volatile
 10239  0129  3090               	movlw	144
 10240  012A  1903               	skipnz
 10241  012B  0269               	subwf	_blink^(0+128),w	;volatile
 10242  012C  1C03               	skipc
 10243  012D  2934               	goto	i1l3401
 10244                           
 10245                           ;LC-meter.c: 89: blink -= 400;
 10246  012E  3090               	movlw	144
 10247  012F  02E9               	subwf	_blink^(0+128),f	;volatile
 10248  0130  3001               	movlw	1
 10249  0131  1C03               	skipc
 10250  0132  03EA               	decf	(_blink+1)^(0+128),f	;volatile
 10251  0133  02EA               	subwf	(_blink+1)^(0+128),f	;volatile
 10252  0134                     i1l3401:	
 10253                           
 10254                           ;LC-meter.c: 90: ++blink;
 10255  0134  0AE9               	incf	_blink^(0+128),f	;volatile
 10256  0135  1903               	skipnz
 10257  0136  0AEA               	incf	(_blink+1)^(0+128),f	;volatile
 10258                           
 10259                           ;LC-meter.c: 93: if(msecpart >= 1000) {
 10260  0137  3003               	movlw	3
 10261  0138  1703               	bsf	3,6	;RP1=1, select bank3
 10262  0139  024F               	subwf	(_msecpart+1)^(0+384),w	;volatile
 10263  013A  30E8               	movlw	232
 10264  013B  1903               	skipnz
 10265  013C  024E               	subwf	_msecpart^(0+384),w	;volatile
 10266  013D  1C03               	skipc
 10267  013E  294C               	goto	i1l3409
 10268                           
 10269                           ;LC-meter.c: 95: seconds++;
 10270  013F  0A98               	incf	_seconds^(0+384),f	;volatile
 10271  0140  1903               	skipnz
 10272  0141  0A99               	incf	(_seconds+1)^(0+384),f	;volatile
 10273  0142  1903               	skipnz
 10274  0143  0A9A               	incf	(_seconds+2)^(0+384),f	;volatile
 10275  0144  1903               	skipnz
 10276  0145  0A9B               	incf	(_seconds+3)^(0+384),f	;volatile
 10277                           
 10278                           ;LC-meter.c: 96: msecpart -= 1000;
 10279  0146  30E8               	movlw	232
 10280  0147  02CE               	subwf	_msecpart^(0+384),f	;volatile
 10281  0148  3003               	movlw	3
 10282  0149  1C03               	skipc
 10283  014A  03CF               	decf	(_msecpart+1)^(0+384),f	;volatile
 10284  014B  02CF               	subwf	(_msecpart+1)^(0+384),f	;volatile
 10285  014C                     i1l3409:	
 10286                           
 10287                           ;LC-meter.c: 97: }
 10288                           ;LC-meter.c: 98: }
 10289                           ;LC-meter.c: 100: TMR2IF = 0;
 10290  014C  1283               	bcf	3,5	;RP0=0, select bank0
 10291  014D  1303               	bcf	3,6	;RP1=0, select bank0
 10292  014E  108C               	bcf	12,1	;volatile
 10293  014F                     i1l260:	
 10294  014F  0871               	movf	??_isr+1,w
 10295  0150  008A               	movwf	10
 10296  0151  0E70               	swapf	??_isr^(0+-128),w
 10297  0152  0083               	movwf	3
 10298  0153  0EFE               	swapf	126,f
 10299  0154  0E7E               	swapf	126,w
 10300  0155  0009               	retfie
 10301  0156                     __end_of_isr:	
 10302  0006                     
 10303                           	psect	intentry
 10304  0004                     __pintentry:	
 10305                           ;incstack = 0
 10306                           ; Regs used in _isr: [wreg+status,2+status,0]
 10307                           
 10308  0004                     interrupt_function:	
 10309  007E                     saved_w	set	btemp
 10310  0004  00FE               	movwf	btemp
 10311  0005  0E03               	swapf	3,w
 10312  0006  00F0               	movwf	??_isr
 10313  0007  080A               	movf	10,w
 10314  0008  00F1               	movwf	??_isr+1
 10315  0009  120A  118A  28F8   	ljmp	_isr
 10316                           
 10317                           	psect	functab
 10318  0700                     __pfunctab:	
 10319  0700                     __fptable:	
 10320  0700                     fptable:	
 10321  0700  00FF               	movwf	(btemp+1)& (0+127)
 10322  0701  3007               	movlw	high fptable
 10323  0702  008A               	movwf	10
 10324  0703  087F               	movf	(btemp+1)& (0+127),w
 10325  0704  0782               	addwf	2,f
 10326  0705                     fpbase:	
 10327  0705  2F05               	goto	fpbase	; Call via a null pointer and you will get stuck here.
 10328  0706                     fp__output_putch:	
 10329  0706                     entry__output_putch:	
 10330  0706  120A  158A  2DFF   	ljmp	_output_putch
 10331  0709                     fp__lcd_putch:	
 10332  0709                     entry__lcd_putch:	
 10333  0709  120A  158A  2E3C   	ljmp	_lcd_putch
 10334  070C                     fp__format_putchar:	
 10335  070C  120A  118A  2FDD   	ljmp	_format_putchar
 10336  070F                     __end_of__fptable:	
 10337  007E                     btemp	set	126	;btemp
 10338  007E                     wtemp	set	126
 10339  007E                     wtemp0	set	126
 10340  0080                     wtemp1	set	128
 10341  0082                     wtemp2	set	130
 10342  0084                     wtemp3	set	132
 10343  0086                     wtemp4	set	134
 10344  0088                     wtemp5	set	136
 10345  007F                     wtemp6	set	127
 10346  007E                     ttemp	set	126
 10347  007E                     ttemp0	set	126
 10348  0081                     ttemp1	set	129
 10349  0084                     ttemp2	set	132
 10350  0087                     ttemp3	set	135
 10351  007F                     ttemp4	set	127
 10352  007E                     ltemp	set	126
 10353  007E                     ltemp0	set	126
 10354  0082                     ltemp1	set	130
 10355  0086                     ltemp2	set	134
 10356  0080                     ltemp3	set	128


Data Sizes:
    Strings     109
    Constant    76
    Data        5
    BSS         48
    Persistent  8
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      12
    BANK0            79     79      79
    BANK1            80     69      80
    BANK3            96     20      68
    BANK2            96      0       0

Pointer List with Targets:

    eval_poly@d	PTR const  size(1) Largest target is 40
		 -> exp@coeff(CODE[40]), log@coeff(CODE[36]), 

    frexp@eptr	PTR int  size(1) Largest target is 2
		 -> log@exponent(BANK0[2]), floor@expon(BANK1[2]), 

    uart_puts@s	PTR const unsigned char  size(1) Largest target is 6
		 -> STR_22(CODE[3]), STR_20(CODE[3]), STR_14(CODE[6]), STR_9(CODE[3]), 

    sp__memcpy	PTR void  size(1) Largest target is 18
		 -> buffer.x(BANK3[16]), buffer(BANK3[18]), 

    lcd_puts@string	PTR const unsigned char  size(1) Largest target is 10
		 -> STR_18(CODE[5]), STR_17(CODE[6]), STR_16(CODE[7]), STR_15(CODE[7]), 
		 -> STR_13(CODE[10]), STR_12(CODE[4]), STR_11(CODE[4]), STR_10(CODE[6]), 

    putchar_ptr	PTR FTN(unsigned char ,)void  size(1) Largest target is 0
		 -> format_putchar(), output_putch(), lcd_putch(), 

    put_str@s	PTR const unsigned char  size(1) Largest target is 15
		 -> STR_25(CODE[13]), STR_24(CODE[10]), STR_23(CODE[6]), STR_21(CODE[15]), 
		 -> STR_19(CODE[12]), 

    print_unit@units	PTR const unsigned char [8] size(1) Largest target is 3
		 -> STR_8(CODE[3]), STR_7(CODE[3]), STR_6(CODE[3]), STR_5(CODE[3]), 
		 -> STR_4(CODE[3]), STR_3(CODE[3]), STR_2(CODE[3]), STR_1(CODE[2]), 

    S31$op	PTR FTN(unsigned char ,)void  size(1) Largest target is 0

    buffer.op	PTR FTN(unsigned char ,)void  size(1) Largest target is 0


Critical Paths under _main in COMMON

    _main->_lcd_begin
    _main->_lcd_puts
    _measure_inductance->___flge
    _measure_inductance->_print_unit
    _measure_capacitance->___flge
    _measure_capacitance->_print_unit
    _print_unit->_lcd_gotoxy
    _print_reading->_format_number
    _print_reading->_lcd_puts
    _lcd_begin->_lcd_command
    _indicator->_lcd_puts
    _lcd_puts->_lcd_putch
    _format_double->___flge
    _pow->___flge
    _exp->___flge
    _ldexp->___flge
    _floor->___flge
    ___flsub->___awtofl
    ___fldiv->___flpack
    ___lltofl->___flpack
    _log->___flge
    ___flmul->___awtofl
    ___flmul->_frexp
    ___fladd->___awtofl
    ___fladd->_frexp
    ___awtofl->___flpack
    _uart_puts->_uart_putch
    _measure_freq->_format_number
    _put_str->_output_putch
    _lcd_gotoxy->_lcd_command
    _format_number->___lwdiv
    _lcd_clear->_lcd_command
    _lcd_command->_lcd_send
    _lcd_send->_lcd_write4bits

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _print_unit->_lcd_gotoxy
    _print_reading->_format_number
    _indicator->_lcd_gotoxy
    _pow->_log
    _exp->_ldexp
    _exp->_log
    _ldexp->_eval_poly
    ___flsub->___fladd
    ___fldiv->___flpack
    ___lltofl->___flpack
    _log10->_log
    _log->_eval_poly
    _eval_poly->___fladd
    ___flmul->___fldiv
    ___fladd->___flmul
    ___awtofl->___flpack
    _calibrate->___lwtofl
    _measure_freq->_format_number
    ___lwtofl->_measure_freq

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    _measure_inductance->___fltol
    _measure_capacitance->___fltol
    _format_double->_pow
    _pow->_exp
    _exp->_floor
    _floor->___altofl
    ___fltol->_log10
    ___altofl->___fltol

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    _main->_format_double

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0  258740
                          _calibrate
                          _delay10ms
                      _format_double
                          _indicator
                          _lcd_begin
                          _lcd_clear
                         _lcd_gotoxy
                           _lcd_init
                           _lcd_puts
                _measure_capacitance
                 _measure_inductance
                        _timer0_init
                        _timer2_init
                          _uart_init
                          _uart_puts
 ---------------------------------------------------------------------------------
 (1) _uart_init                                            4     4      0      48
                                              2 COMMON     4     4      0
                        _uart_enable
 ---------------------------------------------------------------------------------
 (2) _uart_enable                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _timer2_init                                          4     4      0     157
                                              2 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 (1) _timer0_init                                         10    10      0     371
                                              0 BANK0     10    10      0
 ---------------------------------------------------------------------------------
 (1) _measure_inductance                                  55    55      0   42294
                                             18 BANK1     43    43      0
                            ___fldiv
                             ___flge
                            ___flmul
                            ___flsub
                            ___fltol
                           ___lwtofl
                         _lcd_gotoxy
                       _measure_freq
                      _print_reading
                         _print_unit
                            _put_str
 ---------------------------------------------------------------------------------
 (1) _measure_capacitance                                 19    19      0   41784
                                             18 BANK1     19    19      0
                            ___fldiv
                             ___flge
                            ___flmul
                            ___flsub
                            ___fltol
                           ___lwtofl
                         _lcd_gotoxy
                       _measure_freq
                      _print_reading
                         _print_unit
                            _put_str
 ---------------------------------------------------------------------------------
 (2) _print_unit                                           3     3      0    1867
                                              8 COMMON     2     2      0
                         _lcd_gotoxy
                          _uart_puts
 ---------------------------------------------------------------------------------
 (2) _print_reading                                        6     4      2    8384
                                             41 BANK0      6     4      2
                            ___lwdiv
                            ___lwmod
                      _format_number
                         _lcd_gotoxy
                           _lcd_puts
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             3     3      0      46
                                              2 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _lcd_begin                                            4     3      1     709
                                              7 COMMON     3     2      1
                                              0 BANK0      1     1      0
                        _lcd_command
                     _lcd_write4bits
 ---------------------------------------------------------------------------------
 (1) _indicator                                            1     1      0    2812
                                              5 BANK0      1     1      0
                         _lcd_gotoxy
                           _lcd_puts
 ---------------------------------------------------------------------------------
 (3) _lcd_puts                                             2     2      0    1089
                                              8 COMMON     2     2      0
                          _lcd_putch
 ---------------------------------------------------------------------------------
 (1) _format_double                                       20    16      4  152936
                                              0 BANK3     20    16      4
                           ___awtofl
                            ___fldiv
                             ___flge
                            ___flmul
                            ___flsub
                            ___fltol
                              _floor
                     _format_putchar *
                          _lcd_putch *
                              _log10
                       _output_putch *
                                _pow
 ---------------------------------------------------------------------------------
 (2) _pow                                                 21    13      8   85814
                                             48 BANK1     21    13      8
                             ___flge
                            ___flmul
                            ___flneg
                            ___fltol
                           ___lltofl
                                _exp
                                _log
 ---------------------------------------------------------------------------------
 (3) _exp                                                 15    11      4   46127
                                             33 BANK1     15    11      4
                           ___awtofl
                            ___fldiv
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                          _eval_poly
                              _floor
                              _ldexp
                                _log (ARG)
 ---------------------------------------------------------------------------------
 (4) _ldexp                                               12     6      6    2907
                                             73 BANK0      6     0      6
                                              0 BANK1      6     6      0
                             ___flge
                            ___flneg
                          _eval_poly (ARG)
 ---------------------------------------------------------------------------------
 (5) ___flneg                                              4     0      4     257
                                              2 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 (4) _floor                                               10     6      4   10352
                                             23 BANK1     10     6      4
                           ___altofl
                            ___fladd
                            ___fldiv (ARG)
                             ___flge
                            ___fltol
                              _frexp
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             10     6      4     680
                                              8 BANK1     10     6      4
                            ___fldiv (ARG)
                              _log10 (ARG)
 ---------------------------------------------------------------------------------
 (5) ___altofl                                             5     1      4    2446
                                             18 BANK1      5     1      4
                           ___flpack
                            ___fltol (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flsub                                              8     0      8    5089
                                             57 BANK0      8     0      8
                           ___awtofl (ARG)
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (2) ___fldiv                                             19    11      8    3931
                                              4 BANK0     19    11      8
                           ___flpack
 ---------------------------------------------------------------------------------
 (3) ___lltofl                                             4     0      4    2344
                                              4 BANK0      4     0      4
                           ___flpack
 ---------------------------------------------------------------------------------
 (2) _log10                                                8     4      4   33717
                                              0 BANK1      8     4      4
                            ___flmul
                                _log
 ---------------------------------------------------------------------------------
 (3) _log                                                  6     2      4   27200
                                             73 BANK0      6     2      4
                           ___awtofl
                            ___fladd
                             ___flge
                            ___flmul
                          _eval_poly
                              _frexp
 ---------------------------------------------------------------------------------
 (4) _frexp                                                7     2      5     436
                                              2 COMMON     7     2      5
 ---------------------------------------------------------------------------------
 (4) _eval_poly                                           16     9      7   11109
                                             57 BANK0     16     9      7
                            ___fladd
                            ___flmul
 ---------------------------------------------------------------------------------
 (2) ___flmul                                             19    11      8    6342
                                             23 BANK0     19    11      8
                           ___awtofl (ARG)
                            ___fldiv (ARG)
                           ___flpack
                              _frexp (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fladd                                             15     7      8    4123
                                             42 BANK0     15     7      8
                           ___awtofl (ARG)
                            ___flmul (ARG)
                           ___flpack
                              _frexp (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flge                                              12     4      8    2124
                                              2 COMMON     8     0      8
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (4) ___awtofl                                             9     5      4    2686
                                              8 COMMON     1     1      0
                                              4 BANK0      4     0      4
                           ___flpack
 ---------------------------------------------------------------------------------
 (1) _calibrate                                            1     1      0   14240
                                             51 BANK0      1     1      0
                           ___lwtofl
                          _delay10ms
                          _lcd_clear
                         _lcd_gotoxy
                          _lcd_putch
                       _measure_freq
                            _put_str
                          _uart_puts
 ---------------------------------------------------------------------------------
 (1) _uart_puts                                            1     1      0     175
                                              3 COMMON     1     1      0
                         _uart_putch
 ---------------------------------------------------------------------------------
 (2) _uart_putch                                           1     1      0      22
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _measure_freq                                         6     4      2    7446
                                             41 BANK0      6     4      2
                      _format_number
                         _lcd_gotoxy
                            _put_str
                     _timer0_read_ps
 ---------------------------------------------------------------------------------
 (3) _timer0_read_ps                                       9     7      2     167
                                              2 COMMON     6     4      2
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (2) _put_str                                              3     3      0    1084
                                              0 BANK0      3     3      0
                       _output_putch
 ---------------------------------------------------------------------------------
 (3) _lcd_gotoxy                                           6     5      1    1692
                                              7 COMMON     1     0      1
                                              0 BANK0      5     5      0
                        _lcd_command
 ---------------------------------------------------------------------------------
 (3) _format_number                                       42    38      4    4438
                                              9 COMMON     1     1      0
                                              0 BANK0     41    37      4
                            ___lwdiv
                            ___lwmod
                     _format_putchar *
                          _lcd_putch *
                       _output_putch *
 ---------------------------------------------------------------------------------
 (3) _output_putch                                         1     0      1     804
                                              7 COMMON     1     0      1
                          _lcd_putch
 ---------------------------------------------------------------------------------
 (4) _lcd_putch                                            1     0      1     719
                                              7 COMMON     1     0      1
                           _lcd_send
 ---------------------------------------------------------------------------------
 (4) _format_putchar                                       1     0      1     220
                                              7 COMMON     1     0      1
 ---------------------------------------------------------------------------------
 (4) ___lwmod                                              5     1      4     451
                                              2 COMMON     5     1      4
 ---------------------------------------------------------------------------------
 (4) ___lwdiv                                              7     3      4     454
                                              2 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (1) _lcd_clear                                            2     2      0     387
                                              7 COMMON     2     2      0
                        _lcd_command
 ---------------------------------------------------------------------------------
 (4) _lcd_command                                          1     1      0     387
                                              6 COMMON     1     1      0
                           _lcd_send
 ---------------------------------------------------------------------------------
 (5) _lcd_send                                             2     1      1     356
                                              4 COMMON     2     1      1
                     _lcd_write4bits
 ---------------------------------------------------------------------------------
 (6) _lcd_write4bits                                       2     2      0     133
                                              2 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _delay10ms                                            1     1      0       0
 ---------------------------------------------------------------------------------
 (2) ___lwtofl                                             4     0      4    2669
                                             47 BANK0      4     0      4
                           ___flpack
                       _measure_freq (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flpack                                            10     4      6    2248
                                              2 COMMON     6     0      6
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (8) _isr                                                  2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _calibrate
     ___lwtofl
       ___flpack
       _measure_freq (ARG)
         _format_number
           ___lwdiv
           ___lwmod
           _format_putchar *
           _lcd_putch *
             _lcd_send
               _lcd_write4bits
           _output_putch *
             _lcd_putch
               _lcd_send
                 _lcd_write4bits
         _lcd_gotoxy
           _lcd_command
             _lcd_send
               _lcd_write4bits
         _put_str
           _output_putch
             _lcd_putch
               _lcd_send
                 _lcd_write4bits
         _timer0_read_ps
     _delay10ms
     _lcd_clear
       _lcd_command
         _lcd_send
           _lcd_write4bits
     _lcd_gotoxy
       _lcd_command
         _lcd_send
           _lcd_write4bits
     _lcd_putch
       _lcd_send
         _lcd_write4bits
     _measure_freq
       _format_number
         ___lwdiv
         ___lwmod
         _format_putchar *
         _lcd_putch *
           _lcd_send
             _lcd_write4bits
         _output_putch *
           _lcd_putch
             _lcd_send
               _lcd_write4bits
       _lcd_gotoxy
         _lcd_command
           _lcd_send
             _lcd_write4bits
       _put_str
         _output_putch
           _lcd_putch
             _lcd_send
               _lcd_write4bits
       _timer0_read_ps
     _put_str
       _output_putch
         _lcd_putch
           _lcd_send
             _lcd_write4bits
     _uart_puts
       _uart_putch
   _delay10ms
   _format_double
     ___awtofl
       ___flpack
     ___fldiv
       ___flpack
     ___flge
     ___flmul
       ___awtofl (ARG)
         ___flpack
       ___fldiv (ARG)
         ___flpack
       ___flpack (ARG)
       _frexp (ARG)
     ___flsub
       ___awtofl (ARG)
         ___flpack
       ___fladd (ARG)
         ___awtofl (ARG)
           ___flpack
         ___flmul (ARG)
           ___awtofl (ARG)
             ___flpack
           ___fldiv (ARG)
             ___flpack
           ___flpack (ARG)
           _frexp (ARG)
         ___flpack (ARG)
         _frexp (ARG)
       ___flmul (ARG)
         ___awtofl (ARG)
           ___flpack
         ___fldiv (ARG)
           ___flpack
         ___flpack (ARG)
         _frexp (ARG)
     ___fltol
       ___fldiv (ARG)
         ___flpack
       _log10 (ARG)
         ___flmul
           ___awtofl (ARG)
             ___flpack
           ___fldiv (ARG)
             ___flpack
           ___flpack (ARG)
           _frexp (ARG)
         _log
           ___awtofl
             ___flpack
           ___fladd
             ___awtofl (ARG)
               ___flpack
             ___flmul (ARG)
               ___awtofl (ARG)
                 ___flpack
               ___fldiv (ARG)
                 ___flpack
               ___flpack (ARG)
               _frexp (ARG)
             ___flpack (ARG)
             _frexp (ARG)
           ___flge
           ___flmul
             ___awtofl (ARG)
               ___flpack
             ___fldiv (ARG)
               ___flpack
             ___flpack (ARG)
             _frexp (ARG)
           _eval_poly
             ___fladd
               ___awtofl (ARG)
                 ___flpack
               ___flmul (ARG)
                 ___awtofl (ARG)
                   ___flpack
                 ___fldiv (ARG)
                   ___flpack
                 ___flpack (ARG)
                 _frexp (ARG)
               ___flpack (ARG)
               _frexp (ARG)
             ___flmul
               ___awtofl (ARG)
                 ___flpack
               ___fldiv (ARG)
                 ___flpack
               ___flpack (ARG)
               _frexp (ARG)
           _frexp
     _floor
       ___altofl
         ___flpack
         ___fltol (ARG)
           ___fldiv (ARG)
             ___flpack
           _log10 (ARG)
             ___flmul
               ___awtofl (ARG)
                 ___flpack
               ___fldiv (ARG)
                 ___flpack
               ___flpack (ARG)
               _frexp (ARG)
             _log
               ___awtofl
                 ___flpack
               ___fladd
                 ___awtofl (ARG)
                   ___flpack
                 ___flmul (ARG)
                   ___awtofl (ARG)
                     ___flpack
                   ___fldiv (ARG)
                     ___flpack
                   ___flpack (ARG)
                   _frexp (ARG)
                 ___flpack (ARG)
                 _frexp (ARG)
               ___flge
               ___flmul
                 ___awtofl (ARG)
                   ___flpack
                 ___fldiv (ARG)
                   ___flpack
                 ___flpack (ARG)
                 _frexp (ARG)
               _eval_poly
                 ___fladd
                   ___awtofl (ARG)
                     ___flpack
                   ___flmul (ARG)
                     ___awtofl (ARG)
                       ___flpack
                     ___fldiv (ARG)
                       ___flpack
                     ___flpack (ARG)
                     _frexp (ARG)
                   ___flpack (ARG)
                   _frexp (ARG)
                 ___flmul
                   ___awtofl (ARG)
                     ___flpack
                   ___fldiv (ARG)
                     ___flpack
                   ___flpack (ARG)
                   _frexp (ARG)
               _frexp
       ___fladd
         ___awtofl (ARG)
           ___flpack
         ___flmul (ARG)
           ___awtofl (ARG)
             ___flpack
           ___fldiv (ARG)
             ___flpack
           ___flpack (ARG)
           _frexp (ARG)
         ___flpack (ARG)
         _frexp (ARG)
       ___fldiv (ARG)
         ___flpack
       ___flge (ARG)
       ___fltol (ARG)
         ___fldiv (ARG)
           ___flpack
         _log10 (ARG)
           ___flmul
             ___awtofl (ARG)
               ___flpack
             ___fldiv (ARG)
               ___flpack
             ___flpack (ARG)
             _frexp (ARG)
           _log
             ___awtofl
               ___flpack
             ___fladd
               ___awtofl (ARG)
                 ___flpack
               ___flmul (ARG)
                 ___awtofl (ARG)
                   ___flpack
                 ___fldiv (ARG)
                   ___flpack
                 ___flpack (ARG)
                 _frexp (ARG)
               ___flpack (ARG)
               _frexp (ARG)
             ___flge
             ___flmul
               ___awtofl (ARG)
                 ___flpack
               ___fldiv (ARG)
                 ___flpack
               ___flpack (ARG)
               _frexp (ARG)
             _eval_poly
               ___fladd
                 ___awtofl (ARG)
                   ___flpack
                 ___flmul (ARG)
                   ___awtofl (ARG)
                     ___flpack
                   ___fldiv (ARG)
                     ___flpack
                   ___flpack (ARG)
                   _frexp (ARG)
                 ___flpack (ARG)
                 _frexp (ARG)
               ___flmul
                 ___awtofl (ARG)
                   ___flpack
                 ___fldiv (ARG)
                   ___flpack
                 ___flpack (ARG)
                 _frexp (ARG)
             _frexp
       _frexp (ARG)
     _format_putchar *
     _lcd_putch *
       _lcd_send
         _lcd_write4bits
     _log10 *
       ___flmul
         ___awtofl (ARG)
           ___flpack
         ___fldiv (ARG)
           ___flpack
         ___flpack (ARG)
         _frexp (ARG)
       _log
         ___awtofl
           ___flpack
         ___fladd
           ___awtofl (ARG)
             ___flpack
           ___flmul (ARG)
             ___awtofl (ARG)
               ___flpack
             ___fldiv (ARG)
               ___flpack
             ___flpack (ARG)
             _frexp (ARG)
           ___flpack (ARG)
           _frexp (ARG)
         ___flge
         ___flmul
           ___awtofl (ARG)
             ___flpack
           ___fldiv (ARG)
             ___flpack
           ___flpack (ARG)
           _frexp (ARG)
         _eval_poly
           ___fladd
             ___awtofl (ARG)
               ___flpack
             ___flmul (ARG)
               ___awtofl (ARG)
                 ___flpack
               ___fldiv (ARG)
                 ___flpack
               ___flpack (ARG)
               _frexp (ARG)
             ___flpack (ARG)
             _frexp (ARG)
           ___flmul
             ___awtofl (ARG)
               ___flpack
             ___fldiv (ARG)
               ___flpack
             ___flpack (ARG)
             _frexp (ARG)
         _frexp
     _output_putch *
       _lcd_putch
         _lcd_send
           _lcd_write4bits
     _pow *
       ___flge
       ___flmul
         ___awtofl (ARG)
           ___flpack
         ___fldiv (ARG)
           ___flpack
         ___flpack (ARG)
         _frexp (ARG)
       ___flneg
       ___fltol
         ___fldiv (ARG)
           ___flpack
         _log10 (ARG)
           ___flmul
             ___awtofl (ARG)
               ___flpack
             ___fldiv (ARG)
               ___flpack
             ___flpack (ARG)
             _frexp (ARG)
           _log
             ___awtofl
               ___flpack
             ___fladd
               ___awtofl (ARG)
                 ___flpack
               ___flmul (ARG)
                 ___awtofl (ARG)
                   ___flpack
                 ___fldiv (ARG)
                   ___flpack
                 ___flpack (ARG)
                 _frexp (ARG)
               ___flpack (ARG)
               _frexp (ARG)
             ___flge
             ___flmul
               ___awtofl (ARG)
                 ___flpack
               ___fldiv (ARG)
                 ___flpack
               ___flpack (ARG)
               _frexp (ARG)
             _eval_poly
               ___fladd
                 ___awtofl (ARG)
                   ___flpack
                 ___flmul (ARG)
                   ___awtofl (ARG)
                     ___flpack
                   ___fldiv (ARG)
                     ___flpack
                   ___flpack (ARG)
                   _frexp (ARG)
                 ___flpack (ARG)
                 _frexp (ARG)
               ___flmul
                 ___awtofl (ARG)
                   ___flpack
                 ___fldiv (ARG)
                   ___flpack
                 ___flpack (ARG)
                 _frexp (ARG)
             _frexp
       ___lltofl
         ___flpack
       _exp
         ___awtofl
           ___flpack
         ___fldiv
           ___flpack
         ___flge
         ___flmul
           ___awtofl (ARG)
             ___flpack
           ___fldiv (ARG)
             ___flpack
           ___flpack (ARG)
           _frexp (ARG)
         ___flneg
         ___flsub
           ___awtofl (ARG)
             ___flpack
           ___fladd (ARG)
             ___awtofl (ARG)
               ___flpack
             ___flmul (ARG)
               ___awtofl (ARG)
                 ___flpack
               ___fldiv (ARG)
                 ___flpack
               ___flpack (ARG)
               _frexp (ARG)
             ___flpack (ARG)
             _frexp (ARG)
           ___flmul (ARG)
             ___awtofl (ARG)
               ___flpack
             ___fldiv (ARG)
               ___flpack
             ___flpack (ARG)
             _frexp (ARG)
         ___fltol
           ___fldiv (ARG)
             ___flpack
           _log10 (ARG)
             ___flmul
               ___awtofl (ARG)
                 ___flpack
               ___fldiv (ARG)
                 ___flpack
               ___flpack (ARG)
               _frexp (ARG)
             _log
               ___awtofl
                 ___flpack
               ___fladd
                 ___awtofl (ARG)
                   ___flpack
                 ___flmul (ARG)
                   ___awtofl (ARG)
                     ___flpack
                   ___fldiv (ARG)
                     ___flpack
                   ___flpack (ARG)
                   _frexp (ARG)
                 ___flpack (ARG)
                 _frexp (ARG)
               ___flge
               ___flmul
                 ___awtofl (ARG)
                   ___flpack
                 ___fldiv (ARG)
                   ___flpack
                 ___flpack (ARG)
                 _frexp (ARG)
               _eval_poly
                 ___fladd
                   ___awtofl (ARG)
                     ___flpack
                   ___flmul (ARG)
                     ___awtofl (ARG)
                       ___flpack
                     ___fldiv (ARG)
                       ___flpack
                     ___flpack (ARG)
                     _frexp (ARG)
                   ___flpack (ARG)
                   _frexp (ARG)
                 ___flmul
                   ___awtofl (ARG)
                     ___flpack
                   ___fldiv (ARG)
                     ___flpack
                   ___flpack (ARG)
                   _frexp (ARG)
               _frexp
         _eval_poly
           ___fladd
             ___awtofl (ARG)
               ___flpack
             ___flmul (ARG)
               ___awtofl (ARG)
                 ___flpack
               ___fldiv (ARG)
                 ___flpack
               ___flpack (ARG)
               _frexp (ARG)
             ___flpack (ARG)
             _frexp (ARG)
           ___flmul
             ___awtofl (ARG)
               ___flpack
             ___fldiv (ARG)
               ___flpack
             ___flpack (ARG)
             _frexp (ARG)
         _floor
           ___altofl
             ___flpack
             ___fltol (ARG)
               ___fldiv (ARG)
                 ___flpack
               _log10 (ARG)
                 ___flmul
                   ___awtofl (ARG)
                     ___flpack
                   ___fldiv (ARG)
                     ___flpack
                   ___flpack (ARG)
                   _frexp (ARG)
                 _log
                   ___awtofl
                     ___flpack
                   ___fladd
                     ___awtofl (ARG)
                       ___flpack
                     ___flmul (ARG)
                       ___awtofl (ARG)
                         ___flpack
                       ___fldiv (ARG)
                         ___flpack
                       ___flpack (ARG)
                       _frexp (ARG)
                     ___flpack (ARG)
                     _frexp (ARG)
                   ___flge
                   ___flmul
                     ___awtofl (ARG)
                       ___flpack
                     ___fldiv (ARG)
                       ___flpack
                     ___flpack (ARG)
                     _frexp (ARG)
                   _eval_poly
                     ___fladd
                       ___awtofl (ARG)
                         ___flpack
                       ___flmul (ARG)
                         ___awtofl (ARG)
                           ___flpack
                         ___fldiv (ARG)
                           ___flpack
                         ___flpack (ARG)
                         _frexp (ARG)
                       ___flpack (ARG)
                       _frexp (ARG)
                     ___flmul
                       ___awtofl (ARG)
                         ___flpack
                       ___fldiv (ARG)
                         ___flpack
                       ___flpack (ARG)
                       _frexp (ARG)
                   _frexp
           ___fladd
             ___awtofl (ARG)
               ___flpack
             ___flmul (ARG)
               ___awtofl (ARG)
                 ___flpack
               ___fldiv (ARG)
                 ___flpack
               ___flpack (ARG)
               _frexp (ARG)
             ___flpack (ARG)
             _frexp (ARG)
           ___fldiv (ARG)
             ___flpack
           ___flge (ARG)
           ___fltol (ARG)
             ___fldiv (ARG)
               ___flpack
             _log10 (ARG)
               ___flmul
                 ___awtofl (ARG)
                   ___flpack
                 ___fldiv (ARG)
                   ___flpack
                 ___flpack (ARG)
                 _frexp (ARG)
               _log
                 ___awtofl
                   ___flpack
                 ___fladd
                   ___awtofl (ARG)
                     ___flpack
                   ___flmul (ARG)
                     ___awtofl (ARG)
                       ___flpack
                     ___fldiv (ARG)
                       ___flpack
                     ___flpack (ARG)
                     _frexp (ARG)
                   ___flpack (ARG)
                   _frexp (ARG)
                 ___flge
                 ___flmul
                   ___awtofl (ARG)
                     ___flpack
                   ___fldiv (ARG)
                     ___flpack
                   ___flpack (ARG)
                   _frexp (ARG)
                 _eval_poly
                   ___fladd
                     ___awtofl (ARG)
                       ___flpack
                     ___flmul (ARG)
                       ___awtofl (ARG)
                         ___flpack
                       ___fldiv (ARG)
                         ___flpack
                       ___flpack (ARG)
                       _frexp (ARG)
                     ___flpack (ARG)
                     _frexp (ARG)
                   ___flmul
                     ___awtofl (ARG)
                       ___flpack
                     ___fldiv (ARG)
                       ___flpack
                     ___flpack (ARG)
                     _frexp (ARG)
                 _frexp
           _frexp (ARG)
         _ldexp
           ___flge
           ___flneg
           _eval_poly (ARG)
             ___fladd
               ___awtofl (ARG)
                 ___flpack
               ___flmul (ARG)
                 ___awtofl (ARG)
                   ___flpack
                 ___fldiv (ARG)
                   ___flpack
                 ___flpack (ARG)
                 _frexp (ARG)
               ___flpack (ARG)
               _frexp (ARG)
             ___flmul
               ___awtofl (ARG)
                 ___flpack
               ___fldiv (ARG)
                 ___flpack
               ___flpack (ARG)
               _frexp (ARG)
         _log (ARG)
           ___awtofl
             ___flpack
           ___fladd
             ___awtofl (ARG)
               ___flpack
             ___flmul (ARG)
               ___awtofl (ARG)
                 ___flpack
               ___fldiv (ARG)
                 ___flpack
               ___flpack (ARG)
               _frexp (ARG)
             ___flpack (ARG)
             _frexp (ARG)
           ___flge
           ___flmul
             ___awtofl (ARG)
               ___flpack
             ___fldiv (ARG)
               ___flpack
             ___flpack (ARG)
             _frexp (ARG)
           _eval_poly
             ___fladd
               ___awtofl (ARG)
                 ___flpack
               ___flmul (ARG)
                 ___awtofl (ARG)
                   ___flpack
                 ___fldiv (ARG)
                   ___flpack
                 ___flpack (ARG)
                 _frexp (ARG)
               ___flpack (ARG)
               _frexp (ARG)
             ___flmul
               ___awtofl (ARG)
                 ___flpack
               ___fldiv (ARG)
                 ___flpack
               ___flpack (ARG)
               _frexp (ARG)
           _frexp
       _log
         ___awtofl
           ___flpack
         ___fladd
           ___awtofl (ARG)
             ___flpack
           ___flmul (ARG)
             ___awtofl (ARG)
               ___flpack
             ___fldiv (ARG)
               ___flpack
             ___flpack (ARG)
             _frexp (ARG)
           ___flpack (ARG)
           _frexp (ARG)
         ___flge
         ___flmul
           ___awtofl (ARG)
             ___flpack
           ___fldiv (ARG)
             ___flpack
           ___flpack (ARG)
           _frexp (ARG)
         _eval_poly
           ___fladd
             ___awtofl (ARG)
               ___flpack
             ___flmul (ARG)
               ___awtofl (ARG)
                 ___flpack
               ___fldiv (ARG)
                 ___flpack
               ___flpack (ARG)
               _frexp (ARG)
             ___flpack (ARG)
             _frexp (ARG)
           ___flmul
             ___awtofl (ARG)
               ___flpack
             ___fldiv (ARG)
               ___flpack
             ___flpack (ARG)
             _frexp (ARG)
         _frexp
   _indicator
     _lcd_gotoxy
       _lcd_command
         _lcd_send
           _lcd_write4bits
     _lcd_puts
       _lcd_putch
         _lcd_send
           _lcd_write4bits
   _lcd_begin
     _lcd_command
       _lcd_send
         _lcd_write4bits
     _lcd_write4bits
   _lcd_clear
     _lcd_command
       _lcd_send
         _lcd_write4bits
   _lcd_gotoxy
     _lcd_command
       _lcd_send
         _lcd_write4bits
   _lcd_init
   _lcd_puts
     _lcd_putch
       _lcd_send
         _lcd_write4bits
   _measure_capacitance
     ___fldiv
       ___flpack
     ___flge
     ___flmul
       ___awtofl (ARG)
         ___flpack
       ___fldiv (ARG)
         ___flpack
       ___flpack (ARG)
       _frexp (ARG)
     ___flsub
       ___awtofl (ARG)
         ___flpack
       ___fladd (ARG)
         ___awtofl (ARG)
           ___flpack
         ___flmul (ARG)
           ___awtofl (ARG)
             ___flpack
           ___fldiv (ARG)
             ___flpack
           ___flpack (ARG)
           _frexp (ARG)
         ___flpack (ARG)
         _frexp (ARG)
       ___flmul (ARG)
         ___awtofl (ARG)
           ___flpack
         ___fldiv (ARG)
           ___flpack
         ___flpack (ARG)
         _frexp (ARG)
     ___fltol
       ___fldiv (ARG)
         ___flpack
       _log10 (ARG)
         ___flmul
           ___awtofl (ARG)
             ___flpack
           ___fldiv (ARG)
             ___flpack
           ___flpack (ARG)
           _frexp (ARG)
         _log
           ___awtofl
             ___flpack
           ___fladd
             ___awtofl (ARG)
               ___flpack
             ___flmul (ARG)
               ___awtofl (ARG)
                 ___flpack
               ___fldiv (ARG)
                 ___flpack
               ___flpack (ARG)
               _frexp (ARG)
             ___flpack (ARG)
             _frexp (ARG)
           ___flge
           ___flmul
             ___awtofl (ARG)
               ___flpack
             ___fldiv (ARG)
               ___flpack
             ___flpack (ARG)
             _frexp (ARG)
           _eval_poly
             ___fladd
               ___awtofl (ARG)
                 ___flpack
               ___flmul (ARG)
                 ___awtofl (ARG)
                   ___flpack
                 ___fldiv (ARG)
                   ___flpack
                 ___flpack (ARG)
                 _frexp (ARG)
               ___flpack (ARG)
               _frexp (ARG)
             ___flmul
               ___awtofl (ARG)
                 ___flpack
               ___fldiv (ARG)
                 ___flpack
               ___flpack (ARG)
               _frexp (ARG)
           _frexp
     ___lwtofl
       ___flpack
       _measure_freq (ARG)
         _format_number
           ___lwdiv
           ___lwmod
           _format_putchar *
           _lcd_putch *
             _lcd_send
               _lcd_write4bits
           _output_putch *
             _lcd_putch
               _lcd_send
                 _lcd_write4bits
         _lcd_gotoxy
           _lcd_command
             _lcd_send
               _lcd_write4bits
         _put_str
           _output_putch
             _lcd_putch
               _lcd_send
                 _lcd_write4bits
         _timer0_read_ps
     _lcd_gotoxy
       _lcd_command
         _lcd_send
           _lcd_write4bits
     _measure_freq
       _format_number
         ___lwdiv
         ___lwmod
         _format_putchar *
         _lcd_putch *
           _lcd_send
             _lcd_write4bits
         _output_putch *
           _lcd_putch
             _lcd_send
               _lcd_write4bits
       _lcd_gotoxy
         _lcd_command
           _lcd_send
             _lcd_write4bits
       _put_str
         _output_putch
           _lcd_putch
             _lcd_send
               _lcd_write4bits
       _timer0_read_ps
     _print_reading
       ___lwdiv
       ___lwmod
       _format_number
         ___lwdiv
         ___lwmod
         _format_putchar *
         _lcd_putch *
           _lcd_send
             _lcd_write4bits
         _output_putch *
           _lcd_putch
             _lcd_send
               _lcd_write4bits
       _lcd_gotoxy
         _lcd_command
           _lcd_send
             _lcd_write4bits
       _lcd_puts
         _lcd_putch
           _lcd_send
             _lcd_write4bits
     _print_unit
       _lcd_gotoxy
         _lcd_command
           _lcd_send
             _lcd_write4bits
       _uart_puts
         _uart_putch
     _put_str
       _output_putch
         _lcd_putch
           _lcd_send
             _lcd_write4bits
   _measure_inductance
     ___fldiv
       ___flpack
     ___flge
     ___flmul
       ___awtofl (ARG)
         ___flpack
       ___fldiv (ARG)
         ___flpack
       ___flpack (ARG)
       _frexp (ARG)
     ___flsub
       ___awtofl (ARG)
         ___flpack
       ___fladd (ARG)
         ___awtofl (ARG)
           ___flpack
         ___flmul (ARG)
           ___awtofl (ARG)
             ___flpack
           ___fldiv (ARG)
             ___flpack
           ___flpack (ARG)
           _frexp (ARG)
         ___flpack (ARG)
         _frexp (ARG)
       ___flmul (ARG)
         ___awtofl (ARG)
           ___flpack
         ___fldiv (ARG)
           ___flpack
         ___flpack (ARG)
         _frexp (ARG)
     ___fltol
       ___fldiv (ARG)
         ___flpack
       _log10 (ARG)
         ___flmul
           ___awtofl (ARG)
             ___flpack
           ___fldiv (ARG)
             ___flpack
           ___flpack (ARG)
           _frexp (ARG)
         _log
           ___awtofl
             ___flpack
           ___fladd
             ___awtofl (ARG)
               ___flpack
             ___flmul (ARG)
               ___awtofl (ARG)
                 ___flpack
               ___fldiv (ARG)
                 ___flpack
               ___flpack (ARG)
               _frexp (ARG)
             ___flpack (ARG)
             _frexp (ARG)
           ___flge
           ___flmul
             ___awtofl (ARG)
               ___flpack
             ___fldiv (ARG)
               ___flpack
             ___flpack (ARG)
             _frexp (ARG)
           _eval_poly
             ___fladd
               ___awtofl (ARG)
                 ___flpack
               ___flmul (ARG)
                 ___awtofl (ARG)
                   ___flpack
                 ___fldiv (ARG)
                   ___flpack
                 ___flpack (ARG)
                 _frexp (ARG)
               ___flpack (ARG)
               _frexp (ARG)
             ___flmul
               ___awtofl (ARG)
                 ___flpack
               ___fldiv (ARG)
                 ___flpack
               ___flpack (ARG)
               _frexp (ARG)
           _frexp
     ___lwtofl
       ___flpack
       _measure_freq (ARG)
         _format_number
           ___lwdiv
           ___lwmod
           _format_putchar *
           _lcd_putch *
             _lcd_send
               _lcd_write4bits
           _output_putch *
             _lcd_putch
               _lcd_send
                 _lcd_write4bits
         _lcd_gotoxy
           _lcd_command
             _lcd_send
               _lcd_write4bits
         _put_str
           _output_putch
             _lcd_putch
               _lcd_send
                 _lcd_write4bits
         _timer0_read_ps
     _lcd_gotoxy
       _lcd_command
         _lcd_send
           _lcd_write4bits
     _measure_freq
       _format_number
         ___lwdiv
         ___lwmod
         _format_putchar *
         _lcd_putch *
           _lcd_send
             _lcd_write4bits
         _output_putch *
           _lcd_putch
             _lcd_send
               _lcd_write4bits
       _lcd_gotoxy
         _lcd_command
           _lcd_send
             _lcd_write4bits
       _put_str
         _output_putch
           _lcd_putch
             _lcd_send
               _lcd_write4bits
       _timer0_read_ps
     _print_reading
       ___lwdiv
       ___lwmod
       _format_number
         ___lwdiv
         ___lwmod
         _format_putchar *
         _lcd_putch *
           _lcd_send
             _lcd_write4bits
         _output_putch *
           _lcd_putch
             _lcd_send
               _lcd_write4bits
       _lcd_gotoxy
         _lcd_command
           _lcd_send
             _lcd_write4bits
       _lcd_puts
         _lcd_putch
           _lcd_send
             _lcd_write4bits
     _print_unit
       _lcd_gotoxy
         _lcd_command
           _lcd_send
             _lcd_write4bits
       _uart_puts
         _uart_putch
     _put_str
       _output_putch
         _lcd_putch
           _lcd_send
             _lcd_write4bits
   _timer0_init
   _timer2_init
   _uart_init
     _uart_enable
   _uart_puts
     _uart_putch

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60     14      44       8       70.8%
BITBANK3            60      0       0       7        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0       9        0.0%
BITBANK2            60      0       0      12        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50     45      50       6      100.0%
BITBANK1            50      0       0       5        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               4F     4F      4F       4      100.0%
BITBANK0            4F      0       0       3        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      A       C       1       85.7%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      EF      11        0.0%
ABS                  0      0      EF      10        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V1.34 build -361300703 
Symbol Table                                                                                   Wed Sep 11 20:00:24 2019

                ___altofl@sign 00B6                   ___fldiv@cntr 0035                              pc 0002  
                 ___fldiv@sign 0037                             _F1 00EC                             _F2 0190  
                           _F3 00E5                             fsr 0004                   ___flpack@arg 0072  
                 ___flpack@exp 0076                    _putchar_ptr 007B                            l528 0332  
                          l902 09CF                            l817 0D65                            l829 0D93  
                          l853 111C                            l878 16B7                            _GIE 005F  
                          _RB2 0032                            _RB3 0033                            _RB4 0034  
                          _RC3 003B                            _RB5 0035                            _RC4 003C  
                          _RB6 0036                            _RB7 0037                            _RC6 003E  
                 __CFG_CPD$OFF 0000                 lcd_begin@lines 0021                            _TX9 04C6  
                          _exp 0805                            _log 050B                            _isr 00F8  
                          _pow 05C7                            fsr0 0004                            indf 0000  
                 __CFG_FOSC$HS 0000             timer0_read_ps@prev 0021                   ___flmul@cntr 0049  
                 ___flmul@sign 004A                   __CFG_LVP$OFF 0000         __end_of_lcd_write4bits 07DD  
                ___flpack@sign 0077                   ___fltol@exp1 00B1                           l3111 1FB3  
                         l4003 064C                           l3035 1F3E                           l3141 1F51  
                         l3109 1FA4                           l4009 0666                           l4121 1FFA  
                         l4105 1FE2                           l2451 1698                           l4115 1FF4  
                         l3511 0D82                           l2543 17B8                           l3521 0D98  
                         l3505 0D6A                           l4225 02F5                           l2529 0E51  
                         l2545 17BD                           l4137 04B9                           l4153 0721  
                         l3515 0D91                           l3507 0D70                           l3611 115D  
                         l2571 17F1                           l2563 17E3                           l4139 035D  
                         l4171 0754                           l4331 156A                           l3517 0D87  
                         l3509 0D75                           l3701 098D                           l4077 1F2C  
                         l4245 0A95                           l2727 1F74                           l2751 00E0  
                         l3623 1608                           l3535 0E8E                           l2559 17DB  
                         l4263 0C29                           l4271 0C82                           l4327 153A  
                         l4335 1598                           l4415 0209                           l3545 10BD  
                         l3641 161A                           l3713 0CF6                           l2569 17E7  
                         l4337 159C                           l4097 1FD5                           l4089 1FCA  
                         l4417 020E                           l4409 01F9                           l2739 1F8B  
                         l3555 10D5                           l3619 15F4                           l3731 0D06  
                         l4179 077B                           l4267 0C56                           l4291 11C5  
                         l3573 10F3                           l3549 10C6                           l3653 163E  
                         l3645 1630                           l3709 0CE2                           l2759 00F3  
                         l3575 10F9                           l3567 10E3                           l3809 0DD3  
                         l2777 030B                           l3593 112A                           l3585 1112  
                         l3577 10FE                           l3657 1654                           l3905 0525  
                         l3817 0FE7                           l3499 0E33                           l3819 0F7D  
                         l3587 1118                           l3579 1102                           l3845 0FBC  
                         l3829 0F86                           l3909 0532                           l3749 0E0A  
                         l3765 0ED7                           l3757 0EB9                           l3925 0813  
                         l3847 0FC4                           l3599 1138                           l3679 09D6  
                         l3935 0834                           l3849 0FCF                           l3865 0DE2  
                         l3873 177E                           l3689 0A3D                           l3945 0883  
                         l3891 1790                           l3787 0F1C                           l3939 0854  
                         ?_exp 00C1                           l3965 095E                           ?_log 006A  
                         l3799 108D                           l3991 05E4                           l3889 1777  
                         l3969 0227                           ?_isr 0070                           l3997 05F2  
                         ?_pow 00D0                           STR_2 00C8                           STR_3 00CE  
                         STR_4 00CB                           STR_5 00BC                           STR_6 00C5  
                         STR_7 00BF                           STR_8 00C2                           STR_9 00B0  
                         u3010 07B5                           _T0SE 040C                           u3004 07AD  
                         u3030 07C0                           u2055 17C6                           u3024 07B8  
                         u3050 07CB                           _CCal 01C8                           u3044 07C3  
                         u2325 1F7D                           u3070 0E30                           u3064 07CE  
                         u4107 0725                           u2700 1FA1                           u2365 00E6  
                         u4117 0738                           u4207 16F5                           u4127 0743  
                         u2720 1FB0                           u4217 1700                           u4137 074C  
                         u4307 07D9                           u4227 170B                           u4147 075F  
                         u2740 1FBC                           u4237 1716                           u4157 076F  
                         u4247 1721                           u3535 0D19                           u4167 0796  
                         u4257 172C                           u4177 16D2                           u4267 1737  
                         u4187 16DF                           _PEIE 005E                           u4277 1742  
                         u4197 16EA                           u4287 032B                           u4297 07D1  
                         u3585 0EE0                           u3825 0957                           _RCIE 0465  
                         u3780 086B                           u2990 07AA                           u3790 086C  
                         u3865 0644                           _TMR0 0001                           _TMR2 0011  
                         _TXEN 04C5                           _TXIF 0064                           _bres 01CC  
                         _main 0156                           btemp 007E                           exp@x 00C1  
                         log@x 006A          __size_of_output_putch 0003                           ltemp 007E  
                         pow@x 00D0                           pow@y 00D4     __end_of_measure_inductance 15E0  
                         start 000C                           ttemp 007E                           wtemp 007E  
          timer0_read_ps@count 0022              _format_number$169 0046                _timer0_init$124 0021  
              _timer0_init$125 0023                _timer0_init$126 0025                _timer0_init$127 0027  
          lcd_write4bits@value 0073                   lcd_send@mode 0074                          ??_exp 007A  
                        ??_log 007A                          ??_isr 0070                          ??_pow 007A  
                ___fltol@sign1 00B0                __end_of___fladd 1176                          ?_main 0070  
              __end_of___fldiv 0D48                __end_of___flneg 0EAE                          STR_10 00A1  
                        STR_11 00B8                          STR_20 00B0                          STR_12 00A3  
                        STR_13 0096                          STR_21 0064                          STR_22 00B0  
                        STR_14 00AD                          STR_23 00A7                          STR_15 00A0  
                        STR_24 008C                          STR_25 0073                  __CFG_WDTE$OFF 0000  
                        STR_18 00B3                          STR_19 0080                __end_of___flmul 1679  
              __end_of___flsub 0E26                __end_of___fltol 1800                          _CMCON 009C  
              __end_of___lwdiv 1F90                          i1l260 014F                __end_of___lwmod 00F8  
                        _RCSTA 0018               lcd_begin@dotsize 0077                          _SPBRG 0099  
                        _PORTC 0007                          _TRISA 0085                          _TRISC 0087  
                        _SSPEN 00A5                          _TXREG 0019                          _TXSTA 0098  
                ___awtofl@sign 0078                          _nRBPU 040F                          _log10 04C0  
                        _blink 00E9                          _floor 09A2                          _ldexp 0EAE  
                        _frexp 0E40                   _output_putch 0DFF                ?_lcd_write4bits 0070  
                        _msecs 0194                          fpbase 0705                 __CFG_BOREN$OFF 0000  
                        pclath 000A                          ltemp0 007E                          ltemp1 0082  
                        ltemp2 0086                          ltemp3 0080                          pow@yi 00E1  
              format_number@di 0048                          ttemp0 007E                          ttemp1 0081  
                        ttemp2 0084                          ttemp3 0087                          ttemp4 007F  
                        status 0003                __end_of_put_str 0DFF                          wtemp0 007E  
                        wtemp1 0080                          wtemp2 0082                          wtemp3 0084  
                        wtemp4 0086                          wtemp5 0088                          wtemp6 007F  
              ??_print_reading 007A                    exp@exponent 00CD                    ldexp@newexp 006E  
              __initialization 07DF                format_putchar@c 0077                    log@exponent 006E  
                 __end_of_main 0227               format_double@num 01B4                  lcd_gotoxy@col 0021  
                lcd_gotoxy@row 0077                  ?_measure_freq 004A         __size_of_format_double 0187  
                       ??_main 007A                  lcd_send@value 0075            format_double@weight 01C0  
       __size_of_format_number 0068            lcd_init@fourbitmode 0072                         ?_log10 00A0  
                       ?_floor 00B7                         ?_ldexp 006A                         ?_frexp 0072  
             __end_of___altofl 0EA5               __end_of___flpack 0DAC               __end_of___awtofl 09A2  
             __end_of___lltofl 0700                         i1l3401 0134                         i1l3409 014C  
                       _INTCON 000B               __end_of___lwtofl 0D5C                         u294_20 0123  
                       u295_24 0126                         _TMR0IF 005A                         _TMR2IE 0461  
                       _TMR2IF 0061                         _TMR2ON 0092             entry__output_putch 0706  
                       _TRISB2 0432                         _TRISB3 0433                         _TRISB4 0434  
                       _TRISC3 043B                         _TRISB5 0435                         _TRISB6 0436  
                       _TRISB7 0437                         _TRISC6 043E                         _TRISC7 043F  
             __end_of__fptable 070F               __end_of_lcd_init 1F66           __size_of_lcd_command 0003  
             __end_of_lcd_send 0E3C                         ___flge 1679               __end_of_lcd_puts 1000  
                    ??___fladd 0053                      ??___fldiv 002D                      ??___flneg 0076  
                    ??___flmul 0040                      ??___flsub 0079                      ??___fltol 00AC  
                 ?_timer0_init 0070                 ??_measure_freq 004C                      ??___lwdiv 0076  
                 ?_timer2_init 0070                      ??___lwmod 0076                         _buffer 01A2  
                       log10@x 00A0                   ?_uart_enable 0070                         floor@i 00BB  
                       floor@x 00B7                         fptable 0700                   __pdataCOMMON 007B  
                       fptotal 0006             timer2_init@ps_mode 0073                         saved_w 007E  
             format_number@buf 0025               format_number@pad 0024        _measure_inductance$1051 00BA  
      _measure_inductance$1052 00CB        _measure_inductance$1053 00CF        _measure_inductance$1054 00D3  
      _measure_inductance$1055 00BE        _measure_inductance$1056 00C2        _measure_inductance$1057 00C6  
                    ??_put_str 0078                     ___fladd@f1 004B                     ___fladd@f2 004F  
                   ___flge@ff1 0072                     ___flge@ff2 0076               __end_ofexp@coeff 0040  
                _format_double 0339               __end_oflog@coeff 0064                     ___altofl@c 00B2  
                   ___fldiv@f1 0029                     ___fldiv@f2 0025                     ___fldiv@f3 0031  
      __end_of__initialization 07FC                     ___flneg@f1 0072                  _format_number 0F7D  
                   ___flmul@f1 0038                     ___flmul@f2 003C                   eval_poly@res 0066  
                   ___flsub@f1 005E                     ___flsub@f2 005A                     ___fltol@f1 00A8  
                   ___awtofl@c 0025         measure_capacitance@Cin 00C1   __size_of_measure_capacitance 0286  
       measure_capacitance@var 00BF          lcd_gotoxy@row_offsets 0022                 __pcstackCOMMON 0070  
           __size_of_calibrate 00C8                   __pidataBANK3 0000                     ___lltofl@c 0025  
           __size_of_delay10ms 0001                  __end_of_log10 050B                  __end_of_floor 0A48  
                __end_of_ldexp 0F3F                  __end_of_frexp 0E7E                     ___lwtofl@c 0050  
           __size_of_lcd_begin 0094             __size_of_lcd_clear 0010                        ??_log10 007A  
           __size_of_lcd_putch 0004                        ??_floor 007A                        ??_ldexp 00A0  
                      ??_frexp 0077                     _log10$1058 00A4                     __pbssBANK1 00E5  
               ?_format_double 01B4                     __pbssBANK3 0190             __size_of_eval_poly 008D  
           __size_of_indicator 0018        __size_of_format_putchar 0001              fp__format_putchar 070C  
               ?_format_number 0021                 print_unit@unit 0070                entry__lcd_putch 0709  
                   __pmaintext 0156                        ?___flge 0072                     __pintentry 0004  
                    ?___altofl 00B2        __size_of_timer0_read_ps 003A                      ?___flpack 0072  
                    ?___awtofl 0025                      ?___lltofl 0025             _measure_inductance 1176  
                      _T2CKPS0 0090                        _T2CKPS1 0091                      ?___lwtofl 0050  
           __size_of_uart_init 000E               ??_lcd_write4bits 0072             __size_of_uart_puts 0017  
                   _lcd_gotoxy 0DAC            ?_measure_inductance 0070              __end_of_calibrate 0309  
                    ?_lcd_init 0070                      ?_lcd_send 0074                        _TOUTPS0 0093  
                      _TOUTPS1 0094                        _TOUTPS2 0095              __end_of_delay10ms 030A  
                    ?_lcd_puts 0070                     __stringtab 0012           __end_of_measure_freq 176F  
                   calibrate@i 0054           ??_measure_inductance 007A              __end_of_lcd_begin 07A3  
            __end_of_lcd_clear 0331                __size_of___flge 0050                        ___fladd 1096  
            __end_of_lcd_putch 0E40                        ___fldiv 0CCE                        ___flneg 0EA5  
                      ___flmul 15E0                        ___flsub 0E02                        ___fltol 17A9  
                      ___lwdiv 1F66                        ___lwmod 00D4                     ??___altofl 007A  
                   ??___flpack 0021                        _exp$786 00C9                     ??___awtofl 0078  
            __end_of_eval_poly 1096              __end_of_indicator 1F30           __size_of_timer0_init 0040  
                   ??___lltofl 0078                        __ptext1 1F30                        __ptext2 1F3E  
                      __ptext3 1F90                        __ptext4 1FC0                        __ptext5 1176  
                      __ptext6 0A48                        __ptext7 0227                        __ptext8 0F3F  
                      __ptext9 1F49           __size_of_timer2_init 0030                     ??___lwtofl 007A  
                 __size_of_exp 017F                   __size_of_log 00BC                   __size_of_isr 005E  
                 __size_of_pow 0121           __size_of_uart_enable 000B                        _seconds 0198  
               lcd_putch@value 0077                ??_format_double 007A                        _put_str 0DDD  
                      clrloop0 1002                     ??_lcd_init 0072                     ??_lcd_send 0075  
                   ??_lcd_puts 0078           end_of_initialization 07FC                ??_format_number 0079  
                      exp@sign 00CF                      _LCD_lines 01A0                   _lcd_init$338 0073  
               lcd_puts@string 0079              __end_of_uart_init 1F3E              __end_of_uart_puts 0321  
                      pow@sign 00E0  measure_inductance@denominator 00B6          __end_of_print_reading 0F7D  
            format_number@base 0023                     _uart_putch 0331                     _print_unit 0227  
          _measure_capacitance 0A48                    ?_lcd_gotoxy 0077                    ___fldiv@exp 0036  
               _format_putchar 07DD                    ___flmul@exp 0044                  ??_lcd_command 0076  
         ?_measure_capacitance 0070        measure_capacitance@unit 00BE                 format_double@m 01C6  
       measure_inductance@unit 00CA                 __end_of___flge 16C9                 _timer0_read_ps 176F  
                __pidataCOMMON 0000                lcd_gotoxy@F1126 01D0                     floor@expon 00BF  
              fp__output_putch 0706                 format_number@i 0049                 format_number@n 0021  
          start_initialization 07DF                     eval_poly@d 005E                     eval_poly@n 005F  
                   eval_poly@x 005A          __size_of_measure_freq 00A6                     ldexp@value 006A  
                  __end_of_exp 0984                    __end_of_log 05C7                    __end_of_isr 0156  
                  __end_of_pow 06E8                   _LCD_function 007A         __end_of_format_putchar 07DE  
           format_double@digit 01C4                     frexp@value 0072          ??_measure_capacitance 007A  
       __end_of_timer0_read_ps 17A9                       ??___flge 0021            __size_of_lcd_gotoxy 0031  
          __end_of_lcd_command 0E29                    __pdataBANK3 01D0                   _measure_freq 16C9  
                  ?_uart_putch 0070       print_reading@measurement 004A              __size_of___altofl 0027  
            __size_of___flpack 0050              __size_of___awtofl 001E                    ?_print_unit 0070  
            __size_of___lltofl 0018                    __pbssCOMMON 007A                      ___latbits 0002  
            __size_of___lwtofl 0014                  __pcstackBANK0 0021                  __pcstackBANK1 00A0  
                __pcstackBANK3 01B4              __size_of__fptable 000F                  ?_output_putch 0077  
              ?_format_putchar 0077              measure_freq@count 004E               lcd_command@value 0076  
            __size_of_lcd_init 001D              __size_of_lcd_send 0013                      _calibrate 0241  
            __size_of_lcd_puts 001B                      _delay10ms 0309                      __pnvBANK3 01C8  
             ___lwdiv@dividend 0074                      __pfunctab 0700                ?_timer0_read_ps 0072  
                     ?___fladd 004B                       ?___fldiv 0025                       ?___flneg 0072  
                     ?___flmul 0038                       ?___flsub 005A                       ?___fltol 00A8  
                     ?___lwdiv 0072                       ?___lwmod 0072                      _lcd_begin 070F  
                    _lcd_clear 0321                      __pstrings 0012                      _ldexp$686 00A2  
                    _lcd_putch 0E3C                      _eval_poly 1009                  output_putch@c 0077  
                    _indicator 1F18                 ??_output_putch 0078               ___lwdiv@quotient 0076  
               __size_of_log10 004B                       ?_put_str 0070                 __size_of_floor 00A6  
               __size_of_ldexp 0091                 __size_of_frexp 003E              interrupt_function 0004  
                   ?_calibrate 0070            __size_of_uart_putch 0008                     ?_delay10ms 0070  
                     _LCD_ctrl 00EB                       _LCD_mode 01A1                      clear_ram0 1001  
                  _lcd_command 0E26            __size_of_print_unit 001A    __size_of_measure_inductance 046A  
                    _uart_init 1F30                  ??_timer0_init 0072                  ??_timer2_init 0072  
                    _uart_puts 030A              indicator@indicate 0026                     ?_lcd_begin 0077  
                   ?_lcd_clear 0070                     uart_puts@s 0073                  ??_uart_enable 0072  
                   ?_lcd_putch 0077                    __stringbase 0017                     ?_eval_poly 005A  
                   ?_indicator 0070                      lcd_puts@i 0078                   ??_lcd_gotoxy 0078  
        measure_inductance@Lin 00D9          measure_inductance@var 00D7          __end_of_format_double 04C0  
         format_number@padchar 0045        __size_of_lcd_write4bits 003A          __end_of_format_number 0FE5  
                    frexp@eptr 0076                     ?_uart_init 0070                     ?_uart_puts 0070  
           __end_of_lcd_gotoxy 0DDD               __size_of___fladd 00E0               __size_of___fldiv 007A  
             __size_of___flneg 0009               __size_of___flmul 0099               __size_of___flsub 0024  
             __size_of___fltol 0057                       ___altofl 0E7E                       ___flpack 0D5C  
             __size_of___lwdiv 002A               __size_of___lwmod 0024                       ___awtofl 0984  
           __end_of__stringtab 0018                       ___lltofl 06E8                  timer2_init@ps 0074  
                     ___lwtofl 0D48            __end_of_timer0_init 2000                       _exp$1061 00C5  
          __end_of_timer2_init 1FC0                       __fptable 0700                ___lwdiv@divisor 0072  
              ___lwdiv@counter 0078         __size_of_print_reading 003E           timer0_init@prescaler 0029  
          __end_of_uart_enable 1F49                       __ptext10 070F                       __ptext11 1F18  
                     __ptext20 0E7E                       __ptext12 0FE5                       __ptext21 0E02  
                     __ptext13 0339                       __ptext30 1679                       __ptext22 0CCE  
                     __ptext14 05C7                       __ptext31 0984                       __ptext23 06E8  
                     __ptext15 0805                       __ptext40 07DD                       __ptext32 0241  
                     __ptext24 04C0                       __ptext16 0EAE                       __ptext41 0E3C  
                     __ptext33 030A                       __ptext25 050B                       __ptext17 0EA5  
                     __ptext50 0D48                       __ptext42 0DFF                       __ptext34 0331  
                     __ptext26 0E40                       __ptext18 09A2                       __ptext51 0D5C  
                     __ptext43 00D4                       __ptext35 16C9                       __ptext27 1009  
                     __ptext19 17A9                       __ptext52 00F8                       __ptext44 1F66  
                     __ptext36 176F                       __ptext28 15E0                       __ptext45 0321  
                     __ptext37 0DDD                       __ptext29 1096                       __ptext46 0E26  
                     __ptext38 0DAC                       __ptext47 0E29                       __ptext39 0F7D  
                     __ptext48 07A3                       __ptext49 0309                       _lcd_init 1F49  
                     _lcd_send 0E29                       _pow$1060 00DC                       _pow$1059 00D8  
                     _lcd_puts 0FE5               __size_of_put_str 0022                    ??_calibrate 007A  
                __size_of_main 00D1                    ??_delay10ms 0072                       _msecpart 01CE  
                     _timer1of 019C           __end_of_output_putch 0E02                    ??_lcd_begin 0078  
                  ??_lcd_clear 0077                   ??_uart_putch 0072                    ??_lcd_putch 0077  
                     exp@coeff 0018          ___flmul@f3_as_product 0045                       log@coeff 0040  
  measure_inductance@numerator 00B2               ??_format_putchar 0078                   ??_print_unit 0078  
                  ??_eval_poly 0061                    ??_indicator 007A             _print_reading$1042 004C  
           _print_reading$1043 004E                       intlevel1 0700    __end_of_measure_capacitance 0CCE  
             ___lwmod@dividend 0074               ??_timer0_read_ps 0074             __end_of_uart_putch 0339  
                    stringcode 0012             __end_of_print_unit 0241                  _print_reading 0F3F  
                  ??_uart_init 0072                    ??_uart_puts 0073           delay10ms@period_10ms 0070  
                  _timer0_init 1FC0                    _timer2_init 1F90             _format_double$1046 01B8  
           _format_double$1047 01BC       _measure_capacitance$1050 00BA       _measure_capacitance$1048 00B2  
     _measure_capacitance$1049 00B6                       put_str@i 0021                       put_str@s 0023  
                  _uart_enable 1F3E                     _OPTION_REG 0081             timer0_init@ps_mode 002A  
              ___lwmod@divisor 0072                ___lwmod@counter 0076                       stringdir 0012  
                     stringtab 0012                 uart_putch@byte 0072                 _lcd_write4bits 07A3  
                 ___fladd@exp1 0059                   ___fladd@exp2 0058                   ___fladd@sign 0057  
                 ?_lcd_command 0070                   fp__lcd_putch 0709                 ?_print_reading 004A  
