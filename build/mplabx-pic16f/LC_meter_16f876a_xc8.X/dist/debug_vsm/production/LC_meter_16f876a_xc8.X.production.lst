

Microchip Technology PIC PRO Macro Assembler V1.34 build -361300703 
                                                                                               Wed Sep 18 15:33:06 2019

Microchip Technology Omniscient Code Generator (PRO mode) build 201502162209
     1                           	processor	16F876A
     2                           	opt	pw 120
     3                           	opt	pm
     4                           	psect	idataBANK3,global,class=CODE,delta=2
     5                           	psect	stringtext,global,reloc=256,class=STRCODE,delta=2
     6                           	psect	nvBANK3,global,class=BANK3,space=1,delta=1
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    10                           	psect	dataBANK3,global,class=BANK3,space=1,delta=1
    11                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    12                           	psect	clrtext,global,class=CODE,delta=2
    13                           	psect	cstackBANK3,global,class=BANK3,space=1,delta=1
    14                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1
    15                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    16                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    17                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    18                           	psect	maintext,global,class=CODE,split=1,delta=2
    19                           	psect	text1,local,class=CODE,merge=1,delta=2
    20                           	psect	text2,local,class=CODE,merge=1,delta=2
    21                           	psect	text3,local,class=CODE,merge=1,delta=2
    22                           	psect	text4,local,class=CODE,merge=1,delta=2
    23                           	psect	text6,local,class=CODE,merge=1,delta=2
    24                           	psect	text7,local,class=CODE,merge=1,delta=2
    25                           	psect	text12,local,class=CODE,merge=1,delta=2
    26                           	psect	text13,local,class=CODE,merge=1,delta=2
    27                           	psect	text14,local,class=CODE,merge=1,delta=2
    28                           	psect	text22,local,class=CODE,merge=1,delta=2
    29                           	psect	text25,local,class=CODE,merge=1,delta=2
    30                           	psect	text30,local,class=CODE,merge=1,delta=2
    31                           	psect	text32,local,class=CODE,merge=1,delta=2
    32                           	psect	text54,local,class=CODE,merge=1,delta=2
    33                           	psect	intentry,global,class=CODE,delta=2
    34                           	psect	pa_nodes,global,class=CODE,delta=2
    35                           	dabs	1,0x7E,2
    36  0000                     	;# 
    37  0001                     	;# 
    38  0002                     	;# 
    39  0003                     	;# 
    40  0004                     	;# 
    41  0005                     	;# 
    42  0006                     	;# 
    43  0007                     	;# 
    44  000A                     	;# 
    45  000B                     	;# 
    46  000C                     	;# 
    47  000D                     	;# 
    48  000E                     	;# 
    49  000E                     	;# 
    50  000F                     	;# 
    51  0010                     	;# 
    52  0011                     	;# 
    53  0012                     	;# 
    54  0013                     	;# 
    55  0014                     	;# 
    56  0015                     	;# 
    57  0015                     	;# 
    58  0016                     	;# 
    59  0017                     	;# 
    60  0018                     	;# 
    61  0019                     	;# 
    62  001A                     	;# 
    63  001B                     	;# 
    64  001B                     	;# 
    65  001C                     	;# 
    66  001D                     	;# 
    67  001E                     	;# 
    68  001F                     	;# 
    69  0081                     	;# 
    70  0085                     	;# 
    71  0086                     	;# 
    72  0087                     	;# 
    73  008C                     	;# 
    74  008D                     	;# 
    75  008E                     	;# 
    76  0091                     	;# 
    77  0092                     	;# 
    78  0093                     	;# 
    79  0094                     	;# 
    80  0098                     	;# 
    81  0099                     	;# 
    82  009C                     	;# 
    83  009D                     	;# 
    84  009E                     	;# 
    85  009F                     	;# 
    86  010C                     	;# 
    87  010D                     	;# 
    88  010E                     	;# 
    89  010F                     	;# 
    90  018C                     	;# 
    91  018D                     	;# 
    92  0000                     	;# 
    93  0001                     	;# 
    94  0002                     	;# 
    95  0003                     	;# 
    96  0004                     	;# 
    97  0005                     	;# 
    98  0006                     	;# 
    99  0007                     	;# 
   100  000A                     	;# 
   101  000B                     	;# 
   102  000C                     	;# 
   103  000D                     	;# 
   104  000E                     	;# 
   105  000E                     	;# 
   106  000F                     	;# 
   107  0010                     	;# 
   108  0011                     	;# 
   109  0012                     	;# 
   110  0013                     	;# 
   111  0014                     	;# 
   112  0015                     	;# 
   113  0015                     	;# 
   114  0016                     	;# 
   115  0017                     	;# 
   116  0018                     	;# 
   117  0019                     	;# 
   118  001A                     	;# 
   119  001B                     	;# 
   120  001B                     	;# 
   121  001C                     	;# 
   122  001D                     	;# 
   123  001E                     	;# 
   124  001F                     	;# 
   125  0081                     	;# 
   126  0085                     	;# 
   127  0086                     	;# 
   128  0087                     	;# 
   129  008C                     	;# 
   130  008D                     	;# 
   131  008E                     	;# 
   132  0091                     	;# 
   133  0092                     	;# 
   134  0093                     	;# 
   135  0094                     	;# 
   136  0098                     	;# 
   137  0099                     	;# 
   138  009C                     	;# 
   139  009D                     	;# 
   140  009E                     	;# 
   141  009F                     	;# 
   142  010C                     	;# 
   143  010D                     	;# 
   144  010E                     	;# 
   145  010F                     	;# 
   146  018C                     	;# 
   147  018D                     	;# 
   148  0000                     	;# 
   149  0001                     	;# 
   150  0002                     	;# 
   151  0003                     	;# 
   152  0004                     	;# 
   153  0005                     	;# 
   154  0006                     	;# 
   155  0007                     	;# 
   156  000A                     	;# 
   157  000B                     	;# 
   158  000C                     	;# 
   159  000D                     	;# 
   160  000E                     	;# 
   161  000E                     	;# 
   162  000F                     	;# 
   163  0010                     	;# 
   164  0011                     	;# 
   165  0012                     	;# 
   166  0013                     	;# 
   167  0014                     	;# 
   168  0015                     	;# 
   169  0015                     	;# 
   170  0016                     	;# 
   171  0017                     	;# 
   172  0018                     	;# 
   173  0019                     	;# 
   174  001A                     	;# 
   175  001B                     	;# 
   176  001B                     	;# 
   177  001C                     	;# 
   178  001D                     	;# 
   179  001E                     	;# 
   180  001F                     	;# 
   181  0081                     	;# 
   182  0085                     	;# 
   183  0086                     	;# 
   184  0087                     	;# 
   185  008C                     	;# 
   186  008D                     	;# 
   187  008E                     	;# 
   188  0091                     	;# 
   189  0092                     	;# 
   190  0093                     	;# 
   191  0094                     	;# 
   192  0098                     	;# 
   193  0099                     	;# 
   194  009C                     	;# 
   195  009D                     	;# 
   196  009E                     	;# 
   197  009F                     	;# 
   198  010C                     	;# 
   199  010D                     	;# 
   200  010E                     	;# 
   201  010F                     	;# 
   202  018C                     	;# 
   203  018D                     	;# 
   204  0000                     	;# 
   205  0001                     	;# 
   206  0002                     	;# 
   207  0003                     	;# 
   208  0004                     	;# 
   209  0005                     	;# 
   210  0006                     	;# 
   211  0007                     	;# 
   212  000A                     	;# 
   213  000B                     	;# 
   214  000C                     	;# 
   215  000D                     	;# 
   216  000E                     	;# 
   217  000E                     	;# 
   218  000F                     	;# 
   219  0010                     	;# 
   220  0011                     	;# 
   221  0012                     	;# 
   222  0013                     	;# 
   223  0014                     	;# 
   224  0015                     	;# 
   225  0015                     	;# 
   226  0016                     	;# 
   227  0017                     	;# 
   228  0018                     	;# 
   229  0019                     	;# 
   230  001A                     	;# 
   231  001B                     	;# 
   232  001B                     	;# 
   233  001C                     	;# 
   234  001D                     	;# 
   235  001E                     	;# 
   236  001F                     	;# 
   237  0081                     	;# 
   238  0085                     	;# 
   239  0086                     	;# 
   240  0087                     	;# 
   241  008C                     	;# 
   242  008D                     	;# 
   243  008E                     	;# 
   244  0091                     	;# 
   245  0092                     	;# 
   246  0093                     	;# 
   247  0094                     	;# 
   248  0098                     	;# 
   249  0099                     	;# 
   250  009C                     	;# 
   251  009D                     	;# 
   252  009E                     	;# 
   253  009F                     	;# 
   254  010C                     	;# 
   255  010D                     	;# 
   256  010E                     	;# 
   257  010F                     	;# 
   258  018C                     	;# 
   259  018D                     	;# 
   260  0000                     	;# 
   261  0001                     	;# 
   262  0002                     	;# 
   263  0003                     	;# 
   264  0004                     	;# 
   265  0005                     	;# 
   266  0006                     	;# 
   267  0007                     	;# 
   268  000A                     	;# 
   269  000B                     	;# 
   270  000C                     	;# 
   271  000D                     	;# 
   272  000E                     	;# 
   273  000E                     	;# 
   274  000F                     	;# 
   275  0010                     	;# 
   276  0011                     	;# 
   277  0012                     	;# 
   278  0013                     	;# 
   279  0014                     	;# 
   280  0015                     	;# 
   281  0015                     	;# 
   282  0016                     	;# 
   283  0017                     	;# 
   284  0018                     	;# 
   285  0019                     	;# 
   286  001A                     	;# 
   287  001B                     	;# 
   288  001B                     	;# 
   289  001C                     	;# 
   290  001D                     	;# 
   291  001E                     	;# 
   292  001F                     	;# 
   293  0081                     	;# 
   294  0085                     	;# 
   295  0086                     	;# 
   296  0087                     	;# 
   297  008C                     	;# 
   298  008D                     	;# 
   299  008E                     	;# 
   300  0091                     	;# 
   301  0092                     	;# 
   302  0093                     	;# 
   303  0094                     	;# 
   304  0098                     	;# 
   305  0099                     	;# 
   306  009C                     	;# 
   307  009D                     	;# 
   308  009E                     	;# 
   309  009F                     	;# 
   310  010C                     	;# 
   311  010D                     	;# 
   312  010E                     	;# 
   313  010F                     	;# 
   314  018C                     	;# 
   315  018D                     	;# 
   316  0000                     	;# 
   317  0001                     	;# 
   318  0002                     	;# 
   319  0003                     	;# 
   320  0004                     	;# 
   321  0005                     	;# 
   322  0006                     	;# 
   323  0007                     	;# 
   324  000A                     	;# 
   325  000B                     	;# 
   326  000C                     	;# 
   327  000D                     	;# 
   328  000E                     	;# 
   329  000E                     	;# 
   330  000F                     	;# 
   331  0010                     	;# 
   332  0011                     	;# 
   333  0012                     	;# 
   334  0013                     	;# 
   335  0014                     	;# 
   336  0015                     	;# 
   337  0015                     	;# 
   338  0016                     	;# 
   339  0017                     	;# 
   340  0018                     	;# 
   341  0019                     	;# 
   342  001A                     	;# 
   343  001B                     	;# 
   344  001B                     	;# 
   345  001C                     	;# 
   346  001D                     	;# 
   347  001E                     	;# 
   348  001F                     	;# 
   349  0081                     	;# 
   350  0085                     	;# 
   351  0086                     	;# 
   352  0087                     	;# 
   353  008C                     	;# 
   354  008D                     	;# 
   355  008E                     	;# 
   356  0091                     	;# 
   357  0092                     	;# 
   358  0093                     	;# 
   359  0094                     	;# 
   360  0098                     	;# 
   361  0099                     	;# 
   362  009C                     	;# 
   363  009D                     	;# 
   364  009E                     	;# 
   365  009F                     	;# 
   366  010C                     	;# 
   367  010D                     	;# 
   368  010E                     	;# 
   369  010F                     	;# 
   370  018C                     	;# 
   371  018D                     	;# 
   372  0000                     	;# 
   373  0001                     	;# 
   374  0002                     	;# 
   375  0003                     	;# 
   376  0004                     	;# 
   377  0005                     	;# 
   378  0006                     	;# 
   379  0007                     	;# 
   380  000A                     	;# 
   381  000B                     	;# 
   382  000C                     	;# 
   383  000D                     	;# 
   384  000E                     	;# 
   385  000E                     	;# 
   386  000F                     	;# 
   387  0010                     	;# 
   388  0011                     	;# 
   389  0012                     	;# 
   390  0013                     	;# 
   391  0014                     	;# 
   392  0015                     	;# 
   393  0015                     	;# 
   394  0016                     	;# 
   395  0017                     	;# 
   396  0018                     	;# 
   397  0019                     	;# 
   398  001A                     	;# 
   399  001B                     	;# 
   400  001B                     	;# 
   401  001C                     	;# 
   402  001D                     	;# 
   403  001E                     	;# 
   404  001F                     	;# 
   405  0081                     	;# 
   406  0085                     	;# 
   407  0086                     	;# 
   408  0087                     	;# 
   409  008C                     	;# 
   410  008D                     	;# 
   411  008E                     	;# 
   412  0091                     	;# 
   413  0092                     	;# 
   414  0093                     	;# 
   415  0094                     	;# 
   416  0098                     	;# 
   417  0099                     	;# 
   418  009C                     	;# 
   419  009D                     	;# 
   420  009E                     	;# 
   421  009F                     	;# 
   422  010C                     	;# 
   423  010D                     	;# 
   424  010E                     	;# 
   425  010F                     	;# 
   426  018C                     	;# 
   427  018D                     	;# 
   428  0000                     	;# 
   429  0001                     	;# 
   430  0002                     	;# 
   431  0003                     	;# 
   432  0004                     	;# 
   433  0005                     	;# 
   434  0006                     	;# 
   435  0007                     	;# 
   436  000A                     	;# 
   437  000B                     	;# 
   438  000C                     	;# 
   439  000D                     	;# 
   440  000E                     	;# 
   441  000E                     	;# 
   442  000F                     	;# 
   443  0010                     	;# 
   444  0011                     	;# 
   445  0012                     	;# 
   446  0013                     	;# 
   447  0014                     	;# 
   448  0015                     	;# 
   449  0015                     	;# 
   450  0016                     	;# 
   451  0017                     	;# 
   452  0018                     	;# 
   453  0019                     	;# 
   454  001A                     	;# 
   455  001B                     	;# 
   456  001B                     	;# 
   457  001C                     	;# 
   458  001D                     	;# 
   459  001E                     	;# 
   460  001F                     	;# 
   461  0081                     	;# 
   462  0085                     	;# 
   463  0086                     	;# 
   464  0087                     	;# 
   465  008C                     	;# 
   466  008D                     	;# 
   467  008E                     	;# 
   468  0091                     	;# 
   469  0092                     	;# 
   470  0093                     	;# 
   471  0094                     	;# 
   472  0098                     	;# 
   473  0099                     	;# 
   474  009C                     	;# 
   475  009D                     	;# 
   476  009E                     	;# 
   477  009F                     	;# 
   478  010C                     	;# 
   479  010D                     	;# 
   480  010E                     	;# 
   481  010F                     	;# 
   482  018C                     	;# 
   483  018D                     	;# 
   484                           
   485                           	psect	idataBANK3
   486  0000                     __pidataBANK3:	
   487                           
   488                           	psect	stringtext
   489  1800                     __pstringtext:	
   490  1800                     stringtab:	
   491  1800                     __stringtab:	
   492                           
   493                           ;	String table - string pointers are 2 bytes each
   494  1800  1BFF               	btfsc	btemp+1,7
   495  1801  280A               	ljmp	stringcode
   496  1802  1383               	bcf	3,7
   497  1803  187F               	btfsc	btemp+1,0
   498  1804  1783               	bsf	3,7
   499  1805  0800               	movf	0,w
   500  1806  0A84               	incf	4,f
   501  1807  1903               	skipnz
   502  1808  0AFF               	incf	btemp+1,f
   503  1809  0008               	return
   504  180A                     stringcode:	
   505  180A  087F               	movf	btemp+1,w
   506  180B  397F               	andlw	127
   507  180C  008A               	movwf	10
   508  180D  0804               	movf	4,w
   509  180E  0A84               	incf	4,f
   510  180F  1903               	skipnz
   511  1810  0AFF               	incf	btemp+1,f
   512  1811  0082               	movwf	2
   513  1812                     __stringbase:	
   514  1812                     __end_of__stringtab:	
   515  1812                     exp@coeff:	
   516  1812  3400               	retlw	0
   517  1813  3400               	retlw	0
   518  1814  3480               	retlw	128
   519  1815  343F               	retlw	63
   520  1816  3418               	retlw	24
   521  1817  3472               	retlw	114
   522  1818  3431               	retlw	49
   523  1819  343F               	retlw	63
   524  181A  34F0               	retlw	240
   525  181B  34FD               	retlw	253
   526  181C  3475               	retlw	117
   527  181D  343E               	retlw	62
   528  181E  3447               	retlw	71
   529  181F  3458               	retlw	88
   530  1820  3463               	retlw	99
   531  1821  343D               	retlw	61
   532  1822  3458               	retlw	88
   533  1823  3495               	retlw	149
   534  1824  341D               	retlw	29
   535  1825  343C               	retlw	60
   536  1826  3482               	retlw	130
   537  1827  34C4               	retlw	196
   538  1828  34AE               	retlw	174
   539  1829  343A               	retlw	58
   540  182A  34A8               	retlw	168
   541  182B  3478               	retlw	120
   542  182C  3421               	retlw	33
   543  182D  3439               	retlw	57
   544  182E  34EF               	retlw	239
   545  182F  3493               	retlw	147
   546  1830  3480               	retlw	128
   547  1831  3437               	retlw	55
   548  1832  34A0               	retlw	160
   549  1833  3492               	retlw	146
   550  1834  34A7               	retlw	167
   551  1835  3435               	retlw	53
   552  1836  3446               	retlw	70
   553  1837  3456               	retlw	86
   554  1838  3415               	retlw	21
   555  1839  3434               	retlw	52
   556  183A                     __end_ofexp@coeff:	
   557  183A                     log@coeff:	
   558  183A  3400               	retlw	0
   559  183B  3400               	retlw	0
   560  183C  3400               	retlw	0
   561  183D  3400               	retlw	0
   562  183E  34C4               	retlw	196
   563  183F  34FF               	retlw	255
   564  1840  347F               	retlw	127
   565  1841  343F               	retlw	63
   566  1842  3480               	retlw	128
   567  1843  34EF               	retlw	239
   568  1844  34FF               	retlw	255
   569  1845  34BE               	retlw	190
   570  1846  3490               	retlw	144
   571  1847  34E1               	retlw	225
   572  1848  34A9               	retlw	169
   573  1849  343E               	retlw	62
   574  184A  34EC               	retlw	236
   575  184B  3482               	retlw	130
   576  184C  3476               	retlw	118
   577  184D  34BE               	retlw	190
   578  184E  3482               	retlw	130
   579  184F  34AD               	retlw	173
   580  1850  342B               	retlw	43
   581  1851  343E               	retlw	62
   582  1852  340E               	retlw	14
   583  1853  343C               	retlw	60
   584  1854  34C3               	retlw	195
   585  1855  34BD               	retlw	189
   586  1856  3487               	retlw	135
   587  1857  34D1               	retlw	209
   588  1858  3413               	retlw	19
   589  1859  343D               	retlw	61
   590  185A  3441               	retlw	65
   591  185B  3478               	retlw	120
   592  185C  34D3               	retlw	211
   593  185D  34BB               	retlw	187
   594  185E                     __end_oflog@coeff:	
   595  185E                     STR_15:	
   596  185E  342D               	retlw	45	;'-'
   597  185F  3420               	retlw	32	;' '
   598  1860  3443               	retlw	67	;'C'
   599  1861  3420               	retlw	32	;' '
   600  1862  3428               	retlw	40	;'('
   601  1863  3455               	retlw	85	;'U'
   602  1864  346E               	retlw	110	;'n'
   603  1865  3469               	retlw	105	;'i'
   604  1866  3474               	retlw	116	;'t'
   605  1867  343A               	retlw	58	;':'
   606  1868  3420               	retlw	32	;' '
   607  1869  3446               	retlw	70	;'F'
   608  186A  3429               	retlw	41	;')'
   609  186B  3420               	retlw	32	;' '
   610  186C  342D               	retlw	45	;'-'
   611  186D  3400               	retlw	0
   612  186E                     STR_16:	
   613  186E  342D               	retlw	45	;'-'
   614  186F  3420               	retlw	32	;' '
   615  1870  344C               	retlw	76	;'L'
   616  1871  3420               	retlw	32	;' '
   617  1872  3428               	retlw	40	;'('
   618  1873  3455               	retlw	85	;'U'
   619  1874  346E               	retlw	110	;'n'
   620  1875  3469               	retlw	105	;'i'
   621  1876  3474               	retlw	116	;'t'
   622  1877  343A               	retlw	58	;':'
   623  1878  3420               	retlw	32	;' '
   624  1879  3448               	retlw	72	;'H'
   625  187A  3429               	retlw	41	;')'
   626  187B  3420               	retlw	32	;' '
   627  187C  342D               	retlw	45	;'-'
   628  187D  3400               	retlw	0
   629  187E                     STR_25:	
   630  187E  3470               	retlw	112	;'p'
   631  187F  346C               	retlw	108	;'l'
   632  1880  3465               	retlw	101	;'e'
   633  1881  3461               	retlw	97	;'a'
   634  1882  3473               	retlw	115	;'s'
   635  1883  3465               	retlw	101	;'e'
   636  1884  3420               	retlw	32	;' '
   637  1885  3477               	retlw	119	;'w'
   638  1886  3461               	retlw	97	;'a'
   639  1887  3469               	retlw	105	;'i'
   640  1888  3474               	retlw	116	;'t'
   641  1889  342E               	retlw	46	;'.'
   642  188A  342E               	retlw	46	;'.'
   643  188B  342E               	retlw	46	;'.'
   644  188C  3400               	retlw	0
   645  188D                     STR_37:	
   646  188D  3449               	retlw	73	;'I'
   647  188E  346E               	retlw	110	;'n'
   648  188F  3464               	retlw	100	;'d'
   649  1890  3475               	retlw	117	;'u'
   650  1891  3463               	retlw	99	;'c'
   651  1892  3474               	retlw	116	;'t'
   652  1893  3469               	retlw	105	;'i'
   653  1894  3476               	retlw	118	;'v'
   654  1895  3469               	retlw	105	;'i'
   655  1896  3474               	retlw	116	;'t'
   656  1897  3479               	retlw	121	;'y'
   657  1898  3420               	retlw	32	;' '
   658  1899  3400               	retlw	0
   659  189A                     STR_23:	
   660  189A  3443               	retlw	67	;'C'
   661  189B  3461               	retlw	97	;'a'
   662  189C  346C               	retlw	108	;'l'
   663  189D  3469               	retlw	105	;'i'
   664  189E  3462               	retlw	98	;'b'
   665  189F  3472               	retlw	114	;'r'
   666  18A0  3461               	retlw	97	;'a'
   667  18A1  3474               	retlw	116	;'t'
   668  18A2  3469               	retlw	105	;'i'
   669  18A3  346E               	retlw	110	;'n'
   670  18A4  3467               	retlw	103	;'g'
   671  18A5  3400               	retlw	0
   672  18A6                     STR_28:	
   673  18A6  3443               	retlw	67	;'C'
   674  18A7  3461               	retlw	97	;'a'
   675  18A8  3470               	retlw	112	;'p'
   676  18A9  3461               	retlw	97	;'a'
   677  18AA  3463               	retlw	99	;'c'
   678  18AB  3469               	retlw	105	;'i'
   679  18AC  3474               	retlw	116	;'t'
   680  18AD  3479               	retlw	121	;'y'
   681  18AE  3420               	retlw	32	;' '
   682  18AF  3400               	retlw	0
   683  18B0                     STR_14:	
   684  18B0  344C               	retlw	76	;'L'
   685  18B1  3443               	retlw	67	;'C'
   686  18B2  342D               	retlw	45	;'-'
   687  18B3  346D               	retlw	109	;'m'
   688  18B4  3465               	retlw	101	;'e'
   689  18B5  3474               	retlw	116	;'t'
   690  18B6  3465               	retlw	101	;'e'
   691  18B7  3472               	retlw	114	;'r'
   692  18B8  3420               	retlw	32	;' '
   693  18B9  3400               	retlw	0
   694  18BA                     STR_33:	
   695  18BA  340D               	retlw	13
   696  18BB  340A               	retlw	10
   697  18BC  3443               	retlw	67	;'C'
   698  18BD  3443               	retlw	67	;'C'
   699  18BE  3461               	retlw	97	;'a'
   700  18BF  346C               	retlw	108	;'l'
   701  18C0  343D               	retlw	61	;'='
   702  18C1  3400               	retlw	0
   703  18C2                     STR_18:	
   704  18C2  3420               	retlw	32	;' '
   705  18C3  3420               	retlw	32	;' '
   706  18C4  3420               	retlw	32	;' '
   707  18C5  3420               	retlw	32	;' '
   708  18C6  3420               	retlw	32	;' '
   709  18C7  3420               	retlw	32	;' '
   710  18C8  3400               	retlw	0
   711  18C9                     STR_30:	
   712  18C9  340D               	retlw	13
   713  18CA  340A               	retlw	10
   714  18CB  3446               	retlw	70	;'F'
   715  18CC  3431               	retlw	49	;'1'
   716  18CD  343D               	retlw	61	;'='
   717  18CE  3400               	retlw	0
   718  18CF                     STR_31:	
   719  18CF  340D               	retlw	13
   720  18D0  340A               	retlw	10
   721  18D1  3446               	retlw	70	;'F'
   722  18D2  3432               	retlw	50	;'2'
   723  18D3  343D               	retlw	61	;'='
   724  18D4  3400               	retlw	0
   725  18D5                     STR_32:	
   726  18D5  340D               	retlw	13
   727  18D6  340A               	retlw	10
   728  18D7  3446               	retlw	70	;'F'
   729  18D8  3433               	retlw	51	;'3'
   730  18D9  343D               	retlw	61	;'='
   731  18DA  3400               	retlw	0
   732  18DB                     STR_27:	
   733  18DB  3446               	retlw	70	;'F'
   734  18DC  3472               	retlw	114	;'r'
   735  18DD  3465               	retlw	101	;'e'
   736  18DE  3471               	retlw	113	;'q'
   737  18DF  343D               	retlw	61	;'='
   738  18E0  3400               	retlw	0
   739  18E1                     STR_35:	
   740  18E1  3443               	retlw	67	;'C'
   741  18E2  3469               	retlw	105	;'i'
   742  18E3  346E               	retlw	110	;'n'
   743  18E4  343D               	retlw	61	;'='
   744  18E5  3400               	retlw	0
   745  18E6                     STR_29:	
   746  18E6  3476               	retlw	118	;'v'
   747  18E7  3461               	retlw	97	;'a'
   748  18E8  3472               	retlw	114	;'r'
   749  18E9  343D               	retlw	61	;'='
   750  18EA  3400               	retlw	0
   751  18EB                     STR_21:	
   752  18EB  3452               	retlw	82	;'R'
   753  18EC  3443               	retlw	67	;'C'
   754  18ED  3434               	retlw	52	;'4'
   755  18EE  343D               	retlw	61	;'='
   756  18EF  3400               	retlw	0
   757  18F0                     STR_11:	
   758  18F0  342D               	retlw	45	;'-'
   759  18F1  342A               	retlw	42	;'*'
   760  18F2  342D               	retlw	45	;'-'
   761  18F3  3400               	retlw	0
   762  18F4                     STR_9:	
   763  18F4  340D               	retlw	13
   764  18F5  340A               	retlw	10
   765  18F6  3400               	retlw	0
   766  18F7                     STR_5:	
   767  18F7  346D               	retlw	109	;'m'
   768  18F8  3446               	retlw	70	;'F'
   769  18F9  3400               	retlw	0
   770  18FA                     STR_7:	
   771  18FA  346E               	retlw	110	;'n'
   772  18FB  3446               	retlw	70	;'F'
   773  18FC  3400               	retlw	0
   774  18FD                     STR_8:	
   775  18FD  3470               	retlw	112	;'p'
   776  18FE  3446               	retlw	70	;'F'
   777  18FF  3400               	retlw	0
   778  1900                     STR_6:	
   779  1900  3475               	retlw	117	;'u'
   780  1901  3446               	retlw	70	;'F'
   781  1902  3400               	retlw	0
   782  1903                     STR_2:	
   783  1903  346D               	retlw	109	;'m'
   784  1904  3448               	retlw	72	;'H'
   785  1905  3400               	retlw	0
   786  1906                     STR_4:	
   787  1906  346E               	retlw	110	;'n'
   788  1907  3448               	retlw	72	;'H'
   789  1908  3400               	retlw	0
   790  1909                     STR_3:	
   791  1909  3475               	retlw	117	;'u'
   792  190A  3448               	retlw	72	;'H'
   793  190B  3400               	retlw	0
   794  18F4                     
   795                           ; #config settings
   796  0000                     
   797                           	psect	nvBANK3
   798  01D7                     __pnvBANK3:	
   799  01D7                     _CCal:	
   800  01D7                     	ds	4
   801  01DB                     _bres:	
   802  01DB                     	ds	2
   803  01DD                     _msecpart:	
   804  01DD                     	ds	2
   805  000B                     _INTCON	set	11
   806  000C                     _PIR1	set	12
   807  0006                     _PORTB	set	6
   808  0007                     _PORTC	set	7
   809  001A                     _RCREG	set	26
   810  0012                     _T2CON	set	18
   811  0001                     _TMR0	set	1
   812  0011                     _TMR2	set	17
   813  0019                     _TXREG	set	25
   814  00C4                     _CREN	set	196
   815  005F                     _GIE	set	95
   816  005E                     _PEIE	set	94
   817  003F                     _RC7	set	63
   818  0065                     _RCIF	set	101
   819  00C6                     _RX9	set	198
   820  00C7                     _SPEN	set	199
   821  0064                     _TXIF	set	100
   822  009C                     _CMCON	set	156
   823  0081                     _OPTION_REG	set	129
   824  008C                     _PIE1	set	140
   825  0099                     _SPBRG	set	153
   826  0085                     _TRISA	set	133
   827  0086                     _TRISB	set	134
   828  0087                     _TRISC	set	135
   829  04C2                     _BRGH	set	1218
   830  04C4                     _SYNC	set	1220
   831  043E                     _TRISC6	set	1086
   832  04C6                     _TX9	set	1222
   833  04C5                     _TXEN	set	1221
   834  0464                     _TXIE	set	1124
   835                           
   836                           	psect	cinit
   837  07DD                     start_initialization:	
   838  07DD                     __initialization:	
   839                           
   840                           ; Clear objects allocated to COMMON
   841  07DD  01F6               	clrf	__pbssCOMMON& (0+127)
   842  07DE  01F7               	clrf	(__pbssCOMMON+1)& (0+127)
   843  07DF  01F8               	clrf	(__pbssCOMMON+2)& (0+127)
   844  07E0  01F9               	clrf	(__pbssCOMMON+3)& (0+127)
   845                           
   846                           ; Clear objects allocated to BANK3
   847  07E1  1783               	bsf	3,7	;select IRP bank2
   848  07E2  3090               	movlw	low __pbssBANK3
   849  07E3  0084               	movwf	4
   850  07E4  30C0               	movlw	low (__pbssBANK3+48)
   851  07E5  160A  118A  2004  120A  118A  	fcall	clear_ram0
   852                           
   853                           ; Clear objects allocated to BANK2
   854  07EA  3010               	movlw	low __pbssBANK2
   855  07EB  0084               	movwf	4
   856  07EC  3030               	movlw	low (__pbssBANK2+32)
   857  07ED  160A  118A  2004   	fcall	clear_ram0
   858                           
   859                           ; Initialize objects allocated to BANK3
   860  07F0  1683               	bsf	3,5	;RP0=1, select bank3
   861  07F1  1703               	bsf	3,6	;RP1=1, select bank3
   862                           
   863                           ;initializer for lcd_gotoxy@F1148
   864  07F2  3000               	movlw	0
   865  07F3  00DF               	movwf	__pdataBANK3& (0+127)
   866  07F4  3040               	movlw	64
   867  07F5  00E0               	movwf	(__pdataBANK3+1)& (0+127)
   868  07F6  3014               	movlw	20
   869  07F7  00E1               	movwf	(__pdataBANK3+2)& (0+127)
   870  07F8  3054               	movlw	84
   871  07F9  00E2               	movwf	(__pdataBANK3+3)& (0+127)
   872                           
   873                           ;initializer for _mode
   874  07FA  30FF               	movlw	255
   875  07FB  00E3               	movwf	(__pdataBANK3+4)& (0+127)
   876  07FC                     end_of_initialization:	
   877                           ;End of C runtime variable initialization code
   878                           
   879  07FC                     __end_of__initialization:	
   880  07FC  0183               	clrf	3
   881  07FD  120A  118A  2838   	ljmp	_main	;jump to C main() function
   882                           
   883                           	psect	bssCOMMON
   884  0076                     __pbssCOMMON:	
   885  0076                     _LCD_function:	
   886  0076                     	ds	1
   887  0077                     _rxiptr:	
   888  0077                     	ds	1
   889  0078                     _txiptr:	
   890  0078                     	ds	1
   891  0079                     _txoptr:	
   892  0079                     	ds	1
   893                           
   894                           	psect	bssBANK3
   895  0190                     __pbssBANK3:	
   896  0190                     _F2:	
   897  0190                     	ds	4
   898  0194                     _F3:	
   899  0194                     	ds	4
   900  0198                     _msecs:	
   901  0198                     	ds	4
   902  019C                     _seconds:	
   903  019C                     	ds	4
   904  01A0                     _timer1of:	
   905  01A0                     	ds	4
   906  01A4                     _blink:	
   907  01A4                     	ds	2
   908  01A6                     _LCD_ctrl:	
   909  01A6                     	ds	1
   910  01A7                     _LCD_lines:	
   911  01A7                     	ds	1
   912  01A8                     _LCD_mode:	
   913  01A8                     	ds	1
   914  01A9                     _rxoptr:	
   915  01A9                     	ds	1
   916  01AA                     _ser_tmp:	
   917  01AA                     	ds	1
   918  01AB                     _buffer:	
   919  01AB                     	ds	17
   920  01BC                     _F1:	
   921  01BC                     	ds	4
   922                           
   923                           	psect	dataBANK3
   924  01DF                     __pdataBANK3:	
   925  01DF                     lcd_gotoxy@F1148:	
   926  01DF                     	ds	4
   927  01E3                     _mode:	
   928  01E3                     	ds	1
   929                           
   930                           	psect	bssBANK2
   931  0110                     __pbssBANK2:	
   932  0110                     _rxfifo:	
   933  0110                     	ds	16
   934  0120                     _txfifo:	
   935  0120                     	ds	16
   936                           
   937                           	psect	clrtext
   938  1004                     clear_ram0:	
   939                           ;	Called with FSR containing the base address, and
   940                           ;	W with the last address+1
   941                           
   942  1004  0064               	clrwdt	;clear the watchdog before getting into this loop
   943  1005                     clrloop0:	
   944  1005  0180               	clrf	0	;clear RAM location pointed to by FSR
   945  1006  0A84               	incf	4,f	;increment pointer
   946  1007  0604               	xorwf	4,w	;XOR with final address
   947  1008  1903               	btfsc	3,2	;have we reached the end yet?
   948  1009  3400               	retlw	0	;all done for this memory range, return
   949  100A  0604               	xorwf	4,w	;XOR again to restore value
   950  100B  2805               	goto	clrloop0	;do the next byte
   951                           
   952                           	psect	cstackBANK3
   953  01C0                     __pcstackBANK3:	
   954  01C0                     ?_format_double:	
   955  01C0                     format_double@num:	
   956                           ; 0 bytes @ 0x0
   957                           
   958                           
   959                           ; 4 bytes @ 0x0
   960  01C0                     	ds	4
   961  01C4                     _format_double$1008:	
   962                           
   963                           ; 4 bytes @ 0x4
   964  01C4                     	ds	4
   965  01C8                     _format_double$1009:	
   966                           
   967                           ; 4 bytes @ 0x8
   968  01C8                     	ds	4
   969  01CC                     format_double@weight:	
   970                           
   971                           ; 4 bytes @ 0xC
   972  01CC                     	ds	4
   973  01D0                     format_double@digit:	
   974                           
   975                           ; 2 bytes @ 0x10
   976  01D0                     	ds	2
   977  01D2                     format_double@m:	
   978                           
   979                           ; 2 bytes @ 0x12
   980  01D2                     	ds	2
   981  01D4                     _main$257:	
   982                           
   983                           ; 2 bytes @ 0x14
   984  01D4                     	ds	2
   985  01D6                     main@new_mode:	
   986                           
   987                           ; 1 bytes @ 0x16
   988  01D6                     	ds	1
   989                           
   990                           	psect	cstackBANK2
   991  0130                     __pcstackBANK2:	
   992  0130                     _measure_capacitance$1010:	
   993                           
   994                           ; 4 bytes @ 0x0
   995  0130                     	ds	4
   996  0134                     _measure_capacitance$1011:	
   997                           
   998                           ; 4 bytes @ 0x4
   999  0134                     	ds	4
  1000  0138                     _measure_capacitance$1012:	
  1001                           
  1002                           ; 4 bytes @ 0x8
  1003  0138                     	ds	4
  1004  013C                     measure_capacitance@unit:	
  1005                           
  1006                           ; 1 bytes @ 0xC
  1007  013C                     	ds	1
  1008  013D                     measure_capacitance@var:	
  1009                           
  1010                           ; 2 bytes @ 0xD
  1011  013D                     	ds	2
  1012  013F                     measure_capacitance@Cin:	
  1013                           
  1014                           ; 4 bytes @ 0xF
  1015  013F                     	ds	4
  1016                           
  1017                           	psect	cstackBANK1
  1018  00A0                     __pcstackBANK1:	
  1019  00A0                     eval_poly@res:	
  1020                           
  1021                           ; 4 bytes @ 0x0
  1022  00A0                     	ds	4
  1023  00A4                     ?_ldexp:	
  1024  00A4                     ?_log:	
  1025                           ; 4 bytes @ 0x4
  1026                           
  1027  00A4                     ldexp@value:	
  1028                           ; 4 bytes @ 0x4
  1029                           
  1030  00A4                     log@x:	
  1031                           ; 4 bytes @ 0x4
  1032                           
  1033                           
  1034                           ; 4 bytes @ 0x4
  1035  00A4                     	ds	4
  1036  00A8                     ldexp@newexp:	
  1037  00A8                     log@exponent:	
  1038                           ; 2 bytes @ 0x8
  1039                           
  1040                           
  1041                           ; 2 bytes @ 0x8
  1042  00A8                     	ds	2
  1043  00AA                     ??_ldexp:	
  1044  00AA                     ?_log10:	
  1045                           ; 0 bytes @ 0xA
  1046                           
  1047  00AA                     log10@x:	
  1048                           ; 4 bytes @ 0xA
  1049                           
  1050                           
  1051                           ; 4 bytes @ 0xA
  1052  00AA                     	ds	2
  1053  00AC                     _ldexp$661:	
  1054                           
  1055                           ; 4 bytes @ 0xC
  1056  00AC                     	ds	2
  1057  00AE                     _log10$1020:	
  1058                           
  1059                           ; 4 bytes @ 0xE
  1060  00AE                     	ds	4
  1061  00B2                     ?___fltol:	
  1062  00B2                     ___fltol@f1:	
  1063                           ; 4 bytes @ 0x12
  1064                           
  1065                           
  1066                           ; 4 bytes @ 0x12
  1067  00B2                     	ds	4
  1068  00B6                     ??___fltol:	
  1069                           
  1070                           ; 0 bytes @ 0x16
  1071  00B6                     	ds	4
  1072  00BA                     ___fltol@sign1:	
  1073                           
  1074                           ; 1 bytes @ 0x1A
  1075  00BA                     	ds	1
  1076  00BB                     ___fltol@exp1:	
  1077                           
  1078                           ; 1 bytes @ 0x1B
  1079  00BB                     	ds	1
  1080  00BC                     ?___altofl:	
  1081  00BC                     measure_inductance@numerator:	
  1082                           ; 4 bytes @ 0x1C
  1083                           
  1084  00BC                     ___altofl@c:	
  1085                           ; 4 bytes @ 0x1C
  1086                           
  1087                           
  1088                           ; 4 bytes @ 0x1C
  1089  00BC                     	ds	4
  1090  00C0                     ___altofl@sign:	
  1091  00C0                     measure_inductance@denominator:	
  1092                           ; 1 bytes @ 0x20
  1093                           
  1094                           
  1095                           ; 4 bytes @ 0x20
  1096  00C0                     	ds	1
  1097  00C1                     ?_floor:	
  1098  00C1                     floor@x:	
  1099                           ; 4 bytes @ 0x21
  1100                           
  1101                           
  1102                           ; 4 bytes @ 0x21
  1103  00C1                     	ds	3
  1104  00C4                     _measure_inductance$1013:	
  1105                           
  1106                           ; 4 bytes @ 0x24
  1107  00C4                     	ds	1
  1108  00C5                     floor@i:	
  1109                           
  1110                           ; 4 bytes @ 0x25
  1111  00C5                     	ds	3
  1112  00C8                     _measure_inductance$1017:	
  1113                           
  1114                           ; 4 bytes @ 0x28
  1115  00C8                     	ds	1
  1116  00C9                     floor@expon:	
  1117                           
  1118                           ; 2 bytes @ 0x29
  1119  00C9                     	ds	2
  1120  00CB                     ?_exp:	
  1121  00CB                     exp@x:	
  1122                           ; 4 bytes @ 0x2B
  1123                           
  1124                           
  1125                           ; 4 bytes @ 0x2B
  1126  00CB                     	ds	1
  1127  00CC                     _measure_inductance$1018:	
  1128                           
  1129                           ; 4 bytes @ 0x2C
  1130  00CC                     	ds	3
  1131  00CF                     _exp$1023:	
  1132                           
  1133                           ; 4 bytes @ 0x2F
  1134  00CF                     	ds	1
  1135  00D0                     _measure_inductance$1019:	
  1136                           
  1137                           ; 4 bytes @ 0x30
  1138  00D0                     	ds	3
  1139  00D3                     _exp$755:	
  1140                           
  1141                           ; 4 bytes @ 0x33
  1142  00D3                     	ds	1
  1143  00D4                     measure_inductance@unit:	
  1144                           
  1145                           ; 1 bytes @ 0x34
  1146  00D4                     	ds	1
  1147  00D5                     _measure_inductance$1014:	
  1148                           
  1149                           ; 4 bytes @ 0x35
  1150  00D5                     	ds	2
  1151  00D7                     exp@exponent:	
  1152                           
  1153                           ; 2 bytes @ 0x37
  1154  00D7                     	ds	2
  1155  00D9                     exp@sign:	
  1156  00D9                     _measure_inductance$1015:	
  1157                           ; 1 bytes @ 0x39
  1158                           
  1159                           
  1160                           ; 4 bytes @ 0x39
  1161  00D9                     	ds	1
  1162  00DA                     ?_pow:	
  1163  00DA                     pow@x:	
  1164                           ; 4 bytes @ 0x3A
  1165                           
  1166                           
  1167                           ; 4 bytes @ 0x3A
  1168  00DA                     	ds	3
  1169  00DD                     _measure_inductance$1016:	
  1170                           
  1171                           ; 4 bytes @ 0x3D
  1172  00DD                     	ds	1
  1173  00DE                     pow@y:	
  1174                           
  1175                           ; 4 bytes @ 0x3E
  1176  00DE                     	ds	3
  1177  00E1                     measure_inductance@var:	
  1178                           
  1179                           ; 2 bytes @ 0x41
  1180  00E1                     	ds	1
  1181  00E2                     _pow$1021:	
  1182                           
  1183                           ; 4 bytes @ 0x42
  1184  00E2                     	ds	1
  1185  00E3                     measure_inductance@Lin:	
  1186                           
  1187                           ; 4 bytes @ 0x43
  1188  00E3                     	ds	3
  1189  00E6                     _pow$1022:	
  1190                           
  1191                           ; 4 bytes @ 0x46
  1192  00E6                     	ds	4
  1193  00EA                     pow@sign:	
  1194                           
  1195                           ; 1 bytes @ 0x4A
  1196  00EA                     	ds	1
  1197  00EB                     pow@yi:	
  1198                           
  1199                           ; 4 bytes @ 0x4B
  1200  00EB                     	ds	4
  1201                           
  1202                           	psect	cstackCOMMON
  1203  0070                     __pcstackCOMMON:	
  1204  0070                     ?_ser_putch:	
  1205  0070                     ?_lcd_init:	
  1206                           ; 0 bytes @ 0x0
  1207                           
  1208  0070                     ?_ser_init:	
  1209                           ; 0 bytes @ 0x0
  1210                           
  1211  0070                     ?_calibrate:	
  1212                           ; 0 bytes @ 0x0
  1213                           
  1214  0070                     ?_lcd_clear:	
  1215                           ; 0 bytes @ 0x0
  1216                           
  1217  0070                     ?_measure_capacitance:	
  1218                           ; 0 bytes @ 0x0
  1219                           
  1220  0070                     ?_measure_inductance:	
  1221                           ; 0 bytes @ 0x0
  1222                           
  1223  0070                     ?_print_unit:	
  1224                           ; 0 bytes @ 0x0
  1225                           
  1226  0070                     ?_print_indicator:	
  1227                           ; 0 bytes @ 0x0
  1228                           
  1229  0070                     ?_output_putch:	
  1230                           ; 0 bytes @ 0x0
  1231                           
  1232  0070                     ?_print_buffer:	
  1233                           ; 0 bytes @ 0x0
  1234                           
  1235  0070                     ?_timer0_init:	
  1236                           ; 0 bytes @ 0x0
  1237                           
  1238  0070                     ?_timer2_init:	
  1239                           ; 0 bytes @ 0x0
  1240                           
  1241  0070                     ?_delay10ms:	
  1242                           ; 0 bytes @ 0x0
  1243                           
  1244  0070                     ?_global_int:	
  1245                           ; 0 bytes @ 0x0
  1246                           
  1247  0070                     ??_global_int:	
  1248                           ; 0 bytes @ 0x0
  1249                           
  1250  0070                     ?_main:	
  1251                           ; 0 bytes @ 0x0
  1252                           
  1253  0070                     ?_lcd_write4bits:	
  1254                           ; 0 bytes @ 0x0
  1255                           
  1256  0070                     ?_lcd_command:	
  1257                           ; 0 bytes @ 0x0
  1258                           
  1259  0070                     ?_buffer_init:	
  1260                           ; 0 bytes @ 0x0
  1261                           
  1262  0070                     ?_buffer_putch:	
  1263                           ; 0 bytes @ 0x0
  1264                           
  1265  0070                     print_unit@unit:	
  1266                           ; 1 bytes @ 0x0
  1267                           
  1268  0070                     delay10ms@period_10ms:	
  1269                           ; 1 bytes @ 0x0
  1270                           
  1271                           
  1272                           ; 1 bytes @ 0x0
  1273  0070                     	ds	4
  1274  0074                     ??_ser_putch:	
  1275  0074                     ??_lcd_init:	
  1276                           ; 0 bytes @ 0x4
  1277                           
  1278  0074                     ??_ser_init:	
  1279                           ; 0 bytes @ 0x4
  1280                           
  1281  0074                     ??_frexp:	
  1282                           ; 0 bytes @ 0x4
  1283                           
  1284  0074                     ??_timer0_init:	
  1285                           ; 0 bytes @ 0x4
  1286                           
  1287  0074                     ??_timer2_init:	
  1288                           ; 0 bytes @ 0x4
  1289                           
  1290  0074                     ??_delay10ms:	
  1291                           ; 0 bytes @ 0x4
  1292                           
  1293  0074                     ??_lcd_write4bits:	
  1294                           ; 0 bytes @ 0x4
  1295                           
  1296  0074                     ??_buffer_init:	
  1297                           ; 0 bytes @ 0x4
  1298                           
  1299  0074                     ??___awtofl:	
  1300                           ; 0 bytes @ 0x4
  1301                           
  1302  0074                     ??___flneg:	
  1303                           ; 0 bytes @ 0x4
  1304                           
  1305  0074                     ??___lltofl:	
  1306                           ; 0 bytes @ 0x4
  1307                           
  1308  0074                     ??___lwdiv:	
  1309                           ; 0 bytes @ 0x4
  1310                           
  1311  0074                     ??___lwmod:	
  1312                           ; 0 bytes @ 0x4
  1313                           
  1314  0074                     ?_timer0_read_ps:	
  1315                           ; 0 bytes @ 0x4
  1316                           
  1317  0074                     buffer_putch@ch:	
  1318                           ; 2 bytes @ 0x4
  1319                           
  1320  0074                     ser_putch@c:	
  1321                           ; 1 bytes @ 0x4
  1322                           
  1323  0074                     ___awtofl@sign:	
  1324                           ; 1 bytes @ 0x4
  1325                           
  1326  0074                     ___lwmod@counter:	
  1327                           ; 1 bytes @ 0x4
  1328                           
  1329                           
  1330                           ; 1 bytes @ 0x4
  1331  0074                     	ds	1
  1332  0075                     ??_ser_puts:	
  1333  0075                     ??_format_number:	
  1334                           ; 0 bytes @ 0x5
  1335                           
  1336  0075                     ??_print_buffer:	
  1337                           ; 0 bytes @ 0x5
  1338                           
  1339  0075                     ??_buffer_puts:	
  1340                           ; 0 bytes @ 0x5
  1341                           
  1342  0075                     print_buffer@i:	
  1343                           ; 0 bytes @ 0x5
  1344                           
  1345  0075                     lcd_write4bits@value:	
  1346                           ; 1 bytes @ 0x5
  1347                           
  1348                           
  1349                           ; 1 bytes @ 0x5
  1350  0075                     	ds	1
  1351  0076                     ??_lcd_send:	
  1352  0076                     ??_lcd_gotoxy:	
  1353                           ; 0 bytes @ 0x6
  1354                           
  1355  0076                     ??_lcd_puts:	
  1356                           ; 0 bytes @ 0x6
  1357                           
  1358  0076                     ??_log10:	
  1359                           ; 0 bytes @ 0x6
  1360                           
  1361  0076                     ??_pow:	
  1362                           ; 0 bytes @ 0x6
  1363                           
  1364  0076                     ??_floor:	
  1365                           ; 0 bytes @ 0x6
  1366                           
  1367  0076                     ??_calibrate:	
  1368                           ; 0 bytes @ 0x6
  1369                           
  1370  0076                     ??_measure_capacitance:	
  1371                           ; 0 bytes @ 0x6
  1372                           
  1373  0076                     ??_measure_inductance:	
  1374                           ; 0 bytes @ 0x6
  1375                           
  1376  0076                     ??_exp:	
  1377                           ; 0 bytes @ 0x6
  1378                           
  1379  0076                     ??_print_reading:	
  1380                           ; 0 bytes @ 0x6
  1381                           
  1382  0076                     ??_print_indicator:	
  1383                           ; 0 bytes @ 0x6
  1384                           
  1385  0076                     ??_output_putch:	
  1386                           ; 0 bytes @ 0x6
  1387                           
  1388  0076                     ??_format_xint32:	
  1389                           ; 0 bytes @ 0x6
  1390                           
  1391  0076                     ??_format_double:	
  1392                           ; 0 bytes @ 0x6
  1393                           
  1394  0076                     ??_main:	
  1395                           ; 0 bytes @ 0x6
  1396                           
  1397  0076                     ??_lcd_command:	
  1398                           ; 0 bytes @ 0x6
  1399                           
  1400  0076                     ??___altofl:	
  1401                           ; 0 bytes @ 0x6
  1402                           
  1403  0076                     ??___flsub:	
  1404                           ; 0 bytes @ 0x6
  1405                           
  1406  0076                     ??_log:	
  1407                           ; 0 bytes @ 0x6
  1408                           
  1409  0076                     ??___lwtofl:	
  1410                           ; 0 bytes @ 0x6
  1411                           
  1412                           
  1413                           	psect	cstackBANK0
  1414  0021                     __pcstackBANK0:	
  1415                           ; 0 bytes @ 0x6
  1416                           
  1417  0021                     ?_lcd_send:	
  1418  0021                     ?_ser_puts:	
  1419                           ; 0 bytes @ 0x0
  1420                           
  1421  0021                     ??_buffer_putch:	
  1422                           ; 0 bytes @ 0x0
  1423                           
  1424  0021                     ??_timer0_read_ps:	
  1425                           ; 0 bytes @ 0x0
  1426                           
  1427  0021                     ?___flge:	
  1428                           ; 0 bytes @ 0x0
  1429                           
  1430  0021                     ?___lwdiv:	
  1431                           ; 1 bit 
  1432                           
  1433  0021                     ?___lwmod:	
  1434                           ; 2 bytes @ 0x0
  1435                           
  1436  0021                     ?___flpack:	
  1437                           ; 2 bytes @ 0x0
  1438                           
  1439  0021                     ?_frexp:	
  1440                           ; 4 bytes @ 0x0
  1441                           
  1442  0021                     ?___flneg:	
  1443                           ; 4 bytes @ 0x0
  1444                           
  1445  0021                     lcd_send@mode:	
  1446                           ; 4 bytes @ 0x0
  1447                           
  1448  0021                     lcd_init@fourbitmode:	
  1449                           ; 1 bytes @ 0x0
  1450                           
  1451  0021                     _timer0_init$114:	
  1452                           ; 1 bytes @ 0x0
  1453                           
  1454  0021                     ser_puts@s:	
  1455                           ; 2 bytes @ 0x0
  1456                           
  1457  0021                     ___lwdiv@divisor:	
  1458                           ; 2 bytes @ 0x0
  1459                           
  1460  0021                     ___lwmod@divisor:	
  1461                           ; 2 bytes @ 0x0
  1462                           
  1463  0021                     ___flpack@arg:	
  1464                           ; 2 bytes @ 0x0
  1465                           
  1466  0021                     ___flge@ff1:	
  1467                           ; 4 bytes @ 0x0
  1468                           
  1469  0021                     ___flneg@f1:	
  1470                           ; 4 bytes @ 0x0
  1471                           
  1472  0021                     frexp@value:	
  1473                           ; 4 bytes @ 0x0
  1474                           
  1475                           
  1476                           ; 4 bytes @ 0x0
  1477  0021                     	ds	1
  1478  0022                     timer2_init@ps:	
  1479  0022                     lcd_send@value:	
  1480                           ; 1 bytes @ 0x1
  1481                           
  1482  0022                     _lcd_init$321:	
  1483                           ; 1 bytes @ 0x1
  1484                           
  1485                           
  1486                           ; 2 bytes @ 0x1
  1487  0022                     	ds	1
  1488  0023                     ?_lcd_puts:	
  1489  0023                     output_putch@c:	
  1490                           ; 0 bytes @ 0x2
  1491                           
  1492  0023                     timer2_init@ps_mode:	
  1493                           ; 1 bytes @ 0x2
  1494                           
  1495  0023                     lcd_command@value:	
  1496                           ; 1 bytes @ 0x2
  1497                           
  1498  0023                     _timer0_init$115:	
  1499                           ; 1 bytes @ 0x2
  1500                           
  1501  0023                     lcd_puts@string:	
  1502                           ; 2 bytes @ 0x2
  1503                           
  1504  0023                     ___lwdiv@dividend:	
  1505                           ; 2 bytes @ 0x2
  1506                           
  1507  0023                     ___lwmod@dividend:	
  1508                           ; 2 bytes @ 0x2
  1509                           
  1510                           
  1511                           ; 2 bytes @ 0x2
  1512  0023                     	ds	1
  1513  0024                     ?_lcd_gotoxy:	
  1514  0024                     ?_lcd_begin:	
  1515                           ; 0 bytes @ 0x3
  1516                           
  1517  0024                     ??_lcd_clear:	
  1518                           ; 0 bytes @ 0x3
  1519                           
  1520  0024                     ?_put_str:	
  1521                           ; 0 bytes @ 0x3
  1522                           
  1523  0024                     ?_buffer_puts:	
  1524                           ; 0 bytes @ 0x3
  1525                           
  1526  0024                     lcd_gotoxy@row:	
  1527                           ; 1 bytes @ 0x3
  1528                           
  1529  0024                     lcd_begin@dotsize:	
  1530                           ; 1 bytes @ 0x3
  1531                           
  1532  0024                     put_str@s:	
  1533                           ; 1 bytes @ 0x3
  1534                           
  1535  0024                     buffer_puts@x:	
  1536                           ; 2 bytes @ 0x3
  1537                           
  1538                           
  1539                           ; 2 bytes @ 0x3
  1540  0024                     	ds	1
  1541  0025                     ??_lcd_begin:	
  1542  0025                     timer0_read_ps@prev:	
  1543                           ; 0 bytes @ 0x4
  1544                           
  1545  0025                     lcd_gotoxy@col:	
  1546                           ; 1 bytes @ 0x4
  1547                           
  1548  0025                     lcd_puts@i:	
  1549                           ; 1 bytes @ 0x4
  1550                           
  1551  0025                     ___flpack@exp:	
  1552                           ; 1 bytes @ 0x4
  1553                           
  1554  0025                     frexp@eptr:	
  1555                           ; 1 bytes @ 0x4
  1556                           
  1557  0025                     ___lwdiv@counter:	
  1558                           ; 1 bytes @ 0x4
  1559                           
  1560  0025                     _timer0_init$116:	
  1561                           ; 1 bytes @ 0x4
  1562                           
  1563  0025                     ___flge@ff2:	
  1564                           ; 2 bytes @ 0x4
  1565                           
  1566                           
  1567                           ; 4 bytes @ 0x4
  1568  0025                     	ds	1
  1569  0026                     ??_put_str:	
  1570  0026                     ___flpack@sign:	
  1571                           ; 0 bytes @ 0x5
  1572                           
  1573  0026                     timer0_read_ps@count:	
  1574                           ; 1 bytes @ 0x5
  1575                           
  1576  0026                     ___lwdiv@quotient:	
  1577                           ; 2 bytes @ 0x5
  1578                           
  1579  0026                     lcd_gotoxy@row_offsets:	
  1580                           ; 2 bytes @ 0x5
  1581                           
  1582                           
  1583                           ; 4 bytes @ 0x5
  1584  0026                     	ds	1
  1585  0027                     ??___flpack:	
  1586  0027                     lcd_begin@lines:	
  1587                           ; 0 bytes @ 0x6
  1588                           
  1589  0027                     _timer0_init$117:	
  1590                           ; 1 bytes @ 0x6
  1591                           
  1592                           
  1593                           ; 2 bytes @ 0x6
  1594  0027                     	ds	1
  1595  0028                     ?_format_number:	
  1596  0028                     format_number@n:	
  1597                           ; 0 bytes @ 0x7
  1598                           
  1599                           
  1600                           ; 2 bytes @ 0x7
  1601  0028                     	ds	1
  1602  0029                     ??___flge:	
  1603  0029                     timer0_init@prescaler:	
  1604                           ; 0 bytes @ 0x8
  1605                           
  1606  0029                     put_str@i:	
  1607                           ; 1 bytes @ 0x8
  1608                           
  1609                           
  1610                           ; 2 bytes @ 0x8
  1611  0029                     	ds	1
  1612  002A                     ??_print_unit:	
  1613  002A                     print_indicator@indicate:	
  1614                           ; 0 bytes @ 0x9
  1615                           
  1616  002A                     timer0_init@ps_mode:	
  1617                           ; 1 bytes @ 0x9
  1618                           
  1619  002A                     format_number@base:	
  1620                           ; 1 bytes @ 0x9
  1621                           
  1622                           
  1623                           ; 1 bytes @ 0x9
  1624  002A                     	ds	1
  1625  002B                     ?___awtofl:	
  1626  002B                     ?___fldiv:	
  1627                           ; 4 bytes @ 0xA
  1628                           
  1629  002B                     ?___lltofl:	
  1630                           ; 4 bytes @ 0xA
  1631                           
  1632  002B                     format_number@pad:	
  1633                           ; 4 bytes @ 0xA
  1634                           
  1635  002B                     ___awtofl@c:	
  1636                           ; 1 bytes @ 0xA
  1637                           
  1638  002B                     ___fldiv@f2:	
  1639                           ; 2 bytes @ 0xA
  1640                           
  1641  002B                     ___lltofl@c:	
  1642                           ; 4 bytes @ 0xA
  1643                           
  1644                           
  1645                           ; 4 bytes @ 0xA
  1646  002B                     	ds	1
  1647  002C                     format_number@buf:	
  1648                           
  1649                           ; 32 bytes @ 0xB
  1650  002C                     	ds	3
  1651  002F                     ___fldiv@f1:	
  1652                           
  1653                           ; 4 bytes @ 0xE
  1654  002F                     	ds	4
  1655  0033                     ??___fldiv:	
  1656                           
  1657                           ; 0 bytes @ 0x12
  1658  0033                     	ds	4
  1659  0037                     ___fldiv@f3:	
  1660                           
  1661                           ; 4 bytes @ 0x16
  1662  0037                     	ds	4
  1663  003B                     ___fldiv@cntr:	
  1664                           
  1665                           ; 1 bytes @ 0x1A
  1666  003B                     	ds	1
  1667  003C                     ___fldiv@exp:	
  1668                           
  1669                           ; 1 bytes @ 0x1B
  1670  003C                     	ds	1
  1671  003D                     ___fldiv@sign:	
  1672                           
  1673                           ; 1 bytes @ 0x1C
  1674  003D                     	ds	1
  1675  003E                     ?___flmul:	
  1676  003E                     ___flmul@f1:	
  1677                           ; 4 bytes @ 0x1D
  1678                           
  1679                           
  1680                           ; 4 bytes @ 0x1D
  1681  003E                     	ds	4
  1682  0042                     ___flmul@f2:	
  1683                           
  1684                           ; 4 bytes @ 0x21
  1685  0042                     	ds	4
  1686  0046                     ??___flmul:	
  1687                           
  1688                           ; 0 bytes @ 0x25
  1689  0046                     	ds	4
  1690  004A                     ___flmul@exp:	
  1691                           
  1692                           ; 1 bytes @ 0x29
  1693  004A                     	ds	1
  1694  004B                     ___flmul@f3_as_product:	
  1695                           
  1696                           ; 4 bytes @ 0x2A
  1697  004B                     	ds	1
  1698  004C                     format_number@padchar:	
  1699                           
  1700                           ; 1 bytes @ 0x2B
  1701  004C                     	ds	1
  1702  004D                     _format_number$158:	
  1703                           
  1704                           ; 2 bytes @ 0x2C
  1705  004D                     	ds	2
  1706  004F                     format_number@di:	
  1707  004F                     ___flmul@cntr:	
  1708                           ; 1 bytes @ 0x2E
  1709                           
  1710                           
  1711                           ; 1 bytes @ 0x2E
  1712  004F                     	ds	1
  1713  0050                     format_number@i:	
  1714  0050                     ___flmul@sign:	
  1715                           ; 1 bytes @ 0x2F
  1716                           
  1717                           
  1718                           ; 1 bytes @ 0x2F
  1719  0050                     	ds	1
  1720  0051                     ?_print_reading:	
  1721  0051                     ?_format_xint32:	
  1722                           ; 0 bytes @ 0x30
  1723                           
  1724  0051                     ?_measure_freq:	
  1725                           ; 0 bytes @ 0x30
  1726                           
  1727  0051                     ?___fladd:	
  1728                           ; 2 bytes @ 0x30
  1729                           
  1730  0051                     print_reading@measurement:	
  1731                           ; 4 bytes @ 0x30
  1732                           
  1733  0051                     format_xint32@x:	
  1734                           ; 2 bytes @ 0x30
  1735                           
  1736  0051                     ___fladd@f1:	
  1737                           ; 4 bytes @ 0x30
  1738                           
  1739                           
  1740                           ; 4 bytes @ 0x30
  1741  0051                     	ds	2
  1742  0053                     ??_measure_freq:	
  1743  0053                     _print_reading$1004:	
  1744                           ; 0 bytes @ 0x32
  1745                           
  1746                           
  1747                           ; 2 bytes @ 0x32
  1748  0053                     	ds	2
  1749  0055                     measure_freq@count:	
  1750  0055                     _print_reading$1005:	
  1751                           ; 2 bytes @ 0x34
  1752                           
  1753  0055                     ___fladd@f2:	
  1754                           ; 2 bytes @ 0x34
  1755                           
  1756                           
  1757                           ; 4 bytes @ 0x34
  1758  0055                     	ds	2
  1759  0057                     ?___lwtofl:	
  1760  0057                     ___lwtofl@c:	
  1761                           ; 4 bytes @ 0x36
  1762                           
  1763                           
  1764                           ; 2 bytes @ 0x36
  1765  0057                     	ds	2
  1766  0059                     ??___fladd:	
  1767                           
  1768                           ; 0 bytes @ 0x38
  1769  0059                     	ds	2
  1770  005B                     calibrate@i:	
  1771                           
  1772                           ; 1 bytes @ 0x3A
  1773  005B                     	ds	2
  1774  005D                     ___fladd@sign:	
  1775                           
  1776                           ; 1 bytes @ 0x3C
  1777  005D                     	ds	1
  1778  005E                     ___fladd@exp2:	
  1779                           
  1780                           ; 1 bytes @ 0x3D
  1781  005E                     	ds	1
  1782  005F                     ___fladd@exp1:	
  1783                           
  1784                           ; 1 bytes @ 0x3E
  1785  005F                     	ds	1
  1786  0060                     ?_eval_poly:	
  1787  0060                     ?___flsub:	
  1788                           ; 4 bytes @ 0x3F
  1789                           
  1790  0060                     ___flsub@f2:	
  1791                           ; 4 bytes @ 0x3F
  1792                           
  1793  0060                     eval_poly@x:	
  1794                           ; 4 bytes @ 0x3F
  1795                           
  1796                           
  1797                           ; 4 bytes @ 0x3F
  1798  0060                     	ds	4
  1799  0064                     eval_poly@d:	
  1800  0064                     ___flsub@f1:	
  1801                           ; 2 bytes @ 0x43
  1802                           
  1803                           
  1804                           ; 4 bytes @ 0x43
  1805  0064                     	ds	2
  1806  0066                     eval_poly@n:	
  1807                           
  1808                           ; 2 bytes @ 0x45
  1809  0066                     	ds	2
  1810  0068                     ??_eval_poly:	
  1811                           
  1812                           ; 0 bytes @ 0x47
  1813  0068                     	ds	8
  1814                           
  1815                           	psect	maintext
  1816  0038                     __pmaintext:	
  1817 ;;
  1818 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1819 ;;
  1820 ;; *************** function _main *****************
  1821 ;; Defined at:
  1822 ;;		line 113 in file "../../../LC-meter.c"
  1823 ;; Parameters:    Size  Location     Type
  1824 ;;		None
  1825 ;; Auto vars:     Size  Location     Type
  1826 ;;  new_mode        1   22[BANK3 ] unsigned char 
  1827 ;; Return value:  Size  Location     Type
  1828 ;;		None               void
  1829 ;; Registers used:
  1830 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1831 ;; Tracked objects:
  1832 ;;		On entry : B00/0
  1833 ;;		On exit  : 0/0
  1834 ;;		Unchanged: 0/0
  1835 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1836 ;;      Params:         0       0       0       0       0
  1837 ;;      Locals:         0       0       0       3       0
  1838 ;;      Temps:          0       0       0       0       0
  1839 ;;      Totals:         0       0       0       3       0
  1840 ;;Total ram usage:        3 bytes
  1841 ;; Hardware stack levels required when called:    8
  1842 ;; This function calls:
  1843 ;;		_calibrate
  1844 ;;		_delay10ms
  1845 ;;		_format_double
  1846 ;;		_lcd_begin
  1847 ;;		_lcd_clear
  1848 ;;		_lcd_gotoxy
  1849 ;;		_lcd_init
  1850 ;;		_lcd_puts
  1851 ;;		_measure_capacitance
  1852 ;;		_measure_inductance
  1853 ;;		_print_indicator
  1854 ;;		_ser_init
  1855 ;;		_ser_puts
  1856 ;;		_timer0_init
  1857 ;;		_timer2_init
  1858 ;; This function is called by:
  1859 ;;		Startup code after reset
  1860 ;; This function uses a non-reentrant model
  1861 ;;
  1862                           
  1863                           
  1864                           ;psect for function _main
  1865  0038                     _main:	
  1866                           
  1867                           ;LC-meter.c: 114: bres = msecpart = msecs = seconds = 0;
  1868                           
  1869                           ;incstack = 0
  1870                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1871  0038  1683               	bsf	3,5	;RP0=1, select bank3
  1872  0039  1703               	bsf	3,6	;RP1=1, select bank3
  1873  003A  019C               	clrf	_seconds^(0+384)	;volatile
  1874  003B  019D               	clrf	(_seconds+1)^(0+384)	;volatile
  1875  003C  019E               	clrf	(_seconds+2)^(0+384)	;volatile
  1876  003D  019F               	clrf	(_seconds+3)^(0+384)	;volatile
  1877  003E  081F               	movf	(_seconds+3)^(0+384),w	;volatile
  1878  003F  009B               	movwf	(_msecs+3)^(0+384)	;volatile
  1879  0040  081E               	movf	(_seconds+2)^(0+384),w	;volatile
  1880  0041  009A               	movwf	(_msecs+2)^(0+384)	;volatile
  1881  0042  081D               	movf	(_seconds+1)^(0+384),w	;volatile
  1882  0043  0099               	movwf	(_msecs+1)^(0+384)	;volatile
  1883  0044  081C               	movf	_seconds^(0+384),w	;volatile
  1884  0045  0098               	movwf	_msecs^(0+384)	;volatile
  1885  0046  0819               	movf	(_msecs^(0+384)+1),w	;volatile
  1886  0047  00DE               	movwf	(_msecpart+1)^(0+384)	;volatile
  1887  0048  0818               	movf	_msecs^(0+384),w	;volatile
  1888  0049  00DD               	movwf	_msecpart^(0+384)	;volatile
  1889  004A  085E               	movf	(_msecpart+1)^(0+384),w	;volatile
  1890  004B  00DC               	movwf	(_bres+1)^(0+384)	;volatile
  1891  004C  085D               	movf	_msecpart^(0+384),w	;volatile
  1892  004D  00DB               	movwf	_bres^(0+384)	;volatile
  1893                           
  1894                           ;LC-meter.c: 115: mode = -1;
  1895  004E  30FF               	movlw	255
  1896  004F  00E3               	movwf	_mode^(0+384)
  1897                           
  1898                           ;LC-meter.c: 117: CCal = 1000;
  1899  0050  3044               	movlw	68
  1900  0051  00DA               	movwf	(_CCal+3)^(0+384)
  1901  0052  307A               	movlw	122
  1902  0053  00D9               	movwf	(_CCal+2)^(0+384)
  1903  0054  3005               	movlw	5
  1904  0055  01D8               	clrf	(_CCal+1)^(0+384)
  1905  0056  01D7               	clrf	_CCal^(0+384)
  1906                           
  1907                           ;LC-meter.c: 125: CMCON = 0b00000101;
  1908  0057  1303               	bcf	3,6	;RP1=0, select bank1
  1909  0058  009C               	movwf	28	;volatile
  1910                           
  1911                           ;LC-meter.c: 127: TRISA = 0b11001111;
  1912  0059  30CF               	movlw	207
  1913  005A  0085               	movwf	5	;volatile
  1914                           
  1915                           ;LC-meter.c: 130: timer0_init(0b1000 | 0x20 | 0x40);
  1916  005B  3068               	movlw	104
  1917  005C  160A  158A  243D  120A  118A  	fcall	_timer0_init
  1918                           
  1919                           ;LC-meter.c: 139: OPTION_REG &= ~0b100000;
  1920  0061  1683               	bsf	3,5	;RP0=1, select bank1
  1921  0062  1281               	bcf	1,5	;volatile
  1922                           
  1923                           ;LC-meter.c: 145: TRISC = 0b10111011;
  1924  0063  30BB               	movlw	187
  1925  0064  0087               	movwf	7	;volatile
  1926                           
  1927                           ;LC-meter.c: 149: TRISC &= ~0b00000100;
  1928  0065  1107               	bcf	7,2	;volatile
  1929                           
  1930                           ;LC-meter.c: 150: PORTC &= ~0b00000100; PORTC |= (!!(1)) << 2;;
  1931  0066  1283               	bcf	3,5	;RP0=0, select bank0
  1932  0067  1107               	bcf	7,2	;volatile
  1933  0068  1507               	bsf	7,2	;volatile
  1934                           
  1935                           ;LC-meter.c: 152: timer2_init(0b000 | 0x80);
  1936  0069  3080               	movlw	128
  1937  006A  160A  158A  23E3  120A  118A  	fcall	_timer2_init
  1938                           
  1939                           ;LC-meter.c: 160: lcd_init(1);
  1940  006F  3001               	movlw	1
  1941  0070  120A  118A  2018  120A  118A  	fcall	_lcd_init
  1942  0075  3002               	movlw	2
  1943                           
  1944                           ;LC-meter.c: 161: lcd_begin(2, 1);
  1945  0076  01A4               	clrf	lcd_begin@dotsize
  1946  0077  0AA4               	incf	lcd_begin@dotsize,f
  1947  0078  120A  118A  233C  120A  118A  	fcall	_lcd_begin
  1948                           
  1949                           ;LC-meter.c: 164: TRISC |= (1 << 4);
  1950  007D  1683               	bsf	3,5	;RP0=1, select bank1
  1951  007E  1303               	bcf	3,6	;RP1=0, select bank1
  1952  007F  1607               	bsf	7,4	;volatile
  1953                           
  1954                           ;LC-meter.c: 165: TRISC &= ~(1 << 5);
  1955  0080  1287               	bcf	7,5	;volatile
  1956                           
  1957                           ;LC-meter.c: 167: PORTC &= ~(1 << 5);
  1958  0081  1283               	bcf	3,5	;RP0=0, select bank0
  1959  0082  1287               	bcf	7,5	;volatile
  1960                           
  1961                           ;LC-meter.c: 168: delay10ms(50);
  1962  0083  3032               	movlw	50
  1963  0084  120A  118A  22CA  120A  118A  	fcall	_delay10ms
  1964                           
  1965                           ;LC-meter.c: 169: PORTC |= (1 << 5);
  1966  0089  1283               	bcf	3,5	;RP0=0, select bank0
  1967  008A  1303               	bcf	3,6	;RP1=0, select bank0
  1968  008B  1687               	bsf	7,5	;volatile
  1969                           
  1970                           ;LC-meter.c: 170: delay10ms(50);
  1971  008C  3032               	movlw	50
  1972  008D  120A  118A  22CA  120A  118A  	fcall	_delay10ms
  1973                           
  1974                           ;LC-meter.c: 171: PORTC &= ~(1 << 5);
  1975  0092  1283               	bcf	3,5	;RP0=0, select bank0
  1976  0093  1303               	bcf	3,6	;RP1=0, select bank0
  1977  0094  1287               	bcf	7,5	;volatile
  1978                           
  1979                           ;LC-meter.c: 172: delay10ms(50);
  1980  0095  3032               	movlw	50
  1981  0096  120A  118A  22CA  120A  118A  	fcall	_delay10ms
  1982                           
  1983                           ;LC-meter.c: 173: PORTC |= (1 << 5);
  1984  009B  1283               	bcf	3,5	;RP0=0, select bank0
  1985  009C  1303               	bcf	3,6	;RP1=0, select bank0
  1986  009D  1687               	bsf	7,5	;volatile
  1987                           
  1988                           ;LC-meter.c: 174: delay10ms(50);
  1989  009E  3032               	movlw	50
  1990  009F  120A  118A  22CA  120A  118A  	fcall	_delay10ms
  1991                           
  1992                           ;LC-meter.c: 175: PORTC &= ~(1 << 5);
  1993  00A4  1283               	bcf	3,5	;RP0=0, select bank0
  1994  00A5  1303               	bcf	3,6	;RP1=0, select bank0
  1995  00A6  1287               	bcf	7,5	;volatile
  1996                           
  1997                           ;LC-meter.c: 178: ser_init();
  1998  00A7  160A  158A  23FA  120A  118A  	fcall	_ser_init
  1999                           
  2000                           ;LC-meter.c: 185: INTCON |= 0xc0;
  2001  00AC  30C0               	movlw	192
  2002  00AD  048B               	iorwf	11,f	;volatile
  2003                           
  2004                           ;LC-meter.c: 191: lcd_gotoxy(0, 0);
  2005  00AE  1283               	bcf	3,5	;RP0=0, select bank0
  2006  00AF  1303               	bcf	3,6	;RP1=0, select bank0
  2007  00B0  3000               	movlw	0
  2008  00B1  01A4               	clrf	lcd_gotoxy@row
  2009  00B2  120A  158A  277C  120A  118A  	fcall	_lcd_gotoxy
  2010                           
  2011                           ;LC-meter.c: 193: lcd_puts("LC-meter ");
  2012  00B7  30B0               	movlw	low (STR_14| (0+32768))
  2013  00B8  1283               	bcf	3,5	;RP0=0, select bank0
  2014  00B9  1303               	bcf	3,6	;RP1=0, select bank0
  2015  00BA  00A3               	movwf	lcd_puts@string
  2016  00BB  3098               	movlw	high (STR_14| (0+32768))
  2017  00BC  00A4               	movwf	lcd_puts@string+1
  2018  00BD  160A  158A  2660  120A  118A  	fcall	_lcd_puts
  2019                           
  2020                           ;LC-meter.c: 194: format_double( CCal);
  2021  00C2  1683               	bsf	3,5	;RP0=1, select bank3
  2022  00C3  1703               	bsf	3,6	;RP1=1, select bank3
  2023  00C4  085A               	movf	(_CCal+3)^(0+384),w
  2024  00C5  00C3               	movwf	(format_double@num+3)^(0+384)
  2025  00C6  0859               	movf	(_CCal+2)^(0+384),w
  2026  00C7  00C2               	movwf	(format_double@num+2)^(0+384)
  2027  00C8  0858               	movf	(_CCal+1)^(0+384),w
  2028  00C9  00C1               	movwf	(format_double@num+1)^(0+384)
  2029  00CA  0857               	movf	_CCal^(0+384),w
  2030  00CB  00C0               	movwf	format_double@num^(0+384)
  2031  00CC  160A  118A  2474  120A  118A  	fcall	_format_double
  2032                           
  2033                           ;LC-meter.c: 200: delay10ms(200);
  2034  00D1  30C8               	movlw	200
  2035  00D2  120A  118A  22CA  120A  118A  	fcall	_delay10ms
  2036                           
  2037                           ;LC-meter.c: 203: calibrate();
  2038  00D7  120A  118A  213C  120A  118A  	fcall	_calibrate
  2039                           
  2040                           ;LC-meter.c: 206: lcd_clear();
  2041  00DC  120A  118A  22CB  120A  118A  	fcall	_lcd_clear
  2042  00E1                     l4894:	
  2043                           
  2044                           ;LC-meter.c: 215: char new_mode = (!!(PORTC & 0b10000));
  2045  00E1  1283               	bcf	3,5	;RP0=0, select bank0
  2046  00E2  1303               	bcf	3,6	;RP1=0, select bank0
  2047  00E3  1E07               	btfss	7,4	;volatile
  2048  00E4  28E7               	goto	u4350
  2049  00E5  3001               	movlw	1
  2050  00E6  28E8               	goto	u4360
  2051  00E7                     u4350:	
  2052  00E7  3000               	movlw	0
  2053  00E8                     u4360:	
  2054  00E8  1683               	bsf	3,5	;RP0=1, select bank3
  2055  00E9  1703               	bsf	3,6	;RP1=1, select bank3
  2056  00EA  00D6               	movwf	main@new_mode^(0+384)
  2057                           
  2058                           ;LC-meter.c: 217: if(new_mode != mode) {
  2059  00EB  0663               	xorwf	_mode^(0+384),w
  2060  00EC  1903               	skipnz
  2061  00ED  2915               	goto	l4908
  2062                           
  2063                           ;LC-meter.c: 218: ser_puts(mode ? "- C (Unit: F) -" : "- L (Unit: H) -");
  2064  00EE  0863               	movf	_mode^(0+384),w
  2065  00EF  1D03               	btfss	3,2
  2066  00F0  28F5               	goto	l4902
  2067  00F1  306E               	movlw	low (STR_16| (0+32768))
  2068  00F2  00D4               	movwf	_main$257^(0+384)
  2069  00F3  3098               	movlw	high (STR_16| (0+32768))
  2070  00F4  28F8               	goto	L1
  2071  00F5                     l4902:	
  2072  00F5  305E               	movlw	low (STR_15| (0+32768))
  2073  00F6  00D4               	movwf	_main$257^(0+384)
  2074  00F7  3098               	movlw	high (STR_15| (0+32768))
  2075  00F8                     L1:	
  2076  00F8  00D5               	movwf	(_main$257^(0+384)+1)
  2077  00F9  0854               	movf	_main$257^(0+384),w
  2078  00FA  1283               	bcf	3,5	;RP0=0, select bank0
  2079  00FB  1303               	bcf	3,6	;RP1=0, select bank0
  2080  00FC  00A1               	movwf	ser_puts@s
  2081  00FD  1683               	bsf	3,5	;RP0=1, select bank3
  2082  00FE  1703               	bsf	3,6	;RP1=1, select bank3
  2083  00FF  0855               	movf	(_main$257+1)^(0+384),w
  2084  0100  1283               	bcf	3,5	;RP0=0, select bank0
  2085  0101  1303               	bcf	3,6	;RP1=0, select bank0
  2086  0102  00A2               	movwf	ser_puts@s+1
  2087  0103  160A  118A  2423  120A  118A  	fcall	_ser_puts
  2088                           
  2089                           ;LC-meter.c: 219: ser_puts("\r\n");
  2090  0108  30F4               	movlw	low (STR_9| (0+32768))
  2091  0109  00A1               	movwf	ser_puts@s
  2092  010A  3098               	movlw	high (STR_9| (0+32768))
  2093  010B  00A2               	movwf	ser_puts@s+1
  2094  010C  160A  118A  2423  120A  118A  	fcall	_ser_puts
  2095                           
  2096                           ;LC-meter.c: 221: mode = new_mode;
  2097  0111  1683               	bsf	3,5	;RP0=1, select bank3
  2098  0112  1703               	bsf	3,6	;RP1=1, select bank3
  2099  0113  0856               	movf	main@new_mode^(0+384),w
  2100  0114  00E3               	movwf	_mode^(0+384)
  2101  0115                     l4908:	
  2102                           
  2103                           ;LC-meter.c: 222: }
  2104                           ;LC-meter.c: 224: if(mode)
  2105  0115  0863               	movf	_mode^(0+384),w
  2106  0116  1903               	btfsc	3,2
  2107  0117  291E               	goto	l4912
  2108                           
  2109                           ;LC-meter.c: 225: measure_capacitance();
  2110  0118  160A  118A  200C  120A  118A  	fcall	_measure_capacitance
  2111  011D  2923               	goto	l269
  2112  011E                     l4912:	
  2113                           
  2114                           ;LC-meter.c: 226: else
  2115                           ;LC-meter.c: 227: measure_inductance();
  2116  011E  120A  158A  21A4  120A  118A  	fcall	_measure_inductance
  2117  0123                     l269:	
  2118                           
  2119                           ;LC-meter.c: 229: print_indicator(1);
  2120  0123  3001               	movlw	1
  2121  0124  160A  158A  25D7  120A  118A  	fcall	_print_indicator
  2122                           
  2123                           ;LC-meter.c: 230: delay10ms(30);
  2124  0129  301E               	movlw	30
  2125  012A  120A  118A  22CA  120A  118A  	fcall	_delay10ms
  2126                           
  2127                           ;LC-meter.c: 232: print_indicator(0);
  2128  012F  3000               	movlw	0
  2129  0130  160A  158A  25D7  120A  118A  	fcall	_print_indicator
  2130                           
  2131                           ;LC-meter.c: 233: delay10ms(20);
  2132  0135  3014               	movlw	20
  2133  0136  120A  118A  22CA  120A  118A  	fcall	_delay10ms
  2134                           
  2135                           ;LC-meter.c: 234: }
  2136  013B  28E1               	goto	l4894
  2137  013C                     __end_of_main:	
  2138                           
  2139                           	psect	text1
  2140  1BE3                     __ptext1:	
  2141 ;; *************** function _timer2_init *****************
  2142 ;; Defined at:
  2143 ;;		line 130 in file "../../../lib/timer.c"
  2144 ;; Parameters:    Size  Location     Type
  2145 ;;  ps_mode         1    wreg     unsigned char 
  2146 ;; Auto vars:     Size  Location     Type
  2147 ;;  ps_mode         1    2[BANK0 ] unsigned char 
  2148 ;;  ps              1    1[BANK0 ] unsigned char 
  2149 ;;  postscaler      1    0        unsigned char 
  2150 ;; Return value:  Size  Location     Type
  2151 ;;		None               void
  2152 ;; Registers used:
  2153 ;;		wreg, status,2, status,0
  2154 ;; Tracked objects:
  2155 ;;		On entry : B00/0
  2156 ;;		On exit  : B00/100
  2157 ;;		Unchanged: 800/0
  2158 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2159 ;;      Params:         0       0       0       0       0
  2160 ;;      Locals:         0       3       0       0       0
  2161 ;;      Temps:          1       0       0       0       0
  2162 ;;      Totals:         1       3       0       0       0
  2163 ;;Total ram usage:        4 bytes
  2164 ;; Hardware stack levels used:    1
  2165 ;; Hardware stack levels required when called:    1
  2166 ;; This function calls:
  2167 ;;		Nothing
  2168 ;; This function is called by:
  2169 ;;		_main
  2170 ;; This function uses a non-reentrant model
  2171 ;;
  2172                           
  2173                           
  2174                           ;psect for function _timer2_init
  2175  1BE3                     _timer2_init:	
  2176                           
  2177                           ;incstack = 0
  2178                           ; Regs used in _timer2_init: [wreg+status,2+status,0]
  2179                           ;timer2_init@ps_mode stored from wreg
  2180  1BE3  00A3               	movwf	timer2_init@ps_mode
  2181                           
  2182                           ;timer.c: 131: uint8_t ps = ps_mode & 0b1111;
  2183  1BE4  00A2               	movwf	timer2_init@ps
  2184  1BE5  300F               	movlw	15
  2185  1BE6  05A2               	andwf	timer2_init@ps,f
  2186                           
  2187                           ;timer.c: 135: T2CON &= ~0b01111111;
  2188  1BE7  3080               	movlw	128
  2189  1BE8  0592               	andwf	18,f	;volatile
  2190                           
  2191                           ;timer.c: 137: T2CON |= (postscaler & 0b1111) << 3;
  2192  1BE9  0812               	movf	18,w	;volatile
  2193                           
  2194                           ;timer.c: 138: T2CON |= (ps & 0b11);
  2195  1BEA  0822               	movf	timer2_init@ps,w
  2196  1BEB  3903               	andlw	3
  2197  1BEC  0492               	iorwf	18,f	;volatile
  2198                           
  2199                           ;timer.c: 140: TMR2 = 0;
  2200  1BED  0191               	clrf	17	;volatile
  2201                           
  2202                           ;timer.c: 142: T2CON |= 0b100;
  2203  1BEE  1512               	bsf	18,2	;volatile
  2204                           
  2205                           ;timer.c: 145: PIR1 &= ~0b10;
  2206  1BEF  108C               	bcf	12,1	;volatile
  2207                           
  2208                           ;timer.c: 146: PIE1 = (!!(ps_mode & 0x80)) << 1;
  2209  1BF0  1FA3               	btfss	timer2_init@ps_mode,7
  2210  1BF1  2BF4               	goto	u4190
  2211  1BF2  3001               	movlw	1
  2212  1BF3  2BF5               	goto	u4200
  2213  1BF4                     u4190:	
  2214  1BF4  3000               	movlw	0
  2215  1BF5                     u4200:	
  2216  1BF5  00F4               	movwf	??_timer2_init
  2217  1BF6  0774               	addwf	??_timer2_init,w
  2218  1BF7  1683               	bsf	3,5	;RP0=1, select bank1
  2219  1BF8  008C               	movwf	12	;volatile
  2220  1BF9  0008               	return
  2221  1BFA                     __end_of_timer2_init:	
  2222                           
  2223                           	psect	text2
  2224  1C3D                     __ptext2:	
  2225 ;; *************** function _timer0_init *****************
  2226 ;; Defined at:
  2227 ;;		line 27 in file "../../../lib/timer.c"
  2228 ;; Parameters:    Size  Location     Type
  2229 ;;  ps_mode         1    wreg     unsigned char 
  2230 ;; Auto vars:     Size  Location     Type
  2231 ;;  ps_mode         1    9[BANK0 ] unsigned char 
  2232 ;;  prescaler       1    8[BANK0 ] unsigned char 
  2233 ;; Return value:  Size  Location     Type
  2234 ;;		None               void
  2235 ;; Registers used:
  2236 ;;		wreg, status,2, status,0
  2237 ;; Tracked objects:
  2238 ;;		On entry : B00/100
  2239 ;;		On exit  : B00/0
  2240 ;;		Unchanged: 800/0
  2241 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2242 ;;      Params:         0       0       0       0       0
  2243 ;;      Locals:         0      10       0       0       0
  2244 ;;      Temps:          0       0       0       0       0
  2245 ;;      Totals:         0      10       0       0       0
  2246 ;;Total ram usage:       10 bytes
  2247 ;; Hardware stack levels used:    1
  2248 ;; Hardware stack levels required when called:    1
  2249 ;; This function calls:
  2250 ;;		Nothing
  2251 ;; This function is called by:
  2252 ;;		_main
  2253 ;; This function uses a non-reentrant model
  2254 ;;
  2255                           
  2256                           
  2257                           ;psect for function _timer0_init
  2258  1C3D                     _timer0_init:	
  2259                           
  2260                           ;incstack = 0
  2261                           ; Regs used in _timer0_init: [wreg+status,2+status,0]
  2262                           ;timer0_init@ps_mode stored from wreg
  2263  1C3D  1283               	bcf	3,5	;RP0=0, select bank0
  2264  1C3E  00AA               	movwf	timer0_init@ps_mode
  2265                           
  2266                           ;timer.c: 28: uint8_t prescaler = ps_mode & 0b1111;
  2267  1C3F  00A9               	movwf	timer0_init@prescaler
  2268  1C40  300F               	movlw	15
  2269  1C41  05A9               	andwf	timer0_init@prescaler,f
  2270                           
  2271                           ;timer.c: 30: TMR0 = 0;
  2272  1C42  0181               	clrf	1	;volatile
  2273                           
  2274                           ;timer.c: 33: OPTION_REG |= (!!(ps_mode & 0x20)) ? 0x20 : 0x00;
  2275  1C43  1AAA               	btfsc	timer0_init@ps_mode,5
  2276  1C44  2C47               	goto	l4500
  2277  1C45  01A1               	clrf	_timer0_init$114
  2278  1C46  2C49               	goto	L2
  2279  1C47                     l4500:	
  2280  1C47  3020               	movlw	32
  2281  1C48  00A1               	movwf	_timer0_init$114
  2282  1C49                     L2:	
  2283  1C49  01A2               	clrf	_timer0_init$114+1
  2284  1C4A  0821               	movf	_timer0_init$114,w
  2285  1C4B  1683               	bsf	3,5	;RP0=1, select bank1
  2286  1C4C  0481               	iorwf	1,f	;volatile
  2287                           
  2288                           ;timer.c: 36: OPTION_REG |= (!!(ps_mode & 0x10)) ? 0x10 : 0x00;
  2289  1C4D  1283               	bcf	3,5	;RP0=0, select bank0
  2290  1C4E  1A2A               	btfsc	timer0_init@ps_mode,4
  2291  1C4F  2C52               	goto	l4508
  2292  1C50  01A3               	clrf	_timer0_init$115
  2293  1C51  2C54               	goto	L3
  2294  1C52                     l4508:	
  2295  1C52  3010               	movlw	16
  2296  1C53  00A3               	movwf	_timer0_init$115
  2297  1C54                     L3:	
  2298  1C54  01A4               	clrf	_timer0_init$115+1
  2299  1C55  0823               	movf	_timer0_init$115,w
  2300  1C56  1683               	bsf	3,5	;RP0=1, select bank1
  2301  1C57  0481               	iorwf	1,f	;volatile
  2302                           
  2303                           ;timer.c: 44: OPTION_REG &= (!!prescaler) ? ~0x08 : ~0x00;
  2304  1C58  1283               	bcf	3,5	;RP0=0, select bank0
  2305  1C59  0829               	movf	timer0_init@prescaler,w
  2306  1C5A  1D03               	btfss	3,2
  2307  1C5B  2C5F               	goto	l4516
  2308  1C5C  30FF               	movlw	255
  2309  1C5D  00A5               	movwf	_timer0_init$116
  2310  1C5E  2C62               	goto	L4
  2311  1C5F                     l4516:	
  2312  1C5F  30F7               	movlw	247
  2313  1C60  00A5               	movwf	_timer0_init$116
  2314  1C61  30FF               	movlw	255
  2315  1C62                     L4:	
  2316  1C62  00A6               	movwf	_timer0_init$116+1
  2317  1C63  0825               	movf	_timer0_init$116,w
  2318  1C64  1683               	bsf	3,5	;RP0=1, select bank1
  2319  1C65  0581               	andwf	1,f	;volatile
  2320                           
  2321                           ;timer.c: 46: OPTION_REG &= ~0b111;
  2322  1C66  30F8               	movlw	248
  2323  1C67  0581               	andwf	1,f	;volatile
  2324                           
  2325                           ;timer.c: 48: if(prescaler > 0) {
  2326  1C68  1283               	bcf	3,5	;RP0=0, select bank0
  2327  1C69  0829               	movf	timer0_init@prescaler,w
  2328  1C6A  1903               	btfsc	3,2
  2329  1C6B  2C71               	goto	l4526
  2330                           
  2331                           ;timer.c: 49: OPTION_REG |= (prescaler - 1) & 0b111;
  2332  1C6C  0829               	movf	timer0_init@prescaler,w
  2333  1C6D  3EFF               	addlw	255
  2334  1C6E  3907               	andlw	7
  2335  1C6F  1683               	bsf	3,5	;RP0=1, select bank1
  2336  1C70  0481               	iorwf	1,f	;volatile
  2337  1C71                     l4526:	
  2338                           
  2339                           ;timer.c: 55: }
  2340                           ;timer.c: 59: INTCON &= ~0x40;
  2341  1C71  130B               	bcf	11,6	;volatile
  2342                           
  2343                           ;timer.c: 60: INTCON |= (!!(ps_mode & 0x80)) ? 0x20 : 0x00;
  2344  1C72  1283               	bcf	3,5	;RP0=0, select bank0
  2345  1C73  1BAA               	btfsc	timer0_init@ps_mode,7
  2346  1C74  2C77               	goto	l4532
  2347  1C75  01A7               	clrf	_timer0_init$117
  2348  1C76  2C79               	goto	L5
  2349  1C77                     l4532:	
  2350  1C77  3020               	movlw	32
  2351  1C78  00A7               	movwf	_timer0_init$117
  2352  1C79                     L5:	
  2353  1C79  01A8               	clrf	_timer0_init$117+1
  2354  1C7A  0827               	movf	_timer0_init$117,w
  2355  1C7B  048B               	iorwf	11,f	;volatile
  2356  1C7C  0008               	return
  2357  1C7D                     __end_of_timer0_init:	
  2358                           
  2359                           	psect	text3
  2360  1BFA                     __ptext3:	
  2361 ;; *************** function _ser_init *****************
  2362 ;; Defined at:
  2363 ;;		line 98 in file "../../../lib/ser.c"
  2364 ;; Parameters:    Size  Location     Type
  2365 ;;		None
  2366 ;; Auto vars:     Size  Location     Type
  2367 ;;		None
  2368 ;; Return value:  Size  Location     Type
  2369 ;;		None               void
  2370 ;; Registers used:
  2371 ;;		wreg, status,2
  2372 ;; Tracked objects:
  2373 ;;		On entry : 300/0
  2374 ;;		On exit  : 300/300
  2375 ;;		Unchanged: 0/0
  2376 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2377 ;;      Params:         0       0       0       0       0
  2378 ;;      Locals:         0       0       0       0       0
  2379 ;;      Temps:          0       0       0       0       0
  2380 ;;      Totals:         0       0       0       0       0
  2381 ;;Total ram usage:        0 bytes
  2382 ;; Hardware stack levels used:    1
  2383 ;; Hardware stack levels required when called:    1
  2384 ;; This function calls:
  2385 ;;		Nothing
  2386 ;; This function is called by:
  2387 ;;		_main
  2388 ;; This function uses a non-reentrant model
  2389 ;;
  2390                           
  2391                           
  2392                           ;psect for function _ser_init
  2393  1BFA                     _ser_init:	
  2394                           
  2395                           ;ser.c: 101: TRISC6 = 1;
  2396                           
  2397                           ;incstack = 0
  2398                           ; Regs used in _ser_init: [wreg+status,2]
  2399  1BFA  1683               	bsf	3,5	;RP0=1, select bank1
  2400  1BFB  1707               	bsf	7,6	;volatile
  2401                           
  2402                           ;ser.c: 102: RC7 = 1;
  2403  1BFC  1283               	bcf	3,5	;RP0=0, select bank0
  2404  1BFD  1787               	bsf	7,7	;volatile
  2405                           
  2406                           ;ser.c: 104: BRGH = 1;
  2407  1BFE  1683               	bsf	3,5	;RP0=1, select bank1
  2408  1BFF  1518               	bsf	24,2	;volatile
  2409                           
  2410                           ;ser.c: 110: SPBRG = ser_brg;
  2411  1C00  301F               	movlw	31
  2412  1C01  0099               	movwf	25	;volatile
  2413                           
  2414                           ;ser.c: 113: TX9 = 0;
  2415  1C02  1318               	bcf	24,6	;volatile
  2416                           
  2417                           ;ser.c: 114: RX9 = 0;
  2418  1C03  1283               	bcf	3,5	;RP0=0, select bank0
  2419  1C04  1318               	bcf	24,6	;volatile
  2420                           
  2421                           ;ser.c: 116: SYNC = 0;
  2422  1C05  1683               	bsf	3,5	;RP0=1, select bank1
  2423  1C06  1218               	bcf	24,4	;volatile
  2424                           
  2425                           ;ser.c: 117: SPEN = 1;
  2426  1C07  1283               	bcf	3,5	;RP0=0, select bank0
  2427  1C08  1798               	bsf	24,7	;volatile
  2428                           
  2429                           ;ser.c: 118: CREN = 1;
  2430  1C09  1618               	bsf	24,4	;volatile
  2431                           
  2432                           ;ser.c: 119: TXIE = 0;
  2433  1C0A  1683               	bsf	3,5	;RP0=1, select bank1
  2434  1C0B  120C               	bcf	12,4	;volatile
  2435                           
  2436                           ;ser.c: 121: TXEN = 1;
  2437  1C0C  1698               	bsf	24,5	;volatile
  2438                           
  2439                           ;ser.c: 122: PEIE = 1;
  2440  1C0D  170B               	bsf	11,6	;volatile
  2441                           
  2442                           ;ser.c: 124: rxiptr = rxoptr = txiptr = txoptr = 0;
  2443  1C0E  01F9               	clrf	_txoptr	;volatile
  2444  1C0F  01F8               	clrf	_txiptr	;volatile
  2445  1C10  1703               	bsf	3,6	;RP1=1, select bank3
  2446  1C11  01A9               	clrf	_rxoptr^(0+384)	;volatile
  2447  1C12  01F7               	clrf	_rxiptr	;volatile
  2448  1C13  0008               	return
  2449  1C14                     __end_of_ser_init:	
  2450                           
  2451                           	psect	text4
  2452  1DD7                     __ptext4:	
  2453 ;; *************** function _print_indicator *****************
  2454 ;; Defined at:
  2455 ;;		line 184 in file "../../../src/print.c"
  2456 ;; Parameters:    Size  Location     Type
  2457 ;;  indicate        1    wreg     unsigned char 
  2458 ;; Auto vars:     Size  Location     Type
  2459 ;;  indicate        1    9[BANK0 ] unsigned char 
  2460 ;; Return value:  Size  Location     Type
  2461 ;;		None               void
  2462 ;; Registers used:
  2463 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2464 ;; Tracked objects:
  2465 ;;		On entry : 0/0
  2466 ;;		On exit  : 300/0
  2467 ;;		Unchanged: 0/0
  2468 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2469 ;;      Params:         0       0       0       0       0
  2470 ;;      Locals:         0       1       0       0       0
  2471 ;;      Temps:          0       0       0       0       0
  2472 ;;      Totals:         0       1       0       0       0
  2473 ;;Total ram usage:        1 bytes
  2474 ;; Hardware stack levels used:    1
  2475 ;; Hardware stack levels required when called:    5
  2476 ;; This function calls:
  2477 ;;		_lcd_gotoxy
  2478 ;;		_lcd_puts
  2479 ;; This function is called by:
  2480 ;;		_main
  2481 ;; This function uses a non-reentrant model
  2482 ;;
  2483                           
  2484                           
  2485                           ;psect for function _print_indicator
  2486  1DD7                     _print_indicator:	
  2487                           
  2488                           ;incstack = 0
  2489                           ; Regs used in _print_indicator: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2490                           ;print_indicator@indicate stored from wreg
  2491  1DD7  1283               	bcf	3,5	;RP0=0, select bank0
  2492  1DD8  1303               	bcf	3,6	;RP1=0, select bank0
  2493  1DD9  00AA               	movwf	print_indicator@indicate
  2494  1DDA  3000               	movlw	0
  2495                           
  2496                           ;print.c: 198: lcd_gotoxy(0, 1);
  2497  1DDB  01A4               	clrf	lcd_gotoxy@row
  2498  1DDC  0AA4               	incf	lcd_gotoxy@row,f
  2499  1DDD  120A  158A  277C  160A  158A  	fcall	_lcd_gotoxy
  2500                           
  2501                           ;print.c: 199: if(indicate) {
  2502  1DE2  1283               	bcf	3,5	;RP0=0, select bank0
  2503  1DE3  1303               	bcf	3,6	;RP1=0, select bank0
  2504  1DE4  082A               	movf	print_indicator@indicate,w
  2505  1DE5  1903               	btfsc	3,2
  2506  1DE6  2DEC               	goto	l4488
  2507                           
  2508                           ;print.c: 200: lcd_puts("-*-");
  2509  1DE7  30F0               	movlw	low (STR_11| (0+32768))
  2510  1DE8  00A3               	movwf	lcd_puts@string
  2511  1DE9  3098               	movlw	high (STR_11| (0+32768))
  2512  1DEA  00A4               	movwf	lcd_puts@string+1
  2513  1DEB  2E60               	ljmp	l4244
  2514  1DEC                     l4488:	
  2515                           ;print.c: 201: } else {
  2516                           
  2517                           
  2518                           ;print.c: 202: lcd_puts("   ");
  2519  1DEC  30C5               	movlw	low ((STR_18+3)| (0+32768))
  2520  1DED  00A3               	movwf	lcd_puts@string
  2521  1DEE  3098               	movlw	high ((STR_18+3)| (0+32768))
  2522  1DEF  00A4               	movwf	lcd_puts@string+1
  2523  1DF0  2E60               	ljmp	l4244
  2524  1DF1                     __end_of_print_indicator:	
  2525  1DF1                     __ptext8:	
  2526 ;; *************** function _print_reading *****************
  2527 ;; Defined at:
  2528 ;;		line 144 in file "../../../src/print.c"
  2529 ;; Parameters:    Size  Location     Type
  2530 ;;  measurement     2   48[BANK0 ] unsigned int 
  2531 ;; Auto vars:     Size  Location     Type
  2532 ;;		None
  2533 ;; Return value:  Size  Location     Type
  2534 ;;		None               void
  2535 ;; Registers used:
  2536 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2537 ;; Tracked objects:
  2538 ;;		On entry : 300/0
  2539 ;;		On exit  : 300/0
  2540 ;;		Unchanged: 0/0
  2541 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2542 ;;      Params:         0       2       0       0       0
  2543 ;;      Locals:         0       4       0       0       0
  2544 ;;      Temps:          0       0       0       0       0
  2545 ;;      Totals:         0       6       0       0       0
  2546 ;;Total ram usage:        6 bytes
  2547 ;; Hardware stack levels used:    1
  2548 ;; Hardware stack levels required when called:    5
  2549 ;; This function calls:
  2550 ;;		___lwdiv
  2551 ;;		___lwmod
  2552 ;;		_format_number
  2553 ;;		_lcd_gotoxy
  2554 ;;		_lcd_puts
  2555 ;; This function is called by:
  2556 ;;		_measure_capacitance
  2557 ;;		_measure_inductance
  2558 ;; This function uses a non-reentrant model
  2559 ;;
  2560                           
  2561                           
  2562                           ;psect for function _print_reading
  2563  1DF1                     _print_reading:	
  2564                           
  2565                           ;incstack = 0
  2566                           ; Regs used in _print_reading: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2567  1DF1  3009               	movlw	9
  2568                           
  2569                           ;print.c: 171: lcd_gotoxy(9, 0);
  2570  1DF2  01A4               	clrf	lcd_gotoxy@row
  2571  1DF3  120A  158A  277C  160A  158A  	fcall	_lcd_gotoxy
  2572                           
  2573                           ;print.c: 172: lcd_puts("     ");
  2574  1DF8  30C3               	movlw	low ((STR_18+1)| (0+32768))
  2575  1DF9  1283               	bcf	3,5	;RP0=0, select bank0
  2576  1DFA  1303               	bcf	3,6	;RP1=0, select bank0
  2577  1DFB  00A3               	movwf	lcd_puts@string
  2578  1DFC  3098               	movlw	high ((STR_18+1)| (0+32768))
  2579  1DFD  00A4               	movwf	lcd_puts@string+1
  2580  1DFE  2660               	fcall	_lcd_puts
  2581  1DFF  3009               	movlw	9
  2582                           
  2583                           ;print.c: 173: lcd_gotoxy(9, 0);
  2584  1E00  01A4               	clrf	lcd_gotoxy@row
  2585  1E01  120A  158A  277C  160A  158A  	fcall	_lcd_gotoxy
  2586                           
  2587                           ;print.c: 175: format_number(measurement / 100, 10, 0);
  2588  1E06  3064               	movlw	100
  2589  1E07  1283               	bcf	3,5	;RP0=0, select bank0
  2590  1E08  1303               	bcf	3,6	;RP1=0, select bank0
  2591  1E09  00A1               	movwf	___lwdiv@divisor
  2592  1E0A  01A2               	clrf	___lwdiv@divisor+1
  2593  1E0B  0852               	movf	print_reading@measurement+1,w
  2594  1E0C  00A4               	movwf	___lwdiv@dividend+1
  2595  1E0D  0851               	movf	print_reading@measurement,w
  2596  1E0E  00A3               	movwf	___lwdiv@dividend
  2597  1E0F  2636               	fcall	___lwdiv
  2598  1E10  0822               	movf	?___lwdiv+1,w
  2599  1E11  00D4               	movwf	_print_reading$1004+1
  2600  1E12  0821               	movf	?___lwdiv,w
  2601  1E13  00D3               	movwf	_print_reading$1004
  2602                           
  2603                           ;print.c: 175: format_number(measurement / 100, 10, 0);
  2604  1E14  0854               	movf	_print_reading$1004+1,w
  2605  1E15  00A9               	movwf	format_number@n+1
  2606  1E16  0853               	movf	_print_reading$1004,w
  2607  1E17  00A8               	movwf	format_number@n
  2608  1E18  300A               	movlw	10
  2609  1E19  00AA               	movwf	format_number@base
  2610  1E1A  01AB               	clrf	format_number@pad
  2611  1E1B  160A  118A  273E  160A  158A  	fcall	_format_number
  2612                           
  2613                           ;print.c: 177: format_number(measurement % 100, 10, 0);
  2614  1E20  3064               	movlw	100
  2615  1E21  00A1               	movwf	___lwmod@divisor
  2616  1E22  01A2               	clrf	___lwmod@divisor+1
  2617  1E23  0852               	movf	print_reading@measurement+1,w
  2618  1E24  00A4               	movwf	___lwmod@dividend+1
  2619  1E25  0851               	movf	print_reading@measurement,w
  2620  1E26  00A3               	movwf	___lwmod@dividend
  2621  1E27  2687               	fcall	___lwmod
  2622  1E28  0822               	movf	?___lwmod+1,w
  2623  1E29  00D6               	movwf	_print_reading$1005+1
  2624  1E2A  0821               	movf	?___lwmod,w
  2625  1E2B  00D5               	movwf	_print_reading$1005
  2626                           
  2627                           ;print.c: 177: format_number(measurement % 100, 10, 0);
  2628  1E2C  0856               	movf	_print_reading$1005+1,w
  2629  1E2D  00A9               	movwf	format_number@n+1
  2630  1E2E  0855               	movf	_print_reading$1005,w
  2631  1E2F  00A8               	movwf	format_number@n
  2632  1E30  300A               	movlw	10
  2633  1E31  00AA               	movwf	format_number@base
  2634  1E32  01AB               	clrf	format_number@pad
  2635  1E33  160A  118A  2F3E   	ljmp	l4252
  2636  1E36                     __end_of_print_reading:	
  2637  1E36                     __ptext43:	
  2638 ;; *************** function ___lwdiv *****************
  2639 ;; Defined at:
  2640 ;;		line 6 in file "/opt/microchip/xc8/v1.34/sources/common/lwdiv.c"
  2641 ;; Parameters:    Size  Location     Type
  2642 ;;  divisor         2    0[BANK0 ] unsigned int 
  2643 ;;  dividend        2    2[BANK0 ] unsigned int 
  2644 ;; Auto vars:     Size  Location     Type
  2645 ;;  quotient        2    5[BANK0 ] unsigned int 
  2646 ;;  counter         1    4[BANK0 ] unsigned char 
  2647 ;; Return value:  Size  Location     Type
  2648 ;;                  2    0[BANK0 ] unsigned int 
  2649 ;; Registers used:
  2650 ;;		wreg, status,2, status,0
  2651 ;; Tracked objects:
  2652 ;;		On entry : 300/0
  2653 ;;		On exit  : 300/0
  2654 ;;		Unchanged: 0/0
  2655 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2656 ;;      Params:         0       4       0       0       0
  2657 ;;      Locals:         0       3       0       0       0
  2658 ;;      Temps:          0       0       0       0       0
  2659 ;;      Totals:         0       7       0       0       0
  2660 ;;Total ram usage:        7 bytes
  2661 ;; Hardware stack levels used:    1
  2662 ;; Hardware stack levels required when called:    1
  2663 ;; This function calls:
  2664 ;;		Nothing
  2665 ;; This function is called by:
  2666 ;;		_print_reading
  2667 ;;		_format_number
  2668 ;; This function uses a non-reentrant model
  2669 ;;
  2670                           
  2671                           
  2672                           ;psect for function ___lwdiv
  2673  1E36                     ___lwdiv:	
  2674                           
  2675                           ;incstack = 0
  2676                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  2677  1E36  01A6               	clrf	___lwdiv@quotient
  2678  1E37  01A7               	clrf	___lwdiv@quotient+1
  2679  1E38  0821               	movf	___lwdiv@divisor,w
  2680  1E39  0422               	iorwf	___lwdiv@divisor+1,w
  2681  1E3A  1903               	btfsc	3,2
  2682  1E3B  2E5B               	goto	l4162
  2683  1E3C  01A5               	clrf	___lwdiv@counter
  2684  1E3D                     L18:	
  2685  1E3D  0AA5               	incf	___lwdiv@counter,f
  2686  1E3E  1BA2               	btfsc	___lwdiv@divisor+1,7
  2687  1E3F  2E44               	goto	l4150
  2688  1E40  1003               	clrc
  2689  1E41  0DA1               	rlf	___lwdiv@divisor,f
  2690  1E42  0DA2               	rlf	___lwdiv@divisor+1,f
  2691  1E43  2E3D               	goto	L18
  2692  1E44                     l4150:	
  2693  1E44  1003               	clrc
  2694  1E45  0DA6               	rlf	___lwdiv@quotient,f
  2695  1E46  0DA7               	rlf	___lwdiv@quotient+1,f
  2696  1E47  0822               	movf	___lwdiv@divisor+1,w
  2697  1E48  0224               	subwf	___lwdiv@dividend+1,w
  2698  1E49  1D03               	skipz
  2699  1E4A  2E4D               	goto	u3785
  2700  1E4B  0821               	movf	___lwdiv@divisor,w
  2701  1E4C  0223               	subwf	___lwdiv@dividend,w
  2702  1E4D                     u3785:	
  2703  1E4D  1C03               	skipc
  2704  1E4E  2E57               	goto	L19
  2705  1E4F  0821               	movf	___lwdiv@divisor,w
  2706  1E50  02A3               	subwf	___lwdiv@dividend,f
  2707  1E51  0822               	movf	___lwdiv@divisor+1,w
  2708  1E52  1C03               	skipc
  2709  1E53  03A4               	decf	___lwdiv@dividend+1,f
  2710  1E54  02A4               	subwf	___lwdiv@dividend+1,f
  2711  1E55  1426               	bsf	___lwdiv@quotient,0
  2712  1E56  1003               	clrc
  2713  1E57                     L19:	
  2714  1E57  0CA2               	rrf	___lwdiv@divisor+1,f
  2715  1E58  0CA1               	rrf	___lwdiv@divisor,f
  2716  1E59  0BA5               	decfsz	___lwdiv@counter,f
  2717  1E5A  2E44               	goto	l4150
  2718  1E5B                     l4162:	
  2719  1E5B  0827               	movf	___lwdiv@quotient+1,w
  2720  1E5C  00A2               	movwf	?___lwdiv+1
  2721  1E5D  0826               	movf	___lwdiv@quotient,w
  2722  1E5E  00A1               	movwf	?___lwdiv
  2723  1E5F  0008               	return
  2724  1E60                     __end_of___lwdiv:	
  2725  1E60                     __ptext9:	
  2726 ;; *************** function _lcd_puts *****************
  2727 ;; Defined at:
  2728 ;;		line 163 in file "../../../lib/lcd44780.c"
  2729 ;; Parameters:    Size  Location     Type
  2730 ;;  string          2    2[BANK0 ] PTR const unsigned char 
  2731 ;;		 -> STR_21(5), STR_20(6), STR_19(7), STR_18(7), 
  2732 ;;		 -> STR_14(10), STR_12(4), STR_11(4), STR_10(6), 
  2733 ;; Auto vars:     Size  Location     Type
  2734 ;;  i               1    4[BANK0 ] unsigned char 
  2735 ;; Return value:  Size  Location     Type
  2736 ;;		None               void
  2737 ;; Registers used:
  2738 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2739 ;; Tracked objects:
  2740 ;;		On entry : 300/0
  2741 ;;		On exit  : 300/0
  2742 ;;		Unchanged: 0/0
  2743 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2744 ;;      Params:         0       2       0       0       0
  2745 ;;      Locals:         0       1       0       0       0
  2746 ;;      Temps:          0       0       0       0       0
  2747 ;;      Totals:         0       3       0       0       0
  2748 ;;Total ram usage:        3 bytes
  2749 ;; Hardware stack levels used:    1
  2750 ;; Hardware stack levels required when called:    3
  2751 ;; This function calls:
  2752 ;;		_lcd_send
  2753 ;; This function is called by:
  2754 ;;		_print_reading
  2755 ;;		_print_indicator
  2756 ;;		_main
  2757 ;; This function uses a non-reentrant model
  2758 ;;
  2759                           
  2760                           
  2761                           ;psect for function _lcd_puts
  2762  1E60                     _lcd_puts:	
  2763  1E60                     l4244:	
  2764                           ;incstack = 0
  2765                           ; Regs used in _lcd_puts: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2766                           
  2767                           
  2768                           ;lcd44780.c: 164: uint8_t i;
  2769                           ;lcd44780.c: 165: for(i = 0; string[i]; i++) lcd_send((string[i]), 1);
  2770  1E60  01A5               	clrf	lcd_puts@i
  2771  1E61                     l4250:	
  2772  1E61  0825               	movf	lcd_puts@i,w
  2773  1E62  0723               	addwf	lcd_puts@string,w
  2774  1E63  0084               	movwf	4
  2775  1E64  0824               	movf	lcd_puts@string+1,w
  2776  1E65  1803               	skipnc
  2777  1E66  0A24               	incf	lcd_puts@string+1,w
  2778  1E67  00FF               	movwf	127
  2779  1E68  160A  158A  2000  160A  158A  	fcall	stringtab
  2780  1E6D  3A00               	xorlw	0
  2781  1E6E  1903               	btfsc	3,2
  2782  1E6F  0008               	return
  2783  1E70  01A1               	clrf	lcd_send@mode
  2784  1E71  0AA1               	incf	lcd_send@mode,f
  2785  1E72  0825               	movf	lcd_puts@i,w
  2786  1E73  0723               	addwf	lcd_puts@string,w
  2787  1E74  0084               	movwf	4
  2788  1E75  0824               	movf	lcd_puts@string+1,w
  2789  1E76  1803               	skipnc
  2790  1E77  0A24               	incf	lcd_puts@string+1,w
  2791  1E78  00FF               	movwf	127
  2792  1E79  160A  158A  2000  160A  158A  	fcall	stringtab
  2793  1E7E  120A  158A  27EE  160A  158A  	fcall	_lcd_send
  2794  1E83  1283               	bcf	3,5	;RP0=0, select bank0
  2795  1E84  1303               	bcf	3,6	;RP1=0, select bank0
  2796  1E85  0AA5               	incf	lcd_puts@i,f
  2797  1E86  2E61               	goto	l4250
  2798  1E87                     __end_of_lcd_puts:	
  2799  1E87                     __ptext42:	
  2800 ;; *************** function ___lwmod *****************
  2801 ;; Defined at:
  2802 ;;		line 6 in file "/opt/microchip/xc8/v1.34/sources/common/lwmod.c"
  2803 ;; Parameters:    Size  Location     Type
  2804 ;;  divisor         2    0[BANK0 ] unsigned int 
  2805 ;;  dividend        2    2[BANK0 ] unsigned int 
  2806 ;; Auto vars:     Size  Location     Type
  2807 ;;  counter         1    4[COMMON] unsigned char 
  2808 ;; Return value:  Size  Location     Type
  2809 ;;                  2    0[BANK0 ] unsigned int 
  2810 ;; Registers used:
  2811 ;;		wreg, status,2, status,0
  2812 ;; Tracked objects:
  2813 ;;		On entry : 300/0
  2814 ;;		On exit  : 300/0
  2815 ;;		Unchanged: 0/0
  2816 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2817 ;;      Params:         0       4       0       0       0
  2818 ;;      Locals:         1       0       0       0       0
  2819 ;;      Temps:          0       0       0       0       0
  2820 ;;      Totals:         1       4       0       0       0
  2821 ;;Total ram usage:        5 bytes
  2822 ;; Hardware stack levels used:    1
  2823 ;; Hardware stack levels required when called:    1
  2824 ;; This function calls:
  2825 ;;		Nothing
  2826 ;; This function is called by:
  2827 ;;		_print_reading
  2828 ;;		_format_number
  2829 ;; This function uses a non-reentrant model
  2830 ;;
  2831                           
  2832                           
  2833                           ;psect for function ___lwmod
  2834  1E87                     ___lwmod:	
  2835                           
  2836                           ;incstack = 0
  2837                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  2838  1E87  0821               	movf	___lwmod@divisor,w
  2839  1E88  0422               	iorwf	___lwmod@divisor+1,w
  2840  1E89  1903               	btfsc	3,2
  2841  1E8A  2EA6               	goto	l4182
  2842  1E8B  01F4               	clrf	___lwmod@counter
  2843  1E8C                     L16:	
  2844  1E8C  0AF4               	incf	___lwmod@counter,f
  2845  1E8D  1BA2               	btfsc	___lwmod@divisor+1,7
  2846  1E8E  2E93               	goto	l4174
  2847  1E8F  1003               	clrc
  2848  1E90  0DA1               	rlf	___lwmod@divisor,f
  2849  1E91  0DA2               	rlf	___lwmod@divisor+1,f
  2850  1E92  2E8C               	goto	L16
  2851  1E93                     l4174:	
  2852  1E93  0822               	movf	___lwmod@divisor+1,w
  2853  1E94  0224               	subwf	___lwmod@dividend+1,w
  2854  1E95  1D03               	skipz
  2855  1E96  2E99               	goto	u3825
  2856  1E97  0821               	movf	___lwmod@divisor,w
  2857  1E98  0223               	subwf	___lwmod@dividend,w
  2858  1E99                     u3825:	
  2859  1E99  1C03               	skipc
  2860  1E9A  2EA2               	goto	L17
  2861  1E9B  0821               	movf	___lwmod@divisor,w
  2862  1E9C  02A3               	subwf	___lwmod@dividend,f
  2863  1E9D  0822               	movf	___lwmod@divisor+1,w
  2864  1E9E  1C03               	skipc
  2865  1E9F  03A4               	decf	___lwmod@dividend+1,f
  2866  1EA0  02A4               	subwf	___lwmod@dividend+1,f
  2867  1EA1  1003               	clrc
  2868  1EA2                     L17:	
  2869  1EA2  0CA2               	rrf	___lwmod@divisor+1,f
  2870  1EA3  0CA1               	rrf	___lwmod@divisor,f
  2871  1EA4  0BF4               	decfsz	___lwmod@counter,f
  2872  1EA5  2E93               	goto	l4174
  2873  1EA6                     l4182:	
  2874  1EA6  0824               	movf	___lwmod@dividend+1,w
  2875  1EA7  00A2               	movwf	?___lwmod+1
  2876  1EA8  0823               	movf	___lwmod@dividend,w
  2877  1EA9  00A1               	movwf	?___lwmod
  2878  1EAA  0008               	return
  2879  1EAB                     __end_of___lwmod:	
  2880                           
  2881                           	psect	text6
  2882  100C                     __ptext6:	
  2883 ;; *************** function _measure_capacitance *****************
  2884 ;; Defined at:
  2885 ;;		line 119 in file "../../../lib/../src/measure.c"
  2886 ;; Parameters:    Size  Location     Type
  2887 ;;		None
  2888 ;; Auto vars:     Size  Location     Type
  2889 ;;  Cin             4   15[BANK2 ] unsigned char 
  2890 ;;  var             2   13[BANK2 ] unsigned int 
  2891 ;;  unit            1   12[BANK2 ] unsigned char 
  2892 ;; Return value:  Size  Location     Type
  2893 ;;		None               void
  2894 ;; Registers used:
  2895 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2896 ;; Tracked objects:
  2897 ;;		On entry : 300/300
  2898 ;;		On exit  : 300/0
  2899 ;;		Unchanged: 0/0
  2900 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2901 ;;      Params:         0       0       0       0       0
  2902 ;;      Locals:         0       0       0       0      19
  2903 ;;      Temps:          0       0       0       0       0
  2904 ;;      Totals:         0       0       0       0      19
  2905 ;;Total ram usage:       19 bytes
  2906 ;; Hardware stack levels used:    1
  2907 ;; Hardware stack levels required when called:    7
  2908 ;; This function calls:
  2909 ;;		___fldiv
  2910 ;;		___flge
  2911 ;;		___flmul
  2912 ;;		___flsub
  2913 ;;		___fltol
  2914 ;;		___lwtofl
  2915 ;;		_format_double
  2916 ;;		_format_xint32
  2917 ;;		_lcd_gotoxy
  2918 ;;		_measure_freq
  2919 ;;		_print_reading
  2920 ;;		_print_unit
  2921 ;;		_put_str
  2922 ;;		_ser_putch
  2923 ;;		_ser_puts
  2924 ;; This function is called by:
  2925 ;;		_main
  2926 ;; This function uses a non-reentrant model
  2927 ;;
  2928                           
  2929                           
  2930                           ;psect for function _measure_capacitance
  2931  100C                     _measure_capacitance:	
  2932                           
  2933                           ;measure.c: 120: uint8_t unit;
  2934                           ;measure.c: 121: uint16_t var;
  2935                           ;measure.c: 123: double Cin;
  2936                           ;measure.c: 127: lcd_gotoxy(0, 0);
  2937                           
  2938                           ;incstack = 0
  2939                           ; Regs used in _measure_capacitance: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack
      +                          ]
  2940  100C  1283               	bcf	3,5	;RP0=0, select bank0
  2941  100D  1303               	bcf	3,6	;RP1=0, select bank0
  2942  100E  3000               	movlw	0
  2943  100F  01A4               	clrf	lcd_gotoxy@row
  2944  1010  120A  158A  277C  160A  118A  	fcall	_lcd_gotoxy
  2945                           
  2946                           ;measure.c: 128: put_str("Capacity ");
  2947  1015  30A6               	movlw	low (STR_28| (0+32768))
  2948  1016  1283               	bcf	3,5	;RP0=0, select bank0
  2949  1017  1303               	bcf	3,6	;RP1=0, select bank0
  2950  1018  00A4               	movwf	put_str@s
  2951  1019  3098               	movlw	high (STR_28| (0+32768))
  2952  101A  00A5               	movwf	put_str@s+1
  2953  101B  120A  158A  27AD  160A  118A  	fcall	_put_str
  2954                           
  2955                           ;measure.c: 130: var = measure_freq();
  2956  1020  120A  118A  2220  160A  118A  	fcall	_measure_freq
  2957  1025  0852               	movf	?_measure_freq+1,w
  2958  1026  1703               	bsf	3,6	;RP1=1, select bank2
  2959  1027  00BE               	movwf	(measure_capacitance@var+1)^(0+256)
  2960  1028  1303               	bcf	3,6	;RP1=0, select bank0
  2961  1029  0851               	movf	?_measure_freq,w
  2962  102A  1703               	bsf	3,6	;RP1=1, select bank2
  2963  102B  00BD               	movwf	measure_capacitance@var^(0+256)
  2964                           
  2965                           ;measure.c: 132: F3 = (double)var;
  2966  102C  083E               	movf	(measure_capacitance@var+1)^(0+256),w
  2967  102D  1303               	bcf	3,6	;RP1=0, select bank0
  2968  102E  00D8               	movwf	___lwtofl@c+1
  2969  102F  1703               	bsf	3,6	;RP1=1, select bank2
  2970  1030  083D               	movf	measure_capacitance@var^(0+256),w
  2971  1031  1303               	bcf	3,6	;RP1=0, select bank0
  2972  1032  00D7               	movwf	___lwtofl@c
  2973  1033  27ED  160A  118A   	fcall	___lwtofl
  2974  1036  085A               	movf	?___lwtofl+3,w
  2975  1037  1683               	bsf	3,5	;RP0=1, select bank3
  2976  1038  1703               	bsf	3,6	;RP1=1, select bank3
  2977  1039  0097               	movwf	(_F3+3)^(0+384)
  2978  103A  1283               	bcf	3,5	;RP0=0, select bank0
  2979  103B  1303               	bcf	3,6	;RP1=0, select bank0
  2980  103C  0859               	movf	?___lwtofl+2,w
  2981  103D  1683               	bsf	3,5	;RP0=1, select bank3
  2982  103E  1703               	bsf	3,6	;RP1=1, select bank3
  2983  103F  0096               	movwf	(_F3+2)^(0+384)
  2984  1040  1283               	bcf	3,5	;RP0=0, select bank0
  2985  1041  1303               	bcf	3,6	;RP1=0, select bank0
  2986  1042  0858               	movf	?___lwtofl+1,w
  2987  1043  1683               	bsf	3,5	;RP0=1, select bank3
  2988  1044  1703               	bsf	3,6	;RP1=1, select bank3
  2989  1045  0095               	movwf	(_F3+1)^(0+384)
  2990  1046  1283               	bcf	3,5	;RP0=0, select bank0
  2991  1047  1303               	bcf	3,6	;RP1=0, select bank0
  2992  1048  0857               	movf	?___lwtofl,w
  2993  1049  1683               	bsf	3,5	;RP0=1, select bank3
  2994  104A  1703               	bsf	3,6	;RP1=1, select bank3
  2995  104B  0094               	movwf	_F3^(0+384)
  2996                           
  2997                           ;measure.c: 135: ser_puts("var=");
  2998  104C  30E6               	movlw	low (STR_29| (0+32768))
  2999  104D  1283               	bcf	3,5	;RP0=0, select bank0
  3000  104E  1303               	bcf	3,6	;RP1=0, select bank0
  3001  104F  00A1               	movwf	ser_puts@s
  3002  1050  3098               	movlw	high (STR_29| (0+32768))
  3003  1051  00A2               	movwf	ser_puts@s+1
  3004  1052  2423  160A  118A   	fcall	_ser_puts
  3005                           
  3006                           ;measure.c: 136: format_xint32(var);
  3007  1055  1703               	bsf	3,6	;RP1=1, select bank2
  3008  1056  083D               	movf	measure_capacitance@var^(0+256),w
  3009  1057  1303               	bcf	3,6	;RP1=0, select bank0
  3010  1058  00D1               	movwf	format_xint32@x
  3011  1059  1703               	bsf	3,6	;RP1=1, select bank2
  3012  105A  083E               	movf	(measure_capacitance@var+1)^(0+256),w
  3013  105B  1303               	bcf	3,6	;RP1=0, select bank0
  3014  105C  00D2               	movwf	format_xint32@x+1
  3015  105D  01D3               	clrf	format_xint32@x+2
  3016  105E  01D4               	clrf	format_xint32@x+3
  3017  105F  2456  160A  118A   	fcall	_format_xint32
  3018                           
  3019                           ;measure.c: 137: ser_puts("\r\nF1=");
  3020  1062  30C9               	movlw	low (STR_30| (0+32768))
  3021  1063  00A1               	movwf	ser_puts@s
  3022  1064  3098               	movlw	high (STR_30| (0+32768))
  3023  1065  00A2               	movwf	ser_puts@s+1
  3024  1066  2423  160A  118A   	fcall	_ser_puts
  3025                           
  3026                           ;measure.c: 138: format_double(F1);
  3027  1069  1683               	bsf	3,5	;RP0=1, select bank3
  3028  106A  1703               	bsf	3,6	;RP1=1, select bank3
  3029  106B  083F               	movf	(_F1+3)^(0+384),w
  3030  106C  00C3               	movwf	(format_double@num+3)^(0+384)
  3031  106D  083E               	movf	(_F1+2)^(0+384),w
  3032  106E  00C2               	movwf	(format_double@num+2)^(0+384)
  3033  106F  083D               	movf	(_F1+1)^(0+384),w
  3034  1070  00C1               	movwf	(format_double@num+1)^(0+384)
  3035  1071  083C               	movf	_F1^(0+384),w
  3036  1072  00C0               	movwf	format_double@num^(0+384)
  3037  1073  2474  160A  118A   	fcall	_format_double
  3038                           
  3039                           ;measure.c: 139: ser_putch(' ');
  3040  1076  3020               	movlw	32
  3041  1077  2440  160A  118A   	fcall	_ser_putch
  3042                           
  3043                           ;measure.c: 140: format_xint32(*(uint32_t*)&F1);
  3044  107A  1703               	bsf	3,6	;RP1=1, select bank3
  3045  107B  083F               	movf	(_F1+3)^(0+384),w
  3046  107C  1283               	bcf	3,5	;RP0=0, select bank0
  3047  107D  1303               	bcf	3,6	;RP1=0, select bank0
  3048  107E  00D4               	movwf	format_xint32@x+3
  3049  107F  1683               	bsf	3,5	;RP0=1, select bank3
  3050  1080  1703               	bsf	3,6	;RP1=1, select bank3
  3051  1081  083E               	movf	(_F1+2)^(0+384),w
  3052  1082  1283               	bcf	3,5	;RP0=0, select bank0
  3053  1083  1303               	bcf	3,6	;RP1=0, select bank0
  3054  1084  00D3               	movwf	format_xint32@x+2
  3055  1085  1683               	bsf	3,5	;RP0=1, select bank3
  3056  1086  1703               	bsf	3,6	;RP1=1, select bank3
  3057  1087  083D               	movf	(_F1+1)^(0+384),w
  3058  1088  1283               	bcf	3,5	;RP0=0, select bank0
  3059  1089  1303               	bcf	3,6	;RP1=0, select bank0
  3060  108A  00D2               	movwf	format_xint32@x+1
  3061  108B  1683               	bsf	3,5	;RP0=1, select bank3
  3062  108C  1703               	bsf	3,6	;RP1=1, select bank3
  3063  108D  083C               	movf	_F1^(0+384),w
  3064  108E  1283               	bcf	3,5	;RP0=0, select bank0
  3065  108F  1303               	bcf	3,6	;RP1=0, select bank0
  3066  1090  00D1               	movwf	format_xint32@x
  3067  1091  2456  160A  118A   	fcall	_format_xint32
  3068                           
  3069                           ;measure.c: 141: ser_puts("\r\nF2=");
  3070  1094  30CF               	movlw	low (STR_31| (0+32768))
  3071  1095  00A1               	movwf	ser_puts@s
  3072  1096  3098               	movlw	high (STR_31| (0+32768))
  3073  1097  00A2               	movwf	ser_puts@s+1
  3074  1098  2423  160A  118A   	fcall	_ser_puts
  3075                           
  3076                           ;measure.c: 142: format_double(F2);
  3077  109B  1683               	bsf	3,5	;RP0=1, select bank3
  3078  109C  1703               	bsf	3,6	;RP1=1, select bank3
  3079  109D  0813               	movf	(_F2+3)^(0+384),w
  3080  109E  00C3               	movwf	(format_double@num+3)^(0+384)
  3081  109F  0812               	movf	(_F2+2)^(0+384),w
  3082  10A0  00C2               	movwf	(format_double@num+2)^(0+384)
  3083  10A1  0811               	movf	(_F2+1)^(0+384),w
  3084  10A2  00C1               	movwf	(format_double@num+1)^(0+384)
  3085  10A3  0810               	movf	_F2^(0+384),w
  3086  10A4  00C0               	movwf	format_double@num^(0+384)
  3087  10A5  2474  160A  118A   	fcall	_format_double
  3088                           
  3089                           ;measure.c: 143: ser_putch(' ');
  3090  10A8  3020               	movlw	32
  3091  10A9  2440  160A  118A   	fcall	_ser_putch
  3092                           
  3093                           ;measure.c: 144: format_xint32(*(uint32_t*)&F2);
  3094  10AC  1703               	bsf	3,6	;RP1=1, select bank3
  3095  10AD  0813               	movf	(_F2+3)^(0+384),w
  3096  10AE  1283               	bcf	3,5	;RP0=0, select bank0
  3097  10AF  1303               	bcf	3,6	;RP1=0, select bank0
  3098  10B0  00D4               	movwf	format_xint32@x+3
  3099  10B1  1683               	bsf	3,5	;RP0=1, select bank3
  3100  10B2  1703               	bsf	3,6	;RP1=1, select bank3
  3101  10B3  0812               	movf	(_F2+2)^(0+384),w
  3102  10B4  1283               	bcf	3,5	;RP0=0, select bank0
  3103  10B5  1303               	bcf	3,6	;RP1=0, select bank0
  3104  10B6  00D3               	movwf	format_xint32@x+2
  3105  10B7  1683               	bsf	3,5	;RP0=1, select bank3
  3106  10B8  1703               	bsf	3,6	;RP1=1, select bank3
  3107  10B9  0811               	movf	(_F2+1)^(0+384),w
  3108  10BA  1283               	bcf	3,5	;RP0=0, select bank0
  3109  10BB  1303               	bcf	3,6	;RP1=0, select bank0
  3110  10BC  00D2               	movwf	format_xint32@x+1
  3111  10BD  1683               	bsf	3,5	;RP0=1, select bank3
  3112  10BE  1703               	bsf	3,6	;RP1=1, select bank3
  3113  10BF  0810               	movf	_F2^(0+384),w
  3114  10C0  1283               	bcf	3,5	;RP0=0, select bank0
  3115  10C1  1303               	bcf	3,6	;RP1=0, select bank0
  3116  10C2  00D1               	movwf	format_xint32@x
  3117  10C3  2456  160A  118A   	fcall	_format_xint32
  3118                           
  3119                           ;measure.c: 145: ser_puts("\r\nF3=");
  3120  10C6  30D5               	movlw	low (STR_32| (0+32768))
  3121  10C7  00A1               	movwf	ser_puts@s
  3122  10C8  3098               	movlw	high (STR_32| (0+32768))
  3123  10C9  00A2               	movwf	ser_puts@s+1
  3124  10CA  2423  160A  118A   	fcall	_ser_puts
  3125                           
  3126                           ;measure.c: 146: format_double(F3);
  3127  10CD  1683               	bsf	3,5	;RP0=1, select bank3
  3128  10CE  1703               	bsf	3,6	;RP1=1, select bank3
  3129  10CF  0817               	movf	(_F3+3)^(0+384),w
  3130  10D0  00C3               	movwf	(format_double@num+3)^(0+384)
  3131  10D1  0816               	movf	(_F3+2)^(0+384),w
  3132  10D2  00C2               	movwf	(format_double@num+2)^(0+384)
  3133  10D3  0815               	movf	(_F3+1)^(0+384),w
  3134  10D4  00C1               	movwf	(format_double@num+1)^(0+384)
  3135  10D5  0814               	movf	_F3^(0+384),w
  3136  10D6  00C0               	movwf	format_double@num^(0+384)
  3137  10D7  2474  160A  118A   	fcall	_format_double
  3138                           
  3139                           ;measure.c: 147: ser_putch(' ');
  3140  10DA  3020               	movlw	32
  3141  10DB  2440  160A  118A   	fcall	_ser_putch
  3142                           
  3143                           ;measure.c: 148: format_xint32(*(uint32_t*)&F3);
  3144  10DE  1703               	bsf	3,6	;RP1=1, select bank3
  3145  10DF  0817               	movf	(_F3+3)^(0+384),w
  3146  10E0  1283               	bcf	3,5	;RP0=0, select bank0
  3147  10E1  1303               	bcf	3,6	;RP1=0, select bank0
  3148  10E2  00D4               	movwf	format_xint32@x+3
  3149  10E3  1683               	bsf	3,5	;RP0=1, select bank3
  3150  10E4  1703               	bsf	3,6	;RP1=1, select bank3
  3151  10E5  0816               	movf	(_F3+2)^(0+384),w
  3152  10E6  1283               	bcf	3,5	;RP0=0, select bank0
  3153  10E7  1303               	bcf	3,6	;RP1=0, select bank0
  3154  10E8  00D3               	movwf	format_xint32@x+2
  3155  10E9  1683               	bsf	3,5	;RP0=1, select bank3
  3156  10EA  1703               	bsf	3,6	;RP1=1, select bank3
  3157  10EB  0815               	movf	(_F3+1)^(0+384),w
  3158  10EC  1283               	bcf	3,5	;RP0=0, select bank0
  3159  10ED  1303               	bcf	3,6	;RP1=0, select bank0
  3160  10EE  00D2               	movwf	format_xint32@x+1
  3161  10EF  1683               	bsf	3,5	;RP0=1, select bank3
  3162  10F0  1703               	bsf	3,6	;RP1=1, select bank3
  3163  10F1  0814               	movf	_F3^(0+384),w
  3164  10F2  1283               	bcf	3,5	;RP0=0, select bank0
  3165  10F3  1303               	bcf	3,6	;RP1=0, select bank0
  3166  10F4  00D1               	movwf	format_xint32@x
  3167  10F5  2456  160A  118A   	fcall	_format_xint32
  3168                           
  3169                           ;measure.c: 149: ser_puts("\r\nCCal=");
  3170  10F8  30BA               	movlw	low (STR_33| (0+32768))
  3171  10F9  00A1               	movwf	ser_puts@s
  3172  10FA  3098               	movlw	high (STR_33| (0+32768))
  3173  10FB  00A2               	movwf	ser_puts@s+1
  3174  10FC  2423  160A  118A   	fcall	_ser_puts
  3175                           
  3176                           ;measure.c: 150: format_double(CCal);
  3177  10FF  1683               	bsf	3,5	;RP0=1, select bank3
  3178  1100  1703               	bsf	3,6	;RP1=1, select bank3
  3179  1101  085A               	movf	(_CCal+3)^(0+384),w
  3180  1102  00C3               	movwf	(format_double@num+3)^(0+384)
  3181  1103  0859               	movf	(_CCal+2)^(0+384),w
  3182  1104  00C2               	movwf	(format_double@num+2)^(0+384)
  3183  1105  0858               	movf	(_CCal+1)^(0+384),w
  3184  1106  00C1               	movwf	(format_double@num+1)^(0+384)
  3185  1107  0857               	movf	_CCal^(0+384),w
  3186  1108  00C0               	movwf	format_double@num^(0+384)
  3187  1109  2474  160A  118A   	fcall	_format_double
  3188                           
  3189                           ;measure.c: 151: ser_putch(' ');
  3190  110C  3020               	movlw	32
  3191  110D  2440  160A  118A   	fcall	_ser_putch
  3192                           
  3193                           ;measure.c: 152: format_xint32(*(uint32_t*)&CCal);
  3194  1110  1703               	bsf	3,6	;RP1=1, select bank3
  3195  1111  085A               	movf	(_CCal+3)^(0+384),w
  3196  1112  1283               	bcf	3,5	;RP0=0, select bank0
  3197  1113  1303               	bcf	3,6	;RP1=0, select bank0
  3198  1114  00D4               	movwf	format_xint32@x+3
  3199  1115  1683               	bsf	3,5	;RP0=1, select bank3
  3200  1116  1703               	bsf	3,6	;RP1=1, select bank3
  3201  1117  0859               	movf	(_CCal+2)^(0+384),w
  3202  1118  1283               	bcf	3,5	;RP0=0, select bank0
  3203  1119  1303               	bcf	3,6	;RP1=0, select bank0
  3204  111A  00D3               	movwf	format_xint32@x+2
  3205  111B  1683               	bsf	3,5	;RP0=1, select bank3
  3206  111C  1703               	bsf	3,6	;RP1=1, select bank3
  3207  111D  0858               	movf	(_CCal+1)^(0+384),w
  3208  111E  1283               	bcf	3,5	;RP0=0, select bank0
  3209  111F  1303               	bcf	3,6	;RP1=0, select bank0
  3210  1120  00D2               	movwf	format_xint32@x+1
  3211  1121  1683               	bsf	3,5	;RP0=1, select bank3
  3212  1122  1703               	bsf	3,6	;RP1=1, select bank3
  3213  1123  0857               	movf	_CCal^(0+384),w
  3214  1124  1283               	bcf	3,5	;RP0=0, select bank0
  3215  1125  1303               	bcf	3,6	;RP1=0, select bank0
  3216  1126  00D1               	movwf	format_xint32@x
  3217  1127  2456  160A  118A   	fcall	_format_xint32
  3218                           
  3219                           ;measure.c: 153: ser_puts("\r\n");
  3220  112A  30F4               	movlw	low (STR_9| (0+32768))
  3221  112B  00A1               	movwf	ser_puts@s
  3222  112C  3098               	movlw	high (STR_9| (0+32768))
  3223  112D  00A2               	movwf	ser_puts@s+1
  3224  112E  2423  160A  118A   	fcall	_ser_puts
  3225                           
  3226                           ;measure.c: 157: if(F3 > F1)
  3227  1131  1683               	bsf	3,5	;RP0=1, select bank3
  3228  1132  1703               	bsf	3,6	;RP1=1, select bank3
  3229  1133  083F               	movf	(_F1+3)^(0+384),w
  3230  1134  1283               	bcf	3,5	;RP0=0, select bank0
  3231  1135  1303               	bcf	3,6	;RP1=0, select bank0
  3232  1136  00A4               	movwf	___flge@ff1+3
  3233  1137  1683               	bsf	3,5	;RP0=1, select bank3
  3234  1138  1703               	bsf	3,6	;RP1=1, select bank3
  3235  1139  083E               	movf	(_F1+2)^(0+384),w
  3236  113A  1283               	bcf	3,5	;RP0=0, select bank0
  3237  113B  1303               	bcf	3,6	;RP1=0, select bank0
  3238  113C  00A3               	movwf	___flge@ff1+2
  3239  113D  1683               	bsf	3,5	;RP0=1, select bank3
  3240  113E  1703               	bsf	3,6	;RP1=1, select bank3
  3241  113F  083D               	movf	(_F1+1)^(0+384),w
  3242  1140  1283               	bcf	3,5	;RP0=0, select bank0
  3243  1141  1303               	bcf	3,6	;RP1=0, select bank0
  3244  1142  00A2               	movwf	___flge@ff1+1
  3245  1143  1683               	bsf	3,5	;RP0=1, select bank3
  3246  1144  1703               	bsf	3,6	;RP1=1, select bank3
  3247  1145  083C               	movf	_F1^(0+384),w
  3248  1146  1283               	bcf	3,5	;RP0=0, select bank0
  3249  1147  1303               	bcf	3,6	;RP1=0, select bank0
  3250  1148  00A1               	movwf	___flge@ff1
  3251  1149  1683               	bsf	3,5	;RP0=1, select bank3
  3252  114A  1703               	bsf	3,6	;RP1=1, select bank3
  3253  114B  0817               	movf	(_F3+3)^(0+384),w
  3254  114C  1283               	bcf	3,5	;RP0=0, select bank0
  3255  114D  1303               	bcf	3,6	;RP1=0, select bank0
  3256  114E  00A8               	movwf	___flge@ff2+3
  3257  114F  1683               	bsf	3,5	;RP0=1, select bank3
  3258  1150  1703               	bsf	3,6	;RP1=1, select bank3
  3259  1151  0816               	movf	(_F3+2)^(0+384),w
  3260  1152  1283               	bcf	3,5	;RP0=0, select bank0
  3261  1153  1303               	bcf	3,6	;RP1=0, select bank0
  3262  1154  00A7               	movwf	___flge@ff2+2
  3263  1155  1683               	bsf	3,5	;RP0=1, select bank3
  3264  1156  1703               	bsf	3,6	;RP1=1, select bank3
  3265  1157  0815               	movf	(_F3+1)^(0+384),w
  3266  1158  1283               	bcf	3,5	;RP0=0, select bank0
  3267  1159  1303               	bcf	3,6	;RP1=0, select bank0
  3268  115A  00A6               	movwf	___flge@ff2+1
  3269  115B  1683               	bsf	3,5	;RP0=1, select bank3
  3270  115C  1703               	bsf	3,6	;RP1=1, select bank3
  3271  115D  0814               	movf	_F3^(0+384),w
  3272  115E  1283               	bcf	3,5	;RP0=0, select bank0
  3273  115F  1303               	bcf	3,6	;RP1=0, select bank0
  3274  1160  00A5               	movwf	___flge@ff2
  3275  1161  120A  158A  2730  160A  118A  	fcall	___flge
  3276  1166  1803               	btfsc	3,0
  3277  1167  2972               	goto	l4740
  3278                           
  3279                           ;measure.c: 158: F3 = F1;
  3280  1168  1683               	bsf	3,5	;RP0=1, select bank3
  3281  1169  1703               	bsf	3,6	;RP1=1, select bank3
  3282  116A  083F               	movf	(_F1+3)^(0+384),w
  3283  116B  0097               	movwf	(_F3+3)^(0+384)
  3284  116C  083E               	movf	(_F1+2)^(0+384),w
  3285  116D  0096               	movwf	(_F3+2)^(0+384)
  3286  116E  083D               	movf	(_F1+1)^(0+384),w
  3287  116F  0095               	movwf	(_F3+1)^(0+384)
  3288  1170  083C               	movf	_F1^(0+384),w
  3289  1171  0094               	movwf	_F3^(0+384)
  3290  1172                     l4740:	
  3291                           
  3292                           ;measure.c: 160: Cin = F2 * F2 * (F1 * F1 - F3 * F3) * CCal;
  3293  1172  1683               	bsf	3,5	;RP0=1, select bank3
  3294  1173  1703               	bsf	3,6	;RP1=1, select bank3
  3295  1174  0817               	movf	(_F3+3)^(0+384),w
  3296  1175  1283               	bcf	3,5	;RP0=0, select bank0
  3297  1176  1303               	bcf	3,6	;RP1=0, select bank0
  3298  1177  00C1               	movwf	___flmul@f1+3
  3299  1178  1683               	bsf	3,5	;RP0=1, select bank3
  3300  1179  1703               	bsf	3,6	;RP1=1, select bank3
  3301  117A  0816               	movf	(_F3+2)^(0+384),w
  3302  117B  1283               	bcf	3,5	;RP0=0, select bank0
  3303  117C  1303               	bcf	3,6	;RP1=0, select bank0
  3304  117D  00C0               	movwf	___flmul@f1+2
  3305  117E  1683               	bsf	3,5	;RP0=1, select bank3
  3306  117F  1703               	bsf	3,6	;RP1=1, select bank3
  3307  1180  0815               	movf	(_F3+1)^(0+384),w
  3308  1181  1283               	bcf	3,5	;RP0=0, select bank0
  3309  1182  1303               	bcf	3,6	;RP1=0, select bank0
  3310  1183  00BF               	movwf	___flmul@f1+1
  3311  1184  1683               	bsf	3,5	;RP0=1, select bank3
  3312  1185  1703               	bsf	3,6	;RP1=1, select bank3
  3313  1186  0814               	movf	_F3^(0+384),w
  3314  1187  1283               	bcf	3,5	;RP0=0, select bank0
  3315  1188  1303               	bcf	3,6	;RP1=0, select bank0
  3316  1189  00BE               	movwf	___flmul@f1
  3317  118A  1683               	bsf	3,5	;RP0=1, select bank3
  3318  118B  1703               	bsf	3,6	;RP1=1, select bank3
  3319  118C  0817               	movf	(_F3+3)^(0+384),w
  3320  118D  1283               	bcf	3,5	;RP0=0, select bank0
  3321  118E  1303               	bcf	3,6	;RP1=0, select bank0
  3322  118F  00C5               	movwf	___flmul@f2+3
  3323  1190  1683               	bsf	3,5	;RP0=1, select bank3
  3324  1191  1703               	bsf	3,6	;RP1=1, select bank3
  3325  1192  0816               	movf	(_F3+2)^(0+384),w
  3326  1193  1283               	bcf	3,5	;RP0=0, select bank0
  3327  1194  1303               	bcf	3,6	;RP1=0, select bank0
  3328  1195  00C4               	movwf	___flmul@f2+2
  3329  1196  1683               	bsf	3,5	;RP0=1, select bank3
  3330  1197  1703               	bsf	3,6	;RP1=1, select bank3
  3331  1198  0815               	movf	(_F3+1)^(0+384),w
  3332  1199  1283               	bcf	3,5	;RP0=0, select bank0
  3333  119A  1303               	bcf	3,6	;RP1=0, select bank0
  3334  119B  00C3               	movwf	___flmul@f2+1
  3335  119C  1683               	bsf	3,5	;RP0=1, select bank3
  3336  119D  1703               	bsf	3,6	;RP1=1, select bank3
  3337  119E  0814               	movf	_F3^(0+384),w
  3338  119F  1283               	bcf	3,5	;RP0=0, select bank0
  3339  11A0  1303               	bcf	3,6	;RP1=0, select bank0
  3340  11A1  00C2               	movwf	___flmul@f2
  3341  11A2  120A  158A  2698  160A  118A  	fcall	___flmul
  3342  11A7  0841               	movf	?___flmul+3,w
  3343  11A8  00E3               	movwf	___flsub@f2+3
  3344  11A9  0840               	movf	?___flmul+2,w
  3345  11AA  00E2               	movwf	___flsub@f2+2
  3346  11AB  083F               	movf	?___flmul+1,w
  3347  11AC  00E1               	movwf	___flsub@f2+1
  3348  11AD  083E               	movf	?___flmul,w
  3349  11AE  00E0               	movwf	___flsub@f2
  3350  11AF  1683               	bsf	3,5	;RP0=1, select bank3
  3351  11B0  1703               	bsf	3,6	;RP1=1, select bank3
  3352  11B1  083F               	movf	(_F1+3)^(0+384),w
  3353  11B2  1283               	bcf	3,5	;RP0=0, select bank0
  3354  11B3  1303               	bcf	3,6	;RP1=0, select bank0
  3355  11B4  00C1               	movwf	___flmul@f1+3
  3356  11B5  1683               	bsf	3,5	;RP0=1, select bank3
  3357  11B6  1703               	bsf	3,6	;RP1=1, select bank3
  3358  11B7  083E               	movf	(_F1+2)^(0+384),w
  3359  11B8  1283               	bcf	3,5	;RP0=0, select bank0
  3360  11B9  1303               	bcf	3,6	;RP1=0, select bank0
  3361  11BA  00C0               	movwf	___flmul@f1+2
  3362  11BB  1683               	bsf	3,5	;RP0=1, select bank3
  3363  11BC  1703               	bsf	3,6	;RP1=1, select bank3
  3364  11BD  083D               	movf	(_F1+1)^(0+384),w
  3365  11BE  1283               	bcf	3,5	;RP0=0, select bank0
  3366  11BF  1303               	bcf	3,6	;RP1=0, select bank0
  3367  11C0  00BF               	movwf	___flmul@f1+1
  3368  11C1  1683               	bsf	3,5	;RP0=1, select bank3
  3369  11C2  1703               	bsf	3,6	;RP1=1, select bank3
  3370  11C3  083C               	movf	_F1^(0+384),w
  3371  11C4  1283               	bcf	3,5	;RP0=0, select bank0
  3372  11C5  1303               	bcf	3,6	;RP1=0, select bank0
  3373  11C6  00BE               	movwf	___flmul@f1
  3374  11C7  1683               	bsf	3,5	;RP0=1, select bank3
  3375  11C8  1703               	bsf	3,6	;RP1=1, select bank3
  3376  11C9  083F               	movf	(_F1+3)^(0+384),w
  3377  11CA  1283               	bcf	3,5	;RP0=0, select bank0
  3378  11CB  1303               	bcf	3,6	;RP1=0, select bank0
  3379  11CC  00C5               	movwf	___flmul@f2+3
  3380  11CD  1683               	bsf	3,5	;RP0=1, select bank3
  3381  11CE  1703               	bsf	3,6	;RP1=1, select bank3
  3382  11CF  083E               	movf	(_F1+2)^(0+384),w
  3383  11D0  1283               	bcf	3,5	;RP0=0, select bank0
  3384  11D1  1303               	bcf	3,6	;RP1=0, select bank0
  3385  11D2  00C4               	movwf	___flmul@f2+2
  3386  11D3  1683               	bsf	3,5	;RP0=1, select bank3
  3387  11D4  1703               	bsf	3,6	;RP1=1, select bank3
  3388  11D5  083D               	movf	(_F1+1)^(0+384),w
  3389  11D6  1283               	bcf	3,5	;RP0=0, select bank0
  3390  11D7  1303               	bcf	3,6	;RP1=0, select bank0
  3391  11D8  00C3               	movwf	___flmul@f2+1
  3392  11D9  1683               	bsf	3,5	;RP0=1, select bank3
  3393  11DA  1703               	bsf	3,6	;RP1=1, select bank3
  3394  11DB  083C               	movf	_F1^(0+384),w
  3395  11DC  1283               	bcf	3,5	;RP0=0, select bank0
  3396  11DD  1303               	bcf	3,6	;RP1=0, select bank0
  3397  11DE  00C2               	movwf	___flmul@f2
  3398  11DF  120A  158A  2698  160A  118A  	fcall	___flmul
  3399  11E4  0841               	movf	?___flmul+3,w
  3400  11E5  00E7               	movwf	___flsub@f1+3
  3401  11E6  0840               	movf	?___flmul+2,w
  3402  11E7  00E6               	movwf	___flsub@f1+2
  3403  11E8  083F               	movf	?___flmul+1,w
  3404  11E9  00E5               	movwf	___flsub@f1+1
  3405  11EA  083E               	movf	?___flmul,w
  3406  11EB  00E4               	movwf	___flsub@f1
  3407  11EC  271A  160A  118A   	fcall	___flsub
  3408  11EF  0863               	movf	?___flsub+3,w
  3409  11F0  1703               	bsf	3,6	;RP1=1, select bank2
  3410  11F1  00B3               	movwf	(_measure_capacitance$1010+3)^(0+256)
  3411  11F2  1303               	bcf	3,6	;RP1=0, select bank0
  3412  11F3  0862               	movf	?___flsub+2,w
  3413  11F4  1703               	bsf	3,6	;RP1=1, select bank2
  3414  11F5  00B2               	movwf	(_measure_capacitance$1010+2)^(0+256)
  3415  11F6  1303               	bcf	3,6	;RP1=0, select bank0
  3416  11F7  0861               	movf	?___flsub+1,w
  3417  11F8  1703               	bsf	3,6	;RP1=1, select bank2
  3418  11F9  00B1               	movwf	(_measure_capacitance$1010+1)^(0+256)
  3419  11FA  1303               	bcf	3,6	;RP1=0, select bank0
  3420  11FB  0860               	movf	?___flsub,w
  3421  11FC  1703               	bsf	3,6	;RP1=1, select bank2
  3422  11FD  00B0               	movwf	_measure_capacitance$1010^(0+256)
  3423                           
  3424                           ;measure.c: 160: Cin = F2 * F2 * (F1 * F1 - F3 * F3) * CCal;
  3425  11FE  1683               	bsf	3,5	;RP0=1, select bank3
  3426  11FF  0813               	movf	(_F2+3)^(0+384),w
  3427  1200  1283               	bcf	3,5	;RP0=0, select bank0
  3428  1201  1303               	bcf	3,6	;RP1=0, select bank0
  3429  1202  00C1               	movwf	___flmul@f1+3
  3430  1203  1683               	bsf	3,5	;RP0=1, select bank3
  3431  1204  1703               	bsf	3,6	;RP1=1, select bank3
  3432  1205  0812               	movf	(_F2+2)^(0+384),w
  3433  1206  1283               	bcf	3,5	;RP0=0, select bank0
  3434  1207  1303               	bcf	3,6	;RP1=0, select bank0
  3435  1208  00C0               	movwf	___flmul@f1+2
  3436  1209  1683               	bsf	3,5	;RP0=1, select bank3
  3437  120A  1703               	bsf	3,6	;RP1=1, select bank3
  3438  120B  0811               	movf	(_F2+1)^(0+384),w
  3439  120C  1283               	bcf	3,5	;RP0=0, select bank0
  3440  120D  1303               	bcf	3,6	;RP1=0, select bank0
  3441  120E  00BF               	movwf	___flmul@f1+1
  3442  120F  1683               	bsf	3,5	;RP0=1, select bank3
  3443  1210  1703               	bsf	3,6	;RP1=1, select bank3
  3444  1211  0810               	movf	_F2^(0+384),w
  3445  1212  1283               	bcf	3,5	;RP0=0, select bank0
  3446  1213  1303               	bcf	3,6	;RP1=0, select bank0
  3447  1214  00BE               	movwf	___flmul@f1
  3448  1215  1703               	bsf	3,6	;RP1=1, select bank2
  3449  1216  0833               	movf	(_measure_capacitance$1010+3)^(0+256),w
  3450  1217  1303               	bcf	3,6	;RP1=0, select bank0
  3451  1218  00C5               	movwf	___flmul@f2+3
  3452  1219  1703               	bsf	3,6	;RP1=1, select bank2
  3453  121A  0832               	movf	(_measure_capacitance$1010+2)^(0+256),w
  3454  121B  1303               	bcf	3,6	;RP1=0, select bank0
  3455  121C  00C4               	movwf	___flmul@f2+2
  3456  121D  1703               	bsf	3,6	;RP1=1, select bank2
  3457  121E  0831               	movf	(_measure_capacitance$1010+1)^(0+256),w
  3458  121F  1303               	bcf	3,6	;RP1=0, select bank0
  3459  1220  00C3               	movwf	___flmul@f2+1
  3460  1221  1703               	bsf	3,6	;RP1=1, select bank2
  3461  1222  0830               	movf	_measure_capacitance$1010^(0+256),w
  3462  1223  1303               	bcf	3,6	;RP1=0, select bank0
  3463  1224  00C2               	movwf	___flmul@f2
  3464  1225  120A  158A  2698  160A  118A  	fcall	___flmul
  3465  122A  0841               	movf	?___flmul+3,w
  3466  122B  1703               	bsf	3,6	;RP1=1, select bank2
  3467  122C  00B7               	movwf	(_measure_capacitance$1011+3)^(0+256)
  3468  122D  1303               	bcf	3,6	;RP1=0, select bank0
  3469  122E  0840               	movf	?___flmul+2,w
  3470  122F  1703               	bsf	3,6	;RP1=1, select bank2
  3471  1230  00B6               	movwf	(_measure_capacitance$1011+2)^(0+256)
  3472  1231  1303               	bcf	3,6	;RP1=0, select bank0
  3473  1232  083F               	movf	?___flmul+1,w
  3474  1233  1703               	bsf	3,6	;RP1=1, select bank2
  3475  1234  00B5               	movwf	(_measure_capacitance$1011+1)^(0+256)
  3476  1235  1303               	bcf	3,6	;RP1=0, select bank0
  3477  1236  083E               	movf	?___flmul,w
  3478  1237  1703               	bsf	3,6	;RP1=1, select bank2
  3479  1238  00B4               	movwf	_measure_capacitance$1011^(0+256)
  3480                           
  3481                           ;measure.c: 160: Cin = F2 * F2 * (F1 * F1 - F3 * F3) * CCal;
  3482  1239  1683               	bsf	3,5	;RP0=1, select bank3
  3483  123A  0813               	movf	(_F2+3)^(0+384),w
  3484  123B  1283               	bcf	3,5	;RP0=0, select bank0
  3485  123C  1303               	bcf	3,6	;RP1=0, select bank0
  3486  123D  00C1               	movwf	___flmul@f1+3
  3487  123E  1683               	bsf	3,5	;RP0=1, select bank3
  3488  123F  1703               	bsf	3,6	;RP1=1, select bank3
  3489  1240  0812               	movf	(_F2+2)^(0+384),w
  3490  1241  1283               	bcf	3,5	;RP0=0, select bank0
  3491  1242  1303               	bcf	3,6	;RP1=0, select bank0
  3492  1243  00C0               	movwf	___flmul@f1+2
  3493  1244  1683               	bsf	3,5	;RP0=1, select bank3
  3494  1245  1703               	bsf	3,6	;RP1=1, select bank3
  3495  1246  0811               	movf	(_F2+1)^(0+384),w
  3496  1247  1283               	bcf	3,5	;RP0=0, select bank0
  3497  1248  1303               	bcf	3,6	;RP1=0, select bank0
  3498  1249  00BF               	movwf	___flmul@f1+1
  3499  124A  1683               	bsf	3,5	;RP0=1, select bank3
  3500  124B  1703               	bsf	3,6	;RP1=1, select bank3
  3501  124C  0810               	movf	_F2^(0+384),w
  3502  124D  1283               	bcf	3,5	;RP0=0, select bank0
  3503  124E  1303               	bcf	3,6	;RP1=0, select bank0
  3504  124F  00BE               	movwf	___flmul@f1
  3505  1250  1703               	bsf	3,6	;RP1=1, select bank2
  3506  1251  0837               	movf	(_measure_capacitance$1011+3)^(0+256),w
  3507  1252  1303               	bcf	3,6	;RP1=0, select bank0
  3508  1253  00C5               	movwf	___flmul@f2+3
  3509  1254  1703               	bsf	3,6	;RP1=1, select bank2
  3510  1255  0836               	movf	(_measure_capacitance$1011+2)^(0+256),w
  3511  1256  1303               	bcf	3,6	;RP1=0, select bank0
  3512  1257  00C4               	movwf	___flmul@f2+2
  3513  1258  1703               	bsf	3,6	;RP1=1, select bank2
  3514  1259  0835               	movf	(_measure_capacitance$1011+1)^(0+256),w
  3515  125A  1303               	bcf	3,6	;RP1=0, select bank0
  3516  125B  00C3               	movwf	___flmul@f2+1
  3517  125C  1703               	bsf	3,6	;RP1=1, select bank2
  3518  125D  0834               	movf	_measure_capacitance$1011^(0+256),w
  3519  125E  1303               	bcf	3,6	;RP1=0, select bank0
  3520  125F  00C2               	movwf	___flmul@f2
  3521  1260  120A  158A  2698  160A  118A  	fcall	___flmul
  3522  1265  0841               	movf	?___flmul+3,w
  3523  1266  1703               	bsf	3,6	;RP1=1, select bank2
  3524  1267  00BB               	movwf	(_measure_capacitance$1012+3)^(0+256)
  3525  1268  1303               	bcf	3,6	;RP1=0, select bank0
  3526  1269  0840               	movf	?___flmul+2,w
  3527  126A  1703               	bsf	3,6	;RP1=1, select bank2
  3528  126B  00BA               	movwf	(_measure_capacitance$1012+2)^(0+256)
  3529  126C  1303               	bcf	3,6	;RP1=0, select bank0
  3530  126D  083F               	movf	?___flmul+1,w
  3531  126E  1703               	bsf	3,6	;RP1=1, select bank2
  3532  126F  00B9               	movwf	(_measure_capacitance$1012+1)^(0+256)
  3533  1270  1303               	bcf	3,6	;RP1=0, select bank0
  3534  1271  083E               	movf	?___flmul,w
  3535  1272  1703               	bsf	3,6	;RP1=1, select bank2
  3536  1273  00B8               	movwf	_measure_capacitance$1012^(0+256)
  3537                           
  3538                           ;measure.c: 160: Cin = F2 * F2 * (F1 * F1 - F3 * F3) * CCal;
  3539  1274  1683               	bsf	3,5	;RP0=1, select bank3
  3540  1275  085A               	movf	(_CCal+3)^(0+384),w
  3541  1276  1283               	bcf	3,5	;RP0=0, select bank0
  3542  1277  1303               	bcf	3,6	;RP1=0, select bank0
  3543  1278  00C1               	movwf	___flmul@f1+3
  3544  1279  1683               	bsf	3,5	;RP0=1, select bank3
  3545  127A  1703               	bsf	3,6	;RP1=1, select bank3
  3546  127B  0859               	movf	(_CCal+2)^(0+384),w
  3547  127C  1283               	bcf	3,5	;RP0=0, select bank0
  3548  127D  1303               	bcf	3,6	;RP1=0, select bank0
  3549  127E  00C0               	movwf	___flmul@f1+2
  3550  127F  1683               	bsf	3,5	;RP0=1, select bank3
  3551  1280  1703               	bsf	3,6	;RP1=1, select bank3
  3552  1281  0858               	movf	(_CCal+1)^(0+384),w
  3553  1282  1283               	bcf	3,5	;RP0=0, select bank0
  3554  1283  1303               	bcf	3,6	;RP1=0, select bank0
  3555  1284  00BF               	movwf	___flmul@f1+1
  3556  1285  1683               	bsf	3,5	;RP0=1, select bank3
  3557  1286  1703               	bsf	3,6	;RP1=1, select bank3
  3558  1287  0857               	movf	_CCal^(0+384),w
  3559  1288  1283               	bcf	3,5	;RP0=0, select bank0
  3560  1289  1303               	bcf	3,6	;RP1=0, select bank0
  3561  128A  00BE               	movwf	___flmul@f1
  3562  128B  1703               	bsf	3,6	;RP1=1, select bank2
  3563  128C  083B               	movf	(_measure_capacitance$1012+3)^(0+256),w
  3564  128D  1303               	bcf	3,6	;RP1=0, select bank0
  3565  128E  00C5               	movwf	___flmul@f2+3
  3566  128F  1703               	bsf	3,6	;RP1=1, select bank2
  3567  1290  083A               	movf	(_measure_capacitance$1012+2)^(0+256),w
  3568  1291  1303               	bcf	3,6	;RP1=0, select bank0
  3569  1292  00C4               	movwf	___flmul@f2+2
  3570  1293  1703               	bsf	3,6	;RP1=1, select bank2
  3571  1294  0839               	movf	(_measure_capacitance$1012+1)^(0+256),w
  3572  1295  1303               	bcf	3,6	;RP1=0, select bank0
  3573  1296  00C3               	movwf	___flmul@f2+1
  3574  1297  1703               	bsf	3,6	;RP1=1, select bank2
  3575  1298  0838               	movf	_measure_capacitance$1012^(0+256),w
  3576  1299  1303               	bcf	3,6	;RP1=0, select bank0
  3577  129A  00C2               	movwf	___flmul@f2
  3578  129B  120A  158A  2698  160A  118A  	fcall	___flmul
  3579  12A0  0841               	movf	?___flmul+3,w
  3580  12A1  1703               	bsf	3,6	;RP1=1, select bank2
  3581  12A2  00C2               	movwf	(measure_capacitance@Cin+3)^(0+256)
  3582  12A3  1303               	bcf	3,6	;RP1=0, select bank0
  3583  12A4  0840               	movf	?___flmul+2,w
  3584  12A5  1703               	bsf	3,6	;RP1=1, select bank2
  3585  12A6  00C1               	movwf	(measure_capacitance@Cin+2)^(0+256)
  3586  12A7  1303               	bcf	3,6	;RP1=0, select bank0
  3587  12A8  083F               	movf	?___flmul+1,w
  3588  12A9  1703               	bsf	3,6	;RP1=1, select bank2
  3589  12AA  00C0               	movwf	(measure_capacitance@Cin+1)^(0+256)
  3590  12AB  1303               	bcf	3,6	;RP1=0, select bank0
  3591  12AC  083E               	movf	?___flmul,w
  3592  12AD  1703               	bsf	3,6	;RP1=1, select bank2
  3593  12AE  00BF               	movwf	measure_capacitance@Cin^(0+256)
  3594                           
  3595                           ;measure.c: 164: ser_puts("Cin=");
  3596  12AF  30E1               	movlw	low (STR_35| (0+32768))
  3597  12B0  1303               	bcf	3,6	;RP1=0, select bank0
  3598  12B1  00A1               	movwf	ser_puts@s
  3599  12B2  3098               	movlw	high (STR_35| (0+32768))
  3600  12B3  00A2               	movwf	ser_puts@s+1
  3601  12B4  2423  160A  118A   	fcall	_ser_puts
  3602                           
  3603                           ;measure.c: 165: format_double(Cin);
  3604  12B7  1703               	bsf	3,6	;RP1=1, select bank2
  3605  12B8  0842               	movf	(measure_capacitance@Cin+3)^(0+256),w
  3606  12B9  1683               	bsf	3,5	;RP0=1, select bank3
  3607  12BA  00C3               	movwf	(format_double@num+3)^(0+384)
  3608  12BB  1283               	bcf	3,5	;RP0=0, select bank2
  3609  12BC  0841               	movf	(measure_capacitance@Cin+2)^(0+256),w
  3610  12BD  1683               	bsf	3,5	;RP0=1, select bank3
  3611  12BE  00C2               	movwf	(format_double@num+2)^(0+384)
  3612  12BF  1283               	bcf	3,5	;RP0=0, select bank2
  3613  12C0  0840               	movf	(measure_capacitance@Cin+1)^(0+256),w
  3614  12C1  1683               	bsf	3,5	;RP0=1, select bank3
  3615  12C2  00C1               	movwf	(format_double@num+1)^(0+384)
  3616  12C3  1283               	bcf	3,5	;RP0=0, select bank2
  3617  12C4  083F               	movf	measure_capacitance@Cin^(0+256),w
  3618  12C5  1683               	bsf	3,5	;RP0=1, select bank3
  3619  12C6  00C0               	movwf	format_double@num^(0+384)
  3620  12C7  2474  160A  118A   	fcall	_format_double
  3621                           
  3622                           ;measure.c: 166: ser_putch(' ');
  3623  12CA  3020               	movlw	32
  3624  12CB  2440  160A  118A   	fcall	_ser_putch
  3625                           
  3626                           ;measure.c: 167: format_xint32(*(uint32_t*)&Cin);
  3627  12CE  1283               	bcf	3,5	;RP0=0, select bank2
  3628  12CF  1703               	bsf	3,6	;RP1=1, select bank2
  3629  12D0  0842               	movf	(measure_capacitance@Cin+3)^(0+256),w
  3630  12D1  1303               	bcf	3,6	;RP1=0, select bank0
  3631  12D2  00D4               	movwf	format_xint32@x+3
  3632  12D3  1703               	bsf	3,6	;RP1=1, select bank2
  3633  12D4  0841               	movf	(measure_capacitance@Cin+2)^(0+256),w
  3634  12D5  1303               	bcf	3,6	;RP1=0, select bank0
  3635  12D6  00D3               	movwf	format_xint32@x+2
  3636  12D7  1703               	bsf	3,6	;RP1=1, select bank2
  3637  12D8  0840               	movf	(measure_capacitance@Cin+1)^(0+256),w
  3638  12D9  1303               	bcf	3,6	;RP1=0, select bank0
  3639  12DA  00D2               	movwf	format_xint32@x+1
  3640  12DB  1703               	bsf	3,6	;RP1=1, select bank2
  3641  12DC  083F               	movf	measure_capacitance@Cin^(0+256),w
  3642  12DD  1303               	bcf	3,6	;RP1=0, select bank0
  3643  12DE  00D1               	movwf	format_xint32@x
  3644  12DF  2456  160A  118A   	fcall	_format_xint32
  3645                           
  3646                           ;measure.c: 168: ser_puts("\r\n");
  3647  12E2  30F4               	movlw	low (STR_9| (0+32768))
  3648  12E3  00A1               	movwf	ser_puts@s
  3649  12E4  3098               	movlw	high (STR_9| (0+32768))
  3650  12E5  00A2               	movwf	ser_puts@s+1
  3651  12E6  2423               	fcall	_ser_puts
  3652                           
  3653                           ;measure.c: 170: if(Cin > 999) {
  3654  12E7  3044               	movlw	68
  3655  12E8  00A4               	movwf	___flge@ff1+3
  3656  12E9  3079               	movlw	121
  3657  12EA  00A3               	movwf	___flge@ff1+2
  3658  12EB  30C0               	movlw	192
  3659  12EC  00A2               	movwf	___flge@ff1+1
  3660  12ED  01A1               	clrf	___flge@ff1
  3661  12EE  1703               	bsf	3,6	;RP1=1, select bank2
  3662  12EF  0842               	movf	(measure_capacitance@Cin+3)^(0+256),w
  3663  12F0  1303               	bcf	3,6	;RP1=0, select bank0
  3664  12F1  00A8               	movwf	___flge@ff2+3
  3665  12F2  1703               	bsf	3,6	;RP1=1, select bank2
  3666  12F3  0841               	movf	(measure_capacitance@Cin+2)^(0+256),w
  3667  12F4  1303               	bcf	3,6	;RP1=0, select bank0
  3668  12F5  00A7               	movwf	___flge@ff2+2
  3669  12F6  1703               	bsf	3,6	;RP1=1, select bank2
  3670  12F7  0840               	movf	(measure_capacitance@Cin+1)^(0+256),w
  3671  12F8  1303               	bcf	3,6	;RP1=0, select bank0
  3672  12F9  00A6               	movwf	___flge@ff2+1
  3673  12FA  1703               	bsf	3,6	;RP1=1, select bank2
  3674  12FB  083F               	movf	measure_capacitance@Cin^(0+256),w
  3675  12FC  1303               	bcf	3,6	;RP1=0, select bank0
  3676  12FD  00A5               	movwf	___flge@ff2
  3677  12FE  120A  158A  2730  160A  118A  	fcall	___flge
  3678  1303  1803               	btfsc	3,0
  3679  1304  2BC4               	goto	l4776
  3680                           
  3681                           ;measure.c: 171: if(Cin > (999e+03l)) {
  3682  1305  3049               	movlw	73
  3683  1306  00A4               	movwf	___flge@ff1+3
  3684  1307  3073               	movlw	115
  3685  1308  00A3               	movwf	___flge@ff1+2
  3686  1309  30E5               	movlw	229
  3687  130A  00A2               	movwf	___flge@ff1+1
  3688  130B  3080               	movlw	128
  3689  130C  00A1               	movwf	___flge@ff1
  3690  130D  1703               	bsf	3,6	;RP1=1, select bank2
  3691  130E  0842               	movf	(measure_capacitance@Cin+3)^(0+256),w
  3692  130F  1303               	bcf	3,6	;RP1=0, select bank0
  3693  1310  00A8               	movwf	___flge@ff2+3
  3694  1311  1703               	bsf	3,6	;RP1=1, select bank2
  3695  1312  0841               	movf	(measure_capacitance@Cin+2)^(0+256),w
  3696  1313  1303               	bcf	3,6	;RP1=0, select bank0
  3697  1314  00A7               	movwf	___flge@ff2+2
  3698  1315  1703               	bsf	3,6	;RP1=1, select bank2
  3699  1316  0840               	movf	(measure_capacitance@Cin+1)^(0+256),w
  3700  1317  1303               	bcf	3,6	;RP1=0, select bank0
  3701  1318  00A6               	movwf	___flge@ff2+1
  3702  1319  1703               	bsf	3,6	;RP1=1, select bank2
  3703  131A  083F               	movf	measure_capacitance@Cin^(0+256),w
  3704  131B  1303               	bcf	3,6	;RP1=0, select bank0
  3705  131C  00A5               	movwf	___flge@ff2
  3706  131D  120A  158A  2730  160A  118A  	fcall	___flge
  3707  1322  1803               	btfsc	3,0
  3708  1323  2B9A               	goto	l4772
  3709                           
  3710                           ;measure.c: 172: if(Cin > (999e+06l)) {
  3711  1324  304E               	movlw	78
  3712  1325  00A4               	movwf	___flge@ff1+3
  3713  1326  306E               	movlw	110
  3714  1327  00A3               	movwf	___flge@ff1+2
  3715  1328  302E               	movlw	46
  3716  1329  00A2               	movwf	___flge@ff1+1
  3717  132A  301F               	movlw	31
  3718  132B  00A1               	movwf	___flge@ff1
  3719  132C  1703               	bsf	3,6	;RP1=1, select bank2
  3720  132D  0842               	movf	(measure_capacitance@Cin+3)^(0+256),w
  3721  132E  1303               	bcf	3,6	;RP1=0, select bank0
  3722  132F  00A8               	movwf	___flge@ff2+3
  3723  1330  1703               	bsf	3,6	;RP1=1, select bank2
  3724  1331  0841               	movf	(measure_capacitance@Cin+2)^(0+256),w
  3725  1332  1303               	bcf	3,6	;RP1=0, select bank0
  3726  1333  00A7               	movwf	___flge@ff2+2
  3727  1334  1703               	bsf	3,6	;RP1=1, select bank2
  3728  1335  0840               	movf	(measure_capacitance@Cin+1)^(0+256),w
  3729  1336  1303               	bcf	3,6	;RP1=0, select bank0
  3730  1337  00A6               	movwf	___flge@ff2+1
  3731  1338  1703               	bsf	3,6	;RP1=1, select bank2
  3732  1339  083F               	movf	measure_capacitance@Cin^(0+256),w
  3733  133A  1303               	bcf	3,6	;RP1=0, select bank0
  3734  133B  00A5               	movwf	___flge@ff2
  3735  133C  120A  158A  2730  160A  118A  	fcall	___flge
  3736  1341  1803               	btfsc	3,0
  3737  1342  2B6F               	goto	l4768
  3738                           
  3739                           ;measure.c: 173: Cin = Cin / (1e+09);
  3740  1343  304E               	movlw	78
  3741  1344  00AE               	movwf	___fldiv@f2+3
  3742  1345  306E               	movlw	110
  3743  1346  00AD               	movwf	___fldiv@f2+2
  3744  1347  306B               	movlw	107
  3745  1348  00AC               	movwf	___fldiv@f2+1
  3746  1349  3028               	movlw	40
  3747  134A  00AB               	movwf	___fldiv@f2
  3748  134B  1703               	bsf	3,6	;RP1=1, select bank2
  3749  134C  0842               	movf	(measure_capacitance@Cin+3)^(0+256),w
  3750  134D  1303               	bcf	3,6	;RP1=0, select bank0
  3751  134E  00B2               	movwf	___fldiv@f1+3
  3752  134F  1703               	bsf	3,6	;RP1=1, select bank2
  3753  1350  0841               	movf	(measure_capacitance@Cin+2)^(0+256),w
  3754  1351  1303               	bcf	3,6	;RP1=0, select bank0
  3755  1352  00B1               	movwf	___fldiv@f1+2
  3756  1353  1703               	bsf	3,6	;RP1=1, select bank2
  3757  1354  0840               	movf	(measure_capacitance@Cin+1)^(0+256),w
  3758  1355  1303               	bcf	3,6	;RP1=0, select bank0
  3759  1356  00B0               	movwf	___fldiv@f1+1
  3760  1357  1703               	bsf	3,6	;RP1=1, select bank2
  3761  1358  083F               	movf	measure_capacitance@Cin^(0+256),w
  3762  1359  1303               	bcf	3,6	;RP1=0, select bank0
  3763  135A  00AF               	movwf	___fldiv@f1
  3764  135B  262D  160A  118A   	fcall	___fldiv
  3765  135E  082E               	movf	?___fldiv+3,w
  3766  135F  1703               	bsf	3,6	;RP1=1, select bank2
  3767  1360  00C2               	movwf	(measure_capacitance@Cin+3)^(0+256)
  3768  1361  1303               	bcf	3,6	;RP1=0, select bank0
  3769  1362  082D               	movf	?___fldiv+2,w
  3770  1363  1703               	bsf	3,6	;RP1=1, select bank2
  3771  1364  00C1               	movwf	(measure_capacitance@Cin+2)^(0+256)
  3772  1365  1303               	bcf	3,6	;RP1=0, select bank0
  3773  1366  082C               	movf	?___fldiv+1,w
  3774  1367  1703               	bsf	3,6	;RP1=1, select bank2
  3775  1368  00C0               	movwf	(measure_capacitance@Cin+1)^(0+256)
  3776  1369  1303               	bcf	3,6	;RP1=0, select bank0
  3777  136A  082B               	movf	?___fldiv,w
  3778  136B  1703               	bsf	3,6	;RP1=1, select bank2
  3779  136C  00BF               	movwf	measure_capacitance@Cin^(0+256)
  3780                           
  3781                           ;measure.c: 174: unit = 4;
  3782  136D  3004               	movlw	4
  3783  136E  2BC6               	goto	L7
  3784  136F                     l4768:	
  3785                           ;measure.c: 175: } else {
  3786                           
  3787                           
  3788                           ;measure.c: 176: Cin = Cin / (1e+06);
  3789  136F  3049               	movlw	73
  3790  1370  00AE               	movwf	___fldiv@f2+3
  3791  1371  3074               	movlw	116
  3792  1372  00AD               	movwf	___fldiv@f2+2
  3793  1373  3024               	movlw	36
  3794  1374  00AC               	movwf	___fldiv@f2+1
  3795  1375  01AB               	clrf	___fldiv@f2
  3796  1376  1703               	bsf	3,6	;RP1=1, select bank2
  3797  1377  0842               	movf	(measure_capacitance@Cin+3)^(0+256),w
  3798  1378  1303               	bcf	3,6	;RP1=0, select bank0
  3799  1379  00B2               	movwf	___fldiv@f1+3
  3800  137A  1703               	bsf	3,6	;RP1=1, select bank2
  3801  137B  0841               	movf	(measure_capacitance@Cin+2)^(0+256),w
  3802  137C  1303               	bcf	3,6	;RP1=0, select bank0
  3803  137D  00B1               	movwf	___fldiv@f1+2
  3804  137E  1703               	bsf	3,6	;RP1=1, select bank2
  3805  137F  0840               	movf	(measure_capacitance@Cin+1)^(0+256),w
  3806  1380  1303               	bcf	3,6	;RP1=0, select bank0
  3807  1381  00B0               	movwf	___fldiv@f1+1
  3808  1382  1703               	bsf	3,6	;RP1=1, select bank2
  3809  1383  083F               	movf	measure_capacitance@Cin^(0+256),w
  3810  1384  1303               	bcf	3,6	;RP1=0, select bank0
  3811  1385  00AF               	movwf	___fldiv@f1
  3812  1386  262D  160A  118A   	fcall	___fldiv
  3813  1389  082E               	movf	?___fldiv+3,w
  3814  138A  1703               	bsf	3,6	;RP1=1, select bank2
  3815  138B  00C2               	movwf	(measure_capacitance@Cin+3)^(0+256)
  3816  138C  1303               	bcf	3,6	;RP1=0, select bank0
  3817  138D  082D               	movf	?___fldiv+2,w
  3818  138E  1703               	bsf	3,6	;RP1=1, select bank2
  3819  138F  00C1               	movwf	(measure_capacitance@Cin+2)^(0+256)
  3820  1390  1303               	bcf	3,6	;RP1=0, select bank0
  3821  1391  082C               	movf	?___fldiv+1,w
  3822  1392  1703               	bsf	3,6	;RP1=1, select bank2
  3823  1393  00C0               	movwf	(measure_capacitance@Cin+1)^(0+256)
  3824  1394  1303               	bcf	3,6	;RP1=0, select bank0
  3825  1395  082B               	movf	?___fldiv,w
  3826  1396  1703               	bsf	3,6	;RP1=1, select bank2
  3827  1397  00BF               	movwf	measure_capacitance@Cin^(0+256)
  3828                           
  3829                           ;measure.c: 177: unit = 5;
  3830  1398  3005               	movlw	5
  3831  1399  2BC6               	goto	L7
  3832  139A                     l4772:	
  3833                           
  3834                           ;measure.c: 180: Cin = Cin / 1e+03;
  3835  139A  3044               	movlw	68
  3836  139B  00AE               	movwf	___fldiv@f2+3
  3837  139C  307A               	movlw	122
  3838  139D  00AD               	movwf	___fldiv@f2+2
  3839  139E  01AC               	clrf	___fldiv@f2+1
  3840  139F  01AB               	clrf	___fldiv@f2
  3841  13A0  1703               	bsf	3,6	;RP1=1, select bank2
  3842  13A1  0842               	movf	(measure_capacitance@Cin+3)^(0+256),w
  3843  13A2  1303               	bcf	3,6	;RP1=0, select bank0
  3844  13A3  00B2               	movwf	___fldiv@f1+3
  3845  13A4  1703               	bsf	3,6	;RP1=1, select bank2
  3846  13A5  0841               	movf	(measure_capacitance@Cin+2)^(0+256),w
  3847  13A6  1303               	bcf	3,6	;RP1=0, select bank0
  3848  13A7  00B1               	movwf	___fldiv@f1+2
  3849  13A8  1703               	bsf	3,6	;RP1=1, select bank2
  3850  13A9  0840               	movf	(measure_capacitance@Cin+1)^(0+256),w
  3851  13AA  1303               	bcf	3,6	;RP1=0, select bank0
  3852  13AB  00B0               	movwf	___fldiv@f1+1
  3853  13AC  1703               	bsf	3,6	;RP1=1, select bank2
  3854  13AD  083F               	movf	measure_capacitance@Cin^(0+256),w
  3855  13AE  1303               	bcf	3,6	;RP1=0, select bank0
  3856  13AF  00AF               	movwf	___fldiv@f1
  3857  13B0  262D  160A  118A   	fcall	___fldiv
  3858  13B3  082E               	movf	?___fldiv+3,w
  3859  13B4  1703               	bsf	3,6	;RP1=1, select bank2
  3860  13B5  00C2               	movwf	(measure_capacitance@Cin+3)^(0+256)
  3861  13B6  1303               	bcf	3,6	;RP1=0, select bank0
  3862  13B7  082D               	movf	?___fldiv+2,w
  3863  13B8  1703               	bsf	3,6	;RP1=1, select bank2
  3864  13B9  00C1               	movwf	(measure_capacitance@Cin+2)^(0+256)
  3865  13BA  1303               	bcf	3,6	;RP1=0, select bank0
  3866  13BB  082C               	movf	?___fldiv+1,w
  3867  13BC  1703               	bsf	3,6	;RP1=1, select bank2
  3868  13BD  00C0               	movwf	(measure_capacitance@Cin+1)^(0+256)
  3869  13BE  1303               	bcf	3,6	;RP1=0, select bank0
  3870  13BF  082B               	movf	?___fldiv,w
  3871  13C0  1703               	bsf	3,6	;RP1=1, select bank2
  3872  13C1  00BF               	movwf	measure_capacitance@Cin^(0+256)
  3873                           
  3874                           ;measure.c: 181: unit = 6;
  3875  13C2  3006               	movlw	6
  3876  13C3  2BC6               	goto	L7
  3877  13C4                     l4776:	
  3878                           
  3879                           ;measure.c: 184: unit = 7;
  3880  13C4  3007               	movlw	7
  3881  13C5  1703               	bsf	3,6	;RP1=1, select bank2
  3882  13C6                     L7:	
  3883  13C6  00BC               	movwf	measure_capacitance@unit^(0+256)
  3884                           
  3885                           ;measure.c: 186: Cin = Cin * 100;
  3886  13C7  3042               	movlw	66
  3887  13C8  1303               	bcf	3,6	;RP1=0, select bank0
  3888  13C9  00C1               	movwf	___flmul@f1+3
  3889  13CA  30C8               	movlw	200
  3890  13CB  00C0               	movwf	___flmul@f1+2
  3891  13CC  01BF               	clrf	___flmul@f1+1
  3892  13CD  01BE               	clrf	___flmul@f1
  3893  13CE  1703               	bsf	3,6	;RP1=1, select bank2
  3894  13CF  0842               	movf	(measure_capacitance@Cin+3)^(0+256),w
  3895  13D0  1303               	bcf	3,6	;RP1=0, select bank0
  3896  13D1  00C5               	movwf	___flmul@f2+3
  3897  13D2  1703               	bsf	3,6	;RP1=1, select bank2
  3898  13D3  0841               	movf	(measure_capacitance@Cin+2)^(0+256),w
  3899  13D4  1303               	bcf	3,6	;RP1=0, select bank0
  3900  13D5  00C4               	movwf	___flmul@f2+2
  3901  13D6  1703               	bsf	3,6	;RP1=1, select bank2
  3902  13D7  0840               	movf	(measure_capacitance@Cin+1)^(0+256),w
  3903  13D8  1303               	bcf	3,6	;RP1=0, select bank0
  3904  13D9  00C3               	movwf	___flmul@f2+1
  3905  13DA  1703               	bsf	3,6	;RP1=1, select bank2
  3906  13DB  083F               	movf	measure_capacitance@Cin^(0+256),w
  3907  13DC  1303               	bcf	3,6	;RP1=0, select bank0
  3908  13DD  00C2               	movwf	___flmul@f2
  3909  13DE  120A  158A  2698  160A  118A  	fcall	___flmul
  3910  13E3  0841               	movf	?___flmul+3,w
  3911  13E4  1703               	bsf	3,6	;RP1=1, select bank2
  3912  13E5  00C2               	movwf	(measure_capacitance@Cin+3)^(0+256)
  3913  13E6  1303               	bcf	3,6	;RP1=0, select bank0
  3914  13E7  0840               	movf	?___flmul+2,w
  3915  13E8  1703               	bsf	3,6	;RP1=1, select bank2
  3916  13E9  00C1               	movwf	(measure_capacitance@Cin+2)^(0+256)
  3917  13EA  1303               	bcf	3,6	;RP1=0, select bank0
  3918  13EB  083F               	movf	?___flmul+1,w
  3919  13EC  1703               	bsf	3,6	;RP1=1, select bank2
  3920  13ED  00C0               	movwf	(measure_capacitance@Cin+1)^(0+256)
  3921  13EE  1303               	bcf	3,6	;RP1=0, select bank0
  3922  13EF  083E               	movf	?___flmul,w
  3923  13F0  1703               	bsf	3,6	;RP1=1, select bank2
  3924  13F1  00BF               	movwf	measure_capacitance@Cin^(0+256)
  3925                           
  3926                           ;measure.c: 187: var = (uint16_t)Cin;
  3927  13F2  0842               	movf	(measure_capacitance@Cin+3)^(0+256),w
  3928  13F3  1683               	bsf	3,5	;RP0=1, select bank1
  3929  13F4  1303               	bcf	3,6	;RP1=0, select bank1
  3930  13F5  00B5               	movwf	(___fltol@f1+3)^(0+128)
  3931  13F6  1283               	bcf	3,5	;RP0=0, select bank2
  3932  13F7  1703               	bsf	3,6	;RP1=1, select bank2
  3933  13F8  0841               	movf	(measure_capacitance@Cin+2)^(0+256),w
  3934  13F9  1683               	bsf	3,5	;RP0=1, select bank1
  3935  13FA  1303               	bcf	3,6	;RP1=0, select bank1
  3936  13FB  00B4               	movwf	(___fltol@f1+2)^(0+128)
  3937  13FC  1283               	bcf	3,5	;RP0=0, select bank2
  3938  13FD  1703               	bsf	3,6	;RP1=1, select bank2
  3939  13FE  0840               	movf	(measure_capacitance@Cin+1)^(0+256),w
  3940  13FF  1683               	bsf	3,5	;RP0=1, select bank1
  3941  1400  1303               	bcf	3,6	;RP1=0, select bank1
  3942  1401  00B3               	movwf	(___fltol@f1+1)^(0+128)
  3943  1402  1283               	bcf	3,5	;RP0=0, select bank2
  3944  1403  1703               	bsf	3,6	;RP1=1, select bank2
  3945  1404  083F               	movf	measure_capacitance@Cin^(0+256),w
  3946  1405  1683               	bsf	3,5	;RP0=1, select bank1
  3947  1406  1303               	bcf	3,6	;RP1=0, select bank1
  3948  1407  00B2               	movwf	___fltol@f1^(0+128)
  3949  1408  26A6               	fcall	___fltol
  3950  1409  0833               	movf	(?___fltol^(0+128)+1),w
  3951  140A  1283               	bcf	3,5	;RP0=0, select bank2
  3952  140B  1703               	bsf	3,6	;RP1=1, select bank2
  3953  140C  00BE               	movwf	(measure_capacitance@var+1)^(0+256)
  3954  140D  1683               	bsf	3,5	;RP0=1, select bank1
  3955  140E  1303               	bcf	3,6	;RP1=0, select bank1
  3956  140F  0832               	movf	?___fltol^(0+128),w
  3957  1410  1283               	bcf	3,5	;RP0=0, select bank2
  3958  1411  1703               	bsf	3,6	;RP1=1, select bank2
  3959  1412  00BD               	movwf	measure_capacitance@var^(0+256)
  3960                           
  3961                           ;measure.c: 189: print_reading(var);
  3962  1413  083E               	movf	(measure_capacitance@var+1)^(0+256),w
  3963  1414  1303               	bcf	3,6	;RP1=0, select bank0
  3964  1415  00D2               	movwf	print_reading@measurement+1
  3965  1416  1703               	bsf	3,6	;RP1=1, select bank2
  3966  1417  083D               	movf	measure_capacitance@var^(0+256),w
  3967  1418  1303               	bcf	3,6	;RP1=0, select bank0
  3968  1419  00D1               	movwf	print_reading@measurement
  3969  141A  160A  158A  25F1  160A  118A  	fcall	_print_reading
  3970                           
  3971                           ;measure.c: 190: print_unit(unit);
  3972  141F  1703               	bsf	3,6	;RP1=1, select bank2
  3973  1420  160A  158A  2C14   	ljmp	l4386
  3974  1423                     __end_of_measure_capacitance:	
  3975  1423                     __ptext38:	
  3976 ;; *************** function _ser_puts *****************
  3977 ;; Defined at:
  3978 ;;		line 65 in file "../../../lib/ser.c"
  3979 ;; Parameters:    Size  Location     Type
  3980 ;;  s               2    0[BANK0 ] PTR const unsigned char 
  3981 ;;		 -> STR_36(3), STR_35(5), STR_34(3), STR_33(8), 
  3982 ;;		 -> STR_32(6), STR_31(6), STR_30(6), STR_29(5), 
  3983 ;;		 -> STR_26(3), STR_24(3), STR_22(3), STR_17(3), 
  3984 ;;		 -> STR_16(16), STR_15(16), STR_13(3), STR_9(3), 
  3985 ;; Auto vars:     Size  Location     Type
  3986 ;;		None
  3987 ;; Return value:  Size  Location     Type
  3988 ;;		None               void
  3989 ;; Registers used:
  3990 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3991 ;; Tracked objects:
  3992 ;;		On entry : 300/0
  3993 ;;		On exit  : 300/0
  3994 ;;		Unchanged: 0/0
  3995 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3996 ;;      Params:         0       2       0       0       0
  3997 ;;      Locals:         0       0       0       0       0
  3998 ;;      Temps:          0       0       0       0       0
  3999 ;;      Totals:         0       2       0       0       0
  4000 ;;Total ram usage:        2 bytes
  4001 ;; Hardware stack levels used:    1
  4002 ;; Hardware stack levels required when called:    2
  4003 ;; This function calls:
  4004 ;;		_ser_putch
  4005 ;; This function is called by:
  4006 ;;		_print_unit
  4007 ;;		_print_buffer
  4008 ;;		_main
  4009 ;;		_calibrate
  4010 ;;		_measure_capacitance
  4011 ;; This function uses a non-reentrant model
  4012 ;;
  4013                           
  4014                           
  4015                           ;psect for function _ser_puts
  4016  1423                     _ser_puts:	
  4017  1423                     l4098:	
  4018                           ;incstack = 0
  4019                           ; Regs used in _ser_puts: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4020                           
  4021  1423                     l4104:	
  4022                           ;ser.c: 66: while(*s) ser_putch(*s++);
  4023                           
  4024  1423  0822               	movf	ser_puts@s+1,w
  4025  1424  00FF               	movwf	127
  4026  1425  0821               	movf	ser_puts@s,w
  4027  1426  0084               	movwf	4
  4028  1427  160A  158A  2000  160A  118A  	fcall	stringtab
  4029  142C  3A00               	xorlw	0
  4030  142D  1903               	btfsc	3,2
  4031  142E  0008               	return
  4032  142F  0822               	movf	ser_puts@s+1,w
  4033  1430  00FF               	movwf	127
  4034  1431  0821               	movf	ser_puts@s,w
  4035  1432  0084               	movwf	4
  4036  1433  160A  158A  2000  160A  118A  	fcall	stringtab
  4037  1438  2440  160A  118A   	fcall	_ser_putch
  4038  143B  1283               	bcf	3,5	;RP0=0, select bank0
  4039  143C  0AA1               	incf	ser_puts@s,f
  4040  143D  1903               	skipnz
  4041  143E  0AA2               	incf	ser_puts@s+1,f
  4042  143F  2C23               	goto	l4104
  4043  1440                     __end_of_ser_puts:	
  4044  1440                     __ptext39:	
  4045 ;; *************** function _ser_putch *****************
  4046 ;; Defined at:
  4047 ;;		line 55 in file "../../../lib/ser.c"
  4048 ;; Parameters:    Size  Location     Type
  4049 ;;  c               1    wreg     unsigned char 
  4050 ;; Auto vars:     Size  Location     Type
  4051 ;;  c               1    4[COMMON] unsigned char 
  4052 ;; Return value:  Size  Location     Type
  4053 ;;		None               void
  4054 ;; Registers used:
  4055 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  4056 ;; Tracked objects:
  4057 ;;		On entry : 0/0
  4058 ;;		On exit  : B00/900
  4059 ;;		Unchanged: 0/0
  4060 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4061 ;;      Params:         0       0       0       0       0
  4062 ;;      Locals:         1       0       0       0       0
  4063 ;;      Temps:          0       0       0       0       0
  4064 ;;      Totals:         1       0       0       0       0
  4065 ;;Total ram usage:        1 bytes
  4066 ;; Hardware stack levels used:    1
  4067 ;; Hardware stack levels required when called:    1
  4068 ;; This function calls:
  4069 ;;		Nothing
  4070 ;; This function is called by:
  4071 ;;		_output_putch
  4072 ;;		_print_buffer
  4073 ;;		_measure_capacitance
  4074 ;;		_ser_puts
  4075 ;; This function uses a non-reentrant model
  4076 ;;
  4077                           
  4078                           
  4079                           ;psect for function _ser_putch
  4080  1440                     _ser_putch:	
  4081                           
  4082                           ;incstack = 0
  4083                           ; Regs used in _ser_putch: [wreg-fsr0h+status,2+status,0]
  4084                           ;ser_putch@c stored from wreg
  4085  1440  00F4               	movwf	ser_putch@c
  4086  1441                     l3954:	
  4087                           ;ser.c: 56: while(((txiptr + 1) & ((uint8_t)16 - 1)) == txoptr) continue;
  4088                           
  4089  1441  0878               	movf	_txiptr,w	;volatile
  4090  1442  3E01               	addlw	1
  4091  1443  390F               	andlw	15
  4092  1444  0679               	xorwf	_txoptr,w	;volatile
  4093  1445  1903               	skipnz
  4094  1446  2C41               	goto	l3954
  4095                           
  4096                           ;ser.c: 57: GIE = 0;
  4097  1447  138B               	bcf	11,7	;volatile
  4098                           
  4099                           ;ser.c: 58: txfifo[txiptr] = c;
  4100  1448  0878               	movf	_txiptr,w
  4101  1449  3E20               	addlw	(low (_txfifo| (0+256)))& (0+255)
  4102  144A  0084               	movwf	4
  4103  144B  0874               	movf	ser_putch@c,w
  4104  144C  1783               	bsf	3,7	;select IRP bank2
  4105  144D  0080               	movwf	0
  4106                           
  4107                           ;ser.c: 59: txiptr = (txiptr + 1) & ((uint8_t)16 - 1);
  4108  144E  0AF8               	incf	_txiptr,f	;volatile
  4109  144F  300F               	movlw	15
  4110  1450  05F8               	andwf	_txiptr,f	;volatile
  4111                           
  4112                           ;ser.c: 60: TXIE = 1;
  4113  1451  1683               	bsf	3,5	;RP0=1, select bank1
  4114  1452  1303               	bcf	3,6	;RP1=0, select bank1
  4115  1453  160C               	bsf	12,4	;volatile
  4116                           
  4117                           ;ser.c: 61: GIE = 1;
  4118  1454  178B               	bsf	11,7	;volatile
  4119  1455  0008               	return
  4120  1456                     __end_of_ser_putch:	
  4121  1456                     __ptext10:	
  4122 ;; *************** function _format_xint32 *****************
  4123 ;; Defined at:
  4124 ;;		line 51 in file "../../../lib/format.c"
  4125 ;; Parameters:    Size  Location     Type
  4126 ;;  x               4   48[BANK0 ] unsigned long 
  4127 ;; Auto vars:     Size  Location     Type
  4128 ;;		None
  4129 ;; Return value:  Size  Location     Type
  4130 ;;		None               void
  4131 ;; Registers used:
  4132 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4133 ;; Tracked objects:
  4134 ;;		On entry : 300/0
  4135 ;;		On exit  : 300/0
  4136 ;;		Unchanged: 0/0
  4137 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4138 ;;      Params:         0       4       0       0       0
  4139 ;;      Locals:         0       0       0       0       0
  4140 ;;      Temps:          0       0       0       0       0
  4141 ;;      Totals:         0       4       0       0       0
  4142 ;;Total ram usage:        4 bytes
  4143 ;; Hardware stack levels used:    1
  4144 ;; Hardware stack levels required when called:    3
  4145 ;; This function calls:
  4146 ;;		_buffer_putch
  4147 ;;		_format_number
  4148 ;; This function is called by:
  4149 ;;		_measure_capacitance
  4150 ;; This function uses a non-reentrant model
  4151 ;;
  4152                           
  4153                           
  4154                           ;psect for function _format_xint32
  4155  1456                     _format_xint32:	
  4156                           
  4157                           ;format.c: 52: buffer_putch('0');
  4158                           
  4159                           ;incstack = 0
  4160                           ; Regs used in _format_xint32: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4161  1456  3030               	movlw	48
  4162  1457  25F9  160A  118A   	fcall	_buffer_putch
  4163                           
  4164                           ;format.c: 53: buffer_putch('x');
  4165  145A  3078               	movlw	120
  4166  145B  25F9  160A  118A   	fcall	_buffer_putch
  4167                           
  4168                           ;format.c: 54: format_number((uint16_t)(x >> 16), 16, -4);
  4169  145E  1283               	bcf	3,5	;RP0=0, select bank0
  4170  145F  1303               	bcf	3,6	;RP1=0, select bank0
  4171  1460  0854               	movf	format_xint32@x+3,w
  4172  1461  00A9               	movwf	format_number@n+1
  4173  1462  0853               	movf	format_xint32@x+2,w
  4174  1463  00A8               	movwf	format_number@n
  4175  1464  3010               	movlw	16
  4176  1465  00AA               	movwf	format_number@base
  4177  1466  30FC               	movlw	252
  4178  1467  00AB               	movwf	format_number@pad
  4179  1468  273E  160A  118A   	fcall	_format_number
  4180                           
  4181                           ;format.c: 55: format_number((uint16_t)(x & 0xffff), 16, -4);
  4182  146B  0852               	movf	format_xint32@x+1,w
  4183  146C  00A9               	movwf	format_number@n+1
  4184  146D  0851               	movf	format_xint32@x,w
  4185  146E  00A8               	movwf	format_number@n
  4186  146F  3010               	movlw	16
  4187  1470  00AA               	movwf	format_number@base
  4188  1471  30FC               	movlw	252
  4189  1472  00AB               	movwf	format_number@pad
  4190  1473  2F3E               	ljmp	l4252
  4191  1474                     __end_of_format_xint32:	
  4192  1474                     __ptext11:	
  4193 ;; *************** function _format_double *****************
  4194 ;; Defined at:
  4195 ;;		line 77 in file "../../../lib/format.c"
  4196 ;; Parameters:    Size  Location     Type
  4197 ;;  num             4    0[BANK3 ] unsigned long 
  4198 ;; Auto vars:     Size  Location     Type
  4199 ;;  weight          4   12[BANK3 ] unsigned long 
  4200 ;;  m               2   18[BANK3 ] short 
  4201 ;;  digit           2   16[BANK3 ] short 
  4202 ;; Return value:  Size  Location     Type
  4203 ;;		None               void
  4204 ;; Registers used:
  4205 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4206 ;; Tracked objects:
  4207 ;;		On entry : 300/300
  4208 ;;		On exit  : 300/0
  4209 ;;		Unchanged: 0/0
  4210 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4211 ;;      Params:         0       0       0       4       0
  4212 ;;      Locals:         0       0       0      16       0
  4213 ;;      Temps:          0       0       0       0       0
  4214 ;;      Totals:         0       0       0      20       0
  4215 ;;Total ram usage:       20 bytes
  4216 ;; Hardware stack levels used:    1
  4217 ;; Hardware stack levels required when called:    6
  4218 ;; This function calls:
  4219 ;;		___awtofl
  4220 ;;		___fldiv
  4221 ;;		___flge
  4222 ;;		___flmul
  4223 ;;		___flsub
  4224 ;;		___fltol
  4225 ;;		_buffer_putch
  4226 ;;		_floor
  4227 ;;		_log10
  4228 ;;		_pow
  4229 ;; This function is called by:
  4230 ;;		_main
  4231 ;;		_measure_capacitance
  4232 ;; This function uses a non-reentrant model
  4233 ;;
  4234                           
  4235                           
  4236                           ;psect for function _format_double
  4237  1474                     _format_double:	
  4238                           
  4239                           ;format.c: 78: short m = (short)log10(num);
  4240                           
  4241                           ;incstack = 0
  4242                           ; Regs used in _format_double: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4243  1474  0843               	movf	(format_double@num+3)^(0+384),w
  4244  1475  1303               	bcf	3,6	;RP1=0, select bank1
  4245  1476  00AD               	movwf	(log10@x+3)^(0+128)
  4246  1477  1703               	bsf	3,6	;RP1=1, select bank3
  4247  1478  0842               	movf	(format_double@num+2)^(0+384),w
  4248  1479  1303               	bcf	3,6	;RP1=0, select bank1
  4249  147A  00AC               	movwf	(log10@x+2)^(0+128)
  4250  147B  1703               	bsf	3,6	;RP1=1, select bank3
  4251  147C  0841               	movf	(format_double@num+1)^(0+384),w
  4252  147D  1303               	bcf	3,6	;RP1=0, select bank1
  4253  147E  00AB               	movwf	(log10@x+1)^(0+128)
  4254  147F  1703               	bsf	3,6	;RP1=1, select bank3
  4255  1480  0840               	movf	format_double@num^(0+384),w
  4256  1481  1303               	bcf	3,6	;RP1=0, select bank1
  4257  1482  00AA               	movwf	log10@x^(0+128)
  4258  1483  160A  158A  247D  160A  118A  	fcall	_log10
  4259  1488  082D               	movf	(?_log10+3)^(0+128),w
  4260  1489  00B5               	movwf	(___fltol@f1+3)^(0+128)
  4261  148A  082C               	movf	(?_log10+2)^(0+128),w
  4262  148B  00B4               	movwf	(___fltol@f1+2)^(0+128)
  4263  148C  082B               	movf	(?_log10+1)^(0+128),w
  4264  148D  00B3               	movwf	(___fltol@f1+1)^(0+128)
  4265  148E  082A               	movf	?_log10^(0+128),w
  4266  148F  00B2               	movwf	___fltol@f1^(0+128)
  4267  1490  26A6               	fcall	___fltol
  4268  1491  0833               	movf	(?___fltol^(0+128)+1),w
  4269  1492  1703               	bsf	3,6	;RP1=1, select bank3
  4270  1493  00D3               	movwf	(format_double@m+1)^(0+384)
  4271  1494  1303               	bcf	3,6	;RP1=0, select bank1
  4272  1495  0832               	movf	?___fltol^(0+128),w
  4273  1496  1703               	bsf	3,6	;RP1=1, select bank3
  4274  1497  00D2               	movwf	format_double@m^(0+384)
  4275  1498                     l4428:	
  4276                           ;format.c: 79: short digit;
  4277                           ;format.c: 82: while(num > 0 + (sizeof(double) == sizeof(float) ? 3.05176e-05 : 1.192092
      +                          90e-07)) {
  4278                           
  4279  1498  3038               	movlw	56
  4280  1499  1283               	bcf	3,5	;RP0=0, select bank0
  4281  149A  1303               	bcf	3,6	;RP1=0, select bank0
  4282  149B  00A4               	movwf	___flge@ff1+3
  4283  149C  3006               	movlw	6
  4284  149D  01A3               	clrf	___flge@ff1+2
  4285  149E  01A2               	clrf	___flge@ff1+1
  4286  149F  00A1               	movwf	___flge@ff1
  4287  14A0  1683               	bsf	3,5	;RP0=1, select bank3
  4288  14A1  1703               	bsf	3,6	;RP1=1, select bank3
  4289  14A2  0843               	movf	(format_double@num+3)^(0+384),w
  4290  14A3  1283               	bcf	3,5	;RP0=0, select bank0
  4291  14A4  1303               	bcf	3,6	;RP1=0, select bank0
  4292  14A5  00A8               	movwf	___flge@ff2+3
  4293  14A6  1683               	bsf	3,5	;RP0=1, select bank3
  4294  14A7  1703               	bsf	3,6	;RP1=1, select bank3
  4295  14A8  0842               	movf	(format_double@num+2)^(0+384),w
  4296  14A9  1283               	bcf	3,5	;RP0=0, select bank0
  4297  14AA  1303               	bcf	3,6	;RP1=0, select bank0
  4298  14AB  00A7               	movwf	___flge@ff2+2
  4299  14AC  1683               	bsf	3,5	;RP0=1, select bank3
  4300  14AD  1703               	bsf	3,6	;RP1=1, select bank3
  4301  14AE  0841               	movf	(format_double@num+1)^(0+384),w
  4302  14AF  1283               	bcf	3,5	;RP0=0, select bank0
  4303  14B0  1303               	bcf	3,6	;RP1=0, select bank0
  4304  14B1  00A6               	movwf	___flge@ff2+1
  4305  14B2  1683               	bsf	3,5	;RP0=1, select bank3
  4306  14B3  1703               	bsf	3,6	;RP1=1, select bank3
  4307  14B4  0840               	movf	format_double@num^(0+384),w
  4308  14B5  1283               	bcf	3,5	;RP0=0, select bank0
  4309  14B6  1303               	bcf	3,6	;RP1=0, select bank0
  4310  14B7  00A5               	movwf	___flge@ff2
  4311  14B8  120A  158A  2730  160A  118A  	fcall	___flge
  4312  14BD  1803               	btfsc	3,0
  4313  14BE  0008               	return
  4314                           
  4315                           ;format.c: 83: double weight = pow(10.0l, m);
  4316  14BF  1683               	bsf	3,5	;RP0=1, select bank3
  4317  14C0  1703               	bsf	3,6	;RP1=1, select bank3
  4318  14C1  0853               	movf	(format_double@m+1)^(0+384),w
  4319  14C2  1283               	bcf	3,5	;RP0=0, select bank0
  4320  14C3  1303               	bcf	3,6	;RP1=0, select bank0
  4321  14C4  00AC               	movwf	___awtofl@c+1
  4322  14C5  1683               	bsf	3,5	;RP0=1, select bank3
  4323  14C6  1703               	bsf	3,6	;RP1=1, select bank3
  4324  14C7  0852               	movf	format_double@m^(0+384),w
  4325  14C8  1283               	bcf	3,5	;RP0=0, select bank0
  4326  14C9  1303               	bcf	3,6	;RP1=0, select bank0
  4327  14CA  00AB               	movwf	___awtofl@c
  4328  14CB  26FD  160A  118A   	fcall	___awtofl
  4329  14CE  082E               	movf	?___awtofl+3,w
  4330  14CF  1683               	bsf	3,5	;RP0=1, select bank3
  4331  14D0  1703               	bsf	3,6	;RP1=1, select bank3
  4332  14D1  00C7               	movwf	(_format_double$1008+3)^(0+384)
  4333  14D2  1283               	bcf	3,5	;RP0=0, select bank0
  4334  14D3  1303               	bcf	3,6	;RP1=0, select bank0
  4335  14D4  082D               	movf	?___awtofl+2,w
  4336  14D5  1683               	bsf	3,5	;RP0=1, select bank3
  4337  14D6  1703               	bsf	3,6	;RP1=1, select bank3
  4338  14D7  00C6               	movwf	(_format_double$1008+2)^(0+384)
  4339  14D8  1283               	bcf	3,5	;RP0=0, select bank0
  4340  14D9  1303               	bcf	3,6	;RP1=0, select bank0
  4341  14DA  082C               	movf	?___awtofl+1,w
  4342  14DB  1683               	bsf	3,5	;RP0=1, select bank3
  4343  14DC  1703               	bsf	3,6	;RP1=1, select bank3
  4344  14DD  00C5               	movwf	(_format_double$1008+1)^(0+384)
  4345  14DE  1283               	bcf	3,5	;RP0=0, select bank0
  4346  14DF  1303               	bcf	3,6	;RP1=0, select bank0
  4347  14E0  082B               	movf	?___awtofl,w
  4348  14E1  1683               	bsf	3,5	;RP0=1, select bank3
  4349  14E2  1703               	bsf	3,6	;RP1=1, select bank3
  4350  14E3  00C4               	movwf	_format_double$1008^(0+384)
  4351                           
  4352                           ;format.c: 83: double weight = pow(10.0l, m);
  4353  14E4  3041               	movlw	65
  4354  14E5  1303               	bcf	3,6	;RP1=0, select bank1
  4355  14E6  00DD               	movwf	(pow@x+3)^(0+128)
  4356  14E7  3020               	movlw	32
  4357  14E8  00DC               	movwf	(pow@x+2)^(0+128)
  4358  14E9  01DB               	clrf	(pow@x+1)^(0+128)
  4359  14EA  01DA               	clrf	pow@x^(0+128)
  4360  14EB  1703               	bsf	3,6	;RP1=1, select bank3
  4361  14EC  0847               	movf	(_format_double$1008+3)^(0+384),w
  4362  14ED  1303               	bcf	3,6	;RP1=0, select bank1
  4363  14EE  00E1               	movwf	(pow@y+3)^(0+128)
  4364  14EF  1703               	bsf	3,6	;RP1=1, select bank3
  4365  14F0  0846               	movf	(_format_double$1008+2)^(0+384),w
  4366  14F1  1303               	bcf	3,6	;RP1=0, select bank1
  4367  14F2  00E0               	movwf	(pow@y+2)^(0+128)
  4368  14F3  1703               	bsf	3,6	;RP1=1, select bank3
  4369  14F4  0845               	movf	(_format_double$1008+1)^(0+384),w
  4370  14F5  1303               	bcf	3,6	;RP1=0, select bank1
  4371  14F6  00DF               	movwf	(pow@y+1)^(0+128)
  4372  14F7  1703               	bsf	3,6	;RP1=1, select bank3
  4373  14F8  0844               	movf	_format_double$1008^(0+384),w
  4374  14F9  1303               	bcf	3,6	;RP1=0, select bank1
  4375  14FA  00DE               	movwf	pow@y^(0+128)
  4376  14FB  160A  158A  26AB  160A  118A  	fcall	_pow
  4377  1500  085D               	movf	(?_pow+3)^(0+128),w
  4378  1501  1703               	bsf	3,6	;RP1=1, select bank3
  4379  1502  00CF               	movwf	(format_double@weight+3)^(0+384)
  4380  1503  1303               	bcf	3,6	;RP1=0, select bank1
  4381  1504  085C               	movf	(?_pow+2)^(0+128),w
  4382  1505  1703               	bsf	3,6	;RP1=1, select bank3
  4383  1506  00CE               	movwf	(format_double@weight+2)^(0+384)
  4384  1507  1303               	bcf	3,6	;RP1=0, select bank1
  4385  1508  085B               	movf	(?_pow+1)^(0+128),w
  4386  1509  1703               	bsf	3,6	;RP1=1, select bank3
  4387  150A  00CD               	movwf	(format_double@weight+1)^(0+384)
  4388  150B  1303               	bcf	3,6	;RP1=0, select bank1
  4389  150C  085A               	movf	?_pow^(0+128),w
  4390  150D  1703               	bsf	3,6	;RP1=1, select bank3
  4391  150E  00CC               	movwf	format_double@weight^(0+384)
  4392                           
  4393                           ;format.c: 84: digit = (short)floor(num / weight);
  4394  150F  0843               	movf	(format_double@num+3)^(0+384),w
  4395  1510  1283               	bcf	3,5	;RP0=0, select bank0
  4396  1511  1303               	bcf	3,6	;RP1=0, select bank0
  4397  1512  00B2               	movwf	___fldiv@f1+3
  4398  1513  1683               	bsf	3,5	;RP0=1, select bank3
  4399  1514  1703               	bsf	3,6	;RP1=1, select bank3
  4400  1515  0842               	movf	(format_double@num+2)^(0+384),w
  4401  1516  1283               	bcf	3,5	;RP0=0, select bank0
  4402  1517  1303               	bcf	3,6	;RP1=0, select bank0
  4403  1518  00B1               	movwf	___fldiv@f1+2
  4404  1519  1683               	bsf	3,5	;RP0=1, select bank3
  4405  151A  1703               	bsf	3,6	;RP1=1, select bank3
  4406  151B  0841               	movf	(format_double@num+1)^(0+384),w
  4407  151C  1283               	bcf	3,5	;RP0=0, select bank0
  4408  151D  1303               	bcf	3,6	;RP1=0, select bank0
  4409  151E  00B0               	movwf	___fldiv@f1+1
  4410  151F  1683               	bsf	3,5	;RP0=1, select bank3
  4411  1520  1703               	bsf	3,6	;RP1=1, select bank3
  4412  1521  0840               	movf	format_double@num^(0+384),w
  4413  1522  1283               	bcf	3,5	;RP0=0, select bank0
  4414  1523  1303               	bcf	3,6	;RP1=0, select bank0
  4415  1524  00AF               	movwf	___fldiv@f1
  4416  1525  1683               	bsf	3,5	;RP0=1, select bank3
  4417  1526  1703               	bsf	3,6	;RP1=1, select bank3
  4418  1527  084F               	movf	(format_double@weight+3)^(0+384),w
  4419  1528  1283               	bcf	3,5	;RP0=0, select bank0
  4420  1529  1303               	bcf	3,6	;RP1=0, select bank0
  4421  152A  00AE               	movwf	___fldiv@f2+3
  4422  152B  1683               	bsf	3,5	;RP0=1, select bank3
  4423  152C  1703               	bsf	3,6	;RP1=1, select bank3
  4424  152D  084E               	movf	(format_double@weight+2)^(0+384),w
  4425  152E  1283               	bcf	3,5	;RP0=0, select bank0
  4426  152F  1303               	bcf	3,6	;RP1=0, select bank0
  4427  1530  00AD               	movwf	___fldiv@f2+2
  4428  1531  1683               	bsf	3,5	;RP0=1, select bank3
  4429  1532  1703               	bsf	3,6	;RP1=1, select bank3
  4430  1533  084D               	movf	(format_double@weight+1)^(0+384),w
  4431  1534  1283               	bcf	3,5	;RP0=0, select bank0
  4432  1535  1303               	bcf	3,6	;RP1=0, select bank0
  4433  1536  00AC               	movwf	___fldiv@f2+1
  4434  1537  1683               	bsf	3,5	;RP0=1, select bank3
  4435  1538  1703               	bsf	3,6	;RP1=1, select bank3
  4436  1539  084C               	movf	format_double@weight^(0+384),w
  4437  153A  1283               	bcf	3,5	;RP0=0, select bank0
  4438  153B  1303               	bcf	3,6	;RP1=0, select bank0
  4439  153C  00AB               	movwf	___fldiv@f2
  4440  153D  262D               	fcall	___fldiv
  4441  153E  082E               	movf	?___fldiv+3,w
  4442  153F  1683               	bsf	3,5	;RP0=1, select bank1
  4443  1540  00C4               	movwf	(floor@x+3)^(0+128)
  4444  1541  1283               	bcf	3,5	;RP0=0, select bank0
  4445  1542  082D               	movf	?___fldiv+2,w
  4446  1543  1683               	bsf	3,5	;RP0=1, select bank1
  4447  1544  00C3               	movwf	(floor@x+2)^(0+128)
  4448  1545  1283               	bcf	3,5	;RP0=0, select bank0
  4449  1546  082C               	movf	?___fldiv+1,w
  4450  1547  1683               	bsf	3,5	;RP0=1, select bank1
  4451  1548  00C2               	movwf	(floor@x+1)^(0+128)
  4452  1549  1283               	bcf	3,5	;RP0=0, select bank0
  4453  154A  082B               	movf	?___fldiv,w
  4454  154B  1683               	bsf	3,5	;RP0=1, select bank1
  4455  154C  00C1               	movwf	floor@x^(0+128)
  4456  154D  120A  118A  25B2  160A  118A  	fcall	_floor
  4457  1552  0844               	movf	(?_floor+3)^(0+128),w
  4458  1553  1703               	bsf	3,6	;RP1=1, select bank3
  4459  1554  00CB               	movwf	(_format_double$1009+3)^(0+384)
  4460  1555  1303               	bcf	3,6	;RP1=0, select bank1
  4461  1556  0843               	movf	(?_floor+2)^(0+128),w
  4462  1557  1703               	bsf	3,6	;RP1=1, select bank3
  4463  1558  00CA               	movwf	(_format_double$1009+2)^(0+384)
  4464  1559  1303               	bcf	3,6	;RP1=0, select bank1
  4465  155A  0842               	movf	(?_floor+1)^(0+128),w
  4466  155B  1703               	bsf	3,6	;RP1=1, select bank3
  4467  155C  00C9               	movwf	(_format_double$1009+1)^(0+384)
  4468  155D  1303               	bcf	3,6	;RP1=0, select bank1
  4469  155E  0841               	movf	?_floor^(0+128),w
  4470  155F  1703               	bsf	3,6	;RP1=1, select bank3
  4471  1560  00C8               	movwf	_format_double$1009^(0+384)
  4472                           
  4473                           ;format.c: 84: digit = (short)floor(num / weight);
  4474  1561  084B               	movf	(_format_double$1009+3)^(0+384),w
  4475  1562  1303               	bcf	3,6	;RP1=0, select bank1
  4476  1563  00B5               	movwf	(___fltol@f1+3)^(0+128)
  4477  1564  1703               	bsf	3,6	;RP1=1, select bank3
  4478  1565  084A               	movf	(_format_double$1009+2)^(0+384),w
  4479  1566  1303               	bcf	3,6	;RP1=0, select bank1
  4480  1567  00B4               	movwf	(___fltol@f1+2)^(0+128)
  4481  1568  1703               	bsf	3,6	;RP1=1, select bank3
  4482  1569  0849               	movf	(_format_double$1009+1)^(0+384),w
  4483  156A  1303               	bcf	3,6	;RP1=0, select bank1
  4484  156B  00B3               	movwf	(___fltol@f1+1)^(0+128)
  4485  156C  1703               	bsf	3,6	;RP1=1, select bank3
  4486  156D  0848               	movf	_format_double$1009^(0+384),w
  4487  156E  1303               	bcf	3,6	;RP1=0, select bank1
  4488  156F  00B2               	movwf	___fltol@f1^(0+128)
  4489  1570  26A6  160A  118A   	fcall	___fltol
  4490  1573  0833               	movf	(?___fltol^(0+128)+1),w
  4491  1574  1703               	bsf	3,6	;RP1=1, select bank3
  4492  1575  00D1               	movwf	(format_double@digit+1)^(0+384)
  4493  1576  1303               	bcf	3,6	;RP1=0, select bank1
  4494  1577  0832               	movf	?___fltol^(0+128),w
  4495  1578  1703               	bsf	3,6	;RP1=1, select bank3
  4496  1579  00D0               	movwf	format_double@digit^(0+384)
  4497                           
  4498                           ;format.c: 85: num -= (digit * weight);
  4499  157A  0851               	movf	(format_double@digit+1)^(0+384),w
  4500  157B  1283               	bcf	3,5	;RP0=0, select bank0
  4501  157C  1303               	bcf	3,6	;RP1=0, select bank0
  4502  157D  00AC               	movwf	___awtofl@c+1
  4503  157E  1683               	bsf	3,5	;RP0=1, select bank3
  4504  157F  1703               	bsf	3,6	;RP1=1, select bank3
  4505  1580  0850               	movf	format_double@digit^(0+384),w
  4506  1581  1283               	bcf	3,5	;RP0=0, select bank0
  4507  1582  1303               	bcf	3,6	;RP1=0, select bank0
  4508  1583  00AB               	movwf	___awtofl@c
  4509  1584  26FD               	fcall	___awtofl
  4510  1585  082E               	movf	?___awtofl+3,w
  4511  1586  00C5               	movwf	___flmul@f2+3
  4512  1587  082D               	movf	?___awtofl+2,w
  4513  1588  00C4               	movwf	___flmul@f2+2
  4514  1589  082C               	movf	?___awtofl+1,w
  4515  158A  00C3               	movwf	___flmul@f2+1
  4516  158B  082B               	movf	?___awtofl,w
  4517  158C  00C2               	movwf	___flmul@f2
  4518  158D  1683               	bsf	3,5	;RP0=1, select bank3
  4519  158E  1703               	bsf	3,6	;RP1=1, select bank3
  4520  158F  084F               	movf	(format_double@weight+3)^(0+384),w
  4521  1590  1283               	bcf	3,5	;RP0=0, select bank0
  4522  1591  1303               	bcf	3,6	;RP1=0, select bank0
  4523  1592  00C1               	movwf	___flmul@f1+3
  4524  1593  1683               	bsf	3,5	;RP0=1, select bank3
  4525  1594  1703               	bsf	3,6	;RP1=1, select bank3
  4526  1595  084E               	movf	(format_double@weight+2)^(0+384),w
  4527  1596  1283               	bcf	3,5	;RP0=0, select bank0
  4528  1597  1303               	bcf	3,6	;RP1=0, select bank0
  4529  1598  00C0               	movwf	___flmul@f1+2
  4530  1599  1683               	bsf	3,5	;RP0=1, select bank3
  4531  159A  1703               	bsf	3,6	;RP1=1, select bank3
  4532  159B  084D               	movf	(format_double@weight+1)^(0+384),w
  4533  159C  1283               	bcf	3,5	;RP0=0, select bank0
  4534  159D  1303               	bcf	3,6	;RP1=0, select bank0
  4535  159E  00BF               	movwf	___flmul@f1+1
  4536  159F  1683               	bsf	3,5	;RP0=1, select bank3
  4537  15A0  1703               	bsf	3,6	;RP1=1, select bank3
  4538  15A1  084C               	movf	format_double@weight^(0+384),w
  4539  15A2  1283               	bcf	3,5	;RP0=0, select bank0
  4540  15A3  1303               	bcf	3,6	;RP1=0, select bank0
  4541  15A4  00BE               	movwf	___flmul@f1
  4542  15A5  120A  158A  2698  160A  118A  	fcall	___flmul
  4543  15AA  0841               	movf	?___flmul+3,w
  4544  15AB  00E3               	movwf	___flsub@f2+3
  4545  15AC  0840               	movf	?___flmul+2,w
  4546  15AD  00E2               	movwf	___flsub@f2+2
  4547  15AE  083F               	movf	?___flmul+1,w
  4548  15AF  00E1               	movwf	___flsub@f2+1
  4549  15B0  083E               	movf	?___flmul,w
  4550  15B1  00E0               	movwf	___flsub@f2
  4551  15B2  1683               	bsf	3,5	;RP0=1, select bank3
  4552  15B3  1703               	bsf	3,6	;RP1=1, select bank3
  4553  15B4  0843               	movf	(format_double@num+3)^(0+384),w
  4554  15B5  1283               	bcf	3,5	;RP0=0, select bank0
  4555  15B6  1303               	bcf	3,6	;RP1=0, select bank0
  4556  15B7  00E7               	movwf	___flsub@f1+3
  4557  15B8  1683               	bsf	3,5	;RP0=1, select bank3
  4558  15B9  1703               	bsf	3,6	;RP1=1, select bank3
  4559  15BA  0842               	movf	(format_double@num+2)^(0+384),w
  4560  15BB  1283               	bcf	3,5	;RP0=0, select bank0
  4561  15BC  1303               	bcf	3,6	;RP1=0, select bank0
  4562  15BD  00E6               	movwf	___flsub@f1+2
  4563  15BE  1683               	bsf	3,5	;RP0=1, select bank3
  4564  15BF  1703               	bsf	3,6	;RP1=1, select bank3
  4565  15C0  0841               	movf	(format_double@num+1)^(0+384),w
  4566  15C1  1283               	bcf	3,5	;RP0=0, select bank0
  4567  15C2  1303               	bcf	3,6	;RP1=0, select bank0
  4568  15C3  00E5               	movwf	___flsub@f1+1
  4569  15C4  1683               	bsf	3,5	;RP0=1, select bank3
  4570  15C5  1703               	bsf	3,6	;RP1=1, select bank3
  4571  15C6  0840               	movf	format_double@num^(0+384),w
  4572  15C7  1283               	bcf	3,5	;RP0=0, select bank0
  4573  15C8  1303               	bcf	3,6	;RP1=0, select bank0
  4574  15C9  00E4               	movwf	___flsub@f1
  4575  15CA  271A  160A  118A   	fcall	___flsub
  4576  15CD  0863               	movf	?___flsub+3,w
  4577  15CE  1683               	bsf	3,5	;RP0=1, select bank3
  4578  15CF  1703               	bsf	3,6	;RP1=1, select bank3
  4579  15D0  00C3               	movwf	(format_double@num+3)^(0+384)
  4580  15D1  1283               	bcf	3,5	;RP0=0, select bank0
  4581  15D2  1303               	bcf	3,6	;RP1=0, select bank0
  4582  15D3  0862               	movf	?___flsub+2,w
  4583  15D4  1683               	bsf	3,5	;RP0=1, select bank3
  4584  15D5  1703               	bsf	3,6	;RP1=1, select bank3
  4585  15D6  00C2               	movwf	(format_double@num+2)^(0+384)
  4586  15D7  1283               	bcf	3,5	;RP0=0, select bank0
  4587  15D8  1303               	bcf	3,6	;RP1=0, select bank0
  4588  15D9  0861               	movf	?___flsub+1,w
  4589  15DA  1683               	bsf	3,5	;RP0=1, select bank3
  4590  15DB  1703               	bsf	3,6	;RP1=1, select bank3
  4591  15DC  00C1               	movwf	(format_double@num+1)^(0+384)
  4592  15DD  1283               	bcf	3,5	;RP0=0, select bank0
  4593  15DE  1303               	bcf	3,6	;RP1=0, select bank0
  4594  15DF  0860               	movf	?___flsub,w
  4595  15E0  1683               	bsf	3,5	;RP0=1, select bank3
  4596  15E1  1703               	bsf	3,6	;RP1=1, select bank3
  4597  15E2  00C0               	movwf	format_double@num^(0+384)
  4598                           
  4599                           ;format.c: 86: buffer_putch((char)('0' + digit));
  4600  15E3  0850               	movf	format_double@digit^(0+384),w
  4601  15E4  3E30               	addlw	48
  4602  15E5  25F9  160A  118A   	fcall	_buffer_putch
  4603                           
  4604                           ;format.c: 87: if(m == 0)
  4605  15E8  1683               	bsf	3,5	;RP0=1, select bank3
  4606  15E9  1703               	bsf	3,6	;RP1=1, select bank3
  4607  15EA  0852               	movf	format_double@m^(0+384),w
  4608  15EB  0453               	iorwf	(format_double@m+1)^(0+384),w
  4609  15EC  1D03               	btfss	3,2
  4610  15ED  2DF2               	goto	l4426
  4611                           
  4612                           ;format.c: 88: buffer_putch('.');
  4613  15EE  302E               	movlw	46
  4614  15EF  25F9  160A  118A   	fcall	_buffer_putch
  4615  15F2                     l4426:	
  4616                           
  4617                           ;format.c: 89: m--;
  4618  15F2  30FF               	movlw	-1
  4619  15F3  1683               	bsf	3,5	;RP0=1, select bank3
  4620  15F4  1703               	bsf	3,6	;RP1=1, select bank3
  4621  15F5  07D2               	addwf	format_double@m^(0+384),f
  4622  15F6  1C03               	skipc
  4623  15F7  03D3               	decf	(format_double@m+1)^(0+384),f
  4624  15F8  2C98               	goto	l4428
  4625  15F9                     __end_of_format_double:	
  4626  15F9                     __ptext45:	
  4627 ;; *************** function _buffer_putch *****************
  4628 ;; Defined at:
  4629 ;;		line 30 in file "../../../lib/buffer.c"
  4630 ;; Parameters:    Size  Location     Type
  4631 ;;  ch              1    wreg     unsigned char 
  4632 ;; Auto vars:     Size  Location     Type
  4633 ;;  ch              1    4[COMMON] unsigned char 
  4634 ;; Return value:  Size  Location     Type
  4635 ;;                  1    wreg      unsigned char 
  4636 ;; Registers used:
  4637 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
  4638 ;; Tracked objects:
  4639 ;;		On entry : 0/0
  4640 ;;		On exit  : 0/0
  4641 ;;		Unchanged: 0/0
  4642 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4643 ;;      Params:         0       0       0       0       0
  4644 ;;      Locals:         1       0       0       0       0
  4645 ;;      Temps:          0       3       0       0       0
  4646 ;;      Totals:         1       3       0       0       0
  4647 ;;Total ram usage:        4 bytes
  4648 ;; Hardware stack levels used:    1
  4649 ;; Hardware stack levels required when called:    1
  4650 ;; This function calls:
  4651 ;;		Nothing
  4652 ;; This function is called by:
  4653 ;;		_format_number
  4654 ;;		_format_xint32
  4655 ;;		_format_double
  4656 ;;		_buffer_puts
  4657 ;; This function uses a non-reentrant model
  4658 ;;
  4659                           
  4660                           
  4661                           ;psect for function _buffer_putch
  4662  15F9                     _buffer_putch:	
  4663                           
  4664                           ;incstack = 0
  4665                           ; Regs used in _buffer_putch: [wreg-fsr0h+status,2+status,0+btemp+1]
  4666                           ;buffer_putch@ch stored from wreg
  4667  15F9  00F4               	movwf	buffer_putch@ch
  4668                           
  4669                           ;buffer.c: 31: if(16 - buffer.n <= 0)
  4670  15FA  1683               	bsf	3,5	;RP0=1, select bank3
  4671  15FB  1703               	bsf	3,6	;RP1=1, select bank3
  4672  15FC  0E3B               	swapf	(_buffer^(0+384)+16),w
  4673  15FD  390F               	andlw	15
  4674  15FE  1283               	bcf	3,5	;RP0=0, select bank0
  4675  15FF  1303               	bcf	3,6	;RP1=0, select bank0
  4676  1600  00A1               	movwf	??_buffer_putch
  4677  1601  01A3               	clrf	??_buffer_putch+2
  4678  1602  3C10               	sublw	16
  4679  1603  00A2               	movwf	??_buffer_putch+1
  4680  1604  1C03               	skipc
  4681  1605  03A3               	decf	??_buffer_putch+2,f
  4682  1606  0823               	movf	??_buffer_putch+2,w
  4683  1607  3A80               	xorlw	128
  4684  1608  00FF               	movwf	127
  4685  1609  3080               	movlw	128
  4686  160A  027F               	subwf	127,w
  4687  160B  1D03               	skipz
  4688  160C  2E0F               	goto	u3735
  4689  160D  3001               	movlw	1
  4690  160E  0222               	subwf	??_buffer_putch+1,w
  4691  160F                     u3735:	
  4692  160F  1C03               	btfss	3,0
  4693  1610  0008               	return
  4694                           
  4695                           ;buffer.c: 33: buffer.x[buffer.n] = ch;
  4696  1611  1683               	bsf	3,5	;RP0=1, select bank3
  4697  1612  1703               	bsf	3,6	;RP1=1, select bank3
  4698  1613  0E3B               	swapf	(_buffer^(0+384)+16),w
  4699  1614  390F               	andlw	15
  4700  1615  3EAB               	addlw	(low (_buffer| (0+256)))& (0+255)
  4701  1616  0084               	movwf	4
  4702  1617  0874               	movf	buffer_putch@ch,w
  4703  1618  1783               	bsf	3,7	;select IRP bank3
  4704  1619  0080               	movwf	0
  4705                           
  4706                           ;buffer.c: 34: buffer.n++;
  4707  161A  0E3B               	swapf	(_buffer^(0+384)+16),w
  4708  161B  390F               	andlw	15
  4709  161C  1283               	bcf	3,5	;RP0=0, select bank0
  4710  161D  1303               	bcf	3,6	;RP1=0, select bank0
  4711  161E  00A1               	movwf	??_buffer_putch
  4712  161F  0AA1               	incf	??_buffer_putch,f
  4713  1620  0EA1               	swapf	??_buffer_putch,f
  4714  1621  1683               	bsf	3,5	;RP0=1, select bank3
  4715  1622  1703               	bsf	3,6	;RP1=1, select bank3
  4716  1623  083B               	movf	(_buffer^(0+384)+16),w
  4717  1624  1283               	bcf	3,5	;RP0=0, select bank0
  4718  1625  1303               	bcf	3,6	;RP1=0, select bank0
  4719  1626  0621               	xorwf	??_buffer_putch,w
  4720  1627  390F               	andlw	-241
  4721  1628  0621               	xorwf	??_buffer_putch,w
  4722  1629  1683               	bsf	3,5	;RP0=1, select bank3
  4723  162A  1703               	bsf	3,6	;RP1=1, select bank3
  4724  162B  00BB               	movwf	(_buffer^(0+384)+16)
  4725  162C  0008               	return
  4726  162D                     __end_of_buffer_putch:	
  4727  162D                     __ptext20:	
  4728 ;; *************** function ___fldiv *****************
  4729 ;; Defined at:
  4730 ;;		line 56 in file "/opt/microchip/xc8/v1.34/sources/common/fldiv.c"
  4731 ;; Parameters:    Size  Location     Type
  4732 ;;  f2              4   10[BANK0 ] unsigned char 
  4733 ;;  f1              4   14[BANK0 ] unsigned char 
  4734 ;; Auto vars:     Size  Location     Type
  4735 ;;  f3              4   22[BANK0 ] unsigned char 
  4736 ;;  sign            1   28[BANK0 ] unsigned char 
  4737 ;;  exp             1   27[BANK0 ] unsigned char 
  4738 ;;  cntr            1   26[BANK0 ] unsigned char 
  4739 ;; Return value:  Size  Location     Type
  4740 ;;                  4   10[BANK0 ] unsigned char 
  4741 ;; Registers used:
  4742 ;;		wreg, status,2, status,0, pclath, cstack
  4743 ;; Tracked objects:
  4744 ;;		On entry : 300/0
  4745 ;;		On exit  : 300/0
  4746 ;;		Unchanged: 0/0
  4747 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4748 ;;      Params:         0       8       0       0       0
  4749 ;;      Locals:         0       7       0       0       0
  4750 ;;      Temps:          0       4       0       0       0
  4751 ;;      Totals:         0      19       0       0       0
  4752 ;;Total ram usage:       19 bytes
  4753 ;; Hardware stack levels used:    1
  4754 ;; Hardware stack levels required when called:    2
  4755 ;; This function calls:
  4756 ;;		___flpack
  4757 ;; This function is called by:
  4758 ;;		_format_double
  4759 ;;		_measure_capacitance
  4760 ;;		_measure_inductance
  4761 ;;		_exp
  4762 ;; This function uses a non-reentrant model
  4763 ;;
  4764                           
  4765                           
  4766                           ;psect for function ___fldiv
  4767  162D                     ___fldiv:	
  4768                           
  4769                           ;incstack = 0
  4770                           ; Regs used in ___fldiv: [wreg+status,2+status,0+pclath+cstack]
  4771  162D  082F               	movf	___fldiv@f1,w
  4772  162E  00B3               	movwf	??___fldiv
  4773  162F  0830               	movf	___fldiv@f1+1,w
  4774  1630  00B4               	movwf	??___fldiv+1
  4775  1631  0831               	movf	___fldiv@f1+2,w
  4776  1632  00B5               	movwf	??___fldiv+2
  4777  1633  0832               	movf	___fldiv@f1+3,w
  4778  1634  00B6               	movwf	??___fldiv+3
  4779  1635  1003               	clrc
  4780  1636  0D35               	rlf	??___fldiv+2,w
  4781  1637  0D36               	rlf	??___fldiv+3,w
  4782  1638  00BC               	movwf	___fldiv@exp
  4783  1639  083C               	movf	___fldiv@exp,w
  4784  163A  1D03               	btfss	3,2
  4785  163B  2E41               	goto	l4004
  4786  163C  01AB               	clrf	?___fldiv
  4787  163D  01AC               	clrf	?___fldiv+1
  4788  163E  01AD               	clrf	?___fldiv+2
  4789  163F  01AE               	clrf	?___fldiv+3
  4790  1640  0008               	return
  4791  1641                     l4004:	
  4792  1641  082B               	movf	___fldiv@f2,w
  4793  1642  00B3               	movwf	??___fldiv
  4794  1643  082C               	movf	___fldiv@f2+1,w
  4795  1644  00B4               	movwf	??___fldiv+1
  4796  1645  082D               	movf	___fldiv@f2+2,w
  4797  1646  00B5               	movwf	??___fldiv+2
  4798  1647  082E               	movf	___fldiv@f2+3,w
  4799  1648  00B6               	movwf	??___fldiv+3
  4800  1649  1003               	clrc
  4801  164A  0D35               	rlf	??___fldiv+2,w
  4802  164B  0D36               	rlf	??___fldiv+3,w
  4803  164C  00BD               	movwf	___fldiv@sign
  4804  164D  083D               	movf	___fldiv@sign,w
  4805  164E  1D03               	btfss	3,2
  4806  164F  2E55               	goto	l4008
  4807  1650  01AB               	clrf	?___fldiv
  4808  1651  01AC               	clrf	?___fldiv+1
  4809  1652  01AD               	clrf	?___fldiv+2
  4810  1653  01AE               	clrf	?___fldiv+3
  4811  1654  0008               	return
  4812  1655                     l4008:	
  4813  1655  3089               	movlw	137
  4814  1656  073D               	addwf	___fldiv@sign,w
  4815  1657  00B3               	movwf	??___fldiv
  4816  1658  02BC               	subwf	___fldiv@exp,f
  4817  1659  0832               	movf	___fldiv@f1+3,w
  4818  165A  00BD               	movwf	___fldiv@sign
  4819  165B  082E               	movf	___fldiv@f2+3,w
  4820  165C  06BD               	xorwf	___fldiv@sign,f
  4821  165D  3080               	movlw	128
  4822  165E  05BD               	andwf	___fldiv@sign,f
  4823  165F  3020               	movlw	32
  4824  1660  17B1               	bsf	___fldiv@f1+2,7
  4825  1661  01B2               	clrf	___fldiv@f1+3
  4826  1662  17AD               	bsf	___fldiv@f2+2,7
  4827  1663  01AE               	clrf	___fldiv@f2+3
  4828  1664  00BB               	movwf	___fldiv@cntr
  4829  1665                     l4026:	
  4830  1665  1003               	clrc
  4831  1666  0DB7               	rlf	___fldiv@f3,f
  4832  1667  0DB8               	rlf	___fldiv@f3+1,f
  4833  1668  0DB9               	rlf	___fldiv@f3+2,f
  4834  1669  0DBA               	rlf	___fldiv@f3+3,f
  4835  166A  082E               	movf	___fldiv@f2+3,w
  4836  166B  0232               	subwf	___fldiv@f1+3,w
  4837  166C  1D03               	skipz
  4838  166D  2E78               	goto	u3625
  4839  166E  082D               	movf	___fldiv@f2+2,w
  4840  166F  0231               	subwf	___fldiv@f1+2,w
  4841  1670  1D03               	skipz
  4842  1671  2E78               	goto	u3625
  4843  1672  082C               	movf	___fldiv@f2+1,w
  4844  1673  0230               	subwf	___fldiv@f1+1,w
  4845  1674  1D03               	skipz
  4846  1675  2E78               	goto	u3625
  4847  1676  082B               	movf	___fldiv@f2,w
  4848  1677  022F               	subwf	___fldiv@f1,w
  4849  1678                     u3625:	
  4850  1678  1C03               	skipc
  4851  1679  2E8A               	goto	L9
  4852  167A  082B               	movf	___fldiv@f2,w
  4853  167B  02AF               	subwf	___fldiv@f1,f
  4854  167C  082C               	movf	___fldiv@f2+1,w
  4855  167D  1C03               	skipc
  4856  167E  0F2C               	incfsz	___fldiv@f2+1,w
  4857  167F  02B0               	subwf	___fldiv@f1+1,f
  4858  1680  082D               	movf	___fldiv@f2+2,w
  4859  1681  1C03               	skipc
  4860  1682  0F2D               	incfsz	___fldiv@f2+2,w
  4861  1683  02B1               	subwf	___fldiv@f1+2,f
  4862  1684  082E               	movf	___fldiv@f2+3,w
  4863  1685  1C03               	skipc
  4864  1686  0F2E               	incfsz	___fldiv@f2+3,w
  4865  1687  02B2               	subwf	___fldiv@f1+3,f
  4866  1688  1437               	bsf	___fldiv@f3,0
  4867  1689  1003               	clrc
  4868  168A                     L9:	
  4869  168A  0DAF               	rlf	___fldiv@f1,f
  4870  168B  0DB0               	rlf	___fldiv@f1+1,f
  4871  168C  0DB1               	rlf	___fldiv@f1+2,f
  4872  168D  0DB2               	rlf	___fldiv@f1+3,f
  4873  168E  0BBB               	decfsz	___fldiv@cntr,f
  4874  168F  2E65               	goto	l4026
  4875  1690  083A               	movf	___fldiv@f3+3,w
  4876  1691  00A4               	movwf	___flpack@arg+3
  4877  1692  0839               	movf	___fldiv@f3+2,w
  4878  1693  00A3               	movwf	___flpack@arg+2
  4879  1694  0838               	movf	___fldiv@f3+1,w
  4880  1695  00A2               	movwf	___flpack@arg+1
  4881  1696  0837               	movf	___fldiv@f3,w
  4882  1697  00A1               	movwf	___flpack@arg
  4883  1698  083C               	movf	___fldiv@exp,w
  4884  1699  00A5               	movwf	___flpack@exp
  4885  169A  083D               	movf	___fldiv@sign,w
  4886  169B  00A6               	movwf	___flpack@sign
  4887  169C  279E               	fcall	___flpack
  4888  169D  0824               	movf	?___flpack+3,w
  4889  169E  00AE               	movwf	?___fldiv+3
  4890  169F  0823               	movf	?___flpack+2,w
  4891  16A0  00AD               	movwf	?___fldiv+2
  4892  16A1  0822               	movf	?___flpack+1,w
  4893  16A2  00AC               	movwf	?___fldiv+1
  4894  16A3  0821               	movf	?___flpack,w
  4895  16A4  00AB               	movwf	?___fldiv
  4896  16A5  0008               	return
  4897  16A6                     __end_of___fldiv:	
  4898  16A6                     __ptext17:	
  4899 ;; *************** function ___fltol *****************
  4900 ;; Defined at:
  4901 ;;		line 43 in file "/opt/microchip/xc8/v1.34/sources/common/fltol.c"
  4902 ;; Parameters:    Size  Location     Type
  4903 ;;  f1              4   18[BANK1 ] int 
  4904 ;; Auto vars:     Size  Location     Type
  4905 ;;  exp1            1   27[BANK1 ] unsigned char 
  4906 ;;  sign1           1   26[BANK1 ] unsigned char 
  4907 ;; Return value:  Size  Location     Type
  4908 ;;                  4   18[BANK1 ] long 
  4909 ;; Registers used:
  4910 ;;		wreg, status,2, status,0
  4911 ;; Tracked objects:
  4912 ;;		On entry : 300/100
  4913 ;;		On exit  : 300/100
  4914 ;;		Unchanged: 0/0
  4915 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4916 ;;      Params:         0       0       4       0       0
  4917 ;;      Locals:         0       0       2       0       0
  4918 ;;      Temps:          0       0       4       0       0
  4919 ;;      Totals:         0       0      10       0       0
  4920 ;;Total ram usage:       10 bytes
  4921 ;; Hardware stack levels used:    1
  4922 ;; Hardware stack levels required when called:    1
  4923 ;; This function calls:
  4924 ;;		Nothing
  4925 ;; This function is called by:
  4926 ;;		_format_double
  4927 ;;		_measure_capacitance
  4928 ;;		_measure_inductance
  4929 ;;		_floor
  4930 ;;		_pow
  4931 ;;		_exp
  4932 ;; This function uses a non-reentrant model
  4933 ;;
  4934                           
  4935                           
  4936                           ;psect for function ___fltol
  4937  16A6                     ___fltol:	
  4938                           
  4939                           ;incstack = 0
  4940                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  4941  16A6  0832               	movf	___fltol@f1^(0+128),w
  4942  16A7  00B6               	movwf	??___fltol^(0+128)
  4943  16A8  0833               	movf	(___fltol@f1+1)^(0+128),w
  4944  16A9  00B7               	movwf	(??___fltol^(0+128)+1)
  4945  16AA  0834               	movf	(___fltol@f1+2)^(0+128),w
  4946  16AB  00B8               	movwf	(??___fltol^(0+128)+2)
  4947  16AC  0835               	movf	(___fltol@f1+3)^(0+128),w
  4948  16AD  00B9               	movwf	(??___fltol^(0+128)+3)
  4949  16AE  1003               	clrc
  4950  16AF  0D38               	rlf	(??___fltol^(0+128)+2),w
  4951  16B0  0D39               	rlf	(??___fltol^(0+128)+3),w
  4952  16B1  00BB               	movwf	___fltol@exp1^(0+128)
  4953  16B2  083B               	movf	___fltol@exp1^(0+128),w
  4954  16B3  1D03               	btfss	3,2
  4955  16B4  2EBA               	goto	l3916
  4956  16B5                     l3914:	
  4957  16B5  01B2               	clrf	?___fltol^(0+128)
  4958  16B6  01B3               	clrf	(?___fltol+1)^(0+128)
  4959  16B7  01B4               	clrf	(?___fltol+2)^(0+128)
  4960  16B8  01B5               	clrf	(?___fltol+3)^(0+128)
  4961  16B9  0008               	return
  4962  16BA                     l3916:	
  4963  16BA  0832               	movf	___fltol@f1^(0+128),w
  4964  16BB  00B6               	movwf	??___fltol^(0+128)
  4965  16BC  0833               	movf	(___fltol@f1+1)^(0+128),w
  4966  16BD  00B7               	movwf	(??___fltol^(0+128)+1)
  4967  16BE  0834               	movf	(___fltol@f1+2)^(0+128),w
  4968  16BF  00B8               	movwf	(??___fltol^(0+128)+2)
  4969  16C0  0835               	movf	(___fltol@f1+3)^(0+128),w
  4970  16C1  00B9               	movwf	(??___fltol^(0+128)+3)
  4971  16C2  301F               	movlw	31
  4972  16C3                     u3465:	
  4973  16C3  1003               	clrc
  4974  16C4  0CB9               	rrf	(??___fltol^(0+128)+3),f
  4975  16C5  0CB8               	rrf	(??___fltol^(0+128)+2),f
  4976  16C6  0CB7               	rrf	(??___fltol^(0+128)+1),f
  4977  16C7  0CB6               	rrf	??___fltol^(0+128),f
  4978  16C8  3EFF               	addlw	-1
  4979  16C9  1D03               	skipz
  4980  16CA  2EC3               	goto	u3465
  4981  16CB  0836               	movf	??___fltol^(0+128),w
  4982  16CC  00BA               	movwf	___fltol@sign1^(0+128)
  4983  16CD  3096               	movlw	150
  4984  16CE  17B4               	bsf	(___fltol@f1^(0+128)+2),7
  4985  16CF  01B5               	clrf	(___fltol@f1+3)^(0+128)
  4986  16D0  02BB               	subwf	___fltol@exp1^(0+128),f
  4987  16D1  1FBB               	btfss	___fltol@exp1^(0+128),7
  4988  16D2  2EE0               	goto	l3934
  4989  16D3  083B               	movf	___fltol@exp1^(0+128),w
  4990  16D4  3A80               	xorlw	128
  4991  16D5  3E97               	addlw	151
  4992  16D6  1C03               	btfss	3,0
  4993  16D7  2EB5               	goto	l3914
  4994  16D8                     l3930:	
  4995  16D8  1003               	clrc
  4996  16D9  0CB5               	rrf	(___fltol@f1+3)^(0+128),f
  4997  16DA  0CB4               	rrf	(___fltol@f1+2)^(0+128),f
  4998  16DB  0CB3               	rrf	(___fltol@f1+1)^(0+128),f
  4999  16DC  0CB2               	rrf	___fltol@f1^(0+128),f
  5000  16DD  0FBB               	incfsz	___fltol@exp1^(0+128),f
  5001  16DE  2ED8               	goto	l3930
  5002  16DF  2EEE               	goto	l3942
  5003  16E0                     l3934:	
  5004  16E0  3020               	movlw	32
  5005  16E1  023B               	subwf	___fltol@exp1^(0+128),w
  5006  16E2  1803               	btfsc	3,0
  5007  16E3  2EB5               	goto	l3914
  5008  16E4                     l3940:	
  5009  16E4  083B               	movf	___fltol@exp1^(0+128),w
  5010  16E5  1903               	btfsc	3,2
  5011  16E6  2EEE               	goto	l3942
  5012  16E7  1003               	clrc
  5013  16E8  0DB2               	rlf	___fltol@f1^(0+128),f
  5014  16E9  0DB3               	rlf	(___fltol@f1+1)^(0+128),f
  5015  16EA  0DB4               	rlf	(___fltol@f1+2)^(0+128),f
  5016  16EB  0DB5               	rlf	(___fltol@f1+3)^(0+128),f
  5017  16EC  03BB               	decf	___fltol@exp1^(0+128),f
  5018  16ED  2EE4               	goto	l3940
  5019  16EE                     l3942:	
  5020  16EE  083A               	movf	___fltol@sign1^(0+128),w
  5021  16EF  1903               	btfsc	3,2
  5022  16F0  0008               	return
  5023  16F1  09B2               	comf	___fltol@f1^(0+128),f
  5024  16F2  09B3               	comf	(___fltol@f1+1)^(0+128),f
  5025  16F3  09B4               	comf	(___fltol@f1+2)^(0+128),f
  5026  16F4  09B5               	comf	(___fltol@f1+3)^(0+128),f
  5027  16F5  0AB2               	incf	___fltol@f1^(0+128),f
  5028  16F6  1903               	skipnz
  5029  16F7  0AB3               	incf	(___fltol@f1+1)^(0+128),f
  5030  16F8  1903               	skipnz
  5031  16F9  0AB4               	incf	(___fltol@f1+2)^(0+128),f
  5032  16FA  1903               	skipnz
  5033  16FB  0AB5               	incf	(___fltol@f1+3)^(0+128),f
  5034  16FC  0008               	return
  5035  16FD                     __end_of___fltol:	
  5036  16FD                     __ptext29:	
  5037 ;; *************** function ___awtofl *****************
  5038 ;; Defined at:
  5039 ;;		line 31 in file "/opt/microchip/xc8/v1.34/sources/common/awtofl.c"
  5040 ;; Parameters:    Size  Location     Type
  5041 ;;  c               2   10[BANK0 ] int 
  5042 ;; Auto vars:     Size  Location     Type
  5043 ;;  f1              4    0        int 
  5044 ;;  sign            1    4[COMMON] unsigned char 
  5045 ;; Return value:  Size  Location     Type
  5046 ;;                  4   10[BANK0 ] unsigned char 
  5047 ;; Registers used:
  5048 ;;		wreg, status,2, status,0, pclath, cstack
  5049 ;; Tracked objects:
  5050 ;;		On entry : 300/0
  5051 ;;		On exit  : 300/0
  5052 ;;		Unchanged: 0/0
  5053 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5054 ;;      Params:         0       4       0       0       0
  5055 ;;      Locals:         1       0       0       0       0
  5056 ;;      Temps:          0       0       0       0       0
  5057 ;;      Totals:         1       4       0       0       0
  5058 ;;Total ram usage:        5 bytes
  5059 ;; Hardware stack levels used:    1
  5060 ;; Hardware stack levels required when called:    2
  5061 ;; This function calls:
  5062 ;;		___flpack
  5063 ;; This function is called by:
  5064 ;;		_format_double
  5065 ;;		_log
  5066 ;;		_exp
  5067 ;; This function uses a non-reentrant model
  5068 ;;
  5069                           
  5070                           
  5071                           ;psect for function ___awtofl
  5072  16FD                     ___awtofl:	
  5073                           
  5074                           ;incstack = 0
  5075                           ; Regs used in ___awtofl: [wreg+status,2+status,0+pclath+cstack]
  5076  16FD  01F4               	clrf	___awtofl@sign
  5077  16FE  1FAC               	btfss	___awtofl@c+1,7
  5078  16FF  2F06               	goto	l3996
  5079  1700  09AB               	comf	___awtofl@c,f
  5080  1701  09AC               	comf	___awtofl@c+1,f
  5081  1702  0AAB               	incf	___awtofl@c,f
  5082  1703  1903               	skipnz
  5083  1704  0AAC               	incf	___awtofl@c+1,f
  5084  1705  0AF4               	incf	___awtofl@sign,f
  5085  1706                     l3996:	
  5086  1706  082B               	movf	___awtofl@c,w
  5087  1707  00A1               	movwf	___flpack@arg
  5088  1708  082C               	movf	___awtofl@c+1,w
  5089  1709  00A2               	movwf	___flpack@arg+1
  5090  170A  3096               	movlw	150
  5091  170B  01A3               	clrf	___flpack@arg+2
  5092  170C  01A4               	clrf	___flpack@arg+3
  5093  170D  00A5               	movwf	___flpack@exp
  5094  170E  0874               	movf	___awtofl@sign,w
  5095  170F  00A6               	movwf	___flpack@sign
  5096  1710  279E               	fcall	___flpack
  5097  1711  0824               	movf	?___flpack+3,w
  5098  1712  00AE               	movwf	?___awtofl+3
  5099  1713  0823               	movf	?___flpack+2,w
  5100  1714  00AD               	movwf	?___awtofl+2
  5101  1715  0822               	movf	?___flpack+1,w
  5102  1716  00AC               	movwf	?___awtofl+1
  5103  1717  0821               	movf	?___flpack,w
  5104  1718  00AB               	movwf	?___awtofl
  5105  1719  0008               	return
  5106  171A                     __end_of___awtofl:	
  5107  171A                     __ptext19:	
  5108 ;; *************** function ___flsub *****************
  5109 ;; Defined at:
  5110 ;;		line 18 in file "/opt/microchip/xc8/v1.34/sources/common/flsub.c"
  5111 ;; Parameters:    Size  Location     Type
  5112 ;;  f2              4   63[BANK0 ] unsigned char 
  5113 ;;  f1              4   67[BANK0 ] unsigned char 
  5114 ;; Auto vars:     Size  Location     Type
  5115 ;;		None
  5116 ;; Return value:  Size  Location     Type
  5117 ;;                  4   63[BANK0 ] unsigned char 
  5118 ;; Registers used:
  5119 ;;		wreg, status,2, status,0, pclath, cstack
  5120 ;; Tracked objects:
  5121 ;;		On entry : 300/0
  5122 ;;		On exit  : 300/0
  5123 ;;		Unchanged: 0/0
  5124 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5125 ;;      Params:         0       8       0       0       0
  5126 ;;      Locals:         0       0       0       0       0
  5127 ;;      Temps:          0       0       0       0       0
  5128 ;;      Totals:         0       8       0       0       0
  5129 ;;Total ram usage:        8 bytes
  5130 ;; Hardware stack levels used:    1
  5131 ;; Hardware stack levels required when called:    3
  5132 ;; This function calls:
  5133 ;;		___fladd
  5134 ;; This function is called by:
  5135 ;;		_format_double
  5136 ;;		_measure_capacitance
  5137 ;;		_measure_inductance
  5138 ;;		_exp
  5139 ;; This function uses a non-reentrant model
  5140 ;;
  5141                           
  5142                           
  5143                           ;psect for function ___flsub
  5144  171A                     ___flsub:	
  5145                           
  5146                           ;incstack = 0
  5147                           ; Regs used in ___flsub: [wreg+status,2+status,0+pclath+cstack]
  5148  171A  0863               	movf	___flsub@f2+3,w
  5149  171B  0462               	iorwf	___flsub@f2+2,w
  5150  171C  0461               	iorwf	___flsub@f2+1,w
  5151  171D  0460               	iorwf	___flsub@f2,w
  5152  171E  1903               	skipnz
  5153  171F  2F22               	goto	l4044
  5154  1720  3080               	movlw	128
  5155  1721  06E3               	xorwf	___flsub@f2+3,f
  5156  1722                     l4044:	
  5157  1722  0863               	movf	___flsub@f2+3,w
  5158  1723  00D4               	movwf	___fladd@f1+3
  5159  1724  0862               	movf	___flsub@f2+2,w
  5160  1725  00D3               	movwf	___fladd@f1+2
  5161  1726  0861               	movf	___flsub@f2+1,w
  5162  1727  00D2               	movwf	___fladd@f1+1
  5163  1728  0860               	movf	___flsub@f2,w
  5164  1729  00D1               	movwf	___fladd@f1
  5165  172A  0867               	movf	___flsub@f1+3,w
  5166  172B  00D8               	movwf	___fladd@f2+3
  5167  172C  0866               	movf	___flsub@f1+2,w
  5168  172D  00D7               	movwf	___fladd@f2+2
  5169  172E  0865               	movf	___flsub@f1+1,w
  5170  172F  00D6               	movwf	___fladd@f2+1
  5171  1730  0864               	movf	___flsub@f1,w
  5172  1731  00D5               	movwf	___fladd@f2
  5173  1732  120A  158A  20C5   	fcall	___fladd
  5174  1735  0854               	movf	?___fladd+3,w
  5175  1736  00E3               	movwf	?___flsub+3
  5176  1737  0853               	movf	?___fladd+2,w
  5177  1738  00E2               	movwf	?___flsub+2
  5178  1739  0852               	movf	?___fladd+1,w
  5179  173A  00E1               	movwf	?___flsub+1
  5180  173B  0851               	movf	?___fladd,w
  5181  173C  00E0               	movwf	?___flsub
  5182  173D  0008               	return
  5183  173E                     __end_of___flsub:	
  5184  173E                     __ptext41:	
  5185 ;; *************** function _format_number *****************
  5186 ;; Defined at:
  5187 ;;		line 15 in file "../../../lib/format.c"
  5188 ;; Parameters:    Size  Location     Type
  5189 ;;  n               2    7[BANK0 ] unsigned int 
  5190 ;;  base            1    9[BANK0 ] unsigned char 
  5191 ;;  pad             1   10[BANK0 ] char 
  5192 ;; Auto vars:     Size  Location     Type
  5193 ;;  buf            32   11[BANK0 ] unsigned char [32]
  5194 ;;  i               1   47[BANK0 ] char 
  5195 ;;  di              1   46[BANK0 ] unsigned char 
  5196 ;;  padchar         1   43[BANK0 ] unsigned char 
  5197 ;; Return value:  Size  Location     Type
  5198 ;;		None               void
  5199 ;; Registers used:
  5200 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5201 ;; Tracked objects:
  5202 ;;		On entry : 300/0
  5203 ;;		On exit  : 300/0
  5204 ;;		Unchanged: 0/0
  5205 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5206 ;;      Params:         0       4       0       0       0
  5207 ;;      Locals:         0      37       0       0       0
  5208 ;;      Temps:          1       0       0       0       0
  5209 ;;      Totals:         1      41       0       0       0
  5210 ;;Total ram usage:       42 bytes
  5211 ;; Hardware stack levels used:    1
  5212 ;; Hardware stack levels required when called:    2
  5213 ;; This function calls:
  5214 ;;		___lwdiv
  5215 ;;		___lwmod
  5216 ;;		_buffer_putch
  5217 ;; This function is called by:
  5218 ;;		_print_reading
  5219 ;;		_format_xint32
  5220 ;;		_measure_freq
  5221 ;; This function uses a non-reentrant model
  5222 ;;
  5223                           
  5224                           
  5225                           ;psect for function _format_number
  5226  173E                     _format_number:	
  5227  173E                     l4252:	
  5228                           ;incstack = 0
  5229                           ; Regs used in _format_number: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5230                           
  5231  173E  3020               	movlw	32
  5232                           
  5233                           ;format.c: 16: char buf[8 * sizeof(long)];
  5234                           ;format.c: 17: uint8_t di;
  5235                           ;format.c: 18: int8_t i = 0;
  5236  173F  01D0               	clrf	format_number@i
  5237                           
  5238                           ;format.c: 19: char padchar = ' ';
  5239  1740  00CC               	movwf	format_number@padchar
  5240                           
  5241                           ;format.c: 21: if(pad < 0) {
  5242  1741  1FAB               	btfss	format_number@pad,7
  5243  1742  2F47               	goto	l4262
  5244  1743  3030               	movlw	48
  5245                           
  5246                           ;format.c: 22: pad = -pad;
  5247  1744  09AB               	comf	format_number@pad,f
  5248  1745  0AAB               	incf	format_number@pad,f
  5249                           
  5250                           ;format.c: 23: padchar = '0';
  5251  1746  00CC               	movwf	format_number@padchar
  5252  1747                     l4262:	
  5253                           
  5254                           ;format.c: 35: di = n % base;
  5255  1747  082A               	movf	format_number@base,w
  5256  1748  00A1               	movwf	___lwmod@divisor
  5257  1749  01A2               	clrf	___lwmod@divisor+1
  5258  174A  0829               	movf	format_number@n+1,w
  5259  174B  00A4               	movwf	___lwmod@dividend+1
  5260  174C  0828               	movf	format_number@n,w
  5261  174D  00A3               	movwf	___lwmod@dividend
  5262  174E  160A  158A  2687  160A  118A  	fcall	___lwmod
  5263  1753  0821               	movf	?___lwmod,w
  5264  1754  00CF               	movwf	format_number@di
  5265                           
  5266                           ;format.c: 36: buf[i++] = (di < 10 ? (uint8_t)'0' + di : (uint8_t)'A' + di - 10);
  5267  1755  300A               	movlw	10
  5268  1756  024F               	subwf	format_number@di,w
  5269  1757  084F               	movf	format_number@di,w
  5270  1758  00CD               	movwf	_format_number$158
  5271  1759  1C03               	skipc
  5272  175A  2F5D               	goto	L15
  5273  175B  3037               	movlw	55
  5274  175C  2F5E               	goto	L14
  5275  175D                     L15:	
  5276  175D  3030               	movlw	48
  5277  175E                     L14:	
  5278  175E  01CE               	clrf	_format_number$158+1
  5279  175F  07CD               	addwf	_format_number$158,f
  5280  1760  1803               	skipnc
  5281  1761  0ACE               	incf	_format_number$158+1,f
  5282  1762  0850               	movf	format_number@i,w
  5283  1763  3E2C               	addlw	(low (format_number@buf| 0))& (0+255)
  5284  1764  0084               	movwf	4
  5285  1765  084D               	movf	_format_number$158,w
  5286  1766  1383               	bcf	3,7	;select IRP bank0
  5287  1767  0080               	movwf	0
  5288  1768  0AD0               	incf	format_number@i,f
  5289                           
  5290                           ;format.c: 38: n /= base;
  5291  1769  082A               	movf	format_number@base,w
  5292  176A  00A1               	movwf	___lwdiv@divisor
  5293  176B  01A2               	clrf	___lwdiv@divisor+1
  5294  176C  0829               	movf	format_number@n+1,w
  5295  176D  00A4               	movwf	___lwdiv@dividend+1
  5296  176E  0828               	movf	format_number@n,w
  5297  176F  00A3               	movwf	___lwdiv@dividend
  5298  1770  160A  158A  2636  160A  118A  	fcall	___lwdiv
  5299  1775  0822               	movf	?___lwdiv+1,w
  5300  1776  00A9               	movwf	format_number@n+1
  5301  1777  0821               	movf	?___lwdiv,w
  5302  1778  00A8               	movwf	format_number@n
  5303                           
  5304                           ;format.c: 39: } while(n > 0);
  5305  1779  0429               	iorwf	format_number@n+1,w
  5306  177A  1903               	btfsc	3,2
  5307  177B  2F81               	goto	l4280
  5308  177C  2F47               	goto	l4262
  5309  177D                     l4278:	
  5310  177D  084C               	movf	format_number@padchar,w
  5311  177E  25F9  160A  118A   	fcall	_buffer_putch
  5312  1781                     l4280:	
  5313  1781  1283               	bcf	3,5	;RP0=0, select bank0
  5314  1782  1303               	bcf	3,6	;RP1=0, select bank0
  5315  1783  0850               	movf	format_number@i,w
  5316  1784  3A80               	xorlw	128
  5317  1785  00F5               	movwf	??_format_number
  5318  1786  082B               	movf	format_number@pad,w
  5319  1787  03AB               	decf	format_number@pad,f
  5320  1788  3A80               	xorlw	128
  5321  1789  02F5               	subwf	??_format_number,f
  5322  178A  1C03               	skipc
  5323  178B  2F7D               	goto	l4278
  5324  178C                     l4282:	
  5325                           
  5326                           ;format.c: 43: for(; i > 0; i--) {
  5327  178C  0850               	movf	format_number@i,w
  5328  178D  3A80               	xorlw	128
  5329  178E  3E7F               	addlw	-129
  5330  178F  1C03               	btfss	3,0
  5331  1790  0008               	return
  5332                           
  5333                           ;format.c: 44: buffer_putch((char)buf[(int16_t)i - 1]);
  5334  1791  0850               	movf	format_number@i,w
  5335  1792  3EFF               	addlw	255
  5336  1793  3E2C               	addlw	(low (format_number@buf| 0))& (0+255)
  5337  1794  0084               	movwf	4
  5338  1795  1383               	bcf	3,7	;select IRP bank0
  5339  1796  0800               	movf	0,w
  5340  1797  25F9  160A  118A   	fcall	_buffer_putch
  5341  179A  1283               	bcf	3,5	;RP0=0, select bank0
  5342  179B  1303               	bcf	3,6	;RP1=0, select bank0
  5343  179C  03D0               	decf	format_number@i,f
  5344  179D  2F8C               	goto	l4282
  5345  179E                     __end_of_format_number:	
  5346  179E                     __ptext53:	
  5347 ;; *************** function ___flpack *****************
  5348 ;; Defined at:
  5349 ;;		line 63 in file "/opt/microchip/xc8/v1.34/sources/common/double.c"
  5350 ;; Parameters:    Size  Location     Type
  5351 ;;  arg             4    0[BANK0 ] unsigned long 
  5352 ;;  exp             1    4[BANK0 ] unsigned char 
  5353 ;;  sign            1    5[BANK0 ] unsigned char 
  5354 ;; Auto vars:     Size  Location     Type
  5355 ;;		None
  5356 ;; Return value:  Size  Location     Type
  5357 ;;                  4    0[BANK0 ] unsigned char 
  5358 ;; Registers used:
  5359 ;;		wreg, status,2, status,0
  5360 ;; Tracked objects:
  5361 ;;		On entry : 300/0
  5362 ;;		On exit  : 300/0
  5363 ;;		Unchanged: 0/0
  5364 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5365 ;;      Params:         0       6       0       0       0
  5366 ;;      Locals:         0       0       0       0       0
  5367 ;;      Temps:          0       4       0       0       0
  5368 ;;      Totals:         0      10       0       0       0
  5369 ;;Total ram usage:       10 bytes
  5370 ;; Hardware stack levels used:    1
  5371 ;; Hardware stack levels required when called:    1
  5372 ;; This function calls:
  5373 ;;		Nothing
  5374 ;; This function is called by:
  5375 ;;		___altofl
  5376 ;;		___awtofl
  5377 ;;		___fladd
  5378 ;;		___fldiv
  5379 ;;		___flmul
  5380 ;;		___lltofl
  5381 ;;		___lwtofl
  5382 ;; This function uses a non-reentrant model
  5383 ;;
  5384                           
  5385                           
  5386                           ;psect for function ___flpack
  5387  179E                     ___flpack:	
  5388                           
  5389                           ;incstack = 0
  5390                           ; Regs used in ___flpack: [wreg+status,2+status,0]
  5391  179E  0825               	movf	___flpack@exp,w
  5392  179F  1903               	btfsc	3,2
  5393  17A0  2FA7               	goto	l808
  5394  17A1  0824               	movf	___flpack@arg+3,w
  5395  17A2  0423               	iorwf	___flpack@arg+2,w
  5396  17A3  0422               	iorwf	___flpack@arg+1,w
  5397  17A4  0421               	iorwf	___flpack@arg,w
  5398  17A5  1D03               	skipz
  5399  17A6  2FB2               	goto	l3702
  5400  17A7                     l808:	
  5401  17A7  01A1               	clrf	?___flpack
  5402  17A8  01A2               	clrf	?___flpack+1
  5403  17A9  01A3               	clrf	?___flpack+2
  5404  17AA  01A4               	clrf	?___flpack+3
  5405  17AB  0008               	return
  5406  17AC                     l3700:	
  5407  17AC  0AA5               	incf	___flpack@exp,f
  5408  17AD  1003               	clrc
  5409  17AE  0CA4               	rrf	___flpack@arg+3,f
  5410  17AF  0CA3               	rrf	___flpack@arg+2,f
  5411  17B0  0CA2               	rrf	___flpack@arg+1,f
  5412  17B1  0CA1               	rrf	___flpack@arg,f
  5413  17B2                     l3702:	
  5414  17B2  30FE               	movlw	254
  5415  17B3  0524               	andwf	___flpack@arg+3,w
  5416  17B4  1903               	btfsc	3,2
  5417  17B5  2FC4               	goto	l3706
  5418  17B6  2FAC               	goto	l3700
  5419  17B7                     l3704:	
  5420  17B7  0AA5               	incf	___flpack@exp,f
  5421  17B8  0AA1               	incf	___flpack@arg,f
  5422  17B9  1903               	skipnz
  5423  17BA  0AA2               	incf	___flpack@arg+1,f
  5424  17BB  1903               	skipnz
  5425  17BC  0AA3               	incf	___flpack@arg+2,f
  5426  17BD  1903               	skipnz
  5427  17BE  0AA4               	incf	___flpack@arg+3,f
  5428  17BF  1003               	clrc
  5429  17C0  0CA4               	rrf	___flpack@arg+3,f
  5430  17C1  0CA3               	rrf	___flpack@arg+2,f
  5431  17C2  0CA2               	rrf	___flpack@arg+1,f
  5432  17C3  0CA1               	rrf	___flpack@arg,f
  5433  17C4                     l3706:	
  5434  17C4  30FF               	movlw	255
  5435  17C5  0524               	andwf	___flpack@arg+3,w
  5436  17C6  1903               	btfsc	3,2
  5437  17C7  2FD3               	goto	l3710
  5438  17C8  2FB7               	goto	l3704
  5439  17C9                     l3712:	
  5440  17C9  3002               	movlw	2
  5441  17CA  0225               	subwf	___flpack@exp,w
  5442  17CB  1C03               	btfss	3,0
  5443  17CC  2FD5               	goto	l820
  5444  17CD  03A5               	decf	___flpack@exp,f
  5445  17CE  1003               	clrc
  5446  17CF  0DA1               	rlf	___flpack@arg,f
  5447  17D0  0DA2               	rlf	___flpack@arg+1,f
  5448  17D1  0DA3               	rlf	___flpack@arg+2,f
  5449  17D2  0DA4               	rlf	___flpack@arg+3,f
  5450  17D3                     l3710:	
  5451  17D3  1FA3               	btfss	___flpack@arg+2,7
  5452  17D4  2FC9               	goto	l3712
  5453  17D5                     l820:	
  5454  17D5  1825               	btfsc	___flpack@exp,0
  5455  17D6  2FDA               	goto	l3716
  5456  17D7  307F               	movlw	127
  5457  17D8  05A3               	andwf	___flpack@arg+2,f
  5458  17D9  30FF               	movlw	255
  5459  17DA                     l3716:	
  5460  17DA  1003               	clrc
  5461  17DB  0CA5               	rrf	___flpack@exp,f
  5462  17DC  0825               	movf	___flpack@exp,w
  5463  17DD  00AA               	movwf	??___flpack+3
  5464  17DE  01A9               	clrf	??___flpack+2
  5465  17DF  01A8               	clrf	??___flpack+1
  5466  17E0  01A7               	clrf	??___flpack
  5467  17E1  0827               	movf	??___flpack,w
  5468  17E2  04A1               	iorwf	___flpack@arg,f
  5469  17E3  0828               	movf	??___flpack+1,w
  5470  17E4  04A2               	iorwf	___flpack@arg+1,f
  5471  17E5  0829               	movf	??___flpack+2,w
  5472  17E6  04A3               	iorwf	___flpack@arg+2,f
  5473  17E7  082A               	movf	??___flpack+3,w
  5474  17E8  04A4               	iorwf	___flpack@arg+3,f
  5475  17E9  0826               	movf	___flpack@sign,w
  5476  17EA  1D03               	btfss	3,2
  5477  17EB  17A4               	bsf	___flpack@arg+3,7
  5478  17EC  0008               	return
  5479  17ED                     __end_of___flpack:	
  5480  17ED                     __ptext52:	
  5481 ;; *************** function ___lwtofl *****************
  5482 ;; Defined at:
  5483 ;;		line 28 in file "/opt/microchip/xc8/v1.34/sources/common/lwtofl.c"
  5484 ;; Parameters:    Size  Location     Type
  5485 ;;  c               2   54[BANK0 ] unsigned int 
  5486 ;; Auto vars:     Size  Location     Type
  5487 ;;		None
  5488 ;; Return value:  Size  Location     Type
  5489 ;;                  4   54[BANK0 ] unsigned int 
  5490 ;; Registers used:
  5491 ;;		wreg, status,2, status,0, pclath, cstack
  5492 ;; Tracked objects:
  5493 ;;		On entry : 300/0
  5494 ;;		On exit  : 300/0
  5495 ;;		Unchanged: 0/0
  5496 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5497 ;;      Params:         0       4       0       0       0
  5498 ;;      Locals:         0       0       0       0       0
  5499 ;;      Temps:          0       0       0       0       0
  5500 ;;      Totals:         0       4       0       0       0
  5501 ;;Total ram usage:        4 bytes
  5502 ;; Hardware stack levels used:    1
  5503 ;; Hardware stack levels required when called:    2
  5504 ;; This function calls:
  5505 ;;		___flpack
  5506 ;; This function is called by:
  5507 ;;		_calibrate
  5508 ;;		_measure_capacitance
  5509 ;;		_measure_inductance
  5510 ;; This function uses a non-reentrant model
  5511 ;;
  5512                           
  5513                           
  5514                           ;psect for function ___lwtofl
  5515  17ED                     ___lwtofl:	
  5516                           
  5517                           ;incstack = 0
  5518                           ; Regs used in ___lwtofl: [wreg+status,2+status,0+pclath+cstack]
  5519  17ED  0857               	movf	___lwtofl@c,w
  5520  17EE  00A1               	movwf	___flpack@arg
  5521  17EF  0858               	movf	___lwtofl@c+1,w
  5522  17F0  00A2               	movwf	___flpack@arg+1
  5523  17F1  3096               	movlw	150
  5524  17F2  01A3               	clrf	___flpack@arg+2
  5525  17F3  01A4               	clrf	___flpack@arg+3
  5526  17F4  00A5               	movwf	___flpack@exp
  5527  17F5  01A6               	clrf	___flpack@sign
  5528  17F6  279E               	fcall	___flpack
  5529  17F7  0824               	movf	?___flpack+3,w
  5530  17F8  00DA               	movwf	?___lwtofl+3
  5531  17F9  0823               	movf	?___flpack+2,w
  5532  17FA  00D9               	movwf	?___lwtofl+2
  5533  17FB  0822               	movf	?___flpack+1,w
  5534  17FC  00D8               	movwf	?___lwtofl+1
  5535  17FD  0821               	movf	?___flpack,w
  5536  17FE  00D7               	movwf	?___lwtofl
  5537  17FF  0008               	return
  5538  1800                     __end_of___lwtofl:	
  5539                           
  5540                           	psect	text7
  5541  1C14                     __ptext7:	
  5542 ;; *************** function _print_unit *****************
  5543 ;; Defined at:
  5544 ;;		line 123 in file "../../../src/print.c"
  5545 ;; Parameters:    Size  Location     Type
  5546 ;;  unit            1    wreg     unsigned char 
  5547 ;; Auto vars:     Size  Location     Type
  5548 ;;  unit            1    0[COMMON] unsigned char 
  5549 ;; Return value:  Size  Location     Type
  5550 ;;		None               void
  5551 ;; Registers used:
  5552 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5553 ;; Tracked objects:
  5554 ;;		On entry : 0/100
  5555 ;;		On exit  : 300/0
  5556 ;;		Unchanged: 0/0
  5557 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5558 ;;      Params:         0       0       0       0       0
  5559 ;;      Locals:         0       0       0       0       0
  5560 ;;      Temps:          0       2       0       0       0
  5561 ;;      Totals:         0       2       0       0       0
  5562 ;;Total ram usage:        2 bytes
  5563 ;; Hardware stack levels used:    1
  5564 ;; Hardware stack levels required when called:    5
  5565 ;; This function calls:
  5566 ;;		_lcd_gotoxy
  5567 ;;		_ser_puts
  5568 ;; This function is called by:
  5569 ;;		_measure_capacitance
  5570 ;;		_measure_inductance
  5571 ;; This function uses a non-reentrant model
  5572 ;;
  5573                           
  5574                           
  5575                           ;psect for function _print_unit
  5576  1C14                     _print_unit:	
  5577  1C14                     l4386:	
  5578                           ;incstack = 0
  5579                           ; Regs used in _print_unit: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5580                           
  5581                           
  5582                           ;print.c: 131: static const char* units[8] = {"H", "mH", "uH", "nH", "mF", "uF", "nF", "
      +                          pF"};
  5583                           ;print.c: 132: lcd_gotoxy(14, 0);
  5584  1C14  1283               	bcf	3,5	;RP0=0, select bank0
  5585  1C15  1303               	bcf	3,6	;RP1=0, select bank0
  5586  1C16  300E               	movlw	14
  5587  1C17  01A4               	clrf	lcd_gotoxy@row
  5588  1C18  120A  158A  277C  160A  158A  	fcall	_lcd_gotoxy
  5589                           
  5590                           ;print.c: 136: lcd_gotoxy(16 - (buffer.n - buffer.p), 0);
  5591  1C1D  1283               	bcf	3,5	;RP0=0, select bank0
  5592  1C1E  1303               	bcf	3,6	;RP1=0, select bank0
  5593  1C1F  01A4               	clrf	lcd_gotoxy@row
  5594  1C20  1683               	bsf	3,5	;RP0=1, select bank3
  5595  1C21  1703               	bsf	3,6	;RP1=1, select bank3
  5596  1C22  0E3B               	swapf	(_buffer^(0+384)+16),w
  5597  1C23  390F               	andlw	15
  5598  1C24  1283               	bcf	3,5	;RP0=0, select bank0
  5599  1C25  1303               	bcf	3,6	;RP1=0, select bank0
  5600  1C26  00AA               	movwf	??_print_unit
  5601  1C27  1683               	bsf	3,5	;RP0=1, select bank3
  5602  1C28  1703               	bsf	3,6	;RP1=1, select bank3
  5603  1C29  083B               	movf	(_buffer^(0+384)+16),w
  5604  1C2A  390F               	andlw	15
  5605  1C2B  1283               	bcf	3,5	;RP0=0, select bank0
  5606  1C2C  1303               	bcf	3,6	;RP1=0, select bank0
  5607  1C2D  00AB               	movwf	??_print_unit+1
  5608  1C2E  082A               	movf	??_print_unit,w
  5609  1C2F  022B               	subwf	??_print_unit+1,w
  5610  1C30  3E10               	addlw	16
  5611  1C31  120A  158A  277C   	fcall	_lcd_gotoxy
  5612                           
  5613                           ;print.c: 139: ser_puts("\r\n");
  5614  1C34  30F4               	movlw	low (STR_9| (0+32768))
  5615  1C35  1283               	bcf	3,5	;RP0=0, select bank0
  5616  1C36  1303               	bcf	3,6	;RP1=0, select bank0
  5617  1C37  00A1               	movwf	ser_puts@s
  5618  1C38  3098               	movlw	high (STR_9| (0+32768))
  5619  1C39  00A2               	movwf	ser_puts@s+1
  5620  1C3A  160A  118A  2C23   	ljmp	l4098
  5621  1C3D                     __end_of_print_unit:	
  5622                           
  5623                           	psect	text12
  5624  1EAB                     __ptext12:	
  5625 ;; *************** function _pow *****************
  5626 ;; Defined at:
  5627 ;;		line 5 in file "/opt/microchip/xc8/v1.34/sources/common/pow.c"
  5628 ;; Parameters:    Size  Location     Type
  5629 ;;  x               4   58[BANK1 ] short 
  5630 ;;  y               4   62[BANK1 ] short 
  5631 ;; Auto vars:     Size  Location     Type
  5632 ;;  yi              4   75[BANK1 ] unsigned long 
  5633 ;;  sign            1   74[BANK1 ] unsigned char 
  5634 ;; Return value:  Size  Location     Type
  5635 ;;                  4   58[BANK1 ] unsigned char 
  5636 ;; Registers used:
  5637 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5638 ;; Tracked objects:
  5639 ;;		On entry : 300/100
  5640 ;;		On exit  : 300/100
  5641 ;;		Unchanged: 0/0
  5642 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5643 ;;      Params:         0       0       8       0       0
  5644 ;;      Locals:         0       0      13       0       0
  5645 ;;      Temps:          0       0       0       0       0
  5646 ;;      Totals:         0       0      21       0       0
  5647 ;;Total ram usage:       21 bytes
  5648 ;; Hardware stack levels used:    1
  5649 ;; Hardware stack levels required when called:    5
  5650 ;; This function calls:
  5651 ;;		___flge
  5652 ;;		___flmul
  5653 ;;		___flneg
  5654 ;;		___fltol
  5655 ;;		___lltofl
  5656 ;;		_exp
  5657 ;;		_log
  5658 ;; This function is called by:
  5659 ;;		_format_double
  5660 ;; This function uses a non-reentrant model
  5661 ;;
  5662                           
  5663                           
  5664                           ;psect for function _pow
  5665  1EAB                     _pow:	
  5666                           
  5667                           ;incstack = 0
  5668                           ; Regs used in _pow: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5669  1EAB  01EA               	clrf	pow@sign^(0+128)
  5670  1EAC  085D               	movf	(pow@x+3)^(0+128),w
  5671  1EAD  045C               	iorwf	(pow@x+2)^(0+128),w
  5672  1EAE  045B               	iorwf	(pow@x+1)^(0+128),w
  5673  1EAF  045A               	iorwf	pow@x^(0+128),w
  5674  1EB0  1D03               	skipz
  5675  1EB1  2ED0               	goto	l4348
  5676  1EB2  1283               	bcf	3,5	;RP0=0, select bank0
  5677  1EB3  01A1               	clrf	___flge@ff1
  5678  1EB4  01A2               	clrf	___flge@ff1+1
  5679  1EB5  01A3               	clrf	___flge@ff1+2
  5680  1EB6  01A4               	clrf	___flge@ff1+3
  5681  1EB7  1683               	bsf	3,5	;RP0=1, select bank1
  5682  1EB8  0861               	movf	(pow@y+3)^(0+128),w
  5683  1EB9  1283               	bcf	3,5	;RP0=0, select bank0
  5684  1EBA  00A8               	movwf	___flge@ff2+3
  5685  1EBB  1683               	bsf	3,5	;RP0=1, select bank1
  5686  1EBC  0860               	movf	(pow@y+2)^(0+128),w
  5687  1EBD  1283               	bcf	3,5	;RP0=0, select bank0
  5688  1EBE  00A7               	movwf	___flge@ff2+2
  5689  1EBF  1683               	bsf	3,5	;RP0=1, select bank1
  5690  1EC0  085F               	movf	(pow@y+1)^(0+128),w
  5691  1EC1  1283               	bcf	3,5	;RP0=0, select bank0
  5692  1EC2  00A6               	movwf	___flge@ff2+1
  5693  1EC3  1683               	bsf	3,5	;RP0=1, select bank1
  5694  1EC4  085E               	movf	pow@y^(0+128),w
  5695  1EC5  1283               	bcf	3,5	;RP0=0, select bank0
  5696  1EC6  00A5               	movwf	___flge@ff2
  5697  1EC7  120A  158A  2730   	fcall	___flge
  5698  1ECA  1683               	bsf	3,5	;RP0=1, select bank1
  5699  1ECB  01DA               	clrf	?_pow^(0+128)
  5700  1ECC  01DB               	clrf	(?_pow+1)^(0+128)
  5701  1ECD  01DC               	clrf	(?_pow+2)^(0+128)
  5702  1ECE  01DD               	clrf	(?_pow+3)^(0+128)
  5703  1ECF  0008               	return
  5704  1ED0                     l4348:	
  5705  1ED0  0861               	movf	(pow@y+3)^(0+128),w
  5706  1ED1  0460               	iorwf	(pow@y+2)^(0+128),w
  5707  1ED2  045F               	iorwf	(pow@y+1)^(0+128),w
  5708  1ED3  045E               	iorwf	pow@y^(0+128),w
  5709  1ED4  1D03               	skipz
  5710  1ED5  2EDE               	goto	l4354
  5711  1ED6  303F               	movlw	63
  5712  1ED7  00DD               	movwf	(?_pow+3)^(0+128)
  5713  1ED8  3080               	movlw	128
  5714  1ED9  00DC               	movwf	(?_pow+2)^(0+128)
  5715  1EDA  3000               	movlw	0
  5716  1EDB  01DB               	clrf	(?_pow+1)^(0+128)
  5717  1EDC  01DA               	clrf	?_pow^(0+128)
  5718  1EDD  0008               	return
  5719  1EDE                     l4354:	
  5720  1EDE  085D               	movf	(pow@x+3)^(0+128),w
  5721  1EDF  1283               	bcf	3,5	;RP0=0, select bank0
  5722  1EE0  00A4               	movwf	___flge@ff1+3
  5723  1EE1  1683               	bsf	3,5	;RP0=1, select bank1
  5724  1EE2  085C               	movf	(pow@x+2)^(0+128),w
  5725  1EE3  1283               	bcf	3,5	;RP0=0, select bank0
  5726  1EE4  00A3               	movwf	___flge@ff1+2
  5727  1EE5  1683               	bsf	3,5	;RP0=1, select bank1
  5728  1EE6  085B               	movf	(pow@x+1)^(0+128),w
  5729  1EE7  1283               	bcf	3,5	;RP0=0, select bank0
  5730  1EE8  00A2               	movwf	___flge@ff1+1
  5731  1EE9  1683               	bsf	3,5	;RP0=1, select bank1
  5732  1EEA  085A               	movf	pow@x^(0+128),w
  5733  1EEB  1283               	bcf	3,5	;RP0=0, select bank0
  5734  1EEC  00A1               	movwf	___flge@ff1
  5735  1EED  01A5               	clrf	___flge@ff2
  5736  1EEE  01A6               	clrf	___flge@ff2+1
  5737  1EEF  01A7               	clrf	___flge@ff2+2
  5738  1EF0  01A8               	clrf	___flge@ff2+3
  5739  1EF1  120A  158A  2730  160A  158A  	fcall	___flge
  5740  1EF6  1803               	btfsc	3,0
  5741  1EF7  2F66               	goto	l4366
  5742  1EF8  1683               	bsf	3,5	;RP0=1, select bank1
  5743  1EF9  0861               	movf	(pow@y+3)^(0+128),w
  5744  1EFA  00B5               	movwf	(___fltol@f1+3)^(0+128)
  5745  1EFB  0860               	movf	(pow@y+2)^(0+128),w
  5746  1EFC  00B4               	movwf	(___fltol@f1+2)^(0+128)
  5747  1EFD  085F               	movf	(pow@y+1)^(0+128),w
  5748  1EFE  00B3               	movwf	(___fltol@f1+1)^(0+128)
  5749  1EFF  085E               	movf	pow@y^(0+128),w
  5750  1F00  00B2               	movwf	___fltol@f1^(0+128)
  5751  1F01  160A  118A  26A6  160A  158A  	fcall	___fltol
  5752  1F06  0835               	movf	(?___fltol+3)^(0+128),w
  5753  1F07  00EE               	movwf	(pow@yi+3)^(0+128)
  5754  1F08  0834               	movf	(?___fltol+2)^(0+128),w
  5755  1F09  00ED               	movwf	(pow@yi+2)^(0+128)
  5756  1F0A  0833               	movf	(?___fltol+1)^(0+128),w
  5757  1F0B  00EC               	movwf	(pow@yi+1)^(0+128)
  5758  1F0C  0832               	movf	?___fltol^(0+128),w
  5759  1F0D  00EB               	movwf	pow@yi^(0+128)
  5760  1F0E  086E               	movf	(pow@yi+3)^(0+128),w
  5761  1F0F  1283               	bcf	3,5	;RP0=0, select bank0
  5762  1F10  00AE               	movwf	___lltofl@c+3
  5763  1F11  1683               	bsf	3,5	;RP0=1, select bank1
  5764  1F12  086D               	movf	(pow@yi+2)^(0+128),w
  5765  1F13  1283               	bcf	3,5	;RP0=0, select bank0
  5766  1F14  00AD               	movwf	___lltofl@c+2
  5767  1F15  1683               	bsf	3,5	;RP0=1, select bank1
  5768  1F16  086C               	movf	(pow@yi+1)^(0+128),w
  5769  1F17  1283               	bcf	3,5	;RP0=0, select bank0
  5770  1F18  00AC               	movwf	___lltofl@c+1
  5771  1F19  1683               	bsf	3,5	;RP0=1, select bank1
  5772  1F1A  086B               	movf	pow@yi^(0+128),w
  5773  1F1B  1283               	bcf	3,5	;RP0=0, select bank0
  5774  1F1C  00AB               	movwf	___lltofl@c
  5775  1F1D  27E9  160A  158A   	fcall	___lltofl
  5776  1F20  1683               	bsf	3,5	;RP0=1, select bank1
  5777  1F21  0861               	movf	(pow@y+3)^(0+128),w
  5778  1F22  1283               	bcf	3,5	;RP0=0, select bank0
  5779  1F23  062E               	xorwf	?___lltofl+3,w
  5780  1F24  1D03               	skipz
  5781  1F25  2F36               	goto	u4055
  5782  1F26  1683               	bsf	3,5	;RP0=1, select bank1
  5783  1F27  0860               	movf	(pow@y+2)^(0+128),w
  5784  1F28  1283               	bcf	3,5	;RP0=0, select bank0
  5785  1F29  062D               	xorwf	?___lltofl+2,w
  5786  1F2A  1D03               	skipz
  5787  1F2B  2F36               	goto	u4055
  5788  1F2C  1683               	bsf	3,5	;RP0=1, select bank1
  5789  1F2D  085F               	movf	(pow@y+1)^(0+128),w
  5790  1F2E  1283               	bcf	3,5	;RP0=0, select bank0
  5791  1F2F  062C               	xorwf	?___lltofl+1,w
  5792  1F30  1D03               	skipz
  5793  1F31  2F36               	goto	u4055
  5794  1F32  1683               	bsf	3,5	;RP0=1, select bank1
  5795  1F33  085E               	movf	pow@y^(0+128),w
  5796  1F34  1283               	bcf	3,5	;RP0=0, select bank0
  5797  1F35  062B               	xorwf	?___lltofl,w
  5798  1F36                     u4055:	
  5799  1F36  1903               	skipnz
  5800  1F37  2F3E               	goto	l4360
  5801  1F38  1683               	bsf	3,5	;RP0=1, select bank1
  5802  1F39  01DA               	clrf	?_pow^(0+128)
  5803  1F3A  01DB               	clrf	(?_pow+1)^(0+128)
  5804  1F3B  01DC               	clrf	(?_pow+2)^(0+128)
  5805  1F3C  01DD               	clrf	(?_pow+3)^(0+128)
  5806  1F3D  0008               	return
  5807  1F3E                     l4360:	
  5808  1F3E  1683               	bsf	3,5	;RP0=1, select bank1
  5809  1F3F  086B               	movf	pow@yi^(0+128),w
  5810  1F40  00EA               	movwf	pow@sign^(0+128)
  5811  1F41  3001               	movlw	1
  5812  1F42  05EA               	andwf	pow@sign^(0+128),f
  5813  1F43  085D               	movf	(pow@x+3)^(0+128),w
  5814  1F44  1283               	bcf	3,5	;RP0=0, select bank0
  5815  1F45  00A4               	movwf	___flneg@f1+3
  5816  1F46  1683               	bsf	3,5	;RP0=1, select bank1
  5817  1F47  085C               	movf	(pow@x+2)^(0+128),w
  5818  1F48  1283               	bcf	3,5	;RP0=0, select bank0
  5819  1F49  00A3               	movwf	___flneg@f1+2
  5820  1F4A  1683               	bsf	3,5	;RP0=1, select bank1
  5821  1F4B  085B               	movf	(pow@x+1)^(0+128),w
  5822  1F4C  1283               	bcf	3,5	;RP0=0, select bank0
  5823  1F4D  00A2               	movwf	___flneg@f1+1
  5824  1F4E  1683               	bsf	3,5	;RP0=1, select bank1
  5825  1F4F  085A               	movf	pow@x^(0+128),w
  5826  1F50  1283               	bcf	3,5	;RP0=0, select bank0
  5827  1F51  00A1               	movwf	___flneg@f1
  5828  1F52  120A  118A  27D4  160A  158A  	fcall	___flneg
  5829  1F57  0824               	movf	?___flneg+3,w
  5830  1F58  1683               	bsf	3,5	;RP0=1, select bank1
  5831  1F59  00DD               	movwf	(pow@x+3)^(0+128)
  5832  1F5A  1283               	bcf	3,5	;RP0=0, select bank0
  5833  1F5B  0823               	movf	?___flneg+2,w
  5834  1F5C  1683               	bsf	3,5	;RP0=1, select bank1
  5835  1F5D  00DC               	movwf	(pow@x+2)^(0+128)
  5836  1F5E  1283               	bcf	3,5	;RP0=0, select bank0
  5837  1F5F  0822               	movf	?___flneg+1,w
  5838  1F60  1683               	bsf	3,5	;RP0=1, select bank1
  5839  1F61  00DB               	movwf	(pow@x+1)^(0+128)
  5840  1F62  1283               	bcf	3,5	;RP0=0, select bank0
  5841  1F63  0821               	movf	?___flneg,w
  5842  1F64  1683               	bsf	3,5	;RP0=1, select bank1
  5843  1F65  00DA               	movwf	pow@x^(0+128)
  5844  1F66                     l4366:	
  5845  1F66  1683               	bsf	3,5	;RP0=1, select bank1
  5846  1F67  085D               	movf	(pow@x+3)^(0+128),w
  5847  1F68  00A7               	movwf	(log@x+3)^(0+128)
  5848  1F69  085C               	movf	(pow@x+2)^(0+128),w
  5849  1F6A  00A6               	movwf	(log@x+2)^(0+128)
  5850  1F6B  085B               	movf	(pow@x+1)^(0+128),w
  5851  1F6C  00A5               	movwf	(log@x+1)^(0+128)
  5852  1F6D  085A               	movf	pow@x^(0+128),w
  5853  1F6E  00A4               	movwf	log@x^(0+128)
  5854  1F6F  120A  118A  2670  160A  158A  	fcall	_log
  5855  1F74  0827               	movf	(?_log+3)^(0+128),w
  5856  1F75  00E5               	movwf	(_pow$1021+3)^(0+128)
  5857  1F76  0826               	movf	(?_log+2)^(0+128),w
  5858  1F77  00E4               	movwf	(_pow$1021+2)^(0+128)
  5859  1F78  0825               	movf	(?_log+1)^(0+128),w
  5860  1F79  00E3               	movwf	(_pow$1021+1)^(0+128)
  5861  1F7A  0824               	movf	?_log^(0+128),w
  5862  1F7B  00E2               	movwf	_pow$1021^(0+128)
  5863  1F7C  0861               	movf	(pow@y+3)^(0+128),w
  5864  1F7D  1283               	bcf	3,5	;RP0=0, select bank0
  5865  1F7E  00C1               	movwf	___flmul@f1+3
  5866  1F7F  1683               	bsf	3,5	;RP0=1, select bank1
  5867  1F80  0860               	movf	(pow@y+2)^(0+128),w
  5868  1F81  1283               	bcf	3,5	;RP0=0, select bank0
  5869  1F82  00C0               	movwf	___flmul@f1+2
  5870  1F83  1683               	bsf	3,5	;RP0=1, select bank1
  5871  1F84  085F               	movf	(pow@y+1)^(0+128),w
  5872  1F85  1283               	bcf	3,5	;RP0=0, select bank0
  5873  1F86  00BF               	movwf	___flmul@f1+1
  5874  1F87  1683               	bsf	3,5	;RP0=1, select bank1
  5875  1F88  085E               	movf	pow@y^(0+128),w
  5876  1F89  1283               	bcf	3,5	;RP0=0, select bank0
  5877  1F8A  00BE               	movwf	___flmul@f1
  5878  1F8B  1683               	bsf	3,5	;RP0=1, select bank1
  5879  1F8C  0865               	movf	(_pow$1021+3)^(0+128),w
  5880  1F8D  1283               	bcf	3,5	;RP0=0, select bank0
  5881  1F8E  00C5               	movwf	___flmul@f2+3
  5882  1F8F  1683               	bsf	3,5	;RP0=1, select bank1
  5883  1F90  0864               	movf	(_pow$1021+2)^(0+128),w
  5884  1F91  1283               	bcf	3,5	;RP0=0, select bank0
  5885  1F92  00C4               	movwf	___flmul@f2+2
  5886  1F93  1683               	bsf	3,5	;RP0=1, select bank1
  5887  1F94  0863               	movf	(_pow$1021+1)^(0+128),w
  5888  1F95  1283               	bcf	3,5	;RP0=0, select bank0
  5889  1F96  00C3               	movwf	___flmul@f2+1
  5890  1F97  1683               	bsf	3,5	;RP0=1, select bank1
  5891  1F98  0862               	movf	_pow$1021^(0+128),w
  5892  1F99  1283               	bcf	3,5	;RP0=0, select bank0
  5893  1F9A  00C2               	movwf	___flmul@f2
  5894  1F9B  120A  158A  2698  160A  158A  	fcall	___flmul
  5895  1FA0  0841               	movf	?___flmul+3,w
  5896  1FA1  1683               	bsf	3,5	;RP0=1, select bank1
  5897  1FA2  00E9               	movwf	(_pow$1022+3)^(0+128)
  5898  1FA3  1283               	bcf	3,5	;RP0=0, select bank0
  5899  1FA4  0840               	movf	?___flmul+2,w
  5900  1FA5  1683               	bsf	3,5	;RP0=1, select bank1
  5901  1FA6  00E8               	movwf	(_pow$1022+2)^(0+128)
  5902  1FA7  1283               	bcf	3,5	;RP0=0, select bank0
  5903  1FA8  083F               	movf	?___flmul+1,w
  5904  1FA9  1683               	bsf	3,5	;RP0=1, select bank1
  5905  1FAA  00E7               	movwf	(_pow$1022+1)^(0+128)
  5906  1FAB  1283               	bcf	3,5	;RP0=0, select bank0
  5907  1FAC  083E               	movf	?___flmul,w
  5908  1FAD  1683               	bsf	3,5	;RP0=1, select bank1
  5909  1FAE  00E6               	movwf	_pow$1022^(0+128)
  5910  1FAF  0869               	movf	(_pow$1022+3)^(0+128),w
  5911  1FB0  00CE               	movwf	(exp@x+3)^(0+128)
  5912  1FB1  0868               	movf	(_pow$1022+2)^(0+128),w
  5913  1FB2  00CD               	movwf	(exp@x+2)^(0+128)
  5914  1FB3  0867               	movf	(_pow$1022+1)^(0+128),w
  5915  1FB4  00CC               	movwf	(exp@x+1)^(0+128)
  5916  1FB5  0866               	movf	_pow$1022^(0+128),w
  5917  1FB6  00CB               	movwf	exp@x^(0+128)
  5918  1FB7  120A  118A  2409  160A  158A  	fcall	_exp
  5919  1FBC  084E               	movf	(?_exp+3)^(0+128),w
  5920  1FBD  00DD               	movwf	(pow@x+3)^(0+128)
  5921  1FBE  084D               	movf	(?_exp+2)^(0+128),w
  5922  1FBF  00DC               	movwf	(pow@x+2)^(0+128)
  5923  1FC0  084C               	movf	(?_exp+1)^(0+128),w
  5924  1FC1  00DB               	movwf	(pow@x+1)^(0+128)
  5925  1FC2  084B               	movf	?_exp^(0+128),w
  5926  1FC3  00DA               	movwf	pow@x^(0+128)
  5927  1FC4  086A               	movf	pow@sign^(0+128),w
  5928  1FC5  1903               	btfsc	3,2
  5929  1FC6  0008               	return
  5930  1FC7  085D               	movf	(pow@x+3)^(0+128),w
  5931  1FC8  1283               	bcf	3,5	;RP0=0, select bank0
  5932  1FC9  00A4               	movwf	___flneg@f1+3
  5933  1FCA  1683               	bsf	3,5	;RP0=1, select bank1
  5934  1FCB  085C               	movf	(pow@x+2)^(0+128),w
  5935  1FCC  1283               	bcf	3,5	;RP0=0, select bank0
  5936  1FCD  00A3               	movwf	___flneg@f1+2
  5937  1FCE  1683               	bsf	3,5	;RP0=1, select bank1
  5938  1FCF  085B               	movf	(pow@x+1)^(0+128),w
  5939  1FD0  1283               	bcf	3,5	;RP0=0, select bank0
  5940  1FD1  00A2               	movwf	___flneg@f1+1
  5941  1FD2  1683               	bsf	3,5	;RP0=1, select bank1
  5942  1FD3  085A               	movf	pow@x^(0+128),w
  5943  1FD4  1283               	bcf	3,5	;RP0=0, select bank0
  5944  1FD5  00A1               	movwf	___flneg@f1
  5945  1FD6  120A  118A  27D4   	fcall	___flneg
  5946  1FD9  0824               	movf	?___flneg+3,w
  5947  1FDA  1683               	bsf	3,5	;RP0=1, select bank1
  5948  1FDB  00DD               	movwf	(?_pow+3)^(0+128)
  5949  1FDC  1283               	bcf	3,5	;RP0=0, select bank0
  5950  1FDD  0823               	movf	?___flneg+2,w
  5951  1FDE  1683               	bsf	3,5	;RP0=1, select bank1
  5952  1FDF  00DC               	movwf	(?_pow+2)^(0+128)
  5953  1FE0  1283               	bcf	3,5	;RP0=0, select bank0
  5954  1FE1  0822               	movf	?___flneg+1,w
  5955  1FE2  1683               	bsf	3,5	;RP0=1, select bank1
  5956  1FE3  00DB               	movwf	(?_pow+1)^(0+128)
  5957  1FE4  1283               	bcf	3,5	;RP0=0, select bank0
  5958  1FE5  0821               	movf	?___flneg,w
  5959  1FE6  1683               	bsf	3,5	;RP0=1, select bank1
  5960  1FE7  00DA               	movwf	?_pow^(0+128)
  5961  1FE8  0008               	return
  5962  1FE9                     __end_of_pow:	
  5963  1FE9                     __ptext21:	
  5964 ;; *************** function ___lltofl *****************
  5965 ;; Defined at:
  5966 ;;		line 30 in file "/opt/microchip/xc8/v1.34/sources/common/lltofl.c"
  5967 ;; Parameters:    Size  Location     Type
  5968 ;;  c               4   10[BANK0 ] unsigned long 
  5969 ;; Auto vars:     Size  Location     Type
  5970 ;;		None
  5971 ;; Return value:  Size  Location     Type
  5972 ;;                  4   10[BANK0 ] unsigned long 
  5973 ;; Registers used:
  5974 ;;		wreg, status,2, status,0, pclath, cstack
  5975 ;; Tracked objects:
  5976 ;;		On entry : 300/0
  5977 ;;		On exit  : 300/0
  5978 ;;		Unchanged: 0/0
  5979 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5980 ;;      Params:         0       4       0       0       0
  5981 ;;      Locals:         0       0       0       0       0
  5982 ;;      Temps:          0       0       0       0       0
  5983 ;;      Totals:         0       4       0       0       0
  5984 ;;Total ram usage:        4 bytes
  5985 ;; Hardware stack levels used:    1
  5986 ;; Hardware stack levels required when called:    2
  5987 ;; This function calls:
  5988 ;;		___flpack
  5989 ;; This function is called by:
  5990 ;;		_pow
  5991 ;; This function uses a non-reentrant model
  5992 ;;
  5993                           
  5994                           
  5995                           ;psect for function ___lltofl
  5996  1FE9                     ___lltofl:	
  5997                           
  5998                           ;incstack = 0
  5999                           ; Regs used in ___lltofl: [wreg+status,2+status,0+pclath+cstack]
  6000  1FE9  082E               	movf	___lltofl@c+3,w
  6001  1FEA  00A4               	movwf	___flpack@arg+3
  6002  1FEB  082D               	movf	___lltofl@c+2,w
  6003  1FEC  00A3               	movwf	___flpack@arg+2
  6004  1FED  082C               	movf	___lltofl@c+1,w
  6005  1FEE  00A2               	movwf	___flpack@arg+1
  6006  1FEF  082B               	movf	___lltofl@c,w
  6007  1FF0  00A1               	movwf	___flpack@arg
  6008  1FF1  3096               	movlw	150
  6009  1FF2  00A5               	movwf	___flpack@exp
  6010  1FF3  01A6               	clrf	___flpack@sign
  6011  1FF4  160A  118A  279E   	fcall	___flpack
  6012  1FF7  0824               	movf	?___flpack+3,w
  6013  1FF8  00AE               	movwf	?___lltofl+3
  6014  1FF9  0823               	movf	?___flpack+2,w
  6015  1FFA  00AD               	movwf	?___lltofl+2
  6016  1FFB  0822               	movf	?___flpack+1,w
  6017  1FFC  00AC               	movwf	?___lltofl+1
  6018  1FFD  0821               	movf	?___flpack,w
  6019  1FFE  00AB               	movwf	?___lltofl
  6020  1FFF  0008               	return
  6021  2000                     __end_of___lltofl:	
  6022                           
  6023                           	psect	text13
  6024  0409                     __ptext13:	
  6025 ;; *************** function _exp *****************
  6026 ;; Defined at:
  6027 ;;		line 12 in file "/opt/microchip/xc8/v1.34/sources/common/exp.c"
  6028 ;; Parameters:    Size  Location     Type
  6029 ;;  x               4   43[BANK1 ] unsigned char 
  6030 ;; Auto vars:     Size  Location     Type
  6031 ;;  exponent        2   55[BANK1 ] int 
  6032 ;;  sign            1   57[BANK1 ] unsigned char 
  6033 ;; Return value:  Size  Location     Type
  6034 ;;                  4   43[BANK1 ] unsigned char 
  6035 ;; Registers used:
  6036 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  6037 ;; Tracked objects:
  6038 ;;		On entry : 300/100
  6039 ;;		On exit  : 300/100
  6040 ;;		Unchanged: 0/0
  6041 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6042 ;;      Params:         0       0       4       0       0
  6043 ;;      Locals:         0       0      11       0       0
  6044 ;;      Temps:          0       0       0       0       0
  6045 ;;      Totals:         0       0      15       0       0
  6046 ;;Total ram usage:       15 bytes
  6047 ;; Hardware stack levels used:    1
  6048 ;; Hardware stack levels required when called:    4
  6049 ;; This function calls:
  6050 ;;		___awtofl
  6051 ;;		___fldiv
  6052 ;;		___flge
  6053 ;;		___flmul
  6054 ;;		___flneg
  6055 ;;		___flsub
  6056 ;;		___fltol
  6057 ;;		_eval_poly
  6058 ;;		_floor
  6059 ;;		_ldexp
  6060 ;; This function is called by:
  6061 ;;		_pow
  6062 ;; This function uses a non-reentrant model
  6063 ;;
  6064                           
  6065                           
  6066                           ;psect for function _exp
  6067  0409                     _exp:	
  6068                           
  6069                           ;incstack = 0
  6070                           ; Regs used in _exp: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  6071  0409  084E               	movf	(exp@x+3)^(0+128),w
  6072  040A  044D               	iorwf	(exp@x+2)^(0+128),w
  6073  040B  044C               	iorwf	(exp@x+1)^(0+128),w
  6074  040C  044B               	iorwf	exp@x^(0+128),w
  6075  040D  1D03               	skipz
  6076  040E  2C17               	goto	l4192
  6077  040F  303F               	movlw	63
  6078  0410  00CE               	movwf	(?_exp+3)^(0+128)
  6079  0411  3080               	movlw	128
  6080  0412  00CD               	movwf	(?_exp+2)^(0+128)
  6081  0413  3000               	movlw	0
  6082  0414  01CC               	clrf	(?_exp+1)^(0+128)
  6083  0415  01CB               	clrf	?_exp^(0+128)
  6084  0416  0008               	return
  6085  0417                     l4192:	
  6086  0417  3044               	movlw	68
  6087  0418  1283               	bcf	3,5	;RP0=0, select bank0
  6088  0419  00A4               	movwf	___flge@ff1+3
  6089  041A  3031               	movlw	49
  6090  041B  00A3               	movwf	___flge@ff1+2
  6091  041C  3072               	movlw	114
  6092  041D  00A2               	movwf	___flge@ff1+1
  6093  041E  3018               	movlw	24
  6094  041F  00A1               	movwf	___flge@ff1
  6095  0420  1683               	bsf	3,5	;RP0=1, select bank1
  6096  0421  084E               	movf	(exp@x+3)^(0+128),w
  6097  0422  1283               	bcf	3,5	;RP0=0, select bank0
  6098  0423  00A8               	movwf	___flge@ff2+3
  6099  0424  1683               	bsf	3,5	;RP0=1, select bank1
  6100  0425  084D               	movf	(exp@x+2)^(0+128),w
  6101  0426  1283               	bcf	3,5	;RP0=0, select bank0
  6102  0427  00A7               	movwf	___flge@ff2+2
  6103  0428  1683               	bsf	3,5	;RP0=1, select bank1
  6104  0429  084C               	movf	(exp@x+1)^(0+128),w
  6105  042A  1283               	bcf	3,5	;RP0=0, select bank0
  6106  042B  00A6               	movwf	___flge@ff2+1
  6107  042C  1683               	bsf	3,5	;RP0=1, select bank1
  6108  042D  084B               	movf	exp@x^(0+128),w
  6109  042E  1283               	bcf	3,5	;RP0=0, select bank0
  6110  042F  00A5               	movwf	___flge@ff2
  6111  0430  120A  158A  2730  120A  118A  	fcall	___flge
  6112  0435  1803               	btfsc	3,0
  6113  0436  2C40               	goto	l4202
  6114  0437  307F               	movlw	127
  6115  0438  1683               	bsf	3,5	;RP0=1, select bank1
  6116  0439  00CE               	movwf	(?_exp+3)^(0+128)
  6117  043A  00CD               	movwf	(?_exp+2)^(0+128)
  6118  043B  30FE               	movlw	254
  6119  043C  00CC               	movwf	(?_exp+1)^(0+128)
  6120  043D  30F7               	movlw	247
  6121  043E  00CB               	movwf	?_exp^(0+128)
  6122  043F  0008               	return
  6123  0440                     l4202:	
  6124  0440  1683               	bsf	3,5	;RP0=1, select bank1
  6125  0441  084E               	movf	(exp@x+3)^(0+128),w
  6126  0442  1283               	bcf	3,5	;RP0=0, select bank0
  6127  0443  00A4               	movwf	___flge@ff1+3
  6128  0444  1683               	bsf	3,5	;RP0=1, select bank1
  6129  0445  084D               	movf	(exp@x+2)^(0+128),w
  6130  0446  1283               	bcf	3,5	;RP0=0, select bank0
  6131  0447  00A3               	movwf	___flge@ff1+2
  6132  0448  1683               	bsf	3,5	;RP0=1, select bank1
  6133  0449  084C               	movf	(exp@x+1)^(0+128),w
  6134  044A  1283               	bcf	3,5	;RP0=0, select bank0
  6135  044B  00A2               	movwf	___flge@ff1+1
  6136  044C  1683               	bsf	3,5	;RP0=1, select bank1
  6137  044D  084B               	movf	exp@x^(0+128),w
  6138  044E  1283               	bcf	3,5	;RP0=0, select bank0
  6139  044F  00A1               	movwf	___flge@ff1
  6140  0450  30C4               	movlw	196
  6141  0451  00A8               	movwf	___flge@ff2+3
  6142  0452  303A               	movlw	58
  6143  0453  00A7               	movwf	___flge@ff2+2
  6144  0454  3048               	movlw	72
  6145  0455  00A6               	movwf	___flge@ff2+1
  6146  0456  3087               	movlw	135
  6147  0457  00A5               	movwf	___flge@ff2
  6148  0458  120A  158A  2730  120A  118A  	fcall	___flge
  6149  045D  1803               	btfsc	3,0
  6150  045E  2C65               	goto	l4206
  6151  045F  1683               	bsf	3,5	;RP0=1, select bank1
  6152  0460  01CB               	clrf	?_exp^(0+128)
  6153  0461  01CC               	clrf	(?_exp+1)^(0+128)
  6154  0462  01CD               	clrf	(?_exp+2)^(0+128)
  6155  0463  01CE               	clrf	(?_exp+3)^(0+128)
  6156  0464  0008               	return
  6157  0465                     l4206:	
  6158  0465  1683               	bsf	3,5	;RP0=1, select bank1
  6159  0466  084E               	movf	(exp@x+3)^(0+128),w
  6160  0467  1283               	bcf	3,5	;RP0=0, select bank0
  6161  0468  00A4               	movwf	___flge@ff1+3
  6162  0469  1683               	bsf	3,5	;RP0=1, select bank1
  6163  046A  084D               	movf	(exp@x+2)^(0+128),w
  6164  046B  1283               	bcf	3,5	;RP0=0, select bank0
  6165  046C  00A3               	movwf	___flge@ff1+2
  6166  046D  1683               	bsf	3,5	;RP0=1, select bank1
  6167  046E  084C               	movf	(exp@x+1)^(0+128),w
  6168  046F  1283               	bcf	3,5	;RP0=0, select bank0
  6169  0470  00A2               	movwf	___flge@ff1+1
  6170  0471  1683               	bsf	3,5	;RP0=1, select bank1
  6171  0472  084B               	movf	exp@x^(0+128),w
  6172  0473  1283               	bcf	3,5	;RP0=0, select bank0
  6173  0474  00A1               	movwf	___flge@ff1
  6174  0475  01A5               	clrf	___flge@ff2
  6175  0476  01A6               	clrf	___flge@ff2+1
  6176  0477  01A7               	clrf	___flge@ff2+2
  6177  0478  01A8               	clrf	___flge@ff2+3
  6178  0479  120A  158A  2730  120A  118A  	fcall	___flge
  6179  047E  1803               	btfsc	3,0
  6180  047F  2C82               	goto	u3870
  6181  0480  3001               	movlw	1
  6182  0481  2C83               	goto	u3880
  6183  0482                     u3870:	
  6184  0482  3000               	movlw	0
  6185  0483                     u3880:	
  6186  0483  1683               	bsf	3,5	;RP0=1, select bank1
  6187  0484  00D9               	movwf	exp@sign^(0+128)
  6188  0485  0859               	movf	exp@sign^(0+128),w
  6189  0486  1903               	btfsc	3,2
  6190  0487  2CA9               	goto	l4212
  6191  0488  084E               	movf	(exp@x+3)^(0+128),w
  6192  0489  1283               	bcf	3,5	;RP0=0, select bank0
  6193  048A  00A4               	movwf	___flneg@f1+3
  6194  048B  1683               	bsf	3,5	;RP0=1, select bank1
  6195  048C  084D               	movf	(exp@x+2)^(0+128),w
  6196  048D  1283               	bcf	3,5	;RP0=0, select bank0
  6197  048E  00A3               	movwf	___flneg@f1+2
  6198  048F  1683               	bsf	3,5	;RP0=1, select bank1
  6199  0490  084C               	movf	(exp@x+1)^(0+128),w
  6200  0491  1283               	bcf	3,5	;RP0=0, select bank0
  6201  0492  00A2               	movwf	___flneg@f1+1
  6202  0493  1683               	bsf	3,5	;RP0=1, select bank1
  6203  0494  084B               	movf	exp@x^(0+128),w
  6204  0495  1283               	bcf	3,5	;RP0=0, select bank0
  6205  0496  00A1               	movwf	___flneg@f1
  6206  0497  27D4  120A  118A   	fcall	___flneg
  6207  049A  0824               	movf	?___flneg+3,w
  6208  049B  1683               	bsf	3,5	;RP0=1, select bank1
  6209  049C  00CE               	movwf	(exp@x+3)^(0+128)
  6210  049D  1283               	bcf	3,5	;RP0=0, select bank0
  6211  049E  0823               	movf	?___flneg+2,w
  6212  049F  1683               	bsf	3,5	;RP0=1, select bank1
  6213  04A0  00CD               	movwf	(exp@x+2)^(0+128)
  6214  04A1  1283               	bcf	3,5	;RP0=0, select bank0
  6215  04A2  0822               	movf	?___flneg+1,w
  6216  04A3  1683               	bsf	3,5	;RP0=1, select bank1
  6217  04A4  00CC               	movwf	(exp@x+1)^(0+128)
  6218  04A5  1283               	bcf	3,5	;RP0=0, select bank0
  6219  04A6  0821               	movf	?___flneg,w
  6220  04A7  1683               	bsf	3,5	;RP0=1, select bank1
  6221  04A8  00CB               	movwf	exp@x^(0+128)
  6222  04A9                     l4212:	
  6223  04A9  303F               	movlw	63
  6224  04AA  1283               	bcf	3,5	;RP0=0, select bank0
  6225  04AB  00C1               	movwf	___flmul@f1+3
  6226  04AC  30B8               	movlw	184
  6227  04AD  00C0               	movwf	___flmul@f1+2
  6228  04AE  30AA               	movlw	170
  6229  04AF  00BF               	movwf	___flmul@f1+1
  6230  04B0  303B               	movlw	59
  6231  04B1  00BE               	movwf	___flmul@f1
  6232  04B2  1683               	bsf	3,5	;RP0=1, select bank1
  6233  04B3  084E               	movf	(exp@x+3)^(0+128),w
  6234  04B4  1283               	bcf	3,5	;RP0=0, select bank0
  6235  04B5  00C5               	movwf	___flmul@f2+3
  6236  04B6  1683               	bsf	3,5	;RP0=1, select bank1
  6237  04B7  084D               	movf	(exp@x+2)^(0+128),w
  6238  04B8  1283               	bcf	3,5	;RP0=0, select bank0
  6239  04B9  00C4               	movwf	___flmul@f2+2
  6240  04BA  1683               	bsf	3,5	;RP0=1, select bank1
  6241  04BB  084C               	movf	(exp@x+1)^(0+128),w
  6242  04BC  1283               	bcf	3,5	;RP0=0, select bank0
  6243  04BD  00C3               	movwf	___flmul@f2+1
  6244  04BE  1683               	bsf	3,5	;RP0=1, select bank1
  6245  04BF  084B               	movf	exp@x^(0+128),w
  6246  04C0  1283               	bcf	3,5	;RP0=0, select bank0
  6247  04C1  00C2               	movwf	___flmul@f2
  6248  04C2  120A  158A  2698  120A  118A  	fcall	___flmul
  6249  04C7  0841               	movf	?___flmul+3,w
  6250  04C8  1683               	bsf	3,5	;RP0=1, select bank1
  6251  04C9  00CE               	movwf	(exp@x+3)^(0+128)
  6252  04CA  1283               	bcf	3,5	;RP0=0, select bank0
  6253  04CB  0840               	movf	?___flmul+2,w
  6254  04CC  1683               	bsf	3,5	;RP0=1, select bank1
  6255  04CD  00CD               	movwf	(exp@x+2)^(0+128)
  6256  04CE  1283               	bcf	3,5	;RP0=0, select bank0
  6257  04CF  083F               	movf	?___flmul+1,w
  6258  04D0  1683               	bsf	3,5	;RP0=1, select bank1
  6259  04D1  00CC               	movwf	(exp@x+1)^(0+128)
  6260  04D2  1283               	bcf	3,5	;RP0=0, select bank0
  6261  04D3  083E               	movf	?___flmul,w
  6262  04D4  1683               	bsf	3,5	;RP0=1, select bank1
  6263  04D5  00CB               	movwf	exp@x^(0+128)
  6264  04D6  084E               	movf	(exp@x+3)^(0+128),w
  6265  04D7  00C4               	movwf	(floor@x+3)^(0+128)
  6266  04D8  084D               	movf	(exp@x+2)^(0+128),w
  6267  04D9  00C3               	movwf	(floor@x+2)^(0+128)
  6268  04DA  084C               	movf	(exp@x+1)^(0+128),w
  6269  04DB  00C2               	movwf	(floor@x+1)^(0+128)
  6270  04DC  084B               	movf	exp@x^(0+128),w
  6271  04DD  00C1               	movwf	floor@x^(0+128)
  6272  04DE  25B2               	fcall	_floor
  6273  04DF  0844               	movf	(?_floor+3)^(0+128),w
  6274  04E0  00D2               	movwf	(_exp$1023+3)^(0+128)
  6275  04E1  0843               	movf	(?_floor+2)^(0+128),w
  6276  04E2  00D1               	movwf	(_exp$1023+2)^(0+128)
  6277  04E3  0842               	movf	(?_floor+1)^(0+128),w
  6278  04E4  00D0               	movwf	(_exp$1023+1)^(0+128)
  6279  04E5  0841               	movf	?_floor^(0+128),w
  6280  04E6  00CF               	movwf	_exp$1023^(0+128)
  6281  04E7  0852               	movf	(_exp$1023+3)^(0+128),w
  6282  04E8  00B5               	movwf	(___fltol@f1+3)^(0+128)
  6283  04E9  0851               	movf	(_exp$1023+2)^(0+128),w
  6284  04EA  00B4               	movwf	(___fltol@f1+2)^(0+128)
  6285  04EB  0850               	movf	(_exp$1023+1)^(0+128),w
  6286  04EC  00B3               	movwf	(___fltol@f1+1)^(0+128)
  6287  04ED  084F               	movf	_exp$1023^(0+128),w
  6288  04EE  00B2               	movwf	___fltol@f1^(0+128)
  6289  04EF  160A  118A  26A6  120A  118A  	fcall	___fltol
  6290  04F4  0833               	movf	(?___fltol^(0+128)+1),w
  6291  04F5  00D8               	movwf	(exp@exponent+1)^(0+128)
  6292  04F6  0832               	movf	?___fltol^(0+128),w
  6293  04F7  00D7               	movwf	exp@exponent^(0+128)
  6294  04F8  0858               	movf	(exp@exponent+1)^(0+128),w
  6295  04F9  1283               	bcf	3,5	;RP0=0, select bank0
  6296  04FA  00AC               	movwf	___awtofl@c+1
  6297  04FB  1683               	bsf	3,5	;RP0=1, select bank1
  6298  04FC  0857               	movf	exp@exponent^(0+128),w
  6299  04FD  1283               	bcf	3,5	;RP0=0, select bank0
  6300  04FE  00AB               	movwf	___awtofl@c
  6301  04FF  160A  118A  26FD  120A  118A  	fcall	___awtofl
  6302  0504  082E               	movf	?___awtofl+3,w
  6303  0505  00E3               	movwf	___flsub@f2+3
  6304  0506  082D               	movf	?___awtofl+2,w
  6305  0507  00E2               	movwf	___flsub@f2+2
  6306  0508  082C               	movf	?___awtofl+1,w
  6307  0509  00E1               	movwf	___flsub@f2+1
  6308  050A  082B               	movf	?___awtofl,w
  6309  050B  00E0               	movwf	___flsub@f2
  6310  050C  1683               	bsf	3,5	;RP0=1, select bank1
  6311  050D  084E               	movf	(exp@x+3)^(0+128),w
  6312  050E  1283               	bcf	3,5	;RP0=0, select bank0
  6313  050F  00E7               	movwf	___flsub@f1+3
  6314  0510  1683               	bsf	3,5	;RP0=1, select bank1
  6315  0511  084D               	movf	(exp@x+2)^(0+128),w
  6316  0512  1283               	bcf	3,5	;RP0=0, select bank0
  6317  0513  00E6               	movwf	___flsub@f1+2
  6318  0514  1683               	bsf	3,5	;RP0=1, select bank1
  6319  0515  084C               	movf	(exp@x+1)^(0+128),w
  6320  0516  1283               	bcf	3,5	;RP0=0, select bank0
  6321  0517  00E5               	movwf	___flsub@f1+1
  6322  0518  1683               	bsf	3,5	;RP0=1, select bank1
  6323  0519  084B               	movf	exp@x^(0+128),w
  6324  051A  1283               	bcf	3,5	;RP0=0, select bank0
  6325  051B  00E4               	movwf	___flsub@f1
  6326  051C  160A  118A  271A  120A  118A  	fcall	___flsub
  6327  0521  0863               	movf	?___flsub+3,w
  6328  0522  1683               	bsf	3,5	;RP0=1, select bank1
  6329  0523  00CE               	movwf	(exp@x+3)^(0+128)
  6330  0524  1283               	bcf	3,5	;RP0=0, select bank0
  6331  0525  0862               	movf	?___flsub+2,w
  6332  0526  1683               	bsf	3,5	;RP0=1, select bank1
  6333  0527  00CD               	movwf	(exp@x+2)^(0+128)
  6334  0528  1283               	bcf	3,5	;RP0=0, select bank0
  6335  0529  0861               	movf	?___flsub+1,w
  6336  052A  1683               	bsf	3,5	;RP0=1, select bank1
  6337  052B  00CC               	movwf	(exp@x+1)^(0+128)
  6338  052C  1283               	bcf	3,5	;RP0=0, select bank0
  6339  052D  0860               	movf	?___flsub,w
  6340  052E  1683               	bsf	3,5	;RP0=1, select bank1
  6341  052F  00CB               	movwf	exp@x^(0+128)
  6342  0530  084E               	movf	(exp@x+3)^(0+128),w
  6343  0531  1283               	bcf	3,5	;RP0=0, select bank0
  6344  0532  00E3               	movwf	eval_poly@x+3
  6345  0533  1683               	bsf	3,5	;RP0=1, select bank1
  6346  0534  084D               	movf	(exp@x+2)^(0+128),w
  6347  0535  1283               	bcf	3,5	;RP0=0, select bank0
  6348  0536  00E2               	movwf	eval_poly@x+2
  6349  0537  1683               	bsf	3,5	;RP0=1, select bank1
  6350  0538  084C               	movf	(exp@x+1)^(0+128),w
  6351  0539  1283               	bcf	3,5	;RP0=0, select bank0
  6352  053A  00E1               	movwf	eval_poly@x+1
  6353  053B  1683               	bsf	3,5	;RP0=1, select bank1
  6354  053C  084B               	movf	exp@x^(0+128),w
  6355  053D  1283               	bcf	3,5	;RP0=0, select bank0
  6356  053E  00E0               	movwf	eval_poly@x
  6357  053F  3012               	movlw	low (exp@coeff| (0+32768))
  6358  0540  00E4               	movwf	eval_poly@d
  6359  0541  3098               	movlw	high (exp@coeff| (0+32768))
  6360  0542  00E5               	movwf	eval_poly@d+1
  6361  0543  3009               	movlw	9
  6362  0544  00E6               	movwf	eval_poly@n
  6363  0545  01E7               	clrf	eval_poly@n+1
  6364  0546  120A  158A  2006  120A  118A  	fcall	_eval_poly
  6365  054B  0863               	movf	?_eval_poly+3,w
  6366  054C  1683               	bsf	3,5	;RP0=1, select bank1
  6367  054D  00A7               	movwf	(ldexp@value+3)^(0+128)
  6368  054E  1283               	bcf	3,5	;RP0=0, select bank0
  6369  054F  0862               	movf	?_eval_poly+2,w
  6370  0550  1683               	bsf	3,5	;RP0=1, select bank1
  6371  0551  00A6               	movwf	(ldexp@value+2)^(0+128)
  6372  0552  1283               	bcf	3,5	;RP0=0, select bank0
  6373  0553  0861               	movf	?_eval_poly+1,w
  6374  0554  1683               	bsf	3,5	;RP0=1, select bank1
  6375  0555  00A5               	movwf	(ldexp@value+1)^(0+128)
  6376  0556  1283               	bcf	3,5	;RP0=0, select bank0
  6377  0557  0860               	movf	?_eval_poly,w
  6378  0558  1683               	bsf	3,5	;RP0=1, select bank1
  6379  0559  00A4               	movwf	ldexp@value^(0+128)
  6380  055A  0858               	movf	(exp@exponent+1)^(0+128),w
  6381  055B  00A9               	movwf	(ldexp@newexp+1)^(0+128)
  6382  055C  0857               	movf	exp@exponent^(0+128),w
  6383  055D  00A8               	movwf	ldexp@newexp^(0+128)
  6384  055E  160A  158A  2540  120A  118A  	fcall	_ldexp
  6385  0563  0827               	movf	(?_ldexp+3)^(0+128),w
  6386  0564  00CE               	movwf	(exp@x+3)^(0+128)
  6387  0565  0826               	movf	(?_ldexp+2)^(0+128),w
  6388  0566  00CD               	movwf	(exp@x+2)^(0+128)
  6389  0567  0825               	movf	(?_ldexp+1)^(0+128),w
  6390  0568  00CC               	movwf	(exp@x+1)^(0+128)
  6391  0569  0824               	movf	?_ldexp^(0+128),w
  6392  056A  00CB               	movwf	exp@x^(0+128)
  6393  056B  0859               	movf	exp@sign^(0+128),w
  6394  056C  1903               	btfsc	3,2
  6395  056D  0008               	return
  6396  056E  307F               	movlw	127
  6397  056F  00D6               	movwf	(_exp$755+3)^(0+128)
  6398  0570  00D5               	movwf	(_exp$755+2)^(0+128)
  6399  0571  30FE               	movlw	254
  6400  0572  00D4               	movwf	(_exp$755+1)^(0+128)
  6401  0573  30F7               	movlw	247
  6402  0574  00D3               	movwf	_exp$755^(0+128)
  6403  0575  084E               	movf	(exp@x+3)^(0+128),w
  6404  0576  0656               	xorwf	(_exp$755+3)^(0+128),w
  6405  0577  1D03               	skipz
  6406  0578  2D83               	goto	u3915
  6407  0579  084D               	movf	(exp@x+2)^(0+128),w
  6408  057A  0655               	xorwf	(_exp$755+2)^(0+128),w
  6409  057B  1D03               	skipz
  6410  057C  2D83               	goto	u3915
  6411  057D  084C               	movf	(exp@x+1)^(0+128),w
  6412  057E  0654               	xorwf	(_exp$755+1)^(0+128),w
  6413  057F  1D03               	skipz
  6414  0580  2D83               	goto	u3915
  6415  0581  084B               	movf	exp@x^(0+128),w
  6416  0582  0653               	xorwf	_exp$755^(0+128),w
  6417  0583                     u3915:	
  6418  0583  1D03               	skipz
  6419  0584  2D8A               	goto	l4232
  6420  0585  01CB               	clrf	?_exp^(0+128)
  6421  0586  01CC               	clrf	(?_exp+1)^(0+128)
  6422  0587  01CD               	clrf	(?_exp+2)^(0+128)
  6423  0588  01CE               	clrf	(?_exp+3)^(0+128)
  6424  0589  0008               	return
  6425  058A                     l4232:	
  6426  058A  084E               	movf	(exp@x+3)^(0+128),w
  6427  058B  1283               	bcf	3,5	;RP0=0, select bank0
  6428  058C  00AE               	movwf	___fldiv@f2+3
  6429  058D  1683               	bsf	3,5	;RP0=1, select bank1
  6430  058E  084D               	movf	(exp@x+2)^(0+128),w
  6431  058F  1283               	bcf	3,5	;RP0=0, select bank0
  6432  0590  00AD               	movwf	___fldiv@f2+2
  6433  0591  1683               	bsf	3,5	;RP0=1, select bank1
  6434  0592  084C               	movf	(exp@x+1)^(0+128),w
  6435  0593  1283               	bcf	3,5	;RP0=0, select bank0
  6436  0594  00AC               	movwf	___fldiv@f2+1
  6437  0595  1683               	bsf	3,5	;RP0=1, select bank1
  6438  0596  084B               	movf	exp@x^(0+128),w
  6439  0597  1283               	bcf	3,5	;RP0=0, select bank0
  6440  0598  00AB               	movwf	___fldiv@f2
  6441  0599  303F               	movlw	63
  6442  059A  00B2               	movwf	___fldiv@f1+3
  6443  059B  3080               	movlw	128
  6444  059C  00B1               	movwf	___fldiv@f1+2
  6445  059D  01B0               	clrf	___fldiv@f1+1
  6446  059E  01AF               	clrf	___fldiv@f1
  6447  059F  160A  118A  262D   	fcall	___fldiv
  6448  05A2  082E               	movf	?___fldiv+3,w
  6449  05A3  1683               	bsf	3,5	;RP0=1, select bank1
  6450  05A4  00CE               	movwf	(?_exp+3)^(0+128)
  6451  05A5  1283               	bcf	3,5	;RP0=0, select bank0
  6452  05A6  082D               	movf	?___fldiv+2,w
  6453  05A7  1683               	bsf	3,5	;RP0=1, select bank1
  6454  05A8  00CD               	movwf	(?_exp+2)^(0+128)
  6455  05A9  1283               	bcf	3,5	;RP0=0, select bank0
  6456  05AA  082C               	movf	?___fldiv+1,w
  6457  05AB  1683               	bsf	3,5	;RP0=1, select bank1
  6458  05AC  00CC               	movwf	(?_exp+1)^(0+128)
  6459  05AD  1283               	bcf	3,5	;RP0=0, select bank0
  6460  05AE  082B               	movf	?___fldiv,w
  6461  05AF  1683               	bsf	3,5	;RP0=1, select bank1
  6462  05B0  00CB               	movwf	?_exp^(0+128)
  6463  05B1  0008               	return
  6464  05B2                     __end_of_exp:	
  6465  05B2                     __ptext16:	
  6466 ;; *************** function _floor *****************
  6467 ;; Defined at:
  6468 ;;		line 13 in file "/opt/microchip/xc8/v1.34/sources/common/floor.c"
  6469 ;; Parameters:    Size  Location     Type
  6470 ;;  x               4   33[BANK1 ] int 
  6471 ;; Auto vars:     Size  Location     Type
  6472 ;;  i               4   37[BANK1 ] int 
  6473 ;;  expon           2   41[BANK1 ] int 
  6474 ;; Return value:  Size  Location     Type
  6475 ;;                  4   33[BANK1 ] int 
  6476 ;; Registers used:
  6477 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  6478 ;; Tracked objects:
  6479 ;;		On entry : 300/100
  6480 ;;		On exit  : 300/100
  6481 ;;		Unchanged: 0/0
  6482 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6483 ;;      Params:         0       0       4       0       0
  6484 ;;      Locals:         0       0       6       0       0
  6485 ;;      Temps:          0       0       0       0       0
  6486 ;;      Totals:         0       0      10       0       0
  6487 ;;Total ram usage:       10 bytes
  6488 ;; Hardware stack levels used:    1
  6489 ;; Hardware stack levels required when called:    3
  6490 ;; This function calls:
  6491 ;;		___altofl
  6492 ;;		___fladd
  6493 ;;		___flge
  6494 ;;		___fltol
  6495 ;;		_frexp
  6496 ;; This function is called by:
  6497 ;;		_format_double
  6498 ;;		_exp
  6499 ;; This function uses a non-reentrant model
  6500 ;;
  6501                           
  6502                           
  6503                           ;psect for function _floor
  6504  05B2                     _floor:	
  6505                           
  6506                           ;incstack = 0
  6507                           ; Regs used in _floor: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  6508  05B2  0844               	movf	(floor@x+3)^(0+128),w
  6509  05B3  1283               	bcf	3,5	;RP0=0, select bank0
  6510  05B4  00A4               	movwf	frexp@value+3
  6511  05B5  1683               	bsf	3,5	;RP0=1, select bank1
  6512  05B6  0843               	movf	(floor@x+2)^(0+128),w
  6513  05B7  1283               	bcf	3,5	;RP0=0, select bank0
  6514  05B8  00A3               	movwf	frexp@value+2
  6515  05B9  1683               	bsf	3,5	;RP0=1, select bank1
  6516  05BA  0842               	movf	(floor@x+1)^(0+128),w
  6517  05BB  1283               	bcf	3,5	;RP0=0, select bank0
  6518  05BC  00A2               	movwf	frexp@value+1
  6519  05BD  1683               	bsf	3,5	;RP0=1, select bank1
  6520  05BE  0841               	movf	floor@x^(0+128),w
  6521  05BF  1283               	bcf	3,5	;RP0=0, select bank0
  6522  05C0  00A1               	movwf	frexp@value
  6523  05C1  30C9               	movlw	(low (floor@expon| 0))& (0+255)
  6524  05C2  00A5               	movwf	frexp@eptr
  6525  05C3  275E  120A  118A   	fcall	_frexp
  6526  05C6  1683               	bsf	3,5	;RP0=1, select bank1
  6527  05C7  1FCA               	btfss	(floor@expon+1)^(0+128),7
  6528  05C8  2DF2               	goto	l3976
  6529  05C9  0844               	movf	(floor@x+3)^(0+128),w
  6530  05CA  1283               	bcf	3,5	;RP0=0, select bank0
  6531  05CB  00A4               	movwf	___flge@ff1+3
  6532  05CC  1683               	bsf	3,5	;RP0=1, select bank1
  6533  05CD  0843               	movf	(floor@x+2)^(0+128),w
  6534  05CE  1283               	bcf	3,5	;RP0=0, select bank0
  6535  05CF  00A3               	movwf	___flge@ff1+2
  6536  05D0  1683               	bsf	3,5	;RP0=1, select bank1
  6537  05D1  0842               	movf	(floor@x+1)^(0+128),w
  6538  05D2  1283               	bcf	3,5	;RP0=0, select bank0
  6539  05D3  00A2               	movwf	___flge@ff1+1
  6540  05D4  1683               	bsf	3,5	;RP0=1, select bank1
  6541  05D5  0841               	movf	floor@x^(0+128),w
  6542  05D6  1283               	bcf	3,5	;RP0=0, select bank0
  6543  05D7  00A1               	movwf	___flge@ff1
  6544  05D8  01A5               	clrf	___flge@ff2
  6545  05D9  01A6               	clrf	___flge@ff2+1
  6546  05DA  01A7               	clrf	___flge@ff2+2
  6547  05DB  01A8               	clrf	___flge@ff2+3
  6548  05DC  120A  158A  2730  120A  118A  	fcall	___flge
  6549  05E1  1803               	btfsc	3,0
  6550  05E2  2DEC               	goto	l893
  6551  05E3  30BF               	movlw	191
  6552  05E4  1683               	bsf	3,5	;RP0=1, select bank1
  6553  05E5  00C4               	movwf	(?_floor+3)^(0+128)
  6554  05E6  3080               	movlw	128
  6555  05E7  00C3               	movwf	(?_floor+2)^(0+128)
  6556  05E8  3000               	movlw	0
  6557  05E9  01C2               	clrf	(?_floor+1)^(0+128)
  6558  05EA  01C1               	clrf	?_floor^(0+128)
  6559  05EB  0008               	return
  6560  05EC                     l893:	
  6561  05EC  1683               	bsf	3,5	;RP0=1, select bank1
  6562  05ED  01C1               	clrf	?_floor^(0+128)
  6563  05EE  01C2               	clrf	(?_floor+1)^(0+128)
  6564  05EF  01C3               	clrf	(?_floor+2)^(0+128)
  6565  05F0  01C4               	clrf	(?_floor+3)^(0+128)
  6566  05F1  0008               	return
  6567  05F2                     l3976:	
  6568  05F2  3000               	movlw	0
  6569  05F3  024A               	subwf	(floor@expon+1)^(0+128),w
  6570  05F4  301D               	movlw	29
  6571  05F5  1903               	skipnz
  6572  05F6  0249               	subwf	floor@expon^(0+128),w
  6573  05F7  1803               	btfsc	3,0
  6574  05F8  0008               	return
  6575  05F9  0844               	movf	(floor@x+3)^(0+128),w
  6576  05FA  00B5               	movwf	(___fltol@f1+3)^(0+128)
  6577  05FB  0843               	movf	(floor@x+2)^(0+128),w
  6578  05FC  00B4               	movwf	(___fltol@f1+2)^(0+128)
  6579  05FD  0842               	movf	(floor@x+1)^(0+128),w
  6580  05FE  00B3               	movwf	(___fltol@f1+1)^(0+128)
  6581  05FF  0841               	movf	floor@x^(0+128),w
  6582  0600  00B2               	movwf	___fltol@f1^(0+128)
  6583  0601  160A  118A  26A6  120A  118A  	fcall	___fltol
  6584  0606  0835               	movf	(?___fltol+3)^(0+128),w
  6585  0607  00BF               	movwf	(___altofl@c+3)^(0+128)
  6586  0608  0834               	movf	(?___fltol+2)^(0+128),w
  6587  0609  00BE               	movwf	(___altofl@c+2)^(0+128)
  6588  060A  0833               	movf	(?___fltol+1)^(0+128),w
  6589  060B  00BD               	movwf	(___altofl@c+1)^(0+128)
  6590  060C  0832               	movf	?___fltol^(0+128),w
  6591  060D  00BC               	movwf	___altofl@c^(0+128)
  6592  060E  279C               	fcall	___altofl
  6593  060F  083F               	movf	(?___altofl+3)^(0+128),w
  6594  0610  00C8               	movwf	(floor@i+3)^(0+128)
  6595  0611  083E               	movf	(?___altofl+2)^(0+128),w
  6596  0612  00C7               	movwf	(floor@i+2)^(0+128)
  6597  0613  083D               	movf	(?___altofl+1)^(0+128),w
  6598  0614  00C6               	movwf	(floor@i+1)^(0+128)
  6599  0615  083C               	movf	?___altofl^(0+128),w
  6600  0616  00C5               	movwf	floor@i^(0+128)
  6601  0617  0844               	movf	(floor@x+3)^(0+128),w
  6602  0618  1283               	bcf	3,5	;RP0=0, select bank0
  6603  0619  00A4               	movwf	___flge@ff1+3
  6604  061A  1683               	bsf	3,5	;RP0=1, select bank1
  6605  061B  0843               	movf	(floor@x+2)^(0+128),w
  6606  061C  1283               	bcf	3,5	;RP0=0, select bank0
  6607  061D  00A3               	movwf	___flge@ff1+2
  6608  061E  1683               	bsf	3,5	;RP0=1, select bank1
  6609  061F  0842               	movf	(floor@x+1)^(0+128),w
  6610  0620  1283               	bcf	3,5	;RP0=0, select bank0
  6611  0621  00A2               	movwf	___flge@ff1+1
  6612  0622  1683               	bsf	3,5	;RP0=1, select bank1
  6613  0623  0841               	movf	floor@x^(0+128),w
  6614  0624  1283               	bcf	3,5	;RP0=0, select bank0
  6615  0625  00A1               	movwf	___flge@ff1
  6616  0626  1683               	bsf	3,5	;RP0=1, select bank1
  6617  0627  0848               	movf	(floor@i+3)^(0+128),w
  6618  0628  1283               	bcf	3,5	;RP0=0, select bank0
  6619  0629  00A8               	movwf	___flge@ff2+3
  6620  062A  1683               	bsf	3,5	;RP0=1, select bank1
  6621  062B  0847               	movf	(floor@i+2)^(0+128),w
  6622  062C  1283               	bcf	3,5	;RP0=0, select bank0
  6623  062D  00A7               	movwf	___flge@ff2+2
  6624  062E  1683               	bsf	3,5	;RP0=1, select bank1
  6625  062F  0846               	movf	(floor@i+1)^(0+128),w
  6626  0630  1283               	bcf	3,5	;RP0=0, select bank0
  6627  0631  00A6               	movwf	___flge@ff2+1
  6628  0632  1683               	bsf	3,5	;RP0=1, select bank1
  6629  0633  0845               	movf	floor@i^(0+128),w
  6630  0634  1283               	bcf	3,5	;RP0=0, select bank0
  6631  0635  00A5               	movwf	___flge@ff2
  6632  0636  120A  158A  2730  120A  118A  	fcall	___flge
  6633  063B  1803               	btfsc	3,0
  6634  063C  2E66               	goto	l3986
  6635  063D  30BF               	movlw	191
  6636  063E  00D4               	movwf	___fladd@f1+3
  6637  063F  3080               	movlw	128
  6638  0640  00D3               	movwf	___fladd@f1+2
  6639  0641  01D2               	clrf	___fladd@f1+1
  6640  0642  01D1               	clrf	___fladd@f1
  6641  0643  1683               	bsf	3,5	;RP0=1, select bank1
  6642  0644  0848               	movf	(floor@i+3)^(0+128),w
  6643  0645  1283               	bcf	3,5	;RP0=0, select bank0
  6644  0646  00D8               	movwf	___fladd@f2+3
  6645  0647  1683               	bsf	3,5	;RP0=1, select bank1
  6646  0648  0847               	movf	(floor@i+2)^(0+128),w
  6647  0649  1283               	bcf	3,5	;RP0=0, select bank0
  6648  064A  00D7               	movwf	___fladd@f2+2
  6649  064B  1683               	bsf	3,5	;RP0=1, select bank1
  6650  064C  0846               	movf	(floor@i+1)^(0+128),w
  6651  064D  1283               	bcf	3,5	;RP0=0, select bank0
  6652  064E  00D6               	movwf	___fladd@f2+1
  6653  064F  1683               	bsf	3,5	;RP0=1, select bank1
  6654  0650  0845               	movf	floor@i^(0+128),w
  6655  0651  1283               	bcf	3,5	;RP0=0, select bank0
  6656  0652  00D5               	movwf	___fladd@f2
  6657  0653  120A  158A  20C5   	fcall	___fladd
  6658  0656  0854               	movf	?___fladd+3,w
  6659  0657  1683               	bsf	3,5	;RP0=1, select bank1
  6660  0658  00C4               	movwf	(?_floor+3)^(0+128)
  6661  0659  1283               	bcf	3,5	;RP0=0, select bank0
  6662  065A  0853               	movf	?___fladd+2,w
  6663  065B  1683               	bsf	3,5	;RP0=1, select bank1
  6664  065C  00C3               	movwf	(?_floor+2)^(0+128)
  6665  065D  1283               	bcf	3,5	;RP0=0, select bank0
  6666  065E  0852               	movf	?___fladd+1,w
  6667  065F  1683               	bsf	3,5	;RP0=1, select bank1
  6668  0660  00C2               	movwf	(?_floor+1)^(0+128)
  6669  0661  1283               	bcf	3,5	;RP0=0, select bank0
  6670  0662  0851               	movf	?___fladd,w
  6671  0663  1683               	bsf	3,5	;RP0=1, select bank1
  6672  0664  00C1               	movwf	?_floor^(0+128)
  6673  0665  0008               	return
  6674  0666                     l3986:	
  6675  0666  1683               	bsf	3,5	;RP0=1, select bank1
  6676  0667  0848               	movf	(floor@i+3)^(0+128),w
  6677  0668  00C4               	movwf	(?_floor+3)^(0+128)
  6678  0669  0847               	movf	(floor@i+2)^(0+128),w
  6679  066A  00C3               	movwf	(?_floor+2)^(0+128)
  6680  066B  0846               	movf	(floor@i+1)^(0+128),w
  6681  066C  00C2               	movwf	(?_floor+1)^(0+128)
  6682  066D  0845               	movf	floor@i^(0+128),w
  6683  066E  00C1               	movwf	?_floor^(0+128)
  6684  066F  0008               	return
  6685  0670                     __end_of_floor:	
  6686  0670                     __ptext23:	
  6687 ;; *************** function _log *****************
  6688 ;; Defined at:
  6689 ;;		line 5 in file "/opt/microchip/xc8/v1.34/sources/common/log.c"
  6690 ;; Parameters:    Size  Location     Type
  6691 ;;  x               4    4[BANK1 ] unsigned long 
  6692 ;; Auto vars:     Size  Location     Type
  6693 ;;  exponent        2    8[BANK1 ] int 
  6694 ;; Return value:  Size  Location     Type
  6695 ;;                  4    4[BANK1 ] int 
  6696 ;; Registers used:
  6697 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  6698 ;; Tracked objects:
  6699 ;;		On entry : 300/100
  6700 ;;		On exit  : 300/100
  6701 ;;		Unchanged: 0/0
  6702 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6703 ;;      Params:         0       0       4       0       0
  6704 ;;      Locals:         0       0       2       0       0
  6705 ;;      Temps:          0       0       0       0       0
  6706 ;;      Totals:         0       0       6       0       0
  6707 ;;Total ram usage:        6 bytes
  6708 ;; Hardware stack levels used:    1
  6709 ;; Hardware stack levels required when called:    4
  6710 ;; This function calls:
  6711 ;;		___awtofl
  6712 ;;		___fladd
  6713 ;;		___flge
  6714 ;;		___flmul
  6715 ;;		_eval_poly
  6716 ;;		_frexp
  6717 ;; This function is called by:
  6718 ;;		_log10
  6719 ;;		_pow
  6720 ;; This function uses a non-reentrant model
  6721 ;;
  6722                           
  6723                           
  6724                           ;psect for function _log
  6725  0670                     _log:	
  6726                           
  6727                           ;incstack = 0
  6728                           ; Regs used in _log: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  6729  0670  0827               	movf	(log@x+3)^(0+128),w
  6730  0671  1283               	bcf	3,5	;RP0=0, select bank0
  6731  0672  00A4               	movwf	___flge@ff1+3
  6732  0673  1683               	bsf	3,5	;RP0=1, select bank1
  6733  0674  0826               	movf	(log@x+2)^(0+128),w
  6734  0675  1283               	bcf	3,5	;RP0=0, select bank0
  6735  0676  00A3               	movwf	___flge@ff1+2
  6736  0677  1683               	bsf	3,5	;RP0=1, select bank1
  6737  0678  0825               	movf	(log@x+1)^(0+128),w
  6738  0679  1283               	bcf	3,5	;RP0=0, select bank0
  6739  067A  00A2               	movwf	___flge@ff1+1
  6740  067B  1683               	bsf	3,5	;RP0=1, select bank1
  6741  067C  0824               	movf	log@x^(0+128),w
  6742  067D  1283               	bcf	3,5	;RP0=0, select bank0
  6743  067E  00A1               	movwf	___flge@ff1
  6744  067F  01A5               	clrf	___flge@ff2
  6745  0680  01A6               	clrf	___flge@ff2+1
  6746  0681  01A7               	clrf	___flge@ff2+2
  6747  0682  01A8               	clrf	___flge@ff2+3
  6748  0683  120A  158A  2730  120A  118A  	fcall	___flge
  6749  0688  1803               	btfsc	3,0
  6750  0689  2E90               	goto	l4126
  6751  068A  1683               	bsf	3,5	;RP0=1, select bank1
  6752  068B  01A4               	clrf	?_log^(0+128)
  6753  068C  01A5               	clrf	(?_log+1)^(0+128)
  6754  068D  01A6               	clrf	(?_log+2)^(0+128)
  6755  068E  01A7               	clrf	(?_log+3)^(0+128)
  6756  068F  0008               	return
  6757  0690                     l4126:	
  6758  0690  1683               	bsf	3,5	;RP0=1, select bank1
  6759  0691  0827               	movf	(log@x+3)^(0+128),w
  6760  0692  0426               	iorwf	(log@x+2)^(0+128),w
  6761  0693  0425               	iorwf	(log@x+1)^(0+128),w
  6762  0694  0424               	iorwf	log@x^(0+128),w
  6763  0695  1D03               	skipz
  6764  0696  2E9C               	goto	l4130
  6765  0697  01A4               	clrf	?_log^(0+128)
  6766  0698  01A5               	clrf	(?_log+1)^(0+128)
  6767  0699  01A6               	clrf	(?_log+2)^(0+128)
  6768  069A  01A7               	clrf	(?_log+3)^(0+128)
  6769  069B  0008               	return
  6770  069C                     l4130:	
  6771  069C  30BF               	movlw	191
  6772  069D  1283               	bcf	3,5	;RP0=0, select bank0
  6773  069E  00D4               	movwf	___fladd@f1+3
  6774  069F  3080               	movlw	128
  6775  06A0  00D3               	movwf	___fladd@f1+2
  6776  06A1  3040               	movlw	64
  6777  06A2  01D2               	clrf	___fladd@f1+1
  6778  06A3  01D1               	clrf	___fladd@f1
  6779  06A4  00C1               	movwf	___flmul@f1+3
  6780  06A5  30A8               	movlw	(low (log@exponent| 0))& (0+255)
  6781  06A6  01C0               	clrf	___flmul@f1+2
  6782  06A7  01BF               	clrf	___flmul@f1+1
  6783  06A8  01BE               	clrf	___flmul@f1
  6784  06A9  00A5               	movwf	frexp@eptr
  6785  06AA  1683               	bsf	3,5	;RP0=1, select bank1
  6786  06AB  0827               	movf	(log@x+3)^(0+128),w
  6787  06AC  1283               	bcf	3,5	;RP0=0, select bank0
  6788  06AD  00A4               	movwf	frexp@value+3
  6789  06AE  1683               	bsf	3,5	;RP0=1, select bank1
  6790  06AF  0826               	movf	(log@x+2)^(0+128),w
  6791  06B0  1283               	bcf	3,5	;RP0=0, select bank0
  6792  06B1  00A3               	movwf	frexp@value+2
  6793  06B2  1683               	bsf	3,5	;RP0=1, select bank1
  6794  06B3  0825               	movf	(log@x+1)^(0+128),w
  6795  06B4  1283               	bcf	3,5	;RP0=0, select bank0
  6796  06B5  00A2               	movwf	frexp@value+1
  6797  06B6  1683               	bsf	3,5	;RP0=1, select bank1
  6798  06B7  0824               	movf	log@x^(0+128),w
  6799  06B8  1283               	bcf	3,5	;RP0=0, select bank0
  6800  06B9  00A1               	movwf	frexp@value
  6801  06BA  275E               	fcall	_frexp
  6802  06BB  0824               	movf	?_frexp+3,w
  6803  06BC  00C5               	movwf	___flmul@f2+3
  6804  06BD  0823               	movf	?_frexp+2,w
  6805  06BE  00C4               	movwf	___flmul@f2+2
  6806  06BF  0822               	movf	?_frexp+1,w
  6807  06C0  00C3               	movwf	___flmul@f2+1
  6808  06C1  0821               	movf	?_frexp,w
  6809  06C2  00C2               	movwf	___flmul@f2
  6810  06C3  120A  158A  2698  120A  118A  	fcall	___flmul
  6811  06C8  0841               	movf	?___flmul+3,w
  6812  06C9  00D8               	movwf	___fladd@f2+3
  6813  06CA  0840               	movf	?___flmul+2,w
  6814  06CB  00D7               	movwf	___fladd@f2+2
  6815  06CC  083F               	movf	?___flmul+1,w
  6816  06CD  00D6               	movwf	___fladd@f2+1
  6817  06CE  083E               	movf	?___flmul,w
  6818  06CF  00D5               	movwf	___fladd@f2
  6819  06D0  120A  158A  20C5  120A  118A  	fcall	___fladd
  6820  06D5  0854               	movf	?___fladd+3,w
  6821  06D6  1683               	bsf	3,5	;RP0=1, select bank1
  6822  06D7  00A7               	movwf	(log@x+3)^(0+128)
  6823  06D8  1283               	bcf	3,5	;RP0=0, select bank0
  6824  06D9  0853               	movf	?___fladd+2,w
  6825  06DA  1683               	bsf	3,5	;RP0=1, select bank1
  6826  06DB  00A6               	movwf	(log@x+2)^(0+128)
  6827  06DC  1283               	bcf	3,5	;RP0=0, select bank0
  6828  06DD  0852               	movf	?___fladd+1,w
  6829  06DE  1683               	bsf	3,5	;RP0=1, select bank1
  6830  06DF  00A5               	movwf	(log@x+1)^(0+128)
  6831  06E0  1283               	bcf	3,5	;RP0=0, select bank0
  6832  06E1  0851               	movf	?___fladd,w
  6833  06E2  1683               	bsf	3,5	;RP0=1, select bank1
  6834  06E3  00A4               	movwf	log@x^(0+128)
  6835  06E4  30FF               	movlw	-1
  6836  06E5  07A8               	addwf	log@exponent^(0+128),f
  6837  06E6  1C03               	skipc
  6838  06E7  03A9               	decf	(log@exponent+1)^(0+128),f
  6839  06E8  0827               	movf	(log@x+3)^(0+128),w
  6840  06E9  1283               	bcf	3,5	;RP0=0, select bank0
  6841  06EA  00E3               	movwf	eval_poly@x+3
  6842  06EB  1683               	bsf	3,5	;RP0=1, select bank1
  6843  06EC  0826               	movf	(log@x+2)^(0+128),w
  6844  06ED  1283               	bcf	3,5	;RP0=0, select bank0
  6845  06EE  00E2               	movwf	eval_poly@x+2
  6846  06EF  1683               	bsf	3,5	;RP0=1, select bank1
  6847  06F0  0825               	movf	(log@x+1)^(0+128),w
  6848  06F1  1283               	bcf	3,5	;RP0=0, select bank0
  6849  06F2  00E1               	movwf	eval_poly@x+1
  6850  06F3  1683               	bsf	3,5	;RP0=1, select bank1
  6851  06F4  0824               	movf	log@x^(0+128),w
  6852  06F5  1283               	bcf	3,5	;RP0=0, select bank0
  6853  06F6  00E0               	movwf	eval_poly@x
  6854  06F7  303A               	movlw	low (log@coeff| (0+32768))
  6855  06F8  00E4               	movwf	eval_poly@d
  6856  06F9  3098               	movlw	high (log@coeff| (0+32768))
  6857  06FA  00E5               	movwf	eval_poly@d+1
  6858  06FB  3008               	movlw	8
  6859  06FC  00E6               	movwf	eval_poly@n
  6860  06FD  01E7               	clrf	eval_poly@n+1
  6861  06FE  120A  158A  2006  120A  118A  	fcall	_eval_poly
  6862  0703  0863               	movf	?_eval_poly+3,w
  6863  0704  1683               	bsf	3,5	;RP0=1, select bank1
  6864  0705  00A7               	movwf	(log@x+3)^(0+128)
  6865  0706  1283               	bcf	3,5	;RP0=0, select bank0
  6866  0707  0862               	movf	?_eval_poly+2,w
  6867  0708  1683               	bsf	3,5	;RP0=1, select bank1
  6868  0709  00A6               	movwf	(log@x+2)^(0+128)
  6869  070A  1283               	bcf	3,5	;RP0=0, select bank0
  6870  070B  0861               	movf	?_eval_poly+1,w
  6871  070C  1683               	bsf	3,5	;RP0=1, select bank1
  6872  070D  00A5               	movwf	(log@x+1)^(0+128)
  6873  070E  1283               	bcf	3,5	;RP0=0, select bank0
  6874  070F  0860               	movf	?_eval_poly,w
  6875  0710  1683               	bsf	3,5	;RP0=1, select bank1
  6876  0711  00A4               	movwf	log@x^(0+128)
  6877  0712  0827               	movf	(log@x+3)^(0+128),w
  6878  0713  1283               	bcf	3,5	;RP0=0, select bank0
  6879  0714  00D4               	movwf	___fladd@f1+3
  6880  0715  1683               	bsf	3,5	;RP0=1, select bank1
  6881  0716  0826               	movf	(log@x+2)^(0+128),w
  6882  0717  1283               	bcf	3,5	;RP0=0, select bank0
  6883  0718  00D3               	movwf	___fladd@f1+2
  6884  0719  1683               	bsf	3,5	;RP0=1, select bank1
  6885  071A  0825               	movf	(log@x+1)^(0+128),w
  6886  071B  1283               	bcf	3,5	;RP0=0, select bank0
  6887  071C  00D2               	movwf	___fladd@f1+1
  6888  071D  1683               	bsf	3,5	;RP0=1, select bank1
  6889  071E  0824               	movf	log@x^(0+128),w
  6890  071F  1283               	bcf	3,5	;RP0=0, select bank0
  6891  0720  00D1               	movwf	___fladd@f1
  6892  0721  303F               	movlw	63
  6893  0722  00C1               	movwf	___flmul@f1+3
  6894  0723  3031               	movlw	49
  6895  0724  00C0               	movwf	___flmul@f1+2
  6896  0725  3072               	movlw	114
  6897  0726  00BF               	movwf	___flmul@f1+1
  6898  0727  3018               	movlw	24
  6899  0728  00BE               	movwf	___flmul@f1
  6900  0729  1683               	bsf	3,5	;RP0=1, select bank1
  6901  072A  0829               	movf	(log@exponent+1)^(0+128),w
  6902  072B  1283               	bcf	3,5	;RP0=0, select bank0
  6903  072C  00AC               	movwf	___awtofl@c+1
  6904  072D  1683               	bsf	3,5	;RP0=1, select bank1
  6905  072E  0828               	movf	log@exponent^(0+128),w
  6906  072F  1283               	bcf	3,5	;RP0=0, select bank0
  6907  0730  00AB               	movwf	___awtofl@c
  6908  0731  160A  118A  26FD  120A  118A  	fcall	___awtofl
  6909  0736  082E               	movf	?___awtofl+3,w
  6910  0737  00C5               	movwf	___flmul@f2+3
  6911  0738  082D               	movf	?___awtofl+2,w
  6912  0739  00C4               	movwf	___flmul@f2+2
  6913  073A  082C               	movf	?___awtofl+1,w
  6914  073B  00C3               	movwf	___flmul@f2+1
  6915  073C  082B               	movf	?___awtofl,w
  6916  073D  00C2               	movwf	___flmul@f2
  6917  073E  120A  158A  2698  120A  118A  	fcall	___flmul
  6918  0743  0841               	movf	?___flmul+3,w
  6919  0744  00D8               	movwf	___fladd@f2+3
  6920  0745  0840               	movf	?___flmul+2,w
  6921  0746  00D7               	movwf	___fladd@f2+2
  6922  0747  083F               	movf	?___flmul+1,w
  6923  0748  00D6               	movwf	___fladd@f2+1
  6924  0749  083E               	movf	?___flmul,w
  6925  074A  00D5               	movwf	___fladd@f2
  6926  074B  120A  158A  20C5   	fcall	___fladd
  6927  074E  0854               	movf	?___fladd+3,w
  6928  074F  1683               	bsf	3,5	;RP0=1, select bank1
  6929  0750  00A7               	movwf	(?_log+3)^(0+128)
  6930  0751  1283               	bcf	3,5	;RP0=0, select bank0
  6931  0752  0853               	movf	?___fladd+2,w
  6932  0753  1683               	bsf	3,5	;RP0=1, select bank1
  6933  0754  00A6               	movwf	(?_log+2)^(0+128)
  6934  0755  1283               	bcf	3,5	;RP0=0, select bank0
  6935  0756  0852               	movf	?___fladd+1,w
  6936  0757  1683               	bsf	3,5	;RP0=1, select bank1
  6937  0758  00A5               	movwf	(?_log+1)^(0+128)
  6938  0759  1283               	bcf	3,5	;RP0=0, select bank0
  6939  075A  0851               	movf	?___fladd,w
  6940  075B  1683               	bsf	3,5	;RP0=1, select bank1
  6941  075C  00A4               	movwf	?_log^(0+128)
  6942  075D  0008               	return
  6943  075E                     __end_of_log:	
  6944  075E                     __ptext24:	
  6945 ;; *************** function _frexp *****************
  6946 ;; Defined at:
  6947 ;;		line 254 in file "/opt/microchip/xc8/v1.34/sources/common/frexp.c"
  6948 ;; Parameters:    Size  Location     Type
  6949 ;;  value           4    0[BANK0 ] int 
  6950 ;;  eptr            1    4[BANK0 ] PTR int 
  6951 ;;		 -> log@exponent(2), floor@expon(2), 
  6952 ;; Auto vars:     Size  Location     Type
  6953 ;;		None
  6954 ;; Return value:  Size  Location     Type
  6955 ;;                  4    0[BANK0 ] PTR int 
  6956 ;; Registers used:
  6957 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
  6958 ;; Tracked objects:
  6959 ;;		On entry : 300/0
  6960 ;;		On exit  : B00/0
  6961 ;;		Unchanged: 0/0
  6962 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6963 ;;      Params:         0       5       0       0       0
  6964 ;;      Locals:         0       0       0       0       0
  6965 ;;      Temps:          2       0       0       0       0
  6966 ;;      Totals:         2       5       0       0       0
  6967 ;;Total ram usage:        7 bytes
  6968 ;; Hardware stack levels used:    1
  6969 ;; Hardware stack levels required when called:    1
  6970 ;; This function calls:
  6971 ;;		Nothing
  6972 ;; This function is called by:
  6973 ;;		_floor
  6974 ;;		_log
  6975 ;; This function uses a non-reentrant model
  6976 ;;
  6977                           
  6978                           
  6979                           ;psect for function _frexp
  6980  075E                     _frexp:	
  6981                           
  6982                           ;incstack = 0
  6983                           ; Regs used in _frexp: [wreg-fsr0h+status,2+status,0+btemp+1]
  6984  075E  0824               	movf	frexp@value+3,w
  6985  075F  0423               	iorwf	frexp@value+2,w
  6986  0760  0422               	iorwf	frexp@value+1,w
  6987  0761  0421               	iorwf	frexp@value,w
  6988  0762  1D03               	skipz
  6989  0763  2F6F               	goto	l3900
  6990  0764  0825               	movf	frexp@eptr,w
  6991  0765  0084               	movwf	4
  6992  0766  1383               	bcf	3,7	;select IRP bank0
  6993  0767  0180               	clrf	0
  6994  0768  0A84               	incf	4,f
  6995  0769  0180               	clrf	0
  6996  076A  01A1               	clrf	?_frexp
  6997  076B  01A2               	clrf	?_frexp+1
  6998  076C  01A3               	clrf	?_frexp+2
  6999  076D  01A4               	clrf	?_frexp+3
  7000  076E  0008               	return
  7001  076F                     l3900:	
  7002  076F  0824               	movf	frexp@value+3,w
  7003  0770  397F               	andlw	127
  7004  0771  00F4               	movwf	??_frexp
  7005  0772  01F5               	clrf	??_frexp+1
  7006  0773  1003               	clrc
  7007  0774  0DF4               	rlf	??_frexp,f
  7008  0775  0DF5               	rlf	??_frexp+1,f
  7009  0776  0825               	movf	frexp@eptr,w
  7010  0777  0084               	movwf	4
  7011  0778  0874               	movf	??_frexp,w
  7012  0779  1383               	bcf	3,7	;select IRP bank0
  7013  077A  0080               	movwf	0
  7014  077B  0A84               	incf	4,f
  7015  077C  0875               	movf	??_frexp+1,w
  7016  077D  0080               	movwf	0
  7017  077E  0D23               	rlf	frexp@value+2,w
  7018  077F  0D23               	rlf	frexp@value+2,w
  7019  0780  3901               	andlw	1
  7020  0781  00F4               	movwf	??_frexp
  7021  0782  01F5               	clrf	??_frexp+1
  7022  0783  0825               	movf	frexp@eptr,w
  7023  0784  0084               	movwf	4
  7024  0785  0874               	movf	??_frexp,w
  7025  0786  0480               	iorwf	0,f
  7026  0787  0A84               	incf	4,f
  7027  0788  0875               	movf	??_frexp+1,w
  7028  0789  0480               	iorwf	0,f
  7029  078A  0825               	movf	frexp@eptr,w
  7030  078B  0084               	movwf	4
  7031  078C  3082               	movlw	130
  7032  078D  0780               	addwf	0,f
  7033  078E  0F84               	incfsz	4,f
  7034  078F  0800               	movf	0,w
  7035  0790  1803               	skipnc
  7036  0791  0A00               	incf	0,w
  7037  0792  00FF               	movwf	127
  7038  0793  3EFF               	addlw	255
  7039  0794  0080               	movwf	0
  7040  0795  0384               	decf	4,f
  7041  0796  0824               	movf	frexp@value+3,w
  7042  0797  3980               	andlw	-128
  7043  0798  383F               	iorlw	63
  7044  0799  00A4               	movwf	frexp@value+3
  7045  079A  13A3               	bcf	frexp@value+2,7
  7046  079B  0008               	return
  7047  079C                     __end_of_frexp:	
  7048  079C                     __ptext18:	
  7049 ;; *************** function ___altofl *****************
  7050 ;; Defined at:
  7051 ;;		line 36 in file "/opt/microchip/xc8/v1.34/sources/common/altofl.c"
  7052 ;; Parameters:    Size  Location     Type
  7053 ;;  c               4   28[BANK1 ] long 
  7054 ;; Auto vars:     Size  Location     Type
  7055 ;;  sign            1   32[BANK1 ] unsigned char 
  7056 ;; Return value:  Size  Location     Type
  7057 ;;                  4   28[BANK1 ] unsigned char 
  7058 ;; Registers used:
  7059 ;;		wreg, status,2, status,0, pclath, cstack
  7060 ;; Tracked objects:
  7061 ;;		On entry : 300/100
  7062 ;;		On exit  : 300/100
  7063 ;;		Unchanged: 0/0
  7064 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7065 ;;      Params:         0       0       4       0       0
  7066 ;;      Locals:         0       0       1       0       0
  7067 ;;      Temps:          0       0       0       0       0
  7068 ;;      Totals:         0       0       5       0       0
  7069 ;;Total ram usage:        5 bytes
  7070 ;; Hardware stack levels used:    1
  7071 ;; Hardware stack levels required when called:    2
  7072 ;; This function calls:
  7073 ;;		___flpack
  7074 ;; This function is called by:
  7075 ;;		_floor
  7076 ;; This function uses a non-reentrant model
  7077 ;;
  7078                           
  7079                           
  7080                           ;psect for function ___altofl
  7081  079C                     ___altofl:	
  7082                           
  7083                           ;incstack = 0
  7084                           ; Regs used in ___altofl: [wreg+status,2+status,0+pclath+cstack]
  7085  079C  01C0               	clrf	___altofl@sign^(0+128)
  7086  079D  1FBF               	btfss	(___altofl@c+3)^(0+128),7
  7087  079E  2FAC               	goto	l3738
  7088  079F  09BC               	comf	___altofl@c^(0+128),f
  7089  07A0  09BD               	comf	(___altofl@c+1)^(0+128),f
  7090  07A1  09BE               	comf	(___altofl@c+2)^(0+128),f
  7091  07A2  09BF               	comf	(___altofl@c+3)^(0+128),f
  7092  07A3  0ABC               	incf	___altofl@c^(0+128),f
  7093  07A4  1903               	skipnz
  7094  07A5  0ABD               	incf	(___altofl@c+1)^(0+128),f
  7095  07A6  1903               	skipnz
  7096  07A7  0ABE               	incf	(___altofl@c+2)^(0+128),f
  7097  07A8  1903               	skipnz
  7098  07A9  0ABF               	incf	(___altofl@c+3)^(0+128),f
  7099  07AA  01C0               	clrf	___altofl@sign^(0+128)
  7100  07AB  0AC0               	incf	___altofl@sign^(0+128),f
  7101  07AC                     l3738:	
  7102  07AC  083F               	movf	(___altofl@c+3)^(0+128),w
  7103  07AD  1283               	bcf	3,5	;RP0=0, select bank0
  7104  07AE  00A4               	movwf	___flpack@arg+3
  7105  07AF  1683               	bsf	3,5	;RP0=1, select bank1
  7106  07B0  083E               	movf	(___altofl@c+2)^(0+128),w
  7107  07B1  1283               	bcf	3,5	;RP0=0, select bank0
  7108  07B2  00A3               	movwf	___flpack@arg+2
  7109  07B3  1683               	bsf	3,5	;RP0=1, select bank1
  7110  07B4  083D               	movf	(___altofl@c+1)^(0+128),w
  7111  07B5  1283               	bcf	3,5	;RP0=0, select bank0
  7112  07B6  00A2               	movwf	___flpack@arg+1
  7113  07B7  1683               	bsf	3,5	;RP0=1, select bank1
  7114  07B8  083C               	movf	___altofl@c^(0+128),w
  7115  07B9  1283               	bcf	3,5	;RP0=0, select bank0
  7116  07BA  00A1               	movwf	___flpack@arg
  7117  07BB  3096               	movlw	150
  7118  07BC  00A5               	movwf	___flpack@exp
  7119  07BD  1683               	bsf	3,5	;RP0=1, select bank1
  7120  07BE  0840               	movf	___altofl@sign^(0+128),w
  7121  07BF  1283               	bcf	3,5	;RP0=0, select bank0
  7122  07C0  00A6               	movwf	___flpack@sign
  7123  07C1  160A  118A  279E   	fcall	___flpack
  7124  07C4  0824               	movf	?___flpack+3,w
  7125  07C5  1683               	bsf	3,5	;RP0=1, select bank1
  7126  07C6  00BF               	movwf	(?___altofl+3)^(0+128)
  7127  07C7  1283               	bcf	3,5	;RP0=0, select bank0
  7128  07C8  0823               	movf	?___flpack+2,w
  7129  07C9  1683               	bsf	3,5	;RP0=1, select bank1
  7130  07CA  00BE               	movwf	(?___altofl+2)^(0+128)
  7131  07CB  1283               	bcf	3,5	;RP0=0, select bank0
  7132  07CC  0822               	movf	?___flpack+1,w
  7133  07CD  1683               	bsf	3,5	;RP0=1, select bank1
  7134  07CE  00BD               	movwf	(?___altofl+1)^(0+128)
  7135  07CF  1283               	bcf	3,5	;RP0=0, select bank0
  7136  07D0  0821               	movf	?___flpack,w
  7137  07D1  1683               	bsf	3,5	;RP0=1, select bank1
  7138  07D2  00BC               	movwf	?___altofl^(0+128)
  7139  07D3  0008               	return
  7140  07D4                     __end_of___altofl:	
  7141  07D4                     __ptext15:	
  7142 ;; *************** function ___flneg *****************
  7143 ;; Defined at:
  7144 ;;		line 15 in file "/opt/microchip/xc8/v1.34/sources/common/flneg.c"
  7145 ;; Parameters:    Size  Location     Type
  7146 ;;  f1              4    0[BANK0 ] int 
  7147 ;; Auto vars:     Size  Location     Type
  7148 ;;		None
  7149 ;; Return value:  Size  Location     Type
  7150 ;;                  4    0[BANK0 ] int 
  7151 ;; Registers used:
  7152 ;;		wreg
  7153 ;; Tracked objects:
  7154 ;;		On entry : 300/0
  7155 ;;		On exit  : 300/0
  7156 ;;		Unchanged: 0/0
  7157 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7158 ;;      Params:         0       4       0       0       0
  7159 ;;      Locals:         0       0       0       0       0
  7160 ;;      Temps:          0       0       0       0       0
  7161 ;;      Totals:         0       4       0       0       0
  7162 ;;Total ram usage:        4 bytes
  7163 ;; Hardware stack levels used:    1
  7164 ;; Hardware stack levels required when called:    1
  7165 ;; This function calls:
  7166 ;;		Nothing
  7167 ;; This function is called by:
  7168 ;;		_ldexp
  7169 ;;		_pow
  7170 ;;		_exp
  7171 ;; This function uses a non-reentrant model
  7172 ;;
  7173                           
  7174                           
  7175                           ;psect for function ___flneg
  7176  07D4                     ___flneg:	
  7177                           
  7178                           ;incstack = 0
  7179                           ; Regs used in ___flneg: [wreg]
  7180  07D4  0824               	movf	___flneg@f1+3,w
  7181  07D5  0423               	iorwf	___flneg@f1+2,w
  7182  07D6  0422               	iorwf	___flneg@f1+1,w
  7183  07D7  0421               	iorwf	___flneg@f1,w
  7184  07D8  1903               	skipnz
  7185  07D9  0008               	return
  7186  07DA  3080               	movlw	128
  7187  07DB  06A4               	xorwf	___flneg@f1+3,f
  7188  07DC  0008               	return
  7189  07DD                     __end_of___flneg:	
  7190                           
  7191                           	psect	text14
  7192  1D40                     __ptext14:	
  7193 ;; *************** function _ldexp *****************
  7194 ;; Defined at:
  7195 ;;		line 277 in file "/opt/microchip/xc8/v1.34/sources/common/frexp.c"
  7196 ;; Parameters:    Size  Location     Type
  7197 ;;  value           4    4[BANK1 ] unsigned char 
  7198 ;;  newexp          2    8[BANK1 ] int 
  7199 ;; Auto vars:     Size  Location     Type
  7200 ;;		None
  7201 ;; Return value:  Size  Location     Type
  7202 ;;                  4    4[BANK1 ] int 
  7203 ;; Registers used:
  7204 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  7205 ;; Tracked objects:
  7206 ;;		On entry : 300/100
  7207 ;;		On exit  : 300/100
  7208 ;;		Unchanged: 0/0
  7209 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7210 ;;      Params:         0       0       6       0       0
  7211 ;;      Locals:         0       0       4       0       0
  7212 ;;      Temps:          0       0       2       0       0
  7213 ;;      Totals:         0       0      12       0       0
  7214 ;;Total ram usage:       12 bytes
  7215 ;; Hardware stack levels used:    1
  7216 ;; Hardware stack levels required when called:    2
  7217 ;; This function calls:
  7218 ;;		___flge
  7219 ;;		___flneg
  7220 ;; This function is called by:
  7221 ;;		_exp
  7222 ;; This function uses a non-reentrant model
  7223 ;;
  7224                           
  7225                           
  7226                           ;psect for function _ldexp
  7227  1D40                     _ldexp:	
  7228                           
  7229                           ;incstack = 0
  7230                           ; Regs used in _ldexp: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  7231  1D40  0827               	movf	(ldexp@value+3)^(0+128),w
  7232  1D41  0426               	iorwf	(ldexp@value+2)^(0+128),w
  7233  1D42  0425               	iorwf	(ldexp@value+1)^(0+128),w
  7234  1D43  0424               	iorwf	ldexp@value^(0+128),w
  7235  1D44  1D03               	skipz
  7236  1D45  2D4B               	goto	l4052
  7237  1D46  01A4               	clrf	?_ldexp^(0+128)
  7238  1D47  01A5               	clrf	(?_ldexp+1)^(0+128)
  7239  1D48  01A6               	clrf	(?_ldexp+2)^(0+128)
  7240  1D49  01A7               	clrf	(?_ldexp+3)^(0+128)
  7241  1D4A  0008               	return
  7242  1D4B                     l4052:	
  7243  1D4B  0827               	movf	(ldexp@value^(0+128)+3),w
  7244  1D4C  397F               	andlw	127
  7245  1D4D  00AA               	movwf	??_ldexp^(0+128)
  7246  1D4E  01AB               	clrf	(??_ldexp^(0+128)+1)
  7247  1D4F  1003               	clrc
  7248  1D50  0DAA               	rlf	??_ldexp^(0+128),f
  7249  1D51  0DAB               	rlf	(??_ldexp^(0+128)+1),f
  7250  1D52  082A               	movf	??_ldexp^(0+128),w
  7251  1D53  07A8               	addwf	ldexp@newexp^(0+128),f
  7252  1D54  1803               	skipnc
  7253  1D55  0AA9               	incf	(ldexp@newexp+1)^(0+128),f
  7254  1D56  082B               	movf	(??_ldexp+1)^(0+128),w
  7255  1D57  07A9               	addwf	(ldexp@newexp+1)^(0+128),f
  7256  1D58  0D26               	rlf	(ldexp@value^(0+128)+2),w
  7257  1D59  0D26               	rlf	(ldexp@value^(0+128)+2),w
  7258  1D5A  3901               	andlw	1
  7259  1D5B  07A8               	addwf	ldexp@newexp^(0+128),f
  7260  1D5C  1803               	skipnc
  7261  1D5D  0AA9               	incf	(ldexp@newexp+1)^(0+128),f
  7262  1D5E  1FA9               	btfss	(ldexp@newexp+1)^(0+128),7
  7263  1D5F  2D65               	goto	l4060
  7264  1D60  01A4               	clrf	?_ldexp^(0+128)
  7265  1D61  01A5               	clrf	(?_ldexp+1)^(0+128)
  7266  1D62  01A6               	clrf	(?_ldexp+2)^(0+128)
  7267  1D63  01A7               	clrf	(?_ldexp+3)^(0+128)
  7268  1D64  0008               	return
  7269  1D65                     l4060:	
  7270  1D65  0829               	movf	(ldexp@newexp+1)^(0+128),w
  7271  1D66  3A80               	xorlw	128
  7272  1D67  00FF               	movwf	127
  7273  1D68  3081               	movlw	129
  7274  1D69  027F               	subwf	127,w
  7275  1D6A  1D03               	skipz
  7276  1D6B  2D6E               	goto	u3675
  7277  1D6C  3000               	movlw	0
  7278  1D6D  0228               	subwf	ldexp@newexp^(0+128),w
  7279  1D6E                     u3675:	
  7280  1D6E  1C03               	skipc
  7281  1D6F  2DBE               	goto	l4082
  7282  1D70  1683               	bsf	3,5	;RP0=1, select bank1
  7283  1D71  1303               	bcf	3,6	;RP1=0, select bank1
  7284  1D72  0827               	movf	(ldexp@value+3)^(0+128),w
  7285  1D73  1283               	bcf	3,5	;RP0=0, select bank0
  7286  1D74  00A4               	movwf	___flge@ff1+3
  7287  1D75  1683               	bsf	3,5	;RP0=1, select bank1
  7288  1D76  0826               	movf	(ldexp@value+2)^(0+128),w
  7289  1D77  1283               	bcf	3,5	;RP0=0, select bank0
  7290  1D78  00A3               	movwf	___flge@ff1+2
  7291  1D79  1683               	bsf	3,5	;RP0=1, select bank1
  7292  1D7A  0825               	movf	(ldexp@value+1)^(0+128),w
  7293  1D7B  1283               	bcf	3,5	;RP0=0, select bank0
  7294  1D7C  00A2               	movwf	___flge@ff1+1
  7295  1D7D  1683               	bsf	3,5	;RP0=1, select bank1
  7296  1D7E  0824               	movf	ldexp@value^(0+128),w
  7297  1D7F  1283               	bcf	3,5	;RP0=0, select bank0
  7298  1D80  00A1               	movwf	___flge@ff1
  7299  1D81  01A5               	clrf	___flge@ff2
  7300  1D82  01A6               	clrf	___flge@ff2+1
  7301  1D83  01A7               	clrf	___flge@ff2+2
  7302  1D84  01A8               	clrf	___flge@ff2+3
  7303  1D85  120A  158A  2730  160A  158A  	fcall	___flge
  7304  1D8A  307F               	movlw	127
  7305  1D8B  1803               	btfsc	3,0
  7306  1D8C  2DB6               	goto	L8
  7307  1D8D  1683               	bsf	3,5	;RP0=1, select bank1
  7308  1D8E  00AF               	movwf	(_ldexp$661+3)^(0+128)
  7309  1D8F  00AE               	movwf	(_ldexp$661+2)^(0+128)
  7310  1D90  30FE               	movlw	254
  7311  1D91  00AD               	movwf	(_ldexp$661+1)^(0+128)
  7312  1D92  30F7               	movlw	247
  7313  1D93  00AC               	movwf	_ldexp$661^(0+128)
  7314  1D94  082F               	movf	(_ldexp$661+3)^(0+128),w
  7315  1D95  1283               	bcf	3,5	;RP0=0, select bank0
  7316  1D96  00A4               	movwf	___flneg@f1+3
  7317  1D97  1683               	bsf	3,5	;RP0=1, select bank1
  7318  1D98  082E               	movf	(_ldexp$661+2)^(0+128),w
  7319  1D99  1283               	bcf	3,5	;RP0=0, select bank0
  7320  1D9A  00A3               	movwf	___flneg@f1+2
  7321  1D9B  1683               	bsf	3,5	;RP0=1, select bank1
  7322  1D9C  082D               	movf	(_ldexp$661+1)^(0+128),w
  7323  1D9D  1283               	bcf	3,5	;RP0=0, select bank0
  7324  1D9E  00A2               	movwf	___flneg@f1+1
  7325  1D9F  1683               	bsf	3,5	;RP0=1, select bank1
  7326  1DA0  082C               	movf	_ldexp$661^(0+128),w
  7327  1DA1  1283               	bcf	3,5	;RP0=0, select bank0
  7328  1DA2  00A1               	movwf	___flneg@f1
  7329  1DA3  120A  118A  27D4   	fcall	___flneg
  7330  1DA6  0824               	movf	?___flneg+3,w
  7331  1DA7  1683               	bsf	3,5	;RP0=1, select bank1
  7332  1DA8  00A7               	movwf	(?_ldexp+3)^(0+128)
  7333  1DA9  1283               	bcf	3,5	;RP0=0, select bank0
  7334  1DAA  0823               	movf	?___flneg+2,w
  7335  1DAB  1683               	bsf	3,5	;RP0=1, select bank1
  7336  1DAC  00A6               	movwf	(?_ldexp+2)^(0+128)
  7337  1DAD  1283               	bcf	3,5	;RP0=0, select bank0
  7338  1DAE  0822               	movf	?___flneg+1,w
  7339  1DAF  1683               	bsf	3,5	;RP0=1, select bank1
  7340  1DB0  00A5               	movwf	(?_ldexp+1)^(0+128)
  7341  1DB1  1283               	bcf	3,5	;RP0=0, select bank0
  7342  1DB2  0821               	movf	?___flneg,w
  7343  1DB3  1683               	bsf	3,5	;RP0=1, select bank1
  7344  1DB4  00A4               	movwf	?_ldexp^(0+128)
  7345  1DB5  0008               	return
  7346  1DB6                     L8:	
  7347  1DB6  1683               	bsf	3,5	;RP0=1, select bank1
  7348  1DB7  00A7               	movwf	(?_ldexp+3)^(0+128)
  7349  1DB8  00A6               	movwf	(?_ldexp+2)^(0+128)
  7350  1DB9  30FE               	movlw	254
  7351  1DBA  00A5               	movwf	(?_ldexp+1)^(0+128)
  7352  1DBB  30F7               	movlw	247
  7353  1DBC  00A4               	movwf	?_ldexp^(0+128)
  7354  1DBD  0008               	return
  7355  1DBE                     l4082:	
  7356  1DBE  1683               	bsf	3,5	;RP0=1, select bank1
  7357  1DBF  1303               	bcf	3,6	;RP1=0, select bank1
  7358  1DC0  0829               	movf	(ldexp@newexp+1)^(0+128),w
  7359  1DC1  00AB               	movwf	(??_ldexp^(0+128)+1)
  7360  1DC2  0828               	movf	ldexp@newexp^(0+128),w
  7361  1DC3  00AA               	movwf	??_ldexp^(0+128)
  7362  1DC4  0D2B               	rlf	(??_ldexp^(0+128)+1),w
  7363  1DC5  0CAB               	rrf	(??_ldexp^(0+128)+1),f
  7364  1DC6  0CAA               	rrf	??_ldexp^(0+128),f
  7365  1DC7  0827               	movf	(ldexp@value^(0+128)+3),w
  7366  1DC8  062A               	xorwf	??_ldexp^(0+128),w
  7367  1DC9  3980               	andlw	-128
  7368  1DCA  062A               	xorwf	??_ldexp^(0+128),w
  7369  1DCB  00A7               	movwf	(ldexp@value^(0+128)+3)
  7370  1DCC  0828               	movf	ldexp@newexp^(0+128),w
  7371  1DCD  3901               	andlw	1
  7372  1DCE  00AA               	movwf	??_ldexp^(0+128)
  7373  1DCF  0CAA               	rrf	??_ldexp^(0+128),f
  7374  1DD0  0CAA               	rrf	??_ldexp^(0+128),f
  7375  1DD1  0826               	movf	(ldexp@value^(0+128)+2),w
  7376  1DD2  062A               	xorwf	??_ldexp^(0+128),w
  7377  1DD3  397F               	andlw	-129
  7378  1DD4  062A               	xorwf	??_ldexp^(0+128),w
  7379  1DD5  00A6               	movwf	(ldexp@value^(0+128)+2)
  7380  1DD6  0008               	return
  7381  1DD7                     __end_of_ldexp:	
  7382                           
  7383                           	psect	text22
  7384  1C7D                     __ptext22:	
  7385 ;; *************** function _log10 *****************
  7386 ;; Defined at:
  7387 ;;		line 39 in file "/opt/microchip/xc8/v1.34/sources/common/log.c"
  7388 ;; Parameters:    Size  Location     Type
  7389 ;;  x               4   10[BANK1 ] unsigned long 
  7390 ;; Auto vars:     Size  Location     Type
  7391 ;;		None
  7392 ;; Return value:  Size  Location     Type
  7393 ;;                  4   10[BANK1 ] unsigned long 
  7394 ;; Registers used:
  7395 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  7396 ;; Tracked objects:
  7397 ;;		On entry : 300/100
  7398 ;;		On exit  : 300/100
  7399 ;;		Unchanged: 0/0
  7400 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7401 ;;      Params:         0       0       4       0       0
  7402 ;;      Locals:         0       0       4       0       0
  7403 ;;      Temps:          0       0       0       0       0
  7404 ;;      Totals:         0       0       8       0       0
  7405 ;;Total ram usage:        8 bytes
  7406 ;; Hardware stack levels used:    1
  7407 ;; Hardware stack levels required when called:    5
  7408 ;; This function calls:
  7409 ;;		___flmul
  7410 ;;		_log
  7411 ;; This function is called by:
  7412 ;;		_format_double
  7413 ;; This function uses a non-reentrant model
  7414 ;;
  7415                           
  7416                           
  7417                           ;psect for function _log10
  7418  1C7D                     _log10:	
  7419                           
  7420                           ;incstack = 0
  7421                           ; Regs used in _log10: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  7422  1C7D  082D               	movf	(log10@x+3)^(0+128),w
  7423  1C7E  00A7               	movwf	(log@x+3)^(0+128)
  7424  1C7F  082C               	movf	(log10@x+2)^(0+128),w
  7425  1C80  00A6               	movwf	(log@x+2)^(0+128)
  7426  1C81  082B               	movf	(log10@x+1)^(0+128),w
  7427  1C82  00A5               	movwf	(log@x+1)^(0+128)
  7428  1C83  082A               	movf	log10@x^(0+128),w
  7429  1C84  00A4               	movwf	log@x^(0+128)
  7430  1C85  120A  118A  2670  160A  158A  	fcall	_log
  7431  1C8A  0827               	movf	(?_log+3)^(0+128),w
  7432  1C8B  00B1               	movwf	(_log10$1020+3)^(0+128)
  7433  1C8C  0826               	movf	(?_log+2)^(0+128),w
  7434  1C8D  00B0               	movwf	(_log10$1020+2)^(0+128)
  7435  1C8E  0825               	movf	(?_log+1)^(0+128),w
  7436  1C8F  00AF               	movwf	(_log10$1020+1)^(0+128)
  7437  1C90  0824               	movf	?_log^(0+128),w
  7438  1C91  00AE               	movwf	_log10$1020^(0+128)
  7439  1C92  303E               	movlw	62
  7440  1C93  1283               	bcf	3,5	;RP0=0, select bank0
  7441  1C94  00C1               	movwf	___flmul@f1+3
  7442  1C95  30DE               	movlw	222
  7443  1C96  00C0               	movwf	___flmul@f1+2
  7444  1C97  305B               	movlw	91
  7445  1C98  00BF               	movwf	___flmul@f1+1
  7446  1C99  30D9               	movlw	217
  7447  1C9A  00BE               	movwf	___flmul@f1
  7448  1C9B  1683               	bsf	3,5	;RP0=1, select bank1
  7449  1C9C  0831               	movf	(_log10$1020+3)^(0+128),w
  7450  1C9D  1283               	bcf	3,5	;RP0=0, select bank0
  7451  1C9E  00C5               	movwf	___flmul@f2+3
  7452  1C9F  1683               	bsf	3,5	;RP0=1, select bank1
  7453  1CA0  0830               	movf	(_log10$1020+2)^(0+128),w
  7454  1CA1  1283               	bcf	3,5	;RP0=0, select bank0
  7455  1CA2  00C4               	movwf	___flmul@f2+2
  7456  1CA3  1683               	bsf	3,5	;RP0=1, select bank1
  7457  1CA4  082F               	movf	(_log10$1020+1)^(0+128),w
  7458  1CA5  1283               	bcf	3,5	;RP0=0, select bank0
  7459  1CA6  00C3               	movwf	___flmul@f2+1
  7460  1CA7  1683               	bsf	3,5	;RP0=1, select bank1
  7461  1CA8  082E               	movf	_log10$1020^(0+128),w
  7462  1CA9  1283               	bcf	3,5	;RP0=0, select bank0
  7463  1CAA  00C2               	movwf	___flmul@f2
  7464  1CAB  120A  158A  2698   	fcall	___flmul
  7465  1CAE  0841               	movf	?___flmul+3,w
  7466  1CAF  1683               	bsf	3,5	;RP0=1, select bank1
  7467  1CB0  00AD               	movwf	(?_log10+3)^(0+128)
  7468  1CB1  1283               	bcf	3,5	;RP0=0, select bank0
  7469  1CB2  0840               	movf	?___flmul+2,w
  7470  1CB3  1683               	bsf	3,5	;RP0=1, select bank1
  7471  1CB4  00AC               	movwf	(?_log10+2)^(0+128)
  7472  1CB5  1283               	bcf	3,5	;RP0=0, select bank0
  7473  1CB6  083F               	movf	?___flmul+1,w
  7474  1CB7  1683               	bsf	3,5	;RP0=1, select bank1
  7475  1CB8  00AB               	movwf	(?_log10+1)^(0+128)
  7476  1CB9  1283               	bcf	3,5	;RP0=0, select bank0
  7477  1CBA  083E               	movf	?___flmul,w
  7478  1CBB  1683               	bsf	3,5	;RP0=1, select bank1
  7479  1CBC  00AA               	movwf	?_log10^(0+128)
  7480  1CBD  0008               	return
  7481  1CBE                     __end_of_log10:	
  7482                           
  7483                           	psect	text25
  7484  0806                     __ptext25:	
  7485 ;; *************** function _eval_poly *****************
  7486 ;; Defined at:
  7487 ;;		line 4 in file "/opt/microchip/xc8/v1.34/sources/common/evalpoly.c"
  7488 ;; Parameters:    Size  Location     Type
  7489 ;;  x               4   63[BANK0 ] PTR int 
  7490 ;;  d               2   67[BANK0 ] PTR const 
  7491 ;;		 -> exp@coeff(40), log@coeff(36), 
  7492 ;;  n               2   69[BANK0 ] int 
  7493 ;; Auto vars:     Size  Location     Type
  7494 ;;  res             4    0[BANK1 ] int 
  7495 ;; Return value:  Size  Location     Type
  7496 ;;                  4   63[BANK0 ] int 
  7497 ;; Registers used:
  7498 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  7499 ;; Tracked objects:
  7500 ;;		On entry : 300/0
  7501 ;;		On exit  : 300/0
  7502 ;;		Unchanged: 0/0
  7503 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7504 ;;      Params:         0       8       0       0       0
  7505 ;;      Locals:         0       0       4       0       0
  7506 ;;      Temps:          0       8       0       0       0
  7507 ;;      Totals:         0      16       4       0       0
  7508 ;;Total ram usage:       20 bytes
  7509 ;; Hardware stack levels used:    1
  7510 ;; Hardware stack levels required when called:    3
  7511 ;; This function calls:
  7512 ;;		___fladd
  7513 ;;		___flmul
  7514 ;; This function is called by:
  7515 ;;		_log
  7516 ;;		_exp
  7517 ;; This function uses a non-reentrant model
  7518 ;;
  7519                           
  7520                           
  7521                           ;psect for function _eval_poly
  7522  0806                     _eval_poly:	
  7523                           
  7524                           ;incstack = 0
  7525 ;; using string table level
  7526                           ; Regs used in _eval_poly: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  7527  0806  0866               	movf	eval_poly@n,w
  7528  0807  00E8               	movwf	??_eval_poly
  7529  0808  1003               	clrc
  7530  0809  0DE8               	rlf	??_eval_poly,f
  7531  080A  1003               	clrc
  7532  080B  0DE8               	rlf	??_eval_poly,f
  7533  080C  0868               	movf	??_eval_poly,w
  7534  080D  0764               	addwf	eval_poly@d,w
  7535  080E  00EA               	movwf	??_eval_poly+2
  7536  080F  0865               	movf	eval_poly@d+1,w
  7537  0810  00E9               	movwf	??_eval_poly+1
  7538  0811  1803               	skipnc
  7539  0812  0AE9               	incf	??_eval_poly+1,f
  7540  0813  1BE8               	btfsc	??_eval_poly,7
  7541  0814  03E9               	decf	??_eval_poly+1,f
  7542  0815  1283               	bcf	3,5	;RP0=0, select bank0
  7543  0816  1303               	bcf	3,6	;RP1=0, select bank0
  7544  0817  0869               	movf	??_eval_poly+1,w
  7545  0818  00EB               	movwf	??_eval_poly+3
  7546  0819  00FF               	movwf	127
  7547  081A  086A               	movf	??_eval_poly+2,w
  7548  081B  0084               	movwf	4
  7549  081C  160A  158A  2000  120A  158A  	fcall	stringtab
  7550  0821  00EC               	movwf	??_eval_poly+4
  7551  0822  160A  158A  2000  120A  158A  	fcall	stringtab
  7552  0827  00ED               	movwf	??_eval_poly+5
  7553  0828  160A  158A  2000  120A  158A  	fcall	stringtab
  7554  082D  00EE               	movwf	??_eval_poly+6
  7555  082E  160A  158A  2000  120A  158A  	fcall	stringtab
  7556  0833  00EF               	movwf	??_eval_poly+7
  7557  0834  1683               	bsf	3,5	;RP0=1, select bank1
  7558  0835  00A3               	movwf	(eval_poly@res+3)^(0+128)
  7559  0836  1283               	bcf	3,5	;RP0=0, select bank0
  7560  0837  086E               	movf	??_eval_poly+6,w
  7561  0838  1683               	bsf	3,5	;RP0=1, select bank1
  7562  0839  00A2               	movwf	(eval_poly@res+2)^(0+128)
  7563  083A  1283               	bcf	3,5	;RP0=0, select bank0
  7564  083B  086D               	movf	??_eval_poly+5,w
  7565  083C  1683               	bsf	3,5	;RP0=1, select bank1
  7566  083D  00A1               	movwf	(eval_poly@res+1)^(0+128)
  7567  083E  1283               	bcf	3,5	;RP0=0, select bank0
  7568  083F  086C               	movf	??_eval_poly+4,w
  7569  0840                     L10:	
  7570  0840  1683               	bsf	3,5	;RP0=1, select bank1
  7571  0841  00A0               	movwf	eval_poly@res^(0+128)
  7572  0842  1283               	bcf	3,5	;RP0=0, select bank0
  7573  0843  0866               	movf	eval_poly@n,w
  7574  0844  0467               	iorwf	eval_poly@n+1,w
  7575  0845  1903               	btfsc	3,2
  7576  0846  28B4               	goto	l4094
  7577  0847  30FF               	movlw	-1
  7578  0848  07E6               	addwf	eval_poly@n,f
  7579  0849  1C03               	skipc
  7580  084A  03E7               	decf	eval_poly@n+1,f
  7581  084B  0866               	movf	eval_poly@n,w
  7582  084C  00E8               	movwf	??_eval_poly
  7583  084D  1003               	clrc
  7584  084E  0DE8               	rlf	??_eval_poly,f
  7585  084F  1003               	clrc
  7586  0850  0DE8               	rlf	??_eval_poly,f
  7587  0851  0868               	movf	??_eval_poly,w
  7588  0852  0764               	addwf	eval_poly@d,w
  7589  0853  00EA               	movwf	??_eval_poly+2
  7590  0854  0865               	movf	eval_poly@d+1,w
  7591  0855  00E9               	movwf	??_eval_poly+1
  7592  0856  1803               	skipnc
  7593  0857  0AE9               	incf	??_eval_poly+1,f
  7594  0858  1BE8               	btfsc	??_eval_poly,7
  7595  0859  03E9               	decf	??_eval_poly+1,f
  7596  085A  1283               	bcf	3,5	;RP0=0, select bank0
  7597  085B  1303               	bcf	3,6	;RP1=0, select bank0
  7598  085C  0869               	movf	??_eval_poly+1,w
  7599  085D  00EB               	movwf	??_eval_poly+3
  7600  085E  00FF               	movwf	127
  7601  085F  086A               	movf	??_eval_poly+2,w
  7602  0860  0084               	movwf	4
  7603  0861  160A  158A  2000  120A  158A  	fcall	stringtab
  7604  0866  00EC               	movwf	??_eval_poly+4
  7605  0867  160A  158A  2000  120A  158A  	fcall	stringtab
  7606  086C  00ED               	movwf	??_eval_poly+5
  7607  086D  160A  158A  2000  120A  158A  	fcall	stringtab
  7608  0872  00EE               	movwf	??_eval_poly+6
  7609  0873  160A  158A  2000  120A  158A  	fcall	stringtab
  7610  0878  00EF               	movwf	??_eval_poly+7
  7611  0879  00D4               	movwf	___fladd@f1+3
  7612  087A  086E               	movf	??_eval_poly+6,w
  7613  087B  00D3               	movwf	___fladd@f1+2
  7614  087C  086D               	movf	??_eval_poly+5,w
  7615  087D  00D2               	movwf	___fladd@f1+1
  7616  087E  086C               	movf	??_eval_poly+4,w
  7617  087F  00D1               	movwf	___fladd@f1
  7618  0880  1683               	bsf	3,5	;RP0=1, select bank1
  7619  0881  0823               	movf	(eval_poly@res+3)^(0+128),w
  7620  0882  1283               	bcf	3,5	;RP0=0, select bank0
  7621  0883  00C1               	movwf	___flmul@f1+3
  7622  0884  1683               	bsf	3,5	;RP0=1, select bank1
  7623  0885  0822               	movf	(eval_poly@res+2)^(0+128),w
  7624  0886  1283               	bcf	3,5	;RP0=0, select bank0
  7625  0887  00C0               	movwf	___flmul@f1+2
  7626  0888  1683               	bsf	3,5	;RP0=1, select bank1
  7627  0889  0821               	movf	(eval_poly@res+1)^(0+128),w
  7628  088A  1283               	bcf	3,5	;RP0=0, select bank0
  7629  088B  00BF               	movwf	___flmul@f1+1
  7630  088C  1683               	bsf	3,5	;RP0=1, select bank1
  7631  088D  0820               	movf	eval_poly@res^(0+128),w
  7632  088E  1283               	bcf	3,5	;RP0=0, select bank0
  7633  088F  00BE               	movwf	___flmul@f1
  7634  0890  0863               	movf	eval_poly@x+3,w
  7635  0891  00C5               	movwf	___flmul@f2+3
  7636  0892  0862               	movf	eval_poly@x+2,w
  7637  0893  00C4               	movwf	___flmul@f2+2
  7638  0894  0861               	movf	eval_poly@x+1,w
  7639  0895  00C3               	movwf	___flmul@f2+1
  7640  0896  0860               	movf	eval_poly@x,w
  7641  0897  00C2               	movwf	___flmul@f2
  7642  0898  2698  120A  158A   	fcall	___flmul
  7643  089B  0841               	movf	?___flmul+3,w
  7644  089C  00D8               	movwf	___fladd@f2+3
  7645  089D  0840               	movf	?___flmul+2,w
  7646  089E  00D7               	movwf	___fladd@f2+2
  7647  089F  083F               	movf	?___flmul+1,w
  7648  08A0  00D6               	movwf	___fladd@f2+1
  7649  08A1  083E               	movf	?___flmul,w
  7650  08A2  00D5               	movwf	___fladd@f2
  7651  08A3  20C5  120A  158A   	fcall	___fladd
  7652  08A6  0854               	movf	?___fladd+3,w
  7653  08A7  1683               	bsf	3,5	;RP0=1, select bank1
  7654  08A8  00A3               	movwf	(eval_poly@res+3)^(0+128)
  7655  08A9  1283               	bcf	3,5	;RP0=0, select bank0
  7656  08AA  0853               	movf	?___fladd+2,w
  7657  08AB  1683               	bsf	3,5	;RP0=1, select bank1
  7658  08AC  00A2               	movwf	(eval_poly@res+2)^(0+128)
  7659  08AD  1283               	bcf	3,5	;RP0=0, select bank0
  7660  08AE  0852               	movf	?___fladd+1,w
  7661  08AF  1683               	bsf	3,5	;RP0=1, select bank1
  7662  08B0  00A1               	movwf	(eval_poly@res+1)^(0+128)
  7663  08B1  1283               	bcf	3,5	;RP0=0, select bank0
  7664  08B2  0851               	movf	?___fladd,w
  7665  08B3  2840               	goto	L10
  7666  08B4                     l4094:	
  7667  08B4  1683               	bsf	3,5	;RP0=1, select bank1
  7668  08B5  0823               	movf	(eval_poly@res+3)^(0+128),w
  7669  08B6  1283               	bcf	3,5	;RP0=0, select bank0
  7670  08B7  00E3               	movwf	?_eval_poly+3
  7671  08B8  1683               	bsf	3,5	;RP0=1, select bank1
  7672  08B9  0822               	movf	(eval_poly@res+2)^(0+128),w
  7673  08BA  1283               	bcf	3,5	;RP0=0, select bank0
  7674  08BB  00E2               	movwf	?_eval_poly+2
  7675  08BC  1683               	bsf	3,5	;RP0=1, select bank1
  7676  08BD  0821               	movf	(eval_poly@res+1)^(0+128),w
  7677  08BE  1283               	bcf	3,5	;RP0=0, select bank0
  7678  08BF  00E1               	movwf	?_eval_poly+1
  7679  08C0  1683               	bsf	3,5	;RP0=1, select bank1
  7680  08C1  0820               	movf	eval_poly@res^(0+128),w
  7681  08C2  1283               	bcf	3,5	;RP0=0, select bank0
  7682  08C3  00E0               	movwf	?_eval_poly
  7683  08C4  0008               	return
  7684  08C5                     __end_of_eval_poly:	
  7685  08C5                     __ptext27:	
  7686 ;; *************** function ___fladd *****************
  7687 ;; Defined at:
  7688 ;;		line 88 in file "/opt/microchip/xc8/v1.34/sources/common/fladd.c"
  7689 ;; Parameters:    Size  Location     Type
  7690 ;;  f1              4   48[BANK0 ] unsigned char 
  7691 ;;  f2              4   52[BANK0 ] unsigned char 
  7692 ;; Auto vars:     Size  Location     Type
  7693 ;;  exp1            1   62[BANK0 ] unsigned char 
  7694 ;;  exp2            1   61[BANK0 ] unsigned char 
  7695 ;;  sign            1   60[BANK0 ] unsigned char 
  7696 ;; Return value:  Size  Location     Type
  7697 ;;                  4   48[BANK0 ] unsigned char 
  7698 ;; Registers used:
  7699 ;;		wreg, status,2, status,0, pclath, cstack
  7700 ;; Tracked objects:
  7701 ;;		On entry : 300/0
  7702 ;;		On exit  : 300/0
  7703 ;;		Unchanged: 0/0
  7704 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7705 ;;      Params:         0       8       0       0       0
  7706 ;;      Locals:         0       3       0       0       0
  7707 ;;      Temps:          0       4       0       0       0
  7708 ;;      Totals:         0      15       0       0       0
  7709 ;;Total ram usage:       15 bytes
  7710 ;; Hardware stack levels used:    1
  7711 ;; Hardware stack levels required when called:    2
  7712 ;; This function calls:
  7713 ;;		___flpack
  7714 ;; This function is called by:
  7715 ;;		_floor
  7716 ;;		___flsub
  7717 ;;		_log
  7718 ;;		_eval_poly
  7719 ;; This function uses a non-reentrant model
  7720 ;;
  7721                           
  7722                           
  7723                           ;psect for function ___fladd
  7724  08C5                     ___fladd:	
  7725                           
  7726                           ;incstack = 0
  7727                           ; Regs used in ___fladd: [wreg+status,2+status,0+pclath+cstack]
  7728  08C5  0851               	movf	___fladd@f1,w
  7729  08C6  00D9               	movwf	??___fladd
  7730  08C7  0852               	movf	___fladd@f1+1,w
  7731  08C8  00DA               	movwf	??___fladd+1
  7732  08C9  0853               	movf	___fladd@f1+2,w
  7733  08CA  00DB               	movwf	??___fladd+2
  7734  08CB  0854               	movf	___fladd@f1+3,w
  7735  08CC  00DC               	movwf	??___fladd+3
  7736  08CD  1003               	clrc
  7737  08CE  0D5B               	rlf	??___fladd+2,w
  7738  08CF  0D5C               	rlf	??___fladd+3,w
  7739  08D0  00DF               	movwf	___fladd@exp1
  7740  08D1  0855               	movf	___fladd@f2,w
  7741  08D2  00D9               	movwf	??___fladd
  7742  08D3  0856               	movf	___fladd@f2+1,w
  7743  08D4  00DA               	movwf	??___fladd+1
  7744  08D5  0857               	movf	___fladd@f2+2,w
  7745  08D6  00DB               	movwf	??___fladd+2
  7746  08D7  0858               	movf	___fladd@f2+3,w
  7747  08D8  00DC               	movwf	??___fladd+3
  7748  08D9  1003               	clrc
  7749  08DA  0D5B               	rlf	??___fladd+2,w
  7750  08DB  0D5C               	rlf	??___fladd+3,w
  7751  08DC  00DE               	movwf	___fladd@exp2
  7752  08DD  085F               	movf	___fladd@exp1,w
  7753  08DE  1903               	btfsc	3,2
  7754  08DF  28EC               	goto	l3748
  7755  08E0  085E               	movf	___fladd@exp2,w
  7756  08E1  025F               	subwf	___fladd@exp1,w
  7757  08E2  085E               	movf	___fladd@exp2,w
  7758  08E3  1803               	skipnc
  7759  08E4  28F6               	goto	L11
  7760  08E5  00D9               	movwf	??___fladd
  7761  08E6  085F               	movf	___fladd@exp1,w
  7762  08E7  02D9               	subwf	??___fladd,f
  7763  08E8  3021               	movlw	33
  7764  08E9  0259               	subwf	??___fladd,w
  7765  08EA  1C03               	skipc
  7766  08EB  28F5               	goto	l3752
  7767  08EC                     l3748:	
  7768  08EC  0858               	movf	___fladd@f2+3,w
  7769  08ED  00D4               	movwf	?___fladd+3
  7770  08EE  0857               	movf	___fladd@f2+2,w
  7771  08EF  00D3               	movwf	?___fladd+2
  7772  08F0  0856               	movf	___fladd@f2+1,w
  7773  08F1  00D2               	movwf	?___fladd+1
  7774  08F2  0855               	movf	___fladd@f2,w
  7775  08F3  00D1               	movwf	?___fladd
  7776  08F4  0008               	return
  7777  08F5                     l3752:	
  7778  08F5  085E               	movf	___fladd@exp2,w
  7779  08F6                     L11:	
  7780  08F6  1903               	btfsc	3,2
  7781  08F7  0008               	return
  7782  08F8  085F               	movf	___fladd@exp1,w
  7783  08F9  025E               	subwf	___fladd@exp2,w
  7784  08FA  1803               	skipnc
  7785  08FB  2904               	goto	l3758
  7786  08FC  085F               	movf	___fladd@exp1,w
  7787  08FD  00D9               	movwf	??___fladd
  7788  08FE  085E               	movf	___fladd@exp2,w
  7789  08FF  02D9               	subwf	??___fladd,f
  7790  0900  3021               	movlw	33
  7791  0901  0259               	subwf	??___fladd,w
  7792  0902  1803               	btfsc	3,0
  7793  0903  0008               	return
  7794  0904                     l3758:	
  7795  0904  3006               	movlw	6
  7796  0905  00DD               	movwf	___fladd@sign
  7797  0906  1BD4               	btfsc	___fladd@f1+3,7
  7798  0907  17DD               	bsf	___fladd@sign,7
  7799  0908  1BD8               	btfsc	___fladd@f2+3,7
  7800  0909  175D               	bsf	___fladd@sign,6
  7801  090A  17D3               	bsf	___fladd@f1+2,7
  7802  090B  01D4               	clrf	___fladd@f1+3
  7803  090C  17D7               	bsf	___fladd@f2+2,7
  7804  090D  01D8               	clrf	___fladd@f2+3
  7805  090E  085E               	movf	___fladd@exp2,w
  7806  090F  025F               	subwf	___fladd@exp1,w
  7807  0910  1803               	skipnc
  7808  0911  292D               	goto	l3780
  7809  0912                     l3770:	
  7810  0912  1003               	clrc
  7811  0913  0DD5               	rlf	___fladd@f2,f
  7812  0914  0DD6               	rlf	___fladd@f2+1,f
  7813  0915  0DD7               	rlf	___fladd@f2+2,f
  7814  0916  0DD8               	rlf	___fladd@f2+3,f
  7815  0917  03DE               	decf	___fladd@exp2,f
  7816  0918  085E               	movf	___fladd@exp2,w
  7817  0919  065F               	xorwf	___fladd@exp1,w
  7818  091A  1903               	skipnz
  7819  091B  2928               	goto	l3778
  7820  091C  03DD               	decf	___fladd@sign,f
  7821  091D  085D               	movf	___fladd@sign,w
  7822  091E  3907               	andlw	7
  7823  091F  1903               	btfsc	3,2
  7824  0920  2928               	goto	l3778
  7825  0921  2912               	goto	l3770
  7826  0922                     l3776:	
  7827  0922  1003               	clrc
  7828  0923  0CD4               	rrf	___fladd@f1+3,f
  7829  0924  0CD3               	rrf	___fladd@f1+2,f
  7830  0925  0CD2               	rrf	___fladd@f1+1,f
  7831  0926  0CD1               	rrf	___fladd@f1,f
  7832  0927  0ADF               	incf	___fladd@exp1,f
  7833  0928                     l3778:	
  7834  0928  085F               	movf	___fladd@exp1,w
  7835  0929  065E               	xorwf	___fladd@exp2,w
  7836  092A  1903               	btfsc	3,2
  7837  092B  294B               	goto	l844
  7838  092C  2922               	goto	l3776
  7839  092D                     l3780:	
  7840  092D  085F               	movf	___fladd@exp1,w
  7841  092E  025E               	subwf	___fladd@exp2,w
  7842  092F  1803               	skipnc
  7843  0930  294B               	goto	l844
  7844  0931                     l3782:	
  7845  0931  1003               	clrc
  7846  0932  0DD1               	rlf	___fladd@f1,f
  7847  0933  0DD2               	rlf	___fladd@f1+1,f
  7848  0934  0DD3               	rlf	___fladd@f1+2,f
  7849  0935  0DD4               	rlf	___fladd@f1+3,f
  7850  0936  03DF               	decf	___fladd@exp1,f
  7851  0937  085E               	movf	___fladd@exp2,w
  7852  0938  065F               	xorwf	___fladd@exp1,w
  7853  0939  1903               	skipnz
  7854  093A  2947               	goto	l3790
  7855  093B  03DD               	decf	___fladd@sign,f
  7856  093C  085D               	movf	___fladd@sign,w
  7857  093D  3907               	andlw	7
  7858  093E  1903               	btfsc	3,2
  7859  093F  2947               	goto	l3790
  7860  0940  2931               	goto	l3782
  7861  0941                     l3788:	
  7862  0941  1003               	clrc
  7863  0942  0CD8               	rrf	___fladd@f2+3,f
  7864  0943  0CD7               	rrf	___fladd@f2+2,f
  7865  0944  0CD6               	rrf	___fladd@f2+1,f
  7866  0945  0CD5               	rrf	___fladd@f2,f
  7867  0946  0ADE               	incf	___fladd@exp2,f
  7868  0947                     l3790:	
  7869  0947  085F               	movf	___fladd@exp1,w
  7870  0948  065E               	xorwf	___fladd@exp2,w
  7871  0949  1D03               	skipz
  7872  094A  2941               	goto	l3788
  7873  094B                     l844:	
  7874  094B  1FDD               	btfss	___fladd@sign,7
  7875  094C  2959               	goto	l3796
  7876  094D  30FF               	movlw	255
  7877  094E  06D1               	xorwf	___fladd@f1,f
  7878  094F  06D2               	xorwf	___fladd@f1+1,f
  7879  0950  06D3               	xorwf	___fladd@f1+2,f
  7880  0951  06D4               	xorwf	___fladd@f1+3,f
  7881  0952  0AD1               	incf	___fladd@f1,f
  7882  0953  1903               	skipnz
  7883  0954  0AD2               	incf	___fladd@f1+1,f
  7884  0955  1903               	skipnz
  7885  0956  0AD3               	incf	___fladd@f1+2,f
  7886  0957  1903               	skipnz
  7887  0958  0AD4               	incf	___fladd@f1+3,f
  7888  0959                     l3796:	
  7889  0959  1F5D               	btfss	___fladd@sign,6
  7890  095A  2967               	goto	l3802
  7891  095B  30FF               	movlw	255
  7892  095C  06D5               	xorwf	___fladd@f2,f
  7893  095D  06D6               	xorwf	___fladd@f2+1,f
  7894  095E  06D7               	xorwf	___fladd@f2+2,f
  7895  095F  06D8               	xorwf	___fladd@f2+3,f
  7896  0960  0AD5               	incf	___fladd@f2,f
  7897  0961  1903               	skipnz
  7898  0962  0AD6               	incf	___fladd@f2+1,f
  7899  0963  1903               	skipnz
  7900  0964  0AD7               	incf	___fladd@f2+2,f
  7901  0965  1903               	skipnz
  7902  0966  0AD8               	incf	___fladd@f2+3,f
  7903  0967                     l3802:	
  7904  0967  01DD               	clrf	___fladd@sign
  7905  0968  0851               	movf	___fladd@f1,w
  7906  0969  07D5               	addwf	___fladd@f2,f
  7907  096A  0852               	movf	___fladd@f1+1,w
  7908  096B  1103               	clrz
  7909  096C  1803               	skipnc
  7910  096D  3E01               	addlw	1
  7911  096E  1D03               	btfss	3,2
  7912  096F  07D6               	addwf	___fladd@f2+1,f
  7913  0970  0853               	movf	___fladd@f1+2,w
  7914  0971  1103               	clrz
  7915  0972  1803               	skipnc
  7916  0973  3E01               	addlw	1
  7917  0974  1D03               	btfss	3,2
  7918  0975  07D7               	addwf	___fladd@f2+2,f
  7919  0976  0854               	movf	___fladd@f1+3,w
  7920  0977  1103               	clrz
  7921  0978  1803               	skipnc
  7922  0979  3E01               	addlw	1
  7923  097A  1D03               	btfss	3,2
  7924  097B  07D8               	addwf	___fladd@f2+3,f
  7925  097C  1FD8               	btfss	___fladd@f2+3,7
  7926  097D  298C               	goto	l3814
  7927  097E  30FF               	movlw	255
  7928  097F  06D5               	xorwf	___fladd@f2,f
  7929  0980  06D6               	xorwf	___fladd@f2+1,f
  7930  0981  06D7               	xorwf	___fladd@f2+2,f
  7931  0982  06D8               	xorwf	___fladd@f2+3,f
  7932  0983  0AD5               	incf	___fladd@f2,f
  7933  0984  1903               	skipnz
  7934  0985  0AD6               	incf	___fladd@f2+1,f
  7935  0986  1903               	skipnz
  7936  0987  0AD7               	incf	___fladd@f2+2,f
  7937  0988  1903               	skipnz
  7938  0989  0AD8               	incf	___fladd@f2+3,f
  7939  098A  01DD               	clrf	___fladd@sign
  7940  098B  0ADD               	incf	___fladd@sign,f
  7941  098C                     l3814:	
  7942  098C  0858               	movf	___fladd@f2+3,w
  7943  098D  00A4               	movwf	___flpack@arg+3
  7944  098E  0857               	movf	___fladd@f2+2,w
  7945  098F  00A3               	movwf	___flpack@arg+2
  7946  0990  0856               	movf	___fladd@f2+1,w
  7947  0991  00A2               	movwf	___flpack@arg+1
  7948  0992  0855               	movf	___fladd@f2,w
  7949  0993  00A1               	movwf	___flpack@arg
  7950  0994  085F               	movf	___fladd@exp1,w
  7951  0995  00A5               	movwf	___flpack@exp
  7952  0996  085D               	movf	___fladd@sign,w
  7953  0997  00A6               	movwf	___flpack@sign
  7954  0998  160A  118A  279E   	fcall	___flpack
  7955  099B  0824               	movf	?___flpack+3,w
  7956  099C  00D4               	movwf	?___fladd+3
  7957  099D  0823               	movf	?___flpack+2,w
  7958  099E  00D3               	movwf	?___fladd+2
  7959  099F  0822               	movf	?___flpack+1,w
  7960  09A0  00D2               	movwf	?___fladd+1
  7961  09A1  0821               	movf	?___flpack,w
  7962  09A2  00D1               	movwf	?___fladd
  7963  09A3  0008               	return
  7964  09A4                     __end_of___fladd:	
  7965  09A4                     __ptext5:	
  7966 ;; *************** function _measure_inductance *****************
  7967 ;; Defined at:
  7968 ;;		line 197 in file "../../../lib/../src/measure.c"
  7969 ;; Parameters:    Size  Location     Type
  7970 ;;		None
  7971 ;; Auto vars:     Size  Location     Type
  7972 ;;  Lin             4   67[BANK1 ] unsigned char 
  7973 ;;  denominator     4   32[BANK1 ] unsigned char 
  7974 ;;  numerator       4   28[BANK1 ] unsigned char 
  7975 ;;  var             2   65[BANK1 ] unsigned int 
  7976 ;;  unit            1   52[BANK1 ] unsigned char 
  7977 ;; Return value:  Size  Location     Type
  7978 ;;		None               void
  7979 ;; Registers used:
  7980 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  7981 ;; Tracked objects:
  7982 ;;		On entry : 300/300
  7983 ;;		On exit  : 300/0
  7984 ;;		Unchanged: 0/0
  7985 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7986 ;;      Params:         0       0       0       0       0
  7987 ;;      Locals:         0       0      43       0       0
  7988 ;;      Temps:          0       0       0       0       0
  7989 ;;      Totals:         0       0      43       0       0
  7990 ;;Total ram usage:       43 bytes
  7991 ;; Hardware stack levels used:    1
  7992 ;; Hardware stack levels required when called:    6
  7993 ;; This function calls:
  7994 ;;		___fldiv
  7995 ;;		___flge
  7996 ;;		___flmul
  7997 ;;		___flsub
  7998 ;;		___fltol
  7999 ;;		___lwtofl
  8000 ;;		_lcd_gotoxy
  8001 ;;		_measure_freq
  8002 ;;		_print_reading
  8003 ;;		_print_unit
  8004 ;;		_put_str
  8005 ;; This function is called by:
  8006 ;;		_main
  8007 ;; This function uses a non-reentrant model
  8008 ;;
  8009                           
  8010                           
  8011                           ;psect for function _measure_inductance
  8012  09A4                     _measure_inductance:	
  8013                           
  8014                           ;measure.c: 198: uint8_t unit;
  8015                           ;measure.c: 199: uint16_t var;
  8016                           ;measure.c: 201: double Lin, numerator, denominator;
  8017                           ;measure.c: 204: lcd_gotoxy(0, 0);
  8018                           
  8019                           ;incstack = 0
  8020                           ; Regs used in _measure_inductance: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  8021  09A4  1283               	bcf	3,5	;RP0=0, select bank0
  8022  09A5  1303               	bcf	3,6	;RP1=0, select bank0
  8023  09A6  3000               	movlw	0
  8024  09A7  01A4               	clrf	lcd_gotoxy@row
  8025  09A8  277C  120A  158A   	fcall	_lcd_gotoxy
  8026                           
  8027                           ;measure.c: 205: put_str("Inductivity ");
  8028  09AB  308D               	movlw	low (STR_37| (0+32768))
  8029  09AC  1283               	bcf	3,5	;RP0=0, select bank0
  8030  09AD  1303               	bcf	3,6	;RP1=0, select bank0
  8031  09AE  00A4               	movwf	put_str@s
  8032  09AF  3098               	movlw	high (STR_37| (0+32768))
  8033  09B0  00A5               	movwf	put_str@s+1
  8034  09B1  27AD               	fcall	_put_str
  8035                           
  8036                           ;measure.c: 207: var = measure_freq();
  8037  09B2  120A  118A  2220  120A  158A  	fcall	_measure_freq
  8038  09B7  0852               	movf	?_measure_freq+1,w
  8039  09B8  1683               	bsf	3,5	;RP0=1, select bank1
  8040  09B9  00E2               	movwf	(measure_inductance@var+1)^(0+128)
  8041  09BA  1283               	bcf	3,5	;RP0=0, select bank0
  8042  09BB  0851               	movf	?_measure_freq,w
  8043  09BC  1683               	bsf	3,5	;RP0=1, select bank1
  8044  09BD  00E1               	movwf	measure_inductance@var^(0+128)
  8045                           
  8046                           ;measure.c: 209: F3 = (double)var;
  8047  09BE  0862               	movf	(measure_inductance@var+1)^(0+128),w
  8048  09BF  1283               	bcf	3,5	;RP0=0, select bank0
  8049  09C0  00D8               	movwf	___lwtofl@c+1
  8050  09C1  1683               	bsf	3,5	;RP0=1, select bank1
  8051  09C2  0861               	movf	measure_inductance@var^(0+128),w
  8052  09C3  1283               	bcf	3,5	;RP0=0, select bank0
  8053  09C4  00D7               	movwf	___lwtofl@c
  8054  09C5  160A  118A  27ED  120A  158A  	fcall	___lwtofl
  8055  09CA  085A               	movf	?___lwtofl+3,w
  8056  09CB  1683               	bsf	3,5	;RP0=1, select bank3
  8057  09CC  1703               	bsf	3,6	;RP1=1, select bank3
  8058  09CD  0097               	movwf	(_F3+3)^(0+384)
  8059  09CE  1283               	bcf	3,5	;RP0=0, select bank0
  8060  09CF  1303               	bcf	3,6	;RP1=0, select bank0
  8061  09D0  0859               	movf	?___lwtofl+2,w
  8062  09D1  1683               	bsf	3,5	;RP0=1, select bank3
  8063  09D2  1703               	bsf	3,6	;RP1=1, select bank3
  8064  09D3  0096               	movwf	(_F3+2)^(0+384)
  8065  09D4  1283               	bcf	3,5	;RP0=0, select bank0
  8066  09D5  1303               	bcf	3,6	;RP1=0, select bank0
  8067  09D6  0858               	movf	?___lwtofl+1,w
  8068  09D7  1683               	bsf	3,5	;RP0=1, select bank3
  8069  09D8  1703               	bsf	3,6	;RP1=1, select bank3
  8070  09D9  0095               	movwf	(_F3+1)^(0+384)
  8071  09DA  1283               	bcf	3,5	;RP0=0, select bank0
  8072  09DB  1303               	bcf	3,6	;RP1=0, select bank0
  8073  09DC  0857               	movf	?___lwtofl,w
  8074  09DD  1683               	bsf	3,5	;RP0=1, select bank3
  8075  09DE  1703               	bsf	3,6	;RP1=1, select bank3
  8076  09DF  0094               	movwf	_F3^(0+384)
  8077                           
  8078                           ;measure.c: 210: if(F3 > F1)
  8079  09E0  083F               	movf	(_F1+3)^(0+384),w
  8080  09E1  1283               	bcf	3,5	;RP0=0, select bank0
  8081  09E2  1303               	bcf	3,6	;RP1=0, select bank0
  8082  09E3  00A4               	movwf	___flge@ff1+3
  8083  09E4  1683               	bsf	3,5	;RP0=1, select bank3
  8084  09E5  1703               	bsf	3,6	;RP1=1, select bank3
  8085  09E6  083E               	movf	(_F1+2)^(0+384),w
  8086  09E7  1283               	bcf	3,5	;RP0=0, select bank0
  8087  09E8  1303               	bcf	3,6	;RP1=0, select bank0
  8088  09E9  00A3               	movwf	___flge@ff1+2
  8089  09EA  1683               	bsf	3,5	;RP0=1, select bank3
  8090  09EB  1703               	bsf	3,6	;RP1=1, select bank3
  8091  09EC  083D               	movf	(_F1+1)^(0+384),w
  8092  09ED  1283               	bcf	3,5	;RP0=0, select bank0
  8093  09EE  1303               	bcf	3,6	;RP1=0, select bank0
  8094  09EF  00A2               	movwf	___flge@ff1+1
  8095  09F0  1683               	bsf	3,5	;RP0=1, select bank3
  8096  09F1  1703               	bsf	3,6	;RP1=1, select bank3
  8097  09F2  083C               	movf	_F1^(0+384),w
  8098  09F3  1283               	bcf	3,5	;RP0=0, select bank0
  8099  09F4  1303               	bcf	3,6	;RP1=0, select bank0
  8100  09F5  00A1               	movwf	___flge@ff1
  8101  09F6  1683               	bsf	3,5	;RP0=1, select bank3
  8102  09F7  1703               	bsf	3,6	;RP1=1, select bank3
  8103  09F8  0817               	movf	(_F3+3)^(0+384),w
  8104  09F9  1283               	bcf	3,5	;RP0=0, select bank0
  8105  09FA  1303               	bcf	3,6	;RP1=0, select bank0
  8106  09FB  00A8               	movwf	___flge@ff2+3
  8107  09FC  1683               	bsf	3,5	;RP0=1, select bank3
  8108  09FD  1703               	bsf	3,6	;RP1=1, select bank3
  8109  09FE  0816               	movf	(_F3+2)^(0+384),w
  8110  09FF  1283               	bcf	3,5	;RP0=0, select bank0
  8111  0A00  1303               	bcf	3,6	;RP1=0, select bank0
  8112  0A01  00A7               	movwf	___flge@ff2+2
  8113  0A02  1683               	bsf	3,5	;RP0=1, select bank3
  8114  0A03  1703               	bsf	3,6	;RP1=1, select bank3
  8115  0A04  0815               	movf	(_F3+1)^(0+384),w
  8116  0A05  1283               	bcf	3,5	;RP0=0, select bank0
  8117  0A06  1303               	bcf	3,6	;RP1=0, select bank0
  8118  0A07  00A6               	movwf	___flge@ff2+1
  8119  0A08  1683               	bsf	3,5	;RP0=1, select bank3
  8120  0A09  1703               	bsf	3,6	;RP1=1, select bank3
  8121  0A0A  0814               	movf	_F3^(0+384),w
  8122  0A0B  1283               	bcf	3,5	;RP0=0, select bank0
  8123  0A0C  1303               	bcf	3,6	;RP1=0, select bank0
  8124  0A0D  00A5               	movwf	___flge@ff2
  8125  0A0E  2730  120A  158A   	fcall	___flge
  8126  0A11  1803               	btfsc	3,0
  8127  0A12  2A1D               	goto	l4798
  8128                           
  8129                           ;measure.c: 211: F3 = F1;
  8130  0A13  1683               	bsf	3,5	;RP0=1, select bank3
  8131  0A14  1703               	bsf	3,6	;RP1=1, select bank3
  8132  0A15  083F               	movf	(_F1+3)^(0+384),w
  8133  0A16  0097               	movwf	(_F3+3)^(0+384)
  8134  0A17  083E               	movf	(_F1+2)^(0+384),w
  8135  0A18  0096               	movwf	(_F3+2)^(0+384)
  8136  0A19  083D               	movf	(_F1+1)^(0+384),w
  8137  0A1A  0095               	movwf	(_F3+1)^(0+384)
  8138  0A1B  083C               	movf	_F1^(0+384),w
  8139  0A1C  0094               	movwf	_F3^(0+384)
  8140  0A1D                     l4798:	
  8141                           
  8142                           ;measure.c: 212: numerator = ((F1 * F1) - (F3 * F3)) * ((F1 * F1) - (F2 - F2)) * (100 * 
      +                          100);
  8143  0A1D  1683               	bsf	3,5	;RP0=1, select bank3
  8144  0A1E  1703               	bsf	3,6	;RP1=1, select bank3
  8145  0A1F  0813               	movf	(_F2+3)^(0+384),w
  8146  0A20  1283               	bcf	3,5	;RP0=0, select bank0
  8147  0A21  1303               	bcf	3,6	;RP1=0, select bank0
  8148  0A22  00E3               	movwf	___flsub@f2+3
  8149  0A23  1683               	bsf	3,5	;RP0=1, select bank3
  8150  0A24  1703               	bsf	3,6	;RP1=1, select bank3
  8151  0A25  0812               	movf	(_F2+2)^(0+384),w
  8152  0A26  1283               	bcf	3,5	;RP0=0, select bank0
  8153  0A27  1303               	bcf	3,6	;RP1=0, select bank0
  8154  0A28  00E2               	movwf	___flsub@f2+2
  8155  0A29  1683               	bsf	3,5	;RP0=1, select bank3
  8156  0A2A  1703               	bsf	3,6	;RP1=1, select bank3
  8157  0A2B  0811               	movf	(_F2+1)^(0+384),w
  8158  0A2C  1283               	bcf	3,5	;RP0=0, select bank0
  8159  0A2D  1303               	bcf	3,6	;RP1=0, select bank0
  8160  0A2E  00E1               	movwf	___flsub@f2+1
  8161  0A2F  1683               	bsf	3,5	;RP0=1, select bank3
  8162  0A30  1703               	bsf	3,6	;RP1=1, select bank3
  8163  0A31  0810               	movf	_F2^(0+384),w
  8164  0A32  1283               	bcf	3,5	;RP0=0, select bank0
  8165  0A33  1303               	bcf	3,6	;RP1=0, select bank0
  8166  0A34  00E0               	movwf	___flsub@f2
  8167  0A35  1683               	bsf	3,5	;RP0=1, select bank3
  8168  0A36  1703               	bsf	3,6	;RP1=1, select bank3
  8169  0A37  0813               	movf	(_F2+3)^(0+384),w
  8170  0A38  1283               	bcf	3,5	;RP0=0, select bank0
  8171  0A39  1303               	bcf	3,6	;RP1=0, select bank0
  8172  0A3A  00E7               	movwf	___flsub@f1+3
  8173  0A3B  1683               	bsf	3,5	;RP0=1, select bank3
  8174  0A3C  1703               	bsf	3,6	;RP1=1, select bank3
  8175  0A3D  0812               	movf	(_F2+2)^(0+384),w
  8176  0A3E  1283               	bcf	3,5	;RP0=0, select bank0
  8177  0A3F  1303               	bcf	3,6	;RP1=0, select bank0
  8178  0A40  00E6               	movwf	___flsub@f1+2
  8179  0A41  1683               	bsf	3,5	;RP0=1, select bank3
  8180  0A42  1703               	bsf	3,6	;RP1=1, select bank3
  8181  0A43  0811               	movf	(_F2+1)^(0+384),w
  8182  0A44  1283               	bcf	3,5	;RP0=0, select bank0
  8183  0A45  1303               	bcf	3,6	;RP1=0, select bank0
  8184  0A46  00E5               	movwf	___flsub@f1+1
  8185  0A47  1683               	bsf	3,5	;RP0=1, select bank3
  8186  0A48  1703               	bsf	3,6	;RP1=1, select bank3
  8187  0A49  0810               	movf	_F2^(0+384),w
  8188  0A4A  1283               	bcf	3,5	;RP0=0, select bank0
  8189  0A4B  1303               	bcf	3,6	;RP1=0, select bank0
  8190  0A4C  00E4               	movwf	___flsub@f1
  8191  0A4D  160A  118A  271A  120A  158A  	fcall	___flsub
  8192  0A52  0863               	movf	?___flsub+3,w
  8193  0A53  1683               	bsf	3,5	;RP0=1, select bank1
  8194  0A54  00C7               	movwf	(_measure_inductance$1013+3)^(0+128)
  8195  0A55  1283               	bcf	3,5	;RP0=0, select bank0
  8196  0A56  0862               	movf	?___flsub+2,w
  8197  0A57  1683               	bsf	3,5	;RP0=1, select bank1
  8198  0A58  00C6               	movwf	(_measure_inductance$1013+2)^(0+128)
  8199  0A59  1283               	bcf	3,5	;RP0=0, select bank0
  8200  0A5A  0861               	movf	?___flsub+1,w
  8201  0A5B  1683               	bsf	3,5	;RP0=1, select bank1
  8202  0A5C  00C5               	movwf	(_measure_inductance$1013+1)^(0+128)
  8203  0A5D  1283               	bcf	3,5	;RP0=0, select bank0
  8204  0A5E  0860               	movf	?___flsub,w
  8205  0A5F  1683               	bsf	3,5	;RP0=1, select bank1
  8206  0A60  00C4               	movwf	_measure_inductance$1013^(0+128)
  8207                           
  8208                           ;measure.c: 212: numerator = ((F1 * F1) - (F3 * F3)) * ((F1 * F1) - (F2 - F2)) * (100 * 
      +                          100);
  8209  0A61  0847               	movf	(_measure_inductance$1013+3)^(0+128),w
  8210  0A62  1283               	bcf	3,5	;RP0=0, select bank0
  8211  0A63  00E3               	movwf	___flsub@f2+3
  8212  0A64  1683               	bsf	3,5	;RP0=1, select bank1
  8213  0A65  0846               	movf	(_measure_inductance$1013+2)^(0+128),w
  8214  0A66  1283               	bcf	3,5	;RP0=0, select bank0
  8215  0A67  00E2               	movwf	___flsub@f2+2
  8216  0A68  1683               	bsf	3,5	;RP0=1, select bank1
  8217  0A69  0845               	movf	(_measure_inductance$1013+1)^(0+128),w
  8218  0A6A  1283               	bcf	3,5	;RP0=0, select bank0
  8219  0A6B  00E1               	movwf	___flsub@f2+1
  8220  0A6C  1683               	bsf	3,5	;RP0=1, select bank1
  8221  0A6D  0844               	movf	_measure_inductance$1013^(0+128),w
  8222  0A6E  1283               	bcf	3,5	;RP0=0, select bank0
  8223  0A6F  00E0               	movwf	___flsub@f2
  8224  0A70  1683               	bsf	3,5	;RP0=1, select bank3
  8225  0A71  1703               	bsf	3,6	;RP1=1, select bank3
  8226  0A72  083F               	movf	(_F1+3)^(0+384),w
  8227  0A73  1283               	bcf	3,5	;RP0=0, select bank0
  8228  0A74  1303               	bcf	3,6	;RP1=0, select bank0
  8229  0A75  00C1               	movwf	___flmul@f1+3
  8230  0A76  1683               	bsf	3,5	;RP0=1, select bank3
  8231  0A77  1703               	bsf	3,6	;RP1=1, select bank3
  8232  0A78  083E               	movf	(_F1+2)^(0+384),w
  8233  0A79  1283               	bcf	3,5	;RP0=0, select bank0
  8234  0A7A  1303               	bcf	3,6	;RP1=0, select bank0
  8235  0A7B  00C0               	movwf	___flmul@f1+2
  8236  0A7C  1683               	bsf	3,5	;RP0=1, select bank3
  8237  0A7D  1703               	bsf	3,6	;RP1=1, select bank3
  8238  0A7E  083D               	movf	(_F1+1)^(0+384),w
  8239  0A7F  1283               	bcf	3,5	;RP0=0, select bank0
  8240  0A80  1303               	bcf	3,6	;RP1=0, select bank0
  8241  0A81  00BF               	movwf	___flmul@f1+1
  8242  0A82  1683               	bsf	3,5	;RP0=1, select bank3
  8243  0A83  1703               	bsf	3,6	;RP1=1, select bank3
  8244  0A84  083C               	movf	_F1^(0+384),w
  8245  0A85  1283               	bcf	3,5	;RP0=0, select bank0
  8246  0A86  1303               	bcf	3,6	;RP1=0, select bank0
  8247  0A87  00BE               	movwf	___flmul@f1
  8248  0A88  1683               	bsf	3,5	;RP0=1, select bank3
  8249  0A89  1703               	bsf	3,6	;RP1=1, select bank3
  8250  0A8A  083F               	movf	(_F1+3)^(0+384),w
  8251  0A8B  1283               	bcf	3,5	;RP0=0, select bank0
  8252  0A8C  1303               	bcf	3,6	;RP1=0, select bank0
  8253  0A8D  00C5               	movwf	___flmul@f2+3
  8254  0A8E  1683               	bsf	3,5	;RP0=1, select bank3
  8255  0A8F  1703               	bsf	3,6	;RP1=1, select bank3
  8256  0A90  083E               	movf	(_F1+2)^(0+384),w
  8257  0A91  1283               	bcf	3,5	;RP0=0, select bank0
  8258  0A92  1303               	bcf	3,6	;RP1=0, select bank0
  8259  0A93  00C4               	movwf	___flmul@f2+2
  8260  0A94  1683               	bsf	3,5	;RP0=1, select bank3
  8261  0A95  1703               	bsf	3,6	;RP1=1, select bank3
  8262  0A96  083D               	movf	(_F1+1)^(0+384),w
  8263  0A97  1283               	bcf	3,5	;RP0=0, select bank0
  8264  0A98  1303               	bcf	3,6	;RP1=0, select bank0
  8265  0A99  00C3               	movwf	___flmul@f2+1
  8266  0A9A  1683               	bsf	3,5	;RP0=1, select bank3
  8267  0A9B  1703               	bsf	3,6	;RP1=1, select bank3
  8268  0A9C  083C               	movf	_F1^(0+384),w
  8269  0A9D  1283               	bcf	3,5	;RP0=0, select bank0
  8270  0A9E  1303               	bcf	3,6	;RP1=0, select bank0
  8271  0A9F  00C2               	movwf	___flmul@f2
  8272  0AA0  2698               	fcall	___flmul
  8273  0AA1  0841               	movf	?___flmul+3,w
  8274  0AA2  00E7               	movwf	___flsub@f1+3
  8275  0AA3  0840               	movf	?___flmul+2,w
  8276  0AA4  00E6               	movwf	___flsub@f1+2
  8277  0AA5  083F               	movf	?___flmul+1,w
  8278  0AA6  00E5               	movwf	___flsub@f1+1
  8279  0AA7  083E               	movf	?___flmul,w
  8280  0AA8  00E4               	movwf	___flsub@f1
  8281  0AA9  160A  118A  271A  120A  158A  	fcall	___flsub
  8282  0AAE  0863               	movf	?___flsub+3,w
  8283  0AAF  1683               	bsf	3,5	;RP0=1, select bank1
  8284  0AB0  00D8               	movwf	(_measure_inductance$1014+3)^(0+128)
  8285  0AB1  1283               	bcf	3,5	;RP0=0, select bank0
  8286  0AB2  0862               	movf	?___flsub+2,w
  8287  0AB3  1683               	bsf	3,5	;RP0=1, select bank1
  8288  0AB4  00D7               	movwf	(_measure_inductance$1014+2)^(0+128)
  8289  0AB5  1283               	bcf	3,5	;RP0=0, select bank0
  8290  0AB6  0861               	movf	?___flsub+1,w
  8291  0AB7  1683               	bsf	3,5	;RP0=1, select bank1
  8292  0AB8  00D6               	movwf	(_measure_inductance$1014+1)^(0+128)
  8293  0AB9  1283               	bcf	3,5	;RP0=0, select bank0
  8294  0ABA  0860               	movf	?___flsub,w
  8295  0ABB  1683               	bsf	3,5	;RP0=1, select bank1
  8296  0ABC  00D5               	movwf	_measure_inductance$1014^(0+128)
  8297                           
  8298                           ;measure.c: 212: numerator = ((F1 * F1) - (F3 * F3)) * ((F1 * F1) - (F2 - F2)) * (100 * 
      +                          100);
  8299  0ABD  1703               	bsf	3,6	;RP1=1, select bank3
  8300  0ABE  0817               	movf	(_F3+3)^(0+384),w
  8301  0ABF  1283               	bcf	3,5	;RP0=0, select bank0
  8302  0AC0  1303               	bcf	3,6	;RP1=0, select bank0
  8303  0AC1  00C1               	movwf	___flmul@f1+3
  8304  0AC2  1683               	bsf	3,5	;RP0=1, select bank3
  8305  0AC3  1703               	bsf	3,6	;RP1=1, select bank3
  8306  0AC4  0816               	movf	(_F3+2)^(0+384),w
  8307  0AC5  1283               	bcf	3,5	;RP0=0, select bank0
  8308  0AC6  1303               	bcf	3,6	;RP1=0, select bank0
  8309  0AC7  00C0               	movwf	___flmul@f1+2
  8310  0AC8  1683               	bsf	3,5	;RP0=1, select bank3
  8311  0AC9  1703               	bsf	3,6	;RP1=1, select bank3
  8312  0ACA  0815               	movf	(_F3+1)^(0+384),w
  8313  0ACB  1283               	bcf	3,5	;RP0=0, select bank0
  8314  0ACC  1303               	bcf	3,6	;RP1=0, select bank0
  8315  0ACD  00BF               	movwf	___flmul@f1+1
  8316  0ACE  1683               	bsf	3,5	;RP0=1, select bank3
  8317  0ACF  1703               	bsf	3,6	;RP1=1, select bank3
  8318  0AD0  0814               	movf	_F3^(0+384),w
  8319  0AD1  1283               	bcf	3,5	;RP0=0, select bank0
  8320  0AD2  1303               	bcf	3,6	;RP1=0, select bank0
  8321  0AD3  00BE               	movwf	___flmul@f1
  8322  0AD4  1683               	bsf	3,5	;RP0=1, select bank3
  8323  0AD5  1703               	bsf	3,6	;RP1=1, select bank3
  8324  0AD6  0817               	movf	(_F3+3)^(0+384),w
  8325  0AD7  1283               	bcf	3,5	;RP0=0, select bank0
  8326  0AD8  1303               	bcf	3,6	;RP1=0, select bank0
  8327  0AD9  00C5               	movwf	___flmul@f2+3
  8328  0ADA  1683               	bsf	3,5	;RP0=1, select bank3
  8329  0ADB  1703               	bsf	3,6	;RP1=1, select bank3
  8330  0ADC  0816               	movf	(_F3+2)^(0+384),w
  8331  0ADD  1283               	bcf	3,5	;RP0=0, select bank0
  8332  0ADE  1303               	bcf	3,6	;RP1=0, select bank0
  8333  0ADF  00C4               	movwf	___flmul@f2+2
  8334  0AE0  1683               	bsf	3,5	;RP0=1, select bank3
  8335  0AE1  1703               	bsf	3,6	;RP1=1, select bank3
  8336  0AE2  0815               	movf	(_F3+1)^(0+384),w
  8337  0AE3  1283               	bcf	3,5	;RP0=0, select bank0
  8338  0AE4  1303               	bcf	3,6	;RP1=0, select bank0
  8339  0AE5  00C3               	movwf	___flmul@f2+1
  8340  0AE6  1683               	bsf	3,5	;RP0=1, select bank3
  8341  0AE7  1703               	bsf	3,6	;RP1=1, select bank3
  8342  0AE8  0814               	movf	_F3^(0+384),w
  8343  0AE9  1283               	bcf	3,5	;RP0=0, select bank0
  8344  0AEA  1303               	bcf	3,6	;RP1=0, select bank0
  8345  0AEB  00C2               	movwf	___flmul@f2
  8346  0AEC  2698  120A  158A   	fcall	___flmul
  8347  0AEF  0841               	movf	?___flmul+3,w
  8348  0AF0  00E3               	movwf	___flsub@f2+3
  8349  0AF1  0840               	movf	?___flmul+2,w
  8350  0AF2  00E2               	movwf	___flsub@f2+2
  8351  0AF3  083F               	movf	?___flmul+1,w
  8352  0AF4  00E1               	movwf	___flsub@f2+1
  8353  0AF5  083E               	movf	?___flmul,w
  8354  0AF6  00E0               	movwf	___flsub@f2
  8355  0AF7  1683               	bsf	3,5	;RP0=1, select bank3
  8356  0AF8  1703               	bsf	3,6	;RP1=1, select bank3
  8357  0AF9  083F               	movf	(_F1+3)^(0+384),w
  8358  0AFA  1283               	bcf	3,5	;RP0=0, select bank0
  8359  0AFB  1303               	bcf	3,6	;RP1=0, select bank0
  8360  0AFC  00C1               	movwf	___flmul@f1+3
  8361  0AFD  1683               	bsf	3,5	;RP0=1, select bank3
  8362  0AFE  1703               	bsf	3,6	;RP1=1, select bank3
  8363  0AFF  083E               	movf	(_F1+2)^(0+384),w
  8364  0B00  1283               	bcf	3,5	;RP0=0, select bank0
  8365  0B01  1303               	bcf	3,6	;RP1=0, select bank0
  8366  0B02  00C0               	movwf	___flmul@f1+2
  8367  0B03  1683               	bsf	3,5	;RP0=1, select bank3
  8368  0B04  1703               	bsf	3,6	;RP1=1, select bank3
  8369  0B05  083D               	movf	(_F1+1)^(0+384),w
  8370  0B06  1283               	bcf	3,5	;RP0=0, select bank0
  8371  0B07  1303               	bcf	3,6	;RP1=0, select bank0
  8372  0B08  00BF               	movwf	___flmul@f1+1
  8373  0B09  1683               	bsf	3,5	;RP0=1, select bank3
  8374  0B0A  1703               	bsf	3,6	;RP1=1, select bank3
  8375  0B0B  083C               	movf	_F1^(0+384),w
  8376  0B0C  1283               	bcf	3,5	;RP0=0, select bank0
  8377  0B0D  1303               	bcf	3,6	;RP1=0, select bank0
  8378  0B0E  00BE               	movwf	___flmul@f1
  8379  0B0F  1683               	bsf	3,5	;RP0=1, select bank3
  8380  0B10  1703               	bsf	3,6	;RP1=1, select bank3
  8381  0B11  083F               	movf	(_F1+3)^(0+384),w
  8382  0B12  1283               	bcf	3,5	;RP0=0, select bank0
  8383  0B13  1303               	bcf	3,6	;RP1=0, select bank0
  8384  0B14  00C5               	movwf	___flmul@f2+3
  8385  0B15  1683               	bsf	3,5	;RP0=1, select bank3
  8386  0B16  1703               	bsf	3,6	;RP1=1, select bank3
  8387  0B17  083E               	movf	(_F1+2)^(0+384),w
  8388  0B18  1283               	bcf	3,5	;RP0=0, select bank0
  8389  0B19  1303               	bcf	3,6	;RP1=0, select bank0
  8390  0B1A  00C4               	movwf	___flmul@f2+2
  8391  0B1B  1683               	bsf	3,5	;RP0=1, select bank3
  8392  0B1C  1703               	bsf	3,6	;RP1=1, select bank3
  8393  0B1D  083D               	movf	(_F1+1)^(0+384),w
  8394  0B1E  1283               	bcf	3,5	;RP0=0, select bank0
  8395  0B1F  1303               	bcf	3,6	;RP1=0, select bank0
  8396  0B20  00C3               	movwf	___flmul@f2+1
  8397  0B21  1683               	bsf	3,5	;RP0=1, select bank3
  8398  0B22  1703               	bsf	3,6	;RP1=1, select bank3
  8399  0B23  083C               	movf	_F1^(0+384),w
  8400  0B24  1283               	bcf	3,5	;RP0=0, select bank0
  8401  0B25  1303               	bcf	3,6	;RP1=0, select bank0
  8402  0B26  00C2               	movwf	___flmul@f2
  8403  0B27  2698               	fcall	___flmul
  8404  0B28  0841               	movf	?___flmul+3,w
  8405  0B29  00E7               	movwf	___flsub@f1+3
  8406  0B2A  0840               	movf	?___flmul+2,w
  8407  0B2B  00E6               	movwf	___flsub@f1+2
  8408  0B2C  083F               	movf	?___flmul+1,w
  8409  0B2D  00E5               	movwf	___flsub@f1+1
  8410  0B2E  083E               	movf	?___flmul,w
  8411  0B2F  00E4               	movwf	___flsub@f1
  8412  0B30  160A  118A  271A  120A  158A  	fcall	___flsub
  8413  0B35  0863               	movf	?___flsub+3,w
  8414  0B36  1683               	bsf	3,5	;RP0=1, select bank1
  8415  0B37  00DC               	movwf	(_measure_inductance$1015+3)^(0+128)
  8416  0B38  1283               	bcf	3,5	;RP0=0, select bank0
  8417  0B39  0862               	movf	?___flsub+2,w
  8418  0B3A  1683               	bsf	3,5	;RP0=1, select bank1
  8419  0B3B  00DB               	movwf	(_measure_inductance$1015+2)^(0+128)
  8420  0B3C  1283               	bcf	3,5	;RP0=0, select bank0
  8421  0B3D  0861               	movf	?___flsub+1,w
  8422  0B3E  1683               	bsf	3,5	;RP0=1, select bank1
  8423  0B3F  00DA               	movwf	(_measure_inductance$1015+1)^(0+128)
  8424  0B40  1283               	bcf	3,5	;RP0=0, select bank0
  8425  0B41  0860               	movf	?___flsub,w
  8426  0B42  1683               	bsf	3,5	;RP0=1, select bank1
  8427  0B43  00D9               	movwf	_measure_inductance$1015^(0+128)
  8428                           
  8429                           ;measure.c: 212: numerator = ((F1 * F1) - (F3 * F3)) * ((F1 * F1) - (F2 - F2)) * (100 * 
      +                          100);
  8430  0B44  0858               	movf	(_measure_inductance$1014+3)^(0+128),w
  8431  0B45  1283               	bcf	3,5	;RP0=0, select bank0
  8432  0B46  00C1               	movwf	___flmul@f1+3
  8433  0B47  1683               	bsf	3,5	;RP0=1, select bank1
  8434  0B48  0857               	movf	(_measure_inductance$1014+2)^(0+128),w
  8435  0B49  1283               	bcf	3,5	;RP0=0, select bank0
  8436  0B4A  00C0               	movwf	___flmul@f1+2
  8437  0B4B  1683               	bsf	3,5	;RP0=1, select bank1
  8438  0B4C  0856               	movf	(_measure_inductance$1014+1)^(0+128),w
  8439  0B4D  1283               	bcf	3,5	;RP0=0, select bank0
  8440  0B4E  00BF               	movwf	___flmul@f1+1
  8441  0B4F  1683               	bsf	3,5	;RP0=1, select bank1
  8442  0B50  0855               	movf	_measure_inductance$1014^(0+128),w
  8443  0B51  1283               	bcf	3,5	;RP0=0, select bank0
  8444  0B52  00BE               	movwf	___flmul@f1
  8445  0B53  1683               	bsf	3,5	;RP0=1, select bank1
  8446  0B54  085C               	movf	(_measure_inductance$1015+3)^(0+128),w
  8447  0B55  1283               	bcf	3,5	;RP0=0, select bank0
  8448  0B56  00C5               	movwf	___flmul@f2+3
  8449  0B57  1683               	bsf	3,5	;RP0=1, select bank1
  8450  0B58  085B               	movf	(_measure_inductance$1015+2)^(0+128),w
  8451  0B59  1283               	bcf	3,5	;RP0=0, select bank0
  8452  0B5A  00C4               	movwf	___flmul@f2+2
  8453  0B5B  1683               	bsf	3,5	;RP0=1, select bank1
  8454  0B5C  085A               	movf	(_measure_inductance$1015+1)^(0+128),w
  8455  0B5D  1283               	bcf	3,5	;RP0=0, select bank0
  8456  0B5E  00C3               	movwf	___flmul@f2+1
  8457  0B5F  1683               	bsf	3,5	;RP0=1, select bank1
  8458  0B60  0859               	movf	_measure_inductance$1015^(0+128),w
  8459  0B61  1283               	bcf	3,5	;RP0=0, select bank0
  8460  0B62  00C2               	movwf	___flmul@f2
  8461  0B63  2698  120A  158A   	fcall	___flmul
  8462  0B66  0841               	movf	?___flmul+3,w
  8463  0B67  1683               	bsf	3,5	;RP0=1, select bank1
  8464  0B68  00E0               	movwf	(_measure_inductance$1016+3)^(0+128)
  8465  0B69  1283               	bcf	3,5	;RP0=0, select bank0
  8466  0B6A  0840               	movf	?___flmul+2,w
  8467  0B6B  1683               	bsf	3,5	;RP0=1, select bank1
  8468  0B6C  00DF               	movwf	(_measure_inductance$1016+2)^(0+128)
  8469  0B6D  1283               	bcf	3,5	;RP0=0, select bank0
  8470  0B6E  083F               	movf	?___flmul+1,w
  8471  0B6F  1683               	bsf	3,5	;RP0=1, select bank1
  8472  0B70  00DE               	movwf	(_measure_inductance$1016+1)^(0+128)
  8473  0B71  1283               	bcf	3,5	;RP0=0, select bank0
  8474  0B72  083E               	movf	?___flmul,w
  8475  0B73  1683               	bsf	3,5	;RP0=1, select bank1
  8476  0B74  00DD               	movwf	_measure_inductance$1016^(0+128)
  8477                           
  8478                           ;measure.c: 212: numerator = ((F1 * F1) - (F3 * F3)) * ((F1 * F1) - (F2 - F2)) * (100 * 
      +                          100);
  8479  0B75  3046               	movlw	70
  8480  0B76  1283               	bcf	3,5	;RP0=0, select bank0
  8481  0B77  00C1               	movwf	___flmul@f1+3
  8482  0B78  301C               	movlw	28
  8483  0B79  00C0               	movwf	___flmul@f1+2
  8484  0B7A  3040               	movlw	64
  8485  0B7B  00BF               	movwf	___flmul@f1+1
  8486  0B7C  01BE               	clrf	___flmul@f1
  8487  0B7D  1683               	bsf	3,5	;RP0=1, select bank1
  8488  0B7E  0860               	movf	(_measure_inductance$1016+3)^(0+128),w
  8489  0B7F  1283               	bcf	3,5	;RP0=0, select bank0
  8490  0B80  00C5               	movwf	___flmul@f2+3
  8491  0B81  1683               	bsf	3,5	;RP0=1, select bank1
  8492  0B82  085F               	movf	(_measure_inductance$1016+2)^(0+128),w
  8493  0B83  1283               	bcf	3,5	;RP0=0, select bank0
  8494  0B84  00C4               	movwf	___flmul@f2+2
  8495  0B85  1683               	bsf	3,5	;RP0=1, select bank1
  8496  0B86  085E               	movf	(_measure_inductance$1016+1)^(0+128),w
  8497  0B87  1283               	bcf	3,5	;RP0=0, select bank0
  8498  0B88  00C3               	movwf	___flmul@f2+1
  8499  0B89  1683               	bsf	3,5	;RP0=1, select bank1
  8500  0B8A  085D               	movf	_measure_inductance$1016^(0+128),w
  8501  0B8B  1283               	bcf	3,5	;RP0=0, select bank0
  8502  0B8C  00C2               	movwf	___flmul@f2
  8503  0B8D  2698  120A  158A   	fcall	___flmul
  8504  0B90  0841               	movf	?___flmul+3,w
  8505  0B91  1683               	bsf	3,5	;RP0=1, select bank1
  8506  0B92  00BF               	movwf	(measure_inductance@numerator+3)^(0+128)
  8507  0B93  1283               	bcf	3,5	;RP0=0, select bank0
  8508  0B94  0840               	movf	?___flmul+2,w
  8509  0B95  1683               	bsf	3,5	;RP0=1, select bank1
  8510  0B96  00BE               	movwf	(measure_inductance@numerator+2)^(0+128)
  8511  0B97  1283               	bcf	3,5	;RP0=0, select bank0
  8512  0B98  083F               	movf	?___flmul+1,w
  8513  0B99  1683               	bsf	3,5	;RP0=1, select bank1
  8514  0B9A  00BD               	movwf	(measure_inductance@numerator+1)^(0+128)
  8515  0B9B  1283               	bcf	3,5	;RP0=0, select bank0
  8516  0B9C  083E               	movf	?___flmul,w
  8517  0B9D  1683               	bsf	3,5	;RP0=1, select bank1
  8518  0B9E  00BC               	movwf	measure_inductance@numerator^(0+128)
  8519                           
  8520                           ;measure.c: 213: denominator = 4 * 3.14159265358979323846l * 3.14159265358979323846l * F
      +                          1 * F1 * F2 * F2 * F3 * F3 * CCal;
  8521  0B9F  1703               	bsf	3,6	;RP1=1, select bank3
  8522  0BA0  083F               	movf	(_F1+3)^(0+384),w
  8523  0BA1  1283               	bcf	3,5	;RP0=0, select bank0
  8524  0BA2  1303               	bcf	3,6	;RP1=0, select bank0
  8525  0BA3  00C1               	movwf	___flmul@f1+3
  8526  0BA4  1683               	bsf	3,5	;RP0=1, select bank3
  8527  0BA5  1703               	bsf	3,6	;RP1=1, select bank3
  8528  0BA6  083E               	movf	(_F1+2)^(0+384),w
  8529  0BA7  1283               	bcf	3,5	;RP0=0, select bank0
  8530  0BA8  1303               	bcf	3,6	;RP1=0, select bank0
  8531  0BA9  00C0               	movwf	___flmul@f1+2
  8532  0BAA  1683               	bsf	3,5	;RP0=1, select bank3
  8533  0BAB  1703               	bsf	3,6	;RP1=1, select bank3
  8534  0BAC  083D               	movf	(_F1+1)^(0+384),w
  8535  0BAD  1283               	bcf	3,5	;RP0=0, select bank0
  8536  0BAE  1303               	bcf	3,6	;RP1=0, select bank0
  8537  0BAF  00BF               	movwf	___flmul@f1+1
  8538  0BB0  1683               	bsf	3,5	;RP0=1, select bank3
  8539  0BB1  1703               	bsf	3,6	;RP1=1, select bank3
  8540  0BB2  083C               	movf	_F1^(0+384),w
  8541  0BB3  1283               	bcf	3,5	;RP0=0, select bank0
  8542  0BB4  1303               	bcf	3,6	;RP1=0, select bank0
  8543  0BB5  00BE               	movwf	___flmul@f1
  8544  0BB6  1683               	bsf	3,5	;RP0=1, select bank3
  8545  0BB7  1703               	bsf	3,6	;RP1=1, select bank3
  8546  0BB8  083F               	movf	(_F1+3)^(0+384),w
  8547  0BB9  1283               	bcf	3,5	;RP0=0, select bank0
  8548  0BBA  1303               	bcf	3,6	;RP1=0, select bank0
  8549  0BBB  00C5               	movwf	___flmul@f2+3
  8550  0BBC  1683               	bsf	3,5	;RP0=1, select bank3
  8551  0BBD  1703               	bsf	3,6	;RP1=1, select bank3
  8552  0BBE  083E               	movf	(_F1+2)^(0+384),w
  8553  0BBF  1283               	bcf	3,5	;RP0=0, select bank0
  8554  0BC0  1303               	bcf	3,6	;RP1=0, select bank0
  8555  0BC1  00C4               	movwf	___flmul@f2+2
  8556  0BC2  1683               	bsf	3,5	;RP0=1, select bank3
  8557  0BC3  1703               	bsf	3,6	;RP1=1, select bank3
  8558  0BC4  083D               	movf	(_F1+1)^(0+384),w
  8559  0BC5  1283               	bcf	3,5	;RP0=0, select bank0
  8560  0BC6  1303               	bcf	3,6	;RP1=0, select bank0
  8561  0BC7  00C3               	movwf	___flmul@f2+1
  8562  0BC8  1683               	bsf	3,5	;RP0=1, select bank3
  8563  0BC9  1703               	bsf	3,6	;RP1=1, select bank3
  8564  0BCA  083C               	movf	_F1^(0+384),w
  8565  0BCB  1283               	bcf	3,5	;RP0=0, select bank0
  8566  0BCC  1303               	bcf	3,6	;RP1=0, select bank0
  8567  0BCD  00C2               	movwf	___flmul@f2
  8568  0BCE  2698  120A  158A   	fcall	___flmul
  8569  0BD1  0841               	movf	?___flmul+3,w
  8570  0BD2  1683               	bsf	3,5	;RP0=1, select bank1
  8571  0BD3  00CB               	movwf	(_measure_inductance$1017+3)^(0+128)
  8572  0BD4  1283               	bcf	3,5	;RP0=0, select bank0
  8573  0BD5  0840               	movf	?___flmul+2,w
  8574  0BD6  1683               	bsf	3,5	;RP0=1, select bank1
  8575  0BD7  00CA               	movwf	(_measure_inductance$1017+2)^(0+128)
  8576  0BD8  1283               	bcf	3,5	;RP0=0, select bank0
  8577  0BD9  083F               	movf	?___flmul+1,w
  8578  0BDA  1683               	bsf	3,5	;RP0=1, select bank1
  8579  0BDB  00C9               	movwf	(_measure_inductance$1017+1)^(0+128)
  8580  0BDC  1283               	bcf	3,5	;RP0=0, select bank0
  8581  0BDD  083E               	movf	?___flmul,w
  8582  0BDE  1683               	bsf	3,5	;RP0=1, select bank1
  8583  0BDF  00C8               	movwf	_measure_inductance$1017^(0+128)
  8584                           
  8585                           ;measure.c: 213: denominator = 4 * 3.14159265358979323846l * 3.14159265358979323846l * F
      +                          1 * F1 * F2 * F2 * F3 * F3 * CCal;
  8586  0BE0  1703               	bsf	3,6	;RP1=1, select bank3
  8587  0BE1  0813               	movf	(_F2+3)^(0+384),w
  8588  0BE2  1283               	bcf	3,5	;RP0=0, select bank0
  8589  0BE3  1303               	bcf	3,6	;RP1=0, select bank0
  8590  0BE4  00C1               	movwf	___flmul@f1+3
  8591  0BE5  1683               	bsf	3,5	;RP0=1, select bank3
  8592  0BE6  1703               	bsf	3,6	;RP1=1, select bank3
  8593  0BE7  0812               	movf	(_F2+2)^(0+384),w
  8594  0BE8  1283               	bcf	3,5	;RP0=0, select bank0
  8595  0BE9  1303               	bcf	3,6	;RP1=0, select bank0
  8596  0BEA  00C0               	movwf	___flmul@f1+2
  8597  0BEB  1683               	bsf	3,5	;RP0=1, select bank3
  8598  0BEC  1703               	bsf	3,6	;RP1=1, select bank3
  8599  0BED  0811               	movf	(_F2+1)^(0+384),w
  8600  0BEE  1283               	bcf	3,5	;RP0=0, select bank0
  8601  0BEF  1303               	bcf	3,6	;RP1=0, select bank0
  8602  0BF0  00BF               	movwf	___flmul@f1+1
  8603  0BF1  1683               	bsf	3,5	;RP0=1, select bank3
  8604  0BF2  1703               	bsf	3,6	;RP1=1, select bank3
  8605  0BF3  0810               	movf	_F2^(0+384),w
  8606  0BF4  1283               	bcf	3,5	;RP0=0, select bank0
  8607  0BF5  1303               	bcf	3,6	;RP1=0, select bank0
  8608  0BF6  00BE               	movwf	___flmul@f1
  8609  0BF7  1683               	bsf	3,5	;RP0=1, select bank1
  8610  0BF8  084B               	movf	(_measure_inductance$1017+3)^(0+128),w
  8611  0BF9  1283               	bcf	3,5	;RP0=0, select bank0
  8612  0BFA  00C5               	movwf	___flmul@f2+3
  8613  0BFB  1683               	bsf	3,5	;RP0=1, select bank1
  8614  0BFC  084A               	movf	(_measure_inductance$1017+2)^(0+128),w
  8615  0BFD  1283               	bcf	3,5	;RP0=0, select bank0
  8616  0BFE  00C4               	movwf	___flmul@f2+2
  8617  0BFF  1683               	bsf	3,5	;RP0=1, select bank1
  8618  0C00  0849               	movf	(_measure_inductance$1017+1)^(0+128),w
  8619  0C01  1283               	bcf	3,5	;RP0=0, select bank0
  8620  0C02  00C3               	movwf	___flmul@f2+1
  8621  0C03  1683               	bsf	3,5	;RP0=1, select bank1
  8622  0C04  0848               	movf	_measure_inductance$1017^(0+128),w
  8623  0C05  1283               	bcf	3,5	;RP0=0, select bank0
  8624  0C06  00C2               	movwf	___flmul@f2
  8625  0C07  2698  120A  158A   	fcall	___flmul
  8626  0C0A  0841               	movf	?___flmul+3,w
  8627  0C0B  1683               	bsf	3,5	;RP0=1, select bank1
  8628  0C0C  00D8               	movwf	(_measure_inductance$1014+3)^(0+128)
  8629  0C0D  1283               	bcf	3,5	;RP0=0, select bank0
  8630  0C0E  0840               	movf	?___flmul+2,w
  8631  0C0F  1683               	bsf	3,5	;RP0=1, select bank1
  8632  0C10  00D7               	movwf	(_measure_inductance$1014+2)^(0+128)
  8633  0C11  1283               	bcf	3,5	;RP0=0, select bank0
  8634  0C12  083F               	movf	?___flmul+1,w
  8635  0C13  1683               	bsf	3,5	;RP0=1, select bank1
  8636  0C14  00D6               	movwf	(_measure_inductance$1014+1)^(0+128)
  8637  0C15  1283               	bcf	3,5	;RP0=0, select bank0
  8638  0C16  083E               	movf	?___flmul,w
  8639  0C17  1683               	bsf	3,5	;RP0=1, select bank1
  8640  0C18  00D5               	movwf	_measure_inductance$1014^(0+128)
  8641                           
  8642                           ;measure.c: 213: denominator = 4 * 3.14159265358979323846l * 3.14159265358979323846l * F
      +                          1 * F1 * F2 * F2 * F3 * F3 * CCal;
  8643  0C19  1703               	bsf	3,6	;RP1=1, select bank3
  8644  0C1A  0813               	movf	(_F2+3)^(0+384),w
  8645  0C1B  1283               	bcf	3,5	;RP0=0, select bank0
  8646  0C1C  1303               	bcf	3,6	;RP1=0, select bank0
  8647  0C1D  00C1               	movwf	___flmul@f1+3
  8648  0C1E  1683               	bsf	3,5	;RP0=1, select bank3
  8649  0C1F  1703               	bsf	3,6	;RP1=1, select bank3
  8650  0C20  0812               	movf	(_F2+2)^(0+384),w
  8651  0C21  1283               	bcf	3,5	;RP0=0, select bank0
  8652  0C22  1303               	bcf	3,6	;RP1=0, select bank0
  8653  0C23  00C0               	movwf	___flmul@f1+2
  8654  0C24  1683               	bsf	3,5	;RP0=1, select bank3
  8655  0C25  1703               	bsf	3,6	;RP1=1, select bank3
  8656  0C26  0811               	movf	(_F2+1)^(0+384),w
  8657  0C27  1283               	bcf	3,5	;RP0=0, select bank0
  8658  0C28  1303               	bcf	3,6	;RP1=0, select bank0
  8659  0C29  00BF               	movwf	___flmul@f1+1
  8660  0C2A  1683               	bsf	3,5	;RP0=1, select bank3
  8661  0C2B  1703               	bsf	3,6	;RP1=1, select bank3
  8662  0C2C  0810               	movf	_F2^(0+384),w
  8663  0C2D  1283               	bcf	3,5	;RP0=0, select bank0
  8664  0C2E  1303               	bcf	3,6	;RP1=0, select bank0
  8665  0C2F  00BE               	movwf	___flmul@f1
  8666  0C30  1683               	bsf	3,5	;RP0=1, select bank1
  8667  0C31  0858               	movf	(_measure_inductance$1014+3)^(0+128),w
  8668  0C32  1283               	bcf	3,5	;RP0=0, select bank0
  8669  0C33  00C5               	movwf	___flmul@f2+3
  8670  0C34  1683               	bsf	3,5	;RP0=1, select bank1
  8671  0C35  0857               	movf	(_measure_inductance$1014+2)^(0+128),w
  8672  0C36  1283               	bcf	3,5	;RP0=0, select bank0
  8673  0C37  00C4               	movwf	___flmul@f2+2
  8674  0C38  1683               	bsf	3,5	;RP0=1, select bank1
  8675  0C39  0856               	movf	(_measure_inductance$1014+1)^(0+128),w
  8676  0C3A  1283               	bcf	3,5	;RP0=0, select bank0
  8677  0C3B  00C3               	movwf	___flmul@f2+1
  8678  0C3C  1683               	bsf	3,5	;RP0=1, select bank1
  8679  0C3D  0855               	movf	_measure_inductance$1014^(0+128),w
  8680  0C3E  1283               	bcf	3,5	;RP0=0, select bank0
  8681  0C3F  00C2               	movwf	___flmul@f2
  8682  0C40  2698  120A  158A   	fcall	___flmul
  8683  0C43  0841               	movf	?___flmul+3,w
  8684  0C44  1683               	bsf	3,5	;RP0=1, select bank1
  8685  0C45  00DC               	movwf	(_measure_inductance$1015+3)^(0+128)
  8686  0C46  1283               	bcf	3,5	;RP0=0, select bank0
  8687  0C47  0840               	movf	?___flmul+2,w
  8688  0C48  1683               	bsf	3,5	;RP0=1, select bank1
  8689  0C49  00DB               	movwf	(_measure_inductance$1015+2)^(0+128)
  8690  0C4A  1283               	bcf	3,5	;RP0=0, select bank0
  8691  0C4B  083F               	movf	?___flmul+1,w
  8692  0C4C  1683               	bsf	3,5	;RP0=1, select bank1
  8693  0C4D  00DA               	movwf	(_measure_inductance$1015+1)^(0+128)
  8694  0C4E  1283               	bcf	3,5	;RP0=0, select bank0
  8695  0C4F  083E               	movf	?___flmul,w
  8696  0C50  1683               	bsf	3,5	;RP0=1, select bank1
  8697  0C51  00D9               	movwf	_measure_inductance$1015^(0+128)
  8698                           
  8699                           ;measure.c: 213: denominator = 4 * 3.14159265358979323846l * 3.14159265358979323846l * F
      +                          1 * F1 * F2 * F2 * F3 * F3 * CCal;
  8700  0C52  1703               	bsf	3,6	;RP1=1, select bank3
  8701  0C53  0817               	movf	(_F3+3)^(0+384),w
  8702  0C54  1283               	bcf	3,5	;RP0=0, select bank0
  8703  0C55  1303               	bcf	3,6	;RP1=0, select bank0
  8704  0C56  00C1               	movwf	___flmul@f1+3
  8705  0C57  1683               	bsf	3,5	;RP0=1, select bank3
  8706  0C58  1703               	bsf	3,6	;RP1=1, select bank3
  8707  0C59  0816               	movf	(_F3+2)^(0+384),w
  8708  0C5A  1283               	bcf	3,5	;RP0=0, select bank0
  8709  0C5B  1303               	bcf	3,6	;RP1=0, select bank0
  8710  0C5C  00C0               	movwf	___flmul@f1+2
  8711  0C5D  1683               	bsf	3,5	;RP0=1, select bank3
  8712  0C5E  1703               	bsf	3,6	;RP1=1, select bank3
  8713  0C5F  0815               	movf	(_F3+1)^(0+384),w
  8714  0C60  1283               	bcf	3,5	;RP0=0, select bank0
  8715  0C61  1303               	bcf	3,6	;RP1=0, select bank0
  8716  0C62  00BF               	movwf	___flmul@f1+1
  8717  0C63  1683               	bsf	3,5	;RP0=1, select bank3
  8718  0C64  1703               	bsf	3,6	;RP1=1, select bank3
  8719  0C65  0814               	movf	_F3^(0+384),w
  8720  0C66  1283               	bcf	3,5	;RP0=0, select bank0
  8721  0C67  1303               	bcf	3,6	;RP1=0, select bank0
  8722  0C68  00BE               	movwf	___flmul@f1
  8723  0C69  1683               	bsf	3,5	;RP0=1, select bank1
  8724  0C6A  085C               	movf	(_measure_inductance$1015+3)^(0+128),w
  8725  0C6B  1283               	bcf	3,5	;RP0=0, select bank0
  8726  0C6C  00C5               	movwf	___flmul@f2+3
  8727  0C6D  1683               	bsf	3,5	;RP0=1, select bank1
  8728  0C6E  085B               	movf	(_measure_inductance$1015+2)^(0+128),w
  8729  0C6F  1283               	bcf	3,5	;RP0=0, select bank0
  8730  0C70  00C4               	movwf	___flmul@f2+2
  8731  0C71  1683               	bsf	3,5	;RP0=1, select bank1
  8732  0C72  085A               	movf	(_measure_inductance$1015+1)^(0+128),w
  8733  0C73  1283               	bcf	3,5	;RP0=0, select bank0
  8734  0C74  00C3               	movwf	___flmul@f2+1
  8735  0C75  1683               	bsf	3,5	;RP0=1, select bank1
  8736  0C76  0859               	movf	_measure_inductance$1015^(0+128),w
  8737  0C77  1283               	bcf	3,5	;RP0=0, select bank0
  8738  0C78  00C2               	movwf	___flmul@f2
  8739  0C79  2698  120A  158A   	fcall	___flmul
  8740  0C7C  0841               	movf	?___flmul+3,w
  8741  0C7D  1683               	bsf	3,5	;RP0=1, select bank1
  8742  0C7E  00E0               	movwf	(_measure_inductance$1016+3)^(0+128)
  8743  0C7F  1283               	bcf	3,5	;RP0=0, select bank0
  8744  0C80  0840               	movf	?___flmul+2,w
  8745  0C81  1683               	bsf	3,5	;RP0=1, select bank1
  8746  0C82  00DF               	movwf	(_measure_inductance$1016+2)^(0+128)
  8747  0C83  1283               	bcf	3,5	;RP0=0, select bank0
  8748  0C84  083F               	movf	?___flmul+1,w
  8749  0C85  1683               	bsf	3,5	;RP0=1, select bank1
  8750  0C86  00DE               	movwf	(_measure_inductance$1016+1)^(0+128)
  8751  0C87  1283               	bcf	3,5	;RP0=0, select bank0
  8752  0C88  083E               	movf	?___flmul,w
  8753  0C89  1683               	bsf	3,5	;RP0=1, select bank1
  8754  0C8A  00DD               	movwf	_measure_inductance$1016^(0+128)
  8755                           
  8756                           ;measure.c: 213: denominator = 4 * 3.14159265358979323846l * 3.14159265358979323846l * F
      +                          1 * F1 * F2 * F2 * F3 * F3 * CCal;
  8757  0C8B  1703               	bsf	3,6	;RP1=1, select bank3
  8758  0C8C  0817               	movf	(_F3+3)^(0+384),w
  8759  0C8D  1283               	bcf	3,5	;RP0=0, select bank0
  8760  0C8E  1303               	bcf	3,6	;RP1=0, select bank0
  8761  0C8F  00C1               	movwf	___flmul@f1+3
  8762  0C90  1683               	bsf	3,5	;RP0=1, select bank3
  8763  0C91  1703               	bsf	3,6	;RP1=1, select bank3
  8764  0C92  0816               	movf	(_F3+2)^(0+384),w
  8765  0C93  1283               	bcf	3,5	;RP0=0, select bank0
  8766  0C94  1303               	bcf	3,6	;RP1=0, select bank0
  8767  0C95  00C0               	movwf	___flmul@f1+2
  8768  0C96  1683               	bsf	3,5	;RP0=1, select bank3
  8769  0C97  1703               	bsf	3,6	;RP1=1, select bank3
  8770  0C98  0815               	movf	(_F3+1)^(0+384),w
  8771  0C99  1283               	bcf	3,5	;RP0=0, select bank0
  8772  0C9A  1303               	bcf	3,6	;RP1=0, select bank0
  8773  0C9B  00BF               	movwf	___flmul@f1+1
  8774  0C9C  1683               	bsf	3,5	;RP0=1, select bank3
  8775  0C9D  1703               	bsf	3,6	;RP1=1, select bank3
  8776  0C9E  0814               	movf	_F3^(0+384),w
  8777  0C9F  1283               	bcf	3,5	;RP0=0, select bank0
  8778  0CA0  1303               	bcf	3,6	;RP1=0, select bank0
  8779  0CA1  00BE               	movwf	___flmul@f1
  8780  0CA2  1683               	bsf	3,5	;RP0=1, select bank1
  8781  0CA3  0860               	movf	(_measure_inductance$1016+3)^(0+128),w
  8782  0CA4  1283               	bcf	3,5	;RP0=0, select bank0
  8783  0CA5  00C5               	movwf	___flmul@f2+3
  8784  0CA6  1683               	bsf	3,5	;RP0=1, select bank1
  8785  0CA7  085F               	movf	(_measure_inductance$1016+2)^(0+128),w
  8786  0CA8  1283               	bcf	3,5	;RP0=0, select bank0
  8787  0CA9  00C4               	movwf	___flmul@f2+2
  8788  0CAA  1683               	bsf	3,5	;RP0=1, select bank1
  8789  0CAB  085E               	movf	(_measure_inductance$1016+1)^(0+128),w
  8790  0CAC  1283               	bcf	3,5	;RP0=0, select bank0
  8791  0CAD  00C3               	movwf	___flmul@f2+1
  8792  0CAE  1683               	bsf	3,5	;RP0=1, select bank1
  8793  0CAF  085D               	movf	_measure_inductance$1016^(0+128),w
  8794  0CB0  1283               	bcf	3,5	;RP0=0, select bank0
  8795  0CB1  00C2               	movwf	___flmul@f2
  8796  0CB2  2698  120A  158A   	fcall	___flmul
  8797  0CB5  0841               	movf	?___flmul+3,w
  8798  0CB6  1683               	bsf	3,5	;RP0=1, select bank1
  8799  0CB7  00CF               	movwf	(_measure_inductance$1018+3)^(0+128)
  8800  0CB8  1283               	bcf	3,5	;RP0=0, select bank0
  8801  0CB9  0840               	movf	?___flmul+2,w
  8802  0CBA  1683               	bsf	3,5	;RP0=1, select bank1
  8803  0CBB  00CE               	movwf	(_measure_inductance$1018+2)^(0+128)
  8804  0CBC  1283               	bcf	3,5	;RP0=0, select bank0
  8805  0CBD  083F               	movf	?___flmul+1,w
  8806  0CBE  1683               	bsf	3,5	;RP0=1, select bank1
  8807  0CBF  00CD               	movwf	(_measure_inductance$1018+1)^(0+128)
  8808  0CC0  1283               	bcf	3,5	;RP0=0, select bank0
  8809  0CC1  083E               	movf	?___flmul,w
  8810  0CC2  1683               	bsf	3,5	;RP0=1, select bank1
  8811  0CC3  00CC               	movwf	_measure_inductance$1018^(0+128)
  8812                           
  8813                           ;measure.c: 213: denominator = 4 * 3.14159265358979323846l * 3.14159265358979323846l * F
      +                          1 * F1 * F2 * F2 * F3 * F3 * CCal;
  8814  0CC4  1703               	bsf	3,6	;RP1=1, select bank3
  8815  0CC5  085A               	movf	(_CCal+3)^(0+384),w
  8816  0CC6  1283               	bcf	3,5	;RP0=0, select bank0
  8817  0CC7  1303               	bcf	3,6	;RP1=0, select bank0
  8818  0CC8  00C1               	movwf	___flmul@f1+3
  8819  0CC9  1683               	bsf	3,5	;RP0=1, select bank3
  8820  0CCA  1703               	bsf	3,6	;RP1=1, select bank3
  8821  0CCB  0859               	movf	(_CCal+2)^(0+384),w
  8822  0CCC  1283               	bcf	3,5	;RP0=0, select bank0
  8823  0CCD  1303               	bcf	3,6	;RP1=0, select bank0
  8824  0CCE  00C0               	movwf	___flmul@f1+2
  8825  0CCF  1683               	bsf	3,5	;RP0=1, select bank3
  8826  0CD0  1703               	bsf	3,6	;RP1=1, select bank3
  8827  0CD1  0858               	movf	(_CCal+1)^(0+384),w
  8828  0CD2  1283               	bcf	3,5	;RP0=0, select bank0
  8829  0CD3  1303               	bcf	3,6	;RP1=0, select bank0
  8830  0CD4  00BF               	movwf	___flmul@f1+1
  8831  0CD5  1683               	bsf	3,5	;RP0=1, select bank3
  8832  0CD6  1703               	bsf	3,6	;RP1=1, select bank3
  8833  0CD7  0857               	movf	_CCal^(0+384),w
  8834  0CD8  1283               	bcf	3,5	;RP0=0, select bank0
  8835  0CD9  1303               	bcf	3,6	;RP1=0, select bank0
  8836  0CDA  00BE               	movwf	___flmul@f1
  8837  0CDB  1683               	bsf	3,5	;RP0=1, select bank1
  8838  0CDC  084F               	movf	(_measure_inductance$1018+3)^(0+128),w
  8839  0CDD  1283               	bcf	3,5	;RP0=0, select bank0
  8840  0CDE  00C5               	movwf	___flmul@f2+3
  8841  0CDF  1683               	bsf	3,5	;RP0=1, select bank1
  8842  0CE0  084E               	movf	(_measure_inductance$1018+2)^(0+128),w
  8843  0CE1  1283               	bcf	3,5	;RP0=0, select bank0
  8844  0CE2  00C4               	movwf	___flmul@f2+2
  8845  0CE3  1683               	bsf	3,5	;RP0=1, select bank1
  8846  0CE4  084D               	movf	(_measure_inductance$1018+1)^(0+128),w
  8847  0CE5  1283               	bcf	3,5	;RP0=0, select bank0
  8848  0CE6  00C3               	movwf	___flmul@f2+1
  8849  0CE7  1683               	bsf	3,5	;RP0=1, select bank1
  8850  0CE8  084C               	movf	_measure_inductance$1018^(0+128),w
  8851  0CE9  1283               	bcf	3,5	;RP0=0, select bank0
  8852  0CEA  00C2               	movwf	___flmul@f2
  8853  0CEB  2698  120A  158A   	fcall	___flmul
  8854  0CEE  0841               	movf	?___flmul+3,w
  8855  0CEF  1683               	bsf	3,5	;RP0=1, select bank1
  8856  0CF0  00D3               	movwf	(_measure_inductance$1019+3)^(0+128)
  8857  0CF1  1283               	bcf	3,5	;RP0=0, select bank0
  8858  0CF2  0840               	movf	?___flmul+2,w
  8859  0CF3  1683               	bsf	3,5	;RP0=1, select bank1
  8860  0CF4  00D2               	movwf	(_measure_inductance$1019+2)^(0+128)
  8861  0CF5  1283               	bcf	3,5	;RP0=0, select bank0
  8862  0CF6  083F               	movf	?___flmul+1,w
  8863  0CF7  1683               	bsf	3,5	;RP0=1, select bank1
  8864  0CF8  00D1               	movwf	(_measure_inductance$1019+1)^(0+128)
  8865  0CF9  1283               	bcf	3,5	;RP0=0, select bank0
  8866  0CFA  083E               	movf	?___flmul,w
  8867  0CFB  1683               	bsf	3,5	;RP0=1, select bank1
  8868  0CFC  00D0               	movwf	_measure_inductance$1019^(0+128)
  8869                           
  8870                           ;measure.c: 213: denominator = 4 * 3.14159265358979323846l * 3.14159265358979323846l * F
      +                          1 * F1 * F2 * F2 * F3 * F3 * CCal;
  8871  0CFD  3042               	movlw	66
  8872  0CFE  1283               	bcf	3,5	;RP0=0, select bank0
  8873  0CFF  00C1               	movwf	___flmul@f1+3
  8874  0D00  301D               	movlw	29
  8875  0D01  00C0               	movwf	___flmul@f1+2
  8876  0D02  30E9               	movlw	233
  8877  0D03  00BF               	movwf	___flmul@f1+1
  8878  0D04  30E6               	movlw	230
  8879  0D05  00BE               	movwf	___flmul@f1
  8880  0D06  1683               	bsf	3,5	;RP0=1, select bank1
  8881  0D07  0853               	movf	(_measure_inductance$1019+3)^(0+128),w
  8882  0D08  1283               	bcf	3,5	;RP0=0, select bank0
  8883  0D09  00C5               	movwf	___flmul@f2+3
  8884  0D0A  1683               	bsf	3,5	;RP0=1, select bank1
  8885  0D0B  0852               	movf	(_measure_inductance$1019+2)^(0+128),w
  8886  0D0C  1283               	bcf	3,5	;RP0=0, select bank0
  8887  0D0D  00C4               	movwf	___flmul@f2+2
  8888  0D0E  1683               	bsf	3,5	;RP0=1, select bank1
  8889  0D0F  0851               	movf	(_measure_inductance$1019+1)^(0+128),w
  8890  0D10  1283               	bcf	3,5	;RP0=0, select bank0
  8891  0D11  00C3               	movwf	___flmul@f2+1
  8892  0D12  1683               	bsf	3,5	;RP0=1, select bank1
  8893  0D13  0850               	movf	_measure_inductance$1019^(0+128),w
  8894  0D14  1283               	bcf	3,5	;RP0=0, select bank0
  8895  0D15  00C2               	movwf	___flmul@f2
  8896  0D16  2698  120A  158A   	fcall	___flmul
  8897  0D19  0841               	movf	?___flmul+3,w
  8898  0D1A  1683               	bsf	3,5	;RP0=1, select bank1
  8899  0D1B  00C3               	movwf	(measure_inductance@denominator+3)^(0+128)
  8900  0D1C  1283               	bcf	3,5	;RP0=0, select bank0
  8901  0D1D  0840               	movf	?___flmul+2,w
  8902  0D1E  1683               	bsf	3,5	;RP0=1, select bank1
  8903  0D1F  00C2               	movwf	(measure_inductance@denominator+2)^(0+128)
  8904  0D20  1283               	bcf	3,5	;RP0=0, select bank0
  8905  0D21  083F               	movf	?___flmul+1,w
  8906  0D22  1683               	bsf	3,5	;RP0=1, select bank1
  8907  0D23  00C1               	movwf	(measure_inductance@denominator+1)^(0+128)
  8908  0D24  1283               	bcf	3,5	;RP0=0, select bank0
  8909  0D25  083E               	movf	?___flmul,w
  8910  0D26  1683               	bsf	3,5	;RP0=1, select bank1
  8911  0D27  00C0               	movwf	measure_inductance@denominator^(0+128)
  8912                           
  8913                           ;measure.c: 214: Lin = (numerator / denominator) * 1e+15l;
  8914  0D28  3058               	movlw	88
  8915  0D29  1283               	bcf	3,5	;RP0=0, select bank0
  8916  0D2A  00C1               	movwf	___flmul@f1+3
  8917  0D2B  3063               	movlw	99
  8918  0D2C  00C0               	movwf	___flmul@f1+2
  8919  0D2D  305F               	movlw	95
  8920  0D2E  00BF               	movwf	___flmul@f1+1
  8921  0D2F  30A9               	movlw	169
  8922  0D30  00BE               	movwf	___flmul@f1
  8923  0D31  1683               	bsf	3,5	;RP0=1, select bank1
  8924  0D32  0843               	movf	(measure_inductance@denominator+3)^(0+128),w
  8925  0D33  1283               	bcf	3,5	;RP0=0, select bank0
  8926  0D34  00AE               	movwf	___fldiv@f2+3
  8927  0D35  1683               	bsf	3,5	;RP0=1, select bank1
  8928  0D36  0842               	movf	(measure_inductance@denominator+2)^(0+128),w
  8929  0D37  1283               	bcf	3,5	;RP0=0, select bank0
  8930  0D38  00AD               	movwf	___fldiv@f2+2
  8931  0D39  1683               	bsf	3,5	;RP0=1, select bank1
  8932  0D3A  0841               	movf	(measure_inductance@denominator+1)^(0+128),w
  8933  0D3B  1283               	bcf	3,5	;RP0=0, select bank0
  8934  0D3C  00AC               	movwf	___fldiv@f2+1
  8935  0D3D  1683               	bsf	3,5	;RP0=1, select bank1
  8936  0D3E  0840               	movf	measure_inductance@denominator^(0+128),w
  8937  0D3F  1283               	bcf	3,5	;RP0=0, select bank0
  8938  0D40  00AB               	movwf	___fldiv@f2
  8939  0D41  1683               	bsf	3,5	;RP0=1, select bank1
  8940  0D42  083F               	movf	(measure_inductance@numerator+3)^(0+128),w
  8941  0D43  1283               	bcf	3,5	;RP0=0, select bank0
  8942  0D44  00B2               	movwf	___fldiv@f1+3
  8943  0D45  1683               	bsf	3,5	;RP0=1, select bank1
  8944  0D46  083E               	movf	(measure_inductance@numerator+2)^(0+128),w
  8945  0D47  1283               	bcf	3,5	;RP0=0, select bank0
  8946  0D48  00B1               	movwf	___fldiv@f1+2
  8947  0D49  1683               	bsf	3,5	;RP0=1, select bank1
  8948  0D4A  083D               	movf	(measure_inductance@numerator+1)^(0+128),w
  8949  0D4B  1283               	bcf	3,5	;RP0=0, select bank0
  8950  0D4C  00B0               	movwf	___fldiv@f1+1
  8951  0D4D  1683               	bsf	3,5	;RP0=1, select bank1
  8952  0D4E  083C               	movf	measure_inductance@numerator^(0+128),w
  8953  0D4F  1283               	bcf	3,5	;RP0=0, select bank0
  8954  0D50  00AF               	movwf	___fldiv@f1
  8955  0D51  160A  118A  262D  120A  158A  	fcall	___fldiv
  8956  0D56  082E               	movf	?___fldiv+3,w
  8957  0D57  00C5               	movwf	___flmul@f2+3
  8958  0D58  082D               	movf	?___fldiv+2,w
  8959  0D59  00C4               	movwf	___flmul@f2+2
  8960  0D5A  082C               	movf	?___fldiv+1,w
  8961  0D5B  00C3               	movwf	___flmul@f2+1
  8962  0D5C  082B               	movf	?___fldiv,w
  8963  0D5D  00C2               	movwf	___flmul@f2
  8964  0D5E  2698  120A  158A   	fcall	___flmul
  8965  0D61  0841               	movf	?___flmul+3,w
  8966  0D62  1683               	bsf	3,5	;RP0=1, select bank1
  8967  0D63  00E6               	movwf	(measure_inductance@Lin+3)^(0+128)
  8968  0D64  1283               	bcf	3,5	;RP0=0, select bank0
  8969  0D65  0840               	movf	?___flmul+2,w
  8970  0D66  1683               	bsf	3,5	;RP0=1, select bank1
  8971  0D67  00E5               	movwf	(measure_inductance@Lin+2)^(0+128)
  8972  0D68  1283               	bcf	3,5	;RP0=0, select bank0
  8973  0D69  083F               	movf	?___flmul+1,w
  8974  0D6A  1683               	bsf	3,5	;RP0=1, select bank1
  8975  0D6B  00E4               	movwf	(measure_inductance@Lin+1)^(0+128)
  8976  0D6C  1283               	bcf	3,5	;RP0=0, select bank0
  8977  0D6D  083E               	movf	?___flmul,w
  8978  0D6E  1683               	bsf	3,5	;RP0=1, select bank1
  8979  0D6F  00E3               	movwf	measure_inductance@Lin^(0+128)
  8980                           
  8981                           ;measure.c: 216: if(Lin > 999) {
  8982  0D70  3044               	movlw	68
  8983  0D71  1283               	bcf	3,5	;RP0=0, select bank0
  8984  0D72  00A4               	movwf	___flge@ff1+3
  8985  0D73  3079               	movlw	121
  8986  0D74  00A3               	movwf	___flge@ff1+2
  8987  0D75  30C0               	movlw	192
  8988  0D76  00A2               	movwf	___flge@ff1+1
  8989  0D77  01A1               	clrf	___flge@ff1
  8990  0D78  1683               	bsf	3,5	;RP0=1, select bank1
  8991  0D79  0866               	movf	(measure_inductance@Lin+3)^(0+128),w
  8992  0D7A  1283               	bcf	3,5	;RP0=0, select bank0
  8993  0D7B  00A8               	movwf	___flge@ff2+3
  8994  0D7C  1683               	bsf	3,5	;RP0=1, select bank1
  8995  0D7D  0865               	movf	(measure_inductance@Lin+2)^(0+128),w
  8996  0D7E  1283               	bcf	3,5	;RP0=0, select bank0
  8997  0D7F  00A7               	movwf	___flge@ff2+2
  8998  0D80  1683               	bsf	3,5	;RP0=1, select bank1
  8999  0D81  0864               	movf	(measure_inductance@Lin+1)^(0+128),w
  9000  0D82  1283               	bcf	3,5	;RP0=0, select bank0
  9001  0D83  00A6               	movwf	___flge@ff2+1
  9002  0D84  1683               	bsf	3,5	;RP0=1, select bank1
  9003  0D85  0863               	movf	measure_inductance@Lin^(0+128),w
  9004  0D86  1283               	bcf	3,5	;RP0=0, select bank0
  9005  0D87  00A5               	movwf	___flge@ff2
  9006  0D88  2730  120A  158A   	fcall	___flge
  9007  0D8B  1803               	btfsc	3,0
  9008  0D8C  2E4F               	goto	l4842
  9009                           
  9010                           ;measure.c: 217: if(Lin > (999e+03l)) {
  9011  0D8D  3049               	movlw	73
  9012  0D8E  00A4               	movwf	___flge@ff1+3
  9013  0D8F  3073               	movlw	115
  9014  0D90  00A3               	movwf	___flge@ff1+2
  9015  0D91  30E5               	movlw	229
  9016  0D92  00A2               	movwf	___flge@ff1+1
  9017  0D93  3080               	movlw	128
  9018  0D94  00A1               	movwf	___flge@ff1
  9019  0D95  1683               	bsf	3,5	;RP0=1, select bank1
  9020  0D96  0866               	movf	(measure_inductance@Lin+3)^(0+128),w
  9021  0D97  1283               	bcf	3,5	;RP0=0, select bank0
  9022  0D98  00A8               	movwf	___flge@ff2+3
  9023  0D99  1683               	bsf	3,5	;RP0=1, select bank1
  9024  0D9A  0865               	movf	(measure_inductance@Lin+2)^(0+128),w
  9025  0D9B  1283               	bcf	3,5	;RP0=0, select bank0
  9026  0D9C  00A7               	movwf	___flge@ff2+2
  9027  0D9D  1683               	bsf	3,5	;RP0=1, select bank1
  9028  0D9E  0864               	movf	(measure_inductance@Lin+1)^(0+128),w
  9029  0D9F  1283               	bcf	3,5	;RP0=0, select bank0
  9030  0DA0  00A6               	movwf	___flge@ff2+1
  9031  0DA1  1683               	bsf	3,5	;RP0=1, select bank1
  9032  0DA2  0863               	movf	measure_inductance@Lin^(0+128),w
  9033  0DA3  1283               	bcf	3,5	;RP0=0, select bank0
  9034  0DA4  00A5               	movwf	___flge@ff2
  9035  0DA5  2730  120A  158A   	fcall	___flge
  9036  0DA8  1803               	btfsc	3,0
  9037  0DA9  2E23               	goto	l4838
  9038                           
  9039                           ;measure.c: 218: if(Lin > (999e+06l)) {
  9040  0DAA  304E               	movlw	78
  9041  0DAB  00A4               	movwf	___flge@ff1+3
  9042  0DAC  306E               	movlw	110
  9043  0DAD  00A3               	movwf	___flge@ff1+2
  9044  0DAE  302E               	movlw	46
  9045  0DAF  00A2               	movwf	___flge@ff1+1
  9046  0DB0  301F               	movlw	31
  9047  0DB1  00A1               	movwf	___flge@ff1
  9048  0DB2  1683               	bsf	3,5	;RP0=1, select bank1
  9049  0DB3  0866               	movf	(measure_inductance@Lin+3)^(0+128),w
  9050  0DB4  1283               	bcf	3,5	;RP0=0, select bank0
  9051  0DB5  00A8               	movwf	___flge@ff2+3
  9052  0DB6  1683               	bsf	3,5	;RP0=1, select bank1
  9053  0DB7  0865               	movf	(measure_inductance@Lin+2)^(0+128),w
  9054  0DB8  1283               	bcf	3,5	;RP0=0, select bank0
  9055  0DB9  00A7               	movwf	___flge@ff2+2
  9056  0DBA  1683               	bsf	3,5	;RP0=1, select bank1
  9057  0DBB  0864               	movf	(measure_inductance@Lin+1)^(0+128),w
  9058  0DBC  1283               	bcf	3,5	;RP0=0, select bank0
  9059  0DBD  00A6               	movwf	___flge@ff2+1
  9060  0DBE  1683               	bsf	3,5	;RP0=1, select bank1
  9061  0DBF  0863               	movf	measure_inductance@Lin^(0+128),w
  9062  0DC0  1283               	bcf	3,5	;RP0=0, select bank0
  9063  0DC1  00A5               	movwf	___flge@ff2
  9064  0DC2  2730  120A  158A   	fcall	___flge
  9065  0DC5  1803               	btfsc	3,0
  9066  0DC6  2DF5               	goto	l4834
  9067                           
  9068                           ;measure.c: 219: Lin = Lin / (1e+09l);
  9069  0DC7  304E               	movlw	78
  9070  0DC8  00AE               	movwf	___fldiv@f2+3
  9071  0DC9  306E               	movlw	110
  9072  0DCA  00AD               	movwf	___fldiv@f2+2
  9073  0DCB  306B               	movlw	107
  9074  0DCC  00AC               	movwf	___fldiv@f2+1
  9075  0DCD  3028               	movlw	40
  9076  0DCE  00AB               	movwf	___fldiv@f2
  9077  0DCF  1683               	bsf	3,5	;RP0=1, select bank1
  9078  0DD0  0866               	movf	(measure_inductance@Lin+3)^(0+128),w
  9079  0DD1  1283               	bcf	3,5	;RP0=0, select bank0
  9080  0DD2  00B2               	movwf	___fldiv@f1+3
  9081  0DD3  1683               	bsf	3,5	;RP0=1, select bank1
  9082  0DD4  0865               	movf	(measure_inductance@Lin+2)^(0+128),w
  9083  0DD5  1283               	bcf	3,5	;RP0=0, select bank0
  9084  0DD6  00B1               	movwf	___fldiv@f1+2
  9085  0DD7  1683               	bsf	3,5	;RP0=1, select bank1
  9086  0DD8  0864               	movf	(measure_inductance@Lin+1)^(0+128),w
  9087  0DD9  1283               	bcf	3,5	;RP0=0, select bank0
  9088  0DDA  00B0               	movwf	___fldiv@f1+1
  9089  0DDB  1683               	bsf	3,5	;RP0=1, select bank1
  9090  0DDC  0863               	movf	measure_inductance@Lin^(0+128),w
  9091  0DDD  1283               	bcf	3,5	;RP0=0, select bank0
  9092  0DDE  00AF               	movwf	___fldiv@f1
  9093  0DDF  160A  118A  262D  120A  158A  	fcall	___fldiv
  9094  0DE4  082E               	movf	?___fldiv+3,w
  9095  0DE5  1683               	bsf	3,5	;RP0=1, select bank1
  9096  0DE6  00E6               	movwf	(measure_inductance@Lin+3)^(0+128)
  9097  0DE7  1283               	bcf	3,5	;RP0=0, select bank0
  9098  0DE8  082D               	movf	?___fldiv+2,w
  9099  0DE9  1683               	bsf	3,5	;RP0=1, select bank1
  9100  0DEA  00E5               	movwf	(measure_inductance@Lin+2)^(0+128)
  9101  0DEB  1283               	bcf	3,5	;RP0=0, select bank0
  9102  0DEC  082C               	movf	?___fldiv+1,w
  9103  0DED  1683               	bsf	3,5	;RP0=1, select bank1
  9104  0DEE  00E4               	movwf	(measure_inductance@Lin+1)^(0+128)
  9105  0DEF  1283               	bcf	3,5	;RP0=0, select bank0
  9106  0DF0  082B               	movf	?___fldiv,w
  9107  0DF1  1683               	bsf	3,5	;RP0=1, select bank1
  9108  0DF2  00E3               	movwf	measure_inductance@Lin^(0+128)
  9109                           
  9110                           ;measure.c: 220: unit = 0;
  9111  0DF3  01D4               	clrf	measure_inductance@unit^(0+128)
  9112                           
  9113                           ;measure.c: 221: } else {
  9114  0DF4  2E52               	goto	l4844
  9115  0DF5                     l4834:	
  9116                           
  9117                           ;measure.c: 222: Lin = Lin / (1e+06l);
  9118  0DF5  3049               	movlw	73
  9119  0DF6  00AE               	movwf	___fldiv@f2+3
  9120  0DF7  3074               	movlw	116
  9121  0DF8  00AD               	movwf	___fldiv@f2+2
  9122  0DF9  3024               	movlw	36
  9123  0DFA  00AC               	movwf	___fldiv@f2+1
  9124  0DFB  01AB               	clrf	___fldiv@f2
  9125  0DFC  1683               	bsf	3,5	;RP0=1, select bank1
  9126  0DFD  0866               	movf	(measure_inductance@Lin+3)^(0+128),w
  9127  0DFE  1283               	bcf	3,5	;RP0=0, select bank0
  9128  0DFF  00B2               	movwf	___fldiv@f1+3
  9129  0E00  1683               	bsf	3,5	;RP0=1, select bank1
  9130  0E01  0865               	movf	(measure_inductance@Lin+2)^(0+128),w
  9131  0E02  1283               	bcf	3,5	;RP0=0, select bank0
  9132  0E03  00B1               	movwf	___fldiv@f1+2
  9133  0E04  1683               	bsf	3,5	;RP0=1, select bank1
  9134  0E05  0864               	movf	(measure_inductance@Lin+1)^(0+128),w
  9135  0E06  1283               	bcf	3,5	;RP0=0, select bank0
  9136  0E07  00B0               	movwf	___fldiv@f1+1
  9137  0E08  1683               	bsf	3,5	;RP0=1, select bank1
  9138  0E09  0863               	movf	measure_inductance@Lin^(0+128),w
  9139  0E0A  1283               	bcf	3,5	;RP0=0, select bank0
  9140  0E0B  00AF               	movwf	___fldiv@f1
  9141  0E0C  160A  118A  262D  120A  158A  	fcall	___fldiv
  9142  0E11  082E               	movf	?___fldiv+3,w
  9143  0E12  1683               	bsf	3,5	;RP0=1, select bank1
  9144  0E13  00E6               	movwf	(measure_inductance@Lin+3)^(0+128)
  9145  0E14  1283               	bcf	3,5	;RP0=0, select bank0
  9146  0E15  082D               	movf	?___fldiv+2,w
  9147  0E16  1683               	bsf	3,5	;RP0=1, select bank1
  9148  0E17  00E5               	movwf	(measure_inductance@Lin+2)^(0+128)
  9149  0E18  1283               	bcf	3,5	;RP0=0, select bank0
  9150  0E19  082C               	movf	?___fldiv+1,w
  9151  0E1A  1683               	bsf	3,5	;RP0=1, select bank1
  9152  0E1B  00E4               	movwf	(measure_inductance@Lin+1)^(0+128)
  9153  0E1C  1283               	bcf	3,5	;RP0=0, select bank0
  9154  0E1D  082B               	movf	?___fldiv,w
  9155  0E1E  1683               	bsf	3,5	;RP0=1, select bank1
  9156  0E1F  00E3               	movwf	measure_inductance@Lin^(0+128)
  9157                           
  9158                           ;measure.c: 223: unit = 1;
  9159  0E20  01D4               	clrf	measure_inductance@unit^(0+128)
  9160  0E21  0AD4               	incf	measure_inductance@unit^(0+128),f
  9161  0E22  2E52               	goto	l4844
  9162  0E23                     l4838:	
  9163                           
  9164                           ;measure.c: 226: Lin = Lin / 1e+03l;
  9165  0E23  3044               	movlw	68
  9166  0E24  00AE               	movwf	___fldiv@f2+3
  9167  0E25  307A               	movlw	122
  9168  0E26  00AD               	movwf	___fldiv@f2+2
  9169  0E27  01AC               	clrf	___fldiv@f2+1
  9170  0E28  01AB               	clrf	___fldiv@f2
  9171  0E29  1683               	bsf	3,5	;RP0=1, select bank1
  9172  0E2A  0866               	movf	(measure_inductance@Lin+3)^(0+128),w
  9173  0E2B  1283               	bcf	3,5	;RP0=0, select bank0
  9174  0E2C  00B2               	movwf	___fldiv@f1+3
  9175  0E2D  1683               	bsf	3,5	;RP0=1, select bank1
  9176  0E2E  0865               	movf	(measure_inductance@Lin+2)^(0+128),w
  9177  0E2F  1283               	bcf	3,5	;RP0=0, select bank0
  9178  0E30  00B1               	movwf	___fldiv@f1+2
  9179  0E31  1683               	bsf	3,5	;RP0=1, select bank1
  9180  0E32  0864               	movf	(measure_inductance@Lin+1)^(0+128),w
  9181  0E33  1283               	bcf	3,5	;RP0=0, select bank0
  9182  0E34  00B0               	movwf	___fldiv@f1+1
  9183  0E35  1683               	bsf	3,5	;RP0=1, select bank1
  9184  0E36  0863               	movf	measure_inductance@Lin^(0+128),w
  9185  0E37  1283               	bcf	3,5	;RP0=0, select bank0
  9186  0E38  00AF               	movwf	___fldiv@f1
  9187  0E39  160A  118A  262D  120A  158A  	fcall	___fldiv
  9188  0E3E  082E               	movf	?___fldiv+3,w
  9189  0E3F  1683               	bsf	3,5	;RP0=1, select bank1
  9190  0E40  00E6               	movwf	(measure_inductance@Lin+3)^(0+128)
  9191  0E41  1283               	bcf	3,5	;RP0=0, select bank0
  9192  0E42  082D               	movf	?___fldiv+2,w
  9193  0E43  1683               	bsf	3,5	;RP0=1, select bank1
  9194  0E44  00E5               	movwf	(measure_inductance@Lin+2)^(0+128)
  9195  0E45  1283               	bcf	3,5	;RP0=0, select bank0
  9196  0E46  082C               	movf	?___fldiv+1,w
  9197  0E47  1683               	bsf	3,5	;RP0=1, select bank1
  9198  0E48  00E4               	movwf	(measure_inductance@Lin+1)^(0+128)
  9199  0E49  1283               	bcf	3,5	;RP0=0, select bank0
  9200  0E4A  082B               	movf	?___fldiv,w
  9201  0E4B  1683               	bsf	3,5	;RP0=1, select bank1
  9202  0E4C  00E3               	movwf	measure_inductance@Lin^(0+128)
  9203                           
  9204                           ;measure.c: 227: unit = 2;
  9205  0E4D  3002               	movlw	2
  9206  0E4E  2E51               	goto	L6
  9207  0E4F                     l4842:	
  9208                           
  9209                           ;measure.c: 230: unit = 3;
  9210  0E4F  3003               	movlw	3
  9211  0E50  1683               	bsf	3,5	;RP0=1, select bank1
  9212  0E51                     L6:	
  9213  0E51  00D4               	movwf	measure_inductance@unit^(0+128)
  9214  0E52                     l4844:	
  9215                           
  9216                           ;measure.c: 232: Lin = Lin * 100;
  9217  0E52  3042               	movlw	66
  9218  0E53  1283               	bcf	3,5	;RP0=0, select bank0
  9219  0E54  00C1               	movwf	___flmul@f1+3
  9220  0E55  30C8               	movlw	200
  9221  0E56  00C0               	movwf	___flmul@f1+2
  9222  0E57  01BF               	clrf	___flmul@f1+1
  9223  0E58  01BE               	clrf	___flmul@f1
  9224  0E59  1683               	bsf	3,5	;RP0=1, select bank1
  9225  0E5A  0866               	movf	(measure_inductance@Lin+3)^(0+128),w
  9226  0E5B  1283               	bcf	3,5	;RP0=0, select bank0
  9227  0E5C  00C5               	movwf	___flmul@f2+3
  9228  0E5D  1683               	bsf	3,5	;RP0=1, select bank1
  9229  0E5E  0865               	movf	(measure_inductance@Lin+2)^(0+128),w
  9230  0E5F  1283               	bcf	3,5	;RP0=0, select bank0
  9231  0E60  00C4               	movwf	___flmul@f2+2
  9232  0E61  1683               	bsf	3,5	;RP0=1, select bank1
  9233  0E62  0864               	movf	(measure_inductance@Lin+1)^(0+128),w
  9234  0E63  1283               	bcf	3,5	;RP0=0, select bank0
  9235  0E64  00C3               	movwf	___flmul@f2+1
  9236  0E65  1683               	bsf	3,5	;RP0=1, select bank1
  9237  0E66  0863               	movf	measure_inductance@Lin^(0+128),w
  9238  0E67  1283               	bcf	3,5	;RP0=0, select bank0
  9239  0E68  00C2               	movwf	___flmul@f2
  9240  0E69  2698               	fcall	___flmul
  9241  0E6A  0841               	movf	?___flmul+3,w
  9242  0E6B  1683               	bsf	3,5	;RP0=1, select bank1
  9243  0E6C  00E6               	movwf	(measure_inductance@Lin+3)^(0+128)
  9244  0E6D  1283               	bcf	3,5	;RP0=0, select bank0
  9245  0E6E  0840               	movf	?___flmul+2,w
  9246  0E6F  1683               	bsf	3,5	;RP0=1, select bank1
  9247  0E70  00E5               	movwf	(measure_inductance@Lin+2)^(0+128)
  9248  0E71  1283               	bcf	3,5	;RP0=0, select bank0
  9249  0E72  083F               	movf	?___flmul+1,w
  9250  0E73  1683               	bsf	3,5	;RP0=1, select bank1
  9251  0E74  00E4               	movwf	(measure_inductance@Lin+1)^(0+128)
  9252  0E75  1283               	bcf	3,5	;RP0=0, select bank0
  9253  0E76  083E               	movf	?___flmul,w
  9254  0E77  1683               	bsf	3,5	;RP0=1, select bank1
  9255  0E78  00E3               	movwf	measure_inductance@Lin^(0+128)
  9256                           
  9257                           ;measure.c: 233: var = (uint16_t)Lin;
  9258  0E79  0866               	movf	(measure_inductance@Lin+3)^(0+128),w
  9259  0E7A  00B5               	movwf	(___fltol@f1+3)^(0+128)
  9260  0E7B  0865               	movf	(measure_inductance@Lin+2)^(0+128),w
  9261  0E7C  00B4               	movwf	(___fltol@f1+2)^(0+128)
  9262  0E7D  0864               	movf	(measure_inductance@Lin+1)^(0+128),w
  9263  0E7E  00B3               	movwf	(___fltol@f1+1)^(0+128)
  9264  0E7F  0863               	movf	measure_inductance@Lin^(0+128),w
  9265  0E80  00B2               	movwf	___fltol@f1^(0+128)
  9266  0E81  160A  118A  26A6  120A  158A  	fcall	___fltol
  9267  0E86  0833               	movf	(?___fltol^(0+128)+1),w
  9268  0E87  00E2               	movwf	(measure_inductance@var+1)^(0+128)
  9269  0E88  0832               	movf	?___fltol^(0+128),w
  9270  0E89  00E1               	movwf	measure_inductance@var^(0+128)
  9271                           
  9272                           ;measure.c: 235: print_reading(var);
  9273  0E8A  0862               	movf	(measure_inductance@var+1)^(0+128),w
  9274  0E8B  1283               	bcf	3,5	;RP0=0, select bank0
  9275  0E8C  00D2               	movwf	print_reading@measurement+1
  9276  0E8D  1683               	bsf	3,5	;RP0=1, select bank1
  9277  0E8E  0861               	movf	measure_inductance@var^(0+128),w
  9278  0E8F  1283               	bcf	3,5	;RP0=0, select bank0
  9279  0E90  00D1               	movwf	print_reading@measurement
  9280  0E91  160A  158A  25F1   	fcall	_print_reading
  9281                           
  9282                           ;measure.c: 236: print_unit(unit);
  9283  0E94  1683               	bsf	3,5	;RP0=1, select bank1
  9284  0E95  160A  158A  2C14   	ljmp	l4386
  9285  0E98                     __end_of_measure_inductance:	
  9286  0E98                     __ptext26:	
  9287 ;; *************** function ___flmul *****************
  9288 ;; Defined at:
  9289 ;;		line 62 in file "/opt/microchip/xc8/v1.34/sources/common/flmul.c"
  9290 ;; Parameters:    Size  Location     Type
  9291 ;;  f1              4   29[BANK0 ] int 
  9292 ;;  f2              4   33[BANK0 ] int 
  9293 ;; Auto vars:     Size  Location     Type
  9294 ;;  f3_as_produc    4   42[BANK0 ] unsigned long 
  9295 ;;  sign            1   47[BANK0 ] unsigned char 
  9296 ;;  cntr            1   46[BANK0 ] unsigned char 
  9297 ;;  exp             1   41[BANK0 ] unsigned char 
  9298 ;; Return value:  Size  Location     Type
  9299 ;;                  4   29[BANK0 ] unsigned char 
  9300 ;; Registers used:
  9301 ;;		wreg, status,2, status,0, pclath, cstack
  9302 ;; Tracked objects:
  9303 ;;		On entry : 300/0
  9304 ;;		On exit  : 300/0
  9305 ;;		Unchanged: 0/0
  9306 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9307 ;;      Params:         0       8       0       0       0
  9308 ;;      Locals:         0       7       0       0       0
  9309 ;;      Temps:          0       4       0       0       0
  9310 ;;      Totals:         0      19       0       0       0
  9311 ;;Total ram usage:       19 bytes
  9312 ;; Hardware stack levels used:    1
  9313 ;; Hardware stack levels required when called:    2
  9314 ;; This function calls:
  9315 ;;		___flpack
  9316 ;; This function is called by:
  9317 ;;		_format_double
  9318 ;;		_measure_capacitance
  9319 ;;		_measure_inductance
  9320 ;;		_log
  9321 ;;		_log10
  9322 ;;		_pow
  9323 ;;		_eval_poly
  9324 ;;		_exp
  9325 ;; This function uses a non-reentrant model
  9326 ;;
  9327                           
  9328                           
  9329                           ;psect for function ___flmul
  9330  0E98                     ___flmul:	
  9331                           
  9332                           ;incstack = 0
  9333                           ; Regs used in ___flmul: [wreg+status,2+status,0+pclath+cstack]
  9334  0E98  083E               	movf	___flmul@f1,w
  9335  0E99  00C6               	movwf	??___flmul
  9336  0E9A  083F               	movf	___flmul@f1+1,w
  9337  0E9B  00C7               	movwf	??___flmul+1
  9338  0E9C  0840               	movf	___flmul@f1+2,w
  9339  0E9D  00C8               	movwf	??___flmul+2
  9340  0E9E  0841               	movf	___flmul@f1+3,w
  9341  0E9F  00C9               	movwf	??___flmul+3
  9342  0EA0  1003               	clrc
  9343  0EA1  0D48               	rlf	??___flmul+2,w
  9344  0EA2  0D49               	rlf	??___flmul+3,w
  9345  0EA3  00CA               	movwf	___flmul@exp
  9346  0EA4  084A               	movf	___flmul@exp,w
  9347  0EA5  1D03               	btfss	3,2
  9348  0EA6  2EAC               	goto	l3836
  9349  0EA7  01BE               	clrf	?___flmul
  9350  0EA8  01BF               	clrf	?___flmul+1
  9351  0EA9  01C0               	clrf	?___flmul+2
  9352  0EAA  01C1               	clrf	?___flmul+3
  9353  0EAB  0008               	return
  9354  0EAC                     l3836:	
  9355  0EAC  0842               	movf	___flmul@f2,w
  9356  0EAD  00C6               	movwf	??___flmul
  9357  0EAE  0843               	movf	___flmul@f2+1,w
  9358  0EAF  00C7               	movwf	??___flmul+1
  9359  0EB0  0844               	movf	___flmul@f2+2,w
  9360  0EB1  00C8               	movwf	??___flmul+2
  9361  0EB2  0845               	movf	___flmul@f2+3,w
  9362  0EB3  00C9               	movwf	??___flmul+3
  9363  0EB4  1003               	clrc
  9364  0EB5  0D48               	rlf	??___flmul+2,w
  9365  0EB6  0D49               	rlf	??___flmul+3,w
  9366  0EB7  00D0               	movwf	___flmul@sign
  9367  0EB8  0850               	movf	___flmul@sign,w
  9368  0EB9  1D03               	btfss	3,2
  9369  0EBA  2EC0               	goto	l3840
  9370  0EBB  01BE               	clrf	?___flmul
  9371  0EBC  01BF               	clrf	?___flmul+1
  9372  0EBD  01C0               	clrf	?___flmul+2
  9373  0EBE  01C1               	clrf	?___flmul+3
  9374  0EBF  0008               	return
  9375  0EC0                     l3840:	
  9376  0EC0  0850               	movf	___flmul@sign,w
  9377  0EC1  3E7B               	addlw	123
  9378  0EC2  07CA               	addwf	___flmul@exp,f
  9379  0EC3  0841               	movf	___flmul@f1+3,w
  9380  0EC4  00D0               	movwf	___flmul@sign
  9381  0EC5  0845               	movf	___flmul@f2+3,w
  9382  0EC6  06D0               	xorwf	___flmul@sign,f
  9383  0EC7  3080               	movlw	128
  9384  0EC8  05D0               	andwf	___flmul@sign,f
  9385  0EC9  3007               	movlw	7
  9386  0ECA  17C0               	bsf	___flmul@f1+2,7
  9387  0ECB  17C4               	bsf	___flmul@f2+2,7
  9388  0ECC  01C5               	clrf	___flmul@f2+3
  9389  0ECD  01CB               	clrf	___flmul@f3_as_product
  9390  0ECE  01CC               	clrf	___flmul@f3_as_product+1
  9391  0ECF  01CD               	clrf	___flmul@f3_as_product+2
  9392  0ED0  01CE               	clrf	___flmul@f3_as_product+3
  9393  0ED1  00CF               	movwf	___flmul@cntr
  9394  0ED2                     l3858:	
  9395  0ED2  1C3E               	btfss	___flmul@f1,0
  9396  0ED3  2EE8               	goto	l3862
  9397  0ED4  0842               	movf	___flmul@f2,w
  9398  0ED5  07CB               	addwf	___flmul@f3_as_product,f
  9399  0ED6  0843               	movf	___flmul@f2+1,w
  9400  0ED7  1103               	clrz
  9401  0ED8  1803               	skipnc
  9402  0ED9  3E01               	addlw	1
  9403  0EDA  1D03               	btfss	3,2
  9404  0EDB  07CC               	addwf	___flmul@f3_as_product+1,f
  9405  0EDC  0844               	movf	___flmul@f2+2,w
  9406  0EDD  1103               	clrz
  9407  0EDE  1803               	skipnc
  9408  0EDF  3E01               	addlw	1
  9409  0EE0  1D03               	btfss	3,2
  9410  0EE1  07CD               	addwf	___flmul@f3_as_product+2,f
  9411  0EE2  0845               	movf	___flmul@f2+3,w
  9412  0EE3  1103               	clrz
  9413  0EE4  1803               	skipnc
  9414  0EE5  3E01               	addlw	1
  9415  0EE6  1D03               	btfss	3,2
  9416  0EE7  07CE               	addwf	___flmul@f3_as_product+3,f
  9417  0EE8                     l3862:	
  9418  0EE8  1003               	clrc
  9419  0EE9  0CC1               	rrf	___flmul@f1+3,f
  9420  0EEA  0CC0               	rrf	___flmul@f1+2,f
  9421  0EEB  0CBF               	rrf	___flmul@f1+1,f
  9422  0EEC  0CBE               	rrf	___flmul@f1,f
  9423  0EED  1003               	clrc
  9424  0EEE  0DC2               	rlf	___flmul@f2,f
  9425  0EEF  0DC3               	rlf	___flmul@f2+1,f
  9426  0EF0  0DC4               	rlf	___flmul@f2+2,f
  9427  0EF1  0DC5               	rlf	___flmul@f2+3,f
  9428  0EF2  0BCF               	decfsz	___flmul@cntr,f
  9429  0EF3  2ED2               	goto	l3858
  9430  0EF4  3011               	movlw	17
  9431  0EF5  00CF               	movwf	___flmul@cntr
  9432  0EF6                     l3870:	
  9433  0EF6  1C3E               	btfss	___flmul@f1,0
  9434  0EF7  2F0C               	goto	l3874
  9435  0EF8  0842               	movf	___flmul@f2,w
  9436  0EF9  07CB               	addwf	___flmul@f3_as_product,f
  9437  0EFA  0843               	movf	___flmul@f2+1,w
  9438  0EFB  1103               	clrz
  9439  0EFC  1803               	skipnc
  9440  0EFD  3E01               	addlw	1
  9441  0EFE  1D03               	btfss	3,2
  9442  0EFF  07CC               	addwf	___flmul@f3_as_product+1,f
  9443  0F00  0844               	movf	___flmul@f2+2,w
  9444  0F01  1103               	clrz
  9445  0F02  1803               	skipnc
  9446  0F03  3E01               	addlw	1
  9447  0F04  1D03               	btfss	3,2
  9448  0F05  07CD               	addwf	___flmul@f3_as_product+2,f
  9449  0F06  0845               	movf	___flmul@f2+3,w
  9450  0F07  1103               	clrz
  9451  0F08  1803               	skipnc
  9452  0F09  3E01               	addlw	1
  9453  0F0A  1D03               	btfss	3,2
  9454  0F0B  07CE               	addwf	___flmul@f3_as_product+3,f
  9455  0F0C                     l3874:	
  9456  0F0C  1003               	clrc
  9457  0F0D  0CC1               	rrf	___flmul@f1+3,f
  9458  0F0E  0CC0               	rrf	___flmul@f1+2,f
  9459  0F0F  0CBF               	rrf	___flmul@f1+1,f
  9460  0F10  0CBE               	rrf	___flmul@f1,f
  9461  0F11  1003               	clrc
  9462  0F12  0CCE               	rrf	___flmul@f3_as_product+3,f
  9463  0F13  0CCD               	rrf	___flmul@f3_as_product+2,f
  9464  0F14  0CCC               	rrf	___flmul@f3_as_product+1,f
  9465  0F15  0CCB               	rrf	___flmul@f3_as_product,f
  9466  0F16  0BCF               	decfsz	___flmul@cntr,f
  9467  0F17  2EF6               	goto	l3870
  9468  0F18  084E               	movf	___flmul@f3_as_product+3,w
  9469  0F19  00A4               	movwf	___flpack@arg+3
  9470  0F1A  084D               	movf	___flmul@f3_as_product+2,w
  9471  0F1B  00A3               	movwf	___flpack@arg+2
  9472  0F1C  084C               	movf	___flmul@f3_as_product+1,w
  9473  0F1D  00A2               	movwf	___flpack@arg+1
  9474  0F1E  084B               	movf	___flmul@f3_as_product,w
  9475  0F1F  00A1               	movwf	___flpack@arg
  9476  0F20  084A               	movf	___flmul@exp,w
  9477  0F21  00A5               	movwf	___flpack@exp
  9478  0F22  0850               	movf	___flmul@sign,w
  9479  0F23  00A6               	movwf	___flpack@sign
  9480  0F24  160A  118A  279E   	fcall	___flpack
  9481  0F27  0824               	movf	?___flpack+3,w
  9482  0F28  00C1               	movwf	?___flmul+3
  9483  0F29  0823               	movf	?___flpack+2,w
  9484  0F2A  00C0               	movwf	?___flmul+2
  9485  0F2B  0822               	movf	?___flpack+1,w
  9486  0F2C  00BF               	movwf	?___flmul+1
  9487  0F2D  0821               	movf	?___flpack,w
  9488  0F2E  00BE               	movwf	?___flmul
  9489  0F2F  0008               	return
  9490  0F30                     __end_of___flmul:	
  9491  0F30                     __ptext28:	
  9492 ;; *************** function ___flge *****************
  9493 ;; Defined at:
  9494 ;;		line 4 in file "/opt/microchip/xc8/v1.34/sources/common/flge.c"
  9495 ;; Parameters:    Size  Location     Type
  9496 ;;  ff1             4    0[BANK0 ] unsigned char 
  9497 ;;  ff2             4    4[BANK0 ] unsigned char 
  9498 ;; Auto vars:     Size  Location     Type
  9499 ;;		None
  9500 ;; Return value:  Size  Location     Type
  9501 ;;		None               void
  9502 ;; Registers used:
  9503 ;;		wreg, status,2, status,0
  9504 ;; Tracked objects:
  9505 ;;		On entry : 300/0
  9506 ;;		On exit  : 300/0
  9507 ;;		Unchanged: 0/0
  9508 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9509 ;;      Params:         0       8       0       0       0
  9510 ;;      Locals:         0       0       0       0       0
  9511 ;;      Temps:          0       4       0       0       0
  9512 ;;      Totals:         0      12       0       0       0
  9513 ;;Total ram usage:       12 bytes
  9514 ;; Hardware stack levels used:    1
  9515 ;; Hardware stack levels required when called:    1
  9516 ;; This function calls:
  9517 ;;		Nothing
  9518 ;; This function is called by:
  9519 ;;		_format_double
  9520 ;;		_measure_capacitance
  9521 ;;		_measure_inductance
  9522 ;;		_floor
  9523 ;;		_ldexp
  9524 ;;		_log
  9525 ;;		_pow
  9526 ;;		_exp
  9527 ;; This function uses a non-reentrant model
  9528 ;;
  9529                           
  9530                           
  9531                           ;psect for function ___flge
  9532  0F30                     ___flge:	
  9533                           
  9534                           ;incstack = 0
  9535                           ; Regs used in ___flge: [wreg+status,2+status,0]
  9536  0F30  1FA4               	btfss	___flge@ff1+3,7
  9537  0F31  2F4D               	goto	l3822
  9538  0F32  3080               	movlw	128
  9539  0F33  01A9               	clrf	??___flge
  9540  0F34  01AA               	clrf	??___flge+1
  9541  0F35  01AB               	clrf	??___flge+2
  9542  0F36  00AC               	movwf	??___flge+3
  9543  0F37  0821               	movf	___flge@ff1,w
  9544  0F38  02A9               	subwf	??___flge,f
  9545  0F39  0822               	movf	___flge@ff1+1,w
  9546  0F3A  1C03               	skipc
  9547  0F3B  0F22               	incfsz	___flge@ff1+1,w
  9548  0F3C  02AA               	subwf	??___flge+1,f
  9549  0F3D  0823               	movf	___flge@ff1+2,w
  9550  0F3E  1C03               	skipc
  9551  0F3F  0F23               	incfsz	___flge@ff1+2,w
  9552  0F40  02AB               	subwf	??___flge+2,f
  9553  0F41  0824               	movf	___flge@ff1+3,w
  9554  0F42  1C03               	skipc
  9555  0F43  0F24               	incfsz	___flge@ff1+3,w
  9556  0F44  02AC               	subwf	??___flge+3,f
  9557  0F45  082C               	movf	??___flge+3,w
  9558  0F46  00A4               	movwf	___flge@ff1+3
  9559  0F47  082B               	movf	??___flge+2,w
  9560  0F48  00A3               	movwf	___flge@ff1+2
  9561  0F49  082A               	movf	??___flge+1,w
  9562  0F4A  00A2               	movwf	___flge@ff1+1
  9563  0F4B  0829               	movf	??___flge,w
  9564  0F4C  00A1               	movwf	___flge@ff1
  9565  0F4D                     l3822:	
  9566  0F4D  1FA8               	btfss	___flge@ff2+3,7
  9567  0F4E  2F6A               	goto	l869
  9568  0F4F  3080               	movlw	128
  9569  0F50  01A9               	clrf	??___flge
  9570  0F51  01AA               	clrf	??___flge+1
  9571  0F52  01AB               	clrf	??___flge+2
  9572  0F53  00AC               	movwf	??___flge+3
  9573  0F54  0825               	movf	___flge@ff2,w
  9574  0F55  02A9               	subwf	??___flge,f
  9575  0F56  0826               	movf	___flge@ff2+1,w
  9576  0F57  1C03               	skipc
  9577  0F58  0F26               	incfsz	___flge@ff2+1,w
  9578  0F59  02AA               	subwf	??___flge+1,f
  9579  0F5A  0827               	movf	___flge@ff2+2,w
  9580  0F5B  1C03               	skipc
  9581  0F5C  0F27               	incfsz	___flge@ff2+2,w
  9582  0F5D  02AB               	subwf	??___flge+2,f
  9583  0F5E  0828               	movf	___flge@ff2+3,w
  9584  0F5F  1C03               	skipc
  9585  0F60  0F28               	incfsz	___flge@ff2+3,w
  9586  0F61  02AC               	subwf	??___flge+3,f
  9587  0F62  082C               	movf	??___flge+3,w
  9588  0F63  00A8               	movwf	___flge@ff2+3
  9589  0F64  082B               	movf	??___flge+2,w
  9590  0F65  00A7               	movwf	___flge@ff2+2
  9591  0F66  082A               	movf	??___flge+1,w
  9592  0F67  00A6               	movwf	___flge@ff2+1
  9593  0F68  0829               	movf	??___flge,w
  9594  0F69  00A5               	movwf	___flge@ff2
  9595  0F6A                     l869:	
  9596  0F6A  3080               	movlw	128
  9597  0F6B  06A4               	xorwf	___flge@ff1+3,f
  9598  0F6C  06A8               	xorwf	___flge@ff2+3,f
  9599  0F6D  0828               	movf	___flge@ff2+3,w
  9600  0F6E  0224               	subwf	___flge@ff1+3,w
  9601  0F6F  1D03               	skipz
  9602  0F70  0008               	return
  9603  0F71  0827               	movf	___flge@ff2+2,w
  9604  0F72  0223               	subwf	___flge@ff1+2,w
  9605  0F73  1D03               	skipz
  9606  0F74  0008               	return
  9607  0F75  0826               	movf	___flge@ff2+1,w
  9608  0F76  0222               	subwf	___flge@ff1+1,w
  9609  0F77  1D03               	skipz
  9610  0F78  0008               	return
  9611  0F79  0825               	movf	___flge@ff2,w
  9612  0F7A  0221               	subwf	___flge@ff1,w
  9613  0F7B  0008               	return
  9614  0F7C                     __end_of___flge:	
  9615  0F7C                     __ptext40:	
  9616 ;; *************** function _lcd_gotoxy *****************
  9617 ;; Defined at:
  9618 ;;		line 135 in file "../../../lib/lcd44780.c"
  9619 ;; Parameters:    Size  Location     Type
  9620 ;;  col             1    wreg     unsigned char 
  9621 ;;  row             1    3[BANK0 ] unsigned char 
  9622 ;; Auto vars:     Size  Location     Type
  9623 ;;  col             1    4[BANK0 ] unsigned char 
  9624 ;;  row_offsets     4    5[BANK0 ] unsigned char [4]
  9625 ;; Return value:  Size  Location     Type
  9626 ;;		None               void
  9627 ;; Registers used:
  9628 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  9629 ;; Tracked objects:
  9630 ;;		On entry : 300/0
  9631 ;;		On exit  : 0/0
  9632 ;;		Unchanged: 0/0
  9633 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9634 ;;      Params:         0       1       0       0       0
  9635 ;;      Locals:         0       5       0       0       0
  9636 ;;      Temps:          0       0       0       0       0
  9637 ;;      Totals:         0       6       0       0       0
  9638 ;;Total ram usage:        6 bytes
  9639 ;; Hardware stack levels used:    1
  9640 ;; Hardware stack levels required when called:    4
  9641 ;; This function calls:
  9642 ;;		_lcd_command
  9643 ;; This function is called by:
  9644 ;;		_print_unit
  9645 ;;		_print_reading
  9646 ;;		_print_indicator
  9647 ;;		_main
  9648 ;;		_calibrate
  9649 ;;		_measure_freq
  9650 ;;		_measure_capacitance
  9651 ;;		_measure_inductance
  9652 ;; This function uses a non-reentrant model
  9653 ;;
  9654                           
  9655                           
  9656                           ;psect for function _lcd_gotoxy
  9657  0F7C                     _lcd_gotoxy:	
  9658                           
  9659                           ;incstack = 0
  9660                           ; Regs used in _lcd_gotoxy: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  9661                           ;lcd_gotoxy@col stored from wreg
  9662  0F7C  00A5               	movwf	lcd_gotoxy@col
  9663                           
  9664                           ;lcd44780.c: 137: uint8_t row_offsets[] = {0x00, 0x40, 0x14, 0x54};
  9665  0F7D  1683               	bsf	3,5	;RP0=1, select bank3
  9666  0F7E  1703               	bsf	3,6	;RP1=1, select bank3
  9667  0F7F  0862               	movf	(lcd_gotoxy@F1148+3)^(0+384),w
  9668  0F80  1283               	bcf	3,5	;RP0=0, select bank0
  9669  0F81  1303               	bcf	3,6	;RP1=0, select bank0
  9670  0F82  00A9               	movwf	lcd_gotoxy@row_offsets+3
  9671  0F83  1683               	bsf	3,5	;RP0=1, select bank3
  9672  0F84  1703               	bsf	3,6	;RP1=1, select bank3
  9673  0F85  0861               	movf	(lcd_gotoxy@F1148+2)^(0+384),w
  9674  0F86  1283               	bcf	3,5	;RP0=0, select bank0
  9675  0F87  1303               	bcf	3,6	;RP1=0, select bank0
  9676  0F88  00A8               	movwf	lcd_gotoxy@row_offsets+2
  9677  0F89  1683               	bsf	3,5	;RP0=1, select bank3
  9678  0F8A  1703               	bsf	3,6	;RP1=1, select bank3
  9679  0F8B  0860               	movf	(lcd_gotoxy@F1148+1)^(0+384),w
  9680  0F8C  1283               	bcf	3,5	;RP0=0, select bank0
  9681  0F8D  1303               	bcf	3,6	;RP1=0, select bank0
  9682  0F8E  00A7               	movwf	lcd_gotoxy@row_offsets+1
  9683  0F8F  1683               	bsf	3,5	;RP0=1, select bank3
  9684  0F90  1703               	bsf	3,6	;RP1=1, select bank3
  9685  0F91  085F               	movf	lcd_gotoxy@F1148^(0+384),w
  9686  0F92  1283               	bcf	3,5	;RP0=0, select bank0
  9687  0F93  1303               	bcf	3,6	;RP1=0, select bank0
  9688  0F94  00A6               	movwf	lcd_gotoxy@row_offsets
  9689                           
  9690                           ;lcd44780.c: 146: if(LCD_lines == 1) {
  9691  0F95  1683               	bsf	3,5	;RP0=1, select bank3
  9692  0F96  1703               	bsf	3,6	;RP1=1, select bank3
  9693  0F97  0B27               	decfsz	_LCD_lines^(0+384),w
  9694  0F98  2FA1               	goto	l4242
  9695                           
  9696                           ;lcd44780.c: 147: row_offsets[1] = 0x14;
  9697  0F99  3014               	movlw	20
  9698  0F9A  1283               	bcf	3,5	;RP0=0, select bank0
  9699  0F9B  1303               	bcf	3,6	;RP1=0, select bank0
  9700  0F9C  00A7               	movwf	lcd_gotoxy@row_offsets+1
  9701                           
  9702                           ;lcd44780.c: 148: row_offsets[2] = 0x28;
  9703  0F9D  3028               	movlw	40
  9704  0F9E  00A8               	movwf	lcd_gotoxy@row_offsets+2
  9705                           
  9706                           ;lcd44780.c: 149: row_offsets[3] = 0x3C;
  9707  0F9F  303C               	movlw	60
  9708  0FA0  00A9               	movwf	lcd_gotoxy@row_offsets+3
  9709  0FA1                     l4242:	
  9710                           
  9711                           ;lcd44780.c: 150: }
  9712                           ;lcd44780.c: 156: lcd_command(0x80 | (col + row_offsets[row]));
  9713  0FA1  1283               	bcf	3,5	;RP0=0, select bank0
  9714  0FA2  1303               	bcf	3,6	;RP1=0, select bank0
  9715  0FA3  0824               	movf	lcd_gotoxy@row,w
  9716  0FA4  3E26               	addlw	(low (lcd_gotoxy@row_offsets| 0))& (0+255)
  9717  0FA5  0084               	movwf	4
  9718  0FA6  0825               	movf	lcd_gotoxy@col,w
  9719  0FA7  1383               	bcf	3,7	;select IRP bank0
  9720  0FA8  0700               	addwf	0,w
  9721  0FA9  3880               	iorlw	128
  9722  0FAA  120A  118A  2BCE   	ljmp	_lcd_command
  9723  0FAD                     __end_of_lcd_gotoxy:	
  9724  0FAD                     __ptext33:	
  9725 ;; *************** function _put_str *****************
  9726 ;; Defined at:
  9727 ;;		line 221 in file "../../../src/print.c"
  9728 ;; Parameters:    Size  Location     Type
  9729 ;;  s               2    3[BANK0 ] PTR const unsigned char 
  9730 ;;		 -> STR_37(13), STR_28(10), STR_25(15), STR_23(12), 
  9731 ;; Auto vars:     Size  Location     Type
  9732 ;;  i               2    8[BANK0 ] int 
  9733 ;; Return value:  Size  Location     Type
  9734 ;;		None               void
  9735 ;; Registers used:
  9736 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  9737 ;; Tracked objects:
  9738 ;;		On entry : 300/0
  9739 ;;		On exit  : 300/0
  9740 ;;		Unchanged: 0/0
  9741 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9742 ;;      Params:         0       2       0       0       0
  9743 ;;      Locals:         0       2       0       0       0
  9744 ;;      Temps:          0       3       0       0       0
  9745 ;;      Totals:         0       7       0       0       0
  9746 ;;Total ram usage:        7 bytes
  9747 ;; Hardware stack levels used:    1
  9748 ;; Hardware stack levels required when called:    4
  9749 ;; This function calls:
  9750 ;;		_output_putch
  9751 ;; This function is called by:
  9752 ;;		_calibrate
  9753 ;;		_measure_capacitance
  9754 ;;		_measure_inductance
  9755 ;; This function uses a non-reentrant model
  9756 ;;
  9757                           
  9758                           
  9759                           ;psect for function _put_str
  9760  0FAD                     _put_str:	
  9761                           
  9762                           ;print.c: 222: int i;
  9763                           ;print.c: 224: for(i = 0; s[i]; i++) {
  9764                           
  9765                           ;incstack = 0
  9766                           ; Regs used in _put_str: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  9767  0FAD  01A9               	clrf	put_str@i
  9768  0FAE  01AA               	clrf	put_str@i+1
  9769  0FAF                     l4408:	
  9770  0FAF  0829               	movf	put_str@i,w
  9771  0FB0  0724               	addwf	put_str@s,w
  9772  0FB1  00A7               	movwf	??_put_str+1
  9773  0FB2  0825               	movf	put_str@s+1,w
  9774  0FB3  00A6               	movwf	??_put_str
  9775  0FB4  1803               	skipnc
  9776  0FB5  0AA6               	incf	??_put_str,f
  9777  0FB6  1BA9               	btfsc	put_str@i,7
  9778  0FB7  03A6               	decf	??_put_str,f
  9779  0FB8  1283               	bcf	3,5	;RP0=0, select bank0
  9780  0FB9  1303               	bcf	3,6	;RP1=0, select bank0
  9781  0FBA  0826               	movf	??_put_str,w
  9782  0FBB  00A8               	movwf	??_put_str+2
  9783  0FBC  00FF               	movwf	127
  9784  0FBD  0827               	movf	??_put_str+1,w
  9785  0FBE  0084               	movwf	4
  9786  0FBF  160A  158A  2000  120A  158A  	fcall	stringtab
  9787  0FC4  3A00               	xorlw	0
  9788  0FC5  1903               	btfsc	3,2
  9789  0FC6  0008               	return
  9790                           
  9791                           ;print.c: 225: output_putch(s[i]);
  9792  0FC7  0829               	movf	put_str@i,w
  9793  0FC8  0724               	addwf	put_str@s,w
  9794  0FC9  00A7               	movwf	??_put_str+1
  9795  0FCA  0825               	movf	put_str@s+1,w
  9796  0FCB  00A6               	movwf	??_put_str
  9797  0FCC  1803               	skipnc
  9798  0FCD  0AA6               	incf	??_put_str,f
  9799  0FCE  1BA9               	btfsc	put_str@i,7
  9800  0FCF  03A6               	decf	??_put_str,f
  9801  0FD0  1283               	bcf	3,5	;RP0=0, select bank0
  9802  0FD1  1303               	bcf	3,6	;RP1=0, select bank0
  9803  0FD2  0826               	movf	??_put_str,w
  9804  0FD3  00A8               	movwf	??_put_str+2
  9805  0FD4  00FF               	movwf	127
  9806  0FD5  0827               	movf	??_put_str+1,w
  9807  0FD6  0084               	movwf	4
  9808  0FD7  160A  158A  2000  120A  158A  	fcall	stringtab
  9809  0FDC  27E4  120A  158A   	fcall	_output_putch
  9810  0FDF  1283               	bcf	3,5	;RP0=0, select bank0
  9811  0FE0  0AA9               	incf	put_str@i,f
  9812  0FE1  1903               	skipnz
  9813  0FE2  0AAA               	incf	put_str@i+1,f
  9814  0FE3  2FAF               	goto	l4408
  9815  0FE4                     __end_of_put_str:	
  9816  0FE4                     __ptext34:	
  9817 ;; *************** function _output_putch *****************
  9818 ;; Defined at:
  9819 ;;		line 208 in file "../../../src/print.c"
  9820 ;; Parameters:    Size  Location     Type
  9821 ;;  c               1    wreg     unsigned char 
  9822 ;; Auto vars:     Size  Location     Type
  9823 ;;  c               1    2[BANK0 ] unsigned char 
  9824 ;; Return value:  Size  Location     Type
  9825 ;;		None               void
  9826 ;; Registers used:
  9827 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  9828 ;; Tracked objects:
  9829 ;;		On entry : 300/0
  9830 ;;		On exit  : B00/900
  9831 ;;		Unchanged: 0/0
  9832 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9833 ;;      Params:         0       0       0       0       0
  9834 ;;      Locals:         0       1       0       0       0
  9835 ;;      Temps:          0       0       0       0       0
  9836 ;;      Totals:         0       1       0       0       0
  9837 ;;Total ram usage:        1 bytes
  9838 ;; Hardware stack levels used:    1
  9839 ;; Hardware stack levels required when called:    3
  9840 ;; This function calls:
  9841 ;;		_lcd_send
  9842 ;;		_ser_putch
  9843 ;; This function is called by:
  9844 ;;		_put_str
  9845 ;; This function uses a non-reentrant model
  9846 ;;
  9847                           
  9848                           
  9849                           ;psect for function _output_putch
  9850  0FE4                     _output_putch:	
  9851                           
  9852                           ;incstack = 0
  9853                           ; Regs used in _output_putch: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  9854                           ;output_putch@c stored from wreg
  9855  0FE4  00A3               	movwf	output_putch@c
  9856                           
  9857                           ;print.c: 210: lcd_send((c), 1);
  9858  0FE5  01A1               	clrf	lcd_send@mode
  9859  0FE6  0AA1               	incf	lcd_send@mode,f
  9860  0FE7  27EE               	fcall	_lcd_send
  9861                           
  9862                           ;print.c: 213: ser_putch(c);
  9863  0FE8  1283               	bcf	3,5	;RP0=0, select bank0
  9864  0FE9  1303               	bcf	3,6	;RP1=0, select bank0
  9865  0FEA  0823               	movf	output_putch@c,w
  9866  0FEB  160A  118A  2C40   	ljmp	_ser_putch
  9867  0FEE                     __end_of_output_putch:	
  9868  0FEE                     __ptext49:	
  9869 ;; *************** function _lcd_send *****************
  9870 ;; Defined at:
  9871 ;;		line 103 in file "../../../lib/lcd44780.c"
  9872 ;; Parameters:    Size  Location     Type
  9873 ;;  value           1    wreg     unsigned char 
  9874 ;;  mode            1    0[BANK0 ] unsigned char 
  9875 ;; Auto vars:     Size  Location     Type
  9876 ;;  value           1    1[BANK0 ] unsigned char 
  9877 ;; Return value:  Size  Location     Type
  9878 ;;		None               void
  9879 ;; Registers used:
  9880 ;;		wreg, status,2, status,0, pclath, cstack
  9881 ;; Tracked objects:
  9882 ;;		On entry : 300/0
  9883 ;;		On exit  : 0/0
  9884 ;;		Unchanged: 0/0
  9885 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9886 ;;      Params:         0       1       0       0       0
  9887 ;;      Locals:         0       1       0       0       0
  9888 ;;      Temps:          0       0       0       0       0
  9889 ;;      Totals:         0       2       0       0       0
  9890 ;;Total ram usage:        2 bytes
  9891 ;; Hardware stack levels used:    1
  9892 ;; Hardware stack levels required when called:    2
  9893 ;; This function calls:
  9894 ;;		_lcd_write4bits
  9895 ;; This function is called by:
  9896 ;;		_output_putch
  9897 ;;		_lcd_command
  9898 ;;		_lcd_puts
  9899 ;;		_calibrate
  9900 ;; This function uses a non-reentrant model
  9901 ;;
  9902                           
  9903                           
  9904                           ;psect for function _lcd_send
  9905  0FEE                     _lcd_send:	
  9906                           
  9907                           ;incstack = 0
  9908                           ; Regs used in _lcd_send: [wreg+status,2+status,0+pclath+cstack]
  9909                           ;lcd_send@value stored from wreg
  9910  0FEE  00A2               	movwf	lcd_send@value
  9911                           
  9912                           ;lcd44780.c: 104: if(mode) {
  9913  0FEF  0821               	movf	lcd_send@mode,w
  9914  0FF0  1903               	btfsc	3,2
  9915  0FF1  2FF4               	goto	l303
  9916                           
  9917                           ;lcd44780.c: 105: PORTB |= 0b0100;
  9918  0FF2  1506               	bsf	6,2	;volatile
  9919                           
  9920                           ;lcd44780.c: 106: } else {
  9921  0FF3  2FF5               	goto	l3950
  9922  0FF4                     l303:	
  9923                           
  9924                           ;lcd44780.c: 107: PORTB &= ~0b0100;
  9925  0FF4  1106               	bcf	6,2	;volatile
  9926  0FF5                     l3950:	
  9927                           
  9928                           ;lcd44780.c: 108: }
  9929                           ;lcd44780.c: 115: {
  9930                           ;lcd44780.c: 116: lcd_write4bits(value >> 4);
  9931  0FF5  0E22               	swapf	lcd_send@value,w
  9932  0FF6  390F               	andlw	15
  9933  0FF7  120A  118A  23D5   	fcall	_lcd_write4bits
  9934                           
  9935                           ;lcd44780.c: 117: lcd_write4bits(value);
  9936  0FFA  1283               	bcf	3,5	;RP0=0, select bank0
  9937  0FFB  1303               	bcf	3,6	;RP1=0, select bank0
  9938  0FFC  0822               	movf	lcd_send@value,w
  9939  0FFD  120A  118A  2BD5   	ljmp	_lcd_write4bits
  9940  1000                     __end_of_lcd_send:	
  9941                           
  9942                           	psect	text30
  9943  0018                     __ptext30:	
  9944 ;; *************** function _lcd_init *****************
  9945 ;; Defined at:
  9946 ;;		line 484 in file "../../../lib/lcd44780.c"
  9947 ;; Parameters:    Size  Location     Type
  9948 ;;  fourbitmode     1    wreg     unsigned char 
  9949 ;; Auto vars:     Size  Location     Type
  9950 ;;  fourbitmode     1    0[BANK0 ] unsigned char 
  9951 ;; Return value:  Size  Location     Type
  9952 ;;		None               void
  9953 ;; Registers used:
  9954 ;;		wreg, status,2, status,0
  9955 ;; Tracked objects:
  9956 ;;		On entry : B00/100
  9957 ;;		On exit  : B00/0
  9958 ;;		Unchanged: 800/0
  9959 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9960 ;;      Params:         0       0       0       0       0
  9961 ;;      Locals:         0       3       0       0       0
  9962 ;;      Temps:          0       0       0       0       0
  9963 ;;      Totals:         0       3       0       0       0
  9964 ;;Total ram usage:        3 bytes
  9965 ;; Hardware stack levels used:    1
  9966 ;; Hardware stack levels required when called:    1
  9967 ;; This function calls:
  9968 ;;		Nothing
  9969 ;; This function is called by:
  9970 ;;		_main
  9971 ;; This function uses a non-reentrant model
  9972 ;;
  9973                           
  9974                           
  9975                           ;psect for function _lcd_init
  9976  0018                     _lcd_init:	
  9977                           
  9978                           ;incstack = 0
  9979                           ; Regs used in _lcd_init: [wreg+status,2+status,0]
  9980                           ;lcd_init@fourbitmode stored from wreg
  9981  0018  1283               	bcf	3,5	;RP0=0, select bank0
  9982  0019  00A1               	movwf	lcd_init@fourbitmode
  9983                           
  9984                           ;lcd44780.c: 486: LCD_ctrl = 0;
  9985  001A  1683               	bsf	3,5	;RP0=1, select bank3
  9986  001B  1703               	bsf	3,6	;RP1=1, select bank3
  9987  001C  01A6               	clrf	_LCD_ctrl^(0+384)
  9988                           
  9989                           ;lcd44780.c: 487: LCD_function = (fourbitmode ? 0x00 : 0x10);
  9990  001D  1283               	bcf	3,5	;RP0=0, select bank0
  9991  001E  1303               	bcf	3,6	;RP1=0, select bank0
  9992  001F  0821               	movf	lcd_init@fourbitmode,w
  9993  0020  1D03               	btfss	3,2
  9994  0021  2825               	goto	l4562
  9995  0022  3010               	movlw	16
  9996  0023  00A2               	movwf	_lcd_init$321
  9997  0024  2826               	goto	L13
  9998  0025                     l4562:	
  9999  0025  01A2               	clrf	_lcd_init$321
 10000  0026                     L13:	
 10001  0026  01A3               	clrf	_lcd_init$321+1
 10002  0027  0822               	movf	_lcd_init$321,w
 10003  0028  00F6               	movwf	_LCD_function
 10004                           
 10005                           ;lcd44780.c: 489: LCD_lines = 0;
 10006  0029  1683               	bsf	3,5	;RP0=1, select bank3
 10007  002A  1703               	bsf	3,6	;RP1=1, select bank3
 10008  002B  01A7               	clrf	_LCD_lines^(0+384)
 10009                           
 10010                           ;lcd44780.c: 491: LCD_mode = 0;
 10011  002C  01A8               	clrf	_LCD_mode^(0+384)
 10012                           
 10013                           ;lcd44780.c: 493: TRISB &= ~0b0100;
 10014  002D  1303               	bcf	3,6	;RP1=0, select bank1
 10015  002E  1106               	bcf	6,2	;volatile
 10016                           
 10017                           ;lcd44780.c: 494: PORTB &= ~0b0100;
 10018  002F  1283               	bcf	3,5	;RP0=0, select bank0
 10019  0030  1106               	bcf	6,2	;volatile
 10020                           
 10021                           ;lcd44780.c: 499: TRISB &= ~0b1000;
 10022  0031  1683               	bsf	3,5	;RP0=1, select bank1
 10023  0032  1186               	bcf	6,3	;volatile
 10024                           
 10025                           ;lcd44780.c: 500: PORTB &= ~0b1000;
 10026  0033  1283               	bcf	3,5	;RP0=0, select bank0
 10027  0034  1186               	bcf	6,3	;volatile
 10028                           
 10029                           ;lcd44780.c: 502: PORTB &= ~0b11110000;
 10030  0035  300F               	movlw	15
 10031  0036  0586               	andwf	6,f	;volatile
 10032  0037  0008               	return
 10033  0038                     __end_of_lcd_init:	
 10034                           
 10035                           	psect	text32
 10036  013C                     __ptext32:	
 10037 ;; *************** function _calibrate *****************
 10038 ;; Defined at:
 10039 ;;		line 25 in file "../../../lib/../src/measure.c"
 10040 ;; Parameters:    Size  Location     Type
 10041 ;;		None
 10042 ;; Auto vars:     Size  Location     Type
 10043 ;;  i               1   58[BANK0 ] unsigned char 
 10044 ;; Return value:  Size  Location     Type
 10045 ;;		None               void
 10046 ;; Registers used:
 10047 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 10048 ;; Tracked objects:
 10049 ;;		On entry : 0/0
 10050 ;;		On exit  : 300/0
 10051 ;;		Unchanged: 0/0
 10052 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10053 ;;      Params:         0       0       0       0       0
 10054 ;;      Locals:         0       1       0       0       0
 10055 ;;      Temps:          0       0       0       0       0
 10056 ;;      Totals:         0       1       0       0       0
 10057 ;;Total ram usage:        1 bytes
 10058 ;; Hardware stack levels used:    1
 10059 ;; Hardware stack levels required when called:    6
 10060 ;; This function calls:
 10061 ;;		___lwtofl
 10062 ;;		_delay10ms
 10063 ;;		_lcd_clear
 10064 ;;		_lcd_gotoxy
 10065 ;;		_lcd_send
 10066 ;;		_measure_freq
 10067 ;;		_put_str
 10068 ;;		_ser_puts
 10069 ;; This function is called by:
 10070 ;;		_main
 10071 ;; This function uses a non-reentrant model
 10072 ;;
 10073                           
 10074                           
 10075                           ;psect for function _calibrate
 10076  013C                     _calibrate:	
 10077                           
 10078                           ;measure.c: 26: uint8_t i;
 10079                           ;measure.c: 29: lcd_clear();
 10080                           
 10081                           ;incstack = 0
 10082                           ; Regs used in _calibrate: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
 10083  013C  22CB               	fcall	_lcd_clear
 10084                           
 10085                           ;measure.c: 31: lcd_gotoxy(0, 0);
 10086  013D  1283               	bcf	3,5	;RP0=0, select bank0
 10087  013E  1303               	bcf	3,6	;RP1=0, select bank0
 10088  013F  3000               	movlw	0
 10089  0140  01A4               	clrf	lcd_gotoxy@row
 10090  0141  120A  158A  277C  120A  118A  	fcall	_lcd_gotoxy
 10091                           
 10092                           ;measure.c: 32: put_str("Calibrating");
 10093  0146  309A               	movlw	low (STR_23| (0+32768))
 10094  0147  1283               	bcf	3,5	;RP0=0, select bank0
 10095  0148  1303               	bcf	3,6	;RP1=0, select bank0
 10096  0149  00A4               	movwf	put_str@s
 10097  014A  3098               	movlw	high (STR_23| (0+32768))
 10098  014B  00A5               	movwf	put_str@s+1
 10099  014C  120A  158A  27AD  120A  118A  	fcall	_put_str
 10100  0151  3000               	movlw	0
 10101                           
 10102                           ;measure.c: 34: lcd_gotoxy(0, 1);
 10103  0152  01A4               	clrf	lcd_gotoxy@row
 10104  0153  0AA4               	incf	lcd_gotoxy@row,f
 10105  0154  120A  158A  277C  120A  118A  	fcall	_lcd_gotoxy
 10106                           
 10107                           ;measure.c: 35: ser_puts("\r\n");
 10108  0159  30F4               	movlw	low (STR_9| (0+32768))
 10109  015A  1283               	bcf	3,5	;RP0=0, select bank0
 10110  015B  1303               	bcf	3,6	;RP1=0, select bank0
 10111  015C  00A1               	movwf	ser_puts@s
 10112  015D  3098               	movlw	high (STR_9| (0+32768))
 10113  015E  00A2               	movwf	ser_puts@s+1
 10114  015F  160A  118A  2423  120A  118A  	fcall	_ser_puts
 10115                           
 10116                           ;measure.c: 36: put_str("please wait...");
 10117  0164  307E               	movlw	low (STR_25| (0+32768))
 10118  0165  00A4               	movwf	put_str@s
 10119  0166  3098               	movlw	high (STR_25| (0+32768))
 10120  0167  00A5               	movwf	put_str@s+1
 10121  0168  120A  158A  27AD  120A  118A  	fcall	_put_str
 10122                           
 10123                           ;measure.c: 39: PORTC &= ~(1 << 5);
 10124  016D  1287               	bcf	7,5	;volatile
 10125                           
 10126                           ;measure.c: 41: F1 = (double)measure_freq();
 10127  016E  2220               	fcall	_measure_freq
 10128  016F  0852               	movf	?_measure_freq+1,w
 10129  0170  00D8               	movwf	___lwtofl@c+1
 10130  0171  0851               	movf	?_measure_freq,w
 10131  0172  00D7               	movwf	___lwtofl@c
 10132  0173  160A  118A  27ED  120A  118A  	fcall	___lwtofl
 10133  0178  085A               	movf	?___lwtofl+3,w
 10134  0179  1683               	bsf	3,5	;RP0=1, select bank3
 10135  017A  1703               	bsf	3,6	;RP1=1, select bank3
 10136  017B  00BF               	movwf	(_F1+3)^(0+384)
 10137  017C  1283               	bcf	3,5	;RP0=0, select bank0
 10138  017D  1303               	bcf	3,6	;RP1=0, select bank0
 10139  017E  0859               	movf	?___lwtofl+2,w
 10140  017F  1683               	bsf	3,5	;RP0=1, select bank3
 10141  0180  1703               	bsf	3,6	;RP1=1, select bank3
 10142  0181  00BE               	movwf	(_F1+2)^(0+384)
 10143  0182  1283               	bcf	3,5	;RP0=0, select bank0
 10144  0183  1303               	bcf	3,6	;RP1=0, select bank0
 10145  0184  0858               	movf	?___lwtofl+1,w
 10146  0185  1683               	bsf	3,5	;RP0=1, select bank3
 10147  0186  1703               	bsf	3,6	;RP1=1, select bank3
 10148  0187  00BD               	movwf	(_F1+1)^(0+384)
 10149  0188  1283               	bcf	3,5	;RP0=0, select bank0
 10150  0189  1303               	bcf	3,6	;RP1=0, select bank0
 10151  018A  0857               	movf	?___lwtofl,w
 10152  018B  1683               	bsf	3,5	;RP0=1, select bank3
 10153  018C  1703               	bsf	3,6	;RP1=1, select bank3
 10154  018D  00BC               	movwf	_F1^(0+384)
 10155                           
 10156                           ;measure.c: 42: delay10ms(50);
 10157  018E  3032               	movlw	50
 10158  018F  22CA  120A  118A   	fcall	_delay10ms
 10159                           
 10160                           ;measure.c: 44: F1 = (double)measure_freq();
 10161  0192  2220               	fcall	_measure_freq
 10162  0193  0852               	movf	?_measure_freq+1,w
 10163  0194  00D8               	movwf	___lwtofl@c+1
 10164  0195  0851               	movf	?_measure_freq,w
 10165  0196  00D7               	movwf	___lwtofl@c
 10166  0197  160A  118A  27ED  120A  118A  	fcall	___lwtofl
 10167  019C  085A               	movf	?___lwtofl+3,w
 10168  019D  1683               	bsf	3,5	;RP0=1, select bank3
 10169  019E  1703               	bsf	3,6	;RP1=1, select bank3
 10170  019F  00BF               	movwf	(_F1+3)^(0+384)
 10171  01A0  1283               	bcf	3,5	;RP0=0, select bank0
 10172  01A1  1303               	bcf	3,6	;RP1=0, select bank0
 10173  01A2  0859               	movf	?___lwtofl+2,w
 10174  01A3  1683               	bsf	3,5	;RP0=1, select bank3
 10175  01A4  1703               	bsf	3,6	;RP1=1, select bank3
 10176  01A5  00BE               	movwf	(_F1+2)^(0+384)
 10177  01A6  1283               	bcf	3,5	;RP0=0, select bank0
 10178  01A7  1303               	bcf	3,6	;RP1=0, select bank0
 10179  01A8  0858               	movf	?___lwtofl+1,w
 10180  01A9  1683               	bsf	3,5	;RP0=1, select bank3
 10181  01AA  1703               	bsf	3,6	;RP1=1, select bank3
 10182  01AB  00BD               	movwf	(_F1+1)^(0+384)
 10183  01AC  1283               	bcf	3,5	;RP0=0, select bank0
 10184  01AD  1303               	bcf	3,6	;RP1=0, select bank0
 10185  01AE  0857               	movf	?___lwtofl,w
 10186  01AF  1683               	bsf	3,5	;RP0=1, select bank3
 10187  01B0  1703               	bsf	3,6	;RP1=1, select bank3
 10188  01B1  00BC               	movwf	_F1^(0+384)
 10189                           
 10190                           ;measure.c: 45: PORTC |= (1 << 5);
 10191  01B2  1283               	bcf	3,5	;RP0=0, select bank0
 10192  01B3  1303               	bcf	3,6	;RP1=0, select bank0
 10193  01B4  1687               	bsf	7,5	;volatile
 10194                           
 10195                           ;measure.c: 47: F2 = (double)measure_freq();
 10196  01B5  2220               	fcall	_measure_freq
 10197  01B6  0852               	movf	?_measure_freq+1,w
 10198  01B7  00D8               	movwf	___lwtofl@c+1
 10199  01B8  0851               	movf	?_measure_freq,w
 10200  01B9  00D7               	movwf	___lwtofl@c
 10201  01BA  160A  118A  27ED  120A  118A  	fcall	___lwtofl
 10202  01BF  085A               	movf	?___lwtofl+3,w
 10203  01C0  1683               	bsf	3,5	;RP0=1, select bank3
 10204  01C1  1703               	bsf	3,6	;RP1=1, select bank3
 10205  01C2  0093               	movwf	(_F2+3)^(0+384)
 10206  01C3  1283               	bcf	3,5	;RP0=0, select bank0
 10207  01C4  1303               	bcf	3,6	;RP1=0, select bank0
 10208  01C5  0859               	movf	?___lwtofl+2,w
 10209  01C6  1683               	bsf	3,5	;RP0=1, select bank3
 10210  01C7  1703               	bsf	3,6	;RP1=1, select bank3
 10211  01C8  0092               	movwf	(_F2+2)^(0+384)
 10212  01C9  1283               	bcf	3,5	;RP0=0, select bank0
 10213  01CA  1303               	bcf	3,6	;RP1=0, select bank0
 10214  01CB  0858               	movf	?___lwtofl+1,w
 10215  01CC  1683               	bsf	3,5	;RP0=1, select bank3
 10216  01CD  1703               	bsf	3,6	;RP1=1, select bank3
 10217  01CE  0091               	movwf	(_F2+1)^(0+384)
 10218  01CF  1283               	bcf	3,5	;RP0=0, select bank0
 10219  01D0  1303               	bcf	3,6	;RP1=0, select bank0
 10220  01D1  0857               	movf	?___lwtofl,w
 10221  01D2  1683               	bsf	3,5	;RP0=1, select bank3
 10222  01D3  1703               	bsf	3,6	;RP1=1, select bank3
 10223  01D4  0090               	movwf	_F2^(0+384)
 10224                           
 10225                           ;measure.c: 48: delay10ms(50);
 10226  01D5  3032               	movlw	50
 10227  01D6  22CA  120A  118A   	fcall	_delay10ms
 10228                           
 10229                           ;measure.c: 50: F2 = (double)measure_freq();
 10230  01D9  2220               	fcall	_measure_freq
 10231  01DA  0852               	movf	?_measure_freq+1,w
 10232  01DB  00D8               	movwf	___lwtofl@c+1
 10233  01DC  0851               	movf	?_measure_freq,w
 10234  01DD  00D7               	movwf	___lwtofl@c
 10235  01DE  160A  118A  27ED  120A  118A  	fcall	___lwtofl
 10236  01E3  085A               	movf	?___lwtofl+3,w
 10237  01E4  1683               	bsf	3,5	;RP0=1, select bank3
 10238  01E5  1703               	bsf	3,6	;RP1=1, select bank3
 10239  01E6  0093               	movwf	(_F2+3)^(0+384)
 10240  01E7  1283               	bcf	3,5	;RP0=0, select bank0
 10241  01E8  1303               	bcf	3,6	;RP1=0, select bank0
 10242  01E9  0859               	movf	?___lwtofl+2,w
 10243  01EA  1683               	bsf	3,5	;RP0=1, select bank3
 10244  01EB  1703               	bsf	3,6	;RP1=1, select bank3
 10245  01EC  0092               	movwf	(_F2+2)^(0+384)
 10246  01ED  1283               	bcf	3,5	;RP0=0, select bank0
 10247  01EE  1303               	bcf	3,6	;RP1=0, select bank0
 10248  01EF  0858               	movf	?___lwtofl+1,w
 10249  01F0  1683               	bsf	3,5	;RP0=1, select bank3
 10250  01F1  1703               	bsf	3,6	;RP1=1, select bank3
 10251  01F2  0091               	movwf	(_F2+1)^(0+384)
 10252  01F3  1283               	bcf	3,5	;RP0=0, select bank0
 10253  01F4  1303               	bcf	3,6	;RP1=0, select bank0
 10254  01F5  0857               	movf	?___lwtofl,w
 10255  01F6  1683               	bsf	3,5	;RP0=1, select bank3
 10256  01F7  1703               	bsf	3,6	;RP1=1, select bank3
 10257  01F8  0090               	movwf	_F2^(0+384)
 10258                           
 10259                           ;measure.c: 51: PORTC &= ~(1 << 5);
 10260  01F9  1283               	bcf	3,5	;RP0=0, select bank0
 10261  01FA  1303               	bcf	3,6	;RP1=0, select bank0
 10262  01FB  1287               	bcf	7,5	;volatile
 10263  01FC  300B               	movlw	11
 10264                           
 10265                           ;measure.c: 54: lcd_gotoxy(11, 0);
 10266  01FD  01A4               	clrf	lcd_gotoxy@row
 10267  01FE  120A  158A  277C  120A  118A  	fcall	_lcd_gotoxy
 10268                           
 10269                           ;measure.c: 55: for(i = 0; i < 6; i++) {
 10270  0203  1283               	bcf	3,5	;RP0=0, select bank0
 10271  0204  1303               	bcf	3,6	;RP1=0, select bank0
 10272  0205  01DB               	clrf	calibrate@i
 10273  0206                     l4682:	
 10274  0206  303D               	movlw	61
 10275                           
 10276                           ;measure.c: 56: lcd_send(('='), 1);
 10277  0207  01A1               	clrf	lcd_send@mode
 10278  0208  0AA1               	incf	lcd_send@mode,f
 10279  0209  120A  158A  27EE  120A  118A  	fcall	_lcd_send
 10280                           
 10281                           ;measure.c: 58: delay10ms(28);
 10282  020E  301C               	movlw	28
 10283  020F  22CA  120A  118A   	fcall	_delay10ms
 10284  0212  1283               	bcf	3,5	;RP0=0, select bank0
 10285  0213  1303               	bcf	3,6	;RP1=0, select bank0
 10286  0214  3006               	movlw	6
 10287  0215  0ADB               	incf	calibrate@i,f
 10288  0216  025B               	subwf	calibrate@i,w
 10289  0217  1C03               	skipc
 10290  0218  2A06               	goto	l4682
 10291                           
 10292                           ;measure.c: 59: }
 10293                           ;measure.c: 61: ser_puts("\r\n");
 10294  0219  30F4               	movlw	low (STR_9| (0+32768))
 10295  021A  00A1               	movwf	ser_puts@s
 10296  021B  3098               	movlw	high (STR_9| (0+32768))
 10297  021C  00A2               	movwf	ser_puts@s+1
 10298  021D  160A  118A  2C23   	ljmp	l4098
 10299  0220                     __end_of_calibrate:	
 10300  0220                     __ptext35:	
 10301 ;; *************** function _measure_freq *****************
 10302 ;; Defined at:
 10303 ;;		line 68 in file "../../../lib/../src/measure.c"
 10304 ;; Parameters:    Size  Location     Type
 10305 ;;		None
 10306 ;; Auto vars:     Size  Location     Type
 10307 ;;  count           2   52[BANK0 ] unsigned int 
 10308 ;; Return value:  Size  Location     Type
 10309 ;;                  2   48[BANK0 ] unsigned short 
 10310 ;; Registers used:
 10311 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 10312 ;; Tracked objects:
 10313 ;;		On entry : 0/0
 10314 ;;		On exit  : 300/0
 10315 ;;		Unchanged: 0/0
 10316 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10317 ;;      Params:         0       2       0       0       0
 10318 ;;      Locals:         0       2       0       0       0
 10319 ;;      Temps:          0       2       0       0       0
 10320 ;;      Totals:         0       6       0       0       0
 10321 ;;Total ram usage:        6 bytes
 10322 ;; Hardware stack levels used:    1
 10323 ;; Hardware stack levels required when called:    5
 10324 ;; This function calls:
 10325 ;;		_buffer_init
 10326 ;;		_buffer_puts
 10327 ;;		_format_number
 10328 ;;		_lcd_gotoxy
 10329 ;;		_print_buffer
 10330 ;;		_timer0_read_ps
 10331 ;; This function is called by:
 10332 ;;		_calibrate
 10333 ;;		_measure_capacitance
 10334 ;;		_measure_inductance
 10335 ;; This function uses a non-reentrant model
 10336 ;;
 10337                           
 10338                           
 10339                           ;psect for function _measure_freq
 10340  0220                     _measure_freq:	
 10341                           
 10342                           ;measure.c: 69: uint16_t count;
 10343                           ;measure.c: 71: INTCON &= ~0b100;
 10344                           
 10345                           ;incstack = 0
 10346                           ; Regs used in _measure_freq: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
 10347  0220  110B               	bcf	11,2	;volatile
 10348                           
 10349                           ;measure.c: 75: TRISA &= ~0b00010000;
 10350  0221  1683               	bsf	3,5	;RP0=1, select bank1
 10351  0222  1303               	bcf	3,6	;RP1=0, select bank1
 10352  0223  1205               	bcf	5,4	;volatile
 10353                           
 10354                           ;measure.c: 77: _delay((unsigned long)((20)*(20000000/4000.0)));
 10355  0224  3082               	movlw	130
 10356  0225  1283               	bcf	3,5	;RP0=0, select bank0
 10357  0226  00D4               	movwf	??_measure_freq+1
 10358  0227  30DD               	movlw	221
 10359  0228  00D3               	movwf	??_measure_freq
 10360  0229                     u4477:	
 10361  0229  0BD3               	decfsz	??_measure_freq,f
 10362  022A  2A29               	goto	u4477
 10363  022B  0BD4               	decfsz	??_measure_freq+1,f
 10364  022C  2A29               	goto	u4477
 10365  022D  2A2E               	nop2
 10366                           
 10367                           ;measure.c: 80: TMR0 = 0x00;
 10368  022E  1283               	bcf	3,5	;RP0=0, select bank0
 10369  022F  1303               	bcf	3,6	;RP1=0, select bank0
 10370  0230  0181               	clrf	1	;volatile
 10371                           
 10372                           ;measure.c: 85: _delay((unsigned long)((10)*(20000000/4000.0)));
 10373  0231  3041               	movlw	65
 10374  0232  00D4               	movwf	??_measure_freq+1
 10375  0233  30EE               	movlw	238
 10376  0234  00D3               	movwf	??_measure_freq
 10377  0235                     u4487:	
 10378  0235  0BD3               	decfsz	??_measure_freq,f
 10379  0236  2A35               	goto	u4487
 10380  0237  0BD4               	decfsz	??_measure_freq+1,f
 10381  0238  2A35               	goto	u4487
 10382  0239  0000               	nop
 10383                           
 10384                           ;measure.c: 86: _delay((unsigned long)((10)*(20000000/4000.0)));
 10385  023A  3041               	movlw	65
 10386  023B  1283               	bcf	3,5	;RP0=0, select bank0
 10387  023C  1303               	bcf	3,6	;RP1=0, select bank0
 10388  023D  00D4               	movwf	??_measure_freq+1
 10389  023E  30EE               	movlw	238
 10390  023F  00D3               	movwf	??_measure_freq
 10391  0240                     u4497:	
 10392  0240  0BD3               	decfsz	??_measure_freq,f
 10393  0241  2A40               	goto	u4497
 10394  0242  0BD4               	decfsz	??_measure_freq+1,f
 10395  0243  2A40               	goto	u4497
 10396  0244  0000               	nop
 10397                           
 10398                           ;measure.c: 87: _delay((unsigned long)((10)*(20000000/4000.0)));
 10399  0245  3041               	movlw	65
 10400  0246  1283               	bcf	3,5	;RP0=0, select bank0
 10401  0247  1303               	bcf	3,6	;RP1=0, select bank0
 10402  0248  00D4               	movwf	??_measure_freq+1
 10403  0249  30EE               	movlw	238
 10404  024A  00D3               	movwf	??_measure_freq
 10405  024B                     u4507:	
 10406  024B  0BD3               	decfsz	??_measure_freq,f
 10407  024C  2A4B               	goto	u4507
 10408  024D  0BD4               	decfsz	??_measure_freq+1,f
 10409  024E  2A4B               	goto	u4507
 10410  024F  0000               	nop
 10411                           
 10412                           ;measure.c: 88: _delay((unsigned long)((10)*(20000000/4000.0)));
 10413  0250  3041               	movlw	65
 10414  0251  1283               	bcf	3,5	;RP0=0, select bank0
 10415  0252  1303               	bcf	3,6	;RP1=0, select bank0
 10416  0253  00D4               	movwf	??_measure_freq+1
 10417  0254  30EE               	movlw	238
 10418  0255  00D3               	movwf	??_measure_freq
 10419  0256                     u4517:	
 10420  0256  0BD3               	decfsz	??_measure_freq,f
 10421  0257  2A56               	goto	u4517
 10422  0258  0BD4               	decfsz	??_measure_freq+1,f
 10423  0259  2A56               	goto	u4517
 10424  025A  0000               	nop
 10425                           
 10426                           ;measure.c: 89: _delay((unsigned long)((10)*(20000000/4000.0)));
 10427  025B  3041               	movlw	65
 10428  025C  1283               	bcf	3,5	;RP0=0, select bank0
 10429  025D  1303               	bcf	3,6	;RP1=0, select bank0
 10430  025E  00D4               	movwf	??_measure_freq+1
 10431  025F  30EE               	movlw	238
 10432  0260  00D3               	movwf	??_measure_freq
 10433  0261                     u4527:	
 10434  0261  0BD3               	decfsz	??_measure_freq,f
 10435  0262  2A61               	goto	u4527
 10436  0263  0BD4               	decfsz	??_measure_freq+1,f
 10437  0264  2A61               	goto	u4527
 10438  0265  0000               	nop
 10439                           
 10440                           ;measure.c: 90: _delay((unsigned long)((10)*(20000000/4000.0)));
 10441  0266  3041               	movlw	65
 10442  0267  1283               	bcf	3,5	;RP0=0, select bank0
 10443  0268  1303               	bcf	3,6	;RP1=0, select bank0
 10444  0269  00D4               	movwf	??_measure_freq+1
 10445  026A  30EE               	movlw	238
 10446  026B  00D3               	movwf	??_measure_freq
 10447  026C                     u4537:	
 10448  026C  0BD3               	decfsz	??_measure_freq,f
 10449  026D  2A6C               	goto	u4537
 10450  026E  0BD4               	decfsz	??_measure_freq+1,f
 10451  026F  2A6C               	goto	u4537
 10452  0270  0000               	nop
 10453                           
 10454                           ;measure.c: 91: _delay((unsigned long)((10)*(20000000/4000.0)));
 10455  0271  3041               	movlw	65
 10456  0272  1283               	bcf	3,5	;RP0=0, select bank0
 10457  0273  1303               	bcf	3,6	;RP1=0, select bank0
 10458  0274  00D4               	movwf	??_measure_freq+1
 10459  0275  30EE               	movlw	238
 10460  0276  00D3               	movwf	??_measure_freq
 10461  0277                     u4547:	
 10462  0277  0BD3               	decfsz	??_measure_freq,f
 10463  0278  2A77               	goto	u4547
 10464  0279  0BD4               	decfsz	??_measure_freq+1,f
 10465  027A  2A77               	goto	u4547
 10466  027B  0000               	nop
 10467                           
 10468                           ;measure.c: 92: _delay((unsigned long)((10)*(20000000/4000.0)));
 10469  027C  3041               	movlw	65
 10470  027D  1283               	bcf	3,5	;RP0=0, select bank0
 10471  027E  1303               	bcf	3,6	;RP1=0, select bank0
 10472  027F  00D4               	movwf	??_measure_freq+1
 10473  0280  30EE               	movlw	238
 10474  0281  00D3               	movwf	??_measure_freq
 10475  0282                     u4557:	
 10476  0282  0BD3               	decfsz	??_measure_freq,f
 10477  0283  2A82               	goto	u4557
 10478  0284  0BD4               	decfsz	??_measure_freq+1,f
 10479  0285  2A82               	goto	u4557
 10480  0286  0000               	nop
 10481                           
 10482                           ;measure.c: 93: _delay((unsigned long)((10)*(20000000/4000.0)));
 10483  0287  3041               	movlw	65
 10484  0288  1283               	bcf	3,5	;RP0=0, select bank0
 10485  0289  1303               	bcf	3,6	;RP1=0, select bank0
 10486  028A  00D4               	movwf	??_measure_freq+1
 10487  028B  30EE               	movlw	238
 10488  028C  00D3               	movwf	??_measure_freq
 10489  028D                     u4567:	
 10490  028D  0BD3               	decfsz	??_measure_freq,f
 10491  028E  2A8D               	goto	u4567
 10492  028F  0BD4               	decfsz	??_measure_freq+1,f
 10493  0290  2A8D               	goto	u4567
 10494  0291  0000               	nop
 10495                           
 10496                           ;measure.c: 94: _delay((unsigned long)((10)*(20000000/4000.0)));
 10497  0292  3041               	movlw	65
 10498  0293  1283               	bcf	3,5	;RP0=0, select bank0
 10499  0294  1303               	bcf	3,6	;RP1=0, select bank0
 10500  0295  00D4               	movwf	??_measure_freq+1
 10501  0296  30EE               	movlw	238
 10502  0297  00D3               	movwf	??_measure_freq
 10503  0298                     u4577:	
 10504  0298  0BD3               	decfsz	??_measure_freq,f
 10505  0299  2A98               	goto	u4577
 10506  029A  0BD4               	decfsz	??_measure_freq+1,f
 10507  029B  2A98               	goto	u4577
 10508  029C  0000               	nop
 10509                           
 10510                           ;measure.c: 99: TRISA |= 0b00010000;
 10511  029D  1683               	bsf	3,5	;RP0=1, select bank1
 10512  029E  1303               	bcf	3,6	;RP1=0, select bank1
 10513  029F  1605               	bsf	5,4	;volatile
 10514                           
 10515                           ;measure.c: 102: count = timer0_read_ps();
 10516  02A0  2302               	fcall	_timer0_read_ps
 10517  02A1  0875               	movf	?_timer0_read_ps+1,w
 10518  02A2  00D6               	movwf	measure_freq@count+1
 10519  02A3  0874               	movf	?_timer0_read_ps,w
 10520  02A4  00D5               	movwf	measure_freq@count
 10521  02A5  3000               	movlw	0
 10522                           
 10523                           ;measure.c: 105: lcd_gotoxy(0, 1);
 10524  02A6  01A4               	clrf	lcd_gotoxy@row
 10525  02A7  0AA4               	incf	lcd_gotoxy@row,f
 10526  02A8  120A  158A  277C  120A  118A  	fcall	_lcd_gotoxy
 10527                           
 10528                           ;measure.c: 107: buffer_init();
 10529  02AD  22DB  120A  118A   	fcall	_buffer_init
 10530                           
 10531                           ;measure.c: 108: buffer_puts("Freq=");
 10532  02B0  30DB               	movlw	low (STR_27| (0+32768))
 10533  02B1  1283               	bcf	3,5	;RP0=0, select bank0
 10534  02B2  1303               	bcf	3,6	;RP1=0, select bank0
 10535  02B3  00A4               	movwf	buffer_puts@x
 10536  02B4  3098               	movlw	high (STR_27| (0+32768))
 10537  02B5  00A5               	movwf	buffer_puts@x+1
 10538  02B6  22E2               	fcall	_buffer_puts
 10539                           
 10540                           ;measure.c: 109: format_number(count, 10, 5);
 10541  02B7  0856               	movf	measure_freq@count+1,w
 10542  02B8  00A9               	movwf	format_number@n+1
 10543  02B9  0855               	movf	measure_freq@count,w
 10544  02BA  00A8               	movwf	format_number@n
 10545  02BB  300A               	movlw	10
 10546  02BC  00AA               	movwf	format_number@base
 10547  02BD  3005               	movlw	5
 10548  02BE  00AB               	movwf	format_number@pad
 10549  02BF  160A  118A  273E  120A  118A  	fcall	_format_number
 10550                           
 10551                           ;measure.c: 110: print_buffer();
 10552  02C4  23EC               	fcall	_print_buffer
 10553                           
 10554                           ;measure.c: 112: return count;
 10555  02C5  0856               	movf	measure_freq@count+1,w
 10556  02C6  00D2               	movwf	?_measure_freq+1
 10557  02C7  0855               	movf	measure_freq@count,w
 10558  02C8  00D1               	movwf	?_measure_freq
 10559  02C9  0008               	return
 10560  02CA                     __end_of_measure_freq:	
 10561  02CA                     __ptext51:	
 10562 ;; *************** function _delay10ms *****************
 10563 ;; Defined at:
 10564 ;;		line 58 in file "../../../LC-meter.c"
 10565 ;; Parameters:    Size  Location     Type
 10566 ;;  period_10ms     1    wreg     unsigned char 
 10567 ;; Auto vars:     Size  Location     Type
 10568 ;;  period_10ms     1    0[COMMON] unsigned char 
 10569 ;; Return value:  Size  Location     Type
 10570 ;;		None               void
 10571 ;; Registers used:
 10572 ;;		wreg
 10573 ;; Tracked objects:
 10574 ;;		On entry : 0/0
 10575 ;;		On exit  : 0/0
 10576 ;;		Unchanged: 0/0
 10577 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10578 ;;      Params:         0       0       0       0       0
 10579 ;;      Locals:         0       0       0       0       0
 10580 ;;      Temps:          0       0       0       0       0
 10581 ;;      Totals:         0       0       0       0       0
 10582 ;;Total ram usage:        0 bytes
 10583 ;; Hardware stack levels used:    1
 10584 ;; Hardware stack levels required when called:    1
 10585 ;; This function calls:
 10586 ;;		Nothing
 10587 ;; This function is called by:
 10588 ;;		_main
 10589 ;;		_calibrate
 10590 ;; This function uses a non-reentrant model
 10591 ;;
 10592                           
 10593                           
 10594                           ;psect for function _delay10ms
 10595  02CA                     _delay10ms:	
 10596                           
 10597                           ;incstack = 0
 10598                           ; Regs used in _delay10ms: [wreg]
 10599  02CA  0008               	return
 10600  02CB                     __end_of_delay10ms:	
 10601  02CB                     __ptext47:	
 10602 ;; *************** function _lcd_clear *****************
 10603 ;; Defined at:
 10604 ;;		line 287 in file "../../../lib/lcd44780.c"
 10605 ;; Parameters:    Size  Location     Type
 10606 ;;		None
 10607 ;; Auto vars:     Size  Location     Type
 10608 ;;		None
 10609 ;; Return value:  Size  Location     Type
 10610 ;;		None               void
 10611 ;; Registers used:
 10612 ;;		wreg, status,2, status,0, pclath, cstack
 10613 ;; Tracked objects:
 10614 ;;		On entry : 0/0
 10615 ;;		On exit  : 0/0
 10616 ;;		Unchanged: 0/0
 10617 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10618 ;;      Params:         0       0       0       0       0
 10619 ;;      Locals:         0       0       0       0       0
 10620 ;;      Temps:          0       2       0       0       0
 10621 ;;      Totals:         0       2       0       0       0
 10622 ;;Total ram usage:        2 bytes
 10623 ;; Hardware stack levels used:    1
 10624 ;; Hardware stack levels required when called:    4
 10625 ;; This function calls:
 10626 ;;		_lcd_command
 10627 ;; This function is called by:
 10628 ;;		_main
 10629 ;;		_calibrate
 10630 ;; This function uses a non-reentrant model
 10631 ;;
 10632                           
 10633                           
 10634                           ;psect for function _lcd_clear
 10635  02CB                     _lcd_clear:	
 10636                           
 10637                           ;lcd44780.c: 288: lcd_command(0x01);
 10638                           
 10639                           ;incstack = 0
 10640                           ; Regs used in _lcd_clear: [wreg+status,2+status,0+pclath+cstack]
 10641  02CB  3001               	movlw	1
 10642  02CC  23CE  120A  118A   	fcall	_lcd_command
 10643                           
 10644                           ;lcd44780.c: 289: _delay((unsigned long)((2)*(20000000/4000.0)));
 10645  02CF  300D               	movlw	13
 10646  02D0  1283               	bcf	3,5	;RP0=0, select bank0
 10647  02D1  1303               	bcf	3,6	;RP1=0, select bank0
 10648  02D2  00A5               	movwf	??_lcd_clear+1
 10649  02D3  30FB               	movlw	251
 10650  02D4  00A4               	movwf	??_lcd_clear
 10651  02D5                     u4587:	
 10652  02D5  0BA4               	decfsz	??_lcd_clear,f
 10653  02D6  2AD5               	goto	u4587
 10654  02D7  0BA5               	decfsz	??_lcd_clear+1,f
 10655  02D8  2AD5               	goto	u4587
 10656  02D9  2ADA               	nop2
 10657  02DA  0008               	return
 10658  02DB                     __end_of_lcd_clear:	
 10659  02DB                     __ptext46:	
 10660 ;; *************** function _buffer_init *****************
 10661 ;; Defined at:
 10662 ;;		line 10 in file "../../../lib/buffer.c"
 10663 ;; Parameters:    Size  Location     Type
 10664 ;;		None
 10665 ;; Auto vars:     Size  Location     Type
 10666 ;;		None
 10667 ;; Return value:  Size  Location     Type
 10668 ;;		None               void
 10669 ;; Registers used:
 10670 ;;		wreg, status,2, status,0
 10671 ;; Tracked objects:
 10672 ;;		On entry : 0/0
 10673 ;;		On exit  : 300/300
 10674 ;;		Unchanged: 0/0
 10675 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10676 ;;      Params:         0       0       0       0       0
 10677 ;;      Locals:         0       0       0       0       0
 10678 ;;      Temps:          0       0       0       0       0
 10679 ;;      Totals:         0       0       0       0       0
 10680 ;;Total ram usage:        0 bytes
 10681 ;; Hardware stack levels used:    1
 10682 ;; Hardware stack levels required when called:    1
 10683 ;; This function calls:
 10684 ;;		Nothing
 10685 ;; This function is called by:
 10686 ;;		_measure_freq
 10687 ;; This function uses a non-reentrant model
 10688 ;;
 10689                           
 10690                           
 10691                           ;psect for function _buffer_init
 10692  02DB                     _buffer_init:	
 10693                           
 10694                           ;buffer.c: 11: buffer.p = 0;
 10695                           
 10696                           ;incstack = 0
 10697                           ; Regs used in _buffer_init: [wreg+status,2+status,0]
 10698  02DB  30F0               	movlw	-16
 10699  02DC  1683               	bsf	3,5	;RP0=1, select bank3
 10700  02DD  1703               	bsf	3,6	;RP1=1, select bank3
 10701  02DE  05BB               	andwf	(_buffer^(0+384)+16),f
 10702                           
 10703                           ;buffer.c: 12: buffer.n = 0;
 10704  02DF  300F               	movlw	-241
 10705  02E0  05BB               	andwf	(_buffer^(0+384)+16),f
 10706  02E1  0008               	return
 10707  02E2                     __end_of_buffer_init:	
 10708  02E2                     __ptext44:	
 10709 ;; *************** function _buffer_puts *****************
 10710 ;; Defined at:
 10711 ;;		line 57 in file "../../../lib/buffer.c"
 10712 ;; Parameters:    Size  Location     Type
 10713 ;;  x               2    3[BANK0 ] PTR const unsigned char 
 10714 ;;		 -> STR_27(6), 
 10715 ;; Auto vars:     Size  Location     Type
 10716 ;;		None
 10717 ;; Return value:  Size  Location     Type
 10718 ;;                  1    wreg      unsigned char 
 10719 ;; Registers used:
 10720 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 10721 ;; Tracked objects:
 10722 ;;		On entry : 300/0
 10723 ;;		On exit  : 300/0
 10724 ;;		Unchanged: 0/0
 10725 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10726 ;;      Params:         0       2       0       0       0
 10727 ;;      Locals:         0       0       0       0       0
 10728 ;;      Temps:          0       0       0       0       0
 10729 ;;      Totals:         0       2       0       0       0
 10730 ;;Total ram usage:        2 bytes
 10731 ;; Hardware stack levels used:    1
 10732 ;; Hardware stack levels required when called:    2
 10733 ;; This function calls:
 10734 ;;		_buffer_putch
 10735 ;; This function is called by:
 10736 ;;		_measure_freq
 10737 ;; This function uses a non-reentrant model
 10738 ;;
 10739                           
 10740                           
 10741                           ;psect for function _buffer_puts
 10742  02E2                     _buffer_puts:	
 10743  02E2                     l4384:	
 10744                           ;buffer.c: 58: while(*x) {
 10745                           
 10746                           ;incstack = 0
 10747                           ; Regs used in _buffer_puts: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
 10748                           
 10749  02E2  0825               	movf	buffer_puts@x+1,w
 10750  02E3  00FF               	movwf	127
 10751  02E4  0824               	movf	buffer_puts@x,w
 10752  02E5  0084               	movwf	4
 10753  02E6  160A  158A  2000  120A  118A  	fcall	stringtab
 10754  02EB  3A00               	xorlw	0
 10755  02EC  1903               	btfsc	3,2
 10756  02ED  0008               	return
 10757                           
 10758                           ;buffer.c: 59: buffer_putch(*x);
 10759  02EE  0825               	movf	buffer_puts@x+1,w
 10760  02EF  00FF               	movwf	127
 10761  02F0  0824               	movf	buffer_puts@x,w
 10762  02F1  0084               	movwf	4
 10763  02F2  160A  158A  2000  120A  118A  	fcall	stringtab
 10764  02F7  160A  118A  25F9  120A  118A  	fcall	_buffer_putch
 10765                           
 10766                           ;buffer.c: 60: ++x;
 10767  02FC  1283               	bcf	3,5	;RP0=0, select bank0
 10768  02FD  1303               	bcf	3,6	;RP1=0, select bank0
 10769  02FE  0AA4               	incf	buffer_puts@x,f
 10770  02FF  1903               	skipnz
 10771  0300  0AA5               	incf	buffer_puts@x+1,f
 10772  0301  2AE2               	goto	l4384
 10773  0302                     __end_of_buffer_puts:	
 10774  0302                     __ptext36:	
 10775 ;; *************** function _timer0_read_ps *****************
 10776 ;; Defined at:
 10777 ;;		line 64 in file "../../../lib/timer.c"
 10778 ;; Parameters:    Size  Location     Type
 10779 ;;		None
 10780 ;; Auto vars:     Size  Location     Type
 10781 ;;  count           2    5[BANK0 ] unsigned int 
 10782 ;;  prev            1    4[BANK0 ] unsigned char 
 10783 ;; Return value:  Size  Location     Type
 10784 ;;                  2    4[COMMON] unsigned short 
 10785 ;; Registers used:
 10786 ;;		wreg, status,2, status,0, btemp+1
 10787 ;; Tracked objects:
 10788 ;;		On entry : 300/100
 10789 ;;		On exit  : 300/0
 10790 ;;		Unchanged: 0/0
 10791 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10792 ;;      Params:         2       0       0       0       0
 10793 ;;      Locals:         0       3       0       0       0
 10794 ;;      Temps:          0       4       0       0       0
 10795 ;;      Totals:         2       7       0       0       0
 10796 ;;Total ram usage:        9 bytes
 10797 ;; Hardware stack levels used:    1
 10798 ;; Hardware stack levels required when called:    1
 10799 ;; This function calls:
 10800 ;;		Nothing
 10801 ;; This function is called by:
 10802 ;;		_measure_freq
 10803 ;; This function uses a non-reentrant model
 10804 ;;
 10805                           
 10806                           
 10807                           ;psect for function _timer0_read_ps
 10808  0302                     _timer0_read_ps:	
 10809                           
 10810                           ;timer.c: 65: uint8_t prev = TMR0;
 10811                           
 10812                           ;incstack = 0
 10813                           ; Regs used in _timer0_read_ps: [wreg+status,2+status,0+btemp+1]
 10814  0302  1283               	bcf	3,5	;RP0=0, select bank0
 10815  0303  0801               	movf	1,w	;volatile
 10816  0304  00A5               	movwf	timer0_read_ps@prev
 10817                           
 10818                           ;timer.c: 66: uint16_t count = 0;
 10819  0305  01A6               	clrf	timer0_read_ps@count
 10820  0306  01A7               	clrf	timer0_read_ps@count+1
 10821                           
 10822                           ;timer.c: 68: OPTION_REG |= 0x20;
 10823  0307  1683               	bsf	3,5	;RP0=1, select bank1
 10824  0308  1681               	bsf	1,5	;volatile
 10825  0309  2B11               	goto	l4312
 10826  030A                     l4328:	
 10827  030A  3001               	movlw	1
 10828  030B  0227               	subwf	timer0_read_ps@count+1,w
 10829  030C  3000               	movlw	0
 10830  030D  1903               	skipnz
 10831  030E  0226               	subwf	timer0_read_ps@count,w
 10832  030F  1803               	btfsc	3,0
 10833  0310  2B23               	goto	l4330
 10834  0311                     l4312:	
 10835                           
 10836                           ;timer.c: 72: OPTION_REG |= 0x10;
 10837  0311  1683               	bsf	3,5	;RP0=1, select bank1
 10838  0312  1601               	bsf	1,4	;volatile
 10839                           
 10840                           ;timer.c: 74: __nop();
 10841  0313  0000               	nop
 10842                           
 10843                           ;timer.c: 75: __nop();
 10844  0314  0000               	nop
 10845                           
 10846                           ;timer.c: 77: OPTION_REG &= ~0x10;
 10847  0315  1683               	bsf	3,5	;RP0=1, select bank1
 10848  0316  1303               	bcf	3,6	;RP1=0, select bank1
 10849  0317  1201               	bcf	1,4	;volatile
 10850                           
 10851                           ;timer.c: 79: __nop();
 10852  0318  0000               	nop
 10853                           
 10854                           ;timer.c: 80: __nop();
 10855  0319  0000               	nop
 10856                           
 10857                           ;timer.c: 82: ++count;
 10858  031A  1283               	bcf	3,5	;RP0=0, select bank0
 10859  031B  1303               	bcf	3,6	;RP1=0, select bank0
 10860  031C  0AA6               	incf	timer0_read_ps@count,f
 10861  031D  1903               	skipnz
 10862  031E  0AA7               	incf	timer0_read_ps@count+1,f
 10863                           
 10864                           ;timer.c: 85: } while(prev == TMR0 && count <= 255);
 10865  031F  0825               	movf	timer0_read_ps@prev,w
 10866  0320  0601               	xorwf	1,w	;volatile
 10867  0321  1903               	btfsc	3,2
 10868  0322  2B0A               	goto	l4328
 10869  0323                     l4330:	
 10870                           
 10871                           ;timer.c: 87: count = ((prev << 8) + (256 - count));
 10872  0323  0825               	movf	timer0_read_ps@prev,w
 10873  0324  00A1               	movwf	??_timer0_read_ps
 10874  0325  01A2               	clrf	??_timer0_read_ps+1
 10875  0326  00A2               	movwf	??_timer0_read_ps+1
 10876  0327  01A1               	clrf	??_timer0_read_ps
 10877  0328  0826               	movf	timer0_read_ps@count,w
 10878  0329  0221               	subwf	??_timer0_read_ps,w
 10879  032A  00A3               	movwf	??_timer0_read_ps+2
 10880  032B  0827               	movf	timer0_read_ps@count+1,w
 10881  032C  1C03               	skipc
 10882  032D  0A27               	incf	timer0_read_ps@count+1,w
 10883  032E  0222               	subwf	??_timer0_read_ps+1,w
 10884  032F  00A4               	movwf	??_timer0_read_ps+3
 10885  0330  0823               	movf	??_timer0_read_ps+2,w
 10886  0331  3E00               	addlw	0
 10887  0332  00A6               	movwf	timer0_read_ps@count
 10888  0333  0824               	movf	??_timer0_read_ps+3,w
 10889  0334  1803               	skipnc
 10890  0335  3E01               	addlw	1
 10891  0336  3E01               	addlw	1
 10892  0337  00A7               	movwf	timer0_read_ps@count+1
 10893                           
 10894                           ;timer.c: 88: return count;
 10895  0338  00F5               	movwf	?_timer0_read_ps+1
 10896  0339  0826               	movf	timer0_read_ps@count,w
 10897  033A  00F4               	movwf	?_timer0_read_ps
 10898  033B  0008               	return
 10899  033C                     __end_of_timer0_read_ps:	
 10900  033C                     __ptext31:	
 10901 ;; *************** function _lcd_begin *****************
 10902 ;; Defined at:
 10903 ;;		line 411 in file "../../../lib/lcd44780.c"
 10904 ;; Parameters:    Size  Location     Type
 10905 ;;  lines           1    wreg     unsigned char 
 10906 ;;  dotsize         1    3[BANK0 ] unsigned char 
 10907 ;; Auto vars:     Size  Location     Type
 10908 ;;  lines           1    6[BANK0 ] unsigned char 
 10909 ;; Return value:  Size  Location     Type
 10910 ;;		None               void
 10911 ;; Registers used:
 10912 ;;		wreg, status,2, status,0, pclath, cstack
 10913 ;; Tracked objects:
 10914 ;;		On entry : B00/0
 10915 ;;		On exit  : 0/0
 10916 ;;		Unchanged: 0/0
 10917 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10918 ;;      Params:         0       1       0       0       0
 10919 ;;      Locals:         0       1       0       0       0
 10920 ;;      Temps:          0       2       0       0       0
 10921 ;;      Totals:         0       4       0       0       0
 10922 ;;Total ram usage:        4 bytes
 10923 ;; Hardware stack levels used:    1
 10924 ;; Hardware stack levels required when called:    4
 10925 ;; This function calls:
 10926 ;;		_lcd_command
 10927 ;;		_lcd_write4bits
 10928 ;; This function is called by:
 10929 ;;		_main
 10930 ;; This function uses a non-reentrant model
 10931 ;;
 10932                           
 10933                           
 10934                           ;psect for function _lcd_begin
 10935  033C                     _lcd_begin:	
 10936                           
 10937                           ;incstack = 0
 10938                           ; Regs used in _lcd_begin: [wreg+status,2+status,0+pclath+cstack]
 10939                           ;lcd_begin@lines stored from wreg
 10940  033C  00A7               	movwf	lcd_begin@lines
 10941                           
 10942                           ;lcd44780.c: 412: if(lines > 1)
 10943  033D  3002               	movlw	2
 10944  033E  0227               	subwf	lcd_begin@lines,w
 10945  033F  1803               	btfsc	3,0
 10946                           
 10947                           ;lcd44780.c: 413: LCD_function |= 0x08;
 10948  0340  15F6               	bsf	_LCD_function,3
 10949                           
 10950                           ;lcd44780.c: 416: LCD_lines = lines;
 10951  0341  0827               	movf	lcd_begin@lines,w
 10952  0342  1683               	bsf	3,5	;RP0=1, select bank3
 10953  0343  1703               	bsf	3,6	;RP1=1, select bank3
 10954  0344  00A7               	movwf	_LCD_lines^(0+384)
 10955                           
 10956                           ;lcd44780.c: 420: if((dotsize != 0) && (lines == 1))
 10957  0345  1283               	bcf	3,5	;RP0=0, select bank0
 10958  0346  1303               	bcf	3,6	;RP1=0, select bank0
 10959  0347  0824               	movf	lcd_begin@dotsize,w
 10960  0348  1903               	btfsc	3,2
 10961  0349  2B4E               	goto	l4592
 10962  034A  0327               	decf	lcd_begin@lines,w
 10963  034B  1D03               	btfss	3,2
 10964  034C  2B4E               	goto	l4592
 10965                           
 10966                           ;lcd44780.c: 421: LCD_function |= 0x04;
 10967  034D  1576               	bsf	_LCD_function,2
 10968  034E                     l4592:	
 10969                           
 10970                           ;lcd44780.c: 423: _delay((unsigned long)((15)*(20000000/4000.0)));
 10971  034E  3062               	movlw	98
 10972  034F  00A6               	movwf	??_lcd_begin+1
 10973  0350  3065               	movlw	101
 10974  0351  00A5               	movwf	??_lcd_begin
 10975  0352                     u4407:	
 10976  0352  0BA5               	decfsz	??_lcd_begin,f
 10977  0353  2B52               	goto	u4407
 10978  0354  0BA6               	decfsz	??_lcd_begin+1,f
 10979  0355  2B52               	goto	u4407
 10980  0356  2B57               	nop2
 10981                           
 10982                           ;lcd44780.c: 426: PORTB &= ~0b0100;
 10983  0357  1283               	bcf	3,5	;RP0=0, select bank0
 10984  0358  1303               	bcf	3,6	;RP1=0, select bank0
 10985  0359  1106               	bcf	6,2	;volatile
 10986                           
 10987                           ;lcd44780.c: 427: PORTB &= ~0b1000;
 10988  035A  1186               	bcf	6,3	;volatile
 10989                           
 10990                           ;lcd44780.c: 430: if(!(LCD_function & 0x10)) {
 10991  035B  1A76               	btfsc	_LCD_function,4
 10992  035C  2B87               	goto	l4610
 10993                           
 10994                           ;lcd44780.c: 434: lcd_write4bits(0x03);
 10995  035D  3003               	movlw	3
 10996  035E  23D5  120A  118A   	fcall	_lcd_write4bits
 10997                           
 10998                           ;lcd44780.c: 435: _delay((unsigned long)((5)*(20000000/4000.0)));
 10999  0361  3021               	movlw	33
 11000  0362  1283               	bcf	3,5	;RP0=0, select bank0
 11001  0363  1303               	bcf	3,6	;RP1=0, select bank0
 11002  0364  00A6               	movwf	??_lcd_begin+1
 11003  0365  3076               	movlw	118
 11004  0366  00A5               	movwf	??_lcd_begin
 11005  0367                     u4417:	
 11006  0367  0BA5               	decfsz	??_lcd_begin,f
 11007  0368  2B67               	goto	u4417
 11008  0369  0BA6               	decfsz	??_lcd_begin+1,f
 11009  036A  2B67               	goto	u4417
 11010  036B  0000               	nop
 11011                           
 11012                           ;lcd44780.c: 437: lcd_write4bits(0x03);
 11013  036C  3003               	movlw	3
 11014  036D  23D5  120A  118A   	fcall	_lcd_write4bits
 11015                           
 11016                           ;lcd44780.c: 438: _delay((unsigned long)((150)*(20000000/4000000.0)));
 11017  0370  30F9               	movlw	249
 11018  0371  1283               	bcf	3,5	;RP0=0, select bank0
 11019  0372  1303               	bcf	3,6	;RP1=0, select bank0
 11020  0373  00A5               	movwf	??_lcd_begin
 11021  0374                     u4427:	
 11022  0374  0BA5               	decfsz	??_lcd_begin,f
 11023  0375  2B74               	goto	u4427
 11024  0376  2B77               	nop2	;nop
 11025                           
 11026                           ;lcd44780.c: 440: lcd_write4bits(0x03);
 11027  0377  3003               	movlw	3
 11028  0378  23D5  120A  118A   	fcall	_lcd_write4bits
 11029                           
 11030                           ;lcd44780.c: 441: _delay((unsigned long)((150)*(20000000/4000000.0)));
 11031  037B  30F9               	movlw	249
 11032  037C  1283               	bcf	3,5	;RP0=0, select bank0
 11033  037D  1303               	bcf	3,6	;RP1=0, select bank0
 11034  037E  00A5               	movwf	??_lcd_begin
 11035  037F                     u4437:	
 11036  037F  0BA5               	decfsz	??_lcd_begin,f
 11037  0380  2B7F               	goto	u4437
 11038  0381  2B82               	nop2	;nop
 11039                           
 11040                           ;lcd44780.c: 443: lcd_write4bits(0x02);
 11041  0382  3002               	movlw	2
 11042  0383  23D5  120A  118A   	fcall	_lcd_write4bits
 11043                           
 11044                           ;lcd44780.c: 444: }
 11045  0386  2BAC               	goto	l4618
 11046  0387                     l4610:	
 11047                           
 11048                           ;lcd44780.c: 446: else {
 11049                           ;lcd44780.c: 450: lcd_command(0x20 | LCD_function);
 11050  0387  0876               	movf	_LCD_function,w
 11051  0388  3820               	iorlw	32
 11052  0389  23CE  120A  118A   	fcall	_lcd_command
 11053                           
 11054                           ;lcd44780.c: 451: _delay((unsigned long)((5)*(20000000/4000.0)));
 11055  038C  3021               	movlw	33
 11056  038D  1283               	bcf	3,5	;RP0=0, select bank0
 11057  038E  1303               	bcf	3,6	;RP1=0, select bank0
 11058  038F  00A6               	movwf	??_lcd_begin+1
 11059  0390  3076               	movlw	118
 11060  0391  00A5               	movwf	??_lcd_begin
 11061  0392                     u4447:	
 11062  0392  0BA5               	decfsz	??_lcd_begin,f
 11063  0393  2B92               	goto	u4447
 11064  0394  0BA6               	decfsz	??_lcd_begin+1,f
 11065  0395  2B92               	goto	u4447
 11066  0396  0000               	nop
 11067                           
 11068                           ;lcd44780.c: 454: lcd_command(0x20 | LCD_function);
 11069  0397  0876               	movf	_LCD_function,w
 11070  0398  3820               	iorlw	32
 11071  0399  23CE  120A  118A   	fcall	_lcd_command
 11072                           
 11073                           ;lcd44780.c: 455: _delay((unsigned long)((5)*(20000000/4000.0)));
 11074  039C  3021               	movlw	33
 11075  039D  1283               	bcf	3,5	;RP0=0, select bank0
 11076  039E  1303               	bcf	3,6	;RP1=0, select bank0
 11077  039F  00A6               	movwf	??_lcd_begin+1
 11078  03A0  3076               	movlw	118
 11079  03A1  00A5               	movwf	??_lcd_begin
 11080  03A2                     u4457:	
 11081  03A2  0BA5               	decfsz	??_lcd_begin,f
 11082  03A3  2BA2               	goto	u4457
 11083  03A4  0BA6               	decfsz	??_lcd_begin+1,f
 11084  03A5  2BA2               	goto	u4457
 11085  03A6  0000               	nop
 11086                           
 11087                           ;lcd44780.c: 459: lcd_command(0x20 | LCD_function);
 11088  03A7  0876               	movf	_LCD_function,w
 11089  03A8  3820               	iorlw	32
 11090  03A9  23CE  120A  118A   	fcall	_lcd_command
 11091  03AC                     l4618:	
 11092                           
 11093                           ;lcd44780.c: 460: }
 11094                           ;lcd44780.c: 463: lcd_command(0x20 | LCD_function);
 11095  03AC  0876               	movf	_LCD_function,w
 11096  03AD  3820               	iorlw	32
 11097  03AE  23CE  120A  118A   	fcall	_lcd_command
 11098                           
 11099                           ;lcd44780.c: 466: LCD_ctrl = 0x04 | 0x00 | 0x00;
 11100  03B1  3004               	movlw	4
 11101  03B2  1683               	bsf	3,5	;RP0=1, select bank3
 11102  03B3  1703               	bsf	3,6	;RP1=1, select bank3
 11103  03B4  00A6               	movwf	_LCD_ctrl^(0+384)
 11104                           
 11105                           ;lcd44780.c: 467: lcd_command(0x08 | LCD_ctrl);
 11106  03B5  3808               	iorlw	8
 11107  03B6  23CE  120A  118A   	fcall	_lcd_command
 11108                           
 11109                           ;lcd44780.c: 470: lcd_command(0x01);
 11110  03B9  3001               	movlw	1
 11111  03BA  23CE  120A  118A   	fcall	_lcd_command
 11112                           
 11113                           ;lcd44780.c: 471: _delay((unsigned long)((2)*(20000000/4000.0)));
 11114  03BD  300D               	movlw	13
 11115  03BE  1283               	bcf	3,5	;RP0=0, select bank0
 11116  03BF  1303               	bcf	3,6	;RP1=0, select bank0
 11117  03C0  00A6               	movwf	??_lcd_begin+1
 11118  03C1  30FB               	movlw	251
 11119  03C2  00A5               	movwf	??_lcd_begin
 11120  03C3                     u4467:	
 11121  03C3  0BA5               	decfsz	??_lcd_begin,f
 11122  03C4  2BC3               	goto	u4467
 11123  03C5  0BA6               	decfsz	??_lcd_begin+1,f
 11124  03C6  2BC3               	goto	u4467
 11125  03C7  2BC8               	nop2
 11126                           
 11127                           ;lcd44780.c: 474: LCD_mode = 0x02 | 0x00;
 11128  03C8  3002               	movlw	2
 11129  03C9  1683               	bsf	3,5	;RP0=1, select bank3
 11130  03CA  1703               	bsf	3,6	;RP1=1, select bank3
 11131  03CB  00A8               	movwf	_LCD_mode^(0+384)
 11132                           
 11133                           ;lcd44780.c: 476: lcd_command(0x04 | LCD_mode);
 11134  03CC  3804               	iorlw	4
 11135  03CD  2BCE               	ljmp	_lcd_command
 11136  03CE                     __end_of_lcd_begin:	
 11137  03CE                     __ptext48:	
 11138 ;; *************** function _lcd_command *****************
 11139 ;; Defined at:
 11140 ;;		line 127 in file "../../../lib/lcd44780.c"
 11141 ;; Parameters:    Size  Location     Type
 11142 ;;  value           1    wreg     unsigned char 
 11143 ;; Auto vars:     Size  Location     Type
 11144 ;;  value           1    2[BANK0 ] unsigned char 
 11145 ;; Return value:  Size  Location     Type
 11146 ;;		None               void
 11147 ;; Registers used:
 11148 ;;		wreg, status,2, status,0, pclath, cstack
 11149 ;; Tracked objects:
 11150 ;;		On entry : 0/0
 11151 ;;		On exit  : 0/0
 11152 ;;		Unchanged: 0/0
 11153 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11154 ;;      Params:         0       0       0       0       0
 11155 ;;      Locals:         0       1       0       0       0
 11156 ;;      Temps:          0       0       0       0       0
 11157 ;;      Totals:         0       1       0       0       0
 11158 ;;Total ram usage:        1 bytes
 11159 ;; Hardware stack levels used:    1
 11160 ;; Hardware stack levels required when called:    3
 11161 ;; This function calls:
 11162 ;;		_lcd_send
 11163 ;; This function is called by:
 11164 ;;		_lcd_gotoxy
 11165 ;;		_lcd_clear
 11166 ;;		_lcd_begin
 11167 ;; This function uses a non-reentrant model
 11168 ;;
 11169                           
 11170                           
 11171                           ;psect for function _lcd_command
 11172  03CE                     _lcd_command:	
 11173                           
 11174                           ;incstack = 0
 11175                           ; Regs used in _lcd_command: [wreg+status,2+status,0+pclath+cstack]
 11176                           ;lcd_command@value stored from wreg
 11177  03CE  1283               	bcf	3,5	;RP0=0, select bank0
 11178  03CF  1303               	bcf	3,6	;RP1=0, select bank0
 11179  03D0  00A3               	movwf	lcd_command@value
 11180                           
 11181                           ;lcd44780.c: 128: lcd_send(value, 0);
 11182  03D1  01A1               	clrf	lcd_send@mode
 11183  03D2  120A  158A  2FEE   	ljmp	_lcd_send
 11184  03D5                     __end_of_lcd_command:	
 11185  03D5                     __ptext50:	
 11186 ;; *************** function _lcd_write4bits *****************
 11187 ;; Defined at:
 11188 ;;		line 34 in file "../../../lib/lcd44780.c"
 11189 ;; Parameters:    Size  Location     Type
 11190 ;;  value           1    wreg     unsigned char 
 11191 ;; Auto vars:     Size  Location     Type
 11192 ;;  value           1    5[COMMON] unsigned char 
 11193 ;; Return value:  Size  Location     Type
 11194 ;;		None               void
 11195 ;; Registers used:
 11196 ;;		wreg, status,2, status,0
 11197 ;; Tracked objects:
 11198 ;;		On entry : 0/0
 11199 ;;		On exit  : 0/0
 11200 ;;		Unchanged: 0/0
 11201 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11202 ;;      Params:         0       0       0       0       0
 11203 ;;      Locals:         1       0       0       0       0
 11204 ;;      Temps:          1       0       0       0       0
 11205 ;;      Totals:         2       0       0       0       0
 11206 ;;Total ram usage:        2 bytes
 11207 ;; Hardware stack levels used:    1
 11208 ;; Hardware stack levels required when called:    1
 11209 ;; This function calls:
 11210 ;;		Nothing
 11211 ;; This function is called by:
 11212 ;;		_lcd_send
 11213 ;;		_lcd_begin
 11214 ;; This function uses a non-reentrant model
 11215 ;;
 11216                           
 11217                           
 11218                           ;psect for function _lcd_write4bits
 11219  03D5                     _lcd_write4bits:	
 11220                           
 11221                           ;incstack = 0
 11222                           ; Regs used in _lcd_write4bits: [wreg+status,2+status,0]
 11223                           ;lcd_write4bits@value stored from wreg
 11224  03D5  00F5               	movwf	lcd_write4bits@value
 11225                           
 11226                           ;lcd44780.c: 39: PORTB &= 0b00001111;
 11227  03D6  300F               	movlw	15
 11228  03D7  1283               	bcf	3,5	;RP0=0, select bank0
 11229  03D8  1303               	bcf	3,6	;RP1=0, select bank0
 11230  03D9  0586               	andwf	6,f	;volatile
 11231                           
 11232                           ;lcd44780.c: 40: PORTB |= value << 4;
 11233  03DA  0E75               	swapf	lcd_write4bits@value,w
 11234  03DB  39F0               	andlw	240
 11235  03DC  0486               	iorwf	6,f	;volatile
 11236                           
 11237                           ;lcd44780.c: 55: PORTB |= 0b1000; _delay((unsigned long)((4)*(20000000/4000000.0))); POR
      +                          TB &= ~0b1000; _delay((unsigned long)((100)*(20000000/4000000.0)));;
 11238  03DD  1586               	bsf	6,3	;volatile
 11239  03DE  3006               	movlw	6
 11240  03DF  00F4               	movwf	??_lcd_write4bits
 11241  03E0                     u4597:	
 11242  03E0  0BF4               	decfsz	??_lcd_write4bits,f
 11243  03E1  2BE0               	goto	u4597
 11244  03E2  0000               	nop
 11245  03E3  1283               	bcf	3,5	;RP0=0, select bank0
 11246  03E4  1303               	bcf	3,6	;RP1=0, select bank0
 11247  03E5  1186               	bcf	6,3	;volatile
 11248  03E6  30A6               	movlw	166
 11249  03E7  00F4               	movwf	??_lcd_write4bits
 11250  03E8                     u4607:	
 11251  03E8  0BF4               	decfsz	??_lcd_write4bits,f
 11252  03E9  2BE8               	goto	u4607
 11253  03EA  0000               	nop
 11254  03EB  0008               	return
 11255  03EC                     __end_of_lcd_write4bits:	
 11256  03EC                     __ptext37:	
 11257 ;; *************** function _print_buffer *****************
 11258 ;; Defined at:
 11259 ;;		line 230 in file "../../../src/print.c"
 11260 ;; Parameters:    Size  Location     Type
 11261 ;;		None
 11262 ;; Auto vars:     Size  Location     Type
 11263 ;;  i               1    5[COMMON] unsigned char 
 11264 ;; Return value:  Size  Location     Type
 11265 ;;		None               void
 11266 ;; Registers used:
 11267 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 11268 ;; Tracked objects:
 11269 ;;		On entry : 300/0
 11270 ;;		On exit  : 300/0
 11271 ;;		Unchanged: 0/0
 11272 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11273 ;;      Params:         0       0       0       0       0
 11274 ;;      Locals:         1       0       0       0       0
 11275 ;;      Temps:          0       0       0       0       0
 11276 ;;      Totals:         1       0       0       0       0
 11277 ;;Total ram usage:        1 bytes
 11278 ;; Hardware stack levels used:    1
 11279 ;; Hardware stack levels required when called:    3
 11280 ;; This function calls:
 11281 ;;		_ser_putch
 11282 ;;		_ser_puts
 11283 ;; This function is called by:
 11284 ;;		_measure_freq
 11285 ;; This function uses a non-reentrant model
 11286 ;;
 11287                           
 11288                           
 11289                           ;psect for function _print_buffer
 11290  03EC                     _print_buffer:	
 11291                           
 11292                           ;print.c: 231: uint8_t i;
 11293                           ;print.c: 232: for(i = 0; i < buffer.n; i++) {
 11294                           
 11295                           ;incstack = 0
 11296                           ; Regs used in _print_buffer: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
 11297  03EC  01F5               	clrf	print_buffer@i
 11298  03ED                     l4302:	
 11299  03ED  1683               	bsf	3,5	;RP0=1, select bank3
 11300  03EE  1703               	bsf	3,6	;RP1=1, select bank3
 11301  03EF  0E3B               	swapf	(_buffer^(0+384)+16),w
 11302  03F0  390F               	andlw	15
 11303  03F1  0275               	subwf	print_buffer@i,w
 11304  03F2  1803               	btfsc	3,0
 11305  03F3  2C00               	goto	l4304
 11306                           
 11307                           ;print.c: 233: ser_putch(buffer.x[i]);
 11308  03F4  0875               	movf	print_buffer@i,w
 11309  03F5  3EAB               	addlw	(low (_buffer| (0+256)))& (0+255)
 11310  03F6  0084               	movwf	4
 11311  03F7  1783               	bsf	3,7	;select IRP bank3
 11312  03F8  0800               	movf	0,w
 11313  03F9  160A  118A  2440  120A  118A  	fcall	_ser_putch
 11314  03FE  0AF5               	incf	print_buffer@i,f
 11315  03FF  2BED               	goto	l4302
 11316  0400                     l4304:	
 11317                           
 11318                           ;print.c: 234: }
 11319                           ;print.c: 235: ser_puts("\r\n");
 11320  0400  30F4               	movlw	low (STR_9| (0+32768))
 11321  0401  1283               	bcf	3,5	;RP0=0, select bank0
 11322  0402  1303               	bcf	3,6	;RP1=0, select bank0
 11323  0403  00A1               	movwf	ser_puts@s
 11324  0404  3098               	movlw	high (STR_9| (0+32768))
 11325  0405  00A2               	movwf	ser_puts@s+1
 11326  0406  160A  118A  2C23   	ljmp	l4098
 11327  0409                     __end_of_print_buffer:	
 11328                           
 11329                           	psect	text54
 11330  1CBE                     __ptext54:	
 11331 ;; *************** function _global_int *****************
 11332 ;; Defined at:
 11333 ;;		line 81 in file "../../../LC-meter.c"
 11334 ;; Parameters:    Size  Location     Type
 11335 ;;		None
 11336 ;; Auto vars:     Size  Location     Type
 11337 ;;		None
 11338 ;; Return value:  Size  Location     Type
 11339 ;;		None               void
 11340 ;; Registers used:
 11341 ;;		wreg, fsr0l, fsr0h, status,2, status,0
 11342 ;; Tracked objects:
 11343 ;;		On entry : 0/0
 11344 ;;		On exit  : 200/0
 11345 ;;		Unchanged: 0/0
 11346 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11347 ;;      Params:         0       0       0       0       0
 11348 ;;      Locals:         0       0       0       0       0
 11349 ;;      Temps:          4       0       0       0       0
 11350 ;;      Totals:         4       0       0       0       0
 11351 ;;Total ram usage:        4 bytes
 11352 ;; Hardware stack levels used:    1
 11353 ;; This function calls:
 11354 ;;		Nothing
 11355 ;; This function is called by:
 11356 ;;		Interrupt level 1
 11357 ;; This function uses a non-reentrant model
 11358 ;;
 11359                           
 11360                           
 11361                           ;psect for function _global_int
 11362  1CBE                     _global_int:	
 11363                           
 11364                           ;LC-meter.c: 85: if(PIR1 & 0x02) {
 11365  1CBE  1283               	bcf	3,5	;RP0=0, select bank0
 11366  1CBF  1303               	bcf	3,6	;RP1=0, select bank0
 11367  1CC0  1C8C               	btfss	12,1	;volatile
 11368  1CC1  2D0A               	goto	i1l3600
 11369                           
 11370                           ;LC-meter.c: 86: bres += 256;
 11371  1CC2  3001               	movlw	1
 11372  1CC3  1683               	bsf	3,5	;RP0=1, select bank3
 11373  1CC4  1703               	bsf	3,6	;RP1=1, select bank3
 11374  1CC5  07DC               	addwf	(_bres+1)^(0+384),f	;volatile
 11375                           
 11376                           ;LC-meter.c: 87: if(bres >= ((unsigned long)((double)((20000000) / 4) / 1000))) {
 11377  1CC6  3013               	movlw	19
 11378  1CC7  025C               	subwf	(_bres+1)^(0+384),w	;volatile
 11379  1CC8  3088               	movlw	136
 11380  1CC9  1903               	skipnz
 11381  1CCA  025B               	subwf	_bres^(0+384),w	;volatile
 11382  1CCB  1C03               	skipc
 11383  1CCC  2D07               	goto	i1l3598
 11384                           
 11385                           ;LC-meter.c: 88: bres -= ((unsigned long)((double)((20000000) / 4) / 1000));
 11386  1CCD  3088               	movlw	136
 11387  1CCE  02DB               	subwf	_bres^(0+384),f	;volatile
 11388  1CCF  3013               	movlw	19
 11389  1CD0  1C03               	skipc
 11390  1CD1  03DC               	decf	(_bres+1)^(0+384),f	;volatile
 11391  1CD2  02DC               	subwf	(_bres+1)^(0+384),f	;volatile
 11392                           
 11393                           ;LC-meter.c: 89: msecpart++;
 11394  1CD3  0ADD               	incf	_msecpart^(0+384),f	;volatile
 11395  1CD4  1903               	skipnz
 11396  1CD5  0ADE               	incf	(_msecpart+1)^(0+384),f	;volatile
 11397                           
 11398                           ;LC-meter.c: 90: PORTC &= ~0b00000100; PORTC |= (!!(msecpart >= 833)) << 2;;
 11399  1CD6  1283               	bcf	3,5	;RP0=0, select bank0
 11400  1CD7  1303               	bcf	3,6	;RP1=0, select bank0
 11401  1CD8  1107               	bcf	7,2	;volatile
 11402  1CD9  3003               	movlw	3
 11403  1CDA  1683               	bsf	3,5	;RP0=1, select bank3
 11404  1CDB  1703               	bsf	3,6	;RP1=1, select bank3
 11405  1CDC  025E               	subwf	(_msecpart+1)^(0+384),w	;volatile
 11406  1CDD  3041               	movlw	65
 11407  1CDE  1903               	skipnz
 11408  1CDF  025D               	subwf	_msecpart^(0+384),w	;volatile
 11409  1CE0  1C03               	btfss	3,0
 11410  1CE1  2CE4               	goto	u287_20
 11411  1CE2  3001               	movlw	1
 11412  1CE3  2CE5               	goto	u288_20
 11413  1CE4                     u287_20:	
 11414  1CE4  3000               	movlw	0
 11415  1CE5                     u288_20:	
 11416  1CE5  00F0               	movwf	??_global_int
 11417  1CE6  3001               	movlw	1
 11418  1CE7  1003               	clrc
 11419  1CE8                     L20:	
 11420  1CE8  0DF0               	rlf	??_global_int,f
 11421  1CE9  3EFF               	addlw	-1
 11422  1CEA  1003               	clrc
 11423  1CEB  1D03               	skipz
 11424  1CEC  2CE8               	goto	L20
 11425  1CED  0D70               	rlf	??_global_int,w
 11426  1CEE  1283               	bcf	3,5	;RP0=0, select bank0
 11427  1CEF  1303               	bcf	3,6	;RP1=0, select bank0
 11428  1CF0  0487               	iorwf	7,f	;volatile
 11429                           
 11430                           ;LC-meter.c: 92: if(msecpart >= 1000) {
 11431  1CF1  3003               	movlw	3
 11432  1CF2  1683               	bsf	3,5	;RP0=1, select bank3
 11433  1CF3  1703               	bsf	3,6	;RP1=1, select bank3
 11434  1CF4  025E               	subwf	(_msecpart+1)^(0+384),w	;volatile
 11435  1CF5  30E8               	movlw	232
 11436  1CF6  1903               	skipnz
 11437  1CF7  025D               	subwf	_msecpart^(0+384),w	;volatile
 11438  1CF8  1C03               	skipc
 11439  1CF9  2D07               	goto	i1l3598
 11440                           
 11441                           ;LC-meter.c: 94: seconds++;
 11442  1CFA  0A9C               	incf	_seconds^(0+384),f	;volatile
 11443  1CFB  1903               	skipnz
 11444  1CFC  0A9D               	incf	(_seconds+1)^(0+384),f	;volatile
 11445  1CFD  1903               	skipnz
 11446  1CFE  0A9E               	incf	(_seconds+2)^(0+384),f	;volatile
 11447  1CFF  1903               	skipnz
 11448  1D00  0A9F               	incf	(_seconds+3)^(0+384),f	;volatile
 11449                           
 11450                           ;LC-meter.c: 95: msecpart -= 1000;
 11451  1D01  30E8               	movlw	232
 11452  1D02  02DD               	subwf	_msecpart^(0+384),f	;volatile
 11453  1D03  3003               	movlw	3
 11454  1D04  1C03               	skipc
 11455  1D05  03DE               	decf	(_msecpart+1)^(0+384),f	;volatile
 11456  1D06  02DE               	subwf	(_msecpart+1)^(0+384),f	;volatile
 11457  1D07                     i1l3598:	
 11458                           
 11459                           ;LC-meter.c: 96: }
 11460                           ;LC-meter.c: 97: }
 11461                           ;LC-meter.c: 99: PIR1 &= ~0b10;
 11462  1D07  1283               	bcf	3,5	;RP0=0, select bank0
 11463  1D08  1303               	bcf	3,6	;RP1=0, select bank0
 11464  1D09  108C               	bcf	12,1	;volatile
 11465  1D0A                     i1l3600:	
 11466                           
 11467                           ;LC-meter.c: 100: }
 11468                           ;LC-meter.c: 102: if(RCIF) { rxfifo[rxiptr] = RCREG; ser_tmp = (rxiptr + 1) & ((uint8_t)
      +                          16 - 1); if(ser_tmp != rxoptr) rxiptr = ser_tmp; }; if(TXIF && TXIE) { TXREG = txfifo[tx
      +                          optr]; ++txoptr; txoptr &= ((uint8_t)16 - 1); if(txoptr == txiptr) { TXIE = 0; }; TXIF =
      +                           0; 
 11469  1D0A  1E8C               	btfss	12,5	;volatile
 11470  1D0B  2D1F               	goto	i1l3612
 11471  1D0C  0877               	movf	_rxiptr,w
 11472  1D0D  3E10               	addlw	(low (_rxfifo| (0+256)))& (0+255)
 11473  1D0E  0084               	movwf	4
 11474  1D0F  081A               	movf	26,w	;volatile
 11475  1D10  1783               	bsf	3,7	;select IRP bank2
 11476  1D11  0080               	movwf	0
 11477  1D12  0877               	movf	_rxiptr,w	;volatile
 11478  1D13  3E01               	addlw	1
 11479  1D14  1683               	bsf	3,5	;RP0=1, select bank3
 11480  1D15  1703               	bsf	3,6	;RP1=1, select bank3
 11481  1D16  00AA               	movwf	_ser_tmp^(0+384)
 11482  1D17  300F               	movlw	15
 11483  1D18  05AA               	andwf	_ser_tmp^(0+384),f
 11484  1D19  082A               	movf	_ser_tmp^(0+384),w
 11485  1D1A  0629               	xorwf	_rxoptr^(0+384),w	;volatile
 11486  1D1B  1903               	skipnz
 11487  1D1C  2D1F               	goto	i1l3612
 11488  1D1D  082A               	movf	_ser_tmp^(0+384),w
 11489  1D1E  00F7               	movwf	_rxiptr	;volatile
 11490  1D1F                     i1l3612:	
 11491  1D1F  1283               	bcf	3,5	;RP0=0, select bank0
 11492  1D20  1303               	bcf	3,6	;RP1=0, select bank0
 11493  1D21  1E0C               	btfss	12,4	;volatile
 11494  1D22  2D37               	goto	i1l259
 11495  1D23  1683               	bsf	3,5	;RP0=1, select bank1
 11496  1D24  1E0C               	btfss	12,4	;volatile
 11497  1D25  2D37               	goto	i1l259
 11498  1D26  0879               	movf	_txoptr,w
 11499  1D27  3E20               	addlw	(low (_txfifo| (0+256)))& (0+255)
 11500  1D28  0084               	movwf	4
 11501  1D29  1783               	bsf	3,7	;select IRP bank2
 11502  1D2A  0800               	movf	0,w
 11503  1D2B  1283               	bcf	3,5	;RP0=0, select bank0
 11504  1D2C  0099               	movwf	25	;volatile
 11505  1D2D  0AF9               	incf	_txoptr,f	;volatile
 11506  1D2E  300F               	movlw	15
 11507  1D2F  05F9               	andwf	_txoptr,f	;volatile
 11508  1D30  0879               	movf	_txoptr,w	;volatile
 11509  1D31  0678               	xorwf	_txiptr,w	;volatile
 11510  1D32  1683               	bsf	3,5	;RP0=1, select bank1
 11511  1D33  1903               	btfsc	3,2
 11512  1D34  120C               	bcf	12,4	;volatile
 11513  1D35  1283               	bcf	3,5	;RP0=0, select bank0
 11514  1D36  120C               	bcf	12,4	;volatile
 11515  1D37                     i1l259:	
 11516  1D37  0873               	movf	??_global_int+3,w
 11517  1D38  008A               	movwf	10
 11518  1D39  0872               	movf	??_global_int+2,w
 11519  1D3A  0084               	movwf	4
 11520  1D3B  0E71               	swapf	(??_global_int+1)^(0+-128),w
 11521  1D3C  0083               	movwf	3
 11522  1D3D  0EFE               	swapf	126,f
 11523  1D3E  0E7E               	swapf	126,w
 11524  1D3F  0009               	retfie
 11525  1D40                     __end_of_global_int:	
 11526  007E                     btemp	set	126	;btemp
 11527  007E                     wtemp	set	126
 11528  007E                     wtemp0	set	126
 11529  0080                     wtemp1	set	128
 11530  0082                     wtemp2	set	130
 11531  0084                     wtemp3	set	132
 11532  0086                     wtemp4	set	134
 11533  0088                     wtemp5	set	136
 11534  007F                     wtemp6	set	127
 11535  007E                     ttemp	set	126
 11536  007E                     ttemp0	set	126
 11537  0081                     ttemp1	set	129
 11538  0084                     ttemp2	set	132
 11539  0087                     ttemp3	set	135
 11540  007F                     ttemp4	set	127
 11541  007E                     ltemp	set	126
 11542  007E                     ltemp0	set	126
 11543  0082                     ltemp1	set	130
 11544  0086                     ltemp2	set	134
 11545  0080                     ltemp3	set	128
 11546                           
 11547                           	psect	intentry
 11548  0004                     __pintentry:	
 11549                           ;incstack = 0
 11550                           ; Regs used in _global_int: [wreg-fsr0h+status,2+status,0]
 11551                           
 11552  0004                     interrupt_function:	
 11553  007E                     saved_w	set	btemp
 11554  0004  00FE               	movwf	btemp
 11555  0005  0E03               	swapf	3,w
 11556  0006  00F1               	movwf	??_global_int+1
 11557  0007  0804               	movf	4,w
 11558  0008  00F2               	movwf	??_global_int+2
 11559  0009  080A               	movf	10,w
 11560  000A  00F3               	movwf	??_global_int+3
 11561  000B  160A  158A  2CBE   	ljmp	_global_int


Data Sizes:
    Strings     174
    Constant    76
    Data        5
    BSS         84
    Persistent  8
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6      10
    BANK0            79     79      79
    BANK1            80     79      79
    BANK3            96     23      84
    BANK2            96     19      51

Pointer List with Targets:

    eval_poly@d	PTR const  size(2) Largest target is 40
		 -> exp@coeff(CODE[40]), log@coeff(CODE[36]), 

    frexp@eptr	PTR int  size(1) Largest target is 2
		 -> log@exponent(BANK1[2]), floor@expon(BANK1[2]), 

    ser_puts@s	PTR const unsigned char  size(2) Largest target is 16
		 -> STR_36(CODE[3]), STR_35(CODE[5]), STR_34(CODE[3]), STR_33(CODE[8]), 
		 -> STR_32(CODE[6]), STR_31(CODE[6]), STR_30(CODE[6]), STR_29(CODE[5]), 
		 -> STR_26(CODE[3]), STR_24(CODE[3]), STR_22(CODE[3]), STR_17(CODE[3]), 
		 -> STR_16(CODE[16]), STR_15(CODE[16]), STR_13(CODE[3]), STR_9(CODE[3]), 

    buffer_puts@x	PTR const unsigned char  size(2) Largest target is 6
		 -> STR_27(CODE[6]), 

    lcd_puts@string	PTR const unsigned char  size(2) Largest target is 10
		 -> STR_21(CODE[5]), STR_20(CODE[6]), STR_19(CODE[7]), STR_18(CODE[7]), 
		 -> STR_14(CODE[10]), STR_12(CODE[4]), STR_11(CODE[4]), STR_10(CODE[6]), 

    main$257	PTR const unsigned char  size(2) Largest target is 16
		 -> STR_16(CODE[16]), STR_15(CODE[16]), 

    put_str@s	PTR const unsigned char  size(2) Largest target is 15
		 -> STR_37(CODE[13]), STR_28(CODE[10]), STR_25(CODE[15]), STR_23(CODE[12]), 

    print_unit@units	PTR const unsigned char [8] size(2) Largest target is 3
		 -> STR_8(CODE[3]), STR_7(CODE[3]), STR_6(CODE[3]), STR_5(CODE[3]), 
		 -> STR_4(CODE[3]), STR_3(CODE[3]), STR_2(CODE[3]), STR_1(CODE[2]), 


Critical Paths under _main in COMMON

    _print_reading->_format_number
    _format_xint32->_format_number
    _floor->_frexp
    _log->_frexp
    ___flmul->_frexp
    ___fladd->_frexp
    _lcd_begin->_lcd_write4bits
    _measure_freq->_format_number
    _measure_freq->_print_buffer
    _measure_freq->_timer0_read_ps
    _print_buffer->_ser_putch
    _ser_puts->_ser_putch
    _format_number->___lwmod
    _format_number->_buffer_putch
    _buffer_puts->_buffer_putch
    _lcd_send->_lcd_write4bits

Critical Paths under _global_int in COMMON

    None.

Critical Paths under _main in BANK0

    _print_indicator->_lcd_gotoxy
    _print_unit->_lcd_gotoxy
    _print_reading->_format_number
    _lcd_puts->_lcd_send
    _format_xint32->_format_number
    _exp->_eval_poly
    _ldexp->_eval_poly
    ___flsub->___fladd
    ___fldiv->___flpack
    ___lltofl->___flpack
    _log->_eval_poly
    _eval_poly->___fladd
    ___flmul->___fldiv
    ___fladd->___flmul
    ___awtofl->___flpack
    _lcd_begin->_lcd_command
    _calibrate->___lwtofl
    _put_str->_output_putch
    _output_putch->_lcd_send
    _measure_freq->_format_number
    _print_buffer->_ser_puts
    _lcd_gotoxy->_lcd_command
    _format_number->___lwdiv
    _buffer_puts->_buffer_putch
    _lcd_clear->_lcd_command
    _lcd_command->_lcd_send
    ___lwtofl->_measure_freq

Critical Paths under _global_int in BANK0

    None.

Critical Paths under _main in BANK1

    _measure_inductance->___fltol
    _format_double->_pow
    _pow->_exp
    _exp->_floor
    _ldexp->_eval_poly
    _floor->___altofl
    ___fltol->_log10
    ___altofl->___fltol
    _log10->_log
    _log->_eval_poly

Critical Paths under _global_int in BANK1

    None.

Critical Paths under _main in BANK3

    _main->_format_double
    _measure_capacitance->_format_double

Critical Paths under _global_int in BANK3

    None.

Critical Paths under _main in BANK2

    _main->_measure_capacitance

Critical Paths under _global_int in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0  429679
                                             20 BANK3      3     3      0
                          _calibrate
                          _delay10ms
                      _format_double
                          _lcd_begin
                          _lcd_clear
                         _lcd_gotoxy
                           _lcd_init
                           _lcd_puts
                _measure_capacitance
                 _measure_inductance
                    _print_indicator
                           _ser_init
                           _ser_puts
                        _timer0_init
                        _timer2_init
 ---------------------------------------------------------------------------------
 (1) _timer2_init                                          4     4      0     133
                                              4 COMMON     1     1      0
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _timer0_init                                         10    10      0     371
                                              0 BANK0     10    10      0
 ---------------------------------------------------------------------------------
 (1) _ser_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _print_indicator                                      1     1      0    3155
                                              9 BANK0      1     1      0
                         _lcd_gotoxy
                           _lcd_puts
 ---------------------------------------------------------------------------------
 (1) _measure_inductance                                  55    55      0   43103
                                             28 BANK1     43    43      0
                            ___fldiv
                             ___flge
                            ___flmul
                            ___flsub
                            ___fltol
                           ___lwtofl
                         _lcd_gotoxy
                       _measure_freq
                      _print_reading
                         _print_unit
                            _put_str
 ---------------------------------------------------------------------------------
 (1) _measure_capacitance                                 19    19      0  204882
                                              0 BANK2     19    19      0
                            ___fldiv
                             ___flge
                            ___flmul
                            ___flsub
                            ___fltol
                           ___lwtofl
                      _format_double
                      _format_xint32
                         _lcd_gotoxy
                       _measure_freq
                      _print_reading
                         _print_unit
                            _put_str
                          _ser_putch
                           _ser_puts
 ---------------------------------------------------------------------------------
 (2) _print_unit                                           3     3      0    2996
                                              9 BANK0      2     2      0
                         _lcd_gotoxy
                           _ser_puts
 ---------------------------------------------------------------------------------
 (2) _print_reading                                        6     4      2    7806
                                             48 BANK0      6     4      2
                            ___lwdiv
                            ___lwmod
                      _format_number
                         _lcd_gotoxy
                           _lcd_puts
 ---------------------------------------------------------------------------------
 (2) _lcd_puts                                             3     1      2    1179
                                              2 BANK0      3     1      2
                           _lcd_send
 ---------------------------------------------------------------------------------
 (2) _format_xint32                                        4     0      4    3735
                                             48 BANK0      4     0      4
                       _buffer_putch
                      _format_number
 ---------------------------------------------------------------------------------
 (2) _format_double                                       20    16      4  157379
                                              0 BANK3     20    16      4
                           ___awtofl
                            ___fldiv
                             ___flge
                            ___flmul
                            ___flsub
                            ___fltol
                       _buffer_putch
                              _floor
                              _log10
                                _pow
 ---------------------------------------------------------------------------------
 (3) _pow                                                 21    13      8   89436
                                             58 BANK1     21    13      8
                             ___flge
                            ___flmul
                            ___flneg
                            ___fltol
                           ___lltofl
                                _exp
                                _log
 ---------------------------------------------------------------------------------
 (4) _exp                                                 15    11      4   48325
                                             43 BANK1     15    11      4
                           ___awtofl
                            ___fldiv
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                          _eval_poly
                              _floor
                              _ldexp
                                _log (ARG)
 ---------------------------------------------------------------------------------
 (5) _ldexp                                               12     6      6    3479
                                              4 BANK1     12     6      6
                             ___flge
                            ___flneg
                          _eval_poly (ARG)
 ---------------------------------------------------------------------------------
 (6) ___flneg                                              4     0      4     325
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (5) _floor                                               10     6      4   11204
                                             33 BANK1     10     6      4
                           ___altofl
                            ___fladd
                            ___fldiv (ARG)
                             ___flge
                            ___fltol
                              _frexp
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             10     6      4     882
                                             18 BANK1     10     6      4
                            ___fldiv (ARG)
                              _log10 (ARG)
 ---------------------------------------------------------------------------------
 (6) ___altofl                                             5     1      4    2446
                                             28 BANK1      5     1      4
                           ___flpack
                            ___fltol (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flsub                                              8     0      8    5089
                                             63 BANK0      8     0      8
                           ___awtofl (ARG)
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (2) ___fldiv                                             19    11      8    3931
                                             10 BANK0     19    11      8
                           ___flpack
 ---------------------------------------------------------------------------------
 (4) ___lltofl                                             4     0      4    2344
                                             10 BANK0      4     0      4
                           ___flpack
 ---------------------------------------------------------------------------------
 (3) _log10                                                8     4      4   34367
                                             10 BANK1      8     4      4
                            ___flmul
                                _log
 ---------------------------------------------------------------------------------
 (4) _log                                                  6     2      4   27850
                                              4 BANK1      6     2      4
                           ___awtofl
                            ___fladd
                             ___flge
                            ___flmul
                          _eval_poly
                              _frexp
 ---------------------------------------------------------------------------------
 (5) _frexp                                                7     2      5     582
                                              4 COMMON     2     2      0
                                              0 BANK0      5     0      5
 ---------------------------------------------------------------------------------
 (5) _eval_poly                                           20    12      8   11109
                                             63 BANK0     16     8      8
                                              0 BANK1      4     4      0
                            ___fladd
                            ___flmul
 ---------------------------------------------------------------------------------
 (2) ___flmul                                             19    11      8    6342
                                             29 BANK0     19    11      8
                           ___awtofl (ARG)
                            ___fldiv (ARG)
                           ___flpack
                              _frexp (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fladd                                             15     7      8    4123
                                             48 BANK0     15     7      8
                           ___awtofl (ARG)
                            ___flmul (ARG)
                           ___flpack
                              _frexp (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flge                                              12     4      8    2628
                                              0 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (5) ___awtofl                                             9     5      4    2686
                                              4 COMMON     1     1      0
                                             10 BANK0      4     0      4
                           ___flpack
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             3     3      0      68
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _lcd_begin                                            4     3      1     860
                                              3 BANK0      4     3      1
                        _lcd_command
                     _lcd_write4bits
 ---------------------------------------------------------------------------------
 (1) _calibrate                                            1     1      0   14811
                                             58 BANK0      1     1      0
                           ___lwtofl
                          _delay10ms
                          _lcd_clear
                         _lcd_gotoxy
                           _lcd_send
                       _measure_freq
                            _put_str
                           _ser_puts
 ---------------------------------------------------------------------------------
 (2) _put_str                                              7     5      2    1092
                                              3 BANK0      7     5      2
                       _output_putch
 ---------------------------------------------------------------------------------
 (3) _output_putch                                         1     1      0     702
                                              2 BANK0      1     1      0
                           _lcd_send
                          _ser_putch
 ---------------------------------------------------------------------------------
 (2) _measure_freq                                         6     4      2    6737
                                             48 BANK0      6     4      2
                        _buffer_init
                        _buffer_puts
                      _format_number
                         _lcd_gotoxy
                       _print_buffer
                     _timer0_read_ps
 ---------------------------------------------------------------------------------
 (3) _timer0_read_ps                                       9     7      2     167
                                              4 COMMON     2     0      2
                                              0 BANK0      7     7      0
 ---------------------------------------------------------------------------------
 (3) _print_buffer                                         1     1      0    1150
                                              5 COMMON     1     1      0
                          _ser_putch
                           _ser_puts
 ---------------------------------------------------------------------------------
 (1) _ser_puts                                             2     0      2    1051
                                              0 BANK0      2     0      2
                          _ser_putch
 ---------------------------------------------------------------------------------
 (2) _ser_putch                                            1     1      0      31
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _lcd_gotoxy                                           6     5      1    1945
                                              3 BANK0      6     5      1
                        _lcd_command
 ---------------------------------------------------------------------------------
 (3) _format_number                                       42    38      4    3249
                                              5 COMMON     1     1      0
                                              7 BANK0     41    37      4
                            ___lwdiv
                            ___lwmod
                       _buffer_putch
 ---------------------------------------------------------------------------------
 (4) ___lwmod                                              5     1      4     582
                                              4 COMMON     1     1      0
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (4) ___lwdiv                                              7     3      4     591
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (3) _buffer_puts                                          2     0      2     161
                                              3 BANK0      2     0      2
                       _buffer_putch
 ---------------------------------------------------------------------------------
 (4) _buffer_putch                                         4     4      0      31
                                              4 COMMON     1     1      0
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (3) _buffer_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _lcd_clear                                            2     2      0     640
                                              3 BANK0      2     2      0
                        _lcd_command
 ---------------------------------------------------------------------------------
 (3) _lcd_command                                          1     1      0     640
                                              2 BANK0      1     1      0
                           _lcd_send
 ---------------------------------------------------------------------------------
 (3) _lcd_send                                             2     1      1     609
                                              0 BANK0      2     1      1
                     _lcd_write4bits
 ---------------------------------------------------------------------------------
 (4) _lcd_write4bits                                       2     2      0      31
                                              4 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _delay10ms                                            1     1      0       0
 ---------------------------------------------------------------------------------
 (2) ___lwtofl                                             4     0      4    2669
                                             54 BANK0      4     0      4
                           ___flpack
                       _measure_freq (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flpack                                            10     4      6    2248
                                              0 BANK0     10     4      6
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (8) _global_int                                           4     4      0       0
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _calibrate
     ___lwtofl
       ___flpack
       _measure_freq (ARG)
         _buffer_init
         _buffer_puts
           _buffer_putch
         _format_number
           ___lwdiv
           ___lwmod
           _buffer_putch
         _lcd_gotoxy
           _lcd_command
             _lcd_send
               _lcd_write4bits
         _print_buffer
           _ser_putch
           _ser_puts
             _ser_putch
         _timer0_read_ps
     _delay10ms
     _lcd_clear
       _lcd_command
         _lcd_send
           _lcd_write4bits
     _lcd_gotoxy
       _lcd_command
         _lcd_send
           _lcd_write4bits
     _lcd_send
       _lcd_write4bits
     _measure_freq
       _buffer_init
       _buffer_puts
         _buffer_putch
       _format_number
         ___lwdiv
         ___lwmod
         _buffer_putch
       _lcd_gotoxy
         _lcd_command
           _lcd_send
             _lcd_write4bits
       _print_buffer
         _ser_putch
         _ser_puts
           _ser_putch
       _timer0_read_ps
     _put_str
       _output_putch
         _lcd_send
           _lcd_write4bits
         _ser_putch
     _ser_puts
       _ser_putch
   _delay10ms
   _format_double
     ___awtofl
       ___flpack
     ___fldiv
       ___flpack
     ___flge
     ___flmul
       ___awtofl (ARG)
         ___flpack
       ___fldiv (ARG)
         ___flpack
       ___flpack (ARG)
       _frexp (ARG)
     ___flsub
       ___awtofl (ARG)
         ___flpack
       ___fladd (ARG)
         ___awtofl (ARG)
           ___flpack
         ___flmul (ARG)
           ___awtofl (ARG)
             ___flpack
           ___fldiv (ARG)
             ___flpack
           ___flpack (ARG)
           _frexp (ARG)
         ___flpack (ARG)
         _frexp (ARG)
       ___flmul (ARG)
         ___awtofl (ARG)
           ___flpack
         ___fldiv (ARG)
           ___flpack
         ___flpack (ARG)
         _frexp (ARG)
     ___fltol
       ___fldiv (ARG)
         ___flpack
       _log10 (ARG)
         ___flmul
           ___awtofl (ARG)
             ___flpack
           ___fldiv (ARG)
             ___flpack
           ___flpack (ARG)
           _frexp (ARG)
         _log
           ___awtofl
             ___flpack
           ___fladd
             ___awtofl (ARG)
               ___flpack
             ___flmul (ARG)
               ___awtofl (ARG)
                 ___flpack
               ___fldiv (ARG)
                 ___flpack
               ___flpack (ARG)
               _frexp (ARG)
             ___flpack (ARG)
             _frexp (ARG)
           ___flge
           ___flmul
             ___awtofl (ARG)
               ___flpack
             ___fldiv (ARG)
               ___flpack
             ___flpack (ARG)
             _frexp (ARG)
           _eval_poly
             ___fladd
               ___awtofl (ARG)
                 ___flpack
               ___flmul (ARG)
                 ___awtofl (ARG)
                   ___flpack
                 ___fldiv (ARG)
                   ___flpack
                 ___flpack (ARG)
                 _frexp (ARG)
               ___flpack (ARG)
               _frexp (ARG)
             ___flmul
               ___awtofl (ARG)
                 ___flpack
               ___fldiv (ARG)
                 ___flpack
               ___flpack (ARG)
               _frexp (ARG)
           _frexp
     _buffer_putch
     _floor
       ___altofl
         ___flpack
         ___fltol (ARG)
           ___fldiv (ARG)
             ___flpack
           _log10 (ARG)
             ___flmul
               ___awtofl (ARG)
                 ___flpack
               ___fldiv (ARG)
                 ___flpack
               ___flpack (ARG)
               _frexp (ARG)
             _log
               ___awtofl
                 ___flpack
               ___fladd
                 ___awtofl (ARG)
                   ___flpack
                 ___flmul (ARG)
                   ___awtofl (ARG)
                     ___flpack
                   ___fldiv (ARG)
                     ___flpack
                   ___flpack (ARG)
                   _frexp (ARG)
                 ___flpack (ARG)
                 _frexp (ARG)
               ___flge
               ___flmul
                 ___awtofl (ARG)
                   ___flpack
                 ___fldiv (ARG)
                   ___flpack
                 ___flpack (ARG)
                 _frexp (ARG)
               _eval_poly
                 ___fladd
                   ___awtofl (ARG)
                     ___flpack
                   ___flmul (ARG)
                     ___awtofl (ARG)
                       ___flpack
                     ___fldiv (ARG)
                       ___flpack
                     ___flpack (ARG)
                     _frexp (ARG)
                   ___flpack (ARG)
                   _frexp (ARG)
                 ___flmul
                   ___awtofl (ARG)
                     ___flpack
                   ___fldiv (ARG)
                     ___flpack
                   ___flpack (ARG)
                   _frexp (ARG)
               _frexp
       ___fladd
         ___awtofl (ARG)
           ___flpack
         ___flmul (ARG)
           ___awtofl (ARG)
             ___flpack
           ___fldiv (ARG)
             ___flpack
           ___flpack (ARG)
           _frexp (ARG)
         ___flpack (ARG)
         _frexp (ARG)
       ___fldiv (ARG)
         ___flpack
       ___flge (ARG)
       ___fltol (ARG)
         ___fldiv (ARG)
           ___flpack
         _log10 (ARG)
           ___flmul
             ___awtofl (ARG)
               ___flpack
             ___fldiv (ARG)
               ___flpack
             ___flpack (ARG)
             _frexp (ARG)
           _log
             ___awtofl
               ___flpack
             ___fladd
               ___awtofl (ARG)
                 ___flpack
               ___flmul (ARG)
                 ___awtofl (ARG)
                   ___flpack
                 ___fldiv (ARG)
                   ___flpack
                 ___flpack (ARG)
                 _frexp (ARG)
               ___flpack (ARG)
               _frexp (ARG)
             ___flge
             ___flmul
               ___awtofl (ARG)
                 ___flpack
               ___fldiv (ARG)
                 ___flpack
               ___flpack (ARG)
               _frexp (ARG)
             _eval_poly
               ___fladd
                 ___awtofl (ARG)
                   ___flpack
                 ___flmul (ARG)
                   ___awtofl (ARG)
                     ___flpack
                   ___fldiv (ARG)
                     ___flpack
                   ___flpack (ARG)
                   _frexp (ARG)
                 ___flpack (ARG)
                 _frexp (ARG)
               ___flmul
                 ___awtofl (ARG)
                   ___flpack
                 ___fldiv (ARG)
                   ___flpack
                 ___flpack (ARG)
                 _frexp (ARG)
             _frexp
       _frexp (ARG)
     _log10
       ___flmul
         ___awtofl (ARG)
           ___flpack
         ___fldiv (ARG)
           ___flpack
         ___flpack (ARG)
         _frexp (ARG)
       _log
         ___awtofl
           ___flpack
         ___fladd
           ___awtofl (ARG)
             ___flpack
           ___flmul (ARG)
             ___awtofl (ARG)
               ___flpack
             ___fldiv (ARG)
               ___flpack
             ___flpack (ARG)
             _frexp (ARG)
           ___flpack (ARG)
           _frexp (ARG)
         ___flge
         ___flmul
           ___awtofl (ARG)
             ___flpack
           ___fldiv (ARG)
             ___flpack
           ___flpack (ARG)
           _frexp (ARG)
         _eval_poly
           ___fladd
             ___awtofl (ARG)
               ___flpack
             ___flmul (ARG)
               ___awtofl (ARG)
                 ___flpack
               ___fldiv (ARG)
                 ___flpack
               ___flpack (ARG)
               _frexp (ARG)
             ___flpack (ARG)
             _frexp (ARG)
           ___flmul
             ___awtofl (ARG)
               ___flpack
             ___fldiv (ARG)
               ___flpack
             ___flpack (ARG)
             _frexp (ARG)
         _frexp
     _pow
       ___flge
       ___flmul
         ___awtofl (ARG)
           ___flpack
         ___fldiv (ARG)
           ___flpack
         ___flpack (ARG)
         _frexp (ARG)
       ___flneg
       ___fltol
         ___fldiv (ARG)
           ___flpack
         _log10 (ARG)
           ___flmul
             ___awtofl (ARG)
               ___flpack
             ___fldiv (ARG)
               ___flpack
             ___flpack (ARG)
             _frexp (ARG)
           _log
             ___awtofl
               ___flpack
             ___fladd
               ___awtofl (ARG)
                 ___flpack
               ___flmul (ARG)
                 ___awtofl (ARG)
                   ___flpack
                 ___fldiv (ARG)
                   ___flpack
                 ___flpack (ARG)
                 _frexp (ARG)
               ___flpack (ARG)
               _frexp (ARG)
             ___flge
             ___flmul
               ___awtofl (ARG)
                 ___flpack
               ___fldiv (ARG)
                 ___flpack
               ___flpack (ARG)
               _frexp (ARG)
             _eval_poly
               ___fladd
                 ___awtofl (ARG)
                   ___flpack
                 ___flmul (ARG)
                   ___awtofl (ARG)
                     ___flpack
                   ___fldiv (ARG)
                     ___flpack
                   ___flpack (ARG)
                   _frexp (ARG)
                 ___flpack (ARG)
                 _frexp (ARG)
               ___flmul
                 ___awtofl (ARG)
                   ___flpack
                 ___fldiv (ARG)
                   ___flpack
                 ___flpack (ARG)
                 _frexp (ARG)
             _frexp
       ___lltofl
         ___flpack
       _exp
         ___awtofl
           ___flpack
         ___fldiv
           ___flpack
         ___flge
         ___flmul
           ___awtofl (ARG)
             ___flpack
           ___fldiv (ARG)
             ___flpack
           ___flpack (ARG)
           _frexp (ARG)
         ___flneg
         ___flsub
           ___awtofl (ARG)
             ___flpack
           ___fladd (ARG)
             ___awtofl (ARG)
               ___flpack
             ___flmul (ARG)
               ___awtofl (ARG)
                 ___flpack
               ___fldiv (ARG)
                 ___flpack
               ___flpack (ARG)
               _frexp (ARG)
             ___flpack (ARG)
             _frexp (ARG)
           ___flmul (ARG)
             ___awtofl (ARG)
               ___flpack
             ___fldiv (ARG)
               ___flpack
             ___flpack (ARG)
             _frexp (ARG)
         ___fltol
           ___fldiv (ARG)
             ___flpack
           _log10 (ARG)
             ___flmul
               ___awtofl (ARG)
                 ___flpack
               ___fldiv (ARG)
                 ___flpack
               ___flpack (ARG)
               _frexp (ARG)
             _log
               ___awtofl
                 ___flpack
               ___fladd
                 ___awtofl (ARG)
                   ___flpack
                 ___flmul (ARG)
                   ___awtofl (ARG)
                     ___flpack
                   ___fldiv (ARG)
                     ___flpack
                   ___flpack (ARG)
                   _frexp (ARG)
                 ___flpack (ARG)
                 _frexp (ARG)
               ___flge
               ___flmul
                 ___awtofl (ARG)
                   ___flpack
                 ___fldiv (ARG)
                   ___flpack
                 ___flpack (ARG)
                 _frexp (ARG)
               _eval_poly
                 ___fladd
                   ___awtofl (ARG)
                     ___flpack
                   ___flmul (ARG)
                     ___awtofl (ARG)
                       ___flpack
                     ___fldiv (ARG)
                       ___flpack
                     ___flpack (ARG)
                     _frexp (ARG)
                   ___flpack (ARG)
                   _frexp (ARG)
                 ___flmul
                   ___awtofl (ARG)
                     ___flpack
                   ___fldiv (ARG)
                     ___flpack
                   ___flpack (ARG)
                   _frexp (ARG)
               _frexp
         _eval_poly
           ___fladd
             ___awtofl (ARG)
               ___flpack
             ___flmul (ARG)
               ___awtofl (ARG)
                 ___flpack
               ___fldiv (ARG)
                 ___flpack
               ___flpack (ARG)
               _frexp (ARG)
             ___flpack (ARG)
             _frexp (ARG)
           ___flmul
             ___awtofl (ARG)
               ___flpack
             ___fldiv (ARG)
               ___flpack
             ___flpack (ARG)
             _frexp (ARG)
         _floor
           ___altofl
             ___flpack
             ___fltol (ARG)
               ___fldiv (ARG)
                 ___flpack
               _log10 (ARG)
                 ___flmul
                   ___awtofl (ARG)
                     ___flpack
                   ___fldiv (ARG)
                     ___flpack
                   ___flpack (ARG)
                   _frexp (ARG)
                 _log
                   ___awtofl
                     ___flpack
                   ___fladd
                     ___awtofl (ARG)
                       ___flpack
                     ___flmul (ARG)
                       ___awtofl (ARG)
                         ___flpack
                       ___fldiv (ARG)
                         ___flpack
                       ___flpack (ARG)
                       _frexp (ARG)
                     ___flpack (ARG)
                     _frexp (ARG)
                   ___flge
                   ___flmul
                     ___awtofl (ARG)
                       ___flpack
                     ___fldiv (ARG)
                       ___flpack
                     ___flpack (ARG)
                     _frexp (ARG)
                   _eval_poly
                     ___fladd
                       ___awtofl (ARG)
                         ___flpack
                       ___flmul (ARG)
                         ___awtofl (ARG)
                           ___flpack
                         ___fldiv (ARG)
                           ___flpack
                         ___flpack (ARG)
                         _frexp (ARG)
                       ___flpack (ARG)
                       _frexp (ARG)
                     ___flmul
                       ___awtofl (ARG)
                         ___flpack
                       ___fldiv (ARG)
                         ___flpack
                       ___flpack (ARG)
                       _frexp (ARG)
                   _frexp
           ___fladd
             ___awtofl (ARG)
               ___flpack
             ___flmul (ARG)
               ___awtofl (ARG)
                 ___flpack
               ___fldiv (ARG)
                 ___flpack
               ___flpack (ARG)
               _frexp (ARG)
             ___flpack (ARG)
             _frexp (ARG)
           ___fldiv (ARG)
             ___flpack
           ___flge (ARG)
           ___fltol (ARG)
             ___fldiv (ARG)
               ___flpack
             _log10 (ARG)
               ___flmul
                 ___awtofl (ARG)
                   ___flpack
                 ___fldiv (ARG)
                   ___flpack
                 ___flpack (ARG)
                 _frexp (ARG)
               _log
                 ___awtofl
                   ___flpack
                 ___fladd
                   ___awtofl (ARG)
                     ___flpack
                   ___flmul (ARG)
                     ___awtofl (ARG)
                       ___flpack
                     ___fldiv (ARG)
                       ___flpack
                     ___flpack (ARG)
                     _frexp (ARG)
                   ___flpack (ARG)
                   _frexp (ARG)
                 ___flge
                 ___flmul
                   ___awtofl (ARG)
                     ___flpack
                   ___fldiv (ARG)
                     ___flpack
                   ___flpack (ARG)
                   _frexp (ARG)
                 _eval_poly
                   ___fladd
                     ___awtofl (ARG)
                       ___flpack
                     ___flmul (ARG)
                       ___awtofl (ARG)
                         ___flpack
                       ___fldiv (ARG)
                         ___flpack
                       ___flpack (ARG)
                       _frexp (ARG)
                     ___flpack (ARG)
                     _frexp (ARG)
                   ___flmul
                     ___awtofl (ARG)
                       ___flpack
                     ___fldiv (ARG)
                       ___flpack
                     ___flpack (ARG)
                     _frexp (ARG)
                 _frexp
           _frexp (ARG)
         _ldexp
           ___flge
           ___flneg
           _eval_poly (ARG)
             ___fladd
               ___awtofl (ARG)
                 ___flpack
               ___flmul (ARG)
                 ___awtofl (ARG)
                   ___flpack
                 ___fldiv (ARG)
                   ___flpack
                 ___flpack (ARG)
                 _frexp (ARG)
               ___flpack (ARG)
               _frexp (ARG)
             ___flmul
               ___awtofl (ARG)
                 ___flpack
               ___fldiv (ARG)
                 ___flpack
               ___flpack (ARG)
               _frexp (ARG)
         _log (ARG)
           ___awtofl
             ___flpack
           ___fladd
             ___awtofl (ARG)
               ___flpack
             ___flmul (ARG)
               ___awtofl (ARG)
                 ___flpack
               ___fldiv (ARG)
                 ___flpack
               ___flpack (ARG)
               _frexp (ARG)
             ___flpack (ARG)
             _frexp (ARG)
           ___flge
           ___flmul
             ___awtofl (ARG)
               ___flpack
             ___fldiv (ARG)
               ___flpack
             ___flpack (ARG)
             _frexp (ARG)
           _eval_poly
             ___fladd
               ___awtofl (ARG)
                 ___flpack
               ___flmul (ARG)
                 ___awtofl (ARG)
                   ___flpack
                 ___fldiv (ARG)
                   ___flpack
                 ___flpack (ARG)
                 _frexp (ARG)
               ___flpack (ARG)
               _frexp (ARG)
             ___flmul
               ___awtofl (ARG)
                 ___flpack
               ___fldiv (ARG)
                 ___flpack
               ___flpack (ARG)
               _frexp (ARG)
           _frexp
       _log
         ___awtofl
           ___flpack
         ___fladd
           ___awtofl (ARG)
             ___flpack
           ___flmul (ARG)
             ___awtofl (ARG)
               ___flpack
             ___fldiv (ARG)
               ___flpack
             ___flpack (ARG)
             _frexp (ARG)
           ___flpack (ARG)
           _frexp (ARG)
         ___flge
         ___flmul
           ___awtofl (ARG)
             ___flpack
           ___fldiv (ARG)
             ___flpack
           ___flpack (ARG)
           _frexp (ARG)
         _eval_poly
           ___fladd
             ___awtofl (ARG)
               ___flpack
             ___flmul (ARG)
               ___awtofl (ARG)
                 ___flpack
               ___fldiv (ARG)
                 ___flpack
               ___flpack (ARG)
               _frexp (ARG)
             ___flpack (ARG)
             _frexp (ARG)
           ___flmul
             ___awtofl (ARG)
               ___flpack
             ___fldiv (ARG)
               ___flpack
             ___flpack (ARG)
             _frexp (ARG)
         _frexp
   _lcd_begin
     _lcd_command
       _lcd_send
         _lcd_write4bits
     _lcd_write4bits
   _lcd_clear
     _lcd_command
       _lcd_send
         _lcd_write4bits
   _lcd_gotoxy
     _lcd_command
       _lcd_send
         _lcd_write4bits
   _lcd_init
   _lcd_puts
     _lcd_send
       _lcd_write4bits
   _measure_capacitance
     ___fldiv
       ___flpack
     ___flge
     ___flmul
       ___awtofl (ARG)
         ___flpack
       ___fldiv (ARG)
         ___flpack
       ___flpack (ARG)
       _frexp (ARG)
     ___flsub
       ___awtofl (ARG)
         ___flpack
       ___fladd (ARG)
         ___awtofl (ARG)
           ___flpack
         ___flmul (ARG)
           ___awtofl (ARG)
             ___flpack
           ___fldiv (ARG)
             ___flpack
           ___flpack (ARG)
           _frexp (ARG)
         ___flpack (ARG)
         _frexp (ARG)
       ___flmul (ARG)
         ___awtofl (ARG)
           ___flpack
         ___fldiv (ARG)
           ___flpack
         ___flpack (ARG)
         _frexp (ARG)
     ___fltol
       ___fldiv (ARG)
         ___flpack
       _log10 (ARG)
         ___flmul
           ___awtofl (ARG)
             ___flpack
           ___fldiv (ARG)
             ___flpack
           ___flpack (ARG)
           _frexp (ARG)
         _log
           ___awtofl
             ___flpack
           ___fladd
             ___awtofl (ARG)
               ___flpack
             ___flmul (ARG)
               ___awtofl (ARG)
                 ___flpack
               ___fldiv (ARG)
                 ___flpack
               ___flpack (ARG)
               _frexp (ARG)
             ___flpack (ARG)
             _frexp (ARG)
           ___flge
           ___flmul
             ___awtofl (ARG)
               ___flpack
             ___fldiv (ARG)
               ___flpack
             ___flpack (ARG)
             _frexp (ARG)
           _eval_poly
             ___fladd
               ___awtofl (ARG)
                 ___flpack
               ___flmul (ARG)
                 ___awtofl (ARG)
                   ___flpack
                 ___fldiv (ARG)
                   ___flpack
                 ___flpack (ARG)
                 _frexp (ARG)
               ___flpack (ARG)
               _frexp (ARG)
             ___flmul
               ___awtofl (ARG)
                 ___flpack
               ___fldiv (ARG)
                 ___flpack
               ___flpack (ARG)
               _frexp (ARG)
           _frexp
     ___lwtofl
       ___flpack
       _measure_freq (ARG)
         _buffer_init
         _buffer_puts
           _buffer_putch
         _format_number
           ___lwdiv
           ___lwmod
           _buffer_putch
         _lcd_gotoxy
           _lcd_command
             _lcd_send
               _lcd_write4bits
         _print_buffer
           _ser_putch
           _ser_puts
             _ser_putch
         _timer0_read_ps
     _format_double
       ___awtofl
         ___flpack
       ___fldiv
         ___flpack
       ___flge
       ___flmul
         ___awtofl (ARG)
           ___flpack
         ___fldiv (ARG)
           ___flpack
         ___flpack (ARG)
         _frexp (ARG)
       ___flsub
         ___awtofl (ARG)
           ___flpack
         ___fladd (ARG)
           ___awtofl (ARG)
             ___flpack
           ___flmul (ARG)
             ___awtofl (ARG)
               ___flpack
             ___fldiv (ARG)
               ___flpack
             ___flpack (ARG)
             _frexp (ARG)
           ___flpack (ARG)
           _frexp (ARG)
         ___flmul (ARG)
           ___awtofl (ARG)
             ___flpack
           ___fldiv (ARG)
             ___flpack
           ___flpack (ARG)
           _frexp (ARG)
       ___fltol
         ___fldiv (ARG)
           ___flpack
         _log10 (ARG)
           ___flmul
             ___awtofl (ARG)
               ___flpack
             ___fldiv (ARG)
               ___flpack
             ___flpack (ARG)
             _frexp (ARG)
           _log
             ___awtofl
               ___flpack
             ___fladd
               ___awtofl (ARG)
                 ___flpack
               ___flmul (ARG)
                 ___awtofl (ARG)
                   ___flpack
                 ___fldiv (ARG)
                   ___flpack
                 ___flpack (ARG)
                 _frexp (ARG)
               ___flpack (ARG)
               _frexp (ARG)
             ___flge
             ___flmul
               ___awtofl (ARG)
                 ___flpack
               ___fldiv (ARG)
                 ___flpack
               ___flpack (ARG)
               _frexp (ARG)
             _eval_poly
               ___fladd
                 ___awtofl (ARG)
                   ___flpack
                 ___flmul (ARG)
                   ___awtofl (ARG)
                     ___flpack
                   ___fldiv (ARG)
                     ___flpack
                   ___flpack (ARG)
                   _frexp (ARG)
                 ___flpack (ARG)
                 _frexp (ARG)
               ___flmul
                 ___awtofl (ARG)
                   ___flpack
                 ___fldiv (ARG)
                   ___flpack
                 ___flpack (ARG)
                 _frexp (ARG)
             _frexp
       _buffer_putch
       _floor
         ___altofl
           ___flpack
           ___fltol (ARG)
             ___fldiv (ARG)
               ___flpack
             _log10 (ARG)
               ___flmul
                 ___awtofl (ARG)
                   ___flpack
                 ___fldiv (ARG)
                   ___flpack
                 ___flpack (ARG)
                 _frexp (ARG)
               _log
                 ___awtofl
                   ___flpack
                 ___fladd
                   ___awtofl (ARG)
                     ___flpack
                   ___flmul (ARG)
                     ___awtofl (ARG)
                       ___flpack
                     ___fldiv (ARG)
                       ___flpack
                     ___flpack (ARG)
                     _frexp (ARG)
                   ___flpack (ARG)
                   _frexp (ARG)
                 ___flge
                 ___flmul
                   ___awtofl (ARG)
                     ___flpack
                   ___fldiv (ARG)
                     ___flpack
                   ___flpack (ARG)
                   _frexp (ARG)
                 _eval_poly
                   ___fladd
                     ___awtofl (ARG)
                       ___flpack
                     ___flmul (ARG)
                       ___awtofl (ARG)
                         ___flpack
                       ___fldiv (ARG)
                         ___flpack
                       ___flpack (ARG)
                       _frexp (ARG)
                     ___flpack (ARG)
                     _frexp (ARG)
                   ___flmul
                     ___awtofl (ARG)
                       ___flpack
                     ___fldiv (ARG)
                       ___flpack
                     ___flpack (ARG)
                     _frexp (ARG)
                 _frexp
         ___fladd
           ___awtofl (ARG)
             ___flpack
           ___flmul (ARG)
             ___awtofl (ARG)
               ___flpack
             ___fldiv (ARG)
               ___flpack
             ___flpack (ARG)
             _frexp (ARG)
           ___flpack (ARG)
           _frexp (ARG)
         ___fldiv (ARG)
           ___flpack
         ___flge (ARG)
         ___fltol (ARG)
           ___fldiv (ARG)
             ___flpack
           _log10 (ARG)
             ___flmul
               ___awtofl (ARG)
                 ___flpack
               ___fldiv (ARG)
                 ___flpack
               ___flpack (ARG)
               _frexp (ARG)
             _log
               ___awtofl
                 ___flpack
               ___fladd
                 ___awtofl (ARG)
                   ___flpack
                 ___flmul (ARG)
                   ___awtofl (ARG)
                     ___flpack
                   ___fldiv (ARG)
                     ___flpack
                   ___flpack (ARG)
                   _frexp (ARG)
                 ___flpack (ARG)
                 _frexp (ARG)
               ___flge
               ___flmul
                 ___awtofl (ARG)
                   ___flpack
                 ___fldiv (ARG)
                   ___flpack
                 ___flpack (ARG)
                 _frexp (ARG)
               _eval_poly
                 ___fladd
                   ___awtofl (ARG)
                     ___flpack
                   ___flmul (ARG)
                     ___awtofl (ARG)
                       ___flpack
                     ___fldiv (ARG)
                       ___flpack
                     ___flpack (ARG)
                     _frexp (ARG)
                   ___flpack (ARG)
                   _frexp (ARG)
                 ___flmul
                   ___awtofl (ARG)
                     ___flpack
                   ___fldiv (ARG)
                     ___flpack
                   ___flpack (ARG)
                   _frexp (ARG)
               _frexp
         _frexp (ARG)
       _log10
         ___flmul
           ___awtofl (ARG)
             ___flpack
           ___fldiv (ARG)
             ___flpack
           ___flpack (ARG)
           _frexp (ARG)
         _log
           ___awtofl
             ___flpack
           ___fladd
             ___awtofl (ARG)
               ___flpack
             ___flmul (ARG)
               ___awtofl (ARG)
                 ___flpack
               ___fldiv (ARG)
                 ___flpack
               ___flpack (ARG)
               _frexp (ARG)
             ___flpack (ARG)
             _frexp (ARG)
           ___flge
           ___flmul
             ___awtofl (ARG)
               ___flpack
             ___fldiv (ARG)
               ___flpack
             ___flpack (ARG)
             _frexp (ARG)
           _eval_poly
             ___fladd
               ___awtofl (ARG)
                 ___flpack
               ___flmul (ARG)
                 ___awtofl (ARG)
                   ___flpack
                 ___fldiv (ARG)
                   ___flpack
                 ___flpack (ARG)
                 _frexp (ARG)
               ___flpack (ARG)
               _frexp (ARG)
             ___flmul
               ___awtofl (ARG)
                 ___flpack
               ___fldiv (ARG)
                 ___flpack
               ___flpack (ARG)
               _frexp (ARG)
           _frexp
       _pow
         ___flge
         ___flmul
           ___awtofl (ARG)
             ___flpack
           ___fldiv (ARG)
             ___flpack
           ___flpack (ARG)
           _frexp (ARG)
         ___flneg
         ___fltol
           ___fldiv (ARG)
             ___flpack
           _log10 (ARG)
             ___flmul
               ___awtofl (ARG)
                 ___flpack
               ___fldiv (ARG)
                 ___flpack
               ___flpack (ARG)
               _frexp (ARG)
             _log
               ___awtofl
                 ___flpack
               ___fladd
                 ___awtofl (ARG)
                   ___flpack
                 ___flmul (ARG)
                   ___awtofl (ARG)
                     ___flpack
                   ___fldiv (ARG)
                     ___flpack
                   ___flpack (ARG)
                   _frexp (ARG)
                 ___flpack (ARG)
                 _frexp (ARG)
               ___flge
               ___flmul
                 ___awtofl (ARG)
                   ___flpack
                 ___fldiv (ARG)
                   ___flpack
                 ___flpack (ARG)
                 _frexp (ARG)
               _eval_poly
                 ___fladd
                   ___awtofl (ARG)
                     ___flpack
                   ___flmul (ARG)
                     ___awtofl (ARG)
                       ___flpack
                     ___fldiv (ARG)
                       ___flpack
                     ___flpack (ARG)
                     _frexp (ARG)
                   ___flpack (ARG)
                   _frexp (ARG)
                 ___flmul
                   ___awtofl (ARG)
                     ___flpack
                   ___fldiv (ARG)
                     ___flpack
                   ___flpack (ARG)
                   _frexp (ARG)
               _frexp
         ___lltofl
           ___flpack
         _exp
           ___awtofl
             ___flpack
           ___fldiv
             ___flpack
           ___flge
           ___flmul
             ___awtofl (ARG)
               ___flpack
             ___fldiv (ARG)
               ___flpack
             ___flpack (ARG)
             _frexp (ARG)
           ___flneg
           ___flsub
             ___awtofl (ARG)
               ___flpack
             ___fladd (ARG)
               ___awtofl (ARG)
                 ___flpack
               ___flmul (ARG)
                 ___awtofl (ARG)
                   ___flpack
                 ___fldiv (ARG)
                   ___flpack
                 ___flpack (ARG)
                 _frexp (ARG)
               ___flpack (ARG)
               _frexp (ARG)
             ___flmul (ARG)
               ___awtofl (ARG)
                 ___flpack
               ___fldiv (ARG)
                 ___flpack
               ___flpack (ARG)
               _frexp (ARG)
           ___fltol
             ___fldiv (ARG)
               ___flpack
             _log10 (ARG)
               ___flmul
                 ___awtofl (ARG)
                   ___flpack
                 ___fldiv (ARG)
                   ___flpack
                 ___flpack (ARG)
                 _frexp (ARG)
               _log
                 ___awtofl
                   ___flpack
                 ___fladd
                   ___awtofl (ARG)
                     ___flpack
                   ___flmul (ARG)
                     ___awtofl (ARG)
                       ___flpack
                     ___fldiv (ARG)
                       ___flpack
                     ___flpack (ARG)
                     _frexp (ARG)
                   ___flpack (ARG)
                   _frexp (ARG)
                 ___flge
                 ___flmul
                   ___awtofl (ARG)
                     ___flpack
                   ___fldiv (ARG)
                     ___flpack
                   ___flpack (ARG)
                   _frexp (ARG)
                 _eval_poly
                   ___fladd
                     ___awtofl (ARG)
                       ___flpack
                     ___flmul (ARG)
                       ___awtofl (ARG)
                         ___flpack
                       ___fldiv (ARG)
                         ___flpack
                       ___flpack (ARG)
                       _frexp (ARG)
                     ___flpack (ARG)
                     _frexp (ARG)
                   ___flmul
                     ___awtofl (ARG)
                       ___flpack
                     ___fldiv (ARG)
                       ___flpack
                     ___flpack (ARG)
                     _frexp (ARG)
                 _frexp
           _eval_poly
             ___fladd
               ___awtofl (ARG)
                 ___flpack
               ___flmul (ARG)
                 ___awtofl (ARG)
                   ___flpack
                 ___fldiv (ARG)
                   ___flpack
                 ___flpack (ARG)
                 _frexp (ARG)
               ___flpack (ARG)
               _frexp (ARG)
             ___flmul
               ___awtofl (ARG)
                 ___flpack
               ___fldiv (ARG)
                 ___flpack
               ___flpack (ARG)
               _frexp (ARG)
           _floor
             ___altofl
               ___flpack
               ___fltol (ARG)
                 ___fldiv (ARG)
                   ___flpack
                 _log10 (ARG)
                   ___flmul
                     ___awtofl (ARG)
                       ___flpack
                     ___fldiv (ARG)
                       ___flpack
                     ___flpack (ARG)
                     _frexp (ARG)
                   _log
                     ___awtofl
                       ___flpack
                     ___fladd
                       ___awtofl (ARG)
                         ___flpack
                       ___flmul (ARG)
                         ___awtofl (ARG)
                           ___flpack
                         ___fldiv (ARG)
                           ___flpack
                         ___flpack (ARG)
                         _frexp (ARG)
                       ___flpack (ARG)
                       _frexp (ARG)
                     ___flge
                     ___flmul
                       ___awtofl (ARG)
                         ___flpack
                       ___fldiv (ARG)
                         ___flpack
                       ___flpack (ARG)
                       _frexp (ARG)
                     _eval_poly
                       ___fladd
                         ___awtofl (ARG)
                           ___flpack
                         ___flmul (ARG)
                           ___awtofl (ARG)
                             ___flpack
                           ___fldiv (ARG)
                             ___flpack
                           ___flpack (ARG)
                           _frexp (ARG)
                         ___flpack (ARG)
                         _frexp (ARG)
                       ___flmul
                         ___awtofl (ARG)
                           ___flpack
                         ___fldiv (ARG)
                           ___flpack
                         ___flpack (ARG)
                         _frexp (ARG)
                     _frexp
             ___fladd
               ___awtofl (ARG)
                 ___flpack
               ___flmul (ARG)
                 ___awtofl (ARG)
                   ___flpack
                 ___fldiv (ARG)
                   ___flpack
                 ___flpack (ARG)
                 _frexp (ARG)
               ___flpack (ARG)
               _frexp (ARG)
             ___fldiv (ARG)
               ___flpack
             ___flge (ARG)
             ___fltol (ARG)
               ___fldiv (ARG)
                 ___flpack
               _log10 (ARG)
                 ___flmul
                   ___awtofl (ARG)
                     ___flpack
                   ___fldiv (ARG)
                     ___flpack
                   ___flpack (ARG)
                   _frexp (ARG)
                 _log
                   ___awtofl
                     ___flpack
                   ___fladd
                     ___awtofl (ARG)
                       ___flpack
                     ___flmul (ARG)
                       ___awtofl (ARG)
                         ___flpack
                       ___fldiv (ARG)
                         ___flpack
                       ___flpack (ARG)
                       _frexp (ARG)
                     ___flpack (ARG)
                     _frexp (ARG)
                   ___flge
                   ___flmul
                     ___awtofl (ARG)
                       ___flpack
                     ___fldiv (ARG)
                       ___flpack
                     ___flpack (ARG)
                     _frexp (ARG)
                   _eval_poly
                     ___fladd
                       ___awtofl (ARG)
                         ___flpack
                       ___flmul (ARG)
                         ___awtofl (ARG)
                           ___flpack
                         ___fldiv (ARG)
                           ___flpack
                         ___flpack (ARG)
                         _frexp (ARG)
                       ___flpack (ARG)
                       _frexp (ARG)
                     ___flmul
                       ___awtofl (ARG)
                         ___flpack
                       ___fldiv (ARG)
                         ___flpack
                       ___flpack (ARG)
                       _frexp (ARG)
                   _frexp
             _frexp (ARG)
           _ldexp
             ___flge
             ___flneg
             _eval_poly (ARG)
               ___fladd
                 ___awtofl (ARG)
                   ___flpack
                 ___flmul (ARG)
                   ___awtofl (ARG)
                     ___flpack
                   ___fldiv (ARG)
                     ___flpack
                   ___flpack (ARG)
                   _frexp (ARG)
                 ___flpack (ARG)
                 _frexp (ARG)
               ___flmul
                 ___awtofl (ARG)
                   ___flpack
                 ___fldiv (ARG)
                   ___flpack
                 ___flpack (ARG)
                 _frexp (ARG)
           _log (ARG)
             ___awtofl
               ___flpack
             ___fladd
               ___awtofl (ARG)
                 ___flpack
               ___flmul (ARG)
                 ___awtofl (ARG)
                   ___flpack
                 ___fldiv (ARG)
                   ___flpack
                 ___flpack (ARG)
                 _frexp (ARG)
               ___flpack (ARG)
               _frexp (ARG)
             ___flge
             ___flmul
               ___awtofl (ARG)
                 ___flpack
               ___fldiv (ARG)
                 ___flpack
               ___flpack (ARG)
               _frexp (ARG)
             _eval_poly
               ___fladd
                 ___awtofl (ARG)
                   ___flpack
                 ___flmul (ARG)
                   ___awtofl (ARG)
                     ___flpack
                   ___fldiv (ARG)
                     ___flpack
                   ___flpack (ARG)
                   _frexp (ARG)
                 ___flpack (ARG)
                 _frexp (ARG)
               ___flmul
                 ___awtofl (ARG)
                   ___flpack
                 ___fldiv (ARG)
                   ___flpack
                 ___flpack (ARG)
                 _frexp (ARG)
             _frexp
         _log
           ___awtofl
             ___flpack
           ___fladd
             ___awtofl (ARG)
               ___flpack
             ___flmul (ARG)
               ___awtofl (ARG)
                 ___flpack
               ___fldiv (ARG)
                 ___flpack
               ___flpack (ARG)
               _frexp (ARG)
             ___flpack (ARG)
             _frexp (ARG)
           ___flge
           ___flmul
             ___awtofl (ARG)
               ___flpack
             ___fldiv (ARG)
               ___flpack
             ___flpack (ARG)
             _frexp (ARG)
           _eval_poly
             ___fladd
               ___awtofl (ARG)
                 ___flpack
               ___flmul (ARG)
                 ___awtofl (ARG)
                   ___flpack
                 ___fldiv (ARG)
                   ___flpack
                 ___flpack (ARG)
                 _frexp (ARG)
               ___flpack (ARG)
               _frexp (ARG)
             ___flmul
               ___awtofl (ARG)
                 ___flpack
               ___fldiv (ARG)
                 ___flpack
               ___flpack (ARG)
               _frexp (ARG)
           _frexp
     _format_xint32
       _buffer_putch
       _format_number
         ___lwdiv
         ___lwmod
         _buffer_putch
     _lcd_gotoxy
       _lcd_command
         _lcd_send
           _lcd_write4bits
     _measure_freq
       _buffer_init
       _buffer_puts
         _buffer_putch
       _format_number
         ___lwdiv
         ___lwmod
         _buffer_putch
       _lcd_gotoxy
         _lcd_command
           _lcd_send
             _lcd_write4bits
       _print_buffer
         _ser_putch
         _ser_puts
           _ser_putch
       _timer0_read_ps
     _print_reading
       ___lwdiv
       ___lwmod
       _format_number
         ___lwdiv
         ___lwmod
         _buffer_putch
       _lcd_gotoxy
         _lcd_command
           _lcd_send
             _lcd_write4bits
       _lcd_puts
         _lcd_send
           _lcd_write4bits
     _print_unit
       _lcd_gotoxy
         _lcd_command
           _lcd_send
             _lcd_write4bits
       _ser_puts
         _ser_putch
     _put_str
       _output_putch
         _lcd_send
           _lcd_write4bits
         _ser_putch
     _ser_putch
     _ser_puts
       _ser_putch
   _measure_inductance
     ___fldiv
       ___flpack
     ___flge
     ___flmul
       ___awtofl (ARG)
         ___flpack
       ___fldiv (ARG)
         ___flpack
       ___flpack (ARG)
       _frexp (ARG)
     ___flsub
       ___awtofl (ARG)
         ___flpack
       ___fladd (ARG)
         ___awtofl (ARG)
           ___flpack
         ___flmul (ARG)
           ___awtofl (ARG)
             ___flpack
           ___fldiv (ARG)
             ___flpack
           ___flpack (ARG)
           _frexp (ARG)
         ___flpack (ARG)
         _frexp (ARG)
       ___flmul (ARG)
         ___awtofl (ARG)
           ___flpack
         ___fldiv (ARG)
           ___flpack
         ___flpack (ARG)
         _frexp (ARG)
     ___fltol
       ___fldiv (ARG)
         ___flpack
       _log10 (ARG)
         ___flmul
           ___awtofl (ARG)
             ___flpack
           ___fldiv (ARG)
             ___flpack
           ___flpack (ARG)
           _frexp (ARG)
         _log
           ___awtofl
             ___flpack
           ___fladd
             ___awtofl (ARG)
               ___flpack
             ___flmul (ARG)
               ___awtofl (ARG)
                 ___flpack
               ___fldiv (ARG)
                 ___flpack
               ___flpack (ARG)
               _frexp (ARG)
             ___flpack (ARG)
             _frexp (ARG)
           ___flge
           ___flmul
             ___awtofl (ARG)
               ___flpack
             ___fldiv (ARG)
               ___flpack
             ___flpack (ARG)
             _frexp (ARG)
           _eval_poly
             ___fladd
               ___awtofl (ARG)
                 ___flpack
               ___flmul (ARG)
                 ___awtofl (ARG)
                   ___flpack
                 ___fldiv (ARG)
                   ___flpack
                 ___flpack (ARG)
                 _frexp (ARG)
               ___flpack (ARG)
               _frexp (ARG)
             ___flmul
               ___awtofl (ARG)
                 ___flpack
               ___fldiv (ARG)
                 ___flpack
               ___flpack (ARG)
               _frexp (ARG)
           _frexp
     ___lwtofl
       ___flpack
       _measure_freq (ARG)
         _buffer_init
         _buffer_puts
           _buffer_putch
         _format_number
           ___lwdiv
           ___lwmod
           _buffer_putch
         _lcd_gotoxy
           _lcd_command
             _lcd_send
               _lcd_write4bits
         _print_buffer
           _ser_putch
           _ser_puts
             _ser_putch
         _timer0_read_ps
     _lcd_gotoxy
       _lcd_command
         _lcd_send
           _lcd_write4bits
     _measure_freq
       _buffer_init
       _buffer_puts
         _buffer_putch
       _format_number
         ___lwdiv
         ___lwmod
         _buffer_putch
       _lcd_gotoxy
         _lcd_command
           _lcd_send
             _lcd_write4bits
       _print_buffer
         _ser_putch
         _ser_puts
           _ser_putch
       _timer0_read_ps
     _print_reading
       ___lwdiv
       ___lwmod
       _format_number
         ___lwdiv
         ___lwmod
         _buffer_putch
       _lcd_gotoxy
         _lcd_command
           _lcd_send
             _lcd_write4bits
       _lcd_puts
         _lcd_send
           _lcd_write4bits
     _print_unit
       _lcd_gotoxy
         _lcd_command
           _lcd_send
             _lcd_write4bits
       _ser_puts
         _ser_putch
     _put_str
       _output_putch
         _lcd_send
           _lcd_write4bits
         _ser_putch
   _print_indicator
     _lcd_gotoxy
       _lcd_command
         _lcd_send
           _lcd_write4bits
     _lcd_puts
       _lcd_send
         _lcd_write4bits
   _ser_init
   _ser_puts
     _ser_putch
   _timer0_init
   _timer2_init

 _global_int (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60     17      54       8       87.5%
BITBANK3            60      0       0       7        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60     13      33       9       53.1%
BITBANK2            60      0       0      12        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50     4F      4F       6       98.8%
BITBANK1            50      0       0       5        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               4F     4F      4F       4      100.0%
BITBANK0            4F      0       0       3        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      6       A       1       71.4%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0     12F      11        0.0%
ABS                  0      0     12F      10        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V1.34 build -361300703 
Symbol Table                                                                                   Wed Sep 18 15:33:06 2019

                ___altofl@sign 00C0                   ___fldiv@cntr 003B                              pc 0002  
                 ___fldiv@sign 003D                             _F1 01BC                             _F2 0190  
                           _F3 0194                             fsr 0004                   ___flpack@arg 0021  
                 ___flpack@exp 0025                            l303 0FF4                            l269 0123  
                          l820 17D5                            l808 17A7                            l844 094B  
                          l869 0F6A                            l893 05EC                            _GIE 005F  
                          _RC7 003F                   __CFG_CPD$OFF 0000                 lcd_begin@lines 0027  
                          _RX9 00C6                            _TX9 04C6                            _exp 0409  
                          _log 0670                            _pow 1EAB                            fsr0 0004  
                          indf 0000                   __CFG_FOSC$HS 0000             timer0_read_ps@prev 0025  
                 ___flmul@cntr 004F                   ___flmul@sign 0050                   __CFG_LVP$OFF 0000  
       __end_of_lcd_write4bits 03EC                  ___flpack@sign 0026                   ___fltol@exp1 00BB  
                         l4004 1641                           l4104 1423                           l4008 1655  
                         l4130 069C                           l4026 1665                           l4202 0440  
                         l4044 1722                           l4060 1D65                           l4052 1D4B  
                         l4212 04A9                           l4150 1E44                           l4302 03ED  
                         l4126 0690                           l4206 0465                           l4304 0400  
                         l4312 0311                           l4232 058A                           l4162 1E5B  
                         l4242 0FA1                           l4330 0323                           l4082 1DBE  
                         l4250 1E61                           l3700 17AC                           l4252 173E  
                         l4244 1E60                           l4500 1C47                           l3710 17D3  
                         l3702 17B2                           l4174 1E93                           l4182 1EA6  
                         l4262 1747                           l4094 08B4                           l3712 17C9  
                         l3704 17B7                           l4280 1781                           l4328 030A  
                         l4408 0FAF                           l4192 0417                           l4360 1F3E  
                         l3706 17C4                           l4282 178C                           l4098 1423  
                         l4610 0387                           l3802 0967                           l4354 1EDE  
                         l4426 15F2                           l3716 17DA                           l3900 076F  
                         l4348 1ED0                           l4428 1498                           l4532 1C77  
                         l4516 1C5F                           l4508 1C52                           l4278 177D  
                         l3822 0F4D                           l3814 098C                           l4366 1F66  
                         l4526 1C71                           l4384 02E2                           l3752 08F5  
                         l3840 0EC0                           l4618 03AC                           l4562 0025  
                         l3770 0912                           l3738 07AC                           l3930 16D8  
                         l3914 16B5                           l4386 1C14                           l3780 092D  
                         l3748 08EC                           l3836 0EAC                           l3940 16E4  
                         l3916 16BA                           l4740 1172                           l3950 0FF5  
                         l3790 0947                           l3782 0931                           l3758 0904  
                         l3870 0EF6                           l3862 0EE8                           l3942 16EE  
                         l3934 16E0                           l4902 00F5                           l4592 034E  
                         l3776 0922                           l4488 1DEC                           l4912 011E  
                         l3954 1441                           l4682 0206                           l3778 0928  
                         l3874 0F0C                           l3858 0ED2                           l4834 0DF5  
                         l4842 0E4F                           l3796 0959                           l3788 0941  
                         l4772 139A                           l4844 0E52                           l4908 0115  
                         ?_exp 00CB                           ?_log 00A4                           l4838 0E23  
                         l3976 05F2                           l4768 136F                           l4776 13C4  
                         l3986 0666                           l3996 1706                           l4798 0A1D  
                         l4894 00E1                           ?_pow 00DA                           STR_2 1903  
                         STR_3 1909                           STR_4 1906                           STR_5 18F7  
                         STR_6 1900                           STR_7 18FA                           STR_8 18FD  
                         STR_9 18F4                           _BRGH 04C2                           _CREN 00C4  
                         _CCal 01D7                           u4200 1BF5                           u4055 1F36  
                         _PIE1 008C                           u4190 1BF4                           u4350 00E7  
                         u4407 0352                           u4360 00E8                           u4417 0367  
                         u3625 1678                           u3465 16C3                           u4507 024B  
                         u4427 0374                           _PEIE 005E                           u4517 0256  
                         u4437 037F                           u4607 03E8                           u3735 160F  
                         u4527 0261                           u4447 0392                           u3825 1E99  
                         u4537 026C                           u4457 03A2                           u4547 0277  
                         u4467 03C3                           u3675 1D6E                           u3915 0583  
                         _RCIF 0065                           u4557 0282                           u4477 0229  
                         u3870 0482                           u4567 028D                           u4487 0235  
                         u3880 0483                           u3785 1E4D                           u4577 0298  
                         u4497 0240                           _PIR1 000C                           u4587 02D5  
                         u4597 03E0                           _TMR0 0001                           _TMR2 0011  
                         _SPEN 00C7                           _TXIE 0464                           _TXEN 04C5  
                         _TXIF 0064                           _SYNC 04C4                           _bres 01DB  
                         _main 0038                           _mode 01E3                           btemp 007E  
                         exp@x 00CB                           log@x 00A4          __size_of_output_putch 000A  
                         ltemp 007E                           pow@x 00DA                           pow@y 00DE  
   __end_of_measure_inductance 0E98                           start 000E                           ttemp 007E  
                         wtemp 007E            timer0_read_ps@count 0026                 ??_buffer_putch 0021  
            _format_number$158 004D                _timer0_init$114 0021                _timer0_init$115 0023  
              _timer0_init$116 0025                _timer0_init$117 0027                   buffer_puts@x 0024  
          lcd_write4bits@value 0075                   lcd_send@mode 0021                          ??_exp 0076  
                        ??_log 0076                          ??_pow 0076                  ___fltol@sign1 00BA  
              __end_of___fladd 09A4                          ?_main 0070                __end_of___fldiv 16A6  
              __end_of___flneg 07DD                          STR_10 18C3                          STR_11 18F0  
                        STR_12 18C5                          STR_13 18F4                          STR_21 18EB  
                        STR_30 18C9                          STR_14 18B0                          STR_31 18CF  
                        STR_23 189A                          STR_15 185E                          STR_24 18F4  
                        STR_32 18D5                          STR_16 186E                          STR_17 18F4  
                        STR_33 18BA                          STR_25 187E                  __CFG_WDTE$OFF 0000  
                        STR_34 18F4                          STR_26 18F4                          STR_18 18C2  
                        STR_35 18E1                          STR_27 18DB                          STR_36 18F4  
                        STR_28 18A6                          STR_29 18E6                          STR_37 188D  
              __end_of___flmul 0F30                __end_of___flsub 173E                __end_of___fltol 16FD  
                        _CMCON 009C                          _T2CON 0012                __end_of___lwdiv 1E60  
              __end_of___lwmod 1EAB                          i1l259 1D37                          _RCREG 001A  
             lcd_begin@dotsize 0024                          _SPBRG 0099                          _PORTB 0006  
                        _PORTC 0007                          _TRISA 0085                          _TRISB 0086  
                        _TRISC 0087                          _TXREG 0019                  ___awtofl@sign 0074  
                 main@new_mode 01D6                          _log10 1C7D                          _blink 01A4  
                        _floor 05B2                          _ldexp 1D40                          _frexp 075E  
                 _output_putch 0FE4                ?_lcd_write4bits 0070                          _msecs 0198  
               __CFG_BOREN$OFF 0000                          pclath 000A                          ltemp0 007E  
                        ltemp1 0082                          ltemp2 0086                          ltemp3 0080  
                        pow@yi 00EB                format_number@di 004F                          ttemp0 007E  
                        ttemp1 0081                          ttemp2 0084                          ttemp3 0087  
                        ttemp4 007F                          status 0003                __end_of_put_str 0FE4  
                        wtemp0 007E                          wtemp1 0080                          wtemp2 0082  
                        wtemp3 0084                          wtemp4 0086                          wtemp5 0088  
                        wtemp6 007F                ??_print_reading 0076                  print_buffer@i 0075  
                  exp@exponent 00D7                    ldexp@newexp 00A8                __initialization 07DD  
                  log@exponent 00A8                   __end_of_main 013C               format_double@num 01C0  
                lcd_gotoxy@col 0025                  lcd_gotoxy@row 0024                  ?_measure_freq 0051  
       __size_of_format_double 0185                         ??_main 0076                  lcd_send@value 0022  
          format_double@weight 01CC         __size_of_format_number 0060         __size_of_format_xint32 001E  
          lcd_init@fourbitmode 0021                         ?_log10 00AA                         ?_floor 00C1  
                       ?_ldexp 00A4                         ?_frexp 0021               __end_of___altofl 07D4  
             __end_of___flpack 17ED               __end_of___awtofl 171A               __end_of___lltofl 2000  
                       i1l3600 1D0A                         i1l3612 1D1F                         i1l3598 1D07  
                       _INTCON 000B               __end_of___lwtofl 1800                         u287_20 1CE4  
                       u288_20 1CE5                         _TRISC6 043E               __end_of_lcd_init 0038  
         __size_of_lcd_command 0007               __end_of_lcd_send 1000                         ___flge 0F30  
             __end_of_lcd_puts 1E87                      ??___fladd 0059                      ??___fldiv 0033  
                    ??___flneg 0074                      ??___flmul 0046                      ??___flsub 0076  
                    ??___fltol 00B6                   ?_timer0_init 0070           __size_of_buffer_init 0007  
               ??_measure_freq 0053                      ??___lwdiv 0074                   ?_timer2_init 0070  
                    ??___lwmod 0074                         _buffer 01AB           __size_of_buffer_puts 0020  
                       log10@x 00AA                         _rxfifo 0110                         _txfifo 0120  
                       _rxiptr 0077                         _rxoptr 01A9                         floor@i 00C5  
                       _txiptr 0078                         floor@x 00C1                         _txoptr 0079  
             __end_of_ser_init 1C14               __end_of_ser_puts 1440             timer2_init@ps_mode 0023  
                       saved_w 007E           __end_of_buffer_putch 162D               format_number@buf 002C  
             format_number@pad 002B        _measure_inductance$1013 00C4        _measure_inductance$1014 00D5  
      _measure_inductance$1015 00D9        _measure_inductance$1016 00DD        _measure_inductance$1017 00C8  
      _measure_inductance$1018 00CC        _measure_inductance$1019 00D0                      ??_put_str 0026  
                   ___fladd@f1 0051                     ___fladd@f2 0055                     ___flge@ff1 0021  
                   ___flge@ff2 0025               __end_ofexp@coeff 183A                  _format_double 1474  
             __end_oflog@coeff 185E                     ___altofl@c 00BC                     ___fldiv@f1 002F  
                   ___fldiv@f2 002B                     ___fldiv@f3 0037        __end_of__initialization 07FC  
                   ___flneg@f1 0021                  _format_number 173E                  _format_xint32 1456  
                   ___flmul@f1 003E                     ___flmul@f2 0042                   eval_poly@res 00A0  
                   ___flsub@f1 0064                     ___flsub@f2 0060                     ___fltol@f1 00B2  
                   ___awtofl@c 002B         measure_capacitance@Cin 013F   __size_of_measure_capacitance 0417  
       measure_capacitance@var 013D          lcd_gotoxy@row_offsets 0026                 __pcstackCOMMON 0070  
           __size_of_calibrate 00E4                   __pidataBANK3 0000                     ___lltofl@c 002B  
           __size_of_delay10ms 0001                  __end_of_log10 1CBE                  __end_of_floor 0670  
                __end_of_ldexp 1DD7                  __end_of_frexp 079C                     ___lwtofl@c 0057  
               buffer_putch@ch 0074             __size_of_lcd_begin 0092             __size_of_lcd_clear 0010  
                      ??_log10 0076                        ??_floor 0076                        ??_ldexp 00AA  
                      ??_frexp 0074                     _log10$1020 00AE                 ?_format_double 01C0  
                   __pbssBANK2 0110                     __pbssBANK3 0190             __size_of_eval_poly 00BF  
               ?_format_number 0028                 ?_format_xint32 0051                 print_unit@unit 0070  
     __size_of_print_indicator 001A                     __pmaintext 0038                        ?___flge 0021  
                   __pintentry 0004                      ?___altofl 00BC        __size_of_timer0_read_ps 003A  
                    ?___flpack 0021                      ?___awtofl 002B                      ?___lltofl 002B  
           _measure_inductance 09A4             __size_of_ser_putch 0016                      ?___lwtofl 0057  
             ??_lcd_write4bits 0074                     _lcd_gotoxy 0F7C            ?_measure_inductance 0070  
            __end_of_calibrate 0220                      ?_lcd_init 0070                      ?_lcd_send 0021  
            __end_of_delay10ms 02CB                      ?_lcd_puts 0023                     __stringtab 1800  
         __end_of_measure_freq 02CA                     _global_int 1CBE                     calibrate@i 005B  
                    ?_ser_init 0070           ??_measure_inductance 0076              __end_of_lcd_begin 03CE  
                    ?_ser_puts 0021              __end_of_lcd_clear 02DB                __size_of___flge 004C  
                      ___fladd 08C5                        ___fldiv 162D                        ___flneg 07D4  
                      ___flmul 0E98                        ___flsub 171A                        ___fltol 16A6  
                      ___lwdiv 1E36                        ___lwmod 1E87                     ??___altofl 0076  
                   ??___flpack 0027                        _exp$755 00D3                     ??___awtofl 0074  
            __end_of_eval_poly 08C5           __size_of_timer0_init 0040                     ??___lltofl 0074  
                      __ptext1 1BE3                        __ptext2 1C3D                        __ptext3 1BFA  
                      __ptext4 1DD7                        __ptext5 09A4                        __ptext6 100C  
                      __ptext7 1C14                        __ptext8 1DF1                        __ptext9 1E60  
         __size_of_timer2_init 0017          __size_of_buffer_putch 0034                     ??___lwtofl 0076  
                 __size_of_exp 01A9                   __size_of_log 00EE                   __size_of_pow 013E  
                      _seconds 019C                        _ser_tmp 01AA                ??_format_double 0076  
                      _put_str 0FAD                        clrloop0 1005                     ??_lcd_init 0074  
                   ??_lcd_send 0076                     ??_lcd_puts 0076           end_of_initialization 07FC  
              ??_format_number 0075                ??_format_xint32 0076                        exp@sign 00D9  
                    _LCD_lines 01A7                   _lcd_init$321 0022                 lcd_puts@string 0023  
            __end_of_ser_putch 1456                        pow@sign 00EA  measure_inductance@denominator 00C0  
        __end_of_print_reading 1E36                     ??_ser_init 0074                     ??_ser_puts 0075  
                 _buffer_putch 15F9              format_number@base 002A                   __pstringtext 1800  
            ??_print_indicator 0076                     _print_unit 1C14                  ?_print_buffer 0070  
          _measure_capacitance 100C                    ?_lcd_gotoxy 0024                    ___fldiv@exp 003C  
                  ?_global_int 0070                    ___flmul@exp 004A                  ??_lcd_command 0076  
                ??_buffer_init 0074           ?_measure_capacitance 0070                  ??_buffer_puts 0075  
      measure_capacitance@unit 013C                 format_double@m 01D2         measure_inductance@unit 00D4  
               __end_of___flge 0F7C                 _timer0_read_ps 0302                lcd_gotoxy@F1148 01DF  
                   floor@expon 00C9                 ??_print_buffer 0075                 format_number@i 0050  
               format_number@n 0028                 format_xint32@x 0051            start_initialization 07DD  
                   eval_poly@d 0064                     eval_poly@n 0066                     eval_poly@x 0060  
        __size_of_measure_freq 00AA                     ldexp@value 00A4                    __end_of_exp 05B2  
                  __end_of_log 075E                    __end_of_pow 1FE9                   _LCD_function 0076  
           format_double@digit 01D0                     frexp@value 0021          ??_measure_capacitance 0076  
       __end_of_timer0_read_ps 033C                       ??___flge 0029            __size_of_lcd_gotoxy 0031  
          __end_of_lcd_command 03D5                    __pdataBANK3 01DF                   _measure_freq 0220  
          __end_of_buffer_init 02E2            __end_of_buffer_puts 0302            __size_of_global_int 0082  
     print_reading@measurement 0051              __size_of___altofl 0038              __size_of___flpack 004F  
            __size_of___awtofl 001D                    ?_print_unit 0070              __size_of___lltofl 0017  
                  __pbssCOMMON 0076                      ___latbits 0002              __size_of___lwtofl 0013  
                __pcstackBANK0 0021                  __pcstackBANK1 00A0                  __pcstackBANK2 0130  
                __pcstackBANK3 01C0                  ?_output_putch 0070              measure_freq@count 0055  
             lcd_command@value 0023              __size_of_lcd_init 0020              __size_of_lcd_send 0012  
                    _calibrate 013C              __size_of_lcd_puts 0027                      _delay10ms 02CA  
                    __pnvBANK3 01D7               ___lwdiv@dividend 0023                ?_timer0_read_ps 0074  
                     ?___fladd 0051                       ?___fldiv 002B                       ?___flneg 0021  
                     ?___flmul 003E                       ?___flsub 0060                       ?___fltol 00B2  
            __size_of_ser_init 001A                       ?___lwdiv 0021                       ?___lwmod 0021  
            __size_of_ser_puts 001D                      _lcd_begin 033C                      _lcd_clear 02CB  
                    _ldexp$661 00AC                      _eval_poly 0806                  output_putch@c 0023  
               ??_output_putch 0076               ___lwdiv@quotient 0026                 __size_of_log10 0041  
                     ?_put_str 0024                 __size_of_floor 00BE                 __size_of_ldexp 0097  
               __size_of_frexp 003E              interrupt_function 0004                     ?_calibrate 0070  
                   ser_putch@c 0074                     ?_delay10ms 0070                       _LCD_ctrl 01A6  
                     _LCD_mode 01A8                      clear_ram0 1004                _print_indicator 1DD7  
                  _lcd_command 03CE           __end_of_print_buffer 0409            __size_of_print_unit 0029  
                  _buffer_init 02DB                      _ser_putch 1440                    _buffer_puts 02E2  
  __size_of_measure_inductance 04F4                  ??_timer0_init 0074                  ??_timer2_init 0074  
                   ?_lcd_begin 0024                     ?_lcd_clear 0070                    __stringbase 1812  
                   ?_eval_poly 0060                      lcd_puts@i 0025                   ??_lcd_gotoxy 0076  
        measure_inductance@Lin 00E3          measure_inductance@var 00E1          __end_of_format_double 15F9  
                 ??_global_int 0070           format_number@padchar 004C        __size_of_lcd_write4bits 0017  
        __end_of_format_number 179E          __end_of_format_xint32 1474                      frexp@eptr 0025  
                   ?_ser_putch 0070             __end_of_lcd_gotoxy 0FAD               __size_of___fladd 00DF  
             __size_of___fldiv 0079               __size_of___flneg 0009               __size_of___flmul 0098  
             __size_of___flsub 0024               __size_of___fltol 0057                       ___altofl 079C  
                     ___flpack 179E               __size_of___lwdiv 002A               __size_of___lwmod 0024  
                     ___awtofl 16FD             __end_of__stringtab 1812                       ___lltofl 1FE9  
                timer2_init@ps 0022                       ___lwtofl 17ED             __end_of_global_int 1D40  
          __end_of_timer0_init 1C7D                       _exp$1023 00CF            __end_of_timer2_init 1BFA  
                     _main$257 01D4                ___lwdiv@divisor 0021                ___lwdiv@counter 0025  
       __size_of_print_reading 0045           timer0_init@prescaler 0029                       __ptext10 1456  
                     __ptext11 1474                       __ptext20 162D                       __ptext12 1EAB  
                     __ptext21 1FE9                       __ptext13 0409                       __ptext30 0018  
                     __ptext22 1C7D                       __ptext14 1D40                       __ptext31 033C  
                     __ptext23 0670                       __ptext15 07D4                       __ptext40 0F7C  
                     __ptext32 013C                       __ptext24 075E                       __ptext16 05B2  
                     __ptext41 173E                       __ptext33 0FAD                       __ptext25 0806  
                     __ptext17 16A6                       __ptext50 03D5                       __ptext42 1E87  
                     __ptext34 0FE4                       __ptext26 0E98                       __ptext18 079C  
                     __ptext51 02CA                       __ptext43 1E36                       __ptext35 0220  
                     __ptext27 08C5                       __ptext19 171A                       __ptext52 17ED  
                     __ptext44 02E2                       __ptext36 0302                       __ptext28 0F30  
                     __ptext53 179E                       __ptext45 15F9                       __ptext37 03EC  
                     __ptext29 16FD                       __ptext54 1CBE                       __ptext46 02DB  
                     __ptext38 1423                       __ptext47 02CB                       __ptext39 1440  
                     __ptext48 03CE                       __ptext49 0FEE                       _lcd_init 0018  
                     _lcd_send 0FEE                       _pow$1021 00E2                       _pow$1022 00E6  
      __end_of_print_indicator 1DF1                       _lcd_puts 1E60               __size_of_put_str 0037  
                  ??_calibrate 0076                  __size_of_main 0104                    ??_delay10ms 0074  
                    ser_puts@s 0021                       _msecpart 01DD                       _ser_init 1BFA  
                     _ser_puts 1423                       _timer1of 01A0           __end_of_output_putch 0FEE  
                  ??_lcd_begin 0025                    ??_lcd_clear 0024                       exp@coeff 1812  
        ___flmul@f3_as_product 004B                       log@coeff 183A    measure_inductance@numerator 00BC  
                 ??_print_unit 002A                    ??_eval_poly 0068             _print_reading$1004 0053  
           _print_reading$1005 0055                       intlevel1 0000    __end_of_measure_capacitance 1423  
        __size_of_print_buffer 001D               ___lwmod@dividend 0023               ??_timer0_read_ps 0021  
                    stringcode 180A                    ??_ser_putch 0074             __end_of_print_unit 1C3D  
                _print_reading 1DF1           delay10ms@period_10ms 0070                    _timer0_init 1C3D  
                  _timer2_init 1BE3             _format_double$1008 01C4             _format_double$1009 01C8  
     _measure_capacitance$1010 0130       _measure_capacitance$1011 0134       _measure_capacitance$1012 0138  
                     put_str@i 0029                       put_str@s 0024                     _OPTION_REG 0081  
           timer0_init@ps_mode 002A                ___lwmod@divisor 0021                ___lwmod@counter 0074  
                 _print_buffer 03EC                       stringtab 1800        print_indicator@indicate 002A  
             ?_print_indicator 0070                 _lcd_write4bits 03D5                   ___fladd@exp1 005F  
                 ___fladd@exp2 005E                   ___fladd@sign 005D                   ?_lcd_command 0070  
               ?_print_reading 0051                   ?_buffer_init 0070                   ?_buffer_puts 0024  
                ?_buffer_putch 0070  
