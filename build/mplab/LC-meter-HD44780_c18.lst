

Microchip Technology PIC18 PRO Macro Assembler V1.34 build -361300703 
                                                                                               Fri Aug 30 08:43:53 2019

Microchip Technology Omniscient Code Generator (PRO mode) build 201502162209
     1                           	processor	18F252
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	pm
     5                           	psect	intcode,global,reloc=2,class=CODE,delta=1
     6                           	psect	idataCOMRAM,global,class=CODE,delta=1
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     8                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    11                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    12                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    15                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    16                           	psect	text0,global,reloc=2,class=CODE,delta=1
    17                           	psect	text1,global,reloc=2,class=CODE,delta=1
    18                           	psect	text2,global,reloc=2,class=CODE,delta=1
    19                           	psect	text3,global,reloc=2,class=CODE,delta=1
    20                           	psect	text4,global,reloc=2,class=CODE,delta=1
    21                           	psect	text5,global,reloc=2,class=CODE,delta=1
    22                           	psect	text6,global,reloc=2,class=CODE,delta=1
    23                           	psect	text7,global,reloc=2,class=CODE,delta=1
    24                           	psect	text8,global,reloc=2,class=CODE,delta=1
    25                           	psect	text9,global,reloc=2,class=CODE,delta=1
    26                           	psect	text10,global,reloc=2,class=CODE,delta=1
    27                           	psect	text11,global,reloc=2,class=CODE,delta=1
    28                           	psect	text12,global,reloc=2,class=CODE,delta=1
    29                           	psect	text13,global,reloc=2,class=CODE,delta=1
    30                           	psect	text14,global,reloc=2,class=CODE,delta=1
    31                           	psect	text15,global,reloc=2,class=CODE,delta=1
    32                           	psect	text16,global,reloc=2,class=CODE,delta=1
    33                           	psect	text17,global,reloc=2,class=CODE,delta=1
    34                           	psect	text18,global,reloc=2,class=CODE,delta=1
    35                           	psect	text19,global,reloc=2,class=CODE,delta=1
    36                           	psect	text20,global,reloc=2,class=CODE,delta=1
    37                           	psect	text21,global,reloc=2,class=CODE,delta=1
    38                           	psect	text22,global,reloc=2,class=CODE,delta=1
    39                           	psect	text23,global,reloc=2,class=CODE,delta=1
    40                           	psect	text24,global,reloc=2,class=CODE,delta=1
    41                           	psect	text25,global,reloc=2,class=CODE,delta=1
    42                           	psect	text26,global,reloc=2,class=CODE,delta=1
    43                           	psect	text27,global,reloc=2,class=CODE,delta=1
    44                           	psect	text28,global,reloc=2,class=CODE,delta=1
    45                           	psect	text29,global,reloc=2,class=CODE,delta=1
    46                           	psect	text30,global,reloc=2,class=CODE,delta=1
    47                           	psect	text31,global,reloc=2,class=CODE,delta=1
    48                           	psect	text32,global,reloc=2,class=CODE,delta=1
    49                           	psect	text33,global,reloc=2,class=CODE,delta=1
    50                           	psect	text34,global,reloc=2,class=CODE,delta=1
    51                           	psect	text35,global,reloc=2,class=CODE,delta=1
    52                           	psect	text36,global,reloc=2,class=CODE,delta=1
    53                           	psect	text37,global,reloc=2,class=CODE,delta=1
    54                           	psect	text38,global,reloc=2,class=CODE,delta=1
    55                           	psect	text39,global,reloc=2,class=CODE,delta=1
    56                           	psect	text40,global,reloc=2,class=CODE,delta=1
    57                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    58                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    59  0000                     
    60 ;; *************** function _isr *****************
    61 ;; Defined at:
    62 ;;		line 79 in file "C:\Users\vboxuser\Desktop\lc-meter\src\LC-meter.c"
    63 ;; Parameters:    Size  Location     Type
    64 ;;		None
    65 ;; Auto vars:     Size  Location     Type
    66 ;;		None
    67 ;; Return value:  Size  Location     Type
    68 ;;                  2  123[None  ] int 
    69 ;; Registers used:
    70 ;;		wreg, fsr2l, fsr2h, status,2, status,0
    71 ;; Tracked objects:
    72 ;;		On entry : 0/0
    73 ;;		On exit  : 0/0
    74 ;;		Unchanged: 0/0
    75 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
    76 ;;      Params:         0       0       0       0       0       0       0
    77 ;;      Locals:         0       0       0       0       0       0       0
    78 ;;      Temps:          2       0       0       0       0       0       0
    79 ;;      Totals:         2       0       0       0       0       0       0
    80 ;;Total ram usage:        2 bytes
    81 ;; Hardware stack levels used:    1
    82 ;; This function calls:
    83 ;;		Nothing
    84 ;; This function is called by:
    85 ;;		Interrupt level 2
    86 ;; This function uses a non-reentrant model
    87 ;;
    88                           
    89                           	psect	intcode
    90  000008                     __pintcode:
    91                           	opt stack 0
    92  000008                     _isr:
    93                           	opt stack 23
    94                           
    95                           ;incstack = 0
    96  000008  FFFF               	dw	65535	; errata NOP
    97  00000A  CFD9 F001          	movff	fsr2l,??_isr
    98  00000E  CFDA F002          	movff	fsr2h,??_isr+1
    99                           
   100                           ;LC-meter.c: 81: if(TMR2IF) {
   101  000012  A29E               	btfss	3998,1,c	;volatile
   102  000014  D036               	goto	i2l2839
   103                           
   104                           ;LC-meter.c: 83: bres += 256;
   105  000016  0100               	movlb	0	; () banked
   106  000018  2BEF               	incf	(_bres+1)& (0+255),f,b	;volatile
   107                           
   108                           ;LC-meter.c: 85: if(bres >= 5000) {
   109  00001A  0E88               	movlw	136
   110  00001C  5DEE               	subwf	_bres& (0+255),w,b	;volatile
   111  00001E  0E13               	movlw	19
   112  000020  59EF               	subwfb	(_bres+1)& (0+255),w,b	;volatile
   113  000022  E32E               	bnc	i2l2837
   114                           
   115                           ; BSR set to: 0
   116                           ;LC-meter.c: 86: bres -= 5000;
   117  000024  0E88               	movlw	136
   118  000026  5FEE               	subwf	_bres& (0+255),f,b	;volatile
   119  000028  0E13               	movlw	19
   120  00002A  5BEF               	subwfb	(_bres+1)& (0+255),f,b	;volatile
   121                           
   122                           ; BSR set to: 0
   123                           ;LC-meter.c: 87: msecpart++;
   124  00002C  4BF0               	infsnz	_msecpart& (0+255),f,b	;volatile
   125  00002E  2BF1               	incf	(_msecpart+1)& (0+255),f,b	;volatile
   126                           
   127                           ; BSR set to: 0
   128                           ;LC-meter.c: 88: msecs++;
   129  000030  2BA8               	incf	_msecs& (0+255),f,b	;volatile
   130  000032  0E00               	movlw	0
   131  000034  23A9               	addwfc	(_msecs+1)& (0+255),f,b	;volatile
   132  000036  23AA               	addwfc	(_msecs+2)& (0+255),f,b	;volatile
   133  000038  23AB               	addwfc	(_msecs+3)& (0+255),f,b	;volatile
   134                           
   135                           ; BSR set to: 0
   136                           ;LC-meter.c: 90: LATC3 = (((blink > 200)) == 0);
   137  00003A  51B5               	movf	(_blink+1)& (0+255),w,b
   138  00003C  E105               	bnz	i2u245_40
   139  00003E  0EC9               	movlw	201
   140  000040  5DB4               	subwf	_blink& (0+255),w,b
   141  000042  E202               	bc	i2u245_40
   142  000044  868B               	bsf	3979,3,c	;volatile
   143  000046  D001               	goto	i2l2827
   144  000048                     i2u245_40:
   145  000048  968B               	bcf	3979,3,c	;volatile
   146  00004A                     i2l2827:
   147  00004A  FFFF               	dw	65535	; assembler added errata NOP
   148                           
   149                           ;LC-meter.c: 91: if(blink >= 400)
   150  00004C  0E90               	movlw	144
   151  00004E  0100               	movlb	0	; () banked
   152  000050  5DB4               	subwf	_blink& (0+255),w,b
   153  000052  0E01               	movlw	1
   154  000054  59B5               	subwfb	(_blink+1)& (0+255),w,b
   155  000056  E304               	bnc	i2l2831
   156                           
   157                           ; BSR set to: 0
   158                           ;LC-meter.c: 92: blink -= 400;
   159  000058  0E90               	movlw	144
   160  00005A  5FB4               	subwf	_blink& (0+255),f,b
   161  00005C  0E01               	movlw	1
   162  00005E  5BB5               	subwfb	(_blink+1)& (0+255),f,b
   163  000060                     i2l2831:
   164                           
   165                           ; BSR set to: 0
   166                           ;LC-meter.c: 93: ++blink;
   167  000060  4BB4               	infsnz	_blink& (0+255),f,b
   168  000062  2BB5               	incf	(_blink+1)& (0+255),f,b
   169                           
   170                           ; BSR set to: 0
   171                           ;LC-meter.c: 96: if(msecpart >= 1000) {
   172  000064  0EE8               	movlw	232
   173  000066  5DF0               	subwf	_msecpart& (0+255),w,b	;volatile
   174  000068  0E03               	movlw	3
   175  00006A  59F1               	subwfb	(_msecpart+1)& (0+255),w,b	;volatile
   176  00006C  E309               	bnc	i2l2837
   177                           
   178                           ; BSR set to: 0
   179                           ;LC-meter.c: 98: seconds++;
   180  00006E  2BAC               	incf	_seconds& (0+255),f,b	;volatile
   181  000070  0E00               	movlw	0
   182  000072  23AD               	addwfc	(_seconds+1)& (0+255),f,b	;volatile
   183  000074  23AE               	addwfc	(_seconds+2)& (0+255),f,b	;volatile
   184  000076  23AF               	addwfc	(_seconds+3)& (0+255),f,b	;volatile
   185                           
   186                           ;LC-meter.c: 99: msecpart -= 1000;
   187  000078  0EE8               	movlw	232
   188  00007A  5FF0               	subwf	_msecpart& (0+255),f,b	;volatile
   189  00007C  0E03               	movlw	3
   190  00007E  5BF1               	subwfb	(_msecpart+1)& (0+255),f,b	;volatile
   191  000080                     i2l2837:
   192                           
   193                           ; BSR set to: 0
   194                           ;LC-meter.c: 100: }
   195                           ;LC-meter.c: 101: }
   196                           ;LC-meter.c: 103: TMR2IF = 0;
   197  000080  929E               	bcf	3998,1,c	;volatile
   198  000082                     i2l2839:
   199  000082  FFFF               	dw	65535	; assembler added errata NOP
   200                           
   201                           ;LC-meter.c: 104: }
   202                           ;LC-meter.c: 106: if(RCIF) { rxfifo[rxiptr] = RCREG; ser_tmp = (rxiptr + 1) & ((unsigned
      +                           char)16 - 1); if(ser_tmp != rxoptr) rxiptr = ser_tmp; }; if(TXIF && TXIE) { TXREG = txf
      +                          ifo[txoptr]; ++txoptr; txoptr &= ((unsigned char)16 - 1); if(txoptr == txiptr) { TXIE = 
      +                          0; }
   203  000084  AA9E               	btfss	3998,5,c	;volatile
   204  000086  D010               	goto	i2l128
   205  000088  0E80               	movlw	low _rxfifo
   206  00008A  2472               	addwf	_rxiptr,w,c	;volatile
   207  00008C  6ED9               	movwf	fsr2l,c
   208  00008E  6ADA               	clrf	fsr2h,c
   209  000090  0E00               	movlw	high _rxfifo
   210  000092  22DA               	addwfc	fsr2h,f,c
   211  000094  CFAE FFDF          	movff	4014,indf2	;volatile
   212  000098  2872               	incf	_rxiptr,w,c	;volatile
   213  00009A  0B0F               	andlw	15
   214  00009C  6E74               	movwf	_ser_tmp,c
   215  00009E  5073               	movf	_rxoptr,w,c	;volatile
   216  0000A0  1874               	xorwf	_ser_tmp,w,c
   217  0000A2  A4D8               	btfss	status,2,c
   218  0000A4  C074  F072         	movff	_ser_tmp,_rxiptr	;volatile
   219  0000A8                     i2l128:
   220  0000A8  FFFF               	dw	65535	; assembler added errata NOP
   221  0000AA  B89E               	btfsc	3998,4,c	;volatile
   222  0000AC  A89D               	btfss	3997,4,c	;volatile
   223  0000AE  D010               	goto	i2l132
   224  0000B0  0E90               	movlw	low _txfifo
   225  0000B2  2476               	addwf	_txoptr,w,c	;volatile
   226  0000B4  6ED9               	movwf	fsr2l,c
   227  0000B6  6ADA               	clrf	fsr2h,c
   228  0000B8  0E00               	movlw	high _txfifo
   229  0000BA  22DA               	addwfc	fsr2h,f,c
   230  0000BC  50DF               	movf	indf2,w,c
   231  0000BE  6EAD               	movwf	4013,c	;volatile
   232  0000C0  2A76               	incf	_txoptr,f,c	;volatile
   233  0000C2  0E0F               	movlw	15
   234  0000C4  1676               	andwf	_txoptr,f,c	;volatile
   235  0000C6  5075               	movf	_txiptr,w,c	;volatile
   236  0000C8  1876               	xorwf	_txoptr,w,c	;volatile
   237  0000CA  B4D8               	btfsc	status,2,c
   238  0000CC  989D               	bcf	3997,4,c	;volatile
   239  0000CE  989E               	bcf	3998,4,c	;volatile
   240  0000D0                     i2l132:
   241  0000D0  FFFF               	dw	65535	; assembler added errata NOP
   242  0000D2  C002  FFDA         	movff	??_isr+1,fsr2h
   243  0000D6  C001  FFD9         	movff	??_isr,fsr2l
   244  0000DA  0011               	retfie		f
   245  0000DC  FFFF               	dw	65535	; errata NOP
   246  0000DE                     __end_of_isr:
   247                           	opt stack 0
   248                           indf2	equ	0xFDF
   249                           fsr2h	equ	0xFDA
   250                           fsr2l	equ	0xFD9
   251                           status	equ	0xFD8
   252                           
   253 ;;
   254 ;; C18 inline assembly external references (forward declarations)
   255 ;;
   256                           
   257                           	psect	idataCOMRAM
   258  002654                     __pidataCOMRAM:
   259                           	opt stack 0
   260                           
   261                           ;initializer for _putchar_ptr
   262  002654  48                 	db	low _format_putchar
   263  002655  26                 	db	high _format_putchar
   264                           indf2	equ	0xFDF
   265                           fsr2h	equ	0xFDA
   266                           fsr2l	equ	0xFD9
   267                           status	equ	0xFD8
   268                           
   269                           	psect	smallconst
   270  000600                     __psmallconst:
   271                           	opt stack 0
   272  000600  00                 	db	0
   273  000601                     exp@coeff:
   274                           	opt stack 0
   275  000601  0000               	dw	0
   276  000603  3F80               	dw	16256
   277  000605  7218               	dw	29208
   278  000607  3F31               	dw	16177
   279  000609  FDF0               	dw	65008
   280  00060B  3E75               	dw	15989
   281  00060D  5847               	dw	22599
   282  00060F  3D63               	dw	15715
   283  000611  9558               	dw	38232
   284  000613  3C1D               	dw	15389
   285  000615  C482               	dw	50306
   286  000617  3AAE               	dw	15022
   287  000619  78A8               	dw	30888
   288  00061B  3921               	dw	14625
   289  00061D  93EF               	dw	37871
   290  00061F  3780               	dw	14208
   291  000621  92A0               	dw	37536
   292  000623  35A7               	dw	13735
   293  000625  5646               	dw	22086
   294  000627  3415               	dw	13333
   295  000629                     __end_ofexp@coeff:
   296                           	opt stack 0
   297  000629                     log@coeff:
   298                           	opt stack 0
   299  000629  0000               	dw	0
   300  00062B  0000               	dw	0
   301  00062D  FFC4               	dw	65476
   302  00062F  3F7F               	dw	16255
   303  000631  EF80               	dw	61312
   304  000633  BEFF               	dw	48895
   305  000635  E190               	dw	57744
   306  000637  3EA9               	dw	16041
   307  000639  82EC               	dw	33516
   308  00063B  BE76               	dw	48758
   309  00063D  AD82               	dw	44418
   310  00063F  3E2B               	dw	15915
   311  000641  3C0E               	dw	15374
   312  000643  BDC3               	dw	48579
   313  000645  D187               	dw	53639
   314  000647  3D13               	dw	15635
   315  000649  7841               	dw	30785
   316  00064B  BBD3               	dw	48083
   317  00064D                     __end_oflog@coeff:
   318                           	opt stack 0
   319  00064D                     STR_8:
   320  00064D  0D                 	db	13
   321  00064E  0A                 	db	10
   322  00064F  43                 	db	67	;'C'
   323  000650  43                 	db	67	;'C'
   324  000651  61                 	db	97	;'a'
   325  000652  6C                 	db	108	;'l'
   326  000653  3D                 	db	61	;'='
   327  000654  00                 	db	0
   328  000655                     STR_1:
   329  000655  2E                 	db	46
   330  000656  2E                 	db	46
   331  000657  2E                 	db	46
   332  000658  0D                 	db	13
   333  000659  0A                 	db	10
   334  00065A  00                 	db	0
   335  00065B                     STR_5:
   336  00065B  0D                 	db	13
   337  00065C  0A                 	db	10
   338  00065D  46                 	db	70	;'F'
   339  00065E  31                 	db	49	;'1'
   340  00065F  3D                 	db	61	;'='
   341  000660  00                 	db	0
   342  000661                     STR_6:
   343  000661  0D                 	db	13
   344  000662  0A                 	db	10
   345  000663  46                 	db	70	;'F'
   346  000664  32                 	db	50	;'2'
   347  000665  3D                 	db	61	;'='
   348  000666  00                 	db	0
   349  000667                     STR_7:
   350  000667  0D                 	db	13
   351  000668  0A                 	db	10
   352  000669  46                 	db	70	;'F'
   353  00066A  33                 	db	51	;'3'
   354  00066B  3D                 	db	61	;'='
   355  00066C  00                 	db	0
   356  00066D                     STR_10:
   357  00066D  43                 	db	67	;'C'
   358  00066E  69                 	db	105	;'i'
   359  00066F  6E                 	db	110	;'n'
   360  000670  3D                 	db	61	;'='
   361  000671  00                 	db	0
   362  000672                     STR_4:
   363  000672  76                 	db	118	;'v'
   364  000673  61                 	db	97	;'a'
   365  000674  72                 	db	114	;'r'
   366  000675  3D                 	db	61	;'='
   367  000676  00                 	db	0
   368  0000                     
   369                           ; #config settings
   370  000677  00                 	db	0	; dummy byte at the end
   371  0000                     indf2	equ	0xFDF
   372                           fsr2h	equ	0xFDA
   373                           fsr2l	equ	0xFD9
   374                           status	equ	0xFD8
   375                           
   376                           	psect	nvBANK0
   377  0000EA                     __pnvBANK0:
   378                           	opt stack 0
   379  0000EA                     _CCal:
   380                           	opt stack 0
   381  0000EA                     	ds	4
   382  0000EE                     _bres:
   383                           	opt stack 0
   384  0000EE                     	ds	2
   385  0000F0                     _msecpart:
   386                           	opt stack 0
   387  0000F0                     	ds	2
   388  0000                     _TMR0	set	4054
   389  0000                     _RCREG	set	4014
   390  0000                     _SPBRG	set	4015
   391  0000                     _TMR2	set	4044
   392  0000                     _TRISA	set	3986
   393  0000                     _TRISC	set	3988
   394  0000                     _TXREG	set	4013
   395  0000                     _BRGH	set	32098
   396  0000                     _CREN	set	32092
   397  0000                     _GIE	set	32663
   398  0000                     _LATC3	set	31835
   399  0000                     _LATC4	set	31836
   400  0000                     _LATC5	set	31837
   401  0000                     _LATC7	set	31839
   402  0000                     _NOT_RBPU	set	32655
   403  0000                     _PEIE	set	32662
   404  0000                     _RCIF	set	31989
   405  0000                     _RX9	set	32094
   406  0000                     _SPEN	set	32095
   407  0000                     _SSPEN	set	32309
   408  0000                     _SYNC	set	32100
   409  0000                     _T0CS	set	32429
   410  0000                     _T0SE	set	32428
   411  0000                     _T2CKPS0	set	32336
   412  0000                     _T2CKPS1	set	32337
   413  0000                     _TMR0IF	set	32658
   414  0000                     _TMR2IE	set	31977
   415  0000                     _TMR2IF	set	31985
   416  0000                     _TMR2ON	set	32338
   417  0000                     _TOUTPS0	set	32339
   418  0000                     _TOUTPS1	set	32340
   419  0000                     _TOUTPS2	set	32341
   420  0000                     _TRISC0	set	31904
   421  0000                     _TRISC1	set	31905
   422  0000                     _TRISC2	set	31906
   423  0000                     _TRISC3	set	31907
   424  0000                     _TRISC4	set	31908
   425  0000                     _TRISC5	set	31909
   426  0000                     _TRISC6	set	31910
   427  0000                     _TX9	set	32102
   428  0000                     _TXEN	set	32101
   429  0000                     _TXIE	set	31980
   430  0000                     _TXIF	set	31988
   431                           indf2	equ	0xFDF
   432                           fsr2h	equ	0xFDA
   433                           fsr2l	equ	0xFD9
   434                           status	equ	0xFD8
   435                           
   436                           	psect	cinit
   437  0024B6                     __pcinit:
   438                           	opt stack 0
   439  0024B6                     start_initialization:
   440                           	opt stack 0
   441  0024B6                     __initialization:
   442                           	opt stack 0
   443                           
   444                           ; Clear objects allocated to BANK0 (58 bytes)
   445  0024B6  EE00  F080         	lfsr	0,__pbssBANK0
   446  0024BA  0E3A               	movlw	58
   447  0024BC                     clear_0:
   448  0024BC  6AEE               	clrf	postinc0,c
   449  0024BE  06E8               	decf	wreg,f,c
   450  0024C0  E1FD               	bnz	clear_0
   451                           
   452                           ; Clear objects allocated to COMRAM (5 bytes)
   453  0024C2  6A76               	clrf	(__pbssCOMRAM+4)& (0+255),c
   454  0024C4  6A75               	clrf	(__pbssCOMRAM+3)& (0+255),c
   455  0024C6  6A74               	clrf	(__pbssCOMRAM+2)& (0+255),c
   456  0024C8  6A73               	clrf	(__pbssCOMRAM+1)& (0+255),c
   457  0024CA  6A72               	clrf	__pbssCOMRAM& (0+255),c
   458                           
   459                           ; Initialize objects allocated to COMRAM (2 bytes)
   460                           ; load TBLPTR registers with __pidataCOMRAM
   461  0024CC  0E54               	movlw	low __pidataCOMRAM
   462  0024CE  6EF6               	movwf	tblptrl,c
   463  0024D0  0E26               	movlw	high __pidataCOMRAM
   464  0024D2  6EF7               	movwf	tblptrh,c
   465  0024D4  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   466  0024D6  6EF8               	movwf	tblptru,c
   467  0024D8  0009               	tblrd		*+	;fetch initializer
   468  0024DA  CFF5 F077          	movff	tablat,__pdataCOMRAM
   469  0024DE  0009               	tblrd		*+	;fetch initializer
   470  0024E0  CFF5 F078          	movff	tablat,__pdataCOMRAM+1
   471  0024E4                     end_of_initialization:
   472                           	opt stack 0
   473  0024E4                     __end_of__initialization:
   474                           	opt stack 0
   475  0024E4  0E00               	movlw	low (__Lmediumconst shr (0+16))
   476  0024E6  6EF8               	movwf	tblptru,c
   477  0024E8  0100               	movlb	0
   478  0024EA  EF8F  F00D         	goto	_main	;jump to C main() function
   479                           tblptru	equ	0xFF8
   480                           tblptrh	equ	0xFF7
   481                           tblptrl	equ	0xFF6
   482                           tablat	equ	0xFF5
   483                           postinc0	equ	0xFEE
   484                           wreg	equ	0xFE8
   485                           indf2	equ	0xFDF
   486                           fsr2h	equ	0xFDA
   487                           fsr2l	equ	0xFD9
   488                           status	equ	0xFD8
   489                           
   490                           	psect	bssCOMRAM
   491  000072                     __pbssCOMRAM:
   492                           	opt stack 0
   493  000072                     _rxiptr:
   494                           	opt stack 0
   495  000072                     	ds	1
   496  000073                     _rxoptr:
   497                           	opt stack 0
   498  000073                     	ds	1
   499  000074                     _ser_tmp:
   500                           	opt stack 0
   501  000074                     	ds	1
   502  000075                     _txiptr:
   503                           	opt stack 0
   504  000075                     	ds	1
   505  000076                     _txoptr:
   506                           	opt stack 0
   507  000076                     	ds	1
   508                           tblptru	equ	0xFF8
   509                           tblptrh	equ	0xFF7
   510                           tblptrl	equ	0xFF6
   511                           tablat	equ	0xFF5
   512                           postinc0	equ	0xFEE
   513                           wreg	equ	0xFE8
   514                           indf2	equ	0xFDF
   515                           fsr2h	equ	0xFDA
   516                           fsr2l	equ	0xFD9
   517                           status	equ	0xFD8
   518                           
   519                           	psect	dataCOMRAM
   520  000077                     __pdataCOMRAM:
   521                           	opt stack 0
   522  000077                     _putchar_ptr:
   523                           	opt stack 0
   524  000077                     	ds	2
   525                           tblptru	equ	0xFF8
   526                           tblptrh	equ	0xFF7
   527                           tblptrl	equ	0xFF6
   528                           tablat	equ	0xFF5
   529                           postinc0	equ	0xFEE
   530                           wreg	equ	0xFE8
   531                           indf2	equ	0xFDF
   532                           fsr2h	equ	0xFDA
   533                           fsr2l	equ	0xFD9
   534                           status	equ	0xFD8
   535                           
   536                           	psect	bssBANK0
   537  000080                     __pbssBANK0:
   538                           	opt stack 0
   539  000080                     _rxfifo:
   540                           	opt stack 0
   541  000080                     	ds	16
   542  000090                     _txfifo:
   543                           	opt stack 0
   544  000090                     	ds	16
   545  0000A0                     _F2:
   546                           	opt stack 0
   547  0000A0                     	ds	4
   548  0000A4                     _F3:
   549                           	opt stack 0
   550  0000A4                     	ds	4
   551  0000A8                     _msecs:
   552                           	opt stack 0
   553  0000A8                     	ds	4
   554  0000AC                     _seconds:
   555                           	opt stack 0
   556  0000AC                     	ds	4
   557  0000B0                     _timer1of:
   558                           	opt stack 0
   559  0000B0                     	ds	4
   560  0000B4                     _blink:
   561                           	opt stack 0
   562  0000B4                     	ds	2
   563  0000B6                     _F1:
   564                           	opt stack 0
   565  0000B6                     	ds	4
   566                           tblptru	equ	0xFF8
   567                           tblptrh	equ	0xFF7
   568                           tblptrl	equ	0xFF6
   569                           tablat	equ	0xFF5
   570                           postinc0	equ	0xFEE
   571                           wreg	equ	0xFE8
   572                           indf2	equ	0xFDF
   573                           fsr2h	equ	0xFDA
   574                           fsr2l	equ	0xFD9
   575                           status	equ	0xFD8
   576                           
   577                           	psect	cstackBANK1
   578  000100                     __pcstackBANK1:
   579                           	opt stack 0
   580  000100                     _measure_capacitance$923:
   581                           	opt stack 0
   582                           
   583                           ; 4 bytes @ 0x0
   584  000100                     	ds	4
   585  000104                     _measure_capacitance$924:
   586                           	opt stack 0
   587                           
   588                           ; 4 bytes @ 0x4
   589  000104                     	ds	4
   590  000108                     _measure_capacitance$925:
   591                           	opt stack 0
   592                           
   593                           ; 4 bytes @ 0x8
   594  000108                     	ds	4
   595  00010C                     measure_capacitance@unit:
   596                           	opt stack 0
   597                           
   598                           ; 1 bytes @ 0xC
   599  00010C                     	ds	1
   600  00010D                     measure_capacitance@var:
   601                           	opt stack 0
   602                           
   603                           ; 2 bytes @ 0xD
   604  00010D                     	ds	2
   605  00010F                     measure_capacitance@Cin:
   606                           	opt stack 0
   607                           
   608                           ; 4 bytes @ 0xF
   609  00010F                     	ds	4
   610                           tblptru	equ	0xFF8
   611                           tblptrh	equ	0xFF7
   612                           tblptrl	equ	0xFF6
   613                           tablat	equ	0xFF5
   614                           postinc0	equ	0xFEE
   615                           wreg	equ	0xFE8
   616                           indf2	equ	0xFDF
   617                           fsr2h	equ	0xFDA
   618                           fsr2l	equ	0xFD9
   619                           status	equ	0xFD8
   620                           
   621                           	psect	cstackBANK0
   622  0000BA                     __pcstackBANK0:
   623                           	opt stack 0
   624  0000BA                     measure_inductance@numerator:
   625                           	opt stack 0
   626  0000BA                     _exp$940:
   627                           	opt stack 0
   628                           
   629                           ; 4 bytes @ 0x0
   630  0000BA                     	ds	4
   631  0000BE                     exp@exponent:
   632                           	opt stack 0
   633  0000BE                     measure_inductance@denominator:
   634                           	opt stack 0
   635                           
   636                           ; 4 bytes @ 0x4
   637  0000BE                     	ds	2
   638  0000C0                     exp@sign:
   639                           	opt stack 0
   640                           
   641                           ; 1 bytes @ 0x6
   642  0000C0                     	ds	1
   643  0000C1                     ?_pow:
   644                           	opt stack 0
   645  0000C1                     pow@x:
   646                           	opt stack 0
   647                           
   648                           ; 4 bytes @ 0x7
   649  0000C1                     	ds	1
   650  0000C2                     _measure_inductance$926:
   651                           	opt stack 0
   652                           
   653                           ; 4 bytes @ 0x8
   654  0000C2                     	ds	3
   655  0000C5                     pow@y:
   656                           	opt stack 0
   657                           
   658                           ; 4 bytes @ 0xB
   659  0000C5                     	ds	1
   660  0000C6                     _measure_inductance$930:
   661                           	opt stack 0
   662                           
   663                           ; 4 bytes @ 0xC
   664  0000C6                     	ds	3
   665  0000C9                     _pow$938:
   666                           	opt stack 0
   667                           
   668                           ; 4 bytes @ 0xF
   669  0000C9                     	ds	1
   670  0000CA                     _measure_inductance$931:
   671                           	opt stack 0
   672                           
   673                           ; 4 bytes @ 0x10
   674  0000CA                     	ds	3
   675  0000CD                     _pow$939:
   676                           	opt stack 0
   677                           
   678                           ; 4 bytes @ 0x13
   679  0000CD                     	ds	1
   680  0000CE                     _measure_inductance$932:
   681                           	opt stack 0
   682                           
   683                           ; 4 bytes @ 0x14
   684  0000CE                     	ds	3
   685  0000D1                     pow@sign:
   686                           	opt stack 0
   687                           
   688                           ; 1 bytes @ 0x17
   689  0000D1                     	ds	1
   690  0000D2                     measure_inductance@unit:
   691                           	opt stack 0
   692  0000D2                     pow@yi:
   693                           	opt stack 0
   694                           
   695                           ; 4 bytes @ 0x18
   696  0000D2                     	ds	1
   697  0000D3                     _measure_inductance$927:
   698                           	opt stack 0
   699                           
   700                           ; 4 bytes @ 0x19
   701  0000D3                     	ds	3
   702  0000D6                     format_double@num:
   703                           	opt stack 0
   704                           
   705                           ; 4 bytes @ 0x1C
   706  0000D6                     	ds	1
   707  0000D7                     _measure_inductance$928:
   708                           	opt stack 0
   709                           
   710                           ; 4 bytes @ 0x1D
   711  0000D7                     	ds	3
   712  0000DA                     _format_double$935:
   713                           	opt stack 0
   714                           
   715                           ; 4 bytes @ 0x20
   716  0000DA                     	ds	1
   717  0000DB                     _measure_inductance$929:
   718                           	opt stack 0
   719                           
   720                           ; 4 bytes @ 0x21
   721  0000DB                     	ds	3
   722  0000DE                     _format_double$936:
   723                           	opt stack 0
   724                           
   725                           ; 4 bytes @ 0x24
   726  0000DE                     	ds	1
   727  0000DF                     measure_inductance@var:
   728                           	opt stack 0
   729                           
   730                           ; 2 bytes @ 0x25
   731  0000DF                     	ds	2
   732  0000E1                     measure_inductance@Lin:
   733                           	opt stack 0
   734                           
   735                           ; 4 bytes @ 0x27
   736  0000E1                     	ds	1
   737  0000E2                     format_double@weight:
   738                           	opt stack 0
   739                           
   740                           ; 4 bytes @ 0x28
   741  0000E2                     	ds	4
   742  0000E6                     format_double@digit:
   743                           	opt stack 0
   744                           
   745                           ; 2 bytes @ 0x2C
   746  0000E6                     	ds	2
   747  0000E8                     format_double@m:
   748                           	opt stack 0
   749                           
   750                           ; 2 bytes @ 0x2E
   751  0000E8                     	ds	2
   752                           tblptru	equ	0xFF8
   753                           tblptrh	equ	0xFF7
   754                           tblptrl	equ	0xFF6
   755                           tablat	equ	0xFF5
   756                           postinc0	equ	0xFEE
   757                           wreg	equ	0xFE8
   758                           indf2	equ	0xFDF
   759                           fsr2h	equ	0xFDA
   760                           fsr2l	equ	0xFD9
   761                           status	equ	0xFD8
   762                           
   763                           	psect	cstackCOMRAM
   764  000001                     __pcstackCOMRAM:
   765                           	opt stack 0
   766  000001                     ??_isr:
   767  000001                     
   768                           ; 1 bytes @ 0x0
   769  000001                     	ds	2
   770  000003                     ??_timer2_init:
   771  000003                     ?_measure_freq:
   772                           	opt stack 0
   773  000003                     ?___wmul:
   774                           	opt stack 0
   775  000003                     ?___lwdiv:
   776                           	opt stack 0
   777  000003                     ?___lwmod:
   778                           	opt stack 0
   779  000003                     ?___flpack:
   780                           	opt stack 0
   781  000003                     ?_frexp:
   782                           	opt stack 0
   783  000003                     ?___flneg:
   784                           	opt stack 0
   785  000003                     output_putch@c:
   786                           	opt stack 0
   787  000003                     ser_putch@c:
   788                           	opt stack 0
   789  000003                     print_reading@measurement:
   790                           	opt stack 0
   791  000003                     ___wmul@multiplier:
   792                           	opt stack 0
   793  000003                     ___lwdiv@dividend:
   794                           	opt stack 0
   795  000003                     ___lwmod@dividend:
   796                           	opt stack 0
   797  000003                     ___flpack@arg:
   798                           	opt stack 0
   799  000003                     ___flge@ff1:
   800                           	opt stack 0
   801  000003                     ___flneg@f1:
   802                           	opt stack 0
   803  000003                     frexp@value:
   804                           	opt stack 0
   805                           
   806                           ; 4 bytes @ 0x2
   807  000003                     	ds	1
   808  000004                     timer2_init@ps_mode:
   809                           	opt stack 0
   810  000004                     ser_puts@s:
   811                           	opt stack 0
   812                           
   813                           ; 2 bytes @ 0x3
   814  000004                     	ds	1
   815  000005                     ??_measure_freq:
   816  000005                     timer2_init@ps:
   817                           	opt stack 0
   818  000005                     ___wmul@multiplicand:
   819                           	opt stack 0
   820  000005                     ___lwdiv@divisor:
   821                           	opt stack 0
   822  000005                     ___lwmod@divisor:
   823                           	opt stack 0
   824                           
   825                           ; 2 bytes @ 0x4
   826  000005                     	ds	1
   827  000006                     
   828                           ; 0 bytes @ 0x5
   829  000006                     	ds	1
   830  000007                     measure_freq@prev:
   831                           	opt stack 0
   832  000007                     ___flpack@exp:
   833                           	opt stack 0
   834  000007                     ___lwdiv@counter:
   835                           	opt stack 0
   836  000007                     ___lwmod@counter:
   837                           	opt stack 0
   838  000007                     ___wmul@product:
   839                           	opt stack 0
   840  000007                     frexp@eptr:
   841                           	opt stack 0
   842  000007                     ___flge@ff2:
   843                           	opt stack 0
   844                           
   845                           ; 4 bytes @ 0x6
   846  000007                     	ds	1
   847  000008                     measure_freq@i:
   848                           	opt stack 0
   849  000008                     ___flpack@sign:
   850                           	opt stack 0
   851  000008                     ___lwdiv@quotient:
   852                           	opt stack 0
   853                           
   854                           ; 2 bytes @ 0x7
   855  000008                     	ds	1
   856  000009                     ??___flpack:
   857  000009                     ??_frexp:
   858  000009                     measure_freq@count:
   859                           	opt stack 0
   860  000009                     delay10ms@period_10ms:
   861                           	opt stack 0
   862                           
   863                           ; 2 bytes @ 0x8
   864  000009                     	ds	1
   865  00000A                     format_number@n:
   866                           	opt stack 0
   867                           
   868                           ; 2 bytes @ 0x9
   869  00000A                     	ds	1
   870  00000B                     delay10ms@ms:
   871                           	opt stack 0
   872                           
   873                           ; 4 bytes @ 0xA
   874  00000B                     	ds	1
   875  00000C                     format_number@base:
   876                           	opt stack 0
   877                           
   878                           ; 1 bytes @ 0xB
   879  00000C                     	ds	1
   880  00000D                     ?___fldiv:
   881                           	opt stack 0
   882  00000D                     ?___awtofl:
   883                           	opt stack 0
   884  00000D                     ?___lltofl:
   885                           	opt stack 0
   886  00000D                     ?___lwtofl:
   887                           	opt stack 0
   888  00000D                     format_number@pad:
   889                           	opt stack 0
   890  00000D                     ___awtofl@c:
   891                           	opt stack 0
   892  00000D                     ___lwtofl@c:
   893                           	opt stack 0
   894  00000D                     ___fldiv@f2:
   895                           	opt stack 0
   896  00000D                     ___lltofl@c:
   897                           	opt stack 0
   898                           
   899                           ; 4 bytes @ 0xC
   900  00000D                     	ds	1
   901  00000E                     ??_format_number:
   902                           
   903                           ; 0 bytes @ 0xD
   904  00000E                     	ds	1
   905  00000F                     delay10ms@run:
   906                           	opt stack 0
   907                           
   908                           ; 1 bytes @ 0xE
   909  00000F                     	ds	2
   910  000011                     ___awtofl@sign:
   911                           	opt stack 0
   912  000011                     ___fldiv@f1:
   913                           	opt stack 0
   914                           
   915                           ; 4 bytes @ 0x10
   916  000011                     	ds	1
   917  000012                     format_number@buf:
   918                           	opt stack 0
   919                           
   920                           ; 32 bytes @ 0x11
   921  000012                     	ds	3
   922  000015                     ___fldiv@f3:
   923                           	opt stack 0
   924                           
   925                           ; 4 bytes @ 0x14
   926  000015                     	ds	4
   927  000019                     ___fldiv@cntr:
   928                           	opt stack 0
   929                           
   930                           ; 1 bytes @ 0x18
   931  000019                     	ds	1
   932  00001A                     ___fldiv@exp:
   933                           	opt stack 0
   934                           
   935                           ; 1 bytes @ 0x19
   936  00001A                     	ds	1
   937  00001B                     ___fldiv@sign:
   938                           	opt stack 0
   939                           
   940                           ; 1 bytes @ 0x1A
   941  00001B                     	ds	1
   942  00001C                     ?___flmul:
   943                           	opt stack 0
   944  00001C                     ___flmul@f1:
   945                           	opt stack 0
   946                           
   947                           ; 4 bytes @ 0x1B
   948  00001C                     	ds	4
   949  000020                     ___flmul@f2:
   950                           	opt stack 0
   951                           
   952                           ; 4 bytes @ 0x1F
   953  000020                     	ds	4
   954  000024                     ___flmul@exp:
   955                           	opt stack 0
   956                           
   957                           ; 1 bytes @ 0x23
   958  000024                     	ds	1
   959  000025                     ___flmul@f3_as_product:
   960                           	opt stack 0
   961                           
   962                           ; 4 bytes @ 0x24
   963  000025                     	ds	4
   964  000029                     ___flmul@cntr:
   965                           	opt stack 0
   966                           
   967                           ; 1 bytes @ 0x28
   968  000029                     	ds	1
   969  00002A                     ___flmul@sign:
   970                           	opt stack 0
   971                           
   972                           ; 1 bytes @ 0x29
   973  00002A                     	ds	1
   974  00002B                     ?___fladd:
   975                           	opt stack 0
   976  00002B                     ___fladd@f1:
   977                           	opt stack 0
   978                           
   979                           ; 4 bytes @ 0x2A
   980  00002B                     	ds	4
   981  00002F                     ___fladd@f2:
   982                           	opt stack 0
   983                           
   984                           ; 4 bytes @ 0x2E
   985  00002F                     	ds	3
   986  000032                     _format_number$301:
   987                           	opt stack 0
   988                           
   989                           ; 2 bytes @ 0x31
   990  000032                     	ds	1
   991  000033                     ??___fladd:
   992                           
   993                           ; 0 bytes @ 0x32
   994  000033                     	ds	1
   995  000034                     format_number@padchar:
   996                           	opt stack 0
   997  000034                     ___fladd@sign:
   998                           	opt stack 0
   999                           
  1000                           ; 1 bytes @ 0x33
  1001  000034                     	ds	1
  1002  000035                     format_number@di:
  1003                           	opt stack 0
  1004  000035                     ___fladd@exp2:
  1005                           	opt stack 0
  1006                           
  1007                           ; 1 bytes @ 0x34
  1008  000035                     	ds	1
  1009  000036                     format_number@i:
  1010                           	opt stack 0
  1011  000036                     ___fladd@exp1:
  1012                           	opt stack 0
  1013                           
  1014                           ; 1 bytes @ 0x35
  1015  000036                     	ds	1
  1016  000037                     ?___flsub:
  1017                           	opt stack 0
  1018  000037                     ?_eval_poly:
  1019                           	opt stack 0
  1020  000037                     format_xint32@x:
  1021                           	opt stack 0
  1022  000037                     ___flsub@f1:
  1023                           	opt stack 0
  1024  000037                     eval_poly@x:
  1025                           	opt stack 0
  1026                           
  1027                           ; 4 bytes @ 0x36
  1028  000037                     	ds	4
  1029  00003B                     eval_poly@d:
  1030                           	opt stack 0
  1031  00003B                     ___flsub@f2:
  1032                           	opt stack 0
  1033                           
  1034                           ; 4 bytes @ 0x3A
  1035  00003B                     	ds	2
  1036  00003D                     eval_poly@n:
  1037                           	opt stack 0
  1038                           
  1039                           ; 2 bytes @ 0x3C
  1040  00003D                     	ds	2
  1041  00003F                     ??_eval_poly:
  1042                           
  1043                           ; 0 bytes @ 0x3E
  1044  00003F                     	ds	4
  1045  000043                     eval_poly@res:
  1046                           	opt stack 0
  1047                           
  1048                           ; 4 bytes @ 0x42
  1049  000043                     	ds	4
  1050  000047                     ?_ldexp:
  1051                           	opt stack 0
  1052  000047                     ?_log:
  1053                           	opt stack 0
  1054  000047                     ldexp@value:
  1055                           	opt stack 0
  1056  000047                     log@x:
  1057                           	opt stack 0
  1058                           
  1059                           ; 4 bytes @ 0x46
  1060  000047                     	ds	4
  1061  00004B                     ldexp@newexp:
  1062                           	opt stack 0
  1063  00004B                     log@exponent:
  1064                           	opt stack 0
  1065                           
  1066                           ; 2 bytes @ 0x4A
  1067  00004B                     	ds	2
  1068  00004D                     ??_ldexp:
  1069  00004D                     ?_log10:
  1070                           	opt stack 0
  1071  00004D                     log10@x:
  1072                           	opt stack 0
  1073                           
  1074                           ; 4 bytes @ 0x4C
  1075  00004D                     	ds	4
  1076  000051                     _log10$937:
  1077                           	opt stack 0
  1078                           
  1079                           ; 4 bytes @ 0x50
  1080  000051                     	ds	4
  1081  000055                     ?___fltol:
  1082                           	opt stack 0
  1083  000055                     ___fltol@f1:
  1084                           	opt stack 0
  1085                           
  1086                           ; 4 bytes @ 0x54
  1087  000055                     	ds	4
  1088  000059                     ??___fltol:
  1089                           
  1090                           ; 0 bytes @ 0x58
  1091  000059                     	ds	4
  1092  00005D                     ___fltol@sign1:
  1093                           	opt stack 0
  1094                           
  1095                           ; 1 bytes @ 0x5C
  1096  00005D                     	ds	1
  1097  00005E                     ___fltol@exp1:
  1098                           	opt stack 0
  1099                           
  1100                           ; 1 bytes @ 0x5D
  1101  00005E                     	ds	1
  1102  00005F                     ?___altofl:
  1103                           	opt stack 0
  1104  00005F                     ___altofl@c:
  1105                           	opt stack 0
  1106                           
  1107                           ; 4 bytes @ 0x5E
  1108  00005F                     	ds	4
  1109  000063                     ___altofl@sign:
  1110                           	opt stack 0
  1111                           
  1112                           ; 1 bytes @ 0x62
  1113  000063                     	ds	1
  1114  000064                     ?_floor:
  1115                           	opt stack 0
  1116  000064                     floor@x:
  1117                           	opt stack 0
  1118                           
  1119                           ; 4 bytes @ 0x63
  1120  000064                     	ds	4
  1121  000068                     floor@i:
  1122                           	opt stack 0
  1123                           
  1124                           ; 4 bytes @ 0x67
  1125  000068                     	ds	4
  1126  00006C                     floor@expon:
  1127                           	opt stack 0
  1128                           
  1129                           ; 2 bytes @ 0x6B
  1130  00006C                     	ds	2
  1131  00006E                     ?_exp:
  1132                           	opt stack 0
  1133  00006E                     exp@x:
  1134                           	opt stack 0
  1135                           
  1136                           ; 4 bytes @ 0x6D
  1137  00006E                     	ds	4
  1138  000072                     tblptru	equ	0xFF8
  1139                           tblptrh	equ	0xFF7
  1140                           tblptrl	equ	0xFF6
  1141                           tablat	equ	0xFF5
  1142                           postinc0	equ	0xFEE
  1143                           wreg	equ	0xFE8
  1144                           indf2	equ	0xFDF
  1145                           fsr2h	equ	0xFDA
  1146                           fsr2l	equ	0xFD9
  1147                           status	equ	0xFD8
  1148                           
  1149                           ; 0 bytes @ 0x71
  1150 ;;
  1151 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1152 ;;
  1153 ;; *************** function _main *****************
  1154 ;; Defined at:
  1155 ;;		line 115 in file "C:\Users\vboxuser\Desktop\lc-meter\src\LC-meter.c"
  1156 ;; Parameters:    Size  Location     Type
  1157 ;;		None
  1158 ;; Auto vars:     Size  Location     Type
  1159 ;;		None
  1160 ;; Return value:  Size  Location     Type
  1161 ;;		None               void
  1162 ;; Registers used:
  1163 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, cstack
  1164 ;; Tracked objects:
  1165 ;;		On entry : 0/0
  1166 ;;		On exit  : F/0
  1167 ;;		Unchanged: 0/0
  1168 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1169 ;;      Params:         0       0       0       0       0       0       0
  1170 ;;      Locals:         0       0       0       0       0       0       0
  1171 ;;      Temps:          0       0       0       0       0       0       0
  1172 ;;      Totals:         0       0       0       0       0       0       0
  1173 ;;Total ram usage:        0 bytes
  1174 ;; Hardware stack levels required when called:    8
  1175 ;; This function calls:
  1176 ;;		_calibrate
  1177 ;;		_delay10ms
  1178 ;;		_indicator
  1179 ;;		_measure_capacitance
  1180 ;;		_measure_inductance
  1181 ;;		_ser_init
  1182 ;;		_ser_puts
  1183 ;;		_timer2_init
  1184 ;; This function is called by:
  1185 ;;		Startup code after reset
  1186 ;; This function uses a non-reentrant model
  1187 ;;
  1188                           
  1189                           	psect	text0
  1190  001B1E                     __ptext0:
  1191                           	opt stack 0
  1192  001B1E                     _main:
  1193                           	opt stack 23
  1194                           
  1195                           ;incstack = 0
  1196  001B1E  FFFF               	dw	65535
  1197                           
  1198                           ;LC-meter.c: 116: bres = msecpart = msecs = seconds = 0;
  1199  001B20  0100               	movlb	0	; () banked
  1200  001B22  6BAC               	clrf	_seconds& (0+255),b	;volatile
  1201  001B24  6BAD               	clrf	(_seconds+1)& (0+255),b	;volatile
  1202  001B26  6BAE               	clrf	(_seconds+2)& (0+255),b	;volatile
  1203  001B28  6BAF               	clrf	(_seconds+3)& (0+255),b	;volatile
  1204  001B2A  C0AC  F0A8         	movff	_seconds,_msecs	;volatile
  1205  001B2E  C0AD  F0A9         	movff	_seconds+1,_msecs+1	;volatile
  1206  001B32  C0AE  F0AA         	movff	_seconds+2,_msecs+2	;volatile
  1207  001B36  C0AF  F0AB         	movff	_seconds+3,_msecs+3	;volatile
  1208  001B3A  C0A8  F0F0         	movff	_msecs,_msecpart	;volatile
  1209  001B3E  C0A9  F0F1         	movff	_msecs+1,_msecpart+1	;volatile
  1210  001B42  C0F0  F0EE         	movff	_msecpart,_bres	;volatile
  1211  001B46  C0F1  F0EF         	movff	_msecpart+1,_bres+1	;volatile
  1212                           
  1213                           ;LC-meter.c: 118: CCal = 1000;
  1214  001B4A  6BEA               	clrf	_CCal& (0+255),b
  1215  001B4C  6BEB               	clrf	(_CCal+1)& (0+255),b
  1216  001B4E  0E7A               	movlw	122
  1217  001B50  6FEC               	movwf	(_CCal+2)& (0+255),b
  1218  001B52  0E44               	movlw	68
  1219  001B54  6FED               	movwf	(_CCal+3)& (0+255),b
  1220                           
  1221                           ;LC-meter.c: 127: TRISA = 0b11001111;
  1222  001B56  0ECF               	movlw	207
  1223  001B58  6E92               	movwf	3986,c	;volatile
  1224                           
  1225                           ; BSR set to: 0
  1226                           ;LC-meter.c: 129: T0CS = 1;
  1227  001B5A  8AD5               	bsf	4053,5,c	;volatile
  1228                           
  1229                           ; BSR set to: 0
  1230                           ;LC-meter.c: 130: T0SE = 1;
  1231  001B5C  88D5               	bsf	4053,4,c	;volatile
  1232                           
  1233                           ; BSR set to: 0
  1234                           ;LC-meter.c: 141: NOT_RBPU = 0;
  1235  001B5E  9EF1               	bcf	intcon2,7,c	;volatile
  1236                           
  1237                           ; BSR set to: 0
  1238                           ;LC-meter.c: 144: TRISC3 = 0;
  1239  001B60  9694               	bcf	3988,3,c	;volatile
  1240                           
  1241                           ; BSR set to: 0
  1242                           ;LC-meter.c: 145: LATC3 = ((1) == 0);
  1243  001B62  968B               	bcf	3979,3,c	;volatile
  1244                           
  1245                           ; BSR set to: 0
  1246                           ;LC-meter.c: 147: SSPEN = 0;
  1247  001B64  9AC6               	bcf	4038,5,c	;volatile
  1248                           
  1249                           ; BSR set to: 0
  1250                           ;LC-meter.c: 152: timer2_init(0b000 | 0x80);
  1251  001B66  0E80               	movlw	128
  1252  001B68  EC78  F011         	call	_timer2_init
  1253                           
  1254                           ;LC-meter.c: 157: TRISC1 = 0;
  1255  001B6C  9294               	bcf	3988,1,c	;volatile
  1256                           
  1257                           ;LC-meter.c: 160: TRISC3 = 0;
  1258  001B6E  9694               	bcf	3988,3,c	;volatile
  1259                           
  1260                           ;LC-meter.c: 162: TRISC0 = 1;
  1261  001B70  8094               	bsf	3988,0,c	;volatile
  1262                           
  1263                           ;LC-meter.c: 163: TRISC2 = 1;
  1264  001B72  8494               	bsf	3988,2,c	;volatile
  1265                           
  1266                           ;LC-meter.c: 173: TRISC4 = 1;
  1267  001B74  8894               	bsf	3988,4,c	;volatile
  1268                           
  1269                           ;LC-meter.c: 174: TRISC5 = 0;
  1270  001B76  9A94               	bcf	3988,5,c	;volatile
  1271                           
  1272                           ;LC-meter.c: 176: LATC5 = 0;
  1273  001B78  9A8B               	bcf	3979,5,c	;volatile
  1274                           
  1275                           ;LC-meter.c: 177: delay10ms(50);
  1276  001B7A  6A0A               	clrf	delay10ms@period_10ms+1,c
  1277  001B7C  0E32               	movlw	50
  1278  001B7E  6E09               	movwf	delay10ms@period_10ms,c
  1279  001B80  ECED  F010         	call	_delay10ms	;wreg free
  1280                           
  1281                           ; BSR set to: 0
  1282                           ;LC-meter.c: 178: LATC5 = 1;
  1283  001B84  8A8B               	bsf	3979,5,c	;volatile
  1284                           
  1285                           ; BSR set to: 0
  1286                           ;LC-meter.c: 179: delay10ms(50);
  1287  001B86  6A0A               	clrf	delay10ms@period_10ms+1,c
  1288  001B88  0E32               	movlw	50
  1289  001B8A  6E09               	movwf	delay10ms@period_10ms,c
  1290  001B8C  ECED  F010         	call	_delay10ms	;wreg free
  1291                           
  1292                           ; BSR set to: 0
  1293                           ;LC-meter.c: 180: LATC5 = 0;
  1294  001B90  9A8B               	bcf	3979,5,c	;volatile
  1295                           
  1296                           ; BSR set to: 0
  1297                           ;LC-meter.c: 181: delay10ms(50);
  1298  001B92  6A0A               	clrf	delay10ms@period_10ms+1,c
  1299  001B94  0E32               	movlw	50
  1300  001B96  6E09               	movwf	delay10ms@period_10ms,c
  1301  001B98  ECED  F010         	call	_delay10ms	;wreg free
  1302                           
  1303                           ; BSR set to: 0
  1304                           ;LC-meter.c: 182: LATC5 = 1;
  1305  001B9C  8A8B               	bsf	3979,5,c	;volatile
  1306                           
  1307                           ; BSR set to: 0
  1308                           ;LC-meter.c: 183: delay10ms(50);
  1309  001B9E  6A0A               	clrf	delay10ms@period_10ms+1,c
  1310  001BA0  0E32               	movlw	50
  1311  001BA2  6E09               	movwf	delay10ms@period_10ms,c
  1312  001BA4  ECED  F010         	call	_delay10ms	;wreg free
  1313                           
  1314                           ; BSR set to: 0
  1315                           ;LC-meter.c: 184: LATC5 = 0;
  1316  001BA8  9A8B               	bcf	3979,5,c	;volatile
  1317                           
  1318                           ; BSR set to: 0
  1319                           ;LC-meter.c: 187: ser_init();
  1320  001BAA  ECF1  F012         	call	_ser_init	;wreg free
  1321                           
  1322                           ; BSR set to: 0
  1323                           ;LC-meter.c: 192: TRISC &= ~0b01000000;
  1324  001BAE  9C94               	bcf	3988,6,c	;volatile
  1325                           
  1326                           ; BSR set to: 0
  1327                           ;LC-meter.c: 194: PEIE = 1;
  1328  001BB0  8CF2               	bsf	intcon,6,c	;volatile
  1329                           
  1330                           ; BSR set to: 0
  1331                           ;LC-meter.c: 195: GIE = 1;
  1332  001BB2  8EF2               	bsf	intcon,7,c	;volatile
  1333                           
  1334                           ; BSR set to: 0
  1335                           ;LC-meter.c: 214: delay10ms(200);
  1336  001BB4  6A0A               	clrf	delay10ms@period_10ms+1,c
  1337  001BB6  0EC8               	movlw	200
  1338  001BB8  6E09               	movwf	delay10ms@period_10ms,c
  1339  001BBA  ECED  F010         	call	_delay10ms	;wreg free
  1340                           
  1341                           ; BSR set to: 0
  1342                           ;LC-meter.c: 217: calibrate();
  1343  001BBE  EC8A  F00F         	call	_calibrate	;wreg free
  1344  001BC2                     l3741:
  1345  001BC2  FFFF               	dw	65535	; assembler added errata NOP
  1346                           
  1347                           ;LC-meter.c: 230: ser_puts("...\r\n");
  1348  001BC4  0E55               	movlw	low STR_1
  1349  001BC6  6E04               	movwf	ser_puts@s,c
  1350  001BC8  0E06               	movlw	high STR_1
  1351  001BCA  6E05               	movwf	ser_puts@s+1,c
  1352  001BCC  EC77  F012         	call	_ser_puts	;wreg free
  1353                           
  1354                           ;LC-meter.c: 231: if(LATC4)
  1355  001BD0  A88B               	btfss	3979,4,c	;volatile
  1356  001BD2  D003               	goto	l3747
  1357                           
  1358                           ;LC-meter.c: 232: measure_capacitance();
  1359  001BD4  ECCA  F005         	call	_measure_capacitance	;wreg free
  1360  001BD8  D003               	goto	l3749
  1361  001BDA                     l3747:
  1362  001BDA  FFFF               	dw	65535	; assembler added errata NOP
  1363                           
  1364                           ;LC-meter.c: 233: else
  1365                           ;LC-meter.c: 234: measure_inductance();
  1366  001BDC  EC3C  F003         	call	_measure_inductance	;wreg free
  1367  001BE0                     l3749:
  1368  001BE0  FFFF               	dw	65535	; assembler added errata NOP
  1369                           
  1370                           ;LC-meter.c: 236: indicator(1);
  1371  001BE2  0E01               	movlw	1
  1372  001BE4  EC27  F013         	call	_indicator
  1373                           
  1374                           ;LC-meter.c: 237: delay10ms(30);
  1375  001BE8  6A0A               	clrf	delay10ms@period_10ms+1,c
  1376  001BEA  0E1E               	movlw	30
  1377  001BEC  6E09               	movwf	delay10ms@period_10ms,c
  1378  001BEE  ECED  F010         	call	_delay10ms	;wreg free
  1379                           
  1380                           ;LC-meter.c: 238: indicator(0);
  1381  001BF2  0E00               	movlw	0
  1382  001BF4  EC27  F013         	call	_indicator
  1383                           
  1384                           ;LC-meter.c: 239: delay10ms(20);
  1385  001BF8  6A0A               	clrf	delay10ms@period_10ms+1,c
  1386  001BFA  0E14               	movlw	20
  1387  001BFC  6E09               	movwf	delay10ms@period_10ms,c
  1388  001BFE  ECED  F010         	call	_delay10ms	;wreg free
  1389                           
  1390                           ;LC-meter.c: 240: }
  1391  001C02  D7DF               	goto	l3741
  1392  001C04                     __end_of_main:
  1393                           	opt stack 0
  1394                           tblptru	equ	0xFF8
  1395                           tblptrh	equ	0xFF7
  1396                           tblptrl	equ	0xFF6
  1397                           tablat	equ	0xFF5
  1398                           intcon	equ	0xFF2
  1399                           intcon2	equ	0xFF1
  1400                           postinc0	equ	0xFEE
  1401                           wreg	equ	0xFE8
  1402                           indf2	equ	0xFDF
  1403                           fsr2h	equ	0xFDA
  1404                           fsr2l	equ	0xFD9
  1405                           status	equ	0xFD8
  1406                           
  1407 ;; *************** function _timer2_init *****************
  1408 ;; Defined at:
  1409 ;;		line 81 in file "C:\Users\vboxuser\Desktop\lc-meter\lib\timer.c"
  1410 ;; Parameters:    Size  Location     Type
  1411 ;;  ps_mode         1    wreg     unsigned char 
  1412 ;; Auto vars:     Size  Location     Type
  1413 ;;  ps_mode         1    3[COMRAM] unsigned char 
  1414 ;;  postscaler      1    0        unsigned char 
  1415 ;;  ps              1    4[COMRAM] unsigned char 
  1416 ;; Return value:  Size  Location     Type
  1417 ;;		None               void
  1418 ;; Registers used:
  1419 ;;		wreg, status,2, status,0
  1420 ;; Tracked objects:
  1421 ;;		On entry : F/0
  1422 ;;		On exit  : 0/0
  1423 ;;		Unchanged: 0/0
  1424 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1425 ;;      Params:         0       0       0       0       0       0       0
  1426 ;;      Locals:         3       0       0       0       0       0       0
  1427 ;;      Temps:          1       0       0       0       0       0       0
  1428 ;;      Totals:         4       0       0       0       0       0       0
  1429 ;;Total ram usage:        4 bytes
  1430 ;; Hardware stack levels used:    1
  1431 ;; Hardware stack levels required when called:    1
  1432 ;; This function calls:
  1433 ;;		Nothing
  1434 ;; This function is called by:
  1435 ;;		_main
  1436 ;; This function uses a non-reentrant model
  1437 ;;
  1438                           
  1439                           	psect	text1
  1440  0022F0                     __ptext1:
  1441                           	opt stack 0
  1442  0022F0                     _timer2_init:
  1443                           	opt stack 29
  1444                           
  1445                           ; BSR set to: 0
  1446                           ;incstack = 0
  1447  0022F0  FFFF               	dw	65535
  1448                           
  1449                           ;timer2_init@ps_mode stored from wreg
  1450  0022F2  6E04               	movwf	timer2_init@ps_mode,c
  1451                           
  1452                           ; BSR set to: 0
  1453                           ;timer.c: 82: unsigned char ps = ps_mode & 0b1111;
  1454  0022F4  5004               	movf	timer2_init@ps_mode,w,c
  1455  0022F6  0B0F               	andlw	15
  1456  0022F8  6E05               	movwf	timer2_init@ps,c
  1457                           
  1458                           ; BSR set to: 0
  1459                           ;timer.c: 86: TOUTPS0 = postscaler & 1;
  1460                           
  1461                           ; BSR set to: 0
  1462  0022FA  96CA               	bcf	4042,3,c	;volatile
  1463                           
  1464                           ;timer.c: 87: TOUTPS1 = (postscaler >> 1) & 1;
  1465  0022FC  98CA               	bcf	4042,4,c	;volatile
  1466                           
  1467                           ;timer.c: 88: TOUTPS2 = (postscaler >> 2) & 1;
  1468  0022FE  9ACA               	bcf	4042,5,c	;volatile
  1469                           
  1470                           ;timer.c: 90: T2CKPS0 = (ps >> 1) & 1;
  1471  002300  C005  F003         	movff	timer2_init@ps,??_timer2_init
  1472  002304  90D8               	bcf	status,0,c
  1473  002306  3203               	rrcf	??_timer2_init,f,c
  1474  002308  3003               	rrcf	??_timer2_init,w,c
  1475  00230A  B0D8               	btfsc	status,0,c
  1476  00230C  D002               	bra	u2315
  1477  00230E  90CA               	bcf	4042,0,c	;volatile
  1478  002310  D001               	bra	u2316
  1479  002312                     u2315:
  1480  002312  80CA               	bsf	4042,0,c	;volatile
  1481  002314                     u2316:
  1482                           
  1483                           ;timer.c: 91: T2CKPS1 = (ps >> 2) & 1;
  1484  002314  C005  F003         	movff	timer2_init@ps,??_timer2_init
  1485  002318  90D8               	bcf	status,0,c
  1486  00231A  3203               	rrcf	??_timer2_init,f,c
  1487  00231C  90D8               	bcf	status,0,c
  1488  00231E  3203               	rrcf	??_timer2_init,f,c
  1489  002320  3003               	rrcf	??_timer2_init,w,c
  1490  002322  B0D8               	btfsc	status,0,c
  1491  002324  D002               	bra	u2325
  1492  002326  92CA               	bcf	4042,1,c	;volatile
  1493  002328  D001               	bra	u2326
  1494  00232A                     u2325:
  1495  00232A  82CA               	bsf	4042,1,c	;volatile
  1496  00232C                     u2326:
  1497                           
  1498                           ;timer.c: 93: TMR2 = 0;
  1499  00232C  6ACC               	clrf	4044,c	;volatile
  1500                           
  1501                           ;timer.c: 95: TMR2ON = 1;
  1502  00232E  84CA               	bsf	4042,2,c	;volatile
  1503                           
  1504                           ;timer.c: 97: TMR2IF = 0;
  1505  002330  929E               	bcf	3998,1,c	;volatile
  1506                           
  1507                           ;timer.c: 98: TMR2IE = !!(ps_mode & 0x80);
  1508  002332  AE04               	btfss	timer2_init@ps_mode,7,c
  1509  002334  D002               	goto	u2330
  1510  002336  829D               	bsf	3997,1,c	;volatile
  1511  002338  D002               	goto	l326
  1512  00233A                     u2330:
  1513  00233A  FFFF               	dw	65535	; assembler added errata NOP
  1514  00233C  929D               	bcf	3997,1,c	;volatile
  1515  00233E                     l326:
  1516  00233E  FFFF               	dw	65535	; assembler added errata NOP
  1517  002340  0012               	return		;funcret
  1518  002342  FFFF               	dw	65535	; errata NOP
  1519  002344                     __end_of_timer2_init:
  1520                           	opt stack 0
  1521                           tblptru	equ	0xFF8
  1522                           tblptrh	equ	0xFF7
  1523                           tblptrl	equ	0xFF6
  1524                           tablat	equ	0xFF5
  1525                           intcon	equ	0xFF2
  1526                           intcon2	equ	0xFF1
  1527                           postinc0	equ	0xFEE
  1528                           wreg	equ	0xFE8
  1529                           indf2	equ	0xFDF
  1530                           fsr2h	equ	0xFDA
  1531                           fsr2l	equ	0xFD9
  1532                           status	equ	0xFD8
  1533                           
  1534 ;; *************** function _ser_init *****************
  1535 ;; Defined at:
  1536 ;;		line 125 in file "C:\Users\vboxuser\Desktop\lc-meter\lib\ser.c"
  1537 ;; Parameters:    Size  Location     Type
  1538 ;;		None
  1539 ;; Auto vars:     Size  Location     Type
  1540 ;;		None
  1541 ;; Return value:  Size  Location     Type
  1542 ;;		None               void
  1543 ;; Registers used:
  1544 ;;		wreg, status,2
  1545 ;; Tracked objects:
  1546 ;;		On entry : F/0
  1547 ;;		On exit  : F/0
  1548 ;;		Unchanged: F/0
  1549 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1550 ;;      Params:         0       0       0       0       0       0       0
  1551 ;;      Locals:         0       0       0       0       0       0       0
  1552 ;;      Temps:          0       0       0       0       0       0       0
  1553 ;;      Totals:         0       0       0       0       0       0       0
  1554 ;;Total ram usage:        0 bytes
  1555 ;; Hardware stack levels used:    1
  1556 ;; Hardware stack levels required when called:    1
  1557 ;; This function calls:
  1558 ;;		Nothing
  1559 ;; This function is called by:
  1560 ;;		_main
  1561 ;; This function uses a non-reentrant model
  1562 ;;
  1563                           
  1564                           	psect	text2
  1565  0025E2                     __ptext2:
  1566                           	opt stack 0
  1567  0025E2                     _ser_init:
  1568                           	opt stack 29
  1569                           
  1570                           ;incstack = 0
  1571  0025E2  FFFF               	dw	65535
  1572                           
  1573                           ; BSR set to: 0
  1574                           ;ser.c: 128: TRISC6 = 1;
  1575  0025E4  8C94               	bsf	3988,6,c	;volatile
  1576                           
  1577                           ;ser.c: 129: LATC7 = 1;
  1578  0025E6  8E8B               	bsf	3979,7,c	;volatile
  1579                           
  1580                           ;ser.c: 131: BRGH = 1;
  1581  0025E8  84AC               	bsf	4012,2,c	;volatile
  1582                           
  1583                           ; BSR set to: 0
  1584                           ;ser.c: 136: SPBRG = ser_brg;
  1585  0025EA  0E1F               	movlw	31
  1586  0025EC  6EAF               	movwf	4015,c	;volatile
  1587                           
  1588                           ; BSR set to: 0
  1589                           ;ser.c: 139: TX9 = 0;
  1590  0025EE  9CAC               	bcf	4012,6,c	;volatile
  1591                           
  1592                           ; BSR set to: 0
  1593                           ;ser.c: 140: RX9 = 0;
  1594  0025F0  9CAB               	bcf	4011,6,c	;volatile
  1595                           
  1596                           ; BSR set to: 0
  1597                           ;ser.c: 142: SYNC = 0;
  1598  0025F2  98AC               	bcf	4012,4,c	;volatile
  1599                           
  1600                           ; BSR set to: 0
  1601                           ;ser.c: 143: SPEN = 1;
  1602  0025F4  8EAB               	bsf	4011,7,c	;volatile
  1603                           
  1604                           ; BSR set to: 0
  1605                           ;ser.c: 144: CREN = 1;
  1606  0025F6  88AB               	bsf	4011,4,c	;volatile
  1607                           
  1608                           ; BSR set to: 0
  1609                           ;ser.c: 145: TXIE = 0;
  1610  0025F8  989D               	bcf	3997,4,c	;volatile
  1611                           
  1612                           ; BSR set to: 0
  1613                           ;ser.c: 147: TXEN = 1;
  1614  0025FA  8AAC               	bsf	4012,5,c	;volatile
  1615                           
  1616                           ; BSR set to: 0
  1617                           ;ser.c: 148: PEIE = 1;
  1618  0025FC  8CF2               	bsf	intcon,6,c	;volatile
  1619                           
  1620                           ; BSR set to: 0
  1621                           ;ser.c: 150: rxiptr = rxoptr = txiptr = txoptr = 0;
  1622  0025FE  6A76               	clrf	_txoptr,c	;volatile
  1623  002600  6A75               	clrf	_txiptr,c	;volatile
  1624  002602  6A73               	clrf	_rxoptr,c	;volatile
  1625  002604  6A72               	clrf	_rxiptr,c	;volatile
  1626                           
  1627                           ; BSR set to: 0
  1628  002606  0012               	return		;funcret
  1629  002608  FFFF               	dw	65535	; errata NOP
  1630  00260A                     __end_of_ser_init:
  1631                           	opt stack 0
  1632                           tblptru	equ	0xFF8
  1633                           tblptrh	equ	0xFF7
  1634                           tblptrl	equ	0xFF6
  1635                           tablat	equ	0xFF5
  1636                           intcon	equ	0xFF2
  1637                           intcon2	equ	0xFF1
  1638                           postinc0	equ	0xFEE
  1639                           wreg	equ	0xFE8
  1640                           indf2	equ	0xFDF
  1641                           fsr2h	equ	0xFDA
  1642                           fsr2l	equ	0xFD9
  1643                           status	equ	0xFD8
  1644                           
  1645 ;; *************** function _measure_inductance *****************
  1646 ;; Defined at:
  1647 ;;		line 469 in file "C:\Users\vboxuser\Desktop\lc-meter\src\LC-meter.c"
  1648 ;; Parameters:    Size  Location     Type
  1649 ;;		None
  1650 ;; Auto vars:     Size  Location     Type
  1651 ;;  Lin             4   39[BANK0 ] unsigned char 
  1652 ;;  denominator     4    4[BANK0 ] unsigned char 
  1653 ;;  numerator       4    0[BANK0 ] unsigned char 
  1654 ;;  var             2   37[BANK0 ] unsigned short 
  1655 ;;  unit            1   24[BANK0 ] unsigned char 
  1656 ;; Return value:  Size  Location     Type
  1657 ;;		None               void
  1658 ;; Registers used:
  1659 ;;		wreg, status,2, status,0, cstack
  1660 ;; Tracked objects:
  1661 ;;		On entry : 0/0
  1662 ;;		On exit  : E/0
  1663 ;;		Unchanged: 0/0
  1664 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1665 ;;      Params:         0       0       0       0       0       0       0
  1666 ;;      Locals:         0      43       0       0       0       0       0
  1667 ;;      Temps:          0       0       0       0       0       0       0
  1668 ;;      Totals:         0      43       0       0       0       0       0
  1669 ;;Total ram usage:       43 bytes
  1670 ;; Hardware stack levels used:    1
  1671 ;; Hardware stack levels required when called:    4
  1672 ;; This function calls:
  1673 ;;		___fldiv
  1674 ;;		___flge
  1675 ;;		___flmul
  1676 ;;		___flsub
  1677 ;;		___fltol
  1678 ;;		___lwtofl
  1679 ;;		_measure_freq
  1680 ;;		_print_reading
  1681 ;;		_print_unit
  1682 ;; This function is called by:
  1683 ;;		_main
  1684 ;; This function uses a non-reentrant model
  1685 ;;
  1686                           
  1687                           	psect	text3
  1688  000678                     __ptext3:
  1689                           	opt stack 0
  1690  000678                     _measure_inductance:
  1691                           	opt stack 26
  1692                           
  1693                           ; BSR set to: 0
  1694                           ;incstack = 0
  1695  000678  FFFF               	dw	65535
  1696                           
  1697                           ;LC-meter.c: 470: unsigned char unit;
  1698                           ;LC-meter.c: 471: unsigned short int var;
  1699                           ;LC-meter.c: 473: double Lin, numerator, denominator;
  1700                           ;LC-meter.c: 479: var = measure_freq();
  1701  00067A  EC76  F010         	call	_measure_freq	;wreg free
  1702  00067E  C003  F0DF         	movff	?_measure_freq,measure_inductance@var
  1703  000682  C004  F0E0         	movff	?_measure_freq+1,measure_inductance@var+1
  1704                           
  1705                           ;LC-meter.c: 481: F3 = (double)var;
  1706  000686  C0DF  F00D         	movff	measure_inductance@var,___lwtofl@c
  1707  00068A  C0E0  F00E         	movff	measure_inductance@var+1,___lwtofl@c+1
  1708  00068E  ECC4  F012         	call	___lwtofl	;wreg free
  1709  000692  C00D  F0A4         	movff	?___lwtofl,_F3
  1710  000696  C00E  F0A5         	movff	?___lwtofl+1,_F3+1
  1711  00069A  C00F  F0A6         	movff	?___lwtofl+2,_F3+2
  1712  00069E  C010  F0A7         	movff	?___lwtofl+3,_F3+3
  1713                           
  1714                           ;LC-meter.c: 482: if(F3 > F1)
  1715  0006A2  C0B6  F003         	movff	_F1,___flge@ff1
  1716  0006A6  C0B7  F004         	movff	_F1+1,___flge@ff1+1
  1717  0006AA  C0B8  F005         	movff	_F1+2,___flge@ff1+2
  1718  0006AE  C0B9  F006         	movff	_F1+3,___flge@ff1+3
  1719  0006B2  C0A4  F007         	movff	_F3,___flge@ff2
  1720  0006B6  C0A5  F008         	movff	_F3+1,___flge@ff2+1
  1721  0006BA  C0A6  F009         	movff	_F3+2,___flge@ff2+2
  1722  0006BE  C0A7  F00A         	movff	_F3+3,___flge@ff2+3
  1723  0006C2  EC4D  F011         	call	___flge	;wreg free
  1724  0006C6  E208               	bc	l3657
  1725                           
  1726                           ;LC-meter.c: 483: F3 = F1;
  1727  0006C8  C0B6  F0A4         	movff	_F1,_F3
  1728  0006CC  C0B7  F0A5         	movff	_F1+1,_F3+1
  1729  0006D0  C0B8  F0A6         	movff	_F1+2,_F3+2
  1730  0006D4  C0B9  F0A7         	movff	_F1+3,_F3+3
  1731  0006D8                     l3657:
  1732                           
  1733                           ;LC-meter.c: 485: numerator = ((F1 * F1) - (F3 * F3)) * ((F1 * F1) - (F2 - F2)) * (100 *
      +                           100);
  1734  0006D8  C0A0  F03B         	movff	_F2,___flsub@f2
  1735  0006DC  C0A1  F03C         	movff	_F2+1,___flsub@f2+1
  1736  0006E0  C0A2  F03D         	movff	_F2+2,___flsub@f2+2
  1737  0006E4  C0A3  F03E         	movff	_F2+3,___flsub@f2+3
  1738  0006E8  C0A0  F037         	movff	_F2,___flsub@f1
  1739  0006EC  C0A1  F038         	movff	_F2+1,___flsub@f1+1
  1740  0006F0  C0A2  F039         	movff	_F2+2,___flsub@f1+2
  1741  0006F4  C0A3  F03A         	movff	_F2+3,___flsub@f1+3
  1742  0006F8  EC17  F012         	call	___flsub	;wreg free
  1743  0006FC  C037  F0C2         	movff	?___flsub,_measure_inductance$926
  1744  000700  C038  F0C3         	movff	?___flsub+1,_measure_inductance$926+1
  1745  000704  C039  F0C4         	movff	?___flsub+2,_measure_inductance$926+2
  1746  000708  C03A  F0C5         	movff	?___flsub+3,_measure_inductance$926+3
  1747                           
  1748                           ;LC-meter.c: 485: numerator = ((F1 * F1) - (F3 * F3)) * ((F1 * F1) - (F2 - F2)) * (100 *
      +                           100);
  1749  00070C  C0C2  F03B         	movff	_measure_inductance$926,___flsub@f2
  1750  000710  C0C3  F03C         	movff	_measure_inductance$926+1,___flsub@f2+1
  1751  000714  C0C4  F03D         	movff	_measure_inductance$926+2,___flsub@f2+2
  1752  000718  C0C5  F03E         	movff	_measure_inductance$926+3,___flsub@f2+3
  1753  00071C  C0B6  F020         	movff	_F1,___flmul@f2
  1754  000720  C0B7  F021         	movff	_F1+1,___flmul@f2+1
  1755  000724  C0B8  F022         	movff	_F1+2,___flmul@f2+2
  1756  000728  C0B9  F023         	movff	_F1+3,___flmul@f2+3
  1757  00072C  C0B6  F01C         	movff	_F1,___flmul@f1
  1758  000730  C0B7  F01D         	movff	_F1+1,___flmul@f1+1
  1759  000734  C0B8  F01E         	movff	_F1+2,___flmul@f1+2
  1760  000738  C0B9  F01F         	movff	_F1+3,___flmul@f1+3
  1761  00073C  EC02  F00E         	call	___flmul	;wreg free
  1762  000740  C01C  F037         	movff	?___flmul,___flsub@f1
  1763  000744  C01D  F038         	movff	?___flmul+1,___flsub@f1+1
  1764  000748  C01E  F039         	movff	?___flmul+2,___flsub@f1+2
  1765  00074C  C01F  F03A         	movff	?___flmul+3,___flsub@f1+3
  1766  000750  EC17  F012         	call	___flsub	;wreg free
  1767  000754  C037  F0D3         	movff	?___flsub,_measure_inductance$927
  1768  000758  C038  F0D4         	movff	?___flsub+1,_measure_inductance$927+1
  1769  00075C  C039  F0D5         	movff	?___flsub+2,_measure_inductance$927+2
  1770  000760  C03A  F0D6         	movff	?___flsub+3,_measure_inductance$927+3
  1771                           
  1772                           ;LC-meter.c: 485: numerator = ((F1 * F1) - (F3 * F3)) * ((F1 * F1) - (F2 - F2)) * (100 *
      +                           100);
  1773  000764  C0A4  F020         	movff	_F3,___flmul@f2
  1774  000768  C0A5  F021         	movff	_F3+1,___flmul@f2+1
  1775  00076C  C0A6  F022         	movff	_F3+2,___flmul@f2+2
  1776  000770  C0A7  F023         	movff	_F3+3,___flmul@f2+3
  1777  000774  C0A4  F01C         	movff	_F3,___flmul@f1
  1778  000778  C0A5  F01D         	movff	_F3+1,___flmul@f1+1
  1779  00077C  C0A6  F01E         	movff	_F3+2,___flmul@f1+2
  1780  000780  C0A7  F01F         	movff	_F3+3,___flmul@f1+3
  1781  000784  EC02  F00E         	call	___flmul	;wreg free
  1782  000788  C01C  F03B         	movff	?___flmul,___flsub@f2
  1783  00078C  C01D  F03C         	movff	?___flmul+1,___flsub@f2+1
  1784  000790  C01E  F03D         	movff	?___flmul+2,___flsub@f2+2
  1785  000794  C01F  F03E         	movff	?___flmul+3,___flsub@f2+3
  1786  000798  C0B6  F020         	movff	_F1,___flmul@f2
  1787  00079C  C0B7  F021         	movff	_F1+1,___flmul@f2+1
  1788  0007A0  C0B8  F022         	movff	_F1+2,___flmul@f2+2
  1789  0007A4  C0B9  F023         	movff	_F1+3,___flmul@f2+3
  1790  0007A8  C0B6  F01C         	movff	_F1,___flmul@f1
  1791  0007AC  C0B7  F01D         	movff	_F1+1,___flmul@f1+1
  1792  0007B0  C0B8  F01E         	movff	_F1+2,___flmul@f1+2
  1793  0007B4  C0B9  F01F         	movff	_F1+3,___flmul@f1+3
  1794  0007B8  EC02  F00E         	call	___flmul	;wreg free
  1795  0007BC  C01C  F037         	movff	?___flmul,___flsub@f1
  1796  0007C0  C01D  F038         	movff	?___flmul+1,___flsub@f1+1
  1797  0007C4  C01E  F039         	movff	?___flmul+2,___flsub@f1+2
  1798  0007C8  C01F  F03A         	movff	?___flmul+3,___flsub@f1+3
  1799  0007CC  EC17  F012         	call	___flsub	;wreg free
  1800  0007D0  C037  F0D7         	movff	?___flsub,_measure_inductance$928
  1801  0007D4  C038  F0D8         	movff	?___flsub+1,_measure_inductance$928+1
  1802  0007D8  C039  F0D9         	movff	?___flsub+2,_measure_inductance$928+2
  1803  0007DC  C03A  F0DA         	movff	?___flsub+3,_measure_inductance$928+3
  1804                           
  1805                           ;LC-meter.c: 485: numerator = ((F1 * F1) - (F3 * F3)) * ((F1 * F1) - (F2 - F2)) * (100 *
      +                           100);
  1806  0007E0  C0D3  F020         	movff	_measure_inductance$927,___flmul@f2
  1807  0007E4  C0D4  F021         	movff	_measure_inductance$927+1,___flmul@f2+1
  1808  0007E8  C0D5  F022         	movff	_measure_inductance$927+2,___flmul@f2+2
  1809  0007EC  C0D6  F023         	movff	_measure_inductance$927+3,___flmul@f2+3
  1810  0007F0  C0D7  F01C         	movff	_measure_inductance$928,___flmul@f1
  1811  0007F4  C0D8  F01D         	movff	_measure_inductance$928+1,___flmul@f1+1
  1812  0007F8  C0D9  F01E         	movff	_measure_inductance$928+2,___flmul@f1+2
  1813  0007FC  C0DA  F01F         	movff	_measure_inductance$928+3,___flmul@f1+3
  1814  000800  EC02  F00E         	call	___flmul	;wreg free
  1815  000804  C01C  F0DB         	movff	?___flmul,_measure_inductance$929
  1816  000808  C01D  F0DC         	movff	?___flmul+1,_measure_inductance$929+1
  1817  00080C  C01E  F0DD         	movff	?___flmul+2,_measure_inductance$929+2
  1818  000810  C01F  F0DE         	movff	?___flmul+3,_measure_inductance$929+3
  1819                           
  1820                           ;LC-meter.c: 485: numerator = ((F1 * F1) - (F3 * F3)) * ((F1 * F1) - (F2 - F2)) * (100 *
      +                           100);
  1821  000814  C0DB  F01C         	movff	_measure_inductance$929,___flmul@f1
  1822  000818  C0DC  F01D         	movff	_measure_inductance$929+1,___flmul@f1+1
  1823  00081C  C0DD  F01E         	movff	_measure_inductance$929+2,___flmul@f1+2
  1824  000820  C0DE  F01F         	movff	_measure_inductance$929+3,___flmul@f1+3
  1825  000824  0E00               	movlw	0
  1826  000826  6E20               	movwf	___flmul@f2,c
  1827  000828  0E40               	movlw	64
  1828  00082A  6E21               	movwf	___flmul@f2+1,c
  1829  00082C  0E1C               	movlw	28
  1830  00082E  6E22               	movwf	___flmul@f2+2,c
  1831  000830  0E46               	movlw	70
  1832  000832  6E23               	movwf	___flmul@f2+3,c
  1833  000834  EC02  F00E         	call	___flmul	;wreg free
  1834  000838  C01C  F0BA         	movff	?___flmul,measure_inductance@numerator
  1835  00083C  C01D  F0BB         	movff	?___flmul+1,measure_inductance@numerator+1
  1836  000840  C01E  F0BC         	movff	?___flmul+2,measure_inductance@numerator+2
  1837  000844  C01F  F0BD         	movff	?___flmul+3,measure_inductance@numerator+3
  1838                           
  1839                           ;LC-meter.c: 487: denominator = 4 * 3.14159265358979323846l * 3.14159265358979323846l * 
      +                          F1 * F1 * F2 * F2 * F3 * F3 * CCal;
  1840  000848  C0B6  F020         	movff	_F1,___flmul@f2
  1841  00084C  C0B7  F021         	movff	_F1+1,___flmul@f2+1
  1842  000850  C0B8  F022         	movff	_F1+2,___flmul@f2+2
  1843  000854  C0B9  F023         	movff	_F1+3,___flmul@f2+3
  1844  000858  C0B6  F01C         	movff	_F1,___flmul@f1
  1845  00085C  C0B7  F01D         	movff	_F1+1,___flmul@f1+1
  1846  000860  C0B8  F01E         	movff	_F1+2,___flmul@f1+2
  1847  000864  C0B9  F01F         	movff	_F1+3,___flmul@f1+3
  1848  000868  EC02  F00E         	call	___flmul	;wreg free
  1849  00086C  C01C  F0C6         	movff	?___flmul,_measure_inductance$930
  1850  000870  C01D  F0C7         	movff	?___flmul+1,_measure_inductance$930+1
  1851  000874  C01E  F0C8         	movff	?___flmul+2,_measure_inductance$930+2
  1852  000878  C01F  F0C9         	movff	?___flmul+3,_measure_inductance$930+3
  1853                           
  1854                           ;LC-meter.c: 487: denominator = 4 * 3.14159265358979323846l * 3.14159265358979323846l * 
      +                          F1 * F1 * F2 * F2 * F3 * F3 * CCal;
  1855  00087C  C0A0  F020         	movff	_F2,___flmul@f2
  1856  000880  C0A1  F021         	movff	_F2+1,___flmul@f2+1
  1857  000884  C0A2  F022         	movff	_F2+2,___flmul@f2+2
  1858  000888  C0A3  F023         	movff	_F2+3,___flmul@f2+3
  1859  00088C  C0C6  F01C         	movff	_measure_inductance$930,___flmul@f1
  1860  000890  C0C7  F01D         	movff	_measure_inductance$930+1,___flmul@f1+1
  1861  000894  C0C8  F01E         	movff	_measure_inductance$930+2,___flmul@f1+2
  1862  000898  C0C9  F01F         	movff	_measure_inductance$930+3,___flmul@f1+3
  1863  00089C  EC02  F00E         	call	___flmul	;wreg free
  1864  0008A0  C01C  F0D3         	movff	?___flmul,_measure_inductance$927
  1865  0008A4  C01D  F0D4         	movff	?___flmul+1,_measure_inductance$927+1
  1866  0008A8  C01E  F0D5         	movff	?___flmul+2,_measure_inductance$927+2
  1867  0008AC  C01F  F0D6         	movff	?___flmul+3,_measure_inductance$927+3
  1868                           
  1869                           ;LC-meter.c: 487: denominator = 4 * 3.14159265358979323846l * 3.14159265358979323846l * 
      +                          F1 * F1 * F2 * F2 * F3 * F3 * CCal;
  1870  0008B0  C0A0  F020         	movff	_F2,___flmul@f2
  1871  0008B4  C0A1  F021         	movff	_F2+1,___flmul@f2+1
  1872  0008B8  C0A2  F022         	movff	_F2+2,___flmul@f2+2
  1873  0008BC  C0A3  F023         	movff	_F2+3,___flmul@f2+3
  1874  0008C0  C0D3  F01C         	movff	_measure_inductance$927,___flmul@f1
  1875  0008C4  C0D4  F01D         	movff	_measure_inductance$927+1,___flmul@f1+1
  1876  0008C8  C0D5  F01E         	movff	_measure_inductance$927+2,___flmul@f1+2
  1877  0008CC  C0D6  F01F         	movff	_measure_inductance$927+3,___flmul@f1+3
  1878  0008D0  EC02  F00E         	call	___flmul	;wreg free
  1879  0008D4  C01C  F0D7         	movff	?___flmul,_measure_inductance$928
  1880  0008D8  C01D  F0D8         	movff	?___flmul+1,_measure_inductance$928+1
  1881  0008DC  C01E  F0D9         	movff	?___flmul+2,_measure_inductance$928+2
  1882  0008E0  C01F  F0DA         	movff	?___flmul+3,_measure_inductance$928+3
  1883                           
  1884                           ;LC-meter.c: 487: denominator = 4 * 3.14159265358979323846l * 3.14159265358979323846l * 
      +                          F1 * F1 * F2 * F2 * F3 * F3 * CCal;
  1885  0008E4  C0A4  F020         	movff	_F3,___flmul@f2
  1886  0008E8  C0A5  F021         	movff	_F3+1,___flmul@f2+1
  1887  0008EC  C0A6  F022         	movff	_F3+2,___flmul@f2+2
  1888  0008F0  C0A7  F023         	movff	_F3+3,___flmul@f2+3
  1889  0008F4  C0D7  F01C         	movff	_measure_inductance$928,___flmul@f1
  1890  0008F8  C0D8  F01D         	movff	_measure_inductance$928+1,___flmul@f1+1
  1891  0008FC  C0D9  F01E         	movff	_measure_inductance$928+2,___flmul@f1+2
  1892  000900  C0DA  F01F         	movff	_measure_inductance$928+3,___flmul@f1+3
  1893  000904  EC02  F00E         	call	___flmul	;wreg free
  1894  000908  C01C  F0DB         	movff	?___flmul,_measure_inductance$929
  1895  00090C  C01D  F0DC         	movff	?___flmul+1,_measure_inductance$929+1
  1896  000910  C01E  F0DD         	movff	?___flmul+2,_measure_inductance$929+2
  1897  000914  C01F  F0DE         	movff	?___flmul+3,_measure_inductance$929+3
  1898                           
  1899                           ;LC-meter.c: 487: denominator = 4 * 3.14159265358979323846l * 3.14159265358979323846l * 
      +                          F1 * F1 * F2 * F2 * F3 * F3 * CCal;
  1900  000918  C0A4  F020         	movff	_F3,___flmul@f2
  1901  00091C  C0A5  F021         	movff	_F3+1,___flmul@f2+1
  1902  000920  C0A6  F022         	movff	_F3+2,___flmul@f2+2
  1903  000924  C0A7  F023         	movff	_F3+3,___flmul@f2+3
  1904  000928  C0DB  F01C         	movff	_measure_inductance$929,___flmul@f1
  1905  00092C  C0DC  F01D         	movff	_measure_inductance$929+1,___flmul@f1+1
  1906  000930  C0DD  F01E         	movff	_measure_inductance$929+2,___flmul@f1+2
  1907  000934  C0DE  F01F         	movff	_measure_inductance$929+3,___flmul@f1+3
  1908  000938  EC02  F00E         	call	___flmul	;wreg free
  1909  00093C  C01C  F0CA         	movff	?___flmul,_measure_inductance$931
  1910  000940  C01D  F0CB         	movff	?___flmul+1,_measure_inductance$931+1
  1911  000944  C01E  F0CC         	movff	?___flmul+2,_measure_inductance$931+2
  1912  000948  C01F  F0CD         	movff	?___flmul+3,_measure_inductance$931+3
  1913                           
  1914                           ;LC-meter.c: 487: denominator = 4 * 3.14159265358979323846l * 3.14159265358979323846l * 
      +                          F1 * F1 * F2 * F2 * F3 * F3 * CCal;
  1915  00094C  C0EA  F020         	movff	_CCal,___flmul@f2
  1916  000950  C0EB  F021         	movff	_CCal+1,___flmul@f2+1
  1917  000954  C0EC  F022         	movff	_CCal+2,___flmul@f2+2
  1918  000958  C0ED  F023         	movff	_CCal+3,___flmul@f2+3
  1919  00095C  C0CA  F01C         	movff	_measure_inductance$931,___flmul@f1
  1920  000960  C0CB  F01D         	movff	_measure_inductance$931+1,___flmul@f1+1
  1921  000964  C0CC  F01E         	movff	_measure_inductance$931+2,___flmul@f1+2
  1922  000968  C0CD  F01F         	movff	_measure_inductance$931+3,___flmul@f1+3
  1923  00096C  EC02  F00E         	call	___flmul	;wreg free
  1924  000970  C01C  F0CE         	movff	?___flmul,_measure_inductance$932
  1925  000974  C01D  F0CF         	movff	?___flmul+1,_measure_inductance$932+1
  1926  000978  C01E  F0D0         	movff	?___flmul+2,_measure_inductance$932+2
  1927  00097C  C01F  F0D1         	movff	?___flmul+3,_measure_inductance$932+3
  1928                           
  1929                           ;LC-meter.c: 487: denominator = 4 * 3.14159265358979323846l * 3.14159265358979323846l * 
      +                          F1 * F1 * F2 * F2 * F3 * F3 * CCal;
  1930  000980  C0CE  F01C         	movff	_measure_inductance$932,___flmul@f1
  1931  000984  C0CF  F01D         	movff	_measure_inductance$932+1,___flmul@f1+1
  1932  000988  C0D0  F01E         	movff	_measure_inductance$932+2,___flmul@f1+2
  1933  00098C  C0D1  F01F         	movff	_measure_inductance$932+3,___flmul@f1+3
  1934  000990  0EE6               	movlw	230
  1935  000992  6E20               	movwf	___flmul@f2,c
  1936  000994  0EE9               	movlw	233
  1937  000996  6E21               	movwf	___flmul@f2+1,c
  1938  000998  0E1D               	movlw	29
  1939  00099A  6E22               	movwf	___flmul@f2+2,c
  1940  00099C  0E42               	movlw	66
  1941  00099E  6E23               	movwf	___flmul@f2+3,c
  1942  0009A0  EC02  F00E         	call	___flmul	;wreg free
  1943  0009A4  C01C  F0BE         	movff	?___flmul,measure_inductance@denominator
  1944  0009A8  C01D  F0BF         	movff	?___flmul+1,measure_inductance@denominator+1
  1945  0009AC  C01E  F0C0         	movff	?___flmul+2,measure_inductance@denominator+2
  1946  0009B0  C01F  F0C1         	movff	?___flmul+3,measure_inductance@denominator+3
  1947                           
  1948                           ;LC-meter.c: 489: Lin = (numerator / denominator) * 1e+15l;
  1949  0009B4  C0BE  F011         	movff	measure_inductance@denominator,___fldiv@f1
  1950  0009B8  C0BF  F012         	movff	measure_inductance@denominator+1,___fldiv@f1+1
  1951  0009BC  C0C0  F013         	movff	measure_inductance@denominator+2,___fldiv@f1+2
  1952  0009C0  C0C1  F014         	movff	measure_inductance@denominator+3,___fldiv@f1+3
  1953  0009C4  C0BA  F00D         	movff	measure_inductance@numerator,___fldiv@f2
  1954  0009C8  C0BB  F00E         	movff	measure_inductance@numerator+1,___fldiv@f2+1
  1955  0009CC  C0BC  F00F         	movff	measure_inductance@numerator+2,___fldiv@f2+2
  1956  0009D0  C0BD  F010         	movff	measure_inductance@numerator+3,___fldiv@f2+3
  1957  0009D4  EC33  F00F         	call	___fldiv	;wreg free
  1958  0009D8  C00D  F01C         	movff	?___fldiv,___flmul@f1
  1959  0009DC  C00E  F01D         	movff	?___fldiv+1,___flmul@f1+1
  1960  0009E0  C00F  F01E         	movff	?___fldiv+2,___flmul@f1+2
  1961  0009E4  C010  F01F         	movff	?___fldiv+3,___flmul@f1+3
  1962  0009E8  0EA9               	movlw	169
  1963  0009EA  6E20               	movwf	___flmul@f2,c
  1964  0009EC  0E5F               	movlw	95
  1965  0009EE  6E21               	movwf	___flmul@f2+1,c
  1966  0009F0  0E63               	movlw	99
  1967  0009F2  6E22               	movwf	___flmul@f2+2,c
  1968  0009F4  0E58               	movlw	88
  1969  0009F6  6E23               	movwf	___flmul@f2+3,c
  1970  0009F8  EC02  F00E         	call	___flmul	;wreg free
  1971  0009FC  C01C  F0E1         	movff	?___flmul,measure_inductance@Lin
  1972  000A00  C01D  F0E2         	movff	?___flmul+1,measure_inductance@Lin+1
  1973  000A04  C01E  F0E3         	movff	?___flmul+2,measure_inductance@Lin+2
  1974  000A08  C01F  F0E4         	movff	?___flmul+3,measure_inductance@Lin+3
  1975                           
  1976                           ;LC-meter.c: 491: if(Lin > 999) {
  1977  000A0C  6A03               	clrf	___flge@ff1,c
  1978  000A0E  0EC0               	movlw	192
  1979  000A10  6E04               	movwf	___flge@ff1+1,c
  1980  000A12  0E79               	movlw	121
  1981  000A14  6E05               	movwf	___flge@ff1+2,c
  1982  000A16  0E44               	movlw	68
  1983  000A18  6E06               	movwf	___flge@ff1+3,c
  1984  000A1A  C0E1  F007         	movff	measure_inductance@Lin,___flge@ff2
  1985  000A1E  C0E2  F008         	movff	measure_inductance@Lin+1,___flge@ff2+1
  1986  000A22  C0E3  F009         	movff	measure_inductance@Lin+2,___flge@ff2+2
  1987  000A26  C0E4  F00A         	movff	measure_inductance@Lin+3,___flge@ff2+3
  1988  000A2A  EC4D  F011         	call	___flge	;wreg free
  1989  000A2E  E27A               	bc	l3675
  1990                           
  1991                           ;LC-meter.c: 492: if(Lin > (999e+03l)) {
  1992  000A30  0E80               	movlw	128
  1993  000A32  6E03               	movwf	___flge@ff1,c
  1994  000A34  0EE5               	movlw	229
  1995  000A36  6E04               	movwf	___flge@ff1+1,c
  1996  000A38  0E73               	movlw	115
  1997  000A3A  6E05               	movwf	___flge@ff1+2,c
  1998  000A3C  0E49               	movlw	73
  1999  000A3E  6E06               	movwf	___flge@ff1+3,c
  2000  000A40  C0E1  F007         	movff	measure_inductance@Lin,___flge@ff2
  2001  000A44  C0E2  F008         	movff	measure_inductance@Lin+1,___flge@ff2+1
  2002  000A48  C0E3  F009         	movff	measure_inductance@Lin+2,___flge@ff2+2
  2003  000A4C  C0E4  F00A         	movff	measure_inductance@Lin+3,___flge@ff2+3
  2004  000A50  EC4D  F011         	call	___flge	;wreg free
  2005  000A54  E24C               	bc	l3671
  2006                           
  2007                           ;LC-meter.c: 493: if(Lin > (999e+06l)) {
  2008  000A56  0E1F               	movlw	31
  2009  000A58  6E03               	movwf	___flge@ff1,c
  2010  000A5A  0E2E               	movlw	46
  2011  000A5C  6E04               	movwf	___flge@ff1+1,c
  2012  000A5E  0E6E               	movlw	110
  2013  000A60  6E05               	movwf	___flge@ff1+2,c
  2014  000A62  0E4E               	movlw	78
  2015  000A64  6E06               	movwf	___flge@ff1+3,c
  2016  000A66  C0E1  F007         	movff	measure_inductance@Lin,___flge@ff2
  2017  000A6A  C0E2  F008         	movff	measure_inductance@Lin+1,___flge@ff2+1
  2018  000A6E  C0E3  F009         	movff	measure_inductance@Lin+2,___flge@ff2+2
  2019  000A72  C0E4  F00A         	movff	measure_inductance@Lin+3,___flge@ff2+3
  2020  000A76  EC4D  F011         	call	___flge	;wreg free
  2021  000A7A  E21D               	bc	l3667
  2022                           
  2023                           ;LC-meter.c: 494: Lin = Lin / (1e+09l);
  2024  000A7C  C0E1  F00D         	movff	measure_inductance@Lin,___fldiv@f2
  2025  000A80  C0E2  F00E         	movff	measure_inductance@Lin+1,___fldiv@f2+1
  2026  000A84  C0E3  F00F         	movff	measure_inductance@Lin+2,___fldiv@f2+2
  2027  000A88  C0E4  F010         	movff	measure_inductance@Lin+3,___fldiv@f2+3
  2028  000A8C  0E28               	movlw	40
  2029  000A8E  6E11               	movwf	___fldiv@f1,c
  2030  000A90  0E6B               	movlw	107
  2031  000A92  6E12               	movwf	___fldiv@f1+1,c
  2032  000A94  0E6E               	movlw	110
  2033  000A96  6E13               	movwf	___fldiv@f1+2,c
  2034  000A98  0E4E               	movlw	78
  2035  000A9A  6E14               	movwf	___fldiv@f1+3,c
  2036  000A9C  EC33  F00F         	call	___fldiv	;wreg free
  2037  000AA0  C00D  F0E1         	movff	?___fldiv,measure_inductance@Lin
  2038  000AA4  C00E  F0E2         	movff	?___fldiv+1,measure_inductance@Lin+1
  2039  000AA8  C00F  F0E3         	movff	?___fldiv+2,measure_inductance@Lin+2
  2040  000AAC  C010  F0E4         	movff	?___fldiv+3,measure_inductance@Lin+3
  2041                           
  2042                           ;LC-meter.c: 495: unit = 0;
  2043  000AB0  0100               	movlb	0	; () banked
  2044  000AB2  6BD2               	clrf	measure_inductance@unit& (0+255),b
  2045                           
  2046                           ;LC-meter.c: 496: } else {
  2047  000AB4  D03B               	goto	l3677
  2048  000AB6                     l3667:
  2049                           
  2050                           ;LC-meter.c: 497: Lin = Lin / (1e+06l);
  2051  000AB6  C0E1  F00D         	movff	measure_inductance@Lin,___fldiv@f2
  2052  000ABA  C0E2  F00E         	movff	measure_inductance@Lin+1,___fldiv@f2+1
  2053  000ABE  C0E3  F00F         	movff	measure_inductance@Lin+2,___fldiv@f2+2
  2054  000AC2  C0E4  F010         	movff	measure_inductance@Lin+3,___fldiv@f2+3
  2055  000AC6  0E00               	movlw	0
  2056  000AC8  6E11               	movwf	___fldiv@f1,c
  2057  000ACA  0E24               	movlw	36
  2058  000ACC  6E12               	movwf	___fldiv@f1+1,c
  2059  000ACE  0E74               	movlw	116
  2060  000AD0  6E13               	movwf	___fldiv@f1+2,c
  2061  000AD2  0E49               	movlw	73
  2062  000AD4  6E14               	movwf	___fldiv@f1+3,c
  2063  000AD6  EC33  F00F         	call	___fldiv	;wreg free
  2064  000ADA  C00D  F0E1         	movff	?___fldiv,measure_inductance@Lin
  2065  000ADE  C00E  F0E2         	movff	?___fldiv+1,measure_inductance@Lin+1
  2066  000AE2  C00F  F0E3         	movff	?___fldiv+2,measure_inductance@Lin+2
  2067  000AE6  C010  F0E4         	movff	?___fldiv+3,measure_inductance@Lin+3
  2068                           
  2069                           ;LC-meter.c: 498: unit = 1;
  2070  000AEA  0E01               	movlw	1
  2071  000AEC  D01C               	goto	L1
  2072  000AEE                     l3671:
  2073                           
  2074                           ;LC-meter.c: 501: Lin = Lin / 1e+03l;
  2075  000AEE  C0E1  F00D         	movff	measure_inductance@Lin,___fldiv@f2
  2076  000AF2  C0E2  F00E         	movff	measure_inductance@Lin+1,___fldiv@f2+1
  2077  000AF6  C0E3  F00F         	movff	measure_inductance@Lin+2,___fldiv@f2+2
  2078  000AFA  C0E4  F010         	movff	measure_inductance@Lin+3,___fldiv@f2+3
  2079  000AFE  0E00               	movlw	0
  2080  000B00  6E11               	movwf	___fldiv@f1,c
  2081  000B02  6E12               	movwf	___fldiv@f1+1,c
  2082  000B04  0E7A               	movlw	122
  2083  000B06  6E13               	movwf	___fldiv@f1+2,c
  2084  000B08  0E44               	movlw	68
  2085  000B0A  6E14               	movwf	___fldiv@f1+3,c
  2086  000B0C  EC33  F00F         	call	___fldiv	;wreg free
  2087  000B10  C00D  F0E1         	movff	?___fldiv,measure_inductance@Lin
  2088  000B14  C00E  F0E2         	movff	?___fldiv+1,measure_inductance@Lin+1
  2089  000B18  C00F  F0E3         	movff	?___fldiv+2,measure_inductance@Lin+2
  2090  000B1C  C010  F0E4         	movff	?___fldiv+3,measure_inductance@Lin+3
  2091                           
  2092                           ;LC-meter.c: 502: unit = 2;
  2093  000B20  0E02               	movlw	2
  2094  000B22  D001               	goto	L1
  2095  000B24                     l3675:
  2096                           
  2097                           ;LC-meter.c: 505: unit = 3;
  2098  000B24  0E03               	movlw	3
  2099  000B26                     L1:
  2100  000B26  FFFF               	dw	65535	; assembler added errata NOP
  2101  000B28  0100               	movlb	0	; () banked
  2102  000B2A  6FD2               	movwf	measure_inductance@unit& (0+255),b
  2103  000B2C                     l3677:
  2104  000B2C  FFFF               	dw	65535	; assembler added errata NOP
  2105                           
  2106                           ; BSR set to: 0
  2107                           ;LC-meter.c: 507: Lin = Lin * 100;
  2108  000B2E  C0E1  F01C         	movff	measure_inductance@Lin,___flmul@f1
  2109  000B32  C0E2  F01D         	movff	measure_inductance@Lin+1,___flmul@f1+1
  2110  000B36  C0E3  F01E         	movff	measure_inductance@Lin+2,___flmul@f1+2
  2111  000B3A  C0E4  F01F         	movff	measure_inductance@Lin+3,___flmul@f1+3
  2112  000B3E  0E00               	movlw	0
  2113  000B40  6E20               	movwf	___flmul@f2,c
  2114  000B42  6E21               	movwf	___flmul@f2+1,c
  2115  000B44  0EC8               	movlw	200
  2116  000B46  6E22               	movwf	___flmul@f2+2,c
  2117  000B48  0E42               	movlw	66
  2118  000B4A  6E23               	movwf	___flmul@f2+3,c
  2119  000B4C  EC02  F00E         	call	___flmul	;wreg free
  2120  000B50  C01C  F0E1         	movff	?___flmul,measure_inductance@Lin
  2121  000B54  C01D  F0E2         	movff	?___flmul+1,measure_inductance@Lin+1
  2122  000B58  C01E  F0E3         	movff	?___flmul+2,measure_inductance@Lin+2
  2123  000B5C  C01F  F0E4         	movff	?___flmul+3,measure_inductance@Lin+3
  2124                           
  2125                           ;LC-meter.c: 508: var = (unsigned short int)Lin;
  2126  000B60  C0E1  F055         	movff	measure_inductance@Lin,___fltol@f1
  2127  000B64  C0E2  F056         	movff	measure_inductance@Lin+1,___fltol@f1+1
  2128  000B68  C0E3  F057         	movff	measure_inductance@Lin+2,___fltol@f1+2
  2129  000B6C  C0E4  F058         	movff	measure_inductance@Lin+3,___fltol@f1+3
  2130  000B70  ECDB  F00E         	call	___fltol	;wreg free
  2131  000B74  C055  F0DF         	movff	?___fltol,measure_inductance@var
  2132  000B78  C056  F0E0         	movff	?___fltol+1,measure_inductance@var+1
  2133                           
  2134                           ;LC-meter.c: 510: print_reading(var);
  2135  000B7C  C0DF  F003         	movff	measure_inductance@var,print_reading@measurement
  2136  000B80  C0E0  F004         	movff	measure_inductance@var+1,print_reading@measurement+1
  2137  000B84  EC21  F013         	call	_print_reading	;wreg free
  2138                           
  2139                           ;LC-meter.c: 511: print_unit(unit);
  2140  000B88  0100               	movlb	0	; () banked
  2141  000B8A  51D2               	movf	measure_inductance@unit& (0+255),w,b
  2142  000B8C  EC1E  F013         	call	_print_unit
  2143  000B90  0012               	return		;funcret
  2144  000B92  FFFF               	dw	65535	; errata NOP
  2145  000B94                     __end_of_measure_inductance:
  2146                           	opt stack 0
  2147                           tblptru	equ	0xFF8
  2148                           tblptrh	equ	0xFF7
  2149                           tblptrl	equ	0xFF6
  2150                           tablat	equ	0xFF5
  2151                           intcon	equ	0xFF2
  2152                           intcon2	equ	0xFF1
  2153                           postinc0	equ	0xFEE
  2154                           wreg	equ	0xFE8
  2155                           indf2	equ	0xFDF
  2156                           fsr2h	equ	0xFDA
  2157                           fsr2l	equ	0xFD9
  2158                           status	equ	0xFD8
  2159                           
  2160 ;; *************** function _measure_capacitance *****************
  2161 ;; Defined at:
  2162 ;;		line 391 in file "C:\Users\vboxuser\Desktop\lc-meter\src\LC-meter.c"
  2163 ;; Parameters:    Size  Location     Type
  2164 ;;		None
  2165 ;; Auto vars:     Size  Location     Type
  2166 ;;  Cin             4   15[BANK1 ] unsigned char 
  2167 ;;  var             2   13[BANK1 ] unsigned short 
  2168 ;;  unit            1   12[BANK1 ] unsigned char 
  2169 ;; Return value:  Size  Location     Type
  2170 ;;		None               void
  2171 ;; Registers used:
  2172 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, cstack
  2173 ;; Tracked objects:
  2174 ;;		On entry : 0/0
  2175 ;;		On exit  : E/0
  2176 ;;		Unchanged: 0/0
  2177 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2178 ;;      Params:         0       0       0       0       0       0       0
  2179 ;;      Locals:         0       0      19       0       0       0       0
  2180 ;;      Temps:          0       0       0       0       0       0       0
  2181 ;;      Totals:         0       0      19       0       0       0       0
  2182 ;;Total ram usage:       19 bytes
  2183 ;; Hardware stack levels used:    1
  2184 ;; Hardware stack levels required when called:    7
  2185 ;; This function calls:
  2186 ;;		___fldiv
  2187 ;;		___flge
  2188 ;;		___flmul
  2189 ;;		___flsub
  2190 ;;		___fltol
  2191 ;;		___lwtofl
  2192 ;;		_format_double
  2193 ;;		_format_xint32
  2194 ;;		_measure_freq
  2195 ;;		_print_reading
  2196 ;;		_print_unit
  2197 ;;		_ser_putch
  2198 ;;		_ser_puts
  2199 ;; This function is called by:
  2200 ;;		_main
  2201 ;; This function uses a non-reentrant model
  2202 ;;
  2203                           
  2204                           	psect	text4
  2205  000B94                     __ptext4:
  2206                           	opt stack 0
  2207  000B94                     _measure_capacitance:
  2208                           	opt stack 23
  2209                           
  2210                           ;incstack = 0
  2211  000B94  FFFF               	dw	65535
  2212                           
  2213                           ;LC-meter.c: 392: unsigned char unit;
  2214                           ;LC-meter.c: 393: unsigned short int var;
  2215                           ;LC-meter.c: 395: double Cin;
  2216                           ;LC-meter.c: 402: var = measure_freq();
  2217  000B96  EC76  F010         	call	_measure_freq	;wreg free
  2218  000B9A  C003  F10D         	movff	?_measure_freq,measure_capacitance@var
  2219  000B9E  C004  F10E         	movff	?_measure_freq+1,measure_capacitance@var+1
  2220                           
  2221                           ;LC-meter.c: 404: F3 = (double)var;
  2222  000BA2  C10D  F00D         	movff	measure_capacitance@var,___lwtofl@c
  2223  000BA6  C10E  F00E         	movff	measure_capacitance@var+1,___lwtofl@c+1
  2224  000BAA  ECC4  F012         	call	___lwtofl	;wreg free
  2225  000BAE  C00D  F0A4         	movff	?___lwtofl,_F3
  2226  000BB2  C00E  F0A5         	movff	?___lwtofl+1,_F3+1
  2227  000BB6  C00F  F0A6         	movff	?___lwtofl+2,_F3+2
  2228  000BBA  C010  F0A7         	movff	?___lwtofl+3,_F3+3
  2229                           
  2230                           ;LC-meter.c: 406: putchar_ptr = &ser_putch;
  2231  000BBE  0EB6               	movlw	low _ser_putch
  2232  000BC0  6E77               	movwf	_putchar_ptr,c
  2233  000BC2  0E25               	movlw	high _ser_putch
  2234  000BC4  6E78               	movwf	_putchar_ptr+1,c
  2235                           
  2236                           ;LC-meter.c: 407: ser_puts("var=");
  2237  000BC6  0E72               	movlw	low STR_4
  2238  000BC8  6E04               	movwf	ser_puts@s,c
  2239  000BCA  0E06               	movlw	high STR_4
  2240  000BCC  6E05               	movwf	ser_puts@s+1,c
  2241  000BCE  EC77  F012         	call	_ser_puts	;wreg free
  2242                           
  2243                           ;LC-meter.c: 408: format_xint32( var);
  2244  000BD2  C10D  F037         	movff	measure_capacitance@var,format_xint32@x
  2245  000BD6  C10E  F038         	movff	measure_capacitance@var+1,format_xint32@x+1
  2246  000BDA  6A39               	clrf	format_xint32@x+2,c
  2247  000BDC  6A3A               	clrf	format_xint32@x+3,c
  2248  000BDE  ECB8  F010         	call	_format_xint32	;wreg free
  2249                           
  2250                           ;LC-meter.c: 409: ser_puts("\r\nF1=");
  2251  000BE2  0E5B               	movlw	low STR_5
  2252  000BE4  6E04               	movwf	ser_puts@s,c
  2253  000BE6  0E06               	movlw	high STR_5
  2254  000BE8  6E05               	movwf	ser_puts@s+1,c
  2255  000BEA  EC77  F012         	call	_ser_puts	;wreg free
  2256                           
  2257                           ;LC-meter.c: 410: format_double( F1);
  2258  000BEE  C0B6  F0D6         	movff	_F1,format_double@num
  2259  000BF2  C0B7  F0D7         	movff	_F1+1,format_double@num+1
  2260  000BF6  C0B8  F0D8         	movff	_F1+2,format_double@num+2
  2261  000BFA  C0B9  F0D9         	movff	_F1+3,format_double@num+3
  2262  000BFE  EC08  F009         	call	_format_double	;wreg free
  2263                           
  2264                           ;LC-meter.c: 411: ser_putch(' ');
  2265  000C02  0E20               	movlw	32
  2266  000C04  ECDB  F012         	call	_ser_putch
  2267                           
  2268                           ;LC-meter.c: 412: format_xint32( *(unsigned long int*)&F1);
  2269  000C08  C0B6  F037         	movff	_F1,format_xint32@x
  2270  000C0C  C0B7  F038         	movff	_F1+1,format_xint32@x+1
  2271  000C10  C0B8  F039         	movff	_F1+2,format_xint32@x+2
  2272  000C14  C0B9  F03A         	movff	_F1+3,format_xint32@x+3
  2273  000C18  ECB8  F010         	call	_format_xint32	;wreg free
  2274                           
  2275                           ;LC-meter.c: 413: ser_puts("\r\nF2=");
  2276  000C1C  0E61               	movlw	low STR_6
  2277  000C1E  6E04               	movwf	ser_puts@s,c
  2278  000C20  0E06               	movlw	high STR_6
  2279  000C22  6E05               	movwf	ser_puts@s+1,c
  2280  000C24  EC77  F012         	call	_ser_puts	;wreg free
  2281                           
  2282                           ;LC-meter.c: 414: format_double( F2);
  2283  000C28  C0A0  F0D6         	movff	_F2,format_double@num
  2284  000C2C  C0A1  F0D7         	movff	_F2+1,format_double@num+1
  2285  000C30  C0A2  F0D8         	movff	_F2+2,format_double@num+2
  2286  000C34  C0A3  F0D9         	movff	_F2+3,format_double@num+3
  2287  000C38  EC08  F009         	call	_format_double	;wreg free
  2288                           
  2289                           ;LC-meter.c: 415: ser_putch(' ');
  2290  000C3C  0E20               	movlw	32
  2291  000C3E  ECDB  F012         	call	_ser_putch
  2292                           
  2293                           ;LC-meter.c: 416: format_xint32( *(unsigned long int*)&F2);
  2294  000C42  C0A0  F037         	movff	_F2,format_xint32@x
  2295  000C46  C0A1  F038         	movff	_F2+1,format_xint32@x+1
  2296  000C4A  C0A2  F039         	movff	_F2+2,format_xint32@x+2
  2297  000C4E  C0A3  F03A         	movff	_F2+3,format_xint32@x+3
  2298  000C52  ECB8  F010         	call	_format_xint32	;wreg free
  2299                           
  2300                           ;LC-meter.c: 417: ser_puts("\r\nF3=");
  2301  000C56  0E67               	movlw	low STR_7
  2302  000C58  6E04               	movwf	ser_puts@s,c
  2303  000C5A  0E06               	movlw	high STR_7
  2304  000C5C  6E05               	movwf	ser_puts@s+1,c
  2305  000C5E  EC77  F012         	call	_ser_puts	;wreg free
  2306                           
  2307                           ;LC-meter.c: 418: format_double( F3);
  2308  000C62  C0A4  F0D6         	movff	_F3,format_double@num
  2309  000C66  C0A5  F0D7         	movff	_F3+1,format_double@num+1
  2310  000C6A  C0A6  F0D8         	movff	_F3+2,format_double@num+2
  2311  000C6E  C0A7  F0D9         	movff	_F3+3,format_double@num+3
  2312  000C72  EC08  F009         	call	_format_double	;wreg free
  2313                           
  2314                           ;LC-meter.c: 419: ser_putch(' ');
  2315  000C76  0E20               	movlw	32
  2316  000C78  ECDB  F012         	call	_ser_putch
  2317                           
  2318                           ;LC-meter.c: 420: format_xint32( *(unsigned long int*)&F3);
  2319  000C7C  C0A4  F037         	movff	_F3,format_xint32@x
  2320  000C80  C0A5  F038         	movff	_F3+1,format_xint32@x+1
  2321  000C84  C0A6  F039         	movff	_F3+2,format_xint32@x+2
  2322  000C88  C0A7  F03A         	movff	_F3+3,format_xint32@x+3
  2323  000C8C  ECB8  F010         	call	_format_xint32	;wreg free
  2324                           
  2325                           ;LC-meter.c: 421: ser_puts("\r\nCCal=");
  2326  000C90  0E4D               	movlw	low STR_8
  2327  000C92  6E04               	movwf	ser_puts@s,c
  2328  000C94  0E06               	movlw	high STR_8
  2329  000C96  6E05               	movwf	ser_puts@s+1,c
  2330  000C98  EC77  F012         	call	_ser_puts	;wreg free
  2331                           
  2332                           ;LC-meter.c: 422: format_double( CCal);
  2333  000C9C  C0EA  F0D6         	movff	_CCal,format_double@num
  2334  000CA0  C0EB  F0D7         	movff	_CCal+1,format_double@num+1
  2335  000CA4  C0EC  F0D8         	movff	_CCal+2,format_double@num+2
  2336  000CA8  C0ED  F0D9         	movff	_CCal+3,format_double@num+3
  2337  000CAC  EC08  F009         	call	_format_double	;wreg free
  2338                           
  2339                           ;LC-meter.c: 423: ser_putch(' ');
  2340  000CB0  0E20               	movlw	32
  2341  000CB2  ECDB  F012         	call	_ser_putch
  2342                           
  2343                           ;LC-meter.c: 424: format_xint32( *(unsigned long int*)&CCal);
  2344  000CB6  C0EA  F037         	movff	_CCal,format_xint32@x
  2345  000CBA  C0EB  F038         	movff	_CCal+1,format_xint32@x+1
  2346  000CBE  C0EC  F039         	movff	_CCal+2,format_xint32@x+2
  2347  000CC2  C0ED  F03A         	movff	_CCal+3,format_xint32@x+3
  2348  000CC6  ECB8  F010         	call	_format_xint32	;wreg free
  2349                           
  2350                           ;LC-meter.c: 425: ser_puts("\r\n");
  2351  000CCA  0E58               	movlw	low (STR_1+3)
  2352  000CCC  6E04               	movwf	ser_puts@s,c
  2353  000CCE  0E06               	movlw	high (STR_1+3)
  2354  000CD0  6E05               	movwf	ser_puts@s+1,c
  2355  000CD2  EC77  F012         	call	_ser_puts	;wreg free
  2356                           
  2357                           ;LC-meter.c: 427: putchar_ptr = &output_putch;
  2358  000CD6  0E2E               	movlw	low _output_putch
  2359  000CD8  6E77               	movwf	_putchar_ptr,c
  2360  000CDA  0E26               	movlw	high _output_putch
  2361  000CDC  6E78               	movwf	_putchar_ptr+1,c
  2362                           
  2363                           ;LC-meter.c: 429: if(F3 > F1)
  2364  000CDE  C0B6  F003         	movff	_F1,___flge@ff1
  2365  000CE2  C0B7  F004         	movff	_F1+1,___flge@ff1+1
  2366  000CE6  C0B8  F005         	movff	_F1+2,___flge@ff1+2
  2367  000CEA  C0B9  F006         	movff	_F1+3,___flge@ff1+3
  2368  000CEE  C0A4  F007         	movff	_F3,___flge@ff2
  2369  000CF2  C0A5  F008         	movff	_F3+1,___flge@ff2+1
  2370  000CF6  C0A6  F009         	movff	_F3+2,___flge@ff2+2
  2371  000CFA  C0A7  F00A         	movff	_F3+3,___flge@ff2+3
  2372  000CFE  EC4D  F011         	call	___flge	;wreg free
  2373  000D02  E208               	bc	l3615
  2374                           
  2375                           ;LC-meter.c: 430: F3 = F1;
  2376  000D04  C0B6  F0A4         	movff	_F1,_F3
  2377  000D08  C0B7  F0A5         	movff	_F1+1,_F3+1
  2378  000D0C  C0B8  F0A6         	movff	_F1+2,_F3+2
  2379  000D10  C0B9  F0A7         	movff	_F1+3,_F3+3
  2380  000D14                     l3615:
  2381                           
  2382                           ;LC-meter.c: 432: Cin = F2 * F2 * (F1 * F1 - F3 * F3) * CCal;
  2383  000D14  C0A4  F020         	movff	_F3,___flmul@f2
  2384  000D18  C0A5  F021         	movff	_F3+1,___flmul@f2+1
  2385  000D1C  C0A6  F022         	movff	_F3+2,___flmul@f2+2
  2386  000D20  C0A7  F023         	movff	_F3+3,___flmul@f2+3
  2387  000D24  C0A4  F01C         	movff	_F3,___flmul@f1
  2388  000D28  C0A5  F01D         	movff	_F3+1,___flmul@f1+1
  2389  000D2C  C0A6  F01E         	movff	_F3+2,___flmul@f1+2
  2390  000D30  C0A7  F01F         	movff	_F3+3,___flmul@f1+3
  2391  000D34  EC02  F00E         	call	___flmul	;wreg free
  2392  000D38  C01C  F03B         	movff	?___flmul,___flsub@f2
  2393  000D3C  C01D  F03C         	movff	?___flmul+1,___flsub@f2+1
  2394  000D40  C01E  F03D         	movff	?___flmul+2,___flsub@f2+2
  2395  000D44  C01F  F03E         	movff	?___flmul+3,___flsub@f2+3
  2396  000D48  C0B6  F020         	movff	_F1,___flmul@f2
  2397  000D4C  C0B7  F021         	movff	_F1+1,___flmul@f2+1
  2398  000D50  C0B8  F022         	movff	_F1+2,___flmul@f2+2
  2399  000D54  C0B9  F023         	movff	_F1+3,___flmul@f2+3
  2400  000D58  C0B6  F01C         	movff	_F1,___flmul@f1
  2401  000D5C  C0B7  F01D         	movff	_F1+1,___flmul@f1+1
  2402  000D60  C0B8  F01E         	movff	_F1+2,___flmul@f1+2
  2403  000D64  C0B9  F01F         	movff	_F1+3,___flmul@f1+3
  2404  000D68  EC02  F00E         	call	___flmul	;wreg free
  2405  000D6C  C01C  F037         	movff	?___flmul,___flsub@f1
  2406  000D70  C01D  F038         	movff	?___flmul+1,___flsub@f1+1
  2407  000D74  C01E  F039         	movff	?___flmul+2,___flsub@f1+2
  2408  000D78  C01F  F03A         	movff	?___flmul+3,___flsub@f1+3
  2409  000D7C  EC17  F012         	call	___flsub	;wreg free
  2410  000D80  C037  F100         	movff	?___flsub,_measure_capacitance$923
  2411  000D84  C038  F101         	movff	?___flsub+1,_measure_capacitance$923+1
  2412  000D88  C039  F102         	movff	?___flsub+2,_measure_capacitance$923+2
  2413  000D8C  C03A  F103         	movff	?___flsub+3,_measure_capacitance$923+3
  2414                           
  2415                           ;LC-meter.c: 432: Cin = F2 * F2 * (F1 * F1 - F3 * F3) * CCal;
  2416  000D90  C0A0  F020         	movff	_F2,___flmul@f2
  2417  000D94  C0A1  F021         	movff	_F2+1,___flmul@f2+1
  2418  000D98  C0A2  F022         	movff	_F2+2,___flmul@f2+2
  2419  000D9C  C0A3  F023         	movff	_F2+3,___flmul@f2+3
  2420  000DA0  C100  F01C         	movff	_measure_capacitance$923,___flmul@f1
  2421  000DA4  C101  F01D         	movff	_measure_capacitance$923+1,___flmul@f1+1
  2422  000DA8  C102  F01E         	movff	_measure_capacitance$923+2,___flmul@f1+2
  2423  000DAC  C103  F01F         	movff	_measure_capacitance$923+3,___flmul@f1+3
  2424  000DB0  EC02  F00E         	call	___flmul	;wreg free
  2425  000DB4  C01C  F104         	movff	?___flmul,_measure_capacitance$924
  2426  000DB8  C01D  F105         	movff	?___flmul+1,_measure_capacitance$924+1
  2427  000DBC  C01E  F106         	movff	?___flmul+2,_measure_capacitance$924+2
  2428  000DC0  C01F  F107         	movff	?___flmul+3,_measure_capacitance$924+3
  2429                           
  2430                           ;LC-meter.c: 432: Cin = F2 * F2 * (F1 * F1 - F3 * F3) * CCal;
  2431  000DC4  C0A0  F020         	movff	_F2,___flmul@f2
  2432  000DC8  C0A1  F021         	movff	_F2+1,___flmul@f2+1
  2433  000DCC  C0A2  F022         	movff	_F2+2,___flmul@f2+2
  2434  000DD0  C0A3  F023         	movff	_F2+3,___flmul@f2+3
  2435  000DD4  C104  F01C         	movff	_measure_capacitance$924,___flmul@f1
  2436  000DD8  C105  F01D         	movff	_measure_capacitance$924+1,___flmul@f1+1
  2437  000DDC  C106  F01E         	movff	_measure_capacitance$924+2,___flmul@f1+2
  2438  000DE0  C107  F01F         	movff	_measure_capacitance$924+3,___flmul@f1+3
  2439  000DE4  EC02  F00E         	call	___flmul	;wreg free
  2440  000DE8  C01C  F108         	movff	?___flmul,_measure_capacitance$925
  2441  000DEC  C01D  F109         	movff	?___flmul+1,_measure_capacitance$925+1
  2442  000DF0  C01E  F10A         	movff	?___flmul+2,_measure_capacitance$925+2
  2443  000DF4  C01F  F10B         	movff	?___flmul+3,_measure_capacitance$925+3
  2444                           
  2445                           ;LC-meter.c: 432: Cin = F2 * F2 * (F1 * F1 - F3 * F3) * CCal;
  2446  000DF8  C108  F01C         	movff	_measure_capacitance$925,___flmul@f1
  2447  000DFC  C109  F01D         	movff	_measure_capacitance$925+1,___flmul@f1+1
  2448  000E00  C10A  F01E         	movff	_measure_capacitance$925+2,___flmul@f1+2
  2449  000E04  C10B  F01F         	movff	_measure_capacitance$925+3,___flmul@f1+3
  2450  000E08  C0EA  F020         	movff	_CCal,___flmul@f2
  2451  000E0C  C0EB  F021         	movff	_CCal+1,___flmul@f2+1
  2452  000E10  C0EC  F022         	movff	_CCal+2,___flmul@f2+2
  2453  000E14  C0ED  F023         	movff	_CCal+3,___flmul@f2+3
  2454  000E18  EC02  F00E         	call	___flmul	;wreg free
  2455  000E1C  C01C  F10F         	movff	?___flmul,measure_capacitance@Cin
  2456  000E20  C01D  F110         	movff	?___flmul+1,measure_capacitance@Cin+1
  2457  000E24  C01E  F111         	movff	?___flmul+2,measure_capacitance@Cin+2
  2458  000E28  C01F  F112         	movff	?___flmul+3,measure_capacitance@Cin+3
  2459                           
  2460                           ;LC-meter.c: 436: ser_puts("Cin=");
  2461  000E2C  0E6D               	movlw	low STR_10
  2462  000E2E  6E04               	movwf	ser_puts@s,c
  2463  000E30  0E06               	movlw	high STR_10
  2464  000E32  6E05               	movwf	ser_puts@s+1,c
  2465  000E34  EC77  F012         	call	_ser_puts	;wreg free
  2466                           
  2467                           ;LC-meter.c: 437: format_double( Cin);
  2468  000E38  C10F  F0D6         	movff	measure_capacitance@Cin,format_double@num
  2469  000E3C  C110  F0D7         	movff	measure_capacitance@Cin+1,format_double@num+1
  2470  000E40  C111  F0D8         	movff	measure_capacitance@Cin+2,format_double@num+2
  2471  000E44  C112  F0D9         	movff	measure_capacitance@Cin+3,format_double@num+3
  2472  000E48  EC08  F009         	call	_format_double	;wreg free
  2473                           
  2474                           ;LC-meter.c: 438: ser_putch(' ');
  2475  000E4C  0E20               	movlw	32
  2476  000E4E  ECDB  F012         	call	_ser_putch
  2477                           
  2478                           ;LC-meter.c: 439: format_xint32( *(unsigned long int*)&Cin);
  2479  000E52  C10F  F037         	movff	measure_capacitance@Cin,format_xint32@x
  2480  000E56  C110  F038         	movff	measure_capacitance@Cin+1,format_xint32@x+1
  2481  000E5A  C111  F039         	movff	measure_capacitance@Cin+2,format_xint32@x+2
  2482  000E5E  C112  F03A         	movff	measure_capacitance@Cin+3,format_xint32@x+3
  2483  000E62  ECB8  F010         	call	_format_xint32	;wreg free
  2484                           
  2485                           ;LC-meter.c: 440: ser_puts("\r\n");
  2486  000E66  0E58               	movlw	low (STR_1+3)
  2487  000E68  6E04               	movwf	ser_puts@s,c
  2488  000E6A  0E06               	movlw	high (STR_1+3)
  2489  000E6C  6E05               	movwf	ser_puts@s+1,c
  2490  000E6E  EC77  F012         	call	_ser_puts	;wreg free
  2491                           
  2492                           ;LC-meter.c: 442: if(Cin > 999) {
  2493  000E72  6A03               	clrf	___flge@ff1,c
  2494  000E74  0EC0               	movlw	192
  2495  000E76  6E04               	movwf	___flge@ff1+1,c
  2496  000E78  0E79               	movlw	121
  2497  000E7A  6E05               	movwf	___flge@ff1+2,c
  2498  000E7C  0E44               	movlw	68
  2499  000E7E  6E06               	movwf	___flge@ff1+3,c
  2500  000E80  C10F  F007         	movff	measure_capacitance@Cin,___flge@ff2
  2501  000E84  C110  F008         	movff	measure_capacitance@Cin+1,___flge@ff2+1
  2502  000E88  C111  F009         	movff	measure_capacitance@Cin+2,___flge@ff2+2
  2503  000E8C  C112  F00A         	movff	measure_capacitance@Cin+3,___flge@ff2+3
  2504  000E90  EC4D  F011         	call	___flge	;wreg free
  2505  000E94  E279               	bc	l3645
  2506                           
  2507                           ;LC-meter.c: 443: if(Cin > (999e+03l)) {
  2508  000E96  0E80               	movlw	128
  2509  000E98  6E03               	movwf	___flge@ff1,c
  2510  000E9A  0EE5               	movlw	229
  2511  000E9C  6E04               	movwf	___flge@ff1+1,c
  2512  000E9E  0E73               	movlw	115
  2513  000EA0  6E05               	movwf	___flge@ff1+2,c
  2514  000EA2  0E49               	movlw	73
  2515  000EA4  6E06               	movwf	___flge@ff1+3,c
  2516  000EA6  C10F  F007         	movff	measure_capacitance@Cin,___flge@ff2
  2517  000EAA  C110  F008         	movff	measure_capacitance@Cin+1,___flge@ff2+1
  2518  000EAE  C111  F009         	movff	measure_capacitance@Cin+2,___flge@ff2+2
  2519  000EB2  C112  F00A         	movff	measure_capacitance@Cin+3,___flge@ff2+3
  2520  000EB6  EC4D  F011         	call	___flge	;wreg free
  2521  000EBA  E24B               	bc	l3641
  2522                           
  2523                           ;LC-meter.c: 444: if(Cin > (999e+06l)) {
  2524  000EBC  0E1F               	movlw	31
  2525  000EBE  6E03               	movwf	___flge@ff1,c
  2526  000EC0  0E2E               	movlw	46
  2527  000EC2  6E04               	movwf	___flge@ff1+1,c
  2528  000EC4  0E6E               	movlw	110
  2529  000EC6  6E05               	movwf	___flge@ff1+2,c
  2530  000EC8  0E4E               	movlw	78
  2531  000ECA  6E06               	movwf	___flge@ff1+3,c
  2532  000ECC  C10F  F007         	movff	measure_capacitance@Cin,___flge@ff2
  2533  000ED0  C110  F008         	movff	measure_capacitance@Cin+1,___flge@ff2+1
  2534  000ED4  C111  F009         	movff	measure_capacitance@Cin+2,___flge@ff2+2
  2535  000ED8  C112  F00A         	movff	measure_capacitance@Cin+3,___flge@ff2+3
  2536  000EDC  EC4D  F011         	call	___flge	;wreg free
  2537  000EE0  E21C               	bc	l3637
  2538                           
  2539                           ;LC-meter.c: 445: Cin = Cin / (1e+09l);
  2540  000EE2  C10F  F00D         	movff	measure_capacitance@Cin,___fldiv@f2
  2541  000EE6  C110  F00E         	movff	measure_capacitance@Cin+1,___fldiv@f2+1
  2542  000EEA  C111  F00F         	movff	measure_capacitance@Cin+2,___fldiv@f2+2
  2543  000EEE  C112  F010         	movff	measure_capacitance@Cin+3,___fldiv@f2+3
  2544  000EF2  0E28               	movlw	40
  2545  000EF4  6E11               	movwf	___fldiv@f1,c
  2546  000EF6  0E6B               	movlw	107
  2547  000EF8  6E12               	movwf	___fldiv@f1+1,c
  2548  000EFA  0E6E               	movlw	110
  2549  000EFC  6E13               	movwf	___fldiv@f1+2,c
  2550  000EFE  0E4E               	movlw	78
  2551  000F00  6E14               	movwf	___fldiv@f1+3,c
  2552  000F02  EC33  F00F         	call	___fldiv	;wreg free
  2553  000F06  C00D  F10F         	movff	?___fldiv,measure_capacitance@Cin
  2554  000F0A  C00E  F110         	movff	?___fldiv+1,measure_capacitance@Cin+1
  2555  000F0E  C00F  F111         	movff	?___fldiv+2,measure_capacitance@Cin+2
  2556  000F12  C010  F112         	movff	?___fldiv+3,measure_capacitance@Cin+3
  2557                           
  2558                           ;LC-meter.c: 446: unit = 4;
  2559  000F16  0E04               	movlw	4
  2560  000F18  D038               	goto	L2
  2561  000F1A                     l3637:
  2562                           
  2563                           ;LC-meter.c: 448: Cin = Cin / (1e+06l);
  2564  000F1A  C10F  F00D         	movff	measure_capacitance@Cin,___fldiv@f2
  2565  000F1E  C110  F00E         	movff	measure_capacitance@Cin+1,___fldiv@f2+1
  2566  000F22  C111  F00F         	movff	measure_capacitance@Cin+2,___fldiv@f2+2
  2567  000F26  C112  F010         	movff	measure_capacitance@Cin+3,___fldiv@f2+3
  2568  000F2A  0E00               	movlw	0
  2569  000F2C  6E11               	movwf	___fldiv@f1,c
  2570  000F2E  0E24               	movlw	36
  2571  000F30  6E12               	movwf	___fldiv@f1+1,c
  2572  000F32  0E74               	movlw	116
  2573  000F34  6E13               	movwf	___fldiv@f1+2,c
  2574  000F36  0E49               	movlw	73
  2575  000F38  6E14               	movwf	___fldiv@f1+3,c
  2576  000F3A  EC33  F00F         	call	___fldiv	;wreg free
  2577  000F3E  C00D  F10F         	movff	?___fldiv,measure_capacitance@Cin
  2578  000F42  C00E  F110         	movff	?___fldiv+1,measure_capacitance@Cin+1
  2579  000F46  C00F  F111         	movff	?___fldiv+2,measure_capacitance@Cin+2
  2580  000F4A  C010  F112         	movff	?___fldiv+3,measure_capacitance@Cin+3
  2581                           
  2582                           ;LC-meter.c: 449: unit = 5;
  2583  000F4E  0E05               	movlw	5
  2584  000F50  D01C               	goto	L2
  2585  000F52                     l3641:
  2586                           
  2587                           ;LC-meter.c: 452: Cin = Cin / 1e+03l;
  2588  000F52  C10F  F00D         	movff	measure_capacitance@Cin,___fldiv@f2
  2589  000F56  C110  F00E         	movff	measure_capacitance@Cin+1,___fldiv@f2+1
  2590  000F5A  C111  F00F         	movff	measure_capacitance@Cin+2,___fldiv@f2+2
  2591  000F5E  C112  F010         	movff	measure_capacitance@Cin+3,___fldiv@f2+3
  2592  000F62  0E00               	movlw	0
  2593  000F64  6E11               	movwf	___fldiv@f1,c
  2594  000F66  6E12               	movwf	___fldiv@f1+1,c
  2595  000F68  0E7A               	movlw	122
  2596  000F6A  6E13               	movwf	___fldiv@f1+2,c
  2597  000F6C  0E44               	movlw	68
  2598  000F6E  6E14               	movwf	___fldiv@f1+3,c
  2599  000F70  EC33  F00F         	call	___fldiv	;wreg free
  2600  000F74  C00D  F10F         	movff	?___fldiv,measure_capacitance@Cin
  2601  000F78  C00E  F110         	movff	?___fldiv+1,measure_capacitance@Cin+1
  2602  000F7C  C00F  F111         	movff	?___fldiv+2,measure_capacitance@Cin+2
  2603  000F80  C010  F112         	movff	?___fldiv+3,measure_capacitance@Cin+3
  2604                           
  2605                           ;LC-meter.c: 453: unit = 6;
  2606  000F84  0E06               	movlw	6
  2607  000F86  D001               	goto	L2
  2608  000F88                     l3645:
  2609                           
  2610                           ;LC-meter.c: 456: unit = 7;
  2611  000F88  0E07               	movlw	7
  2612  000F8A                     L2:
  2613  000F8A  FFFF               	dw	65535	; assembler added errata NOP
  2614  000F8C  0101               	movlb	1	; () banked
  2615  000F8E  6F0C               	movwf	measure_capacitance@unit& (0+255),b
  2616                           
  2617                           ; BSR set to: 1
  2618                           ;LC-meter.c: 458: Cin = Cin * 100;
  2619  000F90  C10F  F01C         	movff	measure_capacitance@Cin,___flmul@f1
  2620  000F94  C110  F01D         	movff	measure_capacitance@Cin+1,___flmul@f1+1
  2621  000F98  C111  F01E         	movff	measure_capacitance@Cin+2,___flmul@f1+2
  2622  000F9C  C112  F01F         	movff	measure_capacitance@Cin+3,___flmul@f1+3
  2623  000FA0  0E00               	movlw	0
  2624  000FA2  6E20               	movwf	___flmul@f2,c
  2625  000FA4  6E21               	movwf	___flmul@f2+1,c
  2626  000FA6  0EC8               	movlw	200
  2627  000FA8  6E22               	movwf	___flmul@f2+2,c
  2628  000FAA  0E42               	movlw	66
  2629  000FAC  6E23               	movwf	___flmul@f2+3,c
  2630  000FAE  EC02  F00E         	call	___flmul	;wreg free
  2631  000FB2  C01C  F10F         	movff	?___flmul,measure_capacitance@Cin
  2632  000FB6  C01D  F110         	movff	?___flmul+1,measure_capacitance@Cin+1
  2633  000FBA  C01E  F111         	movff	?___flmul+2,measure_capacitance@Cin+2
  2634  000FBE  C01F  F112         	movff	?___flmul+3,measure_capacitance@Cin+3
  2635                           
  2636                           ;LC-meter.c: 459: var = (unsigned short int)Cin;
  2637  000FC2  C10F  F055         	movff	measure_capacitance@Cin,___fltol@f1
  2638  000FC6  C110  F056         	movff	measure_capacitance@Cin+1,___fltol@f1+1
  2639  000FCA  C111  F057         	movff	measure_capacitance@Cin+2,___fltol@f1+2
  2640  000FCE  C112  F058         	movff	measure_capacitance@Cin+3,___fltol@f1+3
  2641  000FD2  ECDB  F00E         	call	___fltol	;wreg free
  2642  000FD6  C055  F10D         	movff	?___fltol,measure_capacitance@var
  2643  000FDA  C056  F10E         	movff	?___fltol+1,measure_capacitance@var+1
  2644                           
  2645                           ;LC-meter.c: 461: print_reading(var);
  2646  000FDE  C10D  F003         	movff	measure_capacitance@var,print_reading@measurement
  2647  000FE2  C10E  F004         	movff	measure_capacitance@var+1,print_reading@measurement+1
  2648  000FE6  EC21  F013         	call	_print_reading	;wreg free
  2649                           
  2650                           ;LC-meter.c: 462: print_unit(unit);
  2651  000FEA  0101               	movlb	1	; () banked
  2652  000FEC  510C               	movf	measure_capacitance@unit& (0+255),w,b
  2653  000FEE  EC1E  F013         	call	_print_unit
  2654  000FF2  0012               	return		;funcret
  2655  000FF4  FFFF               	dw	65535	; errata NOP
  2656  000FF6                     __end_of_measure_capacitance:
  2657                           	opt stack 0
  2658                           tblptru	equ	0xFF8
  2659                           tblptrh	equ	0xFF7
  2660                           tblptrl	equ	0xFF6
  2661                           tablat	equ	0xFF5
  2662                           intcon	equ	0xFF2
  2663                           intcon2	equ	0xFF1
  2664                           postinc0	equ	0xFEE
  2665                           wreg	equ	0xFE8
  2666                           indf2	equ	0xFDF
  2667                           fsr2h	equ	0xFDA
  2668                           fsr2l	equ	0xFD9
  2669                           status	equ	0xFD8
  2670                           
  2671 ;; *************** function _print_unit *****************
  2672 ;; Defined at:
  2673 ;;		line 408 in file "C:\Users\vboxuser\Desktop\lc-meter\src\print.c"
  2674 ;; Parameters:    Size  Location     Type
  2675 ;;  unit            1    wreg     unsigned char 
  2676 ;; Auto vars:     Size  Location     Type
  2677 ;;  unit            1    0[COMRAM] unsigned char 
  2678 ;; Return value:  Size  Location     Type
  2679 ;;		None               void
  2680 ;; Registers used:
  2681 ;;		wreg
  2682 ;; Tracked objects:
  2683 ;;		On entry : E/0
  2684 ;;		On exit  : E/0
  2685 ;;		Unchanged: E/0
  2686 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2687 ;;      Params:         0       0       0       0       0       0       0
  2688 ;;      Locals:         0       0       0       0       0       0       0
  2689 ;;      Temps:          0       0       0       0       0       0       0
  2690 ;;      Totals:         0       0       0       0       0       0       0
  2691 ;;Total ram usage:        0 bytes
  2692 ;; Hardware stack levels used:    1
  2693 ;; Hardware stack levels required when called:    1
  2694 ;; This function calls:
  2695 ;;		Nothing
  2696 ;; This function is called by:
  2697 ;;		_measure_capacitance
  2698 ;;		_measure_inductance
  2699 ;; This function uses a non-reentrant model
  2700 ;;
  2701                           
  2702                           	psect	text5
  2703  00263C                     __ptext5:
  2704                           	opt stack 0
  2705  00263C                     _print_unit:
  2706                           	opt stack 28
  2707                           
  2708                           ;incstack = 0
  2709  00263C  FFFF               	dw	65535
  2710  00263E  0012               	return		;funcret
  2711  002640  FFFF               	dw	65535	; errata NOP
  2712  002642                     __end_of_print_unit:
  2713                           	opt stack 0
  2714                           tblptru	equ	0xFF8
  2715                           tblptrh	equ	0xFF7
  2716                           tblptrl	equ	0xFF6
  2717                           tablat	equ	0xFF5
  2718                           intcon	equ	0xFF2
  2719                           intcon2	equ	0xFF1
  2720                           postinc0	equ	0xFEE
  2721                           wreg	equ	0xFE8
  2722                           indf2	equ	0xFDF
  2723                           fsr2h	equ	0xFDA
  2724                           fsr2l	equ	0xFD9
  2725                           status	equ	0xFD8
  2726                           
  2727 ;; *************** function _print_reading *****************
  2728 ;; Defined at:
  2729 ;;		line 429 in file "C:\Users\vboxuser\Desktop\lc-meter\src\print.c"
  2730 ;; Parameters:    Size  Location     Type
  2731 ;;  measurement     2    2[COMRAM] unsigned short 
  2732 ;; Auto vars:     Size  Location     Type
  2733 ;;		None
  2734 ;; Return value:  Size  Location     Type
  2735 ;;		None               void
  2736 ;; Registers used:
  2737 ;;		None
  2738 ;; Tracked objects:
  2739 ;;		On entry : 0/0
  2740 ;;		On exit  : 0/0
  2741 ;;		Unchanged: 0/0
  2742 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2743 ;;      Params:         2       0       0       0       0       0       0
  2744 ;;      Locals:         0       0       0       0       0       0       0
  2745 ;;      Temps:          0       0       0       0       0       0       0
  2746 ;;      Totals:         2       0       0       0       0       0       0
  2747 ;;Total ram usage:        2 bytes
  2748 ;; Hardware stack levels used:    1
  2749 ;; Hardware stack levels required when called:    1
  2750 ;; This function calls:
  2751 ;;		Nothing
  2752 ;; This function is called by:
  2753 ;;		_measure_capacitance
  2754 ;;		_measure_inductance
  2755 ;; This function uses a non-reentrant model
  2756 ;;
  2757                           
  2758                           	psect	text6
  2759  002642                     __ptext6:
  2760                           	opt stack 0
  2761  002642                     _print_reading:
  2762                           	opt stack 28
  2763                           
  2764                           ;incstack = 0
  2765  002642  FFFF               	dw	65535
  2766  002644  0012               	return		;funcret
  2767  002646  FFFF               	dw	65535	; errata NOP
  2768  002648                     __end_of_print_reading:
  2769                           	opt stack 0
  2770                           tblptru	equ	0xFF8
  2771                           tblptrh	equ	0xFF7
  2772                           tblptrl	equ	0xFF6
  2773                           tablat	equ	0xFF5
  2774                           intcon	equ	0xFF2
  2775                           intcon2	equ	0xFF1
  2776                           postinc0	equ	0xFEE
  2777                           wreg	equ	0xFE8
  2778                           indf2	equ	0xFDF
  2779                           fsr2h	equ	0xFDA
  2780                           fsr2l	equ	0xFD9
  2781                           status	equ	0xFD8
  2782                           
  2783 ;; *************** function _format_xint32 *****************
  2784 ;; Defined at:
  2785 ;;		line 48 in file "C:\Users\vboxuser\Desktop\lc-meter\lib\format.c"
  2786 ;; Parameters:    Size  Location     Type
  2787 ;;  x               4   54[COMRAM] unsigned long 
  2788 ;; Auto vars:     Size  Location     Type
  2789 ;;		None
  2790 ;; Return value:  Size  Location     Type
  2791 ;;		None               void
  2792 ;; Registers used:
  2793 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclat, tosl, cstack
  2794 ;; Tracked objects:
  2795 ;;		On entry : 0/0
  2796 ;;		On exit  : 0/0
  2797 ;;		Unchanged: 0/0
  2798 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2799 ;;      Params:         4       0       0       0       0       0       0
  2800 ;;      Locals:         0       0       0       0       0       0       0
  2801 ;;      Temps:          0       0       0       0       0       0       0
  2802 ;;      Totals:         4       0       0       0       0       0       0
  2803 ;;Total ram usage:        4 bytes
  2804 ;; Hardware stack levels used:    1
  2805 ;; Hardware stack levels required when called:    4
  2806 ;; This function calls:
  2807 ;;		_format_number
  2808 ;;		_format_putchar
  2809 ;;		_output_putch
  2810 ;;		_ser_putch
  2811 ;; This function is called by:
  2812 ;;		_measure_capacitance
  2813 ;; This function uses a non-reentrant model
  2814 ;;
  2815                           
  2816                           	psect	text7
  2817  002170                     __ptext7:
  2818                           	opt stack 0
  2819  002170                     _format_xint32:
  2820                           	opt stack 25
  2821                           
  2822                           ;incstack = 0
  2823  002170  FFFF               	dw	65535
  2824                           
  2825                           ;format.c: 49: putchar_ptr('0');
  2826  002172  D801               	call	u3488
  2827  002174  D00C               	goto	u3489
  2828  002176                     u3488:
  2829  002176  FFFF               	dw	65535	; assembler added errata NOP
  2830  002178  0005               	push	
  2831  00217A  6EFA               	movwf	pclath,c
  2832  00217C  5077               	movf	_putchar_ptr,w,c
  2833  00217E  6EFD               	movwf	tosl,c
  2834  002180  5078               	movf	_putchar_ptr+1,w,c
  2835  002182  6EFE               	movwf	tosh,c
  2836  002184  50F8               	movf	tblptru,w,c
  2837  002186  6EFF               	movwf	tosu,c
  2838  002188  50FA               	movf	pclath,w,c
  2839  00218A  0C30               	retlw	48	;indir
  2840  00218C  FFFF               	dw	65535	; errata NOP
  2841  00218E                     u3489:
  2842  00218E  FFFF               	dw	65535	; assembler added errata NOP
  2843                           
  2844                           ;format.c: 50: putchar_ptr('x');
  2845  002190  D801               	call	u3498
  2846  002192  D00C               	goto	u3499
  2847  002194                     u3498:
  2848  002194  FFFF               	dw	65535	; assembler added errata NOP
  2849  002196  0005               	push	
  2850  002198  6EFA               	movwf	pclath,c
  2851  00219A  5077               	movf	_putchar_ptr,w,c
  2852  00219C  6EFD               	movwf	tosl,c
  2853  00219E  5078               	movf	_putchar_ptr+1,w,c
  2854  0021A0  6EFE               	movwf	tosh,c
  2855  0021A2  50F8               	movf	tblptru,w,c
  2856  0021A4  6EFF               	movwf	tosu,c
  2857  0021A6  50FA               	movf	pclath,w,c
  2858  0021A8  0C78               	retlw	120	;indir
  2859  0021AA  FFFF               	dw	65535	; errata NOP
  2860  0021AC                     u3499:
  2861  0021AC  FFFF               	dw	65535	; assembler added errata NOP
  2862                           
  2863                           ;format.c: 51: format_number((unsigned short int)(x >> 16), 16, -4);
  2864  0021AE  C039  F00A         	movff	format_xint32@x+2,format_number@n
  2865  0021B2  C03A  F00B         	movff	format_xint32@x+3,format_number@n+1
  2866  0021B6  0E10               	movlw	16
  2867  0021B8  6E0C               	movwf	format_number@base,c
  2868  0021BA  0EFC               	movlw	252
  2869  0021BC  6E0D               	movwf	format_number@pad,c
  2870  0021BE  EC0F  F00D         	call	_format_number
  2871                           
  2872                           ;format.c: 52: format_number((unsigned short int)(x & 0xffff), 16, -4);
  2873  0021C2  C037  F00A         	movff	format_xint32@x,format_number@n
  2874  0021C6  C038  F00B         	movff	format_xint32@x+1,format_number@n+1
  2875  0021CA  0E10               	movlw	16
  2876  0021CC  6E0C               	movwf	format_number@base,c
  2877  0021CE  0EFC               	movlw	252
  2878  0021D0  6E0D               	movwf	format_number@pad,c
  2879  0021D2  EC0F  F00D         	call	_format_number	;wreg free
  2880  0021D6  0012               	return		;funcret
  2881  0021D8  FFFF               	dw	65535	; errata NOP
  2882  0021DA                     __end_of_format_xint32:
  2883                           	opt stack 0
  2884                           tosu	equ	0xFFF
  2885                           tosh	equ	0xFFE
  2886                           tosl	equ	0xFFD
  2887                           pclath	equ	0xFFA
  2888                           tblptru	equ	0xFF8
  2889                           tblptrh	equ	0xFF7
  2890                           tblptrl	equ	0xFF6
  2891                           tablat	equ	0xFF5
  2892                           intcon	equ	0xFF2
  2893                           intcon2	equ	0xFF1
  2894                           postinc0	equ	0xFEE
  2895                           wreg	equ	0xFE8
  2896                           indf2	equ	0xFDF
  2897                           fsr2h	equ	0xFDA
  2898                           fsr2l	equ	0xFD9
  2899                           status	equ	0xFD8
  2900                           
  2901 ;; *************** function _format_number *****************
  2902 ;; Defined at:
  2903 ;;		line 14 in file "C:\Users\vboxuser\Desktop\lc-meter\lib\format.c"
  2904 ;; Parameters:    Size  Location     Type
  2905 ;;  n               2    9[COMRAM] unsigned short 
  2906 ;;  base            1   11[COMRAM] unsigned char 
  2907 ;;  pad             1   12[COMRAM] char 
  2908 ;; Auto vars:     Size  Location     Type
  2909 ;;  buf            32   17[COMRAM] char [32]
  2910 ;;  i               1   53[COMRAM] char 
  2911 ;;  di              1   52[COMRAM] unsigned char 
  2912 ;;  padchar         1   51[COMRAM] char 
  2913 ;; Return value:  Size  Location     Type
  2914 ;;		None               void
  2915 ;; Registers used:
  2916 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclat, tosl, cstack
  2917 ;; Tracked objects:
  2918 ;;		On entry : 0/0
  2919 ;;		On exit  : 0/0
  2920 ;;		Unchanged: 0/0
  2921 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2922 ;;      Params:         4       0       0       0       0       0       0
  2923 ;;      Locals:        37       0       0       0       0       0       0
  2924 ;;      Temps:          4       0       0       0       0       0       0
  2925 ;;      Totals:        45       0       0       0       0       0       0
  2926 ;;Total ram usage:       45 bytes
  2927 ;; Hardware stack levels used:    1
  2928 ;; Hardware stack levels required when called:    3
  2929 ;; This function calls:
  2930 ;;		___lwdiv
  2931 ;;		___lwmod
  2932 ;;		_format_putchar
  2933 ;;		_output_putch
  2934 ;;		_ser_putch
  2935 ;; This function is called by:
  2936 ;;		_format_xint32
  2937 ;; This function uses a non-reentrant model
  2938 ;;
  2939                           
  2940                           	psect	text8
  2941  001A1E                     __ptext8:
  2942                           	opt stack 0
  2943  001A1E                     _format_number:
  2944                           	opt stack 25
  2945                           
  2946                           ;incstack = 0
  2947  001A1E  FFFF               	dw	65535
  2948                           
  2949                           ;format.c: 15: char buf[8 * sizeof(long)];
  2950                           ;format.c: 16: unsigned char di;
  2951                           ;format.c: 17: signed char i = 0;
  2952  001A20  6A36               	clrf	format_number@i,c
  2953                           
  2954                           ;format.c: 18: char padchar = ' ';
  2955  001A22  0E20               	movlw	32
  2956  001A24  6E34               	movwf	format_number@padchar,c
  2957                           
  2958                           ;format.c: 20: if(pad < 0) {
  2959  001A26  AE0D               	btfss	format_number@pad,7,c
  2960  001A28  D003               	goto	l3407
  2961                           
  2962                           ;format.c: 21: pad = -pad;
  2963  001A2A  6C0D               	negf	format_number@pad,c
  2964                           
  2965                           ;format.c: 22: padchar = '0';
  2966  001A2C  0E30               	movlw	48
  2967  001A2E  6E34               	movwf	format_number@padchar,c
  2968  001A30                     l3407:
  2969  001A30  FFFF               	dw	65535	; assembler added errata NOP
  2970                           
  2971                           ;format.c: 34: di = n % base;
  2972  001A32  C00A  F003         	movff	format_number@n,___lwmod@dividend
  2973  001A36  C00B  F004         	movff	format_number@n+1,___lwmod@dividend+1
  2974  001A3A  C00C  F005         	movff	format_number@base,___lwmod@divisor
  2975  001A3E  6A06               	clrf	___lwmod@divisor+1,c
  2976  001A40  ECF3  F011         	call	___lwmod	;wreg free
  2977  001A44  5003               	movf	?___lwmod,w,c
  2978  001A46  6E35               	movwf	format_number@di,c
  2979                           
  2980                           ;format.c: 35: buf[i++] = (di < 10 ? (unsigned char)'0' + di : (unsigned char)'A' + di -
      +                           10);
  2981  001A48  0E09               	movlw	9
  2982  001A4A  6435               	cpfsgt	format_number@di,c
  2983  001A4C  D002               	goto	l3413
  2984  001A4E  0E37               	movlw	55
  2985  001A50  D002               	goto	L3
  2986  001A52                     l3413:
  2987  001A52  FFFF               	dw	65535	; assembler added errata NOP
  2988  001A54  0E30               	movlw	48
  2989  001A56                     L3:
  2990  001A56  FFFF               	dw	65535	; assembler added errata NOP
  2991  001A58  2435               	addwf	format_number@di,w,c
  2992  001A5A  6E32               	movwf	_format_number$301,c
  2993  001A5C  6A33               	clrf	_format_number$301+1,c
  2994  001A5E  0E00               	movlw	0
  2995  001A60  2233               	addwfc	_format_number$301+1,f,c
  2996  001A62  0E12               	movlw	low format_number@buf
  2997  001A64  2436               	addwf	format_number@i,w,c
  2998  001A66  6ED9               	movwf	fsr2l,c
  2999  001A68  6ADA               	clrf	fsr2h,c
  3000  001A6A  0E00               	movlw	high format_number@buf
  3001  001A6C  22DA               	addwfc	fsr2h,f,c
  3002  001A6E  C032  FFDF         	movff	_format_number$301,indf2
  3003  001A72  2A36               	incf	format_number@i,f,c
  3004                           
  3005                           ;format.c: 37: n /= base;
  3006  001A74  C00A  F003         	movff	format_number@n,___lwdiv@dividend
  3007  001A78  C00B  F004         	movff	format_number@n+1,___lwdiv@dividend+1
  3008  001A7C  C00C  F005         	movff	format_number@base,___lwdiv@divisor
  3009  001A80  6A06               	clrf	___lwdiv@divisor+1,c
  3010  001A82  ECA2  F011         	call	___lwdiv	;wreg free
  3011  001A86  C003  F00A         	movff	?___lwdiv,format_number@n
  3012  001A8A  C004  F00B         	movff	?___lwdiv+1,format_number@n+1
  3013                           
  3014                           ;format.c: 38: } while(n > 0);
  3015  001A8E  500A               	movf	format_number@n,w,c
  3016  001A90  100B               	iorwf	format_number@n+1,w,c
  3017  001A92  E010               	bz	l3425
  3018  001A94  D7CD               	goto	l3407
  3019  001A96                     l3423:
  3020  001A96  D801               	call	u3358
  3021  001A98  D00D               	goto	l3425
  3022  001A9A                     u3358:
  3023  001A9A  FFFF               	dw	65535	; assembler added errata NOP
  3024  001A9C  0005               	push	
  3025  001A9E  6EFA               	movwf	pclath,c
  3026  001AA0  5077               	movf	_putchar_ptr,w,c
  3027  001AA2  6EFD               	movwf	tosl,c
  3028  001AA4  5078               	movf	_putchar_ptr+1,w,c
  3029  001AA6  6EFE               	movwf	tosh,c
  3030  001AA8  50F8               	movf	tblptru,w,c
  3031  001AAA  6EFF               	movwf	tosu,c
  3032  001AAC  50FA               	movf	pclath,w,c
  3033  001AAE  5034               	movf	format_number@padchar,w,c
  3034  001AB0  0012               	return		;indir
  3035  001AB2  FFFF               	dw	65535	; errata NOP
  3036  001AB4                     l3425:
  3037  001AB4  FFFF               	dw	65535	; assembler added errata NOP
  3038  001AB6  060D               	decf	format_number@pad,f,c
  3039  001AB8  280D               	incf	format_number@pad,w,c
  3040  001ABA  6E0E               	movwf	??_format_number& (0+255),c
  3041  001ABC  5036               	movf	format_number@i,w,c
  3042  001ABE  0A80               	xorlw	128
  3043  001AC0  6E0F               	movwf	(??_format_number+1)& (0+255),c
  3044  001AC2  500E               	movf	??_format_number,w,c
  3045  001AC4  0A80               	xorlw	128
  3046  001AC6  5C0F               	subwf	(??_format_number+1)& (0+255),w,c
  3047  001AC8  E3E6               	bnc	l3423
  3048  001ACA                     l3427:
  3049  001ACA  FFFF               	dw	65535	; assembler added errata NOP
  3050                           
  3051                           ;format.c: 42: for(; i > 0; i--) putchar_ptr((char)buf[(signed short int)i - 1]);
  3052  001ACC  5036               	movf	format_number@i,w,c
  3053  001ACE  0A80               	xorlw	128
  3054  001AD0  0F7F               	addlw	-129
  3055  001AD2  E323               	bnc	l352
  3056  001AD4  D801               	call	u3388
  3057  001AD6  D01E               	goto	l3433
  3058  001AD8                     u3388:
  3059  001AD8  FFFF               	dw	65535	; assembler added errata NOP
  3060  001ADA  0005               	push	
  3061  001ADC  6EFA               	movwf	pclath,c
  3062  001ADE  5077               	movf	_putchar_ptr,w,c
  3063  001AE0  6EFD               	movwf	tosl,c
  3064  001AE2  5078               	movf	_putchar_ptr+1,w,c
  3065  001AE4  6EFE               	movwf	tosh,c
  3066  001AE6  50F8               	movf	tblptru,w,c
  3067  001AE8  6EFF               	movwf	tosu,c
  3068  001AEA  50FA               	movf	pclath,w,c
  3069  001AEC  680E               	setf	??_format_number& (0+255),c
  3070  001AEE  680F               	setf	(??_format_number+1)& (0+255),c
  3071  001AF0  C036  F010         	movff	format_number@i,??_format_number+2
  3072  001AF4  6A11               	clrf	(??_format_number+3)& (0+255),c
  3073  001AF6  BE10               	btfsc	(??_format_number+2)& (0+255),7,c
  3074  001AF8  0611               	decf	(??_format_number+3)& (0+255),f,c
  3075  001AFA  500E               	movf	??_format_number,w,c
  3076  001AFC  2610               	addwf	??_format_number+2,f,c
  3077  001AFE  500F               	movf	??_format_number+1,w,c
  3078  001B00  2211               	addwfc	??_format_number+3,f,c
  3079  001B02  0E12               	movlw	low format_number@buf
  3080  001B04  2410               	addwf	??_format_number+2,w,c
  3081  001B06  6ED9               	movwf	fsr2l,c
  3082  001B08  0E00               	movlw	high format_number@buf
  3083  001B0A  2011               	addwfc	??_format_number+3,w,c
  3084  001B0C  6EDA               	movwf	fsr2h,c
  3085  001B0E  50DF               	movf	indf2,w,c
  3086  001B10  0012               	return		;indir
  3087  001B12  FFFF               	dw	65535	; errata NOP
  3088  001B14                     l3433:
  3089  001B14  FFFF               	dw	65535	; assembler added errata NOP
  3090  001B16  0636               	decf	format_number@i,f,c
  3091  001B18  D7D8               	goto	l3427
  3092  001B1A                     l352:
  3093  001B1A  0012               	return		;funcret
  3094  001B1C  FFFF               	dw	65535	; errata NOP
  3095  001B1E                     __end_of_format_number:
  3096                           	opt stack 0
  3097                           tosu	equ	0xFFF
  3098                           tosh	equ	0xFFE
  3099                           tosl	equ	0xFFD
  3100                           pclath	equ	0xFFA
  3101                           tblptru	equ	0xFF8
  3102                           tblptrh	equ	0xFF7
  3103                           tblptrl	equ	0xFF6
  3104                           tablat	equ	0xFF5
  3105                           intcon	equ	0xFF2
  3106                           intcon2	equ	0xFF1
  3107                           postinc0	equ	0xFEE
  3108                           wreg	equ	0xFE8
  3109                           indf2	equ	0xFDF
  3110                           fsr2h	equ	0xFDA
  3111                           fsr2l	equ	0xFD9
  3112                           status	equ	0xFD8
  3113                           
  3114 ;; *************** function ___lwmod *****************
  3115 ;; Defined at:
  3116 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lwmod.c"
  3117 ;; Parameters:    Size  Location     Type
  3118 ;;  dividend        2    2[COMRAM] unsigned int 
  3119 ;;  divisor         2    4[COMRAM] unsigned int 
  3120 ;; Auto vars:     Size  Location     Type
  3121 ;;  counter         1    6[COMRAM] unsigned char 
  3122 ;; Return value:  Size  Location     Type
  3123 ;;                  2    2[COMRAM] unsigned int 
  3124 ;; Registers used:
  3125 ;;		wreg, status,2, status,0
  3126 ;; Tracked objects:
  3127 ;;		On entry : 0/0
  3128 ;;		On exit  : 0/0
  3129 ;;		Unchanged: 0/0
  3130 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3131 ;;      Params:         4       0       0       0       0       0       0
  3132 ;;      Locals:         1       0       0       0       0       0       0
  3133 ;;      Temps:          0       0       0       0       0       0       0
  3134 ;;      Totals:         5       0       0       0       0       0       0
  3135 ;;Total ram usage:        5 bytes
  3136 ;; Hardware stack levels used:    1
  3137 ;; Hardware stack levels required when called:    1
  3138 ;; This function calls:
  3139 ;;		Nothing
  3140 ;; This function is called by:
  3141 ;;		_format_number
  3142 ;; This function uses a non-reentrant model
  3143 ;;
  3144                           
  3145                           	psect	text9
  3146  0023E6                     __ptext9:
  3147                           	opt stack 0
  3148  0023E6                     ___lwmod:
  3149                           	opt stack 26
  3150                           
  3151                           ;incstack = 0
  3152  0023E6  FFFF               	dw	65535
  3153  0023E8  5005               	movf	___lwmod@divisor,w,c
  3154  0023EA  1006               	iorwf	___lwmod@divisor+1,w,c
  3155  0023EC  E01A               	bz	l944
  3156  0023EE  0E01               	movlw	1
  3157  0023F0  6E07               	movwf	___lwmod@counter,c
  3158  0023F2  D005               	goto	l3347
  3159  0023F4                     l3345:
  3160  0023F4  FFFF               	dw	65535	; assembler added errata NOP
  3161  0023F6  90D8               	bcf	status,0,c
  3162  0023F8  3605               	rlcf	___lwmod@divisor,f,c
  3163  0023FA  3606               	rlcf	___lwmod@divisor+1,f,c
  3164  0023FC  2A07               	incf	___lwmod@counter,f,c
  3165  0023FE                     l3347:
  3166  0023FE  FFFF               	dw	65535	; assembler added errata NOP
  3167  002400  AE06               	btfss	___lwmod@divisor+1,7,c
  3168  002402  D7F8               	goto	l3345
  3169  002404                     l3349:
  3170  002404  FFFF               	dw	65535	; assembler added errata NOP
  3171  002406  5005               	movf	___lwmod@divisor,w,c
  3172  002408  5C03               	subwf	___lwmod@dividend,w,c
  3173  00240A  5006               	movf	___lwmod@divisor+1,w,c
  3174  00240C  5804               	subwfb	___lwmod@dividend+1,w,c
  3175  00240E  E304               	bnc	l3353
  3176  002410  5005               	movf	___lwmod@divisor,w,c
  3177  002412  5E03               	subwf	___lwmod@dividend,f,c
  3178  002414  5006               	movf	___lwmod@divisor+1,w,c
  3179  002416  5A04               	subwfb	___lwmod@dividend+1,f,c
  3180  002418                     l3353:
  3181  002418  90D8               	bcf	status,0,c
  3182  00241A  3206               	rrcf	___lwmod@divisor+1,f,c
  3183  00241C  3205               	rrcf	___lwmod@divisor,f,c
  3184  00241E  2E07               	decfsz	___lwmod@counter,f,c
  3185  002420  D7F1               	goto	l3349
  3186  002422                     l944:
  3187  002422  C003  F003         	movff	___lwmod@dividend,?___lwmod
  3188  002426  C004  F004         	movff	___lwmod@dividend+1,?___lwmod+1
  3189  00242A  0012               	return		;funcret
  3190  00242C  FFFF               	dw	65535	; errata NOP
  3191  00242E                     __end_of___lwmod:
  3192                           	opt stack 0
  3193                           tosu	equ	0xFFF
  3194                           tosh	equ	0xFFE
  3195                           tosl	equ	0xFFD
  3196                           pclath	equ	0xFFA
  3197                           tblptru	equ	0xFF8
  3198                           tblptrh	equ	0xFF7
  3199                           tblptrl	equ	0xFF6
  3200                           tablat	equ	0xFF5
  3201                           intcon	equ	0xFF2
  3202                           intcon2	equ	0xFF1
  3203                           postinc0	equ	0xFEE
  3204                           wreg	equ	0xFE8
  3205                           indf2	equ	0xFDF
  3206                           fsr2h	equ	0xFDA
  3207                           fsr2l	equ	0xFD9
  3208                           status	equ	0xFD8
  3209                           
  3210 ;; *************** function ___lwdiv *****************
  3211 ;; Defined at:
  3212 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lwdiv.c"
  3213 ;; Parameters:    Size  Location     Type
  3214 ;;  dividend        2    2[COMRAM] unsigned int 
  3215 ;;  divisor         2    4[COMRAM] unsigned int 
  3216 ;; Auto vars:     Size  Location     Type
  3217 ;;  quotient        2    7[COMRAM] unsigned int 
  3218 ;;  counter         1    6[COMRAM] unsigned char 
  3219 ;; Return value:  Size  Location     Type
  3220 ;;                  2    2[COMRAM] unsigned int 
  3221 ;; Registers used:
  3222 ;;		wreg, status,2, status,0
  3223 ;; Tracked objects:
  3224 ;;		On entry : 0/0
  3225 ;;		On exit  : 0/0
  3226 ;;		Unchanged: 0/0
  3227 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3228 ;;      Params:         4       0       0       0       0       0       0
  3229 ;;      Locals:         3       0       0       0       0       0       0
  3230 ;;      Temps:          0       0       0       0       0       0       0
  3231 ;;      Totals:         7       0       0       0       0       0       0
  3232 ;;Total ram usage:        7 bytes
  3233 ;; Hardware stack levels used:    1
  3234 ;; Hardware stack levels required when called:    1
  3235 ;; This function calls:
  3236 ;;		Nothing
  3237 ;; This function is called by:
  3238 ;;		_format_number
  3239 ;; This function uses a non-reentrant model
  3240 ;;
  3241                           
  3242                           	psect	text10
  3243  002344                     __ptext10:
  3244                           	opt stack 0
  3245  002344                     ___lwdiv:
  3246                           	opt stack 26
  3247                           
  3248                           ;incstack = 0
  3249  002344  FFFF               	dw	65535
  3250  002346  6A08               	clrf	___lwdiv@quotient,c
  3251  002348  6A09               	clrf	___lwdiv@quotient+1,c
  3252  00234A  5005               	movf	___lwdiv@divisor,w,c
  3253  00234C  1006               	iorwf	___lwdiv@divisor+1,w,c
  3254  00234E  E01E               	bz	l934
  3255  002350  0E01               	movlw	1
  3256  002352  6E07               	movwf	___lwdiv@counter,c
  3257  002354  D005               	goto	l3327
  3258  002356                     l3325:
  3259  002356  FFFF               	dw	65535	; assembler added errata NOP
  3260  002358  90D8               	bcf	status,0,c
  3261  00235A  3605               	rlcf	___lwdiv@divisor,f,c
  3262  00235C  3606               	rlcf	___lwdiv@divisor+1,f,c
  3263  00235E  2A07               	incf	___lwdiv@counter,f,c
  3264  002360                     l3327:
  3265  002360  FFFF               	dw	65535	; assembler added errata NOP
  3266  002362  AE06               	btfss	___lwdiv@divisor+1,7,c
  3267  002364  D7F8               	goto	l3325
  3268  002366                     l3329:
  3269  002366  FFFF               	dw	65535	; assembler added errata NOP
  3270  002368  90D8               	bcf	status,0,c
  3271  00236A  3608               	rlcf	___lwdiv@quotient,f,c
  3272  00236C  3609               	rlcf	___lwdiv@quotient+1,f,c
  3273  00236E  5005               	movf	___lwdiv@divisor,w,c
  3274  002370  5C03               	subwf	___lwdiv@dividend,w,c
  3275  002372  5006               	movf	___lwdiv@divisor+1,w,c
  3276  002374  5804               	subwfb	___lwdiv@dividend+1,w,c
  3277  002376  E305               	bnc	l3337
  3278  002378  5005               	movf	___lwdiv@divisor,w,c
  3279  00237A  5E03               	subwf	___lwdiv@dividend,f,c
  3280  00237C  5006               	movf	___lwdiv@divisor+1,w,c
  3281  00237E  5A04               	subwfb	___lwdiv@dividend+1,f,c
  3282  002380  8008               	bsf	___lwdiv@quotient,0,c
  3283  002382                     l3337:
  3284  002382  90D8               	bcf	status,0,c
  3285  002384  3206               	rrcf	___lwdiv@divisor+1,f,c
  3286  002386  3205               	rrcf	___lwdiv@divisor,f,c
  3287  002388  2E07               	decfsz	___lwdiv@counter,f,c
  3288  00238A  D7ED               	goto	l3329
  3289  00238C                     l934:
  3290  00238C  C008  F003         	movff	___lwdiv@quotient,?___lwdiv
  3291  002390  C009  F004         	movff	___lwdiv@quotient+1,?___lwdiv+1
  3292  002394  0012               	return		;funcret
  3293  002396  FFFF               	dw	65535	; errata NOP
  3294  002398                     __end_of___lwdiv:
  3295                           	opt stack 0
  3296                           tosu	equ	0xFFF
  3297                           tosh	equ	0xFFE
  3298                           tosl	equ	0xFFD
  3299                           pclath	equ	0xFFA
  3300                           tblptru	equ	0xFF8
  3301                           tblptrh	equ	0xFF7
  3302                           tblptrl	equ	0xFF6
  3303                           tablat	equ	0xFF5
  3304                           intcon	equ	0xFF2
  3305                           intcon2	equ	0xFF1
  3306                           postinc0	equ	0xFEE
  3307                           wreg	equ	0xFE8
  3308                           indf2	equ	0xFDF
  3309                           fsr2h	equ	0xFDA
  3310                           fsr2l	equ	0xFD9
  3311                           status	equ	0xFD8
  3312                           
  3313 ;; *************** function _format_double *****************
  3314 ;; Defined at:
  3315 ;;		line 74 in file "C:\Users\vboxuser\Desktop\lc-meter\lib\format.c"
  3316 ;; Parameters:    Size  Location     Type
  3317 ;;  num             4   28[BANK0 ] unsigned int 
  3318 ;; Auto vars:     Size  Location     Type
  3319 ;;  weight          4   40[BANK0 ] unsigned int 
  3320 ;;  m               2   46[BANK0 ] short 
  3321 ;;  digit           2   44[BANK0 ] short 
  3322 ;; Return value:  Size  Location     Type
  3323 ;;		None               void
  3324 ;; Registers used:
  3325 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, cstack
  3326 ;; Tracked objects:
  3327 ;;		On entry : 0/0
  3328 ;;		On exit  : 0/0
  3329 ;;		Unchanged: 0/0
  3330 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3331 ;;      Params:         0       4       0       0       0       0       0
  3332 ;;      Locals:         0      16       0       0       0       0       0
  3333 ;;      Temps:          0       0       0       0       0       0       0
  3334 ;;      Totals:         0      20       0       0       0       0       0
  3335 ;;Total ram usage:       20 bytes
  3336 ;; Hardware stack levels used:    1
  3337 ;; Hardware stack levels required when called:    6
  3338 ;; This function calls:
  3339 ;;		___awtofl
  3340 ;;		___fldiv
  3341 ;;		___flge
  3342 ;;		___flmul
  3343 ;;		___flsub
  3344 ;;		___fltol
  3345 ;;		_floor
  3346 ;;		_format_putchar
  3347 ;;		_log10
  3348 ;;		_output_putch
  3349 ;;		_pow
  3350 ;;		_ser_putch
  3351 ;; This function is called by:
  3352 ;;		_measure_capacitance
  3353 ;; This function uses a non-reentrant model
  3354 ;;
  3355                           
  3356                           	psect	text11
  3357  001210                     __ptext11:
  3358                           	opt stack 0
  3359  001210                     _format_double:
  3360                           	opt stack 23
  3361                           
  3362                           ;incstack = 0
  3363  001210  FFFF               	dw	65535
  3364                           
  3365                           ;format.c: 75: short m = (short)log10(num);
  3366  001212  C0D6  F04D         	movff	format_double@num,log10@x
  3367  001216  C0D7  F04E         	movff	format_double@num+1,log10@x+1
  3368  00121A  C0D8  F04F         	movff	format_double@num+2,log10@x+2
  3369  00121E  C0D9  F050         	movff	format_double@num+3,log10@x+3
  3370  001222  EC1E  F011         	call	_log10
  3371  001226  C04D  F055         	movff	?_log10,___fltol@f1
  3372  00122A  C04E  F056         	movff	?_log10+1,___fltol@f1+1
  3373  00122E  C04F  F057         	movff	?_log10+2,___fltol@f1+2
  3374  001232  C050  F058         	movff	?_log10+3,___fltol@f1+3
  3375  001236  ECDB  F00E         	call	___fltol	;wreg free
  3376  00123A  C055  F0E8         	movff	?___fltol,format_double@m
  3377  00123E  C056  F0E9         	movff	?___fltol+1,format_double@m+1
  3378                           
  3379                           ;format.c: 76: short digit;
  3380                           ;format.c: 79: while(num > 0 + 1.19209290e-07) {
  3381  001242  D0B5               	goto	l3551
  3382  001244                     l3533:
  3383  001244  FFFF               	dw	65535	; assembler added errata NOP
  3384                           
  3385                           ;format.c: 80: double weight = pow(10.0l, m);
  3386  001246  C0E8  F00D         	movff	format_double@m,___awtofl@c
  3387  00124A  C0E9  F00E         	movff	format_double@m+1,___awtofl@c+1
  3388  00124E  EC3B  F012         	call	___awtofl	;wreg free
  3389  001252  C00D  F0DA         	movff	?___awtofl,_format_double$935
  3390  001256  C00E  F0DB         	movff	?___awtofl+1,_format_double$935+1
  3391  00125A  C00F  F0DC         	movff	?___awtofl+2,_format_double$935+2
  3392  00125E  C010  F0DD         	movff	?___awtofl+3,_format_double$935+3
  3393                           
  3394                           ;format.c: 80: double weight = pow(10.0l, m);
  3395  001262  0100               	movlb	0	; () banked
  3396  001264  6BC1               	clrf	pow@x& (0+255),b
  3397  001266  6BC2               	clrf	(pow@x+1)& (0+255),b
  3398  001268  0E20               	movlw	32
  3399  00126A  6FC3               	movwf	(pow@x+2)& (0+255),b
  3400  00126C  0E41               	movlw	65
  3401  00126E  6FC4               	movwf	(pow@x+3)& (0+255),b
  3402  001270  C0DA  F0C5         	movff	_format_double$935,pow@y
  3403  001274  C0DB  F0C6         	movff	_format_double$935+1,pow@y+1
  3404  001278  C0DC  F0C7         	movff	_format_double$935+2,pow@y+2
  3405  00127C  C0DD  F0C8         	movff	_format_double$935+3,pow@y+3
  3406  001280  ECEC  F009         	call	_pow	;wreg free
  3407  001284  C0C1  F0E2         	movff	?_pow,format_double@weight
  3408  001288  C0C2  F0E3         	movff	?_pow+1,format_double@weight+1
  3409  00128C  C0C3  F0E4         	movff	?_pow+2,format_double@weight+2
  3410  001290  C0C4  F0E5         	movff	?_pow+3,format_double@weight+3
  3411                           
  3412                           ; BSR set to: 0
  3413                           ;format.c: 81: digit = (short)floor(num / weight);
  3414  001294  C0E2  F011         	movff	format_double@weight,___fldiv@f1
  3415  001298  C0E3  F012         	movff	format_double@weight+1,___fldiv@f1+1
  3416  00129C  C0E4  F013         	movff	format_double@weight+2,___fldiv@f1+2
  3417  0012A0  C0E5  F014         	movff	format_double@weight+3,___fldiv@f1+3
  3418  0012A4  C0D6  F00D         	movff	format_double@num,___fldiv@f2
  3419  0012A8  C0D7  F00E         	movff	format_double@num+1,___fldiv@f2+1
  3420  0012AC  C0D8  F00F         	movff	format_double@num+2,___fldiv@f2+2
  3421  0012B0  C0D9  F010         	movff	format_double@num+3,___fldiv@f2+3
  3422  0012B4  EC33  F00F         	call	___fldiv	;wreg free
  3423  0012B8  C00D  F064         	movff	?___fldiv,floor@x
  3424  0012BC  C00E  F065         	movff	?___fldiv+1,floor@x+1
  3425  0012C0  C00F  F066         	movff	?___fldiv+2,floor@x+2
  3426  0012C4  C010  F067         	movff	?___fldiv+3,floor@x+3
  3427  0012C8  EC09  F00C         	call	_floor	;wreg free
  3428  0012CC  C064  F0DE         	movff	?_floor,_format_double$936
  3429  0012D0  C065  F0DF         	movff	?_floor+1,_format_double$936+1
  3430  0012D4  C066  F0E0         	movff	?_floor+2,_format_double$936+2
  3431  0012D8  C067  F0E1         	movff	?_floor+3,_format_double$936+3
  3432                           
  3433                           ;format.c: 81: digit = (short)floor(num / weight);
  3434  0012DC  C0DE  F055         	movff	_format_double$936,___fltol@f1
  3435  0012E0  C0DF  F056         	movff	_format_double$936+1,___fltol@f1+1
  3436  0012E4  C0E0  F057         	movff	_format_double$936+2,___fltol@f1+2
  3437  0012E8  C0E1  F058         	movff	_format_double$936+3,___fltol@f1+3
  3438  0012EC  ECDB  F00E         	call	___fltol	;wreg free
  3439  0012F0  C055  F0E6         	movff	?___fltol,format_double@digit
  3440  0012F4  C056  F0E7         	movff	?___fltol+1,format_double@digit+1
  3441                           
  3442                           ;format.c: 82: num -= (digit * weight);
  3443  0012F8  C0D6  F037         	movff	format_double@num,___flsub@f1
  3444  0012FC  C0D7  F038         	movff	format_double@num+1,___flsub@f1+1
  3445  001300  C0D8  F039         	movff	format_double@num+2,___flsub@f1+2
  3446  001304  C0D9  F03A         	movff	format_double@num+3,___flsub@f1+3
  3447  001308  C0E2  F020         	movff	format_double@weight,___flmul@f2
  3448  00130C  C0E3  F021         	movff	format_double@weight+1,___flmul@f2+1
  3449  001310  C0E4  F022         	movff	format_double@weight+2,___flmul@f2+2
  3450  001314  C0E5  F023         	movff	format_double@weight+3,___flmul@f2+3
  3451  001318  C0E6  F00D         	movff	format_double@digit,___awtofl@c
  3452  00131C  C0E7  F00E         	movff	format_double@digit+1,___awtofl@c+1
  3453  001320  EC3B  F012         	call	___awtofl	;wreg free
  3454  001324  C00D  F01C         	movff	?___awtofl,___flmul@f1
  3455  001328  C00E  F01D         	movff	?___awtofl+1,___flmul@f1+1
  3456  00132C  C00F  F01E         	movff	?___awtofl+2,___flmul@f1+2
  3457  001330  C010  F01F         	movff	?___awtofl+3,___flmul@f1+3
  3458  001334  EC02  F00E         	call	___flmul	;wreg free
  3459  001338  C01C  F03B         	movff	?___flmul,___flsub@f2
  3460  00133C  C01D  F03C         	movff	?___flmul+1,___flsub@f2+1
  3461  001340  C01E  F03D         	movff	?___flmul+2,___flsub@f2+2
  3462  001344  C01F  F03E         	movff	?___flmul+3,___flsub@f2+3
  3463  001348  EC17  F012         	call	___flsub	;wreg free
  3464  00134C  C037  F0D6         	movff	?___flsub,format_double@num
  3465  001350  C038  F0D7         	movff	?___flsub+1,format_double@num+1
  3466  001354  C039  F0D8         	movff	?___flsub+2,format_double@num+2
  3467  001358  C03A  F0D9         	movff	?___flsub+3,format_double@num+3
  3468                           
  3469                           ;format.c: 83: putchar_ptr((char)('0' + digit));
  3470  00135C  D801               	call	u3508
  3471  00135E  D00F               	goto	l3545
  3472  001360                     u3508:
  3473  001360  FFFF               	dw	65535	; assembler added errata NOP
  3474  001362  0005               	push	
  3475  001364  6EFA               	movwf	pclath,c
  3476  001366  5077               	movf	_putchar_ptr,w,c
  3477  001368  6EFD               	movwf	tosl,c
  3478  00136A  5078               	movf	_putchar_ptr+1,w,c
  3479  00136C  6EFE               	movwf	tosh,c
  3480  00136E  50F8               	movf	tblptru,w,c
  3481  001370  6EFF               	movwf	tosu,c
  3482  001372  50FA               	movf	pclath,w,c
  3483  001374  0100               	movlb	0	; () banked
  3484  001376  51E6               	movf	format_double@digit& (0+255),w,b
  3485  001378  0F30               	addlw	48
  3486  00137A  0012               	return		;indir
  3487  00137C  FFFF               	dw	65535	; errata NOP
  3488  00137E                     l3545:
  3489  00137E  FFFF               	dw	65535	; assembler added errata NOP
  3490                           
  3491                           ;format.c: 84: if(m == 0)
  3492  001380  0100               	movlb	0	; () banked
  3493  001382  51E8               	movf	format_double@m& (0+255),w,b
  3494  001384  11E9               	iorwf	(format_double@m+1)& (0+255),w,b
  3495  001386  E10E               	bnz	l3549
  3496                           
  3497                           ; BSR set to: 0
  3498                           ;format.c: 85: putchar_ptr('.');
  3499  001388  D801               	call	u3528
  3500  00138A  D00C               	goto	l3549
  3501  00138C                     u3528:
  3502  00138C  FFFF               	dw	65535	; assembler added errata NOP
  3503  00138E  0005               	push	
  3504  001390  6EFA               	movwf	pclath,c
  3505  001392  5077               	movf	_putchar_ptr,w,c
  3506  001394  6EFD               	movwf	tosl,c
  3507  001396  5078               	movf	_putchar_ptr+1,w,c
  3508  001398  6EFE               	movwf	tosh,c
  3509  00139A  50F8               	movf	tblptru,w,c
  3510  00139C  6EFF               	movwf	tosu,c
  3511  00139E  50FA               	movf	pclath,w,c
  3512  0013A0  0C2E               	retlw	46	;indir
  3513  0013A2  FFFF               	dw	65535	; errata NOP
  3514  0013A4                     l3549:
  3515  0013A4  FFFF               	dw	65535	; assembler added errata NOP
  3516                           
  3517                           ;format.c: 86: m--;
  3518  0013A6  0100               	movlb	0	; () banked
  3519  0013A8  07E8               	decf	format_double@m& (0+255),f,b
  3520  0013AA  A0D8               	btfss	status,0,c
  3521  0013AC  07E9               	decf	(format_double@m+1)& (0+255),f,b
  3522  0013AE                     l3551:
  3523  0013AE  FFFF               	dw	65535	; assembler added errata NOP
  3524  0013B0  6A03               	clrf	___flge@ff1,c
  3525  0013B2  6A04               	clrf	___flge@ff1+1,c
  3526  0013B4  6A05               	clrf	___flge@ff1+2,c
  3527  0013B6  0E34               	movlw	52
  3528  0013B8  6E06               	movwf	___flge@ff1+3,c
  3529  0013BA  C0D6  F007         	movff	format_double@num,___flge@ff2
  3530  0013BE  C0D7  F008         	movff	format_double@num+1,___flge@ff2+1
  3531  0013C2  C0D8  F009         	movff	format_double@num+2,___flge@ff2+2
  3532  0013C6  C0D9  F00A         	movff	format_double@num+3,___flge@ff2+3
  3533  0013CA  EC4D  F011         	call	___flge
  3534  0013CE  B0D8               	btfsc	status,0,c
  3535  0013D0  0012               	return		;funcret
  3536  0013D2  FFFF               	dw	65535	; assembler added errata NOP
  3537  0013D4  D737               	goto	l3533
  3538  0013D6  FFFF               	dw	65535	; errata NOP
  3539  0013D8                     __end_of_format_double:
  3540                           	opt stack 0
  3541                           tosu	equ	0xFFF
  3542                           tosh	equ	0xFFE
  3543                           tosl	equ	0xFFD
  3544                           pclath	equ	0xFFA
  3545                           tblptru	equ	0xFF8
  3546                           tblptrh	equ	0xFF7
  3547                           tblptrl	equ	0xFF6
  3548                           tablat	equ	0xFF5
  3549                           intcon	equ	0xFF2
  3550                           intcon2	equ	0xFF1
  3551                           postinc0	equ	0xFEE
  3552                           wreg	equ	0xFE8
  3553                           indf2	equ	0xFDF
  3554                           fsr2h	equ	0xFDA
  3555                           fsr2l	equ	0xFD9
  3556                           status	equ	0xFD8
  3557                           
  3558 ;; *************** function _pow *****************
  3559 ;; Defined at:
  3560 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\pow.c"
  3561 ;; Parameters:    Size  Location     Type
  3562 ;;  x               4    7[BANK0 ] short 
  3563 ;;  y               4   11[BANK0 ] short 
  3564 ;; Auto vars:     Size  Location     Type
  3565 ;;  yi              4   24[BANK0 ] unsigned long 
  3566 ;;  sign            1   23[BANK0 ] unsigned char 
  3567 ;; Return value:  Size  Location     Type
  3568 ;;                  4    7[BANK0 ] unsigned char 
  3569 ;; Registers used:
  3570 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3571 ;; Tracked objects:
  3572 ;;		On entry : F/0
  3573 ;;		On exit  : F/0
  3574 ;;		Unchanged: 0/0
  3575 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3576 ;;      Params:         0       8       0       0       0       0       0
  3577 ;;      Locals:         0      13       0       0       0       0       0
  3578 ;;      Temps:          0       0       0       0       0       0       0
  3579 ;;      Totals:         0      21       0       0       0       0       0
  3580 ;;Total ram usage:       21 bytes
  3581 ;; Hardware stack levels used:    1
  3582 ;; Hardware stack levels required when called:    5
  3583 ;; This function calls:
  3584 ;;		___flge
  3585 ;;		___flmul
  3586 ;;		___flneg
  3587 ;;		___fltol
  3588 ;;		___lltofl
  3589 ;;		_exp
  3590 ;;		_log
  3591 ;; This function is called by:
  3592 ;;		_format_double
  3593 ;; This function uses a non-reentrant model
  3594 ;;
  3595                           
  3596                           	psect	text12
  3597  0013D8                     __ptext12:
  3598                           	opt stack 0
  3599  0013D8                     _pow:
  3600                           	opt stack 23
  3601                           
  3602                           ;incstack = 0
  3603  0013D8  FFFF               	dw	65535
  3604                           
  3605                           ; BSR set to: 0
  3606  0013DA  6BD1               	clrf	pow@sign& (0+255),b
  3607                           
  3608                           ; BSR set to: 0
  3609  0013DC  51C1               	movf	pow@x& (0+255),w,b
  3610  0013DE  11C2               	iorwf	(pow@x+1)& (0+255),w,b
  3611  0013E0  11C3               	iorwf	(pow@x+2)& (0+255),w,b
  3612  0013E2  11C4               	iorwf	(pow@x+3)& (0+255),w,b
  3613  0013E4  E110               	bnz	l3449
  3614                           
  3615                           ; BSR set to: 0
  3616  0013E6  6A03               	clrf	___flge@ff1,c
  3617  0013E8  6A04               	clrf	___flge@ff1+1,c
  3618  0013EA  6A05               	clrf	___flge@ff1+2,c
  3619  0013EC  6A06               	clrf	___flge@ff1+3,c
  3620  0013EE  C0C5  F007         	movff	pow@y,___flge@ff2
  3621  0013F2  C0C6  F008         	movff	pow@y+1,___flge@ff2+1
  3622  0013F6  C0C7  F009         	movff	pow@y+2,___flge@ff2+2
  3623  0013FA  C0C8  F00A         	movff	pow@y+3,___flge@ff2+3
  3624  0013FE  EC4D  F011         	call	___flge	;wreg free
  3625  001402  0100               	movlb	0	; () banked
  3626  001404  D037               	goto	l3459
  3627  001406                     l3449:
  3628                           
  3629                           ; BSR set to: 0
  3630  001406  51C5               	movf	pow@y& (0+255),w,b
  3631  001408  11C6               	iorwf	(pow@y+1)& (0+255),w,b
  3632  00140A  11C7               	iorwf	(pow@y+2)& (0+255),w,b
  3633  00140C  11C8               	iorwf	(pow@y+3)& (0+255),w,b
  3634  00140E  E107               	bnz	l3455
  3635                           
  3636                           ; BSR set to: 0
  3637  001410  6BC1               	clrf	?_pow& (0+255),b
  3638  001412  6BC2               	clrf	(?_pow+1)& (0+255),b
  3639  001414  0E80               	movlw	128
  3640  001416  6FC3               	movwf	(?_pow+2)& (0+255),b
  3641  001418  0E3F               	movlw	63
  3642  00141A  6FC4               	movwf	(?_pow+3)& (0+255),b
  3643  00141C  D0A3               	goto	l972
  3644  00141E                     l3455:
  3645                           
  3646                           ; BSR set to: 0
  3647  00141E  AFC4               	btfss	(pow@x+3)& (0+255),7,b
  3648  001420  D044               	goto	l3465
  3649                           
  3650                           ; BSR set to: 0
  3651  001422  C0C5  F055         	movff	pow@y,___fltol@f1
  3652  001426  C0C6  F056         	movff	pow@y+1,___fltol@f1+1
  3653  00142A  C0C7  F057         	movff	pow@y+2,___fltol@f1+2
  3654  00142E  C0C8  F058         	movff	pow@y+3,___fltol@f1+3
  3655  001432  ECDB  F00E         	call	___fltol	;wreg free
  3656  001436  C055  F0D2         	movff	?___fltol,pow@yi
  3657  00143A  C056  F0D3         	movff	?___fltol+1,pow@yi+1
  3658  00143E  C057  F0D4         	movff	?___fltol+2,pow@yi+2
  3659  001442  C058  F0D5         	movff	?___fltol+3,pow@yi+3
  3660  001446  C0D2  F00D         	movff	pow@yi,___lltofl@c
  3661  00144A  C0D3  F00E         	movff	pow@yi+1,___lltofl@c+1
  3662  00144E  C0D4  F00F         	movff	pow@yi+2,___lltofl@c+2
  3663  001452  C0D5  F010         	movff	pow@yi+3,___lltofl@c+3
  3664  001456  EC92  F012         	call	___lltofl	;wreg free
  3665  00145A  0100               	movlb	0	; () banked
  3666  00145C  51C5               	movf	pow@y& (0+255),w,b
  3667  00145E  180D               	xorwf	?___lltofl,w,c
  3668  001460  E109               	bnz	u3420
  3669  001462  51C6               	movf	(pow@y+1)& (0+255),w,b
  3670  001464  180E               	xorwf	?___lltofl+1,w,c
  3671  001466  E106               	bnz	u3420
  3672  001468  51C7               	movf	(pow@y+2)& (0+255),w,b
  3673  00146A  180F               	xorwf	?___lltofl+2,w,c
  3674  00146C  E103               	bnz	u3420
  3675  00146E  51C8               	movf	(pow@y+3)& (0+255),w,b
  3676  001470  1810               	xorwf	?___lltofl+3,w,c
  3677  001472  E006               	bz	l3461
  3678  001474                     u3420:
  3679  001474                     l3459:
  3680  001474  FFFF               	dw	65535	; assembler added errata NOP
  3681                           
  3682                           ; BSR set to: 0
  3683  001476  6BC1               	clrf	?_pow& (0+255),b
  3684  001478  6BC2               	clrf	(?_pow+1)& (0+255),b
  3685  00147A  6BC3               	clrf	(?_pow+2)& (0+255),b
  3686  00147C  6BC4               	clrf	(?_pow+3)& (0+255),b
  3687  00147E  D072               	goto	l972
  3688  001480                     l3461:
  3689                           
  3690                           ; BSR set to: 0
  3691  001480  51D2               	movf	pow@yi& (0+255),w,b
  3692  001482  0B01               	andlw	1
  3693  001484  6FD1               	movwf	pow@sign& (0+255),b
  3694                           
  3695                           ; BSR set to: 0
  3696  001486  C0C1  F003         	movff	pow@x,___flneg@f1
  3697  00148A  C0C2  F004         	movff	pow@x+1,___flneg@f1+1
  3698  00148E  C0C3  F005         	movff	pow@x+2,___flneg@f1+2
  3699  001492  C0C4  F006         	movff	pow@x+3,___flneg@f1+3
  3700  001496  EC05  F013         	call	___flneg	;wreg free
  3701  00149A  C003  F0C1         	movff	?___flneg,pow@x
  3702  00149E  C004  F0C2         	movff	?___flneg+1,pow@x+1
  3703  0014A2  C005  F0C3         	movff	?___flneg+2,pow@x+2
  3704  0014A6  C006  F0C4         	movff	?___flneg+3,pow@x+3
  3705  0014AA                     l3465:
  3706  0014AA  FFFF               	dw	65535	; assembler added errata NOP
  3707                           
  3708                           ; BSR set to: 0
  3709  0014AC  C0C1  F047         	movff	pow@x,log@x
  3710  0014B0  C0C2  F048         	movff	pow@x+1,log@x+1
  3711  0014B4  C0C3  F049         	movff	pow@x+2,log@x+2
  3712  0014B8  C0C4  F04A         	movff	pow@x+3,log@x+3
  3713  0014BC  EC74  F00B         	call	_log	;wreg free
  3714  0014C0  C047  F0C9         	movff	?_log,_pow$938
  3715  0014C4  C048  F0CA         	movff	?_log+1,_pow$938+1
  3716  0014C8  C049  F0CB         	movff	?_log+2,_pow$938+2
  3717  0014CC  C04A  F0CC         	movff	?_log+3,_pow$938+3
  3718  0014D0  C0C9  F01C         	movff	_pow$938,___flmul@f1
  3719  0014D4  C0CA  F01D         	movff	_pow$938+1,___flmul@f1+1
  3720  0014D8  C0CB  F01E         	movff	_pow$938+2,___flmul@f1+2
  3721  0014DC  C0CC  F01F         	movff	_pow$938+3,___flmul@f1+3
  3722  0014E0  C0C5  F020         	movff	pow@y,___flmul@f2
  3723  0014E4  C0C6  F021         	movff	pow@y+1,___flmul@f2+1
  3724  0014E8  C0C7  F022         	movff	pow@y+2,___flmul@f2+2
  3725  0014EC  C0C8  F023         	movff	pow@y+3,___flmul@f2+3
  3726  0014F0  EC02  F00E         	call	___flmul	;wreg free
  3727  0014F4  C01C  F0CD         	movff	?___flmul,_pow$939
  3728  0014F8  C01D  F0CE         	movff	?___flmul+1,_pow$939+1
  3729  0014FC  C01E  F0CF         	movff	?___flmul+2,_pow$939+2
  3730  001500  C01F  F0D0         	movff	?___flmul+3,_pow$939+3
  3731  001504  C0CD  F06E         	movff	_pow$939,exp@x
  3732  001508  C0CE  F06F         	movff	_pow$939+1,exp@x+1
  3733  00150C  C0CF  F070         	movff	_pow$939+2,exp@x+2
  3734  001510  C0D0  F071         	movff	_pow$939+3,exp@x+3
  3735  001514  ECFB  F007         	call	_exp	;wreg free
  3736  001518  C06E  F0C1         	movff	?_exp,pow@x
  3737  00151C  C06F  F0C2         	movff	?_exp+1,pow@x+1
  3738  001520  C070  F0C3         	movff	?_exp+2,pow@x+2
  3739  001524  C071  F0C4         	movff	?_exp+3,pow@x+3
  3740  001528  0100               	movlb	0	; () banked
  3741  00152A  51D1               	movf	pow@sign& (0+255),w,b
  3742  00152C  E013               	bz	l976
  3743                           
  3744                           ; BSR set to: 0
  3745  00152E  C0C1  F003         	movff	pow@x,___flneg@f1
  3746  001532  C0C2  F004         	movff	pow@x+1,___flneg@f1+1
  3747  001536  C0C3  F005         	movff	pow@x+2,___flneg@f1+2
  3748  00153A  C0C4  F006         	movff	pow@x+3,___flneg@f1+3
  3749  00153E  EC05  F013         	call	___flneg	;wreg free
  3750  001542  C003  F0C1         	movff	?___flneg,?_pow
  3751  001546  C004  F0C2         	movff	?___flneg+1,?_pow+1
  3752  00154A  C005  F0C3         	movff	?___flneg+2,?_pow+2
  3753  00154E  C006  F0C4         	movff	?___flneg+3,?_pow+3
  3754  001552  D008               	goto	l972
  3755  001554                     l976:
  3756                           
  3757                           ; BSR set to: 0
  3758  001554  C0C1  F0C1         	movff	pow@x,?_pow
  3759  001558  C0C2  F0C2         	movff	pow@x+1,?_pow+1
  3760  00155C  C0C3  F0C3         	movff	pow@x+2,?_pow+2
  3761  001560  C0C4  F0C4         	movff	pow@x+3,?_pow+3
  3762  001564                     l972:
  3763  001564  FFFF               	dw	65535	; assembler added errata NOP
  3764                           
  3765                           ; BSR set to: 0
  3766  001566  0012               	return		;funcret
  3767  001568  FFFF               	dw	65535	; errata NOP
  3768  00156A                     __end_of_pow:
  3769                           	opt stack 0
  3770                           tosu	equ	0xFFF
  3771                           tosh	equ	0xFFE
  3772                           tosl	equ	0xFFD
  3773                           pclath	equ	0xFFA
  3774                           tblptru	equ	0xFF8
  3775                           tblptrh	equ	0xFF7
  3776                           tblptrl	equ	0xFF6
  3777                           tablat	equ	0xFF5
  3778                           intcon	equ	0xFF2
  3779                           intcon2	equ	0xFF1
  3780                           postinc0	equ	0xFEE
  3781                           wreg	equ	0xFE8
  3782                           indf2	equ	0xFDF
  3783                           fsr2h	equ	0xFDA
  3784                           fsr2l	equ	0xFD9
  3785                           status	equ	0xFD8
  3786                           
  3787 ;; *************** function _exp *****************
  3788 ;; Defined at:
  3789 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\exp.c"
  3790 ;; Parameters:    Size  Location     Type
  3791 ;;  x               4  109[COMRAM] unsigned char 
  3792 ;; Auto vars:     Size  Location     Type
  3793 ;;  exponent        2    4[BANK0 ] int 
  3794 ;;  sign            1    6[BANK0 ] char 
  3795 ;; Return value:  Size  Location     Type
  3796 ;;                  4  109[COMRAM] char 
  3797 ;; Registers used:
  3798 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3799 ;; Tracked objects:
  3800 ;;		On entry : 0/0
  3801 ;;		On exit  : 0/0
  3802 ;;		Unchanged: 0/0
  3803 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3804 ;;      Params:         4       0       0       0       0       0       0
  3805 ;;      Locals:         0       7       0       0       0       0       0
  3806 ;;      Temps:          0       0       0       0       0       0       0
  3807 ;;      Totals:         4       7       0       0       0       0       0
  3808 ;;Total ram usage:       11 bytes
  3809 ;; Hardware stack levels used:    1
  3810 ;; Hardware stack levels required when called:    4
  3811 ;; This function calls:
  3812 ;;		___awtofl
  3813 ;;		___fldiv
  3814 ;;		___flge
  3815 ;;		___flmul
  3816 ;;		___flneg
  3817 ;;		___flsub
  3818 ;;		___fltol
  3819 ;;		_eval_poly
  3820 ;;		_floor
  3821 ;;		_ldexp
  3822 ;; This function is called by:
  3823 ;;		_pow
  3824 ;; This function uses a non-reentrant model
  3825 ;;
  3826                           
  3827                           	psect	text13
  3828  000FF6                     __ptext13:
  3829                           	opt stack 0
  3830  000FF6                     _exp:
  3831                           	opt stack 23
  3832                           
  3833                           ; BSR set to: 0
  3834                           ;incstack = 0
  3835  000FF6  FFFF               	dw	65535
  3836  000FF8  506E               	movf	exp@x,w,c
  3837  000FFA  106F               	iorwf	exp@x+1,w,c
  3838  000FFC  1070               	iorwf	exp@x+2,w,c
  3839  000FFE  1071               	iorwf	exp@x+3,w,c
  3840  001000  E106               	bnz	l3363
  3841  001002  6A6E               	clrf	?_exp,c
  3842  001004  6A6F               	clrf	?_exp+1,c
  3843  001006  0E80               	movlw	128
  3844  001008  6E70               	movwf	?_exp+2,c
  3845  00100A  0E3F               	movlw	63
  3846  00100C  D017               	goto	L4
  3847  00100E                     l3363:
  3848  00100E  0E18               	movlw	24
  3849  001010  6E03               	movwf	___flge@ff1,c
  3850  001012  0E72               	movlw	114
  3851  001014  6E04               	movwf	___flge@ff1+1,c
  3852  001016  0E31               	movlw	49
  3853  001018  6E05               	movwf	___flge@ff1+2,c
  3854  00101A  0E44               	movlw	68
  3855  00101C  6E06               	movwf	___flge@ff1+3,c
  3856  00101E  C06E  F007         	movff	exp@x,___flge@ff2
  3857  001022  C06F  F008         	movff	exp@x+1,___flge@ff2+1
  3858  001026  C070  F009         	movff	exp@x+2,___flge@ff2+2
  3859  00102A  C071  F00A         	movff	exp@x+3,___flge@ff2+3
  3860  00102E  EC4D  F011         	call	___flge	;wreg free
  3861  001032  E207               	bc	l3369
  3862  001034  686E               	setf	?_exp,c
  3863  001036  686F               	setf	?_exp+1,c
  3864  001038  0E7F               	movlw	127
  3865  00103A  6E70               	movwf	?_exp+2,c
  3866  00103C                     L4:
  3867  00103C  FFFF               	dw	65535	; assembler added errata NOP
  3868  00103E  6E71               	movwf	?_exp+3,c
  3869  001040  D0E4               	goto	l998
  3870  001042                     l3369:
  3871  001042  C06E  F003         	movff	exp@x,___flge@ff1
  3872  001046  C06F  F004         	movff	exp@x+1,___flge@ff1+1
  3873  00104A  C070  F005         	movff	exp@x+2,___flge@ff1+2
  3874  00104E  C071  F006         	movff	exp@x+3,___flge@ff1+3
  3875  001052  0E87               	movlw	135
  3876  001054  6E07               	movwf	___flge@ff2,c
  3877  001056  0E48               	movlw	72
  3878  001058  6E08               	movwf	___flge@ff2+1,c
  3879  00105A  0E3A               	movlw	58
  3880  00105C  6E09               	movwf	___flge@ff2+2,c
  3881  00105E  0EC4               	movlw	196
  3882  001060  6E0A               	movwf	___flge@ff2+3,c
  3883  001062  EC4D  F011         	call	___flge	;wreg free
  3884  001066  E201 D0A8          	bnc	l3391
  3885  00106A  0E01               	movlw	1
  3886  00106C  AE71               	btfss	exp@x+3,7,c
  3887  00106E  0E00               	movlw	0
  3888  001070  0100               	movlb	0	; () banked
  3889  001072  6FC0               	movwf	exp@sign& (0+255),b
  3890                           
  3891                           ; BSR set to: 0
  3892  001074  51C0               	movf	exp@sign& (0+255),w,b
  3893  001076  E012               	bz	l1001
  3894                           
  3895                           ; BSR set to: 0
  3896  001078  C06E  F003         	movff	exp@x,___flneg@f1
  3897  00107C  C06F  F004         	movff	exp@x+1,___flneg@f1+1
  3898  001080  C070  F005         	movff	exp@x+2,___flneg@f1+2
  3899  001084  C071  F006         	movff	exp@x+3,___flneg@f1+3
  3900  001088  EC05  F013         	call	___flneg	;wreg free
  3901  00108C  C003  F06E         	movff	?___flneg,exp@x
  3902  001090  C004  F06F         	movff	?___flneg+1,exp@x+1
  3903  001094  C005  F070         	movff	?___flneg+2,exp@x+2
  3904  001098  C006  F071         	movff	?___flneg+3,exp@x+3
  3905  00109C                     l1001:
  3906                           
  3907                           ; BSR set to: 0
  3908  00109C  C06E  F01C         	movff	exp@x,___flmul@f1
  3909  0010A0  C06F  F01D         	movff	exp@x+1,___flmul@f1+1
  3910  0010A4  C070  F01E         	movff	exp@x+2,___flmul@f1+2
  3911  0010A8  C071  F01F         	movff	exp@x+3,___flmul@f1+3
  3912  0010AC  0E3B               	movlw	59
  3913  0010AE  6E20               	movwf	___flmul@f2,c
  3914  0010B0  0EAA               	movlw	170
  3915  0010B2  6E21               	movwf	___flmul@f2+1,c
  3916  0010B4  0EB8               	movlw	184
  3917  0010B6  6E22               	movwf	___flmul@f2+2,c
  3918  0010B8  0E3F               	movlw	63
  3919  0010BA  6E23               	movwf	___flmul@f2+3,c
  3920  0010BC  EC02  F00E         	call	___flmul	;wreg free
  3921  0010C0  C01C  F06E         	movff	?___flmul,exp@x
  3922  0010C4  C01D  F06F         	movff	?___flmul+1,exp@x+1
  3923  0010C8  C01E  F070         	movff	?___flmul+2,exp@x+2
  3924  0010CC  C01F  F071         	movff	?___flmul+3,exp@x+3
  3925  0010D0  C06E  F064         	movff	exp@x,floor@x
  3926  0010D4  C06F  F065         	movff	exp@x+1,floor@x+1
  3927  0010D8  C070  F066         	movff	exp@x+2,floor@x+2
  3928  0010DC  C071  F067         	movff	exp@x+3,floor@x+3
  3929  0010E0  EC09  F00C         	call	_floor	;wreg free
  3930  0010E4  C064  F0BA         	movff	?_floor,_exp$940
  3931  0010E8  C065  F0BB         	movff	?_floor+1,_exp$940+1
  3932  0010EC  C066  F0BC         	movff	?_floor+2,_exp$940+2
  3933  0010F0  C067  F0BD         	movff	?_floor+3,_exp$940+3
  3934  0010F4  C0BA  F055         	movff	_exp$940,___fltol@f1
  3935  0010F8  C0BB  F056         	movff	_exp$940+1,___fltol@f1+1
  3936  0010FC  C0BC  F057         	movff	_exp$940+2,___fltol@f1+2
  3937  001100  C0BD  F058         	movff	_exp$940+3,___fltol@f1+3
  3938  001104  ECDB  F00E         	call	___fltol	;wreg free
  3939  001108  C055  F0BE         	movff	?___fltol,exp@exponent
  3940  00110C  C056  F0BF         	movff	?___fltol+1,exp@exponent+1
  3941  001110  C06E  F037         	movff	exp@x,___flsub@f1
  3942  001114  C06F  F038         	movff	exp@x+1,___flsub@f1+1
  3943  001118  C070  F039         	movff	exp@x+2,___flsub@f1+2
  3944  00111C  C071  F03A         	movff	exp@x+3,___flsub@f1+3
  3945  001120  C0BE  F00D         	movff	exp@exponent,___awtofl@c
  3946  001124  C0BF  F00E         	movff	exp@exponent+1,___awtofl@c+1
  3947  001128  EC3B  F012         	call	___awtofl	;wreg free
  3948  00112C  C00D  F03B         	movff	?___awtofl,___flsub@f2
  3949  001130  C00E  F03C         	movff	?___awtofl+1,___flsub@f2+1
  3950  001134  C00F  F03D         	movff	?___awtofl+2,___flsub@f2+2
  3951  001138  C010  F03E         	movff	?___awtofl+3,___flsub@f2+3
  3952  00113C  EC17  F012         	call	___flsub	;wreg free
  3953  001140  C037  F06E         	movff	?___flsub,exp@x
  3954  001144  C038  F06F         	movff	?___flsub+1,exp@x+1
  3955  001148  C039  F070         	movff	?___flsub+2,exp@x+2
  3956  00114C  C03A  F071         	movff	?___flsub+3,exp@x+3
  3957  001150  C06E  F037         	movff	exp@x,eval_poly@x
  3958  001154  C06F  F038         	movff	exp@x+1,eval_poly@x+1
  3959  001158  C070  F039         	movff	exp@x+2,eval_poly@x+2
  3960  00115C  C071  F03A         	movff	exp@x+3,eval_poly@x+3
  3961  001160  0E01               	movlw	low exp@coeff
  3962  001162  6E3B               	movwf	eval_poly@d,c
  3963  001164  0E06               	movlw	high exp@coeff
  3964  001166  6E3C               	movwf	eval_poly@d+1,c
  3965  001168  6A3E               	clrf	eval_poly@n+1,c
  3966  00116A  0E09               	movlw	9
  3967  00116C  6E3D               	movwf	eval_poly@n,c
  3968  00116E  EC8C  F00C         	call	_eval_poly	;wreg free
  3969  001172  C037  F047         	movff	?_eval_poly,ldexp@value
  3970  001176  C038  F048         	movff	?_eval_poly+1,ldexp@value+1
  3971  00117A  C039  F049         	movff	?_eval_poly+2,ldexp@value+2
  3972  00117E  C03A  F04A         	movff	?_eval_poly+3,ldexp@value+3
  3973  001182  C0BE  F04B         	movff	exp@exponent,ldexp@newexp
  3974  001186  C0BF  F04C         	movff	exp@exponent+1,ldexp@newexp+1
  3975  00118A  ECE0  F00F         	call	_ldexp	;wreg free
  3976  00118E  C047  F06E         	movff	?_ldexp,exp@x
  3977  001192  C048  F06F         	movff	?_ldexp+1,exp@x+1
  3978  001196  C049  F070         	movff	?_ldexp+2,exp@x+2
  3979  00119A  C04A  F071         	movff	?_ldexp+3,exp@x+3
  3980  00119E  0100               	movlb	0	; () banked
  3981  0011A0  51C0               	movf	exp@sign& (0+255),w,b
  3982  0011A2  E02B               	bz	l1002
  3983                           
  3984                           ; BSR set to: 0
  3985  0011A4  286E               	incf	exp@x,w,c
  3986  0011A6  E10E               	bnz	l3393
  3987  0011A8  286F               	incf	exp@x+1,w,c
  3988  0011AA  E10C               	bnz	l3393
  3989  0011AC  0E7F               	movlw	127
  3990  0011AE  1870               	xorwf	exp@x+2,w,c
  3991  0011B0  E109               	bnz	l3393
  3992  0011B2  0E7F               	movlw	127
  3993  0011B4  1871               	xorwf	exp@x+3,w,c
  3994  0011B6  A4D8               	btfss	status,2,c
  3995  0011B8  D005               	goto	l3393
  3996  0011BA                     l3391:
  3997                           
  3998                           ; BSR set to: 0
  3999  0011BA  6A6E               	clrf	?_exp,c
  4000  0011BC  6A6F               	clrf	?_exp+1,c
  4001  0011BE  6A70               	clrf	?_exp+2,c
  4002  0011C0  6A71               	clrf	?_exp+3,c
  4003  0011C2  D023               	goto	l998
  4004  0011C4                     l3393:
  4005  0011C4  FFFF               	dw	65535	; assembler added errata NOP
  4006                           
  4007                           ; BSR set to: 0
  4008  0011C6  0E00               	movlw	0
  4009  0011C8  6E0D               	movwf	___fldiv@f2,c
  4010  0011CA  6E0E               	movwf	___fldiv@f2+1,c
  4011  0011CC  0E80               	movlw	128
  4012  0011CE  6E0F               	movwf	___fldiv@f2+2,c
  4013  0011D0  0E3F               	movlw	63
  4014  0011D2  6E10               	movwf	___fldiv@f2+3,c
  4015  0011D4  C06E  F011         	movff	exp@x,___fldiv@f1
  4016  0011D8  C06F  F012         	movff	exp@x+1,___fldiv@f1+1
  4017  0011DC  C070  F013         	movff	exp@x+2,___fldiv@f1+2
  4018  0011E0  C071  F014         	movff	exp@x+3,___fldiv@f1+3
  4019  0011E4  EC33  F00F         	call	___fldiv	;wreg free
  4020  0011E8  C00D  F06E         	movff	?___fldiv,?_exp
  4021  0011EC  C00E  F06F         	movff	?___fldiv+1,?_exp+1
  4022  0011F0  C00F  F070         	movff	?___fldiv+2,?_exp+2
  4023  0011F4  C010  F071         	movff	?___fldiv+3,?_exp+3
  4024  0011F8  D008               	goto	l998
  4025  0011FA                     l1002:
  4026                           
  4027                           ; BSR set to: 0
  4028  0011FA  C06E  F06E         	movff	exp@x,?_exp
  4029  0011FE  C06F  F06F         	movff	exp@x+1,?_exp+1
  4030  001202  C070  F070         	movff	exp@x+2,?_exp+2
  4031  001206  C071  F071         	movff	exp@x+3,?_exp+3
  4032  00120A                     l998:
  4033  00120A  FFFF               	dw	65535	; assembler added errata NOP
  4034  00120C  0012               	return		;funcret
  4035  00120E  FFFF               	dw	65535	; errata NOP
  4036  001210                     __end_of_exp:
  4037                           	opt stack 0
  4038                           tosu	equ	0xFFF
  4039                           tosh	equ	0xFFE
  4040                           tosl	equ	0xFFD
  4041                           pclath	equ	0xFFA
  4042                           tblptru	equ	0xFF8
  4043                           tblptrh	equ	0xFF7
  4044                           tblptrl	equ	0xFF6
  4045                           tablat	equ	0xFF5
  4046                           intcon	equ	0xFF2
  4047                           intcon2	equ	0xFF1
  4048                           postinc0	equ	0xFEE
  4049                           wreg	equ	0xFE8
  4050                           indf2	equ	0xFDF
  4051                           fsr2h	equ	0xFDA
  4052                           fsr2l	equ	0xFD9
  4053                           status	equ	0xFD8
  4054                           
  4055 ;; *************** function _ldexp *****************
  4056 ;; Defined at:
  4057 ;;		line 277 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\frexp.c"
  4058 ;; Parameters:    Size  Location     Type
  4059 ;;  value           4   70[COMRAM] char 
  4060 ;;  newexp          2   74[COMRAM] int 
  4061 ;; Auto vars:     Size  Location     Type
  4062 ;;		None
  4063 ;; Return value:  Size  Location     Type
  4064 ;;                  4   70[COMRAM] int 
  4065 ;; Registers used:
  4066 ;;		wreg, status,2, status,0
  4067 ;; Tracked objects:
  4068 ;;		On entry : 0/0
  4069 ;;		On exit  : 0/0
  4070 ;;		Unchanged: 0/0
  4071 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4072 ;;      Params:         6       0       0       0       0       0       0
  4073 ;;      Locals:         0       0       0       0       0       0       0
  4074 ;;      Temps:          2       0       0       0       0       0       0
  4075 ;;      Totals:         8       0       0       0       0       0       0
  4076 ;;Total ram usage:        8 bytes
  4077 ;; Hardware stack levels used:    1
  4078 ;; Hardware stack levels required when called:    1
  4079 ;; This function calls:
  4080 ;;		Nothing
  4081 ;; This function is called by:
  4082 ;;		_exp
  4083 ;; This function uses a non-reentrant model
  4084 ;;
  4085                           
  4086                           	psect	text14
  4087  001FC0                     __ptext14:
  4088                           	opt stack 0
  4089  001FC0                     _ldexp:
  4090                           	opt stack 25
  4091                           
  4092                           ;incstack = 0
  4093  001FC0  FFFF               	dw	65535
  4094  001FC2  5047               	movf	ldexp@value,w,c
  4095  001FC4  1048               	iorwf	ldexp@value+1,w,c
  4096  001FC6  1049               	iorwf	ldexp@value+2,w,c
  4097  001FC8  104A               	iorwf	ldexp@value+3,w,c
  4098  001FCA  E013               	bz	l3263
  4099  001FCC  504A               	movf	ldexp@value+3,w,c
  4100  001FCE  0B7F               	andlw	127
  4101  001FD0  6E4D               	movwf	??_ldexp& (0+255),c
  4102  001FD2  6A4E               	clrf	(??_ldexp+1)& (0+255),c
  4103  001FD4  90D8               	bcf	status,0,c
  4104  001FD6  364D               	rlcf	??_ldexp,f,c
  4105  001FD8  364E               	rlcf	??_ldexp+1,f,c
  4106  001FDA  504D               	movf	??_ldexp,w,c
  4107  001FDC  264B               	addwf	ldexp@newexp,f,c
  4108  001FDE  504E               	movf	??_ldexp+1,w,c
  4109  001FE0  224C               	addwfc	ldexp@newexp+1,f,c
  4110  001FE2  0E01               	movlw	1
  4111  001FE4  AE49               	btfss	ldexp@value+2,7,c
  4112  001FE6  0E00               	movlw	0
  4113  001FE8  264B               	addwf	ldexp@newexp,f,c
  4114  001FEA  0E00               	movlw	0
  4115  001FEC  224C               	addwfc	ldexp@newexp+1,f,c
  4116  001FEE  AE4C               	btfss	ldexp@newexp+1,7,c
  4117  001FF0  D005               	goto	l3267
  4118  001FF2                     l3263:
  4119  001FF2  6A47               	clrf	?_ldexp,c
  4120  001FF4  6A48               	clrf	?_ldexp+1,c
  4121  001FF6  6A49               	clrf	?_ldexp+2,c
  4122  001FF8  6A4A               	clrf	?_ldexp+3,c
  4123  001FFA  D032               	goto	l735
  4124  001FFC                     l3267:
  4125  001FFC  FFFF               	dw	65535	; assembler added errata NOP
  4126  001FFE  BE4C               	btfsc	ldexp@newexp+1,7,c
  4127  002000  D012               	goto	l3281
  4128  002002  044C               	decf	ldexp@newexp+1,w,c
  4129  002004  E310               	bnc	l3281
  4130  002006  AE4A               	btfss	ldexp@value+3,7,c
  4131  002008  D006               	goto	l3277
  4132  00200A  6847               	setf	?_ldexp,c
  4133  00200C  6848               	setf	?_ldexp+1,c
  4134  00200E  0E7F               	movlw	127
  4135  002010  6E49               	movwf	?_ldexp+2,c
  4136  002012  0EFF               	movlw	255
  4137  002014  D005               	goto	L5
  4138  002016                     l3277:
  4139  002016  FFFF               	dw	65535	; assembler added errata NOP
  4140  002018  6847               	setf	?_ldexp,c
  4141  00201A  6848               	setf	?_ldexp+1,c
  4142  00201C  0E7F               	movlw	127
  4143  00201E  6E49               	movwf	?_ldexp+2,c
  4144  002020                     L5:
  4145  002020  FFFF               	dw	65535	; assembler added errata NOP
  4146  002022  6E4A               	movwf	?_ldexp+3,c
  4147  002024  D01D               	goto	l735
  4148  002026                     l3281:
  4149  002026  FFFF               	dw	65535	; assembler added errata NOP
  4150  002028  344C               	rlcf	ldexp@newexp+1,w,c
  4151  00202A  304C               	rrcf	ldexp@newexp+1,w,c
  4152  00202C  6E4E               	movwf	(??_ldexp+1)& (0+255),c
  4153  00202E  304B               	rrcf	ldexp@newexp,w,c
  4154  002030  6E4D               	movwf	??_ldexp& (0+255),c
  4155  002032  184A               	xorwf	ldexp@value+3,w,c
  4156  002034  0B80               	andlw	-128
  4157  002036  184D               	xorwf	??_ldexp,w,c
  4158  002038  6E4A               	movwf	ldexp@value+3,c
  4159  00203A  C04B  F04D         	movff	ldexp@newexp,??_ldexp
  4160  00203E  0E01               	movlw	1
  4161  002040  164D               	andwf	??_ldexp,f,c
  4162  002042  324D               	rrcf	??_ldexp,f,c
  4163  002044  324D               	rrcf	??_ldexp,f,c
  4164  002046  5049               	movf	ldexp@value+2,w,c
  4165  002048  184D               	xorwf	??_ldexp,w,c
  4166  00204A  0B7F               	andlw	-129
  4167  00204C  184D               	xorwf	??_ldexp,w,c
  4168  00204E  6E49               	movwf	ldexp@value+2,c
  4169  002050  C047  F047         	movff	ldexp@value,?_ldexp
  4170  002054  C048  F048         	movff	ldexp@value+1,?_ldexp+1
  4171  002058  C049  F049         	movff	ldexp@value+2,?_ldexp+2
  4172  00205C  C04A  F04A         	movff	ldexp@value+3,?_ldexp+3
  4173  002060                     l735:
  4174  002060  FFFF               	dw	65535	; assembler added errata NOP
  4175  002062  0012               	return		;funcret
  4176  002064  FFFF               	dw	65535	; errata NOP
  4177  002066                     __end_of_ldexp:
  4178                           	opt stack 0
  4179                           tosu	equ	0xFFF
  4180                           tosh	equ	0xFFE
  4181                           tosl	equ	0xFFD
  4182                           pclath	equ	0xFFA
  4183                           tblptru	equ	0xFF8
  4184                           tblptrh	equ	0xFF7
  4185                           tblptrl	equ	0xFF6
  4186                           tablat	equ	0xFF5
  4187                           intcon	equ	0xFF2
  4188                           intcon2	equ	0xFF1
  4189                           postinc0	equ	0xFEE
  4190                           wreg	equ	0xFE8
  4191                           indf2	equ	0xFDF
  4192                           fsr2h	equ	0xFDA
  4193                           fsr2l	equ	0xFD9
  4194                           status	equ	0xFD8
  4195                           
  4196 ;; *************** function _floor *****************
  4197 ;; Defined at:
  4198 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\floor.c"
  4199 ;; Parameters:    Size  Location     Type
  4200 ;;  x               4   99[COMRAM] int 
  4201 ;; Auto vars:     Size  Location     Type
  4202 ;;  i               4  103[COMRAM] int 
  4203 ;;  expon           2  107[COMRAM] int 
  4204 ;; Return value:  Size  Location     Type
  4205 ;;                  4   99[COMRAM] int 
  4206 ;; Registers used:
  4207 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4208 ;; Tracked objects:
  4209 ;;		On entry : 0/0
  4210 ;;		On exit  : 0/0
  4211 ;;		Unchanged: 0/0
  4212 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4213 ;;      Params:         4       0       0       0       0       0       0
  4214 ;;      Locals:         6       0       0       0       0       0       0
  4215 ;;      Temps:          0       0       0       0       0       0       0
  4216 ;;      Totals:        10       0       0       0       0       0       0
  4217 ;;Total ram usage:       10 bytes
  4218 ;; Hardware stack levels used:    1
  4219 ;; Hardware stack levels required when called:    3
  4220 ;; This function calls:
  4221 ;;		___altofl
  4222 ;;		___fladd
  4223 ;;		___flge
  4224 ;;		___fltol
  4225 ;;		_frexp
  4226 ;; This function is called by:
  4227 ;;		_format_double
  4228 ;;		_exp
  4229 ;; This function uses a non-reentrant model
  4230 ;;
  4231                           
  4232                           	psect	text15
  4233  001812                     __ptext15:
  4234                           	opt stack 0
  4235  001812                     _floor:
  4236                           	opt stack 23
  4237                           
  4238                           ;incstack = 0
  4239  001812  FFFF               	dw	65535
  4240  001814  C064  F003         	movff	floor@x,frexp@value
  4241  001818  C065  F004         	movff	floor@x+1,frexp@value+1
  4242  00181C  C066  F005         	movff	floor@x+2,frexp@value+2
  4243  001820  C067  F006         	movff	floor@x+3,frexp@value+3
  4244  001824  0E6C               	movlw	low floor@expon
  4245  001826  6E07               	movwf	frexp@eptr,c
  4246  001828  0E00               	movlw	high floor@expon
  4247  00182A  6E08               	movwf	frexp@eptr+1,c
  4248  00182C  EC33  F010         	call	_frexp	;wreg free
  4249  001830  AE6D               	btfss	floor@expon+1,7,c
  4250  001832  D00F               	goto	l3185
  4251  001834  AE67               	btfss	floor@x+3,7,c
  4252  001836  D007               	goto	l702
  4253  001838  6A64               	clrf	?_floor,c
  4254  00183A  6A65               	clrf	?_floor+1,c
  4255  00183C  0E80               	movlw	128
  4256  00183E  6E66               	movwf	?_floor+2,c
  4257  001840  0EBF               	movlw	191
  4258  001842  6E67               	movwf	?_floor+3,c
  4259  001844  D066               	goto	l703
  4260  001846                     l702:
  4261  001846  FFFF               	dw	65535	; assembler added errata NOP
  4262  001848  6A64               	clrf	?_floor,c
  4263  00184A  6A65               	clrf	?_floor+1,c
  4264  00184C  6A66               	clrf	?_floor+2,c
  4265  00184E  6A67               	clrf	?_floor+3,c
  4266  001850  D060               	goto	l703
  4267  001852                     l3185:
  4268  001852  FFFF               	dw	65535	; assembler added errata NOP
  4269  001854  506D               	movf	floor@expon+1,w,c
  4270  001856  E103               	bnz	u3020
  4271  001858  0E1D               	movlw	29
  4272  00185A  5C6C               	subwf	floor@expon,w,c
  4273  00185C  E309               	bnc	l3189
  4274  00185E                     u3020:
  4275  00185E  C064  F064         	movff	floor@x,?_floor
  4276  001862  C065  F065         	movff	floor@x+1,?_floor+1
  4277  001866  C066  F066         	movff	floor@x+2,?_floor+2
  4278  00186A  C067  F067         	movff	floor@x+3,?_floor+3
  4279  00186E  D051               	goto	l703
  4280  001870                     l3189:
  4281  001870  C064  F055         	movff	floor@x,___fltol@f1
  4282  001874  C065  F056         	movff	floor@x+1,___fltol@f1+1
  4283  001878  C066  F057         	movff	floor@x+2,___fltol@f1+2
  4284  00187C  C067  F058         	movff	floor@x+3,___fltol@f1+3
  4285  001880  ECDB  F00E         	call	___fltol	;wreg free
  4286  001884  C055  F05F         	movff	?___fltol,___altofl@c
  4287  001888  C056  F060         	movff	?___fltol+1,___altofl@c+1
  4288  00188C  C057  F061         	movff	?___fltol+2,___altofl@c+2
  4289  001890  C058  F062         	movff	?___fltol+3,___altofl@c+3
  4290  001894  ECCC  F011         	call	___altofl	;wreg free
  4291  001898  C05F  F068         	movff	?___altofl,floor@i
  4292  00189C  C060  F069         	movff	?___altofl+1,floor@i+1
  4293  0018A0  C061  F06A         	movff	?___altofl+2,floor@i+2
  4294  0018A4  C062  F06B         	movff	?___altofl+3,floor@i+3
  4295  0018A8  C064  F003         	movff	floor@x,___flge@ff1
  4296  0018AC  C065  F004         	movff	floor@x+1,___flge@ff1+1
  4297  0018B0  C066  F005         	movff	floor@x+2,___flge@ff1+2
  4298  0018B4  C067  F006         	movff	floor@x+3,___flge@ff1+3
  4299  0018B8  C068  F007         	movff	floor@i,___flge@ff2
  4300  0018BC  C069  F008         	movff	floor@i+1,___flge@ff2+1
  4301  0018C0  C06A  F009         	movff	floor@i+2,___flge@ff2+2
  4302  0018C4  C06B  F00A         	movff	floor@i+3,___flge@ff2+3
  4303  0018C8  EC4D  F011         	call	___flge	;wreg free
  4304  0018CC  E21A               	bc	l705
  4305  0018CE  C068  F02B         	movff	floor@i,___fladd@f1
  4306  0018D2  C069  F02C         	movff	floor@i+1,___fladd@f1+1
  4307  0018D6  C06A  F02D         	movff	floor@i+2,___fladd@f1+2
  4308  0018DA  C06B  F02E         	movff	floor@i+3,___fladd@f1+3
  4309  0018DE  0E00               	movlw	0
  4310  0018E0  6E2F               	movwf	___fladd@f2,c
  4311  0018E2  6E30               	movwf	___fladd@f2+1,c
  4312  0018E4  0E80               	movlw	128
  4313  0018E6  6E31               	movwf	___fladd@f2+2,c
  4314  0018E8  0EBF               	movlw	191
  4315  0018EA  6E32               	movwf	___fladd@f2+3,c
  4316  0018EC  ECB5  F00A         	call	___fladd	;wreg free
  4317  0018F0  C02B  F064         	movff	?___fladd,?_floor
  4318  0018F4  C02C  F065         	movff	?___fladd+1,?_floor+1
  4319  0018F8  C02D  F066         	movff	?___fladd+2,?_floor+2
  4320  0018FC  C02E  F067         	movff	?___fladd+3,?_floor+3
  4321  001900  D008               	goto	l703
  4322  001902                     l705:
  4323  001902  C068  F064         	movff	floor@i,?_floor
  4324  001906  C069  F065         	movff	floor@i+1,?_floor+1
  4325  00190A  C06A  F066         	movff	floor@i+2,?_floor+2
  4326  00190E  C06B  F067         	movff	floor@i+3,?_floor+3
  4327  001912                     l703:
  4328  001912  FFFF               	dw	65535	; assembler added errata NOP
  4329  001914  0012               	return		;funcret
  4330  001916  FFFF               	dw	65535	; errata NOP
  4331  001918                     __end_of_floor:
  4332                           	opt stack 0
  4333                           tosu	equ	0xFFF
  4334                           tosh	equ	0xFFE
  4335                           tosl	equ	0xFFD
  4336                           pclath	equ	0xFFA
  4337                           tblptru	equ	0xFF8
  4338                           tblptrh	equ	0xFF7
  4339                           tblptrl	equ	0xFF6
  4340                           tablat	equ	0xFF5
  4341                           intcon	equ	0xFF2
  4342                           intcon2	equ	0xFF1
  4343                           postinc0	equ	0xFEE
  4344                           wreg	equ	0xFE8
  4345                           indf2	equ	0xFDF
  4346                           fsr2h	equ	0xFDA
  4347                           fsr2l	equ	0xFD9
  4348                           status	equ	0xFD8
  4349                           
  4350 ;; *************** function ___fltol *****************
  4351 ;; Defined at:
  4352 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\fltol.c"
  4353 ;; Parameters:    Size  Location     Type
  4354 ;;  f1              4   84[COMRAM] int 
  4355 ;; Auto vars:     Size  Location     Type
  4356 ;;  exp1            1   93[COMRAM] unsigned char 
  4357 ;;  sign1           1   92[COMRAM] unsigned char 
  4358 ;; Return value:  Size  Location     Type
  4359 ;;                  4   84[COMRAM] long 
  4360 ;; Registers used:
  4361 ;;		wreg, status,2, status,0
  4362 ;; Tracked objects:
  4363 ;;		On entry : 0/0
  4364 ;;		On exit  : 0/0
  4365 ;;		Unchanged: 0/0
  4366 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4367 ;;      Params:         4       0       0       0       0       0       0
  4368 ;;      Locals:         2       0       0       0       0       0       0
  4369 ;;      Temps:          4       0       0       0       0       0       0
  4370 ;;      Totals:        10       0       0       0       0       0       0
  4371 ;;Total ram usage:       10 bytes
  4372 ;; Hardware stack levels used:    1
  4373 ;; Hardware stack levels required when called:    1
  4374 ;; This function calls:
  4375 ;;		Nothing
  4376 ;; This function is called by:
  4377 ;;		_measure_capacitance
  4378 ;;		_measure_inductance
  4379 ;;		_format_double
  4380 ;;		_floor
  4381 ;;		_pow
  4382 ;;		_exp
  4383 ;; This function uses a non-reentrant model
  4384 ;;
  4385                           
  4386                           	psect	text16
  4387  001DB6                     __ptext16:
  4388                           	opt stack 0
  4389  001DB6                     ___fltol:
  4390                           	opt stack 28
  4391                           
  4392                           ;incstack = 0
  4393  001DB6  FFFF               	dw	65535
  4394  001DB8  3457               	rlcf	___fltol@f1+2,w,c
  4395  001DBA  3458               	rlcf	___fltol@f1+3,w,c
  4396  001DBC  6E5E               	movwf	___fltol@exp1,c
  4397  001DBE  505E               	movf	___fltol@exp1,w,c
  4398  001DC0  E106               	bnz	l3129
  4399  001DC2                     l3127:
  4400  001DC2  FFFF               	dw	65535	; assembler added errata NOP
  4401  001DC4  6A55               	clrf	?___fltol,c
  4402  001DC6  6A56               	clrf	?___fltol+1,c
  4403  001DC8  6A57               	clrf	?___fltol+2,c
  4404  001DCA  6A58               	clrf	?___fltol+3,c
  4405  001DCC  D049               	goto	l715
  4406  001DCE                     l3129:
  4407  001DCE  C055  F059         	movff	___fltol@f1,??___fltol
  4408  001DD2  C056  F05A         	movff	___fltol@f1+1,??___fltol+1
  4409  001DD6  C057  F05B         	movff	___fltol@f1+2,??___fltol+2
  4410  001DDA  C058  F05C         	movff	___fltol@f1+3,??___fltol+3
  4411  001DDE  0E20               	movlw	32
  4412  001DE0  D006               	goto	u2930
  4413  001DE2                     u2935:
  4414  001DE2  FFFF               	dw	65535	; assembler added errata NOP
  4415  001DE4  90D8               	bcf	status,0,c
  4416  001DE6  325C               	rrcf	??___fltol+3,f,c
  4417  001DE8  325B               	rrcf	??___fltol+2,f,c
  4418  001DEA  325A               	rrcf	??___fltol+1,f,c
  4419  001DEC  3259               	rrcf	??___fltol,f,c
  4420  001DEE                     u2930:
  4421  001DEE  FFFF               	dw	65535	; assembler added errata NOP
  4422  001DF0  2EE8               	decfsz	wreg,f,c
  4423  001DF2  D7F7               	goto	u2935
  4424  001DF4  5059               	movf	??___fltol,w,c
  4425  001DF6  6E5D               	movwf	___fltol@sign1,c
  4426  001DF8  8E57               	bsf	___fltol@f1+2,7,c
  4427  001DFA  6A58               	clrf	___fltol@f1+3,c
  4428  001DFC  0E96               	movlw	150
  4429  001DFE  5E5E               	subwf	___fltol@exp1,f,c
  4430  001E00  AE5E               	btfss	___fltol@exp1,7,c
  4431  001E02  D00D               	goto	l3147
  4432  001E04  505E               	movf	___fltol@exp1,w,c
  4433  001E06  0A80               	xorlw	128
  4434  001E08  0F97               	addlw	151
  4435  001E0A  E3DB               	bnc	l3127
  4436  001E0C                     l3143:
  4437  001E0C  FFFF               	dw	65535	; assembler added errata NOP
  4438  001E0E  90D8               	bcf	status,0,c
  4439  001E10  3258               	rrcf	___fltol@f1+3,f,c
  4440  001E12  3257               	rrcf	___fltol@f1+2,f,c
  4441  001E14  3256               	rrcf	___fltol@f1+1,f,c
  4442  001E16  3255               	rrcf	___fltol@f1,f,c
  4443  001E18  3E5E               	incfsz	___fltol@exp1,f,c
  4444  001E1A  D7F8               	goto	l3143
  4445  001E1C  D00E               	goto	l3155
  4446  001E1E                     l3147:
  4447  001E1E  FFFF               	dw	65535	; assembler added errata NOP
  4448  001E20  0E1F               	movlw	31
  4449  001E22  645E               	cpfsgt	___fltol@exp1,c
  4450  001E24  D007               	goto	l3153
  4451  001E26  D7CD               	goto	l3127
  4452  001E28                     l3151:
  4453  001E28  90D8               	bcf	status,0,c
  4454  001E2A  3655               	rlcf	___fltol@f1,f,c
  4455  001E2C  3656               	rlcf	___fltol@f1+1,f,c
  4456  001E2E  3657               	rlcf	___fltol@f1+2,f,c
  4457  001E30  3658               	rlcf	___fltol@f1+3,f,c
  4458  001E32  065E               	decf	___fltol@exp1,f,c
  4459  001E34                     l3153:
  4460  001E34  FFFF               	dw	65535	; assembler added errata NOP
  4461  001E36  505E               	movf	___fltol@exp1,w,c
  4462  001E38  E1F7               	bnz	l3151
  4463  001E3A                     l3155:
  4464  001E3A  FFFF               	dw	65535	; assembler added errata NOP
  4465  001E3C  505D               	movf	___fltol@sign1,w,c
  4466  001E3E  E008               	bz	l3159
  4467  001E40  1E58               	comf	___fltol@f1+3,f,c
  4468  001E42  1E57               	comf	___fltol@f1+2,f,c
  4469  001E44  1E56               	comf	___fltol@f1+1,f,c
  4470  001E46  6C55               	negf	___fltol@f1,c
  4471  001E48  0E00               	movlw	0
  4472  001E4A  2256               	addwfc	___fltol@f1+1,f,c
  4473  001E4C  2257               	addwfc	___fltol@f1+2,f,c
  4474  001E4E  2258               	addwfc	___fltol@f1+3,f,c
  4475  001E50                     l3159:
  4476  001E50  C055  F055         	movff	___fltol@f1,?___fltol
  4477  001E54  C056  F056         	movff	___fltol@f1+1,?___fltol+1
  4478  001E58  C057  F057         	movff	___fltol@f1+2,?___fltol+2
  4479  001E5C  C058  F058         	movff	___fltol@f1+3,?___fltol+3
  4480  001E60                     l715:
  4481  001E60  FFFF               	dw	65535	; assembler added errata NOP
  4482  001E62  0012               	return		;funcret
  4483  001E64  FFFF               	dw	65535	; errata NOP
  4484  001E66                     __end_of___fltol:
  4485                           	opt stack 0
  4486                           tosu	equ	0xFFF
  4487                           tosh	equ	0xFFE
  4488                           tosl	equ	0xFFD
  4489                           pclath	equ	0xFFA
  4490                           tblptru	equ	0xFF8
  4491                           tblptrh	equ	0xFF7
  4492                           tblptrl	equ	0xFF6
  4493                           tablat	equ	0xFF5
  4494                           intcon	equ	0xFF2
  4495                           intcon2	equ	0xFF1
  4496                           postinc0	equ	0xFEE
  4497                           wreg	equ	0xFE8
  4498                           indf2	equ	0xFDF
  4499                           fsr2h	equ	0xFDA
  4500                           fsr2l	equ	0xFD9
  4501                           status	equ	0xFD8
  4502                           
  4503 ;; *************** function ___flge *****************
  4504 ;; Defined at:
  4505 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\flge.c"
  4506 ;; Parameters:    Size  Location     Type
  4507 ;;  ff1             4    2[COMRAM] long 
  4508 ;;  ff2             4    6[COMRAM] long 
  4509 ;; Auto vars:     Size  Location     Type
  4510 ;;		None
  4511 ;; Return value:  Size  Location     Type
  4512 ;;		None               void
  4513 ;; Registers used:
  4514 ;;		wreg, status,2, status,0
  4515 ;; Tracked objects:
  4516 ;;		On entry : 0/0
  4517 ;;		On exit  : 0/0
  4518 ;;		Unchanged: 0/0
  4519 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4520 ;;      Params:         8       0       0       0       0       0       0
  4521 ;;      Locals:         0       0       0       0       0       0       0
  4522 ;;      Temps:          0       0       0       0       0       0       0
  4523 ;;      Totals:         8       0       0       0       0       0       0
  4524 ;;Total ram usage:        8 bytes
  4525 ;; Hardware stack levels used:    1
  4526 ;; Hardware stack levels required when called:    1
  4527 ;; This function calls:
  4528 ;;		Nothing
  4529 ;; This function is called by:
  4530 ;;		_measure_capacitance
  4531 ;;		_measure_inductance
  4532 ;;		_format_double
  4533 ;;		_floor
  4534 ;;		_pow
  4535 ;;		_exp
  4536 ;; This function uses a non-reentrant model
  4537 ;;
  4538                           
  4539                           	psect	text17
  4540  00229A                     __ptext17:
  4541                           	opt stack 0
  4542  00229A                     ___flge:
  4543                           	opt stack 28
  4544                           
  4545                           ;incstack = 0
  4546  00229A  FFFF               	dw	65535
  4547  00229C  AE06               	btfss	___flge@ff1+3,7,c
  4548  00229E  D009               	goto	l3095
  4549  0022A0  6C03               	negf	___flge@ff1,c
  4550  0022A2  1E04               	comf	___flge@ff1+1,f,c
  4551  0022A4  B0D8               	btfsc	status,0,c
  4552  0022A6  2A04               	incf	___flge@ff1+1,f,c
  4553  0022A8  1E05               	comf	___flge@ff1+2,f,c
  4554  0022AA  B0D8               	btfsc	status,0,c
  4555  0022AC  2A05               	incf	___flge@ff1+2,f,c
  4556  0022AE  0E80               	movlw	128
  4557  0022B0  5606               	subfwb	___flge@ff1+3,f,c
  4558  0022B2                     l3095:
  4559  0022B2  FFFF               	dw	65535	; assembler added errata NOP
  4560  0022B4  AE0A               	btfss	___flge@ff2+3,7,c
  4561  0022B6  D009               	goto	l659
  4562  0022B8  6C07               	negf	___flge@ff2,c
  4563  0022BA  1E08               	comf	___flge@ff2+1,f,c
  4564  0022BC  B0D8               	btfsc	status,0,c
  4565  0022BE  2A08               	incf	___flge@ff2+1,f,c
  4566  0022C0  1E09               	comf	___flge@ff2+2,f,c
  4567  0022C2  B0D8               	btfsc	status,0,c
  4568  0022C4  2A09               	incf	___flge@ff2+2,f,c
  4569  0022C6  0E80               	movlw	128
  4570  0022C8  560A               	subfwb	___flge@ff2+3,f,c
  4571  0022CA                     l659:
  4572  0022CA  FFFF               	dw	65535	; assembler added errata NOP
  4573  0022CC  0E80               	movlw	128
  4574  0022CE  1A06               	xorwf	___flge@ff1+3,f,c
  4575  0022D0  1A0A               	xorwf	___flge@ff2+3,f,c
  4576  0022D2  5007               	movf	___flge@ff2,w,c
  4577  0022D4  5C03               	subwf	___flge@ff1,w,c
  4578  0022D6  5008               	movf	___flge@ff2+1,w,c
  4579  0022D8  5804               	subwfb	___flge@ff1+1,w,c
  4580  0022DA  5009               	movf	___flge@ff2+2,w,c
  4581  0022DC  5805               	subwfb	___flge@ff1+2,w,c
  4582  0022DE  500A               	movf	___flge@ff2+3,w,c
  4583  0022E0  5806               	subwfb	___flge@ff1+3,w,c
  4584  0022E2  E202               	bc	l3101
  4585  0022E4  90D8               	bcf	status,0,c
  4586  0022E6  D001               	goto	l660
  4587  0022E8                     l3101:
  4588  0022E8  80D8               	bsf	status,0,c
  4589  0022EA                     l660:
  4590  0022EA  FFFF               	dw	65535	; assembler added errata NOP
  4591  0022EC  0012               	return		;funcret
  4592  0022EE  FFFF               	dw	65535	; errata NOP
  4593  0022F0                     __end_of___flge:
  4594                           	opt stack 0
  4595                           tosu	equ	0xFFF
  4596                           tosh	equ	0xFFE
  4597                           tosl	equ	0xFFD
  4598                           pclath	equ	0xFFA
  4599                           tblptru	equ	0xFF8
  4600                           tblptrh	equ	0xFF7
  4601                           tblptrl	equ	0xFF6
  4602                           tablat	equ	0xFF5
  4603                           intcon	equ	0xFF2
  4604                           intcon2	equ	0xFF1
  4605                           postinc0	equ	0xFEE
  4606                           wreg	equ	0xFE8
  4607                           indf2	equ	0xFDF
  4608                           fsr2h	equ	0xFDA
  4609                           fsr2l	equ	0xFD9
  4610                           status	equ	0xFD8
  4611                           
  4612 ;; *************** function ___altofl *****************
  4613 ;; Defined at:
  4614 ;;		line 36 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\altofl.c"
  4615 ;; Parameters:    Size  Location     Type
  4616 ;;  c               4   94[COMRAM] long 
  4617 ;; Auto vars:     Size  Location     Type
  4618 ;;  sign            1   98[COMRAM] unsigned char 
  4619 ;; Return value:  Size  Location     Type
  4620 ;;                  4   94[COMRAM] unsigned char 
  4621 ;; Registers used:
  4622 ;;		wreg, status,2, status,0, cstack
  4623 ;; Tracked objects:
  4624 ;;		On entry : 0/0
  4625 ;;		On exit  : 0/0
  4626 ;;		Unchanged: 0/0
  4627 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4628 ;;      Params:         4       0       0       0       0       0       0
  4629 ;;      Locals:         1       0       0       0       0       0       0
  4630 ;;      Temps:          0       0       0       0       0       0       0
  4631 ;;      Totals:         5       0       0       0       0       0       0
  4632 ;;Total ram usage:        5 bytes
  4633 ;; Hardware stack levels used:    1
  4634 ;; Hardware stack levels required when called:    2
  4635 ;; This function calls:
  4636 ;;		___flpack
  4637 ;; This function is called by:
  4638 ;;		_floor
  4639 ;; This function uses a non-reentrant model
  4640 ;;
  4641                           
  4642                           	psect	text18
  4643  002398                     __ptext18:
  4644                           	opt stack 0
  4645  002398                     ___altofl:
  4646                           	opt stack 23
  4647                           
  4648                           ;incstack = 0
  4649  002398  FFFF               	dw	65535
  4650  00239A  6A63               	clrf	___altofl@sign,c
  4651  00239C  AE62               	btfss	___altofl@c+3,7,c
  4652  00239E  D00A               	goto	l2975
  4653  0023A0  1E62               	comf	___altofl@c+3,f,c
  4654  0023A2  1E61               	comf	___altofl@c+2,f,c
  4655  0023A4  1E60               	comf	___altofl@c+1,f,c
  4656  0023A6  6C5F               	negf	___altofl@c,c
  4657  0023A8  0E00               	movlw	0
  4658  0023AA  2260               	addwfc	___altofl@c+1,f,c
  4659  0023AC  2261               	addwfc	___altofl@c+2,f,c
  4660  0023AE  2262               	addwfc	___altofl@c+3,f,c
  4661  0023B0  0E01               	movlw	1
  4662  0023B2  6E63               	movwf	___altofl@sign,c
  4663  0023B4                     l2975:
  4664  0023B4  FFFF               	dw	65535	; assembler added errata NOP
  4665  0023B6  C05F  F003         	movff	___altofl@c,___flpack@arg
  4666  0023BA  C060  F004         	movff	___altofl@c+1,___flpack@arg+1
  4667  0023BE  C061  F005         	movff	___altofl@c+2,___flpack@arg+2
  4668  0023C2  C062  F006         	movff	___altofl@c+3,___flpack@arg+3
  4669  0023C6  0E96               	movlw	150
  4670  0023C8  6E07               	movwf	___flpack@exp,c
  4671  0023CA  C063  F008         	movff	___altofl@sign,___flpack@sign
  4672  0023CE  EC70  F00E         	call	___flpack	;wreg free
  4673  0023D2  C003  F05F         	movff	?___flpack,?___altofl
  4674  0023D6  C004  F060         	movff	?___flpack+1,?___altofl+1
  4675  0023DA  C005  F061         	movff	?___flpack+2,?___altofl+2
  4676  0023DE  C006  F062         	movff	?___flpack+3,?___altofl+3
  4677  0023E2  0012               	return		;funcret
  4678  0023E4  FFFF               	dw	65535	; errata NOP
  4679  0023E6                     __end_of___altofl:
  4680                           	opt stack 0
  4681                           tosu	equ	0xFFF
  4682                           tosh	equ	0xFFE
  4683                           tosl	equ	0xFFD
  4684                           pclath	equ	0xFFA
  4685                           tblptru	equ	0xFF8
  4686                           tblptrh	equ	0xFF7
  4687                           tblptrl	equ	0xFF6
  4688                           tablat	equ	0xFF5
  4689                           intcon	equ	0xFF2
  4690                           intcon2	equ	0xFF1
  4691                           postinc0	equ	0xFEE
  4692                           wreg	equ	0xFE8
  4693                           indf2	equ	0xFDF
  4694                           fsr2h	equ	0xFDA
  4695                           fsr2l	equ	0xFD9
  4696                           status	equ	0xFD8
  4697                           
  4698 ;; *************** function ___flsub *****************
  4699 ;; Defined at:
  4700 ;;		line 20 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\flsub.c"
  4701 ;; Parameters:    Size  Location     Type
  4702 ;;  f1              4   54[COMRAM] unsigned char 
  4703 ;;  f2              4   58[COMRAM] unsigned char 
  4704 ;; Auto vars:     Size  Location     Type
  4705 ;;		None
  4706 ;; Return value:  Size  Location     Type
  4707 ;;                  4   54[COMRAM] unsigned char 
  4708 ;; Registers used:
  4709 ;;		wreg, status,2, status,0, cstack
  4710 ;; Tracked objects:
  4711 ;;		On entry : 0/0
  4712 ;;		On exit  : 0/0
  4713 ;;		Unchanged: 0/0
  4714 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4715 ;;      Params:         8       0       0       0       0       0       0
  4716 ;;      Locals:         0       0       0       0       0       0       0
  4717 ;;      Temps:          0       0       0       0       0       0       0
  4718 ;;      Totals:         8       0       0       0       0       0       0
  4719 ;;Total ram usage:        8 bytes
  4720 ;; Hardware stack levels used:    1
  4721 ;; Hardware stack levels required when called:    3
  4722 ;; This function calls:
  4723 ;;		___fladd
  4724 ;; This function is called by:
  4725 ;;		_measure_capacitance
  4726 ;;		_measure_inductance
  4727 ;;		_format_double
  4728 ;;		_exp
  4729 ;; This function uses a non-reentrant model
  4730 ;;
  4731                           
  4732                           	psect	text19
  4733  00242E                     __ptext19:
  4734                           	opt stack 0
  4735  00242E                     ___flsub:
  4736                           	opt stack 26
  4737                           
  4738                           ;incstack = 0
  4739  00242E  FFFF               	dw	65535
  4740  002430  503B               	movf	___flsub@f2,w,c
  4741  002432  103C               	iorwf	___flsub@f2+1,w,c
  4742  002434  103D               	iorwf	___flsub@f2+2,w,c
  4743  002436  103E               	iorwf	___flsub@f2+3,w,c
  4744  002438  E002               	bz	l3235
  4745  00243A  0E80               	movlw	128
  4746  00243C  1A3E               	xorwf	___flsub@f2+3,f,c
  4747  00243E                     l3235:
  4748  00243E  C037  F02B         	movff	___flsub@f1,___fladd@f1
  4749  002442  C038  F02C         	movff	___flsub@f1+1,___fladd@f1+1
  4750  002446  C039  F02D         	movff	___flsub@f1+2,___fladd@f1+2
  4751  00244A  C03A  F02E         	movff	___flsub@f1+3,___fladd@f1+3
  4752  00244E  C03B  F02F         	movff	___flsub@f2,___fladd@f2
  4753  002452  C03C  F030         	movff	___flsub@f2+1,___fladd@f2+1
  4754  002456  C03D  F031         	movff	___flsub@f2+2,___fladd@f2+2
  4755  00245A  C03E  F032         	movff	___flsub@f2+3,___fladd@f2+3
  4756  00245E  ECB5  F00A         	call	___fladd	;wreg free
  4757  002462  C02B  F037         	movff	?___fladd,?___flsub
  4758  002466  C02C  F038         	movff	?___fladd+1,?___flsub+1
  4759  00246A  C02D  F039         	movff	?___fladd+2,?___flsub+2
  4760  00246E  C02E  F03A         	movff	?___fladd+3,?___flsub+3
  4761  002472  0012               	return		;funcret
  4762  002474  FFFF               	dw	65535	; errata NOP
  4763  002476                     __end_of___flsub:
  4764                           	opt stack 0
  4765                           tosu	equ	0xFFF
  4766                           tosh	equ	0xFFE
  4767                           tosl	equ	0xFFD
  4768                           pclath	equ	0xFFA
  4769                           tblptru	equ	0xFF8
  4770                           tblptrh	equ	0xFF7
  4771                           tblptrl	equ	0xFF6
  4772                           tablat	equ	0xFF5
  4773                           intcon	equ	0xFF2
  4774                           intcon2	equ	0xFF1
  4775                           postinc0	equ	0xFEE
  4776                           wreg	equ	0xFE8
  4777                           indf2	equ	0xFDF
  4778                           fsr2h	equ	0xFDA
  4779                           fsr2l	equ	0xFD9
  4780                           status	equ	0xFD8
  4781                           
  4782 ;; *************** function ___flneg *****************
  4783 ;; Defined at:
  4784 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\flneg.c"
  4785 ;; Parameters:    Size  Location     Type
  4786 ;;  f1              4    2[COMRAM] unsigned char 
  4787 ;; Auto vars:     Size  Location     Type
  4788 ;;		None
  4789 ;; Return value:  Size  Location     Type
  4790 ;;                  4    2[COMRAM] unsigned char 
  4791 ;; Registers used:
  4792 ;;		wreg, status,2, status,0
  4793 ;; Tracked objects:
  4794 ;;		On entry : F/0
  4795 ;;		On exit  : F/0
  4796 ;;		Unchanged: F/0
  4797 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4798 ;;      Params:         4       0       0       0       0       0       0
  4799 ;;      Locals:         0       0       0       0       0       0       0
  4800 ;;      Temps:          0       0       0       0       0       0       0
  4801 ;;      Totals:         4       0       0       0       0       0       0
  4802 ;;Total ram usage:        4 bytes
  4803 ;; Hardware stack levels used:    1
  4804 ;; Hardware stack levels required when called:    1
  4805 ;; This function calls:
  4806 ;;		Nothing
  4807 ;; This function is called by:
  4808 ;;		_pow
  4809 ;;		_exp
  4810 ;; This function uses a non-reentrant model
  4811 ;;
  4812                           
  4813                           	psect	text20
  4814  00260A                     __ptext20:
  4815                           	opt stack 0
  4816  00260A                     ___flneg:
  4817                           	opt stack 25
  4818                           
  4819                           ;incstack = 0
  4820  00260A  FFFF               	dw	65535
  4821                           
  4822                           ; BSR set to: 0
  4823  00260C  5003               	movf	___flneg@f1,w,c
  4824  00260E  1004               	iorwf	___flneg@f1+1,w,c
  4825  002610  1005               	iorwf	___flneg@f1+2,w,c
  4826  002612  1006               	iorwf	___flneg@f1+3,w,c
  4827  002614  E002               	bz	l3253
  4828                           
  4829                           ; BSR set to: 0
  4830  002616  0E80               	movlw	128
  4831  002618  1A06               	xorwf	___flneg@f1+3,f,c
  4832  00261A                     l3253:
  4833                           
  4834                           ; BSR set to: 0
  4835  00261A  C003  F003         	movff	___flneg@f1,?___flneg
  4836  00261E  C004  F004         	movff	___flneg@f1+1,?___flneg+1
  4837  002622  C005  F005         	movff	___flneg@f1+2,?___flneg+2
  4838  002626  C006  F006         	movff	___flneg@f1+3,?___flneg+3
  4839                           
  4840                           ; BSR set to: 0
  4841  00262A  0012               	return		;funcret
  4842  00262C  FFFF               	dw	65535	; errata NOP
  4843  00262E                     __end_of___flneg:
  4844                           	opt stack 0
  4845                           tosu	equ	0xFFF
  4846                           tosh	equ	0xFFE
  4847                           tosl	equ	0xFFD
  4848                           pclath	equ	0xFFA
  4849                           tblptru	equ	0xFF8
  4850                           tblptrh	equ	0xFF7
  4851                           tblptrl	equ	0xFF6
  4852                           tablat	equ	0xFF5
  4853                           intcon	equ	0xFF2
  4854                           intcon2	equ	0xFF1
  4855                           postinc0	equ	0xFEE
  4856                           wreg	equ	0xFE8
  4857                           indf2	equ	0xFDF
  4858                           fsr2h	equ	0xFDA
  4859                           fsr2l	equ	0xFD9
  4860                           status	equ	0xFD8
  4861                           
  4862 ;; *************** function ___fldiv *****************
  4863 ;; Defined at:
  4864 ;;		line 56 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\fldiv.c"
  4865 ;; Parameters:    Size  Location     Type
  4866 ;;  f2              4   12[COMRAM] unsigned char 
  4867 ;;  f1              4   16[COMRAM] unsigned char 
  4868 ;; Auto vars:     Size  Location     Type
  4869 ;;  f3              4   20[COMRAM] unsigned char 
  4870 ;;  sign            1   26[COMRAM] unsigned char 
  4871 ;;  exp             1   25[COMRAM] unsigned char 
  4872 ;;  cntr            1   24[COMRAM] unsigned char 
  4873 ;; Return value:  Size  Location     Type
  4874 ;;                  4   12[COMRAM] unsigned char 
  4875 ;; Registers used:
  4876 ;;		wreg, status,2, status,0, cstack
  4877 ;; Tracked objects:
  4878 ;;		On entry : 0/0
  4879 ;;		On exit  : 0/0
  4880 ;;		Unchanged: 0/0
  4881 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4882 ;;      Params:         8       0       0       0       0       0       0
  4883 ;;      Locals:         7       0       0       0       0       0       0
  4884 ;;      Temps:          0       0       0       0       0       0       0
  4885 ;;      Totals:        15       0       0       0       0       0       0
  4886 ;;Total ram usage:       15 bytes
  4887 ;; Hardware stack levels used:    1
  4888 ;; Hardware stack levels required when called:    2
  4889 ;; This function calls:
  4890 ;;		___flpack
  4891 ;; This function is called by:
  4892 ;;		_measure_capacitance
  4893 ;;		_measure_inductance
  4894 ;;		_format_double
  4895 ;;		_exp
  4896 ;; This function uses a non-reentrant model
  4897 ;;
  4898                           
  4899                           	psect	text21
  4900  001E66                     __ptext21:
  4901                           	opt stack 0
  4902  001E66                     ___fldiv:
  4903                           	opt stack 27
  4904                           
  4905                           ; BSR set to: 0
  4906                           ;incstack = 0
  4907  001E66  FFFF               	dw	65535
  4908  001E68  3413               	rlcf	___fldiv@f1+2,w,c
  4909  001E6A  3414               	rlcf	___fldiv@f1+3,w,c
  4910  001E6C  6E1A               	movwf	___fldiv@exp,c
  4911  001E6E  501A               	movf	___fldiv@exp,w,c
  4912  001E70  E005               	bz	l3201
  4913  001E72  340F               	rlcf	___fldiv@f2+2,w,c
  4914  001E74  3410               	rlcf	___fldiv@f2+3,w,c
  4915  001E76  6E1B               	movwf	___fldiv@sign,c
  4916  001E78  501B               	movf	___fldiv@sign,w,c
  4917  001E7A  E105               	bnz	l3203
  4918  001E7C                     l3201:
  4919  001E7C  6A0D               	clrf	?___fldiv,c
  4920  001E7E  6A0E               	clrf	?___fldiv+1,c
  4921  001E80  6A0F               	clrf	?___fldiv+2,c
  4922  001E82  6A10               	clrf	?___fldiv+3,c
  4923  001E84  D044               	goto	l651
  4924  001E86                     l3203:
  4925  001E86  501B               	movf	___fldiv@sign,w,c
  4926  001E88  0F89               	addlw	137
  4927  001E8A  5E1A               	subwf	___fldiv@exp,f,c
  4928  001E8C  C014  F01B         	movff	___fldiv@f1+3,___fldiv@sign
  4929  001E90  5010               	movf	___fldiv@f2+3,w,c
  4930  001E92  1A1B               	xorwf	___fldiv@sign,f,c
  4931  001E94  0E80               	movlw	128
  4932  001E96  161B               	andwf	___fldiv@sign,f,c
  4933  001E98  8E13               	bsf	___fldiv@f1+2,7,c
  4934  001E9A  6A14               	clrf	___fldiv@f1+3,c
  4935  001E9C  8E0F               	bsf	___fldiv@f2+2,7,c
  4936  001E9E  6A10               	clrf	___fldiv@f2+3,c
  4937  001EA0  0E20               	movlw	32
  4938  001EA2  6E19               	movwf	___fldiv@cntr,c
  4939  001EA4                     l3215:
  4940  001EA4  FFFF               	dw	65535	; assembler added errata NOP
  4941  001EA6  90D8               	bcf	status,0,c
  4942  001EA8  3615               	rlcf	___fldiv@f3,f,c
  4943  001EAA  3616               	rlcf	___fldiv@f3+1,f,c
  4944  001EAC  3617               	rlcf	___fldiv@f3+2,f,c
  4945  001EAE  3618               	rlcf	___fldiv@f3+3,f,c
  4946  001EB0  500D               	movf	___fldiv@f2,w,c
  4947  001EB2  5C11               	subwf	___fldiv@f1,w,c
  4948  001EB4  500E               	movf	___fldiv@f2+1,w,c
  4949  001EB6  5812               	subwfb	___fldiv@f1+1,w,c
  4950  001EB8  500F               	movf	___fldiv@f2+2,w,c
  4951  001EBA  5813               	subwfb	___fldiv@f1+2,w,c
  4952  001EBC  5010               	movf	___fldiv@f2+3,w,c
  4953  001EBE  5814               	subwfb	___fldiv@f1+3,w,c
  4954  001EC0  E309               	bnc	l3223
  4955  001EC2  500D               	movf	___fldiv@f2,w,c
  4956  001EC4  5E11               	subwf	___fldiv@f1,f,c
  4957  001EC6  500E               	movf	___fldiv@f2+1,w,c
  4958  001EC8  5A12               	subwfb	___fldiv@f1+1,f,c
  4959  001ECA  500F               	movf	___fldiv@f2+2,w,c
  4960  001ECC  5A13               	subwfb	___fldiv@f1+2,f,c
  4961  001ECE  5010               	movf	___fldiv@f2+3,w,c
  4962  001ED0  5A14               	subwfb	___fldiv@f1+3,f,c
  4963  001ED2  8015               	bsf	___fldiv@f3,0,c
  4964  001ED4                     l3223:
  4965  001ED4  90D8               	bcf	status,0,c
  4966  001ED6  3611               	rlcf	___fldiv@f1,f,c
  4967  001ED8  3612               	rlcf	___fldiv@f1+1,f,c
  4968  001EDA  3613               	rlcf	___fldiv@f1+2,f,c
  4969  001EDC  3614               	rlcf	___fldiv@f1+3,f,c
  4970  001EDE  2E19               	decfsz	___fldiv@cntr,f,c
  4971  001EE0  D7E1               	goto	l3215
  4972  001EE2  C015  F003         	movff	___fldiv@f3,___flpack@arg
  4973  001EE6  C016  F004         	movff	___fldiv@f3+1,___flpack@arg+1
  4974  001EEA  C017  F005         	movff	___fldiv@f3+2,___flpack@arg+2
  4975  001EEE  C018  F006         	movff	___fldiv@f3+3,___flpack@arg+3
  4976  001EF2  C01A  F007         	movff	___fldiv@exp,___flpack@exp
  4977  001EF6  C01B  F008         	movff	___fldiv@sign,___flpack@sign
  4978  001EFA  EC70  F00E         	call	___flpack	;wreg free
  4979  001EFE  C003  F00D         	movff	?___flpack,?___fldiv
  4980  001F02  C004  F00E         	movff	?___flpack+1,?___fldiv+1
  4981  001F06  C005  F00F         	movff	?___flpack+2,?___fldiv+2
  4982  001F0A  C006  F010         	movff	?___flpack+3,?___fldiv+3
  4983  001F0E                     l651:
  4984  001F0E  FFFF               	dw	65535	; assembler added errata NOP
  4985  001F10  0012               	return		;funcret
  4986  001F12  FFFF               	dw	65535	; errata NOP
  4987  001F14                     __end_of___fldiv:
  4988                           	opt stack 0
  4989                           tosu	equ	0xFFF
  4990                           tosh	equ	0xFFE
  4991                           tosl	equ	0xFFD
  4992                           pclath	equ	0xFFA
  4993                           tblptru	equ	0xFF8
  4994                           tblptrh	equ	0xFF7
  4995                           tblptrl	equ	0xFF6
  4996                           tablat	equ	0xFF5
  4997                           intcon	equ	0xFF2
  4998                           intcon2	equ	0xFF1
  4999                           postinc0	equ	0xFEE
  5000                           wreg	equ	0xFE8
  5001                           indf2	equ	0xFDF
  5002                           fsr2h	equ	0xFDA
  5003                           fsr2l	equ	0xFD9
  5004                           status	equ	0xFD8
  5005                           
  5006 ;; *************** function ___lltofl *****************
  5007 ;; Defined at:
  5008 ;;		line 30 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lltofl.c"
  5009 ;; Parameters:    Size  Location     Type
  5010 ;;  c               4   12[COMRAM] unsigned long 
  5011 ;; Auto vars:     Size  Location     Type
  5012 ;;		None
  5013 ;; Return value:  Size  Location     Type
  5014 ;;                  4   12[COMRAM] unsigned long 
  5015 ;; Registers used:
  5016 ;;		wreg, status,2, status,0, cstack
  5017 ;; Tracked objects:
  5018 ;;		On entry : 0/0
  5019 ;;		On exit  : 0/0
  5020 ;;		Unchanged: 0/0
  5021 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5022 ;;      Params:         4       0       0       0       0       0       0
  5023 ;;      Locals:         0       0       0       0       0       0       0
  5024 ;;      Temps:          0       0       0       0       0       0       0
  5025 ;;      Totals:         4       0       0       0       0       0       0
  5026 ;;Total ram usage:        4 bytes
  5027 ;; Hardware stack levels used:    1
  5028 ;; Hardware stack levels required when called:    2
  5029 ;; This function calls:
  5030 ;;		___flpack
  5031 ;; This function is called by:
  5032 ;;		_pow
  5033 ;; This function uses a non-reentrant model
  5034 ;;
  5035                           
  5036                           	psect	text22
  5037  002524                     __ptext22:
  5038                           	opt stack 0
  5039  002524                     ___lltofl:
  5040                           	opt stack 25
  5041                           
  5042                           ;incstack = 0
  5043  002524  FFFF               	dw	65535
  5044  002526  C00D  F003         	movff	___lltofl@c,___flpack@arg
  5045  00252A  C00E  F004         	movff	___lltofl@c+1,___flpack@arg+1
  5046  00252E  C00F  F005         	movff	___lltofl@c+2,___flpack@arg+2
  5047  002532  C010  F006         	movff	___lltofl@c+3,___flpack@arg+3
  5048  002536  0E96               	movlw	150
  5049  002538  6E07               	movwf	___flpack@exp,c
  5050  00253A  0E00               	movlw	0
  5051  00253C  6E08               	movwf	___flpack@sign,c
  5052  00253E  EC70  F00E         	call	___flpack	;wreg free
  5053  002542  C003  F00D         	movff	?___flpack,?___lltofl
  5054  002546  C004  F00E         	movff	?___flpack+1,?___lltofl+1
  5055  00254A  C005  F00F         	movff	?___flpack+2,?___lltofl+2
  5056  00254E  C006  F010         	movff	?___flpack+3,?___lltofl+3
  5057  002552  0012               	return		;funcret
  5058  002554  FFFF               	dw	65535	; errata NOP
  5059  002556                     __end_of___lltofl:
  5060                           	opt stack 0
  5061                           tosu	equ	0xFFF
  5062                           tosh	equ	0xFFE
  5063                           tosl	equ	0xFFD
  5064                           pclath	equ	0xFFA
  5065                           tblptru	equ	0xFF8
  5066                           tblptrh	equ	0xFF7
  5067                           tblptrl	equ	0xFF6
  5068                           tablat	equ	0xFF5
  5069                           intcon	equ	0xFF2
  5070                           intcon2	equ	0xFF1
  5071                           postinc0	equ	0xFEE
  5072                           wreg	equ	0xFE8
  5073                           indf2	equ	0xFDF
  5074                           fsr2h	equ	0xFDA
  5075                           fsr2l	equ	0xFD9
  5076                           status	equ	0xFD8
  5077                           
  5078 ;; *************** function _format_putchar *****************
  5079 ;; Defined at:
  5080 ;;		line 6 in file "C:\Users\vboxuser\Desktop\lc-meter\lib\format.c"
  5081 ;; Parameters:    Size  Location     Type
  5082 ;;  c               1    wreg     char 
  5083 ;; Auto vars:     Size  Location     Type
  5084 ;;  c               1    0[COMRAM] char 
  5085 ;; Return value:  Size  Location     Type
  5086 ;;		None               void
  5087 ;; Registers used:
  5088 ;;		wreg
  5089 ;; Tracked objects:
  5090 ;;		On entry : 0/0
  5091 ;;		On exit  : 0/0
  5092 ;;		Unchanged: 0/0
  5093 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5094 ;;      Params:         0       0       0       0       0       0       0
  5095 ;;      Locals:         0       0       0       0       0       0       0
  5096 ;;      Temps:          0       0       0       0       0       0       0
  5097 ;;      Totals:         0       0       0       0       0       0       0
  5098 ;;Total ram usage:        0 bytes
  5099 ;; Hardware stack levels used:    1
  5100 ;; Hardware stack levels required when called:    1
  5101 ;; This function calls:
  5102 ;;		Nothing
  5103 ;; This function is called by:
  5104 ;;		_format_number
  5105 ;;		_format_xint32
  5106 ;;		_format_double
  5107 ;; This function uses a non-reentrant model
  5108 ;;
  5109                           
  5110                           	psect	text23
  5111  002648                     __ptext23:
  5112                           	opt stack 0
  5113  002648                     _format_putchar:
  5114                           	opt stack 27
  5115                           
  5116                           ;incstack = 0
  5117  002648  FFFF               	dw	65535
  5118                           
  5119                           ;format.c: 7: return;
  5120  00264A  0012               	return		;funcret
  5121  00264C  FFFF               	dw	65535	; errata NOP
  5122  00264E                     __end_of_format_putchar:
  5123                           	opt stack 0
  5124                           tosu	equ	0xFFF
  5125                           tosh	equ	0xFFE
  5126                           tosl	equ	0xFFD
  5127                           pclath	equ	0xFFA
  5128                           tblptru	equ	0xFF8
  5129                           tblptrh	equ	0xFF7
  5130                           tblptrl	equ	0xFF6
  5131                           tablat	equ	0xFF5
  5132                           intcon	equ	0xFF2
  5133                           intcon2	equ	0xFF1
  5134                           postinc0	equ	0xFEE
  5135                           wreg	equ	0xFE8
  5136                           indf2	equ	0xFDF
  5137                           fsr2h	equ	0xFDA
  5138                           fsr2l	equ	0xFD9
  5139                           status	equ	0xFD8
  5140                           
  5141 ;; *************** function _ser_putch *****************
  5142 ;; Defined at:
  5143 ;;		line 82 in file "C:\Users\vboxuser\Desktop\lc-meter\lib\ser.c"
  5144 ;; Parameters:    Size  Location     Type
  5145 ;;  c               1    wreg     char 
  5146 ;; Auto vars:     Size  Location     Type
  5147 ;;  c               1    2[COMRAM] char 
  5148 ;; Return value:  Size  Location     Type
  5149 ;;		None               void
  5150 ;; Registers used:
  5151 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5152 ;; Tracked objects:
  5153 ;;		On entry : 0/0
  5154 ;;		On exit  : 0/0
  5155 ;;		Unchanged: 0/0
  5156 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5157 ;;      Params:         0       0       0       0       0       0       0
  5158 ;;      Locals:         1       0       0       0       0       0       0
  5159 ;;      Temps:          0       0       0       0       0       0       0
  5160 ;;      Totals:         1       0       0       0       0       0       0
  5161 ;;Total ram usage:        1 bytes
  5162 ;; Hardware stack levels used:    1
  5163 ;; Hardware stack levels required when called:    1
  5164 ;; This function calls:
  5165 ;;		Nothing
  5166 ;; This function is called by:
  5167 ;;		_output_putch
  5168 ;;		_measure_capacitance
  5169 ;;		_ser_puts
  5170 ;;		_format_number
  5171 ;;		_format_xint32
  5172 ;;		_format_double
  5173 ;; This function uses a non-reentrant model
  5174 ;;
  5175                           
  5176                           	psect	text24
  5177  0025B6                     __ptext24:
  5178                           	opt stack 0
  5179  0025B6                     _ser_putch:
  5180                           	opt stack 28
  5181                           
  5182                           ;incstack = 0
  5183  0025B6  FFFF               	dw	65535
  5184                           
  5185                           ;ser_putch@c stored from wreg
  5186  0025B8  6E03               	movwf	ser_putch@c,c
  5187  0025BA                     l3165:
  5188  0025BA  2875               	incf	_txiptr,w,c	;volatile
  5189  0025BC  0B0F               	andlw	15
  5190  0025BE  1876               	xorwf	_txoptr,w,c	;volatile
  5191  0025C0  E0FC               	bz	l3165
  5192                           
  5193                           ;ser.c: 84: GIE = 0;
  5194  0025C2  9EF2               	bcf	intcon,7,c	;volatile
  5195                           
  5196                           ;ser.c: 85: txfifo[txiptr] = c;
  5197  0025C4  0E90               	movlw	low _txfifo
  5198  0025C6  2475               	addwf	_txiptr,w,c	;volatile
  5199  0025C8  6ED9               	movwf	fsr2l,c
  5200  0025CA  6ADA               	clrf	fsr2h,c
  5201  0025CC  0E00               	movlw	high _txfifo
  5202  0025CE  22DA               	addwfc	fsr2h,f,c
  5203  0025D0  C003  FFDF         	movff	ser_putch@c,indf2
  5204                           
  5205                           ;ser.c: 86: txiptr = (txiptr + 1) & ((unsigned char)16 - 1);
  5206  0025D4  2875               	incf	_txiptr,w,c	;volatile
  5207  0025D6  0B0F               	andlw	15
  5208  0025D8  6E75               	movwf	_txiptr,c	;volatile
  5209                           
  5210                           ;ser.c: 87: TXIE = 1;
  5211  0025DA  889D               	bsf	3997,4,c	;volatile
  5212                           
  5213                           ;ser.c: 88: GIE = 1;
  5214  0025DC  8EF2               	bsf	intcon,7,c	;volatile
  5215  0025DE  0012               	return		;funcret
  5216  0025E0  FFFF               	dw	65535	; errata NOP
  5217  0025E2                     __end_of_ser_putch:
  5218                           	opt stack 0
  5219                           tosu	equ	0xFFF
  5220                           tosh	equ	0xFFE
  5221                           tosl	equ	0xFFD
  5222                           pclath	equ	0xFFA
  5223                           tblptru	equ	0xFF8
  5224                           tblptrh	equ	0xFF7
  5225                           tblptrl	equ	0xFF6
  5226                           tablat	equ	0xFF5
  5227                           intcon	equ	0xFF2
  5228                           intcon2	equ	0xFF1
  5229                           postinc0	equ	0xFEE
  5230                           wreg	equ	0xFE8
  5231                           indf2	equ	0xFDF
  5232                           fsr2h	equ	0xFDA
  5233                           fsr2l	equ	0xFD9
  5234                           status	equ	0xFD8
  5235                           
  5236 ;; *************** function _output_putch *****************
  5237 ;; Defined at:
  5238 ;;		line 48 in file "C:\Users\vboxuser\Desktop\lc-meter\src\LC-meter.c"
  5239 ;; Parameters:    Size  Location     Type
  5240 ;;  c               1    wreg     char 
  5241 ;; Auto vars:     Size  Location     Type
  5242 ;;  c               1    2[COMRAM] char 
  5243 ;; Return value:  Size  Location     Type
  5244 ;;		None               void
  5245 ;; Registers used:
  5246 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5247 ;; Tracked objects:
  5248 ;;		On entry : 0/0
  5249 ;;		On exit  : 0/0
  5250 ;;		Unchanged: 0/0
  5251 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5252 ;;      Params:         0       0       0       0       0       0       0
  5253 ;;      Locals:         1       0       0       0       0       0       0
  5254 ;;      Temps:          0       0       0       0       0       0       0
  5255 ;;      Totals:         1       0       0       0       0       0       0
  5256 ;;Total ram usage:        1 bytes
  5257 ;; Hardware stack levels used:    1
  5258 ;; Hardware stack levels required when called:    2
  5259 ;; This function calls:
  5260 ;;		_ser_putch
  5261 ;; This function is called by:
  5262 ;;		_measure_capacitance
  5263 ;;		_format_number
  5264 ;;		_format_xint32
  5265 ;;		_format_double
  5266 ;; This function uses a non-reentrant model
  5267 ;;
  5268                           
  5269                           	psect	text25
  5270  00262E                     __ptext25:
  5271                           	opt stack 0
  5272  00262E                     _output_putch:
  5273                           	opt stack 26
  5274                           
  5275                           ;incstack = 0
  5276  00262E  FFFF               	dw	65535
  5277                           
  5278                           ;output_putch@c stored from wreg
  5279  002630  6E03               	movwf	output_putch@c,c
  5280                           
  5281                           ;LC-meter.c: 54: ser_putch(c);
  5282  002632  5003               	movf	output_putch@c,w,c
  5283  002634  ECDB  F012         	call	_ser_putch
  5284  002638  0012               	return		;funcret
  5285  00263A  FFFF               	dw	65535	; errata NOP
  5286  00263C                     __end_of_output_putch:
  5287                           	opt stack 0
  5288                           tosu	equ	0xFFF
  5289                           tosh	equ	0xFFE
  5290                           tosl	equ	0xFFD
  5291                           pclath	equ	0xFFA
  5292                           tblptru	equ	0xFF8
  5293                           tblptrh	equ	0xFF7
  5294                           tblptrl	equ	0xFF6
  5295                           tablat	equ	0xFF5
  5296                           intcon	equ	0xFF2
  5297                           intcon2	equ	0xFF1
  5298                           postinc0	equ	0xFEE
  5299                           wreg	equ	0xFE8
  5300                           indf2	equ	0xFDF
  5301                           fsr2h	equ	0xFDA
  5302                           fsr2l	equ	0xFD9
  5303                           status	equ	0xFD8
  5304                           
  5305 ;; *************** function _log10 *****************
  5306 ;; Defined at:
  5307 ;;		line 39 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\log.c"
  5308 ;; Parameters:    Size  Location     Type
  5309 ;;  x               4   76[COMRAM] char 
  5310 ;; Auto vars:     Size  Location     Type
  5311 ;;		None
  5312 ;; Return value:  Size  Location     Type
  5313 ;;                  4   76[COMRAM] char 
  5314 ;; Registers used:
  5315 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5316 ;; Tracked objects:
  5317 ;;		On entry : 0/0
  5318 ;;		On exit  : 0/0
  5319 ;;		Unchanged: 0/0
  5320 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5321 ;;      Params:         4       0       0       0       0       0       0
  5322 ;;      Locals:         4       0       0       0       0       0       0
  5323 ;;      Temps:          0       0       0       0       0       0       0
  5324 ;;      Totals:         8       0       0       0       0       0       0
  5325 ;;Total ram usage:        8 bytes
  5326 ;; Hardware stack levels used:    1
  5327 ;; Hardware stack levels required when called:    5
  5328 ;; This function calls:
  5329 ;;		___flmul
  5330 ;;		_log
  5331 ;; This function is called by:
  5332 ;;		_format_double
  5333 ;; This function uses a non-reentrant model
  5334 ;;
  5335                           
  5336                           	psect	text26
  5337  00223C                     __ptext26:
  5338                           	opt stack 0
  5339  00223C                     _log10:
  5340                           	opt stack 23
  5341                           
  5342                           ;incstack = 0
  5343  00223C  FFFF               	dw	65535
  5344  00223E  C04D  F047         	movff	log10@x,log@x
  5345  002242  C04E  F048         	movff	log10@x+1,log@x+1
  5346  002246  C04F  F049         	movff	log10@x+2,log@x+2
  5347  00224A  C050  F04A         	movff	log10@x+3,log@x+3
  5348  00224E  EC74  F00B         	call	_log	;wreg free
  5349  002252  C047  F051         	movff	?_log,_log10$937
  5350  002256  C048  F052         	movff	?_log+1,_log10$937+1
  5351  00225A  C049  F053         	movff	?_log+2,_log10$937+2
  5352  00225E  C04A  F054         	movff	?_log+3,_log10$937+3
  5353  002262  C051  F01C         	movff	_log10$937,___flmul@f1
  5354  002266  C052  F01D         	movff	_log10$937+1,___flmul@f1+1
  5355  00226A  C053  F01E         	movff	_log10$937+2,___flmul@f1+2
  5356  00226E  C054  F01F         	movff	_log10$937+3,___flmul@f1+3
  5357  002272  0ED9               	movlw	217
  5358  002274  6E20               	movwf	___flmul@f2,c
  5359  002276  0E5B               	movlw	91
  5360  002278  6E21               	movwf	___flmul@f2+1,c
  5361  00227A  0EDE               	movlw	222
  5362  00227C  6E22               	movwf	___flmul@f2+2,c
  5363  00227E  0E3E               	movlw	62
  5364  002280  6E23               	movwf	___flmul@f2+3,c
  5365  002282  EC02  F00E         	call	___flmul	;wreg free
  5366  002286  C01C  F04D         	movff	?___flmul,?_log10
  5367  00228A  C01D  F04E         	movff	?___flmul+1,?_log10+1
  5368  00228E  C01E  F04F         	movff	?___flmul+2,?_log10+2
  5369  002292  C01F  F050         	movff	?___flmul+3,?_log10+3
  5370  002296  0012               	return		;funcret
  5371  002298  FFFF               	dw	65535	; errata NOP
  5372  00229A                     __end_of_log10:
  5373                           	opt stack 0
  5374                           tosu	equ	0xFFF
  5375                           tosh	equ	0xFFE
  5376                           tosl	equ	0xFFD
  5377                           pclath	equ	0xFFA
  5378                           tblptru	equ	0xFF8
  5379                           tblptrh	equ	0xFF7
  5380                           tblptrl	equ	0xFF6
  5381                           tablat	equ	0xFF5
  5382                           intcon	equ	0xFF2
  5383                           intcon2	equ	0xFF1
  5384                           postinc0	equ	0xFEE
  5385                           wreg	equ	0xFE8
  5386                           indf2	equ	0xFDF
  5387                           fsr2h	equ	0xFDA
  5388                           fsr2l	equ	0xFD9
  5389                           status	equ	0xFD8
  5390                           
  5391 ;; *************** function _log *****************
  5392 ;; Defined at:
  5393 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\log.c"
  5394 ;; Parameters:    Size  Location     Type
  5395 ;;  x               4   70[COMRAM] char 
  5396 ;; Auto vars:     Size  Location     Type
  5397 ;;  exponent        2   74[COMRAM] int 
  5398 ;; Return value:  Size  Location     Type
  5399 ;;                  4   70[COMRAM] int 
  5400 ;; Registers used:
  5401 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5402 ;; Tracked objects:
  5403 ;;		On entry : 0/0
  5404 ;;		On exit  : 0/0
  5405 ;;		Unchanged: 0/0
  5406 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5407 ;;      Params:         4       0       0       0       0       0       0
  5408 ;;      Locals:         2       0       0       0       0       0       0
  5409 ;;      Temps:          0       0       0       0       0       0       0
  5410 ;;      Totals:         6       0       0       0       0       0       0
  5411 ;;Total ram usage:        6 bytes
  5412 ;; Hardware stack levels used:    1
  5413 ;; Hardware stack levels required when called:    4
  5414 ;; This function calls:
  5415 ;;		___awtofl
  5416 ;;		___fladd
  5417 ;;		___flmul
  5418 ;;		_eval_poly
  5419 ;;		_frexp
  5420 ;; This function is called by:
  5421 ;;		_log10
  5422 ;;		_pow
  5423 ;; This function uses a non-reentrant model
  5424 ;;
  5425                           
  5426                           	psect	text27
  5427  0016E8                     __ptext27:
  5428                           	opt stack 0
  5429  0016E8                     _log:
  5430                           	opt stack 23
  5431                           
  5432                           ;incstack = 0
  5433  0016E8  FFFF               	dw	65535
  5434  0016EA  BE4A               	btfsc	log@x+3,7,c
  5435  0016EC  D005               	goto	l3307
  5436  0016EE  5047               	movf	log@x,w,c
  5437  0016F0  1048               	iorwf	log@x+1,w,c
  5438  0016F2  1049               	iorwf	log@x+2,w,c
  5439  0016F4  104A               	iorwf	log@x+3,w,c
  5440  0016F6  E106               	bnz	l3309
  5441  0016F8                     l3307:
  5442  0016F8  FFFF               	dw	65535	; assembler added errata NOP
  5443  0016FA  6A47               	clrf	?_log,c
  5444  0016FC  6A48               	clrf	?_log+1,c
  5445  0016FE  6A49               	clrf	?_log+2,c
  5446  001700  6A4A               	clrf	?_log+3,c
  5447  001702  D084               	goto	l897
  5448  001704                     l3309:
  5449  001704  6A20               	clrf	___flmul@f2,c
  5450  001706  6A21               	clrf	___flmul@f2+1,c
  5451  001708  6A22               	clrf	___flmul@f2+2,c
  5452  00170A  0E40               	movlw	64
  5453  00170C  6E23               	movwf	___flmul@f2+3,c
  5454  00170E  0E4B               	movlw	low log@exponent
  5455  001710  6E07               	movwf	frexp@eptr,c
  5456  001712  0E00               	movlw	high log@exponent
  5457  001714  6E08               	movwf	frexp@eptr+1,c
  5458  001716  C047  F003         	movff	log@x,frexp@value
  5459  00171A  C048  F004         	movff	log@x+1,frexp@value+1
  5460  00171E  C049  F005         	movff	log@x+2,frexp@value+2
  5461  001722  C04A  F006         	movff	log@x+3,frexp@value+3
  5462  001726  EC33  F010         	call	_frexp	;wreg free
  5463  00172A  C003  F01C         	movff	?_frexp,___flmul@f1
  5464  00172E  C004  F01D         	movff	?_frexp+1,___flmul@f1+1
  5465  001732  C005  F01E         	movff	?_frexp+2,___flmul@f1+2
  5466  001736  C006  F01F         	movff	?_frexp+3,___flmul@f1+3
  5467  00173A  EC02  F00E         	call	___flmul	;wreg free
  5468  00173E  C01C  F02B         	movff	?___flmul,___fladd@f1
  5469  001742  C01D  F02C         	movff	?___flmul+1,___fladd@f1+1
  5470  001746  C01E  F02D         	movff	?___flmul+2,___fladd@f1+2
  5471  00174A  C01F  F02E         	movff	?___flmul+3,___fladd@f1+3
  5472  00174E  0E00               	movlw	0
  5473  001750  6E2F               	movwf	___fladd@f2,c
  5474  001752  6E30               	movwf	___fladd@f2+1,c
  5475  001754  0E80               	movlw	128
  5476  001756  6E31               	movwf	___fladd@f2+2,c
  5477  001758  0EBF               	movlw	191
  5478  00175A  6E32               	movwf	___fladd@f2+3,c
  5479  00175C  ECB5  F00A         	call	___fladd	;wreg free
  5480  001760  C02B  F047         	movff	?___fladd,log@x
  5481  001764  C02C  F048         	movff	?___fladd+1,log@x+1
  5482  001768  C02D  F049         	movff	?___fladd+2,log@x+2
  5483  00176C  C02E  F04A         	movff	?___fladd+3,log@x+3
  5484  001770  064B               	decf	log@exponent,f,c
  5485  001772  A0D8               	btfss	status,0,c
  5486  001774  064C               	decf	log@exponent+1,f,c
  5487  001776  C047  F037         	movff	log@x,eval_poly@x
  5488  00177A  C048  F038         	movff	log@x+1,eval_poly@x+1
  5489  00177E  C049  F039         	movff	log@x+2,eval_poly@x+2
  5490  001782  C04A  F03A         	movff	log@x+3,eval_poly@x+3
  5491  001786  0E29               	movlw	low log@coeff
  5492  001788  6E3B               	movwf	eval_poly@d,c
  5493  00178A  0E06               	movlw	high log@coeff
  5494  00178C  6E3C               	movwf	eval_poly@d+1,c
  5495  00178E  6A3E               	clrf	eval_poly@n+1,c
  5496  001790  0E08               	movlw	8
  5497  001792  6E3D               	movwf	eval_poly@n,c
  5498  001794  EC8C  F00C         	call	_eval_poly	;wreg free
  5499  001798  C037  F047         	movff	?_eval_poly,log@x
  5500  00179C  C038  F048         	movff	?_eval_poly+1,log@x+1
  5501  0017A0  C039  F049         	movff	?_eval_poly+2,log@x+2
  5502  0017A4  C03A  F04A         	movff	?_eval_poly+3,log@x+3
  5503  0017A8  0E18               	movlw	24
  5504  0017AA  6E20               	movwf	___flmul@f2,c
  5505  0017AC  0E72               	movlw	114
  5506  0017AE  6E21               	movwf	___flmul@f2+1,c
  5507  0017B0  0E31               	movlw	49
  5508  0017B2  6E22               	movwf	___flmul@f2+2,c
  5509  0017B4  0E3F               	movlw	63
  5510  0017B6  6E23               	movwf	___flmul@f2+3,c
  5511  0017B8  C04B  F00D         	movff	log@exponent,___awtofl@c
  5512  0017BC  C04C  F00E         	movff	log@exponent+1,___awtofl@c+1
  5513  0017C0  EC3B  F012         	call	___awtofl	;wreg free
  5514  0017C4  C00D  F01C         	movff	?___awtofl,___flmul@f1
  5515  0017C8  C00E  F01D         	movff	?___awtofl+1,___flmul@f1+1
  5516  0017CC  C00F  F01E         	movff	?___awtofl+2,___flmul@f1+2
  5517  0017D0  C010  F01F         	movff	?___awtofl+3,___flmul@f1+3
  5518  0017D4  EC02  F00E         	call	___flmul	;wreg free
  5519  0017D8  C01C  F02B         	movff	?___flmul,___fladd@f1
  5520  0017DC  C01D  F02C         	movff	?___flmul+1,___fladd@f1+1
  5521  0017E0  C01E  F02D         	movff	?___flmul+2,___fladd@f1+2
  5522  0017E4  C01F  F02E         	movff	?___flmul+3,___fladd@f1+3
  5523  0017E8  C047  F02F         	movff	log@x,___fladd@f2
  5524  0017EC  C048  F030         	movff	log@x+1,___fladd@f2+1
  5525  0017F0  C049  F031         	movff	log@x+2,___fladd@f2+2
  5526  0017F4  C04A  F032         	movff	log@x+3,___fladd@f2+3
  5527  0017F8  ECB5  F00A         	call	___fladd	;wreg free
  5528  0017FC  C02B  F047         	movff	?___fladd,?_log
  5529  001800  C02C  F048         	movff	?___fladd+1,?_log+1
  5530  001804  C02D  F049         	movff	?___fladd+2,?_log+2
  5531  001808  C02E  F04A         	movff	?___fladd+3,?_log+3
  5532  00180C                     l897:
  5533  00180C  FFFF               	dw	65535	; assembler added errata NOP
  5534  00180E  0012               	return		;funcret
  5535  001810  FFFF               	dw	65535	; errata NOP
  5536  001812                     __end_of_log:
  5537                           	opt stack 0
  5538                           tosu	equ	0xFFF
  5539                           tosh	equ	0xFFE
  5540                           tosl	equ	0xFFD
  5541                           pclath	equ	0xFFA
  5542                           tblptru	equ	0xFF8
  5543                           tblptrh	equ	0xFF7
  5544                           tblptrl	equ	0xFF6
  5545                           tablat	equ	0xFF5
  5546                           intcon	equ	0xFF2
  5547                           intcon2	equ	0xFF1
  5548                           postinc0	equ	0xFEE
  5549                           wreg	equ	0xFE8
  5550                           indf2	equ	0xFDF
  5551                           fsr2h	equ	0xFDA
  5552                           fsr2l	equ	0xFD9
  5553                           status	equ	0xFD8
  5554                           
  5555 ;; *************** function _frexp *****************
  5556 ;; Defined at:
  5557 ;;		line 254 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\frexp.c"
  5558 ;; Parameters:    Size  Location     Type
  5559 ;;  value           4    2[COMRAM] int 
  5560 ;;  eptr            2    6[COMRAM] PTR int 
  5561 ;;		 -> log@exponent(2), floor@expon(2), 
  5562 ;; Auto vars:     Size  Location     Type
  5563 ;;		None
  5564 ;; Return value:  Size  Location     Type
  5565 ;;                  4    2[COMRAM] PTR int 
  5566 ;; Registers used:
  5567 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5568 ;; Tracked objects:
  5569 ;;		On entry : 0/0
  5570 ;;		On exit  : 0/0
  5571 ;;		Unchanged: 0/0
  5572 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5573 ;;      Params:         6       0       0       0       0       0       0
  5574 ;;      Locals:         0       0       0       0       0       0       0
  5575 ;;      Temps:          2       0       0       0       0       0       0
  5576 ;;      Totals:         8       0       0       0       0       0       0
  5577 ;;Total ram usage:        8 bytes
  5578 ;; Hardware stack levels used:    1
  5579 ;; Hardware stack levels required when called:    1
  5580 ;; This function calls:
  5581 ;;		Nothing
  5582 ;; This function is called by:
  5583 ;;		_floor
  5584 ;;		_log
  5585 ;; This function uses a non-reentrant model
  5586 ;;
  5587                           
  5588                           	psect	text28
  5589  002066                     __ptext28:
  5590                           	opt stack 0
  5591  002066                     _frexp:
  5592                           	opt stack 25
  5593                           
  5594                           ;incstack = 0
  5595  002066  FFFF               	dw	65535
  5596  002068  5003               	movf	frexp@value,w,c
  5597  00206A  1004               	iorwf	frexp@value+1,w,c
  5598  00206C  1005               	iorwf	frexp@value+2,w,c
  5599  00206E  1006               	iorwf	frexp@value+3,w,c
  5600  002070  E10C               	bnz	l3113
  5601  002072  C007  FFD9         	movff	frexp@eptr,fsr2l
  5602  002076  C008  FFDA         	movff	frexp@eptr+1,fsr2h
  5603  00207A  0E00               	movlw	0
  5604  00207C  6ADE               	clrf	postinc2,c
  5605  00207E  6ADD               	clrf	postdec2,c
  5606  002080  6A03               	clrf	?_frexp,c
  5607  002082  6A04               	clrf	?_frexp+1,c
  5608  002084  6A05               	clrf	?_frexp+2,c
  5609  002086  6A06               	clrf	?_frexp+3,c
  5610  002088  D02E               	goto	l731
  5611  00208A                     l3113:
  5612  00208A  5006               	movf	frexp@value+3,w,c
  5613  00208C  0B7F               	andlw	127
  5614  00208E  6E09               	movwf	??_frexp& (0+255),c
  5615  002090  6A0A               	clrf	(??_frexp+1)& (0+255),c
  5616  002092  90D8               	bcf	status,0,c
  5617  002094  3609               	rlcf	??_frexp,f,c
  5618  002096  360A               	rlcf	??_frexp+1,f,c
  5619  002098  C007  FFD9         	movff	frexp@eptr,fsr2l
  5620  00209C  C008  FFDA         	movff	frexp@eptr+1,fsr2h
  5621  0020A0  C009  FFDE         	movff	??_frexp,postinc2
  5622  0020A4  C00A  FFDD         	movff	??_frexp+1,postdec2
  5623  0020A8  0E01               	movlw	1
  5624  0020AA  AE05               	btfss	frexp@value+2,7,c
  5625  0020AC  0E00               	movlw	0
  5626  0020AE  C007  FFD9         	movff	frexp@eptr,fsr2l
  5627  0020B2  C008  FFDA         	movff	frexp@eptr+1,fsr2h
  5628  0020B6  12DE               	iorwf	postinc2,f,c
  5629  0020B8  0E00               	movlw	0
  5630  0020BA  12DD               	iorwf	postdec2,f,c
  5631  0020BC  C007  FFD9         	movff	frexp@eptr,fsr2l
  5632  0020C0  C008  FFDA         	movff	frexp@eptr+1,fsr2h
  5633  0020C4  0E82               	movlw	130
  5634  0020C6  26DE               	addwf	postinc2,f,c
  5635  0020C8  0EFF               	movlw	255
  5636  0020CA  22DD               	addwfc	postdec2,f,c
  5637  0020CC  5006               	movf	frexp@value+3,w,c
  5638  0020CE  0B80               	andlw	-128
  5639  0020D0  093F               	iorlw	63
  5640  0020D2  6E06               	movwf	frexp@value+3,c
  5641  0020D4  9E05               	bcf	frexp@value+2,7,c
  5642  0020D6  C003  F003         	movff	frexp@value,?_frexp
  5643  0020DA  C004  F004         	movff	frexp@value+1,?_frexp+1
  5644  0020DE  C005  F005         	movff	frexp@value+2,?_frexp+2
  5645  0020E2  C006  F006         	movff	frexp@value+3,?_frexp+3
  5646  0020E6                     l731:
  5647  0020E6  FFFF               	dw	65535	; assembler added errata NOP
  5648  0020E8  0012               	return		;funcret
  5649  0020EA  FFFF               	dw	65535	; errata NOP
  5650  0020EC                     __end_of_frexp:
  5651                           	opt stack 0
  5652                           tosu	equ	0xFFF
  5653                           tosh	equ	0xFFE
  5654                           tosl	equ	0xFFD
  5655                           pclath	equ	0xFFA
  5656                           tblptru	equ	0xFF8
  5657                           tblptrh	equ	0xFF7
  5658                           tblptrl	equ	0xFF6
  5659                           tablat	equ	0xFF5
  5660                           intcon	equ	0xFF2
  5661                           intcon2	equ	0xFF1
  5662                           postinc0	equ	0xFEE
  5663                           wreg	equ	0xFE8
  5664                           indf2	equ	0xFDF
  5665                           postinc2	equ	0xFDE
  5666                           postdec2	equ	0xFDD
  5667                           fsr2h	equ	0xFDA
  5668                           fsr2l	equ	0xFD9
  5669                           status	equ	0xFD8
  5670                           
  5671 ;; *************** function _eval_poly *****************
  5672 ;; Defined at:
  5673 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\evalpoly.c"
  5674 ;; Parameters:    Size  Location     Type
  5675 ;;  x               4   54[COMRAM] PTR int 
  5676 ;;  d               2   58[COMRAM] PTR const 
  5677 ;;		 -> exp@coeff(40), log@coeff(36), 
  5678 ;;  n               2   60[COMRAM] int 
  5679 ;; Auto vars:     Size  Location     Type
  5680 ;;  res             4   66[COMRAM] int 
  5681 ;; Return value:  Size  Location     Type
  5682 ;;                  4   54[COMRAM] int 
  5683 ;; Registers used:
  5684 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5685 ;; Tracked objects:
  5686 ;;		On entry : 0/0
  5687 ;;		On exit  : 0/0
  5688 ;;		Unchanged: 0/0
  5689 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5690 ;;      Params:         8       0       0       0       0       0       0
  5691 ;;      Locals:         4       0       0       0       0       0       0
  5692 ;;      Temps:          4       0       0       0       0       0       0
  5693 ;;      Totals:        16       0       0       0       0       0       0
  5694 ;;Total ram usage:       16 bytes
  5695 ;; Hardware stack levels used:    1
  5696 ;; Hardware stack levels required when called:    3
  5697 ;; This function calls:
  5698 ;;		___fladd
  5699 ;;		___flmul
  5700 ;; This function is called by:
  5701 ;;		_log
  5702 ;;		_exp
  5703 ;; This function uses a non-reentrant model
  5704 ;;
  5705                           
  5706                           	psect	text29
  5707  001918                     __ptext29:
  5708                           	opt stack 0
  5709  001918                     _eval_poly:
  5710                           	opt stack 23
  5711                           
  5712                           ;incstack = 0
  5713  001918  FFFF               	dw	65535
  5714  00191A  C03D  F03F         	movff	eval_poly@n,??_eval_poly
  5715  00191E  C03E  F040         	movff	eval_poly@n+1,??_eval_poly+1
  5716  001922  90D8               	bcf	status,0,c
  5717  001924  363F               	rlcf	??_eval_poly,f,c
  5718  001926  3640               	rlcf	??_eval_poly+1,f,c
  5719  001928  90D8               	bcf	status,0,c
  5720  00192A  363F               	rlcf	??_eval_poly,f,c
  5721  00192C  3640               	rlcf	??_eval_poly+1,f,c
  5722  00192E  C03B  F041         	movff	eval_poly@d,??_eval_poly+2
  5723  001932  C03C  F042         	movff	eval_poly@d+1,??_eval_poly+3
  5724  001936  503F               	movf	??_eval_poly,w,c
  5725  001938  2641               	addwf	??_eval_poly+2,f,c
  5726  00193A  5040               	movf	??_eval_poly+1,w,c
  5727  00193C  2242               	addwfc	??_eval_poly+3,f,c
  5728  00193E  C041  FFF6         	movff	??_eval_poly+2,tblptrl
  5729  001942  C042  FFF7         	movff	??_eval_poly+3,tblptrh
  5730  001946                     	if	0	;tblptru may be non-zero
  5731  001946                     	endif
  5732  001946                     	if	0	;tblptru may be non-zero
  5733  001946                     	endif
  5734  001946  0009               	tblrd		*+
  5735  001948  FFFF               	dw	65535	; errata NOP
  5736  00194A  CFF5 F043          	movff	tablat,eval_poly@res
  5737  00194E  0009               	tblrd		*+
  5738  001950  FFFF               	dw	65535	; errata NOP
  5739  001952  CFF5 F044          	movff	tablat,eval_poly@res+1
  5740  001956  0009               	tblrd		*+
  5741  001958  FFFF               	dw	65535	; errata NOP
  5742  00195A  CFF5 F045          	movff	tablat,eval_poly@res+2
  5743  00195E  000A               	tblrd		*-
  5744  001960  FFFF               	dw	65535	; errata NOP
  5745  001962  CFF5 F046          	movff	tablat,eval_poly@res+3
  5746  001966  D04D               	goto	l3291
  5747  001968                     l3289:
  5748  001968  C043  F020         	movff	eval_poly@res,___flmul@f2
  5749  00196C  C044  F021         	movff	eval_poly@res+1,___flmul@f2+1
  5750  001970  C045  F022         	movff	eval_poly@res+2,___flmul@f2+2
  5751  001974  C046  F023         	movff	eval_poly@res+3,___flmul@f2+3
  5752  001978  C037  F01C         	movff	eval_poly@x,___flmul@f1
  5753  00197C  C038  F01D         	movff	eval_poly@x+1,___flmul@f1+1
  5754  001980  C039  F01E         	movff	eval_poly@x+2,___flmul@f1+2
  5755  001984  C03A  F01F         	movff	eval_poly@x+3,___flmul@f1+3
  5756  001988  EC02  F00E         	call	___flmul	;wreg free
  5757  00198C  C01C  F02B         	movff	?___flmul,___fladd@f1
  5758  001990  C01D  F02C         	movff	?___flmul+1,___fladd@f1+1
  5759  001994  C01E  F02D         	movff	?___flmul+2,___fladd@f1+2
  5760  001998  C01F  F02E         	movff	?___flmul+3,___fladd@f1+3
  5761  00199C  063D               	decf	eval_poly@n,f,c
  5762  00199E  A0D8               	btfss	status,0,c
  5763  0019A0  063E               	decf	eval_poly@n+1,f,c
  5764  0019A2  C03D  F03F         	movff	eval_poly@n,??_eval_poly
  5765  0019A6  C03E  F040         	movff	eval_poly@n+1,??_eval_poly+1
  5766  0019AA  90D8               	bcf	status,0,c
  5767  0019AC  363F               	rlcf	??_eval_poly,f,c
  5768  0019AE  3640               	rlcf	??_eval_poly+1,f,c
  5769  0019B0  90D8               	bcf	status,0,c
  5770  0019B2  363F               	rlcf	??_eval_poly,f,c
  5771  0019B4  3640               	rlcf	??_eval_poly+1,f,c
  5772  0019B6  C03B  F041         	movff	eval_poly@d,??_eval_poly+2
  5773  0019BA  C03C  F042         	movff	eval_poly@d+1,??_eval_poly+3
  5774  0019BE  503F               	movf	??_eval_poly,w,c
  5775  0019C0  2641               	addwf	??_eval_poly+2,f,c
  5776  0019C2  5040               	movf	??_eval_poly+1,w,c
  5777  0019C4  2242               	addwfc	??_eval_poly+3,f,c
  5778  0019C6  C041  FFF6         	movff	??_eval_poly+2,tblptrl
  5779  0019CA  C042  FFF7         	movff	??_eval_poly+3,tblptrh
  5780  0019CE                     	if	0	;tblptru may be non-zero
  5781  0019CE                     	endif
  5782  0019CE                     	if	0	;tblptru may be non-zero
  5783  0019CE                     	endif
  5784  0019CE  0009               	tblrd		*+
  5785  0019D0  FFFF               	dw	65535	; errata NOP
  5786  0019D2  CFF5 F02F          	movff	tablat,___fladd@f2
  5787  0019D6  0009               	tblrd		*+
  5788  0019D8  FFFF               	dw	65535	; errata NOP
  5789  0019DA  CFF5 F030          	movff	tablat,___fladd@f2+1
  5790  0019DE  0009               	tblrd		*+
  5791  0019E0  FFFF               	dw	65535	; errata NOP
  5792  0019E2  CFF5 F031          	movff	tablat,___fladd@f2+2
  5793  0019E6  000A               	tblrd		*-
  5794  0019E8  FFFF               	dw	65535	; errata NOP
  5795  0019EA  CFF5 F032          	movff	tablat,___fladd@f2+3
  5796  0019EE  ECB5  F00A         	call	___fladd	;wreg free
  5797  0019F2  C02B  F043         	movff	?___fladd,eval_poly@res
  5798  0019F6  C02C  F044         	movff	?___fladd+1,eval_poly@res+1
  5799  0019FA  C02D  F045         	movff	?___fladd+2,eval_poly@res+2
  5800  0019FE  C02E  F046         	movff	?___fladd+3,eval_poly@res+3
  5801  001A02                     l3291:
  5802  001A02  FFFF               	dw	65535	; assembler added errata NOP
  5803  001A04  503D               	movf	eval_poly@n,w,c
  5804  001A06  103E               	iorwf	eval_poly@n+1,w,c
  5805  001A08  E1AF               	bnz	l3289
  5806  001A0A  C043  F037         	movff	eval_poly@res,?_eval_poly
  5807  001A0E  C044  F038         	movff	eval_poly@res+1,?_eval_poly+1
  5808  001A12  C045  F039         	movff	eval_poly@res+2,?_eval_poly+2
  5809  001A16  C046  F03A         	movff	eval_poly@res+3,?_eval_poly+3
  5810  001A1A  0012               	return		;funcret
  5811  001A1C  FFFF               	dw	65535	; errata NOP
  5812  001A1E                     __end_of_eval_poly:
  5813                           	opt stack 0
  5814                           tosu	equ	0xFFF
  5815                           tosh	equ	0xFFE
  5816                           tosl	equ	0xFFD
  5817                           pclath	equ	0xFFA
  5818                           tblptru	equ	0xFF8
  5819                           tblptrh	equ	0xFF7
  5820                           tblptrl	equ	0xFF6
  5821                           tablat	equ	0xFF5
  5822                           intcon	equ	0xFF2
  5823                           intcon2	equ	0xFF1
  5824                           postinc0	equ	0xFEE
  5825                           wreg	equ	0xFE8
  5826                           indf2	equ	0xFDF
  5827                           postinc2	equ	0xFDE
  5828                           postdec2	equ	0xFDD
  5829                           fsr2h	equ	0xFDA
  5830                           fsr2l	equ	0xFD9
  5831                           status	equ	0xFD8
  5832                           
  5833 ;; *************** function ___flmul *****************
  5834 ;; Defined at:
  5835 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\flmul.c"
  5836 ;; Parameters:    Size  Location     Type
  5837 ;;  f1              4   27[COMRAM] int 
  5838 ;;  f2              4   31[COMRAM] int 
  5839 ;; Auto vars:     Size  Location     Type
  5840 ;;  f3_as_produc    4   36[COMRAM] unsigned long 
  5841 ;;  sign            1   41[COMRAM] unsigned char 
  5842 ;;  cntr            1   40[COMRAM] unsigned char 
  5843 ;;  exp             1   35[COMRAM] unsigned char 
  5844 ;; Return value:  Size  Location     Type
  5845 ;;                  4   27[COMRAM] unsigned char 
  5846 ;; Registers used:
  5847 ;;		wreg, status,2, status,0, cstack
  5848 ;; Tracked objects:
  5849 ;;		On entry : 0/0
  5850 ;;		On exit  : 0/0
  5851 ;;		Unchanged: 0/0
  5852 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5853 ;;      Params:         8       0       0       0       0       0       0
  5854 ;;      Locals:         7       0       0       0       0       0       0
  5855 ;;      Temps:          0       0       0       0       0       0       0
  5856 ;;      Totals:        15       0       0       0       0       0       0
  5857 ;;Total ram usage:       15 bytes
  5858 ;; Hardware stack levels used:    1
  5859 ;; Hardware stack levels required when called:    2
  5860 ;; This function calls:
  5861 ;;		___flpack
  5862 ;; This function is called by:
  5863 ;;		_measure_capacitance
  5864 ;;		_measure_inductance
  5865 ;;		_format_double
  5866 ;;		_log
  5867 ;;		_log10
  5868 ;;		_pow
  5869 ;;		_eval_poly
  5870 ;;		_exp
  5871 ;; This function uses a non-reentrant model
  5872 ;;
  5873                           
  5874                           	psect	text30
  5875  001C04                     __ptext30:
  5876                           	opt stack 0
  5877  001C04                     ___flmul:
  5878                           	opt stack 27
  5879                           
  5880                           ;incstack = 0
  5881  001C04  FFFF               	dw	65535
  5882  001C06  341E               	rlcf	___flmul@f1+2,w,c
  5883  001C08  341F               	rlcf	___flmul@f1+3,w,c
  5884  001C0A  6E24               	movwf	___flmul@exp,c
  5885  001C0C  5024               	movf	___flmul@exp,w,c
  5886  001C0E  E005               	bz	l3051
  5887  001C10  3422               	rlcf	___flmul@f2+2,w,c
  5888  001C12  3423               	rlcf	___flmul@f2+3,w,c
  5889  001C14  6E2A               	movwf	___flmul@sign,c
  5890  001C16  502A               	movf	___flmul@sign,w,c
  5891  001C18  E105               	bnz	l3053
  5892  001C1A                     l3051:
  5893  001C1A  6A1C               	clrf	?___flmul,c
  5894  001C1C  6A1D               	clrf	?___flmul+1,c
  5895  001C1E  6A1E               	clrf	?___flmul+2,c
  5896  001C20  6A1F               	clrf	?___flmul+3,c
  5897  001C22  D05B               	goto	l666
  5898  001C24                     l3053:
  5899  001C24  502A               	movf	___flmul@sign,w,c
  5900  001C26  0F7B               	addlw	123
  5901  001C28  2624               	addwf	___flmul@exp,f,c
  5902  001C2A  C01F  F02A         	movff	___flmul@f1+3,___flmul@sign
  5903  001C2E  5023               	movf	___flmul@f2+3,w,c
  5904  001C30  1A2A               	xorwf	___flmul@sign,f,c
  5905  001C32  0E80               	movlw	128
  5906  001C34  162A               	andwf	___flmul@sign,f,c
  5907  001C36  8E1E               	bsf	___flmul@f1+2,7,c
  5908  001C38  8E22               	bsf	___flmul@f2+2,7,c
  5909  001C3A  0E00               	movlw	0
  5910  001C3C  1623               	andwf	___flmul@f2+3,f,c
  5911  001C3E  6A25               	clrf	___flmul@f3_as_product,c
  5912  001C40  6A26               	clrf	___flmul@f3_as_product+1,c
  5913  001C42  6A27               	clrf	___flmul@f3_as_product+2,c
  5914  001C44  6A28               	clrf	___flmul@f3_as_product+3,c
  5915  001C46  0E07               	movlw	7
  5916  001C48  6E29               	movwf	___flmul@cntr,c
  5917  001C4A                     l3065:
  5918  001C4A  FFFF               	dw	65535	; assembler added errata NOP
  5919  001C4C  A01C               	btfss	___flmul@f1,0,c
  5920  001C4E  D008               	goto	l3069
  5921  001C50  5020               	movf	___flmul@f2,w,c
  5922  001C52  2625               	addwf	___flmul@f3_as_product,f,c
  5923  001C54  5021               	movf	___flmul@f2+1,w,c
  5924  001C56  2226               	addwfc	___flmul@f3_as_product+1,f,c
  5925  001C58  5022               	movf	___flmul@f2+2,w,c
  5926  001C5A  2227               	addwfc	___flmul@f3_as_product+2,f,c
  5927  001C5C  5023               	movf	___flmul@f2+3,w,c
  5928  001C5E  2228               	addwfc	___flmul@f3_as_product+3,f,c
  5929  001C60                     l3069:
  5930  001C60  FFFF               	dw	65535	; assembler added errata NOP
  5931  001C62  90D8               	bcf	status,0,c
  5932  001C64  321F               	rrcf	___flmul@f1+3,f,c
  5933  001C66  321E               	rrcf	___flmul@f1+2,f,c
  5934  001C68  321D               	rrcf	___flmul@f1+1,f,c
  5935  001C6A  321C               	rrcf	___flmul@f1,f,c
  5936  001C6C  90D8               	bcf	status,0,c
  5937  001C6E  3620               	rlcf	___flmul@f2,f,c
  5938  001C70  3621               	rlcf	___flmul@f2+1,f,c
  5939  001C72  3622               	rlcf	___flmul@f2+2,f,c
  5940  001C74  3623               	rlcf	___flmul@f2+3,f,c
  5941  001C76  2E29               	decfsz	___flmul@cntr,f,c
  5942  001C78  D7E8               	goto	l3065
  5943  001C7A  0E11               	movlw	17
  5944  001C7C  6E29               	movwf	___flmul@cntr,c
  5945  001C7E                     l3077:
  5946  001C7E  FFFF               	dw	65535	; assembler added errata NOP
  5947  001C80  A01C               	btfss	___flmul@f1,0,c
  5948  001C82  D008               	goto	l3081
  5949  001C84  5020               	movf	___flmul@f2,w,c
  5950  001C86  2625               	addwf	___flmul@f3_as_product,f,c
  5951  001C88  5021               	movf	___flmul@f2+1,w,c
  5952  001C8A  2226               	addwfc	___flmul@f3_as_product+1,f,c
  5953  001C8C  5022               	movf	___flmul@f2+2,w,c
  5954  001C8E  2227               	addwfc	___flmul@f3_as_product+2,f,c
  5955  001C90  5023               	movf	___flmul@f2+3,w,c
  5956  001C92  2228               	addwfc	___flmul@f3_as_product+3,f,c
  5957  001C94                     l3081:
  5958  001C94  FFFF               	dw	65535	; assembler added errata NOP
  5959  001C96  90D8               	bcf	status,0,c
  5960  001C98  321F               	rrcf	___flmul@f1+3,f,c
  5961  001C9A  321E               	rrcf	___flmul@f1+2,f,c
  5962  001C9C  321D               	rrcf	___flmul@f1+1,f,c
  5963  001C9E  321C               	rrcf	___flmul@f1,f,c
  5964  001CA0  90D8               	bcf	status,0,c
  5965  001CA2  3228               	rrcf	___flmul@f3_as_product+3,f,c
  5966  001CA4  3227               	rrcf	___flmul@f3_as_product+2,f,c
  5967  001CA6  3226               	rrcf	___flmul@f3_as_product+1,f,c
  5968  001CA8  3225               	rrcf	___flmul@f3_as_product,f,c
  5969  001CAA  2E29               	decfsz	___flmul@cntr,f,c
  5970  001CAC  D7E8               	goto	l3077
  5971  001CAE  C025  F003         	movff	___flmul@f3_as_product,___flpack@arg
  5972  001CB2  C026  F004         	movff	___flmul@f3_as_product+1,___flpack@arg+1
  5973  001CB6  C027  F005         	movff	___flmul@f3_as_product+2,___flpack@arg+2
  5974  001CBA  C028  F006         	movff	___flmul@f3_as_product+3,___flpack@arg+3
  5975  001CBE  C024  F007         	movff	___flmul@exp,___flpack@exp
  5976  001CC2  C02A  F008         	movff	___flmul@sign,___flpack@sign
  5977  001CC6  EC70  F00E         	call	___flpack	;wreg free
  5978  001CCA  C003  F01C         	movff	?___flpack,?___flmul
  5979  001CCE  C004  F01D         	movff	?___flpack+1,?___flmul+1
  5980  001CD2  C005  F01E         	movff	?___flpack+2,?___flmul+2
  5981  001CD6  C006  F01F         	movff	?___flpack+3,?___flmul+3
  5982  001CDA                     l666:
  5983  001CDA  FFFF               	dw	65535	; assembler added errata NOP
  5984  001CDC  0012               	return		;funcret
  5985  001CDE  FFFF               	dw	65535	; errata NOP
  5986  001CE0                     __end_of___flmul:
  5987                           	opt stack 0
  5988                           tosu	equ	0xFFF
  5989                           tosh	equ	0xFFE
  5990                           tosl	equ	0xFFD
  5991                           pclath	equ	0xFFA
  5992                           tblptru	equ	0xFF8
  5993                           tblptrh	equ	0xFF7
  5994                           tblptrl	equ	0xFF6
  5995                           tablat	equ	0xFF5
  5996                           intcon	equ	0xFF2
  5997                           intcon2	equ	0xFF1
  5998                           postinc0	equ	0xFEE
  5999                           wreg	equ	0xFE8
  6000                           indf2	equ	0xFDF
  6001                           postinc2	equ	0xFDE
  6002                           postdec2	equ	0xFDD
  6003                           fsr2h	equ	0xFDA
  6004                           fsr2l	equ	0xFD9
  6005                           status	equ	0xFD8
  6006                           
  6007 ;; *************** function ___fladd *****************
  6008 ;; Defined at:
  6009 ;;		line 88 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\fladd.c"
  6010 ;; Parameters:    Size  Location     Type
  6011 ;;  f1              4   42[COMRAM] unsigned char 
  6012 ;;  f2              4   46[COMRAM] unsigned char 
  6013 ;; Auto vars:     Size  Location     Type
  6014 ;;  exp1            1   53[COMRAM] unsigned char 
  6015 ;;  exp2            1   52[COMRAM] unsigned char 
  6016 ;;  sign            1   51[COMRAM] unsigned char 
  6017 ;; Return value:  Size  Location     Type
  6018 ;;                  4   42[COMRAM] unsigned char 
  6019 ;; Registers used:
  6020 ;;		wreg, status,2, status,0, cstack
  6021 ;; Tracked objects:
  6022 ;;		On entry : 0/0
  6023 ;;		On exit  : 0/0
  6024 ;;		Unchanged: 0/0
  6025 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6026 ;;      Params:         8       0       0       0       0       0       0
  6027 ;;      Locals:         3       0       0       0       0       0       0
  6028 ;;      Temps:          1       0       0       0       0       0       0
  6029 ;;      Totals:        12       0       0       0       0       0       0
  6030 ;;Total ram usage:       12 bytes
  6031 ;; Hardware stack levels used:    1
  6032 ;; Hardware stack levels required when called:    2
  6033 ;; This function calls:
  6034 ;;		___flpack
  6035 ;; This function is called by:
  6036 ;;		_floor
  6037 ;;		___flsub
  6038 ;;		_log
  6039 ;;		_eval_poly
  6040 ;; This function uses a non-reentrant model
  6041 ;;
  6042                           
  6043                           	psect	text31
  6044  00156A                     __ptext31:
  6045                           	opt stack 0
  6046  00156A                     ___fladd:
  6047                           	opt stack 26
  6048                           
  6049                           ;incstack = 0
  6050  00156A  FFFF               	dw	65535
  6051  00156C  342D               	rlcf	___fladd@f1+2,w,c
  6052  00156E  342E               	rlcf	___fladd@f1+3,w,c
  6053  001570  6E36               	movwf	___fladd@exp1,c
  6054  001572  3431               	rlcf	___fladd@f2+2,w,c
  6055  001574  3432               	rlcf	___fladd@f2+3,w,c
  6056  001576  6E35               	movwf	___fladd@exp2,c
  6057  001578  5036               	movf	___fladd@exp1,w,c
  6058  00157A  E009               	bz	l619
  6059  00157C  5035               	movf	___fladd@exp2,w,c
  6060  00157E  5C36               	subwf	___fladd@exp1,w,c
  6061  001580  E20F               	bc	l2985
  6062  001582  5036               	movf	___fladd@exp1,w,c
  6063  001584  5C35               	subwf	___fladd@exp2,w,c
  6064  001586  6E33               	movwf	??___fladd& (0+255),c
  6065  001588  0E20               	movlw	32
  6066  00158A  6433               	cpfsgt	??___fladd,c
  6067  00158C  D009               	goto	l2985
  6068  00158E                     l619:
  6069  00158E  C02F  F02B         	movff	___fladd@f2,?___fladd
  6070  001592  C030  F02C         	movff	___fladd@f2+1,?___fladd+1
  6071  001596  C031  F02D         	movff	___fladd@f2+2,?___fladd+2
  6072  00159A  C032  F02E         	movff	___fladd@f2+3,?___fladd+3
  6073  00159E  D0A1               	goto	l620
  6074  0015A0                     l2985:
  6075  0015A0  FFFF               	dw	65535	; assembler added errata NOP
  6076  0015A2  5035               	movf	___fladd@exp2,w,c
  6077  0015A4  E009               	bz	l623
  6078  0015A6  5036               	movf	___fladd@exp1,w,c
  6079  0015A8  5C35               	subwf	___fladd@exp2,w,c
  6080  0015AA  E20F               	bc	l2991
  6081  0015AC  5035               	movf	___fladd@exp2,w,c
  6082  0015AE  5C36               	subwf	___fladd@exp1,w,c
  6083  0015B0  6E33               	movwf	??___fladd& (0+255),c
  6084  0015B2  0E20               	movlw	32
  6085  0015B4  6433               	cpfsgt	??___fladd,c
  6086  0015B6  D009               	goto	l2991
  6087  0015B8                     l623:
  6088  0015B8  C02B  F02B         	movff	___fladd@f1,?___fladd
  6089  0015BC  C02C  F02C         	movff	___fladd@f1+1,?___fladd+1
  6090  0015C0  C02D  F02D         	movff	___fladd@f1+2,?___fladd+2
  6091  0015C4  C02E  F02E         	movff	___fladd@f1+3,?___fladd+3
  6092  0015C8  D08C               	goto	l620
  6093  0015CA                     l2991:
  6094  0015CA  FFFF               	dw	65535	; assembler added errata NOP
  6095  0015CC  0E06               	movlw	6
  6096  0015CE  6E34               	movwf	___fladd@sign,c
  6097  0015D0  BE2E               	btfsc	___fladd@f1+3,7,c
  6098  0015D2  8E34               	bsf	___fladd@sign,7,c
  6099  0015D4  BE32               	btfsc	___fladd@f2+3,7,c
  6100  0015D6  8C34               	bsf	___fladd@sign,6,c
  6101  0015D8  8E2D               	bsf	___fladd@f1+2,7,c
  6102  0015DA  6A2E               	clrf	___fladd@f1+3,c
  6103  0015DC  8E31               	bsf	___fladd@f2+2,7,c
  6104  0015DE  6A32               	clrf	___fladd@f2+3,c
  6105  0015E0  5035               	movf	___fladd@exp2,w,c
  6106  0015E2  5C36               	subwf	___fladd@exp1,w,c
  6107  0015E4  E21C               	bc	l3015
  6108  0015E6                     l3005:
  6109  0015E6  FFFF               	dw	65535	; assembler added errata NOP
  6110  0015E8  90D8               	bcf	status,0,c
  6111  0015EA  362F               	rlcf	___fladd@f2,f,c
  6112  0015EC  3630               	rlcf	___fladd@f2+1,f,c
  6113  0015EE  3631               	rlcf	___fladd@f2+2,f,c
  6114  0015F0  3632               	rlcf	___fladd@f2+3,f,c
  6115  0015F2  0635               	decf	___fladd@exp2,f,c
  6116  0015F4  5036               	movf	___fladd@exp1,w,c
  6117  0015F6  1835               	xorwf	___fladd@exp2,w,c
  6118  0015F8  E00E               	bz	l3013
  6119  0015FA  0634               	decf	___fladd@sign,f,c
  6120  0015FC  C034  F033         	movff	___fladd@sign,??___fladd
  6121  001600  0E07               	movlw	7
  6122  001602  1633               	andwf	??___fladd,f,c
  6123  001604  E008               	bz	l3013
  6124  001606  D7EF               	goto	l3005
  6125  001608                     l3011:
  6126  001608  FFFF               	dw	65535	; assembler added errata NOP
  6127  00160A  90D8               	bcf	status,0,c
  6128  00160C  322E               	rrcf	___fladd@f1+3,f,c
  6129  00160E  322D               	rrcf	___fladd@f1+2,f,c
  6130  001610  322C               	rrcf	___fladd@f1+1,f,c
  6131  001612  322B               	rrcf	___fladd@f1,f,c
  6132  001614  2A36               	incf	___fladd@exp1,f,c
  6133  001616                     l3013:
  6134  001616  5035               	movf	___fladd@exp2,w,c
  6135  001618  1836               	xorwf	___fladd@exp1,w,c
  6136  00161A  E01E               	bz	l634
  6137  00161C  D7F5               	goto	l3011
  6138  00161E                     l3015:
  6139  00161E  5036               	movf	___fladd@exp1,w,c
  6140  001620  5C35               	subwf	___fladd@exp2,w,c
  6141  001622  E21A               	bc	l634
  6142  001624                     l3017:
  6143  001624  FFFF               	dw	65535	; assembler added errata NOP
  6144  001626  90D8               	bcf	status,0,c
  6145  001628  362B               	rlcf	___fladd@f1,f,c
  6146  00162A  362C               	rlcf	___fladd@f1+1,f,c
  6147  00162C  362D               	rlcf	___fladd@f1+2,f,c
  6148  00162E  362E               	rlcf	___fladd@f1+3,f,c
  6149  001630  0636               	decf	___fladd@exp1,f,c
  6150  001632  5036               	movf	___fladd@exp1,w,c
  6151  001634  1835               	xorwf	___fladd@exp2,w,c
  6152  001636  E00D               	bz	l3025
  6153  001638  0634               	decf	___fladd@sign,f,c
  6154  00163A  C034  F033         	movff	___fladd@sign,??___fladd
  6155  00163E  0E07               	movlw	7
  6156  001640  1633               	andwf	??___fladd,f,c
  6157  001642  E007               	bz	l3025
  6158  001644  D7EF               	goto	l3017
  6159  001646                     l3023:
  6160  001646  90D8               	bcf	status,0,c
  6161  001648  3232               	rrcf	___fladd@f2+3,f,c
  6162  00164A  3231               	rrcf	___fladd@f2+2,f,c
  6163  00164C  3230               	rrcf	___fladd@f2+1,f,c
  6164  00164E  322F               	rrcf	___fladd@f2,f,c
  6165  001650  2A35               	incf	___fladd@exp2,f,c
  6166  001652                     l3025:
  6167  001652  5035               	movf	___fladd@exp2,w,c
  6168  001654  1836               	xorwf	___fladd@exp1,w,c
  6169  001656  E1F7               	bnz	l3023
  6170  001658                     l634:
  6171  001658  AE34               	btfss	___fladd@sign,7,c
  6172  00165A  D009               	goto	l3029
  6173  00165C  1E2B               	comf	___fladd@f1,f,c
  6174  00165E  1E2C               	comf	___fladd@f1+1,f,c
  6175  001660  1E2D               	comf	___fladd@f1+2,f,c
  6176  001662  1E2E               	comf	___fladd@f1+3,f,c
  6177  001664  2A2B               	incf	___fladd@f1,f,c
  6178  001666  0E00               	movlw	0
  6179  001668  222C               	addwfc	___fladd@f1+1,f,c
  6180  00166A  222D               	addwfc	___fladd@f1+2,f,c
  6181  00166C  222E               	addwfc	___fladd@f1+3,f,c
  6182  00166E                     l3029:
  6183  00166E  FFFF               	dw	65535	; assembler added errata NOP
  6184  001670  AC34               	btfss	___fladd@sign,6,c
  6185  001672  D009               	goto	l3033
  6186  001674  1E2F               	comf	___fladd@f2,f,c
  6187  001676  1E30               	comf	___fladd@f2+1,f,c
  6188  001678  1E31               	comf	___fladd@f2+2,f,c
  6189  00167A  1E32               	comf	___fladd@f2+3,f,c
  6190  00167C  2A2F               	incf	___fladd@f2,f,c
  6191  00167E  0E00               	movlw	0
  6192  001680  2230               	addwfc	___fladd@f2+1,f,c
  6193  001682  2231               	addwfc	___fladd@f2+2,f,c
  6194  001684  2232               	addwfc	___fladd@f2+3,f,c
  6195  001686                     l3033:
  6196  001686  FFFF               	dw	65535	; assembler added errata NOP
  6197  001688  6A34               	clrf	___fladd@sign,c
  6198  00168A  502B               	movf	___fladd@f1,w,c
  6199  00168C  262F               	addwf	___fladd@f2,f,c
  6200  00168E  502C               	movf	___fladd@f1+1,w,c
  6201  001690  2230               	addwfc	___fladd@f2+1,f,c
  6202  001692  502D               	movf	___fladd@f1+2,w,c
  6203  001694  2231               	addwfc	___fladd@f2+2,f,c
  6204  001696  502E               	movf	___fladd@f1+3,w,c
  6205  001698  2232               	addwfc	___fladd@f2+3,f,c
  6206  00169A  AE32               	btfss	___fladd@f2+3,7,c
  6207  00169C  D00B               	goto	l3041
  6208  00169E  1E2F               	comf	___fladd@f2,f,c
  6209  0016A0  1E30               	comf	___fladd@f2+1,f,c
  6210  0016A2  1E31               	comf	___fladd@f2+2,f,c
  6211  0016A4  1E32               	comf	___fladd@f2+3,f,c
  6212  0016A6  2A2F               	incf	___fladd@f2,f,c
  6213  0016A8  0E00               	movlw	0
  6214  0016AA  2230               	addwfc	___fladd@f2+1,f,c
  6215  0016AC  2231               	addwfc	___fladd@f2+2,f,c
  6216  0016AE  2232               	addwfc	___fladd@f2+3,f,c
  6217  0016B0  0E01               	movlw	1
  6218  0016B2  6E34               	movwf	___fladd@sign,c
  6219  0016B4                     l3041:
  6220  0016B4  FFFF               	dw	65535	; assembler added errata NOP
  6221  0016B6  C02F  F003         	movff	___fladd@f2,___flpack@arg
  6222  0016BA  C030  F004         	movff	___fladd@f2+1,___flpack@arg+1
  6223  0016BE  C031  F005         	movff	___fladd@f2+2,___flpack@arg+2
  6224  0016C2  C032  F006         	movff	___fladd@f2+3,___flpack@arg+3
  6225  0016C6  C036  F007         	movff	___fladd@exp1,___flpack@exp
  6226  0016CA  C034  F008         	movff	___fladd@sign,___flpack@sign
  6227  0016CE  EC70  F00E         	call	___flpack	;wreg free
  6228  0016D2  C003  F02B         	movff	?___flpack,?___fladd
  6229  0016D6  C004  F02C         	movff	?___flpack+1,?___fladd+1
  6230  0016DA  C005  F02D         	movff	?___flpack+2,?___fladd+2
  6231  0016DE  C006  F02E         	movff	?___flpack+3,?___fladd+3
  6232  0016E2                     l620:
  6233  0016E2  FFFF               	dw	65535	; assembler added errata NOP
  6234  0016E4  0012               	return		;funcret
  6235  0016E6  FFFF               	dw	65535	; errata NOP
  6236  0016E8                     __end_of___fladd:
  6237                           	opt stack 0
  6238                           tosu	equ	0xFFF
  6239                           tosh	equ	0xFFE
  6240                           tosl	equ	0xFFD
  6241                           pclath	equ	0xFFA
  6242                           tblptru	equ	0xFF8
  6243                           tblptrh	equ	0xFF7
  6244                           tblptrl	equ	0xFF6
  6245                           tablat	equ	0xFF5
  6246                           intcon	equ	0xFF2
  6247                           intcon2	equ	0xFF1
  6248                           postinc0	equ	0xFEE
  6249                           wreg	equ	0xFE8
  6250                           indf2	equ	0xFDF
  6251                           postinc2	equ	0xFDE
  6252                           postdec2	equ	0xFDD
  6253                           fsr2h	equ	0xFDA
  6254                           fsr2l	equ	0xFD9
  6255                           status	equ	0xFD8
  6256                           
  6257 ;; *************** function ___awtofl *****************
  6258 ;; Defined at:
  6259 ;;		line 31 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\awtofl.c"
  6260 ;; Parameters:    Size  Location     Type
  6261 ;;  c               2   12[COMRAM] int 
  6262 ;; Auto vars:     Size  Location     Type
  6263 ;;  f1              4    0        int 
  6264 ;;  sign            1   16[COMRAM] char 
  6265 ;; Return value:  Size  Location     Type
  6266 ;;                  4   12[COMRAM] char 
  6267 ;; Registers used:
  6268 ;;		wreg, status,2, status,0, cstack
  6269 ;; Tracked objects:
  6270 ;;		On entry : 0/0
  6271 ;;		On exit  : 0/0
  6272 ;;		Unchanged: 0/0
  6273 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6274 ;;      Params:         4       0       0       0       0       0       0
  6275 ;;      Locals:         1       0       0       0       0       0       0
  6276 ;;      Temps:          0       0       0       0       0       0       0
  6277 ;;      Totals:         5       0       0       0       0       0       0
  6278 ;;Total ram usage:        5 bytes
  6279 ;; Hardware stack levels used:    1
  6280 ;; Hardware stack levels required when called:    2
  6281 ;; This function calls:
  6282 ;;		___flpack
  6283 ;; This function is called by:
  6284 ;;		_format_double
  6285 ;;		_log
  6286 ;;		_exp
  6287 ;; This function uses a non-reentrant model
  6288 ;;
  6289                           
  6290                           	psect	text32
  6291  002476                     __ptext32:
  6292                           	opt stack 0
  6293  002476                     ___awtofl:
  6294                           	opt stack 24
  6295                           
  6296                           ;incstack = 0
  6297  002476  FFFF               	dw	65535
  6298  002478  6A11               	clrf	___awtofl@sign,c
  6299  00247A  AE0E               	btfss	___awtofl@c+1,7,c
  6300  00247C  D005               	goto	l3245
  6301  00247E  6C0D               	negf	___awtofl@c,c
  6302  002480  1E0E               	comf	___awtofl@c+1,f,c
  6303  002482  B0D8               	btfsc	status,0,c
  6304  002484  2A0E               	incf	___awtofl@c+1,f,c
  6305  002486  2A11               	incf	___awtofl@sign,f,c
  6306  002488                     l3245:
  6307  002488  FFFF               	dw	65535	; assembler added errata NOP
  6308  00248A  C00D  F003         	movff	___awtofl@c,___flpack@arg
  6309  00248E  C00E  F004         	movff	___awtofl@c+1,___flpack@arg+1
  6310  002492  6A05               	clrf	___flpack@arg+2,c
  6311  002494  6A06               	clrf	___flpack@arg+3,c
  6312  002496  0E96               	movlw	150
  6313  002498  6E07               	movwf	___flpack@exp,c
  6314  00249A  C011  F008         	movff	___awtofl@sign,___flpack@sign
  6315  00249E  EC70  F00E         	call	___flpack	;wreg free
  6316  0024A2  C003  F00D         	movff	?___flpack,?___awtofl
  6317  0024A6  C004  F00E         	movff	?___flpack+1,?___awtofl+1
  6318  0024AA  C005  F00F         	movff	?___flpack+2,?___awtofl+2
  6319  0024AE  C006  F010         	movff	?___flpack+3,?___awtofl+3
  6320  0024B2  0012               	return		;funcret
  6321  0024B4  FFFF               	dw	65535	; errata NOP
  6322  0024B6                     __end_of___awtofl:
  6323                           	opt stack 0
  6324                           tosu	equ	0xFFF
  6325                           tosh	equ	0xFFE
  6326                           tosl	equ	0xFFD
  6327                           pclath	equ	0xFFA
  6328                           tblptru	equ	0xFF8
  6329                           tblptrh	equ	0xFF7
  6330                           tblptrl	equ	0xFF6
  6331                           tablat	equ	0xFF5
  6332                           intcon	equ	0xFF2
  6333                           intcon2	equ	0xFF1
  6334                           postinc0	equ	0xFEE
  6335                           wreg	equ	0xFE8
  6336                           indf2	equ	0xFDF
  6337                           postinc2	equ	0xFDE
  6338                           postdec2	equ	0xFDD
  6339                           fsr2h	equ	0xFDA
  6340                           fsr2l	equ	0xFD9
  6341                           status	equ	0xFD8
  6342                           
  6343 ;; *************** function _indicator *****************
  6344 ;; Defined at:
  6345 ;;		line 469 in file "C:\Users\vboxuser\Desktop\lc-meter\src\print.c"
  6346 ;; Parameters:    Size  Location     Type
  6347 ;;  indicate        1    wreg     unsigned char 
  6348 ;; Auto vars:     Size  Location     Type
  6349 ;;  indicate        1    0[COMRAM] unsigned char 
  6350 ;; Return value:  Size  Location     Type
  6351 ;;		None               void
  6352 ;; Registers used:
  6353 ;;		wreg
  6354 ;; Tracked objects:
  6355 ;;		On entry : E/0
  6356 ;;		On exit  : E/0
  6357 ;;		Unchanged: E/0
  6358 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6359 ;;      Params:         0       0       0       0       0       0       0
  6360 ;;      Locals:         0       0       0       0       0       0       0
  6361 ;;      Temps:          0       0       0       0       0       0       0
  6362 ;;      Totals:         0       0       0       0       0       0       0
  6363 ;;Total ram usage:        0 bytes
  6364 ;; Hardware stack levels used:    1
  6365 ;; Hardware stack levels required when called:    1
  6366 ;; This function calls:
  6367 ;;		Nothing
  6368 ;; This function is called by:
  6369 ;;		_main
  6370 ;; This function uses a non-reentrant model
  6371 ;;
  6372                           
  6373                           	psect	text33
  6374  00264E                     __ptext33:
  6375                           	opt stack 0
  6376  00264E                     _indicator:
  6377                           	opt stack 29
  6378                           
  6379                           ;incstack = 0
  6380  00264E  FFFF               	dw	65535
  6381  002650  0012               	return		;funcret
  6382  002652  FFFF               	dw	65535	; errata NOP
  6383  002654                     __end_of_indicator:
  6384                           	opt stack 0
  6385                           tosu	equ	0xFFF
  6386                           tosh	equ	0xFFE
  6387                           tosl	equ	0xFFD
  6388                           pclath	equ	0xFFA
  6389                           tblptru	equ	0xFF8
  6390                           tblptrh	equ	0xFF7
  6391                           tblptrl	equ	0xFF6
  6392                           tablat	equ	0xFF5
  6393                           intcon	equ	0xFF2
  6394                           intcon2	equ	0xFF1
  6395                           postinc0	equ	0xFEE
  6396                           wreg	equ	0xFE8
  6397                           indf2	equ	0xFDF
  6398                           postinc2	equ	0xFDE
  6399                           postdec2	equ	0xFDD
  6400                           fsr2h	equ	0xFDA
  6401                           fsr2l	equ	0xFD9
  6402                           status	equ	0xFD8
  6403                           
  6404 ;; *************** function _calibrate *****************
  6405 ;; Defined at:
  6406 ;;		line 346 in file "C:\Users\vboxuser\Desktop\lc-meter\src\LC-meter.c"
  6407 ;; Parameters:    Size  Location     Type
  6408 ;;		None
  6409 ;; Auto vars:     Size  Location     Type
  6410 ;;  i               1    0        unsigned char 
  6411 ;; Return value:  Size  Location     Type
  6412 ;;		None               void
  6413 ;; Registers used:
  6414 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6415 ;; Tracked objects:
  6416 ;;		On entry : F/0
  6417 ;;		On exit  : 0/0
  6418 ;;		Unchanged: 0/0
  6419 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6420 ;;      Params:         0       0       0       0       0       0       0
  6421 ;;      Locals:         0       0       0       0       0       0       0
  6422 ;;      Temps:          0       0       0       0       0       0       0
  6423 ;;      Totals:         0       0       0       0       0       0       0
  6424 ;;Total ram usage:        0 bytes
  6425 ;; Hardware stack levels used:    1
  6426 ;; Hardware stack levels required when called:    3
  6427 ;; This function calls:
  6428 ;;		___lwtofl
  6429 ;;		_delay10ms
  6430 ;;		_measure_freq
  6431 ;;		_ser_puts
  6432 ;; This function is called by:
  6433 ;;		_main
  6434 ;; This function uses a non-reentrant model
  6435 ;;
  6436                           
  6437                           	psect	text34
  6438  001F14                     __ptext34:
  6439                           	opt stack 0
  6440  001F14                     _calibrate:
  6441                           	opt stack 27
  6442                           
  6443                           ;incstack = 0
  6444  001F14  FFFF               	dw	65535
  6445                           
  6446                           ; BSR set to: 0
  6447                           ;LC-meter.c: 347: unsigned char i;
  6448                           ;LC-meter.c: 360: LATC5 = 0;
  6449  001F16  9A8B               	bcf	3979,5,c	;volatile
  6450                           
  6451                           ; BSR set to: 0
  6452                           ;LC-meter.c: 362: F1 = (double)measure_freq();
  6453  001F18  EC76  F010         	call	_measure_freq	;wreg free
  6454  001F1C  C003  F00D         	movff	?_measure_freq,___lwtofl@c
  6455  001F20  C004  F00E         	movff	?_measure_freq+1,___lwtofl@c+1
  6456  001F24  ECC4  F012         	call	___lwtofl	;wreg free
  6457  001F28  C00D  F0B6         	movff	?___lwtofl,_F1
  6458  001F2C  C00E  F0B7         	movff	?___lwtofl+1,_F1+1
  6459  001F30  C00F  F0B8         	movff	?___lwtofl+2,_F1+2
  6460  001F34  C010  F0B9         	movff	?___lwtofl+3,_F1+3
  6461                           
  6462                           ;LC-meter.c: 363: delay10ms(50);
  6463  001F38  6A0A               	clrf	delay10ms@period_10ms+1,c
  6464  001F3A  0E32               	movlw	50
  6465  001F3C  6E09               	movwf	delay10ms@period_10ms,c
  6466  001F3E  ECED  F010         	call	_delay10ms	;wreg free
  6467                           
  6468                           ;LC-meter.c: 365: F1 = (double)measure_freq();
  6469  001F42  EC76  F010         	call	_measure_freq	;wreg free
  6470  001F46  C003  F00D         	movff	?_measure_freq,___lwtofl@c
  6471  001F4A  C004  F00E         	movff	?_measure_freq+1,___lwtofl@c+1
  6472  001F4E  ECC4  F012         	call	___lwtofl	;wreg free
  6473  001F52  C00D  F0B6         	movff	?___lwtofl,_F1
  6474  001F56  C00E  F0B7         	movff	?___lwtofl+1,_F1+1
  6475  001F5A  C00F  F0B8         	movff	?___lwtofl+2,_F1+2
  6476  001F5E  C010  F0B9         	movff	?___lwtofl+3,_F1+3
  6477                           
  6478                           ;LC-meter.c: 366: LATC5 = 1;
  6479  001F62  8A8B               	bsf	3979,5,c	;volatile
  6480                           
  6481                           ;LC-meter.c: 368: F2 = (double)measure_freq();
  6482  001F64  EC76  F010         	call	_measure_freq	;wreg free
  6483  001F68  C003  F00D         	movff	?_measure_freq,___lwtofl@c
  6484  001F6C  C004  F00E         	movff	?_measure_freq+1,___lwtofl@c+1
  6485  001F70  ECC4  F012         	call	___lwtofl	;wreg free
  6486  001F74  C00D  F0A0         	movff	?___lwtofl,_F2
  6487  001F78  C00E  F0A1         	movff	?___lwtofl+1,_F2+1
  6488  001F7C  C00F  F0A2         	movff	?___lwtofl+2,_F2+2
  6489  001F80  C010  F0A3         	movff	?___lwtofl+3,_F2+3
  6490                           
  6491                           ;LC-meter.c: 369: delay10ms(50);
  6492  001F84  6A0A               	clrf	delay10ms@period_10ms+1,c
  6493  001F86  0E32               	movlw	50
  6494  001F88  6E09               	movwf	delay10ms@period_10ms,c
  6495  001F8A  ECED  F010         	call	_delay10ms	;wreg free
  6496                           
  6497                           ;LC-meter.c: 371: F2 = (double)measure_freq();
  6498  001F8E  EC76  F010         	call	_measure_freq	;wreg free
  6499  001F92  C003  F00D         	movff	?_measure_freq,___lwtofl@c
  6500  001F96  C004  F00E         	movff	?_measure_freq+1,___lwtofl@c+1
  6501  001F9A  ECC4  F012         	call	___lwtofl	;wreg free
  6502  001F9E  C00D  F0A0         	movff	?___lwtofl,_F2
  6503  001FA2  C00E  F0A1         	movff	?___lwtofl+1,_F2+1
  6504  001FA6  C00F  F0A2         	movff	?___lwtofl+2,_F2+2
  6505  001FAA  C010  F0A3         	movff	?___lwtofl+3,_F2+3
  6506                           
  6507                           ;LC-meter.c: 372: LATC5 = 0;
  6508  001FAE  9A8B               	bcf	3979,5,c	;volatile
  6509                           
  6510                           ;LC-meter.c: 384: ser_puts("\r\n");
  6511  001FB0  0E58               	movlw	low (STR_1+3)
  6512  001FB2  6E04               	movwf	ser_puts@s,c
  6513  001FB4  0E06               	movlw	high (STR_1+3)
  6514  001FB6  6E05               	movwf	ser_puts@s+1,c
  6515  001FB8  EC77  F012         	call	_ser_puts	;wreg free
  6516  001FBC  0012               	return		;funcret
  6517  001FBE  FFFF               	dw	65535	; errata NOP
  6518  001FC0                     __end_of_calibrate:
  6519                           	opt stack 0
  6520                           tosu	equ	0xFFF
  6521                           tosh	equ	0xFFE
  6522                           tosl	equ	0xFFD
  6523                           pclath	equ	0xFFA
  6524                           tblptru	equ	0xFF8
  6525                           tblptrh	equ	0xFF7
  6526                           tblptrl	equ	0xFF6
  6527                           tablat	equ	0xFF5
  6528                           intcon	equ	0xFF2
  6529                           intcon2	equ	0xFF1
  6530                           postinc0	equ	0xFEE
  6531                           wreg	equ	0xFE8
  6532                           indf2	equ	0xFDF
  6533                           postinc2	equ	0xFDE
  6534                           postdec2	equ	0xFDD
  6535                           fsr2h	equ	0xFDA
  6536                           fsr2l	equ	0xFD9
  6537                           status	equ	0xFD8
  6538                           
  6539 ;; *************** function _ser_puts *****************
  6540 ;; Defined at:
  6541 ;;		line 92 in file "C:\Users\vboxuser\Desktop\lc-meter\lib\ser.c"
  6542 ;; Parameters:    Size  Location     Type
  6543 ;;  s               2    3[COMRAM] PTR const char 
  6544 ;;		 -> STR_11(3), STR_10(5), STR_9(3), STR_8(8), 
  6545 ;;		 -> STR_7(6), STR_6(6), STR_5(6), STR_4(5), 
  6546 ;;		 -> STR_3(3), STR_2(3), STR_1(6), 
  6547 ;; Auto vars:     Size  Location     Type
  6548 ;;		None
  6549 ;; Return value:  Size  Location     Type
  6550 ;;		None               void
  6551 ;; Registers used:
  6552 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6553 ;; Tracked objects:
  6554 ;;		On entry : 0/0
  6555 ;;		On exit  : 0/0
  6556 ;;		Unchanged: 0/0
  6557 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6558 ;;      Params:         2       0       0       0       0       0       0
  6559 ;;      Locals:         0       0       0       0       0       0       0
  6560 ;;      Temps:          0       0       0       0       0       0       0
  6561 ;;      Totals:         2       0       0       0       0       0       0
  6562 ;;Total ram usage:        2 bytes
  6563 ;; Hardware stack levels used:    1
  6564 ;; Hardware stack levels required when called:    2
  6565 ;; This function calls:
  6566 ;;		_ser_putch
  6567 ;; This function is called by:
  6568 ;;		_main
  6569 ;;		_calibrate
  6570 ;;		_measure_capacitance
  6571 ;; This function uses a non-reentrant model
  6572 ;;
  6573                           
  6574                           	psect	text35
  6575  0024EE                     __ptext35:
  6576                           	opt stack 0
  6577  0024EE                     _ser_puts:
  6578                           	opt stack 28
  6579                           
  6580                           ;incstack = 0
  6581  0024EE  FFFF               	dw	65535
  6582                           
  6583                           ;ser.c: 93: while(*s) ser_putch(*s++);
  6584  0024F0  D00C               	goto	l3483
  6585  0024F2                     l3479:
  6586  0024F2  FFFF               	dw	65535	; assembler added errata NOP
  6587  0024F4  C004  FFF6         	movff	ser_puts@s,tblptrl
  6588  0024F8  C005  FFF7         	movff	ser_puts@s+1,tblptrh
  6589  0024FC                     	if	0	;tblptru may be non-zero
  6590  0024FC                     	endif
  6591  0024FC                     	if	0	;tblptru may be non-zero
  6592  0024FC                     	endif
  6593  0024FC  0008               	tblrd		*
  6594  0024FE  FFFF               	dw	65535	; errata NOP
  6595  002500  50F5               	movf	tablat,w,c
  6596  002502  ECDB  F012         	call	_ser_putch
  6597  002506  4A04               	infsnz	ser_puts@s,f,c
  6598  002508  2A05               	incf	ser_puts@s+1,f,c
  6599  00250A                     l3483:
  6600  00250A  FFFF               	dw	65535	; assembler added errata NOP
  6601  00250C  C004  FFF6         	movff	ser_puts@s,tblptrl
  6602  002510  C005  FFF7         	movff	ser_puts@s+1,tblptrh
  6603  002514                     	if	0	;tblptru may be non-zero
  6604  002514                     	endif
  6605  002514                     	if	0	;tblptru may be non-zero
  6606  002514                     	endif
  6607  002514  0008               	tblrd		*
  6608  002516  FFFF               	dw	65535	; errata NOP
  6609  002518  50F5               	movf	tablat,w,c
  6610  00251A  B4D8               	btfsc	status,2,c
  6611  00251C  0012               	return		;funcret
  6612  00251E  FFFF               	dw	65535	; assembler added errata NOP
  6613  002520  D7E8               	goto	l3479
  6614  002522  FFFF               	dw	65535	; errata NOP
  6615  002524                     __end_of_ser_puts:
  6616                           	opt stack 0
  6617                           tosu	equ	0xFFF
  6618                           tosh	equ	0xFFE
  6619                           tosl	equ	0xFFD
  6620                           pclath	equ	0xFFA
  6621                           tblptru	equ	0xFF8
  6622                           tblptrh	equ	0xFF7
  6623                           tblptrl	equ	0xFF6
  6624                           tablat	equ	0xFF5
  6625                           intcon	equ	0xFF2
  6626                           intcon2	equ	0xFF1
  6627                           postinc0	equ	0xFEE
  6628                           wreg	equ	0xFE8
  6629                           indf2	equ	0xFDF
  6630                           postinc2	equ	0xFDE
  6631                           postdec2	equ	0xFDD
  6632                           fsr2h	equ	0xFDA
  6633                           fsr2l	equ	0xFD9
  6634                           status	equ	0xFD8
  6635                           
  6636 ;; *************** function _measure_freq *****************
  6637 ;; Defined at:
  6638 ;;		line 299 in file "C:\Users\vboxuser\Desktop\lc-meter\src\LC-meter.c"
  6639 ;; Parameters:    Size  Location     Type
  6640 ;;		None
  6641 ;; Auto vars:     Size  Location     Type
  6642 ;;  i               1    7[COMRAM] char 
  6643 ;;  count           2    8[COMRAM] unsigned short 
  6644 ;;  prev            1    6[COMRAM] unsigned char 
  6645 ;; Return value:  Size  Location     Type
  6646 ;;                  2    2[COMRAM] unsigned short 
  6647 ;; Registers used:
  6648 ;;		wreg, status,2, status,0
  6649 ;; Tracked objects:
  6650 ;;		On entry : 0/0
  6651 ;;		On exit  : 0/0
  6652 ;;		Unchanged: 0/0
  6653 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6654 ;;      Params:         2       0       0       0       0       0       0
  6655 ;;      Locals:         4       0       0       0       0       0       0
  6656 ;;      Temps:          2       0       0       0       0       0       0
  6657 ;;      Totals:         8       0       0       0       0       0       0
  6658 ;;Total ram usage:        8 bytes
  6659 ;; Hardware stack levels used:    1
  6660 ;; Hardware stack levels required when called:    1
  6661 ;; This function calls:
  6662 ;;		Nothing
  6663 ;; This function is called by:
  6664 ;;		_calibrate
  6665 ;;		_measure_capacitance
  6666 ;;		_measure_inductance
  6667 ;; This function uses a non-reentrant model
  6668 ;;
  6669                           
  6670                           	psect	text36
  6671  0020EC                     __ptext36:
  6672                           	opt stack 0
  6673  0020EC                     _measure_freq:
  6674                           	opt stack 28
  6675                           
  6676                           ;incstack = 0
  6677  0020EC  FFFF               	dw	65535
  6678                           
  6679                           ;LC-meter.c: 300: unsigned char prev;
  6680                           ;LC-meter.c: 301: unsigned short int count;
  6681                           ;LC-meter.c: 303: TMR0IF = 0;
  6682  0020EE  94F2               	bcf	intcon,2,c	;volatile
  6683                           
  6684                           ;LC-meter.c: 305: TRISA &= ~0b00010000;
  6685  0020F0  9892               	bcf	3986,4,c	;volatile
  6686                           
  6687                           ;LC-meter.c: 308: _delay((unsigned long)((20)*(20000000/4000.0)));
  6688  0020F2  0E62               	movlw	98
  6689  0020F4  6E05               	movwf	??_measure_freq& (0+255),c
  6690  0020F6  0E76               	movlw	118
  6691  0020F8                     u3637:
  6692  0020F8  FFFF               	dw	65535	; errata NOP
  6693  0020FA  2EE8               	decfsz	wreg,f,c
  6694  0020FC  D7FD               	goto	u3637
  6695  0020FE  2E05               	decfsz	??_measure_freq& (0+255),f,c
  6696  002100  D7FB               	goto	u3637
  6697  002102  D000               	nop2	
  6698                           
  6699                           ;LC-meter.c: 310: TMR0 = 0x00;
  6700  002104  6AD6               	clrf	4054,c	;volatile
  6701  002106  6AD7               	clrf	4055,c	;volatile
  6702                           
  6703                           ;LC-meter.c: 312: for(char i = 0; i < 10; i++) _delay((unsigned long)((10)*(20000000/400
      +                          0.0)));
  6704  002108  6A08               	clrf	measure_freq@i,c
  6705  00210A                     l3497:
  6706  00210A  0E31               	movlw	49
  6707  00210C  6E05               	movwf	??_measure_freq& (0+255),c
  6708  00210E  0EBB               	movlw	187
  6709  002110                     u3647:
  6710  002110  FFFF               	dw	65535	; errata NOP
  6711  002112  2EE8               	decfsz	wreg,f,c
  6712  002114  D7FD               	goto	u3647
  6713  002116  2E05               	decfsz	??_measure_freq& (0+255),f,c
  6714  002118  D7FB               	goto	u3647
  6715  00211A  2A08               	incf	measure_freq@i,f,c
  6716  00211C  5008               	movf	measure_freq@i,w,c
  6717  00211E  0A80               	xorlw	128
  6718  002120  0F76               	addlw	-138
  6719  002122  E3F3               	bnc	l3497
  6720                           
  6721                           ;LC-meter.c: 314: TRISA |= 0b00010000;
  6722  002124  8892               	bsf	3986,4,c	;volatile
  6723                           
  6724                           ;LC-meter.c: 316: prev = TMR0;
  6725  002126  CFD6 F007          	movff	4054,measure_freq@prev	;volatile
  6726                           
  6727                           ;LC-meter.c: 317: count = 0;
  6728  00212A  6A09               	clrf	measure_freq@count,c
  6729  00212C  6A0A               	clrf	measure_freq@count+1,c
  6730  00212E                     l3507:
  6731                           
  6732                           ;LC-meter.c: 321: T0SE = 1;
  6733  00212E  88D5               	bsf	4053,4,c	;volatile
  6734                           
  6735                           ;LC-meter.c: 322: __nop();
  6736  002130  F000               	nop	
  6737                           
  6738                           ;LC-meter.c: 323: __nop();
  6739  002132  F000               	nop	
  6740                           
  6741                           ;LC-meter.c: 325: T0SE = 0;
  6742  002134  98D5               	bcf	4053,4,c	;volatile
  6743                           
  6744                           ;LC-meter.c: 326: __nop();
  6745  002136  F000               	nop	
  6746                           
  6747                           ;LC-meter.c: 327: __nop();
  6748  002138  F000               	nop	
  6749                           
  6750                           ;LC-meter.c: 328: count++;
  6751  00213A  4A09               	infsnz	measure_freq@count,f,c
  6752  00213C  2A0A               	incf	measure_freq@count+1,f,c
  6753                           
  6754                           ;LC-meter.c: 329: } while(prev == TMR0 && count <= 255);
  6755  00213E  5007               	movf	measure_freq@prev,w,c
  6756  002140  18D6               	xorwf	4054,w,c	;volatile
  6757  002142  10D7               	iorwf	4055,w,c	;volatile
  6758  002144  E102               	bnz	l3523
  6759  002146  040A               	decf	measure_freq@count+1,w,c
  6760  002148  E3F2               	bnc	l3507
  6761  00214A                     l3523:
  6762                           
  6763                           ;LC-meter.c: 332: count = ((prev << 8) + (256 - count));
  6764  00214A  5007               	movf	measure_freq@prev,w,c
  6765  00214C  6E06               	movwf	(??_measure_freq+1)& (0+255),c
  6766  00214E  6A05               	clrf	??_measure_freq& (0+255),c
  6767  002150  5009               	movf	measure_freq@count,w,c
  6768  002152  5E05               	subwf	??_measure_freq,f,c
  6769  002154  500A               	movf	measure_freq@count+1,w,c
  6770  002156  5A06               	subwfb	??_measure_freq+1,f,c
  6771  002158  0E00               	movlw	0
  6772  00215A  2405               	addwf	??_measure_freq,w,c
  6773  00215C  6E09               	movwf	measure_freq@count,c
  6774  00215E  0E01               	movlw	1
  6775  002160  2006               	addwfc	??_measure_freq+1,w,c
  6776  002162  6E0A               	movwf	measure_freq@count+1,c
  6777                           
  6778                           ;LC-meter.c: 339: return count;
  6779  002164  C009  F003         	movff	measure_freq@count,?_measure_freq
  6780  002168  C00A  F004         	movff	measure_freq@count+1,?_measure_freq+1
  6781  00216C  0012               	return		;funcret
  6782  00216E  FFFF               	dw	65535	; errata NOP
  6783  002170                     __end_of_measure_freq:
  6784                           	opt stack 0
  6785                           tosu	equ	0xFFF
  6786                           tosh	equ	0xFFE
  6787                           tosl	equ	0xFFD
  6788                           pclath	equ	0xFFA
  6789                           tblptru	equ	0xFF8
  6790                           tblptrh	equ	0xFF7
  6791                           tblptrl	equ	0xFF6
  6792                           tablat	equ	0xFF5
  6793                           intcon	equ	0xFF2
  6794                           intcon2	equ	0xFF1
  6795                           postinc0	equ	0xFEE
  6796                           wreg	equ	0xFE8
  6797                           indf2	equ	0xFDF
  6798                           postinc2	equ	0xFDE
  6799                           postdec2	equ	0xFDD
  6800                           fsr2h	equ	0xFDA
  6801                           fsr2l	equ	0xFD9
  6802                           status	equ	0xFD8
  6803                           
  6804 ;; *************** function _delay10ms *****************
  6805 ;; Defined at:
  6806 ;;		line 532 in file "C:\Users\vboxuser\Desktop\lc-meter\src\LC-meter.c"
  6807 ;; Parameters:    Size  Location     Type
  6808 ;;  period_10ms     2    8[COMRAM] unsigned short 
  6809 ;; Auto vars:     Size  Location     Type
  6810 ;;  ms              4   10[COMRAM] unsigned long 
  6811 ;;  run             1   14[COMRAM] enum E2497
  6812 ;; Return value:  Size  Location     Type
  6813 ;;		None               void
  6814 ;; Registers used:
  6815 ;;		wreg, status,2, status,0, cstack
  6816 ;; Tracked objects:
  6817 ;;		On entry : 0/0
  6818 ;;		On exit  : F/0
  6819 ;;		Unchanged: 0/0
  6820 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6821 ;;      Params:         2       0       0       0       0       0       0
  6822 ;;      Locals:         5       0       0       0       0       0       0
  6823 ;;      Temps:          0       0       0       0       0       0       0
  6824 ;;      Totals:         7       0       0       0       0       0       0
  6825 ;;Total ram usage:        7 bytes
  6826 ;; Hardware stack levels used:    1
  6827 ;; Hardware stack levels required when called:    2
  6828 ;; This function calls:
  6829 ;;		___wmul
  6830 ;; This function is called by:
  6831 ;;		_main
  6832 ;;		_calibrate
  6833 ;; This function uses a non-reentrant model
  6834 ;;
  6835                           
  6836                           	psect	text37
  6837  0021DA                     __ptext37:
  6838                           	opt stack 0
  6839  0021DA                     _delay10ms:
  6840                           	opt stack 28
  6841                           
  6842                           ;incstack = 0
  6843  0021DA  FFFF               	dw	65535
  6844                           
  6845                           ;LC-meter.c: 536: unsigned long int ms;
  6846                           ;LC-meter.c: 537: BOOL run = 1;
  6847  0021DC  0E01               	movlw	1
  6848  0021DE  6E0F               	movwf	delay10ms@run,c
  6849                           
  6850                           ;LC-meter.c: 539: GIE = 0, ms = msecs, GIE = 1;
  6851  0021E0  9EF2               	bcf	intcon,7,c	;volatile
  6852  0021E2  C0A8  F00B         	movff	_msecs,delay10ms@ms	;volatile
  6853  0021E6  C0A9  F00C         	movff	_msecs+1,delay10ms@ms+1	;volatile
  6854  0021EA  C0AA  F00D         	movff	_msecs+2,delay10ms@ms+2	;volatile
  6855  0021EE  C0AB  F00E         	movff	_msecs+3,delay10ms@ms+3	;volatile
  6856  0021F2  8EF2               	bsf	intcon,7,c	;volatile
  6857                           
  6858                           ;LC-meter.c: 544: ms += period_10ms * 10;
  6859  0021F4  C009  F003         	movff	delay10ms@period_10ms,___wmul@multiplier
  6860  0021F8  C00A  F004         	movff	delay10ms@period_10ms+1,___wmul@multiplier+1
  6861  0021FC  6A06               	clrf	___wmul@multiplicand+1,c
  6862  0021FE  0E0A               	movlw	10
  6863  002200  6E05               	movwf	___wmul@multiplicand,c
  6864  002202  ECAB  F012         	call	___wmul	;wreg free
  6865  002206  5003               	movf	?___wmul,w,c
  6866  002208  260B               	addwf	delay10ms@ms,f,c
  6867  00220A  5004               	movf	?___wmul+1,w,c
  6868  00220C  220C               	addwfc	delay10ms@ms+1,f,c
  6869  00220E  0E00               	movlw	0
  6870  002210  220D               	addwfc	delay10ms@ms+2,f,c
  6871  002212  220E               	addwfc	delay10ms@ms+3,f,c
  6872  002214                     l2565:
  6873  002214  FFFF               	dw	65535	; assembler added errata NOP
  6874                           
  6875                           ;LC-meter.c: 548: GIE = 0;
  6876  002216  9EF2               	bcf	intcon,7,c	;volatile
  6877                           
  6878                           ;LC-meter.c: 549: if(ms <= msecs)
  6879  002218  500B               	movf	delay10ms@ms,w,c
  6880  00221A  0100               	movlb	0	; () banked
  6881  00221C  5DA8               	subwf	_msecs& (0+255),w,b	;volatile
  6882  00221E  500C               	movf	delay10ms@ms+1,w,c
  6883  002220  59A9               	subwfb	(_msecs+1)& (0+255),w,b	;volatile
  6884  002222  500D               	movf	delay10ms@ms+2,w,c
  6885  002224  59AA               	subwfb	(_msecs+2)& (0+255),w,b	;volatile
  6886  002226  500E               	movf	delay10ms@ms+3,w,c
  6887  002228  59AB               	subwfb	(_msecs+3)& (0+255),w,b	;volatile
  6888  00222A  B0D8               	btfsc	status,0,c
  6889                           
  6890                           ; BSR set to: 0
  6891                           ;LC-meter.c: 550: run = 0;
  6892  00222C  6A0F               	clrf	delay10ms@run,c
  6893                           
  6894                           ; BSR set to: 0
  6895                           ;LC-meter.c: 551: GIE = 1;
  6896  00222E  8EF2               	bsf	intcon,7,c	;volatile
  6897                           
  6898                           ; BSR set to: 0
  6899                           ;LC-meter.c: 552: } while(run);
  6900  002230  500F               	movf	delay10ms@run,w,c
  6901  002232  B4D8               	btfsc	status,2,c
  6902                           
  6903                           ; BSR set to: 0
  6904  002234  0012               	return		;funcret
  6905  002236  FFFF               	dw	65535	; assembler added errata NOP
  6906  002238  D7ED               	goto	l2565
  6907  00223A  FFFF               	dw	65535	; errata NOP
  6908  00223C                     __end_of_delay10ms:
  6909                           	opt stack 0
  6910                           tosu	equ	0xFFF
  6911                           tosh	equ	0xFFE
  6912                           tosl	equ	0xFFD
  6913                           pclath	equ	0xFFA
  6914                           tblptru	equ	0xFF8
  6915                           tblptrh	equ	0xFF7
  6916                           tblptrl	equ	0xFF6
  6917                           tablat	equ	0xFF5
  6918                           intcon	equ	0xFF2
  6919                           intcon2	equ	0xFF1
  6920                           postinc0	equ	0xFEE
  6921                           wreg	equ	0xFE8
  6922                           indf2	equ	0xFDF
  6923                           postinc2	equ	0xFDE
  6924                           postdec2	equ	0xFDD
  6925                           fsr2h	equ	0xFDA
  6926                           fsr2l	equ	0xFD9
  6927                           status	equ	0xFD8
  6928                           
  6929 ;; *************** function ___wmul *****************
  6930 ;; Defined at:
  6931 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\Umul16.c"
  6932 ;; Parameters:    Size  Location     Type
  6933 ;;  multiplier      2    2[COMRAM] unsigned int 
  6934 ;;  multiplicand    2    4[COMRAM] unsigned int 
  6935 ;; Auto vars:     Size  Location     Type
  6936 ;;  product         2    6[COMRAM] unsigned int 
  6937 ;; Return value:  Size  Location     Type
  6938 ;;                  2    2[COMRAM] unsigned int 
  6939 ;; Registers used:
  6940 ;;		wreg, status,2, status,0
  6941 ;; Tracked objects:
  6942 ;;		On entry : 0/0
  6943 ;;		On exit  : 0/0
  6944 ;;		Unchanged: 0/0
  6945 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6946 ;;      Params:         4       0       0       0       0       0       0
  6947 ;;      Locals:         2       0       0       0       0       0       0
  6948 ;;      Temps:          0       0       0       0       0       0       0
  6949 ;;      Totals:         6       0       0       0       0       0       0
  6950 ;;Total ram usage:        6 bytes
  6951 ;; Hardware stack levels used:    1
  6952 ;; Hardware stack levels required when called:    1
  6953 ;; This function calls:
  6954 ;;		Nothing
  6955 ;; This function is called by:
  6956 ;;		_delay10ms
  6957 ;; This function uses a non-reentrant model
  6958 ;;
  6959                           
  6960                           	psect	text38
  6961  002556                     __ptext38:
  6962                           	opt stack 0
  6963  002556                     ___wmul:
  6964                           	opt stack 28
  6965                           
  6966                           ; BSR set to: 0
  6967                           ;incstack = 0
  6968  002556  FFFF               	dw	65535
  6969  002558  6A07               	clrf	___wmul@product,c
  6970  00255A  6A08               	clrf	___wmul@product+1,c
  6971  00255C                     l372:
  6972  00255C  A003               	btfss	___wmul@multiplier,0,c
  6973  00255E  D004               	goto	l2551
  6974  002560  5005               	movf	___wmul@multiplicand,w,c
  6975  002562  2607               	addwf	___wmul@product,f,c
  6976  002564  5006               	movf	___wmul@multiplicand+1,w,c
  6977  002566  2208               	addwfc	___wmul@product+1,f,c
  6978  002568                     l2551:
  6979  002568  FFFF               	dw	65535	; assembler added errata NOP
  6980  00256A  90D8               	bcf	status,0,c
  6981  00256C  3605               	rlcf	___wmul@multiplicand,f,c
  6982  00256E  3606               	rlcf	___wmul@multiplicand+1,f,c
  6983  002570  90D8               	bcf	status,0,c
  6984  002572  3204               	rrcf	___wmul@multiplier+1,f,c
  6985  002574  3203               	rrcf	___wmul@multiplier,f,c
  6986  002576  5003               	movf	___wmul@multiplier,w,c
  6987  002578  1004               	iorwf	___wmul@multiplier+1,w,c
  6988  00257A  E1F0               	bnz	l372
  6989  00257C  C007  F003         	movff	___wmul@product,?___wmul
  6990  002580  C008  F004         	movff	___wmul@product+1,?___wmul+1
  6991  002584  0012               	return		;funcret
  6992  002586  FFFF               	dw	65535	; errata NOP
  6993  002588                     __end_of___wmul:
  6994                           	opt stack 0
  6995                           tosu	equ	0xFFF
  6996                           tosh	equ	0xFFE
  6997                           tosl	equ	0xFFD
  6998                           pclath	equ	0xFFA
  6999                           tblptru	equ	0xFF8
  7000                           tblptrh	equ	0xFF7
  7001                           tblptrl	equ	0xFF6
  7002                           tablat	equ	0xFF5
  7003                           intcon	equ	0xFF2
  7004                           intcon2	equ	0xFF1
  7005                           postinc0	equ	0xFEE
  7006                           wreg	equ	0xFE8
  7007                           indf2	equ	0xFDF
  7008                           postinc2	equ	0xFDE
  7009                           postdec2	equ	0xFDD
  7010                           fsr2h	equ	0xFDA
  7011                           fsr2l	equ	0xFD9
  7012                           status	equ	0xFD8
  7013                           
  7014 ;; *************** function ___lwtofl *****************
  7015 ;; Defined at:
  7016 ;;		line 28 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lwtofl.c"
  7017 ;; Parameters:    Size  Location     Type
  7018 ;;  c               2   12[COMRAM] unsigned int 
  7019 ;; Auto vars:     Size  Location     Type
  7020 ;;		None
  7021 ;; Return value:  Size  Location     Type
  7022 ;;                  4   12[COMRAM] unsigned int 
  7023 ;; Registers used:
  7024 ;;		wreg, status,2, status,0, cstack
  7025 ;; Tracked objects:
  7026 ;;		On entry : 0/0
  7027 ;;		On exit  : 0/0
  7028 ;;		Unchanged: 0/0
  7029 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7030 ;;      Params:         4       0       0       0       0       0       0
  7031 ;;      Locals:         0       0       0       0       0       0       0
  7032 ;;      Temps:          0       0       0       0       0       0       0
  7033 ;;      Totals:         4       0       0       0       0       0       0
  7034 ;;Total ram usage:        4 bytes
  7035 ;; Hardware stack levels used:    1
  7036 ;; Hardware stack levels required when called:    2
  7037 ;; This function calls:
  7038 ;;		___flpack
  7039 ;; This function is called by:
  7040 ;;		_calibrate
  7041 ;;		_measure_capacitance
  7042 ;;		_measure_inductance
  7043 ;; This function uses a non-reentrant model
  7044 ;;
  7045                           
  7046                           	psect	text39
  7047  002588                     __ptext39:
  7048                           	opt stack 0
  7049  002588                     ___lwtofl:
  7050                           	opt stack 27
  7051                           
  7052                           ;incstack = 0
  7053  002588  FFFF               	dw	65535
  7054  00258A  C00D  F003         	movff	___lwtofl@c,___flpack@arg
  7055  00258E  C00E  F004         	movff	___lwtofl@c+1,___flpack@arg+1
  7056  002592  6A05               	clrf	___flpack@arg+2,c
  7057  002594  6A06               	clrf	___flpack@arg+3,c
  7058  002596  0E96               	movlw	150
  7059  002598  6E07               	movwf	___flpack@exp,c
  7060  00259A  0E00               	movlw	0
  7061  00259C  6E08               	movwf	___flpack@sign,c
  7062  00259E  EC70  F00E         	call	___flpack	;wreg free
  7063  0025A2  C003  F00D         	movff	?___flpack,?___lwtofl
  7064  0025A6  C004  F00E         	movff	?___flpack+1,?___lwtofl+1
  7065  0025AA  C005  F00F         	movff	?___flpack+2,?___lwtofl+2
  7066  0025AE  C006  F010         	movff	?___flpack+3,?___lwtofl+3
  7067  0025B2  0012               	return		;funcret
  7068  0025B4  FFFF               	dw	65535	; errata NOP
  7069  0025B6                     __end_of___lwtofl:
  7070                           	opt stack 0
  7071                           tosu	equ	0xFFF
  7072                           tosh	equ	0xFFE
  7073                           tosl	equ	0xFFD
  7074                           pclath	equ	0xFFA
  7075                           tblptru	equ	0xFF8
  7076                           tblptrh	equ	0xFF7
  7077                           tblptrl	equ	0xFF6
  7078                           tablat	equ	0xFF5
  7079                           intcon	equ	0xFF2
  7080                           intcon2	equ	0xFF1
  7081                           postinc0	equ	0xFEE
  7082                           wreg	equ	0xFE8
  7083                           indf2	equ	0xFDF
  7084                           postinc2	equ	0xFDE
  7085                           postdec2	equ	0xFDD
  7086                           fsr2h	equ	0xFDA
  7087                           fsr2l	equ	0xFD9
  7088                           status	equ	0xFD8
  7089                           
  7090 ;; *************** function ___flpack *****************
  7091 ;; Defined at:
  7092 ;;		line 63 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\double.c"
  7093 ;; Parameters:    Size  Location     Type
  7094 ;;  arg             4    2[COMRAM] unsigned long 
  7095 ;;  exp             1    6[COMRAM] unsigned char 
  7096 ;;  sign            1    7[COMRAM] unsigned char 
  7097 ;; Auto vars:     Size  Location     Type
  7098 ;;		None
  7099 ;; Return value:  Size  Location     Type
  7100 ;;                  4    2[COMRAM] unsigned char 
  7101 ;; Registers used:
  7102 ;;		wreg, status,2, status,0
  7103 ;; Tracked objects:
  7104 ;;		On entry : 0/0
  7105 ;;		On exit  : 0/0
  7106 ;;		Unchanged: 0/0
  7107 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7108 ;;      Params:         6       0       0       0       0       0       0
  7109 ;;      Locals:         0       0       0       0       0       0       0
  7110 ;;      Temps:          4       0       0       0       0       0       0
  7111 ;;      Totals:        10       0       0       0       0       0       0
  7112 ;;Total ram usage:       10 bytes
  7113 ;; Hardware stack levels used:    1
  7114 ;; Hardware stack levels required when called:    1
  7115 ;; This function calls:
  7116 ;;		Nothing
  7117 ;; This function is called by:
  7118 ;;		___altofl
  7119 ;;		___awtofl
  7120 ;;		___fladd
  7121 ;;		___fldiv
  7122 ;;		___flmul
  7123 ;;		___lltofl
  7124 ;;		___lwtofl
  7125 ;; This function uses a non-reentrant model
  7126 ;;
  7127                           
  7128                           	psect	text40
  7129  001CE0                     __ptext40:
  7130                           	opt stack 0
  7131  001CE0                     ___flpack:
  7132                           	opt stack 27
  7133                           
  7134                           ;incstack = 0
  7135  001CE0  FFFF               	dw	65535
  7136  001CE2  5007               	movf	___flpack@exp,w,c
  7137  001CE4  E005               	bz	l598
  7138  001CE6  5003               	movf	___flpack@arg,w,c
  7139  001CE8  1004               	iorwf	___flpack@arg+1,w,c
  7140  001CEA  1005               	iorwf	___flpack@arg+2,w,c
  7141  001CEC  1006               	iorwf	___flpack@arg+3,w,c
  7142  001CEE  E10C               	bnz	l2943
  7143  001CF0                     l598:
  7144  001CF0  6A03               	clrf	?___flpack,c
  7145  001CF2  6A04               	clrf	?___flpack+1,c
  7146  001CF4  6A05               	clrf	?___flpack+2,c
  7147  001CF6  6A06               	clrf	?___flpack+3,c
  7148  001CF8  D05B               	goto	l599
  7149  001CFA                     l2941:
  7150  001CFA  FFFF               	dw	65535	; assembler added errata NOP
  7151  001CFC  2A07               	incf	___flpack@exp,f,c
  7152  001CFE  90D8               	bcf	status,0,c
  7153  001D00  3206               	rrcf	___flpack@arg+3,f,c
  7154  001D02  3205               	rrcf	___flpack@arg+2,f,c
  7155  001D04  3204               	rrcf	___flpack@arg+1,f,c
  7156  001D06  3203               	rrcf	___flpack@arg,f,c
  7157  001D08                     l2943:
  7158  001D08  6A09               	clrf	??___flpack& (0+255),c
  7159  001D0A  6A0A               	clrf	(??___flpack+1)& (0+255),c
  7160  001D0C  6A0B               	clrf	(??___flpack+2)& (0+255),c
  7161  001D0E  0EFE               	movlw	254
  7162  001D10  1406               	andwf	___flpack@arg+3,w,c
  7163  001D12  6E0C               	movwf	(??___flpack+3)& (0+255),c
  7164  001D14  5009               	movf	??___flpack,w,c
  7165  001D16  100A               	iorwf	??___flpack+1,w,c
  7166  001D18  100B               	iorwf	??___flpack+2,w,c
  7167  001D1A  100C               	iorwf	??___flpack+3,w,c
  7168  001D1C  E00D               	bz	l603
  7169  001D1E  D7ED               	goto	l2941
  7170  001D20                     l2945:
  7171  001D20  FFFF               	dw	65535	; assembler added errata NOP
  7172  001D22  2A07               	incf	___flpack@exp,f,c
  7173  001D24  2A03               	incf	___flpack@arg,f,c
  7174  001D26  0E00               	movlw	0
  7175  001D28  2204               	addwfc	___flpack@arg+1,f,c
  7176  001D2A  2205               	addwfc	___flpack@arg+2,f,c
  7177  001D2C  2206               	addwfc	___flpack@arg+3,f,c
  7178  001D2E  90D8               	bcf	status,0,c
  7179  001D30  3206               	rrcf	___flpack@arg+3,f,c
  7180  001D32  3205               	rrcf	___flpack@arg+2,f,c
  7181  001D34  3204               	rrcf	___flpack@arg+1,f,c
  7182  001D36  3203               	rrcf	___flpack@arg,f,c
  7183  001D38                     l603:
  7184  001D38  6A09               	clrf	??___flpack& (0+255),c
  7185  001D3A  6A0A               	clrf	(??___flpack+1)& (0+255),c
  7186  001D3C  6A0B               	clrf	(??___flpack+2)& (0+255),c
  7187  001D3E  5006               	movf	___flpack@arg+3,w,c
  7188  001D40  6E0C               	movwf	(??___flpack+3)& (0+255),c
  7189  001D42  5009               	movf	??___flpack,w,c
  7190  001D44  100A               	iorwf	??___flpack+1,w,c
  7191  001D46  100B               	iorwf	??___flpack+2,w,c
  7192  001D48  100C               	iorwf	??___flpack+3,w,c
  7193  001D4A  E008               	bz	l2953
  7194  001D4C  D7E9               	goto	l2945
  7195  001D4E                     l2951:
  7196  001D4E  FFFF               	dw	65535	; assembler added errata NOP
  7197  001D50  0607               	decf	___flpack@exp,f,c
  7198  001D52  90D8               	bcf	status,0,c
  7199  001D54  3603               	rlcf	___flpack@arg,f,c
  7200  001D56  3604               	rlcf	___flpack@arg+1,f,c
  7201  001D58  3605               	rlcf	___flpack@arg+2,f,c
  7202  001D5A  3606               	rlcf	___flpack@arg+3,f,c
  7203  001D5C                     l2953:
  7204  001D5C  BE05               	btfsc	___flpack@arg+2,7,c
  7205  001D5E  D003               	goto	l610
  7206  001D60  0E02               	movlw	2
  7207  001D62  6007               	cpfslt	___flpack@exp,c
  7208  001D64  D7F4               	goto	l2951
  7209  001D66                     l610:
  7210  001D66  FFFF               	dw	65535	; assembler added errata NOP
  7211  001D68  B007               	btfsc	___flpack@exp,0,c
  7212  001D6A  D002               	goto	l611
  7213  001D6C  0E7F               	movlw	127
  7214  001D6E  1605               	andwf	___flpack@arg+2,f,c
  7215  001D70                     l611:
  7216  001D70  FFFF               	dw	65535	; assembler added errata NOP
  7217  001D72  90D8               	bcf	status,0,c
  7218  001D74  3207               	rrcf	___flpack@exp,f,c
  7219  001D76  C007  F009         	movff	___flpack@exp,??___flpack
  7220  001D7A  6A0A               	clrf	(??___flpack+1)& (0+255),c
  7221  001D7C  6A0B               	clrf	(??___flpack+2)& (0+255),c
  7222  001D7E  6A0C               	clrf	(??___flpack+3)& (0+255),c
  7223  001D80  C009  F00C         	movff	??___flpack,??___flpack+3
  7224  001D84  6A0B               	clrf	??___flpack+2,c
  7225  001D86  6A0A               	clrf	??___flpack+1,c
  7226  001D88  6A09               	clrf	??___flpack,c
  7227  001D8A  5009               	movf	??___flpack,w,c
  7228  001D8C  1203               	iorwf	___flpack@arg,f,c
  7229  001D8E  500A               	movf	??___flpack+1,w,c
  7230  001D90  1204               	iorwf	___flpack@arg+1,f,c
  7231  001D92  500B               	movf	??___flpack+2,w,c
  7232  001D94  1205               	iorwf	___flpack@arg+2,f,c
  7233  001D96  500C               	movf	??___flpack+3,w,c
  7234  001D98  1206               	iorwf	___flpack@arg+3,f,c
  7235  001D9A  5008               	movf	___flpack@sign,w,c
  7236  001D9C  A4D8               	btfss	status,2,c
  7237  001D9E  8E06               	bsf	___flpack@arg+3,7,c
  7238  001DA0  C003  F003         	movff	___flpack@arg,?___flpack
  7239  001DA4  C004  F004         	movff	___flpack@arg+1,?___flpack+1
  7240  001DA8  C005  F005         	movff	___flpack@arg+2,?___flpack+2
  7241  001DAC  C006  F006         	movff	___flpack@arg+3,?___flpack+3
  7242  001DB0                     l599:
  7243  001DB0  FFFF               	dw	65535	; assembler added errata NOP
  7244  001DB2  0012               	return		;funcret
  7245  001DB4  FFFF               	dw	65535	; errata NOP
  7246  001DB6                     __end_of___flpack:
  7247                           	opt stack 0
  7248                           tosu	equ	0xFFF
  7249                           tosh	equ	0xFFE
  7250                           tosl	equ	0xFFD
  7251                           pclath	equ	0xFFA
  7252                           tblptru	equ	0xFF8
  7253                           tblptrh	equ	0xFF7
  7254                           tblptrl	equ	0xFF6
  7255                           tablat	equ	0xFF5
  7256                           intcon	equ	0xFF2
  7257                           intcon2	equ	0xFF1
  7258                           postinc0	equ	0xFEE
  7259                           wreg	equ	0xFE8
  7260                           indf2	equ	0xFDF
  7261                           postinc2	equ	0xFDE
  7262                           postdec2	equ	0xFDD
  7263                           fsr2h	equ	0xFDA
  7264                           fsr2l	equ	0xFD9
  7265                           status	equ	0xFD8
  7266                           tosu	equ	0xFFF
  7267                           tosh	equ	0xFFE
  7268                           tosl	equ	0xFFD
  7269                           pclath	equ	0xFFA
  7270                           tblptru	equ	0xFF8
  7271                           tblptrh	equ	0xFF7
  7272                           tblptrl	equ	0xFF6
  7273                           tablat	equ	0xFF5
  7274                           intcon	equ	0xFF2
  7275                           intcon2	equ	0xFF1
  7276                           postinc0	equ	0xFEE
  7277                           wreg	equ	0xFE8
  7278                           indf2	equ	0xFDF
  7279                           postinc2	equ	0xFDE
  7280                           postdec2	equ	0xFDD
  7281                           fsr2h	equ	0xFDA
  7282                           fsr2l	equ	0xFD9
  7283                           status	equ	0xFD8
  7284                           
  7285                           	psect	rparam
  7286  0000                     
  7287 ;;
  7288 ;; C18 inline assembly external references
  7289 ;;
  7290  0000                     tosu	equ	0xFFF
  7291                           tosh	equ	0xFFE
  7292                           tosl	equ	0xFFD
  7293                           pclath	equ	0xFFA
  7294                           tblptru	equ	0xFF8
  7295                           tblptrh	equ	0xFF7
  7296                           tblptrl	equ	0xFF6
  7297                           tablat	equ	0xFF5
  7298                           intcon	equ	0xFF2
  7299                           intcon2	equ	0xFF1
  7300                           postinc0	equ	0xFEE
  7301                           wreg	equ	0xFE8
  7302                           indf2	equ	0xFDF
  7303                           postinc2	equ	0xFDE
  7304                           postdec2	equ	0xFDD
  7305                           fsr2h	equ	0xFDA
  7306                           fsr2l	equ	0xFD9
  7307                           status	equ	0xFD8


Data Sizes:
    Strings     42
    Constant    76
    Data        2
    BSS         63
    Persistent  8
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127    113     120
    BANK0           128     48     114
    BANK1           256     19      19
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    eval_poly@d	PTR const  size(2) Largest target is 40
		 -> exp@coeff(CODE[40]), log@coeff(CODE[36]), 

    frexp@eptr	PTR int  size(2) Largest target is 2
		 -> log@exponent(COMRAM[2]), floor@expon(COMRAM[2]), 

    ser_puts@s	PTR const char  size(2) Largest target is 8
		 -> STR_11(CODE[3]), STR_10(CODE[5]), STR_9(CODE[3]), STR_8(CODE[8]), 
		 -> STR_7(CODE[6]), STR_6(CODE[6]), STR_5(CODE[6]), STR_4(CODE[5]), 
		 -> STR_3(CODE[3]), STR_2(CODE[3]), STR_1(CODE[6]), 

    putchar_ptr	PTR FTN(char ,)void  size(2) Largest target is 0
		 -> format_putchar(), ser_putch(), output_putch(), 


Critical Paths under _main in COMRAM

    _measure_inductance->___fltol
    _format_xint32->_format_number
    _format_number->___lwdiv
    _pow->_exp
    _exp->_floor
    _ldexp->_eval_poly
    _floor->___altofl
    ___fltol->_log10
    ___altofl->___fltol
    ___flsub->___fladd
    ___fldiv->___flpack
    ___lltofl->___flpack
    _log10->_log
    _log->_eval_poly
    _eval_poly->___fladd
    ___flmul->___fldiv
    ___fladd->___flmul
    ___awtofl->___flpack
    _calibrate->___lwtofl
    _ser_puts->_ser_putch
    _delay10ms->___wmul
    ___lwtofl->___flpack

Critical Paths under _isr in COMRAM

    None.

Critical Paths under _main in BANK0

    _measure_capacitance->_format_double
    _format_double->_pow
    _pow->_exp

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_measure_capacitance

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _isr in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0  202069
                          _calibrate
                          _delay10ms
                          _indicator
                _measure_capacitance
                 _measure_inductance
                           _ser_init
                           _ser_puts
                        _timer2_init
 ---------------------------------------------------------------------------------
 (1) _timer2_init                                          4     4      0     156
                                              2 COMRAM     4     4      0
 ---------------------------------------------------------------------------------
 (1) _ser_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _measure_inductance                                  55    55      0   22602
                                              0 BANK0     43    43      0
                            ___fldiv
                             ___flge
                            ___flmul
                            ___flsub
                            ___fltol
                           ___lwtofl
                       _measure_freq
                      _print_reading
                         _print_unit
 ---------------------------------------------------------------------------------
 (1) _measure_capacitance                                 19    19      0  173255
                                              0 BANK1     19    19      0
                            ___fldiv
                             ___flge
                            ___flmul
                            ___flsub
                            ___fltol
                           ___lwtofl
                      _format_double
                      _format_xint32
                       _measure_freq
                      _print_reading
                         _print_unit
                          _ser_putch
                           _ser_puts
 ---------------------------------------------------------------------------------
 (2) _print_unit                                           1     1      0       0
 ---------------------------------------------------------------------------------
 (2) _print_reading                                        2     0      2     130
                                              2 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _format_xint32                                        4     0      4    2558
                                             54 COMRAM     4     0      4
                      _format_number
                     _format_putchar *
                       _output_putch *
                          _ser_putch *
 ---------------------------------------------------------------------------------
 (3) _format_number                                       45    41      4    2010
                                              9 COMRAM    45    41      4
                            ___lwdiv
                            ___lwmod
                     _format_putchar *
                       _output_putch *
                          _ser_putch *
 ---------------------------------------------------------------------------------
 (4) ___lwmod                                              5     1      4     362
                                              2 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (4) ___lwdiv                                              7     3      4     371
                                              2 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (2) _format_double                                       20    16      4  147690
                                             28 BANK0     20    16      4
                           ___awtofl
                            ___fldiv
                             ___flge
                            ___flmul
                            ___flsub
                            ___fltol
                              _floor
                     _format_putchar *
                              _log10
                       _output_putch *
                                _pow
                          _ser_putch *
 ---------------------------------------------------------------------------------
 (3) _pow                                                 21    13      8   82778
                                              7 BANK0     21    13      8
                             ___flge
                            ___flmul
                            ___flneg
                            ___fltol
                           ___lltofl
                                _exp
                                _log
 ---------------------------------------------------------------------------------
 (4) _exp                                                 11     7      4   44563
                                            109 COMRAM     4     0      4
                                              0 BANK0      7     7      0
                           ___awtofl
                            ___fldiv
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                          _eval_poly
                              _floor
                              _ldexp
                                _log (ARG)
 ---------------------------------------------------------------------------------
 (5) _ldexp                                                8     2      6     489
                                             70 COMRAM     8     2      6
                          _eval_poly (ARG)
 ---------------------------------------------------------------------------------
 (5) _floor                                               10     6      4   10644
                                             99 COMRAM    10     6      4
                           ___altofl
                            ___fladd
                            ___fldiv (ARG)
                             ___flge
                            ___fltol
                              _frexp
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             10     6      4     882
                                             84 COMRAM    10     6      4
                            ___fldiv (ARG)
                              _log10 (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flge                                               8     0      8    1978
                                              2 COMRAM     8     0      8
 ---------------------------------------------------------------------------------
 (6) ___altofl                                             5     1      4    2446
                                             94 COMRAM     5     1      4
                           ___flpack
                            ___fltol (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flsub                                              8     0      8    5269
                                             54 COMRAM     8     0      8
                           ___awtofl (ARG)
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (5) ___flneg                                              4     0      4     260
                                              2 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (2) ___fldiv                                             15     7      8    4021
                                             12 COMRAM    15     7      8
                           ___flpack
 ---------------------------------------------------------------------------------
 (4) ___lltofl                                             4     0      4    2344
                                             12 COMRAM     4     0      4
                           ___flpack
 ---------------------------------------------------------------------------------
 (3) _output_putch                                         1     1      0      62
                                              2 COMRAM     1     1      0
                          _ser_putch
 ---------------------------------------------------------------------------------
 (3) _log10                                                8     4      4   32189
                                             76 COMRAM     8     4      4
                            ___flmul
                                _log
 ---------------------------------------------------------------------------------
 (4) _log                                                  6     2      4   25582
                                             70 COMRAM     6     2      4
                           ___awtofl
                            ___fladd
                            ___flmul
                          _eval_poly
                              _frexp
 ---------------------------------------------------------------------------------
 (5) _frexp                                                8     2      6     582
                                              2 COMRAM     8     2      6
 ---------------------------------------------------------------------------------
 (5) _eval_poly                                           16     8      8   11289
                                             54 COMRAM    16     8      8
                            ___fladd
                            ___flmul
 ---------------------------------------------------------------------------------
 (2) ___flmul                                             15     7      8    6432
                                             27 COMRAM    15     7      8
                           ___awtofl (ARG)
                            ___fldiv (ARG)
                           ___flpack
                              _frexp (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fladd                                             12     4      8    4213
                                             42 COMRAM    12     4      8
                           ___awtofl (ARG)
                            ___flmul (ARG)
                           ___flpack
                              _frexp (ARG)
 ---------------------------------------------------------------------------------
 (5) ___awtofl                                             9     5      4    2686
                                             12 COMRAM     5     1      4
                           ___flpack
 ---------------------------------------------------------------------------------
 (3) _format_putchar                                       1     1      0       0
 ---------------------------------------------------------------------------------
 (1) _indicator                                            1     1      0       0
 ---------------------------------------------------------------------------------
 (1) _calibrate                                            1     1      0    4480
                           ___lwtofl
                          _delay10ms
                       _measure_freq
                           _ser_puts
 ---------------------------------------------------------------------------------
 (1) _ser_puts                                             2     0      2     791
                                              3 COMRAM     2     0      2
                          _ser_putch
 ---------------------------------------------------------------------------------
 (2) _ser_putch                                            1     1      0      31
                                              2 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _measure_freq                                         8     6      2     235
                                              2 COMRAM     8     6      2
 ---------------------------------------------------------------------------------
 (1) _delay10ms                                            7     5      2     785
                                              8 COMRAM     7     5      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     198
                                              2 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___lwtofl                                             4     0      4    2669
                                             12 COMRAM     4     0      4
                           ___flpack
                       _measure_freq (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flpack                                            10     4      6    2248
                                              2 COMRAM    10     4      6
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (8) _isr                                                  2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _calibrate
     ___lwtofl
       ___flpack
       _measure_freq (ARG)
     _delay10ms
       ___wmul
     _measure_freq
     _ser_puts
       _ser_putch
   _delay10ms
     ___wmul
   _indicator
   _measure_capacitance
     ___fldiv
       ___flpack
     ___flge
     ___flmul
       ___awtofl (ARG)
         ___flpack
       ___fldiv (ARG)
         ___flpack
       ___flpack (ARG)
       _frexp (ARG)
     ___flsub
       ___awtofl (ARG)
         ___flpack
       ___fladd (ARG)
         ___awtofl (ARG)
           ___flpack
         ___flmul (ARG)
           ___awtofl (ARG)
             ___flpack
           ___fldiv (ARG)
             ___flpack
           ___flpack (ARG)
           _frexp (ARG)
         ___flpack (ARG)
         _frexp (ARG)
       ___flmul (ARG)
         ___awtofl (ARG)
           ___flpack
         ___fldiv (ARG)
           ___flpack
         ___flpack (ARG)
         _frexp (ARG)
     ___fltol
       ___fldiv (ARG)
         ___flpack
       _log10 (ARG)
         ___flmul
           ___awtofl (ARG)
             ___flpack
           ___fldiv (ARG)
             ___flpack
           ___flpack (ARG)
           _frexp (ARG)
         _log
           ___awtofl
             ___flpack
           ___fladd
             ___awtofl (ARG)
               ___flpack
             ___flmul (ARG)
               ___awtofl (ARG)
                 ___flpack
               ___fldiv (ARG)
                 ___flpack
               ___flpack (ARG)
               _frexp (ARG)
             ___flpack (ARG)
             _frexp (ARG)
           ___flmul
             ___awtofl (ARG)
               ___flpack
             ___fldiv (ARG)
               ___flpack
             ___flpack (ARG)
             _frexp (ARG)
           _eval_poly
             ___fladd
               ___awtofl (ARG)
                 ___flpack
               ___flmul (ARG)
                 ___awtofl (ARG)
                   ___flpack
                 ___fldiv (ARG)
                   ___flpack
                 ___flpack (ARG)
                 _frexp (ARG)
               ___flpack (ARG)
               _frexp (ARG)
             ___flmul
               ___awtofl (ARG)
                 ___flpack
               ___fldiv (ARG)
                 ___flpack
               ___flpack (ARG)
               _frexp (ARG)
           _frexp
     ___lwtofl
       ___flpack
       _measure_freq (ARG)
     _format_double
       ___awtofl
         ___flpack
       ___fldiv
         ___flpack
       ___flge
       ___flmul
         ___awtofl (ARG)
           ___flpack
         ___fldiv (ARG)
           ___flpack
         ___flpack (ARG)
         _frexp (ARG)
       ___flsub
         ___awtofl (ARG)
           ___flpack
         ___fladd (ARG)
           ___awtofl (ARG)
             ___flpack
           ___flmul (ARG)
             ___awtofl (ARG)
               ___flpack
             ___fldiv (ARG)
               ___flpack
             ___flpack (ARG)
             _frexp (ARG)
           ___flpack (ARG)
           _frexp (ARG)
         ___flmul (ARG)
           ___awtofl (ARG)
             ___flpack
           ___fldiv (ARG)
             ___flpack
           ___flpack (ARG)
           _frexp (ARG)
       ___fltol
         ___fldiv (ARG)
           ___flpack
         _log10 (ARG)
           ___flmul
             ___awtofl (ARG)
               ___flpack
             ___fldiv (ARG)
               ___flpack
             ___flpack (ARG)
             _frexp (ARG)
           _log
             ___awtofl
               ___flpack
             ___fladd
               ___awtofl (ARG)
                 ___flpack
               ___flmul (ARG)
                 ___awtofl (ARG)
                   ___flpack
                 ___fldiv (ARG)
                   ___flpack
                 ___flpack (ARG)
                 _frexp (ARG)
               ___flpack (ARG)
               _frexp (ARG)
             ___flmul
               ___awtofl (ARG)
                 ___flpack
               ___fldiv (ARG)
                 ___flpack
               ___flpack (ARG)
               _frexp (ARG)
             _eval_poly
               ___fladd
                 ___awtofl (ARG)
                   ___flpack
                 ___flmul (ARG)
                   ___awtofl (ARG)
                     ___flpack
                   ___fldiv (ARG)
                     ___flpack
                   ___flpack (ARG)
                   _frexp (ARG)
                 ___flpack (ARG)
                 _frexp (ARG)
               ___flmul
                 ___awtofl (ARG)
                   ___flpack
                 ___fldiv (ARG)
                   ___flpack
                 ___flpack (ARG)
                 _frexp (ARG)
             _frexp
       _floor
         ___altofl
           ___flpack
           ___fltol (ARG)
             ___fldiv (ARG)
               ___flpack
             _log10 (ARG)
               ___flmul
                 ___awtofl (ARG)
                   ___flpack
                 ___fldiv (ARG)
                   ___flpack
                 ___flpack (ARG)
                 _frexp (ARG)
               _log
                 ___awtofl
                   ___flpack
                 ___fladd
                   ___awtofl (ARG)
                     ___flpack
                   ___flmul (ARG)
                     ___awtofl (ARG)
                       ___flpack
                     ___fldiv (ARG)
                       ___flpack
                     ___flpack (ARG)
                     _frexp (ARG)
                   ___flpack (ARG)
                   _frexp (ARG)
                 ___flmul
                   ___awtofl (ARG)
                     ___flpack
                   ___fldiv (ARG)
                     ___flpack
                   ___flpack (ARG)
                   _frexp (ARG)
                 _eval_poly
                   ___fladd
                     ___awtofl (ARG)
                       ___flpack
                     ___flmul (ARG)
                       ___awtofl (ARG)
                         ___flpack
                       ___fldiv (ARG)
                         ___flpack
                       ___flpack (ARG)
                       _frexp (ARG)
                     ___flpack (ARG)
                     _frexp (ARG)
                   ___flmul
                     ___awtofl (ARG)
                       ___flpack
                     ___fldiv (ARG)
                       ___flpack
                     ___flpack (ARG)
                     _frexp (ARG)
                 _frexp
         ___fladd
           ___awtofl (ARG)
             ___flpack
           ___flmul (ARG)
             ___awtofl (ARG)
               ___flpack
             ___fldiv (ARG)
               ___flpack
             ___flpack (ARG)
             _frexp (ARG)
           ___flpack (ARG)
           _frexp (ARG)
         ___fldiv (ARG)
           ___flpack
         ___flge (ARG)
         ___fltol (ARG)
           ___fldiv (ARG)
             ___flpack
           _log10 (ARG)
             ___flmul
               ___awtofl (ARG)
                 ___flpack
               ___fldiv (ARG)
                 ___flpack
               ___flpack (ARG)
               _frexp (ARG)
             _log
               ___awtofl
                 ___flpack
               ___fladd
                 ___awtofl (ARG)
                   ___flpack
                 ___flmul (ARG)
                   ___awtofl (ARG)
                     ___flpack
                   ___fldiv (ARG)
                     ___flpack
                   ___flpack (ARG)
                   _frexp (ARG)
                 ___flpack (ARG)
                 _frexp (ARG)
               ___flmul
                 ___awtofl (ARG)
                   ___flpack
                 ___fldiv (ARG)
                   ___flpack
                 ___flpack (ARG)
                 _frexp (ARG)
               _eval_poly
                 ___fladd
                   ___awtofl (ARG)
                     ___flpack
                   ___flmul (ARG)
                     ___awtofl (ARG)
                       ___flpack
                     ___fldiv (ARG)
                       ___flpack
                     ___flpack (ARG)
                     _frexp (ARG)
                   ___flpack (ARG)
                   _frexp (ARG)
                 ___flmul
                   ___awtofl (ARG)
                     ___flpack
                   ___fldiv (ARG)
                     ___flpack
                   ___flpack (ARG)
                   _frexp (ARG)
               _frexp
         _frexp (ARG)
       _format_putchar *
       _log10 *
         ___flmul
           ___awtofl (ARG)
             ___flpack
           ___fldiv (ARG)
             ___flpack
           ___flpack (ARG)
           _frexp (ARG)
         _log
           ___awtofl
             ___flpack
           ___fladd
             ___awtofl (ARG)
               ___flpack
             ___flmul (ARG)
               ___awtofl (ARG)
                 ___flpack
               ___fldiv (ARG)
                 ___flpack
               ___flpack (ARG)
               _frexp (ARG)
             ___flpack (ARG)
             _frexp (ARG)
           ___flmul
             ___awtofl (ARG)
               ___flpack
             ___fldiv (ARG)
               ___flpack
             ___flpack (ARG)
             _frexp (ARG)
           _eval_poly
             ___fladd
               ___awtofl (ARG)
                 ___flpack
               ___flmul (ARG)
                 ___awtofl (ARG)
                   ___flpack
                 ___fldiv (ARG)
                   ___flpack
                 ___flpack (ARG)
                 _frexp (ARG)
               ___flpack (ARG)
               _frexp (ARG)
             ___flmul
               ___awtofl (ARG)
                 ___flpack
               ___fldiv (ARG)
                 ___flpack
               ___flpack (ARG)
               _frexp (ARG)
           _frexp
       _output_putch *
         _ser_putch
       _pow *
         ___flge
         ___flmul
           ___awtofl (ARG)
             ___flpack
           ___fldiv (ARG)
             ___flpack
           ___flpack (ARG)
           _frexp (ARG)
         ___flneg
         ___fltol
           ___fldiv (ARG)
             ___flpack
           _log10 (ARG)
             ___flmul
               ___awtofl (ARG)
                 ___flpack
               ___fldiv (ARG)
                 ___flpack
               ___flpack (ARG)
               _frexp (ARG)
             _log
               ___awtofl
                 ___flpack
               ___fladd
                 ___awtofl (ARG)
                   ___flpack
                 ___flmul (ARG)
                   ___awtofl (ARG)
                     ___flpack
                   ___fldiv (ARG)
                     ___flpack
                   ___flpack (ARG)
                   _frexp (ARG)
                 ___flpack (ARG)
                 _frexp (ARG)
               ___flmul
                 ___awtofl (ARG)
                   ___flpack
                 ___fldiv (ARG)
                   ___flpack
                 ___flpack (ARG)
                 _frexp (ARG)
               _eval_poly
                 ___fladd
                   ___awtofl (ARG)
                     ___flpack
                   ___flmul (ARG)
                     ___awtofl (ARG)
                       ___flpack
                     ___fldiv (ARG)
                       ___flpack
                     ___flpack (ARG)
                     _frexp (ARG)
                   ___flpack (ARG)
                   _frexp (ARG)
                 ___flmul
                   ___awtofl (ARG)
                     ___flpack
                   ___fldiv (ARG)
                     ___flpack
                   ___flpack (ARG)
                   _frexp (ARG)
               _frexp
         ___lltofl
           ___flpack
         _exp
           ___awtofl
             ___flpack
           ___fldiv
             ___flpack
           ___flge
           ___flmul
             ___awtofl (ARG)
               ___flpack
             ___fldiv (ARG)
               ___flpack
             ___flpack (ARG)
             _frexp (ARG)
           ___flneg
           ___flsub
             ___awtofl (ARG)
               ___flpack
             ___fladd (ARG)
               ___awtofl (ARG)
                 ___flpack
               ___flmul (ARG)
                 ___awtofl (ARG)
                   ___flpack
                 ___fldiv (ARG)
                   ___flpack
                 ___flpack (ARG)
                 _frexp (ARG)
               ___flpack (ARG)
               _frexp (ARG)
             ___flmul (ARG)
               ___awtofl (ARG)
                 ___flpack
               ___fldiv (ARG)
                 ___flpack
               ___flpack (ARG)
               _frexp (ARG)
           ___fltol
             ___fldiv (ARG)
               ___flpack
             _log10 (ARG)
               ___flmul
                 ___awtofl (ARG)
                   ___flpack
                 ___fldiv (ARG)
                   ___flpack
                 ___flpack (ARG)
                 _frexp (ARG)
               _log
                 ___awtofl
                   ___flpack
                 ___fladd
                   ___awtofl (ARG)
                     ___flpack
                   ___flmul (ARG)
                     ___awtofl (ARG)
                       ___flpack
                     ___fldiv (ARG)
                       ___flpack
                     ___flpack (ARG)
                     _frexp (ARG)
                   ___flpack (ARG)
                   _frexp (ARG)
                 ___flmul
                   ___awtofl (ARG)
                     ___flpack
                   ___fldiv (ARG)
                     ___flpack
                   ___flpack (ARG)
                   _frexp (ARG)
                 _eval_poly
                   ___fladd
                     ___awtofl (ARG)
                       ___flpack
                     ___flmul (ARG)
                       ___awtofl (ARG)
                         ___flpack
                       ___fldiv (ARG)
                         ___flpack
                       ___flpack (ARG)
                       _frexp (ARG)
                     ___flpack (ARG)
                     _frexp (ARG)
                   ___flmul
                     ___awtofl (ARG)
                       ___flpack
                     ___fldiv (ARG)
                       ___flpack
                     ___flpack (ARG)
                     _frexp (ARG)
                 _frexp
           _eval_poly
             ___fladd
               ___awtofl (ARG)
                 ___flpack
               ___flmul (ARG)
                 ___awtofl (ARG)
                   ___flpack
                 ___fldiv (ARG)
                   ___flpack
                 ___flpack (ARG)
                 _frexp (ARG)
               ___flpack (ARG)
               _frexp (ARG)
             ___flmul
               ___awtofl (ARG)
                 ___flpack
               ___fldiv (ARG)
                 ___flpack
               ___flpack (ARG)
               _frexp (ARG)
           _floor
             ___altofl
               ___flpack
               ___fltol (ARG)
                 ___fldiv (ARG)
                   ___flpack
                 _log10 (ARG)
                   ___flmul
                     ___awtofl (ARG)
                       ___flpack
                     ___fldiv (ARG)
                       ___flpack
                     ___flpack (ARG)
                     _frexp (ARG)
                   _log
                     ___awtofl
                       ___flpack
                     ___fladd
                       ___awtofl (ARG)
                         ___flpack
                       ___flmul (ARG)
                         ___awtofl (ARG)
                           ___flpack
                         ___fldiv (ARG)
                           ___flpack
                         ___flpack (ARG)
                         _frexp (ARG)
                       ___flpack (ARG)
                       _frexp (ARG)
                     ___flmul
                       ___awtofl (ARG)
                         ___flpack
                       ___fldiv (ARG)
                         ___flpack
                       ___flpack (ARG)
                       _frexp (ARG)
                     _eval_poly
                       ___fladd
                         ___awtofl (ARG)
                           ___flpack
                         ___flmul (ARG)
                           ___awtofl (ARG)
                             ___flpack
                           ___fldiv (ARG)
                             ___flpack
                           ___flpack (ARG)
                           _frexp (ARG)
                         ___flpack (ARG)
                         _frexp (ARG)
                       ___flmul
                         ___awtofl (ARG)
                           ___flpack
                         ___fldiv (ARG)
                           ___flpack
                         ___flpack (ARG)
                         _frexp (ARG)
                     _frexp
             ___fladd
               ___awtofl (ARG)
                 ___flpack
               ___flmul (ARG)
                 ___awtofl (ARG)
                   ___flpack
                 ___fldiv (ARG)
                   ___flpack
                 ___flpack (ARG)
                 _frexp (ARG)
               ___flpack (ARG)
               _frexp (ARG)
             ___fldiv (ARG)
               ___flpack
             ___flge (ARG)
             ___fltol (ARG)
               ___fldiv (ARG)
                 ___flpack
               _log10 (ARG)
                 ___flmul
                   ___awtofl (ARG)
                     ___flpack
                   ___fldiv (ARG)
                     ___flpack
                   ___flpack (ARG)
                   _frexp (ARG)
                 _log
                   ___awtofl
                     ___flpack
                   ___fladd
                     ___awtofl (ARG)
                       ___flpack
                     ___flmul (ARG)
                       ___awtofl (ARG)
                         ___flpack
                       ___fldiv (ARG)
                         ___flpack
                       ___flpack (ARG)
                       _frexp (ARG)
                     ___flpack (ARG)
                     _frexp (ARG)
                   ___flmul
                     ___awtofl (ARG)
                       ___flpack
                     ___fldiv (ARG)
                       ___flpack
                     ___flpack (ARG)
                     _frexp (ARG)
                   _eval_poly
                     ___fladd
                       ___awtofl (ARG)
                         ___flpack
                       ___flmul (ARG)
                         ___awtofl (ARG)
                           ___flpack
                         ___fldiv (ARG)
                           ___flpack
                         ___flpack (ARG)
                         _frexp (ARG)
                       ___flpack (ARG)
                       _frexp (ARG)
                     ___flmul
                       ___awtofl (ARG)
                         ___flpack
                       ___fldiv (ARG)
                         ___flpack
                       ___flpack (ARG)
                       _frexp (ARG)
                   _frexp
             _frexp (ARG)
           _ldexp
             _eval_poly (ARG)
               ___fladd
                 ___awtofl (ARG)
                   ___flpack
                 ___flmul (ARG)
                   ___awtofl (ARG)
                     ___flpack
                   ___fldiv (ARG)
                     ___flpack
                   ___flpack (ARG)
                   _frexp (ARG)
                 ___flpack (ARG)
                 _frexp (ARG)
               ___flmul
                 ___awtofl (ARG)
                   ___flpack
                 ___fldiv (ARG)
                   ___flpack
                 ___flpack (ARG)
                 _frexp (ARG)
           _log (ARG)
             ___awtofl
               ___flpack
             ___fladd
               ___awtofl (ARG)
                 ___flpack
               ___flmul (ARG)
                 ___awtofl (ARG)
                   ___flpack
                 ___fldiv (ARG)
                   ___flpack
                 ___flpack (ARG)
                 _frexp (ARG)
               ___flpack (ARG)
               _frexp (ARG)
             ___flmul
               ___awtofl (ARG)
                 ___flpack
               ___fldiv (ARG)
                 ___flpack
               ___flpack (ARG)
               _frexp (ARG)
             _eval_poly
               ___fladd
                 ___awtofl (ARG)
                   ___flpack
                 ___flmul (ARG)
                   ___awtofl (ARG)
                     ___flpack
                   ___fldiv (ARG)
                     ___flpack
                   ___flpack (ARG)
                   _frexp (ARG)
                 ___flpack (ARG)
                 _frexp (ARG)
               ___flmul
                 ___awtofl (ARG)
                   ___flpack
                 ___fldiv (ARG)
                   ___flpack
                 ___flpack (ARG)
                 _frexp (ARG)
             _frexp
         _log
           ___awtofl
             ___flpack
           ___fladd
             ___awtofl (ARG)
               ___flpack
             ___flmul (ARG)
               ___awtofl (ARG)
                 ___flpack
               ___fldiv (ARG)
                 ___flpack
               ___flpack (ARG)
               _frexp (ARG)
             ___flpack (ARG)
             _frexp (ARG)
           ___flmul
             ___awtofl (ARG)
               ___flpack
             ___fldiv (ARG)
               ___flpack
             ___flpack (ARG)
             _frexp (ARG)
           _eval_poly
             ___fladd
               ___awtofl (ARG)
                 ___flpack
               ___flmul (ARG)
                 ___awtofl (ARG)
                   ___flpack
                 ___fldiv (ARG)
                   ___flpack
                 ___flpack (ARG)
                 _frexp (ARG)
               ___flpack (ARG)
               _frexp (ARG)
             ___flmul
               ___awtofl (ARG)
                 ___flpack
               ___fldiv (ARG)
                 ___flpack
               ___flpack (ARG)
               _frexp (ARG)
           _frexp
       _ser_putch *
     _format_xint32
       _format_number
         ___lwdiv
         ___lwmod
         _format_putchar *
         _output_putch *
           _ser_putch
         _ser_putch *
       _format_putchar *
       _output_putch *
         _ser_putch
       _ser_putch *
     _measure_freq
     _print_reading
     _print_unit
     _ser_putch
     _ser_puts
       _ser_putch
   _measure_inductance
     ___fldiv
       ___flpack
     ___flge
     ___flmul
       ___awtofl (ARG)
         ___flpack
       ___fldiv (ARG)
         ___flpack
       ___flpack (ARG)
       _frexp (ARG)
     ___flsub
       ___awtofl (ARG)
         ___flpack
       ___fladd (ARG)
         ___awtofl (ARG)
           ___flpack
         ___flmul (ARG)
           ___awtofl (ARG)
             ___flpack
           ___fldiv (ARG)
             ___flpack
           ___flpack (ARG)
           _frexp (ARG)
         ___flpack (ARG)
         _frexp (ARG)
       ___flmul (ARG)
         ___awtofl (ARG)
           ___flpack
         ___fldiv (ARG)
           ___flpack
         ___flpack (ARG)
         _frexp (ARG)
     ___fltol
       ___fldiv (ARG)
         ___flpack
       _log10 (ARG)
         ___flmul
           ___awtofl (ARG)
             ___flpack
           ___fldiv (ARG)
             ___flpack
           ___flpack (ARG)
           _frexp (ARG)
         _log
           ___awtofl
             ___flpack
           ___fladd
             ___awtofl (ARG)
               ___flpack
             ___flmul (ARG)
               ___awtofl (ARG)
                 ___flpack
               ___fldiv (ARG)
                 ___flpack
               ___flpack (ARG)
               _frexp (ARG)
             ___flpack (ARG)
             _frexp (ARG)
           ___flmul
             ___awtofl (ARG)
               ___flpack
             ___fldiv (ARG)
               ___flpack
             ___flpack (ARG)
             _frexp (ARG)
           _eval_poly
             ___fladd
               ___awtofl (ARG)
                 ___flpack
               ___flmul (ARG)
                 ___awtofl (ARG)
                   ___flpack
                 ___fldiv (ARG)
                   ___flpack
                 ___flpack (ARG)
                 _frexp (ARG)
               ___flpack (ARG)
               _frexp (ARG)
             ___flmul
               ___awtofl (ARG)
                 ___flpack
               ___fldiv (ARG)
                 ___flpack
               ___flpack (ARG)
               _frexp (ARG)
           _frexp
     ___lwtofl
       ___flpack
       _measure_freq (ARG)
     _measure_freq
     _print_reading
     _print_unit
   _ser_init
   _ser_puts
     _ser_putch
   _timer2_init

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      17        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100     13      13       7        7.4%
BITBANK0            80      0       0       4        0.0%
BANK0               80     30      72       5       89.1%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     71      78       1       94.5%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      FD      15        0.0%
DATA                 0      0      FD       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.34 build -361300703 
Symbol Table                                                                                   Fri Aug 30 08:43:53 2019

                         ___altofl@sign 0063                            ___fldiv@cntr 0019  
                          ___fldiv@sign 001B                                      _F1 00B6  
                                    _F2 00A0                                      _F3 00A4  
                           __CFG_BOR$ON 000000                     ___wmul@multiplicand 0005  
                          ___flpack@arg 0003                            ___flpack@exp 0007  
                                   TMR0 000FD6                                     TMR2 000FCC  
                           _putchar_ptr 0077                                     l326 233E  
                                   l352 1B1A                                     l610 1D66  
                                   l611 1D70                                     l603 1D38  
                                   l372 255C                                     l620 16E2  
                                   l702 1846                                     l623 15B8  
                                   l703 1912                                     l705 1902  
                                   l634 1658                                     l619 158E  
                                   l731 20E6                                     l651 1F0E  
                                   l715 1E60                                     l660 22EA  
                                   l735 2060                                     l666 1CDA  
                                   l659 22CA                                     l598 1CF0  
                                   l934 238C                                     l599 1DB0  
                                   l944 2422                                     l972 1564  
                                   l976 1554                                     l897 180C  
                                   _GIE 007F97                                     l998 120A  
                          __CFG_CPD$OFF 000000                                     _RX9 007D5E  
                                   _TX9 007D66                                     _exp 0FF6  
                                   _log 16E8                                     _isr 0008  
                                   _pow 13D8                            __CFG_BORV$27 000000  
                                   tosl 000FFD                                     wreg 000FE8  
                          ___flmul@cntr 0029                            ___flmul@sign 002A  
                          __CFG_LVP$OFF 000000                           ___flpack@sign 0008  
                                  RCREG 000FAE                            ___fltol@exp1 005E  
                          __CFG_WDT$OFF 000000                                    l1001 109C  
                                  l1002 11FA                                    SPBRG 000FAF  
                                  l3011 1608                                    l3013 1616  
                                  l3005 15E6                                    l3101 22E8  
                                  l3023 1646                                    l3015 161E  
                                  l3041 16B4                                    l3033 1686  
                                  l3025 1652                                    l3017 1624  
                                  l3113 208A                                    l3201 1E7C  
                                  l3051 1C1A                                    l3203 1E86  
                                  l3029 166E                                    l3053 1C24  
                                  l3223 1ED4                                    l3215 1EA4  
                                  l3151 1E28                                    l3143 1E0C  
                                  l3127 1DC2                                    l3081 1C94  
                                  l3065 1C4A                                    l3153 1E34  
                                  l3129 1DCE                                    l3307 16F8  
                                  l3235 243E                                    l3155 1E3A  
                                  l3147 1E1E                                    l3245 2488  
                                  l3077 1C7E                                    l3069 1C60  
                                  l3309 1704                                    l3165 25BA  
                                  l3253 261A                                    l3325 2356  
                                  l3413 1A52                                    l2551 2568  
                                  l3095 22B2                                    l3159 1E50  
                                  l3263 1FF2                                    l3327 2360  
                                  l3423 1A96                                    l3407 1A30  
                                  l3185 1852                                    l3281 2026  
                                  l3337 2382                                    l3329 2366  
                                  l3353 2418                                    l3345 23F4  
                                  l3433 1B14                                    l3425 1AB4  
                                  l3523 214A                                    l3507 212E  
                                  l3291 1A02                                    l3267 1FFC  
                                  l3363 100E                                    l3347 23FE  
                                  l3427 1ACA                                    l2565 2214  
                                  l3189 1870                                    l3277 2016  
                                  l3461 1480                                    l3533 1244  
                                  l3349 2404                                    l3391 11BA  
                                  l3455 141E                                    l3551 13AE  
                                  l3615 0D14                                    l3289 1968  
                                  l3393 11C4                                    l3369 1042  
                                  l3465 14AA                                    l3449 1406  
                                  l3545 137E                                    l3641 0F52  
                                  l3483 250A                                    l3459 1474  
                                  l2941 1CFA                                    l3549 13A4  
                                  l3637 0F1A                                    l3645 0F88  
                                  l3741 1BC2                                    l2951 1D4E  
                                  l2943 1D08                                    l3479 24F2  
                                  l3671 0AEE                                    l2953 1D5C  
                                  l2945 1D20                                    l3497 210A  
                                  l3657 06D8                                    l3667 0AB6  
                                  l3675 0B24                                    l3747 1BDA  
                                  l3677 0B2C                                    l3749 1BE0  
                                  l2991 15CA                                    l2975 23B4  
                                  l2985 15A0                                    TRISA 000F92  
                                  ?_exp 006E                                    ?_log 0047  
                                  TRISC 000F94                                    ?_isr 0001  
                                  ?_pow 00C1                                    STR_1 0655  
                                  STR_3 0658                                    STR_4 0672  
                                  STR_5 065B                                    STR_6 0661  
                                  STR_7 0667                                    STR_8 064D  
                                  STR_9 0658                                    TXREG 000FAD  
                                  _BRGH 007D62                                    _CREN 007D5C  
                                  _T0CS 007EAD                                    _T0SE 007EAC  
                                  u3020 185E                                    u2330 233A  
                                  _CCal 00EA                                    u2315 2312  
                                  u2316 2314                                    u2325 232A  
                                  u2326 232C                                    u3420 1474  
                                  u3508 1360                                    u3358 1A9A  
                                  u3528 138C                                    u2930 1DEE  
                                  _PEIE 007F96                                    u3388 1AD8  
                                  u3637 20F8                                    u3647 2110  
                                  u2935 1DE2                                    u3488 2176  
                                  u3489 218E                                    u3498 2194  
                                  u3499 21AC                                    _RCIF 007CF5  
                                  _TMR0 000FD6                                    _TMR2 000FCC  
                                  _SPEN 007D5F                                    _TXIE 007CEC  
                                  _TXIF 007CF4                                    _TXEN 007D65  
                                  _SYNC 007D64                            __CFG_PWRT$ON 000000  
                                  _bres 00EE                                    _main 1B1E  
                                  fsr2h 000FDA                                    indf2 000FDF  
                                  fsr2l 000FD9                                    exp@x 006E  
                                  log@x 0047                   __size_of_output_putch 000E  
                                  pow@x 00C1                                    pow@y 00C5  
            __end_of_measure_inductance 0B94                                    start 00DE  
                     _format_number$301 0032                            ___param_bank 000010  
                                 ??_exp 0072                                   ??_log 004B  
                                 ??_isr 0001                                   ??_pow 0072  
                         __CFG_OSCS$OFF 000000                           ___fltol@sign1 005D  
                       __end_of___fladd 16E8                                   ?_main 0001  
                       __end_of___fldiv 1F14                         __end_of___flneg 262E  
                                 STR_10 066D                                   STR_11 0658  
                       __end_of___flmul 1CE0                         __end_of___flsub 2476  
                       __end_of___fltol 1E66                                   _LATC3 007C5B  
                                 _LATC4 007C5C                                   _LATC5 007C5D  
                                 _LATC7 007C5F                         __end_of___lwdiv 2398  
                       __end_of___lwmod 242E                                   i2l132 00D0  
                                 i2l128 00A8                                   _RCREG 000FAE  
                                 _SPBRG 000FAF                                   _TRISA 000F92  
                                 _TRISC 000F94                                   _SSPEN 007E35  
                                 _TXREG 000FAD                           ___awtofl@sign 0011  
                         __CFG_STVR$OFF 000000                                   _log10 223C  
                                 _blink 00B4                                   _floor 1812  
                                 _ldexp 1FC0                                   _frexp 2066  
                          _output_putch 262E                                   _msecs 00A8  
                                 pclath 000FFA                                   tablat 000FF5  
                                 pow@yi 00D2                         format_number@di 0035  
                                 status 000FD8                         ??_print_reading 0005  
                           exp@exponent 00BE                             ldexp@newexp 004B  
                       __initialization 24B6                         format_putchar@c 0001  
                           log@exponent 004B                            __end_of_main 1C04  
                      format_double@num 00D6                           ?_measure_freq 0003  
                        __CFG_OSC$HSPLL 000000                  __size_of_format_double 01C8  
                                ??_main 0072                     format_double@weight 00E2  
                         __activetblptr 000002                  __size_of_format_number 0100  
                __size_of_format_xint32 006A                         __CFG_CCP2MUX$ON 000000  
                                ?_log10 004D                                  ?_floor 0064  
                                ?_ldexp 0047                                  ?_frexp 0003  
                      __end_of___altofl 23E6                        __end_of___flpack 1DB6  
                      __end_of___awtofl 24B6                        __end_of___lltofl 2556  
                                i2l2831 0060                                  i2l2827 004A  
                                i2l2837 0080                                  i2l2839 0082  
                      __end_of___lwtofl 25B6                                  _TMR0IF 007F92  
                                _TMR2IE 007CE9                                  _TMR2IF 007CF1  
                                _TMR2ON 007E52                                  _TRISC0 007CA0  
                                _TRISC1 007CA1                                  _TRISC2 007CA2  
                                _TRISC3 007CA3                                  _TRISC4 007CA4  
                                _TRISC5 007CA5                                  _TRISC6 007CA6  
                                ___flge 229A                               ??___fladd 0033  
                                ___wmul 2556                               ??___fldiv 0015  
                             ??___flneg 0007                               ??___flmul 0024  
                             ??___flsub 003F                               ??___fltol 0059  
                        ??_measure_freq 0005                               ??___lwdiv 0007  
                          ?_timer2_init 0001                               ??___lwmod 0007  
                                clear_0 24BC                                  log10@x 004D  
                                _rxfifo 0080                                  _txfifo 0090  
                                _rxiptr 0072                                  _rxoptr 0073  
                                floor@i 0068                                  _txiptr 0075  
                                floor@x 0064                                  _txoptr 0076  
                      __end_of_ser_init 260A                            __pdataCOMRAM 0077  
                      __end_of_ser_puts 2524                      timer2_init@ps_mode 0004  
                          __mediumconst 0000                                  tblptrh 000FF7  
                                tblptrl 000FF6                                  tblptru 000FF8  
                      format_number@buf 0012                        format_number@pad 000D  
                            ___fladd@f1 002B                              ___fladd@f2 002F  
                            ___flge@ff1 0003                              ___flge@ff2 0007  
                      __end_ofexp@coeff 0629                           _format_double 1210  
                      __end_oflog@coeff 064D                              ___altofl@c 005F  
                            ___fldiv@f1 0011                              ___fldiv@f2 000D  
                            ___fldiv@f3 0015                              __accesstop 0080  
               __end_of__initialization 24E4                              ___flneg@f1 0003  
                         _format_number 1A1E                           _format_xint32 2170  
                            ___flmul@f1 001C                              ___flmul@f2 0020  
                          eval_poly@res 0043                           ___rparam_used 000001  
                            ___flsub@f1 0037                              ___flsub@f2 003B  
                            ___fltol@f1 0055                              ___awtofl@c 000D  
                measure_capacitance@Cin 010F            __size_of_measure_capacitance 0462  
                measure_capacitance@var 010D                          __pcstackCOMRAM 0001  
                    __size_of_calibrate 00AC                              ___lltofl@c 000D  
                    __size_of_delay10ms 0062                           __end_of_log10 229A  
                         __end_of_floor 1918                           __end_of_ldexp 2066  
                         __end_of_frexp 20EC                              ___lwtofl@c 000D  
                               ??_log10 0051                                 ??_floor 0068  
                               ??_ldexp 004D                                 ??_frexp 0009  
                            __pbssBANK0 0080                          ?_format_double 00D6  
                    __size_of_eval_poly 0106                      __size_of_indicator 0006  
               __size_of_format_putchar 0006                          ?_format_number 000A  
                        ?_format_xint32 0037                          print_unit@unit 0001  
                               ?___flge 0003                                 ?___wmul 0003  
                             ?___altofl 005F                               ?___flpack 0003  
                             ?___awtofl 000D                               ?___lltofl 000D  
                    _measure_inductance 0678                      __size_of_ser_putch 002C  
                               _T2CKPS0 007E50                                 _T2CKPS1 007E51  
                             ?___lwtofl 000D                     ?_measure_inductance 0001  
                     __end_of_calibrate 1FC0                                 _TOUTPS0 007E53  
                               _TOUTPS1 007E54                                 _TOUTPS2 007E55  
                     __end_of_delay10ms 223C                    __end_of_measure_freq 2170  
                               __Hparam 0000                                 __Lparam 0000  
                             ?_ser_init 0001                    ??_measure_inductance 005F  
                             ?_ser_puts 0004                         __size_of___flge 0056  
                               ___fladd 156A                                 ___fldiv 1E66  
                               ___flneg 260A                                 ___flmul 1C04  
                               ___flsub 242E                                 ___fltol 1DB6  
                       __size_of___wmul 0032                                 ___lwdiv 2344  
                               ___lwmod 23E6                            __psmallconst 0600  
                            ??___altofl 0063                              ??___flpack 0009  
                               _exp$940 00BA                                 __pcinit 24B6  
                            ??___awtofl 0011                       __end_of_eval_poly 1A1E  
                               __ramtop 0600                       __end_of_indicator 2654  
                            ??___lltofl 0011                                 __ptext0 1B1E  
                               __ptext1 22F0                                 __ptext2 25E2  
                               __ptext3 0678                                 __ptext4 0B94  
                               __ptext5 263C                                 __ptext6 2642  
                               __ptext7 2170                                 __ptext8 1A1E  
                               __ptext9 23E6                    __size_of_timer2_init 0054  
                            ??___lwtofl 0011                                 _pow$938 00C9  
                               _pow$939 00CD                            __size_of_exp 021A  
                          __size_of_log 012A                            __size_of_isr 00D6  
                          __size_of_pow 0192                                 _seconds 00AC  
                               _ser_tmp 0074                         ??_format_double 0072  
                  end_of_initialization 24E4                         ??_format_number 000E  
                       ??_format_xint32 003B                                 exp@sign 00C0  
                         __Lmediumconst 0000                       __end_of_ser_putch 25E2  
                               pow@sign 00D1           measure_inductance@denominator 00BE  
                 __end_of_print_reading 2648                              ??_ser_init 0003  
                            ??_ser_puts 0006                       format_number@base 000C  
                               postdec2 000FDD                                 postinc0 000FEE  
                               postinc2 000FDE                              _print_unit 263C  
                   _measure_capacitance 0B94                             ___fldiv@exp 001A  
                        _format_putchar 2648                             ___flmul@exp 0024  
                  ?_measure_capacitance 0001                 measure_capacitance@unit 010C  
                        format_double@m 00E8                  measure_inductance@unit 00D2  
                        __end_of___flge 22F0                          __end_of___wmul 2588  
                         __pidataCOMRAM 2654                              floor@expon 006C  
                        format_number@i 0036                          format_number@n 000A  
                        format_xint32@x 0037                     start_initialization 24B6  
                            eval_poly@d 003B                              eval_poly@n 003D  
                            eval_poly@x 0037                   __size_of_measure_freq 0084  
                            ldexp@value 0047                             __end_of_exp 1210  
                           __end_of_log 1812                             __end_of_isr 00DE  
                           __end_of_pow 156A                  __end_of_format_putchar 264E  
                    format_double@digit 00E6                              frexp@value 0003  
                 ??_measure_capacitance 0072                                ??___flge 000B  
                              ??___wmul 0007                            _measure_freq 20EC  
                          delay10ms@run 000F                  _measure_inductance$930 00C6  
                _measure_inductance$931 00CA                  _measure_inductance$932 00CE  
                _measure_inductance$926 00C2                  _measure_inductance$927 00D3  
                _measure_inductance$928 00D7                  _measure_inductance$929 00DB  
              print_reading@measurement 0003                       __size_of___altofl 004E  
                     __size_of___flpack 00D6                       __size_of___awtofl 0040  
                           ?_print_unit 0001                       __size_of___lltofl 0032  
                           __pbssCOMRAM 0072                       __size_of___lwtofl 002E  
                         __pcstackBANK0 00BA                           __pcstackBANK1 0100  
                         ?_output_putch 0001                         ?_format_putchar 0001  
                     measure_freq@count 0009                               _calibrate 1F14  
                             _delay10ms 21DA                               _log10$937 0051  
                             __pnvBANK0 00EA                        ___lwdiv@dividend 0003  
                             __pintcode 0008                                ?___fladd 002B  
                              ?___fldiv 000D                                ?___flneg 0003  
                              ?___flmul 001C                                ?___flsub 0037  
                              ?___fltol 0055                       __size_of_ser_init 0028  
                              ?___lwdiv 0003                                ?___lwmod 0003  
                     __size_of_ser_puts 0036                             __smallconst 0600  
                             _eval_poly 1918                           output_putch@c 0003  
                             _indicator 264E                          ??_output_putch 0003  
                      ___lwdiv@quotient 0008                          __size_of_log10 005E  
                        __size_of_floor 0106                          __size_of_ldexp 00A6  
                        __size_of_frexp 0086                              ?_calibrate 0001  
                        ___wmul@product 0007                              ser_putch@c 0003  
                            ?_delay10ms 0009                           measure_freq@i 0008  
                   __size_of_print_unit 0006                                i2u245_40 0048  
                             _ser_putch 25B6             __size_of_measure_inductance 051C  
                              _NOT_RBPU 007F8F                           ??_timer2_init 0003  
                     indicator@indicate 0001                       ___wmul@multiplier 0003  
                            ?_eval_poly 0037                              ?_indicator 0001  
                 measure_inductance@Lin 00E1                   measure_inductance@var 00DF  
                 __end_of_format_double 13D8                    format_number@padchar 0034  
                 __end_of_format_number 1B1E                   __end_of_format_xint32 21DA  
                             frexp@eptr 0007                                __Hrparam 0000  
                              __Lrparam 0000                              ?_ser_putch 0001  
                           delay10ms@ms 000B                        __size_of___fladd 017E  
                      __size_of___fldiv 00AE                        __size_of___flneg 0024  
                      __size_of___flmul 00DC                        __size_of___flsub 0048  
                      __size_of___fltol 00B0                                ___altofl 2398  
                              ___flpack 1CE0                        __size_of___lwdiv 0054  
                      __size_of___lwmod 0048                                ___awtofl 2476  
                              ___lltofl 2524                           timer2_init@ps 0005  
                              ___lwtofl 2588                        measure_freq@prev 0007  
                   __end_of_timer2_init 2344                         ___lwdiv@divisor 0005  
                       ___lwdiv@counter 0007                  __size_of_print_reading 0006  
                              __ptext10 2344                                __ptext11 1210  
                              __ptext20 260A                                __ptext12 13D8  
                              __ptext21 1E66                                __ptext13 0FF6  
                              __ptext30 1C04                                __ptext22 2524  
                              __ptext14 1FC0                                __ptext31 156A  
                              __ptext23 2648                                __ptext15 1812  
                              __ptext40 1CE0                                __ptext32 2476  
                              __ptext24 25B6                                __ptext16 1DB6  
                              __ptext33 264E                                __ptext25 262E  
                              __ptext17 229A                                __ptext34 1F14  
                              __ptext26 223C                                __ptext18 2398  
                              __ptext35 24EE                                __ptext27 16E8  
                              __ptext19 242E                                __ptext36 20EC  
                              __ptext28 2066                                __ptext37 21DA  
                              __ptext29 1918                                __ptext38 2556  
                              __ptext39 2588                             ??_calibrate 0011  
                         __size_of_main 00E6                             ??_delay10ms 000B  
                             ser_puts@s 0004                                _msecpart 00F0  
                              _ser_init 25E2                                _ser_puts 24EE  
                              _timer1of 00B0                    __end_of_output_putch 263C  
                              exp@coeff 0601                   ___flmul@f3_as_product 0025  
                              log@coeff 0629             measure_inductance@numerator 00BA  
                      ??_format_putchar 0003                            ??_print_unit 0003  
                           ??_eval_poly 003F                             ??_indicator 0003  
                              intlevel2 2656             __end_of_measure_capacitance 0FF6  
                      ___lwmod@dividend 0003                             ??_ser_putch 0003  
                    __end_of_print_unit 2642                           _print_reading 2642  
                  delay10ms@period_10ms 0009                             _timer2_init 22F0  
                       ___lwmod@divisor 0005                         ___lwmod@counter 0007  
                     _format_double$935 00DA                       _format_double$936 00DE  
               _measure_capacitance$923 0100                 _measure_capacitance$924 0104  
               _measure_capacitance$925 0108                            ___fladd@exp1 0036  
                          ___fladd@exp2 0035                            ___fladd@sign 0034  
                        ?_print_reading 0003  
