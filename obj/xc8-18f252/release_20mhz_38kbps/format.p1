Version 3.2 HI-TECH Software Intermediate Code
"30 lib/buffer.h
[v _buffer_putch `(uc ~T0 @X0 0 ef1`uc ]
"44 /opt/microchip/xc8/v1.45/include/math.h
[v _log10 `(d ~T0 @X0 0 ef1`d ]
"45
[v _pow `(d ~T0 @X0 0 ef2`d`d ]
"31
[v _floor `(d ~T0 @X0 0 ef1`d ]
[; ;stdint.h: 13: typedef signed char int8_t;
[; ;stdint.h: 20: typedef signed int int16_t;
[; ;stdint.h: 28: typedef signed short long int int24_t;
[; ;stdint.h: 36: typedef signed long int int32_t;
[; ;stdint.h: 43: typedef unsigned char uint8_t;
[; ;stdint.h: 49: typedef unsigned int uint16_t;
[; ;stdint.h: 56: typedef unsigned short long int uint24_t;
[; ;stdint.h: 63: typedef unsigned long int uint32_t;
[; ;stdint.h: 71: typedef signed char int_least8_t;
[; ;stdint.h: 78: typedef signed int int_least16_t;
[; ;stdint.h: 90: typedef signed short long int int_least24_t;
[; ;stdint.h: 98: typedef signed long int int_least32_t;
[; ;stdint.h: 105: typedef unsigned char uint_least8_t;
[; ;stdint.h: 111: typedef unsigned int uint_least16_t;
[; ;stdint.h: 121: typedef unsigned short long int uint_least24_t;
[; ;stdint.h: 128: typedef unsigned long int uint_least32_t;
[; ;stdint.h: 137: typedef signed char int_fast8_t;
[; ;stdint.h: 144: typedef signed int int_fast16_t;
[; ;stdint.h: 156: typedef signed short long int int_fast24_t;
[; ;stdint.h: 164: typedef signed long int int_fast32_t;
[; ;stdint.h: 171: typedef unsigned char uint_fast8_t;
[; ;stdint.h: 177: typedef unsigned int uint_fast16_t;
[; ;stdint.h: 187: typedef unsigned short long int uint_fast24_t;
[; ;stdint.h: 194: typedef unsigned long int uint_fast32_t;
[; ;stdint.h: 200: typedef int32_t intmax_t;
[; ;stdint.h: 205: typedef uint32_t uintmax_t;
[; ;stdint.h: 210: typedef int16_t intptr_t;
[; ;stdint.h: 215: typedef uint16_t uintptr_t;
[; ;typedef.h: 53: typedef char BOOL;
[; ;format.h: 6: void format_number(uint16_t n, uint8_t base, int8_t pad);
[; ;format.h: 7: void format_xint32(uint32_t x);
[; ;format.h: 8: void format_double(double num);
[; ;buffer.h: 12: typedef uint8_t len_t;
[; ;buffer.h: 14: typedef struct {
[; ;buffer.h: 15: char x[16];
[; ;buffer.h: 16: unsigned p : 4;
[; ;buffer.h: 17: unsigned n : 4;
[; ;buffer.h: 18: } buffer_t;
[; ;buffer.h: 26: extern buffer_t buffer;
[; ;buffer.h: 28: void buffer_init(void);
[; ;buffer.h: 29: char buffer_flush(void);
[; ;buffer.h: 30: char buffer_putch(char ch);
[; ;buffer.h: 31: char buffer_put(const char* x, len_t len);
[; ;buffer.h: 32: char buffer_puts(const char* x);
[; ;math.h: 30: extern double fabs(double);
[; ;math.h: 31: extern double floor(double);
[; ;math.h: 32: extern double ceil(double);
[; ;math.h: 33: extern double modf(double, double *);
[; ;math.h: 34: extern double sqrt(double);
[; ;math.h: 35: extern double atof(const char *);
[; ;math.h: 36: extern double sin(double) ;
[; ;math.h: 37: extern double cos(double) ;
[; ;math.h: 38: extern double tan(double) ;
[; ;math.h: 39: extern double asin(double) ;
[; ;math.h: 40: extern double acos(double) ;
[; ;math.h: 41: extern double atan(double);
[; ;math.h: 42: extern double atan2(double, double) ;
[; ;math.h: 43: extern double log(double);
[; ;math.h: 44: extern double log10(double);
[; ;math.h: 45: extern double pow(double, double) ;
[; ;math.h: 46: extern double exp(double) ;
[; ;math.h: 47: extern double sinh(double) ;
[; ;math.h: 48: extern double cosh(double) ;
[; ;math.h: 49: extern double tanh(double);
[; ;math.h: 50: extern double eval_poly(double, const double *, int);
[; ;math.h: 51: extern double frexp(double, int *);
[; ;math.h: 52: extern double ldexp(double, int);
[; ;math.h: 53: extern double fmod(double, double);
[; ;math.h: 54: extern double trunc(double);
[; ;math.h: 55: extern double round(double);
"11 lib/format.c
[v _format_putchar `(v ~T0 @X0 1 sf1`uc ]
{
[; ;format.c: 10: static void
[; ;format.c: 11: format_putchar(char c) {
[e :U _format_putchar ]
[v _c `uc ~T0 @X0 1 r1 ]
[f ]
[; ;format.c: 12: return;
"12
[e $UE 2  ]
[; ;format.c: 13: }
"13
[e :UE 2 ]
}
"19
[v _format_number `(v ~T0 @X0 1 ef3`ui`uc`c ]
{
[; ;format.c: 18: void
[; ;format.c: 19: format_number(uint16_t n, uint8_t base, int8_t pad ) {
[e :U _format_number ]
[v _n `ui ~T0 @X0 1 r1 ]
[v _base `uc ~T0 @X0 1 r2 ]
[v _pad `c ~T0 @X0 1 r3 ]
[f ]
"20
[v _buf `uc ~T0 @X0 * -> -> 8 `i `ui -> # `l `ui a ]
"21
[v _di `uc ~T0 @X0 1 a ]
"22
[v _i `c ~T0 @X0 1 a ]
[; ;format.c: 20: char buf[8 * sizeof(long)];
[; ;format.c: 21: uint8_t di;
[; ;format.c: 22: int8_t i = 0;
[e = _i -> -> 0 `i `c ]
"23
[v _padchar `uc ~T0 @X0 1 a ]
[; ;format.c: 23: char padchar = ' ';
[e = _padchar -> -> 32 `ui `uc ]
[; ;format.c: 25: if(pad < 0) {
"25
[e $ ! < -> _pad `i -> 0 `i 4  ]
{
[; ;format.c: 26: pad = -pad;
"26
[e = _pad -> -U -> _pad `i `c ]
[; ;format.c: 27: padchar = '0';
"27
[e = _padchar -> -> 48 `ui `uc ]
"28
}
[e :U 4 ]
[; ;format.c: 28: }
[; ;format.c: 35: do {
"35
[e :U 7 ]
{
[; ;format.c: 39: di = n % base;
"39
[e = _di -> % _n -> _base `ui `uc ]
[; ;format.c: 40: buf[i++] = (di < 10 ? (uint8_t)'0' + di : (uint8_t)'A' + di - 10);
"40
[e = *U + &U _buf * -> -> ++ _i -> -> 1 `i `c `uc `ux -> -> # *U &U _buf `ui `ux -> ? < -> _di `i -> 10 `i : + -> -> -> 48 `ui `uc `i -> _di `i - + -> -> -> 65 `ui `uc `i -> _di `i -> 10 `i `uc ]
[; ;format.c: 42: n /= base;
"42
[e =/ _n -> _base `ui ]
"43
}
[; ;format.c: 43: } while(n > 0);
[e $ > _n -> -> 0 `i `ui 7  ]
[e :U 6 ]
[; ;format.c: 45: while(pad-- > i) buffer_putch(padchar);
"45
[e $U 8  ]
[e :U 9 ]
[e ( _buffer_putch (1 _padchar ]
[e :U 8 ]
[e $ > -> -- _pad -> -> 1 `i `c `i -> _i `i 9  ]
[e :U 10 ]
[; ;format.c: 47: for(; i > 0; i--) {
"47
{
[e $ > -> _i `i -> 0 `i 11  ]
[e $U 12  ]
[e :U 11 ]
{
[; ;format.c: 48: buffer_putch((char)buf[(int16_t)i - 1]);
"48
[e ( _buffer_putch (1 *U + &U _buf * -> -> - -> _i `i -> 1 `i `ui `ux -> -> # *U &U _buf `ui `ux ]
"50
}
"47
[e -- _i -> -> 1 `i `c ]
[e $ > -> _i `i -> 0 `i 11  ]
[e :U 12 ]
"50
}
[; ;format.c: 50: }
[; ;format.c: 51: }
"51
[e :UE 3 ]
}
"55
[v _format_xint32 `(v ~T0 @X0 1 ef1`ul ]
{
[; ;format.c: 54: void
[; ;format.c: 55: format_xint32( uint32_t x) {
[e :U _format_xint32 ]
[v _x `ul ~T0 @X0 1 r1 ]
[f ]
[; ;format.c: 56: buffer_putch('0');
"56
[e ( _buffer_putch (1 -> -> 48 `ui `uc ]
[; ;format.c: 57: buffer_putch('x');
"57
[e ( _buffer_putch (1 -> -> 120 `ui `uc ]
[; ;format.c: 58: format_number((uint16_t)(x >> 16), 16, -4);
"58
[e ( _format_number (3 , , -> >> _x -> 16 `i `ui -> -> 16 `i `uc -> -U -> 4 `i `c ]
[; ;format.c: 59: format_number((uint16_t)(x & 0xffff), 16, -4);
"59
[e ( _format_number (3 , , -> & _x -> -> 65535 `ui `ul `ui -> -> 16 `i `uc -> -U -> 4 `i `c ]
[; ;format.c: 60: }
"60
[e :UE 14 ]
}
"63
[v _format_float `(v ~T0 @X0 1 ef1`f ]
{
[; ;format.c: 62: void
[; ;format.c: 63: format_float( float num) {
[e :U _format_float ]
[v _num `f ~T0 @X0 1 r1 ]
[f ]
"64
[v _m `s ~T0 @X0 1 a ]
[; ;format.c: 64: short m = (int)log10(num);
[e = _m -> -> ( _log10 (1 -> _num `d `i `s ]
"65
[v _digit `uc ~T0 @X0 1 a ]
[; ;format.c: 65: char digit;
[; ;format.c: 68: while(num > 0 + (1.19209290e-07)) {
"68
[e $U 16  ]
[e :U 17 ]
{
"69
[v _weight `f ~T0 @X0 1 a ]
[; ;format.c: 69: float weight = pow(10.0l, m);
[e = _weight -> ( _pow (2 , .10.0 -> _m `d `f ]
[; ;format.c: 70: digit = (char)floor(num / weight);
"70
[e = _digit -> ( _floor (1 -> / _num _weight `d `uc ]
[; ;format.c: 71: num -= (digit * weight);
"71
[e =- _num * -> _digit `f _weight ]
[; ;format.c: 72: buffer_putch('0' + digit);
"72
[e ( _buffer_putch (1 -> + -> 48 `ui -> _digit `ui `uc ]
[; ;format.c: 73: if(m == 0)
"73
[e $ ! == -> _m `i -> 0 `i 19  ]
[; ;format.c: 74: buffer_putch('.');
"74
[e ( _buffer_putch (1 -> -> 46 `ui `uc ]
[e :U 19 ]
[; ;format.c: 75: m--;
"75
[e -- _m -> -> 1 `i `s ]
"76
}
[e :U 16 ]
"68
[e $ > -> _num `d + -> -> 0 `i `d .1.19209290e-07 17  ]
[e :U 18 ]
[; ;format.c: 76: }
[; ;format.c: 77: }
"77
[e :UE 15 ]
}
"81
[v _format_double `(v ~T0 @X0 1 ef1`d ]
{
[; ;format.c: 80: void
[; ;format.c: 81: format_double(double num) {
[e :U _format_double ]
[v _num `d ~T0 @X0 1 r1 ]
[f ]
"82
[v _m `s ~T0 @X0 1 a ]
[; ;format.c: 82: short m = (short)log10(num);
[e = _m -> ( _log10 (1 _num `s ]
"83
[v _digit `s ~T0 @X0 1 a ]
[; ;format.c: 83: short digit;
[; ;format.c: 86: while(num > 0 + (1.19209290e-07)) {
"86
[e $U 21  ]
[e :U 22 ]
{
"87
[v _weight `d ~T0 @X0 1 a ]
[; ;format.c: 87: double weight = pow(10.0l, m);
[e = _weight ( _pow (2 , .10.0 -> _m `d ]
[; ;format.c: 88: digit = (short)floor(num / weight);
"88
[e = _digit -> ( _floor (1 / _num _weight `s ]
[; ;format.c: 89: num -= (digit * weight);
"89
[e =- _num * -> _digit `d _weight ]
[; ;format.c: 90: buffer_putch((char)('0' + digit));
"90
[e ( _buffer_putch (1 -> + -> 48 `ui -> _digit `ui `uc ]
[; ;format.c: 91: if(m == 0)
"91
[e $ ! == -> _m `i -> 0 `i 24  ]
[; ;format.c: 92: buffer_putch('.');
"92
[e ( _buffer_putch (1 -> -> 46 `ui `uc ]
[e :U 24 ]
[; ;format.c: 93: m--;
"93
[e -- _m -> -> 1 `i `s ]
"94
}
[e :U 21 ]
"86
[e $ > _num + -> -> 0 `i `d .1.19209290e-07 22  ]
[e :U 23 ]
[; ;format.c: 94: }
[; ;format.c: 95: }
"95
[e :UE 20 ]
}
