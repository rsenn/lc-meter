gpasm-1.5.0 #1285 (Jul 12 2020) obj/sdcc-18f2   11/12/23  13:12:41          PAGE  1


LOC    OBJECT CODE    LINE  SOURCE TEXT
  VALUE

                      00001 ;--------------------------------------------------------
                      00002 ; File Created by SDCC : free open source ANSI-C Compiler
                      00003 ; Version 4.2.0 #13081 (Linux)
                      00004 ;--------------------------------------------------------
                      00005 ; PIC16 port for the Microchip 16-bit core micros
                      00006 ;--------------------------------------------------------
                      00007         list    p=18f25k50
                      00008         radix   dec
                      00009 
                      00010 
                      00011 ;--------------------------------------------------------
                      00012 ; public variables in this module
                      00013 ;--------------------------------------------------------
  0000                00014         global  _buffer_init
  0000                00015         global  _buffer_flush
  0000                00016         global  _buffer_putc
  0000                00017         global  _buffer_putch
  0000                00018         global  _buffer_put
  0000                00019         global  _buffer_puts
  0000                00020         global  _buffer
                      00021 
                      00022 ;--------------------------------------------------------
                      00023 ; extern variables in this module
                      00024 ;--------------------------------------------------------
  0000                00025         extern  __gptrget1
                      00026 
                      00027 ;--------------------------------------------------------
                      00028 ;       Equates to used internal registers
                      00029 ;--------------------------------------------------------
  00000FD8            00030 STATUS  equ     0xfd8
  00000FE8            00031 WREG    equ     0xfe8
  00000FE9            00032 FSR0L   equ     0xfe9
  00000FEA            00033 FSR0H   equ     0xfea
  00000FE1            00034 FSR1L   equ     0xfe1
  00000FD9            00035 FSR2L   equ     0xfd9
  00000FEF            00036 INDF0   equ     0xfef
  00000FE6            00037 POSTINC1        equ     0xfe6
  00000FE5            00038 POSTDEC1        equ     0xfe5
  00000FE4            00039 PREINC1 equ     0xfe4
  00000FDB            00040 PLUSW2  equ     0xfdb
  00000FF3            00041 PRODL   equ     0xff3
  00000FF4            00042 PRODH   equ     0xff4
                      00043 
                      00044 
                      00045 ; Internal registers
                      00046 .registers      udata_ovr       0x0000
000000                00047 r0x00   res     1
000001                00048 r0x01   res     1
000002                00049 r0x02   res     1
000003                00050 r0x03   res     1
000004                00051 r0x04   res     1
000005                00052 r0x05   res     1
000006                00053 r0x06   res     1
gpasm-1.5.0 #1285 (Jul 12 2020) obj/sdcc-18f2   11/12/23  13:12:41          PAGE  2


LOC    OBJECT CODE    LINE  SOURCE TEXT
  VALUE

000007                00054 r0x07   res     1
000008                00055 r0x08   res     1
000009                00056 r0x09   res     1
                      00057 
                      00058 udata_buffer_0  udata
000000                00059 _buffer res     17
                      00060 
                      00061 ;--------------------------------------------------------
                      00062 ; global & static initialisations
                      00063 ;--------------------------------------------------------
                      00064 ; I code from now on!
                      00065 ; ; Starting pCode block
                      00066 S_buffer__buffer_puts   code
000000                00067 _buffer_puts:
                      00068 ;       .line   61; lib/buffer.c        buffer_puts(const char* x) {
000000 CFD9 FFE5      00069         MOVFF   FSR2L, POSTDEC1
000004 CFE1 FFD9      00070         MOVFF   FSR1L, FSR2L
000008 C??? F???      00071         MOVFF   r0x00, POSTDEC1
00000C C??? F???      00072         MOVFF   r0x01, POSTDEC1
000010 C??? F???      00073         MOVFF   r0x02, POSTDEC1
000014 C??? F???      00074         MOVFF   r0x03, POSTDEC1
000018 0E02           00075         MOVLW   0x02
00001A CFDB F000      00076         MOVFF   PLUSW2, r0x00
00001E 0E03           00077         MOVLW   0x03
000020 CFDB F000      00078         MOVFF   PLUSW2, r0x01
000024 0E04           00079         MOVLW   0x04
000026 CFDB F000      00080         MOVFF   PLUSW2, r0x02
00002A                00081 _00160_DS_:
                      00082 ;       .line   62; lib/buffer.c        while(*x) {
00002A C??? F???      00083         MOVFF   r0x00, FSR0L
00002E C??? F???      00084         MOVFF   r0x01, PRODL
000032 50??           00085         MOVF    r0x02, W
000034 EC?? F0??      00086         CALL    __gptrget1
000038 6E??           00087         MOVWF   r0x03
00003A 50??           00088         MOVF    r0x03, W
00003C E0??           00089         BZ      _00162_DS_
                      00090 ;       .line   63; lib/buffer.c        buffer_putch(*x);
00003E 50??           00091         MOVF    r0x03, W
000040 6EE5           00092         MOVWF   POSTDEC1
000042 EC?? F0??      00093         CALL    _buffer_putch
000046 52E6           00094         MOVF    POSTINC1, F
                      00095 ;       .line   64; lib/buffer.c        ++x;
000048 2A??           00096         INCF    r0x00, F
00004A E3??           00097         BNC     _00160_DS_
00004C 4A??           00098         INFSNZ  r0x01, F
00004E 2A??           00099         INCF    r0x02, F
000050                00100 _00174_DS_:
000050 D???           00101         BRA     _00160_DS_
000052                00102 _00162_DS_:
                      00103 ;       .line   66; lib/buffer.c        return 0;
000052 6AE8           00104         CLRF    WREG
                      00105 ;       .line   67; lib/buffer.c        }
000054 CFE4 F000      00106         MOVFF   PREINC1, r0x03
gpasm-1.5.0 #1285 (Jul 12 2020) obj/sdcc-18f2   11/12/23  13:12:41          PAGE  3


LOC    OBJECT CODE    LINE  SOURCE TEXT
  VALUE

000058 CFE4 F000      00107         MOVFF   PREINC1, r0x02
00005C CFE4 F000      00108         MOVFF   PREINC1, r0x01
000060 CFE4 F000      00109         MOVFF   PREINC1, r0x00
000064 CFE4 FFD9      00110         MOVFF   PREINC1, FSR2L
000068 0012           00111         RETURN  
                      00112 
                      00113 ; ; Starting pCode block
                      00114 S_buffer__buffer_put    code
000000                00115 _buffer_put:
                      00116 ;       .line   44; lib/buffer.c        buffer_put(const char* buf, len_t len) {
000000 CFD9 FFE5      00117         MOVFF   FSR2L, POSTDEC1
000004 CFE1 FFD9      00118         MOVFF   FSR1L, FSR2L
000008 C??? F???      00119         MOVFF   r0x00, POSTDEC1
00000C C??? F???      00120         MOVFF   r0x01, POSTDEC1
000010 C??? F???      00121         MOVFF   r0x02, POSTDEC1
000014 C??? F???      00122         MOVFF   r0x03, POSTDEC1
000018 C??? F???      00123         MOVFF   r0x04, POSTDEC1
00001C C??? F???      00124         MOVFF   r0x05, POSTDEC1
000020 C??? F???      00125         MOVFF   r0x06, POSTDEC1
000024 C??? F???      00126         MOVFF   r0x07, POSTDEC1
000028 C??? F???      00127         MOVFF   r0x08, POSTDEC1
00002C C??? F???      00128         MOVFF   r0x09, POSTDEC1
000030 0E02           00129         MOVLW   0x02
000032 CFDB F000      00130         MOVFF   PLUSW2, r0x00
000036 0E03           00131         MOVLW   0x03
000038 CFDB F000      00132         MOVFF   PLUSW2, r0x01
00003C 0E04           00133         MOVLW   0x04
00003E CFDB F000      00134         MOVFF   PLUSW2, r0x02
000042 0E05           00135         MOVLW   0x05
000044 CFDB F000      00136         MOVFF   PLUSW2, r0x03
000048 010?           00137         BANKSEL (_buffer + 16)
                      00138 ;       .line   46; lib/buffer.c        if(len > BUFFER_SIZE - buffer.n) // doesn't fit
00004A 51??           00139         MOVF    (_buffer + 16), W, B
00004C 38E8           00140         SWAPF   WREG, W
00004E 0B0F           00141         ANDLW   0x0f
000050 6E??           00142         MOVWF   r0x04
000052 6A??           00143         CLRF    r0x05
000054 50??           00144         MOVF    r0x04, W
000056 0810           00145         SUBLW   0x10
000058 6E??           00146         MOVWF   r0x04
00005A 0E00           00147         MOVLW   0x00
00005C 56??           00148         SUBFWB  r0x05, F
00005E C??? F???      00149         MOVFF   r0x03, r0x06
000062 6A??           00150         CLRF    r0x07
000064 50??           00151         MOVF    r0x05, W
000066 0F80           00152         ADDLW   0x80
000068 6EF3           00153         MOVWF   PRODL
00006A 50??           00154         MOVF    r0x07, W
00006C 0F80           00155         ADDLW   0x80
00006E 5CF3           00156         SUBWF   PRODL, W
000070 E1??           00157         BNZ     _00154_DS_
000072 50??           00158         MOVF    r0x06, W
000074 5C??           00159         SUBWF   r0x04, W
gpasm-1.5.0 #1285 (Jul 12 2020) obj/sdcc-18f2   11/12/23  13:12:41          PAGE  4


LOC    OBJECT CODE    LINE  SOURCE TEXT
  VALUE

000076                00160 _00154_DS_:
000076 E2??           00161         BC      _00143_DS_
                      00162 ;       .line   47; lib/buffer.c        return -1;
000078 68E8           00163         SETF    WREG
00007A D???           00164         BRA     _00139_DS_
00007C                00165 _00143_DS_:
                      00166 ;       .line   48; lib/buffer.c        for(i = 0; i < len; i++) buffer.x[buffer.n + i] = buf[i];
00007C 6A??           00167         CLRF    r0x04
00007E                00168 _00137_DS_:
00007E 50??           00169         MOVF    r0x03, W
000080 5C??           00170         SUBWF   r0x04, W
000082 E2??           00171         BC      _00135_DS_
000084 010?           00172         BANKSEL (_buffer + 16)
000086 51??           00173         MOVF    (_buffer + 16), W, B
000088 38E8           00174         SWAPF   WREG, W
00008A 0B0F           00175         ANDLW   0x0f
00008C 6E??           00176         MOVWF   r0x05
00008E 50??           00177         MOVF    r0x04, W
000090 6E??           00178         MOVWF   r0x06
000092 50??           00179         MOVF    r0x06, W
000094 26??           00180         ADDWF   r0x05, F
000096 6A??           00181         CLRF    r0x06
000098 BE??           00182         BTFSC   r0x05, 7
00009A 68??           00183         SETF    r0x06
00009C 0E??           00184         MOVLW   LOW(_buffer)
00009E 26??           00185         ADDWF   r0x05, F
0000A0 0E??           00186         MOVLW   HIGH(_buffer)
0000A2 22??           00187         ADDWFC  r0x06, F
0000A4 50??           00188         MOVF    r0x04, W
0000A6 24??           00189         ADDWF   r0x00, W
0000A8 6E??           00190         MOVWF   r0x07
0000AA 6AE8           00191         CLRF    WREG
0000AC 20??           00192         ADDWFC  r0x01, W
0000AE 6E??           00193         MOVWF   r0x08
0000B0 6AE8           00194         CLRF    WREG
0000B2 20??           00195         ADDWFC  r0x02, W
0000B4 6E??           00196         MOVWF   r0x09
0000B6 C??? F???      00197         MOVFF   r0x07, FSR0L
0000BA C??? F???      00198         MOVFF   r0x08, PRODL
0000BE 50??           00199         MOVF    r0x09, W
0000C0 EC?? F0??      00200         CALL    __gptrget1
0000C4 6E??           00201         MOVWF   r0x07
0000C6 C??? F???      00202         MOVFF   r0x05, FSR0L
0000CA C??? F???      00203         MOVFF   r0x06, FSR0H
0000CE C??? F???      00204         MOVFF   r0x07, INDF0
0000D2 2A??           00205         INCF    r0x04, F
0000D4 D???           00206         BRA     _00137_DS_
0000D6                00207 _00135_DS_:
0000D6 010?           00208         BANKSEL (_buffer + 16)
                      00209 ;       .line   49; lib/buffer.c        buffer.n += len;
0000D8 51??           00210         MOVF    (_buffer + 16), W, B
0000DA 38E8           00211         SWAPF   WREG, W
0000DC 0B0F           00212         ANDLW   0x0f
gpasm-1.5.0 #1285 (Jul 12 2020) obj/sdcc-18f2   11/12/23  13:12:41          PAGE  5


LOC    OBJECT CODE    LINE  SOURCE TEXT
  VALUE

0000DE 6E??           00213         MOVWF   r0x00
0000E0 50??           00214         MOVF    r0x00, W
0000E2 26??           00215         ADDWF   r0x03, F
0000E4 50??           00216         MOVF    r0x03, W
0000E6 0B0F           00217         ANDLW   0x0f
0000E8 38E8           00218         SWAPF   WREG, W
0000EA 6EF4           00219         MOVWF   PRODH
0000EC 010?           00220         BANKSEL (_buffer + 16)
0000EE 51??           00221         MOVF    (_buffer + 16), W, B
0000F0 0B0F           00222         ANDLW   0x0f
0000F2 10F4           00223         IORWF   PRODH, W
0000F4 010?           00224         BANKSEL (_buffer + 16)
0000F6 6F??           00225         MOVWF   (_buffer + 16), B
                      00226 ;       .line   50; lib/buffer.c        return 0;
0000F8 6AE8           00227         CLRF    WREG
0000FA                00228 _00139_DS_:
                      00229 ;       .line   51; lib/buffer.c        }
0000FA CFE4 F000      00230         MOVFF   PREINC1, r0x09
0000FE CFE4 F000      00231         MOVFF   PREINC1, r0x08
000102 CFE4 F000      00232         MOVFF   PREINC1, r0x07
000106 CFE4 F000      00233         MOVFF   PREINC1, r0x06
00010A CFE4 F000      00234         MOVFF   PREINC1, r0x05
00010E CFE4 F000      00235         MOVFF   PREINC1, r0x04
000112 CFE4 F000      00236         MOVFF   PREINC1, r0x03
000116 CFE4 F000      00237         MOVFF   PREINC1, r0x02
00011A CFE4 F000      00238         MOVFF   PREINC1, r0x01
00011E CFE4 F000      00239         MOVFF   PREINC1, r0x00
000122 CFE4 FFD9      00240         MOVFF   PREINC1, FSR2L
000126 0012           00241         RETURN  
                      00242 
                      00243 ; ; Starting pCode block
                      00244 S_buffer__buffer_putch  code
000000                00245 _buffer_putch:
                      00246 ;       .line   39; lib/buffer.c        buffer_putch(char ch) {
000000 CFD9 FFE5      00247         MOVFF   FSR2L, POSTDEC1
000004 CFE1 FFD9      00248         MOVFF   FSR1L, FSR2L
000008 C??? F???      00249         MOVFF   r0x00, POSTDEC1
00000C 0E02           00250         MOVLW   0x02
00000E CFDB F000      00251         MOVFF   PLUSW2, r0x00
                      00252 ;       .line   40; lib/buffer.c        buffer_putc(ch);
000012 50??           00253         MOVF    r0x00, W
000014 6EE5           00254         MOVWF   POSTDEC1
000016 EC?? F0??      00255         CALL    _buffer_putc
00001A 52E6           00256         MOVF    POSTINC1, F
                      00257 ;       .line   41; lib/buffer.c        }
00001C CFE4 F000      00258         MOVFF   PREINC1, r0x00
000020 CFE4 FFD9      00259         MOVFF   PREINC1, FSR2L
000024 0012           00260         RETURN  
                      00261 
                      00262 ; ; Starting pCode block
                      00263 S_buffer__buffer_putc   code
000000                00264 _buffer_putc:
                      00265 ;       .line   30; lib/buffer.c        buffer_putc(char ch) {
gpasm-1.5.0 #1285 (Jul 12 2020) obj/sdcc-18f2   11/12/23  13:12:41          PAGE  6


LOC    OBJECT CODE    LINE  SOURCE TEXT
  VALUE

000000 CFD9 FFE5      00266         MOVFF   FSR2L, POSTDEC1
000004 CFE1 FFD9      00267         MOVFF   FSR1L, FSR2L
000008 C??? F???      00268         MOVFF   r0x00, POSTDEC1
00000C C??? F???      00269         MOVFF   r0x01, POSTDEC1
000010 C??? F???      00270         MOVFF   r0x02, POSTDEC1
000014 0E02           00271         MOVLW   0x02
000016 CFDB F000      00272         MOVFF   PLUSW2, r0x00
00001A 010?           00273         BANKSEL (_buffer + 16)
                      00274 ;       .line   31; lib/buffer.c        if(BUFFER_SIZE - buffer.n <= 0)
00001C 51??           00275         MOVF    (_buffer + 16), W, B
00001E 38E8           00276         SWAPF   WREG, W
000020 0B0F           00277         ANDLW   0x0f
000022 6E??           00278         MOVWF   r0x01
000024 6A??           00279         CLRF    r0x02
000026 50??           00280         MOVF    r0x01, W
000028 0810           00281         SUBLW   0x10
00002A 6E??           00282         MOVWF   r0x01
00002C 0E00           00283         MOVLW   0x00
00002E 56??           00284         SUBFWB  r0x02, F
000030 50??           00285         MOVF    r0x02, W
000032 0F80           00286         ADDLW   0x80
000034 0F80           00287         ADDLW   0x80
000036 E1??           00288         BNZ     _00123_DS_
000038 0E01           00289         MOVLW   0x01
00003A 5C??           00290         SUBWF   r0x01, W
00003C                00291 _00123_DS_:
00003C E2??           00292         BC      _00116_DS_
                      00293 ;       .line   32; lib/buffer.c        return 0;
00003E 6AE8           00294         CLRF    WREG
000040 D???           00295         BRA     _00117_DS_
000042                00296 _00116_DS_:
000042 010?           00297         BANKSEL (_buffer + 16)
                      00298 ;       .line   33; lib/buffer.c        buffer.x[buffer.n] = ch;
000044 51??           00299         MOVF    (_buffer + 16), W, B
000046 38E8           00300         SWAPF   WREG, W
000048 0B0F           00301         ANDLW   0x0f
00004A 6E??           00302         MOVWF   r0x01
00004C 6A??           00303         CLRF    r0x02
00004E 0E??           00304         MOVLW   LOW(_buffer)
000050 26??           00305         ADDWF   r0x01, F
000052 0E??           00306         MOVLW   HIGH(_buffer)
000054 22??           00307         ADDWFC  r0x02, F
000056 C??? F???      00308         MOVFF   r0x01, FSR0L
00005A C??? F???      00309         MOVFF   r0x02, FSR0H
00005E C??? F???      00310         MOVFF   r0x00, INDF0
000062 010?           00311         BANKSEL (_buffer + 16)
                      00312 ;       .line   34; lib/buffer.c        buffer.n++;
000064 51??           00313         MOVF    (_buffer + 16), W, B
000066 38E8           00314         SWAPF   WREG, W
000068 0B0F           00315         ANDLW   0x0f
00006A 6E??           00316         MOVWF   r0x00
00006C 2A??           00317         INCF    r0x00, F
00006E 50??           00318         MOVF    r0x00, W
gpasm-1.5.0 #1285 (Jul 12 2020) obj/sdcc-18f2   11/12/23  13:12:41          PAGE  7


LOC    OBJECT CODE    LINE  SOURCE TEXT
  VALUE

000070 0B0F           00319         ANDLW   0x0f
000072 38E8           00320         SWAPF   WREG, W
000074 6EF4           00321         MOVWF   PRODH
000076 010?           00322         BANKSEL (_buffer + 16)
000078 51??           00323         MOVF    (_buffer + 16), W, B
00007A 0B0F           00324         ANDLW   0x0f
00007C 10F4           00325         IORWF   PRODH, W
00007E 010?           00326         BANKSEL (_buffer + 16)
000080 6F??           00327         MOVWF   (_buffer + 16), B
                      00328 ;       .line   35; lib/buffer.c        return 1;
000082 0E01           00329         MOVLW   0x01
000084                00330 _00117_DS_:
                      00331 ;       .line   36; lib/buffer.c        }
000084 CFE4 F000      00332         MOVFF   PREINC1, r0x02
000088 CFE4 F000      00333         MOVFF   PREINC1, r0x01
00008C CFE4 F000      00334         MOVFF   PREINC1, r0x00
000090 CFE4 FFD9      00335         MOVFF   PREINC1, FSR2L
000094 0012           00336         RETURN  
                      00337 
                      00338 ; ; Starting pCode block
                      00339 S_buffer__buffer_flush  code
000000                00340 _buffer_flush:
                      00341 ;       .line   21; lib/buffer.c        buffer_flush() {
000000 CFD9 FFE5      00342         MOVFF   FSR2L, POSTDEC1
000004 CFE1 FFD9      00343         MOVFF   FSR1L, FSR2L
000008 010?           00344         BANKSEL (_buffer + 16)
                      00345 ;       .line   25; lib/buffer.c        BUFFER_CLEAR();
00000A 51??           00346         MOVF    (_buffer + 16), W, B
00000C 0BF0           00347         ANDLW   0xf0
00000E 010?           00348         BANKSEL (_buffer + 16)
000010 6F??           00349         MOVWF   (_buffer + 16), B
000012 010?           00350         BANKSEL (_buffer + 16)
000014 51??           00351         MOVF    (_buffer + 16), W, B
000016 0B0F           00352         ANDLW   0x0f
000018 010?           00353         BANKSEL (_buffer + 16)
00001A 6F??           00354         MOVWF   (_buffer + 16), B
                      00355 ;       .line   26; lib/buffer.c        return 0;
00001C 6AE8           00356         CLRF    WREG
                      00357 ;       .line   27; lib/buffer.c        }
00001E CFE4 FFD9      00358         MOVFF   PREINC1, FSR2L
000022 0012           00359         RETURN  
                      00360 
                      00361 ; ; Starting pCode block
                      00362 S_buffer__buffer_init   code
000000                00363 _buffer_init:
                      00364 ;       .line   10; lib/buffer.c        buffer_init(void) {
000000 CFD9 FFE5      00365         MOVFF   FSR2L, POSTDEC1
000004 CFE1 FFD9      00366         MOVFF   FSR1L, FSR2L
000008 010?           00367         BANKSEL (_buffer + 16)
                      00368 ;       .line   11; lib/buffer.c        buffer.p = 0;
00000A 51??           00369         MOVF    (_buffer + 16), W, B
00000C 0BF0           00370         ANDLW   0xf0
00000E 010?           00371         BANKSEL (_buffer + 16)
gpasm-1.5.0 #1285 (Jul 12 2020) obj/sdcc-18f2   11/12/23  13:12:41          PAGE  8


LOC    OBJECT CODE    LINE  SOURCE TEXT
  VALUE

000010 6F??           00372         MOVWF   (_buffer + 16), B
000012 010?           00373         BANKSEL (_buffer + 16)
                      00374 ;       .line   12; lib/buffer.c        buffer.n = 0;
000014 51??           00375         MOVF    (_buffer + 16), W, B
000016 0B0F           00376         ANDLW   0x0f
000018 010?           00377         BANKSEL (_buffer + 16)
00001A 6F??           00378         MOVWF   (_buffer + 16), B
                      00379 ;       .line   13; lib/buffer.c        }
00001C CFE4 FFD9      00380         MOVFF   PREINC1, FSR2L
000020 0012           00381         RETURN  
                      00382 
                      00383 
                      00384 
                      00385 ; Statistics:
                      00386 ; code size:      660 (0x0294) bytes ( 0.50%)
                      00387 ;                 330 (0x014a) words
                      00388 ; udata size:      17 (0x0011) bytes ( 0.95%)
                      00389 ; access size:     10 (0x000a) bytes
                      00390 
                      00391 
                      00392         end
gpasm-1.5.0 #1285 (Jul 12 2020) obj/sdcc-18f2   11/12/23  13:12:41          PAGE  9


SYMBOL TABLE
  LABEL                              TYPE        VALUE         VALUE          VALUE
                                                 (hex)         (dec)          (text)

FSR0H                             CONSTANT      00000FEA           4074
FSR0L                             CONSTANT      00000FE9           4073
FSR1L                             CONSTANT      00000FE1           4065
FSR2L                             CONSTANT      00000FD9           4057
INDF0                             CONSTANT      00000FEF           4079
PLUSW2                            CONSTANT      00000FDB           4059
POSTDEC1                          CONSTANT      00000FE5           4069
POSTINC1                          CONSTANT      00000FE6           4070
PREINC1                           CONSTANT      00000FE4           4068
PRODH                             CONSTANT      00000FF4           4084
PRODL                             CONSTANT      00000FF3           4083
STATUS                            CONSTANT      00000FD8           4056
WREG                              CONSTANT      00000FE8           4072
_00116_DS_                        ADDRESS       00000042             66
_00117_DS_                        ADDRESS       00000084            132
_00123_DS_                        ADDRESS       0000003C             60
_00135_DS_                        ADDRESS       000000D6            214
_00137_DS_                        ADDRESS       0000007E            126
_00139_DS_                        ADDRESS       000000FA            250
_00143_DS_                        ADDRESS       0000007C            124
_00154_DS_                        ADDRESS       00000076            118
_00160_DS_                        ADDRESS       0000002A             42
_00162_DS_                        ADDRESS       00000052             82
_00174_DS_                        ADDRESS       00000050             80
__ACC_RAM_LOW_END                 CONSTANT      0000005F             95
__ACC_RAM_LOW_START               CONSTANT      00000000              0
__ACTIVE_BANK_ADDR                VARIABLE      FFFFFFFF             -1
__ASSUMED_BANK_ADDR               VARIABLE      FFFFFFFF             -1
__BANK_0                          CONSTANT      00000000              0
__BANK_BITS                       CONSTANT      00000F00           3840
__BANK_FIRST                      CONSTANT      00000000              0
__BANK_INV                        CONSTANT      FFFFFFFF             -1
__BANK_LAST                       CONSTANT      00000F00           3840
__BANK_MASK                       CONSTANT      000000FF            255
__BANK_SHIFT                      CONSTANT      00000008              8
__BANK_SIZE                       CONSTANT      00000100            256
__BANK_1                          CONSTANT      00000100            256
__BANK_2                          CONSTANT      00000200            512
__BANK_3                          CONSTANT      00000300            768
__BANK_4                          CONSTANT      00000400           1024
__BANK_5                          CONSTANT      00000500           1280
__BANK_6                          CONSTANT      00000600           1536
__BANK_7                          CONSTANT      00000700           1792
__BANK_8                          CONSTANT      00000800           2048
__BANK_9                          CONSTANT      00000900           2304
__BANK_10                         CONSTANT      00000A00           2560
__BANK_11                         CONSTANT      00000B00           2816
__BANK_12                         CONSTANT      00000C00           3072
__BANK_13                         CONSTANT      00000D00           3328
__BANK_14                         CONSTANT      00000E00           3584
__BANK_15                         CONSTANT      00000F00           3840
__CODE_END                        CONSTANT      00007FFF          32767
gpasm-1.5.0 #1285 (Jul 12 2020) obj/sdcc-18f2   11/12/23  13:12:41          PAGE 10


SYMBOL TABLE
  LABEL                              TYPE        VALUE         VALUE          VALUE
                                                 (hex)         (dec)          (text)

__CODE_START                      CONSTANT      00000000              0
__COMMON_RAM_END                  CONSTANT      0000005F             95
__COMMON_RAM_START                CONSTANT      00000000              0
__CONFIG_END                      CONSTANT      0030000D        3145741
__CONFIG_START                    CONSTANT      00300000        3145728
__EEPROM_END                      CONSTANT      00F000FF       15728895
__EEPROM_START                    CONSTANT      00F00000       15728640
__EXTENDED                        CONSTANT      00000001              1
__GPUTILS_SVN_VERSION             CONSTANT      00000505           1285
__GPUTILS_VERSION_MAJOR           CONSTANT      00000001              1
__GPUTILS_VERSION_MICRO           CONSTANT      00000000              0
__GPUTILS_VERSION_MINOR           CONSTANT      00000005              5
__IDLOCS_END                      CONSTANT      00200007        2097159
__IDLOCS_START                    CONSTANT      00200000        2097152
__NUM_BANKS                       CONSTANT      00000010             16
__VECTOR_INT_HIGH                 CONSTANT      00000008              8
__VECTOR_INT_LOW                  CONSTANT      00000018             24
__VECTOR_RESET                    CONSTANT      00000000              0
__WHILE_LOOP_COUNT_MAX            CONSTANT      000000FF            255
__gptrget1                        EXTERNAL      00000000              0
__16_BIT                          CONSTANT      00000001              1
__18F25K50                        CONSTANT      00000001              1
_buffer                           GLOBAL        00000000              0
_buffer_flush                     GLOBAL        00000000              0
_buffer_init                      GLOBAL        00000000              0
_buffer_put                       GLOBAL        00000000              0
_buffer_putc                      GLOBAL        00000000              0
_buffer_putch                     GLOBAL        00000000              0
_buffer_puts                      GLOBAL        00000000              0
r0x00                             STATIC        00000000              0
r0x01                             STATIC        00000001              1
r0x02                             STATIC        00000002              2
r0x03                             STATIC        00000003              3
r0x04                             STATIC        00000004              4
r0x05                             STATIC        00000005              5
r0x06                             STATIC        00000006              6
r0x07                             STATIC        00000007              7
r0x08                             STATIC        00000008              8
r0x09                             STATIC        00000009              9

Errors   :     0
Warnings :     0 reported,     0 suppressed
Messages :     0 reported,     0 suppressed

