gpasm-1.5.0 #1285 (Jul 12 2020) obj/sdcc-18f2   11/12/23  13:12:34          PAGE  1


LOC    OBJECT CODE    LINE  SOURCE TEXT
  VALUE

                      00001 ;--------------------------------------------------------
                      00002 ; File Created by SDCC : free open source ANSI-C Compiler
                      00003 ; Version 4.2.0 #13081 (Linux)
                      00004 ;--------------------------------------------------------
                      00005 ; PIC16 port for the Microchip 16-bit core micros
                      00006 ;--------------------------------------------------------
                      00007 
                      00008         .ident "SDCC version 4.2.0 #13081 [pic16 port]"
                      00009         .file   "lib/buffer.c"
                      00010         list    p=18f2550
                      00011         radix   dec
                      00012 
                      00013 
                      00014 ;--------------------------------------------------------
                      00015 ; public variables in this module
                      00016 ;--------------------------------------------------------
  0000                00017         global  _buffer_init
  0000                00018         global  _buffer_flush
  0000                00019         global  _buffer_putc
  0000                00020         global  _buffer_putch
  0000                00021         global  _buffer_put
  0000                00022         global  _buffer_puts
  0000                00023         global  _buffer
                      00024 
                      00025 ;--------------------------------------------------------
                      00026 ; extern variables in this module
                      00027 ;--------------------------------------------------------
  0000                00028         extern  __gptrget1
                      00029 
                      00030 ;--------------------------------------------------------
                      00031 ;       Equates to used internal registers
                      00032 ;--------------------------------------------------------
  00000FD8            00033 STATUS  equ     0xfd8
  00000FE8            00034 WREG    equ     0xfe8
  00000FE9            00035 FSR0L   equ     0xfe9
  00000FEA            00036 FSR0H   equ     0xfea
  00000FE1            00037 FSR1L   equ     0xfe1
  00000FD9            00038 FSR2L   equ     0xfd9
  00000FEF            00039 INDF0   equ     0xfef
  00000FE6            00040 POSTINC1        equ     0xfe6
  00000FE5            00041 POSTDEC1        equ     0xfe5
  00000FE4            00042 PREINC1 equ     0xfe4
  00000FDB            00043 PLUSW2  equ     0xfdb
  00000FF3            00044 PRODL   equ     0xff3
  00000FF4            00045 PRODH   equ     0xff4
                      00046 
                      00047 
                      00048 ; Internal registers
                      00049 .registers      udata_ovr       0x0000
000000                00050 r0x00   res     1
000001                00051 r0x01   res     1
000002                00052 r0x02   res     1
000003                00053 r0x03   res     1
gpasm-1.5.0 #1285 (Jul 12 2020) obj/sdcc-18f2   11/12/23  13:12:34          PAGE  2


LOC    OBJECT CODE    LINE  SOURCE TEXT
  VALUE

000004                00054 r0x04   res     1
000005                00055 r0x05   res     1
000006                00056 r0x06   res     1
000007                00057 r0x07   res     1
000008                00058 r0x08   res     1
000009                00059 r0x09   res     1
                      00060 
                      00061 udata_buffer_0  udata
000000                00062 _buffer res     17
                      00063 
                      00064 ;--------------------------------------------------------
                      00065 ; global & static initialisations
                      00066 ;--------------------------------------------------------
                      00067 ; I code from now on!
                      00068 ; ; Starting pCode block
                      00069 S_buffer__buffer_puts   code
000000                00070 _buffer_puts:
                      00071         .line   61; lib/buffer.c        buffer_puts(const char* x) {
000000 CFD9 FFE5      00072         MOVFF   FSR2L, POSTDEC1
000004 CFE1 FFD9      00073         MOVFF   FSR1L, FSR2L
000008 C??? F???      00074         MOVFF   r0x00, POSTDEC1
00000C C??? F???      00075         MOVFF   r0x01, POSTDEC1
000010 C??? F???      00076         MOVFF   r0x02, POSTDEC1
000014 C??? F???      00077         MOVFF   r0x03, POSTDEC1
000018 0E02           00078         MOVLW   0x02
00001A CFDB F000      00079         MOVFF   PLUSW2, r0x00
00001E 0E03           00080         MOVLW   0x03
000020 CFDB F000      00081         MOVFF   PLUSW2, r0x01
000024 0E04           00082         MOVLW   0x04
000026 CFDB F000      00083         MOVFF   PLUSW2, r0x02
00002A                00084 _00160_DS_:
                      00085         .line   62; lib/buffer.c        while(*x) {
00002A C??? F???      00086         MOVFF   r0x00, FSR0L
00002E C??? F???      00087         MOVFF   r0x01, PRODL
000032 50??           00088         MOVF    r0x02, W
000034 EC?? F0??      00089         CALL    __gptrget1
000038 6E??           00090         MOVWF   r0x03
00003A 50??           00091         MOVF    r0x03, W
00003C E0??           00092         BZ      _00162_DS_
                      00093         .line   63; lib/buffer.c        buffer_putch(*x);
00003E 50??           00094         MOVF    r0x03, W
000040 6EE5           00095         MOVWF   POSTDEC1
000042 EC?? F0??      00096         CALL    _buffer_putch
000046 52E6           00097         MOVF    POSTINC1, F
                      00098         .line   64; lib/buffer.c        ++x;
000048 2A??           00099         INCF    r0x00, F
00004A E3??           00100         BNC     _00160_DS_
00004C 4A??           00101         INFSNZ  r0x01, F
00004E 2A??           00102         INCF    r0x02, F
000050                00103 _00174_DS_:
000050 D???           00104         BRA     _00160_DS_
000052                00105 _00162_DS_:
                      00106         .line   66; lib/buffer.c        return 0;
gpasm-1.5.0 #1285 (Jul 12 2020) obj/sdcc-18f2   11/12/23  13:12:34          PAGE  3


LOC    OBJECT CODE    LINE  SOURCE TEXT
  VALUE

000052 6AE8           00107         CLRF    WREG
                      00108         .line   67; lib/buffer.c        }
000054 CFE4 F000      00109         MOVFF   PREINC1, r0x03
000058 CFE4 F000      00110         MOVFF   PREINC1, r0x02
00005C CFE4 F000      00111         MOVFF   PREINC1, r0x01
000060 CFE4 F000      00112         MOVFF   PREINC1, r0x00
000064 CFE4 FFD9      00113         MOVFF   PREINC1, FSR2L
000068 0012           00114         RETURN  
                      00115 
                      00116 ; ; Starting pCode block
                      00117 S_buffer__buffer_put    code
000000                00118 _buffer_put:
                      00119         .line   44; lib/buffer.c        buffer_put(const char* buf, len_t len) {
000000 CFD9 FFE5      00120         MOVFF   FSR2L, POSTDEC1
000004 CFE1 FFD9      00121         MOVFF   FSR1L, FSR2L
000008 C??? F???      00122         MOVFF   r0x00, POSTDEC1
00000C C??? F???      00123         MOVFF   r0x01, POSTDEC1
000010 C??? F???      00124         MOVFF   r0x02, POSTDEC1
000014 C??? F???      00125         MOVFF   r0x03, POSTDEC1
000018 C??? F???      00126         MOVFF   r0x04, POSTDEC1
00001C C??? F???      00127         MOVFF   r0x05, POSTDEC1
000020 C??? F???      00128         MOVFF   r0x06, POSTDEC1
000024 C??? F???      00129         MOVFF   r0x07, POSTDEC1
000028 C??? F???      00130         MOVFF   r0x08, POSTDEC1
00002C C??? F???      00131         MOVFF   r0x09, POSTDEC1
000030 0E02           00132         MOVLW   0x02
000032 CFDB F000      00133         MOVFF   PLUSW2, r0x00
000036 0E03           00134         MOVLW   0x03
000038 CFDB F000      00135         MOVFF   PLUSW2, r0x01
00003C 0E04           00136         MOVLW   0x04
00003E CFDB F000      00137         MOVFF   PLUSW2, r0x02
000042 0E05           00138         MOVLW   0x05
000044 CFDB F000      00139         MOVFF   PLUSW2, r0x03
000048 010?           00140         BANKSEL (_buffer + 16)
                      00141         .line   46; lib/buffer.c        if(len > BUFFER_SIZE - buffer.n) // doesn't fit
00004A 51??           00142         MOVF    (_buffer + 16), W, B
00004C 38E8           00143         SWAPF   WREG, W
00004E 0B0F           00144         ANDLW   0x0f
000050 6E??           00145         MOVWF   r0x04
000052 6A??           00146         CLRF    r0x05
000054 50??           00147         MOVF    r0x04, W
000056 0810           00148         SUBLW   0x10
000058 6E??           00149         MOVWF   r0x04
00005A 0E00           00150         MOVLW   0x00
00005C 56??           00151         SUBFWB  r0x05, F
00005E C??? F???      00152         MOVFF   r0x03, r0x06
000062 6A??           00153         CLRF    r0x07
000064 50??           00154         MOVF    r0x05, W
000066 0F80           00155         ADDLW   0x80
000068 6EF3           00156         MOVWF   PRODL
00006A 50??           00157         MOVF    r0x07, W
00006C 0F80           00158         ADDLW   0x80
00006E 5CF3           00159         SUBWF   PRODL, W
gpasm-1.5.0 #1285 (Jul 12 2020) obj/sdcc-18f2   11/12/23  13:12:34          PAGE  4


LOC    OBJECT CODE    LINE  SOURCE TEXT
  VALUE

000070 E1??           00160         BNZ     _00154_DS_
000072 50??           00161         MOVF    r0x06, W
000074 5C??           00162         SUBWF   r0x04, W
000076                00163 _00154_DS_:
000076 E2??           00164         BC      _00143_DS_
                      00165         .line   47; lib/buffer.c        return -1;
000078 68E8           00166         SETF    WREG
00007A D???           00167         BRA     _00139_DS_
00007C                00168 _00143_DS_:
                      00169         .line   48; lib/buffer.c        for(i = 0; i < len; i++) buffer.x[buffer.n + i] = buf[i];
00007C 6A??           00170         CLRF    r0x04
00007E                00171 _00137_DS_:
00007E 50??           00172         MOVF    r0x03, W
000080 5C??           00173         SUBWF   r0x04, W
000082 E2??           00174         BC      _00135_DS_
000084 010?           00175         BANKSEL (_buffer + 16)
000086 51??           00176         MOVF    (_buffer + 16), W, B
000088 38E8           00177         SWAPF   WREG, W
00008A 0B0F           00178         ANDLW   0x0f
00008C 6E??           00179         MOVWF   r0x05
00008E 50??           00180         MOVF    r0x04, W
000090 6E??           00181         MOVWF   r0x06
000092 50??           00182         MOVF    r0x06, W
000094 26??           00183         ADDWF   r0x05, F
000096 6A??           00184         CLRF    r0x06
000098 BE??           00185         BTFSC   r0x05, 7
00009A 68??           00186         SETF    r0x06
00009C 0E??           00187         MOVLW   LOW(_buffer)
00009E 26??           00188         ADDWF   r0x05, F
0000A0 0E??           00189         MOVLW   HIGH(_buffer)
0000A2 22??           00190         ADDWFC  r0x06, F
0000A4 50??           00191         MOVF    r0x04, W
0000A6 24??           00192         ADDWF   r0x00, W
0000A8 6E??           00193         MOVWF   r0x07
0000AA 6AE8           00194         CLRF    WREG
0000AC 20??           00195         ADDWFC  r0x01, W
0000AE 6E??           00196         MOVWF   r0x08
0000B0 6AE8           00197         CLRF    WREG
0000B2 20??           00198         ADDWFC  r0x02, W
0000B4 6E??           00199         MOVWF   r0x09
0000B6 C??? F???      00200         MOVFF   r0x07, FSR0L
0000BA C??? F???      00201         MOVFF   r0x08, PRODL
0000BE 50??           00202         MOVF    r0x09, W
0000C0 EC?? F0??      00203         CALL    __gptrget1
0000C4 6E??           00204         MOVWF   r0x07
0000C6 C??? F???      00205         MOVFF   r0x05, FSR0L
0000CA C??? F???      00206         MOVFF   r0x06, FSR0H
0000CE C??? F???      00207         MOVFF   r0x07, INDF0
0000D2 2A??           00208         INCF    r0x04, F
0000D4 D???           00209         BRA     _00137_DS_
0000D6                00210 _00135_DS_:
0000D6 010?           00211         BANKSEL (_buffer + 16)
                      00212         .line   49; lib/buffer.c        buffer.n += len;
gpasm-1.5.0 #1285 (Jul 12 2020) obj/sdcc-18f2   11/12/23  13:12:34          PAGE  5


LOC    OBJECT CODE    LINE  SOURCE TEXT
  VALUE

0000D8 51??           00213         MOVF    (_buffer + 16), W, B
0000DA 38E8           00214         SWAPF   WREG, W
0000DC 0B0F           00215         ANDLW   0x0f
0000DE 6E??           00216         MOVWF   r0x00
0000E0 50??           00217         MOVF    r0x00, W
0000E2 26??           00218         ADDWF   r0x03, F
0000E4 50??           00219         MOVF    r0x03, W
0000E6 0B0F           00220         ANDLW   0x0f
0000E8 38E8           00221         SWAPF   WREG, W
0000EA 6EF4           00222         MOVWF   PRODH
0000EC 010?           00223         BANKSEL (_buffer + 16)
0000EE 51??           00224         MOVF    (_buffer + 16), W, B
0000F0 0B0F           00225         ANDLW   0x0f
0000F2 10F4           00226         IORWF   PRODH, W
0000F4 010?           00227         BANKSEL (_buffer + 16)
0000F6 6F??           00228         MOVWF   (_buffer + 16), B
                      00229         .line   50; lib/buffer.c        return 0;
0000F8 6AE8           00230         CLRF    WREG
0000FA                00231 _00139_DS_:
                      00232         .line   51; lib/buffer.c        }
0000FA CFE4 F000      00233         MOVFF   PREINC1, r0x09
0000FE CFE4 F000      00234         MOVFF   PREINC1, r0x08
000102 CFE4 F000      00235         MOVFF   PREINC1, r0x07
000106 CFE4 F000      00236         MOVFF   PREINC1, r0x06
00010A CFE4 F000      00237         MOVFF   PREINC1, r0x05
00010E CFE4 F000      00238         MOVFF   PREINC1, r0x04
000112 CFE4 F000      00239         MOVFF   PREINC1, r0x03
000116 CFE4 F000      00240         MOVFF   PREINC1, r0x02
00011A CFE4 F000      00241         MOVFF   PREINC1, r0x01
00011E CFE4 F000      00242         MOVFF   PREINC1, r0x00
000122 CFE4 FFD9      00243         MOVFF   PREINC1, FSR2L
000126 0012           00244         RETURN  
                      00245 
                      00246 ; ; Starting pCode block
                      00247 S_buffer__buffer_putch  code
000000                00248 _buffer_putch:
                      00249         .line   39; lib/buffer.c        buffer_putch(char ch) {
000000 CFD9 FFE5      00250         MOVFF   FSR2L, POSTDEC1
000004 CFE1 FFD9      00251         MOVFF   FSR1L, FSR2L
000008 C??? F???      00252         MOVFF   r0x00, POSTDEC1
00000C 0E02           00253         MOVLW   0x02
00000E CFDB F000      00254         MOVFF   PLUSW2, r0x00
                      00255         .line   40; lib/buffer.c        buffer_putc(ch);
000012 50??           00256         MOVF    r0x00, W
000014 6EE5           00257         MOVWF   POSTDEC1
000016 EC?? F0??      00258         CALL    _buffer_putc
00001A 52E6           00259         MOVF    POSTINC1, F
                      00260         .line   41; lib/buffer.c        }
00001C CFE4 F000      00261         MOVFF   PREINC1, r0x00
000020 CFE4 FFD9      00262         MOVFF   PREINC1, FSR2L
000024 0012           00263         RETURN  
                      00264 
                      00265 ; ; Starting pCode block
gpasm-1.5.0 #1285 (Jul 12 2020) obj/sdcc-18f2   11/12/23  13:12:34          PAGE  6


LOC    OBJECT CODE    LINE  SOURCE TEXT
  VALUE

                      00266 S_buffer__buffer_putc   code
000000                00267 _buffer_putc:
                      00268         .line   30; lib/buffer.c        buffer_putc(char ch) {
000000 CFD9 FFE5      00269         MOVFF   FSR2L, POSTDEC1
000004 CFE1 FFD9      00270         MOVFF   FSR1L, FSR2L
000008 C??? F???      00271         MOVFF   r0x00, POSTDEC1
00000C C??? F???      00272         MOVFF   r0x01, POSTDEC1
000010 C??? F???      00273         MOVFF   r0x02, POSTDEC1
000014 0E02           00274         MOVLW   0x02
000016 CFDB F000      00275         MOVFF   PLUSW2, r0x00
00001A 010?           00276         BANKSEL (_buffer + 16)
                      00277         .line   31; lib/buffer.c        if(BUFFER_SIZE - buffer.n <= 0)
00001C 51??           00278         MOVF    (_buffer + 16), W, B
00001E 38E8           00279         SWAPF   WREG, W
000020 0B0F           00280         ANDLW   0x0f
000022 6E??           00281         MOVWF   r0x01
000024 6A??           00282         CLRF    r0x02
000026 50??           00283         MOVF    r0x01, W
000028 0810           00284         SUBLW   0x10
00002A 6E??           00285         MOVWF   r0x01
00002C 0E00           00286         MOVLW   0x00
00002E 56??           00287         SUBFWB  r0x02, F
000030 50??           00288         MOVF    r0x02, W
000032 0F80           00289         ADDLW   0x80
000034 0F80           00290         ADDLW   0x80
000036 E1??           00291         BNZ     _00123_DS_
000038 0E01           00292         MOVLW   0x01
00003A 5C??           00293         SUBWF   r0x01, W
00003C                00294 _00123_DS_:
00003C E2??           00295         BC      _00116_DS_
                      00296         .line   32; lib/buffer.c        return 0;
00003E 6AE8           00297         CLRF    WREG
000040 D???           00298         BRA     _00117_DS_
000042                00299 _00116_DS_:
000042 010?           00300         BANKSEL (_buffer + 16)
                      00301         .line   33; lib/buffer.c        buffer.x[buffer.n] = ch;
000044 51??           00302         MOVF    (_buffer + 16), W, B
000046 38E8           00303         SWAPF   WREG, W
000048 0B0F           00304         ANDLW   0x0f
00004A 6E??           00305         MOVWF   r0x01
00004C 6A??           00306         CLRF    r0x02
00004E 0E??           00307         MOVLW   LOW(_buffer)
000050 26??           00308         ADDWF   r0x01, F
000052 0E??           00309         MOVLW   HIGH(_buffer)
000054 22??           00310         ADDWFC  r0x02, F
000056 C??? F???      00311         MOVFF   r0x01, FSR0L
00005A C??? F???      00312         MOVFF   r0x02, FSR0H
00005E C??? F???      00313         MOVFF   r0x00, INDF0
000062 010?           00314         BANKSEL (_buffer + 16)
                      00315         .line   34; lib/buffer.c        buffer.n++;
000064 51??           00316         MOVF    (_buffer + 16), W, B
000066 38E8           00317         SWAPF   WREG, W
000068 0B0F           00318         ANDLW   0x0f
gpasm-1.5.0 #1285 (Jul 12 2020) obj/sdcc-18f2   11/12/23  13:12:34          PAGE  7


LOC    OBJECT CODE    LINE  SOURCE TEXT
  VALUE

00006A 6E??           00319         MOVWF   r0x00
00006C 2A??           00320         INCF    r0x00, F
00006E 50??           00321         MOVF    r0x00, W
000070 0B0F           00322         ANDLW   0x0f
000072 38E8           00323         SWAPF   WREG, W
000074 6EF4           00324         MOVWF   PRODH
000076 010?           00325         BANKSEL (_buffer + 16)
000078 51??           00326         MOVF    (_buffer + 16), W, B
00007A 0B0F           00327         ANDLW   0x0f
00007C 10F4           00328         IORWF   PRODH, W
00007E 010?           00329         BANKSEL (_buffer + 16)
000080 6F??           00330         MOVWF   (_buffer + 16), B
                      00331         .line   35; lib/buffer.c        return 1;
000082 0E01           00332         MOVLW   0x01
000084                00333 _00117_DS_:
                      00334         .line   36; lib/buffer.c        }
000084 CFE4 F000      00335         MOVFF   PREINC1, r0x02
000088 CFE4 F000      00336         MOVFF   PREINC1, r0x01
00008C CFE4 F000      00337         MOVFF   PREINC1, r0x00
000090 CFE4 FFD9      00338         MOVFF   PREINC1, FSR2L
000094 0012           00339         RETURN  
                      00340 
                      00341 ; ; Starting pCode block
                      00342 S_buffer__buffer_flush  code
000000                00343 _buffer_flush:
                      00344         .line   21; lib/buffer.c        buffer_flush() {
000000 CFD9 FFE5      00345         MOVFF   FSR2L, POSTDEC1
000004 CFE1 FFD9      00346         MOVFF   FSR1L, FSR2L
000008 010?           00347         BANKSEL (_buffer + 16)
                      00348         .line   25; lib/buffer.c        BUFFER_CLEAR();
00000A 51??           00349         MOVF    (_buffer + 16), W, B
00000C 0BF0           00350         ANDLW   0xf0
00000E 010?           00351         BANKSEL (_buffer + 16)
000010 6F??           00352         MOVWF   (_buffer + 16), B
000012 010?           00353         BANKSEL (_buffer + 16)
000014 51??           00354         MOVF    (_buffer + 16), W, B
000016 0B0F           00355         ANDLW   0x0f
000018 010?           00356         BANKSEL (_buffer + 16)
00001A 6F??           00357         MOVWF   (_buffer + 16), B
                      00358         .line   26; lib/buffer.c        return 0;
00001C 6AE8           00359         CLRF    WREG
                      00360         .line   27; lib/buffer.c        }
00001E CFE4 FFD9      00361         MOVFF   PREINC1, FSR2L
000022 0012           00362         RETURN  
                      00363 
                      00364 ; ; Starting pCode block
                      00365 S_buffer__buffer_init   code
000000                00366 _buffer_init:
                      00367         .line   10; lib/buffer.c        buffer_init(void) {
000000 CFD9 FFE5      00368         MOVFF   FSR2L, POSTDEC1
000004 CFE1 FFD9      00369         MOVFF   FSR1L, FSR2L
000008 010?           00370         BANKSEL (_buffer + 16)
                      00371         .line   11; lib/buffer.c        buffer.p = 0;
gpasm-1.5.0 #1285 (Jul 12 2020) obj/sdcc-18f2   11/12/23  13:12:34          PAGE  8


LOC    OBJECT CODE    LINE  SOURCE TEXT
  VALUE

00000A 51??           00372         MOVF    (_buffer + 16), W, B
00000C 0BF0           00373         ANDLW   0xf0
00000E 010?           00374         BANKSEL (_buffer + 16)
000010 6F??           00375         MOVWF   (_buffer + 16), B
000012 010?           00376         BANKSEL (_buffer + 16)
                      00377         .line   12; lib/buffer.c        buffer.n = 0;
000014 51??           00378         MOVF    (_buffer + 16), W, B
000016 0B0F           00379         ANDLW   0x0f
000018 010?           00380         BANKSEL (_buffer + 16)
00001A 6F??           00381         MOVWF   (_buffer + 16), B
                      00382         .line   13; lib/buffer.c        }
00001C CFE4 FFD9      00383         MOVFF   PREINC1, FSR2L
000020 0012           00384         RETURN  
                      00385 
                      00386 
                      00387 
                      00388 ; Statistics:
                      00389 ; code size:      660 (0x0294) bytes ( 0.50%)
                      00390 ;                 330 (0x014a) words
                      00391 ; udata size:      17 (0x0011) bytes ( 0.95%)
                      00392 ; access size:     10 (0x000a) bytes
                      00393 
                      00394 
                      00395         end
gpasm-1.5.0 #1285 (Jul 12 2020) obj/sdcc-18f2   11/12/23  13:12:34          PAGE  9


SYMBOL TABLE
  LABEL                              TYPE        VALUE         VALUE          VALUE
                                                 (hex)         (dec)          (text)

FSR0H                             CONSTANT      00000FEA           4074
FSR0L                             CONSTANT      00000FE9           4073
FSR1L                             CONSTANT      00000FE1           4065
FSR2L                             CONSTANT      00000FD9           4057
INDF0                             CONSTANT      00000FEF           4079
PLUSW2                            CONSTANT      00000FDB           4059
POSTDEC1                          CONSTANT      00000FE5           4069
POSTINC1                          CONSTANT      00000FE6           4070
PREINC1                           CONSTANT      00000FE4           4068
PRODH                             CONSTANT      00000FF4           4084
PRODL                             CONSTANT      00000FF3           4083
STATUS                            CONSTANT      00000FD8           4056
WREG                              CONSTANT      00000FE8           4072
_00116_DS_                        ADDRESS       00000042             66
_00117_DS_                        ADDRESS       00000084            132
_00123_DS_                        ADDRESS       0000003C             60
_00135_DS_                        ADDRESS       000000D6            214
_00137_DS_                        ADDRESS       0000007E            126
_00139_DS_                        ADDRESS       000000FA            250
_00143_DS_                        ADDRESS       0000007C            124
_00154_DS_                        ADDRESS       00000076            118
_00160_DS_                        ADDRESS       0000002A             42
_00162_DS_                        ADDRESS       00000052             82
_00174_DS_                        ADDRESS       00000050             80
__ACC_RAM_LOW_END                 CONSTANT      0000005F             95
__ACC_RAM_LOW_START               CONSTANT      00000000              0
__ACTIVE_BANK_ADDR                VARIABLE      FFFFFFFF             -1
__ASSUMED_BANK_ADDR               VARIABLE      FFFFFFFF             -1
__BANK_0                          CONSTANT      00000000              0
__BANK_BITS                       CONSTANT      00000F00           3840
__BANK_FIRST                      CONSTANT      00000000              0
__BANK_INV                        CONSTANT      FFFFFFFF             -1
__BANK_LAST                       CONSTANT      00000F00           3840
__BANK_MASK                       CONSTANT      000000FF            255
__BANK_SHIFT                      CONSTANT      00000008              8
__BANK_SIZE                       CONSTANT      00000100            256
__BANK_1                          CONSTANT      00000100            256
__BANK_2                          CONSTANT      00000200            512
__BANK_3                          CONSTANT      00000300            768
__BANK_4                          CONSTANT      00000400           1024
__BANK_5                          CONSTANT      00000500           1280
__BANK_6                          CONSTANT      00000600           1536
__BANK_7                          CONSTANT      00000700           1792
__BANK_8                          CONSTANT      00000800           2048
__BANK_9                          CONSTANT      00000900           2304
__BANK_10                         CONSTANT      00000A00           2560
__BANK_11                         CONSTANT      00000B00           2816
__BANK_12                         CONSTANT      00000C00           3072
__BANK_13                         CONSTANT      00000D00           3328
__BANK_14                         CONSTANT      00000E00           3584
__BANK_15                         CONSTANT      00000F00           3840
__CODE_END                        CONSTANT      00007FFF          32767
gpasm-1.5.0 #1285 (Jul 12 2020) obj/sdcc-18f2   11/12/23  13:12:34          PAGE 10


SYMBOL TABLE
  LABEL                              TYPE        VALUE         VALUE          VALUE
                                                 (hex)         (dec)          (text)

__CODE_START                      CONSTANT      00000000              0
__COMMON_RAM_END                  CONSTANT      0000005F             95
__COMMON_RAM_START                CONSTANT      00000000              0
__CONFIG_END                      CONSTANT      0030000D        3145741
__CONFIG_START                    CONSTANT      00300000        3145728
__EEPROM_END                      CONSTANT      00F000FF       15728895
__EEPROM_START                    CONSTANT      00F00000       15728640
__EXTENDED                        CONSTANT      00000001              1
__GPUTILS_SVN_VERSION             CONSTANT      00000505           1285
__GPUTILS_VERSION_MAJOR           CONSTANT      00000001              1
__GPUTILS_VERSION_MICRO           CONSTANT      00000000              0
__GPUTILS_VERSION_MINOR           CONSTANT      00000005              5
__IDLOCS_END                      CONSTANT      00200007        2097159
__IDLOCS_START                    CONSTANT      00200000        2097152
__NUM_BANKS                       CONSTANT      00000010             16
__VECTOR_INT_HIGH                 CONSTANT      00000008              8
__VECTOR_INT_LOW                  CONSTANT      00000018             24
__VECTOR_RESET                    CONSTANT      00000000              0
__WHILE_LOOP_COUNT_MAX            CONSTANT      000000FF            255
__gptrget1                        EXTERNAL      00000000              0
__16_BIT                          CONSTANT      00000001              1
__18F2550                         CONSTANT      00000001              1
_buffer                           GLOBAL        00000000              0
_buffer_flush                     GLOBAL        00000000              0
_buffer_init                      GLOBAL        00000000              0
_buffer_put                       GLOBAL        00000000              0
_buffer_putc                      GLOBAL        00000000              0
_buffer_putch                     GLOBAL        00000000              0
_buffer_puts                      GLOBAL        00000000              0
r0x00                             STATIC        00000000              0
r0x01                             STATIC        00000001              1
r0x02                             STATIC        00000002              2
r0x03                             STATIC        00000003              3
r0x04                             STATIC        00000004              4
r0x05                             STATIC        00000005              5
r0x06                             STATIC        00000006              6
r0x07                             STATIC        00000007              7
r0x08                             STATIC        00000008              8
r0x09                             STATIC        00000009              9

Errors   :     0
Warnings :     0 reported,     0 suppressed
Messages :     0 reported,     0 suppressed

