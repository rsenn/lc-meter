

Microchip Technology PIC18 PRO Macro Assembler V1.45 build -152302408 
                                                                                               Fri Feb  7 09:08:31 2020

Microchip Technology Omniscient Code Generator v1.45 (PRO mode) build 201711160504
     1                           	processor	18F252
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	pm
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    15                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    16                           	psect	text0,global,reloc=2,class=CODE,delta=1
    17                           	psect	text1,global,reloc=2,class=CODE,delta=1
    18                           	psect	text2,global,reloc=2,class=CODE,delta=1
    19                           	psect	text3,global,reloc=2,class=CODE,delta=1
    20                           	psect	text4,global,reloc=2,class=CODE,delta=1
    21                           	psect	text5,global,reloc=2,class=CODE,delta=1
    22                           	psect	text6,global,reloc=2,class=CODE,delta=1
    23                           	psect	text7,global,reloc=2,class=CODE,delta=1
    24                           	psect	text8,global,reloc=2,class=CODE,delta=1
    25                           	psect	text9,global,reloc=2,class=CODE,delta=1
    26                           	psect	text10,global,reloc=2,class=CODE,delta=1
    27                           	psect	text11,global,reloc=2,class=CODE,delta=1
    28                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=1
    29                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=1
    30                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=1
    31                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=1
    32                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=1
    33                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=1
    34                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=1
    35                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=1
    36                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=1
    37                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=1
    38                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=1
    39                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=1
    40                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=1
    41                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=1
    42                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=1
    43                           	psect	text27,global,reloc=2,class=CODE,delta=1
    44                           	psect	text28,global,reloc=2,class=CODE,delta=1
    45                           	psect	text29,global,reloc=2,class=CODE,delta=1
    46                           	psect	text30,global,reloc=2,class=CODE,delta=1
    47                           	psect	text31,global,reloc=2,class=CODE,delta=1
    48                           	psect	text32,global,reloc=2,class=CODE,delta=1
    49                           	psect	text33,global,reloc=2,class=CODE,delta=1
    50                           	psect	text34,global,reloc=2,class=CODE,delta=1
    51                           	psect	text35,global,reloc=2,class=CODE,delta=1
    52                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=1
    53                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=1
    54                           	psect	text38,global,reloc=2,class=CODE,delta=1
    55                           	psect	text39,global,reloc=2,class=CODE,delta=1
    56                           	psect	text40,global,reloc=2,class=CODE,delta=1
    57                           	psect	text41,global,reloc=2,class=CODE,delta=1
    58                           	psect	text42,global,reloc=2,class=CODE,delta=1
    59                           	psect	text43,global,reloc=2,class=CODE,delta=1
    60                           	psect	text44,global,reloc=2,class=CODE,delta=1
    61                           	psect	text45,global,reloc=2,class=CODE,delta=1
    62                           	psect	text46,global,reloc=2,class=CODE,delta=1,group=1
    63                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    64                           	psect	text48,global,reloc=2,class=CODE,delta=1
    65                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    66                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    67                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    68  0000                     
    69                           ; Version 1.45
    70                           ; Generated 16/11/2017 GMT
    71                           ; 
    72                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    73                           ; All rights reserved.
    74                           ; 
    75                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    76                           ; 
    77                           ; Redistribution and use in source and binary forms, with or without modification, are
    78                           ; permitted provided that the following conditions are met:
    79                           ; 
    80                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    81                           ;        conditions and the following disclaimer.
    82                           ; 
    83                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    84                           ;        of conditions and the following disclaimer in the documentation and/or other
    85                           ;        materials provided with the distribution.
    86                           ; 
    87                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    88                           ;        software without specific prior written permission.
    89                           ; 
    90                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    91                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    92                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    93                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    94                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    95                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    96                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    97                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    98                           ; 
    99                           ; 
   100                           ; Code-generator required, PIC18F252 Definitions
   101                           ; 
   102                           ; SFR Addresses
   103  0000                     
   104                           	psect	idataBANK0
   105  002D04                     __pidataBANK0:
   106                           	opt stack 0
   107                           
   108                           ;initializer for lcd_gotoxy@F2308
   109  002D04  00                 	db	0
   110  002D05  40                 	db	64
   111  002D06  14                 	db	20
   112  002D07  54                 	db	84
   113                           
   114                           ;initializer for _mode
   115  002D08  FF                 	db	255
   116                           
   117                           	psect	smallconst
   118  000600                     __psmallconst:
   119                           	opt stack 0
   120  000600  00                 	db	0
   121  000601                     exp@coeff:
   122                           	opt stack 0
   123  000601  0000               	dw	0
   124  000603  3F80               	dw	16256
   125  000605  7218               	dw	29208
   126  000607  3F31               	dw	16177
   127  000609  FDF0               	dw	65008
   128  00060B  3E75               	dw	15989
   129  00060D  5847               	dw	22599
   130  00060F  3D63               	dw	15715
   131  000611  9558               	dw	38232
   132  000613  3C1D               	dw	15389
   133  000615  C482               	dw	50306
   134  000617  3AAE               	dw	15022
   135  000619  78A8               	dw	30888
   136  00061B  3921               	dw	14625
   137  00061D  93EF               	dw	37871
   138  00061F  3780               	dw	14208
   139  000621  92A0               	dw	37536
   140  000623  35A7               	dw	13735
   141  000625  5646               	dw	22086
   142  000627  3415               	dw	13333
   143  000629                     __end_ofexp@coeff:
   144                           	opt stack 0
   145  000629                     log@coeff:
   146                           	opt stack 0
   147  000629  0000               	dw	0
   148  00062B  0000               	dw	0
   149  00062D  FFC4               	dw	65476
   150  00062F  3F7F               	dw	16255
   151  000631  EF80               	dw	61312
   152  000633  BEFF               	dw	48895
   153  000635  E190               	dw	57744
   154  000637  3EA9               	dw	16041
   155  000639  82EC               	dw	33516
   156  00063B  BE76               	dw	48758
   157  00063D  AD82               	dw	44418
   158  00063F  3E2B               	dw	15915
   159  000641  3C0E               	dw	15374
   160  000643  BDC3               	dw	48579
   161  000645  D187               	dw	53639
   162  000647  3D13               	dw	15635
   163  000649  7841               	dw	30785
   164  00064B  BBD3               	dw	48083
   165  00064D                     __end_oflog@coeff:
   166                           	opt stack 0
   167  00064D                     STR_7:
   168                           
   169                           ; BSR set to: 0
   170  00064D  70                 	db	112	;'p'
   171  00064E  6C                 	db	108	;'l'
   172  00064F  65                 	db	101	;'e'
   173  000650  61                 	db	97	;'a'
   174  000651  73                 	db	115	;'s'
   175  000652  65                 	db	101	;'e'
   176  000653  20                 	db	32
   177  000654  77                 	db	119	;'w'
   178  000655  61                 	db	97	;'a'
   179  000656  69                 	db	105	;'i'
   180  000657  74                 	db	116	;'t'
   181  000658  2E                 	db	46
   182  000659  2E                 	db	46
   183  00065A  2E                 	db	46
   184  00065B  00                 	db	0
   185  00065C                     STR_10:
   186                           
   187                           ; BSR set to: 0
   188  00065C  49                 	db	73	;'I'
   189  00065D  6E                 	db	110	;'n'
   190  00065E  64                 	db	100	;'d'
   191  00065F  75                 	db	117	;'u'
   192  000660  63                 	db	99	;'c'
   193  000661  74                 	db	116	;'t'
   194  000662  69                 	db	105	;'i'
   195  000663  76                 	db	118	;'v'
   196  000664  69                 	db	105	;'i'
   197  000665  74                 	db	116	;'t'
   198  000666  79                 	db	121	;'y'
   199  000667  20                 	db	32
   200  000668  00                 	db	0
   201  000669                     STR_6:
   202                           
   203                           ; BSR set to: 0
   204  000669  43                 	db	67	;'C'
   205  00066A  61                 	db	97	;'a'
   206  00066B  6C                 	db	108	;'l'
   207  00066C  69                 	db	105	;'i'
   208  00066D  62                 	db	98	;'b'
   209  00066E  72                 	db	114	;'r'
   210  00066F  61                 	db	97	;'a'
   211  000670  74                 	db	116	;'t'
   212  000671  69                 	db	105	;'i'
   213  000672  6E                 	db	110	;'n'
   214  000673  67                 	db	103	;'g'
   215  000674  00                 	db	0
   216  000675                     STR_9:
   217                           
   218                           ; BSR set to: 0
   219  000675  43                 	db	67	;'C'
   220  000676  61                 	db	97	;'a'
   221  000677  70                 	db	112	;'p'
   222  000678  61                 	db	97	;'a'
   223  000679  63                 	db	99	;'c'
   224  00067A  69                 	db	105	;'i'
   225  00067B  74                 	db	116	;'t'
   226  00067C  79                 	db	121	;'y'
   227  00067D  20                 	db	32
   228  00067E  00                 	db	0
   229  00067F                     STR_1:
   230                           
   231                           ; BSR set to: 0
   232  00067F  4C                 	db	76	;'L'
   233  000680  43                 	db	67	;'C'
   234  000681  2D                 	db	45
   235  000682  6D                 	db	109	;'m'
   236  000683  65                 	db	101	;'e'
   237  000684  74                 	db	116	;'t'
   238  000685  65                 	db	101	;'e'
   239  000686  72                 	db	114	;'r'
   240  000687  20                 	db	32
   241  000688  00                 	db	0
   242  000689                     STR_2:
   243                           
   244                           ; BSR set to: 0
   245  000689  20                 	db	32
   246  00068A  20                 	db	32
   247  00068B  20                 	db	32
   248  00068C  20                 	db	32
   249  00068D  20                 	db	32
   250  00068E  20                 	db	32
   251  00068F  00                 	db	0
   252  000690                     STR_8:
   253                           
   254                           ; BSR set to: 0
   255  000690  46                 	db	70	;'F'
   256  000691  72                 	db	114	;'r'
   257  000692  65                 	db	101	;'e'
   258  000693  71                 	db	113	;'q'
   259  000694  3D                 	db	61	;'='
   260  000695  00                 	db	0
   261  000696                     
   262                           ; BSR set to: 0
   263  000696  52                 	db	82	;'R'
   264  000697  43                 	db	67	;'C'
   265  000698  34                 	db	52	;'4'
   266  000699  3D                 	db	61	;'='
   267  00069A  00                 	db	0
   268  00069B                     STR_20:
   269                           
   270                           ; BSR set to: 0
   271  00069B  2D                 	db	45
   272  00069C  2A                 	db	42
   273  00069D  2D                 	db	45
   274  00069E  00                 	db	0
   275  00069F                     
   276                           ; BSR set to: 0
   277  00069F  6D                 	db	109	;'m'
   278  0006A0  46                 	db	70	;'F'
   279  0006A1  00                 	db	0
   280  0006A2                     
   281                           ; BSR set to: 0
   282  0006A2  6E                 	db	110	;'n'
   283  0006A3  46                 	db	70	;'F'
   284  0006A4  00                 	db	0
   285  0006A5                     
   286                           ; BSR set to: 0
   287  0006A5  70                 	db	112	;'p'
   288  0006A6  46                 	db	70	;'F'
   289  0006A7  00                 	db	0
   290  0006A8                     
   291                           ; BSR set to: 0
   292  0006A8  75                 	db	117	;'u'
   293  0006A9  46                 	db	70	;'F'
   294  0006AA  00                 	db	0
   295  0006AB                     STR_12:
   296                           
   297                           ; BSR set to: 0
   298  0006AB  6D                 	db	109	;'m'
   299  0006AC  48                 	db	72	;'H'
   300  0006AD  00                 	db	0
   301  0006AE                     
   302                           ; BSR set to: 0
   303  0006AE  6E                 	db	110	;'n'
   304  0006AF  48                 	db	72	;'H'
   305  0006B0  00                 	db	0
   306  0006B1                     
   307                           ; BSR set to: 0
   308  0006B1  75                 	db	117	;'u'
   309  0006B2  48                 	db	72	;'H'
   310  0006B3  00                 	db	0
   311  0000                     
   312                           ; #config settings
   313  0006B4  00                 	db	0	; dummy byte at the end
   314  0000                     
   315                           	psect	nvBANK0
   316  0000E9                     __pnvBANK0:
   317                           	opt stack 0
   318  0000E9                     _CCal:
   319                           	opt stack 0
   320  0000E9                     	ds	4
   321  0000ED                     _bres:
   322                           	opt stack 0
   323  0000ED                     	ds	4
   324  0000F1                     _led_interval:
   325                           	opt stack 0
   326  0000F1                     	ds	2
   327  0000                     _TMR0	set	4054
   328  0000                     _PIE1	set	3997
   329  0000                     _PIR1	set	3998
   330  0000                     _TMR2	set	4044
   331  0000                     _T2CON	set	4042
   332  0000                     _T0CONbits	set	4053
   333  0000                     _INTCONbits	set	4082
   334  0000                     _T0CON	set	4053
   335  0000                     _LATB	set	3978
   336  0000                     _PORTC	set	3970
   337  0000                     _INTCON	set	4082
   338  0000                     _PORTCbits	set	3970
   339  0000                     _TRISC	set	3988
   340  0000                     _INTCON2	set	4081
   341  0000                     _TRISB	set	3987
   342  0000                     _TRISA	set	3986
   343  0000                     _LATC	set	3979
   344  0000                     _PIR1bits	set	3998
   345                           
   346                           	psect	cinit
   347  00288C                     __pcinit:
   348                           	opt stack 0
   349  00288C                     start_initialization:
   350                           	opt stack 0
   351  00288C                     __initialization:
   352                           	opt stack 0
   353                           
   354                           ; Initialize objects allocated to BANK0 (5 bytes)
   355                           ; load TBLPTR registers with __pidataBANK0
   356  00288C  0E04               	movlw	low __pidataBANK0
   357  00288E  6EF6               	movwf	tblptrl,c
   358  002890  0E2D               	movlw	high __pidataBANK0
   359  002892  6EF7               	movwf	tblptrh,c
   360  002894  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   361  002896  6EF8               	movwf	tblptru,c
   362  002898  EE00  F0F3         	lfsr	0,__pdataBANK0
   363  00289C  EE10 F005          	lfsr	1,5
   364  0028A0                     copy_data0:
   365  0028A0  0009               	tblrd		*+
   366  0028A2  CFF5 FFEE          	movff	tablat,postinc0
   367  0028A6  50E5               	movf	postdec1,w,c
   368  0028A8  50E1               	movf	fsr1l,w,c
   369  0028AA  E1FA               	bnz	copy_data0
   370                           
   371                           ; Clear objects allocated to BANK1 (29 bytes)
   372  0028AC  EE01  F000         	lfsr	0,__pbssBANK1
   373  0028B0  0E1D               	movlw	29
   374  0028B2                     clear_0:
   375  0028B2  6AEE               	clrf	postinc0,c
   376  0028B4  06E8               	decf	wreg,f,c
   377  0028B6  E1FD               	bnz	clear_0
   378                           
   379                           ; Clear objects allocated to BANK0 (14 bytes)
   380  0028B8  EE00  F0DB         	lfsr	0,__pbssBANK0
   381  0028BC  0E0E               	movlw	14
   382  0028BE                     clear_1:
   383  0028BE  6AEE               	clrf	postinc0,c
   384  0028C0  06E8               	decf	wreg,f,c
   385  0028C2  E1FD               	bnz	clear_1
   386                           
   387                           ; Clear objects allocated to COMRAM (8 bytes)
   388  0028C4  EE00  F06F         	lfsr	0,__pbssCOMRAM
   389  0028C8  0E08               	movlw	8
   390  0028CA                     clear_2:
   391  0028CA  6AEE               	clrf	postinc0,c
   392  0028CC  06E8               	decf	wreg,f,c
   393  0028CE  E1FD               	bnz	clear_2
   394  0028D0                     end_of_initialization:
   395                           	opt stack 0
   396  0028D0                     __end_of__initialization:
   397                           	opt stack 0
   398  0028D0  9077               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   399  0028D2  9277               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   400  0028D4  0E00               	movlw	low (__Lsmallconst shr (0+16))
   401  0028D6  6EF8               	movwf	tblptru,c
   402  0028D8  0E06               	movlw	high __Lsmallconst
   403  0028DA  6EF7               	movwf	tblptrh,c
   404  0028DC  0100               	movlb	0
   405  0028DE  EF0A  F00F         	goto	_main	;jump to C main() function
   406                           tblptru	equ	0xFF8
   407                           tblptrh	equ	0xFF7
   408                           tblptrl	equ	0xFF6
   409                           tablat	equ	0xFF5
   410                           postinc0	equ	0xFEE
   411                           wreg	equ	0xFE8
   412                           postdec1	equ	0xFE5
   413                           fsr1l	equ	0xFE1
   414                           
   415                           	psect	bssCOMRAM
   416  00006F                     __pbssCOMRAM:
   417                           	opt stack 0
   418  00006F                     _led_cycle:
   419                           	opt stack 0
   420  00006F                     	ds	2
   421  000071                     _msecpart:
   422                           	opt stack 0
   423  000071                     	ds	2
   424  000073                     _LCD_lines:
   425                           	opt stack 0
   426  000073                     	ds	1
   427  000074                     _LCD_mode:
   428                           	opt stack 0
   429  000074                     	ds	1
   430  000075                     _LCD_ctrl:
   431                           	opt stack 0
   432  000075                     	ds	1
   433  000076                     _LCD_function:
   434                           	opt stack 0
   435  000076                     	ds	1
   436                           tblptru	equ	0xFF8
   437                           tblptrh	equ	0xFF7
   438                           tblptrl	equ	0xFF6
   439                           tablat	equ	0xFF5
   440                           postinc0	equ	0xFEE
   441                           wreg	equ	0xFE8
   442                           postdec1	equ	0xFE5
   443                           fsr1l	equ	0xFE1
   444                           
   445                           	psect	bssBANK0
   446  0000DB                     __pbssBANK0:
   447                           	opt stack 0
   448  0000DB                     _F3:
   449                           	opt stack 0
   450  0000DB                     	ds	4
   451  0000DF                     _F2:
   452                           	opt stack 0
   453  0000DF                     	ds	4
   454  0000E3                     _blink:
   455                           	opt stack 0
   456  0000E3                     	ds	2
   457  0000E5                     _F1:
   458                           	opt stack 0
   459  0000E5                     	ds	4
   460                           tblptru	equ	0xFF8
   461                           tblptrh	equ	0xFF7
   462                           tblptrl	equ	0xFF6
   463                           tablat	equ	0xFF5
   464                           postinc0	equ	0xFEE
   465                           wreg	equ	0xFE8
   466                           postdec1	equ	0xFE5
   467                           fsr1l	equ	0xFE1
   468                           
   469                           	psect	dataBANK0
   470  0000F3                     __pdataBANK0:
   471                           	opt stack 0
   472  0000F3                     lcd_gotoxy@F2308:
   473                           	opt stack 0
   474  0000F3                     	ds	4
   475  0000F7                     _mode:
   476                           	opt stack 0
   477  0000F7                     	ds	1
   478                           tblptru	equ	0xFF8
   479                           tblptrh	equ	0xFF7
   480                           tblptrl	equ	0xFF6
   481                           tablat	equ	0xFF5
   482                           postinc0	equ	0xFEE
   483                           wreg	equ	0xFE8
   484                           postdec1	equ	0xFE5
   485                           fsr1l	equ	0xFE1
   486                           
   487                           	psect	bssBANK1
   488  000100                     __pbssBANK1:
   489                           	opt stack 0
   490  000100                     _buffer:
   491                           	opt stack 0
   492  000100                     	ds	17
   493  000111                     _timer1of:
   494                           	opt stack 0
   495  000111                     	ds	4
   496  000115                     _msecs:
   497                           	opt stack 0
   498  000115                     	ds	4
   499  000119                     _seconds:
   500                           	opt stack 0
   501  000119                     	ds	4
   502                           tblptru	equ	0xFF8
   503                           tblptrh	equ	0xFF7
   504                           tblptrl	equ	0xFF6
   505                           tablat	equ	0xFF5
   506                           postinc0	equ	0xFEE
   507                           wreg	equ	0xFE8
   508                           postdec1	equ	0xFE5
   509                           fsr1l	equ	0xFE1
   510                           
   511                           	psect	cstackBANK1
   512  00011D                     __pcstackBANK1:
   513                           	opt stack 0
   514  00011D                     _format_double$1300:
   515                           	opt stack 0
   516                           
   517                           ; 4 bytes @ 0x0
   518  00011D                     	ds	4
   519  000121                     _format_double$1301:
   520                           	opt stack 0
   521                           
   522                           ; 4 bytes @ 0x4
   523  000121                     	ds	4
   524  000125                     format_double@weight:
   525                           	opt stack 0
   526                           
   527                           ; 4 bytes @ 0x8
   528  000125                     	ds	4
   529  000129                     format_double@digit:
   530                           	opt stack 0
   531                           
   532                           ; 2 bytes @ 0xC
   533  000129                     	ds	2
   534  00012B                     format_double@m:
   535                           	opt stack 0
   536                           
   537                           ; 2 bytes @ 0xE
   538  00012B                     	ds	2
   539                           tblptru	equ	0xFF8
   540                           tblptrh	equ	0xFF7
   541                           tblptrl	equ	0xFF6
   542                           tablat	equ	0xFF5
   543                           postinc0	equ	0xFEE
   544                           wreg	equ	0xFE8
   545                           postdec1	equ	0xFE5
   546                           fsr1l	equ	0xFE1
   547                           
   548                           	psect	cstackBANK0
   549  000080                     __pcstackBANK0:
   550                           	opt stack 0
   551  000080                     ___flmul@sign:
   552                           	opt stack 0
   553                           
   554                           ; 1 bytes @ 0x0
   555  000080                     	ds	1
   556  000081                     ___flmul@aexp:
   557                           	opt stack 0
   558                           
   559                           ; 1 bytes @ 0x1
   560  000081                     	ds	1
   561  000082                     ___flmul@bexp:
   562                           	opt stack 0
   563                           
   564                           ; 1 bytes @ 0x2
   565  000082                     	ds	1
   566  000083                     ___flmul@grs:
   567                           	opt stack 0
   568                           
   569                           ; 4 bytes @ 0x3
   570  000083                     	ds	4
   571  000087                     ___flmul@prod:
   572                           	opt stack 0
   573                           
   574                           ; 4 bytes @ 0x7
   575  000087                     	ds	4
   576  00008B                     ___flmul@temp:
   577                           	opt stack 0
   578                           
   579                           ; 2 bytes @ 0xB
   580  00008B                     	ds	2
   581  00008D                     ?___flsub:
   582                           	opt stack 0
   583  00008D                     ?_eval_poly:
   584                           	opt stack 0
   585  00008D                     ___flsub@b:
   586                           	opt stack 0
   587  00008D                     eval_poly@x:
   588                           	opt stack 0
   589                           
   590                           ; 4 bytes @ 0xD
   591  00008D                     	ds	4
   592  000091                     eval_poly@d:
   593                           	opt stack 0
   594  000091                     ___flsub@a:
   595                           	opt stack 0
   596                           
   597                           ; 4 bytes @ 0x11
   598  000091                     	ds	1
   599  000092                     eval_poly@n:
   600                           	opt stack 0
   601                           
   602                           ; 2 bytes @ 0x12
   603  000092                     	ds	2
   604  000094                     ?_ldexp:
   605                           	opt stack 0
   606  000094                     ?_log:
   607                           	opt stack 0
   608  000094                     ldexp@value:
   609                           	opt stack 0
   610  000094                     log@x:
   611                           	opt stack 0
   612                           
   613                           ; 4 bytes @ 0x14
   614  000094                     	ds	4
   615  000098                     ldexp@newexp:
   616                           	opt stack 0
   617  000098                     log@exponent:
   618                           	opt stack 0
   619                           
   620                           ; 2 bytes @ 0x18
   621  000098                     	ds	2
   622  00009A                     ??_ldexp:
   623  00009A                     ?_log10:
   624                           	opt stack 0
   625  00009A                     log10@x:
   626                           	opt stack 0
   627                           
   628                           ; 4 bytes @ 0x1A
   629  00009A                     	ds	4
   630  00009E                     _log10$1314:
   631                           	opt stack 0
   632                           
   633                           ; 4 bytes @ 0x1E
   634  00009E                     	ds	4
   635  0000A2                     ?___fltol:
   636                           	opt stack 0
   637  0000A2                     ___fltol@f1:
   638                           	opt stack 0
   639                           
   640                           ; 4 bytes @ 0x22
   641  0000A2                     	ds	4
   642  0000A6                     ??___fltol:
   643                           
   644                           ; 1 bytes @ 0x26
   645  0000A6                     	ds	4
   646  0000AA                     ___fltol@sign1:
   647                           	opt stack 0
   648                           
   649                           ; 1 bytes @ 0x2A
   650  0000AA                     	ds	1
   651  0000AB                     ___fltol@exp1:
   652                           	opt stack 0
   653                           
   654                           ; 1 bytes @ 0x2B
   655  0000AB                     	ds	1
   656  0000AC                     ?_floor:
   657                           	opt stack 0
   658  0000AC                     measure_inductance@numerator:
   659                           	opt stack 0
   660  0000AC                     floor@x:
   661                           	opt stack 0
   662  0000AC                     _measure_capacitance$1302:
   663                           	opt stack 0
   664                           
   665                           ; 4 bytes @ 0x2C
   666  0000AC                     	ds	4
   667  0000B0                     measure_inductance@denominator:
   668                           	opt stack 0
   669  0000B0                     floor@i:
   670                           	opt stack 0
   671  0000B0                     _measure_capacitance$1303:
   672                           	opt stack 0
   673                           
   674                           ; 4 bytes @ 0x30
   675  0000B0                     	ds	4
   676  0000B4                     floor@expon:
   677                           	opt stack 0
   678  0000B4                     _measure_capacitance$1304:
   679                           	opt stack 0
   680  0000B4                     _measure_inductance$1305:
   681                           	opt stack 0
   682                           
   683                           ; 4 bytes @ 0x34
   684  0000B4                     	ds	2
   685  0000B6                     ?_exp:
   686                           	opt stack 0
   687  0000B6                     exp@x:
   688                           	opt stack 0
   689                           
   690                           ; 4 bytes @ 0x36
   691  0000B6                     	ds	2
   692  0000B8                     measure_capacitance@unit:
   693                           	opt stack 0
   694  0000B8                     _measure_inductance$1309:
   695                           	opt stack 0
   696                           
   697                           ; 4 bytes @ 0x38
   698  0000B8                     	ds	1
   699  0000B9                     measure_capacitance@var:
   700                           	opt stack 0
   701                           
   702                           ; 2 bytes @ 0x39
   703  0000B9                     	ds	1
   704  0000BA                     _exp$1317:
   705                           	opt stack 0
   706                           
   707                           ; 4 bytes @ 0x3A
   708  0000BA                     	ds	1
   709  0000BB                     measure_capacitance@Cin:
   710                           	opt stack 0
   711                           
   712                           ; 4 bytes @ 0x3B
   713  0000BB                     	ds	1
   714  0000BC                     _measure_inductance$1310:
   715                           	opt stack 0
   716                           
   717                           ; 4 bytes @ 0x3C
   718  0000BC                     	ds	2
   719  0000BE                     exp@exponent:
   720                           	opt stack 0
   721                           
   722                           ; 2 bytes @ 0x3E
   723  0000BE                     	ds	2
   724  0000C0                     exp@sign:
   725                           	opt stack 0
   726  0000C0                     _measure_inductance$1311:
   727                           	opt stack 0
   728                           
   729                           ; 4 bytes @ 0x40
   730  0000C0                     	ds	1
   731  0000C1                     ?_pow:
   732                           	opt stack 0
   733  0000C1                     pow@x:
   734                           	opt stack 0
   735                           
   736                           ; 4 bytes @ 0x41
   737  0000C1                     	ds	3
   738  0000C4                     measure_inductance@unit:
   739                           	opt stack 0
   740                           
   741                           ; 1 bytes @ 0x44
   742  0000C4                     	ds	1
   743  0000C5                     pow@y:
   744                           	opt stack 0
   745  0000C5                     _measure_inductance$1306:
   746                           	opt stack 0
   747                           
   748                           ; 4 bytes @ 0x45
   749  0000C5                     	ds	4
   750  0000C9                     _measure_inductance$1307:
   751                           	opt stack 0
   752  0000C9                     _pow$1315:
   753                           	opt stack 0
   754                           
   755                           ; 4 bytes @ 0x49
   756  0000C9                     	ds	4
   757  0000CD                     _measure_inductance$1308:
   758                           	opt stack 0
   759  0000CD                     _pow$1316:
   760                           	opt stack 0
   761                           
   762                           ; 4 bytes @ 0x4D
   763  0000CD                     	ds	4
   764  0000D1                     pow@sign:
   765                           	opt stack 0
   766  0000D1                     measure_inductance@var:
   767                           	opt stack 0
   768                           
   769                           ; 2 bytes @ 0x51
   770  0000D1                     	ds	1
   771  0000D2                     pow@yi:
   772                           	opt stack 0
   773                           
   774                           ; 4 bytes @ 0x52
   775  0000D2                     	ds	1
   776  0000D3                     measure_inductance@Lin:
   777                           	opt stack 0
   778                           
   779                           ; 4 bytes @ 0x53
   780  0000D3                     	ds	3
   781  0000D6                     format_double@num:
   782                           	opt stack 0
   783                           
   784                           ; 4 bytes @ 0x56
   785  0000D6                     	ds	4
   786  0000DA                     main@new_mode:
   787                           	opt stack 0
   788                           
   789                           ; 1 bytes @ 0x5A
   790  0000DA                     	ds	1
   791                           tblptru	equ	0xFF8
   792                           tblptrh	equ	0xFF7
   793                           tblptrl	equ	0xFF6
   794                           tablat	equ	0xFF5
   795                           postinc0	equ	0xFEE
   796                           wreg	equ	0xFE8
   797                           postdec1	equ	0xFE5
   798                           fsr1l	equ	0xFE1
   799                           
   800                           	psect	cstackCOMRAM
   801  000001                     __pcstackCOMRAM:
   802                           	opt stack 0
   803  000001                     ?i2___lwdiv:
   804                           	opt stack 0
   805  000001                     i2___lwdiv@dividend:
   806                           	opt stack 0
   807                           
   808                           ; 2 bytes @ 0x0
   809  000001                     	ds	2
   810  000003                     i2___lwdiv@divisor:
   811                           	opt stack 0
   812                           
   813                           ; 2 bytes @ 0x2
   814  000003                     	ds	2
   815  000005                     i2___lwdiv@quotient:
   816                           	opt stack 0
   817                           
   818                           ; 2 bytes @ 0x4
   819  000005                     	ds	2
   820  000007                     i2___lwdiv@counter:
   821                           	opt stack 0
   822                           
   823                           ; 1 bytes @ 0x6
   824  000007                     	ds	1
   825  000008                     ??_isr:
   826                           
   827                           ; 1 bytes @ 0x7
   828  000008                     	ds	1
   829  000009                     ??_timer0_init:
   830  000009                     ??_timer2_init:
   831  000009                     ??_buffer_putch:
   832  000009                     ?_timer0_read_ps:
   833                           	opt stack 0
   834  000009                     ?___lwdiv:
   835                           	opt stack 0
   836  000009                     ?___lwmod:
   837                           	opt stack 0
   838  000009                     ?___fldiv:
   839                           	opt stack 0
   840  000009                     ?_frexp:
   841                           	opt stack 0
   842  000009                     ?___flneg:
   843                           	opt stack 0
   844  000009                     lcd_write4bits@value:
   845                           	opt stack 0
   846  000009                     lcd_init@fourbitmode:
   847                           	opt stack 0
   848  000009                     ___lwdiv@dividend:
   849                           	opt stack 0
   850  000009                     ___lwmod@dividend:
   851                           	opt stack 0
   852  000009                     ___flge@ff1:
   853                           	opt stack 0
   854  000009                     ___flneg@f1:
   855                           	opt stack 0
   856  000009                     frexp@value:
   857                           	opt stack 0
   858  000009                     ___fldiv@b:
   859                           	opt stack 0
   860                           
   861                           ; 4 bytes @ 0x8
   862  000009                     	ds	1
   863  00000A                     lcd_send@mode:
   864                           	opt stack 0
   865  00000A                     timer2_init@ps:
   866                           	opt stack 0
   867  00000A                     _lcd_init$361:
   868                           	opt stack 0
   869  00000A                     _timer0_init$450:
   870                           	opt stack 0
   871                           
   872                           ; 2 bytes @ 0x9
   873  00000A                     	ds	1
   874  00000B                     ??_timer0_read_ps:
   875  00000B                     buffer_putch@ch:
   876                           	opt stack 0
   877  00000B                     lcd_send@value:
   878                           	opt stack 0
   879  00000B                     ___lwdiv@divisor:
   880                           	opt stack 0
   881  00000B                     ___lwmod@divisor:
   882                           	opt stack 0
   883                           
   884                           ; 2 bytes @ 0xA
   885  00000B                     	ds	1
   886  00000C                     buffer_puts@x:
   887                           	opt stack 0
   888  00000C                     lcd_command@value:
   889                           	opt stack 0
   890  00000C                     lcd_putch@value:
   891                           	opt stack 0
   892  00000C                     timer2_init@ps_mode:
   893                           	opt stack 0
   894  00000C                     _timer0_init$451:
   895                           	opt stack 0
   896                           
   897                           ; 2 bytes @ 0xB
   898  00000C                     	ds	1
   899  00000D                     ??_lcd_clear:
   900  00000D                     lcd_gotoxy@row:
   901                           	opt stack 0
   902  00000D                     lcd_puts@string:
   903                           	opt stack 0
   904  00000D                     lcd_begin@dotsize:
   905                           	opt stack 0
   906  00000D                     timer0_read_ps@prev:
   907                           	opt stack 0
   908  00000D                     output_putch@c:
   909                           	opt stack 0
   910  00000D                     frexp@eptr:
   911                           	opt stack 0
   912  00000D                     ___lwmod@counter:
   913                           	opt stack 0
   914  00000D                     ___lwdiv@quotient:
   915                           	opt stack 0
   916  00000D                     ___flge@ff2:
   917                           	opt stack 0
   918  00000D                     ___fldiv@a:
   919                           	opt stack 0
   920                           
   921                           ; 4 bytes @ 0xC
   922  00000D                     	ds	1
   923  00000E                     ??_lcd_begin:
   924  00000E                     ??_lcd_puts:
   925  00000E                     ??_frexp:
   926  00000E                     lcd_gotoxy@col:
   927                           	opt stack 0
   928  00000E                     put_str@s:
   929                           	opt stack 0
   930  00000E                     _timer0_init$452:
   931                           	opt stack 0
   932  00000E                     timer0_read_ps@count:
   933                           	opt stack 0
   934                           
   935                           ; 2 bytes @ 0xD
   936  00000E                     	ds	1
   937  00000F                     ??_put_str:
   938  00000F                     lcd_puts@i:
   939                           	opt stack 0
   940  00000F                     lcd_begin@lines:
   941                           	opt stack 0
   942  00000F                     ___lwdiv@counter:
   943                           	opt stack 0
   944  00000F                     lcd_gotoxy@row_offsets:
   945                           	opt stack 0
   946                           
   947                           ; 4 bytes @ 0xE
   948  00000F                     	ds	1
   949  000010                     format_number@n:
   950                           	opt stack 0
   951  000010                     _timer0_init$453:
   952                           	opt stack 0
   953  000010                     put_str@i:
   954                           	opt stack 0
   955                           
   956                           ; 2 bytes @ 0xF
   957  000010                     	ds	1
   958  000011                     ??___fldiv:
   959  000011                     ??___flge:
   960                           
   961                           ; 1 bytes @ 0x10
   962  000011                     	ds	1
   963  000012                     format_number@base:
   964                           	opt stack 0
   965  000012                     timer0_init@prescaler:
   966                           	opt stack 0
   967                           
   968                           ; 1 bytes @ 0x11
   969  000012                     	ds	1
   970  000013                     ??_print_unit:
   971  000013                     format_number@pad:
   972                           	opt stack 0
   973  000013                     timer0_init@ps_mode:
   974                           	opt stack 0
   975  000013                     print_indicator@indicate:
   976                           	opt stack 0
   977                           
   978                           ; 1 bytes @ 0x12
   979  000013                     	ds	1
   980  000014                     ??_format_number:
   981                           
   982                           ; 1 bytes @ 0x13
   983  000014                     	ds	1
   984  000015                     ___fldiv@sign:
   985                           	opt stack 0
   986                           
   987                           ; 1 bytes @ 0x14
   988  000015                     	ds	1
   989  000016                     ___fldiv@rem:
   990                           	opt stack 0
   991  000016                     format_number@buf:
   992                           	opt stack 0
   993                           
   994                           ; 32 bytes @ 0x15
   995  000016                     	ds	4
   996  00001A                     ___fldiv@new_exp:
   997                           	opt stack 0
   998                           
   999                           ; 2 bytes @ 0x19
  1000  00001A                     	ds	2
  1001  00001C                     ___fldiv@grs:
  1002                           	opt stack 0
  1003                           
  1004                           ; 4 bytes @ 0x1B
  1005  00001C                     	ds	4
  1006  000020                     ___fldiv@bexp:
  1007                           	opt stack 0
  1008                           
  1009                           ; 1 bytes @ 0x1F
  1010  000020                     	ds	1
  1011  000021                     ___fldiv@aexp:
  1012                           	opt stack 0
  1013                           
  1014                           ; 1 bytes @ 0x20
  1015  000021                     	ds	21
  1016  000036                     _format_number$293:
  1017                           	opt stack 0
  1018                           
  1019                           ; 2 bytes @ 0x35
  1020  000036                     	ds	2
  1021  000038                     format_number@padchar:
  1022                           	opt stack 0
  1023                           
  1024                           ; 1 bytes @ 0x37
  1025  000038                     	ds	1
  1026  000039                     format_number@di:
  1027                           	opt stack 0
  1028                           
  1029                           ; 1 bytes @ 0x38
  1030  000039                     	ds	1
  1031  00003A                     format_number@i:
  1032                           	opt stack 0
  1033                           
  1034                           ; 1 bytes @ 0x39
  1035  00003A                     	ds	1
  1036  00003B                     ?_measure_freq:
  1037                           	opt stack 0
  1038  00003B                     print_reading@measurement:
  1039                           	opt stack 0
  1040                           
  1041                           ; 2 bytes @ 0x3A
  1042  00003B                     	ds	2
  1043  00003D                     ??_measure_freq:
  1044  00003D                     _print_reading$1312:
  1045                           	opt stack 0
  1046                           
  1047                           ; 2 bytes @ 0x3C
  1048  00003D                     	ds	1
  1049  00003E                     measure_freq@count:
  1050                           	opt stack 0
  1051                           
  1052                           ; 2 bytes @ 0x3D
  1053  00003E                     	ds	1
  1054  00003F                     _print_reading$1313:
  1055                           	opt stack 0
  1056                           
  1057                           ; 2 bytes @ 0x3E
  1058  00003F                     	ds	1
  1059  000040                     ?___xxtofl:
  1060                           	opt stack 0
  1061  000040                     ___xxtofl@val:
  1062                           	opt stack 0
  1063                           
  1064                           ; 4 bytes @ 0x3F
  1065  000040                     	ds	4
  1066  000044                     ??___xxtofl:
  1067                           
  1068                           ; 1 bytes @ 0x43
  1069  000044                     	ds	4
  1070  000048                     ___xxtofl@sign:
  1071                           	opt stack 0
  1072                           
  1073                           ; 1 bytes @ 0x47
  1074  000048                     	ds	1
  1075  000049                     ___xxtofl@exp:
  1076                           	opt stack 0
  1077                           
  1078                           ; 1 bytes @ 0x48
  1079  000049                     	ds	1
  1080  00004A                     ___xxtofl@arg:
  1081                           	opt stack 0
  1082                           
  1083                           ; 4 bytes @ 0x49
  1084  00004A                     	ds	4
  1085  00004E                     ?___fladd:
  1086                           	opt stack 0
  1087  00004E                     calibrate@i:
  1088                           	opt stack 0
  1089  00004E                     ___fladd@b:
  1090                           	opt stack 0
  1091                           
  1092                           ; 4 bytes @ 0x4D
  1093  00004E                     	ds	4
  1094  000052                     ___fladd@a:
  1095                           	opt stack 0
  1096                           
  1097                           ; 4 bytes @ 0x51
  1098  000052                     	ds	4
  1099  000056                     ??___fladd:
  1100                           
  1101                           ; 1 bytes @ 0x55
  1102  000056                     	ds	4
  1103  00005A                     ___fladd@signs:
  1104                           	opt stack 0
  1105                           
  1106                           ; 1 bytes @ 0x59
  1107  00005A                     	ds	1
  1108  00005B                     ___fladd@aexp:
  1109                           	opt stack 0
  1110                           
  1111                           ; 1 bytes @ 0x5A
  1112  00005B                     	ds	1
  1113  00005C                     ___fladd@bexp:
  1114                           	opt stack 0
  1115                           
  1116                           ; 1 bytes @ 0x5B
  1117  00005C                     	ds	1
  1118  00005D                     ___fladd@grs:
  1119                           	opt stack 0
  1120                           
  1121                           ; 1 bytes @ 0x5C
  1122  00005D                     	ds	1
  1123  00005E                     ?___flmul:
  1124                           	opt stack 0
  1125  00005E                     ___flmul@b:
  1126                           	opt stack 0
  1127                           
  1128                           ; 4 bytes @ 0x5D
  1129  00005E                     	ds	4
  1130  000062                     ___flmul@a:
  1131                           	opt stack 0
  1132                           
  1133                           ; 4 bytes @ 0x61
  1134  000062                     	ds	4
  1135  000066                     ??___flmul:
  1136                           
  1137                           ; 1 bytes @ 0x65
  1138  000066                     	ds	4
  1139  00006A                     ??_eval_poly:
  1140                           
  1141                           ; 1 bytes @ 0x69
  1142  00006A                     	ds	1
  1143  00006B                     eval_poly@res:
  1144                           	opt stack 0
  1145                           
  1146                           ; 4 bytes @ 0x6A
  1147  00006B                     	ds	4
  1148  00006F                     tblptru	equ	0xFF8
  1149                           tblptrh	equ	0xFF7
  1150                           tblptrl	equ	0xFF6
  1151                           tablat	equ	0xFF5
  1152                           postinc0	equ	0xFEE
  1153                           wreg	equ	0xFE8
  1154                           postdec1	equ	0xFE5
  1155                           fsr1l	equ	0xFE1
  1156                           
  1157                           ; 1 bytes @ 0x6E
  1158 ;;
  1159 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1160 ;;
  1161 ;; *************** function _main *****************
  1162 ;; Defined at:
  1163 ;;		line 117 in file "LC-meter.c"
  1164 ;; Parameters:    Size  Location     Type
  1165 ;;		None
  1166 ;; Auto vars:     Size  Location     Type
  1167 ;;  new_mode        1   90[BANK0 ] unsigned char 
  1168 ;; Return value:  Size  Location     Type
  1169 ;;                  1    wreg      void 
  1170 ;; Registers used:
  1171 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1172 ;; Tracked objects:
  1173 ;;		On entry : 0/0
  1174 ;;		On exit  : 0/0
  1175 ;;		Unchanged: 0/0
  1176 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1177 ;;      Params:         0       0       0       0       0       0       0
  1178 ;;      Locals:         0       1       0       0       0       0       0
  1179 ;;      Temps:          0       0       0       0       0       0       0
  1180 ;;      Totals:         0       1       0       0       0       0       0
  1181 ;;Total ram usage:        1 bytes
  1182 ;; Hardware stack levels required when called:    8
  1183 ;; This function calls:
  1184 ;;		_calibrate
  1185 ;;		_delay10ms
  1186 ;;		_format_double
  1187 ;;		_lcd_begin
  1188 ;;		_lcd_clear
  1189 ;;		_lcd_gotoxy
  1190 ;;		_lcd_init
  1191 ;;		_lcd_puts
  1192 ;;		_measure_capacitance
  1193 ;;		_measure_inductance
  1194 ;;		_print_indicator
  1195 ;;		_timer0_init
  1196 ;;		_timer2_init
  1197 ;; This function is called by:
  1198 ;;		Startup code after reset
  1199 ;; This function uses a non-reentrant model
  1200 ;;
  1201                           
  1202                           	psect	text0
  1203  001E14                     __ptext0:
  1204                           	opt stack 0
  1205  001E14                     _main:
  1206                           	opt stack 0
  1207  001E14  FFFF               	dw	65535	; assembler added errata NOP
  1208                           
  1209                           ;LC-meter.c: 118: bres = msecpart = msecs = seconds = 0;
  1210                           
  1211                           ;incstack = 0
  1212  001E16  0101               	movlb	1	; () banked
  1213  001E18  6B19               	clrf	_seconds& (0+255),b	;volatile
  1214  001E1A  6B1A               	clrf	(_seconds+1)& (0+255),b	;volatile
  1215  001E1C  6B1B               	clrf	(_seconds+2)& (0+255),b	;volatile
  1216  001E1E  6B1C               	clrf	(_seconds+3)& (0+255),b	;volatile
  1217  001E20  C119  F115         	movff	_seconds,_msecs	;volatile
  1218  001E24  C11A  F116         	movff	_seconds+1,_msecs+1	;volatile
  1219  001E28  C11B  F117         	movff	_seconds+2,_msecs+2	;volatile
  1220  001E2C  C11C  F118         	movff	_seconds+3,_msecs+3	;volatile
  1221  001E30  C115  F071         	movff	_msecs,_msecpart	;volatile
  1222  001E34  C116  F072         	movff	_msecs+1,_msecpart+1	;volatile
  1223  001E38  C071  F0ED         	movff	_msecpart,_bres	;volatile
  1224  001E3C  C072  F0EE         	movff	_msecpart+1,_bres+1	;volatile
  1225  001E40  0100               	movlb	0	; () banked
  1226  001E42  6BEF               	clrf	(_bres+2)& (0+255),b	;volatile
  1227  001E44  6BF0               	clrf	(_bres+3)& (0+255),b	;volatile
  1228                           
  1229                           ; BSR set to: 0
  1230                           ;LC-meter.c: 119: mode = -1;
  1231  001E46  69F7               	setf	_mode& (0+255),b
  1232                           
  1233                           ;LC-meter.c: 121: CCal = 1000;
  1234  001E48  6BE9               	clrf	_CCal& (0+255),b
  1235  001E4A  6BEA               	clrf	(_CCal+1)& (0+255),b
  1236  001E4C  0E7A               	movlw	122
  1237  001E4E  6FEB               	movwf	(_CCal+2)& (0+255),b
  1238  001E50  0E44               	movlw	68
  1239  001E52  6FEC               	movwf	(_CCal+3)& (0+255),b
  1240                           
  1241                           ; BSR set to: 0
  1242                           ;LC-meter.c: 123: led_cycle = 0;
  1243  001E54  6A6F               	clrf	_led_cycle,c	;volatile
  1244  001E56  6A70               	clrf	_led_cycle+1,c	;volatile
  1245                           
  1246                           ;LC-meter.c: 124: led_interval = 500;
  1247  001E58  0E01               	movlw	1
  1248  001E5A  6FF2               	movwf	(_led_interval+1)& (0+255),b	;volatile
  1249  001E5C  0EF4               	movlw	244
  1250  001E5E  6FF1               	movwf	_led_interval& (0+255),b	;volatile
  1251                           
  1252                           ;LC-meter.c: 134: TRISA = 0b11001111;
  1253  001E60  0ECF               	movlw	207
  1254  001E62  6E92               	movwf	3986,c	;volatile
  1255                           
  1256                           ; BSR set to: 0
  1257                           ;LC-meter.c: 136: TRISB &= 0b00001111;
  1258  001E64  0E0F               	movlw	15
  1259  001E66  1693               	andwf	3987,f,c	;volatile
  1260                           
  1261                           ; BSR set to: 0
  1262                           ;LC-meter.c: 139: timer0_init(0b1000 | 0x20 | 0x40);
  1263  001E68  0E68               	movlw	104
  1264  001E6A  EC02  F013         	call	_timer0_init
  1265                           
  1266                           ;LC-meter.c: 140: timer2_init(0b100 | 0x80);
  1267  001E6E  0E84               	movlw	132
  1268  001E70  EC92  F015         	call	_timer2_init
  1269                           
  1270                           ;LC-meter.c: 147: INTCON2 &= ~0b10000000;
  1271  001E74  9EF1               	bcf	intcon2,7,c	;volatile
  1272                           
  1273                           ;LC-meter.c: 155: TRISC = 0b10110011;
  1274  001E76  0EB3               	movlw	179
  1275  001E78  6E94               	movwf	3988,c	;volatile
  1276                           
  1277                           ;LC-meter.c: 159: PORTCbits.RC3 = 1;
  1278  001E7A  8682               	bsf	3970,3,c	;volatile
  1279                           
  1280                           ;LC-meter.c: 162: TRISC &= ~(1 << 2);
  1281  001E7C  9494               	bcf	3988,2,c	;volatile
  1282                           
  1283                           ;LC-meter.c: 163: LATC &= ~(1 << 2); LATC |= (!!(1)) << 2;;
  1284  001E7E  948B               	bcf	3979,2,c	;volatile
  1285  001E80  848B               	bsf	3979,2,c	;volatile
  1286                           
  1287                           ;LC-meter.c: 165: timer2_init(0b000 | 0x80);
  1288  001E82  0E80               	movlw	128
  1289  001E84  EC92  F015         	call	_timer2_init
  1290                           
  1291                           ;LC-meter.c: 172: lcd_init(1);
  1292  001E88  0E01               	movlw	1
  1293  001E8A  ECC7  F015         	call	_lcd_init
  1294                           
  1295                           ;LC-meter.c: 173: lcd_begin(2, 1);
  1296  001E8E  0E01               	movlw	1
  1297  001E90  6E0D               	movwf	lcd_begin@dotsize,c
  1298  001E92  0E02               	movlw	2
  1299  001E94  EC1F  F011         	call	_lcd_begin
  1300                           
  1301                           ;LC-meter.c: 176: TRISC |= (1 << 4);
  1302  001E98  8894               	bsf	3988,4,c	;volatile
  1303                           
  1304                           ;LC-meter.c: 177: TRISC &= ~(1 << 5);
  1305  001E9A  9A94               	bcf	3988,5,c	;volatile
  1306                           
  1307                           ;LC-meter.c: 179: LATC &= ~(1 << 5);
  1308  001E9C  9A8B               	bcf	3979,5,c	;volatile
  1309                           
  1310                           ;LC-meter.c: 180: delay10ms(50);
  1311  001E9E  0E32               	movlw	50
  1312  001EA0  EC7F  F016         	call	_delay10ms
  1313                           
  1314                           ;LC-meter.c: 181: LATC |= (1 << 5);
  1315  001EA4  8A8B               	bsf	3979,5,c	;volatile
  1316                           
  1317                           ;LC-meter.c: 182: delay10ms(50);
  1318  001EA6  0E32               	movlw	50
  1319  001EA8  EC7F  F016         	call	_delay10ms
  1320                           
  1321                           ;LC-meter.c: 183: LATC &= ~(1 << 5);
  1322  001EAC  9A8B               	bcf	3979,5,c	;volatile
  1323                           
  1324                           ;LC-meter.c: 184: delay10ms(50);
  1325  001EAE  0E32               	movlw	50
  1326  001EB0  EC7F  F016         	call	_delay10ms
  1327                           
  1328                           ;LC-meter.c: 185: LATC |= (1 << 5);
  1329  001EB4  8A8B               	bsf	3979,5,c	;volatile
  1330                           
  1331                           ;LC-meter.c: 186: delay10ms(50);
  1332  001EB6  0E32               	movlw	50
  1333  001EB8  EC7F  F016         	call	_delay10ms
  1334                           
  1335                           ;LC-meter.c: 187: LATC &= ~(1 << 5);
  1336  001EBC  9A8B               	bcf	3979,5,c	;volatile
  1337                           
  1338                           ;LC-meter.c: 197: INTCON |= 0xc0;
  1339  001EBE  0EC0               	movlw	192
  1340  001EC0  12F2               	iorwf	intcon,f,c	;volatile
  1341                           
  1342                           ;LC-meter.c: 203: lcd_gotoxy(0, 0);
  1343  001EC2  0E00               	movlw	0
  1344  001EC4  6A0D               	clrf	lcd_gotoxy@row,c
  1345  001EC6  EC76  F015         	call	_lcd_gotoxy
  1346                           
  1347                           ;LC-meter.c: 205: lcd_puts("LC-meter ");
  1348  001ECA  0E7F               	movlw	low STR_1
  1349  001ECC  6E0D               	movwf	lcd_puts@string,c
  1350  001ECE  ECAD  F015         	call	_lcd_puts	;wreg free
  1351                           
  1352                           ;LC-meter.c: 206: format_double( CCal);
  1353  001ED2  C0E9  F0D6         	movff	_CCal,format_double@num
  1354  001ED6  C0EA  F0D7         	movff	_CCal+1,format_double@num+1
  1355  001EDA  C0EB  F0D8         	movff	_CCal+2,format_double@num+2
  1356  001EDE  C0EC  F0D9         	movff	_CCal+3,format_double@num+3
  1357  001EE2  EC3E  F00C         	call	_format_double	;wreg free
  1358                           
  1359                           ;LC-meter.c: 212: delay10ms(200);
  1360  001EE6  0EC8               	movlw	200
  1361  001EE8  EC7F  F016         	call	_delay10ms
  1362                           
  1363                           ;LC-meter.c: 215: calibrate();
  1364  001EEC  ECA4  F010         	call	_calibrate	;wreg free
  1365                           
  1366                           ;LC-meter.c: 218: lcd_clear();
  1367  001EF0  EC4F  F016         	call	_lcd_clear	;wreg free
  1368  001EF4                     l4908:
  1369  001EF4  FFFF               	dw	65535	; assembler added errata NOP
  1370  001EF6  0E01               	movlw	1
  1371                           
  1372                           ;LC-meter.c: 227: char new_mode = (!!(PORTC & (1 << 4)));
  1373  001EF8  A882               	btfss	3970,4,c	;volatile
  1374  001EFA  0E00               	movlw	0
  1375  001EFC  0100               	movlb	0	; () banked
  1376  001EFE  6FDA               	movwf	main@new_mode& (0+255),b
  1377                           
  1378                           ; BSR set to: 0
  1379                           ;LC-meter.c: 229: if(new_mode != mode) {
  1380  001F00  19F7               	xorwf	_mode& (0+255),w,b
  1381  001F02  E002               	bz	l4914
  1382                           
  1383                           ; BSR set to: 0
  1384                           ;LC-meter.c: 234: mode = new_mode;
  1385  001F04  C0DA  F0F7         	movff	main@new_mode,_mode
  1386  001F08                     l4914:
  1387                           
  1388                           ; BSR set to: 0
  1389                           ;LC-meter.c: 235: }
  1390                           ;LC-meter.c: 237: if(led_cycle >= led_interval)
  1391  001F08  51F1               	movf	_led_interval& (0+255),w,b	;volatile
  1392  001F0A  5C6F               	subwf	_led_cycle,w,c	;volatile
  1393  001F0C  51F2               	movf	(_led_interval+1)& (0+255),w,b	;volatile
  1394  001F0E  5870               	subwfb	_led_cycle+1,w,c	;volatile
  1395  001F10  E302               	bnc	l4918
  1396                           
  1397                           ; BSR set to: 0
  1398                           ;LC-meter.c: 238: led_cycle = 0;
  1399  001F12  6A6F               	clrf	_led_cycle,c	;volatile
  1400  001F14  6A70               	clrf	_led_cycle+1,c	;volatile
  1401  001F16                     l4918:
  1402                           
  1403                           ; BSR set to: 0
  1404                           ;LC-meter.c: 240: if(mode)
  1405  001F16  51F7               	movf	_mode& (0+255),w,b
  1406  001F18  E003               	bz	l4922
  1407                           
  1408                           ; BSR set to: 0
  1409                           ;LC-meter.c: 241: measure_capacitance();
  1410  001F1A  ECEF  F005         	call	_measure_capacitance	;wreg free
  1411  001F1E  D002               	goto	l4924
  1412  001F20                     l4922:
  1413                           
  1414                           ; BSR set to: 0
  1415                           ;LC-meter.c: 242: else
  1416                           ;LC-meter.c: 243: measure_inductance();
  1417  001F20  EC5B  F003         	call	_measure_inductance	;wreg free
  1418  001F24                     l4924:
  1419  001F24  FFFF               	dw	65535	; assembler added errata NOP
  1420                           
  1421                           ;LC-meter.c: 245: print_indicator(1);
  1422  001F26  0E01               	movlw	1
  1423  001F28  ECDF  F015         	call	_print_indicator
  1424                           
  1425                           ;LC-meter.c: 246: delay10ms(30);
  1426  001F2C  0E1E               	movlw	30
  1427  001F2E  EC7F  F016         	call	_delay10ms
  1428                           
  1429                           ;LC-meter.c: 248: print_indicator(0);
  1430  001F32  0E00               	movlw	0
  1431  001F34  ECDF  F015         	call	_print_indicator
  1432                           
  1433                           ;LC-meter.c: 249: delay10ms(20);
  1434  001F38  0E14               	movlw	20
  1435  001F3A  EC7F  F016         	call	_delay10ms
  1436                           
  1437                           ;LC-meter.c: 250: }
  1438  001F3E  D7DA               	goto	l4908
  1439  001F40                     __end_of_main:
  1440                           	opt stack 0
  1441                           tblptru	equ	0xFF8
  1442                           tblptrh	equ	0xFF7
  1443                           tblptrl	equ	0xFF6
  1444                           tablat	equ	0xFF5
  1445                           intcon	equ	0xFF2
  1446                           intcon2	equ	0xFF1
  1447                           postinc0	equ	0xFEE
  1448                           wreg	equ	0xFE8
  1449                           postdec1	equ	0xFE5
  1450                           fsr1l	equ	0xFE1
  1451                           
  1452 ;; *************** function _timer2_init *****************
  1453 ;; Defined at:
  1454 ;;		line 143 in file "lib/timer.c"
  1455 ;; Parameters:    Size  Location     Type
  1456 ;;  ps_mode         1    wreg     unsigned char 
  1457 ;; Auto vars:     Size  Location     Type
  1458 ;;  ps_mode         1   11[COMRAM] unsigned char 
  1459 ;;  postscaler      1    0        unsigned char 
  1460 ;;  ps              1    9[COMRAM] unsigned char 
  1461 ;; Return value:  Size  Location     Type
  1462 ;;                  1    wreg      void 
  1463 ;; Registers used:
  1464 ;;		wreg, status,2, status,0
  1465 ;; Tracked objects:
  1466 ;;		On entry : 0/0
  1467 ;;		On exit  : 0/0
  1468 ;;		Unchanged: 0/0
  1469 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1470 ;;      Params:         0       0       0       0       0       0       0
  1471 ;;      Locals:         3       0       0       0       0       0       0
  1472 ;;      Temps:          1       0       0       0       0       0       0
  1473 ;;      Totals:         4       0       0       0       0       0       0
  1474 ;;Total ram usage:        4 bytes
  1475 ;; Hardware stack levels used:    1
  1476 ;; Hardware stack levels required when called:    2
  1477 ;; This function calls:
  1478 ;;		Nothing
  1479 ;; This function is called by:
  1480 ;;		_main
  1481 ;; This function uses a non-reentrant model
  1482 ;;
  1483                           
  1484                           	psect	text1
  1485  002B24                     __ptext1:
  1486                           	opt stack 0
  1487  002B24                     _timer2_init:
  1488                           	opt stack 0
  1489  002B24  FFFF               	dw	65535	; assembler added errata NOP
  1490                           
  1491                           ;incstack = 0
  1492                           ;timer2_init@ps_mode stored from wreg
  1493  002B26  6E0C               	movwf	timer2_init@ps_mode,c
  1494                           
  1495                           ;timer.c: 144: uint8_t ps = ps_mode & 0b1111;
  1496  002B28  500C               	movf	timer2_init@ps_mode,w,c
  1497  002B2A  0B0F               	andlw	15
  1498  002B2C  6E0A               	movwf	timer2_init@ps,c
  1499                           
  1500                           ;timer.c: 148: T2CON &= ~0b01111111;
  1501  002B2E  0E80               	movlw	128
  1502  002B30  16CA               	andwf	4042,f,c	;volatile
  1503                           
  1504                           ;timer.c: 150: T2CON |= (postscaler & 0b1111) << 3;
  1505  002B32  50CA               	movf	4042,w,c	;volatile
  1506                           
  1507                           ;timer.c: 151: T2CON |= (ps & 0b11);
  1508  002B34  500A               	movf	timer2_init@ps,w,c
  1509  002B36  0B03               	andlw	3
  1510  002B38  12CA               	iorwf	4042,f,c	;volatile
  1511                           
  1512                           ;timer.c: 153: TMR2 = 0;
  1513  002B3A  6ACC               	clrf	4044,c	;volatile
  1514                           
  1515                           ;timer.c: 155: T2CON |= 0b100;
  1516  002B3C  84CA               	bsf	4042,2,c	;volatile
  1517                           
  1518                           ;timer.c: 158: PIR1 &= ~0b10;
  1519  002B3E  929E               	bcf	3998,1,c	;volatile
  1520                           
  1521                           ;timer.c: 159: PIE1 = (!!(ps_mode & 0x80)) << 1;
  1522  002B40  AE0C               	btfss	timer2_init@ps_mode,7,c
  1523  002B42  D003               	goto	u3450
  1524  002B44  6A09               	clrf	??_timer2_init& (0+255),c
  1525  002B46  2A09               	incf	??_timer2_init& (0+255),f,c
  1526  002B48  D002               	goto	u3468
  1527  002B4A                     u3450:
  1528  002B4A  FFFF               	dw	65535	; assembler added errata NOP
  1529  002B4C  6A09               	clrf	??_timer2_init& (0+255),c
  1530  002B4E                     u3468:
  1531  002B4E  FFFF               	dw	65535	; assembler added errata NOP
  1532  002B50  90D8               	bcf	status,0,c
  1533  002B52  3409               	rlcf	??_timer2_init,w,c
  1534  002B54  6E9D               	movwf	3997,c	;volatile
  1535  002B56  0012               	return		;funcret
  1536  002B58  FFFF               	dw	65535	; errata NOP
  1537  002B5A                     __end_of_timer2_init:
  1538                           	opt stack 0
  1539                           tblptru	equ	0xFF8
  1540                           tblptrh	equ	0xFF7
  1541                           tblptrl	equ	0xFF6
  1542                           tablat	equ	0xFF5
  1543                           intcon	equ	0xFF2
  1544                           intcon2	equ	0xFF1
  1545                           postinc0	equ	0xFEE
  1546                           wreg	equ	0xFE8
  1547                           postdec1	equ	0xFE5
  1548                           fsr1l	equ	0xFE1
  1549                           status	equ	0xFD8
  1550                           
  1551 ;; *************** function _timer0_init *****************
  1552 ;; Defined at:
  1553 ;;		line 28 in file "lib/timer.c"
  1554 ;; Parameters:    Size  Location     Type
  1555 ;;  ps_mode         1    wreg     unsigned char 
  1556 ;; Auto vars:     Size  Location     Type
  1557 ;;  ps_mode         1   18[COMRAM] unsigned char 
  1558 ;;  prescaler       1   17[COMRAM] unsigned char 
  1559 ;; Return value:  Size  Location     Type
  1560 ;;                  1    wreg      void 
  1561 ;; Registers used:
  1562 ;;		wreg, status,2, status,0
  1563 ;; Tracked objects:
  1564 ;;		On entry : 3F/0
  1565 ;;		On exit  : 0/0
  1566 ;;		Unchanged: 0/0
  1567 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1568 ;;      Params:         0       0       0       0       0       0       0
  1569 ;;      Locals:        10       0       0       0       0       0       0
  1570 ;;      Temps:          1       0       0       0       0       0       0
  1571 ;;      Totals:        11       0       0       0       0       0       0
  1572 ;;Total ram usage:       11 bytes
  1573 ;; Hardware stack levels used:    1
  1574 ;; Hardware stack levels required when called:    2
  1575 ;; This function calls:
  1576 ;;		Nothing
  1577 ;; This function is called by:
  1578 ;;		_main
  1579 ;; This function uses a non-reentrant model
  1580 ;;
  1581                           
  1582                           	psect	text2
  1583  002604                     __ptext2:
  1584                           	opt stack 0
  1585  002604                     _timer0_init:
  1586                           	opt stack 0
  1587  002604  FFFF               	dw	65535	; assembler added errata NOP
  1588                           
  1589                           ;incstack = 0
  1590                           ;timer0_init@ps_mode stored from wreg
  1591  002606  6E13               	movwf	timer0_init@ps_mode,c
  1592                           
  1593                           ;timer.c: 29: uint8_t prescaler = ps_mode & 0b1111;
  1594  002608  5013               	movf	timer0_init@ps_mode,w,c
  1595  00260A  0B0F               	andlw	15
  1596  00260C  6E12               	movwf	timer0_init@prescaler,c
  1597                           
  1598                           ;timer.c: 31: TMR0 = 0;
  1599  00260E  6AD6               	clrf	4054,c	;volatile
  1600  002610  6AD7               	clrf	4055,c	;volatile
  1601                           
  1602                           ;timer.c: 34: T0CON |= (!!(ps_mode & 0x40)) ? 0x40 : 0x00;
  1603  002612  BC13               	btfsc	timer0_init@ps_mode,6,c
  1604  002614  D003               	goto	l3446
  1605  002616  6A0A               	clrf	_timer0_init$450,c
  1606  002618  6A0B               	clrf	_timer0_init$450+1,c
  1607  00261A  D004               	goto	l3448
  1608  00261C                     l3446:
  1609  00261C  FFFF               	dw	65535	; assembler added errata NOP
  1610  00261E  6A0B               	clrf	_timer0_init$450+1,c
  1611  002620  0E40               	movlw	64
  1612  002622  6E0A               	movwf	_timer0_init$450,c
  1613  002624                     l3448:
  1614  002624  FFFF               	dw	65535	; assembler added errata NOP
  1615  002626  500A               	movf	_timer0_init$450,w,c
  1616  002628  12D5               	iorwf	4053,f,c	;volatile
  1617                           
  1618                           ;timer.c: 50: T0CON |= (!!(ps_mode & 0x20)) ? 0x20 : 0x00;
  1619  00262A  BA13               	btfsc	timer0_init@ps_mode,5,c
  1620  00262C  D003               	goto	l3454
  1621  00262E  6A0C               	clrf	_timer0_init$451,c
  1622  002630  6A0D               	clrf	_timer0_init$451+1,c
  1623  002632  D004               	goto	l3456
  1624  002634                     l3454:
  1625  002634  FFFF               	dw	65535	; assembler added errata NOP
  1626  002636  6A0D               	clrf	_timer0_init$451+1,c
  1627  002638  0E20               	movlw	32
  1628  00263A  6E0C               	movwf	_timer0_init$451,c
  1629  00263C                     l3456:
  1630  00263C  FFFF               	dw	65535	; assembler added errata NOP
  1631  00263E  500C               	movf	_timer0_init$451,w,c
  1632  002640  12D5               	iorwf	4053,f,c	;volatile
  1633                           
  1634                           ;timer.c: 53: T0CON |= (!!(ps_mode & 0x10)) ? 0x10 : 0x00;
  1635  002642  B813               	btfsc	timer0_init@ps_mode,4,c
  1636  002644  D003               	goto	l3462
  1637  002646  6A0E               	clrf	_timer0_init$452,c
  1638  002648  6A0F               	clrf	_timer0_init$452+1,c
  1639  00264A  D004               	goto	l3464
  1640  00264C                     l3462:
  1641  00264C  FFFF               	dw	65535	; assembler added errata NOP
  1642  00264E  6A0F               	clrf	_timer0_init$452+1,c
  1643  002650  0E10               	movlw	16
  1644  002652  6E0E               	movwf	_timer0_init$452,c
  1645  002654                     l3464:
  1646  002654  FFFF               	dw	65535	; assembler added errata NOP
  1647  002656  500E               	movf	_timer0_init$452,w,c
  1648  002658  12D5               	iorwf	4053,f,c	;volatile
  1649                           
  1650                           ;timer.c: 56: T0CON &= (!!prescaler) ? ~0x08 : ~0x00;
  1651  00265A  5012               	movf	timer0_init@prescaler,w,c
  1652  00265C  E103               	bnz	l3470
  1653  00265E  6810               	setf	_timer0_init$453,c
  1654  002660  6811               	setf	_timer0_init$453+1,c
  1655  002662  D003               	goto	l3472
  1656  002664                     l3470:
  1657  002664  6811               	setf	_timer0_init$453+1,c
  1658  002666  0EF7               	movlw	247
  1659  002668  6E10               	movwf	_timer0_init$453,c
  1660  00266A                     l3472:
  1661  00266A  FFFF               	dw	65535	; assembler added errata NOP
  1662  00266C  5010               	movf	_timer0_init$453,w,c
  1663  00266E  16D5               	andwf	4053,f,c	;volatile
  1664                           
  1665                           ;timer.c: 58: T0CON &= ~0b111;
  1666  002670  0EF8               	movlw	248
  1667  002672  16D5               	andwf	4053,f,c	;volatile
  1668                           
  1669                           ;timer.c: 60: if(prescaler > 0) {
  1670  002674  5012               	movf	timer0_init@prescaler,w,c
  1671  002676  E003               	bz	l3478
  1672                           
  1673                           ;timer.c: 61: T0CON |= (prescaler - 1) & 0b111;
  1674  002678  0412               	decf	timer0_init@prescaler,w,c
  1675  00267A  0B07               	andlw	7
  1676  00267C  12D5               	iorwf	4053,f,c	;volatile
  1677  00267E                     l3478:
  1678                           
  1679                           ;timer.c: 67: }
  1680                           ;timer.c: 72: INTCONbits.TMR0IF = 0;
  1681  00267E  94F2               	bcf	intcon,2,c	;volatile
  1682                           
  1683                           ;timer.c: 73: INTCONbits.T0IE = (ps_mode & 0x80) ? 1 : 0;
  1684  002680  AE13               	btfss	timer0_init@ps_mode,7,c
  1685  002682  D003               	goto	u3430
  1686  002684  6A09               	clrf	??_timer0_init& (0+255),c
  1687  002686  2A09               	incf	??_timer0_init& (0+255),f,c
  1688  002688  D002               	goto	u3448
  1689  00268A                     u3430:
  1690  00268A  FFFF               	dw	65535	; assembler added errata NOP
  1691  00268C  6A09               	clrf	??_timer0_init& (0+255),c
  1692  00268E                     u3448:
  1693  00268E  FFFF               	dw	65535	; assembler added errata NOP
  1694  002690  3A09               	swapf	??_timer0_init,f,c
  1695  002692  4609               	rlncf	??_timer0_init,f,c
  1696  002694  50F2               	movf	intcon,w,c	;volatile
  1697  002696  1809               	xorwf	??_timer0_init,w,c
  1698  002698  0BDF               	andlw	-33
  1699  00269A  1809               	xorwf	??_timer0_init,w,c
  1700  00269C  6EF2               	movwf	intcon,c	;volatile
  1701  00269E  0012               	return		;funcret
  1702  0026A0  FFFF               	dw	65535	; errata NOP
  1703  0026A2                     __end_of_timer0_init:
  1704                           	opt stack 0
  1705                           tblptru	equ	0xFF8
  1706                           tblptrh	equ	0xFF7
  1707                           tblptrl	equ	0xFF6
  1708                           tablat	equ	0xFF5
  1709                           intcon	equ	0xFF2
  1710                           intcon2	equ	0xFF1
  1711                           postinc0	equ	0xFEE
  1712                           wreg	equ	0xFE8
  1713                           postdec1	equ	0xFE5
  1714                           fsr1l	equ	0xFE1
  1715                           status	equ	0xFD8
  1716                           
  1717 ;; *************** function _print_indicator *****************
  1718 ;; Defined at:
  1719 ;;		line 464 in file "src/print.c"
  1720 ;; Parameters:    Size  Location     Type
  1721 ;;  indicate        1    wreg     unsigned char 
  1722 ;; Auto vars:     Size  Location     Type
  1723 ;;  indicate        1   18[COMRAM] unsigned char 
  1724 ;; Return value:  Size  Location     Type
  1725 ;;                  1    wreg      void 
  1726 ;; Registers used:
  1727 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1728 ;; Tracked objects:
  1729 ;;		On entry : 0/0
  1730 ;;		On exit  : 0/0
  1731 ;;		Unchanged: 0/0
  1732 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1733 ;;      Params:         0       0       0       0       0       0       0
  1734 ;;      Locals:         1       0       0       0       0       0       0
  1735 ;;      Temps:          0       0       0       0       0       0       0
  1736 ;;      Totals:         1       0       0       0       0       0       0
  1737 ;;Total ram usage:        1 bytes
  1738 ;; Hardware stack levels used:    1
  1739 ;; Hardware stack levels required when called:    6
  1740 ;; This function calls:
  1741 ;;		_lcd_gotoxy
  1742 ;;		_lcd_puts
  1743 ;; This function is called by:
  1744 ;;		_main
  1745 ;; This function uses a non-reentrant model
  1746 ;;
  1747                           
  1748                           	psect	text3
  1749  002BBE                     __ptext3:
  1750                           	opt stack 0
  1751  002BBE                     _print_indicator:
  1752                           	opt stack 0
  1753  002BBE  FFFF               	dw	65535	; assembler added errata NOP
  1754                           
  1755                           ;incstack = 0
  1756                           ;print_indicator@indicate stored from wreg
  1757  002BC0  6E13               	movwf	print_indicator@indicate,c
  1758                           
  1759                           ;print.c: 478: lcd_gotoxy(0, 1);
  1760  002BC2  0E01               	movlw	1
  1761  002BC4  6E0D               	movwf	lcd_gotoxy@row,c
  1762  002BC6  0E00               	movlw	0
  1763  002BC8  EC76  F015         	call	_lcd_gotoxy
  1764                           
  1765                           ;print.c: 479: if(indicate) {
  1766  002BCC  5013               	movf	print_indicator@indicate,w,c
  1767  002BCE  E005               	bz	l3716
  1768                           
  1769                           ;print.c: 480: lcd_puts("-*-");
  1770  002BD0  0E9B               	movlw	low STR_20
  1771  002BD2  6E0D               	movwf	lcd_puts@string,c
  1772  002BD4  ECAD  F015         	call	_lcd_puts	;wreg free
  1773                           
  1774                           ;print.c: 481: } else {
  1775  002BD8  D004               	goto	l421
  1776  002BDA                     l3716:
  1777                           
  1778                           ;print.c: 482: lcd_puts("   ");
  1779  002BDA  0E8C               	movlw	low (STR_2+3)
  1780  002BDC  6E0D               	movwf	lcd_puts@string,c
  1781  002BDE  ECAD  F015         	call	_lcd_puts	;wreg free
  1782  002BE2                     l421:
  1783  002BE2  FFFF               	dw	65535	; assembler added errata NOP
  1784  002BE4  0012               	return		;funcret
  1785  002BE6  FFFF               	dw	65535	; errata NOP
  1786  002BE8                     __end_of_print_indicator:
  1787                           	opt stack 0
  1788                           tblptru	equ	0xFF8
  1789                           tblptrh	equ	0xFF7
  1790                           tblptrl	equ	0xFF6
  1791                           tablat	equ	0xFF5
  1792                           intcon	equ	0xFF2
  1793                           intcon2	equ	0xFF1
  1794                           postinc0	equ	0xFEE
  1795                           wreg	equ	0xFE8
  1796                           postdec1	equ	0xFE5
  1797                           fsr1l	equ	0xFE1
  1798                           status	equ	0xFD8
  1799                           
  1800 ;; *************** function _measure_inductance *****************
  1801 ;; Defined at:
  1802 ;;		line 218 in file "src/measure.c"
  1803 ;; Parameters:    Size  Location     Type
  1804 ;;		None
  1805 ;; Auto vars:     Size  Location     Type
  1806 ;;  Lin             4   83[BANK0 ] void 
  1807 ;;  denominator     4   48[BANK0 ] void 
  1808 ;;  numerator       4   44[BANK0 ] void 
  1809 ;;  var             2   81[BANK0 ] unsigned int 
  1810 ;;  unit            1   68[BANK0 ] unsigned char 
  1811 ;; Return value:  Size  Location     Type
  1812 ;;                  1    wreg      void 
  1813 ;; Registers used:
  1814 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1815 ;; Tracked objects:
  1816 ;;		On entry : 3F/0
  1817 ;;		On exit  : 0/0
  1818 ;;		Unchanged: 0/0
  1819 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1820 ;;      Params:         0       0       0       0       0       0       0
  1821 ;;      Locals:         0      43       0       0       0       0       0
  1822 ;;      Temps:          0       0       0       0       0       0       0
  1823 ;;      Totals:         0      43       0       0       0       0       0
  1824 ;;Total ram usage:       43 bytes
  1825 ;; Hardware stack levels used:    1
  1826 ;; Hardware stack levels required when called:    7
  1827 ;; This function calls:
  1828 ;;		___fldiv
  1829 ;;		___flge
  1830 ;;		___flmul
  1831 ;;		___flsub
  1832 ;;		___fltol
  1833 ;;		___xxtofl
  1834 ;;		_lcd_gotoxy
  1835 ;;		_measure_freq
  1836 ;;		_print_reading
  1837 ;;		_print_unit
  1838 ;;		_put_str
  1839 ;; This function is called by:
  1840 ;;		_main
  1841 ;; This function uses a non-reentrant model
  1842 ;;
  1843                           
  1844                           	psect	text4
  1845  0006B6                     __ptext4:
  1846                           	opt stack 0
  1847  0006B6                     _measure_inductance:
  1848                           	opt stack 0
  1849  0006B6  FFFF               	dw	65535	; assembler added errata NOP
  1850                           
  1851                           ; BSR set to: 0
  1852                           ;measure.c: 219: uint8_t unit;
  1853                           ;measure.c: 220: uint16_t var;
  1854                           ;measure.c: 222: double Lin, numerator, denominator;
  1855                           ;measure.c: 225: lcd_gotoxy(0, 0);
  1856                           
  1857                           ;incstack = 0
  1858  0006B8  0E00               	movlw	0
  1859  0006BA  6A0D               	clrf	lcd_gotoxy@row,c
  1860  0006BC  EC76  F015         	call	_lcd_gotoxy
  1861                           
  1862                           ;measure.c: 226: put_str("Inductivity ");
  1863  0006C0  0E5C               	movlw	low STR_10
  1864  0006C2  6E0E               	movwf	put_str@s,c
  1865  0006C4  EC5A  F015         	call	_put_str	;wreg free
  1866                           
  1867                           ;measure.c: 228: var = measure_freq();
  1868  0006C8  EC22  F010         	call	_measure_freq	;wreg free
  1869  0006CC  C03B  F0D1         	movff	?_measure_freq,measure_inductance@var
  1870  0006D0  C03C  F0D2         	movff	?_measure_freq+1,measure_inductance@var+1
  1871                           
  1872                           ;measure.c: 230: F3 = (double)var;
  1873  0006D4  C0D1  F040         	movff	measure_inductance@var,___xxtofl@val
  1874  0006D8  C0D2  F041         	movff	measure_inductance@var+1,___xxtofl@val+1
  1875  0006DC  6A42               	clrf	___xxtofl@val+2,c
  1876  0006DE  6A43               	clrf	___xxtofl@val+3,c
  1877  0006E0  0E00               	movlw	0
  1878  0006E2  EC73  F00E         	call	___xxtofl
  1879  0006E6  C040  F0DB         	movff	?___xxtofl,_F3
  1880  0006EA  C041  F0DC         	movff	?___xxtofl+1,_F3+1
  1881  0006EE  C042  F0DD         	movff	?___xxtofl+2,_F3+2
  1882  0006F2  C043  F0DE         	movff	?___xxtofl+3,_F3+3
  1883                           
  1884                           ;measure.c: 231: if(F3 > F1)
  1885  0006F6  C0E5  F009         	movff	_F1,___flge@ff1
  1886  0006FA  C0E6  F00A         	movff	_F1+1,___flge@ff1+1
  1887  0006FE  C0E7  F00B         	movff	_F1+2,___flge@ff1+2
  1888  000702  C0E8  F00C         	movff	_F1+3,___flge@ff1+3
  1889  000706  C0DB  F00D         	movff	_F3,___flge@ff2
  1890  00070A  C0DC  F00E         	movff	_F3+1,___flge@ff2+1
  1891  00070E  C0DD  F00F         	movff	_F3+2,___flge@ff2+2
  1892  000712  C0DE  F010         	movff	_F3+3,___flge@ff2+3
  1893  000716  EC51  F013         	call	___flge	;wreg free
  1894  00071A  E208               	bc	l4790
  1895                           
  1896                           ;measure.c: 232: F3 = F1;
  1897  00071C  C0E5  F0DB         	movff	_F1,_F3
  1898  000720  C0E6  F0DC         	movff	_F1+1,_F3+1
  1899  000724  C0E7  F0DD         	movff	_F1+2,_F3+2
  1900  000728  C0E8  F0DE         	movff	_F1+3,_F3+3
  1901  00072C                     l4790:
  1902                           
  1903                           ;measure.c: 233: numerator = ((F1 * F1) - (F3 * F3)) * ((F1 * F1) - (F2 - F2)) * (100 * 
      +                          100);
  1904  00072C  C0DF  F091         	movff	_F2,___flsub@a
  1905  000730  C0E0  F092         	movff	_F2+1,___flsub@a+1
  1906  000734  C0E1  F093         	movff	_F2+2,___flsub@a+2
  1907  000738  C0E2  F094         	movff	_F2+3,___flsub@a+3
  1908  00073C  C0DF  F08D         	movff	_F2,___flsub@b
  1909  000740  C0E0  F08E         	movff	_F2+1,___flsub@b+1
  1910  000744  C0E1  F08F         	movff	_F2+2,___flsub@b+2
  1911  000748  C0E2  F090         	movff	_F2+3,___flsub@b+3
  1912  00074C  EC3A  F015         	call	___flsub	;wreg free
  1913  000750  C08D  F0B4         	movff	?___flsub,_measure_inductance$1305
  1914  000754  C08E  F0B5         	movff	?___flsub+1,_measure_inductance$1305+1
  1915  000758  C08F  F0B6         	movff	?___flsub+2,_measure_inductance$1305+2
  1916  00075C  C090  F0B7         	movff	?___flsub+3,_measure_inductance$1305+3
  1917                           
  1918                           ;measure.c: 233: numerator = ((F1 * F1) - (F3 * F3)) * ((F1 * F1) - (F2 - F2)) * (100 * 
      +                          100);
  1919  000760  C0B4  F091         	movff	_measure_inductance$1305,___flsub@a
  1920  000764  C0B5  F092         	movff	_measure_inductance$1305+1,___flsub@a+1
  1921  000768  C0B6  F093         	movff	_measure_inductance$1305+2,___flsub@a+2
  1922  00076C  C0B7  F094         	movff	_measure_inductance$1305+3,___flsub@a+3
  1923  000770  C0E5  F062         	movff	_F1,___flmul@a
  1924  000774  C0E6  F063         	movff	_F1+1,___flmul@a+1
  1925  000778  C0E7  F064         	movff	_F1+2,___flmul@a+2
  1926  00077C  C0E8  F065         	movff	_F1+3,___flmul@a+3
  1927  000780  C0E5  F05E         	movff	_F1,___flmul@b
  1928  000784  C0E6  F05F         	movff	_F1+1,___flmul@b+1
  1929  000788  C0E7  F060         	movff	_F1+2,___flmul@b+2
  1930  00078C  C0E8  F061         	movff	_F1+3,___flmul@b+3
  1931  000790  EC74  F007         	call	___flmul	;wreg free
  1932  000794  C05E  F08D         	movff	?___flmul,___flsub@b
  1933  000798  C05F  F08E         	movff	?___flmul+1,___flsub@b+1
  1934  00079C  C060  F08F         	movff	?___flmul+2,___flsub@b+2
  1935  0007A0  C061  F090         	movff	?___flmul+3,___flsub@b+3
  1936  0007A4  EC3A  F015         	call	___flsub	;wreg free
  1937  0007A8  C08D  F0C5         	movff	?___flsub,_measure_inductance$1306
  1938  0007AC  C08E  F0C6         	movff	?___flsub+1,_measure_inductance$1306+1
  1939  0007B0  C08F  F0C7         	movff	?___flsub+2,_measure_inductance$1306+2
  1940  0007B4  C090  F0C8         	movff	?___flsub+3,_measure_inductance$1306+3
  1941                           
  1942                           ;measure.c: 233: numerator = ((F1 * F1) - (F3 * F3)) * ((F1 * F1) - (F2 - F2)) * (100 * 
      +                          100);
  1943  0007B8  C0DB  F062         	movff	_F3,___flmul@a
  1944  0007BC  C0DC  F063         	movff	_F3+1,___flmul@a+1
  1945  0007C0  C0DD  F064         	movff	_F3+2,___flmul@a+2
  1946  0007C4  C0DE  F065         	movff	_F3+3,___flmul@a+3
  1947  0007C8  C0DB  F05E         	movff	_F3,___flmul@b
  1948  0007CC  C0DC  F05F         	movff	_F3+1,___flmul@b+1
  1949  0007D0  C0DD  F060         	movff	_F3+2,___flmul@b+2
  1950  0007D4  C0DE  F061         	movff	_F3+3,___flmul@b+3
  1951  0007D8  EC74  F007         	call	___flmul	;wreg free
  1952  0007DC  C05E  F091         	movff	?___flmul,___flsub@a
  1953  0007E0  C05F  F092         	movff	?___flmul+1,___flsub@a+1
  1954  0007E4  C060  F093         	movff	?___flmul+2,___flsub@a+2
  1955  0007E8  C061  F094         	movff	?___flmul+3,___flsub@a+3
  1956  0007EC  C0E5  F062         	movff	_F1,___flmul@a
  1957  0007F0  C0E6  F063         	movff	_F1+1,___flmul@a+1
  1958  0007F4  C0E7  F064         	movff	_F1+2,___flmul@a+2
  1959  0007F8  C0E8  F065         	movff	_F1+3,___flmul@a+3
  1960  0007FC  C0E5  F05E         	movff	_F1,___flmul@b
  1961  000800  C0E6  F05F         	movff	_F1+1,___flmul@b+1
  1962  000804  C0E7  F060         	movff	_F1+2,___flmul@b+2
  1963  000808  C0E8  F061         	movff	_F1+3,___flmul@b+3
  1964  00080C  EC74  F007         	call	___flmul	;wreg free
  1965  000810  C05E  F08D         	movff	?___flmul,___flsub@b
  1966  000814  C05F  F08E         	movff	?___flmul+1,___flsub@b+1
  1967  000818  C060  F08F         	movff	?___flmul+2,___flsub@b+2
  1968  00081C  C061  F090         	movff	?___flmul+3,___flsub@b+3
  1969  000820  EC3A  F015         	call	___flsub	;wreg free
  1970  000824  C08D  F0C9         	movff	?___flsub,_measure_inductance$1307
  1971  000828  C08E  F0CA         	movff	?___flsub+1,_measure_inductance$1307+1
  1972  00082C  C08F  F0CB         	movff	?___flsub+2,_measure_inductance$1307+2
  1973  000830  C090  F0CC         	movff	?___flsub+3,_measure_inductance$1307+3
  1974                           
  1975                           ;measure.c: 233: numerator = ((F1 * F1) - (F3 * F3)) * ((F1 * F1) - (F2 - F2)) * (100 * 
      +                          100);
  1976  000834  C0C5  F062         	movff	_measure_inductance$1306,___flmul@a
  1977  000838  C0C6  F063         	movff	_measure_inductance$1306+1,___flmul@a+1
  1978  00083C  C0C7  F064         	movff	_measure_inductance$1306+2,___flmul@a+2
  1979  000840  C0C8  F065         	movff	_measure_inductance$1306+3,___flmul@a+3
  1980  000844  C0C9  F05E         	movff	_measure_inductance$1307,___flmul@b
  1981  000848  C0CA  F05F         	movff	_measure_inductance$1307+1,___flmul@b+1
  1982  00084C  C0CB  F060         	movff	_measure_inductance$1307+2,___flmul@b+2
  1983  000850  C0CC  F061         	movff	_measure_inductance$1307+3,___flmul@b+3
  1984  000854  EC74  F007         	call	___flmul	;wreg free
  1985  000858  C05E  F0CD         	movff	?___flmul,_measure_inductance$1308
  1986  00085C  C05F  F0CE         	movff	?___flmul+1,_measure_inductance$1308+1
  1987  000860  C060  F0CF         	movff	?___flmul+2,_measure_inductance$1308+2
  1988  000864  C061  F0D0         	movff	?___flmul+3,_measure_inductance$1308+3
  1989                           
  1990                           ; BSR set to: 0
  1991                           ;measure.c: 233: numerator = ((F1 * F1) - (F3 * F3)) * ((F1 * F1) - (F2 - F2)) * (100 * 
      +                          100);
  1992  000868  C0CD  F05E         	movff	_measure_inductance$1308,___flmul@b
  1993  00086C  C0CE  F05F         	movff	_measure_inductance$1308+1,___flmul@b+1
  1994  000870  C0CF  F060         	movff	_measure_inductance$1308+2,___flmul@b+2
  1995  000874  C0D0  F061         	movff	_measure_inductance$1308+3,___flmul@b+3
  1996  000878  6A62               	clrf	___flmul@a,c
  1997  00087A  0E40               	movlw	64
  1998  00087C  6E63               	movwf	___flmul@a+1,c
  1999  00087E  0E1C               	movlw	28
  2000  000880  6E64               	movwf	___flmul@a+2,c
  2001  000882  0E46               	movlw	70
  2002  000884  6E65               	movwf	___flmul@a+3,c
  2003  000886  EC74  F007         	call	___flmul	;wreg free
  2004  00088A  C05E  F0AC         	movff	?___flmul,measure_inductance@numerator
  2005  00088E  C05F  F0AD         	movff	?___flmul+1,measure_inductance@numerator+1
  2006  000892  C060  F0AE         	movff	?___flmul+2,measure_inductance@numerator+2
  2007  000896  C061  F0AF         	movff	?___flmul+3,measure_inductance@numerator+3
  2008                           
  2009                           ; BSR set to: 0
  2010                           ;measure.c: 234: denominator = 4 * 3.14159265358979323846l * 3.14159265358979323846l * F
      +                          1 * F1 * F2 * F2 * F3 * F3 * CCal;
  2011  00089A  C0E5  F062         	movff	_F1,___flmul@a
  2012  00089E  C0E6  F063         	movff	_F1+1,___flmul@a+1
  2013  0008A2  C0E7  F064         	movff	_F1+2,___flmul@a+2
  2014  0008A6  C0E8  F065         	movff	_F1+3,___flmul@a+3
  2015  0008AA  C0E5  F05E         	movff	_F1,___flmul@b
  2016  0008AE  C0E6  F05F         	movff	_F1+1,___flmul@b+1
  2017  0008B2  C0E7  F060         	movff	_F1+2,___flmul@b+2
  2018  0008B6  C0E8  F061         	movff	_F1+3,___flmul@b+3
  2019  0008BA  EC74  F007         	call	___flmul	;wreg free
  2020  0008BE  C05E  F0B8         	movff	?___flmul,_measure_inductance$1309
  2021  0008C2  C05F  F0B9         	movff	?___flmul+1,_measure_inductance$1309+1
  2022  0008C6  C060  F0BA         	movff	?___flmul+2,_measure_inductance$1309+2
  2023  0008CA  C061  F0BB         	movff	?___flmul+3,_measure_inductance$1309+3
  2024                           
  2025                           ; BSR set to: 0
  2026                           ;measure.c: 234: denominator = 4 * 3.14159265358979323846l * 3.14159265358979323846l * F
      +                          1 * F1 * F2 * F2 * F3 * F3 * CCal;
  2027  0008CE  C0DF  F062         	movff	_F2,___flmul@a
  2028  0008D2  C0E0  F063         	movff	_F2+1,___flmul@a+1
  2029  0008D6  C0E1  F064         	movff	_F2+2,___flmul@a+2
  2030  0008DA  C0E2  F065         	movff	_F2+3,___flmul@a+3
  2031  0008DE  C0B8  F05E         	movff	_measure_inductance$1309,___flmul@b
  2032  0008E2  C0B9  F05F         	movff	_measure_inductance$1309+1,___flmul@b+1
  2033  0008E6  C0BA  F060         	movff	_measure_inductance$1309+2,___flmul@b+2
  2034  0008EA  C0BB  F061         	movff	_measure_inductance$1309+3,___flmul@b+3
  2035  0008EE  EC74  F007         	call	___flmul	;wreg free
  2036  0008F2  C05E  F0C5         	movff	?___flmul,_measure_inductance$1306
  2037  0008F6  C05F  F0C6         	movff	?___flmul+1,_measure_inductance$1306+1
  2038  0008FA  C060  F0C7         	movff	?___flmul+2,_measure_inductance$1306+2
  2039  0008FE  C061  F0C8         	movff	?___flmul+3,_measure_inductance$1306+3
  2040                           
  2041                           ; BSR set to: 0
  2042                           ;measure.c: 234: denominator = 4 * 3.14159265358979323846l * 3.14159265358979323846l * F
      +                          1 * F1 * F2 * F2 * F3 * F3 * CCal;
  2043  000902  C0DF  F062         	movff	_F2,___flmul@a
  2044  000906  C0E0  F063         	movff	_F2+1,___flmul@a+1
  2045  00090A  C0E1  F064         	movff	_F2+2,___flmul@a+2
  2046  00090E  C0E2  F065         	movff	_F2+3,___flmul@a+3
  2047  000912  C0C5  F05E         	movff	_measure_inductance$1306,___flmul@b
  2048  000916  C0C6  F05F         	movff	_measure_inductance$1306+1,___flmul@b+1
  2049  00091A  C0C7  F060         	movff	_measure_inductance$1306+2,___flmul@b+2
  2050  00091E  C0C8  F061         	movff	_measure_inductance$1306+3,___flmul@b+3
  2051  000922  EC74  F007         	call	___flmul	;wreg free
  2052  000926  C05E  F0C9         	movff	?___flmul,_measure_inductance$1307
  2053  00092A  C05F  F0CA         	movff	?___flmul+1,_measure_inductance$1307+1
  2054  00092E  C060  F0CB         	movff	?___flmul+2,_measure_inductance$1307+2
  2055  000932  C061  F0CC         	movff	?___flmul+3,_measure_inductance$1307+3
  2056                           
  2057                           ; BSR set to: 0
  2058                           ;measure.c: 234: denominator = 4 * 3.14159265358979323846l * 3.14159265358979323846l * F
      +                          1 * F1 * F2 * F2 * F3 * F3 * CCal;
  2059  000936  C0DB  F062         	movff	_F3,___flmul@a
  2060  00093A  C0DC  F063         	movff	_F3+1,___flmul@a+1
  2061  00093E  C0DD  F064         	movff	_F3+2,___flmul@a+2
  2062  000942  C0DE  F065         	movff	_F3+3,___flmul@a+3
  2063  000946  C0C9  F05E         	movff	_measure_inductance$1307,___flmul@b
  2064  00094A  C0CA  F05F         	movff	_measure_inductance$1307+1,___flmul@b+1
  2065  00094E  C0CB  F060         	movff	_measure_inductance$1307+2,___flmul@b+2
  2066  000952  C0CC  F061         	movff	_measure_inductance$1307+3,___flmul@b+3
  2067  000956  EC74  F007         	call	___flmul	;wreg free
  2068  00095A  C05E  F0CD         	movff	?___flmul,_measure_inductance$1308
  2069  00095E  C05F  F0CE         	movff	?___flmul+1,_measure_inductance$1308+1
  2070  000962  C060  F0CF         	movff	?___flmul+2,_measure_inductance$1308+2
  2071  000966  C061  F0D0         	movff	?___flmul+3,_measure_inductance$1308+3
  2072                           
  2073                           ; BSR set to: 0
  2074                           ;measure.c: 234: denominator = 4 * 3.14159265358979323846l * 3.14159265358979323846l * F
      +                          1 * F1 * F2 * F2 * F3 * F3 * CCal;
  2075  00096A  C0DB  F062         	movff	_F3,___flmul@a
  2076  00096E  C0DC  F063         	movff	_F3+1,___flmul@a+1
  2077  000972  C0DD  F064         	movff	_F3+2,___flmul@a+2
  2078  000976  C0DE  F065         	movff	_F3+3,___flmul@a+3
  2079  00097A  C0CD  F05E         	movff	_measure_inductance$1308,___flmul@b
  2080  00097E  C0CE  F05F         	movff	_measure_inductance$1308+1,___flmul@b+1
  2081  000982  C0CF  F060         	movff	_measure_inductance$1308+2,___flmul@b+2
  2082  000986  C0D0  F061         	movff	_measure_inductance$1308+3,___flmul@b+3
  2083  00098A  EC74  F007         	call	___flmul	;wreg free
  2084  00098E  C05E  F0BC         	movff	?___flmul,_measure_inductance$1310
  2085  000992  C05F  F0BD         	movff	?___flmul+1,_measure_inductance$1310+1
  2086  000996  C060  F0BE         	movff	?___flmul+2,_measure_inductance$1310+2
  2087  00099A  C061  F0BF         	movff	?___flmul+3,_measure_inductance$1310+3
  2088                           
  2089                           ; BSR set to: 0
  2090                           ;measure.c: 234: denominator = 4 * 3.14159265358979323846l * 3.14159265358979323846l * F
      +                          1 * F1 * F2 * F2 * F3 * F3 * CCal;
  2091  00099E  C0E9  F062         	movff	_CCal,___flmul@a
  2092  0009A2  C0EA  F063         	movff	_CCal+1,___flmul@a+1
  2093  0009A6  C0EB  F064         	movff	_CCal+2,___flmul@a+2
  2094  0009AA  C0EC  F065         	movff	_CCal+3,___flmul@a+3
  2095  0009AE  C0BC  F05E         	movff	_measure_inductance$1310,___flmul@b
  2096  0009B2  C0BD  F05F         	movff	_measure_inductance$1310+1,___flmul@b+1
  2097  0009B6  C0BE  F060         	movff	_measure_inductance$1310+2,___flmul@b+2
  2098  0009BA  C0BF  F061         	movff	_measure_inductance$1310+3,___flmul@b+3
  2099  0009BE  EC74  F007         	call	___flmul	;wreg free
  2100  0009C2  C05E  F0C0         	movff	?___flmul,_measure_inductance$1311
  2101  0009C6  C05F  F0C1         	movff	?___flmul+1,_measure_inductance$1311+1
  2102  0009CA  C060  F0C2         	movff	?___flmul+2,_measure_inductance$1311+2
  2103  0009CE  C061  F0C3         	movff	?___flmul+3,_measure_inductance$1311+3
  2104                           
  2105                           ; BSR set to: 0
  2106                           ;measure.c: 234: denominator = 4 * 3.14159265358979323846l * 3.14159265358979323846l * F
      +                          1 * F1 * F2 * F2 * F3 * F3 * CCal;
  2107  0009D2  C0C0  F05E         	movff	_measure_inductance$1311,___flmul@b
  2108  0009D6  C0C1  F05F         	movff	_measure_inductance$1311+1,___flmul@b+1
  2109  0009DA  C0C2  F060         	movff	_measure_inductance$1311+2,___flmul@b+2
  2110  0009DE  C0C3  F061         	movff	_measure_inductance$1311+3,___flmul@b+3
  2111  0009E2  0EE6               	movlw	230
  2112  0009E4  6E62               	movwf	___flmul@a,c
  2113  0009E6  0EE9               	movlw	233
  2114  0009E8  6E63               	movwf	___flmul@a+1,c
  2115  0009EA  0E1D               	movlw	29
  2116  0009EC  6E64               	movwf	___flmul@a+2,c
  2117  0009EE  0E42               	movlw	66
  2118  0009F0  6E65               	movwf	___flmul@a+3,c
  2119  0009F2  EC74  F007         	call	___flmul	;wreg free
  2120  0009F6  C05E  F0B0         	movff	?___flmul,measure_inductance@denominator
  2121  0009FA  C05F  F0B1         	movff	?___flmul+1,measure_inductance@denominator+1
  2122  0009FE  C060  F0B2         	movff	?___flmul+2,measure_inductance@denominator+2
  2123  000A02  C061  F0B3         	movff	?___flmul+3,measure_inductance@denominator+3
  2124                           
  2125                           ; BSR set to: 0
  2126                           ;measure.c: 235: Lin = (numerator / denominator) * 1e+15l;
  2127  000A06  C0B0  F00D         	movff	measure_inductance@denominator,___fldiv@a
  2128  000A0A  C0B1  F00E         	movff	measure_inductance@denominator+1,___fldiv@a+1
  2129  000A0E  C0B2  F00F         	movff	measure_inductance@denominator+2,___fldiv@a+2
  2130  000A12  C0B3  F010         	movff	measure_inductance@denominator+3,___fldiv@a+3
  2131  000A16  C0AC  F009         	movff	measure_inductance@numerator,___fldiv@b
  2132  000A1A  C0AD  F00A         	movff	measure_inductance@numerator+1,___fldiv@b+1
  2133  000A1E  C0AE  F00B         	movff	measure_inductance@numerator+2,___fldiv@b+2
  2134  000A22  C0AF  F00C         	movff	measure_inductance@numerator+3,___fldiv@b+3
  2135  000A26  EC38  F00B         	call	___fldiv	;wreg free
  2136  000A2A  C009  F05E         	movff	?___fldiv,___flmul@b
  2137  000A2E  C00A  F05F         	movff	?___fldiv+1,___flmul@b+1
  2138  000A32  C00B  F060         	movff	?___fldiv+2,___flmul@b+2
  2139  000A36  C00C  F061         	movff	?___fldiv+3,___flmul@b+3
  2140  000A3A  0EA9               	movlw	169
  2141  000A3C  6E62               	movwf	___flmul@a,c
  2142  000A3E  0E5F               	movlw	95
  2143  000A40  6E63               	movwf	___flmul@a+1,c
  2144  000A42  0E63               	movlw	99
  2145  000A44  6E64               	movwf	___flmul@a+2,c
  2146  000A46  0E58               	movlw	88
  2147  000A48  6E65               	movwf	___flmul@a+3,c
  2148  000A4A  EC74  F007         	call	___flmul	;wreg free
  2149  000A4E  C05E  F0D3         	movff	?___flmul,measure_inductance@Lin
  2150  000A52  C05F  F0D4         	movff	?___flmul+1,measure_inductance@Lin+1
  2151  000A56  C060  F0D5         	movff	?___flmul+2,measure_inductance@Lin+2
  2152  000A5A  C061  F0D6         	movff	?___flmul+3,measure_inductance@Lin+3
  2153                           
  2154                           ;measure.c: 237: if(Lin > 999) {
  2155  000A5E  6A09               	clrf	___flge@ff1,c
  2156  000A60  0EC0               	movlw	192
  2157  000A62  6E0A               	movwf	___flge@ff1+1,c
  2158  000A64  0E79               	movlw	121
  2159  000A66  6E0B               	movwf	___flge@ff1+2,c
  2160  000A68  0E44               	movlw	68
  2161  000A6A  6E0C               	movwf	___flge@ff1+3,c
  2162  000A6C  C0D3  F00D         	movff	measure_inductance@Lin,___flge@ff2
  2163  000A70  C0D4  F00E         	movff	measure_inductance@Lin+1,___flge@ff2+1
  2164  000A74  C0D5  F00F         	movff	measure_inductance@Lin+2,___flge@ff2+2
  2165  000A78  C0D6  F010         	movff	measure_inductance@Lin+3,___flge@ff2+3
  2166  000A7C  EC51  F013         	call	___flge	;wreg free
  2167  000A80  E278               	bc	l4832
  2168                           
  2169                           ;measure.c: 238: if(Lin > (999e+03l)) {
  2170  000A82  0E80               	movlw	128
  2171  000A84  6E09               	movwf	___flge@ff1,c
  2172  000A86  0EE5               	movlw	229
  2173  000A88  6E0A               	movwf	___flge@ff1+1,c
  2174  000A8A  0E73               	movlw	115
  2175  000A8C  6E0B               	movwf	___flge@ff1+2,c
  2176  000A8E  0E49               	movlw	73
  2177  000A90  6E0C               	movwf	___flge@ff1+3,c
  2178  000A92  C0D3  F00D         	movff	measure_inductance@Lin,___flge@ff2
  2179  000A96  C0D4  F00E         	movff	measure_inductance@Lin+1,___flge@ff2+1
  2180  000A9A  C0D5  F00F         	movff	measure_inductance@Lin+2,___flge@ff2+2
  2181  000A9E  C0D6  F010         	movff	measure_inductance@Lin+3,___flge@ff2+3
  2182  000AA2  EC51  F013         	call	___flge	;wreg free
  2183  000AA6  E24B               	bc	l4828
  2184                           
  2185                           ;measure.c: 239: if(Lin > (999e+06l)) {
  2186  000AA8  0E1F               	movlw	31
  2187  000AAA  6E09               	movwf	___flge@ff1,c
  2188  000AAC  0E2E               	movlw	46
  2189  000AAE  6E0A               	movwf	___flge@ff1+1,c
  2190  000AB0  0E6E               	movlw	110
  2191  000AB2  6E0B               	movwf	___flge@ff1+2,c
  2192  000AB4  0E4E               	movlw	78
  2193  000AB6  6E0C               	movwf	___flge@ff1+3,c
  2194  000AB8  C0D3  F00D         	movff	measure_inductance@Lin,___flge@ff2
  2195  000ABC  C0D4  F00E         	movff	measure_inductance@Lin+1,___flge@ff2+1
  2196  000AC0  C0D5  F00F         	movff	measure_inductance@Lin+2,___flge@ff2+2
  2197  000AC4  C0D6  F010         	movff	measure_inductance@Lin+3,___flge@ff2+3
  2198  000AC8  EC51  F013         	call	___flge	;wreg free
  2199  000ACC  E21D               	bc	l4824
  2200                           
  2201                           ;measure.c: 240: Lin = Lin / (1e+09l);
  2202  000ACE  C0D3  F009         	movff	measure_inductance@Lin,___fldiv@b
  2203  000AD2  C0D4  F00A         	movff	measure_inductance@Lin+1,___fldiv@b+1
  2204  000AD6  C0D5  F00B         	movff	measure_inductance@Lin+2,___fldiv@b+2
  2205  000ADA  C0D6  F00C         	movff	measure_inductance@Lin+3,___fldiv@b+3
  2206  000ADE  0E28               	movlw	40
  2207  000AE0  6E0D               	movwf	___fldiv@a,c
  2208  000AE2  0E6B               	movlw	107
  2209  000AE4  6E0E               	movwf	___fldiv@a+1,c
  2210  000AE6  0E6E               	movlw	110
  2211  000AE8  6E0F               	movwf	___fldiv@a+2,c
  2212  000AEA  0E4E               	movlw	78
  2213  000AEC  6E10               	movwf	___fldiv@a+3,c
  2214  000AEE  EC38  F00B         	call	___fldiv	;wreg free
  2215  000AF2  C009  F0D3         	movff	?___fldiv,measure_inductance@Lin
  2216  000AF6  C00A  F0D4         	movff	?___fldiv+1,measure_inductance@Lin+1
  2217  000AFA  C00B  F0D5         	movff	?___fldiv+2,measure_inductance@Lin+2
  2218  000AFE  C00C  F0D6         	movff	?___fldiv+3,measure_inductance@Lin+3
  2219                           
  2220                           ;measure.c: 241: unit = 0;
  2221  000B02  0100               	movlb	0	; () banked
  2222  000B04  6BC4               	clrf	measure_inductance@unit& (0+255),b
  2223                           
  2224                           ;measure.c: 242: } else {
  2225  000B06  D039               	goto	l4834
  2226  000B08                     l4824:
  2227                           
  2228                           ;measure.c: 243: Lin = Lin / (1e+06l);
  2229  000B08  C0D3  F009         	movff	measure_inductance@Lin,___fldiv@b
  2230  000B0C  C0D4  F00A         	movff	measure_inductance@Lin+1,___fldiv@b+1
  2231  000B10  C0D5  F00B         	movff	measure_inductance@Lin+2,___fldiv@b+2
  2232  000B14  C0D6  F00C         	movff	measure_inductance@Lin+3,___fldiv@b+3
  2233  000B18  6A0D               	clrf	___fldiv@a,c
  2234  000B1A  0E24               	movlw	36
  2235  000B1C  6E0E               	movwf	___fldiv@a+1,c
  2236  000B1E  0E74               	movlw	116
  2237  000B20  6E0F               	movwf	___fldiv@a+2,c
  2238  000B22  0E49               	movlw	73
  2239  000B24  6E10               	movwf	___fldiv@a+3,c
  2240  000B26  EC38  F00B         	call	___fldiv	;wreg free
  2241  000B2A  C009  F0D3         	movff	?___fldiv,measure_inductance@Lin
  2242  000B2E  C00A  F0D4         	movff	?___fldiv+1,measure_inductance@Lin+1
  2243  000B32  C00B  F0D5         	movff	?___fldiv+2,measure_inductance@Lin+2
  2244  000B36  C00C  F0D6         	movff	?___fldiv+3,measure_inductance@Lin+3
  2245                           
  2246                           ;measure.c: 244: unit = 1;
  2247  000B3A  0E01               	movlw	1
  2248  000B3C  D01B               	goto	L1
  2249  000B3E                     l4828:
  2250                           
  2251                           ;measure.c: 247: Lin = Lin / 1e+03l;
  2252  000B3E  C0D3  F009         	movff	measure_inductance@Lin,___fldiv@b
  2253  000B42  C0D4  F00A         	movff	measure_inductance@Lin+1,___fldiv@b+1
  2254  000B46  C0D5  F00B         	movff	measure_inductance@Lin+2,___fldiv@b+2
  2255  000B4A  C0D6  F00C         	movff	measure_inductance@Lin+3,___fldiv@b+3
  2256  000B4E  6A0D               	clrf	___fldiv@a,c
  2257  000B50  6A0E               	clrf	___fldiv@a+1,c
  2258  000B52  0E7A               	movlw	122
  2259  000B54  6E0F               	movwf	___fldiv@a+2,c
  2260  000B56  0E44               	movlw	68
  2261  000B58  6E10               	movwf	___fldiv@a+3,c
  2262  000B5A  EC38  F00B         	call	___fldiv	;wreg free
  2263  000B5E  C009  F0D3         	movff	?___fldiv,measure_inductance@Lin
  2264  000B62  C00A  F0D4         	movff	?___fldiv+1,measure_inductance@Lin+1
  2265  000B66  C00B  F0D5         	movff	?___fldiv+2,measure_inductance@Lin+2
  2266  000B6A  C00C  F0D6         	movff	?___fldiv+3,measure_inductance@Lin+3
  2267                           
  2268                           ;measure.c: 248: unit = 2;
  2269  000B6E  0E02               	movlw	2
  2270  000B70  D001               	goto	L1
  2271  000B72                     l4832:
  2272                           
  2273                           ;measure.c: 251: unit = 3;
  2274  000B72  0E03               	movlw	3
  2275  000B74                     L1:
  2276  000B74  FFFF               	dw	65535	; assembler added errata NOP
  2277  000B76  0100               	movlb	0	; () banked
  2278  000B78  6FC4               	movwf	measure_inductance@unit& (0+255),b
  2279  000B7A                     l4834:
  2280  000B7A  FFFF               	dw	65535	; assembler added errata NOP
  2281                           
  2282                           ; BSR set to: 0
  2283                           ;measure.c: 253: Lin = Lin * 100;
  2284  000B7C  C0D3  F05E         	movff	measure_inductance@Lin,___flmul@b
  2285  000B80  C0D4  F05F         	movff	measure_inductance@Lin+1,___flmul@b+1
  2286  000B84  C0D5  F060         	movff	measure_inductance@Lin+2,___flmul@b+2
  2287  000B88  C0D6  F061         	movff	measure_inductance@Lin+3,___flmul@b+3
  2288  000B8C  6A62               	clrf	___flmul@a,c
  2289  000B8E  6A63               	clrf	___flmul@a+1,c
  2290  000B90  0EC8               	movlw	200
  2291  000B92  6E64               	movwf	___flmul@a+2,c
  2292  000B94  0E42               	movlw	66
  2293  000B96  6E65               	movwf	___flmul@a+3,c
  2294  000B98  EC74  F007         	call	___flmul	;wreg free
  2295  000B9C  C05E  F0D3         	movff	?___flmul,measure_inductance@Lin
  2296  000BA0  C05F  F0D4         	movff	?___flmul+1,measure_inductance@Lin+1
  2297  000BA4  C060  F0D5         	movff	?___flmul+2,measure_inductance@Lin+2
  2298  000BA8  C061  F0D6         	movff	?___flmul+3,measure_inductance@Lin+3
  2299                           
  2300                           ; BSR set to: 0
  2301                           ;measure.c: 254: var = (uint16_t)Lin;
  2302  000BAC  C0D3  F0A2         	movff	measure_inductance@Lin,___fltol@f1
  2303  000BB0  C0D4  F0A3         	movff	measure_inductance@Lin+1,___fltol@f1+1
  2304  000BB4  C0D5  F0A4         	movff	measure_inductance@Lin+2,___fltol@f1+2
  2305  000BB8  C0D6  F0A5         	movff	measure_inductance@Lin+3,___fltol@f1+3
  2306  000BBC  EC54  F012         	call	___fltol	;wreg free
  2307  000BC0  C0A2  F0D1         	movff	?___fltol,measure_inductance@var
  2308  000BC4  C0A3  F0D2         	movff	?___fltol+1,measure_inductance@var+1
  2309                           
  2310                           ; BSR set to: 0
  2311                           ;measure.c: 256: print_reading(var);
  2312  000BC8  C0D1  F03B         	movff	measure_inductance@var,print_reading@measurement
  2313  000BCC  C0D2  F03C         	movff	measure_inductance@var+1,print_reading@measurement+1
  2314  000BD0  ECDD  F013         	call	_print_reading	;wreg free
  2315                           
  2316                           ;measure.c: 257: print_unit(unit);
  2317  000BD4  0100               	movlb	0	; () banked
  2318  000BD6  51C4               	movf	measure_inductance@unit& (0+255),w,b
  2319  000BD8  EFF4  F015         	goto	_print_unit
  2320  000BDC  FFFF               	dw	65535	; errata NOP
  2321  000BDE                     __end_of_measure_inductance:
  2322                           	opt stack 0
  2323                           tblptru	equ	0xFF8
  2324                           tblptrh	equ	0xFF7
  2325                           tblptrl	equ	0xFF6
  2326                           tablat	equ	0xFF5
  2327                           intcon	equ	0xFF2
  2328                           intcon2	equ	0xFF1
  2329                           postinc0	equ	0xFEE
  2330                           wreg	equ	0xFE8
  2331                           postdec1	equ	0xFE5
  2332                           fsr1l	equ	0xFE1
  2333                           status	equ	0xFD8
  2334                           
  2335 ;; *************** function _measure_capacitance *****************
  2336 ;; Defined at:
  2337 ;;		line 131 in file "src/measure.c"
  2338 ;; Parameters:    Size  Location     Type
  2339 ;;		None
  2340 ;; Auto vars:     Size  Location     Type
  2341 ;;  Cin             4   59[BANK0 ] void 
  2342 ;;  var             2   57[BANK0 ] unsigned int 
  2343 ;;  unit            1   56[BANK0 ] unsigned char 
  2344 ;; Return value:  Size  Location     Type
  2345 ;;                  1    wreg      void 
  2346 ;; Registers used:
  2347 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2348 ;; Tracked objects:
  2349 ;;		On entry : 3F/0
  2350 ;;		On exit  : 0/0
  2351 ;;		Unchanged: 0/0
  2352 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2353 ;;      Params:         0       0       0       0       0       0       0
  2354 ;;      Locals:         0      19       0       0       0       0       0
  2355 ;;      Temps:          0       0       0       0       0       0       0
  2356 ;;      Totals:         0      19       0       0       0       0       0
  2357 ;;Total ram usage:       19 bytes
  2358 ;; Hardware stack levels used:    1
  2359 ;; Hardware stack levels required when called:    7
  2360 ;; This function calls:
  2361 ;;		___fldiv
  2362 ;;		___flge
  2363 ;;		___flmul
  2364 ;;		___flsub
  2365 ;;		___fltol
  2366 ;;		___xxtofl
  2367 ;;		_lcd_gotoxy
  2368 ;;		_measure_freq
  2369 ;;		_print_reading
  2370 ;;		_print_unit
  2371 ;;		_put_str
  2372 ;; This function is called by:
  2373 ;;		_main
  2374 ;; This function uses a non-reentrant model
  2375 ;;
  2376                           
  2377                           	psect	text5
  2378  000BDE                     __ptext5:
  2379                           	opt stack 0
  2380  000BDE                     _measure_capacitance:
  2381                           	opt stack 0
  2382  000BDE  FFFF               	dw	65535	; assembler added errata NOP
  2383                           
  2384                           ; BSR set to: 0
  2385                           ;measure.c: 132: uint8_t unit;
  2386                           ;measure.c: 133: uint16_t var;
  2387                           ;measure.c: 135: double Cin;
  2388                           ;measure.c: 139: lcd_gotoxy(0, 0);
  2389                           
  2390                           ;incstack = 0
  2391  000BE0  0E00               	movlw	0
  2392  000BE2  6A0D               	clrf	lcd_gotoxy@row,c
  2393  000BE4  EC76  F015         	call	_lcd_gotoxy
  2394                           
  2395                           ;measure.c: 140: put_str("Capacity ");
  2396  000BE8  0E75               	movlw	low STR_9
  2397  000BEA  6E0E               	movwf	put_str@s,c
  2398  000BEC  EC5A  F015         	call	_put_str	;wreg free
  2399                           
  2400                           ;measure.c: 142: var = measure_freq();
  2401  000BF0  EC22  F010         	call	_measure_freq	;wreg free
  2402  000BF4  C03B  F0B9         	movff	?_measure_freq,measure_capacitance@var
  2403  000BF8  C03C  F0BA         	movff	?_measure_freq+1,measure_capacitance@var+1
  2404                           
  2405                           ;measure.c: 144: F3 = (double)var;
  2406  000BFC  C0B9  F040         	movff	measure_capacitance@var,___xxtofl@val
  2407  000C00  C0BA  F041         	movff	measure_capacitance@var+1,___xxtofl@val+1
  2408  000C04  6A42               	clrf	___xxtofl@val+2,c
  2409  000C06  6A43               	clrf	___xxtofl@val+3,c
  2410  000C08  0E00               	movlw	0
  2411  000C0A  EC73  F00E         	call	___xxtofl
  2412  000C0E  C040  F0DB         	movff	?___xxtofl,_F3
  2413  000C12  C041  F0DC         	movff	?___xxtofl+1,_F3+1
  2414  000C16  C042  F0DD         	movff	?___xxtofl+2,_F3+2
  2415  000C1A  C043  F0DE         	movff	?___xxtofl+3,_F3+3
  2416                           
  2417                           ;measure.c: 178: if(F3 > F1)
  2418  000C1E  C0E5  F009         	movff	_F1,___flge@ff1
  2419  000C22  C0E6  F00A         	movff	_F1+1,___flge@ff1+1
  2420  000C26  C0E7  F00B         	movff	_F1+2,___flge@ff1+2
  2421  000C2A  C0E8  F00C         	movff	_F1+3,___flge@ff1+3
  2422  000C2E  C0DB  F00D         	movff	_F3,___flge@ff2
  2423  000C32  C0DC  F00E         	movff	_F3+1,___flge@ff2+1
  2424  000C36  C0DD  F00F         	movff	_F3+2,___flge@ff2+2
  2425  000C3A  C0DE  F010         	movff	_F3+3,___flge@ff2+3
  2426  000C3E  EC51  F013         	call	___flge	;wreg free
  2427  000C42  E208               	bc	l4752
  2428                           
  2429                           ;measure.c: 179: F3 = F1;
  2430  000C44  C0E5  F0DB         	movff	_F1,_F3
  2431  000C48  C0E6  F0DC         	movff	_F1+1,_F3+1
  2432  000C4C  C0E7  F0DD         	movff	_F1+2,_F3+2
  2433  000C50  C0E8  F0DE         	movff	_F1+3,_F3+3
  2434  000C54                     l4752:
  2435                           
  2436                           ;measure.c: 181: Cin = F2 * F2 * (F1 * F1 - F3 * F3) * CCal;
  2437  000C54  C0DB  F062         	movff	_F3,___flmul@a
  2438  000C58  C0DC  F063         	movff	_F3+1,___flmul@a+1
  2439  000C5C  C0DD  F064         	movff	_F3+2,___flmul@a+2
  2440  000C60  C0DE  F065         	movff	_F3+3,___flmul@a+3
  2441  000C64  C0DB  F05E         	movff	_F3,___flmul@b
  2442  000C68  C0DC  F05F         	movff	_F3+1,___flmul@b+1
  2443  000C6C  C0DD  F060         	movff	_F3+2,___flmul@b+2
  2444  000C70  C0DE  F061         	movff	_F3+3,___flmul@b+3
  2445  000C74  EC74  F007         	call	___flmul	;wreg free
  2446  000C78  C05E  F091         	movff	?___flmul,___flsub@a
  2447  000C7C  C05F  F092         	movff	?___flmul+1,___flsub@a+1
  2448  000C80  C060  F093         	movff	?___flmul+2,___flsub@a+2
  2449  000C84  C061  F094         	movff	?___flmul+3,___flsub@a+3
  2450  000C88  C0E5  F062         	movff	_F1,___flmul@a
  2451  000C8C  C0E6  F063         	movff	_F1+1,___flmul@a+1
  2452  000C90  C0E7  F064         	movff	_F1+2,___flmul@a+2
  2453  000C94  C0E8  F065         	movff	_F1+3,___flmul@a+3
  2454  000C98  C0E5  F05E         	movff	_F1,___flmul@b
  2455  000C9C  C0E6  F05F         	movff	_F1+1,___flmul@b+1
  2456  000CA0  C0E7  F060         	movff	_F1+2,___flmul@b+2
  2457  000CA4  C0E8  F061         	movff	_F1+3,___flmul@b+3
  2458  000CA8  EC74  F007         	call	___flmul	;wreg free
  2459  000CAC  C05E  F08D         	movff	?___flmul,___flsub@b
  2460  000CB0  C05F  F08E         	movff	?___flmul+1,___flsub@b+1
  2461  000CB4  C060  F08F         	movff	?___flmul+2,___flsub@b+2
  2462  000CB8  C061  F090         	movff	?___flmul+3,___flsub@b+3
  2463  000CBC  EC3A  F015         	call	___flsub	;wreg free
  2464  000CC0  C08D  F0AC         	movff	?___flsub,_measure_capacitance$1302
  2465  000CC4  C08E  F0AD         	movff	?___flsub+1,_measure_capacitance$1302+1
  2466  000CC8  C08F  F0AE         	movff	?___flsub+2,_measure_capacitance$1302+2
  2467  000CCC  C090  F0AF         	movff	?___flsub+3,_measure_capacitance$1302+3
  2468                           
  2469                           ;measure.c: 181: Cin = F2 * F2 * (F1 * F1 - F3 * F3) * CCal;
  2470  000CD0  C0DF  F062         	movff	_F2,___flmul@a
  2471  000CD4  C0E0  F063         	movff	_F2+1,___flmul@a+1
  2472  000CD8  C0E1  F064         	movff	_F2+2,___flmul@a+2
  2473  000CDC  C0E2  F065         	movff	_F2+3,___flmul@a+3
  2474  000CE0  C0AC  F05E         	movff	_measure_capacitance$1302,___flmul@b
  2475  000CE4  C0AD  F05F         	movff	_measure_capacitance$1302+1,___flmul@b+1
  2476  000CE8  C0AE  F060         	movff	_measure_capacitance$1302+2,___flmul@b+2
  2477  000CEC  C0AF  F061         	movff	_measure_capacitance$1302+3,___flmul@b+3
  2478  000CF0  EC74  F007         	call	___flmul	;wreg free
  2479  000CF4  C05E  F0B0         	movff	?___flmul,_measure_capacitance$1303
  2480  000CF8  C05F  F0B1         	movff	?___flmul+1,_measure_capacitance$1303+1
  2481  000CFC  C060  F0B2         	movff	?___flmul+2,_measure_capacitance$1303+2
  2482  000D00  C061  F0B3         	movff	?___flmul+3,_measure_capacitance$1303+3
  2483                           
  2484                           ;measure.c: 181: Cin = F2 * F2 * (F1 * F1 - F3 * F3) * CCal;
  2485  000D04  C0DF  F062         	movff	_F2,___flmul@a
  2486  000D08  C0E0  F063         	movff	_F2+1,___flmul@a+1
  2487  000D0C  C0E1  F064         	movff	_F2+2,___flmul@a+2
  2488  000D10  C0E2  F065         	movff	_F2+3,___flmul@a+3
  2489  000D14  C0B0  F05E         	movff	_measure_capacitance$1303,___flmul@b
  2490  000D18  C0B1  F05F         	movff	_measure_capacitance$1303+1,___flmul@b+1
  2491  000D1C  C0B2  F060         	movff	_measure_capacitance$1303+2,___flmul@b+2
  2492  000D20  C0B3  F061         	movff	_measure_capacitance$1303+3,___flmul@b+3
  2493  000D24  EC74  F007         	call	___flmul	;wreg free
  2494  000D28  C05E  F0B4         	movff	?___flmul,_measure_capacitance$1304
  2495  000D2C  C05F  F0B5         	movff	?___flmul+1,_measure_capacitance$1304+1
  2496  000D30  C060  F0B6         	movff	?___flmul+2,_measure_capacitance$1304+2
  2497  000D34  C061  F0B7         	movff	?___flmul+3,_measure_capacitance$1304+3
  2498                           
  2499                           ;measure.c: 181: Cin = F2 * F2 * (F1 * F1 - F3 * F3) * CCal;
  2500  000D38  C0B4  F05E         	movff	_measure_capacitance$1304,___flmul@b
  2501  000D3C  C0B5  F05F         	movff	_measure_capacitance$1304+1,___flmul@b+1
  2502  000D40  C0B6  F060         	movff	_measure_capacitance$1304+2,___flmul@b+2
  2503  000D44  C0B7  F061         	movff	_measure_capacitance$1304+3,___flmul@b+3
  2504  000D48  C0E9  F062         	movff	_CCal,___flmul@a
  2505  000D4C  C0EA  F063         	movff	_CCal+1,___flmul@a+1
  2506  000D50  C0EB  F064         	movff	_CCal+2,___flmul@a+2
  2507  000D54  C0EC  F065         	movff	_CCal+3,___flmul@a+3
  2508  000D58  EC74  F007         	call	___flmul	;wreg free
  2509  000D5C  C05E  F0BB         	movff	?___flmul,measure_capacitance@Cin
  2510  000D60  C05F  F0BC         	movff	?___flmul+1,measure_capacitance@Cin+1
  2511  000D64  C060  F0BD         	movff	?___flmul+2,measure_capacitance@Cin+2
  2512  000D68  C061  F0BE         	movff	?___flmul+3,measure_capacitance@Cin+3
  2513                           
  2514                           ; BSR set to: 0
  2515                           ;measure.c: 191: if(Cin > 999) {
  2516  000D6C  6A09               	clrf	___flge@ff1,c
  2517  000D6E  0EC0               	movlw	192
  2518  000D70  6E0A               	movwf	___flge@ff1+1,c
  2519  000D72  0E79               	movlw	121
  2520  000D74  6E0B               	movwf	___flge@ff1+2,c
  2521  000D76  0E44               	movlw	68
  2522  000D78  6E0C               	movwf	___flge@ff1+3,c
  2523  000D7A  C0BB  F00D         	movff	measure_capacitance@Cin,___flge@ff2
  2524  000D7E  C0BC  F00E         	movff	measure_capacitance@Cin+1,___flge@ff2+1
  2525  000D82  C0BD  F00F         	movff	measure_capacitance@Cin+2,___flge@ff2+2
  2526  000D86  C0BE  F010         	movff	measure_capacitance@Cin+3,___flge@ff2+3
  2527  000D8A  EC51  F013         	call	___flge	;wreg free
  2528  000D8E  E277               	bc	l4772
  2529                           
  2530                           ;measure.c: 192: if(Cin > (999e+03l)) {
  2531  000D90  0E80               	movlw	128
  2532  000D92  6E09               	movwf	___flge@ff1,c
  2533  000D94  0EE5               	movlw	229
  2534  000D96  6E0A               	movwf	___flge@ff1+1,c
  2535  000D98  0E73               	movlw	115
  2536  000D9A  6E0B               	movwf	___flge@ff1+2,c
  2537  000D9C  0E49               	movlw	73
  2538  000D9E  6E0C               	movwf	___flge@ff1+3,c
  2539  000DA0  C0BB  F00D         	movff	measure_capacitance@Cin,___flge@ff2
  2540  000DA4  C0BC  F00E         	movff	measure_capacitance@Cin+1,___flge@ff2+1
  2541  000DA8  C0BD  F00F         	movff	measure_capacitance@Cin+2,___flge@ff2+2
  2542  000DAC  C0BE  F010         	movff	measure_capacitance@Cin+3,___flge@ff2+3
  2543  000DB0  EC51  F013         	call	___flge	;wreg free
  2544  000DB4  E24A               	bc	l4768
  2545                           
  2546                           ;measure.c: 193: if(Cin > (999e+06l)) {
  2547  000DB6  0E1F               	movlw	31
  2548  000DB8  6E09               	movwf	___flge@ff1,c
  2549  000DBA  0E2E               	movlw	46
  2550  000DBC  6E0A               	movwf	___flge@ff1+1,c
  2551  000DBE  0E6E               	movlw	110
  2552  000DC0  6E0B               	movwf	___flge@ff1+2,c
  2553  000DC2  0E4E               	movlw	78
  2554  000DC4  6E0C               	movwf	___flge@ff1+3,c
  2555  000DC6  C0BB  F00D         	movff	measure_capacitance@Cin,___flge@ff2
  2556  000DCA  C0BC  F00E         	movff	measure_capacitance@Cin+1,___flge@ff2+1
  2557  000DCE  C0BD  F00F         	movff	measure_capacitance@Cin+2,___flge@ff2+2
  2558  000DD2  C0BE  F010         	movff	measure_capacitance@Cin+3,___flge@ff2+3
  2559  000DD6  EC51  F013         	call	___flge	;wreg free
  2560  000DDA  E21C               	bc	l4764
  2561                           
  2562                           ;measure.c: 194: Cin = Cin / (1e+09);
  2563  000DDC  C0BB  F009         	movff	measure_capacitance@Cin,___fldiv@b
  2564  000DE0  C0BC  F00A         	movff	measure_capacitance@Cin+1,___fldiv@b+1
  2565  000DE4  C0BD  F00B         	movff	measure_capacitance@Cin+2,___fldiv@b+2
  2566  000DE8  C0BE  F00C         	movff	measure_capacitance@Cin+3,___fldiv@b+3
  2567  000DEC  0E28               	movlw	40
  2568  000DEE  6E0D               	movwf	___fldiv@a,c
  2569  000DF0  0E6B               	movlw	107
  2570  000DF2  6E0E               	movwf	___fldiv@a+1,c
  2571  000DF4  0E6E               	movlw	110
  2572  000DF6  6E0F               	movwf	___fldiv@a+2,c
  2573  000DF8  0E4E               	movlw	78
  2574  000DFA  6E10               	movwf	___fldiv@a+3,c
  2575  000DFC  EC38  F00B         	call	___fldiv	;wreg free
  2576  000E00  C009  F0BB         	movff	?___fldiv,measure_capacitance@Cin
  2577  000E04  C00A  F0BC         	movff	?___fldiv+1,measure_capacitance@Cin+1
  2578  000E08  C00B  F0BD         	movff	?___fldiv+2,measure_capacitance@Cin+2
  2579  000E0C  C00C  F0BE         	movff	?___fldiv+3,measure_capacitance@Cin+3
  2580                           
  2581                           ;measure.c: 195: unit = 4;
  2582  000E10  0E04               	movlw	4
  2583  000E12  D036               	goto	L2
  2584  000E14                     l4764:
  2585                           
  2586                           ;measure.c: 197: Cin = Cin / (1e+06);
  2587  000E14  C0BB  F009         	movff	measure_capacitance@Cin,___fldiv@b
  2588  000E18  C0BC  F00A         	movff	measure_capacitance@Cin+1,___fldiv@b+1
  2589  000E1C  C0BD  F00B         	movff	measure_capacitance@Cin+2,___fldiv@b+2
  2590  000E20  C0BE  F00C         	movff	measure_capacitance@Cin+3,___fldiv@b+3
  2591  000E24  6A0D               	clrf	___fldiv@a,c
  2592  000E26  0E24               	movlw	36
  2593  000E28  6E0E               	movwf	___fldiv@a+1,c
  2594  000E2A  0E74               	movlw	116
  2595  000E2C  6E0F               	movwf	___fldiv@a+2,c
  2596  000E2E  0E49               	movlw	73
  2597  000E30  6E10               	movwf	___fldiv@a+3,c
  2598  000E32  EC38  F00B         	call	___fldiv	;wreg free
  2599  000E36  C009  F0BB         	movff	?___fldiv,measure_capacitance@Cin
  2600  000E3A  C00A  F0BC         	movff	?___fldiv+1,measure_capacitance@Cin+1
  2601  000E3E  C00B  F0BD         	movff	?___fldiv+2,measure_capacitance@Cin+2
  2602  000E42  C00C  F0BE         	movff	?___fldiv+3,measure_capacitance@Cin+3
  2603                           
  2604                           ;measure.c: 198: unit = 5;
  2605  000E46  0E05               	movlw	5
  2606  000E48  D01B               	goto	L2
  2607  000E4A                     l4768:
  2608                           
  2609                           ;measure.c: 201: Cin = Cin / 1e+03;
  2610  000E4A  C0BB  F009         	movff	measure_capacitance@Cin,___fldiv@b
  2611  000E4E  C0BC  F00A         	movff	measure_capacitance@Cin+1,___fldiv@b+1
  2612  000E52  C0BD  F00B         	movff	measure_capacitance@Cin+2,___fldiv@b+2
  2613  000E56  C0BE  F00C         	movff	measure_capacitance@Cin+3,___fldiv@b+3
  2614  000E5A  6A0D               	clrf	___fldiv@a,c
  2615  000E5C  6A0E               	clrf	___fldiv@a+1,c
  2616  000E5E  0E7A               	movlw	122
  2617  000E60  6E0F               	movwf	___fldiv@a+2,c
  2618  000E62  0E44               	movlw	68
  2619  000E64  6E10               	movwf	___fldiv@a+3,c
  2620  000E66  EC38  F00B         	call	___fldiv	;wreg free
  2621  000E6A  C009  F0BB         	movff	?___fldiv,measure_capacitance@Cin
  2622  000E6E  C00A  F0BC         	movff	?___fldiv+1,measure_capacitance@Cin+1
  2623  000E72  C00B  F0BD         	movff	?___fldiv+2,measure_capacitance@Cin+2
  2624  000E76  C00C  F0BE         	movff	?___fldiv+3,measure_capacitance@Cin+3
  2625                           
  2626                           ;measure.c: 202: unit = 6;
  2627  000E7A  0E06               	movlw	6
  2628  000E7C  D001               	goto	L2
  2629  000E7E                     l4772:
  2630                           
  2631                           ;measure.c: 205: unit = 7;
  2632  000E7E  0E07               	movlw	7
  2633  000E80                     L2:
  2634  000E80  FFFF               	dw	65535	; assembler added errata NOP
  2635  000E82  0100               	movlb	0	; () banked
  2636  000E84  6FB8               	movwf	measure_capacitance@unit& (0+255),b
  2637                           
  2638                           ; BSR set to: 0
  2639                           ;measure.c: 207: Cin = Cin * 100;
  2640  000E86  C0BB  F05E         	movff	measure_capacitance@Cin,___flmul@b
  2641  000E8A  C0BC  F05F         	movff	measure_capacitance@Cin+1,___flmul@b+1
  2642  000E8E  C0BD  F060         	movff	measure_capacitance@Cin+2,___flmul@b+2
  2643  000E92  C0BE  F061         	movff	measure_capacitance@Cin+3,___flmul@b+3
  2644  000E96  6A62               	clrf	___flmul@a,c
  2645  000E98  6A63               	clrf	___flmul@a+1,c
  2646  000E9A  0EC8               	movlw	200
  2647  000E9C  6E64               	movwf	___flmul@a+2,c
  2648  000E9E  0E42               	movlw	66
  2649  000EA0  6E65               	movwf	___flmul@a+3,c
  2650  000EA2  EC74  F007         	call	___flmul	;wreg free
  2651  000EA6  C05E  F0BB         	movff	?___flmul,measure_capacitance@Cin
  2652  000EAA  C05F  F0BC         	movff	?___flmul+1,measure_capacitance@Cin+1
  2653  000EAE  C060  F0BD         	movff	?___flmul+2,measure_capacitance@Cin+2
  2654  000EB2  C061  F0BE         	movff	?___flmul+3,measure_capacitance@Cin+3
  2655                           
  2656                           ; BSR set to: 0
  2657                           ;measure.c: 208: var = (uint16_t)Cin;
  2658  000EB6  C0BB  F0A2         	movff	measure_capacitance@Cin,___fltol@f1
  2659  000EBA  C0BC  F0A3         	movff	measure_capacitance@Cin+1,___fltol@f1+1
  2660  000EBE  C0BD  F0A4         	movff	measure_capacitance@Cin+2,___fltol@f1+2
  2661  000EC2  C0BE  F0A5         	movff	measure_capacitance@Cin+3,___fltol@f1+3
  2662  000EC6  EC54  F012         	call	___fltol	;wreg free
  2663  000ECA  C0A2  F0B9         	movff	?___fltol,measure_capacitance@var
  2664  000ECE  C0A3  F0BA         	movff	?___fltol+1,measure_capacitance@var+1
  2665                           
  2666                           ; BSR set to: 0
  2667                           ;measure.c: 210: print_reading(var);
  2668  000ED2  C0B9  F03B         	movff	measure_capacitance@var,print_reading@measurement
  2669  000ED6  C0BA  F03C         	movff	measure_capacitance@var+1,print_reading@measurement+1
  2670  000EDA  ECDD  F013         	call	_print_reading	;wreg free
  2671                           
  2672                           ;measure.c: 211: print_unit(unit);
  2673  000EDE  0100               	movlb	0	; () banked
  2674  000EE0  51B8               	movf	measure_capacitance@unit& (0+255),w,b
  2675  000EE2  EFF4  F015         	goto	_print_unit
  2676  000EE6  FFFF               	dw	65535	; errata NOP
  2677  000EE8                     __end_of_measure_capacitance:
  2678                           	opt stack 0
  2679                           tblptru	equ	0xFF8
  2680                           tblptrh	equ	0xFF7
  2681                           tblptrl	equ	0xFF6
  2682                           tablat	equ	0xFF5
  2683                           intcon	equ	0xFF2
  2684                           intcon2	equ	0xFF1
  2685                           postinc0	equ	0xFEE
  2686                           wreg	equ	0xFE8
  2687                           postdec1	equ	0xFE5
  2688                           fsr1l	equ	0xFE1
  2689                           status	equ	0xFD8
  2690                           
  2691 ;; *************** function _print_unit *****************
  2692 ;; Defined at:
  2693 ;;		line 401 in file "src/print.c"
  2694 ;; Parameters:    Size  Location     Type
  2695 ;;  unit            1    wreg     unsigned char 
  2696 ;; Auto vars:     Size  Location     Type
  2697 ;;  unit            1    0[COMRAM] unsigned char 
  2698 ;; Return value:  Size  Location     Type
  2699 ;;                  1    wreg      void 
  2700 ;; Registers used:
  2701 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2702 ;; Tracked objects:
  2703 ;;		On entry : 3F/0
  2704 ;;		On exit  : 0/0
  2705 ;;		Unchanged: 0/0
  2706 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2707 ;;      Params:         0       0       0       0       0       0       0
  2708 ;;      Locals:         0       0       0       0       0       0       0
  2709 ;;      Temps:          2       0       0       0       0       0       0
  2710 ;;      Totals:         2       0       0       0       0       0       0
  2711 ;;Total ram usage:        2 bytes
  2712 ;; Hardware stack levels used:    1
  2713 ;; Hardware stack levels required when called:    6
  2714 ;; This function calls:
  2715 ;;		_lcd_gotoxy
  2716 ;; This function is called by:
  2717 ;;		_measure_capacitance
  2718 ;;		_measure_inductance
  2719 ;; This function uses a non-reentrant model
  2720 ;;
  2721                           
  2722                           	psect	text6
  2723  002BE8                     __ptext6:
  2724                           	opt stack 0
  2725  002BE8                     _print_unit:
  2726                           	opt stack 0
  2727  002BE8  FFFF               	dw	65535	; assembler added errata NOP
  2728                           
  2729                           ; BSR set to: 0
  2730                           ;print.c: 409: static const char* units[8] = {"H", "mH", "uH", "nH", "mF", "uF", "nF", "
      +                          pF"};
  2731                           ;print.c: 410: lcd_gotoxy(14, 0);
  2732                           
  2733                           ;incstack = 0
  2734  002BEA  6A0D               	clrf	lcd_gotoxy@row,c
  2735  002BEC  0E0E               	movlw	14
  2736  002BEE  EC76  F015         	call	_lcd_gotoxy
  2737                           
  2738                           ;print.c: 414: lcd_gotoxy(16 - (buffer.n - buffer.p), 0);
  2739  002BF2  6A0D               	clrf	lcd_gotoxy@row,c
  2740  002BF4  0101               	movlb	1	; () banked
  2741  002BF6  3910               	swapf	(_buffer+16)& (0+255),w,b
  2742  002BF8  0B0F               	andlw	15
  2743  002BFA  6E13               	movwf	??_print_unit& (0+255),c
  2744  002BFC  5110               	movf	(_buffer+16)& (0+255),w,b
  2745  002BFE  0B0F               	andlw	15
  2746  002C00  6E14               	movwf	(??_print_unit+1)& (0+255),c
  2747  002C02  5013               	movf	??_print_unit,w,c
  2748  002C04  5C14               	subwf	??_print_unit+1,w,c
  2749  002C06  0F10               	addlw	16
  2750  002C08  EF76  F015         	goto	_lcd_gotoxy
  2751  002C0C  FFFF               	dw	65535	; errata NOP
  2752  002C0E                     __end_of_print_unit:
  2753                           	opt stack 0
  2754                           tblptru	equ	0xFF8
  2755                           tblptrh	equ	0xFF7
  2756                           tblptrl	equ	0xFF6
  2757                           tablat	equ	0xFF5
  2758                           intcon	equ	0xFF2
  2759                           intcon2	equ	0xFF1
  2760                           postinc0	equ	0xFEE
  2761                           wreg	equ	0xFE8
  2762                           postdec1	equ	0xFE5
  2763                           fsr1l	equ	0xFE1
  2764                           status	equ	0xFD8
  2765                           
  2766 ;; *************** function _print_reading *****************
  2767 ;; Defined at:
  2768 ;;		line 424 in file "src/print.c"
  2769 ;; Parameters:    Size  Location     Type
  2770 ;;  measurement     2   58[COMRAM] unsigned int 
  2771 ;; Auto vars:     Size  Location     Type
  2772 ;;		None
  2773 ;; Return value:  Size  Location     Type
  2774 ;;                  1    wreg      void 
  2775 ;; Registers used:
  2776 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2777 ;; Tracked objects:
  2778 ;;		On entry : 3F/0
  2779 ;;		On exit  : 0/0
  2780 ;;		Unchanged: 0/0
  2781 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2782 ;;      Params:         2       0       0       0       0       0       0
  2783 ;;      Locals:         4       0       0       0       0       0       0
  2784 ;;      Temps:          0       0       0       0       0       0       0
  2785 ;;      Totals:         6       0       0       0       0       0       0
  2786 ;;Total ram usage:        6 bytes
  2787 ;; Hardware stack levels used:    1
  2788 ;; Hardware stack levels required when called:    6
  2789 ;; This function calls:
  2790 ;;		___lwdiv
  2791 ;;		___lwmod
  2792 ;;		_format_number
  2793 ;;		_lcd_gotoxy
  2794 ;;		_lcd_puts
  2795 ;; This function is called by:
  2796 ;;		_measure_capacitance
  2797 ;;		_measure_inductance
  2798 ;; This function uses a non-reentrant model
  2799 ;;
  2800                           
  2801                           	psect	text7
  2802  0027BA                     __ptext7:
  2803                           	opt stack 0
  2804  0027BA                     _print_reading:
  2805                           	opt stack 0
  2806  0027BA  FFFF               	dw	65535	; assembler added errata NOP
  2807                           
  2808                           ; BSR set to: 0
  2809                           ;print.c: 451: lcd_gotoxy(9, 0);
  2810                           
  2811                           ;incstack = 0
  2812  0027BC  6A0D               	clrf	lcd_gotoxy@row,c
  2813  0027BE  0E09               	movlw	9
  2814  0027C0  EC76  F015         	call	_lcd_gotoxy
  2815                           
  2816                           ;print.c: 452: lcd_puts("     ");
  2817  0027C4  0E8A               	movlw	low (STR_2+1)
  2818  0027C6  6E0D               	movwf	lcd_puts@string,c
  2819  0027C8  ECAD  F015         	call	_lcd_puts	;wreg free
  2820                           
  2821                           ;print.c: 453: lcd_gotoxy(9, 0);
  2822  0027CC  6A0D               	clrf	lcd_gotoxy@row,c
  2823  0027CE  0E09               	movlw	9
  2824  0027D0  EC76  F015         	call	_lcd_gotoxy
  2825                           
  2826                           ;print.c: 455: format_number(measurement / 100, 10, 0);
  2827  0027D4  C03B  F009         	movff	print_reading@measurement,___lwdiv@dividend
  2828  0027D8  C03C  F00A         	movff	print_reading@measurement+1,___lwdiv@dividend+1
  2829  0027DC  6A0C               	clrf	___lwdiv@divisor+1,c
  2830  0027DE  0E64               	movlw	100
  2831  0027E0  6E0B               	movwf	___lwdiv@divisor,c
  2832  0027E2  EC71  F014         	call	___lwdiv	;wreg free
  2833  0027E6  C009  F03D         	movff	?___lwdiv,_print_reading$1312
  2834  0027EA  C00A  F03E         	movff	?___lwdiv+1,_print_reading$1312+1
  2835                           
  2836                           ;print.c: 455: format_number(measurement / 100, 10, 0);
  2837  0027EE  C03D  F010         	movff	_print_reading$1312,format_number@n
  2838  0027F2  C03E  F011         	movff	_print_reading$1312+1,format_number@n+1
  2839  0027F6  0E0A               	movlw	10
  2840  0027F8  6E12               	movwf	format_number@base,c
  2841  0027FA  6A13               	clrf	format_number@pad,c
  2842  0027FC  ECFA  F011         	call	_format_number	;wreg free
  2843                           
  2844                           ;print.c: 457: format_number(measurement % 100, 10, 0);
  2845  002800  C03B  F009         	movff	print_reading@measurement,___lwmod@dividend
  2846  002804  C03C  F00A         	movff	print_reading@measurement+1,___lwmod@dividend+1
  2847  002808  6A0C               	clrf	___lwmod@divisor+1,c
  2848  00280A  0E64               	movlw	100
  2849  00280C  6E0B               	movwf	___lwmod@divisor,c
  2850  00280E  EC16  F015         	call	___lwmod	;wreg free
  2851  002812  C009  F03F         	movff	?___lwmod,_print_reading$1313
  2852  002816  C00A  F040         	movff	?___lwmod+1,_print_reading$1313+1
  2853                           
  2854                           ;print.c: 457: format_number(measurement % 100, 10, 0);
  2855  00281A  C03F  F010         	movff	_print_reading$1313,format_number@n
  2856  00281E  C040  F011         	movff	_print_reading$1313+1,format_number@n+1
  2857  002822  0E0A               	movlw	10
  2858  002824  6E12               	movwf	format_number@base,c
  2859  002826  6A13               	clrf	format_number@pad,c
  2860  002828  EFFA  F011         	goto	_format_number	;wreg free
  2861  00282C  FFFF               	dw	65535	; errata NOP
  2862  00282E                     __end_of_print_reading:
  2863                           	opt stack 0
  2864                           tblptru	equ	0xFF8
  2865                           tblptrh	equ	0xFF7
  2866                           tblptrl	equ	0xFF6
  2867                           tablat	equ	0xFF5
  2868                           intcon	equ	0xFF2
  2869                           intcon2	equ	0xFF1
  2870                           postinc0	equ	0xFEE
  2871                           wreg	equ	0xFE8
  2872                           postdec1	equ	0xFE5
  2873                           fsr1l	equ	0xFE1
  2874                           status	equ	0xFD8
  2875                           
  2876 ;; *************** function _lcd_puts *****************
  2877 ;; Defined at:
  2878 ;;		line 163 in file "lib/lcd44780.c"
  2879 ;; Parameters:    Size  Location     Type
  2880 ;;  string          1   12[COMRAM] PTR const unsigned char 
  2881 ;;		 -> STR_21(4), STR_20(4), STR_19(6), STR_5(5), 
  2882 ;;		 -> STR_4(6), STR_3(7), STR_2(7), STR_1(10), 
  2883 ;; Auto vars:     Size  Location     Type
  2884 ;;  i               1   14[COMRAM] unsigned char 
  2885 ;; Return value:  Size  Location     Type
  2886 ;;                  1    wreg      void 
  2887 ;; Registers used:
  2888 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2889 ;; Tracked objects:
  2890 ;;		On entry : 0/0
  2891 ;;		On exit  : 0/0
  2892 ;;		Unchanged: 0/0
  2893 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2894 ;;      Params:         1       0       0       0       0       0       0
  2895 ;;      Locals:         1       0       0       0       0       0       0
  2896 ;;      Temps:          1       0       0       0       0       0       0
  2897 ;;      Totals:         3       0       0       0       0       0       0
  2898 ;;Total ram usage:        3 bytes
  2899 ;; Hardware stack levels used:    1
  2900 ;; Hardware stack levels required when called:    5
  2901 ;; This function calls:
  2902 ;;		_lcd_putch
  2903 ;; This function is called by:
  2904 ;;		_main
  2905 ;;		_print_reading
  2906 ;;		_print_indicator
  2907 ;; This function uses a non-reentrant model
  2908 ;;
  2909                           
  2910                           	psect	text8
  2911  002B5A                     __ptext8:
  2912                           	opt stack 0
  2913  002B5A                     _lcd_puts:
  2914                           	opt stack 0
  2915  002B5A  FFFF               	dw	65535	; assembler added errata NOP
  2916                           
  2917                           ;lcd44780.c: 164: uint8_t i;
  2918                           ;lcd44780.c: 165: for(i = 0; string[i]; i++) lcd_putch(string[i]);
  2919                           
  2920                           ;incstack = 0
  2921  002B5C  6A0F               	clrf	lcd_puts@i,c
  2922  002B5E  D00B               	goto	l3196
  2923  002B60                     l3192:
  2924  002B60  500D               	movf	lcd_puts@string,w,c
  2925  002B62  240F               	addwf	lcd_puts@i,w,c
  2926  002B64  6E0E               	movwf	??_lcd_puts& (0+255),c
  2927  002B66  C00E  FFF6         	movff	??_lcd_puts,tblptrl
  2928  002B6A                     	if	0	;There is only one active tblptr byte
  2929  002B6A                     	endif
  2930  002B6A                     	if	0	;tblptru may be non-zero
  2931  002B6A                     	endif
  2932  002B6A                     	if	0	;tblptru may be non-zero
  2933  002B6A                     	endif
  2934  002B6A  0008               	tblrd		*
  2935  002B6C  FFFF               	dw	65535	; errata NOP
  2936  002B6E  50F5               	movf	tablat,w,c
  2937  002B70  EC5E  F016         	call	_lcd_putch
  2938  002B74  2A0F               	incf	lcd_puts@i,f,c
  2939  002B76                     l3196:
  2940  002B76  FFFF               	dw	65535	; assembler added errata NOP
  2941  002B78  500D               	movf	lcd_puts@string,w,c
  2942  002B7A  240F               	addwf	lcd_puts@i,w,c
  2943  002B7C  6E0E               	movwf	??_lcd_puts& (0+255),c
  2944  002B7E  C00E  FFF6         	movff	??_lcd_puts,tblptrl
  2945  002B82                     	if	0	;There is only one active tblptr byte
  2946  002B82                     	endif
  2947  002B82                     	if	0	;tblptru may be non-zero
  2948  002B82                     	endif
  2949  002B82                     	if	0	;tblptru may be non-zero
  2950  002B82                     	endif
  2951  002B82  0008               	tblrd		*
  2952  002B84  FFFF               	dw	65535	; errata NOP
  2953  002B86  50F5               	movf	tablat,w,c
  2954  002B88  E1EB               	bnz	l3192
  2955  002B8A  0012               	return		;funcret
  2956  002B8C  FFFF               	dw	65535	; errata NOP
  2957  002B8E                     __end_of_lcd_puts:
  2958                           	opt stack 0
  2959                           tblptru	equ	0xFF8
  2960                           tblptrh	equ	0xFF7
  2961                           tblptrl	equ	0xFF6
  2962                           tablat	equ	0xFF5
  2963                           intcon	equ	0xFF2
  2964                           intcon2	equ	0xFF1
  2965                           postinc0	equ	0xFEE
  2966                           wreg	equ	0xFE8
  2967                           postdec1	equ	0xFE5
  2968                           fsr1l	equ	0xFE1
  2969                           status	equ	0xFD8
  2970                           
  2971 ;; *************** function _lcd_init *****************
  2972 ;; Defined at:
  2973 ;;		line 489 in file "lib/lcd44780.c"
  2974 ;; Parameters:    Size  Location     Type
  2975 ;;  fourbitmode     1    wreg     unsigned char 
  2976 ;; Auto vars:     Size  Location     Type
  2977 ;;  fourbitmode     1    8[COMRAM] unsigned char 
  2978 ;; Return value:  Size  Location     Type
  2979 ;;                  1    wreg      void 
  2980 ;; Registers used:
  2981 ;;		wreg, status,2, status,0
  2982 ;; Tracked objects:
  2983 ;;		On entry : 0/0
  2984 ;;		On exit  : 0/0
  2985 ;;		Unchanged: 0/0
  2986 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2987 ;;      Params:         0       0       0       0       0       0       0
  2988 ;;      Locals:         3       0       0       0       0       0       0
  2989 ;;      Temps:          0       0       0       0       0       0       0
  2990 ;;      Totals:         3       0       0       0       0       0       0
  2991 ;;Total ram usage:        3 bytes
  2992 ;; Hardware stack levels used:    1
  2993 ;; Hardware stack levels required when called:    2
  2994 ;; This function calls:
  2995 ;;		Nothing
  2996 ;; This function is called by:
  2997 ;;		_main
  2998 ;; This function uses a non-reentrant model
  2999 ;;
  3000                           
  3001                           	psect	text9
  3002  002B8E                     __ptext9:
  3003                           	opt stack 0
  3004  002B8E                     _lcd_init:
  3005                           	opt stack 0
  3006  002B8E  FFFF               	dw	65535	; assembler added errata NOP
  3007                           
  3008                           ;incstack = 0
  3009                           ;lcd_init@fourbitmode stored from wreg
  3010  002B90  6E09               	movwf	lcd_init@fourbitmode,c
  3011                           
  3012                           ;lcd44780.c: 491: LCD_ctrl = 0;
  3013  002B92  6A75               	clrf	_LCD_ctrl,c
  3014                           
  3015                           ;lcd44780.c: 492: LCD_function = (fourbitmode ? 0x00 : 0x10);
  3016  002B94  5009               	movf	lcd_init@fourbitmode,w,c
  3017  002B96  E104               	bnz	l266
  3018  002B98  6A0B               	clrf	_lcd_init$361+1,c
  3019  002B9A  0E10               	movlw	16
  3020  002B9C  6E0A               	movwf	_lcd_init$361,c
  3021  002B9E  D002               	goto	l268
  3022  002BA0                     l266:
  3023  002BA0  6A0A               	clrf	_lcd_init$361,c
  3024  002BA2  6A0B               	clrf	_lcd_init$361+1,c
  3025  002BA4                     l268:
  3026  002BA4  FFFF               	dw	65535	; assembler added errata NOP
  3027  002BA6  C00A  F076         	movff	_lcd_init$361,_LCD_function
  3028                           
  3029                           ;lcd44780.c: 494: LCD_lines = 0;
  3030  002BAA  6A73               	clrf	_LCD_lines,c
  3031                           
  3032                           ;lcd44780.c: 496: LCD_mode = 0;
  3033  002BAC  6A74               	clrf	_LCD_mode,c
  3034                           
  3035                           ;lcd44780.c: 498: TRISB &= ~0b0100;
  3036  002BAE  9493               	bcf	3987,2,c	;volatile
  3037                           
  3038                           ;lcd44780.c: 499: LATB &= ~0b0100;
  3039  002BB0  948A               	bcf	3978,2,c	;volatile
  3040                           
  3041                           ;lcd44780.c: 504: TRISB &= ~0b1000;
  3042  002BB2  9693               	bcf	3987,3,c	;volatile
  3043                           
  3044                           ;lcd44780.c: 505: LATB &= ~0b1000;
  3045  002BB4  968A               	bcf	3978,3,c	;volatile
  3046                           
  3047                           ;lcd44780.c: 507: LATB &= ~0b11110000;
  3048  002BB6  0E0F               	movlw	15
  3049  002BB8  168A               	andwf	3978,f,c	;volatile
  3050  002BBA  0C0F               	retlw	15	;funcret
  3051  002BBC  FFFF               	dw	65535	; errata NOP
  3052  002BBE                     __end_of_lcd_init:
  3053                           	opt stack 0
  3054                           tblptru	equ	0xFF8
  3055                           tblptrh	equ	0xFF7
  3056                           tblptrl	equ	0xFF6
  3057                           tablat	equ	0xFF5
  3058                           intcon	equ	0xFF2
  3059                           intcon2	equ	0xFF1
  3060                           postinc0	equ	0xFEE
  3061                           wreg	equ	0xFE8
  3062                           postdec1	equ	0xFE5
  3063                           fsr1l	equ	0xFE1
  3064                           status	equ	0xFD8
  3065                           
  3066 ;; *************** function _lcd_begin *****************
  3067 ;; Defined at:
  3068 ;;		line 416 in file "lib/lcd44780.c"
  3069 ;; Parameters:    Size  Location     Type
  3070 ;;  lines           1    wreg     unsigned char 
  3071 ;;  dotsize         1   12[COMRAM] unsigned char 
  3072 ;; Auto vars:     Size  Location     Type
  3073 ;;  lines           1   14[COMRAM] unsigned char 
  3074 ;; Return value:  Size  Location     Type
  3075 ;;                  1    wreg      void 
  3076 ;; Registers used:
  3077 ;;		wreg, status,2, status,0, cstack
  3078 ;; Tracked objects:
  3079 ;;		On entry : 0/0
  3080 ;;		On exit  : 0/0
  3081 ;;		Unchanged: 0/0
  3082 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3083 ;;      Params:         1       0       0       0       0       0       0
  3084 ;;      Locals:         1       0       0       0       0       0       0
  3085 ;;      Temps:          1       0       0       0       0       0       0
  3086 ;;      Totals:         3       0       0       0       0       0       0
  3087 ;;Total ram usage:        3 bytes
  3088 ;; Hardware stack levels used:    1
  3089 ;; Hardware stack levels required when called:    5
  3090 ;; This function calls:
  3091 ;;		_lcd_command
  3092 ;;		_lcd_write4bits
  3093 ;; This function is called by:
  3094 ;;		_main
  3095 ;; This function uses a non-reentrant model
  3096 ;;
  3097                           
  3098                           	psect	text10
  3099  00223E                     __ptext10:
  3100                           	opt stack 0
  3101  00223E                     _lcd_begin:
  3102                           	opt stack 0
  3103  00223E  FFFF               	dw	65535	; assembler added errata NOP
  3104                           
  3105                           ;incstack = 0
  3106                           ;lcd_begin@lines stored from wreg
  3107  002240  6E0F               	movwf	lcd_begin@lines,c
  3108                           
  3109                           ;lcd44780.c: 417: if(lines > 1)
  3110  002242  0E01               	movlw	1
  3111  002244  640F               	cpfsgt	lcd_begin@lines,c
  3112  002246  D001               	goto	l3504
  3113                           
  3114                           ;lcd44780.c: 418: LCD_function |= 0x08;
  3115  002248  8676               	bsf	_LCD_function,3,c
  3116  00224A                     l3504:
  3117  00224A  FFFF               	dw	65535	; assembler added errata NOP
  3118                           
  3119                           ;lcd44780.c: 421: LCD_lines = lines;
  3120  00224C  C00F  F073         	movff	lcd_begin@lines,_LCD_lines
  3121                           
  3122                           ;lcd44780.c: 425: if((dotsize != 0) && (lines == 1))
  3123  002250  500D               	movf	lcd_begin@dotsize,w,c
  3124  002252  E003               	bz	l3512
  3125  002254  040F               	decf	lcd_begin@lines,w,c
  3126  002256  E101               	bnz	l3512
  3127                           
  3128                           ;lcd44780.c: 426: LCD_function |= 0x04;
  3129  002258  8476               	bsf	_LCD_function,2,c
  3130  00225A                     l3512:
  3131                           
  3132                           ;lcd44780.c: 428: _delay((unsigned long)((15)*(20000000/4000.0)));
  3133  00225A  0E4A               	movlw	74
  3134  00225C  6E0E               	movwf	??_lcd_begin& (0+255),c
  3135  00225E  0E18               	movlw	24
  3136  002260                     u5307:
  3137  002260  FFFF               	dw	65535	; errata NOP
  3138  002262  2EE8               	decfsz	wreg,f,c
  3139  002264  D7FD               	bra	u5307
  3140  002266  2E0E               	decfsz	??_lcd_begin& (0+255),f,c
  3141  002268  D7FB               	bra	u5307
  3142  00226A  D000               	nop2	
  3143                           
  3144                           ;lcd44780.c: 431: LATB &= ~0b0100;
  3145  00226C  948A               	bcf	3978,2,c	;volatile
  3146                           
  3147                           ;lcd44780.c: 432: LATB &= ~0b1000;
  3148  00226E  968A               	bcf	3978,3,c	;volatile
  3149                           
  3150                           ;lcd44780.c: 435: if(!(LCD_function & 0x10)) {
  3151  002270  B876               	btfsc	_LCD_function,4,c
  3152  002272  D01F               	goto	l3530
  3153                           
  3154                           ;lcd44780.c: 439: lcd_write4bits(0x03);
  3155  002274  0E03               	movlw	3
  3156  002276  EC1A  F016         	call	_lcd_write4bits
  3157                           
  3158                           ;lcd44780.c: 440: _delay((unsigned long)((5)*(20000000/4000.0)));
  3159  00227A  0E19               	movlw	25
  3160  00227C  6E0E               	movwf	??_lcd_begin& (0+255),c
  3161  00227E  0E5D               	movlw	93
  3162  002280                     u5317:
  3163  002280  FFFF               	dw	65535	; errata NOP
  3164  002282  2EE8               	decfsz	wreg,f,c
  3165  002284  D7FD               	bra	u5317
  3166  002286  2E0E               	decfsz	??_lcd_begin& (0+255),f,c
  3167  002288  D7FB               	bra	u5317
  3168                           
  3169                           ;lcd44780.c: 442: lcd_write4bits(0x03);
  3170  00228A  0E03               	movlw	3
  3171  00228C  EC1A  F016         	call	_lcd_write4bits
  3172                           
  3173                           ;lcd44780.c: 443: _delay((unsigned long)((150)*(20000000/4000000.0)));
  3174  002290  0EBB               	movlw	187
  3175  002292                     u5327:
  3176  002292  FFFF               	dw	65535	; errata NOP
  3177  002294  2EE8               	decfsz	wreg,f,c
  3178  002296  D7FD               	bra	u5327
  3179  002298  D000               	nop2	
  3180                           
  3181                           ;lcd44780.c: 445: lcd_write4bits(0x03);
  3182  00229A  0E03               	movlw	3
  3183  00229C  EC1A  F016         	call	_lcd_write4bits
  3184                           
  3185                           ;lcd44780.c: 446: _delay((unsigned long)((150)*(20000000/4000000.0)));
  3186  0022A0  0EBB               	movlw	187
  3187  0022A2                     u5337:
  3188  0022A2  FFFF               	dw	65535	; errata NOP
  3189  0022A4  2EE8               	decfsz	wreg,f,c
  3190  0022A6  D7FD               	bra	u5337
  3191  0022A8  D000               	nop2	
  3192                           
  3193                           ;lcd44780.c: 448: lcd_write4bits(0x02);
  3194  0022AA  0E02               	movlw	2
  3195  0022AC  EC1A  F016         	call	_lcd_write4bits
  3196                           
  3197                           ;lcd44780.c: 449: }
  3198  0022B0  D01D               	goto	l3538
  3199  0022B2                     l3530:
  3200  0022B2  FFFF               	dw	65535	; assembler added errata NOP
  3201                           
  3202                           ;lcd44780.c: 451: else {
  3203                           ;lcd44780.c: 455: lcd_command(0x20 | LCD_function);
  3204  0022B4  5076               	movf	_LCD_function,w,c
  3205  0022B6  0920               	iorlw	32
  3206  0022B8  EC6E  F016         	call	_lcd_command
  3207                           
  3208                           ;lcd44780.c: 456: _delay((unsigned long)((5)*(20000000/4000.0)));
  3209  0022BC  0E19               	movlw	25
  3210  0022BE  6E0E               	movwf	??_lcd_begin& (0+255),c
  3211  0022C0  0E5D               	movlw	93
  3212  0022C2                     u5347:
  3213  0022C2  FFFF               	dw	65535	; errata NOP
  3214  0022C4  2EE8               	decfsz	wreg,f,c
  3215  0022C6  D7FD               	bra	u5347
  3216  0022C8  2E0E               	decfsz	??_lcd_begin& (0+255),f,c
  3217  0022CA  D7FB               	bra	u5347
  3218                           
  3219                           ;lcd44780.c: 459: lcd_command(0x20 | LCD_function);
  3220  0022CC  5076               	movf	_LCD_function,w,c
  3221  0022CE  0920               	iorlw	32
  3222  0022D0  EC6E  F016         	call	_lcd_command
  3223                           
  3224                           ;lcd44780.c: 460: _delay((unsigned long)((5)*(20000000/4000.0)));
  3225  0022D4  0E19               	movlw	25
  3226  0022D6  6E0E               	movwf	??_lcd_begin& (0+255),c
  3227  0022D8  0E5D               	movlw	93
  3228  0022DA                     u5357:
  3229  0022DA  FFFF               	dw	65535	; errata NOP
  3230  0022DC  2EE8               	decfsz	wreg,f,c
  3231  0022DE  D7FD               	bra	u5357
  3232  0022E0  2E0E               	decfsz	??_lcd_begin& (0+255),f,c
  3233  0022E2  D7FB               	bra	u5357
  3234                           
  3235                           ;lcd44780.c: 464: lcd_command(0x20 | LCD_function);
  3236  0022E4  5076               	movf	_LCD_function,w,c
  3237  0022E6  0920               	iorlw	32
  3238  0022E8  EC6E  F016         	call	_lcd_command
  3239  0022EC                     l3538:
  3240  0022EC  FFFF               	dw	65535	; assembler added errata NOP
  3241                           
  3242                           ;lcd44780.c: 465: }
  3243                           ;lcd44780.c: 468: lcd_command(0x20 | LCD_function);
  3244  0022EE  5076               	movf	_LCD_function,w,c
  3245  0022F0  0920               	iorlw	32
  3246  0022F2  EC6E  F016         	call	_lcd_command
  3247                           
  3248                           ;lcd44780.c: 471: LCD_ctrl = 0x04 | 0x00 | 0x00;
  3249  0022F6  0E04               	movlw	4
  3250  0022F8  6E75               	movwf	_LCD_ctrl,c
  3251                           
  3252                           ;lcd44780.c: 472: lcd_command(0x08 | LCD_ctrl);
  3253  0022FA  5075               	movf	_LCD_ctrl,w,c
  3254  0022FC  0908               	iorlw	8
  3255  0022FE  EC6E  F016         	call	_lcd_command
  3256                           
  3257                           ;lcd44780.c: 475: lcd_command(0x01);
  3258  002302  0E01               	movlw	1
  3259  002304  EC6E  F016         	call	_lcd_command
  3260                           
  3261                           ;lcd44780.c: 476: _delay((unsigned long)((2)*(20000000/4000.0)));
  3262  002308  0E0A               	movlw	10
  3263  00230A  6E0E               	movwf	??_lcd_begin& (0+255),c
  3264  00230C  0EBE               	movlw	190
  3265  00230E                     u5367:
  3266  00230E  FFFF               	dw	65535	; errata NOP
  3267  002310  2EE8               	decfsz	wreg,f,c
  3268  002312  D7FD               	bra	u5367
  3269  002314  2E0E               	decfsz	??_lcd_begin& (0+255),f,c
  3270  002316  D7FB               	bra	u5367
  3271  002318  D000               	nop2	
  3272                           
  3273                           ;lcd44780.c: 479: LCD_mode = 0x02 | 0x00;
  3274  00231A  0E02               	movlw	2
  3275  00231C  6E74               	movwf	_LCD_mode,c
  3276                           
  3277                           ;lcd44780.c: 481: lcd_command(0x04 | LCD_mode);
  3278  00231E  5074               	movf	_LCD_mode,w,c
  3279  002320  0904               	iorlw	4
  3280  002322  EF6E  F016         	goto	_lcd_command
  3281  002326  FFFF               	dw	65535	; errata NOP
  3282  002328                     __end_of_lcd_begin:
  3283                           	opt stack 0
  3284                           tblptru	equ	0xFF8
  3285                           tblptrh	equ	0xFF7
  3286                           tblptrl	equ	0xFF6
  3287                           tablat	equ	0xFF5
  3288                           intcon	equ	0xFF2
  3289                           intcon2	equ	0xFF1
  3290                           postinc0	equ	0xFEE
  3291                           wreg	equ	0xFE8
  3292                           postdec1	equ	0xFE5
  3293                           fsr1l	equ	0xFE1
  3294                           status	equ	0xFD8
  3295                           
  3296 ;; *************** function _format_double *****************
  3297 ;; Defined at:
  3298 ;;		line 81 in file "lib/format.c"
  3299 ;; Parameters:    Size  Location     Type
  3300 ;;  num             4   86[BANK0 ] void 
  3301 ;; Auto vars:     Size  Location     Type
  3302 ;;  weight          4    8[BANK1 ] void 
  3303 ;;  m               2   14[BANK1 ] short 
  3304 ;;  digit           2   12[BANK1 ] short 
  3305 ;; Return value:  Size  Location     Type
  3306 ;;                  1    wreg      void 
  3307 ;; Registers used:
  3308 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3309 ;; Tracked objects:
  3310 ;;		On entry : 0/0
  3311 ;;		On exit  : 0/0
  3312 ;;		Unchanged: 0/0
  3313 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3314 ;;      Params:         0       4       0       0       0       0       0
  3315 ;;      Locals:         0       0      16       0       0       0       0
  3316 ;;      Temps:          0       0       0       0       0       0       0
  3317 ;;      Totals:         0       4      16       0       0       0       0
  3318 ;;Total ram usage:       20 bytes
  3319 ;; Hardware stack levels used:    1
  3320 ;; Hardware stack levels required when called:    6
  3321 ;; This function calls:
  3322 ;;		___fldiv
  3323 ;;		___flge
  3324 ;;		___flmul
  3325 ;;		___flsub
  3326 ;;		___fltol
  3327 ;;		___xxtofl
  3328 ;;		_buffer_putch
  3329 ;;		_floor
  3330 ;;		_log10
  3331 ;;		_pow
  3332 ;; This function is called by:
  3333 ;;		_main
  3334 ;; This function uses a non-reentrant model
  3335 ;;
  3336                           
  3337                           	psect	text11
  3338  00187C                     __ptext11:
  3339                           	opt stack 0
  3340  00187C                     _format_double:
  3341                           	opt stack 0
  3342  00187C  FFFF               	dw	65535	; assembler added errata NOP
  3343                           
  3344                           ;format.c: 82: short m = (short)log10(num);
  3345                           
  3346                           ;incstack = 0
  3347  00187E  C0D6  F09A         	movff	format_double@num,log10@x
  3348  001882  C0D7  F09B         	movff	format_double@num+1,log10@x+1
  3349  001886  C0D8  F09C         	movff	format_double@num+2,log10@x+2
  3350  00188A  C0D9  F09D         	movff	format_double@num+3,log10@x+3
  3351  00188E  EC17  F014         	call	_log10	;wreg free
  3352  001892  C09A  F0A2         	movff	?_log10,___fltol@f1
  3353  001896  C09B  F0A3         	movff	?_log10+1,___fltol@f1+1
  3354  00189A  C09C  F0A4         	movff	?_log10+2,___fltol@f1+2
  3355  00189E  C09D  F0A5         	movff	?_log10+3,___fltol@f1+3
  3356  0018A2  EC54  F012         	call	___fltol	;wreg free
  3357  0018A6  C0A2  F12B         	movff	?___fltol,format_double@m
  3358  0018AA  C0A3  F12C         	movff	?___fltol+1,format_double@m+1
  3359                           
  3360                           ;format.c: 83: short digit;
  3361                           ;format.c: 86: while(num > 0 + (1.19209290e-07)) {
  3362  0018AE  D0A5               	goto	l4702
  3363  0018B0                     l4684:
  3364                           
  3365                           ;format.c: 87: double weight = pow(10.0l, m);
  3366  0018B0  C12B  F040         	movff	format_double@m,___xxtofl@val
  3367  0018B4  C12C  F041         	movff	format_double@m+1,___xxtofl@val+1
  3368  0018B8  0E00               	movlw	0
  3369  0018BA  BE41               	btfsc	___xxtofl@val+1,7,c
  3370  0018BC  0EFF               	movlw	-1
  3371  0018BE  6E42               	movwf	___xxtofl@val+2,c
  3372  0018C0  6E43               	movwf	___xxtofl@val+3,c
  3373  0018C2  0E01               	movlw	1
  3374  0018C4  EC73  F00E         	call	___xxtofl
  3375  0018C8  C040  F11D         	movff	?___xxtofl,_format_double$1300
  3376  0018CC  C041  F11E         	movff	?___xxtofl+1,_format_double$1300+1
  3377  0018D0  C042  F11F         	movff	?___xxtofl+2,_format_double$1300+2
  3378  0018D4  C043  F120         	movff	?___xxtofl+3,_format_double$1300+3
  3379                           
  3380                           ;format.c: 87: double weight = pow(10.0l, m);
  3381  0018D8  0100               	movlb	0	; () banked
  3382  0018DA  6BC1               	clrf	pow@x& (0+255),b
  3383  0018DC  6BC2               	clrf	(pow@x+1)& (0+255),b
  3384  0018DE  0E20               	movlw	32
  3385  0018E0  6FC3               	movwf	(pow@x+2)& (0+255),b
  3386  0018E2  0E41               	movlw	65
  3387  0018E4  6FC4               	movwf	(pow@x+3)& (0+255),b
  3388  0018E6  C11D  F0C5         	movff	_format_double$1300,pow@y
  3389  0018EA  C11E  F0C6         	movff	_format_double$1300+1,pow@y+1
  3390  0018EE  C11F  F0C7         	movff	_format_double$1300+2,pow@y+2
  3391  0018F2  C120  F0C8         	movff	_format_double$1300+3,pow@y+3
  3392  0018F6  EC11  F00D         	call	_pow	;wreg free
  3393  0018FA  C0C1  F125         	movff	?_pow,format_double@weight
  3394  0018FE  C0C2  F126         	movff	?_pow+1,format_double@weight+1
  3395  001902  C0C3  F127         	movff	?_pow+2,format_double@weight+2
  3396  001906  C0C4  F128         	movff	?_pow+3,format_double@weight+3
  3397                           
  3398                           ; BSR set to: 0
  3399                           ;format.c: 88: digit = (short)floor(num / weight);
  3400  00190A  C125  F00D         	movff	format_double@weight,___fldiv@a
  3401  00190E  C126  F00E         	movff	format_double@weight+1,___fldiv@a+1
  3402  001912  C127  F00F         	movff	format_double@weight+2,___fldiv@a+2
  3403  001916  C128  F010         	movff	format_double@weight+3,___fldiv@a+3
  3404  00191A  C0D6  F009         	movff	format_double@num,___fldiv@b
  3405  00191E  C0D7  F00A         	movff	format_double@num+1,___fldiv@b+1
  3406  001922  C0D8  F00B         	movff	format_double@num+2,___fldiv@b+2
  3407  001926  C0D9  F00C         	movff	format_double@num+3,___fldiv@b+3
  3408  00192A  EC38  F00B         	call	___fldiv	;wreg free
  3409  00192E  C009  F0AC         	movff	?___fldiv,floor@x
  3410  001932  C00A  F0AD         	movff	?___fldiv+1,floor@x+1
  3411  001936  C00B  F0AE         	movff	?___fldiv+2,floor@x+2
  3412  00193A  C00C  F0AF         	movff	?___fldiv+3,floor@x+3
  3413  00193E  ECA0  F00F         	call	_floor	;wreg free
  3414  001942  C0AC  F121         	movff	?_floor,_format_double$1301
  3415  001946  C0AD  F122         	movff	?_floor+1,_format_double$1301+1
  3416  00194A  C0AE  F123         	movff	?_floor+2,_format_double$1301+2
  3417  00194E  C0AF  F124         	movff	?_floor+3,_format_double$1301+3
  3418                           
  3419                           ;format.c: 88: digit = (short)floor(num / weight);
  3420  001952  C121  F0A2         	movff	_format_double$1301,___fltol@f1
  3421  001956  C122  F0A3         	movff	_format_double$1301+1,___fltol@f1+1
  3422  00195A  C123  F0A4         	movff	_format_double$1301+2,___fltol@f1+2
  3423  00195E  C124  F0A5         	movff	_format_double$1301+3,___fltol@f1+3
  3424  001962  EC54  F012         	call	___fltol	;wreg free
  3425  001966  C0A2  F129         	movff	?___fltol,format_double@digit
  3426  00196A  C0A3  F12A         	movff	?___fltol+1,format_double@digit+1
  3427                           
  3428                           ; BSR set to: 0
  3429                           ;format.c: 89: num -= (digit * weight);
  3430  00196E  C0D6  F08D         	movff	format_double@num,___flsub@b
  3431  001972  C0D7  F08E         	movff	format_double@num+1,___flsub@b+1
  3432  001976  C0D8  F08F         	movff	format_double@num+2,___flsub@b+2
  3433  00197A  C0D9  F090         	movff	format_double@num+3,___flsub@b+3
  3434  00197E  C125  F062         	movff	format_double@weight,___flmul@a
  3435  001982  C126  F063         	movff	format_double@weight+1,___flmul@a+1
  3436  001986  C127  F064         	movff	format_double@weight+2,___flmul@a+2
  3437  00198A  C128  F065         	movff	format_double@weight+3,___flmul@a+3
  3438  00198E  C129  F040         	movff	format_double@digit,___xxtofl@val
  3439  001992  C12A  F041         	movff	format_double@digit+1,___xxtofl@val+1
  3440  001996  0E00               	movlw	0
  3441  001998  BE41               	btfsc	___xxtofl@val+1,7,c
  3442  00199A  0EFF               	movlw	-1
  3443  00199C  6E42               	movwf	___xxtofl@val+2,c
  3444  00199E  6E43               	movwf	___xxtofl@val+3,c
  3445  0019A0  0E01               	movlw	1
  3446  0019A2  EC73  F00E         	call	___xxtofl
  3447  0019A6  C040  F05E         	movff	?___xxtofl,___flmul@b
  3448  0019AA  C041  F05F         	movff	?___xxtofl+1,___flmul@b+1
  3449  0019AE  C042  F060         	movff	?___xxtofl+2,___flmul@b+2
  3450  0019B2  C043  F061         	movff	?___xxtofl+3,___flmul@b+3
  3451  0019B6  EC74  F007         	call	___flmul	;wreg free
  3452  0019BA  C05E  F091         	movff	?___flmul,___flsub@a
  3453  0019BE  C05F  F092         	movff	?___flmul+1,___flsub@a+1
  3454  0019C2  C060  F093         	movff	?___flmul+2,___flsub@a+2
  3455  0019C6  C061  F094         	movff	?___flmul+3,___flsub@a+3
  3456  0019CA  EC3A  F015         	call	___flsub	;wreg free
  3457  0019CE  C08D  F0D6         	movff	?___flsub,format_double@num
  3458  0019D2  C08E  F0D7         	movff	?___flsub+1,format_double@num+1
  3459  0019D6  C08F  F0D8         	movff	?___flsub+2,format_double@num+2
  3460  0019DA  C090  F0D9         	movff	?___flsub+3,format_double@num+3
  3461                           
  3462                           ;format.c: 90: buffer_putch((char)('0' + digit));
  3463  0019DE  0101               	movlb	1	; () banked
  3464  0019E0  5129               	movf	format_double@digit& (0+255),w,b
  3465  0019E2  0F30               	addlw	48
  3466  0019E4  EC9B  F014         	call	_buffer_putch
  3467                           
  3468                           ; BSR set to: 1
  3469                           ;format.c: 91: if(m == 0)
  3470  0019E8  512B               	movf	format_double@m& (0+255),w,b
  3471  0019EA  112C               	iorwf	(format_double@m+1)& (0+255),w,b
  3472  0019EC  E103               	bnz	l4700
  3473                           
  3474                           ; BSR set to: 1
  3475                           ;format.c: 92: buffer_putch('.');
  3476  0019EE  0E2E               	movlw	46
  3477  0019F0  EC9B  F014         	call	_buffer_putch
  3478  0019F4                     l4700:
  3479                           
  3480                           ; BSR set to: 1
  3481                           ;format.c: 93: m--;
  3482  0019F4  072B               	decf	format_double@m& (0+255),f,b
  3483  0019F6  A0D8               	btfss	status,0,c
  3484  0019F8  072C               	decf	(format_double@m+1)& (0+255),f,b
  3485  0019FA                     l4702:
  3486  0019FA  FFFF               	dw	65535	; assembler added errata NOP
  3487  0019FC  6A09               	clrf	___flge@ff1,c
  3488  0019FE  6A0A               	clrf	___flge@ff1+1,c
  3489  001A00  6A0B               	clrf	___flge@ff1+2,c
  3490  001A02  0E34               	movlw	52
  3491  001A04  6E0C               	movwf	___flge@ff1+3,c
  3492  001A06  C0D6  F00D         	movff	format_double@num,___flge@ff2
  3493  001A0A  C0D7  F00E         	movff	format_double@num+1,___flge@ff2+1
  3494  001A0E  C0D8  F00F         	movff	format_double@num+2,___flge@ff2+2
  3495  001A12  C0D9  F010         	movff	format_double@num+3,___flge@ff2+3
  3496  001A16  EC51  F013         	call	___flge	;wreg free
  3497  001A1A  E201 D749          	bnc	l4684
  3498  001A1E  0012               	return		;funcret
  3499  001A20  FFFF               	dw	65535	; errata NOP
  3500  001A22                     __end_of_format_double:
  3501                           	opt stack 0
  3502                           tblptru	equ	0xFF8
  3503                           tblptrh	equ	0xFF7
  3504                           tblptrl	equ	0xFF6
  3505                           tablat	equ	0xFF5
  3506                           intcon	equ	0xFF2
  3507                           intcon2	equ	0xFF1
  3508                           postinc0	equ	0xFEE
  3509                           wreg	equ	0xFE8
  3510                           postdec1	equ	0xFE5
  3511                           fsr1l	equ	0xFE1
  3512                           status	equ	0xFD8
  3513                           
  3514 ;; *************** function _pow *****************
  3515 ;; Defined at:
  3516 ;;		line 5 in file "/opt/microchip/xc8/v1.45/sources/common/pow.c"
  3517 ;; Parameters:    Size  Location     Type
  3518 ;;  x               4   65[BANK0 ] void 
  3519 ;;  y               4   69[BANK0 ] void 
  3520 ;; Auto vars:     Size  Location     Type
  3521 ;;  yi              4   82[BANK0 ] unsigned long 
  3522 ;;  sign            1   81[BANK0 ] unsigned char 
  3523 ;; Return value:  Size  Location     Type
  3524 ;;                  4   65[BANK0 ] unsigned char 
  3525 ;; Registers used:
  3526 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3527 ;; Tracked objects:
  3528 ;;		On entry : 3F/0
  3529 ;;		On exit  : 3F/0
  3530 ;;		Unchanged: 0/0
  3531 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3532 ;;      Params:         0       8       0       0       0       0       0
  3533 ;;      Locals:         0      13       0       0       0       0       0
  3534 ;;      Temps:          0       0       0       0       0       0       0
  3535 ;;      Totals:         0      21       0       0       0       0       0
  3536 ;;Total ram usage:       21 bytes
  3537 ;; Hardware stack levels used:    1
  3538 ;; Hardware stack levels required when called:    5
  3539 ;; This function calls:
  3540 ;;		___flge
  3541 ;;		___flmul
  3542 ;;		___flneg
  3543 ;;		___fltol
  3544 ;;		___xxtofl
  3545 ;;		_exp
  3546 ;;		_log
  3547 ;; This function is called by:
  3548 ;;		_format_double
  3549 ;; This function uses a non-reentrant model
  3550 ;;
  3551                           
  3552                           	psect	text12
  3553  001A22                     __ptext12:
  3554                           	opt stack 0
  3555  001A22                     _pow:
  3556                           	opt stack 0
  3557  001A22  FFFF               	dw	65535	; assembler added errata NOP
  3558                           
  3559                           ; BSR set to: 0
  3560                           
  3561                           ;incstack = 0
  3562  001A24  6BD1               	clrf	pow@sign& (0+255),b
  3563                           
  3564                           ; BSR set to: 0
  3565  001A26  51C1               	movf	pow@x& (0+255),w,b
  3566  001A28  11C2               	iorwf	(pow@x+1)& (0+255),w,b
  3567  001A2A  11C3               	iorwf	(pow@x+2)& (0+255),w,b
  3568  001A2C  11C4               	iorwf	(pow@x+3)& (0+255),w,b
  3569  001A2E  E110               	bnz	l4594
  3570                           
  3571                           ; BSR set to: 0
  3572  001A30  6A09               	clrf	___flge@ff1,c
  3573  001A32  6A0A               	clrf	___flge@ff1+1,c
  3574  001A34  6A0B               	clrf	___flge@ff1+2,c
  3575  001A36  6A0C               	clrf	___flge@ff1+3,c
  3576  001A38  C0C5  F00D         	movff	pow@y,___flge@ff2
  3577  001A3C  C0C6  F00E         	movff	pow@y+1,___flge@ff2+1
  3578  001A40  C0C7  F00F         	movff	pow@y+2,___flge@ff2+2
  3579  001A44  C0C8  F010         	movff	pow@y+3,___flge@ff2+3
  3580  001A48  EC51  F013         	call	___flge	;wreg free
  3581  001A4C  0100               	movlb	0	; () banked
  3582  001A4E  D038               	goto	u5120
  3583  001A50                     l4594:
  3584                           
  3585                           ; BSR set to: 0
  3586  001A50  51C5               	movf	pow@y& (0+255),w,b
  3587  001A52  11C6               	iorwf	(pow@y+1)& (0+255),w,b
  3588  001A54  11C7               	iorwf	(pow@y+2)& (0+255),w,b
  3589  001A56  11C8               	iorwf	(pow@y+3)& (0+255),w,b
  3590  001A58  E107               	bnz	l4600
  3591                           
  3592                           ; BSR set to: 0
  3593  001A5A  6BC1               	clrf	?_pow& (0+255),b
  3594  001A5C  6BC2               	clrf	(?_pow+1)& (0+255),b
  3595  001A5E  0E80               	movlw	128
  3596  001A60  6FC3               	movwf	(?_pow+2)& (0+255),b
  3597  001A62  0E3F               	movlw	63
  3598  001A64  6FC4               	movwf	(?_pow+3)& (0+255),b
  3599  001A66  D0A4               	goto	l910
  3600  001A68                     l4600:
  3601                           
  3602                           ; BSR set to: 0
  3603  001A68  AFC4               	btfss	(pow@x+3)& (0+255),7,b
  3604  001A6A  D045               	goto	l4610
  3605                           
  3606                           ; BSR set to: 0
  3607  001A6C  C0C5  F0A2         	movff	pow@y,___fltol@f1
  3608  001A70  C0C6  F0A3         	movff	pow@y+1,___fltol@f1+1
  3609  001A74  C0C7  F0A4         	movff	pow@y+2,___fltol@f1+2
  3610  001A78  C0C8  F0A5         	movff	pow@y+3,___fltol@f1+3
  3611  001A7C  EC54  F012         	call	___fltol	;wreg free
  3612  001A80  C0A2  F0D2         	movff	?___fltol,pow@yi
  3613  001A84  C0A3  F0D3         	movff	?___fltol+1,pow@yi+1
  3614  001A88  C0A4  F0D4         	movff	?___fltol+2,pow@yi+2
  3615  001A8C  C0A5  F0D5         	movff	?___fltol+3,pow@yi+3
  3616  001A90  C0D2  F040         	movff	pow@yi,___xxtofl@val
  3617  001A94  C0D3  F041         	movff	pow@yi+1,___xxtofl@val+1
  3618  001A98  C0D4  F042         	movff	pow@yi+2,___xxtofl@val+2
  3619  001A9C  C0D5  F043         	movff	pow@yi+3,___xxtofl@val+3
  3620  001AA0  0E00               	movlw	0
  3621  001AA2  EC73  F00E         	call	___xxtofl
  3622  001AA6  0100               	movlb	0	; () banked
  3623  001AA8  51C5               	movf	pow@y& (0+255),w,b
  3624  001AAA  1840               	xorwf	?___xxtofl,w,c
  3625  001AAC  E109               	bnz	u5120
  3626  001AAE  51C6               	movf	(pow@y+1)& (0+255),w,b
  3627  001AB0  1841               	xorwf	?___xxtofl+1,w,c
  3628  001AB2  E106               	bnz	u5120
  3629  001AB4  51C7               	movf	(pow@y+2)& (0+255),w,b
  3630  001AB6  1842               	xorwf	?___xxtofl+2,w,c
  3631  001AB8  E103               	bnz	u5120
  3632  001ABA  51C8               	movf	(pow@y+3)& (0+255),w,b
  3633  001ABC  1843               	xorwf	?___xxtofl+3,w,c
  3634  001ABE  E006               	bz	l4606
  3635  001AC0                     u5120:
  3636  001AC0  FFFF               	dw	65535	; assembler added errata NOP
  3637                           
  3638                           ; BSR set to: 0
  3639  001AC2  6BC1               	clrf	?_pow& (0+255),b
  3640  001AC4  6BC2               	clrf	(?_pow+1)& (0+255),b
  3641  001AC6  6BC3               	clrf	(?_pow+2)& (0+255),b
  3642  001AC8  6BC4               	clrf	(?_pow+3)& (0+255),b
  3643  001ACA  D072               	goto	l910
  3644  001ACC                     l4606:
  3645                           
  3646                           ; BSR set to: 0
  3647  001ACC  51D2               	movf	pow@yi& (0+255),w,b
  3648  001ACE  0B01               	andlw	1
  3649  001AD0  6FD1               	movwf	pow@sign& (0+255),b
  3650                           
  3651                           ; BSR set to: 0
  3652  001AD2  C0C1  F009         	movff	pow@x,___flneg@f1
  3653  001AD6  C0C2  F00A         	movff	pow@x+1,___flneg@f1+1
  3654  001ADA  C0C3  F00B         	movff	pow@x+2,___flneg@f1+2
  3655  001ADE  C0C4  F00C         	movff	pow@x+3,___flneg@f1+3
  3656  001AE2  EC2D  F016         	call	___flneg	;wreg free
  3657  001AE6  C009  F0C1         	movff	?___flneg,pow@x
  3658  001AEA  C00A  F0C2         	movff	?___flneg+1,pow@x+1
  3659  001AEE  C00B  F0C3         	movff	?___flneg+2,pow@x+2
  3660  001AF2  C00C  F0C4         	movff	?___flneg+3,pow@x+3
  3661  001AF6                     l4610:
  3662  001AF6  FFFF               	dw	65535	; assembler added errata NOP
  3663                           
  3664                           ; BSR set to: 0
  3665  001AF8  C0C1  F094         	movff	pow@x,log@x
  3666  001AFC  C0C2  F095         	movff	pow@x+1,log@x+1
  3667  001B00  C0C3  F096         	movff	pow@x+2,log@x+2
  3668  001B04  C0C4  F097         	movff	pow@x+3,log@x+3
  3669  001B08  ECDB  F00D         	call	_log	;wreg free
  3670  001B0C  C094  F0C9         	movff	?_log,_pow$1315
  3671  001B10  C095  F0CA         	movff	?_log+1,_pow$1315+1
  3672  001B14  C096  F0CB         	movff	?_log+2,_pow$1315+2
  3673  001B18  C097  F0CC         	movff	?_log+3,_pow$1315+3
  3674  001B1C  C0C9  F05E         	movff	_pow$1315,___flmul@b
  3675  001B20  C0CA  F05F         	movff	_pow$1315+1,___flmul@b+1
  3676  001B24  C0CB  F060         	movff	_pow$1315+2,___flmul@b+2
  3677  001B28  C0CC  F061         	movff	_pow$1315+3,___flmul@b+3
  3678  001B2C  C0C5  F062         	movff	pow@y,___flmul@a
  3679  001B30  C0C6  F063         	movff	pow@y+1,___flmul@a+1
  3680  001B34  C0C7  F064         	movff	pow@y+2,___flmul@a+2
  3681  001B38  C0C8  F065         	movff	pow@y+3,___flmul@a+3
  3682  001B3C  EC74  F007         	call	___flmul	;wreg free
  3683  001B40  C05E  F0CD         	movff	?___flmul,_pow$1316
  3684  001B44  C05F  F0CE         	movff	?___flmul+1,_pow$1316+1
  3685  001B48  C060  F0CF         	movff	?___flmul+2,_pow$1316+2
  3686  001B4C  C061  F0D0         	movff	?___flmul+3,_pow$1316+3
  3687                           
  3688                           ; BSR set to: 0
  3689  001B50  C0CD  F0B6         	movff	_pow$1316,exp@x
  3690  001B54  C0CE  F0B7         	movff	_pow$1316+1,exp@x+1
  3691  001B58  C0CF  F0B8         	movff	_pow$1316+2,exp@x+2
  3692  001B5C  C0D0  F0B9         	movff	_pow$1316+3,exp@x+3
  3693  001B60  EC27  F00A         	call	_exp	;wreg free
  3694  001B64  C0B6  F0C1         	movff	?_exp,pow@x
  3695  001B68  C0B7  F0C2         	movff	?_exp+1,pow@x+1
  3696  001B6C  C0B8  F0C3         	movff	?_exp+2,pow@x+2
  3697  001B70  C0B9  F0C4         	movff	?_exp+3,pow@x+3
  3698  001B74  0100               	movlb	0	; () banked
  3699  001B76  51D1               	movf	pow@sign& (0+255),w,b
  3700  001B78  E013               	bz	l914
  3701                           
  3702                           ; BSR set to: 0
  3703  001B7A  C0C1  F009         	movff	pow@x,___flneg@f1
  3704  001B7E  C0C2  F00A         	movff	pow@x+1,___flneg@f1+1
  3705  001B82  C0C3  F00B         	movff	pow@x+2,___flneg@f1+2
  3706  001B86  C0C4  F00C         	movff	pow@x+3,___flneg@f1+3
  3707  001B8A  EC2D  F016         	call	___flneg	;wreg free
  3708  001B8E  C009  F0C1         	movff	?___flneg,?_pow
  3709  001B92  C00A  F0C2         	movff	?___flneg+1,?_pow+1
  3710  001B96  C00B  F0C3         	movff	?___flneg+2,?_pow+2
  3711  001B9A  C00C  F0C4         	movff	?___flneg+3,?_pow+3
  3712  001B9E  D008               	goto	l910
  3713  001BA0                     l914:
  3714                           
  3715                           ; BSR set to: 0
  3716  001BA0  C0C1  F0C1         	movff	pow@x,?_pow
  3717  001BA4  C0C2  F0C2         	movff	pow@x+1,?_pow+1
  3718  001BA8  C0C3  F0C3         	movff	pow@x+2,?_pow+2
  3719  001BAC  C0C4  F0C4         	movff	pow@x+3,?_pow+3
  3720  001BB0                     l910:
  3721  001BB0  FFFF               	dw	65535	; assembler added errata NOP
  3722                           
  3723                           ; BSR set to: 0
  3724  001BB2  0012               	return		;funcret
  3725  001BB4  FFFF               	dw	65535	; errata NOP
  3726  001BB6                     __end_of_pow:
  3727                           	opt stack 0
  3728                           tblptru	equ	0xFF8
  3729                           tblptrh	equ	0xFF7
  3730                           tblptrl	equ	0xFF6
  3731                           tablat	equ	0xFF5
  3732                           intcon	equ	0xFF2
  3733                           intcon2	equ	0xFF1
  3734                           postinc0	equ	0xFEE
  3735                           wreg	equ	0xFE8
  3736                           postdec1	equ	0xFE5
  3737                           fsr1l	equ	0xFE1
  3738                           status	equ	0xFD8
  3739                           
  3740 ;; *************** function _exp *****************
  3741 ;; Defined at:
  3742 ;;		line 12 in file "/opt/microchip/xc8/v1.45/sources/common/exp.c"
  3743 ;; Parameters:    Size  Location     Type
  3744 ;;  x               4   54[BANK0 ] unsigned char 
  3745 ;; Auto vars:     Size  Location     Type
  3746 ;;  exponent        2   62[BANK0 ] int 
  3747 ;;  sign            1   64[BANK0 ] unsigned char 
  3748 ;; Return value:  Size  Location     Type
  3749 ;;                  4   54[BANK0 ] unsigned char 
  3750 ;; Registers used:
  3751 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3752 ;; Tracked objects:
  3753 ;;		On entry : 3F/0
  3754 ;;		On exit  : 0/0
  3755 ;;		Unchanged: 0/0
  3756 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3757 ;;      Params:         0       4       0       0       0       0       0
  3758 ;;      Locals:         0       7       0       0       0       0       0
  3759 ;;      Temps:          0       0       0       0       0       0       0
  3760 ;;      Totals:         0      11       0       0       0       0       0
  3761 ;;Total ram usage:       11 bytes
  3762 ;; Hardware stack levels used:    1
  3763 ;; Hardware stack levels required when called:    4
  3764 ;; This function calls:
  3765 ;;		___fldiv
  3766 ;;		___flge
  3767 ;;		___flmul
  3768 ;;		___flneg
  3769 ;;		___flsub
  3770 ;;		___fltol
  3771 ;;		___xxtofl
  3772 ;;		_eval_poly
  3773 ;;		_floor
  3774 ;;		_ldexp
  3775 ;; This function is called by:
  3776 ;;		_pow
  3777 ;; This function uses a non-reentrant model
  3778 ;;
  3779                           
  3780                           	psect	text13
  3781  00144E                     __ptext13:
  3782                           	opt stack 0
  3783  00144E                     _exp:
  3784                           	opt stack 0
  3785  00144E  FFFF               	dw	65535	; assembler added errata NOP
  3786                           
  3787                           ; BSR set to: 0
  3788                           
  3789                           ; BSR set to: 0
  3790                           ;incstack = 0
  3791  001450  51B6               	movf	exp@x& (0+255),w,b
  3792  001452  11B7               	iorwf	(exp@x+1)& (0+255),w,b
  3793  001454  11B8               	iorwf	(exp@x+2)& (0+255),w,b
  3794  001456  11B9               	iorwf	(exp@x+3)& (0+255),w,b
  3795  001458  E106               	bnz	l4546
  3796                           
  3797                           ; BSR set to: 0
  3798  00145A  6BB6               	clrf	?_exp& (0+255),b
  3799  00145C  6BB7               	clrf	(?_exp+1)& (0+255),b
  3800  00145E  0E80               	movlw	128
  3801  001460  6FB8               	movwf	(?_exp+2)& (0+255),b
  3802  001462  0E3F               	movlw	63
  3803  001464  D018               	goto	L3
  3804  001466                     l4546:
  3805                           
  3806                           ; BSR set to: 0
  3807  001466  0E18               	movlw	24
  3808  001468  6E09               	movwf	___flge@ff1,c
  3809  00146A  0E72               	movlw	114
  3810  00146C  6E0A               	movwf	___flge@ff1+1,c
  3811  00146E  0E31               	movlw	49
  3812  001470  6E0B               	movwf	___flge@ff1+2,c
  3813  001472  0E44               	movlw	68
  3814  001474  6E0C               	movwf	___flge@ff1+3,c
  3815  001476  C0B6  F00D         	movff	exp@x,___flge@ff2
  3816  00147A  C0B7  F00E         	movff	exp@x+1,___flge@ff2+1
  3817  00147E  C0B8  F00F         	movff	exp@x+2,___flge@ff2+2
  3818  001482  C0B9  F010         	movff	exp@x+3,___flge@ff2+3
  3819  001486  EC51  F013         	call	___flge	;wreg free
  3820  00148A  E208               	bc	l4552
  3821  00148C  0100               	movlb	0	; () banked
  3822  00148E  69B6               	setf	?_exp& (0+255),b
  3823  001490  69B7               	setf	(?_exp+1)& (0+255),b
  3824  001492  0E7F               	movlw	127
  3825  001494  6FB8               	movwf	(?_exp+2)& (0+255),b
  3826  001496                     L3:
  3827  001496  FFFF               	dw	65535	; assembler added errata NOP
  3828  001498  6FB9               	movwf	(?_exp+3)& (0+255),b
  3829  00149A  D0E7               	goto	l1075
  3830  00149C                     l4552:
  3831  00149C  C0B6  F009         	movff	exp@x,___flge@ff1
  3832  0014A0  C0B7  F00A         	movff	exp@x+1,___flge@ff1+1
  3833  0014A4  C0B8  F00B         	movff	exp@x+2,___flge@ff1+2
  3834  0014A8  C0B9  F00C         	movff	exp@x+3,___flge@ff1+3
  3835  0014AC  0E87               	movlw	135
  3836  0014AE  6E0D               	movwf	___flge@ff2,c
  3837  0014B0  0E48               	movlw	72
  3838  0014B2  6E0E               	movwf	___flge@ff2+1,c
  3839  0014B4  0E3A               	movlw	58
  3840  0014B6  6E0F               	movwf	___flge@ff2+2,c
  3841  0014B8  0EC4               	movlw	196
  3842  0014BA  6E10               	movwf	___flge@ff2+3,c
  3843  0014BC  EC51  F013         	call	___flge	;wreg free
  3844  0014C0  E202               	bc	l4556
  3845  0014C2  0100               	movlb	0	; () banked
  3846  0014C4  D0AB               	goto	u5080
  3847  0014C6                     l4556:
  3848  0014C6  0100               	movlb	0	; () banked
  3849  0014C8  0E01               	movlw	1
  3850  0014CA  AFB9               	btfss	(exp@x+3)& (0+255),7,b
  3851  0014CC  0E00               	movlw	0
  3852  0014CE  6FC0               	movwf	exp@sign& (0+255),b
  3853                           
  3854                           ; BSR set to: 0
  3855  0014D0  51C0               	movf	exp@sign& (0+255),w,b
  3856  0014D2  E012               	bz	l4562
  3857                           
  3858                           ; BSR set to: 0
  3859  0014D4  C0B6  F009         	movff	exp@x,___flneg@f1
  3860  0014D8  C0B7  F00A         	movff	exp@x+1,___flneg@f1+1
  3861  0014DC  C0B8  F00B         	movff	exp@x+2,___flneg@f1+2
  3862  0014E0  C0B9  F00C         	movff	exp@x+3,___flneg@f1+3
  3863  0014E4  EC2D  F016         	call	___flneg	;wreg free
  3864  0014E8  C009  F0B6         	movff	?___flneg,exp@x
  3865  0014EC  C00A  F0B7         	movff	?___flneg+1,exp@x+1
  3866  0014F0  C00B  F0B8         	movff	?___flneg+2,exp@x+2
  3867  0014F4  C00C  F0B9         	movff	?___flneg+3,exp@x+3
  3868  0014F8                     l4562:
  3869                           
  3870                           ; BSR set to: 0
  3871  0014F8  C0B6  F05E         	movff	exp@x,___flmul@b
  3872  0014FC  C0B7  F05F         	movff	exp@x+1,___flmul@b+1
  3873  001500  C0B8  F060         	movff	exp@x+2,___flmul@b+2
  3874  001504  C0B9  F061         	movff	exp@x+3,___flmul@b+3
  3875  001508  0E3B               	movlw	59
  3876  00150A  6E62               	movwf	___flmul@a,c
  3877  00150C  0EAA               	movlw	170
  3878  00150E  6E63               	movwf	___flmul@a+1,c
  3879  001510  0EB8               	movlw	184
  3880  001512  6E64               	movwf	___flmul@a+2,c
  3881  001514  0E3F               	movlw	63
  3882  001516  6E65               	movwf	___flmul@a+3,c
  3883  001518  EC74  F007         	call	___flmul	;wreg free
  3884  00151C  C05E  F0B6         	movff	?___flmul,exp@x
  3885  001520  C05F  F0B7         	movff	?___flmul+1,exp@x+1
  3886  001524  C060  F0B8         	movff	?___flmul+2,exp@x+2
  3887  001528  C061  F0B9         	movff	?___flmul+3,exp@x+3
  3888                           
  3889                           ; BSR set to: 0
  3890  00152C  C0B6  F0AC         	movff	exp@x,floor@x
  3891  001530  C0B7  F0AD         	movff	exp@x+1,floor@x+1
  3892  001534  C0B8  F0AE         	movff	exp@x+2,floor@x+2
  3893  001538  C0B9  F0AF         	movff	exp@x+3,floor@x+3
  3894  00153C  ECA0  F00F         	call	_floor	;wreg free
  3895  001540  C0AC  F0BA         	movff	?_floor,_exp$1317
  3896  001544  C0AD  F0BB         	movff	?_floor+1,_exp$1317+1
  3897  001548  C0AE  F0BC         	movff	?_floor+2,_exp$1317+2
  3898  00154C  C0AF  F0BD         	movff	?_floor+3,_exp$1317+3
  3899  001550  C0BA  F0A2         	movff	_exp$1317,___fltol@f1
  3900  001554  C0BB  F0A3         	movff	_exp$1317+1,___fltol@f1+1
  3901  001558  C0BC  F0A4         	movff	_exp$1317+2,___fltol@f1+2
  3902  00155C  C0BD  F0A5         	movff	_exp$1317+3,___fltol@f1+3
  3903  001560  EC54  F012         	call	___fltol	;wreg free
  3904  001564  C0A2  F0BE         	movff	?___fltol,exp@exponent
  3905  001568  C0A3  F0BF         	movff	?___fltol+1,exp@exponent+1
  3906                           
  3907                           ; BSR set to: 0
  3908  00156C  C0B6  F08D         	movff	exp@x,___flsub@b
  3909  001570  C0B7  F08E         	movff	exp@x+1,___flsub@b+1
  3910  001574  C0B8  F08F         	movff	exp@x+2,___flsub@b+2
  3911  001578  C0B9  F090         	movff	exp@x+3,___flsub@b+3
  3912  00157C  C0BE  F040         	movff	exp@exponent,___xxtofl@val
  3913  001580  C0BF  F041         	movff	exp@exponent+1,___xxtofl@val+1
  3914  001584  0E00               	movlw	0
  3915  001586  BE41               	btfsc	___xxtofl@val+1,7,c
  3916  001588  0EFF               	movlw	-1
  3917  00158A  6E42               	movwf	___xxtofl@val+2,c
  3918  00158C  6E43               	movwf	___xxtofl@val+3,c
  3919  00158E  0E01               	movlw	1
  3920  001590  EC73  F00E         	call	___xxtofl
  3921  001594  C040  F091         	movff	?___xxtofl,___flsub@a
  3922  001598  C041  F092         	movff	?___xxtofl+1,___flsub@a+1
  3923  00159C  C042  F093         	movff	?___xxtofl+2,___flsub@a+2
  3924  0015A0  C043  F094         	movff	?___xxtofl+3,___flsub@a+3
  3925  0015A4  EC3A  F015         	call	___flsub	;wreg free
  3926  0015A8  C08D  F0B6         	movff	?___flsub,exp@x
  3927  0015AC  C08E  F0B7         	movff	?___flsub+1,exp@x+1
  3928  0015B0  C08F  F0B8         	movff	?___flsub+2,exp@x+2
  3929  0015B4  C090  F0B9         	movff	?___flsub+3,exp@x+3
  3930  0015B8  C0B6  F08D         	movff	exp@x,eval_poly@x
  3931  0015BC  C0B7  F08E         	movff	exp@x+1,eval_poly@x+1
  3932  0015C0  C0B8  F08F         	movff	exp@x+2,eval_poly@x+2
  3933  0015C4  C0B9  F090         	movff	exp@x+3,eval_poly@x+3
  3934  0015C8  0E01               	movlw	low exp@coeff
  3935  0015CA  0100               	movlb	0	; () banked
  3936  0015CC  6F91               	movwf	eval_poly@d& (0+255),b
  3937  0015CE  6B93               	clrf	(eval_poly@n+1)& (0+255),b
  3938  0015D0  0E09               	movlw	9
  3939  0015D2  6F92               	movwf	eval_poly@n& (0+255),b
  3940  0015D4  EC94  F011         	call	_eval_poly	;wreg free
  3941  0015D8  C08D  F094         	movff	?_eval_poly,ldexp@value
  3942  0015DC  C08E  F095         	movff	?_eval_poly+1,ldexp@value+1
  3943  0015E0  C08F  F096         	movff	?_eval_poly+2,ldexp@value+2
  3944  0015E4  C090  F097         	movff	?_eval_poly+3,ldexp@value+3
  3945  0015E8  C0BE  F098         	movff	exp@exponent,ldexp@newexp
  3946  0015EC  C0BF  F099         	movff	exp@exponent+1,ldexp@newexp+1
  3947  0015F0  ECAD  F012         	call	_ldexp	;wreg free
  3948  0015F4  C094  F0B6         	movff	?_ldexp,exp@x
  3949  0015F8  C095  F0B7         	movff	?_ldexp+1,exp@x+1
  3950  0015FC  C096  F0B8         	movff	?_ldexp+2,exp@x+2
  3951  001600  C097  F0B9         	movff	?_ldexp+3,exp@x+3
  3952                           
  3953                           ; BSR set to: 0
  3954  001604  51C0               	movf	exp@sign& (0+255),w,b
  3955  001606  E029               	bz	l1079
  3956                           
  3957                           ; BSR set to: 0
  3958  001608  29B6               	incf	exp@x& (0+255),w,b
  3959  00160A  E10E               	bnz	l4578
  3960  00160C  29B7               	incf	(exp@x+1)& (0+255),w,b
  3961  00160E  E10C               	bnz	l4578
  3962  001610  0E7F               	movlw	127
  3963  001612  19B8               	xorwf	(exp@x+2)& (0+255),w,b
  3964  001614  E109               	bnz	l4578
  3965  001616  0E7F               	movlw	127
  3966  001618  19B9               	xorwf	(exp@x+3)& (0+255),w,b
  3967  00161A  E106               	bnz	l4578
  3968  00161C                     u5080:
  3969  00161C  FFFF               	dw	65535	; assembler added errata NOP
  3970                           
  3971                           ; BSR set to: 0
  3972  00161E  6BB6               	clrf	?_exp& (0+255),b
  3973  001620  6BB7               	clrf	(?_exp+1)& (0+255),b
  3974  001622  6BB8               	clrf	(?_exp+2)& (0+255),b
  3975  001624  6BB9               	clrf	(?_exp+3)& (0+255),b
  3976  001626  D021               	goto	l1075
  3977  001628                     l4578:
  3978                           
  3979                           ; BSR set to: 0
  3980  001628  6A09               	clrf	___fldiv@b,c
  3981  00162A  6A0A               	clrf	___fldiv@b+1,c
  3982  00162C  0E80               	movlw	128
  3983  00162E  6E0B               	movwf	___fldiv@b+2,c
  3984  001630  0E3F               	movlw	63
  3985  001632  6E0C               	movwf	___fldiv@b+3,c
  3986  001634  C0B6  F00D         	movff	exp@x,___fldiv@a
  3987  001638  C0B7  F00E         	movff	exp@x+1,___fldiv@a+1
  3988  00163C  C0B8  F00F         	movff	exp@x+2,___fldiv@a+2
  3989  001640  C0B9  F010         	movff	exp@x+3,___fldiv@a+3
  3990  001644  EC38  F00B         	call	___fldiv	;wreg free
  3991  001648  C009  F0B6         	movff	?___fldiv,?_exp
  3992  00164C  C00A  F0B7         	movff	?___fldiv+1,?_exp+1
  3993  001650  C00B  F0B8         	movff	?___fldiv+2,?_exp+2
  3994  001654  C00C  F0B9         	movff	?___fldiv+3,?_exp+3
  3995  001658  D008               	goto	l1075
  3996  00165A                     l1079:
  3997                           
  3998                           ; BSR set to: 0
  3999  00165A  C0B6  F0B6         	movff	exp@x,?_exp
  4000  00165E  C0B7  F0B7         	movff	exp@x+1,?_exp+1
  4001  001662  C0B8  F0B8         	movff	exp@x+2,?_exp+2
  4002  001666  C0B9  F0B9         	movff	exp@x+3,?_exp+3
  4003  00166A                     l1075:
  4004  00166A  FFFF               	dw	65535	; assembler added errata NOP
  4005  00166C  0012               	return		;funcret
  4006  00166E  FFFF               	dw	65535	; errata NOP
  4007  001670                     __end_of_exp:
  4008                           	opt stack 0
  4009                           tblptru	equ	0xFF8
  4010                           tblptrh	equ	0xFF7
  4011                           tblptrl	equ	0xFF6
  4012                           tablat	equ	0xFF5
  4013                           intcon	equ	0xFF2
  4014                           intcon2	equ	0xFF1
  4015                           postinc0	equ	0xFEE
  4016                           wreg	equ	0xFE8
  4017                           postdec1	equ	0xFE5
  4018                           fsr1l	equ	0xFE1
  4019                           status	equ	0xFD8
  4020                           
  4021 ;; *************** function _ldexp *****************
  4022 ;; Defined at:
  4023 ;;		line 277 in file "/opt/microchip/xc8/v1.45/sources/common/frexp.c"
  4024 ;; Parameters:    Size  Location     Type
  4025 ;;  value           4   20[BANK0 ] unsigned char 
  4026 ;;  newexp          2   24[BANK0 ] int 
  4027 ;; Auto vars:     Size  Location     Type
  4028 ;;		None
  4029 ;; Return value:  Size  Location     Type
  4030 ;;                  4   20[BANK0 ] int 
  4031 ;; Registers used:
  4032 ;;		wreg, status,2, status,0
  4033 ;; Tracked objects:
  4034 ;;		On entry : 3F/0
  4035 ;;		On exit  : 3F/0
  4036 ;;		Unchanged: 0/0
  4037 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4038 ;;      Params:         0       6       0       0       0       0       0
  4039 ;;      Locals:         0       0       0       0       0       0       0
  4040 ;;      Temps:          0       2       0       0       0       0       0
  4041 ;;      Totals:         0       8       0       0       0       0       0
  4042 ;;Total ram usage:        8 bytes
  4043 ;; Hardware stack levels used:    1
  4044 ;; Hardware stack levels required when called:    2
  4045 ;; This function calls:
  4046 ;;		Nothing
  4047 ;; This function is called by:
  4048 ;;		_exp
  4049 ;; This function uses a non-reentrant model
  4050 ;;
  4051                           
  4052                           	psect	text14
  4053  00255A                     __ptext14:
  4054                           	opt stack 0
  4055  00255A                     _ldexp:
  4056                           	opt stack 0
  4057  00255A  FFFF               	dw	65535	; assembler added errata NOP
  4058                           
  4059                           ; BSR set to: 0
  4060                           
  4061                           ;incstack = 0
  4062  00255C  5194               	movf	ldexp@value& (0+255),w,b
  4063  00255E  1195               	iorwf	(ldexp@value+1)& (0+255),w,b
  4064  002560  1196               	iorwf	(ldexp@value+2)& (0+255),w,b
  4065  002562  1197               	iorwf	(ldexp@value+3)& (0+255),w,b
  4066  002564  E101               	bnz	l4442
  4067  002566  D013               	goto	u4890
  4068  002568                     l4442:
  4069                           
  4070                           ; BSR set to: 0
  4071  002568  5197               	movf	(ldexp@value+3)& (0+255),w,b
  4072  00256A  0B7F               	andlw	127
  4073  00256C  6F9A               	movwf	??_ldexp& (0+255),b
  4074  00256E  6B9B               	clrf	(??_ldexp+1)& (0+255),b
  4075  002570  90D8               	bcf	status,0,c
  4076  002572  379A               	rlcf	??_ldexp& (0+255),f,b
  4077  002574  379B               	rlcf	(??_ldexp+1)& (0+255),f,b
  4078  002576  519A               	movf	??_ldexp& (0+255),w,b
  4079  002578  2798               	addwf	ldexp@newexp& (0+255),f,b
  4080  00257A  519B               	movf	(??_ldexp+1)& (0+255),w,b
  4081  00257C  2399               	addwfc	(ldexp@newexp+1)& (0+255),f,b
  4082  00257E  0E01               	movlw	1
  4083  002580  AF96               	btfss	(ldexp@value+2)& (0+255),7,b
  4084  002582  0E00               	movlw	0
  4085  002584  2798               	addwf	ldexp@newexp& (0+255),f,b
  4086  002586  0E00               	movlw	0
  4087  002588  2399               	addwfc	(ldexp@newexp+1)& (0+255),f,b
  4088  00258A  AF99               	btfss	(ldexp@newexp+1)& (0+255),7,b
  4089  00258C  D006               	goto	l4448
  4090  00258E                     u4890:
  4091  00258E  FFFF               	dw	65535	; assembler added errata NOP
  4092                           
  4093                           ; BSR set to: 0
  4094  002590  6B94               	clrf	?_ldexp& (0+255),b
  4095  002592  6B95               	clrf	(?_ldexp+1)& (0+255),b
  4096  002594  6B96               	clrf	(?_ldexp+2)& (0+255),b
  4097  002596  6B97               	clrf	(?_ldexp+3)& (0+255),b
  4098  002598  D032               	goto	l693
  4099  00259A                     l4448:
  4100  00259A  FFFF               	dw	65535	; assembler added errata NOP
  4101                           
  4102                           ; BSR set to: 0
  4103  00259C  BF99               	btfsc	(ldexp@newexp+1)& (0+255),7,b
  4104  00259E  D012               	goto	l4462
  4105  0025A0  0599               	decf	(ldexp@newexp+1)& (0+255),w,b
  4106  0025A2  E310               	bnc	l4462
  4107                           
  4108                           ; BSR set to: 0
  4109  0025A4  AF97               	btfss	(ldexp@value+3)& (0+255),7,b
  4110  0025A6  D007               	goto	l4458
  4111                           
  4112                           ; BSR set to: 0
  4113  0025A8  6994               	setf	?_ldexp& (0+255),b
  4114  0025AA  6995               	setf	(?_ldexp+1)& (0+255),b
  4115  0025AC  0E7F               	movlw	127
  4116  0025AE  6F96               	movwf	(?_ldexp+2)& (0+255),b
  4117  0025B0  0EFF               	movlw	255
  4118  0025B2  6997               	setf	(?_ldexp+3)& (0+255),b
  4119  0025B4  D024               	goto	l693
  4120  0025B6                     l4458:
  4121  0025B6  FFFF               	dw	65535	; assembler added errata NOP
  4122                           
  4123                           ; BSR set to: 0
  4124  0025B8  6994               	setf	?_ldexp& (0+255),b
  4125  0025BA  6995               	setf	(?_ldexp+1)& (0+255),b
  4126  0025BC  0E7F               	movlw	127
  4127  0025BE  6F96               	movwf	(?_ldexp+2)& (0+255),b
  4128  0025C0  6F97               	movwf	(?_ldexp+3)& (0+255),b
  4129  0025C2  D01D               	goto	l693
  4130  0025C4                     l4462:
  4131  0025C4  FFFF               	dw	65535	; assembler added errata NOP
  4132                           
  4133                           ; BSR set to: 0
  4134  0025C6  3599               	rlcf	(ldexp@newexp+1)& (0+255),w,b
  4135  0025C8  3199               	rrcf	(ldexp@newexp+1)& (0+255),w,b
  4136  0025CA  6F9B               	movwf	(??_ldexp+1)& (0+255),b
  4137  0025CC  3198               	rrcf	ldexp@newexp& (0+255),w,b
  4138  0025CE  6F9A               	movwf	??_ldexp& (0+255),b
  4139  0025D0  1997               	xorwf	(ldexp@value+3)& (0+255),w,b
  4140  0025D2  0B80               	andlw	-128
  4141  0025D4  199A               	xorwf	??_ldexp& (0+255),w,b
  4142  0025D6  6F97               	movwf	(ldexp@value+3)& (0+255),b
  4143  0025D8  C098  F09A         	movff	ldexp@newexp,??_ldexp
  4144  0025DC  0E01               	movlw	1
  4145  0025DE  179A               	andwf	??_ldexp& (0+255),f,b
  4146  0025E0  339A               	rrcf	??_ldexp& (0+255),f,b
  4147  0025E2  339A               	rrcf	??_ldexp& (0+255),f,b
  4148  0025E4  5196               	movf	(ldexp@value+2)& (0+255),w,b
  4149  0025E6  199A               	xorwf	??_ldexp& (0+255),w,b
  4150  0025E8  0B7F               	andlw	-129
  4151  0025EA  199A               	xorwf	??_ldexp& (0+255),w,b
  4152  0025EC  6F96               	movwf	(ldexp@value+2)& (0+255),b
  4153                           
  4154                           ; BSR set to: 0
  4155  0025EE  C094  F094         	movff	ldexp@value,?_ldexp
  4156  0025F2  C095  F095         	movff	ldexp@value+1,?_ldexp+1
  4157  0025F6  C096  F096         	movff	ldexp@value+2,?_ldexp+2
  4158  0025FA  C097  F097         	movff	ldexp@value+3,?_ldexp+3
  4159  0025FE                     l693:
  4160  0025FE  FFFF               	dw	65535	; assembler added errata NOP
  4161                           
  4162                           ; BSR set to: 0
  4163  002600  0012               	return		;funcret
  4164  002602  FFFF               	dw	65535	; errata NOP
  4165  002604                     __end_of_ldexp:
  4166                           	opt stack 0
  4167                           tblptru	equ	0xFF8
  4168                           tblptrh	equ	0xFF7
  4169                           tblptrl	equ	0xFF6
  4170                           tablat	equ	0xFF5
  4171                           intcon	equ	0xFF2
  4172                           intcon2	equ	0xFF1
  4173                           postinc0	equ	0xFEE
  4174                           wreg	equ	0xFE8
  4175                           postdec1	equ	0xFE5
  4176                           fsr1l	equ	0xFE1
  4177                           status	equ	0xFD8
  4178                           
  4179 ;; *************** function _floor *****************
  4180 ;; Defined at:
  4181 ;;		line 13 in file "/opt/microchip/xc8/v1.45/sources/common/floor.c"
  4182 ;; Parameters:    Size  Location     Type
  4183 ;;  x               4   44[BANK0 ] int 
  4184 ;; Auto vars:     Size  Location     Type
  4185 ;;  i               4   48[BANK0 ] int 
  4186 ;;  expon           2   52[BANK0 ] int 
  4187 ;; Return value:  Size  Location     Type
  4188 ;;                  4   44[BANK0 ] int 
  4189 ;; Registers used:
  4190 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4191 ;; Tracked objects:
  4192 ;;		On entry : 0/0
  4193 ;;		On exit  : 0/0
  4194 ;;		Unchanged: 0/0
  4195 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4196 ;;      Params:         0       4       0       0       0       0       0
  4197 ;;      Locals:         0       6       0       0       0       0       0
  4198 ;;      Temps:          0       0       0       0       0       0       0
  4199 ;;      Totals:         0      10       0       0       0       0       0
  4200 ;;Total ram usage:       10 bytes
  4201 ;; Hardware stack levels used:    1
  4202 ;; Hardware stack levels required when called:    3
  4203 ;; This function calls:
  4204 ;;		___fladd
  4205 ;;		___flge
  4206 ;;		___fltol
  4207 ;;		___xxtofl
  4208 ;;		_frexp
  4209 ;; This function is called by:
  4210 ;;		_format_double
  4211 ;;		_exp
  4212 ;; This function uses a non-reentrant model
  4213 ;;
  4214                           
  4215                           	psect	text15
  4216  001F40                     __ptext15:
  4217                           	opt stack 0
  4218  001F40                     _floor:
  4219                           	opt stack 0
  4220  001F40  FFFF               	dw	65535	; assembler added errata NOP
  4221                           
  4222                           ; BSR set to: 0
  4223                           ;incstack = 0
  4224  001F42  C0AC  F009         	movff	floor@x,frexp@value
  4225  001F46  C0AD  F00A         	movff	floor@x+1,frexp@value+1
  4226  001F4A  C0AE  F00B         	movff	floor@x+2,frexp@value+2
  4227  001F4E  C0AF  F00C         	movff	floor@x+3,frexp@value+3
  4228  001F52  0EB4               	movlw	low floor@expon
  4229  001F54  6E0D               	movwf	frexp@eptr,c
  4230  001F56  EC9E  F013         	call	_frexp	;wreg free
  4231  001F5A  0100               	movlb	0	; () banked
  4232  001F5C  AFB5               	btfss	(floor@expon+1)& (0+255),7,b
  4233  001F5E  D00F               	goto	l4294
  4234                           
  4235                           ; BSR set to: 0
  4236  001F60  AFAF               	btfss	(floor@x+3)& (0+255),7,b
  4237  001F62  D007               	goto	l666
  4238                           
  4239                           ; BSR set to: 0
  4240  001F64  6BAC               	clrf	?_floor& (0+255),b
  4241  001F66  6BAD               	clrf	(?_floor+1)& (0+255),b
  4242  001F68  0E80               	movlw	128
  4243  001F6A  6FAE               	movwf	(?_floor+2)& (0+255),b
  4244  001F6C  0EBF               	movlw	191
  4245  001F6E  6FAF               	movwf	(?_floor+3)& (0+255),b
  4246  001F70  D066               	goto	l667
  4247  001F72                     l666:
  4248  001F72  FFFF               	dw	65535	; assembler added errata NOP
  4249                           
  4250                           ; BSR set to: 0
  4251  001F74  6BAC               	clrf	?_floor& (0+255),b
  4252  001F76  6BAD               	clrf	(?_floor+1)& (0+255),b
  4253  001F78  6BAE               	clrf	(?_floor+2)& (0+255),b
  4254  001F7A  6BAF               	clrf	(?_floor+3)& (0+255),b
  4255  001F7C  D060               	goto	l667
  4256  001F7E                     l4294:
  4257  001F7E  FFFF               	dw	65535	; assembler added errata NOP
  4258                           
  4259                           ; BSR set to: 0
  4260  001F80  51B5               	movf	(floor@expon+1)& (0+255),w,b
  4261  001F82  E103               	bnz	u4610
  4262  001F84  0E1D               	movlw	29
  4263  001F86  5DB4               	subwf	floor@expon& (0+255),w,b
  4264  001F88  E309               	bnc	l4298
  4265  001F8A                     u4610:
  4266                           
  4267                           ; BSR set to: 0
  4268  001F8A  C0AC  F0AC         	movff	floor@x,?_floor
  4269  001F8E  C0AD  F0AD         	movff	floor@x+1,?_floor+1
  4270  001F92  C0AE  F0AE         	movff	floor@x+2,?_floor+2
  4271  001F96  C0AF  F0AF         	movff	floor@x+3,?_floor+3
  4272  001F9A  D051               	goto	l667
  4273  001F9C                     l4298:
  4274                           
  4275                           ; BSR set to: 0
  4276  001F9C  C0AC  F0A2         	movff	floor@x,___fltol@f1
  4277  001FA0  C0AD  F0A3         	movff	floor@x+1,___fltol@f1+1
  4278  001FA4  C0AE  F0A4         	movff	floor@x+2,___fltol@f1+2
  4279  001FA8  C0AF  F0A5         	movff	floor@x+3,___fltol@f1+3
  4280  001FAC  EC54  F012         	call	___fltol	;wreg free
  4281  001FB0  C0A2  F040         	movff	?___fltol,___xxtofl@val
  4282  001FB4  C0A3  F041         	movff	?___fltol+1,___xxtofl@val+1
  4283  001FB8  C0A4  F042         	movff	?___fltol+2,___xxtofl@val+2
  4284  001FBC  C0A5  F043         	movff	?___fltol+3,___xxtofl@val+3
  4285  001FC0  0E01               	movlw	1
  4286  001FC2  EC73  F00E         	call	___xxtofl
  4287  001FC6  C040  F0B0         	movff	?___xxtofl,floor@i
  4288  001FCA  C041  F0B1         	movff	?___xxtofl+1,floor@i+1
  4289  001FCE  C042  F0B2         	movff	?___xxtofl+2,floor@i+2
  4290  001FD2  C043  F0B3         	movff	?___xxtofl+3,floor@i+3
  4291  001FD6  C0AC  F009         	movff	floor@x,___flge@ff1
  4292  001FDA  C0AD  F00A         	movff	floor@x+1,___flge@ff1+1
  4293  001FDE  C0AE  F00B         	movff	floor@x+2,___flge@ff1+2
  4294  001FE2  C0AF  F00C         	movff	floor@x+3,___flge@ff1+3
  4295  001FE6  C0B0  F00D         	movff	floor@i,___flge@ff2
  4296  001FEA  C0B1  F00E         	movff	floor@i+1,___flge@ff2+1
  4297  001FEE  C0B2  F00F         	movff	floor@i+2,___flge@ff2+2
  4298  001FF2  C0B3  F010         	movff	floor@i+3,___flge@ff2+3
  4299  001FF6  EC51  F013         	call	___flge	;wreg free
  4300  001FFA  E219               	bc	l669
  4301  001FFC  C0B0  F04E         	movff	floor@i,___fladd@b
  4302  002000  C0B1  F04F         	movff	floor@i+1,___fladd@b+1
  4303  002004  C0B2  F050         	movff	floor@i+2,___fladd@b+2
  4304  002008  C0B3  F051         	movff	floor@i+3,___fladd@b+3
  4305  00200C  6A52               	clrf	___fladd@a,c
  4306  00200E  6A53               	clrf	___fladd@a+1,c
  4307  002010  0E80               	movlw	128
  4308  002012  6E54               	movwf	___fladd@a+2,c
  4309  002014  0EBF               	movlw	191
  4310  002016  6E55               	movwf	___fladd@a+3,c
  4311  002018  ECD5  F008         	call	___fladd	;wreg free
  4312  00201C  C04E  F0AC         	movff	?___fladd,?_floor
  4313  002020  C04F  F0AD         	movff	?___fladd+1,?_floor+1
  4314  002024  C050  F0AE         	movff	?___fladd+2,?_floor+2
  4315  002028  C051  F0AF         	movff	?___fladd+3,?_floor+3
  4316  00202C  D008               	goto	l667
  4317  00202E                     l669:
  4318  00202E  C0B0  F0AC         	movff	floor@i,?_floor
  4319  002032  C0B1  F0AD         	movff	floor@i+1,?_floor+1
  4320  002036  C0B2  F0AE         	movff	floor@i+2,?_floor+2
  4321  00203A  C0B3  F0AF         	movff	floor@i+3,?_floor+3
  4322  00203E                     l667:
  4323  00203E  FFFF               	dw	65535	; assembler added errata NOP
  4324  002040  0012               	return		;funcret
  4325  002042  FFFF               	dw	65535	; errata NOP
  4326  002044                     __end_of_floor:
  4327                           	opt stack 0
  4328                           tblptru	equ	0xFF8
  4329                           tblptrh	equ	0xFF7
  4330                           tblptrl	equ	0xFF6
  4331                           tablat	equ	0xFF5
  4332                           intcon	equ	0xFF2
  4333                           intcon2	equ	0xFF1
  4334                           postinc0	equ	0xFEE
  4335                           wreg	equ	0xFE8
  4336                           postdec1	equ	0xFE5
  4337                           fsr1l	equ	0xFE1
  4338                           status	equ	0xFD8
  4339                           
  4340 ;; *************** function ___fltol *****************
  4341 ;; Defined at:
  4342 ;;		line 43 in file "/opt/microchip/xc8/v1.45/sources/common/fltol.c"
  4343 ;; Parameters:    Size  Location     Type
  4344 ;;  f1              4   34[BANK0 ] int 
  4345 ;; Auto vars:     Size  Location     Type
  4346 ;;  exp1            1   43[BANK0 ] unsigned char 
  4347 ;;  sign1           1   42[BANK0 ] unsigned char 
  4348 ;; Return value:  Size  Location     Type
  4349 ;;                  4   34[BANK0 ] long 
  4350 ;; Registers used:
  4351 ;;		wreg, status,2, status,0
  4352 ;; Tracked objects:
  4353 ;;		On entry : 0/0
  4354 ;;		On exit  : 3F/0
  4355 ;;		Unchanged: 0/0
  4356 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4357 ;;      Params:         0       4       0       0       0       0       0
  4358 ;;      Locals:         0       2       0       0       0       0       0
  4359 ;;      Temps:          0       4       0       0       0       0       0
  4360 ;;      Totals:         0      10       0       0       0       0       0
  4361 ;;Total ram usage:       10 bytes
  4362 ;; Hardware stack levels used:    1
  4363 ;; Hardware stack levels required when called:    2
  4364 ;; This function calls:
  4365 ;;		Nothing
  4366 ;; This function is called by:
  4367 ;;		_format_double
  4368 ;;		_measure_capacitance
  4369 ;;		_measure_inductance
  4370 ;;		_floor
  4371 ;;		_pow
  4372 ;;		_exp
  4373 ;; This function uses a non-reentrant model
  4374 ;;
  4375                           
  4376                           	psect	text16
  4377  0024A8                     __ptext16:
  4378                           	opt stack 0
  4379  0024A8                     ___fltol:
  4380                           	opt stack 0
  4381  0024A8  FFFF               	dw	65535	; assembler added errata NOP
  4382                           
  4383                           ;incstack = 0
  4384  0024AA  0100               	movlb	0	; () banked
  4385  0024AC  35A4               	rlcf	(___fltol@f1+2)& (0+255),w,b
  4386  0024AE  35A5               	rlcf	(___fltol@f1+3)& (0+255),w,b
  4387  0024B0  6FAB               	movwf	___fltol@exp1& (0+255),b
  4388  0024B2  51AB               	movf	___fltol@exp1& (0+255),w,b
  4389  0024B4  E106               	bnz	l4200
  4390  0024B6                     u4410:
  4391  0024B6  FFFF               	dw	65535	; assembler added errata NOP
  4392                           
  4393                           ; BSR set to: 0
  4394  0024B8  6BA2               	clrf	?___fltol& (0+255),b
  4395  0024BA  6BA3               	clrf	(?___fltol+1)& (0+255),b
  4396  0024BC  6BA4               	clrf	(?___fltol+2)& (0+255),b
  4397  0024BE  6BA5               	clrf	(?___fltol+3)& (0+255),b
  4398  0024C0  D049               	goto	l673
  4399  0024C2                     l4200:
  4400                           
  4401                           ; BSR set to: 0
  4402  0024C2  C0A2  F0A6         	movff	___fltol@f1,??___fltol
  4403  0024C6  C0A3  F0A7         	movff	___fltol@f1+1,??___fltol+1
  4404  0024CA  C0A4  F0A8         	movff	___fltol@f1+2,??___fltol+2
  4405  0024CE  C0A5  F0A9         	movff	___fltol@f1+3,??___fltol+3
  4406  0024D2  0E20               	movlw	32
  4407  0024D4  D006               	goto	u4420
  4408  0024D6                     u4425:
  4409  0024D6  FFFF               	dw	65535	; assembler added errata NOP
  4410  0024D8  90D8               	bcf	status,0,c
  4411  0024DA  33A9               	rrcf	(??___fltol+3)& (0+255),f,b
  4412  0024DC  33A8               	rrcf	(??___fltol+2)& (0+255),f,b
  4413  0024DE  33A7               	rrcf	(??___fltol+1)& (0+255),f,b
  4414  0024E0  33A6               	rrcf	??___fltol& (0+255),f,b
  4415  0024E2                     u4420:
  4416  0024E2  FFFF               	dw	65535	; assembler added errata NOP
  4417  0024E4  2EE8               	decfsz	wreg,f,c
  4418  0024E6  D7F7               	goto	u4425
  4419  0024E8  51A6               	movf	??___fltol& (0+255),w,b
  4420  0024EA  6FAA               	movwf	___fltol@sign1& (0+255),b
  4421                           
  4422                           ; BSR set to: 0
  4423  0024EC  8FA4               	bsf	(___fltol@f1+2)& (0+255),7,b
  4424                           
  4425                           ; BSR set to: 0
  4426  0024EE  6BA5               	clrf	(___fltol@f1+3)& (0+255),b
  4427                           
  4428                           ; BSR set to: 0
  4429  0024F0  0E96               	movlw	150
  4430  0024F2  5FAB               	subwf	___fltol@exp1& (0+255),f,b
  4431                           
  4432                           ; BSR set to: 0
  4433  0024F4  AFAB               	btfss	___fltol@exp1& (0+255),7,b
  4434  0024F6  D00D               	goto	l4218
  4435                           
  4436                           ; BSR set to: 0
  4437  0024F8  51AB               	movf	___fltol@exp1& (0+255),w,b
  4438  0024FA  0A80               	xorlw	128
  4439  0024FC  0F97               	addlw	151
  4440  0024FE  E3DB               	bnc	u4410
  4441  002500                     l4214:
  4442  002500  FFFF               	dw	65535	; assembler added errata NOP
  4443                           
  4444                           ; BSR set to: 0
  4445  002502  90D8               	bcf	status,0,c
  4446  002504  33A5               	rrcf	(___fltol@f1+3)& (0+255),f,b
  4447  002506  33A4               	rrcf	(___fltol@f1+2)& (0+255),f,b
  4448  002508  33A3               	rrcf	(___fltol@f1+1)& (0+255),f,b
  4449  00250A  33A2               	rrcf	___fltol@f1& (0+255),f,b
  4450                           
  4451                           ; BSR set to: 0
  4452  00250C  3FAB               	incfsz	___fltol@exp1& (0+255),f,b
  4453  00250E  D7F8               	goto	l4214
  4454  002510  D00E               	goto	u4460
  4455  002512                     l4218:
  4456  002512  FFFF               	dw	65535	; assembler added errata NOP
  4457                           
  4458                           ; BSR set to: 0
  4459  002514  0E1F               	movlw	31
  4460  002516  65AB               	cpfsgt	___fltol@exp1& (0+255),b
  4461  002518  D007               	goto	l4224
  4462  00251A  D7CD               	goto	u4410
  4463  00251C                     l4222:
  4464                           
  4465                           ; BSR set to: 0
  4466  00251C  90D8               	bcf	status,0,c
  4467  00251E  37A2               	rlcf	___fltol@f1& (0+255),f,b
  4468  002520  37A3               	rlcf	(___fltol@f1+1)& (0+255),f,b
  4469  002522  37A4               	rlcf	(___fltol@f1+2)& (0+255),f,b
  4470  002524  37A5               	rlcf	(___fltol@f1+3)& (0+255),f,b
  4471  002526  07AB               	decf	___fltol@exp1& (0+255),f,b
  4472  002528                     l4224:
  4473  002528  FFFF               	dw	65535	; assembler added errata NOP
  4474                           
  4475                           ; BSR set to: 0
  4476  00252A  51AB               	movf	___fltol@exp1& (0+255),w,b
  4477  00252C  E1F7               	bnz	l4222
  4478  00252E                     u4460:
  4479  00252E  FFFF               	dw	65535	; assembler added errata NOP
  4480                           
  4481                           ; BSR set to: 0
  4482  002530  51AA               	movf	___fltol@sign1& (0+255),w,b
  4483  002532  E008               	bz	l4230
  4484                           
  4485                           ; BSR set to: 0
  4486  002534  1FA5               	comf	(___fltol@f1+3)& (0+255),f,b
  4487  002536  1FA4               	comf	(___fltol@f1+2)& (0+255),f,b
  4488  002538  1FA3               	comf	(___fltol@f1+1)& (0+255),f,b
  4489  00253A  6DA2               	negf	___fltol@f1& (0+255),b
  4490  00253C  0E00               	movlw	0
  4491  00253E  23A3               	addwfc	(___fltol@f1+1)& (0+255),f,b
  4492  002540  23A4               	addwfc	(___fltol@f1+2)& (0+255),f,b
  4493  002542  23A5               	addwfc	(___fltol@f1+3)& (0+255),f,b
  4494  002544                     l4230:
  4495                           
  4496                           ; BSR set to: 0
  4497  002544  C0A2  F0A2         	movff	___fltol@f1,?___fltol
  4498  002548  C0A3  F0A3         	movff	___fltol@f1+1,?___fltol+1
  4499  00254C  C0A4  F0A4         	movff	___fltol@f1+2,?___fltol+2
  4500  002550  C0A5  F0A5         	movff	___fltol@f1+3,?___fltol+3
  4501  002554                     l673:
  4502  002554  FFFF               	dw	65535	; assembler added errata NOP
  4503                           
  4504                           ; BSR set to: 0
  4505  002556  0012               	return		;funcret
  4506  002558  FFFF               	dw	65535	; errata NOP
  4507  00255A                     __end_of___fltol:
  4508                           	opt stack 0
  4509                           tblptru	equ	0xFF8
  4510                           tblptrh	equ	0xFF7
  4511                           tblptrl	equ	0xFF6
  4512                           tablat	equ	0xFF5
  4513                           intcon	equ	0xFF2
  4514                           intcon2	equ	0xFF1
  4515                           postinc0	equ	0xFEE
  4516                           wreg	equ	0xFE8
  4517                           postdec1	equ	0xFE5
  4518                           fsr1l	equ	0xFE1
  4519                           status	equ	0xFD8
  4520                           
  4521 ;; *************** function ___flge *****************
  4522 ;; Defined at:
  4523 ;;		line 4 in file "/opt/microchip/xc8/v1.45/sources/common/flge.c"
  4524 ;; Parameters:    Size  Location     Type
  4525 ;;  ff1             4    8[COMRAM] long 
  4526 ;;  ff2             4   12[COMRAM] long 
  4527 ;; Auto vars:     Size  Location     Type
  4528 ;;		None
  4529 ;; Return value:  Size  Location     Type
  4530 ;;		None               void
  4531 ;; Registers used:
  4532 ;;		wreg, status,2, status,0
  4533 ;; Tracked objects:
  4534 ;;		On entry : 0/0
  4535 ;;		On exit  : 0/0
  4536 ;;		Unchanged: 0/0
  4537 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4538 ;;      Params:         8       0       0       0       0       0       0
  4539 ;;      Locals:         0       0       0       0       0       0       0
  4540 ;;      Temps:          4       0       0       0       0       0       0
  4541 ;;      Totals:        12       0       0       0       0       0       0
  4542 ;;Total ram usage:       12 bytes
  4543 ;; Hardware stack levels used:    1
  4544 ;; Hardware stack levels required when called:    2
  4545 ;; This function calls:
  4546 ;;		Nothing
  4547 ;; This function is called by:
  4548 ;;		_format_double
  4549 ;;		_measure_capacitance
  4550 ;;		_measure_inductance
  4551 ;;		_floor
  4552 ;;		_pow
  4553 ;;		_exp
  4554 ;; This function uses a non-reentrant model
  4555 ;;
  4556                           
  4557                           	psect	text17
  4558  0026A2                     __ptext17:
  4559                           	opt stack 0
  4560  0026A2                     ___flge:
  4561                           	opt stack 0
  4562  0026A2  FFFF               	dw	65535	; assembler added errata NOP
  4563                           
  4564                           ; BSR set to: 0
  4565                           ;incstack = 0
  4566  0026A4  6A11               	clrf	??___flge& (0+255),c
  4567  0026A6  6A12               	clrf	(??___flge+1)& (0+255),c
  4568  0026A8  0E80               	movlw	128
  4569  0026AA  140B               	andwf	___flge@ff1+2,w,c
  4570  0026AC  6E13               	movwf	(??___flge+2)& (0+255),c
  4571  0026AE  0E7F               	movlw	127
  4572  0026B0  140C               	andwf	___flge@ff1+3,w,c
  4573  0026B2  6E14               	movwf	(??___flge+3)& (0+255),c
  4574  0026B4  5011               	movf	??___flge,w,c
  4575  0026B6  1012               	iorwf	??___flge+1,w,c
  4576  0026B8  1013               	iorwf	??___flge+2,w,c
  4577  0026BA  1014               	iorwf	??___flge+3,w,c
  4578  0026BC  E104               	bnz	l4160
  4579  0026BE  6A09               	clrf	___flge@ff1,c
  4580  0026C0  6A0A               	clrf	___flge@ff1+1,c
  4581  0026C2  6A0B               	clrf	___flge@ff1+2,c
  4582  0026C4  6A0C               	clrf	___flge@ff1+3,c
  4583  0026C6                     l4160:
  4584  0026C6  6A11               	clrf	??___flge& (0+255),c
  4585  0026C8  6A12               	clrf	(??___flge+1)& (0+255),c
  4586  0026CA  0E80               	movlw	128
  4587  0026CC  140F               	andwf	___flge@ff2+2,w,c
  4588  0026CE  6E13               	movwf	(??___flge+2)& (0+255),c
  4589  0026D0  0E7F               	movlw	127
  4590  0026D2  1410               	andwf	___flge@ff2+3,w,c
  4591  0026D4  6E14               	movwf	(??___flge+3)& (0+255),c
  4592  0026D6  5011               	movf	??___flge,w,c
  4593  0026D8  1012               	iorwf	??___flge+1,w,c
  4594  0026DA  1013               	iorwf	??___flge+2,w,c
  4595  0026DC  1014               	iorwf	??___flge+3,w,c
  4596  0026DE  E104               	bnz	l634
  4597  0026E0  6A0D               	clrf	___flge@ff2,c
  4598  0026E2  6A0E               	clrf	___flge@ff2+1,c
  4599  0026E4  6A0F               	clrf	___flge@ff2+2,c
  4600  0026E6  6A10               	clrf	___flge@ff2+3,c
  4601  0026E8                     l634:
  4602  0026E8  AE0C               	btfss	___flge@ff1+3,7,c
  4603  0026EA  D009               	goto	l4166
  4604  0026EC  6C09               	negf	___flge@ff1,c
  4605  0026EE  1E0A               	comf	___flge@ff1+1,f,c
  4606  0026F0  B0D8               	btfsc	status,0,c
  4607  0026F2  2A0A               	incf	___flge@ff1+1,f,c
  4608  0026F4  1E0B               	comf	___flge@ff1+2,f,c
  4609  0026F6  B0D8               	btfsc	status,0,c
  4610  0026F8  2A0B               	incf	___flge@ff1+2,f,c
  4611  0026FA  0E80               	movlw	128
  4612  0026FC  560C               	subfwb	___flge@ff1+3,f,c
  4613  0026FE                     l4166:
  4614  0026FE  FFFF               	dw	65535	; assembler added errata NOP
  4615  002700  AE10               	btfss	___flge@ff2+3,7,c
  4616  002702  D009               	goto	l636
  4617  002704  6C0D               	negf	___flge@ff2,c
  4618  002706  1E0E               	comf	___flge@ff2+1,f,c
  4619  002708  B0D8               	btfsc	status,0,c
  4620  00270A  2A0E               	incf	___flge@ff2+1,f,c
  4621  00270C  1E0F               	comf	___flge@ff2+2,f,c
  4622  00270E  B0D8               	btfsc	status,0,c
  4623  002710  2A0F               	incf	___flge@ff2+2,f,c
  4624  002712  0E80               	movlw	128
  4625  002714  5610               	subfwb	___flge@ff2+3,f,c
  4626  002716                     l636:
  4627  002716  FFFF               	dw	65535	; assembler added errata NOP
  4628  002718  0E80               	movlw	128
  4629  00271A  1A0C               	xorwf	___flge@ff1+3,f,c
  4630  00271C  1A10               	xorwf	___flge@ff2+3,f,c
  4631  00271E  500D               	movf	___flge@ff2,w,c
  4632  002720  5C09               	subwf	___flge@ff1,w,c
  4633  002722  500E               	movf	___flge@ff2+1,w,c
  4634  002724  580A               	subwfb	___flge@ff1+1,w,c
  4635  002726  500F               	movf	___flge@ff2+2,w,c
  4636  002728  580B               	subwfb	___flge@ff1+2,w,c
  4637  00272A  5010               	movf	___flge@ff2+3,w,c
  4638  00272C  580C               	subwfb	___flge@ff1+3,w,c
  4639  00272E  E202               	bc	l4172
  4640  002730  90D8               	bcf	status,0,c
  4641  002732  D001               	goto	l637
  4642  002734                     l4172:
  4643  002734  80D8               	bsf	status,0,c
  4644  002736                     l637:
  4645  002736  FFFF               	dw	65535	; assembler added errata NOP
  4646  002738  0012               	return		;funcret
  4647  00273A  FFFF               	dw	65535	; errata NOP
  4648  00273C                     __end_of___flge:
  4649                           	opt stack 0
  4650                           tblptru	equ	0xFF8
  4651                           tblptrh	equ	0xFF7
  4652                           tblptrl	equ	0xFF6
  4653                           tablat	equ	0xFF5
  4654                           intcon	equ	0xFF2
  4655                           intcon2	equ	0xFF1
  4656                           postinc0	equ	0xFEE
  4657                           wreg	equ	0xFE8
  4658                           postdec1	equ	0xFE5
  4659                           fsr1l	equ	0xFE1
  4660                           status	equ	0xFD8
  4661                           
  4662 ;; *************** function ___flsub *****************
  4663 ;; Defined at:
  4664 ;;		line 245 in file "/opt/microchip/xc8/v1.45/sources/common/sprcadd.c"
  4665 ;; Parameters:    Size  Location     Type
  4666 ;;  b               4   13[BANK0 ] long 
  4667 ;;  a               4   17[BANK0 ] long 
  4668 ;; Auto vars:     Size  Location     Type
  4669 ;;		None
  4670 ;; Return value:  Size  Location     Type
  4671 ;;                  4   13[BANK0 ] long 
  4672 ;; Registers used:
  4673 ;;		wreg, status,2, status,0, cstack
  4674 ;; Tracked objects:
  4675 ;;		On entry : 0/0
  4676 ;;		On exit  : 0/0
  4677 ;;		Unchanged: 0/0
  4678 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4679 ;;      Params:         0       8       0       0       0       0       0
  4680 ;;      Locals:         0       0       0       0       0       0       0
  4681 ;;      Temps:          0       0       0       0       0       0       0
  4682 ;;      Totals:         0       8       0       0       0       0       0
  4683 ;;Total ram usage:        8 bytes
  4684 ;; Hardware stack levels used:    1
  4685 ;; Hardware stack levels required when called:    3
  4686 ;; This function calls:
  4687 ;;		___fladd
  4688 ;; This function is called by:
  4689 ;;		_format_double
  4690 ;;		_measure_capacitance
  4691 ;;		_measure_inductance
  4692 ;;		_exp
  4693 ;; This function uses a non-reentrant model
  4694 ;;
  4695                           
  4696                           	psect	text18
  4697  002A74                     __ptext18:
  4698                           	opt stack 0
  4699  002A74                     ___flsub:
  4700                           	opt stack 0
  4701  002A74  FFFF               	dw	65535	; assembler added errata NOP
  4702                           
  4703                           ;incstack = 0
  4704  002A76  0100               	movlb	0	; () banked
  4705  002A78  0E80               	movlw	128
  4706  002A7A  1B94               	xorwf	(___flsub@a+3)& (0+255),f,b
  4707                           
  4708                           ; BSR set to: 0
  4709  002A7C  C08D  F04E         	movff	___flsub@b,___fladd@b
  4710  002A80  C08E  F04F         	movff	___flsub@b+1,___fladd@b+1
  4711  002A84  C08F  F050         	movff	___flsub@b+2,___fladd@b+2
  4712  002A88  C090  F051         	movff	___flsub@b+3,___fladd@b+3
  4713  002A8C  C091  F052         	movff	___flsub@a,___fladd@a
  4714  002A90  C092  F053         	movff	___flsub@a+1,___fladd@a+1
  4715  002A94  C093  F054         	movff	___flsub@a+2,___fladd@a+2
  4716  002A98  C094  F055         	movff	___flsub@a+3,___fladd@a+3
  4717  002A9C  ECD5  F008         	call	___fladd	;wreg free
  4718  002AA0  C04E  F08D         	movff	?___fladd,?___flsub
  4719  002AA4  C04F  F08E         	movff	?___fladd+1,?___flsub+1
  4720  002AA8  C050  F08F         	movff	?___fladd+2,?___flsub+2
  4721  002AAC  C051  F090         	movff	?___fladd+3,?___flsub+3
  4722  002AB0  0012               	return		;funcret
  4723  002AB2  FFFF               	dw	65535	; errata NOP
  4724  002AB4                     __end_of___flsub:
  4725                           	opt stack 0
  4726                           tblptru	equ	0xFF8
  4727                           tblptrh	equ	0xFF7
  4728                           tblptrl	equ	0xFF6
  4729                           tablat	equ	0xFF5
  4730                           intcon	equ	0xFF2
  4731                           intcon2	equ	0xFF1
  4732                           postinc0	equ	0xFEE
  4733                           wreg	equ	0xFE8
  4734                           postdec1	equ	0xFE5
  4735                           fsr1l	equ	0xFE1
  4736                           status	equ	0xFD8
  4737                           
  4738 ;; *************** function ___flneg *****************
  4739 ;; Defined at:
  4740 ;;		line 15 in file "/opt/microchip/xc8/v1.45/sources/common/flneg.c"
  4741 ;; Parameters:    Size  Location     Type
  4742 ;;  f1              4    8[COMRAM] long 
  4743 ;; Auto vars:     Size  Location     Type
  4744 ;;		None
  4745 ;; Return value:  Size  Location     Type
  4746 ;;                  4    8[COMRAM] long 
  4747 ;; Registers used:
  4748 ;;		wreg, status,2, status,0
  4749 ;; Tracked objects:
  4750 ;;		On entry : 3F/0
  4751 ;;		On exit  : 3F/0
  4752 ;;		Unchanged: 3F/0
  4753 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4754 ;;      Params:         4       0       0       0       0       0       0
  4755 ;;      Locals:         0       0       0       0       0       0       0
  4756 ;;      Temps:          0       0       0       0       0       0       0
  4757 ;;      Totals:         4       0       0       0       0       0       0
  4758 ;;Total ram usage:        4 bytes
  4759 ;; Hardware stack levels used:    1
  4760 ;; Hardware stack levels required when called:    2
  4761 ;; This function calls:
  4762 ;;		Nothing
  4763 ;; This function is called by:
  4764 ;;		_pow
  4765 ;;		_exp
  4766 ;; This function uses a non-reentrant model
  4767 ;;
  4768                           
  4769                           	psect	text19
  4770  002C5A                     __ptext19:
  4771                           	opt stack 0
  4772  002C5A                     ___flneg:
  4773                           	opt stack 0
  4774  002C5A  FFFF               	dw	65535	; assembler added errata NOP
  4775                           
  4776                           ; BSR set to: 0
  4777                           
  4778                           ;incstack = 0
  4779  002C5C  5009               	movf	___flneg@f1,w,c
  4780  002C5E  100A               	iorwf	___flneg@f1+1,w,c
  4781  002C60  100B               	iorwf	___flneg@f1+2,w,c
  4782  002C62  100C               	iorwf	___flneg@f1+3,w,c
  4783  002C64  E002               	bz	l4434
  4784                           
  4785                           ; BSR set to: 0
  4786  002C66  0E80               	movlw	128
  4787  002C68  1A0C               	xorwf	___flneg@f1+3,f,c
  4788  002C6A                     l4434:
  4789                           
  4790                           ; BSR set to: 0
  4791  002C6A  C009  F009         	movff	___flneg@f1,?___flneg
  4792  002C6E  C00A  F00A         	movff	___flneg@f1+1,?___flneg+1
  4793  002C72  C00B  F00B         	movff	___flneg@f1+2,?___flneg+2
  4794  002C76  C00C  F00C         	movff	___flneg@f1+3,?___flneg+3
  4795                           
  4796                           ; BSR set to: 0
  4797  002C7A  0012               	return		;funcret
  4798  002C7C  FFFF               	dw	65535	; errata NOP
  4799  002C7E                     __end_of___flneg:
  4800                           	opt stack 0
  4801                           tblptru	equ	0xFF8
  4802                           tblptrh	equ	0xFF7
  4803                           tblptrl	equ	0xFF6
  4804                           tablat	equ	0xFF5
  4805                           intcon	equ	0xFF2
  4806                           intcon2	equ	0xFF1
  4807                           postinc0	equ	0xFEE
  4808                           wreg	equ	0xFE8
  4809                           postdec1	equ	0xFE5
  4810                           fsr1l	equ	0xFE1
  4811                           status	equ	0xFD8
  4812                           
  4813 ;; *************** function ___fldiv *****************
  4814 ;; Defined at:
  4815 ;;		line 11 in file "/opt/microchip/xc8/v1.45/sources/common/sprcdiv.c"
  4816 ;; Parameters:    Size  Location     Type
  4817 ;;  b               4    8[COMRAM] long 
  4818 ;;  a               4   12[COMRAM] long 
  4819 ;; Auto vars:     Size  Location     Type
  4820 ;;  grs             4   27[COMRAM] unsigned long 
  4821 ;;  rem             4   21[COMRAM] unsigned long 
  4822 ;;  new_exp         2   25[COMRAM] int 
  4823 ;;  aexp            1   32[COMRAM] unsigned char 
  4824 ;;  bexp            1   31[COMRAM] unsigned char 
  4825 ;;  sign            1   20[COMRAM] unsigned char 
  4826 ;; Return value:  Size  Location     Type
  4827 ;;                  4    8[COMRAM] unsigned char 
  4828 ;; Registers used:
  4829 ;;		wreg, status,2, status,0
  4830 ;; Tracked objects:
  4831 ;;		On entry : 0/0
  4832 ;;		On exit  : 0/0
  4833 ;;		Unchanged: 0/0
  4834 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4835 ;;      Params:         8       0       0       0       0       0       0
  4836 ;;      Locals:        13       0       0       0       0       0       0
  4837 ;;      Temps:          4       0       0       0       0       0       0
  4838 ;;      Totals:        25       0       0       0       0       0       0
  4839 ;;Total ram usage:       25 bytes
  4840 ;; Hardware stack levels used:    1
  4841 ;; Hardware stack levels required when called:    2
  4842 ;; This function calls:
  4843 ;;		Nothing
  4844 ;; This function is called by:
  4845 ;;		_format_double
  4846 ;;		_measure_capacitance
  4847 ;;		_measure_inductance
  4848 ;;		_exp
  4849 ;; This function uses a non-reentrant model
  4850 ;;
  4851                           
  4852                           	psect	text20
  4853  001670                     __ptext20:
  4854                           	opt stack 0
  4855  001670                     ___fldiv:
  4856                           	opt stack 0
  4857  001670  FFFF               	dw	65535	; assembler added errata NOP
  4858                           
  4859                           ; BSR set to: 0
  4860                           ;incstack = 0
  4861  001672  500C               	movf	___fldiv@b+3,w,c
  4862  001674  0B80               	andlw	128
  4863  001676  6E15               	movwf	___fldiv@sign,c
  4864  001678  500C               	movf	___fldiv@b+3,w,c
  4865  00167A  240C               	addwf	___fldiv@b+3,w,c
  4866  00167C  6E20               	movwf	___fldiv@bexp,c
  4867  00167E  BE0B               	btfsc	___fldiv@b+2,7,c
  4868  001680  8020               	bsf	___fldiv@bexp,0,c
  4869  001682  5020               	movf	___fldiv@bexp,w,c
  4870  001684  E008               	bz	l975
  4871  001686  2820               	incf	___fldiv@bexp,w,c
  4872  001688  E104               	bnz	l4316
  4873  00168A  6A09               	clrf	___fldiv@b,c
  4874  00168C  6A0A               	clrf	___fldiv@b+1,c
  4875  00168E  6A0B               	clrf	___fldiv@b+2,c
  4876  001690  6A0C               	clrf	___fldiv@b+3,c
  4877  001692                     l4316:
  4878  001692  8E0B               	bsf	___fldiv@b+2,7,c
  4879  001694  D003               	goto	L4
  4880  001696                     l975:
  4881  001696  6A09               	clrf	___fldiv@b,c
  4882  001698  6A0A               	clrf	___fldiv@b+1,c
  4883  00169A  6A0B               	clrf	___fldiv@b+2,c
  4884  00169C                     L4:
  4885  00169C  FFFF               	dw	65535	; assembler added errata NOP
  4886  00169E  6A0C               	clrf	___fldiv@b+3,c
  4887  0016A0  5010               	movf	___fldiv@a+3,w,c
  4888  0016A2  0B80               	andlw	128
  4889  0016A4  1A15               	xorwf	___fldiv@sign,f,c
  4890  0016A6  5010               	movf	___fldiv@a+3,w,c
  4891  0016A8  2410               	addwf	___fldiv@a+3,w,c
  4892  0016AA  6E21               	movwf	___fldiv@aexp,c
  4893  0016AC  BE0F               	btfsc	___fldiv@a+2,7,c
  4894  0016AE  8021               	bsf	___fldiv@aexp,0,c
  4895  0016B0  5021               	movf	___fldiv@aexp,w,c
  4896  0016B2  E008               	bz	l979
  4897  0016B4  2821               	incf	___fldiv@aexp,w,c
  4898  0016B6  E104               	bnz	l4332
  4899  0016B8  6A0D               	clrf	___fldiv@a,c
  4900  0016BA  6A0E               	clrf	___fldiv@a+1,c
  4901  0016BC  6A0F               	clrf	___fldiv@a+2,c
  4902  0016BE  6A10               	clrf	___fldiv@a+3,c
  4903  0016C0                     l4332:
  4904  0016C0  8E0F               	bsf	___fldiv@a+2,7,c
  4905  0016C2  D003               	goto	L5
  4906  0016C4                     l979:
  4907  0016C4  6A0D               	clrf	___fldiv@a,c
  4908  0016C6  6A0E               	clrf	___fldiv@a+1,c
  4909  0016C8  6A0F               	clrf	___fldiv@a+2,c
  4910  0016CA                     L5:
  4911  0016CA  FFFF               	dw	65535	; assembler added errata NOP
  4912  0016CC  6A10               	clrf	___fldiv@a+3,c
  4913  0016CE  500D               	movf	___fldiv@a,w,c
  4914  0016D0  100E               	iorwf	___fldiv@a+1,w,c
  4915  0016D2  100F               	iorwf	___fldiv@a+2,w,c
  4916  0016D4  1010               	iorwf	___fldiv@a+3,w,c
  4917  0016D6  E112               	bnz	l4346
  4918  0016D8  6A09               	clrf	___fldiv@b,c
  4919  0016DA  6A0A               	clrf	___fldiv@b+1,c
  4920  0016DC  6A0B               	clrf	___fldiv@b+2,c
  4921  0016DE  6A0C               	clrf	___fldiv@b+3,c
  4922  0016E0  0E80               	movlw	128
  4923  0016E2  120B               	iorwf	___fldiv@b+2,f,c
  4924  0016E4  0E7F               	movlw	127
  4925  0016E6  FFFF               	dw	65535	; assembler added errata NOP
  4926  0016E8  120C               	iorwf	___fldiv@b+3,f,c
  4927  0016EA  C009  F009         	movff	___fldiv@b,?___fldiv
  4928  0016EE  C00A  F00A         	movff	___fldiv@b+1,?___fldiv+1
  4929  0016F2  C00B  F00B         	movff	___fldiv@b+2,?___fldiv+2
  4930  0016F6  C00C  F00C         	movff	___fldiv@b+3,?___fldiv+3
  4931  0016FA  D0BD               	goto	l983
  4932  0016FC                     l4346:
  4933  0016FC  5020               	movf	___fldiv@bexp,w,c
  4934  0016FE  E105               	bnz	l4350
  4935  001700  6A09               	clrf	?___fldiv,c
  4936  001702  6A0A               	clrf	?___fldiv+1,c
  4937  001704  6A0B               	clrf	?___fldiv+2,c
  4938  001706  6A0C               	clrf	?___fldiv+3,c
  4939  001708  D0B6               	goto	l983
  4940  00170A                     l4350:
  4941  00170A  5021               	movf	___fldiv@aexp,w,c
  4942  00170C  C020  F011         	movff	___fldiv@bexp,??___fldiv
  4943  001710  6A12               	clrf	(??___fldiv+1)& (0+255),c
  4944  001712  5E11               	subwf	??___fldiv,f,c
  4945  001714  0E00               	movlw	0
  4946  001716  5A12               	subwfb	??___fldiv+1,f,c
  4947  001718  0E7F               	movlw	127
  4948  00171A  2411               	addwf	??___fldiv,w,c
  4949  00171C  6E1A               	movwf	___fldiv@new_exp,c
  4950  00171E  0E00               	movlw	0
  4951  001720  2012               	addwfc	??___fldiv+1,w,c
  4952  001722  6E1B               	movwf	___fldiv@new_exp+1,c
  4953  001724  C009  F016         	movff	___fldiv@b,___fldiv@rem
  4954  001728  C00A  F017         	movff	___fldiv@b+1,___fldiv@rem+1
  4955  00172C  C00B  F018         	movff	___fldiv@b+2,___fldiv@rem+2
  4956  001730  C00C  F019         	movff	___fldiv@b+3,___fldiv@rem+3
  4957  001734  6A09               	clrf	___fldiv@b,c
  4958  001736  6A0A               	clrf	___fldiv@b+1,c
  4959  001738  6A0B               	clrf	___fldiv@b+2,c
  4960  00173A  6A0C               	clrf	___fldiv@b+3,c
  4961  00173C  6A1C               	clrf	___fldiv@grs,c
  4962  00173E  6A1D               	clrf	___fldiv@grs+1,c
  4963  001740  6A1E               	clrf	___fldiv@grs+2,c
  4964  001742  6A1F               	clrf	___fldiv@grs+3,c
  4965  001744  6A21               	clrf	___fldiv@aexp,c
  4966  001746  D027               	goto	l985
  4967  001748                     l4360:
  4968  001748  FFFF               	dw	65535	; assembler added errata NOP
  4969  00174A  5021               	movf	___fldiv@aexp,w,c
  4970  00174C  E011               	bz	l4368
  4971  00174E  90D8               	bcf	status,0,c
  4972  001750  3616               	rlcf	___fldiv@rem,f,c
  4973  001752  3617               	rlcf	___fldiv@rem+1,f,c
  4974  001754  3618               	rlcf	___fldiv@rem+2,f,c
  4975  001756  3619               	rlcf	___fldiv@rem+3,f,c
  4976  001758  90D8               	bcf	status,0,c
  4977  00175A  3609               	rlcf	___fldiv@b,f,c
  4978  00175C  360A               	rlcf	___fldiv@b+1,f,c
  4979  00175E  360B               	rlcf	___fldiv@b+2,f,c
  4980  001760  360C               	rlcf	___fldiv@b+3,f,c
  4981  001762  BE1F               	btfsc	___fldiv@grs+3,7,c
  4982  001764  8009               	bsf	___fldiv@b,0,c
  4983  001766  90D8               	bcf	status,0,c
  4984  001768  361C               	rlcf	___fldiv@grs,f,c
  4985  00176A  361D               	rlcf	___fldiv@grs+1,f,c
  4986  00176C  361E               	rlcf	___fldiv@grs+2,f,c
  4987  00176E  361F               	rlcf	___fldiv@grs+3,f,c
  4988  001770                     l4368:
  4989  001770  500D               	movf	___fldiv@a,w,c
  4990  001772  5C16               	subwf	___fldiv@rem,w,c
  4991  001774  500E               	movf	___fldiv@a+1,w,c
  4992  001776  5817               	subwfb	___fldiv@rem+1,w,c
  4993  001778  500F               	movf	___fldiv@a+2,w,c
  4994  00177A  5818               	subwfb	___fldiv@rem+2,w,c
  4995  00177C  5010               	movf	___fldiv@a+3,w,c
  4996  00177E  5819               	subwfb	___fldiv@rem+3,w,c
  4997  001780  E309               	bnc	l4374
  4998  001782  8C1F               	bsf	___fldiv@grs+3,6,c
  4999  001784  500D               	movf	___fldiv@a,w,c
  5000  001786  5E16               	subwf	___fldiv@rem,f,c
  5001  001788  500E               	movf	___fldiv@a+1,w,c
  5002  00178A  5A17               	subwfb	___fldiv@rem+1,f,c
  5003  00178C  500F               	movf	___fldiv@a+2,w,c
  5004  00178E  5A18               	subwfb	___fldiv@rem+2,f,c
  5005  001790  5010               	movf	___fldiv@a+3,w,c
  5006  001792  5A19               	subwfb	___fldiv@rem+3,f,c
  5007  001794                     l4374:
  5008  001794  2A21               	incf	___fldiv@aexp,f,c
  5009  001796                     l985:
  5010  001796  FFFF               	dw	65535	; assembler added errata NOP
  5011  001798  0E19               	movlw	25
  5012  00179A  6421               	cpfsgt	___fldiv@aexp,c
  5013  00179C  D7D5               	goto	l4360
  5014  00179E  5016               	movf	___fldiv@rem,w,c
  5015  0017A0  1017               	iorwf	___fldiv@rem+1,w,c
  5016  0017A2  1018               	iorwf	___fldiv@rem+2,w,c
  5017  0017A4  1019               	iorwf	___fldiv@rem+3,w,c
  5018  0017A6  E012               	bz	l4386
  5019  0017A8  801C               	bsf	___fldiv@grs,0,c
  5020  0017AA  D010               	goto	l4386
  5021  0017AC                     l4380:
  5022  0017AC  FFFF               	dw	65535	; assembler added errata NOP
  5023  0017AE  90D8               	bcf	status,0,c
  5024  0017B0  3609               	rlcf	___fldiv@b,f,c
  5025  0017B2  360A               	rlcf	___fldiv@b+1,f,c
  5026  0017B4  360B               	rlcf	___fldiv@b+2,f,c
  5027  0017B6  360C               	rlcf	___fldiv@b+3,f,c
  5028  0017B8  BE1F               	btfsc	___fldiv@grs+3,7,c
  5029  0017BA  8009               	bsf	___fldiv@b,0,c
  5030  0017BC  90D8               	bcf	status,0,c
  5031  0017BE  361C               	rlcf	___fldiv@grs,f,c
  5032  0017C0  361D               	rlcf	___fldiv@grs+1,f,c
  5033  0017C2  361E               	rlcf	___fldiv@grs+2,f,c
  5034  0017C4  361F               	rlcf	___fldiv@grs+3,f,c
  5035  0017C6  061A               	decf	___fldiv@new_exp,f,c
  5036  0017C8  A0D8               	btfss	status,0,c
  5037  0017CA  061B               	decf	___fldiv@new_exp+1,f,c
  5038  0017CC                     l4386:
  5039  0017CC  FFFF               	dw	65535	; assembler added errata NOP
  5040  0017CE  AE0B               	btfss	___fldiv@b+2,7,c
  5041  0017D0  D7ED               	goto	l4380
  5042  0017D2  6A21               	clrf	___fldiv@aexp,c
  5043  0017D4  AE1F               	btfss	___fldiv@grs+3,7,c
  5044  0017D6  D014               	goto	l996
  5045  0017D8  501C               	movf	___fldiv@grs,w,c
  5046  0017DA  6E11               	movwf	??___fldiv& (0+255),c
  5047  0017DC  501D               	movf	___fldiv@grs+1,w,c
  5048  0017DE  6E12               	movwf	(??___fldiv+1)& (0+255),c
  5049  0017E0  501E               	movf	___fldiv@grs+2,w,c
  5050  0017E2  6E13               	movwf	(??___fldiv+2)& (0+255),c
  5051  0017E4  0E7F               	movlw	127
  5052  0017E6  141F               	andwf	___fldiv@grs+3,w,c
  5053  0017E8  6E14               	movwf	(??___fldiv+3)& (0+255),c
  5054  0017EA  5011               	movf	??___fldiv,w,c
  5055  0017EC  1012               	iorwf	??___fldiv+1,w,c
  5056  0017EE  1013               	iorwf	??___fldiv+2,w,c
  5057  0017F0  1014               	iorwf	??___fldiv+3,w,c
  5058  0017F2  E004               	bz	l997
  5059  0017F4                     u4790:
  5060  0017F4  FFFF               	dw	65535	; assembler added errata NOP
  5061  0017F6  0E01               	movlw	1
  5062  0017F8  6E21               	movwf	___fldiv@aexp,c
  5063  0017FA  D002               	goto	l996
  5064  0017FC                     l997:
  5065  0017FC  B009               	btfsc	___fldiv@b,0,c
  5066  0017FE  D7FA               	goto	u4790
  5067  001800                     l996:
  5068  001800  FFFF               	dw	65535	; assembler added errata NOP
  5069  001802  5021               	movf	___fldiv@aexp,w,c
  5070  001804  E00E               	bz	l4402
  5071  001806  2A09               	incf	___fldiv@b,f,c
  5072  001808  0E00               	movlw	0
  5073  00180A  220A               	addwfc	___fldiv@b+1,f,c
  5074  00180C  220B               	addwfc	___fldiv@b+2,f,c
  5075  00180E  220C               	addwfc	___fldiv@b+3,f,c
  5076  001810  A00C               	btfss	___fldiv@b+3,0,c
  5077  001812  D007               	goto	l4402
  5078  001814  340C               	rlcf	___fldiv@b+3,w,c
  5079  001816  320C               	rrcf	___fldiv@b+3,f,c
  5080  001818  320B               	rrcf	___fldiv@b+2,f,c
  5081  00181A  320A               	rrcf	___fldiv@b+1,f,c
  5082  00181C  3209               	rrcf	___fldiv@b,f,c
  5083  00181E  4A1A               	infsnz	___fldiv@new_exp,f,c
  5084  001820  2A1B               	incf	___fldiv@new_exp+1,f,c
  5085  001822                     l4402:
  5086  001822  FFFF               	dw	65535	; assembler added errata NOP
  5087  001824  BE1B               	btfsc	___fldiv@new_exp+1,7,c
  5088  001826  D00A               	goto	l4408
  5089  001828  501B               	movf	___fldiv@new_exp+1,w,c
  5090  00182A  E102               	bnz	u4830
  5091  00182C  281A               	incf	___fldiv@new_exp,w,c
  5092  00182E  E306               	bnc	l4408
  5093  001830                     u4830:
  5094  001830  6A1B               	clrf	___fldiv@new_exp+1,c
  5095  001832  681A               	setf	___fldiv@new_exp,c
  5096  001834  6A09               	clrf	___fldiv@b,c
  5097  001836  6A0A               	clrf	___fldiv@b+1,c
  5098  001838  6A0B               	clrf	___fldiv@b+2,c
  5099  00183A  6A0C               	clrf	___fldiv@b+3,c
  5100  00183C                     l4408:
  5101  00183C  FFFF               	dw	65535	; assembler added errata NOP
  5102  00183E  BE1B               	btfsc	___fldiv@new_exp+1,7,c
  5103  001840  D004               	goto	u4840
  5104  001842  501B               	movf	___fldiv@new_exp+1,w,c
  5105  001844  E10A               	bnz	l1003
  5106  001846  041A               	decf	___fldiv@new_exp,w,c
  5107  001848  E208               	bc	l1003
  5108  00184A                     u4840:
  5109  00184A  FFFF               	dw	65535	; assembler added errata NOP
  5110  00184C  6A1A               	clrf	___fldiv@new_exp,c
  5111  00184E  6A1B               	clrf	___fldiv@new_exp+1,c
  5112  001850  6A09               	clrf	___fldiv@b,c
  5113  001852  6A0A               	clrf	___fldiv@b+1,c
  5114  001854  6A0B               	clrf	___fldiv@b+2,c
  5115  001856  6A0C               	clrf	___fldiv@b+3,c
  5116  001858  6A15               	clrf	___fldiv@sign,c
  5117  00185A                     l1003:
  5118  00185A  C01A  F020         	movff	___fldiv@new_exp,___fldiv@bexp
  5119  00185E  A020               	btfss	___fldiv@bexp,0,c
  5120  001860  D002               	goto	l4414
  5121  001862  8E0B               	bsf	___fldiv@b+2,7,c
  5122  001864  D002               	goto	l4416
  5123  001866                     l4414:
  5124  001866  FFFF               	dw	65535	; assembler added errata NOP
  5125  001868  9E0B               	bcf	___fldiv@b+2,7,c
  5126  00186A                     l4416:
  5127  00186A  FFFF               	dw	65535	; assembler added errata NOP
  5128  00186C  90D8               	bcf	status,0,c
  5129  00186E  3020               	rrcf	___fldiv@bexp,w,c
  5130  001870  6E0C               	movwf	___fldiv@b+3,c
  5131  001872  5015               	movf	___fldiv@sign,w,c
  5132  001874  D738               	goto	L6
  5133  001876                     l983:
  5134  001876  FFFF               	dw	65535	; assembler added errata NOP
  5135  001878  0012               	return		;funcret
  5136  00187A  FFFF               	dw	65535	; errata NOP
  5137  00187C                     __end_of___fldiv:
  5138                           	opt stack 0
  5139                           tblptru	equ	0xFF8
  5140                           tblptrh	equ	0xFF7
  5141                           tblptrl	equ	0xFF6
  5142                           tablat	equ	0xFF5
  5143                           intcon	equ	0xFF2
  5144                           intcon2	equ	0xFF1
  5145                           postinc0	equ	0xFEE
  5146                           wreg	equ	0xFE8
  5147                           postdec1	equ	0xFE5
  5148                           fsr1l	equ	0xFE1
  5149                           status	equ	0xFD8
  5150                           
  5151 ;; *************** function _log10 *****************
  5152 ;; Defined at:
  5153 ;;		line 39 in file "/opt/microchip/xc8/v1.45/sources/common/log.c"
  5154 ;; Parameters:    Size  Location     Type
  5155 ;;  x               4   26[BANK0 ] unsigned char 
  5156 ;; Auto vars:     Size  Location     Type
  5157 ;;		None
  5158 ;; Return value:  Size  Location     Type
  5159 ;;                  4   26[BANK0 ] unsigned char 
  5160 ;; Registers used:
  5161 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5162 ;; Tracked objects:
  5163 ;;		On entry : 0/0
  5164 ;;		On exit  : 3F/0
  5165 ;;		Unchanged: 0/0
  5166 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5167 ;;      Params:         0       4       0       0       0       0       0
  5168 ;;      Locals:         0       4       0       0       0       0       0
  5169 ;;      Temps:          0       0       0       0       0       0       0
  5170 ;;      Totals:         0       8       0       0       0       0       0
  5171 ;;Total ram usage:        8 bytes
  5172 ;; Hardware stack levels used:    1
  5173 ;; Hardware stack levels required when called:    5
  5174 ;; This function calls:
  5175 ;;		___flmul
  5176 ;;		_log
  5177 ;; This function is called by:
  5178 ;;		_format_double
  5179 ;; This function uses a non-reentrant model
  5180 ;;
  5181                           
  5182                           	psect	text21
  5183  00282E                     __ptext21:
  5184                           	opt stack 0
  5185  00282E                     _log10:
  5186                           	opt stack 0
  5187  00282E  FFFF               	dw	65535	; assembler added errata NOP
  5188                           
  5189                           ;incstack = 0
  5190  002830  C09A  F094         	movff	log10@x,log@x
  5191  002834  C09B  F095         	movff	log10@x+1,log@x+1
  5192  002838  C09C  F096         	movff	log10@x+2,log@x+2
  5193  00283C  C09D  F097         	movff	log10@x+3,log@x+3
  5194  002840  ECDB  F00D         	call	_log	;wreg free
  5195  002844  C094  F09E         	movff	?_log,_log10$1314
  5196  002848  C095  F09F         	movff	?_log+1,_log10$1314+1
  5197  00284C  C096  F0A0         	movff	?_log+2,_log10$1314+2
  5198  002850  C097  F0A1         	movff	?_log+3,_log10$1314+3
  5199  002854  C09E  F05E         	movff	_log10$1314,___flmul@b
  5200  002858  C09F  F05F         	movff	_log10$1314+1,___flmul@b+1
  5201  00285C  C0A0  F060         	movff	_log10$1314+2,___flmul@b+2
  5202  002860  C0A1  F061         	movff	_log10$1314+3,___flmul@b+3
  5203  002864  0ED9               	movlw	217
  5204  002866  6E62               	movwf	___flmul@a,c
  5205  002868  0E5B               	movlw	91
  5206  00286A  6E63               	movwf	___flmul@a+1,c
  5207  00286C  0EDE               	movlw	222
  5208  00286E  6E64               	movwf	___flmul@a+2,c
  5209  002870  0E3E               	movlw	62
  5210  002872  6E65               	movwf	___flmul@a+3,c
  5211  002874  EC74  F007         	call	___flmul	;wreg free
  5212  002878  C05E  F09A         	movff	?___flmul,?_log10
  5213  00287C  C05F  F09B         	movff	?___flmul+1,?_log10+1
  5214  002880  C060  F09C         	movff	?___flmul+2,?_log10+2
  5215  002884  C061  F09D         	movff	?___flmul+3,?_log10+3
  5216                           
  5217                           ; BSR set to: 0
  5218  002888  0012               	return		;funcret
  5219  00288A  FFFF               	dw	65535	; errata NOP
  5220  00288C                     __end_of_log10:
  5221                           	opt stack 0
  5222                           tblptru	equ	0xFF8
  5223                           tblptrh	equ	0xFF7
  5224                           tblptrl	equ	0xFF6
  5225                           tablat	equ	0xFF5
  5226                           intcon	equ	0xFF2
  5227                           intcon2	equ	0xFF1
  5228                           postinc0	equ	0xFEE
  5229                           wreg	equ	0xFE8
  5230                           postdec1	equ	0xFE5
  5231                           fsr1l	equ	0xFE1
  5232                           status	equ	0xFD8
  5233                           
  5234 ;; *************** function _log *****************
  5235 ;; Defined at:
  5236 ;;		line 5 in file "/opt/microchip/xc8/v1.45/sources/common/log.c"
  5237 ;; Parameters:    Size  Location     Type
  5238 ;;  x               4   20[BANK0 ] unsigned char 
  5239 ;; Auto vars:     Size  Location     Type
  5240 ;;  exponent        2   24[BANK0 ] int 
  5241 ;; Return value:  Size  Location     Type
  5242 ;;                  4   20[BANK0 ] int 
  5243 ;; Registers used:
  5244 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5245 ;; Tracked objects:
  5246 ;;		On entry : 0/0
  5247 ;;		On exit  : 0/0
  5248 ;;		Unchanged: 0/0
  5249 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5250 ;;      Params:         0       4       0       0       0       0       0
  5251 ;;      Locals:         0       2       0       0       0       0       0
  5252 ;;      Temps:          0       0       0       0       0       0       0
  5253 ;;      Totals:         0       6       0       0       0       0       0
  5254 ;;Total ram usage:        6 bytes
  5255 ;; Hardware stack levels used:    1
  5256 ;; Hardware stack levels required when called:    4
  5257 ;; This function calls:
  5258 ;;		___fladd
  5259 ;;		___flmul
  5260 ;;		___xxtofl
  5261 ;;		_eval_poly
  5262 ;;		_frexp
  5263 ;; This function is called by:
  5264 ;;		_log10
  5265 ;;		_pow
  5266 ;; This function uses a non-reentrant model
  5267 ;;
  5268                           
  5269                           	psect	text22
  5270  001BB6                     __ptext22:
  5271                           	opt stack 0
  5272  001BB6                     _log:
  5273                           	opt stack 0
  5274  001BB6  FFFF               	dw	65535	; assembler added errata NOP
  5275                           
  5276                           ; BSR set to: 0
  5277                           ;incstack = 0
  5278  001BB8  0100               	movlb	0	; () banked
  5279  001BBA  BF97               	btfsc	(log@x+3)& (0+255),7,b
  5280  001BBC  D005               	goto	u5000
  5281                           
  5282                           ; BSR set to: 0
  5283                           
  5284                           ; BSR set to: 0
  5285  001BBE  5194               	movf	log@x& (0+255),w,b
  5286  001BC0  1195               	iorwf	(log@x+1)& (0+255),w,b
  5287  001BC2  1196               	iorwf	(log@x+2)& (0+255),w,b
  5288  001BC4  1197               	iorwf	(log@x+3)& (0+255),w,b
  5289  001BC6  E106               	bnz	l4530
  5290  001BC8                     u5000:
  5291  001BC8  FFFF               	dw	65535	; assembler added errata NOP
  5292                           
  5293                           ; BSR set to: 0
  5294  001BCA  6B94               	clrf	?_log& (0+255),b
  5295  001BCC  6B95               	clrf	(?_log+1)& (0+255),b
  5296  001BCE  6B96               	clrf	(?_log+2)& (0+255),b
  5297  001BD0  6B97               	clrf	(?_log+3)& (0+255),b
  5298  001BD2  D086               	goto	l845
  5299  001BD4                     l4530:
  5300                           
  5301                           ; BSR set to: 0
  5302  001BD4  6A62               	clrf	___flmul@a,c
  5303  001BD6  6A63               	clrf	___flmul@a+1,c
  5304  001BD8  6A64               	clrf	___flmul@a+2,c
  5305  001BDA  0E40               	movlw	64
  5306  001BDC  6E65               	movwf	___flmul@a+3,c
  5307  001BDE  0E98               	movlw	low log@exponent
  5308  001BE0  6E0D               	movwf	frexp@eptr,c
  5309  001BE2  C094  F009         	movff	log@x,frexp@value
  5310  001BE6  C095  F00A         	movff	log@x+1,frexp@value+1
  5311  001BEA  C096  F00B         	movff	log@x+2,frexp@value+2
  5312  001BEE  C097  F00C         	movff	log@x+3,frexp@value+3
  5313  001BF2  EC9E  F013         	call	_frexp	;wreg free
  5314  001BF6  C009  F05E         	movff	?_frexp,___flmul@b
  5315  001BFA  C00A  F05F         	movff	?_frexp+1,___flmul@b+1
  5316  001BFE  C00B  F060         	movff	?_frexp+2,___flmul@b+2
  5317  001C02  C00C  F061         	movff	?_frexp+3,___flmul@b+3
  5318  001C06  EC74  F007         	call	___flmul	;wreg free
  5319  001C0A  C05E  F04E         	movff	?___flmul,___fladd@b
  5320  001C0E  C05F  F04F         	movff	?___flmul+1,___fladd@b+1
  5321  001C12  C060  F050         	movff	?___flmul+2,___fladd@b+2
  5322  001C16  C061  F051         	movff	?___flmul+3,___fladd@b+3
  5323  001C1A  6A52               	clrf	___fladd@a,c
  5324  001C1C  6A53               	clrf	___fladd@a+1,c
  5325  001C1E  0E80               	movlw	128
  5326  001C20  6E54               	movwf	___fladd@a+2,c
  5327  001C22  0EBF               	movlw	191
  5328  001C24  6E55               	movwf	___fladd@a+3,c
  5329  001C26  ECD5  F008         	call	___fladd	;wreg free
  5330  001C2A  C04E  F094         	movff	?___fladd,log@x
  5331  001C2E  C04F  F095         	movff	?___fladd+1,log@x+1
  5332  001C32  C050  F096         	movff	?___fladd+2,log@x+2
  5333  001C36  C051  F097         	movff	?___fladd+3,log@x+3
  5334  001C3A  0100               	movlb	0	; () banked
  5335  001C3C  0798               	decf	log@exponent& (0+255),f,b
  5336  001C3E  A0D8               	btfss	status,0,c
  5337  001C40  0799               	decf	(log@exponent+1)& (0+255),f,b
  5338                           
  5339                           ; BSR set to: 0
  5340  001C42  C094  F08D         	movff	log@x,eval_poly@x
  5341  001C46  C095  F08E         	movff	log@x+1,eval_poly@x+1
  5342  001C4A  C096  F08F         	movff	log@x+2,eval_poly@x+2
  5343  001C4E  C097  F090         	movff	log@x+3,eval_poly@x+3
  5344  001C52  0E29               	movlw	low log@coeff
  5345  001C54  6F91               	movwf	eval_poly@d& (0+255),b
  5346  001C56  6B93               	clrf	(eval_poly@n+1)& (0+255),b
  5347  001C58  0E08               	movlw	8
  5348  001C5A  6F92               	movwf	eval_poly@n& (0+255),b
  5349  001C5C  EC94  F011         	call	_eval_poly	;wreg free
  5350  001C60  C08D  F094         	movff	?_eval_poly,log@x
  5351  001C64  C08E  F095         	movff	?_eval_poly+1,log@x+1
  5352  001C68  C08F  F096         	movff	?_eval_poly+2,log@x+2
  5353  001C6C  C090  F097         	movff	?_eval_poly+3,log@x+3
  5354                           
  5355                           ; BSR set to: 0
  5356  001C70  0E18               	movlw	24
  5357  001C72  6E62               	movwf	___flmul@a,c
  5358  001C74  0E72               	movlw	114
  5359  001C76  6E63               	movwf	___flmul@a+1,c
  5360  001C78  0E31               	movlw	49
  5361  001C7A  6E64               	movwf	___flmul@a+2,c
  5362  001C7C  0E3F               	movlw	63
  5363  001C7E  6E65               	movwf	___flmul@a+3,c
  5364  001C80  C098  F040         	movff	log@exponent,___xxtofl@val
  5365  001C84  C099  F041         	movff	log@exponent+1,___xxtofl@val+1
  5366  001C88  0E00               	movlw	0
  5367  001C8A  BE41               	btfsc	___xxtofl@val+1,7,c
  5368  001C8C  0EFF               	movlw	-1
  5369  001C8E  6E42               	movwf	___xxtofl@val+2,c
  5370  001C90  6E43               	movwf	___xxtofl@val+3,c
  5371  001C92  0E01               	movlw	1
  5372  001C94  EC73  F00E         	call	___xxtofl
  5373  001C98  C040  F05E         	movff	?___xxtofl,___flmul@b
  5374  001C9C  C041  F05F         	movff	?___xxtofl+1,___flmul@b+1
  5375  001CA0  C042  F060         	movff	?___xxtofl+2,___flmul@b+2
  5376  001CA4  C043  F061         	movff	?___xxtofl+3,___flmul@b+3
  5377  001CA8  EC74  F007         	call	___flmul	;wreg free
  5378  001CAC  C05E  F04E         	movff	?___flmul,___fladd@b
  5379  001CB0  C05F  F04F         	movff	?___flmul+1,___fladd@b+1
  5380  001CB4  C060  F050         	movff	?___flmul+2,___fladd@b+2
  5381  001CB8  C061  F051         	movff	?___flmul+3,___fladd@b+3
  5382  001CBC  C094  F052         	movff	log@x,___fladd@a
  5383  001CC0  C095  F053         	movff	log@x+1,___fladd@a+1
  5384  001CC4  C096  F054         	movff	log@x+2,___fladd@a+2
  5385  001CC8  C097  F055         	movff	log@x+3,___fladd@a+3
  5386  001CCC  ECD5  F008         	call	___fladd	;wreg free
  5387  001CD0  C04E  F094         	movff	?___fladd,?_log
  5388  001CD4  C04F  F095         	movff	?___fladd+1,?_log+1
  5389  001CD8  C050  F096         	movff	?___fladd+2,?_log+2
  5390  001CDC  C051  F097         	movff	?___fladd+3,?_log+3
  5391  001CE0                     l845:
  5392  001CE0  FFFF               	dw	65535	; assembler added errata NOP
  5393  001CE2  0012               	return		;funcret
  5394  001CE4  FFFF               	dw	65535	; errata NOP
  5395  001CE6                     __end_of_log:
  5396                           	opt stack 0
  5397                           tblptru	equ	0xFF8
  5398                           tblptrh	equ	0xFF7
  5399                           tblptrl	equ	0xFF6
  5400                           tablat	equ	0xFF5
  5401                           intcon	equ	0xFF2
  5402                           intcon2	equ	0xFF1
  5403                           postinc0	equ	0xFEE
  5404                           wreg	equ	0xFE8
  5405                           postdec1	equ	0xFE5
  5406                           fsr1l	equ	0xFE1
  5407                           status	equ	0xFD8
  5408                           
  5409 ;; *************** function _frexp *****************
  5410 ;; Defined at:
  5411 ;;		line 254 in file "/opt/microchip/xc8/v1.45/sources/common/frexp.c"
  5412 ;; Parameters:    Size  Location     Type
  5413 ;;  value           4    8[COMRAM] int 
  5414 ;;  eptr            1   12[COMRAM] PTR int 
  5415 ;;		 -> log@exponent(2), floor@expon(2), 
  5416 ;; Auto vars:     Size  Location     Type
  5417 ;;		None
  5418 ;; Return value:  Size  Location     Type
  5419 ;;                  4    8[COMRAM] PTR int 
  5420 ;; Registers used:
  5421 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5422 ;; Tracked objects:
  5423 ;;		On entry : 0/0
  5424 ;;		On exit  : 0/0
  5425 ;;		Unchanged: 0/0
  5426 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5427 ;;      Params:         5       0       0       0       0       0       0
  5428 ;;      Locals:         0       0       0       0       0       0       0
  5429 ;;      Temps:          2       0       0       0       0       0       0
  5430 ;;      Totals:         7       0       0       0       0       0       0
  5431 ;;Total ram usage:        7 bytes
  5432 ;; Hardware stack levels used:    1
  5433 ;; Hardware stack levels required when called:    2
  5434 ;; This function calls:
  5435 ;;		Nothing
  5436 ;; This function is called by:
  5437 ;;		_floor
  5438 ;;		_log
  5439 ;; This function uses a non-reentrant model
  5440 ;;
  5441                           
  5442                           	psect	text23
  5443  00273C                     __ptext23:
  5444                           	opt stack 0
  5445  00273C                     _frexp:
  5446                           	opt stack 0
  5447  00273C  FFFF               	dw	65535	; assembler added errata NOP
  5448                           
  5449                           ;incstack = 0
  5450  00273E  5009               	movf	frexp@value,w,c
  5451  002740  100A               	iorwf	frexp@value+1,w,c
  5452  002742  100B               	iorwf	frexp@value+2,w,c
  5453  002744  100C               	iorwf	frexp@value+3,w,c
  5454  002746  E10B               	bnz	l4184
  5455  002748  500D               	movf	frexp@eptr,w,c
  5456  00274A  6ED9               	movwf	fsr2l,c
  5457  00274C  6ADA               	clrf	fsr2h,c
  5458  00274E  0E00               	movlw	0
  5459  002750  6ADE               	clrf	postinc2,c
  5460  002752  6ADD               	clrf	postdec2,c
  5461  002754  6A09               	clrf	?_frexp,c
  5462  002756  6A0A               	clrf	?_frexp+1,c
  5463  002758  6A0B               	clrf	?_frexp+2,c
  5464  00275A  6A0C               	clrf	?_frexp+3,c
  5465  00275C  D02B               	goto	l689
  5466  00275E                     l4184:
  5467  00275E  500C               	movf	frexp@value+3,w,c
  5468  002760  0B7F               	andlw	127
  5469  002762  6E0E               	movwf	??_frexp& (0+255),c
  5470  002764  6A0F               	clrf	(??_frexp+1)& (0+255),c
  5471  002766  90D8               	bcf	status,0,c
  5472  002768  360E               	rlcf	??_frexp,f,c
  5473  00276A  360F               	rlcf	??_frexp+1,f,c
  5474  00276C  500D               	movf	frexp@eptr,w,c
  5475  00276E  6ED9               	movwf	fsr2l,c
  5476  002770  6ADA               	clrf	fsr2h,c
  5477  002772  C00E  FFDE         	movff	??_frexp,postinc2
  5478  002776  C00F  FFDD         	movff	??_frexp+1,postdec2
  5479  00277A  500D               	movf	frexp@eptr,w,c
  5480  00277C  6ED9               	movwf	fsr2l,c
  5481  00277E  6ADA               	clrf	fsr2h,c
  5482  002780  0E01               	movlw	1
  5483  002782  AE0B               	btfss	frexp@value+2,7,c
  5484  002784  0E00               	movlw	0
  5485  002786  12DE               	iorwf	postinc2,f,c
  5486  002788  0E00               	movlw	0
  5487  00278A  12DD               	iorwf	postdec2,f,c
  5488  00278C  500D               	movf	frexp@eptr,w,c
  5489  00278E  6ED9               	movwf	fsr2l,c
  5490  002790  6ADA               	clrf	fsr2h,c
  5491  002792  0E82               	movlw	130
  5492  002794  26DE               	addwf	postinc2,f,c
  5493  002796  0EFF               	movlw	255
  5494  002798  22DD               	addwfc	postdec2,f,c
  5495  00279A  500C               	movf	frexp@value+3,w,c
  5496  00279C  0B80               	andlw	-128
  5497  00279E  093F               	iorlw	63
  5498  0027A0  6E0C               	movwf	frexp@value+3,c
  5499  0027A2  9E0B               	bcf	frexp@value+2,7,c
  5500  0027A4  C009  F009         	movff	frexp@value,?_frexp
  5501  0027A8  C00A  F00A         	movff	frexp@value+1,?_frexp+1
  5502  0027AC  C00B  F00B         	movff	frexp@value+2,?_frexp+2
  5503  0027B0  C00C  F00C         	movff	frexp@value+3,?_frexp+3
  5504  0027B4                     l689:
  5505  0027B4  FFFF               	dw	65535	; assembler added errata NOP
  5506  0027B6  0012               	return		;funcret
  5507  0027B8  FFFF               	dw	65535	; errata NOP
  5508  0027BA                     __end_of_frexp:
  5509                           	opt stack 0
  5510                           tblptru	equ	0xFF8
  5511                           tblptrh	equ	0xFF7
  5512                           tblptrl	equ	0xFF6
  5513                           tablat	equ	0xFF5
  5514                           intcon	equ	0xFF2
  5515                           intcon2	equ	0xFF1
  5516                           postinc0	equ	0xFEE
  5517                           wreg	equ	0xFE8
  5518                           postdec1	equ	0xFE5
  5519                           fsr1l	equ	0xFE1
  5520                           postinc2	equ	0xFDE
  5521                           postdec2	equ	0xFDD
  5522                           fsr2h	equ	0xFDA
  5523                           fsr2l	equ	0xFD9
  5524                           status	equ	0xFD8
  5525                           
  5526 ;; *************** function _eval_poly *****************
  5527 ;; Defined at:
  5528 ;;		line 4 in file "/opt/microchip/xc8/v1.45/sources/common/evalpoly.c"
  5529 ;; Parameters:    Size  Location     Type
  5530 ;;  x               4   13[BANK0 ] PTR int 
  5531 ;;  d               1   17[BANK0 ] PTR const 
  5532 ;;		 -> exp@coeff(40), log@coeff(36), 
  5533 ;;  n               2   18[BANK0 ] int 
  5534 ;; Auto vars:     Size  Location     Type
  5535 ;;  res             4  106[COMRAM] int 
  5536 ;; Return value:  Size  Location     Type
  5537 ;;                  4   13[BANK0 ] int 
  5538 ;; Registers used:
  5539 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5540 ;; Tracked objects:
  5541 ;;		On entry : 3F/0
  5542 ;;		On exit  : 3F/0
  5543 ;;		Unchanged: 0/0
  5544 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5545 ;;      Params:         0       7       0       0       0       0       0
  5546 ;;      Locals:         4       0       0       0       0       0       0
  5547 ;;      Temps:          1       0       0       0       0       0       0
  5548 ;;      Totals:         5       7       0       0       0       0       0
  5549 ;;Total ram usage:       12 bytes
  5550 ;; Hardware stack levels used:    1
  5551 ;; Hardware stack levels required when called:    3
  5552 ;; This function calls:
  5553 ;;		___fladd
  5554 ;;		___flmul
  5555 ;; This function is called by:
  5556 ;;		_log
  5557 ;;		_exp
  5558 ;; This function uses a non-reentrant model
  5559 ;;
  5560                           
  5561                           	psect	text24
  5562  002328                     __ptext24:
  5563                           	opt stack 0
  5564  002328                     _eval_poly:
  5565                           	opt stack 0
  5566  002328  FFFF               	dw	65535	; assembler added errata NOP
  5567                           
  5568                           ; BSR set to: 0
  5569                           
  5570                           ;incstack = 0
  5571  00232A  5192               	movf	eval_poly@n& (0+255),w,b
  5572  00232C  0D04               	mullw	4
  5573  00232E  5191               	movf	eval_poly@d& (0+255),w,b
  5574  002330  24F3               	addwf	prodl,w,c
  5575  002332  6E6A               	movwf	??_eval_poly& (0+255),c
  5576  002334  C06A  FFF6         	movff	??_eval_poly,tblptrl
  5577  002338                     	if	0	;There is only one active tblptr byte
  5578  002338                     	endif
  5579  002338                     	if	0	;tblptru may be non-zero
  5580  002338                     	endif
  5581  002338                     	if	0	;tblptru may be non-zero
  5582  002338                     	endif
  5583  002338  0009               	tblrd		*+
  5584  00233A  FFFF               	dw	65535	; errata NOP
  5585  00233C  CFF5 F06B          	movff	tablat,eval_poly@res
  5586  002340  0009               	tblrd		*+
  5587  002342  FFFF               	dw	65535	; errata NOP
  5588  002344  CFF5 F06C          	movff	tablat,eval_poly@res+1
  5589  002348  0009               	tblrd		*+
  5590  00234A  FFFF               	dw	65535	; errata NOP
  5591  00234C  CFF5 F06D          	movff	tablat,eval_poly@res+2
  5592  002350  000A               	tblrd		*-
  5593  002352  FFFF               	dw	65535	; errata NOP
  5594  002354  CFF5 F06E          	movff	tablat,eval_poly@res+3
  5595  002358  D03E               	goto	l4472
  5596  00235A                     l4470:
  5597                           
  5598                           ; BSR set to: 0
  5599  00235A  C06B  F062         	movff	eval_poly@res,___flmul@a
  5600  00235E  C06C  F063         	movff	eval_poly@res+1,___flmul@a+1
  5601  002362  C06D  F064         	movff	eval_poly@res+2,___flmul@a+2
  5602  002366  C06E  F065         	movff	eval_poly@res+3,___flmul@a+3
  5603  00236A  C08D  F05E         	movff	eval_poly@x,___flmul@b
  5604  00236E  C08E  F05F         	movff	eval_poly@x+1,___flmul@b+1
  5605  002372  C08F  F060         	movff	eval_poly@x+2,___flmul@b+2
  5606  002376  C090  F061         	movff	eval_poly@x+3,___flmul@b+3
  5607  00237A  EC74  F007         	call	___flmul	;wreg free
  5608  00237E  C05E  F04E         	movff	?___flmul,___fladd@b
  5609  002382  C05F  F04F         	movff	?___flmul+1,___fladd@b+1
  5610  002386  C060  F050         	movff	?___flmul+2,___fladd@b+2
  5611  00238A  C061  F051         	movff	?___flmul+3,___fladd@b+3
  5612  00238E  0792               	decf	eval_poly@n& (0+255),f,b
  5613  002390  A0D8               	btfss	status,0,c
  5614  002392  0793               	decf	(eval_poly@n+1)& (0+255),f,b
  5615  002394  5192               	movf	eval_poly@n& (0+255),w,b
  5616  002396  0D04               	mullw	4
  5617  002398  5191               	movf	eval_poly@d& (0+255),w,b
  5618  00239A  24F3               	addwf	prodl,w,c
  5619  00239C  6E6A               	movwf	??_eval_poly& (0+255),c
  5620  00239E  C06A  FFF6         	movff	??_eval_poly,tblptrl
  5621  0023A2                     	if	0	;There is only one active tblptr byte
  5622  0023A2                     	endif
  5623  0023A2                     	if	0	;tblptru may be non-zero
  5624  0023A2                     	endif
  5625  0023A2                     	if	0	;tblptru may be non-zero
  5626  0023A2                     	endif
  5627  0023A2  0009               	tblrd		*+
  5628  0023A4  FFFF               	dw	65535	; errata NOP
  5629  0023A6  CFF5 F052          	movff	tablat,___fladd@a
  5630  0023AA  0009               	tblrd		*+
  5631  0023AC  FFFF               	dw	65535	; errata NOP
  5632  0023AE  CFF5 F053          	movff	tablat,___fladd@a+1
  5633  0023B2  0009               	tblrd		*+
  5634  0023B4  FFFF               	dw	65535	; errata NOP
  5635  0023B6  CFF5 F054          	movff	tablat,___fladd@a+2
  5636  0023BA  000A               	tblrd		*-
  5637  0023BC  FFFF               	dw	65535	; errata NOP
  5638  0023BE  CFF5 F055          	movff	tablat,___fladd@a+3
  5639  0023C2  ECD5  F008         	call	___fladd	;wreg free
  5640  0023C6  C04E  F06B         	movff	?___fladd,eval_poly@res
  5641  0023CA  C04F  F06C         	movff	?___fladd+1,eval_poly@res+1
  5642  0023CE  C050  F06D         	movff	?___fladd+2,eval_poly@res+2
  5643  0023D2  C051  F06E         	movff	?___fladd+3,eval_poly@res+3
  5644  0023D6                     l4472:
  5645  0023D6  FFFF               	dw	65535	; assembler added errata NOP
  5646  0023D8  0100               	movlb	0	; () banked
  5647  0023DA  5192               	movf	eval_poly@n& (0+255),w,b
  5648  0023DC  1193               	iorwf	(eval_poly@n+1)& (0+255),w,b
  5649  0023DE  E1BD               	bnz	l4470
  5650                           
  5651                           ; BSR set to: 0
  5652  0023E0  C06B  F08D         	movff	eval_poly@res,?_eval_poly
  5653  0023E4  C06C  F08E         	movff	eval_poly@res+1,?_eval_poly+1
  5654  0023E8  C06D  F08F         	movff	eval_poly@res+2,?_eval_poly+2
  5655  0023EC  C06E  F090         	movff	eval_poly@res+3,?_eval_poly+3
  5656                           
  5657                           ; BSR set to: 0
  5658  0023F0  0012               	return		;funcret
  5659  0023F2  FFFF               	dw	65535	; errata NOP
  5660  0023F4                     __end_of_eval_poly:
  5661                           	opt stack 0
  5662                           tblptru	equ	0xFF8
  5663                           tblptrh	equ	0xFF7
  5664                           tblptrl	equ	0xFF6
  5665                           tablat	equ	0xFF5
  5666                           prodl	equ	0xFF3
  5667                           intcon	equ	0xFF2
  5668                           intcon2	equ	0xFF1
  5669                           postinc0	equ	0xFEE
  5670                           wreg	equ	0xFE8
  5671                           postdec1	equ	0xFE5
  5672                           fsr1l	equ	0xFE1
  5673                           postinc2	equ	0xFDE
  5674                           postdec2	equ	0xFDD
  5675                           fsr2h	equ	0xFDA
  5676                           fsr2l	equ	0xFD9
  5677                           status	equ	0xFD8
  5678                           
  5679 ;; *************** function ___flmul *****************
  5680 ;; Defined at:
  5681 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/sprcmul.c"
  5682 ;; Parameters:    Size  Location     Type
  5683 ;;  b               4   93[COMRAM] int 
  5684 ;;  a               4   97[COMRAM] int 
  5685 ;; Auto vars:     Size  Location     Type
  5686 ;;  prod            4    7[BANK0 ] struct .
  5687 ;;  grs             4    3[BANK0 ] unsigned long 
  5688 ;;  temp            2   11[BANK0 ] struct .
  5689 ;;  bexp            1    2[BANK0 ] unsigned char 
  5690 ;;  aexp            1    1[BANK0 ] unsigned char 
  5691 ;;  sign            1    0[BANK0 ] unsigned char 
  5692 ;; Return value:  Size  Location     Type
  5693 ;;                  4   93[COMRAM] unsigned char 
  5694 ;; Registers used:
  5695 ;;		wreg, status,2, status,0, prodl, prodh
  5696 ;; Tracked objects:
  5697 ;;		On entry : 0/0
  5698 ;;		On exit  : 3F/0
  5699 ;;		Unchanged: 0/0
  5700 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5701 ;;      Params:         8       0       0       0       0       0       0
  5702 ;;      Locals:         0      13       0       0       0       0       0
  5703 ;;      Temps:          4       0       0       0       0       0       0
  5704 ;;      Totals:        12      13       0       0       0       0       0
  5705 ;;Total ram usage:       25 bytes
  5706 ;; Hardware stack levels used:    1
  5707 ;; Hardware stack levels required when called:    2
  5708 ;; This function calls:
  5709 ;;		Nothing
  5710 ;; This function is called by:
  5711 ;;		_format_double
  5712 ;;		_measure_capacitance
  5713 ;;		_measure_inductance
  5714 ;;		_log
  5715 ;;		_log10
  5716 ;;		_pow
  5717 ;;		_eval_poly
  5718 ;;		_exp
  5719 ;; This function uses a non-reentrant model
  5720 ;;
  5721                           
  5722                           	psect	text25
  5723  000EE8                     __ptext25:
  5724                           	opt stack 0
  5725  000EE8                     ___flmul:
  5726                           	opt stack 0
  5727  000EE8  FFFF               	dw	65535	; assembler added errata NOP
  5728                           
  5729                           ; BSR set to: 0
  5730                           ;incstack = 0
  5731  000EEA  5061               	movf	___flmul@b+3,w,c
  5732  000EEC  0B80               	andlw	128
  5733  000EEE  0100               	movlb	0	; () banked
  5734  000EF0  6F80               	movwf	___flmul@sign& (0+255),b
  5735  000EF2  5061               	movf	___flmul@b+3,w,c
  5736  000EF4  2461               	addwf	___flmul@b+3,w,c
  5737  000EF6  6F82               	movwf	___flmul@bexp& (0+255),b
  5738                           
  5739                           ; BSR set to: 0
  5740  000EF8  BE60               	btfsc	___flmul@b+2,7,c
  5741                           
  5742                           ; BSR set to: 0
  5743  000EFA  8182               	bsf	___flmul@bexp& (0+255),0,b
  5744                           
  5745                           ; BSR set to: 0
  5746  000EFC  5182               	movf	___flmul@bexp& (0+255),w,b
  5747  000EFE  E008               	bz	l1009
  5748                           
  5749                           ; BSR set to: 0
  5750  000F00  2982               	incf	___flmul@bexp& (0+255),w,b
  5751  000F02  E104               	bnz	l4050
  5752                           
  5753                           ; BSR set to: 0
  5754  000F04  6A5E               	clrf	___flmul@b,c
  5755  000F06  6A5F               	clrf	___flmul@b+1,c
  5756  000F08  6A60               	clrf	___flmul@b+2,c
  5757  000F0A  6A61               	clrf	___flmul@b+3,c
  5758  000F0C                     l4050:
  5759                           
  5760                           ; BSR set to: 0
  5761  000F0C  8E60               	bsf	___flmul@b+2,7,c
  5762  000F0E  D004               	goto	l4052
  5763  000F10                     l1009:
  5764                           
  5765                           ; BSR set to: 0
  5766  000F10  6A5E               	clrf	___flmul@b,c
  5767  000F12  6A5F               	clrf	___flmul@b+1,c
  5768  000F14  6A60               	clrf	___flmul@b+2,c
  5769  000F16  6A61               	clrf	___flmul@b+3,c
  5770  000F18                     l4052:
  5771  000F18  FFFF               	dw	65535	; assembler added errata NOP
  5772                           
  5773                           ; BSR set to: 0
  5774  000F1A  5065               	movf	___flmul@a+3,w,c
  5775  000F1C  0B80               	andlw	128
  5776  000F1E  1B80               	xorwf	___flmul@sign& (0+255),f,b
  5777  000F20  5065               	movf	___flmul@a+3,w,c
  5778  000F22  2465               	addwf	___flmul@a+3,w,c
  5779  000F24  6F81               	movwf	___flmul@aexp& (0+255),b
  5780                           
  5781                           ; BSR set to: 0
  5782  000F26  BE64               	btfsc	___flmul@a+2,7,c
  5783                           
  5784                           ; BSR set to: 0
  5785  000F28  8181               	bsf	___flmul@aexp& (0+255),0,b
  5786                           
  5787                           ; BSR set to: 0
  5788  000F2A  5181               	movf	___flmul@aexp& (0+255),w,b
  5789  000F2C  E008               	bz	l1013
  5790                           
  5791                           ; BSR set to: 0
  5792  000F2E  2981               	incf	___flmul@aexp& (0+255),w,b
  5793  000F30  E104               	bnz	l4064
  5794                           
  5795                           ; BSR set to: 0
  5796  000F32  6A62               	clrf	___flmul@a,c
  5797  000F34  6A63               	clrf	___flmul@a+1,c
  5798  000F36  6A64               	clrf	___flmul@a+2,c
  5799  000F38  6A65               	clrf	___flmul@a+3,c
  5800  000F3A                     l4064:
  5801                           
  5802                           ; BSR set to: 0
  5803  000F3A  8E64               	bsf	___flmul@a+2,7,c
  5804  000F3C  D004               	goto	l4066
  5805  000F3E                     l1013:
  5806                           
  5807                           ; BSR set to: 0
  5808  000F3E  6A62               	clrf	___flmul@a,c
  5809  000F40  6A63               	clrf	___flmul@a+1,c
  5810  000F42  6A64               	clrf	___flmul@a+2,c
  5811  000F44  6A65               	clrf	___flmul@a+3,c
  5812  000F46                     l4066:
  5813  000F46  FFFF               	dw	65535	; assembler added errata NOP
  5814                           
  5815                           ; BSR set to: 0
  5816  000F48  5181               	movf	___flmul@aexp& (0+255),w,b
  5817  000F4A  E002               	bz	u4230
  5818                           
  5819                           ; BSR set to: 0
  5820  000F4C  5182               	movf	___flmul@bexp& (0+255),w,b
  5821  000F4E  E105               	bnz	l4070
  5822  000F50                     u4230:
  5823                           
  5824                           ; BSR set to: 0
  5825  000F50  6A5E               	clrf	?___flmul,c
  5826  000F52  6A5F               	clrf	?___flmul+1,c
  5827  000F54  6A60               	clrf	?___flmul+2,c
  5828  000F56  6A61               	clrf	?___flmul+3,c
  5829  000F58  D125               	goto	l1019
  5830  000F5A                     l4070:
  5831                           
  5832                           ; BSR set to: 0
  5833  000F5A  5064               	movf	___flmul@a+2,w,c
  5834  000F5C  025E               	mulwf	___flmul@b,c
  5835  000F5E  CFF3 F08B          	movff	prodl,___flmul@temp
  5836  000F62  CFF4 F08C          	movff	prodh,___flmul@temp+1
  5837                           
  5838                           ; BSR set to: 0
  5839  000F66  518B               	movf	___flmul@temp& (0+255),w,b
  5840  000F68  6F83               	movwf	___flmul@grs& (0+255),b
  5841  000F6A  6B84               	clrf	(___flmul@grs+1)& (0+255),b
  5842  000F6C  6B85               	clrf	(___flmul@grs+2)& (0+255),b
  5843  000F6E  6B86               	clrf	(___flmul@grs+3)& (0+255),b
  5844                           
  5845                           ; BSR set to: 0
  5846  000F70  518C               	movf	(___flmul@temp+1)& (0+255),w,b
  5847  000F72  6F87               	movwf	___flmul@prod& (0+255),b
  5848  000F74  6B88               	clrf	(___flmul@prod+1)& (0+255),b
  5849  000F76  6B89               	clrf	(___flmul@prod+2)& (0+255),b
  5850  000F78  6B8A               	clrf	(___flmul@prod+3)& (0+255),b
  5851  000F7A  5063               	movf	___flmul@a+1,w,c
  5852  000F7C  025F               	mulwf	___flmul@b+1,c
  5853  000F7E  CFF3 F08B          	movff	prodl,___flmul@temp
  5854  000F82  CFF4 F08C          	movff	prodh,___flmul@temp+1
  5855                           
  5856                           ; BSR set to: 0
  5857  000F86  518B               	movf	___flmul@temp& (0+255),w,b
  5858  000F88  2783               	addwf	___flmul@grs& (0+255),f,b
  5859  000F8A  0E00               	movlw	0
  5860  000F8C  2384               	addwfc	(___flmul@grs+1)& (0+255),f,b
  5861  000F8E  2385               	addwfc	(___flmul@grs+2)& (0+255),f,b
  5862  000F90  2386               	addwfc	(___flmul@grs+3)& (0+255),f,b
  5863                           
  5864                           ; BSR set to: 0
  5865  000F92  518C               	movf	(___flmul@temp+1)& (0+255),w,b
  5866  000F94  2787               	addwf	___flmul@prod& (0+255),f,b
  5867  000F96  0E00               	movlw	0
  5868  000F98  2388               	addwfc	(___flmul@prod+1)& (0+255),f,b
  5869  000F9A  2389               	addwfc	(___flmul@prod+2)& (0+255),f,b
  5870  000F9C  238A               	addwfc	(___flmul@prod+3)& (0+255),f,b
  5871  000F9E  5062               	movf	___flmul@a,w,c
  5872  000FA0  0260               	mulwf	___flmul@b+2,c
  5873  000FA2  CFF3 F08B          	movff	prodl,___flmul@temp
  5874  000FA6  CFF4 F08C          	movff	prodh,___flmul@temp+1
  5875                           
  5876                           ; BSR set to: 0
  5877  000FAA  518B               	movf	___flmul@temp& (0+255),w,b
  5878  000FAC  2783               	addwf	___flmul@grs& (0+255),f,b
  5879  000FAE  0E00               	movlw	0
  5880  000FB0  2384               	addwfc	(___flmul@grs+1)& (0+255),f,b
  5881  000FB2  2385               	addwfc	(___flmul@grs+2)& (0+255),f,b
  5882  000FB4  2386               	addwfc	(___flmul@grs+3)& (0+255),f,b
  5883                           
  5884                           ; BSR set to: 0
  5885  000FB6  518C               	movf	(___flmul@temp+1)& (0+255),w,b
  5886  000FB8  2787               	addwf	___flmul@prod& (0+255),f,b
  5887  000FBA  0E00               	movlw	0
  5888  000FBC  2388               	addwfc	(___flmul@prod+1)& (0+255),f,b
  5889  000FBE  2389               	addwfc	(___flmul@prod+2)& (0+255),f,b
  5890  000FC0  238A               	addwfc	(___flmul@prod+3)& (0+255),f,b
  5891                           
  5892                           ; BSR set to: 0
  5893  000FC2  C085  F086         	movff	___flmul@grs+2,___flmul@grs+3
  5894  000FC6  C084  F085         	movff	___flmul@grs+1,___flmul@grs+2
  5895  000FCA  C083  F084         	movff	___flmul@grs,___flmul@grs+1
  5896  000FCE  6B83               	clrf	___flmul@grs& (0+255),b
  5897                           
  5898                           ; BSR set to: 0
  5899  000FD0  5062               	movf	___flmul@a,w,c
  5900  000FD2  025F               	mulwf	___flmul@b+1,c
  5901  000FD4  CFF3 F08B          	movff	prodl,___flmul@temp
  5902  000FD8  CFF4 F08C          	movff	prodh,___flmul@temp+1
  5903                           
  5904                           ; BSR set to: 0
  5905  000FDC  518B               	movf	___flmul@temp& (0+255),w,b
  5906  000FDE  2783               	addwf	___flmul@grs& (0+255),f,b
  5907  000FE0  518C               	movf	(___flmul@temp+1)& (0+255),w,b
  5908  000FE2  2384               	addwfc	(___flmul@grs+1)& (0+255),f,b
  5909  000FE4  0E00               	movlw	0
  5910  000FE6  2385               	addwfc	(___flmul@grs+2)& (0+255),f,b
  5911  000FE8  2386               	addwfc	(___flmul@grs+3)& (0+255),f,b
  5912                           
  5913                           ; BSR set to: 0
  5914  000FEA  5063               	movf	___flmul@a+1,w,c
  5915  000FEC  025E               	mulwf	___flmul@b,c
  5916  000FEE  CFF3 F08B          	movff	prodl,___flmul@temp
  5917  000FF2  CFF4 F08C          	movff	prodh,___flmul@temp+1
  5918                           
  5919                           ; BSR set to: 0
  5920  000FF6  518B               	movf	___flmul@temp& (0+255),w,b
  5921  000FF8  2783               	addwf	___flmul@grs& (0+255),f,b
  5922  000FFA  518C               	movf	(___flmul@temp+1)& (0+255),w,b
  5923  000FFC  2384               	addwfc	(___flmul@grs+1)& (0+255),f,b
  5924  000FFE  0E00               	movlw	0
  5925  001000  2385               	addwfc	(___flmul@grs+2)& (0+255),f,b
  5926  001002  2386               	addwfc	(___flmul@grs+3)& (0+255),f,b
  5927                           
  5928                           ; BSR set to: 0
  5929  001004  C085  F086         	movff	___flmul@grs+2,___flmul@grs+3
  5930  001008  C084  F085         	movff	___flmul@grs+1,___flmul@grs+2
  5931  00100C  C083  F084         	movff	___flmul@grs,___flmul@grs+1
  5932  001010  6B83               	clrf	___flmul@grs& (0+255),b
  5933  001012  5062               	movf	___flmul@a,w,c
  5934  001014  025E               	mulwf	___flmul@b,c
  5935  001016  CFF3 F08B          	movff	prodl,___flmul@temp
  5936  00101A  CFF4 F08C          	movff	prodh,___flmul@temp+1
  5937                           
  5938                           ; BSR set to: 0
  5939  00101E  518B               	movf	___flmul@temp& (0+255),w,b
  5940  001020  2783               	addwf	___flmul@grs& (0+255),f,b
  5941  001022  518C               	movf	(___flmul@temp+1)& (0+255),w,b
  5942  001024  2384               	addwfc	(___flmul@grs+1)& (0+255),f,b
  5943  001026  0E00               	movlw	0
  5944  001028  2385               	addwfc	(___flmul@grs+2)& (0+255),f,b
  5945  00102A  2386               	addwfc	(___flmul@grs+3)& (0+255),f,b
  5946                           
  5947                           ; BSR set to: 0
  5948  00102C  5064               	movf	___flmul@a+2,w,c
  5949  00102E  025F               	mulwf	___flmul@b+1,c
  5950  001030  CFF3 F08B          	movff	prodl,___flmul@temp
  5951  001034  CFF4 F08C          	movff	prodh,___flmul@temp+1
  5952  001038  518B               	movf	___flmul@temp& (0+255),w,b
  5953  00103A  2787               	addwf	___flmul@prod& (0+255),f,b
  5954  00103C  518C               	movf	(___flmul@temp+1)& (0+255),w,b
  5955  00103E  2388               	addwfc	(___flmul@prod+1)& (0+255),f,b
  5956  001040  0E00               	movlw	0
  5957  001042  2389               	addwfc	(___flmul@prod+2)& (0+255),f,b
  5958  001044  238A               	addwfc	(___flmul@prod+3)& (0+255),f,b
  5959                           
  5960                           ; BSR set to: 0
  5961  001046  5063               	movf	___flmul@a+1,w,c
  5962  001048  0260               	mulwf	___flmul@b+2,c
  5963  00104A  CFF3 F08B          	movff	prodl,___flmul@temp
  5964  00104E  CFF4 F08C          	movff	prodh,___flmul@temp+1
  5965                           
  5966                           ; BSR set to: 0
  5967  001052  518B               	movf	___flmul@temp& (0+255),w,b
  5968  001054  2787               	addwf	___flmul@prod& (0+255),f,b
  5969  001056  518C               	movf	(___flmul@temp+1)& (0+255),w,b
  5970  001058  2388               	addwfc	(___flmul@prod+1)& (0+255),f,b
  5971  00105A  0E00               	movlw	0
  5972  00105C  2389               	addwfc	(___flmul@prod+2)& (0+255),f,b
  5973  00105E  238A               	addwfc	(___flmul@prod+3)& (0+255),f,b
  5974  001060  5064               	movf	___flmul@a+2,w,c
  5975  001062  0260               	mulwf	___flmul@b+2,c
  5976  001064  CFF3 F08B          	movff	prodl,___flmul@temp
  5977  001068  CFF4 F08C          	movff	prodh,___flmul@temp+1
  5978                           
  5979                           ; BSR set to: 0
  5980  00106C  518B               	movf	___flmul@temp& (0+255),w,b
  5981  00106E  6E66               	movwf	??___flmul& (0+255),c
  5982  001070  518C               	movf	(___flmul@temp+1)& (0+255),w,b
  5983  001072  6E67               	movwf	(??___flmul+1)& (0+255),c
  5984  001074  6A68               	clrf	(??___flmul+2)& (0+255),c
  5985  001076  6A69               	clrf	(??___flmul+3)& (0+255),c
  5986  001078  C068  F069         	movff	??___flmul+2,??___flmul+3
  5987  00107C  C067  F068         	movff	??___flmul+1,??___flmul+2
  5988  001080  C066  F067         	movff	??___flmul,??___flmul+1
  5989  001084  6A66               	clrf	??___flmul,c
  5990  001086  5066               	movf	??___flmul,w,c
  5991  001088  2787               	addwf	___flmul@prod& (0+255),f,b
  5992  00108A  5067               	movf	??___flmul+1,w,c
  5993  00108C  2388               	addwfc	(___flmul@prod+1)& (0+255),f,b
  5994  00108E  5068               	movf	??___flmul+2,w,c
  5995  001090  2389               	addwfc	(___flmul@prod+2)& (0+255),f,b
  5996  001092  5069               	movf	??___flmul+3,w,c
  5997  001094  238A               	addwfc	(___flmul@prod+3)& (0+255),f,b
  5998                           
  5999                           ; BSR set to: 0
  6000  001096  5186               	movf	(___flmul@grs+3)& (0+255),w,b
  6001  001098  2787               	addwf	___flmul@prod& (0+255),f,b
  6002  00109A  0E00               	movlw	0
  6003  00109C  2388               	addwfc	(___flmul@prod+1)& (0+255),f,b
  6004  00109E  2389               	addwfc	(___flmul@prod+2)& (0+255),f,b
  6005  0010A0  238A               	addwfc	(___flmul@prod+3)& (0+255),f,b
  6006                           
  6007                           ; BSR set to: 0
  6008  0010A2  C085  F086         	movff	___flmul@grs+2,___flmul@grs+3
  6009  0010A6  C084  F085         	movff	___flmul@grs+1,___flmul@grs+2
  6010  0010AA  C083  F084         	movff	___flmul@grs,___flmul@grs+1
  6011  0010AE  6B83               	clrf	___flmul@grs& (0+255),b
  6012                           
  6013                           ; BSR set to: 0
  6014  0010B0  5181               	movf	___flmul@aexp& (0+255),w,b
  6015  0010B2  C082  F066         	movff	___flmul@bexp,??___flmul
  6016  0010B6  6A67               	clrf	(??___flmul+1)& (0+255),c
  6017  0010B8  2666               	addwf	??___flmul,f,c
  6018  0010BA  0E00               	movlw	0
  6019  0010BC  2267               	addwfc	??___flmul+1,f,c
  6020  0010BE  0E82               	movlw	130
  6021  0010C0  2466               	addwf	??___flmul,w,c
  6022  0010C2  6F8B               	movwf	___flmul@temp& (0+255),b
  6023  0010C4  0EFF               	movlw	255
  6024  0010C6  2067               	addwfc	??___flmul+1,w,c
  6025  0010C8  6F8C               	movwf	(___flmul@temp+1)& (0+255),b
  6026  0010CA  D010               	goto	l4118
  6027  0010CC                     l4112:
  6028  0010CC  FFFF               	dw	65535	; assembler added errata NOP
  6029                           
  6030                           ; BSR set to: 0
  6031  0010CE  90D8               	bcf	status,0,c
  6032  0010D0  3787               	rlcf	___flmul@prod& (0+255),f,b
  6033  0010D2  3788               	rlcf	(___flmul@prod+1)& (0+255),f,b
  6034  0010D4  3789               	rlcf	(___flmul@prod+2)& (0+255),f,b
  6035  0010D6  378A               	rlcf	(___flmul@prod+3)& (0+255),f,b
  6036                           
  6037                           ; BSR set to: 0
  6038  0010D8  BF86               	btfsc	(___flmul@grs+3)& (0+255),7,b
  6039                           
  6040                           ; BSR set to: 0
  6041  0010DA  8187               	bsf	___flmul@prod& (0+255),0,b
  6042                           
  6043                           ; BSR set to: 0
  6044  0010DC  90D8               	bcf	status,0,c
  6045  0010DE  3783               	rlcf	___flmul@grs& (0+255),f,b
  6046  0010E0  3784               	rlcf	(___flmul@grs+1)& (0+255),f,b
  6047  0010E2  3785               	rlcf	(___flmul@grs+2)& (0+255),f,b
  6048  0010E4  3786               	rlcf	(___flmul@grs+3)& (0+255),f,b
  6049  0010E6  078B               	decf	___flmul@temp& (0+255),f,b
  6050  0010E8  A0D8               	btfss	status,0,c
  6051  0010EA  078C               	decf	(___flmul@temp+1)& (0+255),f,b
  6052  0010EC                     l4118:
  6053  0010EC  FFFF               	dw	65535	; assembler added errata NOP
  6054                           
  6055                           ; BSR set to: 0
  6056  0010EE  AF89               	btfss	(___flmul@prod+2)& (0+255),7,b
  6057  0010F0  D7ED               	goto	l4112
  6058                           
  6059                           ; BSR set to: 0
  6060  0010F2  6B81               	clrf	___flmul@aexp& (0+255),b
  6061  0010F4  AF86               	btfss	(___flmul@grs+3)& (0+255),7,b
  6062  0010F6  D014               	goto	l1024
  6063                           
  6064                           ; BSR set to: 0
  6065  0010F8  5183               	movf	___flmul@grs& (0+255),w,b
  6066  0010FA  6E66               	movwf	??___flmul& (0+255),c
  6067  0010FC  5184               	movf	(___flmul@grs+1)& (0+255),w,b
  6068  0010FE  6E67               	movwf	(??___flmul+1)& (0+255),c
  6069  001100  5185               	movf	(___flmul@grs+2)& (0+255),w,b
  6070  001102  6E68               	movwf	(??___flmul+2)& (0+255),c
  6071  001104  0E7F               	movlw	127
  6072  001106  1586               	andwf	(___flmul@grs+3)& (0+255),w,b
  6073  001108  6E69               	movwf	(??___flmul+3)& (0+255),c
  6074  00110A  5066               	movf	??___flmul,w,c
  6075  00110C  1067               	iorwf	??___flmul+1,w,c
  6076  00110E  1068               	iorwf	??___flmul+2,w,c
  6077  001110  1069               	iorwf	??___flmul+3,w,c
  6078  001112  E004               	bz	l1025
  6079  001114                     u4270:
  6080  001114  FFFF               	dw	65535	; assembler added errata NOP
  6081                           
  6082                           ; BSR set to: 0
  6083  001116  0E01               	movlw	1
  6084  001118  6F81               	movwf	___flmul@aexp& (0+255),b
  6085  00111A  D002               	goto	l1024
  6086  00111C                     l1025:
  6087                           
  6088                           ; BSR set to: 0
  6089  00111C  B187               	btfsc	___flmul@prod& (0+255),0,b
  6090  00111E  D7FA               	goto	u4270
  6091  001120                     l1024:
  6092  001120  FFFF               	dw	65535	; assembler added errata NOP
  6093                           
  6094                           ; BSR set to: 0
  6095  001122  5181               	movf	___flmul@aexp& (0+255),w,b
  6096  001124  E00E               	bz	l4134
  6097                           
  6098                           ; BSR set to: 0
  6099  001126  2B87               	incf	___flmul@prod& (0+255),f,b
  6100  001128  0E00               	movlw	0
  6101  00112A  2388               	addwfc	(___flmul@prod+1)& (0+255),f,b
  6102  00112C  2389               	addwfc	(___flmul@prod+2)& (0+255),f,b
  6103  00112E  238A               	addwfc	(___flmul@prod+3)& (0+255),f,b
  6104                           
  6105                           ; BSR set to: 0
  6106  001130  A18A               	btfss	(___flmul@prod+3)& (0+255),0,b
  6107  001132  D007               	goto	l4134
  6108                           
  6109                           ; BSR set to: 0
  6110  001134  358A               	rlcf	(___flmul@prod+3)& (0+255),w,b
  6111  001136  338A               	rrcf	(___flmul@prod+3)& (0+255),f,b
  6112  001138  3389               	rrcf	(___flmul@prod+2)& (0+255),f,b
  6113  00113A  3388               	rrcf	(___flmul@prod+1)& (0+255),f,b
  6114  00113C  3387               	rrcf	___flmul@prod& (0+255),f,b
  6115                           
  6116                           ; BSR set to: 0
  6117  00113E  4B8B               	infsnz	___flmul@temp& (0+255),f,b
  6118  001140  2B8C               	incf	(___flmul@temp+1)& (0+255),f,b
  6119  001142                     l4134:
  6120  001142  FFFF               	dw	65535	; assembler added errata NOP
  6121                           
  6122                           ; BSR set to: 0
  6123  001144  BF8C               	btfsc	(___flmul@temp+1)& (0+255),7,b
  6124  001146  D00A               	goto	l4138
  6125  001148  518C               	movf	(___flmul@temp+1)& (0+255),w,b
  6126  00114A  E102               	bnz	u4310
  6127  00114C  298B               	incf	___flmul@temp& (0+255),w,b
  6128  00114E  E306               	bnc	l4138
  6129  001150                     u4310:
  6130                           
  6131                           ; BSR set to: 0
  6132  001150  6B87               	clrf	___flmul@prod& (0+255),b
  6133  001152  6B88               	clrf	(___flmul@prod+1)& (0+255),b
  6134  001154  0E80               	movlw	128
  6135  001156  6F89               	movwf	(___flmul@prod+2)& (0+255),b
  6136  001158  0E7F               	movlw	127
  6137  00115A  D017               	goto	L7
  6138  00115C                     l4138:
  6139  00115C  FFFF               	dw	65535	; assembler added errata NOP
  6140                           
  6141                           ; BSR set to: 0
  6142  00115E  BF8C               	btfsc	(___flmul@temp+1)& (0+255),7,b
  6143  001160  D004               	goto	u4320
  6144  001162  518C               	movf	(___flmul@temp+1)& (0+255),w,b
  6145  001164  E109               	bnz	l1032
  6146  001166  058B               	decf	___flmul@temp& (0+255),w,b
  6147  001168  E207               	bc	l1032
  6148  00116A                     u4320:
  6149  00116A  FFFF               	dw	65535	; assembler added errata NOP
  6150                           
  6151                           ; BSR set to: 0
  6152  00116C  6B87               	clrf	___flmul@prod& (0+255),b
  6153  00116E  6B88               	clrf	(___flmul@prod+1)& (0+255),b
  6154  001170  6B89               	clrf	(___flmul@prod+2)& (0+255),b
  6155  001172  6B8A               	clrf	(___flmul@prod+3)& (0+255),b
  6156  001174  6B80               	clrf	___flmul@sign& (0+255),b
  6157  001176  D00B               	goto	l4150
  6158  001178                     l1032:
  6159                           
  6160                           ; BSR set to: 0
  6161  001178  C08B  F082         	movff	___flmul@temp,___flmul@bexp
  6162                           
  6163                           ; BSR set to: 0
  6164  00117C  0E7F               	movlw	127
  6165  00117E  1789               	andwf	(___flmul@prod+2)& (0+255),f,b
  6166  001180  6B8A               	clrf	(___flmul@prod+3)& (0+255),b
  6167                           
  6168                           ; BSR set to: 0
  6169  001182  B182               	btfsc	___flmul@bexp& (0+255),0,b
  6170                           
  6171                           ; BSR set to: 0
  6172  001184  8F89               	bsf	(___flmul@prod+2)& (0+255),7,b
  6173                           
  6174                           ; BSR set to: 0
  6175  001186  90D8               	bcf	status,0,c
  6176  001188  3182               	rrcf	___flmul@bexp& (0+255),w,b
  6177  00118A                     L7:
  6178  00118A  FFFF               	dw	65535	; assembler added errata NOP
  6179  00118C  6F8A               	movwf	(___flmul@prod+3)& (0+255),b
  6180  00118E                     l4150:
  6181  00118E  FFFF               	dw	65535	; assembler added errata NOP
  6182                           
  6183                           ; BSR set to: 0
  6184  001190  5180               	movf	___flmul@sign& (0+255),w,b
  6185  001192  138A               	iorwf	(___flmul@prod+3)& (0+255),f,b
  6186                           
  6187                           ; BSR set to: 0
  6188  001194  C087  F05E         	movff	___flmul@prod,?___flmul
  6189  001198  C088  F05F         	movff	___flmul@prod+1,?___flmul+1
  6190  00119C  C089  F060         	movff	___flmul@prod+2,?___flmul+2
  6191  0011A0  C08A  F061         	movff	___flmul@prod+3,?___flmul+3
  6192  0011A4                     l1019:
  6193  0011A4  FFFF               	dw	65535	; assembler added errata NOP
  6194                           
  6195                           ; BSR set to: 0
  6196  0011A6  0012               	return		;funcret
  6197  0011A8  FFFF               	dw	65535	; errata NOP
  6198  0011AA                     __end_of___flmul:
  6199                           	opt stack 0
  6200                           tblptru	equ	0xFF8
  6201                           tblptrh	equ	0xFF7
  6202                           tblptrl	equ	0xFF6
  6203                           tablat	equ	0xFF5
  6204                           prodh	equ	0xFF4
  6205                           prodl	equ	0xFF3
  6206                           intcon	equ	0xFF2
  6207                           intcon2	equ	0xFF1
  6208                           postinc0	equ	0xFEE
  6209                           wreg	equ	0xFE8
  6210                           postdec1	equ	0xFE5
  6211                           fsr1l	equ	0xFE1
  6212                           postinc2	equ	0xFDE
  6213                           postdec2	equ	0xFDD
  6214                           fsr2h	equ	0xFDA
  6215                           fsr2l	equ	0xFD9
  6216                           status	equ	0xFD8
  6217                           
  6218 ;; *************** function ___fladd *****************
  6219 ;; Defined at:
  6220 ;;		line 10 in file "/opt/microchip/xc8/v1.45/sources/common/sprcadd.c"
  6221 ;; Parameters:    Size  Location     Type
  6222 ;;  b               4   77[COMRAM] unsigned char 
  6223 ;;  a               4   81[COMRAM] unsigned char 
  6224 ;; Auto vars:     Size  Location     Type
  6225 ;;  grs             1   92[COMRAM] unsigned char 
  6226 ;;  bexp            1   91[COMRAM] unsigned char 
  6227 ;;  aexp            1   90[COMRAM] unsigned char 
  6228 ;;  signs           1   89[COMRAM] unsigned char 
  6229 ;; Return value:  Size  Location     Type
  6230 ;;                  4   77[COMRAM] unsigned char 
  6231 ;; Registers used:
  6232 ;;		wreg, status,2, status,0
  6233 ;; Tracked objects:
  6234 ;;		On entry : 0/0
  6235 ;;		On exit  : 0/0
  6236 ;;		Unchanged: 0/0
  6237 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6238 ;;      Params:         8       0       0       0       0       0       0
  6239 ;;      Locals:         4       0       0       0       0       0       0
  6240 ;;      Temps:          4       0       0       0       0       0       0
  6241 ;;      Totals:        16       0       0       0       0       0       0
  6242 ;;Total ram usage:       16 bytes
  6243 ;; Hardware stack levels used:    1
  6244 ;; Hardware stack levels required when called:    2
  6245 ;; This function calls:
  6246 ;;		Nothing
  6247 ;; This function is called by:
  6248 ;;		_floor
  6249 ;;		_log
  6250 ;;		___flsub
  6251 ;;		_eval_poly
  6252 ;; This function uses a non-reentrant model
  6253 ;;
  6254                           
  6255                           	psect	text26
  6256  0011AA                     __ptext26:
  6257                           	opt stack 0
  6258  0011AA                     ___fladd:
  6259                           	opt stack 0
  6260  0011AA  FFFF               	dw	65535	; assembler added errata NOP
  6261                           
  6262                           ; BSR set to: 0
  6263                           ;incstack = 0
  6264  0011AC  5051               	movf	___fladd@b+3,w,c
  6265  0011AE  0B80               	andlw	128
  6266  0011B0  6E5A               	movwf	___fladd@signs,c
  6267  0011B2  5051               	movf	___fladd@b+3,w,c
  6268  0011B4  2451               	addwf	___fladd@b+3,w,c
  6269  0011B6  6E5C               	movwf	___fladd@bexp,c
  6270  0011B8  BE50               	btfsc	___fladd@b+2,7,c
  6271  0011BA  805C               	bsf	___fladd@bexp,0,c
  6272  0011BC  505C               	movf	___fladd@bexp,w,c
  6273  0011BE  E008               	bz	l918
  6274  0011C0  285C               	incf	___fladd@bexp,w,c
  6275  0011C2  E104               	bnz	l3866
  6276  0011C4  6A4E               	clrf	___fladd@b,c
  6277  0011C6  6A4F               	clrf	___fladd@b+1,c
  6278  0011C8  6A50               	clrf	___fladd@b+2,c
  6279  0011CA  6A51               	clrf	___fladd@b+3,c
  6280  0011CC                     l3866:
  6281  0011CC  8E50               	bsf	___fladd@b+2,7,c
  6282  0011CE  D003               	goto	L8
  6283  0011D0                     l918:
  6284  0011D0  6A4E               	clrf	___fladd@b,c
  6285  0011D2  6A4F               	clrf	___fladd@b+1,c
  6286  0011D4  6A50               	clrf	___fladd@b+2,c
  6287  0011D6                     L8:
  6288  0011D6  FFFF               	dw	65535	; assembler added errata NOP
  6289  0011D8  6A51               	clrf	___fladd@b+3,c
  6290  0011DA  5055               	movf	___fladd@a+3,w,c
  6291  0011DC  0B80               	andlw	128
  6292  0011DE  6E5B               	movwf	___fladd@aexp,c
  6293  0011E0  185A               	xorwf	___fladd@signs,w,c
  6294  0011E2  E001               	bz	l3874
  6295  0011E4  8C5A               	bsf	___fladd@signs,6,c
  6296  0011E6                     l3874:
  6297  0011E6  5055               	movf	___fladd@a+3,w,c
  6298  0011E8  2455               	addwf	___fladd@a+3,w,c
  6299  0011EA  6E5B               	movwf	___fladd@aexp,c
  6300  0011EC  BE54               	btfsc	___fladd@a+2,7,c
  6301  0011EE  805B               	bsf	___fladd@aexp,0,c
  6302  0011F0  505B               	movf	___fladd@aexp,w,c
  6303  0011F2  E008               	bz	l923
  6304  0011F4  285B               	incf	___fladd@aexp,w,c
  6305  0011F6  E104               	bnz	l3886
  6306  0011F8  6A52               	clrf	___fladd@a,c
  6307  0011FA  6A53               	clrf	___fladd@a+1,c
  6308  0011FC  6A54               	clrf	___fladd@a+2,c
  6309  0011FE  6A55               	clrf	___fladd@a+3,c
  6310  001200                     l3886:
  6311  001200  8E54               	bsf	___fladd@a+2,7,c
  6312  001202  D003               	goto	L9
  6313  001204                     l923:
  6314  001204  6A52               	clrf	___fladd@a,c
  6315  001206  6A53               	clrf	___fladd@a+1,c
  6316  001208  6A54               	clrf	___fladd@a+2,c
  6317  00120A                     L9:
  6318  00120A  FFFF               	dw	65535	; assembler added errata NOP
  6319  00120C  6A55               	clrf	___fladd@a+3,c
  6320  00120E  505C               	movf	___fladd@bexp,w,c
  6321  001210  5C5B               	subwf	___fladd@aexp,w,c
  6322  001212  E223               	bc	l3926
  6323  001214  AC5A               	btfss	___fladd@signs,6,c
  6324  001216  D002               	goto	l3896
  6325  001218  0E80               	movlw	128
  6326  00121A  1A5A               	xorwf	___fladd@signs,f,c
  6327  00121C                     l3896:
  6328  00121C  FFFF               	dw	65535	; assembler added errata NOP
  6329  00121E  C05C  F05D         	movff	___fladd@bexp,___fladd@grs
  6330  001222  C05B  F05C         	movff	___fladd@aexp,___fladd@bexp
  6331  001226  C05D  F05B         	movff	___fladd@grs,___fladd@aexp
  6332  00122A  C04E  F05D         	movff	___fladd@b,___fladd@grs
  6333  00122E  C052  F04E         	movff	___fladd@a,___fladd@b
  6334  001232  C05D  F052         	movff	___fladd@grs,___fladd@a
  6335  001236  C04F  F05D         	movff	___fladd@b+1,___fladd@grs
  6336  00123A  C053  F04F         	movff	___fladd@a+1,___fladd@b+1
  6337  00123E  C05D  F053         	movff	___fladd@grs,___fladd@a+1
  6338  001242  C050  F05D         	movff	___fladd@b+2,___fladd@grs
  6339  001246  C054  F050         	movff	___fladd@a+2,___fladd@b+2
  6340  00124A  C05D  F054         	movff	___fladd@grs,___fladd@a+2
  6341  00124E  C051  F05D         	movff	___fladd@b+3,___fladd@grs
  6342  001252  C055  F051         	movff	___fladd@a+3,___fladd@b+3
  6343  001256  C05D  F055         	movff	___fladd@grs,___fladd@a+3
  6344  00125A                     l3926:
  6345  00125A  6A5D               	clrf	___fladd@grs,c
  6346  00125C  505C               	movf	___fladd@bexp,w,c
  6347  00125E  C05B  F056         	movff	___fladd@aexp,??___fladd
  6348  001262  6A57               	clrf	(??___fladd+1)& (0+255),c
  6349  001264  5E56               	subwf	??___fladd,f,c
  6350  001266  0E00               	movlw	0
  6351  001268  5A57               	subwfb	??___fladd+1,f,c
  6352  00126A  BE57               	btfsc	??___fladd+1,7,c
  6353  00126C  D027               	goto	l930
  6354  00126E  5057               	movf	??___fladd+1,w,c
  6355  001270  E103               	bnz	u3860
  6356  001272  0E1A               	movlw	26
  6357  001274  5C56               	subwf	??___fladd,w,c
  6358  001276  E322               	bnc	l930
  6359  001278                     u3860:
  6360  001278  504E               	movf	___fladd@b,w,c
  6361  00127A  104F               	iorwf	___fladd@b+1,w,c
  6362  00127C  1050               	iorwf	___fladd@b+2,w,c
  6363  00127E  1051               	iorwf	___fladd@b+3,w,c
  6364  001280  0E01               	movlw	1
  6365  001282  B4D8               	btfsc	status,2,c
  6366  001284  0E00               	movlw	0
  6367  001286  6E5D               	movwf	___fladd@grs,c
  6368  001288  6A4E               	clrf	___fladd@b,c
  6369  00128A  6A4F               	clrf	___fladd@b+1,c
  6370  00128C  6A50               	clrf	___fladd@b+2,c
  6371  00128E  6A51               	clrf	___fladd@b+3,c
  6372  001290  C05B  F05C         	movff	___fladd@aexp,___fladd@bexp
  6373  001294  D017               	goto	u3910
  6374  001296                     l931:
  6375  001296  A05D               	btfss	___fladd@grs,0,c
  6376  001298  D005               	goto	l3936
  6377  00129A  90D8               	bcf	status,0,c
  6378  00129C  305D               	rrcf	___fladd@grs,w,c
  6379  00129E  0901               	iorlw	1
  6380  0012A0  6E5D               	movwf	___fladd@grs,c
  6381  0012A2  D003               	goto	l3938
  6382  0012A4                     l3936:
  6383  0012A4  FFFF               	dw	65535	; assembler added errata NOP
  6384  0012A6  90D8               	bcf	status,0,c
  6385  0012A8  325D               	rrcf	___fladd@grs,f,c
  6386  0012AA                     l3938:
  6387  0012AA  FFFF               	dw	65535	; assembler added errata NOP
  6388  0012AC  B04E               	btfsc	___fladd@b,0,c
  6389  0012AE  8E5D               	bsf	___fladd@grs,7,c
  6390  0012B0  3451               	rlcf	___fladd@b+3,w,c
  6391  0012B2  3251               	rrcf	___fladd@b+3,f,c
  6392  0012B4  3250               	rrcf	___fladd@b+2,f,c
  6393  0012B6  324F               	rrcf	___fladd@b+1,f,c
  6394  0012B8  324E               	rrcf	___fladd@b,f,c
  6395  0012BA  2A5C               	incf	___fladd@bexp,f,c
  6396  0012BC                     l930:
  6397  0012BC  FFFF               	dw	65535	; assembler added errata NOP
  6398  0012BE  505B               	movf	___fladd@aexp,w,c
  6399  0012C0  5C5C               	subwf	___fladd@bexp,w,c
  6400  0012C2  E3E9               	bnc	l931
  6401  0012C4                     u3910:
  6402  0012C4  FFFF               	dw	65535	; assembler added errata NOP
  6403  0012C6  BC5A               	btfsc	___fladd@signs,6,c
  6404  0012C8  D022               	goto	l3968
  6405  0012CA  505C               	movf	___fladd@bexp,w,c
  6406  0012CC  E101               	bnz	l3950
  6407  0012CE  D060               	goto	u4000
  6408  0012D0                     l3950:
  6409  0012D0  5052               	movf	___fladd@a,w,c
  6410  0012D2  264E               	addwf	___fladd@b,f,c
  6411  0012D4  5053               	movf	___fladd@a+1,w,c
  6412  0012D6  224F               	addwfc	___fladd@b+1,f,c
  6413  0012D8  5054               	movf	___fladd@a+2,w,c
  6414  0012DA  2250               	addwfc	___fladd@b+2,f,c
  6415  0012DC  5055               	movf	___fladd@a+3,w,c
  6416  0012DE  2251               	addwfc	___fladd@b+3,f,c
  6417  0012E0  A051               	btfss	___fladd@b+3,0,c
  6418  0012E2  D071               	goto	u4040
  6419  0012E4  A05D               	btfss	___fladd@grs,0,c
  6420  0012E6  D006               	goto	l3958
  6421  0012E8  90D8               	bcf	status,0,c
  6422  0012EA  325D               	rrcf	___fladd@grs,f,c
  6423  0012EC  505D               	movf	___fladd@grs,w,c
  6424  0012EE  0901               	iorlw	1
  6425  0012F0  6E5D               	movwf	___fladd@grs,c
  6426  0012F2  D003               	goto	l3960
  6427  0012F4                     l3958:
  6428  0012F4  FFFF               	dw	65535	; assembler added errata NOP
  6429  0012F6  90D8               	bcf	status,0,c
  6430  0012F8  325D               	rrcf	___fladd@grs,f,c
  6431  0012FA                     l3960:
  6432  0012FA  FFFF               	dw	65535	; assembler added errata NOP
  6433  0012FC  B04E               	btfsc	___fladd@b,0,c
  6434  0012FE  8E5D               	bsf	___fladd@grs,7,c
  6435  001300  3451               	rlcf	___fladd@b+3,w,c
  6436  001302  3251               	rrcf	___fladd@b+3,f,c
  6437  001304  3250               	rrcf	___fladd@b+2,f,c
  6438  001306  324F               	rrcf	___fladd@b+1,f,c
  6439  001308  324E               	rrcf	___fladd@b,f,c
  6440  00130A  2A5C               	incf	___fladd@bexp,f,c
  6441  00130C  D05C               	goto	u4040
  6442  00130E                     l3968:
  6443  00130E  FFFF               	dw	65535	; assembler added errata NOP
  6444  001310  5052               	movf	___fladd@a,w,c
  6445  001312  5C4E               	subwf	___fladd@b,w,c
  6446  001314  5053               	movf	___fladd@a+1,w,c
  6447  001316  584F               	subwfb	___fladd@b+1,w,c
  6448  001318  5054               	movf	___fladd@a+2,w,c
  6449  00131A  5850               	subwfb	___fladd@b+2,w,c
  6450  00131C  5051               	movf	___fladd@b+3,w,c
  6451  00131E  0A80               	xorlw	128
  6452  001320  6E56               	movwf	??___fladd& (0+255),c
  6453  001322  5055               	movf	___fladd@a+3,w,c
  6454  001324  0A80               	xorlw	128
  6455  001326  5856               	subwfb	??___fladd& (0+255),w,c
  6456  001328  E223               	bc	l3978
  6457  00132A  504E               	movf	___fladd@b,w,c
  6458  00132C  5C52               	subwf	___fladd@a,w,c
  6459  00132E  6E56               	movwf	??___fladd& (0+255),c
  6460  001330  504F               	movf	___fladd@b+1,w,c
  6461  001332  5853               	subwfb	___fladd@a+1,w,c
  6462  001334  6E57               	movwf	(??___fladd+1)& (0+255),c
  6463  001336  5050               	movf	___fladd@b+2,w,c
  6464  001338  5854               	subwfb	___fladd@a+2,w,c
  6465  00133A  6E58               	movwf	(??___fladd+2)& (0+255),c
  6466  00133C  5051               	movf	___fladd@b+3,w,c
  6467  00133E  5855               	subwfb	___fladd@a+3,w,c
  6468  001340  6E59               	movwf	(??___fladd+3)& (0+255),c
  6469  001342  0EFF               	movlw	255
  6470  001344  2456               	addwf	??___fladd,w,c
  6471  001346  6E4E               	movwf	___fladd@b,c
  6472  001348  0EFF               	movlw	255
  6473  00134A  2057               	addwfc	??___fladd+1,w,c
  6474  00134C  6E4F               	movwf	___fladd@b+1,c
  6475  00134E  0EFF               	movlw	255
  6476  001350  2058               	addwfc	??___fladd+2,w,c
  6477  001352  6E50               	movwf	___fladd@b+2,c
  6478  001354  0EFF               	movlw	255
  6479  001356  2059               	addwfc	??___fladd+3,w,c
  6480  001358  6E51               	movwf	___fladd@b+3,c
  6481  00135A  0E80               	movlw	128
  6482  00135C  1A5A               	xorwf	___fladd@signs,f,c
  6483  00135E  6C5D               	negf	___fladd@grs,c
  6484  001360  505D               	movf	___fladd@grs,w,c
  6485  001362  E10E               	bnz	l946
  6486  001364  2A4E               	incf	___fladd@b,f,c
  6487  001366  0E00               	movlw	0
  6488  001368  224F               	addwfc	___fladd@b+1,f,c
  6489  00136A  2250               	addwfc	___fladd@b+2,f,c
  6490  00136C  2251               	addwfc	___fladd@b+3,f,c
  6491  00136E  D008               	goto	l946
  6492  001370                     l3978:
  6493  001370  5052               	movf	___fladd@a,w,c
  6494  001372  5E4E               	subwf	___fladd@b,f,c
  6495  001374  5053               	movf	___fladd@a+1,w,c
  6496  001376  5A4F               	subwfb	___fladd@b+1,f,c
  6497  001378  5054               	movf	___fladd@a+2,w,c
  6498  00137A  5A50               	subwfb	___fladd@b+2,f,c
  6499  00137C  5055               	movf	___fladd@a+3,w,c
  6500  00137E  5A51               	subwfb	___fladd@b+3,f,c
  6501  001380                     l946:
  6502  001380  FFFF               	dw	65535	; assembler added errata NOP
  6503  001382  504E               	movf	___fladd@b,w,c
  6504  001384  104F               	iorwf	___fladd@b+1,w,c
  6505  001386  1050               	iorwf	___fladd@b+2,w,c
  6506  001388  1051               	iorwf	___fladd@b+3,w,c
  6507  00138A  E11B               	bnz	l4000
  6508  00138C  505D               	movf	___fladd@grs,w,c
  6509  00138E  E119               	bnz	l4000
  6510  001390                     u4000:
  6511  001390  FFFF               	dw	65535	; assembler added errata NOP
  6512  001392  6A4E               	clrf	?___fladd,c
  6513  001394  6A4F               	clrf	?___fladd+1,c
  6514  001396  6A50               	clrf	?___fladd+2,c
  6515  001398  6A51               	clrf	?___fladd+3,c
  6516  00139A  D056               	goto	l938
  6517  00139C                     l3984:
  6518  00139C  FFFF               	dw	65535	; assembler added errata NOP
  6519  00139E  90D8               	bcf	status,0,c
  6520  0013A0  364E               	rlcf	___fladd@b,f,c
  6521  0013A2  364F               	rlcf	___fladd@b+1,f,c
  6522  0013A4  3650               	rlcf	___fladd@b+2,f,c
  6523  0013A6  3651               	rlcf	___fladd@b+3,f,c
  6524  0013A8  BE5D               	btfsc	___fladd@grs,7,c
  6525  0013AA  804E               	bsf	___fladd@b,0,c
  6526  0013AC  A05D               	btfss	___fladd@grs,0,c
  6527  0013AE  D002               	goto	l3994
  6528  0013B0  80D8               	bsf	status,0,c
  6529  0013B2  D002               	goto	L10
  6530  0013B4                     l3994:
  6531  0013B4  FFFF               	dw	65535	; assembler added errata NOP
  6532  0013B6  90D8               	bcf	status,0,c
  6533  0013B8                     L10:
  6534  0013B8  FFFF               	dw	65535	; assembler added errata NOP
  6535  0013BA  365D               	rlcf	___fladd@grs,f,c
  6536  0013BC  505C               	movf	___fladd@bexp,w,c
  6537  0013BE  E001               	bz	l4000
  6538  0013C0  065C               	decf	___fladd@bexp,f,c
  6539  0013C2                     l4000:
  6540  0013C2  AE50               	btfss	___fladd@b+2,7,c
  6541  0013C4  D7EB               	goto	l3984
  6542  0013C6                     u4040:
  6543  0013C6  FFFF               	dw	65535	; assembler added errata NOP
  6544  0013C8  6A5B               	clrf	___fladd@aexp,c
  6545  0013CA  AE5D               	btfss	___fladd@grs,7,c
  6546  0013CC  D00B               	goto	l955
  6547  0013CE  C05D  F056         	movff	___fladd@grs,??___fladd
  6548  0013D2  0E7F               	movlw	127
  6549  0013D4  1656               	andwf	??___fladd,f,c
  6550  0013D6  E004               	bz	l956
  6551  0013D8                     u4060:
  6552  0013D8  FFFF               	dw	65535	; assembler added errata NOP
  6553  0013DA  0E01               	movlw	1
  6554  0013DC  6E5B               	movwf	___fladd@aexp,c
  6555  0013DE  D002               	goto	l955
  6556  0013E0                     l956:
  6557  0013E0  B04E               	btfsc	___fladd@b,0,c
  6558  0013E2  D7FA               	goto	u4060
  6559  0013E4                     l955:
  6560  0013E4  FFFF               	dw	65535	; assembler added errata NOP
  6561  0013E6  505B               	movf	___fladd@aexp,w,c
  6562  0013E8  E00F               	bz	l4016
  6563  0013EA  2A4E               	incf	___fladd@b,f,c
  6564  0013EC  0E00               	movlw	0
  6565  0013EE  224F               	addwfc	___fladd@b+1,f,c
  6566  0013F0  2250               	addwfc	___fladd@b+2,f,c
  6567  0013F2  2251               	addwfc	___fladd@b+3,f,c
  6568  0013F4  A051               	btfss	___fladd@b+3,0,c
  6569  0013F6  D008               	goto	l4016
  6570  0013F8  3451               	rlcf	___fladd@b+3,w,c
  6571  0013FA  3251               	rrcf	___fladd@b+3,f,c
  6572  0013FC  3250               	rrcf	___fladd@b+2,f,c
  6573  0013FE  324F               	rrcf	___fladd@b+1,f,c
  6574  001400  324E               	rrcf	___fladd@b,f,c
  6575  001402  285C               	incf	___fladd@bexp,w,c
  6576  001404  E001               	bz	l4016
  6577  001406  2A5C               	incf	___fladd@bexp,f,c
  6578  001408                     l4016:
  6579  001408  FFFF               	dw	65535	; assembler added errata NOP
  6580  00140A  285C               	incf	___fladd@bexp,w,c
  6581  00140C  E002               	bz	u4120
  6582  00140E  505C               	movf	___fladd@bexp,w,c
  6583  001410  E107               	bnz	l962
  6584  001412                     u4120:
  6585  001412  6A4E               	clrf	___fladd@b,c
  6586  001414  6A4F               	clrf	___fladd@b+1,c
  6587  001416  6A50               	clrf	___fladd@b+2,c
  6588  001418  6A51               	clrf	___fladd@b+3,c
  6589  00141A  505C               	movf	___fladd@bexp,w,c
  6590  00141C  E101               	bnz	l962
  6591  00141E  6A5A               	clrf	___fladd@signs,c
  6592  001420                     l962:
  6593  001420  A05C               	btfss	___fladd@bexp,0,c
  6594  001422  D002               	goto	l4026
  6595  001424  8E50               	bsf	___fladd@b+2,7,c
  6596  001426  D002               	goto	l4028
  6597  001428                     l4026:
  6598  001428  FFFF               	dw	65535	; assembler added errata NOP
  6599  00142A  9E50               	bcf	___fladd@b+2,7,c
  6600  00142C                     l4028:
  6601  00142C  FFFF               	dw	65535	; assembler added errata NOP
  6602  00142E  90D8               	bcf	status,0,c
  6603  001430  305C               	rrcf	___fladd@bexp,w,c
  6604  001432  6E51               	movwf	___fladd@b+3,c
  6605  001434  BE5A               	btfsc	___fladd@signs,7,c
  6606  001436  8E51               	bsf	___fladd@b+3,7,c
  6607  001438  C04E  F04E         	movff	___fladd@b,?___fladd
  6608  00143C  C04F  F04F         	movff	___fladd@b+1,?___fladd+1
  6609  001440  C050  F050         	movff	___fladd@b+2,?___fladd+2
  6610  001444  C051  F051         	movff	___fladd@b+3,?___fladd+3
  6611  001448                     l938:
  6612  001448  FFFF               	dw	65535	; assembler added errata NOP
  6613  00144A  0012               	return		;funcret
  6614  00144C  FFFF               	dw	65535	; errata NOP
  6615  00144E                     __end_of___fladd:
  6616                           	opt stack 0
  6617                           tblptru	equ	0xFF8
  6618                           tblptrh	equ	0xFF7
  6619                           tblptrl	equ	0xFF6
  6620                           tablat	equ	0xFF5
  6621                           prodh	equ	0xFF4
  6622                           prodl	equ	0xFF3
  6623                           intcon	equ	0xFF2
  6624                           intcon2	equ	0xFF1
  6625                           postinc0	equ	0xFEE
  6626                           wreg	equ	0xFE8
  6627                           postdec1	equ	0xFE5
  6628                           fsr1l	equ	0xFE1
  6629                           postinc2	equ	0xFDE
  6630                           postdec2	equ	0xFDD
  6631                           fsr2h	equ	0xFDA
  6632                           fsr2l	equ	0xFD9
  6633                           status	equ	0xFD8
  6634                           
  6635 ;; *************** function _calibrate *****************
  6636 ;; Defined at:
  6637 ;;		line 26 in file "src/measure.c"
  6638 ;; Parameters:    Size  Location     Type
  6639 ;;		None
  6640 ;; Auto vars:     Size  Location     Type
  6641 ;;  i               1   77[COMRAM] unsigned char 
  6642 ;; Return value:  Size  Location     Type
  6643 ;;                  1    wreg      void 
  6644 ;; Registers used:
  6645 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6646 ;; Tracked objects:
  6647 ;;		On entry : 0/0
  6648 ;;		On exit  : 0/0
  6649 ;;		Unchanged: 0/0
  6650 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6651 ;;      Params:         0       0       0       0       0       0       0
  6652 ;;      Locals:         1       0       0       0       0       0       0
  6653 ;;      Temps:          0       0       0       0       0       0       0
  6654 ;;      Totals:         1       0       0       0       0       0       0
  6655 ;;Total ram usage:        1 bytes
  6656 ;; Hardware stack levels used:    1
  6657 ;; Hardware stack levels required when called:    7
  6658 ;; This function calls:
  6659 ;;		___xxtofl
  6660 ;;		_delay10ms
  6661 ;;		_lcd_clear
  6662 ;;		_lcd_gotoxy
  6663 ;;		_lcd_putch
  6664 ;;		_measure_freq
  6665 ;;		_put_str
  6666 ;; This function is called by:
  6667 ;;		_main
  6668 ;; This function uses a non-reentrant model
  6669 ;;
  6670                           
  6671                           	psect	text27
  6672  002148                     __ptext27:
  6673                           	opt stack 0
  6674  002148                     _calibrate:
  6675                           	opt stack 0
  6676  002148  FFFF               	dw	65535	; assembler added errata NOP
  6677                           
  6678                           ;measure.c: 27: uint8_t i;
  6679                           ;measure.c: 30: lcd_clear();
  6680                           
  6681                           ;incstack = 0
  6682  00214A  EC4F  F016         	call	_lcd_clear	;wreg free
  6683                           
  6684                           ;measure.c: 32: lcd_gotoxy(0, 0);
  6685  00214E  0E00               	movlw	0
  6686  002150  6A0D               	clrf	lcd_gotoxy@row,c
  6687  002152  EC76  F015         	call	_lcd_gotoxy
  6688                           
  6689                           ;measure.c: 33: put_str("Calibrating");
  6690  002156  0E69               	movlw	low STR_6
  6691  002158  6E0E               	movwf	put_str@s,c
  6692  00215A  EC5A  F015         	call	_put_str	;wreg free
  6693                           
  6694                           ;measure.c: 35: lcd_gotoxy(0, 1);
  6695  00215E  0E01               	movlw	1
  6696  002160  6E0D               	movwf	lcd_gotoxy@row,c
  6697  002162  0E00               	movlw	0
  6698  002164  EC76  F015         	call	_lcd_gotoxy
  6699                           
  6700                           ;measure.c: 39: put_str("please wait...");
  6701  002168  0E4D               	movlw	low STR_7
  6702  00216A  6E0E               	movwf	put_str@s,c
  6703  00216C  EC5A  F015         	call	_put_str	;wreg free
  6704                           
  6705                           ;measure.c: 42: LATC &= ~(1 << 5);
  6706  002170  9A8B               	bcf	3979,5,c	;volatile
  6707                           
  6708                           ;measure.c: 44: F1 = (double)measure_freq();
  6709  002172  EC22  F010         	call	_measure_freq	;wreg free
  6710  002176  C03B  F040         	movff	?_measure_freq,___xxtofl@val
  6711  00217A  C03C  F041         	movff	?_measure_freq+1,___xxtofl@val+1
  6712  00217E  6A42               	clrf	___xxtofl@val+2,c
  6713  002180  6A43               	clrf	___xxtofl@val+3,c
  6714  002182  0E00               	movlw	0
  6715  002184  EC73  F00E         	call	___xxtofl
  6716  002188  C040  F0E5         	movff	?___xxtofl,_F1
  6717  00218C  C041  F0E6         	movff	?___xxtofl+1,_F1+1
  6718  002190  C042  F0E7         	movff	?___xxtofl+2,_F1+2
  6719  002194  C043  F0E8         	movff	?___xxtofl+3,_F1+3
  6720                           
  6721                           ;measure.c: 45: delay10ms(50);
  6722  002198  0E32               	movlw	50
  6723  00219A  EC7F  F016         	call	_delay10ms
  6724                           
  6725                           ;measure.c: 47: F1 = (double)measure_freq();
  6726  00219E  EC22  F010         	call	_measure_freq	;wreg free
  6727  0021A2  C03B  F040         	movff	?_measure_freq,___xxtofl@val
  6728  0021A6  C03C  F041         	movff	?_measure_freq+1,___xxtofl@val+1
  6729  0021AA  6A42               	clrf	___xxtofl@val+2,c
  6730  0021AC  6A43               	clrf	___xxtofl@val+3,c
  6731  0021AE  0E00               	movlw	0
  6732  0021B0  EC73  F00E         	call	___xxtofl
  6733  0021B4  C040  F0E5         	movff	?___xxtofl,_F1
  6734  0021B8  C041  F0E6         	movff	?___xxtofl+1,_F1+1
  6735  0021BC  C042  F0E7         	movff	?___xxtofl+2,_F1+2
  6736  0021C0  C043  F0E8         	movff	?___xxtofl+3,_F1+3
  6737                           
  6738                           ;measure.c: 48: LATC |= (1 << 5);
  6739  0021C4  8A8B               	bsf	3979,5,c	;volatile
  6740                           
  6741                           ;measure.c: 50: F2 = (double)measure_freq();
  6742  0021C6  EC22  F010         	call	_measure_freq	;wreg free
  6743  0021CA  C03B  F040         	movff	?_measure_freq,___xxtofl@val
  6744  0021CE  C03C  F041         	movff	?_measure_freq+1,___xxtofl@val+1
  6745  0021D2  6A42               	clrf	___xxtofl@val+2,c
  6746  0021D4  6A43               	clrf	___xxtofl@val+3,c
  6747  0021D6  0E00               	movlw	0
  6748  0021D8  EC73  F00E         	call	___xxtofl
  6749  0021DC  C040  F0DF         	movff	?___xxtofl,_F2
  6750  0021E0  C041  F0E0         	movff	?___xxtofl+1,_F2+1
  6751  0021E4  C042  F0E1         	movff	?___xxtofl+2,_F2+2
  6752  0021E8  C043  F0E2         	movff	?___xxtofl+3,_F2+3
  6753                           
  6754                           ;measure.c: 51: delay10ms(50);
  6755  0021EC  0E32               	movlw	50
  6756  0021EE  EC7F  F016         	call	_delay10ms
  6757                           
  6758                           ;measure.c: 53: F2 = (double)measure_freq();
  6759  0021F2  EC22  F010         	call	_measure_freq	;wreg free
  6760  0021F6  C03B  F040         	movff	?_measure_freq,___xxtofl@val
  6761  0021FA  C03C  F041         	movff	?_measure_freq+1,___xxtofl@val+1
  6762  0021FE  6A42               	clrf	___xxtofl@val+2,c
  6763  002200  6A43               	clrf	___xxtofl@val+3,c
  6764  002202  0E00               	movlw	0
  6765  002204  EC73  F00E         	call	___xxtofl
  6766  002208  C040  F0DF         	movff	?___xxtofl,_F2
  6767  00220C  C041  F0E0         	movff	?___xxtofl+1,_F2+1
  6768  002210  C042  F0E1         	movff	?___xxtofl+2,_F2+2
  6769  002214  C043  F0E2         	movff	?___xxtofl+3,_F2+3
  6770                           
  6771                           ;measure.c: 54: LATC &= ~(1 << 5);
  6772  002218  9A8B               	bcf	3979,5,c	;volatile
  6773                           
  6774                           ;measure.c: 57: lcd_gotoxy(11, 0);
  6775  00221A  6A0D               	clrf	lcd_gotoxy@row,c
  6776  00221C  0E0B               	movlw	11
  6777  00221E  EC76  F015         	call	_lcd_gotoxy
  6778                           
  6779                           ;measure.c: 58: for(i = 0; i < 6; i++) {
  6780  002222  6A4E               	clrf	calibrate@i,c
  6781  002224                     l4738:
  6782  002224  FFFF               	dw	65535	; assembler added errata NOP
  6783                           
  6784                           ;measure.c: 59: lcd_putch('=');
  6785  002226  0E3D               	movlw	61
  6786  002228  EC5E  F016         	call	_lcd_putch
  6787                           
  6788                           ;measure.c: 61: delay10ms(28);
  6789  00222C  0E1C               	movlw	28
  6790  00222E  EC7F  F016         	call	_delay10ms
  6791  002232  2A4E               	incf	calibrate@i,f,c
  6792  002234  0E05               	movlw	5
  6793  002236  644E               	cpfsgt	calibrate@i,c
  6794  002238  D7F5               	goto	l4738
  6795  00223A  0C05               	retlw	5	;funcret
  6796  00223C  FFFF               	dw	65535	; errata NOP
  6797  00223E                     __end_of_calibrate:
  6798                           	opt stack 0
  6799                           tblptru	equ	0xFF8
  6800                           tblptrh	equ	0xFF7
  6801                           tblptrl	equ	0xFF6
  6802                           tablat	equ	0xFF5
  6803                           prodh	equ	0xFF4
  6804                           prodl	equ	0xFF3
  6805                           intcon	equ	0xFF2
  6806                           intcon2	equ	0xFF1
  6807                           postinc0	equ	0xFEE
  6808                           wreg	equ	0xFE8
  6809                           postdec1	equ	0xFE5
  6810                           fsr1l	equ	0xFE1
  6811                           postinc2	equ	0xFDE
  6812                           postdec2	equ	0xFDD
  6813                           fsr2h	equ	0xFDA
  6814                           fsr2l	equ	0xFD9
  6815                           status	equ	0xFD8
  6816                           
  6817 ;; *************** function _put_str *****************
  6818 ;; Defined at:
  6819 ;;		line 501 in file "src/print.c"
  6820 ;; Parameters:    Size  Location     Type
  6821 ;;  s               1   13[COMRAM] PTR const unsigned char 
  6822 ;;		 -> STR_10(13), STR_9(10), STR_7(15), STR_6(12), 
  6823 ;; Auto vars:     Size  Location     Type
  6824 ;;  i               2   15[COMRAM] int 
  6825 ;; Return value:  Size  Location     Type
  6826 ;;                  1    wreg      void 
  6827 ;; Registers used:
  6828 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6829 ;; Tracked objects:
  6830 ;;		On entry : 0/0
  6831 ;;		On exit  : 0/0
  6832 ;;		Unchanged: 0/0
  6833 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6834 ;;      Params:         1       0       0       0       0       0       0
  6835 ;;      Locals:         2       0       0       0       0       0       0
  6836 ;;      Temps:          1       0       0       0       0       0       0
  6837 ;;      Totals:         4       0       0       0       0       0       0
  6838 ;;Total ram usage:        4 bytes
  6839 ;; Hardware stack levels used:    1
  6840 ;; Hardware stack levels required when called:    6
  6841 ;; This function calls:
  6842 ;;		_output_putch
  6843 ;; This function is called by:
  6844 ;;		_calibrate
  6845 ;;		_measure_capacitance
  6846 ;;		_measure_inductance
  6847 ;; This function uses a non-reentrant model
  6848 ;;
  6849                           
  6850                           	psect	text28
  6851  002AB4                     __ptext28:
  6852                           	opt stack 0
  6853  002AB4                     _put_str:
  6854                           	opt stack 0
  6855  002AB4  FFFF               	dw	65535	; assembler added errata NOP
  6856                           
  6857                           ;print.c: 502: int i;
  6858                           ;print.c: 504: for(i = 0; s[i]; i++) {
  6859                           
  6860                           ;incstack = 0
  6861  002AB6  6A10               	clrf	put_str@i,c
  6862  002AB8  6A11               	clrf	put_str@i+1,c
  6863  002ABA  D00C               	goto	l3374
  6864  002ABC                     l3370:
  6865                           
  6866                           ;print.c: 505: output_putch(s[i]);
  6867  002ABC  500E               	movf	put_str@s,w,c
  6868  002ABE  2410               	addwf	put_str@i,w,c
  6869  002AC0  6E0F               	movwf	??_put_str& (0+255),c
  6870  002AC2  C00F  FFF6         	movff	??_put_str,tblptrl
  6871  002AC6                     	if	0	;There is only one active tblptr byte
  6872  002AC6                     	endif
  6873  002AC6                     	if	0	;tblptru may be non-zero
  6874  002AC6                     	endif
  6875  002AC6                     	if	0	;tblptru may be non-zero
  6876  002AC6                     	endif
  6877  002AC6  0008               	tblrd		*
  6878  002AC8  FFFF               	dw	65535	; errata NOP
  6879  002ACA  50F5               	movf	tablat,w,c
  6880  002ACC  EC76  F016         	call	_output_putch
  6881  002AD0  4A10               	infsnz	put_str@i,f,c
  6882  002AD2  2A11               	incf	put_str@i+1,f,c
  6883  002AD4                     l3374:
  6884  002AD4  FFFF               	dw	65535	; assembler added errata NOP
  6885  002AD6  500E               	movf	put_str@s,w,c
  6886  002AD8  2410               	addwf	put_str@i,w,c
  6887  002ADA  6E0F               	movwf	??_put_str& (0+255),c
  6888  002ADC  C00F  FFF6         	movff	??_put_str,tblptrl
  6889  002AE0                     	if	0	;There is only one active tblptr byte
  6890  002AE0                     	endif
  6891  002AE0                     	if	0	;tblptru may be non-zero
  6892  002AE0                     	endif
  6893  002AE0                     	if	0	;tblptru may be non-zero
  6894  002AE0                     	endif
  6895  002AE0  0008               	tblrd		*
  6896  002AE2  FFFF               	dw	65535	; errata NOP
  6897  002AE4  50F5               	movf	tablat,w,c
  6898  002AE6  E1EA               	bnz	l3370
  6899  002AE8  0012               	return		;funcret
  6900  002AEA  FFFF               	dw	65535	; errata NOP
  6901  002AEC                     __end_of_put_str:
  6902                           	opt stack 0
  6903                           tblptru	equ	0xFF8
  6904                           tblptrh	equ	0xFF7
  6905                           tblptrl	equ	0xFF6
  6906                           tablat	equ	0xFF5
  6907                           prodh	equ	0xFF4
  6908                           prodl	equ	0xFF3
  6909                           intcon	equ	0xFF2
  6910                           intcon2	equ	0xFF1
  6911                           postinc0	equ	0xFEE
  6912                           wreg	equ	0xFE8
  6913                           postdec1	equ	0xFE5
  6914                           fsr1l	equ	0xFE1
  6915                           postinc2	equ	0xFDE
  6916                           postdec2	equ	0xFDD
  6917                           fsr2h	equ	0xFDA
  6918                           fsr2l	equ	0xFD9
  6919                           status	equ	0xFD8
  6920                           
  6921 ;; *************** function _output_putch *****************
  6922 ;; Defined at:
  6923 ;;		line 488 in file "src/print.c"
  6924 ;; Parameters:    Size  Location     Type
  6925 ;;  c               1    wreg     unsigned char 
  6926 ;; Auto vars:     Size  Location     Type
  6927 ;;  c               1   12[COMRAM] unsigned char 
  6928 ;; Return value:  Size  Location     Type
  6929 ;;                  1    wreg      void 
  6930 ;; Registers used:
  6931 ;;		wreg, status,2, status,0, cstack
  6932 ;; Tracked objects:
  6933 ;;		On entry : 0/0
  6934 ;;		On exit  : 0/0
  6935 ;;		Unchanged: 0/0
  6936 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6937 ;;      Params:         0       0       0       0       0       0       0
  6938 ;;      Locals:         1       0       0       0       0       0       0
  6939 ;;      Temps:          0       0       0       0       0       0       0
  6940 ;;      Totals:         1       0       0       0       0       0       0
  6941 ;;Total ram usage:        1 bytes
  6942 ;; Hardware stack levels used:    1
  6943 ;; Hardware stack levels required when called:    5
  6944 ;; This function calls:
  6945 ;;		_lcd_putch
  6946 ;; This function is called by:
  6947 ;;		_put_str
  6948 ;; This function uses a non-reentrant model
  6949 ;;
  6950                           
  6951                           	psect	text29
  6952  002CEC                     __ptext29:
  6953                           	opt stack 0
  6954  002CEC                     _output_putch:
  6955                           	opt stack 0
  6956  002CEC  FFFF               	dw	65535	; assembler added errata NOP
  6957                           
  6958                           ;incstack = 0
  6959                           ;output_putch@c stored from wreg
  6960  002CEE  6E0D               	movwf	output_putch@c,c
  6961                           
  6962                           ;print.c: 490: lcd_putch(c);
  6963  002CF0  500D               	movf	output_putch@c,w,c
  6964  002CF2  EF5E  F016         	goto	_lcd_putch
  6965  002CF6  FFFF               	dw	65535	; errata NOP
  6966  002CF8                     __end_of_output_putch:
  6967                           	opt stack 0
  6968                           tblptru	equ	0xFF8
  6969                           tblptrh	equ	0xFF7
  6970                           tblptrl	equ	0xFF6
  6971                           tablat	equ	0xFF5
  6972                           prodh	equ	0xFF4
  6973                           prodl	equ	0xFF3
  6974                           intcon	equ	0xFF2
  6975                           intcon2	equ	0xFF1
  6976                           postinc0	equ	0xFEE
  6977                           wreg	equ	0xFE8
  6978                           postdec1	equ	0xFE5
  6979                           fsr1l	equ	0xFE1
  6980                           postinc2	equ	0xFDE
  6981                           postdec2	equ	0xFDD
  6982                           fsr2h	equ	0xFDA
  6983                           fsr2l	equ	0xFD9
  6984                           status	equ	0xFD8
  6985                           
  6986 ;; *************** function _lcd_putch *****************
  6987 ;; Defined at:
  6988 ;;		line 170 in file "lib/lcd44780.c"
  6989 ;; Parameters:    Size  Location     Type
  6990 ;;  value           1    wreg     unsigned char 
  6991 ;; Auto vars:     Size  Location     Type
  6992 ;;  value           1   11[COMRAM] unsigned char 
  6993 ;; Return value:  Size  Location     Type
  6994 ;;                  1    wreg      void 
  6995 ;; Registers used:
  6996 ;;		wreg, status,2, status,0, cstack
  6997 ;; Tracked objects:
  6998 ;;		On entry : 0/0
  6999 ;;		On exit  : 0/0
  7000 ;;		Unchanged: 0/0
  7001 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7002 ;;      Params:         0       0       0       0       0       0       0
  7003 ;;      Locals:         1       0       0       0       0       0       0
  7004 ;;      Temps:          0       0       0       0       0       0       0
  7005 ;;      Totals:         1       0       0       0       0       0       0
  7006 ;;Total ram usage:        1 bytes
  7007 ;; Hardware stack levels used:    1
  7008 ;; Hardware stack levels required when called:    4
  7009 ;; This function calls:
  7010 ;;		_lcd_send
  7011 ;; This function is called by:
  7012 ;;		_lcd_puts
  7013 ;;		_calibrate
  7014 ;;		_output_putch
  7015 ;; This function uses a non-reentrant model
  7016 ;;
  7017                           
  7018                           	psect	text30
  7019  002CBC                     __ptext30:
  7020                           	opt stack 0
  7021  002CBC                     _lcd_putch:
  7022                           	opt stack 0
  7023  002CBC  FFFF               	dw	65535	; assembler added errata NOP
  7024                           
  7025                           ;incstack = 0
  7026                           ;lcd_putch@value stored from wreg
  7027  002CBE  6E0C               	movwf	lcd_putch@value,c
  7028                           
  7029                           ;lcd44780.c: 171: lcd_send((unsigned char)value, 1);
  7030  002CC0  0E01               	movlw	1
  7031  002CC2  6E0A               	movwf	lcd_send@mode,c
  7032  002CC4  500C               	movf	lcd_putch@value,w,c
  7033  002CC6  EF3F  F016         	goto	_lcd_send
  7034  002CCA  FFFF               	dw	65535	; errata NOP
  7035  002CCC                     __end_of_lcd_putch:
  7036                           	opt stack 0
  7037                           tblptru	equ	0xFF8
  7038                           tblptrh	equ	0xFF7
  7039                           tblptrl	equ	0xFF6
  7040                           tablat	equ	0xFF5
  7041                           prodh	equ	0xFF4
  7042                           prodl	equ	0xFF3
  7043                           intcon	equ	0xFF2
  7044                           intcon2	equ	0xFF1
  7045                           postinc0	equ	0xFEE
  7046                           wreg	equ	0xFE8
  7047                           postdec1	equ	0xFE5
  7048                           fsr1l	equ	0xFE1
  7049                           postinc2	equ	0xFDE
  7050                           postdec2	equ	0xFDD
  7051                           fsr2h	equ	0xFDA
  7052                           fsr2l	equ	0xFD9
  7053                           status	equ	0xFD8
  7054                           
  7055 ;; *************** function _measure_freq *****************
  7056 ;; Defined at:
  7057 ;;		line 73 in file "src/measure.c"
  7058 ;; Parameters:    Size  Location     Type
  7059 ;;		None
  7060 ;; Auto vars:     Size  Location     Type
  7061 ;;  count           2   61[COMRAM] unsigned int 
  7062 ;; Return value:  Size  Location     Type
  7063 ;;                  2   58[COMRAM] unsigned short 
  7064 ;; Registers used:
  7065 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  7066 ;; Tracked objects:
  7067 ;;		On entry : 0/0
  7068 ;;		On exit  : 0/0
  7069 ;;		Unchanged: 0/0
  7070 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7071 ;;      Params:         2       0       0       0       0       0       0
  7072 ;;      Locals:         2       0       0       0       0       0       0
  7073 ;;      Temps:          1       0       0       0       0       0       0
  7074 ;;      Totals:         5       0       0       0       0       0       0
  7075 ;;Total ram usage:        5 bytes
  7076 ;; Hardware stack levels used:    1
  7077 ;; Hardware stack levels required when called:    6
  7078 ;; This function calls:
  7079 ;;		_buffer_init
  7080 ;;		_buffer_puts
  7081 ;;		_format_number
  7082 ;;		_lcd_gotoxy
  7083 ;;		_print_buffer
  7084 ;;		_timer0_read_ps
  7085 ;; This function is called by:
  7086 ;;		_calibrate
  7087 ;;		_measure_capacitance
  7088 ;;		_measure_inductance
  7089 ;; This function uses a non-reentrant model
  7090 ;;
  7091                           
  7092                           	psect	text31
  7093  002044                     __ptext31:
  7094                           	opt stack 0
  7095  002044                     _measure_freq:
  7096                           	opt stack 0
  7097  002044  FFFF               	dw	65535	; assembler added errata NOP
  7098                           
  7099                           ;measure.c: 74: uint16_t count;
  7100                           ;measure.c: 76: INTCONbits.TMR0IF = 0;
  7101                           
  7102                           ;incstack = 0
  7103  002046  94F2               	bcf	intcon,2,c	;volatile
  7104                           
  7105                           ;measure.c: 80: TRISA &= ~0b00010000;
  7106  002048  9892               	bcf	3986,4,c	;volatile
  7107                           
  7108                           ;measure.c: 82: _delay((unsigned long)((20)*(20000000/4000.0)));
  7109  00204A  0E62               	movlw	98
  7110  00204C  6E3D               	movwf	??_measure_freq& (0+255),c
  7111  00204E  0E76               	movlw	118
  7112  002050                     u5377:
  7113  002050  FFFF               	dw	65535	; errata NOP
  7114  002052  2EE8               	decfsz	wreg,f,c
  7115  002054  D7FD               	bra	u5377
  7116  002056  2E3D               	decfsz	??_measure_freq& (0+255),f,c
  7117  002058  D7FB               	bra	u5377
  7118  00205A  D000               	nop2	
  7119                           
  7120                           ;measure.c: 85: TMR0 = 0x00;
  7121  00205C  6AD6               	clrf	4054,c	;volatile
  7122  00205E  6AD7               	clrf	4055,c	;volatile
  7123                           
  7124                           ;measure.c: 90: _delay((unsigned long)((10)*(20000000/4000.0)));
  7125  002060  0E31               	movlw	49
  7126  002062  6E3D               	movwf	??_measure_freq& (0+255),c
  7127  002064  0EBB               	movlw	187
  7128  002066                     u5387:
  7129  002066  FFFF               	dw	65535	; errata NOP
  7130  002068  2EE8               	decfsz	wreg,f,c
  7131  00206A  D7FD               	bra	u5387
  7132  00206C  2E3D               	decfsz	??_measure_freq& (0+255),f,c
  7133  00206E  D7FB               	bra	u5387
  7134                           
  7135                           ;measure.c: 91: _delay((unsigned long)((10)*(20000000/4000.0)));
  7136  002070  0E31               	movlw	49
  7137  002072  6E3D               	movwf	??_measure_freq& (0+255),c
  7138  002074  0EBB               	movlw	187
  7139  002076                     u5397:
  7140  002076  FFFF               	dw	65535	; errata NOP
  7141  002078  2EE8               	decfsz	wreg,f,c
  7142  00207A  D7FD               	bra	u5397
  7143  00207C  2E3D               	decfsz	??_measure_freq& (0+255),f,c
  7144  00207E  D7FB               	bra	u5397
  7145                           
  7146                           ;measure.c: 92: _delay((unsigned long)((10)*(20000000/4000.0)));
  7147  002080  0E31               	movlw	49
  7148  002082  6E3D               	movwf	??_measure_freq& (0+255),c
  7149  002084  0EBB               	movlw	187
  7150  002086                     u5407:
  7151  002086  FFFF               	dw	65535	; errata NOP
  7152  002088  2EE8               	decfsz	wreg,f,c
  7153  00208A  D7FD               	bra	u5407
  7154  00208C  2E3D               	decfsz	??_measure_freq& (0+255),f,c
  7155  00208E  D7FB               	bra	u5407
  7156                           
  7157                           ;measure.c: 93: _delay((unsigned long)((10)*(20000000/4000.0)));
  7158  002090  0E31               	movlw	49
  7159  002092  6E3D               	movwf	??_measure_freq& (0+255),c
  7160  002094  0EBB               	movlw	187
  7161  002096                     u5417:
  7162  002096  FFFF               	dw	65535	; errata NOP
  7163  002098  2EE8               	decfsz	wreg,f,c
  7164  00209A  D7FD               	bra	u5417
  7165  00209C  2E3D               	decfsz	??_measure_freq& (0+255),f,c
  7166  00209E  D7FB               	bra	u5417
  7167                           
  7168                           ;measure.c: 94: _delay((unsigned long)((10)*(20000000/4000.0)));
  7169  0020A0  0E31               	movlw	49
  7170  0020A2  6E3D               	movwf	??_measure_freq& (0+255),c
  7171  0020A4  0EBB               	movlw	187
  7172  0020A6                     u5427:
  7173  0020A6  FFFF               	dw	65535	; errata NOP
  7174  0020A8  2EE8               	decfsz	wreg,f,c
  7175  0020AA  D7FD               	bra	u5427
  7176  0020AC  2E3D               	decfsz	??_measure_freq& (0+255),f,c
  7177  0020AE  D7FB               	bra	u5427
  7178                           
  7179                           ;measure.c: 95: _delay((unsigned long)((10)*(20000000/4000.0)));
  7180  0020B0  0E31               	movlw	49
  7181  0020B2  6E3D               	movwf	??_measure_freq& (0+255),c
  7182  0020B4  0EBB               	movlw	187
  7183  0020B6                     u5437:
  7184  0020B6  FFFF               	dw	65535	; errata NOP
  7185  0020B8  2EE8               	decfsz	wreg,f,c
  7186  0020BA  D7FD               	bra	u5437
  7187  0020BC  2E3D               	decfsz	??_measure_freq& (0+255),f,c
  7188  0020BE  D7FB               	bra	u5437
  7189                           
  7190                           ;measure.c: 96: _delay((unsigned long)((10)*(20000000/4000.0)));
  7191  0020C0  0E31               	movlw	49
  7192  0020C2  6E3D               	movwf	??_measure_freq& (0+255),c
  7193  0020C4  0EBB               	movlw	187
  7194  0020C6                     u5447:
  7195  0020C6  FFFF               	dw	65535	; errata NOP
  7196  0020C8  2EE8               	decfsz	wreg,f,c
  7197  0020CA  D7FD               	bra	u5447
  7198  0020CC  2E3D               	decfsz	??_measure_freq& (0+255),f,c
  7199  0020CE  D7FB               	bra	u5447
  7200                           
  7201                           ;measure.c: 97: _delay((unsigned long)((10)*(20000000/4000.0)));
  7202  0020D0  0E31               	movlw	49
  7203  0020D2  6E3D               	movwf	??_measure_freq& (0+255),c
  7204  0020D4  0EBB               	movlw	187
  7205  0020D6                     u5457:
  7206  0020D6  FFFF               	dw	65535	; errata NOP
  7207  0020D8  2EE8               	decfsz	wreg,f,c
  7208  0020DA  D7FD               	bra	u5457
  7209  0020DC  2E3D               	decfsz	??_measure_freq& (0+255),f,c
  7210  0020DE  D7FB               	bra	u5457
  7211                           
  7212                           ;measure.c: 98: _delay((unsigned long)((10)*(20000000/4000.0)));
  7213  0020E0  0E31               	movlw	49
  7214  0020E2  6E3D               	movwf	??_measure_freq& (0+255),c
  7215  0020E4  0EBB               	movlw	187
  7216  0020E6                     u5467:
  7217  0020E6  FFFF               	dw	65535	; errata NOP
  7218  0020E8  2EE8               	decfsz	wreg,f,c
  7219  0020EA  D7FD               	bra	u5467
  7220  0020EC  2E3D               	decfsz	??_measure_freq& (0+255),f,c
  7221  0020EE  D7FB               	bra	u5467
  7222                           
  7223                           ;measure.c: 99: _delay((unsigned long)((10)*(20000000/4000.0)));
  7224  0020F0  0E31               	movlw	49
  7225  0020F2  6E3D               	movwf	??_measure_freq& (0+255),c
  7226  0020F4  0EBB               	movlw	187
  7227  0020F6                     u5477:
  7228  0020F6  FFFF               	dw	65535	; errata NOP
  7229  0020F8  2EE8               	decfsz	wreg,f,c
  7230  0020FA  D7FD               	bra	u5477
  7231  0020FC  2E3D               	decfsz	??_measure_freq& (0+255),f,c
  7232  0020FE  D7FB               	bra	u5477
  7233                           
  7234                           ;measure.c: 104: TRISA |= 0b00010000;
  7235  002100  8892               	bsf	3986,4,c	;volatile
  7236                           
  7237                           ;measure.c: 107: count = timer0_read_ps();
  7238  002102  ECEF  F014         	call	_timer0_read_ps	;wreg free
  7239  002106  C009  F03E         	movff	?_timer0_read_ps,measure_freq@count
  7240  00210A  C00A  F03F         	movff	?_timer0_read_ps+1,measure_freq@count+1
  7241                           
  7242                           ;measure.c: 110: lcd_gotoxy(0, 1);
  7243  00210E  0E01               	movlw	1
  7244  002110  6E0D               	movwf	lcd_gotoxy@row,c
  7245  002112  0E00               	movlw	0
  7246  002114  EC76  F015         	call	_lcd_gotoxy
  7247                           
  7248                           ;measure.c: 112: buffer_init();
  7249  002118  EC66  F016         	call	_buffer_init	;wreg free
  7250                           
  7251                           ; BSR set to: 1
  7252                           ;measure.c: 113: buffer_puts("Freq=");
  7253  00211C  0E90               	movlw	low STR_8
  7254  00211E  6E0C               	movwf	buffer_puts@x,c
  7255  002120  EC07  F016         	call	_buffer_puts	;wreg free
  7256                           
  7257                           ; BSR set to: 1
  7258                           ;measure.c: 114: format_number(count, 10, 5);
  7259  002124  C03E  F010         	movff	measure_freq@count,format_number@n
  7260  002128  C03F  F011         	movff	measure_freq@count+1,format_number@n+1
  7261  00212C  0E0A               	movlw	10
  7262  00212E  6E12               	movwf	format_number@base,c
  7263  002130  0E05               	movlw	5
  7264  002132  6E13               	movwf	format_number@pad,c
  7265  002134  ECFA  F011         	call	_format_number	;wreg free
  7266                           
  7267                           ;measure.c: 115: print_buffer();
  7268  002138  EC7C  F016         	call	_print_buffer	;wreg free
  7269                           
  7270                           ;measure.c: 117: return count;
  7271  00213C  C03E  F03B         	movff	measure_freq@count,?_measure_freq
  7272  002140  C03F  F03C         	movff	measure_freq@count+1,?_measure_freq+1
  7273  002144  0012               	return		;funcret
  7274  002146  FFFF               	dw	65535	; errata NOP
  7275  002148                     __end_of_measure_freq:
  7276                           	opt stack 0
  7277                           tblptru	equ	0xFF8
  7278                           tblptrh	equ	0xFF7
  7279                           tblptrl	equ	0xFF6
  7280                           tablat	equ	0xFF5
  7281                           prodh	equ	0xFF4
  7282                           prodl	equ	0xFF3
  7283                           intcon	equ	0xFF2
  7284                           intcon2	equ	0xFF1
  7285                           postinc0	equ	0xFEE
  7286                           wreg	equ	0xFE8
  7287                           postdec1	equ	0xFE5
  7288                           fsr1l	equ	0xFE1
  7289                           postinc2	equ	0xFDE
  7290                           postdec2	equ	0xFDD
  7291                           fsr2h	equ	0xFDA
  7292                           fsr2l	equ	0xFD9
  7293                           status	equ	0xFD8
  7294                           
  7295 ;; *************** function _timer0_read_ps *****************
  7296 ;; Defined at:
  7297 ;;		line 77 in file "lib/timer.c"
  7298 ;; Parameters:    Size  Location     Type
  7299 ;;		None
  7300 ;; Auto vars:     Size  Location     Type
  7301 ;;  count           2   13[COMRAM] unsigned int 
  7302 ;;  prev            1   12[COMRAM] unsigned char 
  7303 ;; Return value:  Size  Location     Type
  7304 ;;                  2    8[COMRAM] unsigned short 
  7305 ;; Registers used:
  7306 ;;		wreg, status,2, status,0
  7307 ;; Tracked objects:
  7308 ;;		On entry : 0/0
  7309 ;;		On exit  : 0/0
  7310 ;;		Unchanged: 0/0
  7311 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7312 ;;      Params:         2       0       0       0       0       0       0
  7313 ;;      Locals:         3       0       0       0       0       0       0
  7314 ;;      Temps:          2       0       0       0       0       0       0
  7315 ;;      Totals:         7       0       0       0       0       0       0
  7316 ;;Total ram usage:        7 bytes
  7317 ;; Hardware stack levels used:    1
  7318 ;; Hardware stack levels required when called:    2
  7319 ;; This function calls:
  7320 ;;		Nothing
  7321 ;; This function is called by:
  7322 ;;		_measure_freq
  7323 ;; This function uses a non-reentrant model
  7324 ;;
  7325                           
  7326                           	psect	text32
  7327  0029DE                     __ptext32:
  7328                           	opt stack 0
  7329  0029DE                     _timer0_read_ps:
  7330                           	opt stack 0
  7331  0029DE  FFFF               	dw	65535	; assembler added errata NOP
  7332                           
  7333                           ;timer.c: 78: uint8_t prev = TMR0;
  7334                           
  7335                           ;incstack = 0
  7336  0029E0  CFD6 F00D          	movff	4054,timer0_read_ps@prev	;volatile
  7337                           
  7338                           ;timer.c: 79: uint16_t count = 0;
  7339  0029E4  6A0E               	clrf	timer0_read_ps@count,c
  7340  0029E6  6A0F               	clrf	timer0_read_ps@count+1,c
  7341                           
  7342                           ;timer.c: 81: T0CONbits.T0CS = 1;
  7343  0029E8  8AD5               	bsf	4053,5,c	;volatile
  7344  0029EA                     l310:
  7345                           
  7346                           ;timer.c: 85: T0CONbits.T0SE = 1;
  7347  0029EA  88D5               	bsf	4053,4,c	;volatile
  7348                           
  7349                           ;timer.c: 87: __nop();
  7350  0029EC  F000               	nop	
  7351                           
  7352                           ;timer.c: 88: __nop();
  7353  0029EE  F000               	nop	
  7354                           
  7355                           ;timer.c: 90: T0CONbits.T0SE = 0;
  7356  0029F0  98D5               	bcf	4053,4,c	;volatile
  7357                           
  7358                           ;timer.c: 92: __nop();
  7359  0029F2  F000               	nop	
  7360                           
  7361                           ;timer.c: 93: __nop();
  7362  0029F4  F000               	nop	
  7363                           
  7364                           ;timer.c: 95: ++count;
  7365  0029F6  4A0E               	infsnz	timer0_read_ps@count,f,c
  7366  0029F8  2A0F               	incf	timer0_read_ps@count+1,f,c
  7367                           
  7368                           ;timer.c: 98: } while(prev == TMR0 && count <= 255);
  7369  0029FA  500D               	movf	timer0_read_ps@prev,w,c
  7370  0029FC  18D6               	xorwf	4054,w,c	;volatile
  7371  0029FE  10D7               	iorwf	4055,w,c	;volatile
  7372  002A00  E102               	bnz	u3210
  7373  002A02  040F               	decf	timer0_read_ps@count+1,w,c
  7374  002A04  E3F2               	bnc	l310
  7375  002A06                     u3210:
  7376                           
  7377                           ;timer.c: 100: count = ((prev << 8) + (256 - count));
  7378  002A06  500D               	movf	timer0_read_ps@prev,w,c
  7379  002A08  6E0C               	movwf	(??_timer0_read_ps+1)& (0+255),c
  7380  002A0A  6A0B               	clrf	??_timer0_read_ps& (0+255),c
  7381  002A0C  500E               	movf	timer0_read_ps@count,w,c
  7382  002A0E  5E0B               	subwf	??_timer0_read_ps,f,c
  7383  002A10  500F               	movf	timer0_read_ps@count+1,w,c
  7384  002A12  5A0C               	subwfb	??_timer0_read_ps+1,f,c
  7385  002A14  0E00               	movlw	0
  7386  002A16  240B               	addwf	??_timer0_read_ps,w,c
  7387  002A18  6E0E               	movwf	timer0_read_ps@count,c
  7388  002A1A  0E01               	movlw	1
  7389  002A1C  200C               	addwfc	??_timer0_read_ps+1,w,c
  7390  002A1E  6E0F               	movwf	timer0_read_ps@count+1,c
  7391                           
  7392                           ;timer.c: 101: return count;
  7393  002A20  C00E  F009         	movff	timer0_read_ps@count,?_timer0_read_ps
  7394  002A24  C00F  F00A         	movff	timer0_read_ps@count+1,?_timer0_read_ps+1
  7395  002A28  0012               	return		;funcret
  7396  002A2A  FFFF               	dw	65535	; errata NOP
  7397  002A2C                     __end_of_timer0_read_ps:
  7398                           	opt stack 0
  7399                           tblptru	equ	0xFF8
  7400                           tblptrh	equ	0xFF7
  7401                           tblptrl	equ	0xFF6
  7402                           tablat	equ	0xFF5
  7403                           prodh	equ	0xFF4
  7404                           prodl	equ	0xFF3
  7405                           intcon	equ	0xFF2
  7406                           intcon2	equ	0xFF1
  7407                           postinc0	equ	0xFEE
  7408                           wreg	equ	0xFE8
  7409                           postdec1	equ	0xFE5
  7410                           fsr1l	equ	0xFE1
  7411                           postinc2	equ	0xFDE
  7412                           postdec2	equ	0xFDD
  7413                           fsr2h	equ	0xFDA
  7414                           fsr2l	equ	0xFD9
  7415                           status	equ	0xFD8
  7416                           
  7417 ;; *************** function _print_buffer *****************
  7418 ;; Defined at:
  7419 ;;		line 510 in file "src/print.c"
  7420 ;; Parameters:    Size  Location     Type
  7421 ;;		None
  7422 ;; Auto vars:     Size  Location     Type
  7423 ;;		None
  7424 ;; Return value:  Size  Location     Type
  7425 ;;                  1    wreg      void 
  7426 ;; Registers used:
  7427 ;;		None
  7428 ;; Tracked objects:
  7429 ;;		On entry : 0/1
  7430 ;;		On exit  : 0/0
  7431 ;;		Unchanged: 0/0
  7432 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7433 ;;      Params:         0       0       0       0       0       0       0
  7434 ;;      Locals:         0       0       0       0       0       0       0
  7435 ;;      Temps:          0       0       0       0       0       0       0
  7436 ;;      Totals:         0       0       0       0       0       0       0
  7437 ;;Total ram usage:        0 bytes
  7438 ;; Hardware stack levels used:    1
  7439 ;; Hardware stack levels required when called:    2
  7440 ;; This function calls:
  7441 ;;		Nothing
  7442 ;; This function is called by:
  7443 ;;		_measure_freq
  7444 ;; This function uses a non-reentrant model
  7445 ;;
  7446                           
  7447                           	psect	text33
  7448  002CF8                     __ptext33:
  7449                           	opt stack 0
  7450  002CF8                     _print_buffer:
  7451                           	opt stack 0
  7452  002CF8  FFFF               	dw	65535	; assembler added errata NOP
  7453                           
  7454                           ;incstack = 0
  7455  002CFA  0012               	return		;funcret
  7456  002CFC  FFFF               	dw	65535	; errata NOP
  7457  002CFE                     __end_of_print_buffer:
  7458                           	opt stack 0
  7459                           tblptru	equ	0xFF8
  7460                           tblptrh	equ	0xFF7
  7461                           tblptrl	equ	0xFF6
  7462                           tablat	equ	0xFF5
  7463                           prodh	equ	0xFF4
  7464                           prodl	equ	0xFF3
  7465                           intcon	equ	0xFF2
  7466                           intcon2	equ	0xFF1
  7467                           postinc0	equ	0xFEE
  7468                           wreg	equ	0xFE8
  7469                           postdec1	equ	0xFE5
  7470                           fsr1l	equ	0xFE1
  7471                           postinc2	equ	0xFDE
  7472                           postdec2	equ	0xFDD
  7473                           fsr2h	equ	0xFDA
  7474                           fsr2l	equ	0xFD9
  7475                           status	equ	0xFD8
  7476                           
  7477 ;; *************** function _lcd_gotoxy *****************
  7478 ;; Defined at:
  7479 ;;		line 135 in file "lib/lcd44780.c"
  7480 ;; Parameters:    Size  Location     Type
  7481 ;;  col             1    wreg     unsigned char 
  7482 ;;  row             1   12[COMRAM] unsigned char 
  7483 ;; Auto vars:     Size  Location     Type
  7484 ;;  col             1   13[COMRAM] unsigned char 
  7485 ;;  row_offsets     4   14[COMRAM] unsigned char [4]
  7486 ;; Return value:  Size  Location     Type
  7487 ;;                  1    wreg      void 
  7488 ;; Registers used:
  7489 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7490 ;; Tracked objects:
  7491 ;;		On entry : 0/0
  7492 ;;		On exit  : 0/0
  7493 ;;		Unchanged: 0/0
  7494 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7495 ;;      Params:         1       0       0       0       0       0       0
  7496 ;;      Locals:         5       0       0       0       0       0       0
  7497 ;;      Temps:          0       0       0       0       0       0       0
  7498 ;;      Totals:         6       0       0       0       0       0       0
  7499 ;;Total ram usage:        6 bytes
  7500 ;; Hardware stack levels used:    1
  7501 ;; Hardware stack levels required when called:    5
  7502 ;; This function calls:
  7503 ;;		_lcd_command
  7504 ;; This function is called by:
  7505 ;;		_main
  7506 ;;		_calibrate
  7507 ;;		_measure_freq
  7508 ;;		_measure_capacitance
  7509 ;;		_measure_inductance
  7510 ;;		_print_unit
  7511 ;;		_print_reading
  7512 ;;		_print_indicator
  7513 ;; This function uses a non-reentrant model
  7514 ;;
  7515                           
  7516                           	psect	text34
  7517  002AEC                     __ptext34:
  7518                           	opt stack 0
  7519  002AEC                     _lcd_gotoxy:
  7520                           	opt stack 0
  7521  002AEC  FFFF               	dw	65535	; assembler added errata NOP
  7522                           
  7523                           ;incstack = 0
  7524                           ;lcd_gotoxy@col stored from wreg
  7525  002AEE  6E0E               	movwf	lcd_gotoxy@col,c
  7526                           
  7527                           ;lcd44780.c: 137: uint8_t row_offsets[] = {0x00, 0x40, 0x14, 0x54};
  7528  002AF0  C0F3  F00F         	movff	lcd_gotoxy@F2308,lcd_gotoxy@row_offsets
  7529  002AF4  C0F4  F010         	movff	lcd_gotoxy@F2308+1,lcd_gotoxy@row_offsets+1
  7530  002AF8  C0F5  F011         	movff	lcd_gotoxy@F2308+2,lcd_gotoxy@row_offsets+2
  7531  002AFC  C0F6  F012         	movff	lcd_gotoxy@F2308+3,lcd_gotoxy@row_offsets+3
  7532                           
  7533                           ;lcd44780.c: 146: if(LCD_lines == 1) {
  7534  002B00  0473               	decf	_LCD_lines,w,c
  7535  002B02  E106               	bnz	l3188
  7536                           
  7537                           ;lcd44780.c: 147: row_offsets[1] = 0x14;
  7538  002B04  0E14               	movlw	20
  7539  002B06  6E10               	movwf	lcd_gotoxy@row_offsets+1,c
  7540                           
  7541                           ;lcd44780.c: 148: row_offsets[2] = 0x28;
  7542  002B08  0E28               	movlw	40
  7543  002B0A  6E11               	movwf	lcd_gotoxy@row_offsets+2,c
  7544                           
  7545                           ;lcd44780.c: 149: row_offsets[3] = 0x3C;
  7546  002B0C  0E3C               	movlw	60
  7547  002B0E  6E12               	movwf	lcd_gotoxy@row_offsets+3,c
  7548  002B10                     l3188:
  7549                           
  7550                           ;lcd44780.c: 150: }
  7551                           ;lcd44780.c: 156: lcd_command(0x80 | (col + row_offsets[row]));
  7552  002B10  500D               	movf	lcd_gotoxy@row,w,c
  7553  002B12  0F0F               	addlw	low lcd_gotoxy@row_offsets
  7554  002B14  6ED9               	movwf	fsr2l,c
  7555  002B16  6ADA               	clrf	fsr2h,c
  7556  002B18  50DF               	movf	indf2,w,c
  7557  002B1A  240E               	addwf	lcd_gotoxy@col,w,c
  7558  002B1C  0980               	iorlw	128
  7559  002B1E  EF6E  F016         	goto	_lcd_command
  7560  002B22  FFFF               	dw	65535	; errata NOP
  7561  002B24                     __end_of_lcd_gotoxy:
  7562                           	opt stack 0
  7563                           tblptru	equ	0xFF8
  7564                           tblptrh	equ	0xFF7
  7565                           tblptrl	equ	0xFF6
  7566                           tablat	equ	0xFF5
  7567                           prodh	equ	0xFF4
  7568                           prodl	equ	0xFF3
  7569                           intcon	equ	0xFF2
  7570                           intcon2	equ	0xFF1
  7571                           postinc0	equ	0xFEE
  7572                           wreg	equ	0xFE8
  7573                           postdec1	equ	0xFE5
  7574                           fsr1l	equ	0xFE1
  7575                           indf2	equ	0xFDF
  7576                           postinc2	equ	0xFDE
  7577                           postdec2	equ	0xFDD
  7578                           fsr2h	equ	0xFDA
  7579                           fsr2l	equ	0xFD9
  7580                           status	equ	0xFD8
  7581                           
  7582 ;; *************** function _format_number *****************
  7583 ;; Defined at:
  7584 ;;		line 19 in file "lib/format.c"
  7585 ;; Parameters:    Size  Location     Type
  7586 ;;  n               2   15[COMRAM] unsigned int 
  7587 ;;  base            1   17[COMRAM] unsigned char 
  7588 ;;  pad             1   18[COMRAM] char 
  7589 ;; Auto vars:     Size  Location     Type
  7590 ;;  buf            32   21[COMRAM] unsigned char [32]
  7591 ;;  i               1   57[COMRAM] char 
  7592 ;;  di              1   56[COMRAM] unsigned char 
  7593 ;;  padchar         1   55[COMRAM] unsigned char 
  7594 ;; Return value:  Size  Location     Type
  7595 ;;                  1    wreg      void 
  7596 ;; Registers used:
  7597 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7598 ;; Tracked objects:
  7599 ;;		On entry : 0/0
  7600 ;;		On exit  : 0/0
  7601 ;;		Unchanged: 0/0
  7602 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7603 ;;      Params:         4       0       0       0       0       0       0
  7604 ;;      Locals:        37       0       0       0       0       0       0
  7605 ;;      Temps:          2       0       0       0       0       0       0
  7606 ;;      Totals:        43       0       0       0       0       0       0
  7607 ;;Total ram usage:       43 bytes
  7608 ;; Hardware stack levels used:    1
  7609 ;; Hardware stack levels required when called:    3
  7610 ;; This function calls:
  7611 ;;		___lwdiv
  7612 ;;		___lwmod
  7613 ;;		_buffer_putch
  7614 ;; This function is called by:
  7615 ;;		_measure_freq
  7616 ;;		_print_reading
  7617 ;; This function uses a non-reentrant model
  7618 ;;
  7619                           
  7620                           	psect	text35
  7621  0023F4                     __ptext35:
  7622                           	opt stack 0
  7623  0023F4                     _format_number:
  7624                           	opt stack 0
  7625  0023F4  FFFF               	dw	65535	; assembler added errata NOP
  7626                           
  7627                           ;format.c: 20: char buf[8 * sizeof(long)];
  7628                           ;format.c: 21: uint8_t di;
  7629                           ;format.c: 22: int8_t i = 0;
  7630                           
  7631                           ;incstack = 0
  7632  0023F6  6A3A               	clrf	format_number@i,c
  7633                           
  7634                           ;format.c: 23: char padchar = ' ';
  7635  0023F8  0E20               	movlw	32
  7636  0023FA  6E38               	movwf	format_number@padchar,c
  7637                           
  7638                           ;format.c: 25: if(pad < 0) {
  7639  0023FC  AE13               	btfss	format_number@pad,7,c
  7640  0023FE  D003               	goto	l4484
  7641                           
  7642                           ;format.c: 26: pad = -pad;
  7643  002400  6C13               	negf	format_number@pad,c
  7644                           
  7645                           ;format.c: 27: padchar = '0';
  7646  002402  0E30               	movlw	48
  7647  002404  6E38               	movwf	format_number@padchar,c
  7648  002406                     l4484:
  7649  002406  FFFF               	dw	65535	; assembler added errata NOP
  7650                           
  7651                           ;format.c: 39: di = n % base;
  7652  002408  C010  F009         	movff	format_number@n,___lwmod@dividend
  7653  00240C  C011  F00A         	movff	format_number@n+1,___lwmod@dividend+1
  7654  002410  C012  F00B         	movff	format_number@base,___lwmod@divisor
  7655  002414  6A0C               	clrf	___lwmod@divisor+1,c
  7656  002416  EC16  F015         	call	___lwmod	;wreg free
  7657  00241A  5009               	movf	?___lwmod,w,c
  7658  00241C  6E39               	movwf	format_number@di,c
  7659                           
  7660                           ;format.c: 40: buf[i++] = (di < 10 ? (uint8_t)'0' + di : (uint8_t)'A' + di - 10);
  7661  00241E  0E09               	movlw	9
  7662  002420  6439               	cpfsgt	format_number@di,c
  7663  002422  D002               	goto	l4490
  7664  002424  0E37               	movlw	55
  7665  002426  D002               	goto	L11
  7666  002428                     l4490:
  7667  002428  FFFF               	dw	65535	; assembler added errata NOP
  7668  00242A  0E30               	movlw	48
  7669  00242C                     L11:
  7670  00242C  FFFF               	dw	65535	; assembler added errata NOP
  7671  00242E  2439               	addwf	format_number@di,w,c
  7672  002430  6E36               	movwf	_format_number$293,c
  7673  002432  6A37               	clrf	_format_number$293+1,c
  7674  002434  0E00               	movlw	0
  7675  002436  2237               	addwfc	_format_number$293+1,f,c
  7676  002438  503A               	movf	format_number@i,w,c
  7677  00243A  0F16               	addlw	low format_number@buf
  7678  00243C  6ED9               	movwf	fsr2l,c
  7679  00243E  6ADA               	clrf	fsr2h,c
  7680  002440  C036  FFDF         	movff	_format_number$293,indf2
  7681  002444  2A3A               	incf	format_number@i,f,c
  7682                           
  7683                           ;format.c: 42: n /= base;
  7684  002446  C010  F009         	movff	format_number@n,___lwdiv@dividend
  7685  00244A  C011  F00A         	movff	format_number@n+1,___lwdiv@dividend+1
  7686  00244E  C012  F00B         	movff	format_number@base,___lwdiv@divisor
  7687  002452  6A0C               	clrf	___lwdiv@divisor+1,c
  7688  002454  EC71  F014         	call	___lwdiv	;wreg free
  7689  002458  C009  F010         	movff	?___lwdiv,format_number@n
  7690  00245C  C00A  F011         	movff	?___lwdiv+1,format_number@n+1
  7691                           
  7692                           ;format.c: 43: } while(n > 0);
  7693  002460  5010               	movf	format_number@n,w,c
  7694  002462  1011               	iorwf	format_number@n+1,w,c
  7695  002464  E004               	bz	l4502
  7696  002466  D7CF               	goto	l4484
  7697  002468                     l4500:
  7698  002468  5038               	movf	format_number@padchar,w,c
  7699  00246A  EC9B  F014         	call	_buffer_putch
  7700  00246E                     l4502:
  7701  00246E  0613               	decf	format_number@pad,f,c
  7702  002470  2813               	incf	format_number@pad,w,c
  7703  002472  6E14               	movwf	??_format_number& (0+255),c
  7704  002474  503A               	movf	format_number@i,w,c
  7705  002476  0A80               	xorlw	128
  7706  002478  6E15               	movwf	(??_format_number+1)& (0+255),c
  7707  00247A  5014               	movf	??_format_number,w,c
  7708  00247C  0A80               	xorlw	128
  7709  00247E  5C15               	subwf	(??_format_number+1)& (0+255),w,c
  7710  002480  E3F3               	bnc	l4500
  7711  002482                     u4960:
  7712  002482  FFFF               	dw	65535	; assembler added errata NOP
  7713                           
  7714                           ;format.c: 47: for(; i > 0; i--) {
  7715  002484  503A               	movf	format_number@i,w,c
  7716  002486  0A80               	xorlw	128
  7717  002488  0F7F               	addlw	-129
  7718  00248A  E30C               	bnc	l157
  7719                           
  7720                           ;format.c: 48: buffer_putch((char)buf[(int16_t)i - 1]);
  7721  00248C  C03A  F014         	movff	format_number@i,??_format_number
  7722  002490  0614               	decf	??_format_number,f,c
  7723  002492  5014               	movf	??_format_number,w,c
  7724  002494  0F16               	addlw	low format_number@buf
  7725  002496  6ED9               	movwf	fsr2l,c
  7726  002498  6ADA               	clrf	fsr2h,c
  7727  00249A  50DF               	movf	indf2,w,c
  7728  00249C  EC9B  F014         	call	_buffer_putch
  7729                           
  7730                           ; BSR set to: 1
  7731  0024A0  063A               	decf	format_number@i,f,c
  7732  0024A2  D7EF               	goto	u4960
  7733  0024A4                     l157:
  7734  0024A4  0012               	return		;funcret
  7735  0024A6  FFFF               	dw	65535	; errata NOP
  7736  0024A8                     __end_of_format_number:
  7737                           	opt stack 0
  7738                           tblptru	equ	0xFF8
  7739                           tblptrh	equ	0xFF7
  7740                           tblptrl	equ	0xFF6
  7741                           tablat	equ	0xFF5
  7742                           prodh	equ	0xFF4
  7743                           prodl	equ	0xFF3
  7744                           intcon	equ	0xFF2
  7745                           intcon2	equ	0xFF1
  7746                           postinc0	equ	0xFEE
  7747                           wreg	equ	0xFE8
  7748                           postdec1	equ	0xFE5
  7749                           fsr1l	equ	0xFE1
  7750                           indf2	equ	0xFDF
  7751                           postinc2	equ	0xFDE
  7752                           postdec2	equ	0xFDD
  7753                           fsr2h	equ	0xFDA
  7754                           fsr2l	equ	0xFD9
  7755                           status	equ	0xFD8
  7756                           
  7757 ;; *************** function ___lwmod *****************
  7758 ;; Defined at:
  7759 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/lwmod.c"
  7760 ;; Parameters:    Size  Location     Type
  7761 ;;  dividend        2    8[COMRAM] unsigned int 
  7762 ;;  divisor         2   10[COMRAM] unsigned int 
  7763 ;; Auto vars:     Size  Location     Type
  7764 ;;  counter         1   12[COMRAM] unsigned char 
  7765 ;; Return value:  Size  Location     Type
  7766 ;;                  2    8[COMRAM] unsigned int 
  7767 ;; Registers used:
  7768 ;;		wreg, status,2, status,0
  7769 ;; Tracked objects:
  7770 ;;		On entry : 0/0
  7771 ;;		On exit  : 0/0
  7772 ;;		Unchanged: 0/0
  7773 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7774 ;;      Params:         4       0       0       0       0       0       0
  7775 ;;      Locals:         1       0       0       0       0       0       0
  7776 ;;      Temps:          0       0       0       0       0       0       0
  7777 ;;      Totals:         5       0       0       0       0       0       0
  7778 ;;Total ram usage:        5 bytes
  7779 ;; Hardware stack levels used:    1
  7780 ;; Hardware stack levels required when called:    2
  7781 ;; This function calls:
  7782 ;;		Nothing
  7783 ;; This function is called by:
  7784 ;;		_format_number
  7785 ;;		_print_reading
  7786 ;; This function uses a non-reentrant model
  7787 ;;
  7788                           
  7789                           	psect	text36
  7790  002A2C                     __ptext36:
  7791                           	opt stack 0
  7792  002A2C                     ___lwmod:
  7793                           	opt stack 0
  7794  002A2C  FFFF               	dw	65535	; assembler added errata NOP
  7795                           
  7796                           ;incstack = 0
  7797  002A2E  500B               	movf	___lwmod@divisor,w,c
  7798  002A30  100C               	iorwf	___lwmod@divisor+1,w,c
  7799  002A32  E01A               	bz	l887
  7800  002A34  0E01               	movlw	1
  7801  002A36  6E0D               	movwf	___lwmod@counter,c
  7802  002A38  D005               	goto	l3172
  7803  002A3A                     l3170:
  7804  002A3A  FFFF               	dw	65535	; assembler added errata NOP
  7805  002A3C  90D8               	bcf	status,0,c
  7806  002A3E  360B               	rlcf	___lwmod@divisor,f,c
  7807  002A40  360C               	rlcf	___lwmod@divisor+1,f,c
  7808  002A42  2A0D               	incf	___lwmod@counter,f,c
  7809  002A44                     l3172:
  7810  002A44  FFFF               	dw	65535	; assembler added errata NOP
  7811  002A46  AE0C               	btfss	___lwmod@divisor+1,7,c
  7812  002A48  D7F8               	goto	l3170
  7813  002A4A                     u3100:
  7814  002A4A  FFFF               	dw	65535	; assembler added errata NOP
  7815  002A4C  500B               	movf	___lwmod@divisor,w,c
  7816  002A4E  5C09               	subwf	___lwmod@dividend,w,c
  7817  002A50  500C               	movf	___lwmod@divisor+1,w,c
  7818  002A52  580A               	subwfb	___lwmod@dividend+1,w,c
  7819  002A54  E304               	bnc	l3178
  7820  002A56  500B               	movf	___lwmod@divisor,w,c
  7821  002A58  5E09               	subwf	___lwmod@dividend,f,c
  7822  002A5A  500C               	movf	___lwmod@divisor+1,w,c
  7823  002A5C  5A0A               	subwfb	___lwmod@dividend+1,f,c
  7824  002A5E                     l3178:
  7825  002A5E  90D8               	bcf	status,0,c
  7826  002A60  320C               	rrcf	___lwmod@divisor+1,f,c
  7827  002A62  320B               	rrcf	___lwmod@divisor,f,c
  7828  002A64  2E0D               	decfsz	___lwmod@counter,f,c
  7829  002A66  D7F1               	goto	u3100
  7830  002A68                     l887:
  7831  002A68  C009  F009         	movff	___lwmod@dividend,?___lwmod
  7832  002A6C  C00A  F00A         	movff	___lwmod@dividend+1,?___lwmod+1
  7833  002A70  0012               	return		;funcret
  7834  002A72  FFFF               	dw	65535	; errata NOP
  7835  002A74                     __end_of___lwmod:
  7836                           	opt stack 0
  7837                           tblptru	equ	0xFF8
  7838                           tblptrh	equ	0xFF7
  7839                           tblptrl	equ	0xFF6
  7840                           tablat	equ	0xFF5
  7841                           prodh	equ	0xFF4
  7842                           prodl	equ	0xFF3
  7843                           intcon	equ	0xFF2
  7844                           intcon2	equ	0xFF1
  7845                           postinc0	equ	0xFEE
  7846                           wreg	equ	0xFE8
  7847                           postdec1	equ	0xFE5
  7848                           fsr1l	equ	0xFE1
  7849                           indf2	equ	0xFDF
  7850                           postinc2	equ	0xFDE
  7851                           postdec2	equ	0xFDD
  7852                           fsr2h	equ	0xFDA
  7853                           fsr2l	equ	0xFD9
  7854                           status	equ	0xFD8
  7855                           
  7856 ;; *************** function ___lwdiv *****************
  7857 ;; Defined at:
  7858 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/lwdiv.c"
  7859 ;; Parameters:    Size  Location     Type
  7860 ;;  dividend        2    8[COMRAM] unsigned int 
  7861 ;;  divisor         2   10[COMRAM] unsigned int 
  7862 ;; Auto vars:     Size  Location     Type
  7863 ;;  quotient        2   12[COMRAM] unsigned int 
  7864 ;;  counter         1   14[COMRAM] unsigned char 
  7865 ;; Return value:  Size  Location     Type
  7866 ;;                  2    8[COMRAM] unsigned int 
  7867 ;; Registers used:
  7868 ;;		wreg, status,2, status,0
  7869 ;; Tracked objects:
  7870 ;;		On entry : 0/0
  7871 ;;		On exit  : 0/0
  7872 ;;		Unchanged: 0/0
  7873 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7874 ;;      Params:         4       0       0       0       0       0       0
  7875 ;;      Locals:         3       0       0       0       0       0       0
  7876 ;;      Temps:          0       0       0       0       0       0       0
  7877 ;;      Totals:         7       0       0       0       0       0       0
  7878 ;;Total ram usage:        7 bytes
  7879 ;; Hardware stack levels used:    1
  7880 ;; Hardware stack levels required when called:    2
  7881 ;; This function calls:
  7882 ;;		Nothing
  7883 ;; This function is called by:
  7884 ;;		_format_number
  7885 ;;		_print_reading
  7886 ;; This function uses a non-reentrant model
  7887 ;;
  7888                           
  7889                           	psect	text37
  7890  0028E2                     __ptext37:
  7891                           	opt stack 0
  7892  0028E2                     ___lwdiv:
  7893                           	opt stack 0
  7894  0028E2  FFFF               	dw	65535	; assembler added errata NOP
  7895                           
  7896                           ;incstack = 0
  7897  0028E4  6A0D               	clrf	___lwdiv@quotient,c
  7898  0028E6  6A0E               	clrf	___lwdiv@quotient+1,c
  7899  0028E8  500B               	movf	___lwdiv@divisor,w,c
  7900  0028EA  100C               	iorwf	___lwdiv@divisor+1,w,c
  7901  0028EC  E01E               	bz	l877
  7902  0028EE  0E01               	movlw	1
  7903  0028F0  6E0F               	movwf	___lwdiv@counter,c
  7904  0028F2  D005               	goto	l3152
  7905  0028F4                     l3150:
  7906  0028F4  FFFF               	dw	65535	; assembler added errata NOP
  7907  0028F6  90D8               	bcf	status,0,c
  7908  0028F8  360B               	rlcf	___lwdiv@divisor,f,c
  7909  0028FA  360C               	rlcf	___lwdiv@divisor+1,f,c
  7910  0028FC  2A0F               	incf	___lwdiv@counter,f,c
  7911  0028FE                     l3152:
  7912  0028FE  FFFF               	dw	65535	; assembler added errata NOP
  7913  002900  AE0C               	btfss	___lwdiv@divisor+1,7,c
  7914  002902  D7F8               	goto	l3150
  7915  002904                     u3070:
  7916  002904  FFFF               	dw	65535	; assembler added errata NOP
  7917  002906  90D8               	bcf	status,0,c
  7918  002908  360D               	rlcf	___lwdiv@quotient,f,c
  7919  00290A  360E               	rlcf	___lwdiv@quotient+1,f,c
  7920  00290C  500B               	movf	___lwdiv@divisor,w,c
  7921  00290E  5C09               	subwf	___lwdiv@dividend,w,c
  7922  002910  500C               	movf	___lwdiv@divisor+1,w,c
  7923  002912  580A               	subwfb	___lwdiv@dividend+1,w,c
  7924  002914  E305               	bnc	l3162
  7925  002916  500B               	movf	___lwdiv@divisor,w,c
  7926  002918  5E09               	subwf	___lwdiv@dividend,f,c
  7927  00291A  500C               	movf	___lwdiv@divisor+1,w,c
  7928  00291C  5A0A               	subwfb	___lwdiv@dividend+1,f,c
  7929  00291E  800D               	bsf	___lwdiv@quotient,0,c
  7930  002920                     l3162:
  7931  002920  90D8               	bcf	status,0,c
  7932  002922  320C               	rrcf	___lwdiv@divisor+1,f,c
  7933  002924  320B               	rrcf	___lwdiv@divisor,f,c
  7934  002926  2E0F               	decfsz	___lwdiv@counter,f,c
  7935  002928  D7ED               	goto	u3070
  7936  00292A                     l877:
  7937  00292A  C00D  F009         	movff	___lwdiv@quotient,?___lwdiv
  7938  00292E  C00E  F00A         	movff	___lwdiv@quotient+1,?___lwdiv+1
  7939  002932  0012               	return		;funcret
  7940  002934  FFFF               	dw	65535	; errata NOP
  7941  002936                     __end_of___lwdiv:
  7942                           	opt stack 0
  7943                           tblptru	equ	0xFF8
  7944                           tblptrh	equ	0xFF7
  7945                           tblptrl	equ	0xFF6
  7946                           tablat	equ	0xFF5
  7947                           prodh	equ	0xFF4
  7948                           prodl	equ	0xFF3
  7949                           intcon	equ	0xFF2
  7950                           intcon2	equ	0xFF1
  7951                           postinc0	equ	0xFEE
  7952                           wreg	equ	0xFE8
  7953                           postdec1	equ	0xFE5
  7954                           fsr1l	equ	0xFE1
  7955                           indf2	equ	0xFDF
  7956                           postinc2	equ	0xFDE
  7957                           postdec2	equ	0xFDD
  7958                           fsr2h	equ	0xFDA
  7959                           fsr2l	equ	0xFD9
  7960                           status	equ	0xFD8
  7961                           
  7962 ;; *************** function _buffer_puts *****************
  7963 ;; Defined at:
  7964 ;;		line 56 in file "lib/buffer.c"
  7965 ;; Parameters:    Size  Location     Type
  7966 ;;  x               1   11[COMRAM] PTR const unsigned char 
  7967 ;;		 -> STR_8(6), 
  7968 ;; Auto vars:     Size  Location     Type
  7969 ;;		None
  7970 ;; Return value:  Size  Location     Type
  7971 ;;                  1    wreg      unsigned char 
  7972 ;; Registers used:
  7973 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  7974 ;; Tracked objects:
  7975 ;;		On entry : 3F/1
  7976 ;;		On exit  : 3F/1
  7977 ;;		Unchanged: 0/0
  7978 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7979 ;;      Params:         1       0       0       0       0       0       0
  7980 ;;      Locals:         0       0       0       0       0       0       0
  7981 ;;      Temps:          0       0       0       0       0       0       0
  7982 ;;      Totals:         1       0       0       0       0       0       0
  7983 ;;Total ram usage:        1 bytes
  7984 ;; Hardware stack levels used:    1
  7985 ;; Hardware stack levels required when called:    3
  7986 ;; This function calls:
  7987 ;;		_buffer_putch
  7988 ;; This function is called by:
  7989 ;;		_measure_freq
  7990 ;; This function uses a non-reentrant model
  7991 ;;
  7992                           
  7993                           	psect	text38
  7994  002C0E                     __ptext38:
  7995                           	opt stack 0
  7996  002C0E                     _buffer_puts:
  7997                           	opt stack 0
  7998  002C0E  FFFF               	dw	65535	; assembler added errata NOP
  7999                           
  8000                           ; BSR set to: 1
  8001                           ;buffer.c: 57: while(*x) {
  8002                           
  8003                           ;incstack = 0
  8004  002C10  D008               	goto	l4520
  8005  002C12                     l4516:
  8006                           
  8007                           ; BSR set to: 1
  8008                           ;buffer.c: 58: buffer_putch(*x);
  8009  002C12  C00C  FFF6         	movff	buffer_puts@x,tblptrl
  8010  002C16                     	if	0	;There is only one active tblptr byte
  8011  002C16                     	endif
  8012  002C16                     	if	0	;tblptru may be non-zero
  8013  002C16                     	endif
  8014  002C16                     	if	0	;tblptru may be non-zero
  8015  002C16                     	endif
  8016  002C16  0008               	tblrd		*
  8017  002C18  FFFF               	dw	65535	; errata NOP
  8018  002C1A  50F5               	movf	tablat,w,c
  8019  002C1C  EC9B  F014         	call	_buffer_putch
  8020                           
  8021                           ; BSR set to: 1
  8022                           ;buffer.c: 59: ++x;
  8023  002C20  2A0C               	incf	buffer_puts@x,f,c
  8024  002C22                     l4520:
  8025  002C22  FFFF               	dw	65535	; assembler added errata NOP
  8026                           
  8027                           ; BSR set to: 1
  8028  002C24  C00C  FFF6         	movff	buffer_puts@x,tblptrl
  8029  002C28                     	if	0	;There is only one active tblptr byte
  8030  002C28                     	endif
  8031  002C28                     	if	0	;tblptru may be non-zero
  8032  002C28                     	endif
  8033  002C28                     	if	0	;tblptru may be non-zero
  8034  002C28                     	endif
  8035  002C28  0008               	tblrd		*
  8036  002C2A  FFFF               	dw	65535	; errata NOP
  8037  002C2C  50F5               	movf	tablat,w,c
  8038  002C2E  E1F1               	bnz	l4516
  8039                           
  8040                           ; BSR set to: 1
  8041  002C30  0012               	return		;funcret
  8042  002C32  FFFF               	dw	65535	; errata NOP
  8043  002C34                     __end_of_buffer_puts:
  8044                           	opt stack 0
  8045                           tblptru	equ	0xFF8
  8046                           tblptrh	equ	0xFF7
  8047                           tblptrl	equ	0xFF6
  8048                           tablat	equ	0xFF5
  8049                           prodh	equ	0xFF4
  8050                           prodl	equ	0xFF3
  8051                           intcon	equ	0xFF2
  8052                           intcon2	equ	0xFF1
  8053                           postinc0	equ	0xFEE
  8054                           wreg	equ	0xFE8
  8055                           postdec1	equ	0xFE5
  8056                           fsr1l	equ	0xFE1
  8057                           indf2	equ	0xFDF
  8058                           postinc2	equ	0xFDE
  8059                           postdec2	equ	0xFDD
  8060                           fsr2h	equ	0xFDA
  8061                           fsr2l	equ	0xFD9
  8062                           status	equ	0xFD8
  8063                           
  8064 ;; *************** function _buffer_putch *****************
  8065 ;; Defined at:
  8066 ;;		line 30 in file "lib/buffer.c"
  8067 ;; Parameters:    Size  Location     Type
  8068 ;;  ch              1    wreg     unsigned char 
  8069 ;; Auto vars:     Size  Location     Type
  8070 ;;  ch              1   10[COMRAM] unsigned char 
  8071 ;; Return value:  Size  Location     Type
  8072 ;;                  1    wreg      unsigned char 
  8073 ;; Registers used:
  8074 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8075 ;; Tracked objects:
  8076 ;;		On entry : 0/1
  8077 ;;		On exit  : 3F/1
  8078 ;;		Unchanged: 0/0
  8079 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8080 ;;      Params:         0       0       0       0       0       0       0
  8081 ;;      Locals:         1       0       0       0       0       0       0
  8082 ;;      Temps:          2       0       0       0       0       0       0
  8083 ;;      Totals:         3       0       0       0       0       0       0
  8084 ;;Total ram usage:        3 bytes
  8085 ;; Hardware stack levels used:    1
  8086 ;; Hardware stack levels required when called:    2
  8087 ;; This function calls:
  8088 ;;		Nothing
  8089 ;; This function is called by:
  8090 ;;		_buffer_puts
  8091 ;;		_format_number
  8092 ;;		_format_double
  8093 ;; This function uses a non-reentrant model
  8094 ;;
  8095                           
  8096                           	psect	text39
  8097  002936                     __ptext39:
  8098                           	opt stack 0
  8099  002936                     _buffer_putch:
  8100                           	opt stack 0
  8101  002936  FFFF               	dw	65535	; assembler added errata NOP
  8102                           
  8103                           ; BSR set to: 1
  8104                           ;incstack = 0
  8105                           ;buffer_putch@ch stored from wreg
  8106  002938  6E0B               	movwf	buffer_putch@ch,c
  8107                           
  8108                           ;buffer.c: 31: if(16 - buffer.n <= 0)
  8109  00293A  0E10               	movlw	16
  8110  00293C  6E09               	movwf	??_buffer_putch& (0+255),c
  8111  00293E  6A0A               	clrf	(??_buffer_putch+1)& (0+255),c
  8112  002940  0101               	movlb	1	; () banked
  8113  002942  3910               	swapf	(_buffer+16)& (0+255),w,b
  8114  002944  0B0F               	andlw	15
  8115  002946  5E09               	subwf	??_buffer_putch,f,c
  8116  002948  0E00               	movlw	0
  8117  00294A  5A0A               	subwfb	??_buffer_putch+1,f,c
  8118  00294C  BE0A               	btfsc	??_buffer_putch+1,7,c
  8119  00294E  D01A               	goto	l118
  8120  002950  500A               	movf	??_buffer_putch+1,w,c
  8121  002952  E102               	bnz	l4278
  8122  002954  0409               	decf	??_buffer_putch,w,c
  8123  002956  E316               	bnc	l118
  8124  002958                     l4278:
  8125                           
  8126                           ; BSR set to: 1
  8127                           ;buffer.c: 33: buffer.x[buffer.n] = ch;
  8128  002958  3910               	swapf	(_buffer+16)& (0+255),w,b
  8129  00295A  0B0F               	andlw	15
  8130  00295C  6E09               	movwf	??_buffer_putch& (0+255),c
  8131  00295E  6A0A               	clrf	(??_buffer_putch+1)& (0+255),c
  8132  002960  0E00               	movlw	low _buffer
  8133  002962  2409               	addwf	??_buffer_putch,w,c
  8134  002964  6ED9               	movwf	fsr2l,c
  8135  002966  0E01               	movlw	high _buffer
  8136  002968  200A               	addwfc	??_buffer_putch+1,w,c
  8137  00296A  6EDA               	movwf	fsr2h,c
  8138  00296C  C00B  FFDF         	movff	buffer_putch@ch,indf2
  8139                           
  8140                           ; BSR set to: 1
  8141                           ;buffer.c: 34: buffer.n++;
  8142  002970  3910               	swapf	(_buffer+16)& (0+255),w,b
  8143  002972  0B0F               	andlw	15
  8144  002974  6E09               	movwf	??_buffer_putch& (0+255),c
  8145  002976  2A09               	incf	??_buffer_putch,f,c
  8146  002978  3A09               	swapf	??_buffer_putch& (0+255),f,c
  8147  00297A  5110               	movf	(_buffer+16)& (0+255),w,b
  8148  00297C  1809               	xorwf	??_buffer_putch& (0+255),w,c
  8149  00297E  0B0F               	andlw	-241
  8150  002980  1809               	xorwf	??_buffer_putch& (0+255),w,c
  8151  002982  6F10               	movwf	(_buffer+16)& (0+255),b
  8152  002984                     l118:
  8153  002984  FFFF               	dw	65535	; assembler added errata NOP
  8154                           
  8155                           ; BSR set to: 1
  8156  002986  0012               	return		;funcret
  8157  002988  FFFF               	dw	65535	; errata NOP
  8158  00298A                     __end_of_buffer_putch:
  8159                           	opt stack 0
  8160                           tblptru	equ	0xFF8
  8161                           tblptrh	equ	0xFF7
  8162                           tblptrl	equ	0xFF6
  8163                           tablat	equ	0xFF5
  8164                           prodh	equ	0xFF4
  8165                           prodl	equ	0xFF3
  8166                           intcon	equ	0xFF2
  8167                           intcon2	equ	0xFF1
  8168                           postinc0	equ	0xFEE
  8169                           wreg	equ	0xFE8
  8170                           postdec1	equ	0xFE5
  8171                           fsr1l	equ	0xFE1
  8172                           indf2	equ	0xFDF
  8173                           postinc2	equ	0xFDE
  8174                           postdec2	equ	0xFDD
  8175                           fsr2h	equ	0xFDA
  8176                           fsr2l	equ	0xFD9
  8177                           status	equ	0xFD8
  8178                           
  8179 ;; *************** function _buffer_init *****************
  8180 ;; Defined at:
  8181 ;;		line 10 in file "lib/buffer.c"
  8182 ;; Parameters:    Size  Location     Type
  8183 ;;		None
  8184 ;; Auto vars:     Size  Location     Type
  8185 ;;		None
  8186 ;; Return value:  Size  Location     Type
  8187 ;;                  1    wreg      void 
  8188 ;; Registers used:
  8189 ;;		wreg, status,2
  8190 ;; Tracked objects:
  8191 ;;		On entry : 0/0
  8192 ;;		On exit  : 3F/1
  8193 ;;		Unchanged: 0/0
  8194 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8195 ;;      Params:         0       0       0       0       0       0       0
  8196 ;;      Locals:         0       0       0       0       0       0       0
  8197 ;;      Temps:          0       0       0       0       0       0       0
  8198 ;;      Totals:         0       0       0       0       0       0       0
  8199 ;;Total ram usage:        0 bytes
  8200 ;; Hardware stack levels used:    1
  8201 ;; Hardware stack levels required when called:    2
  8202 ;; This function calls:
  8203 ;;		Nothing
  8204 ;; This function is called by:
  8205 ;;		_measure_freq
  8206 ;; This function uses a non-reentrant model
  8207 ;;
  8208                           
  8209                           	psect	text40
  8210  002CCC                     __ptext40:
  8211                           	opt stack 0
  8212  002CCC                     _buffer_init:
  8213                           	opt stack 0
  8214  002CCC  FFFF               	dw	65535	; assembler added errata NOP
  8215                           
  8216                           ;buffer.c: 11: buffer.p = 0;
  8217                           
  8218                           ; BSR set to: 1
  8219                           ;incstack = 0
  8220  002CCE  0EF0               	movlw	-16
  8221  002CD0  0101               	movlb	1	; () banked
  8222  002CD2  1710               	andwf	(_buffer+16)& (0+255),f,b
  8223                           
  8224                           ;buffer.c: 12: buffer.n = 0;
  8225  002CD4  0E0F               	movlw	-241
  8226  002CD6  1710               	andwf	(_buffer+16)& (0+255),f,b
  8227                           
  8228                           ; BSR set to: 1
  8229  002CD8  0C0F               	retlw	15	;funcret
  8230  002CDA  FFFF               	dw	65535	; errata NOP
  8231  002CDC                     __end_of_buffer_init:
  8232                           	opt stack 0
  8233                           tblptru	equ	0xFF8
  8234                           tblptrh	equ	0xFF7
  8235                           tblptrl	equ	0xFF6
  8236                           tablat	equ	0xFF5
  8237                           prodh	equ	0xFF4
  8238                           prodl	equ	0xFF3
  8239                           intcon	equ	0xFF2
  8240                           intcon2	equ	0xFF1
  8241                           postinc0	equ	0xFEE
  8242                           wreg	equ	0xFE8
  8243                           postdec1	equ	0xFE5
  8244                           fsr1l	equ	0xFE1
  8245                           indf2	equ	0xFDF
  8246                           postinc2	equ	0xFDE
  8247                           postdec2	equ	0xFDD
  8248                           fsr2h	equ	0xFDA
  8249                           fsr2l	equ	0xFD9
  8250                           status	equ	0xFD8
  8251                           
  8252 ;; *************** function _lcd_clear *****************
  8253 ;; Defined at:
  8254 ;;		line 292 in file "lib/lcd44780.c"
  8255 ;; Parameters:    Size  Location     Type
  8256 ;;		None
  8257 ;; Auto vars:     Size  Location     Type
  8258 ;;		None
  8259 ;; Return value:  Size  Location     Type
  8260 ;;                  1    wreg      void 
  8261 ;; Registers used:
  8262 ;;		wreg, status,2, status,0, cstack
  8263 ;; Tracked objects:
  8264 ;;		On entry : 0/0
  8265 ;;		On exit  : 0/0
  8266 ;;		Unchanged: 0/0
  8267 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8268 ;;      Params:         0       0       0       0       0       0       0
  8269 ;;      Locals:         0       0       0       0       0       0       0
  8270 ;;      Temps:          1       0       0       0       0       0       0
  8271 ;;      Totals:         1       0       0       0       0       0       0
  8272 ;;Total ram usage:        1 bytes
  8273 ;; Hardware stack levels used:    1
  8274 ;; Hardware stack levels required when called:    5
  8275 ;; This function calls:
  8276 ;;		_lcd_command
  8277 ;; This function is called by:
  8278 ;;		_main
  8279 ;;		_calibrate
  8280 ;; This function uses a non-reentrant model
  8281 ;;
  8282                           
  8283                           	psect	text41
  8284  002C9E                     __ptext41:
  8285                           	opt stack 0
  8286  002C9E                     _lcd_clear:
  8287                           	opt stack 0
  8288  002C9E  FFFF               	dw	65535	; assembler added errata NOP
  8289                           
  8290                           ;lcd44780.c: 293: lcd_command(0x01);
  8291                           
  8292                           ; BSR set to: 1
  8293                           ;incstack = 0
  8294  002CA0  0E01               	movlw	1
  8295  002CA2  EC6E  F016         	call	_lcd_command
  8296                           
  8297                           ;lcd44780.c: 294: _delay((unsigned long)((2)*(20000000/4000.0)));
  8298  002CA6  0E0A               	movlw	10
  8299  002CA8  6E0D               	movwf	??_lcd_clear& (0+255),c
  8300  002CAA  0EBE               	movlw	190
  8301  002CAC                     u5487:
  8302  002CAC  FFFF               	dw	65535	; errata NOP
  8303  002CAE  2EE8               	decfsz	wreg,f,c
  8304  002CB0  D7FD               	bra	u5487
  8305  002CB2  2E0D               	decfsz	??_lcd_clear& (0+255),f,c
  8306  002CB4  D7FB               	bra	u5487
  8307  002CB6  D000               	nop2	
  8308  002CB8  0012               	return		;funcret
  8309  002CBA  FFFF               	dw	65535	; errata NOP
  8310  002CBC                     __end_of_lcd_clear:
  8311                           	opt stack 0
  8312                           tblptru	equ	0xFF8
  8313                           tblptrh	equ	0xFF7
  8314                           tblptrl	equ	0xFF6
  8315                           tablat	equ	0xFF5
  8316                           prodh	equ	0xFF4
  8317                           prodl	equ	0xFF3
  8318                           intcon	equ	0xFF2
  8319                           intcon2	equ	0xFF1
  8320                           postinc0	equ	0xFEE
  8321                           wreg	equ	0xFE8
  8322                           postdec1	equ	0xFE5
  8323                           fsr1l	equ	0xFE1
  8324                           indf2	equ	0xFDF
  8325                           postinc2	equ	0xFDE
  8326                           postdec2	equ	0xFDD
  8327                           fsr2h	equ	0xFDA
  8328                           fsr2l	equ	0xFD9
  8329                           status	equ	0xFD8
  8330                           
  8331 ;; *************** function _lcd_command *****************
  8332 ;; Defined at:
  8333 ;;		line 127 in file "lib/lcd44780.c"
  8334 ;; Parameters:    Size  Location     Type
  8335 ;;  value           1    wreg     unsigned char 
  8336 ;; Auto vars:     Size  Location     Type
  8337 ;;  value           1   11[COMRAM] unsigned char 
  8338 ;; Return value:  Size  Location     Type
  8339 ;;                  1    wreg      void 
  8340 ;; Registers used:
  8341 ;;		wreg, status,2, status,0, cstack
  8342 ;; Tracked objects:
  8343 ;;		On entry : 0/0
  8344 ;;		On exit  : 0/0
  8345 ;;		Unchanged: 0/0
  8346 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8347 ;;      Params:         0       0       0       0       0       0       0
  8348 ;;      Locals:         1       0       0       0       0       0       0
  8349 ;;      Temps:          0       0       0       0       0       0       0
  8350 ;;      Totals:         1       0       0       0       0       0       0
  8351 ;;Total ram usage:        1 bytes
  8352 ;; Hardware stack levels used:    1
  8353 ;; Hardware stack levels required when called:    4
  8354 ;; This function calls:
  8355 ;;		_lcd_send
  8356 ;; This function is called by:
  8357 ;;		_lcd_gotoxy
  8358 ;;		_lcd_clear
  8359 ;;		_lcd_begin
  8360 ;; This function uses a non-reentrant model
  8361 ;;
  8362                           
  8363                           	psect	text42
  8364  002CDC                     __ptext42:
  8365                           	opt stack 0
  8366  002CDC                     _lcd_command:
  8367                           	opt stack 0
  8368  002CDC  FFFF               	dw	65535	; assembler added errata NOP
  8369                           
  8370                           ;incstack = 0
  8371                           ;lcd_command@value stored from wreg
  8372  002CDE  6E0C               	movwf	lcd_command@value,c
  8373                           
  8374                           ;lcd44780.c: 128: lcd_send(value, 0);
  8375  002CE0  0E00               	movlw	0
  8376  002CE2  6E0A               	movwf	lcd_send@mode,c
  8377  002CE4  500C               	movf	lcd_command@value,w,c
  8378  002CE6  EF3F  F016         	goto	_lcd_send
  8379  002CEA  FFFF               	dw	65535	; errata NOP
  8380  002CEC                     __end_of_lcd_command:
  8381                           	opt stack 0
  8382                           tblptru	equ	0xFF8
  8383                           tblptrh	equ	0xFF7
  8384                           tblptrl	equ	0xFF6
  8385                           tablat	equ	0xFF5
  8386                           prodh	equ	0xFF4
  8387                           prodl	equ	0xFF3
  8388                           intcon	equ	0xFF2
  8389                           intcon2	equ	0xFF1
  8390                           postinc0	equ	0xFEE
  8391                           wreg	equ	0xFE8
  8392                           postdec1	equ	0xFE5
  8393                           fsr1l	equ	0xFE1
  8394                           indf2	equ	0xFDF
  8395                           postinc2	equ	0xFDE
  8396                           postdec2	equ	0xFDD
  8397                           fsr2h	equ	0xFDA
  8398                           fsr2l	equ	0xFD9
  8399                           status	equ	0xFD8
  8400                           
  8401 ;; *************** function _lcd_send *****************
  8402 ;; Defined at:
  8403 ;;		line 103 in file "lib/lcd44780.c"
  8404 ;; Parameters:    Size  Location     Type
  8405 ;;  value           1    wreg     unsigned char 
  8406 ;;  mode            1    9[COMRAM] unsigned char 
  8407 ;; Auto vars:     Size  Location     Type
  8408 ;;  value           1   10[COMRAM] unsigned char 
  8409 ;; Return value:  Size  Location     Type
  8410 ;;                  1    wreg      void 
  8411 ;; Registers used:
  8412 ;;		wreg, status,2, status,0, cstack
  8413 ;; Tracked objects:
  8414 ;;		On entry : 0/0
  8415 ;;		On exit  : 0/0
  8416 ;;		Unchanged: 0/0
  8417 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8418 ;;      Params:         1       0       0       0       0       0       0
  8419 ;;      Locals:         1       0       0       0       0       0       0
  8420 ;;      Temps:          0       0       0       0       0       0       0
  8421 ;;      Totals:         2       0       0       0       0       0       0
  8422 ;;Total ram usage:        2 bytes
  8423 ;; Hardware stack levels used:    1
  8424 ;; Hardware stack levels required when called:    3
  8425 ;; This function calls:
  8426 ;;		_lcd_write4bits
  8427 ;; This function is called by:
  8428 ;;		_lcd_command
  8429 ;;		_lcd_putch
  8430 ;; This function uses a non-reentrant model
  8431 ;;
  8432                           
  8433                           	psect	text43
  8434  002C7E                     __ptext43:
  8435                           	opt stack 0
  8436  002C7E                     _lcd_send:
  8437                           	opt stack 0
  8438  002C7E  FFFF               	dw	65535	; assembler added errata NOP
  8439                           
  8440                           ;incstack = 0
  8441                           ;lcd_send@value stored from wreg
  8442  002C80  6E0B               	movwf	lcd_send@value,c
  8443                           
  8444                           ;lcd44780.c: 104: if(mode) {
  8445  002C82  500A               	movf	lcd_send@mode,w,c
  8446  002C84  E002               	bz	l2514
  8447                           
  8448                           ;lcd44780.c: 105: LATB |= 0b0100;
  8449  002C86  848A               	bsf	3978,2,c	;volatile
  8450                           
  8451                           ;lcd44780.c: 106: } else {
  8452  002C88  D001               	goto	l2516
  8453  002C8A                     l2514:
  8454                           
  8455                           ;lcd44780.c: 107: LATB &= ~0b0100;
  8456  002C8A  948A               	bcf	3978,2,c	;volatile
  8457  002C8C                     l2516:
  8458  002C8C  FFFF               	dw	65535	; assembler added errata NOP
  8459                           
  8460                           ;lcd44780.c: 108: }
  8461                           ;lcd44780.c: 115: {
  8462                           ;lcd44780.c: 116: lcd_write4bits(value >> 4);
  8463  002C8E  380B               	swapf	lcd_send@value,w,c
  8464  002C90  0B0F               	andlw	15
  8465  002C92  EC1A  F016         	call	_lcd_write4bits
  8466                           
  8467                           ;lcd44780.c: 117: lcd_write4bits(value);
  8468  002C96  500B               	movf	lcd_send@value,w,c
  8469  002C98  EF1A  F016         	goto	_lcd_write4bits
  8470  002C9C  FFFF               	dw	65535	; errata NOP
  8471  002C9E                     __end_of_lcd_send:
  8472                           	opt stack 0
  8473                           tblptru	equ	0xFF8
  8474                           tblptrh	equ	0xFF7
  8475                           tblptrl	equ	0xFF6
  8476                           tablat	equ	0xFF5
  8477                           prodh	equ	0xFF4
  8478                           prodl	equ	0xFF3
  8479                           intcon	equ	0xFF2
  8480                           intcon2	equ	0xFF1
  8481                           postinc0	equ	0xFEE
  8482                           wreg	equ	0xFE8
  8483                           postdec1	equ	0xFE5
  8484                           fsr1l	equ	0xFE1
  8485                           indf2	equ	0xFDF
  8486                           postinc2	equ	0xFDE
  8487                           postdec2	equ	0xFDD
  8488                           fsr2h	equ	0xFDA
  8489                           fsr2l	equ	0xFD9
  8490                           status	equ	0xFD8
  8491                           
  8492 ;; *************** function _lcd_write4bits *****************
  8493 ;; Defined at:
  8494 ;;		line 34 in file "lib/lcd44780.c"
  8495 ;; Parameters:    Size  Location     Type
  8496 ;;  value           1    wreg     unsigned char 
  8497 ;; Auto vars:     Size  Location     Type
  8498 ;;  value           1    8[COMRAM] unsigned char 
  8499 ;; Return value:  Size  Location     Type
  8500 ;;                  1    wreg      void 
  8501 ;; Registers used:
  8502 ;;		wreg, status,2, status,0
  8503 ;; Tracked objects:
  8504 ;;		On entry : 0/0
  8505 ;;		On exit  : 0/0
  8506 ;;		Unchanged: 0/0
  8507 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8508 ;;      Params:         0       0       0       0       0       0       0
  8509 ;;      Locals:         1       0       0       0       0       0       0
  8510 ;;      Temps:          0       0       0       0       0       0       0
  8511 ;;      Totals:         1       0       0       0       0       0       0
  8512 ;;Total ram usage:        1 bytes
  8513 ;; Hardware stack levels used:    1
  8514 ;; Hardware stack levels required when called:    2
  8515 ;; This function calls:
  8516 ;;		Nothing
  8517 ;; This function is called by:
  8518 ;;		_lcd_send
  8519 ;;		_lcd_begin
  8520 ;; This function uses a non-reentrant model
  8521 ;;
  8522                           
  8523                           	psect	text44
  8524  002C34                     __ptext44:
  8525                           	opt stack 0
  8526  002C34                     _lcd_write4bits:
  8527                           	opt stack 0
  8528  002C34  FFFF               	dw	65535	; assembler added errata NOP
  8529                           
  8530                           ;incstack = 0
  8531                           ;lcd_write4bits@value stored from wreg
  8532  002C36  6E09               	movwf	lcd_write4bits@value,c
  8533                           
  8534                           ;lcd44780.c: 39: LATB &= 0b00001111;
  8535  002C38  0E0F               	movlw	15
  8536  002C3A  168A               	andwf	3978,f,c	;volatile
  8537                           
  8538                           ;lcd44780.c: 40: LATB |= value << 4;
  8539  002C3C  3809               	swapf	lcd_write4bits@value,w,c
  8540  002C3E  0BF0               	andlw	240
  8541  002C40  128A               	iorwf	3978,f,c	;volatile
  8542                           
  8543                           ;lcd44780.c: 55: LATB |= 0b1000; _delay((unsigned long)((4)*(20000000/4000000.0))); LATB
      +                           &= ~0b1000; _delay((unsigned long)((100)*(20000000/4000000.0)));;
  8544  002C42  868A               	bsf	3978,3,c	;volatile
  8545  002C44  0E05               	movlw	5
  8546  002C46                     u5497:
  8547  002C46  FFFF               	dw	65535	; errata NOP
  8548  002C48  2EE8               	decfsz	wreg,f,c
  8549  002C4A  D7FD               	bra	u5497
  8550  002C4C  968A               	bcf	3978,3,c	;volatile
  8551  002C4E  0E7D               	movlw	125
  8552  002C50                     u5507:
  8553  002C50  FFFF               	dw	65535	; errata NOP
  8554  002C52  2EE8               	decfsz	wreg,f,c
  8555  002C54  D7FD               	bra	u5507
  8556  002C56  0012               	return		;funcret
  8557  002C58  FFFF               	dw	65535	; errata NOP
  8558  002C5A                     __end_of_lcd_write4bits:
  8559                           	opt stack 0
  8560                           tblptru	equ	0xFF8
  8561                           tblptrh	equ	0xFF7
  8562                           tblptrl	equ	0xFF6
  8563                           tablat	equ	0xFF5
  8564                           prodh	equ	0xFF4
  8565                           prodl	equ	0xFF3
  8566                           intcon	equ	0xFF2
  8567                           intcon2	equ	0xFF1
  8568                           postinc0	equ	0xFEE
  8569                           wreg	equ	0xFE8
  8570                           postdec1	equ	0xFE5
  8571                           fsr1l	equ	0xFE1
  8572                           indf2	equ	0xFDF
  8573                           postinc2	equ	0xFDE
  8574                           postdec2	equ	0xFDD
  8575                           fsr2h	equ	0xFDA
  8576                           fsr2l	equ	0xFD9
  8577                           status	equ	0xFD8
  8578                           
  8579 ;; *************** function _delay10ms *****************
  8580 ;; Defined at:
  8581 ;;		line 64 in file "LC-meter.c"
  8582 ;; Parameters:    Size  Location     Type
  8583 ;;  period_10ms     1    wreg     unsigned char 
  8584 ;; Auto vars:     Size  Location     Type
  8585 ;;  period_10ms     1    0[COMRAM] unsigned char 
  8586 ;; Return value:  Size  Location     Type
  8587 ;;                  1    wreg      void 
  8588 ;; Registers used:
  8589 ;;		wreg
  8590 ;; Tracked objects:
  8591 ;;		On entry : 0/0
  8592 ;;		On exit  : 0/0
  8593 ;;		Unchanged: 0/0
  8594 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8595 ;;      Params:         0       0       0       0       0       0       0
  8596 ;;      Locals:         0       0       0       0       0       0       0
  8597 ;;      Temps:          0       0       0       0       0       0       0
  8598 ;;      Totals:         0       0       0       0       0       0       0
  8599 ;;Total ram usage:        0 bytes
  8600 ;; Hardware stack levels used:    1
  8601 ;; Hardware stack levels required when called:    2
  8602 ;; This function calls:
  8603 ;;		Nothing
  8604 ;; This function is called by:
  8605 ;;		_main
  8606 ;;		_calibrate
  8607 ;; This function uses a non-reentrant model
  8608 ;;
  8609                           
  8610                           	psect	text45
  8611  002CFE                     __ptext45:
  8612                           	opt stack 0
  8613  002CFE                     _delay10ms:
  8614                           	opt stack 0
  8615  002CFE  FFFF               	dw	65535	; assembler added errata NOP
  8616                           
  8617                           ;incstack = 0
  8618  002D00  0012               	return		;funcret
  8619  002D02  FFFF               	dw	65535	; errata NOP
  8620  002D04                     __end_of_delay10ms:
  8621                           	opt stack 0
  8622                           tblptru	equ	0xFF8
  8623                           tblptrh	equ	0xFF7
  8624                           tblptrl	equ	0xFF6
  8625                           tablat	equ	0xFF5
  8626                           prodh	equ	0xFF4
  8627                           prodl	equ	0xFF3
  8628                           intcon	equ	0xFF2
  8629                           intcon2	equ	0xFF1
  8630                           postinc0	equ	0xFEE
  8631                           wreg	equ	0xFE8
  8632                           postdec1	equ	0xFE5
  8633                           fsr1l	equ	0xFE1
  8634                           indf2	equ	0xFDF
  8635                           postinc2	equ	0xFDE
  8636                           postdec2	equ	0xFDD
  8637                           fsr2h	equ	0xFDA
  8638                           fsr2l	equ	0xFD9
  8639                           status	equ	0xFD8
  8640                           
  8641 ;; *************** function ___xxtofl *****************
  8642 ;; Defined at:
  8643 ;;		line 10 in file "/opt/microchip/xc8/v1.45/sources/common/xxtofl.c"
  8644 ;; Parameters:    Size  Location     Type
  8645 ;;  sign            1    wreg     unsigned char 
  8646 ;;  val             4   63[COMRAM] long 
  8647 ;; Auto vars:     Size  Location     Type
  8648 ;;  sign            1   71[COMRAM] unsigned char 
  8649 ;;  arg             4   73[COMRAM] unsigned long 
  8650 ;;  exp             1   72[COMRAM] unsigned char 
  8651 ;; Return value:  Size  Location     Type
  8652 ;;                  4   63[COMRAM] unsigned char 
  8653 ;; Registers used:
  8654 ;;		wreg, status,2, status,0
  8655 ;; Tracked objects:
  8656 ;;		On entry : 0/0
  8657 ;;		On exit  : 0/0
  8658 ;;		Unchanged: 0/0
  8659 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8660 ;;      Params:         4       0       0       0       0       0       0
  8661 ;;      Locals:         6       0       0       0       0       0       0
  8662 ;;      Temps:          4       0       0       0       0       0       0
  8663 ;;      Totals:        14       0       0       0       0       0       0
  8664 ;;Total ram usage:       14 bytes
  8665 ;; Hardware stack levels used:    1
  8666 ;; Hardware stack levels required when called:    2
  8667 ;; This function calls:
  8668 ;;		Nothing
  8669 ;; This function is called by:
  8670 ;;		_format_double
  8671 ;;		_calibrate
  8672 ;;		_measure_capacitance
  8673 ;;		_measure_inductance
  8674 ;;		_floor
  8675 ;;		_log
  8676 ;;		_pow
  8677 ;;		_exp
  8678 ;; This function uses a non-reentrant model
  8679 ;;
  8680                           
  8681                           	psect	text46
  8682  001CE6                     __ptext46:
  8683                           	opt stack 0
  8684  001CE6                     ___xxtofl:
  8685                           	opt stack 0
  8686  001CE6  FFFF               	dw	65535	; assembler added errata NOP
  8687                           
  8688                           ;incstack = 0
  8689                           ;___xxtofl@sign stored from wreg
  8690  001CE8  6E48               	movwf	___xxtofl@sign,c
  8691  001CEA  5048               	movf	___xxtofl@sign,w,c
  8692  001CEC  E01C               	bz	l1037
  8693  001CEE  AE43               	btfss	___xxtofl@val+3,7,c
  8694  001CF0  D01A               	goto	l1037
  8695  001CF2  C040  F044         	movff	___xxtofl@val,??___xxtofl
  8696  001CF6  C041  F045         	movff	___xxtofl@val+1,??___xxtofl+1
  8697  001CFA  C042  F046         	movff	___xxtofl@val+2,??___xxtofl+2
  8698  001CFE  C043  F047         	movff	___xxtofl@val+3,??___xxtofl+3
  8699  001D02  1E44               	comf	??___xxtofl,f,c
  8700  001D04  1E45               	comf	??___xxtofl+1,f,c
  8701  001D06  1E46               	comf	??___xxtofl+2,f,c
  8702  001D08  1E47               	comf	??___xxtofl+3,f,c
  8703  001D0A  2A44               	incf	??___xxtofl,f,c
  8704  001D0C  0E00               	movlw	0
  8705  001D0E  2245               	addwfc	??___xxtofl+1,f,c
  8706  001D10  2246               	addwfc	??___xxtofl+2,f,c
  8707  001D12  2247               	addwfc	??___xxtofl+3,f,c
  8708  001D14  C044  F04A         	movff	??___xxtofl,___xxtofl@arg
  8709  001D18  C045  F04B         	movff	??___xxtofl+1,___xxtofl@arg+1
  8710  001D1C  C046  F04C         	movff	??___xxtofl+2,___xxtofl@arg+2
  8711  001D20  C047  F04D         	movff	??___xxtofl+3,___xxtofl@arg+3
  8712  001D24  D009               	goto	l4240
  8713  001D26                     l1037:
  8714  001D26  FFFF               	dw	65535	; assembler added errata NOP
  8715  001D28  C040  F04A         	movff	___xxtofl@val,___xxtofl@arg
  8716  001D2C  C041  F04B         	movff	___xxtofl@val+1,___xxtofl@arg+1
  8717  001D30  C042  F04C         	movff	___xxtofl@val+2,___xxtofl@arg+2
  8718  001D34  C043  F04D         	movff	___xxtofl@val+3,___xxtofl@arg+3
  8719  001D38                     l4240:
  8720  001D38  FFFF               	dw	65535	; assembler added errata NOP
  8721  001D3A  5040               	movf	___xxtofl@val,w,c
  8722  001D3C  1041               	iorwf	___xxtofl@val+1,w,c
  8723  001D3E  1042               	iorwf	___xxtofl@val+2,w,c
  8724  001D40  1043               	iorwf	___xxtofl@val+3,w,c
  8725  001D42  E105               	bnz	l4244
  8726  001D44  6A40               	clrf	?___xxtofl,c
  8727  001D46  6A41               	clrf	?___xxtofl+1,c
  8728  001D48  6A42               	clrf	?___xxtofl+2,c
  8729  001D4A  6A43               	clrf	?___xxtofl+3,c
  8730  001D4C  D060               	goto	l1040
  8731  001D4E                     l4244:
  8732  001D4E  0E96               	movlw	150
  8733  001D50  6E49               	movwf	___xxtofl@exp,c
  8734  001D52  D007               	goto	l4248
  8735  001D54                     l4246:
  8736  001D54  FFFF               	dw	65535	; assembler added errata NOP
  8737  001D56  2A49               	incf	___xxtofl@exp,f,c
  8738  001D58  90D8               	bcf	status,0,c
  8739  001D5A  324D               	rrcf	___xxtofl@arg+3,f,c
  8740  001D5C  324C               	rrcf	___xxtofl@arg+2,f,c
  8741  001D5E  324B               	rrcf	___xxtofl@arg+1,f,c
  8742  001D60  324A               	rrcf	___xxtofl@arg,f,c
  8743  001D62                     l4248:
  8744  001D62  FFFF               	dw	65535	; assembler added errata NOP
  8745  001D64  6A44               	clrf	??___xxtofl& (0+255),c
  8746  001D66  6A45               	clrf	(??___xxtofl+1)& (0+255),c
  8747  001D68  6A46               	clrf	(??___xxtofl+2)& (0+255),c
  8748  001D6A  0EFE               	movlw	254
  8749  001D6C  144D               	andwf	___xxtofl@arg+3,w,c
  8750  001D6E  6E47               	movwf	(??___xxtofl+3)& (0+255),c
  8751  001D70  5044               	movf	??___xxtofl,w,c
  8752  001D72  1045               	iorwf	??___xxtofl+1,w,c
  8753  001D74  1046               	iorwf	??___xxtofl+2,w,c
  8754  001D76  1047               	iorwf	??___xxtofl+3,w,c
  8755  001D78  E00D               	bz	l1044
  8756  001D7A  D7EC               	goto	l4246
  8757  001D7C                     l4250:
  8758  001D7C  FFFF               	dw	65535	; assembler added errata NOP
  8759  001D7E  2A49               	incf	___xxtofl@exp,f,c
  8760  001D80  2A4A               	incf	___xxtofl@arg,f,c
  8761  001D82  0E00               	movlw	0
  8762  001D84  224B               	addwfc	___xxtofl@arg+1,f,c
  8763  001D86  224C               	addwfc	___xxtofl@arg+2,f,c
  8764  001D88  224D               	addwfc	___xxtofl@arg+3,f,c
  8765  001D8A  90D8               	bcf	status,0,c
  8766  001D8C  324D               	rrcf	___xxtofl@arg+3,f,c
  8767  001D8E  324C               	rrcf	___xxtofl@arg+2,f,c
  8768  001D90  324B               	rrcf	___xxtofl@arg+1,f,c
  8769  001D92  324A               	rrcf	___xxtofl@arg,f,c
  8770  001D94                     l1044:
  8771  001D94  6A44               	clrf	??___xxtofl& (0+255),c
  8772  001D96  6A45               	clrf	(??___xxtofl+1)& (0+255),c
  8773  001D98  6A46               	clrf	(??___xxtofl+2)& (0+255),c
  8774  001D9A  504D               	movf	___xxtofl@arg+3,w,c
  8775  001D9C  6E47               	movwf	(??___xxtofl+3)& (0+255),c
  8776  001D9E  5044               	movf	??___xxtofl,w,c
  8777  001DA0  1045               	iorwf	??___xxtofl+1,w,c
  8778  001DA2  1046               	iorwf	??___xxtofl+2,w,c
  8779  001DA4  1047               	iorwf	??___xxtofl+3,w,c
  8780  001DA6  E008               	bz	l4258
  8781  001DA8  D7E9               	goto	l4250
  8782  001DAA                     l4256:
  8783  001DAA  FFFF               	dw	65535	; assembler added errata NOP
  8784  001DAC  0649               	decf	___xxtofl@exp,f,c
  8785  001DAE  90D8               	bcf	status,0,c
  8786  001DB0  364A               	rlcf	___xxtofl@arg,f,c
  8787  001DB2  364B               	rlcf	___xxtofl@arg+1,f,c
  8788  001DB4  364C               	rlcf	___xxtofl@arg+2,f,c
  8789  001DB6  364D               	rlcf	___xxtofl@arg+3,f,c
  8790  001DB8                     l4258:
  8791  001DB8  BE4C               	btfsc	___xxtofl@arg+2,7,c
  8792  001DBA  D003               	goto	u4540
  8793  001DBC  0E02               	movlw	2
  8794  001DBE  6049               	cpfslt	___xxtofl@exp,c
  8795  001DC0  D7F4               	goto	l4256
  8796  001DC2                     u4540:
  8797  001DC2  FFFF               	dw	65535	; assembler added errata NOP
  8798  001DC4  B049               	btfsc	___xxtofl@exp,0,c
  8799  001DC6  D002               	goto	l1052
  8800  001DC8  0E7F               	movlw	127
  8801  001DCA  164C               	andwf	___xxtofl@arg+2,f,c
  8802  001DCC                     l1052:
  8803  001DCC  FFFF               	dw	65535	; assembler added errata NOP
  8804  001DCE  90D8               	bcf	status,0,c
  8805  001DD0  3249               	rrcf	___xxtofl@exp,f,c
  8806  001DD2  C049  F044         	movff	___xxtofl@exp,??___xxtofl
  8807  001DD6  6A45               	clrf	(??___xxtofl+1)& (0+255),c
  8808  001DD8  6A46               	clrf	(??___xxtofl+2)& (0+255),c
  8809  001DDA  6A47               	clrf	(??___xxtofl+3)& (0+255),c
  8810  001DDC  C044  F047         	movff	??___xxtofl,??___xxtofl+3
  8811  001DE0  6A46               	clrf	??___xxtofl+2,c
  8812  001DE2  6A45               	clrf	??___xxtofl+1,c
  8813  001DE4  6A44               	clrf	??___xxtofl,c
  8814  001DE6  5044               	movf	??___xxtofl,w,c
  8815  001DE8  124A               	iorwf	___xxtofl@arg,f,c
  8816  001DEA  5045               	movf	??___xxtofl+1,w,c
  8817  001DEC  124B               	iorwf	___xxtofl@arg+1,f,c
  8818  001DEE  5046               	movf	??___xxtofl+2,w,c
  8819  001DF0  124C               	iorwf	___xxtofl@arg+2,f,c
  8820  001DF2  5047               	movf	??___xxtofl+3,w,c
  8821  001DF4  124D               	iorwf	___xxtofl@arg+3,f,c
  8822  001DF6  5048               	movf	___xxtofl@sign,w,c
  8823  001DF8  E002               	bz	l4270
  8824  001DFA  BE43               	btfsc	___xxtofl@val+3,7,c
  8825  001DFC  8E4D               	bsf	___xxtofl@arg+3,7,c
  8826  001DFE                     l4270:
  8827  001DFE  C04A  F040         	movff	___xxtofl@arg,?___xxtofl
  8828  001E02  C04B  F041         	movff	___xxtofl@arg+1,?___xxtofl+1
  8829  001E06  C04C  F042         	movff	___xxtofl@arg+2,?___xxtofl+2
  8830  001E0A  C04D  F043         	movff	___xxtofl@arg+3,?___xxtofl+3
  8831  001E0E                     l1040:
  8832  001E0E  FFFF               	dw	65535	; assembler added errata NOP
  8833  001E10  0012               	return		;funcret
  8834  001E12  FFFF               	dw	65535	; errata NOP
  8835  001E14                     __end_of___xxtofl:
  8836                           	opt stack 0
  8837                           tblptru	equ	0xFF8
  8838                           tblptrh	equ	0xFF7
  8839                           tblptrl	equ	0xFF6
  8840                           tablat	equ	0xFF5
  8841                           prodh	equ	0xFF4
  8842                           prodl	equ	0xFF3
  8843                           intcon	equ	0xFF2
  8844                           intcon2	equ	0xFF1
  8845                           postinc0	equ	0xFEE
  8846                           wreg	equ	0xFE8
  8847                           postdec1	equ	0xFE5
  8848                           fsr1l	equ	0xFE1
  8849                           indf2	equ	0xFDF
  8850                           postinc2	equ	0xFDE
  8851                           postdec2	equ	0xFDD
  8852                           fsr2h	equ	0xFDA
  8853                           fsr2l	equ	0xFD9
  8854                           status	equ	0xFD8
  8855                           
  8856 ;; *************** function _isr *****************
  8857 ;; Defined at:
  8858 ;;		line 84 in file "LC-meter.c"
  8859 ;; Parameters:    Size  Location     Type
  8860 ;;		None
  8861 ;; Auto vars:     Size  Location     Type
  8862 ;;		None
  8863 ;; Return value:  Size  Location     Type
  8864 ;;                  2   79[None  ] int 
  8865 ;; Registers used:
  8866 ;;		wreg, status,2, status,0, cstack
  8867 ;; Tracked objects:
  8868 ;;		On entry : 0/0
  8869 ;;		On exit  : 0/0
  8870 ;;		Unchanged: 0/0
  8871 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8872 ;;      Params:         0       0       0       0       0       0       0
  8873 ;;      Locals:         0       0       0       0       0       0       0
  8874 ;;      Temps:          1       0       0       0       0       0       0
  8875 ;;      Totals:         1       0       0       0       0       0       0
  8876 ;;Total ram usage:        1 bytes
  8877 ;; Hardware stack levels used:    1
  8878 ;; Hardware stack levels required when called:    1
  8879 ;; This function calls:
  8880 ;;		i2___lwdiv
  8881 ;; This function is called by:
  8882 ;;		Interrupt level 2
  8883 ;; This function uses a non-reentrant model
  8884 ;;
  8885                           
  8886                           	psect	intcode
  8887  000008                     __pintcode:
  8888                           	opt stack 0
  8889  000008                     _isr:
  8890                           	opt stack 0
  8891  000008  FFFF               	dw	65535	; assembler added errata NOP
  8892                           
  8893                           ;incstack = 0
  8894  00000A  8277               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  8895                           
  8896                           ;LC-meter.c: 85: if(PIR1bits.TMR2IF) {
  8897  00000C  A29E               	btfss	3998,1,c	;volatile
  8898  00000E  D042               	goto	i2l83
  8899                           
  8900                           ;LC-meter.c: 86: bres += 256;
  8901  000010  0E00               	movlw	0
  8902  000012  0100               	movlb	0	; () banked
  8903  000014  27ED               	addwf	_bres& (0+255),f,b	;volatile
  8904  000016  2BEE               	incf	(_bres+1)& (0+255),f,b	;volatile
  8905  000018  23EF               	addwfc	(_bres+2)& (0+255),f,b	;volatile
  8906  00001A  23F0               	addwfc	(_bres+3)& (0+255),f,b	;volatile
  8907                           
  8908                           ;LC-meter.c: 87: if(bres >= ((unsigned long)((double)((20000000) / 4) / 1000))) {
  8909  00001C  51F0               	movf	(_bres+3)& (0+255),w,b	;volatile
  8910  00001E  11EF               	iorwf	(_bres+2)& (0+255),w,b	;volatile
  8911  000020  E105               	bnz	i2u368_40
  8912  000022  0E88               	movlw	136
  8913  000024  5DED               	subwf	_bres& (0+255),w,b	;volatile
  8914  000026  0E13               	movlw	19
  8915  000028  59EE               	subwfb	(_bres+1)& (0+255),w,b	;volatile
  8916  00002A  E333               	bnc	i2l3758
  8917  00002C                     i2u368_40:
  8918                           
  8919                           ; BSR set to: 0
  8920                           ;LC-meter.c: 88: bres -= ((unsigned long)((double)((20000000) / 4) / 1000));
  8921  00002C  0E88               	movlw	136
  8922  00002E  5FED               	subwf	_bres& (0+255),f,b	;volatile
  8923  000030  0E13               	movlw	19
  8924  000032  5BEE               	subwfb	(_bres+1)& (0+255),f,b	;volatile
  8925  000034  0E00               	movlw	0
  8926  000036  5BEF               	subwfb	(_bres+2)& (0+255),f,b	;volatile
  8927  000038  5BF0               	subwfb	(_bres+3)& (0+255),f,b	;volatile
  8928                           
  8929                           ; BSR set to: 0
  8930                           ;LC-meter.c: 89: msecpart++;
  8931  00003A  4A71               	infsnz	_msecpart,f,c	;volatile
  8932  00003C  2A72               	incf	_msecpart+1,f,c	;volatile
  8933                           
  8934                           ; BSR set to: 0
  8935                           ;LC-meter.c: 90: led_cycle++;
  8936  00003E  4A6F               	infsnz	_led_cycle,f,c	;volatile
  8937  000040  2A70               	incf	_led_cycle+1,f,c	;volatile
  8938                           
  8939                           ; BSR set to: 0
  8940                           ;LC-meter.c: 92: LATC &= ~(1 << 2); LATC |= (!!(led_cycle >= 0 && led_cycle < led_interv
      +                          al/6)) << 2;;
  8941  000042  948B               	bcf	3979,2,c	;volatile
  8942                           
  8943                           ; BSR set to: 0
  8944  000044  C0F1  F001         	movff	_led_interval,i2___lwdiv@dividend	;volatile
  8945  000048  C0F2  F002         	movff	_led_interval+1,i2___lwdiv@dividend+1	;volatile
  8946  00004C  6A04               	clrf	i2___lwdiv@divisor+1,c
  8947  00004E  0E06               	movlw	6
  8948  000050  6E03               	movwf	i2___lwdiv@divisor,c
  8949  000052  ECC5  F014         	call	i2___lwdiv	;wreg free
  8950  000056  5001               	movf	?i2___lwdiv,w,c
  8951  000058  5C6F               	subwf	_led_cycle,w,c	;volatile
  8952  00005A  5002               	movf	?i2___lwdiv+1,w,c
  8953  00005C  5870               	subwfb	_led_cycle+1,w,c	;volatile
  8954  00005E  E203               	bc	i2u369_40
  8955  000060  6A08               	clrf	??_isr& (0+255),c
  8956  000062  2A08               	incf	??_isr& (0+255),f,c
  8957  000064  D001               	goto	i2u370_48
  8958  000066                     i2u369_40:
  8959  000066  6A08               	clrf	??_isr& (0+255),c
  8960  000068                     i2u370_48:
  8961  000068  FFFF               	dw	65535	; assembler added errata NOP
  8962  00006A  90D8               	bcf	status,0,c
  8963  00006C  3608               	rlcf	??_isr,f,c
  8964  00006E  90D8               	bcf	status,0,c
  8965  000070  3408               	rlcf	??_isr,w,c
  8966  000072  128B               	iorwf	3979,f,c	;volatile
  8967                           
  8968                           ;LC-meter.c: 96: if(msecpart >= 1000) {
  8969  000074  0EE8               	movlw	232
  8970  000076  5C71               	subwf	_msecpart,w,c	;volatile
  8971  000078  0E03               	movlw	3
  8972  00007A  5872               	subwfb	_msecpart+1,w,c	;volatile
  8973  00007C  E30A               	bnc	i2l3758
  8974                           
  8975                           ;LC-meter.c: 98: seconds++;
  8976  00007E  0101               	movlb	1	; () banked
  8977  000080  2B19               	incf	_seconds& (0+255),f,b	;volatile
  8978  000082  0E00               	movlw	0
  8979  000084  231A               	addwfc	(_seconds+1)& (0+255),f,b	;volatile
  8980  000086  231B               	addwfc	(_seconds+2)& (0+255),f,b	;volatile
  8981  000088  231C               	addwfc	(_seconds+3)& (0+255),f,b	;volatile
  8982                           
  8983                           ;LC-meter.c: 99: msecpart -= 1000;
  8984  00008A  0EE8               	movlw	232
  8985  00008C  5E71               	subwf	_msecpart,f,c	;volatile
  8986  00008E  0E03               	movlw	3
  8987  000090  5A72               	subwfb	_msecpart+1,f,c	;volatile
  8988  000092                     i2l3758:
  8989                           
  8990                           ;LC-meter.c: 100: }
  8991                           ;LC-meter.c: 101: }
  8992                           ;LC-meter.c: 103: PIR1bits.TMR2IF=0;
  8993  000092  929E               	bcf	3998,1,c	;volatile
  8994  000094                     i2l83:
  8995  000094  FFFF               	dw	65535	; assembler added errata NOP
  8996  000096  9277               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  8997  000098  0011               	retfie		f
  8998  00009A  FFFF               	dw	65535	; errata NOP
  8999  00009C                     __end_of_isr:
  9000                           	opt stack 0
  9001                           tblptru	equ	0xFF8
  9002                           tblptrh	equ	0xFF7
  9003                           tblptrl	equ	0xFF6
  9004                           tablat	equ	0xFF5
  9005                           prodh	equ	0xFF4
  9006                           prodl	equ	0xFF3
  9007                           intcon	equ	0xFF2
  9008                           intcon2	equ	0xFF1
  9009                           postinc0	equ	0xFEE
  9010                           wreg	equ	0xFE8
  9011                           postdec1	equ	0xFE5
  9012                           fsr1l	equ	0xFE1
  9013                           indf2	equ	0xFDF
  9014                           postinc2	equ	0xFDE
  9015                           postdec2	equ	0xFDD
  9016                           fsr2h	equ	0xFDA
  9017                           fsr2l	equ	0xFD9
  9018                           status	equ	0xFD8
  9019                           
  9020 ;; *************** function i2___lwdiv *****************
  9021 ;; Defined at:
  9022 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/lwdiv.c"
  9023 ;; Parameters:    Size  Location     Type
  9024 ;;  dividend        2    0[COMRAM] unsigned int 
  9025 ;;  divisor         2    2[COMRAM] unsigned int 
  9026 ;; Auto vars:     Size  Location     Type
  9027 ;;  __lwdiv         2    4[COMRAM] unsigned int 
  9028 ;;  __lwdiv         1    6[COMRAM] unsigned char 
  9029 ;; Return value:  Size  Location     Type
  9030 ;;                  2    0[COMRAM] unsigned int 
  9031 ;; Registers used:
  9032 ;;		wreg, status,2, status,0
  9033 ;; Tracked objects:
  9034 ;;		On entry : 3F/0
  9035 ;;		On exit  : 3F/0
  9036 ;;		Unchanged: 3F/0
  9037 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9038 ;;      Params:         4       0       0       0       0       0       0
  9039 ;;      Locals:         3       0       0       0       0       0       0
  9040 ;;      Temps:          0       0       0       0       0       0       0
  9041 ;;      Totals:         7       0       0       0       0       0       0
  9042 ;;Total ram usage:        7 bytes
  9043 ;; Hardware stack levels used:    1
  9044 ;; This function calls:
  9045 ;;		Nothing
  9046 ;; This function is called by:
  9047 ;;		_isr
  9048 ;; This function uses a non-reentrant model
  9049 ;;
  9050                           
  9051                           	psect	text48
  9052  00298A                     __ptext48:
  9053                           	opt stack 0
  9054  00298A                     i2___lwdiv:
  9055                           	opt stack 0
  9056  00298A  FFFF               	dw	65535	; assembler added errata NOP
  9057                           
  9058                           ; BSR set to: 0
  9059                           
  9060                           ;incstack = 0
  9061  00298C  6A05               	clrf	i2___lwdiv@quotient,c
  9062  00298E  6A06               	clrf	i2___lwdiv@quotient+1,c
  9063                           
  9064                           ; BSR set to: 0
  9065  002990  5003               	movf	i2___lwdiv@divisor,w,c
  9066  002992  1004               	iorwf	i2___lwdiv@divisor+1,w,c
  9067  002994  E01E               	bz	i2l877
  9068                           
  9069                           ; BSR set to: 0
  9070  002996  0E01               	movlw	1
  9071  002998  6E07               	movwf	i2___lwdiv@counter,c
  9072  00299A  D005               	goto	i2l3726
  9073  00299C                     i2l3724:
  9074  00299C  FFFF               	dw	65535	; assembler added errata NOP
  9075                           
  9076                           ; BSR set to: 0
  9077  00299E  90D8               	bcf	status,0,c
  9078  0029A0  3603               	rlcf	i2___lwdiv@divisor,f,c
  9079  0029A2  3604               	rlcf	i2___lwdiv@divisor+1,f,c
  9080  0029A4  2A07               	incf	i2___lwdiv@counter,f,c
  9081  0029A6                     i2l3726:
  9082  0029A6  FFFF               	dw	65535	; assembler added errata NOP
  9083                           
  9084                           ; BSR set to: 0
  9085  0029A8  AE04               	btfss	i2___lwdiv@divisor+1,7,c
  9086  0029AA  D7F8               	goto	i2l3724
  9087  0029AC                     i2u365_40:
  9088  0029AC  FFFF               	dw	65535	; assembler added errata NOP
  9089                           
  9090                           ; BSR set to: 0
  9091  0029AE  90D8               	bcf	status,0,c
  9092  0029B0  3605               	rlcf	i2___lwdiv@quotient,f,c
  9093  0029B2  3606               	rlcf	i2___lwdiv@quotient+1,f,c
  9094                           
  9095                           ; BSR set to: 0
  9096  0029B4  5003               	movf	i2___lwdiv@divisor,w,c
  9097  0029B6  5C01               	subwf	i2___lwdiv@dividend,w,c
  9098  0029B8  5004               	movf	i2___lwdiv@divisor+1,w,c
  9099  0029BA  5802               	subwfb	i2___lwdiv@dividend+1,w,c
  9100  0029BC  E305               	bnc	i2l3736
  9101                           
  9102                           ; BSR set to: 0
  9103  0029BE  5003               	movf	i2___lwdiv@divisor,w,c
  9104  0029C0  5E01               	subwf	i2___lwdiv@dividend,f,c
  9105  0029C2  5004               	movf	i2___lwdiv@divisor+1,w,c
  9106  0029C4  5A02               	subwfb	i2___lwdiv@dividend+1,f,c
  9107                           
  9108                           ; BSR set to: 0
  9109  0029C6  8005               	bsf	i2___lwdiv@quotient,0,c
  9110  0029C8                     i2l3736:
  9111                           
  9112                           ; BSR set to: 0
  9113  0029C8  90D8               	bcf	status,0,c
  9114  0029CA  3204               	rrcf	i2___lwdiv@divisor+1,f,c
  9115  0029CC  3203               	rrcf	i2___lwdiv@divisor,f,c
  9116                           
  9117                           ; BSR set to: 0
  9118  0029CE  2E07               	decfsz	i2___lwdiv@counter,f,c
  9119  0029D0  D7ED               	goto	i2u365_40
  9120  0029D2                     i2l877:
  9121                           
  9122                           ; BSR set to: 0
  9123  0029D2  C005  F001         	movff	i2___lwdiv@quotient,?i2___lwdiv
  9124  0029D6  C006  F002         	movff	i2___lwdiv@quotient+1,?i2___lwdiv+1
  9125                           
  9126                           ; BSR set to: 0
  9127  0029DA  0012               	return		;funcret
  9128  0029DC  FFFF               	dw	65535	; errata NOP
  9129  0029DE                     __end_ofi2___lwdiv:
  9130                           	opt stack 0
  9131                           tblptru	equ	0xFF8
  9132                           tblptrh	equ	0xFF7
  9133                           tblptrl	equ	0xFF6
  9134                           tablat	equ	0xFF5
  9135                           prodh	equ	0xFF4
  9136                           prodl	equ	0xFF3
  9137                           intcon	equ	0xFF2
  9138                           intcon2	equ	0xFF1
  9139                           postinc0	equ	0xFEE
  9140                           wreg	equ	0xFE8
  9141                           postdec1	equ	0xFE5
  9142                           fsr1l	equ	0xFE1
  9143                           indf2	equ	0xFDF
  9144                           postinc2	equ	0xFDE
  9145                           postdec2	equ	0xFDD
  9146                           fsr2h	equ	0xFDA
  9147                           fsr2l	equ	0xFD9
  9148                           status	equ	0xFD8
  9149                           tblptru	equ	0xFF8
  9150                           tblptrh	equ	0xFF7
  9151                           tblptrl	equ	0xFF6
  9152                           tablat	equ	0xFF5
  9153                           prodh	equ	0xFF4
  9154                           prodl	equ	0xFF3
  9155                           intcon	equ	0xFF2
  9156                           intcon2	equ	0xFF1
  9157                           postinc0	equ	0xFEE
  9158                           wreg	equ	0xFE8
  9159                           postdec1	equ	0xFE5
  9160                           fsr1l	equ	0xFE1
  9161                           indf2	equ	0xFDF
  9162                           postinc2	equ	0xFDE
  9163                           postdec2	equ	0xFDD
  9164                           fsr2h	equ	0xFDA
  9165                           fsr2l	equ	0xFD9
  9166                           status	equ	0xFD8
  9167                           
  9168                           	psect	rparam
  9169  0000                     tblptru	equ	0xFF8
  9170                           tblptrh	equ	0xFF7
  9171                           tblptrl	equ	0xFF6
  9172                           tablat	equ	0xFF5
  9173                           prodh	equ	0xFF4
  9174                           prodl	equ	0xFF3
  9175                           intcon	equ	0xFF2
  9176                           intcon2	equ	0xFF1
  9177                           postinc0	equ	0xFEE
  9178                           wreg	equ	0xFE8
  9179                           postdec1	equ	0xFE5
  9180                           fsr1l	equ	0xFE1
  9181                           indf2	equ	0xFDF
  9182                           postinc2	equ	0xFDE
  9183                           postdec2	equ	0xFDD
  9184                           fsr2h	equ	0xFDA
  9185                           fsr2l	equ	0xFD9
  9186                           status	equ	0xFD8
  9187                           
  9188                           	psect	temp
  9189  000077                     btemp:
  9190                           	opt stack 0
  9191  000077                     	ds	1
  9192  0000                     int$flags	set	btemp
  9193  0000                     wtemp6	set	btemp+1
  9194                           tblptru	equ	0xFF8
  9195                           tblptrh	equ	0xFF7
  9196                           tblptrl	equ	0xFF6
  9197                           tablat	equ	0xFF5
  9198                           prodh	equ	0xFF4
  9199                           prodl	equ	0xFF3
  9200                           intcon	equ	0xFF2
  9201                           intcon2	equ	0xFF1
  9202                           postinc0	equ	0xFEE
  9203                           wreg	equ	0xFE8
  9204                           postdec1	equ	0xFE5
  9205                           fsr1l	equ	0xFE1
  9206                           indf2	equ	0xFDF
  9207                           postinc2	equ	0xFDE
  9208                           postdec2	equ	0xFDD
  9209                           fsr2h	equ	0xFDA
  9210                           fsr2l	equ	0xFD9
  9211                           status	equ	0xFD8


Data Sizes:
    Strings     103
    Constant    76
    Data        5
    BSS         51
    Persistent  10
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126    110     118
    BANK0           128     91     120
    BANK1           256     16      45
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    eval_poly@d	PTR const  size(1) Largest target is 40
		 -> exp@coeff(CODE[40]), log@coeff(CODE[36]), 

    frexp@eptr	PTR int  size(1) Largest target is 2
		 -> log@exponent(BANK0[2]), floor@expon(BANK0[2]), 

    put_str@s	PTR const unsigned char  size(1) Largest target is 15
		 -> STR_10(CODE[13]), STR_9(CODE[10]), STR_7(CODE[15]), STR_6(CODE[12]), 

    print_unit@units	PTR const unsigned char [8] size(1) Largest target is 3
		 -> STR_18(CODE[3]), STR_17(CODE[3]), STR_16(CODE[3]), STR_15(CODE[3]), 
		 -> STR_14(CODE[3]), STR_13(CODE[3]), STR_12(CODE[3]), STR_11(CODE[2]), 

    lcd_puts@string	PTR const unsigned char  size(1) Largest target is 10
		 -> STR_21(CODE[4]), STR_20(CODE[4]), STR_19(CODE[6]), STR_5(CODE[5]), 
		 -> STR_4(CODE[6]), STR_3(CODE[7]), STR_2(CODE[7]), STR_1(CODE[10]), 

    buffer_puts@x	PTR const unsigned char  size(1) Largest target is 6
		 -> STR_8(CODE[6]), 


Critical Paths under _main in COMRAM

    _print_indicator->_lcd_gotoxy
    _print_unit->_lcd_gotoxy
    _print_reading->_format_number
    _lcd_puts->_lcd_putch
    _lcd_begin->_lcd_command
    _exp->_eval_poly
    _ldexp->_eval_poly
    ___flsub->___flmul
    _log->_eval_poly
    _eval_poly->___flmul
    ___flmul->___fladd
    ___fladd->___xxtofl
    _calibrate->___xxtofl
    _put_str->_output_putch
    _output_putch->_lcd_putch
    _lcd_putch->_lcd_send
    _measure_freq->_format_number
    _lcd_gotoxy->_lcd_command
    _format_number->___lwdiv
    _buffer_puts->_buffer_putch
    _lcd_clear->_lcd_command
    _lcd_command->_lcd_send
    _lcd_send->_lcd_write4bits
    ___xxtofl->_measure_freq

Critical Paths under _isr in COMRAM

    _isr->i2___lwdiv

Critical Paths under _main in BANK0

    _main->_format_double
    _measure_inductance->___fltol
    _measure_capacitance->___fltol
    _format_double->_pow
    _pow->_exp
    _exp->_floor
    _ldexp->_eval_poly
    _floor->___fltol
    ___fltol->_log10
    ___flsub->___flmul
    _log10->_log
    _log->_eval_poly
    _eval_poly->___flmul

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_format_double

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _isr in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0  249126
                                             90 BANK0      1     1      0
                          _calibrate
                          _delay10ms
                      _format_double
                          _lcd_begin
                          _lcd_clear
                         _lcd_gotoxy
                           _lcd_init
                           _lcd_puts
                _measure_capacitance
                 _measure_inductance
                    _print_indicator
                        _timer0_init
                        _timer2_init
 ---------------------------------------------------------------------------------
 (1) _timer2_init                                          4     4      0      90
                                              8 COMRAM     4     4      0
 ---------------------------------------------------------------------------------
 (1) _timer0_init                                         11    11      0     273
                                              8 COMRAM    11    11      0
 ---------------------------------------------------------------------------------
 (1) _print_indicator                                      1     1      0    2685
                                             18 COMRAM     1     1      0
                         _lcd_gotoxy
                           _lcd_puts
 ---------------------------------------------------------------------------------
 (1) _measure_inductance                                  43    43      0   39880
                                             44 BANK0     43    43      0
                            ___fldiv
                             ___flge
                            ___flmul
                            ___flsub
                            ___fltol
                           ___xxtofl
                         _lcd_gotoxy
                       _measure_freq
                      _print_reading
                         _print_unit
                            _put_str
 ---------------------------------------------------------------------------------
 (1) _measure_capacitance                                 19    19      0   39574
                                             44 BANK0     19    19      0
                            ___fldiv
                             ___flge
                            ___flmul
                            ___flsub
                            ___fltol
                           ___xxtofl
                         _lcd_gotoxy
                       _measure_freq
                      _print_reading
                         _print_unit
                            _put_str
 ---------------------------------------------------------------------------------
 (2) _print_unit                                           3     3      0    1755
                                             18 COMRAM     2     2      0
                         _lcd_gotoxy
 ---------------------------------------------------------------------------------
 (2) _print_reading                                        6     4      2    7665
                                             58 COMRAM     6     4      2
                            ___lwdiv
                            ___lwmod
                      _format_number
                         _lcd_gotoxy
                           _lcd_puts
 ---------------------------------------------------------------------------------
 (2) _lcd_puts                                             3     2      1     908
                                             12 COMRAM     3     2      1
                          _lcd_putch
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             3     3      0      46
                                              8 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (1) _lcd_begin                                            3     2      1     448
                                             12 COMRAM     3     2      1
                        _lcd_command
                     _lcd_write4bits
 ---------------------------------------------------------------------------------
 (1) _format_double                                       20    16      4  152888
                                             86 BANK0      4     0      4
                                              0 BANK1     16    16      0
                            ___fldiv
                             ___flge
                            ___flmul
                            ___flsub
                            ___fltol
                           ___xxtofl
                       _buffer_putch
                              _floor
                              _log10
                                _pow
 ---------------------------------------------------------------------------------
 (2) _pow                                                 21    13      8   86216
                                             65 BANK0     21    13      8
                             ___flge
                            ___flmul
                            ___flneg
                            ___fltol
                           ___xxtofl
                                _exp
                                _log
 ---------------------------------------------------------------------------------
 (3) _exp                                                 11     7      4   46076
                                             54 BANK0     11     7      4
                            ___fldiv
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                           ___xxtofl
                          _eval_poly
                              _floor
                              _ldexp
                                _log (ARG)
 ---------------------------------------------------------------------------------
 (4) _ldexp                                                8     2      6     539
                                             20 BANK0      8     2      6
                          _eval_poly (ARG)
 ---------------------------------------------------------------------------------
 (4) _floor                                               10     6      4   10800
                                             44 BANK0     10     6      4
                            ___fladd
                            ___fldiv (ARG)
                             ___flge
                            ___fltol
                           ___xxtofl
                              _frexp
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             10     6      4    1107
                                             34 BANK0     10     6      4
                            ___fldiv (ARG)
                           ___xxtofl (ARG)
                              _log10 (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flge                                              12     4      8    2746
                                              8 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (2) ___flsub                                              8     0      8    5376
                                             13 BANK0      8     0      8
                            ___fladd
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) ___flneg                                              4     0      4     335
                                              8 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (2) ___fldiv                                             25    17      8    3484
                                              8 COMRAM    25    17      8
 ---------------------------------------------------------------------------------
 (2) _log10                                                8     4      4   33644
                                             26 BANK0      8     4      4
                            ___flmul
                                _log
 ---------------------------------------------------------------------------------
 (3) _log                                                  6     2      4   26114
                                             20 BANK0      6     2      4
                            ___fladd
                            ___flmul
                           ___xxtofl
                          _eval_poly
                              _frexp
 ---------------------------------------------------------------------------------
 (4) _frexp                                                7     2      5     682
                                              8 COMRAM     7     2      5
 ---------------------------------------------------------------------------------
 (4) _eval_poly                                           12     5      7   12050
                                            105 COMRAM     5     5      0
                                             13 BANK0      7     0      7
                            ___fladd
                            ___flmul
 ---------------------------------------------------------------------------------
 (2) ___flmul                                             25    17      8    7305
                                             93 COMRAM    12     4      8
                                              0 BANK0     13    13      0
                            ___fladd (ARG)
                            ___fldiv (ARG)
                           ___xxtofl (ARG)
                              _frexp (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fladd                                             16     8      8    3951
                                             77 COMRAM    16     8      8
                           ___xxtofl (ARG)
                              _frexp (ARG)
 ---------------------------------------------------------------------------------
 (1) _calibrate                                            1     1      0   10252
                                             77 COMRAM     1     1      0
                           ___xxtofl
                          _delay10ms
                          _lcd_clear
                         _lcd_gotoxy
                          _lcd_putch
                       _measure_freq
                            _put_str
 ---------------------------------------------------------------------------------
 (2) _put_str                                              4     3      1     678
                                             13 COMRAM     4     3      1
                       _output_putch
 ---------------------------------------------------------------------------------
 (3) _output_putch                                         1     1      0     284
                                             12 COMRAM     1     1      0
                          _lcd_putch
 ---------------------------------------------------------------------------------
 (3) _lcd_putch                                            1     1      0     262
                                             11 COMRAM     1     1      0
                           _lcd_send
 ---------------------------------------------------------------------------------
 (2) _measure_freq                                         5     3      2    5531
                                             58 COMRAM     5     3      2
                        _buffer_init
                        _buffer_puts
                      _format_number
                         _lcd_gotoxy
                       _print_buffer
                     _timer0_read_ps
 ---------------------------------------------------------------------------------
 (3) _timer0_read_ps                                       7     5      2     114
                                              8 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (3) _print_buffer                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _lcd_gotoxy                                           6     5      1    1755
                                             12 COMRAM     6     5      1
                        _lcd_command
 ---------------------------------------------------------------------------------
 (3) _format_number                                       43    39      4    3411
                                             15 COMRAM    43    39      4
                            ___lwdiv
                            ___lwmod
                       _buffer_putch
 ---------------------------------------------------------------------------------
 (4) ___lwmod                                              5     1      4     589
                                              8 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (4) ___lwdiv                                              7     3      4     692
                                              8 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (3) _buffer_puts                                          1     0      1     186
                                             11 COMRAM     1     0      1
                       _buffer_putch
 ---------------------------------------------------------------------------------
 (4) _buffer_putch                                         3     3      0      31
                                              8 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (3) _buffer_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _lcd_clear                                            1     1      0     262
                                             12 COMRAM     1     1      0
                        _lcd_command
 ---------------------------------------------------------------------------------
 (3) _lcd_command                                          1     1      0     262
                                             11 COMRAM     1     1      0
                           _lcd_send
 ---------------------------------------------------------------------------------
 (4) _lcd_send                                             2     1      1     240
                                              9 COMRAM     2     1      1
                     _lcd_write4bits
 ---------------------------------------------------------------------------------
 (5) _lcd_write4bits                                       1     1      0      22
                                              8 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _delay10ms                                            1     1      0       0
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4    1696
                                             63 COMRAM    14    10      4
                       _measure_freq (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _isr                                                  1     1      0     214
                                              7 COMRAM     1     1      0
                          i2___lwdiv
 ---------------------------------------------------------------------------------
 (8) i2___lwdiv                                            7     3      4     214
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _calibrate
     ___xxtofl
       _measure_freq (ARG)
         _buffer_init
         _buffer_puts
           _buffer_putch
         _format_number
           ___lwdiv
           ___lwmod
           _buffer_putch
         _lcd_gotoxy
           _lcd_command
             _lcd_send
               _lcd_write4bits
         _print_buffer
         _timer0_read_ps
     _delay10ms
     _lcd_clear
       _lcd_command
         _lcd_send
           _lcd_write4bits
     _lcd_gotoxy
       _lcd_command
         _lcd_send
           _lcd_write4bits
     _lcd_putch
       _lcd_send
         _lcd_write4bits
     _measure_freq
       _buffer_init
       _buffer_puts
         _buffer_putch
       _format_number
         ___lwdiv
         ___lwmod
         _buffer_putch
       _lcd_gotoxy
         _lcd_command
           _lcd_send
             _lcd_write4bits
       _print_buffer
       _timer0_read_ps
     _put_str
       _output_putch
         _lcd_putch
           _lcd_send
             _lcd_write4bits
   _delay10ms
   _format_double
     ___fldiv
     ___flge
     ___flmul
       ___fladd (ARG)
         ___xxtofl (ARG)
           _measure_freq (ARG)
             _buffer_init
             _buffer_puts
               _buffer_putch
             _format_number
               ___lwdiv
               ___lwmod
               _buffer_putch
             _lcd_gotoxy
               _lcd_command
                 _lcd_send
                   _lcd_write4bits
             _print_buffer
             _timer0_read_ps
         _frexp (ARG)
       ___fldiv (ARG)
       ___xxtofl (ARG)
         _measure_freq (ARG)
           _buffer_init
           _buffer_puts
             _buffer_putch
           _format_number
             ___lwdiv
             ___lwmod
             _buffer_putch
           _lcd_gotoxy
             _lcd_command
               _lcd_send
                 _lcd_write4bits
           _print_buffer
           _timer0_read_ps
       _frexp (ARG)
     ___flsub
       ___fladd
         ___xxtofl (ARG)
           _measure_freq (ARG)
             _buffer_init
             _buffer_puts
               _buffer_putch
             _format_number
               ___lwdiv
               ___lwmod
               _buffer_putch
             _lcd_gotoxy
               _lcd_command
                 _lcd_send
                   _lcd_write4bits
             _print_buffer
             _timer0_read_ps
         _frexp (ARG)
       ___flmul (ARG)
         ___fladd (ARG)
           ___xxtofl (ARG)
             _measure_freq (ARG)
               _buffer_init
               _buffer_puts
                 _buffer_putch
               _format_number
                 ___lwdiv
                 ___lwmod
                 _buffer_putch
               _lcd_gotoxy
                 _lcd_command
                   _lcd_send
                     _lcd_write4bits
               _print_buffer
               _timer0_read_ps
           _frexp (ARG)
         ___fldiv (ARG)
         ___xxtofl (ARG)
           _measure_freq (ARG)
             _buffer_init
             _buffer_puts
               _buffer_putch
             _format_number
               ___lwdiv
               ___lwmod
               _buffer_putch
             _lcd_gotoxy
               _lcd_command
                 _lcd_send
                   _lcd_write4bits
             _print_buffer
             _timer0_read_ps
         _frexp (ARG)
       ___xxtofl (ARG)
         _measure_freq (ARG)
           _buffer_init
           _buffer_puts
             _buffer_putch
           _format_number
             ___lwdiv
             ___lwmod
             _buffer_putch
           _lcd_gotoxy
             _lcd_command
               _lcd_send
                 _lcd_write4bits
           _print_buffer
           _timer0_read_ps
     ___fltol
       ___fldiv (ARG)
       ___xxtofl (ARG)
         _measure_freq (ARG)
           _buffer_init
           _buffer_puts
             _buffer_putch
           _format_number
             ___lwdiv
             ___lwmod
             _buffer_putch
           _lcd_gotoxy
             _lcd_command
               _lcd_send
                 _lcd_write4bits
           _print_buffer
           _timer0_read_ps
       _log10 (ARG)
         ___flmul
           ___fladd (ARG)
             ___xxtofl (ARG)
               _measure_freq (ARG)
                 _buffer_init
                 _buffer_puts
                   _buffer_putch
                 _format_number
                   ___lwdiv
                   ___lwmod
                   _buffer_putch
                 _lcd_gotoxy
                   _lcd_command
                     _lcd_send
                       _lcd_write4bits
                 _print_buffer
                 _timer0_read_ps
             _frexp (ARG)
           ___fldiv (ARG)
           ___xxtofl (ARG)
             _measure_freq (ARG)
               _buffer_init
               _buffer_puts
                 _buffer_putch
               _format_number
                 ___lwdiv
                 ___lwmod
                 _buffer_putch
               _lcd_gotoxy
                 _lcd_command
                   _lcd_send
                     _lcd_write4bits
               _print_buffer
               _timer0_read_ps
           _frexp (ARG)
         _log
           ___fladd
             ___xxtofl (ARG)
               _measure_freq (ARG)
                 _buffer_init
                 _buffer_puts
                   _buffer_putch
                 _format_number
                   ___lwdiv
                   ___lwmod
                   _buffer_putch
                 _lcd_gotoxy
                   _lcd_command
                     _lcd_send
                       _lcd_write4bits
                 _print_buffer
                 _timer0_read_ps
             _frexp (ARG)
           ___flmul
             ___fladd (ARG)
               ___xxtofl (ARG)
                 _measure_freq (ARG)
                   _buffer_init
                   _buffer_puts
                     _buffer_putch
                   _format_number
                     ___lwdiv
                     ___lwmod
                     _buffer_putch
                   _lcd_gotoxy
                     _lcd_command
                       _lcd_send
                         _lcd_write4bits
                   _print_buffer
                   _timer0_read_ps
               _frexp (ARG)
             ___fldiv (ARG)
             ___xxtofl (ARG)
               _measure_freq (ARG)
                 _buffer_init
                 _buffer_puts
                   _buffer_putch
                 _format_number
                   ___lwdiv
                   ___lwmod
                   _buffer_putch
                 _lcd_gotoxy
                   _lcd_command
                     _lcd_send
                       _lcd_write4bits
                 _print_buffer
                 _timer0_read_ps
             _frexp (ARG)
           ___xxtofl
             _measure_freq (ARG)
               _buffer_init
               _buffer_puts
                 _buffer_putch
               _format_number
                 ___lwdiv
                 ___lwmod
                 _buffer_putch
               _lcd_gotoxy
                 _lcd_command
                   _lcd_send
                     _lcd_write4bits
               _print_buffer
               _timer0_read_ps
           _eval_poly
             ___fladd
               ___xxtofl (ARG)
                 _measure_freq (ARG)
                   _buffer_init
                   _buffer_puts
                     _buffer_putch
                   _format_number
                     ___lwdiv
                     ___lwmod
                     _buffer_putch
                   _lcd_gotoxy
                     _lcd_command
                       _lcd_send
                         _lcd_write4bits
                   _print_buffer
                   _timer0_read_ps
               _frexp (ARG)
             ___flmul
               ___fladd (ARG)
                 ___xxtofl (ARG)
                   _measure_freq (ARG)
                     _buffer_init
                     _buffer_puts
                       _buffer_putch
                     _format_number
                       ___lwdiv
                       ___lwmod
                       _buffer_putch
                     _lcd_gotoxy
                       _lcd_command
                         _lcd_send
                           _lcd_write4bits
                     _print_buffer
                     _timer0_read_ps
                 _frexp (ARG)
               ___fldiv (ARG)
               ___xxtofl (ARG)
                 _measure_freq (ARG)
                   _buffer_init
                   _buffer_puts
                     _buffer_putch
                   _format_number
                     ___lwdiv
                     ___lwmod
                     _buffer_putch
                   _lcd_gotoxy
                     _lcd_command
                       _lcd_send
                         _lcd_write4bits
                   _print_buffer
                   _timer0_read_ps
               _frexp (ARG)
           _frexp
     ___xxtofl
       _measure_freq (ARG)
         _buffer_init
         _buffer_puts
           _buffer_putch
         _format_number
           ___lwdiv
           ___lwmod
           _buffer_putch
         _lcd_gotoxy
           _lcd_command
             _lcd_send
               _lcd_write4bits
         _print_buffer
         _timer0_read_ps
     _buffer_putch
     _floor
       ___fladd
         ___xxtofl (ARG)
           _measure_freq (ARG)
             _buffer_init
             _buffer_puts
               _buffer_putch
             _format_number
               ___lwdiv
               ___lwmod
               _buffer_putch
             _lcd_gotoxy
               _lcd_command
                 _lcd_send
                   _lcd_write4bits
             _print_buffer
             _timer0_read_ps
         _frexp (ARG)
       ___fldiv (ARG)
       ___flge (ARG)
       ___fltol (ARG)
         ___fldiv (ARG)
         ___xxtofl (ARG)
           _measure_freq (ARG)
             _buffer_init
             _buffer_puts
               _buffer_putch
             _format_number
               ___lwdiv
               ___lwmod
               _buffer_putch
             _lcd_gotoxy
               _lcd_command
                 _lcd_send
                   _lcd_write4bits
             _print_buffer
             _timer0_read_ps
         _log10 (ARG)
           ___flmul
             ___fladd (ARG)
               ___xxtofl (ARG)
                 _measure_freq (ARG)
                   _buffer_init
                   _buffer_puts
                     _buffer_putch
                   _format_number
                     ___lwdiv
                     ___lwmod
                     _buffer_putch
                   _lcd_gotoxy
                     _lcd_command
                       _lcd_send
                         _lcd_write4bits
                   _print_buffer
                   _timer0_read_ps
               _frexp (ARG)
             ___fldiv (ARG)
             ___xxtofl (ARG)
               _measure_freq (ARG)
                 _buffer_init
                 _buffer_puts
                   _buffer_putch
                 _format_number
                   ___lwdiv
                   ___lwmod
                   _buffer_putch
                 _lcd_gotoxy
                   _lcd_command
                     _lcd_send
                       _lcd_write4bits
                 _print_buffer
                 _timer0_read_ps
             _frexp (ARG)
           _log
             ___fladd
               ___xxtofl (ARG)
                 _measure_freq (ARG)
                   _buffer_init
                   _buffer_puts
                     _buffer_putch
                   _format_number
                     ___lwdiv
                     ___lwmod
                     _buffer_putch
                   _lcd_gotoxy
                     _lcd_command
                       _lcd_send
                         _lcd_write4bits
                   _print_buffer
                   _timer0_read_ps
               _frexp (ARG)
             ___flmul
               ___fladd (ARG)
                 ___xxtofl (ARG)
                   _measure_freq (ARG)
                     _buffer_init
                     _buffer_puts
                       _buffer_putch
                     _format_number
                       ___lwdiv
                       ___lwmod
                       _buffer_putch
                     _lcd_gotoxy
                       _lcd_command
                         _lcd_send
                           _lcd_write4bits
                     _print_buffer
                     _timer0_read_ps
                 _frexp (ARG)
               ___fldiv (ARG)
               ___xxtofl (ARG)
                 _measure_freq (ARG)
                   _buffer_init
                   _buffer_puts
                     _buffer_putch
                   _format_number
                     ___lwdiv
                     ___lwmod
                     _buffer_putch
                   _lcd_gotoxy
                     _lcd_command
                       _lcd_send
                         _lcd_write4bits
                   _print_buffer
                   _timer0_read_ps
               _frexp (ARG)
             ___xxtofl
               _measure_freq (ARG)
                 _buffer_init
                 _buffer_puts
                   _buffer_putch
                 _format_number
                   ___lwdiv
                   ___lwmod
                   _buffer_putch
                 _lcd_gotoxy
                   _lcd_command
                     _lcd_send
                       _lcd_write4bits
                 _print_buffer
                 _timer0_read_ps
             _eval_poly
               ___fladd
                 ___xxtofl (ARG)
                   _measure_freq (ARG)
                     _buffer_init
                     _buffer_puts
                       _buffer_putch
                     _format_number
                       ___lwdiv
                       ___lwmod
                       _buffer_putch
                     _lcd_gotoxy
                       _lcd_command
                         _lcd_send
                           _lcd_write4bits
                     _print_buffer
                     _timer0_read_ps
                 _frexp (ARG)
               ___flmul
                 ___fladd (ARG)
                   ___xxtofl (ARG)
                     _measure_freq (ARG)
                       _buffer_init
                       _buffer_puts
                         _buffer_putch
                       _format_number
                         ___lwdiv
                         ___lwmod
                         _buffer_putch
                       _lcd_gotoxy
                         _lcd_command
                           _lcd_send
                             _lcd_write4bits
                       _print_buffer
                       _timer0_read_ps
                   _frexp (ARG)
                 ___fldiv (ARG)
                 ___xxtofl (ARG)
                   _measure_freq (ARG)
                     _buffer_init
                     _buffer_puts
                       _buffer_putch
                     _format_number
                       ___lwdiv
                       ___lwmod
                       _buffer_putch
                     _lcd_gotoxy
                       _lcd_command
                         _lcd_send
                           _lcd_write4bits
                     _print_buffer
                     _timer0_read_ps
                 _frexp (ARG)
             _frexp
       ___xxtofl (ARG)
         _measure_freq (ARG)
           _buffer_init
           _buffer_puts
             _buffer_putch
           _format_number
             ___lwdiv
             ___lwmod
             _buffer_putch
           _lcd_gotoxy
             _lcd_command
               _lcd_send
                 _lcd_write4bits
           _print_buffer
           _timer0_read_ps
       _frexp (ARG)
     _log10
       ___flmul
         ___fladd (ARG)
           ___xxtofl (ARG)
             _measure_freq (ARG)
               _buffer_init
               _buffer_puts
                 _buffer_putch
               _format_number
                 ___lwdiv
                 ___lwmod
                 _buffer_putch
               _lcd_gotoxy
                 _lcd_command
                   _lcd_send
                     _lcd_write4bits
               _print_buffer
               _timer0_read_ps
           _frexp (ARG)
         ___fldiv (ARG)
         ___xxtofl (ARG)
           _measure_freq (ARG)
             _buffer_init
             _buffer_puts
               _buffer_putch
             _format_number
               ___lwdiv
               ___lwmod
               _buffer_putch
             _lcd_gotoxy
               _lcd_command
                 _lcd_send
                   _lcd_write4bits
             _print_buffer
             _timer0_read_ps
         _frexp (ARG)
       _log
         ___fladd
           ___xxtofl (ARG)
             _measure_freq (ARG)
               _buffer_init
               _buffer_puts
                 _buffer_putch
               _format_number
                 ___lwdiv
                 ___lwmod
                 _buffer_putch
               _lcd_gotoxy
                 _lcd_command
                   _lcd_send
                     _lcd_write4bits
               _print_buffer
               _timer0_read_ps
           _frexp (ARG)
         ___flmul
           ___fladd (ARG)
             ___xxtofl (ARG)
               _measure_freq (ARG)
                 _buffer_init
                 _buffer_puts
                   _buffer_putch
                 _format_number
                   ___lwdiv
                   ___lwmod
                   _buffer_putch
                 _lcd_gotoxy
                   _lcd_command
                     _lcd_send
                       _lcd_write4bits
                 _print_buffer
                 _timer0_read_ps
             _frexp (ARG)
           ___fldiv (ARG)
           ___xxtofl (ARG)
             _measure_freq (ARG)
               _buffer_init
               _buffer_puts
                 _buffer_putch
               _format_number
                 ___lwdiv
                 ___lwmod
                 _buffer_putch
               _lcd_gotoxy
                 _lcd_command
                   _lcd_send
                     _lcd_write4bits
               _print_buffer
               _timer0_read_ps
           _frexp (ARG)
         ___xxtofl
           _measure_freq (ARG)
             _buffer_init
             _buffer_puts
               _buffer_putch
             _format_number
               ___lwdiv
               ___lwmod
               _buffer_putch
             _lcd_gotoxy
               _lcd_command
                 _lcd_send
                   _lcd_write4bits
             _print_buffer
             _timer0_read_ps
         _eval_poly
           ___fladd
             ___xxtofl (ARG)
               _measure_freq (ARG)
                 _buffer_init
                 _buffer_puts
                   _buffer_putch
                 _format_number
                   ___lwdiv
                   ___lwmod
                   _buffer_putch
                 _lcd_gotoxy
                   _lcd_command
                     _lcd_send
                       _lcd_write4bits
                 _print_buffer
                 _timer0_read_ps
             _frexp (ARG)
           ___flmul
             ___fladd (ARG)
               ___xxtofl (ARG)
                 _measure_freq (ARG)
                   _buffer_init
                   _buffer_puts
                     _buffer_putch
                   _format_number
                     ___lwdiv
                     ___lwmod
                     _buffer_putch
                   _lcd_gotoxy
                     _lcd_command
                       _lcd_send
                         _lcd_write4bits
                   _print_buffer
                   _timer0_read_ps
               _frexp (ARG)
             ___fldiv (ARG)
             ___xxtofl (ARG)
               _measure_freq (ARG)
                 _buffer_init
                 _buffer_puts
                   _buffer_putch
                 _format_number
                   ___lwdiv
                   ___lwmod
                   _buffer_putch
                 _lcd_gotoxy
                   _lcd_command
                     _lcd_send
                       _lcd_write4bits
                 _print_buffer
                 _timer0_read_ps
             _frexp (ARG)
         _frexp
     _pow
       ___flge
       ___flmul
         ___fladd (ARG)
           ___xxtofl (ARG)
             _measure_freq (ARG)
               _buffer_init
               _buffer_puts
                 _buffer_putch
               _format_number
                 ___lwdiv
                 ___lwmod
                 _buffer_putch
               _lcd_gotoxy
                 _lcd_command
                   _lcd_send
                     _lcd_write4bits
               _print_buffer
               _timer0_read_ps
           _frexp (ARG)
         ___fldiv (ARG)
         ___xxtofl (ARG)
           _measure_freq (ARG)
             _buffer_init
             _buffer_puts
               _buffer_putch
             _format_number
               ___lwdiv
               ___lwmod
               _buffer_putch
             _lcd_gotoxy
               _lcd_command
                 _lcd_send
                   _lcd_write4bits
             _print_buffer
             _timer0_read_ps
         _frexp (ARG)
       ___flneg
       ___fltol
         ___fldiv (ARG)
         ___xxtofl (ARG)
           _measure_freq (ARG)
             _buffer_init
             _buffer_puts
               _buffer_putch
             _format_number
               ___lwdiv
               ___lwmod
               _buffer_putch
             _lcd_gotoxy
               _lcd_command
                 _lcd_send
                   _lcd_write4bits
             _print_buffer
             _timer0_read_ps
         _log10 (ARG)
           ___flmul
             ___fladd (ARG)
               ___xxtofl (ARG)
                 _measure_freq (ARG)
                   _buffer_init
                   _buffer_puts
                     _buffer_putch
                   _format_number
                     ___lwdiv
                     ___lwmod
                     _buffer_putch
                   _lcd_gotoxy
                     _lcd_command
                       _lcd_send
                         _lcd_write4bits
                   _print_buffer
                   _timer0_read_ps
               _frexp (ARG)
             ___fldiv (ARG)
             ___xxtofl (ARG)
               _measure_freq (ARG)
                 _buffer_init
                 _buffer_puts
                   _buffer_putch
                 _format_number
                   ___lwdiv
                   ___lwmod
                   _buffer_putch
                 _lcd_gotoxy
                   _lcd_command
                     _lcd_send
                       _lcd_write4bits
                 _print_buffer
                 _timer0_read_ps
             _frexp (ARG)
           _log
             ___fladd
               ___xxtofl (ARG)
                 _measure_freq (ARG)
                   _buffer_init
                   _buffer_puts
                     _buffer_putch
                   _format_number
                     ___lwdiv
                     ___lwmod
                     _buffer_putch
                   _lcd_gotoxy
                     _lcd_command
                       _lcd_send
                         _lcd_write4bits
                   _print_buffer
                   _timer0_read_ps
               _frexp (ARG)
             ___flmul
               ___fladd (ARG)
                 ___xxtofl (ARG)
                   _measure_freq (ARG)
                     _buffer_init
                     _buffer_puts
                       _buffer_putch
                     _format_number
                       ___lwdiv
                       ___lwmod
                       _buffer_putch
                     _lcd_gotoxy
                       _lcd_command
                         _lcd_send
                           _lcd_write4bits
                     _print_buffer
                     _timer0_read_ps
                 _frexp (ARG)
               ___fldiv (ARG)
               ___xxtofl (ARG)
                 _measure_freq (ARG)
                   _buffer_init
                   _buffer_puts
                     _buffer_putch
                   _format_number
                     ___lwdiv
                     ___lwmod
                     _buffer_putch
                   _lcd_gotoxy
                     _lcd_command
                       _lcd_send
                         _lcd_write4bits
                   _print_buffer
                   _timer0_read_ps
               _frexp (ARG)
             ___xxtofl
               _measure_freq (ARG)
                 _buffer_init
                 _buffer_puts
                   _buffer_putch
                 _format_number
                   ___lwdiv
                   ___lwmod
                   _buffer_putch
                 _lcd_gotoxy
                   _lcd_command
                     _lcd_send
                       _lcd_write4bits
                 _print_buffer
                 _timer0_read_ps
             _eval_poly
               ___fladd
                 ___xxtofl (ARG)
                   _measure_freq (ARG)
                     _buffer_init
                     _buffer_puts
                       _buffer_putch
                     _format_number
                       ___lwdiv
                       ___lwmod
                       _buffer_putch
                     _lcd_gotoxy
                       _lcd_command
                         _lcd_send
                           _lcd_write4bits
                     _print_buffer
                     _timer0_read_ps
                 _frexp (ARG)
               ___flmul
                 ___fladd (ARG)
                   ___xxtofl (ARG)
                     _measure_freq (ARG)
                       _buffer_init
                       _buffer_puts
                         _buffer_putch
                       _format_number
                         ___lwdiv
                         ___lwmod
                         _buffer_putch
                       _lcd_gotoxy
                         _lcd_command
                           _lcd_send
                             _lcd_write4bits
                       _print_buffer
                       _timer0_read_ps
                   _frexp (ARG)
                 ___fldiv (ARG)
                 ___xxtofl (ARG)
                   _measure_freq (ARG)
                     _buffer_init
                     _buffer_puts
                       _buffer_putch
                     _format_number
                       ___lwdiv
                       ___lwmod
                       _buffer_putch
                     _lcd_gotoxy
                       _lcd_command
                         _lcd_send
                           _lcd_write4bits
                     _print_buffer
                     _timer0_read_ps
                 _frexp (ARG)
             _frexp
       ___xxtofl
         _measure_freq (ARG)
           _buffer_init
           _buffer_puts
             _buffer_putch
           _format_number
             ___lwdiv
             ___lwmod
             _buffer_putch
           _lcd_gotoxy
             _lcd_command
               _lcd_send
                 _lcd_write4bits
           _print_buffer
           _timer0_read_ps
       _exp
         ___fldiv
         ___flge
         ___flmul
           ___fladd (ARG)
             ___xxtofl (ARG)
               _measure_freq (ARG)
                 _buffer_init
                 _buffer_puts
                   _buffer_putch
                 _format_number
                   ___lwdiv
                   ___lwmod
                   _buffer_putch
                 _lcd_gotoxy
                   _lcd_command
                     _lcd_send
                       _lcd_write4bits
                 _print_buffer
                 _timer0_read_ps
             _frexp (ARG)
           ___fldiv (ARG)
           ___xxtofl (ARG)
             _measure_freq (ARG)
               _buffer_init
               _buffer_puts
                 _buffer_putch
               _format_number
                 ___lwdiv
                 ___lwmod
                 _buffer_putch
               _lcd_gotoxy
                 _lcd_command
                   _lcd_send
                     _lcd_write4bits
               _print_buffer
               _timer0_read_ps
           _frexp (ARG)
         ___flneg
         ___flsub
           ___fladd
             ___xxtofl (ARG)
               _measure_freq (ARG)
                 _buffer_init
                 _buffer_puts
                   _buffer_putch
                 _format_number
                   ___lwdiv
                   ___lwmod
                   _buffer_putch
                 _lcd_gotoxy
                   _lcd_command
                     _lcd_send
                       _lcd_write4bits
                 _print_buffer
                 _timer0_read_ps
             _frexp (ARG)
           ___flmul (ARG)
             ___fladd (ARG)
               ___xxtofl (ARG)
                 _measure_freq (ARG)
                   _buffer_init
                   _buffer_puts
                     _buffer_putch
                   _format_number
                     ___lwdiv
                     ___lwmod
                     _buffer_putch
                   _lcd_gotoxy
                     _lcd_command
                       _lcd_send
                         _lcd_write4bits
                   _print_buffer
                   _timer0_read_ps
               _frexp (ARG)
             ___fldiv (ARG)
             ___xxtofl (ARG)
               _measure_freq (ARG)
                 _buffer_init
                 _buffer_puts
                   _buffer_putch
                 _format_number
                   ___lwdiv
                   ___lwmod
                   _buffer_putch
                 _lcd_gotoxy
                   _lcd_command
                     _lcd_send
                       _lcd_write4bits
                 _print_buffer
                 _timer0_read_ps
             _frexp (ARG)
           ___xxtofl (ARG)
             _measure_freq (ARG)
               _buffer_init
               _buffer_puts
                 _buffer_putch
               _format_number
                 ___lwdiv
                 ___lwmod
                 _buffer_putch
               _lcd_gotoxy
                 _lcd_command
                   _lcd_send
                     _lcd_write4bits
               _print_buffer
               _timer0_read_ps
         ___fltol
           ___fldiv (ARG)
           ___xxtofl (ARG)
             _measure_freq (ARG)
               _buffer_init
               _buffer_puts
                 _buffer_putch
               _format_number
                 ___lwdiv
                 ___lwmod
                 _buffer_putch
               _lcd_gotoxy
                 _lcd_command
                   _lcd_send
                     _lcd_write4bits
               _print_buffer
               _timer0_read_ps
           _log10 (ARG)
             ___flmul
               ___fladd (ARG)
                 ___xxtofl (ARG)
                   _measure_freq (ARG)
                     _buffer_init
                     _buffer_puts
                       _buffer_putch
                     _format_number
                       ___lwdiv
                       ___lwmod
                       _buffer_putch
                     _lcd_gotoxy
                       _lcd_command
                         _lcd_send
                           _lcd_write4bits
                     _print_buffer
                     _timer0_read_ps
                 _frexp (ARG)
               ___fldiv (ARG)
               ___xxtofl (ARG)
                 _measure_freq (ARG)
                   _buffer_init
                   _buffer_puts
                     _buffer_putch
                   _format_number
                     ___lwdiv
                     ___lwmod
                     _buffer_putch
                   _lcd_gotoxy
                     _lcd_command
                       _lcd_send
                         _lcd_write4bits
                   _print_buffer
                   _timer0_read_ps
               _frexp (ARG)
             _log
               ___fladd
                 ___xxtofl (ARG)
                   _measure_freq (ARG)
                     _buffer_init
                     _buffer_puts
                       _buffer_putch
                     _format_number
                       ___lwdiv
                       ___lwmod
                       _buffer_putch
                     _lcd_gotoxy
                       _lcd_command
                         _lcd_send
                           _lcd_write4bits
                     _print_buffer
                     _timer0_read_ps
                 _frexp (ARG)
               ___flmul
                 ___fladd (ARG)
                   ___xxtofl (ARG)
                     _measure_freq (ARG)
                       _buffer_init
                       _buffer_puts
                         _buffer_putch
                       _format_number
                         ___lwdiv
                         ___lwmod
                         _buffer_putch
                       _lcd_gotoxy
                         _lcd_command
                           _lcd_send
                             _lcd_write4bits
                       _print_buffer
                       _timer0_read_ps
                   _frexp (ARG)
                 ___fldiv (ARG)
                 ___xxtofl (ARG)
                   _measure_freq (ARG)
                     _buffer_init
                     _buffer_puts
                       _buffer_putch
                     _format_number
                       ___lwdiv
                       ___lwmod
                       _buffer_putch
                     _lcd_gotoxy
                       _lcd_command
                         _lcd_send
                           _lcd_write4bits
                     _print_buffer
                     _timer0_read_ps
                 _frexp (ARG)
               ___xxtofl
                 _measure_freq (ARG)
                   _buffer_init
                   _buffer_puts
                     _buffer_putch
                   _format_number
                     ___lwdiv
                     ___lwmod
                     _buffer_putch
                   _lcd_gotoxy
                     _lcd_command
                       _lcd_send
                         _lcd_write4bits
                   _print_buffer
                   _timer0_read_ps
               _eval_poly
                 ___fladd
                   ___xxtofl (ARG)
                     _measure_freq (ARG)
                       _buffer_init
                       _buffer_puts
                         _buffer_putch
                       _format_number
                         ___lwdiv
                         ___lwmod
                         _buffer_putch
                       _lcd_gotoxy
                         _lcd_command
                           _lcd_send
                             _lcd_write4bits
                       _print_buffer
                       _timer0_read_ps
                   _frexp (ARG)
                 ___flmul
                   ___fladd (ARG)
                     ___xxtofl (ARG)
                       _measure_freq (ARG)
                         _buffer_init
                         _buffer_puts
                           _buffer_putch
                         _format_number
                           ___lwdiv
                           ___lwmod
                           _buffer_putch
                         _lcd_gotoxy
                           _lcd_command
                             _lcd_send
                               _lcd_write4bits
                         _print_buffer
                         _timer0_read_ps
                     _frexp (ARG)
                   ___fldiv (ARG)
                   ___xxtofl (ARG)
                     _measure_freq (ARG)
                       _buffer_init
                       _buffer_puts
                         _buffer_putch
                       _format_number
                         ___lwdiv
                         ___lwmod
                         _buffer_putch
                       _lcd_gotoxy
                         _lcd_command
                           _lcd_send
                             _lcd_write4bits
                       _print_buffer
                       _timer0_read_ps
                   _frexp (ARG)
               _frexp
         ___xxtofl
           _measure_freq (ARG)
             _buffer_init
             _buffer_puts
               _buffer_putch
             _format_number
               ___lwdiv
               ___lwmod
               _buffer_putch
             _lcd_gotoxy
               _lcd_command
                 _lcd_send
                   _lcd_write4bits
             _print_buffer
             _timer0_read_ps
         _eval_poly
           ___fladd
             ___xxtofl (ARG)
               _measure_freq (ARG)
                 _buffer_init
                 _buffer_puts
                   _buffer_putch
                 _format_number
                   ___lwdiv
                   ___lwmod
                   _buffer_putch
                 _lcd_gotoxy
                   _lcd_command
                     _lcd_send
                       _lcd_write4bits
                 _print_buffer
                 _timer0_read_ps
             _frexp (ARG)
           ___flmul
             ___fladd (ARG)
               ___xxtofl (ARG)
                 _measure_freq (ARG)
                   _buffer_init
                   _buffer_puts
                     _buffer_putch
                   _format_number
                     ___lwdiv
                     ___lwmod
                     _buffer_putch
                   _lcd_gotoxy
                     _lcd_command
                       _lcd_send
                         _lcd_write4bits
                   _print_buffer
                   _timer0_read_ps
               _frexp (ARG)
             ___fldiv (ARG)
             ___xxtofl (ARG)
               _measure_freq (ARG)
                 _buffer_init
                 _buffer_puts
                   _buffer_putch
                 _format_number
                   ___lwdiv
                   ___lwmod
                   _buffer_putch
                 _lcd_gotoxy
                   _lcd_command
                     _lcd_send
                       _lcd_write4bits
                 _print_buffer
                 _timer0_read_ps
             _frexp (ARG)
         _floor
           ___fladd
             ___xxtofl (ARG)
               _measure_freq (ARG)
                 _buffer_init
                 _buffer_puts
                   _buffer_putch
                 _format_number
                   ___lwdiv
                   ___lwmod
                   _buffer_putch
                 _lcd_gotoxy
                   _lcd_command
                     _lcd_send
                       _lcd_write4bits
                 _print_buffer
                 _timer0_read_ps
             _frexp (ARG)
           ___fldiv (ARG)
           ___flge (ARG)
           ___fltol (ARG)
             ___fldiv (ARG)
             ___xxtofl (ARG)
               _measure_freq (ARG)
                 _buffer_init
                 _buffer_puts
                   _buffer_putch
                 _format_number
                   ___lwdiv
                   ___lwmod
                   _buffer_putch
                 _lcd_gotoxy
                   _lcd_command
                     _lcd_send
                       _lcd_write4bits
                 _print_buffer
                 _timer0_read_ps
             _log10 (ARG)
               ___flmul
                 ___fladd (ARG)
                   ___xxtofl (ARG)
                     _measure_freq (ARG)
                       _buffer_init
                       _buffer_puts
                         _buffer_putch
                       _format_number
                         ___lwdiv
                         ___lwmod
                         _buffer_putch
                       _lcd_gotoxy
                         _lcd_command
                           _lcd_send
                             _lcd_write4bits
                       _print_buffer
                       _timer0_read_ps
                   _frexp (ARG)
                 ___fldiv (ARG)
                 ___xxtofl (ARG)
                   _measure_freq (ARG)
                     _buffer_init
                     _buffer_puts
                       _buffer_putch
                     _format_number
                       ___lwdiv
                       ___lwmod
                       _buffer_putch
                     _lcd_gotoxy
                       _lcd_command
                         _lcd_send
                           _lcd_write4bits
                     _print_buffer
                     _timer0_read_ps
                 _frexp (ARG)
               _log
                 ___fladd
                   ___xxtofl (ARG)
                     _measure_freq (ARG)
                       _buffer_init
                       _buffer_puts
                         _buffer_putch
                       _format_number
                         ___lwdiv
                         ___lwmod
                         _buffer_putch
                       _lcd_gotoxy
                         _lcd_command
                           _lcd_send
                             _lcd_write4bits
                       _print_buffer
                       _timer0_read_ps
                   _frexp (ARG)
                 ___flmul
                   ___fladd (ARG)
                     ___xxtofl (ARG)
                       _measure_freq (ARG)
                         _buffer_init
                         _buffer_puts
                           _buffer_putch
                         _format_number
                           ___lwdiv
                           ___lwmod
                           _buffer_putch
                         _lcd_gotoxy
                           _lcd_command
                             _lcd_send
                               _lcd_write4bits
                         _print_buffer
                         _timer0_read_ps
                     _frexp (ARG)
                   ___fldiv (ARG)
                   ___xxtofl (ARG)
                     _measure_freq (ARG)
                       _buffer_init
                       _buffer_puts
                         _buffer_putch
                       _format_number
                         ___lwdiv
                         ___lwmod
                         _buffer_putch
                       _lcd_gotoxy
                         _lcd_command
                           _lcd_send
                             _lcd_write4bits
                       _print_buffer
                       _timer0_read_ps
                   _frexp (ARG)
                 ___xxtofl
                   _measure_freq (ARG)
                     _buffer_init
                     _buffer_puts
                       _buffer_putch
                     _format_number
                       ___lwdiv
                       ___lwmod
                       _buffer_putch
                     _lcd_gotoxy
                       _lcd_command
                         _lcd_send
                           _lcd_write4bits
                     _print_buffer
                     _timer0_read_ps
                 _eval_poly
                   ___fladd
                     ___xxtofl (ARG)
                       _measure_freq (ARG)
                         _buffer_init
                         _buffer_puts
                           _buffer_putch
                         _format_number
                           ___lwdiv
                           ___lwmod
                           _buffer_putch
                         _lcd_gotoxy
                           _lcd_command
                             _lcd_send
                               _lcd_write4bits
                         _print_buffer
                         _timer0_read_ps
                     _frexp (ARG)
                   ___flmul
                     ___fladd (ARG)
                       ___xxtofl (ARG)
                         _measure_freq (ARG)
                           _buffer_init
                           _buffer_puts
                             _buffer_putch
                           _format_number
                             ___lwdiv
                             ___lwmod
                             _buffer_putch
                           _lcd_gotoxy
                             _lcd_command
                               _lcd_send
                                 _lcd_write4bits
                           _print_buffer
                           _timer0_read_ps
                       _frexp (ARG)
                     ___fldiv (ARG)
                     ___xxtofl (ARG)
                       _measure_freq (ARG)
                         _buffer_init
                         _buffer_puts
                           _buffer_putch
                         _format_number
                           ___lwdiv
                           ___lwmod
                           _buffer_putch
                         _lcd_gotoxy
                           _lcd_command
                             _lcd_send
                               _lcd_write4bits
                         _print_buffer
                         _timer0_read_ps
                     _frexp (ARG)
                 _frexp
           ___xxtofl (ARG)
             _measure_freq (ARG)
               _buffer_init
               _buffer_puts
                 _buffer_putch
               _format_number
                 ___lwdiv
                 ___lwmod
                 _buffer_putch
               _lcd_gotoxy
                 _lcd_command
                   _lcd_send
                     _lcd_write4bits
               _print_buffer
               _timer0_read_ps
           _frexp (ARG)
         _ldexp
           _eval_poly (ARG)
             ___fladd
               ___xxtofl (ARG)
                 _measure_freq (ARG)
                   _buffer_init
                   _buffer_puts
                     _buffer_putch
                   _format_number
                     ___lwdiv
                     ___lwmod
                     _buffer_putch
                   _lcd_gotoxy
                     _lcd_command
                       _lcd_send
                         _lcd_write4bits
                   _print_buffer
                   _timer0_read_ps
               _frexp (ARG)
             ___flmul
               ___fladd (ARG)
                 ___xxtofl (ARG)
                   _measure_freq (ARG)
                     _buffer_init
                     _buffer_puts
                       _buffer_putch
                     _format_number
                       ___lwdiv
                       ___lwmod
                       _buffer_putch
                     _lcd_gotoxy
                       _lcd_command
                         _lcd_send
                           _lcd_write4bits
                     _print_buffer
                     _timer0_read_ps
                 _frexp (ARG)
               ___fldiv (ARG)
               ___xxtofl (ARG)
                 _measure_freq (ARG)
                   _buffer_init
                   _buffer_puts
                     _buffer_putch
                   _format_number
                     ___lwdiv
                     ___lwmod
                     _buffer_putch
                   _lcd_gotoxy
                     _lcd_command
                       _lcd_send
                         _lcd_write4bits
                   _print_buffer
                   _timer0_read_ps
               _frexp (ARG)
         _log (ARG)
           ___fladd
             ___xxtofl (ARG)
               _measure_freq (ARG)
                 _buffer_init
                 _buffer_puts
                   _buffer_putch
                 _format_number
                   ___lwdiv
                   ___lwmod
                   _buffer_putch
                 _lcd_gotoxy
                   _lcd_command
                     _lcd_send
                       _lcd_write4bits
                 _print_buffer
                 _timer0_read_ps
             _frexp (ARG)
           ___flmul
             ___fladd (ARG)
               ___xxtofl (ARG)
                 _measure_freq (ARG)
                   _buffer_init
                   _buffer_puts
                     _buffer_putch
                   _format_number
                     ___lwdiv
                     ___lwmod
                     _buffer_putch
                   _lcd_gotoxy
                     _lcd_command
                       _lcd_send
                         _lcd_write4bits
                   _print_buffer
                   _timer0_read_ps
               _frexp (ARG)
             ___fldiv (ARG)
             ___xxtofl (ARG)
               _measure_freq (ARG)
                 _buffer_init
                 _buffer_puts
                   _buffer_putch
                 _format_number
                   ___lwdiv
                   ___lwmod
                   _buffer_putch
                 _lcd_gotoxy
                   _lcd_command
                     _lcd_send
                       _lcd_write4bits
                 _print_buffer
                 _timer0_read_ps
             _frexp (ARG)
           ___xxtofl
             _measure_freq (ARG)
               _buffer_init
               _buffer_puts
                 _buffer_putch
               _format_number
                 ___lwdiv
                 ___lwmod
                 _buffer_putch
               _lcd_gotoxy
                 _lcd_command
                   _lcd_send
                     _lcd_write4bits
               _print_buffer
               _timer0_read_ps
           _eval_poly
             ___fladd
               ___xxtofl (ARG)
                 _measure_freq (ARG)
                   _buffer_init
                   _buffer_puts
                     _buffer_putch
                   _format_number
                     ___lwdiv
                     ___lwmod
                     _buffer_putch
                   _lcd_gotoxy
                     _lcd_command
                       _lcd_send
                         _lcd_write4bits
                   _print_buffer
                   _timer0_read_ps
               _frexp (ARG)
             ___flmul
               ___fladd (ARG)
                 ___xxtofl (ARG)
                   _measure_freq (ARG)
                     _buffer_init
                     _buffer_puts
                       _buffer_putch
                     _format_number
                       ___lwdiv
                       ___lwmod
                       _buffer_putch
                     _lcd_gotoxy
                       _lcd_command
                         _lcd_send
                           _lcd_write4bits
                     _print_buffer
                     _timer0_read_ps
                 _frexp (ARG)
               ___fldiv (ARG)
               ___xxtofl (ARG)
                 _measure_freq (ARG)
                   _buffer_init
                   _buffer_puts
                     _buffer_putch
                   _format_number
                     ___lwdiv
                     ___lwmod
                     _buffer_putch
                   _lcd_gotoxy
                     _lcd_command
                       _lcd_send
                         _lcd_write4bits
                   _print_buffer
                   _timer0_read_ps
               _frexp (ARG)
           _frexp
       _log
         ___fladd
           ___xxtofl (ARG)
             _measure_freq (ARG)
               _buffer_init
               _buffer_puts
                 _buffer_putch
               _format_number
                 ___lwdiv
                 ___lwmod
                 _buffer_putch
               _lcd_gotoxy
                 _lcd_command
                   _lcd_send
                     _lcd_write4bits
               _print_buffer
               _timer0_read_ps
           _frexp (ARG)
         ___flmul
           ___fladd (ARG)
             ___xxtofl (ARG)
               _measure_freq (ARG)
                 _buffer_init
                 _buffer_puts
                   _buffer_putch
                 _format_number
                   ___lwdiv
                   ___lwmod
                   _buffer_putch
                 _lcd_gotoxy
                   _lcd_command
                     _lcd_send
                       _lcd_write4bits
                 _print_buffer
                 _timer0_read_ps
             _frexp (ARG)
           ___fldiv (ARG)
           ___xxtofl (ARG)
             _measure_freq (ARG)
               _buffer_init
               _buffer_puts
                 _buffer_putch
               _format_number
                 ___lwdiv
                 ___lwmod
                 _buffer_putch
               _lcd_gotoxy
                 _lcd_command
                   _lcd_send
                     _lcd_write4bits
               _print_buffer
               _timer0_read_ps
           _frexp (ARG)
         ___xxtofl
           _measure_freq (ARG)
             _buffer_init
             _buffer_puts
               _buffer_putch
             _format_number
               ___lwdiv
               ___lwmod
               _buffer_putch
             _lcd_gotoxy
               _lcd_command
                 _lcd_send
                   _lcd_write4bits
             _print_buffer
             _timer0_read_ps
         _eval_poly
           ___fladd
             ___xxtofl (ARG)
               _measure_freq (ARG)
                 _buffer_init
                 _buffer_puts
                   _buffer_putch
                 _format_number
                   ___lwdiv
                   ___lwmod
                   _buffer_putch
                 _lcd_gotoxy
                   _lcd_command
                     _lcd_send
                       _lcd_write4bits
                 _print_buffer
                 _timer0_read_ps
             _frexp (ARG)
           ___flmul
             ___fladd (ARG)
               ___xxtofl (ARG)
                 _measure_freq (ARG)
                   _buffer_init
                   _buffer_puts
                     _buffer_putch
                   _format_number
                     ___lwdiv
                     ___lwmod
                     _buffer_putch
                   _lcd_gotoxy
                     _lcd_command
                       _lcd_send
                         _lcd_write4bits
                   _print_buffer
                   _timer0_read_ps
               _frexp (ARG)
             ___fldiv (ARG)
             ___xxtofl (ARG)
               _measure_freq (ARG)
                 _buffer_init
                 _buffer_puts
                   _buffer_putch
                 _format_number
                   ___lwdiv
                   ___lwmod
                   _buffer_putch
                 _lcd_gotoxy
                   _lcd_command
                     _lcd_send
                       _lcd_write4bits
                 _print_buffer
                 _timer0_read_ps
             _frexp (ARG)
         _frexp
   _lcd_begin
     _lcd_command
       _lcd_send
         _lcd_write4bits
     _lcd_write4bits
   _lcd_clear
     _lcd_command
       _lcd_send
         _lcd_write4bits
   _lcd_gotoxy
     _lcd_command
       _lcd_send
         _lcd_write4bits
   _lcd_init
   _lcd_puts
     _lcd_putch
       _lcd_send
         _lcd_write4bits
   _measure_capacitance
     ___fldiv
     ___flge
     ___flmul
       ___fladd (ARG)
         ___xxtofl (ARG)
           _measure_freq (ARG)
             _buffer_init
             _buffer_puts
               _buffer_putch
             _format_number
               ___lwdiv
               ___lwmod
               _buffer_putch
             _lcd_gotoxy
               _lcd_command
                 _lcd_send
                   _lcd_write4bits
             _print_buffer
             _timer0_read_ps
         _frexp (ARG)
       ___fldiv (ARG)
       ___xxtofl (ARG)
         _measure_freq (ARG)
           _buffer_init
           _buffer_puts
             _buffer_putch
           _format_number
             ___lwdiv
             ___lwmod
             _buffer_putch
           _lcd_gotoxy
             _lcd_command
               _lcd_send
                 _lcd_write4bits
           _print_buffer
           _timer0_read_ps
       _frexp (ARG)
     ___flsub
       ___fladd
         ___xxtofl (ARG)
           _measure_freq (ARG)
             _buffer_init
             _buffer_puts
               _buffer_putch
             _format_number
               ___lwdiv
               ___lwmod
               _buffer_putch
             _lcd_gotoxy
               _lcd_command
                 _lcd_send
                   _lcd_write4bits
             _print_buffer
             _timer0_read_ps
         _frexp (ARG)
       ___flmul (ARG)
         ___fladd (ARG)
           ___xxtofl (ARG)
             _measure_freq (ARG)
               _buffer_init
               _buffer_puts
                 _buffer_putch
               _format_number
                 ___lwdiv
                 ___lwmod
                 _buffer_putch
               _lcd_gotoxy
                 _lcd_command
                   _lcd_send
                     _lcd_write4bits
               _print_buffer
               _timer0_read_ps
           _frexp (ARG)
         ___fldiv (ARG)
         ___xxtofl (ARG)
           _measure_freq (ARG)
             _buffer_init
             _buffer_puts
               _buffer_putch
             _format_number
               ___lwdiv
               ___lwmod
               _buffer_putch
             _lcd_gotoxy
               _lcd_command
                 _lcd_send
                   _lcd_write4bits
             _print_buffer
             _timer0_read_ps
         _frexp (ARG)
       ___xxtofl (ARG)
         _measure_freq (ARG)
           _buffer_init
           _buffer_puts
             _buffer_putch
           _format_number
             ___lwdiv
             ___lwmod
             _buffer_putch
           _lcd_gotoxy
             _lcd_command
               _lcd_send
                 _lcd_write4bits
           _print_buffer
           _timer0_read_ps
     ___fltol
       ___fldiv (ARG)
       ___xxtofl (ARG)
         _measure_freq (ARG)
           _buffer_init
           _buffer_puts
             _buffer_putch
           _format_number
             ___lwdiv
             ___lwmod
             _buffer_putch
           _lcd_gotoxy
             _lcd_command
               _lcd_send
                 _lcd_write4bits
           _print_buffer
           _timer0_read_ps
       _log10 (ARG)
         ___flmul
           ___fladd (ARG)
             ___xxtofl (ARG)
               _measure_freq (ARG)
                 _buffer_init
                 _buffer_puts
                   _buffer_putch
                 _format_number
                   ___lwdiv
                   ___lwmod
                   _buffer_putch
                 _lcd_gotoxy
                   _lcd_command
                     _lcd_send
                       _lcd_write4bits
                 _print_buffer
                 _timer0_read_ps
             _frexp (ARG)
           ___fldiv (ARG)
           ___xxtofl (ARG)
             _measure_freq (ARG)
               _buffer_init
               _buffer_puts
                 _buffer_putch
               _format_number
                 ___lwdiv
                 ___lwmod
                 _buffer_putch
               _lcd_gotoxy
                 _lcd_command
                   _lcd_send
                     _lcd_write4bits
               _print_buffer
               _timer0_read_ps
           _frexp (ARG)
         _log
           ___fladd
             ___xxtofl (ARG)
               _measure_freq (ARG)
                 _buffer_init
                 _buffer_puts
                   _buffer_putch
                 _format_number
                   ___lwdiv
                   ___lwmod
                   _buffer_putch
                 _lcd_gotoxy
                   _lcd_command
                     _lcd_send
                       _lcd_write4bits
                 _print_buffer
                 _timer0_read_ps
             _frexp (ARG)
           ___flmul
             ___fladd (ARG)
               ___xxtofl (ARG)
                 _measure_freq (ARG)
                   _buffer_init
                   _buffer_puts
                     _buffer_putch
                   _format_number
                     ___lwdiv
                     ___lwmod
                     _buffer_putch
                   _lcd_gotoxy
                     _lcd_command
                       _lcd_send
                         _lcd_write4bits
                   _print_buffer
                   _timer0_read_ps
               _frexp (ARG)
             ___fldiv (ARG)
             ___xxtofl (ARG)
               _measure_freq (ARG)
                 _buffer_init
                 _buffer_puts
                   _buffer_putch
                 _format_number
                   ___lwdiv
                   ___lwmod
                   _buffer_putch
                 _lcd_gotoxy
                   _lcd_command
                     _lcd_send
                       _lcd_write4bits
                 _print_buffer
                 _timer0_read_ps
             _frexp (ARG)
           ___xxtofl
             _measure_freq (ARG)
               _buffer_init
               _buffer_puts
                 _buffer_putch
               _format_number
                 ___lwdiv
                 ___lwmod
                 _buffer_putch
               _lcd_gotoxy
                 _lcd_command
                   _lcd_send
                     _lcd_write4bits
               _print_buffer
               _timer0_read_ps
           _eval_poly
             ___fladd
               ___xxtofl (ARG)
                 _measure_freq (ARG)
                   _buffer_init
                   _buffer_puts
                     _buffer_putch
                   _format_number
                     ___lwdiv
                     ___lwmod
                     _buffer_putch
                   _lcd_gotoxy
                     _lcd_command
                       _lcd_send
                         _lcd_write4bits
                   _print_buffer
                   _timer0_read_ps
               _frexp (ARG)
             ___flmul
               ___fladd (ARG)
                 ___xxtofl (ARG)
                   _measure_freq (ARG)
                     _buffer_init
                     _buffer_puts
                       _buffer_putch
                     _format_number
                       ___lwdiv
                       ___lwmod
                       _buffer_putch
                     _lcd_gotoxy
                       _lcd_command
                         _lcd_send
                           _lcd_write4bits
                     _print_buffer
                     _timer0_read_ps
                 _frexp (ARG)
               ___fldiv (ARG)
               ___xxtofl (ARG)
                 _measure_freq (ARG)
                   _buffer_init
                   _buffer_puts
                     _buffer_putch
                   _format_number
                     ___lwdiv
                     ___lwmod
                     _buffer_putch
                   _lcd_gotoxy
                     _lcd_command
                       _lcd_send
                         _lcd_write4bits
                   _print_buffer
                   _timer0_read_ps
               _frexp (ARG)
           _frexp
     ___xxtofl
       _measure_freq (ARG)
         _buffer_init
         _buffer_puts
           _buffer_putch
         _format_number
           ___lwdiv
           ___lwmod
           _buffer_putch
         _lcd_gotoxy
           _lcd_command
             _lcd_send
               _lcd_write4bits
         _print_buffer
         _timer0_read_ps
     _lcd_gotoxy
       _lcd_command
         _lcd_send
           _lcd_write4bits
     _measure_freq
       _buffer_init
       _buffer_puts
         _buffer_putch
       _format_number
         ___lwdiv
         ___lwmod
         _buffer_putch
       _lcd_gotoxy
         _lcd_command
           _lcd_send
             _lcd_write4bits
       _print_buffer
       _timer0_read_ps
     _print_reading
       ___lwdiv
       ___lwmod
       _format_number
         ___lwdiv
         ___lwmod
         _buffer_putch
       _lcd_gotoxy
         _lcd_command
           _lcd_send
             _lcd_write4bits
       _lcd_puts
         _lcd_putch
           _lcd_send
             _lcd_write4bits
     _print_unit
       _lcd_gotoxy
         _lcd_command
           _lcd_send
             _lcd_write4bits
     _put_str
       _output_putch
         _lcd_putch
           _lcd_send
             _lcd_write4bits
   _measure_inductance
     ___fldiv
     ___flge
     ___flmul
       ___fladd (ARG)
         ___xxtofl (ARG)
           _measure_freq (ARG)
             _buffer_init
             _buffer_puts
               _buffer_putch
             _format_number
               ___lwdiv
               ___lwmod
               _buffer_putch
             _lcd_gotoxy
               _lcd_command
                 _lcd_send
                   _lcd_write4bits
             _print_buffer
             _timer0_read_ps
         _frexp (ARG)
       ___fldiv (ARG)
       ___xxtofl (ARG)
         _measure_freq (ARG)
           _buffer_init
           _buffer_puts
             _buffer_putch
           _format_number
             ___lwdiv
             ___lwmod
             _buffer_putch
           _lcd_gotoxy
             _lcd_command
               _lcd_send
                 _lcd_write4bits
           _print_buffer
           _timer0_read_ps
       _frexp (ARG)
     ___flsub
       ___fladd
         ___xxtofl (ARG)
           _measure_freq (ARG)
             _buffer_init
             _buffer_puts
               _buffer_putch
             _format_number
               ___lwdiv
               ___lwmod
               _buffer_putch
             _lcd_gotoxy
               _lcd_command
                 _lcd_send
                   _lcd_write4bits
             _print_buffer
             _timer0_read_ps
         _frexp (ARG)
       ___flmul (ARG)
         ___fladd (ARG)
           ___xxtofl (ARG)
             _measure_freq (ARG)
               _buffer_init
               _buffer_puts
                 _buffer_putch
               _format_number
                 ___lwdiv
                 ___lwmod
                 _buffer_putch
               _lcd_gotoxy
                 _lcd_command
                   _lcd_send
                     _lcd_write4bits
               _print_buffer
               _timer0_read_ps
           _frexp (ARG)
         ___fldiv (ARG)
         ___xxtofl (ARG)
           _measure_freq (ARG)
             _buffer_init
             _buffer_puts
               _buffer_putch
             _format_number
               ___lwdiv
               ___lwmod
               _buffer_putch
             _lcd_gotoxy
               _lcd_command
                 _lcd_send
                   _lcd_write4bits
             _print_buffer
             _timer0_read_ps
         _frexp (ARG)
       ___xxtofl (ARG)
         _measure_freq (ARG)
           _buffer_init
           _buffer_puts
             _buffer_putch
           _format_number
             ___lwdiv
             ___lwmod
             _buffer_putch
           _lcd_gotoxy
             _lcd_command
               _lcd_send
                 _lcd_write4bits
           _print_buffer
           _timer0_read_ps
     ___fltol
       ___fldiv (ARG)
       ___xxtofl (ARG)
         _measure_freq (ARG)
           _buffer_init
           _buffer_puts
             _buffer_putch
           _format_number
             ___lwdiv
             ___lwmod
             _buffer_putch
           _lcd_gotoxy
             _lcd_command
               _lcd_send
                 _lcd_write4bits
           _print_buffer
           _timer0_read_ps
       _log10 (ARG)
         ___flmul
           ___fladd (ARG)
             ___xxtofl (ARG)
               _measure_freq (ARG)
                 _buffer_init
                 _buffer_puts
                   _buffer_putch
                 _format_number
                   ___lwdiv
                   ___lwmod
                   _buffer_putch
                 _lcd_gotoxy
                   _lcd_command
                     _lcd_send
                       _lcd_write4bits
                 _print_buffer
                 _timer0_read_ps
             _frexp (ARG)
           ___fldiv (ARG)
           ___xxtofl (ARG)
             _measure_freq (ARG)
               _buffer_init
               _buffer_puts
                 _buffer_putch
               _format_number
                 ___lwdiv
                 ___lwmod
                 _buffer_putch
               _lcd_gotoxy
                 _lcd_command
                   _lcd_send
                     _lcd_write4bits
               _print_buffer
               _timer0_read_ps
           _frexp (ARG)
         _log
           ___fladd
             ___xxtofl (ARG)
               _measure_freq (ARG)
                 _buffer_init
                 _buffer_puts
                   _buffer_putch
                 _format_number
                   ___lwdiv
                   ___lwmod
                   _buffer_putch
                 _lcd_gotoxy
                   _lcd_command
                     _lcd_send
                       _lcd_write4bits
                 _print_buffer
                 _timer0_read_ps
             _frexp (ARG)
           ___flmul
             ___fladd (ARG)
               ___xxtofl (ARG)
                 _measure_freq (ARG)
                   _buffer_init
                   _buffer_puts
                     _buffer_putch
                   _format_number
                     ___lwdiv
                     ___lwmod
                     _buffer_putch
                   _lcd_gotoxy
                     _lcd_command
                       _lcd_send
                         _lcd_write4bits
                   _print_buffer
                   _timer0_read_ps
               _frexp (ARG)
             ___fldiv (ARG)
             ___xxtofl (ARG)
               _measure_freq (ARG)
                 _buffer_init
                 _buffer_puts
                   _buffer_putch
                 _format_number
                   ___lwdiv
                   ___lwmod
                   _buffer_putch
                 _lcd_gotoxy
                   _lcd_command
                     _lcd_send
                       _lcd_write4bits
                 _print_buffer
                 _timer0_read_ps
             _frexp (ARG)
           ___xxtofl
             _measure_freq (ARG)
               _buffer_init
               _buffer_puts
                 _buffer_putch
               _format_number
                 ___lwdiv
                 ___lwmod
                 _buffer_putch
               _lcd_gotoxy
                 _lcd_command
                   _lcd_send
                     _lcd_write4bits
               _print_buffer
               _timer0_read_ps
           _eval_poly
             ___fladd
               ___xxtofl (ARG)
                 _measure_freq (ARG)
                   _buffer_init
                   _buffer_puts
                     _buffer_putch
                   _format_number
                     ___lwdiv
                     ___lwmod
                     _buffer_putch
                   _lcd_gotoxy
                     _lcd_command
                       _lcd_send
                         _lcd_write4bits
                   _print_buffer
                   _timer0_read_ps
               _frexp (ARG)
             ___flmul
               ___fladd (ARG)
                 ___xxtofl (ARG)
                   _measure_freq (ARG)
                     _buffer_init
                     _buffer_puts
                       _buffer_putch
                     _format_number
                       ___lwdiv
                       ___lwmod
                       _buffer_putch
                     _lcd_gotoxy
                       _lcd_command
                         _lcd_send
                           _lcd_write4bits
                     _print_buffer
                     _timer0_read_ps
                 _frexp (ARG)
               ___fldiv (ARG)
               ___xxtofl (ARG)
                 _measure_freq (ARG)
                   _buffer_init
                   _buffer_puts
                     _buffer_putch
                   _format_number
                     ___lwdiv
                     ___lwmod
                     _buffer_putch
                   _lcd_gotoxy
                     _lcd_command
                       _lcd_send
                         _lcd_write4bits
                   _print_buffer
                   _timer0_read_ps
               _frexp (ARG)
           _frexp
     ___xxtofl
       _measure_freq (ARG)
         _buffer_init
         _buffer_puts
           _buffer_putch
         _format_number
           ___lwdiv
           ___lwmod
           _buffer_putch
         _lcd_gotoxy
           _lcd_command
             _lcd_send
               _lcd_write4bits
         _print_buffer
         _timer0_read_ps
     _lcd_gotoxy
       _lcd_command
         _lcd_send
           _lcd_write4bits
     _measure_freq
       _buffer_init
       _buffer_puts
         _buffer_putch
       _format_number
         ___lwdiv
         ___lwmod
         _buffer_putch
       _lcd_gotoxy
         _lcd_command
           _lcd_send
             _lcd_write4bits
       _print_buffer
       _timer0_read_ps
     _print_reading
       ___lwdiv
       ___lwmod
       _format_number
         ___lwdiv
         ___lwmod
         _buffer_putch
       _lcd_gotoxy
         _lcd_command
           _lcd_send
             _lcd_write4bits
       _lcd_puts
         _lcd_putch
           _lcd_send
             _lcd_write4bits
     _print_unit
       _lcd_gotoxy
         _lcd_command
           _lcd_send
             _lcd_write4bits
     _put_str
       _output_putch
         _lcd_putch
           _lcd_send
             _lcd_write4bits
   _print_indicator
     _lcd_gotoxy
       _lcd_command
         _lcd_send
           _lcd_write4bits
     _lcd_puts
       _lcd_putch
         _lcd_send
           _lcd_write4bits
   _timer0_init
   _timer2_init

 _isr (ROOT)
   i2___lwdiv

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      17        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100     10      2D       7       17.6%
BITBANK0            80      0       0       4        0.0%
BANK0               80     5B      78       5       93.8%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     6E      76       1       93.7%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     11B      15        0.0%
DATA                 0      0     11B       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Fri Feb  7 09:08:31 2020

                                     ___fldiv@aexp 0021                                       ___fldiv@bexp 0020  
                                     ___fldiv@sign 0015                                                 _F1 00E5  
                                               _F2 00DF                                                 _F3 00DB  
                                      __CFG_BOR$ON 000000                                 i2___lwdiv@dividend 0001  
                                              l118 2984                                                l310 29EA  
                                              l157 24A4                                                l421 2BE2  
                                              l266 2BA0                                                l268 2BA4  
                                              l634 26E8                                                l636 2716  
                                              l637 2736                                                l910 1BB0  
                                              l673 2554                                                l930 12BC  
                                              l666 1F72                                                l914 1BA0  
                                              l931 1296                                                l923 1204  
                                              l667 203E                                                l845 1CE0  
                                              l669 202E                                                l693 25FE  
                                              l918 11D0                                                l689 27B4  
                                              l962 1420                                                l946 1380  
                                              l938 1448                                                l955 13E4  
                                              l956 13E0                                                l877 292A  
                                              l887 2A68                                                l983 1876  
                                              l975 1696                                                l985 1796  
                                              l979 16C4                                                l996 1800  
                                              l997 17FC                                       __CFG_CPD$OFF 000000  
                                   lcd_begin@lines 000F                                                _exp 144E  
                                              _log 1BB6                                                _isr 0008  
                                              _pow 1A22                                       __CFG_BORV$27 000000  
                                              wreg 000FE8                                       ___flmul@aexp 0081  
                                     ___flmul@bexp 0082                                 timer0_read_ps@prev 000D  
                                     ___flmul@sign 0080                                       ___flmul@temp 008B  
                                     ___flmul@prod 0087                                       __CFG_LVP$OFF 000000  
                           __end_of_lcd_write4bits 2C5A                                       ___fltol@exp1 00AB  
                                     __CFG_WDT$OFF 000000                                               l1003 185A  
                                             l1013 0F3E                                               l1040 1E0E  
                                             l1032 1178                                               l1024 1120  
                                             l1025 111C                                               l1009 0F10  
                                             l1019 11A4                                               l1052 1DCC  
                                             l1044 1D94                                               l1037 1D26  
                                             l1075 166A                                               l1079 165A  
                                             l4000 13C2                                               l3150 28F4  
                                             l3152 28FE                                               l4016 1408  
                                             l4112 10CC                                               l4200 24C2  
                                             l2514 2C8A                                               l3162 2920  
                                             l3170 2A3A                                               l4026 1428  
                                             l4050 0F0C                                               l2516 2C8C  
                                             l3172 2A44                                               l4028 142C  
                                             l4052 0F18                                               l4150 118E  
                                             l4134 1142                                               l4118 10EC  
                                             l4070 0F5A                                               l4230 2544  
                                             l4222 251C                                               l4214 2500  
                                             l4240 1D38                                               l4064 0F3A  
                                             l4160 26C6                                               l4224 2528  
                                             l3512 225A                                               l3504 224A  
                                             l3192 2B60                                               l4250 1D7C  
                                             l3178 2A5E                                               l3370 2ABC  
                                             l4138 115C                                               l4066 0F46  
                                             l4402 1822                                               l4218 2512  
                                             l3530 22B2                                               l4244 1D4E  
                                             l4500 2468                                               l3188 2B10  
                                             l4332 16C0                                               l4316 1692  
                                             l4172 2734                                               l3196 2B76  
                                             l4270 1DFE                                               l4246 1D54  
                                             l4502 246E                                               l3374 2AD4  
                                             l4414 1866                                               l4350 170A  
                                             l4166 26FE                                               l3470 2664  
                                             l3462 264C                                               l3454 2634  
                                             l3446 261C                                               l4256 1DAA  
                                             l4248 1D62                                               l4520 2C22  
                                             l4184 275E                                               l4416 186A  
                                             l4408 183C                                               l4360 1748  
                                             l4600 1A68                                               l3472 266A  
                                             l3464 2654                                               l3456 263C  
                                             l3448 2624                                               l4258 1DB8  
                                             l4530 1BD4                                               l4346 16FC  
                                             l4434 2C6A                                               l4442 2568  
                                             l4610 1AF6                                               l3538 22EC  
                                             l4516 2C12                                               l4380 17AC  
                                             l4700 19F4                                               l3716 2BDA  
                                             l4278 2958                                               l4470 235A  
                                             l4374 1794                                               l4294 1F7E  
                                             l4462 25C4                                               l4606 1ACC  
                                             l4702 19FA                                               l3478 267E  
                                             l4472 23D6                                               l4368 1770  
                                             l4448 259A                                               l4552 149C  
                                             l4490 2428                                               l4386 17CC  
                                             l4298 1F9C                                               l4458 25B6  
                                             l4562 14F8                                               l4546 1466  
                                             l4484 2406                                               l4556 14C6  
                                             l3950 12D0                                               l3926 125A  
                                             l3960 12FA                                               l3936 12A4  
                                             l4752 0C54                                               l4824 0B08  
                                             l4832 0B72                                               l4738 2224  
                                             l3938 12AA                                               l3874 11E6  
                                             l3866 11CC                                               l4578 1628  
                                             l4594 1A50                                               l4834 0B7A  
                                             l4922 1F20                                               l4914 1F08  
                                             l4684 18B0                                               l4764 0E14  
                                             l4772 0E7E                                               l4828 0B3E  
                                             l4924 1F24                                               l4908 1EF4  
                                             ?_exp 00B6                                               ?_log 0094  
                                             l3958 12F4                                               l3886 1200  
                                             l4790 072C                                               l4918 1F16  
                                             l3984 139C                                               l3968 130E  
                                             l3896 121C                                               l4768 0E4A  
                                             l3994 13B4                                               l3978 1370  
                                             ?_isr 0001                                               ?_pow 00C1  
                                             STR_1 067F                                               STR_2 0689  
                                             STR_5 0696                                               STR_6 0669  
                                             STR_7 064D                                               STR_8 0690  
                                             STR_9 0675                                               u3100 2A4A  
                                             _LATB 000F8A                                               _LATC 000F8B  
                                             u4000 1390                                               u3210 2A06  
                                             _CCal 00E9                                               u3070 2904  
                                             u4120 1412                                               u4040 13C6  
                                             u5000 1BC8                                               u4060 13D8  
                                             u4310 1150                                               u4230 0F50  
                                             u3430 268A                                               _PIE1 000F9D  
                                             u4320 116A                                               u5120 1AC0  
                                             u4410 24B6                                               u3450 2B4A  
                                             u4420 24E2                                               u4270 1114  
                                             u5080 161C                                               u3448 268E  
                                             u4425 24D6                                               u4610 1F8A  
                                             u5307 2260                                               u4540 1DC2  
                                             u4460 252E                                               u3468 2B4E  
                                             u5317 2280                                               u3910 12C4  
                                             u5407 2086                                               u5327 2292  
                                             u5417 2096                                               u5337 22A2  
                                             u5507 2C50                                               u5427 20A6  
                                             u5347 22C2                                               u3860 1278  
                                             u5437 20B6                                               u5357 22DA  
                                             u4830 1830                                               u5447 20C6  
                                             u5367 230E                                               u4840 184A  
                                             u5457 20D6                                               u5377 2050  
                                             _PIR1 000F9E                                               u5467 20E6  
                                             u5387 2066                                               u5477 20F6  
                                             u5397 2076                                               u4790 17F4  
                                             u5487 2CAC                                               u4960 2482  
                                             u5497 2C46                                               u4890 258E  
                                             i2l83 0094                                               _TMR0 000FD6  
                                             _TMR2 000FCC                                       __CFG_PWRT$ON 000000  
                                             _bres 00ED                                               _main 1E14  
                                             _mode 00F7                                 i2___lwdiv@quotient 0005  
                                             fsr2h 000FDA                                               indf2 000FDF  
                                             fsr1l 000FE1                                               fsr2l 000FD9  
                                             btemp 0077                                               exp@x 00B6  
                                             log@x 0094                              __size_of_output_putch 000C  
                                             pow@x 00C1                                               pow@y 00C5  
                                             prodh 000FF4                                               prodl 000FF3  
                       __end_of_measure_inductance 0BDE                                               start 009C  
                                  ___fldiv@new_exp 001A                                timer0_read_ps@count 000E  
                                   ??_buffer_putch 0009                                  _format_number$293 0036  
                                     ___param_bank 000000                                    _timer0_init$450 000A  
                                  _timer0_init$451 000C                                    _timer0_init$452 000E  
                                  _timer0_init$453 0010                                       buffer_puts@x 000C  
                              lcd_write4bits@value 0009                                       lcd_send@mode 000A  
                                            ??_exp 006F                                              ??_log 006F  
                                            ??_isr 0008                                              ??_pow 006F  
                                    __CFG_OSCS$OFF 000000                                      ___fltol@sign1 00AA  
                                  __end_of___fladd 144E                                              ?_main 0001  
                                  __end_of___fldiv 187C                                    __end_of___flneg 2C7E  
                                            STR_10 065C                                              STR_12 06AB  
                                            STR_20 069B                                              STR_21 068C  
                                            STR_13 06B1                                              STR_14 06AE  
                                            STR_15 069F                                              STR_16 06A8  
                                            STR_17 06A2                                              STR_18 06A5  
                                            STR_19 068A                                    __end_of___flmul 11AA  
                                  __end_of___flsub 2AB4                                    __end_of___fltol 255A  
                                            _T0CON 000FD5                                              _T2CON 000FCA  
                                  __end_of___lwdiv 2936                                    __end_of___lwmod 2A74  
                                            i2l877 29D2                                   lcd_begin@dotsize 000D  
                                            _PORTC 000F82                                              _TRISA 000F92  
                                            _TRISB 000F93                                              _TRISC 000F94  
                                    __CFG_WRT0$OFF 000000                                      __CFG_WRT1$OFF 000000  
                                    __CFG_WRT2$OFF 000000                                      __CFG_WRT3$OFF 000000  
                                   __CFG_EBTR0$OFF 000000                                     __CFG_EBTR1$OFF 000000  
                                   __CFG_EBTR2$OFF 000000                                       main@new_mode 00DA  
                                   __CFG_EBTR3$OFF 000000                                      __CFG_STVR$OFF 000000  
                                    __CFG_WRTB$OFF 000000                                      __CFG_WRTC$OFF 000000  
                                    __CFG_WRTD$OFF 000000                                     __CFG_EBTRB$OFF 000000  
                                            _log10 282E                                              _blink 00E3  
                                            _floor 1F40                                              _ldexp 255A  
                                            _frexp 273C                                       _output_putch 2CEC  
                                  ?_lcd_write4bits 0001                                              _msecs 0115  
                                            tablat 000FF5                                              pow@yi 00D2  
                                  format_number@di 0039                                              status 000FD8  
                                  __end_of_put_str 2AEC                                              wtemp6 0078  
                                  ??_print_reading 003D                                        exp@exponent 00BE  
                               __size_ofi2___lwdiv 0054                                        ldexp@newexp 0098  
                                  __initialization 288C                                        log@exponent 0098  
                                     __end_of_main 1F40                                   format_double@num 00D6  
                                    lcd_gotoxy@col 000E                                      lcd_gotoxy@row 000D  
                                    ?_measure_freq 003B                                     __CFG_OSC$HSPLL 000000  
                           __size_of_format_double 01A6                                             ??_main 006F  
                                    lcd_send@value 000B                                format_double@weight 0125  
                                    __activetblptr 000001                             __size_of_format_number 00B4  
                              lcd_init@fourbitmode 0009                                    __CFG_CCP2MUX$ON 000000  
                                           ?_log10 009A                                             ?_floor 00AC  
                                           ?_ldexp 0094                                             ?_frexp 0009  
                                           i2l3724 299C                                             i2l3726 29A6  
                                           i2l3736 29C8                                             i2l3758 0092  
                                           _INTCON 000FF2                                   __end_of___xxtofl 1E14  
                                 __end_of_lcd_init 2BBE                               __size_of_lcd_command 0010  
                                 __end_of_lcd_send 2C9E                                             ___flge 26A2  
                                 __end_of_lcd_puts 2B8E                                          ??___fladd 0056  
                                        ??___fldiv 0011                                          ??___flneg 000D  
                                        ??___flmul 0066                                          ??___flsub 006A  
                                        ??___fltol 00A6                                       ?_timer0_init 0001  
                             __size_of_buffer_init 0010                                     ??_measure_freq 003D  
                                        ??___lwdiv 000D                                       ?_timer2_init 0001  
                                        ??___lwmod 000D                                             _buffer 0100  
                             __size_of_buffer_puts 0026                                             clear_0 28B2  
                                           clear_1 28BE                                             clear_2 28CA  
                                           log10@x 009A                                             floor@i 00B0  
                                           floor@x 00AC                                 timer2_init@ps_mode 000C  
                                __end_ofi2___lwdiv 29DE                                       __mediumconst 0000  
                                           tblptrh 000FF7                                             tblptrl 000FF6  
                                           tblptru 000FF8                               __end_of_buffer_putch 298A  
                                 format_number@buf 0016                                   format_number@pad 0013  
                          _measure_inductance$1310 00BC                            _measure_inductance$1311 00C0  
                          _measure_inductance$1305 00B4                            _measure_inductance$1306 00C5  
                          _measure_inductance$1307 00C9                            _measure_inductance$1308 00CD  
                          _measure_inductance$1309 00B8                                          ??_put_str 000F  
                                       ___flge@ff1 0009                                         ___flge@ff2 000D  
                                     ___xxtofl@arg 004A                                   __end_ofexp@coeff 0629  
                                     ___xxtofl@exp 0049                                       ___xxtofl@val 0040  
                                    _format_double 187C                                   __end_oflog@coeff 064D  
                                       __accesstop 0080                            __end_of__initialization 28D0  
                                       ___flneg@f1 0009                                      _format_number 23F4  
                                     eval_poly@res 006B                                      ___rparam_used 000001  
                                       ___fltol@f1 00A2                             measure_capacitance@Cin 00BB  
                     __size_of_measure_capacitance 030A                             measure_capacitance@var 00B9  
                            lcd_gotoxy@row_offsets 000F                                     __pcstackCOMRAM 0001  
                               __size_of_calibrate 00F6                                       __pidataBANK0 2D04  
                               __size_of_delay10ms 0006                                      __end_of_log10 288C  
                                    __end_of_floor 2044                                      __end_of_ldexp 2604  
                                    __end_of_frexp 27BA                                     buffer_putch@ch 000B  
                               __size_of_lcd_begin 00EA                                 __size_of_lcd_clear 001E  
                                          ??_log10 006F                                 __size_of_lcd_putch 0010  
                                          ??_floor 006F                                            ??_ldexp 009A  
                                          ??_frexp 000E                                         _log10$1314 009E  
                                       __pbssBANK0 00DB                                         __pbssBANK1 0100  
                                   ?_format_double 00D6                                 __size_of_eval_poly 00CC  
                                   ?_format_number 0010                                     print_unit@unit 0001  
                         __size_of_print_indicator 002A                                            ?___flge 0009  
                          __size_of_timer0_read_ps 004E                                 _measure_inductance 06B6  
                                 ??_lcd_write4bits 0009                                            _INTCON2 000FF1  
                                        ?___xxtofl 0040                                         _lcd_gotoxy 2AEC  
                              ?_measure_inductance 0001                                  __end_of_calibrate 223E  
                                        ?_lcd_init 0001                                          ?_lcd_send 000A  
                                __end_of_delay10ms 2D04                                          ?_lcd_puts 000D  
                             __end_of_measure_freq 2148                                         calibrate@i 004E  
                                          __Hparam 0000                                            __Lparam 0000  
                             ??_measure_inductance 006F                                  __end_of_lcd_begin 2328  
                                __end_of_lcd_clear 2CBC                                    __size_of___flge 009A  
                                          ___fladd 11AA                                  __end_of_lcd_putch 2CCC  
                                          ___fldiv 1670                                            ___flneg 2C5A  
                                          ___flmul 0EE8                                            ___flsub 2A74  
                                          ___fltol 24A8                                            ___lwdiv 28E2  
                                          ___lwmod 2A2C                                       __psmallconst 0600  
                                          __pcinit 288C                                  __end_of_eval_poly 23F4  
                                          __ramtop 0600                               __size_of_timer0_init 009E  
                                          __ptext0 1E14                                            __ptext1 2B24  
                                          __ptext2 2604                                            __ptext3 2BBE  
                                          __ptext4 06B6                                            __ptext5 0BDE  
                                          __ptext6 2BE8                                            __ptext7 27BA  
                                          __ptext8 2B5A                                            __ptext9 2B8E  
                             __size_of_timer2_init 0036                              __size_of_buffer_putch 0054  
                                        _T0CONbits 000FD5                                       __size_of_exp 0222  
                                     __size_of_log 0130                                       __size_of_isr 0094  
                                     __size_of_pow 0194                                         ??___xxtofl 0044  
                                          _seconds 0119                                     lcd_putch@value 000C  
                                  ??_format_double 006F                                            _put_str 2AB4  
                                       ??_lcd_init 0009                                         ??_lcd_send 000B  
                                       ??_lcd_puts 000E                               end_of_initialization 28D0  
                                  ??_format_number 0014                                            exp@sign 00C0  
                                        _LCD_lines 0073                                       _lcd_init$361 000A  
                                   lcd_puts@string 000D                                            pow@sign 00D1  
                    measure_inductance@denominator 00B0                              __end_of_print_reading 282E  
                                     _buffer_putch 2936                                  format_number@base 0012  
                                          postdec1 000FE5                                            postdec2 000FDD  
                                          postinc0 000FEE                                            postinc2 000FDE  
                                ??_print_indicator 0013                                          _PORTCbits 000F82  
                                      ___fladd@grs 005D                                         _print_unit 2BE8  
                                    ?_print_buffer 0001                                      ___xxtofl@sign 0048  
                              _measure_capacitance 0BDE                                        ?_lcd_gotoxy 000D  
                                     _led_interval 00F1                                        ___fldiv@grs 001C  
                                      ___fldiv@rem 0016                                  i2___lwdiv@divisor 0003  
                                        i2___lwdiv 298A                                  i2___lwdiv@counter 0007  
                                      ___flmul@grs 0083                                      ??_lcd_command 000C  
                                    ??_buffer_init 0009                               ?_measure_capacitance 0001  
                                    ??_buffer_puts 000D                            measure_capacitance@unit 00B8  
                                   format_double@m 012B                             measure_inductance@unit 00C4  
                                   __end_of___flge 273C                                     _timer0_read_ps 29DE  
                                  lcd_gotoxy@F2308 00F3                                         floor@expon 00B4  
                                   ??_print_buffer 0009                                     format_number@i 003A  
                                   format_number@n 0010                                start_initialization 288C  
                                       eval_poly@d 0091                                         eval_poly@n 0092  
                                       eval_poly@x 008D                              __size_of_measure_freq 0104  
                                       ldexp@value 0094                                        __end_of_exp 1670  
                                      __end_of_log 1CE6                                        __end_of_isr 009C  
                                      __end_of_pow 1BB6                                       _LCD_function 0076  
                               format_double@digit 0129                                         ?i2___lwdiv 0001  
                                       frexp@value 0009                              ??_measure_capacitance 006F  
                           __end_of_timer0_read_ps 2A2C                                           ??___flge 0011  
                              __size_of_lcd_gotoxy 0038                                __end_of_lcd_command 2CEC  
                                      __pdataBANK0 00F3                                       _measure_freq 2044  
                              __end_of_buffer_init 2CDC                                __end_of_buffer_puts 2C34  
                         print_reading@measurement 003B                                          ___fladd@a 0052  
                                        ___fladd@b 004E                                          ___fldiv@a 000D  
                                        ___fldiv@b 0009                                        ?_print_unit 0001  
                                        ___flmul@a 0062                                          ___flmul@b 005E  
                                      __pbssCOMRAM 006F                                          ___flsub@a 0091  
                                        ___flsub@b 008D                                      __pcstackBANK0 0080  
                                    __pcstackBANK1 011D                                  __size_of___xxtofl 012E  
                                    ?_output_putch 0001                                  measure_freq@count 003E  
                                 lcd_command@value 000C                                  __size_of_lcd_init 0030  
                                __size_of_lcd_send 0020                                          _calibrate 2148  
                                __size_of_lcd_puts 0034                                          _delay10ms 2CFE  
                                        __pnvBANK0 00E9                                   ___lwdiv@dividend 0009  
                                  ?_timer0_read_ps 0009                                          __pintcode 0008  
                                         ?___fladd 004E                                           ?___fldiv 0009  
                                         ?___flneg 0009                                           ?___flmul 005E  
                                         ?___flsub 008D                                           ?___fltol 00A2  
                                         ?___lwdiv 0009                                           ?___lwmod 0009  
                                        _lcd_begin 223E                                          _lcd_clear 2C9E  
                                        _lcd_putch 2CBC                                          _led_cycle 006F  
                                      __smallconst 0600                                          _eval_poly 2328  
                                    output_putch@c 000D                                     ??_output_putch 000D  
                                 ___lwdiv@quotient 000D                                     __size_of_log10 005E  
                                         ?_put_str 000E                                     __size_of_floor 0104  
                                   __size_of_ldexp 00AA                                     __size_of_frexp 007E  
                                      ??i2___lwdiv 0005                                         ?_calibrate 0001  
                                       ?_delay10ms 0001                                           _LCD_ctrl 0075  
                                         _LCD_mode 0074                                    _print_indicator 2BBE  
                                      _lcd_command 2CDC                               __end_of_print_buffer 2CFE  
                              __size_of_print_unit 0026                                           _PIR1bits 000F9E  
                                         i2u370_48 0068                                           i2u365_40 29AC  
                                         i2u368_40 002C                                           i2u369_40 0066  
                                      _buffer_init 2CCC                                        _buffer_puts 2C0E  
                      __size_of_measure_inductance 0528                                      ??_timer0_init 0009  
                                    ??_timer2_init 0009                                         ?_lcd_begin 000D  
                                       ?_lcd_clear 0001                                         ?_lcd_putch 0001  
                                       ?_eval_poly 008D                                          lcd_puts@i 000F  
                                     ??_lcd_gotoxy 000E                              measure_inductance@Lin 00D3  
                            measure_inductance@var 00D1                                          copy_data0 28A0  
                            __end_of_format_double 1A22                               format_number@padchar 0038  
                          __size_of_lcd_write4bits 0026                              __end_of_format_number 24A8  
                                        frexp@eptr 000D                                           __Hrparam 0000  
                                         __Lrparam 0000                                       __Lsmallconst 0600  
                               __end_of_lcd_gotoxy 2B24                                   __size_of___fladd 02A4  
                                 __size_of___fldiv 020C                                   __size_of___flneg 0024  
                                 __size_of___flmul 02C2                                   __size_of___flsub 0040  
                                 __size_of___fltol 00B2                                   __size_of___lwdiv 0054  
                                 __size_of___lwmod 0048                                      timer2_init@ps 000A  
                              __end_of_timer0_init 26A2                                           _exp$1317 00BA  
                              __end_of_timer2_init 2B5A                                           ___xxtofl 1CE6  
                                  ___lwdiv@divisor 000B                                    ___lwdiv@counter 000F  
                           __size_of_print_reading 0074                               timer0_init@prescaler 0012  
                                         __ptext10 223E                                           __ptext11 187C  
                                         __ptext20 1670                                           __ptext12 1A22  
                                         __ptext21 282E                                           __ptext13 144E  
                                         __ptext30 2CBC                                           __ptext22 1BB6  
                                         __ptext14 255A                                           __ptext31 2044  
                                         __ptext23 273C                                           __ptext15 1F40  
                                         __ptext40 2CCC                                           __ptext32 29DE  
                                         __ptext24 2328                                           __ptext16 24A8  
                                         __ptext41 2C9E                                           __ptext33 2CF8  
                                         __ptext25 0EE8                                           __ptext17 26A2  
                                         __ptext42 2CDC                                           __ptext34 2AEC  
                                         __ptext26 11AA                                           __ptext18 2A74  
                                         __ptext43 2C7E                                           __ptext35 23F4  
                                         __ptext27 2148                                           __ptext19 2C5A  
                                         __ptext44 2C34                                           __ptext36 2A2C  
                                         __ptext28 2AB4                                           __ptext45 2CFE  
                                         __ptext37 28E2                                           __ptext29 2CEC  
                                         __ptext46 1CE6                                           __ptext38 2C0E  
                                         __ptext39 2936                                           __ptext48 298A  
                                         _lcd_init 2B8E                                           _lcd_send 2C7E  
                          __end_of_print_indicator 2BE8                                           _pow$1315 00C9  
                                         _pow$1316 00CD                                           _lcd_puts 2B5A  
                                 __size_of_put_str 0038                                        ??_calibrate 004E  
                                    __size_of_main 012C                                        ??_delay10ms 0009  
                                         _msecpart 0071                                           _timer1of 0111  
                             __end_of_output_putch 2CF8                                           int$flags 0077  
                                      ??_lcd_begin 000E                                        ??_lcd_clear 000D  
                                      ??_lcd_putch 000C                                           exp@coeff 0601  
                                         log@coeff 0629                        measure_inductance@numerator 00AC  
                                     ??_print_unit 0013                                         _INTCONbits 000FF2  
                                      ??_eval_poly 006A                                 _print_reading$1312 003D  
                               _print_reading$1313 003F                                           intlevel2 2D0A  
                      __end_of_measure_capacitance 0EE8                              __size_of_print_buffer 0006  
                                 ___lwmod@dividend 0009                                   ??_timer0_read_ps 000B  
                               __end_of_print_unit 2C0E                                      _print_reading 27BA  
                             delay10ms@period_10ms 0001                                        _timer0_init 2604  
                                      _timer2_init 2B24                                 _format_double$1300 011D  
                               _format_double$1301 0121                           _measure_capacitance$1302 00AC  
                         _measure_capacitance$1303 00B0                           _measure_capacitance$1304 00B4  
                                         put_str@i 0010                                           put_str@s 000E  
                               timer0_init@ps_mode 0013                                    ___lwmod@divisor 000B  
                                  ___lwmod@counter 000D                                       _print_buffer 2CF8  
                          print_indicator@indicate 0013                                      ___fladd@signs 005A  
                                 ?_print_indicator 0001                                     _lcd_write4bits 2C34  
                                     ___fladd@aexp 005B                                       ___fladd@bexp 005C  
                                     ?_lcd_command 0001                                     ?_print_reading 003B  
                                     ?_buffer_init 0001                                       ?_buffer_puts 000C  
                                    ?_buffer_putch 0001  
