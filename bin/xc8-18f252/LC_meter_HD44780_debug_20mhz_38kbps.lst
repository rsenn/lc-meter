

Microchip Technology PIC18 PRO Macro Assembler V1.45 build -152302408 
                                                                                               Thu Jul  2 17:31:50 2020

Microchip Technology Omniscient Code Generator v1.45 (PRO mode) build 201711160504
     1                           	processor	18F252
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	pm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    12                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    14                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    15                           	psect	text0,global,reloc=2,class=CODE,delta=1
    16                           	psect	text1,global,reloc=2,class=CODE,delta=1
    17                           	psect	text2,global,reloc=2,class=CODE,delta=1
    18                           	psect	text3,global,reloc=2,class=CODE,delta=1
    19                           	psect	text4,global,reloc=2,class=CODE,delta=1
    20                           	psect	text5,global,reloc=2,class=CODE,delta=1
    21                           	psect	text6,global,reloc=2,class=CODE,delta=1
    22                           	psect	text7,global,reloc=2,class=CODE,delta=1
    23                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=1
    24                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=1
    25                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=1
    26                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=1
    27                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=1
    28                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=1
    29                           	psect	text14,global,reloc=2,class=CODE,delta=1
    30                           	psect	text15,global,reloc=2,class=CODE,delta=1
    31                           	psect	text16,global,reloc=2,class=CODE,delta=1
    32                           	psect	text17,global,reloc=2,class=CODE,delta=1
    33                           	psect	text18,global,reloc=2,class=CODE,delta=1
    34                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=1
    35                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=1
    36                           	psect	text21,global,reloc=2,class=CODE,delta=1
    37                           	psect	text22,global,reloc=2,class=CODE,delta=1
    38                           	psect	text23,global,reloc=2,class=CODE,delta=1
    39                           	psect	text24,global,reloc=2,class=CODE,delta=1
    40                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=1
    41                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=1
    42                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    43                           	psect	text28,global,reloc=2,class=CODE,delta=1
    44                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    45                           	psect	text29,global,reloc=2,class=CODE,delta=1
    46                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    47                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    48  0000                     
    49                           ; Version 1.45
    50                           ; Generated 16/11/2017 GMT
    51                           ; 
    52                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    53                           ; All rights reserved.
    54                           ; 
    55                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    56                           ; 
    57                           ; Redistribution and use in source and binary forms, with or without modification, are
    58                           ; permitted provided that the following conditions are met:
    59                           ; 
    60                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    61                           ;        conditions and the following disclaimer.
    62                           ; 
    63                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    64                           ;        of conditions and the following disclaimer in the documentation and/or other
    65                           ;        materials provided with the distribution.
    66                           ; 
    67                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    68                           ;        software without specific prior written permission.
    69                           ; 
    70                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    71                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    72                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    73                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    74                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    75                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    76                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    77                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    78                           ; 
    79                           ; 
    80                           ; Code-generator required, PIC18F252 Definitions
    81                           ; 
    82                           ; SFR Addresses
    83  0000                     
    84                           	psect	idataCOMRAM
    85  001816                     __pidataCOMRAM:
    86                           	opt stack 0
    87                           
    88                           ;initializer for _mode
    89  001816  FF                 	db	255
    90                           
    91                           	psect	smallconst
    92  000600                     __psmallconst:
    93                           	opt stack 0
    94  000600  00                 	db	0
    95  000601  00                 	db	0
    96  000602  80                 	db	128
    97  000603  3F                 	db	63
    98  000604  72                 	db	114
    99  000605  31                 	db	49
   100  000606  3F                 	db	63
   101  000607  FE                 	db	254
   102  000608  75                 	db	117
   103  000609  3E                 	db	62
   104  00060A  58                 	db	88
   105  00060B  63                 	db	99
   106  00060C  3D                 	db	61
   107  00060D  95                 	db	149
   108  00060E  1D                 	db	29
   109  00060F  3C                 	db	60
   110  000610  C5                 	db	197
   111  000611  AE                 	db	174
   112  000612  3A                 	db	58
   113  000613  79                 	db	121
   114  000614  21                 	db	33
   115  000615  39                 	db	57
   116  000616  94                 	db	148
   117  000617  80                 	db	128
   118  000618  37                 	db	55
   119  000619  93                 	db	147
   120  00061A  A7                 	db	167
   121  00061B  35                 	db	53
   122  00061C  56                 	db	86
   123  00061D  15                 	db	21
   124  00061E  34                 	db	52
   125  00061F                     __end_ofexp@coeff:
   126                           	opt stack 0
   127  00061F  00                 	db	0
   128  000620  00                 	db	0
   129  000621  00                 	db	0
   130  000622  00                 	db	0
   131  000623  80                 	db	128
   132  000624  3F                 	db	63
   133  000625  F0                 	db	240
   134  000626  FF                 	db	255
   135  000627  BE                 	db	190
   136  000628  E2                 	db	226
   137  000629  A9                 	db	169
   138  00062A  3E                 	db	62
   139  00062B  83                 	db	131
   140  00062C  76                 	db	118
   141  00062D  BE                 	db	190
   142  00062E  AE                 	db	174
   143  00062F  2B                 	db	43
   144  000630  3E                 	db	62
   145  000631  3C                 	db	60
   146  000632  C3                 	db	195
   147  000633  BD                 	db	189
   148  000634  D2                 	db	210
   149  000635  13                 	db	19
   150  000636  3D                 	db	61
   151  000637  78                 	db	120
   152  000638  D3                 	db	211
   153  000639  BB                 	db	187
   154  00063A                     __end_oflog@coeff:
   155                           	opt stack 0
   156  00063A                     STR_1:
   157  00063A  46                 	db	70	;'F'
   158  00063B  72                 	db	114	;'r'
   159  00063C  65                 	db	101	;'e'
   160  00063D  71                 	db	113	;'q'
   161  00063E  3D                 	db	61	;'='
   162  00063F  00                 	db	0
   163                           
   164                           ; #config settings
   165  000640  00                 	db	0	; dummy byte at the end
   166  0000                     
   167                           	psect	nvCOMRAM
   168  000064                     __pnvCOMRAM:
   169                           	opt stack 0
   170  000064                     _bres:
   171                           	opt stack 0
   172  000064                     	ds	4
   173  000068                     _led_interval:
   174                           	opt stack 0
   175  000068                     	ds	2
   176                           
   177                           	psect	nvBANK0
   178  0000BE                     __pnvBANK0:
   179                           	opt stack 0
   180  0000BE                     _CCal:
   181                           	opt stack 0
   182  0000BE                     	ds	3
   183  0000                     _TMR0	set	4054
   184  0000                     _PIE1	set	3997
   185  0000                     _PIR1	set	3998
   186  0000                     _TMR2	set	4044
   187  0000                     _T2CON	set	4042
   188  0000                     _T0CONbits	set	4053
   189  0000                     _T0CON	set	4053
   190  0000                     _INTCONbits	set	4082
   191  0000                     _PORTC	set	3970
   192  0000                     _INTCON	set	4082
   193  0000                     _PORTCbits	set	3970
   194  0000                     _TRISC	set	3988
   195  0000                     _INTCON2	set	4081
   196  0000                     _TRISB	set	3987
   197  0000                     _TRISA	set	3986
   198  0000                     _LATC	set	3979
   199  0000                     _PIR1bits	set	3998
   200                           
   201                           	psect	cinit
   202  001722                     __pcinit:
   203                           	opt stack 0
   204  001722                     start_initialization:
   205                           	opt stack 0
   206  001722                     __initialization:
   207                           	opt stack 0
   208                           
   209                           ; Initialize objects allocated to COMRAM (1 bytes)
   210                           ; load TBLPTR registers with __pidataCOMRAM
   211  001722  0E16               	movlw	low __pidataCOMRAM
   212  001724  6EF6               	movwf	tblptrl,c
   213  001726  0E18               	movlw	high __pidataCOMRAM
   214  001728  6EF7               	movwf	tblptrh,c
   215  00172A  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   216  00172C  6EF8               	movwf	tblptru,c
   217  00172E  0009               	tblrd		*+	;fetch initializer
   218  001730  CFF5 F06A          	movff	tablat,__pdataCOMRAM
   219                           
   220                           ; Clear objects allocated to BANK0 (29 bytes)
   221  001734  EE00  F0A1         	lfsr	0,__pbssBANK0
   222  001738  0E1D               	movlw	29
   223  00173A                     clear_0:
   224  00173A  6AEE               	clrf	postinc0,c
   225  00173C  06E8               	decf	wreg,f,c
   226  00173E  E1FD               	bnz	clear_0
   227                           
   228                           ; Clear objects allocated to COMRAM (15 bytes)
   229  001740  EE00  F055         	lfsr	0,__pbssCOMRAM
   230  001744  0E0F               	movlw	15
   231  001746                     clear_1:
   232  001746  6AEE               	clrf	postinc0,c
   233  001748  06E8               	decf	wreg,f,c
   234  00174A  E1FD               	bnz	clear_1
   235  00174C                     end_of_initialization:
   236                           	opt stack 0
   237  00174C                     __end_of__initialization:
   238                           	opt stack 0
   239  00174C  906B               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   240  00174E  926B               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   241  001750  0E00               	movlw	low (__Lmediumconst shr (0+16))
   242  001752  6EF8               	movwf	tblptru,c
   243  001754  0100               	movlb	0
   244  001756  EF8B  F007         	goto	_main	;jump to C main() function
   245                           tblptru	equ	0xFF8
   246                           tblptrh	equ	0xFF7
   247                           tblptrl	equ	0xFF6
   248                           tablat	equ	0xFF5
   249                           postinc0	equ	0xFEE
   250                           wreg	equ	0xFE8
   251                           
   252                           	psect	bssCOMRAM
   253  000055                     __pbssCOMRAM:
   254                           	opt stack 0
   255  000055                     _F3:
   256                           	opt stack 0
   257  000055                     	ds	3
   258  000058                     _F2:
   259                           	opt stack 0
   260  000058                     	ds	3
   261  00005B                     _blink:
   262                           	opt stack 0
   263  00005B                     	ds	2
   264  00005D                     _led_cycle:
   265                           	opt stack 0
   266  00005D                     	ds	2
   267  00005F                     _msecpart:
   268                           	opt stack 0
   269  00005F                     	ds	2
   270  000061                     _F1:
   271                           	opt stack 0
   272  000061                     	ds	3
   273                           tblptru	equ	0xFF8
   274                           tblptrh	equ	0xFF7
   275                           tblptrl	equ	0xFF6
   276                           tablat	equ	0xFF5
   277                           postinc0	equ	0xFEE
   278                           wreg	equ	0xFE8
   279                           
   280                           	psect	dataCOMRAM
   281  00006A                     __pdataCOMRAM:
   282                           	opt stack 0
   283  00006A                     _mode:
   284                           	opt stack 0
   285  00006A                     	ds	1
   286                           tblptru	equ	0xFF8
   287                           tblptrh	equ	0xFF7
   288                           tblptrl	equ	0xFF6
   289                           tablat	equ	0xFF5
   290                           postinc0	equ	0xFEE
   291                           wreg	equ	0xFE8
   292                           
   293                           	psect	bssBANK0
   294  0000A1                     __pbssBANK0:
   295                           	opt stack 0
   296  0000A1                     _buffer:
   297                           	opt stack 0
   298  0000A1                     	ds	17
   299  0000B2                     _timer1of:
   300                           	opt stack 0
   301  0000B2                     	ds	4
   302  0000B6                     _msecs:
   303                           	opt stack 0
   304  0000B6                     	ds	4
   305  0000BA                     _seconds:
   306                           	opt stack 0
   307  0000BA                     	ds	4
   308                           tblptru	equ	0xFF8
   309                           tblptrh	equ	0xFF7
   310                           tblptrl	equ	0xFF6
   311                           tablat	equ	0xFF5
   312                           postinc0	equ	0xFEE
   313                           wreg	equ	0xFE8
   314                           
   315                           	psect	cstackBANK0
   316  000080                     __pcstackBANK0:
   317                           	opt stack 0
   318  000080                     measure_inductance@numerator:
   319                           	opt stack 0
   320                           
   321                           ; 3 bytes @ 0x0
   322  000080                     	ds	3
   323  000083                     measure_inductance@denominator:
   324                           	opt stack 0
   325                           
   326                           ; 3 bytes @ 0x3
   327  000083                     	ds	3
   328  000086                     _measure_inductance$1281:
   329                           	opt stack 0
   330                           
   331                           ; 3 bytes @ 0x6
   332  000086                     	ds	3
   333  000089                     _measure_inductance$1285:
   334                           	opt stack 0
   335                           
   336                           ; 3 bytes @ 0x9
   337  000089                     	ds	3
   338  00008C                     _measure_inductance$1286:
   339                           	opt stack 0
   340                           
   341                           ; 3 bytes @ 0xC
   342  00008C                     	ds	3
   343  00008F                     _measure_inductance$1287:
   344                           	opt stack 0
   345                           
   346                           ; 3 bytes @ 0xF
   347  00008F                     	ds	3
   348  000092                     measure_inductance@unit:
   349                           	opt stack 0
   350                           
   351                           ; 1 bytes @ 0x12
   352  000092                     	ds	1
   353  000093                     _measure_inductance$1282:
   354                           	opt stack 0
   355                           
   356                           ; 3 bytes @ 0x13
   357  000093                     	ds	3
   358  000096                     _measure_inductance$1283:
   359                           	opt stack 0
   360                           
   361                           ; 3 bytes @ 0x16
   362  000096                     	ds	3
   363  000099                     _measure_inductance$1284:
   364                           	opt stack 0
   365                           
   366                           ; 3 bytes @ 0x19
   367  000099                     	ds	3
   368  00009C                     measure_inductance@var:
   369                           	opt stack 0
   370                           
   371                           ; 2 bytes @ 0x1C
   372  00009C                     	ds	2
   373  00009E                     measure_inductance@Lin:
   374                           	opt stack 0
   375                           
   376                           ; 3 bytes @ 0x1E
   377  00009E                     	ds	3
   378                           tblptru	equ	0xFF8
   379                           tblptrh	equ	0xFF7
   380                           tblptrl	equ	0xFF6
   381                           tablat	equ	0xFF5
   382                           postinc0	equ	0xFEE
   383                           wreg	equ	0xFE8
   384                           
   385                           	psect	cstackCOMRAM
   386  000001                     __pcstackCOMRAM:
   387                           	opt stack 0
   388  000001                     ?i2___lwdiv:
   389                           	opt stack 0
   390  000001                     i2___lwdiv@dividend:
   391                           	opt stack 0
   392                           
   393                           ; 2 bytes @ 0x0
   394  000001                     	ds	2
   395  000003                     i2___lwdiv@divisor:
   396                           	opt stack 0
   397                           
   398                           ; 2 bytes @ 0x2
   399  000003                     	ds	2
   400  000005                     i2___lwdiv@quotient:
   401                           	opt stack 0
   402                           
   403                           ; 2 bytes @ 0x4
   404  000005                     	ds	2
   405  000007                     i2___lwdiv@counter:
   406                           	opt stack 0
   407                           
   408                           ; 1 bytes @ 0x6
   409  000007                     	ds	1
   410  000008                     ??_isr:
   411                           
   412                           ; 1 bytes @ 0x7
   413  000008                     	ds	1
   414  000009                     ??_timer0_init:
   415  000009                     ??_timer2_init:
   416  000009                     ??_buffer_putch:
   417  000009                     ?_timer0_read_ps:
   418                           	opt stack 0
   419  000009                     ?___lwdiv:
   420                           	opt stack 0
   421  000009                     ?___lwmod:
   422                           	opt stack 0
   423  000009                     ?___ftpack:
   424                           	opt stack 0
   425  000009                     ?___fttol:
   426                           	opt stack 0
   427  000009                     print_reading@measurement:
   428                           	opt stack 0
   429  000009                     ___lwdiv@dividend:
   430                           	opt stack 0
   431  000009                     ___lwmod@dividend:
   432                           	opt stack 0
   433  000009                     ___ftpack@arg:
   434                           	opt stack 0
   435  000009                     ___ftge@ff1:
   436                           	opt stack 0
   437  000009                     ___fttol@f1:
   438                           	opt stack 0
   439                           
   440                           ; 3 bytes @ 0x8
   441  000009                     	ds	1
   442  00000A                     timer2_init@ps:
   443                           	opt stack 0
   444  00000A                     _timer0_init$500:
   445                           	opt stack 0
   446                           
   447                           ; 2 bytes @ 0x9
   448  00000A                     	ds	1
   449  00000B                     ??_timer0_read_ps:
   450  00000B                     buffer_putch@ch:
   451                           	opt stack 0
   452  00000B                     ___lwdiv@divisor:
   453                           	opt stack 0
   454  00000B                     ___lwmod@divisor:
   455                           	opt stack 0
   456                           
   457                           ; 2 bytes @ 0xA
   458  00000B                     	ds	1
   459  00000C                     buffer_puts@x:
   460                           	opt stack 0
   461  00000C                     timer2_init@ps_mode:
   462                           	opt stack 0
   463  00000C                     ___ftpack@exp:
   464                           	opt stack 0
   465  00000C                     _timer0_init$501:
   466                           	opt stack 0
   467  00000C                     ___ftge@ff2:
   468                           	opt stack 0
   469                           
   470                           ; 3 bytes @ 0xB
   471  00000C                     	ds	1
   472  00000D                     ??___fttol:
   473  00000D                     timer0_read_ps@prev:
   474                           	opt stack 0
   475  00000D                     ___ftpack@sign:
   476                           	opt stack 0
   477  00000D                     ___lwdiv@counter:
   478                           	opt stack 0
   479  00000D                     ___lwmod@counter:
   480                           	opt stack 0
   481                           
   482                           ; 1 bytes @ 0xC
   483  00000D                     	ds	1
   484  00000E                     ??___ftpack:
   485  00000E                     _timer0_init$502:
   486                           	opt stack 0
   487  00000E                     timer0_read_ps@count:
   488                           	opt stack 0
   489  00000E                     ___lwdiv@quotient:
   490                           	opt stack 0
   491                           
   492                           ; 2 bytes @ 0xD
   493  00000E                     	ds	1
   494  00000F                     ??___ftge:
   495                           
   496                           ; 1 bytes @ 0xE
   497  00000F                     	ds	1
   498  000010                     format_number@fn:
   499                           	opt stack 0
   500  000010                     _timer0_init$503:
   501                           	opt stack 0
   502                           
   503                           ; 2 bytes @ 0xF
   504  000010                     	ds	1
   505  000011                     ?___ftadd:
   506                           	opt stack 0
   507  000011                     ?___ftdiv:
   508                           	opt stack 0
   509  000011                     ___ftadd@f1:
   510                           	opt stack 0
   511  000011                     ___ftdiv@f1:
   512                           	opt stack 0
   513                           
   514                           ; 3 bytes @ 0x10
   515  000011                     	ds	1
   516  000012                     timer0_init@prescaler:
   517                           	opt stack 0
   518  000012                     ___fttol@sign1:
   519                           	opt stack 0
   520  000012                     format_number@n:
   521                           	opt stack 0
   522                           
   523                           ; 2 bytes @ 0x11
   524  000012                     	ds	1
   525  000013                     timer0_init@ps_mode:
   526                           	opt stack 0
   527  000013                     ___fttol@lval:
   528                           	opt stack 0
   529                           
   530                           ; 4 bytes @ 0x12
   531  000013                     	ds	1
   532  000014                     format_number@base:
   533                           	opt stack 0
   534  000014                     ___ftadd@f2:
   535                           	opt stack 0
   536  000014                     ___ftdiv@f2:
   537                           	opt stack 0
   538                           
   539                           ; 3 bytes @ 0x13
   540  000014                     	ds	1
   541  000015                     format_number@pad:
   542                           	opt stack 0
   543                           
   544                           ; 1 bytes @ 0x14
   545  000015                     	ds	1
   546  000016                     ??_format_number:
   547                           
   548                           ; 1 bytes @ 0x15
   549  000016                     	ds	1
   550  000017                     ??___ftadd:
   551  000017                     ??___ftdiv:
   552  000017                     ___fttol@exp1:
   553                           	opt stack 0
   554                           
   555                           ; 1 bytes @ 0x16
   556  000017                     	ds	1
   557  000018                     format_number@buf:
   558                           	opt stack 0
   559                           
   560                           ; 32 bytes @ 0x17
   561  000018                     	ds	2
   562  00001A                     ___ftadd@sign:
   563                           	opt stack 0
   564  00001A                     ___ftdiv@cntr:
   565                           	opt stack 0
   566                           
   567                           ; 1 bytes @ 0x19
   568  00001A                     	ds	1
   569  00001B                     ___ftadd@exp2:
   570                           	opt stack 0
   571  00001B                     ___ftdiv@f3:
   572                           	opt stack 0
   573                           
   574                           ; 3 bytes @ 0x1A
   575  00001B                     	ds	1
   576  00001C                     ___ftadd@exp1:
   577                           	opt stack 0
   578                           
   579                           ; 1 bytes @ 0x1B
   580  00001C                     	ds	2
   581  00001E                     ___ftdiv@exp:
   582                           	opt stack 0
   583                           
   584                           ; 1 bytes @ 0x1D
   585  00001E                     	ds	1
   586  00001F                     ___ftdiv@sign:
   587                           	opt stack 0
   588                           
   589                           ; 1 bytes @ 0x1E
   590  00001F                     	ds	1
   591  000020                     ?___ftmul:
   592                           	opt stack 0
   593  000020                     ___ftmul@f1:
   594                           	opt stack 0
   595                           
   596                           ; 3 bytes @ 0x1F
   597  000020                     	ds	3
   598  000023                     ___ftmul@f2:
   599                           	opt stack 0
   600                           
   601                           ; 3 bytes @ 0x22
   602  000023                     	ds	3
   603  000026                     ??___ftmul:
   604                           
   605                           ; 1 bytes @ 0x25
   606  000026                     	ds	3
   607  000029                     ___ftmul@exp:
   608                           	opt stack 0
   609                           
   610                           ; 1 bytes @ 0x28
   611  000029                     	ds	1
   612  00002A                     ___ftmul@f3_as_product:
   613                           	opt stack 0
   614                           
   615                           ; 3 bytes @ 0x29
   616  00002A                     	ds	3
   617  00002D                     ___ftmul@cntr:
   618                           	opt stack 0
   619                           
   620                           ; 1 bytes @ 0x2C
   621  00002D                     	ds	1
   622  00002E                     ___ftmul@sign:
   623                           	opt stack 0
   624                           
   625                           ; 1 bytes @ 0x2D
   626  00002E                     	ds	1
   627  00002F                     ?___ftsub:
   628                           	opt stack 0
   629  00002F                     ___ftsub@f1:
   630                           	opt stack 0
   631                           
   632                           ; 3 bytes @ 0x2E
   633  00002F                     	ds	3
   634  000032                     ___ftsub@f2:
   635                           	opt stack 0
   636                           
   637                           ; 3 bytes @ 0x31
   638  000032                     	ds	3
   639  000035                     
   640                           ; 1 bytes @ 0x34
   641  000035                     	ds	3
   642  000038                     _format_number$384:
   643                           	opt stack 0
   644                           
   645                           ; 2 bytes @ 0x37
   646  000038                     	ds	2
   647  00003A                     format_number@padchar:
   648                           	opt stack 0
   649                           
   650                           ; 1 bytes @ 0x39
   651  00003A                     	ds	1
   652  00003B                     format_number@di:
   653                           	opt stack 0
   654                           
   655                           ; 1 bytes @ 0x3A
   656  00003B                     	ds	1
   657  00003C                     format_number@i:
   658                           	opt stack 0
   659                           
   660                           ; 1 bytes @ 0x3B
   661  00003C                     	ds	1
   662  00003D                     ?_measure_freq:
   663                           	opt stack 0
   664                           
   665                           ; 2 bytes @ 0x3C
   666  00003D                     	ds	2
   667  00003F                     ??_measure_freq:
   668                           
   669                           ; 1 bytes @ 0x3E
   670  00003F                     	ds	1
   671  000040                     measure_freq@count:
   672                           	opt stack 0
   673                           
   674                           ; 2 bytes @ 0x3F
   675  000040                     	ds	2
   676  000042                     ?___lwtoft:
   677                           	opt stack 0
   678  000042                     ___lwtoft@c:
   679                           	opt stack 0
   680                           
   681                           ; 2 bytes @ 0x41
   682  000042                     	ds	3
   683  000045                     _measure_capacitance$1278:
   684                           	opt stack 0
   685                           
   686                           ; 3 bytes @ 0x44
   687  000045                     	ds	3
   688  000048                     _measure_capacitance$1279:
   689                           	opt stack 0
   690                           
   691                           ; 3 bytes @ 0x47
   692  000048                     	ds	3
   693  00004B                     _measure_capacitance$1280:
   694                           	opt stack 0
   695                           
   696                           ; 3 bytes @ 0x4A
   697  00004B                     	ds	3
   698  00004E                     measure_capacitance@unit:
   699                           	opt stack 0
   700                           
   701                           ; 1 bytes @ 0x4D
   702  00004E                     	ds	1
   703  00004F                     measure_capacitance@var:
   704                           	opt stack 0
   705                           
   706                           ; 2 bytes @ 0x4E
   707  00004F                     	ds	2
   708  000051                     measure_capacitance@Cin:
   709                           	opt stack 0
   710                           
   711                           ; 3 bytes @ 0x50
   712  000051                     	ds	3
   713  000054                     main@new_mode:
   714                           	opt stack 0
   715                           
   716                           ; 1 bytes @ 0x53
   717  000054                     	ds	1
   718                           tblptru	equ	0xFF8
   719                           tblptrh	equ	0xFF7
   720                           tblptrl	equ	0xFF6
   721                           tablat	equ	0xFF5
   722                           postinc0	equ	0xFEE
   723                           wreg	equ	0xFE8
   724                           
   725 ;;
   726 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   727 ;;
   728 ;; *************** function _main *****************
   729 ;; Defined at:
   730 ;;		line 116 in file "/home/roman/Dokumente/Sources/lc-meter/obj/../LC-meter.c"
   731 ;; Parameters:    Size  Location     Type
   732 ;;		None
   733 ;; Auto vars:     Size  Location     Type
   734 ;;  new_mode        1   83[COMRAM] unsigned char 
   735 ;; Return value:  Size  Location     Type
   736 ;;                  1    wreg      void 
   737 ;; Registers used:
   738 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, cstack
   739 ;; Tracked objects:
   740 ;;		On entry : 0/0
   741 ;;		On exit  : 0/0
   742 ;;		Unchanged: 0/0
   743 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   744 ;;      Params:         0       0       0       0       0       0       0
   745 ;;      Locals:         1       0       0       0       0       0       0
   746 ;;      Temps:          0       0       0       0       0       0       0
   747 ;;      Totals:         1       0       0       0       0       0       0
   748 ;;Total ram usage:        1 bytes
   749 ;; Hardware stack levels required when called:    6
   750 ;; This function calls:
   751 ;;		_calibrate
   752 ;;		_delay10ms
   753 ;;		_measure_capacitance
   754 ;;		_measure_inductance
   755 ;;		_print_indicator
   756 ;;		_timer0_init
   757 ;;		_timer2_init
   758 ;; This function is called by:
   759 ;;		Startup code after reset
   760 ;; This function uses a non-reentrant model
   761 ;;
   762                           
   763                           	psect	text0
   764  000F16                     __ptext0:
   765                           	opt stack 0
   766  000F16                     _main:
   767                           	opt stack 0
   768  000F16  FFFF               	dw	65535	; assembler added errata NOP
   769                           
   770                           ;LC-meter.c: 117: bres = msecpart = msecs = seconds = 0;
   771                           
   772                           ;incstack = 0
   773  000F18  0100               	movlb	0	; () banked
   774  000F1A  6BBA               	clrf	_seconds& (0+255),b	;volatile
   775  000F1C  6BBB               	clrf	(_seconds+1)& (0+255),b	;volatile
   776  000F1E  6BBC               	clrf	(_seconds+2)& (0+255),b	;volatile
   777  000F20  6BBD               	clrf	(_seconds+3)& (0+255),b	;volatile
   778  000F22  C0BA  F0B6         	movff	_seconds,_msecs	;volatile
   779  000F26  C0BB  F0B7         	movff	_seconds+1,_msecs+1	;volatile
   780  000F2A  C0BC  F0B8         	movff	_seconds+2,_msecs+2	;volatile
   781  000F2E  C0BD  F0B9         	movff	_seconds+3,_msecs+3	;volatile
   782  000F32  C0B6  F05F         	movff	_msecs,_msecpart	;volatile
   783  000F36  C0B7  F060         	movff	_msecs+1,_msecpart+1	;volatile
   784  000F3A  C05F  F064         	movff	_msecpart,_bres	;volatile
   785  000F3E  C060  F065         	movff	_msecpart+1,_bres+1	;volatile
   786  000F42  6A66               	clrf	_bres+2,c	;volatile
   787  000F44  6A67               	clrf	_bres+3,c	;volatile
   788                           
   789                           ; BSR set to: 0
   790                           ;LC-meter.c: 118: mode = -1;
   791  000F46  686A               	setf	_mode,c
   792                           
   793                           ;LC-meter.c: 120: CCal = 1000;
   794  000F48  6BBE               	clrf	_CCal& (0+255),b
   795  000F4A  0E7A               	movlw	122
   796  000F4C  6FBF               	movwf	(_CCal+1)& (0+255),b
   797  000F4E  0E44               	movlw	68
   798  000F50  6FC0               	movwf	(_CCal+2)& (0+255),b
   799                           
   800                           ; BSR set to: 0
   801                           ;LC-meter.c: 122: led_cycle = 0;
   802  000F52  6A5D               	clrf	_led_cycle,c	;volatile
   803  000F54  6A5E               	clrf	_led_cycle+1,c	;volatile
   804                           
   805                           ;LC-meter.c: 123: led_interval = 500;
   806  000F56  0E01               	movlw	1
   807  000F58  6E69               	movwf	_led_interval+1,c	;volatile
   808  000F5A  0EF4               	movlw	244
   809  000F5C  6E68               	movwf	_led_interval,c	;volatile
   810                           
   811                           ;LC-meter.c: 133: TRISA = 0b11001111;
   812  000F5E  0ECF               	movlw	207
   813  000F60  6E92               	movwf	3986,c	;volatile
   814                           
   815                           ; BSR set to: 0
   816                           ;LC-meter.c: 135: TRISB &= 0b00001111;
   817  000F62  0E0F               	movlw	15
   818  000F64  1693               	andwf	3987,f,c	;volatile
   819                           
   820                           ; BSR set to: 0
   821                           ;LC-meter.c: 138: timer0_init(0b1000 | 0x20 | 0x40);
   822  000F66  0E68               	movlw	104
   823  000F68  EC9E  F009         	call	_timer0_init
   824                           
   825                           ;LC-meter.c: 139: timer2_init(0b100 | 0x80);
   826  000F6C  0E84               	movlw	132
   827  000F6E  ECAD  F00B         	call	_timer2_init
   828                           
   829                           ;LC-meter.c: 146: INTCON2 &= ~0b10000000;
   830  000F72  9EF1               	bcf	intcon2,7,c	;volatile
   831                           
   832                           ;LC-meter.c: 154: TRISC = 0b10110011;
   833  000F74  0EB3               	movlw	179
   834  000F76  6E94               	movwf	3988,c	;volatile
   835                           
   836                           ;LC-meter.c: 158: PORTCbits.RC3 = 1;
   837  000F78  8682               	bsf	3970,3,c	;volatile
   838                           
   839                           ;LC-meter.c: 161: TRISC &= ~(1 << 2);
   840  000F7A  9494               	bcf	3988,2,c	;volatile
   841                           
   842                           ;LC-meter.c: 162: LATC &= ~(1 << 2); LATC |= (!!(1)) << 2;;
   843  000F7C  948B               	bcf	3979,2,c	;volatile
   844  000F7E  848B               	bsf	3979,2,c	;volatile
   845                           
   846                           ;LC-meter.c: 164: timer2_init(0b000 | 0x80);
   847  000F80  0E80               	movlw	128
   848  000F82  ECAD  F00B         	call	_timer2_init
   849                           
   850                           ;LC-meter.c: 175: TRISC |= (1 << 4);
   851  000F86  8894               	bsf	3988,4,c	;volatile
   852                           
   853                           ;LC-meter.c: 176: TRISC &= ~(1 << 5);
   854  000F88  9A94               	bcf	3988,5,c	;volatile
   855                           
   856                           ;LC-meter.c: 178: LATC &= ~(1 << 5);
   857  000F8A  9A8B               	bcf	3979,5,c	;volatile
   858                           
   859                           ;LC-meter.c: 179: delay10ms(50);
   860  000F8C  0E32               	movlw	50
   861  000F8E  EC07  F00C         	call	_delay10ms
   862                           
   863                           ;LC-meter.c: 180: LATC |= (1 << 5);
   864  000F92  8A8B               	bsf	3979,5,c	;volatile
   865                           
   866                           ;LC-meter.c: 181: delay10ms(50);
   867  000F94  0E32               	movlw	50
   868  000F96  EC07  F00C         	call	_delay10ms
   869                           
   870                           ;LC-meter.c: 182: LATC &= ~(1 << 5);
   871  000F9A  9A8B               	bcf	3979,5,c	;volatile
   872                           
   873                           ;LC-meter.c: 183: delay10ms(50);
   874  000F9C  0E32               	movlw	50
   875  000F9E  EC07  F00C         	call	_delay10ms
   876                           
   877                           ;LC-meter.c: 184: LATC |= (1 << 5);
   878  000FA2  8A8B               	bsf	3979,5,c	;volatile
   879                           
   880                           ;LC-meter.c: 185: delay10ms(50);
   881  000FA4  0E32               	movlw	50
   882  000FA6  EC07  F00C         	call	_delay10ms
   883                           
   884                           ;LC-meter.c: 186: LATC &= ~(1 << 5);
   885  000FAA  9A8B               	bcf	3979,5,c	;volatile
   886                           
   887                           ;LC-meter.c: 196: INTCON |= 0xc0;
   888  000FAC  0EC0               	movlw	192
   889  000FAE  12F2               	iorwf	intcon,f,c	;volatile
   890                           
   891                           ;LC-meter.c: 209: delay10ms(5);
   892  000FB0  0E05               	movlw	5
   893  000FB2  EC07  F00C         	call	_delay10ms
   894                           
   895                           ;LC-meter.c: 214: calibrate();
   896  000FB6  EC39  F00A         	call	_calibrate	;wreg free
   897  000FBA                     l2969:
   898  000FBA  FFFF               	dw	65535	; assembler added errata NOP
   899  000FBC  0E01               	movlw	1
   900                           
   901                           ;LC-meter.c: 226: char new_mode = (!!(PORTC & (1 << 4)));
   902  000FBE  A882               	btfss	3970,4,c	;volatile
   903  000FC0  0E00               	movlw	0
   904  000FC2  6E54               	movwf	main@new_mode,c
   905                           
   906                           ;LC-meter.c: 228: if(new_mode != mode) {
   907  000FC4  186A               	xorwf	_mode,w,c
   908  000FC6  E002               	bz	l2975
   909                           
   910                           ;LC-meter.c: 233: mode = new_mode;
   911  000FC8  C054  F06A         	movff	main@new_mode,_mode
   912  000FCC                     l2975:
   913                           
   914                           ;LC-meter.c: 234: }
   915                           ;LC-meter.c: 236: if(led_cycle >= led_interval)
   916  000FCC  5068               	movf	_led_interval,w,c	;volatile
   917  000FCE  5C5D               	subwf	_led_cycle,w,c	;volatile
   918  000FD0  5069               	movf	_led_interval+1,w,c	;volatile
   919  000FD2  585E               	subwfb	_led_cycle+1,w,c	;volatile
   920  000FD4  E302               	bnc	l2979
   921                           
   922                           ;LC-meter.c: 237: led_cycle = 0;
   923  000FD6  6A5D               	clrf	_led_cycle,c	;volatile
   924  000FD8  6A5E               	clrf	_led_cycle+1,c	;volatile
   925  000FDA                     l2979:
   926                           
   927                           ;LC-meter.c: 239: if(mode)
   928  000FDA  506A               	movf	_mode,w,c
   929  000FDC  E003               	bz	l2983
   930                           
   931                           ;LC-meter.c: 240: measure_capacitance();
   932  000FDE  EC23  F005         	call	_measure_capacitance	;wreg free
   933  000FE2  D002               	goto	l2985
   934  000FE4                     l2983:
   935                           
   936                           ;LC-meter.c: 241: else
   937                           ;LC-meter.c: 242: measure_inductance();
   938  000FE4  EC21  F003         	call	_measure_inductance	;wreg free
   939  000FE8                     l2985:
   940  000FE8  FFFF               	dw	65535	; assembler added errata NOP
   941                           
   942                           ;LC-meter.c: 244: print_indicator(1);
   943  000FEA  0E01               	movlw	1
   944  000FEC  ECFB  F00B         	call	_print_indicator
   945                           
   946                           ;LC-meter.c: 245: delay10ms(30);
   947  000FF0  0E1E               	movlw	30
   948  000FF2  EC07  F00C         	call	_delay10ms
   949                           
   950                           ;LC-meter.c: 247: print_indicator(0);
   951  000FF6  0E00               	movlw	0
   952  000FF8  ECFB  F00B         	call	_print_indicator
   953                           
   954                           ;LC-meter.c: 248: delay10ms(20);
   955  000FFC  0E14               	movlw	20
   956  000FFE  EC07  F00C         	call	_delay10ms
   957                           
   958                           ;LC-meter.c: 249: }
   959  001002  D7DB               	goto	l2969
   960  001004                     __end_of_main:
   961                           	opt stack 0
   962                           tblptru	equ	0xFF8
   963                           tblptrh	equ	0xFF7
   964                           tblptrl	equ	0xFF6
   965                           tablat	equ	0xFF5
   966                           intcon	equ	0xFF2
   967                           intcon2	equ	0xFF1
   968                           postinc0	equ	0xFEE
   969                           wreg	equ	0xFE8
   970                           
   971 ;; *************** function _timer2_init *****************
   972 ;; Defined at:
   973 ;;		line 145 in file "/home/roman/Dokumente/Sources/lc-meter/obj/../lib/timer.c"
   974 ;; Parameters:    Size  Location     Type
   975 ;;  ps_mode         1    wreg     unsigned char 
   976 ;; Auto vars:     Size  Location     Type
   977 ;;  ps_mode         1   11[COMRAM] unsigned char 
   978 ;;  postscaler      1    0        unsigned char 
   979 ;;  ps              1    9[COMRAM] unsigned char 
   980 ;; Return value:  Size  Location     Type
   981 ;;                  1    wreg      void 
   982 ;; Registers used:
   983 ;;		wreg, status,2, status,0
   984 ;; Tracked objects:
   985 ;;		On entry : 0/0
   986 ;;		On exit  : 0/0
   987 ;;		Unchanged: 0/0
   988 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   989 ;;      Params:         0       0       0       0       0       0       0
   990 ;;      Locals:         3       0       0       0       0       0       0
   991 ;;      Temps:          1       0       0       0       0       0       0
   992 ;;      Totals:         4       0       0       0       0       0       0
   993 ;;Total ram usage:        4 bytes
   994 ;; Hardware stack levels used:    1
   995 ;; Hardware stack levels required when called:    2
   996 ;; This function calls:
   997 ;;		Nothing
   998 ;; This function is called by:
   999 ;;		_main
  1000 ;; This function uses a non-reentrant model
  1001 ;;
  1002                           
  1003                           	psect	text1
  1004  00175A                     __ptext1:
  1005                           	opt stack 0
  1006  00175A                     _timer2_init:
  1007                           	opt stack 0
  1008  00175A  FFFF               	dw	65535	; assembler added errata NOP
  1009                           
  1010                           ;incstack = 0
  1011                           ;timer2_init@ps_mode stored from wreg
  1012  00175C  6E0C               	movwf	timer2_init@ps_mode,c
  1013                           
  1014                           ;timer.c: 146: uint8_t ps = ps_mode & 0b1111;
  1015  00175E  500C               	movf	timer2_init@ps_mode,w,c
  1016  001760  0B0F               	andlw	15
  1017  001762  6E0A               	movwf	timer2_init@ps,c
  1018                           
  1019                           ;timer.c: 150: T2CON &= ~0b01111111;
  1020  001764  0E80               	movlw	128
  1021  001766  16CA               	andwf	4042,f,c	;volatile
  1022                           
  1023                           ;timer.c: 152: T2CON |= (postscaler & 0b1111) << 3;
  1024  001768  50CA               	movf	4042,w,c	;volatile
  1025                           
  1026                           ;timer.c: 153: T2CON |= (ps & 0b11);
  1027  00176A  500A               	movf	timer2_init@ps,w,c
  1028  00176C  0B03               	andlw	3
  1029  00176E  12CA               	iorwf	4042,f,c	;volatile
  1030                           
  1031                           ;timer.c: 155: TMR2 = 0;
  1032  001770  6ACC               	clrf	4044,c	;volatile
  1033                           
  1034                           ;timer.c: 157: T2CON |= 0b100;
  1035  001772  84CA               	bsf	4042,2,c	;volatile
  1036                           
  1037                           ;timer.c: 160: PIR1 &= ~0b10;
  1038  001774  929E               	bcf	3998,1,c	;volatile
  1039                           
  1040                           ;timer.c: 161: PIE1 = (!!(ps_mode & 0x80)) << 1;
  1041  001776  AE0C               	btfss	timer2_init@ps_mode,7,c
  1042  001778  D003               	goto	u1740
  1043  00177A  6A09               	clrf	??_timer2_init& (0+255),c
  1044  00177C  2A09               	incf	??_timer2_init& (0+255),f,c
  1045  00177E  D002               	goto	u1758
  1046  001780                     u1740:
  1047  001780  FFFF               	dw	65535	; assembler added errata NOP
  1048  001782  6A09               	clrf	??_timer2_init& (0+255),c
  1049  001784                     u1758:
  1050  001784  FFFF               	dw	65535	; assembler added errata NOP
  1051  001786  90D8               	bcf	status,0,c
  1052  001788  3409               	rlcf	??_timer2_init,w,c
  1053  00178A  6E9D               	movwf	3997,c	;volatile
  1054  00178C  0012               	return		;funcret
  1055  00178E  FFFF               	dw	65535	; errata NOP
  1056  001790                     __end_of_timer2_init:
  1057                           	opt stack 0
  1058                           tblptru	equ	0xFF8
  1059                           tblptrh	equ	0xFF7
  1060                           tblptrl	equ	0xFF6
  1061                           tablat	equ	0xFF5
  1062                           intcon	equ	0xFF2
  1063                           intcon2	equ	0xFF1
  1064                           postinc0	equ	0xFEE
  1065                           wreg	equ	0xFE8
  1066                           status	equ	0xFD8
  1067                           
  1068 ;; *************** function _timer0_init *****************
  1069 ;; Defined at:
  1070 ;;		line 26 in file "/home/roman/Dokumente/Sources/lc-meter/obj/../lib/timer.c"
  1071 ;; Parameters:    Size  Location     Type
  1072 ;;  ps_mode         1    wreg     unsigned char 
  1073 ;; Auto vars:     Size  Location     Type
  1074 ;;  ps_mode         1   18[COMRAM] unsigned char 
  1075 ;;  prescaler       1   17[COMRAM] unsigned char 
  1076 ;; Return value:  Size  Location     Type
  1077 ;;                  1    wreg      void 
  1078 ;; Registers used:
  1079 ;;		wreg, status,2, status,0
  1080 ;; Tracked objects:
  1081 ;;		On entry : 3F/0
  1082 ;;		On exit  : 0/0
  1083 ;;		Unchanged: 0/0
  1084 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1085 ;;      Params:         0       0       0       0       0       0       0
  1086 ;;      Locals:        10       0       0       0       0       0       0
  1087 ;;      Temps:          1       0       0       0       0       0       0
  1088 ;;      Totals:        11       0       0       0       0       0       0
  1089 ;;Total ram usage:       11 bytes
  1090 ;; Hardware stack levels used:    1
  1091 ;; Hardware stack levels required when called:    2
  1092 ;; This function calls:
  1093 ;;		Nothing
  1094 ;; This function is called by:
  1095 ;;		_main
  1096 ;; This function uses a non-reentrant model
  1097 ;;
  1098                           
  1099                           	psect	text2
  1100  00133C                     __ptext2:
  1101                           	opt stack 0
  1102  00133C                     _timer0_init:
  1103                           	opt stack 0
  1104  00133C  FFFF               	dw	65535	; assembler added errata NOP
  1105                           
  1106                           ;incstack = 0
  1107                           ;timer0_init@ps_mode stored from wreg
  1108  00133E  6E13               	movwf	timer0_init@ps_mode,c
  1109                           
  1110                           ;timer.c: 27: uint8_t prescaler = ps_mode & 0b1111;
  1111  001340  5013               	movf	timer0_init@ps_mode,w,c
  1112  001342  0B0F               	andlw	15
  1113  001344  6E12               	movwf	timer0_init@prescaler,c
  1114                           
  1115                           ;timer.c: 30: TMR0 = 0;
  1116  001346  6AD6               	clrf	4054,c	;volatile
  1117  001348  6AD7               	clrf	4055,c	;volatile
  1118                           
  1119                           ;timer.c: 31: T0CON |= (!!(ps_mode & 0x40)) ? 0x40 : 0x00;
  1120  00134A  BC13               	btfsc	timer0_init@ps_mode,6,c
  1121  00134C  D003               	goto	l2179
  1122  00134E  6A0A               	clrf	_timer0_init$500,c
  1123  001350  6A0B               	clrf	_timer0_init$500+1,c
  1124  001352  D004               	goto	l2181
  1125  001354                     l2179:
  1126  001354  FFFF               	dw	65535	; assembler added errata NOP
  1127  001356  6A0B               	clrf	_timer0_init$500+1,c
  1128  001358  0E40               	movlw	64
  1129  00135A  6E0A               	movwf	_timer0_init$500,c
  1130  00135C                     l2181:
  1131  00135C  FFFF               	dw	65535	; assembler added errata NOP
  1132  00135E  500A               	movf	_timer0_init$500,w,c
  1133  001360  12D5               	iorwf	4053,f,c	;volatile
  1134                           
  1135                           ;timer.c: 52: T0CON |= (!!(ps_mode & 0x20)) ? 0x20 : 0x00;
  1136  001362  BA13               	btfsc	timer0_init@ps_mode,5,c
  1137  001364  D003               	goto	l2187
  1138  001366  6A0C               	clrf	_timer0_init$501,c
  1139  001368  6A0D               	clrf	_timer0_init$501+1,c
  1140  00136A  D004               	goto	l2189
  1141  00136C                     l2187:
  1142  00136C  FFFF               	dw	65535	; assembler added errata NOP
  1143  00136E  6A0D               	clrf	_timer0_init$501+1,c
  1144  001370  0E20               	movlw	32
  1145  001372  6E0C               	movwf	_timer0_init$501,c
  1146  001374                     l2189:
  1147  001374  FFFF               	dw	65535	; assembler added errata NOP
  1148  001376  500C               	movf	_timer0_init$501,w,c
  1149  001378  12D5               	iorwf	4053,f,c	;volatile
  1150                           
  1151                           ;timer.c: 55: T0CON |= (!!(ps_mode & 0x10)) ? 0x10 : 0x00;
  1152  00137A  B813               	btfsc	timer0_init@ps_mode,4,c
  1153  00137C  D003               	goto	l2195
  1154  00137E  6A0E               	clrf	_timer0_init$502,c
  1155  001380  6A0F               	clrf	_timer0_init$502+1,c
  1156  001382  D004               	goto	l2197
  1157  001384                     l2195:
  1158  001384  FFFF               	dw	65535	; assembler added errata NOP
  1159  001386  6A0F               	clrf	_timer0_init$502+1,c
  1160  001388  0E10               	movlw	16
  1161  00138A  6E0E               	movwf	_timer0_init$502,c
  1162  00138C                     l2197:
  1163  00138C  FFFF               	dw	65535	; assembler added errata NOP
  1164  00138E  500E               	movf	_timer0_init$502,w,c
  1165  001390  12D5               	iorwf	4053,f,c	;volatile
  1166                           
  1167                           ;timer.c: 58: T0CON &= (!!prescaler) ? ~0x08 : ~0x00;
  1168  001392  5012               	movf	timer0_init@prescaler,w,c
  1169  001394  E103               	bnz	l2203
  1170  001396  6810               	setf	_timer0_init$503,c
  1171  001398  6811               	setf	_timer0_init$503+1,c
  1172  00139A  D003               	goto	l2205
  1173  00139C                     l2203:
  1174  00139C  6811               	setf	_timer0_init$503+1,c
  1175  00139E  0EF7               	movlw	247
  1176  0013A0  6E10               	movwf	_timer0_init$503,c
  1177  0013A2                     l2205:
  1178  0013A2  FFFF               	dw	65535	; assembler added errata NOP
  1179  0013A4  5010               	movf	_timer0_init$503,w,c
  1180  0013A6  16D5               	andwf	4053,f,c	;volatile
  1181                           
  1182                           ;timer.c: 60: T0CON &= ~0b111;
  1183  0013A8  0EF8               	movlw	248
  1184  0013AA  16D5               	andwf	4053,f,c	;volatile
  1185                           
  1186                           ;timer.c: 62: if(prescaler > 0) {
  1187  0013AC  5012               	movf	timer0_init@prescaler,w,c
  1188  0013AE  E003               	bz	l2211
  1189                           
  1190                           ;timer.c: 63: T0CON |= (prescaler - 1) & 0b111;
  1191  0013B0  0412               	decf	timer0_init@prescaler,w,c
  1192  0013B2  0B07               	andlw	7
  1193  0013B4  12D5               	iorwf	4053,f,c	;volatile
  1194  0013B6                     l2211:
  1195                           
  1196                           ;timer.c: 69: }
  1197                           ;timer.c: 72: INTCONbits.TMR0IF = 0;
  1198  0013B6  94F2               	bcf	intcon,2,c	;volatile
  1199                           
  1200                           ;timer.c: 75: INTCONbits.T0IE = (ps_mode & 0x80) ? 1 : 0;
  1201  0013B8  AE13               	btfss	timer0_init@ps_mode,7,c
  1202  0013BA  D003               	goto	u1720
  1203  0013BC  6A09               	clrf	??_timer0_init& (0+255),c
  1204  0013BE  2A09               	incf	??_timer0_init& (0+255),f,c
  1205  0013C0  D002               	goto	u1738
  1206  0013C2                     u1720:
  1207  0013C2  FFFF               	dw	65535	; assembler added errata NOP
  1208  0013C4  6A09               	clrf	??_timer0_init& (0+255),c
  1209  0013C6                     u1738:
  1210  0013C6  FFFF               	dw	65535	; assembler added errata NOP
  1211  0013C8  3A09               	swapf	??_timer0_init,f,c
  1212  0013CA  4609               	rlncf	??_timer0_init,f,c
  1213  0013CC  50F2               	movf	intcon,w,c	;volatile
  1214  0013CE  1809               	xorwf	??_timer0_init,w,c
  1215  0013D0  0BDF               	andlw	-33
  1216  0013D2  1809               	xorwf	??_timer0_init,w,c
  1217  0013D4  6EF2               	movwf	intcon,c	;volatile
  1218  0013D6  0012               	return		;funcret
  1219  0013D8  FFFF               	dw	65535	; errata NOP
  1220  0013DA                     __end_of_timer0_init:
  1221                           	opt stack 0
  1222                           tblptru	equ	0xFF8
  1223                           tblptrh	equ	0xFF7
  1224                           tblptrl	equ	0xFF6
  1225                           tablat	equ	0xFF5
  1226                           intcon	equ	0xFF2
  1227                           intcon2	equ	0xFF1
  1228                           postinc0	equ	0xFEE
  1229                           wreg	equ	0xFE8
  1230                           status	equ	0xFD8
  1231                           
  1232 ;; *************** function _print_indicator *****************
  1233 ;; Defined at:
  1234 ;;		line 464 in file "/home/roman/Dokumente/Sources/lc-meter/obj/../src/print.c"
  1235 ;; Parameters:    Size  Location     Type
  1236 ;;  indicate        1    wreg     unsigned char 
  1237 ;; Auto vars:     Size  Location     Type
  1238 ;;  indicate        1    0[COMRAM] unsigned char 
  1239 ;; Return value:  Size  Location     Type
  1240 ;;                  1    wreg      void 
  1241 ;; Registers used:
  1242 ;;		wreg
  1243 ;; Tracked objects:
  1244 ;;		On entry : 0/0
  1245 ;;		On exit  : 0/0
  1246 ;;		Unchanged: 0/0
  1247 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1248 ;;      Params:         0       0       0       0       0       0       0
  1249 ;;      Locals:         0       0       0       0       0       0       0
  1250 ;;      Temps:          0       0       0       0       0       0       0
  1251 ;;      Totals:         0       0       0       0       0       0       0
  1252 ;;Total ram usage:        0 bytes
  1253 ;; Hardware stack levels used:    1
  1254 ;; Hardware stack levels required when called:    2
  1255 ;; This function calls:
  1256 ;;		Nothing
  1257 ;; This function is called by:
  1258 ;;		_main
  1259 ;; This function uses a non-reentrant model
  1260 ;;
  1261                           
  1262                           	psect	text3
  1263  0017F6                     __ptext3:
  1264                           	opt stack 0
  1265  0017F6                     _print_indicator:
  1266                           	opt stack 0
  1267  0017F6  FFFF               	dw	65535	; assembler added errata NOP
  1268                           
  1269                           ;incstack = 0
  1270  0017F8  0012               	return		;funcret
  1271  0017FA  FFFF               	dw	65535	; errata NOP
  1272  0017FC                     __end_of_print_indicator:
  1273                           	opt stack 0
  1274                           tblptru	equ	0xFF8
  1275                           tblptrh	equ	0xFF7
  1276                           tblptrl	equ	0xFF6
  1277                           tablat	equ	0xFF5
  1278                           intcon	equ	0xFF2
  1279                           intcon2	equ	0xFF1
  1280                           postinc0	equ	0xFEE
  1281                           wreg	equ	0xFE8
  1282                           status	equ	0xFD8
  1283                           
  1284 ;; *************** function _measure_inductance *****************
  1285 ;; Defined at:
  1286 ;;		line 218 in file "/home/roman/Dokumente/Sources/lc-meter/obj/../src/measure.c"
  1287 ;; Parameters:    Size  Location     Type
  1288 ;;		None
  1289 ;; Auto vars:     Size  Location     Type
  1290 ;;  Lin             3   30[BANK0 ] void 
  1291 ;;  denominator     3    3[BANK0 ] void 
  1292 ;;  numerator       3    0[BANK0 ] void 
  1293 ;;  var             2   28[BANK0 ] unsigned int 
  1294 ;;  unit            1   18[BANK0 ] unsigned char 
  1295 ;; Return value:  Size  Location     Type
  1296 ;;                  1    wreg      void 
  1297 ;; Registers used:
  1298 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, cstack
  1299 ;; Tracked objects:
  1300 ;;		On entry : 0/0
  1301 ;;		On exit  : 0/0
  1302 ;;		Unchanged: 0/0
  1303 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1304 ;;      Params:         0       0       0       0       0       0       0
  1305 ;;      Locals:         0      33       0       0       0       0       0
  1306 ;;      Temps:          0       0       0       0       0       0       0
  1307 ;;      Totals:         0      33       0       0       0       0       0
  1308 ;;Total ram usage:       33 bytes
  1309 ;; Hardware stack levels used:    1
  1310 ;; Hardware stack levels required when called:    5
  1311 ;; This function calls:
  1312 ;;		___ftdiv
  1313 ;;		___ftge
  1314 ;;		___ftmul
  1315 ;;		___ftsub
  1316 ;;		___fttol
  1317 ;;		___lwtoft
  1318 ;;		_measure_freq
  1319 ;;		_print_reading
  1320 ;;		_print_unit
  1321 ;; This function is called by:
  1322 ;;		_main
  1323 ;; This function uses a non-reentrant model
  1324 ;;
  1325                           
  1326                           	psect	text4
  1327  000642                     __ptext4:
  1328                           	opt stack 0
  1329  000642                     _measure_inductance:
  1330                           	opt stack 0
  1331  000642  FFFF               	dw	65535	; assembler added errata NOP
  1332                           
  1333                           ;measure.c: 219: uint8_t unit;
  1334                           ;measure.c: 220: uint16_t var;
  1335                           ;measure.c: 222: double Lin, numerator, denominator;
  1336                           ;measure.c: 228: var = measure_freq();
  1337                           
  1338                           ;incstack = 0
  1339  000644  EC0A  F007         	call	_measure_freq	;wreg free
  1340  000648  C03D  F09C         	movff	?_measure_freq,measure_inductance@var
  1341  00064C  C03E  F09D         	movff	?_measure_freq+1,measure_inductance@var+1
  1342                           
  1343                           ;measure.c: 230: F3 = (double)var;
  1344  000650  C09C  F042         	movff	measure_inductance@var,___lwtoft@c
  1345  000654  C09D  F043         	movff	measure_inductance@var+1,___lwtoft@c+1
  1346  000658  ECDF  F00B         	call	___lwtoft	;wreg free
  1347  00065C  C042  F055         	movff	?___lwtoft,_F3
  1348  000660  C043  F056         	movff	?___lwtoft+1,_F3+1
  1349  000664  C044  F057         	movff	?___lwtoft+2,_F3+2
  1350                           
  1351                           ;measure.c: 231: if(F3 > F1)
  1352  000668  C061  F009         	movff	_F1,___ftge@ff1
  1353  00066C  C062  F00A         	movff	_F1+1,___ftge@ff1+1
  1354  000670  C063  F00B         	movff	_F1+2,___ftge@ff1+2
  1355  000674  C055  F00C         	movff	_F3,___ftge@ff2
  1356  000678  C056  F00D         	movff	_F3+1,___ftge@ff2+1
  1357  00067C  C057  F00E         	movff	_F3+2,___ftge@ff2+2
  1358  000680  EC7D  F00A         	call	___ftge	;wreg free
  1359  000684  E206               	bc	l2891
  1360                           
  1361                           ;measure.c: 232: F3 = F1;
  1362  000686  C061  F055         	movff	_F1,_F3
  1363  00068A  C062  F056         	movff	_F1+1,_F3+1
  1364  00068E  C063  F057         	movff	_F1+2,_F3+2
  1365  000692                     l2891:
  1366                           
  1367                           ;measure.c: 233: numerator = ((F1 * F1) - (F3 * F3)) * ((F1 * F1) - (F2 - F2)) * (100 * 
      +                          100);
  1368  000692  C058  F032         	movff	_F2,___ftsub@f2
  1369  000696  C059  F033         	movff	_F2+1,___ftsub@f2+1
  1370  00069A  C05A  F034         	movff	_F2+2,___ftsub@f2+2
  1371  00069E  C058  F02F         	movff	_F2,___ftsub@f1
  1372  0006A2  C059  F030         	movff	_F2+1,___ftsub@f1+1
  1373  0006A6  C05A  F031         	movff	_F2+2,___ftsub@f1+2
  1374  0006AA  EC74  F00B         	call	___ftsub	;wreg free
  1375  0006AE  C02F  F086         	movff	?___ftsub,_measure_inductance$1281
  1376  0006B2  C030  F087         	movff	?___ftsub+1,_measure_inductance$1281+1
  1377  0006B6  C031  F088         	movff	?___ftsub+2,_measure_inductance$1281+2
  1378                           
  1379                           ;measure.c: 233: numerator = ((F1 * F1) - (F3 * F3)) * ((F1 * F1) - (F2 - F2)) * (100 * 
      +                          100);
  1380  0006BA  C086  F032         	movff	_measure_inductance$1281,___ftsub@f2
  1381  0006BE  C087  F033         	movff	_measure_inductance$1281+1,___ftsub@f2+1
  1382  0006C2  C088  F034         	movff	_measure_inductance$1281+2,___ftsub@f2+2
  1383  0006C6  C061  F023         	movff	_F1,___ftmul@f2
  1384  0006CA  C062  F024         	movff	_F1+1,___ftmul@f2+1
  1385  0006CE  C063  F025         	movff	_F1+2,___ftmul@f2+2
  1386  0006D2  C061  F020         	movff	_F1,___ftmul@f1
  1387  0006D6  C062  F021         	movff	_F1+1,___ftmul@f1+1
  1388  0006DA  C063  F022         	movff	_F1+2,___ftmul@f1+2
  1389  0006DE  EC02  F008         	call	___ftmul	;wreg free
  1390  0006E2  C020  F02F         	movff	?___ftmul,___ftsub@f1
  1391  0006E6  C021  F030         	movff	?___ftmul+1,___ftsub@f1+1
  1392  0006EA  C022  F031         	movff	?___ftmul+2,___ftsub@f1+2
  1393  0006EE  EC74  F00B         	call	___ftsub	;wreg free
  1394  0006F2  C02F  F093         	movff	?___ftsub,_measure_inductance$1282
  1395  0006F6  C030  F094         	movff	?___ftsub+1,_measure_inductance$1282+1
  1396  0006FA  C031  F095         	movff	?___ftsub+2,_measure_inductance$1282+2
  1397                           
  1398                           ;measure.c: 233: numerator = ((F1 * F1) - (F3 * F3)) * ((F1 * F1) - (F2 - F2)) * (100 * 
      +                          100);
  1399  0006FE  C055  F023         	movff	_F3,___ftmul@f2
  1400  000702  C056  F024         	movff	_F3+1,___ftmul@f2+1
  1401  000706  C057  F025         	movff	_F3+2,___ftmul@f2+2
  1402  00070A  C055  F020         	movff	_F3,___ftmul@f1
  1403  00070E  C056  F021         	movff	_F3+1,___ftmul@f1+1
  1404  000712  C057  F022         	movff	_F3+2,___ftmul@f1+2
  1405  000716  EC02  F008         	call	___ftmul	;wreg free
  1406  00071A  C020  F032         	movff	?___ftmul,___ftsub@f2
  1407  00071E  C021  F033         	movff	?___ftmul+1,___ftsub@f2+1
  1408  000722  C022  F034         	movff	?___ftmul+2,___ftsub@f2+2
  1409  000726  C061  F023         	movff	_F1,___ftmul@f2
  1410  00072A  C062  F024         	movff	_F1+1,___ftmul@f2+1
  1411  00072E  C063  F025         	movff	_F1+2,___ftmul@f2+2
  1412  000732  C061  F020         	movff	_F1,___ftmul@f1
  1413  000736  C062  F021         	movff	_F1+1,___ftmul@f1+1
  1414  00073A  C063  F022         	movff	_F1+2,___ftmul@f1+2
  1415  00073E  EC02  F008         	call	___ftmul	;wreg free
  1416  000742  C020  F02F         	movff	?___ftmul,___ftsub@f1
  1417  000746  C021  F030         	movff	?___ftmul+1,___ftsub@f1+1
  1418  00074A  C022  F031         	movff	?___ftmul+2,___ftsub@f1+2
  1419  00074E  EC74  F00B         	call	___ftsub	;wreg free
  1420  000752  C02F  F096         	movff	?___ftsub,_measure_inductance$1283
  1421  000756  C030  F097         	movff	?___ftsub+1,_measure_inductance$1283+1
  1422  00075A  C031  F098         	movff	?___ftsub+2,_measure_inductance$1283+2
  1423                           
  1424                           ;measure.c: 233: numerator = ((F1 * F1) - (F3 * F3)) * ((F1 * F1) - (F2 - F2)) * (100 * 
      +                          100);
  1425  00075E  C093  F023         	movff	_measure_inductance$1282,___ftmul@f2
  1426  000762  C094  F024         	movff	_measure_inductance$1282+1,___ftmul@f2+1
  1427  000766  C095  F025         	movff	_measure_inductance$1282+2,___ftmul@f2+2
  1428  00076A  C096  F020         	movff	_measure_inductance$1283,___ftmul@f1
  1429  00076E  C097  F021         	movff	_measure_inductance$1283+1,___ftmul@f1+1
  1430  000772  C098  F022         	movff	_measure_inductance$1283+2,___ftmul@f1+2
  1431  000776  EC02  F008         	call	___ftmul	;wreg free
  1432  00077A  C020  F099         	movff	?___ftmul,_measure_inductance$1284
  1433  00077E  C021  F09A         	movff	?___ftmul+1,_measure_inductance$1284+1
  1434  000782  C022  F09B         	movff	?___ftmul+2,_measure_inductance$1284+2
  1435                           
  1436                           ;measure.c: 233: numerator = ((F1 * F1) - (F3 * F3)) * ((F1 * F1) - (F2 - F2)) * (100 * 
      +                          100);
  1437  000786  C099  F020         	movff	_measure_inductance$1284,___ftmul@f1
  1438  00078A  C09A  F021         	movff	_measure_inductance$1284+1,___ftmul@f1+1
  1439  00078E  C09B  F022         	movff	_measure_inductance$1284+2,___ftmul@f1+2
  1440  000792  0E40               	movlw	64
  1441  000794  6E23               	movwf	___ftmul@f2,c
  1442  000796  0E1C               	movlw	28
  1443  000798  6E24               	movwf	___ftmul@f2+1,c
  1444  00079A  0E46               	movlw	70
  1445  00079C  6E25               	movwf	___ftmul@f2+2,c
  1446  00079E  EC02  F008         	call	___ftmul	;wreg free
  1447  0007A2  C020  F080         	movff	?___ftmul,measure_inductance@numerator
  1448  0007A6  C021  F081         	movff	?___ftmul+1,measure_inductance@numerator+1
  1449  0007AA  C022  F082         	movff	?___ftmul+2,measure_inductance@numerator+2
  1450                           
  1451                           ;measure.c: 234: denominator = 4 * 3.14159265358979323846l * 3.14159265358979323846l * F
      +                          1 * F1 * F2 * F2 * F3 * F3 * CCal;
  1452  0007AE  C061  F023         	movff	_F1,___ftmul@f2
  1453  0007B2  C062  F024         	movff	_F1+1,___ftmul@f2+1
  1454  0007B6  C063  F025         	movff	_F1+2,___ftmul@f2+2
  1455  0007BA  C061  F020         	movff	_F1,___ftmul@f1
  1456  0007BE  C062  F021         	movff	_F1+1,___ftmul@f1+1
  1457  0007C2  C063  F022         	movff	_F1+2,___ftmul@f1+2
  1458  0007C6  EC02  F008         	call	___ftmul	;wreg free
  1459  0007CA  C020  F089         	movff	?___ftmul,_measure_inductance$1285
  1460  0007CE  C021  F08A         	movff	?___ftmul+1,_measure_inductance$1285+1
  1461  0007D2  C022  F08B         	movff	?___ftmul+2,_measure_inductance$1285+2
  1462                           
  1463                           ;measure.c: 234: denominator = 4 * 3.14159265358979323846l * 3.14159265358979323846l * F
      +                          1 * F1 * F2 * F2 * F3 * F3 * CCal;
  1464  0007D6  C058  F023         	movff	_F2,___ftmul@f2
  1465  0007DA  C059  F024         	movff	_F2+1,___ftmul@f2+1
  1466  0007DE  C05A  F025         	movff	_F2+2,___ftmul@f2+2
  1467  0007E2  C089  F020         	movff	_measure_inductance$1285,___ftmul@f1
  1468  0007E6  C08A  F021         	movff	_measure_inductance$1285+1,___ftmul@f1+1
  1469  0007EA  C08B  F022         	movff	_measure_inductance$1285+2,___ftmul@f1+2
  1470  0007EE  EC02  F008         	call	___ftmul	;wreg free
  1471  0007F2  C020  F093         	movff	?___ftmul,_measure_inductance$1282
  1472  0007F6  C021  F094         	movff	?___ftmul+1,_measure_inductance$1282+1
  1473  0007FA  C022  F095         	movff	?___ftmul+2,_measure_inductance$1282+2
  1474                           
  1475                           ;measure.c: 234: denominator = 4 * 3.14159265358979323846l * 3.14159265358979323846l * F
      +                          1 * F1 * F2 * F2 * F3 * F3 * CCal;
  1476  0007FE  C058  F023         	movff	_F2,___ftmul@f2
  1477  000802  C059  F024         	movff	_F2+1,___ftmul@f2+1
  1478  000806  C05A  F025         	movff	_F2+2,___ftmul@f2+2
  1479  00080A  C093  F020         	movff	_measure_inductance$1282,___ftmul@f1
  1480  00080E  C094  F021         	movff	_measure_inductance$1282+1,___ftmul@f1+1
  1481  000812  C095  F022         	movff	_measure_inductance$1282+2,___ftmul@f1+2
  1482  000816  EC02  F008         	call	___ftmul	;wreg free
  1483  00081A  C020  F096         	movff	?___ftmul,_measure_inductance$1283
  1484  00081E  C021  F097         	movff	?___ftmul+1,_measure_inductance$1283+1
  1485  000822  C022  F098         	movff	?___ftmul+2,_measure_inductance$1283+2
  1486                           
  1487                           ;measure.c: 234: denominator = 4 * 3.14159265358979323846l * 3.14159265358979323846l * F
      +                          1 * F1 * F2 * F2 * F3 * F3 * CCal;
  1488  000826  C055  F023         	movff	_F3,___ftmul@f2
  1489  00082A  C056  F024         	movff	_F3+1,___ftmul@f2+1
  1490  00082E  C057  F025         	movff	_F3+2,___ftmul@f2+2
  1491  000832  C096  F020         	movff	_measure_inductance$1283,___ftmul@f1
  1492  000836  C097  F021         	movff	_measure_inductance$1283+1,___ftmul@f1+1
  1493  00083A  C098  F022         	movff	_measure_inductance$1283+2,___ftmul@f1+2
  1494  00083E  EC02  F008         	call	___ftmul	;wreg free
  1495  000842  C020  F099         	movff	?___ftmul,_measure_inductance$1284
  1496  000846  C021  F09A         	movff	?___ftmul+1,_measure_inductance$1284+1
  1497  00084A  C022  F09B         	movff	?___ftmul+2,_measure_inductance$1284+2
  1498                           
  1499                           ;measure.c: 234: denominator = 4 * 3.14159265358979323846l * 3.14159265358979323846l * F
      +                          1 * F1 * F2 * F2 * F3 * F3 * CCal;
  1500  00084E  C055  F023         	movff	_F3,___ftmul@f2
  1501  000852  C056  F024         	movff	_F3+1,___ftmul@f2+1
  1502  000856  C057  F025         	movff	_F3+2,___ftmul@f2+2
  1503  00085A  C099  F020         	movff	_measure_inductance$1284,___ftmul@f1
  1504  00085E  C09A  F021         	movff	_measure_inductance$1284+1,___ftmul@f1+1
  1505  000862  C09B  F022         	movff	_measure_inductance$1284+2,___ftmul@f1+2
  1506  000866  EC02  F008         	call	___ftmul	;wreg free
  1507  00086A  C020  F08C         	movff	?___ftmul,_measure_inductance$1286
  1508  00086E  C021  F08D         	movff	?___ftmul+1,_measure_inductance$1286+1
  1509  000872  C022  F08E         	movff	?___ftmul+2,_measure_inductance$1286+2
  1510                           
  1511                           ;measure.c: 234: denominator = 4 * 3.14159265358979323846l * 3.14159265358979323846l * F
      +                          1 * F1 * F2 * F2 * F3 * F3 * CCal;
  1512  000876  C0BE  F023         	movff	_CCal,___ftmul@f2
  1513  00087A  C0BF  F024         	movff	_CCal+1,___ftmul@f2+1
  1514  00087E  C0C0  F025         	movff	_CCal+2,___ftmul@f2+2
  1515  000882  C08C  F020         	movff	_measure_inductance$1286,___ftmul@f1
  1516  000886  C08D  F021         	movff	_measure_inductance$1286+1,___ftmul@f1+1
  1517  00088A  C08E  F022         	movff	_measure_inductance$1286+2,___ftmul@f1+2
  1518  00088E  EC02  F008         	call	___ftmul	;wreg free
  1519  000892  C020  F08F         	movff	?___ftmul,_measure_inductance$1287
  1520  000896  C021  F090         	movff	?___ftmul+1,_measure_inductance$1287+1
  1521  00089A  C022  F091         	movff	?___ftmul+2,_measure_inductance$1287+2
  1522                           
  1523                           ;measure.c: 234: denominator = 4 * 3.14159265358979323846l * 3.14159265358979323846l * F
      +                          1 * F1 * F2 * F2 * F3 * F3 * CCal;
  1524  00089E  C08F  F020         	movff	_measure_inductance$1287,___ftmul@f1
  1525  0008A2  C090  F021         	movff	_measure_inductance$1287+1,___ftmul@f1+1
  1526  0008A6  C091  F022         	movff	_measure_inductance$1287+2,___ftmul@f1+2
  1527  0008AA  0EEA               	movlw	234
  1528  0008AC  6E23               	movwf	___ftmul@f2,c
  1529  0008AE  0E1D               	movlw	29
  1530  0008B0  6E24               	movwf	___ftmul@f2+1,c
  1531  0008B2  0E42               	movlw	66
  1532  0008B4  6E25               	movwf	___ftmul@f2+2,c
  1533  0008B6  EC02  F008         	call	___ftmul	;wreg free
  1534  0008BA  C020  F083         	movff	?___ftmul,measure_inductance@denominator
  1535  0008BE  C021  F084         	movff	?___ftmul+1,measure_inductance@denominator+1
  1536  0008C2  C022  F085         	movff	?___ftmul+2,measure_inductance@denominator+2
  1537                           
  1538                           ;measure.c: 235: Lin = (numerator / denominator) * 1e+15l;
  1539  0008C6  C083  F014         	movff	measure_inductance@denominator,___ftdiv@f2
  1540  0008CA  C084  F015         	movff	measure_inductance@denominator+1,___ftdiv@f2+1
  1541  0008CE  C085  F016         	movff	measure_inductance@denominator+2,___ftdiv@f2+2
  1542  0008D2  C080  F011         	movff	measure_inductance@numerator,___ftdiv@f1
  1543  0008D6  C081  F012         	movff	measure_inductance@numerator+1,___ftdiv@f1+1
  1544  0008DA  C082  F013         	movff	measure_inductance@numerator+2,___ftdiv@f1+2
  1545  0008DE  EC3F  F009         	call	___ftdiv	;wreg free
  1546  0008E2  C011  F020         	movff	?___ftdiv,___ftmul@f1
  1547  0008E6  C012  F021         	movff	?___ftdiv+1,___ftmul@f1+1
  1548  0008EA  C013  F022         	movff	?___ftdiv+2,___ftmul@f1+2
  1549  0008EE  0E60               	movlw	96
  1550  0008F0  6E23               	movwf	___ftmul@f2,c
  1551  0008F2  0E63               	movlw	99
  1552  0008F4  6E24               	movwf	___ftmul@f2+1,c
  1553  0008F6  0E58               	movlw	88
  1554  0008F8  6E25               	movwf	___ftmul@f2+2,c
  1555  0008FA  EC02  F008         	call	___ftmul	;wreg free
  1556  0008FE  C020  F09E         	movff	?___ftmul,measure_inductance@Lin
  1557  000902  C021  F09F         	movff	?___ftmul+1,measure_inductance@Lin+1
  1558  000906  C022  F0A0         	movff	?___ftmul+2,measure_inductance@Lin+2
  1559                           
  1560                           ;measure.c: 237: if(Lin > 999) {
  1561  00090A  0EC0               	movlw	192
  1562  00090C  6E09               	movwf	___ftge@ff1,c
  1563  00090E  0E79               	movlw	121
  1564  000910  6E0A               	movwf	___ftge@ff1+1,c
  1565  000912  0E44               	movlw	68
  1566  000914  6E0B               	movwf	___ftge@ff1+2,c
  1567  000916  C09E  F00C         	movff	measure_inductance@Lin,___ftge@ff2
  1568  00091A  C09F  F00D         	movff	measure_inductance@Lin+1,___ftge@ff2+1
  1569  00091E  C0A0  F00E         	movff	measure_inductance@Lin+2,___ftge@ff2+2
  1570  000922  EC7D  F00A         	call	___ftge	;wreg free
  1571  000926  E260               	bc	l2909
  1572                           
  1573                           ;measure.c: 238: if(Lin > (999e+03l)) {
  1574  000928  0EE6               	movlw	230
  1575  00092A  6E09               	movwf	___ftge@ff1,c
  1576  00092C  0E73               	movlw	115
  1577  00092E  6E0A               	movwf	___ftge@ff1+1,c
  1578  000930  0E49               	movlw	73
  1579  000932  6E0B               	movwf	___ftge@ff1+2,c
  1580  000934  C09E  F00C         	movff	measure_inductance@Lin,___ftge@ff2
  1581  000938  C09F  F00D         	movff	measure_inductance@Lin+1,___ftge@ff2+1
  1582  00093C  C0A0  F00E         	movff	measure_inductance@Lin+2,___ftge@ff2+2
  1583  000940  EC7D  F00A         	call	___ftge	;wreg free
  1584  000944  E23C               	bc	l2905
  1585                           
  1586                           ;measure.c: 239: if(Lin > (999e+06l)) {
  1587  000946  0E2E               	movlw	46
  1588  000948  6E09               	movwf	___ftge@ff1,c
  1589  00094A  0E6E               	movlw	110
  1590  00094C  6E0A               	movwf	___ftge@ff1+1,c
  1591  00094E  0E4E               	movlw	78
  1592  000950  6E0B               	movwf	___ftge@ff1+2,c
  1593  000952  C09E  F00C         	movff	measure_inductance@Lin,___ftge@ff2
  1594  000956  C09F  F00D         	movff	measure_inductance@Lin+1,___ftge@ff2+1
  1595  00095A  C0A0  F00E         	movff	measure_inductance@Lin+2,___ftge@ff2+2
  1596  00095E  EC7D  F00A         	call	___ftge	;wreg free
  1597  000962  E217               	bc	l2901
  1598                           
  1599                           ;measure.c: 240: Lin = Lin / (1e+09l);
  1600  000964  C09E  F011         	movff	measure_inductance@Lin,___ftdiv@f1
  1601  000968  C09F  F012         	movff	measure_inductance@Lin+1,___ftdiv@f1+1
  1602  00096C  C0A0  F013         	movff	measure_inductance@Lin+2,___ftdiv@f1+2
  1603  000970  0E6B               	movlw	107
  1604  000972  6E14               	movwf	___ftdiv@f2,c
  1605  000974  0E6E               	movlw	110
  1606  000976  6E15               	movwf	___ftdiv@f2+1,c
  1607  000978  0E4E               	movlw	78
  1608  00097A  6E16               	movwf	___ftdiv@f2+2,c
  1609  00097C  EC3F  F009         	call	___ftdiv	;wreg free
  1610  000980  C011  F09E         	movff	?___ftdiv,measure_inductance@Lin
  1611  000984  C012  F09F         	movff	?___ftdiv+1,measure_inductance@Lin+1
  1612  000988  C013  F0A0         	movff	?___ftdiv+2,measure_inductance@Lin+2
  1613                           
  1614                           ;measure.c: 241: unit = 0;
  1615  00098C  0100               	movlb	0	; () banked
  1616  00098E  6B92               	clrf	measure_inductance@unit& (0+255),b
  1617                           
  1618                           ;measure.c: 242: } else {
  1619  000990  D02F               	goto	l2911
  1620  000992                     l2901:
  1621                           
  1622                           ;measure.c: 243: Lin = Lin / (1e+06l);
  1623  000992  C09E  F011         	movff	measure_inductance@Lin,___ftdiv@f1
  1624  000996  C09F  F012         	movff	measure_inductance@Lin+1,___ftdiv@f1+1
  1625  00099A  C0A0  F013         	movff	measure_inductance@Lin+2,___ftdiv@f1+2
  1626  00099E  0E24               	movlw	36
  1627  0009A0  6E14               	movwf	___ftdiv@f2,c
  1628  0009A2  0E74               	movlw	116
  1629  0009A4  6E15               	movwf	___ftdiv@f2+1,c
  1630  0009A6  0E49               	movlw	73
  1631  0009A8  6E16               	movwf	___ftdiv@f2+2,c
  1632  0009AA  EC3F  F009         	call	___ftdiv	;wreg free
  1633  0009AE  C011  F09E         	movff	?___ftdiv,measure_inductance@Lin
  1634  0009B2  C012  F09F         	movff	?___ftdiv+1,measure_inductance@Lin+1
  1635  0009B6  C013  F0A0         	movff	?___ftdiv+2,measure_inductance@Lin+2
  1636                           
  1637                           ;measure.c: 244: unit = 1;
  1638  0009BA  0E01               	movlw	1
  1639  0009BC  D016               	goto	L1
  1640  0009BE                     l2905:
  1641                           
  1642                           ;measure.c: 247: Lin = Lin / 1e+03l;
  1643  0009BE  C09E  F011         	movff	measure_inductance@Lin,___ftdiv@f1
  1644  0009C2  C09F  F012         	movff	measure_inductance@Lin+1,___ftdiv@f1+1
  1645  0009C6  C0A0  F013         	movff	measure_inductance@Lin+2,___ftdiv@f1+2
  1646  0009CA  6A14               	clrf	___ftdiv@f2,c
  1647  0009CC  0E7A               	movlw	122
  1648  0009CE  6E15               	movwf	___ftdiv@f2+1,c
  1649  0009D0  0E44               	movlw	68
  1650  0009D2  6E16               	movwf	___ftdiv@f2+2,c
  1651  0009D4  EC3F  F009         	call	___ftdiv	;wreg free
  1652  0009D8  C011  F09E         	movff	?___ftdiv,measure_inductance@Lin
  1653  0009DC  C012  F09F         	movff	?___ftdiv+1,measure_inductance@Lin+1
  1654  0009E0  C013  F0A0         	movff	?___ftdiv+2,measure_inductance@Lin+2
  1655                           
  1656                           ;measure.c: 248: unit = 2;
  1657  0009E4  0E02               	movlw	2
  1658  0009E6  D001               	goto	L1
  1659  0009E8                     l2909:
  1660                           
  1661                           ;measure.c: 251: unit = 3;
  1662  0009E8  0E03               	movlw	3
  1663  0009EA                     L1:
  1664  0009EA  FFFF               	dw	65535	; assembler added errata NOP
  1665  0009EC  0100               	movlb	0	; () banked
  1666  0009EE  6F92               	movwf	measure_inductance@unit& (0+255),b
  1667  0009F0                     l2911:
  1668  0009F0  FFFF               	dw	65535	; assembler added errata NOP
  1669                           
  1670                           ; BSR set to: 0
  1671                           ;measure.c: 253: Lin = Lin * 100;
  1672  0009F2  C09E  F020         	movff	measure_inductance@Lin,___ftmul@f1
  1673  0009F6  C09F  F021         	movff	measure_inductance@Lin+1,___ftmul@f1+1
  1674  0009FA  C0A0  F022         	movff	measure_inductance@Lin+2,___ftmul@f1+2
  1675  0009FE  6A23               	clrf	___ftmul@f2,c
  1676  000A00  0EC8               	movlw	200
  1677  000A02  6E24               	movwf	___ftmul@f2+1,c
  1678  000A04  0E42               	movlw	66
  1679  000A06  6E25               	movwf	___ftmul@f2+2,c
  1680  000A08  EC02  F008         	call	___ftmul	;wreg free
  1681  000A0C  C020  F09E         	movff	?___ftmul,measure_inductance@Lin
  1682  000A10  C021  F09F         	movff	?___ftmul+1,measure_inductance@Lin+1
  1683  000A14  C022  F0A0         	movff	?___ftmul+2,measure_inductance@Lin+2
  1684                           
  1685                           ;measure.c: 254: var = (uint16_t)Lin;
  1686  000A18  C09E  F009         	movff	measure_inductance@Lin,___fttol@f1
  1687  000A1C  C09F  F00A         	movff	measure_inductance@Lin+1,___fttol@f1+1
  1688  000A20  C0A0  F00B         	movff	measure_inductance@Lin+2,___fttol@f1+2
  1689  000A24  ECD9  F008         	call	___fttol	;wreg free
  1690  000A28  C009  F09C         	movff	?___fttol,measure_inductance@var
  1691  000A2C  C00A  F09D         	movff	?___fttol+1,measure_inductance@var+1
  1692                           
  1693                           ;measure.c: 256: print_reading(var);
  1694  000A30  C09C  F009         	movff	measure_inductance@var,print_reading@measurement
  1695  000A34  C09D  F00A         	movff	measure_inductance@var+1,print_reading@measurement+1
  1696  000A38  EC01  F00C         	call	_print_reading	;wreg free
  1697                           
  1698                           ;measure.c: 257: print_unit(unit);
  1699  000A3C  0100               	movlb	0	; () banked
  1700  000A3E  5192               	movf	measure_inductance@unit& (0+255),w,b
  1701  000A40  EFFE  F00B         	goto	_print_unit
  1702  000A44  FFFF               	dw	65535	; errata NOP
  1703  000A46                     __end_of_measure_inductance:
  1704                           	opt stack 0
  1705                           tblptru	equ	0xFF8
  1706                           tblptrh	equ	0xFF7
  1707                           tblptrl	equ	0xFF6
  1708                           tablat	equ	0xFF5
  1709                           intcon	equ	0xFF2
  1710                           intcon2	equ	0xFF1
  1711                           postinc0	equ	0xFEE
  1712                           wreg	equ	0xFE8
  1713                           status	equ	0xFD8
  1714                           
  1715 ;; *************** function _measure_capacitance *****************
  1716 ;; Defined at:
  1717 ;;		line 131 in file "/home/roman/Dokumente/Sources/lc-meter/obj/../src/measure.c"
  1718 ;; Parameters:    Size  Location     Type
  1719 ;;		None
  1720 ;; Auto vars:     Size  Location     Type
  1721 ;;  Cin             3   80[COMRAM] void 
  1722 ;;  var             2   78[COMRAM] unsigned int 
  1723 ;;  unit            1   77[COMRAM] unsigned char 
  1724 ;; Return value:  Size  Location     Type
  1725 ;;                  1    wreg      void 
  1726 ;; Registers used:
  1727 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, cstack
  1728 ;; Tracked objects:
  1729 ;;		On entry : 0/0
  1730 ;;		On exit  : 0/0
  1731 ;;		Unchanged: 0/0
  1732 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1733 ;;      Params:         0       0       0       0       0       0       0
  1734 ;;      Locals:        15       0       0       0       0       0       0
  1735 ;;      Temps:          0       0       0       0       0       0       0
  1736 ;;      Totals:        15       0       0       0       0       0       0
  1737 ;;Total ram usage:       15 bytes
  1738 ;; Hardware stack levels used:    1
  1739 ;; Hardware stack levels required when called:    5
  1740 ;; This function calls:
  1741 ;;		___ftdiv
  1742 ;;		___ftge
  1743 ;;		___ftmul
  1744 ;;		___ftsub
  1745 ;;		___fttol
  1746 ;;		___lwtoft
  1747 ;;		_measure_freq
  1748 ;;		_print_reading
  1749 ;;		_print_unit
  1750 ;; This function is called by:
  1751 ;;		_main
  1752 ;; This function uses a non-reentrant model
  1753 ;;
  1754                           
  1755                           	psect	text5
  1756  000A46                     __ptext5:
  1757                           	opt stack 0
  1758  000A46                     _measure_capacitance:
  1759                           	opt stack 0
  1760  000A46  FFFF               	dw	65535	; assembler added errata NOP
  1761                           
  1762                           ;measure.c: 132: uint8_t unit;
  1763                           ;measure.c: 133: uint16_t var;
  1764                           ;measure.c: 135: double Cin;
  1765                           ;measure.c: 142: var = measure_freq();
  1766                           
  1767                           ;incstack = 0
  1768  000A48  EC0A  F007         	call	_measure_freq	;wreg free
  1769  000A4C  C03D  F04F         	movff	?_measure_freq,measure_capacitance@var
  1770  000A50  C03E  F050         	movff	?_measure_freq+1,measure_capacitance@var+1
  1771                           
  1772                           ;measure.c: 144: F3 = (double)var;
  1773  000A54  C04F  F042         	movff	measure_capacitance@var,___lwtoft@c
  1774  000A58  C050  F043         	movff	measure_capacitance@var+1,___lwtoft@c+1
  1775  000A5C  ECDF  F00B         	call	___lwtoft	;wreg free
  1776  000A60  C042  F055         	movff	?___lwtoft,_F3
  1777  000A64  C043  F056         	movff	?___lwtoft+1,_F3+1
  1778  000A68  C044  F057         	movff	?___lwtoft+2,_F3+2
  1779                           
  1780                           ;measure.c: 178: if(F3 > F1)
  1781  000A6C  C061  F009         	movff	_F1,___ftge@ff1
  1782  000A70  C062  F00A         	movff	_F1+1,___ftge@ff1+1
  1783  000A74  C063  F00B         	movff	_F1+2,___ftge@ff1+2
  1784  000A78  C055  F00C         	movff	_F3,___ftge@ff2
  1785  000A7C  C056  F00D         	movff	_F3+1,___ftge@ff2+1
  1786  000A80  C057  F00E         	movff	_F3+2,___ftge@ff2+2
  1787  000A84  EC7D  F00A         	call	___ftge	;wreg free
  1788  000A88  E206               	bc	l2857
  1789                           
  1790                           ;measure.c: 179: F3 = F1;
  1791  000A8A  C061  F055         	movff	_F1,_F3
  1792  000A8E  C062  F056         	movff	_F1+1,_F3+1
  1793  000A92  C063  F057         	movff	_F1+2,_F3+2
  1794  000A96                     l2857:
  1795                           
  1796                           ;measure.c: 181: Cin = F2 * F2 * (F1 * F1 - F3 * F3) * CCal;
  1797  000A96  C055  F023         	movff	_F3,___ftmul@f2
  1798  000A9A  C056  F024         	movff	_F3+1,___ftmul@f2+1
  1799  000A9E  C057  F025         	movff	_F3+2,___ftmul@f2+2
  1800  000AA2  C055  F020         	movff	_F3,___ftmul@f1
  1801  000AA6  C056  F021         	movff	_F3+1,___ftmul@f1+1
  1802  000AAA  C057  F022         	movff	_F3+2,___ftmul@f1+2
  1803  000AAE  EC02  F008         	call	___ftmul	;wreg free
  1804  000AB2  C020  F032         	movff	?___ftmul,___ftsub@f2
  1805  000AB6  C021  F033         	movff	?___ftmul+1,___ftsub@f2+1
  1806  000ABA  C022  F034         	movff	?___ftmul+2,___ftsub@f2+2
  1807  000ABE  C061  F023         	movff	_F1,___ftmul@f2
  1808  000AC2  C062  F024         	movff	_F1+1,___ftmul@f2+1
  1809  000AC6  C063  F025         	movff	_F1+2,___ftmul@f2+2
  1810  000ACA  C061  F020         	movff	_F1,___ftmul@f1
  1811  000ACE  C062  F021         	movff	_F1+1,___ftmul@f1+1
  1812  000AD2  C063  F022         	movff	_F1+2,___ftmul@f1+2
  1813  000AD6  EC02  F008         	call	___ftmul	;wreg free
  1814  000ADA  C020  F02F         	movff	?___ftmul,___ftsub@f1
  1815  000ADE  C021  F030         	movff	?___ftmul+1,___ftsub@f1+1
  1816  000AE2  C022  F031         	movff	?___ftmul+2,___ftsub@f1+2
  1817  000AE6  EC74  F00B         	call	___ftsub	;wreg free
  1818  000AEA  C02F  F045         	movff	?___ftsub,_measure_capacitance$1278
  1819  000AEE  C030  F046         	movff	?___ftsub+1,_measure_capacitance$1278+1
  1820  000AF2  C031  F047         	movff	?___ftsub+2,_measure_capacitance$1278+2
  1821                           
  1822                           ;measure.c: 181: Cin = F2 * F2 * (F1 * F1 - F3 * F3) * CCal;
  1823  000AF6  C058  F023         	movff	_F2,___ftmul@f2
  1824  000AFA  C059  F024         	movff	_F2+1,___ftmul@f2+1
  1825  000AFE  C05A  F025         	movff	_F2+2,___ftmul@f2+2
  1826  000B02  C045  F020         	movff	_measure_capacitance$1278,___ftmul@f1
  1827  000B06  C046  F021         	movff	_measure_capacitance$1278+1,___ftmul@f1+1
  1828  000B0A  C047  F022         	movff	_measure_capacitance$1278+2,___ftmul@f1+2
  1829  000B0E  EC02  F008         	call	___ftmul	;wreg free
  1830  000B12  C020  F048         	movff	?___ftmul,_measure_capacitance$1279
  1831  000B16  C021  F049         	movff	?___ftmul+1,_measure_capacitance$1279+1
  1832  000B1A  C022  F04A         	movff	?___ftmul+2,_measure_capacitance$1279+2
  1833                           
  1834                           ;measure.c: 181: Cin = F2 * F2 * (F1 * F1 - F3 * F3) * CCal;
  1835  000B1E  C058  F023         	movff	_F2,___ftmul@f2
  1836  000B22  C059  F024         	movff	_F2+1,___ftmul@f2+1
  1837  000B26  C05A  F025         	movff	_F2+2,___ftmul@f2+2
  1838  000B2A  C048  F020         	movff	_measure_capacitance$1279,___ftmul@f1
  1839  000B2E  C049  F021         	movff	_measure_capacitance$1279+1,___ftmul@f1+1
  1840  000B32  C04A  F022         	movff	_measure_capacitance$1279+2,___ftmul@f1+2
  1841  000B36  EC02  F008         	call	___ftmul	;wreg free
  1842  000B3A  C020  F04B         	movff	?___ftmul,_measure_capacitance$1280
  1843  000B3E  C021  F04C         	movff	?___ftmul+1,_measure_capacitance$1280+1
  1844  000B42  C022  F04D         	movff	?___ftmul+2,_measure_capacitance$1280+2
  1845                           
  1846                           ;measure.c: 181: Cin = F2 * F2 * (F1 * F1 - F3 * F3) * CCal;
  1847  000B46  C04B  F020         	movff	_measure_capacitance$1280,___ftmul@f1
  1848  000B4A  C04C  F021         	movff	_measure_capacitance$1280+1,___ftmul@f1+1
  1849  000B4E  C04D  F022         	movff	_measure_capacitance$1280+2,___ftmul@f1+2
  1850  000B52  C0BE  F023         	movff	_CCal,___ftmul@f2
  1851  000B56  C0BF  F024         	movff	_CCal+1,___ftmul@f2+1
  1852  000B5A  C0C0  F025         	movff	_CCal+2,___ftmul@f2+2
  1853  000B5E  EC02  F008         	call	___ftmul	;wreg free
  1854  000B62  C020  F051         	movff	?___ftmul,measure_capacitance@Cin
  1855  000B66  C021  F052         	movff	?___ftmul+1,measure_capacitance@Cin+1
  1856  000B6A  C022  F053         	movff	?___ftmul+2,measure_capacitance@Cin+2
  1857                           
  1858                           ;measure.c: 191: if(Cin > 999) {
  1859  000B6E  0EC0               	movlw	192
  1860  000B70  6E09               	movwf	___ftge@ff1,c
  1861  000B72  0E79               	movlw	121
  1862  000B74  6E0A               	movwf	___ftge@ff1+1,c
  1863  000B76  0E44               	movlw	68
  1864  000B78  6E0B               	movwf	___ftge@ff1+2,c
  1865  000B7A  C051  F00C         	movff	measure_capacitance@Cin,___ftge@ff2
  1866  000B7E  C052  F00D         	movff	measure_capacitance@Cin+1,___ftge@ff2+1
  1867  000B82  C053  F00E         	movff	measure_capacitance@Cin+2,___ftge@ff2+2
  1868  000B86  EC7D  F00A         	call	___ftge	;wreg free
  1869  000B8A  E25F               	bc	l2875
  1870                           
  1871                           ;measure.c: 192: if(Cin > (999e+03l)) {
  1872  000B8C  0EE6               	movlw	230
  1873  000B8E  6E09               	movwf	___ftge@ff1,c
  1874  000B90  0E73               	movlw	115
  1875  000B92  6E0A               	movwf	___ftge@ff1+1,c
  1876  000B94  0E49               	movlw	73
  1877  000B96  6E0B               	movwf	___ftge@ff1+2,c
  1878  000B98  C051  F00C         	movff	measure_capacitance@Cin,___ftge@ff2
  1879  000B9C  C052  F00D         	movff	measure_capacitance@Cin+1,___ftge@ff2+1
  1880  000BA0  C053  F00E         	movff	measure_capacitance@Cin+2,___ftge@ff2+2
  1881  000BA4  EC7D  F00A         	call	___ftge	;wreg free
  1882  000BA8  E23B               	bc	l2871
  1883                           
  1884                           ;measure.c: 193: if(Cin > (999e+06l)) {
  1885  000BAA  0E2E               	movlw	46
  1886  000BAC  6E09               	movwf	___ftge@ff1,c
  1887  000BAE  0E6E               	movlw	110
  1888  000BB0  6E0A               	movwf	___ftge@ff1+1,c
  1889  000BB2  0E4E               	movlw	78
  1890  000BB4  6E0B               	movwf	___ftge@ff1+2,c
  1891  000BB6  C051  F00C         	movff	measure_capacitance@Cin,___ftge@ff2
  1892  000BBA  C052  F00D         	movff	measure_capacitance@Cin+1,___ftge@ff2+1
  1893  000BBE  C053  F00E         	movff	measure_capacitance@Cin+2,___ftge@ff2+2
  1894  000BC2  EC7D  F00A         	call	___ftge	;wreg free
  1895  000BC6  E216               	bc	l2867
  1896                           
  1897                           ;measure.c: 194: Cin = Cin / (1e+09);
  1898  000BC8  C051  F011         	movff	measure_capacitance@Cin,___ftdiv@f1
  1899  000BCC  C052  F012         	movff	measure_capacitance@Cin+1,___ftdiv@f1+1
  1900  000BD0  C053  F013         	movff	measure_capacitance@Cin+2,___ftdiv@f1+2
  1901  000BD4  0E6B               	movlw	107
  1902  000BD6  6E14               	movwf	___ftdiv@f2,c
  1903  000BD8  0E6E               	movlw	110
  1904  000BDA  6E15               	movwf	___ftdiv@f2+1,c
  1905  000BDC  0E4E               	movlw	78
  1906  000BDE  6E16               	movwf	___ftdiv@f2+2,c
  1907  000BE0  EC3F  F009         	call	___ftdiv	;wreg free
  1908  000BE4  C011  F051         	movff	?___ftdiv,measure_capacitance@Cin
  1909  000BE8  C012  F052         	movff	?___ftdiv+1,measure_capacitance@Cin+1
  1910  000BEC  C013  F053         	movff	?___ftdiv+2,measure_capacitance@Cin+2
  1911                           
  1912                           ;measure.c: 195: unit = 4;
  1913  000BF0  0E04               	movlw	4
  1914  000BF2  D02C               	goto	L2
  1915  000BF4                     l2867:
  1916                           
  1917                           ;measure.c: 197: Cin = Cin / (1e+06);
  1918  000BF4  C051  F011         	movff	measure_capacitance@Cin,___ftdiv@f1
  1919  000BF8  C052  F012         	movff	measure_capacitance@Cin+1,___ftdiv@f1+1
  1920  000BFC  C053  F013         	movff	measure_capacitance@Cin+2,___ftdiv@f1+2
  1921  000C00  0E24               	movlw	36
  1922  000C02  6E14               	movwf	___ftdiv@f2,c
  1923  000C04  0E74               	movlw	116
  1924  000C06  6E15               	movwf	___ftdiv@f2+1,c
  1925  000C08  0E49               	movlw	73
  1926  000C0A  6E16               	movwf	___ftdiv@f2+2,c
  1927  000C0C  EC3F  F009         	call	___ftdiv	;wreg free
  1928  000C10  C011  F051         	movff	?___ftdiv,measure_capacitance@Cin
  1929  000C14  C012  F052         	movff	?___ftdiv+1,measure_capacitance@Cin+1
  1930  000C18  C013  F053         	movff	?___ftdiv+2,measure_capacitance@Cin+2
  1931                           
  1932                           ;measure.c: 198: unit = 5;
  1933  000C1C  0E05               	movlw	5
  1934  000C1E  D016               	goto	L2
  1935  000C20                     l2871:
  1936                           
  1937                           ;measure.c: 201: Cin = Cin / 1e+03;
  1938  000C20  C051  F011         	movff	measure_capacitance@Cin,___ftdiv@f1
  1939  000C24  C052  F012         	movff	measure_capacitance@Cin+1,___ftdiv@f1+1
  1940  000C28  C053  F013         	movff	measure_capacitance@Cin+2,___ftdiv@f1+2
  1941  000C2C  6A14               	clrf	___ftdiv@f2,c
  1942  000C2E  0E7A               	movlw	122
  1943  000C30  6E15               	movwf	___ftdiv@f2+1,c
  1944  000C32  0E44               	movlw	68
  1945  000C34  6E16               	movwf	___ftdiv@f2+2,c
  1946  000C36  EC3F  F009         	call	___ftdiv	;wreg free
  1947  000C3A  C011  F051         	movff	?___ftdiv,measure_capacitance@Cin
  1948  000C3E  C012  F052         	movff	?___ftdiv+1,measure_capacitance@Cin+1
  1949  000C42  C013  F053         	movff	?___ftdiv+2,measure_capacitance@Cin+2
  1950                           
  1951                           ;measure.c: 202: unit = 6;
  1952  000C46  0E06               	movlw	6
  1953  000C48  D001               	goto	L2
  1954  000C4A                     l2875:
  1955                           
  1956                           ;measure.c: 205: unit = 7;
  1957  000C4A  0E07               	movlw	7
  1958  000C4C                     L2:
  1959  000C4C  FFFF               	dw	65535	; assembler added errata NOP
  1960  000C4E  6E4E               	movwf	measure_capacitance@unit,c
  1961                           
  1962                           ;measure.c: 207: Cin = Cin * 100;
  1963  000C50  C051  F020         	movff	measure_capacitance@Cin,___ftmul@f1
  1964  000C54  C052  F021         	movff	measure_capacitance@Cin+1,___ftmul@f1+1
  1965  000C58  C053  F022         	movff	measure_capacitance@Cin+2,___ftmul@f1+2
  1966  000C5C  6A23               	clrf	___ftmul@f2,c
  1967  000C5E  0EC8               	movlw	200
  1968  000C60  6E24               	movwf	___ftmul@f2+1,c
  1969  000C62  0E42               	movlw	66
  1970  000C64  6E25               	movwf	___ftmul@f2+2,c
  1971  000C66  EC02  F008         	call	___ftmul	;wreg free
  1972  000C6A  C020  F051         	movff	?___ftmul,measure_capacitance@Cin
  1973  000C6E  C021  F052         	movff	?___ftmul+1,measure_capacitance@Cin+1
  1974  000C72  C022  F053         	movff	?___ftmul+2,measure_capacitance@Cin+2
  1975                           
  1976                           ;measure.c: 208: var = (uint16_t)Cin;
  1977  000C76  C051  F009         	movff	measure_capacitance@Cin,___fttol@f1
  1978  000C7A  C052  F00A         	movff	measure_capacitance@Cin+1,___fttol@f1+1
  1979  000C7E  C053  F00B         	movff	measure_capacitance@Cin+2,___fttol@f1+2
  1980  000C82  ECD9  F008         	call	___fttol	;wreg free
  1981  000C86  C009  F04F         	movff	?___fttol,measure_capacitance@var
  1982  000C8A  C00A  F050         	movff	?___fttol+1,measure_capacitance@var+1
  1983                           
  1984                           ;measure.c: 210: print_reading(var);
  1985  000C8E  C04F  F009         	movff	measure_capacitance@var,print_reading@measurement
  1986  000C92  C050  F00A         	movff	measure_capacitance@var+1,print_reading@measurement+1
  1987  000C96  EC01  F00C         	call	_print_reading	;wreg free
  1988                           
  1989                           ;measure.c: 211: print_unit(unit);
  1990  000C9A  504E               	movf	measure_capacitance@unit,w,c
  1991  000C9C  EFFE  F00B         	goto	_print_unit
  1992  000CA0  FFFF               	dw	65535	; errata NOP
  1993  000CA2                     __end_of_measure_capacitance:
  1994                           	opt stack 0
  1995                           tblptru	equ	0xFF8
  1996                           tblptrh	equ	0xFF7
  1997                           tblptrl	equ	0xFF6
  1998                           tablat	equ	0xFF5
  1999                           intcon	equ	0xFF2
  2000                           intcon2	equ	0xFF1
  2001                           postinc0	equ	0xFEE
  2002                           wreg	equ	0xFE8
  2003                           status	equ	0xFD8
  2004                           
  2005 ;; *************** function _print_unit *****************
  2006 ;; Defined at:
  2007 ;;		line 401 in file "/home/roman/Dokumente/Sources/lc-meter/obj/../src/print.c"
  2008 ;; Parameters:    Size  Location     Type
  2009 ;;  unit            1    wreg     unsigned char 
  2010 ;; Auto vars:     Size  Location     Type
  2011 ;;  unit            1    0[COMRAM] unsigned char 
  2012 ;; Return value:  Size  Location     Type
  2013 ;;                  1    wreg      void 
  2014 ;; Registers used:
  2015 ;;		wreg
  2016 ;; Tracked objects:
  2017 ;;		On entry : 0/0
  2018 ;;		On exit  : 0/0
  2019 ;;		Unchanged: 0/0
  2020 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2021 ;;      Params:         0       0       0       0       0       0       0
  2022 ;;      Locals:         0       0       0       0       0       0       0
  2023 ;;      Temps:          0       0       0       0       0       0       0
  2024 ;;      Totals:         0       0       0       0       0       0       0
  2025 ;;Total ram usage:        0 bytes
  2026 ;; Hardware stack levels used:    1
  2027 ;; Hardware stack levels required when called:    2
  2028 ;; This function calls:
  2029 ;;		Nothing
  2030 ;; This function is called by:
  2031 ;;		_measure_capacitance
  2032 ;;		_measure_inductance
  2033 ;; This function uses a non-reentrant model
  2034 ;;
  2035                           
  2036                           	psect	text6
  2037  0017FC                     __ptext6:
  2038                           	opt stack 0
  2039  0017FC                     _print_unit:
  2040                           	opt stack 0
  2041  0017FC  FFFF               	dw	65535	; assembler added errata NOP
  2042                           
  2043                           ;incstack = 0
  2044  0017FE  0012               	return		;funcret
  2045  001800  FFFF               	dw	65535	; errata NOP
  2046  001802                     __end_of_print_unit:
  2047                           	opt stack 0
  2048                           tblptru	equ	0xFF8
  2049                           tblptrh	equ	0xFF7
  2050                           tblptrl	equ	0xFF6
  2051                           tablat	equ	0xFF5
  2052                           intcon	equ	0xFF2
  2053                           intcon2	equ	0xFF1
  2054                           postinc0	equ	0xFEE
  2055                           wreg	equ	0xFE8
  2056                           status	equ	0xFD8
  2057                           
  2058 ;; *************** function _print_reading *****************
  2059 ;; Defined at:
  2060 ;;		line 424 in file "/home/roman/Dokumente/Sources/lc-meter/obj/../src/print.c"
  2061 ;; Parameters:    Size  Location     Type
  2062 ;;  measurement     2    8[COMRAM] unsigned int 
  2063 ;; Auto vars:     Size  Location     Type
  2064 ;;		None
  2065 ;; Return value:  Size  Location     Type
  2066 ;;                  1    wreg      void 
  2067 ;; Registers used:
  2068 ;;		None
  2069 ;; Tracked objects:
  2070 ;;		On entry : 0/0
  2071 ;;		On exit  : 0/0
  2072 ;;		Unchanged: 0/0
  2073 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2074 ;;      Params:         2       0       0       0       0       0       0
  2075 ;;      Locals:         0       0       0       0       0       0       0
  2076 ;;      Temps:          0       0       0       0       0       0       0
  2077 ;;      Totals:         2       0       0       0       0       0       0
  2078 ;;Total ram usage:        2 bytes
  2079 ;; Hardware stack levels used:    1
  2080 ;; Hardware stack levels required when called:    2
  2081 ;; This function calls:
  2082 ;;		Nothing
  2083 ;; This function is called by:
  2084 ;;		_measure_capacitance
  2085 ;;		_measure_inductance
  2086 ;; This function uses a non-reentrant model
  2087 ;;
  2088                           
  2089                           	psect	text7
  2090  001802                     __ptext7:
  2091                           	opt stack 0
  2092  001802                     _print_reading:
  2093                           	opt stack 0
  2094  001802  FFFF               	dw	65535	; assembler added errata NOP
  2095                           
  2096                           ;incstack = 0
  2097  001804  0012               	return		;funcret
  2098  001806  FFFF               	dw	65535	; errata NOP
  2099  001808                     __end_of_print_reading:
  2100                           	opt stack 0
  2101                           tblptru	equ	0xFF8
  2102                           tblptrh	equ	0xFF7
  2103                           tblptrl	equ	0xFF6
  2104                           tablat	equ	0xFF5
  2105                           intcon	equ	0xFF2
  2106                           intcon2	equ	0xFF1
  2107                           postinc0	equ	0xFEE
  2108                           wreg	equ	0xFE8
  2109                           status	equ	0xFD8
  2110                           
  2111 ;; *************** function ___fttol *****************
  2112 ;; Defined at:
  2113 ;;		line 44 in file "/opt/microchip/xc8/v1.45/sources/common/fttol.c"
  2114 ;; Parameters:    Size  Location     Type
  2115 ;;  f1              3    8[COMRAM] float 
  2116 ;; Auto vars:     Size  Location     Type
  2117 ;;  lval            4   18[COMRAM] unsigned long 
  2118 ;;  exp1            1   22[COMRAM] unsigned char 
  2119 ;;  sign1           1   17[COMRAM] unsigned char 
  2120 ;; Return value:  Size  Location     Type
  2121 ;;                  4    8[COMRAM] long 
  2122 ;; Registers used:
  2123 ;;		wreg, status,2, status,0
  2124 ;; Tracked objects:
  2125 ;;		On entry : 0/0
  2126 ;;		On exit  : 0/0
  2127 ;;		Unchanged: 0/0
  2128 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2129 ;;      Params:         4       0       0       0       0       0       0
  2130 ;;      Locals:         6       0       0       0       0       0       0
  2131 ;;      Temps:          5       0       0       0       0       0       0
  2132 ;;      Totals:        15       0       0       0       0       0       0
  2133 ;;Total ram usage:       15 bytes
  2134 ;; Hardware stack levels used:    1
  2135 ;; Hardware stack levels required when called:    2
  2136 ;; This function calls:
  2137 ;;		Nothing
  2138 ;; This function is called by:
  2139 ;;		_measure_capacitance
  2140 ;;		_measure_inductance
  2141 ;; This function uses a non-reentrant model
  2142 ;;
  2143                           
  2144                           	psect	text8
  2145  0011B2                     __ptext8:
  2146                           	opt stack 0
  2147  0011B2                     ___fttol:
  2148                           	opt stack 0
  2149  0011B2  FFFF               	dw	65535	; assembler added errata NOP
  2150                           
  2151                           ;incstack = 0
  2152  0011B4  C00B  F00D         	movff	___fttol@f1+2,??___fttol
  2153  0011B8  6A0E               	clrf	(??___fttol+1)& (0+255),c
  2154  0011BA  6A0F               	clrf	(??___fttol+2)& (0+255),c
  2155  0011BC  340A               	rlcf	___fttol@f1+1,w,c
  2156  0011BE  360D               	rlcf	??___fttol& (0+255),f,c
  2157  0011C0  E301               	bnc	u2571
  2158  0011C2  800E               	bsf	(??___fttol+1)& (0+255),0,c
  2159  0011C4                     u2571:
  2160  0011C4  500D               	movf	??___fttol,w,c
  2161  0011C6  6E17               	movwf	___fttol@exp1,c
  2162  0011C8  5017               	movf	___fttol@exp1,w,c
  2163  0011CA  E106               	bnz	l2793
  2164  0011CC                     u2580:
  2165  0011CC  FFFF               	dw	65535	; assembler added errata NOP
  2166  0011CE  6A09               	clrf	?___fttol,c
  2167  0011D0  6A0A               	clrf	?___fttol+1,c
  2168  0011D2  6A0B               	clrf	?___fttol+2,c
  2169  0011D4  6A0C               	clrf	?___fttol+3,c
  2170  0011D6  D050               	goto	l729
  2171  0011D8                     l2793:
  2172  0011D8  0E17               	movlw	23
  2173  0011DA  6E0D               	movwf	??___fttol& (0+255),c
  2174  0011DC  C009  F00E         	movff	___fttol@f1,??___fttol+1
  2175  0011E0  C00A  F00F         	movff	___fttol@f1+1,??___fttol+2
  2176  0011E4  C00B  F010         	movff	___fttol@f1+2,??___fttol+3
  2177  0011E8  280D               	incf	??___fttol,w,c
  2178  0011EA  6E11               	movwf	(??___fttol+4)& (0+255),c
  2179  0011EC  D005               	goto	u2590
  2180  0011EE                     u2595:
  2181  0011EE  FFFF               	dw	65535	; assembler added errata NOP
  2182  0011F0  90D8               	bcf	status,0,c
  2183  0011F2  3210               	rrcf	??___fttol+3,f,c
  2184  0011F4  320F               	rrcf	??___fttol+2,f,c
  2185  0011F6  320E               	rrcf	??___fttol+1,f,c
  2186  0011F8                     u2590:
  2187  0011F8  FFFF               	dw	65535	; assembler added errata NOP
  2188  0011FA  2E11               	decfsz	(??___fttol+4)& (0+255),f,c
  2189  0011FC  D7F8               	goto	u2595
  2190  0011FE  500E               	movf	??___fttol+1,w,c
  2191  001200  6E12               	movwf	___fttol@sign1,c
  2192  001202  8E0A               	bsf	___fttol@f1+1,7,c
  2193  001204  6A0B               	clrf	___fttol@f1+2,c
  2194  001206  5009               	movf	___fttol@f1,w,c
  2195  001208  6E13               	movwf	___fttol@lval,c
  2196  00120A  500A               	movf	___fttol@f1+1,w,c
  2197  00120C  6E14               	movwf	___fttol@lval+1,c
  2198  00120E  500B               	movf	___fttol@f1+2,w,c
  2199  001210  6E15               	movwf	___fttol@lval+2,c
  2200  001212  6A16               	clrf	___fttol@lval+3,c
  2201  001214  0E8E               	movlw	142
  2202  001216  5E17               	subwf	___fttol@exp1,f,c
  2203  001218  AE17               	btfss	___fttol@exp1,7,c
  2204  00121A  D00D               	goto	l2813
  2205  00121C  5017               	movf	___fttol@exp1,w,c
  2206  00121E  0A80               	xorlw	128
  2207  001220  0F8F               	addlw	143
  2208  001222  E3D4               	bnc	u2580
  2209  001224                     l2809:
  2210  001224  FFFF               	dw	65535	; assembler added errata NOP
  2211  001226  90D8               	bcf	status,0,c
  2212  001228  3216               	rrcf	___fttol@lval+3,f,c
  2213  00122A  3215               	rrcf	___fttol@lval+2,f,c
  2214  00122C  3214               	rrcf	___fttol@lval+1,f,c
  2215  00122E  3213               	rrcf	___fttol@lval,f,c
  2216  001230  3E17               	incfsz	___fttol@exp1,f,c
  2217  001232  D7F8               	goto	l2809
  2218  001234  D00E               	goto	u2630
  2219  001236                     l2813:
  2220  001236  FFFF               	dw	65535	; assembler added errata NOP
  2221  001238  0E17               	movlw	23
  2222  00123A  6417               	cpfsgt	___fttol@exp1,c
  2223  00123C  D007               	goto	l2819
  2224  00123E  D7C6               	goto	u2580
  2225  001240                     l2817:
  2226  001240  90D8               	bcf	status,0,c
  2227  001242  3613               	rlcf	___fttol@lval,f,c
  2228  001244  3614               	rlcf	___fttol@lval+1,f,c
  2229  001246  3615               	rlcf	___fttol@lval+2,f,c
  2230  001248  3616               	rlcf	___fttol@lval+3,f,c
  2231  00124A  0617               	decf	___fttol@exp1,f,c
  2232  00124C                     l2819:
  2233  00124C  FFFF               	dw	65535	; assembler added errata NOP
  2234  00124E  5017               	movf	___fttol@exp1,w,c
  2235  001250  E1F7               	bnz	l2817
  2236  001252                     u2630:
  2237  001252  FFFF               	dw	65535	; assembler added errata NOP
  2238  001254  5012               	movf	___fttol@sign1,w,c
  2239  001256  E008               	bz	l2825
  2240  001258  1E16               	comf	___fttol@lval+3,f,c
  2241  00125A  1E15               	comf	___fttol@lval+2,f,c
  2242  00125C  1E14               	comf	___fttol@lval+1,f,c
  2243  00125E  6C13               	negf	___fttol@lval,c
  2244  001260  0E00               	movlw	0
  2245  001262  2214               	addwfc	___fttol@lval+1,f,c
  2246  001264  2215               	addwfc	___fttol@lval+2,f,c
  2247  001266  2216               	addwfc	___fttol@lval+3,f,c
  2248  001268                     l2825:
  2249  001268  C013  F009         	movff	___fttol@lval,?___fttol
  2250  00126C  C014  F00A         	movff	___fttol@lval+1,?___fttol+1
  2251  001270  C015  F00B         	movff	___fttol@lval+2,?___fttol+2
  2252  001274  C016  F00C         	movff	___fttol@lval+3,?___fttol+3
  2253  001278                     l729:
  2254  001278  FFFF               	dw	65535	; assembler added errata NOP
  2255  00127A  0012               	return		;funcret
  2256  00127C  FFFF               	dw	65535	; errata NOP
  2257  00127E                     __end_of___fttol:
  2258                           	opt stack 0
  2259                           tblptru	equ	0xFF8
  2260                           tblptrh	equ	0xFF7
  2261                           tblptrl	equ	0xFF6
  2262                           tablat	equ	0xFF5
  2263                           intcon	equ	0xFF2
  2264                           intcon2	equ	0xFF1
  2265                           postinc0	equ	0xFEE
  2266                           wreg	equ	0xFE8
  2267                           status	equ	0xFD8
  2268                           
  2269 ;; *************** function ___ftsub *****************
  2270 ;; Defined at:
  2271 ;;		line 20 in file "/opt/microchip/xc8/v1.45/sources/common/ftsub.c"
  2272 ;; Parameters:    Size  Location     Type
  2273 ;;  f1              3   46[COMRAM] float 
  2274 ;;  f2              3   49[COMRAM] float 
  2275 ;; Auto vars:     Size  Location     Type
  2276 ;;		None
  2277 ;; Return value:  Size  Location     Type
  2278 ;;                  3   46[COMRAM] float 
  2279 ;; Registers used:
  2280 ;;		wreg, status,2, status,0, cstack
  2281 ;; Tracked objects:
  2282 ;;		On entry : 0/0
  2283 ;;		On exit  : 0/0
  2284 ;;		Unchanged: 0/0
  2285 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2286 ;;      Params:         6       0       0       0       0       0       0
  2287 ;;      Locals:         0       0       0       0       0       0       0
  2288 ;;      Temps:          0       0       0       0       0       0       0
  2289 ;;      Totals:         6       0       0       0       0       0       0
  2290 ;;Total ram usage:        6 bytes
  2291 ;; Hardware stack levels used:    1
  2292 ;; Hardware stack levels required when called:    4
  2293 ;; This function calls:
  2294 ;;		___ftadd
  2295 ;; This function is called by:
  2296 ;;		_measure_capacitance
  2297 ;;		_measure_inductance
  2298 ;; This function uses a non-reentrant model
  2299 ;;
  2300                           
  2301                           	psect	text9
  2302  0016E8                     __ptext9:
  2303                           	opt stack 0
  2304  0016E8                     ___ftsub:
  2305                           	opt stack 0
  2306  0016E8  FFFF               	dw	65535	; assembler added errata NOP
  2307                           
  2308                           ;incstack = 0
  2309  0016EA  5032               	movf	___ftsub@f2,w,c
  2310  0016EC  1033               	iorwf	___ftsub@f2+1,w,c
  2311  0016EE  1034               	iorwf	___ftsub@f2+2,w,c
  2312  0016F0  E002               	bz	l2767
  2313  0016F2  0E80               	movlw	128
  2314  0016F4  1A34               	xorwf	___ftsub@f2+2,f,c
  2315  0016F6                     l2767:
  2316  0016F6  C02F  F011         	movff	___ftsub@f1,___ftadd@f1
  2317  0016FA  C030  F012         	movff	___ftsub@f1+1,___ftadd@f1+1
  2318  0016FE  C031  F013         	movff	___ftsub@f1+2,___ftadd@f1+2
  2319  001702  C032  F014         	movff	___ftsub@f2,___ftadd@f2
  2320  001706  C033  F015         	movff	___ftsub@f2+1,___ftadd@f2+1
  2321  00170A  C034  F016         	movff	___ftsub@f2+2,___ftadd@f2+2
  2322  00170E  EC51  F006         	call	___ftadd	;wreg free
  2323  001712  C011  F02F         	movff	?___ftadd,?___ftsub
  2324  001716  C012  F030         	movff	?___ftadd+1,?___ftsub+1
  2325  00171A  C013  F031         	movff	?___ftadd+2,?___ftsub+2
  2326  00171E  0012               	return		;funcret
  2327  001720  FFFF               	dw	65535	; errata NOP
  2328  001722                     __end_of___ftsub:
  2329                           	opt stack 0
  2330                           tblptru	equ	0xFF8
  2331                           tblptrh	equ	0xFF7
  2332                           tblptrl	equ	0xFF6
  2333                           tablat	equ	0xFF5
  2334                           intcon	equ	0xFF2
  2335                           intcon2	equ	0xFF1
  2336                           postinc0	equ	0xFEE
  2337                           wreg	equ	0xFE8
  2338                           status	equ	0xFD8
  2339                           
  2340 ;; *************** function ___ftadd *****************
  2341 ;; Defined at:
  2342 ;;		line 86 in file "/opt/microchip/xc8/v1.45/sources/common/ftadd.c"
  2343 ;; Parameters:    Size  Location     Type
  2344 ;;  f1              3   16[COMRAM] float 
  2345 ;;  f2              3   19[COMRAM] float 
  2346 ;; Auto vars:     Size  Location     Type
  2347 ;;  exp1            1   27[COMRAM] unsigned char 
  2348 ;;  exp2            1   26[COMRAM] unsigned char 
  2349 ;;  sign            1   25[COMRAM] unsigned char 
  2350 ;; Return value:  Size  Location     Type
  2351 ;;                  3   16[COMRAM] float 
  2352 ;; Registers used:
  2353 ;;		wreg, status,2, status,0, cstack
  2354 ;; Tracked objects:
  2355 ;;		On entry : 0/0
  2356 ;;		On exit  : 0/0
  2357 ;;		Unchanged: 0/0
  2358 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2359 ;;      Params:         6       0       0       0       0       0       0
  2360 ;;      Locals:         3       0       0       0       0       0       0
  2361 ;;      Temps:          3       0       0       0       0       0       0
  2362 ;;      Totals:        12       0       0       0       0       0       0
  2363 ;;Total ram usage:       12 bytes
  2364 ;; Hardware stack levels used:    1
  2365 ;; Hardware stack levels required when called:    3
  2366 ;; This function calls:
  2367 ;;		___ftpack
  2368 ;; This function is called by:
  2369 ;;		___ftsub
  2370 ;; This function uses a non-reentrant model
  2371 ;;
  2372                           
  2373                           	psect	text10
  2374  000CA2                     __ptext10:
  2375                           	opt stack 0
  2376  000CA2                     ___ftadd:
  2377                           	opt stack 0
  2378  000CA2  FFFF               	dw	65535	; assembler added errata NOP
  2379                           
  2380                           ;incstack = 0
  2381  000CA4  C013  F017         	movff	___ftadd@f1+2,??___ftadd
  2382  000CA8  6A18               	clrf	(??___ftadd+1)& (0+255),c
  2383  000CAA  6A19               	clrf	(??___ftadd+2)& (0+255),c
  2384  000CAC  3412               	rlcf	___ftadd@f1+1,w,c
  2385  000CAE  3617               	rlcf	??___ftadd& (0+255),f,c
  2386  000CB0  E301               	bnc	u2211
  2387  000CB2  8018               	bsf	(??___ftadd+1)& (0+255),0,c
  2388  000CB4                     u2211:
  2389  000CB4  5017               	movf	??___ftadd,w,c
  2390  000CB6  6E1C               	movwf	___ftadd@exp1,c
  2391  000CB8  C016  F017         	movff	___ftadd@f2+2,??___ftadd
  2392  000CBC  6A18               	clrf	(??___ftadd+1)& (0+255),c
  2393  000CBE  6A19               	clrf	(??___ftadd+2)& (0+255),c
  2394  000CC0  3415               	rlcf	___ftadd@f2+1,w,c
  2395  000CC2  3617               	rlcf	??___ftadd& (0+255),f,c
  2396  000CC4  E301               	bnc	u2221
  2397  000CC6  8018               	bsf	(??___ftadd+1)& (0+255),0,c
  2398  000CC8                     u2221:
  2399  000CC8  5017               	movf	??___ftadd,w,c
  2400  000CCA  6E1B               	movwf	___ftadd@exp2,c
  2401  000CCC  501C               	movf	___ftadd@exp1,w,c
  2402  000CCE  E009               	bz	u2250
  2403  000CD0  501B               	movf	___ftadd@exp2,w,c
  2404  000CD2  5C1C               	subwf	___ftadd@exp1,w,c
  2405  000CD4  E20D               	bc	l2583
  2406  000CD6  501C               	movf	___ftadd@exp1,w,c
  2407  000CD8  5C1B               	subwf	___ftadd@exp2,w,c
  2408  000CDA  6E17               	movwf	??___ftadd& (0+255),c
  2409  000CDC  0E18               	movlw	24
  2410  000CDE  6417               	cpfsgt	??___ftadd,c
  2411  000CE0  D007               	goto	l2583
  2412  000CE2                     u2250:
  2413  000CE2  C014  F011         	movff	___ftadd@f2,?___ftadd
  2414  000CE6  C015  F012         	movff	___ftadd@f2+1,?___ftadd+1
  2415  000CEA  C016  F013         	movff	___ftadd@f2+2,?___ftadd+2
  2416  000CEE  D08F               	goto	l662
  2417  000CF0                     l2583:
  2418  000CF0  FFFF               	dw	65535	; assembler added errata NOP
  2419  000CF2  501B               	movf	___ftadd@exp2,w,c
  2420  000CF4  E009               	bz	u2280
  2421  000CF6  501C               	movf	___ftadd@exp1,w,c
  2422  000CF8  5C1B               	subwf	___ftadd@exp2,w,c
  2423  000CFA  E20D               	bc	l2589
  2424  000CFC  501B               	movf	___ftadd@exp2,w,c
  2425  000CFE  5C1C               	subwf	___ftadd@exp1,w,c
  2426  000D00  6E17               	movwf	??___ftadd& (0+255),c
  2427  000D02  0E18               	movlw	24
  2428  000D04  6417               	cpfsgt	??___ftadd,c
  2429  000D06  D007               	goto	l2589
  2430  000D08                     u2280:
  2431  000D08  C011  F011         	movff	___ftadd@f1,?___ftadd
  2432  000D0C  C012  F012         	movff	___ftadd@f1+1,?___ftadd+1
  2433  000D10  C013  F013         	movff	___ftadd@f1+2,?___ftadd+2
  2434  000D14  D07C               	goto	l662
  2435  000D16                     l2589:
  2436  000D16  FFFF               	dw	65535	; assembler added errata NOP
  2437  000D18  0E06               	movlw	6
  2438  000D1A  6E1A               	movwf	___ftadd@sign,c
  2439  000D1C  BE13               	btfsc	___ftadd@f1+2,7,c
  2440  000D1E  8E1A               	bsf	___ftadd@sign,7,c
  2441  000D20  BE16               	btfsc	___ftadd@f2+2,7,c
  2442  000D22  8C1A               	bsf	___ftadd@sign,6,c
  2443  000D24  8E12               	bsf	___ftadd@f1+1,7,c
  2444  000D26  6A13               	clrf	___ftadd@f1+2,c
  2445  000D28  8E15               	bsf	___ftadd@f2+1,7,c
  2446  000D2A  6A16               	clrf	___ftadd@f2+2,c
  2447  000D2C  501B               	movf	___ftadd@exp2,w,c
  2448  000D2E  5C1C               	subwf	___ftadd@exp1,w,c
  2449  000D30  E21A               	bc	l2615
  2450  000D32                     u2310:
  2451  000D32  FFFF               	dw	65535	; assembler added errata NOP
  2452  000D34  90D8               	bcf	status,0,c
  2453  000D36  3614               	rlcf	___ftadd@f2,f,c
  2454  000D38  3615               	rlcf	___ftadd@f2+1,f,c
  2455  000D3A  3616               	rlcf	___ftadd@f2+2,f,c
  2456  000D3C  061B               	decf	___ftadd@exp2,f,c
  2457  000D3E  501C               	movf	___ftadd@exp1,w,c
  2458  000D40  181B               	xorwf	___ftadd@exp2,w,c
  2459  000D42  E00D               	bz	l2613
  2460  000D44  061A               	decf	___ftadd@sign,f,c
  2461  000D46  C01A  F017         	movff	___ftadd@sign,??___ftadd
  2462  000D4A  0E07               	movlw	7
  2463  000D4C  1617               	andwf	??___ftadd,f,c
  2464  000D4E  E007               	bz	l2613
  2465  000D50  D7F0               	goto	u2310
  2466  000D52                     l2611:
  2467  000D52  FFFF               	dw	65535	; assembler added errata NOP
  2468  000D54  90D8               	bcf	status,0,c
  2469  000D56  3213               	rrcf	___ftadd@f1+2,f,c
  2470  000D58  3212               	rrcf	___ftadd@f1+1,f,c
  2471  000D5A  3211               	rrcf	___ftadd@f1,f,c
  2472  000D5C  2A1C               	incf	___ftadd@exp1,f,c
  2473  000D5E                     l2613:
  2474  000D5E  501B               	movf	___ftadd@exp2,w,c
  2475  000D60  181C               	xorwf	___ftadd@exp1,w,c
  2476  000D62  E01C               	bz	u2380
  2477  000D64  D7F6               	goto	l2611
  2478  000D66                     l2615:
  2479  000D66  501C               	movf	___ftadd@exp1,w,c
  2480  000D68  5C1B               	subwf	___ftadd@exp2,w,c
  2481  000D6A  E218               	bc	u2380
  2482  000D6C                     u2350:
  2483  000D6C  FFFF               	dw	65535	; assembler added errata NOP
  2484  000D6E  90D8               	bcf	status,0,c
  2485  000D70  3611               	rlcf	___ftadd@f1,f,c
  2486  000D72  3612               	rlcf	___ftadd@f1+1,f,c
  2487  000D74  3613               	rlcf	___ftadd@f1+2,f,c
  2488  000D76  061C               	decf	___ftadd@exp1,f,c
  2489  000D78  501C               	movf	___ftadd@exp1,w,c
  2490  000D7A  181B               	xorwf	___ftadd@exp2,w,c
  2491  000D7C  E00C               	bz	l2625
  2492  000D7E  061A               	decf	___ftadd@sign,f,c
  2493  000D80  C01A  F017         	movff	___ftadd@sign,??___ftadd
  2494  000D84  0E07               	movlw	7
  2495  000D86  1617               	andwf	??___ftadd,f,c
  2496  000D88  E006               	bz	l2625
  2497  000D8A  D7F0               	goto	u2350
  2498  000D8C                     l2623:
  2499  000D8C  90D8               	bcf	status,0,c
  2500  000D8E  3216               	rrcf	___ftadd@f2+2,f,c
  2501  000D90  3215               	rrcf	___ftadd@f2+1,f,c
  2502  000D92  3214               	rrcf	___ftadd@f2,f,c
  2503  000D94  2A1B               	incf	___ftadd@exp2,f,c
  2504  000D96                     l2625:
  2505  000D96  501B               	movf	___ftadd@exp2,w,c
  2506  000D98  181C               	xorwf	___ftadd@exp1,w,c
  2507  000D9A  E1F8               	bnz	l2623
  2508  000D9C                     u2380:
  2509  000D9C  AE1A               	btfss	___ftadd@sign,7,c
  2510  000D9E  D007               	goto	l685
  2511  000DA0  1E11               	comf	___ftadd@f1,f,c
  2512  000DA2  1E12               	comf	___ftadd@f1+1,f,c
  2513  000DA4  1E13               	comf	___ftadd@f1+2,f,c
  2514  000DA6  2A11               	incf	___ftadd@f1,f,c
  2515  000DA8  0E00               	movlw	0
  2516  000DAA  2212               	addwfc	___ftadd@f1+1,f,c
  2517  000DAC  2213               	addwfc	___ftadd@f1+2,f,c
  2518  000DAE                     l685:
  2519  000DAE  FFFF               	dw	65535	; assembler added errata NOP
  2520  000DB0  AC1A               	btfss	___ftadd@sign,6,c
  2521  000DB2  D007               	goto	l686
  2522  000DB4  1E14               	comf	___ftadd@f2,f,c
  2523  000DB6  1E15               	comf	___ftadd@f2+1,f,c
  2524  000DB8  1E16               	comf	___ftadd@f2+2,f,c
  2525  000DBA  2A14               	incf	___ftadd@f2,f,c
  2526  000DBC  0E00               	movlw	0
  2527  000DBE  2215               	addwfc	___ftadd@f2+1,f,c
  2528  000DC0  2216               	addwfc	___ftadd@f2+2,f,c
  2529  000DC2                     l686:
  2530  000DC2  FFFF               	dw	65535	; assembler added errata NOP
  2531  000DC4  6A1A               	clrf	___ftadd@sign,c
  2532  000DC6  5011               	movf	___ftadd@f1,w,c
  2533  000DC8  2614               	addwf	___ftadd@f2,f,c
  2534  000DCA  5012               	movf	___ftadd@f1+1,w,c
  2535  000DCC  2215               	addwfc	___ftadd@f2+1,f,c
  2536  000DCE  5013               	movf	___ftadd@f1+2,w,c
  2537  000DD0  2216               	addwfc	___ftadd@f2+2,f,c
  2538  000DD2  AE16               	btfss	___ftadd@f2+2,7,c
  2539  000DD4  D009               	goto	l2635
  2540  000DD6  1E14               	comf	___ftadd@f2,f,c
  2541  000DD8  1E15               	comf	___ftadd@f2+1,f,c
  2542  000DDA  1E16               	comf	___ftadd@f2+2,f,c
  2543  000DDC  2A14               	incf	___ftadd@f2,f,c
  2544  000DDE  0E00               	movlw	0
  2545  000DE0  2215               	addwfc	___ftadd@f2+1,f,c
  2546  000DE2  2216               	addwfc	___ftadd@f2+2,f,c
  2547  000DE4  0E01               	movlw	1
  2548  000DE6  6E1A               	movwf	___ftadd@sign,c
  2549  000DE8                     l2635:
  2550  000DE8  FFFF               	dw	65535	; assembler added errata NOP
  2551  000DEA  C014  F009         	movff	___ftadd@f2,___ftpack@arg
  2552  000DEE  C015  F00A         	movff	___ftadd@f2+1,___ftpack@arg+1
  2553  000DF2  C016  F00B         	movff	___ftadd@f2+2,___ftpack@arg+2
  2554  000DF6  C01C  F00C         	movff	___ftadd@exp1,___ftpack@exp
  2555  000DFA  C01A  F00D         	movff	___ftadd@sign,___ftpack@sign
  2556  000DFE  ECED  F009         	call	___ftpack	;wreg free
  2557  000E02  C009  F011         	movff	?___ftpack,?___ftadd
  2558  000E06  C00A  F012         	movff	?___ftpack+1,?___ftadd+1
  2559  000E0A  C00B  F013         	movff	?___ftpack+2,?___ftadd+2
  2560  000E0E                     l662:
  2561  000E0E  FFFF               	dw	65535	; assembler added errata NOP
  2562  000E10  0012               	return		;funcret
  2563  000E12  FFFF               	dw	65535	; errata NOP
  2564  000E14                     __end_of___ftadd:
  2565                           	opt stack 0
  2566                           tblptru	equ	0xFF8
  2567                           tblptrh	equ	0xFF7
  2568                           tblptrl	equ	0xFF6
  2569                           tablat	equ	0xFF5
  2570                           intcon	equ	0xFF2
  2571                           intcon2	equ	0xFF1
  2572                           postinc0	equ	0xFEE
  2573                           wreg	equ	0xFE8
  2574                           status	equ	0xFD8
  2575                           
  2576 ;; *************** function ___ftmul *****************
  2577 ;; Defined at:
  2578 ;;		line 62 in file "/opt/microchip/xc8/v1.45/sources/common/ftmul.c"
  2579 ;; Parameters:    Size  Location     Type
  2580 ;;  f1              3   31[COMRAM] float 
  2581 ;;  f2              3   34[COMRAM] float 
  2582 ;; Auto vars:     Size  Location     Type
  2583 ;;  f3_as_produc    3   41[COMRAM] unsigned um
  2584 ;;  sign            1   45[COMRAM] unsigned char 
  2585 ;;  cntr            1   44[COMRAM] unsigned char 
  2586 ;;  exp             1   40[COMRAM] unsigned char 
  2587 ;; Return value:  Size  Location     Type
  2588 ;;                  3   31[COMRAM] float 
  2589 ;; Registers used:
  2590 ;;		wreg, status,2, status,0, cstack
  2591 ;; Tracked objects:
  2592 ;;		On entry : 0/0
  2593 ;;		On exit  : 0/0
  2594 ;;		Unchanged: 0/0
  2595 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2596 ;;      Params:         6       0       0       0       0       0       0
  2597 ;;      Locals:         6       0       0       0       0       0       0
  2598 ;;      Temps:          3       0       0       0       0       0       0
  2599 ;;      Totals:        15       0       0       0       0       0       0
  2600 ;;Total ram usage:       15 bytes
  2601 ;; Hardware stack levels used:    1
  2602 ;; Hardware stack levels required when called:    3
  2603 ;; This function calls:
  2604 ;;		___ftpack
  2605 ;; This function is called by:
  2606 ;;		_measure_capacitance
  2607 ;;		_measure_inductance
  2608 ;; This function uses a non-reentrant model
  2609 ;;
  2610                           
  2611                           	psect	text11
  2612  001004                     __ptext11:
  2613                           	opt stack 0
  2614  001004                     ___ftmul:
  2615                           	opt stack 0
  2616  001004  FFFF               	dw	65535	; assembler added errata NOP
  2617                           
  2618                           ;incstack = 0
  2619  001006  C022  F026         	movff	___ftmul@f1+2,??___ftmul
  2620  00100A  6A27               	clrf	(??___ftmul+1)& (0+255),c
  2621  00100C  6A28               	clrf	(??___ftmul+2)& (0+255),c
  2622  00100E  3421               	rlcf	___ftmul@f1+1,w,c
  2623  001010  3626               	rlcf	??___ftmul& (0+255),f,c
  2624  001012  E301               	bnc	u2471
  2625  001014  8027               	bsf	(??___ftmul+1)& (0+255),0,c
  2626  001016                     u2471:
  2627  001016  5026               	movf	??___ftmul,w,c
  2628  001018  6E29               	movwf	___ftmul@exp,c
  2629  00101A  5029               	movf	___ftmul@exp,w,c
  2630  00101C  E101               	bnz	l2723
  2631  00101E  D00C               	goto	u2500
  2632  001020                     l2723:
  2633  001020  C025  F026         	movff	___ftmul@f2+2,??___ftmul
  2634  001024  6A27               	clrf	(??___ftmul+1)& (0+255),c
  2635  001026  6A28               	clrf	(??___ftmul+2)& (0+255),c
  2636  001028  3424               	rlcf	___ftmul@f2+1,w,c
  2637  00102A  3626               	rlcf	??___ftmul& (0+255),f,c
  2638  00102C  E301               	bnc	u2491
  2639  00102E  8027               	bsf	(??___ftmul+1)& (0+255),0,c
  2640  001030                     u2491:
  2641  001030  5026               	movf	??___ftmul,w,c
  2642  001032  6E2E               	movwf	___ftmul@sign,c
  2643  001034  502E               	movf	___ftmul@sign,w,c
  2644  001036  E105               	bnz	l2727
  2645  001038                     u2500:
  2646  001038  FFFF               	dw	65535	; assembler added errata NOP
  2647  00103A  6A20               	clrf	?___ftmul,c
  2648  00103C  6A21               	clrf	?___ftmul+1,c
  2649  00103E  6A22               	clrf	?___ftmul+2,c
  2650  001040  D04E               	goto	l708
  2651  001042                     l2727:
  2652  001042  502E               	movf	___ftmul@sign,w,c
  2653  001044  0F7B               	addlw	123
  2654  001046  2629               	addwf	___ftmul@exp,f,c
  2655  001048  C022  F02E         	movff	___ftmul@f1+2,___ftmul@sign
  2656  00104C  5025               	movf	___ftmul@f2+2,w,c
  2657  00104E  1A2E               	xorwf	___ftmul@sign,f,c
  2658  001050  0E80               	movlw	128
  2659  001052  162E               	andwf	___ftmul@sign,f,c
  2660  001054  8E21               	bsf	___ftmul@f1+1,7,c
  2661  001056  8E24               	bsf	___ftmul@f2+1,7,c
  2662  001058  0E00               	movlw	0
  2663  00105A  1625               	andwf	___ftmul@f2+2,f,c
  2664  00105C  6A2A               	clrf	___ftmul@f3_as_product,c
  2665  00105E  6A2B               	clrf	___ftmul@f3_as_product+1,c
  2666  001060  6A2C               	clrf	___ftmul@f3_as_product+2,c
  2667  001062  0E07               	movlw	7
  2668  001064  6E2D               	movwf	___ftmul@cntr,c
  2669  001066                     l2741:
  2670  001066  FFFF               	dw	65535	; assembler added errata NOP
  2671  001068  A020               	btfss	___ftmul@f1,0,c
  2672  00106A  D006               	goto	l2745
  2673  00106C  5023               	movf	___ftmul@f2,w,c
  2674  00106E  262A               	addwf	___ftmul@f3_as_product,f,c
  2675  001070  5024               	movf	___ftmul@f2+1,w,c
  2676  001072  222B               	addwfc	___ftmul@f3_as_product+1,f,c
  2677  001074  5025               	movf	___ftmul@f2+2,w,c
  2678  001076  222C               	addwfc	___ftmul@f3_as_product+2,f,c
  2679  001078                     l2745:
  2680  001078  FFFF               	dw	65535	; assembler added errata NOP
  2681  00107A  90D8               	bcf	status,0,c
  2682  00107C  3222               	rrcf	___ftmul@f1+2,f,c
  2683  00107E  3221               	rrcf	___ftmul@f1+1,f,c
  2684  001080  3220               	rrcf	___ftmul@f1,f,c
  2685  001082  90D8               	bcf	status,0,c
  2686  001084  3623               	rlcf	___ftmul@f2,f,c
  2687  001086  3624               	rlcf	___ftmul@f2+1,f,c
  2688  001088  3625               	rlcf	___ftmul@f2+2,f,c
  2689  00108A  2E2D               	decfsz	___ftmul@cntr,f,c
  2690  00108C  D7EC               	goto	l2741
  2691  00108E  0E09               	movlw	9
  2692  001090  6E2D               	movwf	___ftmul@cntr,c
  2693  001092                     l2751:
  2694  001092  FFFF               	dw	65535	; assembler added errata NOP
  2695  001094  A020               	btfss	___ftmul@f1,0,c
  2696  001096  D006               	goto	l2755
  2697  001098  5023               	movf	___ftmul@f2,w,c
  2698  00109A  262A               	addwf	___ftmul@f3_as_product,f,c
  2699  00109C  5024               	movf	___ftmul@f2+1,w,c
  2700  00109E  222B               	addwfc	___ftmul@f3_as_product+1,f,c
  2701  0010A0  5025               	movf	___ftmul@f2+2,w,c
  2702  0010A2  222C               	addwfc	___ftmul@f3_as_product+2,f,c
  2703  0010A4                     l2755:
  2704  0010A4  FFFF               	dw	65535	; assembler added errata NOP
  2705  0010A6  90D8               	bcf	status,0,c
  2706  0010A8  3222               	rrcf	___ftmul@f1+2,f,c
  2707  0010AA  3221               	rrcf	___ftmul@f1+1,f,c
  2708  0010AC  3220               	rrcf	___ftmul@f1,f,c
  2709  0010AE  90D8               	bcf	status,0,c
  2710  0010B0  322C               	rrcf	___ftmul@f3_as_product+2,f,c
  2711  0010B2  322B               	rrcf	___ftmul@f3_as_product+1,f,c
  2712  0010B4  322A               	rrcf	___ftmul@f3_as_product,f,c
  2713  0010B6  2E2D               	decfsz	___ftmul@cntr,f,c
  2714  0010B8  D7EC               	goto	l2751
  2715  0010BA  C02A  F009         	movff	___ftmul@f3_as_product,___ftpack@arg
  2716  0010BE  C02B  F00A         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
  2717  0010C2  C02C  F00B         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
  2718  0010C6  C029  F00C         	movff	___ftmul@exp,___ftpack@exp
  2719  0010CA  C02E  F00D         	movff	___ftmul@sign,___ftpack@sign
  2720  0010CE  ECED  F009         	call	___ftpack	;wreg free
  2721  0010D2  C009  F020         	movff	?___ftpack,?___ftmul
  2722  0010D6  C00A  F021         	movff	?___ftpack+1,?___ftmul+1
  2723  0010DA  C00B  F022         	movff	?___ftpack+2,?___ftmul+2
  2724  0010DE                     l708:
  2725  0010DE  FFFF               	dw	65535	; assembler added errata NOP
  2726  0010E0  0012               	return		;funcret
  2727  0010E2  FFFF               	dw	65535	; errata NOP
  2728  0010E4                     __end_of___ftmul:
  2729                           	opt stack 0
  2730                           tblptru	equ	0xFF8
  2731                           tblptrh	equ	0xFF7
  2732                           tblptrl	equ	0xFF6
  2733                           tablat	equ	0xFF5
  2734                           intcon	equ	0xFF2
  2735                           intcon2	equ	0xFF1
  2736                           postinc0	equ	0xFEE
  2737                           wreg	equ	0xFE8
  2738                           status	equ	0xFD8
  2739                           
  2740 ;; *************** function ___ftge *****************
  2741 ;; Defined at:
  2742 ;;		line 4 in file "/opt/microchip/xc8/v1.45/sources/common/ftge.c"
  2743 ;; Parameters:    Size  Location     Type
  2744 ;;  ff1             3    8[COMRAM] float 
  2745 ;;  ff2             3   11[COMRAM] float 
  2746 ;; Auto vars:     Size  Location     Type
  2747 ;;		None
  2748 ;; Return value:  Size  Location     Type
  2749 ;;		None               void
  2750 ;; Registers used:
  2751 ;;		wreg, status,2, status,0
  2752 ;; Tracked objects:
  2753 ;;		On entry : 0/0
  2754 ;;		On exit  : 0/0
  2755 ;;		Unchanged: 0/0
  2756 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2757 ;;      Params:         6       0       0       0       0       0       0
  2758 ;;      Locals:         0       0       0       0       0       0       0
  2759 ;;      Temps:          3       0       0       0       0       0       0
  2760 ;;      Totals:         9       0       0       0       0       0       0
  2761 ;;Total ram usage:        9 bytes
  2762 ;; Hardware stack levels used:    1
  2763 ;; Hardware stack levels required when called:    2
  2764 ;; This function calls:
  2765 ;;		Nothing
  2766 ;; This function is called by:
  2767 ;;		_measure_capacitance
  2768 ;;		_measure_inductance
  2769 ;; This function uses a non-reentrant model
  2770 ;;
  2771                           
  2772                           	psect	text12
  2773  0014FA                     __ptext12:
  2774                           	opt stack 0
  2775  0014FA                     ___ftge:
  2776                           	opt stack 0
  2777  0014FA  FFFF               	dw	65535	; assembler added errata NOP
  2778                           
  2779                           ;incstack = 0
  2780  0014FC  AE0B               	btfss	___ftge@ff1+2,7,c
  2781  0014FE  D00D               	goto	l2775
  2782  001500  6A0F               	clrf	??___ftge& (0+255),c
  2783  001502  6A10               	clrf	(??___ftge+1)& (0+255),c
  2784  001504  0E80               	movlw	128
  2785  001506  6E11               	movwf	(??___ftge+2)& (0+255),c
  2786  001508  5009               	movf	___ftge@ff1,w,c
  2787  00150A  5C0F               	subwf	??___ftge,w,c
  2788  00150C  6E09               	movwf	___ftge@ff1,c
  2789  00150E  500A               	movf	___ftge@ff1+1,w,c
  2790  001510  5810               	subwfb	??___ftge+1,w,c
  2791  001512  6E0A               	movwf	___ftge@ff1+1,c
  2792  001514  500B               	movf	___ftge@ff1+2,w,c
  2793  001516  5811               	subwfb	??___ftge+2,w,c
  2794  001518  6E0B               	movwf	___ftge@ff1+2,c
  2795  00151A                     l2775:
  2796  00151A  FFFF               	dw	65535	; assembler added errata NOP
  2797  00151C  AE0E               	btfss	___ftge@ff2+2,7,c
  2798  00151E  D00D               	goto	l2779
  2799  001520  6A0F               	clrf	??___ftge& (0+255),c
  2800  001522  6A10               	clrf	(??___ftge+1)& (0+255),c
  2801  001524  0E80               	movlw	128
  2802  001526  6E11               	movwf	(??___ftge+2)& (0+255),c
  2803  001528  500C               	movf	___ftge@ff2,w,c
  2804  00152A  5C0F               	subwf	??___ftge,w,c
  2805  00152C  6E0C               	movwf	___ftge@ff2,c
  2806  00152E  500D               	movf	___ftge@ff2+1,w,c
  2807  001530  5810               	subwfb	??___ftge+1,w,c
  2808  001532  6E0D               	movwf	___ftge@ff2+1,c
  2809  001534  500E               	movf	___ftge@ff2+2,w,c
  2810  001536  5811               	subwfb	??___ftge+2,w,c
  2811  001538  6E0E               	movwf	___ftge@ff2+2,c
  2812  00153A                     l2779:
  2813  00153A  FFFF               	dw	65535	; assembler added errata NOP
  2814  00153C  0E80               	movlw	128
  2815  00153E  1A0B               	xorwf	___ftge@ff1+2,f,c
  2816  001540  1A0E               	xorwf	___ftge@ff2+2,f,c
  2817  001542  500C               	movf	___ftge@ff2,w,c
  2818  001544  5C09               	subwf	___ftge@ff1,w,c
  2819  001546  500D               	movf	___ftge@ff2+1,w,c
  2820  001548  580A               	subwfb	___ftge@ff1+1,w,c
  2821  00154A  500E               	movf	___ftge@ff2+2,w,c
  2822  00154C  580B               	subwfb	___ftge@ff1+2,w,c
  2823  00154E  E202               	bc	l2785
  2824  001550  90D8               	bcf	status,0,c
  2825  001552  D001               	goto	l702
  2826  001554                     l2785:
  2827  001554  80D8               	bsf	status,0,c
  2828  001556                     l702:
  2829  001556  FFFF               	dw	65535	; assembler added errata NOP
  2830  001558  0012               	return		;funcret
  2831  00155A  FFFF               	dw	65535	; errata NOP
  2832  00155C                     __end_of___ftge:
  2833                           	opt stack 0
  2834                           tblptru	equ	0xFF8
  2835                           tblptrh	equ	0xFF7
  2836                           tblptrl	equ	0xFF6
  2837                           tablat	equ	0xFF5
  2838                           intcon	equ	0xFF2
  2839                           intcon2	equ	0xFF1
  2840                           postinc0	equ	0xFEE
  2841                           wreg	equ	0xFE8
  2842                           status	equ	0xFD8
  2843                           
  2844 ;; *************** function ___ftdiv *****************
  2845 ;; Defined at:
  2846 ;;		line 54 in file "/opt/microchip/xc8/v1.45/sources/common/ftdiv.c"
  2847 ;; Parameters:    Size  Location     Type
  2848 ;;  f1              3   16[COMRAM] float 
  2849 ;;  f2              3   19[COMRAM] float 
  2850 ;; Auto vars:     Size  Location     Type
  2851 ;;  f3              3   26[COMRAM] float 
  2852 ;;  sign            1   30[COMRAM] unsigned char 
  2853 ;;  exp             1   29[COMRAM] unsigned char 
  2854 ;;  cntr            1   25[COMRAM] unsigned char 
  2855 ;; Return value:  Size  Location     Type
  2856 ;;                  3   16[COMRAM] float 
  2857 ;; Registers used:
  2858 ;;		wreg, status,2, status,0, cstack
  2859 ;; Tracked objects:
  2860 ;;		On entry : 0/0
  2861 ;;		On exit  : 0/0
  2862 ;;		Unchanged: 0/0
  2863 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2864 ;;      Params:         6       0       0       0       0       0       0
  2865 ;;      Locals:         6       0       0       0       0       0       0
  2866 ;;      Temps:          3       0       0       0       0       0       0
  2867 ;;      Totals:        15       0       0       0       0       0       0
  2868 ;;Total ram usage:       15 bytes
  2869 ;; Hardware stack levels used:    1
  2870 ;; Hardware stack levels required when called:    3
  2871 ;; This function calls:
  2872 ;;		___ftpack
  2873 ;; This function is called by:
  2874 ;;		_measure_capacitance
  2875 ;;		_measure_inductance
  2876 ;; This function uses a non-reentrant model
  2877 ;;
  2878                           
  2879                           	psect	text13
  2880  00127E                     __ptext13:
  2881                           	opt stack 0
  2882  00127E                     ___ftdiv:
  2883                           	opt stack 0
  2884  00127E  FFFF               	dw	65535	; assembler added errata NOP
  2885                           
  2886                           ;incstack = 0
  2887  001280  C013  F017         	movff	___ftdiv@f1+2,??___ftdiv
  2888  001284  6A18               	clrf	(??___ftdiv+1)& (0+255),c
  2889  001286  6A19               	clrf	(??___ftdiv+2)& (0+255),c
  2890  001288  3412               	rlcf	___ftdiv@f1+1,w,c
  2891  00128A  3617               	rlcf	??___ftdiv& (0+255),f,c
  2892  00128C  E301               	bnc	u2421
  2893  00128E  8018               	bsf	(??___ftdiv+1)& (0+255),0,c
  2894  001290                     u2421:
  2895  001290  5017               	movf	??___ftdiv,w,c
  2896  001292  6E1E               	movwf	___ftdiv@exp,c
  2897  001294  501E               	movf	___ftdiv@exp,w,c
  2898  001296  E101               	bnz	l2687
  2899  001298  D00C               	goto	u2450
  2900  00129A                     l2687:
  2901  00129A  C016  F017         	movff	___ftdiv@f2+2,??___ftdiv
  2902  00129E  6A18               	clrf	(??___ftdiv+1)& (0+255),c
  2903  0012A0  6A19               	clrf	(??___ftdiv+2)& (0+255),c
  2904  0012A2  3415               	rlcf	___ftdiv@f2+1,w,c
  2905  0012A4  3617               	rlcf	??___ftdiv& (0+255),f,c
  2906  0012A6  E301               	bnc	u2441
  2907  0012A8  8018               	bsf	(??___ftdiv+1)& (0+255),0,c
  2908  0012AA                     u2441:
  2909  0012AA  5017               	movf	??___ftdiv,w,c
  2910  0012AC  6E1F               	movwf	___ftdiv@sign,c
  2911  0012AE  501F               	movf	___ftdiv@sign,w,c
  2912  0012B0  E105               	bnz	l694
  2913  0012B2                     u2450:
  2914  0012B2  FFFF               	dw	65535	; assembler added errata NOP
  2915  0012B4  6A11               	clrf	?___ftdiv,c
  2916  0012B6  6A12               	clrf	?___ftdiv+1,c
  2917  0012B8  6A13               	clrf	?___ftdiv+2,c
  2918  0012BA  D03D               	goto	l693
  2919  0012BC                     l694:
  2920  0012BC  6A1B               	clrf	___ftdiv@f3,c
  2921  0012BE  6A1C               	clrf	___ftdiv@f3+1,c
  2922  0012C0  6A1D               	clrf	___ftdiv@f3+2,c
  2923  0012C2  501F               	movf	___ftdiv@sign,w,c
  2924  0012C4  0F89               	addlw	137
  2925  0012C6  5E1E               	subwf	___ftdiv@exp,f,c
  2926  0012C8  C013  F01F         	movff	___ftdiv@f1+2,___ftdiv@sign
  2927  0012CC  5016               	movf	___ftdiv@f2+2,w,c
  2928  0012CE  1A1F               	xorwf	___ftdiv@sign,f,c
  2929  0012D0  0E80               	movlw	128
  2930  0012D2  161F               	andwf	___ftdiv@sign,f,c
  2931  0012D4  8E12               	bsf	___ftdiv@f1+1,7,c
  2932  0012D6  6A13               	clrf	___ftdiv@f1+2,c
  2933  0012D8  8E15               	bsf	___ftdiv@f2+1,7,c
  2934  0012DA  6A16               	clrf	___ftdiv@f2+2,c
  2935  0012DC  0E18               	movlw	24
  2936  0012DE  6E1A               	movwf	___ftdiv@cntr,c
  2937  0012E0                     l2705:
  2938  0012E0  FFFF               	dw	65535	; assembler added errata NOP
  2939  0012E2  90D8               	bcf	status,0,c
  2940  0012E4  361B               	rlcf	___ftdiv@f3,f,c
  2941  0012E6  361C               	rlcf	___ftdiv@f3+1,f,c
  2942  0012E8  361D               	rlcf	___ftdiv@f3+2,f,c
  2943  0012EA  5014               	movf	___ftdiv@f2,w,c
  2944  0012EC  5C11               	subwf	___ftdiv@f1,w,c
  2945  0012EE  5015               	movf	___ftdiv@f2+1,w,c
  2946  0012F0  5812               	subwfb	___ftdiv@f1+1,w,c
  2947  0012F2  5016               	movf	___ftdiv@f2+2,w,c
  2948  0012F4  5813               	subwfb	___ftdiv@f1+2,w,c
  2949  0012F6  E307               	bnc	l696
  2950  0012F8  5014               	movf	___ftdiv@f2,w,c
  2951  0012FA  5E11               	subwf	___ftdiv@f1,f,c
  2952  0012FC  5015               	movf	___ftdiv@f2+1,w,c
  2953  0012FE  5A12               	subwfb	___ftdiv@f1+1,f,c
  2954  001300  5016               	movf	___ftdiv@f2+2,w,c
  2955  001302  5A13               	subwfb	___ftdiv@f1+2,f,c
  2956  001304  801B               	bsf	___ftdiv@f3,0,c
  2957  001306                     l696:
  2958  001306  90D8               	bcf	status,0,c
  2959  001308  3611               	rlcf	___ftdiv@f1,f,c
  2960  00130A  3612               	rlcf	___ftdiv@f1+1,f,c
  2961  00130C  3613               	rlcf	___ftdiv@f1+2,f,c
  2962  00130E  2E1A               	decfsz	___ftdiv@cntr,f,c
  2963  001310  D7E7               	goto	l2705
  2964  001312  C01B  F009         	movff	___ftdiv@f3,___ftpack@arg
  2965  001316  C01C  F00A         	movff	___ftdiv@f3+1,___ftpack@arg+1
  2966  00131A  C01D  F00B         	movff	___ftdiv@f3+2,___ftpack@arg+2
  2967  00131E  C01E  F00C         	movff	___ftdiv@exp,___ftpack@exp
  2968  001322  C01F  F00D         	movff	___ftdiv@sign,___ftpack@sign
  2969  001326  ECED  F009         	call	___ftpack	;wreg free
  2970  00132A  C009  F011         	movff	?___ftpack,?___ftdiv
  2971  00132E  C00A  F012         	movff	?___ftpack+1,?___ftdiv+1
  2972  001332  C00B  F013         	movff	?___ftpack+2,?___ftdiv+2
  2973  001336                     l693:
  2974  001336  FFFF               	dw	65535	; assembler added errata NOP
  2975  001338  0012               	return		;funcret
  2976  00133A  FFFF               	dw	65535	; errata NOP
  2977  00133C                     __end_of___ftdiv:
  2978                           	opt stack 0
  2979                           tblptru	equ	0xFF8
  2980                           tblptrh	equ	0xFF7
  2981                           tblptrl	equ	0xFF6
  2982                           tablat	equ	0xFF5
  2983                           intcon	equ	0xFF2
  2984                           intcon2	equ	0xFF1
  2985                           postinc0	equ	0xFEE
  2986                           wreg	equ	0xFE8
  2987                           status	equ	0xFD8
  2988                           
  2989 ;; *************** function _calibrate *****************
  2990 ;; Defined at:
  2991 ;;		line 26 in file "/home/roman/Dokumente/Sources/lc-meter/obj/../src/measure.c"
  2992 ;; Parameters:    Size  Location     Type
  2993 ;;		None
  2994 ;; Auto vars:     Size  Location     Type
  2995 ;;  i               1    0        unsigned char 
  2996 ;; Return value:  Size  Location     Type
  2997 ;;                  1    wreg      void 
  2998 ;; Registers used:
  2999 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, cstack
  3000 ;; Tracked objects:
  3001 ;;		On entry : 0/0
  3002 ;;		On exit  : 0/0
  3003 ;;		Unchanged: 0/0
  3004 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3005 ;;      Params:         0       0       0       0       0       0       0
  3006 ;;      Locals:         0       0       0       0       0       0       0
  3007 ;;      Temps:          0       0       0       0       0       0       0
  3008 ;;      Totals:         0       0       0       0       0       0       0
  3009 ;;Total ram usage:        0 bytes
  3010 ;; Hardware stack levels used:    1
  3011 ;; Hardware stack levels required when called:    5
  3012 ;; This function calls:
  3013 ;;		___lwtoft
  3014 ;;		_delay10ms
  3015 ;;		_measure_freq
  3016 ;; This function is called by:
  3017 ;;		_main
  3018 ;; This function uses a non-reentrant model
  3019 ;;
  3020                           
  3021                           	psect	text14
  3022  001472                     __ptext14:
  3023                           	opt stack 0
  3024  001472                     _calibrate:
  3025                           	opt stack 0
  3026  001472  FFFF               	dw	65535	; assembler added errata NOP
  3027                           
  3028                           ;measure.c: 27: uint8_t i;
  3029                           ;measure.c: 42: LATC &= ~(1 << 5);
  3030                           
  3031                           ;incstack = 0
  3032  001474  9A8B               	bcf	3979,5,c	;volatile
  3033                           
  3034                           ;measure.c: 44: F1 = (double)measure_freq();
  3035  001476  EC0A  F007         	call	_measure_freq	;wreg free
  3036  00147A  C03D  F042         	movff	?_measure_freq,___lwtoft@c
  3037  00147E  C03E  F043         	movff	?_measure_freq+1,___lwtoft@c+1
  3038  001482  ECDF  F00B         	call	___lwtoft	;wreg free
  3039  001486  C042  F061         	movff	?___lwtoft,_F1
  3040  00148A  C043  F062         	movff	?___lwtoft+1,_F1+1
  3041  00148E  C044  F063         	movff	?___lwtoft+2,_F1+2
  3042                           
  3043                           ;measure.c: 45: delay10ms(50);
  3044  001492  0E32               	movlw	50
  3045  001494  EC07  F00C         	call	_delay10ms
  3046                           
  3047                           ;measure.c: 47: F1 = (double)measure_freq();
  3048  001498  EC0A  F007         	call	_measure_freq	;wreg free
  3049  00149C  C03D  F042         	movff	?_measure_freq,___lwtoft@c
  3050  0014A0  C03E  F043         	movff	?_measure_freq+1,___lwtoft@c+1
  3051  0014A4  ECDF  F00B         	call	___lwtoft	;wreg free
  3052  0014A8  C042  F061         	movff	?___lwtoft,_F1
  3053  0014AC  C043  F062         	movff	?___lwtoft+1,_F1+1
  3054  0014B0  C044  F063         	movff	?___lwtoft+2,_F1+2
  3055                           
  3056                           ;measure.c: 48: LATC |= (1 << 5);
  3057  0014B4  8A8B               	bsf	3979,5,c	;volatile
  3058                           
  3059                           ;measure.c: 50: F2 = (double)measure_freq();
  3060  0014B6  EC0A  F007         	call	_measure_freq	;wreg free
  3061  0014BA  C03D  F042         	movff	?_measure_freq,___lwtoft@c
  3062  0014BE  C03E  F043         	movff	?_measure_freq+1,___lwtoft@c+1
  3063  0014C2  ECDF  F00B         	call	___lwtoft	;wreg free
  3064  0014C6  C042  F058         	movff	?___lwtoft,_F2
  3065  0014CA  C043  F059         	movff	?___lwtoft+1,_F2+1
  3066  0014CE  C044  F05A         	movff	?___lwtoft+2,_F2+2
  3067                           
  3068                           ;measure.c: 51: delay10ms(50);
  3069  0014D2  0E32               	movlw	50
  3070  0014D4  EC07  F00C         	call	_delay10ms
  3071                           
  3072                           ;measure.c: 53: F2 = (double)measure_freq();
  3073  0014D8  EC0A  F007         	call	_measure_freq	;wreg free
  3074  0014DC  C03D  F042         	movff	?_measure_freq,___lwtoft@c
  3075  0014E0  C03E  F043         	movff	?_measure_freq+1,___lwtoft@c+1
  3076  0014E4  ECDF  F00B         	call	___lwtoft	;wreg free
  3077  0014E8  C042  F058         	movff	?___lwtoft,_F2
  3078  0014EC  C043  F059         	movff	?___lwtoft+1,_F2+1
  3079  0014F0  C044  F05A         	movff	?___lwtoft+2,_F2+2
  3080                           
  3081                           ;measure.c: 54: LATC &= ~(1 << 5);
  3082  0014F4  9A8B               	bcf	3979,5,c	;volatile
  3083  0014F6  0012               	return		;funcret
  3084  0014F8  FFFF               	dw	65535	; errata NOP
  3085  0014FA                     __end_of_calibrate:
  3086                           	opt stack 0
  3087                           tblptru	equ	0xFF8
  3088                           tblptrh	equ	0xFF7
  3089                           tblptrl	equ	0xFF6
  3090                           tablat	equ	0xFF5
  3091                           intcon	equ	0xFF2
  3092                           intcon2	equ	0xFF1
  3093                           postinc0	equ	0xFEE
  3094                           wreg	equ	0xFE8
  3095                           status	equ	0xFD8
  3096                           
  3097 ;; *************** function _measure_freq *****************
  3098 ;; Defined at:
  3099 ;;		line 73 in file "/home/roman/Dokumente/Sources/lc-meter/obj/../src/measure.c"
  3100 ;; Parameters:    Size  Location     Type
  3101 ;;		None
  3102 ;; Auto vars:     Size  Location     Type
  3103 ;;  count           2   63[COMRAM] unsigned int 
  3104 ;; Return value:  Size  Location     Type
  3105 ;;                  2   60[COMRAM] unsigned short 
  3106 ;; Registers used:
  3107 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, cstack
  3108 ;; Tracked objects:
  3109 ;;		On entry : 0/0
  3110 ;;		On exit  : 0/0
  3111 ;;		Unchanged: 0/0
  3112 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3113 ;;      Params:         2       0       0       0       0       0       0
  3114 ;;      Locals:         2       0       0       0       0       0       0
  3115 ;;      Temps:          1       0       0       0       0       0       0
  3116 ;;      Totals:         5       0       0       0       0       0       0
  3117 ;;Total ram usage:        5 bytes
  3118 ;; Hardware stack levels used:    1
  3119 ;; Hardware stack levels required when called:    4
  3120 ;; This function calls:
  3121 ;;		_buffer_init
  3122 ;;		_buffer_puts
  3123 ;;		_format_number
  3124 ;;		_print_buffer
  3125 ;;		_timer0_read_ps
  3126 ;; This function is called by:
  3127 ;;		_calibrate
  3128 ;;		_measure_capacitance
  3129 ;;		_measure_inductance
  3130 ;; This function uses a non-reentrant model
  3131 ;;
  3132                           
  3133                           	psect	text15
  3134  000E14                     __ptext15:
  3135                           	opt stack 0
  3136  000E14                     _measure_freq:
  3137                           	opt stack 0
  3138  000E14  FFFF               	dw	65535	; assembler added errata NOP
  3139                           
  3140                           ;measure.c: 74: uint16_t count;
  3141                           ;measure.c: 76: INTCONbits.TMR0IF = 0;
  3142                           
  3143                           ;incstack = 0
  3144  000E16  94F2               	bcf	intcon,2,c	;volatile
  3145                           
  3146                           ;measure.c: 80: TRISA &= ~0b00010000;
  3147  000E18  9892               	bcf	3986,4,c	;volatile
  3148                           
  3149                           ;measure.c: 82: _delay((unsigned long)((20)*(20000000/4000.0)));
  3150  000E1A  0E62               	movlw	98
  3151  000E1C  6E3F               	movwf	??_measure_freq& (0+255),c
  3152  000E1E  0E76               	movlw	118
  3153  000E20                     u2787:
  3154  000E20  FFFF               	dw	65535	; errata NOP
  3155  000E22  2EE8               	decfsz	wreg,f,c
  3156  000E24  D7FD               	bra	u2787
  3157  000E26  2E3F               	decfsz	??_measure_freq& (0+255),f,c
  3158  000E28  D7FB               	bra	u2787
  3159  000E2A  D000               	nop2	
  3160                           
  3161                           ;measure.c: 85: TMR0 = 0x00;
  3162  000E2C  6AD6               	clrf	4054,c	;volatile
  3163  000E2E  6AD7               	clrf	4055,c	;volatile
  3164                           
  3165                           ;measure.c: 90: _delay((unsigned long)((10)*(20000000/4000.0)));
  3166  000E30  0E31               	movlw	49
  3167  000E32  6E3F               	movwf	??_measure_freq& (0+255),c
  3168  000E34  0EBB               	movlw	187
  3169  000E36                     u2797:
  3170  000E36  FFFF               	dw	65535	; errata NOP
  3171  000E38  2EE8               	decfsz	wreg,f,c
  3172  000E3A  D7FD               	bra	u2797
  3173  000E3C  2E3F               	decfsz	??_measure_freq& (0+255),f,c
  3174  000E3E  D7FB               	bra	u2797
  3175                           
  3176                           ;measure.c: 91: _delay((unsigned long)((10)*(20000000/4000.0)));
  3177  000E40  0E31               	movlw	49
  3178  000E42  6E3F               	movwf	??_measure_freq& (0+255),c
  3179  000E44  0EBB               	movlw	187
  3180  000E46                     u2807:
  3181  000E46  FFFF               	dw	65535	; errata NOP
  3182  000E48  2EE8               	decfsz	wreg,f,c
  3183  000E4A  D7FD               	bra	u2807
  3184  000E4C  2E3F               	decfsz	??_measure_freq& (0+255),f,c
  3185  000E4E  D7FB               	bra	u2807
  3186                           
  3187                           ;measure.c: 92: _delay((unsigned long)((10)*(20000000/4000.0)));
  3188  000E50  0E31               	movlw	49
  3189  000E52  6E3F               	movwf	??_measure_freq& (0+255),c
  3190  000E54  0EBB               	movlw	187
  3191  000E56                     u2817:
  3192  000E56  FFFF               	dw	65535	; errata NOP
  3193  000E58  2EE8               	decfsz	wreg,f,c
  3194  000E5A  D7FD               	bra	u2817
  3195  000E5C  2E3F               	decfsz	??_measure_freq& (0+255),f,c
  3196  000E5E  D7FB               	bra	u2817
  3197                           
  3198                           ;measure.c: 93: _delay((unsigned long)((10)*(20000000/4000.0)));
  3199  000E60  0E31               	movlw	49
  3200  000E62  6E3F               	movwf	??_measure_freq& (0+255),c
  3201  000E64  0EBB               	movlw	187
  3202  000E66                     u2827:
  3203  000E66  FFFF               	dw	65535	; errata NOP
  3204  000E68  2EE8               	decfsz	wreg,f,c
  3205  000E6A  D7FD               	bra	u2827
  3206  000E6C  2E3F               	decfsz	??_measure_freq& (0+255),f,c
  3207  000E6E  D7FB               	bra	u2827
  3208                           
  3209                           ;measure.c: 94: _delay((unsigned long)((10)*(20000000/4000.0)));
  3210  000E70  0E31               	movlw	49
  3211  000E72  6E3F               	movwf	??_measure_freq& (0+255),c
  3212  000E74  0EBB               	movlw	187
  3213  000E76                     u2837:
  3214  000E76  FFFF               	dw	65535	; errata NOP
  3215  000E78  2EE8               	decfsz	wreg,f,c
  3216  000E7A  D7FD               	bra	u2837
  3217  000E7C  2E3F               	decfsz	??_measure_freq& (0+255),f,c
  3218  000E7E  D7FB               	bra	u2837
  3219                           
  3220                           ;measure.c: 95: _delay((unsigned long)((10)*(20000000/4000.0)));
  3221  000E80  0E31               	movlw	49
  3222  000E82  6E3F               	movwf	??_measure_freq& (0+255),c
  3223  000E84  0EBB               	movlw	187
  3224  000E86                     u2847:
  3225  000E86  FFFF               	dw	65535	; errata NOP
  3226  000E88  2EE8               	decfsz	wreg,f,c
  3227  000E8A  D7FD               	bra	u2847
  3228  000E8C  2E3F               	decfsz	??_measure_freq& (0+255),f,c
  3229  000E8E  D7FB               	bra	u2847
  3230                           
  3231                           ;measure.c: 96: _delay((unsigned long)((10)*(20000000/4000.0)));
  3232  000E90  0E31               	movlw	49
  3233  000E92  6E3F               	movwf	??_measure_freq& (0+255),c
  3234  000E94  0EBB               	movlw	187
  3235  000E96                     u2857:
  3236  000E96  FFFF               	dw	65535	; errata NOP
  3237  000E98  2EE8               	decfsz	wreg,f,c
  3238  000E9A  D7FD               	bra	u2857
  3239  000E9C  2E3F               	decfsz	??_measure_freq& (0+255),f,c
  3240  000E9E  D7FB               	bra	u2857
  3241                           
  3242                           ;measure.c: 97: _delay((unsigned long)((10)*(20000000/4000.0)));
  3243  000EA0  0E31               	movlw	49
  3244  000EA2  6E3F               	movwf	??_measure_freq& (0+255),c
  3245  000EA4  0EBB               	movlw	187
  3246  000EA6                     u2867:
  3247  000EA6  FFFF               	dw	65535	; errata NOP
  3248  000EA8  2EE8               	decfsz	wreg,f,c
  3249  000EAA  D7FD               	bra	u2867
  3250  000EAC  2E3F               	decfsz	??_measure_freq& (0+255),f,c
  3251  000EAE  D7FB               	bra	u2867
  3252                           
  3253                           ;measure.c: 98: _delay((unsigned long)((10)*(20000000/4000.0)));
  3254  000EB0  0E31               	movlw	49
  3255  000EB2  6E3F               	movwf	??_measure_freq& (0+255),c
  3256  000EB4  0EBB               	movlw	187
  3257  000EB6                     u2877:
  3258  000EB6  FFFF               	dw	65535	; errata NOP
  3259  000EB8  2EE8               	decfsz	wreg,f,c
  3260  000EBA  D7FD               	bra	u2877
  3261  000EBC  2E3F               	decfsz	??_measure_freq& (0+255),f,c
  3262  000EBE  D7FB               	bra	u2877
  3263                           
  3264                           ;measure.c: 99: _delay((unsigned long)((10)*(20000000/4000.0)));
  3265  000EC0  0E31               	movlw	49
  3266  000EC2  6E3F               	movwf	??_measure_freq& (0+255),c
  3267  000EC4  0EBB               	movlw	187
  3268  000EC6                     u2887:
  3269  000EC6  FFFF               	dw	65535	; errata NOP
  3270  000EC8  2EE8               	decfsz	wreg,f,c
  3271  000ECA  D7FD               	bra	u2887
  3272  000ECC  2E3F               	decfsz	??_measure_freq& (0+255),f,c
  3273  000ECE  D7FB               	bra	u2887
  3274                           
  3275                           ;measure.c: 104: TRISA |= 0b00010000;
  3276  000ED0  8892               	bsf	3986,4,c	;volatile
  3277                           
  3278                           ;measure.c: 107: count = timer0_read_ps();
  3279  000ED2  EC02  F00B         	call	_timer0_read_ps	;wreg free
  3280  000ED6  C009  F040         	movff	?_timer0_read_ps,measure_freq@count
  3281  000EDA  C00A  F041         	movff	?_timer0_read_ps+1,measure_freq@count+1
  3282                           
  3283                           ;measure.c: 112: buffer_init();
  3284  000EDE  ECF3  F00B         	call	_buffer_init	;wreg free
  3285                           
  3286                           ; BSR set to: 0
  3287                           ;measure.c: 113: buffer_puts("Freq=");
  3288  000EE2  0E3A               	movlw	low STR_1
  3289  000EE4  6E0C               	movwf	buffer_puts@x,c
  3290  000EE6  ECC8  F00B         	call	_buffer_puts	;wreg free
  3291                           
  3292                           ; BSR set to: 0
  3293                           ;measure.c: 114: format_number(&buffer_putch,count, 10, 5);
  3294  000EEA  0E52               	movlw	low _buffer_putch
  3295  000EEC  6E10               	movwf	format_number@fn,c
  3296  000EEE  0E16               	movlw	high _buffer_putch
  3297  000EF0  6E11               	movwf	format_number@fn+1,c
  3298  000EF2  C040  F012         	movff	measure_freq@count,format_number@n
  3299  000EF6  C041  F013         	movff	measure_freq@count+1,format_number@n+1
  3300  000EFA  0E0A               	movlw	10
  3301  000EFC  6E14               	movwf	format_number@base,c
  3302  000EFE  0E05               	movlw	5
  3303  000F00  6E15               	movwf	format_number@pad,c
  3304  000F02  EC72  F008         	call	_format_number	;wreg free
  3305                           
  3306                           ;measure.c: 115: print_buffer();
  3307  000F06  EC04  F00C         	call	_print_buffer	;wreg free
  3308                           
  3309                           ;measure.c: 117: return count;
  3310  000F0A  C040  F03D         	movff	measure_freq@count,?_measure_freq
  3311  000F0E  C041  F03E         	movff	measure_freq@count+1,?_measure_freq+1
  3312  000F12  0012               	return		;funcret
  3313  000F14  FFFF               	dw	65535	; errata NOP
  3314  000F16                     __end_of_measure_freq:
  3315                           	opt stack 0
  3316                           tblptru	equ	0xFF8
  3317                           tblptrh	equ	0xFF7
  3318                           tblptrl	equ	0xFF6
  3319                           tablat	equ	0xFF5
  3320                           intcon	equ	0xFF2
  3321                           intcon2	equ	0xFF1
  3322                           postinc0	equ	0xFEE
  3323                           wreg	equ	0xFE8
  3324                           status	equ	0xFD8
  3325                           
  3326 ;; *************** function _timer0_read_ps *****************
  3327 ;; Defined at:
  3328 ;;		line 79 in file "/home/roman/Dokumente/Sources/lc-meter/obj/../lib/timer.c"
  3329 ;; Parameters:    Size  Location     Type
  3330 ;;		None
  3331 ;; Auto vars:     Size  Location     Type
  3332 ;;  count           2   13[COMRAM] unsigned int 
  3333 ;;  prev            1   12[COMRAM] unsigned char 
  3334 ;; Return value:  Size  Location     Type
  3335 ;;                  2    8[COMRAM] unsigned short 
  3336 ;; Registers used:
  3337 ;;		wreg, status,2, status,0
  3338 ;; Tracked objects:
  3339 ;;		On entry : 0/0
  3340 ;;		On exit  : 0/0
  3341 ;;		Unchanged: 0/0
  3342 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3343 ;;      Params:         2       0       0       0       0       0       0
  3344 ;;      Locals:         3       0       0       0       0       0       0
  3345 ;;      Temps:          2       0       0       0       0       0       0
  3346 ;;      Totals:         7       0       0       0       0       0       0
  3347 ;;Total ram usage:        7 bytes
  3348 ;; Hardware stack levels used:    1
  3349 ;; Hardware stack levels required when called:    2
  3350 ;; This function calls:
  3351 ;;		Nothing
  3352 ;; This function is called by:
  3353 ;;		_measure_freq
  3354 ;; This function uses a non-reentrant model
  3355 ;;
  3356                           
  3357                           	psect	text16
  3358  001604                     __ptext16:
  3359                           	opt stack 0
  3360  001604                     _timer0_read_ps:
  3361                           	opt stack 0
  3362  001604  FFFF               	dw	65535	; assembler added errata NOP
  3363                           
  3364                           ;timer.c: 80: uint8_t prev = TMR0;
  3365                           
  3366                           ;incstack = 0
  3367  001606  CFD6 F00D          	movff	4054,timer0_read_ps@prev	;volatile
  3368                           
  3369                           ;timer.c: 81: uint16_t count = 0;
  3370  00160A  6A0E               	clrf	timer0_read_ps@count,c
  3371  00160C  6A0F               	clrf	timer0_read_ps@count+1,c
  3372                           
  3373                           ;timer.c: 82: T0CONbits.T0CS = 1;
  3374  00160E  8AD5               	bsf	4053,5,c	;volatile
  3375  001610                     l286:
  3376                           
  3377                           ;timer.c: 87: T0CONbits.T0SE = 1;
  3378  001610  88D5               	bsf	4053,4,c	;volatile
  3379                           
  3380                           ;timer.c: 89: __nop();
  3381  001612  F000               	nop	
  3382                           
  3383                           ;timer.c: 90: __nop();
  3384  001614  F000               	nop	
  3385                           
  3386                           ;timer.c: 91: T0CONbits.T0SE = 0;
  3387  001616  98D5               	bcf	4053,4,c	;volatile
  3388                           
  3389                           ;timer.c: 94: __nop();
  3390  001618  F000               	nop	
  3391                           
  3392                           ;timer.c: 95: __nop();
  3393  00161A  F000               	nop	
  3394                           
  3395                           ;timer.c: 97: ++count;
  3396  00161C  4A0E               	infsnz	timer0_read_ps@count,f,c
  3397  00161E  2A0F               	incf	timer0_read_ps@count+1,f,c
  3398                           
  3399                           ;timer.c: 100: } while(prev == TMR0 && count <= 255);
  3400  001620  500D               	movf	timer0_read_ps@prev,w,c
  3401  001622  18D6               	xorwf	4054,w,c	;volatile
  3402  001624  10D7               	iorwf	4055,w,c	;volatile
  3403  001626  E102               	bnz	u2130
  3404  001628  040F               	decf	timer0_read_ps@count+1,w,c
  3405  00162A  E3F2               	bnc	l286
  3406  00162C                     u2130:
  3407                           
  3408                           ;timer.c: 102: count = ((prev << 8) + (256 - count));
  3409  00162C  500D               	movf	timer0_read_ps@prev,w,c
  3410  00162E  6E0C               	movwf	(??_timer0_read_ps+1)& (0+255),c
  3411  001630  6A0B               	clrf	??_timer0_read_ps& (0+255),c
  3412  001632  500E               	movf	timer0_read_ps@count,w,c
  3413  001634  5E0B               	subwf	??_timer0_read_ps,f,c
  3414  001636  500F               	movf	timer0_read_ps@count+1,w,c
  3415  001638  5A0C               	subwfb	??_timer0_read_ps+1,f,c
  3416  00163A  0E00               	movlw	0
  3417  00163C  240B               	addwf	??_timer0_read_ps,w,c
  3418  00163E  6E0E               	movwf	timer0_read_ps@count,c
  3419  001640  0E01               	movlw	1
  3420  001642  200C               	addwfc	??_timer0_read_ps+1,w,c
  3421  001644  6E0F               	movwf	timer0_read_ps@count+1,c
  3422                           
  3423                           ;timer.c: 103: return count;
  3424  001646  C00E  F009         	movff	timer0_read_ps@count,?_timer0_read_ps
  3425  00164A  C00F  F00A         	movff	timer0_read_ps@count+1,?_timer0_read_ps+1
  3426  00164E  0012               	return		;funcret
  3427  001650  FFFF               	dw	65535	; errata NOP
  3428  001652                     __end_of_timer0_read_ps:
  3429                           	opt stack 0
  3430                           tblptru	equ	0xFF8
  3431                           tblptrh	equ	0xFF7
  3432                           tblptrl	equ	0xFF6
  3433                           tablat	equ	0xFF5
  3434                           intcon	equ	0xFF2
  3435                           intcon2	equ	0xFF1
  3436                           postinc0	equ	0xFEE
  3437                           wreg	equ	0xFE8
  3438                           status	equ	0xFD8
  3439                           
  3440 ;; *************** function _print_buffer *****************
  3441 ;; Defined at:
  3442 ;;		line 510 in file "/home/roman/Dokumente/Sources/lc-meter/obj/../src/print.c"
  3443 ;; Parameters:    Size  Location     Type
  3444 ;;		None
  3445 ;; Auto vars:     Size  Location     Type
  3446 ;;		None
  3447 ;; Return value:  Size  Location     Type
  3448 ;;                  1    wreg      void 
  3449 ;; Registers used:
  3450 ;;		None
  3451 ;; Tracked objects:
  3452 ;;		On entry : 0/0
  3453 ;;		On exit  : 0/0
  3454 ;;		Unchanged: 0/0
  3455 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3456 ;;      Params:         0       0       0       0       0       0       0
  3457 ;;      Locals:         0       0       0       0       0       0       0
  3458 ;;      Temps:          0       0       0       0       0       0       0
  3459 ;;      Totals:         0       0       0       0       0       0       0
  3460 ;;Total ram usage:        0 bytes
  3461 ;; Hardware stack levels used:    1
  3462 ;; Hardware stack levels required when called:    2
  3463 ;; This function calls:
  3464 ;;		Nothing
  3465 ;; This function is called by:
  3466 ;;		_measure_freq
  3467 ;; This function uses a non-reentrant model
  3468 ;;
  3469                           
  3470                           	psect	text17
  3471  001808                     __ptext17:
  3472                           	opt stack 0
  3473  001808                     _print_buffer:
  3474                           	opt stack 0
  3475  001808  FFFF               	dw	65535	; assembler added errata NOP
  3476                           
  3477                           ;incstack = 0
  3478  00180A  0012               	return		;funcret
  3479  00180C  FFFF               	dw	65535	; errata NOP
  3480  00180E                     __end_of_print_buffer:
  3481                           	opt stack 0
  3482                           tblptru	equ	0xFF8
  3483                           tblptrh	equ	0xFF7
  3484                           tblptrl	equ	0xFF6
  3485                           tablat	equ	0xFF5
  3486                           intcon	equ	0xFF2
  3487                           intcon2	equ	0xFF1
  3488                           postinc0	equ	0xFEE
  3489                           wreg	equ	0xFE8
  3490                           status	equ	0xFD8
  3491                           
  3492 ;; *************** function _format_number *****************
  3493 ;; Defined at:
  3494 ;;		line 19 in file "/home/roman/Dokumente/Sources/lc-meter/obj/../lib/format.c"
  3495 ;; Parameters:    Size  Location     Type
  3496 ;;  fn              2   15[COMRAM] PTR FTN(unsigned char ,)
  3497 ;;		 -> buffer_putch(1), 
  3498 ;;  n               2   17[COMRAM] unsigned int 
  3499 ;;  base            1   19[COMRAM] unsigned char 
  3500 ;;  pad             1   20[COMRAM] char 
  3501 ;; Auto vars:     Size  Location     Type
  3502 ;;  buf            32   23[COMRAM] unsigned char [32]
  3503 ;;  i               1   59[COMRAM] char 
  3504 ;;  di              1   58[COMRAM] unsigned char 
  3505 ;;  padchar         1   57[COMRAM] unsigned char 
  3506 ;; Return value:  Size  Location     Type
  3507 ;;                  1    wreg      void 
  3508 ;; Registers used:
  3509 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
  3510 ;; Tracked objects:
  3511 ;;		On entry : 3F/0
  3512 ;;		On exit  : 0/0
  3513 ;;		Unchanged: 0/0
  3514 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3515 ;;      Params:         6       0       0       0       0       0       0
  3516 ;;      Locals:        37       0       0       0       0       0       0
  3517 ;;      Temps:          2       0       0       0       0       0       0
  3518 ;;      Totals:        45       0       0       0       0       0       0
  3519 ;;Total ram usage:       45 bytes
  3520 ;; Hardware stack levels used:    1
  3521 ;; Hardware stack levels required when called:    3
  3522 ;; This function calls:
  3523 ;;		___lwdiv
  3524 ;;		___lwmod
  3525 ;;		_buffer_putch
  3526 ;; This function is called by:
  3527 ;;		_measure_freq
  3528 ;; This function uses a non-reentrant model
  3529 ;;
  3530                           
  3531                           	psect	text18
  3532  0010E4                     __ptext18:
  3533                           	opt stack 0
  3534  0010E4                     _format_number:
  3535                           	opt stack 0
  3536  0010E4  FFFF               	dw	65535	; assembler added errata NOP
  3537                           
  3538                           ; BSR set to: 0
  3539                           ;format.c: 20: char buf[8 * sizeof(long)];
  3540                           ;format.c: 21: uint8_t di;
  3541                           ;format.c: 22: int8_t i = 0;
  3542                           
  3543                           ;incstack = 0
  3544  0010E6  6A3C               	clrf	format_number@i,c
  3545                           
  3546                           ; BSR set to: 0
  3547                           ;format.c: 23: char padchar = ' ';
  3548  0010E8  0E20               	movlw	32
  3549  0010EA  6E3A               	movwf	format_number@padchar,c
  3550                           
  3551                           ; BSR set to: 0
  3552                           ;format.c: 25: if(pad < 0) {
  3553  0010EC  AE15               	btfss	format_number@pad,7,c
  3554  0010EE  D003               	goto	l2545
  3555                           
  3556                           ; BSR set to: 0
  3557                           ;format.c: 26: pad = -pad;
  3558  0010F0  6C15               	negf	format_number@pad,c
  3559                           
  3560                           ; BSR set to: 0
  3561                           ;format.c: 27: padchar = '0';
  3562  0010F2  0E30               	movlw	48
  3563  0010F4  6E3A               	movwf	format_number@padchar,c
  3564  0010F6                     l2545:
  3565  0010F6  FFFF               	dw	65535	; assembler added errata NOP
  3566                           
  3567                           ;format.c: 39: di = n % base;
  3568  0010F8  C012  F009         	movff	format_number@n,___lwmod@dividend
  3569  0010FC  C013  F00A         	movff	format_number@n+1,___lwmod@dividend+1
  3570  001100  C014  F00B         	movff	format_number@base,___lwmod@divisor
  3571  001104  6A0C               	clrf	___lwmod@divisor+1,c
  3572  001106  EC50  F00B         	call	___lwmod	;wreg free
  3573  00110A  5009               	movf	?___lwmod,w,c
  3574  00110C  6E3B               	movwf	format_number@di,c
  3575                           
  3576                           ;format.c: 40: buf[i++] = (di < 10 ? (uint8_t)'0' + di : (uint8_t)'A' + di - 10);
  3577  00110E  0E09               	movlw	9
  3578  001110  643B               	cpfsgt	format_number@di,c
  3579  001112  D002               	goto	l2551
  3580  001114  0E37               	movlw	55
  3581  001116  D002               	goto	L3
  3582  001118                     l2551:
  3583  001118  FFFF               	dw	65535	; assembler added errata NOP
  3584  00111A  0E30               	movlw	48
  3585  00111C                     L3:
  3586  00111C  FFFF               	dw	65535	; assembler added errata NOP
  3587  00111E  243B               	addwf	format_number@di,w,c
  3588  001120  6E38               	movwf	_format_number$384,c
  3589  001122  6A39               	clrf	_format_number$384+1,c
  3590  001124  0E00               	movlw	0
  3591  001126  2239               	addwfc	_format_number$384+1,f,c
  3592  001128  503C               	movf	format_number@i,w,c
  3593  00112A  0F18               	addlw	low format_number@buf
  3594  00112C  6ED9               	movwf	fsr2l,c
  3595  00112E  6ADA               	clrf	fsr2h,c
  3596  001130  C038  FFDF         	movff	_format_number$384,indf2
  3597  001134  2A3C               	incf	format_number@i,f,c
  3598                           
  3599                           ;format.c: 42: n /= base;
  3600  001136  C012  F009         	movff	format_number@n,___lwdiv@dividend
  3601  00113A  C013  F00A         	movff	format_number@n+1,___lwdiv@dividend+1
  3602  00113E  C014  F00B         	movff	format_number@base,___lwdiv@divisor
  3603  001142  6A0C               	clrf	___lwdiv@divisor+1,c
  3604  001144  ECAE  F00A         	call	___lwdiv	;wreg free
  3605  001148  C009  F012         	movff	?___lwdiv,format_number@n
  3606  00114C  C00A  F013         	movff	?___lwdiv+1,format_number@n+1
  3607                           
  3608                           ;format.c: 43: } while(n > 0);
  3609  001150  5012               	movf	format_number@n,w,c
  3610  001152  1013               	iorwf	format_number@n+1,w,c
  3611  001154  E004               	bz	l2563
  3612  001156  D7CF               	goto	l2545
  3613  001158                     l2561:
  3614  001158  503A               	movf	format_number@padchar,w,c
  3615  00115A  EC29  F00B         	call	_buffer_putch
  3616  00115E                     l2563:
  3617  00115E  0615               	decf	format_number@pad,f,c
  3618  001160  2815               	incf	format_number@pad,w,c
  3619  001162  6E16               	movwf	??_format_number& (0+255),c
  3620  001164  503C               	movf	format_number@i,w,c
  3621  001166  0A80               	xorlw	128
  3622  001168  6E17               	movwf	(??_format_number+1)& (0+255),c
  3623  00116A  5016               	movf	??_format_number,w,c
  3624  00116C  0A80               	xorlw	128
  3625  00116E  5C17               	subwf	(??_format_number+1)& (0+255),w,c
  3626  001170  E3F3               	bnc	l2561
  3627  001172                     u2180:
  3628  001172  FFFF               	dw	65535	; assembler added errata NOP
  3629                           
  3630                           ;format.c: 47: for(; i > 0; i--) {
  3631  001174  503C               	movf	format_number@i,w,c
  3632  001176  0A80               	xorlw	128
  3633  001178  0F7F               	addlw	-129
  3634  00117A  E319               	bnc	l201
  3635                           
  3636                           ;format.c: 48: fn((char)buf[(int16_t)i - 1]);
  3637  00117C  D801               	call	u2208
  3638  00117E  D014               	goto	u2209
  3639  001180                     u2208:
  3640  001180  FFFF               	dw	65535	; assembler added errata NOP
  3641  001182  0005               	push	
  3642  001184  6EFA               	movwf	pclath,c
  3643  001186  5010               	movf	format_number@fn,w,c
  3644  001188  6EFD               	movwf	tosl,c
  3645  00118A  5011               	movf	format_number@fn+1,w,c
  3646  00118C  6EFE               	movwf	tosh,c
  3647  00118E  50F8               	movf	tblptru,w,c
  3648  001190  6EFF               	movwf	tosu,c
  3649  001192  50FA               	movf	pclath,w,c
  3650  001194  C03C  F016         	movff	format_number@i,??_format_number
  3651  001198  0616               	decf	??_format_number,f,c
  3652  00119A  5016               	movf	??_format_number,w,c
  3653  00119C  0F18               	addlw	low format_number@buf
  3654  00119E  6ED9               	movwf	fsr2l,c
  3655  0011A0  6ADA               	clrf	fsr2h,c
  3656  0011A2  50DF               	movf	indf2,w,c
  3657  0011A4  0012               	return		;indir
  3658  0011A6  FFFF               	dw	65535	; errata NOP
  3659  0011A8                     u2209:
  3660  0011A8  FFFF               	dw	65535	; assembler added errata NOP
  3661                           
  3662                           ; BSR set to: 0
  3663  0011AA  063C               	decf	format_number@i,f,c
  3664  0011AC  D7E2               	goto	u2180
  3665  0011AE                     l201:
  3666  0011AE  0012               	return		;funcret
  3667  0011B0  FFFF               	dw	65535	; errata NOP
  3668  0011B2                     __end_of_format_number:
  3669                           	opt stack 0
  3670                           tosu	equ	0xFFF
  3671                           tosh	equ	0xFFE
  3672                           tosl	equ	0xFFD
  3673                           pclath	equ	0xFFA
  3674                           tblptru	equ	0xFF8
  3675                           tblptrh	equ	0xFF7
  3676                           tblptrl	equ	0xFF6
  3677                           tablat	equ	0xFF5
  3678                           intcon	equ	0xFF2
  3679                           intcon2	equ	0xFF1
  3680                           postinc0	equ	0xFEE
  3681                           wreg	equ	0xFE8
  3682                           indf2	equ	0xFDF
  3683                           fsr2h	equ	0xFDA
  3684                           fsr2l	equ	0xFD9
  3685                           status	equ	0xFD8
  3686                           
  3687 ;; *************** function ___lwmod *****************
  3688 ;; Defined at:
  3689 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/lwmod.c"
  3690 ;; Parameters:    Size  Location     Type
  3691 ;;  dividend        2    8[COMRAM] unsigned int 
  3692 ;;  divisor         2   10[COMRAM] unsigned int 
  3693 ;; Auto vars:     Size  Location     Type
  3694 ;;  counter         1   12[COMRAM] unsigned char 
  3695 ;; Return value:  Size  Location     Type
  3696 ;;                  2    8[COMRAM] unsigned int 
  3697 ;; Registers used:
  3698 ;;		wreg, status,2, status,0
  3699 ;; Tracked objects:
  3700 ;;		On entry : 0/0
  3701 ;;		On exit  : 0/0
  3702 ;;		Unchanged: 0/0
  3703 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3704 ;;      Params:         4       0       0       0       0       0       0
  3705 ;;      Locals:         1       0       0       0       0       0       0
  3706 ;;      Temps:          0       0       0       0       0       0       0
  3707 ;;      Totals:         5       0       0       0       0       0       0
  3708 ;;Total ram usage:        5 bytes
  3709 ;; Hardware stack levels used:    1
  3710 ;; Hardware stack levels required when called:    2
  3711 ;; This function calls:
  3712 ;;		Nothing
  3713 ;; This function is called by:
  3714 ;;		_format_number
  3715 ;; This function uses a non-reentrant model
  3716 ;;
  3717                           
  3718                           	psect	text19
  3719  0016A0                     __ptext19:
  3720                           	opt stack 0
  3721  0016A0                     ___lwmod:
  3722                           	opt stack 0
  3723  0016A0  FFFF               	dw	65535	; assembler added errata NOP
  3724                           
  3725                           ;incstack = 0
  3726  0016A2  500B               	movf	___lwmod@divisor,w,c
  3727  0016A4  100C               	iorwf	___lwmod@divisor+1,w,c
  3728  0016A6  E01A               	bz	l842
  3729  0016A8  0E01               	movlw	1
  3730  0016AA  6E0D               	movwf	___lwmod@counter,c
  3731  0016AC  D005               	goto	l2501
  3732  0016AE                     l2499:
  3733  0016AE  FFFF               	dw	65535	; assembler added errata NOP
  3734  0016B0  90D8               	bcf	status,0,c
  3735  0016B2  360B               	rlcf	___lwmod@divisor,f,c
  3736  0016B4  360C               	rlcf	___lwmod@divisor+1,f,c
  3737  0016B6  2A0D               	incf	___lwmod@counter,f,c
  3738  0016B8                     l2501:
  3739  0016B8  FFFF               	dw	65535	; assembler added errata NOP
  3740  0016BA  AE0C               	btfss	___lwmod@divisor+1,7,c
  3741  0016BC  D7F8               	goto	l2499
  3742  0016BE                     u2100:
  3743  0016BE  FFFF               	dw	65535	; assembler added errata NOP
  3744  0016C0  500B               	movf	___lwmod@divisor,w,c
  3745  0016C2  5C09               	subwf	___lwmod@dividend,w,c
  3746  0016C4  500C               	movf	___lwmod@divisor+1,w,c
  3747  0016C6  580A               	subwfb	___lwmod@dividend+1,w,c
  3748  0016C8  E304               	bnc	l2507
  3749  0016CA  500B               	movf	___lwmod@divisor,w,c
  3750  0016CC  5E09               	subwf	___lwmod@dividend,f,c
  3751  0016CE  500C               	movf	___lwmod@divisor+1,w,c
  3752  0016D0  5A0A               	subwfb	___lwmod@dividend+1,f,c
  3753  0016D2                     l2507:
  3754  0016D2  90D8               	bcf	status,0,c
  3755  0016D4  320C               	rrcf	___lwmod@divisor+1,f,c
  3756  0016D6  320B               	rrcf	___lwmod@divisor,f,c
  3757  0016D8  2E0D               	decfsz	___lwmod@counter,f,c
  3758  0016DA  D7F1               	goto	u2100
  3759  0016DC                     l842:
  3760  0016DC  C009  F009         	movff	___lwmod@dividend,?___lwmod
  3761  0016E0  C00A  F00A         	movff	___lwmod@dividend+1,?___lwmod+1
  3762  0016E4  0012               	return		;funcret
  3763  0016E6  FFFF               	dw	65535	; errata NOP
  3764  0016E8                     __end_of___lwmod:
  3765                           	opt stack 0
  3766                           tosu	equ	0xFFF
  3767                           tosh	equ	0xFFE
  3768                           tosl	equ	0xFFD
  3769                           pclath	equ	0xFFA
  3770                           tblptru	equ	0xFF8
  3771                           tblptrh	equ	0xFF7
  3772                           tblptrl	equ	0xFF6
  3773                           tablat	equ	0xFF5
  3774                           intcon	equ	0xFF2
  3775                           intcon2	equ	0xFF1
  3776                           postinc0	equ	0xFEE
  3777                           wreg	equ	0xFE8
  3778                           indf2	equ	0xFDF
  3779                           fsr2h	equ	0xFDA
  3780                           fsr2l	equ	0xFD9
  3781                           status	equ	0xFD8
  3782                           
  3783 ;; *************** function ___lwdiv *****************
  3784 ;; Defined at:
  3785 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/lwdiv.c"
  3786 ;; Parameters:    Size  Location     Type
  3787 ;;  dividend        2    8[COMRAM] unsigned int 
  3788 ;;  divisor         2   10[COMRAM] unsigned int 
  3789 ;; Auto vars:     Size  Location     Type
  3790 ;;  quotient        2   13[COMRAM] unsigned int 
  3791 ;;  counter         1   12[COMRAM] unsigned char 
  3792 ;; Return value:  Size  Location     Type
  3793 ;;                  2    8[COMRAM] unsigned int 
  3794 ;; Registers used:
  3795 ;;		wreg, status,2, status,0
  3796 ;; Tracked objects:
  3797 ;;		On entry : 0/0
  3798 ;;		On exit  : 0/0
  3799 ;;		Unchanged: 0/0
  3800 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3801 ;;      Params:         4       0       0       0       0       0       0
  3802 ;;      Locals:         3       0       0       0       0       0       0
  3803 ;;      Temps:          0       0       0       0       0       0       0
  3804 ;;      Totals:         7       0       0       0       0       0       0
  3805 ;;Total ram usage:        7 bytes
  3806 ;; Hardware stack levels used:    1
  3807 ;; Hardware stack levels required when called:    2
  3808 ;; This function calls:
  3809 ;;		Nothing
  3810 ;; This function is called by:
  3811 ;;		_format_number
  3812 ;; This function uses a non-reentrant model
  3813 ;;
  3814                           
  3815                           	psect	text20
  3816  00155C                     __ptext20:
  3817                           	opt stack 0
  3818  00155C                     ___lwdiv:
  3819                           	opt stack 0
  3820  00155C  FFFF               	dw	65535	; assembler added errata NOP
  3821                           
  3822                           ;incstack = 0
  3823  00155E  6A0E               	clrf	___lwdiv@quotient,c
  3824  001560  6A0F               	clrf	___lwdiv@quotient+1,c
  3825  001562  500B               	movf	___lwdiv@divisor,w,c
  3826  001564  100C               	iorwf	___lwdiv@divisor+1,w,c
  3827  001566  E01E               	bz	l832
  3828  001568  0E01               	movlw	1
  3829  00156A  6E0D               	movwf	___lwdiv@counter,c
  3830  00156C  D005               	goto	l2481
  3831  00156E                     l2479:
  3832  00156E  FFFF               	dw	65535	; assembler added errata NOP
  3833  001570  90D8               	bcf	status,0,c
  3834  001572  360B               	rlcf	___lwdiv@divisor,f,c
  3835  001574  360C               	rlcf	___lwdiv@divisor+1,f,c
  3836  001576  2A0D               	incf	___lwdiv@counter,f,c
  3837  001578                     l2481:
  3838  001578  FFFF               	dw	65535	; assembler added errata NOP
  3839  00157A  AE0C               	btfss	___lwdiv@divisor+1,7,c
  3840  00157C  D7F8               	goto	l2479
  3841  00157E                     u2070:
  3842  00157E  FFFF               	dw	65535	; assembler added errata NOP
  3843  001580  90D8               	bcf	status,0,c
  3844  001582  360E               	rlcf	___lwdiv@quotient,f,c
  3845  001584  360F               	rlcf	___lwdiv@quotient+1,f,c
  3846  001586  500B               	movf	___lwdiv@divisor,w,c
  3847  001588  5C09               	subwf	___lwdiv@dividend,w,c
  3848  00158A  500C               	movf	___lwdiv@divisor+1,w,c
  3849  00158C  580A               	subwfb	___lwdiv@dividend+1,w,c
  3850  00158E  E305               	bnc	l2491
  3851  001590  500B               	movf	___lwdiv@divisor,w,c
  3852  001592  5E09               	subwf	___lwdiv@dividend,f,c
  3853  001594  500C               	movf	___lwdiv@divisor+1,w,c
  3854  001596  5A0A               	subwfb	___lwdiv@dividend+1,f,c
  3855  001598  800E               	bsf	___lwdiv@quotient,0,c
  3856  00159A                     l2491:
  3857  00159A  90D8               	bcf	status,0,c
  3858  00159C  320C               	rrcf	___lwdiv@divisor+1,f,c
  3859  00159E  320B               	rrcf	___lwdiv@divisor,f,c
  3860  0015A0  2E0D               	decfsz	___lwdiv@counter,f,c
  3861  0015A2  D7ED               	goto	u2070
  3862  0015A4                     l832:
  3863  0015A4  C00E  F009         	movff	___lwdiv@quotient,?___lwdiv
  3864  0015A8  C00F  F00A         	movff	___lwdiv@quotient+1,?___lwdiv+1
  3865  0015AC  0012               	return		;funcret
  3866  0015AE  FFFF               	dw	65535	; errata NOP
  3867  0015B0                     __end_of___lwdiv:
  3868                           	opt stack 0
  3869                           tosu	equ	0xFFF
  3870                           tosh	equ	0xFFE
  3871                           tosl	equ	0xFFD
  3872                           pclath	equ	0xFFA
  3873                           tblptru	equ	0xFF8
  3874                           tblptrh	equ	0xFF7
  3875                           tblptrl	equ	0xFF6
  3876                           tablat	equ	0xFF5
  3877                           intcon	equ	0xFF2
  3878                           intcon2	equ	0xFF1
  3879                           postinc0	equ	0xFEE
  3880                           wreg	equ	0xFE8
  3881                           indf2	equ	0xFDF
  3882                           fsr2h	equ	0xFDA
  3883                           fsr2l	equ	0xFD9
  3884                           status	equ	0xFD8
  3885                           
  3886 ;; *************** function _buffer_puts *****************
  3887 ;; Defined at:
  3888 ;;		line 56 in file "/home/roman/Dokumente/Sources/lc-meter/obj/../lib/buffer.c"
  3889 ;; Parameters:    Size  Location     Type
  3890 ;;  x               1   11[COMRAM] PTR const unsigned char 
  3891 ;;		 -> STR_1(6), 
  3892 ;; Auto vars:     Size  Location     Type
  3893 ;;		None
  3894 ;; Return value:  Size  Location     Type
  3895 ;;                  1    wreg      unsigned char 
  3896 ;; Registers used:
  3897 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3898 ;; Tracked objects:
  3899 ;;		On entry : 3F/0
  3900 ;;		On exit  : 3F/0
  3901 ;;		Unchanged: 0/0
  3902 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3903 ;;      Params:         1       0       0       0       0       0       0
  3904 ;;      Locals:         0       0       0       0       0       0       0
  3905 ;;      Temps:          0       0       0       0       0       0       0
  3906 ;;      Totals:         1       0       0       0       0       0       0
  3907 ;;Total ram usage:        1 bytes
  3908 ;; Hardware stack levels used:    1
  3909 ;; Hardware stack levels required when called:    3
  3910 ;; This function calls:
  3911 ;;		_buffer_putch
  3912 ;; This function is called by:
  3913 ;;		_measure_freq
  3914 ;; This function uses a non-reentrant model
  3915 ;;
  3916                           
  3917                           	psect	text21
  3918  001790                     __ptext21:
  3919                           	opt stack 0
  3920  001790                     _buffer_puts:
  3921                           	opt stack 0
  3922  001790  FFFF               	dw	65535	; assembler added errata NOP
  3923                           
  3924                           ; BSR set to: 0
  3925                           ;buffer.c: 57: while(*x) {
  3926                           
  3927                           ;incstack = 0
  3928  001792  D00A               	goto	l2533
  3929  001794                     l2529:
  3930                           
  3931                           ; BSR set to: 0
  3932                           ;buffer.c: 58: buffer_putch(*x);
  3933  001794  C00C  FFF6         	movff	buffer_puts@x,tblptrl
  3934  001798                     	if	1	;There is more than 1 active tblptr byte
  3935  001798  0E06               	movlw	high __smallconst
  3936  00179A  6EF7               	movwf	tblptrh,c
  3937  00179C                     	endif
  3938  00179C                     	if	0	;tblptru may be non-zero
  3939  00179C                     	endif
  3940  00179C                     	if	0	;tblptru may be non-zero
  3941  00179C                     	endif
  3942  00179C  0008               	tblrd		*
  3943  00179E  FFFF               	dw	65535	; errata NOP
  3944  0017A0  50F5               	movf	tablat,w,c
  3945  0017A2  EC29  F00B         	call	_buffer_putch
  3946                           
  3947                           ; BSR set to: 0
  3948                           ;buffer.c: 59: ++x;
  3949  0017A6  2A0C               	incf	buffer_puts@x,f,c
  3950  0017A8                     l2533:
  3951  0017A8  FFFF               	dw	65535	; assembler added errata NOP
  3952                           
  3953                           ; BSR set to: 0
  3954  0017AA  C00C  FFF6         	movff	buffer_puts@x,tblptrl
  3955  0017AE                     	if	1	;There is more than 1 active tblptr byte
  3956  0017AE  0E06               	movlw	high __smallconst
  3957  0017B0  6EF7               	movwf	tblptrh,c
  3958  0017B2                     	endif
  3959  0017B2                     	if	0	;tblptru may be non-zero
  3960  0017B2                     	endif
  3961  0017B2                     	if	0	;tblptru may be non-zero
  3962  0017B2                     	endif
  3963  0017B2  0008               	tblrd		*
  3964  0017B4  FFFF               	dw	65535	; errata NOP
  3965  0017B6  50F5               	movf	tablat,w,c
  3966  0017B8  E1ED               	bnz	l2529
  3967                           
  3968                           ; BSR set to: 0
  3969  0017BA  0012               	return		;funcret
  3970  0017BC  FFFF               	dw	65535	; errata NOP
  3971  0017BE                     __end_of_buffer_puts:
  3972                           	opt stack 0
  3973                           tosu	equ	0xFFF
  3974                           tosh	equ	0xFFE
  3975                           tosl	equ	0xFFD
  3976                           pclath	equ	0xFFA
  3977                           tblptru	equ	0xFF8
  3978                           tblptrh	equ	0xFF7
  3979                           tblptrl	equ	0xFF6
  3980                           tablat	equ	0xFF5
  3981                           intcon	equ	0xFF2
  3982                           intcon2	equ	0xFF1
  3983                           postinc0	equ	0xFEE
  3984                           wreg	equ	0xFE8
  3985                           indf2	equ	0xFDF
  3986                           fsr2h	equ	0xFDA
  3987                           fsr2l	equ	0xFD9
  3988                           status	equ	0xFD8
  3989                           
  3990 ;; *************** function _buffer_putch *****************
  3991 ;; Defined at:
  3992 ;;		line 30 in file "/home/roman/Dokumente/Sources/lc-meter/obj/../lib/buffer.c"
  3993 ;; Parameters:    Size  Location     Type
  3994 ;;  ch              1    wreg     unsigned char 
  3995 ;; Auto vars:     Size  Location     Type
  3996 ;;  ch              1   10[COMRAM] unsigned char 
  3997 ;; Return value:  Size  Location     Type
  3998 ;;                  1    wreg      unsigned char 
  3999 ;; Registers used:
  4000 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4001 ;; Tracked objects:
  4002 ;;		On entry : 0/0
  4003 ;;		On exit  : 3F/0
  4004 ;;		Unchanged: 0/0
  4005 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4006 ;;      Params:         0       0       0       0       0       0       0
  4007 ;;      Locals:         1       0       0       0       0       0       0
  4008 ;;      Temps:          2       0       0       0       0       0       0
  4009 ;;      Totals:         3       0       0       0       0       0       0
  4010 ;;Total ram usage:        3 bytes
  4011 ;; Hardware stack levels used:    1
  4012 ;; Hardware stack levels required when called:    2
  4013 ;; This function calls:
  4014 ;;		Nothing
  4015 ;; This function is called by:
  4016 ;;		_measure_freq
  4017 ;;		_buffer_puts
  4018 ;;		_format_number
  4019 ;; This function uses a non-reentrant model
  4020 ;;
  4021                           
  4022                           	psect	text22
  4023  001652                     __ptext22:
  4024                           	opt stack 0
  4025  001652                     _buffer_putch:
  4026                           	opt stack 0
  4027  001652  FFFF               	dw	65535	; assembler added errata NOP
  4028                           
  4029                           ; BSR set to: 0
  4030                           ;incstack = 0
  4031                           ;buffer_putch@ch stored from wreg
  4032  001654  6E0B               	movwf	buffer_putch@ch,c
  4033                           
  4034                           ;buffer.c: 31: if(16 - buffer.n <= 0)
  4035  001656  0E10               	movlw	16
  4036  001658  6E09               	movwf	??_buffer_putch& (0+255),c
  4037  00165A  6A0A               	clrf	(??_buffer_putch+1)& (0+255),c
  4038  00165C  0100               	movlb	0	; () banked
  4039  00165E  39B1               	swapf	(_buffer+16)& (0+255),w,b
  4040  001660  0B0F               	andlw	15
  4041  001662  5E09               	subwf	??_buffer_putch,f,c
  4042  001664  0E00               	movlw	0
  4043  001666  5A0A               	subwfb	??_buffer_putch+1,f,c
  4044  001668  BE0A               	btfsc	??_buffer_putch+1,7,c
  4045  00166A  D017               	goto	l162
  4046  00166C  500A               	movf	??_buffer_putch+1,w,c
  4047  00166E  E102               	bnz	l2433
  4048  001670  0409               	decf	??_buffer_putch,w,c
  4049  001672  E313               	bnc	l162
  4050  001674                     l2433:
  4051                           
  4052                           ; BSR set to: 0
  4053                           ;buffer.c: 33: buffer.x[buffer.n] = ch;
  4054  001674  39B1               	swapf	(_buffer+16)& (0+255),w,b
  4055  001676  0B0F               	andlw	15
  4056  001678  6E09               	movwf	??_buffer_putch& (0+255),c
  4057  00167A  5009               	movf	??_buffer_putch,w,c
  4058  00167C  0FA1               	addlw	low _buffer
  4059  00167E  6ED9               	movwf	fsr2l,c
  4060  001680  6ADA               	clrf	fsr2h,c
  4061  001682  C00B  FFDF         	movff	buffer_putch@ch,indf2
  4062                           
  4063                           ; BSR set to: 0
  4064                           ;buffer.c: 34: buffer.n++;
  4065  001686  39B1               	swapf	(_buffer+16)& (0+255),w,b
  4066  001688  0B0F               	andlw	15
  4067  00168A  6E09               	movwf	??_buffer_putch& (0+255),c
  4068  00168C  2A09               	incf	??_buffer_putch,f,c
  4069  00168E  3A09               	swapf	??_buffer_putch& (0+255),f,c
  4070  001690  51B1               	movf	(_buffer+16)& (0+255),w,b
  4071  001692  1809               	xorwf	??_buffer_putch& (0+255),w,c
  4072  001694  0B0F               	andlw	-241
  4073  001696  1809               	xorwf	??_buffer_putch& (0+255),w,c
  4074  001698  6FB1               	movwf	(_buffer+16)& (0+255),b
  4075  00169A                     l162:
  4076  00169A  FFFF               	dw	65535	; assembler added errata NOP
  4077                           
  4078                           ; BSR set to: 0
  4079  00169C  0012               	return		;funcret
  4080  00169E  FFFF               	dw	65535	; errata NOP
  4081  0016A0                     __end_of_buffer_putch:
  4082                           	opt stack 0
  4083                           tosu	equ	0xFFF
  4084                           tosh	equ	0xFFE
  4085                           tosl	equ	0xFFD
  4086                           pclath	equ	0xFFA
  4087                           tblptru	equ	0xFF8
  4088                           tblptrh	equ	0xFF7
  4089                           tblptrl	equ	0xFF6
  4090                           tablat	equ	0xFF5
  4091                           intcon	equ	0xFF2
  4092                           intcon2	equ	0xFF1
  4093                           postinc0	equ	0xFEE
  4094                           wreg	equ	0xFE8
  4095                           indf2	equ	0xFDF
  4096                           fsr2h	equ	0xFDA
  4097                           fsr2l	equ	0xFD9
  4098                           status	equ	0xFD8
  4099                           
  4100 ;; *************** function _buffer_init *****************
  4101 ;; Defined at:
  4102 ;;		line 10 in file "/home/roman/Dokumente/Sources/lc-meter/obj/../lib/buffer.c"
  4103 ;; Parameters:    Size  Location     Type
  4104 ;;		None
  4105 ;; Auto vars:     Size  Location     Type
  4106 ;;		None
  4107 ;; Return value:  Size  Location     Type
  4108 ;;                  1    wreg      void 
  4109 ;; Registers used:
  4110 ;;		wreg, status,2
  4111 ;; Tracked objects:
  4112 ;;		On entry : 0/0
  4113 ;;		On exit  : 3F/0
  4114 ;;		Unchanged: 0/0
  4115 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4116 ;;      Params:         0       0       0       0       0       0       0
  4117 ;;      Locals:         0       0       0       0       0       0       0
  4118 ;;      Temps:          0       0       0       0       0       0       0
  4119 ;;      Totals:         0       0       0       0       0       0       0
  4120 ;;Total ram usage:        0 bytes
  4121 ;; Hardware stack levels used:    1
  4122 ;; Hardware stack levels required when called:    2
  4123 ;; This function calls:
  4124 ;;		Nothing
  4125 ;; This function is called by:
  4126 ;;		_measure_freq
  4127 ;; This function uses a non-reentrant model
  4128 ;;
  4129                           
  4130                           	psect	text23
  4131  0017E6                     __ptext23:
  4132                           	opt stack 0
  4133  0017E6                     _buffer_init:
  4134                           	opt stack 0
  4135  0017E6  FFFF               	dw	65535	; assembler added errata NOP
  4136                           
  4137                           ;buffer.c: 11: buffer.p = 0;
  4138                           
  4139                           ; BSR set to: 0
  4140                           ;incstack = 0
  4141  0017E8  0EF0               	movlw	-16
  4142  0017EA  0100               	movlb	0	; () banked
  4143  0017EC  17B1               	andwf	(_buffer+16)& (0+255),f,b
  4144                           
  4145                           ;buffer.c: 12: buffer.n = 0;
  4146  0017EE  0E0F               	movlw	-241
  4147  0017F0  17B1               	andwf	(_buffer+16)& (0+255),f,b
  4148                           
  4149                           ; BSR set to: 0
  4150  0017F2  0C0F               	retlw	15	;funcret
  4151  0017F4  FFFF               	dw	65535	; errata NOP
  4152  0017F6                     __end_of_buffer_init:
  4153                           	opt stack 0
  4154                           tosu	equ	0xFFF
  4155                           tosh	equ	0xFFE
  4156                           tosl	equ	0xFFD
  4157                           pclath	equ	0xFFA
  4158                           tblptru	equ	0xFF8
  4159                           tblptrh	equ	0xFF7
  4160                           tblptrl	equ	0xFF6
  4161                           tablat	equ	0xFF5
  4162                           intcon	equ	0xFF2
  4163                           intcon2	equ	0xFF1
  4164                           postinc0	equ	0xFEE
  4165                           wreg	equ	0xFE8
  4166                           indf2	equ	0xFDF
  4167                           fsr2h	equ	0xFDA
  4168                           fsr2l	equ	0xFD9
  4169                           status	equ	0xFD8
  4170                           
  4171 ;; *************** function _delay10ms *****************
  4172 ;; Defined at:
  4173 ;;		line 64 in file "/home/roman/Dokumente/Sources/lc-meter/obj/../LC-meter.c"
  4174 ;; Parameters:    Size  Location     Type
  4175 ;;  period_10ms     1    wreg     unsigned char 
  4176 ;; Auto vars:     Size  Location     Type
  4177 ;;  period_10ms     1    0[COMRAM] unsigned char 
  4178 ;; Return value:  Size  Location     Type
  4179 ;;                  1    wreg      void 
  4180 ;; Registers used:
  4181 ;;		wreg
  4182 ;; Tracked objects:
  4183 ;;		On entry : 0/0
  4184 ;;		On exit  : 0/0
  4185 ;;		Unchanged: 0/0
  4186 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4187 ;;      Params:         0       0       0       0       0       0       0
  4188 ;;      Locals:         0       0       0       0       0       0       0
  4189 ;;      Temps:          0       0       0       0       0       0       0
  4190 ;;      Totals:         0       0       0       0       0       0       0
  4191 ;;Total ram usage:        0 bytes
  4192 ;; Hardware stack levels used:    1
  4193 ;; Hardware stack levels required when called:    2
  4194 ;; This function calls:
  4195 ;;		Nothing
  4196 ;; This function is called by:
  4197 ;;		_main
  4198 ;;		_calibrate
  4199 ;; This function uses a non-reentrant model
  4200 ;;
  4201                           
  4202                           	psect	text24
  4203  00180E                     __ptext24:
  4204                           	opt stack 0
  4205  00180E                     _delay10ms:
  4206                           	opt stack 0
  4207  00180E  FFFF               	dw	65535	; assembler added errata NOP
  4208                           
  4209                           ; BSR set to: 0
  4210                           ;incstack = 0
  4211  001810  0012               	return		;funcret
  4212  001812  FFFF               	dw	65535	; errata NOP
  4213  001814                     __end_of_delay10ms:
  4214                           	opt stack 0
  4215                           tosu	equ	0xFFF
  4216                           tosh	equ	0xFFE
  4217                           tosl	equ	0xFFD
  4218                           pclath	equ	0xFFA
  4219                           tblptru	equ	0xFF8
  4220                           tblptrh	equ	0xFF7
  4221                           tblptrl	equ	0xFF6
  4222                           tablat	equ	0xFF5
  4223                           intcon	equ	0xFF2
  4224                           intcon2	equ	0xFF1
  4225                           postinc0	equ	0xFEE
  4226                           wreg	equ	0xFE8
  4227                           indf2	equ	0xFDF
  4228                           fsr2h	equ	0xFDA
  4229                           fsr2l	equ	0xFD9
  4230                           status	equ	0xFD8
  4231                           
  4232 ;; *************** function ___lwtoft *****************
  4233 ;; Defined at:
  4234 ;;		line 28 in file "/opt/microchip/xc8/v1.45/sources/common/lwtoft.c"
  4235 ;; Parameters:    Size  Location     Type
  4236 ;;  c               2   65[COMRAM] unsigned int 
  4237 ;; Auto vars:     Size  Location     Type
  4238 ;;		None
  4239 ;; Return value:  Size  Location     Type
  4240 ;;                  3   65[COMRAM] float 
  4241 ;; Registers used:
  4242 ;;		wreg, status,2, status,0, cstack
  4243 ;; Tracked objects:
  4244 ;;		On entry : 0/0
  4245 ;;		On exit  : 0/0
  4246 ;;		Unchanged: 0/0
  4247 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4248 ;;      Params:         3       0       0       0       0       0       0
  4249 ;;      Locals:         0       0       0       0       0       0       0
  4250 ;;      Temps:          0       0       0       0       0       0       0
  4251 ;;      Totals:         3       0       0       0       0       0       0
  4252 ;;Total ram usage:        3 bytes
  4253 ;; Hardware stack levels used:    1
  4254 ;; Hardware stack levels required when called:    3
  4255 ;; This function calls:
  4256 ;;		___ftpack
  4257 ;; This function is called by:
  4258 ;;		_calibrate
  4259 ;;		_measure_capacitance
  4260 ;;		_measure_inductance
  4261 ;; This function uses a non-reentrant model
  4262 ;;
  4263                           
  4264                           	psect	text25
  4265  0017BE                     __ptext25:
  4266                           	opt stack 0
  4267  0017BE                     ___lwtoft:
  4268                           	opt stack 0
  4269  0017BE  FFFF               	dw	65535	; assembler added errata NOP
  4270                           
  4271                           ;incstack = 0
  4272  0017C0  C042  F009         	movff	___lwtoft@c,___ftpack@arg
  4273  0017C4  C043  F00A         	movff	___lwtoft@c+1,___ftpack@arg+1
  4274  0017C8  6A0B               	clrf	___ftpack@arg+2,c
  4275  0017CA  0E8E               	movlw	142
  4276  0017CC  6E0C               	movwf	___ftpack@exp,c
  4277  0017CE  0E00               	movlw	0
  4278  0017D0  6E0D               	movwf	___ftpack@sign,c
  4279  0017D2  ECED  F009         	call	___ftpack	;wreg free
  4280  0017D6  C009  F042         	movff	?___ftpack,?___lwtoft
  4281  0017DA  C00A  F043         	movff	?___ftpack+1,?___lwtoft+1
  4282  0017DE  C00B  F044         	movff	?___ftpack+2,?___lwtoft+2
  4283  0017E2  0012               	return		;funcret
  4284  0017E4  FFFF               	dw	65535	; errata NOP
  4285  0017E6                     __end_of___lwtoft:
  4286                           	opt stack 0
  4287                           tosu	equ	0xFFF
  4288                           tosh	equ	0xFFE
  4289                           tosl	equ	0xFFD
  4290                           pclath	equ	0xFFA
  4291                           tblptru	equ	0xFF8
  4292                           tblptrh	equ	0xFF7
  4293                           tblptrl	equ	0xFF6
  4294                           tablat	equ	0xFF5
  4295                           intcon	equ	0xFF2
  4296                           intcon2	equ	0xFF1
  4297                           postinc0	equ	0xFEE
  4298                           wreg	equ	0xFE8
  4299                           indf2	equ	0xFDF
  4300                           fsr2h	equ	0xFDA
  4301                           fsr2l	equ	0xFD9
  4302                           status	equ	0xFD8
  4303                           
  4304 ;; *************** function ___ftpack *****************
  4305 ;; Defined at:
  4306 ;;		line 62 in file "/opt/microchip/xc8/v1.45/sources/common/float.c"
  4307 ;; Parameters:    Size  Location     Type
  4308 ;;  arg             3    8[COMRAM] unsigned um
  4309 ;;  exp             1   11[COMRAM] unsigned char 
  4310 ;;  sign            1   12[COMRAM] unsigned char 
  4311 ;; Auto vars:     Size  Location     Type
  4312 ;;		None
  4313 ;; Return value:  Size  Location     Type
  4314 ;;                  3    8[COMRAM] float 
  4315 ;; Registers used:
  4316 ;;		wreg, status,2, status,0
  4317 ;; Tracked objects:
  4318 ;;		On entry : 0/0
  4319 ;;		On exit  : 0/0
  4320 ;;		Unchanged: 0/0
  4321 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4322 ;;      Params:         5       0       0       0       0       0       0
  4323 ;;      Locals:         0       0       0       0       0       0       0
  4324 ;;      Temps:          3       0       0       0       0       0       0
  4325 ;;      Totals:         8       0       0       0       0       0       0
  4326 ;;Total ram usage:        8 bytes
  4327 ;; Hardware stack levels used:    1
  4328 ;; Hardware stack levels required when called:    2
  4329 ;; This function calls:
  4330 ;;		Nothing
  4331 ;; This function is called by:
  4332 ;;		___ftadd
  4333 ;;		___ftdiv
  4334 ;;		___ftmul
  4335 ;;		___lwtoft
  4336 ;; This function uses a non-reentrant model
  4337 ;;
  4338                           
  4339                           	psect	text26
  4340  0013DA                     __ptext26:
  4341                           	opt stack 0
  4342  0013DA                     ___ftpack:
  4343                           	opt stack 0
  4344  0013DA  FFFF               	dw	65535	; assembler added errata NOP
  4345                           
  4346                           ;incstack = 0
  4347  0013DC  500C               	movf	___ftpack@exp,w,c
  4348  0013DE  E004               	bz	u1990
  4349  0013E0  5009               	movf	___ftpack@arg,w,c
  4350  0013E2  100A               	iorwf	___ftpack@arg+1,w,c
  4351  0013E4  100B               	iorwf	___ftpack@arg+2,w,c
  4352  0013E6  E10A               	bnz	l2445
  4353  0013E8                     u1990:
  4354  0013E8  6A09               	clrf	?___ftpack,c
  4355  0013EA  6A0A               	clrf	?___ftpack+1,c
  4356  0013EC  6A0B               	clrf	?___ftpack+2,c
  4357  0013EE  D03E               	goto	l602
  4358  0013F0                     l2443:
  4359  0013F0  FFFF               	dw	65535	; assembler added errata NOP
  4360  0013F2  2A0C               	incf	___ftpack@exp,f,c
  4361  0013F4  90D8               	bcf	status,0,c
  4362  0013F6  320B               	rrcf	___ftpack@arg+2,f,c
  4363  0013F8  320A               	rrcf	___ftpack@arg+1,f,c
  4364  0013FA  3209               	rrcf	___ftpack@arg,f,c
  4365  0013FC                     l2445:
  4366  0013FC  6A0E               	clrf	??___ftpack& (0+255),c
  4367  0013FE  6A0F               	clrf	(??___ftpack+1)& (0+255),c
  4368  001400  0EFE               	movlw	254
  4369  001402  140B               	andwf	___ftpack@arg+2,w,c
  4370  001404  6E10               	movwf	(??___ftpack+2)& (0+255),c
  4371  001406  500E               	movf	??___ftpack,w,c
  4372  001408  100F               	iorwf	??___ftpack+1,w,c
  4373  00140A  1010               	iorwf	??___ftpack+2,w,c
  4374  00140C  E00B               	bz	l2451
  4375  00140E  D7F0               	goto	l2443
  4376  001410                     l2447:
  4377  001410  FFFF               	dw	65535	; assembler added errata NOP
  4378  001412  2A0C               	incf	___ftpack@exp,f,c
  4379  001414  2A09               	incf	___ftpack@arg,f,c
  4380  001416  0E00               	movlw	0
  4381  001418  220A               	addwfc	___ftpack@arg+1,f,c
  4382  00141A  220B               	addwfc	___ftpack@arg+2,f,c
  4383  00141C  90D8               	bcf	status,0,c
  4384  00141E  320B               	rrcf	___ftpack@arg+2,f,c
  4385  001420  320A               	rrcf	___ftpack@arg+1,f,c
  4386  001422  3209               	rrcf	___ftpack@arg,f,c
  4387  001424                     l2451:
  4388  001424  6A0E               	clrf	??___ftpack& (0+255),c
  4389  001426  6A0F               	clrf	(??___ftpack+1)& (0+255),c
  4390  001428  500B               	movf	___ftpack@arg+2,w,c
  4391  00142A  6E10               	movwf	(??___ftpack+2)& (0+255),c
  4392  00142C  500E               	movf	??___ftpack,w,c
  4393  00142E  100F               	iorwf	??___ftpack+1,w,c
  4394  001430  1010               	iorwf	??___ftpack+2,w,c
  4395  001432  E007               	bz	l2455
  4396  001434  D7ED               	goto	l2447
  4397  001436                     l2453:
  4398  001436  FFFF               	dw	65535	; assembler added errata NOP
  4399  001438  060C               	decf	___ftpack@exp,f,c
  4400  00143A  90D8               	bcf	status,0,c
  4401  00143C  3609               	rlcf	___ftpack@arg,f,c
  4402  00143E  360A               	rlcf	___ftpack@arg+1,f,c
  4403  001440  360B               	rlcf	___ftpack@arg+2,f,c
  4404  001442                     l2455:
  4405  001442  BE0A               	btfsc	___ftpack@arg+1,7,c
  4406  001444  D003               	goto	u2030
  4407  001446  0E02               	movlw	2
  4408  001448  600C               	cpfslt	___ftpack@exp,c
  4409  00144A  D7F5               	goto	l2453
  4410  00144C                     u2030:
  4411  00144C  FFFF               	dw	65535	; assembler added errata NOP
  4412  00144E  A00C               	btfss	___ftpack@exp,0,c
  4413  001450  9E0A               	bcf	___ftpack@arg+1,7,c
  4414  001452  90D8               	bcf	status,0,c
  4415  001454  320C               	rrcf	___ftpack@exp,f,c
  4416  001456  500C               	movf	___ftpack@exp,w,c
  4417  001458  120B               	iorwf	___ftpack@arg+2,f,c
  4418  00145A  500D               	movf	___ftpack@sign,w,c
  4419  00145C  E001               	bz	l2469
  4420  00145E  8E0B               	bsf	___ftpack@arg+2,7,c
  4421  001460                     l2469:
  4422  001460  C009  F009         	movff	___ftpack@arg,?___ftpack
  4423  001464  C00A  F00A         	movff	___ftpack@arg+1,?___ftpack+1
  4424  001468  C00B  F00B         	movff	___ftpack@arg+2,?___ftpack+2
  4425  00146C                     l602:
  4426  00146C  FFFF               	dw	65535	; assembler added errata NOP
  4427  00146E  0012               	return		;funcret
  4428  001470  FFFF               	dw	65535	; errata NOP
  4429  001472                     __end_of___ftpack:
  4430                           	opt stack 0
  4431                           tosu	equ	0xFFF
  4432                           tosh	equ	0xFFE
  4433                           tosl	equ	0xFFD
  4434                           pclath	equ	0xFFA
  4435                           tblptru	equ	0xFF8
  4436                           tblptrh	equ	0xFF7
  4437                           tblptrl	equ	0xFF6
  4438                           tablat	equ	0xFF5
  4439                           intcon	equ	0xFF2
  4440                           intcon2	equ	0xFF1
  4441                           postinc0	equ	0xFEE
  4442                           wreg	equ	0xFE8
  4443                           indf2	equ	0xFDF
  4444                           fsr2h	equ	0xFDA
  4445                           fsr2l	equ	0xFD9
  4446                           status	equ	0xFD8
  4447                           
  4448 ;; *************** function _isr *****************
  4449 ;; Defined at:
  4450 ;;		line 84 in file "/home/roman/Dokumente/Sources/lc-meter/obj/../LC-meter.c"
  4451 ;; Parameters:    Size  Location     Type
  4452 ;;		None
  4453 ;; Auto vars:     Size  Location     Type
  4454 ;;		None
  4455 ;; Return value:  Size  Location     Type
  4456 ;;                  2   63[None  ] int 
  4457 ;; Registers used:
  4458 ;;		wreg, status,2, status,0, cstack
  4459 ;; Tracked objects:
  4460 ;;		On entry : 0/0
  4461 ;;		On exit  : 0/0
  4462 ;;		Unchanged: 0/0
  4463 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4464 ;;      Params:         0       0       0       0       0       0       0
  4465 ;;      Locals:         0       0       0       0       0       0       0
  4466 ;;      Temps:          1       0       0       0       0       0       0
  4467 ;;      Totals:         1       0       0       0       0       0       0
  4468 ;;Total ram usage:        1 bytes
  4469 ;; Hardware stack levels used:    1
  4470 ;; Hardware stack levels required when called:    1
  4471 ;; This function calls:
  4472 ;;		i2___lwdiv
  4473 ;; This function is called by:
  4474 ;;		Interrupt level 2
  4475 ;; This function uses a non-reentrant model
  4476 ;;
  4477                           
  4478                           	psect	intcode
  4479  000008                     __pintcode:
  4480                           	opt stack 0
  4481  000008                     _isr:
  4482                           	opt stack 0
  4483  000008  FFFF               	dw	65535	; assembler added errata NOP
  4484                           
  4485                           ;incstack = 0
  4486  00000A  826B               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  4487                           
  4488                           ;LC-meter.c: 85: if(PIR1bits.TMR2IF) {
  4489  00000C  A29E               	btfss	3998,1,c	;volatile
  4490  00000E  D041               	goto	i2l67
  4491                           
  4492                           ;LC-meter.c: 86: bres += 256;
  4493  000010  0E00               	movlw	0
  4494  000012  2664               	addwf	_bres,f,c	;volatile
  4495  000014  2A65               	incf	_bres+1,f,c	;volatile
  4496  000016  2266               	addwfc	_bres+2,f,c	;volatile
  4497  000018  2267               	addwfc	_bres+3,f,c	;volatile
  4498                           
  4499                           ;LC-meter.c: 87: if(bres >= ((unsigned long)((double)((20000000) / 4) / 1000))) {
  4500  00001A  5067               	movf	_bres+3,w,c	;volatile
  4501  00001C  1066               	iorwf	_bres+2,w,c	;volatile
  4502  00001E  E105               	bnz	i2u188_40
  4503  000020  0E88               	movlw	136
  4504  000022  5C64               	subwf	_bres,w,c	;volatile
  4505  000024  0E13               	movlw	19
  4506  000026  5865               	subwfb	_bres+1,w,c	;volatile
  4507  000028  E333               	bnc	i2l2347
  4508  00002A                     i2u188_40:
  4509                           
  4510                           ;LC-meter.c: 88: bres -= ((unsigned long)((double)((20000000) / 4) / 1000));
  4511  00002A  0E88               	movlw	136
  4512  00002C  5E64               	subwf	_bres,f,c	;volatile
  4513  00002E  0E13               	movlw	19
  4514  000030  5A65               	subwfb	_bres+1,f,c	;volatile
  4515  000032  0E00               	movlw	0
  4516  000034  5A66               	subwfb	_bres+2,f,c	;volatile
  4517  000036  5A67               	subwfb	_bres+3,f,c	;volatile
  4518                           
  4519                           ;LC-meter.c: 89: msecpart++;
  4520  000038  4A5F               	infsnz	_msecpart,f,c	;volatile
  4521  00003A  2A60               	incf	_msecpart+1,f,c	;volatile
  4522                           
  4523                           ;LC-meter.c: 90: led_cycle++;
  4524  00003C  4A5D               	infsnz	_led_cycle,f,c	;volatile
  4525  00003E  2A5E               	incf	_led_cycle+1,f,c	;volatile
  4526                           
  4527                           ;LC-meter.c: 92: LATC &= ~(1 << 2); LATC |= (!!(led_cycle >= 0 && led_cycle < led_interv
      +                          al / 6)) << 2;;
  4528  000040  948B               	bcf	3979,2,c	;volatile
  4529  000042  C068  F001         	movff	_led_interval,i2___lwdiv@dividend	;volatile
  4530  000046  C069  F002         	movff	_led_interval+1,i2___lwdiv@dividend+1	;volatile
  4531  00004A  6A04               	clrf	i2___lwdiv@divisor+1,c
  4532  00004C  0E06               	movlw	6
  4533  00004E  6E03               	movwf	i2___lwdiv@divisor,c
  4534  000050  ECD8  F00A         	call	i2___lwdiv	;wreg free
  4535  000054  5001               	movf	?i2___lwdiv,w,c
  4536  000056  5C5D               	subwf	_led_cycle,w,c	;volatile
  4537  000058  5002               	movf	?i2___lwdiv+1,w,c
  4538  00005A  585E               	subwfb	_led_cycle+1,w,c	;volatile
  4539  00005C  E203               	bc	i2u189_40
  4540  00005E  6A08               	clrf	??_isr& (0+255),c
  4541  000060  2A08               	incf	??_isr& (0+255),f,c
  4542  000062  D001               	goto	i2u190_48
  4543  000064                     i2u189_40:
  4544  000064  6A08               	clrf	??_isr& (0+255),c
  4545  000066                     i2u190_48:
  4546  000066  FFFF               	dw	65535	; assembler added errata NOP
  4547  000068  90D8               	bcf	status,0,c
  4548  00006A  3608               	rlcf	??_isr,f,c
  4549  00006C  90D8               	bcf	status,0,c
  4550  00006E  3408               	rlcf	??_isr,w,c
  4551  000070  128B               	iorwf	3979,f,c	;volatile
  4552                           
  4553                           ;LC-meter.c: 95: if(msecpart >= 1000) {
  4554  000072  0EE8               	movlw	232
  4555  000074  5C5F               	subwf	_msecpart,w,c	;volatile
  4556  000076  0E03               	movlw	3
  4557  000078  5860               	subwfb	_msecpart+1,w,c	;volatile
  4558  00007A  E30A               	bnc	i2l2347
  4559                           
  4560                           ;LC-meter.c: 97: seconds++;
  4561  00007C  0100               	movlb	0	; () banked
  4562  00007E  2BBA               	incf	_seconds& (0+255),f,b	;volatile
  4563  000080  0E00               	movlw	0
  4564  000082  23BB               	addwfc	(_seconds+1)& (0+255),f,b	;volatile
  4565  000084  23BC               	addwfc	(_seconds+2)& (0+255),f,b	;volatile
  4566  000086  23BD               	addwfc	(_seconds+3)& (0+255),f,b	;volatile
  4567                           
  4568                           ;LC-meter.c: 98: msecpart -= 1000;
  4569  000088  0EE8               	movlw	232
  4570  00008A  5E5F               	subwf	_msecpart,f,c	;volatile
  4571  00008C  0E03               	movlw	3
  4572  00008E  5A60               	subwfb	_msecpart+1,f,c	;volatile
  4573  000090                     i2l2347:
  4574                           
  4575                           ;LC-meter.c: 99: }
  4576                           ;LC-meter.c: 100: }
  4577                           ;LC-meter.c: 102: PIR1bits.TMR2IF = 0;
  4578  000090  929E               	bcf	3998,1,c	;volatile
  4579  000092                     i2l67:
  4580  000092  FFFF               	dw	65535	; assembler added errata NOP
  4581  000094  926B               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  4582  000096  0011               	retfie		f
  4583  000098  FFFF               	dw	65535	; errata NOP
  4584  00009A                     __end_of_isr:
  4585                           	opt stack 0
  4586                           tosu	equ	0xFFF
  4587                           tosh	equ	0xFFE
  4588                           tosl	equ	0xFFD
  4589                           pclath	equ	0xFFA
  4590                           tblptru	equ	0xFF8
  4591                           tblptrh	equ	0xFF7
  4592                           tblptrl	equ	0xFF6
  4593                           tablat	equ	0xFF5
  4594                           intcon	equ	0xFF2
  4595                           intcon2	equ	0xFF1
  4596                           postinc0	equ	0xFEE
  4597                           wreg	equ	0xFE8
  4598                           indf2	equ	0xFDF
  4599                           fsr2h	equ	0xFDA
  4600                           fsr2l	equ	0xFD9
  4601                           status	equ	0xFD8
  4602                           
  4603 ;; *************** function i2___lwdiv *****************
  4604 ;; Defined at:
  4605 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/lwdiv.c"
  4606 ;; Parameters:    Size  Location     Type
  4607 ;;  dividend        2    0[COMRAM] unsigned int 
  4608 ;;  divisor         2    2[COMRAM] unsigned int 
  4609 ;; Auto vars:     Size  Location     Type
  4610 ;;  __lwdiv         2    4[COMRAM] unsigned int 
  4611 ;;  __lwdiv         1    6[COMRAM] unsigned char 
  4612 ;; Return value:  Size  Location     Type
  4613 ;;                  2    0[COMRAM] unsigned int 
  4614 ;; Registers used:
  4615 ;;		wreg, status,2, status,0
  4616 ;; Tracked objects:
  4617 ;;		On entry : 0/0
  4618 ;;		On exit  : 0/0
  4619 ;;		Unchanged: 0/0
  4620 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4621 ;;      Params:         4       0       0       0       0       0       0
  4622 ;;      Locals:         3       0       0       0       0       0       0
  4623 ;;      Temps:          0       0       0       0       0       0       0
  4624 ;;      Totals:         7       0       0       0       0       0       0
  4625 ;;Total ram usage:        7 bytes
  4626 ;; Hardware stack levels used:    1
  4627 ;; This function calls:
  4628 ;;		Nothing
  4629 ;; This function is called by:
  4630 ;;		_isr
  4631 ;; This function uses a non-reentrant model
  4632 ;;
  4633                           
  4634                           	psect	text28
  4635  0015B0                     __ptext28:
  4636                           	opt stack 0
  4637  0015B0                     i2___lwdiv:
  4638                           	opt stack 0
  4639  0015B0  FFFF               	dw	65535	; assembler added errata NOP
  4640                           
  4641                           ;incstack = 0
  4642  0015B2  6A05               	clrf	i2___lwdiv@quotient,c
  4643  0015B4  6A06               	clrf	i2___lwdiv@quotient+1,c
  4644  0015B6  5003               	movf	i2___lwdiv@divisor,w,c
  4645  0015B8  1004               	iorwf	i2___lwdiv@divisor+1,w,c
  4646  0015BA  E01E               	bz	i2l832
  4647  0015BC  0E01               	movlw	1
  4648  0015BE  6E07               	movwf	i2___lwdiv@counter,c
  4649  0015C0  D005               	goto	i2l2315
  4650  0015C2                     i2l2313:
  4651  0015C2  FFFF               	dw	65535	; assembler added errata NOP
  4652  0015C4  90D8               	bcf	status,0,c
  4653  0015C6  3603               	rlcf	i2___lwdiv@divisor,f,c
  4654  0015C8  3604               	rlcf	i2___lwdiv@divisor+1,f,c
  4655  0015CA  2A07               	incf	i2___lwdiv@counter,f,c
  4656  0015CC                     i2l2315:
  4657  0015CC  FFFF               	dw	65535	; assembler added errata NOP
  4658  0015CE  AE04               	btfss	i2___lwdiv@divisor+1,7,c
  4659  0015D0  D7F8               	goto	i2l2313
  4660  0015D2                     i2u185_40:
  4661  0015D2  FFFF               	dw	65535	; assembler added errata NOP
  4662  0015D4  90D8               	bcf	status,0,c
  4663  0015D6  3605               	rlcf	i2___lwdiv@quotient,f,c
  4664  0015D8  3606               	rlcf	i2___lwdiv@quotient+1,f,c
  4665  0015DA  5003               	movf	i2___lwdiv@divisor,w,c
  4666  0015DC  5C01               	subwf	i2___lwdiv@dividend,w,c
  4667  0015DE  5004               	movf	i2___lwdiv@divisor+1,w,c
  4668  0015E0  5802               	subwfb	i2___lwdiv@dividend+1,w,c
  4669  0015E2  E305               	bnc	i2l2325
  4670  0015E4  5003               	movf	i2___lwdiv@divisor,w,c
  4671  0015E6  5E01               	subwf	i2___lwdiv@dividend,f,c
  4672  0015E8  5004               	movf	i2___lwdiv@divisor+1,w,c
  4673  0015EA  5A02               	subwfb	i2___lwdiv@dividend+1,f,c
  4674  0015EC  8005               	bsf	i2___lwdiv@quotient,0,c
  4675  0015EE                     i2l2325:
  4676  0015EE  90D8               	bcf	status,0,c
  4677  0015F0  3204               	rrcf	i2___lwdiv@divisor+1,f,c
  4678  0015F2  3203               	rrcf	i2___lwdiv@divisor,f,c
  4679  0015F4  2E07               	decfsz	i2___lwdiv@counter,f,c
  4680  0015F6  D7ED               	goto	i2u185_40
  4681  0015F8                     i2l832:
  4682  0015F8  C005  F001         	movff	i2___lwdiv@quotient,?i2___lwdiv
  4683  0015FC  C006  F002         	movff	i2___lwdiv@quotient+1,?i2___lwdiv+1
  4684  001600  0012               	return		;funcret
  4685  001602  FFFF               	dw	65535	; errata NOP
  4686  001604                     __end_ofi2___lwdiv:
  4687                           	opt stack 0
  4688                           tosu	equ	0xFFF
  4689                           tosh	equ	0xFFE
  4690                           tosl	equ	0xFFD
  4691                           pclath	equ	0xFFA
  4692                           tblptru	equ	0xFF8
  4693                           tblptrh	equ	0xFF7
  4694                           tblptrl	equ	0xFF6
  4695                           tablat	equ	0xFF5
  4696                           intcon	equ	0xFF2
  4697                           intcon2	equ	0xFF1
  4698                           postinc0	equ	0xFEE
  4699                           wreg	equ	0xFE8
  4700                           indf2	equ	0xFDF
  4701                           fsr2h	equ	0xFDA
  4702                           fsr2l	equ	0xFD9
  4703                           status	equ	0xFD8
  4704                           tosu	equ	0xFFF
  4705                           tosh	equ	0xFFE
  4706                           tosl	equ	0xFFD
  4707                           pclath	equ	0xFFA
  4708                           tblptru	equ	0xFF8
  4709                           tblptrh	equ	0xFF7
  4710                           tblptrl	equ	0xFF6
  4711                           tablat	equ	0xFF5
  4712                           intcon	equ	0xFF2
  4713                           intcon2	equ	0xFF1
  4714                           postinc0	equ	0xFEE
  4715                           wreg	equ	0xFE8
  4716                           indf2	equ	0xFDF
  4717                           fsr2h	equ	0xFDA
  4718                           fsr2l	equ	0xFD9
  4719                           status	equ	0xFD8
  4720                           
  4721                           	psect	text29
  4722  000000                     __ptext29:
  4723                           	opt stack 0
  4724                           tosu	equ	0xFFF
  4725                           tosh	equ	0xFFE
  4726                           tosl	equ	0xFFD
  4727                           pclath	equ	0xFFA
  4728                           tblptru	equ	0xFF8
  4729                           tblptrh	equ	0xFF7
  4730                           tblptrl	equ	0xFF6
  4731                           tablat	equ	0xFF5
  4732                           intcon	equ	0xFF2
  4733                           intcon2	equ	0xFF1
  4734                           postinc0	equ	0xFEE
  4735                           wreg	equ	0xFE8
  4736                           indf2	equ	0xFDF
  4737                           fsr2h	equ	0xFDA
  4738                           fsr2l	equ	0xFD9
  4739                           status	equ	0xFD8
  4740                           
  4741                           	psect	rparam
  4742  0000                     tosu	equ	0xFFF
  4743                           tosh	equ	0xFFE
  4744                           tosl	equ	0xFFD
  4745                           pclath	equ	0xFFA
  4746                           tblptru	equ	0xFF8
  4747                           tblptrh	equ	0xFF7
  4748                           tblptrl	equ	0xFF6
  4749                           tablat	equ	0xFF5
  4750                           intcon	equ	0xFF2
  4751                           intcon2	equ	0xFF1
  4752                           postinc0	equ	0xFEE
  4753                           wreg	equ	0xFE8
  4754                           indf2	equ	0xFDF
  4755                           fsr2h	equ	0xFDA
  4756                           fsr2l	equ	0xFD9
  4757                           status	equ	0xFD8
  4758                           
  4759                           	psect	temp
  4760  00006B                     btemp:
  4761                           	opt stack 0
  4762  00006B                     	ds	1
  4763  0000                     int$flags	set	btemp
  4764  0000                     wtemp6	set	btemp+1
  4765                           tosu	equ	0xFFF
  4766                           tosh	equ	0xFFE
  4767                           tosl	equ	0xFFD
  4768                           pclath	equ	0xFFA
  4769                           tblptru	equ	0xFF8
  4770                           tblptrh	equ	0xFF7
  4771                           tblptrl	equ	0xFF6
  4772                           tablat	equ	0xFF5
  4773                           intcon	equ	0xFF2
  4774                           intcon2	equ	0xFF1
  4775                           postinc0	equ	0xFEE
  4776                           wreg	equ	0xFE8
  4777                           indf2	equ	0xFDF
  4778                           fsr2h	equ	0xFDA
  4779                           fsr2l	equ	0xFD9
  4780                           status	equ	0xFD8


Data Sizes:
    Strings     6
    Constant    57
    Data        1
    BSS         44
    Persistent  9
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     84     106
    BANK0           128     33      65
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    format_number@fn	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> buffer_putch(), 

    buffer_puts@x	PTR const unsigned char  size(1) Largest target is 6
		 -> STR_1(CODE[6]), 


Critical Paths under _main in COMRAM

    _main->_measure_capacitance
    _measure_inductance->___lwtoft
    _measure_capacitance->___lwtoft
    ___ftsub->___ftmul
    ___ftadd->___ftpack
    ___ftmul->___ftdiv
    ___ftdiv->___ftpack
    _calibrate->___lwtoft
    _measure_freq->_format_number
    _format_number->___lwdiv
    _buffer_puts->_buffer_putch
    ___lwtoft->_measure_freq

Critical Paths under _isr in COMRAM

    _isr->i2___lwdiv

Critical Paths under _main in BANK0

    _main->_measure_inductance

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _isr in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0   68842
                                             83 COMRAM     1     1      0
                          _calibrate
                          _delay10ms
                _measure_capacitance
                 _measure_inductance
                    _print_indicator
                        _timer0_init
                        _timer2_init
 ---------------------------------------------------------------------------------
 (1) _timer2_init                                          4     4      0      90
                                              8 COMRAM     4     4      0
 ---------------------------------------------------------------------------------
 (1) _timer0_init                                         11    11      0     273
                                              8 COMRAM    11    11      0
 ---------------------------------------------------------------------------------
 (1) _print_indicator                                      1     1      0       0
 ---------------------------------------------------------------------------------
 (1) _measure_inductance                                  33    33      0   30987
                                              0 BANK0     33    33      0
                            ___ftdiv
                             ___ftge
                            ___ftmul
                            ___ftsub
                            ___fttol
                           ___lwtoft
                       _measure_freq
                      _print_reading
                         _print_unit
 ---------------------------------------------------------------------------------
 (1) _measure_capacitance                                 15    15      0   30681
                                             68 COMRAM    15    15      0
                            ___ftdiv
                             ___ftge
                            ___ftmul
                            ___ftsub
                            ___fttol
                           ___lwtoft
                       _measure_freq
                      _print_reading
                         _print_unit
 ---------------------------------------------------------------------------------
 (2) _print_unit                                           1     1      0       0
 ---------------------------------------------------------------------------------
 (2) _print_reading                                        2     0      2     180
                                              8 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) ___fttol                                             15    11      4    1041
                                              8 COMRAM    15    11      4
 ---------------------------------------------------------------------------------
 (2) ___ftsub                                              6     0      6    6374
                                             46 COMRAM     6     0      6
                            ___ftadd
                            ___ftmul (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftadd                                             12     6      6    4998
                                             16 COMRAM    12     6      6
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___ftmul                                             15     9      6    8247
                                             31 COMRAM    15     9      6
                            ___ftadd (ARG)
                            ___ftdiv (ARG)
                           ___ftpack
                           ___ftpack (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftge                                               9     3      6    2478
                                              8 COMRAM     9     3      6
 ---------------------------------------------------------------------------------
 (2) ___ftdiv                                             15     9      6    5139
                                             16 COMRAM    15     9      6
                           ___ftpack
 ---------------------------------------------------------------------------------
 (1) _calibrate                                            1     1      0    6746
                           ___lwtoft
                          _delay10ms
                       _measure_freq
 ---------------------------------------------------------------------------------
 (2) _measure_freq                                         5     3      2    3282
                                             60 COMRAM     5     3      2
                        _buffer_init
                        _buffer_puts
                      _format_number
                       _print_buffer
                     _timer0_read_ps
 ---------------------------------------------------------------------------------
 (3) _timer0_read_ps                                       7     5      2     167
                                              8 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (3) _print_buffer                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _format_number                                       45    39      6    2864
                                             15 COMRAM    45    39      6
                            ___lwdiv
                            ___lwmod
                       _buffer_putch *
 ---------------------------------------------------------------------------------
 (4) ___lwmod                                              5     1      4     552
                                              8 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (4) ___lwdiv                                              7     3      4     671
                                              8 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (3) _buffer_puts                                          1     0      1     186
                                             11 COMRAM     1     0      1
                       _buffer_putch
 ---------------------------------------------------------------------------------
 (4) _buffer_putch                                         3     3      0      31
                                              8 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (3) _buffer_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _delay10ms                                            1     1      0       0
 ---------------------------------------------------------------------------------
 (2) ___lwtoft                                             3     0      3    3464
                                             65 COMRAM     3     0      3
                           ___ftpack
                       _measure_freq (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftpack                                             8     3      5    2893
                                              8 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _isr                                                  1     1      0     214
                                              7 COMRAM     1     1      0
                          i2___lwdiv
 ---------------------------------------------------------------------------------
 (6) i2___lwdiv                                            7     3      4     214
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _calibrate
     ___lwtoft
       ___ftpack
       _measure_freq (ARG)
         _buffer_init
         _buffer_puts
           _buffer_putch
         _format_number
           ___lwdiv
           ___lwmod
           _buffer_putch *
         _print_buffer
         _timer0_read_ps
     _delay10ms
     _measure_freq
       _buffer_init
       _buffer_puts
         _buffer_putch
       _format_number
         ___lwdiv
         ___lwmod
         _buffer_putch *
       _print_buffer
       _timer0_read_ps
   _delay10ms
   _measure_capacitance
     ___ftdiv
       ___ftpack
     ___ftge
     ___ftmul
       ___ftadd (ARG)
         ___ftpack
       ___ftdiv (ARG)
         ___ftpack
       ___ftpack (ARG)
       ___ftpack (ARG)
     ___ftsub
       ___ftadd
         ___ftpack
       ___ftmul (ARG)
         ___ftadd (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___ftpack (ARG)
     ___fttol
     ___lwtoft
       ___ftpack
       _measure_freq (ARG)
         _buffer_init
         _buffer_puts
           _buffer_putch
         _format_number
           ___lwdiv
           ___lwmod
           _buffer_putch *
         _print_buffer
         _timer0_read_ps
     _measure_freq
       _buffer_init
       _buffer_puts
         _buffer_putch
       _format_number
         ___lwdiv
         ___lwmod
         _buffer_putch *
       _print_buffer
       _timer0_read_ps
     _print_reading
     _print_unit
   _measure_inductance
     ___ftdiv
       ___ftpack
     ___ftge
     ___ftmul
       ___ftadd (ARG)
         ___ftpack
       ___ftdiv (ARG)
         ___ftpack
       ___ftpack (ARG)
       ___ftpack (ARG)
     ___ftsub
       ___ftadd
         ___ftpack
       ___ftmul (ARG)
         ___ftadd (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___ftpack (ARG)
     ___fttol
     ___lwtoft
       ___ftpack
       _measure_freq (ARG)
         _buffer_init
         _buffer_puts
           _buffer_putch
         _format_number
           ___lwdiv
           ___lwmod
           _buffer_putch *
         _print_buffer
         _timer0_read_ps
     _measure_freq
       _buffer_init
       _buffer_puts
         _buffer_putch
       _format_number
         ___lwdiv
         ___lwmod
         _buffer_putch *
       _print_buffer
       _timer0_read_ps
     _print_reading
     _print_unit
   _print_indicator
   _timer0_init
   _timer2_init

 _isr (ROOT)
   i2___lwdiv

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      17        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80     21      41       5       50.8%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     54      6A       1       84.1%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      AB      15        0.0%
DATA                 0      0      AB       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Thu Jul  2 17:31:50 2020

                                                                  _F1 0061  
                                                                  _F2 0058  
                                                                  _F3 0055  
                                                         __CFG_BOR$ON 000000  
                                                  i2___lwdiv@dividend 0001  
                                                        ___ftadd@exp1 001C  
                                                        ___ftadd@exp2 001B  
                                                        ___ftadd@sign 001A  
                                                                 l201 11AE  
                                                                 l162 169A  
                                                                 l602 146C  
                                                                 l286 1610  
                                                                 l702 1556  
                                                                 l708 10DE  
                                                                 l662 0E0E  
                                                                 l832 15A4  
                                                                 l729 1278  
                                                                 l842 16DC  
                                                                 l693 1336  
                                                                 l685 0DAE  
                                                                 l694 12BC  
                                                                 l686 0DC2  
                                                                 l696 1306  
                                                        __CFG_CPD$OFF 000000  
                                                                 _isr 0008  
                                                        __CFG_BORV$27 000000  
                                                                 tosl 000FFD  
                                                                 wreg 000FE8  
                                                  timer0_read_ps@prev 000D  
                                                        __CFG_LVP$OFF 000000  
                                                        ___ftdiv@cntr 001A  
                                                        ___ftdiv@sign 001F  
                                                        __CFG_WDT$OFF 000000  
                                                                l2211 13B6  
                                                                l2203 139C  
                                                                l2205 13A2  
                                                                l2501 16B8  
                                                                l2181 135C  
                                                                l2433 1674  
                                                                l2451 1424  
                                                                l2443 13F0  
                                                                l2507 16D2  
                                                                l2611 0D52  
                                                                l2195 1384  
                                                                l2187 136C  
                                                                l2179 1354  
                                                                l2453 1436  
                                                                l2445 13FC  
                                                                l2533 17A8  
                                                                l2613 0D5E  
                                                                l2197 138C  
                                                                l2189 1374  
                                                                l2455 1442  
                                                                l2447 1410  
                                                                l2551 1118  
                                                                l2623 0D8C  
                                                                l2615 0D66  
                                                                l2529 1794  
                                                                l2481 1578  
                                                                l2561 1158  
                                                                l2545 10F6  
                                                                l2705 12E0  
                                                                l2625 0D96  
                                                                l2491 159A  
                                                                l2563 115E  
                                                                l2723 1020  
                                                                l2635 0DE8  
                                                                l2469 1460  
                                                                l2741 1066  
                                                                l2813 1236  
                                                                l2901 0992  
                                                                l2479 156E  
                                                                l2751 1092  
                                                                l2727 1042  
                                                                l2583 0CF0  
                                                                l2911 09F0  
                                                                l2745 1078  
                                                                l2825 1268  
                                                                l2817 1240  
                                                                l2809 1224  
                                                                l2905 09BE  
                                                                l2499 16AE  
                                                                l2755 10A4  
                                                                l2819 124C  
                                                                l2589 0D16  
                                                                l2909 09E8  
                                                                l2687 129A  
                                                                l2775 151A  
                                                                l2767 16F6  
                                                                l2871 0C20  
                                                                l2785 1554  
                                                                l2793 11D8  
                                                                l2857 0A96  
                                                                l2779 153A  
                                                                l2867 0BF4  
                                                                l2875 0C4A  
                                                                l2891 0692  
                                                                l2983 0FE4  
                                                                l2975 0FCC  
                                                                l2985 0FE8  
                                                                l2969 0FBA  
                                                                l2979 0FDA  
                                                                ?_isr 0001  
                                                                STR_1 063A  
                                                                u2100 16BE  
                                                                u2030 144C  
                                                                u2130 162C  
                                                                u2211 0CB4  
                                                                u2221 0CC8  
                                                                u2070 157E  
                                                                u2310 0D32  
                                                                _LATC 000F8B  
                                                                u2208 1180  
                                                                u2209 11A8  
                                                                u2250 0CE2  
                                                                _CCal 00BE  
                                                                u2180 1172  
                                                                u2500 1038  
                                                                u2421 1290  
                                                                u2350 0D6C  
                                                                u2280 0D08  
                                                                u1720 13C2  
                                                                u2441 12AA  
                                                                u2450 12B2  
                                                                u2380 0D9C  
                                                                u1740 1780  
                                                                u2630 1252  
                                                                u2471 1016  
                                                                _PIE1 000F9D  
                                                                u1738 13C6  
                                                                u2491 1030  
                                                                u2571 11C4  
                                                                u2580 11CC  
                                                                u2590 11F8  
                                                                u1758 1784  
                                                                u2807 0E46  
                                                                u2817 0E56  
                                                                u2827 0E66  
                                                                u2595 11EE  
                                                                u2837 0E76  
                                                                u1990 13E8  
                                                                u2847 0E86  
                                                                u2857 0E96  
                                                                u2867 0EA6  
                                                                u2787 0E20  
                                                                u2877 0EB6  
                                                                u2797 0E36  
                                                                u2887 0EC6  
                                                                _PIR1 000F9E  
                                                                i2l67 0092  
                                                                _TMR0 000FD6  
                                                                _TMR2 000FCC  
                                                        __CFG_PWRT$ON 000000  
                                                                _bres 0064  
                                                                _main 0F16  
                                                        ___ftpack@arg 0009  
                                                                _mode 006A  
                                                        ___ftpack@exp 000C  
                                                  i2___lwdiv@quotient 0005  
                                                                fsr2h 000FDA  
                                                                indf2 000FDF  
                                                                fsr2l 000FD9  
                                                                btemp 006B  
                                          __end_of_measure_inductance 0A46  
                                                                start 009A  
                                                 timer0_read_ps@count 000E  
                                                      ??_buffer_putch 0009  
                                                   _format_number$384 0038  
                                                        ___ftmul@cntr 002D  
                                                        ___param_bank 000000  
                                                        ___ftmul@sign 002E  
                                                     _timer0_init$500 000A  
                                                     _timer0_init$501 000C  
                                                     _timer0_init$502 000E  
                                                     _timer0_init$503 0010  
                                                        buffer_puts@x 000C  
                                                        ___fttol@exp1 0017  
                                                        ___fttol@lval 0013  
                                                               ??_isr 0008  
                                                       __CFG_OSCS$OFF 000000  
                                                               ?_main 0001  
                                                     __end_of___ftadd 0E14  
                                                     __end_of___ftdiv 133C  
                                                     __end_of___ftmul 10E4  
                                                               _T0CON 000FD5  
                                                     __end_of___ftsub 1722  
                                                     __end_of___fttol 127E  
                                                               _T2CON 000FCA  
                                                     __end_of___lwdiv 15B0  
                                                     __end_of___lwmod 16E8  
                                                               i2l832 15F8  
                                                               _PORTC 000F82  
                                                               _TRISA 000F92  
                                                               _TRISB 000F93  
                                                               _TRISC 000F94  
                                                       __CFG_WRT0$OFF 000000  
                                                       __CFG_WRT1$OFF 000000  
                                                       __CFG_WRT2$OFF 000000  
                                                       __CFG_WRT3$OFF 000000  
                                                      __CFG_EBTR0$OFF 000000  
                                                      __CFG_EBTR1$OFF 000000  
                                                      __CFG_EBTR2$OFF 000000  
                                                        main@new_mode 0054  
                                                      __CFG_EBTR3$OFF 000000  
                                                       __CFG_STVR$OFF 000000  
                                                       __CFG_WRTB$OFF 000000  
                                                       __CFG_WRTC$OFF 000000  
                                                       __CFG_WRTD$OFF 000000  
                                                      __CFG_EBTRB$OFF 000000  
                                                               _blink 005B  
                                                               _msecs 00B6  
                                                       ___ftpack@sign 000D  
                                                               pclath 000FFA  
                                                               tablat 000FF5  
                                                     format_number@di 003B  
                                                     format_number@fn 0010  
                                                               status 000FD8  
                                                               wtemp6 006C  
                                                     ??_print_reading 000B  
                                                  __size_ofi2___lwdiv 0054  
                                                     __initialization 1722  
                                                        __end_of_main 1004  
                                                       ?_measure_freq 003D  
                                                      __CFG_OSC$HSPLL 000000  
                                                              ??_main 0054  
                                                       ___fttol@sign1 0012  
                                                       __activetblptr 000002  
                                              __size_of_format_number 00CE  
                                                     __CFG_CCP2MUX$ON 000000  
                                                    __end_of___ftpack 1472  
                                                              i2l2313 15C2  
                                                              i2l2315 15CC  
                                                              i2l2325 15EE  
                                                              i2l2347 0090  
                                                              _INTCON 000FF2  
                                                    __end_of___lwtoft 17E6  
                                                              ___ftge 14FA  
                                                           ??___ftadd 0017  
                                                           ??___ftdiv 0017  
                                                           ??___ftmul 0026  
                                                        ?_timer0_init 0001  
                                                           ??___ftsub 0035  
                                                __size_of_buffer_init 0010  
                                                           ??___fttol 000D  
                                                      ??_measure_freq 003F  
                                                           ??___lwdiv 000D  
                                                        ?_timer2_init 0001  
                                                           ??___lwmod 000D  
                                                              _buffer 00A1  
                                                __size_of_buffer_puts 002E  
                                                              clear_0 173A  
                                                              clear_1 1746  
                                               ___ftmul@f3_as_product 002A  
                                                        __pdataCOMRAM 006A  
                                                  timer2_init@ps_mode 000C  
                                                   __end_ofi2___lwdiv 1604  
                                                        __mediumconst 0000  
                                                              tblptrh 000FF7  
                                                              tblptrl 000FF6  
                                                              tblptru 000FF8  
                                                __end_of_buffer_putch 16A0  
                                                    format_number@buf 0018  
                                                    format_number@pad 0015  
                                             _measure_inductance$1281 0086  
                                             _measure_inductance$1282 0093  
                                             _measure_inductance$1283 0096  
                                             _measure_inductance$1284 0099  
                                             _measure_inductance$1285 0089  
                                             _measure_inductance$1286 008C  
                                             _measure_inductance$1287 008F  
                                                    __end_ofexp@coeff 061F  
                                                    __end_oflog@coeff 063A  
                                                          __accesstop 0080  
                                             __end_of__initialization 174C  
                                                          ___ftadd@f1 0011  
                                                          ___ftadd@f2 0014  
                                                       _format_number 10E4  
                                                          ___ftge@ff1 0009  
                                                          ___ftge@ff2 000C  
                                                       ___rparam_used 000001  
                                                          ___ftdiv@f1 0011  
                                                          ___ftdiv@f2 0014  
                                                          ___ftdiv@f3 001B  
                                              measure_capacitance@Cin 0051  
                                                          ___ftmul@f1 0020  
                                                          ___ftmul@f2 0023  
                                        __size_of_measure_capacitance 025C  
                                              measure_capacitance@var 004F  
                                                          ___ftsub@f1 002F  
                                                          ___ftsub@f2 0032  
                                                          ___fttol@f1 0009  
                                                      __pcstackCOMRAM 0001  
                                                  __size_of_calibrate 0088  
                                                  __size_of_delay10ms 0006  
                                                          ___lwtoft@c 0042  
                                                      buffer_putch@ch 000B  
                                                          __pbssBANK0 00A1  
                                                      ?_format_number 0010  
                                                      print_unit@unit 0001  
                                                          __pnvCOMRAM 0064  
                                            __size_of_print_indicator 0006  
                                                             ?___ftge 0009  
                                             __size_of_timer0_read_ps 004E  
                                                           ?___ftpack 0009  
                                                  _measure_inductance 0642  
                                                           ?___lwtoft 0042  
                                                             _INTCON2 000FF1  
                                                 ?_measure_inductance 0001  
                                                   __end_of_calibrate 14FA  
                                                   __end_of_delay10ms 1814  
                                                __end_of_measure_freq 0F16  
                                                             __Hparam 0000  
                                                             __Lparam 0000  
                                                ??_measure_inductance 0045  
                                                     __size_of___ftge 0062  
                                                             ___ftadd 0CA2  
                                                             ___ftdiv 127E  
                                                             ___ftmul 1004  
                                                             ___ftsub 16E8  
                                                             ___fttol 11B2  
                                                             ___lwdiv 155C  
                                                             ___lwmod 16A0  
                                                        __psmallconst 0600  
                                                             __pcinit 1722  
                                                          ??___ftpack 000E  
                                                             __ramtop 0600  
                                                __size_of_timer0_init 009E  
                                                             __ptext0 0F16  
                                                             __ptext1 175A  
                                                             __ptext2 133C  
                                                             __ptext3 17F6  
                                                             __ptext4 0642  
                                                             __ptext5 0A46  
                                                             __ptext6 17FC  
                                                             __ptext7 1802  
                                                             __ptext8 11B2  
                                                             __ptext9 16E8  
                                                __size_of_timer2_init 0036  
                                               __size_of_buffer_putch 004E  
                                                          ??___lwtoft 0045  
                                                           _T0CONbits 000FD5  
                                                        __size_of_isr 0092  
                                                             _seconds 00BA  
                                                end_of_initialization 174C  
                                                     ??_format_number 0016  
                                                       __Lmediumconst 0000  
                                       measure_inductance@denominator 0083  
                                               __end_of_print_reading 1808  
                                                        _buffer_putch 1652  
                                                   format_number@base 0014  
                                                             postinc0 000FEE  
                                                   ??_print_indicator 0009  
                                                           _PORTCbits 000F82  
                                                          _print_unit 17FC  
                                                       ?_print_buffer 0001  
                                                 _measure_capacitance 0A46  
                                                        _led_interval 0068  
                                                   i2___lwdiv@divisor 0003  
                                                           i2___lwdiv 15B0  
                                                   i2___lwdiv@counter 0007  
                                                         ___ftdiv@exp 001E  
                                                       ??_buffer_init 0009  
                                                ?_measure_capacitance 0001  
                                                       ??_buffer_puts 000D  
                                             measure_capacitance@unit 004E  
                                                         ___ftmul@exp 0029  
                                              measure_inductance@unit 0092  
                                                      _timer0_read_ps 1604  
                                                      __end_of___ftge 155C  
                                                       __pidataCOMRAM 1816  
                                                      ??_print_buffer 0009  
                                                      format_number@i 003C  
                                                      format_number@n 0012  
                                                 start_initialization 1722  
                                               __size_of_measure_freq 0102  
                                                         __end_of_isr 009A  
                                                          ?i2___lwdiv 0001  
                                               ??_measure_capacitance 0045  
                                              __end_of_timer0_read_ps 1652  
                                                            ??___ftge 000F  
                                                        _measure_freq 0E14  
                                                 __end_of_buffer_init 17F6  
                                                 __end_of_buffer_puts 17BE  
                                            print_reading@measurement 0009  
                                                   __size_of___ftpack 0098  
                                                         ?_print_unit 0001  
                                                         __pbssCOMRAM 0055  
                                                   __size_of___lwtoft 0028  
                                                       __pcstackBANK0 0080  
                                                   measure_freq@count 0040  
                                                           _calibrate 1472  
                                                           _delay10ms 180E  
                                                           __pnvBANK0 00BE  
                                                    ___lwdiv@dividend 0009  
                                                     ?_timer0_read_ps 0009  
                                                           __pintcode 0008  
                                                            ?___ftadd 0011  
                                                            ?___ftdiv 0011  
                                                            ?___ftmul 0020  
                                                            ?___ftsub 002F  
                                                            ?___fttol 0009  
                                                            ?___lwdiv 0009  
                                                            ?___lwmod 0009  
                                                           _led_cycle 005D  
                                                         __smallconst 0600  
                                                    ___lwdiv@quotient 000E  
                                                         ??i2___lwdiv 0005  
                                                          ?_calibrate 0001  
                                                          ?_delay10ms 0001  
                                                     _print_indicator 17F6  
                                                __end_of_print_buffer 180E  
                                                 __size_of_print_unit 0006  
                                                            i2u190_48 0066  
                                                            i2u185_40 15D2  
                                                            _PIR1bits 000F9E  
                                                            i2u188_40 002A  
                                                            i2u189_40 0064  
                                                         _buffer_init 17E6  
                                                         _buffer_puts 1790  
                                         __size_of_measure_inductance 0404  
                                                       ??_timer0_init 0009  
                                                       ??_timer2_init 0009  
                                               measure_inductance@Lin 009E  
                                               measure_inductance@var 009C  
                                                format_number@padchar 003A  
                                               __end_of_format_number 11B2  
                                                            __Hrparam 0000  
                                                            __Lrparam 0000  
                                                    __size_of___ftadd 0172  
                                                    __size_of___ftdiv 00BE  
                                                    __size_of___ftmul 00E0  
                                                    __size_of___ftsub 003A  
                                                    __size_of___fttol 00CC  
                                                    __size_of___lwdiv 0054  
                                                    __size_of___lwmod 0048  
                                                            ___ftpack 13DA  
                                                       timer2_init@ps 000A  
                                                            ___lwtoft 17BE  
                                                 __end_of_timer0_init 13DA  
                                                 __end_of_timer2_init 1790  
                                                     ___lwdiv@divisor 000B  
                                                     ___lwdiv@counter 000D  
                                              __size_of_print_reading 0006  
                                                timer0_init@prescaler 0012  
                                                            __ptext10 0CA2  
                                                            __ptext11 1004  
                                                            __ptext20 155C  
                                                            __ptext12 14FA  
                                                            __ptext21 1790  
                                                            __ptext13 127E  
                                                            __ptext22 1652  
                                                            __ptext14 1472  
                                                            __ptext23 17E6  
                                                            __ptext15 0E14  
                                                            __ptext24 180E  
                                                            __ptext16 1604  
                                                            __ptext25 17BE  
                                                            __ptext17 1808  
                                                            __ptext26 13DA  
                                                            __ptext18 10E4  
                                                            __ptext19 16A0  
                                                            __ptext28 15B0  
                                                            __ptext29 0000  
                                             __end_of_print_indicator 17FC  
                                                         ??_calibrate 0045  
                                                       __size_of_main 00EE  
                                                         ??_delay10ms 0009  
                                                            _msecpart 005F  
                                                            _timer1of 00B2  
                                                            int$flags 006B  
                                                            exp@coeff 0601  
                                                            log@coeff 061F  
                                         measure_inductance@numerator 0080  
                                                        ??_print_unit 0009  
                                                          _INTCONbits 000FF2  
                                                            intlevel2 1814  
                                         __end_of_measure_capacitance 0CA2  
                                               __size_of_print_buffer 0006  
                                                    ___lwmod@dividend 0009  
                                                    ??_timer0_read_ps 000B  
                                                  __end_of_print_unit 1802  
                                                       _print_reading 1802  
                                                delay10ms@period_10ms 0001  
                                                         _timer0_init 133C  
                                                         _timer2_init 175A  
                                            _measure_capacitance$1280 004B  
                                            _measure_capacitance$1278 0045  
                                            _measure_capacitance$1279 0048  
                                                  timer0_init@ps_mode 0013  
                                                     ___lwmod@divisor 000B  
                                                     ___lwmod@counter 000D  
                                                        _print_buffer 1808  
                                             print_indicator@indicate 0001  
                                                    ?_print_indicator 0001  
                                                      ?_print_reading 0009  
                                                        ?_buffer_init 0001  
                                                        ?_buffer_puts 000C  
                                                       ?_buffer_putch 0001  
