ifeq ($(PROGRAM),)
PROGRAM ?= pictest
endif

VERSION_MAJOR = 0
VERSION_MINOR = 9
VERSION_PATCH = 1

COMPILER := htc

-include Makefile.vars

vpath $(BUILDDIR)

VERSION = $(VERSION_MAJOR).$(VERSION_MINOR).$(VERSION_PATCH)

CCVER = 9.83

PROGRAMFILES = C:/Program Files (x86)

OS = $(shell uname -o)
$(info OS: $(OS))
$(info OBJDIR: $(OBJDIR))
#CC = $(shell which picc 2>/dev/null)

ifeq ($(CCDIR),)
ifeq ($(OS),GNU/Linux)
CCDIR = /opt/hitech/picc/9.83
else
CCDIR = $(PROGRAMFILES)/HI-TECH Software/PICC/$(CCVER)
endif
endif

COMPILER_NAME = picc

ifneq ($(CCDIR),)
CC = "$(CCDIR)/bin/$(COMPILER_NAME)"
else
CC = $(COMPILER_NAME)
endif

#ifeq ($(strip $(CC)),)
#CC = picc
#endif
#
CPP = $(CCDIR)/bin/cpp
INCDIR = $(CCDIR)/include
#INCDIR := $(dir $(dir $(shell which picc)))/include

LD = $(CC)
#RM = del /f
DISTFILES = Makefile Makefile.htc Makefile.sdcc

OPT = space

#DEFINES += HI_TECH_C=1

COMMON_FLAGS += $($(PROGRAM)_DEFS)
SOURCES := $($(PROGRAM)_SOURCES)
P1OBJS = $(SOURCES:%.c=$(OBJDIR)%.p1)
ASSRCS = $(SOURCES:%.c=$(OBJDIR)%.as)

COMMON_FLAGS += -N127

#COMMON_FLAGS += --runtime="default,+clear,+init,-keep,+osccal,+download,-resetbits,-stackcall,+clib"
#COMMON_FLAGS += --runtime="default,-clear,+init,+keep,-osccal,+download,+resetbits,-stackcall,+clib"
COMMON_FLAGS += --runtime="default,+init,+osccal,+download,+stackcall,+clib"

ifeq ($(OPT),speed)
OPT_SPEED = ,+speed,-space,9
endif
ifeq ($(OPT),space)
OPT_SPEED = ,+speed,-space,9
endif

ifeq ($(BUILD_TYPE),debug)
DEBUG := 1
endif

ifeq ($(DEBUG),1)
COMMON_FLAGS += -G -V --debugger=pickit2
COMMON_FLAGS += --opt=debug
else
COMMON_FLAGS += --opt="default,+asm,-debug$(OPT_SPEED)"
endif

COMMON_FLAGS += --double=32 --float=24

COMMON_FLAGS += --warn=3
#COMMON_FLAGS += --codeoffset=$(CODEOFFSET)
LDFLAGS += --codeoffset=$(CODEOFFSET)

#COMMON_FLAGS += --mode=PRO

COMMON_FLAGS += --errformat="Error   [%n] %f; %l.%c %s"
#COMMON_FLAGS += --msgformat="Advisory[%n] %s"
#COMMON_FLAGS += --warnformat="Warning [%n] %f; %l.%c %s"

CPPFLAGS += $(DEFINES:%=-D%)

_CPPFLAGS += \
	-DVERSION_MAJOR=$(VERSION_MAJOR) \
	-DVERSION_MINOR=$(VERSION_MINOR) \
	-DVERSION_PATCH=$(VERSION_PATCH)

CFLAGS = -q --chip=$(chipl) $(COMMON_FLAGS)

_LDFLAGS += --summary="default,-psect,-class,+mem,-hex"

#LDFLAGS += --output="default,-inhx032"
LDFLAGS += --chip=$(chipl)
LDFLAGS +=  --asmlist

PM3CMD = "$$PROGRAMFILES"/Microchip/MPLAB\ IDE/Programmer\ Utilities/PM3Cmd/PM3Cmd

COFFILE = $(subst .hex,.cof,$(HEXFILE))

#-include Makefile.vars

.PHONY: all clean dist prototypes

all: $(BUILDDIR) $(OBJDIR) output

output: $(HEXFILE) #$(COFFILE)
	@for F in $(HEXFILE) $(COFFILE); do \
	  echo "Output file '$(C_RED)$$F$(C_OFF)' built..." 1>&2; \
	 done

$(HEXFILE): $(P1OBJS)
	$(RM) $(HEXFILE) $(COFFILE)
	$(LD) $(LDFLAGS) -m$(BUILDDIR)$(PROGRAM)_$(BUILD_TYPE)_$(MHZ)mhz_$(KBPS)kbps_$(SOFTKBPS)skbps.map -o$@ $^
	-(type cygpath 2>/dev/null >/dev/null && PATHTOOL="cygpath -w"; \
	 test -f "$$PWD/$(HEXFILE)" && { echo; echo "Got HEX file: `$${PATHTOOL:-echo} $$PWD/$(HEXFILE)`"; })

$(P1OBJS): $(OBJDIR)%.p1: %.c
	$(CC) --pass1 $(CFLAGS) $(CPPFLAGS) --outdir=$(OBJDIR:%/=%) $<
#	$(CC) --pass1 $(CFLAGS) $(CPPFLAGS) -o$(<:%.c=$(BUILDDIR)%_$(BUILD_TYPE)_$(MHZ)mhz_$(KBPS)kbps_$(SOFTKBPS)skbps.p1) $<

$(ASSRCS): $(OBJDIR)%.as: %.c
	$(CC) -S $(CFLAGS) $(CPPFLAGS) --outdir=$(OBJDIR:%/=%) $<



prototypes:
	cproto -DHI_TECH_C=1 -E '$(CPP)' $(CPPFLAGS) $(SOURCES) 2>/dev/null
ifneq ($(CCDIR),)
prototypes: CPPFLAGS += -I'$(CCDIR)/include'
endif


-include Makefile.common
